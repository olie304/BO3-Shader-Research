//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:44:11 2021
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float3 specColorTint;              // Offset:  160 Size:    12 [unused]
//   float baseNormalHeight;            // Offset:  172 Size:     4 [unused]
//   float2 glossRange;                 // Offset:  176 Size:     8 [unused]
//   float2 normalMapScale;             // Offset:  184 Size:     8 [unused]
//   float4 specularLobeRoughnessControl;// Offset:  192 Size:    16 [unused]
//   float2 lobeWeighting;              // Offset:  208 Size:     8 [unused]
//   float4 controlVar0;                // Offset:  224 Size:    16
//   float4 controlVar1;                // Offset:  240 Size:    16
//   float4 shoreUVControl;             // Offset:  256 Size:    16 [unused]
//   float reflectionGloss;             // Offset:  272 Size:     4
//   float probeReflectionLevel;        // Offset:  276 Size:     4
//   float2 horizonControl;             // Offset:  280 Size:     8
//   float SSRLevel;                    // Offset:  288 Size:     4 [unused]
//   float4 normalScaleLoHi;            // Offset:  304 Size:    16
//   float3 normalUVScrollSpeed;        // Offset:  320 Size:    12 [unused]
//   float4 normalUVLo;                 // Offset:  336 Size:    16 [unused]
//   float4 normalUVHi0;                // Offset:  352 Size:    16 [unused]
//   float4 normalUVHi1;                // Offset:  368 Size:    16 [unused]
//   float3 foamColor;                  // Offset:  384 Size:    12
//   float3 waterColorShallow;          // Offset:  400 Size:    12
//   float3 waterColorDeep;             // Offset:  416 Size:    12
//   float3 waterColorShallowScatter;   // Offset:  432 Size:    12
//   float3 waterColorDeepScatter;      // Offset:  448 Size:    12
//   float3 horizonColor;               // Offset:  464 Size:    12
//   float4 foamMaskScroll01;           // Offset:  480 Size:    16 [unused]
//   float4 foamMaskScroll23;           // Offset:  496 Size:    16 [unused]
//   float4 foamMaskScale01;            // Offset:  512 Size:    16 [unused]
//   float4 foamMaskScale23;            // Offset:  528 Size:    16 [unused]
//   float foamScale;                   // Offset:  544 Size:     4 [unused]
//   float3 foamSpacing;                // Offset:  548 Size:    12
//   float foamColorScale;              // Offset:  560 Size:     4
//   float foamWaveIncrease;            // Offset:  564 Size:     4 [unused]
//   float4 wave0K;                     // Offset:  576 Size:    16 [unused]
//   float4 wave1K;                     // Offset:  592 Size:    16 [unused]
//   float4 wave2K;                     // Offset:  608 Size:    16 [unused]
//   float4 waveAmplitude;              // Offset:  624 Size:    16 [unused]
//   float4 waveSteepness;              // Offset:  640 Size:    16 [unused]
//   float4 waveFrequency;              // Offset:  656 Size:    16 [unused]
//   bool useFoam;                      // Offset:  672 Size:     4
//   bool useVertexWaves;               // Offset:  676 Size:     4 [unused]
//   bool scaleNormalsWithFlow;         // Offset:  680 Size:     4 [unused]
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16 [unused]
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16 [unused]
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4 [unused]
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// colorSampler                      sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// normalSampler                     sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// bilinearTile                      sampler      NA          NA             s5      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// colorMap                          texture  float4          2d             t0      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// normalMap                         texture  float4          2d            t21      1 
// controlMap                        texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// normalMapHi                       texture  float4          2d            t24      1 
// maskMap                           texture  float4          2d            t25      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyz 
// COLOR                    1   x           1     NONE   float       
// TEXCOORD                 0    yz         1     NONE   float    yz 
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyz         3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float       
// OFFPOSITION              0   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xy          6     NONE   float   xy  
// TEXCOORD                 9     z         6     NONE   float     z 
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
// TEXCOORD                 8   xyzw        8     NONE   float   xyzw
// TEXCOORD                10   xy          9     NONE   float   xy  
// TEXCOORD                11   xyzw       10     NONE   float   xyzw
// SV_IsFrontFace           0   x          11    FFACE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[43], immediateIndexed
dcl_constantbuffer CB1[86], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2darray (float,float,float,float) t31
dcl_input_ps_siv linear noperspective v0.xyz, position
dcl_input_ps linear v1.yz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xy
dcl_input_ps linear v6.z
dcl_input_ps linear v7.xyzw
dcl_input_ps linear v8.xyzw
dcl_input_ps linear v9.xy
dcl_input_ps linear v10.xyzw
dcl_output o0.xyzw
dcl_temps 37
sample_indexable(texture2d)(float,float,float,float) r0.xy, v9.xyxx, t21.xyzw, s3
mad r0.xy, r0.xyxx, cb0[19].xxxx, cb0[19].yyyy
sample_indexable(texture2d)(float,float,float,float) r1.xy, v10.xyxx, t24.xyzw, s3
sample_indexable(texture2d)(float,float,float,float) r1.zw, v10.zwzz, t24.zwxy, s3
mad r1.xyzw, r1.xyzw, cb0[19].zzzz, cb0[19].wwww
add r0.zw, r1.zzzw, r1.xxxy
add r0.xy, r0.zwzz, r0.xyxx
mov r0.z, -r0.y
mov r0.w, l(1.000000)
dp3 r0.y, r0.xzwx, r0.xzwx
rsq r0.y, r0.y
mul r1.xyz, r0.yyyy, r0.xzwx
mul r0.xz, r1.xxyx, cb0[15].wwww
mad r2.xy, r1.xyxx, cb0[15].zzzz, v1.yzyy
sample_indexable(texture2d)(float,float,float,float) r2.xyz, r2.xyxx, t22.xyzw, s5
add r3.xyz, -cb0[25].xyzx, cb0[26].xyzx
mad r3.xyz, r2.xxxx, r3.xyzx, cb0[25].xyzx
add r4.xyz, -cb0[27].xyzx, cb0[28].xyzx
mad r4.xyz, r2.xxxx, r4.xyzx, cb0[27].xyzx
mad r0.xz, r0.xxzx, r2.yyyy, v6.xxyx
sample_indexable(texture2d)(float,float,float,float) r0.xzw, r0.xzxx, t0.xwyz, s1
dp3 r2.x, v5.xyzx, v5.xyzx
rsq r2.w, r2.x
mul r5.xyz, r2.wwww, v5.xyzx
dp3_sat r2.w, r1.xyzx, -r5.xyzx
add r2.w, -r2.w, l(1.000000)
mul r3.w, r2.w, r2.w
mul r3.w, r3.w, r3.w
mul r2.w, r2.w, r3.w
mad r2.w, cb0[14].w, r2.w, cb0[14].z
add r3.xyz, r3.xyzx, -r4.xyzx
mad r3.xyz, r2.wwww, r3.xyzx, r4.xyzx
if_nz cb0[42].x
  sample_indexable(texture2d)(float,float,float,float) r2.w, v7.xyxx, t25.yzwx, s5
  sample_indexable(texture2d)(float,float,float,float) r3.w, v7.zwzz, t25.yzwx, s5
  sample_indexable(texture2d)(float,float,float,float) r4.x, v8.xyxx, t25.xyzw, s5
  sample_indexable(texture2d)(float,float,float,float) r4.y, v8.zwzz, t25.yxzw, s5
  add r2.w, r2.w, r3.w
  add r2.w, r4.x, r2.w
  add r2.w, r4.y, r2.w
  mul r2.w, r2.w, cb0[35].x
  mad r2.z, cb0[34].z, r2.z, cb0[34].y
  add r2.z, r2.z, v6.z
  max r2.z, r2.z, cb0[34].w
  max r2.w, r2.w, l(0.000000)
  log r2.w, r2.w
  mul r2.z, r2.w, r2.z
  exp r2.z, r2.z
  add r4.xyz, -r3.xyzx, cb0[24].xyzx
  mad r3.xyz, r2.zzzz, r4.xyzx, r3.xyzx
  add r4.xyz, -r0.xzwx, cb0[24].xyzx
  mad r0.xzw, r2.zzzz, r4.xxyz, r0.xxzw
  add r2.z, -r2.z, l(1.000000)
  mul r2.z, r2.z, cb0[17].x
else 
  mov r2.z, cb0[17].x
endif 
ftou r4.xy, v0.xyxx
ge r2.w, v0.z, l(0.984375)
mul r3.w, v0.z, l(1.01587307)
mad r4.z, v0.z, l(64.000000), l(-63.000000)
movc r2.w, r2.w, r4.z, r3.w
max r2.w, r2.w, l(0.00000001)
rcp r2.w, r2.w
dp3 r3.w, -v5.xyzx, -v5.xyzx
rsq r3.w, r3.w
mul r6.xyz, r3.wwww, -v5.xyzx
utof r4.zw, r4.xxxy
dp2 r4.z, r4.zwzz, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r4.z, r4.z
mul r4.z, r4.z, l(52.982918)
frc r4.z, r4.z
mad r4.z, r4.z, l(6.28318548), cb1[70].w
sincos r7.x, r8.x, r4.z
dp3_sat r4.z, r1.xyzx, r6.xyzx
dp3 r4.w, -r6.xyzx, r1.xyzx
add r4.w, r4.w, r4.w
mad r9.xyz, r1.xyzx, -r4.wwww, -r6.xyzx
add r4.w, -r2.z, l(1.000000)
mul r5.w, r4.w, l(5.000000)
mad r6.w, r4.w, l(5.000000), l(-2.500000)
mul_sat r6.w, r6.w, l(0.400000)
mul r6.w, r6.w, l(100.000000)
mad r7.yz, -r4.wwww, l(0.000000, 10.000000, 5.000000, 0.000000), l(0.000000, 6.857410, 7.085000, 0.000000)
exp r7.y, r7.y
mul r7.y, r4.z, r7.y
mul r7.y, r7.y, l(9.136810)
mul r7.w, r4.w, r5.w
mad r7.z, -r7.w, l(2.015905), r7.z
exp r7.z, r7.z
mul r4.z, r4.z, r7.z
mul r4.z, r4.z, l(9.708090)
max r4.z, r4.z, r7.y
max r4.z, r4.z, l(1.268160)
iadd r7.y, cb2[0].y, -cb2[58].x
mul r2.w, r2.w, l(0.00781250)
min r2.w, r2.w, l(15.000000)
ftou r2.w, r2.w
ushr r10.xy, r4.xyxx, l(6, 6, 0, 0)
ishl r10.z, r2.w, l(4)
and r2.w, r7.y, l(-32)
iadd r4.x, -r2.w, r7.y
and r4.y, cb2[0].y, l(-32)
iadd r7.z, -r4.y, cb2[0].y
mov r11.xy, l(0,0,0,0)
mov r12.w, l(0)
mov r13.yz, l(0,0,1.000000,0)
mov r14.xy, l(0,0,0,0)
mov r15.x, l(1.000000)
mov r16.xy, l(0,0,0,0)
mov r17.xy, l(0,0,0,0)
mov r18.xyzw, l(0,0,0,0)
mov r19.yzw, l(0,0,0,0)
mov r7.w, r2.w
loop 
  uge r8.y, r7.w, cb2[0].y
  breakc_nz r8.y
  ushr r11.z, r7.w, l(5)
  iadd r12.xyz, r10.xyzx, r11.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r8.y, r12.xyzw, t7.yxzw
  ieq r8.z, r2.w, r7.w
  bfi r8.w, r4.x, l(0), l(0), r8.y
  movc r8.y, r8.z, r8.w, r8.y
  ieq r8.z, r4.y, r7.w
  ubfe r8.w, r7.z, l(0), r8.y
  movc r8.y, r8.z, r8.w, r8.y
  iadd r8.z, r7.w, cb2[0].x
  mov r20.xyzw, r18.xyzw
  mov r21.xyz, r19.yzwy
  mov r8.w, r8.y
  loop 
    breakc_z r8.w
    firstbit_lo r10.w, r8.w
    ishl r11.z, l(1), r10.w
    and r11.w, r8.w, r11.z
    if_nz r11.w
      xor r8.w, r8.w, r11.z
      iadd r11.z, r8.z, r10.w
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r22.xyzw, r11.z, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r12.xy, r11.z, l(16), t11.xyxx
      add r22.xyz, r22.xyzx, -v5.xyzx
      mov r12.z, r22.w
      lt r12.xyz, |r22.xyzx|, r12.zxyz
      and r11.z, r12.y, r12.x
      and r11.z, r12.z, r11.z
      if_nz r11.z
        iadd r10.w, r7.w, r10.w
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r22.xyzw, r10.w, l(0), t15.wxyz
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r11.zw, r10.w, l(96), t15.xxxy
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r23.xyzw, r10.w, l(116), t15.zwxy
        add r12.xyz, -r22.yzwy, v5.xyzx
        and r13.w, r23.w, l(0x0000ffff)
        ubfe r14.w, l(6), l(25), r23.w
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r24.xyzw, r13.w, l(0), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r25.xyzw, r13.w, l(16), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r26.xyzw, r13.w, l(32), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r13.w, l(48), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r13.w, l(64), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r13.w, l(80), t16.xyzw
        dp3 r15.z, r24.xyzx, r12.xyzx
        add_sat r15.z, r24.w, r15.z
        dp3 r15.w, r25.xyzx, r12.xyzx
        add_sat r15.w, r25.w, r15.w
        mul r15.z, r15.w, r15.z
        dp3 r15.w, r26.xyzx, r12.xyzx
        add_sat r15.w, r26.w, r15.w
        mul r15.z, r15.w, r15.z
        dp3 r15.w, r27.xyzx, r12.xyzx
        add_sat r15.w, r27.w, r15.w
        mul r15.z, r15.w, r15.z
        dp3 r15.w, r28.xyzx, r12.xyzx
        add_sat r15.w, r28.w, r15.w
        mul r15.z, r15.w, r15.z
        dp3 r15.w, r29.xyzx, r12.xyzx
        add_sat r15.w, r29.w, r15.w
        mul r13.x, r15.w, r15.z
        and r15.z, r11.z, l(1)
        movc r15.zw, r15.zzzz, r13.xxxy, r13.zzzx
        mov r13.x, r11.z
        mov r24.xy, r15.zwzz
        mov r16.w, l(1)
        loop 
          ige r17.w, r16.w, r14.w
          breakc_nz r17.w
          iadd r17.w, r13.w, r16.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r25.xyzw, r17.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r26.xyzw, r17.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r17.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r17.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r17.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r17.w, l(80), t16.xyzw
          dp3 r17.w, r25.xyzx, r12.xyzx
          add_sat r17.w, r25.w, r17.w
          mul r17.w, r17.w, r24.x
          dp3 r22.w, r26.xyzx, r12.xyzx
          add_sat r22.w, r26.w, r22.w
          mul r17.w, r17.w, r22.w
          dp3 r22.w, r27.xyzx, r12.xyzx
          add_sat r22.w, r27.w, r22.w
          mul r17.w, r17.w, r22.w
          dp3 r22.w, r28.xyzx, r12.xyzx
          add_sat r22.w, r28.w, r22.w
          mul r17.w, r17.w, r22.w
          dp3 r22.w, r29.xyzx, r12.xyzx
          add_sat r22.w, r29.w, r22.w
          mul r17.w, r17.w, r22.w
          dp3 r22.w, r30.xyzx, r12.xyzx
          add_sat r22.w, r30.w, r22.w
          mul r24.x, r17.w, r22.w
          ushr r24.z, r13.x, l(2)
          ubfe r24.w, l(1), l(2), r13.x
          and r25.x, r24.z, l(2)
          max r25.y, r24.x, r24.y
          mad r17.w, -r17.w, r22.w, l(1.000000)
          mul r17.w, r17.w, r24.y
          movc r15.y, r25.x, r17.w, r25.y
          movc r24.xy, r24.wwww, r24.xyxx, r15.xyxx
          iadd r16.w, r16.w, l(1)
          mov r13.x, r24.z
        endloop 
        mov_sat r24.y, r24.y
        mul r11.z, r11.w, r24.y
        lt r13.x, l(0.000000), r11.z
        if_nz r13.x
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r10.w, l(16), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r10.w, l(32), t15.yxwz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r10.w, l(48), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r10.w, l(64), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r10.w, l(80), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r10.w, l(132), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r10.w, l(148), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r10.w, l(164), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r10.w, l(180), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r10.w, l(196), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xy, r10.w, l(212), t15.xyxx
          mad r21.z, r24.y, r11.w, r21.z
          mul r10.w, r23.z, r11.z
          mov r23.z, r30.z
          dp3 r11.z, r9.xyzx, r23.xyzx
          dp3 r11.w, r12.xyzx, r23.xyzx
          add r11.w, -r30.w, r11.w
          ge r13.x, r11.w, l(0.000000)
          max r11.w, r6.w, |r11.w|
          movc r11.w, r13.x, r11.w, -r11.w
          max r11.z, -r11.z, l(0.00000010)
          div r11.z, r11.w, r11.z
          min r11.z, |r11.z|, l(131072.000000)
          mov r30.z, r31.z
          dp3 r11.w, r9.xyzx, r30.xyzx
          dp3 r13.x, r12.xyzx, r30.xyzx
          add r13.x, -r31.w, r13.x
          ge r13.w, r13.x, l(0.000000)
          max r13.x, r6.w, |r13.x|
          movc r13.x, r13.w, r13.x, -r13.x
          max r11.w, -r11.w, l(0.00000010)
          div r11.w, r13.x, r11.w
          min r11.z, |r11.w|, r11.z
          mov r31.z, r32.z
          dp3 r11.w, r9.xyzx, r31.xyzx
          dp3 r13.x, r12.xyzx, r31.xyzx
          add r13.x, -r32.w, r13.x
          ge r13.w, r13.x, l(0.000000)
          max r13.x, r6.w, |r13.x|
          movc r13.x, r13.w, r13.x, -r13.x
          max r11.w, -r11.w, l(0.00000010)
          div r11.w, r13.x, r11.w
          min r11.z, |r11.w|, r11.z
          mov r32.z, r33.z
          dp3 r11.w, r9.xyzx, r32.xyzx
          dp3 r13.x, r12.xyzx, r32.xyzx
          add r13.x, -r33.w, r13.x
          ge r13.w, r13.x, l(0.000000)
          max r13.x, r6.w, |r13.x|
          movc r13.x, r13.w, r13.x, -r13.x
          max r11.w, -r11.w, l(0.00000010)
          div r11.w, r13.x, r11.w
          min r11.z, |r11.w|, r11.z
          mov r33.z, r34.x
          dp3 r11.w, r9.xyzx, r33.xyzx
          dp3 r13.x, r12.xyzx, r33.xyzx
          add r13.x, -r34.y, r13.x
          ge r13.w, r13.x, l(0.000000)
          max r13.x, r6.w, |r13.x|
          movc r13.x, r13.w, r13.x, -r13.x
          max r11.w, -r11.w, l(0.00000010)
          div r11.w, r13.x, r11.w
          min r11.z, |r11.w|, r11.z
          mov r35.zw, r34.zzzw
          dp3 r11.w, r9.zxyz, r35.xzwx
          dp3 r13.x, r12.zxyz, r35.xzwx
          add r13.x, -r35.y, r13.x
          ge r13.w, r13.x, l(0.000000)
          max r13.x, r6.w, |r13.x|
          movc r13.x, r13.w, r13.x, -r13.x
          max r11.w, -r11.w, l(0.00000010)
          div r11.w, r13.x, r11.w
          min r11.z, |r11.w|, r11.z
          mov r23.x, r27.w
          mov r23.yz, r28.zzwz
          add r15.yzw, r12.xxyz, r23.xxyz
          mad r15.yzw, r9.xxyz, r11.zzzz, r15.yyzw
          dp3 r11.w, r15.yzwy, r15.yzwy
          sqrt r11.w, r11.w
          div r11.z, r11.z, r11.w
          add r11.z, r11.z, r11.z
          sqrt r11.z, r11.z
          mad r11.z, r4.w, l(5.000000), r11.z
          add r11.z, r11.z, l(-0.844800)
          mov r22.y, r25.z
          mov r22.z, r26.x
          dp3 r30.x, r15.yzwy, r22.xyzx
          mov r23.xy, r25.xwxx
          mov r23.z, r26.w
          dp3 r30.y, r15.yzwy, r23.xyzx
          mov r26.x, r25.y
          dp3 r30.z, r15.yzwy, r26.xyzx
          ubfe r11.w, l(9), l(16), r23.w
          utof r30.w, r11.w
          sample_l_indexable(texturecubearray)(float,float,float,float) r15.yzw, r30.xyzw, t8.wxyz, s2, r11.z
          dp3 r25.x, r12.xyzx, r22.xyzx
          dp3 r25.y, r12.xyzx, r23.xyzx
          dp3 r25.z, r12.xyzx, r26.xyzx
          mad_sat r12.xyz, r25.xyzx, r27.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
          mov r28.z, r29.x
          mad r12.xyz, r12.xyzx, r28.xyzx, r29.yzwy
          dp3 r30.x, r1.xyzx, r22.xyzx
          dp3 r30.y, r1.xyzx, r23.xyzx
          dp3 r30.z, r1.xyzx, r26.xyzx
          lt r22.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r30.xyzx
          movc r14.z, r22.x, l(0), l(0.500000)
          add r23.xyz, r12.xyzx, r14.xyzx
          sample_l_indexable(texture3d)(float,float,float,float) r23.xyz, r23.xyzx, t17.xyzw, s4, l(0.000000)
          mul r24.xzw, r30.xxyz, r30.xxyz
          mul r24.xzw, r10.wwww, r24.xxzw
          movc r16.z, r22.y, l(0), l(0.500000)
          add r22.xyw, r12.xyxz, r16.xyxz
          sample_l_indexable(texture3d)(float,float,float,float) r22.xyw, r22.xywx, t18.xywz, s4, l(0.000000)
          mul r22.xyw, r24.zzzz, r22.xyxw
          mad r22.xyw, r23.xyxz, r24.xxxx, r22.xyxw
          movc r17.z, r22.z, l(0), l(0.500000)
          add r12.xyz, r12.xyzx, r17.xyzx
          sample_l_indexable(texture3d)(float,float,float,float) r12.xyz, r12.xyzx, t19.xyzw, s4, l(0.000000)
          mad r12.xyz, r12.xyzx, r24.wwww, r22.xywx
          sample_l_indexable(texturecubearray)(float,float,float,float) r22.xyz, r30.xyzw, t8.xyzw, s2, l(6.000000)
          mul r23.xyz, r12.xyzx, r22.xyzx
          dp3 r11.z, r23.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r20.xyz, r12.xyzx, r22.xyzx, r20.xyzx
          mul r11.w, r4.z, r11.z
          mul r12.xyz, r10.wwww, r15.yzwy
          dp3 r10.w, r12.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r10.w, r4.z, r11.z, r10.w
          div r10.w, r11.w, r10.w
          mov r22.x, r20.w
          mov r22.yz, r21.xxyx
          mad r21.xyw, r12.yzyx, r10.wwww, r22.yzyx
          mov r20.w, r21.w
        endif 
      endif 
    endif 
  endloop 
  mov r18.xyzw, r20.xyzw
  mov r19.yzw, r21.xxyz
  iadd r7.w, r7.w, l(32)
endloop 
lt r4.y, r19.w, l(1.000000)
if_nz r4.y
  mov r11.xy, l(0,0,0,0)
  mov r12.w, l(0)
  mov r13.yz, l(0,0,1.000000,0)
  mov r14.xy, l(0,0,0,0)
  mov r15.x, l(1.000000)
  mov r16.xy, l(0,0,0,0)
  mov r17.xy, l(0,0,0,0)
  mov r20.x, r18.w
  mov r20.yzw, r19.yyzw
  mov r8.yzw, r18.xxyz
  mov r4.y, r19.w
  mov r7.z, l(0)
  loop 
    uge r7.w, r7.z, r7.y
    breakc_nz r7.w
    ushr r11.z, r7.z, l(5)
    iadd r12.xyz, r10.xyzx, r11.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r7.w, r12.xyzw, t7.yzwx
    ieq r10.w, r2.w, r7.z
    ubfe r11.z, r4.x, l(0), r7.w
    movc r7.w, r10.w, r11.z, r7.w
    iadd r10.w, r7.z, cb2[0].x
    mov r21.xyzw, r20.xyzw
    mov r12.xyz, r8.yzwy
    mov r11.z, r4.y
    mov r11.w, r7.w
    loop 
      breakc_z r11.w
      firstbit_lo r13.w, r11.w
      ishl r14.w, l(1), r13.w
      and r15.z, r11.w, r14.w
      if_nz r15.z
        xor r11.w, r11.w, r14.w
        iadd r14.w, r10.w, r13.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r22.xyzw, r14.w, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r23.xy, r14.w, l(16), t11.xyxx
        add r22.xyz, r22.xyzx, -v5.xyzx
        mov r23.z, r22.w
        lt r22.xyz, |r22.xyzx|, r23.zxyz
        and r14.w, r22.y, r22.x
        and r14.w, r22.z, r14.w
        if_nz r14.w
          iadd r13.w, r7.z, r13.w
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r22.xyzw, r13.w, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r15.zw, r13.w, l(96), t15.xxxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r23.xyzw, r13.w, l(116), t15.zwxy
          add r24.xyz, -r22.yzwy, v5.xyzx
          and r14.w, r23.w, l(0x0000ffff)
          ubfe r16.w, l(6), l(25), r23.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r25.xyzw, r14.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r26.xyzw, r14.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r14.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r14.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r14.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r14.w, l(80), t16.xyzw
          dp3 r17.w, r25.xyzx, r24.xyzx
          add_sat r17.w, r25.w, r17.w
          dp3 r22.w, r26.xyzx, r24.xyzx
          add_sat r22.w, r26.w, r22.w
          mul r17.w, r17.w, r22.w
          dp3 r22.w, r27.xyzx, r24.xyzx
          add_sat r22.w, r27.w, r22.w
          mul r17.w, r17.w, r22.w
          dp3 r22.w, r28.xyzx, r24.xyzx
          add_sat r22.w, r28.w, r22.w
          mul r17.w, r17.w, r22.w
          dp3 r22.w, r29.xyzx, r24.xyzx
          add_sat r22.w, r29.w, r22.w
          mul r17.w, r17.w, r22.w
          dp3 r22.w, r30.xyzx, r24.xyzx
          add_sat r22.w, r30.w, r22.w
          mul r13.x, r17.w, r22.w
          and r17.w, r15.z, l(1)
          movc r25.xy, r17.wwww, r13.xyxx, r13.zxzz
          mov r13.x, r15.z
          mov r26.xy, r25.xyxx
          mov r17.w, l(1)
          loop 
            ige r22.w, r17.w, r16.w
            breakc_nz r22.w
            iadd r22.w, r14.w, r17.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r22.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r22.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r22.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r22.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r22.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r22.w, l(80), t16.xyzw
            dp3 r22.w, r27.xyzx, r24.xyzx
            add_sat r22.w, r27.w, r22.w
            mul r22.w, r22.w, r26.x
            dp3 r24.w, r28.xyzx, r24.xyzx
            add_sat r24.w, r28.w, r24.w
            mul r22.w, r22.w, r24.w
            dp3 r24.w, r29.xyzx, r24.xyzx
            add_sat r24.w, r29.w, r24.w
            mul r22.w, r22.w, r24.w
            dp3 r24.w, r30.xyzx, r24.xyzx
            add_sat r24.w, r30.w, r24.w
            mul r22.w, r22.w, r24.w
            dp3 r24.w, r31.xyzx, r24.xyzx
            add_sat r24.w, r31.w, r24.w
            mul r22.w, r22.w, r24.w
            dp3 r24.w, r32.xyzx, r24.xyzx
            add_sat r24.w, r32.w, r24.w
            mul r26.x, r22.w, r24.w
            ushr r25.z, r13.x, l(2)
            ubfe r25.w, l(1), l(2), r13.x
            and r26.z, r25.z, l(2)
            max r26.w, r26.x, r26.y
            mad r22.w, -r22.w, r24.w, l(1.000000)
            mul r22.w, r22.w, r26.y
            movc r15.y, r26.z, r22.w, r26.w
            movc r26.xy, r25.wwww, r26.xyxx, r15.xyxx
            iadd r17.w, r17.w, l(1)
            mov r13.x, r25.z
          endloop 
          add_sat r13.x, -r11.z, r26.y
          mul r14.w, r15.w, r13.x
          lt r15.y, l(0.000000), r14.w
          if_nz r15.y
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r13.w, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r13.w, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r13.w, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r13.w, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r13.w, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r13.w, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r13.w, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r13.w, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r13.w, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r13.w, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xy, r13.w, l(212), t15.xyxx
            mad r21.w, r13.x, r15.w, r21.w
            mul r13.x, r23.z, r14.w
            mov r23.z, r31.z
            dp3 r13.w, r9.xyzx, r23.xyzx
            dp3 r14.w, r24.xyzx, r23.xyzx
            add r14.w, -r31.w, r14.w
            ge r15.y, r14.w, l(0.000000)
            max r14.w, r6.w, |r14.w|
            movc r14.w, r15.y, r14.w, -r14.w
            max r13.w, -r13.w, l(0.00000010)
            div r13.w, r14.w, r13.w
            min r13.w, |r13.w|, l(131072.000000)
            mov r31.z, r32.z
            dp3 r14.w, r9.xyzx, r31.xyzx
            dp3 r15.y, r24.xyzx, r31.xyzx
            add r15.y, -r32.w, r15.y
            ge r15.z, r15.y, l(0.000000)
            max r15.y, r6.w, |r15.y|
            movc r15.y, r15.z, r15.y, -r15.y
            max r14.w, -r14.w, l(0.00000010)
            div r14.w, r15.y, r14.w
            min r13.w, r13.w, |r14.w|
            mov r32.z, r33.z
            dp3 r14.w, r9.xyzx, r32.xyzx
            dp3 r15.y, r24.xyzx, r32.xyzx
            add r15.y, -r33.w, r15.y
            ge r15.z, r15.y, l(0.000000)
            max r15.y, r6.w, |r15.y|
            movc r15.y, r15.z, r15.y, -r15.y
            max r14.w, -r14.w, l(0.00000010)
            div r14.w, r15.y, r14.w
            min r13.w, r13.w, |r14.w|
            mov r33.z, r34.z
            dp3 r14.w, r9.xyzx, r33.xyzx
            dp3 r15.y, r24.xyzx, r33.xyzx
            add r15.y, -r34.w, r15.y
            ge r15.z, r15.y, l(0.000000)
            max r15.y, r6.w, |r15.y|
            movc r15.y, r15.z, r15.y, -r15.y
            max r14.w, -r14.w, l(0.00000010)
            div r14.w, r15.y, r14.w
            min r13.w, r13.w, |r14.w|
            mov r34.z, r35.x
            dp3 r14.w, r9.xyzx, r34.xyzx
            dp3 r15.y, r24.xyzx, r34.xyzx
            add r15.y, -r35.y, r15.y
            ge r15.z, r15.y, l(0.000000)
            max r15.y, r6.w, |r15.y|
            movc r15.y, r15.z, r15.y, -r15.y
            max r14.w, -r14.w, l(0.00000010)
            div r14.w, r15.y, r14.w
            min r13.w, r13.w, |r14.w|
            mov r36.zw, r35.zzzw
            dp3 r14.w, r9.zxyz, r36.xzwx
            dp3 r15.y, r24.zxyz, r36.xzwx
            add r15.y, -r36.y, r15.y
            ge r15.z, r15.y, l(0.000000)
            max r15.y, r6.w, |r15.y|
            movc r15.y, r15.z, r15.y, -r15.y
            max r14.w, -r14.w, l(0.00000010)
            div r14.w, r15.y, r14.w
            min r13.w, r13.w, |r14.w|
            mov r23.x, r28.w
            mov r23.yz, r29.zzwz
            add r15.yzw, r24.xxyz, r23.xxyz
            mad r15.yzw, r9.xxyz, r13.wwww, r15.yyzw
            dp3 r14.w, r15.yzwy, r15.yzwy
            sqrt r14.w, r14.w
            div r13.w, r13.w, r14.w
            add r13.w, r13.w, r13.w
            sqrt r13.w, r13.w
            mad r13.w, r4.w, l(5.000000), r13.w
            add r13.w, r13.w, l(-0.844800)
            mov r22.y, r25.z
            mov r22.z, r27.x
            dp3 r31.x, r15.yzwy, r22.xyzx
            mov r23.xy, r25.xwxx
            mov r23.z, r27.w
            dp3 r31.y, r15.yzwy, r23.xyzx
            mov r27.x, r25.y
            dp3 r31.z, r15.yzwy, r27.xyzx
            ubfe r14.w, l(9), l(16), r23.w
            utof r31.w, r14.w
            sample_l_indexable(texturecubearray)(float,float,float,float) r15.yzw, r31.xyzw, t8.wxyz, s2, r13.w
            dp3 r25.x, r24.xyzx, r22.xyzx
            dp3 r25.y, r24.xyzx, r23.xyzx
            dp3 r25.z, r24.xyzx, r27.xyzx
            mad_sat r24.xyz, r25.xyzx, r28.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
            mov r29.z, r30.x
            mad r24.xyz, r24.xyzx, r29.xyzx, r30.yzwy
            dp3 r31.x, r1.xyzx, r22.xyzx
            dp3 r31.y, r1.xyzx, r23.xyzx
            dp3 r31.z, r1.xyzx, r27.xyzx
            lt r22.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r31.xyzx
            movc r14.z, r22.x, l(0), l(0.500000)
            add r23.xyz, r14.xyzx, r24.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r23.xyz, r23.xyzx, t17.xyzw, s4, l(0.000000)
            mul r25.xyz, r31.xyzx, r31.xyzx
            mul r25.xyz, r13.xxxx, r25.xyzx
            movc r16.z, r22.y, l(0), l(0.500000)
            add r22.xyw, r16.xyxz, r24.xyxz
            sample_l_indexable(texture3d)(float,float,float,float) r22.xyw, r22.xywx, t18.xywz, s4, l(0.000000)
            mul r22.xyw, r25.yyyy, r22.xyxw
            mad r22.xyw, r23.xyxz, r25.xxxx, r22.xyxw
            movc r17.z, r22.z, l(0), l(0.500000)
            add r23.xyz, r17.xyzx, r24.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r23.xyz, r23.xyzx, t19.xyzw, s4, l(0.000000)
            mad r22.xyz, r23.xyzx, r25.zzzz, r22.xywx
            sample_l_indexable(texturecubearray)(float,float,float,float) r23.xyz, r31.xyzw, t8.xyzw, s2, l(6.000000)
            mul r24.xyz, r22.xyzx, r23.xyzx
            dp3 r13.w, r24.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r12.xyz, r22.xyzx, r23.xyzx, r12.xyzx
            mul r14.z, r4.z, r13.w
            mul r15.yzw, r13.xxxx, r15.yyzw
            dp3 r13.x, r15.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r13.x, r4.z, r13.w, r13.x
            div r13.x, r14.z, r13.x
            mad r21.xyz, r15.yzwy, r13.xxxx, r21.xyzx
          endif 
        endif 
      endif 
    endloop 
    mov r20.xyzw, r21.xyzw
    mov r8.yzw, r12.xxyz
    iadd r7.z, r7.z, l(32)
  endloop 
  mov r19.xyzw, r20.zxyw
  mov r18.xyz, r8.yzwy
  mov r19.xyzw, r19.yzxw
else 
  mov r19.x, r18.w
endif 
max r2.w, r19.w, l(1.000000)
rcp r2.w, r2.w
mov_sat r19.w, r19.w
mul r4.xyz, r2.wwww, r18.xyzx
mul r7.yzw, r2.wwww, r19.xxyz
lt r4.w, r19.w, l(0.990000)
if_nz r4.w
  add r4.w, -r19.w, l(1.000000)
  mul r6.w, r4.w, cb2[19].x
  add r8.yzw, v5.xxyz, -cb2[35].xxyz
  mul r10.x, r8.y, cb2[35].w
  mul r10.yz, r8.zzwz, cb2[36].xxyx
  add_sat r8.yzw, r10.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
  mul r10.xy, r8.yzyy, cb2[36].zwzz
  mul r10.z, r8.w, cb2[37].x
  add r8.yzw, r10.xxyz, cb2[37].yyzw
  lt r10.xy, l(0.000000, 0.000000, 0.000000, 0.000000), r1.xyxx
  movc r10.xy, r10.xyxx, l(0,0,0,0), l(0.500000,0.500000,0,0)
  mov r10.z, l(0)
  add r11.xyz, r8.yzwy, r10.zzxz
  sample_l_indexable(texture3d)(float,float,float,float) r11.xyz, r11.xyzx, t17.xyzw, s4, l(0.000000)
  mul r12.xyz, r1.xyzx, r1.xyzx
  mul r12.xyz, r6.wwww, r12.xyzx
  add r10.xyz, r8.yzwy, r10.zzyz
  sample_l_indexable(texture3d)(float,float,float,float) r10.xyz, r10.xyzx, t18.xyzw, s4, l(0.000000)
  mul r10.xyz, r12.yyyy, r10.xyzx
  mad r10.xyz, r11.xyzx, r12.xxxx, r10.xyzx
  lt r0.y, l(0.000000), r0.y
  movc r11.z, r0.y, l(0), l(0.500000)
  mov r11.xy, l(0,0,0,0)
  add r8.yzw, r8.yyzw, r11.xxyz
  sample_l_indexable(texture3d)(float,float,float,float) r8.yzw, r8.yzwy, t19.wxyz, s4, l(0.000000)
  mad r8.yzw, r8.yyzw, r12.zzzz, r10.xxyz
  mov r1.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r10.xyz, r1.xyzw, t8.xyzw, s2, l(6.000000)
  mul r8.yzw, r8.yyzw, r10.xxyz
  dp3 r0.y, r8.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
  mad r4.xyz, r18.xyzx, r2.wwww, r8.yzwy
  mov r9.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r8.yzw, r9.xyzw, t8.wxyz, s2, r5.w
  mad r1.w, cb2[19].x, r4.w, -r0.y
  mad r0.y, r2.z, r1.w, r0.y
  mad r7.yzw, r8.yyzw, r0.yyyy, r7.yyzw
endif 
mul r7.yzw, r7.yyzw, cb0[17].yyyy
dp3 r0.y, r1.xyzx, cb2[17].xyzx
mov_sat r1.w, r0.y
ge r2.z, l(0.000000), r1.w
if_nz r2.z
  mov r2.w, l(0)
endif 
if_z r2.z
  mul r8.yzw, v5.yyyy, cb2[29].xxyz
  mad r8.yzw, v5.xxxx, cb2[28].xxyz, r8.yyzw
  mad r8.yzw, v5.zzzz, cb2[30].xxyz, r8.yyzw
  add r8.yzw, r8.yyzw, cb2[31].xxyz
  add r2.z, r8.w, -cb2[17].w
  mad r2.z, -r2.z, l(0.00006104), l(1.000000)
  mov_sat r4.w, r2.z
  eq r4.w, r2.z, r4.w
  if_nz r4.w
    mov r4.w, l(0)
    mov r5.w, l(0)
    loop 
      ge r6.w, r4.w, l(3.000000)
      breakc_nz r6.w
      ftou r6.w, r4.w
      add r9.xy, r8.yzyy, -cb2[r6.w + 20].xyxx
      max r9.x, |r9.y|, |r9.x|
      mul r5.w, r9.x, cb2[r6.w + 20].z
      lt r6.w, r5.w, l(1.000000)
      if_nz r6.w
        break 
      endif 
      add r4.w, r4.w, l(1.000000)
      mov r5.w, l(0)
    endloop 
  else 
    mov r4.w, l(3.000000)
    mov r5.w, l(0)
  endif 
  ge r6.w, r4.w, l(3.000000)
  if_nz r6.w
    mul r9.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
    rcp r10.xz, r9.xxxx
    mov r10.y, -r10.z
    mad r9.xyz, r8.yzyy, r10.xyzx, r9.yzyy
    add r10.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r9.xyz, r9.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r9.xyz, r10.xyzx, r9.xyzx
    mul r10.xy, r9.zyzz, cb2[32].xxxx
    round_ni r10.xy, r10.xyxx
    mul r9.w, r10.y, cb2[27].x
    mad r9.w, r9.w, cb2[32].x, r10.x
    ftou r9.w, r9.w
    iadd r9.w, r9.w, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r10.x, r9.w, l(0), t23.xxxx
    and r10.y, r10.x, l(0x40000000)
    ishl r10.z, r10.x, l(2)
    if_z r10.y
      and r10.y, r10.x, l(0x01ffffff)
      iadd r11.x, r9.w, r10.y
      ushr r9.w, r10.x, l(25)
      utof r9.w, r9.w
      mul r9.xyz, r9.wwww, r9.xyzx
      frc r9.xyz, r9.xyzx
      mul r9.xyz, r9.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
      ftou r9.xyz, r9.xyzx
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r11.z, r11.x, l(0), t23.xxxx
      ushr r10.xy, r9.zyzz, l(6, 6, 0, 0)
      and r9.w, r11.z, l(0xc0000000)
      iadd r10.w, r11.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r10.w, r10.w, l(0), t23.xxxx
      movc r10.y, r10.y, r11.z, r10.w
      ushr r10.w, r10.y, l(13)
      movc r10.x, r10.x, r10.w, r10.y
      and r10.x, r10.x, l(8191)
      iadd r12.x, r10.x, r11.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r12.z, r12.x, l(0), t23.xxxx
      mov r11.y, l(0)
      mov r12.y, l(1)
      movc r10.xyw, r9.wwww, r11.xyxz, r12.xyxz
      movc r12.yz, r9.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r13.xy, r9.zyzz, r12.yyyy
      and r13.xy, r13.xyxx, l(1, 1, 0, 0)
      and r11.w, r10.w, l(0xc0000000)
      iadd r12.y, r10.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r12.y, r12.y, l(0), t23.xxxx
      movc r12.y, r13.y, r10.w, r12.y
      ushr r13.y, r12.y, l(13)
      movc r12.y, r13.x, r13.y, r12.y
      and r12.y, r12.y, l(8191)
      iadd r12.x, r10.x, r12.y
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r12.w, r12.x, l(0), t23.xxxx
      movc r10.xyw, r11.wwww, r10.xyxw, r12.xzxw
      movc r10.xyw, r9.wwww, r11.xyxz, r10.xyxw
      and r9.w, r10.w, l(0xc0000000)
      if_z r9.w
        iadd r9.w, -r10.y, l(6)
        ushr r11.xy, r9.zyzz, r9.wwww
        or r9.w, r10.w, l(0x40000000)
        bfi r11.y, l(1), l(1), r11.y, l(0)
        bfi r11.x, l(1), l(0), r11.x, r11.y
        imul null, r11.x, r11.x, l(10)
        ushr r9.w, r9.w, r11.x
        and r9.w, r9.w, l(1023)
        iadd r11.x, r9.w, r10.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r11.w, r11.x, l(0), t23.xxxx
        iadd r11.yz, r10.yyyy, l(0, 1, 2, 0)
        iadd r9.w, -r11.y, l(6)
        ushr r12.xy, r9.zyzz, r9.wwww
        and r9.w, r11.w, l(0xc0000000)
        or r10.y, r11.w, l(0x40000000)
        bfi r12.y, l(1), l(1), r12.y, l(0)
        bfi r12.x, l(1), l(0), r12.x, r12.y
        imul null, r12.x, r12.x, l(10)
        ushr r10.y, r10.y, r12.x
        and r10.y, r10.y, l(1023)
        iadd r12.x, r10.y, r11.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r12.z, r12.x, l(0), t23.xxxx
        mov r12.y, r11.z
        movc r12.xyz, r9.wwww, r11.xywx, r12.xyzx
        iadd r10.y, -r12.y, l(6)
        ushr r11.yz, r9.zzyz, r10.yyyy
        and r10.y, r12.z, l(0xc0000000)
        or r12.y, r12.z, l(0x40000000)
        bfi r11.z, l(1), l(1), r11.z, l(0)
        bfi r11.y, l(1), l(0), r11.y, r11.z
        imul null, r11.y, r11.y, l(10)
        ushr r11.y, r12.y, r11.y
        and r11.y, r11.y, l(1023)
        iadd r13.x, r11.y, r12.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r13.y, r13.x, l(0), t23.xxxx
        movc r11.yz, r10.yyyy, r12.xxzx, r13.xxyx
        movc r10.xw, r9.wwww, r11.xxxw, r11.yyyz
      endif 
      and r9.w, r10.w, l(0xc0000000)
      if_z r9.w
        ubfe r10.y, l(14), l(15), r10.w
        utof r10.y, r10.y
        mul r10.y, r10.y, cb2[27].w
        mul r10.y, r10.y, l(0.00006104)
        and r11.xy, r10.wwww, l(0x00007fff, 0x20000000, 0, 0)
        utof r11.x, r11.x
        mul r11.x, r11.x, cb2[27].w
        mul r11.x, r11.x, l(0.00003052)
        and r11.z, r9.y, l(3)
        iadd r11.z, r10.x, r11.z
        iadd r11.z, r11.z, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r11.z, r11.z, l(0), t23.xxxx
        bfi r12.xyz, l(2, 2, 1, 0), l(3, 1, 4, 0), r9.xyzx, l(0, 0, 0, 0)
        ushr r9.x, r11.z, r12.x
        and r9.x, r9.x, l(255)
        utof r9.x, r9.x
        mul r9.x, r11.x, r9.x
        mad r9.x, r9.x, l(0.00392157), r10.y
        iadd r9.y, r12.y, l(1)
        ubfe r9.z, l(1), l(1), r9.z
        iadd r9.y, r9.z, r9.y
        iadd r9.y, r9.y, r10.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r9.y, r9.y, l(0), t23.xxxx
        ushr r9.y, r9.y, r12.z
        and r9.y, r9.y, l(0x0000ffff)
        utof r9.y, r9.y
        mul r9.y, r11.x, r9.y
        mad r9.y, r9.y, l(0.00001526), r10.y
        movc r10.z, r11.y, r9.x, r9.y
      else 
        and r9.x, r10.w, l(0x80000000)
        iadd r9.y, r10.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r9.y, r9.y, l(0), t23.xxxx
        movc r9.x, r9.x, r9.y, l(0)
        ishl r9.y, r10.w, l(2)
        ushr r9.z, r9.x, l(16)
        and r9.x, r9.x, l(0x0000ffff)
        f16tof32 r9.xz, r9.xxzx
        mad r9.y, r8.y, r9.z, r9.y
        mad r9.x, r8.z, r9.x, r9.y
        movc r10.z, r9.w, r9.x, r10.z
      endif 
    endif 
    mad r8.w, -cb2[27].z, l(2.000000), r8.w
    lt r8.w, r10.z, r8.w
    movc r2.w, r8.w, l(0), l(1.000000)
  endif 
  if_z r6.w
    if_z cb2[58].y
      ftou r6.w, r4.w
      add r9.xy, r8.yzyy, -cb2[r6.w + 20].xyxx
      mul r9.xy, r9.xyxx, cb2[r6.w + 20].zzzz
      mad r9.xy, r9.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r6.w, cb2[26].y
      add r9.z, r4.w, r6.w
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r6.w, r9.xyzx, t13.xxxx, s13, r2.z
      sample_l_indexable(texture2darray)(float,float,float,float) r8.w, r9.xyzx, t31.yzwx, s0, l(0.000000)
      add r6.w, r6.w, r8.w
      add_sat r6.w, r6.w, l(-1.000000)
      mul r8.w, r6.w, r6.w
      mul r2.w, r6.w, r8.w
    endif 
    if_nz cb2[58].y
      mov r9.x, -r7.x
      ftou r6.w, r4.w
      add r4.w, r4.w, l(1.000000)
      min r4.w, r4.w, l(2.000000)
      ftou r4.w, r4.w
      add r5.w, -r5.w, l(1.000000)
      mul r5.w, r5.w, l(28.000000)
      ftou r5.w, r5.w
      add r10.xy, r8.yzyy, -cb2[r6.w + 20].xyxx
      mul r10.xy, r10.xyxx, cb2[r6.w + 20].zzzz
      mad r10.xy, r10.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      add r8.yz, r8.yyzy, -cb2[r4.w + 20].xxyx
      mul r8.yz, r8.yyzy, cb2[r4.w + 20].zzzz
      mad r8.yz, r8.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      mov r9.y, r8.x
      mov r9.z, r7.x
      mov r8.w, l(0)
      mov r9.w, l(0)
      loop 
        uge r10.z, r9.w, l(8)
        breakc_nz r10.z
        ult r10.z, r5.w, r9.w
        movc r11.xy, r10.zzzz, r8.yzyy, r10.xyxx
        movc r10.w, r10.z, cb2[r4.w + 20].w, cb2[r6.w + 20].w
        movc r10.z, r10.z, r4.w, r6.w
        dp2 r12.x, icb[r9.w + 0].yxyy, r9.xyxx
        dp2 r12.y, icb[r9.w + 0].yxyy, r9.yzyy
        mad r11.xy, r12.xyxx, r10.wwww, r11.xyxx
        iadd r10.z, r10.z, cb2[26].y
        utof r11.z, r10.z
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.z, r11.xyzx, t13.xxxx, s13, r2.z
        sample_l_indexable(texture2darray)(float,float,float,float) r10.w, r11.xyzx, t31.yzwx, s0, l(0.000000)
        add r10.z, r10.w, r10.z
        add_sat r10.z, r10.z, l(-1.000000)
        mad r8.w, r10.z, l(0.125000), r8.w
        iadd r9.w, r9.w, l(1)
      endloop 
      mul r2.z, r8.w, r8.w
      mul r2.w, r8.w, r2.z
    endif 
  endif 
endif 
and r2.z, cb2[53].x, l(0x0000ffff)
if_nz r2.z
  iadd r2.z, r2.z, cb2[0].x
  iadd r2.z, r2.z, l(-1)
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r4.w, r2.z, l(52), t12.xxxx
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r9.xyzw, r2.z, l(68), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r10.xyzw, r2.z, l(84), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r11.xyzw, r2.z, l(132), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.xyzw, r2.z, l(148), t12.xyzw
  mad r0.y, |r0.y|, l(-0.200000), l(0.400000)
  mad r13.xyz, r1.xyzx, r0.yyyy, v5.xyzx
  mov r13.w, l(1.000000)
  dp4 r9.x, r9.xyzw, r13.xyzw
  dp4 r9.y, r10.xyzw, r13.xyzw
  mad r8.yz, r9.xxyx, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
  add r8.yz, r12.zzwz, r8.yyzy
  mul r8.yz, r12.xxyx, r8.yyzy
  div r9.xy, r4.wwww, r11.xzxx
  add r9.zw, -r9.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
  ge r9.zw, r8.yyyz, r9.zzzw
  ge r9.xy, r9.xyxx, r8.yzyy
  or r9.xy, r9.xyxx, r9.zwzz
  or r0.y, r9.y, r9.x
  if_z r0.y
    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r0.y, r2.z, l(28), t12.xxxx
    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r9.xyzw, r2.z, l(100), t12.xyzw
    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r10.xy, r2.z, l(164), t12.xyxx
    dp4 r2.z, r9.xyzw, r13.xyzw
    mov_sat r8.yz, r8.yyzy
    mad r9.xy, r8.yzyy, r11.xzxx, r11.ywyy
    add r2.z, r10.x, r2.z
    div r2.z, r2.z, r10.y
    max r2.z, r2.z, l(0.00006104)
    and r0.y, r0.y, l(0x0000ffff)
    if_nz cb2[58].y
      mov r10.x, -r7.x
      utof r11.z, r0.y
      mov r10.y, r8.x
      mov r10.z, r7.x
      mov r5.w, l(0)
      mov r6.w, l(0)
      loop 
        ige r7.x, r6.w, l(8)
        breakc_nz r7.x
        dp2 r8.x, icb[r6.w + 0].yxyy, r10.xyxx
        dp2 r8.y, icb[r6.w + 0].yxyy, r10.yzyy
        mad r11.xy, r8.xyxx, r4.wwww, r9.xyxx
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r7.x, r11.xyzx, t9.xxxx, s13, r2.z
        mad r5.w, r7.x, l(0.125000), r5.w
        iadd r6.w, r6.w, l(1)
      endloop 
    else 
      utof r9.z, r0.y
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r5.w, r9.xyzx, t9.xxxx, s13, r2.z
    endif 
    mul r0.y, r5.w, r5.w
    mul r0.y, r5.w, r0.y
  else 
    mov r0.y, l(1.000000)
  endif 
  mul r2.w, r0.y, r2.w
endif 
mul r8.xyz, r2.wwww, cb2[18].xyzx
mad r9.xyz, -v5.xyzx, r3.wwww, cb2[17].xyzx
dp3 r0.y, r9.xyzx, r9.xyzx
rsq r0.y, r0.y
mul r9.xyz, r0.yyyy, r9.xyzx
dp3_sat r0.y, r1.xyzx, r9.xyzx
dp3_sat r1.x, r9.xyzx, cb2[17].xyzx
dp3_sat r1.y, r9.xyzx, r6.xyzx
add r1.x, -r1.x, l(1.000000)
mul r1.z, r1.x, r1.x
mul r1.z, r1.z, r1.z
mul r1.x, r1.z, r1.x
mad r1.x, cb0[14].w, r1.x, cb0[14].z
log r0.y, r0.y
mul r2.zw, r0.yyyy, cb0[14].xxxy
exp r2.zw, r2.zzzw
dp2 r0.y, r2.zwzz, cb0[15].xyxx
mul r1.x, r1.w, r1.x
mul r1.y, r1.y, l(12.566371)
div r1.x, r1.x, r1.y
mul r0.y, r0.y, r1.x
add r1.x, r1.w, r1.w
div r1.x, r1.w, r1.x
mad r6.xyz, r8.xyzx, r0.yyyy, r7.yzwy
mad r1.xyz, r8.xyzx, r1.xxxx, r4.xyzx
mad r4.xyz, r8.xyzx, r1.wwww, r4.xyzx
mul r1.xyz, r3.xyzx, r1.xyzx
mad r0.xyz, r4.xyzx, r0.xzwx, -r1.xyzx
mad r0.xyz, r2.yyyy, r0.xyzx, r1.xyzx
add r0.w, -r2.y, l(1.000000)
mad r0.xyz, r6.xyzx, r0.wwww, r0.xyzx
sqrt r0.w, r2.x
mad r1.x, r0.w, cb0[17].z, cb0[17].w
exp r1.x, r1.x
min r1.x, r1.x, l(1.000000)
mul r1.yzw, cb0[29].xxyz, cb2[18].xxyz
mad r0.xyz, -cb0[29].xyzx, cb2[18].xyzx, r0.xyzx
mad r0.xyz, r1.xxxx, r0.xyzx, r1.yzwy
lt r1.x, l(0.000000), cb2[9].z
if_nz r1.x
  lt r1.x, l(0.000000), cb2[13].w
  if_nz r1.x
    mad r1.xy, r0.wwww, cb2[15].xyxx, cb2[14].zwzz
    mul r1.xy, r1.xyxx, cb2[16].xyxx
    lt r1.z, l(0.010000), |v5.z|
    mul r2.xy, v5.zzzz, cb2[15].zwzz
    mul r2.zw, r2.xxxy, l(0.000000, 0.000000, -1.442695, -1.442695)
    exp r2.zw, r2.zzzw
    add r2.zw, -r2.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    div r2.xy, r2.zwzz, r2.xyxx
    mul r2.xy, r1.xyxx, r2.xyxx
    movc r1.xy, r1.zzzz, r2.xyxx, r1.xyxx
    mul r1.xzw, r1.xxxx, cb2[12].xxyz
    exp r1.xzw, r1.xxzw
    mul r2.xyz, r1.yyyy, cb2[12].xyzx
    exp r2.xyz, r2.xyzx
    add r2.xyz, -r1.xzwx, r2.xyzx
    mad r1.xyz, cb2[13].wwww, r2.xyzx, r1.xzwx
  else 
    mad r1.w, r0.w, cb2[15].x, cb2[14].z
    mul r1.w, r1.w, cb2[16].x
    lt r2.x, l(0.010000), |v5.z|
    mul r2.y, v5.z, cb2[15].z
    mul r2.z, r2.y, l(-1.442695)
    exp r2.z, r2.z
    add r2.z, -r2.z, l(1.000000)
    div r2.y, r2.z, r2.y
    mul r2.y, r1.w, r2.y
    movc r1.w, r2.x, r2.y, r1.w
    mul r2.xyz, r1.wwww, cb2[12].xyzx
    exp r1.xyz, r2.xyzx
  endif 
  mad r1.xyz, r1.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r1.xyz, r1.xyzx, -cb2[9].zzzz
  dp3 r1.w, cb2[7].yzwy, -r5.xyzx
  mad r2.x, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r2.y, cb2[8].w, -r1.w, l(1.000000)
  mul r2.y, r2.y, r2.y
  mul r2.y, r2.y, l(12.566371)
  div r2.x, r2.x, r2.y
  add r2.y, r0.w, -cb2[10].w
  mul_sat r2.y, r2.y, cb2[11].w
  mul r2.x, r2.y, r2.x
  mov_sat r1.w, r1.w
  mad r1.w, r1.w, r1.w, l(1.000000)
  mad r1.w, r1.w, l(0.05968310), l(-1.000000)
  mad r1.w, cb2[8].z, r1.w, l(1.000000)
  mul r2.xyz, r2.xxxx, cb2[11].xyzx
  mad r2.xyz, r1.wwww, cb2[10].xyzx, r2.xyzx
  mul r2.xyz, r2.xyzx, cb2[9].wwww
  add r3.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r2.xyz, r2.xyzx, r3.xyzx
  mad r1.xyz, r0.xyzx, r1.xyzx, r2.xyzx
else 
  mul r1.w, v5.z, cb2[6].x
  mad r2.x, cb2[6].x, v5.z, cb2[5].x
  lt r2.y, |r1.w|, l(0.000100)
  min r2.z, r2.x, l(64.000000)
  mul r2.z, r2.z, l(1.442695)
  exp r2.z, r2.z
  mov_sat r2.w, cb2[6].z
  lt r3.x, r2.x, l(0.000000)
  add r2.x, r2.x, l(1.000000)
  movc r2.x, r3.x, r2.z, r2.x
  add r2.x, r2.x, -cb2[6].z
  movc r1.w, r2.y, l(1.000000), r1.w
  div r1.w, r2.x, r1.w
  movc r1.w, r2.y, r2.w, r1.w
  mul r1.w, r1.w, cb2[5].z
  mad r0.w, r1.w, r0.w, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  dp3 r1.w, cb2[7].yzwy, r5.xyzx
  mad_sat r1.w, cb2[8].y, r1.w, cb2[8].x
  add r2.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r2.xyzw, r1.wwww, r2.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r2.w
  add r2.xyz, -r0.xyzx, r2.xyzx
  mad r1.xyz, r0.wwww, r2.xyzx, r0.xyzx
endif 
mul r0.xyz, r1.xyzx, cb1[85].yyyy
ge r1.xyz, r0.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.xyz, r0.xyzx, r1.xyzx
min o0.xyz, r0.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
mov o0.w, l(1.000000)
ret 
// Approximately 1101 instruction slots used
