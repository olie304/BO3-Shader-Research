//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:38:41 2021
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float3 colorTint;                  // Offset:  160 Size:    12
//   float baseNormalHeight;            // Offset:  172 Size:     4
//   float2 glossRange;                 // Offset:  176 Size:     8
//   float detailScaleHeight;           // Offset:  184 Size:     4
//   float scriptReplacement1;          // Offset:  188 Size:     4 [unused]
//   float scriptReplacement2;          // Offset:  192 Size:     4 [unused]
//   float alphaRevealRamp;             // Offset:  196 Size:     4
//   float alphaRevealSoftEdge;         // Offset:  200 Size:     4
//   float hdrScale;                    // Offset:  204 Size:     4
//   bool enableGTAO;                   // Offset:  208 Size:     4
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4 [unused]
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4
//   uint numDynamicDecals;             // Offset:  924 Size:     4
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for shaderConstantSetBuffer
// {
//
//   struct GpuShaderConstantSet
//   {
//       
//       float4 scriptVector0;          // Offset:    0
//       float4 scriptVector1;          // Offset:   16
//       float4 scriptVector2;          // Offset:   32
//       float4 scriptVector3;          // Offset:   48
//       float4 scriptVector4;          // Offset:   64
//       float4 scriptVector5;          // Offset:   80
//       float4 scriptVector6;          // Offset:   96
//       float4 scriptVector7;          // Offset:  112
//       float4 weaponParam0;           // Offset:  128
//       float4 weaponParam1;           // Offset:  144
//       float4 weaponParam2;           // Offset:  160
//       float4 weaponParam3;           // Offset:  176
//       float4 weaponParam4;           // Offset:  192
//       float4 weaponParam5;           // Offset:  208
//       float4 weaponParam6;           // Offset:  224
//       float4 weaponParam7;           // Offset:  240
//       float4 characterParam0;        // Offset:  256
//       float4 characterParam1;        // Offset:  272
//       float4 characterParam2;        // Offset:  288
//       float4 characterParam3;        // Offset:  304
//       float4 characterParam4;        // Offset:  320
//       float4 characterParam5;        // Offset:  336
//       float4 characterParam6;        // Offset:  352
//       float4 characterParam7;        // Offset:  368
//
//   } $Element;                        // Offset:    0 Size:   384
//
// }
//
// Resource bind info for modelInstanceBuffer
// {
//
//   struct ModelInstanceData
//   {
//       
//       uint boneArrayIndex;           // Offset:    0
//       uint shaderConstantSet;        // Offset:    4
//       uint flagsAndPrevFrameIndex;   // Offset:    8
//       uint worldMatrix;              // Offset:   12
//       uint siegeAnimStateOffset;     // Offset:   16
//       uint prevFrameSiegeAnimStateOffset;// Offset:   20
//
//   } $Element;                        // Offset:    0 Size:    24
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for forwardDecalConstants
// {
//
//   struct CoreDecalConstantsPack
//   {
//       
//       uint4 data[8];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   128
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// colorSampler                      sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// specColorSampler                  sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// normalSampler                     sampler      NA          NA             s5      1 
// aoSampler                         sampler      NA          NA             s6      1 
// LinearSampler                     sampler      NA          NA             s7      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// shaderConstantSetBuffer           texture  struct         r/o             t0      1 
// thicknessMap                      texture  float4          2d             t3      1 
// modelInstanceBuffer               texture  struct         r/o             t4      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// floatZSampler                     texture  float4          2d            t21      1 
// colorMap                          texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// normalMap                         texture  float4          2d            t24      1 
// glossMap                          texture  float4          2d            t25      1 
// aoMap                             texture  float4          2d            t26      1 
// gSSAOTexture                      texture   float          2d            t27      1 
// detailMap                         texture  float4          2d            t29      1 
// veinMap                           texture  float4          2d            t30      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// visibleDecals                     texture    uint     2darray            t35      1 
// forwardDecalConstants             texture  struct         r/o            t36      1 
// materialTexBC7                    texture  float4     2darray            t42      1 
// materialTexBC3                    texture  float4     2darray            t43      1 
// materialTexBC7linear              texture  float4     2darray            t44      1 
// materialTexMask                   texture  float4     2darray            t45      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    1   x           1     NONE   float       
// TEXCOORD                 0    yz         1     NONE   float    yz 
// TEXCOORD                 4   x           2     NONE    uint   x   
// TEXCOORD                 1   xyz         3     NONE   float   xyz 
// TEXCOORD                 2   xyz         4     NONE   float   xyz 
// TEXCOORD                 3   xyz         5     NONE   float   xyz 
// OFFPOSITION              0   xyz         6     NONE   float   xyz 
// SV_IsFrontFace           0   x           7    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyz         0   TARGET   float   xyz 
// SV_TARGET                1   xyz         1   TARGET   float   xyz 
// SV_TARGET                2   xyzw        2   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[14], immediateIndexed
dcl_constantbuffer CB1[93], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_structured t0, 384
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_structured t4, 24
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2d (float,float,float,float) t26
dcl_resource_texture2d (float,float,float,float) t27
dcl_resource_texture2d (float,float,float,float) t29
dcl_resource_texture2d (float,float,float,float) t30
dcl_resource_texture2darray (float,float,float,float) t31
dcl_resource_texture2darray (uint,uint,uint,uint) t35
dcl_resource_structured t36, 128
dcl_resource_texture2darray (float,float,float,float) t42
dcl_resource_texture2darray (float,float,float,float) t43
dcl_resource_texture2darray (float,float,float,float) t44
dcl_resource_texture2darray (float,float,float,float) t45
dcl_input_ps_siv linear noperspective v0.xyzw, position
dcl_input_ps linear v1.yz
dcl_input_ps constant v2.x
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps_sgv constant v7.x, is_front_face
dcl_output o0.xyz
dcl_output o1.xyz
dcl_output o2.xyzw
dcl_temps 70
dcl_indexableTemp x0[4], 4
dcl_indexableTemp x1[4], 4
dcl_indexableTemp x2[4], 4
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.yzyy, t22.xyzw, s1
add r1.xyz, cb0[10].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r1.xyz, r0.wwww, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r2.xyz, r0.xyzx, r1.xyzx
sample_indexable(texture2d)(float,float,float,float) r1.w, v1.yzyy, t25.yzwx, s3
add r2.w, -cb0[11].x, cb0[11].y
mad r1.w, r1.w, r2.w, cb0[11].x
mul_sat r1.w, r1.w, l(0.05882353)
sample_indexable(texture2d)(float,float,float,float) r3.xyz, v1.yzyy, t24.xyzw, s5
add r3.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.000000, 0.000000)
mad r3.xyz, cb0[10].wwww, r3.xyzx, l(0.500000, 0.500000, 0.000000, 0.000000)
mad r3.xy, r3.xyxx, l(1.99218750, 1.99218750, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r2.w, r3.xyxx, r3.xyxx
add r2.w, -r2.w, l(1.000000)
max r2.w, r2.w, l(0.000000)
sqrt r4.z, r2.w
mul r2.w, r3.z, r3.z
mul r2.w, r2.w, l(0.33333334)
min r2.w, r2.w, l(1.000000)
mul r3.zw, v1.yyyz, cb0[4].xxxy
sample_indexable(texture2d)(float,float,float,float) r5.xyz, r3.zwzz, t29.xyzw, s5
mad r3.zw, r5.xxxy, l(0.000000, 0.000000, 1.99218750, 1.99218750), l(0.000000, 0.000000, -1.000000, -1.000000)
mul r4.w, r5.z, r5.z
mul r4.w, r4.w, l(0.33333334)
min r4.w, r4.w, l(1.000000)
mad r4.xy, r3.zwzz, cb0[11].zzzz, r3.xyxx
dp3 r3.x, r4.xyzx, r4.xyzx
rsq r3.x, r3.x
mul r3.xyz, r3.xxxx, r4.xyzx
mad r2.w, r4.w, cb0[11].z, r2.w
movc r3.w, v7.x, l(1.000000), l(-1.000000)
dp3 r4.x, v3.xyzx, v3.xyzx
rsq r4.x, r4.x
mul r4.xyz, r4.xxxx, v3.xyzx
mul r4.xyz, r3.wwww, r4.xyzx
dp3 r4.w, v4.xyzx, v4.xyzx
rsq r4.w, r4.w
mul r5.xyz, r4.wwww, v4.xyzx
mul r5.xyz, r3.wwww, r5.xyzx
dp3 r4.w, v5.xyzx, v5.xyzx
rsq r4.w, r4.w
mul r6.xyz, r4.wwww, v5.xyzx
mul r6.xyz, r3.wwww, r6.xyzx
mul r1.w, r1.w, l(-17.000000)
exp r1.w, r1.w
add r1.w, r1.w, r2.w
log r1.w, r1.w
mul_sat r1.w, r1.w, l(-0.05882353)
mul r6.xyz, r3.yyyy, r6.xyzx
mad r5.xyz, r5.xyzx, r3.xxxx, r6.xyzx
mad r3.xyz, r4.xyzx, r3.zzzz, r5.xyzx
dp3 r2.w, r3.xyzx, r3.xyzx
rsq r2.w, r2.w
mul r3.xyz, r2.wwww, r3.xyzx
sample_indexable(texture2d)(float,float,float,float) r2.w, v1.yzyy, t3.yzwx, s1
add r2.w, -r2.w, l(1.000000)
mul r4.xyz, r2.wwww, l(1.000000, 0.500000, 0.500000, 0.000000)
dp3 r2.w, r2.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r5.xyzw, v1.yzyy, t30.xyzw, s1
ld_structured_indexable(structured_buffer, stride=24)(mixed,mixed,mixed,mixed) r6.xy, v2.x, l(4), t4.xyxx
ld_structured_indexable(structured_buffer, stride=384)(mixed,mixed,mixed,mixed) r6.xz, r6.x, l(16), t0.yxxx
mov_sat r6.x, r6.x
mad r0.xyz, -r0.xyzx, r1.xyzx, r2.wwww
mad r0.xyz, r6.zzzz, r0.xyzx, r2.xyzx
add r1.x, -r6.x, l(0.998000)
max r1.x, r1.x, l(0.000000)
mov_sat r1.y, cb0[12].y
log r1.z, r6.x
mul r1.z, r1.z, r1.y
exp r1.z, r1.z
mov r2.x, -r1.z
log r1.z, r1.x
mul r1.y, r1.z, r1.y
exp r2.y, r1.y
mad_sat r1.xy, cb0[12].zzzz, r2.xyxx, r1.xxxx
add r1.z, -r1.x, r5.w
add r1.x, -r1.x, r1.y
div_sat r1.x, r1.z, r1.x
mul r2.xyzw, v0.xyxy, cb1[44].zwzw
if_nz cb0[13].x
  mul r7.xyz, v3.yyyy, cb1[5].xyzx
  mad r7.xyz, v3.xxxx, cb1[4].xyzx, r7.xyzx
  mad r7.xyz, v3.zzzz, cb1[6].xyzx, r7.xyzx
  dp3 r1.y, r7.xyzx, r7.xyzx
  rsq r1.y, r1.y
  mul r7.xyz, r1.yyyy, r7.xyzx
  mul r1.y, cb1[70].w, l(0.500000)
  mad r6.zw, cb1[73].xxxy, r2.zzzw, -cb1[73].zzzw
  mul r8.xy, r6.zwzz, v0.wwww
  dp2 r1.z, v0.xyxx, l(0.06711056, 0.00583715, 0.000000, 0.000000)
  frc r1.z, r1.z
  mul r1.z, r1.z, l(52.982918)
  frc r1.z, r1.z
  mad r1.y, r1.z, l(3.141600), r1.y
  sincos r9.x, r10.x, r1.y
  mul r11.xyzw, cb1[44].zwzw, l(4.166667, 4.166667, 16.666668, 16.666668)
  mov r10.y, r9.x
  mad r9.xyzw, r11.xyzw, r10.xyxy, r2.zwzw
  mul r12.xyzw, r9.xyzw, cb1[44].xyxy
  ftoi r13.xy, r12.xyxx
  mov r13.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r1.y, r13.xyzw, t21.yxzw
  ge r1.z, r1.y, l(0.984375)
  mul r4.w, r1.y, l(1.01587307)
  mad r1.y, r1.y, l(64.000000), l(-63.000000)
  movc r1.y, r1.z, r1.y, r4.w
  max r1.y, r1.y, l(0.00000001)
  rcp r13.z, r1.y
  mad r9.xyzw, cb1[73].xyxy, r9.xyzw, -cb1[73].zwzw
  mul r13.xy, r9.xyxx, r13.zzzz
  mov r8.z, v0.w
  add r13.xyz, -r8.xyzx, r13.xyzx
  dp3 r1.y, r13.xyzx, r13.xyzx
  rsq r1.y, r1.y
  mul r1.y, r1.y, -r13.z
  max r1.y, r1.y, l(-1.000000)
  ftoi r12.xy, r12.zwzz
  mov r12.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r1.z, r12.xyzw, t21.yzxw
  ge r4.w, r1.z, l(0.984375)
  mul r5.w, r1.z, l(1.01587307)
  mad r1.z, r1.z, l(64.000000), l(-63.000000)
  movc r1.z, r4.w, r1.z, r5.w
  max r1.z, r1.z, l(0.00000001)
  rcp r12.z, r1.z
  mul r12.xy, r9.zwzz, r12.zzzz
  add r9.xyz, -r8.xyzx, r12.xyzx
  dp3 r1.z, r9.xyzx, r9.xyzx
  rsq r1.z, r1.z
  mul r1.z, r1.z, -r9.z
  max r1.y, r1.z, r1.y
  mul r9.xyzw, cb1[44].zwzw, l(37.500000, 37.500000, 66.666672, 66.666672)
  mad r12.xyzw, r9.xyzw, r10.xyxy, r2.zwzw
  mul r13.xyzw, r12.xyzw, cb1[44].xyxy
  ftoi r14.xy, r13.xyxx
  mov r14.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r1.z, r14.xyzw, t21.yzxw
  ge r4.w, r1.z, l(0.984375)
  mul r5.w, r1.z, l(1.01587307)
  mad r1.z, r1.z, l(64.000000), l(-63.000000)
  movc r1.z, r4.w, r1.z, r5.w
  max r1.z, r1.z, l(0.00000001)
  rcp r14.z, r1.z
  mad r12.xyzw, cb1[73].xyxy, r12.xyzw, -cb1[73].zwzw
  mul r14.xy, r12.xyxx, r14.zzzz
  add r14.xyz, -r8.xyzx, r14.xyzx
  dp3 r1.z, r14.xyzx, r14.xyzx
  rsq r1.z, r1.z
  mul r1.z, r1.z, -r14.z
  max r1.y, r1.z, r1.y
  ftoi r13.xy, r13.zwzz
  mov r13.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r1.z, r13.xyzw, t21.yzxw
  ge r4.w, r1.z, l(0.984375)
  mul r5.w, r1.z, l(1.01587307)
  mad r1.z, r1.z, l(64.000000), l(-63.000000)
  movc r1.z, r4.w, r1.z, r5.w
  max r1.z, r1.z, l(0.00000001)
  rcp r13.z, r1.z
  mul r13.xy, r12.zwzz, r13.zzzz
  add r12.xyz, -r8.xyzx, r13.xyzx
  dp3 r1.z, r12.xyzx, r12.xyzx
  rsq r1.z, r1.z
  mul r1.z, r1.z, -r12.z
  max r1.y, r1.z, r1.y
  mul r12.xyzw, cb1[44].zwzw, l(104.166664, 104.166664, 150.000000, 150.000000)
  mad r13.xyzw, r12.xyzw, r10.xyxy, r2.zwzw
  mul r14.xyzw, r13.xyzw, cb1[44].xyxy
  ftoi r15.xy, r14.xyxx
  mov r15.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r1.z, r15.xyzw, t21.yzxw
  ge r4.w, r1.z, l(0.984375)
  mul r5.w, r1.z, l(1.01587307)
  mad r1.z, r1.z, l(64.000000), l(-63.000000)
  movc r1.z, r4.w, r1.z, r5.w
  max r1.z, r1.z, l(0.00000001)
  rcp r15.z, r1.z
  mad r13.xyzw, cb1[73].xyxy, r13.xyzw, -cb1[73].zwzw
  mul r15.xy, r13.xyxx, r15.zzzz
  add r15.xyz, -r8.xyzx, r15.xyzx
  dp3 r1.z, r15.xyzx, r15.xyzx
  rsq r1.z, r1.z
  mul r1.z, r1.z, -r15.z
  max r1.y, r1.z, r1.y
  ftoi r14.xy, r14.zwzz
  mov r14.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r1.z, r14.xyzw, t21.yzxw
  ge r4.w, r1.z, l(0.984375)
  mul r5.w, r1.z, l(1.01587307)
  mad r1.z, r1.z, l(64.000000), l(-63.000000)
  movc r1.z, r4.w, r1.z, r5.w
  max r1.z, r1.z, l(0.00000001)
  rcp r14.z, r1.z
  mul r14.xy, r13.zwzz, r14.zzzz
  add r13.xyz, -r8.xyzx, r14.xyzx
  dp3 r1.z, r13.xyzx, r13.xyzx
  rsq r1.z, r1.z
  mul r1.z, r1.z, -r13.z
  max r1.y, r1.z, r1.y
  mad r11.xyzw, r11.xyzw, -r10.xyxy, r2.zwzw
  mul r13.xyzw, r11.xyzw, cb1[44].xyxy
  ftoi r13.xyzw, r13.zwxy
  mov r14.xy, r13.zwzz
  mov r14.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r1.z, r14.xyzw, t21.yzxw
  ge r4.w, r1.z, l(0.984375)
  mul r5.w, r1.z, l(1.01587307)
  mad r1.z, r1.z, l(64.000000), l(-63.000000)
  movc r1.z, r4.w, r1.z, r5.w
  max r1.z, r1.z, l(0.00000001)
  rcp r14.z, r1.z
  mad r11.xyzw, cb1[73].xyxy, r11.xyzw, -cb1[73].zwzw
  mul r14.xy, r11.xyxx, r14.zzzz
  add r14.xyz, -r8.xyzx, r14.xyzx
  dp3 r1.z, r14.xyzx, r14.xyzx
  rsq r1.z, r1.z
  mul r1.z, r1.z, -r14.z
  max r1.z, r1.z, l(-1.000000)
  mov r13.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.w, r13.xyzw, t21.yzwx
  ge r5.w, r4.w, l(0.984375)
  mul r6.z, r4.w, l(1.01587307)
  mad r4.w, r4.w, l(64.000000), l(-63.000000)
  movc r4.w, r5.w, r4.w, r6.z
  max r4.w, r4.w, l(0.00000001)
  rcp r13.z, r4.w
  mul r13.xy, r11.zwzz, r13.zzzz
  add r11.xyz, -r8.xyzx, r13.xyzx
  dp3 r4.w, r11.xyzx, r11.xyzx
  rsq r4.w, r4.w
  mul r4.w, r4.w, -r11.z
  max r1.z, r1.z, r4.w
  mad r9.xyzw, r9.xyzw, -r10.xyxy, r2.zwzw
  mul r11.xyzw, r9.xyzw, cb1[44].xyxy
  ftoi r11.xyzw, r11.zwxy
  mov r13.xy, r11.zwzz
  mov r13.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.w, r13.xyzw, t21.yzwx
  ge r5.w, r4.w, l(0.984375)
  mul r6.z, r4.w, l(1.01587307)
  mad r4.w, r4.w, l(64.000000), l(-63.000000)
  movc r4.w, r5.w, r4.w, r6.z
  max r4.w, r4.w, l(0.00000001)
  rcp r13.z, r4.w
  mad r9.xyzw, cb1[73].xyxy, r9.xyzw, -cb1[73].zwzw
  mul r13.xy, r9.xyxx, r13.zzzz
  add r13.xyz, -r8.xyzx, r13.xyzx
  dp3 r4.w, r13.xyzx, r13.xyzx
  rsq r4.w, r4.w
  mul r4.w, r4.w, -r13.z
  max r1.z, r1.z, r4.w
  mov r11.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.w, r11.xyzw, t21.yzwx
  ge r5.w, r4.w, l(0.984375)
  mul r6.z, r4.w, l(1.01587307)
  mad r4.w, r4.w, l(64.000000), l(-63.000000)
  movc r4.w, r5.w, r4.w, r6.z
  max r4.w, r4.w, l(0.00000001)
  rcp r11.z, r4.w
  mul r11.xy, r9.zwzz, r11.zzzz
  add r9.xyz, -r8.xyzx, r11.xyzx
  dp3 r4.w, r9.xyzx, r9.xyzx
  rsq r4.w, r4.w
  mul r4.w, r4.w, -r9.z
  max r1.z, r1.z, r4.w
  mad r9.xyzw, r12.xyzw, -r10.xyxy, r2.xyzw
  mul r11.xyzw, r9.xyzw, cb1[44].xyxy
  ftoi r11.xyzw, r11.zwxy
  mov r12.xy, r11.zwzz
  mov r12.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r2.x, r12.xyzw, t21.xyzw
  ge r2.y, r2.x, l(0.984375)
  mul r4.w, r2.x, l(1.01587307)
  mad r2.x, r2.x, l(64.000000), l(-63.000000)
  movc r2.x, r2.y, r2.x, r4.w
  max r2.x, r2.x, l(0.00000001)
  rcp r12.z, r2.x
  mad r9.xyzw, cb1[73].xyxy, r9.xyzw, -cb1[73].zwzw
  mul r12.xy, r9.xyxx, r12.zzzz
  add r12.xyz, -r8.xyzx, r12.xyzx
  dp3 r2.x, r12.xyzx, r12.xyzx
  rsq r2.x, r2.x
  mul r2.x, r2.x, -r12.z
  max r1.z, r1.z, r2.x
  mov r11.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r2.x, r11.xyzw, t21.xyzw
  ge r2.y, r2.x, l(0.984375)
  mul r4.w, r2.x, l(1.01587307)
  mad r2.x, r2.x, l(64.000000), l(-63.000000)
  movc r2.x, r2.y, r2.x, r4.w
  max r2.x, r2.x, l(0.00000001)
  rcp r11.z, r2.x
  mul r11.xy, r9.zwzz, r11.zzzz
  add r8.xyz, -r8.xyzx, r11.xyzx
  dp3 r2.x, r8.xyzx, r8.xyzx
  rsq r2.x, r2.x
  mul r2.x, r2.x, -r8.z
  max r1.z, r1.z, r2.x
  mul r2.xy, r10.xyxx, cb1[73].xyxx
  dp2 r4.w, r2.xyxx, r2.xyxx
  rsq r4.w, r4.w
  mul r8.xy, r2.xyxx, r4.wwww
  mov r8.zw, -r8.yyyy
  dp2 r2.x, r7.yxyy, r8.xzxx
  mad r7.xy, -r8.wxww, r2.xxxx, r7.xyxx
  dp3 r2.x, r7.xyzx, r7.xyzx
  rsq r2.x, r2.x
  mul r7.xyz, r2.xxxx, r7.zxyz
  dp2 r2.x, r8.xyxx, r7.yzyy
  ge r2.x, r2.x, l(0.000000)
  movc r2.x, r2.x, l(-1.000000), l(1.000000)
  mov_sat r7.x, -r7.x
  add r2.y, -r7.x, l(1.000000)
  sqrt r2.y, r2.y
  mad r4.w, r7.x, l(-0.01872930), l(0.074261)
  mad r4.w, r4.w, r7.x, l(-0.21211439)
  mad r4.w, r4.w, r7.x, l(1.57072878)
  mul r2.y, r2.y, r4.w
  mul r4.w, r2.y, r2.x
  add r5.w, -|r1.y|, l(1.000000)
  sqrt r5.w, r5.w
  mad r6.z, |r1.y|, l(-0.01872930), l(0.074261)
  mad r6.z, r6.z, |r1.y|, l(-0.21211439)
  mad r6.z, r6.z, |r1.y|, l(1.57072878)
  mul r6.w, r5.w, r6.z
  mad r6.w, r6.w, l(-2.000000), l(3.14159274)
  lt r1.y, r1.y, -r1.y
  and r1.y, r1.y, r6.w
  mad r1.y, r6.z, r5.w, r1.y
  add r5.w, -|r1.z|, l(1.000000)
  sqrt r5.w, r5.w
  mad r6.z, |r1.z|, l(-0.01872930), l(0.074261)
  mad r6.z, r6.z, |r1.z|, l(-0.21211439)
  mad r6.z, r6.z, |r1.z|, l(1.57072878)
  mul r6.w, r5.w, r6.z
  mad r6.w, r6.w, l(-2.000000), l(3.14159274)
  lt r1.z, r1.z, -r1.z
  and r1.z, r1.z, r6.w
  mad r1.z, r6.z, r5.w, r1.z
  mad r1.y, -r2.x, r2.y, -r1.y
  max r1.y, r1.y, l(-1.570800)
  mad r1.y, r2.x, r2.y, r1.y
  mad r1.z, -r2.x, r2.y, r1.z
  min r1.z, r1.z, l(1.570800)
  mad r1.z, r2.x, r2.y, r1.z
  sincos r7.x, r8.x, r4.w
  add r1.yz, r1.yyzy, r1.yyzy
  mad r5.w, r1.y, r7.x, r8.x
  mad r1.y, -r2.x, r2.y, r1.y
  sincos null, r1.y, r1.y
  add r1.y, -r1.y, r5.w
  mad r5.w, r1.z, r7.x, r8.x
  mad r1.z, -r2.x, r2.y, r1.z
  sincos null, r1.z, r1.z
  add r1.z, -r1.z, r5.w
  mul r1.z, r1.z, l(0.250000)
  mad r1.y, r1.y, l(0.250000), r1.z
  mad r1.z, r4.w, r7.x, r8.x
  div r1.y, r1.y, r1.z
else 
  sample_indexable(texture2d)(float,float,float,float) r1.z, v1.yzyy, t26.yzxw, s6
  sample_l_indexable(texture2d)(float,float,float,float) r2.x, r2.zwzz, t27.xyzw, s7, l(0.000000)
  min r1.y, r1.z, r2.x
endif 
ge r1.z, v0.z, l(0.984375)
mul r2.x, v0.z, l(1.01587307)
mad r2.y, v0.z, l(64.000000), l(-63.000000)
movc r1.z, r1.z, r2.y, r2.x
max r1.z, r1.z, l(0.00000001)
rcp r1.z, r1.z
ftou r2.xy, v0.xyxx
deriv_rtx_coarse r7.xyz, v6.xyzx
deriv_rty_coarse r8.xyz, v6.xyzx
iadd r2.z, cb2[0].y, cb2[0].x
and r6.yz, r6.yyyy, l(0, 0x10000000, 0x20000000, 0)
if_nz r6.y
  add r9.xyz, v6.xyzx, cb1[24].xyzx
  mul r2.w, r1.z, l(0.00781250)
  min r2.w, r2.w, l(15.000000)
  ftou r2.w, r2.w
  ushr r10.xy, r2.xyxx, l(6, 6, 0, 0)
  ishl r10.z, r2.w, l(4)
  and r2.w, cb2[57].z, l(-32)
  iadd r4.w, -r2.w, cb2[57].z
  mov r11.xy, l(0,0,0,0)
  mov r12.w, l(0)
  mov r9.w, l(1.000000)
  mov r13.xyz, l(0,0,0,0)
  mov r14.xyz, l(0,0,0,0)
  mov r15.yz, l(0,0,0,0)
  mov r5.w, l(0)
  loop 
    uge r6.y, r5.w, cb2[57].z
    breakc_nz r6.y
    ushr r11.z, r5.w, l(5)
    iadd r12.xyz, r10.xyzx, r11.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r6.y, r12.xyzw, t35.yxzw
    ieq r6.w, r2.w, r5.w
    ubfe r7.w, r4.w, l(0), r6.y
    movc r6.y, r6.w, r7.w, r6.y
    iadd r6.w, r2.z, r5.w
    mov r12.xyz, r13.xyzx
    mov r16.xyz, r14.xzyx
    mov r17.yz, r15.yyzy
    mov r7.w, r6.y
    loop 
      breakc_z r7.w
      firstbit_lo r8.w, r7.w
      ishl r10.w, l(1), r8.w
      and r11.z, r7.w, r10.w
      if_nz r11.z
        xor r7.w, r7.w, r10.w
        iadd r10.w, r6.w, r8.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r18.xyzw, r10.w, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r19.xy, r10.w, l(16), t11.xyxx
        add r18.xyz, r18.xyzx, -v6.xyzx
        mov r19.z, r18.w
        lt r18.xyz, |r18.xyzx|, r19.zxyz
        and r10.w, r18.y, r18.x
        and r10.w, r18.z, r10.w
        if_nz r10.w
          iadd r8.w, r5.w, r8.w
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r18.xyz, r8.w, l(0), t36.xyzx
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r19.xyz, r8.w, l(16), t36.xyzx
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r20.xyz, r8.w, l(32), t36.xyzx
          mov r21.x, r18.x
          mov r21.y, r19.x
          mov r21.z, r20.x
          dp3 r10.w, r21.xyzx, r21.xyzx
          rsq r10.w, r10.w
          mul r22.xyz, r10.wwww, r21.xyzx
          dp3 r10.w, r22.xyzx, v3.xyzx
          ge r10.w, r10.w, l(0.500000)
          if_nz r10.w
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r23.xyw, r8.w, l(48), t36.xyxz
            mov r21.w, r23.x
            dp4 r21.x, r9.xyzw, r21.xyzw
            mov r24.x, r18.y
            mov r24.y, r19.y
            mov r24.z, r20.y
            mov r24.w, r23.y
            dp4 r21.y, r9.xyzw, r24.xyzw
            mov r23.x, r18.z
            mov r23.y, r19.z
            mov r23.z, r20.z
            dp4 r21.z, r9.xyzw, r23.xyzw
            lt r18.xyz, |r21.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
            and r10.w, r18.y, r18.x
            and r10.w, r18.z, r10.w
            if_nz r10.w
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r18.xyzw, r8.w, l(64), t36.xyzw
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r19.xyzw, r8.w, l(80), t36.xyzw
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r20.xyzw, r8.w, l(96), t36.xyzw
              dp3 r25.x, r7.xyzx, r24.xyzx
              dp3 r25.y, r7.xyzx, r23.xyzx
              dp3 r26.x, r8.xyzx, r24.xyzx
              dp3 r26.y, r8.xyzx, r23.xyzx
              mad r11.zw, r21.yyyz, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
              mul r21.xyz, r25.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
              mul r25.xyz, r26.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
              and r26.xy, r19.yzyy, l(0x0000ffff, 0x0000ffff, 0, 0)
              if_nz r26.x
                ubfe r10.w, l(4), l(24), r19.w
                ishl r10.w, l(1), r10.w
                ushr r13.w, r19.w, l(28)
                ishl r13.w, l(1), r13.w
                ieq r14.w, r26.x, l(4)
                if_nz r14.w
                  and r14.w, r19.w, l(4095)
                  ubfe r15.w, l(12), l(12), r19.w
                  and r16.w, r20.w, l(1023)
                  utof r27.xz, r10.wwww
                  utof r27.y, r13.w
                  mad r26.zw, r11.zzzw, r27.zzzy, l(0.000000, 0.000000, 0.500000, 0.500000)
                  add r28.xy, r27.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r26.zw, r26.zzzw, r28.xxxy
                  utof r28.x, r14.w
                  utof r28.y, r15.w
                  add r26.zw, r26.zzzw, r28.xxxy
                  mul r28.xy, r26.zwzz, cb1[83].xyxx
                  utof r28.z, r16.w
                  mul r29.xyz, r21.zyzz, cb1[83].xyxx
                  mul r29.xyz, r27.xyzx, r29.xyzx
                  mul r30.xyz, r25.zyzz, cb1[83].xyxx
                  mul r27.xyz, r27.xyzx, r30.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r27.xyzw, r28.xyzx, t42.xyzw, s4, r29.xyzx, r27.xyzx
                else 
                  ieq r14.w, r26.x, l(1)
                  if_nz r14.w
                    and r14.w, r19.w, l(4095)
                    ubfe r15.w, l(12), l(12), r19.w
                    and r16.w, r20.w, l(1023)
                    utof r28.xz, r10.wwww
                    utof r28.y, r13.w
                    mad r26.xz, r11.zzwz, r28.zzyz, l(0.500000, 0.000000, 0.500000, 0.000000)
                    add r29.xy, r28.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                    min r26.xz, r26.xxzx, r29.xxyx
                    utof r29.x, r14.w
                    utof r29.y, r15.w
                    add r26.xz, r26.xxzx, r29.xxyx
                    mul r29.xy, r26.xzxx, cb1[83].zwzz
                    utof r29.z, r16.w
                    mul r26.xzw, r21.zzyz, cb1[83].zzwz
                    mul r26.xzw, r28.xxyz, r26.xxzw
                    mul r30.xyz, r25.zyzz, cb1[83].zwzz
                    mul r28.xyz, r28.xyzx, r30.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r27.xyzw, r29.xyzx, t43.xyzw, s4, r26.xzwx, r28.xyzx
                  else 
                    mov r27.xyzw, l(1.000000,1.000000,1.000000,1.000000)
                  endif 
                endif 
                mul r18.xyz, r18.xyzx, r27.xyzx
                mul r10.w, r18.w, r27.w
              else 
                mov r18.xyz, l(0,0,0,0)
                mov r10.w, l(0)
              endif 
              ne r13.w, r19.x, l(1.000000)
              add r14.w, r18.w, r10.w
              mad_sat r14.w, r14.w, r19.x, -r19.x
              movc r10.w, r13.w, r14.w, r10.w
              if_nz r26.y
                ubfe r13.w, l(4), l(24), r20.y
                ishl r13.w, l(1), r13.w
                ushr r14.w, r20.y, l(28)
                ishl r14.w, l(1), r14.w
                ieq r15.w, r26.y, l(2)
                if_nz r15.w
                  and r15.w, r20.y, l(4095)
                  ubfe r19.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r20.yyyw
                  utof r27.xz, r13.wwww
                  utof r27.y, r14.w
                  mad r26.xz, r11.zzwz, r27.zzyz, l(0.500000, 0.000000, 0.500000, 0.000000)
                  add r28.xy, r27.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r26.xz, r26.xxzx, r28.xxyx
                  utof r28.x, r15.w
                  utof r28.yz, r19.xxwx
                  add r26.xz, r26.xxzx, r28.xxyx
                  mul r28.xy, r26.xzxx, cb1[84].xyxx
                  mul r26.xzw, r21.zzyz, cb1[84].xxyx
                  mul r26.xzw, r27.xxyz, r26.xxzw
                  mul r29.xyz, r25.zyzz, cb1[84].xyxx
                  mul r27.xyz, r27.xyzx, r29.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r15.w, r28.xyzx, t45.yzwx, s4, r26.xzwx, r27.xyzx
                else 
                  ieq r16.w, r26.y, l(4)
                  if_nz r16.w
                    and r16.w, r20.y, l(4095)
                    ubfe r19.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r20.yyyw
                    utof r26.xz, r13.wwww
                    utof r26.y, r14.w
                    mad r27.xy, r11.zwzz, r26.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r27.zw, r26.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                    min r27.xy, r27.zwzz, r27.xyxx
                    utof r28.x, r16.w
                    utof r28.y, r19.x
                    add r27.xy, r27.xyxx, r28.xyxx
                    mul r27.xy, r27.xyxx, cb1[83].xyxx
                    utof r27.z, r19.w
                    mul r28.xyz, r21.zyzz, cb1[83].xyxx
                    mul r28.xyz, r26.xyzx, r28.xyzx
                    mul r29.xyz, r25.zyzz, cb1[83].xyxx
                    mul r26.xyz, r26.xyzx, r29.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r15.w, r27.xyzx, t42.yzwx, s4, r28.xyzx, r26.xyzx
                  else 
                    and r16.w, r20.y, l(4095)
                    ubfe r19.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r20.yyyw
                    utof r26.xz, r13.wwww
                    utof r26.y, r14.w
                    mad r27.xy, r11.zwzz, r26.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r27.zw, r26.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                    min r27.xy, r27.zwzz, r27.xyxx
                    utof r28.x, r16.w
                    utof r28.y, r19.x
                    add r27.xy, r27.xyxx, r28.xyxx
                    mul r27.xy, r27.xyxx, cb1[83].zwzz
                    utof r27.z, r19.w
                    mul r28.xyz, r21.zyzz, cb1[83].zwzz
                    mul r28.xyz, r26.xyzx, r28.xyzx
                    mul r29.xyz, r25.zyzz, cb1[83].zwzz
                    mul r26.xyz, r26.xyzx, r29.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r15.w, r27.xyzx, t43.yzwx, s4, r28.xyzx, r26.xyzx
                  endif 
                endif 
                add_sat r13.w, -r15.w, l(1.000000)
                mul r18.xyz, r13.wwww, r18.xyzx
              endif 
              ushr r19.xy, r19.zyzz, l(16, 16, 0, 0)
              if_nz r19.x
                ieq r13.w, r19.x, l(2)
                if_nz r13.w
                  ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r8.w, r8.w, l(112), t36.xxxx
                  ubfe r19.zw, l(0, 0, 4, 12), l(0, 0, 24, 12), r20.zzzz
                  ishl r13.w, l(1), r19.z
                  ushr r14.w, r20.z, l(28)
                  ishl r14.w, l(1), r14.w
                  and r15.w, r20.z, l(4095)
                  and r8.w, r8.w, l(1023)
                  utof r26.xz, r13.wwww
                  utof r26.y, r14.w
                  mad r20.yz, r11.zzwz, r26.zzyz, l(0.000000, 0.500000, 0.500000, 0.000000)
                  add r27.xy, r26.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r20.yz, r20.yyzy, r27.xxyx
                  utof r27.x, r15.w
                  utof r27.y, r19.w
                  add r19.zw, r20.yyyz, r27.xxxy
                  mul r27.xy, r19.zwzz, cb1[84].xyxx
                  utof r27.z, r8.w
                  mul r28.xyz, r21.zyzz, cb1[84].xyxx
                  mul r28.xyz, r26.xyzx, r28.xyzx
                  mul r29.xyz, r25.zyzz, cb1[84].xyxx
                  mul r26.xyz, r26.xyzx, r29.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r8.w, r27.xyzx, t45.yzwx, s4, r28.xyzx, r26.xyzx
                else 
                  ieq r13.w, r19.x, l(6)
                  movc r8.w, r13.w, l(0), l(1.000000)
                endif 
              else 
                mov r8.w, l(1.000000)
              endif 
              mul_sat r8.w, r8.w, l(0.76470590)
              if_nz r19.y
                ieq r13.w, r19.y, l(3)
                if_nz r13.w
                  ubfe r19.xyz, l(4, 12, 10, 0), l(24, 12, 10, 0), r20.xxwx
                  ishl r13.w, l(1), r19.x
                  ushr r14.w, r20.x, l(28)
                  ishl r14.w, l(1), r14.w
                  and r15.w, r20.x, l(4095)
                  utof r20.xz, r13.wwww
                  utof r20.y, r14.w
                  mad r11.zw, r11.zzzw, r20.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
                  add r19.xw, r20.zzzy, l(-0.500000, 0.000000, 0.000000, -0.500000)
                  min r11.zw, r11.zzzw, r19.xxxw
                  utof r26.x, r15.w
                  utof r26.yz, r19.yyzy
                  add r11.zw, r11.zzzw, r26.xxxy
                  mul r26.xy, r11.zwzz, cb1[84].zwzz
                  mul r19.xyz, r21.xyzx, cb1[84].zwzz
                  mul r19.xyz, r20.xyzx, r19.xyzx
                  mul r21.xyz, r25.xyzx, cb1[84].zwzz
                  mul r20.xyz, r20.xyzx, r21.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r19.xyz, r26.xyzx, t44.xyzw, s4, r19.xyzx, r20.xyzx
                else 
                  mov r19.xyz, l(0.500000,0.500000,1.000000,0)
                endif 
                mad r11.zw, r19.xxxy, l(0.000000, 0.000000, 1.99218750, 1.99218750), l(0.000000, 0.000000, -1.000000, -1.000000)
                dp2 r13.w, r11.zwzz, r11.zwzz
                add r13.w, -r13.w, l(1.000000)
                max r13.w, r13.w, l(0.000000)
                sqrt r13.w, r13.w
                mul r14.w, r19.z, r19.z
                mul r14.w, r14.w, l(0.33333334)
                min r14.w, r14.w, l(1.000000)
                dp3 r15.w, r24.xyzx, r24.xyzx
                rsq r15.w, r15.w
                mul r19.xyz, r15.wwww, r24.xyzx
                dp3 r15.w, -r23.xyzx, -r23.xyzx
                rsq r15.w, r15.w
                mul r20.xyz, r15.wwww, -r23.xyzx
                mul r21.xyz, r3.wwww, r22.xyzx
                mul r19.xyz, r3.wwww, r19.xyzx
                mul r20.xyz, r3.wwww, r20.xyzx
                mul r15.w, r8.w, l(-17.000000)
                exp r15.w, r15.w
                add r14.w, r14.w, r15.w
                log r14.w, r14.w
                mul r14.w, r14.w, l(-0.05882353)
                max r8.w, r14.w, l(0.000000)
                mul r20.xyz, r11.wwww, r20.xyzx
                mad r19.xyz, r19.xyzx, r11.zzzz, r20.xyzx
                mad r19.xyz, r21.xyzx, r13.wwww, r19.xyzx
                dp3 r11.z, r19.xyzx, r19.xyzx
                rsq r11.z, r11.z
                mul r19.xyz, r11.zzzz, r19.xyzx
                add r11.z, -r10.w, l(1.000000)
                mov r17.x, r16.x
                mul r20.xyz, r11.zzzz, r17.xyzx
                mad r17.xyz, r19.xyzx, r10.wwww, r20.xyzx
                mov r16.x, r17.x
              endif 
              add r11.z, -r10.w, l(1.000000)
              mul r19.xyz, r11.zzzz, r12.xyzx
              mad r12.xyz, r18.xyzx, r10.wwww, r19.xyzx
              mul r11.w, r11.z, r16.z
              mad r16.y, r16.y, r11.z, r10.w
              mad r16.z, r8.w, r10.w, r11.w
            endif 
          endif 
        endif 
      endif 
    endloop 
    mov r13.xyz, r12.xyzx
    mov r14.xyz, r16.xzyx
    mov r15.yz, r17.yyzy
    iadd r5.w, r5.w, l(32)
  endloop 
  mov r15.x, r14.x
  mov r14.xy, r14.zyzz
else 
  mov r13.xyz, l(0,0,0,0)
  mov r15.xyz, l(0,0,0,0)
  mov r14.xy, l(0,0,0,0)
endif 
if_nz r6.z
  add r9.xyz, v6.xyzx, cb1[24].xyzx
  iadd r2.w, cb2[57].w, cb2[57].z
  mul r1.z, r1.z, l(0.00781250)
  min r1.z, r1.z, l(15.000000)
  ftou r1.z, r1.z
  ushr r10.xy, r2.xyxx, l(6, 6, 0, 0)
  ishl r10.z, r1.z, l(4)
  and r1.z, cb2[57].z, l(-32)
  iadd r4.w, -r1.z, cb2[57].z
  and r5.w, r2.w, l(-32)
  iadd r6.y, r2.w, -r5.w
  mov r11.xy, l(0,0,0,0)
  mov r12.w, l(0)
  mov r9.w, l(1.000000)
  mov r16.xyz, r13.xyzx
  mov r17.xyz, r15.xyzx
  mov r18.xy, r14.xyxx
  mov r6.z, r1.z
  loop 
    uge r6.w, r6.z, r2.w
    breakc_nz r6.w
    ushr r11.z, r6.z, l(5)
    iadd r12.xyz, r10.xyzx, r11.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r6.w, r12.xyzw, t35.yzwx
    ieq r7.w, r1.z, r6.z
    bfi r8.w, r4.w, l(0), l(0), r6.w
    movc r6.w, r7.w, r8.w, r6.w
    ieq r7.w, r5.w, r6.z
    ubfe r8.w, r6.y, l(0), r6.w
    movc r6.w, r7.w, r8.w, r6.w
    iadd r7.w, r2.z, r6.z
    mov r12.xyz, r16.xyzx
    mov r19.xyz, r17.xyzx
    mov r11.zw, r18.xxxy
    mov r8.w, r6.w
    loop 
      breakc_z r8.w
      firstbit_lo r10.w, r8.w
      ishl r13.w, l(1), r10.w
      and r14.z, r8.w, r13.w
      if_nz r14.z
        xor r8.w, r8.w, r13.w
        iadd r13.w, r7.w, r10.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r20.xyzw, r13.w, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r21.xy, r13.w, l(16), t11.xyxx
        add r20.xyz, r20.xyzx, -v6.xyzx
        mov r21.z, r20.w
        lt r20.xyz, |r20.xyzx|, r21.zxyz
        and r13.w, r20.y, r20.x
        and r13.w, r20.z, r13.w
        if_nz r13.w
          iadd r10.w, r6.z, r10.w
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r20.xyz, r10.w, l(0), t36.xyzx
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r21.xyz, r10.w, l(16), t36.xyzx
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r22.xyz, r10.w, l(32), t36.xyzx
          mov r23.x, r20.x
          mov r23.y, r21.x
          mov r23.z, r22.x
          dp3 r13.w, r23.xyzx, r23.xyzx
          rsq r13.w, r13.w
          mul r24.xyz, r13.wwww, r23.xyzx
          dp3 r13.w, r24.xyzx, v3.xyzx
          ge r13.w, r13.w, l(0.500000)
          if_nz r13.w
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r25.xyw, r10.w, l(48), t36.xyxz
            mov r23.w, r25.x
            dp4 r23.x, r9.xyzw, r23.xyzw
            mov r26.x, r20.y
            mov r26.y, r21.y
            mov r26.z, r22.y
            mov r26.w, r25.y
            dp4 r23.y, r9.xyzw, r26.xyzw
            mov r25.x, r20.z
            mov r25.y, r21.z
            mov r25.z, r22.z
            dp4 r23.z, r9.xyzw, r25.xyzw
            lt r20.xyz, |r23.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
            and r13.w, r20.y, r20.x
            and r13.w, r20.z, r13.w
            if_nz r13.w
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r20.xyzw, r10.w, l(64), t36.xyzw
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r21.xyzw, r10.w, l(80), t36.xyzw
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r22.xyzw, r10.w, l(96), t36.xyzw
              dp3 r27.x, r7.xyzx, r26.xyzx
              dp3 r27.y, r7.xyzx, r25.xyzx
              dp3 r28.x, r8.xyzx, r26.xyzx
              dp3 r28.y, r8.xyzx, r25.xyzx
              mad r14.zw, r23.yyyz, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
              mul r23.xyz, r27.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
              mul r27.xyz, r28.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
              and r18.zw, r21.yyyz, l(0, 0, 0x0000ffff, 0x0000ffff)
              if_nz r18.z
                ubfe r13.w, l(4), l(24), r21.w
                ishl r13.w, l(1), r13.w
                ushr r15.w, r21.w, l(28)
                ishl r15.w, l(1), r15.w
                ieq r16.w, r18.z, l(4)
                if_nz r16.w
                  and r16.w, r21.w, l(4095)
                  ubfe r17.w, l(12), l(12), r21.w
                  and r19.w, r22.w, l(1023)
                  utof r28.xz, r13.wwww
                  utof r28.y, r15.w
                  mad r29.xy, r14.zwzz, r28.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r29.zw, r28.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r29.xy, r29.zwzz, r29.xyxx
                  utof r30.x, r16.w
                  utof r30.y, r17.w
                  add r29.xy, r29.xyxx, r30.xyxx
                  mul r29.xy, r29.xyxx, cb1[83].xyxx
                  utof r29.z, r19.w
                  mul r30.xyz, r23.zyzz, cb1[83].xyxx
                  mul r30.xyz, r28.xyzx, r30.xyzx
                  mul r31.xyz, r27.zyzz, cb1[83].xyxx
                  mul r28.xyz, r28.xyzx, r31.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r28.xyzw, r29.xyzx, t42.xyzw, s4, r30.xyzx, r28.xyzx
                else 
                  ieq r16.w, r18.z, l(1)
                  if_nz r16.w
                    and r16.w, r21.w, l(4095)
                    ubfe r17.w, l(12), l(12), r21.w
                    and r18.z, r22.w, l(1023)
                    utof r29.xz, r13.wwww
                    utof r29.y, r15.w
                    mad r30.xy, r14.zwzz, r29.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r30.zw, r29.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                    min r30.xy, r30.zwzz, r30.xyxx
                    utof r31.x, r16.w
                    utof r31.y, r17.w
                    add r30.xy, r30.xyxx, r31.xyxx
                    mul r30.xy, r30.xyxx, cb1[83].zwzz
                    utof r30.z, r18.z
                    mul r31.xyz, r23.zyzz, cb1[83].zwzz
                    mul r31.xyz, r29.xyzx, r31.xyzx
                    mul r32.xyz, r27.zyzz, cb1[83].zwzz
                    mul r29.xyz, r29.xyzx, r32.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r28.xyzw, r30.xyzx, t43.xyzw, s4, r31.xyzx, r29.xyzx
                  else 
                    mov r28.xyzw, l(1.000000,1.000000,1.000000,1.000000)
                  endif 
                endif 
                mul r20.xyz, r20.xyzx, r28.xyzx
                mul r13.w, r20.w, r28.w
              else 
                mov r20.xyz, l(0,0,0,0)
                mov r13.w, l(0)
              endif 
              ne r15.w, r21.x, l(1.000000)
              add r16.w, r20.w, r13.w
              mad_sat r16.w, r16.w, r21.x, -r21.x
              movc r13.w, r15.w, r16.w, r13.w
              if_nz r18.w
                ubfe r15.w, l(4), l(24), r22.y
                ishl r15.w, l(1), r15.w
                ushr r16.w, r22.y, l(28)
                ishl r16.w, l(1), r16.w
                ieq r17.w, r18.w, l(2)
                if_nz r17.w
                  and r17.w, r22.y, l(4095)
                  ubfe r21.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r22.yyyw
                  utof r28.xz, r15.wwww
                  utof r28.y, r16.w
                  mad r29.xy, r14.zwzz, r28.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r29.zw, r28.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r29.xy, r29.zwzz, r29.xyxx
                  utof r30.x, r17.w
                  utof r30.y, r21.x
                  add r29.xy, r29.xyxx, r30.xyxx
                  mul r29.xy, r29.xyxx, cb1[84].xyxx
                  utof r29.z, r21.w
                  mul r30.xyz, r23.zyzz, cb1[84].xyxx
                  mul r30.xyz, r28.xyzx, r30.xyzx
                  mul r31.xyz, r27.zyzz, cb1[84].xyxx
                  mul r28.xyz, r28.xyzx, r31.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r17.w, r29.xyzx, t45.yzwx, s4, r30.xyzx, r28.xyzx
                else 
                  ieq r18.z, r18.w, l(4)
                  if_nz r18.z
                    and r18.z, r22.y, l(4095)
                    ubfe r21.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r22.yyyw
                    utof r28.xz, r15.wwww
                    utof r28.y, r16.w
                    mad r29.xy, r14.zwzz, r28.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r29.zw, r28.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                    min r29.xy, r29.zwzz, r29.xyxx
                    utof r30.x, r18.z
                    utof r30.y, r21.x
                    add r18.zw, r29.xxxy, r30.xxxy
                    mul r29.xy, r18.zwzz, cb1[83].xyxx
                    utof r29.z, r21.w
                    mul r30.xyz, r23.zyzz, cb1[83].xyxx
                    mul r30.xyz, r28.xyzx, r30.xyzx
                    mul r31.xyz, r27.zyzz, cb1[83].xyxx
                    mul r28.xyz, r28.xyzx, r31.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r17.w, r29.xyzx, t42.yzwx, s4, r30.xyzx, r28.xyzx
                  else 
                    and r18.z, r22.y, l(4095)
                    ubfe r21.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r22.yyyw
                    utof r28.xz, r15.wwww
                    utof r28.y, r16.w
                    mad r29.xy, r14.zwzz, r28.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r29.zw, r28.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                    min r29.xy, r29.zwzz, r29.xyxx
                    utof r30.x, r18.z
                    utof r30.y, r21.x
                    add r18.zw, r29.xxxy, r30.xxxy
                    mul r29.xy, r18.zwzz, cb1[83].zwzz
                    utof r29.z, r21.w
                    mul r30.xyz, r23.zyzz, cb1[83].zwzz
                    mul r30.xyz, r28.xyzx, r30.xyzx
                    mul r31.xyz, r27.zyzz, cb1[83].zwzz
                    mul r28.xyz, r28.xyzx, r31.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r17.w, r29.xyzx, t43.yzwx, s4, r30.xyzx, r28.xyzx
                  endif 
                endif 
                add_sat r15.w, -r17.w, l(1.000000)
                mul r20.xyz, r15.wwww, r20.xyzx
              endif 
              ushr r18.zw, r21.zzzy, l(0, 0, 16, 16)
              if_nz r18.z
                ieq r15.w, r18.z, l(2)
                if_nz r15.w
                  ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r10.w, r10.w, l(112), t36.xxxx
                  ubfe r21.xy, l(4, 12, 0, 0), l(24, 12, 0, 0), r22.zzzz
                  ishl r15.w, l(1), r21.x
                  ushr r16.w, r22.z, l(28)
                  ishl r16.w, l(1), r16.w
                  and r17.w, r22.z, l(4095)
                  and r10.w, r10.w, l(1023)
                  utof r28.xz, r15.wwww
                  utof r28.y, r16.w
                  mad r21.xz, r14.zzwz, r28.zzyz, l(0.500000, 0.000000, 0.500000, 0.000000)
                  add r22.yz, r28.zzyz, l(0.000000, -0.500000, -0.500000, 0.000000)
                  min r21.xz, r21.xxzx, r22.yyzy
                  utof r29.x, r17.w
                  utof r29.y, r21.y
                  add r21.xy, r21.xzxx, r29.xyxx
                  mul r21.xy, r21.xyxx, cb1[84].xyxx
                  utof r21.z, r10.w
                  mul r29.xyz, r23.zyzz, cb1[84].xyxx
                  mul r29.xyz, r28.xyzx, r29.xyzx
                  mul r30.xyz, r27.zyzz, cb1[84].xyxx
                  mul r28.xyz, r28.xyzx, r30.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r10.w, r21.xyzx, t45.yzwx, s4, r29.xyzx, r28.xyzx
                else 
                  ieq r15.w, r18.z, l(6)
                  movc r10.w, r15.w, l(0), l(1.000000)
                endif 
              else 
                mov r10.w, l(1.000000)
              endif 
              mul_sat r10.w, r10.w, l(0.76470590)
              if_nz r18.w
                ieq r15.w, r18.w, l(3)
                if_nz r15.w
                  ubfe r21.xyz, l(4, 12, 10, 0), l(24, 12, 10, 0), r22.xxwx
                  ishl r15.w, l(1), r21.x
                  ushr r16.w, r22.x, l(28)
                  ishl r16.w, l(1), r16.w
                  and r17.w, r22.x, l(4095)
                  utof r22.xz, r15.wwww
                  utof r22.y, r16.w
                  mad r14.zw, r14.zzzw, r22.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
                  add r18.zw, r22.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r14.zw, r14.zzzw, r18.zzzw
                  utof r28.x, r17.w
                  utof r28.yz, r21.yyzy
                  add r14.zw, r14.zzzw, r28.xxxy
                  mul r28.xy, r14.zwzz, cb1[84].zwzz
                  mul r21.xyz, r23.xyzx, cb1[84].zwzz
                  mul r21.xyz, r22.xyzx, r21.xyzx
                  mul r23.xyz, r27.xyzx, cb1[84].zwzz
                  mul r22.xyz, r22.xyzx, r23.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r21.xyz, r28.xyzx, t44.xyzw, s4, r21.xyzx, r22.xyzx
                else 
                  mov r21.xyz, l(0.500000,0.500000,1.000000,0)
                endif 
                mad r14.zw, r21.xxxy, l(0.000000, 0.000000, 1.99218750, 1.99218750), l(0.000000, 0.000000, -1.000000, -1.000000)
                dp2 r15.w, r14.zwzz, r14.zwzz
                add r15.w, -r15.w, l(1.000000)
                max r15.w, r15.w, l(0.000000)
                sqrt r15.w, r15.w
                mul r16.w, r21.z, r21.z
                mul r16.w, r16.w, l(0.33333334)
                min r16.w, r16.w, l(1.000000)
                dp3 r17.w, r26.xyzx, r26.xyzx
                rsq r17.w, r17.w
                mul r21.xyz, r17.wwww, r26.xyzx
                dp3 r17.w, -r25.xyzx, -r25.xyzx
                rsq r17.w, r17.w
                mul r22.xyz, r17.wwww, -r25.xyzx
                mul r23.xyz, r3.wwww, r24.xyzx
                mul r21.xyz, r3.wwww, r21.xyzx
                mul r22.xyz, r3.wwww, r22.xyzx
                mul r17.w, r10.w, l(-17.000000)
                exp r17.w, r17.w
                add r16.w, r16.w, r17.w
                log r16.w, r16.w
                mul r16.w, r16.w, l(-0.05882353)
                max r10.w, r16.w, l(0.000000)
                mul r22.xyz, r14.wwww, r22.xyzx
                mad r21.xyz, r21.xyzx, r14.zzzz, r22.xyzx
                mad r21.xyz, r23.xyzx, r15.wwww, r21.xyzx
                dp3 r14.z, r21.xyzx, r21.xyzx
                rsq r14.z, r14.z
                mul r21.xyz, r14.zzzz, r21.xyzx
                add r14.z, -r13.w, l(1.000000)
                mul r22.xyz, r14.zzzz, r19.xyzx
                mad r19.xyz, r21.xyzx, r13.wwww, r22.xyzx
              endif 
              add r14.z, -r13.w, l(1.000000)
              mul r21.xyz, r12.xyzx, r14.zzzz
              mad r12.xyz, r20.xyzx, r13.wwww, r21.xyzx
              mul r14.w, r11.w, r14.z
              mad r11.z, r11.z, r14.z, r13.w
              mad r11.w, r10.w, r13.w, r14.w
            endif 
          endif 
        endif 
      endif 
    endloop 
    mov r16.xyz, r12.xyzx
    mov r17.xyz, r19.xyzx
    mov r18.xy, r11.zwzz
    iadd r6.z, r6.z, l(32)
  endloop 
  mov r13.xyz, r16.xyzx
  mov r15.xyz, r17.xyzx
  mov r14.xy, r18.xyxx
endif 
mov_sat r14.x, r14.x
add r1.z, -r14.x, l(1.000000)
mad o2.xyz, r0.xyzx, r1.zzzz, r13.xyzx
mad r0.x, r0.w, r1.z, r14.x
mad r0.yzw, r3.xxyz, r1.zzzz, r15.xxyz
dp3 r2.z, r0.yzwy, r0.yzwy
rsq r2.z, r2.z
mul r3.xyz, r0.yzwy, r2.zzzz
mad r7.y, r1.w, r1.z, r14.y
log r0.y, |r1.y|
mul r0.yzw, r0.yyyy, l(0.000000, 0.600000, 0.850000, 0.870000)
exp r0.yzw, r0.yyzw
mul r1.y, v6.y, cb1[5].z
mad r1.y, v6.x, cb1[4].z, r1.y
mad r1.y, v6.z, cb1[6].z, r1.y
dp3 r1.z, -v6.xyzx, -v6.xyzx
rsq r1.z, r1.z
mul r6.yzw, r1.zzzz, -v6.xxyz
ine r1.w, cb1[92].x, l(0)
utof r2.zw, r2.yyyx
dp2 r4.w, r2.wzww, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r4.w, r4.w
mul r4.w, r4.w, l(52.982918)
frc r4.w, r4.w
mad r4.w, r4.w, l(6.28318548), cb1[70].w
sincos r8.x, r9.x, r4.w
dp2 r2.z, r2.zwzz, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r2.z, r2.z
mul r2.z, r2.z, l(52.982918)
frc r2.z, r2.z
mad r2.z, r2.z, l(6.28318548), cb1[70].w
sincos r10.x, r11.x, r2.z
dp3_sat r7.x, r3.xyzx, r6.yzwy
dp3 r2.z, -r6.yzwy, r3.xyzx
add r2.z, r2.z, r2.z
mad r12.xyz, r3.xyzx, -r2.zzzz, -r6.yzwy
mul r2.z, r7.y, l(17.000000)
exp r2.z, r2.z
add r2.z, r2.z, l(2.000000)
div r2.z, l(2.000000), r2.z
sqrt r2.w, r2.z
mul r10.yzw, cb1[9].xxyw, -cb1[24].yyyy
mad r10.yzw, -cb1[24].xxxx, cb1[8].xxyw, r10.yyzw
mad r10.yzw, -cb1[24].zzzz, cb1[10].xxyw, r10.yyzw
add r10.yzw, r10.yyzw, cb1[11].xxyw
add r11.yzw, v6.xxyz, cb1[24].xxyz
sqrt r4.w, r2.w
mad r4.w, r4.w, l(0.500000), l(0.500000)
mul r4.w, r4.w, r4.w
mul r5.w, r4.w, l(0.500000)
mad r4.w, -r4.w, l(0.500000), l(1.000000)
mad r7.z, r7.x, r4.w, r5.w
mul r4.w, r4.w, r7.z
mul r5.w, r5.w, r7.z
dp3 r7.z, r3.xyzx, cb2[17].xyzx
ge r7.w, l(0.000000), |r7.z|
if_nz r7.w
  mov r13.y, l(0)
endif 
if_z r7.w
  mul r14.xyz, v6.yyyy, cb2[29].xyzx
  mad r14.xyz, v6.xxxx, cb2[28].xyzx, r14.xyzx
  mad r14.xyz, v6.zzzz, cb2[30].xyzx, r14.xyzx
  add r14.xyz, r14.xyzx, cb2[31].xyzx
  add r7.w, r14.z, -cb2[17].w
  mad r7.w, -r7.w, l(0.00006104), l(1.000000)
  mov_sat r8.z, r7.w
  eq r8.z, r7.w, r8.z
  if_nz r8.z
    mov r8.zw, l(0,0,0,0)
    loop 
      ge r9.w, r8.z, l(3.000000)
      breakc_nz r9.w
      ftou r9.w, r8.z
      add r13.zw, r14.xxxy, -cb2[r9.w + 20].xxxy
      max r13.z, |r13.w|, |r13.z|
      mul r8.w, r13.z, cb2[r9.w + 20].z
      lt r9.w, r8.w, l(1.000000)
      if_nz r9.w
        break 
      endif 
      add r8.z, r8.z, l(1.000000)
      mov r8.w, l(0)
    endloop 
  else 
    mov r8.zw, l(0,0,3.000000,0)
  endif 
  ge r9.w, r8.z, l(3.000000)
  if_nz r9.w
    mul r15.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
    rcp r16.xz, r15.xxxx
    mov r16.y, -r16.z
    mad r15.xyz, r14.xyxx, r16.xyzx, r15.yzyy
    add r16.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r15.xyz, r15.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r15.xyz, r16.xyzx, r15.xyzx
    mul r13.zw, r15.zzzy, cb2[32].xxxx
    round_ni r13.zw, r13.zzzw
    mul r13.w, r13.w, cb2[27].x
    mad r13.z, r13.w, cb2[32].x, r13.z
    ftou r13.z, r13.z
    iadd r13.z, r13.z, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r13.w, r13.z, l(0), t23.xxxx
    and r14.w, r13.w, l(0x40000000)
    ishl r15.w, r13.w, l(2)
    if_z r14.w
      and r14.w, r13.w, l(0x01ffffff)
      iadd r16.x, r13.z, r14.w
      ushr r13.z, r13.w, l(25)
      utof r13.z, r13.z
      mul r15.xyz, r13.zzzz, r15.xyzx
      frc r15.xyz, r15.xyzx
      mul r15.xyz, r15.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
      ftou r15.xyz, r15.xyzx
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.z, r16.x, l(0), t23.xxxx
      ushr r13.zw, r15.zzzy, l(0, 0, 6, 6)
      and r14.w, r16.z, l(0xc0000000)
      iadd r16.w, r16.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.w, r16.w, l(0), t23.xxxx
      movc r13.w, r13.w, r16.z, r16.w
      ushr r16.w, r13.w, l(13)
      movc r13.z, r13.z, r16.w, r13.w
      and r13.z, r13.z, l(8191)
      iadd r17.x, r13.z, r16.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.z, r17.x, l(0), t23.xxxx
      mov r16.y, l(0)
      mov r17.y, l(1)
      movc r17.xyz, r14.wwww, r16.xyzx, r17.xyzx
      movc r18.yz, r14.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r13.zw, r15.zzzy, r18.yyyy
      and r13.zw, r13.zzzw, l(0, 0, 1, 1)
      and r16.w, r17.z, l(0xc0000000)
      iadd r17.w, r17.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.w, r17.w, l(0), t23.xxxx
      movc r13.w, r13.w, r17.z, r17.w
      ushr r17.w, r13.w, l(13)
      movc r13.z, r13.z, r17.w, r13.w
      and r13.z, r13.z, l(8191)
      iadd r18.x, r13.z, r17.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.w, r18.x, l(0), t23.xxxx
      movc r17.xyz, r16.wwww, r17.xyzx, r18.xzwx
      movc r16.xyz, r14.wwww, r16.xyzx, r17.xyzx
      and r13.z, r16.z, l(0xc0000000)
      if_z r13.z
        iadd r13.z, -r16.y, l(6)
        ushr r13.zw, r15.zzzy, r13.zzzz
        or r14.w, r16.z, l(0x40000000)
        bfi r13.w, l(1), l(1), r13.w, l(0)
        bfi r13.z, l(1), l(0), r13.z, r13.w
        imul null, r13.z, r13.z, l(10)
        ushr r13.z, r14.w, r13.z
        and r13.z, r13.z, l(1023)
        iadd r17.x, r13.z, r16.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.w, r17.x, l(0), t23.xxxx
        iadd r17.yz, r16.yyyy, l(0, 1, 2, 0)
        iadd r13.z, -r17.y, l(6)
        ushr r13.zw, r15.zzzy, r13.zzzz
        and r14.w, r17.w, l(0xc0000000)
        or r16.y, r17.w, l(0x40000000)
        bfi r13.w, l(1), l(1), r13.w, l(0)
        bfi r13.z, l(1), l(0), r13.z, r13.w
        imul null, r13.z, r13.z, l(10)
        ushr r13.z, r16.y, r13.z
        and r13.z, r13.z, l(1023)
        iadd r18.x, r13.z, r17.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.x, l(0), t23.xxxx
        mov r18.y, r17.z
        movc r18.xyz, r14.wwww, r17.xywx, r18.xyzx
        iadd r13.z, -r18.y, l(6)
        ushr r13.zw, r15.zzzy, r13.zzzz
        and r16.y, r18.z, l(0xc0000000)
        or r16.w, r18.z, l(0x40000000)
        bfi r13.w, l(1), l(1), r13.w, l(0)
        bfi r13.z, l(1), l(0), r13.z, r13.w
        imul null, r13.z, r13.z, l(10)
        ushr r13.z, r16.w, r13.z
        and r13.z, r13.z, l(1023)
        iadd r19.x, r13.z, r18.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.y, r19.x, l(0), t23.xxxx
        movc r13.zw, r16.yyyy, r18.xxxz, r19.xxxy
        movc r16.xz, r14.wwww, r17.xxwx, r13.zzwz
      endif 
      and r13.z, r16.z, l(0xc0000000)
      if_z r13.z
        ubfe r13.w, l(14), l(15), r16.z
        utof r13.w, r13.w
        mul r13.w, r13.w, cb2[27].w
        mul r13.w, r13.w, l(0.00006104)
        and r16.yw, r16.zzzz, l(0, 0x00007fff, 0, 0x20000000)
        utof r14.w, r16.y
        mul r14.w, r14.w, cb2[27].w
        mul r14.w, r14.w, l(0.00003052)
        and r16.y, r15.y, l(3)
        iadd r16.y, r16.y, r16.x
        iadd r16.y, r16.y, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.y, r16.y, l(0), t23.xxxx
        bfi r17.xyz, l(2, 2, 1, 0), l(3, 1, 4, 0), r15.xyzx, l(0, 0, 0, 0)
        ushr r15.x, r16.y, r17.x
        and r15.x, r15.x, l(255)
        utof r15.x, r15.x
        mul r15.x, r14.w, r15.x
        mad r15.x, r15.x, l(0.00392157), r13.w
        iadd r15.y, r17.y, l(1)
        ubfe r15.z, l(1), l(1), r15.z
        iadd r15.y, r15.z, r15.y
        iadd r15.y, r15.y, r16.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.y, r15.y, l(0), t23.xxxx
        ushr r15.y, r15.y, r17.z
        and r15.y, r15.y, l(0x0000ffff)
        utof r15.y, r15.y
        mul r14.w, r14.w, r15.y
        mad r13.w, r14.w, l(0.00001526), r13.w
        movc r15.w, r16.w, r15.x, r13.w
      else 
        and r13.w, r16.z, l(0x80000000)
        iadd r14.w, r16.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r14.w, r14.w, l(0), t23.xxxx
        movc r13.w, r13.w, r14.w, l(0)
        ishl r14.w, r16.z, l(2)
        ushr r15.x, r13.w, l(16)
        f16tof32 r15.x, r15.x
        and r13.w, r13.w, l(0x0000ffff)
        f16tof32 r13.w, r13.w
        mad r14.w, r14.x, r15.x, r14.w
        mad r13.w, r14.y, r13.w, r14.w
        movc r15.w, r13.z, r13.w, r15.w
      endif 
    endif 
    mad r13.z, -cb2[27].z, l(2.000000), r14.z
    lt r13.z, r15.w, r13.z
    movc r13.y, r13.z, l(0), l(1.000000)
  endif 
  if_z r9.w
    if_z cb2[58].y
      ftou r9.w, r8.z
      add r13.zw, r14.xxxy, -cb2[r9.w + 20].xxxy
      mul r13.zw, r13.zzzw, cb2[r9.w + 20].zzzz
      mad r15.xy, r13.zwzz, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r9.w, cb2[26].y
      add r15.z, r8.z, r9.w
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r9.w, r15.xyzx, t13.xxxx, s13, r7.w
      sample_l_indexable(texture2darray)(float,float,float,float) r13.z, r15.xyzx, t31.yzxw, s0, l(0.000000)
      add r9.w, r9.w, r13.z
      add_sat r9.w, r9.w, l(-1.000000)
      mul r13.z, r9.w, r9.w
      mul r13.y, r9.w, r13.z
    endif 
    if_nz cb2[58].y
      mov r15.x, -r8.x
      ftou r9.w, r8.z
      add r8.z, r8.z, l(1.000000)
      min r8.z, r8.z, l(2.000000)
      add r8.w, -r8.w, l(1.000000)
      mul r8.w, r8.w, l(28.000000)
      ftou r8.zw, r8.zzzw
      add r13.zw, r14.xxxy, -cb2[r9.w + 20].xxxy
      mul r13.zw, r13.zzzw, cb2[r9.w + 20].zzzz
      mad r13.zw, r13.zzzw, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
      add r14.xy, r14.xyxx, -cb2[r8.z + 20].xyxx
      mul r14.xy, r14.xyxx, cb2[r8.z + 20].zzzz
      mad r14.xy, r14.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      mov r15.y, r9.x
      mov r15.z, r8.x
      mov r14.zw, l(0,0,0,0)
      loop 
        uge r15.w, r14.w, l(8)
        breakc_nz r15.w
        ult r15.w, r8.w, r14.w
        movc r16.xy, r15.wwww, r14.xyxx, r13.zwzz
        movc r16.z, r15.w, cb2[r8.z + 20].w, cb2[r9.w + 20].w
        movc r15.w, r15.w, r8.z, r9.w
        dp2 r17.x, icb[r14.w + 0].yxyy, r15.xyxx
        dp2 r17.y, icb[r14.w + 0].yxyy, r15.yzyy
        mad r16.xy, r17.xyxx, r16.zzzz, r16.xyxx
        iadd r15.w, r15.w, cb2[26].y
        utof r16.z, r15.w
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r15.w, r16.xyzx, t13.xxxx, s13, r7.w
        sample_l_indexable(texture2darray)(float,float,float,float) r16.x, r16.xyzx, t31.xyzw, s0, l(0.000000)
        add r15.w, r15.w, r16.x
        add_sat r15.w, r15.w, l(-1.000000)
        mad r14.z, r15.w, l(0.125000), r14.z
        iadd r14.w, r14.w, l(1)
      endloop 
      mul r7.w, r14.z, r14.z
      mul r13.y, r14.z, r7.w
    endif 
  endif 
endif 
lt r7.w, l(0.000000), |r7.z|
if_nz r7.w
  lt r7.w, l(0.000000), r13.y
  if_nz r7.w
    mul r7.w, r2.z, cb2[18].w
    mul r7.w, r7.w, l(0.250000)
    if_nz cb2[23].x
      add r14.xyz, v6.xyzx, cb1[24].xyzx
      mov r14.w, l(1.000000)
      dp4 r8.z, cb2[24].xyzw, r14.xyzw
      dp4 r8.w, cb2[25].xyzw, r14.xyzw
      frc r14.xy, r8.zwzz
      iadd r8.z, l(-1), cb2[23].x
      utof r14.z, r8.z
      sample_l_indexable(texture2darray)(float,float,float,float) r14.xyz, r14.xyzx, t20.xyzw, s2, l(0.000000)
      add r14.xyz, r14.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
      mad r14.xyz, cb2[23].yyyy, r14.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      mul r14.xyz, r14.xyzx, cb2[18].xyzx
    else 
      mov r14.xyz, cb2[18].xyzx
    endif 
    ushr r8.z, cb2[53].x, l(16)
    ult r8.w, l(0), r8.z
    and r8.w, r1.w, r8.w
    if_nz r8.w
      iadd r8.z, r8.z, cb2[0].x
      iadd r8.z, r8.z, l(-1)
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r8.w, r8.z, l(52), t12.xxxx
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r8.z, l(68), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r8.z, l(84), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r8.z, l(132), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r8.z, l(148), t12.xyzw
      mad r9.w, |r7.z|, l(-0.200000), l(0.400000)
      lt r13.z, r7.z, l(0.000000)
      movc r9.w, r13.z, -r9.w, r9.w
      mad r19.xyz, r3.xyzx, r9.wwww, v6.xyzx
      mov r19.w, l(1.000000)
      dp4 r15.x, r15.xyzw, r19.xyzw
      dp4 r15.y, r16.xyzw, r19.xyzw
      mad r13.zw, r15.xxxy, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
      add r13.zw, r18.zzzw, r13.zzzw
      mul r13.zw, r18.xxxy, r13.zzzw
      div r15.xy, r8.wwww, r17.xzxx
      add r15.zw, -r15.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
      ge r15.zw, r13.zzzw, r15.zzzw
      ge r15.xy, r15.xyxx, r13.zwzz
      or r15.xy, r15.xyxx, r15.zwzz
      or r9.w, r15.y, r15.x
      if_z r9.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r9.w, r8.z, l(28), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r8.z, l(100), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xy, r8.z, l(164), t12.xyxx
        dp4 r8.z, r15.xyzw, r19.xyzw
        mov_sat r13.zw, r13.zzzw
        mad r15.xy, r13.zwzz, r17.xzxx, r17.ywyy
        add r8.z, r16.x, r8.z
        div r8.z, r8.z, r16.y
        max r8.z, r8.z, l(0.00006104)
        and r9.w, r9.w, l(0x0000ffff)
        if_nz cb2[58].y
          mov r16.x, -r8.x
          utof r17.z, r9.w
          mov r16.y, r9.x
          mov r16.z, r8.x
          mov r13.zw, l(0,0,0,0)
          loop 
            ige r14.w, r13.w, l(8)
            breakc_nz r14.w
            dp2 r18.x, icb[r13.w + 0].yxyy, r16.xyxx
            dp2 r18.y, icb[r13.w + 0].yxyy, r16.yzyy
            mad r17.xy, r18.xyxx, r8.wwww, r15.xyxx
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r14.w, r17.xyzx, t9.xxxx, s13, r8.z
            mad r13.z, r14.w, l(0.125000), r13.z
            iadd r13.w, r13.w, l(1)
          endloop 
        else 
          utof r15.z, r9.w
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r13.z, r15.xyzx, t9.xxxx, s13, r8.z
        endif 
        mul r8.z, r13.z, r13.z
        mul r8.z, r13.z, r8.z
      else 
        mov r8.z, l(1.000000)
      endif 
      mul r13.y, r8.z, r13.y
    else 
      and r8.z, cb2[53].x, l(0x0000ffff)
      ult r8.w, l(0), r8.z
      not r9.w, r1.w
      and r8.w, r8.w, r9.w
      if_nz r8.w
        iadd r8.z, r8.z, cb2[0].x
        iadd r8.z, r8.z, l(-1)
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r8.w, r8.z, l(52), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r8.z, l(68), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r8.z, l(84), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r8.z, l(132), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r8.z, l(148), t12.xyzw
        mad r9.w, |r7.z|, l(-0.200000), l(0.400000)
        lt r13.z, r7.z, l(0.000000)
        movc r9.w, r13.z, -r9.w, r9.w
        mad r19.xyz, r3.xyzx, r9.wwww, v6.xyzx
        mov r19.w, l(1.000000)
        dp4 r15.x, r15.xyzw, r19.xyzw
        dp4 r15.y, r16.xyzw, r19.xyzw
        mad r13.zw, r15.xxxy, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
        add r13.zw, r18.zzzw, r13.zzzw
        mul r13.zw, r18.xxxy, r13.zzzw
        div r15.xy, r8.wwww, r17.xzxx
        add r15.zw, -r15.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
        ge r15.zw, r13.zzzw, r15.zzzw
        ge r15.xy, r15.xyxx, r13.zwzz
        or r15.xy, r15.xyxx, r15.zwzz
        or r9.w, r15.y, r15.x
        if_z r9.w
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r9.w, r8.z, l(28), t12.xxxx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r8.z, l(100), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xy, r8.z, l(164), t12.xyxx
          dp4 r8.z, r15.xyzw, r19.xyzw
          mov_sat r13.zw, r13.zzzw
          mad r15.xy, r13.zwzz, r17.xzxx, r17.ywyy
          add r8.z, r16.x, r8.z
          div r8.z, r8.z, r16.y
          max r8.z, r8.z, l(0.00006104)
          and r9.w, r9.w, l(0x0000ffff)
          if_nz cb2[58].y
            mov r16.x, -r8.x
            utof r17.z, r9.w
            mov r16.y, r9.x
            mov r16.z, r8.x
            mov r13.zw, l(0,0,0,0)
            loop 
              ige r14.w, r13.w, l(8)
              breakc_nz r14.w
              dp2 r18.x, icb[r13.w + 0].yxyy, r16.xyxx
              dp2 r18.y, icb[r13.w + 0].yxyy, r16.yzyy
              mad r17.xy, r18.xyxx, r8.wwww, r15.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r14.w, r17.xyzx, t9.xxxx, s13, r8.z
              mad r13.z, r14.w, l(0.125000), r13.z
              iadd r13.w, r13.w, l(1)
            endloop 
          else 
            utof r15.z, r9.w
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r13.z, r15.xyzx, t9.xxxx, s13, r8.z
          endif 
          mul r8.z, r13.z, r13.z
          mul r8.z, r13.z, r8.z
        else 
          mov r8.z, l(1.000000)
        endif 
        mul r13.y, r8.z, r13.y
      endif 
    endif 
    mad r8.z, -r7.x, l(0.500000), l(1.000000)
    mad r8.z, -|r7.z|, r8.z, l(1.000000)
    mul r8.z, r8.z, r8.z
    mad r8.z, -r8.z, l(0.620000), l(0.620000)
    add r8.z, -|r7.z|, r8.z
    mad r8.z, r2.w, r8.z, |r7.z|
    lt r8.w, l(0.000000), r7.z
    mov_sat r7.z, r7.z
    mad r15.xyz, -v6.xyzx, r1.zzzz, cb2[17].xyzx
    dp3 r1.z, r15.xyzx, r15.xyzx
    rsq r1.z, r1.z
    mul r15.xyz, r1.zzzz, r15.xyzx
    dp3 r1.z, r15.xyzx, r6.yzwy
    dp3 r9.w, r3.xyzx, r15.xyzx
    mad r13.z, |r9.w|, r2.z, -|r9.w|
    mad r9.w, |r9.w|, r13.z, l(1.000000)
    mad r13.z, r7.z, r4.w, r5.w
    mul r9.w, r9.w, r9.w
    mul r9.w, r13.z, r9.w
    rcp r9.w, r9.w
    mul r7.z, r7.w, r7.z
    mul r7.z, r7.z, r9.w
    add_sat r1.z, -r1.z, l(1.000000)
    mul r7.w, r1.z, r1.z
    mul r7.w, r7.w, r7.w
    mul r1.z, r1.z, r7.w
    mul r1.z, r1.z, r7.z
    and r7.w, r8.z, r8.w
    movc r15.xyz, r8.wwww, l(0,0,0,0), r8.zzzz
    and r13.zw, r1.zzzz, r8.wwww
    and r16.xyz, r7.zzzz, r8.wwww
    dp3 r1.z, r14.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
    mul r1.z, r1.z, r13.y
    mov r13.x, l(1.000000)
    mov r7.z, cb2[17].x
    mov r8.zw, cb2[17].yyyz
    mov r17.xy, r7.wwww
    mov r9.w, r13.w
  else 
    mov r1.z, l(0)
    mov r14.xyz, l(0,0,0,0)
    mov r8.zw, l(0,0,0,0)
    mov r17.xy, l(0,0,0,0)
    mov r15.xyz, l(0,0,0,0)
    mov r7.zw, l(0,0,0,0)
    mov r16.xyz, l(0,0,0,0)
    mov r9.w, l(0)
    mov r13.xyzw, l(0,0,0,0)
  endif 
else 
  mov r1.z, l(0)
  mov r14.xyz, l(0,0,0,0)
  mov r8.zw, l(0,0,0,0)
  mov r17.xy, l(0,0,0,0)
  mov r15.xyz, l(0,0,0,0)
  mov r7.zw, l(0,0,0,0)
  mov r16.xyz, l(0,0,0,0)
  mov r9.w, l(0)
  mov r13.xyzw, l(0,0,0,0)
endif 
mul r1.y, r1.y, l(0.00781250)
max r1.y, r1.y, l(0.000000)
min r1.y, r1.y, l(15.000000)
ftou r1.y, r1.y
ushr r18.xy, r2.xyxx, l(6, 6, 0, 0)
ishl r18.z, r1.y, l(4)
mov r19.x, -r8.x
not r1.y, r1.w
mad r2.x, -r7.x, l(0.500000), l(1.000000)
mov r20.xy, l(0,0,0,0)
mov r21.w, l(0)
mov r22.xyz, v6.xyzx
mov r22.w, l(1.000000)
mov r23.w, l(1.000000)
mov r19.z, r8.x
mov r24.w, l(1.000000)
mov r25.z, l(1.000000)
mov r26.w, l(1.000000)
mov r19.yw, r9.xxxx
mov r8.y, r19.w
mov r27.w, l(1.000000)
mov r9.y, r19.x
mov r9.z, r8.x
mov r28.w, l(1.000000)
mov r29.x, r9.x
mov r29.y, r19.x
mov r29.z, r8.x
mov r30.x, r9.x
mov r30.y, r19.x
mov r30.z, r8.x
mov r31.x, r9.x
mov r31.y, r19.x
mov r31.z, r8.x
mov r32.xyz, l(0,0,0,0)
mov r33.xyz, l(0,0,0,0)
mov r34.xyz, l(0,0,0,0)
mov r35.xyz, l(0,0,0,0)
mov r36.xyz, r14.xyzx
mov r37.x, r7.z
mov r37.yz, r8.zzwz
mov r38.xy, r17.xyxx
mov r38.z, r7.w
mov r39.xyz, r15.xyzx
mov r40.xyz, r16.xyzx
mov r41.x, r9.w
mov r41.yz, r13.zzwz
mov r42.x, cb2[58].y
mov r42.y, r1.z
mov r17.zw, r13.xxxy
mov r2.y, l(0)
loop 
  uge r14.w, r2.y, cb2[0].x
  breakc_nz r14.w
  ushr r20.z, r2.y, l(5)
  iadd r21.xyz, r18.xyzx, r20.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r14.w, r21.xyzw, t6.yzwx
  mov r21.xyz, r32.xyzx
  mov r43.xyz, r33.xyzx
  mov r44.xyz, r34.xyzx
  mov r45.xyz, r35.xyzx
  mov r46.xyz, r36.xyzx
  mov r47.xyz, r37.xyzx
  mov r48.xyz, r38.xyzx
  mov r49.xyz, r40.xyzx
  mov r50.xyz, r41.xyzx
  mov r20.zw, r17.zzzw
  mov r15.w, r42.x
  mov r16.w, r42.y
  mov r51.xyz, r39.xyzx
  mov r18.w, r14.w
  loop 
    breakc_z r18.w
    firstbit_lo r25.w, r18.w
    ishl r29.w, l(1), r25.w
    and r30.w, r18.w, r29.w
    if_nz r30.w
      xor r18.w, r18.w, r29.w
      iadd r25.w, r2.y, r25.w
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r52.xyzw, r25.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r53.xy, r25.w, l(16), t11.xyxx
      add r52.xyz, r52.xyzx, -v6.xyzx
      mov r53.z, r52.w
      lt r52.xyz, |r52.xyzx|, r53.zxyz
      and r29.w, r52.y, r52.x
      and r29.w, r52.z, r29.w
      if_nz r29.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r52.xyzw, r25.w, l(0), t12.wxyz
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r53.xyzw, r25.w, l(16), t12.zxyw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r54.xyzw, r25.w, l(32), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r55.xyzw, r25.w, l(48), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r56.xyzw, r25.w, l(64), t12.yzwx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r57.xyzw, r25.w, l(80), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r58.xyzw, r25.w, l(96), t12.yzwx
        ubfe r29.w, l(3), l(24), r53.w
        switch r29.w
          case l(4)
          lt r29.w, l(0.000000), r58.x
          mov r59.xy, r57.zwzz
          mov r59.z, r58.w
          mad r60.xyz, -r59.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r52.yzwy
          add r61.xyz, r60.xyzx, -v6.xyzx
          dp3 r30.w, r59.xyzx, r61.xyzx
          div_sat r31.w, -r30.w, r58.x
          mad r62.xyz, r31.wwww, r59.xyzx, r60.xyzx
          movc r62.xyz, r29.wwww, r62.xyzx, r52.yzwy
          add r62.xyz, r62.xyzx, -v6.xyzx
          dp3 r32.w, r62.xyzx, r62.xyzx
          rsq r33.w, r32.w
          mul r62.xyz, r33.wwww, r62.xyzx
          dp3 r33.w, r3.xyzx, r62.xyzx
          lt r34.w, l(0.000000), |r33.w|
          if_nz r34.w
            sqrt r34.w, r32.w
            mul r35.w, r55.x, r55.x
            div r32.w, r35.w, r32.w
            min r32.w, r32.w, l(1.000000)
            mad_sat r42.zw, r34.wwww, r54.xxxz, r54.yyyw
            mul r63.xy, r42.zwzz, r42.zwzz
            mad r42.zw, r42.zzzw, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
            mul r42.zw, r42.zzzw, r63.xxxy
            mul r32.w, r32.w, r42.z
            mul r63.x, r42.w, r32.w
            lt r32.w, l(0.000000), r63.x
            if_nz r32.w
              ubfe r32.w, l(3), l(27), r53.w
              ine r32.w, r32.w, l(1)
              if_nz r32.w
                mad r32.w, |r33.w|, l(-0.200000), l(0.400000)
                lt r34.w, r33.w, l(0.000000)
                movc r32.w, r34.w, -r32.w, r32.w
                mad r64.xyz, r3.xyzx, r32.wwww, v6.xyzx
                add r64.xyz, -r56.xyzx, r64.xyzx
                max r32.w, |r64.z|, |r64.y|
                max r32.w, r32.w, |r64.x|
                div r32.w, r57.x, r32.w
                add r32.w, r57.y, r32.w
                dp3 r34.w, r64.xyzx, r64.xyzx
                rsq r34.w, r34.w
                max r32.w, r32.w, l(0.00006104)
                and r35.w, r53.w, l(0x0000ffff)
                utof r65.w, r35.w
                mov r63.y, l(0)
                mov r35.w, l(0)
                loop 
                  ige r36.w, r35.w, l(8)
                  breakc_nz r36.w
                  dp2 r66.y, icb[r35.w + 0].yxyy, r19.xyxx
                  dp2 r66.z, icb[r35.w + 0].yxyy, r19.yzyy
                  mul r66.yz, r55.yyyy, r66.yyzy
                  mul r66.x, r11.x, r66.y
                  mul r66.w, r10.x, r66.y
                  mad r65.xyz, r64.xyzx, r34.wwww, r66.xzwx
                  sample_c_lz_indexable(texturecubearray)(float,float,float,float) r36.w, r65.xyzw, t10.xxxx, s13, r32.w
                  mad r63.y, r36.w, l(0.125000), r63.y
                  iadd r35.w, r35.w, l(1)
                endloop 
              else 
                mov r63.y, l(1.000000)
              endif 
              mul r32.w, r63.y, r63.x
              lt r32.w, l(0.000000), r32.w
              if_nz r32.w
                mul r32.w, r2.z, r53.x
                mul r32.w, r32.w, l(0.250000)
                dp3 r34.w, r59.xyzx, r12.xyzx
                dp3 r35.w, r12.xyzx, r61.xyzx
                mad r36.w, -r34.w, r34.w, r58.x
                mad r30.w, r34.w, r35.w, -r30.w
                div_sat r30.w, r30.w, r36.w
                div r34.w, r36.w, r58.x
                mul r34.w, r34.w, l(10.000000)
                min r34.w, r34.w, l(1.000000)
                add r30.w, -r31.w, r30.w
                mad r30.w, r34.w, r30.w, r31.w
                mad r59.xyz, r30.wwww, r59.xyzx, r60.xyzx
                movc r59.xyz, r29.wwww, r59.xyzx, r52.yzwy
                add r59.xyz, r59.xyzx, -v6.xyzx
                dp3 r29.w, r59.xyzx, r59.xyzx
                rsq r29.w, r29.w
                mul r60.xyz, r29.wwww, r59.xyzx
                ubfe r30.w, l(4), l(16), r53.w
                ult r31.w, l(0), r30.w
                and r31.w, r1.w, r31.w
                if_nz r31.w
                  iadd r30.w, r30.w, cb2[0].x
                  iadd r30.w, r30.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.w, r30.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r61.xyzw, r30.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r64.xyzw, r30.w, l(116), t12.xyzw
                  mad r34.w, |r33.w|, l(-0.200000), l(0.400000)
                  lt r35.w, r33.w, l(0.000000)
                  movc r34.w, r35.w, -r34.w, r34.w
                  mad r23.xyz, r3.xyzx, r34.wwww, v6.xyzx
                  dp4 r34.w, r61.xyzw, r23.xyzw
                  dp4 r35.w, r64.xyzw, r23.xyzw
                  lt r36.w, r35.w, r34.w
                  if_z r36.w
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r61.xyzw, r30.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r64.xyzw, r30.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r65.xyzw, r30.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r66.xyzw, r30.w, l(148), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.zw, r30.w, l(164), t12.xxxy
                    dp4 r61.x, r61.xyzw, r23.xyzw
                    dp4 r61.y, r64.xyzw, r23.xyzw
                    div r23.xy, r61.xyxx, r35.wwww
                    mad r23.xy, r23.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r23.xy, r66.zwzz, r23.xyxx
                    mul r23.xy, r66.xyxx, r23.xyxx
                    div r61.xy, r31.wwww, r65.xzxx
                    add r61.zw, -r61.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                    ge r61.zw, r23.xxxy, r61.zzzw
                    ge r61.xy, r61.xyxx, r23.xyxx
                    or r61.xy, r61.xyxx, r61.zwzz
                    or r23.z, r61.y, r61.x
                    mov_sat r23.xy, r23.xyxx
                    mad r61.xy, r23.xyxx, r65.xzxx, r65.ywyy
                    mul r23.x, r35.w, r42.w
                    mad r23.y, r42.z, r35.w, r34.w
                    div r23.x, r23.y, r23.x
                  else 
                    mov r23.z, l(-1)
                  endif 
                  or r23.y, r36.w, r23.z
                  if_z r23.y
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.y, r30.w, l(28), t12.xxxx
                    max r23.x, r23.x, l(0.00006104)
                    and r23.y, r23.y, l(0x0000ffff)
                    if_nz r15.w
                      utof r64.z, r23.y
                      mov r23.z, l(0)
                      mov r30.w, l(0)
                      loop 
                        ige r34.w, r30.w, l(8)
                        breakc_nz r34.w
                        dp2 r65.x, icb[r30.w + 0].yxyy, r19.xwxx
                        dp2 r65.y, icb[r30.w + 0].xyxx, r8.xyxx
                        mad r64.xy, r65.xyxx, r31.wwww, r61.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r34.w, r64.xyzx, t9.xxxx, s13, r23.x
                        mad r23.z, r34.w, l(0.125000), r23.z
                        iadd r30.w, r30.w, l(1)
                      endloop 
                    else 
                      utof r61.z, r23.y
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.z, r61.xyzx, t9.xxxx, s13, r23.x
                    endif 
                    mul r23.x, r23.z, r23.z
                    mul r23.x, r23.z, r23.x
                  else 
                    mov r23.x, l(1.000000)
                  endif 
                  mul r63.y, r23.x, r63.y
                else 
                  ubfe r23.x, l(4), l(20), r53.w
                  ult r23.y, l(0), r23.x
                  and r23.y, r1.y, r23.y
                  if_nz r23.y
                    iadd r23.x, r23.x, cb2[0].x
                    iadd r23.x, r23.x, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.y, r23.x, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r61.xyzw, r23.x, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r64.xyzw, r23.x, l(116), t12.xyzw
                    mad r30.w, |r33.w|, l(-0.200000), l(0.400000)
                    lt r31.w, r33.w, l(0.000000)
                    movc r30.w, r31.w, -r30.w, r30.w
                    mad r24.xyz, r3.xyzx, r30.wwww, v6.xyzx
                    dp4 r30.w, r61.xyzw, r24.xyzw
                    dp4 r31.w, r64.xyzw, r24.xyzw
                    lt r34.w, r31.w, r30.w
                    if_z r34.w
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r61.xyzw, r23.x, l(68), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r64.xyzw, r23.x, l(84), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r65.xyzw, r23.x, l(132), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r66.xyzw, r23.x, l(148), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.zw, r23.x, l(164), t12.xxxy
                      dp4 r61.x, r61.xyzw, r24.xyzw
                      dp4 r61.y, r64.xyzw, r24.xyzw
                      div r24.xy, r61.xyxx, r31.wwww
                      mad r24.xy, r24.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                      add r24.xy, r66.zwzz, r24.xyxx
                      mul r24.xy, r66.xyxx, r24.xyxx
                      div r61.xy, r23.yyyy, r65.xzxx
                      add r61.zw, -r61.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                      ge r61.zw, r24.xxxy, r61.zzzw
                      ge r61.xy, r61.xyxx, r24.xyxx
                      or r61.xy, r61.xyxx, r61.zwzz
                      or r24.z, r61.y, r61.x
                      mov_sat r24.xy, r24.xyxx
                      mad r61.xy, r24.xyxx, r65.xzxx, r65.ywyy
                      mul r24.x, r31.w, r42.w
                      mad r24.y, r42.z, r31.w, r30.w
                      div r24.x, r24.y, r24.x
                    else 
                      mov r24.z, l(-1)
                    endif 
                    or r24.y, r34.w, r24.z
                    if_z r24.y
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.x, r23.x, l(28), t12.xxxx
                      max r24.x, r24.x, l(0.00006104)
                      and r23.x, r23.x, l(0x0000ffff)
                      if_nz r15.w
                        utof r64.z, r23.x
                        mov r24.yz, l(0,0,0,0)
                        loop 
                          ige r30.w, r24.z, l(8)
                          breakc_nz r30.w
                          dp2 r65.x, icb[r24.z + 0].xyxx, r9.xyxx
                          dp2 r65.y, icb[r24.z + 0].yxyy, r9.xzxx
                          mad r64.xy, r65.xyxx, r23.yyyy, r61.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r30.w, r64.xyzx, t9.xxxx, s13, r24.x
                          mad r24.y, r30.w, l(0.125000), r24.y
                          iadd r24.z, r24.z, l(1)
                        endloop 
                      else 
                        utof r61.z, r23.x
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.y, r61.xyzx, t9.xxxx, s13, r24.x
                      endif 
                      mul r23.x, r24.y, r24.y
                      mul r23.x, r24.y, r23.x
                    else 
                      mov r23.x, l(1.000000)
                    endif 
                    mul r63.y, r23.x, r63.y
                  endif 
                endif 
                mul r23.x, r63.y, r63.x
                mad r23.y, -|r33.w|, r2.x, l(1.000000)
                mul r23.y, r23.y, r23.y
                mad r23.y, -r23.y, l(0.620000), l(0.620000)
                add r23.y, -|r33.w|, r23.y
                mad r23.y, r2.w, r23.y, |r33.w|
                lt r24.x, l(0.000000), r33.w
                dp3_sat r24.z, r3.xyzx, r60.xyzx
                mad r59.xyz, r59.xyzx, r29.wwww, r6.yzwy
                dp3 r29.w, r59.xyzx, r59.xyzx
                rsq r29.w, r29.w
                mul r59.xyz, r29.wwww, r59.xyzx
                dp3 r29.w, r59.xyzx, r6.yzwy
                dp3 r30.w, r3.xyzx, r59.xyzx
                mad r31.w, |r30.w|, r2.z, -|r30.w|
                mad r30.w, |r30.w|, r31.w, l(1.000000)
                mad r31.w, r24.z, r4.w, r5.w
                mul r30.w, r30.w, r30.w
                mul r30.w, r31.w, r30.w
                rcp r30.w, r30.w
                mul r24.z, r32.w, r24.z
                mul r24.z, r24.z, r30.w
                add_sat r29.w, -r29.w, l(1.000000)
                mul r30.w, r29.w, r29.w
                mul r30.w, r30.w, r30.w
                mul r29.w, r29.w, r30.w
                mul r29.w, r24.z, r29.w
                and r59.xyz, r23.yyyy, r24.xxxx
                movc r23.y, r24.x, l(0), r23.y
                and r60.xyz, r24.xxxx, r29.wwww
                and r24.x, r24.z, r24.x
                mov r53.x, r52.x
                dp3 r24.z, r53.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
                mul r24.z, r23.x, r24.z
                lt r29.w, r16.w, r24.z
                if_nz r29.w
                  mul r29.w, r20.w, r20.z
                  mul r61.xyz, r46.xyzx, r29.wwww
                  mad r21.xyz, r61.xyzx, r48.xyzx, r21.xyzx
                  mad r43.xyz, r61.xyzx, r51.xyzx, r43.xyzx
                  mad r45.xyz, r61.xyzx, r49.xyzx, r45.xyzx
                  mad r44.xyz, r61.xyzx, r50.xyzx, r44.xyzx
                  mov r49.xyz, r24.xxxx
                  mov r16.w, r24.z
                  mov r51.xyz, r23.yyyy
                  mov r46.xyz, r53.xyzx
                  mov r47.xyz, r62.xyzx
                  mov r48.xyz, r59.xyzx
                  mov r50.xyz, r60.xyzx
                  mov r20.zw, r63.xxxy
                else 
                  mul r59.xyw, r23.xxxx, r53.xyxz
                  mad r21.xyz, r59.xywx, r59.zzzz, r21.xyzx
                  mad r43.xyz, r59.xywx, r23.yyyy, r43.xyzx
                  mad r45.xyz, r59.xywx, r24.xxxx, r45.xyzx
                  mad r44.xyz, r59.xywx, r60.xyzx, r44.xyzx
                endif 
              endif 
            endif 
          endif 
          break 
          case l(2)
          mov r59.xy, r55.zwzz
          mov r59.z, r56.w
          add r59.xyz, r59.xyzx, -v6.xyzx
          dp3 r23.x, r59.xyzx, r59.xyzx
          rsq r23.x, r23.x
          mul r60.xyz, r23.xxxx, r59.xyzx
          dp3 r23.y, r3.xyzx, r60.xyzx
          lt r24.x, l(0.000000), |r23.y|
          if_nz r24.x
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r61.xyzw, r25.w, l(112), t12.yzwx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r62.xyzw, r25.w, l(128), t12.zxyw
            mov r64.xyz, r61.xyzx
            mov r64.w, r62.y
            dp4 r24.x, r64.xyzw, r22.xyzw
            lt r24.z, r24.x, l(1.000000)
            if_nz r24.z
              mov r63.xzw, l(1.000000,0,1.000000,1.000000)
              mov r65.x, l(0)
            else 
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r66.xyzw, r25.w, l(172), t12.yzwx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r67.xyzw, r25.w, l(188), t12.wxyz
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r68.xyzw, r25.w, l(204), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r24.z, r25.w, l(236), t12.xxxx
              add r69.xyz, r52.yzwy, -v6.xyzx
              mul r29.w, r55.x, r55.x
              dp3 r30.w, r69.xyzx, r69.xyzx
              div r29.w, r29.w, r30.w
              min r29.w, r29.w, l(1.000000)
              mad_sat r42.zw, r24.xxxx, r54.xxxz, r54.yyyw
              mul r54.xy, r42.zwzz, r42.zwzz
              mad r42.zw, r42.zzzw, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
              mul r42.zw, r42.zzzw, r54.xxxy
              mul r29.w, r29.w, r42.z
              mul r29.w, r42.w, r29.w
              mov r56.w, r57.x
              dp4 r54.x, r56.xyzw, r22.xyzw
              mov r69.xyz, r57.yzwy
              mov r69.w, r58.w
              dp4 r54.y, r69.xyzw, r22.xyzw
              div r25.xy, r54.xyxx, r24.xxxx
              lt r24.x, r66.w, l(0.00048828)
              if_nz r24.x
                mov r67.y, r68.x
                mad_sat r42.zw, |r25.xxxy|, r67.zzzw, r67.xxxy
                mul r54.xy, r42.zwzz, r42.zwzz
                mad r42.zw, r42.zzzw, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
                mul r42.zw, r42.zzzw, r54.xxxy
                mul r24.x, r42.w, r42.z
              else 
                mov r66.w, r67.y
                mul_sat r54.xyzw, |r25.yyxx|, r66.xyzw
                log r54.xyzw, r54.xyzw
                mul r54.xyzw, r54.xyzw, r67.xxxx
                exp r54.xyzw, r54.xyzw
                add r42.zw, r54.zzzw, r54.xxxy
                log r42.zw, r42.zzzw
                mul r42.zw, r42.zzzw, r68.xxxx
                exp r42.zw, r42.zzzw
                mul r30.w, r42.z, r67.z
                mad r31.w, r67.w, r42.w, l(-1.000000)
                mad r30.w, r67.w, r42.w, -r30.w
                div_sat r30.w, r31.w, r30.w
                mul r31.w, r30.w, r30.w
                mad r30.w, r30.w, l(-2.000000), l(3.000000)
                mul r24.x, r30.w, r31.w
              endif 
              mul r65.x, r24.x, r29.w
              and r24.x, r24.z, l(255)
              if_nz r24.x
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r54.xyz, r25.w, l(220), t12.xyzx
                dp3 r24.z, r68.yzwy, r25.xyzx
                dp3 r25.x, r54.xyzx, r25.xyzx
                frc r54.x, r24.z
                frc r54.y, r25.x
                iadd r24.x, r24.x, l(-1)
                utof r54.z, r24.x
                sample_l_indexable(texture2darray)(float,float,float,float) r63.xzw, r54.xyzx, t20.xwyz, s2, l(0.000000)
              else 
                mov r63.xzw, l(1.000000,0,1.000000,1.000000)
              endif 
            endif 
            mov r52.yz, r53.yyzy
            mul r52.xyz, r63.xzwx, r52.xyzx
            lt r24.x, l(0.000000), r65.x
            if_nz r24.x
              ubfe r24.x, l(3), l(27), r53.w
              ine r24.x, r24.x, l(1)
              if_nz r24.x
                mad r24.x, |r23.y|, l(-0.200000), l(0.400000)
                lt r24.z, r23.y, l(0.000000)
                movc r24.x, r24.z, -r24.x, r24.x
                mad r26.xyz, r3.xyzx, r24.xxxx, v6.xyzx
                mov r61.xyz, r58.xyzx
                dp4 r24.x, r61.xyzw, r26.xyzw
                dp4 r24.z, r64.xyzw, r26.xyzw
                ge r25.x, r24.z, r24.x
                if_nz r25.x
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r62.y, r25.w, l(144), t12.xxxx
                  mov r56.w, r57.x
                  dp4 r25.x, r56.xyzw, r26.xyzw
                  mov r58.xyz, r57.yzwy
                  dp4 r25.y, r58.xyzw, r26.xyzw
                  div r25.xy, r25.xyxx, r24.zzzz
                  mad_sat r25.xy, r25.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  mad r26.xy, r25.xyxx, r62.zwzz, r62.xyxx
                  div r24.x, r24.x, r24.z
                  max r24.x, r24.x, l(0.00006104)
                  and r24.z, r53.w, l(0x0000ffff)
                  if_nz r15.w
                    utof r54.z, r24.z
                    mov r25.xy, l(0,0,0,0)
                    loop 
                      ige r25.w, r25.y, l(8)
                      breakc_nz r25.w
                      dp2 r56.x, icb[r25.y + 0].xyxx, r29.xyxx
                      dp2 r56.y, icb[r25.y + 0].yxyy, r29.xzxx
                      mad r54.xy, r56.xyxx, r55.yyyy, r26.xyxx
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r25.w, r54.xyzx, t9.xxxx, s13, r24.x
                      mad r25.x, r25.w, l(0.125000), r25.x
                      iadd r25.y, r25.y, l(1)
                    endloop 
                  else 
                    utof r26.z, r24.z
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r25.x, r26.xyzx, t9.xxxx, s13, r24.x
                  endif 
                  mul r24.x, r25.x, r25.x
                  mul r65.y, r25.x, r24.x
                else 
                  mov r65.y, l(1.000000)
                endif 
              else 
                mov r65.y, l(1.000000)
              endif 
              mul r24.x, r65.y, r65.x
              lt r24.x, l(0.000000), r24.x
              if_nz r24.x
                mul r24.x, r2.z, r53.x
                mul r24.x, r24.x, l(0.250000)
                ubfe r24.z, l(4), l(16), r53.w
                ult r25.y, l(0), r24.z
                and r25.y, r1.w, r25.y
                if_nz r25.y
                  iadd r24.z, r24.z, cb2[0].x
                  iadd r24.z, r24.z, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r25.y, r24.z, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r54.xyzw, r24.z, l(68), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r55.xyzw, r24.z, l(84), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r56.xyzw, r24.z, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r57.xyzw, r24.z, l(116), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r58.xyzw, r24.z, l(132), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r61.xyzw, r24.z, l(148), t12.xyzw
                  mad r25.w, |r23.y|, l(-0.200000), l(0.400000)
                  lt r26.x, r23.y, l(0.000000)
                  movc r25.w, r26.x, -r25.w, r25.w
                  mad r27.xyz, r3.xyzx, r25.wwww, v6.xyzx
                  dp4 r26.x, r54.xyzw, r27.xyzw
                  dp4 r26.y, r55.xyzw, r27.xyzw
                  dp4 r25.w, r56.xyzw, r27.xyzw
                  dp4 r26.z, r57.xyzw, r27.xyzw
                  lt r27.x, r26.z, r25.w
                  div r26.xy, r26.xyxx, r26.zzzz
                  mad r26.xy, r26.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r26.xy, r61.zwzz, r26.xyxx
                  mul r26.xy, r61.xyxx, r26.xyxx
                  div r27.yz, r25.yyyy, r58.xxzx
                  add r42.zw, -r27.yyyz, l(0.000000, 0.000000, 1.000000, 1.000000)
                  ge r42.zw, r26.xxxy, r42.zzzw
                  ge r27.yz, r27.yyzy, r26.xxyx
                  or r27.yz, r27.yyzy, r42.zzwz
                  or r27.y, r27.z, r27.y
                  or r27.x, r27.x, r27.y
                  if_z r27.x
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r27.x, r24.z, l(28), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r27.yz, r24.z, l(164), t12.xxyx
                    mov_sat r26.xy, r26.xyxx
                    mad r53.xy, r26.xyxx, r58.xzxx, r58.ywyy
                    mul r24.z, r26.z, r27.z
                    mad r25.w, r27.y, r26.z, r25.w
                    div r24.z, r25.w, r24.z
                    max r24.z, r24.z, l(0.00006104)
                    and r25.w, r27.x, l(0x0000ffff)
                    if_nz r15.w
                      utof r26.z, r25.w
                      mov r27.xy, l(0,0,0,0)
                      loop 
                        ige r27.z, r27.y, l(8)
                        breakc_nz r27.z
                        dp2 r54.x, icb[r27.y + 0].xyxx, r30.xyxx
                        dp2 r54.y, icb[r27.y + 0].yxyy, r30.xzxx
                        mad r26.xy, r54.xyxx, r25.yyyy, r53.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r26.x, r26.xyzx, t9.xxxx, s13, r24.z
                        mad r27.x, r26.x, l(0.125000), r27.x
                        iadd r27.y, r27.y, l(1)
                      endloop 
                    else 
                      utof r53.z, r25.w
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r27.x, r53.xyzx, t9.xxxx, s13, r24.z
                    endif 
                    mul r24.z, r27.x, r27.x
                    mul r24.z, r27.x, r24.z
                  else 
                    mov r24.z, l(1.000000)
                  endif 
                  mul r65.y, r24.z, r65.y
                else 
                  ubfe r24.z, l(4), l(20), r53.w
                  ult r25.y, l(0), r24.z
                  and r25.y, r1.y, r25.y
                  if_nz r25.y
                    iadd r24.z, r24.z, cb2[0].x
                    iadd r24.z, r24.z, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r25.y, r24.z, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r53.xyzw, r24.z, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r54.xyzw, r24.z, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r55.xyzw, r24.z, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r56.xyzw, r24.z, l(116), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r57.xyzw, r24.z, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r58.xyzw, r24.z, l(148), t12.xyzw
                    mad r25.w, |r23.y|, l(-0.200000), l(0.400000)
                    lt r26.x, r23.y, l(0.000000)
                    movc r25.w, r26.x, -r25.w, r25.w
                    mad r28.xyz, r3.xyzx, r25.wwww, v6.xyzx
                    dp4 r26.x, r53.xyzw, r28.xyzw
                    dp4 r26.y, r54.xyzw, r28.xyzw
                    dp4 r25.w, r55.xyzw, r28.xyzw
                    dp4 r26.z, r56.xyzw, r28.xyzw
                    lt r27.y, r26.z, r25.w
                    div r26.xy, r26.xyxx, r26.zzzz
                    mad r26.xy, r26.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r26.xy, r58.zwzz, r26.xyxx
                    mul r26.xy, r58.xyxx, r26.xyxx
                    div r28.xy, r25.yyyy, r57.xzxx
                    add r42.zw, -r28.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                    ge r42.zw, r26.xxxy, r42.zzzw
                    ge r28.xy, r28.xyxx, r26.xyxx
                    or r28.xy, r28.xyxx, r42.zwzz
                    or r27.z, r28.y, r28.x
                    or r27.y, r27.y, r27.z
                    if_z r27.y
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r27.y, r24.z, l(28), t12.xxxx
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r28.xy, r24.z, l(164), t12.xyxx
                      mov_sat r26.xy, r26.xyxx
                      mad r53.xy, r26.xyxx, r57.xzxx, r57.ywyy
                      mul r24.z, r26.z, r28.y
                      mad r25.w, r28.x, r26.z, r25.w
                      div r24.z, r25.w, r24.z
                      max r24.z, r24.z, l(0.00006104)
                      and r25.w, r27.y, l(0x0000ffff)
                      if_nz r15.w
                        utof r26.z, r25.w
                        mov r27.yz, l(0,0,0,0)
                        loop 
                          ige r28.x, r27.z, l(8)
                          breakc_nz r28.x
                          dp2 r28.x, icb[r27.z + 0].xyxx, r31.xyxx
                          dp2 r28.y, icb[r27.z + 0].yxyy, r31.xzxx
                          mad r26.xy, r28.xyxx, r25.yyyy, r53.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r26.x, r26.xyzx, t9.xxxx, s13, r24.z
                          mad r27.y, r26.x, l(0.125000), r27.y
                          iadd r27.z, r27.z, l(1)
                        endloop 
                      else 
                        utof r53.z, r25.w
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r27.y, r53.xyzx, t9.xxxx, s13, r24.z
                      endif 
                      mul r24.z, r27.y, r27.y
                      mul r24.z, r27.y, r24.z
                    else 
                      mov r24.z, l(1.000000)
                    endif 
                    mul r65.y, r24.z, r65.y
                  endif 
                endif 
                mul r24.z, r65.y, r65.x
                mad r25.y, -|r23.y|, r2.x, l(1.000000)
                mul r25.y, r25.y, r25.y
                mad r25.y, -r25.y, l(0.620000), l(0.620000)
                add r25.y, -|r23.y|, r25.y
                mad r25.y, r2.w, r25.y, |r23.y|
                lt r25.w, l(0.000000), r23.y
                mov_sat r23.y, r23.y
                mad r26.xyz, r59.xyzx, r23.xxxx, r6.yzwy
                dp3 r23.x, r26.xyzx, r26.xyzx
                rsq r23.x, r23.x
                mul r26.xyz, r23.xxxx, r26.xyzx
                dp3 r23.x, r26.xyzx, r6.yzwy
                dp3 r26.x, r3.xyzx, r26.xyzx
                mad r26.y, |r26.x|, r2.z, -|r26.x|
                mad r26.x, |r26.x|, r26.y, l(1.000000)
                mad r26.y, r23.y, r4.w, r5.w
                mul r26.x, r26.x, r26.x
                mul r26.x, r26.y, r26.x
                rcp r26.x, r26.x
                mul r23.y, r24.x, r23.y
                mul r23.y, r23.y, r26.x
                add_sat r23.x, -r23.x, l(1.000000)
                mul r24.x, r23.x, r23.x
                mul r24.x, r24.x, r24.x
                mul r23.x, r23.x, r24.x
                mul r23.x, r23.x, r23.y
                and r26.xyz, r25.yyyy, r25.wwww
                movc r24.x, r25.w, l(0), r25.y
                and r28.xyz, r23.xxxx, r25.wwww
                and r23.x, r23.y, r25.w
                dp3 r23.y, r52.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
                mul r23.y, r23.y, r24.z
                lt r25.y, r16.w, r23.y
                if_nz r25.y
                  mul r25.y, r20.w, r20.z
                  mul r53.xyz, r46.xyzx, r25.yyyy
                  mad r21.xyz, r53.xyzx, r48.xyzx, r21.xyzx
                  mad r43.xyz, r53.xyzx, r51.xyzx, r43.xyzx
                  mad r45.xyz, r53.xyzx, r49.xyzx, r45.xyzx
                  mad r44.xyz, r53.xyzx, r50.xyzx, r44.xyzx
                  mov r49.xyz, r23.xxxx
                  mov r16.w, r23.y
                  mov r51.xyz, r24.xxxx
                  mov r46.xyz, r52.xyzx
                  mov r47.xyz, r60.xyzx
                  mov r48.xyz, r26.xyzx
                  mov r50.xyz, r28.xyzx
                  mov r20.zw, r65.xxxy
                else 
                  mul r52.xyz, r52.xyzx, r24.zzzz
                  mad r21.xyz, r52.xyzx, r26.zzzz, r21.xyzx
                  mad r43.xyz, r52.xyzx, r24.xxxx, r43.xyzx
                  mad r45.xyz, r52.xyzx, r23.xxxx, r45.xyzx
                  mad r44.xyz, r52.xyzx, r28.xyzx, r44.xyzx
                endif 
              endif 
            endif 
          endif 
          break 
          default 
          break 
        endswitch 
      endif 
    endif 
  endloop 
  mov r32.xyz, r21.xyzx
  mov r33.xyz, r43.xyzx
  mov r34.xyz, r44.xyzx
  mov r35.xyz, r45.xyzx
  mov r36.xyz, r46.xyzx
  mov r37.xyz, r47.xyzx
  mov r38.xyz, r48.xyzx
  mov r40.xyz, r49.xyzx
  mov r41.xyz, r50.xyzx
  mov r17.zw, r20.zzzw
  mov r42.y, r16.w
  mov r39.xyz, r51.xyzx
  iadd r2.y, r2.y, l(32)
endloop 
mov r2.z, l(0)
mul r2.xy, r37.yxyy, l(1.000000, -1.000000, 0.000000, 0.000000)
mul r1.yzw, r2.yyzx, r37.zzxy
mad r1.yzw, r37.yyzx, r2.zzxy, -r1.yyzw
mul r6.yzw, r11.zzzz, cb1[9].xxyw
mad r6.yzw, r11.yyyy, cb1[8].xxyw, r6.yyzw
mad r6.yzw, r11.wwww, cb1[10].xxyw, r6.yyzw
add r6.yzw, r10.yyzw, r6.yyzw
rcp r8.z, r6.w
mul r6.yz, r6.yyzy, r8.zzzz
mad r8.xy, r6.yzyy, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
mad r9.xyz, r37.xyzx, l(3.000000, 3.000000, 3.000000, 0.000000), r11.yzwy
dp2 r2.w, v0.xyxx, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r2.w, r2.w
mul r2.w, r2.w, l(52.982918)
frc r2.w, r2.w
mul r4.w, r2.w, l(3.141600)
mad r4.w, cb1[70].w, l(0.500000), r4.w
sincos r10.x, r11.x, r4.w
mul r11.yzw, r1.yyzw, r10.xxxx
mad r11.xyz, r11.xxxx, r2.xyzx, r11.yzwy
mad r11.xyz, r11.xyzx, l(0.120000, 0.120000, 0.120000, 0.000000), r9.xyzx
mul r13.xyz, r11.yyyy, cb1[9].xywx
mad r11.xyw, r11.xxxx, cb1[8].xyxw, r13.xyxz
mad r11.xyz, r11.zzzz, cb1[10].xywx, r11.xywx
add r11.xyz, r10.yzwy, r11.xyzx
mul r6.yz, r11.xxyx, l(0.000000, 0.500000, -0.500000, 0.000000)
rcp r11.z, r11.z
mad r11.xy, r6.yzyy, r11.zzzz, l(0.500000, 0.500000, 0.000000, 0.000000)
mov r13.xyz, -r8.xyzx
add r11.xyz, r11.xyzx, r13.xyzx
add r4.w, r4.w, l(3.141600)
sincos r10.x, r14.x, r4.w
mul r1.yzw, r1.yyzw, r10.xxxx
mad r1.yzw, r14.xxxx, r2.xxyz, r1.yyzw
mad r1.yzw, r1.yyzw, l(0.000000, 0.120000, 0.120000, 0.120000), r9.xxyz
mul r2.xyz, r1.zzzz, cb1[9].xywx
mad r2.xyz, r1.yyyy, cb1[8].xywx, r2.xyzx
mad r1.yzw, r1.wwww, cb1[10].xxyw, r2.xxyz
add r1.yzw, r10.yyzw, r1.yyzw
mul r1.yz, r1.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000)
rcp r2.z, r1.w
mad r2.xy, r1.yzyy, r2.zzzz, r13.xyxx
mov r13.w, l(0.500000)
add r1.yzw, r13.wwwz, r2.xxyz
dp2 r2.x, cb1[44].zwzz, cb1[44].zwzz
dp2 r2.y, r11.xyxx, r11.xyxx
sqrt r2.xy, r2.xyxx
rcp r2.y, r2.y
mul r2.x, r2.y, r2.x
mad r2.yz, r2.wwww, l(0.000000, 0.500000, 0.500000, 0.000000), l(0.000000, 0.33333334, 1.000000, 0.000000)
mul r2.yz, r2.yyzy, l(0.000000, 0.11764706, 0.11764706, 0.000000)
mul r2.yz, r2.yyzy, r2.yyzy
mov x1[0].x, r2.y
mad r9.xyz, r11.xyzx, r2.yyyy, r8.xyzx
lt r6.yz, r2.xxxx, r2.yyzy
mul r7.zw, r9.xxxy, cb1[44].xxxy
ftoi r10.xy, r7.zwzz
mov r10.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r4.w, r10.xyzw, t21.yzwx
ge r5.w, r4.w, l(0.984375)
mul r7.z, r4.w, l(1.01587307)
mad r4.w, r4.w, l(64.000000), l(-63.000000)
movc r4.w, r5.w, r4.w, r7.z
max r4.w, r4.w, l(0.00000001)
rcp r4.w, r4.w
mov x2[0].x, r4.w
add r5.w, r4.w, l(0.042000)
mul r5.w, r5.w, r9.z
lt r5.w, l(1.000000), r5.w
and r5.w, r5.w, l(0x3f800000)
movc r5.w, r6.y, r5.w, l(1.000000)
mov x0[0].x, r5.w
mov x1[1].x, r2.z
mad r9.xyz, r1.yzwy, r2.zzzz, r8.xyzx
mul r7.zw, r9.xxxy, cb1[44].xxxy
ftoi r10.xy, r7.zwzz
mov r10.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r6.y, r10.xyzw, t21.yxzw
ge r7.z, r6.y, l(0.984375)
mul r7.w, r6.y, l(1.01587307)
mad r6.y, r6.y, l(64.000000), l(-63.000000)
movc r6.y, r7.z, r6.y, r7.w
max r6.y, r6.y, l(0.00000001)
rcp r6.y, r6.y
mov x2[1].x, r6.y
add r7.z, r6.y, l(0.042000)
mul r7.z, r7.z, r9.z
lt r7.z, l(1.000000), r7.z
and r7.z, r7.z, l(0x3f800000)
movc r6.z, r6.z, r7.z, l(1.000000)
mov x0[1].x, r6.z
add r7.z, r5.w, r6.z
ne r7.z, r7.z, l(0.000000)
if_nz r7.z
  mad r7.zw, r2.wwww, l(0.000000, 0.000000, 0.500000, 0.500000), l(0.000000, 0.000000, 1.33333337, 2.000000)
  mul r7.zw, r7.zzzw, l(0.000000, 0.000000, 0.11764706, 0.11764706)
  mad r7.zw, r7.zzzw, r7.zzzw, -r2.yyyz
  mad r2.y, r5.w, r7.z, r2.y
  mov x1[0].x, r2.y
  mad r9.xyz, r11.xyzx, r2.yyyy, r8.xyzx
  lt r2.y, r2.x, r2.y
  mul r9.xy, r9.xyxx, cb1[44].xyxx
  ftoi r10.xy, r9.xyxx
  mov r10.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r7.z, r10.xyzw, t21.yzxw
  ge r8.w, r7.z, l(0.984375)
  mul r9.x, r7.z, l(1.01587307)
  mad r7.z, r7.z, l(64.000000), l(-63.000000)
  movc r7.z, r8.w, r7.z, r9.x
  max r7.z, r7.z, l(0.00000001)
  rcp r7.z, r7.z
  movc r4.w, r2.y, r7.z, r4.w
  mov x2[0].x, r4.w
  add r4.w, r7.z, l(0.042000)
  mul r4.w, r4.w, r9.z
  lt r4.w, l(1.000000), r4.w
  and r4.w, r4.w, l(0x3f800000)
  mul r4.w, r4.w, r5.w
  movc r2.y, r2.y, r4.w, r5.w
  mov x0[0].x, r2.y
  mad r2.z, r6.z, r7.w, r2.z
  mov x1[1].x, r2.z
  mad r9.xyz, r1.yzwy, r2.zzzz, r8.xyzx
  lt r2.z, r2.x, r2.z
  mul r7.zw, r9.xxxy, cb1[44].xxxy
  ftoi r10.xy, r7.zwzz
  mov r10.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.w, r10.xyzw, t21.yzwx
  ge r5.w, r4.w, l(0.984375)
  mul r7.z, r4.w, l(1.01587307)
  mad r4.w, r4.w, l(64.000000), l(-63.000000)
  movc r4.w, r5.w, r4.w, r7.z
  max r4.w, r4.w, l(0.00000001)
  rcp r4.w, r4.w
  movc r5.w, r2.z, r4.w, r6.y
  mov x2[1].x, r5.w
  add r4.w, r4.w, l(0.042000)
  mul r4.w, r4.w, r9.z
  lt r4.w, l(1.000000), r4.w
  and r4.w, r4.w, l(0x3f800000)
  mul r4.w, r4.w, r6.z
  movc r2.z, r2.z, r4.w, r6.z
  mov x0[1].x, r2.z
  add r2.y, r2.z, r2.y
  eq r2.y, r2.y, l(0.000000)
else 
  mov r2.y, l(-1)
endif 
if_z r2.y
  mad r2.yz, r2.wwww, l(0.000000, 0.500000, 0.500000, 0.000000), l(0.000000, 2.33333325, 3.000000, 0.000000)
  mul r2.yz, r2.yyzy, l(0.000000, 0.11764706, 0.11764706, 0.000000)
  mov r4.w, x1[0].x
  mov r5.w, x0[0].x
  mad r2.y, r2.y, r2.y, -r4.w
  mad r2.y, r5.w, r2.y, r4.w
  mov x1[0].x, r2.y
  mad r9.xyz, r11.xyzx, r2.yyyy, r8.xyzx
  lt r2.y, r2.x, r2.y
  mul r6.yz, r9.xxyx, cb1[44].xxyx
  ftoi r10.xy, r6.yzyy
  mov r10.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.w, r10.xyzw, t21.yzwx
  ge r6.y, r4.w, l(0.984375)
  mul r6.z, r4.w, l(1.01587307)
  mad r4.w, r4.w, l(64.000000), l(-63.000000)
  movc r4.w, r6.y, r4.w, r6.z
  max r4.w, r4.w, l(0.00000001)
  rcp r4.w, r4.w
  mov r6.y, x2[0].x
  movc r6.y, r2.y, r4.w, r6.y
  mov x2[0].x, r6.y
  add r4.w, r4.w, l(0.042000)
  mul r4.w, r4.w, r9.z
  lt r4.w, l(1.000000), r4.w
  and r4.w, r4.w, l(0x3f800000)
  mul r4.w, r4.w, r5.w
  movc r2.y, r2.y, r4.w, r5.w
  mov x0[0].x, r2.y
  mov r4.w, x1[1].x
  mov r5.w, x0[1].x
  mad r2.z, r2.z, r2.z, -r4.w
  mad r2.z, r5.w, r2.z, r4.w
  mov x1[1].x, r2.z
  mad r9.xyz, r1.yzwy, r2.zzzz, r8.xyzx
  lt r2.z, r2.x, r2.z
  mul r6.yz, r9.xxyx, cb1[44].xxyx
  ftoi r10.xy, r6.yzyy
  mov r10.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.w, r10.xyzw, t21.yzwx
  ge r6.y, r4.w, l(0.984375)
  mul r6.z, r4.w, l(1.01587307)
  mad r4.w, r4.w, l(64.000000), l(-63.000000)
  movc r4.w, r6.y, r4.w, r6.z
  max r4.w, r4.w, l(0.00000001)
  rcp r4.w, r4.w
  mov r6.y, x2[1].x
  movc r6.y, r2.z, r4.w, r6.y
  mov x2[1].x, r6.y
  add r4.w, r4.w, l(0.042000)
  mul r4.w, r4.w, r9.z
  lt r4.w, l(1.000000), r4.w
  and r4.w, r4.w, l(0x3f800000)
  mul r4.w, r4.w, r5.w
  movc r2.z, r2.z, r4.w, r5.w
  mov x0[1].x, r2.z
  add r2.y, r2.z, r2.y
  eq r2.y, r2.y, l(0.000000)
else 
  mov r2.y, l(-1)
endif 
if_z r2.y
  mad r2.yz, r2.wwww, l(0.000000, 0.500000, 0.500000, 0.000000), l(0.000000, 3.33333325, 4.000000, 0.000000)
  mul r2.yz, r2.yyzy, l(0.000000, 0.11764706, 0.11764706, 0.000000)
  mov r4.w, x1[0].x
  mov r5.w, x0[0].x
  mad r2.y, r2.y, r2.y, -r4.w
  mad r2.y, r5.w, r2.y, r4.w
  mov x1[0].x, r2.y
  mad r9.xyz, r11.xyzx, r2.yyyy, r8.xyzx
  lt r2.y, r2.x, r2.y
  mul r6.yz, r9.xxyx, cb1[44].xxyx
  ftoi r10.xy, r6.yzyy
  mov r10.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.w, r10.xyzw, t21.yzwx
  ge r6.y, r4.w, l(0.984375)
  mul r6.z, r4.w, l(1.01587307)
  mad r4.w, r4.w, l(64.000000), l(-63.000000)
  movc r4.w, r6.y, r4.w, r6.z
  max r4.w, r4.w, l(0.00000001)
  rcp r4.w, r4.w
  mov r6.y, x2[0].x
  movc r6.y, r2.y, r4.w, r6.y
  mov x2[0].x, r6.y
  add r4.w, r4.w, l(0.042000)
  mul r4.w, r4.w, r9.z
  lt r4.w, l(1.000000), r4.w
  and r4.w, r4.w, l(0x3f800000)
  mul r4.w, r4.w, r5.w
  movc r2.y, r2.y, r4.w, r5.w
  mov x0[0].x, r2.y
  mov r4.w, x1[1].x
  mov r5.w, x0[1].x
  mad r2.z, r2.z, r2.z, -r4.w
  mad r2.z, r5.w, r2.z, r4.w
  mov x1[1].x, r2.z
  mad r9.xyz, r1.yzwy, r2.zzzz, r8.xyzx
  lt r2.z, r2.x, r2.z
  mul r6.yz, r9.xxyx, cb1[44].xxyx
  ftoi r10.xy, r6.yzyy
  mov r10.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.w, r10.xyzw, t21.yzwx
  ge r6.y, r4.w, l(0.984375)
  mul r6.z, r4.w, l(1.01587307)
  mad r4.w, r4.w, l(64.000000), l(-63.000000)
  movc r4.w, r6.y, r4.w, r6.z
  max r4.w, r4.w, l(0.00000001)
  rcp r4.w, r4.w
  mov r6.y, x2[1].x
  movc r6.y, r2.z, r4.w, r6.y
  mov x2[1].x, r6.y
  add r4.w, r4.w, l(0.042000)
  mul r4.w, r4.w, r9.z
  lt r4.w, l(1.000000), r4.w
  and r4.w, r4.w, l(0x3f800000)
  mul r4.w, r4.w, r5.w
  movc r2.z, r2.z, r4.w, r5.w
  mov x0[1].x, r2.z
  add r2.y, r2.z, r2.y
  eq r2.y, r2.y, l(0.000000)
else 
  mov r2.y, l(-1)
endif 
if_z r2.y
  mad r2.yz, r2.wwww, l(0.000000, 0.500000, 0.500000, 0.000000), l(0.000000, 4.33333349, 5.000000, 0.000000)
  mul r2.yz, r2.yyzy, l(0.000000, 0.11764706, 0.11764706, 0.000000)
  mov r4.w, x1[0].x
  mov r5.w, x0[0].x
  mad r2.y, r2.y, r2.y, -r4.w
  mad r2.y, r5.w, r2.y, r4.w
  mov x1[0].x, r2.y
  mad r9.xyz, r11.xyzx, r2.yyyy, r8.xyzx
  lt r2.y, r2.x, r2.y
  mul r6.yz, r9.xxyx, cb1[44].xxyx
  ftoi r10.xy, r6.yzyy
  mov r10.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.w, r10.xyzw, t21.yzwx
  ge r6.y, r4.w, l(0.984375)
  mul r6.z, r4.w, l(1.01587307)
  mad r4.w, r4.w, l(64.000000), l(-63.000000)
  movc r4.w, r6.y, r4.w, r6.z
  max r4.w, r4.w, l(0.00000001)
  rcp r4.w, r4.w
  mov r6.y, x2[0].x
  movc r6.y, r2.y, r4.w, r6.y
  mov x2[0].x, r6.y
  add r4.w, r4.w, l(0.042000)
  mul r4.w, r4.w, r9.z
  lt r4.w, l(1.000000), r4.w
  and r4.w, r4.w, l(0x3f800000)
  mul r4.w, r4.w, r5.w
  movc r2.y, r2.y, r4.w, r5.w
  mov x0[0].x, r2.y
  mov r4.w, x1[1].x
  mov r5.w, x0[1].x
  mad r2.z, r2.z, r2.z, -r4.w
  mad r2.z, r5.w, r2.z, r4.w
  mov x1[1].x, r2.z
  mad r9.xyz, r1.yzwy, r2.zzzz, r8.xyzx
  lt r2.z, r2.x, r2.z
  mul r6.yz, r9.xxyx, cb1[44].xxyx
  ftoi r10.xy, r6.yzyy
  mov r10.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.w, r10.xyzw, t21.yzwx
  ge r6.y, r4.w, l(0.984375)
  mul r6.z, r4.w, l(1.01587307)
  mad r4.w, r4.w, l(64.000000), l(-63.000000)
  movc r4.w, r6.y, r4.w, r6.z
  max r4.w, r4.w, l(0.00000001)
  rcp r4.w, r4.w
  mov r6.y, x2[1].x
  movc r6.y, r2.z, r4.w, r6.y
  mov x2[1].x, r6.y
  add r4.w, r4.w, l(0.042000)
  mul r4.w, r4.w, r9.z
  lt r4.w, l(1.000000), r4.w
  and r4.w, r4.w, l(0x3f800000)
  mul r4.w, r4.w, r5.w
  movc r2.z, r2.z, r4.w, r5.w
  mov x0[1].x, r2.z
  add r2.y, r2.z, r2.y
  eq r2.y, r2.y, l(0.000000)
else 
  mov r2.y, l(-1)
endif 
if_z r2.y
  mad r2.yz, r2.wwww, l(0.000000, 0.500000, 0.500000, 0.000000), l(0.000000, 5.33333349, 6.000000, 0.000000)
  mul r2.yz, r2.yyzy, l(0.000000, 0.11764706, 0.11764706, 0.000000)
  mov r4.w, x1[0].x
  mov r5.w, x0[0].x
  mad r2.y, r2.y, r2.y, -r4.w
  mad r2.y, r5.w, r2.y, r4.w
  mov x1[0].x, r2.y
  mad r9.xyz, r11.xyzx, r2.yyyy, r8.xyzx
  lt r2.y, r2.x, r2.y
  mul r6.yz, r9.xxyx, cb1[44].xxyx
  ftoi r10.xy, r6.yzyy
  mov r10.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.w, r10.xyzw, t21.yzwx
  ge r6.y, r4.w, l(0.984375)
  mul r6.z, r4.w, l(1.01587307)
  mad r4.w, r4.w, l(64.000000), l(-63.000000)
  movc r4.w, r6.y, r4.w, r6.z
  max r4.w, r4.w, l(0.00000001)
  rcp r4.w, r4.w
  mov r6.y, x2[0].x
  movc r6.y, r2.y, r4.w, r6.y
  mov x2[0].x, r6.y
  add r4.w, r4.w, l(0.042000)
  mul r4.w, r4.w, r9.z
  lt r4.w, l(1.000000), r4.w
  and r4.w, r4.w, l(0x3f800000)
  mul r4.w, r4.w, r5.w
  movc r2.y, r2.y, r4.w, r5.w
  mov x0[0].x, r2.y
  mov r4.w, x1[1].x
  mov r5.w, x0[1].x
  mad r2.z, r2.z, r2.z, -r4.w
  mad r2.z, r5.w, r2.z, r4.w
  mov x1[1].x, r2.z
  mad r9.xyz, r1.yzwy, r2.zzzz, r8.xyzx
  lt r2.z, r2.x, r2.z
  mul r6.yz, r9.xxyx, cb1[44].xxyx
  ftoi r10.xy, r6.yzyy
  mov r10.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.w, r10.xyzw, t21.yzwx
  ge r6.y, r4.w, l(0.984375)
  mul r6.z, r4.w, l(1.01587307)
  mad r4.w, r4.w, l(64.000000), l(-63.000000)
  movc r4.w, r6.y, r4.w, r6.z
  max r4.w, r4.w, l(0.00000001)
  rcp r4.w, r4.w
  mov r6.y, x2[1].x
  movc r6.y, r2.z, r4.w, r6.y
  mov x2[1].x, r6.y
  add r4.w, r4.w, l(0.042000)
  mul r4.w, r4.w, r9.z
  lt r4.w, l(1.000000), r4.w
  and r4.w, r4.w, l(0x3f800000)
  mul r4.w, r4.w, r5.w
  movc r2.z, r2.z, r4.w, r5.w
  mov x0[1].x, r2.z
  add r2.y, r2.z, r2.y
  eq r2.y, r2.y, l(0.000000)
else 
  mov r2.y, l(-1)
endif 
if_z r2.y
  mad r2.yz, r2.wwww, l(0.000000, 0.500000, 0.500000, 0.000000), l(0.000000, 6.33333349, 7.000000, 0.000000)
  mul r2.yz, r2.yyzy, l(0.000000, 0.11764706, 0.11764706, 0.000000)
  mov r4.w, x1[0].x
  mov r5.w, x0[0].x
  mad r2.y, r2.y, r2.y, -r4.w
  mad r2.y, r5.w, r2.y, r4.w
  mov x1[0].x, r2.y
  mad r9.xyz, r11.xyzx, r2.yyyy, r8.xyzx
  lt r2.y, r2.x, r2.y
  mul r6.yz, r9.xxyx, cb1[44].xxyx
  ftoi r10.xy, r6.yzyy
  mov r10.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.w, r10.xyzw, t21.yzwx
  ge r6.y, r4.w, l(0.984375)
  mul r6.z, r4.w, l(1.01587307)
  mad r4.w, r4.w, l(64.000000), l(-63.000000)
  movc r4.w, r6.y, r4.w, r6.z
  max r4.w, r4.w, l(0.00000001)
  rcp r4.w, r4.w
  mov r6.y, x2[0].x
  movc r6.y, r2.y, r4.w, r6.y
  mov x2[0].x, r6.y
  add r4.w, r4.w, l(0.042000)
  mul r4.w, r4.w, r9.z
  lt r4.w, l(1.000000), r4.w
  and r4.w, r4.w, l(0x3f800000)
  mul r4.w, r4.w, r5.w
  movc r2.y, r2.y, r4.w, r5.w
  mov x0[0].x, r2.y
  mov r4.w, x1[1].x
  mov r5.w, x0[1].x
  mad r2.z, r2.z, r2.z, -r4.w
  mad r2.z, r5.w, r2.z, r4.w
  mov x1[1].x, r2.z
  mad r9.xyz, r1.yzwy, r2.zzzz, r8.xyzx
  lt r2.z, r2.x, r2.z
  mul r6.yz, r9.xxyx, cb1[44].xxyx
  ftoi r10.xy, r6.yzyy
  mov r10.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.w, r10.xyzw, t21.yzwx
  ge r6.y, r4.w, l(0.984375)
  mul r6.z, r4.w, l(1.01587307)
  mad r4.w, r4.w, l(64.000000), l(-63.000000)
  movc r4.w, r6.y, r4.w, r6.z
  max r4.w, r4.w, l(0.00000001)
  rcp r4.w, r4.w
  mov r6.y, x2[1].x
  movc r6.y, r2.z, r4.w, r6.y
  mov x2[1].x, r6.y
  add r4.w, r4.w, l(0.042000)
  mul r4.w, r4.w, r9.z
  lt r4.w, l(1.000000), r4.w
  and r4.w, r4.w, l(0x3f800000)
  mul r4.w, r4.w, r5.w
  movc r2.z, r2.z, r4.w, r5.w
  mov x0[1].x, r2.z
  add r2.y, r2.z, r2.y
  eq r2.y, r2.y, l(0.000000)
else 
  mov r2.y, l(-1)
endif 
if_z r2.y
  mad r2.yz, r2.wwww, l(0.000000, 0.500000, 0.500000, 0.000000), l(0.000000, 7.33333349, 8.000000, 0.000000)
  mul r2.yz, r2.yyzy, l(0.000000, 0.11764706, 0.11764706, 0.000000)
  mov r2.w, x1[0].x
  mov r4.w, x0[0].x
  mad r2.y, r2.y, r2.y, -r2.w
  mad r2.y, r4.w, r2.y, r2.w
  mad r9.xyz, r11.xyzx, r2.yyyy, r8.xyzx
  lt r2.y, r2.x, r2.y
  mul r6.yz, r9.xxyx, cb1[44].xxyx
  ftoi r10.xy, r6.yzyy
  mov r10.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r2.w, r10.xyzw, t21.yzwx
  ge r5.w, r2.w, l(0.984375)
  mul r6.y, r2.w, l(1.01587307)
  mad r2.w, r2.w, l(64.000000), l(-63.000000)
  movc r2.w, r5.w, r2.w, r6.y
  max r2.w, r2.w, l(0.00000001)
  rcp r2.w, r2.w
  mov r5.w, x2[0].x
  movc r5.w, r2.y, r2.w, r5.w
  mov x2[0].x, r5.w
  add r2.w, r2.w, l(0.042000)
  mul r2.w, r2.w, r9.z
  lt r2.w, l(1.000000), r2.w
  and r2.w, r2.w, l(0x3f800000)
  mul r2.w, r2.w, r4.w
  movc r2.y, r2.y, r2.w, r4.w
  mov x0[0].x, r2.y
  mov r2.y, x1[1].x
  mov r2.w, x0[1].x
  mad r2.z, r2.z, r2.z, -r2.y
  mad r2.y, r2.w, r2.z, r2.y
  mad r1.yzw, r1.yyzw, r2.yyyy, r8.xxyz
  lt r2.x, r2.x, r2.y
  mul r1.yz, r1.yyzy, cb1[44].xxyx
  ftoi r8.xy, r1.yzyy
  mov r8.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r1.y, r8.xyzw, t21.yxzw
  ge r1.z, r1.y, l(0.984375)
  mul r2.y, r1.y, l(1.01587307)
  mad r1.y, r1.y, l(64.000000), l(-63.000000)
  movc r1.y, r1.z, r1.y, r2.y
  max r1.y, r1.y, l(0.00000001)
  rcp r1.y, r1.y
  mov r1.z, x2[1].x
  movc r1.z, r2.x, r1.y, r1.z
  mov x2[1].x, r1.z
  add r1.y, r1.y, l(0.042000)
  mul r1.y, r1.y, r1.w
  lt r1.y, l(1.000000), r1.y
  and r1.y, r1.y, l(0x3f800000)
  mul r1.y, r1.y, r2.w
  movc r1.y, r2.x, r1.y, r2.w
  mov x0[1].x, r1.y
endif 
mov r1.y, x2[0].x
add r1.y, -r6.w, r1.y
lt r1.y, l(3.000000), |r1.y|
mov r1.z, x0[0].x
mad r1.z, -r1.z, l(0.500000), l(1.000000)
movc r1.y, r1.y, l(0.500000), r1.z
mov r1.z, x2[1].x
add r1.z, -r6.w, r1.z
lt r1.z, l(3.000000), |r1.z|
mov r1.w, x0[1].x
mul r1.w, r1.w, l(0.500000)
movc r1.z, r1.z, l(-0.500000), -r1.w
add r1.y, r1.z, r1.y
add_sat r1.y, -r1.y, l(1.000000)
mad r1.z, r1.y, l(-2.000000), l(3.000000)
mul r1.y, r1.y, r1.y
mul r1.y, r1.y, r1.z
min r1.y, r1.y, r17.w
mul r1.y, r1.y, r17.z
mul r1.yzw, r36.xxyz, r1.yyyy
mad r2.xyz, r1.yzwy, r38.xyzx, r32.xyzx
mad r6.yzw, r1.yyzw, r39.xxyz, r33.xxyz
mad r8.xyz, r1.yzwy, r40.xyzx, r35.xyzx
mad r1.yzw, r1.yyzw, r41.xxyz, r34.xxyz
add r2.w, -r7.y, l(1.000000)
mul r4.w, r2.w, l(5.000000)
mad r5.w, r2.w, l(5.000000), l(-2.500000)
mul_sat r5.w, r5.w, l(0.400000)
mul r5.w, r5.w, l(100.000000)
mad r7.zw, -r2.wwww, l(0.000000, 0.000000, 10.000000, 5.000000), l(0.000000, 0.000000, 6.857410, 7.085000)
exp r7.z, r7.z
mul r7.z, r7.z, r7.x
mul r8.w, r2.w, r4.w
mad r7.w, -r8.w, l(2.015905), r7.w
exp r7.w, r7.w
mul r7.w, r7.w, r7.x
mul r7.zw, r7.zzzw, l(0.000000, 0.000000, 9.136810, 9.708090)
max r7.z, r7.w, r7.z
max r7.z, r7.z, l(1.268160)
iadd r7.w, cb2[0].y, -cb2[58].x
and r8.w, r7.w, l(-32)
iadd r9.x, r7.w, -r8.w
and r9.y, cb2[0].y, l(-32)
iadd r9.z, -r9.y, cb2[0].y
mov r10.xy, l(0,0,0,0)
mov r11.w, l(0)
mov r13.yz, l(0,0,1.000000,0)
mov r14.xy, l(0,0,0,0)
mov r15.x, l(1.000000)
mov r16.xy, l(0,0,0,0)
mov r17.xy, l(0,0,0,0)
mov r19.xyzw, l(0,0,0,0)
mov r20.yzw, l(0,0,0,0)
mov r9.w, r8.w
loop 
  uge r10.w, r9.w, cb2[0].y
  breakc_nz r10.w
  ushr r10.z, r9.w, l(5)
  iadd r11.xyz, r10.xyzx, r18.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r10.z, r11.xyzw, t7.yzxw
  ieq r10.w, r8.w, r9.w
  bfi r11.x, r9.x, l(0), l(0), r10.z
  movc r10.z, r10.w, r11.x, r10.z
  ieq r10.w, r9.y, r9.w
  ubfe r11.x, r9.z, l(0), r10.z
  movc r10.z, r10.w, r11.x, r10.z
  iadd r10.w, r9.w, cb2[0].x
  mov r21.xyzw, r19.xyzw
  mov r22.xyz, r20.yzwy
  mov r11.x, r10.z
  loop 
    breakc_z r11.x
    firstbit_lo r11.y, r11.x
    ishl r11.z, l(1), r11.y
    and r13.w, r11.z, r11.x
    if_nz r13.w
      xor r11.x, r11.z, r11.x
      iadd r11.z, r10.w, r11.y
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r23.xyzw, r11.z, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r24.xy, r11.z, l(16), t11.xyxx
      add r23.xyz, r23.xyzx, -v6.xyzx
      mov r24.z, r23.w
      lt r23.xyz, |r23.xyzx|, r24.zxyz
      and r11.z, r23.y, r23.x
      and r11.z, r23.z, r11.z
      if_nz r11.z
        iadd r11.y, r9.w, r11.y
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r23.xyzw, r11.y, l(0), t15.wxyz
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r15.zw, r11.y, l(96), t15.xxxy
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r11.y, l(116), t15.zwxy
        add r25.xyz, -r23.yzwy, v6.xyzx
        and r11.z, r24.w, l(0x0000ffff)
        ubfe r13.w, l(6), l(25), r24.w
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r26.xyzw, r11.z, l(0), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r11.z, l(16), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r11.z, l(32), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r11.z, l(48), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r11.z, l(64), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r11.z, l(80), t16.xyzw
        dp3 r14.w, r26.xyzx, r25.xyzx
        add_sat r14.w, r26.w, r14.w
        dp3 r16.w, r27.xyzx, r25.xyzx
        add_sat r16.w, r27.w, r16.w
        mul r14.w, r14.w, r16.w
        dp3 r16.w, r28.xyzx, r25.xyzx
        add_sat r16.w, r28.w, r16.w
        mul r14.w, r14.w, r16.w
        dp3 r16.w, r29.xyzx, r25.xyzx
        add_sat r16.w, r29.w, r16.w
        mul r14.w, r14.w, r16.w
        dp3 r16.w, r30.xyzx, r25.xyzx
        add_sat r16.w, r30.w, r16.w
        mul r14.w, r14.w, r16.w
        dp3 r16.w, r31.xyzx, r25.xyzx
        add_sat r16.w, r31.w, r16.w
        mul r13.x, r14.w, r16.w
        and r14.w, r15.z, l(1)
        movc r26.xy, r14.wwww, r13.xyxx, r13.zxzz
        mov r13.x, r15.z
        mov r27.xy, r26.xyxx
        mov r14.w, l(1)
        loop 
          ige r16.w, r14.w, r13.w
          breakc_nz r16.w
          iadd r16.w, r11.z, r14.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r16.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r16.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r16.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r16.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r16.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r16.w, l(80), t16.xyzw
          dp3 r16.w, r28.xyzx, r25.xyzx
          add_sat r16.w, r28.w, r16.w
          mul r16.w, r16.w, r27.x
          dp3 r17.w, r29.xyzx, r25.xyzx
          add_sat r17.w, r29.w, r17.w
          mul r16.w, r16.w, r17.w
          dp3 r17.w, r30.xyzx, r25.xyzx
          add_sat r17.w, r30.w, r17.w
          mul r16.w, r16.w, r17.w
          dp3 r17.w, r31.xyzx, r25.xyzx
          add_sat r17.w, r31.w, r17.w
          mul r16.w, r16.w, r17.w
          dp3 r17.w, r32.xyzx, r25.xyzx
          add_sat r17.w, r32.w, r17.w
          mul r16.w, r16.w, r17.w
          dp3 r17.w, r33.xyzx, r25.xyzx
          add_sat r17.w, r33.w, r17.w
          mul r27.x, r16.w, r17.w
          ushr r18.w, r13.x, l(2)
          ubfe r23.w, l(1), l(2), r13.x
          and r25.w, r18.w, l(2)
          max r26.z, r27.x, r27.y
          mad r16.w, -r16.w, r17.w, l(1.000000)
          mul r16.w, r16.w, r27.y
          movc r15.y, r25.w, r16.w, r26.z
          movc r27.xy, r23.wwww, r27.xyxx, r15.xyxx
          iadd r14.w, r14.w, l(1)
          mov r13.x, r18.w
        endloop 
        mov_sat r27.y, r27.y
        mul r11.z, r15.w, r27.y
        lt r13.x, l(0.000000), r11.z
        if_nz r13.x
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r11.y, l(16), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r11.y, l(32), t15.yxwz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r11.y, l(48), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r11.y, l(64), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r11.y, l(80), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r11.y, l(132), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r11.y, l(148), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r11.y, l(164), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r11.y, l(180), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r11.y, l(196), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xy, r11.y, l(212), t15.xyxx
          mad r22.z, r27.y, r15.w, r22.z
          mul r11.y, r24.z, r11.z
          mov r24.z, r32.z
          dp3 r11.z, r12.xyzx, r24.xyzx
          dp3 r13.x, r25.xyzx, r24.xyzx
          add r13.x, -r32.w, r13.x
          ge r13.w, r13.x, l(0.000000)
          max r13.x, r5.w, |r13.x|
          movc r13.x, r13.w, r13.x, -r13.x
          max r11.z, -r11.z, l(0.00000010)
          div r11.z, r13.x, r11.z
          min r11.z, |r11.z|, l(131072.000000)
          mov r32.z, r33.z
          dp3 r13.x, r12.xyzx, r32.xyzx
          dp3 r13.w, r25.xyzx, r32.xyzx
          add r13.w, -r33.w, r13.w
          ge r14.w, r13.w, l(0.000000)
          max r13.w, r5.w, |r13.w|
          movc r13.w, r14.w, r13.w, -r13.w
          max r13.x, -r13.x, l(0.00000010)
          div r13.x, r13.w, r13.x
          min r11.z, r11.z, |r13.x|
          mov r33.z, r34.z
          dp3 r13.x, r12.xyzx, r33.xyzx
          dp3 r13.w, r25.xyzx, r33.xyzx
          add r13.w, -r34.w, r13.w
          ge r14.w, r13.w, l(0.000000)
          max r13.w, r5.w, |r13.w|
          movc r13.w, r14.w, r13.w, -r13.w
          max r13.x, -r13.x, l(0.00000010)
          div r13.x, r13.w, r13.x
          min r11.z, r11.z, |r13.x|
          mov r34.z, r35.z
          dp3 r13.x, r12.xyzx, r34.xyzx
          dp3 r13.w, r25.xyzx, r34.xyzx
          add r13.w, -r35.w, r13.w
          ge r14.w, r13.w, l(0.000000)
          max r13.w, r5.w, |r13.w|
          movc r13.w, r14.w, r13.w, -r13.w
          max r13.x, -r13.x, l(0.00000010)
          div r13.x, r13.w, r13.x
          min r11.z, r11.z, |r13.x|
          mov r35.z, r36.x
          dp3 r13.x, r12.xyzx, r35.xyzx
          dp3 r13.w, r25.xyzx, r35.xyzx
          add r13.w, -r36.y, r13.w
          ge r14.w, r13.w, l(0.000000)
          max r13.w, r5.w, |r13.w|
          movc r13.w, r14.w, r13.w, -r13.w
          max r13.x, -r13.x, l(0.00000010)
          div r13.x, r13.w, r13.x
          min r11.z, r11.z, |r13.x|
          mov r37.zw, r36.zzzw
          dp3 r13.x, r12.zxyz, r37.xzwx
          dp3 r13.w, r25.zxyz, r37.xzwx
          add r13.w, -r37.y, r13.w
          ge r14.w, r13.w, l(0.000000)
          max r13.w, r5.w, |r13.w|
          movc r13.w, r14.w, r13.w, -r13.w
          max r13.x, -r13.x, l(0.00000010)
          div r13.x, r13.w, r13.x
          min r11.z, r11.z, |r13.x|
          mov r24.x, r29.w
          mov r24.yz, r30.zzwz
          add r15.yzw, r25.xxyz, r24.xxyz
          mad r15.yzw, r12.xxyz, r11.zzzz, r15.yyzw
          dp3 r13.x, r15.yzwy, r15.yzwy
          sqrt r13.x, r13.x
          div r11.z, r11.z, r13.x
          add r11.z, r11.z, r11.z
          sqrt r11.z, r11.z
          mad r11.z, r2.w, l(5.000000), r11.z
          add r11.z, r11.z, l(-0.844800)
          mov r23.y, r26.z
          mov r23.z, r28.x
          dp3 r32.x, r15.yzwy, r23.xyzx
          mov r24.xy, r26.xwxx
          mov r24.z, r28.w
          dp3 r32.y, r15.yzwy, r24.xyzx
          mov r28.x, r26.y
          dp3 r32.z, r15.yzwy, r28.xyzx
          ubfe r13.x, l(9), l(16), r24.w
          utof r32.w, r13.x
          sample_l_indexable(texturecubearray)(float,float,float,float) r15.yzw, r32.xyzw, t8.wxyz, s2, r11.z
          dp3 r26.x, r25.xyzx, r23.xyzx
          dp3 r26.y, r25.xyzx, r24.xyzx
          dp3 r26.z, r25.xyzx, r28.xyzx
          mad_sat r25.xyz, r26.xyzx, r29.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
          mov r30.z, r31.x
          mad r25.xyz, r25.xyzx, r30.xyzx, r31.yzwy
          dp3 r32.x, r3.xyzx, r23.xyzx
          dp3 r32.y, r3.xyzx, r24.xyzx
          dp3 r32.z, r3.xyzx, r28.xyzx
          lt r23.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r32.xyzx
          movc r14.z, r23.x, l(0), l(0.500000)
          add r24.xyz, r14.xyzx, r25.xyzx
          sample_l_indexable(texture3d)(float,float,float,float) r24.xyz, r24.xyzx, t17.xyzw, s4, l(0.000000)
          mul r26.xyz, r32.xyzx, r32.xyzx
          mul r26.xyz, r11.yyyy, r26.xyzx
          movc r16.z, r23.y, l(0), l(0.500000)
          add r23.xyw, r16.xyxz, r25.xyxz
          sample_l_indexable(texture3d)(float,float,float,float) r23.xyw, r23.xywx, t18.xywz, s4, l(0.000000)
          mul r23.xyw, r26.yyyy, r23.xyxw
          mad r23.xyw, r24.xyxz, r26.xxxx, r23.xyxw
          movc r17.z, r23.z, l(0), l(0.500000)
          add r24.xyz, r17.xyzx, r25.xyzx
          sample_l_indexable(texture3d)(float,float,float,float) r24.xyz, r24.xyzx, t19.xyzw, s4, l(0.000000)
          mad r23.xyz, r24.xyzx, r26.zzzz, r23.xywx
          sample_l_indexable(texturecubearray)(float,float,float,float) r24.xyz, r32.xyzw, t8.xyzw, s2, l(6.000000)
          mul r25.xyz, r23.xyzx, r24.xyzx
          dp3 r11.z, r25.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r21.xyz, r23.xyzx, r24.xyzx, r21.xyzx
          mul r13.x, r7.z, r11.z
          mul r15.yzw, r11.yyyy, r15.yyzw
          dp3 r11.y, r15.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r11.y, r7.z, r11.z, r11.y
          div r11.y, r13.x, r11.y
          mov r23.x, r21.w
          mov r23.yz, r22.xxyx
          mad r22.xyw, r15.zwzy, r11.yyyy, r23.yzyx
          mov r21.w, r22.w
        endif 
      endif 
    endif 
  endloop 
  mov r19.xyzw, r21.xyzw
  mov r20.yzw, r22.xxyz
  iadd r9.w, r9.w, l(32)
endloop 
lt r9.y, r20.w, l(1.000000)
if_nz r9.y
  mov r10.xy, l(0,0,0,0)
  mov r11.w, l(0)
  mov r13.yz, l(0,0,1.000000,0)
  mov r14.xy, l(0,0,0,0)
  mov r15.x, l(1.000000)
  mov r16.xy, l(0,0,0,0)
  mov r17.xy, l(0,0,0,0)
  mov r21.x, r19.w
  mov r21.yzw, r20.yyzw
  mov r9.yzw, r19.xxyz
  mov r10.w, r20.w
  mov r13.w, l(0)
  loop 
    uge r14.w, r13.w, r7.w
    breakc_nz r14.w
    ushr r10.z, r13.w, l(5)
    iadd r11.xyz, r10.xyzx, r18.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r10.z, r11.xyzw, t7.yzxw
    ieq r11.x, r8.w, r13.w
    ubfe r11.y, r9.x, l(0), r10.z
    movc r10.z, r11.x, r11.y, r10.z
    iadd r11.x, r13.w, cb2[0].x
    mov r22.xyzw, r21.xyzw
    mov r23.xyz, r9.yzwy
    mov r11.y, r10.w
    mov r11.z, r10.z
    loop 
      breakc_z r11.z
      firstbit_lo r14.w, r11.z
      ishl r15.z, l(1), r14.w
      and r15.w, r11.z, r15.z
      if_nz r15.w
        xor r11.z, r11.z, r15.z
        iadd r15.z, r11.x, r14.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r24.xyzw, r15.z, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r25.xy, r15.z, l(16), t11.xyxx
        add r24.xyz, r24.xyzx, -v6.xyzx
        mov r25.z, r24.w
        lt r24.xyz, |r24.xyzx|, r25.zxyz
        and r15.z, r24.y, r24.x
        and r15.z, r24.z, r15.z
        if_nz r15.z
          iadd r14.w, r13.w, r14.w
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r14.w, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r15.zw, r14.w, l(96), t15.xxxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r14.w, l(116), t15.zwxy
          add r26.xyz, -r24.yzwy, v6.xyzx
          and r16.w, r25.w, l(0x0000ffff)
          ubfe r17.w, l(6), l(25), r25.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r16.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r16.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r16.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r16.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r16.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r16.w, l(80), t16.xyzw
          dp3 r18.w, r27.xyzx, r26.xyzx
          add_sat r18.w, r27.w, r18.w
          dp3 r23.w, r28.xyzx, r26.xyzx
          add_sat r23.w, r28.w, r23.w
          mul r18.w, r18.w, r23.w
          dp3 r23.w, r29.xyzx, r26.xyzx
          add_sat r23.w, r29.w, r23.w
          mul r18.w, r18.w, r23.w
          dp3 r23.w, r30.xyzx, r26.xyzx
          add_sat r23.w, r30.w, r23.w
          mul r18.w, r18.w, r23.w
          dp3 r23.w, r31.xyzx, r26.xyzx
          add_sat r23.w, r31.w, r23.w
          mul r18.w, r18.w, r23.w
          dp3 r23.w, r32.xyzx, r26.xyzx
          add_sat r23.w, r32.w, r23.w
          mul r13.x, r18.w, r23.w
          and r18.w, r15.z, l(1)
          movc r27.xy, r18.wwww, r13.xyxx, r13.zxzz
          mov r13.x, r15.z
          mov r28.xy, r27.xyxx
          mov r18.w, l(1)
          loop 
            ige r23.w, r18.w, r17.w
            breakc_nz r23.w
            iadd r23.w, r16.w, r18.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r23.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r23.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r23.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r23.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r23.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r23.w, l(80), t16.xyzw
            dp3 r23.w, r29.xyzx, r26.xyzx
            add_sat r23.w, r29.w, r23.w
            mul r23.w, r23.w, r28.x
            dp3 r24.w, r30.xyzx, r26.xyzx
            add_sat r24.w, r30.w, r24.w
            mul r23.w, r23.w, r24.w
            dp3 r24.w, r31.xyzx, r26.xyzx
            add_sat r24.w, r31.w, r24.w
            mul r23.w, r23.w, r24.w
            dp3 r24.w, r32.xyzx, r26.xyzx
            add_sat r24.w, r32.w, r24.w
            mul r23.w, r23.w, r24.w
            dp3 r24.w, r33.xyzx, r26.xyzx
            add_sat r24.w, r33.w, r24.w
            mul r23.w, r23.w, r24.w
            dp3 r24.w, r34.xyzx, r26.xyzx
            add_sat r24.w, r34.w, r24.w
            mul r28.x, r23.w, r24.w
            ushr r26.w, r13.x, l(2)
            ubfe r27.z, l(1), l(2), r13.x
            and r27.w, r26.w, l(2)
            max r28.z, r28.x, r28.y
            mad r23.w, -r23.w, r24.w, l(1.000000)
            mul r23.w, r23.w, r28.y
            movc r15.y, r27.w, r23.w, r28.z
            movc r28.xy, r27.zzzz, r28.xyxx, r15.xyxx
            iadd r18.w, r18.w, l(1)
            mov r13.x, r26.w
          endloop 
          add_sat r13.x, -r11.y, r28.y
          mul r15.y, r15.w, r13.x
          lt r15.z, l(0.000000), r15.y
          if_nz r15.z
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r14.w, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r14.w, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r14.w, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r14.w, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r14.w, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r14.w, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r14.w, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r14.w, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r14.w, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r14.w, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xy, r14.w, l(212), t15.xyxx
            mad r22.w, r13.x, r15.w, r22.w
            mul r13.x, r25.z, r15.y
            mov r25.z, r33.z
            dp3 r14.w, r12.xyzx, r25.xyzx
            dp3 r15.y, r26.xyzx, r25.xyzx
            add r15.y, -r33.w, r15.y
            ge r15.z, r15.y, l(0.000000)
            max r15.y, r5.w, |r15.y|
            movc r15.y, r15.z, r15.y, -r15.y
            max r14.w, -r14.w, l(0.00000010)
            div r14.w, r15.y, r14.w
            min r14.w, |r14.w|, l(131072.000000)
            mov r33.z, r34.z
            dp3 r15.y, r12.xyzx, r33.xyzx
            dp3 r15.z, r26.xyzx, r33.xyzx
            add r15.z, -r34.w, r15.z
            ge r15.w, r15.z, l(0.000000)
            max r15.z, r5.w, |r15.z|
            movc r15.z, r15.w, r15.z, -r15.z
            max r15.y, -r15.y, l(0.00000010)
            div r15.y, r15.z, r15.y
            min r14.w, r14.w, |r15.y|
            mov r34.z, r35.z
            dp3 r15.y, r12.xyzx, r34.xyzx
            dp3 r15.z, r26.xyzx, r34.xyzx
            add r15.z, -r35.w, r15.z
            ge r15.w, r15.z, l(0.000000)
            max r15.z, r5.w, |r15.z|
            movc r15.z, r15.w, r15.z, -r15.z
            max r15.y, -r15.y, l(0.00000010)
            div r15.y, r15.z, r15.y
            min r14.w, r14.w, |r15.y|
            mov r35.z, r36.z
            dp3 r15.y, r12.xyzx, r35.xyzx
            dp3 r15.z, r26.xyzx, r35.xyzx
            add r15.z, -r36.w, r15.z
            ge r15.w, r15.z, l(0.000000)
            max r15.z, r5.w, |r15.z|
            movc r15.z, r15.w, r15.z, -r15.z
            max r15.y, -r15.y, l(0.00000010)
            div r15.y, r15.z, r15.y
            min r14.w, r14.w, |r15.y|
            mov r36.z, r37.x
            dp3 r15.y, r12.xyzx, r36.xyzx
            dp3 r15.z, r26.xyzx, r36.xyzx
            add r15.z, -r37.y, r15.z
            ge r15.w, r15.z, l(0.000000)
            max r15.z, r5.w, |r15.z|
            movc r15.z, r15.w, r15.z, -r15.z
            max r15.y, -r15.y, l(0.00000010)
            div r15.y, r15.z, r15.y
            min r14.w, r14.w, |r15.y|
            mov r38.zw, r37.zzzw
            dp3 r15.y, r12.zxyz, r38.xzwx
            dp3 r15.z, r26.zxyz, r38.xzwx
            add r15.z, -r38.y, r15.z
            ge r15.w, r15.z, l(0.000000)
            max r15.z, r5.w, |r15.z|
            movc r15.z, r15.w, r15.z, -r15.z
            max r15.y, -r15.y, l(0.00000010)
            div r15.y, r15.z, r15.y
            min r14.w, r14.w, |r15.y|
            mov r25.x, r30.w
            mov r25.yz, r31.zzwz
            add r15.yzw, r26.xxyz, r25.xxyz
            mad r15.yzw, r12.xxyz, r14.wwww, r15.yyzw
            dp3 r16.w, r15.yzwy, r15.yzwy
            sqrt r16.w, r16.w
            div r14.w, r14.w, r16.w
            add r14.w, r14.w, r14.w
            sqrt r14.w, r14.w
            mad r14.w, r2.w, l(5.000000), r14.w
            add r14.w, r14.w, l(-0.844800)
            mov r24.y, r27.z
            mov r24.z, r29.x
            dp3 r33.x, r15.yzwy, r24.xyzx
            mov r25.xy, r27.xwxx
            mov r25.z, r29.w
            dp3 r33.y, r15.yzwy, r25.xyzx
            mov r29.x, r27.y
            dp3 r33.z, r15.yzwy, r29.xyzx
            ubfe r15.y, l(9), l(16), r25.w
            utof r33.w, r15.y
            sample_l_indexable(texturecubearray)(float,float,float,float) r15.yzw, r33.xyzw, t8.wxyz, s2, r14.w
            dp3 r27.x, r26.xyzx, r24.xyzx
            dp3 r27.y, r26.xyzx, r25.xyzx
            dp3 r27.z, r26.xyzx, r29.xyzx
            mad_sat r26.xyz, r27.xyzx, r30.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
            mov r31.z, r32.x
            mad r26.xyz, r26.xyzx, r31.xyzx, r32.yzwy
            dp3 r33.x, r3.xyzx, r24.xyzx
            dp3 r33.y, r3.xyzx, r25.xyzx
            dp3 r33.z, r3.xyzx, r29.xyzx
            lt r24.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r33.xyzx
            movc r14.z, r24.x, l(0), l(0.500000)
            add r25.xyz, r14.xyzx, r26.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r25.xyz, r25.xyzx, t17.xyzw, s4, l(0.000000)
            mul r27.xyz, r33.xyzx, r33.xyzx
            mul r27.xyz, r13.xxxx, r27.xyzx
            movc r16.z, r24.y, l(0), l(0.500000)
            add r24.xyw, r16.xyxz, r26.xyxz
            sample_l_indexable(texture3d)(float,float,float,float) r24.xyw, r24.xywx, t18.xywz, s4, l(0.000000)
            mul r24.xyw, r27.yyyy, r24.xyxw
            mad r24.xyw, r25.xyxz, r27.xxxx, r24.xyxw
            movc r17.z, r24.z, l(0), l(0.500000)
            add r25.xyz, r17.xyzx, r26.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r25.xyz, r25.xyzx, t19.xyzw, s4, l(0.000000)
            mad r24.xyz, r25.xyzx, r27.zzzz, r24.xywx
            sample_l_indexable(texturecubearray)(float,float,float,float) r25.xyz, r33.xyzw, t8.xyzw, s2, l(6.000000)
            mul r26.xyz, r24.xyzx, r25.xyzx
            dp3 r14.z, r26.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r23.xyz, r24.xyzx, r25.xyzx, r23.xyzx
            mul r14.w, r7.z, r14.z
            mul r15.yzw, r13.xxxx, r15.yyzw
            dp3 r13.x, r15.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r13.x, r7.z, r14.z, r13.x
            div r13.x, r14.w, r13.x
            mad r22.xyz, r15.yzwy, r13.xxxx, r22.xyzx
          endif 
        endif 
      endif 
    endloop 
    mov r21.xyzw, r22.xyzw
    mov r9.yzw, r23.xxyz
    iadd r13.w, r13.w, l(32)
  endloop 
  mov r20.xyzw, r21.zxyw
  mov r19.xyz, r9.yzwy
  mov r20.xyzw, r20.yzxw
else 
  mov r20.x, r19.w
endif 
max r2.w, r20.w, l(1.000000)
rcp r2.w, r2.w
mov_sat r20.w, r20.w
mul r9.xyz, r2.wwww, r19.xyzx
mul r10.xyz, r2.wwww, r20.xyzx
lt r5.w, r20.w, l(0.990000)
if_nz r5.w
  add r5.w, -r20.w, l(1.000000)
  mul r7.z, r5.w, cb2[19].x
  add r11.xyz, v6.xyzx, -cb2[35].xyzx
  mul r13.x, r11.x, cb2[35].w
  mul r13.yz, r11.yyzy, cb2[36].xxyx
  add_sat r11.xyz, r13.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mul r13.xy, r11.xyxx, cb2[36].zwzz
  mul r13.z, r11.z, cb2[37].x
  add r11.xyz, r13.xyzx, cb2[37].yzwy
  lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r3.xyzx
  movc r13.xyz, r13.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
  mov r13.w, l(0)
  add r14.xyz, r11.xyzx, r13.wwxw
  sample_l_indexable(texture3d)(float,float,float,float) r14.xyz, r14.xyzx, t17.xyzw, s4, l(0.000000)
  mul r15.xyz, r3.xyzx, r3.xyzx
  mul r15.xyz, r7.zzzz, r15.xyzx
  add r16.xyz, r11.xyzx, r13.wwyw
  sample_l_indexable(texture3d)(float,float,float,float) r16.xyz, r16.xyzx, t18.xyzw, s4, l(0.000000)
  mul r16.xyz, r15.yyyy, r16.xyzx
  mad r14.xyz, r14.xyzx, r15.xxxx, r16.xyzx
  add r11.xyz, r11.xyzx, r13.wwzw
  sample_l_indexable(texture3d)(float,float,float,float) r11.xyz, r11.xyzx, t19.xyzw, s4, l(0.000000)
  mad r11.xyz, r11.xyzx, r15.zzzz, r14.xyzx
  mov r3.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r3.xyz, r3.xyzw, t8.xyzw, s2, l(6.000000)
  mul r3.xyz, r3.xyzx, r11.xyzx
  dp3 r3.w, r3.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  mad r9.xyz, r19.xyzx, r2.wwww, r3.xyzx
  mov r12.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r3.xyz, r12.xyzw, t8.xyzw, s2, r4.w
  mad r2.w, cb2[19].x, r5.w, -r3.w
  mad r2.w, r7.y, r2.w, r3.w
  mad r10.xyz, r3.xyzx, r2.wwww, r10.xyzx
endif 
mad r2.xyz, r9.xyzx, r0.yzwy, r2.xyzx
mad r0.yzw, r9.xxyz, r0.yyzw, r6.yyzw
mad r3.xy, r7.xyxx, l(0.984375, 0.984375, 0.000000, 0.000000), l(0.00781250, 0.00781250, 0.000000, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r3.xy, r3.xyxx, t5.xyzw, s2, l(0.000000)
mad r1.yzw, r10.xxyz, r3.xxxx, r1.yyzw
mad r3.xyz, r10.xyzx, r3.yyyy, r8.xyzx
mad r0.yzw, r0.yyzw, r4.xxyz, r2.xxyz
mul r1.yzw, r1.yyzw, l(0.000000, 0.972000, 0.972000, 0.972000)
mad r1.yzw, r3.xxyz, l(0.000000, 0.028000, 0.028000, 0.028000), r1.yyzw
add_sat r2.x, r0.x, l(0.040000)
mul r2.yzw, r1.yyzw, r2.xxxx
mad r1.yzw, r1.yyzw, r2.xxxx, r0.yyzw
dp3 r1.y, r1.yzwy, l(0.299000, 0.587000, 0.114000, 0.000000)
max r1.y, r1.y, l(0.000100)
max r1.y, r1.y, cb1[85].x
mul r1.x, r1.x, cb0[12].w
mul r1.x, r6.x, r1.x
mul r1.x, r1.y, r1.x
mad r1.xyz, r5.xyzx, r1.xxxx, r2.yzwy
lt r1.w, l(0.000000), cb2[9].z
if_nz r1.w
  dp3 r2.x, v6.xyzx, v6.xyzx
  sqrt r2.x, r2.x
  lt r2.y, l(0.000000), cb2[13].w
  if_nz r2.y
    mad r2.yz, r2.xxxx, cb2[15].xxyx, cb2[14].zzwz
    mul r2.yz, r2.yyzy, cb2[16].xxyx
    lt r2.w, l(0.010000), |v6.z|
    mul r3.xy, v6.zzzz, cb2[15].zwzz
    mul r3.zw, r3.xxxy, l(0.000000, 0.000000, -1.442695, -1.442695)
    exp r3.zw, r3.zzzw
    add r3.zw, -r3.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    div r3.xy, r3.zwzz, r3.xyxx
    mul r3.xy, r2.yzyy, r3.xyxx
    movc r2.yz, r2.wwww, r3.xxyx, r2.yyzy
    mul r3.xyz, r2.yyyy, cb2[12].xyzx
    exp r3.xyz, r3.xyzx
    mul r2.yzw, r2.zzzz, cb2[12].xxyz
    exp r2.yzw, r2.yyzw
    add r2.yzw, -r3.xxyz, r2.yyzw
    mad r2.yzw, cb2[13].wwww, r2.yyzw, r3.xxyz
  else 
    mad r2.x, r2.x, cb2[15].x, cb2[14].z
    mul r2.x, r2.x, cb2[16].x
    lt r3.x, l(0.010000), |v6.z|
    mul r3.y, v6.z, cb2[15].z
    mul r3.z, r3.y, l(-1.442695)
    exp r3.z, r3.z
    add r3.z, -r3.z, l(1.000000)
    div r3.y, r3.z, r3.y
    mul r3.y, r2.x, r3.y
    movc r2.x, r3.x, r3.y, r2.x
    mul r3.xyz, r2.xxxx, cb2[12].xyzx
    exp r2.yzw, r3.xxyz
  endif 
  mad r2.xyz, r2.yzwy, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r2.xyz, r2.xyzx, -cb2[9].zzzz
  mul r2.xyz, r0.yzwy, r2.xyzx
else 
  mul r2.w, v6.z, cb2[6].x
  mad r3.x, cb2[6].x, v6.z, cb2[5].x
  lt r3.y, |r2.w|, l(0.000100)
  min r3.z, r3.x, l(64.000000)
  mul r3.z, r3.z, l(1.442695)
  exp r3.z, r3.z
  mov_sat r3.w, cb2[6].z
  lt r4.x, r3.x, l(0.000000)
  add r3.x, r3.x, l(1.000000)
  movc r3.x, r4.x, r3.z, r3.x
  add r3.x, r3.x, -cb2[6].z
  movc r2.w, r3.y, l(1.000000), r2.w
  div r2.w, r3.x, r2.w
  movc r2.w, r3.y, r3.w, r2.w
  mul r2.w, r2.w, cb2[5].z
  dp3 r3.x, v6.xyzx, v6.xyzx
  sqrt r3.y, r3.x
  mad r2.w, r2.w, r3.y, cb2[5].w
  exp r2.w, r2.w
  min r2.w, r2.w, l(1.000000)
  add r2.w, -r2.w, l(1.000000)
  rsq r3.x, r3.x
  mul r3.xyz, r3.xxxx, v6.xyzx
  dp3 r3.x, cb2[7].yzwy, r3.xyzx
  mad_sat r3.x, cb2[8].y, r3.x, cb2[8].x
  add r3.y, cb2[3].w, -cb2[4].w
  mad r3.x, r3.x, r3.y, cb2[4].w
  mul r2.w, r2.w, r3.x
  mad r2.xyz, r2.wwww, -r0.yzwy, r0.yzwy
endif 
mul r0.yzw, r2.xxyz, cb1[85].yyyy
ge r2.xyz, r0.yzwy, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.yzw, r0.yyzw, r2.xxyz
min o1.xyz, r0.yzwy, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
if_nz r1.w
  dp3 r0.y, v6.xyzx, v6.xyzx
  rsq r0.z, r0.y
  mul r2.xyz, r0.zzzz, v6.xyzx
  sqrt r0.y, r0.y
  lt r0.z, l(0.000000), cb2[13].w
  if_nz r0.z
    mad r0.zw, r0.yyyy, cb2[15].xxxy, cb2[14].zzzw
    mul r0.zw, r0.zzzw, cb2[16].xxxy
    lt r1.w, l(0.010000), |v6.z|
    mul r3.xy, v6.zzzz, cb2[15].zwzz
    mul r3.zw, r3.xxxy, l(0.000000, 0.000000, -1.442695, -1.442695)
    exp r3.zw, r3.zzzw
    add r3.zw, -r3.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    div r3.xy, r3.zwzz, r3.xyxx
    mul r3.xy, r0.zwzz, r3.xyxx
    movc r0.zw, r1.wwww, r3.xxxy, r0.zzzw
    mul r3.xyz, r0.zzzz, cb2[12].xyzx
    exp r3.xyz, r3.xyzx
    mul r4.xyz, r0.wwww, cb2[12].xyzx
    exp r4.xyz, r4.xyzx
    add r4.xyz, -r3.xyzx, r4.xyzx
    mad r3.xyz, cb2[13].wwww, r4.xyzx, r3.xyzx
  else 
    mad r0.z, r0.y, cb2[15].x, cb2[14].z
    mul r0.z, r0.z, cb2[16].x
    lt r0.w, l(0.010000), |v6.z|
    mul r1.w, v6.z, cb2[15].z
    mul r2.w, r1.w, l(-1.442695)
    exp r2.w, r2.w
    add r2.w, -r2.w, l(1.000000)
    div r1.w, r2.w, r1.w
    mul r1.w, r0.z, r1.w
    movc r0.z, r0.w, r1.w, r0.z
    mul r4.xyz, r0.zzzz, cb2[12].xyzx
    exp r3.xyz, r4.xyzx
  endif 
  mad r3.xyz, r3.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r3.xyz, r3.xyzx, -cb2[9].zzzz
  dp3 r0.z, cb2[7].yzwy, -r2.xyzx
  mad r0.w, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r1.w, cb2[8].w, -r0.z, l(1.000000)
  mul r1.w, r1.w, r1.w
  mul r1.w, r1.w, l(12.566371)
  div r0.w, r0.w, r1.w
  add r0.y, r0.y, -cb2[10].w
  mul_sat r0.y, r0.y, cb2[11].w
  mul r0.y, r0.y, r0.w
  mov_sat r0.z, r0.z
  mad r0.z, r0.z, r0.z, l(1.000000)
  mad r0.z, r0.z, l(0.05968310), l(-1.000000)
  mad r0.z, cb2[8].z, r0.z, l(1.000000)
  mul r2.xyz, r0.yyyy, cb2[11].xyzx
  mad r0.yzw, r0.zzzz, cb2[10].xxyz, r2.xxyz
  mul r0.yzw, r0.yyzw, cb2[9].wwww
  add r2.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r0.yzw, r0.yyzw, r2.xxyz
  mad r0.yzw, r1.xxyz, r3.xxyz, r0.yyzw
else 
  mul r1.w, v6.z, cb2[6].x
  mad r2.x, cb2[6].x, v6.z, cb2[5].x
  lt r2.y, |r1.w|, l(0.000100)
  min r2.z, r2.x, l(64.000000)
  mul r2.z, r2.z, l(1.442695)
  exp r2.z, r2.z
  mov_sat r2.w, cb2[6].z
  lt r3.x, r2.x, l(0.000000)
  add r2.x, r2.x, l(1.000000)
  movc r2.x, r3.x, r2.z, r2.x
  add r2.x, r2.x, -cb2[6].z
  movc r1.w, r2.y, l(1.000000), r1.w
  div r1.w, r2.x, r1.w
  movc r1.w, r2.y, r2.w, r1.w
  mul r1.w, r1.w, cb2[5].z
  dp3 r2.x, v6.xyzx, v6.xyzx
  sqrt r2.y, r2.x
  mad r1.w, r1.w, r2.y, cb2[5].w
  exp r1.w, r1.w
  min r1.w, r1.w, l(1.000000)
  add r1.w, -r1.w, l(1.000000)
  rsq r2.x, r2.x
  mul r2.xyz, r2.xxxx, v6.xyzx
  dp3 r2.x, cb2[7].yzwy, r2.xyzx
  mad_sat r2.x, cb2[8].y, r2.x, cb2[8].x
  add r3.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r2.xyzw, r2.xxxx, r3.xyzw, cb2[4].xyzw
  mul r1.w, r1.w, r2.w
  add r2.xyz, -r1.xyzx, r2.xyzx
  mad r0.yzw, r1.wwww, r2.xxyz, r1.xxyz
endif 
mul r0.yzw, r0.yyzw, cb1[85].yyyy
ge r1.xyz, r0.yzwy, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.yzw, r0.yyzw, r1.xxyz
min o0.xyz, r0.yzwy, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
mov o2.w, r0.x
ret 
// Approximately 3589 instruction slots used
