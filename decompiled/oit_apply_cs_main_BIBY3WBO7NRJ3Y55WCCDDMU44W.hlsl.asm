//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:40:00 2021
//
//
// Buffer Definitions: 
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16 [unused]
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16 [unused]
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4 [unused]
//   uint numRefProbes;                 // Offset:    4 Size:     4 [unused]
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224 [unused]
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256 [unused]
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48 [unused]
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4 [unused]
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4 [unused]
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4 [unused]
//   uint enableDitheredShadow;         // Offset:  932 Size:     4 [unused]
//   uint oitMaxEntries;                // Offset:  936 Size:     4
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for spritePos
// {
//
//   struct FxComputeSprite_PosPack
//   {
//       
//       uint4 data[2];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    32
//
// }
//
// Resource bind info for spriteData
// {
//
//   struct FxComputeSprite_DataPack
//   {
//       
//       uint4 data[4];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    64
//
// }
//
// Resource bind info for spriteExtra
// {
//
//   struct FxComputeSprite_ExtraPack
//   {
//       
//       uint4 data[3];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    48
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// computeSpritesSampler             sampler      NA          NA             s0      1 
// computeSpritesPointSampler        sampler      NA          NA             s1      1 
// floatZSampler                     texture  float4          2d             t0      1 
// spritePos                         texture  struct         r/o             t1      1 
// spriteData                        texture  struct         r/o             t2      1 
// spriteExtra                       texture  struct         r/o             t3      1 
// frameBuffer                       texture  float4          2d            t21      1 
// oitFallbackBuffer                 texture  float4          2d            t22      1 
// oit_Nodes                         texture   uint2     2darray            t24      1 
// spriteCullRough                   texture    uint     2darray            t25      1 
// spriteCullRoughRough              texture    uint     2darray            t26      1 
// lmapTex                           texture  float4     2darray            t29      1 
// materialTexBC7                    texture  float4     2darray            t42      1 
// materialTexBC3                    texture  float4     2darray            t43      1 
// materialTexMask                   texture  float4     2darray            t45      1 
// frameAdaptiveTransparencyDepth        UAV  float4          2d             u2      1 
// frameAdaptiveTransparencyTrans        UAV  float4          2d             u3      1 
// frameAlphaResult                      UAV   float          2d             u4      1 
// frameBufferW                          UAV  float4          2d             u5      1 
// gOit_Pixels                           UAV    uint          2d             u6      1 
// frameDepthW                           UAV   float          2d             u7      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB1[86], immediateIndexed
dcl_constantbuffer CB2[59], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_structured t1, 32
dcl_resource_structured t2, 64
dcl_resource_structured t3, 48
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_texture2darray (uint,uint,uint,uint) t24
dcl_resource_texture2darray (uint,uint,uint,uint) t25
dcl_resource_texture2darray (uint,uint,uint,uint) t26
dcl_resource_texture2darray (float,float,float,float) t29
dcl_resource_texture2darray (float,float,float,float) t42
dcl_resource_texture2darray (float,float,float,float) t43
dcl_resource_texture2darray (float,float,float,float) t45
dcl_uav_typed_texture2d (float,float,float,float) u2
dcl_uav_typed_texture2d (float,float,float,float) u3
dcl_uav_typed_texture2d (float,float,float,float) u4
dcl_uav_typed_texture2d (float,float,float,float) u5
dcl_uav_typed_texture2d (uint,uint,uint,uint) u6
dcl_uav_typed_texture2d (float,float,float,float) u7
dcl_input vThreadIDInGroupFlattened
dcl_input vThreadGroupID.xy
dcl_input vThreadID.xy
dcl_temps 29
dcl_indexableTemp x0[4], 4
dcl_indexableTemp x1[4], 4
dcl_indexableTemp x2[4], 4
dcl_indexableTemp x3[4], 4
dcl_indexableTemp x4[4], 4
dcl_indexableTemp x5[4], 4
dcl_indexableTemp x6[4], 4
dcl_indexableTemp x7[4], 4
dcl_indexableTemp x8[4], 4
dcl_indexableTemp x9[4], 4
dcl_tgsm_structured g0, 20, 64
dcl_tgsm_structured g1, 20, 64
dcl_thread_group 8, 8, 1
ftou r0.xy, cb1[44].xyxx
ult r0.xy, r0.xyxx, vThreadID.xyxx
or r0.x, r0.y, r0.x
if_nz r0.x
  ret 
endif 
ld_uav_typed_indexable(texture2d)(uint,uint,uint,uint) r0.x, vThreadID.xyyy, u6.xyzw
ieq r0.y, r0.x, l(0)
ieq r0.z, cb1[82].x, l(0)
and r0.y, r0.z, r0.y
if_nz r0.y
  store_uav_typed u4.xyzw, vThreadID.xyyy, l(1.000000,1.000000,1.000000,1.000000)
  mov r1.xy, vThreadID.xyxx
  mov r1.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r0.y, r1.xyzw, t0.yxzw
  store_uav_typed u7.xyzw, vThreadID.xyyy, r0.yyyy
  ret 
endif 
and r0.y, r0.x, l(0x0000ffff)
umin r0.y, r0.y, cb2[58].z
store_structured g0.xyzw, vThreadIDInGroupFlattened.x, l(0), l(1000000015047466219876688855040.000000,1000000015047466219876688855040.000000,1000000015047466219876688855040.000000,1000000015047466219876688855040.000000)
store_structured g1.xyzw, vThreadIDInGroupFlattened.x, l(0), l(1.000000,1.000000,1.000000,1.000000)
if_nz r0.y
  ult r1.xyz, l(1, 2, 3, 0), r0.yyyy
  if_nz r0.y
    mov r2.xy, vThreadID.xyxx
    mov r2.zw, l(0,0,0,0)
    ld_indexable(texture2darray)(uint,uint,uint,uint) r0.z, r2.xyzw, t24.xzyw
    and r2.xyz, r0.zzzz, l(-2048, 1, 2046, 0)
    movc r3.x, r2.y, r0.z, l(0)
    utof r0.w, r2.z
    mad r1.w, -r0.w, l(0.00048876), l(1.000000)
    lt r0.w, l(409.200012), r0.w
    if_nz r0.w
      ushr r0.w, r0.z, l(2)
      and r0.w, r0.w, l(0x3ffffe00)
      ge r2.y, r0.w, l(0.00049219)
      if_nz r2.y
        add r0.w, -r0.w, l(1.000000)
        store_structured g0.x, vThreadIDInGroupFlattened.x, l(16), l(1000000015047466219876688855040.000000)
        store_structured g1.x, vThreadIDInGroupFlattened.x, l(16), l(1.000000)
        mov r2.y, l(3)
        loop 
          ilt r2.z, r2.y, l(0)
          breakc_nz r2.z
          ige r2.z, r2.y, l(0)
          if_nz r2.z
            ishl r2.z, r2.y, l(2)
            iadd r2.w, r2.z, l(4)
            ld_structured r3.z, vThreadIDInGroupFlattened.x, r2.z, g0.xxxx
            store_structured g0.x, vThreadIDInGroupFlattened.x, r2.w, r3.z
            ld_structured r2.z, vThreadIDInGroupFlattened.x, r2.z, g1.xxxx
            mul r2.z, r1.w, r2.z
            store_structured g1.x, vThreadIDInGroupFlattened.x, r2.w, r2.z
          endif 
          iadd r2.y, r2.y, l(-1)
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, l(0), r0.w
        store_structured g1.x, vThreadIDInGroupFlattened.x, l(0), r1.w
        ld_structured r0.w, vThreadIDInGroupFlattened.x, l(16), g0.xxxx
        ne r0.w, r0.w, l(1000000015047466219876688855040.000000)
        if_nz r0.w
          mov r0.w, l(2)
          loop 
            ige r2.y, r0.w, l(4)
            breakc_nz r2.y
            ishl r2.y, r0.w, l(2)
            ld_structured r2.z, vThreadIDInGroupFlattened.x, r2.y, g0.xxxx
            iadd r2.y, r2.y, l(-4)
            ld_structured r2.w, vThreadIDInGroupFlattened.x, r2.y, g0.xxxx
            add r2.z, -r2.w, r2.z
            ld_structured r2.yw, vThreadIDInGroupFlattened.x, r2.y, g1.xxxy
            add r2.y, -r2.w, r2.y
            mul r2.y, r2.y, r2.z
            mov x0[r0.w + 0].x, r2.y
            iadd r0.w, r0.w, l(1)
          endloop 
          mov r0.w, x0[2].x
          mov r2.y, x0[3].x
          lt r0.w, r2.y, r0.w
          movc r2.yz, r0.wwww, l(0,3,2,0), l(0,2,1,0)
          mov r0.w, l(2)
          loop 
            ige r2.w, r0.w, l(4)
            breakc_nz r2.w
            ige r2.w, r0.w, r2.y
            if_nz r2.w
              ishl r2.w, r0.w, l(2)
              iadd r3.z, r2.w, l(4)
              ld_structured r3.z, vThreadIDInGroupFlattened.x, r3.z, g0.xxxx
              store_structured g0.x, vThreadIDInGroupFlattened.x, r2.w, r3.z
            endif 
            iadd r0.w, r0.w, l(1)
          endloop 
          mov r0.w, l(1)
          loop 
            ige r2.y, r0.w, l(4)
            breakc_nz r2.y
            ige r2.y, r0.w, r2.z
            if_nz r2.y
              ishl r2.y, r0.w, l(2)
              iadd r2.w, r2.y, l(4)
              ld_structured r2.w, vThreadIDInGroupFlattened.x, r2.w, g1.xxxx
              store_structured g1.x, vThreadIDInGroupFlattened.x, r2.y, r2.w
            endif 
            iadd r0.w, r0.w, l(1)
          endloop 
        endif 
      endif 
    else 
      mov r0.z, l(0)
    endif 
  else 
    mov r2.x, l(-2048)
    mov r1.w, l(1.000000)
    mov r3.x, l(0)
    mov r0.z, l(0)
  endif 
  if_nz r1.x
    mov r4.xy, vThreadID.xyxx
    mov r4.zw, l(0,0,1,0)
    ld_indexable(texture2darray)(uint,uint,uint,uint) r0.w, r4.xyzw, t24.xzwy
    and r2.yz, r0.wwww, l(0, 1, 2046, 0)
    umax r4.x, r0.w, r3.x
    umin r4.y, r3.x, r0.w
    mov r3.y, l(0)
    movc r3.xy, r2.yyyy, r4.xyxx, r3.xyxx
    utof r1.x, r2.z
    mad r2.y, -r1.x, l(0.00048876), l(1.000000)
    mul r1.w, r1.w, r2.y
    lt r1.x, l(409.200012), r1.x
    if_nz r1.x
      umax r0.z, r0.w, r0.z
      ushr r1.x, r0.w, l(2)
      and r1.x, r1.x, l(0x3ffffe00)
      ge r2.z, r1.x, l(0.00049219)
      if_nz r2.z
        add r1.x, -r1.x, l(1.000000)
        mov r4.y, l(4)
        mov r2.zw, l(0,0,4,0)
        loop 
          ige r3.z, r2.w, l(4)
          breakc_nz r3.z
          ishl r3.z, r2.w, l(2)
          ld_structured r3.z, vThreadIDInGroupFlattened.x, r3.z, g0.xxxx
          ge r3.z, r3.z, r1.x
          if_nz r3.z
            mov r2.z, r2.w
            break 
          endif 
          iadd r4.x, r2.w, l(1)
          mov r2.zw, r4.yyyx
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, l(16), l(1000000015047466219876688855040.000000)
        store_structured g1.x, vThreadIDInGroupFlattened.x, l(16), l(1.000000)
        ishl r2.w, r2.z, l(2)
        iadd r3.z, r2.w, l(-4)
        ld_structured r3.z, vThreadIDInGroupFlattened.x, r3.z, g1.xxxx
        movc r3.z, r2.z, r3.z, l(1.000000)
        mov r3.w, l(3)
        loop 
          ilt r4.x, r3.w, l(0)
          breakc_nz r4.x
          ige r4.x, r3.w, r2.z
          if_nz r4.x
            ishl r4.x, r3.w, l(2)
            iadd r4.y, r4.x, l(4)
            ld_structured r4.z, vThreadIDInGroupFlattened.x, r4.x, g0.xxxx
            store_structured g0.x, vThreadIDInGroupFlattened.x, r4.y, r4.z
            ld_structured r4.x, vThreadIDInGroupFlattened.x, r4.x, g1.xxxx
            mul r4.x, r2.y, r4.x
            store_structured g1.x, vThreadIDInGroupFlattened.x, r4.y, r4.x
          endif 
          iadd r3.w, r3.w, l(-1)
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, r2.w, r1.x
        mul r1.x, r2.y, r3.z
        store_structured g1.x, vThreadIDInGroupFlattened.x, r2.w, r1.x
        ld_structured r1.x, vThreadIDInGroupFlattened.x, l(16), g0.xxxx
        ne r1.x, r1.x, l(1000000015047466219876688855040.000000)
        if_nz r1.x
          mov r1.x, l(2)
          loop 
            ige r2.y, r1.x, l(4)
            breakc_nz r2.y
            ishl r2.y, r1.x, l(2)
            ld_structured r2.z, vThreadIDInGroupFlattened.x, r2.y, g0.xxxx
            iadd r2.y, r2.y, l(-4)
            ld_structured r2.w, vThreadIDInGroupFlattened.x, r2.y, g0.xxxx
            add r2.z, -r2.w, r2.z
            ld_structured r2.yw, vThreadIDInGroupFlattened.x, r2.y, g1.xxxy
            add r2.y, -r2.w, r2.y
            mul r2.y, r2.y, r2.z
            mov x1[r1.x + 0].x, r2.y
            iadd r1.x, r1.x, l(1)
          endloop 
          mov r1.x, x1[2].x
          mov r2.y, x1[3].x
          lt r1.x, r2.y, r1.x
          movc r2.yz, r1.xxxx, l(0,3,2,0), l(0,2,1,0)
          mov r1.x, l(2)
          loop 
            ige r2.w, r1.x, l(4)
            breakc_nz r2.w
            ige r2.w, r1.x, r2.y
            if_nz r2.w
              ishl r2.w, r1.x, l(2)
              iadd r3.z, r2.w, l(4)
              ld_structured r3.z, vThreadIDInGroupFlattened.x, r3.z, g0.xxxx
              store_structured g0.x, vThreadIDInGroupFlattened.x, r2.w, r3.z
            endif 
            iadd r1.x, r1.x, l(1)
          endloop 
          mov r1.x, l(1)
          loop 
            ige r2.y, r1.x, l(4)
            breakc_nz r2.y
            ige r2.y, r1.x, r2.z
            if_nz r2.y
              ishl r2.y, r1.x, l(2)
              iadd r2.w, r2.y, l(4)
              ld_structured r2.w, vThreadIDInGroupFlattened.x, r2.w, g1.xxxx
              store_structured g1.x, vThreadIDInGroupFlattened.x, r2.y, r2.w
            endif 
            iadd r1.x, r1.x, l(1)
          endloop 
        endif 
      endif 
    endif 
    bfi r0.w, l(11), l(0), l(1), r0.w
  else 
    mov r0.w, l(-2047)
    mov r3.y, l(0)
  endif 
  if_nz r1.y
    mov r4.xy, vThreadID.xyxx
    mov r4.zw, l(0,0,2,0)
    ld_indexable(texture2darray)(uint,uint,uint,uint) r1.x, r4.xyzw, t24.yxzw
    and r2.yz, r1.xxxx, l(0, 1, 2046, 0)
    umax r1.y, r1.x, r3.y
    umax r4.x, r1.y, r3.x
    umin r4.y, r3.x, r1.y
    movc r3.xy, r2.yyyy, r4.xyxx, r3.xyxx
    utof r1.y, r2.z
    mad r2.y, -r1.y, l(0.00048876), l(1.000000)
    mul r1.w, r1.w, r2.y
    lt r1.y, l(409.200012), r1.y
    if_nz r1.y
      umax r0.z, r0.z, r1.x
      ushr r1.y, r1.x, l(2)
      and r1.y, r1.y, l(0x3ffffe00)
      ge r2.z, r1.y, l(0.00049219)
      if_nz r2.z
        add r1.y, -r1.y, l(1.000000)
        mov r4.y, l(4)
        mov r2.zw, l(0,0,4,0)
        loop 
          ige r3.z, r2.w, l(4)
          breakc_nz r3.z
          ishl r3.z, r2.w, l(2)
          ld_structured r3.z, vThreadIDInGroupFlattened.x, r3.z, g0.xxxx
          ge r3.z, r3.z, r1.y
          if_nz r3.z
            mov r2.z, r2.w
            break 
          endif 
          iadd r4.x, r2.w, l(1)
          mov r2.zw, r4.yyyx
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, l(16), l(1000000015047466219876688855040.000000)
        store_structured g1.x, vThreadIDInGroupFlattened.x, l(16), l(1.000000)
        ishl r2.w, r2.z, l(2)
        iadd r3.z, r2.w, l(-4)
        ld_structured r3.z, vThreadIDInGroupFlattened.x, r3.z, g1.xxxx
        movc r3.z, r2.z, r3.z, l(1.000000)
        mov r3.w, l(3)
        loop 
          ilt r4.x, r3.w, l(0)
          breakc_nz r4.x
          ige r4.x, r3.w, r2.z
          if_nz r4.x
            ishl r4.x, r3.w, l(2)
            iadd r4.y, r4.x, l(4)
            ld_structured r4.z, vThreadIDInGroupFlattened.x, r4.x, g0.xxxx
            store_structured g0.x, vThreadIDInGroupFlattened.x, r4.y, r4.z
            ld_structured r4.x, vThreadIDInGroupFlattened.x, r4.x, g1.xxxx
            mul r4.x, r2.y, r4.x
            store_structured g1.x, vThreadIDInGroupFlattened.x, r4.y, r4.x
          endif 
          iadd r3.w, r3.w, l(-1)
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, r2.w, r1.y
        mul r1.y, r2.y, r3.z
        store_structured g1.x, vThreadIDInGroupFlattened.x, r2.w, r1.y
        ld_structured r1.y, vThreadIDInGroupFlattened.x, l(16), g0.xxxx
        ne r1.y, r1.y, l(1000000015047466219876688855040.000000)
        if_nz r1.y
          mov r1.y, l(2)
          loop 
            ige r2.y, r1.y, l(4)
            breakc_nz r2.y
            ishl r2.y, r1.y, l(2)
            ld_structured r2.z, vThreadIDInGroupFlattened.x, r2.y, g0.xxxx
            iadd r2.y, r2.y, l(-4)
            ld_structured r2.w, vThreadIDInGroupFlattened.x, r2.y, g0.xxxx
            add r2.z, -r2.w, r2.z
            ld_structured r2.yw, vThreadIDInGroupFlattened.x, r2.y, g1.xxxy
            add r2.y, -r2.w, r2.y
            mul r2.y, r2.y, r2.z
            mov x2[r1.y + 0].x, r2.y
            iadd r1.y, r1.y, l(1)
          endloop 
          mov r1.y, x2[2].x
          mov r2.y, x2[3].x
          lt r1.y, r2.y, r1.y
          movc r2.yz, r1.yyyy, l(0,3,2,0), l(0,2,1,0)
          mov r1.y, l(2)
          loop 
            ige r2.w, r1.y, l(4)
            breakc_nz r2.w
            ige r2.w, r1.y, r2.y
            if_nz r2.w
              ishl r2.w, r1.y, l(2)
              iadd r3.z, r2.w, l(4)
              ld_structured r3.z, vThreadIDInGroupFlattened.x, r3.z, g0.xxxx
              store_structured g0.x, vThreadIDInGroupFlattened.x, r2.w, r3.z
            endif 
            iadd r1.y, r1.y, l(1)
          endloop 
          mov r1.y, l(1)
          loop 
            ige r2.y, r1.y, l(4)
            breakc_nz r2.y
            ige r2.y, r1.y, r2.z
            if_nz r2.y
              ishl r2.y, r1.y, l(2)
              iadd r2.w, r2.y, l(4)
              ld_structured r2.w, vThreadIDInGroupFlattened.x, r2.w, g1.xxxx
              store_structured g1.x, vThreadIDInGroupFlattened.x, r2.y, r2.w
            endif 
            iadd r1.y, r1.y, l(1)
          endloop 
        endif 
      endif 
    endif 
    bfi r1.x, l(11), l(0), l(2), r1.x
  else 
    mov r1.x, l(-2046)
  endif 
  if_nz r1.z
    mov r4.xy, vThreadID.xyxx
    mov r4.zw, l(0,0,3,0)
    ld_indexable(texture2darray)(uint,uint,uint,uint) r1.y, r4.xyzw, t24.xyzw
    and r2.yz, r1.yyyy, l(0, 1, 2046, 0)
    umax r1.z, r1.y, r3.y
    umax r4.x, r1.z, r3.x
    umin r4.y, r3.x, r1.z
    movc r3.xy, r2.yyyy, r4.xyxx, r3.xyxx
    utof r1.z, r2.z
    mad r2.y, -r1.z, l(0.00048876), l(1.000000)
    mul r1.w, r1.w, r2.y
    lt r1.z, l(409.200012), r1.z
    if_nz r1.z
      umax r0.z, r0.z, r1.y
      ushr r1.z, r1.y, l(2)
      and r1.z, r1.z, l(0x3ffffe00)
      ge r2.z, r1.z, l(0.00049219)
      if_nz r2.z
        add r1.z, -r1.z, l(1.000000)
        mov r4.y, l(4)
        mov r2.zw, l(0,0,4,0)
        loop 
          ige r3.z, r2.w, l(4)
          breakc_nz r3.z
          ishl r3.z, r2.w, l(2)
          ld_structured r3.z, vThreadIDInGroupFlattened.x, r3.z, g0.xxxx
          ge r3.z, r3.z, r1.z
          if_nz r3.z
            mov r2.z, r2.w
            break 
          endif 
          iadd r4.x, r2.w, l(1)
          mov r2.zw, r4.yyyx
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, l(16), l(1000000015047466219876688855040.000000)
        store_structured g1.x, vThreadIDInGroupFlattened.x, l(16), l(1.000000)
        ishl r2.w, r2.z, l(2)
        iadd r3.z, r2.w, l(-4)
        ld_structured r3.z, vThreadIDInGroupFlattened.x, r3.z, g1.xxxx
        movc r3.z, r2.z, r3.z, l(1.000000)
        mov r3.w, l(3)
        loop 
          ilt r4.x, r3.w, l(0)
          breakc_nz r4.x
          ige r4.x, r3.w, r2.z
          if_nz r4.x
            ishl r4.x, r3.w, l(2)
            iadd r4.y, r4.x, l(4)
            ld_structured r4.z, vThreadIDInGroupFlattened.x, r4.x, g0.xxxx
            store_structured g0.x, vThreadIDInGroupFlattened.x, r4.y, r4.z
            ld_structured r4.x, vThreadIDInGroupFlattened.x, r4.x, g1.xxxx
            mul r4.x, r2.y, r4.x
            store_structured g1.x, vThreadIDInGroupFlattened.x, r4.y, r4.x
          endif 
          iadd r3.w, r3.w, l(-1)
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, r2.w, r1.z
        mul r1.z, r2.y, r3.z
        store_structured g1.x, vThreadIDInGroupFlattened.x, r2.w, r1.z
        ld_structured r1.z, vThreadIDInGroupFlattened.x, l(16), g0.xxxx
        ne r1.z, r1.z, l(1000000015047466219876688855040.000000)
        if_nz r1.z
          mov r1.z, l(2)
          loop 
            ige r2.y, r1.z, l(4)
            breakc_nz r2.y
            ishl r2.y, r1.z, l(2)
            ld_structured r2.z, vThreadIDInGroupFlattened.x, r2.y, g0.xxxx
            iadd r2.y, r2.y, l(-4)
            ld_structured r2.w, vThreadIDInGroupFlattened.x, r2.y, g0.xxxx
            add r2.z, -r2.w, r2.z
            ld_structured r2.yw, vThreadIDInGroupFlattened.x, r2.y, g1.xxxy
            add r2.y, -r2.w, r2.y
            mul r2.y, r2.y, r2.z
            mov x3[r1.z + 0].x, r2.y
            iadd r1.z, r1.z, l(1)
          endloop 
          mov r1.z, x3[2].x
          mov r2.y, x3[3].x
          lt r1.z, r2.y, r1.z
          movc r2.yz, r1.zzzz, l(0,3,2,0), l(0,2,1,0)
          mov r1.z, l(2)
          loop 
            ige r2.w, r1.z, l(4)
            breakc_nz r2.w
            ige r2.w, r1.z, r2.y
            if_nz r2.w
              ishl r2.w, r1.z, l(2)
              iadd r3.z, r2.w, l(4)
              ld_structured r3.z, vThreadIDInGroupFlattened.x, r3.z, g0.xxxx
              store_structured g0.x, vThreadIDInGroupFlattened.x, r2.w, r3.z
            endif 
            iadd r1.z, r1.z, l(1)
          endloop 
          mov r1.z, l(1)
          loop 
            ige r2.y, r1.z, l(4)
            breakc_nz r2.y
            ige r2.y, r1.z, r2.z
            if_nz r2.y
              ishl r2.y, r1.z, l(2)
              iadd r2.w, r2.y, l(4)
              ld_structured r2.w, vThreadIDInGroupFlattened.x, r2.w, g1.xxxx
              store_structured g1.x, vThreadIDInGroupFlattened.x, r2.y, r2.w
            endif 
            iadd r1.z, r1.z, l(1)
          endloop 
        endif 
      endif 
    endif 
    bfi r1.y, l(11), l(0), l(3), r1.y
  else 
    mov r1.y, l(-2045)
  endif 
  ult r4.xyzw, l(4, 5, 6, 7), r0.yyyy
  if_nz r4.x
    mov r5.xy, vThreadID.xyxx
    mov r5.zw, l(0,0,4,0)
    ld_indexable(texture2darray)(uint,uint,uint,uint) r1.z, r5.xyzw, t24.xzyw
    and r2.yz, r1.zzzz, l(0, 1, 2046, 0)
    umax r2.w, r1.z, r3.y
    umax r5.x, r2.w, r3.x
    umin r5.y, r3.x, r2.w
    movc r3.xy, r2.yyyy, r5.xyxx, r3.xyxx
    utof r2.y, r2.z
    mad r2.z, -r2.y, l(0.00048876), l(1.000000)
    mul r1.w, r1.w, r2.z
    lt r2.y, l(409.200012), r2.y
    if_nz r2.y
      umax r0.z, r0.z, r1.z
      ushr r2.y, r1.z, l(2)
      and r2.y, r2.y, l(0x3ffffe00)
      ge r2.w, r2.y, l(0.00049219)
      if_nz r2.w
        add r2.y, -r2.y, l(1.000000)
        mov r5.y, l(4)
        mov r3.zw, l(0,0,4,0)
        loop 
          ige r2.w, r3.w, l(4)
          breakc_nz r2.w
          ishl r2.w, r3.w, l(2)
          ld_structured r2.w, vThreadIDInGroupFlattened.x, r2.w, g0.xxxx
          ge r2.w, r2.w, r2.y
          if_nz r2.w
            mov r3.z, r3.w
            break 
          endif 
          iadd r5.x, r3.w, l(1)
          mov r3.zw, r5.yyyx
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, l(16), l(1000000015047466219876688855040.000000)
        store_structured g1.x, vThreadIDInGroupFlattened.x, l(16), l(1.000000)
        ishl r2.w, r3.z, l(2)
        iadd r3.w, r2.w, l(-4)
        ld_structured r3.w, vThreadIDInGroupFlattened.x, r3.w, g1.xxxx
        movc r3.w, r3.z, r3.w, l(1.000000)
        mov r4.x, l(3)
        loop 
          ilt r5.x, r4.x, l(0)
          breakc_nz r5.x
          ige r5.x, r4.x, r3.z
          if_nz r5.x
            ishl r5.x, r4.x, l(2)
            iadd r5.y, r5.x, l(4)
            ld_structured r5.z, vThreadIDInGroupFlattened.x, r5.x, g0.xxxx
            store_structured g0.x, vThreadIDInGroupFlattened.x, r5.y, r5.z
            ld_structured r5.x, vThreadIDInGroupFlattened.x, r5.x, g1.xxxx
            mul r5.x, r2.z, r5.x
            store_structured g1.x, vThreadIDInGroupFlattened.x, r5.y, r5.x
          endif 
          iadd r4.x, r4.x, l(-1)
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, r2.w, r2.y
        mul r2.y, r2.z, r3.w
        store_structured g1.x, vThreadIDInGroupFlattened.x, r2.w, r2.y
        ld_structured r2.y, vThreadIDInGroupFlattened.x, l(16), g0.xxxx
        ne r2.y, r2.y, l(1000000015047466219876688855040.000000)
        if_nz r2.y
          mov r2.y, l(2)
          loop 
            ige r2.z, r2.y, l(4)
            breakc_nz r2.z
            ishl r2.z, r2.y, l(2)
            ld_structured r2.w, vThreadIDInGroupFlattened.x, r2.z, g0.xxxx
            iadd r2.z, r2.z, l(-4)
            ld_structured r3.z, vThreadIDInGroupFlattened.x, r2.z, g0.xxxx
            add r2.w, r2.w, -r3.z
            ld_structured r3.zw, vThreadIDInGroupFlattened.x, r2.z, g1.xxxy
            add r2.z, -r3.w, r3.z
            mul r2.z, r2.z, r2.w
            mov x4[r2.y + 0].x, r2.z
            iadd r2.y, r2.y, l(1)
          endloop 
          mov r2.y, x4[2].x
          mov r2.z, x4[3].x
          lt r2.y, r2.z, r2.y
          movc r2.yz, r2.yyyy, l(0,3,2,0), l(0,2,1,0)
          mov r2.w, l(2)
          loop 
            ige r3.z, r2.w, l(4)
            breakc_nz r3.z
            ige r3.z, r2.w, r2.y
            if_nz r3.z
              ishl r3.z, r2.w, l(2)
              iadd r3.w, r3.z, l(4)
              ld_structured r3.w, vThreadIDInGroupFlattened.x, r3.w, g0.xxxx
              store_structured g0.x, vThreadIDInGroupFlattened.x, r3.z, r3.w
            endif 
            iadd r2.w, r2.w, l(1)
          endloop 
          mov r2.y, l(1)
          loop 
            ige r2.w, r2.y, l(4)
            breakc_nz r2.w
            ige r2.w, r2.y, r2.z
            if_nz r2.w
              ishl r2.w, r2.y, l(2)
              iadd r3.z, r2.w, l(4)
              ld_structured r3.z, vThreadIDInGroupFlattened.x, r3.z, g1.xxxx
              store_structured g1.x, vThreadIDInGroupFlattened.x, r2.w, r3.z
            endif 
            iadd r2.y, r2.y, l(1)
          endloop 
        endif 
      endif 
    endif 
    bfi r1.z, l(11), l(0), l(4), r1.z
  else 
    mov r1.z, l(-2044)
  endif 
  if_nz r4.y
    mov r5.xy, vThreadID.xyxx
    mov r5.zw, l(0,0,5,0)
    ld_indexable(texture2darray)(uint,uint,uint,uint) r2.y, r5.xyzw, t24.xyzw
    and r2.zw, r2.yyyy, l(0, 0, 1, 2046)
    umax r3.z, r2.y, r3.y
    umax r4.x, r3.z, r3.x
    umin r4.y, r3.x, r3.z
    movc r3.xy, r2.zzzz, r4.xyxx, r3.xyxx
    utof r2.z, r2.w
    mad r2.w, -r2.z, l(0.00048876), l(1.000000)
    mul r1.w, r1.w, r2.w
    lt r2.z, l(409.200012), r2.z
    if_nz r2.z
      umax r0.z, r0.z, r2.y
      ushr r2.z, r2.y, l(2)
      and r2.z, r2.z, l(0x3ffffe00)
      ge r3.z, r2.z, l(0.00049219)
      if_nz r3.z
        add r2.z, -r2.z, l(1.000000)
        mov r4.y, l(4)
        mov r3.zw, l(0,0,4,0)
        loop 
          ige r5.x, r3.w, l(4)
          breakc_nz r5.x
          ishl r5.x, r3.w, l(2)
          ld_structured r5.x, vThreadIDInGroupFlattened.x, r5.x, g0.xxxx
          ge r5.x, r5.x, r2.z
          if_nz r5.x
            mov r3.z, r3.w
            break 
          endif 
          iadd r4.x, r3.w, l(1)
          mov r3.zw, r4.yyyx
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, l(16), l(1000000015047466219876688855040.000000)
        store_structured g1.x, vThreadIDInGroupFlattened.x, l(16), l(1.000000)
        ishl r3.w, r3.z, l(2)
        iadd r4.x, r3.w, l(-4)
        ld_structured r4.x, vThreadIDInGroupFlattened.x, r4.x, g1.xxxx
        movc r4.x, r3.z, r4.x, l(1.000000)
        mov r4.y, l(3)
        loop 
          ilt r5.x, r4.y, l(0)
          breakc_nz r5.x
          ige r5.x, r4.y, r3.z
          if_nz r5.x
            ishl r5.x, r4.y, l(2)
            iadd r5.y, r5.x, l(4)
            ld_structured r5.z, vThreadIDInGroupFlattened.x, r5.x, g0.xxxx
            store_structured g0.x, vThreadIDInGroupFlattened.x, r5.y, r5.z
            ld_structured r5.x, vThreadIDInGroupFlattened.x, r5.x, g1.xxxx
            mul r5.x, r2.w, r5.x
            store_structured g1.x, vThreadIDInGroupFlattened.x, r5.y, r5.x
          endif 
          iadd r4.y, r4.y, l(-1)
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, r3.w, r2.z
        mul r2.z, r2.w, r4.x
        store_structured g1.x, vThreadIDInGroupFlattened.x, r3.w, r2.z
        ld_structured r2.z, vThreadIDInGroupFlattened.x, l(16), g0.xxxx
        ne r2.z, r2.z, l(1000000015047466219876688855040.000000)
        if_nz r2.z
          mov r2.z, l(2)
          loop 
            ige r2.w, r2.z, l(4)
            breakc_nz r2.w
            ishl r2.w, r2.z, l(2)
            ld_structured r3.z, vThreadIDInGroupFlattened.x, r2.w, g0.xxxx
            iadd r2.w, r2.w, l(-4)
            ld_structured r3.w, vThreadIDInGroupFlattened.x, r2.w, g0.xxxx
            add r3.z, -r3.w, r3.z
            ld_structured r4.xy, vThreadIDInGroupFlattened.x, r2.w, g1.xyxx
            add r2.w, -r4.y, r4.x
            mul r2.w, r2.w, r3.z
            mov x5[r2.z + 0].x, r2.w
            iadd r2.z, r2.z, l(1)
          endloop 
          mov r2.z, x5[2].x
          mov r2.w, x5[3].x
          lt r2.z, r2.w, r2.z
          movc r2.zw, r2.zzzz, l(0,0,3,2), l(0,0,2,1)
          mov r3.z, l(2)
          loop 
            ige r3.w, r3.z, l(4)
            breakc_nz r3.w
            ige r3.w, r3.z, r2.z
            if_nz r3.w
              ishl r3.w, r3.z, l(2)
              iadd r4.x, r3.w, l(4)
              ld_structured r4.x, vThreadIDInGroupFlattened.x, r4.x, g0.xxxx
              store_structured g0.x, vThreadIDInGroupFlattened.x, r3.w, r4.x
            endif 
            iadd r3.z, r3.z, l(1)
          endloop 
          mov r2.z, l(1)
          loop 
            ige r3.z, r2.z, l(4)
            breakc_nz r3.z
            ige r3.z, r2.z, r2.w
            if_nz r3.z
              ishl r3.z, r2.z, l(2)
              iadd r3.w, r3.z, l(4)
              ld_structured r3.w, vThreadIDInGroupFlattened.x, r3.w, g1.xxxx
              store_structured g1.x, vThreadIDInGroupFlattened.x, r3.z, r3.w
            endif 
            iadd r2.z, r2.z, l(1)
          endloop 
        endif 
      endif 
    endif 
    bfi r2.y, l(11), l(0), l(5), r2.y
  else 
    mov r2.y, l(-2043)
  endif 
  if_nz r4.z
    mov r5.xy, vThreadID.xyxx
    mov r5.zw, l(0,0,6,0)
    ld_indexable(texture2darray)(uint,uint,uint,uint) r2.z, r5.xyzw, t24.xzyw
    and r3.zw, r2.zzzz, l(0, 0, 1, 2046)
    umax r2.w, r2.z, r3.y
    umax r4.x, r2.w, r3.x
    umin r4.y, r3.x, r2.w
    movc r3.xy, r3.zzzz, r4.xyxx, r3.xyxx
    utof r2.w, r3.w
    mad r3.z, -r2.w, l(0.00048876), l(1.000000)
    mul r1.w, r1.w, r3.z
    lt r2.w, l(409.200012), r2.w
    if_nz r2.w
      umax r0.z, r0.z, r2.z
      ushr r2.w, r2.z, l(2)
      and r2.w, r2.w, l(0x3ffffe00)
      ge r3.w, r2.w, l(0.00049219)
      if_nz r3.w
        add r2.w, -r2.w, l(1.000000)
        mov r4.y, l(4)
        mov r5.xy, l(4,0,0,0)
        loop 
          ige r3.w, r5.y, l(4)
          breakc_nz r3.w
          ishl r3.w, r5.y, l(2)
          ld_structured r3.w, vThreadIDInGroupFlattened.x, r3.w, g0.xxxx
          ge r3.w, r3.w, r2.w
          if_nz r3.w
            mov r5.x, r5.y
            break 
          endif 
          iadd r4.x, r5.y, l(1)
          mov r5.xy, r4.yxyy
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, l(16), l(1000000015047466219876688855040.000000)
        store_structured g1.x, vThreadIDInGroupFlattened.x, l(16), l(1.000000)
        ishl r3.w, r5.x, l(2)
        iadd r4.x, r3.w, l(-4)
        ld_structured r4.x, vThreadIDInGroupFlattened.x, r4.x, g1.xxxx
        movc r4.x, r5.x, r4.x, l(1.000000)
        mov r4.y, l(3)
        loop 
          ilt r4.z, r4.y, l(0)
          breakc_nz r4.z
          ige r4.z, r4.y, r5.x
          if_nz r4.z
            ishl r4.z, r4.y, l(2)
            iadd r5.y, r4.z, l(4)
            ld_structured r5.z, vThreadIDInGroupFlattened.x, r4.z, g0.xxxx
            store_structured g0.x, vThreadIDInGroupFlattened.x, r5.y, r5.z
            ld_structured r4.z, vThreadIDInGroupFlattened.x, r4.z, g1.xxxx
            mul r4.z, r3.z, r4.z
            store_structured g1.x, vThreadIDInGroupFlattened.x, r5.y, r4.z
          endif 
          iadd r4.y, r4.y, l(-1)
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, r3.w, r2.w
        mul r2.w, r3.z, r4.x
        store_structured g1.x, vThreadIDInGroupFlattened.x, r3.w, r2.w
        ld_structured r2.w, vThreadIDInGroupFlattened.x, l(16), g0.xxxx
        ne r2.w, r2.w, l(1000000015047466219876688855040.000000)
        if_nz r2.w
          mov r2.w, l(2)
          loop 
            ige r3.z, r2.w, l(4)
            breakc_nz r3.z
            ishl r3.z, r2.w, l(2)
            ld_structured r3.w, vThreadIDInGroupFlattened.x, r3.z, g0.xxxx
            iadd r3.z, r3.z, l(-4)
            ld_structured r4.x, vThreadIDInGroupFlattened.x, r3.z, g0.xxxx
            add r3.w, r3.w, -r4.x
            ld_structured r4.xy, vThreadIDInGroupFlattened.x, r3.z, g1.xyxx
            add r3.z, -r4.y, r4.x
            mul r3.z, r3.z, r3.w
            mov x6[r2.w + 0].x, r3.z
            iadd r2.w, r2.w, l(1)
          endloop 
          mov r2.w, x6[2].x
          mov r3.z, x6[3].x
          lt r2.w, r3.z, r2.w
          movc r3.zw, r2.wwww, l(0,0,3,2), l(0,0,2,1)
          mov r2.w, l(2)
          loop 
            ige r4.x, r2.w, l(4)
            breakc_nz r4.x
            ige r4.x, r2.w, r3.z
            if_nz r4.x
              ishl r4.x, r2.w, l(2)
              iadd r4.y, r4.x, l(4)
              ld_structured r4.y, vThreadIDInGroupFlattened.x, r4.y, g0.xxxx
              store_structured g0.x, vThreadIDInGroupFlattened.x, r4.x, r4.y
            endif 
            iadd r2.w, r2.w, l(1)
          endloop 
          mov r2.w, l(1)
          loop 
            ige r3.z, r2.w, l(4)
            breakc_nz r3.z
            ige r3.z, r2.w, r3.w
            if_nz r3.z
              ishl r3.z, r2.w, l(2)
              iadd r4.x, r3.z, l(4)
              ld_structured r4.x, vThreadIDInGroupFlattened.x, r4.x, g1.xxxx
              store_structured g1.x, vThreadIDInGroupFlattened.x, r3.z, r4.x
            endif 
            iadd r2.w, r2.w, l(1)
          endloop 
        endif 
      endif 
    endif 
    bfi r2.z, l(11), l(0), l(6), r2.z
  else 
    mov r2.z, l(-2042)
  endif 
  if_nz r4.w
    mov r4.xy, vThreadID.xyxx
    mov r4.zw, l(0,0,7,0)
    ld_indexable(texture2darray)(uint,uint,uint,uint) r2.w, r4.xyzw, t24.xzwy
    and r3.zw, r2.wwww, l(0, 0, 1, 2046)
    umax r4.x, r2.w, r3.y
    umax r5.x, r3.x, r4.x
    umin r5.y, r3.x, r4.x
    movc r3.xy, r3.zzzz, r5.xyxx, r3.xyxx
    utof r3.z, r3.w
    mad r3.w, -r3.z, l(0.00048876), l(1.000000)
    mul r1.w, r1.w, r3.w
    lt r3.z, l(409.200012), r3.z
    if_nz r3.z
      umax r0.z, r0.z, r2.w
      ushr r3.z, r2.w, l(2)
      and r3.z, r3.z, l(0x3ffffe00)
      ge r4.x, r3.z, l(0.00049219)
      if_nz r4.x
        add r3.z, -r3.z, l(1.000000)
        mov r4.y, l(4)
        mov r4.zw, l(0,0,4,0)
        loop 
          ige r5.x, r4.w, l(4)
          breakc_nz r5.x
          ishl r5.x, r4.w, l(2)
          ld_structured r5.x, vThreadIDInGroupFlattened.x, r5.x, g0.xxxx
          ge r5.x, r5.x, r3.z
          if_nz r5.x
            mov r4.z, r4.w
            break 
          endif 
          iadd r4.x, r4.w, l(1)
          mov r4.zw, r4.yyyx
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, l(16), l(1000000015047466219876688855040.000000)
        store_structured g1.x, vThreadIDInGroupFlattened.x, l(16), l(1.000000)
        ishl r4.x, r4.z, l(2)
        iadd r4.y, r4.x, l(-4)
        ld_structured r4.y, vThreadIDInGroupFlattened.x, r4.y, g1.xxxx
        movc r4.y, r4.z, r4.y, l(1.000000)
        mov r4.w, l(3)
        loop 
          ilt r5.x, r4.w, l(0)
          breakc_nz r5.x
          ige r5.x, r4.w, r4.z
          if_nz r5.x
            ishl r5.x, r4.w, l(2)
            iadd r5.y, r5.x, l(4)
            ld_structured r5.z, vThreadIDInGroupFlattened.x, r5.x, g0.xxxx
            store_structured g0.x, vThreadIDInGroupFlattened.x, r5.y, r5.z
            ld_structured r5.x, vThreadIDInGroupFlattened.x, r5.x, g1.xxxx
            mul r5.x, r3.w, r5.x
            store_structured g1.x, vThreadIDInGroupFlattened.x, r5.y, r5.x
          endif 
          iadd r4.w, r4.w, l(-1)
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, r4.x, r3.z
        mul r3.z, r3.w, r4.y
        store_structured g1.x, vThreadIDInGroupFlattened.x, r4.x, r3.z
        ld_structured r3.z, vThreadIDInGroupFlattened.x, l(16), g0.xxxx
        ne r3.z, r3.z, l(1000000015047466219876688855040.000000)
        if_nz r3.z
          mov r3.z, l(2)
          loop 
            ige r3.w, r3.z, l(4)
            breakc_nz r3.w
            ishl r3.w, r3.z, l(2)
            ld_structured r4.x, vThreadIDInGroupFlattened.x, r3.w, g0.xxxx
            iadd r3.w, r3.w, l(-4)
            ld_structured r4.y, vThreadIDInGroupFlattened.x, r3.w, g0.xxxx
            add r4.x, -r4.y, r4.x
            ld_structured r4.yz, vThreadIDInGroupFlattened.x, r3.w, g1.xxyx
            add r3.w, -r4.z, r4.y
            mul r3.w, r3.w, r4.x
            mov x7[r3.z + 0].x, r3.w
            iadd r3.z, r3.z, l(1)
          endloop 
          mov r3.z, x7[2].x
          mov r3.w, x7[3].x
          lt r3.z, r3.w, r3.z
          movc r3.zw, r3.zzzz, l(0,0,3,2), l(0,0,2,1)
          mov r4.x, l(2)
          loop 
            ige r4.y, r4.x, l(4)
            breakc_nz r4.y
            ige r4.y, r4.x, r3.z
            if_nz r4.y
              ishl r4.y, r4.x, l(2)
              iadd r4.z, r4.y, l(4)
              ld_structured r4.z, vThreadIDInGroupFlattened.x, r4.z, g0.xxxx
              store_structured g0.x, vThreadIDInGroupFlattened.x, r4.y, r4.z
            endif 
            iadd r4.x, r4.x, l(1)
          endloop 
          mov r3.z, l(1)
          loop 
            ige r4.x, r3.z, l(4)
            breakc_nz r4.x
            ige r4.x, r3.z, r3.w
            if_nz r4.x
              ishl r4.x, r3.z, l(2)
              iadd r4.y, r4.x, l(4)
              ld_structured r4.y, vThreadIDInGroupFlattened.x, r4.y, g1.xxxx
              store_structured g1.x, vThreadIDInGroupFlattened.x, r4.x, r4.y
            endif 
            iadd r3.z, r3.z, l(1)
          endloop 
        endif 
      endif 
    endif 
    bfi r2.w, l(11), l(0), l(7), r2.w
  else 
    mov r2.w, l(-2041)
  endif 
  ushr r0.z, r0.z, l(2)
  and r0.z, r0.z, l(0x3ffffe00)
  add r3.z, -r1.w, l(0.800000)
  max r3.z, r3.z, l(0.000000)
  mad r3.z, -r3.z, l(1.250000), l(1.000000)
  umin r3.w, r0.w, r2.x
  umax r0.w, r0.w, r2.x
  umin r2.x, r1.y, r1.x
  umax r1.x, r1.y, r1.x
  umin r1.y, r1.z, r2.y
  umax r1.z, r1.z, r2.y
  umin r2.y, r2.w, r2.z
  umax r2.z, r2.w, r2.z
  umin r2.w, r1.x, r3.w
  umax r1.x, r1.x, r3.w
  umin r3.w, r1.y, r2.z
  umax r1.y, r1.y, r2.z
  umin r2.z, r0.w, r2.x
  umax r0.w, r0.w, r2.x
  umin r2.x, r1.z, r2.y
  umax r1.z, r1.z, r2.y
  umin r2.y, r2.z, r2.w
  umax r2.z, r2.z, r2.w
  umin r2.w, r1.x, r0.w
  umax r0.w, r1.x, r0.w
  umin r1.x, r2.x, r3.w
  umax r2.x, r2.x, r3.w
  umin r3.w, r1.y, r1.z
  umax r1.y, r1.y, r1.z
  umin r1.z, r1.y, r2.y
  umax r1.y, r1.y, r2.y
  umin r2.y, r2.z, r3.w
  umax r2.z, r2.z, r3.w
  umin r3.w, r2.x, r2.w
  umax r2.x, r2.x, r2.w
  umin r2.w, r0.w, r1.x
  umax r0.w, r0.w, r1.x
  umin r1.x, r1.z, r3.w
  umax r1.z, r1.z, r3.w
  umin r3.w, r2.w, r2.y
  umax r2.y, r2.w, r2.y
  umin r2.w, r2.z, r0.w
  umax r0.w, r2.z, r0.w
  umin r2.z, r1.y, r2.x
  umax r1.y, r1.y, r2.x
  umin r2.x, r1.x, r3.w
  umax r1.x, r1.x, r3.w
  umin r3.w, r1.z, r2.y
  umax r1.z, r1.z, r2.y
  umin r2.y, r2.z, r2.w
  umax r2.z, r2.z, r2.w
  umin r2.w, r0.w, r1.y
  umax r0.w, r0.w, r1.y
  bfi r1.y, l(11), l(4), r1.x, l(0)
  bfi r1.y, l(4), l(0), r2.x, r1.y
  bfi r4.x, l(11), l(8), r3.w, l(0)
  iadd r1.y, r1.y, r4.x
  bfi r4.x, l(11), l(12), r1.z, l(0)
  iadd r1.y, r1.y, r4.x
  bfi r4.x, l(11), l(16), r2.y, l(0)
  iadd r1.y, r1.y, r4.x
  bfi r4.x, l(11), l(20), r2.z, l(0)
  iadd r1.y, r1.y, r4.x
  bfi r1.y, l(8), l(24), r2.w, r1.y
  bfi r4.w, l(4), l(28), r0.w, r1.y
  ult r1.y, cb2[58].z, r0.x
  if_nz r1.y
    store_uav_typed u5.xyzw, vThreadID.xyyy, l(1.000000,0.500000,0.500000,1.000000)
  endif 
  if_z r1.y
    iadd r1.y, r0.y, l(-1)
    if_nz r1.y
      and r2.x, r2.x, l(-2048)
      and r5.x, r1.x, l(-2048)
      ieq r2.x, r2.x, r5.x
      if_nz r2.x
        store_uav_typed u5.xyzw, vThreadID.xyyy, l(0.500000,0.500000,1.000000,1.000000)
      endif 
      not r5.x, r2.x
      if_z r2.x
        mov r6.xy, vThreadID.xyxx
        mov r6.zw, l(0,0,0,0)
        ld_indexable(texture2darray)(uint,uint,uint,uint) r5.y, r6.xyzw, t24.yxzw
        ushr r6.xyz, r5.yyyy, l(1, 8, 16, 0)
        and r5.z, r6.x, l(0x7f800000)
        bfi r5.y, l(8), l(15), r5.y, l(0)
        bfi r5.y, l(23), l(0), r5.y, r6.x
        add r7.x, -r5.z, r5.y
        bfi r5.yw, l(0, 8, 0, 8), l(0, 15, 0, 15), r6.yyyz, l(0, 0, 0, 0)
        bfi r5.yw, l(0, 23, 0, 23), l(0, 0, 0, 0), r5.yyyw, r6.xxxx
        add r7.yz, -r5.zzzz, r5.yywy
        and r5.yzw, r7.xxyz, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
        ine r6.xyz, r5.yzwy, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
        mov r6.w, l(-1)
        and r5.yz, r6.zzwz, r6.xxyx
        and r5.y, r5.z, r5.y
        not r6.y, r5.y
        if_z r5.y
          store_uav_typed u5.xyzw, vThreadID.xyyy, l(0.500000,1.000000,0.500000,1.000000)
        endif 
        mov r6.x, r6.y
      else 
        mov r6.xy, l(-1,-1,0,0)
      endif 
      and r5.xy, r5.xxxx, r6.yxyy
      or r5.xy, r2.xxxx, r5.yxyy
    else 
      mov r5.xy, l(0,0,0,0)
    endif 
    not r5.yz, r5.yyxy
    and r2.x, r5.y, r5.z
    if_nz r2.x
      ult r5.y, l(1), r1.y
      if_nz r5.y
        and r1.x, r1.x, l(-2048)
        and r5.y, r3.w, l(-2048)
        ieq r1.x, r1.x, r5.y
        if_nz r1.x
          store_uav_typed u5.xyzw, vThreadID.xyyy, l(0.500000,0.500000,1.000000,1.000000)
        endif 
        not r5.y, r1.x
        if_z r1.x
          mov r6.xy, vThreadID.xyxx
          mov r6.zw, l(0,0,1,0)
          ld_indexable(texture2darray)(uint,uint,uint,uint) r5.z, r6.xyzw, t24.yzxw
          ushr r6.xyz, r5.zzzz, l(1, 8, 16, 0)
          and r5.w, r6.x, l(0x7f800000)
          bfi r5.z, l(8), l(15), r5.z, l(0)
          bfi r5.z, l(23), l(0), r5.z, r6.x
          add r7.x, -r5.w, r5.z
          bfi r6.yz, l(0, 8, 8, 0), l(0, 15, 15, 0), r6.yyzy, l(0, 0, 0, 0)
          bfi r6.xy, l(23, 23, 0, 0), l(0, 0, 0, 0), r6.yzyy, r6.xxxx
          add r7.yz, -r5.wwww, r6.xxyx
          and r6.xyz, r7.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
          ine r6.xyz, r6.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
          mov r6.w, l(-1)
          and r5.zw, r6.zzzw, r6.xxxy
          and r5.z, r5.w, r5.z
          not r6.y, r5.z
          if_z r5.z
            store_uav_typed u5.xyzw, vThreadID.xyyy, l(0.500000,1.000000,0.500000,1.000000)
          endif 
          mov r6.x, r6.y
        else 
          mov r6.xy, l(-1,-1,0,0)
        endif 
        and r5.yz, r5.yyyy, r6.yyxy
        or r5.yz, r1.xxxx, r5.zzyz
      else 
        mov r5.yz, l(0,0,0,0)
      endif 
      not r5.zw, r5.zzzy
      and r1.x, r5.z, r5.w
      if_nz r1.x
        ult r5.z, l(2), r1.y
        if_nz r5.z
          and r3.w, r3.w, l(-2048)
          and r5.z, r1.z, l(-2048)
          ieq r3.w, r3.w, r5.z
          if_nz r3.w
            store_uav_typed u5.xyzw, vThreadID.xyyy, l(0.500000,0.500000,1.000000,1.000000)
          endif 
          not r5.z, r3.w
          if_z r3.w
            mov r6.xy, vThreadID.xyxx
            mov r6.zw, l(0,0,2,0)
            ld_indexable(texture2darray)(uint,uint,uint,uint) r5.w, r6.xyzw, t24.yzwx
            ushr r6.xyz, r5.wwww, l(1, 8, 16, 0)
            and r6.w, r6.x, l(0x7f800000)
            bfi r5.w, l(8), l(15), r5.w, l(0)
            bfi r5.w, l(23), l(0), r5.w, r6.x
            add r7.x, -r6.w, r5.w
            bfi r6.yz, l(0, 8, 8, 0), l(0, 15, 15, 0), r6.yyzy, l(0, 0, 0, 0)
            bfi r6.xy, l(23, 23, 0, 0), l(0, 0, 0, 0), r6.yzyy, r6.xxxx
            add r7.yz, -r6.wwww, r6.xxyx
            and r6.xyz, r7.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
            ine r6.xyz, r6.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
            mov r6.w, l(-1)
            and r6.xy, r6.zwzz, r6.xyxx
            and r5.w, r6.y, r6.x
            not r6.y, r5.w
            if_z r5.w
              store_uav_typed u5.xyzw, vThreadID.xyyy, l(0.500000,1.000000,0.500000,1.000000)
            endif 
            mov r6.x, r6.y
          else 
            mov r6.xy, l(-1,-1,0,0)
          endif 
          and r5.zw, r5.zzzz, r6.yyyx
          or r5.zw, r3.wwww, r5.wwwz
        else 
          mov r5.zw, l(0,0,0,0)
        endif 
        not r6.xy, r5.wzww
        and r3.w, r6.x, r6.y
        if_nz r3.w
          ult r5.w, l(3), r1.y
          if_nz r5.w
            and r1.z, r1.z, l(-2048)
            and r5.w, r2.y, l(-2048)
            ieq r1.z, r1.z, r5.w
            if_nz r1.z
              store_uav_typed u5.xyzw, vThreadID.xyyy, l(0.500000,0.500000,1.000000,1.000000)
            endif 
            not r5.w, r1.z
            if_z r1.z
              mov r6.xy, vThreadID.xyxx
              mov r6.zw, l(0,0,3,0)
              ld_indexable(texture2darray)(uint,uint,uint,uint) r6.x, r6.xyzw, t24.xyzw
              ushr r6.yzw, r6.xxxx, l(0, 1, 8, 16)
              and r7.x, r6.y, l(0x7f800000)
              bfi r6.x, l(8), l(15), r6.x, l(0)
              bfi r6.x, l(23), l(0), r6.x, r6.y
              add r8.x, -r7.x, r6.x
              bfi r6.xz, l(8, 0, 8, 0), l(15, 0, 15, 0), r6.zzwz, l(0, 0, 0, 0)
              bfi r6.xy, l(23, 23, 0, 0), l(0, 0, 0, 0), r6.xzxx, r6.yyyy
              add r8.yz, -r7.xxxx, r6.xxyx
              and r6.xyz, r8.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
              ine r6.xyz, r6.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
              mov r6.w, l(-1)
              and r6.xy, r6.zwzz, r6.xyxx
              and r6.x, r6.y, r6.x
              not r7.y, r6.x
              if_z r6.x
                store_uav_typed u5.xyzw, vThreadID.xyyy, l(0.500000,1.000000,0.500000,1.000000)
              endif 
              mov r7.x, r7.y
            else 
              mov r7.xy, l(-1,-1,0,0)
            endif 
            and r6.xy, r5.wwww, r7.yxyy
            or r6.xy, r1.zzzz, r6.yxyy
          else 
            mov r6.xy, l(0,0,0,0)
          endif 
          not r6.yz, r6.yyxy
          and r1.z, r6.y, r6.z
          if_nz r1.z
            ult r5.w, l(4), r1.y
            if_nz r5.w
              and r2.y, r2.y, l(-2048)
              and r5.w, r2.z, l(-2048)
              ieq r2.y, r2.y, r5.w
              if_nz r2.y
                store_uav_typed u5.xyzw, vThreadID.xyyy, l(0.500000,0.500000,1.000000,1.000000)
              endif 
              not r5.w, r2.y
              if_z r2.y
                mov r7.xy, vThreadID.xyxx
                mov r7.zw, l(0,0,4,0)
                ld_indexable(texture2darray)(uint,uint,uint,uint) r6.y, r7.xyzw, t24.yxzw
                ushr r7.xyz, r6.yyyy, l(1, 8, 16, 0)
                and r6.z, r7.x, l(0x7f800000)
                bfi r6.y, l(8), l(15), r6.y, l(0)
                bfi r6.y, l(23), l(0), r6.y, r7.x
                add r8.x, -r6.z, r6.y
                bfi r6.yw, l(0, 8, 0, 8), l(0, 15, 0, 15), r7.yyyz, l(0, 0, 0, 0)
                bfi r6.yw, l(0, 23, 0, 23), l(0, 0, 0, 0), r6.yyyw, r7.xxxx
                add r8.yz, -r6.zzzz, r6.yywy
                and r6.yzw, r8.xxyz, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
                ine r7.xyz, r6.yzwy, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
                mov r7.w, l(-1)
                and r6.yz, r7.zzwz, r7.xxyx
                and r6.y, r6.z, r6.y
                not r7.y, r6.y
                if_z r6.y
                  store_uav_typed u5.xyzw, vThreadID.xyyy, l(0.500000,1.000000,0.500000,1.000000)
                endif 
                mov r7.x, r7.y
              else 
                mov r7.xy, l(-1,-1,0,0)
              endif 
              and r6.yz, r5.wwww, r7.yyxy
              or r6.yz, r2.yyyy, r6.zzyz
            else 
              mov r6.yz, l(0,0,0,0)
            endif 
            not r6.zw, r6.zzzy
            and r2.y, r6.z, r6.w
            if_nz r2.y
              ult r5.w, l(5), r1.y
              if_nz r5.w
                and r2.z, r2.z, l(-2048)
                and r5.w, r2.w, l(-2048)
                ieq r2.z, r2.z, r5.w
                if_nz r2.z
                  store_uav_typed u5.xyzw, vThreadID.xyyy, l(0.500000,0.500000,1.000000,1.000000)
                endif 
                not r5.w, r2.z
                if_z r2.z
                  mov r7.xy, vThreadID.xyxx
                  mov r7.zw, l(0,0,5,0)
                  ld_indexable(texture2darray)(uint,uint,uint,uint) r6.z, r7.xyzw, t24.yzxw
                  ushr r7.xyz, r6.zzzz, l(1, 8, 16, 0)
                  and r6.w, r7.x, l(0x7f800000)
                  bfi r6.z, l(8), l(15), r6.z, l(0)
                  bfi r6.z, l(23), l(0), r6.z, r7.x
                  add r8.x, -r6.w, r6.z
                  bfi r7.yz, l(0, 8, 8, 0), l(0, 15, 15, 0), r7.yyzy, l(0, 0, 0, 0)
                  bfi r7.xy, l(23, 23, 0, 0), l(0, 0, 0, 0), r7.yzyy, r7.xxxx
                  add r8.yz, -r6.wwww, r7.xxyx
                  and r7.xyz, r8.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
                  ine r7.xyz, r7.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
                  mov r7.w, l(-1)
                  and r6.zw, r7.zzzw, r7.xxxy
                  and r6.z, r6.w, r6.z
                  not r7.y, r6.z
                  if_z r6.z
                    store_uav_typed u5.xyzw, vThreadID.xyyy, l(0.500000,1.000000,0.500000,1.000000)
                  endif 
                  mov r7.x, r7.y
                else 
                  mov r7.xy, l(-1,-1,0,0)
                endif 
                and r6.zw, r5.wwww, r7.yyyx
                or r6.zw, r2.zzzz, r6.wwwz
              else 
                mov r6.zw, l(0,0,0,0)
              endif 
              not r7.xy, r6.wzww
              and r2.z, r7.x, r7.y
              if_nz r2.z
                ult r1.y, l(6), r1.y
                if_nz r1.y
                  and r1.y, r2.w, l(-2048)
                  and r0.w, r0.w, l(-2048)
                  ieq r0.w, r0.w, r1.y
                  if_nz r0.w
                    store_uav_typed u5.xyzw, vThreadID.xyyy, l(0.500000,0.500000,1.000000,1.000000)
                  endif 
                  not r1.y, r0.w
                  if_z r0.w
                    mov r7.xy, vThreadID.xyxx
                    mov r7.zw, l(0,0,6,0)
                    ld_indexable(texture2darray)(uint,uint,uint,uint) r2.w, r7.xyzw, t24.yzwx
                    ushr r7.xyz, r2.wwww, l(1, 8, 16, 0)
                    and r5.w, r7.x, l(0x7f800000)
                    bfi r2.w, l(8), l(15), r2.w, l(0)
                    bfi r2.w, l(23), l(0), r2.w, r7.x
                    add r8.x, -r5.w, r2.w
                    bfi r7.yz, l(0, 8, 8, 0), l(0, 15, 15, 0), r7.yyzy, l(0, 0, 0, 0)
                    bfi r7.xy, l(23, 23, 0, 0), l(0, 0, 0, 0), r7.yzyy, r7.xxxx
                    add r8.yz, -r5.wwww, r7.xxyx
                    and r7.xyz, r8.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
                    ine r7.xyz, r7.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
                    mov r7.w, l(-1)
                    and r7.xy, r7.zwzz, r7.xyxx
                    and r2.w, r7.y, r7.x
                    not r5.w, r2.w
                    if_z r2.w
                      store_uav_typed u5.xyzw, vThreadID.xyyy, l(0.500000,1.000000,0.500000,1.000000)
                    endif 
                  else 
                    mov r5.w, l(-1)
                  endif 
                  and r1.y, r1.y, r5.w
                  or r0.w, r0.w, r1.y
                else 
                  mov r0.w, l(0)
                endif 
              else 
                mov r0.w, l(-1)
              endif 
              and r0.w, r0.w, r2.z
              or r0.w, r6.z, r0.w
            else 
              mov r0.w, l(-1)
            endif 
            and r0.w, r0.w, r2.y
            or r0.w, r6.y, r0.w
          else 
            mov r0.w, l(-1)
          endif 
          and r0.w, r0.w, r1.z
          or r0.w, r6.x, r0.w
        else 
          mov r0.w, l(-1)
        endif 
        and r0.w, r0.w, r3.w
        or r0.w, r5.z, r0.w
      else 
        mov r0.w, l(-1)
      endif 
      and r0.w, r0.w, r1.x
      or r0.w, r5.y, r0.w
    else 
      mov r0.w, l(-1)
    endif 
    and r0.w, r0.w, r2.x
    or r0.w, r5.x, r0.w
    if_z r0.w
      utof r0.w, r0.y
      mul r2.xyz, r0.wwww, l(0.125000, 0.125000, 0.125000, 0.000000)
      mov r2.w, l(1.000000)
      store_uav_typed u5.xyzw, vThreadID.xyyy, r2.xyzw
    endif 
  endif 
else 
  mov r1.w, l(1.000000)
  mov r0.z, l(-1.000000)
  mov r3.xyz, l(0,0,1.000000,0)
  mov r4.w, l(0)
endif 
if_z r0.y
  iadd r0.y, cb1[82].x, l(1023)
  ushr r0.y, r0.y, l(10)
  umin r0.y, r0.y, l(2)
  ubfe r2.xy, l(27, 27, 0, 0), l(2, 2, 0, 0), vThreadGroupID.xyxx
  uge r0.w, r0.y, l(1)
  if_nz r0.w
    uge r0.w, r0.y, l(2)
    if_nz r0.w
      mov r2.zw, l(0,0,1,0)
      ld_indexable(texture2darray)(uint,uint,uint,uint) r1.x, r2.xyww, t26.xyzw
      ld_indexable(texture2darray)(uint,uint,uint,uint) r1.y, r2.xyzw, t26.yxzw
    else 
      mov r2.zw, l(0,0,0,0)
      ld_indexable(texture2darray)(uint,uint,uint,uint) r1.x, r2.xyzw, t26.xyzw
      mov r1.y, l(0)
    endif 
  else 
    mov r1.xy, l(0,0,0,0)
  endif 
  or r0.w, r1.y, r1.x
  if_z r0.w
    store_uav_typed u4.xyzw, vThreadID.xyyy, l(1.000000,1.000000,1.000000,1.000000)
    mov r5.xy, vThreadID.xyxx
    mov r5.zw, l(0,0,0,0)
    ld_indexable(texture2d)(float,float,float,float) r1.z, r5.xyzw, t0.yzxw
    store_uav_typed u7.xyzw, vThreadID.xyyy, r1.zzzz
  endif 
  if_nz r0.w
    and r0.w, r0.x, l(0xff000000)
    ieq r0.w, r0.w, l(0)
    ult r0.x, cb2[58].z, r0.x
    if_nz r0.x
      mov r5.xy, vThreadID.xyxx
      mov r5.zw, l(0,0,0,0)
      ld_indexable(texture2d)(float,float,float,float) r6.xyz, r5.xyww, t21.xyzw
      ld_indexable(texture2d)(float,float,float,float) r5.xyzw, r5.xyzw, t22.xyzw
      mad r4.xyz, r5.wwww, r6.xyzx, r5.xyzx
    else 
      mov r5.xy, vThreadID.xyxx
      mov r5.zw, l(0,0,0,0)
      ld_indexable(texture2d)(float,float,float,float) r4.xyz, r5.xyzw, t21.xyzw
    endif 
    mov r5.xy, vThreadID.xyxx
    mov r5.w, l(0)
    ld_indexable(texture2d)(float,float,float,float) r0.x, r5.xyww, t0.xyzw
    lt r1.z, r1.w, l(0.800000)
    and r0.w, r0.w, r1.z
    if_nz r0.w
      max r0.z, r0.x, r0.z
    else 
      mov r0.z, r0.x
    endif 
    store_uav_typed u7.xyzw, vThreadID.xyyy, r0.zzzz
    if_nz r0.y
      ushr r6.xyzw, r3.xxyy, l(2, 2, 2, 2)
      and r6.xyzw, r6.xyzw, l(0x3ffffe00, 0x3ffffe00, 0x3ffffe00, 0x3ffffe00)
      ge r0.zw, r6.yyyw, l(0.000000, 0.000000, 0.984375, 0.984375)
      mul r3.xy, r6.ywyy, l(1.01587307, 1.01587307, 0.000000, 0.000000)
      mad r6.xy, r6.xzxx, l(64.000000, 64.000000, 0.000000, 0.000000), l(-63.000000, -63.000000, 0.000000, 0.000000)
      movc r0.zw, r0.zzzw, r6.xxxy, r3.xxxy
      max r0.zw, r0.zzzw, l(0.000000, 0.000000, 0.00000001, 0.00000001)
      rcp r0.zw, r0.zzzw
      ge r1.z, r0.x, l(0.984375)
      mul r3.x, r0.x, l(1.01587307)
      mad r3.y, r0.x, l(64.000000), l(-63.000000)
      movc r1.z, r1.z, r3.y, r3.x
      max r1.z, r1.z, l(0.00000001)
      rcp r1.z, r1.z
      and r3.xyw, cb1[82].yyyy, l(4, 1, 0, 8)
      ine r3.x, r3.x, l(0)
      utof r6.xyzw, vThreadID.xyxy
      not r7.x, vThreadID.y
      xor r7.x, r7.x, vThreadID.x
      and r7.x, r7.x, l(1)
      mov r2.w, l(0)
      mov r8.w, l(0.00392157)
      mov r9.xw, l(1.000000,0,0,4)
      mov r10.x, r4.w
      mov r10.yzw, r4.xxyz
      mov r7.y, r1.w
      mov r11.w, l(0)
      mov r7.z, r1.x
      loop 
        breakc_z r7.z
        firstbit_lo r2.z, r7.z
        ishl r7.w, l(1), r2.z
        not r7.w, r7.w
        and r7.z, r7.w, r7.z
        ld_indexable(texture2darray)(uint,uint,uint,uint) r7.w, r2.xyzw, t25.yzwx
        ishl r12.x, r2.z, l(5)
        mov r13.xyzw, r10.xyzw
        mov r12.y, r7.y
        mov r14.w, r11.w
        mov r12.z, r7.w
        loop 
          breakc_z r12.z
          firstbit_lo r12.w, r12.z
          ishl r15.x, l(1), r12.w
          not r15.x, r15.x
          and r12.z, r12.z, r15.x
          iadd r12.w, r12.x, r12.w
          ld_structured_indexable(structured_buffer, stride=32)(mixed,mixed,mixed,mixed) r15.xyz, r12.w, l(16), t1.xyzx
          mov r16.xyz, r13.yzwy
          mov r15.w, r13.x
          loop 
            break 
          endloop 
          mov r13.x, r15.w
          lt r17.x, r0.x, r15.z
          or r17.x, r3.x, r17.x
          if_nz r17.x
            ld_structured_indexable(structured_buffer, stride=32)(mixed,mixed,mixed,mixed) r17.xyzw, r12.w, l(0), t1.xyzw
            mul r18.xyzw, r6.xyzw, r17.xyzw
            add r18.xy, r18.ywyy, r18.xzxx
            add r18.xy, r15.xyxx, r18.xyxx
            mad r15.xy, r18.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
            max r15.x, |r15.y|, |r15.x|
            lt r15.x, r15.x, l(1.000000)
            if_nz r15.x
              if_nz r3.y
                lt r15.xy, l(0.995000, 0.995000, 0.000000, 0.000000), r18.xyxx
                or r15.x, r15.y, r15.x
                lt r19.xy, r18.xyxx, l(0.005000, 0.005000, 0.000000, 0.000000)
                or r15.y, r19.y, r19.x
                or r15.x, r15.y, r15.x
                if_nz r15.x
                  ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r15.x, r12.w, l(52), t2.xxxx
                  ubfe r15.x, l(1), l(22), r15.x
                  movc r13.yzw, r15.xxxx, l(0,0.750000,0.300000,0), l(0,0.750000,0.750000,0.750000)
                  mov r14.w, l(1.000000)
                else 
                  ne r15.x, r14.w, l(1.000000)
                  eq r15.y, r16.x, l(0.000000)
                  ge r19.xy, r16.yxyy, l(1.000000, 1.000000, 0.000000, 0.000000)
                  add r16.w, r16.x, l(0.050000)
                  add r20.xyz, r16.yxyy, l(-0.050000, 0.000000, 0.050000, 0.000000)
                  movc r19.zw, r19.xxxx, r16.wwwy, r20.yyyz
                  add r21.xy, r16.xyxx, l(0.000000, -0.050000, 0.000000, 0.000000)
                  add r20.yz, r16.xxyx, l(0.000000, 0.050000, 0.000000, 0.000000)
                  movc r20.yz, r19.yyyy, r21.xxyx, r20.yyzy
                  ne r16.w, r16.y, l(0.000000)
                  movc r21.z, r16.w, r20.x, r16.y
                  movc r19.xy, r19.xxxx, r20.yzyy, r21.xzxx
                  movc r14.xy, r15.yyyy, r19.zwzz, r19.xyxx
                  mov r14.z, r16.z
                  movc r19.xyzw, r15.xxxx, l(0,0,0,1.000000), r14.xyzw
                  mov r14.xyz, r16.xyzx
                  movc r14.xyzw, r7.xxxx, r19.xyzw, r14.xyzw
                  mov r13.yzw, r14.xxyz
                endif 
              else 
                ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r19.xyzw, r12.w, l(0), t2.xyzw
                ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r20.xyzw, r12.w, l(16), t2.zxyw
                ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r14.x, r12.w, l(32), t2.xxxx
                ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r21.xyzw, r12.w, l(40), t2.xyzw
                ushr r14.yz, r21.xxyx, l(0, 24, 24, 0)
                utof r14.yz, r14.yyzy
                mul r15.xy, r14.yzyy, l(0.00390625, 0.00392157, 0.000000, 0.000000)
                ubfe r22.xyzw, l(4, 4, 1, 8), l(26, 16, 20, 8), r21.zwww
                ishl r23.xyzw, l(1, 1, 1, 1), r22.xyxy
                if_nz r22.z
                  ubfe r16.w, l(12), l(12), r21.x
                  and r22.xy, r21.xzxx, l(4095, 1023, 0, 0)
                  utof r24.xyzw, r23.zwzw
                  mad r25.xy, r18.xyxx, r24.zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r25.zw, r24.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r25.xy, r25.zwzz, r25.xyxx
                  utof r26.xz, r22.xxyx
                  utof r26.y, r16.w
                  add r22.xz, r25.xxyx, r26.xxyx
                  mul r26.xy, r22.xzxx, cb1[83].xyxx
                  mul r24.xyzw, r17.xzyw, r24.xyzw
                  sample_d_indexable(texture2darray)(float,float,float,float) r27.xyzw, r26.xyzx, t42.xyzw, s0, r24.xyxx, r24.zwzz
                  lt r16.w, l(0.000000), r14.y
                  if_nz r16.w
                    and r16.w, r21.y, l(4095)
                    ubfe r18.w, l(12), l(12), r21.y
                    utof r22.x, r16.w
                    utof r22.y, r18.w
                    add r22.xy, r22.xyxx, r25.xyxx
                    mul r26.xy, r22.xyxx, cb1[83].xyxx
                    sample_d_indexable(texture2darray)(float,float,float,float) r24.xyzw, r26.xyzx, t42.xyzw, s0, r24.xyxx, r24.zwzz
                    add r24.xyzw, -r27.xyzw, r24.xyzw
                    mad r27.xyzw, r15.xxxx, r24.xyzw, r27.xyzw
                  endif 
                else 
                  ubfe r16.w, l(12), l(12), r21.x
                  and r22.xy, r21.xzxx, l(4095, 1023, 0, 0)
                  utof r24.xyzw, r23.zwzw
                  mad r25.xy, r18.xyxx, r24.zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r25.zw, r24.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r25.xy, r25.zwzz, r25.xyxx
                  utof r26.x, r22.x
                  utof r26.y, r16.w
                  add r22.xz, r25.xxyx, r26.xxyx
                  mul r25.xy, r22.xzxx, cb1[83].zwzz
                  utof r25.z, r22.y
                  mul r24.xyzw, r17.xzyw, r24.xyzw
                  sample_d_indexable(texture2darray)(float,float,float,float) r27.xyzw, r25.xyzx, t43.xyzw, s0, r24.xyxx, r24.zwzz
                  lt r16.w, l(0.000000), r14.y
                  if_nz r16.w
                    ubfe r16.w, l(12), l(12), r21.y
                    and r21.xy, r21.yzyy, l(4095, 1023, 0, 0)
                    utof r23.xyzw, r23.xyzw
                    mad r22.xy, r18.xyxx, r23.zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r24.xy, r23.zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                    min r22.xy, r22.xyxx, r24.xyxx
                    utof r24.x, r21.x
                    utof r24.y, r16.w
                    add r22.xy, r22.xyxx, r24.xyxx
                    mul r22.xy, r22.xyxx, cb1[83].zwzz
                    utof r22.z, r21.y
                    mul r23.xyzw, r17.xzyw, r23.xyzw
                    sample_d_indexable(texture2darray)(float,float,float,float) r23.xyzw, r22.xyzx, t43.xyzw, s0, r23.xyxx, r23.zwzz
                    add r23.xyzw, -r27.xyzw, r23.xyzw
                    mad r27.xyzw, r15.xxxx, r23.xyzw, r27.xyzw
                  endif 
                endif 
                utof r16.w, r22.w
                mul r16.w, r16.w, l(0.00392157)
                dp3 r18.w, r27.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
                add r22.xyz, -r27.xyzx, r18.wwww
                mad r22.xyz, r16.wwww, r22.xyzx, r27.xyzx
                ubfe r23.xyz, l(8, 8, 1, 0), l(10, 18, 30, 0), r21.zzzz
                utof r21.xy, r23.xyxx
                mul r16.w, r21.y, l(0.00392157)
                and r18.w, r21.w, l(255)
                utof r18.w, r18.w
                eq r22.w, r14.z, l(0.000000)
                eq r23.xy, r21.xyxx, l(255.000000, 0.000000, 0.000000, 0.000000)
                and r21.y, r22.w, r23.x
                and r21.y, r23.y, r21.y
                eq r22.w, r18.w, l(255.000000)
                and r21.y, r21.y, r22.w
                max r22.w, r27.w, l(0.000100)
                div_sat r23.xyw, r22.xyxz, r22.wwww
                mad r23.xyw, -r14.zzzz, l(0.00392157, 0.00392157, 0.000000, 0.00392157), r23.xyxw
                max r23.xyw, r23.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
                mad r14.z, r21.x, l(0.00392157), -r15.y
                max r14.z, r14.z, l(0.000100)
                div r23.xyw, r23.xyxw, r14.zzzz
                min r23.xyw, r23.xyxw, l(1.000000, 1.000000, 0.000000, 1.000000)
                mad r14.z, r18.w, l(0.00392157), -r16.w
                mad r23.xyw, r23.xyxw, r14.zzzz, r16.wwww
                ge r24.xyz, l(0.040450, 0.040450, 0.040450, 0.000000), r23.xywx
                mul r25.xyz, r23.xywx, l(0.07739938, 0.07739938, 0.07739938, 0.000000)
                add r23.xyw, r23.xyxw, l(0.055000, 0.055000, 0.000000, 0.055000)
                mul r23.xyw, |r23.xyxw|, l(0.94786733, 0.94786733, 0.000000, 0.94786733)
                log r23.xyw, r23.xyxw
                mul r23.xyw, r23.xyxw, l(2.400000, 2.400000, 0.000000, 2.400000)
                exp r23.xyw, r23.xyxw
                movc r23.xyw, r24.xyxz, r25.xyxz, r23.xyxw
                mul r23.xyw, r27.wwww, r23.xyxw
                movc r27.xyz, r21.yyyy, r22.xyzx, r23.xywx
                utof r18.z, r12.w
                sample_l_indexable(texture2darray)(float,float,float,float) r8.xyz, r18.xyzx, t29.xyzw, s0, l(0.000000)
                and r14.z, r19.x, l(255)
                utof r14.z, r14.z
                mul r24.x, r14.z, l(0.00392157)
                ubfe r21.xy, l(8, 8, 0, 0), l(8, 16, 0, 0), r19.xxxx
                utof r21.xy, r21.xyxx
                mul r24.yz, r21.xxyx, l(0.000000, 0.00392157, 0.00392157, 0.000000)
                ushr r14.z, r19.x, l(24)
                utof r24.w, r14.z
                mul r25.xyzw, r8.xyzw, r24.xyzw
                ge r8.x, r15.z, l(0.984375)
                mul r8.y, r15.z, l(1.01587307)
                mad r8.z, r15.z, l(64.000000), l(-63.000000)
                movc r8.x, r8.x, r8.z, r8.y
                max r8.x, r8.x, l(0.00000001)
                rcp r8.x, r8.x
                f16tof32 r8.y, r20.x
                f16tof32 r8.z, r14.x
                ne r14.z, r8.z, l(1.000000)
                div r22.xyz, r27.xyzx, r22.wwww
                mad r15.y, r8.w, r24.w, r27.w
                mad_sat r26.w, r15.y, r8.z, -r8.z
                mul r26.xyz, r22.xyzx, r26.wwww
                movc r22.xyzw, r14.zzzz, r26.xyzw, r27.xyzw
                mov r9.y, r26.w
                movc r21.xy, r14.zzzz, r9.xyxx, r25.wwww
                lt r8.z, r8.x, r1.z
                add r9.y, r1.z, -r8.x
                mul_sat r9.y, r8.y, r9.y
                movc r8.z, r8.z, r9.y, l(1.000000)
                add r23.xy, r0.zwzz, -r8.xxxx
                mul r8.xy, r8.yyyy, r23.xyxx
                min r8.xy, |r8.xyxx|, l(1.000000, 1.000000, 0.000000, 0.000000)
                mul r8.x, r8.x, r8.z
                mul r8.x, r8.y, r8.x
                mul r22.xyzw, r8.xxxx, r22.xyzw
                mul r26.xyzw, r21.xxxx, r22.wxyz
                if_nz r23.z
                  mul r8.x, r8.x, r21.y
                  ushr r8.y, r21.z, l(31)
                  if_nz r8.y
                    ld_structured_indexable(structured_buffer, stride=48)(mixed,mixed,mixed,mixed) r22.xyz, r12.w, l(24), t3.xyzx
                    ushr r8.y, r22.x, l(28)
                    ishl r8.y, l(1), r8.y
                    ubfe r23.xyz, l(4, 12, 10, 0), l(24, 16, 12, 0), r22.yxzy
                    ishl r8.z, l(1), r23.x
                    and r9.y, r22.y, l(4095)
                    utof r27.xyzw, r8.yzyz
                    mad r8.yz, r18.xxyx, r27.zzwz, l(0.000000, 0.500000, 0.500000, 0.000000)
                    add r21.yz, r27.zzwz, l(0.000000, -0.500000, -0.500000, 0.000000)
                    min r8.yz, r8.yyzy, r21.yyzy
                    utof r23.x, r23.y
                    utof r23.y, r9.y
                    add r21.yz, r8.yyzy, r23.xxyx
                    mul r28.xy, r21.yzyy, cb1[84].xyxx
                    utof r28.z, r23.z
                    mul r17.xyzw, r17.xzyw, r27.xyzw
                    sample_d_indexable(texture2darray)(float,float,float,float) r9.y, r28.xyzx, t45.yxzw, s0, r17.xyxx, r17.zwzz
                    lt r12.w, l(0.000000), r14.y
                    if_nz r12.w
                      ubfe r12.w, l(12), l(12), r22.y
                      and r14.y, r22.z, l(4095)
                      utof r22.x, r12.w
                      utof r22.y, r14.y
                      add r8.yz, r8.yyzy, r22.xxyx
                      mul r28.xy, r8.yzyy, cb1[84].xyxx
                      sample_d_indexable(texture2darray)(float,float,float,float) r8.y, r28.xyzx, t45.yxzw, s0, r17.xyxx, r17.zwzz
                      add r8.y, -r9.y, r8.y
                      mad r9.y, r15.x, r8.y, r9.y
                    endif 
                  else 
                    mov r9.y, l(1.000000)
                  endif 
                  mul r8.x, r8.x, r9.y
                  ushr r8.y, r14.x, l(16)
                  f16tof32 r8.y, r8.y
                  ubfe r8.z, l(1), l(21), r21.w
                  dp3 r9.y, r25.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
                  max r9.y, r9.y, l(0.000100)
                  max r9.y, r9.y, cb1[85].x
                  mul r9.y, r8.y, r9.y
                  movc r8.y, r8.z, r8.y, r9.y
                  mul r8.x, r8.y, r8.x
                  mad r25.xyz, r24.xyzx, r8.xxxx, r25.xyzx
                endif 
                mad r8.x, -r22.w, r21.x, l(1.000000)
                mul r12.y, r8.x, r12.y
                lt r8.y, r12.y, l(0.800000)
                lt r8.z, l(0.200000), r26.x
                or r8.y, r8.z, r8.y
                if_nz r8.y
                  ge r8.y, r15.z, l(0.00049219)
                  if_nz r8.y
                    add r8.y, -r15.z, l(1.000000)
                    mov r14.xy, l(4,0,0,0)
                    loop 
                      ige r8.z, r14.y, l(4)
                      breakc_nz r8.z
                      ishl r8.z, r14.y, l(2)
                      ld_structured r8.z, vThreadIDInGroupFlattened.x, r8.z, g0.xxxx
                      ge r8.z, r8.z, r8.y
                      if_nz r8.z
                        mov r14.x, r14.y
                        break 
                      endif 
                      iadd r9.z, r14.y, l(1)
                      mov r14.xy, r9.wzww
                    endloop 
                    store_structured g0.x, vThreadIDInGroupFlattened.x, l(16), l(1000000015047466219876688855040.000000)
                    store_structured g1.x, vThreadIDInGroupFlattened.x, l(16), l(1.000000)
                    ishl r8.z, r14.x, l(2)
                    iadd r9.y, r8.z, l(-4)
                    ld_structured r9.y, vThreadIDInGroupFlattened.x, r9.y, g1.xxxx
                    movc r9.y, r14.x, r9.y, l(1.000000)
                    mov r9.z, l(3)
                    loop 
                      ilt r12.w, r9.z, l(0)
                      breakc_nz r12.w
                      ige r12.w, r9.z, r14.x
                      if_nz r12.w
                        ishl r12.w, r9.z, l(2)
                        iadd r14.y, r12.w, l(4)
                        ld_structured r14.z, vThreadIDInGroupFlattened.x, r12.w, g0.xxxx
                        store_structured g0.x, vThreadIDInGroupFlattened.x, r14.y, r14.z
                        ld_structured r12.w, vThreadIDInGroupFlattened.x, r12.w, g1.xxxx
                        mul r12.w, r8.x, r12.w
                        store_structured g1.x, vThreadIDInGroupFlattened.x, r14.y, r12.w
                      endif 
                      iadd r9.z, r9.z, l(-1)
                    endloop 
                    store_structured g0.x, vThreadIDInGroupFlattened.x, r8.z, r8.y
                    mul r8.x, r8.x, r9.y
                    store_structured g1.x, vThreadIDInGroupFlattened.x, r8.z, r8.x
                    ld_structured r8.x, vThreadIDInGroupFlattened.x, l(16), g0.xxxx
                    ne r8.x, r8.x, l(1000000015047466219876688855040.000000)
                    if_nz r8.x
                      mov r8.x, l(2)
                      loop 
                        ige r8.y, r8.x, l(4)
                        breakc_nz r8.y
                        ishl r8.y, r8.x, l(2)
                        ld_structured r8.z, vThreadIDInGroupFlattened.x, r8.y, g0.xxxx
                        iadd r8.y, r8.y, l(-4)
                        ld_structured r9.y, vThreadIDInGroupFlattened.x, r8.y, g0.xxxx
                        add r8.z, r8.z, -r9.y
                        ld_structured r9.yz, vThreadIDInGroupFlattened.x, r8.y, g1.xxyx
                        add r8.y, -r9.z, r9.y
                        mul r8.y, r8.y, r8.z
                        mov x8[r8.x + 0].x, r8.y
                        iadd r8.x, r8.x, l(1)
                      endloop 
                      mov r8.x, x8[2].x
                      mov r8.y, x8[3].x
                      lt r8.x, r8.y, r8.x
                      movc r8.xy, r8.xxxx, l(3,2,0,0), l(2,1,0,0)
                      mov r8.z, l(2)
                      loop 
                        ige r9.y, r8.z, l(4)
                        breakc_nz r9.y
                        ige r9.y, r8.z, r8.x
                        if_nz r9.y
                          ishl r9.y, r8.z, l(2)
                          iadd r9.z, r9.y, l(4)
                          ld_structured r9.z, vThreadIDInGroupFlattened.x, r9.z, g0.xxxx
                          store_structured g0.x, vThreadIDInGroupFlattened.x, r9.y, r9.z
                        endif 
                        iadd r8.z, r8.z, l(1)
                      endloop 
                      mov r8.x, l(1)
                      loop 
                        ige r8.z, r8.x, l(4)
                        breakc_nz r8.z
                        ige r8.z, r8.x, r8.y
                        if_nz r8.z
                          ishl r8.z, r8.x, l(2)
                          iadd r9.y, r8.z, l(4)
                          ld_structured r9.y, vThreadIDInGroupFlattened.x, r9.y, g1.xxxx
                          store_structured g1.x, vThreadIDInGroupFlattened.x, r8.z, r9.y
                        endif 
                        iadd r8.x, r8.x, l(1)
                      endloop 
                    endif 
                  endif 
                endif 
                if_nz r3.w
                  sample_l_indexable(texture2darray)(float,float,float,float) r8.xyz, r18.xyzx, t29.xyzw, s1, l(0.000000)
                  mov r26.x, l(1.000000)
                else 
                  ushr r9.yz, r20.xxwx, l(0, 16, 16, 0)
                  f16tof32 r15.y, r20.w
                  f16tof32 r15.xz, r9.yyzy
                  ushr r9.yz, r19.yyzy, l(0, 16, 16, 0)
                  f16tof32 r17.xy, r19.yzyy
                  f16tof32 r17.zw, r9.yyyz
                  mul r17.xyz, r26.xxxx, r17.xzyx
                  mov r20.x, r19.w
                  mul r18.xyz, r26.xxxx, r20.xyzx
                  mad r19.xyz, r26.yzwy, r25.xyzx, -r17.xyzx
                  mad r17.xyz, r17.wwww, r19.xyzx, r17.xyzx
                  mad r8.xyz, r17.xyzx, r15.xyzx, r18.xyzx
                endif 
                mul r8.xyz, r8.xyzx, cb1[85].yyyy
                add r9.y, -r26.x, l(1.000000)
                mad r13.yzw, r16.xxyz, r9.yyyy, r8.xxyz
              endif 
            else 
              mov r13.yzw, r16.xxyz
            endif 
          else 
            mov r13.yzw, r16.xxyz
          endif 
        endloop 
        mov r10.xyzw, r13.xyzw
        mov r7.y, r12.y
        mov r11.w, r14.w
      endloop 
      mov r4.xyzw, r10.yzwx
      mov r1.w, r7.y
      ult r0.y, l(1), r0.y
      if_nz r0.y
        mov r2.w, l(0)
        mov r8.w, l(0.00392157)
        mov r9.xw, l(1.000000,0,0,4)
        mov r10.xyzw, r4.wxyz
        mov r0.y, r1.w
        mov r1.x, r11.w
        mov r7.y, r1.y
        loop 
          breakc_z r7.y
          firstbit_lo r7.z, r7.y
          ishl r7.w, l(1), r7.z
          not r7.w, r7.w
          and r7.y, r7.w, r7.y
          iadd r2.z, r7.z, l(32)
          ld_indexable(texture2darray)(uint,uint,uint,uint) r7.z, r2.xyzw, t25.yzxw
          ishl r2.z, r2.z, l(5)
          mov r12.xyzw, r10.xyzw
          mov r7.w, r0.y
          mov r13.w, r1.x
          mov r14.x, r7.z
          loop 
            breakc_z r14.x
            firstbit_lo r14.y, r14.x
            ishl r14.z, l(1), r14.y
            not r14.z, r14.z
            and r14.x, r14.z, r14.x
            iadd r14.y, r2.z, r14.y
            ld_structured_indexable(structured_buffer, stride=32)(mixed,mixed,mixed,mixed) r15.xyz, r14.y, l(16), t1.xyzx
            mov r16.xyz, r12.yzwy
            mov r14.z, r12.x
            loop 
              break 
            endloop 
            mov r12.x, r14.z
            lt r14.w, r0.x, r15.z
            or r14.w, r3.x, r14.w
            if_nz r14.w
              ld_structured_indexable(structured_buffer, stride=32)(mixed,mixed,mixed,mixed) r17.xyzw, r14.y, l(0), t1.xyzw
              mul r18.xyzw, r6.xyzw, r17.xyzw
              add r18.xy, r18.ywyy, r18.xzxx
              add r18.xy, r15.xyxx, r18.xyxx
              mad r15.xy, r18.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
              max r14.w, |r15.y|, |r15.x|
              lt r14.w, r14.w, l(1.000000)
              if_nz r14.w
                if_nz r3.y
                  lt r15.xy, l(0.995000, 0.995000, 0.000000, 0.000000), r18.xyxx
                  or r14.w, r15.y, r15.x
                  lt r15.xy, r18.xyxx, l(0.005000, 0.005000, 0.000000, 0.000000)
                  or r15.x, r15.y, r15.x
                  or r14.w, r14.w, r15.x
                  if_nz r14.w
                    ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r14.w, r14.y, l(52), t2.xxxx
                    ubfe r14.w, l(1), l(22), r14.w
                    movc r12.yzw, r14.wwww, l(0,0.750000,0.300000,0), l(0,0.750000,0.750000,0.750000)
                    mov r13.w, l(1.000000)
                  else 
                    ne r14.w, r13.w, l(1.000000)
                    eq r15.x, r16.x, l(0.000000)
                    ge r15.yw, r16.yyyx, l(0.000000, 1.000000, 0.000000, 1.000000)
                    add r16.w, r16.x, l(0.050000)
                    add r19.xyz, r16.yxyy, l(-0.050000, 0.000000, 0.050000, 0.000000)
                    movc r19.yz, r15.yyyy, r16.wwyw, r19.yyzy
                    add r20.xy, r16.xyxx, l(0.000000, -0.050000, 0.000000, 0.000000)
                    add r21.xy, r16.xyxx, l(0.050000, 0.000000, 0.000000, 0.000000)
                    movc r20.yw, r15.wwww, r20.xxxy, r21.xxxy
                    ne r15.w, r16.y, l(0.000000)
                    movc r20.z, r15.w, r19.x, r16.y
                    movc r15.yw, r15.yyyy, r20.yyyw, r20.xxxz
                    movc r13.xy, r15.xxxx, r19.yzyy, r15.ywyy
                    mov r13.z, r16.z
                    movc r19.xyzw, r14.wwww, l(0,0,0,1.000000), r13.xyzw
                    mov r13.xyz, r16.xyzx
                    movc r13.xyzw, r7.xxxx, r19.xyzw, r13.xyzw
                    mov r12.yzw, r13.xxyz
                  endif 
                else 
                  ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r19.xyzw, r14.y, l(0), t2.xyzw
                  ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r20.xyzw, r14.y, l(16), t2.zxyw
                  ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r13.x, r14.y, l(32), t2.xxxx
                  ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r21.xyzw, r14.y, l(40), t2.xyzw
                  ushr r13.yz, r21.xxyx, l(0, 24, 24, 0)
                  utof r13.yz, r13.yyzy
                  mul r15.xy, r13.yzyy, l(0.00390625, 0.00392157, 0.000000, 0.000000)
                  ubfe r22.xyzw, l(4, 4, 1, 8), l(26, 16, 20, 8), r21.zwww
                  ishl r23.xyzw, l(1, 1, 1, 1), r22.xyxy
                  if_nz r22.z
                    ubfe r14.w, l(12), l(12), r21.x
                    and r22.xy, r21.xzxx, l(4095, 1023, 0, 0)
                    utof r24.xyzw, r23.zwzw
                    mad r25.xy, r18.xyxx, r24.zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r25.zw, r24.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
                    min r25.xy, r25.zwzz, r25.xyxx
                    utof r26.xz, r22.xxyx
                    utof r26.y, r14.w
                    add r22.xz, r25.xxyx, r26.xxyx
                    mul r26.xy, r22.xzxx, cb1[83].xyxx
                    mul r24.xyzw, r17.xzyw, r24.xyzw
                    sample_d_indexable(texture2darray)(float,float,float,float) r27.xyzw, r26.xyzx, t42.xyzw, s0, r24.xyxx, r24.zwzz
                    lt r14.w, l(0.000000), r13.y
                    if_nz r14.w
                      and r14.w, r21.y, l(4095)
                      ubfe r15.w, l(12), l(12), r21.y
                      utof r22.x, r14.w
                      utof r22.y, r15.w
                      add r22.xy, r22.xyxx, r25.xyxx
                      mul r26.xy, r22.xyxx, cb1[83].xyxx
                      sample_d_indexable(texture2darray)(float,float,float,float) r24.xyzw, r26.xyzx, t42.xyzw, s0, r24.xyxx, r24.zwzz
                      add r24.xyzw, -r27.xyzw, r24.xyzw
                      mad r27.xyzw, r15.xxxx, r24.xyzw, r27.xyzw
                    endif 
                  else 
                    ubfe r14.w, l(12), l(12), r21.x
                    and r22.xy, r21.xzxx, l(4095, 1023, 0, 0)
                    utof r24.xyzw, r23.zwzw
                    mad r25.xy, r18.xyxx, r24.zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r25.zw, r24.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
                    min r25.xy, r25.zwzz, r25.xyxx
                    utof r26.x, r22.x
                    utof r26.y, r14.w
                    add r22.xz, r25.xxyx, r26.xxyx
                    mul r25.xy, r22.xzxx, cb1[83].zwzz
                    utof r25.z, r22.y
                    mul r24.xyzw, r17.xzyw, r24.xyzw
                    sample_d_indexable(texture2darray)(float,float,float,float) r27.xyzw, r25.xyzx, t43.xyzw, s0, r24.xyxx, r24.zwzz
                    lt r14.w, l(0.000000), r13.y
                    if_nz r14.w
                      ubfe r14.w, l(12), l(12), r21.y
                      and r21.xy, r21.yzyy, l(4095, 1023, 0, 0)
                      utof r23.xyzw, r23.xyzw
                      mad r22.xy, r18.xyxx, r23.zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                      add r24.xy, r23.zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                      min r22.xy, r22.xyxx, r24.xyxx
                      utof r24.x, r21.x
                      utof r24.y, r14.w
                      add r22.xy, r22.xyxx, r24.xyxx
                      mul r22.xy, r22.xyxx, cb1[83].zwzz
                      utof r22.z, r21.y
                      mul r23.xyzw, r17.xzyw, r23.xyzw
                      sample_d_indexable(texture2darray)(float,float,float,float) r23.xyzw, r22.xyzx, t43.xyzw, s0, r23.xyxx, r23.zwzz
                      add r23.xyzw, -r27.xyzw, r23.xyzw
                      mad r27.xyzw, r15.xxxx, r23.xyzw, r27.xyzw
                    endif 
                  endif 
                  utof r14.w, r22.w
                  mul r14.w, r14.w, l(0.00392157)
                  dp3 r15.w, r27.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
                  add r22.xyz, -r27.xyzx, r15.wwww
                  mad r22.xyz, r14.wwww, r22.xyzx, r27.xyzx
                  ubfe r23.xyz, l(8, 8, 1, 0), l(10, 18, 30, 0), r21.zzzz
                  utof r21.xy, r23.xyxx
                  mul r14.w, r21.y, l(0.00392157)
                  and r15.w, r21.w, l(255)
                  utof r15.w, r15.w
                  eq r16.w, r13.z, l(0.000000)
                  eq r23.xy, r21.xyxx, l(255.000000, 0.000000, 0.000000, 0.000000)
                  and r16.w, r16.w, r23.x
                  and r16.w, r23.y, r16.w
                  eq r18.w, r15.w, l(255.000000)
                  and r16.w, r16.w, r18.w
                  max r18.w, r27.w, l(0.000100)
                  div_sat r23.xyw, r22.xyxz, r18.wwww
                  mad r23.xyw, -r13.zzzz, l(0.00392157, 0.00392157, 0.000000, 0.00392157), r23.xyxw
                  max r23.xyw, r23.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
                  mad r13.z, r21.x, l(0.00392157), -r15.y
                  max r13.z, r13.z, l(0.000100)
                  div r23.xyw, r23.xyxw, r13.zzzz
                  min r23.xyw, r23.xyxw, l(1.000000, 1.000000, 0.000000, 1.000000)
                  mad r13.z, r15.w, l(0.00392157), -r14.w
                  mad r23.xyw, r23.xyxw, r13.zzzz, r14.wwww
                  ge r24.xyz, l(0.040450, 0.040450, 0.040450, 0.000000), r23.xywx
                  mul r25.xyz, r23.xywx, l(0.07739938, 0.07739938, 0.07739938, 0.000000)
                  add r23.xyw, r23.xyxw, l(0.055000, 0.055000, 0.000000, 0.055000)
                  mul r23.xyw, |r23.xyxw|, l(0.94786733, 0.94786733, 0.000000, 0.94786733)
                  log r23.xyw, r23.xyxw
                  mul r23.xyw, r23.xyxw, l(2.400000, 2.400000, 0.000000, 2.400000)
                  exp r23.xyw, r23.xyxw
                  movc r23.xyw, r24.xyxz, r25.xyxz, r23.xyxw
                  mul r23.xyw, r27.wwww, r23.xyxw
                  movc r27.xyz, r16.wwww, r22.xyzx, r23.xywx
                  utof r18.z, r14.y
                  sample_l_indexable(texture2darray)(float,float,float,float) r8.xyz, r18.xyzx, t29.xyzw, s0, l(0.000000)
                  and r13.z, r19.x, l(255)
                  utof r13.z, r13.z
                  mul r22.x, r13.z, l(0.00392157)
                  ubfe r15.yw, l(0, 8, 0, 8), l(0, 8, 0, 16), r19.xxxx
                  utof r15.yw, r15.yyyw
                  mul r22.yz, r15.yywy, l(0.000000, 0.00392157, 0.00392157, 0.000000)
                  ushr r13.z, r19.x, l(24)
                  utof r22.w, r13.z
                  mul r24.xyzw, r8.xyzw, r22.xyzw
                  ge r8.x, r15.z, l(0.984375)
                  mul r8.y, r15.z, l(1.01587307)
                  mad r8.z, r15.z, l(64.000000), l(-63.000000)
                  movc r8.x, r8.x, r8.z, r8.y
                  max r8.x, r8.x, l(0.00000001)
                  rcp r8.x, r8.x
                  f16tof32 r8.y, r20.x
                  f16tof32 r8.z, r13.x
                  ne r13.z, r8.z, l(1.000000)
                  div r23.xyw, r27.xyxz, r18.wwww
                  mad r14.w, r8.w, r22.w, r27.w
                  mad_sat r25.w, r14.w, r8.z, -r8.z
                  mul r25.xyz, r23.xywx, r25.wwww
                  movc r26.xyzw, r13.zzzz, r25.xyzw, r27.xyzw
                  mov r9.y, r25.w
                  movc r15.yw, r13.zzzz, r9.xxxy, r24.wwww
                  lt r8.z, r8.x, r1.z
                  add r9.y, r1.z, -r8.x
                  mul_sat r9.y, r8.y, r9.y
                  movc r8.z, r8.z, r9.y, l(1.000000)
                  add r21.xy, r0.zwzz, -r8.xxxx
                  mul r8.xy, r8.yyyy, r21.xyxx
                  min r8.xy, |r8.xyxx|, l(1.000000, 1.000000, 0.000000, 0.000000)
                  mul r8.x, r8.x, r8.z
                  mul r8.x, r8.y, r8.x
                  mul r25.xyzw, r8.xxxx, r26.xyzw
                  mul r26.xyzw, r15.yyyy, r25.wxyz
                  if_nz r23.z
                    mul r8.x, r8.x, r15.w
                    ushr r8.y, r21.z, l(31)
                    if_nz r8.y
                      ld_structured_indexable(structured_buffer, stride=48)(mixed,mixed,mixed,mixed) r21.xyz, r14.y, l(24), t3.xyzx
                      ushr r8.y, r21.x, l(28)
                      ishl r8.y, l(1), r8.y
                      ubfe r23.xyz, l(4, 12, 10, 0), l(24, 16, 12, 0), r21.yxzy
                      ishl r8.z, l(1), r23.x
                      and r9.y, r21.y, l(4095)
                      utof r27.xyzw, r8.yzyz
                      mad r8.yz, r18.xxyx, r27.zzwz, l(0.000000, 0.500000, 0.500000, 0.000000)
                      add r14.yw, r27.zzzw, l(0.000000, -0.500000, 0.000000, -0.500000)
                      min r8.yz, r8.yyzy, r14.yywy
                      utof r23.x, r23.y
                      utof r23.y, r9.y
                      add r14.yw, r8.yyyz, r23.xxxy
                      mul r25.xy, r14.ywyy, cb1[84].xyxx
                      utof r25.z, r23.z
                      mul r17.xyzw, r17.xzyw, r27.xyzw
                      sample_d_indexable(texture2darray)(float,float,float,float) r9.y, r25.xyzx, t45.yxzw, s0, r17.xyxx, r17.zwzz
                      lt r13.y, l(0.000000), r13.y
                      if_nz r13.y
                        ubfe r13.y, l(12), l(12), r21.y
                        and r13.z, r21.z, l(4095)
                        utof r21.xy, r13.yzyy
                        add r8.yz, r8.yyzy, r21.xxyx
                        mul r25.xy, r8.yzyy, cb1[84].xyxx
                        sample_d_indexable(texture2darray)(float,float,float,float) r8.y, r25.xyzx, t45.yxzw, s0, r17.xyxx, r17.zwzz
                        add r8.y, -r9.y, r8.y
                        mad r9.y, r15.x, r8.y, r9.y
                      endif 
                    else 
                      mov r9.y, l(1.000000)
                    endif 
                    mul r8.x, r8.x, r9.y
                    ushr r8.y, r13.x, l(16)
                    f16tof32 r8.y, r8.y
                    ubfe r8.z, l(1), l(21), r21.w
                    dp3 r9.y, r24.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
                    max r9.y, r9.y, l(0.000100)
                    max r9.y, r9.y, cb1[85].x
                    mul r9.y, r8.y, r9.y
                    movc r8.y, r8.z, r8.y, r9.y
                    mul r8.x, r8.y, r8.x
                    mad r24.xyz, r22.xyzx, r8.xxxx, r24.xyzx
                  endif 
                  mad r8.x, -r25.w, r15.y, l(1.000000)
                  mul r7.w, r7.w, r8.x
                  lt r8.y, r7.w, l(0.800000)
                  lt r8.z, l(0.200000), r26.x
                  or r8.y, r8.z, r8.y
                  if_nz r8.y
                    ge r8.y, r15.z, l(0.00049219)
                    if_nz r8.y
                      add r8.y, -r15.z, l(1.000000)
                      mov r13.xy, l(4,0,0,0)
                      loop 
                        ige r8.z, r13.y, l(4)
                        breakc_nz r8.z
                        ishl r8.z, r13.y, l(2)
                        ld_structured r8.z, vThreadIDInGroupFlattened.x, r8.z, g0.xxxx
                        ge r8.z, r8.z, r8.y
                        if_nz r8.z
                          mov r13.x, r13.y
                          break 
                        endif 
                        iadd r9.z, r13.y, l(1)
                        mov r13.xy, r9.wzww
                      endloop 
                      store_structured g0.x, vThreadIDInGroupFlattened.x, l(16), l(1000000015047466219876688855040.000000)
                      store_structured g1.x, vThreadIDInGroupFlattened.x, l(16), l(1.000000)
                      ishl r8.z, r13.x, l(2)
                      iadd r9.y, r8.z, l(-4)
                      ld_structured r9.y, vThreadIDInGroupFlattened.x, r9.y, g1.xxxx
                      movc r9.y, r13.x, r9.y, l(1.000000)
                      mov r9.z, l(3)
                      loop 
                        ilt r13.y, r9.z, l(0)
                        breakc_nz r13.y
                        ige r13.y, r9.z, r13.x
                        if_nz r13.y
                          ishl r13.y, r9.z, l(2)
                          iadd r13.z, r13.y, l(4)
                          ld_structured r14.y, vThreadIDInGroupFlattened.x, r13.y, g0.xxxx
                          store_structured g0.x, vThreadIDInGroupFlattened.x, r13.z, r14.y
                          ld_structured r13.y, vThreadIDInGroupFlattened.x, r13.y, g1.xxxx
                          mul r13.y, r8.x, r13.y
                          store_structured g1.x, vThreadIDInGroupFlattened.x, r13.z, r13.y
                        endif 
                        iadd r9.z, r9.z, l(-1)
                      endloop 
                      store_structured g0.x, vThreadIDInGroupFlattened.x, r8.z, r8.y
                      mul r8.x, r8.x, r9.y
                      store_structured g1.x, vThreadIDInGroupFlattened.x, r8.z, r8.x
                      ld_structured r8.x, vThreadIDInGroupFlattened.x, l(16), g0.xxxx
                      ne r8.x, r8.x, l(1000000015047466219876688855040.000000)
                      if_nz r8.x
                        mov r8.x, l(2)
                        loop 
                          ige r8.y, r8.x, l(4)
                          breakc_nz r8.y
                          ishl r8.y, r8.x, l(2)
                          ld_structured r8.z, vThreadIDInGroupFlattened.x, r8.y, g0.xxxx
                          iadd r8.y, r8.y, l(-4)
                          ld_structured r9.y, vThreadIDInGroupFlattened.x, r8.y, g0.xxxx
                          add r8.z, r8.z, -r9.y
                          ld_structured r9.yz, vThreadIDInGroupFlattened.x, r8.y, g1.xxyx
                          add r8.y, -r9.z, r9.y
                          mul r8.y, r8.y, r8.z
                          mov x9[r8.x + 0].x, r8.y
                          iadd r8.x, r8.x, l(1)
                        endloop 
                        mov r8.x, x9[2].x
                        mov r8.y, x9[3].x
                        lt r8.x, r8.y, r8.x
                        movc r8.xy, r8.xxxx, l(3,2,0,0), l(2,1,0,0)
                        mov r8.z, l(2)
                        loop 
                          ige r9.y, r8.z, l(4)
                          breakc_nz r9.y
                          ige r9.y, r8.z, r8.x
                          if_nz r9.y
                            ishl r9.y, r8.z, l(2)
                            iadd r9.z, r9.y, l(4)
                            ld_structured r9.z, vThreadIDInGroupFlattened.x, r9.z, g0.xxxx
                            store_structured g0.x, vThreadIDInGroupFlattened.x, r9.y, r9.z
                          endif 
                          iadd r8.z, r8.z, l(1)
                        endloop 
                        mov r8.x, l(1)
                        loop 
                          ige r8.z, r8.x, l(4)
                          breakc_nz r8.z
                          ige r8.z, r8.x, r8.y
                          if_nz r8.z
                            ishl r8.z, r8.x, l(2)
                            iadd r9.y, r8.z, l(4)
                            ld_structured r9.y, vThreadIDInGroupFlattened.x, r9.y, g1.xxxx
                            store_structured g1.x, vThreadIDInGroupFlattened.x, r8.z, r9.y
                          endif 
                          iadd r8.x, r8.x, l(1)
                        endloop 
                      endif 
                    endif 
                  endif 
                  if_nz r3.w
                    sample_l_indexable(texture2darray)(float,float,float,float) r8.xyz, r18.xyzx, t29.xyzw, s1, l(0.000000)
                    mov r26.x, l(1.000000)
                  else 
                    ushr r9.yz, r20.xxwx, l(0, 16, 16, 0)
                    f16tof32 r15.y, r20.w
                    f16tof32 r15.xz, r9.yyzy
                    ushr r9.yz, r19.yyzy, l(0, 16, 16, 0)
                    f16tof32 r17.xy, r19.yzyy
                    f16tof32 r17.zw, r9.yyyz
                    mul r17.xyz, r26.xxxx, r17.xzyx
                    mov r20.x, r19.w
                    mul r18.xyz, r26.xxxx, r20.xyzx
                    mad r19.xyz, r26.yzwy, r24.xyzx, -r17.xyzx
                    mad r17.xyz, r17.wwww, r19.xyzx, r17.xyzx
                    mad r8.xyz, r17.xyzx, r15.xyzx, r18.xyzx
                  endif 
                  mul r8.xyz, r8.xyzx, cb1[85].yyyy
                  add r9.y, -r26.x, l(1.000000)
                  mad r12.yzw, r16.xxyz, r9.yyyy, r8.xxyz
                endif 
              else 
                mov r12.yzw, r16.xxyz
              endif 
            else 
              mov r12.yzw, r16.xxyz
            endif 
          endloop 
          mov r10.xyzw, r12.xyzw
          mov r0.y, r7.w
          mov r1.x, r13.w
        endloop 
        mov r4.xyzw, r10.yzwx
        mov r1.w, r0.y
        mov r11.w, r1.x
      endif 
    else 
      mov r11.w, l(0)
    endif 
    add_sat r0.x, -r1.w, l(0.800000)
    mad r0.x, -r0.x, l(1.250000), l(1.000000)
    mul r0.x, r3.z, r0.x
    store_uav_typed u4.xyzw, vThreadID.xyyy, r0.xxxx
    ge r0.x, l(0.900000), r0.x
    if_nz r0.x
      ld_structured r0.xyzw, vThreadIDInGroupFlattened.x, l(0), g0.xyzw
      ld_structured r1.xyzw, vThreadIDInGroupFlattened.x, l(0), g1.xyzw
      add r0.xyzw, -r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      ge r2.xyzw, r0.xyzw, l(0.984375, 0.984375, 0.984375, 0.984375)
      mul r3.xy, r0.xyxx, l(1.01587307, 1.01587307, 0.000000, 0.000000)
      mad r0.xy, r0.xyxx, l(64.000000, 64.000000, 0.000000, 0.000000), l(-63.000000, -63.000000, 0.000000, 0.000000)
      movc r0.xy, r2.xyxx, r0.xyxx, r3.xyxx
      max r0.xy, r0.xyxx, l(0.00000001, 0.00000001, 0.000000, 0.000000)
      rcp r3.xy, r0.xyxx
      mul r0.xy, r0.zwzz, l(1.01587307, 1.01587307, 0.000000, 0.000000)
      mad r0.zw, r0.zzzw, l(0.000000, 0.000000, 64.000000, 64.000000), l(0.000000, 0.000000, -63.000000, -63.000000)
      movc r0.xy, r2.zwzz, r0.zwzz, r0.xyxx
      max r0.xy, r0.xyxx, l(0.00000001, 0.00000001, 0.000000, 0.000000)
      rcp r3.zw, r0.xxxy
      mul r0.xyzw, r3.xyzw, l(0.000500, 0.000500, 0.000500, 0.000500)
      min r0.xyzw, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      store_uav_typed u2.xyzw, vThreadID.xyyy, r0.xyzw
      store_uav_typed u3.xyzw, vThreadID.xyyy, r1.xyzw
    endif 
    mov r11.xyz, r4.xyzx
    mov r0.x, r4.w
    loop 
      break 
    endloop 
    store_uav_typed u5.xyzw, vThreadID.xyyy, r11.xyzw
  endif 
endif 
ret 
// Approximately 2241 instruction slots used
