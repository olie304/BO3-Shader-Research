//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:41:39 2021
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float3 colorTint;                  // Offset:  160 Size:    12
//   float baseNormalHeight;            // Offset:  172 Size:     4
//   float2 glossRange;                 // Offset:  176 Size:     8
//   float rowCount;                    // Offset:  184 Size:     4
//   float columnCount;                 // Offset:  188 Size:     4
//   float imageTime;                   // Offset:  192 Size:     4
//   float2 rotateUVs;                  // Offset:  196 Size:     8
//   float2 scrollUVs;                  // Offset:  208 Size:     8
//   float2 scaleUVs;                   // Offset:  216 Size:     8
//   float2 offsetUVs;                  // Offset:  224 Size:     8
//   float2 zoomUVs;                    // Offset:  232 Size:     8
//   float zoomRate;                    // Offset:  240 Size:     4
//   float layerDepth;                  // Offset:  244 Size:     4 [unused]
//   bool clampU;                       // Offset:  248 Size:     4
//   bool clampV;                       // Offset:  252 Size:     4
//   float2 flickerSeed;                // Offset:  256 Size:     8
//   float flickerSpeed;                // Offset:  264 Size:     4
//   float2 flickerRange;               // Offset:  272 Size:     8
//   float flickerPower;                // Offset:  280 Size:     4
//   bool relativeHDR;                  // Offset:  284 Size:     4
//   bool invertFalloff;                // Offset:  288 Size:     4
//   float hdrScale;                    // Offset:  292 Size:     4
//   float emissiveFalloffPower;        // Offset:  296 Size:     4
//   float zFeatherDistance;            // Offset:  300 Size:     4
//   float falloffBegin;                // Offset:  304 Size:     4 [unused]
//   float falloffEnd;                  // Offset:  308 Size:     4 [unused]
//   float alphaCooling;                // Offset:  312 Size:     4
//   float coolingFactor;               // Offset:  316 Size:     4
//   float uvMotionToggle1;             // Offset:  320 Size:     4
//   float2 distortionRotateUVs;        // Offset:  324 Size:     8
//   float2 distortionScrollUVs;        // Offset:  336 Size:     8
//   float2 distortionScaleUVs;         // Offset:  344 Size:     8
//   float2 distortionOffsetUVs;        // Offset:  352 Size:     8
//   float2 distortionZoomUVs;          // Offset:  360 Size:     8
//   float distortionZoomRate;          // Offset:  368 Size:     4
//   float distortionAmount;            // Offset:  372 Size:     4
//   float2 maskRotateUVs;              // Offset:  376 Size:     8
//   float2 maskScrollUVs;              // Offset:  384 Size:     8
//   float2 maskScaleUVs;               // Offset:  392 Size:     8
//   float2 maskOffsetUVs;              // Offset:  400 Size:     8
//   float2 maskZoomUVs;                // Offset:  408 Size:     8
//   float maskZoomRate;                // Offset:  416 Size:     4
//   bool noReceiveShadow;              // Offset:  420 Size:     4
//   uint zFeatherComputeSprites;       // Offset:  424 Size:     4 [unused]
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16 [unused]
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16
//   float4 debugNormalOverride;        // Offset:  960 Size:    16
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16
//   float4 debugGlossOverride;         // Offset:  992 Size:    16
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// colorSampler                      sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// normalSampler                     sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// lookupSampler                     sampler      NA          NA             s5      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// floatZSampler                     texture  float4          2d             t0      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// colorMap                          texture  float4          2d            t21      1 
// tintMask                          texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// normalMap                         texture  float4          2d            t24      1 
// flickerLookupMap                  texture  float4          2d            t25      1 
// emissiveMap                       texture  float4          2d            t26      1 
// alphaMask                         texture  float4          2d            t29      1 
// distortionMap                     texture  float4          2d            t30      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyz 
// COLOR                    0   xyz         1     NONE   float   xyz 
// COLOR                    1      w        1     NONE   float      w
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 9     zw        2     NONE   float     zw
// UVOFFSETS                0   xyz         3     NONE   float   xyz 
// TEXCOORD                 1   xyz         4     NONE   float   xyz 
// TEXCOORD                 2   xyz         5     NONE   float   xyz 
// TEXCOORD                 3   xyz         6     NONE   float   xyz 
// OFFPOSITION              0   xyz         7     NONE   float   xyz 
// SV_IsFrontFace           0   x           8    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[27], immediateIndexed
dcl_constantbuffer CB1[93], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2d (float,float,float,float) t26
dcl_resource_texture2d (float,float,float,float) t29
dcl_resource_texture2d (float,float,float,float) t30
dcl_resource_texture2darray (float,float,float,float) t31
dcl_input_ps_siv linear noperspective v0.xyz, position
dcl_input_ps linear v1.xyz
dcl_input_ps linear v1.w
dcl_input_ps linear v2.xy
dcl_input_ps linear v2.zw
dcl_input_ps constant v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyz
dcl_input_ps_sgv constant v8.x, is_front_face
dcl_output o0.xyzw
dcl_temps 47
add r0.xy, v2.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r0.zw, cb0[21].zzzw, cb0[22].xxxy
mad r0.zw, r0.xxxy, cb0[21].zzzw, r0.zzzw
mad r1.x, cb0[20].z, cb1[69].w, l(1.000000)
mul r1.x, r1.x, cb0[20].y
mul r1.x, r1.x, l(0.01745329)
sincos r1.x, r2.x, r1.x
mov r2.y, r2.x
mov r2.z, r1.x
dp2 r3.x, r2.yzyy, r0.zwzz
mov r2.x, -r1.x
dp2 r3.y, r2.xyxx, r0.zwzz
mul r0.zw, cb0[21].xxxy, cb1[69].wwww
mad r0.zw, r0.zzzw, cb0[21].zzzw, r3.xxxy
mul r1.x, cb0[23].x, cb1[69].w
sincos null, r1.x, r1.x
mad r1.x, r1.x, l(0.500000), l(0.500000)
add r1.x, -r1.x, l(1.000000)
add r1.y, -cb0[22].z, cb0[22].w
mad r1.x, r1.x, r1.y, cb0[22].z
div r0.zw, r0.zzzw, r1.xxxx
add r0.zw, r0.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
sample_indexable(texture2d)(float,float,float,float) r0.zw, r0.zwzz, t30.zwxy, s3
mad r0.zw, r0.zzzw, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
lt r1.x, l(0.500000), cb0[20].x
if_nz r1.x
  mul r1.y, cb0[11].w, cb0[11].z
  mul r1.z, r1.y, cb0[12].x
  mul r1.w, r1.z, cb1[69].w
  ge r1.w, r1.w, -r1.w
  movc r1.w, r1.w, r1.z, -r1.z
  div r2.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  mul r2.x, r2.x, cb1[69].w
  frc r2.x, r2.x
  mul r1.w, r1.w, r2.x
  div r1.z, r1.w, r1.z
  mul r1.y, r1.y, r1.z
  round_ne r1.y, r1.y
  div r1.z, r1.y, cb0[11].w
  mul r1.w, r1.y, cb0[11].w
  ge r1.w, r1.w, -r1.w
  movc r1.w, r1.w, cb0[11].w, -cb0[11].w
  div r2.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  mul r1.y, r1.y, r2.x
  frc r1.y, r1.y
  mul r1.y, r1.y, r1.w
  round_z r1.y, r1.y
  add r1.y, r1.y, v2.x
  div r2.x, r1.y, cb0[11].w
  round_z r1.y, r1.z
  add r1.y, r1.y, v2.y
  div r2.y, r1.y, cb0[11].z
else 
  dp3 r1.y, -v7.xyzx, -v7.xyzx
  rsq r1.y, r1.y
  mul r1.yzw, r1.yyyy, -v7.xxyz
  dp3 r3.x, r1.yzwy, v5.xyzx
  dp3 r3.y, r1.yzwy, v6.xyzx
  dp3 r1.y, r1.yzwy, v4.xyzx
  lt r1.z, l(0.000000), r1.y
  div r1.yw, -r3.xxxy, r1.yyyy
  and r1.yz, r1.yywy, r1.zzzz
  mul r1.yz, r1.yyzy, cb0[13].zzwz
  mul r1.yz, r1.yyzy, l(0.000000, 0.000010, 0.000010, 0.000000)
  mad r1.yz, r0.xxyx, cb0[13].zzwz, r1.yyzy
  mad r1.yz, cb0[14].xxyx, cb0[13].zzwz, r1.yyzy
  mad r1.w, cb0[12].z, cb1[69].w, l(1.000000)
  mul r1.w, r1.w, cb0[12].y
  mul r1.w, r1.w, l(0.01745329)
  sincos r3.x, r4.x, r1.w
  mov r4.y, r4.x
  mov r4.z, r3.x
  dp2 r5.x, r4.yzyy, r1.yzyy
  mov r4.x, -r3.x
  dp2 r5.y, r4.xyxx, r1.yzyy
  mul r1.yz, cb0[13].xxyx, cb1[69].wwww
  mad r1.yz, r1.yyzy, cb0[13].zzwz, r5.xxyx
  mul r1.w, cb0[15].x, cb1[69].w
  sincos null, r1.w, r1.w
  mad r1.w, r1.w, l(0.500000), l(0.500000)
  add r1.w, -r1.w, l(1.000000)
  add r2.z, -cb0[14].z, cb0[14].w
  mad r1.w, r1.w, r2.z, cb0[14].z
  div r1.yz, r1.yyzy, r1.wwww
  add r1.yz, r1.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
  mov_sat r2.zw, r1.yyyz
  movc r2.xy, cb0[15].zwzz, r2.zwzz, r1.yzyy
endif 
mad r1.yz, r0.zzwz, cb0[23].yyyy, r2.xxyx
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.yzyy, t21.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r1.w, r1.yzyy, t22.yzwx, s1
add r3.xyz, cb0[10].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r3.xyz, r1.wwww, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r2.xyz, r2.xyzx, r3.xyzx
mul r2.xyz, r2.xyzx, v1.xyzx
mul r1.w, r2.w, v1.w
add r3.x, -cb0[11].x, cb0[11].y
mul_sat r3.y, cb0[11].y, l(0.05882353)
sample_indexable(texture2d)(float,float,float,float) r4.xyz, r1.yzyy, t24.xyzw, s3
add r4.xyz, r4.xyzx, l(-0.500000, -0.500000, -0.000000, 0.000000)
mad r4.xyz, cb0[10].wwww, r4.xyzx, l(0.500000, 0.500000, 0.000000, 0.000000)
mad r3.zw, r4.xxxy, l(0.000000, 0.000000, 1.99218750, 1.99218750), l(0.000000, 0.000000, -1.000000, -1.000000)
dp2 r4.x, r3.zwzz, r3.zwzz
add r4.x, -r4.x, l(1.000000)
max r4.x, r4.x, l(0.000000)
sqrt r4.x, r4.x
mul r4.y, r4.z, r4.z
mul r4.y, r4.y, l(0.33333334)
min r4.y, r4.y, l(1.000000)
movc r4.z, v8.x, l(1.000000), l(-1.000000)
dp3 r4.w, v4.xyzx, v4.xyzx
rsq r4.w, r4.w
mul r5.xyz, r4.wwww, v4.xyzx
mul r5.xyz, r4.zzzz, r5.xyzx
dp3 r4.w, v5.xyzx, v5.xyzx
rsq r4.w, r4.w
mul r6.xyz, r4.wwww, v5.xyzx
mul r6.xyz, r4.zzzz, r6.xyzx
dp3 r4.w, v6.xyzx, v6.xyzx
rsq r4.w, r4.w
mul r7.xyz, r4.wwww, v6.xyzx
mul r7.xyz, r4.zzzz, r7.xyzx
mul r3.y, r3.y, l(-17.000000)
exp r3.y, r3.y
add r3.y, r3.y, r4.y
log r3.y, r3.y
mul r3.y, r3.y, l(-0.05882353)
mul r7.xyz, r3.wwww, r7.xyzx
mad r6.xyz, r6.xyzx, r3.zzzz, r7.xyzx
mad r4.xzw, r5.xxyz, r4.xxxx, r6.xxyz
dp3 r3.z, r4.xzwx, r4.xzwx
rsq r3.z, r3.z
mul r4.xzw, r3.zzzz, r4.xxzw
mad r3.x, cb1[62].x, r3.x, cb0[11].x
mul_sat r3.x, r3.x, l(0.05882353)
mul r3.x, r3.x, l(-17.000000)
exp r3.x, r3.x
add r3.x, r3.x, r4.y
log r3.x, r3.x
mul r3.x, r3.x, l(-0.05882353)
max r3.xy, r3.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r3.z, l(0.000000), cb1[64].w
if_nz r3.z
  ftoi r3.z, cb1[64].w
  lod r3.w, r1.yzyy, t21.y, s1
  lod r1.y, r1.yzyy, t21.x, s1
  lt r1.z, r3.w, r1.y
  lt r1.y, l(0.000000), r1.y
  and r5.xyz, r3.zzzz, l(1, 2, 4, 0)
  movc r6.xyz, r5.xxxx, l(1.000000,0,1.000000,0), r2.xyzx
  movc r5.xyw, r5.yyyy, l(0,1.000000,0,1.000000), r2.xyxz
  movc r5.xyw, r1.yyyy, r6.xyxz, r5.xyxw
  movc r6.xyz, r5.zzzz, l(0,1.000000,0,0), r2.xyzx
  movc r2.xyz, r1.zzzz, r5.xywx, r6.xyzx
endif 
add r5.xyz, -r2.xyzx, cb1[58].xyzx
mad r2.xyz, cb1[58].wwww, r5.xyzx, r2.xyzx
mad r1.y, -r2.w, v1.w, cb1[59].x
mad r1.y, cb1[59].w, r1.y, r1.w
add r5.xyz, cb1[61].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r5.xyz, cb1[61].wwww, r5.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
add r1.z, -r3.y, r3.x
mad r3.y, cb1[62].w, r1.z, r3.y
add r1.z, cb1[63].x, l(-1.000000)
mad r1.z, cb1[63].w, r1.z, l(1.000000)
movc r6.xyz, v8.xxxx, v4.xyzx, -v4.xyzx
dp3 r1.w, r6.xyzx, r6.xyzx
rsq r1.w, r1.w
mad r6.xyz, r6.xyzx, r1.wwww, -r4.xzwx
mad r4.xyz, cb1[60].wwww, r6.xyzx, r4.xzwx
dp3 r1.w, -v7.xyzx, -v7.xyzx
rsq r1.w, r1.w
mul r6.xyz, r1.wwww, -v7.xyzx
dp3 r2.w, r6.xyzx, v4.xyzx
if_nz r1.x
  mul r1.x, cb0[11].w, cb0[11].z
  mul r3.z, r1.x, cb0[12].x
  mul r3.w, r3.z, cb1[69].w
  ge r3.w, r3.w, -r3.w
  movc r3.w, r3.w, r3.z, -r3.z
  div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  mul r5.w, r5.w, cb1[69].w
  frc r5.w, r5.w
  mul r3.w, r3.w, r5.w
  div r3.z, r3.w, r3.z
  mul r1.x, r1.x, r3.z
  round_ne r1.x, r1.x
  div r3.z, r1.x, cb0[11].w
  mul r3.w, r1.x, cb0[11].w
  ge r3.w, r3.w, -r3.w
  movc r3.w, r3.w, cb0[11].w, -cb0[11].w
  div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  mul r1.x, r1.x, r5.w
  frc r1.x, r1.x
  mul r1.x, r1.x, r3.w
  round_z r1.x, r1.x
  add r1.x, r1.x, v2.x
  div r7.x, r1.x, cb0[11].w
  round_z r1.x, r3.z
  add r1.x, r1.x, v2.y
  div r7.y, r1.x, cb0[11].z
else 
  mul r3.zw, cb0[13].zzzw, cb0[14].xxxy
  mad r3.zw, r0.xxxy, cb0[13].zzzw, r3.zzzw
  mad r1.x, cb0[12].z, cb1[69].w, l(1.000000)
  mul r1.x, r1.x, cb0[12].y
  mul r1.x, r1.x, l(0.01745329)
  sincos r1.x, r8.x, r1.x
  mov r8.y, r8.x
  mov r8.z, r1.x
  dp2 r9.x, r8.yzyy, r3.zwzz
  mov r8.x, -r1.x
  dp2 r9.y, r8.xyxx, r3.zwzz
  mul r3.zw, cb0[13].xxxy, cb1[69].wwww
  mad r3.zw, r3.zzzw, cb0[13].zzzw, r9.xxxy
  mul r1.x, cb0[15].x, cb1[69].w
  sincos null, r1.x, r1.x
  mad r1.x, r1.x, l(0.500000), l(0.500000)
  add r1.x, -r1.x, l(1.000000)
  add r5.w, -cb0[14].z, cb0[14].w
  mad r1.x, r1.x, r5.w, cb0[14].z
  div r3.zw, r3.zzzw, r1.xxxx
  add r3.zw, r3.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
  mov_sat r7.zw, r3.zzzw
  movc r7.xy, cb0[15].zwzz, r7.zwzz, r3.zwzz
endif 
mad r3.zw, r0.zzzw, cb0[23].yyyy, r7.xxxy
sample_indexable(texture2d)(float,float,float,float) r7.xyzw, r3.zwzz, t26.xyzw, s1
mul r7.xyz, r7.xyzx, cb0[10].xyzx
mov_sat r8.xyz, r7.xyzx
log r8.xyz, r8.xyzx
mul r8.xyz, r8.xyzx, cb0[19].zzzz
exp r8.xyz, r8.xyzx
mov_sat r1.x, r2.w
log r3.z, r1.x
mul r3.z, r3.z, cb0[18].z
exp r3.z, r3.z
add r1.x, -r1.x, l(1.000000)
log r1.x, r1.x
mul r1.x, r1.x, cb0[18].z
exp r1.x, r1.x
movc r1.x, cb0[18].x, r1.x, r3.z
eq r3.zw, cb0[18].zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
movc r1.x, r3.z, l(1.000000), r1.x
mul r3.z, r7.w, cb0[18].y
mul r1.x, r1.x, r3.z
mul r7.xyz, r1.xxxx, r7.xyzx
mul r8.xyz, r1.xxxx, r8.xyzx
add r1.x, v3.y, v3.x
add r1.x, r1.x, v3.z
add r1.x, r1.x, cb0[16].y
frc r1.x, r1.x
mad r9.y, cb1[69].w, cb0[16].z, r1.x
mov r9.x, cb0[16].x
sample_l_indexable(texture2d)(float,float,float,float) r1.x, r9.xyxx, t25.xyzw, s5, l(0.000000)
log r1.x, |r1.x|
mul r1.x, r1.x, cb0[17].z
exp r1.x, r1.x
add r3.z, -cb0[17].x, cb0[17].y
mad r1.x, r1.x, r3.z, cb0[17].x
mul r9.xyz, r1.xxxx, r7.xyzx
div r9.xyz, r9.xyzx, cb0[18].yyyy
dp3_sat r3.z, r9.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
add r1.y, r1.y, r3.z
mul r9.xy, cb0[24].zwzz, cb0[25].xyxx
mad r0.xy, r0.xyxx, cb0[24].zwzz, r9.xyxx
mad r3.z, cb1[69].w, cb0[23].w, l(1.000000)
mul r3.z, r3.z, cb0[23].z
mul r3.z, r3.z, l(0.01745329)
sincos r9.x, r10.x, r3.z
mov r10.y, r10.x
mov r10.z, r9.x
dp2 r11.x, r10.yzyy, r0.xyxx
mov r10.x, -r9.x
dp2 r11.y, r10.xyxx, r0.xyxx
mul r0.xy, cb0[24].xyxx, cb1[69].wwww
mad r0.xy, r0.xyxx, cb0[24].zwzz, r11.xyxx
mul r3.z, cb0[26].x, cb1[69].w
sincos null, r3.z, r3.z
mad r3.z, r3.z, l(0.500000), l(0.500000)
add r3.z, -r3.z, l(1.000000)
add r5.w, -cb0[25].z, cb0[25].w
mad r3.z, r3.z, r5.w, cb0[25].z
div r0.xy, r0.xyxx, r3.zzzz
add r0.xy, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
mov_sat r9.xy, r0.xyxx
movc r0.xy, cb0[15].zwzz, r9.xyxx, r0.xyxx
mad r0.xy, r0.zwzz, cb0[23].yyyy, r0.xyxx
sample_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t29.xyzw, s1
mul r0.x, r0.x, r1.y
mul r0.y, r2.w, r2.w
mad_sat r0.y, r0.y, v2.z, v2.w
mul r0.x, r0.y, r0.x
ftoi r9.xy, v0.xyxx
mov r9.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.y, r9.xyzw, t0.yxzw
ge r0.z, r0.y, l(0.984375)
mul r0.w, r0.y, l(1.01587307)
mad r0.y, r0.y, l(64.000000), l(-63.000000)
movc r0.y, r0.z, r0.y, r0.w
max r0.y, r0.y, l(0.00000001)
ge r0.z, v0.z, l(0.984375)
mul r0.w, v0.z, l(1.01587307)
mad r1.y, v0.z, l(64.000000), l(-63.000000)
movc r0.z, r0.z, r1.y, r0.w
max r0.z, r0.z, l(0.00000001)
rcp r0.yz, r0.yyzy
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[18].w
movc r0.w, r3.w, l(60000.000000), r0.w
add r0.y, -r0.z, r0.y
mul_sat r0.y, r0.w, r0.y
mul r0.x, r0.y, r0.x
ftou r0.yw, v0.xxxy
ine r1.y, cb1[92].x, l(0)
utof r3.zw, r0.wwwy
dp2 r2.w, r3.wzww, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r2.w, r2.w
mul r2.w, r2.w, l(52.982918)
frc r2.w, r2.w
mad r2.w, r2.w, l(6.28318548), cb1[70].w
sincos r9.x, r10.x, r2.w
dp2 r2.w, r3.zwzz, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r2.w, r2.w
mul r2.w, r2.w, l(52.982918)
frc r2.w, r2.w
mad r2.w, r2.w, l(6.28318548), cb1[70].w
sincos r11.x, r12.x, r2.w
dp3_sat r3.x, r4.xyzx, r6.xyzx
dp3 r2.w, -r6.xyzx, r4.xyzx
add r2.w, r2.w, r2.w
mad r13.xyz, r4.xyzx, -r2.wwww, -r6.xyzx
mul r2.w, r3.y, l(17.000000)
exp r2.w, r2.w
add r2.w, r2.w, l(2.000000)
div r2.w, l(2.000000), r2.w
sqrt r3.z, r2.w
add r3.w, -r3.y, l(1.000000)
mul r5.w, r3.w, l(5.000000)
mad r6.w, r3.w, l(5.000000), l(-2.500000)
mul_sat r6.w, r6.w, l(0.400000)
mul r6.w, r6.w, l(100.000000)
mad r9.zw, -r3.wwww, l(0.000000, 0.000000, 10.000000, 5.000000), l(0.000000, 0.000000, 6.857410, 7.085000)
exp r7.w, r9.z
mul r7.w, r3.x, r7.w
mul r7.w, r7.w, l(9.136810)
mul r8.w, r3.w, r5.w
mad r8.w, -r8.w, l(2.015905), r9.w
exp r8.w, r8.w
mul r8.w, r3.x, r8.w
mul r8.w, r8.w, l(9.708090)
max r7.w, r7.w, r8.w
max r7.w, r7.w, l(1.268160)
mul r0.z, r0.z, l(0.00781250)
min r0.z, r0.z, l(15.000000)
ftou r0.z, r0.z
ushr r14.xy, r0.ywyy, l(6, 6, 0, 0)
ishl r14.z, r0.z, l(4)
mov r15.xy, l(0,0,0,0)
mov r16.w, l(0)
mov r17.yz, l(0,0,1.000000,0)
mov r18.xy, l(0,0,0,0)
mov r19.xy, l(0,0,0,0)
mov r20.xy, l(0,0,0,0)
mov r21.x, l(1.000000)
mov r22.xyzw, l(0,0,0,0)
mov r23.yzw, l(0,0,0,0)
mov r0.yz, l(0,0,0,0)
loop 
  uge r0.w, r0.z, cb2[0].y
  breakc_nz r0.w
  ushr r15.z, r0.z, l(5)
  iadd r16.xyz, r14.xyzx, r15.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r0.w, r16.xyzw, t7.yzwx
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r0.z, l(0), t15.wxyz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r0.z, l(16), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r0.z, l(32), t15.yxwz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r0.z, l(48), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r0.z, l(64), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r0.z, l(80), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r9.zw, r0.z, l(96), t15.xxxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r0.z, l(116), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r0.z, l(132), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r0.z, l(148), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r0.z, l(164), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r0.z, l(180), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r0.z, l(196), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xy, r0.z, l(212), t15.xyxx
  add r11.yzw, -r24.yyzw, v7.xxyz
  dp3 r8.w, r11.yzwy, r11.yzwy
  sqrt r8.w, r8.w
  ge r8.w, cb2[54].y, r8.w
  and r10.w, r30.y, l(0x0000ffff)
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r10.w, l(0), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r38.xyzw, r10.w, l(16), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r39.xyzw, r10.w, l(32), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r40.xyzw, r10.w, l(48), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r41.xyzw, r10.w, l(64), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r42.xyzw, r10.w, l(80), t16.xyzw
  dp3 r12.y, r37.xyzx, r11.yzwy
  add_sat r12.y, r37.w, r12.y
  dp3 r12.z, r38.xyzx, r11.yzwy
  add_sat r12.z, r38.w, r12.z
  mul r12.y, r12.z, r12.y
  dp3 r12.z, r39.xyzx, r11.yzwy
  add_sat r12.z, r39.w, r12.z
  mul r12.y, r12.z, r12.y
  dp3 r12.z, r40.xyzx, r11.yzwy
  add_sat r12.z, r40.w, r12.z
  mul r12.y, r12.z, r12.y
  dp3 r12.z, r41.xyzx, r11.yzwy
  add_sat r12.z, r41.w, r12.z
  mul r12.y, r12.z, r12.y
  dp3 r12.z, r42.xyzx, r11.yzwy
  add_sat r12.z, r42.w, r12.z
  mul r17.x, r12.z, r12.y
  and r12.y, r9.z, l(1)
  movc r12.yz, r12.yyyy, r17.xxyx, r17.zzxz
  mov r16.xy, r30.zwzz
  mov r16.z, r31.z
  dp3 r12.w, r13.xyzx, r16.xyzx
  dp3 r14.w, r11.yzwy, r16.xyzx
  add r14.w, -r31.w, r14.w
  ge r15.z, r14.w, l(0.000000)
  max r14.w, r6.w, |r14.w|
  movc r14.w, r15.z, r14.w, -r14.w
  max r12.w, -r12.w, l(0.00000010)
  div r12.w, r14.w, r12.w
  min r12.w, |r12.w|, l(131072.000000)
  mov r31.z, r32.z
  dp3 r14.w, r13.xyzx, r31.xyzx
  dp3 r15.z, r11.yzwy, r31.xyzx
  add r15.z, -r32.w, r15.z
  ge r15.w, r15.z, l(0.000000)
  max r15.z, r6.w, |r15.z|
  movc r15.z, r15.w, r15.z, -r15.z
  max r14.w, -r14.w, l(0.00000010)
  div r14.w, r15.z, r14.w
  min r12.w, r12.w, |r14.w|
  mov r32.z, r33.z
  dp3 r14.w, r13.xyzx, r32.xyzx
  dp3 r15.z, r11.yzwy, r32.xyzx
  add r15.z, -r33.w, r15.z
  ge r15.w, r15.z, l(0.000000)
  max r15.z, r6.w, |r15.z|
  movc r15.z, r15.w, r15.z, -r15.z
  max r14.w, -r14.w, l(0.00000010)
  div r14.w, r15.z, r14.w
  min r12.w, r12.w, |r14.w|
  mov r33.z, r34.z
  dp3 r14.w, r13.xyzx, r33.xyzx
  dp3 r15.z, r11.yzwy, r33.xyzx
  add r15.z, -r34.w, r15.z
  ge r15.w, r15.z, l(0.000000)
  max r15.z, r6.w, |r15.z|
  movc r15.z, r15.w, r15.z, -r15.z
  max r14.w, -r14.w, l(0.00000010)
  div r14.w, r15.z, r14.w
  min r12.w, r12.w, |r14.w|
  mov r34.z, r35.x
  dp3 r14.w, r13.xyzx, r34.xyzx
  dp3 r15.z, r11.yzwy, r34.xyzx
  add r15.z, -r35.y, r15.z
  ge r15.w, r15.z, l(0.000000)
  max r15.z, r6.w, |r15.z|
  movc r15.z, r15.w, r15.z, -r15.z
  max r14.w, -r14.w, l(0.00000010)
  div r14.w, r15.z, r14.w
  min r12.w, r12.w, |r14.w|
  mov r36.zw, r35.zzzw
  dp3 r14.w, r13.zxyz, r36.xzwx
  dp3 r15.z, r11.wyzw, r36.xzwx
  add r15.z, -r36.y, r15.z
  ge r15.w, r15.z, l(0.000000)
  max r15.z, r6.w, |r15.z|
  movc r15.z, r15.w, r15.z, -r15.z
  max r14.w, -r14.w, l(0.00000010)
  div r14.w, r15.z, r14.w
  min r12.w, r12.w, |r14.w|
  mov r16.x, r27.w
  mov r16.yz, r28.zzwz
  add r16.xyz, r11.yzwy, r16.xyzx
  mad r16.xyz, r13.xyzx, r12.wwww, r16.xyzx
  dp3 r14.w, r16.xyzx, r16.xyzx
  sqrt r14.w, r14.w
  div r12.w, r12.w, r14.w
  add r12.w, r12.w, r12.w
  sqrt r12.w, r12.w
  mad r12.w, r3.w, l(5.000000), r12.w
  add r12.w, r12.w, l(-0.844800)
  mov r24.y, r25.z
  mov r24.z, r26.x
  dp3 r31.x, r16.xyzx, r24.xyzx
  mov r32.xy, r25.xwxx
  mov r32.z, r26.w
  dp3 r31.y, r16.xyzx, r32.xyzx
  mov r26.x, r25.y
  dp3 r31.z, r16.xyzx, r26.xyzx
  ubfe r15.zw, l(0, 0, 6, 9), l(0, 0, 25, 16), r30.yyyy
  utof r31.w, r15.w
  sample_l_indexable(texturecubearray)(float,float,float,float) r16.xyz, r31.xyzw, t8.xyzw, s2, r12.w
  and r25.xyz, r16.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
  ieq r25.xyz, r25.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
  or r12.w, r25.y, r25.x
  or r12.w, r25.z, r12.w
  movc r16.xyz, r12.wwww, l(1.000000,1.000000,0,0), r16.xyzx
  dp3 r25.x, r11.yzwy, r24.xyzx
  dp3 r25.y, r11.yzwy, r32.xyzx
  dp3 r25.z, r11.yzwy, r26.xyzx
  mad_sat r25.xyz, r25.xyzx, r27.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mov r28.z, r29.x
  mad r25.xyz, r25.xyzx, r28.xyzx, r29.yzwy
  dp3 r31.x, r4.xyzx, r24.xyzx
  dp3 r31.y, r4.xyzx, r32.xyzx
  dp3 r31.z, r4.xyzx, r26.xyzx
  lt r24.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r31.xyzx
  movc r18.z, r24.x, l(0), l(0.500000)
  add r26.xyz, r18.xyzx, r25.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r26.xyz, r26.xyzx, t17.xyzw, s4, l(0.000000)
  movc r19.z, r24.y, l(0), l(0.500000)
  add r24.xyw, r19.xyxz, r25.xyxz
  sample_l_indexable(texture3d)(float,float,float,float) r24.xyw, r24.xywx, t18.xywz, s4, l(0.000000)
  movc r20.z, r24.z, l(0), l(0.500000)
  add r25.xyz, r20.xyzx, r25.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r25.xyz, r25.xyzx, t19.xyzw, s4, l(0.000000)
  mul r27.xyz, r31.xyzx, r31.xyzx
  sample_l_indexable(texturecubearray)(float,float,float,float) r28.xyz, r31.xyzw, t8.xyzw, s2, l(6.000000)
  and r29.xyz, r28.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
  ieq r29.xyz, r29.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
  or r12.w, r29.y, r29.x
  or r12.w, r29.z, r12.w
  movc r28.xyz, r12.wwww, l(1.000000,1.000000,0,0), r28.xyzx
  mov r29.xyzw, r22.xyzw
  mov r30.yzw, r23.yyzw
  mov r12.w, r0.y
  mov r14.w, r0.w
  loop 
    breakc_z r14.w
    firstbit_lo r15.w, r14.w
    ishl r15.w, l(1), r15.w
    and r17.x, r14.w, r15.w
    if_nz r17.x
      not r15.w, r15.w
      and r14.w, r14.w, r15.w
      if_nz r8.w
        mov r15.w, r9.z
        mov r31.xy, r12.yzyy
        mov r17.x, l(1)
        loop 
          ige r17.w, r17.x, r15.z
          breakc_nz r17.w
          iadd r17.w, r10.w, r17.x
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r17.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r17.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r17.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r17.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r17.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r17.w, l(80), t16.xyzw
          dp3 r17.w, r32.xyzx, r11.yzwy
          add_sat r17.w, r32.w, r17.w
          mul r17.w, r17.w, r31.x
          dp3 r18.z, r33.xyzx, r11.yzwy
          add_sat r18.z, r33.w, r18.z
          mul r17.w, r17.w, r18.z
          dp3 r18.z, r34.xyzx, r11.yzwy
          add_sat r18.z, r34.w, r18.z
          mul r17.w, r17.w, r18.z
          dp3 r18.z, r35.xyzx, r11.yzwy
          add_sat r18.z, r35.w, r18.z
          mul r17.w, r17.w, r18.z
          dp3 r18.z, r36.xyzx, r11.yzwy
          add_sat r18.z, r36.w, r18.z
          mul r17.w, r17.w, r18.z
          dp3 r18.z, r37.xyzx, r11.yzwy
          add_sat r18.z, r37.w, r18.z
          mul r31.x, r17.w, r18.z
          ushr r18.w, r15.w, l(2)
          ubfe r19.z, l(1), l(2), r15.w
          and r19.w, r18.w, l(2)
          max r20.z, r31.x, r31.y
          mad r17.w, -r17.w, r18.z, l(1.000000)
          mul r17.w, r17.w, r31.y
          movc r21.y, r19.w, r17.w, r20.z
          movc r31.xy, r19.zzzz, r31.xyxx, r21.xyxx
          iadd r17.x, r17.x, l(1)
          mov r15.w, r18.w
        endloop 
        mov_sat r31.y, r31.y
        mul r15.w, r9.w, r31.y
        lt r17.x, l(0.000000), r15.w
        if_nz r17.x
          mad r32.z, r31.y, r9.w, r30.w
          mul r15.w, r30.x, r15.w
          mul r21.yzw, r15.wwww, r27.xxyz
          mul r31.xzw, r21.zzzz, r24.xxyw
          mad r31.xzw, r26.xxyz, r21.yyyy, r31.xxzw
          mad r21.yzw, r25.xxyz, r21.wwww, r31.xxzw
          mul r31.xzw, r28.xxyz, r21.yyzw
          dp3 r17.x, r31.xzwx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r33.xyz, r21.yzwy, r28.xyzx, r29.xyzx
          mul r17.w, r7.w, r17.x
          mul r21.yzw, r15.wwww, r16.xxyz
          dp3 r15.w, r21.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r15.w, r7.w, r17.x, r15.w
          div r15.w, r17.w, r15.w
          mov r34.x, r29.w
          mov r34.yz, r30.yyzy
          mad r32.xyw, r21.zwzy, r15.wwww, r34.yzyx
          mov r33.w, r32.w
        else 
          mov r33.xyzw, r29.xyzw
          mov r32.xyz, r30.yzwy
        endif 
        mov r12.w, l(-1)
        mov r29.xyzw, r33.xyzw
        mov r30.yzw, r32.xxyz
        break 
      endif 
    endif 
  endloop 
  if_nz r12.w
    mov r22.xyzw, r29.xyzw
    mov r23.yzw, r30.yyzw
    mov r0.y, l(-1)
    break 
  endif 
  iadd r0.z, r0.z, l(32)
  mov r22.xyzw, r29.xyzw
  mov r23.yzw, r30.yyzw
  mov r0.y, r12.w
endloop 
if_z r0.y
  iadd r0.y, cb2[0].y, -cb2[58].x
  and r0.z, r0.y, l(-32)
  iadd r0.w, -r0.z, r0.y
  and r8.w, cb2[0].y, l(-32)
  iadd r9.z, -r8.w, cb2[0].y
  mov r15.xy, l(0,0,0,0)
  mov r16.w, l(0)
  mov r17.yz, l(0,0,1.000000,0)
  mov r18.xy, l(0,0,0,0)
  mov r19.x, l(1.000000)
  mov r20.xy, l(0,0,0,0)
  mov r21.xy, l(0,0,0,0)
  mov r24.xyzw, r22.xyzw
  mov r25.yzw, r23.yyzw
  mov r9.w, r0.z
  loop 
    uge r10.w, r9.w, cb2[0].y
    breakc_nz r10.w
    ushr r15.z, r9.w, l(5)
    iadd r16.xyz, r14.xyzx, r15.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r10.w, r16.xyzw, t7.yzwx
    ieq r11.y, r0.z, r9.w
    bfi r11.z, r0.w, l(0), l(0), r10.w
    movc r10.w, r11.y, r11.z, r10.w
    ieq r11.y, r8.w, r9.w
    ubfe r11.z, r9.z, l(0), r10.w
    movc r10.w, r11.y, r11.z, r10.w
    iadd r11.y, r9.w, cb2[0].x
    mov r26.xyzw, r24.xyzw
    mov r27.xyz, r25.yzwy
    mov r11.z, r10.w
    loop 
      breakc_z r11.z
      firstbit_lo r11.w, r11.z
      ishl r12.y, l(1), r11.w
      and r12.z, r11.z, r12.y
      if_nz r12.z
        xor r11.z, r11.z, r12.y
        iadd r12.y, r11.w, r11.y
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r28.xyzw, r12.y, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r16.xy, r12.y, l(16), t11.xyxx
        add r12.yzw, r28.xxyz, -v7.xxyz
        mov r16.z, r28.w
        lt r12.yzw, |r12.yyzw|, r16.zzxy
        and r12.y, r12.z, r12.y
        and r12.y, r12.w, r12.y
        if_nz r12.y
          iadd r11.w, r9.w, r11.w
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r11.w, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r12.yz, r11.w, l(96), t15.xxyx
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r11.w, l(116), t15.zwxy
          add r16.xyz, -r28.yzwy, v7.xyzx
          and r12.w, r29.w, l(0x0000ffff)
          ubfe r14.w, l(6), l(25), r29.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r12.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r12.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r12.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r12.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r12.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r12.w, l(80), t16.xyzw
          dp3 r15.z, r30.xyzx, r16.xyzx
          add_sat r15.z, r30.w, r15.z
          dp3 r15.w, r31.xyzx, r16.xyzx
          add_sat r15.w, r31.w, r15.w
          mul r15.z, r15.w, r15.z
          dp3 r15.w, r32.xyzx, r16.xyzx
          add_sat r15.w, r32.w, r15.w
          mul r15.z, r15.w, r15.z
          dp3 r15.w, r33.xyzx, r16.xyzx
          add_sat r15.w, r33.w, r15.w
          mul r15.z, r15.w, r15.z
          dp3 r15.w, r34.xyzx, r16.xyzx
          add_sat r15.w, r34.w, r15.w
          mul r15.z, r15.w, r15.z
          dp3 r15.w, r35.xyzx, r16.xyzx
          add_sat r15.w, r35.w, r15.w
          mul r17.x, r15.w, r15.z
          and r15.z, r12.y, l(1)
          movc r15.zw, r15.zzzz, r17.xxxy, r17.zzzx
          mov r17.x, r12.y
          mov r30.xy, r15.zwzz
          mov r17.w, l(1)
          loop 
            ige r18.w, r17.w, r14.w
            breakc_nz r18.w
            iadd r18.w, r12.w, r17.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r18.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r18.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r18.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r18.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r18.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r18.w, l(80), t16.xyzw
            dp3 r18.w, r31.xyzx, r16.xyzx
            add_sat r18.w, r31.w, r18.w
            mul r18.w, r18.w, r30.x
            dp3 r19.z, r32.xyzx, r16.xyzx
            add_sat r19.z, r32.w, r19.z
            mul r18.w, r18.w, r19.z
            dp3 r19.z, r33.xyzx, r16.xyzx
            add_sat r19.z, r33.w, r19.z
            mul r18.w, r18.w, r19.z
            dp3 r19.z, r34.xyzx, r16.xyzx
            add_sat r19.z, r34.w, r19.z
            mul r18.w, r18.w, r19.z
            dp3 r19.z, r35.xyzx, r16.xyzx
            add_sat r19.z, r35.w, r19.z
            mul r18.w, r18.w, r19.z
            dp3 r19.z, r36.xyzx, r16.xyzx
            add_sat r19.z, r36.w, r19.z
            mul r30.x, r18.w, r19.z
            ushr r19.w, r17.x, l(2)
            ubfe r20.w, l(1), l(2), r17.x
            and r21.w, r19.w, l(2)
            max r28.w, r30.x, r30.y
            mad r18.w, -r18.w, r19.z, l(1.000000)
            mul r18.w, r18.w, r30.y
            movc r19.y, r21.w, r18.w, r28.w
            movc r30.xy, r20.wwww, r30.xyxx, r19.xyxx
            iadd r17.w, r17.w, l(1)
            mov r17.x, r19.w
          endloop 
          mov_sat r30.y, r30.y
          mul r12.y, r12.z, r30.y
          lt r12.w, l(0.000000), r12.y
          if_nz r12.w
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r11.w, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r11.w, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r11.w, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r11.w, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r11.w, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r11.w, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r11.w, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r11.w, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xyzw, r11.w, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r40.xyzw, r11.w, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r41.xy, r11.w, l(212), t15.xyxx
            mad r27.z, r30.y, r12.z, r27.z
            mul r11.w, r29.z, r12.y
            mov r29.z, r36.z
            dp3 r12.y, r13.xyzx, r29.xyzx
            dp3 r12.z, r16.xyzx, r29.xyzx
            add r12.z, -r36.w, r12.z
            ge r12.w, r12.z, l(0.000000)
            max r12.z, r6.w, |r12.z|
            movc r12.z, r12.w, r12.z, -r12.z
            max r12.y, -r12.y, l(0.00000010)
            div r12.y, r12.z, r12.y
            min r12.y, |r12.y|, l(131072.000000)
            mov r36.z, r37.z
            dp3 r12.z, r13.xyzx, r36.xyzx
            dp3 r12.w, r16.xyzx, r36.xyzx
            add r12.w, -r37.w, r12.w
            ge r14.w, r12.w, l(0.000000)
            max r12.w, r6.w, |r12.w|
            movc r12.w, r14.w, r12.w, -r12.w
            max r12.z, -r12.z, l(0.00000010)
            div r12.z, r12.w, r12.z
            min r12.y, |r12.z|, r12.y
            mov r37.z, r38.z
            dp3 r12.z, r13.xyzx, r37.xyzx
            dp3 r12.w, r16.xyzx, r37.xyzx
            add r12.w, -r38.w, r12.w
            ge r14.w, r12.w, l(0.000000)
            max r12.w, r6.w, |r12.w|
            movc r12.w, r14.w, r12.w, -r12.w
            max r12.z, -r12.z, l(0.00000010)
            div r12.z, r12.w, r12.z
            min r12.y, |r12.z|, r12.y
            mov r38.z, r39.z
            dp3 r12.z, r13.xyzx, r38.xyzx
            dp3 r12.w, r16.xyzx, r38.xyzx
            add r12.w, -r39.w, r12.w
            ge r14.w, r12.w, l(0.000000)
            max r12.w, r6.w, |r12.w|
            movc r12.w, r14.w, r12.w, -r12.w
            max r12.z, -r12.z, l(0.00000010)
            div r12.z, r12.w, r12.z
            min r12.y, |r12.z|, r12.y
            mov r39.z, r40.x
            dp3 r12.z, r13.xyzx, r39.xyzx
            dp3 r12.w, r16.xyzx, r39.xyzx
            add r12.w, -r40.y, r12.w
            ge r14.w, r12.w, l(0.000000)
            max r12.w, r6.w, |r12.w|
            movc r12.w, r14.w, r12.w, -r12.w
            max r12.z, -r12.z, l(0.00000010)
            div r12.z, r12.w, r12.z
            min r12.y, |r12.z|, r12.y
            mov r41.zw, r40.zzzw
            dp3 r12.z, r13.zxyz, r41.xzwx
            dp3 r12.w, r16.zxyz, r41.xzwx
            add r12.w, -r41.y, r12.w
            ge r14.w, r12.w, l(0.000000)
            max r12.w, r6.w, |r12.w|
            movc r12.w, r14.w, r12.w, -r12.w
            max r12.z, -r12.z, l(0.00000010)
            div r12.z, r12.w, r12.z
            min r12.y, |r12.z|, r12.y
            mov r29.x, r33.w
            mov r29.yz, r34.zzwz
            add r19.yzw, r16.xxyz, r29.xxyz
            mad r19.yzw, r13.xxyz, r12.yyyy, r19.yyzw
            dp3 r12.z, r19.yzwy, r19.yzwy
            sqrt r12.z, r12.z
            div r12.y, r12.y, r12.z
            add r12.y, r12.y, r12.y
            sqrt r12.y, r12.y
            mad r12.y, r3.w, l(5.000000), r12.y
            add r12.y, r12.y, l(-0.844800)
            mov r28.y, r31.z
            mov r28.z, r32.x
            dp3 r36.x, r19.yzwy, r28.xyzx
            mov r29.xy, r31.xwxx
            mov r29.z, r32.w
            dp3 r36.y, r19.yzwy, r29.xyzx
            mov r32.x, r31.y
            dp3 r36.z, r19.yzwy, r32.xyzx
            ubfe r12.z, l(9), l(16), r29.w
            utof r36.w, r12.z
            sample_l_indexable(texturecubearray)(float,float,float,float) r12.yzw, r36.xyzw, t8.wxyz, s2, r12.y
            and r19.yzw, r12.yyzw, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
            ieq r19.yzw, r19.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
            or r14.w, r19.z, r19.y
            or r14.w, r19.w, r14.w
            movc r12.yzw, r14.wwww, l(0,1.000000,1.000000,0), r12.yyzw
            dp3 r31.x, r16.xyzx, r28.xyzx
            dp3 r31.y, r16.xyzx, r29.xyzx
            dp3 r31.z, r16.xyzx, r32.xyzx
            mad_sat r16.xyz, r31.xyzx, r33.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
            mov r34.z, r35.x
            mad r16.xyz, r16.xyzx, r34.xyzx, r35.yzwy
            dp3 r36.x, r4.xyzx, r28.xyzx
            dp3 r36.y, r4.xyzx, r29.xyzx
            dp3 r36.z, r4.xyzx, r32.xyzx
            lt r19.yzw, l(0.000000, 0.000000, 0.000000, 0.000000), r36.xxyz
            movc r18.z, r19.y, l(0), l(0.500000)
            add r28.xyz, r16.xyzx, r18.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r28.xyz, r28.xyzx, t17.xyzw, s4, l(0.000000)
            mul r29.xyz, r36.xyzx, r36.xyzx
            mul r29.xyz, r11.wwww, r29.xyzx
            movc r20.z, r19.z, l(0), l(0.500000)
            add r30.xzw, r16.xxyz, r20.xxyz
            sample_l_indexable(texture3d)(float,float,float,float) r30.xzw, r30.xzwx, t18.xwyz, s4, l(0.000000)
            mul r30.xzw, r29.yyyy, r30.xxzw
            mad r28.xyz, r28.xyzx, r29.xxxx, r30.xzwx
            movc r21.z, r19.w, l(0), l(0.500000)
            add r16.xyz, r16.xyzx, r21.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r16.xyz, r16.xyzx, t19.xyzw, s4, l(0.000000)
            mad r16.xyz, r16.xyzx, r29.zzzz, r28.xyzx
            sample_l_indexable(texturecubearray)(float,float,float,float) r19.yzw, r36.xyzw, t8.wxyz, s2, l(6.000000)
            and r28.xyz, r19.yzwy, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
            ieq r28.xyz, r28.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
            or r14.w, r28.y, r28.x
            or r14.w, r28.z, r14.w
            movc r19.yzw, r14.wwww, l(0,1.000000,1.000000,0), r19.yyzw
            mul r28.xyz, r16.xyzx, r19.yzwy
            dp3 r14.w, r28.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r26.xyz, r16.xyzx, r19.yzwy, r26.xyzx
            mul r15.z, r7.w, r14.w
            mul r12.yzw, r11.wwww, r12.yyzw
            dp3 r11.w, r12.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r11.w, r7.w, r14.w, r11.w
            div r11.w, r15.z, r11.w
            mov r16.x, r26.w
            mov r16.yz, r27.xxyx
            mad r27.xyw, r12.zwzy, r11.wwww, r16.yzyx
            mov r26.w, r27.w
          endif 
        endif 
      endif 
    endloop 
    mov r24.xyzw, r26.xyzw
    mov r25.yzw, r27.xxyz
    iadd r9.w, r9.w, l(32)
  endloop 
  lt r8.w, r25.w, l(1.000000)
  if_nz r8.w
    mov r15.xy, l(0,0,0,0)
    mov r16.w, l(0)
    mov r17.yz, l(0,0,1.000000,0)
    mov r18.xy, l(0,0,0,0)
    mov r19.x, l(1.000000)
    mov r20.xy, l(0,0,0,0)
    mov r21.xy, l(0,0,0,0)
    mov r26.x, r24.w
    mov r26.yzw, r25.yyzw
    mov r11.yzw, r24.xxyz
    mov r8.w, r25.w
    mov r9.z, l(0)
    loop 
      uge r9.w, r9.z, r0.y
      breakc_nz r9.w
      ushr r15.z, r9.z, l(5)
      iadd r16.xyz, r14.xyzx, r15.xyzx
      ld_indexable(texture2darray)(uint,uint,uint,uint) r9.w, r16.xyzw, t7.yzwx
      ieq r10.w, r0.z, r9.z
      ubfe r12.y, r0.w, l(0), r9.w
      movc r9.w, r10.w, r12.y, r9.w
      iadd r10.w, r9.z, cb2[0].x
      mov r27.xyzw, r26.xyzw
      mov r12.yzw, r11.yyzw
      mov r14.w, r8.w
      mov r15.z, r9.w
      loop 
        breakc_z r15.z
        firstbit_lo r15.w, r15.z
        ishl r16.x, l(1), r15.w
        and r16.y, r15.z, r16.x
        if_nz r16.y
          xor r15.z, r15.z, r16.x
          iadd r16.x, r10.w, r15.w
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r28.xyzw, r16.x, l(0), t11.xyzw
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r16.xy, r16.x, l(16), t11.xyxx
          add r28.xyz, r28.xyzx, -v7.xyzx
          mov r16.z, r28.w
          lt r16.xyz, |r28.xyzx|, r16.zxyz
          and r16.x, r16.y, r16.x
          and r16.x, r16.z, r16.x
          if_nz r16.x
            iadd r15.w, r9.z, r15.w
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r15.w, l(0), t15.wxyz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r16.xy, r15.w, l(96), t15.xyxx
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r15.w, l(116), t15.zwxy
            add r30.xyz, -r28.yzwy, v7.xyzx
            and r16.z, r29.w, l(0x0000ffff)
            ubfe r17.w, l(6), l(25), r29.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r16.z, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r16.z, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r16.z, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r16.z, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r16.z, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r16.z, l(80), t16.xyzw
            dp3 r18.w, r31.xyzx, r30.xyzx
            add_sat r18.w, r31.w, r18.w
            dp3 r19.z, r32.xyzx, r30.xyzx
            add_sat r19.z, r32.w, r19.z
            mul r18.w, r18.w, r19.z
            dp3 r19.z, r33.xyzx, r30.xyzx
            add_sat r19.z, r33.w, r19.z
            mul r18.w, r18.w, r19.z
            dp3 r19.z, r34.xyzx, r30.xyzx
            add_sat r19.z, r34.w, r19.z
            mul r18.w, r18.w, r19.z
            dp3 r19.z, r35.xyzx, r30.xyzx
            add_sat r19.z, r35.w, r19.z
            mul r18.w, r18.w, r19.z
            dp3 r19.z, r36.xyzx, r30.xyzx
            add_sat r19.z, r36.w, r19.z
            mul r17.x, r18.w, r19.z
            and r18.w, r16.x, l(1)
            movc r19.zw, r18.wwww, r17.xxxy, r17.zzzx
            mov r17.x, r16.x
            mov r31.xy, r19.zwzz
            mov r18.w, l(1)
            loop 
              ige r20.w, r18.w, r17.w
              breakc_nz r20.w
              iadd r20.w, r16.z, r18.w
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r20.w, l(0), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r20.w, l(16), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r20.w, l(32), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r20.w, l(48), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r20.w, l(64), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r20.w, l(80), t16.xyzw
              dp3 r20.w, r32.xyzx, r30.xyzx
              add_sat r20.w, r32.w, r20.w
              mul r20.w, r20.w, r31.x
              dp3 r21.w, r33.xyzx, r30.xyzx
              add_sat r21.w, r33.w, r21.w
              mul r20.w, r20.w, r21.w
              dp3 r21.w, r34.xyzx, r30.xyzx
              add_sat r21.w, r34.w, r21.w
              mul r20.w, r20.w, r21.w
              dp3 r21.w, r35.xyzx, r30.xyzx
              add_sat r21.w, r35.w, r21.w
              mul r20.w, r20.w, r21.w
              dp3 r21.w, r36.xyzx, r30.xyzx
              add_sat r21.w, r36.w, r21.w
              mul r20.w, r20.w, r21.w
              dp3 r21.w, r37.xyzx, r30.xyzx
              add_sat r21.w, r37.w, r21.w
              mul r31.x, r20.w, r21.w
              ushr r23.w, r17.x, l(2)
              ubfe r28.w, l(1), l(2), r17.x
              and r30.w, r23.w, l(2)
              max r31.z, r31.x, r31.y
              mad r20.w, -r20.w, r21.w, l(1.000000)
              mul r20.w, r20.w, r31.y
              movc r19.y, r30.w, r20.w, r31.z
              movc r31.xy, r28.wwww, r31.xyxx, r19.xyxx
              iadd r18.w, r18.w, l(1)
              mov r17.x, r23.w
            endloop 
            add_sat r16.x, -r14.w, r31.y
            mul r16.z, r16.y, r16.x
            lt r17.x, l(0.000000), r16.z
            if_nz r17.x
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r15.w, l(16), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r15.w, l(32), t15.yxwz
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r15.w, l(48), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r15.w, l(64), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r15.w, l(80), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r15.w, l(132), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r15.w, l(148), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xyzw, r15.w, l(164), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r40.xyzw, r15.w, l(180), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r41.xyzw, r15.w, l(196), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r42.xy, r15.w, l(212), t15.xyxx
              mad r27.w, r16.x, r16.y, r27.w
              mul r15.w, r29.z, r16.z
              mov r29.z, r37.z
              dp3 r16.x, r13.xyzx, r29.xyzx
              dp3 r16.y, r30.xyzx, r29.xyzx
              add r16.y, -r37.w, r16.y
              ge r16.z, r16.y, l(0.000000)
              max r16.y, r6.w, |r16.y|
              movc r16.y, r16.z, r16.y, -r16.y
              max r16.x, -r16.x, l(0.00000010)
              div r16.x, r16.y, r16.x
              min r16.x, |r16.x|, l(131072.000000)
              mov r37.z, r38.z
              dp3 r16.y, r13.xyzx, r37.xyzx
              dp3 r16.z, r30.xyzx, r37.xyzx
              add r16.z, -r38.w, r16.z
              ge r17.x, r16.z, l(0.000000)
              max r16.z, r6.w, |r16.z|
              movc r16.z, r17.x, r16.z, -r16.z
              max r16.y, -r16.y, l(0.00000010)
              div r16.y, r16.z, r16.y
              min r16.x, |r16.y|, r16.x
              mov r38.z, r39.z
              dp3 r16.y, r13.xyzx, r38.xyzx
              dp3 r16.z, r30.xyzx, r38.xyzx
              add r16.z, -r39.w, r16.z
              ge r17.x, r16.z, l(0.000000)
              max r16.z, r6.w, |r16.z|
              movc r16.z, r17.x, r16.z, -r16.z
              max r16.y, -r16.y, l(0.00000010)
              div r16.y, r16.z, r16.y
              min r16.x, |r16.y|, r16.x
              mov r39.z, r40.z
              dp3 r16.y, r13.xyzx, r39.xyzx
              dp3 r16.z, r30.xyzx, r39.xyzx
              add r16.z, -r40.w, r16.z
              ge r17.x, r16.z, l(0.000000)
              max r16.z, r6.w, |r16.z|
              movc r16.z, r17.x, r16.z, -r16.z
              max r16.y, -r16.y, l(0.00000010)
              div r16.y, r16.z, r16.y
              min r16.x, |r16.y|, r16.x
              mov r40.z, r41.x
              dp3 r16.y, r13.xyzx, r40.xyzx
              dp3 r16.z, r30.xyzx, r40.xyzx
              add r16.z, -r41.y, r16.z
              ge r17.x, r16.z, l(0.000000)
              max r16.z, r6.w, |r16.z|
              movc r16.z, r17.x, r16.z, -r16.z
              max r16.y, -r16.y, l(0.00000010)
              div r16.y, r16.z, r16.y
              min r16.x, |r16.y|, r16.x
              mov r42.zw, r41.zzzw
              dp3 r16.y, r13.zxyz, r42.xzwx
              dp3 r16.z, r30.zxyz, r42.xzwx
              add r16.z, -r42.y, r16.z
              ge r17.x, r16.z, l(0.000000)
              max r16.z, r6.w, |r16.z|
              movc r16.z, r17.x, r16.z, -r16.z
              max r16.y, -r16.y, l(0.00000010)
              div r16.y, r16.z, r16.y
              min r16.x, |r16.y|, r16.x
              mov r29.x, r34.w
              mov r29.yz, r35.zzwz
              add r19.yzw, r30.xxyz, r29.xxyz
              mad r19.yzw, r13.xxyz, r16.xxxx, r19.yyzw
              dp3 r16.y, r19.yzwy, r19.yzwy
              sqrt r16.y, r16.y
              div r16.x, r16.x, r16.y
              add r16.x, r16.x, r16.x
              sqrt r16.x, r16.x
              mad r16.x, r3.w, l(5.000000), r16.x
              add r16.x, r16.x, l(-0.844800)
              mov r28.y, r32.z
              mov r28.z, r33.x
              dp3 r37.x, r19.yzwy, r28.xyzx
              mov r29.xy, r32.xwxx
              mov r29.z, r33.w
              dp3 r37.y, r19.yzwy, r29.xyzx
              mov r33.x, r32.y
              dp3 r37.z, r19.yzwy, r33.xyzx
              ubfe r16.y, l(9), l(16), r29.w
              utof r37.w, r16.y
              sample_l_indexable(texturecubearray)(float,float,float,float) r16.xyz, r37.xyzw, t8.xyzw, s2, r16.x
              and r19.yzw, r16.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
              ieq r19.yzw, r19.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
              or r17.x, r19.z, r19.y
              or r17.x, r19.w, r17.x
              movc r16.xyz, r17.xxxx, l(1.000000,1.000000,0,0), r16.xyzx
              dp3 r32.x, r30.xyzx, r28.xyzx
              dp3 r32.y, r30.xyzx, r29.xyzx
              dp3 r32.z, r30.xyzx, r33.xyzx
              mad_sat r19.yzw, r32.xxyz, r34.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
              mov r35.z, r36.x
              mad r19.yzw, r19.yyzw, r35.xxyz, r36.yyzw
              dp3 r37.x, r4.xyzx, r28.xyzx
              dp3 r37.y, r4.xyzx, r29.xyzx
              dp3 r37.z, r4.xyzx, r33.xyzx
              lt r28.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r37.xyzx
              movc r18.z, r28.x, l(0), l(0.500000)
              add r29.xyz, r18.xyzx, r19.yzwy
              sample_l_indexable(texture3d)(float,float,float,float) r29.xyz, r29.xyzx, t17.xyzw, s4, l(0.000000)
              mul r30.xyz, r37.xyzx, r37.xyzx
              mul r30.xyz, r15.wwww, r30.xyzx
              movc r20.z, r28.y, l(0), l(0.500000)
              add r28.xyw, r19.yzyw, r20.xyxz
              sample_l_indexable(texture3d)(float,float,float,float) r28.xyw, r28.xywx, t18.xywz, s4, l(0.000000)
              mul r28.xyw, r30.yyyy, r28.xyxw
              mad r28.xyw, r29.xyxz, r30.xxxx, r28.xyxw
              movc r21.z, r28.z, l(0), l(0.500000)
              add r19.yzw, r19.yyzw, r21.xxyz
              sample_l_indexable(texture3d)(float,float,float,float) r19.yzw, r19.yzwy, t19.wxyz, s4, l(0.000000)
              mad r19.yzw, r19.yyzw, r30.zzzz, r28.xxyw
              sample_l_indexable(texturecubearray)(float,float,float,float) r28.xyz, r37.xyzw, t8.xyzw, s2, l(6.000000)
              and r29.xyz, r28.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
              ieq r29.xyz, r29.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
              or r17.x, r29.y, r29.x
              or r17.x, r29.z, r17.x
              movc r28.xyz, r17.xxxx, l(1.000000,1.000000,0,0), r28.xyzx
              mul r29.xyz, r19.yzwy, r28.xyzx
              dp3 r17.x, r29.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
              mad r12.yzw, r19.yyzw, r28.xxyz, r12.yyzw
              mul r17.w, r7.w, r17.x
              mul r16.xyz, r15.wwww, r16.xyzx
              dp3 r15.w, r16.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
              mad r15.w, r7.w, r17.x, r15.w
              div r15.w, r17.w, r15.w
              mad r27.xyz, r16.xyzx, r15.wwww, r27.xyzx
            endif 
          endif 
        endif 
      endloop 
      mov r26.xyzw, r27.xyzw
      mov r11.yzw, r12.yyzw
      iadd r9.z, r9.z, l(32)
    endloop 
    mov r25.xyzw, r26.zxyw
    mov r24.xyz, r11.yzwy
    mov r25.xyzw, r25.yzxw
  else 
    mov r25.x, r24.w
  endif 
  max r0.y, r25.w, l(1.000000)
  rcp r0.y, r0.y
  mov_sat r25.w, r25.w
  mul r22.xyz, r0.yyyy, r24.xyzx
  mul r23.xyz, r0.yyyy, r25.xyzx
  lt r0.z, r25.w, l(0.990000)
  if_nz r0.z
    add r0.z, -r25.w, l(1.000000)
    mul r0.w, r0.z, cb2[19].x
    add r11.yzw, v7.xxyz, -cb2[35].xxyz
    mul r15.x, r11.y, cb2[35].w
    mul r15.yz, r11.zzwz, cb2[36].xxyx
    add_sat r11.yzw, r15.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
    mul r15.xy, r11.yzyy, cb2[36].zwzz
    mul r15.z, r11.w, cb2[37].x
    add r11.yzw, r15.xxyz, cb2[37].yyzw
    lt r12.yzw, l(0.000000, 0.000000, 0.000000, 0.000000), r4.xxyz
    movc r15.xyz, r12.yzwy, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
    mov r15.w, l(0)
    add r12.yzw, r11.yyzw, r15.wwwx
    sample_l_indexable(texture3d)(float,float,float,float) r12.yzw, r12.yzwy, t17.wxyz, s4, l(0.000000)
    mul r16.xyz, r4.xyzx, r4.xyzx
    mul r16.xyz, r0.wwww, r16.xyzx
    add r17.xyz, r11.yzwy, r15.wwyw
    sample_l_indexable(texture3d)(float,float,float,float) r17.xyz, r17.xyzx, t18.xyzw, s4, l(0.000000)
    mul r17.xyz, r16.yyyy, r17.xyzx
    mad r12.yzw, r12.yyzw, r16.xxxx, r17.xxyz
    add r11.yzw, r11.yyzw, r15.wwwz
    sample_l_indexable(texture3d)(float,float,float,float) r11.yzw, r11.yzwy, t19.wxyz, s4, l(0.000000)
    mad r11.yzw, r11.yyzw, r16.zzzz, r12.yyzw
    mov r4.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r12.yzw, r4.xyzw, t8.wxyz, s2, l(6.000000)
    mul r11.yzw, r11.yyzw, r12.yyzw
    dp3 r0.w, r11.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
    mad r22.xyz, r24.xyzx, r0.yyyy, r11.yzwy
    mov r13.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r11.yzw, r13.xyzw, t8.wxyz, s2, r5.w
    mad r0.y, cb2[19].x, r0.z, -r0.w
    mad r0.y, r3.y, r0.y, r0.w
    mad r23.xyz, r11.yzwy, r0.yyyy, r23.xyzx
  endif 
else 
  mov r23.x, r22.w
endif 
add r0.y, r1.z, r3.x
log r0.y, |r0.y|
mul r0.y, r0.y, r3.z
exp r0.y, r0.y
add r0.y, r1.z, r0.y
add_sat r0.y, r0.y, l(-1.000000)
mul r15.xyz, r1.zzzz, r22.xyzx
mad r0.zw, r3.xxxy, l(0.000000, 0.000000, 0.984375, 0.984375), l(0.000000, 0.000000, 0.00781250, 0.00781250)
sample_l_indexable(texture2d)(float,float,float,float) r0.zw, r0.zwzz, t5.zwxy, s2, l(0.000000)
mul r11.yzw, r0.yyyy, r23.xxyz
mul r16.xyz, r0.zzzz, r11.zwyz
mul r0.yzw, r0.wwww, r11.yyzw
sqrt r1.z, r3.z
mad r1.z, r1.z, l(0.500000), l(0.500000)
mul r1.z, r1.z, r1.z
mul r3.y, r1.z, l(0.500000)
mad r1.z, -r1.z, l(0.500000), l(1.000000)
mad r3.w, r3.x, r1.z, r3.y
mul r1.z, r1.z, r3.w
mul r3.y, r3.w, r3.y
if_z cb0[26].y
  dp3 r3.w, r4.xyzx, cb2[17].xyzx
  ge r3.w, l(0.000000), |r3.w|
  if_nz r3.w
    mov r4.w, l(0)
  endif 
  if_z r3.w
    mul r11.yzw, v7.yyyy, cb2[29].xxyz
    mad r11.yzw, v7.xxxx, cb2[28].xxyz, r11.yyzw
    mad r11.yzw, v7.zzzz, cb2[30].xxyz, r11.yyzw
    add r11.yzw, r11.yyzw, cb2[31].xxyz
    add r3.w, r11.w, -cb2[17].w
    mad r3.w, -r3.w, l(0.00006104), l(1.000000)
    mov_sat r5.w, r3.w
    eq r5.w, r3.w, r5.w
    if_nz r5.w
      mov r5.w, l(0)
      mov r6.w, l(0)
      loop 
        ge r7.w, r5.w, l(3.000000)
        breakc_nz r7.w
        ftou r7.w, r5.w
        add r9.zw, r11.yyyz, -cb2[r7.w + 20].xxxy
        max r8.w, |r9.w|, |r9.z|
        mul r6.w, r8.w, cb2[r7.w + 20].z
        lt r7.w, r6.w, l(1.000000)
        if_nz r7.w
          break 
        endif 
        add r5.w, r5.w, l(1.000000)
        mov r6.w, l(0)
      endloop 
    else 
      mov r5.w, l(3.000000)
      mov r6.w, l(0)
    endif 
    ge r7.w, r5.w, l(3.000000)
    if_nz r7.w
      mul r12.yzw, l(0.000000, 128.000000, 0.500000, 0.500000), cb2[27].zzxy
      rcp r17.xz, r12.yyyy
      mov r17.y, -r17.z
      mad r12.yzw, r11.yyzy, r17.xxyz, r12.zzwz
      add r17.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
      max r12.yzw, r12.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
      min r12.yzw, r17.xxyz, r12.yyzw
      mul r9.zw, r12.wwwz, cb2[32].xxxx
      round_ni r9.zw, r9.zzzw
      mul r8.w, r9.w, cb2[27].x
      mad r8.w, r8.w, cb2[32].x, r9.z
      ftou r8.w, r8.w
      iadd r8.w, r8.w, cb2[32].y
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r9.z, r8.w, l(0), t23.xxxx
      and r9.w, r9.z, l(0x40000000)
      ishl r10.w, r9.z, l(2)
      if_z r9.w
        and r9.w, r9.z, l(0x01ffffff)
        iadd r17.x, r8.w, r9.w
        ushr r8.w, r9.z, l(25)
        utof r8.w, r8.w
        mul r12.yzw, r8.wwww, r12.yyzw
        frc r12.yzw, r12.yyzw
        mul r12.yzw, r12.yyzw, l(0.000000, 128.000000, 128.000000, 128.000000)
        ftou r12.yzw, r12.yyzw
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.z, r17.x, l(0), t23.xxxx
        ushr r9.zw, r12.wwwz, l(0, 0, 6, 6)
        and r8.w, r17.z, l(0xc0000000)
        iadd r13.w, r17.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r13.w, r13.w, l(0), t23.xxxx
        movc r9.w, r9.w, r17.z, r13.w
        ushr r13.w, r9.w, l(13)
        movc r9.z, r9.z, r13.w, r9.w
        and r9.z, r9.z, l(8191)
        iadd r18.x, r9.z, r17.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.x, l(0), t23.xxxx
        mov r17.y, l(0)
        mov r18.y, l(1)
        movc r18.xyz, r8.wwww, r17.xyzx, r18.xyzx
        movc r19.yz, r8.wwww, l(0,6,1,0), l(0,5,2,0)
        ushr r9.zw, r12.wwwz, r19.yyyy
        and r9.zw, r9.zzzw, l(0, 0, 1, 1)
        and r13.w, r18.z, l(0xc0000000)
        iadd r14.w, r18.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r14.w, r14.w, l(0), t23.xxxx
        movc r9.w, r9.w, r18.z, r14.w
        ushr r14.w, r9.w, l(13)
        movc r9.z, r9.z, r14.w, r9.w
        and r9.z, r9.z, l(8191)
        iadd r19.x, r9.z, r18.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.w, r19.x, l(0), t23.xxxx
        movc r18.xyz, r13.wwww, r18.xyzx, r19.xzwx
        movc r17.xyz, r8.wwww, r17.xyzx, r18.xyzx
        and r8.w, r17.z, l(0xc0000000)
        if_z r8.w
          iadd r8.w, -r17.y, l(6)
          ushr r9.zw, r12.wwwz, r8.wwww
          or r8.w, r17.z, l(0x40000000)
          bfi r9.w, l(1), l(1), r9.w, l(0)
          bfi r9.z, l(1), l(0), r9.z, r9.w
          imul null, r9.z, r9.z, l(10)
          ushr r8.w, r8.w, r9.z
          and r8.w, r8.w, l(1023)
          iadd r18.x, r8.w, r17.x
          ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.w, r18.x, l(0), t23.xxxx
          iadd r18.yz, r17.yyyy, l(0, 1, 2, 0)
          iadd r8.w, -r18.y, l(6)
          ushr r9.zw, r12.wwwz, r8.wwww
          and r8.w, r18.w, l(0xc0000000)
          or r13.w, r18.w, l(0x40000000)
          bfi r9.w, l(1), l(1), r9.w, l(0)
          bfi r9.z, l(1), l(0), r9.z, r9.w
          imul null, r9.z, r9.z, l(10)
          ushr r9.z, r13.w, r9.z
          and r9.z, r9.z, l(1023)
          iadd r19.x, r9.z, r18.x
          ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.z, r19.x, l(0), t23.xxxx
          mov r19.y, r18.z
          movc r19.xyz, r8.wwww, r18.xywx, r19.xyzx
          iadd r9.z, -r19.y, l(6)
          ushr r9.zw, r12.wwwz, r9.zzzz
          and r13.w, r19.z, l(0xc0000000)
          or r14.w, r19.z, l(0x40000000)
          bfi r9.w, l(1), l(1), r9.w, l(0)
          bfi r9.z, l(1), l(0), r9.z, r9.w
          imul null, r9.z, r9.z, l(10)
          ushr r9.z, r14.w, r9.z
          and r9.z, r9.z, l(1023)
          iadd r20.x, r9.z, r19.x
          ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.y, r20.x, l(0), t23.xxxx
          movc r9.zw, r13.wwww, r19.xxxz, r20.xxxy
          movc r17.xz, r8.wwww, r18.xxwx, r9.zzwz
        endif 
        and r8.w, r17.z, l(0xc0000000)
        if_z r8.w
          ubfe r9.z, l(14), l(15), r17.z
          utof r9.z, r9.z
          mul r9.z, r9.z, cb2[27].w
          and r17.yw, r17.zzzz, l(0, 0x00007fff, 0, 0x20000000)
          utof r9.w, r17.y
          mul r9.w, r9.w, cb2[27].w
          mul r9.zw, r9.zzzw, l(0.000000, 0.000000, 0.00006104, 0.00003052)
          and r13.w, r12.z, l(3)
          iadd r13.w, r13.w, r17.x
          iadd r13.w, r13.w, l(1)
          ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r13.w, r13.w, l(0), t23.xxxx
          bfi r18.xyz, l(2, 2, 1, 0), l(3, 1, 4, 0), r12.yzwy, l(0, 0, 0, 0)
          ushr r12.y, r13.w, r18.x
          and r12.y, r12.y, l(255)
          utof r12.y, r12.y
          mul r12.y, r9.w, r12.y
          mad r12.y, r12.y, l(0.00392157), r9.z
          iadd r12.z, r18.y, l(1)
          ubfe r12.w, l(1), l(1), r12.w
          iadd r12.z, r12.w, r12.z
          iadd r12.z, r12.z, r17.x
          ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r12.z, r12.z, l(0), t23.xxxx
          ushr r12.z, r12.z, r18.z
          and r12.z, r12.z, l(0x0000ffff)
          utof r12.z, r12.z
          mul r9.w, r9.w, r12.z
          mad r9.z, r9.w, l(0.00001526), r9.z
          movc r10.w, r17.w, r12.y, r9.z
        else 
          and r9.z, r17.z, l(0x80000000)
          iadd r9.w, r17.x, l(1)
          ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r9.w, r9.w, l(0), t23.xxxx
          movc r9.z, r9.z, r9.w, l(0)
          ishl r9.w, r17.z, l(2)
          ushr r12.y, r9.z, l(16)
          f16tof32 r12.y, r12.y
          and r9.z, r9.z, l(0x0000ffff)
          f16tof32 r9.z, r9.z
          mad r9.w, r11.y, r12.y, r9.w
          mad r9.z, r11.z, r9.z, r9.w
          movc r10.w, r8.w, r9.z, r10.w
        endif 
      endif 
      mad r8.w, -cb2[27].z, l(2.000000), r11.w
      lt r8.w, r10.w, r8.w
      movc r4.w, r8.w, l(0), l(1.000000)
    endif 
    if_z r7.w
      if_z cb2[58].y
        ftou r7.w, r5.w
        add r9.zw, r11.yyyz, -cb2[r7.w + 20].xxxy
        mul r9.zw, r9.zzzw, cb2[r7.w + 20].zzzz
        mad r17.xy, r9.zwzz, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
        itof r7.w, cb2[26].y
        add r17.z, r5.w, r7.w
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r7.w, r17.xyzx, t13.xxxx, s13, r3.w
        sample_l_indexable(texture2darray)(float,float,float,float) r8.w, r17.xyzx, t31.yzwx, s0, l(0.000000)
        add r7.w, r7.w, r8.w
        add_sat r7.w, r7.w, l(-1.000000)
        mul r8.w, r7.w, r7.w
        mul r4.w, r7.w, r8.w
      endif 
      if_nz cb2[58].y
        mov r17.x, -r9.x
        ftou r7.w, r5.w
        add r5.w, r5.w, l(1.000000)
        min r5.w, r5.w, l(2.000000)
        ftou r5.w, r5.w
        add r6.w, -r6.w, l(1.000000)
        mul r6.w, r6.w, l(28.000000)
        ftou r6.w, r6.w
        add r9.zw, r11.yyyz, -cb2[r7.w + 20].xxxy
        mul r9.zw, r9.zzzw, cb2[r7.w + 20].zzzz
        mad r9.zw, r9.zzzw, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
        add r11.yz, r11.yyzy, -cb2[r5.w + 20].xxyx
        mul r11.yz, r11.yyzy, cb2[r5.w + 20].zzzz
        mad r11.yz, r11.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
        mov r17.y, r10.x
        mov r17.z, r9.x
        mov r8.w, l(0)
        mov r10.w, l(0)
        loop 
          uge r11.w, r10.w, l(8)
          breakc_nz r11.w
          ult r11.w, r6.w, r10.w
          movc r12.yz, r11.wwww, r11.yyzy, r9.zzwz
          movc r12.w, r11.w, cb2[r5.w + 20].w, cb2[r7.w + 20].w
          movc r11.w, r11.w, r5.w, r7.w
          dp2 r18.x, icb[r10.w + 0].yxyy, r17.xyxx
          dp2 r18.y, icb[r10.w + 0].yxyy, r17.yzyy
          mad r18.xy, r18.xyxx, r12.wwww, r12.yzyy
          iadd r11.w, r11.w, cb2[26].y
          utof r18.z, r11.w
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r11.w, r18.xyzx, t13.xxxx, s13, r3.w
          sample_l_indexable(texture2darray)(float,float,float,float) r12.y, r18.xyzx, t31.yxzw, s0, l(0.000000)
          add r11.w, r11.w, r12.y
          add_sat r11.w, r11.w, l(-1.000000)
          mad r8.w, r11.w, l(0.125000), r8.w
          iadd r10.w, r10.w, l(1)
        endloop 
        mul r3.w, r8.w, r8.w
        mul r4.w, r8.w, r3.w
      endif 
    endif 
  endif 
else 
  mov r4.w, l(1.000000)
endif 
dp3 r3.w, r4.xyzx, cb2[17].xyzx
lt r5.w, l(0.000000), |r3.w|
if_nz r5.w
  lt r5.w, l(0.000000), r4.w
  if_nz r5.w
    mul r5.w, r2.w, cb2[18].w
    mul r5.w, r5.w, l(0.250000)
    if_nz cb2[23].x
      add r17.xyz, v7.xyzx, cb1[24].xyzx
      mov r17.w, l(1.000000)
      dp4 r6.w, cb2[24].xyzw, r17.xyzw
      dp4 r7.w, cb2[25].xyzw, r17.xyzw
      frc r17.x, r6.w
      frc r17.y, r7.w
      iadd r6.w, l(-1), cb2[23].x
      utof r17.z, r6.w
      sample_l_indexable(texture2darray)(float,float,float,float) r11.yzw, r17.xyzx, t20.wxyz, s2, l(0.000000)
      add r11.yzw, r11.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
      mad r11.yzw, cb2[23].yyyy, r11.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
      mul r11.yzw, r11.yyzw, cb2[18].xxyz
    else 
      mov r11.yzw, cb2[18].xxyz
    endif 
    if_z cb0[26].y
      ushr r6.w, cb2[53].x, l(16)
      ult r7.w, l(0), r6.w
      and r7.w, r1.y, r7.w
      if_nz r7.w
        iadd r6.w, r6.w, cb2[0].x
        iadd r6.w, r6.w, l(-1)
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r7.w, r6.w, l(52), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r6.w, l(68), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r6.w, l(84), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.xyzw, r6.w, l(132), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r20.xyzw, r6.w, l(148), t12.xyzw
        mad r8.w, |r3.w|, l(-0.200000), l(0.400000)
        lt r9.z, r3.w, l(0.000000)
        movc r8.w, r9.z, -r8.w, r8.w
        mad r21.xyz, r4.xyzx, r8.wwww, v7.xyzx
        mov r21.w, l(1.000000)
        dp4 r17.x, r17.xyzw, r21.xyzw
        dp4 r17.y, r18.xyzw, r21.xyzw
        mad r9.zw, r17.xxxy, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
        add r9.zw, r20.zzzw, r9.zzzw
        mul r9.zw, r20.xxxy, r9.zzzw
        div r12.yz, r7.wwww, r19.xxzx
        add r17.xy, -r12.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
        ge r17.xy, r9.zwzz, r17.xyxx
        ge r12.yz, r12.yyzy, r9.zzwz
        or r12.yz, r12.yyzy, r17.xxyx
        or r8.w, r12.z, r12.y
        if_z r8.w
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r8.w, r6.w, l(28), t12.xxxx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r6.w, l(100), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.yz, r6.w, l(164), t12.xxyx
          dp4 r6.w, r17.xyzw, r21.xyzw
          mov_sat r9.zw, r9.zzzw
          mad r17.xy, r9.zwzz, r19.xzxx, r19.ywyy
          add r6.w, r12.y, r6.w
          div r6.w, r6.w, r12.z
          max r6.w, r6.w, l(0.00006104)
          and r8.w, r8.w, l(0x0000ffff)
          if_nz cb2[58].y
            mov r18.x, -r9.x
            utof r19.z, r8.w
            mov r18.y, r10.x
            mov r18.z, r9.x
            mov r9.zw, l(0,0,0,0)
            loop 
              ige r10.w, r9.w, l(8)
              breakc_nz r10.w
              dp2 r20.x, icb[r9.w + 0].yxyy, r18.xyxx
              dp2 r20.y, icb[r9.w + 0].yxyy, r18.yzyy
              mad r19.xy, r20.xyxx, r7.wwww, r17.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.w, r19.xyzx, t9.xxxx, s13, r6.w
              mad r9.z, r10.w, l(0.125000), r9.z
              iadd r9.w, r9.w, l(1)
            endloop 
          else 
            utof r17.z, r8.w
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r9.z, r17.xyzx, t9.xxxx, s13, r6.w
          endif 
          mul r6.w, r9.z, r9.z
          mul r6.w, r9.z, r6.w
        else 
          mov r6.w, l(1.000000)
        endif 
        mul r4.w, r4.w, r6.w
      else 
        and r6.w, cb2[53].x, l(0x0000ffff)
        ult r7.w, l(0), r6.w
        not r8.w, r1.y
        and r7.w, r7.w, r8.w
        if_nz r7.w
          iadd r6.w, r6.w, cb2[0].x
          iadd r6.w, r6.w, l(-1)
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r7.w, r6.w, l(52), t12.xxxx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r6.w, l(68), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r6.w, l(84), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.xyzw, r6.w, l(132), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r20.xyzw, r6.w, l(148), t12.xyzw
          mad r8.w, |r3.w|, l(-0.200000), l(0.400000)
          lt r9.z, r3.w, l(0.000000)
          movc r8.w, r9.z, -r8.w, r8.w
          mad r21.xyz, r4.xyzx, r8.wwww, v7.xyzx
          mov r21.w, l(1.000000)
          dp4 r17.x, r17.xyzw, r21.xyzw
          dp4 r17.y, r18.xyzw, r21.xyzw
          mad r9.zw, r17.xxxy, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
          add r9.zw, r20.zzzw, r9.zzzw
          mul r9.zw, r20.xxxy, r9.zzzw
          div r12.yz, r7.wwww, r19.xxzx
          add r17.xy, -r12.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
          ge r17.xy, r9.zwzz, r17.xyxx
          ge r12.yz, r12.yyzy, r9.zzwz
          or r12.yz, r12.yyzy, r17.xxyx
          or r8.w, r12.z, r12.y
          if_z r8.w
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r8.w, r6.w, l(28), t12.xxxx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r6.w, l(100), t12.xyzw
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.yz, r6.w, l(164), t12.xxyx
            dp4 r6.w, r17.xyzw, r21.xyzw
            mov_sat r9.zw, r9.zzzw
            mad r17.xy, r9.zwzz, r19.xzxx, r19.ywyy
            add r6.w, r12.y, r6.w
            div r6.w, r6.w, r12.z
            max r6.w, r6.w, l(0.00006104)
            and r8.w, r8.w, l(0x0000ffff)
            if_nz cb2[58].y
              mov r18.x, -r9.x
              utof r19.z, r8.w
              mov r18.y, r10.x
              mov r18.z, r9.x
              mov r9.zw, l(0,0,0,0)
              loop 
                ige r10.w, r9.w, l(8)
                breakc_nz r10.w
                dp2 r20.x, icb[r9.w + 0].yxyy, r18.xyxx
                dp2 r20.y, icb[r9.w + 0].yxyy, r18.yzyy
                mad r19.xy, r20.xyxx, r7.wwww, r17.xyxx
                sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.w, r19.xyzx, t9.xxxx, s13, r6.w
                mad r9.z, r10.w, l(0.125000), r9.z
                iadd r9.w, r9.w, l(1)
              endloop 
            else 
              utof r17.z, r8.w
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r9.z, r17.xyzx, t9.xxxx, s13, r6.w
            endif 
            mul r6.w, r9.z, r9.z
            mul r6.w, r9.z, r6.w
          else 
            mov r6.w, l(1.000000)
          endif 
          mul r4.w, r4.w, r6.w
        endif 
      endif 
    endif 
    mad r6.w, -r3.x, l(0.500000), l(1.000000)
    mad r6.w, -|r3.w|, r6.w, l(1.000000)
    mul r6.w, r6.w, r6.w
    mad r6.w, -r6.w, l(0.620000), l(0.620000)
    add r6.w, -|r3.w|, r6.w
    mad r6.w, r3.z, r6.w, |r3.w|
    mul r6.w, r4.w, r6.w
    lt r7.w, l(0.000000), r3.w
    mad r17.xyz, r6.wwww, r11.yzwy, r15.xyzx
    mov_sat r3.w, r3.w
    mad r12.yzw, -v7.xxyz, r1.wwww, cb2[17].xxyz
    dp3 r1.w, r12.yzwy, r12.yzwy
    rsq r1.w, r1.w
    mul r12.yzw, r1.wwww, r12.yyzw
    dp3 r1.w, r12.yzwy, r6.xyzx
    dp3 r6.w, r4.xyzx, r12.yzwy
    mad r8.w, |r6.w|, r2.w, -|r6.w|
    mad r6.w, |r6.w|, r8.w, l(1.000000)
    mad r8.w, r3.w, r1.z, r3.y
    mul r6.w, r6.w, r6.w
    mul r6.w, r8.w, r6.w
    rcp r6.w, r6.w
    mul r3.w, r5.w, r3.w
    mul r3.w, r3.w, r6.w
    mul r3.w, r4.w, r3.w
    mad r12.yzw, r3.wwww, r11.yyzw, r0.yyzw
    add_sat r1.w, -r1.w, l(1.000000)
    mul r4.w, r1.w, r1.w
    mul r4.w, r4.w, r4.w
    mul r1.w, r1.w, r4.w
    mul r1.w, r1.w, r3.w
    mad r18.xyz, r1.wwww, r11.zwyz, r16.xyzx
    mov r17.w, r18.z
    mov r15.w, r16.z
    movc r15.xyzw, r7.wwww, r17.xyzw, r15.xyzw
    mov r18.zw, r12.yyyz
    mov r16.zw, r0.yyyz
    movc r17.xyzw, r7.wwww, r18.xyzw, r16.xyzw
    movc r0.w, r7.w, r12.w, r0.w
    mov r16.z, r15.w
    mov r16.xy, r17.xyxx
    mov r0.yz, r17.zzwz
  endif 
endif 
mov r17.x, -r9.x
not r1.w, r1.y
mad r3.x, -r3.x, l(0.500000), l(1.000000)
mov r18.xy, l(0,0,0,0)
mov r19.w, l(0)
mov r20.xyz, v7.xyzx
mov r20.w, l(1.000000)
mov r21.w, l(1.000000)
mov r17.z, r9.x
mov r22.w, l(1.000000)
mov r23.z, l(1.000000)
mov r24.w, l(1.000000)
mov r17.yw, r10.xxxx
mov r9.y, r17.w
mov r25.w, l(1.000000)
mov r10.y, r17.x
mov r10.z, r9.x
mov r26.w, l(1.000000)
mov r27.x, r10.x
mov r27.y, r17.x
mov r27.z, r9.x
mov r28.x, r10.x
mov r28.y, r17.x
mov r28.z, r9.x
mov r29.x, r10.x
mov r29.y, r17.x
mov r29.z, r9.x
mov r11.yzw, r15.xxyz
mov r30.xyz, r16.zxyz
mov r31.xyz, r0.yzwy
mov r3.w, cb2[58].y
mov r4.w, l(0)
loop 
  uge r5.w, r4.w, cb2[0].x
  breakc_nz r5.w
  ushr r18.z, r4.w, l(5)
  iadd r19.xyz, r14.xyzx, r18.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r5.w, r19.xyzw, t6.yzwx
  mov r12.yzw, r11.yyzw
  mov r19.xyz, r30.xyzx
  mov r32.xyz, r31.xyzx
  mov r6.w, r3.w
  mov r7.w, r5.w
  loop 
    breakc_z r7.w
    firstbit_lo r8.w, r7.w
    ishl r9.z, l(1), r8.w
    and r9.w, r7.w, r9.z
    if_nz r9.w
      xor r7.w, r7.w, r9.z
      iadd r8.w, r4.w, r8.w
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r33.xyzw, r8.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r34.xy, r8.w, l(16), t11.xyxx
      add r33.xyz, r33.xyzx, -v7.xyzx
      mov r34.z, r33.w
      lt r33.xyz, |r33.xyzx|, r34.zxyz
      and r9.z, r33.y, r33.x
      and r9.z, r33.z, r9.z
      if_nz r9.z
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r8.w, l(0), t12.wxyz
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r8.w, l(16), t12.zxyw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r8.w, l(32), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r8.w, l(48), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r8.w, l(64), t12.yzwx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r8.w, l(80), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r8.w, l(96), t12.yzwx
        ubfe r9.z, l(3), l(24), r34.w
        switch r9.z
          case l(4)
          lt r9.z, l(0.000000), r39.x
          mov r40.xy, r38.zwzz
          mov r40.z, r39.w
          mad r41.xyz, -r40.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r33.yzwy
          add r42.xyz, r41.xyzx, -v7.xyzx
          dp3 r9.w, r40.xyzx, r42.xyzx
          div_sat r10.w, -r9.w, r39.x
          mad r43.xyz, r10.wwww, r40.xyzx, r41.xyzx
          movc r43.xyz, r9.zzzz, r43.xyzx, r33.yzwy
          add r43.xyz, r43.xyzx, -v7.xyzx
          dp3 r13.w, r43.xyzx, r43.xyzx
          rsq r14.w, r13.w
          mul r43.xyz, r14.wwww, r43.xyzx
          dp3 r14.w, r4.xyzx, r43.xyzx
          lt r15.w, l(0.000000), |r14.w|
          if_nz r15.w
            sqrt r15.w, r13.w
            mul r16.w, r36.x, r36.x
            div r13.w, r16.w, r13.w
            min r13.w, r13.w, l(1.000000)
            mad_sat r18.zw, r15.wwww, r35.xxxz, r35.yyyw
            mul r43.xy, r18.zwzz, r18.zwzz
            mad r18.zw, r18.zzzw, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
            mul r18.zw, r18.zzzw, r43.xxxy
            mul r13.w, r13.w, r18.z
            mul r13.w, r18.w, r13.w
            lt r15.w, l(0.000000), r13.w
            if_nz r15.w
              ubfe r15.w, l(3), l(27), r34.w
              ine r15.w, r15.w, l(1)
              if_nz r15.w
                mad r15.w, |r14.w|, l(-0.200000), l(0.400000)
                lt r16.w, r14.w, l(0.000000)
                movc r15.w, r16.w, -r15.w, r15.w
                mad r43.xyz, r4.xyzx, r15.wwww, v7.xyzx
                add r43.xyz, -r37.xyzx, r43.xyzx
                max r15.w, |r43.z|, |r43.y|
                max r15.w, r15.w, |r43.x|
                div r15.w, r38.x, r15.w
                add r15.w, r38.y, r15.w
                dp3 r16.w, r43.xyzx, r43.xyzx
                rsq r16.w, r16.w
                max r15.w, r15.w, l(0.00006104)
                and r18.z, r34.w, l(0x0000ffff)
                utof r44.w, r18.z
                mov r18.zw, l(0,0,0,0)
                loop 
                  ige r23.w, r18.w, l(8)
                  breakc_nz r23.w
                  dp2 r45.y, icb[r18.w + 0].yxyy, r17.xyxx
                  dp2 r45.z, icb[r18.w + 0].yxyy, r17.yzyy
                  mul r45.yz, r36.yyyy, r45.yyzy
                  mul r45.x, r12.x, r45.y
                  mul r45.w, r11.x, r45.y
                  mad r44.xyz, r43.xyzx, r16.wwww, r45.xzwx
                  sample_c_lz_indexable(texturecubearray)(float,float,float,float) r23.w, r44.xyzw, t10.xxxx, s13, r15.w
                  mad r18.z, r23.w, l(0.125000), r18.z
                  iadd r18.w, r18.w, l(1)
                endloop 
              else 
                mov r18.z, l(1.000000)
              endif 
              mul r13.w, r13.w, r18.z
              lt r15.w, l(0.000000), r13.w
              if_nz r15.w
                mul r15.w, r2.w, r34.x
                mul r15.w, r15.w, l(0.250000)
                dp3 r16.w, r40.xyzx, r13.xyzx
                dp3 r18.w, r13.xyzx, r42.xyzx
                mad r23.w, -r16.w, r16.w, r39.x
                mad r9.w, r16.w, r18.w, -r9.w
                div_sat r9.w, r9.w, r23.w
                div r16.w, r23.w, r39.x
                mul r16.w, r16.w, l(10.000000)
                min r16.w, r16.w, l(1.000000)
                add r9.w, -r10.w, r9.w
                mad r9.w, r16.w, r9.w, r10.w
                mad r40.xyz, r9.wwww, r40.xyzx, r41.xyzx
                movc r40.xyz, r9.zzzz, r40.xyzx, r33.yzwy
                add r40.xyz, r40.xyzx, -v7.xyzx
                dp3 r9.z, r40.xyzx, r40.xyzx
                rsq r9.z, r9.z
                mul r41.xyz, r9.zzzz, r40.xyzx
                ubfe r9.w, l(4), l(16), r34.w
                ult r10.w, l(0), r9.w
                and r10.w, r1.y, r10.w
                if_nz r10.w
                  iadd r9.w, r9.w, cb2[0].x
                  iadd r9.w, r9.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r10.w, r9.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r9.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r9.w, l(116), t12.xyzw
                  mad r16.w, |r14.w|, l(-0.200000), l(0.400000)
                  lt r18.w, r14.w, l(0.000000)
                  movc r16.w, r18.w, -r16.w, r16.w
                  mad r21.xyz, r4.xyzx, r16.wwww, v7.xyzx
                  dp4 r16.w, r42.xyzw, r21.xyzw
                  dp4 r18.w, r43.xyzw, r21.xyzw
                  lt r23.w, r18.w, r16.w
                  if_z r23.w
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r9.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r9.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r9.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xyzw, r9.w, l(148), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r46.xy, r9.w, l(164), t12.xyxx
                    dp4 r42.x, r42.xyzw, r21.xyzw
                    dp4 r42.y, r43.xyzw, r21.xyzw
                    div r21.xy, r42.xyxx, r18.wwww
                    mad r21.xy, r21.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r21.xy, r45.zwzz, r21.xyxx
                    mul r21.xy, r45.xyxx, r21.xyxx
                    div r42.xy, r10.wwww, r44.xzxx
                    add r42.zw, -r42.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                    ge r42.zw, r21.xxxy, r42.zzzw
                    ge r42.xy, r42.xyxx, r21.xyxx
                    or r42.xy, r42.xyxx, r42.zwzz
                    or r21.z, r42.y, r42.x
                    mov_sat r21.xy, r21.xyxx
                    mad r42.xy, r21.xyxx, r44.xzxx, r44.ywyy
                    mul r21.x, r18.w, r46.y
                    mad r16.w, r46.x, r18.w, r16.w
                    div r16.w, r16.w, r21.x
                  else 
                    mov r21.z, l(-1)
                  endif 
                  or r18.w, r23.w, r21.z
                  if_z r18.w
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r9.w, r9.w, l(28), t12.xxxx
                    max r16.w, r16.w, l(0.00006104)
                    and r9.w, r9.w, l(0x0000ffff)
                    if_nz r6.w
                      utof r21.z, r9.w
                      mov r18.w, l(0)
                      mov r23.w, l(0)
                      loop 
                        ige r27.w, r23.w, l(8)
                        breakc_nz r27.w
                        dp2 r43.x, icb[r23.w + 0].yxyy, r17.xwxx
                        dp2 r43.y, icb[r23.w + 0].xyxx, r9.xyxx
                        mad r21.xy, r43.xyxx, r10.wwww, r42.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.x, r21.xyzx, t9.xxxx, s13, r16.w
                        mad r18.w, r21.x, l(0.125000), r18.w
                        iadd r23.w, r23.w, l(1)
                      endloop 
                    else 
                      utof r42.z, r9.w
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r18.w, r42.xyzx, t9.xxxx, s13, r16.w
                    endif 
                    mul r9.w, r18.w, r18.w
                    mul r9.w, r18.w, r9.w
                  else 
                    mov r9.w, l(1.000000)
                  endif 
                  mul r13.w, r9.w, r13.w
                else 
                  ubfe r9.w, l(4), l(20), r34.w
                  ult r10.w, l(0), r9.w
                  and r10.w, r1.w, r10.w
                  if_nz r10.w
                    iadd r9.w, r9.w, cb2[0].x
                    iadd r9.w, r9.w, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r10.w, r9.w, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r9.w, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r9.w, l(116), t12.xyzw
                    mad r16.w, |r14.w|, l(-0.200000), l(0.400000)
                    lt r21.x, r14.w, l(0.000000)
                    movc r16.w, r21.x, -r16.w, r16.w
                    mad r22.xyz, r4.xyzx, r16.wwww, v7.xyzx
                    dp4 r16.w, r42.xyzw, r22.xyzw
                    dp4 r21.x, r43.xyzw, r22.xyzw
                    lt r21.y, r21.x, r16.w
                    if_z r21.y
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r9.w, l(68), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r9.w, l(84), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r9.w, l(132), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xyzw, r9.w, l(148), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r46.xy, r9.w, l(164), t12.xyxx
                      dp4 r42.x, r42.xyzw, r22.xyzw
                      dp4 r42.y, r43.xyzw, r22.xyzw
                      div r22.xy, r42.xyxx, r21.xxxx
                      mad r22.xy, r22.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                      add r22.xy, r45.zwzz, r22.xyxx
                      mul r22.xy, r45.xyxx, r22.xyxx
                      div r42.xy, r10.wwww, r44.xzxx
                      add r42.zw, -r42.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                      ge r42.zw, r22.xxxy, r42.zzzw
                      ge r42.xy, r42.xyxx, r22.xyxx
                      or r42.xy, r42.xyxx, r42.zwzz
                      or r21.z, r42.y, r42.x
                      mov_sat r22.xy, r22.xyxx
                      mad r22.xy, r22.xyxx, r44.xzxx, r44.ywyy
                      mul r23.w, r21.x, r46.y
                      mad r16.w, r46.x, r21.x, r16.w
                      div r16.w, r16.w, r23.w
                    else 
                      mov r21.z, l(-1)
                    endif 
                    or r21.x, r21.y, r21.z
                    if_z r21.x
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r9.w, r9.w, l(28), t12.xxxx
                      max r16.w, r16.w, l(0.00006104)
                      and r9.w, r9.w, l(0x0000ffff)
                      if_nz r6.w
                        utof r21.z, r9.w
                        mov r23.w, l(0)
                        mov r27.w, l(0)
                        loop 
                          ige r28.w, r27.w, l(8)
                          breakc_nz r28.w
                          dp2 r42.x, icb[r27.w + 0].xyxx, r10.xyxx
                          dp2 r42.y, icb[r27.w + 0].yxyy, r10.xzxx
                          mad r21.xy, r42.xyxx, r10.wwww, r22.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.x, r21.xyzx, t9.xxxx, s13, r16.w
                          mad r23.w, r21.x, l(0.125000), r23.w
                          iadd r27.w, r27.w, l(1)
                        endloop 
                      else 
                        utof r22.z, r9.w
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.w, r22.xyzx, t9.xxxx, s13, r16.w
                      endif 
                      mul r9.w, r23.w, r23.w
                      mul r9.w, r23.w, r9.w
                    else 
                      mov r9.w, l(1.000000)
                    endif 
                    mul r13.w, r9.w, r13.w
                  endif 
                endif 
                mad r9.w, -|r14.w|, r3.x, l(1.000000)
                mul r9.w, r9.w, r9.w
                mad r9.w, -r9.w, l(0.620000), l(0.620000)
                add r9.w, -|r14.w|, r9.w
                mad r9.w, r3.z, r9.w, |r14.w|
                mul r9.w, r13.w, r9.w
                mov r34.x, r33.x
                lt r10.w, l(0.000000), r14.w
                mad r21.xyz, r9.wwww, r34.xyzx, r12.yzwy
                dp3_sat r9.w, r4.xyzx, r41.xyzx
                mad r22.xyz, r40.xyzx, r9.zzzz, r6.xyzx
                dp3 r9.z, r22.xyzx, r22.xyzx
                rsq r9.z, r9.z
                mul r22.xyz, r9.zzzz, r22.xyzx
                dp3 r9.z, r22.xyzx, r6.xyzx
                dp3 r14.w, r4.xyzx, r22.xyzx
                mad r16.w, |r14.w|, r2.w, -|r14.w|
                mad r14.w, |r14.w|, r16.w, l(1.000000)
                mad r16.w, r9.w, r1.z, r3.y
                mul r14.w, r14.w, r14.w
                mul r14.w, r16.w, r14.w
                rcp r14.w, r14.w
                mul r9.w, r15.w, r9.w
                mul r9.w, r9.w, r14.w
                mul r9.w, r13.w, r9.w
                mad r22.xyz, r9.wwww, r34.xyzx, r32.xyzx
                add_sat r9.z, -r9.z, l(1.000000)
                mul r13.w, r9.z, r9.z
                mul r13.w, r13.w, r13.w
                mul r9.z, r9.z, r13.w
                mul r9.z, r9.z, r9.w
                mad r40.xyz, r9.zzzz, r34.xyzx, r19.xyzx
                movc r12.yzw, r10.wwww, r21.xxyz, r12.yyzw
                movc r19.xyz, r10.wwww, r40.xyzx, r19.xyzx
                movc r32.xyz, r10.wwww, r22.xyzx, r32.xyzx
              endif 
            endif 
          endif 
          break 
          case l(2)
          mov r21.xy, r36.zwzz
          mov r21.z, r37.w
          add r21.xyz, r21.xyzx, -v7.xyzx
          dp3 r9.z, r21.xyzx, r21.xyzx
          rsq r9.z, r9.z
          mul r22.xyz, r9.zzzz, r21.xyzx
          dp3 r9.w, r4.xyzx, r22.xyzx
          lt r10.w, l(0.000000), |r9.w|
          if_nz r10.w
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r8.w, l(112), t12.yzwx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r8.w, l(128), t12.zxyw
            mov r42.xyz, r40.xyzx
            mov r42.w, r41.y
            dp4 r10.w, r42.xyzw, r20.xyzw
            lt r13.w, r10.w, l(1.000000)
            if_nz r13.w
              mov r22.xyz, l(1.000000,1.000000,1.000000,0)
              mov r13.w, l(0)
            else 
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r8.w, l(172), t12.yzwx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r8.w, l(188), t12.wxyz
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xyzw, r8.w, l(204), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.w, r8.w, l(236), t12.xxxx
              add r46.xyz, r33.yzwy, -v7.xyzx
              mul r15.w, r36.x, r36.x
              dp3 r16.w, r46.xyzx, r46.xyzx
              div r15.w, r15.w, r16.w
              min r15.w, r15.w, l(1.000000)
              mad_sat r35.xy, r10.wwww, r35.xzxx, r35.ywyy
              mul r35.zw, r35.xxxy, r35.xxxy
              mad r35.xy, r35.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
              mul r35.xy, r35.xyxx, r35.zwzz
              mul r15.w, r15.w, r35.x
              mul r15.w, r35.y, r15.w
              mov r37.w, r38.x
              dp4 r35.x, r37.xyzw, r20.xyzw
              mov r46.xyz, r38.yzwy
              mov r46.w, r39.w
              dp4 r35.y, r46.xyzw, r20.xyzw
              div r23.xy, r35.xyxx, r10.wwww
              lt r10.w, r43.w, l(0.00048828)
              if_nz r10.w
                mov r44.y, r45.x
                mad_sat r35.xy, |r23.xyxx|, r44.zwzz, r44.xyxx
                mul r35.zw, r35.xxxy, r35.xxxy
                mad r35.xy, r35.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
                mul r35.xy, r35.xyxx, r35.zwzz
                mul r10.w, r35.y, r35.x
              else 
                mov r43.w, r44.y
                mul_sat r35.xyzw, |r23.yyxx|, r43.xyzw
                log r35.xyzw, r35.xyzw
                mul r35.xyzw, r35.xyzw, r44.xxxx
                exp r35.xyzw, r35.xyzw
                add r35.xy, r35.zwzz, r35.xyxx
                log r35.xy, r35.xyxx
                mul r35.xy, r35.xyxx, r45.xxxx
                exp r35.xy, r35.xyxx
                mul r16.w, r35.x, r44.z
                mad r27.w, r44.w, r35.y, l(-1.000000)
                mad r16.w, r44.w, r35.y, -r16.w
                div_sat r16.w, r27.w, r16.w
                mul r27.w, r16.w, r16.w
                mad r16.w, r16.w, l(-2.000000), l(3.000000)
                mul r10.w, r16.w, r27.w
              endif 
              mul r13.w, r10.w, r15.w
              and r10.w, r14.w, l(255)
              if_nz r10.w
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyz, r8.w, l(220), t12.xyzx
                dp3 r14.w, r45.yzwy, r23.xyzx
                dp3 r15.w, r35.xyzx, r23.xyzx
                frc r35.x, r14.w
                frc r35.y, r15.w
                iadd r10.w, r10.w, l(-1)
                utof r35.z, r10.w
                sample_l_indexable(texture2darray)(float,float,float,float) r22.xyz, r35.xyzx, t20.xyzw, s2, l(0.000000)
              else 
                mov r22.xyz, l(1.000000,1.000000,1.000000,0)
              endif 
            endif 
            mov r33.yz, r34.yyzy
            mul r22.xyz, r22.xyzx, r33.xyzx
            lt r10.w, l(0.000000), r13.w
            if_nz r10.w
              ubfe r10.w, l(3), l(27), r34.w
              ine r10.w, r10.w, l(1)
              if_nz r10.w
                mad r10.w, |r9.w|, l(-0.200000), l(0.400000)
                lt r14.w, r9.w, l(0.000000)
                movc r10.w, r14.w, -r10.w, r10.w
                mad r24.xyz, r4.xyzx, r10.wwww, v7.xyzx
                mov r40.xyz, r39.xyzx
                dp4 r10.w, r40.xyzw, r24.xyzw
                dp4 r14.w, r42.xyzw, r24.xyzw
                ge r15.w, r14.w, r10.w
                if_nz r15.w
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.y, r8.w, l(144), t12.xxxx
                  mov r37.w, r38.x
                  dp4 r23.x, r37.xyzw, r24.xyzw
                  mov r39.xyz, r38.yzwy
                  dp4 r23.y, r39.xyzw, r24.xyzw
                  div r23.xy, r23.xyxx, r14.wwww
                  mad_sat r23.xy, r23.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  mad r24.xy, r23.xyxx, r41.zwzz, r41.xyxx
                  div r8.w, r10.w, r14.w
                  max r8.w, r8.w, l(0.00006104)
                  and r10.w, r34.w, l(0x0000ffff)
                  if_nz r6.w
                    utof r33.z, r10.w
                    mov r14.w, l(0)
                    mov r15.w, l(0)
                    loop 
                      ige r16.w, r15.w, l(8)
                      breakc_nz r16.w
                      dp2 r23.x, icb[r15.w + 0].xyxx, r27.xyxx
                      dp2 r23.y, icb[r15.w + 0].yxyy, r27.xzxx
                      mad r33.xy, r23.xyxx, r36.yyyy, r24.xyxx
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r16.w, r33.xyzx, t9.xxxx, s13, r8.w
                      mad r14.w, r16.w, l(0.125000), r14.w
                      iadd r15.w, r15.w, l(1)
                    endloop 
                  else 
                    utof r24.z, r10.w
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r14.w, r24.xyzx, t9.xxxx, s13, r8.w
                  endif 
                  mul r8.w, r14.w, r14.w
                  mul r8.w, r14.w, r8.w
                else 
                  mov r8.w, l(1.000000)
                endif 
              else 
                mov r8.w, l(1.000000)
              endif 
              mul r8.w, r8.w, r13.w
              lt r10.w, l(0.000000), r8.w
              if_nz r10.w
                mul r10.w, r2.w, r34.x
                mul r10.w, r10.w, l(0.250000)
                ubfe r13.w, l(4), l(16), r34.w
                ult r15.w, l(0), r13.w
                and r15.w, r1.y, r15.w
                if_nz r15.w
                  iadd r13.w, r13.w, cb2[0].x
                  iadd r13.w, r13.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.w, r13.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r13.w, l(68), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r13.w, l(84), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r13.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r13.w, l(116), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r13.w, l(132), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r13.w, l(148), t12.xyzw
                  mad r16.w, |r9.w|, l(-0.200000), l(0.400000)
                  lt r23.x, r9.w, l(0.000000)
                  movc r16.w, r23.x, -r16.w, r16.w
                  mad r25.xyz, r4.xyzx, r16.wwww, v7.xyzx
                  dp4 r23.x, r33.xyzw, r25.xyzw
                  dp4 r23.y, r35.xyzw, r25.xyzw
                  dp4 r16.w, r36.xyzw, r25.xyzw
                  dp4 r24.x, r37.xyzw, r25.xyzw
                  lt r24.y, r24.x, r16.w
                  div r23.xy, r23.xyxx, r24.xxxx
                  mad r23.xy, r23.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r23.xy, r39.zwzz, r23.xyxx
                  mul r23.xy, r39.xyxx, r23.xyxx
                  div r25.xy, r15.wwww, r38.xzxx
                  add r33.xy, -r25.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                  ge r33.xy, r23.xyxx, r33.xyxx
                  ge r25.xy, r25.xyxx, r23.xyxx
                  or r25.xy, r25.xyxx, r33.xyxx
                  or r24.z, r25.y, r25.x
                  or r24.y, r24.y, r24.z
                  if_z r24.y
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r24.y, r13.w, l(28), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r25.xy, r13.w, l(164), t12.xyxx
                    mov_sat r23.xy, r23.xyxx
                    mad r33.xy, r23.xyxx, r38.xzxx, r38.ywyy
                    mul r13.w, r24.x, r25.y
                    mad r16.w, r25.x, r24.x, r16.w
                    div r13.w, r16.w, r13.w
                    max r13.w, r13.w, l(0.00006104)
                    and r16.w, r24.y, l(0x0000ffff)
                    if_nz r6.w
                      utof r24.z, r16.w
                      mov r23.xy, l(0,0,0,0)
                      loop 
                        ige r25.x, r23.y, l(8)
                        breakc_nz r25.x
                        dp2 r25.x, icb[r23.y + 0].xyxx, r28.xyxx
                        dp2 r25.y, icb[r23.y + 0].yxyy, r28.xzxx
                        mad r24.xy, r25.xyxx, r15.wwww, r33.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.x, r24.xyzx, t9.xxxx, s13, r13.w
                        mad r23.x, r24.x, l(0.125000), r23.x
                        iadd r23.y, r23.y, l(1)
                      endloop 
                    else 
                      utof r33.z, r16.w
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.x, r33.xyzx, t9.xxxx, s13, r13.w
                    endif 
                    mul r13.w, r23.x, r23.x
                    mul r13.w, r23.x, r13.w
                  else 
                    mov r13.w, l(1.000000)
                  endif 
                  mul r8.w, r8.w, r13.w
                else 
                  ubfe r13.w, l(4), l(20), r34.w
                  ult r15.w, l(0), r13.w
                  and r15.w, r1.w, r15.w
                  if_nz r15.w
                    iadd r13.w, r13.w, cb2[0].x
                    iadd r13.w, r13.w, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.w, r13.w, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r13.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r13.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r13.w, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r13.w, l(116), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r13.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r13.w, l(148), t12.xyzw
                    mad r16.w, |r9.w|, l(-0.200000), l(0.400000)
                    lt r23.y, r9.w, l(0.000000)
                    movc r16.w, r23.y, -r16.w, r16.w
                    mad r26.xyz, r4.xyzx, r16.wwww, v7.xyzx
                    dp4 r24.x, r33.xyzw, r26.xyzw
                    dp4 r24.y, r34.xyzw, r26.xyzw
                    dp4 r16.w, r35.xyzw, r26.xyzw
                    dp4 r23.y, r36.xyzw, r26.xyzw
                    lt r24.z, r23.y, r16.w
                    div r24.xy, r24.xyxx, r23.yyyy
                    mad r24.xy, r24.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r24.xy, r38.zwzz, r24.xyxx
                    mul r24.xy, r38.xyxx, r24.xyxx
                    div r25.xy, r15.wwww, r37.xzxx
                    add r26.xy, -r25.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                    ge r26.xy, r24.xyxx, r26.xyxx
                    ge r25.xy, r25.xyxx, r24.xyxx
                    or r25.xy, r25.xyxx, r26.xyxx
                    or r25.x, r25.y, r25.x
                    or r24.z, r24.z, r25.x
                    if_z r24.z
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r24.z, r13.w, l(28), t12.xxxx
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r25.xy, r13.w, l(164), t12.xyxx
                      mov_sat r24.xy, r24.xyxx
                      mad r26.xy, r24.xyxx, r37.xzxx, r37.ywyy
                      mul r13.w, r23.y, r25.y
                      mad r16.w, r25.x, r23.y, r16.w
                      div r13.w, r16.w, r13.w
                      max r13.w, r13.w, l(0.00006104)
                      and r16.w, r24.z, l(0x0000ffff)
                      if_nz r6.w
                        utof r24.z, r16.w
                        mov r23.y, l(0)
                        mov r25.x, l(0)
                        loop 
                          ige r25.y, r25.x, l(8)
                          breakc_nz r25.y
                          dp2 r33.x, icb[r25.x + 0].xyxx, r29.xyxx
                          dp2 r33.y, icb[r25.x + 0].yxyy, r29.xzxx
                          mad r24.xy, r33.xyxx, r15.wwww, r26.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.x, r24.xyzx, t9.xxxx, s13, r13.w
                          mad r23.y, r24.x, l(0.125000), r23.y
                          iadd r25.x, r25.x, l(1)
                        endloop 
                      else 
                        utof r26.z, r16.w
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.y, r26.xyzx, t9.xxxx, s13, r13.w
                      endif 
                      mul r13.w, r23.y, r23.y
                      mul r13.w, r23.y, r13.w
                    else 
                      mov r13.w, l(1.000000)
                    endif 
                    mul r8.w, r8.w, r13.w
                  endif 
                endif 
                mad r13.w, -|r9.w|, r3.x, l(1.000000)
                mul r13.w, r13.w, r13.w
                mad r13.w, -r13.w, l(0.620000), l(0.620000)
                add r13.w, -|r9.w|, r13.w
                mad r13.w, r3.z, r13.w, |r9.w|
                mul r13.w, r8.w, r13.w
                lt r15.w, l(0.000000), r9.w
                mad r24.xyz, r13.wwww, r22.xyzx, r12.yzwy
                mov_sat r9.w, r9.w
                mad r21.xyz, r21.xyzx, r9.zzzz, r6.xyzx
                dp3 r9.z, r21.xyzx, r21.xyzx
                rsq r9.z, r9.z
                mul r21.xyz, r9.zzzz, r21.xyzx
                dp3 r9.z, r21.xyzx, r6.xyzx
                dp3 r13.w, r4.xyzx, r21.xyzx
                mad r16.w, |r13.w|, r2.w, -|r13.w|
                mad r13.w, |r13.w|, r16.w, l(1.000000)
                mad r16.w, r9.w, r1.z, r3.y
                mul r13.w, r13.w, r13.w
                mul r13.w, r16.w, r13.w
                rcp r13.w, r13.w
                mul r9.w, r10.w, r9.w
                mul r9.w, r9.w, r13.w
                mul r8.w, r8.w, r9.w
                mad r21.xyz, r8.wwww, r22.xyzx, r32.xyzx
                add_sat r9.z, -r9.z, l(1.000000)
                mul r9.w, r9.z, r9.z
                mul r9.w, r9.w, r9.w
                mul r9.z, r9.w, r9.z
                mul r8.w, r8.w, r9.z
                mad r22.xyz, r8.wwww, r22.xyzx, r19.xyzx
                movc r12.yzw, r15.wwww, r24.xxyz, r12.yyzw
                movc r19.xyz, r15.wwww, r22.xyzx, r19.xyzx
                movc r32.xyz, r15.wwww, r21.xyzx, r32.xyzx
              endif 
            endif 
          endif 
          break 
          default 
          break 
        endswitch 
      endif 
    endif 
  endloop 
  mov r11.yzw, r12.yyzw
  mov r30.xyz, r19.xyzx
  mov r31.xyz, r32.xyzx
  iadd r4.w, r4.w, l(32)
endloop 
add r0.yzw, -r5.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
mul r0.yzw, r0.yyzw, r30.xxyz
mad r0.yzw, r31.xxyz, r5.xxyz, r0.yyzw
mad r0.yzw, r11.yyzw, r2.xxyz, r0.yyzw
add r1.y, -cb0[19].w, l(1.000000)
mul r1.y, r0.x, r1.y
mad r1.xzw, r7.xxyz, r1.xxxx, -r8.xxyz
mad r1.xyz, r1.yyyy, r1.xzwx, r8.xyzx
dp3 r1.w, r0.yzwy, l(0.299000, 0.587000, 0.114000, 0.000000)
max r1.w, r1.w, l(0.000100)
max r1.w, r1.w, cb1[85].x
mul r2.xyz, r1.wwww, r1.xyzx
movc r1.xyz, cb0[17].wwww, r2.xyzx, r1.xyzx
add r0.yzw, r0.yyzw, r1.xxyz
lt r1.x, l(0.000000), cb2[9].z
if_nz r1.x
  dp3 r1.x, v7.xyzx, v7.xyzx
  rsq r1.y, r1.x
  mul r1.yzw, r1.yyyy, v7.xxyz
  sqrt r1.x, r1.x
  lt r2.x, l(0.000000), cb2[13].w
  if_nz r2.x
    mad r2.xy, r1.xxxx, cb2[15].xyxx, cb2[14].zwzz
    mul r2.xy, r2.xyxx, cb2[16].xyxx
    lt r2.z, l(0.010000), |v7.z|
    mul r3.xy, v7.zzzz, cb2[15].zwzz
    mul r3.zw, r3.xxxy, l(0.000000, 0.000000, -1.442695, -1.442695)
    exp r3.zw, r3.zzzw
    add r3.zw, -r3.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    div r3.xy, r3.zwzz, r3.xyxx
    mul r3.xy, r2.xyxx, r3.xyxx
    movc r2.xy, r2.zzzz, r3.xyxx, r2.xyxx
    mul r2.xzw, r2.xxxx, cb2[12].xxyz
    exp r2.xzw, r2.xxzw
    mul r3.xyz, r2.yyyy, cb2[12].xyzx
    exp r3.xyz, r3.xyzx
    add r3.xyz, -r2.xzwx, r3.xyzx
    mad r2.xyz, cb2[13].wwww, r3.xyzx, r2.xzwx
  else 
    mad r2.w, r1.x, cb2[15].x, cb2[14].z
    mul r2.w, r2.w, cb2[16].x
    lt r3.x, l(0.010000), |v7.z|
    mul r3.y, v7.z, cb2[15].z
    mul r3.z, r3.y, l(-1.442695)
    exp r3.z, r3.z
    add r3.z, -r3.z, l(1.000000)
    div r3.y, r3.z, r3.y
    mul r3.y, r2.w, r3.y
    movc r2.w, r3.x, r3.y, r2.w
    mul r3.xyz, r2.wwww, cb2[12].xyzx
    exp r2.xyz, r3.xyzx
  endif 
  mad r2.xyz, r2.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r2.xyz, r2.xyzx, -cb2[9].zzzz
  dp3 r1.y, cb2[7].yzwy, -r1.yzwy
  mad r1.z, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r1.w, cb2[8].w, -r1.y, l(1.000000)
  mul r1.w, r1.w, r1.w
  mul r1.w, r1.w, l(12.566371)
  div r1.z, r1.z, r1.w
  add r1.x, r1.x, -cb2[10].w
  mul_sat r1.x, r1.x, cb2[11].w
  mul r1.x, r1.x, r1.z
  mov_sat r1.y, r1.y
  mad r1.y, r1.y, r1.y, l(1.000000)
  mad r1.y, r1.y, l(0.05968310), l(-1.000000)
  mad r1.y, cb2[8].z, r1.y, l(1.000000)
  mul r1.xzw, r1.xxxx, cb2[11].xxyz
  mad r1.xyz, r1.yyyy, cb2[10].xyzx, r1.xzwx
  mul r1.xyz, r1.xyzx, cb2[9].wwww
  add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r1.xyz, r1.xyzx, r3.xyzx
  mad r1.xyz, r0.yzwy, r2.xyzx, r1.xyzx
else 
  mul r1.w, v7.z, cb2[6].x
  mad r2.x, cb2[6].x, v7.z, cb2[5].x
  lt r2.y, |r1.w|, l(0.000100)
  min r2.z, r2.x, l(64.000000)
  mul r2.z, r2.z, l(1.442695)
  exp r2.z, r2.z
  mov_sat r2.w, cb2[6].z
  lt r3.x, r2.x, l(0.000000)
  add r2.x, r2.x, l(1.000000)
  movc r2.x, r3.x, r2.z, r2.x
  add r2.x, r2.x, -cb2[6].z
  movc r1.w, r2.y, l(1.000000), r1.w
  div r1.w, r2.x, r1.w
  movc r1.w, r2.y, r2.w, r1.w
  mul r1.w, r1.w, cb2[5].z
  dp3 r2.x, v7.xyzx, v7.xyzx
  sqrt r2.y, r2.x
  mad r1.w, r1.w, r2.y, cb2[5].w
  exp r1.w, r1.w
  min r1.w, r1.w, l(1.000000)
  add r1.w, -r1.w, l(1.000000)
  rsq r2.x, r2.x
  mul r2.xyz, r2.xxxx, v7.xyzx
  dp3 r2.x, cb2[7].yzwy, r2.xyzx
  mad_sat r2.x, cb2[8].y, r2.x, cb2[8].x
  add r3.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r2.xyzw, r2.xxxx, r3.xyzw, cb2[4].xyzw
  mul r1.w, r1.w, r2.w
  add r2.xyz, -r0.yzwy, r2.xyzx
  mad r1.xyz, r1.wwww, r2.xyzx, r0.yzwy
endif 
mul r0.yzw, r1.xxyz, cb1[85].yyyy
ge r1.xyz, r0.yzwy, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.yzw, r0.yyzw, r1.xxyz
min o0.xyz, r0.yzwy, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
mov o0.w, r0.x
ret 
// Approximately 2459 instruction slots used
