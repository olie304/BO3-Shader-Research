//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:24:20 2021
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// nearestClamp                      sampler      NA          NA             s0      1 
// codeTexture0                      texture  float4          2d             t0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// TEXCOORD                 1   x           1     NONE   float   x   
// TEXCOORD                 2    y          1     NONE   float    y  
// SV_POSITION              0   xyzw        2      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v0.xy
dcl_input_ps constant v1.x
dcl_input_ps constant v1.y
dcl_output o0.xyzw
dcl_temps 13
mov r0.w, l(1.000000)
mov r1.w, l(1.000000)
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v0.xyxx, t0.wxyz, s0
dp3 r3.x, r2.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
add r3.x, r3.x, l(1.000000)
iadd r3.x, -r3.x, l(0x7ef311c2)
mov r1.xyz, r2.yzwy
mul r1.xyzw, r1.xyzw, r3.xxxx
mov r3.w, l(1.000000)
mov r2.w, v1.x
mov r2.yz, l(0,1.000000,0,0)
add r4.xy, r2.zwzz, v0.xyxx
sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r4.xyxx, t0.wxyz, s0
dp3 r5.x, r4.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
add r5.x, r5.x, l(1.000000)
iadd r5.x, -r5.x, l(0x7ef311c2)
mov r3.xyz, r4.yzwy
mul r3.xyzw, r3.xyzw, r5.xxxx
mul r5.x, v1.y, v1.y
mul r6.xyzw, r5.xxxx, l(-11.541560, -8.014972, -5.129583, -2.885390)
mul r5.xy, r5.xxxx, l(-1.28239572, -0.32059893, 0.000000, 0.000000)
exp r5.xy, r5.xyxx
exp r6.xyzw, r6.xyzw
mul r3.xyzw, r3.xyzw, r6.yyyy
mad r1.xyzw, r6.xxxx, r1.xyzw, r3.xyzw
mov r3.w, l(1.000000)
mad r7.xyzw, l(2.000000, 2.000000, 3.000000, 3.000000), r2.zwzw, v0.xyxy
sample_indexable(texture2d)(float,float,float,float) r8.xyzw, r7.xyxx, t0.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r7.xyzw, r7.zwzz, t0.wxyz, s0
dp3 r5.z, r8.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
add r5.z, r5.z, l(1.000000)
iadd r5.z, -r5.z, l(0x7ef311c2)
mov r3.xyz, r8.xyzx
mov r4.z, r8.w
mul r3.xyzw, r3.xyzw, r5.zzzz
mad r1.xyzw, r6.zzzz, r3.xyzw, r1.xyzw
mov r3.w, l(1.000000)
dp3 r5.z, r7.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
add r5.z, r5.z, l(1.000000)
iadd r5.z, -r5.z, l(0x7ef311c2)
mov r3.xyz, r7.yzwy
mul r3.xyzw, r3.xyzw, r5.zzzz
mad r1.xyzw, r6.wwww, r3.xyzw, r1.xyzw
mov r3.w, l(1.000000)
mad r8.xyzw, l(4.000000, 4.000000, 5.000000, 5.000000), r2.zwzw, v0.xyxy
sample_indexable(texture2d)(float,float,float,float) r9.xyzw, r8.xyxx, t0.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r8.xyzw, r8.zwzz, t0.wxyz, s0
dp3 r5.z, r9.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
add r5.z, r5.z, l(1.000000)
iadd r5.z, -r5.z, l(0x7ef311c2)
mov r3.xyz, r9.xyzx
mov r7.z, r9.w
mul r3.xyzw, r3.xyzw, r5.zzzz
mad r1.xyzw, r5.xxxx, r3.xyzw, r1.xyzw
mov r3.w, l(1.000000)
dp3 r5.z, r8.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
add r5.z, r5.z, l(1.000000)
iadd r5.z, -r5.z, l(0x7ef311c2)
mov r3.xyz, r8.yzwy
mul r3.xyzw, r3.xyzw, r5.zzzz
mad r1.xyzw, r5.yyyy, r3.xyzw, r1.xyzw
mad r3.xyzw, l(6.000000, 6.000000, 7.000000, 7.000000), r2.zwzw, v0.xyxy
sample_indexable(texture2d)(float,float,float,float) r9.xyzw, r3.xyxx, t0.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r3.xyzw, r3.zwzz, t0.wxyz, s0
dp3 r5.z, r9.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
add r5.z, r5.z, l(1.000000)
iadd r5.z, -r5.z, l(0x7ef311c2)
mov r0.xyz, r9.xyzx
mov r8.z, r9.w
mad r0.xyzw, r5.zzzz, r0.xyzw, r1.xyzw
mov r1.w, l(1.000000)
dp3 r5.z, r3.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
add r5.z, r5.z, l(1.000000)
iadd r5.z, -r5.z, l(0x7ef311c2)
mov r1.xyz, r3.yzwy
mul r1.xyzw, r1.xyzw, r5.zzzz
mad r0.xyzw, r5.yyyy, r1.xyzw, r0.xyzw
mov r1.w, l(1.000000)
mad r9.xyzw, l(8.000000, 8.000000, 9.000000, 9.000000), r2.zwzw, v0.xyxy
sample_indexable(texture2d)(float,float,float,float) r10.xyzw, r9.xyxx, t0.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r9.xyzw, r9.zwzz, t0.wxyz, s0
dp3 r5.z, r10.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
add r5.z, r5.z, l(1.000000)
iadd r5.z, -r5.z, l(0x7ef311c2)
mov r1.xyz, r10.xyzx
mov r3.z, r10.w
mul r1.xyzw, r1.xyzw, r5.zzzz
mad r0.xyzw, r5.xxxx, r1.xyzw, r0.xyzw
mov r1.w, l(1.000000)
dp3 r5.z, r9.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
add r5.z, r5.z, l(1.000000)
iadd r5.z, -r5.z, l(0x7ef311c2)
mov r1.xyz, r9.yzwy
mul r1.xyzw, r1.xyzw, r5.zzzz
mad r0.xyzw, r6.wwww, r1.xyzw, r0.xyzw
mov r1.w, l(1.000000)
mad r10.xyzw, l(10.000000, 10.000000, 11.000000, 11.000000), r2.zwzw, v0.xyxy
mad r2.zw, l(0.000000, 0.000000, 12.000000, 12.000000), r2.zzzw, v0.xxxy
sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r2.zwzz, t0.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r12.xyzw, r10.xyxx, t0.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r10.xyzw, r10.zwzz, t0.wxyz, s0
dp3 r2.z, r12.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
add r2.z, r2.z, l(1.000000)
iadd r2.z, -r2.z, l(0x7ef311c2)
mov r1.xyz, r12.xyzx
mov r9.z, r12.w
mul r1.xyzw, r1.xyzw, r2.zzzz
mad r0.xyzw, r6.zzzz, r1.xyzw, r0.xyzw
dp3 r1.x, r10.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
add r1.x, r1.x, l(1.000000)
iadd r1.x, -r1.x, l(0x7ef311c2)
mov r12.xyz, r10.yzwy
mov r12.w, l(1.000000)
mul r1.xyzw, r1.xxxx, r12.xyzw
mad r0.xyzw, r6.yyyy, r1.xyzw, r0.xyzw
dp3 r1.x, r11.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
add r1.x, r1.x, l(1.000000)
iadd r1.x, -r1.x, l(0x7ef311c2)
mov r10.z, r11.w
mov r11.w, l(1.000000)
mul r1.xyzw, r1.xxxx, r11.xyzw
mad r0.xyzw, r6.xxxx, r1.xyzw, r0.xyzw
rcp r0.w, r0.w
mul o0.xyz, r0.wwww, r0.xyzx
mov r4.yw, l(0,1.000000,0,1.000000)
mul r0.xy, r4.xyxx, r6.yyyy
mad r0.xy, r6.xxxx, r2.xyxx, r0.xyxx
mad r0.xy, r6.zzzz, r4.zwzz, r0.xyxx
mov r7.yw, l(0,1.000000,0,1.000000)
mad r0.xy, r6.wwww, r7.xyxx, r0.xyxx
mad r0.xy, r5.xxxx, r7.zwzz, r0.xyxx
mov r8.yw, l(0,1.000000,0,1.000000)
mad r0.xy, r5.yyyy, r8.xyxx, r0.xyxx
add r0.xy, r8.zwzz, r0.xyxx
mov r3.yw, l(0,1.000000,0,1.000000)
mad r0.xy, r5.yyyy, r3.xyxx, r0.xyxx
mad r0.xy, r5.xxxx, r3.zwzz, r0.xyxx
mov r9.yw, l(0,1.000000,0,1.000000)
mad r0.xy, r6.wwww, r9.xyxx, r0.xyxx
mad r0.xy, r6.zzzz, r9.zwzz, r0.xyxx
mov r10.yw, l(0,1.000000,0,1.000000)
mad r0.xy, r6.yyyy, r10.xyxx, r0.xyxx
mad r0.xy, r6.xxxx, r10.zwzz, r0.xyxx
div o0.w, r0.x, r0.y
ret 
// Approximately 145 instruction slots used
