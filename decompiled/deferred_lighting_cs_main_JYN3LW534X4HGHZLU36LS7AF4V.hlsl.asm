//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:23:34 2021
//
//
// Buffer Definitions: 
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4
//   uint enableCountDebug;             // Offset:  836 Size:     4
//   uint centerGroupIDx;               // Offset:  840 Size:     4
//   uint centerGroupIDy;               // Offset:  844 Size:     4
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4
//   float drawNumLighstScale;          // Offset:  856 Size:     4
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4 [unused]
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4
//   uint showAO;                       // Offset:  880 Size:     4
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// cbuffer LightingPackCBuffer
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } lightConstantsCB[273];           // Offset:    0 Size: 65520
//
// }
//
// cbuffer RefProbePackCBuffer
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } refProbeConstantsCB[273];        // Offset:    0 Size: 61152
//
// }
//
// cbuffer RefProbeBlendPackCBuffer
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } refProbeAttenuationConstantsCB[682];// Offset:    0 Size: 65472
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for gPermutedTilingBuffer
// {
//
//   struct PermutedTilingBuffer
//   {
//       
//       uint2 data;                    // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:     8
//
// }
//
// Resource bind info for lightingDebug
// {
//
//   struct LightingDebug
//   {
//       
//       struct LightingDebugCounts
//       {
//           
//           uint visibleLights;        // Offset:    0
//           uint activeLights;         // Offset:    4
//           uint litLights;            // Offset:    8
//           uint visibleProbes;        // Offset:   12
//           uint activeProbes;         // Offset:   16
//
//       } maxCounts;                   // Offset:    0
//       
//       struct LightingDebugCounts
//       {
//           
//           uint visibleLights;        // Offset:   20
//           uint activeLights;         // Offset:   24
//           uint litLights;            // Offset:   28
//           uint visibleProbes;        // Offset:   32
//           uint activeProbes;         // Offset:   36
//
//       } centerCounts;                // Offset:   20
//       
//       struct LightingDebugCounts
//       {
//           
//           uint visibleLights;        // Offset:   40
//           uint activeLights;         // Offset:   44
//           uint litLights;            // Offset:   48
//           uint visibleProbes;        // Offset:   52
//           uint activeProbes;         // Offset:   56
//
//       } sumDeferredCounts;           // Offset:   40
//       
//       struct LightingDebugCounts
//       {
//           
//           uint visibleLights;        // Offset:   60
//           uint activeLights;         // Offset:   64
//           uint litLights;            // Offset:   68
//           uint visibleProbes;        // Offset:   72
//           uint activeProbes;         // Offset:   76
//
//       } sumForwardCounts;            // Offset:   60
//       float3 cameraWorldPos;         // Offset:   80
//       float3 pickedWldPos;           // Offset:   92
//       uint numPickedLights;          // Offset:  104
//       uint numPickedProbes;          // Offset:  108
//       
//       struct LightingDebugLight
//       {
//           
//           uint flags;                // Offset:  112
//           float3 wldOrigin;          // Offset:  116
//           float activeAttenuation;   // Offset:  128
//           float litAttenuation;      // Offset:  132
//
//       } pickedLights[32];            // Offset:  112
//       
//       struct LightingDebugProbe
//       {
//           
//           uint flags;                // Offset:  880
//           float3 wldOrigin;          // Offset:  884
//           float weight;              // Offset:  896
//
//       } pickedProbes[32];            // Offset:  880
//       uint overdrawHistogram[64];    // Offset: 1520
//       uint overdrawSum;              // Offset: 1776
//       uint overdrawMax;              // Offset: 1780
//       float padding0;                // Offset: 1784
//       float padding1;                // Offset: 1788
//
//   } $Element;                        // Offset:    0 Size:  1792
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// samplerPointClamp                 sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// GBufferDiffuseColor               texture  float4          2d             t0      1 
// GBufferNormalAndGloss             texture  float4          2d             t1      1 
// GBufferSpecularColorAndOcclusion    texture  float4          2d             t2      1 
// GBufferDepth                      texture   float          2d             t4      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// gDownsampledScene                 texture  float4          2d            t21      1 
// gMotionVectors                    texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// gPermutedTilingBuffer             texture  struct         r/o            t25      1 
// gSSAOTexture                      texture   float          2d            t27      1 
// gSSAODepthTexture                 texture   float          2d            t28      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// litBuffer                             UAV  float3          2d             u0      1 
// lightingDebug                         UAV  struct         r/w             u2      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
// LightingPackCBuffer               cbuffer      NA          NA            cb9      1 
// RefProbePackCBuffer               cbuffer      NA          NA           cb10      1 
// RefProbeBlendPackCBuffer          cbuffer      NA          NA           cb11      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB1[86], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_constantbuffer CB9[4095], dynamicIndexed
dcl_constantbuffer CB10[3584], dynamicIndexed
dcl_constantbuffer CB11[4092], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s4, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_structured t25, 8
dcl_resource_texture2d (float,float,float,float) t27
dcl_resource_texture2d (float,float,float,float) t28
dcl_resource_texture2darray (float,float,float,float) t31
dcl_uav_typed_texture2d (float,float,float,float) u0
dcl_uav_structured u2, 1792
dcl_input vThreadIDInGroupFlattened
dcl_input vThreadGroupID.x
dcl_input vThreadIDInGroup.xy
dcl_temps 26
dcl_tgsm_raw g0, 4
dcl_tgsm_raw g1, 20
dcl_tgsm_raw g2, 20
dcl_thread_group 8, 8, 1
if_z vThreadIDInGroupFlattened.x
  store_raw g0.x, l(0), l(0)
  store_raw g1.xyzw, l(0), l(0,0,0,0)
  store_raw g1.x, l(16), l(0)
  store_raw g2.xyzw, l(0), l(0,0,0,0)
  store_raw g2.x, l(16), l(0)
endif 
sync_g_t
imad r0.x, cb2[57].x, l(10), vThreadGroupID.x
ld_structured_indexable(structured_buffer, stride=8)(mixed,mixed,mixed,mixed) r0.xy, r0.x, l(0), t25.xyxx
and r0.zw, r0.xxxy, l(0, 0, 4095, 4095)
imad r1.xy, r0.zwzz, l(8, 8, 0, 0), vThreadIDInGroup.xyxx
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.xyww, t1.xyzw
ftou r3.xy, cb1[44].xyxx
ult r3.xy, r1.xyxx, r3.xyxx
and r3.x, r3.y, r3.x
lt r3.y, l(0.000000), r2.z
and r3.x, r3.y, r3.x
if_z r3.x
  ret 
endif 
ld_indexable(texture2d)(float,float,float,float) r4.xyzw, r1.xyww, t2.xyzw
utof r3.yz, r1.xxyx
add r5.xy, r3.yzyy, l(0.500000, 0.500000, 0.000000, 0.000000)
mul r5.zw, r5.xxxy, cb1[44].zzzw
sample_l_indexable(texture2d)(float,float,float,float) r3.w, r5.zwzz, t27.yzwx, s4, l(0.000000)
mul r3.w, r3.w, r4.z
if_nz cb2[55].x
  mul r4.z, r3.w, l(0.750000)
  store_uav_typed u0.xyzw, r1.xyyy, r4.zzzz
  ret 
else 
  movc r4.z, cb2[54].w, r3.w, l(1.000000)
endif 
ge r3.w, r2.z, l(0.500000)
ld_indexable(texture2d)(float,float,float,float) r5.z, r1.xyww, t4.yzxw
ld_indexable(texture2d)(float,float,float,float) r6.xyz, r1.xyww, t0.xyzw
ld_aoffimmi_indexable(-1,0,0)(texture2d)(float,float,float,float) r7.xyz, r1.xyww, t2.xywz
ld_aoffimmi_indexable(0,-1,0)(texture2d)(float,float,float,float) r8.xyz, r1.xyww, t2.xywz
ld_aoffimmi_indexable(1,0,0)(texture2d)(float,float,float,float) r9.xyz, r1.xyww, t2.xywz
ld_aoffimmi_indexable(0,1,0)(texture2d)(float,float,float,float) r10.xyz, r1.xyzw, t2.xywz
ge r11.x, r5.z, l(0.984375)
mul r1.z, r5.z, l(1.01587307)
mad r1.w, r5.z, l(64.000000), l(-63.000000)
movc r1.z, r11.x, r1.w, r1.z
max r1.z, r1.z, l(0.00000001)
rcp r11.y, r1.z
and r1.zw, r3.xxxx, r11.xxxy
add r5.xy, r5.xyxx, -cb1[71].xyxx
mul r5.xy, r5.xyxx, cb1[44].zwzz
mad r5.xy, r5.xyxx, l(2.000000, -2.000000, 0.000000, 0.000000), l(-1.000000, 1.000000, 0.000000, 0.000000)
mul r11.x, r5.x, cb1[12].x
mul r11.y, r5.y, cb1[13].y
mov r11.z, l(1.000000)
mul r5.xyz, r1.wwww, r11.xyzx
mul r11.xyz, r5.yyyy, cb1[17].xyzx
mad r5.xyw, r5.xxxx, cb1[16].xyxz, r11.xyxz
mad r5.xyz, r5.zzzz, cb1[18].xyzx, r5.xywx
mad r2.w, r2.w, l(3.000000), l(0.500000)
ftou r2.w, r2.w
mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r2.xy, r2.xyxx, l(0.850000, 0.850000, 0.000000, 0.000000)
dp2 r3.x, r2.xyxx, r2.xyxx
add r11.zw, -r3.xxxx, l(0.000000, 0.000000, 2.000000, 1.000000)
sqrt r3.x, r11.z
mul r11.xy, r2.xyxx, r3.xxxx
and r12.xyzw, r2.wwww, l(2, 1, 2, 1)
movc r12.xyzw, r12.zwxy, l(-1.000000,-1.000000,1,1), l(1.000000,1.000000,0,0)
xor r2.x, r12.w, r12.z
movc r12.z, r2.x, l(-1.000000), l(1.000000)
mul r2.xyw, r12.xyxz, l(-1.000000, 0.000000, 0.000000, 1.000000)
mul r13.xyz, r12.xyzx, l(1.000000, -2.000000, 1.000000, 0.000000)
mul r11.xyz, r11.xywx, l(0.40824831, 0.70710677, 0.57735026, 0.000000)
mul r2.xyw, r2.xyxw, r11.yyyy
mad r2.xyw, r13.xyxz, r11.xxxx, r2.xyxw
mad r11.xyz, r12.xyzx, r11.zzzz, r2.xywx
movc r2.x, r3.w, l(-0.500000), l(-0.00146628)
add r2.x, r2.x, r2.z
mul_sat r2.y, r2.x, l(2.00982332)
dp3 r2.z, -r5.xyzx, -r5.xyzx
rsq r2.z, r2.z
mul r12.xyz, r2.zzzz, -r5.xyzx
dp2 r2.w, r3.yzyy, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r2.w, r2.w
mul r2.w, r2.w, l(52.982918)
frc r2.w, r2.w
mad r2.w, r2.w, l(6.28318548), cb1[70].w
sincos r3.x, r13.x, r2.w
dp3_sat r2.x, r11.xyzx, r12.xyzx
dp3 r2.w, -r12.xyzx, r11.xyzx
add r2.w, r2.w, r2.w
mad r14.xyz, r11.xyzx, -r2.wwww, -r12.xyzx
mul r2.w, r2.y, l(17.000000)
exp r2.w, r2.w
add r2.w, r2.w, l(2.000000)
div r2.w, l(2.000000), r2.w
sqrt r3.y, r2.w
mul r13.yz, cb1[44].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000)
ftou r15.xy, r13.yzyy
ieq r15.xy, r1.xyxx, r15.xyxx
and r3.z, r15.y, r15.x
lt r6.w, l(0.83333331), r2.y
lt r7.w, l(60.000000), r1.w
and r6.w, r6.w, r7.w
if_nz r6.w
  mul r15.xyz, r5.yyyy, cb1[9].xywx
  mad r15.xyz, r5.xxxx, cb1[8].xywx, r15.xyzx
  mad r15.xyz, r5.zzzz, cb1[10].xywx, r15.xyzx
  add r15.xyz, r15.xyzx, cb1[11].xywx
  mad r16.xyz, r14.xyzx, l(2000.000000, 2000.000000, 2000.000000, 0.000000), r5.xyzx
  mul r17.xyz, r16.yyyy, cb1[9].xywx
  mad r16.xyw, r16.xxxx, cb1[8].xyxw, r17.xyxz
  mad r16.xyz, r16.zzzz, cb1[10].xywx, r16.xywx
  add r16.xyz, r16.xyzx, cb1[11].xywx
  ge r6.w, r16.z, r15.z
  if_nz r6.w
    rcp r17.z, r15.z
    mul r17.xy, r15.xyxx, r17.zzzz
    rcp r18.z, r16.z
    mul r18.xy, r16.xyxx, r18.zzzz
    lt r15.xy, l(1.000000, 1.000000, 0.000000, 0.000000), r18.xyxx
    mad r19.xyzw, r16.xxyy, r18.zzzz, l(-1.000000, 1.000000, -1.000000, 1.000000)
    mad r20.xyzw, r16.xxyy, r18.zzzz, -r17.xxyy
    lt r16.xy, r18.xyxx, l(-1.000000, -1.000000, 0.000000, 0.000000)
    div r19.xyzw, r19.xyzw, r20.xyzw
    and r16.xy, r16.xyxx, r19.ywyy
    movc r15.xy, r15.xyxx, r19.xzxx, r16.xyxx
    max r6.w, r15.y, r15.x
    add r15.xyw, r17.xyxz, -r18.xyxz
    mad r15.xyw, r6.wwww, r15.xyxw, r18.xyxz
    mad r16.xy, r17.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    mad r18.xy, r15.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    add r16.xy, r16.xyxx, -r18.xyxx
    mul r16.xy, r13.yzyy, |r16.xyxx|
    max r6.w, r16.y, r16.x
    max r6.w, r6.w, l(1.000000)
    rcp r6.w, r6.w
    mad r16.xyw, r17.xyxz, l(0.500000, -0.500000, 0.000000, 1.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    mad r17.xyz, r15.xywx, l(0.500000, -0.500000, 1.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    add r19.xyz, -r16.xywx, r17.xyzx
    mad r16.xyw, r6.wwww, r19.xyxz, r16.xyxw
    add r17.xyz, -r16.xywx, r17.xyzx
    mul r19.xyz, r17.xyzx, l(0.031250, 0.031250, 0.031250, 0.000000)
    mul r13.yz, r13.yyzy, |r19.xxyx|
    max r6.w, r13.z, r13.y
    log r6.w, r6.w
    round_pi r6.w, r6.w
    max r6.w, r6.w, l(0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r16.xyxx, t28.yzwx, s1, r6.w
    mad r13.yzw, r17.xxyz, l(0.000000, 0.031250, 0.031250, 0.031250), r16.xxyw
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r13.yzyy, t28.yzwx, s1, r6.w
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r13.w, r7.w
    lt r7.w, r7.w, l(1.000000)
    and r9.w, r7.w, l(1)
    mad r13.yzw, r17.xxyz, l(0.000000, 0.062500, 0.062500, 0.062500), r16.xxyw
    sample_l_indexable(texture2d)(float,float,float,float) r10.w, r13.yzyy, t28.yzwx, s1, r6.w
    min r8.w, |r8.w|, |r10.w|
    mul r8.w, r13.w, r8.w
    lt r8.w, r8.w, l(1.000000)
    bfi r7.w, l(1), l(0), r7.w, l(2)
    movc r7.w, r8.w, r7.w, r9.w
    mad r13.yzw, r17.xxyz, l(0.000000, 0.093750, 0.093750, 0.093750), r16.xxyw
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r13.yzyy, t28.yzwx, s1, r6.w
    min r9.w, |r10.w|, |r8.w|
    mul r9.w, r13.w, r9.w
    lt r9.w, r9.w, l(1.000000)
    iadd r10.w, r7.w, l(4)
    movc r7.w, r9.w, r10.w, r7.w
    mad r13.yzw, r17.xxyz, l(0.000000, 0.125000, 0.125000, 0.125000), r16.xxyw
    sample_l_indexable(texture2d)(float,float,float,float) r9.w, r13.yzyy, t28.yzwx, s1, r6.w
    min r8.w, |r8.w|, |r9.w|
    mul r8.w, r13.w, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r10.w, r7.w, l(8)
    movc r7.w, r8.w, r10.w, r7.w
    mad r13.yzw, r17.xxyz, l(0.000000, 0.156250, 0.156250, 0.156250), r16.xxyw
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r13.yzyy, t28.yzwx, s1, r6.w
    min r9.w, |r9.w|, |r8.w|
    mul r9.w, r13.w, r9.w
    lt r9.w, r9.w, l(1.000000)
    iadd r10.w, r7.w, l(16)
    movc r7.w, r9.w, r10.w, r7.w
    mad r13.yzw, r17.xxyz, l(0.000000, 0.187500, 0.187500, 0.187500), r16.xxyw
    sample_l_indexable(texture2d)(float,float,float,float) r9.w, r13.yzyy, t28.yzwx, s1, r6.w
    min r8.w, |r8.w|, |r9.w|
    mul r8.w, r13.w, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r10.w, r7.w, l(32)
    movc r7.w, r8.w, r10.w, r7.w
    mad r13.yzw, r17.xxyz, l(0.000000, 0.218750, 0.218750, 0.218750), r16.xxyw
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r13.yzyy, t28.yzwx, s1, r6.w
    min r9.w, |r9.w|, |r8.w|
    mul r9.w, r13.w, r9.w
    lt r9.w, r9.w, l(1.000000)
    iadd r10.w, r7.w, l(64)
    movc r7.w, r9.w, r10.w, r7.w
    mad r13.yzw, r17.xxyz, l(0.000000, 0.250000, 0.250000, 0.250000), r16.xxyw
    sample_l_indexable(texture2d)(float,float,float,float) r9.w, r13.yzyy, t28.yzwx, s1, r6.w
    min r8.w, |r8.w|, |r9.w|
    mul r8.w, r13.w, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r10.w, r7.w, l(128)
    movc r7.w, r8.w, r10.w, r7.w
    mad r13.yzw, r17.xxyz, l(0.000000, 0.281250, 0.281250, 0.281250), r16.xxyw
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r13.yzyy, t28.yzwx, s1, r6.w
    min r9.w, |r9.w|, |r8.w|
    mul r9.w, r13.w, r9.w
    lt r9.w, r9.w, l(1.000000)
    iadd r10.w, r7.w, l(256)
    movc r7.w, r9.w, r10.w, r7.w
    mad r13.yzw, r17.xxyz, l(0.000000, 0.312500, 0.312500, 0.312500), r16.xxyw
    sample_l_indexable(texture2d)(float,float,float,float) r9.w, r13.yzyy, t28.yzwx, s1, r6.w
    min r8.w, |r8.w|, |r9.w|
    mul r8.w, r13.w, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r10.w, r7.w, l(512)
    movc r7.w, r8.w, r10.w, r7.w
    mad r13.yzw, r17.xxyz, l(0.000000, 0.343750, 0.343750, 0.343750), r16.xxyw
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r13.yzyy, t28.yzwx, s1, r6.w
    min r9.w, |r9.w|, |r8.w|
    mul r9.w, r13.w, r9.w
    lt r9.w, r9.w, l(1.000000)
    iadd r10.w, r7.w, l(1024)
    movc r7.w, r9.w, r10.w, r7.w
    mad r13.yzw, r17.xxyz, l(0.000000, 0.375000, 0.375000, 0.375000), r16.xxyw
    sample_l_indexable(texture2d)(float,float,float,float) r9.w, r13.yzyy, t28.yzwx, s1, r6.w
    min r8.w, |r8.w|, |r9.w|
    mul r8.w, r13.w, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r10.w, r7.w, l(2048)
    movc r7.w, r8.w, r10.w, r7.w
    mad r13.yzw, r17.xxyz, l(0.000000, 0.406250, 0.406250, 0.406250), r16.xxyw
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r13.yzyy, t28.yzwx, s1, r6.w
    min r9.w, |r9.w|, |r8.w|
    mul r9.w, r13.w, r9.w
    lt r9.w, r9.w, l(1.000000)
    iadd r10.w, r7.w, l(4096)
    movc r7.w, r9.w, r10.w, r7.w
    mad r13.yzw, r17.xxyz, l(0.000000, 0.437500, 0.437500, 0.437500), r16.xxyw
    sample_l_indexable(texture2d)(float,float,float,float) r9.w, r13.yzyy, t28.yzwx, s1, r6.w
    min r8.w, |r8.w|, |r9.w|
    mul r8.w, r13.w, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r10.w, r7.w, l(8192)
    movc r7.w, r8.w, r10.w, r7.w
    mad r13.yzw, r17.xxyz, l(0.000000, 0.468750, 0.468750, 0.468750), r16.xxyw
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r13.yzyy, t28.yzwx, s1, r6.w
    min r9.w, |r9.w|, |r8.w|
    mul r9.w, r13.w, r9.w
    lt r9.w, r9.w, l(1.000000)
    iadd r10.w, r7.w, l(0x00004000)
    movc r7.w, r9.w, r10.w, r7.w
    mad r13.yzw, r17.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000), r16.xxyw
    sample_l_indexable(texture2d)(float,float,float,float) r9.w, r13.yzyy, t28.yzwx, s1, r6.w
    min r8.w, |r8.w|, |r9.w|
    mul r8.w, r13.w, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r10.w, r7.w, l(0x00008000)
    movc r7.w, r8.w, r10.w, r7.w
    mad r13.yzw, r17.xxyz, l(0.000000, 0.531250, 0.531250, 0.531250), r16.xxyw
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r13.yzyy, t28.yzwx, s1, r6.w
    min r9.w, |r9.w|, |r8.w|
    mul r9.w, r13.w, r9.w
    lt r9.w, r9.w, l(1.000000)
    iadd r10.w, r7.w, l(0x00010000)
    movc r7.w, r9.w, r10.w, r7.w
    mad r13.yzw, r17.xxyz, l(0.000000, 0.562500, 0.562500, 0.562500), r16.xxyw
    sample_l_indexable(texture2d)(float,float,float,float) r9.w, r13.yzyy, t28.yzwx, s1, r6.w
    min r8.w, |r8.w|, |r9.w|
    mul r8.w, r13.w, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r10.w, r7.w, l(0x00020000)
    movc r7.w, r8.w, r10.w, r7.w
    mad r13.yzw, r17.xxyz, l(0.000000, 0.593750, 0.593750, 0.593750), r16.xxyw
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r13.yzyy, t28.yzwx, s1, r6.w
    min r9.w, |r9.w|, |r8.w|
    mul r9.w, r13.w, r9.w
    lt r9.w, r9.w, l(1.000000)
    iadd r10.w, r7.w, l(0x00040000)
    movc r7.w, r9.w, r10.w, r7.w
    mad r13.yzw, r17.xxyz, l(0.000000, 0.625000, 0.625000, 0.625000), r16.xxyw
    sample_l_indexable(texture2d)(float,float,float,float) r9.w, r13.yzyy, t28.yzwx, s1, r6.w
    min r8.w, |r8.w|, |r9.w|
    mul r8.w, r13.w, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r10.w, r7.w, l(0x00080000)
    movc r7.w, r8.w, r10.w, r7.w
    mad r13.yzw, r17.xxyz, l(0.000000, 0.656250, 0.656250, 0.656250), r16.xxyw
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r13.yzyy, t28.yzwx, s1, r6.w
    min r9.w, |r9.w|, |r8.w|
    mul r9.w, r13.w, r9.w
    lt r9.w, r9.w, l(1.000000)
    iadd r10.w, r7.w, l(0x00100000)
    movc r7.w, r9.w, r10.w, r7.w
    mad r13.yzw, r17.xxyz, l(0.000000, 0.687500, 0.687500, 0.687500), r16.xxyw
    sample_l_indexable(texture2d)(float,float,float,float) r9.w, r13.yzyy, t28.yzwx, s1, r6.w
    min r8.w, |r8.w|, |r9.w|
    mul r8.w, r13.w, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r10.w, r7.w, l(0x00200000)
    movc r7.w, r8.w, r10.w, r7.w
    mad r13.yzw, r17.xxyz, l(0.000000, 0.718750, 0.718750, 0.718750), r16.xxyw
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r13.yzyy, t28.yzwx, s1, r6.w
    min r9.w, |r9.w|, |r8.w|
    mul r9.w, r13.w, r9.w
    lt r9.w, r9.w, l(1.000000)
    iadd r10.w, r7.w, l(0x00400000)
    movc r7.w, r9.w, r10.w, r7.w
    mad r13.yzw, r17.xxyz, l(0.000000, 0.750000, 0.750000, 0.750000), r16.xxyw
    sample_l_indexable(texture2d)(float,float,float,float) r9.w, r13.yzyy, t28.yzwx, s1, r6.w
    min r8.w, |r8.w|, |r9.w|
    mul r8.w, r13.w, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r10.w, r7.w, l(0x00800000)
    movc r7.w, r8.w, r10.w, r7.w
    mad r13.yzw, r17.xxyz, l(0.000000, 0.781250, 0.781250, 0.781250), r16.xxyw
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r13.yzyy, t28.yzwx, s1, r6.w
    min r9.w, |r9.w|, |r8.w|
    mul r9.w, r13.w, r9.w
    lt r9.w, r9.w, l(1.000000)
    iadd r10.w, r7.w, l(0x01000000)
    movc r7.w, r9.w, r10.w, r7.w
    mad r13.yzw, r17.xxyz, l(0.000000, 0.812500, 0.812500, 0.812500), r16.xxyw
    sample_l_indexable(texture2d)(float,float,float,float) r9.w, r13.yzyy, t28.yzwx, s1, r6.w
    min r8.w, |r8.w|, |r9.w|
    mul r8.w, r13.w, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r10.w, r7.w, l(0x02000000)
    movc r7.w, r8.w, r10.w, r7.w
    mad r13.yzw, r17.xxyz, l(0.000000, 0.843750, 0.843750, 0.843750), r16.xxyw
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r13.yzyy, t28.yzwx, s1, r6.w
    min r9.w, |r9.w|, |r8.w|
    mul r9.w, r13.w, r9.w
    lt r9.w, r9.w, l(1.000000)
    iadd r10.w, r7.w, l(0x04000000)
    movc r7.w, r9.w, r10.w, r7.w
    mad r13.yzw, r17.xxyz, l(0.000000, 0.875000, 0.875000, 0.875000), r16.xxyw
    sample_l_indexable(texture2d)(float,float,float,float) r9.w, r13.yzyy, t28.yzwx, s1, r6.w
    min r8.w, |r8.w|, |r9.w|
    mul r8.w, r13.w, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r10.w, r7.w, l(0x08000000)
    movc r7.w, r8.w, r10.w, r7.w
    mad r13.yzw, r17.xxyz, l(0.000000, 0.906250, 0.906250, 0.906250), r16.xxyw
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r13.yzyy, t28.yzwx, s1, r6.w
    min r9.w, |r9.w|, |r8.w|
    mul r9.w, r13.w, r9.w
    lt r9.w, r9.w, l(1.000000)
    iadd r10.w, r7.w, l(0x10000000)
    movc r7.w, r9.w, r10.w, r7.w
    mad r13.yzw, r17.xxyz, l(0.000000, 0.937500, 0.937500, 0.937500), r16.xxyw
    sample_l_indexable(texture2d)(float,float,float,float) r9.w, r13.yzyy, t28.yzwx, s1, r6.w
    min r8.w, |r8.w|, |r9.w|
    mul r8.w, r13.w, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r10.w, r7.w, l(0x20000000)
    movc r7.w, r8.w, r10.w, r7.w
    mad r13.yzw, r17.xxyz, l(0.000000, 0.968750, 0.968750, 0.968750), r16.xxyw
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r13.yzyy, t28.yzwx, s1, r6.w
    min r9.w, |r9.w|, |r8.w|
    mul r9.w, r13.w, r9.w
    lt r9.w, r9.w, l(1.000000)
    iadd r10.w, r7.w, l(0x40000000)
    movc r7.w, r9.w, r10.w, r7.w
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r18.xyxx, t28.yzwx, s1, r6.w
    min r6.w, |r8.w|, |r6.w|
    mul r6.w, r15.w, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r8.w, r7.w, l(0x80000000)
    movc r6.w, r6.w, r8.w, r7.w
    mov r20.w, l(-1)
    mov r21.z, l(-1)
    mov r13.yz, l(0,0,0,0)
    mov r7.w, l(0)
    mov r8.w, r6.w
    mov r9.w, r18.z
    mov r22.yz, l(0,0,0,0)
    mov r20.z, l(0)
    mov r10.w, l(0)
    loop 
      breakc_z r8.w
      firstbit_lo r20.y, r8.w
      ishl r12.w, l(1), r20.y
      xor r20.x, r8.w, r12.w
      utof r13.w, r20.y
      mul r13.w, r13.w, l(0.031250)
      mad r15.xyw, r17.xyxz, r13.wwww, r16.xyxw
      sample_l_indexable(texture2d)(float,float,float,float) r13.w, r15.xyxx, t28.yzwx, s1, l(0.000000)
      mul r17.w, r15.w, |r13.w|
      lt r17.w, r17.w, l(1.000000)
      if_nz r17.w
        if_nz r20.z
          lt r17.w, r15.z, |r13.w|
          lt r18.x, r9.w, r15.w
          and r17.w, r17.w, r18.x
          movc r18.xy, r17.wwww, r15.xyxx, r13.yzyy
          mov r20.z, r15.w
          mov r22.x, r9.w
          movc r23.xyz, r17.wwww, r20.zxyz, r22.xyzx
          mov r8.w, r20.x
          mov r20.z, l(-1)
          mov r13.yz, r18.xxyx
          mov r9.w, r23.x
          mov r22.yz, r23.yyzy
          continue 
        endif 
        mov r17.w, r22.y
        mov r18.x, l(0)
      else 
        not r12.w, r12.w
        and r17.w, r12.w, r22.y
        mov r18.x, r20.z
      endif 
      if_nz r10.w
        mov r8.w, r20.x
        mov r22.y, r17.w
        mov r20.z, r18.x
        mov r10.w, l(-1)
        continue 
      endif 
      mov r18.yw, r13.yyyz
      mov r12.w, r7.w
      mov r19.w, r9.w
      mov r22.y, r17.w
      mov r22.x, r22.z
      mov r20.z, r18.x
      mov r21.w, r10.w
      mov r22.w, r15.w
      mov r23.x, |r13.w|
      mov r23.y, l(0)
      loop 
        ige r23.z, r23.y, l(4)
        breakc_nz r23.z
        itof r23.z, r23.y
        add r23.z, r23.z, l(1.000000)
        mul r23.z, r23.z, l(0.250000)
        mad r24.xyz, r19.xyzx, r23.zzzz, r15.xywx
        sample_l_indexable(texture2d)(float,float,float,float) r23.z, r24.xyxx, t28.yzxw, s1, l(0.000000)
        mul r23.w, r24.z, |r23.z|
        lt r23.w, r23.w, l(1.000000)
        if_nz r23.w
          lt r23.w, r15.z, |r23.z|
          add r24.w, -r22.w, r24.z
          add r25.x, -r23.x, |r23.z|
          mul r25.y, r22.w, r24.z
          mul r25.x, r25.y, |r25.x|
          lt r24.w, r25.x, |r24.w|
          and r25.x, r23.w, r24.w
          lt r25.y, r19.w, r24.z
          and r25.z, r23.w, r25.y
          movc r21.xy, r25.zzzz, r20.xyxx, r22.yxyy
          or r24.w, r24.w, r25.y
          and r23.w, r23.w, r24.w
          movc r24.xy, r23.wwww, r24.xyxx, r18.ywyy
          movc r24.w, r25.x, l(1.000000), r12.w
          movc r23.w, r23.w, r24.z, r19.w
          movc r25.xyzw, r25.xxxx, r20.xyzw, r21.xyzw
          mov r12.w, r24.w
          mov r18.yw, r24.xxxy
          mov r19.w, r23.w
          mov r22.xy, r25.yxyy
          mov r20.z, r25.z
          mov r21.w, r25.w
          break 
        endif 
        mov r22.w, r24.z
        mov r23.x, |r23.z|
        iadd r23.y, r23.y, l(1)
      endloop 
      mov r13.yz, r18.yywy
      mov r7.w, r12.w
      mov r9.w, r19.w
      mov r22.yz, r22.yyxy
      mov r10.w, r21.w
      mov r8.w, r20.x
    endloop 
    rcp r6.w, r9.w
    add r6.w, -r15.z, r6.w
    add r8.w, -r15.z, r16.z
    div r6.w, |r6.w|, |r8.w|
    min r15.x, r6.w, l(1.000000)
    countbits r6.w, r22.y
    utof r6.w, r6.w
    add r6.w, r6.w, l(1.000000)
    iadd r8.w, -r22.z, l(32)
    utof r8.w, r8.w
    div r6.w, r6.w, r8.w
    min r15.y, r6.w, l(1.000000)
  else 
    mov r15.xy, l(1.000000,0,0,0)
    mov r7.w, l(0)
  endif 
  add r6.w, r2.y, l(-0.83333331)
  mul r6.w, r6.w, l(5.99999952)
  max r6.w, r6.w, l(0.000000)
  mad r8.w, r6.w, l(-2.000000), l(3.000000)
  mul r6.w, r6.w, r6.w
  mul r6.w, r6.w, r8.w
  add r1.w, r1.w, l(-60.000000)
  mul_sat r1.w, r1.w, l(0.01666667)
  mad r8.w, r1.w, l(-2.000000), l(3.000000)
  mul r1.w, r1.w, r1.w
  mul r1.w, r1.w, r8.w
  mul r1.w, r1.w, r6.w
  mul r1.w, r15.y, r1.w
  mad r15.yz, r13.yyzy, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
  add r15.yz, |r15.yyzy|, l(0.000000, -0.500000, -0.500000, 0.000000)
  add_sat r15.yz, r15.yyzy, r15.yyzy
  mad r16.xy, r15.yzyy, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
  mul r15.yz, r15.yyzy, r15.yyzy
  mad r15.yz, -r16.xxyx, r15.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
  mul r6.w, r15.z, r15.y
  mul r1.w, r1.w, r6.w
  mul r6.w, r15.x, l(10.000000)
  min r6.w, r6.w, l(1.000000)
  add r8.w, -r7.w, l(1.000000)
  mul r8.w, r1.w, r8.w
  add r6.w, r6.w, l(-1.000000)
  mad r6.w, r8.w, r6.w, l(1.000000)
  mul r1.w, r7.w, r1.w
  lt r7.w, l(0.000000), r1.w
  if_nz r7.w
    sample_l_indexable(texture2d)(float,float,float,float) r15.xy, r13.yzyy, t22.xyzw, s4, l(0.000000)
    add r15.zw, |r15.xxxy|, l(0.000000, 0.000000, -0.500000, -0.500000)
    add_sat r15.zw, r15.zzzw, r15.zzzw
    add r16.xy, |r15.xyxx|, |r15.xyxx|
    min r16.xy, r16.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    mul r16.xy, r16.xyxx, l(10.000000, 10.000000, 0.000000, 0.000000)
    mad r15.zw, r15.zzzw, l(0.000000, 0.000000, 30.000000, 30.000000), r16.xxxy
    ge r15.xy, r15.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
    movc r15.xy, r15.xyxx, r15.zwzz, -r15.zwzz
    mad r13.yz, -r15.xxyx, cb1[44].zzwz, r13.yyzy
    sample_l_indexable(texture2d)(float,float,float,float) r13.yzw, r13.yzyy, t21.wxyz, s4, l(0.000000)
    mul r13.yzw, r13.yyzw, cb1[85].xxxx
    mul r13.yzw, r1.wwww, r13.yyzw
  else 
    mov r13.yzw, l(0,0,0,0)
    mov r1.w, l(0)
  endif 
else 
  mov r13.yzw, l(0,0,0,0)
  mov r6.w, l(1.000000)
  mov r1.w, l(0)
endif 
dp3 r7.w, r11.xyzx, cb2[17].xyzx
mov_sat r8.w, r7.w
movc r9.w, r3.w, |r7.w|, r8.w
ge r10.w, l(0.000000), r9.w
if_nz r10.w
  mov r12.w, l(0)
endif 
if_z r10.w
  mul r15.xyz, r5.yyyy, cb2[29].xyzx
  mad r15.xyz, r5.xxxx, cb2[28].xyzx, r15.xyzx
  mad r15.xyz, r5.zzzz, cb2[30].xyzx, r15.xyzx
  add r15.xyz, r15.xyzx, cb2[31].xyzx
  add r10.w, r15.z, -cb2[17].w
  mad r10.w, -r10.w, l(0.00006104), l(1.000000)
  mov_sat r15.w, r10.w
  eq r15.w, r10.w, r15.w
  if_nz r15.w
    mov r15.w, l(0)
    mov r16.x, l(0)
    loop 
      ge r16.y, r15.w, l(3.000000)
      breakc_nz r16.y
      ftou r16.y, r15.w
      add r16.zw, r15.xxxy, -cb2[r16.y + 20].xxxy
      max r16.z, |r16.w|, |r16.z|
      mul r16.x, r16.z, cb2[r16.y + 20].z
      lt r16.y, r16.x, l(1.000000)
      if_nz r16.y
        break 
      endif 
      add r15.w, r15.w, l(1.000000)
      mov r16.x, l(0)
    endloop 
  else 
    mov r15.w, l(3.000000)
    mov r16.x, l(0)
  endif 
  ge r16.y, r15.w, l(3.000000)
  if_nz r16.y
    mul r17.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
    rcp r18.xz, r17.xxxx
    mov r18.y, -r18.z
    mad r17.xyz, r15.xyxx, r18.xyzx, r17.yzyy
    add r18.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r17.xyz, r17.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r17.xyz, r18.xyzx, r17.xyzx
    mul r16.zw, r17.zzzy, cb2[32].xxxx
    round_ni r16.zw, r16.zzzw
    mul r16.w, r16.w, cb2[27].x
    mad r16.z, r16.w, cb2[32].x, r16.z
    ftou r16.z, r16.z
    iadd r16.z, r16.z, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.w, r16.z, l(0), t23.xxxx
    and r17.w, r16.w, l(0x40000000)
    ishl r18.x, r16.w, l(2)
    if_z r17.w
      and r17.w, r16.w, l(0x01ffffff)
      iadd r19.x, r16.z, r17.w
      ushr r16.z, r16.w, l(25)
      utof r16.z, r16.z
      mul r17.xyz, r16.zzzz, r17.xyzx
      frc r17.xyz, r17.xyzx
      mul r17.xyz, r17.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
      ftou r17.xyz, r17.xyzx
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.z, r19.x, l(0), t23.xxxx
      ushr r16.zw, r17.zzzy, l(0, 0, 6, 6)
      and r17.w, r19.z, l(0xc0000000)
      iadd r18.y, r19.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.y, r18.y, l(0), t23.xxxx
      movc r16.w, r16.w, r19.z, r18.y
      ushr r18.y, r16.w, l(13)
      movc r16.z, r16.z, r18.y, r16.w
      and r16.z, r16.z, l(8191)
      iadd r20.x, r16.z, r19.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.z, r20.x, l(0), t23.xxxx
      mov r19.y, l(0)
      mov r20.y, l(1)
      movc r18.yzw, r17.wwww, r19.xxyz, r20.xxyz
      movc r20.yz, r17.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r16.zw, r17.zzzy, r20.yyyy
      and r16.zw, r16.zzzw, l(0, 0, 1, 1)
      and r19.w, r18.w, l(0xc0000000)
      iadd r20.y, r18.y, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.y, r20.y, l(0), t23.xxxx
      movc r16.w, r16.w, r18.w, r20.y
      ushr r20.y, r16.w, l(13)
      movc r16.z, r16.z, r20.y, r16.w
      and r16.z, r16.z, l(8191)
      iadd r20.x, r16.z, r18.y
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.w, r20.x, l(0), t23.xxxx
      movc r18.yzw, r19.wwww, r18.yyzw, r20.xxzw
      movc r18.yzw, r17.wwww, r19.xxyz, r18.yyzw
      and r16.z, r18.w, l(0xc0000000)
      if_z r16.z
        iadd r16.z, -r18.z, l(6)
        ushr r16.zw, r17.zzzy, r16.zzzz
        or r17.w, r18.w, l(0x40000000)
        bfi r16.w, l(1), l(1), r16.w, l(0)
        bfi r16.z, l(1), l(0), r16.z, r16.w
        imul null, r16.z, r16.z, l(10)
        ushr r16.z, r17.w, r16.z
        and r16.z, r16.z, l(1023)
        iadd r19.x, r16.z, r18.y
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.w, r19.x, l(0), t23.xxxx
        iadd r19.yz, r18.zzzz, l(0, 1, 2, 0)
        iadd r16.z, -r19.y, l(6)
        ushr r16.zw, r17.zzzy, r16.zzzz
        and r17.w, r19.w, l(0xc0000000)
        or r18.z, r19.w, l(0x40000000)
        bfi r16.w, l(1), l(1), r16.w, l(0)
        bfi r16.z, l(1), l(0), r16.z, r16.w
        imul null, r16.z, r16.z, l(10)
        ushr r16.z, r18.z, r16.z
        and r16.z, r16.z, l(1023)
        iadd r20.x, r16.z, r19.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.z, r20.x, l(0), t23.xxxx
        mov r20.y, r19.z
        movc r20.xyz, r17.wwww, r19.xywx, r20.xyzx
        iadd r16.z, -r20.y, l(6)
        ushr r16.zw, r17.zzzy, r16.zzzz
        and r18.z, r20.z, l(0xc0000000)
        or r19.y, r20.z, l(0x40000000)
        bfi r16.w, l(1), l(1), r16.w, l(0)
        bfi r16.z, l(1), l(0), r16.z, r16.w
        imul null, r16.z, r16.z, l(10)
        ushr r16.z, r19.y, r16.z
        and r16.z, r16.z, l(1023)
        iadd r21.x, r16.z, r20.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r21.y, r21.x, l(0), t23.xxxx
        movc r16.zw, r18.zzzz, r20.xxxz, r21.xxxy
        movc r18.yw, r17.wwww, r19.xxxw, r16.zzzw
      endif 
      and r16.z, r18.w, l(0xc0000000)
      if_z r16.z
        ubfe r16.w, l(14), l(15), r18.w
        utof r16.w, r16.w
        mul r16.w, r16.w, cb2[27].w
        mul r16.w, r16.w, l(0.00006104)
        and r19.xy, r18.wwww, l(0x00007fff, 0x20000000, 0, 0)
        utof r17.w, r19.x
        mul r17.w, r17.w, cb2[27].w
        mul r17.w, r17.w, l(0.00003052)
        and r18.z, r17.y, l(3)
        iadd r18.z, r18.z, r18.y
        iadd r18.z, r18.z, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.z, l(0), t23.xxxx
        bfi r19.xzw, l(2, 0, 2, 1), l(3, 0, 1, 4), r17.xxyz, l(0, 0, 0, 0)
        ushr r17.x, r18.z, r19.x
        and r17.x, r17.x, l(255)
        utof r17.x, r17.x
        mul r17.x, r17.w, r17.x
        mad r17.x, r17.x, l(0.00392157), r16.w
        iadd r17.y, r19.z, l(1)
        ubfe r17.z, l(1), l(1), r17.z
        iadd r17.y, r17.z, r17.y
        iadd r17.y, r17.y, r18.y
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.y, r17.y, l(0), t23.xxxx
        ushr r17.y, r17.y, r19.w
        and r17.y, r17.y, l(0x0000ffff)
        utof r17.y, r17.y
        mul r17.y, r17.w, r17.y
        mad r16.w, r17.y, l(0.00001526), r16.w
        movc r18.x, r19.y, r17.x, r16.w
      else 
        and r16.w, r18.w, l(0x80000000)
        iadd r17.x, r18.y, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.x, r17.x, l(0), t23.xxxx
        movc r16.w, r16.w, r17.x, l(0)
        ishl r17.x, r18.w, l(2)
        ushr r17.y, r16.w, l(16)
        f16tof32 r17.y, r17.y
        and r16.w, r16.w, l(0x0000ffff)
        f16tof32 r16.w, r16.w
        mad r17.x, r15.x, r17.y, r17.x
        mad r16.w, r15.y, r16.w, r17.x
        movc r18.x, r16.z, r16.w, r18.x
      endif 
    endif 
    mad r15.z, -cb2[27].z, l(2.000000), r15.z
    lt r15.z, r18.x, r15.z
    movc r12.w, r15.z, l(0), l(1.000000)
  endif 
  if_z r16.y
    if_z cb2[58].y
      ftou r15.z, r15.w
      add r16.yz, r15.xxyx, -cb2[r15.z + 20].xxyx
      mul r16.yz, r16.yyzy, cb2[r15.z + 20].zzzz
      mad r17.xy, r16.yzyy, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r15.z, cb2[26].y
      add r17.z, r15.z, r15.w
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r15.z, r17.xyzx, t13.xxxx, s13, r10.w
      sample_l_indexable(texture2darray)(float,float,float,float) r16.y, r17.xyzx, t31.yxzw, s0, l(0.000000)
      add r15.z, r15.z, r16.y
      add_sat r15.z, r15.z, l(-1.000000)
      mul r16.y, r15.z, r15.z
      mul r12.w, r15.z, r16.y
    endif 
    if_nz cb2[58].y
      mov r17.x, -r3.x
      ftou r15.z, r15.w
      add r15.w, r15.w, l(1.000000)
      min r15.w, r15.w, l(2.000000)
      ftou r15.w, r15.w
      add r16.x, -r16.x, l(1.000000)
      mul r16.x, r16.x, l(28.000000)
      ftou r16.x, r16.x
      add r16.yz, r15.xxyx, -cb2[r15.z + 20].xxyx
      mul r16.yz, r16.yyzy, cb2[r15.z + 20].zzzz
      mad r16.yz, r16.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      add r15.xy, r15.xyxx, -cb2[r15.w + 20].xyxx
      mul r15.xy, r15.xyxx, cb2[r15.w + 20].zzzz
      mad r15.xy, r15.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      mov r17.y, r13.x
      mov r17.z, r3.x
      mov r16.w, l(0)
      mov r17.w, l(0)
      loop 
        uge r18.x, r17.w, l(8)
        breakc_nz r18.x
        ult r18.x, r16.x, r17.w
        movc r18.yz, r18.xxxx, r15.xxyx, r16.yyzy
        movc r18.w, r18.x, cb2[r15.w + 20].w, cb2[r15.z + 20].w
        movc r18.x, r18.x, r15.w, r15.z
        dp2 r19.x, icb[r17.w + 0].yxyy, r17.xyxx
        dp2 r19.y, icb[r17.w + 0].yxyy, r17.yzyy
        mad r19.xy, r19.xyxx, r18.wwww, r18.yzyy
        iadd r18.x, r18.x, cb2[26].y
        utof r19.z, r18.x
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r18.x, r19.xyzx, t13.xxxx, s13, r10.w
        sample_l_indexable(texture2darray)(float,float,float,float) r18.y, r19.xyzx, t31.yxzw, s0, l(0.000000)
        add r18.x, r18.y, r18.x
        add_sat r18.x, r18.x, l(-1.000000)
        mad r16.w, r18.x, l(0.125000), r16.w
        iadd r17.w, r17.w, l(1)
      endloop 
      mul r10.w, r16.w, r16.w
      mul r12.w, r16.w, r10.w
    endif 
  endif 
endif 
add r10.w, -r2.y, l(1.000000)
mul r15.x, r10.w, l(5.000000)
mad r15.y, r10.w, l(5.000000), l(-2.500000)
mul r15.y, r15.y, l(0.400000)
max r15.y, r15.y, l(0.000000)
mad r15.zw, -r10.wwww, l(0.000000, 0.000000, 10.000000, 5.000000), l(0.000000, 0.000000, 6.857410, 7.085000)
exp r15.z, r15.z
mul r15.z, r2.x, r15.z
mul r16.x, r10.w, r15.x
mad r15.w, -r16.x, l(2.015905), r15.w
exp r15.w, r15.w
mul r15.w, r2.x, r15.w
mul r15.yzw, r15.yyzw, l(0.000000, 100.000000, 9.136810, 9.708090)
max r15.z, r15.w, r15.z
max r15.z, r15.z, l(1.268160)
iadd r15.w, cb2[0].y, -cb2[58].x
ushr r0.xy, r0.yxyy, l(24, 24, 0, 0)
uge r16.x, r0.x, r15.w
ult r16.y, r0.x, cb2[0].y
and r16.x, r16.y, r16.x
if_nz r16.x
  imul null, r16.x, r0.x, l(14)
  if_nz r3.z
    add r17.yzw, cb1[24].xxyz, cb10[r16.x + 0].xxyz
    mov r17.x, l(16)
    store_structured u2.xyzw, cb2[52].x, l(880), r17.xyzw
  endif 
  add r16.yzw, r5.xxyz, -cb10[r16.x + 0].xxyz
  and r17.x, l(0x0000ffff), cb10[r16.x + 7].z
  ubfe r17.y, l(6), l(25), cb10[r16.x + 7].z
  imul null, r17.z, r17.x, l(6)
  dp3 r17.w, cb11[r17.z + 0].xyzx, r16.yzwy
  add_sat r17.w, r17.w, cb11[r17.z + 0].w
  dp3 r18.x, cb11[r17.z + 1].xyzx, r16.yzwy
  add_sat r18.x, r18.x, cb11[r17.z + 1].w
  mul r17.w, r17.w, r18.x
  dp3 r18.x, cb11[r17.z + 2].xyzx, r16.yzwy
  add_sat r18.x, r18.x, cb11[r17.z + 2].w
  mul r17.w, r17.w, r18.x
  dp3 r18.x, cb11[r17.z + 3].xyzx, r16.yzwy
  add_sat r18.x, r18.x, cb11[r17.z + 3].w
  mul r17.w, r17.w, r18.x
  dp3 r18.x, cb11[r17.z + 4].xyzx, r16.yzwy
  add_sat r18.x, r18.x, cb11[r17.z + 4].w
  mul r17.w, r17.w, r18.x
  dp3 r18.x, cb11[r17.z + 5].xyzx, r16.yzwy
  add_sat r17.z, r18.x, cb11[r17.z + 5].w
  mul r18.x, r17.z, r17.w
  and r17.z, l(1), cb10[r16.x + 6].x
  mov r18.yz, l(0,0,1.000000,0)
  movc r17.zw, r17.zzzz, r18.xxxy, r18.zzzx
  mov r18.x, l(1.000000)
  mov r18.z, cb10[r16.x + 6].x
  mov r19.xy, r17.zwzz
  mov r18.w, l(1)
  loop 
    ige r19.z, r18.w, r17.y
    breakc_nz r19.z
    iadd r19.z, r17.x, r18.w
    imul null, r19.z, r19.z, l(6)
    dp3 r19.w, cb11[r19.z + 0].xyzx, r16.yzwy
    add_sat r19.w, r19.w, cb11[r19.z + 0].w
    mul r19.w, r19.w, r19.x
    dp3 r20.x, cb11[r19.z + 1].xyzx, r16.yzwy
    add_sat r20.x, r20.x, cb11[r19.z + 1].w
    mul r19.w, r19.w, r20.x
    dp3 r20.x, cb11[r19.z + 2].xyzx, r16.yzwy
    add_sat r20.x, r20.x, cb11[r19.z + 2].w
    mul r19.w, r19.w, r20.x
    dp3 r20.x, cb11[r19.z + 3].xyzx, r16.yzwy
    add_sat r20.x, r20.x, cb11[r19.z + 3].w
    mul r19.w, r19.w, r20.x
    dp3 r20.x, cb11[r19.z + 4].xyzx, r16.yzwy
    add_sat r20.x, r20.x, cb11[r19.z + 4].w
    mul r19.w, r19.w, r20.x
    dp3 r20.x, cb11[r19.z + 5].xyzx, r16.yzwy
    add_sat r19.z, r20.x, cb11[r19.z + 5].w
    mul r19.x, r19.z, r19.w
    ushr r20.x, r18.z, l(2)
    ubfe r20.y, l(1), l(2), r18.z
    and r20.z, r20.x, l(2)
    max r20.w, r19.x, r19.y
    mad r19.z, -r19.w, r19.z, l(1.000000)
    mul r19.z, r19.z, r19.y
    movc r18.y, r20.z, r19.z, r20.w
    movc r19.xy, r20.yyyy, r19.xyxx, r18.xyxx
    iadd r18.w, r18.w, l(1)
    mov r18.z, r20.x
  endloop 
  mov_sat r19.y, r19.y
  mul r17.x, r19.y, cb10[r16.x + 6].y
  lt r17.y, l(0.000000), r17.x
  if_nz r17.y
    if_nz r3.z
      ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r17.y, cb2[52].x, l(880), u2.xxxx
      or r17.y, r17.y, l(32)
      store_structured u2.x, cb2[52].x, l(880), r17.y
      store_structured u2.x, cb2[52].x, l(896), r17.x
    endif 
    mul r17.y, r17.x, cb10[r16.x + 7].y
    mov r18.x, cb10[r16.x + 7].w
    mov r18.yz, cb10[r16.x + 8].xxyx
    dp3 r17.z, r14.xyzx, r18.xyzx
    dp3 r17.w, r16.yzwy, r18.xyzx
    add r17.w, r17.w, -cb10[r16.x + 8].z
    ge r18.x, r17.w, l(0.000000)
    max r17.w, r15.y, |r17.w|
    movc r17.w, r18.x, r17.w, -r17.w
    max r17.z, -r17.z, l(0.00000010)
    div r17.z, r17.w, r17.z
    min r17.z, |r17.z|, l(131072.000000)
    mov r18.x, cb10[r16.x + 8].w
    mov r18.yz, cb10[r16.x + 9].xxyx
    dp3 r17.w, r14.xyzx, r18.xyzx
    dp3 r18.x, r16.yzwy, r18.xyzx
    add r18.x, r18.x, -cb10[r16.x + 9].z
    ge r18.y, r18.x, l(0.000000)
    max r18.x, r15.y, |r18.x|
    movc r18.x, r18.y, r18.x, -r18.x
    max r17.w, -r17.w, l(0.00000010)
    div r17.w, r18.x, r17.w
    min r17.z, |r17.w|, r17.z
    mov r18.x, cb10[r16.x + 9].w
    mov r18.yz, cb10[r16.x + 10].xxyx
    dp3 r17.w, r14.xyzx, r18.xyzx
    dp3 r18.x, r16.yzwy, r18.xyzx
    add r18.x, r18.x, -cb10[r16.x + 10].z
    ge r18.y, r18.x, l(0.000000)
    max r18.x, r15.y, |r18.x|
    movc r18.x, r18.y, r18.x, -r18.x
    max r17.w, -r17.w, l(0.00000010)
    div r17.w, r18.x, r17.w
    min r17.z, |r17.w|, r17.z
    mov r18.x, cb10[r16.x + 10].w
    mov r18.yz, cb10[r16.x + 11].xxyx
    dp3 r17.w, r14.xyzx, r18.xyzx
    dp3 r18.x, r16.yzwy, r18.xyzx
    add r18.x, r18.x, -cb10[r16.x + 11].z
    ge r18.y, r18.x, l(0.000000)
    max r18.x, r15.y, |r18.x|
    movc r18.x, r18.y, r18.x, -r18.x
    max r17.w, -r17.w, l(0.00000010)
    div r17.w, r18.x, r17.w
    min r17.z, |r17.w|, r17.z
    mov r18.x, cb10[r16.x + 11].w
    mov r18.yz, cb10[r16.x + 12].xxyx
    dp3 r17.w, r14.xyzx, r18.xyzx
    dp3 r18.x, r16.yzwy, r18.xyzx
    add r18.x, r18.x, -cb10[r16.x + 12].z
    ge r18.y, r18.x, l(0.000000)
    max r18.x, r15.y, |r18.x|
    movc r18.x, r18.y, r18.x, -r18.x
    max r17.w, -r17.w, l(0.00000010)
    div r17.w, r18.x, r17.w
    min r17.z, |r17.w|, r17.z
    mov r18.x, cb10[r16.x + 12].w
    mov r18.yz, cb10[r16.x + 13].xxyx
    dp3 r17.w, r14.xyzx, r18.xyzx
    dp3 r18.x, r16.yzwy, r18.xyzx
    add r18.x, r18.x, -cb10[r16.x + 13].z
    ge r18.y, r18.x, l(0.000000)
    max r18.x, r15.y, |r18.x|
    movc r18.x, r18.y, r18.x, -r18.x
    max r17.w, -r17.w, l(0.00000010)
    div r17.w, r18.x, r17.w
    min r17.z, |r17.w|, r17.z
    add r18.x, r16.y, cb10[r16.x + 3].w
    add r18.yz, r16.zzwz, cb10[r16.x + 4].xxyx
    mad r18.xyz, r14.xyzx, r17.zzzz, r18.xyzx
    dp3 r17.w, r18.xyzx, r18.xyzx
    sqrt r17.w, r17.w
    div r17.z, r17.z, r17.w
    add r17.z, r17.z, r17.z
    sqrt r17.z, r17.z
    mad r17.z, r10.w, l(5.000000), r17.z
    add r17.z, r17.z, l(-0.844800)
    mov r19.x, cb10[r16.x + 0].w
    mov r19.y, cb10[r16.x + 1].z
    mov r19.z, cb10[r16.x + 2].y
    dp3 r20.x, r18.xyzx, r19.xyzx
    mov r21.xy, cb10[r16.x + 1].xwxx
    mov r21.z, cb10[r16.x + 2].z
    dp3 r20.y, r18.xyzx, r21.xyzx
    mov r22.x, cb10[r16.x + 1].y
    mov r22.yz, cb10[r16.x + 2].xxwx
    dp3 r20.z, r18.xyzx, r22.xyzx
    ubfe r17.w, l(9), l(16), cb10[r16.x + 7].z
    utof r20.w, r17.w
    sample_l_indexable(texturecubearray)(float,float,float,float) r18.xyz, r20.xyzw, t8.xyzw, s2, r17.z
    and r23.xyz, r18.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
    ieq r23.xyz, r23.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
    or r17.z, r23.y, r23.x
    or r17.z, r23.z, r17.z
    movc r18.xyz, r17.zzzz, l(1.000000,1.000000,0,0), r18.xyzx
    dp3 r23.x, r16.yzwy, r19.xyzx
    dp3 r23.y, r16.yzwy, r21.xyzx
    dp3 r23.z, r16.yzwy, r22.xyzx
    mad_sat r16.yzw, r23.xxyz, cb10[r16.x + 3].xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
    mul r23.xy, r16.yzyy, cb10[r16.x + 4].zwzz
    mul r23.z, r16.w, cb10[r16.x + 5].x
    add r16.xyz, r23.xyzx, cb10[r16.x + 5].yzwy
    dp3 r20.x, r11.xyzx, r19.xyzx
    dp3 r20.y, r11.xyzx, r21.xyzx
    dp3 r20.z, r11.xyzx, r22.xyzx
    lt r19.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r20.xyzx
    movc r21.z, r19.x, l(0), l(0.500000)
    mov r21.xy, l(0,0,0,0)
    add r21.xyz, r16.xyzx, r21.xyzx
    sample_l_indexable(texture3d)(float,float,float,float) r21.xyz, r21.xyzx, t17.xyzw, s4, l(0.000000)
    mul r22.xyz, r20.xyzx, r20.xyzx
    mul r22.xyz, r17.yyyy, r22.xyzx
    movc r23.z, r19.y, l(0), l(0.500000)
    mov r23.xy, l(0,0,0,0)
    add r19.xyw, r16.xyxz, r23.xyxz
    sample_l_indexable(texture3d)(float,float,float,float) r19.xyw, r19.xywx, t18.xywz, s4, l(0.000000)
    mul r19.xyw, r22.yyyy, r19.xyxw
    mad r19.xyw, r21.xyxz, r22.xxxx, r19.xyxw
    movc r21.z, r19.z, l(0), l(0.500000)
    mov r21.xy, l(0,0,0,0)
    add r16.xyz, r16.xyzx, r21.xyzx
    sample_l_indexable(texture3d)(float,float,float,float) r16.xyz, r16.xyzx, t19.xyzw, s4, l(0.000000)
    mad r16.xyz, r16.xyzx, r22.zzzz, r19.xywx
    sample_l_indexable(texturecubearray)(float,float,float,float) r19.xyz, r20.xyzw, t8.xyzw, s2, l(6.000000)
    and r20.xyz, r19.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
    ieq r20.xyz, r20.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
    or r16.w, r20.y, r20.x
    or r16.w, r20.z, r16.w
    movc r19.xyz, r16.wwww, l(1.000000,1.000000,0,0), r19.xyzx
    mul r16.xyz, r16.xyzx, r19.xyzx
    dp3 r16.w, r16.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
    mul r17.z, r15.z, r16.w
    mul r18.xyz, r17.yyyy, r18.xyzx
    dp3 r17.y, r18.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
    mad r16.w, r15.z, r16.w, r17.y
    div r16.w, r17.z, r16.w
    mul r17.yzw, r16.wwww, r18.xxyz
    mov r16.w, l(257)
  else 
    mov r17.xyzw, l(0,0,0,0)
    mov r16.xyzw, l(0,0,0,1)
  endif 
else 
  mov r17.xyzw, l(0,0,0,0)
  mov r16.xyzw, l(0,0,0,0)
endif 
ult r15.w, r0.x, r15.w
if_nz r15.w
  imul null, r0.x, r0.x, l(14)
  if_nz r3.z
    and r15.w, r16.w, l(1)
    imad r15.w, r15.w, l(20), l(880)
    add r18.yzw, cb1[24].xxyz, cb10[r0.x + 0].xxyz
    mov r18.x, l(16)
    store_structured u2.xyzw, cb2[52].x, r15.w, r18.xyzw
  endif 
  iadd r15.w, r16.w, l(1)
  add r18.xyz, r5.xyzx, -cb10[r0.x + 0].xyzx
  and r18.w, l(0x0000ffff), cb10[r0.x + 7].z
  ubfe r19.x, l(6), l(25), cb10[r0.x + 7].z
  imul null, r19.y, r18.w, l(6)
  dp3 r19.z, cb11[r19.y + 0].xyzx, r18.xyzx
  add_sat r19.z, r19.z, cb11[r19.y + 0].w
  dp3 r19.w, cb11[r19.y + 1].xyzx, r18.xyzx
  add_sat r19.w, r19.w, cb11[r19.y + 1].w
  mul r19.z, r19.w, r19.z
  dp3 r19.w, cb11[r19.y + 2].xyzx, r18.xyzx
  add_sat r19.w, r19.w, cb11[r19.y + 2].w
  mul r19.z, r19.w, r19.z
  dp3 r19.w, cb11[r19.y + 3].xyzx, r18.xyzx
  add_sat r19.w, r19.w, cb11[r19.y + 3].w
  mul r19.z, r19.w, r19.z
  dp3 r19.w, cb11[r19.y + 4].xyzx, r18.xyzx
  add_sat r19.w, r19.w, cb11[r19.y + 4].w
  mul r19.z, r19.w, r19.z
  dp3 r19.w, cb11[r19.y + 5].xyzx, r18.xyzx
  add_sat r19.y, r19.w, cb11[r19.y + 5].w
  mul r20.x, r19.y, r19.z
  and r19.y, l(1), cb10[r0.x + 6].x
  mov r20.yz, l(0,0,1.000000,0)
  movc r19.yz, r19.yyyy, r20.xxyx, r20.zzxz
  mov r20.x, l(1.000000)
  mov r19.w, cb10[r0.x + 6].x
  mov r21.xy, r19.yzyy
  mov r20.z, l(1)
  loop 
    ige r20.w, r20.z, r19.x
    breakc_nz r20.w
    iadd r20.w, r18.w, r20.z
    imul null, r20.w, r20.w, l(6)
    dp3 r21.z, cb11[r20.w + 0].xyzx, r18.xyzx
    add_sat r21.z, r21.z, cb11[r20.w + 0].w
    mul r21.z, r21.z, r21.x
    dp3 r21.w, cb11[r20.w + 1].xyzx, r18.xyzx
    add_sat r21.w, r21.w, cb11[r20.w + 1].w
    mul r21.z, r21.w, r21.z
    dp3 r21.w, cb11[r20.w + 2].xyzx, r18.xyzx
    add_sat r21.w, r21.w, cb11[r20.w + 2].w
    mul r21.z, r21.w, r21.z
    dp3 r21.w, cb11[r20.w + 3].xyzx, r18.xyzx
    add_sat r21.w, r21.w, cb11[r20.w + 3].w
    mul r21.z, r21.w, r21.z
    dp3 r21.w, cb11[r20.w + 4].xyzx, r18.xyzx
    add_sat r21.w, r21.w, cb11[r20.w + 4].w
    mul r21.z, r21.w, r21.z
    dp3 r21.w, cb11[r20.w + 5].xyzx, r18.xyzx
    add_sat r20.w, r21.w, cb11[r20.w + 5].w
    mul r21.x, r20.w, r21.z
    ushr r21.w, r19.w, l(2)
    ubfe r22.x, l(1), l(2), r19.w
    and r22.y, r21.w, l(2)
    max r22.z, r21.x, r21.y
    mad r20.w, -r21.z, r20.w, l(1.000000)
    mul r20.w, r20.w, r21.y
    movc r20.y, r22.y, r20.w, r22.z
    movc r21.xy, r22.xxxx, r21.xyxx, r20.xyxx
    iadd r20.z, r20.z, l(1)
    mov r19.w, r21.w
  endloop 
  add_sat r18.w, -r17.x, r21.y
  mul r19.x, r18.w, cb10[r0.x + 6].y
  lt r19.y, l(0.000000), r19.x
  if_nz r19.y
    and r19.y, r15.w, l(3)
    iadd r19.z, r19.y, l(-1)
    ult r19.z, r19.z, l(32)
    and r19.z, r3.z, r19.z
    if_nz r19.z
      imad r19.yz, r19.yyyy, l(0, 20, 20, 0), l(0, 860, 876, 0)
      ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r19.w, cb2[52].x, r19.y, u2.xxxx
      or r19.w, r19.w, l(32)
      store_structured u2.x, cb2[52].x, r19.y, r19.w
      store_structured u2.x, cb2[52].x, r19.z, r19.x
    endif 
    iadd r15.w, r16.w, l(257)
    mad r18.w, r18.w, cb10[r0.x + 6].y, r17.x
    mul r19.x, r19.x, cb10[r0.x + 7].y
    mov r20.x, cb10[r0.x + 7].w
    mov r20.yz, cb10[r0.x + 8].xxyx
    dp3 r19.y, r14.xyzx, r20.xyzx
    dp3 r19.z, r18.xyzx, r20.xyzx
    add r19.z, r19.z, -cb10[r0.x + 8].z
    ge r19.w, r19.z, l(0.000000)
    max r19.z, r15.y, |r19.z|
    movc r19.z, r19.w, r19.z, -r19.z
    max r19.y, -r19.y, l(0.00000010)
    div r19.y, r19.z, r19.y
    min r19.y, |r19.y|, l(131072.000000)
    mov r20.x, cb10[r0.x + 8].w
    mov r20.yz, cb10[r0.x + 9].xxyx
    dp3 r19.z, r14.xyzx, r20.xyzx
    dp3 r19.w, r18.xyzx, r20.xyzx
    add r19.w, r19.w, -cb10[r0.x + 9].z
    ge r20.x, r19.w, l(0.000000)
    max r19.w, r15.y, |r19.w|
    movc r19.w, r20.x, r19.w, -r19.w
    max r19.z, -r19.z, l(0.00000010)
    div r19.z, r19.w, r19.z
    min r19.y, |r19.z|, r19.y
    mov r20.x, cb10[r0.x + 9].w
    mov r20.yz, cb10[r0.x + 10].xxyx
    dp3 r19.z, r14.xyzx, r20.xyzx
    dp3 r19.w, r18.xyzx, r20.xyzx
    add r19.w, r19.w, -cb10[r0.x + 10].z
    ge r20.x, r19.w, l(0.000000)
    max r19.w, r15.y, |r19.w|
    movc r19.w, r20.x, r19.w, -r19.w
    max r19.z, -r19.z, l(0.00000010)
    div r19.z, r19.w, r19.z
    min r19.y, |r19.z|, r19.y
    mov r20.x, cb10[r0.x + 10].w
    mov r20.yz, cb10[r0.x + 11].xxyx
    dp3 r19.z, r14.xyzx, r20.xyzx
    dp3 r19.w, r18.xyzx, r20.xyzx
    add r19.w, r19.w, -cb10[r0.x + 11].z
    ge r20.x, r19.w, l(0.000000)
    max r19.w, r15.y, |r19.w|
    movc r19.w, r20.x, r19.w, -r19.w
    max r19.z, -r19.z, l(0.00000010)
    div r19.z, r19.w, r19.z
    min r19.y, |r19.z|, r19.y
    mov r20.x, cb10[r0.x + 11].w
    mov r20.yz, cb10[r0.x + 12].xxyx
    dp3 r19.z, r14.xyzx, r20.xyzx
    dp3 r19.w, r18.xyzx, r20.xyzx
    add r19.w, r19.w, -cb10[r0.x + 12].z
    ge r20.x, r19.w, l(0.000000)
    max r19.w, r15.y, |r19.w|
    movc r19.w, r20.x, r19.w, -r19.w
    max r19.z, -r19.z, l(0.00000010)
    div r19.z, r19.w, r19.z
    min r19.y, |r19.z|, r19.y
    mov r20.x, cb10[r0.x + 12].w
    mov r20.yz, cb10[r0.x + 13].xxyx
    dp3 r19.z, r14.xyzx, r20.xyzx
    dp3 r19.w, r18.xyzx, r20.xyzx
    add r19.w, r19.w, -cb10[r0.x + 13].z
    ge r20.x, r19.w, l(0.000000)
    max r15.y, r15.y, |r19.w|
    movc r15.y, r20.x, r15.y, -r15.y
    max r19.z, -r19.z, l(0.00000010)
    div r15.y, r15.y, r19.z
    min r15.y, |r15.y|, r19.y
    add r20.x, r18.x, cb10[r0.x + 3].w
    add r20.yz, r18.yyzy, cb10[r0.x + 4].xxyx
    mad r19.yzw, r14.xxyz, r15.yyyy, r20.xxyz
    dp3 r20.x, r19.yzwy, r19.yzwy
    sqrt r20.x, r20.x
    div r15.y, r15.y, r20.x
    add r15.y, r15.y, r15.y
    sqrt r15.y, r15.y
    mad r10.w, r10.w, l(5.000000), r15.y
    add r10.w, r10.w, l(-0.844800)
    mov r20.x, cb10[r0.x + 0].w
    mov r20.y, cb10[r0.x + 1].z
    mov r20.z, cb10[r0.x + 2].y
    dp3 r21.x, r19.yzwy, r20.xyzx
    mov r22.xy, cb10[r0.x + 1].xwxx
    mov r22.z, cb10[r0.x + 2].z
    dp3 r21.y, r19.yzwy, r22.xyzx
    mov r23.x, cb10[r0.x + 1].y
    mov r23.yz, cb10[r0.x + 2].xxwx
    dp3 r21.z, r19.yzwy, r23.xyzx
    ubfe r15.y, l(9), l(16), cb10[r0.x + 7].z
    utof r21.w, r15.y
    sample_l_indexable(texturecubearray)(float,float,float,float) r19.yzw, r21.xyzw, t8.wxyz, s2, r10.w
    and r24.xyz, r19.yzwy, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
    ieq r24.xyz, r24.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
    or r10.w, r24.y, r24.x
    or r10.w, r24.z, r10.w
    movc r19.yzw, r10.wwww, l(0,1.000000,1.000000,0), r19.yyzw
    dp3 r24.x, r18.xyzx, r20.xyzx
    dp3 r24.y, r18.xyzx, r22.xyzx
    dp3 r24.z, r18.xyzx, r23.xyzx
    mad_sat r18.xyz, r24.xyzx, cb10[r0.x + 3].xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    mul r24.xy, r18.xyxx, cb10[r0.x + 4].zwzz
    mul r24.z, r18.z, cb10[r0.x + 5].x
    add r18.xyz, r24.xyzx, cb10[r0.x + 5].yzwy
    dp3 r21.x, r11.xyzx, r20.xyzx
    dp3 r21.y, r11.xyzx, r22.xyzx
    dp3 r21.z, r11.xyzx, r23.xyzx
    lt r20.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r21.xyzx
    movc r22.z, r20.x, l(0), l(0.500000)
    mov r22.xy, l(0,0,0,0)
    add r22.xyz, r18.xyzx, r22.xyzx
    sample_l_indexable(texture3d)(float,float,float,float) r22.xyz, r22.xyzx, t17.xyzw, s4, l(0.000000)
    mul r23.xyz, r21.xyzx, r21.xyzx
    mul r23.xyz, r19.xxxx, r23.xyzx
    movc r24.z, r20.y, l(0), l(0.500000)
    mov r24.xy, l(0,0,0,0)
    add r20.xyw, r18.xyxz, r24.xyxz
    sample_l_indexable(texture3d)(float,float,float,float) r20.xyw, r20.xywx, t18.xywz, s4, l(0.000000)
    mul r20.xyw, r23.yyyy, r20.xyxw
    mad r20.xyw, r22.xyxz, r23.xxxx, r20.xyxw
    movc r22.z, r20.z, l(0), l(0.500000)
    mov r22.xy, l(0,0,0,0)
    add r18.xyz, r18.xyzx, r22.xyzx
    sample_l_indexable(texture3d)(float,float,float,float) r18.xyz, r18.xyzx, t19.xyzw, s4, l(0.000000)
    mad r18.xyz, r18.xyzx, r23.zzzz, r20.xywx
    sample_l_indexable(texturecubearray)(float,float,float,float) r20.xyz, r21.xyzw, t8.xyzw, s2, l(6.000000)
    and r21.xyz, r20.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
    ieq r21.xyz, r21.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
    or r0.x, r21.y, r21.x
    or r0.x, r21.z, r0.x
    movc r20.xyz, r0.xxxx, l(1.000000,1.000000,0,0), r20.xyzx
    mul r21.xyz, r18.xyzx, r20.xyzx
    dp3 r0.x, r21.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
    mad r16.xyz, r18.xyzx, r20.xyzx, r16.xyzx
    mul r10.w, r0.x, r15.z
    mul r18.xyz, r19.xxxx, r19.yzwy
    dp3 r15.y, r18.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
    mad r0.x, r15.z, r0.x, r15.y
    div r0.x, r10.w, r0.x
    mad r17.yzw, r18.xxyz, r0.xxxx, r17.yyzw
  else 
    mov r18.w, r17.x
  endif 
else 
  mov r18.w, r17.x
  mov r15.w, r16.w
endif 
ge r0.x, r17.x, l(1.000000)
bfi r10.w, l(8), l(0), r15.w, r16.w
movc r0.x, r0.x, r10.w, r15.w
max r10.w, r18.w, l(1.000000)
rcp r10.w, r10.w
mov_sat r18.w, r18.w
mul r15.yzw, r10.wwww, r16.xxyz
mul r17.xyz, r10.wwww, r17.yzwy
lt r16.w, r18.w, l(0.990000)
if_nz r16.w
  iadd r0.x, r0.x, l(256)
  add r16.w, -r18.w, l(1.000000)
  mul r17.w, r16.w, cb2[19].x
  add r18.xyz, r5.xyzx, -cb2[35].xyzx
  mul r19.x, r18.x, cb2[35].w
  mul r19.yz, r18.yyzy, cb2[36].xxyx
  add_sat r18.xyz, r19.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mul r19.xy, r18.xyxx, cb2[36].zwzz
  mul r19.z, r18.z, cb2[37].x
  add r18.xyz, r19.xyzx, cb2[37].yzwy
  lt r19.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
  movc r19.xyz, r19.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
  mov r19.w, l(0)
  add r20.xyz, r18.xyzx, r19.wwxw
  sample_l_indexable(texture3d)(float,float,float,float) r20.xyz, r20.xyzx, t17.xyzw, s4, l(0.000000)
  mul r21.xyz, r11.xyzx, r11.xyzx
  mul r21.xyz, r17.wwww, r21.xyzx
  add r22.xyz, r18.xyzx, r19.wwyw
  sample_l_indexable(texture3d)(float,float,float,float) r22.xyz, r22.xyzx, t18.xyzw, s4, l(0.000000)
  mul r22.xyz, r21.yyyy, r22.xyzx
  mad r20.xyz, r20.xyzx, r21.xxxx, r22.xyzx
  add r18.xyz, r18.xyzx, r19.wwzw
  sample_l_indexable(texture3d)(float,float,float,float) r18.xyz, r18.xyzx, t19.xyzw, s4, l(0.000000)
  mad r18.xyz, r18.xyzx, r21.zzzz, r20.xyzx
  mov r11.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r19.xyz, r11.xyzw, t8.xyzw, s2, l(6.000000)
  mul r18.xyz, r18.xyzx, r19.xyzx
  dp3 r11.w, r18.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  mad r15.yzw, r16.xxyz, r10.wwww, r18.xxyz
  mov r14.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r16.xyz, r14.xyzw, t8.xyzw, s2, r15.x
  mad r10.w, cb2[19].x, r16.w, -r11.w
  mad r10.w, r2.y, r10.w, r11.w
  mad r17.xyz, r16.xyzx, r10.wwww, r17.xyzx
endif 
add r1.w, -r1.w, l(1.000000)
mad r13.yzw, r17.xxyz, r1.wwww, r13.yyzw
add r1.w, r4.z, r2.x
log r1.w, |r1.w|
mul r1.w, r1.w, r3.y
exp r1.w, r1.w
add r1.w, r4.z, r1.w
add_sat r1.w, r1.w, l(-1.000000)
mul r1.w, r6.w, r1.w
mul r16.xyz, r4.zzzz, r15.yzwy
and r17.xyz, r3.wwww, r16.yzxy
mad r18.xy, r2.xyxx, l(0.984375, 0.984375, 0.000000, 0.000000), l(0.00781250, 0.00781250, 0.000000, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r18.xy, r18.xyxx, t5.xyzw, s2, l(0.000000)
mul r13.yzw, r1.wwww, r13.yyzw
mul r18.xzw, r18.xxxx, r13.yyzw
mul r19.xyz, r18.yyyy, r13.yzwy
sqrt r1.w, r3.y
mad r1.w, r1.w, l(0.500000), l(0.500000)
mul r1.w, r1.w, r1.w
mul r2.y, r1.w, l(0.500000)
mad r1.w, -r1.w, l(0.500000), l(1.000000)
mad r6.w, r2.x, r1.w, r2.y
mul r1.w, r1.w, r6.w
mul r2.y, r2.y, r6.w
if_nz r3.z
  mov r20.x, l(3)
  mov r20.yzw, cb1[24].xxyz
  store_structured u2.xyzw, cb2[52].x, l(112), r20.xyzw
endif 
lt r6.w, l(0.000000), r9.w
if_nz r6.w
  if_nz r3.z
    ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r6.w, cb2[52].x, l(112), u2.xxxx
    or r6.w, r6.w, l(4)
    store_structured u2.x, cb2[52].x, l(112), r6.w
    store_structured u2.x, cb2[52].x, l(128), r12.w
  endif 
  lt r6.w, l(0.000000), r12.w
  if_nz r6.w
    mul r6.w, r2.w, cb2[18].w
    mul r6.w, r8.w, r6.w
    if_nz cb2[23].x
      add r20.xyz, r5.xyzx, cb1[24].xyzx
      mov r20.w, l(1.000000)
      dp4 r10.w, cb2[24].xyzw, r20.xyzw
      dp4 r11.w, cb2[25].xyzw, r20.xyzw
      frc r20.x, r10.w
      frc r20.y, r11.w
      iadd r10.w, l(-1), cb2[23].x
      utof r20.z, r10.w
      sample_l_indexable(texture2darray)(float,float,float,float) r13.yzw, r20.xyzx, t20.wxyz, s2, l(0.000000)
      add r13.yzw, r13.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
      mad r13.yzw, cb2[23].yyyy, r13.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
      mul r13.yzw, r13.yyzw, cb2[18].xxyz
    else 
      mov r13.yzw, cb2[18].xxyz
    endif 
    ushr r10.w, cb2[53].x, l(16)
    ult r11.w, l(0), r10.w
    and r11.w, r1.z, r11.w
    if_nz r11.w
      iadd r10.w, r10.w, cb2[0].x
      imad r10.w, r10.w, l(15), l(-15)
      mad r11.w, |r7.w|, l(-0.200000), l(0.400000)
      lt r14.w, r7.w, l(0.000000)
      and r14.w, r3.w, r14.w
      movc r11.w, r14.w, -r11.w, r11.w
      mad r20.xyz, r11.xyzx, r11.wwww, r5.xyzx
      mov r21.xyz, cb9[r10.w + 4].yzwy
      mov r21.w, cb9[r10.w + 5].x
      mov r20.w, l(1.000000)
      dp4 r21.x, r21.xyzw, r20.xyzw
      mov r22.xyz, cb9[r10.w + 5].yzwy
      mov r22.w, cb9[r10.w + 6].x
      dp4 r21.y, r22.xyzw, r20.xyzw
      mad r21.xy, r21.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      add r22.x, r21.x, cb9[r10.w + 9].w
      add r22.y, r21.y, cb9[r10.w + 10].x
      mul r21.xy, r22.xyxx, cb9[r10.w + 9].yzyy
      div r21.zw, cb9[r10.w + 3].yyyy, cb9[r10.w + 8].yyyw
      add r22.xy, -r21.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
      ge r22.xy, r21.xyxx, r22.xyxx
      ge r21.zw, r21.zzzw, r21.xxxy
      or r21.zw, r21.zzzw, r22.xxxy
      or r11.w, r21.w, r21.z
      if_z r11.w
        mov r22.xyz, cb9[r10.w + 6].yzwy
        mov r22.w, cb9[r10.w + 7].x
        dp4 r11.w, r22.xyzw, r20.xyzw
        mov_sat r21.xy, r21.xyxx
        mad r20.x, r21.x, cb9[r10.w + 8].y, cb9[r10.w + 8].z
        mad r20.y, r21.y, cb9[r10.w + 8].w, cb9[r10.w + 9].x
        add r11.w, r11.w, cb9[r10.w + 10].y
        div r11.w, r11.w, cb9[r10.w + 10].z
        max r11.w, r11.w, l(0.00006104)
        and r14.w, l(0x0000ffff), cb9[r10.w + 1].w
        if_nz cb2[58].y
          mov r21.x, -r3.x
          utof r22.z, r14.w
          mov r21.y, r13.x
          mov r21.z, r3.x
          mov r15.x, l(0)
          mov r18.y, l(0)
          loop 
            ige r20.w, r18.y, l(8)
            breakc_nz r20.w
            dp2 r23.x, icb[r18.y + 0].yxyy, r21.xyxx
            dp2 r23.y, icb[r18.y + 0].yxyy, r21.yzyy
            mad r22.xy, r23.xyxx, cb9[r10.w + 3].yyyy, r20.xyxx
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r20.w, r22.xyzx, t9.xxxx, s13, r11.w
            mad r15.x, r20.w, l(0.125000), r15.x
            iadd r18.y, r18.y, l(1)
          endloop 
        else 
          utof r20.z, r14.w
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r15.x, r20.xyzx, t9.xxxx, s13, r11.w
        endif 
        mul r10.w, r15.x, r15.x
        mul r10.w, r15.x, r10.w
      else 
        mov r10.w, l(1.000000)
      endif 
      mul r12.w, r10.w, r12.w
    else 
      and r10.w, cb2[53].x, l(0x0000ffff)
      ult r11.w, l(0), r10.w
      not r14.w, r1.z
      and r11.w, r11.w, r14.w
      if_nz r11.w
        iadd r10.w, r10.w, cb2[0].x
        imad r10.w, r10.w, l(15), l(-15)
        mad r11.w, |r7.w|, l(-0.200000), l(0.400000)
        lt r14.w, r7.w, l(0.000000)
        and r14.w, r3.w, r14.w
        movc r11.w, r14.w, -r11.w, r11.w
        mad r20.xyz, r11.xyzx, r11.wwww, r5.xyzx
        mov r21.xyz, cb9[r10.w + 4].yzwy
        mov r21.w, cb9[r10.w + 5].x
        mov r20.w, l(1.000000)
        dp4 r21.x, r21.xyzw, r20.xyzw
        mov r22.xyz, cb9[r10.w + 5].yzwy
        mov r22.w, cb9[r10.w + 6].x
        dp4 r21.y, r22.xyzw, r20.xyzw
        mad r21.xy, r21.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
        add r22.x, r21.x, cb9[r10.w + 9].w
        add r22.y, r21.y, cb9[r10.w + 10].x
        mul r21.xy, r22.xyxx, cb9[r10.w + 9].yzyy
        div r21.zw, cb9[r10.w + 3].yyyy, cb9[r10.w + 8].yyyw
        add r22.xy, -r21.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
        ge r22.xy, r21.xyxx, r22.xyxx
        ge r21.zw, r21.zzzw, r21.xxxy
        or r21.zw, r21.zzzw, r22.xxxy
        or r11.w, r21.w, r21.z
        if_z r11.w
          mov r22.xyz, cb9[r10.w + 6].yzwy
          mov r22.w, cb9[r10.w + 7].x
          dp4 r11.w, r22.xyzw, r20.xyzw
          mov_sat r21.xy, r21.xyxx
          mad r20.x, r21.x, cb9[r10.w + 8].y, cb9[r10.w + 8].z
          mad r20.y, r21.y, cb9[r10.w + 8].w, cb9[r10.w + 9].x
          add r11.w, r11.w, cb9[r10.w + 10].y
          div r11.w, r11.w, cb9[r10.w + 10].z
          max r11.w, r11.w, l(0.00006104)
          and r14.w, l(0x0000ffff), cb9[r10.w + 1].w
          if_nz cb2[58].y
            mov r21.x, -r3.x
            utof r22.z, r14.w
            mov r21.y, r13.x
            mov r21.z, r3.x
            mov r15.x, l(0)
            mov r18.y, l(0)
            loop 
              ige r20.w, r18.y, l(8)
              breakc_nz r20.w
              dp2 r23.x, icb[r18.y + 0].yxyy, r21.xyxx
              dp2 r23.y, icb[r18.y + 0].yxyy, r21.yzyy
              mad r22.xy, r23.xyxx, cb9[r10.w + 3].yyyy, r20.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r20.w, r22.xyzx, t9.xxxx, s13, r11.w
              mad r15.x, r20.w, l(0.125000), r15.x
              iadd r18.y, r18.y, l(1)
            endloop 
          else 
            utof r20.z, r14.w
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r15.x, r20.xyzx, t9.xxxx, s13, r11.w
          endif 
          mul r10.w, r15.x, r15.x
          mul r10.w, r15.x, r10.w
        else 
          mov r10.w, l(1.000000)
        endif 
        mul r12.w, r10.w, r12.w
      endif 
    endif 
    mad r10.w, -r2.x, l(0.500000), l(1.000000)
    mad r10.w, -r9.w, r10.w, l(1.000000)
    mul r10.w, r10.w, r10.w
    mad r10.w, -r10.w, l(0.620000), l(0.620000)
    add r10.w, -r9.w, r10.w
    mad r9.w, r3.y, r10.w, r9.w
    mul r9.w, r12.w, r9.w
    mul r20.xyz, r13.yzwy, r9.wwww
    lt r7.w, l(0.000000), r7.w
    mad r15.xyz, r15.yzwy, r4.zzzz, r20.xyzx
    mad r20.xyz, -r5.xyzx, r2.zzzz, cb2[17].xyzx
    dp3 r2.z, r20.xyzx, r20.xyzx
    rsq r2.z, r2.z
    mul r20.xyz, r2.zzzz, r20.xyzx
    dp3 r2.z, r20.xyzx, r12.xyzx
    dp3 r4.z, r11.xyzx, r20.xyzx
    mad r10.w, |r4.z|, r2.w, -|r4.z|
    mad r4.z, |r4.z|, r10.w, l(1.000000)
    mad r8.w, r8.w, r1.w, r2.y
    mul r4.z, r4.z, r4.z
    mul r4.z, r8.w, r4.z
    rcp r4.z, r4.z
    mul r4.z, r6.w, r4.z
    mul r4.z, r4.z, r12.w
    mul r4.z, r4.z, l(0.250000)
    mad r20.yzw, r4.zzzz, r13.yyzw, r19.xxyz
    add_sat r2.z, -r2.z, l(1.000000)
    mul r6.w, r2.z, r2.z
    mul r6.w, r6.w, r6.w
    mul r2.z, r2.z, r6.w
    mul r2.z, r2.z, r4.z
    mad r21.xyz, r2.zzzz, r13.yzwy, r18.xzwx
    mad r13.yzw, r9.wwww, r13.yyzw, r17.zzxy
    and r22.xyz, r3.wwww, r13.zwyz
    mov r15.w, r17.z
    mov r16.w, r22.z
    movc r16.xyzw, r7.wwww, r15.xyzw, r16.xyzw
    mov r17.zw, r21.xxxy
    mov r22.zw, r18.xxxz
    movc r15.xyzw, r7.wwww, r17.xyzw, r22.xyzw
    mov r20.x, r21.z
    mov r19.w, r18.w
    movc r19.xyzw, r7.wwww, r20.yzwx, r19.xyzw
    if_nz r3.z
      ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r2.z, cb2[52].x, l(112), u2.xxxx
      or r2.z, r2.z, l(8)
      store_structured u2.x, cb2[52].x, l(112), r2.z
      store_structured u2.x, cb2[52].x, l(132), r12.w
    endif 
    mov r17.z, r16.w
    mov r17.xy, r15.xyxx
    mov r18.xz, r15.zzwz
    mov r18.w, r19.w
    mov r2.z, l(0x00010101)
  else 
    mov r2.z, l(257)
  endif 
else 
  mov r2.z, l(1)
endif 
imul null, r0.y, r0.y, l(15)
ubfe r4.z, l(3), l(24), cb9[r0.y + 1].w
switch r4.z
  case l(4)
  if_nz r3.z
    add r15.yzw, cb1[24].xxyz, cb9[r0.y + 0].xxyz
    mov r15.x, l(2)
    store_structured u2.xyzw, cb2[52].x, l(136), r15.xyzw
  endif 
  iadd r4.z, r2.z, l(1)
  lt r6.w, l(0.000000), cb9[r0.y + 6].y
  mov r15.xy, cb9[r0.y + 5].zwzz
  mov r15.z, cb9[r0.y + 6].x
  mad r13.yzw, -r15.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000), cb9[r0.y + 0].xxyz
  add r20.xyz, -r5.xyzx, r13.yzwy
  dp3 r7.w, r15.xyzx, r20.xyzx
  div_sat r8.w, -r7.w, cb9[r0.y + 6].y
  mad r21.xyz, r8.wwww, r15.xyzx, r13.yzwy
  movc r21.xyz, r6.wwww, r21.xyzx, cb9[r0.y + 0].xyzx
  add r21.xyz, -r5.xyzx, r21.xyzx
  dp3 r9.w, r21.xyzx, r21.xyzx
  rsq r10.w, r9.w
  mul r21.xyz, r10.wwww, r21.xyzx
  dp3 r10.w, r11.xyzx, r21.xyzx
  mov_sat r11.w, r10.w
  movc r11.w, r3.w, |r10.w|, r11.w
  lt r12.w, l(0.000000), r11.w
  if_nz r12.w
    sqrt r12.w, r9.w
    mul r14.w, cb9[r0.y + 3].x, cb9[r0.y + 3].x
    div r9.w, r14.w, r9.w
    min r9.w, r9.w, l(1.000000)
    mad_sat r21.xy, r12.wwww, cb9[r0.y + 2].xzxx, cb9[r0.y + 2].ywyy
    mul r21.zw, r21.xxxy, r21.xxxy
    mad r21.xy, r21.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
    mul r21.xy, r21.xyxx, r21.zwzz
    mul r9.w, r9.w, r21.x
    mul r9.w, r21.y, r9.w
    lt r12.w, l(0.000000), r9.w
    if_nz r12.w
      ubfe r12.w, l(3), l(27), cb9[r0.y + 1].w
      if_nz r3.z
        ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r14.w, cb2[52].x, l(136), u2.xxxx
        or r14.w, r14.w, l(4)
        store_structured u2.x, cb2[52].x, l(136), r14.w
        store_structured u2.x, cb2[52].x, l(152), r9.w
      endif 
      iadd r14.w, r2.z, l(257)
      ine r12.w, r12.w, l(1)
      if_nz r12.w
        utof r21.xy, r1.yxyy
        dp2 r12.w, r21.xyxx, l(0.06711056, 0.00583715, 0.000000, 0.000000)
        frc r12.w, r12.w
        mul r12.w, r12.w, l(52.982918)
        frc r12.w, r12.w
        mad r12.w, r12.w, l(6.28318548), cb1[70].w
        sincos r21.x, r22.x, r12.w
        mad r12.w, |r10.w|, l(-0.200000), l(0.400000)
        lt r15.w, r10.w, l(0.000000)
        and r15.w, r3.w, r15.w
        movc r12.w, r15.w, -r12.w, r12.w
        mad r21.yzw, r11.xxyz, r12.wwww, r5.xxyz
        add r21.yzw, r21.yyzw, -cb9[r0.y + 4].yyzw
        max r12.w, |r21.w|, |r21.z|
        max r12.w, r12.w, |r21.y|
        div r12.w, cb9[r0.y + 5].x, r12.w
        add r12.w, r12.w, cb9[r0.y + 5].y
        dp3 r15.w, r21.yzwy, r21.yzwy
        rsq r15.w, r15.w
        max r12.w, r12.w, l(0.00006104)
        and r16.w, l(0x0000ffff), cb9[r0.y + 1].w
        mov r23.x, -r3.x
        utof r24.w, r16.w
        mov r23.y, r13.x
        mov r23.z, r3.x
        mov r16.w, l(0)
        mov r17.w, l(0)
        loop 
          ige r18.y, r17.w, l(8)
          breakc_nz r18.y
          dp2 r22.y, icb[r17.w + 0].yxyy, r23.xyxx
          dp2 r22.z, icb[r17.w + 0].yxyy, r23.yzyy
          mul r25.yz, r22.yyzy, cb9[r0.y + 3].yyyy
          mul r25.x, r22.x, r25.y
          mul r25.w, r21.x, r25.y
          mad r24.xyz, r21.yzwy, r15.wwww, r25.xzwx
          sample_c_lz_indexable(texturecubearray)(float,float,float,float) r18.y, r24.xyzw, t10.xxxx, s13, r12.w
          mad r16.w, r18.y, l(0.125000), r16.w
          iadd r17.w, r17.w, l(1)
        endloop 
      else 
        mov r16.w, l(1.000000)
      endif 
      mul r9.w, r9.w, r16.w
      lt r12.w, l(0.000000), r9.w
      if_nz r12.w
        mul r12.w, r2.w, cb9[r0.y + 1].z
        mul r12.w, r12.w, l(0.250000)
        dp3 r15.w, r15.xyzx, r14.xyzx
        dp3 r14.x, r14.xyzx, r20.xyzx
        mad r14.y, -r15.w, r15.w, cb9[r0.y + 6].y
        mad r7.w, r15.w, r14.x, -r7.w
        div_sat r7.w, r7.w, r14.y
        div r14.x, r14.y, cb9[r0.y + 6].y
        mul r14.x, r14.x, l(10.000000)
        min r14.x, r14.x, l(1.000000)
        add r7.w, -r8.w, r7.w
        mad r7.w, r14.x, r7.w, r8.w
        mad r13.yzw, r7.wwww, r15.xxyz, r13.yyzw
        movc r13.yzw, r6.wwww, r13.yyzw, cb9[r0.y + 0].xxyz
        add r13.yzw, -r5.xxyz, r13.yyzw
        dp3 r6.w, r13.yzwy, r13.yzwy
        rsq r6.w, r6.w
        mul r14.xyz, r6.wwww, r13.yzwy
        ubfe r7.w, l(4), l(16), cb9[r0.y + 1].w
        ult r8.w, l(0), r7.w
        and r8.w, r1.z, r8.w
        if_nz r8.w
          iadd r7.w, r7.w, cb2[0].x
          imad r7.w, r7.w, l(15), l(-15)
          mad r8.w, |r10.w|, l(-0.200000), l(0.400000)
          lt r15.x, r10.w, l(0.000000)
          and r15.x, r3.w, r15.x
          movc r8.w, r15.x, -r8.w, r8.w
          mad r15.xyz, r11.xyzx, r8.wwww, r5.xyzx
          mov r20.xyz, cb9[r7.w + 6].yzwy
          mov r20.w, cb9[r7.w + 7].x
          mov r15.w, l(1.000000)
          dp4 r8.w, r20.xyzw, r15.xyzw
          mov r20.xyz, cb9[r7.w + 7].yzwy
          mov r20.w, cb9[r7.w + 8].x
          dp4 r16.w, r20.xyzw, r15.xyzw
          lt r17.w, r16.w, r8.w
          if_z r17.w
            mov r20.xyz, cb9[r7.w + 4].yzwy
            mov r20.w, cb9[r7.w + 5].x
            dp4 r20.x, r20.xyzw, r15.xyzw
            mov r21.xyz, cb9[r7.w + 5].yzwy
            mov r21.w, cb9[r7.w + 6].x
            dp4 r20.y, r21.xyzw, r15.xyzw
            div r15.xy, r20.xyxx, r16.wwww
            mad r15.xy, r15.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
            add r20.x, r15.x, cb9[r7.w + 9].w
            add r20.y, r15.y, cb9[r7.w + 10].x
            mul r15.xy, r20.xyxx, cb9[r7.w + 9].yzyy
            div r15.zw, cb9[r7.w + 3].yyyy, cb9[r7.w + 8].yyyw
            add r20.xy, -r15.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
            ge r20.xy, r15.xyxx, r20.xyxx
            ge r15.zw, r15.zzzw, r15.xxxy
            or r15.zw, r15.zzzw, r20.xxxy
            or r15.z, r15.w, r15.z
            if_z r15.z
              mov_sat r15.xy, r15.xyxx
              mad r20.x, r15.x, cb9[r7.w + 8].y, cb9[r7.w + 8].z
              mad r20.y, r15.y, cb9[r7.w + 8].w, cb9[r7.w + 9].x
              mul r15.x, r16.w, cb9[r7.w + 10].z
              mad r8.w, cb9[r7.w + 10].y, r16.w, r8.w
              div r8.w, r8.w, r15.x
            endif 
          else 
            mov r15.z, l(-1)
          endif 
          or r15.x, r17.w, r15.z
          if_z r15.x
            max r8.w, r8.w, l(0.00006104)
            and r15.x, l(0x0000ffff), cb9[r7.w + 1].w
            if_nz cb2[58].y
              mov r21.x, -r3.x
              utof r22.z, r15.x
              mov r21.y, r13.x
              mov r21.z, r3.x
              mov r15.yz, l(0,0,0,0)
              loop 
                ige r15.w, r15.z, l(8)
                breakc_nz r15.w
                dp2 r23.x, icb[r15.z + 0].yxyy, r21.xyxx
                dp2 r23.y, icb[r15.z + 0].yxyy, r21.yzyy
                mad r22.xy, r23.xyxx, cb9[r7.w + 3].yyyy, r20.xyxx
                sample_c_lz_indexable(texture2darray)(float,float,float,float) r15.w, r22.xyzx, t9.xxxx, s13, r8.w
                mad r15.y, r15.w, l(0.125000), r15.y
                iadd r15.z, r15.z, l(1)
              endloop 
            else 
              utof r20.z, r15.x
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r15.y, r20.xyzx, t9.xxxx, s13, r8.w
            endif 
            mul r7.w, r15.y, r15.y
            mul r7.w, r15.y, r7.w
          else 
            mov r7.w, l(1.000000)
          endif 
          mul r9.w, r7.w, r9.w
        else 
          ubfe r7.w, l(4), l(20), cb9[r0.y + 1].w
          ult r8.w, l(0), r7.w
          not r15.x, r1.z
          and r8.w, r8.w, r15.x
          if_nz r8.w
            iadd r7.w, r7.w, cb2[0].x
            imad r7.w, r7.w, l(15), l(-15)
            mad r8.w, |r10.w|, l(-0.200000), l(0.400000)
            lt r15.x, r10.w, l(0.000000)
            and r15.x, r3.w, r15.x
            movc r8.w, r15.x, -r8.w, r8.w
            mad r15.xyz, r11.xyzx, r8.wwww, r5.xyzx
            mov r20.xyz, cb9[r7.w + 6].yzwy
            mov r20.w, cb9[r7.w + 7].x
            mov r15.w, l(1.000000)
            dp4 r8.w, r20.xyzw, r15.xyzw
            mov r20.xyz, cb9[r7.w + 7].yzwy
            mov r20.w, cb9[r7.w + 8].x
            dp4 r16.w, r20.xyzw, r15.xyzw
            lt r17.w, r16.w, r8.w
            if_z r17.w
              mov r20.xyz, cb9[r7.w + 4].yzwy
              mov r20.w, cb9[r7.w + 5].x
              dp4 r20.x, r20.xyzw, r15.xyzw
              mov r21.xyz, cb9[r7.w + 5].yzwy
              mov r21.w, cb9[r7.w + 6].x
              dp4 r20.y, r21.xyzw, r15.xyzw
              div r15.xy, r20.xyxx, r16.wwww
              mad r15.xy, r15.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
              add r20.x, r15.x, cb9[r7.w + 9].w
              add r20.y, r15.y, cb9[r7.w + 10].x
              mul r15.xy, r20.xyxx, cb9[r7.w + 9].yzyy
              div r15.zw, cb9[r7.w + 3].yyyy, cb9[r7.w + 8].yyyw
              add r20.xy, -r15.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
              ge r20.xy, r15.xyxx, r20.xyxx
              ge r15.zw, r15.zzzw, r15.xxxy
              or r15.zw, r15.zzzw, r20.xxxy
              or r15.z, r15.w, r15.z
              if_z r15.z
                mov_sat r15.xy, r15.xyxx
                mad r20.x, r15.x, cb9[r7.w + 8].y, cb9[r7.w + 8].z
                mad r20.y, r15.y, cb9[r7.w + 8].w, cb9[r7.w + 9].x
                mul r15.x, r16.w, cb9[r7.w + 10].z
                mad r8.w, cb9[r7.w + 10].y, r16.w, r8.w
                div r8.w, r8.w, r15.x
              endif 
            else 
              mov r15.z, l(-1)
            endif 
            or r15.x, r17.w, r15.z
            if_z r15.x
              max r8.w, r8.w, l(0.00006104)
              and r15.x, l(0x0000ffff), cb9[r7.w + 1].w
              if_nz cb2[58].y
                mov r21.x, -r3.x
                utof r22.z, r15.x
                mov r21.y, r13.x
                mov r21.z, r3.x
                mov r15.yz, l(0,0,0,0)
                loop 
                  ige r15.w, r15.z, l(8)
                  breakc_nz r15.w
                  dp2 r23.x, icb[r15.z + 0].yxyy, r21.xyxx
                  dp2 r23.y, icb[r15.z + 0].yxyy, r21.yzyy
                  mad r22.xy, r23.xyxx, cb9[r7.w + 3].yyyy, r20.xyxx
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r15.w, r22.xyzx, t9.xxxx, s13, r8.w
                  mad r15.y, r15.w, l(0.125000), r15.y
                  iadd r15.z, r15.z, l(1)
                endloop 
              else 
                utof r20.z, r15.x
                sample_c_lz_indexable(texture2darray)(float,float,float,float) r15.y, r20.xyzx, t9.xxxx, s13, r8.w
              endif 
              mul r7.w, r15.y, r15.y
              mul r7.w, r15.y, r7.w
            else 
              mov r7.w, l(1.000000)
            endif 
            mul r9.w, r7.w, r9.w
          endif 
        endif 
        mad r7.w, -r2.x, l(0.500000), l(1.000000)
        mad r7.w, -r11.w, r7.w, l(1.000000)
        mul r7.w, r7.w, r7.w
        mad r7.w, -r7.w, l(0.620000), l(0.620000)
        add r7.w, -r11.w, r7.w
        mad r7.w, r3.y, r7.w, r11.w
        mul r7.w, r9.w, r7.w
        mov r15.x, cb9[r0.y + 0].w
        mov r15.yz, cb9[r0.y + 1].xxyx
        lt r8.w, l(0.000000), r10.w
        mad r20.xyz, r7.wwww, r15.xyzx, r16.xyzx
        dp3_sat r10.w, r11.xyzx, r14.xyzx
        mad r13.yzw, r13.yyzw, r6.wwww, r12.xxyz
        dp3 r6.w, r13.yzwy, r13.yzwy
        rsq r6.w, r6.w
        mul r13.yzw, r6.wwww, r13.yyzw
        dp3 r6.w, r13.yzwy, r12.xyzx
        dp3 r11.w, r11.xyzx, r13.yzwy
        mad r13.y, |r11.w|, r2.w, -|r11.w|
        mad r11.w, |r11.w|, r13.y, l(1.000000)
        mad r13.y, r10.w, r1.w, r2.y
        mul r11.w, r11.w, r11.w
        mul r11.w, r13.y, r11.w
        rcp r11.w, r11.w
        mul r10.w, r12.w, r10.w
        mul r10.w, r10.w, r11.w
        mul r10.w, r9.w, r10.w
        mad r13.yzw, r10.wwww, r15.xxyz, r19.xxyz
        add_sat r6.w, -r6.w, l(1.000000)
        mul r11.w, r6.w, r6.w
        mul r11.w, r11.w, r11.w
        mul r6.w, r6.w, r11.w
        mul r6.w, r6.w, r10.w
        mad r14.xyz, r6.wwww, r15.xyzx, r18.xzwx
        mad r15.xyz, r7.wwww, r15.xyzx, r17.zxyz
        movc r15.xyz, r3.wwww, r15.xyzx, r17.zxyz
        movc r16.xyz, r8.wwww, r20.xyzx, r16.xyzx
        movc r17.xyz, r8.wwww, r17.xyzx, r15.yzxy
        movc r18.xzw, r8.wwww, r14.xxyz, r18.xxzw
        movc r19.xyz, r8.wwww, r13.yzwy, r19.xyzx
        if_nz r3.z
          ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r6.w, cb2[52].x, l(136), u2.xxxx
          or r6.w, r6.w, l(8)
          store_structured u2.x, cb2[52].x, l(136), r6.w
          store_structured u2.x, cb2[52].x, l(156), r9.w
        endif 
        iadd r2.z, r2.z, l(0x00010101)
      else 
        mov r2.z, r14.w
      endif 
    else 
      mov r2.z, r4.z
    endif 
  else 
    mov r2.z, r4.z
  endif 
  break 
  case l(2)
  if_nz r3.z
    add r14.yzw, cb1[24].xxyz, cb9[r0.y + 0].xxyz
    mov r14.x, l(2)
    store_structured u2.xyzw, cb2[52].x, l(136), r14.xyzw
  endif 
  iadd r4.z, r2.z, l(1)
  add r14.xy, -r5.xyxx, cb9[r0.y + 3].zwzz
  add r14.z, -r5.z, cb9[r0.y + 4].x
  dp3 r6.w, r14.xyzx, r14.xyzx
  rsq r6.w, r6.w
  mul r13.yzw, r6.wwww, r14.xxyz
  dp3 r7.w, r11.xyzx, r13.yzwy
  mov_sat r8.w, r7.w
  movc r9.w, r3.w, |r7.w|, r8.w
  lt r10.w, l(0.000000), r9.w
  if_nz r10.w
    mov r15.xyz, cb9[r0.y + 7].yzwy
    mov r15.w, cb9[r0.y + 8].x
    mov r5.w, l(1.000000)
    dp4 r10.w, r15.xyzw, r5.xyzw
    lt r11.w, r10.w, l(1.000000)
    if_nz r11.w
      mov r13.yzw, l(0,1.000000,1.000000,1.000000)
      mov r11.w, l(0)
    else 
      add r20.xyz, -r5.xyzx, cb9[r0.y + 0].xyzx
      mul r12.w, cb9[r0.y + 3].x, cb9[r0.y + 3].x
      dp3 r14.w, r20.xyzx, r20.xyzx
      div r12.w, r12.w, r14.w
      min r12.w, r12.w, l(1.000000)
      mad_sat r20.xy, r10.wwww, cb9[r0.y + 2].xzxx, cb9[r0.y + 2].ywyy
      mul r20.zw, r20.xxxy, r20.xxxy
      mad r20.xy, r20.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
      mul r20.xy, r20.xyxx, r20.zwzz
      mul r12.w, r12.w, r20.x
      mul r12.w, r20.y, r12.w
      mov r20.xyz, cb9[r0.y + 4].yzwy
      mov r20.w, cb9[r0.y + 5].x
      dp4 r20.x, r20.xyzw, r5.xyzw
      mov r21.xyz, cb9[r0.y + 5].yzwy
      mov r21.w, cb9[r0.y + 6].x
      dp4 r20.y, r21.xyzw, r5.xyzw
      div r20.xy, r20.xyxx, r10.wwww
      lt r5.w, cb9[r0.y + 10].w, l(0.00048828)
      if_nz r5.w
        mad_sat r21.xy, |r20.xyxx|, cb9[r0.y + 12].xyxx, cb9[r0.y + 12].zwzz
        mul r21.zw, r21.xxxy, r21.xxxy
        mad r21.xy, r21.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
        mul r21.xy, r21.xyxx, r21.zwzz
        mul r5.w, r21.y, r21.x
      else 
        mul_sat r21.xyzw, |r20.yyxx|, cb9[r0.y + 11].xyzw
        log r21.xyzw, r21.xyzw
        mul r21.xyzw, r21.xyzw, cb9[r0.y + 12].zzzz
        exp r21.xyzw, r21.xyzw
        add r21.xy, r21.zwzz, r21.xyxx
        log r21.xy, r21.xyxx
        mul r21.xy, r21.xyxx, cb9[r0.y + 12].wwww
        exp r21.xy, r21.xyxx
        mul r10.w, r21.x, cb9[r0.y + 12].x
        mad r14.w, cb9[r0.y + 12].y, r21.y, l(-1.000000)
        mad r10.w, cb9[r0.y + 12].y, r21.y, -r10.w
        div_sat r10.w, r14.w, r10.w
        mul r14.w, r10.w, r10.w
        mad r10.w, r10.w, l(-2.000000), l(3.000000)
        mul r5.w, r10.w, r14.w
      endif 
      mul r11.w, r5.w, r12.w
      and r5.w, l(255), cb9[r0.y + 14].w
      if_nz r5.w
        mov r20.z, l(1.000000)
        dp3 r10.w, cb9[r0.y + 13].xyzx, r20.xyzx
        mov r21.x, cb9[r0.y + 13].w
        mov r21.yz, cb9[r0.y + 14].xxyx
        dp3 r12.w, r21.xyzx, r20.xyzx
        frc r20.x, r10.w
        frc r20.y, r12.w
        iadd r5.w, r5.w, l(-1)
        utof r20.z, r5.w
        sample_l_indexable(texture2darray)(float,float,float,float) r13.yzw, r20.xyzx, t20.wxyz, s2, l(0.000000)
      else 
        mov r13.yzw, l(0,1.000000,1.000000,1.000000)
      endif 
    endif 
    mov r20.x, cb9[r0.y + 0].w
    mov r20.yz, cb9[r0.y + 1].xxyx
    mul r13.yzw, r13.yyzw, r20.xxyz
    lt r5.w, l(0.000000), r11.w
    if_nz r5.w
      ubfe r5.w, l(3), l(27), cb9[r0.y + 1].w
      if_nz r3.z
        ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r10.w, cb2[52].x, l(136), u2.xxxx
        or r10.w, r10.w, l(4)
        store_structured u2.x, cb2[52].x, l(136), r10.w
        store_structured u2.x, cb2[52].x, l(152), r11.w
      endif 
      iadd r10.w, r2.z, l(257)
      ine r5.w, r5.w, l(1)
      if_nz r5.w
        mad r5.w, |r7.w|, l(-0.200000), l(0.400000)
        lt r12.w, r7.w, l(0.000000)
        and r12.w, r3.w, r12.w
        movc r5.w, r12.w, -r5.w, r5.w
        mad r20.xyz, r11.xyzx, r5.wwww, r5.xyzx
        mov r21.xyz, cb9[r0.y + 6].yzwy
        mov r21.w, cb9[r0.y + 7].x
        mov r20.w, l(1.000000)
        dp4 r5.w, r21.xyzw, r20.xyzw
        dp4 r12.w, r15.xyzw, r20.xyzw
        ge r14.w, r12.w, r5.w
        if_nz r14.w
          mov r15.xyz, cb9[r0.y + 4].yzwy
          mov r15.w, cb9[r0.y + 5].x
          dp4 r15.x, r15.xyzw, r20.xyzw
          mov r21.xyz, cb9[r0.y + 5].yzwy
          mov r21.w, cb9[r0.y + 6].x
          dp4 r15.y, r21.xyzw, r20.xyzw
          div r15.xy, r15.xyxx, r12.wwww
          mad_sat r15.xy, r15.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
          mad r20.x, r15.x, cb9[r0.y + 8].y, cb9[r0.y + 8].z
          mad r20.y, r15.y, cb9[r0.y + 8].w, cb9[r0.y + 9].x
          div r5.w, r5.w, r12.w
          max r5.w, r5.w, l(0.00006104)
          and r12.w, l(0x0000ffff), cb9[r0.y + 1].w
          if_nz cb2[58].y
            mov r15.x, -r3.x
            utof r21.z, r12.w
            mov r15.y, r13.x
            mov r15.z, r3.x
            mov r14.w, l(0)
            mov r15.w, l(0)
            loop 
              ige r16.w, r15.w, l(8)
              breakc_nz r16.w
              dp2 r22.x, icb[r15.w + 0].yxyy, r15.xyxx
              dp2 r22.y, icb[r15.w + 0].yxyy, r15.yzyy
              mad r21.xy, r22.xyxx, cb9[r0.y + 3].yyyy, r20.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r16.w, r21.xyzx, t9.xxxx, s13, r5.w
              mad r14.w, r16.w, l(0.125000), r14.w
              iadd r15.w, r15.w, l(1)
            endloop 
          else 
            utof r20.z, r12.w
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r14.w, r20.xyzx, t9.xxxx, s13, r5.w
          endif 
          mul r5.w, r14.w, r14.w
          mul r5.w, r14.w, r5.w
        else 
          mov r5.w, l(1.000000)
        endif 
      else 
        mov r5.w, l(1.000000)
      endif 
      mul r5.w, r5.w, r11.w
      lt r11.w, l(0.000000), r5.w
      if_nz r11.w
        mul r11.w, r2.w, cb9[r0.y + 1].z
        mul r11.w, r8.w, r11.w
        ubfe r12.w, l(4), l(16), cb9[r0.y + 1].w
        ult r14.w, l(0), r12.w
        and r14.w, r1.z, r14.w
        if_nz r14.w
          iadd r12.w, r12.w, cb2[0].x
          imad r12.w, r12.w, l(15), l(-15)
          mad r14.w, |r7.w|, l(-0.200000), l(0.400000)
          lt r15.x, r7.w, l(0.000000)
          and r15.x, r3.w, r15.x
          movc r14.w, r15.x, -r14.w, r14.w
          mad r15.xyz, r11.xyzx, r14.wwww, r5.xyzx
          mov r20.xyz, cb9[r12.w + 6].yzwy
          mov r20.w, cb9[r12.w + 7].x
          mov r15.w, l(1.000000)
          dp4 r14.w, r20.xyzw, r15.xyzw
          mov r20.xyz, cb9[r12.w + 7].yzwy
          mov r20.w, cb9[r12.w + 8].x
          dp4 r16.w, r20.xyzw, r15.xyzw
          lt r17.w, r16.w, r14.w
          if_z r17.w
            mov r20.xyz, cb9[r12.w + 4].yzwy
            mov r20.w, cb9[r12.w + 5].x
            dp4 r20.x, r20.xyzw, r15.xyzw
            mov r21.xyz, cb9[r12.w + 5].yzwy
            mov r21.w, cb9[r12.w + 6].x
            dp4 r20.y, r21.xyzw, r15.xyzw
            div r15.xy, r20.xyxx, r16.wwww
            mad r15.xy, r15.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
            add r20.x, r15.x, cb9[r12.w + 9].w
            add r20.y, r15.y, cb9[r12.w + 10].x
            mul r15.xy, r20.xyxx, cb9[r12.w + 9].yzyy
            div r15.zw, cb9[r12.w + 3].yyyy, cb9[r12.w + 8].yyyw
            add r20.xy, -r15.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
            ge r20.xy, r15.xyxx, r20.xyxx
            ge r15.zw, r15.zzzw, r15.xxxy
            or r15.zw, r15.zzzw, r20.xxxy
            or r15.z, r15.w, r15.z
            if_z r15.z
              mov_sat r15.xy, r15.xyxx
              mad r20.x, r15.x, cb9[r12.w + 8].y, cb9[r12.w + 8].z
              mad r20.y, r15.y, cb9[r12.w + 8].w, cb9[r12.w + 9].x
              mul r15.x, r16.w, cb9[r12.w + 10].z
              mad r14.w, cb9[r12.w + 10].y, r16.w, r14.w
              div r14.w, r14.w, r15.x
            endif 
          else 
            mov r15.z, l(-1)
          endif 
          or r15.x, r17.w, r15.z
          if_z r15.x
            max r14.w, r14.w, l(0.00006104)
            and r15.x, l(0x0000ffff), cb9[r12.w + 1].w
            if_nz cb2[58].y
              mov r21.x, -r3.x
              utof r22.z, r15.x
              mov r21.y, r13.x
              mov r21.z, r3.x
              mov r15.yz, l(0,0,0,0)
              loop 
                ige r15.w, r15.z, l(8)
                breakc_nz r15.w
                dp2 r23.x, icb[r15.z + 0].yxyy, r21.xyxx
                dp2 r23.y, icb[r15.z + 0].yxyy, r21.yzyy
                mad r22.xy, r23.xyxx, cb9[r12.w + 3].yyyy, r20.xyxx
                sample_c_lz_indexable(texture2darray)(float,float,float,float) r15.w, r22.xyzx, t9.xxxx, s13, r14.w
                mad r15.y, r15.w, l(0.125000), r15.y
                iadd r15.z, r15.z, l(1)
              endloop 
            else 
              utof r20.z, r15.x
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r15.y, r20.xyzx, t9.xxxx, s13, r14.w
            endif 
            mul r12.w, r15.y, r15.y
            mul r12.w, r15.y, r12.w
          else 
            mov r12.w, l(1.000000)
          endif 
          mul r5.w, r5.w, r12.w
        else 
          ubfe r0.y, l(4), l(20), cb9[r0.y + 1].w
          ult r12.w, l(0), r0.y
          not r1.z, r1.z
          and r1.z, r1.z, r12.w
          if_nz r1.z
            iadd r0.y, r0.y, cb2[0].x
            imad r0.y, r0.y, l(15), l(-15)
            mad r1.z, |r7.w|, l(-0.200000), l(0.400000)
            lt r12.w, r7.w, l(0.000000)
            and r12.w, r3.w, r12.w
            movc r1.z, r12.w, -r1.z, r1.z
            mad r15.xyz, r11.xyzx, r1.zzzz, r5.xyzx
            mov r20.xyz, cb9[r0.y + 6].yzwy
            mov r20.w, cb9[r0.y + 7].x
            mov r15.w, l(1.000000)
            dp4 r1.z, r20.xyzw, r15.xyzw
            mov r20.xyz, cb9[r0.y + 7].yzwy
            mov r20.w, cb9[r0.y + 8].x
            dp4 r12.w, r20.xyzw, r15.xyzw
            lt r14.w, r12.w, r1.z
            if_z r14.w
              mov r20.xyz, cb9[r0.y + 4].yzwy
              mov r20.w, cb9[r0.y + 5].x
              dp4 r20.x, r20.xyzw, r15.xyzw
              mov r21.xyz, cb9[r0.y + 5].yzwy
              mov r21.w, cb9[r0.y + 6].x
              dp4 r20.y, r21.xyzw, r15.xyzw
              div r15.xy, r20.xyxx, r12.wwww
              mad r15.xy, r15.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
              add r20.x, r15.x, cb9[r0.y + 9].w
              add r20.y, r15.y, cb9[r0.y + 10].x
              mul r15.xy, r20.xyxx, cb9[r0.y + 9].yzyy
              div r15.zw, cb9[r0.y + 3].yyyy, cb9[r0.y + 8].yyyw
              add r20.xy, -r15.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
              ge r20.xy, r15.xyxx, r20.xyxx
              ge r15.zw, r15.zzzw, r15.xxxy
              or r15.zw, r15.zzzw, r20.xxxy
              or r15.z, r15.w, r15.z
              if_z r15.z
                mov_sat r15.xy, r15.xyxx
                mad r20.x, r15.x, cb9[r0.y + 8].y, cb9[r0.y + 8].z
                mad r20.y, r15.y, cb9[r0.y + 8].w, cb9[r0.y + 9].x
                mul r15.x, r12.w, cb9[r0.y + 10].z
                mad r1.z, cb9[r0.y + 10].y, r12.w, r1.z
                div r1.z, r1.z, r15.x
              endif 
            else 
              mov r15.z, l(-1)
            endif 
            or r12.w, r14.w, r15.z
            if_z r12.w
              max r1.z, r1.z, l(0.00006104)
              and r12.w, l(0x0000ffff), cb9[r0.y + 1].w
              if_nz cb2[58].y
                mov r15.x, -r3.x
                utof r21.z, r12.w
                mov r15.y, r13.x
                mov r15.z, r3.x
                mov r3.x, l(0)
                mov r13.x, l(0)
                loop 
                  ige r14.w, r13.x, l(8)
                  breakc_nz r14.w
                  dp2 r22.x, icb[r13.x + 0].yxyy, r15.xyxx
                  dp2 r22.y, icb[r13.x + 0].yxyy, r15.yzyy
                  mad r21.xy, r22.xyxx, cb9[r0.y + 3].yyyy, r20.xyxx
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r14.w, r21.xyzx, t9.xxxx, s13, r1.z
                  mad r3.x, r14.w, l(0.125000), r3.x
                  iadd r13.x, r13.x, l(1)
                endloop 
              else 
                utof r20.z, r12.w
                sample_c_lz_indexable(texture2darray)(float,float,float,float) r3.x, r20.xyzx, t9.xxxx, s13, r1.z
              endif 
              mul r0.y, r3.x, r3.x
              mul r0.y, r3.x, r0.y
            else 
              mov r0.y, l(1.000000)
            endif 
            mul r5.w, r0.y, r5.w
          endif 
        endif 
        mad r0.y, -r2.x, l(0.500000), l(1.000000)
        mad r0.y, -r9.w, r0.y, l(1.000000)
        mul r0.y, r0.y, r0.y
        mad r0.y, -r0.y, l(0.620000), l(0.620000)
        add r0.y, -r9.w, r0.y
        mad r0.y, r3.y, r0.y, r9.w
        mul r0.y, r5.w, r0.y
        lt r1.z, l(0.000000), r7.w
        mad r15.xyz, r0.yyyy, r13.yzwy, r16.xyzx
        mad r14.xyz, r14.xyzx, r6.wwww, r12.xyzx
        dp3 r2.x, r14.xyzx, r14.xyzx
        rsq r2.x, r2.x
        mul r14.xyz, r2.xxxx, r14.xyzx
        dp3 r2.x, r14.xyzx, r12.xyzx
        dp3 r3.x, r11.xyzx, r14.xyzx
        mad r2.w, |r3.x|, r2.w, -|r3.x|
        mad r2.w, |r3.x|, r2.w, l(1.000000)
        mad r1.w, r8.w, r1.w, r2.y
        mul r2.y, r2.w, r2.w
        mul r1.w, r1.w, r2.y
        rcp r1.w, r1.w
        mul r1.w, r11.w, r1.w
        mul r1.w, r1.w, r5.w
        mul r1.w, r1.w, l(0.250000)
        mad r11.xyz, r1.wwww, r13.yzwy, r19.xyzx
        add_sat r2.x, -r2.x, l(1.000000)
        mul r2.y, r2.x, r2.x
        mul r2.y, r2.y, r2.y
        mul r2.x, r2.y, r2.x
        mul r1.w, r1.w, r2.x
        mad r2.xyw, r1.wwww, r13.yzyw, r18.xzxw
        mad r12.xyz, r0.yyyy, r13.yzwy, r17.zxyz
        movc r12.xyz, r3.wwww, r12.xyzx, r17.zxyz
        movc r16.xyz, r1.zzzz, r15.xyzx, r16.xyzx
        movc r17.xyz, r1.zzzz, r17.xyzx, r12.yzxy
        movc r18.xzw, r1.zzzz, r2.xxyw, r18.xxzw
        movc r19.xyz, r1.zzzz, r11.xyzx, r19.xyzx
        if_nz r3.z
          ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r0.y, cb2[52].x, l(136), u2.xxxx
          or r0.y, r0.y, l(8)
          store_structured u2.x, cb2[52].x, l(136), r0.y
          store_structured u2.x, cb2[52].x, l(156), r5.w
        endif 
        iadd r2.z, r2.z, l(0x00010101)
      else 
        mov r2.z, r10.w
      endif 
    else 
      mov r2.z, r4.z
    endif 
  else 
    mov r2.z, r4.z
  endif 
  break 
  default 
  break 
endswitch 
mad r4.xyz, r4.xwyx, l(1.000000, 3.000000, 2.000000, 0.000000), l(0.000000, 0.500000, -1.000000, 0.000000)
ftou r0.y, r4.y
mad r2.xyw, r7.zxzy, l(3.000000, 1.000000, 0.000000, 2.000000), l(0.500000, 0.000000, 0.000000, -1.000000)
ftou r1.z, r2.x
ieq r1.z, r0.y, r1.z
movc r1.zw, r1.zzzz, r2.yyyw, l(0,0,-1.000000,0)
mad r2.xyw, r8.zxzy, l(3.000000, 1.000000, 0.000000, 2.000000), l(0.500000, 0.000000, 0.000000, -1.000000)
ftou r2.x, r2.x
ieq r2.x, r0.y, r2.x
movc r2.xy, r2.xxxx, r2.ywyy, l(-1.000000,0,0,0)
mad r7.xyz, r9.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r2.w, r7.x
ieq r2.w, r0.y, r2.w
movc r3.xy, r2.wwww, r7.yzyy, l(-1.000000,0,0,0)
mad r7.xyz, r10.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r2.w, r7.x
ieq r0.y, r0.y, r2.w
movc r7.xy, r0.yyyy, r7.yzyy, l(-1.000000,0,0,0)
mov r8.x, r1.z
mov r8.y, r2.x
mov r8.z, r3.x
mov r8.w, r7.x
add r8.xyzw, -r4.xxxx, r8.xyzw
ge r8.xyzw, |r8.xyzw|, l(0.00902149, 0.00902149, 0.00902149, 0.00902149)
movc r8.xyzw, r8.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
add r0.y, r8.y, r8.x
add r0.y, r8.z, r0.y
add r0.y, r8.w, r0.y
mul r1.z, r2.y, r8.y
mad r1.z, r8.x, r1.w, r1.z
mad r1.z, r8.z, r3.y, r1.z
mad r1.z, r8.w, r7.y, r1.z
div r4.w, r1.z, r0.y
ge r0.y, l(0.000000), r0.y
movc r4.yz, r0.yyyy, l(0,0,0,0), r4.zzwz
and r1.zw, r1.xxxy, l(0, 0, 1, 1)
ieq r0.y, r1.w, r1.z
movc r2.xyw, r0.yyyy, r4.xyxz, r4.xzxy
mad r0.y, -r2.w, l(0.500000), r2.x
add r4.y, r0.y, r2.w
mad r4.z, -r2.y, l(0.500000), r0.y
add r4.x, r2.y, r4.z
mul r2.xyw, r6.xyxz, r16.xyxz
mad r2.xyw, r17.zxzy, r4.xyxz, r2.xyxw
mul r7.xyz, r18.xzwx, l(0.960000, 0.960000, 0.960000, 0.000000)
mad r7.xyz, r19.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000), r7.xyzx
add r2.xyw, r2.xyxw, r7.xyxz
add r7.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r7.xyz, r7.xyzx, r18.xzwx
mad r4.xyz, r19.xyzx, r4.xyzx, r7.xyzx
mad r4.xyz, r16.xyzx, r6.xyzx, r4.xyzx
movc r2.xyw, r3.wwww, r2.xyxw, r4.xyxz
lt r0.y, l(0.000000), cb2[9].z
if_nz r0.y
  dp3 r0.y, r5.xyzx, r5.xyzx
  rsq r1.z, r0.y
  mul r3.xyw, r1.zzzz, r5.xyxz
  sqrt r0.y, r0.y
  lt r1.z, l(0.000000), cb2[13].w
  if_nz r1.z
    mad r1.zw, r0.yyyy, cb2[15].xxxy, cb2[14].zzzw
    mul r1.zw, r1.zzzw, cb2[16].xxxy
    lt r4.x, l(0.010000), |r5.z|
    mul r4.yz, r5.zzzz, cb2[15].zzwz
    mul r6.xy, r4.yzyy, l(-1.442695, -1.442695, 0.000000, 0.000000)
    exp r6.xy, r6.xyxx
    add r6.xy, -r6.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    div r4.yz, r6.xxyx, r4.yyzy
    mul r4.yz, r1.zzwz, r4.yyzy
    movc r1.zw, r4.xxxx, r4.yyyz, r1.zzzw
    mul r4.xyz, r1.zzzz, cb2[12].xyzx
    exp r4.xyz, r4.xyzx
    mul r6.xyz, r1.wwww, cb2[12].xyzx
    exp r6.xyz, r6.xyzx
    add r6.xyz, -r4.xyzx, r6.xyzx
    mad r4.xyz, cb2[13].wwww, r6.xyzx, r4.xyzx
  else 
    mad r1.z, r0.y, cb2[15].x, cb2[14].z
    mul r1.z, r1.z, cb2[16].x
    lt r1.w, l(0.010000), |r5.z|
    mul r4.w, r5.z, cb2[15].z
    mul r5.w, r4.w, l(-1.442695)
    exp r5.w, r5.w
    add r5.w, -r5.w, l(1.000000)
    div r4.w, r5.w, r4.w
    mul r4.w, r1.z, r4.w
    movc r1.z, r1.w, r4.w, r1.z
    mul r6.xyz, r1.zzzz, cb2[12].xyzx
    exp r4.xyz, r6.xyzx
  endif 
  mad r4.xyz, r4.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r4.xyz, r4.xyzx, -cb2[9].zzzz
  dp3 r1.z, cb2[7].yzwy, -r3.xywx
  mad r1.w, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r3.x, cb2[8].w, -r1.z, l(1.000000)
  mul r3.x, r3.x, r3.x
  mul r3.x, r3.x, l(12.566371)
  div r1.w, r1.w, r3.x
  add r0.y, r0.y, -cb2[10].w
  mul_sat r0.y, r0.y, cb2[11].w
  mul r0.y, r0.y, r1.w
  mov_sat r1.z, r1.z
  mad r1.z, r1.z, r1.z, l(1.000000)
  mad r1.z, r1.z, l(0.05968310), l(-1.000000)
  mad r1.z, cb2[8].z, r1.z, l(1.000000)
  mul r3.xyw, r0.yyyy, cb2[11].xyxz
  mad r3.xyw, r1.zzzz, cb2[10].xyxz, r3.xyxw
  mul r3.xyw, r3.xyxw, cb2[9].wwww
  add r6.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r3.xyw, r3.xyxw, r6.xyxz
  mad r3.xyw, r2.xyxw, r4.xyxz, r3.xyxw
else 
  mul r0.y, r5.z, cb2[6].x
  mad r1.z, cb2[6].x, r5.z, cb2[5].x
  lt r1.w, |r0.y|, l(0.000100)
  min r4.x, r1.z, l(64.000000)
  mul r4.x, r4.x, l(1.442695)
  exp r4.x, r4.x
  mov_sat r4.y, cb2[6].z
  lt r4.z, r1.z, l(0.000000)
  add r1.z, r1.z, l(1.000000)
  movc r1.z, r4.z, r4.x, r1.z
  add r1.z, r1.z, -cb2[6].z
  movc r0.y, r1.w, l(1.000000), r0.y
  div r0.y, r1.z, r0.y
  movc r0.y, r1.w, r4.y, r0.y
  mul r0.y, r0.y, cb2[5].z
  dp3 r1.z, r5.xyzx, r5.xyzx
  sqrt r1.w, r1.z
  mad r0.y, r0.y, r1.w, cb2[5].w
  exp r0.y, r0.y
  min r0.y, r0.y, l(1.000000)
  add r0.y, -r0.y, l(1.000000)
  rsq r1.z, r1.z
  mul r4.xyz, r1.zzzz, r5.xyzx
  dp3 r1.z, cb2[7].yzwy, r4.xyzx
  mad_sat r1.z, cb2[8].y, r1.z, cb2[8].x
  add r4.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r4.xyzw, r1.zzzz, r4.xyzw, cb2[4].xyzw
  mul r0.y, r0.y, r4.w
  add r4.xyz, -r2.xywx, r4.xyzx
  mad r3.xyw, r0.yyyy, r4.xyxz, r2.xyxw
endif 
mul r2.xyw, r3.xyxw, cb1[85].yyyy
ge r3.xyw, r2.xyxw, l(0.00006104, 0.00006104, 0.000000, 0.00006104)
and r2.xyw, r2.xyxw, r3.xyxw
min r2.xyw, r2.xyxw, l(65024.000000, 65024.000000, 0.000000, 64512.000000)
ilt r0.y, l(0), cb2[55].w
and r4.xyzw, cb2[55].wwww, l(32, 3, 64, 12)
ine r1.zw, r4.xxxz, l(0, 0, 0, 0)
ieq r3.xy, r4.ywyy, l(2, 8, 0, 0)
and r1.zw, r1.zzzw, r3.xxxy
and r4.xy, r1.zwzz, l(0x3e4ccccd, 0x3e4ccccd, 0, 0)
and r1.z, cb2[55].w, l(16)
ine r1.w, r1.z, l(0)
ieq r1.z, r1.z, l(0)
and r1.z, r1.z, r1.w
and r4.z, r1.z, l(0x3e4ccccd)
mad r3.xyw, r4.xyxz, cb1[85].xxxx, -r2.xyxw
mad r3.xyw, r3.xyxw, l(0.500000, 0.500000, 0.000000, 0.500000), r2.xyxw
movc r2.xyw, r0.yyyy, r3.xyxw, r2.xyxw
if_nz cb2[52].y
  if_nz cb2[53].y
    switch cb2[53].y
      case l(1)
      and r0.y, r2.z, l(3)
      break 
      case l(2)
      ubfe r0.y, l(2), l(8), r2.z
      break 
      case l(3)
      ushr r0.y, r2.z, l(16)
      break 
      case l(4)
      and r0.y, r0.x, l(3)
      break 
      case l(5)
      ushr r0.y, r0.x, l(8)
      break 
      default 
      mov r0.y, l(0)
      break 
    endswitch 
    utof r0.y, r0.y
    mul r0.y, r0.y, cb2[53].z
    mad r3.xyw, r0.yyyy, l(0.500000, 0.500000, 0.000000, 0.500000), -r2.xyxw
    mad r2.xyw, cb2[53].wwww, r3.xyxw, r2.xyxw
  endif 
endif 
store_uav_typed u0.xyzw, r1.xyyy, r2.xywx
if_nz r3.z
  add r1.xyz, r5.xyzx, cb1[24].xyzx
  and r1.w, r2.z, l(3)
  store_structured u2.xyzw, cb2[52].x, l(92), r1.xyzw
  and r0.y, r0.x, l(3)
  store_structured u2.x, cb2[52].x, l(108), r0.y
endif 
if_nz cb2[52].y
  and r0.y, r2.z, l(3)
  atomic_iadd g1, l(0), r0.y
  ubfe r1.x, l(2), l(8), r2.z
  atomic_iadd g1, l(4), r1.x
  ushr r1.y, r2.z, l(16)
  atomic_iadd g1, l(8), r1.y
  and r1.z, r0.x, l(3)
  atomic_iadd g1, l(12), r1.z
  ushr r0.x, r0.x, l(8)
  atomic_iadd g1, l(16), r0.x
  atomic_umax g2, l(0), r0.y
  atomic_umax g2, l(4), r1.x
  atomic_umax g2, l(8), r1.y
  atomic_umax g2, l(12), r1.z
  atomic_umax g2, l(16), r0.x
  imm_atomic_iadd r1.x, g0, l(0), l(1)
  ieq r0.x, r1.x, l(63)
  if_nz r0.x
    ld_raw r1.xyzw, l(0), g1.xyzw
    mov r2.xz, cb2[52].xxxx
    mov r2.yw, l(0,40,0,44)
    atomic_iadd u2, r2.xyxx, r1.x
    atomic_iadd u2, r2.zwzz, r1.y
    mov r2.xz, cb2[52].xxxx
    mov r2.yw, l(0,48,0,52)
    atomic_iadd u2, r2.xyxx, r1.z
    atomic_iadd u2, r2.zwzz, r1.w
    ld_raw r0.x, l(16), g1.xxxx
    mov r1.xz, cb2[52].xxxx
    mov r1.yw, l(0,56,0,0)
    atomic_iadd u2, r1.xyxx, r0.x
    ld_raw r2.xyzw, l(0), g2.xyzw
    atomic_umax u2, r1.zwzz, r2.x
    mov r1.xz, cb2[52].xxxx
    mov r1.yw, l(0,4,0,8)
    atomic_umax u2, r1.xyxx, r2.y
    atomic_umax u2, r1.zwzz, r2.z
    mov r1.xz, cb2[52].xxxx
    mov r1.yw, l(0,12,0,16)
    atomic_umax u2, r1.xyxx, r2.w
    ld_raw r0.x, l(16), g2.xxxx
    atomic_umax u2, r1.zwzz, r0.x
    ieq r0.yz, r0.zzwz, cb2[52].zzwz
    and r0.y, r0.z, r0.y
    if_nz r0.y
      store_structured u2.xyzw, cb2[52].x, l(20), r2.xyzw
      store_structured u2.x, cb2[52].x, l(36), r0.x
    endif 
  endif 
endif 
ret 
// Approximately 2521 instruction slots used
