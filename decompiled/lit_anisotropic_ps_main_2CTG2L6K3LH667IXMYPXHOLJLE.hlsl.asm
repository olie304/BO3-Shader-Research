//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:32:01 2021
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float3 colorTint;                  // Offset:  160 Size:    12
//   float3 specColorTint;              // Offset:  176 Size:    12
//   float baseNormalHeight;            // Offset:  188 Size:     4
//   float2 glossRange;                 // Offset:  192 Size:     8
//   float anisotropy;                  // Offset:  200 Size:     4
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16 [unused]
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4 [unused]
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4 [unused]
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// colorSampler                      sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// specColorSampler                  sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// normalSampler                     sampler      NA          NA             s5      1 
// aoSampler                         sampler      NA          NA             s6      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// colorMap                          texture  float4          2d             t0      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// specColorMap                      texture  float4          2d            t21      1 
// normalMap                         texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// glossMap                          texture  float4          2d            t24      1 
// aoMap                             texture  float4          2d            t25      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyz 
// COLOR                    1   x           1     NONE   float   x   
// TEXCOORD                 0    yz         1     NONE   float    yz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// OFFPOSITION              0   xyz         5     NONE   float   xyz 
// SV_IsFrontFace           0   x           6    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[13], immediateIndexed
dcl_constantbuffer CB1[86], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2darray (float,float,float,float) t31
dcl_input_ps_siv linear noperspective v0.xyz, position
dcl_input_ps linear v1.x
dcl_input_ps linear v1.yz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps_sgv constant v6.x, is_front_face
dcl_output o0.xyzw
dcl_temps 41
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.yzyy, t0.xyzw, s1
add r1.xyz, cb0[10].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r1.xyz, r0.wwww, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r0.xyz, r0.xyzx, r1.xyzx
mul o0.w, r0.w, v1.x
sample_indexable(texture2d)(float,float,float,float) r0.w, v1.yzyy, t21.yzwx, s3
add r1.xyz, cb0[11].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r1.xyz, r0.wwww, r1.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
add_sat r0.w, -r0.w, l(1.000000)
mul r0.xyz, r0.wwww, r0.xyzx
sample_indexable(texture2d)(float,float,float,float) r0.w, v1.yzyy, t25.yzwx, s6
sample_indexable(texture2d)(float,float,float,float) r1.w, v1.yzyy, t24.yzwx, s3
add r2.x, -cb0[12].x, cb0[12].y
mul r2.y, r1.w, r2.x
mad r1.w, r1.w, r2.x, cb0[12].x
mul_sat r1.w, r1.w, l(0.05882353)
mad r2.x, r2.y, l(0.500000), cb0[12].x
mul_sat r2.x, r2.x, l(0.05882353)
sample_indexable(texture2d)(float,float,float,float) r2.yzw, v1.yzyy, t22.wxyz, s5
add r2.yzw, r2.yyzw, l(0.000000, -0.500000, -0.500000, -0.000000)
mad r2.yzw, cb0[11].wwww, r2.yyzw, l(0.000000, 0.500000, 0.500000, 0.000000)
mad r2.yz, r2.yyzy, l(0.000000, 1.99218750, 1.99218750, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
dp2 r3.x, r2.yzyy, r2.yzyy
add r3.x, -r3.x, l(1.000000)
max r3.x, r3.x, l(0.000000)
sqrt r3.x, r3.x
mul r2.w, r2.w, r2.w
mul r2.w, r2.w, l(0.33333334)
min r2.w, r2.w, l(1.000000)
movc r3.y, v6.x, l(1.000000), l(-1.000000)
dp3 r3.z, v2.xyzx, v2.xyzx
rsq r3.z, r3.z
mul r4.xyz, r3.zzzz, v2.xyzx
mul r4.xyz, r3.yyyy, r4.xyzx
dp3 r3.z, v3.xyzx, v3.xyzx
rsq r3.z, r3.z
mul r5.xyz, r3.zzzz, v3.xyzx
mul r5.xyz, r3.yyyy, r5.xyzx
dp3 r3.z, v4.xyzx, v4.xyzx
rsq r3.z, r3.z
mul r6.xyz, r3.zzzz, v4.xyzx
mul r3.yzw, r3.yyyy, r6.xxyz
mul r1.w, r1.w, l(-17.000000)
exp r1.w, r1.w
add r1.w, r1.w, r2.w
log r1.w, r1.w
mul r1.w, r1.w, l(-0.05882353)
max r1.w, r1.w, l(0.000000)
mul r2.x, r2.x, l(-17.000000)
exp r2.x, r2.x
add r2.x, r2.x, r2.w
log r2.x, r2.x
mul r2.x, r2.x, l(-0.05882353)
mul r6.xyz, r2.zzzz, r3.yzwy
mad r2.yzw, r5.xxyz, r2.yyyy, r6.xxyz
mad r2.yzw, r4.xxyz, r3.xxxx, r2.yyzw
dp3 r3.x, r2.yzwy, r2.yzwy
rsq r3.x, r3.x
mul r4.xyz, r2.yzwy, r3.xxxx
ftou r2.yz, v0.xxyx
ge r2.w, v0.z, l(0.984375)
mul r3.x, v0.z, l(1.01587307)
mad r5.w, v0.z, l(64.000000), l(-63.000000)
movc r2.w, r2.w, r5.w, r3.x
max r2.xw, r2.xxxw, l(0.000000, 0.000000, 0.000000, 0.00000001)
rcp r2.w, r2.w
dp3 r3.x, -v5.xyzx, -v5.xyzx
rsq r3.x, r3.x
mul r6.xyz, r3.xxxx, -v5.xyzx
utof r7.xy, r2.zyzz
dp2 r5.w, r7.yxyy, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r5.w, r5.w
mul r5.w, r5.w, l(52.982918)
frc r5.w, r5.w
mad r5.w, r5.w, l(6.28318548), cb1[70].w
sincos r8.x, r9.x, r5.w
dp2 r5.w, r7.xyxx, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r5.w, r5.w
mul r5.w, r5.w, l(52.982918)
frc r5.w, r5.w
mad r5.w, r5.w, l(6.28318548), cb1[70].w
sincos r7.x, r10.x, r5.w
dp3_sat r5.w, r4.xyzx, r6.xyzx
dp3 r6.w, -r6.xyzx, r4.xyzx
add r6.w, r6.w, r6.w
mad r11.xyz, r4.xyzx, -r6.wwww, -r6.xyzx
mul r7.z, r5.w, l(0.984375)
mad r6.w, r5.w, l(0.54703742), l(0.45296258)
mul r8.zw, r6.wwww, l(0.000000, 0.000000, 0.54703742, 0.45296258)
min r6.w, |cb0[12].z|, l(1.000000)
add r2.x, -r1.w, r2.x
mad r1.w, r6.w, r2.x, r1.w
lt r2.x, cb0[12].z, l(0.000000)
mul r1.w, r1.w, l(17.000000)
exp r12.y, r1.w
mov r12.xz, l(1.000000,0,1.000000,0)
movc r9.yz, r2.xxxx, r12.xxyx, r12.yyxy
add r9.yz, r9.yyzy, l(0.000000, 2.000000, 2.000000, 0.000000)
div r9.yz, l(0.000000, 2.000000, 2.000000, 0.000000), r9.yyzy
dp3 r1.w, r4.xyzx, cb2[17].xyzx
mov_sat r2.x, r1.w
ge r6.w, l(0.000000), r2.x
if_nz r6.w
  mov r7.y, l(0)
endif 
if_z r6.w
  mul r10.yzw, v5.yyyy, cb2[29].xxyz
  mad r10.yzw, v5.xxxx, cb2[28].xxyz, r10.yyzw
  mad r10.yzw, v5.zzzz, cb2[30].xxyz, r10.yyzw
  add r10.yzw, r10.yyzw, cb2[31].xxyz
  add r6.w, r10.w, -cb2[17].w
  mad r6.w, -r6.w, l(0.00006104), l(1.000000)
  mov_sat r9.w, r6.w
  eq r9.w, r6.w, r9.w
  if_nz r9.w
    mov r9.w, l(0)
    mov r12.x, l(0)
    loop 
      ge r12.y, r9.w, l(3.000000)
      breakc_nz r12.y
      ftou r12.y, r9.w
      add r13.xy, r10.yzyy, -cb2[r12.y + 20].xyxx
      max r13.x, |r13.y|, |r13.x|
      mul r12.x, r13.x, cb2[r12.y + 20].z
      lt r12.y, r12.x, l(1.000000)
      if_nz r12.y
        break 
      endif 
      add r9.w, r9.w, l(1.000000)
      mov r12.x, l(0)
    endloop 
  else 
    mov r9.w, l(3.000000)
    mov r12.x, l(0)
  endif 
  ge r12.y, r9.w, l(3.000000)
  if_nz r12.y
    mul r13.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
    rcp r14.xz, r13.xxxx
    mov r14.y, -r14.z
    mad r13.xyz, r10.yzyy, r14.xyzx, r13.yzyy
    add r14.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r13.xyz, r13.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r13.xyz, r14.xyzx, r13.xyzx
    mul r14.xy, r13.zyzz, cb2[32].xxxx
    round_ni r14.xy, r14.xyxx
    mul r13.w, r14.y, cb2[27].x
    mad r13.w, r13.w, cb2[32].x, r14.x
    ftou r13.w, r13.w
    iadd r13.w, r13.w, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r14.x, r13.w, l(0), t23.xxxx
    and r14.y, r14.x, l(0x40000000)
    ishl r14.z, r14.x, l(2)
    if_z r14.y
      and r14.y, r14.x, l(0x01ffffff)
      iadd r15.x, r13.w, r14.y
      ushr r13.w, r14.x, l(25)
      utof r13.w, r13.w
      mul r13.xyz, r13.wwww, r13.xyzx
      frc r13.xyz, r13.xyzx
      mul r13.xyz, r13.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
      ftou r13.xyz, r13.xyzx
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.z, r15.x, l(0), t23.xxxx
      ushr r14.xy, r13.zyzz, l(6, 6, 0, 0)
      and r13.w, r15.z, l(0xc0000000)
      iadd r14.w, r15.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r14.w, r14.w, l(0), t23.xxxx
      movc r14.y, r14.y, r15.z, r14.w
      ushr r14.w, r14.y, l(13)
      movc r14.x, r14.x, r14.w, r14.y
      and r14.x, r14.x, l(8191)
      iadd r16.x, r14.x, r15.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.z, r16.x, l(0), t23.xxxx
      mov r15.y, l(0)
      mov r16.y, l(1)
      movc r14.xyw, r13.wwww, r15.xyxz, r16.xyxz
      movc r16.yz, r13.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r17.xy, r13.zyzz, r16.yyyy
      and r17.xy, r17.xyxx, l(1, 1, 0, 0)
      and r15.w, r14.w, l(0xc0000000)
      iadd r16.y, r14.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.y, r16.y, l(0), t23.xxxx
      movc r16.y, r17.y, r14.w, r16.y
      ushr r17.y, r16.y, l(13)
      movc r16.y, r17.x, r17.y, r16.y
      and r16.y, r16.y, l(8191)
      iadd r16.x, r14.x, r16.y
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.w, r16.x, l(0), t23.xxxx
      movc r14.xyw, r15.wwww, r14.xyxw, r16.xzxw
      movc r14.xyw, r13.wwww, r15.xyxz, r14.xyxw
      and r13.w, r14.w, l(0xc0000000)
      if_z r13.w
        iadd r13.w, -r14.y, l(6)
        ushr r15.xy, r13.zyzz, r13.wwww
        or r13.w, r14.w, l(0x40000000)
        bfi r15.y, l(1), l(1), r15.y, l(0)
        bfi r15.x, l(1), l(0), r15.x, r15.y
        imul null, r15.x, r15.x, l(10)
        ushr r13.w, r13.w, r15.x
        and r13.w, r13.w, l(1023)
        iadd r15.x, r13.w, r14.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.w, r15.x, l(0), t23.xxxx
        iadd r15.yz, r14.yyyy, l(0, 1, 2, 0)
        iadd r13.w, -r15.y, l(6)
        ushr r16.xy, r13.zyzz, r13.wwww
        and r13.w, r15.w, l(0xc0000000)
        or r14.y, r15.w, l(0x40000000)
        bfi r16.y, l(1), l(1), r16.y, l(0)
        bfi r16.x, l(1), l(0), r16.x, r16.y
        imul null, r16.x, r16.x, l(10)
        ushr r14.y, r14.y, r16.x
        and r14.y, r14.y, l(1023)
        iadd r16.x, r14.y, r15.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.z, r16.x, l(0), t23.xxxx
        mov r16.y, r15.z
        movc r16.xyz, r13.wwww, r15.xywx, r16.xyzx
        iadd r14.y, -r16.y, l(6)
        ushr r15.yz, r13.zzyz, r14.yyyy
        and r14.y, r16.z, l(0xc0000000)
        or r16.y, r16.z, l(0x40000000)
        bfi r15.z, l(1), l(1), r15.z, l(0)
        bfi r15.y, l(1), l(0), r15.y, r15.z
        imul null, r15.y, r15.y, l(10)
        ushr r15.y, r16.y, r15.y
        and r15.y, r15.y, l(1023)
        iadd r17.x, r15.y, r16.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.y, r17.x, l(0), t23.xxxx
        movc r15.yz, r14.yyyy, r16.xxzx, r17.xxyx
        movc r14.xw, r13.wwww, r15.xxxw, r15.yyyz
      endif 
      and r13.w, r14.w, l(0xc0000000)
      if_z r13.w
        ubfe r14.y, l(14), l(15), r14.w
        utof r14.y, r14.y
        mul r14.y, r14.y, cb2[27].w
        mul r14.y, r14.y, l(0.00006104)
        and r15.xy, r14.wwww, l(0x00007fff, 0x20000000, 0, 0)
        utof r15.x, r15.x
        mul r15.x, r15.x, cb2[27].w
        mul r15.x, r15.x, l(0.00003052)
        and r15.z, r13.y, l(3)
        iadd r15.z, r14.x, r15.z
        iadd r15.z, r15.z, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.z, r15.z, l(0), t23.xxxx
        bfi r16.xyz, l(2, 2, 1, 0), l(3, 1, 4, 0), r13.xyzx, l(0, 0, 0, 0)
        ushr r13.x, r15.z, r16.x
        and r13.x, r13.x, l(255)
        utof r13.x, r13.x
        mul r13.x, r15.x, r13.x
        mad r13.x, r13.x, l(0.00392157), r14.y
        iadd r13.y, r16.y, l(1)
        ubfe r13.z, l(1), l(1), r13.z
        iadd r13.y, r13.z, r13.y
        iadd r13.y, r13.y, r14.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r13.y, r13.y, l(0), t23.xxxx
        ushr r13.y, r13.y, r16.z
        and r13.y, r13.y, l(0x0000ffff)
        utof r13.y, r13.y
        mul r13.y, r15.x, r13.y
        mad r13.y, r13.y, l(0.00001526), r14.y
        movc r14.z, r15.y, r13.x, r13.y
      else 
        and r13.x, r14.w, l(0x80000000)
        iadd r13.y, r14.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r13.y, r13.y, l(0), t23.xxxx
        movc r13.x, r13.x, r13.y, l(0)
        ishl r13.y, r14.w, l(2)
        ushr r13.z, r13.x, l(16)
        and r13.x, r13.x, l(0x0000ffff)
        f16tof32 r13.xz, r13.xxzx
        mad r13.y, r10.y, r13.z, r13.y
        mad r13.x, r10.z, r13.x, r13.y
        movc r14.z, r13.w, r13.x, r14.z
      endif 
    endif 
    mad r10.w, -cb2[27].z, l(2.000000), r10.w
    lt r10.w, r14.z, r10.w
    movc r7.y, r10.w, l(0), l(1.000000)
  endif 
  if_z r12.y
    if_z cb2[58].y
      ftou r10.w, r9.w
      add r13.xy, r10.yzyy, -cb2[r10.w + 20].xyxx
      mul r13.xy, r13.xyxx, cb2[r10.w + 20].zzzz
      mad r13.xy, r13.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r10.w, cb2[26].y
      add r13.z, r9.w, r10.w
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.w, r13.xyzx, t13.xxxx, s13, r6.w
      sample_l_indexable(texture2darray)(float,float,float,float) r12.y, r13.xyzx, t31.yxzw, s0, l(0.000000)
      add r10.w, r10.w, r12.y
      add_sat r10.w, r10.w, l(-1.000000)
      mul r12.y, r10.w, r10.w
      mul r7.y, r10.w, r12.y
    endif 
    if_nz cb2[58].y
      mov r13.x, -r8.x
      ftou r10.w, r9.w
      add r9.w, r9.w, l(1.000000)
      min r9.w, r9.w, l(2.000000)
      ftou r9.w, r9.w
      add r12.x, -r12.x, l(1.000000)
      mul r12.x, r12.x, l(28.000000)
      ftou r12.x, r12.x
      add r14.xy, r10.yzyy, -cb2[r10.w + 20].xyxx
      mul r14.xy, r14.xyxx, cb2[r10.w + 20].zzzz
      mad r14.xy, r14.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      add r10.yz, r10.yyzy, -cb2[r9.w + 20].xxyx
      mul r10.yz, r10.yyzy, cb2[r9.w + 20].zzzz
      mad r10.yz, r10.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      mov r13.y, r9.x
      mov r13.z, r8.x
      mov r12.y, l(0)
      mov r13.w, l(0)
      loop 
        uge r14.z, r13.w, l(8)
        breakc_nz r14.z
        ult r14.z, r12.x, r13.w
        movc r15.xy, r14.zzzz, r10.yzyy, r14.xyxx
        movc r14.w, r14.z, cb2[r9.w + 20].w, cb2[r10.w + 20].w
        movc r14.z, r14.z, r9.w, r10.w
        dp2 r16.x, icb[r13.w + 0].yxyy, r13.xyxx
        dp2 r16.y, icb[r13.w + 0].yxyy, r13.yzyy
        mad r15.xy, r16.xyxx, r14.wwww, r15.xyxx
        iadd r14.z, r14.z, cb2[26].y
        utof r15.z, r14.z
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r14.z, r15.xyzx, t13.xxxx, s13, r6.w
        sample_l_indexable(texture2darray)(float,float,float,float) r14.w, r15.xyzx, t31.yzwx, s0, l(0.000000)
        add r14.z, r14.w, r14.z
        add_sat r14.z, r14.z, l(-1.000000)
        mad r12.y, r14.z, l(0.125000), r12.y
        iadd r13.w, r13.w, l(1)
      endloop 
      mul r6.w, r12.y, r12.y
      mul r7.y, r12.y, r6.w
    endif 
  endif 
endif 
lt r6.w, l(0.000000), r2.x
if_nz r6.w
  lt r6.w, l(0.000000), r7.y
  if_nz r6.w
    mul r6.w, r2.x, cb2[18].w
    if_nz cb2[23].x
      add r13.xyz, v5.xyzx, cb1[24].xyzx
      mov r13.w, l(1.000000)
      dp4 r9.w, cb2[24].xyzw, r13.xyzw
      dp4 r10.y, cb2[25].xyzw, r13.xyzw
      frc r13.x, r9.w
      frc r13.y, r10.y
      iadd r9.w, l(-1), cb2[23].x
      utof r13.z, r9.w
      sample_l_indexable(texture2darray)(float,float,float,float) r10.yzw, r13.xyzx, t20.wxyz, s2, l(0.000000)
      add r10.yzw, r10.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
      mad r10.yzw, cb2[23].yyyy, r10.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
      mul r10.yzw, r10.yyzw, cb2[18].xxyz
    else 
      mov r10.yzw, cb2[18].xxyz
    endif 
    mul r10.yzw, r7.yyyy, r10.yyzw
    mad r7.y, -r5.w, l(0.500000), l(1.000000)
    mad r7.y, -r2.x, r7.y, l(1.000000)
    mul r7.y, r7.y, r7.y
    mad r7.y, -r7.y, l(0.620000), l(0.620000)
    add r7.y, -r2.x, r7.y
    mad r7.y, r7.y, l(0.81649661), r2.x
    mul r13.xyz, r10.yzwy, r7.yyyy
    lt r1.w, l(0.000000), r1.w
    mad r14.xyz, -v5.xyzx, r3.xxxx, cb2[17].xyzx
    dp3 r3.x, r14.xyzx, r14.xyzx
    rsq r3.x, r3.x
    mul r14.xyz, r3.xxxx, r14.xyzx
    dp3 r3.x, r4.xyzx, r14.xyzx
    dp3 r7.y, r14.xyzx, r6.xyzx
    mul r9.w, r9.z, r9.y
    sqrt r9.w, r9.w
    dp3 r12.x, r14.xyzx, r5.xyzx
    dp3 r12.y, r14.xyzx, r3.yzwy
    mul r12.xy, r12.xyxx, r12.xyxx
    div r12.xy, r12.xyxx, r9.yzyy
    add r12.x, r12.y, r12.x
    mad r3.x, |r3.x|, |r3.x|, r12.x
    mad r2.x, r2.x, r8.z, r8.w
    mul r3.x, r3.x, r3.x
    mul r3.x, r9.w, r3.x
    mul r2.x, r2.x, r3.x
    rcp r2.x, r2.x
    mul r2.x, r6.w, r2.x
    mul r2.x, r2.x, l(0.16666667)
    mul r10.yzw, r10.yyzw, r2.xxxx
    add_sat r2.x, -r7.y, l(1.000000)
    mul r3.x, r2.x, r2.x
    mul r3.x, r3.x, r3.x
    mul r2.x, r2.x, r3.x
    mul r14.xyz, r2.xxxx, r10.zwyz
    mov r13.w, r14.z
    and r13.xyzw, r1.wwww, r13.xyzw
    mov r14.zw, r10.yyyz
    and r14.xyzw, r1.wwww, r14.xyzw
    and r1.w, r1.w, r10.w
  else 
    mov r13.xyzw, l(0,0,0,0)
    mov r14.xyzw, l(0,0,0,0)
    mov r1.w, l(0)
  endif 
else 
  mov r13.xyzw, l(0,0,0,0)
  mov r14.xyzw, l(0,0,0,0)
  mov r1.w, l(0)
endif 
mul r2.x, r2.w, l(0.00781250)
min r2.x, r2.x, l(15.000000)
ftou r2.x, r2.x
ushr r15.xy, r2.yzyy, l(6, 6, 0, 0)
ishl r15.z, r2.x, l(4)
mov r2.x, -r8.x
mad r3.x, -r5.w, l(0.500000), l(1.000000)
mul r5.w, r9.z, r9.y
sqrt r5.w, r5.w
mov r16.xy, l(0,0,0,0)
mov r17.w, l(0)
mov r18.xyz, v5.xyzx
mov r18.w, l(1.000000)
mov r2.z, r8.x
mov r19.z, l(1.000000)
mov r20.w, l(1.000000)
mov r2.yw, r9.xxxx
mov r8.y, r2.w
mov r10.yzw, r13.xxyz
mov r21.x, r13.w
mov r21.yz, r14.xxyx
mov r22.xy, r14.zwzz
mov r22.z, r1.w
mov r6.w, cb2[58].y
mov r7.y, l(0)
loop 
  uge r9.x, r7.y, cb2[0].x
  breakc_nz r9.x
  ushr r16.z, r7.y, l(5)
  iadd r17.xyz, r15.xyzx, r16.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r9.x, r17.xyzw, t6.xyzw
  mov r17.xyz, r10.yzwy
  mov r23.xyz, r21.xyzx
  mov r24.xyz, r22.xyzx
  mov r9.w, r6.w
  mov r12.x, r9.x
  loop 
    breakc_z r12.x
    firstbit_lo r12.y, r12.x
    ishl r15.w, l(1), r12.y
    and r16.z, r12.x, r15.w
    if_nz r16.z
      xor r12.x, r12.x, r15.w
      iadd r12.y, r7.y, r12.y
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r25.xyzw, r12.y, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r26.xy, r12.y, l(16), t11.xyxx
      add r25.xyz, r25.xyzx, -v5.xyzx
      mov r26.z, r25.w
      lt r25.xyz, |r25.xyzx|, r26.zxyz
      and r15.w, r25.y, r25.x
      and r15.w, r25.z, r15.w
      if_nz r15.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r25.xyzw, r12.y, l(0), t12.wxyz
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r26.xyzw, r12.y, l(16), t12.zxyw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r27.xyzw, r12.y, l(32), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r28.xyzw, r12.y, l(48), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r29.xyzw, r12.y, l(64), t12.yzwx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r30.xyzw, r12.y, l(80), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r12.y, l(96), t12.yzwx
        ubfe r15.w, l(3), l(24), r26.w
        switch r15.w
          case l(4)
          lt r15.w, l(0.000000), r31.x
          mov r32.xy, r30.zwzz
          mov r32.z, r31.w
          mad r33.xyz, -r32.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r25.yzwy
          add r34.xyz, r33.xyzx, -v5.xyzx
          dp3 r16.z, r32.xyzx, r34.xyzx
          div_sat r16.w, -r16.z, r31.x
          mad r35.xyz, r16.wwww, r32.xyzx, r33.xyzx
          movc r35.xyz, r15.wwww, r35.xyzx, r25.yzwy
          add r35.xyz, r35.xyzx, -v5.xyzx
          dp3 r19.w, r35.xyzx, r35.xyzx
          rsq r21.w, r19.w
          mul r35.xyz, r21.wwww, r35.xyzx
          dp3 r21.w, r4.xyzx, r35.xyzx
          mov_sat r22.w, r21.w
          lt r23.w, l(0.000000), r22.w
          if_nz r23.w
            sqrt r23.w, r19.w
            mul r24.w, r28.x, r28.x
            div r19.w, r24.w, r19.w
            min r19.w, r19.w, l(1.000000)
            mad_sat r35.xy, r23.wwww, r27.xzxx, r27.ywyy
            mul r35.zw, r35.xxxy, r35.xxxy
            mad r35.xy, r35.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
            mul r35.xy, r35.xyxx, r35.zwzz
            mul r19.w, r19.w, r35.x
            mul r19.w, r35.y, r19.w
            lt r23.w, l(0.000000), r19.w
            if_nz r23.w
              ubfe r23.w, l(3), l(27), r26.w
              ine r23.w, r23.w, l(1)
              if_nz r23.w
                mad r23.w, |r21.w|, l(-0.200000), l(0.400000)
                mad r35.xyz, r4.xyzx, r23.wwww, v5.xyzx
                add r35.xyz, -r29.xyzx, r35.xyzx
                max r23.w, |r35.z|, |r35.y|
                max r23.w, r23.w, |r35.x|
                div r23.w, r30.x, r23.w
                add r23.w, r30.y, r23.w
                dp3 r24.w, r35.xyzx, r35.xyzx
                rsq r24.w, r24.w
                max r23.w, r23.w, l(0.00006104)
                and r32.w, r26.w, l(0x0000ffff)
                utof r36.w, r32.w
                mov r32.w, l(0)
                mov r33.w, l(0)
                loop 
                  ige r34.w, r33.w, l(8)
                  breakc_nz r34.w
                  dp2 r37.y, icb[r33.w + 0].yxyy, r2.xyxx
                  dp2 r37.z, icb[r33.w + 0].yxyy, r2.yzyy
                  mul r37.yz, r28.yyyy, r37.yyzy
                  mul r37.x, r10.x, r37.y
                  mul r37.w, r7.x, r37.y
                  mad r36.xyz, r35.xyzx, r24.wwww, r37.xzwx
                  sample_c_lz_indexable(texturecubearray)(float,float,float,float) r34.w, r36.xyzw, t10.xxxx, s13, r23.w
                  mad r32.w, r34.w, l(0.125000), r32.w
                  iadd r33.w, r33.w, l(1)
                endloop 
              else 
                mov r32.w, l(1.000000)
              endif 
              mul r19.w, r19.w, r32.w
              lt r23.w, l(0.000000), r19.w
              if_nz r23.w
                mul r23.w, r26.x, l(0.16666667)
                dp3 r24.w, r32.xyzx, r11.xyzx
                dp3 r33.w, r11.xyzx, r34.xyzx
                mad r34.x, -r24.w, r24.w, r31.x
                mad r16.z, r24.w, r33.w, -r16.z
                div_sat r16.z, r16.z, r34.x
                div r24.w, r34.x, r31.x
                mul r24.w, r24.w, l(10.000000)
                min r24.w, r24.w, l(1.000000)
                add r16.z, -r16.w, r16.z
                mad r16.z, r24.w, r16.z, r16.w
                mad r32.xyz, r16.zzzz, r32.xyzx, r33.xyzx
                movc r32.xyz, r15.wwww, r32.xyzx, r25.yzwy
                add r32.xyz, r32.xyzx, -v5.xyzx
                dp3 r15.w, r32.xyzx, r32.xyzx
                rsq r15.w, r15.w
                mul r33.xyz, r15.wwww, r32.xyzx
                mov r26.x, r25.x
                mul r34.xyz, r19.wwww, r26.xyzx
                mad r16.z, -r22.w, r3.x, l(1.000000)
                mul r16.z, r16.z, r16.z
                mad r16.z, -r16.z, l(0.620000), l(0.620000)
                add r16.z, -r22.w, r16.z
                mad r16.z, r16.z, l(0.81649661), r22.w
                lt r16.w, l(0.000000), r21.w
                mad r35.xyz, r16.zzzz, r34.xyzx, r17.xyzx
                dp3_sat r16.z, r4.xyzx, r33.xyzx
                mad r32.xyz, r32.xyzx, r15.wwww, r6.xyzx
                dp3 r15.w, r32.xyzx, r32.xyzx
                rsq r15.w, r15.w
                mul r32.xyz, r15.wwww, r32.xyzx
                dp3 r15.w, r4.xyzx, r32.xyzx
                dp3 r19.w, r32.xyzx, r6.xyzx
                dp3 r21.w, r32.xyzx, r5.xyzx
                dp3 r22.w, r32.xyzx, r3.yzwy
                mul r21.w, r21.w, r21.w
                div r21.w, r21.w, r9.y
                mul r22.w, r22.w, r22.w
                div r22.w, r22.w, r9.z
                add r21.w, r21.w, r22.w
                mad r15.w, |r15.w|, |r15.w|, r21.w
                mad r21.w, r16.z, r8.z, r8.w
                mul r15.w, r15.w, r15.w
                mul r15.w, r5.w, r15.w
                mul r15.w, r21.w, r15.w
                rcp r15.w, r15.w
                mul r16.z, r23.w, r16.z
                mul r15.w, r15.w, r16.z
                mul r32.xyz, r34.xyzx, r15.wwww
                mad r33.xyz, r15.wwww, r34.xyzx, r24.xyzx
                add_sat r15.w, -r19.w, l(1.000000)
                mul r16.z, r15.w, r15.w
                mul r16.z, r16.z, r16.z
                mul r15.w, r15.w, r16.z
                mad r32.xyz, r32.xyzx, r15.wwww, r23.xyzx
                movc r17.xyz, r16.wwww, r35.xyzx, r17.xyzx
                movc r23.xyz, r16.wwww, r32.xyzx, r23.xyzx
                movc r24.xyz, r16.wwww, r33.xyzx, r24.xyzx
              endif 
            endif 
          endif 
          break 
          case l(2)
          mov r32.xy, r28.zwzz
          mov r32.z, r29.w
          add r32.xyz, r32.xyzx, -v5.xyzx
          dp3 r15.w, r32.xyzx, r32.xyzx
          rsq r15.w, r15.w
          mul r33.xyz, r15.wwww, r32.xyzx
          dp3 r16.z, r4.xyzx, r33.xyzx
          mov_sat r16.w, r16.z
          lt r19.w, l(0.000000), r16.w
          if_nz r19.w
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r12.y, l(112), t12.yzwx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r12.y, l(128), t12.zxyw
            mov r35.xyz, r33.xyzx
            mov r35.w, r34.y
            dp4 r19.w, r35.xyzw, r18.xyzw
            lt r21.w, r19.w, l(1.000000)
            if_nz r21.w
              mov r36.xyz, l(1.000000,1.000000,1.000000,0)
              mov r21.w, l(0)
            else 
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r12.y, l(172), t12.yzwx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r12.y, l(188), t12.wxyz
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r12.y, l(204), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r22.w, r12.y, l(236), t12.xxxx
              add r40.xyz, r25.yzwy, -v5.xyzx
              mul r23.w, r28.x, r28.x
              dp3 r24.w, r40.xyzx, r40.xyzx
              div r23.w, r23.w, r24.w
              min r23.w, r23.w, l(1.000000)
              mad_sat r27.xy, r19.wwww, r27.xzxx, r27.ywyy
              mul r27.zw, r27.xxxy, r27.xxxy
              mad r27.xy, r27.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
              mul r27.xy, r27.xyxx, r27.zwzz
              mul r23.w, r23.w, r27.x
              mul r23.w, r27.y, r23.w
              mov r29.w, r30.x
              dp4 r27.x, r29.xyzw, r18.xyzw
              mov r40.xyz, r30.yzwy
              mov r40.w, r31.w
              dp4 r27.y, r40.xyzw, r18.xyzw
              div r19.xy, r27.xyxx, r19.wwww
              lt r19.w, r37.w, l(0.00048828)
              if_nz r19.w
                mov r38.y, r39.x
                mad_sat r27.xy, |r19.xyxx|, r38.zwzz, r38.xyxx
                mul r27.zw, r27.xxxy, r27.xxxy
                mad r27.xy, r27.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
                mul r27.xy, r27.xyxx, r27.zwzz
                mul r19.w, r27.y, r27.x
              else 
                mov r37.w, r38.y
                mul_sat r27.xyzw, |r19.yyxx|, r37.xyzw
                log r27.xyzw, r27.xyzw
                mul r27.xyzw, r27.xyzw, r38.xxxx
                exp r27.xyzw, r27.xyzw
                add r27.xy, r27.zwzz, r27.xyxx
                log r27.xy, r27.xyxx
                mul r27.xy, r27.xyxx, r39.xxxx
                exp r27.xy, r27.xyxx
                mul r24.w, r27.x, r38.z
                mad r25.w, r38.w, r27.y, l(-1.000000)
                mad r24.w, r38.w, r27.y, -r24.w
                div_sat r24.w, r25.w, r24.w
                mul r25.w, r24.w, r24.w
                mad r24.w, r24.w, l(-2.000000), l(3.000000)
                mul r19.w, r24.w, r25.w
              endif 
              mul r21.w, r19.w, r23.w
              and r19.w, r22.w, l(255)
              if_nz r19.w
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r27.xyz, r12.y, l(220), t12.xyzx
                dp3 r22.w, r39.yzwy, r19.xyzx
                dp3 r19.x, r27.xyzx, r19.xyzx
                frc r27.x, r22.w
                frc r27.y, r19.x
                iadd r19.x, r19.w, l(-1)
                utof r27.z, r19.x
                sample_l_indexable(texture2darray)(float,float,float,float) r36.xyz, r27.xyzx, t20.xyzw, s2, l(0.000000)
              else 
                mov r36.xyz, l(1.000000,1.000000,1.000000,0)
              endif 
            endif 
            mov r25.yz, r26.yyzy
            mul r19.xyw, r36.xyxz, r25.xyxz
            lt r22.w, l(0.000000), r21.w
            if_nz r22.w
              ubfe r22.w, l(3), l(27), r26.w
              ine r22.w, r22.w, l(1)
              if_nz r22.w
                mad r22.w, |r16.z|, l(-0.200000), l(0.400000)
                mad r20.xyz, r4.xyzx, r22.wwww, v5.xyzx
                mov r33.xyz, r31.xyzx
                dp4 r22.w, r33.xyzw, r20.xyzw
                dp4 r23.w, r35.xyzw, r20.xyzw
                ge r24.w, r23.w, r22.w
                if_nz r24.w
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.y, r12.y, l(144), t12.xxxx
                  mov r29.w, r30.x
                  dp4 r25.x, r29.xyzw, r20.xyzw
                  mov r31.xyz, r30.yzwy
                  dp4 r25.y, r31.xyzw, r20.xyzw
                  div r20.xy, r25.xyxx, r23.wwww
                  mad_sat r20.xy, r20.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  mad r20.xy, r20.xyxx, r34.zwzz, r34.xyxx
                  div r12.y, r22.w, r23.w
                  max r12.y, r12.y, l(0.00006104)
                  and r22.w, r26.w, l(0x0000ffff)
                  if_nz r9.w
                    utof r25.z, r22.w
                    mov r23.w, l(0)
                    mov r24.w, l(0)
                    loop 
                      ige r25.w, r24.w, l(8)
                      breakc_nz r25.w
                      dp2 r27.x, icb[r24.w + 0].yxyy, r2.xwxx
                      dp2 r27.y, icb[r24.w + 0].xyxx, r8.xyxx
                      mad r25.xy, r27.xyxx, r28.yyyy, r20.xyxx
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r25.x, r25.xyzx, t9.xxxx, s13, r12.y
                      mad r23.w, r25.x, l(0.125000), r23.w
                      iadd r24.w, r24.w, l(1)
                    endloop 
                  else 
                    utof r20.z, r22.w
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.w, r20.xyzx, t9.xxxx, s13, r12.y
                  endif 
                  mul r12.y, r23.w, r23.w
                  mul r12.y, r23.w, r12.y
                else 
                  mov r12.y, l(1.000000)
                endif 
              else 
                mov r12.y, l(1.000000)
              endif 
              mul r12.y, r12.y, r21.w
              lt r20.x, l(0.000000), r12.y
              if_nz r20.x
                mul r20.x, r26.x, l(0.16666667)
                mul r19.xyw, r19.xyxw, r12.yyyy
                mad r12.y, -r16.w, r3.x, l(1.000000)
                mul r12.y, r12.y, r12.y
                mad r12.y, -r12.y, l(0.620000), l(0.620000)
                add r12.y, -r16.w, r12.y
                mad r12.y, r12.y, l(0.81649661), r16.w
                lt r16.z, l(0.000000), r16.z
                mad r25.xyz, r12.yyyy, r19.xywx, r17.xyzx
                mad r26.xyz, r32.xyzx, r15.wwww, r6.xyzx
                dp3 r12.y, r26.xyzx, r26.xyzx
                rsq r12.y, r12.y
                mul r26.xyz, r12.yyyy, r26.xyzx
                dp3 r12.y, r4.xyzx, r26.xyzx
                dp3 r15.w, r26.xyzx, r6.xyzx
                dp3 r20.y, r26.xyzx, r5.xyzx
                dp3 r20.z, r26.xyzx, r3.yzwy
                mul r20.yz, r20.yyzy, r20.yyzy
                div r20.yz, r20.yyzy, r9.yyzy
                add r20.y, r20.z, r20.y
                mad r12.y, |r12.y|, |r12.y|, r20.y
                mad r20.y, r16.w, r8.z, r8.w
                mul r12.y, r12.y, r12.y
                mul r12.y, r5.w, r12.y
                mul r12.y, r20.y, r12.y
                rcp r12.y, r12.y
                mul r16.w, r16.w, r20.x
                mul r12.y, r12.y, r16.w
                mul r20.xyz, r19.xywx, r12.yyyy
                mad r19.xyw, r12.yyyy, r19.xyxw, r24.xyxz
                add_sat r12.y, -r15.w, l(1.000000)
                mul r15.w, r12.y, r12.y
                mul r15.w, r15.w, r15.w
                mul r12.y, r12.y, r15.w
                mad r20.xyz, r20.xyzx, r12.yyyy, r23.xyzx
                movc r17.xyz, r16.zzzz, r25.xyzx, r17.xyzx
                movc r23.xyz, r16.zzzz, r20.xyzx, r23.xyzx
                movc r24.xyz, r16.zzzz, r19.xywx, r24.xyzx
              endif 
            endif 
          endif 
          break 
          default 
          break 
        endswitch 
      endif 
    endif 
  endloop 
  mov r10.yzw, r17.xxyz
  mov r21.xyz, r23.xyzx
  mov r22.xyz, r24.xyzx
  iadd r7.y, r7.y, l(32)
endloop 
iadd r1.w, cb2[0].y, -cb2[58].x
and r2.x, r1.w, l(-32)
iadd r2.y, r1.w, -r2.x
and r2.z, cb2[0].y, l(-32)
iadd r2.w, -r2.z, cb2[0].y
mov r3.xy, l(0,0,0,0)
mov r5.w, l(0)
mov r6.yz, l(0,0,1.000000,0)
mov r8.xy, l(0,0,0,0)
mov r9.xy, l(0,0,0,0)
mov r13.xy, l(0,0,0,0)
mov r14.xyzw, l(0,0,0,0)
mov r16.yzw, l(0,0,0,0)
mov r3.w, r2.x
loop 
  uge r6.w, r3.w, cb2[0].y
  breakc_nz r6.w
  ushr r3.z, r3.w, l(5)
  iadd r5.xyz, r3.xyzx, r15.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r3.z, r5.xyzw, t7.yzxw
  ieq r5.x, r2.x, r3.w
  bfi r5.y, r2.y, l(0), l(0), r3.z
  movc r3.z, r5.x, r5.y, r3.z
  ieq r5.x, r2.z, r3.w
  ubfe r5.y, r2.w, l(0), r3.z
  movc r3.z, r5.x, r5.y, r3.z
  iadd r5.x, r3.w, cb2[0].x
  mov r17.xyzw, r14.xyzw
  mov r18.xyz, r16.yzwy
  mov r5.y, r3.z
  loop 
    breakc_z r5.y
    firstbit_lo r5.z, r5.y
    ishl r6.w, l(1), r5.z
    and r7.x, r5.y, r6.w
    if_nz r7.x
      xor r5.y, r5.y, r6.w
      iadd r6.w, r5.z, r5.x
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r19.xyzw, r6.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r20.xy, r6.w, l(16), t11.xyxx
      add r19.xyz, r19.xyzx, -v5.xyzx
      mov r20.z, r19.w
      lt r19.xyz, |r19.xyzx|, r20.zxyz
      and r6.w, r19.y, r19.x
      and r6.w, r19.z, r6.w
      if_nz r6.w
        iadd r5.z, r3.w, r5.z
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r19.xyzw, r5.z, l(0), t15.wxyz
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r7.xy, r5.z, l(96), t15.xyxx
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r20.xyzw, r5.z, l(116), t15.zwxy
        add r23.xyz, -r19.yzwy, v5.xyzx
        and r6.w, r20.w, l(0x0000ffff)
        ubfe r8.w, l(6), l(25), r20.w
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r24.xyzw, r6.w, l(0), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r25.xyzw, r6.w, l(16), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r26.xyzw, r6.w, l(32), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r6.w, l(48), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r6.w, l(64), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r6.w, l(80), t16.xyzw
        dp3 r9.w, r24.xyzx, r23.xyzx
        add_sat r9.w, r24.w, r9.w
        dp3 r10.x, r25.xyzx, r23.xyzx
        add_sat r10.x, r25.w, r10.x
        mul r9.w, r9.w, r10.x
        dp3 r10.x, r26.xyzx, r23.xyzx
        add_sat r10.x, r26.w, r10.x
        mul r9.w, r9.w, r10.x
        dp3 r10.x, r27.xyzx, r23.xyzx
        add_sat r10.x, r27.w, r10.x
        mul r9.w, r9.w, r10.x
        dp3 r10.x, r28.xyzx, r23.xyzx
        add_sat r10.x, r28.w, r10.x
        mul r9.w, r9.w, r10.x
        dp3 r10.x, r29.xyzx, r23.xyzx
        add_sat r10.x, r29.w, r10.x
        mul r6.x, r9.w, r10.x
        and r9.w, r7.x, l(1)
        movc r12.xy, r9.wwww, r6.xyxx, r6.zxzz
        mov r6.x, r7.x
        mov r24.xy, r12.xyxx
        mov r9.w, l(1)
        loop 
          ige r10.x, r9.w, r8.w
          breakc_nz r10.x
          iadd r10.x, r6.w, r9.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r25.xyzw, r10.x, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r26.xyzw, r10.x, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r10.x, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r10.x, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r10.x, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r10.x, l(80), t16.xyzw
          dp3 r10.x, r25.xyzx, r23.xyzx
          add_sat r10.x, r25.w, r10.x
          mul r10.x, r10.x, r24.x
          dp3 r13.w, r26.xyzx, r23.xyzx
          add_sat r13.w, r26.w, r13.w
          mul r10.x, r10.x, r13.w
          dp3 r13.w, r27.xyzx, r23.xyzx
          add_sat r13.w, r27.w, r13.w
          mul r10.x, r10.x, r13.w
          dp3 r13.w, r28.xyzx, r23.xyzx
          add_sat r13.w, r28.w, r13.w
          mul r10.x, r10.x, r13.w
          dp3 r13.w, r29.xyzx, r23.xyzx
          add_sat r13.w, r29.w, r13.w
          mul r10.x, r10.x, r13.w
          dp3 r13.w, r30.xyzx, r23.xyzx
          add_sat r13.w, r30.w, r13.w
          mul r24.x, r10.x, r13.w
          ushr r15.w, r6.x, l(2)
          ubfe r19.w, l(1), l(2), r6.x
          and r21.w, r15.w, l(2)
          max r22.w, r24.x, r24.y
          mad r10.x, -r10.x, r13.w, l(1.000000)
          mul r10.x, r10.x, r24.y
          movc r12.w, r21.w, r10.x, r22.w
          movc r24.xy, r19.wwww, r24.xyxx, r12.zwzz
          iadd r9.w, r9.w, l(1)
          mov r6.x, r15.w
        endloop 
        mov_sat r24.y, r24.y
        mul r6.x, r7.y, r24.y
        lt r6.w, l(0.000000), r6.x
        if_nz r6.w
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r5.z, l(16), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r5.z, l(32), t15.yxwz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r5.z, l(48), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r5.z, l(64), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r5.z, l(80), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r5.z, l(132), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r5.z, l(148), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r5.z, l(164), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r5.z, l(180), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r5.z, l(196), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xy, r5.z, l(212), t15.xyxx
          mad r18.z, r24.y, r7.y, r18.z
          mul r5.z, r20.z, r6.x
          mov r20.z, r30.z
          dp3 r6.x, r11.xyzx, r20.xyzx
          dp3 r6.w, r23.xyzx, r20.xyzx
          add r6.w, -r30.w, r6.w
          ge r7.x, r6.w, l(0.000000)
          max r6.w, |r6.w|, l(100.000000)
          movc r6.w, r7.x, r6.w, -r6.w
          max r6.x, -r6.x, l(0.00000010)
          div r6.x, r6.w, r6.x
          min r6.x, |r6.x|, l(131072.000000)
          mov r30.z, r31.z
          dp3 r6.w, r11.xyzx, r30.xyzx
          dp3 r7.x, r23.xyzx, r30.xyzx
          add r7.x, -r31.w, r7.x
          ge r7.y, r7.x, l(0.000000)
          max r7.x, |r7.x|, l(100.000000)
          movc r7.x, r7.y, r7.x, -r7.x
          max r6.w, -r6.w, l(0.00000010)
          div r6.w, r7.x, r6.w
          min r6.x, |r6.w|, r6.x
          mov r31.z, r32.z
          dp3 r6.w, r11.xyzx, r31.xyzx
          dp3 r7.x, r23.xyzx, r31.xyzx
          add r7.x, -r32.w, r7.x
          ge r7.y, r7.x, l(0.000000)
          max r7.x, |r7.x|, l(100.000000)
          movc r7.x, r7.y, r7.x, -r7.x
          max r6.w, -r6.w, l(0.00000010)
          div r6.w, r7.x, r6.w
          min r6.x, |r6.w|, r6.x
          mov r32.z, r33.z
          dp3 r6.w, r11.xyzx, r32.xyzx
          dp3 r7.x, r23.xyzx, r32.xyzx
          add r7.x, -r33.w, r7.x
          ge r7.y, r7.x, l(0.000000)
          max r7.x, |r7.x|, l(100.000000)
          movc r7.x, r7.y, r7.x, -r7.x
          max r6.w, -r6.w, l(0.00000010)
          div r6.w, r7.x, r6.w
          min r6.x, |r6.w|, r6.x
          mov r33.z, r34.x
          dp3 r6.w, r11.xyzx, r33.xyzx
          dp3 r7.x, r23.xyzx, r33.xyzx
          add r7.x, -r34.y, r7.x
          ge r7.y, r7.x, l(0.000000)
          max r7.x, |r7.x|, l(100.000000)
          movc r7.x, r7.y, r7.x, -r7.x
          max r6.w, -r6.w, l(0.00000010)
          div r6.w, r7.x, r6.w
          min r6.x, |r6.w|, r6.x
          mov r35.zw, r34.zzzw
          dp3 r6.w, r11.zxyz, r35.xzwx
          dp3 r7.x, r23.zxyz, r35.xzwx
          add r7.x, -r35.y, r7.x
          ge r7.y, r7.x, l(0.000000)
          max r7.x, |r7.x|, l(100.000000)
          movc r7.x, r7.y, r7.x, -r7.x
          max r6.w, -r6.w, l(0.00000010)
          div r6.w, r7.x, r6.w
          min r6.x, |r6.w|, r6.x
          mov r20.x, r27.w
          mov r20.yz, r28.zzwz
          add r12.xyw, r23.xyxz, r20.xyxz
          mad r12.xyw, r11.xyxz, r6.xxxx, r12.xyxw
          dp3 r6.w, r12.xywx, r12.xywx
          sqrt r6.w, r6.w
          div r6.x, r6.x, r6.w
          add r6.x, r6.x, r6.x
          sqrt r6.x, r6.x
          add r6.x, r6.x, l(4.155200)
          mov r19.y, r25.z
          mov r19.z, r26.x
          dp3 r30.x, r12.xywx, r19.xyzx
          mov r20.xy, r25.xwxx
          mov r20.z, r26.w
          dp3 r30.y, r12.xywx, r20.xyzx
          mov r26.x, r25.y
          dp3 r30.z, r12.xywx, r26.xyzx
          ubfe r6.w, l(9), l(16), r20.w
          utof r30.w, r6.w
          sample_l_indexable(texturecubearray)(float,float,float,float) r12.xyw, r30.xyzw, t8.xywz, s2, r6.x
          dp3 r25.x, r23.xyzx, r19.xyzx
          dp3 r25.y, r23.xyzx, r20.xyzx
          dp3 r25.z, r23.xyzx, r26.xyzx
          mad_sat r23.xyz, r25.xyzx, r27.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
          mov r28.z, r29.x
          mad r23.xyz, r23.xyzx, r28.xyzx, r29.yzwy
          dp3 r30.x, r4.xyzx, r19.xyzx
          dp3 r30.y, r4.xyzx, r20.xyzx
          dp3 r30.z, r4.xyzx, r26.xyzx
          lt r19.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r30.xyzx
          movc r8.z, r19.x, l(0), l(0.500000)
          add r20.xyz, r8.xyzx, r23.xyzx
          sample_l_indexable(texture3d)(float,float,float,float) r20.xyz, r20.xyzx, t17.xyzw, s4, l(0.000000)
          mul r24.xzw, r30.xxyz, r30.xxyz
          mul r24.xzw, r5.zzzz, r24.xxzw
          movc r9.z, r19.y, l(0), l(0.500000)
          add r19.xyw, r9.xyxz, r23.xyxz
          sample_l_indexable(texture3d)(float,float,float,float) r19.xyw, r19.xywx, t18.xywz, s4, l(0.000000)
          mul r19.xyw, r24.zzzz, r19.xyxw
          mad r19.xyw, r20.xyxz, r24.xxxx, r19.xyxw
          movc r13.z, r19.z, l(0), l(0.500000)
          add r20.xyz, r13.xyzx, r23.xyzx
          sample_l_indexable(texture3d)(float,float,float,float) r20.xyz, r20.xyzx, t19.xyzw, s4, l(0.000000)
          mad r19.xyz, r20.xyzx, r24.wwww, r19.xywx
          sample_l_indexable(texturecubearray)(float,float,float,float) r20.xyz, r30.xyzw, t8.xyzw, s2, l(6.000000)
          mul r23.xyz, r19.xyzx, r20.xyzx
          dp3 r6.x, r23.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r17.xyz, r19.xyzx, r20.xyzx, r17.xyzx
          mul r6.w, r6.x, l(1.268160)
          mul r12.xyw, r5.zzzz, r12.xyxw
          dp3 r5.z, r12.xywx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r5.z, r6.x, l(1.268160), r5.z
          div r5.z, r6.w, r5.z
          mov r19.x, r17.w
          mov r19.yz, r18.xxyx
          mad r18.xyw, r12.ywyx, r5.zzzz, r19.yzyx
          mov r17.w, r18.w
        endif 
      endif 
    endif 
  endloop 
  mov r14.xyzw, r17.xyzw
  mov r16.yzw, r18.xxyz
  iadd r3.w, r3.w, l(32)
endloop 
lt r2.z, r16.w, l(1.000000)
if_nz r2.z
  mov r3.xy, l(0,0,0,0)
  mov r5.w, l(0)
  mov r6.yz, l(0,0,1.000000,0)
  mov r8.xy, l(0,0,0,0)
  mov r7.x, l(1.000000)
  mov r9.xy, l(0,0,0,0)
  mov r12.xy, l(0,0,0,0)
  mov r13.x, r14.w
  mov r13.yzw, r16.yyzw
  mov r17.xyz, r14.xyzx
  mov r2.z, r16.w
  mov r2.w, l(0)
  loop 
    uge r3.w, r2.w, r1.w
    breakc_nz r3.w
    ushr r3.z, r2.w, l(5)
    iadd r5.xyz, r3.xyzx, r15.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r3.z, r5.xyzw, t7.yzxw
    ieq r3.w, r2.x, r2.w
    ubfe r5.x, r2.y, l(0), r3.z
    movc r3.z, r3.w, r5.x, r3.z
    iadd r3.w, r2.w, cb2[0].x
    mov r18.xyzw, r13.xyzw
    mov r5.xyz, r17.xyzx
    mov r6.w, r2.z
    mov r8.w, r3.z
    loop 
      breakc_z r8.w
      firstbit_lo r9.w, r8.w
      ishl r10.x, l(1), r9.w
      and r12.w, r8.w, r10.x
      if_nz r12.w
        xor r8.w, r8.w, r10.x
        iadd r10.x, r3.w, r9.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r19.xyzw, r10.x, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r20.xy, r10.x, l(16), t11.xyxx
        add r19.xyz, r19.xyzx, -v5.xyzx
        mov r20.z, r19.w
        lt r19.xyz, |r19.xyzx|, r20.zxyz
        and r10.x, r19.y, r19.x
        and r10.x, r19.z, r10.x
        if_nz r10.x
          iadd r9.w, r2.w, r9.w
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r19.xyzw, r9.w, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r20.xy, r9.w, l(96), t15.xyxx
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r23.xyzw, r9.w, l(116), t15.zwxy
          add r24.xyz, -r19.yzwy, v5.xyzx
          and r10.x, r23.w, l(0x0000ffff)
          ubfe r12.w, l(6), l(25), r23.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r25.xyzw, r10.x, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r26.xyzw, r10.x, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r10.x, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r10.x, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r10.x, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r10.x, l(80), t16.xyzw
          dp3 r15.w, r25.xyzx, r24.xyzx
          add_sat r15.w, r25.w, r15.w
          dp3 r17.w, r26.xyzx, r24.xyzx
          add_sat r17.w, r26.w, r17.w
          mul r15.w, r15.w, r17.w
          dp3 r17.w, r27.xyzx, r24.xyzx
          add_sat r17.w, r27.w, r17.w
          mul r15.w, r15.w, r17.w
          dp3 r17.w, r28.xyzx, r24.xyzx
          add_sat r17.w, r28.w, r17.w
          mul r15.w, r15.w, r17.w
          dp3 r17.w, r29.xyzx, r24.xyzx
          add_sat r17.w, r29.w, r17.w
          mul r15.w, r15.w, r17.w
          dp3 r17.w, r30.xyzx, r24.xyzx
          add_sat r17.w, r30.w, r17.w
          mul r6.x, r15.w, r17.w
          and r15.w, r20.x, l(1)
          movc r20.zw, r15.wwww, r6.xxxy, r6.zzzx
          mov r6.x, r20.x
          mov r25.xy, r20.zwzz
          mov r15.w, l(1)
          loop 
            ige r17.w, r15.w, r12.w
            breakc_nz r17.w
            iadd r17.w, r10.x, r15.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r26.xyzw, r17.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r17.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r17.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r17.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r17.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r17.w, l(80), t16.xyzw
            dp3 r17.w, r26.xyzx, r24.xyzx
            add_sat r17.w, r26.w, r17.w
            mul r17.w, r17.w, r25.x
            dp3 r19.w, r27.xyzx, r24.xyzx
            add_sat r19.w, r27.w, r19.w
            mul r17.w, r17.w, r19.w
            dp3 r19.w, r28.xyzx, r24.xyzx
            add_sat r19.w, r28.w, r19.w
            mul r17.w, r17.w, r19.w
            dp3 r19.w, r29.xyzx, r24.xyzx
            add_sat r19.w, r29.w, r19.w
            mul r17.w, r17.w, r19.w
            dp3 r19.w, r30.xyzx, r24.xyzx
            add_sat r19.w, r30.w, r19.w
            mul r17.w, r17.w, r19.w
            dp3 r19.w, r31.xyzx, r24.xyzx
            add_sat r19.w, r31.w, r19.w
            mul r25.x, r17.w, r19.w
            ushr r21.w, r6.x, l(2)
            ubfe r22.w, l(1), l(2), r6.x
            and r24.w, r21.w, l(2)
            max r25.z, r25.x, r25.y
            mad r17.w, -r17.w, r19.w, l(1.000000)
            mul r17.w, r17.w, r25.y
            movc r7.y, r24.w, r17.w, r25.z
            movc r25.xy, r22.wwww, r25.xyxx, r7.xyxx
            iadd r15.w, r15.w, l(1)
            mov r6.x, r21.w
          endloop 
          add_sat r6.x, -r6.w, r25.y
          mul r7.y, r20.y, r6.x
          lt r10.x, l(0.000000), r7.y
          if_nz r10.x
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r9.w, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r9.w, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r9.w, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r9.w, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r9.w, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r9.w, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r9.w, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r9.w, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r9.w, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r9.w, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xy, r9.w, l(212), t15.xyxx
            mad r18.w, r6.x, r20.y, r18.w
            mul r6.x, r23.z, r7.y
            mov r23.z, r31.z
            dp3 r7.y, r11.xyzx, r23.xyzx
            dp3 r9.w, r24.xyzx, r23.xyzx
            add r9.w, -r31.w, r9.w
            ge r10.x, r9.w, l(0.000000)
            max r9.w, |r9.w|, l(100.000000)
            movc r9.w, r10.x, r9.w, -r9.w
            max r7.y, -r7.y, l(0.00000010)
            div r7.y, r9.w, r7.y
            min r7.y, |r7.y|, l(131072.000000)
            mov r31.z, r32.z
            dp3 r9.w, r11.xyzx, r31.xyzx
            dp3 r10.x, r24.xyzx, r31.xyzx
            add r10.x, -r32.w, r10.x
            ge r12.w, r10.x, l(0.000000)
            max r10.x, |r10.x|, l(100.000000)
            movc r10.x, r12.w, r10.x, -r10.x
            max r9.w, -r9.w, l(0.00000010)
            div r9.w, r10.x, r9.w
            min r7.y, r7.y, |r9.w|
            mov r32.z, r33.z
            dp3 r9.w, r11.xyzx, r32.xyzx
            dp3 r10.x, r24.xyzx, r32.xyzx
            add r10.x, -r33.w, r10.x
            ge r12.w, r10.x, l(0.000000)
            max r10.x, |r10.x|, l(100.000000)
            movc r10.x, r12.w, r10.x, -r10.x
            max r9.w, -r9.w, l(0.00000010)
            div r9.w, r10.x, r9.w
            min r7.y, r7.y, |r9.w|
            mov r33.z, r34.z
            dp3 r9.w, r11.xyzx, r33.xyzx
            dp3 r10.x, r24.xyzx, r33.xyzx
            add r10.x, -r34.w, r10.x
            ge r12.w, r10.x, l(0.000000)
            max r10.x, |r10.x|, l(100.000000)
            movc r10.x, r12.w, r10.x, -r10.x
            max r9.w, -r9.w, l(0.00000010)
            div r9.w, r10.x, r9.w
            min r7.y, r7.y, |r9.w|
            mov r34.z, r35.x
            dp3 r9.w, r11.xyzx, r34.xyzx
            dp3 r10.x, r24.xyzx, r34.xyzx
            add r10.x, -r35.y, r10.x
            ge r12.w, r10.x, l(0.000000)
            max r10.x, |r10.x|, l(100.000000)
            movc r10.x, r12.w, r10.x, -r10.x
            max r9.w, -r9.w, l(0.00000010)
            div r9.w, r10.x, r9.w
            min r7.y, r7.y, |r9.w|
            mov r36.zw, r35.zzzw
            dp3 r9.w, r11.zxyz, r36.xzwx
            dp3 r10.x, r24.zxyz, r36.xzwx
            add r10.x, -r36.y, r10.x
            ge r12.w, r10.x, l(0.000000)
            max r10.x, |r10.x|, l(100.000000)
            movc r10.x, r12.w, r10.x, -r10.x
            max r9.w, -r9.w, l(0.00000010)
            div r9.w, r10.x, r9.w
            min r7.y, r7.y, |r9.w|
            mov r20.x, r28.w
            mov r20.yz, r29.zzwz
            add r20.xyz, r24.xyzx, r20.xyzx
            mad r20.xyz, r11.xyzx, r7.yyyy, r20.xyzx
            dp3 r9.w, r20.xyzx, r20.xyzx
            sqrt r9.w, r9.w
            div r7.y, r7.y, r9.w
            add r7.y, r7.y, r7.y
            sqrt r7.y, r7.y
            add r7.y, r7.y, l(4.155200)
            mov r19.y, r26.z
            mov r19.z, r27.x
            dp3 r31.x, r20.xyzx, r19.xyzx
            mov r23.xy, r26.xwxx
            mov r23.z, r27.w
            dp3 r31.y, r20.xyzx, r23.xyzx
            mov r27.x, r26.y
            dp3 r31.z, r20.xyzx, r27.xyzx
            ubfe r9.w, l(9), l(16), r23.w
            utof r31.w, r9.w
            sample_l_indexable(texturecubearray)(float,float,float,float) r20.xyz, r31.xyzw, t8.xyzw, s2, r7.y
            dp3 r26.x, r24.xyzx, r19.xyzx
            dp3 r26.y, r24.xyzx, r23.xyzx
            dp3 r26.z, r24.xyzx, r27.xyzx
            mad_sat r24.xyz, r26.xyzx, r28.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
            mov r29.z, r30.x
            mad r24.xyz, r24.xyzx, r29.xyzx, r30.yzwy
            dp3 r31.x, r4.xyzx, r19.xyzx
            dp3 r31.y, r4.xyzx, r23.xyzx
            dp3 r31.z, r4.xyzx, r27.xyzx
            lt r19.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r31.xyzx
            movc r8.z, r19.x, l(0), l(0.500000)
            add r23.xyz, r8.xyzx, r24.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r23.xyz, r23.xyzx, t17.xyzw, s4, l(0.000000)
            mul r25.xzw, r31.xxyz, r31.xxyz
            mul r25.xzw, r6.xxxx, r25.xxzw
            movc r9.z, r19.y, l(0), l(0.500000)
            add r19.xyw, r9.xyxz, r24.xyxz
            sample_l_indexable(texture3d)(float,float,float,float) r19.xyw, r19.xywx, t18.xywz, s4, l(0.000000)
            mul r19.xyw, r25.zzzz, r19.xyxw
            mad r19.xyw, r23.xyxz, r25.xxxx, r19.xyxw
            movc r12.z, r19.z, l(0), l(0.500000)
            add r23.xyz, r12.xyzx, r24.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r23.xyz, r23.xyzx, t19.xyzw, s4, l(0.000000)
            mad r19.xyz, r23.xyzx, r25.wwww, r19.xywx
            sample_l_indexable(texturecubearray)(float,float,float,float) r23.xyz, r31.xyzw, t8.xyzw, s2, l(6.000000)
            mul r24.xyz, r19.xyzx, r23.xyzx
            dp3 r7.y, r24.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r5.xyz, r19.xyzx, r23.xyzx, r5.xyzx
            mul r8.z, r7.y, l(1.268160)
            mul r19.xyz, r6.xxxx, r20.xyzx
            dp3 r6.x, r19.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r6.x, r7.y, l(1.268160), r6.x
            div r6.x, r8.z, r6.x
            mad r18.xyz, r19.xyzx, r6.xxxx, r18.xyzx
          endif 
        endif 
      endif 
    endloop 
    mov r13.xyzw, r18.xyzw
    mov r17.xyz, r5.xyzx
    iadd r2.w, r2.w, l(32)
  endloop 
  mov r16.xyzw, r13.zxyw
  mov r14.xyz, r17.xyzx
  mov r16.xyzw, r16.yzxw
else 
  mov r16.x, r14.w
endif 
max r1.w, r16.w, l(1.000000)
rcp r1.w, r1.w
mov_sat r16.w, r16.w
mul r2.xyz, r1.wwww, r14.xyzx
mul r3.xyz, r1.wwww, r16.xyzx
lt r2.w, r16.w, l(0.990000)
if_nz r2.w
  add r2.w, -r16.w, l(1.000000)
  mul r2.w, r2.w, cb2[19].x
  add r5.xyz, v5.xyzx, -cb2[35].xyzx
  mul r6.x, r5.x, cb2[35].w
  mul r6.yz, r5.yyzy, cb2[36].xxyx
  add_sat r5.xyz, r6.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mul r6.xy, r5.xyxx, cb2[36].zwzz
  mul r6.z, r5.z, cb2[37].x
  add r5.xyz, r6.xyzx, cb2[37].yzwy
  lt r6.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r4.xyzx
  movc r6.xyz, r6.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
  mov r6.w, l(0)
  add r8.xyz, r5.xyzx, r6.wwxw
  sample_l_indexable(texture3d)(float,float,float,float) r8.xyz, r8.xyzx, t17.xyzw, s4, l(0.000000)
  mul r9.xyz, r4.xyzx, r4.xyzx
  mul r9.xyz, r2.wwww, r9.xyzx
  add r12.xyz, r5.xyzx, r6.wwyw
  sample_l_indexable(texture3d)(float,float,float,float) r12.xyz, r12.xyzx, t18.xyzw, s4, l(0.000000)
  mul r12.xyz, r9.yyyy, r12.xyzx
  mad r8.xyz, r8.xyzx, r9.xxxx, r12.xyzx
  add r5.xyz, r5.xyzx, r6.wwzw
  sample_l_indexable(texture3d)(float,float,float,float) r5.xyz, r5.xyzx, t19.xyzw, s4, l(0.000000)
  mad r5.xyz, r5.xyzx, r9.zzzz, r8.xyzx
  mov r4.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r4.xyz, r4.xyzw, t8.xyzw, s2, l(6.000000)
  mul r4.xyz, r4.xyzx, r5.xyzx
  dp3 r2.w, r4.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  mad r2.xyz, r14.xyzx, r1.wwww, r4.xyzx
  mov r11.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r4.xyz, r11.xyzw, t8.xyzw, s2, l(5.000000)
  mad r3.xyz, r4.xyzx, r2.wwww, r3.xyzx
endif 
mad r2.xyz, r2.xyzx, r0.wwww, r10.yzwy
mov r7.w, l(0)
add r4.xy, r7.zwzz, l(0.00781250, 0.00781250, 0.000000, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r4.xy, r4.xyxx, t5.xyzw, s2, l(0.000000)
mul r3.xyz, r0.wwww, r3.xyzx
mad r4.xzw, r3.xxyz, r4.xxxx, r21.xxyz
mad r3.xyz, r3.xyzx, r4.yyyy, r22.xyzx
add r5.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r4.xyz, r4.xzwx, r5.xyzx
mad r1.xyz, r3.xyzx, r1.xyzx, r4.xyzx
mad r0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
lt r0.w, l(0.000000), cb2[9].z
if_nz r0.w
  dp3 r0.w, v5.xyzx, v5.xyzx
  rsq r1.x, r0.w
  mul r1.xyz, r1.xxxx, v5.xyzx
  sqrt r0.w, r0.w
  lt r1.w, l(0.000000), cb2[13].w
  if_nz r1.w
    mad r2.xy, r0.wwww, cb2[15].xyxx, cb2[14].zwzz
    mul r2.xy, r2.xyxx, cb2[16].xyxx
    lt r1.w, l(0.010000), |v5.z|
    mul r2.zw, v5.zzzz, cb2[15].zzzw
    mul r3.xy, r2.zwzz, l(-1.442695, -1.442695, 0.000000, 0.000000)
    exp r3.xy, r3.xyxx
    add r3.xy, -r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    div r2.zw, r3.xxxy, r2.zzzw
    mul r2.zw, r2.zzzw, r2.xxxy
    movc r2.xy, r1.wwww, r2.zwzz, r2.xyxx
    mul r2.xzw, r2.xxxx, cb2[12].xxyz
    exp r2.xzw, r2.xxzw
    mul r3.xyz, r2.yyyy, cb2[12].xyzx
    exp r3.xyz, r3.xyzx
    add r3.xyz, -r2.xzwx, r3.xyzx
    mad r2.xyz, cb2[13].wwww, r3.xyzx, r2.xzwx
  else 
    mad r1.w, r0.w, cb2[15].x, cb2[14].z
    mul r1.w, r1.w, cb2[16].x
    lt r2.w, l(0.010000), |v5.z|
    mul r3.x, v5.z, cb2[15].z
    mul r3.y, r3.x, l(-1.442695)
    exp r3.y, r3.y
    add r3.y, -r3.y, l(1.000000)
    div r3.x, r3.y, r3.x
    mul r3.x, r1.w, r3.x
    movc r1.w, r2.w, r3.x, r1.w
    mul r3.xyz, r1.wwww, cb2[12].xyzx
    exp r2.xyz, r3.xyzx
  endif 
  mad r2.xyz, r2.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r2.xyz, r2.xyzx, -cb2[9].zzzz
  dp3 r1.x, cb2[7].yzwy, -r1.xyzx
  mad r1.y, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r1.z, cb2[8].w, -r1.x, l(1.000000)
  mul r1.z, r1.z, r1.z
  mul r1.z, r1.z, l(12.566371)
  div r1.y, r1.y, r1.z
  add r0.w, r0.w, -cb2[10].w
  mul_sat r0.w, r0.w, cb2[11].w
  mul r0.w, r0.w, r1.y
  mov_sat r1.x, r1.x
  mad r1.x, r1.x, r1.x, l(1.000000)
  mad r1.x, r1.x, l(0.05968310), l(-1.000000)
  mad r1.x, cb2[8].z, r1.x, l(1.000000)
  mul r1.yzw, r0.wwww, cb2[11].xxyz
  mad r1.xyz, r1.xxxx, cb2[10].xyzx, r1.yzwy
  mul r1.xyz, r1.xyzx, cb2[9].wwww
  add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r1.xyz, r1.xyzx, r3.xyzx
  mad r1.xyz, r0.xyzx, r2.xyzx, r1.xyzx
else 
  mul r0.w, v5.z, cb2[6].x
  mad r1.w, cb2[6].x, v5.z, cb2[5].x
  lt r2.x, |r0.w|, l(0.000100)
  min r2.y, r1.w, l(64.000000)
  mul r2.y, r2.y, l(1.442695)
  exp r2.y, r2.y
  mov_sat r2.z, cb2[6].z
  lt r2.w, r1.w, l(0.000000)
  add r1.w, r1.w, l(1.000000)
  movc r1.w, r2.w, r2.y, r1.w
  add r1.w, r1.w, -cb2[6].z
  movc r0.w, r2.x, l(1.000000), r0.w
  div r0.w, r1.w, r0.w
  movc r0.w, r2.x, r2.z, r0.w
  mul r0.w, r0.w, cb2[5].z
  dp3 r1.w, v5.xyzx, v5.xyzx
  sqrt r2.x, r1.w
  mad r0.w, r0.w, r2.x, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  rsq r1.w, r1.w
  mul r2.xyz, r1.wwww, v5.xyzx
  dp3 r1.w, cb2[7].yzwy, r2.xyzx
  mad_sat r1.w, cb2[8].y, r1.w, cb2[8].x
  add r2.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r2.xyzw, r1.wwww, r2.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r2.w
  add r2.xyz, -r0.xyzx, r2.xyzx
  mad r1.xyz, r0.wwww, r2.xyzx, r0.xyzx
endif 
mul r0.xyz, r1.xyzx, cb1[85].yyyy
ge r1.xyz, r0.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.xyz, r0.xyzx, r1.xyzx
min o0.xyz, r0.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
ret 
// Approximately 1461 instruction slots used
