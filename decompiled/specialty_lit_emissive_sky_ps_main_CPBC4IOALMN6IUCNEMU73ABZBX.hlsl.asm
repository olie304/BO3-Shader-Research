//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:42:09 2021
//
//
// Note: shader requires additional functionality:
//       Early depth-stencil
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float3 colorTint;                  // Offset:  160 Size:    12
//   float baseNormalHeight;            // Offset:  172 Size:     4
//   float2 glossRange;                 // Offset:  176 Size:     8
//   float rowCount;                    // Offset:  184 Size:     4
//   float columnCount;                 // Offset:  188 Size:     4
//   float imageTime;                   // Offset:  192 Size:     4
//   float2 rotateUVs;                  // Offset:  196 Size:     8
//   float2 scrollUVs;                  // Offset:  208 Size:     8
//   float2 scaleUVs;                   // Offset:  216 Size:     8
//   float2 offsetUVs;                  // Offset:  224 Size:     8
//   float2 zoomUVs;                    // Offset:  232 Size:     8
//   float zoomRate;                    // Offset:  240 Size:     4
//   float layerDepth;                  // Offset:  244 Size:     4
//   bool clampU;                       // Offset:  248 Size:     4
//   bool clampV;                       // Offset:  252 Size:     4
//   float2 flickerSeed;                // Offset:  256 Size:     8
//   float flickerSpeed;                // Offset:  264 Size:     4
//   float2 flickerRange;               // Offset:  272 Size:     8
//   float flickerPower;                // Offset:  280 Size:     4
//   bool relativeHDR;                  // Offset:  284 Size:     4
//   bool invertFalloff;                // Offset:  288 Size:     4
//   float hdrScale;                    // Offset:  292 Size:     4
//   float emissiveFalloffPower;        // Offset:  296 Size:     4
//   float zFeatherDistance;            // Offset:  300 Size:     4
//   float falloffBegin;                // Offset:  304 Size:     4 [unused]
//   float falloffEnd;                  // Offset:  308 Size:     4 [unused]
//   float alphaCooling;                // Offset:  312 Size:     4
//   float coolingFactor;               // Offset:  316 Size:     4
//   float uvMotionToggle1;             // Offset:  320 Size:     4
//   float2 distortionRotateUVs;        // Offset:  324 Size:     8
//   float2 distortionScrollUVs;        // Offset:  336 Size:     8
//   float2 distortionScaleUVs;         // Offset:  344 Size:     8
//   float2 distortionOffsetUVs;        // Offset:  352 Size:     8
//   float2 distortionZoomUVs;          // Offset:  360 Size:     8
//   float distortionZoomRate;          // Offset:  368 Size:     4
//   float distortionAmount;            // Offset:  372 Size:     4
//   float2 maskRotateUVs;              // Offset:  376 Size:     8
//   float2 maskScrollUVs;              // Offset:  384 Size:     8
//   float2 maskScaleUVs;               // Offset:  392 Size:     8
//   float2 maskOffsetUVs;              // Offset:  400 Size:     8
//   float2 maskZoomUVs;                // Offset:  408 Size:     8
//   float maskZoomRate;                // Offset:  416 Size:     4
//   bool noReceiveShadow;              // Offset:  420 Size:     4
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16 [unused]
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16
//   float4 debugNormalOverride;        // Offset:  960 Size:    16
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16
//   float4 debugGlossOverride;         // Offset:  992 Size:    16
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// colorSampler                      sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// normalSampler                     sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// lookupSampler                     sampler      NA          NA             s5      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// floatZSampler                     texture  float4          2d             t0      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// colorMap                          texture  float4          2d            t21      1 
// tintMask                          texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// normalMap                         texture  float4          2d            t24      1 
// flickerLookupMap                  texture  float4          2d            t25      1 
// emissiveMap                       texture  float4          2d            t26      1 
// alphaMask                         texture  float4          2d            t29      1 
// distortionMap                     texture  float4          2d            t30      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// gOit_Pixels                           UAV    uint          2d             u6      1 
// gOit_Nodes                            UAV   uint2     2darray             u7      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyz 
// COLOR                    1   x           1     NONE   float   x   
// TEXCOORD                 0    yz         1     NONE   float    yz 
// UVOFFSETS                0   xyz         2     NONE   float   xyz 
// TEXCOORD                 1   xyz         3     NONE   float   xyz 
// TEXCOORD                 2   xyz         4     NONE   float   xyz 
// TEXCOORD                 3   xyz         5     NONE   float   xyz 
// OFFPOSITION              0   xyz         6     NONE   float   xyz 
// TEXCOORD                 9   xy          7     NONE   float   xy  
// SV_IsFrontFace           0   x           8    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | forceEarlyDepthStencil
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[27], immediateIndexed
dcl_constantbuffer CB1[93], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2d (float,float,float,float) t26
dcl_resource_texture2d (float,float,float,float) t29
dcl_resource_texture2d (float,float,float,float) t30
dcl_resource_texture2darray (float,float,float,float) t31
dcl_uav_typed_texture2d (uint,uint,uint,uint) u6
dcl_uav_typed_texture2darray (uint,uint,uint,uint) u7
dcl_input_ps_siv linear noperspective v0.xyz, position
dcl_input_ps linear v1.x
dcl_input_ps linear v1.yz
dcl_input_ps constant v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xy
dcl_input_ps_sgv constant v8.x, is_front_face
dcl_output o0.xyzw
dcl_temps 48
dp3 r0.x, -v6.xyzx, -v6.xyzx
rsq r0.x, r0.x
mul r0.yzw, r0.xxxx, -v6.xxyz
dp3 r1.x, r0.yzwy, v4.xyzx
dp3 r1.y, r0.yzwy, v5.xyzx
dp3 r1.z, r0.yzwy, v3.xyzx
lt r1.w, l(0.000000), r1.z
div r1.xy, -r1.xyxx, r1.zzzz
and r1.xy, r1.xyxx, r1.wwww
add r2.xy, v1.yzyy, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r2.zw, r1.xxxy, l(0.000000, 0.000000, 0.000010, 0.000010)
mul r3.xy, r2.zwzz, cb0[21].zwzz
mad r3.xy, r2.xyxx, cb0[21].zwzz, r3.xyxx
mad r3.xy, cb0[22].xyxx, cb0[21].zwzz, r3.xyxx
mad r1.w, cb0[20].z, cb1[69].w, l(1.000000)
mul r1.w, r1.w, cb0[20].y
mul r1.w, r1.w, l(0.01745329)
sincos r4.x, r5.x, r1.w
mov r5.y, r5.x
mov r5.z, r4.x
dp2 r6.x, r5.yzyy, r3.xyxx
mov r5.x, -r4.x
dp2 r6.y, r5.xyxx, r3.xyxx
mul r3.xy, cb0[21].xyxx, cb1[69].wwww
mad r3.xy, r3.xyxx, cb0[21].zwzz, r6.xyxx
mul r1.w, cb0[23].x, cb1[69].w
sincos null, r1.w, r1.w
mad r1.w, r1.w, l(0.500000), l(0.500000)
add r1.w, -r1.w, l(1.000000)
add r3.z, -cb0[22].z, cb0[22].w
mad r1.w, r1.w, r3.z, cb0[22].z
div r3.xy, r3.xyxx, r1.wwww
add r3.xy, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r3.xy, r3.xyxx, t30.xyzw, s3
mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
lt r1.w, l(0.500000), cb0[20].x
if_nz r1.w
  mul r3.z, cb0[11].w, cb0[11].z
  mul r3.w, r3.z, cb0[12].x
  mul r4.x, r3.w, cb1[69].w
  ge r4.x, r4.x, -r4.x
  movc r4.x, r4.x, r3.w, -r3.w
  div r4.y, l(1.000000, 1.000000, 1.000000, 1.000000), r4.x
  mul r4.y, r4.y, cb1[69].w
  frc r4.y, r4.y
  mul r4.x, r4.y, r4.x
  div r3.w, r4.x, r3.w
  mul r3.z, r3.z, r3.w
  round_ne r3.z, r3.z
  div r3.w, r3.z, cb0[11].w
  mul r4.x, r3.z, cb0[11].w
  ge r4.x, r4.x, -r4.x
  movc r4.x, r4.x, cb0[11].w, -cb0[11].w
  div r4.y, l(1.000000, 1.000000, 1.000000, 1.000000), r4.x
  mul r3.z, r3.z, r4.y
  frc r3.z, r3.z
  mul r3.z, r3.z, r4.x
  round_z r3.z, r3.z
  add r3.z, r3.z, v1.y
  div r4.x, r3.z, cb0[11].w
  round_z r3.z, r3.w
  add r3.z, r3.z, v1.z
  div r4.y, r3.z, cb0[11].z
else 
  mul r3.zw, r2.zzzw, cb0[13].zzzw
  mad r3.zw, r2.xxxy, cb0[13].zzzw, r3.zzzw
  mad r3.zw, cb0[14].xxxy, cb0[13].zzzw, r3.zzzw
  mad r4.z, cb0[12].z, cb1[69].w, l(1.000000)
  mul r4.z, r4.z, cb0[12].y
  mul r4.z, r4.z, l(0.01745329)
  sincos r5.x, r6.x, r4.z
  mov r6.y, r6.x
  mov r6.z, r5.x
  dp2 r7.x, r6.yzyy, r3.zwzz
  mov r6.x, -r5.x
  dp2 r7.y, r6.xyxx, r3.zwzz
  mul r3.zw, cb0[13].xxxy, cb1[69].wwww
  mad r3.zw, r3.zzzw, cb0[13].zzzw, r7.xxxy
  mul r4.z, cb0[15].x, cb1[69].w
  sincos null, r4.z, r4.z
  mad r4.z, r4.z, l(0.500000), l(0.500000)
  add r4.z, -r4.z, l(1.000000)
  add r4.w, -cb0[14].z, cb0[14].w
  mad r4.z, r4.z, r4.w, cb0[14].z
  div r3.zw, r3.zzzw, r4.zzzz
  add r3.zw, r3.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
  mov_sat r4.zw, r3.zzzw
  movc r4.xy, cb0[15].zwzz, r4.zwzz, r3.zwzz
endif 
mad r3.zw, r3.xxxy, cb0[23].yyyy, r4.xxxy
sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r3.zwzz, t21.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r5.x, r3.zwzz, t22.xyzw, s1
add r5.yzw, cb0[10].xxyz, l(0.000000, -1.000000, -1.000000, -1.000000)
mad r5.xyz, r5.xxxx, r5.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r4.xyz, r4.xyzx, r5.xyzx
mul r5.x, r4.w, v1.x
add r5.y, -cb0[11].x, cb0[11].y
mul_sat r5.z, cb0[11].y, l(0.05882353)
sample_indexable(texture2d)(float,float,float,float) r6.xyz, r3.zwzz, t24.xyzw, s3
add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.000000, 0.000000)
mad r6.xyz, cb0[10].wwww, r6.xyzx, l(0.500000, 0.500000, 0.000000, 0.000000)
mad r6.xy, r6.xyxx, l(1.99218750, 1.99218750, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r5.w, r6.xyxx, r6.xyxx
add r5.w, -r5.w, l(1.000000)
max r5.w, r5.w, l(0.000000)
sqrt r5.w, r5.w
mul r6.z, r6.z, r6.z
mul r6.z, r6.z, l(0.33333334)
min r6.z, r6.z, l(1.000000)
movc r6.w, v8.x, l(1.000000), l(-1.000000)
dp3 r7.x, v3.xyzx, v3.xyzx
rsq r7.x, r7.x
mul r7.xyz, r7.xxxx, v3.xyzx
mul r7.xyz, r6.wwww, r7.xyzx
dp3 r7.w, v4.xyzx, v4.xyzx
rsq r7.w, r7.w
mul r8.xyz, r7.wwww, v4.xyzx
mul r8.xyz, r6.wwww, r8.xyzx
dp3 r7.w, v5.xyzx, v5.xyzx
rsq r7.w, r7.w
mul r9.xyz, r7.wwww, v5.xyzx
mul r9.xyz, r6.wwww, r9.xyzx
mul r5.z, r5.z, l(-17.000000)
exp r5.z, r5.z
add r5.z, r5.z, r6.z
log r5.z, r5.z
mul r5.z, r5.z, l(-0.05882353)
mul r9.xyz, r6.yyyy, r9.xyzx
mad r6.xyw, r8.xyxz, r6.xxxx, r9.xyxz
mad r6.xyw, r7.xyxz, r5.wwww, r6.xyxw
dp3 r5.w, r6.xywx, r6.xywx
rsq r5.w, r5.w
mul r6.xyw, r5.wwww, r6.xyxw
mad r5.y, cb1[62].x, r5.y, cb0[11].x
mul_sat r5.y, r5.y, l(0.05882353)
mul r5.y, r5.y, l(-17.000000)
exp r5.y, r5.y
add r5.y, r5.y, r6.z
log r5.y, r5.y
mul r5.y, r5.y, l(-0.05882353)
max r5.yz, r5.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r5.w, l(0.000000), cb1[64].w
if_nz r5.w
  ftoi r5.w, cb1[64].w
  lod r6.z, r3.zwzz, t21.y, s1
  lod r7.x, r3.zwzz, t21.x, s1
  lt r6.z, r6.z, r7.x
  lt r7.x, l(0.000000), r7.x
  and r7.yzw, r5.wwww, l(0, 1, 2, 4)
  movc r8.xyz, r7.yyyy, l(1.000000,0,1.000000,0), r4.xyzx
  movc r9.xyz, r7.zzzz, l(0,1.000000,1.000000,0), r4.xyzx
  movc r7.xyz, r7.xxxx, r8.xyzx, r9.xyzx
  movc r8.xyz, r7.wwww, l(0,1.000000,0,0), r4.xyzx
  movc r4.xyz, r6.zzzz, r7.xyzx, r8.xyzx
endif 
add r7.xyz, -r4.xyzx, cb1[58].xyzx
mad r4.xyz, cb1[58].wwww, r7.xyzx, r4.xyzx
mad r4.w, -r4.w, v1.x, cb1[59].x
mad r4.w, cb1[59].w, r4.w, r5.x
add r7.xyz, cb1[61].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r7.xyz, cb1[61].wwww, r7.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
add r5.x, -r5.z, r5.y
mad r5.y, cb1[62].w, r5.x, r5.z
add r5.z, cb1[63].x, l(-1.000000)
mad r5.z, cb1[63].w, r5.z, l(1.000000)
movc r8.xyz, v8.xxxx, v3.xyzx, -v3.xyzx
dp3 r5.w, r8.xyzx, r8.xyzx
rsq r5.w, r5.w
mad r8.xyz, r8.xyzx, r5.wwww, -r6.xywx
mad r6.xyz, cb1[60].wwww, r8.xyzx, r6.xywx
if_nz r1.w
  mul r1.w, cb0[11].w, cb0[11].z
  mul r5.w, r1.w, cb0[12].x
  mul r7.w, r5.w, cb1[69].w
  ge r7.w, r7.w, -r7.w
  movc r7.w, r7.w, r5.w, -r5.w
  div r8.x, l(1.000000, 1.000000, 1.000000, 1.000000), r7.w
  mul r8.x, r8.x, cb1[69].w
  frc r8.x, r8.x
  mul r7.w, r7.w, r8.x
  div r5.w, r7.w, r5.w
  mul r1.w, r1.w, r5.w
  round_ne r1.w, r1.w
  div r5.w, r1.w, cb0[11].w
  mul r7.w, r1.w, cb0[11].w
  ge r7.w, r7.w, -r7.w
  movc r7.w, r7.w, cb0[11].w, -cb0[11].w
  div r8.x, l(1.000000, 1.000000, 1.000000, 1.000000), r7.w
  mul r1.w, r1.w, r8.x
  frc r1.w, r1.w
  mul r1.w, r1.w, r7.w
  round_z r1.w, r1.w
  add r1.w, r1.w, r3.z
  div r8.x, r1.w, cb0[11].w
  round_z r1.w, r5.w
  add r1.w, r1.w, r3.w
  div r8.y, r1.w, cb0[11].z
else 
  add r3.zw, r3.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
  add r1.w, cb0[15].y, l(0.000010)
  mul r1.xy, r1.wwww, r1.xyxx
  mul r1.xy, r1.xyxx, cb0[13].zwzz
  mad r1.xy, r3.zwzz, cb0[13].zwzz, r1.xyxx
  mad r1.xy, cb0[14].xyxx, cb0[13].zwzz, r1.xyxx
  mad r1.w, cb0[12].z, cb1[69].w, l(1.000000)
  mul r1.w, r1.w, cb0[12].y
  mul r1.w, r1.w, l(0.01745329)
  sincos r9.x, r10.x, r1.w
  mov r10.y, r10.x
  mov r10.z, r9.x
  dp2 r11.x, r10.yzyy, r1.xyxx
  mov r10.x, -r9.x
  dp2 r11.y, r10.xyxx, r1.xyxx
  mul r1.xy, cb0[13].xyxx, cb1[69].wwww
  mad r1.xy, r1.xyxx, cb0[13].zwzz, r11.xyxx
  mul r1.w, cb0[15].x, cb1[69].w
  sincos null, r1.w, r1.w
  mad r1.w, r1.w, l(0.500000), l(0.500000)
  add r1.w, -r1.w, l(1.000000)
  add r3.z, -cb0[14].z, cb0[14].w
  mad r1.w, r1.w, r3.z, cb0[14].z
  div r1.xy, r1.xyxx, r1.wwww
  add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  mov_sat r3.zw, r1.xxxy
  movc r8.xy, cb0[15].zwzz, r3.zwzz, r1.xyxx
endif 
mad r1.xy, r3.xyxx, cb0[23].yyyy, r8.xyxx
sample_indexable(texture2d)(float,float,float,float) r8.xyzw, r1.xyxx, t26.xyzw, s1
mul r1.xyw, r8.xyxz, cb0[10].xyxz
mov_sat r8.xyz, r1.xywx
log r8.xyz, r8.xyzx
mul r8.xyz, r8.xyzx, cb0[19].zzzz
exp r8.xyz, r8.xyzx
mov_sat r3.z, r1.z
log r3.w, r3.z
mul r3.w, r3.w, cb0[18].z
exp r3.w, r3.w
add r3.z, -r3.z, l(1.000000)
log r3.z, r3.z
mul r3.z, r3.z, cb0[18].z
exp r3.z, r3.z
movc r3.z, cb0[18].x, r3.z, r3.w
eq r9.xy, cb0[18].zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
movc r3.z, r9.x, l(1.000000), r3.z
mul r3.w, r8.w, cb0[18].y
mul r3.z, r3.z, r3.w
mul r1.xyw, r1.xyxw, r3.zzzz
mul r8.xyz, r3.zzzz, r8.xyzx
add r3.z, v2.y, v2.x
add r3.z, r3.z, v2.z
add r3.z, r3.z, cb0[16].y
frc r3.z, r3.z
mad r10.y, cb1[69].w, cb0[16].z, r3.z
mov r10.x, cb0[16].x
sample_l_indexable(texture2d)(float,float,float,float) r3.z, r10.xyxx, t25.yzxw, s5, l(0.000000)
log r3.z, |r3.z|
mul r3.z, r3.z, cb0[17].z
exp r3.z, r3.z
add r3.w, -cb0[17].x, cb0[17].y
mad r3.z, r3.z, r3.w, cb0[17].x
mul r9.xzw, r1.xxyw, r3.zzzz
div r9.xzw, r9.xxzw, cb0[18].yyyy
dp3_sat r3.w, r9.xzwx, l(0.299000, 0.587000, 0.114000, 0.000000)
add r3.w, r3.w, r4.w
mul r2.zw, r2.zzzw, cb0[24].zzzw
mad r2.xy, r2.xyxx, cb0[24].zwzz, r2.zwzz
mad r2.xy, cb0[25].xyxx, cb0[24].zwzz, r2.xyxx
mad r2.z, cb1[69].w, cb0[23].w, l(1.000000)
mul r2.z, r2.z, cb0[23].z
mul r2.z, r2.z, l(0.01745329)
sincos r9.x, r10.x, r2.z
mov r10.y, r10.x
mov r10.z, r9.x
dp2 r11.x, r10.yzyy, r2.xyxx
mov r10.x, -r9.x
dp2 r11.y, r10.xyxx, r2.xyxx
mul r2.xy, cb0[24].xyxx, cb1[69].wwww
mad r2.xy, r2.xyxx, cb0[24].zwzz, r11.xyxx
mul r2.z, cb0[26].x, cb1[69].w
sincos null, r2.z, r2.z
mad r2.z, r2.z, l(0.500000), l(0.500000)
add r2.z, -r2.z, l(1.000000)
add r2.w, -cb0[25].z, cb0[25].w
mad r2.z, r2.z, r2.w, cb0[25].z
div r2.xy, r2.xyxx, r2.zzzz
add r2.xy, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
mov_sat r2.zw, r2.xxxy
movc r2.xy, cb0[15].zwzz, r2.zwzz, r2.xyxx
mad r2.xy, r3.xyxx, cb0[23].yyyy, r2.xyxx
sample_indexable(texture2d)(float,float,float,float) r2.x, r2.xyxx, t29.xyzw, s1
mul r2.y, r2.x, r3.w
mul r1.z, r1.z, r1.z
mad_sat r1.z, r1.z, v7.x, v7.y
mul r1.z, r1.z, r2.y
ftoi r10.xy, v0.xyxx
mov r10.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r2.y, r10.xyzw, t0.yxzw
ge r2.z, r2.y, l(0.984375)
mul r2.w, r2.y, l(1.01587307)
mad r2.y, r2.y, l(64.000000), l(-63.000000)
movc r2.y, r2.z, r2.y, r2.w
max r2.y, r2.y, l(0.00000001)
ge r2.z, v0.z, l(0.984375)
mul r2.w, v0.z, l(1.01587307)
mad r3.x, v0.z, l(64.000000), l(-63.000000)
movc r2.z, r2.z, r3.x, r2.w
max r2.z, r2.z, l(0.00000001)
rcp r2.yz, r2.yyzy
div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[18].w
movc r2.w, r9.y, l(60000.000000), r2.w
add r2.y, -r2.z, r2.y
mul_sat r2.y, r2.w, r2.y
mul r9.w, r1.z, r2.y
ftou r2.yw, v0.xxxy
ine r1.z, cb1[92].x, l(0)
utof r3.xy, r2.wyww
dp2 r3.w, r3.yxyy, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r3.w, r3.w
mul r3.w, r3.w, l(52.982918)
frc r3.w, r3.w
mad r3.w, r3.w, l(6.28318548), cb1[70].w
sincos r10.x, r11.x, r3.w
dp2 r3.x, r3.xyxx, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r3.x, r3.x
mul r3.x, r3.x, l(52.982918)
frc r3.x, r3.x
mad r3.x, r3.x, l(6.28318548), cb1[70].w
sincos r3.x, r12.x, r3.x
dp3_sat r5.x, r6.xyzx, r0.yzwy
dp3 r3.y, -r0.yzwy, r6.xyzx
add r3.y, r3.y, r3.y
mad r13.xyz, r6.xyzx, -r3.yyyy, -r0.yzwy
mul r3.y, r5.y, l(17.000000)
exp r3.y, r3.y
add r3.y, r3.y, l(2.000000)
div r3.y, l(2.000000), r3.y
sqrt r3.w, r3.y
add r4.w, -r5.y, l(1.000000)
mul r5.w, r4.w, l(5.000000)
mad r7.w, r4.w, l(5.000000), l(-2.500000)
mul_sat r7.w, r7.w, l(0.400000)
mul r7.w, r7.w, l(100.000000)
mad r10.zw, -r4.wwww, l(0.000000, 0.000000, 10.000000, 5.000000), l(0.000000, 0.000000, 6.857410, 7.085000)
exp r8.w, r10.z
mul r8.w, r5.x, r8.w
mul r8.w, r8.w, l(9.136810)
mul r10.z, r4.w, r5.w
mad r10.z, -r10.z, l(2.015905), r10.w
exp r10.z, r10.z
mul r10.z, r5.x, r10.z
mul r10.z, r10.z, l(9.708090)
max r8.w, r8.w, r10.z
max r8.w, r8.w, l(1.268160)
mul r2.z, r2.z, l(0.00781250)
min r2.z, r2.z, l(15.000000)
ftou r2.z, r2.z
ushr r14.xy, r2.ywyy, l(6, 6, 0, 0)
ishl r14.z, r2.z, l(4)
mov r15.xy, l(0,0,0,0)
mov r16.w, l(0)
mov r17.yz, l(0,0,1.000000,0)
mov r18.xy, l(0,0,0,0)
mov r19.xy, l(0,0,0,0)
mov r20.xy, l(0,0,0,0)
mov r21.x, l(1.000000)
mov r22.xyzw, l(0,0,0,0)
mov r23.yzw, l(0,0,0,0)
mov r2.yz, l(0,0,0,0)
loop 
  uge r2.w, r2.z, cb2[0].y
  breakc_nz r2.w
  ushr r15.z, r2.z, l(5)
  iadd r16.xyz, r14.xyzx, r15.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r2.w, r16.xyzw, t7.yzwx
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r2.z, l(0), t15.wxyz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r2.z, l(16), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r2.z, l(32), t15.yxwz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r2.z, l(48), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r2.z, l(64), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r2.z, l(80), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r10.zw, r2.z, l(96), t15.xxxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r2.z, l(116), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r2.z, l(132), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r2.z, l(148), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r2.z, l(164), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r2.z, l(180), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r2.z, l(196), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xy, r2.z, l(212), t15.xyxx
  add r12.yzw, -r24.yyzw, v6.xxyz
  dp3 r11.w, r12.yzwy, r12.yzwy
  sqrt r11.w, r11.w
  ge r11.w, cb2[54].y, r11.w
  and r14.w, r30.y, l(0x0000ffff)
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r14.w, l(0), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r38.xyzw, r14.w, l(16), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r39.xyzw, r14.w, l(32), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r40.xyzw, r14.w, l(48), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r41.xyzw, r14.w, l(64), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r42.xyzw, r14.w, l(80), t16.xyzw
  dp3 r15.z, r37.xyzx, r12.yzwy
  add_sat r15.z, r37.w, r15.z
  dp3 r15.w, r38.xyzx, r12.yzwy
  add_sat r15.w, r38.w, r15.w
  mul r15.z, r15.w, r15.z
  dp3 r15.w, r39.xyzx, r12.yzwy
  add_sat r15.w, r39.w, r15.w
  mul r15.z, r15.w, r15.z
  dp3 r15.w, r40.xyzx, r12.yzwy
  add_sat r15.w, r40.w, r15.w
  mul r15.z, r15.w, r15.z
  dp3 r15.w, r41.xyzx, r12.yzwy
  add_sat r15.w, r41.w, r15.w
  mul r15.z, r15.w, r15.z
  dp3 r15.w, r42.xyzx, r12.yzwy
  add_sat r15.w, r42.w, r15.w
  mul r17.x, r15.w, r15.z
  and r15.z, r10.z, l(1)
  movc r15.zw, r15.zzzz, r17.xxxy, r17.zzzx
  mov r16.xy, r30.zwzz
  mov r16.z, r31.z
  dp3 r17.x, r13.xyzx, r16.xyzx
  dp3 r16.x, r12.yzwy, r16.xyzx
  add r16.x, -r31.w, r16.x
  ge r16.y, r16.x, l(0.000000)
  max r16.x, r7.w, |r16.x|
  movc r16.x, r16.y, r16.x, -r16.x
  max r16.y, -r17.x, l(0.00000010)
  div r16.x, r16.x, r16.y
  min r16.x, |r16.x|, l(131072.000000)
  mov r31.z, r32.z
  dp3 r16.y, r13.xyzx, r31.xyzx
  dp3 r16.z, r12.yzwy, r31.xyzx
  add r16.z, -r32.w, r16.z
  ge r17.x, r16.z, l(0.000000)
  max r16.z, r7.w, |r16.z|
  movc r16.z, r17.x, r16.z, -r16.z
  max r16.y, -r16.y, l(0.00000010)
  div r16.y, r16.z, r16.y
  min r16.x, |r16.y|, r16.x
  mov r32.z, r33.z
  dp3 r16.y, r13.xyzx, r32.xyzx
  dp3 r16.z, r12.yzwy, r32.xyzx
  add r16.z, -r33.w, r16.z
  ge r17.x, r16.z, l(0.000000)
  max r16.z, r7.w, |r16.z|
  movc r16.z, r17.x, r16.z, -r16.z
  max r16.y, -r16.y, l(0.00000010)
  div r16.y, r16.z, r16.y
  min r16.x, |r16.y|, r16.x
  mov r33.z, r34.z
  dp3 r16.y, r13.xyzx, r33.xyzx
  dp3 r16.z, r12.yzwy, r33.xyzx
  add r16.z, -r34.w, r16.z
  ge r17.x, r16.z, l(0.000000)
  max r16.z, r7.w, |r16.z|
  movc r16.z, r17.x, r16.z, -r16.z
  max r16.y, -r16.y, l(0.00000010)
  div r16.y, r16.z, r16.y
  min r16.x, |r16.y|, r16.x
  mov r34.z, r35.x
  dp3 r16.y, r13.xyzx, r34.xyzx
  dp3 r16.z, r12.yzwy, r34.xyzx
  add r16.z, -r35.y, r16.z
  ge r17.x, r16.z, l(0.000000)
  max r16.z, r7.w, |r16.z|
  movc r16.z, r17.x, r16.z, -r16.z
  max r16.y, -r16.y, l(0.00000010)
  div r16.y, r16.z, r16.y
  min r16.x, |r16.y|, r16.x
  mov r36.zw, r35.zzzw
  dp3 r16.y, r13.zxyz, r36.xzwx
  dp3 r16.z, r12.wyzw, r36.xzwx
  add r16.z, -r36.y, r16.z
  ge r17.x, r16.z, l(0.000000)
  max r16.z, r7.w, |r16.z|
  movc r16.z, r17.x, r16.z, -r16.z
  max r16.y, -r16.y, l(0.00000010)
  div r16.y, r16.z, r16.y
  min r16.x, |r16.y|, r16.x
  mov r31.x, r27.w
  mov r31.yz, r28.zzwz
  add r31.xyz, r12.yzwy, r31.xyzx
  mad r31.xyz, r13.xyzx, r16.xxxx, r31.xyzx
  dp3 r16.y, r31.xyzx, r31.xyzx
  sqrt r16.y, r16.y
  div r16.x, r16.x, r16.y
  add r16.x, r16.x, r16.x
  sqrt r16.x, r16.x
  mad r16.x, r4.w, l(5.000000), r16.x
  add r16.x, r16.x, l(-0.844800)
  mov r24.y, r25.z
  mov r24.z, r26.x
  dp3 r32.x, r31.xyzx, r24.xyzx
  mov r33.xy, r25.xwxx
  mov r33.z, r26.w
  dp3 r32.y, r31.xyzx, r33.xyzx
  mov r26.x, r25.y
  dp3 r32.z, r31.xyzx, r26.xyzx
  ubfe r16.yz, l(0, 6, 9, 0), l(0, 25, 16, 0), r30.yyyy
  utof r32.w, r16.z
  sample_l_indexable(texturecubearray)(float,float,float,float) r25.xyz, r32.xyzw, t8.xyzw, s2, r16.x
  and r30.yzw, r25.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
  ieq r30.yzw, r30.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
  or r16.x, r30.z, r30.y
  or r16.x, r30.w, r16.x
  movc r25.xyz, r16.xxxx, l(1.000000,1.000000,0,0), r25.xyzx
  dp3 r31.x, r12.yzwy, r24.xyzx
  dp3 r31.y, r12.yzwy, r33.xyzx
  dp3 r31.z, r12.yzwy, r26.xyzx
  mad_sat r27.xyz, r31.xyzx, r27.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mov r28.z, r29.x
  mad r27.xyz, r27.xyzx, r28.xyzx, r29.yzwy
  dp3 r32.x, r6.xyzx, r24.xyzx
  dp3 r32.y, r6.xyzx, r33.xyzx
  dp3 r32.z, r6.xyzx, r26.xyzx
  lt r24.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r32.xyzx
  movc r18.z, r24.x, l(0), l(0.500000)
  add r26.xyz, r18.xyzx, r27.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r26.xyz, r26.xyzx, t17.xyzw, s4, l(0.000000)
  movc r19.z, r24.y, l(0), l(0.500000)
  add r24.xyw, r19.xyxz, r27.xyxz
  sample_l_indexable(texture3d)(float,float,float,float) r24.xyw, r24.xywx, t18.xywz, s4, l(0.000000)
  movc r20.z, r24.z, l(0), l(0.500000)
  add r27.xyz, r20.xyzx, r27.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r27.xyz, r27.xyzx, t19.xyzw, s4, l(0.000000)
  mul r28.xyz, r32.xyzx, r32.xyzx
  sample_l_indexable(texturecubearray)(float,float,float,float) r29.xyz, r32.xyzw, t8.xyzw, s2, l(6.000000)
  and r30.yzw, r29.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
  ieq r30.yzw, r30.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
  or r16.x, r30.z, r30.y
  or r16.x, r30.w, r16.x
  movc r29.xyz, r16.xxxx, l(1.000000,1.000000,0,0), r29.xyzx
  mov r31.xyzw, r22.xyzw
  mov r30.yzw, r23.yyzw
  mov r16.x, r2.y
  mov r16.z, r2.w
  loop 
    breakc_z r16.z
    firstbit_lo r17.x, r16.z
    ishl r17.x, l(1), r17.x
    and r17.w, r16.z, r17.x
    if_nz r17.w
      not r17.x, r17.x
      and r16.z, r16.z, r17.x
      if_nz r11.w
        mov r17.x, r10.z
        mov r32.xy, r15.zwzz
        mov r17.w, l(1)
        loop 
          ige r18.z, r17.w, r16.y
          breakc_nz r18.z
          iadd r18.z, r14.w, r17.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r18.z, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r18.z, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r18.z, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r18.z, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r18.z, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r38.xyzw, r18.z, l(80), t16.xyzw
          dp3 r18.z, r33.xyzx, r12.yzwy
          add_sat r18.z, r33.w, r18.z
          mul r18.z, r18.z, r32.x
          dp3 r18.w, r34.xyzx, r12.yzwy
          add_sat r18.w, r34.w, r18.w
          mul r18.z, r18.w, r18.z
          dp3 r18.w, r35.xyzx, r12.yzwy
          add_sat r18.w, r35.w, r18.w
          mul r18.z, r18.w, r18.z
          dp3 r18.w, r36.xyzx, r12.yzwy
          add_sat r18.w, r36.w, r18.w
          mul r18.z, r18.w, r18.z
          dp3 r18.w, r37.xyzx, r12.yzwy
          add_sat r18.w, r37.w, r18.w
          mul r18.z, r18.w, r18.z
          dp3 r18.w, r38.xyzx, r12.yzwy
          add_sat r18.w, r38.w, r18.w
          mul r32.x, r18.w, r18.z
          ushr r19.z, r17.x, l(2)
          ubfe r19.w, l(1), l(2), r17.x
          and r20.z, r19.z, l(2)
          max r20.w, r32.x, r32.y
          mad r18.z, -r18.z, r18.w, l(1.000000)
          mul r18.z, r18.z, r32.y
          movc r21.y, r20.z, r18.z, r20.w
          movc r32.xy, r19.wwww, r32.xyxx, r21.xyxx
          iadd r17.w, r17.w, l(1)
          mov r17.x, r19.z
        endloop 
        mov_sat r32.y, r32.y
        mul r17.x, r10.w, r32.y
        lt r17.w, l(0.000000), r17.x
        if_nz r17.w
          mad r33.z, r32.y, r10.w, r30.w
          mul r17.x, r30.x, r17.x
          mul r21.yzw, r17.xxxx, r28.xxyz
          mul r32.xzw, r21.zzzz, r24.xxyw
          mad r32.xzw, r26.xxyz, r21.yyyy, r32.xxzw
          mad r21.yzw, r27.xxyz, r21.wwww, r32.xxzw
          mul r32.xzw, r29.xxyz, r21.yyzw
          dp3 r17.w, r32.xzwx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r34.xyz, r21.yzwy, r29.xyzx, r31.xyzx
          mul r18.z, r8.w, r17.w
          mul r21.yzw, r17.xxxx, r25.xxyz
          dp3 r17.x, r21.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r17.x, r8.w, r17.w, r17.x
          div r17.x, r18.z, r17.x
          mov r35.x, r31.w
          mov r35.yz, r30.yyzy
          mad r33.xyw, r21.zwzy, r17.xxxx, r35.yzyx
          mov r34.w, r33.w
        else 
          mov r34.xyzw, r31.xyzw
          mov r33.xyz, r30.yzwy
        endif 
        mov r16.x, l(-1)
        mov r31.xyzw, r34.xyzw
        mov r30.yzw, r33.xxyz
        break 
      endif 
    endif 
  endloop 
  if_nz r16.x
    mov r22.xyzw, r31.xyzw
    mov r23.yzw, r30.yyzw
    mov r2.y, l(-1)
    break 
  endif 
  iadd r2.z, r2.z, l(32)
  mov r22.xyzw, r31.xyzw
  mov r23.yzw, r30.yyzw
  mov r2.y, r16.x
endloop 
if_z r2.y
  iadd r2.y, cb2[0].y, -cb2[58].x
  and r2.z, r2.y, l(-32)
  iadd r2.w, -r2.z, r2.y
  and r10.z, cb2[0].y, l(-32)
  iadd r10.w, -r10.z, cb2[0].y
  mov r15.xy, l(0,0,0,0)
  mov r16.w, l(0)
  mov r17.yz, l(0,0,1.000000,0)
  mov r18.xy, l(0,0,0,0)
  mov r19.x, l(1.000000)
  mov r20.xy, l(0,0,0,0)
  mov r21.xy, l(0,0,0,0)
  mov r24.xyzw, r22.xyzw
  mov r25.yzw, r23.yyzw
  mov r11.w, r2.z
  loop 
    uge r12.y, r11.w, cb2[0].y
    breakc_nz r12.y
    ushr r15.z, r11.w, l(5)
    iadd r16.xyz, r14.xyzx, r15.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r12.y, r16.xyzw, t7.yxzw
    ieq r12.z, r2.z, r11.w
    bfi r12.w, r2.w, l(0), l(0), r12.y
    movc r12.y, r12.z, r12.w, r12.y
    ieq r12.z, r10.z, r11.w
    ubfe r12.w, r10.w, l(0), r12.y
    movc r12.y, r12.z, r12.w, r12.y
    iadd r12.z, r11.w, cb2[0].x
    mov r26.xyzw, r24.xyzw
    mov r27.xyz, r25.yzwy
    mov r12.w, r12.y
    loop 
      breakc_z r12.w
      firstbit_lo r14.w, r12.w
      ishl r15.z, l(1), r14.w
      and r15.w, r12.w, r15.z
      if_nz r15.w
        xor r12.w, r12.w, r15.z
        iadd r15.z, r12.z, r14.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r28.xyzw, r15.z, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r16.xy, r15.z, l(16), t11.xyxx
        add r28.xyz, r28.xyzx, -v6.xyzx
        mov r16.z, r28.w
        lt r16.xyz, |r28.xyzx|, r16.zxyz
        and r15.z, r16.y, r16.x
        and r15.z, r16.z, r15.z
        if_nz r15.z
          iadd r14.w, r11.w, r14.w
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r14.w, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r15.zw, r14.w, l(96), t15.xxxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r14.w, l(116), t15.zwxy
          add r16.xyz, -r28.yzwy, v6.xyzx
          and r17.w, r29.w, l(0x0000ffff)
          ubfe r18.w, l(6), l(25), r29.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r17.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r17.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r17.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r17.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r17.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r17.w, l(80), t16.xyzw
          dp3 r19.z, r30.xyzx, r16.xyzx
          add_sat r19.z, r30.w, r19.z
          dp3 r19.w, r31.xyzx, r16.xyzx
          add_sat r19.w, r31.w, r19.w
          mul r19.z, r19.w, r19.z
          dp3 r19.w, r32.xyzx, r16.xyzx
          add_sat r19.w, r32.w, r19.w
          mul r19.z, r19.w, r19.z
          dp3 r19.w, r33.xyzx, r16.xyzx
          add_sat r19.w, r33.w, r19.w
          mul r19.z, r19.w, r19.z
          dp3 r19.w, r34.xyzx, r16.xyzx
          add_sat r19.w, r34.w, r19.w
          mul r19.z, r19.w, r19.z
          dp3 r19.w, r35.xyzx, r16.xyzx
          add_sat r19.w, r35.w, r19.w
          mul r17.x, r19.w, r19.z
          and r19.z, r15.z, l(1)
          movc r19.zw, r19.zzzz, r17.xxxy, r17.zzzx
          mov r17.x, r15.z
          mov r30.xy, r19.zwzz
          mov r20.w, l(1)
          loop 
            ige r21.w, r20.w, r18.w
            breakc_nz r21.w
            iadd r21.w, r17.w, r20.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r21.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r21.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r21.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r21.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r21.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r21.w, l(80), t16.xyzw
            dp3 r21.w, r31.xyzx, r16.xyzx
            add_sat r21.w, r31.w, r21.w
            mul r21.w, r21.w, r30.x
            dp3 r28.w, r32.xyzx, r16.xyzx
            add_sat r28.w, r32.w, r28.w
            mul r21.w, r21.w, r28.w
            dp3 r28.w, r33.xyzx, r16.xyzx
            add_sat r28.w, r33.w, r28.w
            mul r21.w, r21.w, r28.w
            dp3 r28.w, r34.xyzx, r16.xyzx
            add_sat r28.w, r34.w, r28.w
            mul r21.w, r21.w, r28.w
            dp3 r28.w, r35.xyzx, r16.xyzx
            add_sat r28.w, r35.w, r28.w
            mul r21.w, r21.w, r28.w
            dp3 r28.w, r36.xyzx, r16.xyzx
            add_sat r28.w, r36.w, r28.w
            mul r30.x, r21.w, r28.w
            ushr r30.z, r17.x, l(2)
            ubfe r30.w, l(1), l(2), r17.x
            and r31.x, r30.z, l(2)
            max r31.y, r30.x, r30.y
            mad r21.w, -r21.w, r28.w, l(1.000000)
            mul r21.w, r21.w, r30.y
            movc r19.y, r31.x, r21.w, r31.y
            movc r30.xy, r30.wwww, r30.xyxx, r19.xyxx
            iadd r20.w, r20.w, l(1)
            mov r17.x, r30.z
          endloop 
          mov_sat r30.y, r30.y
          mul r15.z, r15.w, r30.y
          lt r17.x, l(0.000000), r15.z
          if_nz r17.x
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r14.w, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r14.w, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r14.w, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r14.w, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r14.w, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r14.w, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r14.w, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r14.w, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xyzw, r14.w, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r40.xyzw, r14.w, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r41.xy, r14.w, l(212), t15.xyxx
            mad r27.z, r30.y, r15.w, r27.z
            mul r14.w, r29.z, r15.z
            mov r29.z, r36.z
            dp3 r15.z, r13.xyzx, r29.xyzx
            dp3 r15.w, r16.xyzx, r29.xyzx
            add r15.w, -r36.w, r15.w
            ge r17.x, r15.w, l(0.000000)
            max r15.w, r7.w, |r15.w|
            movc r15.w, r17.x, r15.w, -r15.w
            max r15.z, -r15.z, l(0.00000010)
            div r15.z, r15.w, r15.z
            min r15.z, |r15.z|, l(131072.000000)
            mov r36.z, r37.z
            dp3 r15.w, r13.xyzx, r36.xyzx
            dp3 r17.x, r16.xyzx, r36.xyzx
            add r17.x, -r37.w, r17.x
            ge r17.w, r17.x, l(0.000000)
            max r17.x, r7.w, |r17.x|
            movc r17.x, r17.w, r17.x, -r17.x
            max r15.w, -r15.w, l(0.00000010)
            div r15.w, r17.x, r15.w
            min r15.z, |r15.w|, r15.z
            mov r37.z, r38.z
            dp3 r15.w, r13.xyzx, r37.xyzx
            dp3 r17.x, r16.xyzx, r37.xyzx
            add r17.x, -r38.w, r17.x
            ge r17.w, r17.x, l(0.000000)
            max r17.x, r7.w, |r17.x|
            movc r17.x, r17.w, r17.x, -r17.x
            max r15.w, -r15.w, l(0.00000010)
            div r15.w, r17.x, r15.w
            min r15.z, |r15.w|, r15.z
            mov r38.z, r39.z
            dp3 r15.w, r13.xyzx, r38.xyzx
            dp3 r17.x, r16.xyzx, r38.xyzx
            add r17.x, -r39.w, r17.x
            ge r17.w, r17.x, l(0.000000)
            max r17.x, r7.w, |r17.x|
            movc r17.x, r17.w, r17.x, -r17.x
            max r15.w, -r15.w, l(0.00000010)
            div r15.w, r17.x, r15.w
            min r15.z, |r15.w|, r15.z
            mov r39.z, r40.x
            dp3 r15.w, r13.xyzx, r39.xyzx
            dp3 r17.x, r16.xyzx, r39.xyzx
            add r17.x, -r40.y, r17.x
            ge r17.w, r17.x, l(0.000000)
            max r17.x, r7.w, |r17.x|
            movc r17.x, r17.w, r17.x, -r17.x
            max r15.w, -r15.w, l(0.00000010)
            div r15.w, r17.x, r15.w
            min r15.z, |r15.w|, r15.z
            mov r41.zw, r40.zzzw
            dp3 r15.w, r13.zxyz, r41.xzwx
            dp3 r17.x, r16.zxyz, r41.xzwx
            add r17.x, -r41.y, r17.x
            ge r17.w, r17.x, l(0.000000)
            max r17.x, r7.w, |r17.x|
            movc r17.x, r17.w, r17.x, -r17.x
            max r15.w, -r15.w, l(0.00000010)
            div r15.w, r17.x, r15.w
            min r15.z, |r15.w|, r15.z
            mov r29.x, r33.w
            mov r29.yz, r34.zzwz
            add r19.yzw, r16.xxyz, r29.xxyz
            mad r19.yzw, r13.xxyz, r15.zzzz, r19.yyzw
            dp3 r15.w, r19.yzwy, r19.yzwy
            sqrt r15.w, r15.w
            div r15.z, r15.z, r15.w
            add r15.z, r15.z, r15.z
            sqrt r15.z, r15.z
            mad r15.z, r4.w, l(5.000000), r15.z
            add r15.z, r15.z, l(-0.844800)
            mov r28.y, r31.z
            mov r28.z, r32.x
            dp3 r36.x, r19.yzwy, r28.xyzx
            mov r29.xy, r31.xwxx
            mov r29.z, r32.w
            dp3 r36.y, r19.yzwy, r29.xyzx
            mov r32.x, r31.y
            dp3 r36.z, r19.yzwy, r32.xyzx
            ubfe r15.w, l(9), l(16), r29.w
            utof r36.w, r15.w
            sample_l_indexable(texturecubearray)(float,float,float,float) r19.yzw, r36.xyzw, t8.wxyz, s2, r15.z
            and r30.xzw, r19.yyzw, l(0x7fffffff, 0, 0x7fffffff, 0x7fffffff)
            ieq r30.xzw, r30.xxzw, l(0x7f800000, 0, 0x7f800000, 0x7f800000)
            or r15.z, r30.z, r30.x
            or r15.z, r30.w, r15.z
            movc r19.yzw, r15.zzzz, l(0,1.000000,1.000000,0), r19.yyzw
            dp3 r31.x, r16.xyzx, r28.xyzx
            dp3 r31.y, r16.xyzx, r29.xyzx
            dp3 r31.z, r16.xyzx, r32.xyzx
            mad_sat r16.xyz, r31.xyzx, r33.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
            mov r34.z, r35.x
            mad r16.xyz, r16.xyzx, r34.xyzx, r35.yzwy
            dp3 r36.x, r6.xyzx, r28.xyzx
            dp3 r36.y, r6.xyzx, r29.xyzx
            dp3 r36.z, r6.xyzx, r32.xyzx
            lt r28.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r36.xyzx
            movc r18.z, r28.x, l(0), l(0.500000)
            add r29.xyz, r16.xyzx, r18.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r29.xyz, r29.xyzx, t17.xyzw, s4, l(0.000000)
            mul r30.xzw, r36.xxyz, r36.xxyz
            mul r30.xzw, r14.wwww, r30.xxzw
            movc r20.z, r28.y, l(0), l(0.500000)
            add r28.xyw, r16.xyxz, r20.xyxz
            sample_l_indexable(texture3d)(float,float,float,float) r28.xyw, r28.xywx, t18.xywz, s4, l(0.000000)
            mul r28.xyw, r30.zzzz, r28.xyxw
            mad r28.xyw, r29.xyxz, r30.xxxx, r28.xyxw
            movc r21.z, r28.z, l(0), l(0.500000)
            add r16.xyz, r16.xyzx, r21.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r16.xyz, r16.xyzx, t19.xyzw, s4, l(0.000000)
            mad r16.xyz, r16.xyzx, r30.wwww, r28.xywx
            sample_l_indexable(texturecubearray)(float,float,float,float) r28.xyz, r36.xyzw, t8.xyzw, s2, l(6.000000)
            and r29.xyz, r28.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
            ieq r29.xyz, r29.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
            or r15.z, r29.y, r29.x
            or r15.z, r29.z, r15.z
            movc r28.xyz, r15.zzzz, l(1.000000,1.000000,0,0), r28.xyzx
            mul r29.xyz, r16.xyzx, r28.xyzx
            dp3 r15.z, r29.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r26.xyz, r16.xyzx, r28.xyzx, r26.xyzx
            mul r15.w, r8.w, r15.z
            mul r16.xyz, r14.wwww, r19.yzwy
            dp3 r14.w, r16.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r14.w, r8.w, r15.z, r14.w
            div r14.w, r15.w, r14.w
            mov r28.x, r26.w
            mov r28.yz, r27.xxyx
            mad r27.xyw, r16.yzyx, r14.wwww, r28.yzyx
            mov r26.w, r27.w
          endif 
        endif 
      endif 
    endloop 
    mov r24.xyzw, r26.xyzw
    mov r25.yzw, r27.xxyz
    iadd r11.w, r11.w, l(32)
  endloop 
  lt r10.z, r25.w, l(1.000000)
  if_nz r10.z
    mov r15.xy, l(0,0,0,0)
    mov r16.w, l(0)
    mov r17.yz, l(0,0,1.000000,0)
    mov r18.xy, l(0,0,0,0)
    mov r19.x, l(1.000000)
    mov r20.xy, l(0,0,0,0)
    mov r21.xy, l(0,0,0,0)
    mov r26.x, r24.w
    mov r26.yzw, r25.yyzw
    mov r12.yzw, r24.xxyz
    mov r10.z, r25.w
    mov r10.w, l(0)
    loop 
      uge r11.w, r10.w, r2.y
      breakc_nz r11.w
      ushr r15.z, r10.w, l(5)
      iadd r16.xyz, r14.xyzx, r15.xyzx
      ld_indexable(texture2darray)(uint,uint,uint,uint) r11.w, r16.xyzw, t7.yzwx
      ieq r14.w, r2.z, r10.w
      ubfe r15.z, r2.w, l(0), r11.w
      movc r11.w, r14.w, r15.z, r11.w
      iadd r14.w, r10.w, cb2[0].x
      mov r27.xyzw, r26.xyzw
      mov r16.xyz, r12.yzwy
      mov r15.z, r10.z
      mov r15.w, r11.w
      loop 
        breakc_z r15.w
        firstbit_lo r17.w, r15.w
        ishl r18.w, l(1), r17.w
        and r19.z, r15.w, r18.w
        if_nz r19.z
          xor r15.w, r15.w, r18.w
          iadd r18.w, r14.w, r17.w
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r28.xyzw, r18.w, l(0), t11.xyzw
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r29.xy, r18.w, l(16), t11.xyxx
          add r28.xyz, r28.xyzx, -v6.xyzx
          mov r29.z, r28.w
          lt r28.xyz, |r28.xyzx|, r29.zxyz
          and r18.w, r28.y, r28.x
          and r18.w, r28.z, r18.w
          if_nz r18.w
            iadd r17.w, r10.w, r17.w
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r17.w, l(0), t15.wxyz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r19.zw, r17.w, l(96), t15.xxxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r17.w, l(116), t15.zwxy
            add r30.xyz, -r28.yzwy, v6.xyzx
            and r18.w, r29.w, l(0x0000ffff)
            ubfe r20.w, l(6), l(25), r29.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r18.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r18.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r18.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r18.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r18.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r18.w, l(80), t16.xyzw
            dp3 r21.w, r31.xyzx, r30.xyzx
            add_sat r21.w, r31.w, r21.w
            dp3 r23.w, r32.xyzx, r30.xyzx
            add_sat r23.w, r32.w, r23.w
            mul r21.w, r21.w, r23.w
            dp3 r23.w, r33.xyzx, r30.xyzx
            add_sat r23.w, r33.w, r23.w
            mul r21.w, r21.w, r23.w
            dp3 r23.w, r34.xyzx, r30.xyzx
            add_sat r23.w, r34.w, r23.w
            mul r21.w, r21.w, r23.w
            dp3 r23.w, r35.xyzx, r30.xyzx
            add_sat r23.w, r35.w, r23.w
            mul r21.w, r21.w, r23.w
            dp3 r23.w, r36.xyzx, r30.xyzx
            add_sat r23.w, r36.w, r23.w
            mul r17.x, r21.w, r23.w
            and r21.w, r19.z, l(1)
            movc r31.xy, r21.wwww, r17.xyxx, r17.zxzz
            mov r17.x, r19.z
            mov r32.xy, r31.xyxx
            mov r21.w, l(1)
            loop 
              ige r23.w, r21.w, r20.w
              breakc_nz r23.w
              iadd r23.w, r18.w, r21.w
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r23.w, l(0), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r23.w, l(16), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r23.w, l(32), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r23.w, l(48), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r23.w, l(64), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r38.xyzw, r23.w, l(80), t16.xyzw
              dp3 r23.w, r33.xyzx, r30.xyzx
              add_sat r23.w, r33.w, r23.w
              mul r23.w, r23.w, r32.x
              dp3 r28.w, r34.xyzx, r30.xyzx
              add_sat r28.w, r34.w, r28.w
              mul r23.w, r23.w, r28.w
              dp3 r28.w, r35.xyzx, r30.xyzx
              add_sat r28.w, r35.w, r28.w
              mul r23.w, r23.w, r28.w
              dp3 r28.w, r36.xyzx, r30.xyzx
              add_sat r28.w, r36.w, r28.w
              mul r23.w, r23.w, r28.w
              dp3 r28.w, r37.xyzx, r30.xyzx
              add_sat r28.w, r37.w, r28.w
              mul r23.w, r23.w, r28.w
              dp3 r28.w, r38.xyzx, r30.xyzx
              add_sat r28.w, r38.w, r28.w
              mul r32.x, r23.w, r28.w
              ushr r30.w, r17.x, l(2)
              ubfe r31.z, l(1), l(2), r17.x
              and r31.w, r30.w, l(2)
              max r32.z, r32.x, r32.y
              mad r23.w, -r23.w, r28.w, l(1.000000)
              mul r23.w, r23.w, r32.y
              movc r19.y, r31.w, r23.w, r32.z
              movc r32.xy, r31.zzzz, r32.xyxx, r19.xyxx
              iadd r21.w, r21.w, l(1)
              mov r17.x, r30.w
            endloop 
            add_sat r17.x, -r15.z, r32.y
            mul r18.w, r19.w, r17.x
            lt r19.y, l(0.000000), r18.w
            if_nz r19.y
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r17.w, l(16), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r17.w, l(32), t15.yxwz
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r17.w, l(48), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r17.w, l(64), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r17.w, l(80), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r17.w, l(132), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r17.w, l(148), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xyzw, r17.w, l(164), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r40.xyzw, r17.w, l(180), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r41.xyzw, r17.w, l(196), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r42.xy, r17.w, l(212), t15.xyxx
              mad r27.w, r17.x, r19.w, r27.w
              mul r17.x, r29.z, r18.w
              mov r29.z, r37.z
              dp3 r17.w, r13.xyzx, r29.xyzx
              dp3 r18.w, r30.xyzx, r29.xyzx
              add r18.w, -r37.w, r18.w
              ge r19.y, r18.w, l(0.000000)
              max r18.w, r7.w, |r18.w|
              movc r18.w, r19.y, r18.w, -r18.w
              max r17.w, -r17.w, l(0.00000010)
              div r17.w, r18.w, r17.w
              min r17.w, |r17.w|, l(131072.000000)
              mov r37.z, r38.z
              dp3 r18.w, r13.xyzx, r37.xyzx
              dp3 r19.y, r30.xyzx, r37.xyzx
              add r19.y, -r38.w, r19.y
              ge r19.z, r19.y, l(0.000000)
              max r19.y, r7.w, |r19.y|
              movc r19.y, r19.z, r19.y, -r19.y
              max r18.w, -r18.w, l(0.00000010)
              div r18.w, r19.y, r18.w
              min r17.w, r17.w, |r18.w|
              mov r38.z, r39.z
              dp3 r18.w, r13.xyzx, r38.xyzx
              dp3 r19.y, r30.xyzx, r38.xyzx
              add r19.y, -r39.w, r19.y
              ge r19.z, r19.y, l(0.000000)
              max r19.y, r7.w, |r19.y|
              movc r19.y, r19.z, r19.y, -r19.y
              max r18.w, -r18.w, l(0.00000010)
              div r18.w, r19.y, r18.w
              min r17.w, r17.w, |r18.w|
              mov r39.z, r40.z
              dp3 r18.w, r13.xyzx, r39.xyzx
              dp3 r19.y, r30.xyzx, r39.xyzx
              add r19.y, -r40.w, r19.y
              ge r19.z, r19.y, l(0.000000)
              max r19.y, r7.w, |r19.y|
              movc r19.y, r19.z, r19.y, -r19.y
              max r18.w, -r18.w, l(0.00000010)
              div r18.w, r19.y, r18.w
              min r17.w, r17.w, |r18.w|
              mov r40.z, r41.x
              dp3 r18.w, r13.xyzx, r40.xyzx
              dp3 r19.y, r30.xyzx, r40.xyzx
              add r19.y, -r41.y, r19.y
              ge r19.z, r19.y, l(0.000000)
              max r19.y, r7.w, |r19.y|
              movc r19.y, r19.z, r19.y, -r19.y
              max r18.w, -r18.w, l(0.00000010)
              div r18.w, r19.y, r18.w
              min r17.w, r17.w, |r18.w|
              mov r42.zw, r41.zzzw
              dp3 r18.w, r13.zxyz, r42.xzwx
              dp3 r19.y, r30.zxyz, r42.xzwx
              add r19.y, -r42.y, r19.y
              ge r19.z, r19.y, l(0.000000)
              max r19.y, r7.w, |r19.y|
              movc r19.y, r19.z, r19.y, -r19.y
              max r18.w, -r18.w, l(0.00000010)
              div r18.w, r19.y, r18.w
              min r17.w, r17.w, |r18.w|
              mov r29.x, r34.w
              mov r29.yz, r35.zzwz
              add r19.yzw, r30.xxyz, r29.xxyz
              mad r19.yzw, r13.xxyz, r17.wwww, r19.yyzw
              dp3 r18.w, r19.yzwy, r19.yzwy
              sqrt r18.w, r18.w
              div r17.w, r17.w, r18.w
              add r17.w, r17.w, r17.w
              sqrt r17.w, r17.w
              mad r17.w, r4.w, l(5.000000), r17.w
              add r17.w, r17.w, l(-0.844800)
              mov r28.y, r31.z
              mov r28.z, r33.x
              dp3 r37.x, r19.yzwy, r28.xyzx
              mov r29.xy, r31.xwxx
              mov r29.z, r33.w
              dp3 r37.y, r19.yzwy, r29.xyzx
              mov r33.x, r31.y
              dp3 r37.z, r19.yzwy, r33.xyzx
              ubfe r18.w, l(9), l(16), r29.w
              utof r37.w, r18.w
              sample_l_indexable(texturecubearray)(float,float,float,float) r19.yzw, r37.xyzw, t8.wxyz, s2, r17.w
              and r31.xyz, r19.yzwy, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
              ieq r31.xyz, r31.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
              or r17.w, r31.y, r31.x
              or r17.w, r31.z, r17.w
              movc r19.yzw, r17.wwww, l(0,1.000000,1.000000,0), r19.yyzw
              dp3 r31.x, r30.xyzx, r28.xyzx
              dp3 r31.y, r30.xyzx, r29.xyzx
              dp3 r31.z, r30.xyzx, r33.xyzx
              mad_sat r30.xyz, r31.xyzx, r34.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
              mov r35.z, r36.x
              mad r30.xyz, r30.xyzx, r35.xyzx, r36.yzwy
              dp3 r37.x, r6.xyzx, r28.xyzx
              dp3 r37.y, r6.xyzx, r29.xyzx
              dp3 r37.z, r6.xyzx, r33.xyzx
              lt r28.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r37.xyzx
              movc r18.z, r28.x, l(0), l(0.500000)
              add r29.xyz, r18.xyzx, r30.xyzx
              sample_l_indexable(texture3d)(float,float,float,float) r29.xyz, r29.xyzx, t17.xyzw, s4, l(0.000000)
              mul r31.xyz, r37.xyzx, r37.xyzx
              mul r31.xyz, r17.xxxx, r31.xyzx
              movc r20.z, r28.y, l(0), l(0.500000)
              add r28.xyw, r20.xyxz, r30.xyxz
              sample_l_indexable(texture3d)(float,float,float,float) r28.xyw, r28.xywx, t18.xywz, s4, l(0.000000)
              mul r28.xyw, r31.yyyy, r28.xyxw
              mad r28.xyw, r29.xyxz, r31.xxxx, r28.xyxw
              movc r21.z, r28.z, l(0), l(0.500000)
              add r29.xyz, r21.xyzx, r30.xyzx
              sample_l_indexable(texture3d)(float,float,float,float) r29.xyz, r29.xyzx, t19.xyzw, s4, l(0.000000)
              mad r28.xyz, r29.xyzx, r31.zzzz, r28.xywx
              sample_l_indexable(texturecubearray)(float,float,float,float) r29.xyz, r37.xyzw, t8.xyzw, s2, l(6.000000)
              and r30.xyz, r29.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
              ieq r30.xyz, r30.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
              or r17.w, r30.y, r30.x
              or r17.w, r30.z, r17.w
              movc r29.xyz, r17.wwww, l(1.000000,1.000000,0,0), r29.xyzx
              mul r30.xyz, r28.xyzx, r29.xyzx
              dp3 r17.w, r30.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
              mad r16.xyz, r28.xyzx, r29.xyzx, r16.xyzx
              mul r18.z, r8.w, r17.w
              mul r19.yzw, r17.xxxx, r19.yyzw
              dp3 r17.x, r19.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
              mad r17.x, r8.w, r17.w, r17.x
              div r17.x, r18.z, r17.x
              mad r27.xyz, r19.yzwy, r17.xxxx, r27.xyzx
            endif 
          endif 
        endif 
      endloop 
      mov r26.xyzw, r27.xyzw
      mov r12.yzw, r16.xxyz
      iadd r10.w, r10.w, l(32)
    endloop 
    mov r25.xyzw, r26.zxyw
    mov r24.xyz, r12.yzwy
    mov r25.xyzw, r25.yzxw
  else 
    mov r25.x, r24.w
  endif 
  max r2.y, r25.w, l(1.000000)
  rcp r2.y, r2.y
  mov_sat r25.w, r25.w
  mul r22.xyz, r2.yyyy, r24.xyzx
  mul r23.xyz, r2.yyyy, r25.xyzx
  lt r2.z, r25.w, l(0.990000)
  if_nz r2.z
    add r2.z, -r25.w, l(1.000000)
    mul r2.w, r2.z, cb2[19].x
    add r12.yzw, v6.xxyz, -cb2[35].xxyz
    mul r15.x, r12.y, cb2[35].w
    mul r15.yz, r12.zzwz, cb2[36].xxyx
    add_sat r12.yzw, r15.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
    mul r15.xy, r12.yzyy, cb2[36].zwzz
    mul r15.z, r12.w, cb2[37].x
    add r12.yzw, r15.xxyz, cb2[37].yyzw
    lt r15.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
    movc r15.xyz, r15.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
    mov r15.w, l(0)
    add r16.xyz, r12.yzwy, r15.wwxw
    sample_l_indexable(texture3d)(float,float,float,float) r16.xyz, r16.xyzx, t17.xyzw, s4, l(0.000000)
    mul r17.xyz, r6.xyzx, r6.xyzx
    mul r17.xyz, r2.wwww, r17.xyzx
    add r18.xyz, r12.yzwy, r15.wwyw
    sample_l_indexable(texture3d)(float,float,float,float) r18.xyz, r18.xyzx, t18.xyzw, s4, l(0.000000)
    mul r18.xyz, r17.yyyy, r18.xyzx
    mad r16.xyz, r16.xyzx, r17.xxxx, r18.xyzx
    add r12.yzw, r12.yyzw, r15.wwwz
    sample_l_indexable(texture3d)(float,float,float,float) r12.yzw, r12.yzwy, t19.wxyz, s4, l(0.000000)
    mad r12.yzw, r12.yyzw, r17.zzzz, r16.xxyz
    mov r6.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r15.xyz, r6.xyzw, t8.xyzw, s2, l(6.000000)
    mul r12.yzw, r12.yyzw, r15.xxyz
    dp3 r2.w, r12.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
    mad r22.xyz, r24.xyzx, r2.yyyy, r12.yzwy
    mov r13.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r12.yzw, r13.xyzw, t8.wxyz, s2, r5.w
    mad r2.y, cb2[19].x, r2.z, -r2.w
    mad r2.y, r5.y, r2.y, r2.w
    mad r23.xyz, r12.yzwy, r2.yyyy, r23.xyzx
  endif 
else 
  mov r23.x, r22.w
endif 
add r2.y, r5.z, r5.x
log r2.y, |r2.y|
mul r2.y, r2.y, r3.w
exp r2.y, r2.y
add r2.y, r5.z, r2.y
add_sat r2.y, r2.y, l(-1.000000)
mul r15.xyz, r5.zzzz, r22.xyzx
mad r2.zw, r5.xxxy, l(0.000000, 0.000000, 0.984375, 0.984375), l(0.000000, 0.000000, 0.00781250, 0.00781250)
sample_l_indexable(texture2d)(float,float,float,float) r2.zw, r2.zwzz, t5.zwxy, s2, l(0.000000)
mul r5.yzw, r2.yyyy, r23.xxyz
mul r16.xyz, r2.zzzz, r5.zwyz
mul r2.yzw, r2.wwww, r5.yyzw
sqrt r4.w, r3.w
mad r4.w, r4.w, l(0.500000), l(0.500000)
mul r4.w, r4.w, r4.w
mul r5.y, r4.w, l(0.500000)
mad r4.w, -r4.w, l(0.500000), l(1.000000)
mad r5.z, r5.x, r4.w, r5.y
mul r4.w, r4.w, r5.z
mul r5.y, r5.z, r5.y
if_z cb0[26].y
  dp3 r5.z, r6.xyzx, cb2[17].xyzx
  ge r5.z, l(0.000000), |r5.z|
  if_nz r5.z
    mov r5.w, l(0)
  endif 
  if_z r5.z
    mul r12.yzw, v6.yyyy, cb2[29].xxyz
    mad r12.yzw, v6.xxxx, cb2[28].xxyz, r12.yyzw
    mad r12.yzw, v6.zzzz, cb2[30].xxyz, r12.yyzw
    add r12.yzw, r12.yyzw, cb2[31].xxyz
    add r5.z, r12.w, -cb2[17].w
    mad r5.z, -r5.z, l(0.00006104), l(1.000000)
    mov_sat r6.w, r5.z
    eq r6.w, r5.z, r6.w
    if_nz r6.w
      mov r6.w, l(0)
      mov r7.w, l(0)
      loop 
        ge r8.w, r6.w, l(3.000000)
        breakc_nz r8.w
        ftou r8.w, r6.w
        add r10.zw, r12.yyyz, -cb2[r8.w + 20].xxxy
        max r10.z, |r10.w|, |r10.z|
        mul r7.w, r10.z, cb2[r8.w + 20].z
        lt r8.w, r7.w, l(1.000000)
        if_nz r8.w
          break 
        endif 
        add r6.w, r6.w, l(1.000000)
        mov r7.w, l(0)
      endloop 
    else 
      mov r6.w, l(3.000000)
      mov r7.w, l(0)
    endif 
    ge r8.w, r6.w, l(3.000000)
    if_nz r8.w
      mul r17.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
      rcp r18.xz, r17.xxxx
      mov r18.y, -r18.z
      mad r17.xyz, r12.yzyy, r18.xyzx, r17.yzyy
      add r18.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
      max r17.xyz, r17.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
      min r17.xyz, r18.xyzx, r17.xyzx
      mul r10.zw, r17.zzzy, cb2[32].xxxx
      round_ni r10.zw, r10.zzzw
      mul r10.w, r10.w, cb2[27].x
      mad r10.z, r10.w, cb2[32].x, r10.z
      ftou r10.z, r10.z
      iadd r10.z, r10.z, cb2[32].y
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r10.w, r10.z, l(0), t23.xxxx
      and r11.w, r10.w, l(0x40000000)
      ishl r13.w, r10.w, l(2)
      if_z r11.w
        and r11.w, r10.w, l(0x01ffffff)
        iadd r18.x, r10.z, r11.w
        ushr r10.z, r10.w, l(25)
        utof r10.z, r10.z
        mul r17.xyz, r10.zzzz, r17.xyzx
        frc r17.xyz, r17.xyzx
        mul r17.xyz, r17.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
        ftou r17.xyz, r17.xyzx
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.x, l(0), t23.xxxx
        ushr r10.zw, r17.zzzy, l(0, 0, 6, 6)
        and r11.w, r18.z, l(0xc0000000)
        iadd r14.w, r18.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r14.w, r14.w, l(0), t23.xxxx
        movc r10.w, r10.w, r18.z, r14.w
        ushr r14.w, r10.w, l(13)
        movc r10.z, r10.z, r14.w, r10.w
        and r10.z, r10.z, l(8191)
        iadd r19.x, r10.z, r18.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.z, r19.x, l(0), t23.xxxx
        mov r18.y, l(0)
        mov r19.y, l(1)
        movc r19.xyz, r11.wwww, r18.xyzx, r19.xyzx
        movc r20.yz, r11.wwww, l(0,6,1,0), l(0,5,2,0)
        ushr r10.zw, r17.zzzy, r20.yyyy
        and r10.zw, r10.zzzw, l(0, 0, 1, 1)
        and r14.w, r19.z, l(0xc0000000)
        iadd r17.w, r19.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.w, r17.w, l(0), t23.xxxx
        movc r10.w, r10.w, r19.z, r17.w
        ushr r17.w, r10.w, l(13)
        movc r10.z, r10.z, r17.w, r10.w
        and r10.z, r10.z, l(8191)
        iadd r20.x, r10.z, r19.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.w, r20.x, l(0), t23.xxxx
        movc r19.xyz, r14.wwww, r19.xyzx, r20.xzwx
        movc r18.xyz, r11.wwww, r18.xyzx, r19.xyzx
        and r10.z, r18.z, l(0xc0000000)
        if_z r10.z
          iadd r10.z, -r18.y, l(6)
          ushr r10.zw, r17.zzzy, r10.zzzz
          or r11.w, r18.z, l(0x40000000)
          bfi r10.w, l(1), l(1), r10.w, l(0)
          bfi r10.z, l(1), l(0), r10.z, r10.w
          imul null, r10.z, r10.z, l(10)
          ushr r10.z, r11.w, r10.z
          and r10.z, r10.z, l(1023)
          iadd r19.x, r10.z, r18.x
          ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.w, r19.x, l(0), t23.xxxx
          iadd r19.yz, r18.yyyy, l(0, 1, 2, 0)
          iadd r10.z, -r19.y, l(6)
          ushr r10.zw, r17.zzzy, r10.zzzz
          and r11.w, r19.w, l(0xc0000000)
          or r14.w, r19.w, l(0x40000000)
          bfi r10.w, l(1), l(1), r10.w, l(0)
          bfi r10.z, l(1), l(0), r10.z, r10.w
          imul null, r10.z, r10.z, l(10)
          ushr r10.z, r14.w, r10.z
          and r10.z, r10.z, l(1023)
          iadd r20.x, r10.z, r19.x
          ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.z, r20.x, l(0), t23.xxxx
          mov r20.y, r19.z
          movc r20.xyz, r11.wwww, r19.xywx, r20.xyzx
          iadd r10.z, -r20.y, l(6)
          ushr r10.zw, r17.zzzy, r10.zzzz
          and r14.w, r20.z, l(0xc0000000)
          or r17.w, r20.z, l(0x40000000)
          bfi r10.w, l(1), l(1), r10.w, l(0)
          bfi r10.z, l(1), l(0), r10.z, r10.w
          imul null, r10.z, r10.z, l(10)
          ushr r10.z, r17.w, r10.z
          and r10.z, r10.z, l(1023)
          iadd r21.x, r10.z, r20.x
          ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r21.y, r21.x, l(0), t23.xxxx
          movc r10.zw, r14.wwww, r20.xxxz, r21.xxxy
          movc r18.xz, r11.wwww, r19.xxwx, r10.zzwz
        endif 
        and r10.z, r18.z, l(0xc0000000)
        if_z r10.z
          ubfe r10.w, l(14), l(15), r18.z
          utof r10.w, r10.w
          mul r10.w, r10.w, cb2[27].w
          mul r10.w, r10.w, l(0.00006104)
          and r18.yw, r18.zzzz, l(0, 0x00007fff, 0, 0x20000000)
          utof r11.w, r18.y
          mul r11.w, r11.w, cb2[27].w
          mul r11.w, r11.w, l(0.00003052)
          and r14.w, r17.y, l(3)
          iadd r14.w, r14.w, r18.x
          iadd r14.w, r14.w, l(1)
          ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r14.w, r14.w, l(0), t23.xxxx
          bfi r17.xyw, l(2, 2, 0, 1), l(3, 1, 0, 4), r17.xyxz, l(0, 0, 0, 0)
          ushr r14.w, r14.w, r17.x
          and r14.w, r14.w, l(255)
          utof r14.w, r14.w
          mul r14.w, r11.w, r14.w
          mad r14.w, r14.w, l(0.00392157), r10.w
          iadd r17.x, r17.y, l(1)
          ubfe r17.y, l(1), l(1), r17.z
          iadd r17.x, r17.y, r17.x
          iadd r17.x, r17.x, r18.x
          ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.x, r17.x, l(0), t23.xxxx
          ushr r17.x, r17.x, r17.w
          and r17.x, r17.x, l(0x0000ffff)
          utof r17.x, r17.x
          mul r11.w, r11.w, r17.x
          mad r10.w, r11.w, l(0.00001526), r10.w
          movc r13.w, r18.w, r14.w, r10.w
        else 
          and r10.w, r18.z, l(0x80000000)
          iadd r11.w, r18.x, l(1)
          ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r11.w, r11.w, l(0), t23.xxxx
          movc r10.w, r10.w, r11.w, l(0)
          ishl r11.w, r18.z, l(2)
          ushr r14.w, r10.w, l(16)
          f16tof32 r14.w, r14.w
          and r10.w, r10.w, l(0x0000ffff)
          f16tof32 r10.w, r10.w
          mad r11.w, r12.y, r14.w, r11.w
          mad r10.w, r12.z, r10.w, r11.w
          movc r13.w, r10.z, r10.w, r13.w
        endif 
      endif 
      mad r10.z, -cb2[27].z, l(2.000000), r12.w
      lt r10.z, r13.w, r10.z
      movc r5.w, r10.z, l(0), l(1.000000)
    endif 
    if_z r8.w
      if_z cb2[58].y
        ftou r8.w, r6.w
        add r10.zw, r12.yyyz, -cb2[r8.w + 20].xxxy
        mul r10.zw, r10.zzzw, cb2[r8.w + 20].zzzz
        mad r17.xy, r10.zwzz, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
        itof r8.w, cb2[26].y
        add r17.z, r6.w, r8.w
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r8.w, r17.xyzx, t13.xxxx, s13, r5.z
        sample_l_indexable(texture2darray)(float,float,float,float) r10.z, r17.xyzx, t31.yzxw, s0, l(0.000000)
        add r8.w, r8.w, r10.z
        add_sat r8.w, r8.w, l(-1.000000)
        mul r10.z, r8.w, r8.w
        mul r5.w, r8.w, r10.z
      endif 
      if_nz cb2[58].y
        mov r17.x, -r10.x
        ftou r8.w, r6.w
        add r6.w, r6.w, l(1.000000)
        min r6.w, r6.w, l(2.000000)
        ftou r6.w, r6.w
        add r7.w, -r7.w, l(1.000000)
        mul r7.w, r7.w, l(28.000000)
        ftou r7.w, r7.w
        add r10.zw, r12.yyyz, -cb2[r8.w + 20].xxxy
        mul r10.zw, r10.zzzw, cb2[r8.w + 20].zzzz
        mad r10.zw, r10.zzzw, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
        add r12.yz, r12.yyzy, -cb2[r6.w + 20].xxyx
        mul r12.yz, r12.yyzy, cb2[r6.w + 20].zzzz
        mad r12.yz, r12.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
        mov r17.y, r11.x
        mov r17.z, r10.x
        mov r11.w, l(0)
        mov r12.w, l(0)
        loop 
          uge r13.w, r12.w, l(8)
          breakc_nz r13.w
          ult r13.w, r7.w, r12.w
          movc r18.xy, r13.wwww, r12.yzyy, r10.zwzz
          movc r14.w, r13.w, cb2[r6.w + 20].w, cb2[r8.w + 20].w
          movc r13.w, r13.w, r6.w, r8.w
          dp2 r19.x, icb[r12.w + 0].yxyy, r17.xyxx
          dp2 r19.y, icb[r12.w + 0].yxyy, r17.yzyy
          mad r18.xy, r19.xyxx, r14.wwww, r18.xyxx
          iadd r13.w, r13.w, cb2[26].y
          utof r18.z, r13.w
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r13.w, r18.xyzx, t13.xxxx, s13, r5.z
          sample_l_indexable(texture2darray)(float,float,float,float) r14.w, r18.xyzx, t31.yzwx, s0, l(0.000000)
          add r13.w, r13.w, r14.w
          add_sat r13.w, r13.w, l(-1.000000)
          mad r11.w, r13.w, l(0.125000), r11.w
          iadd r12.w, r12.w, l(1)
        endloop 
        mul r5.z, r11.w, r11.w
        mul r5.w, r11.w, r5.z
      endif 
    endif 
  endif 
else 
  mov r5.w, l(1.000000)
endif 
dp3 r5.z, r6.xyzx, cb2[17].xyzx
lt r6.w, l(0.000000), |r5.z|
if_nz r6.w
  lt r6.w, l(0.000000), r5.w
  if_nz r6.w
    mul r6.w, r3.y, cb2[18].w
    mul r6.w, r6.w, l(0.250000)
    if_nz cb2[23].x
      add r17.xyz, v6.xyzx, cb1[24].xyzx
      mov r17.w, l(1.000000)
      dp4 r7.w, cb2[24].xyzw, r17.xyzw
      dp4 r8.w, cb2[25].xyzw, r17.xyzw
      frc r17.x, r7.w
      frc r17.y, r8.w
      iadd r7.w, l(-1), cb2[23].x
      utof r17.z, r7.w
      sample_l_indexable(texture2darray)(float,float,float,float) r12.yzw, r17.xyzx, t20.wxyz, s2, l(0.000000)
      add r12.yzw, r12.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
      mad r12.yzw, cb2[23].yyyy, r12.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
      mul r12.yzw, r12.yyzw, cb2[18].xxyz
    else 
      mov r12.yzw, cb2[18].xxyz
    endif 
    if_z cb0[26].y
      ushr r7.w, cb2[53].x, l(16)
      ult r8.w, l(0), r7.w
      and r8.w, r1.z, r8.w
      if_nz r8.w
        iadd r7.w, r7.w, cb2[0].x
        iadd r7.w, r7.w, l(-1)
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r8.w, r7.w, l(52), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r7.w, l(68), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r7.w, l(84), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.xyzw, r7.w, l(132), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r20.xyzw, r7.w, l(148), t12.xyzw
        mad r10.z, |r5.z|, l(-0.200000), l(0.400000)
        lt r10.w, r5.z, l(0.000000)
        movc r10.z, r10.w, -r10.z, r10.z
        mad r21.xyz, r6.xyzx, r10.zzzz, v6.xyzx
        mov r21.w, l(1.000000)
        dp4 r17.x, r17.xyzw, r21.xyzw
        dp4 r17.y, r18.xyzw, r21.xyzw
        mad r10.zw, r17.xxxy, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
        add r10.zw, r20.zzzw, r10.zzzw
        mul r10.zw, r20.xxxy, r10.zzzw
        div r17.xy, r8.wwww, r19.xzxx
        add r17.zw, -r17.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
        ge r17.zw, r10.zzzw, r17.zzzw
        ge r17.xy, r17.xyxx, r10.zwzz
        or r17.xy, r17.xyxx, r17.zwzz
        or r11.w, r17.y, r17.x
        if_z r11.w
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r11.w, r7.w, l(28), t12.xxxx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r7.w, l(100), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xy, r7.w, l(164), t12.xyxx
          dp4 r7.w, r17.xyzw, r21.xyzw
          mov_sat r10.zw, r10.zzzw
          mad r17.xy, r10.zwzz, r19.xzxx, r19.ywyy
          add r7.w, r18.x, r7.w
          div r7.w, r7.w, r18.y
          max r7.w, r7.w, l(0.00006104)
          and r10.z, r11.w, l(0x0000ffff)
          if_nz cb2[58].y
            mov r18.x, -r10.x
            utof r19.z, r10.z
            mov r18.y, r11.x
            mov r18.z, r10.x
            mov r10.w, l(0)
            mov r11.w, l(0)
            loop 
              ige r13.w, r11.w, l(8)
              breakc_nz r13.w
              dp2 r20.x, icb[r11.w + 0].yxyy, r18.xyxx
              dp2 r20.y, icb[r11.w + 0].yxyy, r18.yzyy
              mad r19.xy, r20.xyxx, r8.wwww, r17.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r13.w, r19.xyzx, t9.xxxx, s13, r7.w
              mad r10.w, r13.w, l(0.125000), r10.w
              iadd r11.w, r11.w, l(1)
            endloop 
          else 
            utof r17.z, r10.z
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.w, r17.xyzx, t9.xxxx, s13, r7.w
          endif 
          mul r7.w, r10.w, r10.w
          mul r7.w, r10.w, r7.w
        else 
          mov r7.w, l(1.000000)
        endif 
        mul r5.w, r5.w, r7.w
      else 
        and r7.w, cb2[53].x, l(0x0000ffff)
        ult r8.w, l(0), r7.w
        not r10.z, r1.z
        and r8.w, r8.w, r10.z
        if_nz r8.w
          iadd r7.w, r7.w, cb2[0].x
          iadd r7.w, r7.w, l(-1)
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r8.w, r7.w, l(52), t12.xxxx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r7.w, l(68), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r7.w, l(84), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.xyzw, r7.w, l(132), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r20.xyzw, r7.w, l(148), t12.xyzw
          mad r10.z, |r5.z|, l(-0.200000), l(0.400000)
          lt r10.w, r5.z, l(0.000000)
          movc r10.z, r10.w, -r10.z, r10.z
          mad r21.xyz, r6.xyzx, r10.zzzz, v6.xyzx
          mov r21.w, l(1.000000)
          dp4 r17.x, r17.xyzw, r21.xyzw
          dp4 r17.y, r18.xyzw, r21.xyzw
          mad r10.zw, r17.xxxy, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
          add r10.zw, r20.zzzw, r10.zzzw
          mul r10.zw, r20.xxxy, r10.zzzw
          div r17.xy, r8.wwww, r19.xzxx
          add r17.zw, -r17.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
          ge r17.zw, r10.zzzw, r17.zzzw
          ge r17.xy, r17.xyxx, r10.zwzz
          or r17.xy, r17.xyxx, r17.zwzz
          or r11.w, r17.y, r17.x
          if_z r11.w
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r11.w, r7.w, l(28), t12.xxxx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r7.w, l(100), t12.xyzw
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xy, r7.w, l(164), t12.xyxx
            dp4 r7.w, r17.xyzw, r21.xyzw
            mov_sat r10.zw, r10.zzzw
            mad r17.xy, r10.zwzz, r19.xzxx, r19.ywyy
            add r7.w, r18.x, r7.w
            div r7.w, r7.w, r18.y
            max r7.w, r7.w, l(0.00006104)
            and r10.z, r11.w, l(0x0000ffff)
            if_nz cb2[58].y
              mov r18.x, -r10.x
              utof r19.z, r10.z
              mov r18.y, r11.x
              mov r18.z, r10.x
              mov r10.w, l(0)
              mov r11.w, l(0)
              loop 
                ige r13.w, r11.w, l(8)
                breakc_nz r13.w
                dp2 r20.x, icb[r11.w + 0].yxyy, r18.xyxx
                dp2 r20.y, icb[r11.w + 0].yxyy, r18.yzyy
                mad r19.xy, r20.xyxx, r8.wwww, r17.xyxx
                sample_c_lz_indexable(texture2darray)(float,float,float,float) r13.w, r19.xyzx, t9.xxxx, s13, r7.w
                mad r10.w, r13.w, l(0.125000), r10.w
                iadd r11.w, r11.w, l(1)
              endloop 
            else 
              utof r17.z, r10.z
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.w, r17.xyzx, t9.xxxx, s13, r7.w
            endif 
            mul r7.w, r10.w, r10.w
            mul r7.w, r10.w, r7.w
          else 
            mov r7.w, l(1.000000)
          endif 
          mul r5.w, r5.w, r7.w
        endif 
      endif 
    endif 
    mad r7.w, -r5.x, l(0.500000), l(1.000000)
    mad r7.w, -|r5.z|, r7.w, l(1.000000)
    mul r7.w, r7.w, r7.w
    mad r7.w, -r7.w, l(0.620000), l(0.620000)
    add r7.w, -|r5.z|, r7.w
    mad r7.w, r3.w, r7.w, |r5.z|
    mul r7.w, r5.w, r7.w
    lt r8.w, l(0.000000), r5.z
    mad r17.xyz, r7.wwww, r12.yzwy, r15.xyzx
    mov_sat r5.z, r5.z
    mad r18.xyz, -v6.xyzx, r0.xxxx, cb2[17].xyzx
    dp3 r0.x, r18.xyzx, r18.xyzx
    rsq r0.x, r0.x
    mul r18.xyz, r0.xxxx, r18.xyzx
    dp3 r0.x, r18.xyzx, r0.yzwy
    dp3 r7.w, r6.xyzx, r18.xyzx
    mad r10.z, |r7.w|, r3.y, -|r7.w|
    mad r7.w, |r7.w|, r10.z, l(1.000000)
    mad r10.z, r5.z, r4.w, r5.y
    mul r7.w, r7.w, r7.w
    mul r7.w, r10.z, r7.w
    rcp r7.w, r7.w
    mul r5.z, r6.w, r5.z
    mul r5.z, r5.z, r7.w
    mul r5.z, r5.w, r5.z
    mad r18.xyz, r5.zzzz, r12.yzwy, r2.yzwy
    add_sat r0.x, -r0.x, l(1.000000)
    mul r5.w, r0.x, r0.x
    mul r5.w, r5.w, r5.w
    mul r0.x, r0.x, r5.w
    mul r0.x, r0.x, r5.z
    mad r19.xyz, r0.xxxx, r12.zwyz, r16.xyzx
    mov r17.w, r19.z
    mov r15.w, r16.z
    movc r15.xyzw, r8.wwww, r17.xyzw, r15.xyzw
    mov r19.zw, r18.xxxy
    mov r16.zw, r2.yyyz
    movc r17.xyzw, r8.wwww, r19.xyzw, r16.xyzw
    movc r2.w, r8.w, r18.z, r2.w
    mov r16.z, r15.w
    mov r16.xy, r17.xyxx
    mov r2.yz, r17.zzwz
  endif 
endif 
mov r17.x, -r10.x
not r0.x, r1.z
mad r5.x, -r5.x, l(0.500000), l(1.000000)
mov r18.xy, l(0,0,0,0)
mov r19.w, l(0)
mov r20.xyz, v6.xyzx
mov r20.w, l(1.000000)
mov r21.w, l(1.000000)
mov r17.z, r10.x
mov r22.w, l(1.000000)
mov r23.z, l(1.000000)
mov r24.w, l(1.000000)
mov r17.yw, r11.xxxx
mov r10.y, r17.w
mov r25.w, l(1.000000)
mov r11.y, r17.x
mov r11.z, r10.x
mov r26.w, l(1.000000)
mov r27.x, r11.x
mov r27.y, r17.x
mov r27.z, r10.x
mov r28.x, r11.x
mov r28.y, r17.x
mov r28.z, r10.x
mov r29.x, r11.x
mov r29.y, r17.x
mov r29.z, r10.x
mov r12.yzw, r15.xxyz
mov r30.xyz, r16.zxyz
mov r31.xyz, r2.yzwy
mov r5.z, cb2[58].y
mov r5.w, l(0)
loop 
  uge r6.w, r5.w, cb2[0].x
  breakc_nz r6.w
  ushr r18.z, r5.w, l(5)
  iadd r19.xyz, r14.xyzx, r18.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r6.w, r19.xyzw, t6.yzwx
  mov r19.xyz, r12.yzwy
  mov r32.xyz, r30.xyzx
  mov r33.xyz, r31.xyzx
  mov r7.w, r5.z
  mov r8.w, r6.w
  loop 
    breakc_z r8.w
    firstbit_lo r10.z, r8.w
    ishl r10.w, l(1), r10.z
    and r11.w, r8.w, r10.w
    if_nz r11.w
      xor r8.w, r8.w, r10.w
      iadd r10.z, r5.w, r10.z
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r34.xyzw, r10.z, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r35.xy, r10.z, l(16), t11.xyxx
      add r34.xyz, r34.xyzx, -v6.xyzx
      mov r35.z, r34.w
      lt r34.xyz, |r34.xyzx|, r35.zxyz
      and r10.w, r34.y, r34.x
      and r10.w, r34.z, r10.w
      if_nz r10.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r10.z, l(0), t12.wxyz
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r10.z, l(16), t12.zxyw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r10.z, l(32), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r10.z, l(48), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r10.z, l(64), t12.yzwx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r10.z, l(80), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r10.z, l(96), t12.yzwx
        ubfe r10.w, l(3), l(24), r35.w
        switch r10.w
          case l(4)
          lt r10.w, l(0.000000), r40.x
          mov r41.xy, r39.zwzz
          mov r41.z, r40.w
          mad r42.xyz, -r41.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r34.yzwy
          add r43.xyz, r42.xyzx, -v6.xyzx
          dp3 r11.w, r41.xyzx, r43.xyzx
          div_sat r13.w, -r11.w, r40.x
          mad r44.xyz, r13.wwww, r41.xyzx, r42.xyzx
          movc r44.xyz, r10.wwww, r44.xyzx, r34.yzwy
          add r44.xyz, r44.xyzx, -v6.xyzx
          dp3 r14.w, r44.xyzx, r44.xyzx
          rsq r15.w, r14.w
          mul r44.xyz, r15.wwww, r44.xyzx
          dp3 r15.w, r6.xyzx, r44.xyzx
          lt r16.w, l(0.000000), |r15.w|
          if_nz r16.w
            sqrt r16.w, r14.w
            mul r18.z, r37.x, r37.x
            div r14.w, r18.z, r14.w
            min r14.w, r14.w, l(1.000000)
            mad_sat r18.zw, r16.wwww, r36.xxxz, r36.yyyw
            mul r44.xy, r18.zwzz, r18.zwzz
            mad r18.zw, r18.zzzw, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
            mul r18.zw, r18.zzzw, r44.xxxy
            mul r14.w, r14.w, r18.z
            mul r14.w, r18.w, r14.w
            lt r16.w, l(0.000000), r14.w
            if_nz r16.w
              ubfe r16.w, l(3), l(27), r35.w
              ine r16.w, r16.w, l(1)
              if_nz r16.w
                mad r16.w, |r15.w|, l(-0.200000), l(0.400000)
                lt r18.z, r15.w, l(0.000000)
                movc r16.w, r18.z, -r16.w, r16.w
                mad r44.xyz, r6.xyzx, r16.wwww, v6.xyzx
                add r44.xyz, -r38.xyzx, r44.xyzx
                max r16.w, |r44.z|, |r44.y|
                max r16.w, r16.w, |r44.x|
                div r16.w, r39.x, r16.w
                add r16.w, r39.y, r16.w
                dp3 r18.z, r44.xyzx, r44.xyzx
                rsq r18.z, r18.z
                max r16.w, r16.w, l(0.00006104)
                and r18.w, r35.w, l(0x0000ffff)
                utof r45.w, r18.w
                mov r18.w, l(0)
                mov r23.w, l(0)
                loop 
                  ige r27.w, r23.w, l(8)
                  breakc_nz r27.w
                  dp2 r46.y, icb[r23.w + 0].yxyy, r17.xyxx
                  dp2 r46.z, icb[r23.w + 0].yxyy, r17.yzyy
                  mul r46.yz, r37.yyyy, r46.yyzy
                  mul r46.x, r12.x, r46.y
                  mul r46.w, r3.x, r46.y
                  mad r45.xyz, r44.xyzx, r18.zzzz, r46.xzwx
                  sample_c_lz_indexable(texturecubearray)(float,float,float,float) r27.w, r45.xyzw, t10.xxxx, s13, r16.w
                  mad r18.w, r27.w, l(0.125000), r18.w
                  iadd r23.w, r23.w, l(1)
                endloop 
              else 
                mov r18.w, l(1.000000)
              endif 
              mul r14.w, r14.w, r18.w
              lt r16.w, l(0.000000), r14.w
              if_nz r16.w
                mul r16.w, r3.y, r35.x
                mul r16.w, r16.w, l(0.250000)
                dp3 r18.z, r41.xyzx, r13.xyzx
                dp3 r23.w, r13.xyzx, r43.xyzx
                mad r27.w, -r18.z, r18.z, r40.x
                mad r11.w, r18.z, r23.w, -r11.w
                div_sat r11.w, r11.w, r27.w
                div r18.z, r27.w, r40.x
                mul r18.z, r18.z, l(10.000000)
                min r18.z, r18.z, l(1.000000)
                add r11.w, -r13.w, r11.w
                mad r11.w, r18.z, r11.w, r13.w
                mad r41.xyz, r11.wwww, r41.xyzx, r42.xyzx
                movc r41.xyz, r10.wwww, r41.xyzx, r34.yzwy
                add r41.xyz, r41.xyzx, -v6.xyzx
                dp3 r10.w, r41.xyzx, r41.xyzx
                rsq r10.w, r10.w
                mul r42.xyz, r10.wwww, r41.xyzx
                ubfe r11.w, l(4), l(16), r35.w
                ult r13.w, l(0), r11.w
                and r13.w, r1.z, r13.w
                if_nz r13.w
                  iadd r11.w, r11.w, cb2[0].x
                  iadd r11.w, r11.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.w, r11.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r11.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r11.w, l(116), t12.xyzw
                  mad r18.z, |r15.w|, l(-0.200000), l(0.400000)
                  lt r23.w, r15.w, l(0.000000)
                  movc r18.z, r23.w, -r18.z, r18.z
                  mad r21.xyz, r6.xyzx, r18.zzzz, v6.xyzx
                  dp4 r18.z, r43.xyzw, r21.xyzw
                  dp4 r23.w, r44.xyzw, r21.xyzw
                  lt r27.w, r23.w, r18.z
                  if_z r27.w
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r11.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r11.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xyzw, r11.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r46.xyzw, r11.w, l(148), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r47.xy, r11.w, l(164), t12.xyxx
                    dp4 r43.x, r43.xyzw, r21.xyzw
                    dp4 r43.y, r44.xyzw, r21.xyzw
                    div r21.xy, r43.xyxx, r23.wwww
                    mad r21.xy, r21.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r21.xy, r46.zwzz, r21.xyxx
                    mul r21.xy, r46.xyxx, r21.xyxx
                    div r43.xy, r13.wwww, r45.xzxx
                    add r43.zw, -r43.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                    ge r43.zw, r21.xxxy, r43.zzzw
                    ge r43.xy, r43.xyxx, r21.xyxx
                    or r43.xy, r43.xyxx, r43.zwzz
                    or r21.z, r43.y, r43.x
                    mov_sat r21.xy, r21.xyxx
                    mad r43.xy, r21.xyxx, r45.xzxx, r45.ywyy
                    mul r21.x, r23.w, r47.y
                    mad r18.z, r47.x, r23.w, r18.z
                    div r18.z, r18.z, r21.x
                  else 
                    mov r21.z, l(-1)
                  endif 
                  or r21.x, r27.w, r21.z
                  if_z r21.x
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r11.w, r11.w, l(28), t12.xxxx
                    max r18.z, r18.z, l(0.00006104)
                    and r11.w, r11.w, l(0x0000ffff)
                    if_nz r7.w
                      utof r21.z, r11.w
                      mov r23.w, l(0)
                      mov r27.w, l(0)
                      loop 
                        ige r28.w, r27.w, l(8)
                        breakc_nz r28.w
                        dp2 r44.x, icb[r27.w + 0].yxyy, r17.xwxx
                        dp2 r44.y, icb[r27.w + 0].xyxx, r10.xyxx
                        mad r21.xy, r44.xyxx, r13.wwww, r43.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.x, r21.xyzx, t9.xxxx, s13, r18.z
                        mad r23.w, r21.x, l(0.125000), r23.w
                        iadd r27.w, r27.w, l(1)
                      endloop 
                    else 
                      utof r43.z, r11.w
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.w, r43.xyzx, t9.xxxx, s13, r18.z
                    endif 
                    mul r11.w, r23.w, r23.w
                    mul r11.w, r23.w, r11.w
                  else 
                    mov r11.w, l(1.000000)
                  endif 
                  mul r14.w, r11.w, r14.w
                else 
                  ubfe r11.w, l(4), l(20), r35.w
                  ult r13.w, l(0), r11.w
                  and r13.w, r0.x, r13.w
                  if_nz r13.w
                    iadd r11.w, r11.w, cb2[0].x
                    iadd r11.w, r11.w, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.w, r11.w, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r11.w, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r11.w, l(116), t12.xyzw
                    mad r18.z, |r15.w|, l(-0.200000), l(0.400000)
                    lt r21.x, r15.w, l(0.000000)
                    movc r18.z, r21.x, -r18.z, r18.z
                    mad r22.xyz, r6.xyzx, r18.zzzz, v6.xyzx
                    dp4 r18.z, r43.xyzw, r22.xyzw
                    dp4 r21.x, r44.xyzw, r22.xyzw
                    lt r21.y, r21.x, r18.z
                    if_z r21.y
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r11.w, l(68), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r11.w, l(84), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xyzw, r11.w, l(132), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r46.xyzw, r11.w, l(148), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r47.xy, r11.w, l(164), t12.xyxx
                      dp4 r43.x, r43.xyzw, r22.xyzw
                      dp4 r43.y, r44.xyzw, r22.xyzw
                      div r22.xy, r43.xyxx, r21.xxxx
                      mad r22.xy, r22.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                      add r22.xy, r46.zwzz, r22.xyxx
                      mul r22.xy, r46.xyxx, r22.xyxx
                      div r43.xy, r13.wwww, r45.xzxx
                      add r43.zw, -r43.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                      ge r43.zw, r22.xxxy, r43.zzzw
                      ge r43.xy, r43.xyxx, r22.xyxx
                      or r43.xy, r43.xyxx, r43.zwzz
                      or r21.z, r43.y, r43.x
                      mov_sat r22.xy, r22.xyxx
                      mad r22.xy, r22.xyxx, r45.xzxx, r45.ywyy
                      mul r27.w, r21.x, r47.y
                      mad r18.z, r47.x, r21.x, r18.z
                      div r18.z, r18.z, r27.w
                    else 
                      mov r21.z, l(-1)
                    endif 
                    or r21.x, r21.y, r21.z
                    if_z r21.x
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r11.w, r11.w, l(28), t12.xxxx
                      max r18.z, r18.z, l(0.00006104)
                      and r11.w, r11.w, l(0x0000ffff)
                      if_nz r7.w
                        utof r21.z, r11.w
                        mov r27.w, l(0)
                        mov r28.w, l(0)
                        loop 
                          ige r29.w, r28.w, l(8)
                          breakc_nz r29.w
                          dp2 r43.x, icb[r28.w + 0].xyxx, r11.xyxx
                          dp2 r43.y, icb[r28.w + 0].yxyy, r11.xzxx
                          mad r21.xy, r43.xyxx, r13.wwww, r22.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.x, r21.xyzx, t9.xxxx, s13, r18.z
                          mad r27.w, r21.x, l(0.125000), r27.w
                          iadd r28.w, r28.w, l(1)
                        endloop 
                      else 
                        utof r22.z, r11.w
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r27.w, r22.xyzx, t9.xxxx, s13, r18.z
                      endif 
                      mul r11.w, r27.w, r27.w
                      mul r11.w, r27.w, r11.w
                    else 
                      mov r11.w, l(1.000000)
                    endif 
                    mul r14.w, r11.w, r14.w
                  endif 
                endif 
                mad r11.w, -|r15.w|, r5.x, l(1.000000)
                mul r11.w, r11.w, r11.w
                mad r11.w, -r11.w, l(0.620000), l(0.620000)
                add r11.w, -|r15.w|, r11.w
                mad r11.w, r3.w, r11.w, |r15.w|
                mul r11.w, r14.w, r11.w
                mov r35.x, r34.x
                lt r13.w, l(0.000000), r15.w
                mad r21.xyz, r11.wwww, r35.xyzx, r19.xyzx
                dp3_sat r11.w, r6.xyzx, r42.xyzx
                mad r22.xyz, r41.xyzx, r10.wwww, r0.yzwy
                dp3 r10.w, r22.xyzx, r22.xyzx
                rsq r10.w, r10.w
                mul r22.xyz, r10.wwww, r22.xyzx
                dp3 r10.w, r22.xyzx, r0.yzwy
                dp3 r15.w, r6.xyzx, r22.xyzx
                mad r18.z, |r15.w|, r3.y, -|r15.w|
                mad r15.w, |r15.w|, r18.z, l(1.000000)
                mad r18.z, r11.w, r4.w, r5.y
                mul r15.w, r15.w, r15.w
                mul r15.w, r18.z, r15.w
                rcp r15.w, r15.w
                mul r11.w, r16.w, r11.w
                mul r11.w, r11.w, r15.w
                mul r11.w, r14.w, r11.w
                mad r22.xyz, r11.wwww, r35.xyzx, r33.xyzx
                add_sat r10.w, -r10.w, l(1.000000)
                mul r14.w, r10.w, r10.w
                mul r14.w, r14.w, r14.w
                mul r10.w, r10.w, r14.w
                mul r10.w, r10.w, r11.w
                mad r41.xyz, r10.wwww, r35.xyzx, r32.xyzx
                movc r19.xyz, r13.wwww, r21.xyzx, r19.xyzx
                movc r32.xyz, r13.wwww, r41.xyzx, r32.xyzx
                movc r33.xyz, r13.wwww, r22.xyzx, r33.xyzx
              endif 
            endif 
          endif 
          break 
          case l(2)
          mov r21.xy, r37.zwzz
          mov r21.z, r38.w
          add r21.xyz, r21.xyzx, -v6.xyzx
          dp3 r10.w, r21.xyzx, r21.xyzx
          rsq r10.w, r10.w
          mul r22.xyz, r10.wwww, r21.xyzx
          dp3 r11.w, r6.xyzx, r22.xyzx
          lt r13.w, l(0.000000), |r11.w|
          if_nz r13.w
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r10.z, l(112), t12.yzwx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r10.z, l(128), t12.zxyw
            mov r43.xyz, r41.xyzx
            mov r43.w, r42.y
            dp4 r13.w, r43.xyzw, r20.xyzw
            lt r14.w, r13.w, l(1.000000)
            if_nz r14.w
              mov r22.xyz, l(1.000000,1.000000,1.000000,0)
              mov r14.w, l(0)
            else 
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r10.z, l(172), t12.yzwx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xyzw, r10.z, l(188), t12.wxyz
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r46.xyzw, r10.z, l(204), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.w, r10.z, l(236), t12.xxxx
              add r47.xyz, r34.yzwy, -v6.xyzx
              mul r16.w, r37.x, r37.x
              dp3 r18.z, r47.xyzx, r47.xyzx
              div r16.w, r16.w, r18.z
              min r16.w, r16.w, l(1.000000)
              mad_sat r36.xy, r13.wwww, r36.xzxx, r36.ywyy
              mul r36.zw, r36.xxxy, r36.xxxy
              mad r36.xy, r36.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
              mul r36.xy, r36.xyxx, r36.zwzz
              mul r16.w, r16.w, r36.x
              mul r16.w, r36.y, r16.w
              mov r38.w, r39.x
              dp4 r36.x, r38.xyzw, r20.xyzw
              mov r47.xyz, r39.yzwy
              mov r47.w, r40.w
              dp4 r36.y, r47.xyzw, r20.xyzw
              div r23.xy, r36.xyxx, r13.wwww
              lt r13.w, r44.w, l(0.00048828)
              if_nz r13.w
                mov r45.y, r46.x
                mad_sat r36.xy, |r23.xyxx|, r45.zwzz, r45.xyxx
                mul r36.zw, r36.xxxy, r36.xxxy
                mad r36.xy, r36.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
                mul r36.xy, r36.xyxx, r36.zwzz
                mul r13.w, r36.y, r36.x
              else 
                mov r44.w, r45.y
                mul_sat r36.xyzw, |r23.yyxx|, r44.xyzw
                log r36.xyzw, r36.xyzw
                mul r36.xyzw, r36.xyzw, r45.xxxx
                exp r36.xyzw, r36.xyzw
                add r36.xy, r36.zwzz, r36.xyxx
                log r36.xy, r36.xyxx
                mul r36.xy, r36.xyxx, r46.xxxx
                exp r36.xy, r36.xyxx
                mul r18.z, r36.x, r45.z
                mad r28.w, r45.w, r36.y, l(-1.000000)
                mad r18.z, r45.w, r36.y, -r18.z
                div_sat r18.z, r28.w, r18.z
                mul r28.w, r18.z, r18.z
                mad r18.z, r18.z, l(-2.000000), l(3.000000)
                mul r13.w, r18.z, r28.w
              endif 
              mul r14.w, r13.w, r16.w
              and r13.w, r15.w, l(255)
              if_nz r13.w
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyz, r10.z, l(220), t12.xyzx
                dp3 r15.w, r46.yzwy, r23.xyzx
                dp3 r16.w, r36.xyzx, r23.xyzx
                frc r36.x, r15.w
                frc r36.y, r16.w
                iadd r13.w, r13.w, l(-1)
                utof r36.z, r13.w
                sample_l_indexable(texture2darray)(float,float,float,float) r22.xyz, r36.xyzx, t20.xyzw, s2, l(0.000000)
              else 
                mov r22.xyz, l(1.000000,1.000000,1.000000,0)
              endif 
            endif 
            mov r34.yz, r35.yyzy
            mul r22.xyz, r22.xyzx, r34.xyzx
            lt r13.w, l(0.000000), r14.w
            if_nz r13.w
              ubfe r13.w, l(3), l(27), r35.w
              ine r13.w, r13.w, l(1)
              if_nz r13.w
                mad r13.w, |r11.w|, l(-0.200000), l(0.400000)
                lt r15.w, r11.w, l(0.000000)
                movc r13.w, r15.w, -r13.w, r13.w
                mad r24.xyz, r6.xyzx, r13.wwww, v6.xyzx
                mov r41.xyz, r40.xyzx
                dp4 r13.w, r41.xyzw, r24.xyzw
                dp4 r15.w, r43.xyzw, r24.xyzw
                ge r16.w, r15.w, r13.w
                if_nz r16.w
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.y, r10.z, l(144), t12.xxxx
                  mov r38.w, r39.x
                  dp4 r23.x, r38.xyzw, r24.xyzw
                  mov r40.xyz, r39.yzwy
                  dp4 r23.y, r40.xyzw, r24.xyzw
                  div r23.xy, r23.xyxx, r15.wwww
                  mad_sat r23.xy, r23.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  mad r24.xy, r23.xyxx, r42.zwzz, r42.xyxx
                  div r10.z, r13.w, r15.w
                  max r10.z, r10.z, l(0.00006104)
                  and r13.w, r35.w, l(0x0000ffff)
                  if_nz r7.w
                    utof r34.z, r13.w
                    mov r15.w, l(0)
                    mov r16.w, l(0)
                    loop 
                      ige r18.z, r16.w, l(8)
                      breakc_nz r18.z
                      dp2 r23.x, icb[r16.w + 0].xyxx, r27.xyxx
                      dp2 r23.y, icb[r16.w + 0].yxyy, r27.xzxx
                      mad r34.xy, r23.xyxx, r37.yyyy, r24.xyxx
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r18.z, r34.xyzx, t9.xxxx, s13, r10.z
                      mad r15.w, r18.z, l(0.125000), r15.w
                      iadd r16.w, r16.w, l(1)
                    endloop 
                  else 
                    utof r24.z, r13.w
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r15.w, r24.xyzx, t9.xxxx, s13, r10.z
                  endif 
                  mul r10.z, r15.w, r15.w
                  mul r10.z, r15.w, r10.z
                else 
                  mov r10.z, l(1.000000)
                endif 
              else 
                mov r10.z, l(1.000000)
              endif 
              mul r10.z, r10.z, r14.w
              lt r13.w, l(0.000000), r10.z
              if_nz r13.w
                mul r13.w, r3.y, r35.x
                mul r13.w, r13.w, l(0.250000)
                ubfe r14.w, l(4), l(16), r35.w
                ult r16.w, l(0), r14.w
                and r16.w, r1.z, r16.w
                if_nz r16.w
                  iadd r14.w, r14.w, cb2[0].x
                  iadd r14.w, r14.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.w, r14.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r14.w, l(68), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r14.w, l(84), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r14.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r14.w, l(116), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r14.w, l(132), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r14.w, l(148), t12.xyzw
                  mad r18.z, |r11.w|, l(-0.200000), l(0.400000)
                  lt r23.x, r11.w, l(0.000000)
                  movc r18.z, r23.x, -r18.z, r18.z
                  mad r25.xyz, r6.xyzx, r18.zzzz, v6.xyzx
                  dp4 r23.x, r34.xyzw, r25.xyzw
                  dp4 r23.y, r36.xyzw, r25.xyzw
                  dp4 r18.z, r37.xyzw, r25.xyzw
                  dp4 r24.x, r38.xyzw, r25.xyzw
                  lt r24.y, r24.x, r18.z
                  div r23.xy, r23.xyxx, r24.xxxx
                  mad r23.xy, r23.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r23.xy, r40.zwzz, r23.xyxx
                  mul r23.xy, r40.xyxx, r23.xyxx
                  div r25.xy, r16.wwww, r39.xzxx
                  add r34.xy, -r25.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                  ge r34.xy, r23.xyxx, r34.xyxx
                  ge r25.xy, r25.xyxx, r23.xyxx
                  or r25.xy, r25.xyxx, r34.xyxx
                  or r24.z, r25.y, r25.x
                  or r24.y, r24.y, r24.z
                  if_z r24.y
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r24.y, r14.w, l(28), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r25.xy, r14.w, l(164), t12.xyxx
                    mov_sat r23.xy, r23.xyxx
                    mad r34.xy, r23.xyxx, r39.xzxx, r39.ywyy
                    mul r14.w, r24.x, r25.y
                    mad r18.z, r25.x, r24.x, r18.z
                    div r14.w, r18.z, r14.w
                    max r14.w, r14.w, l(0.00006104)
                    and r18.z, r24.y, l(0x0000ffff)
                    if_nz r7.w
                      utof r24.z, r18.z
                      mov r23.xy, l(0,0,0,0)
                      loop 
                        ige r25.x, r23.y, l(8)
                        breakc_nz r25.x
                        dp2 r25.x, icb[r23.y + 0].xyxx, r28.xyxx
                        dp2 r25.y, icb[r23.y + 0].yxyy, r28.xzxx
                        mad r24.xy, r25.xyxx, r16.wwww, r34.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.x, r24.xyzx, t9.xxxx, s13, r14.w
                        mad r23.x, r24.x, l(0.125000), r23.x
                        iadd r23.y, r23.y, l(1)
                      endloop 
                    else 
                      utof r34.z, r18.z
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.x, r34.xyzx, t9.xxxx, s13, r14.w
                    endif 
                    mul r14.w, r23.x, r23.x
                    mul r14.w, r23.x, r14.w
                  else 
                    mov r14.w, l(1.000000)
                  endif 
                  mul r10.z, r10.z, r14.w
                else 
                  ubfe r14.w, l(4), l(20), r35.w
                  ult r16.w, l(0), r14.w
                  and r16.w, r0.x, r16.w
                  if_nz r16.w
                    iadd r14.w, r14.w, cb2[0].x
                    iadd r14.w, r14.w, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.w, r14.w, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r14.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r14.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r14.w, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r14.w, l(116), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r14.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r14.w, l(148), t12.xyzw
                    mad r18.z, |r11.w|, l(-0.200000), l(0.400000)
                    lt r23.y, r11.w, l(0.000000)
                    movc r18.z, r23.y, -r18.z, r18.z
                    mad r26.xyz, r6.xyzx, r18.zzzz, v6.xyzx
                    dp4 r24.x, r34.xyzw, r26.xyzw
                    dp4 r24.y, r35.xyzw, r26.xyzw
                    dp4 r18.z, r36.xyzw, r26.xyzw
                    dp4 r23.y, r37.xyzw, r26.xyzw
                    lt r24.z, r23.y, r18.z
                    div r24.xy, r24.xyxx, r23.yyyy
                    mad r24.xy, r24.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r24.xy, r39.zwzz, r24.xyxx
                    mul r24.xy, r39.xyxx, r24.xyxx
                    div r25.xy, r16.wwww, r38.xzxx
                    add r26.xy, -r25.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                    ge r26.xy, r24.xyxx, r26.xyxx
                    ge r25.xy, r25.xyxx, r24.xyxx
                    or r25.xy, r25.xyxx, r26.xyxx
                    or r25.x, r25.y, r25.x
                    or r24.z, r24.z, r25.x
                    if_z r24.z
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r24.z, r14.w, l(28), t12.xxxx
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r25.xy, r14.w, l(164), t12.xyxx
                      mov_sat r24.xy, r24.xyxx
                      mad r26.xy, r24.xyxx, r38.xzxx, r38.ywyy
                      mul r14.w, r23.y, r25.y
                      mad r18.z, r25.x, r23.y, r18.z
                      div r14.w, r18.z, r14.w
                      max r14.w, r14.w, l(0.00006104)
                      and r18.z, r24.z, l(0x0000ffff)
                      if_nz r7.w
                        utof r24.z, r18.z
                        mov r23.y, l(0)
                        mov r25.x, l(0)
                        loop 
                          ige r25.y, r25.x, l(8)
                          breakc_nz r25.y
                          dp2 r34.x, icb[r25.x + 0].xyxx, r29.xyxx
                          dp2 r34.y, icb[r25.x + 0].yxyy, r29.xzxx
                          mad r24.xy, r34.xyxx, r16.wwww, r26.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.x, r24.xyzx, t9.xxxx, s13, r14.w
                          mad r23.y, r24.x, l(0.125000), r23.y
                          iadd r25.x, r25.x, l(1)
                        endloop 
                      else 
                        utof r26.z, r18.z
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.y, r26.xyzx, t9.xxxx, s13, r14.w
                      endif 
                      mul r14.w, r23.y, r23.y
                      mul r14.w, r23.y, r14.w
                    else 
                      mov r14.w, l(1.000000)
                    endif 
                    mul r10.z, r10.z, r14.w
                  endif 
                endif 
                mad r14.w, -|r11.w|, r5.x, l(1.000000)
                mul r14.w, r14.w, r14.w
                mad r14.w, -r14.w, l(0.620000), l(0.620000)
                add r14.w, -|r11.w|, r14.w
                mad r14.w, r3.w, r14.w, |r11.w|
                mul r14.w, r10.z, r14.w
                lt r16.w, l(0.000000), r11.w
                mad r24.xyz, r14.wwww, r22.xyzx, r19.xyzx
                mov_sat r11.w, r11.w
                mad r21.xyz, r21.xyzx, r10.wwww, r0.yzwy
                dp3 r10.w, r21.xyzx, r21.xyzx
                rsq r10.w, r10.w
                mul r21.xyz, r10.wwww, r21.xyzx
                dp3 r10.w, r21.xyzx, r0.yzwy
                dp3 r14.w, r6.xyzx, r21.xyzx
                mad r18.z, |r14.w|, r3.y, -|r14.w|
                mad r14.w, |r14.w|, r18.z, l(1.000000)
                mad r18.z, r11.w, r4.w, r5.y
                mul r14.w, r14.w, r14.w
                mul r14.w, r18.z, r14.w
                rcp r14.w, r14.w
                mul r11.w, r13.w, r11.w
                mul r11.w, r11.w, r14.w
                mul r10.z, r10.z, r11.w
                mad r21.xyz, r10.zzzz, r22.xyzx, r33.xyzx
                add_sat r10.w, -r10.w, l(1.000000)
                mul r11.w, r10.w, r10.w
                mul r11.w, r11.w, r11.w
                mul r10.w, r10.w, r11.w
                mul r10.z, r10.w, r10.z
                mad r22.xyz, r10.zzzz, r22.xyzx, r32.xyzx
                movc r19.xyz, r16.wwww, r24.xyzx, r19.xyzx
                movc r32.xyz, r16.wwww, r22.xyzx, r32.xyzx
                movc r33.xyz, r16.wwww, r21.xyzx, r33.xyzx
              endif 
            endif 
          endif 
          break 
          default 
          break 
        endswitch 
      endif 
    endif 
  endloop 
  mov r12.yzw, r19.xxyz
  mov r30.xyz, r32.xyzx
  mov r31.xyz, r33.xyzx
  iadd r5.w, r5.w, l(32)
endloop 
add r0.xyz, -r7.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r0.xyz, r0.xyzx, r30.xyzx
mad r0.xyz, r31.xyzx, r7.xyzx, r0.xyzx
mad r0.xyz, r12.yzwy, r4.xyzx, r0.xyzx
add r0.w, -cb0[19].w, l(1.000000)
mul r0.w, r0.w, r9.w
mad r1.xyz, r1.xywx, r3.zzzz, -r8.xyzx
mad r1.xyz, r0.wwww, r1.xyzx, r8.xyzx
mul r1.xyz, r2.xxxx, r1.xyzx
dp3 r0.w, r0.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
max r0.w, r0.w, l(0.000100)
max r0.w, r0.w, cb1[85].x
mul r2.xyz, r0.wwww, r1.xyzx
movc r1.xyz, cb0[17].wwww, r2.xyzx, r1.xyzx
add r0.xyz, r0.xyzx, r1.xyzx
lt r0.w, l(0.000000), cb2[9].z
if_nz r0.w
  dp3 r0.w, v6.xyzx, v6.xyzx
  rsq r1.x, r0.w
  mul r1.xyz, r1.xxxx, v6.xyzx
  sqrt r0.w, r0.w
  lt r1.w, l(0.000000), cb2[13].w
  if_nz r1.w
    mad r2.xy, r0.wwww, cb2[15].xyxx, cb2[14].zwzz
    mul r2.xy, r2.xyxx, cb2[16].xyxx
    lt r1.w, l(0.010000), |v6.z|
    mul r2.zw, v6.zzzz, cb2[15].zzzw
    mul r3.xy, r2.zwzz, l(-1.442695, -1.442695, 0.000000, 0.000000)
    exp r3.xy, r3.xyxx
    add r3.xy, -r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    div r2.zw, r3.xxxy, r2.zzzw
    mul r2.zw, r2.zzzw, r2.xxxy
    movc r2.xy, r1.wwww, r2.zwzz, r2.xyxx
    mul r2.xzw, r2.xxxx, cb2[12].xxyz
    exp r2.xzw, r2.xxzw
    mul r3.xyz, r2.yyyy, cb2[12].xyzx
    exp r3.xyz, r3.xyzx
    add r3.xyz, -r2.xzwx, r3.xyzx
    mad r2.xyz, cb2[13].wwww, r3.xyzx, r2.xzwx
  else 
    mad r1.w, r0.w, cb2[15].x, cb2[14].z
    mul r1.w, r1.w, cb2[16].x
    lt r2.w, l(0.010000), |v6.z|
    mul r3.x, v6.z, cb2[15].z
    mul r3.y, r3.x, l(-1.442695)
    exp r3.y, r3.y
    add r3.y, -r3.y, l(1.000000)
    div r3.x, r3.y, r3.x
    mul r3.x, r1.w, r3.x
    movc r1.w, r2.w, r3.x, r1.w
    mul r3.xyz, r1.wwww, cb2[12].xyzx
    exp r2.xyz, r3.xyzx
  endif 
  mad r2.xyz, r2.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r2.xyz, r2.xyzx, -cb2[9].zzzz
  dp3 r1.x, cb2[7].yzwy, -r1.xyzx
  mad r1.y, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r1.z, cb2[8].w, -r1.x, l(1.000000)
  mul r1.z, r1.z, r1.z
  mul r1.z, r1.z, l(12.566371)
  div r1.y, r1.y, r1.z
  add r0.w, r0.w, -cb2[10].w
  mul_sat r0.w, r0.w, cb2[11].w
  mul r0.w, r0.w, r1.y
  mov_sat r1.x, r1.x
  mad r1.x, r1.x, r1.x, l(1.000000)
  mad r1.x, r1.x, l(0.05968310), l(-1.000000)
  mad r1.x, cb2[8].z, r1.x, l(1.000000)
  mul r1.yzw, r0.wwww, cb2[11].xxyz
  mad r1.xyz, r1.xxxx, cb2[10].xyzx, r1.yzwy
  mul r1.xyz, r1.xyzx, cb2[9].wwww
  add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r1.xyz, r1.xyzx, r3.xyzx
  mad r1.xyz, r0.xyzx, r2.xyzx, r1.xyzx
else 
  mul r0.w, v6.z, cb2[6].x
  mad r1.w, cb2[6].x, v6.z, cb2[5].x
  lt r2.x, |r0.w|, l(0.000100)
  min r2.y, r1.w, l(64.000000)
  mul r2.y, r2.y, l(1.442695)
  exp r2.y, r2.y
  mov_sat r2.z, cb2[6].z
  lt r2.w, r1.w, l(0.000000)
  add r1.w, r1.w, l(1.000000)
  movc r1.w, r2.w, r2.y, r1.w
  add r1.w, r1.w, -cb2[6].z
  movc r0.w, r2.x, l(1.000000), r0.w
  div r0.w, r1.w, r0.w
  movc r0.w, r2.x, r2.z, r0.w
  mul r0.w, r0.w, cb2[5].z
  dp3 r1.w, v6.xyzx, v6.xyzx
  sqrt r2.x, r1.w
  mad r0.w, r0.w, r2.x, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  rsq r1.w, r1.w
  mul r2.xyz, r1.wwww, v6.xyzx
  dp3 r1.w, cb2[7].yzwy, r2.xyzx
  mad_sat r1.w, cb2[8].y, r1.w, cb2[8].x
  add r2.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r2.xyzw, r1.wwww, r2.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r2.w
  add r2.xyz, -r0.xyzx, r2.xyzx
  mad r1.xyz, r0.wwww, r2.xyzx, r0.xyzx
endif 
mul r0.xyz, r1.xyzx, cb1[85].yyyy
ge r1.xyz, r0.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.xyz, r0.xyzx, r1.xyzx
min r0.xyz, r0.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
max r1.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r9.xyz, r9.wwww, r1.xyzx
and r0.w, r9.w, l(0x7f800000)
ieq r0.w, r0.w, l(0x7f800000)
eq r2.xyzw, r9.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
and r2.xy, r2.zwzz, r2.xyxx
and r1.w, r2.y, r2.x
or r0.w, r0.w, r1.w
if_z r0.w
  ftou r2.xy, v0.xyxx
  imm_atomic_iadd r2.z, u6, r2.xyxx, l(1)
  ult r0.w, r2.z, cb2[58].z
  if_nz r0.w
    max r0.w, r9.z, r9.y
    max r0.w, r0.w, r9.x
    mov r0.w, |r0.w|
    and r0.w, r0.w, l(0x7f800000)
    iadd r0.w, r0.w, l(0x00800000)
    mad r1.xyz, r1.xyzx, r9.wwww, r0.wwww
    ubfe r1.x, l(8), l(15), r1.x
    ushr r1.yz, r1.yyzy, l(0, 15, 15, 0)
    bfi r1.yz, l(0, 8, 8, 0), l(0, 8, 16, 0), r1.yyzy, l(0, 0, 0, 0)
    iadd r1.x, r1.y, r1.x
    iadd r1.x, r1.z, r1.x
    ishl r0.w, r0.w, l(1)
    iadd r1.xzw, r0.wwww, r1.xxxx
    mov_sat r0.w, r9.w
    mul r0.w, r0.w, l(2046.000000)
    ftou r0.w, r0.w
    ishl r2.w, v0.z, l(2)
    and r0.w, r0.w, l(2046)
    bfi r1.y, l(11), l(0), r0.w, r2.w
    store_uav_typed u7.xyzw, r2.xyzz, r1.xyzw
    mov r0.w, l(-1)
  else 
    mov r0.w, l(0)
  endif 
else 
  mov r0.w, l(-1)
endif 
mul r9.xyz, r9.wwww, r0.xyzx
movc o0.xyzw, r0.wwww, l(0,0,0,0), r9.xyzw
ret 
// Approximately 2506 instruction slots used
