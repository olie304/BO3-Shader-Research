//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:27:16 2021
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16
//   float4 colorDetailScale;           // Offset:  144 Size:    16
//   float3 colorTint;                  // Offset:  160 Size:    12
//   float baseNormalHeight;            // Offset:  172 Size:     4
//   float2 glossRange;                 // Offset:  176 Size:     8
//   float detailScaleHeight;           // Offset:  184 Size:     4
//   float3 crackReveal;                // Offset:  192 Size:    12 [unused]
//   float4 colorTint1;                 // Offset:  208 Size:    16
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16 [unused]
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16 [unused]
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16
//   float4 debugGlossOverride;         // Offset:  992 Size:    16
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16 [unused]
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16 [unused]
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
// Resource bind info for shaderConstantSetBuffer
// {
//
//   struct GpuShaderConstantSet
//   {
//       
//       float4 scriptVector0;          // Offset:    0
//       float4 scriptVector1;          // Offset:   16
//       float4 scriptVector2;          // Offset:   32
//       float4 scriptVector3;          // Offset:   48
//       float4 scriptVector4;          // Offset:   64
//       float4 scriptVector5;          // Offset:   80
//       float4 scriptVector6;          // Offset:   96
//       float4 scriptVector7;          // Offset:  112
//       float4 weaponParam0;           // Offset:  128
//       float4 weaponParam1;           // Offset:  144
//       float4 weaponParam2;           // Offset:  160
//       float4 weaponParam3;           // Offset:  176
//       float4 weaponParam4;           // Offset:  192
//       float4 weaponParam5;           // Offset:  208
//       float4 weaponParam6;           // Offset:  224
//       float4 weaponParam7;           // Offset:  240
//       float4 characterParam0;        // Offset:  256
//       float4 characterParam1;        // Offset:  272
//       float4 characterParam2;        // Offset:  288
//       float4 characterParam3;        // Offset:  304
//       float4 characterParam4;        // Offset:  320
//       float4 characterParam5;        // Offset:  336
//       float4 characterParam6;        // Offset:  352
//       float4 characterParam7;        // Offset:  368
//
//   } $Element;                        // Offset:    0 Size:   384
//
// }
//
// Resource bind info for modelInstanceBuffer
// {
//
//   struct ModelInstanceData
//   {
//       
//       uint boneArrayIndex;           // Offset:    0
//       uint shaderConstantSet;        // Offset:    4
//       uint flagsAndPrevFrameIndex;   // Offset:    8
//       uint worldMatrix;              // Offset:   12
//       uint siegeAnimStateOffset;     // Offset:   16
//       uint prevFrameSiegeAnimStateOffset;// Offset:   20
//
//   } $Element;                        // Offset:    0 Size:    24
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// colorSampler                      sampler      NA          NA             s1      1 
// specColorSampler                  sampler      NA          NA             s2      1 
// normalSampler                     sampler      NA          NA             s3      1 
// aoSampler                         sampler      NA          NA             s4      1 
// crackSampler                      sampler      NA          NA             s5      1 
// shaderConstantSetBuffer           texture  struct         r/o             t0      1 
// modelInstanceBuffer               texture  struct         r/o             t4      1 
// colorMap                          texture  float4          2d             t6      1 
// normalMap                         texture  float4          2d             t7      1 
// glossMap                          texture  float4          2d             t9      1 
// aoMap                             texture  float4          2d            t10      1 
// detailMap                         texture  float4          2d            t11      1 
// crackMap                          texture  float4          2d            t12      1 
// crackNormalMap                    texture  float4          2d            t14      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// COLOR                    0   xyz         1     NONE   float   xyz 
// COLOR                    1      w        1     NONE   float       
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 4   x           3     NONE    uint   x   
// TEXCOORD                 1   xyz         4     NONE   float   xyz 
// TEXCOORD                 2   xyz         5     NONE   float   xyz 
// TEXCOORD                 3   xyz         6     NONE   float   xyz 
// SV_IsFrontFace           0   x           7    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
// SV_TARGET                1   xyzw        1   TARGET   float   xyzw
// SV_TARGET                2   xyzw        2   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[14], immediateIndexed
dcl_constantbuffer CB1[65], immediateIndexed
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_resource_structured t0, 384
dcl_resource_structured t4, 24
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t11
dcl_resource_texture2d (float,float,float,float) t12
dcl_resource_texture2d (float,float,float,float) t14
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xy
dcl_input_ps constant v3.x
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps_sgv constant v7.x, is_front_face
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_temps 9
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v2.xyxx, t6.xyzw, s1
add r1.xyz, cb0[10].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r1.xyz, r0.wwww, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r0.xyz, r0.xyzx, r1.xyzx
sample_indexable(texture2d)(float,float,float,float) r0.w, v2.xyxx, t10.yzwx, s4
sample_indexable(texture2d)(float,float,float,float) r1.x, v2.xyxx, t9.xyzw, s2
add r1.y, -cb0[11].x, cb0[11].y
mad r1.x, r1.x, r1.y, cb0[11].x
mul_sat r1.x, r1.x, l(0.05882353)
sample_indexable(texture2d)(float,float,float,float) r2.xyz, v2.xyxx, t7.xyzw, s3
add r2.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.000000, 0.000000)
mad r2.xyz, cb0[10].wwww, r2.xyzx, l(0.500000, 0.500000, 0.000000, 0.000000)
mad r1.zw, r2.xxxy, l(0.000000, 0.000000, 1.99218750, 1.99218750), l(0.000000, 0.000000, -1.000000, -1.000000)
dp2 r2.x, r1.zwzz, r1.zwzz
add r2.x, -r2.x, l(1.000000)
max r2.x, r2.x, l(0.000000)
sqrt r3.z, r2.x
mul r2.x, r2.z, r2.z
mul r2.x, r2.x, l(0.33333334)
min r2.x, r2.x, l(1.000000)
mul r2.yz, v2.xxyx, cb0[4].xxyx
sample_indexable(texture2d)(float,float,float,float) r2.yzw, r2.yzyy, t11.wxyz, s3
mad r2.yz, r2.yyzy, l(0.000000, 1.99218750, 1.99218750, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
mul r2.w, r2.w, r2.w
mul r2.w, r2.w, l(0.33333334)
min r2.w, r2.w, l(1.000000)
mad r3.xy, r2.yzyy, cb0[11].zzzz, r1.zwzz
dp3 r1.z, r3.xyzx, r3.xyzx
rsq r1.z, r1.z
mul r3.xyz, r1.zzzz, r3.xyzx
mad r1.z, r2.w, cb0[11].z, r2.x
movc r1.w, v7.x, l(1.000000), l(-1.000000)
dp3 r2.x, v4.xyzx, v4.xyzx
rsq r2.x, r2.x
mul r2.xyz, r2.xxxx, v4.xyzx
mul r4.xyz, r1.wwww, r2.xyzx
dp3 r2.w, v5.xyzx, v5.xyzx
rsq r2.w, r2.w
mul r5.xyz, r2.wwww, v5.xyzx
mul r5.xyz, r1.wwww, r5.xyzx
dp3 r2.w, v6.xyzx, v6.xyzx
rsq r2.w, r2.w
mul r6.xyz, r2.wwww, v6.xyzx
mul r6.xyz, r1.wwww, r6.xyzx
mul r1.x, r1.x, l(-17.000000)
exp r1.x, r1.x
add r1.x, r1.x, r1.z
log r1.x, r1.x
mul_sat r1.x, r1.x, l(-0.05882353)
mul r7.xyz, r3.yyyy, r6.xyzx
mad r3.xyw, r5.xyxz, r3.xxxx, r7.xyxz
mad r3.xyz, r4.xyzx, r3.zzzz, r3.xywx
dp3 r2.w, r3.xyzx, r3.xyzx
rsq r2.w, r2.w
mul r3.xyz, r2.wwww, r3.xyzx
mul r7.xy, v2.xyxx, cb0[9].xyxx
sample_indexable(texture2d)(float,float,float,float) r8.xyzw, r7.xyxx, t12.xyzw, s5
ld_structured_indexable(structured_buffer, stride=24)(mixed,mixed,mixed,mixed) r2.w, v3.x, l(4), t4.xxxx
ld_structured_indexable(structured_buffer, stride=384)(mixed,mixed,mixed,mixed) r3.w, r2.w, l(16), t0.xxxx
ld_structured_indexable(structured_buffer, stride=384)(mixed,mixed,mixed,mixed) r4.w, r2.w, l(32), t0.xxxx
ld_structured_indexable(structured_buffer, stride=384)(mixed,mixed,mixed,mixed) r2.w, r2.w, l(48), t0.xxxx
mov_sat r3.w, r3.w
mov_sat r4.w, r4.w
mov_sat r2.w, r2.w
mad r3.w, r3.w, -v1.x, l(1.000000)
mad_sat r5.w, r8.w, l(0.998000), l(0.001000)
mov_sat r6.w, r3.w
add_sat r3.w, r3.w, cb0[8].x
add r7.z, cb0[8].y, cb0[8].y
log r5.w, r5.w
mul r5.w, r5.w, r7.z
exp r5.w, r5.w
add r3.w, -r6.w, r3.w
add r6.w, -r6.w, r5.w
div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
mul_sat r3.w, r3.w, r6.w
mad r6.w, r3.w, l(-2.000000), l(3.000000)
mul r3.w, r3.w, r3.w
mad r4.w, r4.w, -v1.y, l(1.000000)
mov_sat r7.z, r4.w
add_sat r4.w, r4.w, cb0[8].x
add r4.w, -r7.z, r4.w
add r7.z, r5.w, -r7.z
div r4.w, l(1.000000, 1.000000, 1.000000, 1.000000), r4.w
mul_sat r4.w, r4.w, r7.z
mad r7.z, r4.w, l(-2.000000), l(3.000000)
mul r4.w, r4.w, r4.w
mul r4.w, r4.w, r7.z
mad r3.w, r6.w, r3.w, r4.w
mad r2.w, r2.w, -v1.z, l(1.000000)
mov_sat r4.w, r2.w
add_sat r2.w, r2.w, cb0[8].x
add r2.w, -r4.w, r2.w
add r4.w, -r4.w, r5.w
div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
mul_sat r2.w, r2.w, r4.w
mad r4.w, r2.w, l(-2.000000), l(3.000000)
mul r2.w, r2.w, r2.w
mad r2.w, r4.w, r2.w, r3.w
min r2.w, r2.w, l(1.000000)
mad r8.xyz, r8.xyzx, cb0[13].xyzx, -r0.xyzx
mad r0.xyz, r2.wwww, r8.xyzx, r0.xyzx
sample_indexable(texture2d)(float,float,float,float) r7.xyz, r7.xyxx, t14.xyzw, s5
mad r7.xy, r7.xyxx, l(1.99218750, 1.99218750, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r3.w, r7.xyxx, r7.xyxx
add r3.w, -r3.w, l(1.000000)
max r3.w, r3.w, l(0.000000)
sqrt r3.w, r3.w
mul r4.w, r7.z, r7.z
mul r4.w, r4.w, l(0.33333334)
min r4.w, r4.w, l(1.000000)
mul r5.w, r1.x, l(-17.000000)
exp r5.w, r5.w
add r5.w, r4.w, r5.w
log r5.w, r5.w
mul r5.w, r5.w, l(-0.05882353)
max r5.w, r5.w, l(0.000000)
mul r6.xyz, r6.xyzx, r7.yyyy
mad r5.xyz, r5.xyzx, r7.xxxx, r6.xyzx
mad r5.xyz, r4.xyzx, r3.wwww, r5.xyzx
dp3 r3.w, r5.xyzx, r5.xyzx
rsq r3.w, r3.w
add r4.z, -r1.x, r5.w
mad r1.x, r2.w, r4.z, r1.x
add r4.z, -r1.z, r4.w
mad r1.z, r2.w, r4.z, r1.z
mad r5.xyz, r5.xyzx, r3.wwww, -r3.xyzx
mad r3.xyz, r2.wwww, r5.xyzx, r3.xyzx
mad r1.y, cb1[62].x, r1.y, cb0[11].x
mul_sat r1.y, r1.y, l(0.05882353)
mul r1.y, r1.y, l(-17.000000)
exp r1.y, r1.y
add r1.y, r1.y, r1.z
log r1.y, r1.y
mul_sat r1.y, r1.y, l(-0.05882353)
lt r1.z, l(0.000000), cb1[64].w
if_nz r1.z
  ftoi r1.z, cb1[64].w
  lod r2.w, v2.xyxx, t6.y, s1
  lod r3.w, v2.xyxx, t6.x, s1
  lt r2.w, r2.w, r3.w
  lt r3.w, l(0.000000), r3.w
  and r5.xyz, r1.zzzz, l(1, 2, 4, 0)
  movc r6.xyz, r5.xxxx, l(1.000000,0,1.000000,0), r0.xyzx
  movc r5.xyw, r5.yyyy, l(0,1.000000,0,1.000000), r0.xyxz
  movc r5.xyw, r3.wwww, r6.xyxz, r5.xyxw
  movc r6.xyz, r5.zzzz, l(0,1.000000,0,0), r0.xyzx
  movc r0.xyz, r2.wwww, r5.xywx, r6.xyzx
endif 
add r5.xyz, -r0.xyzx, cb1[58].xyzx
mad o0.xyz, cb1[58].wwww, r5.xyzx, r0.xyzx
add r0.xyz, cb1[61].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r0.xyz, cb1[61].wwww, r0.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
add r1.y, -r1.x, r1.y
mad r1.x, cb1[62].w, r1.y, r1.x
add r1.y, -r0.w, cb1[63].x
mad o2.z, cb1[63].w, r1.y, r0.w
movc r5.xyz, v7.xxxx, v4.xyzx, -v4.xyzx
dp3 r0.w, r5.xyzx, r5.xyzx
rsq r0.w, r0.w
mad r5.xyz, r5.xyzx, r0.wwww, -r3.xyzx
mad r3.yzw, cb1[60].wwww, r5.xxyz, r3.xxyz
add r0.w, r4.y, r4.x
mad r0.w, r2.z, r1.w, r0.w
mul r0.w, r0.w, l(0.500000)
mad r1.yzw, r2.xxyz, r1.wwww, -r0.wwww
max r2.x, r1.w, r1.z
max r2.x, r1.y, r2.x
max r0.w, r0.w, r2.x
eq r1.y, r0.w, r1.y
mul r2.yzw, r3.yyzw, l(0.000000, 1.000000, -1.000000, -1.000000)
add r4.x, r0.w, l(2.000000)
mov r2.x, l(1)
mov r3.x, l(0)
movc r2.xyzw, r1.yyyy, r2.xyzw, r3.xyzw
movc r0.w, r1.y, r4.x, r0.w
eq r1.y, r0.w, r1.z
mul r3.yzw, r2.yyzw, l(0.000000, -1.000000, 1.000000, -1.000000)
add r1.z, r0.w, l(2.000000)
mov r3.x, l(2)
movc r2.xyzw, r1.yyyy, r3.xyzw, r2.xyzw
movc r0.w, r1.y, r1.z, r0.w
eq r0.w, r0.w, r1.w
mul r3.yzw, r2.yyzw, l(0.000000, -1.000000, -1.000000, 1.000000)
mov r3.x, l(3)
movc r2.xyzw, r0.wwww, r3.xyzw, r2.xyzw
add r0.w, r2.z, r2.y
add r3.z, r2.w, r0.w
add r3.y, -r2.y, r2.w
mad r3.x, -r2.z, l(3.000000), r3.z
mul r1.yzw, r3.xxyz, l(0.000000, 0.40824831, 0.70710677, 0.57735026)
add r0.w, |r1.w|, l(1.000000)
rsq r0.w, r0.w
mul r1.yz, r0.wwww, r1.yyzy
mad o1.xy, r1.yzyy, l(0.58823532, 0.58823532, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
mad o1.z, r1.x, l(0.49755621), l(0.00146628)
utof r0.w, r2.x
mul o1.w, r0.w, l(0.33333334)
ftou r1.xy, v0.xyxx
add r2.y, -r0.z, r0.x
mad r0.x, r2.y, l(0.500000), r0.z
add r2.z, -r0.x, r0.y
mad r2.x, r2.z, l(0.500000), r0.x
and r0.xy, r1.xyxx, l(1, 1, 0, 0)
ieq r0.x, r0.y, r0.x
movc r0.xy, r0.xxxx, r2.xyxx, r2.xzxx
mad o2.xy, r0.xyxx, l(1.000000, 0.500000, 0.000000, 0.000000), l(0.000000, 0.500000, 0.000000, 0.000000)
mov o0.w, l(1.000000)
mov o2.w, l(0.33333334)
ret 
// Approximately 210 instruction slots used
