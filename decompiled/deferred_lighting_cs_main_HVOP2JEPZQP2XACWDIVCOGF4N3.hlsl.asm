//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:23:29 2021
//
//
// Buffer Definitions: 
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4 [unused]
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// cbuffer LightingPackCBuffer
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } lightConstantsCB[273];           // Offset:    0 Size: 65520
//
// }
//
// cbuffer RefProbePackCBuffer
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } refProbeConstantsCB[273];        // Offset:    0 Size: 61152
//
// }
//
// cbuffer RefProbeBlendPackCBuffer
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } refProbeAttenuationConstantsCB[682];// Offset:    0 Size: 65472
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for gPermutedTilingBuffer
// {
//
//   struct PermutedTilingBuffer
//   {
//       
//       uint2 data;                    // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:     8
//
// }
//
// Resource bind info for gDeferredCullBits
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// samplerPointClamp                 sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// GBufferDiffuseColor               texture  float4          2d             t0      1 
// GBufferNormalAndGloss             texture  float4          2d             t1      1 
// GBufferSpecularColorAndOcclusion    texture  float4          2d             t2      1 
// GBufferDepth                      texture   float          2d             t4      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// gDownsampledScene                 texture  float4          2d            t21      1 
// gMotionVectors                    texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// gPermutedTilingBuffer             texture  struct         r/o            t25      1 
// gDeferredCullBits                 texture  struct         r/o            t26      1 
// gSSAOTexture                      texture   float          2d            t27      1 
// gSSAODepthTexture                 texture   float          2d            t28      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// litBuffer                             UAV  float3          2d             u0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
// LightingPackCBuffer               cbuffer      NA          NA            cb9      1 
// RefProbePackCBuffer               cbuffer      NA          NA           cb10      1 
// RefProbeBlendPackCBuffer          cbuffer      NA          NA           cb11      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB1[86], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_constantbuffer CB9[4095], dynamicIndexed
dcl_constantbuffer CB10[3822], dynamicIndexed
dcl_constantbuffer CB11[4092], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s4, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_structured t25, 8
dcl_resource_structured t26, 4
dcl_resource_texture2d (float,float,float,float) t27
dcl_resource_texture2d (float,float,float,float) t28
dcl_resource_texture2darray (float,float,float,float) t31
dcl_uav_typed_texture2d (float,float,float,float) u0
dcl_input vThreadGroupID.x
dcl_input vThreadIDInGroup.xy
dcl_temps 35
dcl_thread_group 8, 8, 1
iadd r0.x, vThreadGroupID.x, cb2[57].x
ld_structured_indexable(structured_buffer, stride=8)(mixed,mixed,mixed,mixed) r0.xy, r0.x, l(0), t25.xyxx
and r0.xy, r0.xyxx, l(4095, 4095, 0, 0)
imad r1.xy, r0.xyxx, l(8, 8, 0, 0), vThreadIDInGroup.xyxx
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.xyww, t1.xyzw
ftou r0.zw, cb1[44].xxxy
ult r0.zw, r1.xxxy, r0.zzzw
and r0.z, r0.w, r0.z
lt r0.w, l(0.000000), r2.z
and r0.z, r0.w, r0.z
if_z r0.z
  ret 
endif 
ge r0.w, r2.z, l(0.500000)
ld_indexable(texture2d)(float,float,float,float) r3.x, r1.xyww, t4.xyzw
ld_indexable(texture2d)(float,float,float,float) r3.yzw, r1.xyww, t0.wxyz
ld_indexable(texture2d)(float,float,float,float) r4.xyzw, r1.xyww, t2.xyzw
ld_aoffimmi_indexable(-1,0,0)(texture2d)(float,float,float,float) r5.xyz, r1.xyww, t2.xywz
ld_aoffimmi_indexable(0,-1,0)(texture2d)(float,float,float,float) r6.xyz, r1.xyww, t2.xywz
ld_aoffimmi_indexable(1,0,0)(texture2d)(float,float,float,float) r7.xyz, r1.xyww, t2.xywz
ld_aoffimmi_indexable(0,1,0)(texture2d)(float,float,float,float) r8.xyz, r1.xyzw, t2.xywz
utof r1.zw, r1.xxxy
add r9.xy, r1.zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
ge r10.x, r3.x, l(0.984375)
mul r5.w, r3.x, l(1.01587307)
mad r3.x, r3.x, l(64.000000), l(-63.000000)
movc r3.x, r10.x, r3.x, r5.w
max r3.x, r3.x, l(0.00000001)
rcp r10.y, r3.x
and r9.zw, r0.zzzz, r10.xxxy
add r10.xy, r9.xyxx, -cb1[71].xyxx
mul r10.xy, r10.xyxx, cb1[44].zwzz
mad r10.xy, r10.xyxx, l(2.000000, -2.000000, 0.000000, 0.000000), l(-1.000000, 1.000000, 0.000000, 0.000000)
mul r11.x, r10.x, cb1[12].x
mul r11.y, r10.y, cb1[13].y
mov r11.z, l(1.000000)
mul r10.xyz, r9.wwww, r11.xyzx
mul r11.xyz, r10.yyyy, cb1[17].xyzx
mad r10.xyw, r10.xxxx, cb1[16].xyxz, r11.xyxz
mad r10.xyz, r10.zzzz, cb1[18].xyzx, r10.xywx
mad r0.z, r2.w, l(3.000000), l(0.500000)
ftou r0.z, r0.z
mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r2.xy, r2.xyxx, l(0.850000, 0.850000, 0.000000, 0.000000)
dp2 r2.w, r2.xyxx, r2.xyxx
add r11.zw, -r2.wwww, l(0.000000, 0.000000, 2.000000, 1.000000)
sqrt r2.w, r11.z
mul r11.xy, r2.wwww, r2.xyxx
and r12.xyzw, r0.zzzz, l(2, 1, 2, 1)
movc r12.xyzw, r12.zwxy, l(-1.000000,-1.000000,1,1), l(1.000000,1.000000,0,0)
xor r0.z, r12.w, r12.z
movc r12.z, r0.z, l(-1.000000), l(1.000000)
mul r2.xyw, r12.xyxz, l(-1.000000, 0.000000, 0.000000, 1.000000)
mul r13.xyz, r12.xyzx, l(1.000000, -2.000000, 1.000000, 0.000000)
mul r11.xyz, r11.xywx, l(0.40824831, 0.70710677, 0.57735026, 0.000000)
mul r2.xyw, r2.xyxw, r11.yyyy
mad r2.xyw, r13.xyxz, r11.xxxx, r2.xyxw
mad r11.xyz, r12.xyzx, r11.zzzz, r2.xywx
movc r0.z, r0.w, l(-0.500000), l(-0.00146628)
add r0.z, r0.z, r2.z
mul_sat r2.y, r0.z, l(2.00982332)
dp3 r0.z, -r10.xyzx, -r10.xyzx
rsq r0.z, r0.z
mul r12.xyz, r0.zzzz, -r10.xyzx
dp2 r1.z, r1.zwzz, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r1.z, r1.z
mul r1.z, r1.z, l(52.982918)
frc r1.z, r1.z
mad r1.z, r1.z, l(6.28318548), cb1[70].w
sincos r3.x, r13.x, r1.z
dp3_sat r2.x, r11.xyzx, r12.xyzx
dp3 r1.z, -r12.xyzx, r11.xyzx
add r1.z, r1.z, r1.z
mad r14.xyz, r11.xyzx, -r1.zzzz, -r12.xyzx
mul r1.z, r2.y, l(17.000000)
exp r1.z, r1.z
add r1.z, r1.z, l(2.000000)
div r1.z, l(2.000000), r1.z
sqrt r1.w, r1.z
mul r2.zw, r9.xxxy, cb1[44].zzzw
sample_l_indexable(texture2d)(float,float,float,float) r2.z, r2.zwzz, t27.yzxw, s4, l(0.000000)
mul r2.w, r2.z, r4.z
lt r5.w, l(0.83333331), r2.y
lt r6.w, l(60.000000), r9.w
and r5.w, r5.w, r6.w
if_nz r5.w
  mul r13.yzw, r10.yyyy, cb1[9].xxyw
  mad r13.yzw, r10.xxxx, cb1[8].xxyw, r13.yyzw
  mad r13.yzw, r10.zzzz, cb1[10].xxyw, r13.yyzw
  add r13.yzw, r13.yyzw, cb1[11].xxyw
  mad r15.xyz, r14.xyzx, l(2000.000000, 2000.000000, 2000.000000, 0.000000), r10.xyzx
  mul r16.xyz, r15.yyyy, cb1[9].xywx
  mad r15.xyw, r15.xxxx, cb1[8].xyxw, r16.xyxz
  mad r15.xyz, r15.zzzz, cb1[10].xywx, r15.xywx
  add r15.xyz, r15.xyzx, cb1[11].xywx
  ge r5.w, r15.z, r13.w
  if_nz r5.w
    mul r9.xy, cb1[44].xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
    rcp r16.z, r13.w
    mul r16.xy, r13.yzyy, r16.zzzz
    rcp r17.z, r15.z
    mul r17.xy, r15.xyxx, r17.zzzz
    lt r13.yz, l(0.000000, 1.000000, 1.000000, 0.000000), r17.xxyx
    mad r18.xyzw, r15.xxyy, r17.zzzz, l(-1.000000, 1.000000, -1.000000, 1.000000)
    mad r19.xyzw, r15.xxyy, r17.zzzz, -r16.xxyy
    lt r15.xy, r17.xyxx, l(-1.000000, -1.000000, 0.000000, 0.000000)
    div r18.xyzw, r18.xyzw, r19.xyzw
    and r15.xy, r15.xyxx, r18.ywyy
    movc r13.yz, r13.yyzy, r18.xxzx, r15.xxyx
    max r5.w, r13.z, r13.y
    add r15.xyw, r16.xyxz, -r17.xyxz
    mad r15.xyw, r5.wwww, r15.xyxw, r17.xyxz
    mad r13.yz, r16.xxyx, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
    mad r17.xy, r15.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    add r13.yz, r13.yyzy, -r17.xxyx
    mul r13.yz, r9.xxyx, |r13.yyzy|
    max r5.w, r13.z, r13.y
    max r5.w, r5.w, l(1.000000)
    rcp r5.w, r5.w
    mad r16.xyz, r16.xyzx, l(0.500000, -0.500000, 1.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    mad r18.xyz, r15.xywx, l(0.500000, -0.500000, 1.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    add r19.xyz, -r16.xyzx, r18.xyzx
    mad r16.xyz, r5.wwww, r19.xyzx, r16.xyzx
    add r18.xyz, -r16.xyzx, r18.xyzx
    mul r19.xyz, r18.xyzx, l(0.031250, 0.031250, 0.031250, 0.000000)
    mul r9.xy, r9.xyxx, |r19.xyxx|
    max r5.w, r9.y, r9.x
    log r5.w, r5.w
    round_pi r5.w, r5.w
    max r5.w, r5.w, l(0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r16.xyxx, t28.yzwx, s1, r5.w
    mad r20.xyz, r18.xyzx, l(0.031250, 0.031250, 0.031250, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r20.xyxx, t28.yzwx, s1, r5.w
    min r6.w, |r6.w|, |r7.w|
    mul r6.w, r20.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    and r8.w, r6.w, l(1)
    mad r20.xyz, r18.xyzx, l(0.062500, 0.062500, 0.062500, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r9.x, r20.xyxx, t28.xyzw, s1, r5.w
    min r7.w, |r7.w|, |r9.x|
    mul r7.w, r20.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    bfi r6.w, l(1), l(0), r6.w, l(2)
    movc r6.w, r7.w, r6.w, r8.w
    mad r20.xyz, r18.xyzx, l(0.093750, 0.093750, 0.093750, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r20.xyxx, t28.yzwx, s1, r5.w
    min r8.w, |r9.x|, |r7.w|
    mul r8.w, r20.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.x, r6.w, l(4)
    movc r6.w, r8.w, r9.x, r6.w
    mad r20.xyz, r18.xyzx, l(0.125000, 0.125000, 0.125000, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r20.xyxx, t28.yzwx, s1, r5.w
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r20.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.x, r6.w, l(8)
    movc r6.w, r7.w, r9.x, r6.w
    mad r20.xyz, r18.xyzx, l(0.156250, 0.156250, 0.156250, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r20.xyxx, t28.yzwx, s1, r5.w
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r20.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.x, r6.w, l(16)
    movc r6.w, r8.w, r9.x, r6.w
    mad r20.xyz, r18.xyzx, l(0.187500, 0.187500, 0.187500, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r20.xyxx, t28.yzwx, s1, r5.w
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r20.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.x, r6.w, l(32)
    movc r6.w, r7.w, r9.x, r6.w
    mad r20.xyz, r18.xyzx, l(0.218750, 0.218750, 0.218750, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r20.xyxx, t28.yzwx, s1, r5.w
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r20.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.x, r6.w, l(64)
    movc r6.w, r8.w, r9.x, r6.w
    mad r20.xyz, r18.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r20.xyxx, t28.yzwx, s1, r5.w
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r20.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.x, r6.w, l(128)
    movc r6.w, r7.w, r9.x, r6.w
    mad r20.xyz, r18.xyzx, l(0.281250, 0.281250, 0.281250, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r20.xyxx, t28.yzwx, s1, r5.w
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r20.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.x, r6.w, l(256)
    movc r6.w, r8.w, r9.x, r6.w
    mad r20.xyz, r18.xyzx, l(0.312500, 0.312500, 0.312500, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r20.xyxx, t28.yzwx, s1, r5.w
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r20.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.x, r6.w, l(512)
    movc r6.w, r7.w, r9.x, r6.w
    mad r20.xyz, r18.xyzx, l(0.343750, 0.343750, 0.343750, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r20.xyxx, t28.yzwx, s1, r5.w
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r20.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.x, r6.w, l(1024)
    movc r6.w, r8.w, r9.x, r6.w
    mad r20.xyz, r18.xyzx, l(0.375000, 0.375000, 0.375000, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r20.xyxx, t28.yzwx, s1, r5.w
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r20.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.x, r6.w, l(2048)
    movc r6.w, r7.w, r9.x, r6.w
    mad r20.xyz, r18.xyzx, l(0.406250, 0.406250, 0.406250, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r20.xyxx, t28.yzwx, s1, r5.w
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r20.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.x, r6.w, l(4096)
    movc r6.w, r8.w, r9.x, r6.w
    mad r20.xyz, r18.xyzx, l(0.437500, 0.437500, 0.437500, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r20.xyxx, t28.yzwx, s1, r5.w
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r20.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.x, r6.w, l(8192)
    movc r6.w, r7.w, r9.x, r6.w
    mad r20.xyz, r18.xyzx, l(0.468750, 0.468750, 0.468750, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r20.xyxx, t28.yzwx, s1, r5.w
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r20.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.x, r6.w, l(0x00004000)
    movc r6.w, r8.w, r9.x, r6.w
    mad r20.xyz, r18.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r20.xyxx, t28.yzwx, s1, r5.w
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r20.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.x, r6.w, l(0x00008000)
    movc r6.w, r7.w, r9.x, r6.w
    mad r20.xyz, r18.xyzx, l(0.531250, 0.531250, 0.531250, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r20.xyxx, t28.yzwx, s1, r5.w
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r20.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.x, r6.w, l(0x00010000)
    movc r6.w, r8.w, r9.x, r6.w
    mad r20.xyz, r18.xyzx, l(0.562500, 0.562500, 0.562500, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r20.xyxx, t28.yzwx, s1, r5.w
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r20.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.x, r6.w, l(0x00020000)
    movc r6.w, r7.w, r9.x, r6.w
    mad r20.xyz, r18.xyzx, l(0.593750, 0.593750, 0.593750, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r20.xyxx, t28.yzwx, s1, r5.w
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r20.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.x, r6.w, l(0x00040000)
    movc r6.w, r8.w, r9.x, r6.w
    mad r20.xyz, r18.xyzx, l(0.625000, 0.625000, 0.625000, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r20.xyxx, t28.yzwx, s1, r5.w
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r20.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.x, r6.w, l(0x00080000)
    movc r6.w, r7.w, r9.x, r6.w
    mad r20.xyz, r18.xyzx, l(0.656250, 0.656250, 0.656250, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r20.xyxx, t28.yzwx, s1, r5.w
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r20.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.x, r6.w, l(0x00100000)
    movc r6.w, r8.w, r9.x, r6.w
    mad r20.xyz, r18.xyzx, l(0.687500, 0.687500, 0.687500, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r20.xyxx, t28.yzwx, s1, r5.w
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r20.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.x, r6.w, l(0x00200000)
    movc r6.w, r7.w, r9.x, r6.w
    mad r20.xyz, r18.xyzx, l(0.718750, 0.718750, 0.718750, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r20.xyxx, t28.yzwx, s1, r5.w
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r20.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.x, r6.w, l(0x00400000)
    movc r6.w, r8.w, r9.x, r6.w
    mad r20.xyz, r18.xyzx, l(0.750000, 0.750000, 0.750000, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r20.xyxx, t28.yzwx, s1, r5.w
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r20.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.x, r6.w, l(0x00800000)
    movc r6.w, r7.w, r9.x, r6.w
    mad r20.xyz, r18.xyzx, l(0.781250, 0.781250, 0.781250, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r20.xyxx, t28.yzwx, s1, r5.w
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r20.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.x, r6.w, l(0x01000000)
    movc r6.w, r8.w, r9.x, r6.w
    mad r20.xyz, r18.xyzx, l(0.812500, 0.812500, 0.812500, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r20.xyxx, t28.yzwx, s1, r5.w
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r20.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.x, r6.w, l(0x02000000)
    movc r6.w, r7.w, r9.x, r6.w
    mad r20.xyz, r18.xyzx, l(0.843750, 0.843750, 0.843750, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r20.xyxx, t28.yzwx, s1, r5.w
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r20.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.x, r6.w, l(0x04000000)
    movc r6.w, r8.w, r9.x, r6.w
    mad r20.xyz, r18.xyzx, l(0.875000, 0.875000, 0.875000, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r20.xyxx, t28.yzwx, s1, r5.w
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r20.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.x, r6.w, l(0x08000000)
    movc r6.w, r7.w, r9.x, r6.w
    mad r20.xyz, r18.xyzx, l(0.906250, 0.906250, 0.906250, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r20.xyxx, t28.yzwx, s1, r5.w
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r20.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.x, r6.w, l(0x10000000)
    movc r6.w, r8.w, r9.x, r6.w
    mad r20.xyz, r18.xyzx, l(0.937500, 0.937500, 0.937500, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r20.xyxx, t28.yzwx, s1, r5.w
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r20.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.x, r6.w, l(0x20000000)
    movc r6.w, r7.w, r9.x, r6.w
    mad r20.xyz, r18.xyzx, l(0.968750, 0.968750, 0.968750, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r20.xyxx, t28.yzwx, s1, r5.w
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r20.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.x, r6.w, l(0x40000000)
    movc r6.w, r8.w, r9.x, r6.w
    sample_l_indexable(texture2d)(float,float,float,float) r5.w, r17.xyxx, t28.yzwx, s1, r5.w
    min r5.w, |r7.w|, |r5.w|
    mul r5.w, r15.w, r5.w
    lt r5.w, r5.w, l(1.000000)
    iadd r7.w, r6.w, l(0x80000000)
    movc r5.w, r5.w, r7.w, r6.w
    mov r20.w, l(-1)
    mov r21.z, l(-1)
    mov r9.xy, l(0,0,0,0)
    mov r6.w, l(0)
    mov r7.w, r5.w
    mov r8.w, r17.z
    mov r22.yz, l(0,0,0,0)
    mov r20.z, l(0)
    mov r10.w, l(0)
    loop 
      breakc_z r7.w
      firstbit_lo r20.y, r7.w
      ishl r12.w, l(1), r20.y
      xor r20.x, r7.w, r12.w
      utof r13.y, r20.y
      mul r13.y, r13.y, l(0.031250)
      mad r15.xyw, r18.xyxz, r13.yyyy, r16.xyxz
      sample_l_indexable(texture2d)(float,float,float,float) r13.y, r15.xyxx, t28.yxzw, s1, l(0.000000)
      mul r13.z, r15.w, |r13.y|
      lt r13.z, r13.z, l(1.000000)
      if_nz r13.z
        if_nz r20.z
          lt r13.z, r13.w, |r13.y|
          lt r16.w, r8.w, r15.w
          and r13.z, r13.z, r16.w
          movc r17.xy, r13.zzzz, r15.xyxx, r9.xyxx
          mov r20.z, r15.w
          mov r22.x, r8.w
          movc r23.xyz, r13.zzzz, r20.zxyz, r22.xyzx
          mov r7.w, r20.x
          mov r20.z, l(-1)
          mov r9.xy, r17.xyxx
          mov r8.w, r23.x
          mov r22.yz, r23.yyzy
          continue 
        endif 
        mov r13.z, r22.y
        mov r16.w, l(0)
      else 
        not r12.w, r12.w
        and r13.z, r12.w, r22.y
        mov r16.w, r20.z
      endif 
      if_nz r10.w
        mov r7.w, r20.x
        mov r22.y, r13.z
        mov r20.z, r16.w
        mov r10.w, l(-1)
        continue 
      endif 
      mov r17.xy, r9.xyxx
      mov r12.w, r6.w
      mov r17.w, r8.w
      mov r22.y, r13.z
      mov r22.x, r22.z
      mov r20.z, r16.w
      mov r21.w, r10.w
      mov r18.w, r15.w
      mov r19.w, |r13.y|
      mov r22.w, l(0)
      loop 
        ige r23.x, r22.w, l(4)
        breakc_nz r23.x
        itof r23.x, r22.w
        add r23.x, r23.x, l(1.000000)
        mul r23.x, r23.x, l(0.250000)
        mad r23.xyz, r19.xyzx, r23.xxxx, r15.xywx
        sample_l_indexable(texture2d)(float,float,float,float) r23.w, r23.xyxx, t28.yzwx, s1, l(0.000000)
        mul r24.x, r23.z, |r23.w|
        lt r24.x, r24.x, l(1.000000)
        if_nz r24.x
          lt r24.x, r13.w, |r23.w|
          add r24.y, -r18.w, r23.z
          add r24.z, -r19.w, |r23.w|
          mul r24.w, r18.w, r23.z
          mul r24.z, r24.w, |r24.z|
          lt r24.y, r24.z, |r24.y|
          and r24.z, r24.y, r24.x
          lt r24.w, r17.w, r23.z
          and r25.x, r24.w, r24.x
          movc r21.xy, r25.xxxx, r20.xyxx, r22.yxyy
          or r24.y, r24.y, r24.w
          and r24.x, r24.x, r24.y
          movc r23.xy, r24.xxxx, r23.xyxx, r17.xyxx
          movc r24.y, r24.z, l(1.000000), r12.w
          movc r24.x, r24.x, r23.z, r17.w
          movc r25.xyzw, r24.zzzz, r20.xyzw, r21.xyzw
          mov r12.w, r24.y
          mov r17.xy, r23.xyxx
          mov r17.w, r24.x
          mov r22.xy, r25.yxyy
          mov r20.z, r25.z
          mov r21.w, r25.w
          break 
        endif 
        mov r18.w, r23.z
        mov r19.w, |r23.w|
        iadd r22.w, r22.w, l(1)
      endloop 
      mov r9.xy, r17.xyxx
      mov r6.w, r12.w
      mov r8.w, r17.w
      mov r22.yz, r22.yyxy
      mov r10.w, r21.w
      mov r7.w, r20.x
    endloop 
    rcp r5.w, r8.w
    add r5.w, -r13.w, r5.w
    add r7.w, -r13.w, r15.z
    div r5.w, |r5.w|, |r7.w|
    min r15.x, r5.w, l(1.000000)
    countbits r5.w, r22.y
    utof r5.w, r5.w
    add r5.w, r5.w, l(1.000000)
    iadd r7.w, -r22.z, l(32)
    utof r7.w, r7.w
    div r5.w, r5.w, r7.w
    min r15.y, r5.w, l(1.000000)
  else 
    mov r15.xy, l(1.000000,0,0,0)
    mov r6.w, l(0)
  endif 
  add r5.w, r2.y, l(-0.83333331)
  mul r5.w, r5.w, l(5.99999952)
  max r5.w, r5.w, l(0.000000)
  mad r7.w, r5.w, l(-2.000000), l(3.000000)
  mul r5.w, r5.w, r5.w
  mul r5.w, r5.w, r7.w
  add r7.w, r9.w, l(-60.000000)
  mul_sat r7.w, r7.w, l(0.01666667)
  mad r8.w, r7.w, l(-2.000000), l(3.000000)
  mul r7.w, r7.w, r7.w
  mul r7.w, r7.w, r8.w
  mul r5.w, r5.w, r7.w
  mul r5.w, r15.y, r5.w
  mad r13.yz, r9.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
  add r13.yz, |r13.yyzy|, l(0.000000, -0.500000, -0.500000, 0.000000)
  add_sat r13.yz, r13.yyzy, r13.yyzy
  mad r15.yz, r13.yyzy, l(0.000000, -2.000000, -2.000000, 0.000000), l(0.000000, 3.000000, 3.000000, 0.000000)
  mul r13.yz, r13.yyzy, r13.yyzy
  mad r13.yz, -r15.yyzy, r13.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
  mul r7.w, r13.z, r13.y
  mul r5.w, r5.w, r7.w
  mul r7.w, r15.x, l(10.000000)
  min r7.w, r7.w, l(1.000000)
  add r8.w, -r6.w, l(1.000000)
  mul r8.w, r5.w, r8.w
  add r7.w, r7.w, l(-1.000000)
  mad r7.w, r8.w, r7.w, l(1.000000)
  mul r5.w, r6.w, r5.w
  lt r6.w, l(0.000000), r5.w
  if_nz r6.w
    sample_l_indexable(texture2d)(float,float,float,float) r13.yz, r9.xyxx, t22.zxyw, s4, l(0.000000)
    add r15.xy, |r13.yzyy|, l(-0.500000, -0.500000, 0.000000, 0.000000)
    add_sat r15.xy, r15.xyxx, r15.xyxx
    add r15.zw, |r13.yyyz|, |r13.yyyz|
    min r15.zw, r15.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    mul r15.zw, r15.zzzw, l(0.000000, 0.000000, 10.000000, 10.000000)
    mad r15.xy, r15.xyxx, l(30.000000, 30.000000, 0.000000, 0.000000), r15.zwzz
    ge r13.yz, r13.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
    movc r13.yz, r13.yyzy, r15.xxyx, -r15.xxyx
    mad r9.xy, -r13.yzyy, cb1[44].zwzz, r9.xyxx
    sample_l_indexable(texture2d)(float,float,float,float) r9.xyw, r9.xyxx, t21.xywz, s4, l(0.000000)
    mul r9.xyw, r9.xyxw, cb1[85].xxxx
    mul r9.xyw, r5.wwww, r9.xyxw
  else 
    mov r9.xyw, l(0,0,0,0)
    mov r5.w, l(0)
  endif 
else 
  mov r9.xyw, l(0,0,0,0)
  mov r7.w, l(1.000000)
  mov r5.w, l(0)
endif 
dp3 r6.w, r11.xyzx, cb2[17].xyzx
mov_sat r8.w, r6.w
movc r10.w, r0.w, |r6.w|, r8.w
ge r12.w, l(0.000000), r10.w
if_nz r12.w
  mov r13.y, l(0)
endif 
if_z r12.w
  mul r15.xyz, r10.yyyy, cb2[29].xyzx
  mad r15.xyz, r10.xxxx, cb2[28].xyzx, r15.xyzx
  mad r15.xyz, r10.zzzz, cb2[30].xyzx, r15.xyzx
  add r15.xyz, r15.xyzx, cb2[31].xyzx
  add r12.w, r15.z, -cb2[17].w
  mad r12.w, -r12.w, l(0.00006104), l(1.000000)
  mov_sat r13.z, r12.w
  eq r13.z, r12.w, r13.z
  if_nz r13.z
    mov r13.zw, l(0,0,0,0)
    loop 
      ge r15.w, r13.z, l(3.000000)
      breakc_nz r15.w
      ftou r15.w, r13.z
      add r16.xy, r15.xyxx, -cb2[r15.w + 20].xyxx
      max r16.x, |r16.y|, |r16.x|
      mul r13.w, r16.x, cb2[r15.w + 20].z
      lt r15.w, r13.w, l(1.000000)
      if_nz r15.w
        break 
      endif 
      add r13.z, r13.z, l(1.000000)
      mov r13.w, l(0)
    endloop 
  else 
    mov r13.zw, l(0,0,3.000000,0)
  endif 
  ge r15.w, r13.z, l(3.000000)
  if_nz r15.w
    mul r16.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
    rcp r17.xz, r16.xxxx
    mov r17.y, -r17.z
    mad r16.xyz, r15.xyxx, r17.xyzx, r16.yzyy
    add r17.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r16.xyz, r16.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r16.xyz, r17.xyzx, r16.xyzx
    mul r17.xy, r16.zyzz, cb2[32].xxxx
    round_ni r17.xy, r17.xyxx
    mul r16.w, r17.y, cb2[27].x
    mad r16.w, r16.w, cb2[32].x, r17.x
    ftou r16.w, r16.w
    iadd r16.w, r16.w, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.x, r16.w, l(0), t23.xxxx
    and r17.y, r17.x, l(0x40000000)
    ishl r17.z, r17.x, l(2)
    if_z r17.y
      and r17.y, r17.x, l(0x01ffffff)
      iadd r18.x, r16.w, r17.y
      ushr r16.w, r17.x, l(25)
      utof r16.w, r16.w
      mul r16.xyz, r16.wwww, r16.xyzx
      frc r16.xyz, r16.xyzx
      mul r16.xyz, r16.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
      ftou r16.xyz, r16.xyzx
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.x, l(0), t23.xxxx
      ushr r17.xy, r16.zyzz, l(6, 6, 0, 0)
      and r16.w, r18.z, l(0xc0000000)
      iadd r17.w, r18.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.w, r17.w, l(0), t23.xxxx
      movc r17.y, r17.y, r18.z, r17.w
      ushr r17.w, r17.y, l(13)
      movc r17.x, r17.x, r17.w, r17.y
      and r17.x, r17.x, l(8191)
      iadd r19.x, r17.x, r18.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.z, r19.x, l(0), t23.xxxx
      mov r18.y, l(0)
      mov r19.y, l(1)
      movc r17.xyw, r16.wwww, r18.xyxz, r19.xyxz
      movc r19.yz, r16.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r20.xy, r16.zyzz, r19.yyyy
      and r20.xy, r20.xyxx, l(1, 1, 0, 0)
      and r18.w, r17.w, l(0xc0000000)
      iadd r19.y, r17.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.y, r19.y, l(0), t23.xxxx
      movc r19.y, r20.y, r17.w, r19.y
      ushr r20.y, r19.y, l(13)
      movc r19.y, r20.x, r20.y, r19.y
      and r19.y, r19.y, l(8191)
      iadd r19.x, r17.x, r19.y
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.w, r19.x, l(0), t23.xxxx
      movc r17.xyw, r18.wwww, r17.xyxw, r19.xzxw
      movc r17.xyw, r16.wwww, r18.xyxz, r17.xyxw
      and r16.w, r17.w, l(0xc0000000)
      if_z r16.w
        iadd r16.w, -r17.y, l(6)
        ushr r18.xy, r16.zyzz, r16.wwww
        or r16.w, r17.w, l(0x40000000)
        bfi r18.y, l(1), l(1), r18.y, l(0)
        bfi r18.x, l(1), l(0), r18.x, r18.y
        imul null, r18.x, r18.x, l(10)
        ushr r16.w, r16.w, r18.x
        and r16.w, r16.w, l(1023)
        iadd r18.x, r16.w, r17.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.w, r18.x, l(0), t23.xxxx
        iadd r18.yz, r17.yyyy, l(0, 1, 2, 0)
        iadd r16.w, -r18.y, l(6)
        ushr r19.xy, r16.zyzz, r16.wwww
        and r16.w, r18.w, l(0xc0000000)
        or r17.y, r18.w, l(0x40000000)
        bfi r19.y, l(1), l(1), r19.y, l(0)
        bfi r19.x, l(1), l(0), r19.x, r19.y
        imul null, r19.x, r19.x, l(10)
        ushr r17.y, r17.y, r19.x
        and r17.y, r17.y, l(1023)
        iadd r19.x, r17.y, r18.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.z, r19.x, l(0), t23.xxxx
        mov r19.y, r18.z
        movc r19.xyz, r16.wwww, r18.xywx, r19.xyzx
        iadd r17.y, -r19.y, l(6)
        ushr r18.yz, r16.zzyz, r17.yyyy
        and r17.y, r19.z, l(0xc0000000)
        or r19.y, r19.z, l(0x40000000)
        bfi r18.z, l(1), l(1), r18.z, l(0)
        bfi r18.y, l(1), l(0), r18.y, r18.z
        imul null, r18.y, r18.y, l(10)
        ushr r18.y, r19.y, r18.y
        and r18.y, r18.y, l(1023)
        iadd r20.x, r18.y, r19.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.y, r20.x, l(0), t23.xxxx
        movc r18.yz, r17.yyyy, r19.xxzx, r20.xxyx
        movc r17.xw, r16.wwww, r18.xxxw, r18.yyyz
      endif 
      and r16.w, r17.w, l(0xc0000000)
      if_z r16.w
        ubfe r17.y, l(14), l(15), r17.w
        utof r17.y, r17.y
        mul r17.y, r17.y, cb2[27].w
        mul r17.y, r17.y, l(0.00006104)
        and r18.xy, r17.wwww, l(0x00007fff, 0x20000000, 0, 0)
        utof r18.x, r18.x
        mul r18.x, r18.x, cb2[27].w
        mul r18.x, r18.x, l(0.00003052)
        and r18.z, r16.y, l(3)
        iadd r18.z, r17.x, r18.z
        iadd r18.z, r18.z, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.z, l(0), t23.xxxx
        bfi r19.xyz, l(2, 2, 1, 0), l(3, 1, 4, 0), r16.xyzx, l(0, 0, 0, 0)
        ushr r16.x, r18.z, r19.x
        and r16.x, r16.x, l(255)
        utof r16.x, r16.x
        mul r16.x, r18.x, r16.x
        mad r16.x, r16.x, l(0.00392157), r17.y
        iadd r16.y, r19.y, l(1)
        ubfe r16.z, l(1), l(1), r16.z
        iadd r16.y, r16.z, r16.y
        iadd r16.y, r16.y, r17.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.y, r16.y, l(0), t23.xxxx
        ushr r16.y, r16.y, r19.z
        and r16.y, r16.y, l(0x0000ffff)
        utof r16.y, r16.y
        mul r16.y, r18.x, r16.y
        mad r16.y, r16.y, l(0.00001526), r17.y
        movc r17.z, r18.y, r16.x, r16.y
      else 
        and r16.x, r17.w, l(0x80000000)
        iadd r16.y, r17.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.y, r16.y, l(0), t23.xxxx
        movc r16.x, r16.x, r16.y, l(0)
        ishl r16.y, r17.w, l(2)
        ushr r16.z, r16.x, l(16)
        and r16.x, r16.x, l(0x0000ffff)
        f16tof32 r16.xz, r16.xxzx
        mad r16.y, r15.x, r16.z, r16.y
        mad r16.x, r15.y, r16.x, r16.y
        movc r17.z, r16.w, r16.x, r17.z
      endif 
    endif 
    mad r15.z, -cb2[27].z, l(2.000000), r15.z
    lt r15.z, r17.z, r15.z
    movc r13.y, r15.z, l(0), l(1.000000)
  endif 
  if_z r15.w
    if_z cb2[58].y
      ftou r15.z, r13.z
      add r16.xy, r15.xyxx, -cb2[r15.z + 20].xyxx
      mul r15.zw, r16.xxxy, cb2[r15.z + 20].zzzz
      mad r16.xy, r15.zwzz, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r15.z, cb2[26].y
      add r16.z, r13.z, r15.z
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r15.z, r16.xyzx, t13.xxxx, s13, r12.w
      sample_l_indexable(texture2darray)(float,float,float,float) r15.w, r16.xyzx, t31.yzwx, s0, l(0.000000)
      add r15.z, r15.w, r15.z
      add_sat r15.z, r15.z, l(-1.000000)
      mul r15.w, r15.z, r15.z
      mul r13.y, r15.z, r15.w
    endif 
    if_nz cb2[58].y
      mov r16.x, -r3.x
      ftou r15.z, r13.z
      add r13.z, r13.z, l(1.000000)
      min r13.z, r13.z, l(2.000000)
      add r13.w, -r13.w, l(1.000000)
      mul r13.w, r13.w, l(28.000000)
      ftou r13.zw, r13.zzzw
      add r17.xy, r15.xyxx, -cb2[r15.z + 20].xyxx
      mul r17.xy, r17.xyxx, cb2[r15.z + 20].zzzz
      mad r17.xy, r17.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      add r15.xy, r15.xyxx, -cb2[r13.z + 20].xyxx
      mul r15.xy, r15.xyxx, cb2[r13.z + 20].zzzz
      mad r15.xy, r15.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      mov r16.y, r13.x
      mov r16.z, r3.x
      mov r15.w, l(0)
      mov r16.w, l(0)
      loop 
        uge r17.z, r16.w, l(8)
        breakc_nz r17.z
        ult r17.z, r13.w, r16.w
        movc r18.xy, r17.zzzz, r15.xyxx, r17.xyxx
        movc r17.w, r17.z, cb2[r13.z + 20].w, cb2[r15.z + 20].w
        movc r17.z, r17.z, r13.z, r15.z
        dp2 r19.x, icb[r16.w + 0].yxyy, r16.xyxx
        dp2 r19.y, icb[r16.w + 0].yxyy, r16.yzyy
        mad r18.xy, r19.xyxx, r17.wwww, r18.xyxx
        iadd r17.z, r17.z, cb2[26].y
        utof r18.z, r17.z
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r17.z, r18.xyzx, t13.xxxx, s13, r12.w
        sample_l_indexable(texture2darray)(float,float,float,float) r17.w, r18.xyzx, t31.yzwx, s0, l(0.000000)
        add r17.z, r17.w, r17.z
        add_sat r17.z, r17.z, l(-1.000000)
        mad r15.w, r17.z, l(0.125000), r15.w
        iadd r16.w, r16.w, l(1)
      endloop 
      mul r12.w, r15.w, r15.w
      mul r13.y, r15.w, r12.w
    endif 
  endif 
endif 
add r12.w, -r2.y, l(1.000000)
mul r13.z, r12.w, l(5.000000)
mad r13.w, r12.w, l(5.000000), l(-2.500000)
mul r13.w, r13.w, l(0.400000)
max r13.w, r13.w, l(0.000000)
mul r13.w, r13.w, l(100.000000)
mad r15.xy, -r12.wwww, l(10.000000, 5.000000, 0.000000, 0.000000), l(6.857410, 7.085000, 0.000000, 0.000000)
exp r15.x, r15.x
mul r15.x, r2.x, r15.x
mul r15.z, r12.w, r13.z
mad r15.y, -r15.z, l(2.015905), r15.y
exp r15.y, r15.y
mul r15.y, r2.x, r15.y
mul r15.xy, r15.xyxx, l(9.136810, 9.708090, 0.000000, 0.000000)
max r15.x, r15.y, r15.x
max r15.x, r15.x, l(1.268160)
iadd r15.y, cb2[0].y, -cb2[58].x
ftou r15.z, cb1[44].x
iadd r15.z, r15.z, l(7)
ushr r15.z, r15.z, l(3)
imad r0.x, r0.y, r15.z, r0.x
bfi r0.x, l(27), l(5), r0.x, l(16)
and r0.y, r15.y, l(-32)
iadd r15.z, -r0.y, r15.y
and r15.w, cb2[0].y, l(-32)
iadd r16.x, -r15.w, cb2[0].y
mov r17.yz, l(0,0,1.000000,0)
mov r18.xy, l(0,0,0,0)
mov r19.x, l(1.000000)
mov r20.xy, l(0,0,0,0)
mov r21.xy, l(0,0,0,0)
mov r22.xyzw, l(0,0,0,0)
mov r23.yzw, l(0,0,0,0)
mov r16.y, r0.y
loop 
  uge r16.z, r16.y, cb2[0].y
  breakc_nz r16.z
  ushr r16.z, r16.y, l(5)
  iadd r16.z, r0.x, r16.z
  ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.z, r16.z, l(0), t26.xxxx
  ieq r16.w, r0.y, r16.y
  bfi r17.w, r15.z, l(0), l(0), r16.z
  movc r16.z, r16.w, r17.w, r16.z
  ieq r16.w, r15.w, r16.y
  ubfe r17.w, r16.x, l(0), r16.z
  movc r16.z, r16.w, r17.w, r16.z
  mov r24.xyzw, r22.xyzw
  mov r25.xyz, r23.yzwy
  mov r16.w, r16.z
  loop 
    breakc_z r16.w
    firstbit_lo r17.w, r16.w
    ishl r18.w, l(1), r17.w
    not r18.w, r18.w
    and r16.w, r16.w, r18.w
    iadd r17.w, r16.y, r17.w
    imul null, r17.w, r17.w, l(14)
    add r26.xyz, r10.xyzx, -cb10[r17.w + 0].xyzx
    and r18.w, l(0x0000ffff), cb10[r17.w + 7].z
    ubfe r19.z, l(6), l(25), cb10[r17.w + 7].z
    imul null, r19.w, r18.w, l(6)
    dp3 r20.w, cb11[r19.w + 0].xyzx, r26.xyzx
    add_sat r20.w, r20.w, cb11[r19.w + 0].w
    dp3 r21.w, cb11[r19.w + 1].xyzx, r26.xyzx
    add_sat r21.w, r21.w, cb11[r19.w + 1].w
    mul r20.w, r20.w, r21.w
    dp3 r21.w, cb11[r19.w + 2].xyzx, r26.xyzx
    add_sat r21.w, r21.w, cb11[r19.w + 2].w
    mul r20.w, r20.w, r21.w
    dp3 r21.w, cb11[r19.w + 3].xyzx, r26.xyzx
    add_sat r21.w, r21.w, cb11[r19.w + 3].w
    mul r20.w, r20.w, r21.w
    dp3 r21.w, cb11[r19.w + 4].xyzx, r26.xyzx
    add_sat r21.w, r21.w, cb11[r19.w + 4].w
    mul r20.w, r20.w, r21.w
    dp3 r21.w, cb11[r19.w + 5].xyzx, r26.xyzx
    add_sat r19.w, r21.w, cb11[r19.w + 5].w
    mul r17.x, r19.w, r20.w
    and r19.w, l(1), cb10[r17.w + 6].x
    movc r27.xy, r19.wwww, r17.xyxx, r17.zxzz
    mov r17.x, cb10[r17.w + 6].x
    mov r28.xy, r27.xyxx
    mov r19.w, l(1)
    loop 
      ige r20.w, r19.w, r19.z
      breakc_nz r20.w
      iadd r20.w, r18.w, r19.w
      imul null, r20.w, r20.w, l(6)
      dp3 r21.w, cb11[r20.w + 0].xyzx, r26.xyzx
      add_sat r21.w, r21.w, cb11[r20.w + 0].w
      mul r21.w, r21.w, r28.x
      dp3 r26.w, cb11[r20.w + 1].xyzx, r26.xyzx
      add_sat r26.w, r26.w, cb11[r20.w + 1].w
      mul r21.w, r21.w, r26.w
      dp3 r26.w, cb11[r20.w + 2].xyzx, r26.xyzx
      add_sat r26.w, r26.w, cb11[r20.w + 2].w
      mul r21.w, r21.w, r26.w
      dp3 r26.w, cb11[r20.w + 3].xyzx, r26.xyzx
      add_sat r26.w, r26.w, cb11[r20.w + 3].w
      mul r21.w, r21.w, r26.w
      dp3 r26.w, cb11[r20.w + 4].xyzx, r26.xyzx
      add_sat r26.w, r26.w, cb11[r20.w + 4].w
      mul r21.w, r21.w, r26.w
      dp3 r26.w, cb11[r20.w + 5].xyzx, r26.xyzx
      add_sat r20.w, r26.w, cb11[r20.w + 5].w
      mul r28.x, r20.w, r21.w
      ushr r26.w, r17.x, l(2)
      ubfe r27.z, l(1), l(2), r17.x
      and r27.w, r26.w, l(2)
      max r28.z, r28.x, r28.y
      mad r20.w, -r21.w, r20.w, l(1.000000)
      mul r20.w, r20.w, r28.y
      movc r19.y, r27.w, r20.w, r28.z
      movc r28.xy, r27.zzzz, r28.xyxx, r19.xyxx
      iadd r19.w, r19.w, l(1)
      mov r17.x, r26.w
    endloop 
    mov_sat r28.y, r28.y
    mul r17.x, r28.y, cb10[r17.w + 6].y
    lt r18.w, l(0.000000), r17.x
    if_nz r18.w
      mad r25.z, r28.y, cb10[r17.w + 6].y, r25.z
      mul r17.x, r17.x, cb10[r17.w + 7].y
      mov r27.x, cb10[r17.w + 7].w
      mov r27.yz, cb10[r17.w + 8].xxyx
      dp3 r18.w, r14.xyzx, r27.xyzx
      dp3 r19.y, r26.xyzx, r27.xyzx
      add r19.y, r19.y, -cb10[r17.w + 8].z
      ge r19.z, r19.y, l(0.000000)
      max r19.y, r13.w, |r19.y|
      movc r19.y, r19.z, r19.y, -r19.y
      max r18.w, -r18.w, l(0.00000010)
      div r18.w, r19.y, r18.w
      min r18.w, |r18.w|, l(131072.000000)
      mov r27.x, cb10[r17.w + 8].w
      mov r27.yz, cb10[r17.w + 9].xxyx
      dp3 r19.y, r14.xyzx, r27.xyzx
      dp3 r19.z, r26.xyzx, r27.xyzx
      add r19.z, r19.z, -cb10[r17.w + 9].z
      ge r19.w, r19.z, l(0.000000)
      max r19.z, r13.w, |r19.z|
      movc r19.z, r19.w, r19.z, -r19.z
      max r19.y, -r19.y, l(0.00000010)
      div r19.y, r19.z, r19.y
      min r18.w, r18.w, |r19.y|
      mov r27.x, cb10[r17.w + 9].w
      mov r27.yz, cb10[r17.w + 10].xxyx
      dp3 r19.y, r14.xyzx, r27.xyzx
      dp3 r19.z, r26.xyzx, r27.xyzx
      add r19.z, r19.z, -cb10[r17.w + 10].z
      ge r19.w, r19.z, l(0.000000)
      max r19.z, r13.w, |r19.z|
      movc r19.z, r19.w, r19.z, -r19.z
      max r19.y, -r19.y, l(0.00000010)
      div r19.y, r19.z, r19.y
      min r18.w, r18.w, |r19.y|
      mov r27.x, cb10[r17.w + 10].w
      mov r27.yz, cb10[r17.w + 11].xxyx
      dp3 r19.y, r14.xyzx, r27.xyzx
      dp3 r19.z, r26.xyzx, r27.xyzx
      add r19.z, r19.z, -cb10[r17.w + 11].z
      ge r19.w, r19.z, l(0.000000)
      max r19.z, r13.w, |r19.z|
      movc r19.z, r19.w, r19.z, -r19.z
      max r19.y, -r19.y, l(0.00000010)
      div r19.y, r19.z, r19.y
      min r18.w, r18.w, |r19.y|
      mov r27.x, cb10[r17.w + 11].w
      mov r27.yz, cb10[r17.w + 12].xxyx
      dp3 r19.y, r14.xyzx, r27.xyzx
      dp3 r19.z, r26.xyzx, r27.xyzx
      add r19.z, r19.z, -cb10[r17.w + 12].z
      ge r19.w, r19.z, l(0.000000)
      max r19.z, r13.w, |r19.z|
      movc r19.z, r19.w, r19.z, -r19.z
      max r19.y, -r19.y, l(0.00000010)
      div r19.y, r19.z, r19.y
      min r18.w, r18.w, |r19.y|
      mov r27.x, cb10[r17.w + 12].w
      mov r27.yz, cb10[r17.w + 13].xxyx
      dp3 r19.y, r14.xyzx, r27.xyzx
      dp3 r19.z, r26.xyzx, r27.xyzx
      add r19.z, r19.z, -cb10[r17.w + 13].z
      ge r19.w, r19.z, l(0.000000)
      max r19.z, r13.w, |r19.z|
      movc r19.z, r19.w, r19.z, -r19.z
      max r19.y, -r19.y, l(0.00000010)
      div r19.y, r19.z, r19.y
      min r18.w, r18.w, |r19.y|
      add r27.x, r26.x, cb10[r17.w + 3].w
      add r27.yz, r26.yyzy, cb10[r17.w + 4].xxyx
      mad r19.yzw, r14.xxyz, r18.wwww, r27.xxyz
      dp3 r20.w, r19.yzwy, r19.yzwy
      sqrt r20.w, r20.w
      div r18.w, r18.w, r20.w
      add r18.w, r18.w, r18.w
      sqrt r18.w, r18.w
      mad r18.w, r12.w, l(5.000000), r18.w
      add r18.w, r18.w, l(-0.844800)
      mov r27.x, cb10[r17.w + 0].w
      mov r27.y, cb10[r17.w + 1].z
      mov r27.z, cb10[r17.w + 2].y
      dp3 r29.x, r19.yzwy, r27.xyzx
      mov r30.xy, cb10[r17.w + 1].xwxx
      mov r30.z, cb10[r17.w + 2].z
      dp3 r29.y, r19.yzwy, r30.xyzx
      mov r31.x, cb10[r17.w + 1].y
      mov r31.yz, cb10[r17.w + 2].xxwx
      dp3 r29.z, r19.yzwy, r31.xyzx
      ubfe r19.y, l(9), l(16), cb10[r17.w + 7].z
      utof r29.w, r19.y
      sample_l_indexable(texturecubearray)(float,float,float,float) r19.yzw, r29.xyzw, t8.wxyz, s2, r18.w
      dp3 r32.x, r26.xyzx, r27.xyzx
      dp3 r32.y, r26.xyzx, r30.xyzx
      dp3 r32.z, r26.xyzx, r31.xyzx
      mad_sat r26.xyz, r32.xyzx, cb10[r17.w + 3].xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
      mul r32.xy, r26.xyxx, cb10[r17.w + 4].zwzz
      mul r32.z, r26.z, cb10[r17.w + 5].x
      add r26.xyz, r32.xyzx, cb10[r17.w + 5].yzwy
      dp3 r29.x, r11.xyzx, r27.xyzx
      dp3 r29.y, r11.xyzx, r30.xyzx
      dp3 r29.z, r11.xyzx, r31.xyzx
      lt r27.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r29.xyzx
      movc r18.z, r27.x, l(0), l(0.500000)
      add r28.xzw, r18.xxyz, r26.xxyz
      sample_l_indexable(texture3d)(float,float,float,float) r28.xzw, r28.xzwx, t17.xwyz, s4, l(0.000000)
      mul r30.xyz, r29.xyzx, r29.xyzx
      mul r30.xyz, r17.xxxx, r30.xyzx
      movc r20.z, r27.y, l(0), l(0.500000)
      add r27.xyw, r20.xyxz, r26.xyxz
      sample_l_indexable(texture3d)(float,float,float,float) r27.xyw, r27.xywx, t18.xywz, s4, l(0.000000)
      mul r27.xyw, r30.yyyy, r27.xyxw
      mad r27.xyw, r28.xzxw, r30.xxxx, r27.xyxw
      movc r21.z, r27.z, l(0), l(0.500000)
      add r26.xyz, r21.xyzx, r26.xyzx
      sample_l_indexable(texture3d)(float,float,float,float) r26.xyz, r26.xyzx, t19.xyzw, s4, l(0.000000)
      mad r26.xyz, r26.xyzx, r30.zzzz, r27.xywx
      sample_l_indexable(texturecubearray)(float,float,float,float) r27.xyz, r29.xyzw, t8.xyzw, s2, l(6.000000)
      mul r28.xzw, r26.xxyz, r27.xxyz
      dp3 r17.w, r28.xzwx, l(0.212600, 0.715200, 0.072200, 0.000000)
      mad r24.xyz, r26.xyzx, r27.xyzx, r24.xyzx
      mul r18.z, r15.x, r17.w
      mul r19.yzw, r17.xxxx, r19.yyzw
      dp3 r17.x, r19.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
      mad r17.x, r15.x, r17.w, r17.x
      div r17.x, r18.z, r17.x
      mov r26.x, r24.w
      mov r26.yz, r25.xxyx
      mad r25.xyw, r19.zwzy, r17.xxxx, r26.yzyx
      mov r24.w, r25.w
    endif 
  endloop 
  mov r22.xyzw, r24.xyzw
  mov r23.yzw, r25.xxyz
  iadd r16.y, r16.y, l(32)
endloop 
lt r15.w, r23.w, l(1.000000)
if_nz r15.w
  mov r16.yz, l(0,0,1.000000,0)
  mov r17.xy, l(0,0,0,0)
  mov r18.x, l(1.000000)
  mov r19.xy, l(0,0,0,0)
  mov r20.xy, l(0,0,0,0)
  mov r21.x, r22.w
  mov r21.yzw, r23.yyzw
  mov r24.xyz, r22.xyzx
  mov r15.w, r23.w
  mov r16.w, l(0)
  loop 
    uge r17.w, r16.w, r15.y
    breakc_nz r17.w
    ushr r17.w, r16.w, l(5)
    iadd r17.w, r0.x, r17.w
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.w, r17.w, l(0), t26.xxxx
    ieq r18.z, r0.y, r16.w
    ubfe r18.w, r15.z, l(0), r17.w
    movc r17.w, r18.z, r18.w, r17.w
    mov r25.xyzw, r21.xyzw
    mov r26.xyz, r24.xyzx
    mov r18.z, r15.w
    mov r18.w, r17.w
    loop 
      breakc_z r18.w
      firstbit_lo r19.w, r18.w
      ishl r20.w, l(1), r19.w
      not r20.w, r20.w
      and r18.w, r18.w, r20.w
      iadd r19.w, r16.w, r19.w
      imul null, r19.w, r19.w, l(14)
      add r27.xyz, r10.xyzx, -cb10[r19.w + 0].xyzx
      and r20.w, l(0x0000ffff), cb10[r19.w + 7].z
      ubfe r24.w, l(6), l(25), cb10[r19.w + 7].z
      imul null, r26.w, r20.w, l(6)
      dp3 r27.w, cb11[r26.w + 0].xyzx, r27.xyzx
      add_sat r27.w, r27.w, cb11[r26.w + 0].w
      dp3 r28.x, cb11[r26.w + 1].xyzx, r27.xyzx
      add_sat r28.x, r28.x, cb11[r26.w + 1].w
      mul r27.w, r27.w, r28.x
      dp3 r28.x, cb11[r26.w + 2].xyzx, r27.xyzx
      add_sat r28.x, r28.x, cb11[r26.w + 2].w
      mul r27.w, r27.w, r28.x
      dp3 r28.x, cb11[r26.w + 3].xyzx, r27.xyzx
      add_sat r28.x, r28.x, cb11[r26.w + 3].w
      mul r27.w, r27.w, r28.x
      dp3 r28.x, cb11[r26.w + 4].xyzx, r27.xyzx
      add_sat r28.x, r28.x, cb11[r26.w + 4].w
      mul r27.w, r27.w, r28.x
      dp3 r28.x, cb11[r26.w + 5].xyzx, r27.xyzx
      add_sat r26.w, r28.x, cb11[r26.w + 5].w
      mul r16.x, r26.w, r27.w
      and r26.w, l(1), cb10[r19.w + 6].x
      movc r28.xy, r26.wwww, r16.xyxx, r16.zxzz
      mov r16.x, cb10[r19.w + 6].x
      mov r29.xy, r28.xyxx
      mov r26.w, l(1)
      loop 
        ige r27.w, r26.w, r24.w
        breakc_nz r27.w
        iadd r27.w, r20.w, r26.w
        imul null, r27.w, r27.w, l(6)
        dp3 r28.z, cb11[r27.w + 0].xyzx, r27.xyzx
        add_sat r28.z, r28.z, cb11[r27.w + 0].w
        mul r28.z, r28.z, r29.x
        dp3 r28.w, cb11[r27.w + 1].xyzx, r27.xyzx
        add_sat r28.w, r28.w, cb11[r27.w + 1].w
        mul r28.z, r28.w, r28.z
        dp3 r28.w, cb11[r27.w + 2].xyzx, r27.xyzx
        add_sat r28.w, r28.w, cb11[r27.w + 2].w
        mul r28.z, r28.w, r28.z
        dp3 r28.w, cb11[r27.w + 3].xyzx, r27.xyzx
        add_sat r28.w, r28.w, cb11[r27.w + 3].w
        mul r28.z, r28.w, r28.z
        dp3 r28.w, cb11[r27.w + 4].xyzx, r27.xyzx
        add_sat r28.w, r28.w, cb11[r27.w + 4].w
        mul r28.z, r28.w, r28.z
        dp3 r28.w, cb11[r27.w + 5].xyzx, r27.xyzx
        add_sat r27.w, r28.w, cb11[r27.w + 5].w
        mul r29.x, r27.w, r28.z
        ushr r28.w, r16.x, l(2)
        ubfe r29.z, l(1), l(2), r16.x
        and r29.w, r28.w, l(2)
        max r30.x, r29.x, r29.y
        mad r27.w, -r28.z, r27.w, l(1.000000)
        mul r27.w, r27.w, r29.y
        movc r18.y, r29.w, r27.w, r30.x
        movc r29.xy, r29.zzzz, r29.xyxx, r18.xyxx
        iadd r26.w, r26.w, l(1)
        mov r16.x, r28.w
      endloop 
      add_sat r16.x, -r18.z, r29.y
      mul r18.y, r16.x, cb10[r19.w + 6].y
      lt r20.w, l(0.000000), r18.y
      if_nz r20.w
        mad r25.w, r16.x, cb10[r19.w + 6].y, r25.w
        mul r16.x, r18.y, cb10[r19.w + 7].y
        mov r28.x, cb10[r19.w + 7].w
        mov r28.yz, cb10[r19.w + 8].xxyx
        dp3 r18.y, r14.xyzx, r28.xyzx
        dp3 r20.w, r27.xyzx, r28.xyzx
        add r20.w, r20.w, -cb10[r19.w + 8].z
        ge r24.w, r20.w, l(0.000000)
        max r20.w, r13.w, |r20.w|
        movc r20.w, r24.w, r20.w, -r20.w
        max r18.y, -r18.y, l(0.00000010)
        div r18.y, r20.w, r18.y
        min r18.y, |r18.y|, l(131072.000000)
        mov r28.x, cb10[r19.w + 8].w
        mov r28.yz, cb10[r19.w + 9].xxyx
        dp3 r20.w, r14.xyzx, r28.xyzx
        dp3 r24.w, r27.xyzx, r28.xyzx
        add r24.w, r24.w, -cb10[r19.w + 9].z
        ge r26.w, r24.w, l(0.000000)
        max r24.w, r13.w, |r24.w|
        movc r24.w, r26.w, r24.w, -r24.w
        max r20.w, -r20.w, l(0.00000010)
        div r20.w, r24.w, r20.w
        min r18.y, r18.y, |r20.w|
        mov r28.x, cb10[r19.w + 9].w
        mov r28.yz, cb10[r19.w + 10].xxyx
        dp3 r20.w, r14.xyzx, r28.xyzx
        dp3 r24.w, r27.xyzx, r28.xyzx
        add r24.w, r24.w, -cb10[r19.w + 10].z
        ge r26.w, r24.w, l(0.000000)
        max r24.w, r13.w, |r24.w|
        movc r24.w, r26.w, r24.w, -r24.w
        max r20.w, -r20.w, l(0.00000010)
        div r20.w, r24.w, r20.w
        min r18.y, r18.y, |r20.w|
        mov r28.x, cb10[r19.w + 10].w
        mov r28.yz, cb10[r19.w + 11].xxyx
        dp3 r20.w, r14.xyzx, r28.xyzx
        dp3 r24.w, r27.xyzx, r28.xyzx
        add r24.w, r24.w, -cb10[r19.w + 11].z
        ge r26.w, r24.w, l(0.000000)
        max r24.w, r13.w, |r24.w|
        movc r24.w, r26.w, r24.w, -r24.w
        max r20.w, -r20.w, l(0.00000010)
        div r20.w, r24.w, r20.w
        min r18.y, r18.y, |r20.w|
        mov r28.x, cb10[r19.w + 11].w
        mov r28.yz, cb10[r19.w + 12].xxyx
        dp3 r20.w, r14.xyzx, r28.xyzx
        dp3 r24.w, r27.xyzx, r28.xyzx
        add r24.w, r24.w, -cb10[r19.w + 12].z
        ge r26.w, r24.w, l(0.000000)
        max r24.w, r13.w, |r24.w|
        movc r24.w, r26.w, r24.w, -r24.w
        max r20.w, -r20.w, l(0.00000010)
        div r20.w, r24.w, r20.w
        min r18.y, r18.y, |r20.w|
        mov r28.x, cb10[r19.w + 12].w
        mov r28.yz, cb10[r19.w + 13].xxyx
        dp3 r20.w, r14.xyzx, r28.xyzx
        dp3 r24.w, r27.xyzx, r28.xyzx
        add r24.w, r24.w, -cb10[r19.w + 13].z
        ge r26.w, r24.w, l(0.000000)
        max r24.w, r13.w, |r24.w|
        movc r24.w, r26.w, r24.w, -r24.w
        max r20.w, -r20.w, l(0.00000010)
        div r20.w, r24.w, r20.w
        min r18.y, r18.y, |r20.w|
        add r28.x, r27.x, cb10[r19.w + 3].w
        add r28.yz, r27.yyzy, cb10[r19.w + 4].xxyx
        mad r28.xyz, r14.xyzx, r18.yyyy, r28.xyzx
        dp3 r20.w, r28.xyzx, r28.xyzx
        sqrt r20.w, r20.w
        div r18.y, r18.y, r20.w
        add r18.y, r18.y, r18.y
        sqrt r18.y, r18.y
        mad r18.y, r12.w, l(5.000000), r18.y
        add r18.y, r18.y, l(-0.844800)
        mov r30.x, cb10[r19.w + 0].w
        mov r30.y, cb10[r19.w + 1].z
        mov r30.z, cb10[r19.w + 2].y
        dp3 r31.x, r28.xyzx, r30.xyzx
        mov r32.xy, cb10[r19.w + 1].xwxx
        mov r32.z, cb10[r19.w + 2].z
        dp3 r31.y, r28.xyzx, r32.xyzx
        mov r33.x, cb10[r19.w + 1].y
        mov r33.yz, cb10[r19.w + 2].xxwx
        dp3 r31.z, r28.xyzx, r33.xyzx
        ubfe r20.w, l(9), l(16), cb10[r19.w + 7].z
        utof r31.w, r20.w
        sample_l_indexable(texturecubearray)(float,float,float,float) r28.xyz, r31.xyzw, t8.xyzw, s2, r18.y
        dp3 r34.x, r27.xyzx, r30.xyzx
        dp3 r34.y, r27.xyzx, r32.xyzx
        dp3 r34.z, r27.xyzx, r33.xyzx
        mad_sat r27.xyz, r34.xyzx, cb10[r19.w + 3].xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
        mul r34.xy, r27.xyxx, cb10[r19.w + 4].zwzz
        mul r34.z, r27.z, cb10[r19.w + 5].x
        add r27.xyz, r34.xyzx, cb10[r19.w + 5].yzwy
        dp3 r31.x, r11.xyzx, r30.xyzx
        dp3 r31.y, r11.xyzx, r32.xyzx
        dp3 r31.z, r11.xyzx, r33.xyzx
        lt r29.xzw, l(0.000000, 0.000000, 0.000000, 0.000000), r31.xxyz
        movc r17.z, r29.x, l(0), l(0.500000)
        add r30.xyz, r17.xyzx, r27.xyzx
        sample_l_indexable(texture3d)(float,float,float,float) r30.xyz, r30.xyzx, t17.xyzw, s4, l(0.000000)
        mul r32.xyz, r31.xyzx, r31.xyzx
        mul r32.xyz, r16.xxxx, r32.xyzx
        movc r19.z, r29.z, l(0), l(0.500000)
        add r33.xyz, r19.xyzx, r27.xyzx
        sample_l_indexable(texture3d)(float,float,float,float) r33.xyz, r33.xyzx, t18.xyzw, s4, l(0.000000)
        mul r33.xyz, r32.yyyy, r33.xyzx
        mad r30.xyz, r30.xyzx, r32.xxxx, r33.xyzx
        movc r20.z, r29.w, l(0), l(0.500000)
        add r27.xyz, r20.xyzx, r27.xyzx
        sample_l_indexable(texture3d)(float,float,float,float) r27.xyz, r27.xyzx, t19.xyzw, s4, l(0.000000)
        mad r27.xyz, r27.xyzx, r32.zzzz, r30.xyzx
        sample_l_indexable(texturecubearray)(float,float,float,float) r29.xzw, r31.xyzw, t8.xwyz, s2, l(6.000000)
        mul r30.xyz, r27.xyzx, r29.xzwx
        dp3 r17.z, r30.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
        mad r26.xyz, r27.xyzx, r29.xzwx, r26.xyzx
        mul r18.y, r15.x, r17.z
        mul r27.xyz, r16.xxxx, r28.xyzx
        dp3 r16.x, r27.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
        mad r16.x, r15.x, r17.z, r16.x
        div r16.x, r18.y, r16.x
        mad r25.xyz, r27.xyzx, r16.xxxx, r25.xyzx
      endif 
    endloop 
    mov r21.xyzw, r25.xyzw
    mov r24.xyz, r26.xyzx
    iadd r16.w, r16.w, l(32)
  endloop 
  mov r23.xyzw, r21.zxyw
  mov r22.xyz, r24.xyzx
  mov r23.xyzw, r23.yzxw
else 
  mov r23.x, r22.w
endif 
max r0.x, r23.w, l(1.000000)
rcp r0.x, r0.x
mov_sat r23.w, r23.w
mul r15.xyz, r0.xxxx, r22.xyzx
mul r16.xyz, r0.xxxx, r23.xyzx
lt r0.y, r23.w, l(0.990000)
if_nz r0.y
  add r0.y, -r23.w, l(1.000000)
  mul r12.w, r0.y, cb2[19].x
  add r17.xyz, r10.xyzx, -cb2[35].xyzx
  mul r18.x, r17.x, cb2[35].w
  mul r18.yz, r17.yyzy, cb2[36].xxyx
  add_sat r17.xyz, r18.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mul r18.xy, r17.xyxx, cb2[36].zwzz
  mul r18.z, r17.z, cb2[37].x
  add r17.xyz, r18.xyzx, cb2[37].yzwy
  lt r18.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
  movc r18.xyz, r18.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
  mov r18.w, l(0)
  add r19.xyz, r17.xyzx, r18.wwxw
  sample_l_indexable(texture3d)(float,float,float,float) r19.xyz, r19.xyzx, t17.xyzw, s4, l(0.000000)
  mul r20.xyz, r11.xyzx, r11.xyzx
  mul r20.xyz, r12.wwww, r20.xyzx
  add r21.xyz, r17.xyzx, r18.wwyw
  sample_l_indexable(texture3d)(float,float,float,float) r21.xyz, r21.xyzx, t18.xyzw, s4, l(0.000000)
  mul r21.xyz, r20.yyyy, r21.xyzx
  mad r19.xyz, r19.xyzx, r20.xxxx, r21.xyzx
  add r17.xyz, r17.xyzx, r18.wwzw
  sample_l_indexable(texture3d)(float,float,float,float) r17.xyz, r17.xyzx, t19.xyzw, s4, l(0.000000)
  mad r17.xyz, r17.xyzx, r20.zzzz, r19.xyzx
  mov r11.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r18.xyz, r11.xyzw, t8.xyzw, s2, l(6.000000)
  mul r17.xyz, r17.xyzx, r18.xyzx
  dp3 r11.w, r17.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  mad r15.xyz, r22.xyzx, r0.xxxx, r17.xyzx
  mov r14.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r14.xyz, r14.xyzw, t8.xyzw, s2, r13.z
  mad r0.x, cb2[19].x, r0.y, -r11.w
  mad r0.x, r2.y, r0.x, r11.w
  mad r16.xyz, r14.xyzx, r0.xxxx, r16.xyzx
endif 
add r0.x, -r5.w, l(1.000000)
mad r9.xyw, r16.xyxz, r0.xxxx, r9.xyxw
mad r0.x, r4.z, r2.z, r2.x
log r0.x, |r0.x|
mul r0.x, r0.x, r1.w
exp r0.x, r0.x
mad r0.x, r4.z, r2.z, r0.x
add_sat r0.x, r0.x, l(-1.000000)
mul r0.x, r7.w, r0.x
mul r14.xyz, r2.wwww, r15.xyzx
and r16.xyz, r0.wwww, r14.xyzx
mad r2.yz, r2.xxyx, l(0.000000, 0.984375, 0.984375, 0.000000), l(0.000000, 0.00781250, 0.00781250, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r2.yz, r2.yzyy, t5.zxyw, s2, l(0.000000)
mul r9.xyw, r0.xxxx, r9.xyxw
mul r17.xyz, r2.yyyy, r9.xywx
mul r9.xyw, r2.zzzz, r9.xyxw
lt r0.x, l(0.000000), r10.w
if_nz r0.x
  lt r0.x, l(0.000000), r13.y
  if_nz r0.x
    sqrt r0.x, r1.w
    mad r0.x, r0.x, l(0.500000), l(0.500000)
    mul r0.x, r0.x, r0.x
    mul r0.y, r0.x, l(0.500000)
    mad r0.x, -r0.x, l(0.500000), l(1.000000)
    mad r2.y, r2.x, r0.x, r0.y
    mul r0.xy, r0.xyxx, r2.yyyy
    mul r2.y, r1.z, cb2[18].w
    mul r2.y, r8.w, r2.y
    if_nz cb2[23].x
      add r18.xyz, r10.xyzx, cb1[24].xyzx
      mov r18.w, l(1.000000)
      dp4 r2.z, cb2[24].xyzw, r18.xyzw
      dp4 r4.z, cb2[25].xyzw, r18.xyzw
      frc r18.x, r2.z
      frc r18.y, r4.z
      iadd r2.z, l(-1), cb2[23].x
      utof r18.z, r2.z
      sample_l_indexable(texture2darray)(float,float,float,float) r18.xyz, r18.xyzx, t20.xyzw, s2, l(0.000000)
      add r18.xyz, r18.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
      mad r18.xyz, cb2[23].yyyy, r18.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      mul r18.xyz, r18.xyzx, cb2[18].xyzx
    else 
      mov r18.xyz, cb2[18].xyzx
    endif 
    ushr r2.z, cb2[53].x, l(16)
    ult r4.z, l(0), r2.z
    and r4.z, r9.z, r4.z
    if_nz r4.z
      iadd r2.z, r2.z, cb2[0].x
      imad r2.z, r2.z, l(15), l(-15)
      mad r4.z, |r6.w|, l(-0.200000), l(0.400000)
      lt r5.w, r6.w, l(0.000000)
      and r5.w, r0.w, r5.w
      movc r4.z, r5.w, -r4.z, r4.z
      mad r19.xyz, r11.xyzx, r4.zzzz, r10.xyzx
      mov r20.xyz, cb9[r2.z + 4].yzwy
      mov r20.w, cb9[r2.z + 5].x
      mov r19.w, l(1.000000)
      dp4 r20.x, r20.xyzw, r19.xyzw
      mov r21.xyz, cb9[r2.z + 5].yzwy
      mov r21.w, cb9[r2.z + 6].x
      dp4 r20.y, r21.xyzw, r19.xyzw
      mad r13.zw, r20.xxxy, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
      add r20.x, r13.z, cb9[r2.z + 9].w
      add r20.y, r13.w, cb9[r2.z + 10].x
      mul r13.zw, r20.xxxy, cb9[r2.z + 9].yyyz
      div r20.xy, cb9[r2.z + 3].yyyy, cb9[r2.z + 8].ywyy
      add r20.zw, -r20.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
      ge r20.zw, r13.zzzw, r20.zzzw
      ge r20.xy, r20.xyxx, r13.zwzz
      or r20.xy, r20.xyxx, r20.zwzz
      or r4.z, r20.y, r20.x
      if_z r4.z
        mov r20.xyz, cb9[r2.z + 6].yzwy
        mov r20.w, cb9[r2.z + 7].x
        dp4 r4.z, r20.xyzw, r19.xyzw
        mov_sat r13.zw, r13.zzzw
        mad r19.x, r13.z, cb9[r2.z + 8].y, cb9[r2.z + 8].z
        mad r19.y, r13.w, cb9[r2.z + 8].w, cb9[r2.z + 9].x
        add r4.z, r4.z, cb9[r2.z + 10].y
        div r4.z, r4.z, cb9[r2.z + 10].z
        max r4.z, r4.z, l(0.00006104)
        and r5.w, l(0x0000ffff), cb9[r2.z + 1].w
        if_nz cb2[58].y
          mov r20.x, -r3.x
          utof r21.z, r5.w
          mov r20.y, r13.x
          mov r20.z, r3.x
          mov r7.w, l(0)
          mov r11.w, l(0)
          loop 
            ige r12.w, r11.w, l(8)
            breakc_nz r12.w
            dp2 r22.x, icb[r11.w + 0].yxyy, r20.xyxx
            dp2 r22.y, icb[r11.w + 0].yxyy, r20.yzyy
            mad r21.xy, r22.xyxx, cb9[r2.z + 3].yyyy, r19.xyxx
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.w, r21.xyzx, t9.xxxx, s13, r4.z
            mad r7.w, r12.w, l(0.125000), r7.w
            iadd r11.w, r11.w, l(1)
          endloop 
        else 
          utof r19.z, r5.w
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r7.w, r19.xyzx, t9.xxxx, s13, r4.z
        endif 
        mul r2.z, r7.w, r7.w
        mul r2.z, r7.w, r2.z
      else 
        mov r2.z, l(1.000000)
      endif 
      mul r13.y, r2.z, r13.y
    else 
      and r2.z, cb2[53].x, l(0x0000ffff)
      ult r4.z, l(0), r2.z
      not r5.w, r9.z
      and r4.z, r4.z, r5.w
      if_nz r4.z
        iadd r2.z, r2.z, cb2[0].x
        imad r2.z, r2.z, l(15), l(-15)
        mad r4.z, |r6.w|, l(-0.200000), l(0.400000)
        lt r5.w, r6.w, l(0.000000)
        and r5.w, r0.w, r5.w
        movc r4.z, r5.w, -r4.z, r4.z
        mad r19.xyz, r11.xyzx, r4.zzzz, r10.xyzx
        mov r20.xyz, cb9[r2.z + 4].yzwy
        mov r20.w, cb9[r2.z + 5].x
        mov r19.w, l(1.000000)
        dp4 r20.x, r20.xyzw, r19.xyzw
        mov r21.xyz, cb9[r2.z + 5].yzwy
        mov r21.w, cb9[r2.z + 6].x
        dp4 r20.y, r21.xyzw, r19.xyzw
        mad r13.zw, r20.xxxy, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
        add r20.x, r13.z, cb9[r2.z + 9].w
        add r20.y, r13.w, cb9[r2.z + 10].x
        mul r13.zw, r20.xxxy, cb9[r2.z + 9].yyyz
        div r20.xy, cb9[r2.z + 3].yyyy, cb9[r2.z + 8].ywyy
        add r20.zw, -r20.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
        ge r20.zw, r13.zzzw, r20.zzzw
        ge r20.xy, r20.xyxx, r13.zwzz
        or r20.xy, r20.xyxx, r20.zwzz
        or r4.z, r20.y, r20.x
        if_z r4.z
          mov r20.xyz, cb9[r2.z + 6].yzwy
          mov r20.w, cb9[r2.z + 7].x
          dp4 r4.z, r20.xyzw, r19.xyzw
          mov_sat r13.zw, r13.zzzw
          mad r19.x, r13.z, cb9[r2.z + 8].y, cb9[r2.z + 8].z
          mad r19.y, r13.w, cb9[r2.z + 8].w, cb9[r2.z + 9].x
          add r4.z, r4.z, cb9[r2.z + 10].y
          div r4.z, r4.z, cb9[r2.z + 10].z
          max r4.z, r4.z, l(0.00006104)
          and r5.w, l(0x0000ffff), cb9[r2.z + 1].w
          if_nz cb2[58].y
            mov r20.x, -r3.x
            utof r21.z, r5.w
            mov r20.y, r13.x
            mov r20.z, r3.x
            mov r3.x, l(0)
            mov r7.w, l(0)
            loop 
              ige r9.z, r7.w, l(8)
              breakc_nz r9.z
              dp2 r22.x, icb[r7.w + 0].yxyy, r20.xyxx
              dp2 r22.y, icb[r7.w + 0].yxyy, r20.yzyy
              mad r21.xy, r22.xyxx, cb9[r2.z + 3].yyyy, r19.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r9.z, r21.xyzx, t9.xxxx, s13, r4.z
              mad r3.x, r9.z, l(0.125000), r3.x
              iadd r7.w, r7.w, l(1)
            endloop 
          else 
            utof r19.z, r5.w
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r3.x, r19.xyzx, t9.xxxx, s13, r4.z
          endif 
          mul r2.z, r3.x, r3.x
          mul r2.z, r3.x, r2.z
        else 
          mov r2.z, l(1.000000)
        endif 
        mul r13.y, r2.z, r13.y
      endif 
    endif 
    mad r2.x, -r2.x, l(0.500000), l(1.000000)
    mad r2.x, -r10.w, r2.x, l(1.000000)
    mul r2.x, r2.x, r2.x
    mad r2.x, -r2.x, l(0.620000), l(0.620000)
    add r2.x, -r10.w, r2.x
    mad r1.w, r1.w, r2.x, r10.w
    mul r1.w, r13.y, r1.w
    mul r13.xzw, r18.xxyz, r1.wwww
    lt r2.x, l(0.000000), r6.w
    mad r13.xzw, r15.xxyz, r2.wwww, r13.xxzw
    mad r15.xyz, -r10.xyzx, r0.zzzz, cb2[17].xyzx
    dp3 r0.z, r15.xyzx, r15.xyzx
    rsq r0.z, r0.z
    mul r15.xyz, r0.zzzz, r15.xyzx
    dp3 r0.z, r15.xyzx, r12.xyzx
    dp3 r2.z, r11.xyzx, r15.xyzx
    mad r1.z, |r2.z|, r1.z, -|r2.z|
    mad r1.z, |r2.z|, r1.z, l(1.000000)
    mad r0.x, r8.w, r0.x, r0.y
    mul r0.y, r1.z, r1.z
    mul r0.x, r0.x, r0.y
    rcp r0.x, r0.x
    mul r0.x, r2.y, r0.x
    mul r0.x, r0.x, r13.y
    mul r0.x, r0.x, l(0.250000)
    mad r2.yzw, r0.xxxx, r18.xxyz, r9.xxyw
    add_sat r0.y, -r0.z, l(1.000000)
    mul r0.z, r0.y, r0.y
    mul r0.z, r0.z, r0.z
    mul r0.y, r0.z, r0.y
    mul r0.x, r0.y, r0.x
    mad r0.xyz, r0.xxxx, r18.xyzx, r17.xyzx
    mad r11.xyz, r1.wwww, r18.xyzx, r16.xyzx
    and r11.xyz, r0.wwww, r11.xyzx
    movc r14.xyz, r2.xxxx, r13.xzwx, r14.xyzx
    movc r16.xyz, r2.xxxx, r16.xyzx, r11.xyzx
    movc r17.xyz, r2.xxxx, r0.xyzx, r17.xyzx
    movc r9.xyw, r2.xxxx, r2.yzyw, r9.xyxw
  endif 
endif 
mad r2.xyz, r4.xwyx, l(1.000000, 3.000000, 2.000000, 0.000000), l(0.000000, 0.500000, -1.000000, 0.000000)
ftou r0.x, r2.y
mad r4.xyz, r5.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r0.y, r4.x
ieq r0.y, r0.x, r0.y
movc r0.yz, r0.yyyy, r4.yyzy, l(0,-1.000000,0,0)
mad r4.xyz, r6.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r1.z, r4.x
ieq r1.z, r0.x, r1.z
movc r1.zw, r1.zzzz, r4.yyyz, l(0,0,-1.000000,0)
mad r4.xyz, r7.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r3.x, r4.x
ieq r3.x, r0.x, r3.x
movc r4.xy, r3.xxxx, r4.yzyy, l(-1.000000,0,0,0)
mad r5.xyz, r8.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r3.x, r5.x
ieq r0.x, r0.x, r3.x
movc r4.zw, r0.xxxx, r5.yyyz, l(0,0,-1.000000,0)
mov r5.x, r0.y
mov r5.y, r1.z
mov r5.zw, r4.xxxz
add r5.xyzw, -r2.xxxx, r5.xyzw
ge r5.xyzw, |r5.xyzw|, l(0.00902149, 0.00902149, 0.00902149, 0.00902149)
movc r5.xyzw, r5.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
add r0.x, r5.y, r5.x
add r0.x, r5.z, r0.x
add r0.x, r5.w, r0.x
mul r0.y, r1.w, r5.y
mad r0.y, r5.x, r0.z, r0.y
mad r0.y, r5.z, r4.y, r0.y
mad r0.y, r5.w, r4.w, r0.y
div r2.w, r0.y, r0.x
ge r0.x, l(0.000000), r0.x
movc r2.yz, r0.xxxx, l(0,0,0,0), r2.zzwz
and r0.xy, r1.xyxx, l(1, 1, 0, 0)
ieq r0.x, r0.y, r0.x
movc r0.xyz, r0.xxxx, r2.xyzx, r2.xzyx
mad r0.x, -r0.z, l(0.500000), r0.x
add r2.y, r0.x, r0.z
mad r2.z, -r0.y, l(0.500000), r0.x
add r2.x, r0.y, r2.z
mul r0.xyz, r3.yzwy, r14.xyzx
mad r0.xyz, r16.xyzx, r2.xyzx, r0.xyzx
mul r4.xyz, r17.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
mad r4.xyz, r9.xywx, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
add r0.xyz, r0.xyzx, r4.xyzx
add r4.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r4.xyz, r4.xyzx, r17.xyzx
mad r2.xyz, r9.xywx, r2.xyzx, r4.xyzx
mad r2.xyz, r14.xyzx, r3.yzwy, r2.xyzx
movc r0.xyz, r0.wwww, r0.xyzx, r2.xyzx
lt r0.w, l(0.000000), cb2[9].z
if_nz r0.w
  dp3 r0.w, r10.xyzx, r10.xyzx
  rsq r1.z, r0.w
  mul r2.xyz, r1.zzzz, r10.xyzx
  sqrt r0.w, r0.w
  lt r1.z, l(0.000000), cb2[13].w
  if_nz r1.z
    mad r1.zw, r0.wwww, cb2[15].xxxy, cb2[14].zzzw
    mul r1.zw, r1.zzzw, cb2[16].xxxy
    lt r2.w, l(0.010000), |r10.z|
    mul r3.xy, r10.zzzz, cb2[15].zwzz
    mul r3.zw, r3.xxxy, l(0.000000, 0.000000, -1.442695, -1.442695)
    exp r3.zw, r3.zzzw
    add r3.zw, -r3.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    div r3.xy, r3.zwzz, r3.xyxx
    mul r3.xy, r1.zwzz, r3.xyxx
    movc r1.zw, r2.wwww, r3.xxxy, r1.zzzw
    mul r3.xyz, r1.zzzz, cb2[12].xyzx
    exp r3.xyz, r3.xyzx
    mul r4.xyz, r1.wwww, cb2[12].xyzx
    exp r4.xyz, r4.xyzx
    add r4.xyz, -r3.xyzx, r4.xyzx
    mad r3.xyz, cb2[13].wwww, r4.xyzx, r3.xyzx
  else 
    mad r1.z, r0.w, cb2[15].x, cb2[14].z
    mul r1.z, r1.z, cb2[16].x
    lt r1.w, l(0.010000), |r10.z|
    mul r2.w, r10.z, cb2[15].z
    mul r3.w, r2.w, l(-1.442695)
    exp r3.w, r3.w
    add r3.w, -r3.w, l(1.000000)
    div r2.w, r3.w, r2.w
    mul r2.w, r1.z, r2.w
    movc r1.z, r1.w, r2.w, r1.z
    mul r4.xyz, r1.zzzz, cb2[12].xyzx
    exp r3.xyz, r4.xyzx
  endif 
  mad r3.xyz, r3.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r3.xyz, r3.xyzx, -cb2[9].zzzz
  dp3 r1.z, cb2[7].yzwy, -r2.xyzx
  mad r1.w, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r2.x, cb2[8].w, -r1.z, l(1.000000)
  mul r2.x, r2.x, r2.x
  mul r2.x, r2.x, l(12.566371)
  div r1.w, r1.w, r2.x
  add r0.w, r0.w, -cb2[10].w
  mul_sat r0.w, r0.w, cb2[11].w
  mul r0.w, r0.w, r1.w
  mov_sat r1.z, r1.z
  mad r1.z, r1.z, r1.z, l(1.000000)
  mad r1.z, r1.z, l(0.05968310), l(-1.000000)
  mad r1.z, cb2[8].z, r1.z, l(1.000000)
  mul r2.xyz, r0.wwww, cb2[11].xyzx
  mad r2.xyz, r1.zzzz, cb2[10].xyzx, r2.xyzx
  mul r2.xyz, r2.xyzx, cb2[9].wwww
  add r4.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r2.xyz, r2.xyzx, r4.xyzx
  mad r2.xyz, r0.xyzx, r3.xyzx, r2.xyzx
else 
  mul r0.w, r10.z, cb2[6].x
  mad r1.z, cb2[6].x, r10.z, cb2[5].x
  lt r1.w, |r0.w|, l(0.000100)
  min r2.w, r1.z, l(64.000000)
  mul r2.w, r2.w, l(1.442695)
  exp r2.w, r2.w
  mov_sat r3.x, cb2[6].z
  lt r3.y, r1.z, l(0.000000)
  add r1.z, r1.z, l(1.000000)
  movc r1.z, r3.y, r2.w, r1.z
  add r1.z, r1.z, -cb2[6].z
  movc r0.w, r1.w, l(1.000000), r0.w
  div r0.w, r1.z, r0.w
  movc r0.w, r1.w, r3.x, r0.w
  mul r0.w, r0.w, cb2[5].z
  dp3 r1.z, r10.xyzx, r10.xyzx
  sqrt r1.w, r1.z
  mad r0.w, r0.w, r1.w, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  rsq r1.z, r1.z
  mul r3.xyz, r1.zzzz, r10.xyzx
  dp3 r1.z, cb2[7].yzwy, r3.xyzx
  mad_sat r1.z, cb2[8].y, r1.z, cb2[8].x
  add r3.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r3.xyzw, r1.zzzz, r3.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r3.w
  add r3.xyz, -r0.xyzx, r3.xyzx
  mad r2.xyz, r0.wwww, r3.xyzx, r0.xyzx
endif 
mul r0.xyzw, r2.xyzx, cb1[85].yyyy
ge r2.xyzw, r0.wyzw, l(0.00006104, 0.00006104, 0.00006104, 0.00006104)
and r0.xyzw, r0.xyzw, r2.xyzw
min r0.xyzw, r0.xyzw, l(65024.000000, 65024.000000, 64512.000000, 65024.000000)
store_uav_typed u0.xyzw, r1.xyyy, r0.xyzw
ret 
// Approximately 1665 instruction slots used
