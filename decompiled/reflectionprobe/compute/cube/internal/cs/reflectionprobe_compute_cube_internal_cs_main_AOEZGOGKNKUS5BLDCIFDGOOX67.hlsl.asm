//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:40:28 2021
//
//
// Buffer Definitions: 
//
// cbuffer GenericsCBuffer
// {
//
//   float4 scriptVector0;              // Offset:    0 Size:    16
//   float4 scriptVector1;              // Offset:   16 Size:    16 [unused]
//   float4 scriptVector2;              // Offset:   32 Size:    16 [unused]
//   float4 scriptVector3;              // Offset:   48 Size:    16 [unused]
//   float4 scriptVector4;              // Offset:   64 Size:    16 [unused]
//   float4 scriptVector5;              // Offset:   80 Size:    16 [unused]
//   float4 scriptVector6;              // Offset:   96 Size:    16 [unused]
//   float4 scriptVector7;              // Offset:  112 Size:    16 [unused]
//   float4 weaponParam0;               // Offset:  128 Size:    16 [unused]
//   float4 weaponParam1;               // Offset:  144 Size:    16 [unused]
//   float4 weaponParam2;               // Offset:  160 Size:    16 [unused]
//   float4 weaponParam3;               // Offset:  176 Size:    16 [unused]
//   float4 weaponParam4;               // Offset:  192 Size:    16 [unused]
//   float4 weaponParam5;               // Offset:  208 Size:    16 [unused]
//   float4 weaponParam6;               // Offset:  224 Size:    16 [unused]
//   float4 weaponParam7;               // Offset:  240 Size:    16 [unused]
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16 [unused]
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16 [unused]
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16 [unused]
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16 [unused]
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// gSRVReflectionArray               texture  float3     2darray             t0      1 
// gSRVReflection0                   texture  float3          2d             t1      1 
// gSRVReflection1                   texture  float3          2d             t2      1 
// gSRVReflection2                   texture  float3          2d             t3      1 
// gSRVReflection3                   texture  float3          2d             t4      1 
// gSRVReflection4                   texture  float3          2d             t5      1 
// gSRVReflection5                   texture  float3          2d             t6      1 
// gUAVMip0                              UAV  float3     2darray             u0      1 
// gUAVMip1                              UAV  float3     2darray             u1      1 
// gUAVMip2                              UAV  float3     2darray             u2      1 
// gUAVMip3                              UAV  float3     2darray             u3      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// GenericsCBuffer                   cbuffer      NA          NA            cb3      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB3[1], immediateIndexed
dcl_constantbuffer CB1[27], immediateIndexed
dcl_resource_texture2darray (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_uav_typed_texture2darray (float,float,float,float) u0
dcl_uav_typed_texture2darray (float,float,float,float) u1
dcl_uav_typed_texture2darray (float,float,float,float) u2
dcl_uav_typed_texture2darray (float,float,float,float) u3
dcl_input vThreadGroupID.xy
dcl_input vThreadIDInGroup.xy
dcl_input vThreadID.xyz
dcl_temps 5
dcl_tgsm_structured g0, 12, 64
dcl_thread_group 8, 8, 1
ftou r0.xy, cb3[0].xzxx
ieq r0.z, r0.x, l(256)
if_nz r0.y
  mov r1.xyz, vThreadID.xyzx
  mov r1.w, l(0)
  ld_indexable(texture2darray)(float,float,float,float) r1.xyz, r1.xyzw, t0.xyzw
else 
  switch vThreadID.z
    case l(0)
    mov r2.xy, vThreadID.xyxx
    mov r2.zw, l(0,0,0,0)
    ld_indexable(texture2d)(float,float,float,float) r1.xyz, r2.xyzw, t1.xyzw
    break 
    case l(1)
    mov r2.xy, vThreadID.xyxx
    mov r2.zw, l(0,0,0,0)
    ld_indexable(texture2d)(float,float,float,float) r1.xyz, r2.xyzw, t2.xyzw
    break 
    case l(2)
    mov r2.xy, vThreadID.xyxx
    mov r2.zw, l(0,0,0,0)
    ld_indexable(texture2d)(float,float,float,float) r1.xyz, r2.xyzw, t3.xyzw
    break 
    case l(3)
    mov r2.xy, vThreadID.xyxx
    mov r2.zw, l(0,0,0,0)
    ld_indexable(texture2d)(float,float,float,float) r1.xyz, r2.xyzw, t4.xyzw
    break 
    case l(4)
    mov r2.xy, vThreadID.xyxx
    mov r2.zw, l(0,0,0,0)
    ld_indexable(texture2d)(float,float,float,float) r1.xyz, r2.xyzw, t5.xyzw
    break 
    default 
    mov r2.xy, vThreadID.xyxx
    mov r2.zw, l(0,0,0,0)
    ld_indexable(texture2d)(float,float,float,float) r1.xyz, r2.xyzw, t6.xyzw
    break 
  endswitch 
endif 
imad r0.y, vThreadIDInGroup.y, l(8), vThreadIDInGroup.x
iadd r0.w, r0.x, l(-1)
iadd r2.x, r0.w, -vThreadID.y
mul r0.w, cb1[26].w, l(0.750000)
iadd r3.x, vThreadID.z, l(1)
ubfe r3.yz, l(0, 1, 1, 0), l(0, 2, 1, 0), r3.xxxx
and r3.x, r3.x, l(1)
utof r3.yzw, r3.yyzx
mul r2.yzw, r0.wwww, r3.yyzw
mov r1.w, vThreadID.y
movc r3.xyzw, r0.zzzz, r2.xyzw, r1.wxyz
mov r4.xzw, vThreadID.xxzz
mov r4.y, r3.x
store_uav_typed u0.xyzw, r4.xyzw, r3.yzwy
store_structured g0.xyz, r0.y, l(0), r1.xyzx
ushr r0.x, r0.x, l(1)
umin r0.w, r0.x, l(4)
sync_g_t
ult r1.xy, vThreadIDInGroup.xyxx, r0.wwww
and r1.x, r1.y, r1.x
if_nz r1.x
  ishl r1.xy, vThreadIDInGroup.xyxx, l(1, 1, 0, 0)
  ishl r1.y, r1.y, l(3)
  iadd r1.x, r1.y, r1.x
  ld_structured r1.yzw, r1.x, l(0), g0.xxyz
  iadd r3.x, r1.x, l(1)
  ld_structured r3.xyz, r3.x, l(0), g0.xyzx
  add r1.yzw, r1.yyzw, r3.xxyz
  iadd r3.xy, r1.xxxx, l(8, 9, 0, 0)
  ld_structured r3.xzw, r3.x, l(0), g0.xxyz
  add r1.xyz, r1.yzwy, r3.xzwx
  ld_structured r3.xyz, r3.y, l(0), g0.xyzx
  add r1.xyz, r1.xyzx, r3.xyzx
  mul r1.yzw, r1.xxyz, l(0.000000, 0.250000, 0.250000, 0.250000)
  store_structured g0.xyz, r0.y, l(0), r1.yzwy
  imad r3.xy, vThreadGroupID.xyxx, r0.wwww, vThreadIDInGroup.xyxx
  iadd r4.x, r0.x, l(-1)
  iadd r2.x, -r3.y, r4.x
  mov r1.x, r3.y
  movc r1.xyzw, r0.zzzz, r2.xyzw, r1.xyzw
  mov r3.z, r1.x
  mov r3.w, vThreadID.z
  store_uav_typed u1.xyzw, r3.xzww, r1.yzwy
endif 
ushr r0.xw, r0.xxxw, l(1, 0, 0, 1)
sync_g_t
ult r1.xy, vThreadIDInGroup.xyxx, r0.wwww
and r1.x, r1.y, r1.x
if_nz r1.x
  ishl r1.xy, vThreadIDInGroup.xyxx, l(1, 1, 0, 0)
  ishl r1.y, r1.y, l(3)
  iadd r1.x, r1.y, r1.x
  ld_structured r1.yzw, r1.x, l(0), g0.xxyz
  iadd r3.x, r1.x, l(1)
  ld_structured r3.xyz, r3.x, l(0), g0.xyzx
  add r1.yzw, r1.yyzw, r3.xxyz
  iadd r3.xy, r1.xxxx, l(8, 9, 0, 0)
  ld_structured r3.xzw, r3.x, l(0), g0.xxyz
  add r1.xyz, r1.yzwy, r3.xzwx
  ld_structured r3.xyz, r3.y, l(0), g0.xyzx
  add r1.xyz, r1.xyzx, r3.xyzx
  mul r1.yzw, r1.xxyz, l(0.000000, 0.250000, 0.250000, 0.250000)
  store_structured g0.xyz, r0.y, l(0), r1.yzwy
  imad r3.xy, vThreadGroupID.xyxx, r0.wwww, vThreadIDInGroup.xyxx
  iadd r0.y, r0.x, l(-1)
  iadd r2.x, -r3.y, r0.y
  mov r1.x, r3.y
  movc r1.xyzw, r0.zzzz, r2.xyzw, r1.xyzw
  mov r3.z, r1.x
  mov r3.w, vThreadID.z
  store_uav_typed u2.xyzw, r3.xzww, r1.yzwy
endif 
ushr r0.y, r0.w, l(1)
sync_g_t
ult r0.yw, vThreadIDInGroup.xxxy, r0.yyyy
and r0.y, r0.w, r0.y
if_nz r0.y
  ushr r0.x, r0.x, l(1)
  ld_structured r1.xyz, l(0), l(0), g0.xyzx
  ld_structured r3.xyz, l(1), l(0), g0.xyzx
  add r1.xyz, r1.xyzx, r3.xyzx
  ld_structured r3.xyz, l(8), l(0), g0.xyzx
  add r1.xyz, r1.xyzx, r3.xyzx
  ld_structured r3.xyz, l(9), l(0), g0.xyzx
  add r1.xyz, r1.xyzx, r3.xyzx
  mul r1.yzw, r1.xxyz, l(0.000000, 0.250000, 0.250000, 0.250000)
  iadd r0.x, r0.x, l(-1)
  iadd r2.x, r0.x, -vThreadGroupID.y
  mov r1.x, vThreadGroupID.y
  movc r0.xyzw, r0.zzzz, r2.xyzw, r1.xyzw
  mov r1.x, vThreadGroupID.x
  mov r1.y, r0.x
  mov r1.zw, vThreadID.zzzz
  store_uav_typed u3.xyzw, r1.xyzw, r0.yzwy
endif 
ret 
// Approximately 136 instruction slots used
