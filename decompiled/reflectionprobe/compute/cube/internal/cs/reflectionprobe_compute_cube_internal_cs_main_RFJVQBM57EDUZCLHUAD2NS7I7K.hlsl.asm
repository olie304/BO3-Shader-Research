//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:40:28 2021
//
//
// Buffer Definitions: 
//
// cbuffer GenericsCBuffer
// {
//
//   float4 scriptVector0;              // Offset:    0 Size:    16
//   float4 scriptVector1;              // Offset:   16 Size:    16 [unused]
//   float4 scriptVector2;              // Offset:   32 Size:    16 [unused]
//   float4 scriptVector3;              // Offset:   48 Size:    16 [unused]
//   float4 scriptVector4;              // Offset:   64 Size:    16 [unused]
//   float4 scriptVector5;              // Offset:   80 Size:    16 [unused]
//   float4 scriptVector6;              // Offset:   96 Size:    16 [unused]
//   float4 scriptVector7;              // Offset:  112 Size:    16 [unused]
//   float4 weaponParam0;               // Offset:  128 Size:    16 [unused]
//   float4 weaponParam1;               // Offset:  144 Size:    16 [unused]
//   float4 weaponParam2;               // Offset:  160 Size:    16 [unused]
//   float4 weaponParam3;               // Offset:  176 Size:    16 [unused]
//   float4 weaponParam4;               // Offset:  192 Size:    16 [unused]
//   float4 weaponParam5;               // Offset:  208 Size:    16 [unused]
//   float4 weaponParam6;               // Offset:  224 Size:    16 [unused]
//   float4 weaponParam7;               // Offset:  240 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// gSRVReflectionArray               texture  float3     2darray             t0      1 
// gSRVReflection0                   texture  float3          2d             t1      1 
// gSRVReflection1                   texture  float3          2d             t2      1 
// gSRVReflection2                   texture  float3          2d             t3      1 
// gSRVReflection3                   texture  float3          2d             t4      1 
// gSRVReflection4                   texture  float3          2d             t5      1 
// gSRVReflection5                   texture  float3          2d             t6      1 
// gUAVMip0                              UAV  float3     2darray             u0      1 
// gUAVMip1                              UAV  float3     2darray             u1      1 
// gUAVMip2                              UAV  float3     2darray             u2      1 
// gUAVMip3                              UAV  float3     2darray             u3      1 
// GenericsCBuffer                   cbuffer      NA          NA            cb3      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB3[1], immediateIndexed
dcl_resource_texture2darray (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_uav_typed_texture2darray (float,float,float,float) u0
dcl_uav_typed_texture2darray (float,float,float,float) u1
dcl_uav_typed_texture2darray (float,float,float,float) u2
dcl_uav_typed_texture2darray (float,float,float,float) u3
dcl_input vThreadGroupID.xy
dcl_input vThreadIDInGroup.xy
dcl_input vThreadID.xyz
dcl_temps 4
dcl_tgsm_structured g0, 12, 64
dcl_thread_group 8, 8, 1
ftou r0.xy, cb3[0].xzxx
ieq r0.z, r0.x, l(256)
if_nz r0.y
  mov r1.xyz, vThreadID.xyzx
  mov r1.w, l(0)
  ld_indexable(texture2darray)(float,float,float,float) r1.xyz, r1.xyzw, t0.xyzw
else 
  switch vThreadID.z
    case l(0)
    mov r2.xy, vThreadID.xyxx
    mov r2.zw, l(0,0,0,0)
    ld_indexable(texture2d)(float,float,float,float) r1.xyz, r2.xyzw, t1.xyzw
    break 
    case l(1)
    mov r2.xy, vThreadID.xyxx
    mov r2.zw, l(0,0,0,0)
    ld_indexable(texture2d)(float,float,float,float) r1.xyz, r2.xyzw, t2.xyzw
    break 
    case l(2)
    mov r2.xy, vThreadID.xyxx
    mov r2.zw, l(0,0,0,0)
    ld_indexable(texture2d)(float,float,float,float) r1.xyz, r2.xyzw, t3.xyzw
    break 
    case l(3)
    mov r2.xy, vThreadID.xyxx
    mov r2.zw, l(0,0,0,0)
    ld_indexable(texture2d)(float,float,float,float) r1.xyz, r2.xyzw, t4.xyzw
    break 
    case l(4)
    mov r2.xy, vThreadID.xyxx
    mov r2.zw, l(0,0,0,0)
    ld_indexable(texture2d)(float,float,float,float) r1.xyz, r2.xyzw, t5.xyzw
    break 
    default 
    mov r2.xy, vThreadID.xyxx
    mov r2.zw, l(0,0,0,0)
    ld_indexable(texture2d)(float,float,float,float) r1.xyz, r2.xyzw, t6.xyzw
    break 
  endswitch 
endif 
imad r0.y, vThreadIDInGroup.y, l(8), vThreadIDInGroup.x
iadd r0.w, r0.x, l(-1)
iadd r0.w, r0.w, -vThreadID.y
movc r2.y, r0.z, r0.w, vThreadID.y
mov r2.xzw, vThreadID.xxzz
store_uav_typed u0.xyzw, r2.xyzw, r1.xyzx
store_structured g0.xyz, r0.y, l(0), r1.xyzx
ushr r0.x, r0.x, l(1)
umin r0.w, r0.x, l(4)
sync_g_t
ult r1.xy, vThreadIDInGroup.xyxx, r0.wwww
and r1.x, r1.y, r1.x
if_nz r1.x
  ishl r1.xy, vThreadIDInGroup.xyxx, l(1, 1, 0, 0)
  ishl r1.y, r1.y, l(3)
  iadd r1.x, r1.y, r1.x
  ld_structured r1.yzw, r1.x, l(0), g0.xxyz
  iadd r2.x, r1.x, l(1)
  ld_structured r2.xyz, r2.x, l(0), g0.xyzx
  add r2.xyzw, r1.yzwy, r2.xyzx
  iadd r1.xy, r1.xxxx, l(8, 9, 0, 0)
  ld_structured r1.xzw, r1.x, l(0), g0.xxyz
  add r2.xyzw, r1.xzwx, r2.xyzw
  ld_structured r1.xyz, r1.y, l(0), g0.xyzx
  add r1.xyzw, r1.xyzx, r2.xyzw
  mul r1.xyzw, r1.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  store_structured g0.xyz, r0.y, l(0), r1.wyzw
  imad r2.xy, vThreadGroupID.xyxx, r0.wwww, vThreadIDInGroup.xyxx
  iadd r3.x, r0.x, l(-1)
  iadd r3.x, -r2.y, r3.x
  movc r2.z, r0.z, r3.x, r2.y
  mov r2.w, vThreadID.z
  store_uav_typed u1.xyzw, r2.xzww, r1.xyzw
endif 
ushr r0.xw, r0.xxxw, l(1, 0, 0, 1)
sync_g_t
ult r1.xy, vThreadIDInGroup.xyxx, r0.wwww
and r1.x, r1.y, r1.x
if_nz r1.x
  ishl r1.xy, vThreadIDInGroup.xyxx, l(1, 1, 0, 0)
  ishl r1.y, r1.y, l(3)
  iadd r1.x, r1.y, r1.x
  ld_structured r1.yzw, r1.x, l(0), g0.xxyz
  iadd r2.x, r1.x, l(1)
  ld_structured r2.xyz, r2.x, l(0), g0.xyzx
  add r2.xyzw, r1.yzwy, r2.xyzx
  iadd r1.xy, r1.xxxx, l(8, 9, 0, 0)
  ld_structured r1.xzw, r1.x, l(0), g0.xxyz
  add r2.xyzw, r1.xzwx, r2.xyzw
  ld_structured r1.xyz, r1.y, l(0), g0.xyzx
  add r1.xyzw, r1.xyzx, r2.xyzw
  mul r1.xyzw, r1.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  store_structured g0.xyz, r0.y, l(0), r1.wyzw
  imad r2.xy, vThreadGroupID.xyxx, r0.wwww, vThreadIDInGroup.xyxx
  iadd r0.y, r0.x, l(-1)
  iadd r0.y, -r2.y, r0.y
  movc r2.z, r0.z, r0.y, r2.y
  mov r2.w, vThreadID.z
  store_uav_typed u2.xyzw, r2.xzww, r1.xyzw
endif 
ushr r0.y, r0.w, l(1)
sync_g_t
ult r0.yw, vThreadIDInGroup.xxxy, r0.yyyy
and r0.y, r0.w, r0.y
if_nz r0.y
  ushr r0.x, r0.x, l(1)
  ld_structured r1.xyz, l(0), l(0), g0.xyzx
  ld_structured r2.xyz, l(1), l(0), g0.xyzx
  add r1.xyzw, r1.xyzx, r2.xyzx
  ld_structured r2.xyz, l(8), l(0), g0.xyzx
  add r1.xyzw, r1.xyzw, r2.xyzx
  ld_structured r2.xyz, l(9), l(0), g0.xyzx
  add r1.xyzw, r1.xyzw, r2.xyzx
  mul r1.xyzw, r1.xyzw, l(0.250000, 0.250000, 0.250000, 0.250000)
  iadd r0.x, r0.x, l(-1)
  iadd r0.x, r0.x, -vThreadGroupID.y
  movc r0.y, r0.z, r0.x, vThreadGroupID.y
  mov r0.x, vThreadGroupID.x
  mov r0.zw, vThreadID.zzzz
  store_uav_typed u3.xyzw, r0.xyzw, r1.xyzw
endif 
ret 
// Approximately 122 instruction slots used
