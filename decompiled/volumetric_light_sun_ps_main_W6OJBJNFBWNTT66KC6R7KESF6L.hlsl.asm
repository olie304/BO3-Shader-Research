//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:43:55 2021
//
//
// Buffer Definitions: 
//
// cbuffer PostFxCBuffer
// {
//
//   float4 postFxControl0;             // Offset:    0 Size:    16
//   float4 postFxControl1;             // Offset:   16 Size:    16
//   float4 postFxControl2;             // Offset:   32 Size:    16
//   float4 postFxControl3;             // Offset:   48 Size:    16
//   float4 postFxControl4;             // Offset:   64 Size:    16
//   float4 postFxControl5;             // Offset:   80 Size:    16
//   float4 postFxControl6;             // Offset:   96 Size:    16
//   float4 postFxControl7;             // Offset:  112 Size:    16
//   float4 postFxControl8;             // Offset:  128 Size:    16 [unused]
//   float4 postFxControl9;             // Offset:  144 Size:    16 [unused]
//   float4 postFxControlA;             // Offset:  160 Size:    16
//   float4 postFxControlB;             // Offset:  176 Size:    16 [unused]
//   float4 postFxControlC;             // Offset:  192 Size:    16 [unused]
//   float4 postFxControlD;             // Offset:  208 Size:    16 [unused]
//   float4 postFxControlE;             // Offset:  224 Size:    16 [unused]
//   float4 postFxControlF;             // Offset:  240 Size:    16 [unused]
//   float4 postFxConst00;              // Offset:  256 Size:    16 [unused]
//   float4 postFxConst01;              // Offset:  272 Size:    16 [unused]
//   float4 postFxConst02;              // Offset:  288 Size:    16 [unused]
//   float4 postFxConst03;              // Offset:  304 Size:    16 [unused]
//   float4 postFxConst04;              // Offset:  320 Size:    16 [unused]
//   float4 postFxConst05;              // Offset:  336 Size:    16 [unused]
//   float4 postFxConst06;              // Offset:  352 Size:    16 [unused]
//   float4 postFxConst07;              // Offset:  368 Size:    16 [unused]
//   float4 postFxConst08;              // Offset:  384 Size:    16 [unused]
//   float4 postFxConst09;              // Offset:  400 Size:    16 [unused]
//   float4 postFxConst10;              // Offset:  416 Size:    16 [unused]
//   float4 postFxConst11;              // Offset:  432 Size:    16 [unused]
//   float4 postFxConst12;              // Offset:  448 Size:    16 [unused]
//   float4 postFxConst13;              // Offset:  464 Size:    16 [unused]
//   float4 postFxConst14;              // Offset:  480 Size:    16 [unused]
//   float4 postFxConst15;              // Offset:  496 Size:    16 [unused]
//   float4 postFxConst16;              // Offset:  512 Size:    16 [unused]
//   float4 postFxConst17;              // Offset:  528 Size:    16 [unused]
//   float4 postFxConst18;              // Offset:  544 Size:    16 [unused]
//   float4 postFxConst19;              // Offset:  560 Size:    16 [unused]
//   float4 postFxConst20;              // Offset:  576 Size:    16 [unused]
//   float4 postFxConst21;              // Offset:  592 Size:    16 [unused]
//   float4 postFxConst22;              // Offset:  608 Size:    16 [unused]
//   float4 postFxConst23;              // Offset:  624 Size:    16 [unused]
//   float4 postFxConst24;              // Offset:  640 Size:    16 [unused]
//   float4 postFxConst25;              // Offset:  656 Size:    16 [unused]
//   float4 postFxConst26;              // Offset:  672 Size:    16 [unused]
//   float4 postFxConst27;              // Offset:  688 Size:    16 [unused]
//   float4 postFxConst28;              // Offset:  704 Size:    16 [unused]
//   float4 postFxConst29;              // Offset:  720 Size:    16 [unused]
//   float4 postFxConst30;              // Offset:  736 Size:    16 [unused]
//   float4 postFxConst31;              // Offset:  752 Size:    16 [unused]
//   float4 postFxConst32;              // Offset:  768 Size:    16 [unused]
//   float4 postFxConst33;              // Offset:  784 Size:    16 [unused]
//   float4 postFxConst34;              // Offset:  800 Size:    16 [unused]
//   float4 postFxConst35;              // Offset:  816 Size:    16 [unused]
//   float4 postFxConst36;              // Offset:  832 Size:    16 [unused]
//   float4 postFxConst37;              // Offset:  848 Size:    16 [unused]
//   float4 postFxConst38;              // Offset:  864 Size:    16 [unused]
//   float4 postFxConst39;              // Offset:  880 Size:    16 [unused]
//   float4 postFxConst40;              // Offset:  896 Size:    16 [unused]
//   float4 postFxConst41;              // Offset:  912 Size:    16 [unused]
//   float4 postFxConst42;              // Offset:  928 Size:    16 [unused]
//   float4 postFxConst43;              // Offset:  944 Size:    16 [unused]
//   float4 postFxConst44;              // Offset:  960 Size:    16 [unused]
//   float4 postFxConst45;              // Offset:  976 Size:    16 [unused]
//   float4 postFxConst46;              // Offset:  992 Size:    16 [unused]
//   float4 postFxConst47;              // Offset: 1008 Size:    16 [unused]
//   float4 postFxConst48;              // Offset: 1024 Size:    16 [unused]
//   float4 postFxConst49;              // Offset: 1040 Size:    16 [unused]
//   float4 postFxConst50;              // Offset: 1056 Size:    16 [unused]
//   float4 postFxConst51;              // Offset: 1072 Size:    16 [unused]
//   float4 postFxConst52;              // Offset: 1088 Size:    16 [unused]
//   float4 postFxConst53;              // Offset: 1104 Size:    16 [unused]
//   float4 postFxConst54;              // Offset: 1120 Size:    16 [unused]
//   float4 postFxConst55;              // Offset: 1136 Size:    16 [unused]
//   float4 postFxConst56;              // Offset: 1152 Size:    16 [unused]
//   float4 postFxConst57;              // Offset: 1168 Size:    16 [unused]
//   float4 postFxConst58;              // Offset: 1184 Size:    16 [unused]
//   float4 postFxConst59;              // Offset: 1200 Size:    16 [unused]
//   float4 postFxConst60;              // Offset: 1216 Size:    16 [unused]
//   float4 postFxConst61;              // Offset: 1232 Size:    16 [unused]
//   float4 postFxConst62;              // Offset: 1248 Size:    16 [unused]
//   float4 postFxConst63;              // Offset: 1264 Size:    16 [unused]
//   float4 postFxBloom00;              // Offset: 1280 Size:    16 [unused]
//   float4 postFxBloom01;              // Offset: 1296 Size:    16 [unused]
//   float4 postFxBloom02;              // Offset: 1312 Size:    16 [unused]
//   float4 postFxBloom03;              // Offset: 1328 Size:    16 [unused]
//   float4 postFxBloom04;              // Offset: 1344 Size:    16 [unused]
//   float4 postFxBloom05;              // Offset: 1360 Size:    16 [unused]
//   float4 postFxBloom06;              // Offset: 1376 Size:    16 [unused]
//   float4 postFxBloom07;              // Offset: 1392 Size:    16 [unused]
//   float4 postFxBloom08;              // Offset: 1408 Size:    16 [unused]
//   float4 postFxBloom09;              // Offset: 1424 Size:    16 [unused]
//   float4 postFxBloom10;              // Offset: 1440 Size:    16 [unused]
//   float4 postFxBloom11;              // Offset: 1456 Size:    16 [unused]
//   float4 postFxBloom12;              // Offset: 1472 Size:    16 [unused]
//   float4 postFxBloom13;              // Offset: 1488 Size:    16 [unused]
//   float4 postFxBloom14;              // Offset: 1504 Size:    16 [unused]
//   float4 postFxBloom15;              // Offset: 1520 Size:    16 [unused]
//   float4 postFxBloom16;              // Offset: 1536 Size:    16 [unused]
//   float4 postFxBloom17;              // Offset: 1552 Size:    16 [unused]
//   float4 postFxBloom18;              // Offset: 1568 Size:    16 [unused]
//   float4 postFxBloom19;              // Offset: 1584 Size:    16 [unused]
//   float4 postFxBloom20;              // Offset: 1600 Size:    16 [unused]
//   float4 postFxBloom21;              // Offset: 1616 Size:    16 [unused]
//   float4 postFxBloom22;              // Offset: 1632 Size:    16 [unused]
//   float4 postFxBloom23;              // Offset: 1648 Size:    16 [unused]
//   float4 postFxBloom24;              // Offset: 1664 Size:    16 [unused]
//   float4 postFxBloom25;              // Offset: 1680 Size:    16 [unused]
//   float4 filterTap[8];               // Offset: 1696 Size:   128 [unused]
//   float4 postfxViewMatrix0;          // Offset: 1824 Size:    16 [unused]
//   float4 postfxViewMatrix1;          // Offset: 1840 Size:    16 [unused]
//   float4 postfxViewMatrix2;          // Offset: 1856 Size:    16 [unused]
//   float4 postfxViewMatrix3;          // Offset: 1872 Size:    16 [unused]
//   float4 postfxProjMatrix0;          // Offset: 1888 Size:    16 [unused]
//   float4 postfxProjMatrix1;          // Offset: 1904 Size:    16 [unused]
//   float4 postfxProjMatrix2;          // Offset: 1920 Size:    16 [unused]
//   float4 postfxProjMatrix3;          // Offset: 1936 Size:    16 [unused]
//   float4 postfxViewProjMatrix0;      // Offset: 1952 Size:    16 [unused]
//   float4 postfxViewProjMatrix1;      // Offset: 1968 Size:    16 [unused]
//   float4 postfxViewProjMatrix2;      // Offset: 1984 Size:    16 [unused]
//   float4 postfxViewProjMatrix3;      // Offset: 2000 Size:    16 [unused]
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16 [unused]
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16 [unused]
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16 [unused]
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4 [unused]
//   uint numRefProbes;                 // Offset:    4 Size:     4 [unused]
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224 [unused]
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48 [unused]
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4 [unused]
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4 [unused]
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4 [unused]
//   uint enableDitheredShadow;         // Offset:  932 Size:     4 [unused]
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for gLitFogVolumes
// {
//
//   struct CoreLitFogConstantsPack
//   {
//       
//       uint4 data[13];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   208
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// gTrilinearClampSampler            sampler      NA          NA             s0      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// downsampledDepth                  texture   float          2d             t0      1 
// gLitFogVolumes                    texture  struct         r/o             t1      1 
// volLightTexture                   texture  float3          3d             t2      1 
// adaptiveTransparencyDepth         texture  float4          2d             t4      1 
// adaptiveTransparencyTrans         texture  float4          2d             t5      1 
// downSampledDepthUV                texture    uint          2d             t6      1 
// oitPixelAlpha                     texture   float          2d             t7      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
// PostFxCBuffer                     cbuffer      NA          NA            cb8      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB8[11], immediateIndexed
dcl_constantbuffer CB1[45], immediateIndexed
dcl_constantbuffer CB2[32], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s2, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_structured t1, 208
dcl_resource_texture3d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (uint,uint,uint,uint) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_texture2darray (float,float,float,float) t20
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_temps 23
ftou r0.xy, v0.xyxx
mov r0.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r1.x, r0.xyww, t0.xyzw
lt r1.y, r1.x, l(0.000000)
discard_nz r1.y
div r1.yz, v0.xxyx, cb1[44].xxyx
mad r1.yz, r1.yyzy, l(0.000000, 2.000000, -2.000000, 0.000000), l(0.000000, -1.000000, 1.000000, 0.000000)
mul r2.xy, r1.yzyy, cb8[4].xyxx
mov r2.z, l(1.000000)
mul r1.xyz, r1.xxxx, r2.xyzx
mul r2.xyz, r1.yyyy, cb8[1].xyzx
mad r1.xyw, r1.xxxx, cb8[0].xyxz, r2.xyxz
mad r1.xyz, r1.zzzz, cb8[2].xyzx, r1.xywx
add r1.xyz, r1.xyzx, cb8[3].xyzx
add r1.xyz, r1.xyzx, -cb8[5].xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
sqrt r2.x, r1.w
max r2.y, cb1[41].x, l(1.000000)
min r2.x, r2.x, l(8000.000000)
ge r2.z, r2.y, r2.x
discard_nz r2.z
ld_indexable(texture2d)(uint,uint,uint,uint) r0.z, r0.xyzw, t6.yzxw
ushr r0.w, r0.z, l(2)
and r0.z, r0.z, l(3)
round_ni r2.zw, v0.xxxy
utof r3.xy, r0.wzww
mad r0.zw, r2.zzzw, cb8[7].xxxx, r3.xxxy
ftou r3.xy, r0.zwzz
rsq r0.z, r1.w
mul r1.xyz, r0.zzzz, r1.xyzx
and r0.zw, cb8[4].zzzw, l(0, 0, 0x0000ffff, 0x0000ffff)
mov r3.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r4.xyzw, r3.xyww, t4.xyzw
ld_indexable(texture2d)(float,float,float,float) r5.xyzw, r3.xyww, t5.zwxy
ld_indexable(texture2d)(float,float,float,float) r1.w, r3.xyzw, t7.yzwx
mul r3.xyzw, r4.xyzw, l(2000.000000, 2000.000000, 2000.000000, 2000.000000)
lt r1.w, l(0.900000), r1.w
movc r2.zw, r1.wwww, l(0,0,2000.000000,2000.000000), r3.xxxy
movc r3.xy, r1.wwww, l(1.000000,1.000000,0,0), r5.xyxx
mov r5.xy, r3.zwzz
movc r4.xyzw, r1.wwww, l(2000.000000,2000.000000,1.000000,1.000000), r5.xyzw
max r1.w, r2.x, r2.y
utof r0.w, r0.w
utof r0.xy, r0.xyxx
dp2 r3.z, r0.yxyy, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r3.z, r3.z
mul r3.z, r3.z, l(52.982918)
frc r3.z, r3.z
add r3.z, r3.z, l(-0.500000)
dp3 r3.w, cb2[17].xyzx, -r1.xyzx
max r3.w, r3.w, l(-1.000000)
min r3.w, r3.w, l(1.000000)
lt r5.x, l(0.000000), cb2[23].z
mul r5.y, cb2[23].z, cb2[23].y
resinfo_indexable(texture3d)(float,float,float,float)_uint r5.zw, l(0), t2.zwxy
add r0.xyw, r0.xyxw, l(0.500000, 0.500000, 0.000000, -1.000000)
utof r5.zw, r5.zzzw
div r6.x, l(16.000000), cb8[7].x
mul r5.zw, r5.zzzw, r6.xxxx
div r6.xy, r0.xyxx, r5.zwzz
mov r7.w, l(1.000000)
mov r8.w, l(1.000000)
mov r9.xyz, l(0,0,0,0)
mov r0.x, cb2[23].x
mov r0.y, l(0)
loop 
  uge r5.z, r0.y, r0.z
  breakc_nz r5.z
  ld_structured_indexable(structured_buffer, stride=208)(mixed,mixed,mixed,mixed) r10.xyzw, r0.y, l(132), t1.xyzw
  and r5.z, r10.w, l(21)
  if_nz r5.z
    ld_structured_indexable(structured_buffer, stride=208)(mixed,mixed,mixed,mixed) r11.xyzw, r0.y, l(24), t1.xyzw
    ld_structured_indexable(structured_buffer, stride=208)(mixed,mixed,mixed,mixed) r12.xyzw, r0.y, l(52), t1.xyzw
    ld_structured_indexable(structured_buffer, stride=208)(mixed,mixed,mixed,mixed) r5.w, r0.y, l(68), t1.xxxx
    ld_structured_indexable(structured_buffer, stride=208)(mixed,mixed,mixed,mixed) r13.xyzw, r0.y, l(84), t1.xyzw
    ld_structured_indexable(structured_buffer, stride=208)(mixed,mixed,mixed,mixed) r9.w, r0.y, l(100), t1.xxxx
    ld_structured_indexable(structured_buffer, stride=208)(mixed,mixed,mixed,mixed) r14.xyzw, r0.y, l(116), t1.xyzw
    dp3 r10.w, r1.xyzx, r11.xyzx
    max r11.x, |r10.w|, l(0.00000010)
    div r11.x, l(1.000000, 1.000000, 1.000000, 1.000000), r11.x
    mul r11.y, r11.x, r11.w
    mul r11.x, r11.x, r12.x
    lt r10.w, l(0.000000), -r10.w
    max r15.x, r11.y, l(-131072.000000)
    min r15.y, -r11.x, l(131072.000000)
    min r16.y, -r11.y, l(131072.000000)
    max r16.x, r11.x, l(-131072.000000)
    movc r11.xy, r10.wwww, r15.xyxx, r16.xyxx
    dp3 r10.w, r1.xyzx, r12.yzwy
    max r11.z, |r10.w|, l(0.00000010)
    div r11.z, l(1.000000, 1.000000, 1.000000, 1.000000), r11.z
    mul r5.w, r5.w, r11.z
    mul r11.z, r11.z, r13.x
    lt r10.w, l(0.000000), -r10.w
    max r12.x, r11.x, r5.w
    min r12.y, r11.y, -r11.z
    min r15.y, r11.y, -r5.w
    max r15.x, r11.x, r11.z
    movc r11.xy, r10.wwww, r12.xyxx, r15.xyxx
    dp3 r5.w, r1.xyzx, r13.yzwy
    max r10.w, |r5.w|, l(0.00000010)
    div r10.w, l(1.000000, 1.000000, 1.000000, 1.000000), r10.w
    mul r9.w, r9.w, r10.w
    mul r10.w, r10.w, r14.x
    lt r5.w, l(0.000000), -r5.w
    max r12.y, r11.x, r9.w
    min r12.z, r11.y, -r10.w
    min r11.z, r11.y, -r9.w
    max r11.y, r11.x, r10.w
    movc r11.yz, r5.wwww, r12.yyzy, r11.yyzy
    lt r5.w, r11.y, r11.z
    if_nz r5.w
      max r11.x, r11.y, l(0.000000)
      max r11.yw, r2.yyyy, r11.xxxz
      max r11.xz, r2.xxxx, r11.xxzx
      min r11.xz, r1.wwww, r11.xxzx
      min r11.xy, r11.xzxx, r11.ywyy
      add r5.w, -r11.x, r11.y
      ge r5.w, r5.w, l(1.000000)
      if_nz r5.w
        ld_structured_indexable(structured_buffer, stride=208)(mixed,mixed,mixed,mixed) r5.w, r0.y, l(196), t1.xxxx
        max r9.w, r10.x, r11.x
        add r10.w, -r9.w, r11.y
        min r5.w, r5.w, r10.w
        ge r10.w, r5.w, l(1.000000)
        if_nz r10.w
          ld_structured_indexable(structured_buffer, stride=208)(mixed,mixed,mixed,mixed) r11.xyzw, r0.y, l(148), t1.xyzw
          ld_structured_indexable(structured_buffer, stride=208)(mixed,mixed,mixed,mixed) r12.xyzw, r0.y, l(164), t1.zxyw
          ld_structured_indexable(structured_buffer, stride=208)(mixed,mixed,mixed,mixed) r13.xyzw, r0.y, l(180), t1.xyzw
          add r11.xyz, r10.zzzz, r11.xyzx
          add r5.w, r5.w, r9.w
          switch r5.z
            case l(16)
            add r5.z, r10.x, r9.w
            min r5.z, r5.w, r5.z
            add r10.w, -r5.z, r5.w
            div r14.x, r10.w, cb8[10].x
            min r14.x, r0.w, r14.x
            round_ni r14.x, r14.x
            add r14.x, r14.x, l(1.000000)
            ftou r14.x, r14.x
            utof r15.x, r14.x
            div r15.x, l(1.000000, 1.000000, 1.000000, 1.000000), r15.x
            mul r10.w, r10.w, r15.x
            mad r15.y, -r10.w, l(0.500000), r5.w
            mad r5.z, r10.w, l(0.500000), r5.z
            add r10.w, -r5.z, r15.y
            mul r15.y, r15.x, r10.w
            mul r15.z, r3.z, r15.y
            mad r5.z, r15.z, l(0.750000), r5.z
            mul r15.z, r14.y, l(100.000000)
            mov r12.x, r11.w
            mov r15.w, r5.z
            mov r16.xyzw, l(0,0,0,0)
            loop 
              uge r17.x, r16.w, r14.x
              breakc_nz r17.x
              mad r15.w, r10.w, r15.x, r15.w
              mad r17.x, r1.z, r15.w, r14.w
              mul r17.x, -r14.z, r17.x
              exp r17.x, r17.x
              min r17.x, r17.x, l(1.000000)
              mul r17.x, r14.y, r17.x
              min r17.x, r15.z, r17.x
              mul r17.yzw, r11.xxyz, r17.xxxx
              mul r17.yzw, r15.wwww, -r17.yyzw
              exp r17.yzw, r17.yyzw
              mul r17.yzw, r13.yyyy, r17.yyzw
              ge r18.xy, r2.zwzz, r15.wwww
              ge r18.zw, r4.xxxy, r15.wwww
              movc r18.w, r18.w, r3.x, r3.y
              movc r18.z, r18.z, r4.w, r18.w
              movc r18.y, r18.y, r4.z, r18.z
              movc r18.x, r18.x, l(1.000000), r18.y
              mul r17.xyz, r17.xxxx, r17.yzwy
              mul r17.xyz, r12.xyzx, r17.xyzx
              mad r16.xyz, r17.xyzx, r18.xxxx, r16.xyzx
              iadd r16.w, r16.w, l(1)
            endloop 
            mul r5.z, r10.z, r15.y
            mul r15.xyz, r5.zzzz, r16.xyzx
            mad r9.xyz, r15.xyzx, l(0.07957747, 0.07957747, 0.07957747, 0.000000), r9.xyzx
            break 
            case l(1)
            add r5.z, r10.x, r9.w
            min r5.z, r5.w, r5.z
            add r10.w, -r5.z, r5.w
            div r14.x, r10.w, cb8[10].x
            min r14.x, r0.w, r14.x
            round_ni r14.x, r14.x
            add r14.x, r14.x, l(1.000000)
            ftou r14.x, r14.x
            utof r15.x, r14.x
            div r15.x, l(1.000000, 1.000000, 1.000000, 1.000000), r15.x
            mul r10.w, r10.w, r15.x
            mad r15.y, -r10.w, l(0.500000), r5.w
            mad r5.z, r10.w, l(0.500000), r5.z
            add r10.w, -r5.z, r15.y
            mul r15.y, r15.x, r10.w
            mad r15.z, r10.y, r3.w, l(1.000000)
            max r15.z, r15.z, l(0.000001)
            min r15.z, r15.z, l(2.000000)
            mad r15.w, -r10.y, r10.y, l(1.000000)
            mul r15.w, r15.w, l(0.07957747)
            mul r15.z, r15.z, r15.z
            rcp r15.z, r15.z
            mul r15.z, r15.z, r15.w
            max r15.z, r15.z, l(0.000000)
            min r15.z, r15.z, l(10000.000000)
            mov r17.xy, r12.xwxx
            mov r17.z, r13.x
            mul r17.xyz, r15.zzzz, r17.xyzx
            mul r17.xyz, r13.wwww, r17.xyzx
            mul r17.xyz, r17.xyzx, l(12.566371, 12.566371, 12.566371, 0.000000)
            mul r15.z, r3.z, r15.y
            mad r5.z, r15.z, l(0.750000), r5.z
            mul r15.z, r14.y, l(100.000000)
            ult r15.w, l(0), r0.x
            and r15.w, r5.x, r15.w
            iadd r16.w, r0.x, l(-1)
            utof r18.z, r16.w
            mov r12.x, r11.w
            mov r19.xyz, l(0,0,0,0)
            mov r11.w, r5.z
            mov r16.w, l(0)
            loop 
              uge r17.w, r16.w, r14.x
              breakc_nz r17.w
              mad r11.w, r10.w, r15.x, r11.w
              mul r20.xyz, r1.xyzx, r11.wwww
              mad r17.w, r1.z, r11.w, r14.w
              mul r17.w, -r14.z, r17.w
              exp r17.w, r17.w
              min r17.w, r17.w, l(1.000000)
              mul r17.w, r14.y, r17.w
              min r17.w, r15.z, r17.w
              mul r21.xyz, r11.xyzx, r17.wwww
              mul r21.xyz, r11.wwww, -r21.xyzx
              exp r21.xyz, r21.xyzx
              mul r21.xyz, r13.yyyy, r21.xyzx
              ge r22.xy, r2.zwzz, r11.wwww
              ge r22.zw, r4.xxxy, r11.wwww
              movc r18.w, r22.w, r3.x, r3.y
              movc r18.w, r22.z, r4.w, r18.w
              movc r18.w, r22.y, r4.z, r18.w
              movc r18.w, r22.x, l(1.000000), r18.w
              mad r7.xyz, r1.xyzx, r11.wwww, cb8[5].xyzx
              dp3 r19.w, r7.xyzx, cb8[6].xyzx
              add r19.w, r19.w, cb8[6].w
              mul r19.w, r19.w, l(0.003000)
              max r19.w, r19.w, l(1.000000)
              min r19.w, r19.w, l(2.000000)
              ftou r19.w, r19.w
              mul r22.xyz, r20.yyyy, cb2[29].xyzx
              mad r20.xyw, r20.xxxx, cb2[28].xyxz, r22.xyxz
              mad r20.xyz, r20.zzzz, cb2[30].xyzx, r20.xywx
              add r20.xyz, r20.xyzx, cb2[31].xyzx
              add r20.xy, r20.xyxx, -cb2[r19.w + 20].xyxx
              mul r20.xy, r20.xyxx, cb2[r19.w + 20].zzzz
              mad r22.xy, r20.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
              add r20.x, r20.z, -cb2[17].w
              mad r20.x, -r20.x, l(0.00006104), l(0.999500)
              iadd r19.w, r19.w, cb2[26].y
              utof r22.z, r19.w
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.w, r22.xyzx, t13.xxxx, s13, r20.x
              mul r19.w, r18.w, r19.w
              if_nz r15.w
                dp4 r20.x, cb2[24].xyzw, r7.xyzw
                dp4 r7.x, cb2[25].xyzw, r7.xyzw
                frc r18.x, r20.x
                frc r18.y, r7.x
                sample_l_indexable(texture2darray)(float,float,float,float) r7.xyz, r18.xyzx, t20.xyzw, s2, l(0.000000)
                add r7.xyz, r7.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
                mad r7.xyz, r5.yyyy, r7.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                mul r20.xyz, r17.wwww, r21.xyzx
                mul r20.xyz, r19.wwww, r20.xyzx
                mul r7.xyz, r7.xyzx, r20.xyzx
              else 
                mul r20.xyz, r17.wwww, r21.xyzx
                mul r7.xyz, r19.wwww, r20.xyzx
              endif 
              mul r20.xyz, r17.wwww, r21.xyzx
              mul r20.xyz, r12.xyzx, r20.xyzx
              mul r18.xyw, r18.wwww, r20.xyxz
              mad r7.xyz, r7.xyzx, r17.xyzx, r18.xywx
              add r19.xyz, r7.xyzx, r19.xyzx
              iadd r16.w, r16.w, l(1)
            endloop 
            mul r5.z, r10.z, r15.y
            mul r7.xyz, r5.zzzz, r19.xyzx
            mad r9.xyz, r7.xyzx, l(0.07957747, 0.07957747, 0.07957747, 0.000000), r9.xyzx
            break 
            case l(4)
            add r5.z, r10.x, r9.w
            min r5.z, r5.w, r5.z
            add r7.x, -r5.z, r5.w
            div r7.y, r7.x, cb8[10].x
            min r7.y, r0.w, r7.y
            round_ni r7.y, r7.y
            add r7.y, r7.y, l(1.000000)
            ftou r7.y, r7.y
            utof r7.z, r7.y
            div r7.z, l(1.000000, 1.000000, 1.000000, 1.000000), r7.z
            mul r7.x, r7.z, r7.x
            mad r10.w, -r7.x, l(0.500000), r5.w
            mad r5.z, r7.x, l(0.500000), r5.z
            add r7.x, -r5.z, r10.w
            mul r10.w, r7.z, r7.x
            mul r11.w, r3.z, r10.w
            mad r5.z, r11.w, l(0.750000), r5.z
            mul r11.w, r14.y, l(100.000000)
            mov r15.xyz, l(0,0,0,0)
            mov r12.z, r5.z
            mov r14.x, l(0)
            loop 
              uge r15.w, r14.x, r7.y
              breakc_nz r15.w
              mad r12.z, r7.x, r7.z, r12.z
              mad r15.w, r1.z, r12.z, r14.w
              mul r15.w, -r14.z, r15.w
              exp r15.w, r15.w
              min r15.w, r15.w, l(1.000000)
              mul r15.w, r14.y, r15.w
              min r15.w, r11.w, r15.w
              mul r17.xyz, r11.xyzx, r15.wwww
              mul r17.xyz, r12.zzzz, -r17.xyzx
              exp r17.xyz, r17.xyzx
              mul r17.xyz, r13.yyyy, r17.xyzx
              ge r18.xy, r2.zwzz, r12.zzzz
              ge r18.zw, r4.xxxy, r12.zzzz
              movc r16.w, r18.w, r3.x, r3.y
              movc r16.w, r18.z, r4.w, r16.w
              movc r16.w, r18.y, r4.z, r16.w
              movc r16.w, r18.x, l(1.000000), r16.w
              mul_sat r6.z, r12.z, l(0.000500)
              sample_l_indexable(texture3d)(float,float,float,float) r18.xyz, r6.xyzx, t2.xyzw, s0, l(0.000000)
              mul r17.xyz, r17.xyzx, r18.xyzx
              mul r17.xyz, r15.wwww, r17.xyzx
              mul r17.xyz, r13.zzzz, r17.xyzx
              mad r15.xyz, r17.xyzx, r16.wwww, r15.xyzx
              iadd r14.x, r14.x, l(1)
            endloop 
            mul r5.z, r10.w, r10.z
            mul r7.xyz, r5.zzzz, r15.xyzx
            mad r9.xyz, r7.xyzx, l(0.07957747, 0.07957747, 0.07957747, 0.000000), r9.xyzx
            break 
            case l(5)
            add r5.z, r10.x, r9.w
            min r5.z, r5.w, r5.z
            add r6.z, -r5.z, r5.w
            div r7.x, r6.z, cb8[10].x
            min r7.x, r0.w, r7.x
            round_ni r7.x, r7.x
            add r7.x, r7.x, l(1.000000)
            ftou r7.x, r7.x
            utof r7.y, r7.x
            div r7.y, l(1.000000, 1.000000, 1.000000, 1.000000), r7.y
            mul r6.z, r6.z, r7.y
            mad r5.w, -r6.z, l(0.500000), r5.w
            mad r5.z, r6.z, l(0.500000), r5.z
            add r5.w, -r5.z, r5.w
            mul r6.z, r7.y, r5.w
            mad r7.z, r10.y, r3.w, l(1.000000)
            max r7.z, r7.z, l(0.000001)
            min r7.z, r7.z, l(2.000000)
            mad r9.w, -r10.y, r10.y, l(1.000000)
            mul r9.w, r9.w, l(0.07957747)
            mul r7.z, r7.z, r7.z
            rcp r7.z, r7.z
            mul r7.z, r7.z, r9.w
            max r7.z, r7.z, l(0.000000)
            min r7.z, r7.z, l(10000.000000)
            mov r12.y, r13.x
            mul r10.xyw, r7.zzzz, r12.xwxy
            mul r10.xyw, r13.wwww, r10.xyxw
            mul r10.xyw, r10.xyxw, l(12.566371, 12.566371, 0.000000, 12.566371)
            mul r7.z, r3.z, r6.z
            mad r5.z, r7.z, l(0.750000), r5.z
            mul r7.z, r14.y, l(100.000000)
            ult r9.w, l(0), r0.x
            and r9.w, r5.x, r9.w
            iadd r11.w, r0.x, l(-1)
            utof r12.z, r11.w
            mov r17.xyz, l(0,0,0,0)
            mov r11.w, r5.z
            mov r12.w, l(0)
            loop 
              uge r13.x, r12.w, r7.x
              breakc_nz r13.x
              mad r11.w, r5.w, r7.y, r11.w
              mul r18.xyz, r1.xyzx, r11.wwww
              mad r13.x, r1.z, r11.w, r14.w
              mul r13.x, r13.x, -r14.z
              exp r13.x, r13.x
              min r13.x, r13.x, l(1.000000)
              mul r13.x, r13.x, r14.y
              min r13.x, r7.z, r13.x
              mul r20.xyz, r11.xyzx, r13.xxxx
              mul r20.xyz, r11.wwww, -r20.xyzx
              exp r20.xyz, r20.xyzx
              mul r20.xyz, r13.yyyy, r20.xyzx
              ge r21.xy, r2.zwzz, r11.wwww
              ge r21.zw, r4.xxxy, r11.wwww
              movc r13.w, r21.w, r3.x, r3.y
              movc r13.w, r21.z, r4.w, r13.w
              movc r13.w, r21.y, r4.z, r13.w
              movc r13.w, r21.x, l(1.000000), r13.w
              mad r8.xyz, r1.xyzx, r11.wwww, cb8[5].xyzx
              dp3 r14.x, r8.xyzx, cb8[6].xyzx
              add r14.x, r14.x, cb8[6].w
              mul r14.x, r14.x, l(0.003000)
              max r14.x, r14.x, l(1.000000)
              min r14.x, r14.x, l(2.000000)
              ftou r14.x, r14.x
              mul r21.xyz, r18.yyyy, cb2[29].xyzx
              mad r18.xyw, r18.xxxx, cb2[28].xyxz, r21.xyxz
              mad r18.xyz, r18.zzzz, cb2[30].xyzx, r18.xywx
              add r18.xyz, r18.xyzx, cb2[31].xyzx
              add r18.xy, r18.xyxx, -cb2[r14.x + 20].xyxx
              mul r18.xy, r18.xyxx, cb2[r14.x + 20].zzzz
              mad r21.xy, r18.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
              add r15.w, r18.z, -cb2[17].w
              mad r15.w, -r15.w, l(0.00006104), l(0.999500)
              iadd r14.x, r14.x, cb2[26].y
              utof r21.z, r14.x
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r14.x, r21.xyzx, t13.xxxx, s13, r15.w
              mul r14.x, r13.w, r14.x
              if_nz r9.w
                dp4 r15.w, cb2[24].xyzw, r8.xyzw
                dp4 r8.x, cb2[25].xyzw, r8.xyzw
                frc r12.x, r15.w
                frc r12.y, r8.x
                sample_l_indexable(texture2darray)(float,float,float,float) r8.xyz, r12.xyzx, t20.xyzw, s2, l(0.000000)
                add r8.xyz, r8.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
                mad r8.xyz, r5.yyyy, r8.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                mul r18.xyz, r13.xxxx, r20.xyzx
                mul r18.xyz, r14.xxxx, r18.xyzx
                mul r8.xyz, r8.xyzx, r18.xyzx
              else 
                mul r18.xyz, r13.xxxx, r20.xyzx
                mul r8.xyz, r14.xxxx, r18.xyzx
              endif 
              mul_sat r6.w, r11.w, l(0.000500)
              sample_l_indexable(texture3d)(float,float,float,float) r18.xyz, r6.xywx, t2.xyzw, s0, l(0.000000)
              mul r18.xyz, r20.xyzx, r18.xyzx
              mul r18.xyz, r13.xxxx, r18.xyzx
              mul r18.xyz, r13.zzzz, r18.xyzx
              mul r18.xyz, r13.wwww, r18.xyzx
              mad r8.xyz, r8.xyzx, r10.xywx, r18.xyzx
              add r17.xyz, r8.xyzx, r17.xyzx
              iadd r12.w, r12.w, l(1)
            endloop 
            mul r5.z, r6.z, r10.z
            mul r7.xyz, r5.zzzz, r17.xyzx
            mad r9.xyz, r7.xyzx, l(0.07957747, 0.07957747, 0.07957747, 0.000000), r9.xyzx
            break 
            default 
            break 
          endswitch 
        endif 
      endif 
    endif 
  endif 
  iadd r0.y, r0.y, l(1)
endloop 
mov o0.xyz, r9.xyzx
mov o0.w, l(0)
ret 
// Approximately 468 instruction slots used
