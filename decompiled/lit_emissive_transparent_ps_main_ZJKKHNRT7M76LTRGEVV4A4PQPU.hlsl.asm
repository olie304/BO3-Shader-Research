//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:35:04 2021
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float3 colorTint;                  // Offset:  160 Size:    12
//   float baseNormalHeight;            // Offset:  172 Size:     4
//   float2 glossRange;                 // Offset:  176 Size:     8
//   float rowCount;                    // Offset:  184 Size:     4
//   float columnCount;                 // Offset:  188 Size:     4
//   float imageTime;                   // Offset:  192 Size:     4
//   float2 rotateUVs;                  // Offset:  196 Size:     8
//   float2 scrollUVs;                  // Offset:  208 Size:     8
//   float2 scaleUVs;                   // Offset:  216 Size:     8
//   float2 offsetUVs;                  // Offset:  224 Size:     8
//   float2 zoomUVs;                    // Offset:  232 Size:     8
//   float zoomRate;                    // Offset:  240 Size:     4
//   float layerDepth;                  // Offset:  244 Size:     4
//   bool clampU;                       // Offset:  248 Size:     4
//   bool clampV;                       // Offset:  252 Size:     4
//   float2 flickerSeed;                // Offset:  256 Size:     8
//   float flickerSpeed;                // Offset:  264 Size:     4
//   float2 flickerRange;               // Offset:  272 Size:     8
//   float flickerPower;                // Offset:  280 Size:     4
//   uint zFeatherComputeSprites;       // Offset:  284 Size:     4 [unused]
//   float hdrScale;                    // Offset:  288 Size:     4
//   float emissiveFalloffPower;        // Offset:  292 Size:     4
//   float3 emissiveTint1;              // Offset:  304 Size:    12
//   bool relativeHDR;                  // Offset:  316 Size:     4
//   bool invertFalloff;                // Offset:  320 Size:     4
//   float uvMotionToggle1;             // Offset:  324 Size:     4
//   float2 commonScale;                // Offset:  328 Size:     8
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16 [unused]
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4 [unused]
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for forwardDecalConstants
// {
//
//   struct CoreDecalConstantsPack
//   {
//       
//       uint4 data[8];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   128
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// colorSampler                      sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// normalSampler                     sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// lookupSampler                     sampler      NA          NA             s5      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// colorMap                          texture  float4          2d             t0      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// tintMask                          texture  float4          2d            t21      1 
// normalMap                         texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// flickerLookupMap                  texture  float4          2d            t24      1 
// emissiveMap                       texture  float4          2d            t25      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// visibleDecals                     texture    uint     2darray            t35      1 
// forwardDecalConstants             texture  struct         r/o            t36      1 
// materialTexBC7                    texture  float4     2darray            t42      1 
// materialTexBC3                    texture  float4     2darray            t43      1 
// materialTexBC7linear              texture  float4     2darray            t44      1 
// materialTexMask                   texture  float4     2darray            t45      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyz 
// COLOR                    0   xyz         1     NONE   float   xyz 
// COLOR                    1      w        1     NONE   float      w
// TEXCOORD                 0   xy          2     NONE   float   xy  
// UVOFFSETS                0   xyz         3     NONE   float   xyz 
// TEXCOORD                 4      w        3     NONE    uint       
// TEXCOORD                 1   xyz         4     NONE   float   xyz 
// TEXCOORD                 2   xyz         5     NONE   float   xyz 
// TEXCOORD                 3   xyz         6     NONE   float   xyz 
// OFFPOSITION              0   xyz         7     NONE   float   xyz 
// SV_IsFrontFace           0   x           8    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[21], immediateIndexed
dcl_constantbuffer CB1[93], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2darray (float,float,float,float) t31
dcl_resource_texture2darray (uint,uint,uint,uint) t35
dcl_resource_structured t36, 128
dcl_resource_texture2darray (float,float,float,float) t42
dcl_resource_texture2darray (float,float,float,float) t43
dcl_resource_texture2darray (float,float,float,float) t44
dcl_resource_texture2darray (float,float,float,float) t45
dcl_input_ps_siv linear noperspective v0.xyz, position
dcl_input_ps linear v1.xyz
dcl_input_ps linear v1.w
dcl_input_ps linear v2.xy
dcl_input_ps constant v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyz
dcl_input_ps_sgv constant v8.x, is_front_face
dcl_output o0.xyzw
dcl_temps 46
mul r0.xy, v2.xyxx, cb0[20].zwzz
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, r0.xyxx, t0.xyzw, s1
mul r0.z, r1.w, v1.w
lt r0.w, r0.z, l(0.500000)
discard_nz r0.w
sample_indexable(texture2d)(float,float,float,float) r0.w, r0.xyxx, t21.yzwx, s1
add r2.xyz, cb0[10].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r2.xyz, r0.wwww, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r1.xyz, r1.xyzx, r2.xyzx
mul r1.xyz, r1.xyzx, v1.xyzx
mul_sat r0.w, cb0[11].y, l(0.05882353)
sample_indexable(texture2d)(float,float,float,float) r2.xyz, r0.xyxx, t22.xyzw, s3
add r2.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.000000, 0.000000)
mad r2.xyz, cb0[10].wwww, r2.xyzx, l(0.500000, 0.500000, 0.000000, 0.000000)
mad r0.xy, r2.xyxx, l(1.99218750, 1.99218750, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r0.xyxx, r0.xyxx
add r1.w, -r1.w, l(1.000000)
max r1.w, r1.w, l(0.000000)
sqrt r1.w, r1.w
mul r2.x, r2.z, r2.z
mul r2.x, r2.x, l(0.33333334)
min r2.x, r2.x, l(1.000000)
movc r2.y, v8.x, l(1.000000), l(-1.000000)
dp3 r2.z, v4.xyzx, v4.xyzx
rsq r2.z, r2.z
mul r3.xyz, r2.zzzz, v4.xyzx
mul r3.xyz, r2.yyyy, r3.xyzx
dp3 r2.z, v5.xyzx, v5.xyzx
rsq r2.z, r2.z
mul r4.xyz, r2.zzzz, v5.xyzx
mul r4.xyz, r2.yyyy, r4.xyzx
dp3 r2.z, v6.xyzx, v6.xyzx
rsq r2.z, r2.z
mul r5.xyz, r2.zzzz, v6.xyzx
mul r5.xyz, r2.yyyy, r5.xyzx
mul r0.w, r0.w, l(-17.000000)
exp r0.w, r0.w
add r0.w, r0.w, r2.x
log r0.w, r0.w
mul r0.w, r0.w, l(-0.05882353)
mul r2.xzw, r0.yyyy, r5.xxyz
mad r2.xzw, r4.xxyz, r0.xxxx, r2.xxzw
mad r2.xzw, r3.xxyz, r1.wwww, r2.xxzw
dp3 r0.x, r2.xzwx, r2.xzwx
rsq r0.x, r0.x
mul r2.xzw, r0.xxxx, r2.xxzw
ge r0.x, v0.z, l(0.984375)
mul r0.y, v0.z, l(1.01587307)
mad r1.w, v0.z, l(64.000000), l(-63.000000)
movc r0.x, r0.x, r1.w, r0.y
max r0.xw, r0.xxxw, l(0.00000001, 0.000000, 0.000000, 0.000000)
rcp r0.x, r0.x
ftou r4.xy, v0.yxyy
deriv_rtx_coarse r5.xyz, v7.xyzx
deriv_rty_coarse r6.xyz, v7.xyzx
iadd r0.y, cb2[0].y, cb2[0].x
add r7.xyz, v7.xyzx, cb1[24].xyzx
mul r0.x, r0.x, l(0.00781250)
min r0.x, r0.x, l(15.000000)
ftou r0.x, r0.x
ushr r8.xy, r4.yxyy, l(6, 6, 0, 0)
ishl r8.z, r0.x, l(4)
and r0.x, cb2[57].z, l(-32)
iadd r1.w, -r0.x, cb2[57].z
mov r9.xy, l(0,0,0,0)
mov r10.w, l(0)
mov r7.w, l(1.000000)
mov r11.xyz, l(0,0,0,0)
mov r12.xyz, l(0,0,0,0)
mov r13.xyz, l(0,0,0,0)
mov r3.w, l(0)
mov r4.zw, l(0,0,0,0)
loop 
  uge r5.w, r4.w, cb2[57].z
  breakc_nz r5.w
  ushr r9.z, r4.w, l(5)
  iadd r10.xyz, r8.xyzx, r9.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r5.w, r10.xyzw, t35.yzwx
  ieq r6.w, r0.x, r4.w
  ubfe r8.w, r1.w, l(0), r5.w
  movc r5.w, r6.w, r8.w, r5.w
  iadd r6.w, r0.y, r4.w
  mov r10.xyz, r11.xyzx
  mov r14.xyz, r12.xyzx
  mov r15.xyz, r13.xyzx
  mov r8.w, r3.w
  mov r9.z, r4.z
  mov r9.w, r5.w
  loop 
    breakc_z r9.w
    firstbit_lo r11.w, r9.w
    ishl r12.w, l(1), r11.w
    and r13.w, r9.w, r12.w
    if_nz r13.w
      xor r9.w, r9.w, r12.w
      iadd r12.w, r6.w, r11.w
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r16.xyzw, r12.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r17.xy, r12.w, l(16), t11.xyxx
      add r16.xyz, r16.xyzx, -v7.xyzx
      mov r17.z, r16.w
      lt r16.xyz, |r16.xyzx|, r17.zxyz
      and r12.w, r16.y, r16.x
      and r12.w, r16.z, r12.w
      if_nz r12.w
        iadd r11.w, r4.w, r11.w
        ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r16.xyz, r11.w, l(0), t36.xyzx
        ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r17.xyz, r11.w, l(16), t36.xyzx
        ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r18.xyz, r11.w, l(32), t36.xyzx
        mov r19.x, r16.x
        mov r19.y, r17.x
        mov r19.z, r18.x
        dp3 r12.w, r19.xyzx, r19.xyzx
        rsq r12.w, r12.w
        mul r20.xyz, r12.wwww, r19.xyzx
        dp3 r12.w, r20.xyzx, v4.xyzx
        ge r12.w, r12.w, l(0.500000)
        if_nz r12.w
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r21.xyw, r11.w, l(48), t36.xyxz
          mov r19.w, r21.x
          dp4 r19.x, r7.xyzw, r19.xyzw
          mov r22.x, r16.y
          mov r22.y, r17.y
          mov r22.z, r18.y
          mov r22.w, r21.y
          dp4 r19.y, r7.xyzw, r22.xyzw
          mov r21.x, r16.z
          mov r21.y, r17.z
          mov r21.z, r18.z
          dp4 r19.z, r7.xyzw, r21.xyzw
          lt r16.xyz, |r19.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
          and r12.w, r16.y, r16.x
          and r12.w, r16.z, r12.w
          if_nz r12.w
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r16.xyzw, r11.w, l(64), t36.xyzw
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r17.xyzw, r11.w, l(80), t36.xyzw
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r18.xyzw, r11.w, l(96), t36.xyzw
            dp3 r23.x, r5.xyzx, r22.xyzx
            dp3 r23.y, r5.xyzx, r21.xyzx
            dp3 r24.x, r6.xyzx, r22.xyzx
            dp3 r24.y, r6.xyzx, r21.xyzx
            mad r19.xy, r19.yzyy, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
            mul r23.xyz, r23.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
            mul r24.xyz, r24.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
            and r19.zw, r17.yyyz, l(0, 0, 0x0000ffff, 0x0000ffff)
            if_nz r19.z
              ubfe r12.w, l(4), l(24), r17.w
              ishl r12.w, l(1), r12.w
              ushr r13.w, r17.w, l(28)
              ishl r13.w, l(1), r13.w
              ieq r14.w, r19.z, l(4)
              if_nz r14.w
                and r14.w, r17.w, l(4095)
                ubfe r15.w, l(12), l(12), r17.w
                and r20.w, r18.w, l(1023)
                utof r25.xz, r12.wwww
                utof r25.y, r13.w
                mad r26.xy, r19.xyxx, r25.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                add r26.zw, r25.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                min r26.xy, r26.zwzz, r26.xyxx
                utof r27.x, r14.w
                utof r27.y, r15.w
                add r26.xy, r26.xyxx, r27.xyxx
                mul r26.xy, r26.xyxx, cb1[83].xyxx
                utof r26.z, r20.w
                mul r27.xyz, r23.zyzz, cb1[83].xyxx
                mul r27.xyz, r25.xyzx, r27.xyzx
                mul r28.xyz, r24.zyzz, cb1[83].xyxx
                mul r25.xyz, r25.xyzx, r28.xyzx
                sample_d_indexable(texture2darray)(float,float,float,float) r25.xyzw, r26.xyzx, t42.xyzw, s4, r27.xyzx, r25.xyzx
              else 
                ieq r14.w, r19.z, l(1)
                if_nz r14.w
                  and r14.w, r17.w, l(4095)
                  ubfe r15.w, l(12), l(12), r17.w
                  and r17.w, r18.w, l(1023)
                  utof r26.xz, r12.wwww
                  utof r26.y, r13.w
                  mad r27.xy, r19.xyxx, r26.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r27.zw, r26.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r27.xy, r27.zwzz, r27.xyxx
                  utof r28.x, r14.w
                  utof r28.y, r15.w
                  add r27.xy, r27.xyxx, r28.xyxx
                  mul r27.xy, r27.xyxx, cb1[83].zwzz
                  utof r27.z, r17.w
                  mul r28.xyz, r23.zyzz, cb1[83].zwzz
                  mul r28.xyz, r26.xyzx, r28.xyzx
                  mul r29.xyz, r24.zyzz, cb1[83].zwzz
                  mul r26.xyz, r26.xyzx, r29.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r25.xyzw, r27.xyzx, t43.xyzw, s4, r28.xyzx, r26.xyzx
                else 
                  mov r25.xyzw, l(1.000000,1.000000,1.000000,1.000000)
                endif 
              endif 
              mul r16.xyz, r16.xyzx, r25.xyzx
              mul r12.w, r16.w, r25.w
            else 
              mov r16.xyz, l(0,0,0,0)
              mov r12.w, l(0)
            endif 
            ne r13.w, r17.x, l(1.000000)
            add r14.w, r16.w, r12.w
            mad_sat r14.w, r14.w, r17.x, -r17.x
            movc r12.w, r13.w, r14.w, r12.w
            if_nz r19.w
              ubfe r13.w, l(4), l(24), r18.y
              ishl r13.w, l(1), r13.w
              ushr r14.w, r18.y, l(28)
              ishl r14.w, l(1), r14.w
              ieq r15.w, r19.w, l(2)
              if_nz r15.w
                and r15.w, r18.y, l(4095)
                ubfe r17.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r18.yyyw
                utof r25.xz, r13.wwww
                utof r25.y, r14.w
                mad r26.xy, r19.xyxx, r25.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                add r26.zw, r25.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                min r26.xy, r26.zwzz, r26.xyxx
                utof r27.x, r15.w
                utof r27.y, r17.x
                add r26.xy, r26.xyxx, r27.xyxx
                mul r26.xy, r26.xyxx, cb1[84].xyxx
                utof r26.z, r17.w
                mul r27.xyz, r23.zyzz, cb1[84].xyxx
                mul r27.xyz, r25.xyzx, r27.xyzx
                mul r28.xyz, r24.zyzz, cb1[84].xyxx
                mul r25.xyz, r25.xyzx, r28.xyzx
                sample_d_indexable(texture2darray)(float,float,float,float) r15.w, r26.xyzx, t45.yzwx, s4, r27.xyzx, r25.xyzx
              else 
                ieq r16.w, r19.w, l(4)
                if_nz r16.w
                  and r16.w, r18.y, l(4095)
                  ubfe r17.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r18.yyyw
                  utof r25.xz, r13.wwww
                  utof r25.y, r14.w
                  mad r19.zw, r19.xxxy, r25.zzzy, l(0.000000, 0.000000, 0.500000, 0.500000)
                  add r26.xy, r25.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r19.zw, r19.zzzw, r26.xxxy
                  utof r26.x, r16.w
                  utof r26.yz, r17.xxwx
                  add r19.zw, r19.zzzw, r26.xxxy
                  mul r26.xy, r19.zwzz, cb1[83].xyxx
                  mul r27.xyz, r23.zyzz, cb1[83].xyxx
                  mul r27.xyz, r25.xyzx, r27.xyzx
                  mul r28.xyz, r24.zyzz, cb1[83].xyxx
                  mul r25.xyz, r25.xyzx, r28.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r15.w, r26.xyzx, t42.yzwx, s4, r27.xyzx, r25.xyzx
                else 
                  and r16.w, r18.y, l(4095)
                  ubfe r17.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r18.yyyw
                  utof r25.xz, r13.wwww
                  utof r25.y, r14.w
                  mad r19.zw, r19.xxxy, r25.zzzy, l(0.000000, 0.000000, 0.500000, 0.500000)
                  add r26.xy, r25.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r19.zw, r19.zzzw, r26.xxxy
                  utof r26.x, r16.w
                  utof r26.yz, r17.xxwx
                  add r19.zw, r19.zzzw, r26.xxxy
                  mul r26.xy, r19.zwzz, cb1[83].zwzz
                  mul r27.xyz, r23.zyzz, cb1[83].zwzz
                  mul r27.xyz, r25.xyzx, r27.xyzx
                  mul r28.xyz, r24.zyzz, cb1[83].zwzz
                  mul r25.xyz, r25.xyzx, r28.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r15.w, r26.xyzx, t43.yzwx, s4, r27.xyzx, r25.xyzx
                endif 
              endif 
              mad r25.xyz, r15.wwww, l(0.960000, 0.960000, 0.960000, 0.000000), l(0.040000, 0.040000, 0.040000, 0.000000)
              add_sat r13.w, -r15.w, l(1.000000)
              mul r16.xyz, r13.wwww, r16.xyzx
            else 
              mov r25.xyz, l(0.040000,0.040000,0.040000,0)
            endif 
            ushr r17.xy, r17.zyzz, l(16, 16, 0, 0)
            if_nz r17.x
              ieq r13.w, r17.x, l(2)
              if_nz r13.w
                ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r11.w, r11.w, l(112), t36.xxxx
                ubfe r17.zw, l(0, 0, 4, 12), l(0, 0, 24, 12), r18.zzzz
                ishl r13.w, l(1), r17.z
                ushr r14.w, r18.z, l(28)
                ishl r14.w, l(1), r14.w
                and r15.w, r18.z, l(4095)
                and r11.w, r11.w, l(1023)
                utof r26.xz, r13.wwww
                utof r26.y, r14.w
                mad r18.yz, r19.xxyx, r26.zzyz, l(0.000000, 0.500000, 0.500000, 0.000000)
                add r19.zw, r26.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                min r18.yz, r18.yyzy, r19.zzwz
                utof r27.x, r15.w
                utof r27.y, r17.w
                add r17.zw, r18.yyyz, r27.xxxy
                mul r27.xy, r17.zwzz, cb1[84].xyxx
                utof r27.z, r11.w
                mul r28.xyz, r23.zyzz, cb1[84].xyxx
                mul r28.xyz, r26.xyzx, r28.xyzx
                mul r29.xyz, r24.zyzz, cb1[84].xyxx
                mul r26.xyz, r26.xyzx, r29.xyzx
                sample_d_indexable(texture2darray)(float,float,float,float) r11.w, r27.xyzx, t45.yzwx, s4, r28.xyzx, r26.xyzx
              else 
                ieq r13.w, r17.x, l(6)
                movc r11.w, r13.w, l(0), l(1.000000)
              endif 
            else 
              mov r11.w, l(1.000000)
            endif 
            mul_sat r11.w, r11.w, l(0.76470590)
            if_nz r17.y
              ieq r13.w, r17.y, l(3)
              if_nz r13.w
                ubfe r17.xyz, l(4, 12, 10, 0), l(24, 12, 10, 0), r18.xxwx
                ishl r13.w, l(1), r17.x
                ushr r14.w, r18.x, l(28)
                ishl r14.w, l(1), r14.w
                and r15.w, r18.x, l(4095)
                utof r18.xz, r13.wwww
                utof r18.y, r14.w
                mad r17.xw, r19.xxxy, r18.xxxy, l(0.500000, 0.000000, 0.000000, 0.500000)
                add r19.xy, r18.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                min r17.xw, r17.xxxw, r19.xxxy
                utof r19.x, r15.w
                utof r19.yz, r17.yyzy
                add r17.xy, r17.xwxx, r19.xyxx
                mul r19.xy, r17.xyxx, cb1[84].zwzz
                mul r17.xyz, r23.xyzx, cb1[84].zwzz
                mul r17.xyz, r18.xyzx, r17.xyzx
                mul r23.xyz, r24.xyzx, cb1[84].zwzz
                mul r18.xyz, r18.xyzx, r23.xyzx
                sample_d_indexable(texture2darray)(float,float,float,float) r17.xyz, r19.xyzx, t44.xyzw, s4, r17.xyzx, r18.xyzx
              else 
                mov r17.xyz, l(0.500000,0.500000,1.000000,0)
              endif 
              mad r17.xy, r17.xyxx, l(1.99218750, 1.99218750, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
              dp2 r13.w, r17.xyxx, r17.xyxx
              add r13.w, -r13.w, l(1.000000)
              max r13.w, r13.w, l(0.000000)
              sqrt r13.w, r13.w
              mul r14.w, r17.z, r17.z
              mul r14.w, r14.w, l(0.33333334)
              min r14.w, r14.w, l(1.000000)
              dp3 r15.w, r22.xyzx, r22.xyzx
              rsq r15.w, r15.w
              mul r18.xyz, r15.wwww, r22.xyzx
              dp3 r15.w, -r21.xyzx, -r21.xyzx
              rsq r15.w, r15.w
              mul r19.xyz, r15.wwww, -r21.xyzx
              mul r20.xyz, r2.yyyy, r20.xyzx
              mul r18.xyz, r2.yyyy, r18.xyzx
              mul r19.xyz, r2.yyyy, r19.xyzx
              mul r15.w, r11.w, l(-17.000000)
              exp r15.w, r15.w
              add r14.w, r14.w, r15.w
              log r14.w, r14.w
              mul r14.w, r14.w, l(-0.05882353)
              max r11.w, r14.w, l(0.000000)
              mul r17.yzw, r17.yyyy, r19.xxyz
              mad r17.xyz, r18.xyzx, r17.xxxx, r17.yzwy
              mad r17.xyz, r20.xyzx, r13.wwww, r17.xyzx
              dp3 r13.w, r17.xyzx, r17.xyzx
              rsq r13.w, r13.w
              mul r17.xyz, r13.wwww, r17.xyzx
              add r13.w, -r12.w, l(1.000000)
              mul r18.xyz, r13.wwww, r14.xyzx
              mad r14.xyz, r17.xyzx, r12.wwww, r18.xyzx
            endif 
            add r13.w, -r12.w, l(1.000000)
            mul r17.xyz, r10.xyzx, r13.wwww
            mad r10.xyz, r16.xyzx, r12.wwww, r17.xyzx
            mul r16.xyz, r13.wwww, r15.xyzx
            mad r15.xyz, r25.xyzx, r12.wwww, r16.xyzx
            mad r8.w, r8.w, r13.w, r12.w
            mul r13.w, r9.z, r13.w
            mad r9.z, r11.w, r12.w, r13.w
          endif 
        endif 
      endif 
    endif 
  endloop 
  mov r11.xyz, r10.xyzx
  mov r12.xyz, r14.xyzx
  mov r13.xyz, r15.xyzx
  mov r3.w, r8.w
  mov r4.z, r9.z
  iadd r4.w, r4.w, l(32)
endloop 
mov_sat r3.w, r3.w
add r0.x, -r3.w, l(1.000000)
mad r1.xyz, r1.xyzx, r0.xxxx, r11.xyzx
mad o0.w, r0.z, r0.x, r3.w
mad r2.xyz, r2.xzwx, r0.xxxx, r12.xyzx
dp3 r0.y, r2.xyzx, r2.xyzx
rsq r0.y, r0.y
mul r2.xyz, r0.yyyy, r2.xyzx
mad r5.y, r0.w, r0.x, r4.z
mad r0.yzw, r0.xxxx, l(0.000000, 0.040000, 0.040000, 0.040000), r13.xxyz
lt r1.w, l(0.500000), cb0[20].y
if_nz r1.w
  mul r1.w, cb0[11].w, cb0[11].z
  mul r3.w, r1.w, cb0[12].x
  mul r4.z, r3.w, cb1[69].w
  ge r4.z, r4.z, -r4.z
  movc r4.z, r4.z, r3.w, -r3.w
  div r4.w, l(1.000000, 1.000000, 1.000000, 1.000000), r4.z
  mul r4.w, r4.w, cb1[69].w
  frc r4.w, r4.w
  mul r4.z, r4.w, r4.z
  div r3.w, r4.z, r3.w
  mul r1.w, r1.w, r3.w
  round_ne r1.w, r1.w
  div r3.w, r1.w, cb0[11].w
  mul r4.z, r1.w, cb0[11].w
  ge r4.z, r4.z, -r4.z
  movc r4.z, r4.z, cb0[11].w, -cb0[11].w
  div r4.w, l(1.000000, 1.000000, 1.000000, 1.000000), r4.z
  mul r1.w, r1.w, r4.w
  frc r1.w, r1.w
  mul r1.w, r1.w, r4.z
  round_z r1.w, r1.w
  add r1.w, r1.w, v2.x
  div r6.x, r1.w, cb0[11].w
  round_z r1.w, r3.w
  add r1.w, r1.w, v2.y
  div r6.y, r1.w, cb0[11].z
else 
  dp3 r1.w, -v7.xyzx, -v7.xyzx
  rsq r1.w, r1.w
  mul r9.xyz, r1.wwww, -v7.xyzx
  dp3 r10.x, r9.xyzx, v5.xyzx
  dp3 r10.y, r9.xyzx, v6.xyzx
  dp3 r1.w, r9.xyzx, v4.xyzx
  lt r3.w, l(0.000000), r1.w
  div r4.zw, -r10.xxxy, r1.wwww
  and r4.zw, r3.wwww, r4.zzzw
  add r5.zw, v2.xxxy, l(0.000000, 0.000000, -0.500000, -0.500000)
  add r1.w, cb0[15].y, l(0.000010)
  mul r4.zw, r1.wwww, r4.zzzw
  mul r4.zw, r4.zzzw, cb0[13].zzzw
  mad r4.zw, r5.zzzw, cb0[13].zzzw, r4.zzzw
  mad r4.zw, cb0[14].xxxy, cb0[13].zzzw, r4.zzzw
  mad r1.w, cb0[12].z, cb1[69].w, l(1.000000)
  mul r1.w, r1.w, cb0[12].y
  mul r1.w, r1.w, l(0.01745329)
  sincos r9.x, r10.x, r1.w
  mov r10.y, r10.x
  mov r10.z, r9.x
  dp2 r11.x, r10.yzyy, r4.zwzz
  mov r10.x, -r9.x
  dp2 r11.y, r10.xyxx, r4.zwzz
  mul r4.zw, cb0[13].xxxy, cb1[69].wwww
  mad r4.zw, r4.zzzw, cb0[13].zzzw, r11.xxxy
  mul r1.w, cb0[15].x, cb1[69].w
  sincos null, r1.w, r1.w
  mad r1.w, r1.w, l(0.500000), l(0.500000)
  add r1.w, -r1.w, l(1.000000)
  add r3.w, -cb0[14].z, cb0[14].w
  mad r1.w, r1.w, r3.w, cb0[14].z
  div r4.zw, r4.zzzw, r1.wwww
  add r4.zw, r4.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
  mov_sat r5.zw, r4.zzzw
  movc r6.xy, cb0[15].zwzz, r5.zwzz, r4.zwzz
endif 
dp3 r1.w, -v7.xyzx, -v7.xyzx
rsq r1.w, r1.w
mul r9.xyz, r1.wwww, -v7.xyzx
dp3_sat r3.x, r9.xyzx, r3.xyzx
sample_indexable(texture2d)(float,float,float,float) r6.xyzw, r6.xyxx, t25.xyzw, s1
mul r3.yzw, r6.xxyz, cb0[19].xxyz
log r4.z, r3.x
mul r4.z, r4.z, cb0[18].y
exp r4.z, r4.z
add r3.x, -r3.x, l(1.000000)
log r3.x, r3.x
mul r3.x, r3.x, cb0[18].y
exp r3.x, r3.x
movc r3.x, cb0[20].x, r3.x, r4.z
eq r4.z, cb0[18].y, l(0.000000)
movc r3.x, r4.z, l(1.000000), r3.x
mul r4.z, r6.w, cb0[18].x
mul r3.x, r3.x, r4.z
mul r0.x, r0.x, r3.x
mul r3.xyz, r0.xxxx, r3.yzwy
add r0.x, v3.y, v3.x
add r0.x, r0.x, v3.z
add r0.x, r0.x, cb0[16].y
frc r0.x, r0.x
mad r6.y, cb1[69].w, cb0[16].z, r0.x
mov r6.x, cb0[16].x
sample_l_indexable(texture2d)(float,float,float,float) r0.x, r6.xyxx, t24.xyzw, s5, l(0.000000)
log r0.x, |r0.x|
mul r0.x, r0.x, cb0[17].z
exp r0.x, r0.x
add r3.w, -cb0[17].x, cb0[17].y
mad r0.x, r0.x, r3.w, cb0[17].x
mul r3.xyz, r0.xxxx, r3.xyzx
ine r0.x, cb1[92].x, l(0)
utof r4.xy, r4.xyxx
dp2 r3.w, r4.yxyy, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r3.w, r3.w
mul r3.w, r3.w, l(52.982918)
frc r3.w, r3.w
mad r3.w, r3.w, l(6.28318548), cb1[70].w
sincos r6.x, r10.x, r3.w
dp2 r3.w, r4.xyxx, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r3.w, r3.w
mul r3.w, r3.w, l(52.982918)
frc r3.w, r3.w
mad r3.w, r3.w, l(6.28318548), cb1[70].w
sincos r4.x, r11.x, r3.w
dp3_sat r5.x, r2.xyzx, r9.xyzx
dp3 r3.w, -r9.xyzx, r2.xyzx
add r3.w, r3.w, r3.w
mad r12.xyz, r2.xyzx, -r3.wwww, -r9.xyzx
mul r3.w, r5.y, l(17.000000)
exp r3.w, r3.w
add r3.w, r3.w, l(2.000000)
div r3.w, l(2.000000), r3.w
sqrt r4.y, r3.w
add r4.z, -r5.y, l(1.000000)
mul r4.w, r4.z, l(5.000000)
mad r5.z, r4.z, l(5.000000), l(-2.500000)
mul_sat r5.z, r5.z, l(0.400000)
mul r5.z, r5.z, l(100.000000)
mad r6.zw, -r4.zzzz, l(0.000000, 0.000000, 10.000000, 5.000000), l(0.000000, 0.000000, 6.857410, 7.085000)
exp r5.w, r6.z
mul r5.w, r5.w, r5.x
mul r5.w, r5.w, l(9.136810)
mul r6.z, r4.z, r4.w
mad r6.z, -r6.z, l(2.015905), r6.w
exp r6.z, r6.z
mul r6.z, r5.x, r6.z
mul r6.z, r6.z, l(9.708090)
max r5.w, r5.w, r6.z
max r5.w, r5.w, l(1.268160)
iadd r6.z, cb2[0].y, -cb2[58].x
and r6.w, r6.z, l(-32)
iadd r8.w, -r6.w, r6.z
and r9.w, cb2[0].y, l(-32)
iadd r10.w, -r9.w, cb2[0].y
mov r13.xy, l(0,0,0,0)
mov r14.w, l(0)
mov r15.yz, l(0,0,1.000000,0)
mov r16.xy, l(0,0,0,0)
mov r17.x, l(1.000000)
mov r18.xy, l(0,0,0,0)
mov r19.xy, l(0,0,0,0)
mov r20.xyzw, l(0,0,0,0)
mov r21.yzw, l(0,0,0,0)
mov r11.y, r6.w
loop 
  uge r11.z, r11.y, cb2[0].y
  breakc_nz r11.z
  ushr r13.z, r11.y, l(5)
  iadd r14.xyz, r8.xyzx, r13.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r11.z, r14.xyzw, t7.yzxw
  ieq r11.w, r6.w, r11.y
  bfi r13.z, r8.w, l(0), l(0), r11.z
  movc r11.z, r11.w, r13.z, r11.z
  ieq r11.w, r9.w, r11.y
  ubfe r13.z, r10.w, l(0), r11.z
  movc r11.z, r11.w, r13.z, r11.z
  iadd r11.w, r11.y, cb2[0].x
  mov r22.xyzw, r20.xyzw
  mov r23.xyz, r21.yzwy
  mov r13.z, r11.z
  loop 
    breakc_z r13.z
    firstbit_lo r13.w, r13.z
    ishl r14.x, l(1), r13.w
    and r14.y, r13.z, r14.x
    if_nz r14.y
      xor r13.z, r13.z, r14.x
      iadd r14.x, r11.w, r13.w
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r24.xyzw, r14.x, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r14.xy, r14.x, l(16), t11.xyxx
      add r24.xyz, r24.xyzx, -v7.xyzx
      mov r14.z, r24.w
      lt r14.xyz, |r24.xyzx|, r14.zxyz
      and r14.x, r14.y, r14.x
      and r14.x, r14.z, r14.x
      if_nz r14.x
        iadd r13.w, r11.y, r13.w
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r13.w, l(0), t15.wxyz
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r14.xy, r13.w, l(96), t15.xyxx
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r13.w, l(116), t15.zwxy
        add r26.xyz, -r24.yzwy, v7.xyzx
        and r14.z, r25.w, l(0x0000ffff)
        ubfe r15.w, l(6), l(25), r25.w
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r14.z, l(0), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r14.z, l(16), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r14.z, l(32), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r14.z, l(48), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r14.z, l(64), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r14.z, l(80), t16.xyzw
        dp3 r16.w, r27.xyzx, r26.xyzx
        add_sat r16.w, r27.w, r16.w
        dp3 r17.z, r28.xyzx, r26.xyzx
        add_sat r17.z, r28.w, r17.z
        mul r16.w, r16.w, r17.z
        dp3 r17.z, r29.xyzx, r26.xyzx
        add_sat r17.z, r29.w, r17.z
        mul r16.w, r16.w, r17.z
        dp3 r17.z, r30.xyzx, r26.xyzx
        add_sat r17.z, r30.w, r17.z
        mul r16.w, r16.w, r17.z
        dp3 r17.z, r31.xyzx, r26.xyzx
        add_sat r17.z, r31.w, r17.z
        mul r16.w, r16.w, r17.z
        dp3 r17.z, r32.xyzx, r26.xyzx
        add_sat r17.z, r32.w, r17.z
        mul r15.x, r16.w, r17.z
        and r16.w, r14.x, l(1)
        movc r17.zw, r16.wwww, r15.xxxy, r15.zzzx
        mov r15.x, r14.x
        mov r27.xy, r17.zwzz
        mov r16.w, l(1)
        loop 
          ige r18.w, r16.w, r15.w
          breakc_nz r18.w
          iadd r18.w, r14.z, r16.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r18.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r18.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r18.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r18.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r18.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r18.w, l(80), t16.xyzw
          dp3 r18.w, r28.xyzx, r26.xyzx
          add_sat r18.w, r28.w, r18.w
          mul r18.w, r18.w, r27.x
          dp3 r19.w, r29.xyzx, r26.xyzx
          add_sat r19.w, r29.w, r19.w
          mul r18.w, r18.w, r19.w
          dp3 r19.w, r30.xyzx, r26.xyzx
          add_sat r19.w, r30.w, r19.w
          mul r18.w, r18.w, r19.w
          dp3 r19.w, r31.xyzx, r26.xyzx
          add_sat r19.w, r31.w, r19.w
          mul r18.w, r18.w, r19.w
          dp3 r19.w, r32.xyzx, r26.xyzx
          add_sat r19.w, r32.w, r19.w
          mul r18.w, r18.w, r19.w
          dp3 r19.w, r33.xyzx, r26.xyzx
          add_sat r19.w, r33.w, r19.w
          mul r27.x, r18.w, r19.w
          ushr r24.w, r15.x, l(2)
          ubfe r26.w, l(1), l(2), r15.x
          and r27.z, r24.w, l(2)
          max r27.w, r27.x, r27.y
          mad r18.w, -r18.w, r19.w, l(1.000000)
          mul r18.w, r18.w, r27.y
          movc r17.y, r27.z, r18.w, r27.w
          movc r27.xy, r26.wwww, r27.xyxx, r17.xyxx
          iadd r16.w, r16.w, l(1)
          mov r15.x, r24.w
        endloop 
        mov_sat r27.y, r27.y
        mul r14.x, r14.y, r27.y
        lt r14.z, l(0.000000), r14.x
        if_nz r14.z
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r13.w, l(16), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r13.w, l(32), t15.yxwz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r13.w, l(48), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r13.w, l(64), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r13.w, l(80), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r13.w, l(132), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r13.w, l(148), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r13.w, l(164), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r13.w, l(180), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r13.w, l(196), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xy, r13.w, l(212), t15.xyxx
          mad r23.z, r27.y, r14.y, r23.z
          mul r13.w, r25.z, r14.x
          mov r25.z, r33.z
          dp3 r14.x, r12.xyzx, r25.xyzx
          dp3 r14.y, r26.xyzx, r25.xyzx
          add r14.y, -r33.w, r14.y
          ge r14.z, r14.y, l(0.000000)
          max r14.y, r5.z, |r14.y|
          movc r14.y, r14.z, r14.y, -r14.y
          max r14.x, -r14.x, l(0.00000010)
          div r14.x, r14.y, r14.x
          min r14.x, |r14.x|, l(131072.000000)
          mov r33.z, r34.z
          dp3 r14.y, r12.xyzx, r33.xyzx
          dp3 r14.z, r26.xyzx, r33.xyzx
          add r14.z, -r34.w, r14.z
          ge r15.x, r14.z, l(0.000000)
          max r14.z, r5.z, |r14.z|
          movc r14.z, r15.x, r14.z, -r14.z
          max r14.y, -r14.y, l(0.00000010)
          div r14.y, r14.z, r14.y
          min r14.x, |r14.y|, r14.x
          mov r34.z, r35.z
          dp3 r14.y, r12.xyzx, r34.xyzx
          dp3 r14.z, r26.xyzx, r34.xyzx
          add r14.z, -r35.w, r14.z
          ge r15.x, r14.z, l(0.000000)
          max r14.z, r5.z, |r14.z|
          movc r14.z, r15.x, r14.z, -r14.z
          max r14.y, -r14.y, l(0.00000010)
          div r14.y, r14.z, r14.y
          min r14.x, |r14.y|, r14.x
          mov r35.z, r36.z
          dp3 r14.y, r12.xyzx, r35.xyzx
          dp3 r14.z, r26.xyzx, r35.xyzx
          add r14.z, -r36.w, r14.z
          ge r15.x, r14.z, l(0.000000)
          max r14.z, r5.z, |r14.z|
          movc r14.z, r15.x, r14.z, -r14.z
          max r14.y, -r14.y, l(0.00000010)
          div r14.y, r14.z, r14.y
          min r14.x, |r14.y|, r14.x
          mov r36.z, r37.x
          dp3 r14.y, r12.xyzx, r36.xyzx
          dp3 r14.z, r26.xyzx, r36.xyzx
          add r14.z, -r37.y, r14.z
          ge r15.x, r14.z, l(0.000000)
          max r14.z, r5.z, |r14.z|
          movc r14.z, r15.x, r14.z, -r14.z
          max r14.y, -r14.y, l(0.00000010)
          div r14.y, r14.z, r14.y
          min r14.x, |r14.y|, r14.x
          mov r38.zw, r37.zzzw
          dp3 r14.y, r12.zxyz, r38.xzwx
          dp3 r14.z, r26.zxyz, r38.xzwx
          add r14.z, -r38.y, r14.z
          ge r15.x, r14.z, l(0.000000)
          max r14.z, r5.z, |r14.z|
          movc r14.z, r15.x, r14.z, -r14.z
          max r14.y, -r14.y, l(0.00000010)
          div r14.y, r14.z, r14.y
          min r14.x, |r14.y|, r14.x
          mov r25.x, r30.w
          mov r25.yz, r31.zzwz
          add r17.yzw, r26.xxyz, r25.xxyz
          mad r17.yzw, r12.xxyz, r14.xxxx, r17.yyzw
          dp3 r14.y, r17.yzwy, r17.yzwy
          sqrt r14.y, r14.y
          div r14.x, r14.x, r14.y
          add r14.x, r14.x, r14.x
          sqrt r14.x, r14.x
          mad r14.x, r4.z, l(5.000000), r14.x
          add r14.x, r14.x, l(-0.844800)
          mov r24.y, r28.z
          mov r24.z, r29.x
          dp3 r33.x, r17.yzwy, r24.xyzx
          mov r25.xy, r28.xwxx
          mov r25.z, r29.w
          dp3 r33.y, r17.yzwy, r25.xyzx
          mov r29.x, r28.y
          dp3 r33.z, r17.yzwy, r29.xyzx
          ubfe r14.y, l(9), l(16), r25.w
          utof r33.w, r14.y
          sample_l_indexable(texturecubearray)(float,float,float,float) r14.xyz, r33.xyzw, t8.xyzw, s2, r14.x
          dp3 r28.x, r26.xyzx, r24.xyzx
          dp3 r28.y, r26.xyzx, r25.xyzx
          dp3 r28.z, r26.xyzx, r29.xyzx
          mad_sat r17.yzw, r28.xxyz, r30.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
          mov r31.z, r32.x
          mad r17.yzw, r17.yyzw, r31.xxyz, r32.yyzw
          dp3 r33.x, r2.xyzx, r24.xyzx
          dp3 r33.y, r2.xyzx, r25.xyzx
          dp3 r33.z, r2.xyzx, r29.xyzx
          lt r24.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r33.xyzx
          movc r16.z, r24.x, l(0), l(0.500000)
          add r25.xyz, r16.xyzx, r17.yzwy
          sample_l_indexable(texture3d)(float,float,float,float) r25.xyz, r25.xyzx, t17.xyzw, s4, l(0.000000)
          mul r26.xyz, r33.xyzx, r33.xyzx
          mul r26.xyz, r13.wwww, r26.xyzx
          movc r18.z, r24.y, l(0), l(0.500000)
          add r24.xyw, r17.yzyw, r18.xyxz
          sample_l_indexable(texture3d)(float,float,float,float) r24.xyw, r24.xywx, t18.xywz, s4, l(0.000000)
          mul r24.xyw, r26.yyyy, r24.xyxw
          mad r24.xyw, r25.xyxz, r26.xxxx, r24.xyxw
          movc r19.z, r24.z, l(0), l(0.500000)
          add r17.yzw, r17.yyzw, r19.xxyz
          sample_l_indexable(texture3d)(float,float,float,float) r17.yzw, r17.yzwy, t19.wxyz, s4, l(0.000000)
          mad r17.yzw, r17.yyzw, r26.zzzz, r24.xxyw
          sample_l_indexable(texturecubearray)(float,float,float,float) r24.xyz, r33.xyzw, t8.xyzw, s2, l(6.000000)
          mul r25.xyz, r17.yzwy, r24.xyzx
          dp3 r15.x, r25.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r22.xyz, r17.yzwy, r24.xyzx, r22.xyzx
          mul r15.w, r5.w, r15.x
          mul r14.xyz, r13.wwww, r14.xyzx
          dp3 r13.w, r14.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r13.w, r5.w, r15.x, r13.w
          div r13.w, r15.w, r13.w
          mov r24.x, r22.w
          mov r24.yz, r23.xxyx
          mad r23.xyw, r14.yzyx, r13.wwww, r24.yzyx
          mov r22.w, r23.w
        endif 
      endif 
    endif 
  endloop 
  mov r20.xyzw, r22.xyzw
  mov r21.yzw, r23.xxyz
  iadd r11.y, r11.y, l(32)
endloop 
lt r9.w, r21.w, l(1.000000)
if_nz r9.w
  mov r13.xy, l(0,0,0,0)
  mov r14.w, l(0)
  mov r15.yz, l(0,0,1.000000,0)
  mov r16.xy, l(0,0,0,0)
  mov r17.x, l(1.000000)
  mov r18.xy, l(0,0,0,0)
  mov r19.xy, l(0,0,0,0)
  mov r22.x, r20.w
  mov r22.yzw, r21.yyzw
  mov r11.yzw, r20.xxyz
  mov r9.w, r21.w
  mov r10.w, l(0)
  loop 
    uge r13.w, r10.w, r6.z
    breakc_nz r13.w
    ushr r13.z, r10.w, l(5)
    iadd r14.xyz, r8.xyzx, r13.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r13.z, r14.xyzw, t7.yzxw
    ieq r13.w, r6.w, r10.w
    ubfe r14.x, r8.w, l(0), r13.z
    movc r13.z, r13.w, r14.x, r13.z
    iadd r13.w, r10.w, cb2[0].x
    mov r23.xyzw, r22.xyzw
    mov r14.xyz, r11.yzwy
    mov r15.w, r9.w
    mov r16.w, r13.z
    loop 
      breakc_z r16.w
      firstbit_lo r17.z, r16.w
      ishl r17.w, l(1), r17.z
      and r18.w, r16.w, r17.w
      if_nz r18.w
        xor r16.w, r16.w, r17.w
        iadd r17.w, r13.w, r17.z
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r24.xyzw, r17.w, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r25.xy, r17.w, l(16), t11.xyxx
        add r24.xyz, r24.xyzx, -v7.xyzx
        mov r25.z, r24.w
        lt r24.xyz, |r24.xyzx|, r25.zxyz
        and r17.w, r24.y, r24.x
        and r17.w, r24.z, r17.w
        if_nz r17.w
          iadd r17.z, r10.w, r17.z
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r17.z, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xy, r17.z, l(96), t15.xyxx
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r17.z, l(116), t15.zwxy
          add r27.xyz, -r24.yzwy, v7.xyzx
          and r17.w, r26.w, l(0x0000ffff)
          ubfe r18.w, l(6), l(25), r26.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r17.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r17.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r17.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r17.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r17.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r17.w, l(80), t16.xyzw
          dp3 r19.w, r28.xyzx, r27.xyzx
          add_sat r19.w, r28.w, r19.w
          dp3 r24.w, r29.xyzx, r27.xyzx
          add_sat r24.w, r29.w, r24.w
          mul r19.w, r19.w, r24.w
          dp3 r24.w, r30.xyzx, r27.xyzx
          add_sat r24.w, r30.w, r24.w
          mul r19.w, r19.w, r24.w
          dp3 r24.w, r31.xyzx, r27.xyzx
          add_sat r24.w, r31.w, r24.w
          mul r19.w, r19.w, r24.w
          dp3 r24.w, r32.xyzx, r27.xyzx
          add_sat r24.w, r32.w, r24.w
          mul r19.w, r19.w, r24.w
          dp3 r24.w, r33.xyzx, r27.xyzx
          add_sat r24.w, r33.w, r24.w
          mul r15.x, r19.w, r24.w
          and r19.w, r25.x, l(1)
          movc r25.zw, r19.wwww, r15.xxxy, r15.zzzx
          mov r15.x, r25.x
          mov r28.xy, r25.zwzz
          mov r19.w, l(1)
          loop 
            ige r24.w, r19.w, r18.w
            breakc_nz r24.w
            iadd r24.w, r17.w, r19.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r24.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r24.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r24.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r24.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r24.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r24.w, l(80), t16.xyzw
            dp3 r24.w, r29.xyzx, r27.xyzx
            add_sat r24.w, r29.w, r24.w
            mul r24.w, r24.w, r28.x
            dp3 r27.w, r30.xyzx, r27.xyzx
            add_sat r27.w, r30.w, r27.w
            mul r24.w, r24.w, r27.w
            dp3 r27.w, r31.xyzx, r27.xyzx
            add_sat r27.w, r31.w, r27.w
            mul r24.w, r24.w, r27.w
            dp3 r27.w, r32.xyzx, r27.xyzx
            add_sat r27.w, r32.w, r27.w
            mul r24.w, r24.w, r27.w
            dp3 r27.w, r33.xyzx, r27.xyzx
            add_sat r27.w, r33.w, r27.w
            mul r24.w, r24.w, r27.w
            dp3 r27.w, r34.xyzx, r27.xyzx
            add_sat r27.w, r34.w, r27.w
            mul r28.x, r24.w, r27.w
            ushr r28.z, r15.x, l(2)
            ubfe r28.w, l(1), l(2), r15.x
            and r29.x, r28.z, l(2)
            max r29.y, r28.x, r28.y
            mad r24.w, -r24.w, r27.w, l(1.000000)
            mul r24.w, r24.w, r28.y
            movc r17.y, r29.x, r24.w, r29.y
            movc r28.xy, r28.wwww, r28.xyxx, r17.xyxx
            iadd r19.w, r19.w, l(1)
            mov r15.x, r28.z
          endloop 
          add_sat r15.x, -r15.w, r28.y
          mul r17.y, r25.y, r15.x
          lt r17.w, l(0.000000), r17.y
          if_nz r17.w
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r17.z, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r17.z, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r17.z, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r17.z, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r17.z, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r17.z, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r17.z, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r17.z, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r17.z, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r17.z, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xy, r17.z, l(212), t15.xyxx
            mad r23.w, r15.x, r25.y, r23.w
            mul r15.x, r26.z, r17.y
            mov r26.z, r34.z
            dp3 r17.y, r12.xyzx, r26.xyzx
            dp3 r17.z, r27.xyzx, r26.xyzx
            add r17.z, -r34.w, r17.z
            ge r17.w, r17.z, l(0.000000)
            max r17.z, r5.z, |r17.z|
            movc r17.z, r17.w, r17.z, -r17.z
            max r17.y, -r17.y, l(0.00000010)
            div r17.y, r17.z, r17.y
            min r17.y, |r17.y|, l(131072.000000)
            mov r34.z, r35.z
            dp3 r17.z, r12.xyzx, r34.xyzx
            dp3 r17.w, r27.xyzx, r34.xyzx
            add r17.w, -r35.w, r17.w
            ge r18.w, r17.w, l(0.000000)
            max r17.w, r5.z, |r17.w|
            movc r17.w, r18.w, r17.w, -r17.w
            max r17.z, -r17.z, l(0.00000010)
            div r17.z, r17.w, r17.z
            min r17.y, |r17.z|, r17.y
            mov r35.z, r36.z
            dp3 r17.z, r12.xyzx, r35.xyzx
            dp3 r17.w, r27.xyzx, r35.xyzx
            add r17.w, -r36.w, r17.w
            ge r18.w, r17.w, l(0.000000)
            max r17.w, r5.z, |r17.w|
            movc r17.w, r18.w, r17.w, -r17.w
            max r17.z, -r17.z, l(0.00000010)
            div r17.z, r17.w, r17.z
            min r17.y, |r17.z|, r17.y
            mov r36.z, r37.z
            dp3 r17.z, r12.xyzx, r36.xyzx
            dp3 r17.w, r27.xyzx, r36.xyzx
            add r17.w, -r37.w, r17.w
            ge r18.w, r17.w, l(0.000000)
            max r17.w, r5.z, |r17.w|
            movc r17.w, r18.w, r17.w, -r17.w
            max r17.z, -r17.z, l(0.00000010)
            div r17.z, r17.w, r17.z
            min r17.y, |r17.z|, r17.y
            mov r37.z, r38.x
            dp3 r17.z, r12.xyzx, r37.xyzx
            dp3 r17.w, r27.xyzx, r37.xyzx
            add r17.w, -r38.y, r17.w
            ge r18.w, r17.w, l(0.000000)
            max r17.w, r5.z, |r17.w|
            movc r17.w, r18.w, r17.w, -r17.w
            max r17.z, -r17.z, l(0.00000010)
            div r17.z, r17.w, r17.z
            min r17.y, |r17.z|, r17.y
            mov r39.zw, r38.zzzw
            dp3 r17.z, r12.zxyz, r39.xzwx
            dp3 r17.w, r27.zxyz, r39.xzwx
            add r17.w, -r39.y, r17.w
            ge r18.w, r17.w, l(0.000000)
            max r17.w, r5.z, |r17.w|
            movc r17.w, r18.w, r17.w, -r17.w
            max r17.z, -r17.z, l(0.00000010)
            div r17.z, r17.w, r17.z
            min r17.y, |r17.z|, r17.y
            mov r25.x, r31.w
            mov r25.yz, r32.zzwz
            add r25.xyz, r27.xyzx, r25.xyzx
            mad r25.xyz, r12.xyzx, r17.yyyy, r25.xyzx
            dp3 r17.z, r25.xyzx, r25.xyzx
            sqrt r17.z, r17.z
            div r17.y, r17.y, r17.z
            add r17.y, r17.y, r17.y
            sqrt r17.y, r17.y
            mad r17.y, r4.z, l(5.000000), r17.y
            add r17.y, r17.y, l(-0.844800)
            mov r24.y, r29.z
            mov r24.z, r30.x
            dp3 r34.x, r25.xyzx, r24.xyzx
            mov r26.xy, r29.xwxx
            mov r26.z, r30.w
            dp3 r34.y, r25.xyzx, r26.xyzx
            mov r30.x, r29.y
            dp3 r34.z, r25.xyzx, r30.xyzx
            ubfe r17.z, l(9), l(16), r26.w
            utof r34.w, r17.z
            sample_l_indexable(texturecubearray)(float,float,float,float) r17.yzw, r34.xyzw, t8.wxyz, s2, r17.y
            dp3 r25.x, r27.xyzx, r24.xyzx
            dp3 r25.y, r27.xyzx, r26.xyzx
            dp3 r25.z, r27.xyzx, r30.xyzx
            mad_sat r25.xyz, r25.xyzx, r31.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
            mov r32.z, r33.x
            mad r25.xyz, r25.xyzx, r32.xyzx, r33.yzwy
            dp3 r34.x, r2.xyzx, r24.xyzx
            dp3 r34.y, r2.xyzx, r26.xyzx
            dp3 r34.z, r2.xyzx, r30.xyzx
            lt r24.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r34.xyzx
            movc r16.z, r24.x, l(0), l(0.500000)
            add r26.xyz, r16.xyzx, r25.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r26.xyz, r26.xyzx, t17.xyzw, s4, l(0.000000)
            mul r27.xyz, r34.xyzx, r34.xyzx
            mul r27.xyz, r15.xxxx, r27.xyzx
            movc r18.z, r24.y, l(0), l(0.500000)
            add r24.xyw, r18.xyxz, r25.xyxz
            sample_l_indexable(texture3d)(float,float,float,float) r24.xyw, r24.xywx, t18.xywz, s4, l(0.000000)
            mul r24.xyw, r27.yyyy, r24.xyxw
            mad r24.xyw, r26.xyxz, r27.xxxx, r24.xyxw
            movc r19.z, r24.z, l(0), l(0.500000)
            add r25.xyz, r19.xyzx, r25.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r25.xyz, r25.xyzx, t19.xyzw, s4, l(0.000000)
            mad r24.xyz, r25.xyzx, r27.zzzz, r24.xywx
            sample_l_indexable(texturecubearray)(float,float,float,float) r25.xyz, r34.xyzw, t8.xyzw, s2, l(6.000000)
            mul r26.xyz, r24.xyzx, r25.xyzx
            dp3 r16.z, r26.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r14.xyz, r24.xyzx, r25.xyzx, r14.xyzx
            mul r18.z, r5.w, r16.z
            mul r17.yzw, r15.xxxx, r17.yyzw
            dp3 r15.x, r17.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r15.x, r5.w, r16.z, r15.x
            div r15.x, r18.z, r15.x
            mad r23.xyz, r17.yzwy, r15.xxxx, r23.xyzx
          endif 
        endif 
      endif 
    endloop 
    mov r22.xyzw, r23.xyzw
    mov r11.yzw, r14.xxyz
    iadd r10.w, r10.w, l(32)
  endloop 
  mov r21.xyzw, r22.zxyw
  mov r20.xyz, r11.yzwy
  mov r21.xyzw, r21.yzxw
else 
  mov r21.x, r20.w
endif 
max r4.z, r21.w, l(1.000000)
rcp r4.z, r4.z
mov_sat r21.w, r21.w
mul r13.xyz, r4.zzzz, r20.xyzx
mul r11.yzw, r4.zzzz, r21.xxyz
lt r5.z, r21.w, l(0.990000)
if_nz r5.z
  add r5.z, -r21.w, l(1.000000)
  mul r5.w, r5.z, cb2[19].x
  add r14.xyz, v7.xyzx, -cb2[35].xyzx
  mul r15.x, r14.x, cb2[35].w
  mul r15.yz, r14.yyzy, cb2[36].xxyx
  add_sat r14.xyz, r15.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mul r15.xy, r14.xyxx, cb2[36].zwzz
  mul r15.z, r14.z, cb2[37].x
  add r14.xyz, r15.xyzx, cb2[37].yzwy
  lt r15.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r2.xyzx
  movc r15.xyz, r15.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
  mov r15.w, l(0)
  add r16.xyz, r14.xyzx, r15.wwxw
  sample_l_indexable(texture3d)(float,float,float,float) r16.xyz, r16.xyzx, t17.xyzw, s4, l(0.000000)
  mul r17.xyz, r2.xyzx, r2.xyzx
  mul r17.xyz, r5.wwww, r17.xyzx
  add r18.xyz, r14.xyzx, r15.wwyw
  sample_l_indexable(texture3d)(float,float,float,float) r18.xyz, r18.xyzx, t18.xyzw, s4, l(0.000000)
  mul r18.xyz, r17.yyyy, r18.xyzx
  mad r16.xyz, r16.xyzx, r17.xxxx, r18.xyzx
  add r14.xyz, r14.xyzx, r15.wwzw
  sample_l_indexable(texture3d)(float,float,float,float) r14.xyz, r14.xyzx, t19.xyzw, s4, l(0.000000)
  mad r14.xyz, r14.xyzx, r17.zzzz, r16.xyzx
  mov r2.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r15.xyz, r2.xyzw, t8.xyzw, s2, l(6.000000)
  mul r14.xyz, r14.xyzx, r15.xyzx
  dp3 r2.w, r14.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  mad r13.xyz, r20.xyzx, r4.zzzz, r14.xyzx
  mov r12.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r14.xyz, r12.xyzw, t8.xyzw, s2, r4.w
  mad r4.z, cb2[19].x, r5.z, -r2.w
  mad r2.w, r5.y, r4.z, r2.w
  mad r11.yzw, r14.xxyz, r2.wwww, r11.yyzw
endif 
mad r4.zw, r5.xxxy, l(0.000000, 0.000000, 0.984375, 0.984375), l(0.000000, 0.000000, 0.00781250, 0.00781250)
sample_l_indexable(texture2d)(float,float,float,float) r4.zw, r4.zwzz, t5.zwxy, s2, l(0.000000)
mul r14.xyz, r4.zzzz, r11.zwyz
mul r5.yzw, r4.wwww, r11.yyzw
sqrt r2.w, r4.y
mad r2.w, r2.w, l(0.500000), l(0.500000)
mul r2.w, r2.w, r2.w
mul r4.z, r2.w, l(0.500000)
mad r2.w, -r2.w, l(0.500000), l(1.000000)
mad r4.w, r5.x, r2.w, r4.z
mul r2.w, r2.w, r4.w
mul r4.z, r4.w, r4.z
dp3 r4.w, r2.xyzx, cb2[17].xyzx
mov_sat r6.z, r4.w
ge r6.w, l(0.000000), r6.z
if_nz r6.w
  mov r8.w, l(0)
endif 
if_z r6.w
  mul r11.yzw, v7.yyyy, cb2[29].xxyz
  mad r11.yzw, v7.xxxx, cb2[28].xxyz, r11.yyzw
  mad r11.yzw, v7.zzzz, cb2[30].xxyz, r11.yyzw
  add r11.yzw, r11.yyzw, cb2[31].xxyz
  add r6.w, r11.w, -cb2[17].w
  mad r6.w, -r6.w, l(0.00006104), l(1.000000)
  mov_sat r9.w, r6.w
  eq r9.w, r6.w, r9.w
  if_nz r9.w
    mov r9.w, l(0)
    mov r10.w, l(0)
    loop 
      ge r12.w, r9.w, l(3.000000)
      breakc_nz r12.w
      ftou r12.w, r9.w
      add r15.xy, r11.yzyy, -cb2[r12.w + 20].xyxx
      max r15.x, |r15.y|, |r15.x|
      mul r10.w, r15.x, cb2[r12.w + 20].z
      lt r12.w, r10.w, l(1.000000)
      if_nz r12.w
        break 
      endif 
      add r9.w, r9.w, l(1.000000)
      mov r10.w, l(0)
    endloop 
  else 
    mov r9.w, l(3.000000)
    mov r10.w, l(0)
  endif 
  ge r12.w, r9.w, l(3.000000)
  if_nz r12.w
    mul r15.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
    rcp r16.xz, r15.xxxx
    mov r16.y, -r16.z
    mad r15.xyz, r11.yzyy, r16.xyzx, r15.yzyy
    add r16.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r15.xyz, r15.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r15.xyz, r16.xyzx, r15.xyzx
    mul r16.xy, r15.zyzz, cb2[32].xxxx
    round_ni r16.xy, r16.xyxx
    mul r15.w, r16.y, cb2[27].x
    mad r15.w, r15.w, cb2[32].x, r16.x
    ftou r15.w, r15.w
    iadd r15.w, r15.w, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.x, r15.w, l(0), t23.xxxx
    and r16.y, r16.x, l(0x40000000)
    ishl r16.z, r16.x, l(2)
    if_z r16.y
      and r16.y, r16.x, l(0x01ffffff)
      iadd r17.x, r15.w, r16.y
      ushr r15.w, r16.x, l(25)
      utof r15.w, r15.w
      mul r15.xyz, r15.wwww, r15.xyzx
      frc r15.xyz, r15.xyzx
      mul r15.xyz, r15.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
      ftou r15.xyz, r15.xyzx
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.z, r17.x, l(0), t23.xxxx
      ushr r16.xy, r15.zyzz, l(6, 6, 0, 0)
      and r15.w, r17.z, l(0xc0000000)
      iadd r16.w, r17.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.w, r16.w, l(0), t23.xxxx
      movc r16.y, r16.y, r17.z, r16.w
      ushr r16.w, r16.y, l(13)
      movc r16.x, r16.x, r16.w, r16.y
      and r16.x, r16.x, l(8191)
      iadd r18.x, r16.x, r17.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.x, l(0), t23.xxxx
      mov r17.y, l(0)
      mov r18.y, l(1)
      movc r16.xyw, r15.wwww, r17.xyxz, r18.xyxz
      movc r18.yz, r15.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r19.xy, r15.zyzz, r18.yyyy
      and r19.xy, r19.xyxx, l(1, 1, 0, 0)
      and r17.w, r16.w, l(0xc0000000)
      iadd r18.y, r16.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.y, r18.y, l(0), t23.xxxx
      movc r18.y, r19.y, r16.w, r18.y
      ushr r19.y, r18.y, l(13)
      movc r18.y, r19.x, r19.y, r18.y
      and r18.y, r18.y, l(8191)
      iadd r18.x, r16.x, r18.y
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.w, r18.x, l(0), t23.xxxx
      movc r16.xyw, r17.wwww, r16.xyxw, r18.xzxw
      movc r16.xyw, r15.wwww, r17.xyxz, r16.xyxw
      and r15.w, r16.w, l(0xc0000000)
      if_z r15.w
        iadd r15.w, -r16.y, l(6)
        ushr r17.xy, r15.zyzz, r15.wwww
        or r15.w, r16.w, l(0x40000000)
        bfi r17.y, l(1), l(1), r17.y, l(0)
        bfi r17.x, l(1), l(0), r17.x, r17.y
        imul null, r17.x, r17.x, l(10)
        ushr r15.w, r15.w, r17.x
        and r15.w, r15.w, l(1023)
        iadd r17.x, r15.w, r16.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.w, r17.x, l(0), t23.xxxx
        iadd r17.yz, r16.yyyy, l(0, 1, 2, 0)
        iadd r15.w, -r17.y, l(6)
        ushr r18.xy, r15.zyzz, r15.wwww
        and r15.w, r17.w, l(0xc0000000)
        or r16.y, r17.w, l(0x40000000)
        bfi r18.y, l(1), l(1), r18.y, l(0)
        bfi r18.x, l(1), l(0), r18.x, r18.y
        imul null, r18.x, r18.x, l(10)
        ushr r16.y, r16.y, r18.x
        and r16.y, r16.y, l(1023)
        iadd r18.x, r16.y, r17.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.x, l(0), t23.xxxx
        mov r18.y, r17.z
        movc r18.xyz, r15.wwww, r17.xywx, r18.xyzx
        iadd r16.y, -r18.y, l(6)
        ushr r17.yz, r15.zzyz, r16.yyyy
        and r16.y, r18.z, l(0xc0000000)
        or r18.y, r18.z, l(0x40000000)
        bfi r17.z, l(1), l(1), r17.z, l(0)
        bfi r17.y, l(1), l(0), r17.y, r17.z
        imul null, r17.y, r17.y, l(10)
        ushr r17.y, r18.y, r17.y
        and r17.y, r17.y, l(1023)
        iadd r19.x, r17.y, r18.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.y, r19.x, l(0), t23.xxxx
        movc r17.yz, r16.yyyy, r18.xxzx, r19.xxyx
        movc r16.xw, r15.wwww, r17.xxxw, r17.yyyz
      endif 
      and r15.w, r16.w, l(0xc0000000)
      if_z r15.w
        ubfe r16.y, l(14), l(15), r16.w
        utof r16.y, r16.y
        mul r16.y, r16.y, cb2[27].w
        mul r16.y, r16.y, l(0.00006104)
        and r17.xy, r16.wwww, l(0x00007fff, 0x20000000, 0, 0)
        utof r17.x, r17.x
        mul r17.x, r17.x, cb2[27].w
        mul r17.x, r17.x, l(0.00003052)
        and r17.z, r15.y, l(3)
        iadd r17.z, r16.x, r17.z
        iadd r17.z, r17.z, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.z, r17.z, l(0), t23.xxxx
        bfi r18.xyz, l(2, 2, 1, 0), l(3, 1, 4, 0), r15.xyzx, l(0, 0, 0, 0)
        ushr r15.x, r17.z, r18.x
        and r15.x, r15.x, l(255)
        utof r15.x, r15.x
        mul r15.x, r17.x, r15.x
        mad r15.x, r15.x, l(0.00392157), r16.y
        iadd r15.y, r18.y, l(1)
        ubfe r15.z, l(1), l(1), r15.z
        iadd r15.y, r15.z, r15.y
        iadd r15.y, r15.y, r16.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.y, r15.y, l(0), t23.xxxx
        ushr r15.y, r15.y, r18.z
        and r15.y, r15.y, l(0x0000ffff)
        utof r15.y, r15.y
        mul r15.y, r17.x, r15.y
        mad r15.y, r15.y, l(0.00001526), r16.y
        movc r16.z, r17.y, r15.x, r15.y
      else 
        and r15.x, r16.w, l(0x80000000)
        iadd r15.y, r16.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.y, r15.y, l(0), t23.xxxx
        movc r15.x, r15.x, r15.y, l(0)
        ishl r15.y, r16.w, l(2)
        ushr r15.z, r15.x, l(16)
        and r15.x, r15.x, l(0x0000ffff)
        f16tof32 r15.xz, r15.xxzx
        mad r15.y, r11.y, r15.z, r15.y
        mad r15.x, r11.z, r15.x, r15.y
        movc r16.z, r15.w, r15.x, r16.z
      endif 
    endif 
    mad r11.w, -cb2[27].z, l(2.000000), r11.w
    lt r11.w, r16.z, r11.w
    movc r8.w, r11.w, l(0), l(1.000000)
  endif 
  if_z r12.w
    if_z cb2[58].y
      ftou r11.w, r9.w
      add r15.xy, r11.yzyy, -cb2[r11.w + 20].xyxx
      mul r15.xy, r15.xyxx, cb2[r11.w + 20].zzzz
      mad r15.xy, r15.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r11.w, cb2[26].y
      add r15.z, r9.w, r11.w
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r11.w, r15.xyzx, t13.xxxx, s13, r6.w
      sample_l_indexable(texture2darray)(float,float,float,float) r12.w, r15.xyzx, t31.yzwx, s0, l(0.000000)
      add r11.w, r11.w, r12.w
      add_sat r11.w, r11.w, l(-1.000000)
      mul r12.w, r11.w, r11.w
      mul r8.w, r11.w, r12.w
    endif 
    if_nz cb2[58].y
      mov r15.x, -r6.x
      ftou r11.w, r9.w
      add r9.w, r9.w, l(1.000000)
      min r9.w, r9.w, l(2.000000)
      ftou r9.w, r9.w
      add r10.w, -r10.w, l(1.000000)
      mul r10.w, r10.w, l(28.000000)
      ftou r10.w, r10.w
      add r16.xy, r11.yzyy, -cb2[r11.w + 20].xyxx
      mul r16.xy, r16.xyxx, cb2[r11.w + 20].zzzz
      mad r16.xy, r16.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      add r11.yz, r11.yyzy, -cb2[r9.w + 20].xxyx
      mul r11.yz, r11.yyzy, cb2[r9.w + 20].zzzz
      mad r11.yz, r11.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      mov r15.y, r10.x
      mov r15.z, r6.x
      mov r12.w, l(0)
      mov r15.w, l(0)
      loop 
        uge r16.z, r15.w, l(8)
        breakc_nz r16.z
        ult r16.z, r10.w, r15.w
        movc r17.xy, r16.zzzz, r11.yzyy, r16.xyxx
        movc r16.w, r16.z, cb2[r9.w + 20].w, cb2[r11.w + 20].w
        movc r16.z, r16.z, r9.w, r11.w
        dp2 r18.x, icb[r15.w + 0].yxyy, r15.xyxx
        dp2 r18.y, icb[r15.w + 0].yxyy, r15.yzyy
        mad r17.xy, r18.xyxx, r16.wwww, r17.xyxx
        iadd r16.z, r16.z, cb2[26].y
        utof r17.z, r16.z
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r16.z, r17.xyzx, t13.xxxx, s13, r6.w
        sample_l_indexable(texture2darray)(float,float,float,float) r16.w, r17.xyzx, t31.yzwx, s0, l(0.000000)
        add r16.z, r16.w, r16.z
        add_sat r16.z, r16.z, l(-1.000000)
        mad r12.w, r16.z, l(0.125000), r12.w
        iadd r15.w, r15.w, l(1)
      endloop 
      mul r6.w, r12.w, r12.w
      mul r8.w, r12.w, r6.w
    endif 
  endif 
endif 
lt r6.w, l(0.000000), r6.z
if_nz r6.w
  lt r6.w, l(0.000000), r8.w
  if_nz r6.w
    mul r6.w, r3.w, cb2[18].w
    mul r6.w, r6.z, r6.w
    if_nz cb2[23].x
      mov r7.w, l(1.000000)
      dp4 r9.w, cb2[24].xyzw, r7.xyzw
      dp4 r7.x, cb2[25].xyzw, r7.xyzw
      frc r15.x, r9.w
      frc r15.y, r7.x
      iadd r7.x, l(-1), cb2[23].x
      utof r15.z, r7.x
      sample_l_indexable(texture2darray)(float,float,float,float) r7.xyz, r15.xyzx, t20.xyzw, s2, l(0.000000)
      add r7.xyz, r7.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
      mad r7.xyz, cb2[23].yyyy, r7.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      mul r7.xyz, r7.xyzx, cb2[18].xyzx
    else 
      mov r7.xyz, cb2[18].xyzx
    endif 
    ushr r7.w, cb2[53].x, l(16)
    ult r9.w, l(0), r7.w
    and r9.w, r0.x, r9.w
    if_nz r9.w
      iadd r7.w, r7.w, cb2[0].x
      iadd r7.w, r7.w, l(-1)
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r9.w, r7.w, l(52), t12.xxxx
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r7.w, l(68), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r7.w, l(84), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r7.w, l(132), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r7.w, l(148), t12.xyzw
      mad r10.w, |r4.w|, l(-0.200000), l(0.400000)
      mad r19.xyz, r2.xyzx, r10.wwww, v7.xyzx
      mov r19.w, l(1.000000)
      dp4 r15.x, r15.xyzw, r19.xyzw
      dp4 r15.y, r16.xyzw, r19.xyzw
      mad r11.yz, r15.xxyx, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      add r11.yz, r18.zzwz, r11.yyzy
      mul r11.yz, r18.xxyx, r11.yyzy
      div r15.xy, r9.wwww, r17.xzxx
      add r15.zw, -r15.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
      ge r15.zw, r11.yyyz, r15.zzzw
      ge r15.xy, r15.xyxx, r11.yzyy
      or r15.xy, r15.xyxx, r15.zwzz
      or r10.w, r15.y, r15.x
      if_z r10.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r10.w, r7.w, l(28), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r7.w, l(100), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xy, r7.w, l(164), t12.xyxx
        dp4 r7.w, r15.xyzw, r19.xyzw
        mov_sat r11.yz, r11.yyzy
        mad r15.xy, r11.yzyy, r17.xzxx, r17.ywyy
        add r7.w, r16.x, r7.w
        div r7.w, r7.w, r16.y
        max r7.w, r7.w, l(0.00006104)
        and r10.w, r10.w, l(0x0000ffff)
        if_nz cb2[58].y
          mov r16.x, -r6.x
          utof r17.z, r10.w
          mov r16.y, r10.x
          mov r16.z, r6.x
          mov r11.yz, l(0,0,0,0)
          loop 
            ige r11.w, r11.z, l(8)
            breakc_nz r11.w
            dp2 r18.x, icb[r11.z + 0].yxyy, r16.xyxx
            dp2 r18.y, icb[r11.z + 0].yxyy, r16.yzyy
            mad r17.xy, r18.xyxx, r9.wwww, r15.xyxx
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r11.w, r17.xyzx, t9.xxxx, s13, r7.w
            mad r11.y, r11.w, l(0.125000), r11.y
            iadd r11.z, r11.z, l(1)
          endloop 
        else 
          utof r15.z, r10.w
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r11.y, r15.xyzx, t9.xxxx, s13, r7.w
        endif 
        mul r7.w, r11.y, r11.y
        mul r7.w, r11.y, r7.w
      else 
        mov r7.w, l(1.000000)
      endif 
      mul r8.w, r7.w, r8.w
    else 
      and r7.w, cb2[53].x, l(0x0000ffff)
      ult r9.w, l(0), r7.w
      not r10.w, r0.x
      and r9.w, r9.w, r10.w
      if_nz r9.w
        iadd r7.w, r7.w, cb2[0].x
        iadd r7.w, r7.w, l(-1)
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r9.w, r7.w, l(52), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r7.w, l(68), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r7.w, l(84), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r7.w, l(132), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r7.w, l(148), t12.xyzw
        mad r10.w, |r4.w|, l(-0.200000), l(0.400000)
        mad r19.xyz, r2.xyzx, r10.wwww, v7.xyzx
        mov r19.w, l(1.000000)
        dp4 r15.x, r15.xyzw, r19.xyzw
        dp4 r15.y, r16.xyzw, r19.xyzw
        mad r11.yz, r15.xxyx, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
        add r11.yz, r18.zzwz, r11.yyzy
        mul r11.yz, r18.xxyx, r11.yyzy
        div r15.xy, r9.wwww, r17.xzxx
        add r15.zw, -r15.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
        ge r15.zw, r11.yyyz, r15.zzzw
        ge r15.xy, r15.xyxx, r11.yzyy
        or r15.xy, r15.xyxx, r15.zwzz
        or r10.w, r15.y, r15.x
        if_z r10.w
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r10.w, r7.w, l(28), t12.xxxx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r7.w, l(100), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xy, r7.w, l(164), t12.xyxx
          dp4 r7.w, r15.xyzw, r19.xyzw
          mov_sat r11.yz, r11.yyzy
          mad r15.xy, r11.yzyy, r17.xzxx, r17.ywyy
          add r7.w, r16.x, r7.w
          div r7.w, r7.w, r16.y
          max r7.w, r7.w, l(0.00006104)
          and r10.w, r10.w, l(0x0000ffff)
          if_nz cb2[58].y
            mov r16.x, -r6.x
            utof r17.z, r10.w
            mov r16.y, r10.x
            mov r16.z, r6.x
            mov r11.yz, l(0,0,0,0)
            loop 
              ige r11.w, r11.z, l(8)
              breakc_nz r11.w
              dp2 r18.x, icb[r11.z + 0].yxyy, r16.xyxx
              dp2 r18.y, icb[r11.z + 0].yxyy, r16.yzyy
              mad r17.xy, r18.xyxx, r9.wwww, r15.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r11.w, r17.xyzx, t9.xxxx, s13, r7.w
              mad r11.y, r11.w, l(0.125000), r11.y
              iadd r11.z, r11.z, l(1)
            endloop 
          else 
            utof r15.z, r10.w
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r11.y, r15.xyzx, t9.xxxx, s13, r7.w
          endif 
          mul r7.w, r11.y, r11.y
          mul r7.w, r11.y, r7.w
        else 
          mov r7.w, l(1.000000)
        endif 
        mul r8.w, r7.w, r8.w
      endif 
    endif 
    mad r7.w, -r5.x, l(0.500000), l(1.000000)
    mad r7.w, -r6.z, r7.w, l(1.000000)
    mul r7.w, r7.w, r7.w
    mad r7.w, -r7.w, l(0.620000), l(0.620000)
    add r7.w, -r6.z, r7.w
    mad r7.w, r4.y, r7.w, r6.z
    mul r7.w, r8.w, r7.w
    lt r4.w, l(0.000000), r4.w
    mad r15.xyz, r7.wwww, r7.xyzx, r13.xyzx
    mad r11.yzw, -v7.xxyz, r1.wwww, cb2[17].xxyz
    dp3 r1.w, r11.yzwy, r11.yzwy
    rsq r1.w, r1.w
    mul r11.yzw, r1.wwww, r11.yyzw
    dp3 r1.w, r11.yzwy, r9.xyzx
    dp3 r7.w, r2.xyzx, r11.yzwy
    mad r9.w, |r7.w|, r3.w, -|r7.w|
    mad r7.w, |r7.w|, r9.w, l(1.000000)
    mad r6.z, r6.z, r2.w, r4.z
    mul r7.w, r7.w, r7.w
    mul r6.z, r6.z, r7.w
    rcp r6.z, r6.z
    mul r6.z, r6.w, r6.z
    mul r6.z, r6.z, r8.w
    mul r6.z, r6.z, l(0.250000)
    mad r11.yzw, r6.zzzz, r7.xxyz, r5.yyzw
    add_sat r1.w, -r1.w, l(1.000000)
    mul r6.w, r1.w, r1.w
    mul r6.w, r6.w, r6.w
    mul r1.w, r1.w, r6.w
    mul r1.w, r1.w, r6.z
    mad r7.xyz, r1.wwww, r7.yzxy, r14.xyzx
    mov r15.w, r7.z
    mov r13.w, r14.z
    movc r13.xyzw, r4.wwww, r15.xyzw, r13.xyzw
    mov r7.zw, r11.yyyz
    mov r14.zw, r5.yyyz
    movc r7.xyzw, r4.wwww, r7.xyzw, r14.xyzw
    movc r5.w, r4.w, r11.w, r5.w
    mov r14.z, r13.w
    mov r14.xy, r7.xyxx
    mov r5.yz, r7.zzwz
  endif 
endif 
mov r7.x, -r6.x
not r1.w, r0.x
mad r4.w, -r5.x, l(0.500000), l(1.000000)
mov r15.xy, l(0,0,0,0)
mov r16.w, l(0)
mov r17.xyz, v7.xyzx
mov r17.w, l(1.000000)
mov r18.w, l(1.000000)
mov r7.z, r6.x
mov r19.w, l(1.000000)
mov r20.z, l(1.000000)
mov r21.w, l(1.000000)
mov r7.yw, r10.xxxx
mov r6.y, r7.w
mov r22.w, l(1.000000)
mov r10.y, r7.x
mov r10.z, r6.x
mov r23.w, l(1.000000)
mov r24.x, r10.x
mov r24.y, r7.x
mov r24.z, r6.x
mov r25.x, r10.x
mov r25.y, r7.x
mov r25.z, r6.x
mov r26.x, r10.x
mov r26.y, r7.x
mov r26.z, r6.x
mov r11.yzw, r13.xxyz
mov r27.xyz, r14.zxyz
mov r28.xyz, r5.yzwy
mov r5.x, cb2[58].y
mov r6.z, l(0)
loop 
  uge r6.w, r6.z, cb2[0].x
  breakc_nz r6.w
  ushr r15.z, r6.z, l(5)
  iadd r16.xyz, r8.xyzx, r15.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r6.w, r16.xyzw, t6.yzwx
  mov r16.xyz, r11.yzwy
  mov r29.xyz, r27.xyzx
  mov r30.xyz, r28.xyzx
  mov r8.w, r5.x
  mov r9.w, r6.w
  loop 
    breakc_z r9.w
    firstbit_lo r10.w, r9.w
    ishl r12.w, l(1), r10.w
    and r13.w, r9.w, r12.w
    if_nz r13.w
      xor r9.w, r9.w, r12.w
      iadd r10.w, r6.z, r10.w
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r31.xyzw, r10.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r32.xy, r10.w, l(16), t11.xyxx
      add r31.xyz, r31.xyzx, -v7.xyzx
      mov r32.z, r31.w
      lt r31.xyz, |r31.xyzx|, r32.zxyz
      and r12.w, r31.y, r31.x
      and r12.w, r31.z, r12.w
      if_nz r12.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r10.w, l(0), t12.wxyz
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r10.w, l(16), t12.zxyw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r10.w, l(32), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r10.w, l(48), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r10.w, l(64), t12.yzwx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r10.w, l(80), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r10.w, l(96), t12.yzwx
        ubfe r12.w, l(3), l(24), r32.w
        switch r12.w
          case l(4)
          lt r12.w, l(0.000000), r37.x
          mov r38.xy, r36.zwzz
          mov r38.z, r37.w
          mad r39.xyz, -r38.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r31.yzwy
          add r40.xyz, r39.xyzx, -v7.xyzx
          dp3 r13.w, r38.xyzx, r40.xyzx
          div_sat r14.w, -r13.w, r37.x
          mad r41.xyz, r14.wwww, r38.xyzx, r39.xyzx
          movc r41.xyz, r12.wwww, r41.xyzx, r31.yzwy
          add r41.xyz, r41.xyzx, -v7.xyzx
          dp3 r15.z, r41.xyzx, r41.xyzx
          rsq r15.w, r15.z
          mul r41.xyz, r15.wwww, r41.xyzx
          dp3 r15.w, r2.xyzx, r41.xyzx
          mov_sat r20.w, r15.w
          lt r24.w, l(0.000000), r20.w
          if_nz r24.w
            sqrt r24.w, r15.z
            mul r25.w, r34.x, r34.x
            div r15.z, r25.w, r15.z
            min r15.z, r15.z, l(1.000000)
            mad_sat r41.xy, r24.wwww, r33.xzxx, r33.ywyy
            mul r41.zw, r41.xxxy, r41.xxxy
            mad r41.xy, r41.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
            mul r41.xy, r41.xyxx, r41.zwzz
            mul r15.z, r15.z, r41.x
            mul r15.z, r41.y, r15.z
            lt r24.w, l(0.000000), r15.z
            if_nz r24.w
              ubfe r24.w, l(3), l(27), r32.w
              ine r24.w, r24.w, l(1)
              if_nz r24.w
                mad r24.w, |r15.w|, l(-0.200000), l(0.400000)
                mad r41.xyz, r2.xyzx, r24.wwww, v7.xyzx
                add r41.xyz, -r35.xyzx, r41.xyzx
                max r24.w, |r41.z|, |r41.y|
                max r24.w, r24.w, |r41.x|
                div r24.w, r36.x, r24.w
                add r24.w, r36.y, r24.w
                dp3 r25.w, r41.xyzx, r41.xyzx
                rsq r25.w, r25.w
                max r24.w, r24.w, l(0.00006104)
                and r26.w, r32.w, l(0x0000ffff)
                utof r42.w, r26.w
                mov r26.w, l(0)
                mov r27.w, l(0)
                loop 
                  ige r28.w, r27.w, l(8)
                  breakc_nz r28.w
                  dp2 r43.y, icb[r27.w + 0].yxyy, r7.xyxx
                  dp2 r43.z, icb[r27.w + 0].yxyy, r7.yzyy
                  mul r43.yz, r34.yyyy, r43.yyzy
                  mul r43.x, r11.x, r43.y
                  mul r43.w, r4.x, r43.y
                  mad r42.xyz, r41.xyzx, r25.wwww, r43.xzwx
                  sample_c_lz_indexable(texturecubearray)(float,float,float,float) r28.w, r42.xyzw, t10.xxxx, s13, r24.w
                  mad r26.w, r28.w, l(0.125000), r26.w
                  iadd r27.w, r27.w, l(1)
                endloop 
              else 
                mov r26.w, l(1.000000)
              endif 
              mul r15.z, r15.z, r26.w
              lt r24.w, l(0.000000), r15.z
              if_nz r24.w
                mul r24.w, r3.w, r32.x
                mul r24.w, r24.w, l(0.250000)
                dp3 r25.w, r38.xyzx, r12.xyzx
                dp3 r27.w, r12.xyzx, r40.xyzx
                mad r28.w, -r25.w, r25.w, r37.x
                mad r13.w, r25.w, r27.w, -r13.w
                div_sat r13.w, r13.w, r28.w
                div r25.w, r28.w, r37.x
                mul r25.w, r25.w, l(10.000000)
                min r25.w, r25.w, l(1.000000)
                add r13.w, -r14.w, r13.w
                mad r13.w, r25.w, r13.w, r14.w
                mad r38.xyz, r13.wwww, r38.xyzx, r39.xyzx
                movc r38.xyz, r12.wwww, r38.xyzx, r31.yzwy
                add r38.xyz, r38.xyzx, -v7.xyzx
                dp3 r12.w, r38.xyzx, r38.xyzx
                rsq r12.w, r12.w
                mul r39.xyz, r12.wwww, r38.xyzx
                ubfe r13.w, l(4), l(16), r32.w
                ult r14.w, l(0), r13.w
                and r14.w, r0.x, r14.w
                if_nz r14.w
                  iadd r13.w, r13.w, cb2[0].x
                  iadd r13.w, r13.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.w, r13.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r13.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r13.w, l(116), t12.xyzw
                  mad r25.w, |r15.w|, l(-0.200000), l(0.400000)
                  mad r18.xyz, r2.xyzx, r25.wwww, v7.xyzx
                  dp4 r25.w, r40.xyzw, r18.xyzw
                  dp4 r27.w, r41.xyzw, r18.xyzw
                  lt r28.w, r27.w, r25.w
                  if_z r28.w
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r13.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r13.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r13.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r13.w, l(148), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xy, r13.w, l(164), t12.xyxx
                    dp4 r40.x, r40.xyzw, r18.xyzw
                    dp4 r40.y, r41.xyzw, r18.xyzw
                    div r18.xy, r40.xyxx, r27.wwww
                    mad r18.xy, r18.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r18.xy, r43.zwzz, r18.xyxx
                    mul r18.xy, r43.xyxx, r18.xyxx
                    div r40.xy, r14.wwww, r42.xzxx
                    add r40.zw, -r40.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                    ge r40.zw, r18.xxxy, r40.zzzw
                    ge r40.xy, r40.xyxx, r18.xyxx
                    or r40.xy, r40.xyxx, r40.zwzz
                    or r18.z, r40.y, r40.x
                    mov_sat r18.xy, r18.xyxx
                    mad r40.xy, r18.xyxx, r42.xzxx, r42.ywyy
                    mul r18.x, r27.w, r44.y
                    mad r18.y, r44.x, r27.w, r25.w
                    div r18.x, r18.y, r18.x
                  else 
                    mov r18.z, l(-1)
                  endif 
                  or r18.y, r28.w, r18.z
                  if_z r18.y
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.w, r13.w, l(28), t12.xxxx
                    max r18.x, r18.x, l(0.00006104)
                    and r13.w, r13.w, l(0x0000ffff)
                    if_nz r8.w
                      utof r41.z, r13.w
                      mov r18.yz, l(0,0,0,0)
                      loop 
                        ige r25.w, r18.z, l(8)
                        breakc_nz r25.w
                        dp2 r42.x, icb[r18.z + 0].yxyy, r7.xwxx
                        dp2 r42.y, icb[r18.z + 0].xyxx, r6.xyxx
                        mad r41.xy, r42.xyxx, r14.wwww, r40.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r25.w, r41.xyzx, t9.xxxx, s13, r18.x
                        mad r18.y, r25.w, l(0.125000), r18.y
                        iadd r18.z, r18.z, l(1)
                      endloop 
                    else 
                      utof r40.z, r13.w
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r18.y, r40.xyzx, t9.xxxx, s13, r18.x
                    endif 
                    mul r13.w, r18.y, r18.y
                    mul r13.w, r18.y, r13.w
                  else 
                    mov r13.w, l(1.000000)
                  endif 
                  mul r15.z, r13.w, r15.z
                else 
                  ubfe r13.w, l(4), l(20), r32.w
                  ult r14.w, l(0), r13.w
                  and r14.w, r1.w, r14.w
                  if_nz r14.w
                    iadd r13.w, r13.w, cb2[0].x
                    iadd r13.w, r13.w, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.w, r13.w, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r13.w, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r13.w, l(116), t12.xyzw
                    mad r18.x, |r15.w|, l(-0.200000), l(0.400000)
                    mad r19.xyz, r2.xyzx, r18.xxxx, v7.xyzx
                    dp4 r18.x, r40.xyzw, r19.xyzw
                    dp4 r18.z, r41.xyzw, r19.xyzw
                    lt r25.w, r18.z, r18.x
                    if_z r25.w
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r13.w, l(68), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r13.w, l(84), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r13.w, l(132), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r13.w, l(148), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xy, r13.w, l(164), t12.xyxx
                      dp4 r40.x, r40.xyzw, r19.xyzw
                      dp4 r40.y, r41.xyzw, r19.xyzw
                      div r19.xy, r40.xyxx, r18.zzzz
                      mad r19.xy, r19.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                      add r19.xy, r43.zwzz, r19.xyxx
                      mul r19.xy, r43.xyxx, r19.xyxx
                      div r40.xy, r14.wwww, r42.xzxx
                      add r40.zw, -r40.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                      ge r40.zw, r19.xxxy, r40.zzzw
                      ge r40.xy, r40.xyxx, r19.xyxx
                      or r40.xy, r40.xyxx, r40.zwzz
                      or r19.z, r40.y, r40.x
                      mov_sat r19.xy, r19.xyxx
                      mad r40.xy, r19.xyxx, r42.xzxx, r42.ywyy
                      mul r19.x, r18.z, r44.y
                      mad r18.x, r44.x, r18.z, r18.x
                      div r18.x, r18.x, r19.x
                    else 
                      mov r19.z, l(-1)
                    endif 
                    or r18.z, r25.w, r19.z
                    if_z r18.z
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.w, r13.w, l(28), t12.xxxx
                      max r18.x, r18.x, l(0.00006104)
                      and r13.w, r13.w, l(0x0000ffff)
                      if_nz r8.w
                        utof r19.z, r13.w
                        mov r18.z, l(0)
                        mov r25.w, l(0)
                        loop 
                          ige r27.w, r25.w, l(8)
                          breakc_nz r27.w
                          dp2 r41.x, icb[r25.w + 0].xyxx, r10.xyxx
                          dp2 r41.y, icb[r25.w + 0].yxyy, r10.xzxx
                          mad r19.xy, r41.xyxx, r14.wwww, r40.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.x, r19.xyzx, t9.xxxx, s13, r18.x
                          mad r18.z, r19.x, l(0.125000), r18.z
                          iadd r25.w, r25.w, l(1)
                        endloop 
                      else 
                        utof r40.z, r13.w
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r18.z, r40.xyzx, t9.xxxx, s13, r18.x
                      endif 
                      mul r13.w, r18.z, r18.z
                      mul r13.w, r18.z, r13.w
                    else 
                      mov r13.w, l(1.000000)
                    endif 
                    mul r15.z, r13.w, r15.z
                  endif 
                endif 
                mad r13.w, -r20.w, r4.w, l(1.000000)
                mul r13.w, r13.w, r13.w
                mad r13.w, -r13.w, l(0.620000), l(0.620000)
                add r13.w, -r20.w, r13.w
                mad r13.w, r4.y, r13.w, r20.w
                mul r13.w, r15.z, r13.w
                mov r32.x, r31.x
                lt r14.w, l(0.000000), r15.w
                mad r19.xyz, r13.wwww, r32.xyzx, r16.xyzx
                dp3_sat r13.w, r2.xyzx, r39.xyzx
                mad r38.xyz, r38.xyzx, r12.wwww, r9.xyzx
                dp3 r12.w, r38.xyzx, r38.xyzx
                rsq r12.w, r12.w
                mul r38.xyz, r12.wwww, r38.xyzx
                dp3 r12.w, r38.xyzx, r9.xyzx
                dp3 r15.w, r2.xyzx, r38.xyzx
                mad r18.x, |r15.w|, r3.w, -|r15.w|
                mad r15.w, |r15.w|, r18.x, l(1.000000)
                mad r18.x, r13.w, r2.w, r4.z
                mul r15.w, r15.w, r15.w
                mul r15.w, r18.x, r15.w
                rcp r15.w, r15.w
                mul r13.w, r24.w, r13.w
                mul r13.w, r13.w, r15.w
                mul r13.w, r15.z, r13.w
                mad r38.xyz, r13.wwww, r32.xyzx, r30.xyzx
                add_sat r12.w, -r12.w, l(1.000000)
                mul r15.z, r12.w, r12.w
                mul r15.z, r15.z, r15.z
                mul r12.w, r12.w, r15.z
                mul r12.w, r12.w, r13.w
                mad r39.xyz, r12.wwww, r32.xyzx, r29.xyzx
                movc r16.xyz, r14.wwww, r19.xyzx, r16.xyzx
                movc r29.xyz, r14.wwww, r39.xyzx, r29.xyzx
                movc r30.xyz, r14.wwww, r38.xyzx, r30.xyzx
              endif 
            endif 
          endif 
          break 
          case l(2)
          mov r19.xy, r34.zwzz
          mov r19.z, r35.w
          add r19.xyz, r19.xyzx, -v7.xyzx
          dp3 r12.w, r19.xyzx, r19.xyzx
          rsq r12.w, r12.w
          mul r38.xyz, r12.wwww, r19.xyzx
          dp3 r13.w, r2.xyzx, r38.xyzx
          mov_sat r14.w, r13.w
          lt r15.z, l(0.000000), r14.w
          if_nz r15.z
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r10.w, l(112), t12.yzwx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r10.w, l(128), t12.zxyw
            mov r40.xyz, r38.xyzx
            mov r40.w, r39.y
            dp4 r15.z, r40.xyzw, r17.xyzw
            lt r15.w, r15.z, l(1.000000)
            if_nz r15.w
              mov r41.xyz, l(1.000000,1.000000,1.000000,0)
              mov r15.w, l(0)
            else 
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r10.w, l(172), t12.yzwx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r10.w, l(188), t12.wxyz
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r10.w, l(204), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.x, r10.w, l(236), t12.xxxx
              add r45.xyz, r31.yzwy, -v7.xyzx
              mul r20.w, r34.x, r34.x
              dp3 r24.w, r45.xyzx, r45.xyzx
              div r20.w, r20.w, r24.w
              min r20.w, r20.w, l(1.000000)
              mad_sat r33.xy, r15.zzzz, r33.xzxx, r33.ywyy
              mul r33.zw, r33.xxxy, r33.xxxy
              mad r33.xy, r33.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
              mul r33.xy, r33.xyxx, r33.zwzz
              mul r20.w, r20.w, r33.x
              mul r20.w, r33.y, r20.w
              mov r35.w, r36.x
              dp4 r33.x, r35.xyzw, r17.xyzw
              mov r45.xyz, r36.yzwy
              mov r45.w, r37.w
              dp4 r33.y, r45.xyzw, r17.xyzw
              div r20.xy, r33.xyxx, r15.zzzz
              lt r15.z, r42.w, l(0.00048828)
              if_nz r15.z
                mov r43.y, r44.x
                mad_sat r33.xy, |r20.xyxx|, r43.zwzz, r43.xyxx
                mul r33.zw, r33.xxxy, r33.xxxy
                mad r33.xy, r33.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
                mul r33.xy, r33.xyxx, r33.zwzz
                mul r15.z, r33.y, r33.x
              else 
                mov r42.w, r43.y
                mul_sat r33.xyzw, |r20.yyxx|, r42.xyzw
                log r33.xyzw, r33.xyzw
                mul r33.xyzw, r33.xyzw, r43.xxxx
                exp r33.xyzw, r33.xyzw
                add r33.xy, r33.zwzz, r33.xyxx
                log r33.xy, r33.xyxx
                mul r33.xy, r33.xyxx, r44.xxxx
                exp r33.xy, r33.xyxx
                mul r24.w, r33.x, r43.z
                mad r25.w, r43.w, r33.y, l(-1.000000)
                mad r24.w, r43.w, r33.y, -r24.w
                div_sat r24.w, r25.w, r24.w
                mul r25.w, r24.w, r24.w
                mad r24.w, r24.w, l(-2.000000), l(3.000000)
                mul r15.z, r24.w, r25.w
              endif 
              mul r15.w, r15.z, r20.w
              and r15.z, r18.x, l(255)
              if_nz r15.z
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyz, r10.w, l(220), t12.xyzx
                dp3 r18.x, r44.yzwy, r20.xyzx
                dp3 r20.x, r33.xyzx, r20.xyzx
                frc r33.x, r18.x
                frc r33.y, r20.x
                iadd r15.z, r15.z, l(-1)
                utof r33.z, r15.z
                sample_l_indexable(texture2darray)(float,float,float,float) r41.xyz, r33.xyzx, t20.xyzw, s2, l(0.000000)
              else 
                mov r41.xyz, l(1.000000,1.000000,1.000000,0)
              endif 
            endif 
            mov r31.yz, r32.yyzy
            mul r20.xyw, r41.xyxz, r31.xyxz
            lt r15.z, l(0.000000), r15.w
            if_nz r15.z
              ubfe r15.z, l(3), l(27), r32.w
              ine r15.z, r15.z, l(1)
              if_nz r15.z
                mad r15.z, |r13.w|, l(-0.200000), l(0.400000)
                mad r21.xyz, r2.xyzx, r15.zzzz, v7.xyzx
                mov r38.xyz, r37.xyzx
                dp4 r15.z, r38.xyzw, r21.xyzw
                dp4 r18.x, r40.xyzw, r21.xyzw
                ge r24.w, r18.x, r15.z
                if_nz r24.w
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.y, r10.w, l(144), t12.xxxx
                  mov r35.w, r36.x
                  dp4 r31.x, r35.xyzw, r21.xyzw
                  mov r37.xyz, r36.yzwy
                  dp4 r31.y, r37.xyzw, r21.xyzw
                  div r21.xy, r31.xyxx, r18.xxxx
                  mad_sat r21.xy, r21.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  mad r21.xy, r21.xyxx, r39.zwzz, r39.xyxx
                  div r10.w, r15.z, r18.x
                  max r10.w, r10.w, l(0.00006104)
                  and r15.z, r32.w, l(0x0000ffff)
                  if_nz r8.w
                    utof r31.z, r15.z
                    mov r18.x, l(0)
                    mov r24.w, l(0)
                    loop 
                      ige r25.w, r24.w, l(8)
                      breakc_nz r25.w
                      dp2 r33.x, icb[r24.w + 0].xyxx, r24.xyxx
                      dp2 r33.y, icb[r24.w + 0].yxyy, r24.xzxx
                      mad r31.xy, r33.xyxx, r34.yyyy, r21.xyxx
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r25.w, r31.xyzx, t9.xxxx, s13, r10.w
                      mad r18.x, r25.w, l(0.125000), r18.x
                      iadd r24.w, r24.w, l(1)
                    endloop 
                  else 
                    utof r21.z, r15.z
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r18.x, r21.xyzx, t9.xxxx, s13, r10.w
                  endif 
                  mul r10.w, r18.x, r18.x
                  mul r10.w, r18.x, r10.w
                else 
                  mov r10.w, l(1.000000)
                endif 
              else 
                mov r10.w, l(1.000000)
              endif 
              mul r10.w, r10.w, r15.w
              lt r15.z, l(0.000000), r10.w
              if_nz r15.z
                mul r15.z, r3.w, r32.x
                mul r15.z, r14.w, r15.z
                ubfe r15.w, l(4), l(16), r32.w
                ult r21.x, l(0), r15.w
                and r21.x, r0.x, r21.x
                if_nz r21.x
                  iadd r15.w, r15.w, cb2[0].x
                  iadd r15.w, r15.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r21.x, r15.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r15.w, l(68), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r15.w, l(84), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r15.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r15.w, l(116), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r15.w, l(132), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r15.w, l(148), t12.xyzw
                  mad r21.y, |r13.w|, l(-0.200000), l(0.400000)
                  mad r22.xyz, r2.xyzx, r21.yyyy, v7.xyzx
                  dp4 r31.x, r31.xyzw, r22.xyzw
                  dp4 r31.y, r33.xyzw, r22.xyzw
                  dp4 r21.y, r34.xyzw, r22.xyzw
                  dp4 r21.z, r35.xyzw, r22.xyzw
                  lt r22.x, r21.z, r21.y
                  div r22.yz, r31.xxyx, r21.zzzz
                  mad r22.yz, r22.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
                  add r22.yz, r37.zzwz, r22.yyzy
                  mul r22.yz, r37.xxyx, r22.yyzy
                  div r31.xy, r21.xxxx, r36.xzxx
                  add r31.zw, -r31.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                  ge r31.zw, r22.yyyz, r31.zzzw
                  ge r31.xy, r31.xyxx, r22.yzyy
                  or r31.xy, r31.xyxx, r31.zwzz
                  or r24.w, r31.y, r31.x
                  or r22.x, r22.x, r24.w
                  if_z r22.x
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r22.x, r15.w, l(28), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xy, r15.w, l(164), t12.xyxx
                    mov_sat r22.yz, r22.yyzy
                    mad r32.xy, r22.yzyy, r36.xzxx, r36.ywyy
                    mul r15.w, r21.z, r31.y
                    mad r21.y, r31.x, r21.z, r21.y
                    div r15.w, r21.y, r15.w
                    max r15.w, r15.w, l(0.00006104)
                    and r21.y, r22.x, l(0x0000ffff)
                    if_nz r8.w
                      utof r22.z, r21.y
                      mov r21.z, l(0)
                      mov r24.w, l(0)
                      loop 
                        ige r25.w, r24.w, l(8)
                        breakc_nz r25.w
                        dp2 r31.x, icb[r24.w + 0].xyxx, r25.xyxx
                        dp2 r31.y, icb[r24.w + 0].yxyy, r25.xzxx
                        mad r22.xy, r31.xyxx, r21.xxxx, r32.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.x, r22.xyzx, t9.xxxx, s13, r15.w
                        mad r21.z, r22.x, l(0.125000), r21.z
                        iadd r24.w, r24.w, l(1)
                      endloop 
                    else 
                      utof r32.z, r21.y
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.z, r32.xyzx, t9.xxxx, s13, r15.w
                    endif 
                    mul r15.w, r21.z, r21.z
                    mul r15.w, r21.z, r15.w
                  else 
                    mov r15.w, l(1.000000)
                  endif 
                  mul r10.w, r10.w, r15.w
                else 
                  ubfe r15.w, l(4), l(20), r32.w
                  ult r21.x, l(0), r15.w
                  and r21.x, r1.w, r21.x
                  if_nz r21.x
                    iadd r15.w, r15.w, cb2[0].x
                    iadd r15.w, r15.w, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r21.x, r15.w, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r15.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r15.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r15.w, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r15.w, l(116), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r15.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r15.w, l(148), t12.xyzw
                    mad r21.y, |r13.w|, l(-0.200000), l(0.400000)
                    mad r23.xyz, r2.xyzx, r21.yyyy, v7.xyzx
                    dp4 r22.x, r31.xyzw, r23.xyzw
                    dp4 r22.y, r32.xyzw, r23.xyzw
                    dp4 r21.y, r33.xyzw, r23.xyzw
                    dp4 r22.z, r34.xyzw, r23.xyzw
                    lt r23.x, r22.z, r21.y
                    div r22.xy, r22.xyxx, r22.zzzz
                    mad r22.xy, r22.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r22.xy, r36.zwzz, r22.xyxx
                    mul r22.xy, r36.xyxx, r22.xyxx
                    div r23.yz, r21.xxxx, r35.xxzx
                    add r31.xy, -r23.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
                    ge r31.xy, r22.xyxx, r31.xyxx
                    ge r23.yz, r23.yyzy, r22.xxyx
                    or r23.yz, r23.yyzy, r31.xxyx
                    or r23.y, r23.z, r23.y
                    or r23.x, r23.x, r23.y
                    if_z r23.x
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.x, r15.w, l(28), t12.xxxx
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.yz, r15.w, l(164), t12.xxyx
                      mov_sat r22.xy, r22.xyxx
                      mad r31.xy, r22.xyxx, r35.xzxx, r35.ywyy
                      mul r15.w, r22.z, r23.z
                      mad r21.y, r23.y, r22.z, r21.y
                      div r15.w, r21.y, r15.w
                      max r15.w, r15.w, l(0.00006104)
                      and r21.y, r23.x, l(0x0000ffff)
                      if_nz r8.w
                        utof r22.z, r21.y
                        mov r23.xy, l(0,0,0,0)
                        loop 
                          ige r23.z, r23.y, l(8)
                          breakc_nz r23.z
                          dp2 r32.x, icb[r23.y + 0].xyxx, r26.xyxx
                          dp2 r32.y, icb[r23.y + 0].yxyy, r26.xzxx
                          mad r22.xy, r32.xyxx, r21.xxxx, r31.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.x, r22.xyzx, t9.xxxx, s13, r15.w
                          mad r23.x, r22.x, l(0.125000), r23.x
                          iadd r23.y, r23.y, l(1)
                        endloop 
                      else 
                        utof r31.z, r21.y
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.x, r31.xyzx, t9.xxxx, s13, r15.w
                      endif 
                      mul r15.w, r23.x, r23.x
                      mul r15.w, r23.x, r15.w
                    else 
                      mov r15.w, l(1.000000)
                    endif 
                    mul r10.w, r10.w, r15.w
                  endif 
                endif 
                mad r15.w, -r14.w, r4.w, l(1.000000)
                mul r15.w, r15.w, r15.w
                mad r15.w, -r15.w, l(0.620000), l(0.620000)
                add r15.w, -r14.w, r15.w
                mad r15.w, r4.y, r15.w, r14.w
                mul r15.w, r10.w, r15.w
                lt r13.w, l(0.000000), r13.w
                mad r22.xyz, r15.wwww, r20.xywx, r16.xyzx
                mad r19.xyz, r19.xyzx, r12.wwww, r9.xyzx
                dp3 r12.w, r19.xyzx, r19.xyzx
                rsq r12.w, r12.w
                mul r19.xyz, r12.wwww, r19.xyzx
                dp3 r12.w, r19.xyzx, r9.xyzx
                dp3 r15.w, r2.xyzx, r19.xyzx
                mad r19.x, |r15.w|, r3.w, -|r15.w|
                mad r15.w, |r15.w|, r19.x, l(1.000000)
                mad r14.w, r14.w, r2.w, r4.z
                mul r15.w, r15.w, r15.w
                mul r14.w, r14.w, r15.w
                rcp r14.w, r14.w
                mul r14.w, r15.z, r14.w
                mul r10.w, r10.w, r14.w
                mul r10.w, r10.w, l(0.250000)
                mad r19.xyz, r10.wwww, r20.xywx, r30.xyzx
                add_sat r12.w, -r12.w, l(1.000000)
                mul r14.w, r12.w, r12.w
                mul r14.w, r14.w, r14.w
                mul r12.w, r12.w, r14.w
                mul r10.w, r10.w, r12.w
                mad r20.xyw, r10.wwww, r20.xyxw, r29.xyxz
                movc r16.xyz, r13.wwww, r22.xyzx, r16.xyzx
                movc r29.xyz, r13.wwww, r20.xywx, r29.xyzx
                movc r30.xyz, r13.wwww, r19.xyzx, r30.xyzx
              endif 
            endif 
          endif 
          break 
          default 
          break 
        endswitch 
      endif 
    endif 
  endloop 
  mov r11.yzw, r16.xxyz
  mov r27.xyz, r29.xyzx
  mov r28.xyz, r30.xyzx
  iadd r6.z, r6.z, l(32)
endloop 
add r2.xyz, -r0.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r2.xyz, r2.xyzx, r27.xyzx
mad r0.xyz, r28.xyzx, r0.yzwy, r2.xyzx
mad r0.xyz, r11.yzwy, r1.xyzx, r0.xyzx
dp3 r0.w, r0.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
max r0.w, r0.w, l(0.000100)
max r0.w, r0.w, cb1[85].x
mul r1.xyz, r0.wwww, r3.xyzx
movc r1.xyz, cb0[19].wwww, r1.xyzx, r3.xyzx
add r0.xyz, r0.xyzx, r1.xyzx
lt r0.w, l(0.000000), cb2[9].z
if_nz r0.w
  dp3 r0.w, v7.xyzx, v7.xyzx
  rsq r1.x, r0.w
  mul r1.xyz, r1.xxxx, v7.xyzx
  sqrt r0.w, r0.w
  lt r1.w, l(0.000000), cb2[13].w
  if_nz r1.w
    mad r2.xy, r0.wwww, cb2[15].xyxx, cb2[14].zwzz
    mul r2.xy, r2.xyxx, cb2[16].xyxx
    lt r1.w, l(0.010000), |v7.z|
    mul r2.zw, v7.zzzz, cb2[15].zzzw
    mul r3.xy, r2.zwzz, l(-1.442695, -1.442695, 0.000000, 0.000000)
    exp r3.xy, r3.xyxx
    add r3.xy, -r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    div r2.zw, r3.xxxy, r2.zzzw
    mul r2.zw, r2.zzzw, r2.xxxy
    movc r2.xy, r1.wwww, r2.zwzz, r2.xyxx
    mul r2.xzw, r2.xxxx, cb2[12].xxyz
    exp r2.xzw, r2.xxzw
    mul r3.xyz, r2.yyyy, cb2[12].xyzx
    exp r3.xyz, r3.xyzx
    add r3.xyz, -r2.xzwx, r3.xyzx
    mad r2.xyz, cb2[13].wwww, r3.xyzx, r2.xzwx
  else 
    mad r1.w, r0.w, cb2[15].x, cb2[14].z
    mul r1.w, r1.w, cb2[16].x
    lt r2.w, l(0.010000), |v7.z|
    mul r3.x, v7.z, cb2[15].z
    mul r3.y, r3.x, l(-1.442695)
    exp r3.y, r3.y
    add r3.y, -r3.y, l(1.000000)
    div r3.x, r3.y, r3.x
    mul r3.x, r1.w, r3.x
    movc r1.w, r2.w, r3.x, r1.w
    mul r3.xyz, r1.wwww, cb2[12].xyzx
    exp r2.xyz, r3.xyzx
  endif 
  mad r2.xyz, r2.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r2.xyz, r2.xyzx, -cb2[9].zzzz
  dp3 r1.x, cb2[7].yzwy, -r1.xyzx
  mad r1.y, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r1.z, cb2[8].w, -r1.x, l(1.000000)
  mul r1.z, r1.z, r1.z
  mul r1.z, r1.z, l(12.566371)
  div r1.y, r1.y, r1.z
  add r0.w, r0.w, -cb2[10].w
  mul_sat r0.w, r0.w, cb2[11].w
  mul r0.w, r0.w, r1.y
  mov_sat r1.x, r1.x
  mad r1.x, r1.x, r1.x, l(1.000000)
  mad r1.x, r1.x, l(0.05968310), l(-1.000000)
  mad r1.x, cb2[8].z, r1.x, l(1.000000)
  mul r1.yzw, r0.wwww, cb2[11].xxyz
  mad r1.xyz, r1.xxxx, cb2[10].xyzx, r1.yzwy
  mul r1.xyz, r1.xyzx, cb2[9].wwww
  add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r1.xyz, r1.xyzx, r3.xyzx
  mad r1.xyz, r0.xyzx, r2.xyzx, r1.xyzx
else 
  mul r0.w, v7.z, cb2[6].x
  mad r1.w, cb2[6].x, v7.z, cb2[5].x
  lt r2.x, |r0.w|, l(0.000100)
  min r2.y, r1.w, l(64.000000)
  mul r2.y, r2.y, l(1.442695)
  exp r2.y, r2.y
  mov_sat r2.z, cb2[6].z
  lt r2.w, r1.w, l(0.000000)
  add r1.w, r1.w, l(1.000000)
  movc r1.w, r2.w, r2.y, r1.w
  add r1.w, r1.w, -cb2[6].z
  movc r0.w, r2.x, l(1.000000), r0.w
  div r0.w, r1.w, r0.w
  movc r0.w, r2.x, r2.z, r0.w
  mul r0.w, r0.w, cb2[5].z
  dp3 r1.w, v7.xyzx, v7.xyzx
  sqrt r2.x, r1.w
  mad r0.w, r0.w, r2.x, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  rsq r1.w, r1.w
  mul r2.xyz, r1.wwww, v7.xyzx
  dp3 r1.w, cb2[7].yzwy, r2.xyzx
  mad_sat r1.w, cb2[8].y, r1.w, cb2[8].x
  add r2.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r2.xyzw, r1.wwww, r2.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r2.w
  add r2.xyz, -r0.xyzx, r2.xyzx
  mad r1.xyz, r0.wwww, r2.xyzx, r0.xyzx
endif 
mul r0.xyz, r1.xyzx, cb1[85].yyyy
ge r1.xyz, r0.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.xyz, r0.xyzx, r1.xyzx
min o0.xyz, r0.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
ret 
// Approximately 2301 instruction slots used
