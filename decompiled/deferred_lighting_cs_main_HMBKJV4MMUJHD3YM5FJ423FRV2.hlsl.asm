//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:23:28 2021
//
//
// Buffer Definitions: 
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4 [unused]
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// cbuffer LightingPackCBuffer
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } lightConstantsCB[273];           // Offset:    0 Size: 65520
//
// }
//
// cbuffer RefProbePackCBuffer
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } refProbeConstantsCB[273];        // Offset:    0 Size: 61152
//
// }
//
// cbuffer RefProbeBlendPackCBuffer
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } refProbeAttenuationConstantsCB[682];// Offset:    0 Size: 65472
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for gPermutedTilingBuffer
// {
//
//   struct PermutedTilingBuffer
//   {
//       
//       uint2 data;                    // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:     8
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// samplerPointClamp                 sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// GBufferDiffuseColor               texture  float4          2d             t0      1 
// GBufferNormalAndGloss             texture  float4          2d             t1      1 
// GBufferSpecularColorAndOcclusion    texture  float4          2d             t2      1 
// GBufferDepth                      texture   float          2d             t4      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// gDownsampledScene                 texture  float4          2d            t21      1 
// gMotionVectors                    texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// gPermutedTilingBuffer             texture  struct         r/o            t25      1 
// gSSAOTexture                      texture   float          2d            t27      1 
// gSSAODepthTexture                 texture   float          2d            t28      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// litBuffer                             UAV  float3          2d             u0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
// LightingPackCBuffer               cbuffer      NA          NA            cb9      1 
// RefProbePackCBuffer               cbuffer      NA          NA           cb10      1 
// RefProbeBlendPackCBuffer          cbuffer      NA          NA           cb11      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB1[86], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_constantbuffer CB9[4095], dynamicIndexed
dcl_constantbuffer CB10[3822], dynamicIndexed
dcl_constantbuffer CB11[4092], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s4, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_structured t25, 8
dcl_resource_texture2d (float,float,float,float) t27
dcl_resource_texture2d (float,float,float,float) t28
dcl_resource_texture2darray (float,float,float,float) t31
dcl_uav_typed_texture2d (float,float,float,float) u0
dcl_input vThreadGroupID.x
dcl_input vThreadIDInGroup.xy
dcl_temps 39
dcl_thread_group 8, 8, 1
imad r0.x, cb2[57].x, l(15), vThreadGroupID.x
ld_structured_indexable(structured_buffer, stride=8)(mixed,mixed,mixed,mixed) r0.xy, r0.x, l(0), t25.xyxx
and r0.zw, r0.xxxy, l(0, 0, 4095, 4095)
imad r1.xy, r0.zwzz, l(8, 8, 0, 0), vThreadIDInGroup.xyxx
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.xyww, t1.xyzw
ftou r0.zw, cb1[44].xxxy
ult r0.zw, r1.xxxy, r0.zzzw
and r0.z, r0.w, r0.z
lt r0.w, l(0.000000), r2.z
and r0.z, r0.w, r0.z
if_z r0.z
  ret 
endif 
ge r0.w, r2.z, l(0.500000)
ld_indexable(texture2d)(float,float,float,float) r3.x, r1.xyww, t4.xyzw
ld_indexable(texture2d)(float,float,float,float) r3.yzw, r1.xyww, t0.wxyz
ld_indexable(texture2d)(float,float,float,float) r4.xyzw, r1.xyww, t2.xyzw
ld_aoffimmi_indexable(-1,0,0)(texture2d)(float,float,float,float) r5.xyz, r1.xyww, t2.xywz
ld_aoffimmi_indexable(0,-1,0)(texture2d)(float,float,float,float) r6.xyz, r1.xyww, t2.xywz
ld_aoffimmi_indexable(1,0,0)(texture2d)(float,float,float,float) r7.xyz, r1.xyww, t2.xywz
ld_aoffimmi_indexable(0,1,0)(texture2d)(float,float,float,float) r8.xyz, r1.xyzw, t2.xywz
utof r1.zw, r1.yyyx
add r9.xy, r1.wzww, l(0.500000, 0.500000, 0.000000, 0.000000)
ge r10.x, r3.x, l(0.984375)
mul r5.w, r3.x, l(1.01587307)
mad r3.x, r3.x, l(64.000000), l(-63.000000)
movc r3.x, r10.x, r3.x, r5.w
max r3.x, r3.x, l(0.00000001)
rcp r10.y, r3.x
and r9.zw, r0.zzzz, r10.xxxy
add r10.xy, r9.xyxx, -cb1[71].xyxx
mul r10.xy, r10.xyxx, cb1[44].zwzz
mad r10.xy, r10.xyxx, l(2.000000, -2.000000, 0.000000, 0.000000), l(-1.000000, 1.000000, 0.000000, 0.000000)
mul r11.x, r10.x, cb1[12].x
mul r11.y, r10.y, cb1[13].y
mov r11.z, l(1.000000)
mul r10.xyz, r9.wwww, r11.xyzx
mul r11.xyz, r10.yyyy, cb1[17].xyzx
mad r10.xyw, r10.xxxx, cb1[16].xyxz, r11.xyxz
mad r10.xyz, r10.zzzz, cb1[18].xyzx, r10.xywx
mad r0.z, r2.w, l(3.000000), l(0.500000)
ftou r0.z, r0.z
mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r2.xy, r2.xyxx, l(0.850000, 0.850000, 0.000000, 0.000000)
dp2 r2.w, r2.xyxx, r2.xyxx
add r11.zw, -r2.wwww, l(0.000000, 0.000000, 2.000000, 1.000000)
sqrt r2.w, r11.z
mul r11.xy, r2.wwww, r2.xyxx
and r12.xyzw, r0.zzzz, l(2, 1, 2, 1)
movc r12.xyzw, r12.zwxy, l(-1.000000,-1.000000,1,1), l(1.000000,1.000000,0,0)
xor r0.z, r12.w, r12.z
movc r12.z, r0.z, l(-1.000000), l(1.000000)
mul r2.xyw, r12.xyxz, l(-1.000000, 0.000000, 0.000000, 1.000000)
mul r13.xyz, r12.xyzx, l(1.000000, -2.000000, 1.000000, 0.000000)
mul r11.xyz, r11.xywx, l(0.40824831, 0.70710677, 0.57735026, 0.000000)
mul r2.xyw, r2.xyxw, r11.yyyy
mad r2.xyw, r13.xyxz, r11.xxxx, r2.xyxw
mad r11.xyz, r12.xyzx, r11.zzzz, r2.xywx
movc r0.z, r0.w, l(-0.500000), l(-0.00146628)
add r0.z, r0.z, r2.z
mul_sat r2.y, r0.z, l(2.00982332)
dp3 r0.z, -r10.xyzx, -r10.xyzx
rsq r0.z, r0.z
mul r12.xyz, r0.zzzz, -r10.xyzx
dp2 r2.z, r1.wzww, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r2.z, r2.z
mul r2.z, r2.z, l(52.982918)
frc r2.z, r2.z
mad r2.z, r2.z, l(6.28318548), cb1[70].w
sincos r13.x, r14.x, r2.z
dp2 r1.z, r1.zwzz, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r1.z, r1.z
mul r1.z, r1.z, l(52.982918)
frc r1.z, r1.z
mad r1.z, r1.z, l(6.28318548), cb1[70].w
sincos r3.x, r15.x, r1.z
dp3_sat r2.x, r11.xyzx, r12.xyzx
dp3 r1.z, -r12.xyzx, r11.xyzx
add r1.z, r1.z, r1.z
mad r16.xyz, r11.xyzx, -r1.zzzz, -r12.xyzx
mul r1.z, r2.y, l(17.000000)
exp r1.z, r1.z
add r1.z, r1.z, l(2.000000)
div r1.z, l(2.000000), r1.z
sqrt r1.w, r1.z
mul r2.zw, r9.xxxy, cb1[44].zzzw
sample_l_indexable(texture2d)(float,float,float,float) r2.z, r2.zwzz, t27.yzxw, s4, l(0.000000)
mul r2.w, r2.z, r4.z
lt r5.w, l(0.83333331), r2.y
lt r6.w, l(60.000000), r9.w
and r5.w, r5.w, r6.w
if_nz r5.w
  mul r15.yzw, r10.yyyy, cb1[9].xxyw
  mad r15.yzw, r10.xxxx, cb1[8].xxyw, r15.yyzw
  mad r15.yzw, r10.zzzz, cb1[10].xxyw, r15.yyzw
  add r15.yzw, r15.yyzw, cb1[11].xxyw
  mad r17.xyz, r16.xyzx, l(2000.000000, 2000.000000, 2000.000000, 0.000000), r10.xyzx
  mul r18.xyz, r17.yyyy, cb1[9].xywx
  mad r17.xyw, r17.xxxx, cb1[8].xyxw, r18.xyxz
  mad r17.xyz, r17.zzzz, cb1[10].xywx, r17.xywx
  add r17.xyz, r17.xyzx, cb1[11].xywx
  ge r5.w, r17.z, r15.w
  if_nz r5.w
    mul r9.xy, cb1[44].xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
    rcp r18.z, r15.w
    mul r18.xy, r15.yzyy, r18.zzzz
    rcp r19.z, r17.z
    mul r19.xy, r17.xyxx, r19.zzzz
    lt r13.zw, l(0.000000, 0.000000, 1.000000, 1.000000), r19.xxxy
    mad r20.xyzw, r17.xxyy, r19.zzzz, l(-1.000000, 1.000000, -1.000000, 1.000000)
    mad r21.xyzw, r17.xxyy, r19.zzzz, -r18.xxyy
    lt r15.yz, r19.xxyx, l(0.000000, -1.000000, -1.000000, 0.000000)
    div r20.xyzw, r20.xyzw, r21.xyzw
    and r15.yz, r15.yyzy, r20.yywy
    movc r13.zw, r13.zzzw, r20.xxxz, r15.yyyz
    max r5.w, r13.w, r13.z
    add r17.xyw, r18.xyxz, -r19.xyxz
    mad r17.xyw, r5.wwww, r17.xyxw, r19.xyxz
    mad r13.zw, r18.xxxy, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
    mad r15.yz, r17.xxyx, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
    add r13.zw, r13.zzzw, -r15.yyyz
    mul r13.zw, r9.xxxy, |r13.zzzw|
    max r5.w, r13.w, r13.z
    max r5.w, r5.w, l(1.000000)
    rcp r5.w, r5.w
    mad r18.xyz, r18.xyzx, l(0.500000, -0.500000, 1.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    mad r19.xyw, r17.xyxw, l(0.500000, -0.500000, 0.000000, 1.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    add r20.xyz, -r18.xyzx, r19.xywx
    mad r18.xyz, r5.wwww, r20.xyzx, r18.xyzx
    add r19.xyw, -r18.xyxz, r19.xyxw
    mul r20.xyz, r19.xywx, l(0.031250, 0.031250, 0.031250, 0.000000)
    mul r9.xy, r9.xyxx, |r20.xyxx|
    max r5.w, r9.y, r9.x
    log r5.w, r5.w
    round_pi r5.w, r5.w
    max r5.w, r5.w, l(0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r18.xyxx, t28.yzwx, s1, r5.w
    mad r21.xyz, r19.xywx, l(0.031250, 0.031250, 0.031250, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r5.w
    min r6.w, |r6.w|, |r7.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    and r8.w, r6.w, l(1)
    mad r21.xyz, r19.xywx, l(0.062500, 0.062500, 0.062500, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r9.x, r21.xyxx, t28.xyzw, s1, r5.w
    min r7.w, |r7.w|, |r9.x|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    bfi r6.w, l(1), l(0), r6.w, l(2)
    movc r6.w, r7.w, r6.w, r8.w
    mad r21.xyz, r19.xywx, l(0.093750, 0.093750, 0.093750, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r5.w
    min r8.w, |r9.x|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.x, r6.w, l(4)
    movc r6.w, r8.w, r9.x, r6.w
    mad r21.xyz, r19.xywx, l(0.125000, 0.125000, 0.125000, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r5.w
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.x, r6.w, l(8)
    movc r6.w, r7.w, r9.x, r6.w
    mad r21.xyz, r19.xywx, l(0.156250, 0.156250, 0.156250, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r5.w
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.x, r6.w, l(16)
    movc r6.w, r8.w, r9.x, r6.w
    mad r21.xyz, r19.xywx, l(0.187500, 0.187500, 0.187500, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r5.w
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.x, r6.w, l(32)
    movc r6.w, r7.w, r9.x, r6.w
    mad r21.xyz, r19.xywx, l(0.218750, 0.218750, 0.218750, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r5.w
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.x, r6.w, l(64)
    movc r6.w, r8.w, r9.x, r6.w
    mad r21.xyz, r19.xywx, l(0.250000, 0.250000, 0.250000, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r5.w
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.x, r6.w, l(128)
    movc r6.w, r7.w, r9.x, r6.w
    mad r21.xyz, r19.xywx, l(0.281250, 0.281250, 0.281250, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r5.w
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.x, r6.w, l(256)
    movc r6.w, r8.w, r9.x, r6.w
    mad r21.xyz, r19.xywx, l(0.312500, 0.312500, 0.312500, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r5.w
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.x, r6.w, l(512)
    movc r6.w, r7.w, r9.x, r6.w
    mad r21.xyz, r19.xywx, l(0.343750, 0.343750, 0.343750, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r5.w
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.x, r6.w, l(1024)
    movc r6.w, r8.w, r9.x, r6.w
    mad r21.xyz, r19.xywx, l(0.375000, 0.375000, 0.375000, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r5.w
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.x, r6.w, l(2048)
    movc r6.w, r7.w, r9.x, r6.w
    mad r21.xyz, r19.xywx, l(0.406250, 0.406250, 0.406250, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r5.w
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.x, r6.w, l(4096)
    movc r6.w, r8.w, r9.x, r6.w
    mad r21.xyz, r19.xywx, l(0.437500, 0.437500, 0.437500, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r5.w
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.x, r6.w, l(8192)
    movc r6.w, r7.w, r9.x, r6.w
    mad r21.xyz, r19.xywx, l(0.468750, 0.468750, 0.468750, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r5.w
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.x, r6.w, l(0x00004000)
    movc r6.w, r8.w, r9.x, r6.w
    mad r21.xyz, r19.xywx, l(0.500000, 0.500000, 0.500000, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r5.w
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.x, r6.w, l(0x00008000)
    movc r6.w, r7.w, r9.x, r6.w
    mad r21.xyz, r19.xywx, l(0.531250, 0.531250, 0.531250, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r5.w
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.x, r6.w, l(0x00010000)
    movc r6.w, r8.w, r9.x, r6.w
    mad r21.xyz, r19.xywx, l(0.562500, 0.562500, 0.562500, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r5.w
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.x, r6.w, l(0x00020000)
    movc r6.w, r7.w, r9.x, r6.w
    mad r21.xyz, r19.xywx, l(0.593750, 0.593750, 0.593750, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r5.w
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.x, r6.w, l(0x00040000)
    movc r6.w, r8.w, r9.x, r6.w
    mad r21.xyz, r19.xywx, l(0.625000, 0.625000, 0.625000, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r5.w
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.x, r6.w, l(0x00080000)
    movc r6.w, r7.w, r9.x, r6.w
    mad r21.xyz, r19.xywx, l(0.656250, 0.656250, 0.656250, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r5.w
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.x, r6.w, l(0x00100000)
    movc r6.w, r8.w, r9.x, r6.w
    mad r21.xyz, r19.xywx, l(0.687500, 0.687500, 0.687500, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r5.w
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.x, r6.w, l(0x00200000)
    movc r6.w, r7.w, r9.x, r6.w
    mad r21.xyz, r19.xywx, l(0.718750, 0.718750, 0.718750, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r5.w
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.x, r6.w, l(0x00400000)
    movc r6.w, r8.w, r9.x, r6.w
    mad r21.xyz, r19.xywx, l(0.750000, 0.750000, 0.750000, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r5.w
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.x, r6.w, l(0x00800000)
    movc r6.w, r7.w, r9.x, r6.w
    mad r21.xyz, r19.xywx, l(0.781250, 0.781250, 0.781250, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r5.w
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.x, r6.w, l(0x01000000)
    movc r6.w, r8.w, r9.x, r6.w
    mad r21.xyz, r19.xywx, l(0.812500, 0.812500, 0.812500, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r5.w
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.x, r6.w, l(0x02000000)
    movc r6.w, r7.w, r9.x, r6.w
    mad r21.xyz, r19.xywx, l(0.843750, 0.843750, 0.843750, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r5.w
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.x, r6.w, l(0x04000000)
    movc r6.w, r8.w, r9.x, r6.w
    mad r21.xyz, r19.xywx, l(0.875000, 0.875000, 0.875000, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r5.w
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.x, r6.w, l(0x08000000)
    movc r6.w, r7.w, r9.x, r6.w
    mad r21.xyz, r19.xywx, l(0.906250, 0.906250, 0.906250, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r5.w
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.x, r6.w, l(0x10000000)
    movc r6.w, r8.w, r9.x, r6.w
    mad r21.xyz, r19.xywx, l(0.937500, 0.937500, 0.937500, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r5.w
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.x, r6.w, l(0x20000000)
    movc r6.w, r7.w, r9.x, r6.w
    mad r21.xyz, r19.xywx, l(0.968750, 0.968750, 0.968750, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r5.w
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.x, r6.w, l(0x40000000)
    movc r6.w, r8.w, r9.x, r6.w
    sample_l_indexable(texture2d)(float,float,float,float) r5.w, r15.yzyy, t28.yzwx, s1, r5.w
    min r5.w, |r7.w|, |r5.w|
    mul r5.w, r17.w, r5.w
    lt r5.w, r5.w, l(1.000000)
    iadd r7.w, r6.w, l(0x80000000)
    movc r5.w, r5.w, r7.w, r6.w
    mov r21.w, l(-1)
    mov r22.z, l(-1)
    mov r9.xy, l(0,0,0,0)
    mov r6.w, l(0)
    mov r7.w, r5.w
    mov r8.w, r19.z
    mov r23.yz, l(0,0,0,0)
    mov r21.z, l(0)
    mov r12.w, l(0)
    loop 
      breakc_z r7.w
      firstbit_lo r21.y, r7.w
      ishl r13.z, l(1), r21.y
      xor r21.x, r7.w, r13.z
      utof r13.w, r21.y
      mul r13.w, r13.w, l(0.031250)
      mad r17.xyw, r19.xyxw, r13.wwww, r18.xyxz
      sample_l_indexable(texture2d)(float,float,float,float) r13.w, r17.xyxx, t28.yzwx, s1, l(0.000000)
      mul r14.w, r17.w, |r13.w|
      lt r14.w, r14.w, l(1.000000)
      if_nz r14.w
        if_nz r21.z
          lt r14.w, r15.w, |r13.w|
          lt r15.y, r8.w, r17.w
          and r14.w, r14.w, r15.y
          movc r15.yz, r14.wwww, r17.xxyx, r9.xxyx
          mov r21.z, r17.w
          mov r23.x, r8.w
          movc r24.xyz, r14.wwww, r21.zxyz, r23.xyzx
          mov r7.w, r21.x
          mov r21.z, l(-1)
          mov r9.xy, r15.yzyy
          mov r8.w, r24.x
          mov r23.yz, r24.yyzy
          continue 
        endif 
        mov r14.w, r23.y
        mov r15.y, l(0)
      else 
        not r13.z, r13.z
        and r14.w, r13.z, r23.y
        mov r15.y, r21.z
      endif 
      if_nz r12.w
        mov r7.w, r21.x
        mov r23.y, r14.w
        mov r21.z, r15.y
        mov r12.w, l(-1)
        continue 
      endif 
      mov r24.xy, r9.xyxx
      mov r13.z, r6.w
      mov r15.z, r8.w
      mov r23.y, r14.w
      mov r23.x, r23.z
      mov r21.z, r15.y
      mov r22.w, r12.w
      mov r18.w, r17.w
      mov r20.w, |r13.w|
      mov r23.w, l(0)
      loop 
        ige r24.z, r23.w, l(4)
        breakc_nz r24.z
        itof r24.z, r23.w
        add r24.z, r24.z, l(1.000000)
        mul r24.z, r24.z, l(0.250000)
        mad r25.xyz, r20.xyzx, r24.zzzz, r17.xywx
        sample_l_indexable(texture2d)(float,float,float,float) r24.z, r25.xyxx, t28.yzxw, s1, l(0.000000)
        mul r24.w, r25.z, |r24.z|
        lt r24.w, r24.w, l(1.000000)
        if_nz r24.w
          lt r24.w, r15.w, |r24.z|
          add r25.w, -r18.w, r25.z
          add r26.x, -r20.w, |r24.z|
          mul r26.y, r18.w, r25.z
          mul r26.x, r26.y, |r26.x|
          lt r25.w, r26.x, |r25.w|
          and r26.x, r24.w, r25.w
          lt r26.y, r15.z, r25.z
          and r26.z, r24.w, r26.y
          movc r22.xy, r26.zzzz, r21.xyxx, r23.yxyy
          or r25.w, r25.w, r26.y
          and r24.w, r24.w, r25.w
          movc r25.xy, r24.wwww, r25.xyxx, r24.xyxx
          movc r25.w, r26.x, l(1.000000), r13.z
          movc r24.w, r24.w, r25.z, r15.z
          movc r26.xyzw, r26.xxxx, r21.xyzw, r22.xyzw
          mov r13.z, r25.w
          mov r24.xy, r25.xyxx
          mov r15.z, r24.w
          mov r23.xy, r26.yxyy
          mov r21.z, r26.z
          mov r22.w, r26.w
          break 
        endif 
        mov r18.w, r25.z
        mov r20.w, |r24.z|
        iadd r23.w, r23.w, l(1)
      endloop 
      mov r9.xy, r24.xyxx
      mov r6.w, r13.z
      mov r8.w, r15.z
      mov r23.yz, r23.yyxy
      mov r12.w, r22.w
      mov r7.w, r21.x
    endloop 
    rcp r5.w, r8.w
    add r5.w, -r15.w, r5.w
    add r7.w, -r15.w, r17.z
    div r5.w, |r5.w|, |r7.w|
    min r17.x, r5.w, l(1.000000)
    countbits r5.w, r23.y
    utof r5.w, r5.w
    add r5.w, r5.w, l(1.000000)
    iadd r7.w, -r23.z, l(32)
    utof r7.w, r7.w
    div r5.w, r5.w, r7.w
    min r17.y, r5.w, l(1.000000)
  else 
    mov r17.xy, l(1.000000,0,0,0)
    mov r6.w, l(0)
  endif 
  add r5.w, r2.y, l(-0.83333331)
  mul r5.w, r5.w, l(5.99999952)
  max r5.w, r5.w, l(0.000000)
  mad r7.w, r5.w, l(-2.000000), l(3.000000)
  mul r5.w, r5.w, r5.w
  mul r5.w, r5.w, r7.w
  add r7.w, r9.w, l(-60.000000)
  mul_sat r7.w, r7.w, l(0.01666667)
  mad r8.w, r7.w, l(-2.000000), l(3.000000)
  mul r7.w, r7.w, r7.w
  mul r7.w, r7.w, r8.w
  mul r5.w, r5.w, r7.w
  mul r5.w, r17.y, r5.w
  mad r13.zw, r9.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
  add r13.zw, |r13.zzzw|, l(0.000000, 0.000000, -0.500000, -0.500000)
  add_sat r13.zw, r13.zzzw, r13.zzzw
  mad r15.yz, r13.zzwz, l(0.000000, -2.000000, -2.000000, 0.000000), l(0.000000, 3.000000, 3.000000, 0.000000)
  mul r13.zw, r13.zzzw, r13.zzzw
  mad r13.zw, -r15.yyyz, r13.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  mul r7.w, r13.w, r13.z
  mul r5.w, r5.w, r7.w
  mul r7.w, r17.x, l(10.000000)
  min r7.w, r7.w, l(1.000000)
  add r8.w, -r6.w, l(1.000000)
  mul r8.w, r5.w, r8.w
  add r7.w, r7.w, l(-1.000000)
  mad r7.w, r8.w, r7.w, l(1.000000)
  mul r5.w, r6.w, r5.w
  lt r6.w, l(0.000000), r5.w
  if_nz r6.w
    sample_l_indexable(texture2d)(float,float,float,float) r13.zw, r9.xyxx, t22.zwxy, s4, l(0.000000)
    add r15.yz, |r13.zzwz|, l(0.000000, -0.500000, -0.500000, 0.000000)
    add_sat r15.yz, r15.yyzy, r15.yyzy
    add r17.xy, |r13.zwzz|, |r13.zwzz|
    min r17.xy, r17.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    mul r17.xy, r17.xyxx, l(10.000000, 10.000000, 0.000000, 0.000000)
    mad r15.yz, r15.yyzy, l(0.000000, 30.000000, 30.000000, 0.000000), r17.xxyx
    ge r13.zw, r13.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
    movc r13.zw, r13.zzzw, r15.yyyz, -r15.yyyz
    mad r9.xy, -r13.zwzz, cb1[44].zwzz, r9.xyxx
    sample_l_indexable(texture2d)(float,float,float,float) r9.xyw, r9.xyxx, t21.xywz, s4, l(0.000000)
    mul r9.xyw, r9.xyxw, cb1[85].xxxx
    mul r9.xyw, r5.wwww, r9.xyxw
  else 
    mov r9.xyw, l(0,0,0,0)
    mov r5.w, l(0)
  endif 
else 
  mov r9.xyw, l(0,0,0,0)
  mov r7.w, l(1.000000)
  mov r5.w, l(0)
endif 
dp3 r6.w, r11.xyzx, cb2[17].xyzx
mov_sat r8.w, r6.w
movc r12.w, r0.w, |r6.w|, r8.w
ge r13.z, l(0.000000), r12.w
if_nz r13.z
  mov r13.w, l(0)
endif 
if_z r13.z
  mul r15.yzw, r10.yyyy, cb2[29].xxyz
  mad r15.yzw, r10.xxxx, cb2[28].xxyz, r15.yyzw
  mad r15.yzw, r10.zzzz, cb2[30].xxyz, r15.yyzw
  add r15.yzw, r15.yyzw, cb2[31].xxyz
  add r13.z, r15.w, -cb2[17].w
  mad r13.z, -r13.z, l(0.00006104), l(1.000000)
  mov_sat r14.w, r13.z
  eq r14.w, r13.z, r14.w
  if_nz r14.w
    mov r14.w, l(0)
    mov r17.x, l(0)
    loop 
      ge r17.y, r14.w, l(3.000000)
      breakc_nz r17.y
      ftou r17.y, r14.w
      add r17.zw, r15.yyyz, -cb2[r17.y + 20].xxxy
      max r17.z, |r17.w|, |r17.z|
      mul r17.x, r17.z, cb2[r17.y + 20].z
      lt r17.y, r17.x, l(1.000000)
      if_nz r17.y
        break 
      endif 
      add r14.w, r14.w, l(1.000000)
      mov r17.x, l(0)
    endloop 
  else 
    mov r14.w, l(3.000000)
    mov r17.x, l(0)
  endif 
  ge r17.y, r14.w, l(3.000000)
  if_nz r17.y
    mul r18.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
    rcp r19.xz, r18.xxxx
    mov r19.y, -r19.z
    mad r18.xyz, r15.yzyy, r19.xyzx, r18.yzyy
    add r19.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r18.xyz, r18.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r18.xyz, r19.xyzx, r18.xyzx
    mul r17.zw, r18.zzzy, cb2[32].xxxx
    round_ni r17.zw, r17.zzzw
    mul r17.w, r17.w, cb2[27].x
    mad r17.z, r17.w, cb2[32].x, r17.z
    ftou r17.z, r17.z
    iadd r17.z, r17.z, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.w, r17.z, l(0), t23.xxxx
    and r18.w, r17.w, l(0x40000000)
    ishl r19.x, r17.w, l(2)
    if_z r18.w
      and r18.w, r17.w, l(0x01ffffff)
      iadd r20.x, r17.z, r18.w
      ushr r17.z, r17.w, l(25)
      utof r17.z, r17.z
      mul r18.xyz, r17.zzzz, r18.xyzx
      frc r18.xyz, r18.xyzx
      mul r18.xyz, r18.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
      ftou r18.xyz, r18.xyzx
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.z, r20.x, l(0), t23.xxxx
      ushr r17.zw, r18.zzzy, l(0, 0, 6, 6)
      and r18.w, r20.z, l(0xc0000000)
      iadd r19.y, r20.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.y, r19.y, l(0), t23.xxxx
      movc r17.w, r17.w, r20.z, r19.y
      ushr r19.y, r17.w, l(13)
      movc r17.z, r17.z, r19.y, r17.w
      and r17.z, r17.z, l(8191)
      iadd r21.x, r17.z, r20.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r21.z, r21.x, l(0), t23.xxxx
      mov r20.y, l(0)
      mov r21.y, l(1)
      movc r19.yzw, r18.wwww, r20.xxyz, r21.xxyz
      movc r21.yz, r18.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r17.zw, r18.zzzy, r21.yyyy
      and r17.zw, r17.zzzw, l(0, 0, 1, 1)
      and r20.w, r19.w, l(0xc0000000)
      iadd r21.y, r19.y, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r21.y, r21.y, l(0), t23.xxxx
      movc r17.w, r17.w, r19.w, r21.y
      ushr r21.y, r17.w, l(13)
      movc r17.z, r17.z, r21.y, r17.w
      and r17.z, r17.z, l(8191)
      iadd r21.x, r17.z, r19.y
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r21.w, r21.x, l(0), t23.xxxx
      movc r19.yzw, r20.wwww, r19.yyzw, r21.xxzw
      movc r19.yzw, r18.wwww, r20.xxyz, r19.yyzw
      and r17.z, r19.w, l(0xc0000000)
      if_z r17.z
        iadd r17.z, -r19.z, l(6)
        ushr r17.zw, r18.zzzy, r17.zzzz
        or r18.w, r19.w, l(0x40000000)
        bfi r17.w, l(1), l(1), r17.w, l(0)
        bfi r17.z, l(1), l(0), r17.z, r17.w
        imul null, r17.z, r17.z, l(10)
        ushr r17.z, r18.w, r17.z
        and r17.z, r17.z, l(1023)
        iadd r20.x, r17.z, r19.y
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.w, r20.x, l(0), t23.xxxx
        iadd r20.yz, r19.zzzz, l(0, 1, 2, 0)
        iadd r17.z, -r20.y, l(6)
        ushr r17.zw, r18.zzzy, r17.zzzz
        and r18.w, r20.w, l(0xc0000000)
        or r19.z, r20.w, l(0x40000000)
        bfi r17.w, l(1), l(1), r17.w, l(0)
        bfi r17.z, l(1), l(0), r17.z, r17.w
        imul null, r17.z, r17.z, l(10)
        ushr r17.z, r19.z, r17.z
        and r17.z, r17.z, l(1023)
        iadd r21.x, r17.z, r20.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r21.z, r21.x, l(0), t23.xxxx
        mov r21.y, r20.z
        movc r21.xyz, r18.wwww, r20.xywx, r21.xyzx
        iadd r17.z, -r21.y, l(6)
        ushr r17.zw, r18.zzzy, r17.zzzz
        and r19.z, r21.z, l(0xc0000000)
        or r20.y, r21.z, l(0x40000000)
        bfi r17.w, l(1), l(1), r17.w, l(0)
        bfi r17.z, l(1), l(0), r17.z, r17.w
        imul null, r17.z, r17.z, l(10)
        ushr r17.z, r20.y, r17.z
        and r17.z, r17.z, l(1023)
        iadd r22.x, r17.z, r21.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r22.y, r22.x, l(0), t23.xxxx
        movc r17.zw, r19.zzzz, r21.xxxz, r22.xxxy
        movc r19.yw, r18.wwww, r20.xxxw, r17.zzzw
      endif 
      and r17.z, r19.w, l(0xc0000000)
      if_z r17.z
        ubfe r17.w, l(14), l(15), r19.w
        utof r17.w, r17.w
        mul r17.w, r17.w, cb2[27].w
        mul r17.w, r17.w, l(0.00006104)
        and r20.xy, r19.wwww, l(0x00007fff, 0x20000000, 0, 0)
        utof r18.w, r20.x
        mul r18.w, r18.w, cb2[27].w
        mul r18.w, r18.w, l(0.00003052)
        and r19.z, r18.y, l(3)
        iadd r19.z, r19.z, r19.y
        iadd r19.z, r19.z, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.z, r19.z, l(0), t23.xxxx
        bfi r20.xzw, l(2, 0, 2, 1), l(3, 0, 1, 4), r18.xxyz, l(0, 0, 0, 0)
        ushr r18.x, r19.z, r20.x
        and r18.x, r18.x, l(255)
        utof r18.x, r18.x
        mul r18.x, r18.w, r18.x
        mad r18.x, r18.x, l(0.00392157), r17.w
        iadd r18.y, r20.z, l(1)
        ubfe r18.z, l(1), l(1), r18.z
        iadd r18.y, r18.z, r18.y
        iadd r18.y, r18.y, r19.y
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.y, r18.y, l(0), t23.xxxx
        ushr r18.y, r18.y, r20.w
        and r18.y, r18.y, l(0x0000ffff)
        utof r18.y, r18.y
        mul r18.y, r18.w, r18.y
        mad r17.w, r18.y, l(0.00001526), r17.w
        movc r19.x, r20.y, r18.x, r17.w
      else 
        and r17.w, r19.w, l(0x80000000)
        iadd r18.x, r19.y, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.x, r18.x, l(0), t23.xxxx
        movc r17.w, r17.w, r18.x, l(0)
        ishl r18.x, r19.w, l(2)
        ushr r18.y, r17.w, l(16)
        f16tof32 r18.y, r18.y
        and r17.w, r17.w, l(0x0000ffff)
        f16tof32 r17.w, r17.w
        mad r18.x, r15.y, r18.y, r18.x
        mad r17.w, r15.z, r17.w, r18.x
        movc r19.x, r17.z, r17.w, r19.x
      endif 
    endif 
    mad r15.w, -cb2[27].z, l(2.000000), r15.w
    lt r15.w, r19.x, r15.w
    movc r13.w, r15.w, l(0), l(1.000000)
  endif 
  if_z r17.y
    if_z cb2[58].y
      ftou r15.w, r14.w
      add r17.yz, r15.yyzy, -cb2[r15.w + 20].xxyx
      mul r17.yz, r17.yyzy, cb2[r15.w + 20].zzzz
      mad r18.xy, r17.yzyy, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r15.w, cb2[26].y
      add r18.z, r14.w, r15.w
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r15.w, r18.xyzx, t13.xxxx, s13, r13.z
      sample_l_indexable(texture2darray)(float,float,float,float) r17.y, r18.xyzx, t31.yxzw, s0, l(0.000000)
      add r15.w, r15.w, r17.y
      add_sat r15.w, r15.w, l(-1.000000)
      mul r17.y, r15.w, r15.w
      mul r13.w, r15.w, r17.y
    endif 
    if_nz cb2[58].y
      mov r18.x, -r13.x
      ftou r15.w, r14.w
      add r14.w, r14.w, l(1.000000)
      min r14.w, r14.w, l(2.000000)
      ftou r14.w, r14.w
      add r17.x, -r17.x, l(1.000000)
      mul r17.x, r17.x, l(28.000000)
      ftou r17.x, r17.x
      add r17.yz, r15.yyzy, -cb2[r15.w + 20].xxyx
      mul r17.yz, r17.yyzy, cb2[r15.w + 20].zzzz
      mad r17.yz, r17.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      add r15.yz, r15.yyzy, -cb2[r14.w + 20].xxyx
      mul r15.yz, r15.yyzy, cb2[r14.w + 20].zzzz
      mad r15.yz, r15.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      mov r18.y, r14.x
      mov r18.z, r13.x
      mov r17.w, l(0)
      mov r18.w, l(0)
      loop 
        uge r19.x, r18.w, l(8)
        breakc_nz r19.x
        ult r19.x, r17.x, r18.w
        movc r19.yz, r19.xxxx, r15.yyzy, r17.yyzy
        movc r19.w, r19.x, cb2[r14.w + 20].w, cb2[r15.w + 20].w
        movc r19.x, r19.x, r14.w, r15.w
        dp2 r20.x, icb[r18.w + 0].yxyy, r18.xyxx
        dp2 r20.y, icb[r18.w + 0].yxyy, r18.yzyy
        mad r20.xy, r20.xyxx, r19.wwww, r19.yzyy
        iadd r19.x, r19.x, cb2[26].y
        utof r20.z, r19.x
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.x, r20.xyzx, t13.xxxx, s13, r13.z
        sample_l_indexable(texture2darray)(float,float,float,float) r19.y, r20.xyzx, t31.yxzw, s0, l(0.000000)
        add r19.x, r19.y, r19.x
        add_sat r19.x, r19.x, l(-1.000000)
        mad r17.w, r19.x, l(0.125000), r17.w
        iadd r18.w, r18.w, l(1)
      endloop 
      mul r13.z, r17.w, r17.w
      mul r13.w, r17.w, r13.z
    endif 
  endif 
endif 
add r13.z, -r2.y, l(1.000000)
mul r14.w, r13.z, l(5.000000)
mad r15.y, r13.z, l(5.000000), l(-2.500000)
mul r15.y, r15.y, l(0.400000)
max r15.y, r15.y, l(0.000000)
mad r15.zw, -r13.zzzz, l(0.000000, 0.000000, 10.000000, 5.000000), l(0.000000, 0.000000, 6.857410, 7.085000)
exp r15.z, r15.z
mul r15.z, r2.x, r15.z
mul r17.x, r13.z, r14.w
mad r15.w, -r17.x, l(2.015905), r15.w
exp r15.w, r15.w
mul r15.w, r2.x, r15.w
mul r15.yzw, r15.yyzw, l(0.000000, 100.000000, 9.136810, 9.708090)
max r15.z, r15.w, r15.z
max r15.z, r15.z, l(1.268160)
iadd r15.w, cb2[0].y, -cb2[58].x
ushr r17.xy, r0.yxyy, l(24, 24, 0, 0)
ubfe r0.xy, l(10, 10, 0, 0), l(12, 12, 0, 0), r0.yxyy
mov r18.yz, l(0,0,1.000000,0)
mov r19.xy, l(0,0,0,0)
mov r20.x, l(1.000000)
mov r21.xy, l(0,0,0,0)
mov r22.xy, l(0,0,0,0)
mov r23.xyzw, l(0,0,0,0)
mov r24.yzw, l(0,0,0,0)
mov r17.z, l(0)
loop 
  ieq r17.w, r17.z, l(2)
  breakc_nz r17.w
  movc r17.w, r17.z, r0.x, r17.x
  uge r18.w, r17.w, r15.w
  ult r19.w, r17.w, cb2[0].y
  and r18.w, r18.w, r19.w
  if_nz r18.w
    imul null, r17.w, r17.w, l(14)
    add r25.xyz, r10.xyzx, -cb10[r17.w + 0].xyzx
    and r18.w, l(0x0000ffff), cb10[r17.w + 7].z
    ubfe r19.w, l(6), l(25), cb10[r17.w + 7].z
    imul null, r20.z, r18.w, l(6)
    dp3 r20.w, cb11[r20.z + 0].xyzx, r25.xyzx
    add_sat r20.w, r20.w, cb11[r20.z + 0].w
    dp3 r21.w, cb11[r20.z + 1].xyzx, r25.xyzx
    add_sat r21.w, r21.w, cb11[r20.z + 1].w
    mul r20.w, r20.w, r21.w
    dp3 r21.w, cb11[r20.z + 2].xyzx, r25.xyzx
    add_sat r21.w, r21.w, cb11[r20.z + 2].w
    mul r20.w, r20.w, r21.w
    dp3 r21.w, cb11[r20.z + 3].xyzx, r25.xyzx
    add_sat r21.w, r21.w, cb11[r20.z + 3].w
    mul r20.w, r20.w, r21.w
    dp3 r21.w, cb11[r20.z + 4].xyzx, r25.xyzx
    add_sat r21.w, r21.w, cb11[r20.z + 4].w
    mul r20.w, r20.w, r21.w
    dp3 r21.w, cb11[r20.z + 5].xyzx, r25.xyzx
    add_sat r20.z, r21.w, cb11[r20.z + 5].w
    mul r18.x, r20.z, r20.w
    and r20.z, l(1), cb10[r17.w + 6].x
    movc r20.zw, r20.zzzz, r18.xxxy, r18.zzzx
    mov r18.x, cb10[r17.w + 6].x
    mov r26.xy, r20.zwzz
    mov r21.w, l(1)
    loop 
      ige r22.w, r21.w, r19.w
      breakc_nz r22.w
      iadd r22.w, r18.w, r21.w
      imul null, r22.w, r22.w, l(6)
      dp3 r25.w, cb11[r22.w + 0].xyzx, r25.xyzx
      add_sat r25.w, r25.w, cb11[r22.w + 0].w
      mul r25.w, r25.w, r26.x
      dp3 r26.z, cb11[r22.w + 1].xyzx, r25.xyzx
      add_sat r26.z, r26.z, cb11[r22.w + 1].w
      mul r25.w, r25.w, r26.z
      dp3 r26.z, cb11[r22.w + 2].xyzx, r25.xyzx
      add_sat r26.z, r26.z, cb11[r22.w + 2].w
      mul r25.w, r25.w, r26.z
      dp3 r26.z, cb11[r22.w + 3].xyzx, r25.xyzx
      add_sat r26.z, r26.z, cb11[r22.w + 3].w
      mul r25.w, r25.w, r26.z
      dp3 r26.z, cb11[r22.w + 4].xyzx, r25.xyzx
      add_sat r26.z, r26.z, cb11[r22.w + 4].w
      mul r25.w, r25.w, r26.z
      dp3 r26.z, cb11[r22.w + 5].xyzx, r25.xyzx
      add_sat r22.w, r26.z, cb11[r22.w + 5].w
      mul r26.x, r22.w, r25.w
      ushr r26.z, r18.x, l(2)
      ubfe r26.w, l(1), l(2), r18.x
      and r27.x, r26.z, l(2)
      max r27.y, r26.x, r26.y
      mad r22.w, -r25.w, r22.w, l(1.000000)
      mul r22.w, r22.w, r26.y
      movc r20.y, r27.x, r22.w, r27.y
      movc r26.xy, r26.wwww, r26.xyxx, r20.xyxx
      iadd r21.w, r21.w, l(1)
      mov r18.x, r26.z
    endloop 
    mov_sat r26.y, r26.y
    mul r18.x, r26.y, cb10[r17.w + 6].y
    lt r18.w, l(0.000000), r18.x
    if_nz r18.w
      mad r24.w, r26.y, cb10[r17.w + 6].y, r24.w
      mul r18.x, r18.x, cb10[r17.w + 7].y
      mov r27.x, cb10[r17.w + 7].w
      mov r27.yz, cb10[r17.w + 8].xxyx
      dp3 r18.w, r16.xyzx, r27.xyzx
      dp3 r19.w, r25.xyzx, r27.xyzx
      add r19.w, r19.w, -cb10[r17.w + 8].z
      ge r20.y, r19.w, l(0.000000)
      max r19.w, r15.y, |r19.w|
      movc r19.w, r20.y, r19.w, -r19.w
      max r18.w, -r18.w, l(0.00000010)
      div r18.w, r19.w, r18.w
      min r18.w, |r18.w|, l(131072.000000)
      mov r27.x, cb10[r17.w + 8].w
      mov r27.yz, cb10[r17.w + 9].xxyx
      dp3 r19.w, r16.xyzx, r27.xyzx
      dp3 r20.y, r25.xyzx, r27.xyzx
      add r20.y, r20.y, -cb10[r17.w + 9].z
      ge r20.z, r20.y, l(0.000000)
      max r20.y, r15.y, |r20.y|
      movc r20.y, r20.z, r20.y, -r20.y
      max r19.w, -r19.w, l(0.00000010)
      div r19.w, r20.y, r19.w
      min r18.w, r18.w, |r19.w|
      mov r27.x, cb10[r17.w + 9].w
      mov r27.yz, cb10[r17.w + 10].xxyx
      dp3 r19.w, r16.xyzx, r27.xyzx
      dp3 r20.y, r25.xyzx, r27.xyzx
      add r20.y, r20.y, -cb10[r17.w + 10].z
      ge r20.z, r20.y, l(0.000000)
      max r20.y, r15.y, |r20.y|
      movc r20.y, r20.z, r20.y, -r20.y
      max r19.w, -r19.w, l(0.00000010)
      div r19.w, r20.y, r19.w
      min r18.w, r18.w, |r19.w|
      mov r27.x, cb10[r17.w + 10].w
      mov r27.yz, cb10[r17.w + 11].xxyx
      dp3 r19.w, r16.xyzx, r27.xyzx
      dp3 r20.y, r25.xyzx, r27.xyzx
      add r20.y, r20.y, -cb10[r17.w + 11].z
      ge r20.z, r20.y, l(0.000000)
      max r20.y, r15.y, |r20.y|
      movc r20.y, r20.z, r20.y, -r20.y
      max r19.w, -r19.w, l(0.00000010)
      div r19.w, r20.y, r19.w
      min r18.w, r18.w, |r19.w|
      mov r27.x, cb10[r17.w + 11].w
      mov r27.yz, cb10[r17.w + 12].xxyx
      dp3 r19.w, r16.xyzx, r27.xyzx
      dp3 r20.y, r25.xyzx, r27.xyzx
      add r20.y, r20.y, -cb10[r17.w + 12].z
      ge r20.z, r20.y, l(0.000000)
      max r20.y, r15.y, |r20.y|
      movc r20.y, r20.z, r20.y, -r20.y
      max r19.w, -r19.w, l(0.00000010)
      div r19.w, r20.y, r19.w
      min r18.w, r18.w, |r19.w|
      mov r27.x, cb10[r17.w + 12].w
      mov r27.yz, cb10[r17.w + 13].xxyx
      dp3 r19.w, r16.xyzx, r27.xyzx
      dp3 r20.y, r25.xyzx, r27.xyzx
      add r20.y, r20.y, -cb10[r17.w + 13].z
      ge r20.z, r20.y, l(0.000000)
      max r20.y, r15.y, |r20.y|
      movc r20.y, r20.z, r20.y, -r20.y
      max r19.w, -r19.w, l(0.00000010)
      div r19.w, r20.y, r19.w
      min r18.w, r18.w, |r19.w|
      add r27.x, r25.x, cb10[r17.w + 3].w
      add r27.yz, r25.yyzy, cb10[r17.w + 4].xxyx
      mad r20.yzw, r16.xxyz, r18.wwww, r27.xxyz
      dp3 r19.w, r20.yzwy, r20.yzwy
      sqrt r19.w, r19.w
      div r18.w, r18.w, r19.w
      add r18.w, r18.w, r18.w
      sqrt r18.w, r18.w
      mad r18.w, r13.z, l(5.000000), r18.w
      add r18.w, r18.w, l(-0.844800)
      mov r27.x, cb10[r17.w + 0].w
      mov r27.y, cb10[r17.w + 1].z
      mov r27.z, cb10[r17.w + 2].y
      dp3 r28.x, r20.yzwy, r27.xyzx
      mov r29.xy, cb10[r17.w + 1].xwxx
      mov r29.z, cb10[r17.w + 2].z
      dp3 r28.y, r20.yzwy, r29.xyzx
      mov r30.x, cb10[r17.w + 1].y
      mov r30.yz, cb10[r17.w + 2].xxwx
      dp3 r28.z, r20.yzwy, r30.xyzx
      ubfe r19.w, l(9), l(16), cb10[r17.w + 7].z
      utof r28.w, r19.w
      sample_l_indexable(texturecubearray)(float,float,float,float) r20.yzw, r28.xyzw, t8.wxyz, s2, r18.w
      dp3 r31.x, r25.xyzx, r27.xyzx
      dp3 r31.y, r25.xyzx, r29.xyzx
      dp3 r31.z, r25.xyzx, r30.xyzx
      mad_sat r25.xyz, r31.xyzx, cb10[r17.w + 3].xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
      mul r31.xy, r25.xyxx, cb10[r17.w + 4].zwzz
      mul r31.z, r25.z, cb10[r17.w + 5].x
      add r25.xyz, r31.xyzx, cb10[r17.w + 5].yzwy
      dp3 r28.x, r11.xyzx, r27.xyzx
      dp3 r28.y, r11.xyzx, r29.xyzx
      dp3 r28.z, r11.xyzx, r30.xyzx
      lt r26.xzw, l(0.000000, 0.000000, 0.000000, 0.000000), r28.xxyz
      movc r19.z, r26.x, l(0), l(0.500000)
      add r27.xyz, r19.xyzx, r25.xyzx
      sample_l_indexable(texture3d)(float,float,float,float) r27.xyz, r27.xyzx, t17.xyzw, s4, l(0.000000)
      mul r29.xyz, r28.xyzx, r28.xyzx
      mul r29.xyz, r18.xxxx, r29.xyzx
      movc r21.z, r26.z, l(0), l(0.500000)
      add r30.xyz, r21.xyzx, r25.xyzx
      sample_l_indexable(texture3d)(float,float,float,float) r30.xyz, r30.xyzx, t18.xyzw, s4, l(0.000000)
      mul r30.xyz, r29.yyyy, r30.xyzx
      mad r27.xyz, r27.xyzx, r29.xxxx, r30.xyzx
      movc r22.z, r26.w, l(0), l(0.500000)
      add r25.xyz, r22.xyzx, r25.xyzx
      sample_l_indexable(texture3d)(float,float,float,float) r25.xyz, r25.xyzx, t19.xyzw, s4, l(0.000000)
      mad r25.xyz, r25.xyzx, r29.zzzz, r27.xyzx
      sample_l_indexable(texturecubearray)(float,float,float,float) r26.xzw, r28.xyzw, t8.xwyz, s2, l(6.000000)
      mul r27.xyz, r25.xyzx, r26.xzwx
      dp3 r17.w, r27.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
      mad r23.xyz, r25.xyzx, r26.xzwx, r23.xyzx
      mul r18.w, r15.z, r17.w
      mul r20.yzw, r18.xxxx, r20.yyzw
      dp3 r18.x, r20.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
      mad r17.w, r15.z, r17.w, r18.x
      div r17.w, r18.w, r17.w
      mov r25.x, r23.w
      mov r25.yz, r24.yyzy
      mad r24.xyz, r20.yzwy, r17.wwww, r25.xyzx
      mov r23.w, r24.x
    endif 
  endif 
  iadd r17.z, r17.z, l(1)
endloop 
lt r17.z, r24.w, l(1.000000)
if_nz r17.z
  mov r18.yz, l(0,0,1.000000,0)
  mov r19.xy, l(0,0,0,0)
  mov r20.x, l(1.000000)
  mov r21.xy, l(0,0,0,0)
  mov r22.xy, l(0,0,0,0)
  mov r25.x, r23.w
  mov r25.yzw, r24.yyzw
  mov r26.xyz, r23.xyzx
  mov r17.z, l(0)
  loop 
    ieq r17.w, r17.z, l(2)
    breakc_nz r17.w
    movc r17.w, r17.z, r0.x, r17.x
    ult r18.w, r17.w, r15.w
    if_nz r18.w
      imul null, r17.w, r17.w, l(14)
      add r27.xyz, r10.xyzx, -cb10[r17.w + 0].xyzx
      and r18.w, l(0x0000ffff), cb10[r17.w + 7].z
      ubfe r19.w, l(6), l(25), cb10[r17.w + 7].z
      imul null, r20.z, r18.w, l(6)
      dp3 r20.w, cb11[r20.z + 0].xyzx, r27.xyzx
      add_sat r20.w, r20.w, cb11[r20.z + 0].w
      dp3 r21.w, cb11[r20.z + 1].xyzx, r27.xyzx
      add_sat r21.w, r21.w, cb11[r20.z + 1].w
      mul r20.w, r20.w, r21.w
      dp3 r21.w, cb11[r20.z + 2].xyzx, r27.xyzx
      add_sat r21.w, r21.w, cb11[r20.z + 2].w
      mul r20.w, r20.w, r21.w
      dp3 r21.w, cb11[r20.z + 3].xyzx, r27.xyzx
      add_sat r21.w, r21.w, cb11[r20.z + 3].w
      mul r20.w, r20.w, r21.w
      dp3 r21.w, cb11[r20.z + 4].xyzx, r27.xyzx
      add_sat r21.w, r21.w, cb11[r20.z + 4].w
      mul r20.w, r20.w, r21.w
      dp3 r21.w, cb11[r20.z + 5].xyzx, r27.xyzx
      add_sat r20.z, r21.w, cb11[r20.z + 5].w
      mul r18.x, r20.z, r20.w
      and r20.z, l(1), cb10[r17.w + 6].x
      movc r20.zw, r20.zzzz, r18.xxxy, r18.zzzx
      mov r18.x, cb10[r17.w + 6].x
      mov r28.xy, r20.zwzz
      mov r21.w, l(1)
      loop 
        ige r22.w, r21.w, r19.w
        breakc_nz r22.w
        iadd r22.w, r18.w, r21.w
        imul null, r22.w, r22.w, l(6)
        dp3 r26.w, cb11[r22.w + 0].xyzx, r27.xyzx
        add_sat r26.w, r26.w, cb11[r22.w + 0].w
        mul r26.w, r26.w, r28.x
        dp3 r27.w, cb11[r22.w + 1].xyzx, r27.xyzx
        add_sat r27.w, r27.w, cb11[r22.w + 1].w
        mul r26.w, r26.w, r27.w
        dp3 r27.w, cb11[r22.w + 2].xyzx, r27.xyzx
        add_sat r27.w, r27.w, cb11[r22.w + 2].w
        mul r26.w, r26.w, r27.w
        dp3 r27.w, cb11[r22.w + 3].xyzx, r27.xyzx
        add_sat r27.w, r27.w, cb11[r22.w + 3].w
        mul r26.w, r26.w, r27.w
        dp3 r27.w, cb11[r22.w + 4].xyzx, r27.xyzx
        add_sat r27.w, r27.w, cb11[r22.w + 4].w
        mul r26.w, r26.w, r27.w
        dp3 r27.w, cb11[r22.w + 5].xyzx, r27.xyzx
        add_sat r22.w, r27.w, cb11[r22.w + 5].w
        mul r28.x, r22.w, r26.w
        ushr r27.w, r18.x, l(2)
        ubfe r28.z, l(1), l(2), r18.x
        and r28.w, r27.w, l(2)
        max r29.x, r28.x, r28.y
        mad r22.w, -r26.w, r22.w, l(1.000000)
        mul r22.w, r22.w, r28.y
        movc r20.y, r28.w, r22.w, r29.x
        movc r28.xy, r28.zzzz, r28.xyxx, r20.xyxx
        iadd r21.w, r21.w, l(1)
        mov r18.x, r27.w
      endloop 
      add_sat r18.x, -r24.w, r28.y
      mul r18.w, r18.x, cb10[r17.w + 6].y
      lt r19.w, l(0.000000), r18.w
      if_nz r19.w
        mad r25.w, r18.x, cb10[r17.w + 6].y, r25.w
        mul r18.x, r18.w, cb10[r17.w + 7].y
        mov r29.x, cb10[r17.w + 7].w
        mov r29.yz, cb10[r17.w + 8].xxyx
        dp3 r18.w, r16.xyzx, r29.xyzx
        dp3 r19.w, r27.xyzx, r29.xyzx
        add r19.w, r19.w, -cb10[r17.w + 8].z
        ge r20.y, r19.w, l(0.000000)
        max r19.w, r15.y, |r19.w|
        movc r19.w, r20.y, r19.w, -r19.w
        max r18.w, -r18.w, l(0.00000010)
        div r18.w, r19.w, r18.w
        min r18.w, |r18.w|, l(131072.000000)
        mov r29.x, cb10[r17.w + 8].w
        mov r29.yz, cb10[r17.w + 9].xxyx
        dp3 r19.w, r16.xyzx, r29.xyzx
        dp3 r20.y, r27.xyzx, r29.xyzx
        add r20.y, r20.y, -cb10[r17.w + 9].z
        ge r20.z, r20.y, l(0.000000)
        max r20.y, r15.y, |r20.y|
        movc r20.y, r20.z, r20.y, -r20.y
        max r19.w, -r19.w, l(0.00000010)
        div r19.w, r20.y, r19.w
        min r18.w, r18.w, |r19.w|
        mov r29.x, cb10[r17.w + 9].w
        mov r29.yz, cb10[r17.w + 10].xxyx
        dp3 r19.w, r16.xyzx, r29.xyzx
        dp3 r20.y, r27.xyzx, r29.xyzx
        add r20.y, r20.y, -cb10[r17.w + 10].z
        ge r20.z, r20.y, l(0.000000)
        max r20.y, r15.y, |r20.y|
        movc r20.y, r20.z, r20.y, -r20.y
        max r19.w, -r19.w, l(0.00000010)
        div r19.w, r20.y, r19.w
        min r18.w, r18.w, |r19.w|
        mov r29.x, cb10[r17.w + 10].w
        mov r29.yz, cb10[r17.w + 11].xxyx
        dp3 r19.w, r16.xyzx, r29.xyzx
        dp3 r20.y, r27.xyzx, r29.xyzx
        add r20.y, r20.y, -cb10[r17.w + 11].z
        ge r20.z, r20.y, l(0.000000)
        max r20.y, r15.y, |r20.y|
        movc r20.y, r20.z, r20.y, -r20.y
        max r19.w, -r19.w, l(0.00000010)
        div r19.w, r20.y, r19.w
        min r18.w, r18.w, |r19.w|
        mov r29.x, cb10[r17.w + 11].w
        mov r29.yz, cb10[r17.w + 12].xxyx
        dp3 r19.w, r16.xyzx, r29.xyzx
        dp3 r20.y, r27.xyzx, r29.xyzx
        add r20.y, r20.y, -cb10[r17.w + 12].z
        ge r20.z, r20.y, l(0.000000)
        max r20.y, r15.y, |r20.y|
        movc r20.y, r20.z, r20.y, -r20.y
        max r19.w, -r19.w, l(0.00000010)
        div r19.w, r20.y, r19.w
        min r18.w, r18.w, |r19.w|
        mov r29.x, cb10[r17.w + 12].w
        mov r29.yz, cb10[r17.w + 13].xxyx
        dp3 r19.w, r16.xyzx, r29.xyzx
        dp3 r20.y, r27.xyzx, r29.xyzx
        add r20.y, r20.y, -cb10[r17.w + 13].z
        ge r20.z, r20.y, l(0.000000)
        max r20.y, r15.y, |r20.y|
        movc r20.y, r20.z, r20.y, -r20.y
        max r19.w, -r19.w, l(0.00000010)
        div r19.w, r20.y, r19.w
        min r18.w, r18.w, |r19.w|
        add r29.x, r27.x, cb10[r17.w + 3].w
        add r29.yz, r27.yyzy, cb10[r17.w + 4].xxyx
        mad r20.yzw, r16.xxyz, r18.wwww, r29.xxyz
        dp3 r19.w, r20.yzwy, r20.yzwy
        sqrt r19.w, r19.w
        div r18.w, r18.w, r19.w
        add r18.w, r18.w, r18.w
        sqrt r18.w, r18.w
        mad r18.w, r13.z, l(5.000000), r18.w
        add r18.w, r18.w, l(-0.844800)
        mov r29.x, cb10[r17.w + 0].w
        mov r29.y, cb10[r17.w + 1].z
        mov r29.z, cb10[r17.w + 2].y
        dp3 r30.x, r20.yzwy, r29.xyzx
        mov r31.xy, cb10[r17.w + 1].xwxx
        mov r31.z, cb10[r17.w + 2].z
        dp3 r30.y, r20.yzwy, r31.xyzx
        mov r32.x, cb10[r17.w + 1].y
        mov r32.yz, cb10[r17.w + 2].xxwx
        dp3 r30.z, r20.yzwy, r32.xyzx
        ubfe r19.w, l(9), l(16), cb10[r17.w + 7].z
        utof r30.w, r19.w
        sample_l_indexable(texturecubearray)(float,float,float,float) r20.yzw, r30.xyzw, t8.wxyz, s2, r18.w
        dp3 r33.x, r27.xyzx, r29.xyzx
        dp3 r33.y, r27.xyzx, r31.xyzx
        dp3 r33.z, r27.xyzx, r32.xyzx
        mad_sat r27.xyz, r33.xyzx, cb10[r17.w + 3].xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
        mul r33.xy, r27.xyxx, cb10[r17.w + 4].zwzz
        mul r33.z, r27.z, cb10[r17.w + 5].x
        add r27.xyz, r33.xyzx, cb10[r17.w + 5].yzwy
        dp3 r30.x, r11.xyzx, r29.xyzx
        dp3 r30.y, r11.xyzx, r31.xyzx
        dp3 r30.z, r11.xyzx, r32.xyzx
        lt r28.xzw, l(0.000000, 0.000000, 0.000000, 0.000000), r30.xxyz
        movc r19.z, r28.x, l(0), l(0.500000)
        add r29.xyz, r19.xyzx, r27.xyzx
        sample_l_indexable(texture3d)(float,float,float,float) r29.xyz, r29.xyzx, t17.xyzw, s4, l(0.000000)
        mul r31.xyz, r30.xyzx, r30.xyzx
        mul r31.xyz, r18.xxxx, r31.xyzx
        movc r21.z, r28.z, l(0), l(0.500000)
        add r32.xyz, r21.xyzx, r27.xyzx
        sample_l_indexable(texture3d)(float,float,float,float) r32.xyz, r32.xyzx, t18.xyzw, s4, l(0.000000)
        mul r32.xyz, r31.yyyy, r32.xyzx
        mad r29.xyz, r29.xyzx, r31.xxxx, r32.xyzx
        movc r22.z, r28.w, l(0), l(0.500000)
        add r27.xyz, r22.xyzx, r27.xyzx
        sample_l_indexable(texture3d)(float,float,float,float) r27.xyz, r27.xyzx, t19.xyzw, s4, l(0.000000)
        mad r27.xyz, r27.xyzx, r31.zzzz, r29.xyzx
        sample_l_indexable(texturecubearray)(float,float,float,float) r28.xzw, r30.xyzw, t8.xwyz, s2, l(6.000000)
        mul r29.xyz, r27.xyzx, r28.xzwx
        dp3 r17.w, r29.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
        mad r26.xyz, r27.xyzx, r28.xzwx, r26.xyzx
        mul r18.w, r15.z, r17.w
        mul r20.yzw, r18.xxxx, r20.yyzw
        dp3 r18.x, r20.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
        mad r17.w, r15.z, r17.w, r18.x
        div r17.w, r18.w, r17.w
        mad r25.xyz, r20.yzwy, r17.wwww, r25.xyzx
      endif 
    endif 
    iadd r17.z, r17.z, l(1)
  endloop 
  mov r24.xyzw, r25.zxyw
  mov r23.xyz, r26.xyzx
  mov r24.xyzw, r24.yzxw
else 
  mov r24.x, r23.w
endif 
max r0.x, r24.w, l(1.000000)
rcp r0.x, r0.x
mov_sat r24.w, r24.w
mul r15.yzw, r0.xxxx, r23.xxyz
mul r17.xzw, r0.xxxx, r24.xxyz
lt r13.z, r24.w, l(0.990000)
if_nz r13.z
  add r13.z, -r24.w, l(1.000000)
  mul r18.x, r13.z, cb2[19].x
  add r18.yzw, r10.xxyz, -cb2[35].xxyz
  mul r19.x, r18.y, cb2[35].w
  mul r19.yz, r18.zzwz, cb2[36].xxyx
  add_sat r18.yzw, r19.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
  mul r19.xy, r18.yzyy, cb2[36].zwzz
  mul r19.z, r18.w, cb2[37].x
  add r18.yzw, r19.xxyz, cb2[37].yyzw
  lt r19.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
  movc r19.xyz, r19.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
  mov r19.w, l(0)
  add r20.xyz, r18.yzwy, r19.wwxw
  sample_l_indexable(texture3d)(float,float,float,float) r20.xyz, r20.xyzx, t17.xyzw, s4, l(0.000000)
  mul r21.xyz, r11.xyzx, r11.xyzx
  mul r21.xyz, r18.xxxx, r21.xyzx
  add r22.xyz, r18.yzwy, r19.wwyw
  sample_l_indexable(texture3d)(float,float,float,float) r22.xyz, r22.xyzx, t18.xyzw, s4, l(0.000000)
  mul r22.xyz, r21.yyyy, r22.xyzx
  mad r20.xyz, r20.xyzx, r21.xxxx, r22.xyzx
  add r18.xyz, r18.yzwy, r19.wwzw
  sample_l_indexable(texture3d)(float,float,float,float) r18.xyz, r18.xyzx, t19.xyzw, s4, l(0.000000)
  mad r18.xyz, r18.xyzx, r21.zzzz, r20.xyzx
  mov r11.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r19.xyz, r11.xyzw, t8.xyzw, s2, l(6.000000)
  mul r18.xyz, r18.xyzx, r19.xyzx
  dp3 r11.w, r18.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  mad r15.yzw, r23.xxyz, r0.xxxx, r18.xxyz
  mov r16.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r18.xyz, r16.xyzw, t8.xyzw, s2, r14.w
  mad r0.x, cb2[19].x, r13.z, -r11.w
  mad r0.x, r2.y, r0.x, r11.w
  mad r17.xzw, r18.xxyz, r0.xxxx, r17.xxzw
endif 
add r0.x, -r5.w, l(1.000000)
mad r9.xyw, r17.xzxw, r0.xxxx, r9.xyxw
mad r0.x, r4.z, r2.z, r2.x
log r0.x, |r0.x|
mul r0.x, r0.x, r1.w
exp r0.x, r0.x
mad r0.x, r4.z, r2.z, r0.x
add_sat r0.x, r0.x, l(-1.000000)
mul r0.x, r7.w, r0.x
mul r18.xyz, r2.wwww, r15.yzwy
and r19.xyz, r0.wwww, r18.yzxy
mad r2.yz, r2.xxyx, l(0.000000, 0.984375, 0.984375, 0.000000), l(0.000000, 0.00781250, 0.00781250, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r2.yz, r2.yzyy, t5.zxyw, s2, l(0.000000)
mul r9.xyw, r0.xxxx, r9.xyxw
mul r17.xzw, r2.yyyy, r9.xxyw
mul r20.xyz, r2.zzzz, r9.xywx
sqrt r0.x, r1.w
mad r0.x, r0.x, l(0.500000), l(0.500000)
mul r0.x, r0.x, r0.x
mul r2.y, r0.x, l(0.500000)
mad r0.x, -r0.x, l(0.500000), l(1.000000)
mad r2.z, r2.x, r0.x, r2.y
mul r0.x, r0.x, r2.z
mul r2.y, r2.z, r2.y
lt r2.z, l(0.000000), r12.w
if_nz r2.z
  lt r2.z, l(0.000000), r13.w
  if_nz r2.z
    mul r2.z, r1.z, cb2[18].w
    mul r2.z, r8.w, r2.z
    if_nz cb2[23].x
      add r21.xyz, r10.xyzx, cb1[24].xyzx
      mov r21.w, l(1.000000)
      dp4 r4.z, cb2[24].xyzw, r21.xyzw
      dp4 r5.w, cb2[25].xyzw, r21.xyzw
      frc r21.x, r4.z
      frc r21.y, r5.w
      iadd r4.z, l(-1), cb2[23].x
      utof r21.z, r4.z
      sample_l_indexable(texture2darray)(float,float,float,float) r9.xyw, r21.xyzx, t20.xywz, s2, l(0.000000)
      add r9.xyw, r9.xyxw, l(-1.000000, -1.000000, 0.000000, -1.000000)
      mad r9.xyw, cb2[23].yyyy, r9.xyxw, l(1.000000, 1.000000, 0.000000, 1.000000)
      mul r9.xyw, r9.xyxw, cb2[18].xyxz
    else 
      mov r9.xyw, cb2[18].xyxz
    endif 
    ushr r4.z, cb2[53].x, l(16)
    ult r5.w, l(0), r4.z
    and r5.w, r9.z, r5.w
    if_nz r5.w
      iadd r4.z, r4.z, cb2[0].x
      imad r4.z, r4.z, l(15), l(-15)
      mad r5.w, |r6.w|, l(-0.200000), l(0.400000)
      lt r7.w, r6.w, l(0.000000)
      and r7.w, r0.w, r7.w
      movc r5.w, r7.w, -r5.w, r5.w
      mad r21.xyz, r11.xyzx, r5.wwww, r10.xyzx
      mov r22.xyz, cb9[r4.z + 4].yzwy
      mov r22.w, cb9[r4.z + 5].x
      mov r21.w, l(1.000000)
      dp4 r22.x, r22.xyzw, r21.xyzw
      mov r23.xyz, cb9[r4.z + 5].yzwy
      mov r23.w, cb9[r4.z + 6].x
      dp4 r22.y, r23.xyzw, r21.xyzw
      mad r22.xy, r22.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      add r23.x, r22.x, cb9[r4.z + 9].w
      add r23.y, r22.y, cb9[r4.z + 10].x
      mul r22.xy, r23.xyxx, cb9[r4.z + 9].yzyy
      div r22.zw, cb9[r4.z + 3].yyyy, cb9[r4.z + 8].yyyw
      add r23.xy, -r22.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
      ge r23.xy, r22.xyxx, r23.xyxx
      ge r22.zw, r22.zzzw, r22.xxxy
      or r22.zw, r22.zzzw, r23.xxxy
      or r5.w, r22.w, r22.z
      if_z r5.w
        mov r23.xyz, cb9[r4.z + 6].yzwy
        mov r23.w, cb9[r4.z + 7].x
        dp4 r5.w, r23.xyzw, r21.xyzw
        mov_sat r22.xy, r22.xyxx
        mad r21.x, r22.x, cb9[r4.z + 8].y, cb9[r4.z + 8].z
        mad r21.y, r22.y, cb9[r4.z + 8].w, cb9[r4.z + 9].x
        add r5.w, r5.w, cb9[r4.z + 10].y
        div r5.w, r5.w, cb9[r4.z + 10].z
        max r5.w, r5.w, l(0.00006104)
        and r7.w, l(0x0000ffff), cb9[r4.z + 1].w
        if_nz cb2[58].y
          mov r22.x, -r13.x
          utof r23.z, r7.w
          mov r22.y, r14.x
          mov r22.z, r13.x
          mov r11.w, l(0)
          mov r13.z, l(0)
          loop 
            ige r14.w, r13.z, l(8)
            breakc_nz r14.w
            dp2 r24.x, icb[r13.z + 0].yxyy, r22.xyxx
            dp2 r24.y, icb[r13.z + 0].yxyy, r22.yzyy
            mad r23.xy, r24.xyxx, cb9[r4.z + 3].yyyy, r21.xyxx
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r14.w, r23.xyzx, t9.xxxx, s13, r5.w
            mad r11.w, r14.w, l(0.125000), r11.w
            iadd r13.z, r13.z, l(1)
          endloop 
        else 
          utof r21.z, r7.w
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r11.w, r21.xyzx, t9.xxxx, s13, r5.w
        endif 
        mul r4.z, r11.w, r11.w
        mul r4.z, r11.w, r4.z
      else 
        mov r4.z, l(1.000000)
      endif 
      mul r13.w, r4.z, r13.w
    else 
      and r4.z, cb2[53].x, l(0x0000ffff)
      ult r5.w, l(0), r4.z
      not r7.w, r9.z
      and r5.w, r5.w, r7.w
      if_nz r5.w
        iadd r4.z, r4.z, cb2[0].x
        imad r4.z, r4.z, l(15), l(-15)
        mad r5.w, |r6.w|, l(-0.200000), l(0.400000)
        lt r7.w, r6.w, l(0.000000)
        and r7.w, r0.w, r7.w
        movc r5.w, r7.w, -r5.w, r5.w
        mad r21.xyz, r11.xyzx, r5.wwww, r10.xyzx
        mov r22.xyz, cb9[r4.z + 4].yzwy
        mov r22.w, cb9[r4.z + 5].x
        mov r21.w, l(1.000000)
        dp4 r22.x, r22.xyzw, r21.xyzw
        mov r23.xyz, cb9[r4.z + 5].yzwy
        mov r23.w, cb9[r4.z + 6].x
        dp4 r22.y, r23.xyzw, r21.xyzw
        mad r22.xy, r22.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
        add r23.x, r22.x, cb9[r4.z + 9].w
        add r23.y, r22.y, cb9[r4.z + 10].x
        mul r22.xy, r23.xyxx, cb9[r4.z + 9].yzyy
        div r22.zw, cb9[r4.z + 3].yyyy, cb9[r4.z + 8].yyyw
        add r23.xy, -r22.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
        ge r23.xy, r22.xyxx, r23.xyxx
        ge r22.zw, r22.zzzw, r22.xxxy
        or r22.zw, r22.zzzw, r23.xxxy
        or r5.w, r22.w, r22.z
        if_z r5.w
          mov r23.xyz, cb9[r4.z + 6].yzwy
          mov r23.w, cb9[r4.z + 7].x
          dp4 r5.w, r23.xyzw, r21.xyzw
          mov_sat r22.xy, r22.xyxx
          mad r21.x, r22.x, cb9[r4.z + 8].y, cb9[r4.z + 8].z
          mad r21.y, r22.y, cb9[r4.z + 8].w, cb9[r4.z + 9].x
          add r5.w, r5.w, cb9[r4.z + 10].y
          div r5.w, r5.w, cb9[r4.z + 10].z
          max r5.w, r5.w, l(0.00006104)
          and r7.w, l(0x0000ffff), cb9[r4.z + 1].w
          if_nz cb2[58].y
            mov r22.x, -r13.x
            utof r23.z, r7.w
            mov r22.y, r14.x
            mov r22.z, r13.x
            mov r11.w, l(0)
            mov r13.z, l(0)
            loop 
              ige r14.w, r13.z, l(8)
              breakc_nz r14.w
              dp2 r24.x, icb[r13.z + 0].yxyy, r22.xyxx
              dp2 r24.y, icb[r13.z + 0].yxyy, r22.yzyy
              mad r23.xy, r24.xyxx, cb9[r4.z + 3].yyyy, r21.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r14.w, r23.xyzx, t9.xxxx, s13, r5.w
              mad r11.w, r14.w, l(0.125000), r11.w
              iadd r13.z, r13.z, l(1)
            endloop 
          else 
            utof r21.z, r7.w
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r11.w, r21.xyzx, t9.xxxx, s13, r5.w
          endif 
          mul r4.z, r11.w, r11.w
          mul r4.z, r11.w, r4.z
        else 
          mov r4.z, l(1.000000)
        endif 
        mul r13.w, r4.z, r13.w
      endif 
    endif 
    mad r4.z, -r2.x, l(0.500000), l(1.000000)
    mad r4.z, -r12.w, r4.z, l(1.000000)
    mul r4.z, r4.z, r4.z
    mad r4.z, -r4.z, l(0.620000), l(0.620000)
    add r4.z, -r12.w, r4.z
    mad r4.z, r1.w, r4.z, r12.w
    mul r4.z, r13.w, r4.z
    mul r21.xyz, r9.xywx, r4.zzzz
    lt r5.w, l(0.000000), r6.w
    mad r21.xyz, r15.yzwy, r2.wwww, r21.xyzx
    mad r15.yzw, -r10.xxyz, r0.zzzz, cb2[17].xxyz
    dp3 r0.z, r15.yzwy, r15.yzwy
    rsq r0.z, r0.z
    mul r15.yzw, r0.zzzz, r15.yyzw
    dp3 r0.z, r15.yzwy, r12.xyzx
    dp3 r2.w, r11.xyzx, r15.yzwy
    mad r6.w, |r2.w|, r1.z, -|r2.w|
    mad r2.w, |r2.w|, r6.w, l(1.000000)
    mad r6.w, r8.w, r0.x, r2.y
    mul r2.w, r2.w, r2.w
    mul r2.w, r6.w, r2.w
    rcp r2.w, r2.w
    mul r2.z, r2.z, r2.w
    mul r2.z, r2.z, r13.w
    mul r2.z, r2.z, l(0.250000)
    mad r22.yzw, r2.zzzz, r9.xxyw, r20.xxyz
    add_sat r0.z, -r0.z, l(1.000000)
    mul r2.w, r0.z, r0.z
    mul r2.w, r2.w, r2.w
    mul r0.z, r0.z, r2.w
    mul r0.z, r0.z, r2.z
    mad r15.yzw, r0.zzzz, r9.xxyw, r17.xxzw
    mad r9.xyw, r4.zzzz, r9.xyxw, r19.zxzy
    and r23.xyz, r0.wwww, r9.ywxy
    mov r21.w, r19.z
    mov r18.w, r23.z
    movc r18.xyzw, r5.wwww, r21.xyzw, r18.xyzw
    mov r19.zw, r15.yyyz
    mov r23.zw, r17.xxxz
    movc r21.xyzw, r5.wwww, r19.xyzw, r23.xyzw
    mov r22.x, r15.w
    mov r20.w, r17.w
    movc r20.xyzw, r5.wwww, r22.yzwx, r20.xyzw
    mov r19.z, r18.w
    mov r19.xy, r21.xyxx
    mov r17.xz, r21.zzwz
    mov r17.w, r20.w
  endif 
endif 
mov r21.x, -r13.x
not r0.z, r9.z
mad r2.x, -r2.x, l(0.500000), l(1.000000)
mov r10.w, l(1.000000)
mov r22.w, l(1.000000)
mov r21.z, r13.x
mov r23.z, l(1.000000)
mov r24.w, l(1.000000)
mov r25.w, l(1.000000)
mov r21.yw, r14.xxxx
mov r13.y, r21.w
mov r26.w, l(1.000000)
mov r14.y, r21.x
mov r14.z, r13.x
mov r27.w, l(1.000000)
mov r28.x, r14.x
mov r28.y, r21.x
mov r28.z, r13.x
mov r29.x, r14.x
mov r29.y, r21.x
mov r29.z, r13.x
mov r30.x, r14.x
mov r30.y, r21.x
mov r30.z, r13.x
mov r9.xyw, r18.xyxz
mov r31.xyz, r19.zxyz
mov r32.xyz, r17.xzwx
mov r15.yzw, r20.xxyz
mov r2.z, l(0)
loop 
  ieq r2.w, r2.z, l(2)
  breakc_nz r2.w
  movc r2.w, r2.z, r0.y, r17.y
  imul null, r2.w, r2.w, l(15)
  ubfe r4.z, l(3), l(24), cb9[r2.w + 1].w
  switch r4.z
    case l(4)
    lt r4.z, l(0.000000), cb9[r2.w + 6].y
    mov r33.xy, cb9[r2.w + 5].zwzz
    mov r33.z, cb9[r2.w + 6].x
    mad r34.xyz, -r33.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), cb9[r2.w + 0].xyzx
    add r35.xyz, -r10.xyzx, r34.xyzx
    dp3 r5.w, r33.xyzx, r35.xyzx
    div_sat r6.w, -r5.w, cb9[r2.w + 6].y
    mad r36.xyz, r6.wwww, r33.xyzx, r34.xyzx
    movc r36.xyz, r4.zzzz, r36.xyzx, cb9[r2.w + 0].xyzx
    add r36.xyz, -r10.xyzx, r36.xyzx
    dp3 r7.w, r36.xyzx, r36.xyzx
    rsq r8.w, r7.w
    mul r36.xyz, r8.wwww, r36.xyzx
    dp3 r8.w, r11.xyzx, r36.xyzx
    mov_sat r11.w, r8.w
    movc r11.w, r0.w, |r8.w|, r11.w
    lt r12.w, l(0.000000), r11.w
    if_nz r12.w
      sqrt r12.w, r7.w
      mul r13.z, cb9[r2.w + 3].x, cb9[r2.w + 3].x
      div r7.w, r13.z, r7.w
      min r7.w, r7.w, l(1.000000)
      mad_sat r13.zw, r12.wwww, cb9[r2.w + 2].xxxz, cb9[r2.w + 2].yyyw
      mul r36.xy, r13.zwzz, r13.zwzz
      mad r13.zw, r13.zzzw, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
      mul r13.zw, r13.zzzw, r36.xxxy
      mul r7.w, r7.w, r13.z
      mul r7.w, r13.w, r7.w
      lt r12.w, l(0.000000), r7.w
      if_nz r12.w
        ubfe r12.w, l(3), l(27), cb9[r2.w + 1].w
        ine r12.w, r12.w, l(1)
        if_nz r12.w
          mad r12.w, |r8.w|, l(-0.200000), l(0.400000)
          lt r13.z, r8.w, l(0.000000)
          and r13.z, r0.w, r13.z
          movc r12.w, r13.z, -r12.w, r12.w
          mad r36.xyz, r11.xyzx, r12.wwww, r10.xyzx
          add r36.xyz, r36.xyzx, -cb9[r2.w + 4].yzwy
          max r12.w, |r36.z|, |r36.y|
          max r12.w, r12.w, |r36.x|
          div r12.w, cb9[r2.w + 5].x, r12.w
          add r12.w, r12.w, cb9[r2.w + 5].y
          dp3 r13.z, r36.xyzx, r36.xyzx
          rsq r13.z, r13.z
          max r12.w, r12.w, l(0.00006104)
          and r13.w, l(0x0000ffff), cb9[r2.w + 1].w
          utof r37.w, r13.w
          mov r13.w, l(0)
          mov r14.w, l(0)
          loop 
            ige r16.w, r14.w, l(8)
            breakc_nz r16.w
            dp2 r38.y, icb[r14.w + 0].yxyy, r21.xyxx
            dp2 r38.z, icb[r14.w + 0].yxyy, r21.yzyy
            mul r38.yz, r38.yyzy, cb9[r2.w + 3].yyyy
            mul r38.x, r15.x, r38.y
            mul r38.w, r3.x, r38.y
            mad r37.xyz, r36.xyzx, r13.zzzz, r38.xzwx
            sample_c_lz_indexable(texturecubearray)(float,float,float,float) r16.w, r37.xyzw, t10.xxxx, s13, r12.w
            mad r13.w, r16.w, l(0.125000), r13.w
            iadd r14.w, r14.w, l(1)
          endloop 
        else 
          mov r13.w, l(1.000000)
        endif 
        mul r7.w, r7.w, r13.w
        lt r12.w, l(0.000000), r7.w
        if_nz r12.w
          mul r12.w, r1.z, cb9[r2.w + 1].z
          mul r12.w, r12.w, l(0.250000)
          dp3 r13.z, r33.xyzx, r16.xyzx
          dp3 r14.w, r16.xyzx, r35.xyzx
          mad r16.w, -r13.z, r13.z, cb9[r2.w + 6].y
          mad r5.w, r13.z, r14.w, -r5.w
          div_sat r5.w, r5.w, r16.w
          div r13.z, r16.w, cb9[r2.w + 6].y
          mul r13.z, r13.z, l(10.000000)
          min r13.z, r13.z, l(1.000000)
          add r5.w, -r6.w, r5.w
          mad r5.w, r13.z, r5.w, r6.w
          mad r33.xyz, r5.wwww, r33.xyzx, r34.xyzx
          movc r33.xyz, r4.zzzz, r33.xyzx, cb9[r2.w + 0].xyzx
          add r33.xyz, -r10.xyzx, r33.xyzx
          dp3 r4.z, r33.xyzx, r33.xyzx
          rsq r4.z, r4.z
          mul r34.xyz, r4.zzzz, r33.xyzx
          ubfe r5.w, l(4), l(16), cb9[r2.w + 1].w
          ult r6.w, l(0), r5.w
          and r6.w, r9.z, r6.w
          if_nz r6.w
            iadd r5.w, r5.w, cb2[0].x
            imad r5.w, r5.w, l(15), l(-15)
            mad r6.w, |r8.w|, l(-0.200000), l(0.400000)
            lt r13.z, r8.w, l(0.000000)
            and r13.z, r0.w, r13.z
            movc r6.w, r13.z, -r6.w, r6.w
            mad r22.xyz, r11.xyzx, r6.wwww, r10.xyzx
            mov r35.xyz, cb9[r5.w + 6].yzwy
            mov r35.w, cb9[r5.w + 7].x
            dp4 r6.w, r35.xyzw, r22.xyzw
            mov r35.xyz, cb9[r5.w + 7].yzwy
            mov r35.w, cb9[r5.w + 8].x
            dp4 r13.z, r35.xyzw, r22.xyzw
            lt r14.w, r13.z, r6.w
            if_z r14.w
              mov r35.xyz, cb9[r5.w + 4].yzwy
              mov r35.w, cb9[r5.w + 5].x
              dp4 r35.x, r35.xyzw, r22.xyzw
              mov r36.xyz, cb9[r5.w + 5].yzwy
              mov r36.w, cb9[r5.w + 6].x
              dp4 r35.y, r36.xyzw, r22.xyzw
              div r22.xy, r35.xyxx, r13.zzzz
              mad r22.xy, r22.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
              add r35.x, r22.x, cb9[r5.w + 9].w
              add r35.y, r22.y, cb9[r5.w + 10].x
              mul r22.xy, r35.xyxx, cb9[r5.w + 9].yzyy
              div r35.xy, cb9[r5.w + 3].yyyy, cb9[r5.w + 8].ywyy
              add r35.zw, -r35.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
              ge r35.zw, r22.xxxy, r35.zzzw
              ge r35.xy, r35.xyxx, r22.xyxx
              or r35.xy, r35.xyxx, r35.zwzz
              or r16.w, r35.y, r35.x
              if_z r16.w
                mov_sat r22.xy, r22.xyxx
                mad r35.x, r22.x, cb9[r5.w + 8].y, cb9[r5.w + 8].z
                mad r35.y, r22.y, cb9[r5.w + 8].w, cb9[r5.w + 9].x
                mul r18.w, r13.z, cb9[r5.w + 10].z
                mad r6.w, cb9[r5.w + 10].y, r13.z, r6.w
                div r6.w, r6.w, r18.w
              endif 
            else 
              mov r16.w, l(-1)
            endif 
            or r13.z, r14.w, r16.w
            if_z r13.z
              max r6.w, r6.w, l(0.00006104)
              and r13.z, l(0x0000ffff), cb9[r5.w + 1].w
              if_nz cb2[58].y
                utof r22.z, r13.z
                mov r14.w, l(0)
                mov r16.w, l(0)
                loop 
                  ige r18.w, r16.w, l(8)
                  breakc_nz r18.w
                  dp2 r36.x, icb[r16.w + 0].yxyy, r21.xwxx
                  dp2 r36.y, icb[r16.w + 0].xyxx, r13.xyxx
                  mad r22.xy, r36.xyxx, cb9[r5.w + 3].yyyy, r35.xyxx
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r18.w, r22.xyzx, t9.xxxx, s13, r6.w
                  mad r14.w, r18.w, l(0.125000), r14.w
                  iadd r16.w, r16.w, l(1)
                endloop 
              else 
                utof r35.z, r13.z
                sample_c_lz_indexable(texture2darray)(float,float,float,float) r14.w, r35.xyzx, t9.xxxx, s13, r6.w
              endif 
              mul r5.w, r14.w, r14.w
              mul r5.w, r14.w, r5.w
            else 
              mov r5.w, l(1.000000)
            endif 
            mul r7.w, r5.w, r7.w
          else 
            ubfe r5.w, l(4), l(20), cb9[r2.w + 1].w
            ult r6.w, l(0), r5.w
            and r6.w, r0.z, r6.w
            if_nz r6.w
              iadd r5.w, r5.w, cb2[0].x
              imad r5.w, r5.w, l(15), l(-15)
              mad r6.w, |r8.w|, l(-0.200000), l(0.400000)
              lt r13.z, r8.w, l(0.000000)
              and r13.z, r0.w, r13.z
              movc r6.w, r13.z, -r6.w, r6.w
              mad r24.xyz, r11.xyzx, r6.wwww, r10.xyzx
              mov r35.xyz, cb9[r5.w + 6].yzwy
              mov r35.w, cb9[r5.w + 7].x
              dp4 r6.w, r35.xyzw, r24.xyzw
              mov r35.xyz, cb9[r5.w + 7].yzwy
              mov r35.w, cb9[r5.w + 8].x
              dp4 r13.z, r35.xyzw, r24.xyzw
              lt r16.w, r13.z, r6.w
              if_z r16.w
                mov r35.xyz, cb9[r5.w + 4].yzwy
                mov r35.w, cb9[r5.w + 5].x
                dp4 r22.x, r35.xyzw, r24.xyzw
                mov r35.xyz, cb9[r5.w + 5].yzwy
                mov r35.w, cb9[r5.w + 6].x
                dp4 r22.y, r35.xyzw, r24.xyzw
                div r22.xy, r22.xyxx, r13.zzzz
                mad r22.xy, r22.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                add r24.x, r22.x, cb9[r5.w + 9].w
                add r24.y, r22.y, cb9[r5.w + 10].x
                mul r22.xy, r24.xyxx, cb9[r5.w + 9].yzyy
                div r24.xy, cb9[r5.w + 3].yyyy, cb9[r5.w + 8].ywyy
                add r35.xy, -r24.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                ge r35.xy, r22.xyxx, r35.xyxx
                ge r24.xy, r24.xyxx, r22.xyxx
                or r24.xy, r24.xyxx, r35.xyxx
                or r18.w, r24.y, r24.x
                if_z r18.w
                  mov_sat r22.xy, r22.xyxx
                  mad r24.x, r22.x, cb9[r5.w + 8].y, cb9[r5.w + 8].z
                  mad r24.y, r22.y, cb9[r5.w + 8].w, cb9[r5.w + 9].x
                  mul r19.w, r13.z, cb9[r5.w + 10].z
                  mad r6.w, cb9[r5.w + 10].y, r13.z, r6.w
                  div r6.w, r6.w, r19.w
                endif 
              else 
                mov r18.w, l(-1)
              endif 
              or r13.z, r16.w, r18.w
              if_z r13.z
                max r6.w, r6.w, l(0.00006104)
                and r13.z, l(0x0000ffff), cb9[r5.w + 1].w
                if_nz cb2[58].y
                  utof r22.z, r13.z
                  mov r16.w, l(0)
                  mov r18.w, l(0)
                  loop 
                    ige r19.w, r18.w, l(8)
                    breakc_nz r19.w
                    dp2 r35.x, icb[r18.w + 0].xyxx, r14.xyxx
                    dp2 r35.y, icb[r18.w + 0].yxyy, r14.xzxx
                    mad r22.xy, r35.xyxx, cb9[r5.w + 3].yyyy, r24.xyxx
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.w, r22.xyzx, t9.xxxx, s13, r6.w
                    mad r16.w, r19.w, l(0.125000), r16.w
                    iadd r18.w, r18.w, l(1)
                  endloop 
                else 
                  utof r24.z, r13.z
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r16.w, r24.xyzx, t9.xxxx, s13, r6.w
                endif 
                mul r5.w, r16.w, r16.w
                mul r5.w, r16.w, r5.w
              else 
                mov r5.w, l(1.000000)
              endif 
              mul r7.w, r5.w, r7.w
            endif 
          endif 
          mad r5.w, -r11.w, r2.x, l(1.000000)
          mul r5.w, r5.w, r5.w
          mad r5.w, -r5.w, l(0.620000), l(0.620000)
          add r5.w, -r11.w, r5.w
          mad r5.w, r1.w, r5.w, r11.w
          mul r5.w, r7.w, r5.w
          mov r22.x, cb9[r2.w + 0].w
          mov r22.yz, cb9[r2.w + 1].xxyx
          lt r6.w, l(0.000000), r8.w
          mad r24.xyz, r5.wwww, r22.xyzx, r9.xywx
          dp3_sat r8.w, r11.xyzx, r34.xyzx
          mad r33.xyz, r33.xyzx, r4.zzzz, r12.xyzx
          dp3 r4.z, r33.xyzx, r33.xyzx
          rsq r4.z, r4.z
          mul r33.xyz, r4.zzzz, r33.xyzx
          dp3 r4.z, r33.xyzx, r12.xyzx
          dp3 r11.w, r11.xyzx, r33.xyzx
          mad r13.z, |r11.w|, r1.z, -|r11.w|
          mad r11.w, |r11.w|, r13.z, l(1.000000)
          mad r13.z, r8.w, r0.x, r2.y
          mul r11.w, r11.w, r11.w
          mul r11.w, r13.z, r11.w
          rcp r11.w, r11.w
          mul r8.w, r12.w, r8.w
          mul r8.w, r8.w, r11.w
          mul r7.w, r7.w, r8.w
          mad r33.xyz, r7.wwww, r22.xyzx, r15.yzwy
          add_sat r4.z, -r4.z, l(1.000000)
          mul r8.w, r4.z, r4.z
          mul r8.w, r8.w, r8.w
          mul r4.z, r4.z, r8.w
          mul r4.z, r4.z, r7.w
          mad r34.xyz, r4.zzzz, r22.xyzx, r32.xyzx
          mad r22.xyz, r5.wwww, r22.xyzx, r31.xyzx
          movc r22.xyz, r0.wwww, r22.xyzx, r31.xyzx
          movc r9.xyw, r6.wwww, r24.xyxz, r9.xyxw
          movc r31.xyz, r6.wwww, r31.xyzx, r22.xyzx
          movc r32.xyz, r6.wwww, r34.xyzx, r32.xyzx
          movc r15.yzw, r6.wwww, r33.xxyz, r15.yyzw
        endif 
      endif 
    endif 
    break 
    case l(2)
    add r22.xy, -r10.xyxx, cb9[r2.w + 3].zwzz
    add r22.z, -r10.z, cb9[r2.w + 4].x
    dp3 r4.z, r22.xyzx, r22.xyzx
    rsq r4.z, r4.z
    mul r24.xyz, r4.zzzz, r22.xyzx
    dp3 r5.w, r11.xyzx, r24.xyzx
    mov_sat r6.w, r5.w
    movc r7.w, r0.w, |r5.w|, r6.w
    lt r8.w, l(0.000000), r7.w
    if_nz r8.w
      mov r33.xyz, cb9[r2.w + 7].yzwy
      mov r33.w, cb9[r2.w + 8].x
      dp4 r8.w, r33.xyzw, r10.xyzw
      lt r11.w, r8.w, l(1.000000)
      if_nz r11.w
        mov r24.xyz, l(1.000000,1.000000,1.000000,0)
        mov r11.w, l(0)
      else 
        add r34.xyz, -r10.xyzx, cb9[r2.w + 0].xyzx
        mul r12.w, cb9[r2.w + 3].x, cb9[r2.w + 3].x
        dp3 r13.z, r34.xyzx, r34.xyzx
        div r12.w, r12.w, r13.z
        min r12.w, r12.w, l(1.000000)
        mad_sat r34.xy, r8.wwww, cb9[r2.w + 2].xzxx, cb9[r2.w + 2].ywyy
        mul r34.zw, r34.xxxy, r34.xxxy
        mad r34.xy, r34.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
        mul r34.xy, r34.xyxx, r34.zwzz
        mul r12.w, r12.w, r34.x
        mul r12.w, r34.y, r12.w
        mov r34.xyz, cb9[r2.w + 4].yzwy
        mov r34.w, cb9[r2.w + 5].x
        dp4 r34.x, r34.xyzw, r10.xyzw
        mov r35.xyz, cb9[r2.w + 5].yzwy
        mov r35.w, cb9[r2.w + 6].x
        dp4 r34.y, r35.xyzw, r10.xyzw
        div r23.xy, r34.xyxx, r8.wwww
        lt r8.w, cb9[r2.w + 10].w, l(0.00048828)
        if_nz r8.w
          mad_sat r34.xy, |r23.xyxx|, cb9[r2.w + 12].xyxx, cb9[r2.w + 12].zwzz
          mul r34.zw, r34.xxxy, r34.xxxy
          mad r34.xy, r34.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
          mul r34.xy, r34.xyxx, r34.zwzz
          mul r8.w, r34.y, r34.x
        else 
          mul_sat r34.xyzw, |r23.yyxx|, cb9[r2.w + 11].xyzw
          log r34.xyzw, r34.xyzw
          mul r34.xyzw, r34.xyzw, cb9[r2.w + 12].zzzz
          exp r34.xyzw, r34.xyzw
          add r34.xy, r34.zwzz, r34.xyxx
          log r34.xy, r34.xyxx
          mul r34.xy, r34.xyxx, cb9[r2.w + 12].wwww
          exp r34.xy, r34.xyxx
          mul r13.z, r34.x, cb9[r2.w + 12].x
          mad r18.w, cb9[r2.w + 12].y, r34.y, l(-1.000000)
          mad r13.z, cb9[r2.w + 12].y, r34.y, -r13.z
          div_sat r13.z, r18.w, r13.z
          mul r18.w, r13.z, r13.z
          mad r13.z, r13.z, l(-2.000000), l(3.000000)
          mul r8.w, r13.z, r18.w
        endif 
        mul r11.w, r8.w, r12.w
        and r8.w, l(255), cb9[r2.w + 14].w
        if_nz r8.w
          dp3 r12.w, cb9[r2.w + 13].xyzx, r23.xyzx
          mov r34.x, cb9[r2.w + 13].w
          mov r34.yz, cb9[r2.w + 14].xxyx
          dp3 r13.z, r34.xyzx, r23.xyzx
          frc r34.x, r12.w
          frc r34.y, r13.z
          iadd r8.w, r8.w, l(-1)
          utof r34.z, r8.w
          sample_l_indexable(texture2darray)(float,float,float,float) r24.xyz, r34.xyzx, t20.xyzw, s2, l(0.000000)
        else 
          mov r24.xyz, l(1.000000,1.000000,1.000000,0)
        endif 
      endif 
      mov r34.x, cb9[r2.w + 0].w
      mov r34.yz, cb9[r2.w + 1].xxyx
      mul r23.xyw, r24.xyxz, r34.xyxz
      lt r8.w, l(0.000000), r11.w
      if_nz r8.w
        ubfe r8.w, l(3), l(27), cb9[r2.w + 1].w
        ine r8.w, r8.w, l(1)
        if_nz r8.w
          mad r8.w, |r5.w|, l(-0.200000), l(0.400000)
          lt r12.w, r5.w, l(0.000000)
          and r12.w, r0.w, r12.w
          movc r8.w, r12.w, -r8.w, r8.w
          mad r25.xyz, r11.xyzx, r8.wwww, r10.xyzx
          mov r34.xyz, cb9[r2.w + 6].yzwy
          mov r34.w, cb9[r2.w + 7].x
          dp4 r8.w, r34.xyzw, r25.xyzw
          dp4 r12.w, r33.xyzw, r25.xyzw
          ge r13.z, r12.w, r8.w
          if_nz r13.z
            mov r33.xyz, cb9[r2.w + 4].yzwy
            mov r33.w, cb9[r2.w + 5].x
            dp4 r24.x, r33.xyzw, r25.xyzw
            mov r33.xyz, cb9[r2.w + 5].yzwy
            mov r33.w, cb9[r2.w + 6].x
            dp4 r24.y, r33.xyzw, r25.xyzw
            div r24.xy, r24.xyxx, r12.wwww
            mad_sat r24.xy, r24.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
            mad r25.x, r24.x, cb9[r2.w + 8].y, cb9[r2.w + 8].z
            mad r25.y, r24.y, cb9[r2.w + 8].w, cb9[r2.w + 9].x
            div r8.w, r8.w, r12.w
            max r8.w, r8.w, l(0.00006104)
            and r12.w, l(0x0000ffff), cb9[r2.w + 1].w
            if_nz cb2[58].y
              utof r24.z, r12.w
              mov r13.z, l(0)
              mov r18.w, l(0)
              loop 
                ige r19.w, r18.w, l(8)
                breakc_nz r19.w
                dp2 r33.x, icb[r18.w + 0].xyxx, r28.xyxx
                dp2 r33.y, icb[r18.w + 0].yxyy, r28.xzxx
                mad r24.xy, r33.xyxx, cb9[r2.w + 3].yyyy, r25.xyxx
                sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.w, r24.xyzx, t9.xxxx, s13, r8.w
                mad r13.z, r19.w, l(0.125000), r13.z
                iadd r18.w, r18.w, l(1)
              endloop 
            else 
              utof r25.z, r12.w
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r13.z, r25.xyzx, t9.xxxx, s13, r8.w
            endif 
            mul r8.w, r13.z, r13.z
            mul r8.w, r13.z, r8.w
          else 
            mov r8.w, l(1.000000)
          endif 
        else 
          mov r8.w, l(1.000000)
        endif 
        mul r8.w, r8.w, r11.w
        lt r11.w, l(0.000000), r8.w
        if_nz r11.w
          mul r11.w, r1.z, cb9[r2.w + 1].z
          mul r11.w, r6.w, r11.w
          ubfe r12.w, l(4), l(16), cb9[r2.w + 1].w
          ult r18.w, l(0), r12.w
          and r18.w, r9.z, r18.w
          if_nz r18.w
            iadd r12.w, r12.w, cb2[0].x
            imad r12.w, r12.w, l(15), l(-15)
            mad r18.w, |r5.w|, l(-0.200000), l(0.400000)
            lt r19.w, r5.w, l(0.000000)
            and r19.w, r0.w, r19.w
            movc r18.w, r19.w, -r18.w, r18.w
            mad r26.xyz, r11.xyzx, r18.wwww, r10.xyzx
            mov r33.xyz, cb9[r12.w + 6].yzwy
            mov r33.w, cb9[r12.w + 7].x
            dp4 r18.w, r33.xyzw, r26.xyzw
            mov r33.xyz, cb9[r12.w + 7].yzwy
            mov r33.w, cb9[r12.w + 8].x
            dp4 r19.w, r33.xyzw, r26.xyzw
            lt r20.w, r19.w, r18.w
            if_z r20.w
              mov r33.xyz, cb9[r12.w + 4].yzwy
              mov r33.w, cb9[r12.w + 5].x
              dp4 r24.x, r33.xyzw, r26.xyzw
              mov r33.xyz, cb9[r12.w + 5].yzwy
              mov r33.w, cb9[r12.w + 6].x
              dp4 r24.y, r33.xyzw, r26.xyzw
              div r24.xy, r24.xyxx, r19.wwww
              mad r24.xy, r24.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
              add r25.x, r24.x, cb9[r12.w + 9].w
              add r25.y, r24.y, cb9[r12.w + 10].x
              mul r24.xy, r25.xyxx, cb9[r12.w + 9].yzyy
              div r25.xy, cb9[r12.w + 3].yyyy, cb9[r12.w + 8].ywyy
              add r26.xy, -r25.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
              ge r26.xy, r24.xyxx, r26.xyxx
              ge r25.xy, r25.xyxx, r24.xyxx
              or r25.xy, r25.xyxx, r26.xyxx
              or r24.z, r25.y, r25.x
              if_z r24.z
                mov_sat r24.xy, r24.xyxx
                mad r25.x, r24.x, cb9[r12.w + 8].y, cb9[r12.w + 8].z
                mad r25.y, r24.y, cb9[r12.w + 8].w, cb9[r12.w + 9].x
                mul r24.x, r19.w, cb9[r12.w + 10].z
                mad r18.w, cb9[r12.w + 10].y, r19.w, r18.w
                div r18.w, r18.w, r24.x
              endif 
            else 
              mov r24.z, l(-1)
            endif 
            or r19.w, r20.w, r24.z
            if_z r19.w
              max r18.w, r18.w, l(0.00006104)
              and r19.w, l(0x0000ffff), cb9[r12.w + 1].w
              if_nz cb2[58].y
                utof r24.z, r19.w
                mov r20.w, l(0)
                mov r26.x, l(0)
                loop 
                  ige r26.y, r26.x, l(8)
                  breakc_nz r26.y
                  dp2 r33.x, icb[r26.x + 0].xyxx, r29.xyxx
                  dp2 r33.y, icb[r26.x + 0].yxyy, r29.xzxx
                  mad r24.xy, r33.xyxx, cb9[r12.w + 3].yyyy, r25.xyxx
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.x, r24.xyzx, t9.xxxx, s13, r18.w
                  mad r20.w, r24.x, l(0.125000), r20.w
                  iadd r26.x, r26.x, l(1)
                endloop 
              else 
                utof r25.z, r19.w
                sample_c_lz_indexable(texture2darray)(float,float,float,float) r20.w, r25.xyzx, t9.xxxx, s13, r18.w
              endif 
              mul r12.w, r20.w, r20.w
              mul r12.w, r20.w, r12.w
            else 
              mov r12.w, l(1.000000)
            endif 
            mul r8.w, r8.w, r12.w
          else 
            ubfe r2.w, l(4), l(20), cb9[r2.w + 1].w
            ult r12.w, l(0), r2.w
            and r12.w, r0.z, r12.w
            if_nz r12.w
              iadd r2.w, r2.w, cb2[0].x
              imad r2.w, r2.w, l(15), l(-15)
              mad r12.w, |r5.w|, l(-0.200000), l(0.400000)
              lt r18.w, r5.w, l(0.000000)
              and r18.w, r0.w, r18.w
              movc r12.w, r18.w, -r12.w, r12.w
              mad r27.xyz, r11.xyzx, r12.wwww, r10.xyzx
              mov r33.xyz, cb9[r2.w + 6].yzwy
              mov r33.w, cb9[r2.w + 7].x
              dp4 r12.w, r33.xyzw, r27.xyzw
              mov r33.xyz, cb9[r2.w + 7].yzwy
              mov r33.w, cb9[r2.w + 8].x
              dp4 r18.w, r33.xyzw, r27.xyzw
              lt r19.w, r18.w, r12.w
              if_z r19.w
                mov r33.xyz, cb9[r2.w + 4].yzwy
                mov r33.w, cb9[r2.w + 5].x
                dp4 r24.x, r33.xyzw, r27.xyzw
                mov r33.xyz, cb9[r2.w + 5].yzwy
                mov r33.w, cb9[r2.w + 6].x
                dp4 r24.y, r33.xyzw, r27.xyzw
                div r24.xy, r24.xyxx, r18.wwww
                mad r24.xy, r24.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                add r25.x, r24.x, cb9[r2.w + 9].w
                add r25.y, r24.y, cb9[r2.w + 10].x
                mul r24.xy, r25.xyxx, cb9[r2.w + 9].yzyy
                div r25.xy, cb9[r2.w + 3].yyyy, cb9[r2.w + 8].ywyy
                add r26.xy, -r25.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                ge r26.xy, r24.xyxx, r26.xyxx
                ge r25.xy, r25.xyxx, r24.xyxx
                or r25.xy, r25.xyxx, r26.xyxx
                or r24.z, r25.y, r25.x
                if_z r24.z
                  mov_sat r24.xy, r24.xyxx
                  mad r25.x, r24.x, cb9[r2.w + 8].y, cb9[r2.w + 8].z
                  mad r25.y, r24.y, cb9[r2.w + 8].w, cb9[r2.w + 9].x
                  mul r24.x, r18.w, cb9[r2.w + 10].z
                  mad r12.w, cb9[r2.w + 10].y, r18.w, r12.w
                  div r12.w, r12.w, r24.x
                endif 
              else 
                mov r24.z, l(-1)
              endif 
              or r18.w, r19.w, r24.z
              if_z r18.w
                max r12.w, r12.w, l(0.00006104)
                and r18.w, l(0x0000ffff), cb9[r2.w + 1].w
                if_nz cb2[58].y
                  utof r24.z, r18.w
                  mov r19.w, l(0)
                  mov r26.x, l(0)
                  loop 
                    ige r26.y, r26.x, l(8)
                    breakc_nz r26.y
                    dp2 r27.x, icb[r26.x + 0].xyxx, r30.xyxx
                    dp2 r27.y, icb[r26.x + 0].yxyy, r30.xzxx
                    mad r24.xy, r27.xyxx, cb9[r2.w + 3].yyyy, r25.xyxx
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.x, r24.xyzx, t9.xxxx, s13, r12.w
                    mad r19.w, r24.x, l(0.125000), r19.w
                    iadd r26.x, r26.x, l(1)
                  endloop 
                else 
                  utof r25.z, r18.w
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.w, r25.xyzx, t9.xxxx, s13, r12.w
                endif 
                mul r2.w, r19.w, r19.w
                mul r2.w, r19.w, r2.w
              else 
                mov r2.w, l(1.000000)
              endif 
              mul r8.w, r2.w, r8.w
            endif 
          endif 
          mad r2.w, -r7.w, r2.x, l(1.000000)
          mul r2.w, r2.w, r2.w
          mad r2.w, -r2.w, l(0.620000), l(0.620000)
          add r2.w, -r7.w, r2.w
          mad r2.w, r1.w, r2.w, r7.w
          mul r2.w, r8.w, r2.w
          lt r5.w, l(0.000000), r5.w
          mad r24.xyz, r2.wwww, r23.xywx, r9.xywx
          mad r22.xyz, r22.xyzx, r4.zzzz, r12.xyzx
          dp3 r4.z, r22.xyzx, r22.xyzx
          rsq r4.z, r4.z
          mul r22.xyz, r4.zzzz, r22.xyzx
          dp3 r4.z, r22.xyzx, r12.xyzx
          dp3 r7.w, r11.xyzx, r22.xyzx
          mad r12.w, |r7.w|, r1.z, -|r7.w|
          mad r7.w, |r7.w|, r12.w, l(1.000000)
          mad r6.w, r6.w, r0.x, r2.y
          mul r7.w, r7.w, r7.w
          mul r6.w, r6.w, r7.w
          rcp r6.w, r6.w
          mul r6.w, r11.w, r6.w
          mul r6.w, r6.w, r8.w
          mul r6.w, r6.w, l(0.250000)
          mad r22.xyz, r6.wwww, r23.xywx, r15.yzwy
          add_sat r4.z, -r4.z, l(1.000000)
          mul r7.w, r4.z, r4.z
          mul r7.w, r7.w, r7.w
          mul r4.z, r4.z, r7.w
          mul r4.z, r4.z, r6.w
          mad r25.xyz, r4.zzzz, r23.xywx, r32.xyzx
          mad r23.xyw, r2.wwww, r23.xyxw, r31.xyxz
          movc r23.xyw, r0.wwww, r23.xyxw, r31.xyxz
          movc r9.xyw, r5.wwww, r24.xyxz, r9.xyxw
          movc r31.xyz, r5.wwww, r31.xyzx, r23.xywx
          movc r32.xyz, r5.wwww, r25.xyzx, r32.xyzx
          movc r15.yzw, r5.wwww, r22.xxyz, r15.yyzw
        endif 
      endif 
    endif 
    break 
    default 
    break 
  endswitch 
  iadd r2.z, r2.z, l(1)
endloop 
mad r2.xyz, r4.xwyx, l(1.000000, 3.000000, 2.000000, 0.000000), l(0.000000, 0.500000, -1.000000, 0.000000)
ftou r0.x, r2.y
mad r4.xyz, r5.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r0.y, r4.x
ieq r0.y, r0.x, r0.y
movc r0.yz, r0.yyyy, r4.yyzy, l(0,-1.000000,0,0)
mad r4.xyz, r6.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r1.z, r4.x
ieq r1.z, r0.x, r1.z
movc r1.zw, r1.zzzz, r4.yyyz, l(0,0,-1.000000,0)
mad r4.xyz, r7.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r3.x, r4.x
ieq r3.x, r0.x, r3.x
movc r4.xy, r3.xxxx, r4.yzyy, l(-1.000000,0,0,0)
mad r5.xyz, r8.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r3.x, r5.x
ieq r0.x, r0.x, r3.x
movc r4.zw, r0.xxxx, r5.yyyz, l(0,0,-1.000000,0)
mov r5.x, r0.y
mov r5.y, r1.z
mov r5.zw, r4.xxxz
add r5.xyzw, -r2.xxxx, r5.xyzw
ge r5.xyzw, |r5.xyzw|, l(0.00902149, 0.00902149, 0.00902149, 0.00902149)
movc r5.xyzw, r5.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
add r0.x, r5.y, r5.x
add r0.x, r5.z, r0.x
add r0.x, r5.w, r0.x
mul r0.y, r1.w, r5.y
mad r0.y, r5.x, r0.z, r0.y
mad r0.y, r5.z, r4.y, r0.y
mad r0.y, r5.w, r4.w, r0.y
div r2.w, r0.y, r0.x
ge r0.x, l(0.000000), r0.x
movc r2.yz, r0.xxxx, l(0,0,0,0), r2.zzwz
and r0.xy, r1.xyxx, l(1, 1, 0, 0)
ieq r0.x, r0.y, r0.x
movc r0.xyz, r0.xxxx, r2.xyzx, r2.xzyx
mad r0.x, -r0.z, l(0.500000), r0.x
add r2.y, r0.x, r0.z
mad r2.z, -r0.y, l(0.500000), r0.x
add r2.x, r0.y, r2.z
mul r0.xyz, r3.yzwy, r9.xywx
mad r0.xyz, r31.xyzx, r2.xyzx, r0.xyzx
mul r4.xyz, r32.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
mad r4.xyz, r15.yzwy, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
add r0.xyz, r0.xyzx, r4.xyzx
add r4.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r4.xyz, r4.xyzx, r32.xyzx
mad r2.xyz, r15.yzwy, r2.xyzx, r4.xyzx
mad r2.xyz, r9.xywx, r3.yzwy, r2.xyzx
movc r0.xyz, r0.wwww, r0.xyzx, r2.xyzx
lt r0.w, l(0.000000), cb2[9].z
if_nz r0.w
  dp3 r0.w, r10.xyzx, r10.xyzx
  rsq r1.z, r0.w
  mul r2.xyz, r1.zzzz, r10.xyzx
  sqrt r0.w, r0.w
  lt r1.z, l(0.000000), cb2[13].w
  if_nz r1.z
    mad r1.zw, r0.wwww, cb2[15].xxxy, cb2[14].zzzw
    mul r1.zw, r1.zzzw, cb2[16].xxxy
    lt r2.w, l(0.010000), |r10.z|
    mul r3.xy, r10.zzzz, cb2[15].zwzz
    mul r3.zw, r3.xxxy, l(0.000000, 0.000000, -1.442695, -1.442695)
    exp r3.zw, r3.zzzw
    add r3.zw, -r3.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    div r3.xy, r3.zwzz, r3.xyxx
    mul r3.xy, r1.zwzz, r3.xyxx
    movc r1.zw, r2.wwww, r3.xxxy, r1.zzzw
    mul r3.xyz, r1.zzzz, cb2[12].xyzx
    exp r3.xyz, r3.xyzx
    mul r4.xyz, r1.wwww, cb2[12].xyzx
    exp r4.xyz, r4.xyzx
    add r4.xyz, -r3.xyzx, r4.xyzx
    mad r3.xyz, cb2[13].wwww, r4.xyzx, r3.xyzx
  else 
    mad r1.z, r0.w, cb2[15].x, cb2[14].z
    mul r1.z, r1.z, cb2[16].x
    lt r1.w, l(0.010000), |r10.z|
    mul r2.w, r10.z, cb2[15].z
    mul r3.w, r2.w, l(-1.442695)
    exp r3.w, r3.w
    add r3.w, -r3.w, l(1.000000)
    div r2.w, r3.w, r2.w
    mul r2.w, r1.z, r2.w
    movc r1.z, r1.w, r2.w, r1.z
    mul r4.xyz, r1.zzzz, cb2[12].xyzx
    exp r3.xyz, r4.xyzx
  endif 
  mad r3.xyz, r3.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r3.xyz, r3.xyzx, -cb2[9].zzzz
  dp3 r1.z, cb2[7].yzwy, -r2.xyzx
  mad r1.w, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r2.x, cb2[8].w, -r1.z, l(1.000000)
  mul r2.x, r2.x, r2.x
  mul r2.x, r2.x, l(12.566371)
  div r1.w, r1.w, r2.x
  add r0.w, r0.w, -cb2[10].w
  mul_sat r0.w, r0.w, cb2[11].w
  mul r0.w, r0.w, r1.w
  mov_sat r1.z, r1.z
  mad r1.z, r1.z, r1.z, l(1.000000)
  mad r1.z, r1.z, l(0.05968310), l(-1.000000)
  mad r1.z, cb2[8].z, r1.z, l(1.000000)
  mul r2.xyz, r0.wwww, cb2[11].xyzx
  mad r2.xyz, r1.zzzz, cb2[10].xyzx, r2.xyzx
  mul r2.xyz, r2.xyzx, cb2[9].wwww
  add r4.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r2.xyz, r2.xyzx, r4.xyzx
  mad r2.xyz, r0.xyzx, r3.xyzx, r2.xyzx
else 
  mul r0.w, r10.z, cb2[6].x
  mad r1.z, cb2[6].x, r10.z, cb2[5].x
  lt r1.w, |r0.w|, l(0.000100)
  min r2.w, r1.z, l(64.000000)
  mul r2.w, r2.w, l(1.442695)
  exp r2.w, r2.w
  mov_sat r3.x, cb2[6].z
  lt r3.y, r1.z, l(0.000000)
  add r1.z, r1.z, l(1.000000)
  movc r1.z, r3.y, r2.w, r1.z
  add r1.z, r1.z, -cb2[6].z
  movc r0.w, r1.w, l(1.000000), r0.w
  div r0.w, r1.z, r0.w
  movc r0.w, r1.w, r3.x, r0.w
  mul r0.w, r0.w, cb2[5].z
  dp3 r1.z, r10.xyzx, r10.xyzx
  sqrt r1.w, r1.z
  mad r0.w, r0.w, r1.w, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  rsq r1.z, r1.z
  mul r3.xyz, r1.zzzz, r10.xyzx
  dp3 r1.z, cb2[7].yzwy, r3.xyzx
  mad_sat r1.z, cb2[8].y, r1.z, cb2[8].x
  add r3.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r3.xyzw, r1.zzzz, r3.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r3.w
  add r3.xyz, -r0.xyzx, r3.xyzx
  mad r2.xyz, r0.wwww, r3.xyzx, r0.xyzx
endif 
mul r0.xyzw, r2.xyzx, cb1[85].yyyy
ge r2.xyzw, r0.wyzw, l(0.00006104, 0.00006104, 0.00006104, 0.00006104)
and r0.xyzw, r0.xyzw, r2.xyzw
min r0.xyzw, r0.xyzw, l(65024.000000, 65024.000000, 64512.000000, 65024.000000)
store_uav_typed u0.xyzw, r1.xyyy, r0.xyzw
ret 
// Approximately 2302 instruction slots used
