//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:40:00 2021
//
//
// Buffer Definitions: 
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16 [unused]
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16 [unused]
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4 [unused]
//   uint numRefProbes;                 // Offset:    4 Size:     4 [unused]
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224 [unused]
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256 [unused]
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48 [unused]
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4 [unused]
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4 [unused]
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4 [unused]
//   uint enableDitheredShadow;         // Offset:  932 Size:     4 [unused]
//   uint oitMaxEntries;                // Offset:  936 Size:     4
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for spritePos
// {
//
//   struct FxComputeSprite_PosPack
//   {
//       
//       uint4 data[2];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    32
//
// }
//
// Resource bind info for spriteData
// {
//
//   struct FxComputeSprite_DataPack
//   {
//       
//       uint4 data[4];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    64
//
// }
//
// Resource bind info for spriteExtra
// {
//
//   struct FxComputeSprite_ExtraPack
//   {
//       
//       uint4 data[3];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    48
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// computeSpritesSampler             sampler      NA          NA             s0      1 
// computeSpritesPointSampler        sampler      NA          NA             s1      1 
// floatZSampler                     texture  float4          2d             t0      1 
// spritePos                         texture  struct         r/o             t1      1 
// spriteData                        texture  struct         r/o             t2      1 
// spriteExtra                       texture  struct         r/o             t3      1 
// frameBuffer                       texture  float4          2d            t21      1 
// oitFallbackBuffer                 texture  float4          2d            t22      1 
// oit_Nodes                         texture   uint2     2darray            t24      1 
// spriteCullRough                   texture    uint     2darray            t25      1 
// spriteCullRoughRough              texture    uint     2darray            t26      1 
// lmapTex                           texture  float4     2darray            t29      1 
// materialTexBC7                    texture  float4     2darray            t42      1 
// materialTexBC3                    texture  float4     2darray            t43      1 
// materialTexMask                   texture  float4     2darray            t45      1 
// frameAdaptiveTransparencyDepth        UAV  float4          2d             u2      1 
// frameAdaptiveTransparencyTrans        UAV  float4          2d             u3      1 
// frameAlphaResult                      UAV   float          2d             u4      1 
// frameBufferW                          UAV  float4          2d             u5      1 
// gOit_Pixels                           UAV    uint          2d             u6      1 
// frameDepthW                           UAV   float          2d             u7      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB1[86], immediateIndexed
dcl_constantbuffer CB2[59], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_structured t1, 32
dcl_resource_structured t2, 64
dcl_resource_structured t3, 48
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_texture2darray (uint,uint,uint,uint) t24
dcl_resource_texture2darray (uint,uint,uint,uint) t25
dcl_resource_texture2darray (uint,uint,uint,uint) t26
dcl_resource_texture2darray (float,float,float,float) t29
dcl_resource_texture2darray (float,float,float,float) t42
dcl_resource_texture2darray (float,float,float,float) t43
dcl_resource_texture2darray (float,float,float,float) t45
dcl_uav_typed_texture2d (float,float,float,float) u2
dcl_uav_typed_texture2d (float,float,float,float) u3
dcl_uav_typed_texture2d (float,float,float,float) u4
dcl_uav_typed_texture2d (float,float,float,float) u5
dcl_uav_typed_texture2d (uint,uint,uint,uint) u6
dcl_uav_typed_texture2d (float,float,float,float) u7
dcl_input vThreadIDInGroupFlattened
dcl_input vThreadGroupID.xy
dcl_input vThreadID.xy
dcl_temps 32
dcl_indexableTemp x0[4], 4
dcl_indexableTemp x1[4], 4
dcl_indexableTemp x2[4], 4
dcl_indexableTemp x3[4], 4
dcl_indexableTemp x4[4], 4
dcl_indexableTemp x5[4], 4
dcl_indexableTemp x6[4], 4
dcl_indexableTemp x7[4], 4
dcl_indexableTemp x8[4], 4
dcl_indexableTemp x9[4], 4
dcl_tgsm_structured g0, 20, 64
dcl_tgsm_structured g1, 20, 64
dcl_thread_group 8, 8, 1
ftou r0.xy, cb1[44].xyxx
ult r0.xy, r0.xyxx, vThreadID.xyxx
or r0.x, r0.y, r0.x
if_nz r0.x
  ret 
endif 
ld_uav_typed_indexable(texture2d)(uint,uint,uint,uint) r0.x, vThreadID.xyyy, u6.xyzw
ieq r0.y, r0.x, l(0)
ieq r0.z, cb1[82].x, l(0)
and r0.y, r0.z, r0.y
if_nz r0.y
  store_uav_typed u4.xyzw, vThreadID.xyyy, l(1.000000,1.000000,1.000000,1.000000)
  mov r1.xy, vThreadID.xyxx
  mov r1.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r0.y, r1.xyzw, t0.yxzw
  store_uav_typed u7.xyzw, vThreadID.xyyy, r0.yyyy
  ret 
endif 
and r0.y, r0.x, l(0x0000ffff)
umin r0.y, r0.y, cb2[58].z
store_structured g0.xyzw, vThreadIDInGroupFlattened.x, l(0), l(1000000015047466219876688855040.000000,1000000015047466219876688855040.000000,1000000015047466219876688855040.000000,1000000015047466219876688855040.000000)
store_structured g1.xyzw, vThreadIDInGroupFlattened.x, l(0), l(1.000000,1.000000,1.000000,1.000000)
if_nz r0.y
  ult r1.xyz, l(1, 2, 3, 0), r0.yyyy
  if_nz r0.y
    mov r2.xy, vThreadID.xyxx
    mov r2.zw, l(0,0,0,0)
    ld_indexable(texture2darray)(uint,uint,uint,uint) r0.z, r2.xyzw, t24.xzyw
    and r2.xyz, r0.zzzz, l(-2048, 1, 2046, 0)
    movc r3.x, r2.y, r0.z, l(0)
    utof r0.w, r2.z
    mad r1.w, -r0.w, l(0.00048876), l(1.000000)
    lt r0.w, l(409.200012), r0.w
    if_nz r0.w
      ushr r0.w, r0.z, l(2)
      and r0.w, r0.w, l(0x3ffffe00)
      ge r2.y, r0.w, l(0.00049219)
      if_nz r2.y
        add r0.w, -r0.w, l(1.000000)
        store_structured g0.x, vThreadIDInGroupFlattened.x, l(16), l(1000000015047466219876688855040.000000)
        store_structured g1.x, vThreadIDInGroupFlattened.x, l(16), l(1.000000)
        mov r2.y, l(3)
        loop 
          ilt r2.z, r2.y, l(0)
          breakc_nz r2.z
          ige r2.z, r2.y, l(0)
          if_nz r2.z
            ishl r2.z, r2.y, l(2)
            iadd r2.w, r2.z, l(4)
            ld_structured r3.z, vThreadIDInGroupFlattened.x, r2.z, g0.xxxx
            store_structured g0.x, vThreadIDInGroupFlattened.x, r2.w, r3.z
            ld_structured r2.z, vThreadIDInGroupFlattened.x, r2.z, g1.xxxx
            mul r2.z, r1.w, r2.z
            store_structured g1.x, vThreadIDInGroupFlattened.x, r2.w, r2.z
          endif 
          iadd r2.y, r2.y, l(-1)
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, l(0), r0.w
        store_structured g1.x, vThreadIDInGroupFlattened.x, l(0), r1.w
        ld_structured r0.w, vThreadIDInGroupFlattened.x, l(16), g0.xxxx
        ne r0.w, r0.w, l(1000000015047466219876688855040.000000)
        if_nz r0.w
          mov r0.w, l(2)
          loop 
            ige r2.y, r0.w, l(4)
            breakc_nz r2.y
            ishl r2.y, r0.w, l(2)
            ld_structured r2.z, vThreadIDInGroupFlattened.x, r2.y, g0.xxxx
            iadd r2.y, r2.y, l(-4)
            ld_structured r2.w, vThreadIDInGroupFlattened.x, r2.y, g0.xxxx
            add r2.z, -r2.w, r2.z
            ld_structured r2.yw, vThreadIDInGroupFlattened.x, r2.y, g1.xxxy
            add r2.y, -r2.w, r2.y
            mul r2.y, r2.y, r2.z
            mov x0[r0.w + 0].x, r2.y
            iadd r0.w, r0.w, l(1)
          endloop 
          mov r0.w, x0[2].x
          mov r2.y, x0[3].x
          lt r0.w, r2.y, r0.w
          movc r2.yz, r0.wwww, l(0,3,2,0), l(0,2,1,0)
          mov r0.w, l(2)
          loop 
            ige r2.w, r0.w, l(4)
            breakc_nz r2.w
            ige r2.w, r0.w, r2.y
            if_nz r2.w
              ishl r2.w, r0.w, l(2)
              iadd r3.z, r2.w, l(4)
              ld_structured r3.z, vThreadIDInGroupFlattened.x, r3.z, g0.xxxx
              store_structured g0.x, vThreadIDInGroupFlattened.x, r2.w, r3.z
            endif 
            iadd r0.w, r0.w, l(1)
          endloop 
          mov r0.w, l(1)
          loop 
            ige r2.y, r0.w, l(4)
            breakc_nz r2.y
            ige r2.y, r0.w, r2.z
            if_nz r2.y
              ishl r2.y, r0.w, l(2)
              iadd r2.w, r2.y, l(4)
              ld_structured r2.w, vThreadIDInGroupFlattened.x, r2.w, g1.xxxx
              store_structured g1.x, vThreadIDInGroupFlattened.x, r2.y, r2.w
            endif 
            iadd r0.w, r0.w, l(1)
          endloop 
        endif 
      endif 
    else 
      mov r0.z, l(0)
    endif 
  else 
    mov r2.x, l(-2048)
    mov r1.w, l(1.000000)
    mov r3.x, l(0)
    mov r0.z, l(0)
  endif 
  if_nz r1.x
    mov r4.xy, vThreadID.xyxx
    mov r4.zw, l(0,0,1,0)
    ld_indexable(texture2darray)(uint,uint,uint,uint) r0.w, r4.xyzw, t24.xzwy
    and r2.yz, r0.wwww, l(0, 1, 2046, 0)
    umax r4.x, r0.w, r3.x
    umin r4.y, r3.x, r0.w
    mov r3.y, l(0)
    movc r3.xy, r2.yyyy, r4.xyxx, r3.xyxx
    utof r1.x, r2.z
    mad r2.y, -r1.x, l(0.00048876), l(1.000000)
    mul r1.w, r1.w, r2.y
    lt r1.x, l(409.200012), r1.x
    if_nz r1.x
      umax r0.z, r0.w, r0.z
      ushr r1.x, r0.w, l(2)
      and r1.x, r1.x, l(0x3ffffe00)
      ge r2.z, r1.x, l(0.00049219)
      if_nz r2.z
        add r1.x, -r1.x, l(1.000000)
        mov r4.y, l(4)
        mov r2.zw, l(0,0,4,0)
        loop 
          ige r3.z, r2.w, l(4)
          breakc_nz r3.z
          ishl r3.z, r2.w, l(2)
          ld_structured r3.z, vThreadIDInGroupFlattened.x, r3.z, g0.xxxx
          ge r3.z, r3.z, r1.x
          if_nz r3.z
            mov r2.z, r2.w
            break 
          endif 
          iadd r4.x, r2.w, l(1)
          mov r2.zw, r4.yyyx
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, l(16), l(1000000015047466219876688855040.000000)
        store_structured g1.x, vThreadIDInGroupFlattened.x, l(16), l(1.000000)
        ishl r2.w, r2.z, l(2)
        iadd r3.z, r2.w, l(-4)
        ld_structured r3.z, vThreadIDInGroupFlattened.x, r3.z, g1.xxxx
        movc r3.z, r2.z, r3.z, l(1.000000)
        mov r3.w, l(3)
        loop 
          ilt r4.x, r3.w, l(0)
          breakc_nz r4.x
          ige r4.x, r3.w, r2.z
          if_nz r4.x
            ishl r4.x, r3.w, l(2)
            iadd r4.y, r4.x, l(4)
            ld_structured r4.z, vThreadIDInGroupFlattened.x, r4.x, g0.xxxx
            store_structured g0.x, vThreadIDInGroupFlattened.x, r4.y, r4.z
            ld_structured r4.x, vThreadIDInGroupFlattened.x, r4.x, g1.xxxx
            mul r4.x, r2.y, r4.x
            store_structured g1.x, vThreadIDInGroupFlattened.x, r4.y, r4.x
          endif 
          iadd r3.w, r3.w, l(-1)
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, r2.w, r1.x
        mul r1.x, r2.y, r3.z
        store_structured g1.x, vThreadIDInGroupFlattened.x, r2.w, r1.x
        ld_structured r1.x, vThreadIDInGroupFlattened.x, l(16), g0.xxxx
        ne r1.x, r1.x, l(1000000015047466219876688855040.000000)
        if_nz r1.x
          mov r1.x, l(2)
          loop 
            ige r2.y, r1.x, l(4)
            breakc_nz r2.y
            ishl r2.y, r1.x, l(2)
            ld_structured r2.z, vThreadIDInGroupFlattened.x, r2.y, g0.xxxx
            iadd r2.y, r2.y, l(-4)
            ld_structured r2.w, vThreadIDInGroupFlattened.x, r2.y, g0.xxxx
            add r2.z, -r2.w, r2.z
            ld_structured r2.yw, vThreadIDInGroupFlattened.x, r2.y, g1.xxxy
            add r2.y, -r2.w, r2.y
            mul r2.y, r2.y, r2.z
            mov x1[r1.x + 0].x, r2.y
            iadd r1.x, r1.x, l(1)
          endloop 
          mov r1.x, x1[2].x
          mov r2.y, x1[3].x
          lt r1.x, r2.y, r1.x
          movc r2.yz, r1.xxxx, l(0,3,2,0), l(0,2,1,0)
          mov r1.x, l(2)
          loop 
            ige r2.w, r1.x, l(4)
            breakc_nz r2.w
            ige r2.w, r1.x, r2.y
            if_nz r2.w
              ishl r2.w, r1.x, l(2)
              iadd r3.z, r2.w, l(4)
              ld_structured r3.z, vThreadIDInGroupFlattened.x, r3.z, g0.xxxx
              store_structured g0.x, vThreadIDInGroupFlattened.x, r2.w, r3.z
            endif 
            iadd r1.x, r1.x, l(1)
          endloop 
          mov r1.x, l(1)
          loop 
            ige r2.y, r1.x, l(4)
            breakc_nz r2.y
            ige r2.y, r1.x, r2.z
            if_nz r2.y
              ishl r2.y, r1.x, l(2)
              iadd r2.w, r2.y, l(4)
              ld_structured r2.w, vThreadIDInGroupFlattened.x, r2.w, g1.xxxx
              store_structured g1.x, vThreadIDInGroupFlattened.x, r2.y, r2.w
            endif 
            iadd r1.x, r1.x, l(1)
          endloop 
        endif 
      endif 
    endif 
    bfi r0.w, l(11), l(0), l(1), r0.w
  else 
    mov r0.w, l(-2047)
    mov r3.y, l(0)
  endif 
  if_nz r1.y
    mov r4.xy, vThreadID.xyxx
    mov r4.zw, l(0,0,2,0)
    ld_indexable(texture2darray)(uint,uint,uint,uint) r1.x, r4.xyzw, t24.yxzw
    and r2.yz, r1.xxxx, l(0, 1, 2046, 0)
    umax r1.y, r1.x, r3.y
    umax r4.x, r1.y, r3.x
    umin r4.y, r3.x, r1.y
    movc r3.xy, r2.yyyy, r4.xyxx, r3.xyxx
    utof r1.y, r2.z
    mad r2.y, -r1.y, l(0.00048876), l(1.000000)
    mul r1.w, r1.w, r2.y
    lt r1.y, l(409.200012), r1.y
    if_nz r1.y
      umax r0.z, r0.z, r1.x
      ushr r1.y, r1.x, l(2)
      and r1.y, r1.y, l(0x3ffffe00)
      ge r2.z, r1.y, l(0.00049219)
      if_nz r2.z
        add r1.y, -r1.y, l(1.000000)
        mov r4.y, l(4)
        mov r2.zw, l(0,0,4,0)
        loop 
          ige r3.z, r2.w, l(4)
          breakc_nz r3.z
          ishl r3.z, r2.w, l(2)
          ld_structured r3.z, vThreadIDInGroupFlattened.x, r3.z, g0.xxxx
          ge r3.z, r3.z, r1.y
          if_nz r3.z
            mov r2.z, r2.w
            break 
          endif 
          iadd r4.x, r2.w, l(1)
          mov r2.zw, r4.yyyx
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, l(16), l(1000000015047466219876688855040.000000)
        store_structured g1.x, vThreadIDInGroupFlattened.x, l(16), l(1.000000)
        ishl r2.w, r2.z, l(2)
        iadd r3.z, r2.w, l(-4)
        ld_structured r3.z, vThreadIDInGroupFlattened.x, r3.z, g1.xxxx
        movc r3.z, r2.z, r3.z, l(1.000000)
        mov r3.w, l(3)
        loop 
          ilt r4.x, r3.w, l(0)
          breakc_nz r4.x
          ige r4.x, r3.w, r2.z
          if_nz r4.x
            ishl r4.x, r3.w, l(2)
            iadd r4.y, r4.x, l(4)
            ld_structured r4.z, vThreadIDInGroupFlattened.x, r4.x, g0.xxxx
            store_structured g0.x, vThreadIDInGroupFlattened.x, r4.y, r4.z
            ld_structured r4.x, vThreadIDInGroupFlattened.x, r4.x, g1.xxxx
            mul r4.x, r2.y, r4.x
            store_structured g1.x, vThreadIDInGroupFlattened.x, r4.y, r4.x
          endif 
          iadd r3.w, r3.w, l(-1)
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, r2.w, r1.y
        mul r1.y, r2.y, r3.z
        store_structured g1.x, vThreadIDInGroupFlattened.x, r2.w, r1.y
        ld_structured r1.y, vThreadIDInGroupFlattened.x, l(16), g0.xxxx
        ne r1.y, r1.y, l(1000000015047466219876688855040.000000)
        if_nz r1.y
          mov r1.y, l(2)
          loop 
            ige r2.y, r1.y, l(4)
            breakc_nz r2.y
            ishl r2.y, r1.y, l(2)
            ld_structured r2.z, vThreadIDInGroupFlattened.x, r2.y, g0.xxxx
            iadd r2.y, r2.y, l(-4)
            ld_structured r2.w, vThreadIDInGroupFlattened.x, r2.y, g0.xxxx
            add r2.z, -r2.w, r2.z
            ld_structured r2.yw, vThreadIDInGroupFlattened.x, r2.y, g1.xxxy
            add r2.y, -r2.w, r2.y
            mul r2.y, r2.y, r2.z
            mov x2[r1.y + 0].x, r2.y
            iadd r1.y, r1.y, l(1)
          endloop 
          mov r1.y, x2[2].x
          mov r2.y, x2[3].x
          lt r1.y, r2.y, r1.y
          movc r2.yz, r1.yyyy, l(0,3,2,0), l(0,2,1,0)
          mov r1.y, l(2)
          loop 
            ige r2.w, r1.y, l(4)
            breakc_nz r2.w
            ige r2.w, r1.y, r2.y
            if_nz r2.w
              ishl r2.w, r1.y, l(2)
              iadd r3.z, r2.w, l(4)
              ld_structured r3.z, vThreadIDInGroupFlattened.x, r3.z, g0.xxxx
              store_structured g0.x, vThreadIDInGroupFlattened.x, r2.w, r3.z
            endif 
            iadd r1.y, r1.y, l(1)
          endloop 
          mov r1.y, l(1)
          loop 
            ige r2.y, r1.y, l(4)
            breakc_nz r2.y
            ige r2.y, r1.y, r2.z
            if_nz r2.y
              ishl r2.y, r1.y, l(2)
              iadd r2.w, r2.y, l(4)
              ld_structured r2.w, vThreadIDInGroupFlattened.x, r2.w, g1.xxxx
              store_structured g1.x, vThreadIDInGroupFlattened.x, r2.y, r2.w
            endif 
            iadd r1.y, r1.y, l(1)
          endloop 
        endif 
      endif 
    endif 
    bfi r1.x, l(11), l(0), l(2), r1.x
  else 
    mov r1.x, l(-2046)
  endif 
  if_nz r1.z
    mov r4.xy, vThreadID.xyxx
    mov r4.zw, l(0,0,3,0)
    ld_indexable(texture2darray)(uint,uint,uint,uint) r1.y, r4.xyzw, t24.xyzw
    and r2.yz, r1.yyyy, l(0, 1, 2046, 0)
    umax r1.z, r1.y, r3.y
    umax r4.x, r1.z, r3.x
    umin r4.y, r3.x, r1.z
    movc r3.xy, r2.yyyy, r4.xyxx, r3.xyxx
    utof r1.z, r2.z
    mad r2.y, -r1.z, l(0.00048876), l(1.000000)
    mul r1.w, r1.w, r2.y
    lt r1.z, l(409.200012), r1.z
    if_nz r1.z
      umax r0.z, r0.z, r1.y
      ushr r1.z, r1.y, l(2)
      and r1.z, r1.z, l(0x3ffffe00)
      ge r2.z, r1.z, l(0.00049219)
      if_nz r2.z
        add r1.z, -r1.z, l(1.000000)
        mov r4.y, l(4)
        mov r2.zw, l(0,0,4,0)
        loop 
          ige r3.z, r2.w, l(4)
          breakc_nz r3.z
          ishl r3.z, r2.w, l(2)
          ld_structured r3.z, vThreadIDInGroupFlattened.x, r3.z, g0.xxxx
          ge r3.z, r3.z, r1.z
          if_nz r3.z
            mov r2.z, r2.w
            break 
          endif 
          iadd r4.x, r2.w, l(1)
          mov r2.zw, r4.yyyx
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, l(16), l(1000000015047466219876688855040.000000)
        store_structured g1.x, vThreadIDInGroupFlattened.x, l(16), l(1.000000)
        ishl r2.w, r2.z, l(2)
        iadd r3.z, r2.w, l(-4)
        ld_structured r3.z, vThreadIDInGroupFlattened.x, r3.z, g1.xxxx
        movc r3.z, r2.z, r3.z, l(1.000000)
        mov r3.w, l(3)
        loop 
          ilt r4.x, r3.w, l(0)
          breakc_nz r4.x
          ige r4.x, r3.w, r2.z
          if_nz r4.x
            ishl r4.x, r3.w, l(2)
            iadd r4.y, r4.x, l(4)
            ld_structured r4.z, vThreadIDInGroupFlattened.x, r4.x, g0.xxxx
            store_structured g0.x, vThreadIDInGroupFlattened.x, r4.y, r4.z
            ld_structured r4.x, vThreadIDInGroupFlattened.x, r4.x, g1.xxxx
            mul r4.x, r2.y, r4.x
            store_structured g1.x, vThreadIDInGroupFlattened.x, r4.y, r4.x
          endif 
          iadd r3.w, r3.w, l(-1)
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, r2.w, r1.z
        mul r1.z, r2.y, r3.z
        store_structured g1.x, vThreadIDInGroupFlattened.x, r2.w, r1.z
        ld_structured r1.z, vThreadIDInGroupFlattened.x, l(16), g0.xxxx
        ne r1.z, r1.z, l(1000000015047466219876688855040.000000)
        if_nz r1.z
          mov r1.z, l(2)
          loop 
            ige r2.y, r1.z, l(4)
            breakc_nz r2.y
            ishl r2.y, r1.z, l(2)
            ld_structured r2.z, vThreadIDInGroupFlattened.x, r2.y, g0.xxxx
            iadd r2.y, r2.y, l(-4)
            ld_structured r2.w, vThreadIDInGroupFlattened.x, r2.y, g0.xxxx
            add r2.z, -r2.w, r2.z
            ld_structured r2.yw, vThreadIDInGroupFlattened.x, r2.y, g1.xxxy
            add r2.y, -r2.w, r2.y
            mul r2.y, r2.y, r2.z
            mov x3[r1.z + 0].x, r2.y
            iadd r1.z, r1.z, l(1)
          endloop 
          mov r1.z, x3[2].x
          mov r2.y, x3[3].x
          lt r1.z, r2.y, r1.z
          movc r2.yz, r1.zzzz, l(0,3,2,0), l(0,2,1,0)
          mov r1.z, l(2)
          loop 
            ige r2.w, r1.z, l(4)
            breakc_nz r2.w
            ige r2.w, r1.z, r2.y
            if_nz r2.w
              ishl r2.w, r1.z, l(2)
              iadd r3.z, r2.w, l(4)
              ld_structured r3.z, vThreadIDInGroupFlattened.x, r3.z, g0.xxxx
              store_structured g0.x, vThreadIDInGroupFlattened.x, r2.w, r3.z
            endif 
            iadd r1.z, r1.z, l(1)
          endloop 
          mov r1.z, l(1)
          loop 
            ige r2.y, r1.z, l(4)
            breakc_nz r2.y
            ige r2.y, r1.z, r2.z
            if_nz r2.y
              ishl r2.y, r1.z, l(2)
              iadd r2.w, r2.y, l(4)
              ld_structured r2.w, vThreadIDInGroupFlattened.x, r2.w, g1.xxxx
              store_structured g1.x, vThreadIDInGroupFlattened.x, r2.y, r2.w
            endif 
            iadd r1.z, r1.z, l(1)
          endloop 
        endif 
      endif 
    endif 
    bfi r1.y, l(11), l(0), l(3), r1.y
  else 
    mov r1.y, l(-2045)
  endif 
  ult r4.xyzw, l(4, 5, 6, 7), r0.yyyy
  if_nz r4.x
    mov r5.xy, vThreadID.xyxx
    mov r5.zw, l(0,0,4,0)
    ld_indexable(texture2darray)(uint,uint,uint,uint) r1.z, r5.xyzw, t24.xzyw
    and r2.yz, r1.zzzz, l(0, 1, 2046, 0)
    umax r2.w, r1.z, r3.y
    umax r5.x, r2.w, r3.x
    umin r5.y, r3.x, r2.w
    movc r3.xy, r2.yyyy, r5.xyxx, r3.xyxx
    utof r2.y, r2.z
    mad r2.z, -r2.y, l(0.00048876), l(1.000000)
    mul r1.w, r1.w, r2.z
    lt r2.y, l(409.200012), r2.y
    if_nz r2.y
      umax r0.z, r0.z, r1.z
      ushr r2.y, r1.z, l(2)
      and r2.y, r2.y, l(0x3ffffe00)
      ge r2.w, r2.y, l(0.00049219)
      if_nz r2.w
        add r2.y, -r2.y, l(1.000000)
        mov r5.y, l(4)
        mov r3.zw, l(0,0,4,0)
        loop 
          ige r2.w, r3.w, l(4)
          breakc_nz r2.w
          ishl r2.w, r3.w, l(2)
          ld_structured r2.w, vThreadIDInGroupFlattened.x, r2.w, g0.xxxx
          ge r2.w, r2.w, r2.y
          if_nz r2.w
            mov r3.z, r3.w
            break 
          endif 
          iadd r5.x, r3.w, l(1)
          mov r3.zw, r5.yyyx
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, l(16), l(1000000015047466219876688855040.000000)
        store_structured g1.x, vThreadIDInGroupFlattened.x, l(16), l(1.000000)
        ishl r2.w, r3.z, l(2)
        iadd r3.w, r2.w, l(-4)
        ld_structured r3.w, vThreadIDInGroupFlattened.x, r3.w, g1.xxxx
        movc r3.w, r3.z, r3.w, l(1.000000)
        mov r4.x, l(3)
        loop 
          ilt r5.x, r4.x, l(0)
          breakc_nz r5.x
          ige r5.x, r4.x, r3.z
          if_nz r5.x
            ishl r5.x, r4.x, l(2)
            iadd r5.y, r5.x, l(4)
            ld_structured r5.z, vThreadIDInGroupFlattened.x, r5.x, g0.xxxx
            store_structured g0.x, vThreadIDInGroupFlattened.x, r5.y, r5.z
            ld_structured r5.x, vThreadIDInGroupFlattened.x, r5.x, g1.xxxx
            mul r5.x, r2.z, r5.x
            store_structured g1.x, vThreadIDInGroupFlattened.x, r5.y, r5.x
          endif 
          iadd r4.x, r4.x, l(-1)
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, r2.w, r2.y
        mul r2.y, r2.z, r3.w
        store_structured g1.x, vThreadIDInGroupFlattened.x, r2.w, r2.y
        ld_structured r2.y, vThreadIDInGroupFlattened.x, l(16), g0.xxxx
        ne r2.y, r2.y, l(1000000015047466219876688855040.000000)
        if_nz r2.y
          mov r2.y, l(2)
          loop 
            ige r2.z, r2.y, l(4)
            breakc_nz r2.z
            ishl r2.z, r2.y, l(2)
            ld_structured r2.w, vThreadIDInGroupFlattened.x, r2.z, g0.xxxx
            iadd r2.z, r2.z, l(-4)
            ld_structured r3.z, vThreadIDInGroupFlattened.x, r2.z, g0.xxxx
            add r2.w, r2.w, -r3.z
            ld_structured r3.zw, vThreadIDInGroupFlattened.x, r2.z, g1.xxxy
            add r2.z, -r3.w, r3.z
            mul r2.z, r2.z, r2.w
            mov x4[r2.y + 0].x, r2.z
            iadd r2.y, r2.y, l(1)
          endloop 
          mov r2.y, x4[2].x
          mov r2.z, x4[3].x
          lt r2.y, r2.z, r2.y
          movc r2.yz, r2.yyyy, l(0,3,2,0), l(0,2,1,0)
          mov r2.w, l(2)
          loop 
            ige r3.z, r2.w, l(4)
            breakc_nz r3.z
            ige r3.z, r2.w, r2.y
            if_nz r3.z
              ishl r3.z, r2.w, l(2)
              iadd r3.w, r3.z, l(4)
              ld_structured r3.w, vThreadIDInGroupFlattened.x, r3.w, g0.xxxx
              store_structured g0.x, vThreadIDInGroupFlattened.x, r3.z, r3.w
            endif 
            iadd r2.w, r2.w, l(1)
          endloop 
          mov r2.y, l(1)
          loop 
            ige r2.w, r2.y, l(4)
            breakc_nz r2.w
            ige r2.w, r2.y, r2.z
            if_nz r2.w
              ishl r2.w, r2.y, l(2)
              iadd r3.z, r2.w, l(4)
              ld_structured r3.z, vThreadIDInGroupFlattened.x, r3.z, g1.xxxx
              store_structured g1.x, vThreadIDInGroupFlattened.x, r2.w, r3.z
            endif 
            iadd r2.y, r2.y, l(1)
          endloop 
        endif 
      endif 
    endif 
    bfi r1.z, l(11), l(0), l(4), r1.z
  else 
    mov r1.z, l(-2044)
  endif 
  if_nz r4.y
    mov r5.xy, vThreadID.xyxx
    mov r5.zw, l(0,0,5,0)
    ld_indexable(texture2darray)(uint,uint,uint,uint) r2.y, r5.xyzw, t24.xyzw
    and r2.zw, r2.yyyy, l(0, 0, 1, 2046)
    umax r3.z, r2.y, r3.y
    umax r4.x, r3.z, r3.x
    umin r4.y, r3.x, r3.z
    movc r3.xy, r2.zzzz, r4.xyxx, r3.xyxx
    utof r2.z, r2.w
    mad r2.w, -r2.z, l(0.00048876), l(1.000000)
    mul r1.w, r1.w, r2.w
    lt r2.z, l(409.200012), r2.z
    if_nz r2.z
      umax r0.z, r0.z, r2.y
      ushr r2.z, r2.y, l(2)
      and r2.z, r2.z, l(0x3ffffe00)
      ge r3.z, r2.z, l(0.00049219)
      if_nz r3.z
        add r2.z, -r2.z, l(1.000000)
        mov r4.y, l(4)
        mov r3.zw, l(0,0,4,0)
        loop 
          ige r5.x, r3.w, l(4)
          breakc_nz r5.x
          ishl r5.x, r3.w, l(2)
          ld_structured r5.x, vThreadIDInGroupFlattened.x, r5.x, g0.xxxx
          ge r5.x, r5.x, r2.z
          if_nz r5.x
            mov r3.z, r3.w
            break 
          endif 
          iadd r4.x, r3.w, l(1)
          mov r3.zw, r4.yyyx
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, l(16), l(1000000015047466219876688855040.000000)
        store_structured g1.x, vThreadIDInGroupFlattened.x, l(16), l(1.000000)
        ishl r3.w, r3.z, l(2)
        iadd r4.x, r3.w, l(-4)
        ld_structured r4.x, vThreadIDInGroupFlattened.x, r4.x, g1.xxxx
        movc r4.x, r3.z, r4.x, l(1.000000)
        mov r4.y, l(3)
        loop 
          ilt r5.x, r4.y, l(0)
          breakc_nz r5.x
          ige r5.x, r4.y, r3.z
          if_nz r5.x
            ishl r5.x, r4.y, l(2)
            iadd r5.y, r5.x, l(4)
            ld_structured r5.z, vThreadIDInGroupFlattened.x, r5.x, g0.xxxx
            store_structured g0.x, vThreadIDInGroupFlattened.x, r5.y, r5.z
            ld_structured r5.x, vThreadIDInGroupFlattened.x, r5.x, g1.xxxx
            mul r5.x, r2.w, r5.x
            store_structured g1.x, vThreadIDInGroupFlattened.x, r5.y, r5.x
          endif 
          iadd r4.y, r4.y, l(-1)
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, r3.w, r2.z
        mul r2.z, r2.w, r4.x
        store_structured g1.x, vThreadIDInGroupFlattened.x, r3.w, r2.z
        ld_structured r2.z, vThreadIDInGroupFlattened.x, l(16), g0.xxxx
        ne r2.z, r2.z, l(1000000015047466219876688855040.000000)
        if_nz r2.z
          mov r2.z, l(2)
          loop 
            ige r2.w, r2.z, l(4)
            breakc_nz r2.w
            ishl r2.w, r2.z, l(2)
            ld_structured r3.z, vThreadIDInGroupFlattened.x, r2.w, g0.xxxx
            iadd r2.w, r2.w, l(-4)
            ld_structured r3.w, vThreadIDInGroupFlattened.x, r2.w, g0.xxxx
            add r3.z, -r3.w, r3.z
            ld_structured r4.xy, vThreadIDInGroupFlattened.x, r2.w, g1.xyxx
            add r2.w, -r4.y, r4.x
            mul r2.w, r2.w, r3.z
            mov x5[r2.z + 0].x, r2.w
            iadd r2.z, r2.z, l(1)
          endloop 
          mov r2.z, x5[2].x
          mov r2.w, x5[3].x
          lt r2.z, r2.w, r2.z
          movc r2.zw, r2.zzzz, l(0,0,3,2), l(0,0,2,1)
          mov r3.z, l(2)
          loop 
            ige r3.w, r3.z, l(4)
            breakc_nz r3.w
            ige r3.w, r3.z, r2.z
            if_nz r3.w
              ishl r3.w, r3.z, l(2)
              iadd r4.x, r3.w, l(4)
              ld_structured r4.x, vThreadIDInGroupFlattened.x, r4.x, g0.xxxx
              store_structured g0.x, vThreadIDInGroupFlattened.x, r3.w, r4.x
            endif 
            iadd r3.z, r3.z, l(1)
          endloop 
          mov r2.z, l(1)
          loop 
            ige r3.z, r2.z, l(4)
            breakc_nz r3.z
            ige r3.z, r2.z, r2.w
            if_nz r3.z
              ishl r3.z, r2.z, l(2)
              iadd r3.w, r3.z, l(4)
              ld_structured r3.w, vThreadIDInGroupFlattened.x, r3.w, g1.xxxx
              store_structured g1.x, vThreadIDInGroupFlattened.x, r3.z, r3.w
            endif 
            iadd r2.z, r2.z, l(1)
          endloop 
        endif 
      endif 
    endif 
    bfi r2.y, l(11), l(0), l(5), r2.y
  else 
    mov r2.y, l(-2043)
  endif 
  if_nz r4.z
    mov r5.xy, vThreadID.xyxx
    mov r5.zw, l(0,0,6,0)
    ld_indexable(texture2darray)(uint,uint,uint,uint) r2.z, r5.xyzw, t24.xzyw
    and r3.zw, r2.zzzz, l(0, 0, 1, 2046)
    umax r2.w, r2.z, r3.y
    umax r4.x, r2.w, r3.x
    umin r4.y, r3.x, r2.w
    movc r3.xy, r3.zzzz, r4.xyxx, r3.xyxx
    utof r2.w, r3.w
    mad r3.z, -r2.w, l(0.00048876), l(1.000000)
    mul r1.w, r1.w, r3.z
    lt r2.w, l(409.200012), r2.w
    if_nz r2.w
      umax r0.z, r0.z, r2.z
      ushr r2.w, r2.z, l(2)
      and r2.w, r2.w, l(0x3ffffe00)
      ge r3.w, r2.w, l(0.00049219)
      if_nz r3.w
        add r2.w, -r2.w, l(1.000000)
        mov r4.y, l(4)
        mov r5.xy, l(4,0,0,0)
        loop 
          ige r3.w, r5.y, l(4)
          breakc_nz r3.w
          ishl r3.w, r5.y, l(2)
          ld_structured r3.w, vThreadIDInGroupFlattened.x, r3.w, g0.xxxx
          ge r3.w, r3.w, r2.w
          if_nz r3.w
            mov r5.x, r5.y
            break 
          endif 
          iadd r4.x, r5.y, l(1)
          mov r5.xy, r4.yxyy
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, l(16), l(1000000015047466219876688855040.000000)
        store_structured g1.x, vThreadIDInGroupFlattened.x, l(16), l(1.000000)
        ishl r3.w, r5.x, l(2)
        iadd r4.x, r3.w, l(-4)
        ld_structured r4.x, vThreadIDInGroupFlattened.x, r4.x, g1.xxxx
        movc r4.x, r5.x, r4.x, l(1.000000)
        mov r4.y, l(3)
        loop 
          ilt r4.z, r4.y, l(0)
          breakc_nz r4.z
          ige r4.z, r4.y, r5.x
          if_nz r4.z
            ishl r4.z, r4.y, l(2)
            iadd r5.y, r4.z, l(4)
            ld_structured r5.z, vThreadIDInGroupFlattened.x, r4.z, g0.xxxx
            store_structured g0.x, vThreadIDInGroupFlattened.x, r5.y, r5.z
            ld_structured r4.z, vThreadIDInGroupFlattened.x, r4.z, g1.xxxx
            mul r4.z, r3.z, r4.z
            store_structured g1.x, vThreadIDInGroupFlattened.x, r5.y, r4.z
          endif 
          iadd r4.y, r4.y, l(-1)
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, r3.w, r2.w
        mul r2.w, r3.z, r4.x
        store_structured g1.x, vThreadIDInGroupFlattened.x, r3.w, r2.w
        ld_structured r2.w, vThreadIDInGroupFlattened.x, l(16), g0.xxxx
        ne r2.w, r2.w, l(1000000015047466219876688855040.000000)
        if_nz r2.w
          mov r2.w, l(2)
          loop 
            ige r3.z, r2.w, l(4)
            breakc_nz r3.z
            ishl r3.z, r2.w, l(2)
            ld_structured r3.w, vThreadIDInGroupFlattened.x, r3.z, g0.xxxx
            iadd r3.z, r3.z, l(-4)
            ld_structured r4.x, vThreadIDInGroupFlattened.x, r3.z, g0.xxxx
            add r3.w, r3.w, -r4.x
            ld_structured r4.xy, vThreadIDInGroupFlattened.x, r3.z, g1.xyxx
            add r3.z, -r4.y, r4.x
            mul r3.z, r3.z, r3.w
            mov x6[r2.w + 0].x, r3.z
            iadd r2.w, r2.w, l(1)
          endloop 
          mov r2.w, x6[2].x
          mov r3.z, x6[3].x
          lt r2.w, r3.z, r2.w
          movc r3.zw, r2.wwww, l(0,0,3,2), l(0,0,2,1)
          mov r2.w, l(2)
          loop 
            ige r4.x, r2.w, l(4)
            breakc_nz r4.x
            ige r4.x, r2.w, r3.z
            if_nz r4.x
              ishl r4.x, r2.w, l(2)
              iadd r4.y, r4.x, l(4)
              ld_structured r4.y, vThreadIDInGroupFlattened.x, r4.y, g0.xxxx
              store_structured g0.x, vThreadIDInGroupFlattened.x, r4.x, r4.y
            endif 
            iadd r2.w, r2.w, l(1)
          endloop 
          mov r2.w, l(1)
          loop 
            ige r3.z, r2.w, l(4)
            breakc_nz r3.z
            ige r3.z, r2.w, r3.w
            if_nz r3.z
              ishl r3.z, r2.w, l(2)
              iadd r4.x, r3.z, l(4)
              ld_structured r4.x, vThreadIDInGroupFlattened.x, r4.x, g1.xxxx
              store_structured g1.x, vThreadIDInGroupFlattened.x, r3.z, r4.x
            endif 
            iadd r2.w, r2.w, l(1)
          endloop 
        endif 
      endif 
    endif 
    bfi r2.z, l(11), l(0), l(6), r2.z
  else 
    mov r2.z, l(-2042)
  endif 
  if_nz r4.w
    mov r4.xy, vThreadID.xyxx
    mov r4.zw, l(0,0,7,0)
    ld_indexable(texture2darray)(uint,uint,uint,uint) r2.w, r4.xyzw, t24.xzwy
    and r3.zw, r2.wwww, l(0, 0, 1, 2046)
    umax r4.x, r2.w, r3.y
    umax r5.x, r3.x, r4.x
    umin r5.y, r3.x, r4.x
    movc r3.xy, r3.zzzz, r5.xyxx, r3.xyxx
    utof r3.z, r3.w
    mad r3.w, -r3.z, l(0.00048876), l(1.000000)
    mul r1.w, r1.w, r3.w
    lt r3.z, l(409.200012), r3.z
    if_nz r3.z
      umax r0.z, r0.z, r2.w
      ushr r3.z, r2.w, l(2)
      and r3.z, r3.z, l(0x3ffffe00)
      ge r4.x, r3.z, l(0.00049219)
      if_nz r4.x
        add r3.z, -r3.z, l(1.000000)
        mov r4.y, l(4)
        mov r4.zw, l(0,0,4,0)
        loop 
          ige r5.x, r4.w, l(4)
          breakc_nz r5.x
          ishl r5.x, r4.w, l(2)
          ld_structured r5.x, vThreadIDInGroupFlattened.x, r5.x, g0.xxxx
          ge r5.x, r5.x, r3.z
          if_nz r5.x
            mov r4.z, r4.w
            break 
          endif 
          iadd r4.x, r4.w, l(1)
          mov r4.zw, r4.yyyx
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, l(16), l(1000000015047466219876688855040.000000)
        store_structured g1.x, vThreadIDInGroupFlattened.x, l(16), l(1.000000)
        ishl r4.x, r4.z, l(2)
        iadd r4.y, r4.x, l(-4)
        ld_structured r4.y, vThreadIDInGroupFlattened.x, r4.y, g1.xxxx
        movc r4.y, r4.z, r4.y, l(1.000000)
        mov r4.w, l(3)
        loop 
          ilt r5.x, r4.w, l(0)
          breakc_nz r5.x
          ige r5.x, r4.w, r4.z
          if_nz r5.x
            ishl r5.x, r4.w, l(2)
            iadd r5.y, r5.x, l(4)
            ld_structured r5.z, vThreadIDInGroupFlattened.x, r5.x, g0.xxxx
            store_structured g0.x, vThreadIDInGroupFlattened.x, r5.y, r5.z
            ld_structured r5.x, vThreadIDInGroupFlattened.x, r5.x, g1.xxxx
            mul r5.x, r3.w, r5.x
            store_structured g1.x, vThreadIDInGroupFlattened.x, r5.y, r5.x
          endif 
          iadd r4.w, r4.w, l(-1)
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, r4.x, r3.z
        mul r3.z, r3.w, r4.y
        store_structured g1.x, vThreadIDInGroupFlattened.x, r4.x, r3.z
        ld_structured r3.z, vThreadIDInGroupFlattened.x, l(16), g0.xxxx
        ne r3.z, r3.z, l(1000000015047466219876688855040.000000)
        if_nz r3.z
          mov r3.z, l(2)
          loop 
            ige r3.w, r3.z, l(4)
            breakc_nz r3.w
            ishl r3.w, r3.z, l(2)
            ld_structured r4.x, vThreadIDInGroupFlattened.x, r3.w, g0.xxxx
            iadd r3.w, r3.w, l(-4)
            ld_structured r4.y, vThreadIDInGroupFlattened.x, r3.w, g0.xxxx
            add r4.x, -r4.y, r4.x
            ld_structured r4.yz, vThreadIDInGroupFlattened.x, r3.w, g1.xxyx
            add r3.w, -r4.z, r4.y
            mul r3.w, r3.w, r4.x
            mov x7[r3.z + 0].x, r3.w
            iadd r3.z, r3.z, l(1)
          endloop 
          mov r3.z, x7[2].x
          mov r3.w, x7[3].x
          lt r3.z, r3.w, r3.z
          movc r3.zw, r3.zzzz, l(0,0,3,2), l(0,0,2,1)
          mov r4.x, l(2)
          loop 
            ige r4.y, r4.x, l(4)
            breakc_nz r4.y
            ige r4.y, r4.x, r3.z
            if_nz r4.y
              ishl r4.y, r4.x, l(2)
              iadd r4.z, r4.y, l(4)
              ld_structured r4.z, vThreadIDInGroupFlattened.x, r4.z, g0.xxxx
              store_structured g0.x, vThreadIDInGroupFlattened.x, r4.y, r4.z
            endif 
            iadd r4.x, r4.x, l(1)
          endloop 
          mov r3.z, l(1)
          loop 
            ige r4.x, r3.z, l(4)
            breakc_nz r4.x
            ige r4.x, r3.z, r3.w
            if_nz r4.x
              ishl r4.x, r3.z, l(2)
              iadd r4.y, r4.x, l(4)
              ld_structured r4.y, vThreadIDInGroupFlattened.x, r4.y, g1.xxxx
              store_structured g1.x, vThreadIDInGroupFlattened.x, r4.x, r4.y
            endif 
            iadd r3.z, r3.z, l(1)
          endloop 
        endif 
      endif 
    endif 
    bfi r2.w, l(11), l(0), l(7), r2.w
  else 
    mov r2.w, l(-2041)
  endif 
  ushr r0.z, r0.z, l(2)
  and r0.z, r0.z, l(0x3ffffe00)
  add r3.z, -r1.w, l(0.800000)
  max r3.z, r3.z, l(0.000000)
  mad r3.z, -r3.z, l(1.250000), l(1.000000)
  umin r3.w, r0.w, r2.x
  umax r0.w, r0.w, r2.x
  umin r2.x, r1.y, r1.x
  umax r1.x, r1.y, r1.x
  umin r1.y, r1.z, r2.y
  umax r1.z, r1.z, r2.y
  umin r2.y, r2.w, r2.z
  umax r2.z, r2.w, r2.z
  umin r2.w, r1.x, r3.w
  umax r1.x, r1.x, r3.w
  umin r3.w, r1.y, r2.z
  umax r1.y, r1.y, r2.z
  umin r2.z, r0.w, r2.x
  umax r0.w, r0.w, r2.x
  umin r2.x, r1.z, r2.y
  umax r1.z, r1.z, r2.y
  umin r2.y, r2.z, r2.w
  umax r2.z, r2.z, r2.w
  umin r2.w, r1.x, r0.w
  umax r0.w, r1.x, r0.w
  umin r1.x, r2.x, r3.w
  umax r2.x, r2.x, r3.w
  umin r3.w, r1.y, r1.z
  umax r1.y, r1.y, r1.z
  umin r1.z, r1.y, r2.y
  umax r1.y, r1.y, r2.y
  umin r2.y, r2.z, r3.w
  umax r2.z, r2.z, r3.w
  umin r3.w, r2.x, r2.w
  umax r2.x, r2.x, r2.w
  umin r2.w, r0.w, r1.x
  umax r0.w, r0.w, r1.x
  umin r1.x, r1.z, r3.w
  umax r1.z, r1.z, r3.w
  umin r3.w, r2.w, r2.y
  umax r2.y, r2.w, r2.y
  umin r2.w, r2.z, r0.w
  umax r0.w, r2.z, r0.w
  umin r2.z, r1.y, r2.x
  umax r1.y, r1.y, r2.x
  umin r2.x, r1.x, r3.w
  umax r1.x, r1.x, r3.w
  umin r3.w, r1.z, r2.y
  umax r1.z, r1.z, r2.y
  umin r2.y, r2.z, r2.w
  umax r2.z, r2.z, r2.w
  umin r2.w, r0.w, r1.y
  umax r0.w, r0.w, r1.y
  bfi r1.x, l(11), l(4), r1.x, l(0)
  bfi r1.x, l(4), l(0), r2.x, r1.x
  bfi r1.y, l(11), l(8), r3.w, l(0)
  iadd r1.x, r1.y, r1.x
  bfi r1.y, l(11), l(12), r1.z, l(0)
  iadd r1.x, r1.y, r1.x
  bfi r1.y, l(11), l(16), r2.y, l(0)
  iadd r1.x, r1.y, r1.x
  bfi r1.y, l(11), l(20), r2.z, l(0)
  iadd r1.x, r1.y, r1.x
  bfi r1.x, l(8), l(24), r2.w, r1.x
  bfi r2.w, l(4), l(28), r0.w, r1.x
else 
  mov r1.w, l(1.000000)
  mov r0.z, l(-1.000000)
  mov r3.xyz, l(0,0,1.000000,0)
  mov r2.w, l(0)
endif 
iadd r0.w, cb1[82].x, l(1023)
ushr r0.w, r0.w, l(10)
umin r0.w, r0.w, l(2)
ubfe r4.xy, l(27, 27, 0, 0), l(2, 2, 0, 0), vThreadGroupID.xyxx
uge r1.x, r0.w, l(1)
if_nz r1.x
  uge r1.x, r0.w, l(2)
  if_nz r1.x
    mov r4.zw, l(0,0,1,0)
    ld_indexable(texture2darray)(uint,uint,uint,uint) r1.x, r4.xyww, t26.xyzw
    ld_indexable(texture2darray)(uint,uint,uint,uint) r1.y, r4.xyzw, t26.yxzw
  else 
    mov r4.zw, l(0,0,0,0)
    ld_indexable(texture2darray)(uint,uint,uint,uint) r1.x, r4.xyzw, t26.xyzw
    mov r1.y, l(0)
  endif 
else 
  mov r1.xy, l(0,0,0,0)
endif 
or r1.z, r1.y, r1.x
or r1.z, r0.y, r1.z
if_z r1.z
  store_uav_typed u4.xyzw, vThreadID.xyyy, l(1.000000,1.000000,1.000000,1.000000)
  mov r5.xy, vThreadID.xyxx
  mov r5.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.w, r5.xyzw, t0.yzwx
  store_uav_typed u7.xyzw, vThreadID.xyyy, r3.wwww
endif 
if_nz r1.z
  and r1.z, r0.x, l(0xff000000)
  ieq r1.z, r1.z, l(0)
  ult r0.x, cb2[58].z, r0.x
  if_nz r0.x
    mov r5.xy, vThreadID.xyxx
    mov r5.zw, l(0,0,0,0)
    ld_indexable(texture2d)(float,float,float,float) r6.xyz, r5.xyww, t21.xyzw
    ld_indexable(texture2d)(float,float,float,float) r5.xyzw, r5.xyzw, t22.xyzw
    mad r2.xyz, r5.wwww, r6.xyzx, r5.xyzx
  else 
    mov r5.xy, vThreadID.xyxx
    mov r5.zw, l(0,0,0,0)
    ld_indexable(texture2d)(float,float,float,float) r2.xyz, r5.xyzw, t21.xyzw
  endif 
  mov r5.xy, vThreadID.xyxx
  mov r5.w, l(0)
  ld_indexable(texture2d)(float,float,float,float) r0.x, r5.xyww, t0.xyzw
  lt r3.w, r1.w, l(0.800000)
  and r1.z, r1.z, r3.w
  if_nz r1.z
    max r0.z, r0.x, r0.z
  else 
    mov r0.z, r0.x
  endif 
  store_uav_typed u7.xyzw, vThreadID.xyyy, r0.zzzz
  if_nz r0.w
    ushr r6.xyzw, r3.xxyy, l(2, 2, 2, 2)
    and r6.xyzw, r6.xyzw, l(0x3ffffe00, 0x3ffffe00, 0x3ffffe00, 0x3ffffe00)
    ge r3.xy, r6.ywyy, l(0.984375, 0.984375, 0.000000, 0.000000)
    mul r6.yw, r6.yyyw, l(0.000000, 1.01587307, 0.000000, 1.01587307)
    mad r6.xz, r6.xxzx, l(64.000000, 0.000000, 64.000000, 0.000000), l(-63.000000, 0.000000, -63.000000, 0.000000)
    movc r3.xy, r3.xyxx, r6.xzxx, r6.ywyy
    max r3.xy, r3.xyxx, l(0.00000001, 0.00000001, 0.000000, 0.000000)
    rcp r3.xy, r3.xyxx
    ge r0.z, r0.x, l(0.984375)
    mul r1.z, r0.x, l(1.01587307)
    mad r3.w, r0.x, l(64.000000), l(-63.000000)
    movc r0.z, r0.z, r3.w, r1.z
    max r0.z, r0.z, l(0.00000001)
    rcp r0.z, r0.z
    and r5.z, r2.w, l(7)
    ld_indexable(texture2darray)(uint,uint,uint,uint) r1.z, r5.xyzw, t24.xzyw
    ushr r1.z, r1.z, l(2)
    and r1.z, r1.z, l(0x3ffffe00)
    and r6.xyz, cb1[82].yyyy, l(4, 1, 8, 0)
    ieq r3.w, r6.y, l(0)
    ine r6.x, r6.x, l(0)
    utof r7.xyzw, vThreadID.xyxy
    not r6.w, vThreadID.y
    xor r6.w, r6.w, vThreadID.x
    and r6.w, r6.w, l(1)
    mov r4.w, l(0)
    mov r8.xyw, r5.xyxw
    mov r9.w, l(0.00392157)
    mov r10.xw, l(1.000000,0,0,4)
    mov r11.x, r2.w
    mov r11.yzw, r2.xxyz
    mov r13.w, l(0)
    mov r12.y, l(0)
    mov r12.z, r1.z
    mov r12.xw, r1.wwwx
    loop 
      breakc_z r12.w
      firstbit_lo r4.z, r12.w
      ishl r14.x, l(1), r4.z
      not r14.x, r14.x
      and r12.w, r12.w, r14.x
      ld_indexable(texture2darray)(uint,uint,uint,uint) r14.x, r4.xyzw, t25.xyzw
      ishl r14.y, r4.z, l(5)
      mov r15.xyzw, r11.xyzw
      mov r16.w, r13.w
      mov r14.zw, r12.xxxy
      mov r17.x, r12.z
      mov r17.y, r14.x
      loop 
        breakc_z r17.y
        firstbit_lo r17.z, r17.y
        ishl r17.w, l(1), r17.z
        not r17.w, r17.w
        and r17.y, r17.w, r17.y
        iadd r17.z, r14.y, r17.z
        ld_structured_indexable(structured_buffer, stride=32)(mixed,mixed,mixed,mixed) r18.xyz, r17.z, l(16), t1.xyzx
        mov r19.xyz, r15.yzwy
        mov r17.w, r15.x
        mov r18.w, r14.w
        mov r20.x, r17.x
        loop 
          ult r20.y, r18.w, r0.y
          lt r20.z, r20.x, r18.z
          and r20.y, r20.z, r20.y
          and r20.y, r3.w, r20.y
          breakc_z r20.y
          and r8.z, r17.w, l(7)
          ld_indexable(texture2darray)(uint,uint,uint,uint) r20.yz, r8.xyzw, t24.zxyw
          ushr r21.xyz, r20.yyyy, l(1, 8, 16, 0)
          and r20.w, r21.x, l(0x7f800000)
          bfi r20.y, l(8), l(15), r20.y, l(0)
          bfi r20.y, l(23), l(0), r20.y, r21.x
          add r22.x, -r20.w, r20.y
          bfi r21.yz, l(0, 8, 8, 0), l(0, 15, 15, 0), r21.yyzy, l(0, 0, 0, 0)
          bfi r21.xy, l(23, 23, 0, 0), l(0, 0, 0, 0), r21.yzyy, r21.xxxx
          add r22.yz, -r20.wwww, r21.xxyx
          and r20.y, r20.z, l(2046)
          utof r20.y, r20.y
          mad r20.y, -r20.y, l(0.00048876), l(1.000000)
          mad r19.xyz, r19.xyzx, r20.yyyy, r22.xyzx
          iadd r18.w, r18.w, l(1)
          ushr r20.y, r17.w, l(4)
          ult r20.z, r18.w, r0.y
          if_nz r20.z
            ubfe r8.z, l(3), l(4), r17.w
            ld_indexable(texture2darray)(uint,uint,uint,uint) r8.z, r8.xyzw, t24.xzyw
            ushr r8.z, r8.z, l(2)
            and r20.x, r8.z, l(0x3ffffe00)
          else 
            mov r20.x, l(2.000000)
          endif 
          mov r17.w, r20.y
        endloop 
        mov r15.x, r17.w
        mov r14.w, r18.w
        mov r17.x, r20.x
        lt r8.z, r0.x, r18.z
        or r8.z, r6.x, r8.z
        if_nz r8.z
          ld_structured_indexable(structured_buffer, stride=32)(mixed,mixed,mixed,mixed) r21.xyzw, r17.z, l(0), t1.xyzw
          mul r22.xyzw, r7.xyzw, r21.xyzw
          add r20.yz, r22.yywy, r22.xxzx
          add r22.xy, r18.xyxx, r20.yzyy
          mad r18.xy, r22.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
          max r8.z, |r18.y|, |r18.x|
          lt r8.z, r8.z, l(1.000000)
          if_nz r8.z
            if_nz r6.y
              lt r18.xy, l(0.995000, 0.995000, 0.000000, 0.000000), r22.xyxx
              or r8.z, r18.y, r18.x
              lt r18.xy, r22.xyxx, l(0.005000, 0.005000, 0.000000, 0.000000)
              or r18.x, r18.y, r18.x
              or r8.z, r8.z, r18.x
              if_nz r8.z
                ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r8.z, r17.z, l(52), t2.xxxx
                ubfe r8.z, l(1), l(22), r8.z
                movc r15.yzw, r8.zzzz, l(0,0.750000,0.300000,0), l(0,0.750000,0.750000,0.750000)
                mov r16.w, l(1.000000)
              else 
                ne r8.z, r16.w, l(1.000000)
                eq r18.x, r19.x, l(0.000000)
                ge r20.yz, r19.yyxy, l(0.000000, 1.000000, 1.000000, 0.000000)
                add r19.w, r19.x, l(0.050000)
                add r23.xyz, r19.yxyy, l(-0.050000, 0.000000, 0.050000, 0.000000)
                movc r23.yz, r20.yyyy, r19.wwyw, r23.yyzy
                add r24.xy, r19.xyxx, l(0.000000, -0.050000, 0.000000, 0.000000)
                add r25.xy, r19.xyxx, l(0.050000, 0.000000, 0.000000, 0.000000)
                movc r20.zw, r20.zzzz, r24.xxxy, r25.xxxy
                ne r18.y, r19.y, l(0.000000)
                movc r24.z, r18.y, r23.x, r19.y
                movc r20.yz, r20.yyyy, r20.zzwz, r24.xxzx
                movc r16.xy, r18.xxxx, r23.yzyy, r20.yzyy
                mov r16.z, r19.z
                movc r23.xyzw, r8.zzzz, l(0,0,0,1.000000), r16.xyzw
                mov r16.xyz, r19.xyzx
                movc r16.xyzw, r6.wwww, r23.xyzw, r16.xyzw
                mov r15.yzw, r16.xxyz
              endif 
            else 
              ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r23.xyzw, r17.z, l(0), t2.xyzw
              ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r24.xyzw, r17.z, l(16), t2.zxyw
              ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r8.z, r17.z, l(32), t2.xxxx
              ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r25.xyzw, r17.z, l(40), t2.xyzw
              ushr r16.xy, r25.xyxx, l(24, 24, 0, 0)
              utof r16.xy, r16.xyxx
              mul r18.xy, r16.xyxx, l(0.00390625, 0.00392157, 0.000000, 0.000000)
              ubfe r26.xyzw, l(4, 4, 1, 8), l(26, 16, 20, 8), r25.zwww
              ishl r27.xyzw, l(1, 1, 1, 1), r26.xyxy
              if_nz r26.z
                ubfe r16.z, l(12), l(12), r25.x
                and r20.yz, r25.xxzx, l(0, 4095, 1023, 0)
                utof r28.xyzw, r27.zwzw
                mad r26.xy, r22.xyxx, r28.zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                add r29.xy, r28.zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                min r26.xy, r26.xyxx, r29.xyxx
                utof r29.xz, r20.yyzy
                utof r29.y, r16.z
                add r20.yw, r26.xxxy, r29.xxxy
                mul r29.xy, r20.ywyy, cb1[83].xyxx
                mul r28.xyzw, r21.xzyw, r28.xyzw
                sample_d_indexable(texture2darray)(float,float,float,float) r30.xyzw, r29.xyzx, t42.xyzw, s0, r28.xyxx, r28.zwzz
                lt r16.z, l(0.000000), r16.x
                if_nz r16.z
                  and r16.z, r25.y, l(4095)
                  ubfe r19.w, l(12), l(12), r25.y
                  utof r31.x, r16.z
                  utof r31.y, r19.w
                  add r20.yz, r26.xxyx, r31.xxyx
                  mul r29.xy, r20.yzyy, cb1[83].xyxx
                  sample_d_indexable(texture2darray)(float,float,float,float) r28.xyzw, r29.xyzx, t42.xyzw, s0, r28.xyxx, r28.zwzz
                  add r28.xyzw, -r30.xyzw, r28.xyzw
                  mad r30.xyzw, r18.xxxx, r28.xyzw, r30.xyzw
                endif 
              else 
                ubfe r16.z, l(12), l(12), r25.x
                and r20.yz, r25.xxzx, l(0, 4095, 1023, 0)
                utof r28.xyzw, r27.zwzw
                mad r26.xy, r22.xyxx, r28.zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                add r29.xy, r28.zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                min r26.xy, r26.xyxx, r29.xyxx
                utof r29.x, r20.y
                utof r29.y, r16.z
                add r20.yw, r26.xxxy, r29.xxxy
                mul r26.xy, r20.ywyy, cb1[83].zwzz
                utof r26.z, r20.z
                mul r28.xyzw, r21.xzyw, r28.xyzw
                sample_d_indexable(texture2darray)(float,float,float,float) r30.xyzw, r26.xyzx, t43.xyzw, s0, r28.xyxx, r28.zwzz
                lt r16.z, l(0.000000), r16.x
                if_nz r16.z
                  ubfe r16.z, l(12), l(12), r25.y
                  and r20.yz, r25.yyzy, l(0, 4095, 1023, 0)
                  utof r27.xyzw, r27.xyzw
                  mad r25.xy, r22.xyxx, r27.zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r26.xy, r27.zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r25.xy, r25.xyxx, r26.xyxx
                  utof r26.xz, r20.yyzy
                  utof r26.y, r16.z
                  add r20.yw, r25.xxxy, r26.xxxy
                  mul r26.xy, r20.ywyy, cb1[83].zwzz
                  mul r27.xyzw, r21.xzyw, r27.xyzw
                  sample_d_indexable(texture2darray)(float,float,float,float) r27.xyzw, r26.xyzx, t43.xyzw, s0, r27.xyxx, r27.zwzz
                  add r27.xyzw, -r30.xyzw, r27.xyzw
                  mad r30.xyzw, r18.xxxx, r27.xyzw, r30.xyzw
                endif 
              endif 
              utof r16.z, r26.w
              mul r16.z, r16.z, l(0.00392157)
              dp3 r19.w, r30.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
              add r20.yzw, -r30.xxyz, r19.wwww
              mad r20.yzw, r16.zzzz, r20.yyzw, r30.xxyz
              ubfe r26.xyz, l(8, 8, 1, 0), l(10, 18, 30, 0), r25.zzzz
              utof r25.xy, r26.xyxx
              mul r16.z, r25.y, l(0.00392157)
              and r19.w, r25.w, l(255)
              utof r19.w, r19.w
              eq r22.w, r16.y, l(0.000000)
              eq r26.xy, r25.xyxx, l(255.000000, 0.000000, 0.000000, 0.000000)
              and r22.w, r22.w, r26.x
              and r22.w, r26.y, r22.w
              eq r25.y, r19.w, l(255.000000)
              and r22.w, r22.w, r25.y
              max r25.y, r30.w, l(0.000100)
              div_sat r26.xyw, r20.yzyw, r25.yyyy
              mad r26.xyw, -r16.yyyy, l(0.00392157, 0.00392157, 0.000000, 0.00392157), r26.xyxw
              max r26.xyw, r26.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
              mad r16.y, r25.x, l(0.00392157), -r18.y
              max r16.y, r16.y, l(0.000100)
              div r26.xyw, r26.xyxw, r16.yyyy
              min r26.xyw, r26.xyxw, l(1.000000, 1.000000, 0.000000, 1.000000)
              mad r16.y, r19.w, l(0.00392157), -r16.z
              mad r26.xyw, r26.xyxw, r16.yyyy, r16.zzzz
              ge r27.xyz, l(0.040450, 0.040450, 0.040450, 0.000000), r26.xywx
              mul r28.xyz, r26.xywx, l(0.07739938, 0.07739938, 0.07739938, 0.000000)
              add r26.xyw, r26.xyxw, l(0.055000, 0.055000, 0.000000, 0.055000)
              mul r26.xyw, |r26.xyxw|, l(0.94786733, 0.94786733, 0.000000, 0.94786733)
              log r26.xyw, r26.xyxw
              mul r26.xyw, r26.xyxw, l(2.400000, 2.400000, 0.000000, 2.400000)
              exp r26.xyw, r26.xyxw
              movc r26.xyw, r27.xyxz, r28.xyxz, r26.xyxw
              mul r26.xyw, r30.wwww, r26.xyxw
              movc r30.xyz, r22.wwww, r20.yzwy, r26.xywx
              utof r22.z, r17.z
              sample_l_indexable(texture2darray)(float,float,float,float) r9.xyz, r22.xyzx, t29.xyzw, s0, l(0.000000)
              and r16.y, r23.x, l(255)
              utof r16.y, r16.y
              mul r27.x, r16.y, l(0.00392157)
              ubfe r16.yz, l(0, 8, 8, 0), l(0, 8, 16, 0), r23.xxxx
              utof r16.yz, r16.yyzy
              mul r27.yz, r16.yyzy, l(0.000000, 0.00392157, 0.00392157, 0.000000)
              ushr r16.y, r23.x, l(24)
              utof r27.w, r16.y
              mul r28.xyzw, r9.xyzw, r27.xyzw
              ge r9.x, r18.z, l(0.984375)
              mul r9.y, r18.z, l(1.01587307)
              mad r9.z, r18.z, l(64.000000), l(-63.000000)
              movc r9.x, r9.x, r9.z, r9.y
              max r9.x, r9.x, l(0.00000001)
              rcp r9.x, r9.x
              f16tof32 r9.y, r24.x
              f16tof32 r9.z, r8.z
              ne r16.y, r9.z, l(1.000000)
              div r20.yzw, r30.xxyz, r25.yyyy
              mad r16.z, r9.w, r27.w, r30.w
              mad_sat r29.w, r16.z, r9.z, -r9.z
              mul r29.xyz, r20.yzwy, r29.wwww
              movc r30.xyzw, r16.yyyy, r29.xyzw, r30.xyzw
              mov r10.y, r29.w
              movc r16.yz, r16.yyyy, r10.xxyx, r28.wwww
              lt r9.z, r9.x, r0.z
              add r10.y, r0.z, -r9.x
              mul_sat r10.y, r9.y, r10.y
              movc r9.z, r9.z, r10.y, l(1.000000)
              add r20.yz, r3.xxyx, -r9.xxxx
              mul r9.xy, r9.yyyy, r20.yzyy
              min r9.xy, |r9.xyxx|, l(1.000000, 1.000000, 0.000000, 0.000000)
              mul r9.x, r9.x, r9.z
              mul r9.x, r9.y, r9.x
              mul r29.xyzw, r9.xxxx, r30.xyzw
              mul r30.xyzw, r16.yyyy, r29.wxyz
              if_nz r26.z
                mul r9.x, r9.x, r16.z
                ushr r9.y, r25.z, l(31)
                if_nz r9.y
                  ld_structured_indexable(structured_buffer, stride=48)(mixed,mixed,mixed,mixed) r20.yzw, r17.z, l(24), t3.xxyz
                  ushr r9.y, r20.y, l(28)
                  ishl r9.y, l(1), r9.y
                  ubfe r25.xyz, l(4, 12, 10, 0), l(24, 16, 12, 0), r20.zywz
                  ishl r9.z, l(1), r25.x
                  and r10.y, r20.z, l(4095)
                  utof r26.xyzw, r9.yzyz
                  mad r9.yz, r22.xxyx, r26.zzwz, l(0.000000, 0.500000, 0.500000, 0.000000)
                  add r29.xy, r26.zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r9.yz, r9.yyzy, r29.xxyx
                  utof r25.x, r25.y
                  utof r25.y, r10.y
                  add r25.xy, r9.yzyy, r25.xyxx
                  mul r29.xy, r25.xyxx, cb1[84].xyxx
                  utof r29.z, r25.z
                  mul r21.xyzw, r21.xzyw, r26.xyzw
                  sample_d_indexable(texture2darray)(float,float,float,float) r10.y, r29.xyzx, t45.yxzw, s0, r21.xyxx, r21.zwzz
                  lt r16.x, l(0.000000), r16.x
                  if_nz r16.x
                    ubfe r16.x, l(12), l(12), r20.z
                    and r16.z, r20.w, l(4095)
                    utof r25.xy, r16.xzxx
                    add r9.yz, r9.yyzy, r25.xxyx
                    mul r29.xy, r9.yzyy, cb1[84].xyxx
                    sample_d_indexable(texture2darray)(float,float,float,float) r9.y, r29.xyzx, t45.yxzw, s0, r21.xyxx, r21.zwzz
                    add r9.y, -r10.y, r9.y
                    mad r10.y, r18.x, r9.y, r10.y
                  endif 
                else 
                  mov r10.y, l(1.000000)
                endif 
                mul r9.x, r9.x, r10.y
                ushr r8.z, r8.z, l(16)
                f16tof32 r8.z, r8.z
                ubfe r9.y, l(1), l(21), r25.w
                dp3 r9.z, r28.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
                max r9.z, r9.z, l(0.000100)
                max r9.z, r9.z, cb1[85].x
                mul r9.z, r8.z, r9.z
                movc r8.z, r9.y, r8.z, r9.z
                mul r8.z, r8.z, r9.x
                mad r28.xyz, r27.xyzx, r8.zzzz, r28.xyzx
              endif 
              mad r8.z, -r29.w, r16.y, l(1.000000)
              mul r14.z, r8.z, r14.z
              lt r9.x, r14.z, l(0.800000)
              lt r9.y, l(0.200000), r30.x
              or r9.x, r9.y, r9.x
              if_nz r9.x
                ge r9.x, r18.z, l(0.00049219)
                if_nz r9.x
                  add r9.x, -r18.z, l(1.000000)
                  mov r9.yz, l(0,4,0,0)
                  loop 
                    ige r10.y, r9.z, l(4)
                    breakc_nz r10.y
                    ishl r10.y, r9.z, l(2)
                    ld_structured r10.y, vThreadIDInGroupFlattened.x, r10.y, g0.xxxx
                    ge r10.y, r10.y, r9.x
                    if_nz r10.y
                      mov r9.y, r9.z
                      break 
                    endif 
                    iadd r10.z, r9.z, l(1)
                    mov r9.yz, r10.wwzw
                  endloop 
                  store_structured g0.x, vThreadIDInGroupFlattened.x, l(16), l(1000000015047466219876688855040.000000)
                  store_structured g1.x, vThreadIDInGroupFlattened.x, l(16), l(1.000000)
                  ishl r9.z, r9.y, l(2)
                  iadd r10.y, r9.z, l(-4)
                  ld_structured r10.y, vThreadIDInGroupFlattened.x, r10.y, g1.xxxx
                  movc r10.y, r9.y, r10.y, l(1.000000)
                  mov r10.z, l(3)
                  loop 
                    ilt r16.x, r10.z, l(0)
                    breakc_nz r16.x
                    ige r16.x, r10.z, r9.y
                    if_nz r16.x
                      ishl r16.x, r10.z, l(2)
                      iadd r16.y, r16.x, l(4)
                      ld_structured r16.z, vThreadIDInGroupFlattened.x, r16.x, g0.xxxx
                      store_structured g0.x, vThreadIDInGroupFlattened.x, r16.y, r16.z
                      ld_structured r16.x, vThreadIDInGroupFlattened.x, r16.x, g1.xxxx
                      mul r16.x, r8.z, r16.x
                      store_structured g1.x, vThreadIDInGroupFlattened.x, r16.y, r16.x
                    endif 
                    iadd r10.z, r10.z, l(-1)
                  endloop 
                  store_structured g0.x, vThreadIDInGroupFlattened.x, r9.z, r9.x
                  mul r8.z, r8.z, r10.y
                  store_structured g1.x, vThreadIDInGroupFlattened.x, r9.z, r8.z
                  ld_structured r8.z, vThreadIDInGroupFlattened.x, l(16), g0.xxxx
                  ne r8.z, r8.z, l(1000000015047466219876688855040.000000)
                  if_nz r8.z
                    mov r8.z, l(2)
                    loop 
                      ige r9.x, r8.z, l(4)
                      breakc_nz r9.x
                      ishl r9.x, r8.z, l(2)
                      ld_structured r9.z, vThreadIDInGroupFlattened.x, r9.x, g0.xxxx
                      iadd r9.x, r9.x, l(-4)
                      ld_structured r10.y, vThreadIDInGroupFlattened.x, r9.x, g0.xxxx
                      add r9.z, r9.z, -r10.y
                      ld_structured r10.yz, vThreadIDInGroupFlattened.x, r9.x, g1.xxyx
                      add r9.x, -r10.z, r10.y
                      mul r9.x, r9.x, r9.z
                      mov x8[r8.z + 0].x, r9.x
                      iadd r8.z, r8.z, l(1)
                    endloop 
                    mov r8.z, x8[2].x
                    mov r9.x, x8[3].x
                    lt r8.z, r9.x, r8.z
                    movc r9.xz, r8.zzzz, l(3,0,2,0), l(2,0,1,0)
                    mov r8.z, l(2)
                    loop 
                      ige r10.y, r8.z, l(4)
                      breakc_nz r10.y
                      ige r10.y, r8.z, r9.x
                      if_nz r10.y
                        ishl r10.y, r8.z, l(2)
                        iadd r10.z, r10.y, l(4)
                        ld_structured r10.z, vThreadIDInGroupFlattened.x, r10.z, g0.xxxx
                        store_structured g0.x, vThreadIDInGroupFlattened.x, r10.y, r10.z
                      endif 
                      iadd r8.z, r8.z, l(1)
                    endloop 
                    mov r8.z, l(1)
                    loop 
                      ige r9.x, r8.z, l(4)
                      breakc_nz r9.x
                      ige r9.x, r8.z, r9.z
                      if_nz r9.x
                        ishl r9.x, r8.z, l(2)
                        iadd r10.y, r9.x, l(4)
                        ld_structured r10.y, vThreadIDInGroupFlattened.x, r10.y, g1.xxxx
                        store_structured g1.x, vThreadIDInGroupFlattened.x, r9.x, r10.y
                      endif 
                      iadd r8.z, r8.z, l(1)
                    endloop 
                  endif 
                endif 
              endif 
              if_nz r6.z
                sample_l_indexable(texture2darray)(float,float,float,float) r16.xyz, r22.xyzx, t29.xyzw, s1, l(0.000000)
                mov r30.x, l(1.000000)
              else 
                ushr r9.xz, r24.xxwx, l(16, 0, 16, 0)
                f16tof32 r18.y, r24.w
                f16tof32 r18.xz, r9.xxzx
                ushr r9.xz, r23.yyzy, l(16, 0, 16, 0)
                f16tof32 r21.xy, r23.yzyy
                f16tof32 r21.zw, r9.xxxz
                mul r20.yzw, r30.xxxx, r21.xxzy
                mov r24.x, r23.w
                mul r21.xyz, r30.xxxx, r24.xyzx
                mad r22.xyz, r30.yzwy, r28.xyzx, -r20.yzwy
                mad r20.yzw, r21.wwww, r22.xxyz, r20.yyzw
                mad r16.xyz, r20.yzwy, r18.xyzx, r21.xyzx
              endif 
              mul r16.xyz, r16.xyzx, cb1[85].yyyy
              add r8.z, -r30.x, l(1.000000)
              mad r15.yzw, r19.xxyz, r8.zzzz, r16.xxyz
            endif 
          else 
            mov r15.yzw, r19.xxyz
          endif 
        else 
          mov r15.yzw, r19.xxyz
        endif 
      endloop 
      mov r11.xyzw, r15.xyzw
      mov r13.w, r16.w
      mov r12.xy, r14.zwzz
      mov r12.z, r17.x
    endloop 
    mov r2.xyzw, r11.yzwx
    mov r1.w, r12.x
    ult r0.w, l(1), r0.w
    if_nz r0.w
      mov r4.w, l(0)
      mov r8.xyw, r5.xyxw
      mov r9.w, l(0.00392157)
      mov r10.xw, l(1.000000,0,0,4)
      mov r11.xyzw, r2.wxyz
      mov r0.w, r1.w
      mov r1.x, r13.w
      mov r1.z, r12.y
      mov r12.x, r12.z
      mov r12.w, r1.y
      loop 
        breakc_z r12.w
        firstbit_lo r14.x, r12.w
        ishl r14.y, l(1), r14.x
        not r14.y, r14.y
        and r12.w, r12.w, r14.y
        iadd r4.z, r14.x, l(32)
        ld_indexable(texture2darray)(uint,uint,uint,uint) r14.x, r4.xyzw, t25.xyzw
        ishl r4.z, r4.z, l(5)
        mov r15.xyzw, r11.xyzw
        mov r14.y, r0.w
        mov r16.w, r1.x
        mov r14.z, r1.z
        mov r14.w, r12.x
        mov r17.x, r14.x
        loop 
          breakc_z r17.x
          firstbit_lo r17.y, r17.x
          ishl r17.z, l(1), r17.y
          not r17.z, r17.z
          and r17.x, r17.z, r17.x
          iadd r17.y, r4.z, r17.y
          ld_structured_indexable(structured_buffer, stride=32)(mixed,mixed,mixed,mixed) r18.xyz, r17.y, l(16), t1.xyzx
          mov r19.xyz, r15.yzwy
          mov r17.z, r15.x
          mov r17.w, r14.z
          mov r18.w, r14.w
          loop 
            ult r20.x, r17.w, r0.y
            lt r20.y, r18.w, r18.z
            and r20.x, r20.y, r20.x
            and r20.x, r3.w, r20.x
            breakc_z r20.x
            and r8.z, r17.z, l(7)
            ld_indexable(texture2darray)(uint,uint,uint,uint) r20.xy, r8.xyzw, t24.xyzw
            ushr r21.xyz, r20.xxxx, l(1, 8, 16, 0)
            and r20.z, r21.x, l(0x7f800000)
            bfi r20.x, l(8), l(15), r20.x, l(0)
            bfi r20.x, l(23), l(0), r20.x, r21.x
            add r22.x, -r20.z, r20.x
            bfi r20.xw, l(8, 0, 0, 8), l(15, 0, 0, 15), r21.yyyz, l(0, 0, 0, 0)
            bfi r20.xw, l(23, 0, 0, 23), l(0, 0, 0, 0), r20.xxxw, r21.xxxx
            add r22.yz, -r20.zzzz, r20.xxwx
            and r20.x, r20.y, l(2046)
            utof r20.x, r20.x
            mad r20.x, -r20.x, l(0.00048876), l(1.000000)
            mad r19.xyz, r19.xyzx, r20.xxxx, r22.xyzx
            iadd r17.w, r17.w, l(1)
            ushr r20.x, r17.z, l(4)
            ult r20.y, r17.w, r0.y
            if_nz r20.y
              ubfe r8.z, l(3), l(4), r17.z
              ld_indexable(texture2darray)(uint,uint,uint,uint) r8.z, r8.xyzw, t24.xzyw
              ushr r8.z, r8.z, l(2)
              and r18.w, r8.z, l(0x3ffffe00)
            else 
              mov r18.w, l(2.000000)
            endif 
            mov r17.z, r20.x
          endloop 
          mov r15.x, r17.z
          mov r14.z, r17.w
          mov r14.w, r18.w
          lt r8.z, r0.x, r18.z
          or r8.z, r6.x, r8.z
          if_nz r8.z
            ld_structured_indexable(structured_buffer, stride=32)(mixed,mixed,mixed,mixed) r20.xyzw, r17.y, l(0), t1.xyzw
            mul r21.xyzw, r7.xyzw, r20.xyzw
            add r21.xy, r21.ywyy, r21.xzxx
            add r21.xy, r18.xyxx, r21.xyxx
            mad r18.xy, r21.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
            max r8.z, |r18.y|, |r18.x|
            lt r8.z, r8.z, l(1.000000)
            if_nz r8.z
              if_nz r6.y
                lt r18.xy, l(0.995000, 0.995000, 0.000000, 0.000000), r21.xyxx
                or r8.z, r18.y, r18.x
                lt r18.xy, r21.xyxx, l(0.005000, 0.005000, 0.000000, 0.000000)
                or r18.x, r18.y, r18.x
                or r8.z, r8.z, r18.x
                if_nz r8.z
                  ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r8.z, r17.y, l(52), t2.xxxx
                  ubfe r8.z, l(1), l(22), r8.z
                  movc r15.yzw, r8.zzzz, l(0,0.750000,0.300000,0), l(0,0.750000,0.750000,0.750000)
                  mov r16.w, l(1.000000)
                else 
                  ne r8.z, r16.w, l(1.000000)
                  eq r18.x, r19.x, l(0.000000)
                  ge r22.xy, r19.yxyy, l(1.000000, 1.000000, 0.000000, 0.000000)
                  add r19.w, r19.x, l(0.050000)
                  add r23.xyz, r19.yxyy, l(-0.050000, 0.000000, 0.050000, 0.000000)
                  movc r22.zw, r22.xxxx, r19.wwwy, r23.yyyz
                  add r24.xy, r19.xyxx, l(0.000000, -0.050000, 0.000000, 0.000000)
                  add r23.yz, r19.xxyx, l(0.000000, 0.050000, 0.000000, 0.000000)
                  movc r23.yz, r22.yyyy, r24.xxyx, r23.yyzy
                  ne r18.y, r19.y, l(0.000000)
                  movc r24.z, r18.y, r23.x, r19.y
                  movc r22.xy, r22.xxxx, r23.yzyy, r24.xzxx
                  movc r16.xy, r18.xxxx, r22.zwzz, r22.xyxx
                  mov r16.z, r19.z
                  movc r22.xyzw, r8.zzzz, l(0,0,0,1.000000), r16.xyzw
                  mov r16.xyz, r19.xyzx
                  movc r16.xyzw, r6.wwww, r22.xyzw, r16.xyzw
                  mov r15.yzw, r16.xxyz
                endif 
              else 
                ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r22.xyzw, r17.y, l(0), t2.xyzw
                ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r23.xyzw, r17.y, l(16), t2.zxyw
                ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r8.z, r17.y, l(32), t2.xxxx
                ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r24.xyzw, r17.y, l(40), t2.xyzw
                ushr r16.xy, r24.xyxx, l(24, 24, 0, 0)
                utof r16.xy, r16.xyxx
                mul r18.xy, r16.xyxx, l(0.00390625, 0.00392157, 0.000000, 0.000000)
                ubfe r25.xyzw, l(4, 4, 1, 8), l(26, 16, 20, 8), r24.zwww
                ishl r26.xyzw, l(1, 1, 1, 1), r25.xyxy
                if_nz r25.z
                  ubfe r16.z, l(12), l(12), r24.x
                  and r25.xy, r24.xzxx, l(4095, 1023, 0, 0)
                  utof r27.xyzw, r26.zwzw
                  mad r28.xy, r21.xyxx, r27.zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r28.zw, r27.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r28.xy, r28.zwzz, r28.xyxx
                  utof r29.xz, r25.xxyx
                  utof r29.y, r16.z
                  add r25.xz, r28.xxyx, r29.xxyx
                  mul r29.xy, r25.xzxx, cb1[83].xyxx
                  mul r27.xyzw, r20.xzyw, r27.xyzw
                  sample_d_indexable(texture2darray)(float,float,float,float) r30.xyzw, r29.xyzx, t42.xyzw, s0, r27.xyxx, r27.zwzz
                  lt r16.z, l(0.000000), r16.x
                  if_nz r16.z
                    and r16.z, r24.y, l(4095)
                    ubfe r19.w, l(12), l(12), r24.y
                    utof r25.x, r16.z
                    utof r25.y, r19.w
                    add r25.xy, r25.xyxx, r28.xyxx
                    mul r29.xy, r25.xyxx, cb1[83].xyxx
                    sample_d_indexable(texture2darray)(float,float,float,float) r27.xyzw, r29.xyzx, t42.xyzw, s0, r27.xyxx, r27.zwzz
                    add r27.xyzw, -r30.xyzw, r27.xyzw
                    mad r30.xyzw, r18.xxxx, r27.xyzw, r30.xyzw
                  endif 
                else 
                  ubfe r16.z, l(12), l(12), r24.x
                  and r25.xy, r24.xzxx, l(4095, 1023, 0, 0)
                  utof r27.xyzw, r26.zwzw
                  mad r28.xy, r21.xyxx, r27.zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r28.zw, r27.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r28.xy, r28.zwzz, r28.xyxx
                  utof r29.x, r25.x
                  utof r29.y, r16.z
                  add r25.xz, r28.xxyx, r29.xxyx
                  mul r28.xy, r25.xzxx, cb1[83].zwzz
                  utof r28.z, r25.y
                  mul r27.xyzw, r20.xzyw, r27.xyzw
                  sample_d_indexable(texture2darray)(float,float,float,float) r30.xyzw, r28.xyzx, t43.xyzw, s0, r27.xyxx, r27.zwzz
                  lt r16.z, l(0.000000), r16.x
                  if_nz r16.z
                    ubfe r16.z, l(12), l(12), r24.y
                    and r24.xy, r24.yzyy, l(4095, 1023, 0, 0)
                    utof r26.xyzw, r26.xyzw
                    mad r25.xy, r21.xyxx, r26.zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r27.xy, r26.zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                    min r25.xy, r25.xyxx, r27.xyxx
                    utof r27.x, r24.x
                    utof r27.y, r16.z
                    add r25.xy, r25.xyxx, r27.xyxx
                    mul r25.xy, r25.xyxx, cb1[83].zwzz
                    utof r25.z, r24.y
                    mul r26.xyzw, r20.xzyw, r26.xyzw
                    sample_d_indexable(texture2darray)(float,float,float,float) r26.xyzw, r25.xyzx, t43.xyzw, s0, r26.xyxx, r26.zwzz
                    add r26.xyzw, -r30.xyzw, r26.xyzw
                    mad r30.xyzw, r18.xxxx, r26.xyzw, r30.xyzw
                  endif 
                endif 
                utof r16.z, r25.w
                mul r16.z, r16.z, l(0.00392157)
                dp3 r19.w, r30.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
                add r25.xyz, -r30.xyzx, r19.wwww
                mad r25.xyz, r16.zzzz, r25.xyzx, r30.xyzx
                ubfe r26.xyz, l(8, 8, 1, 0), l(10, 18, 30, 0), r24.zzzz
                utof r24.xy, r26.xyxx
                mul r16.z, r24.y, l(0.00392157)
                and r19.w, r24.w, l(255)
                utof r19.w, r19.w
                eq r21.w, r16.y, l(0.000000)
                eq r26.xy, r24.xyxx, l(255.000000, 0.000000, 0.000000, 0.000000)
                and r21.w, r21.w, r26.x
                and r21.w, r26.y, r21.w
                eq r24.y, r19.w, l(255.000000)
                and r21.w, r21.w, r24.y
                max r24.y, r30.w, l(0.000100)
                div_sat r26.xyw, r25.xyxz, r24.yyyy
                mad r26.xyw, -r16.yyyy, l(0.00392157, 0.00392157, 0.000000, 0.00392157), r26.xyxw
                max r26.xyw, r26.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
                mad r16.y, r24.x, l(0.00392157), -r18.y
                max r16.y, r16.y, l(0.000100)
                div r26.xyw, r26.xyxw, r16.yyyy
                min r26.xyw, r26.xyxw, l(1.000000, 1.000000, 0.000000, 1.000000)
                mad r16.y, r19.w, l(0.00392157), -r16.z
                mad r26.xyw, r26.xyxw, r16.yyyy, r16.zzzz
                ge r27.xyz, l(0.040450, 0.040450, 0.040450, 0.000000), r26.xywx
                mul r28.xyz, r26.xywx, l(0.07739938, 0.07739938, 0.07739938, 0.000000)
                add r26.xyw, r26.xyxw, l(0.055000, 0.055000, 0.000000, 0.055000)
                mul r26.xyw, |r26.xyxw|, l(0.94786733, 0.94786733, 0.000000, 0.94786733)
                log r26.xyw, r26.xyxw
                mul r26.xyw, r26.xyxw, l(2.400000, 2.400000, 0.000000, 2.400000)
                exp r26.xyw, r26.xyxw
                movc r26.xyw, r27.xyxz, r28.xyxz, r26.xyxw
                mul r26.xyw, r30.wwww, r26.xyxw
                movc r30.xyz, r21.wwww, r25.xyzx, r26.xywx
                utof r21.z, r17.y
                sample_l_indexable(texture2darray)(float,float,float,float) r9.xyz, r21.xyzx, t29.xyzw, s0, l(0.000000)
                and r16.y, r22.x, l(255)
                utof r16.y, r16.y
                mul r25.x, r16.y, l(0.00392157)
                ubfe r16.yz, l(0, 8, 8, 0), l(0, 8, 16, 0), r22.xxxx
                utof r16.yz, r16.yyzy
                mul r25.yz, r16.yyzy, l(0.000000, 0.00392157, 0.00392157, 0.000000)
                ushr r16.y, r22.x, l(24)
                utof r25.w, r16.y
                mul r27.xyzw, r9.xyzw, r25.xyzw
                ge r9.x, r18.z, l(0.984375)
                mul r9.y, r18.z, l(1.01587307)
                mad r9.z, r18.z, l(64.000000), l(-63.000000)
                movc r9.x, r9.x, r9.z, r9.y
                max r9.x, r9.x, l(0.00000001)
                rcp r9.x, r9.x
                f16tof32 r9.y, r23.x
                f16tof32 r9.z, r8.z
                ne r16.y, r9.z, l(1.000000)
                div r26.xyw, r30.xyxz, r24.yyyy
                mad r16.z, r9.w, r25.w, r30.w
                mad_sat r28.w, r16.z, r9.z, -r9.z
                mul r28.xyz, r26.xywx, r28.wwww
                movc r29.xyzw, r16.yyyy, r28.xyzw, r30.xyzw
                mov r10.y, r28.w
                movc r16.yz, r16.yyyy, r10.xxyx, r27.wwww
                lt r9.z, r9.x, r0.z
                add r10.y, r0.z, -r9.x
                mul_sat r10.y, r9.y, r10.y
                movc r9.z, r9.z, r10.y, l(1.000000)
                add r24.xy, r3.xyxx, -r9.xxxx
                mul r9.xy, r9.yyyy, r24.xyxx
                min r9.xy, |r9.xyxx|, l(1.000000, 1.000000, 0.000000, 0.000000)
                mul r9.x, r9.x, r9.z
                mul r9.x, r9.y, r9.x
                mul r28.xyzw, r9.xxxx, r29.xyzw
                mul r29.xyzw, r16.yyyy, r28.wxyz
                if_nz r26.z
                  mul r9.x, r9.x, r16.z
                  ushr r9.y, r24.z, l(31)
                  if_nz r9.y
                    ld_structured_indexable(structured_buffer, stride=48)(mixed,mixed,mixed,mixed) r24.xyz, r17.y, l(24), t3.xyzx
                    ushr r9.y, r24.x, l(28)
                    ishl r9.y, l(1), r9.y
                    ubfe r26.xyz, l(4, 12, 10, 0), l(24, 16, 12, 0), r24.yxzy
                    ishl r9.z, l(1), r26.x
                    and r10.y, r24.y, l(4095)
                    utof r30.xyzw, r9.yzyz
                    mad r9.yz, r21.xxyx, r30.zzwz, l(0.000000, 0.500000, 0.500000, 0.000000)
                    add r26.xw, r30.zzzw, l(-0.500000, 0.000000, 0.000000, -0.500000)
                    min r9.yz, r9.yyzy, r26.xxwx
                    utof r26.x, r26.y
                    utof r26.y, r10.y
                    add r26.xy, r9.yzyy, r26.xyxx
                    mul r28.xy, r26.xyxx, cb1[84].xyxx
                    utof r28.z, r26.z
                    mul r20.xyzw, r20.xzyw, r30.xyzw
                    sample_d_indexable(texture2darray)(float,float,float,float) r10.y, r28.xyzx, t45.yxzw, s0, r20.xyxx, r20.zwzz
                    lt r16.x, l(0.000000), r16.x
                    if_nz r16.x
                      ubfe r16.x, l(12), l(12), r24.y
                      and r16.z, r24.z, l(4095)
                      utof r24.xy, r16.xzxx
                      add r9.yz, r9.yyzy, r24.xxyx
                      mul r28.xy, r9.yzyy, cb1[84].xyxx
                      sample_d_indexable(texture2darray)(float,float,float,float) r9.y, r28.xyzx, t45.yxzw, s0, r20.xyxx, r20.zwzz
                      add r9.y, -r10.y, r9.y
                      mad r10.y, r18.x, r9.y, r10.y
                    endif 
                  else 
                    mov r10.y, l(1.000000)
                  endif 
                  mul r9.x, r9.x, r10.y
                  ushr r8.z, r8.z, l(16)
                  f16tof32 r8.z, r8.z
                  ubfe r9.y, l(1), l(21), r24.w
                  dp3 r9.z, r27.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
                  max r9.z, r9.z, l(0.000100)
                  max r9.z, r9.z, cb1[85].x
                  mul r9.z, r8.z, r9.z
                  movc r8.z, r9.y, r8.z, r9.z
                  mul r8.z, r8.z, r9.x
                  mad r27.xyz, r25.xyzx, r8.zzzz, r27.xyzx
                endif 
                mad r8.z, -r28.w, r16.y, l(1.000000)
                mul r14.y, r8.z, r14.y
                lt r9.x, r14.y, l(0.800000)
                lt r9.y, l(0.200000), r29.x
                or r9.x, r9.y, r9.x
                if_nz r9.x
                  ge r9.x, r18.z, l(0.00049219)
                  if_nz r9.x
                    add r9.x, -r18.z, l(1.000000)
                    mov r9.yz, l(0,4,0,0)
                    loop 
                      ige r10.y, r9.z, l(4)
                      breakc_nz r10.y
                      ishl r10.y, r9.z, l(2)
                      ld_structured r10.y, vThreadIDInGroupFlattened.x, r10.y, g0.xxxx
                      ge r10.y, r10.y, r9.x
                      if_nz r10.y
                        mov r9.y, r9.z
                        break 
                      endif 
                      iadd r10.z, r9.z, l(1)
                      mov r9.yz, r10.wwzw
                    endloop 
                    store_structured g0.x, vThreadIDInGroupFlattened.x, l(16), l(1000000015047466219876688855040.000000)
                    store_structured g1.x, vThreadIDInGroupFlattened.x, l(16), l(1.000000)
                    ishl r9.z, r9.y, l(2)
                    iadd r10.y, r9.z, l(-4)
                    ld_structured r10.y, vThreadIDInGroupFlattened.x, r10.y, g1.xxxx
                    movc r10.y, r9.y, r10.y, l(1.000000)
                    mov r10.z, l(3)
                    loop 
                      ilt r16.x, r10.z, l(0)
                      breakc_nz r16.x
                      ige r16.x, r10.z, r9.y
                      if_nz r16.x
                        ishl r16.x, r10.z, l(2)
                        iadd r16.y, r16.x, l(4)
                        ld_structured r16.z, vThreadIDInGroupFlattened.x, r16.x, g0.xxxx
                        store_structured g0.x, vThreadIDInGroupFlattened.x, r16.y, r16.z
                        ld_structured r16.x, vThreadIDInGroupFlattened.x, r16.x, g1.xxxx
                        mul r16.x, r8.z, r16.x
                        store_structured g1.x, vThreadIDInGroupFlattened.x, r16.y, r16.x
                      endif 
                      iadd r10.z, r10.z, l(-1)
                    endloop 
                    store_structured g0.x, vThreadIDInGroupFlattened.x, r9.z, r9.x
                    mul r8.z, r8.z, r10.y
                    store_structured g1.x, vThreadIDInGroupFlattened.x, r9.z, r8.z
                    ld_structured r8.z, vThreadIDInGroupFlattened.x, l(16), g0.xxxx
                    ne r8.z, r8.z, l(1000000015047466219876688855040.000000)
                    if_nz r8.z
                      mov r8.z, l(2)
                      loop 
                        ige r9.x, r8.z, l(4)
                        breakc_nz r9.x
                        ishl r9.x, r8.z, l(2)
                        ld_structured r9.z, vThreadIDInGroupFlattened.x, r9.x, g0.xxxx
                        iadd r9.x, r9.x, l(-4)
                        ld_structured r10.y, vThreadIDInGroupFlattened.x, r9.x, g0.xxxx
                        add r9.z, r9.z, -r10.y
                        ld_structured r10.yz, vThreadIDInGroupFlattened.x, r9.x, g1.xxyx
                        add r9.x, -r10.z, r10.y
                        mul r9.x, r9.x, r9.z
                        mov x9[r8.z + 0].x, r9.x
                        iadd r8.z, r8.z, l(1)
                      endloop 
                      mov r8.z, x9[2].x
                      mov r9.x, x9[3].x
                      lt r8.z, r9.x, r8.z
                      movc r9.xz, r8.zzzz, l(3,0,2,0), l(2,0,1,0)
                      mov r8.z, l(2)
                      loop 
                        ige r10.y, r8.z, l(4)
                        breakc_nz r10.y
                        ige r10.y, r8.z, r9.x
                        if_nz r10.y
                          ishl r10.y, r8.z, l(2)
                          iadd r10.z, r10.y, l(4)
                          ld_structured r10.z, vThreadIDInGroupFlattened.x, r10.z, g0.xxxx
                          store_structured g0.x, vThreadIDInGroupFlattened.x, r10.y, r10.z
                        endif 
                        iadd r8.z, r8.z, l(1)
                      endloop 
                      mov r8.z, l(1)
                      loop 
                        ige r9.x, r8.z, l(4)
                        breakc_nz r9.x
                        ige r9.x, r8.z, r9.z
                        if_nz r9.x
                          ishl r9.x, r8.z, l(2)
                          iadd r10.y, r9.x, l(4)
                          ld_structured r10.y, vThreadIDInGroupFlattened.x, r10.y, g1.xxxx
                          store_structured g1.x, vThreadIDInGroupFlattened.x, r9.x, r10.y
                        endif 
                        iadd r8.z, r8.z, l(1)
                      endloop 
                    endif 
                  endif 
                endif 
                if_nz r6.z
                  sample_l_indexable(texture2darray)(float,float,float,float) r16.xyz, r21.xyzx, t29.xyzw, s1, l(0.000000)
                  mov r29.x, l(1.000000)
                else 
                  ushr r9.xz, r23.xxwx, l(16, 0, 16, 0)
                  f16tof32 r18.y, r23.w
                  f16tof32 r18.xz, r9.xxzx
                  ushr r9.xz, r22.yyzy, l(16, 0, 16, 0)
                  f16tof32 r20.xy, r22.yzyy
                  f16tof32 r20.zw, r9.xxxz
                  mul r20.xyz, r29.xxxx, r20.xzyx
                  mov r23.x, r22.w
                  mul r21.xyz, r29.xxxx, r23.xyzx
                  mad r22.xyz, r29.yzwy, r27.xyzx, -r20.xyzx
                  mad r20.xyz, r20.wwww, r22.xyzx, r20.xyzx
                  mad r16.xyz, r20.xyzx, r18.xyzx, r21.xyzx
                endif 
                mul r16.xyz, r16.xyzx, cb1[85].yyyy
                add r8.z, -r29.x, l(1.000000)
                mad r15.yzw, r19.xxyz, r8.zzzz, r16.xxyz
              endif 
            else 
              mov r15.yzw, r19.xxyz
            endif 
          else 
            mov r15.yzw, r19.xxyz
          endif 
        endloop 
        mov r11.xyzw, r15.xyzw
        mov r0.w, r14.y
        mov r1.x, r16.w
        mov r1.z, r14.z
        mov r12.x, r14.w
      endloop 
      mov r2.xyzw, r11.yzwx
      mov r1.w, r0.w
      mov r13.w, r1.x
      mov r12.y, r1.z
    endif 
  else 
    mov r13.w, l(0)
    mov r12.y, l(0)
  endif 
  add_sat r0.x, -r1.w, l(0.800000)
  mad r0.x, -r0.x, l(1.250000), l(1.000000)
  mul r0.x, r3.z, r0.x
  store_uav_typed u4.xyzw, vThreadID.xyyy, r0.xxxx
  ge r0.x, l(0.900000), r0.x
  if_nz r0.x
    ld_structured r1.xyzw, vThreadIDInGroupFlattened.x, l(0), g0.xyzw
    ld_structured r3.xyzw, vThreadIDInGroupFlattened.x, l(0), g1.xyzw
    add r1.xyzw, -r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
    ge r4.xyzw, r1.xyzw, l(0.984375, 0.984375, 0.984375, 0.984375)
    mul r0.xz, r1.xxyx, l(1.01587307, 0.000000, 1.01587307, 0.000000)
    mad r1.xy, r1.xyxx, l(64.000000, 64.000000, 0.000000, 0.000000), l(-63.000000, -63.000000, 0.000000, 0.000000)
    movc r0.xz, r4.xxyx, r1.xxyx, r0.xxzx
    max r0.xz, r0.xxzx, l(0.00000001, 0.000000, 0.00000001, 0.000000)
    rcp r6.xy, r0.xzxx
    mul r0.xz, r1.zzwz, l(1.01587307, 0.000000, 1.01587307, 0.000000)
    mad r1.xy, r1.zwzz, l(64.000000, 64.000000, 0.000000, 0.000000), l(-63.000000, -63.000000, 0.000000, 0.000000)
    movc r0.xz, r4.zzwz, r1.xxyx, r0.xxzx
    max r0.xz, r0.xxzx, l(0.00000001, 0.000000, 0.00000001, 0.000000)
    rcp r6.zw, r0.xxxz
    mul r1.xyzw, r6.xyzw, l(0.000500, 0.000500, 0.000500, 0.000500)
    min r1.xyzw, r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
    store_uav_typed u2.xyzw, vThreadID.xyyy, r1.xyzw
    store_uav_typed u3.xyzw, vThreadID.xyyy, r3.xyzw
  endif 
  and r0.x, cb1[82].y, l(6)
  ieq r0.x, r0.x, l(0)
  mov r13.xyz, r2.xyzx
  mov r0.z, r2.w
  mov r0.w, r12.y
  loop 
    ult r1.x, r0.w, r0.y
    and r1.x, r0.x, r1.x
    breakc_z r1.x
    and r5.z, r0.z, l(7)
    ld_indexable(texture2darray)(uint,uint,uint,uint) r1.xy, r5.xyzw, t24.xyzw
    ushr r3.xyz, r1.xxxx, l(1, 8, 16, 0)
    and r1.z, r3.x, l(0x7f800000)
    bfi r1.x, l(8), l(15), r1.x, l(0)
    bfi r1.x, l(23), l(0), r1.x, r3.x
    add r4.x, -r1.z, r1.x
    bfi r1.xw, l(8, 0, 0, 8), l(15, 0, 0, 15), r3.yyyz, l(0, 0, 0, 0)
    bfi r1.xw, l(23, 0, 0, 23), l(0, 0, 0, 0), r1.xxxw, r3.xxxx
    add r4.yz, -r1.zzzz, r1.xxwx
    and r1.x, r1.y, l(2046)
    utof r1.x, r1.x
    mad r1.x, -r1.x, l(0.00048876), l(1.000000)
    mad r13.xyz, r13.xyzx, r1.xxxx, r4.xyzx
    iadd r0.w, r0.w, l(1)
    ushr r0.z, r0.z, l(4)
  endloop 
  store_uav_typed u5.xyzw, vThreadID.xyyy, r13.xyzw
endif 
ret 
// Approximately 2013 instruction slots used
