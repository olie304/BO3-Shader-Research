//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:23:52 2021
//
//
// Buffer Definitions: 
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4 [unused]
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// cbuffer LightingPackCBuffer
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } lightConstantsCB[273];           // Offset:    0 Size: 65520
//
// }
//
// cbuffer RefProbePackCBuffer
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } refProbeConstantsCB[273];        // Offset:    0 Size: 61152
//
// }
//
// cbuffer RefProbeBlendPackCBuffer
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } refProbeAttenuationConstantsCB[682];// Offset:    0 Size: 65472
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for gPermutedTilingBuffer
// {
//
//   struct PermutedTilingBuffer
//   {
//       
//       uint2 data;                    // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:     8
//
// }
//
// Resource bind info for gDeferredCullBits
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// samplerPointClamp                 sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// GBufferDiffuseColor               texture  float4          2d             t0      1 
// GBufferNormalAndGloss             texture  float4          2d             t1      1 
// GBufferSpecularColorAndOcclusion    texture  float4          2d             t2      1 
// GBufferDepth                      texture   float          2d             t4      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// gDownsampledScene                 texture  float4          2d            t21      1 
// gMotionVectors                    texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// gPermutedTilingBuffer             texture  struct         r/o            t25      1 
// gDeferredCullBits                 texture  struct         r/o            t26      1 
// gSSAOTexture                      texture   float          2d            t27      1 
// gSSAODepthTexture                 texture   float          2d            t28      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// litBuffer                             UAV  float3          2d             u0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
// LightingPackCBuffer               cbuffer      NA          NA            cb9      1 
// RefProbePackCBuffer               cbuffer      NA          NA           cb10      1 
// RefProbeBlendPackCBuffer          cbuffer      NA          NA           cb11      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB1[86], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_constantbuffer CB9[4095], dynamicIndexed
dcl_constantbuffer CB10[3822], dynamicIndexed
dcl_constantbuffer CB11[4092], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s4, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_structured t25, 8
dcl_resource_structured t26, 4
dcl_resource_texture2d (float,float,float,float) t27
dcl_resource_texture2d (float,float,float,float) t28
dcl_resource_texture2darray (float,float,float,float) t31
dcl_uav_typed_texture2d (float,float,float,float) u0
dcl_input vThreadGroupID.x
dcl_input vThreadIDInGroup.xy
dcl_temps 35
dcl_thread_group 8, 8, 1
ishl r0.x, cb2[57].x, l(1)
iadd r0.x, r0.x, vThreadGroupID.x
ld_structured_indexable(structured_buffer, stride=8)(mixed,mixed,mixed,mixed) r0.xy, r0.x, l(0), t25.xyxx
and r0.yz, r0.xxyx, l(0, 4095, 4095, 0)
imad r1.xy, r0.yzyy, l(8, 8, 0, 0), vThreadIDInGroup.xyxx
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.xyww, t1.xyzw
ftou r3.xy, cb1[44].xyxx
ult r3.xy, r1.xyxx, r3.xyxx
and r0.w, r3.y, r3.x
lt r3.x, l(0.000000), r2.z
and r0.w, r0.w, r3.x
if_z r0.w
  ret 
endif 
ge r3.x, r2.z, l(0.500000)
ld_indexable(texture2d)(float,float,float,float) r3.y, r1.xyww, t4.yxzw
ld_indexable(texture2d)(float,float,float,float) r4.xyz, r1.xyww, t0.xyzw
ld_indexable(texture2d)(float,float,float,float) r5.xyzw, r1.xyww, t2.xyzw
ld_aoffimmi_indexable(-1,0,0)(texture2d)(float,float,float,float) r6.xyz, r1.xyww, t2.xywz
ld_aoffimmi_indexable(0,-1,0)(texture2d)(float,float,float,float) r7.xyz, r1.xyww, t2.xywz
ld_aoffimmi_indexable(1,0,0)(texture2d)(float,float,float,float) r8.xyz, r1.xyww, t2.xywz
ld_aoffimmi_indexable(0,1,0)(texture2d)(float,float,float,float) r9.xyz, r1.xyzw, t2.xywz
utof r1.zw, r1.xxxy
add r3.zw, r1.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
ge r10.x, r3.y, l(0.984375)
mul r4.w, r3.y, l(1.01587307)
mad r3.y, r3.y, l(64.000000), l(-63.000000)
movc r3.y, r10.x, r3.y, r4.w
max r3.y, r3.y, l(0.00000001)
rcp r10.y, r3.y
and r10.xy, r0.wwww, r10.xyxx
add r10.zw, r3.zzzw, -cb1[71].xxxy
mul r10.zw, r10.zzzw, cb1[44].zzzw
mad r10.zw, r10.zzzw, l(0.000000, 0.000000, 2.000000, -2.000000), l(0.000000, 0.000000, -1.000000, 1.000000)
mul r11.x, r10.z, cb1[12].x
mul r11.y, r10.w, cb1[13].y
mov r11.z, l(1.000000)
mul r11.xyz, r10.yyyy, r11.xyzx
mul r12.xyz, r11.yyyy, cb1[17].xyzx
mad r11.xyw, r11.xxxx, cb1[16].xyxz, r12.xyxz
mad r11.xyz, r11.zzzz, cb1[18].xyzx, r11.xywx
mad r0.w, r2.w, l(3.000000), l(0.500000)
ftou r0.w, r0.w
mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r2.xy, r2.xyxx, l(0.850000, 0.850000, 0.000000, 0.000000)
dp2 r2.w, r2.xyxx, r2.xyxx
add r12.zw, -r2.wwww, l(0.000000, 0.000000, 2.000000, 1.000000)
sqrt r2.w, r12.z
mul r12.xy, r2.wwww, r2.xyxx
and r13.xyzw, r0.wwww, l(2, 1, 2, 1)
movc r13.xyzw, r13.zwxy, l(-1.000000,-1.000000,1,1), l(1.000000,1.000000,0,0)
xor r0.w, r13.w, r13.z
movc r13.z, r0.w, l(-1.000000), l(1.000000)
mul r2.xyw, r13.xyxz, l(-1.000000, 0.000000, 0.000000, 1.000000)
mul r14.xyz, r13.xyzx, l(1.000000, -2.000000, 1.000000, 0.000000)
mul r12.xyz, r12.xywx, l(0.40824831, 0.70710677, 0.57735026, 0.000000)
mul r2.xyw, r2.xyxw, r12.yyyy
mad r2.xyw, r14.xyxz, r12.xxxx, r2.xyxw
mad r12.xyz, r13.xyzx, r12.zzzz, r2.xywx
movc r0.w, r3.x, l(-0.500000), l(-0.00146628)
add r0.w, r0.w, r2.z
mul_sat r2.y, r0.w, l(2.00982332)
dp3 r0.w, -r11.xyzx, -r11.xyzx
rsq r0.w, r0.w
mul r13.xyz, r0.wwww, -r11.xyzx
dp2 r1.z, r1.zwzz, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r1.z, r1.z
mul r1.z, r1.z, l(52.982918)
frc r1.z, r1.z
mad r1.z, r1.z, l(6.28318548), cb1[70].w
sincos r14.x, r15.x, r1.z
dp3_sat r2.x, r12.xyzx, r13.xyzx
dp3 r1.z, -r13.xyzx, r12.xyzx
add r1.z, r1.z, r1.z
mad r16.xyz, r12.xyzx, -r1.zzzz, -r13.xyzx
mul r1.z, r2.y, l(17.000000)
exp r1.z, r1.z
add r1.z, r1.z, l(2.000000)
div r1.z, l(2.000000), r1.z
sqrt r1.w, r1.z
mul r2.zw, r3.zzzw, cb1[44].zzzw
sample_l_indexable(texture2d)(float,float,float,float) r2.z, r2.zwzz, t27.yzxw, s4, l(0.000000)
mul r2.w, r2.z, r5.z
lt r3.y, l(0.83333331), r2.y
lt r3.z, l(60.000000), r10.y
and r3.y, r3.z, r3.y
if_nz r3.y
  mul r3.yzw, r11.yyyy, cb1[9].xxyw
  mad r3.yzw, r11.xxxx, cb1[8].xxyw, r3.yyzw
  mad r3.yzw, r11.zzzz, cb1[10].xxyw, r3.yyzw
  add r3.yzw, r3.yyzw, cb1[11].xxyw
  mad r14.yzw, r16.xxyz, l(0.000000, 2000.000000, 2000.000000, 2000.000000), r11.xxyz
  mul r15.yzw, r14.zzzz, cb1[9].xxyw
  mad r15.yzw, r14.yyyy, cb1[8].xxyw, r15.yyzw
  mad r14.yzw, r14.wwww, cb1[10].xxyw, r15.yyzw
  add r14.yzw, r14.yyzw, cb1[11].xxyw
  ge r4.w, r14.w, r3.w
  if_nz r4.w
    mul r10.zw, cb1[44].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
    rcp r17.z, r3.w
    mul r17.xy, r3.yzyy, r17.zzzz
    rcp r18.z, r14.w
    mul r18.xy, r14.yzyy, r18.zzzz
    lt r3.yz, l(0.000000, 1.000000, 1.000000, 0.000000), r18.xxyx
    mad r19.xyzw, r14.yyzz, r18.zzzz, l(-1.000000, 1.000000, -1.000000, 1.000000)
    mad r20.xyzw, r14.yyzz, r18.zzzz, -r17.xxyy
    lt r14.yz, r18.xxyx, l(0.000000, -1.000000, -1.000000, 0.000000)
    div r19.xyzw, r19.xyzw, r20.xyzw
    and r14.yz, r14.yyzy, r19.yywy
    movc r3.yz, r3.yyzy, r19.xxzx, r14.yyzy
    max r3.y, r3.z, r3.y
    add r15.yzw, r17.xxyz, -r18.xxyz
    mad r15.yzw, r3.yyyy, r15.yyzw, r18.xxyz
    mad r3.yz, r17.xxyx, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
    mad r14.yz, r15.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
    add r3.yz, r3.yyzy, -r14.yyzy
    mul r3.yz, |r3.yyzy|, r10.zzwz
    max r3.y, r3.z, r3.y
    max r3.y, r3.y, l(1.000000)
    rcp r3.y, r3.y
    mad r17.xyz, r17.xyzx, l(0.500000, -0.500000, 1.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    mad r18.xyw, r15.yzyw, l(0.500000, -0.500000, 0.000000, 1.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    add r19.xyz, -r17.xyzx, r18.xywx
    mad r17.xyz, r3.yyyy, r19.xyzx, r17.xyzx
    add r18.xyw, -r17.xyxz, r18.xyxw
    mul r19.xyz, r18.xywx, l(0.031250, 0.031250, 0.031250, 0.000000)
    mul r3.yz, r10.zzwz, |r19.xxyx|
    max r3.y, r3.z, r3.y
    log r3.y, r3.y
    round_pi r3.y, r3.y
    max r3.y, r3.y, l(0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r3.z, r17.xyxx, t28.yzxw, s1, r3.y
    mad r20.xyz, r18.xywx, l(0.031250, 0.031250, 0.031250, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r20.xyxx, t28.yzwx, s1, r3.y
    min r3.z, |r3.z|, |r4.w|
    mul r3.z, r20.z, r3.z
    lt r3.z, r3.z, l(1.000000)
    and r6.w, r3.z, l(1)
    mad r20.xyz, r18.xywx, l(0.062500, 0.062500, 0.062500, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r20.xyxx, t28.yzwx, s1, r3.y
    min r4.w, |r4.w|, |r7.w|
    mul r4.w, r20.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    bfi r3.z, l(1), l(0), r3.z, l(2)
    movc r3.z, r4.w, r3.z, r6.w
    mad r20.xyz, r18.xywx, l(0.093750, 0.093750, 0.093750, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r20.xyxx, t28.yzwx, s1, r3.y
    min r6.w, |r7.w|, |r4.w|
    mul r6.w, r20.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r3.z, l(4)
    movc r3.z, r6.w, r7.w, r3.z
    mad r20.xyz, r18.xywx, l(0.125000, 0.125000, 0.125000, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r20.xyxx, t28.yzwx, s1, r3.y
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r20.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    iadd r7.w, r3.z, l(8)
    movc r3.z, r4.w, r7.w, r3.z
    mad r20.xyz, r18.xywx, l(0.156250, 0.156250, 0.156250, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r20.xyxx, t28.yzwx, s1, r3.y
    min r6.w, |r6.w|, |r4.w|
    mul r6.w, r20.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r3.z, l(16)
    movc r3.z, r6.w, r7.w, r3.z
    mad r20.xyz, r18.xywx, l(0.187500, 0.187500, 0.187500, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r20.xyxx, t28.yzwx, s1, r3.y
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r20.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    iadd r7.w, r3.z, l(32)
    movc r3.z, r4.w, r7.w, r3.z
    mad r20.xyz, r18.xywx, l(0.218750, 0.218750, 0.218750, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r20.xyxx, t28.yzwx, s1, r3.y
    min r6.w, |r6.w|, |r4.w|
    mul r6.w, r20.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r3.z, l(64)
    movc r3.z, r6.w, r7.w, r3.z
    mad r20.xyz, r18.xywx, l(0.250000, 0.250000, 0.250000, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r20.xyxx, t28.yzwx, s1, r3.y
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r20.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    iadd r7.w, r3.z, l(128)
    movc r3.z, r4.w, r7.w, r3.z
    mad r20.xyz, r18.xywx, l(0.281250, 0.281250, 0.281250, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r20.xyxx, t28.yzwx, s1, r3.y
    min r6.w, |r6.w|, |r4.w|
    mul r6.w, r20.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r3.z, l(256)
    movc r3.z, r6.w, r7.w, r3.z
    mad r20.xyz, r18.xywx, l(0.312500, 0.312500, 0.312500, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r20.xyxx, t28.yzwx, s1, r3.y
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r20.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    iadd r7.w, r3.z, l(512)
    movc r3.z, r4.w, r7.w, r3.z
    mad r20.xyz, r18.xywx, l(0.343750, 0.343750, 0.343750, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r20.xyxx, t28.yzwx, s1, r3.y
    min r6.w, |r6.w|, |r4.w|
    mul r6.w, r20.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r3.z, l(1024)
    movc r3.z, r6.w, r7.w, r3.z
    mad r20.xyz, r18.xywx, l(0.375000, 0.375000, 0.375000, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r20.xyxx, t28.yzwx, s1, r3.y
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r20.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    iadd r7.w, r3.z, l(2048)
    movc r3.z, r4.w, r7.w, r3.z
    mad r20.xyz, r18.xywx, l(0.406250, 0.406250, 0.406250, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r20.xyxx, t28.yzwx, s1, r3.y
    min r6.w, |r6.w|, |r4.w|
    mul r6.w, r20.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r3.z, l(4096)
    movc r3.z, r6.w, r7.w, r3.z
    mad r20.xyz, r18.xywx, l(0.437500, 0.437500, 0.437500, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r20.xyxx, t28.yzwx, s1, r3.y
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r20.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    iadd r7.w, r3.z, l(8192)
    movc r3.z, r4.w, r7.w, r3.z
    mad r20.xyz, r18.xywx, l(0.468750, 0.468750, 0.468750, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r20.xyxx, t28.yzwx, s1, r3.y
    min r6.w, |r6.w|, |r4.w|
    mul r6.w, r20.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r3.z, l(0x00004000)
    movc r3.z, r6.w, r7.w, r3.z
    mad r20.xyz, r18.xywx, l(0.500000, 0.500000, 0.500000, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r20.xyxx, t28.yzwx, s1, r3.y
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r20.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    iadd r7.w, r3.z, l(0x00008000)
    movc r3.z, r4.w, r7.w, r3.z
    mad r20.xyz, r18.xywx, l(0.531250, 0.531250, 0.531250, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r20.xyxx, t28.yzwx, s1, r3.y
    min r6.w, |r6.w|, |r4.w|
    mul r6.w, r20.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r3.z, l(0x00010000)
    movc r3.z, r6.w, r7.w, r3.z
    mad r20.xyz, r18.xywx, l(0.562500, 0.562500, 0.562500, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r20.xyxx, t28.yzwx, s1, r3.y
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r20.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    iadd r7.w, r3.z, l(0x00020000)
    movc r3.z, r4.w, r7.w, r3.z
    mad r20.xyz, r18.xywx, l(0.593750, 0.593750, 0.593750, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r20.xyxx, t28.yzwx, s1, r3.y
    min r6.w, |r6.w|, |r4.w|
    mul r6.w, r20.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r3.z, l(0x00040000)
    movc r3.z, r6.w, r7.w, r3.z
    mad r20.xyz, r18.xywx, l(0.625000, 0.625000, 0.625000, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r20.xyxx, t28.yzwx, s1, r3.y
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r20.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    iadd r7.w, r3.z, l(0x00080000)
    movc r3.z, r4.w, r7.w, r3.z
    mad r20.xyz, r18.xywx, l(0.656250, 0.656250, 0.656250, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r20.xyxx, t28.yzwx, s1, r3.y
    min r6.w, |r6.w|, |r4.w|
    mul r6.w, r20.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r3.z, l(0x00100000)
    movc r3.z, r6.w, r7.w, r3.z
    mad r20.xyz, r18.xywx, l(0.687500, 0.687500, 0.687500, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r20.xyxx, t28.yzwx, s1, r3.y
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r20.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    iadd r7.w, r3.z, l(0x00200000)
    movc r3.z, r4.w, r7.w, r3.z
    mad r20.xyz, r18.xywx, l(0.718750, 0.718750, 0.718750, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r20.xyxx, t28.yzwx, s1, r3.y
    min r6.w, |r6.w|, |r4.w|
    mul r6.w, r20.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r3.z, l(0x00400000)
    movc r3.z, r6.w, r7.w, r3.z
    mad r20.xyz, r18.xywx, l(0.750000, 0.750000, 0.750000, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r20.xyxx, t28.yzwx, s1, r3.y
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r20.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    iadd r7.w, r3.z, l(0x00800000)
    movc r3.z, r4.w, r7.w, r3.z
    mad r20.xyz, r18.xywx, l(0.781250, 0.781250, 0.781250, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r20.xyxx, t28.yzwx, s1, r3.y
    min r6.w, |r6.w|, |r4.w|
    mul r6.w, r20.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r3.z, l(0x01000000)
    movc r3.z, r6.w, r7.w, r3.z
    mad r20.xyz, r18.xywx, l(0.812500, 0.812500, 0.812500, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r20.xyxx, t28.yzwx, s1, r3.y
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r20.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    iadd r7.w, r3.z, l(0x02000000)
    movc r3.z, r4.w, r7.w, r3.z
    mad r20.xyz, r18.xywx, l(0.843750, 0.843750, 0.843750, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r20.xyxx, t28.yzwx, s1, r3.y
    min r6.w, |r6.w|, |r4.w|
    mul r6.w, r20.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r3.z, l(0x04000000)
    movc r3.z, r6.w, r7.w, r3.z
    mad r20.xyz, r18.xywx, l(0.875000, 0.875000, 0.875000, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r20.xyxx, t28.yzwx, s1, r3.y
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r20.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    iadd r7.w, r3.z, l(0x08000000)
    movc r3.z, r4.w, r7.w, r3.z
    mad r20.xyz, r18.xywx, l(0.906250, 0.906250, 0.906250, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r20.xyxx, t28.yzwx, s1, r3.y
    min r6.w, |r6.w|, |r4.w|
    mul r6.w, r20.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r3.z, l(0x10000000)
    movc r3.z, r6.w, r7.w, r3.z
    mad r20.xyz, r18.xywx, l(0.937500, 0.937500, 0.937500, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r20.xyxx, t28.yzwx, s1, r3.y
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r20.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    iadd r7.w, r3.z, l(0x20000000)
    movc r3.z, r4.w, r7.w, r3.z
    mad r20.xyz, r18.xywx, l(0.968750, 0.968750, 0.968750, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r20.xyxx, t28.yzwx, s1, r3.y
    min r6.w, |r6.w|, |r4.w|
    mul r6.w, r20.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r3.z, l(0x40000000)
    movc r3.z, r6.w, r7.w, r3.z
    sample_l_indexable(texture2d)(float,float,float,float) r3.y, r14.yzyy, t28.yxzw, s1, r3.y
    min r3.y, |r4.w|, |r3.y|
    mul r3.y, r15.w, r3.y
    lt r3.y, r3.y, l(1.000000)
    iadd r4.w, r3.z, l(0x80000000)
    movc r3.y, r3.y, r4.w, r3.z
    mov r20.w, l(-1)
    mov r21.z, l(-1)
    mov r10.zw, l(0,0,0,0)
    mov r3.z, l(0)
    mov r4.w, r3.y
    mov r6.w, r18.z
    mov r22.yz, l(0,0,0,0)
    mov r20.z, l(0)
    mov r7.w, l(0)
    loop 
      breakc_z r4.w
      firstbit_lo r20.y, r4.w
      ishl r8.w, l(1), r20.y
      xor r20.x, r4.w, r8.w
      utof r9.w, r20.y
      mul r9.w, r9.w, l(0.031250)
      mad r15.yzw, r18.xxyw, r9.wwww, r17.xxyz
      sample_l_indexable(texture2d)(float,float,float,float) r9.w, r15.yzyy, t28.yzwx, s1, l(0.000000)
      mul r13.w, r15.w, |r9.w|
      lt r13.w, r13.w, l(1.000000)
      if_nz r13.w
        if_nz r20.z
          lt r13.w, r3.w, |r9.w|
          lt r14.y, r6.w, r15.w
          and r13.w, r13.w, r14.y
          movc r14.yz, r13.wwww, r15.yyzy, r10.zzwz
          mov r20.z, r15.w
          mov r22.x, r6.w
          movc r23.xyz, r13.wwww, r20.zxyz, r22.xyzx
          mov r4.w, r20.x
          mov r20.z, l(-1)
          mov r10.zw, r14.yyyz
          mov r6.w, r23.x
          mov r22.yz, r23.yyzy
          continue 
        endif 
        mov r13.w, r22.y
        mov r14.y, l(0)
      else 
        not r8.w, r8.w
        and r13.w, r8.w, r22.y
        mov r14.y, r20.z
      endif 
      if_nz r7.w
        mov r4.w, r20.x
        mov r22.y, r13.w
        mov r20.z, r14.y
        mov r7.w, l(-1)
        continue 
      endif 
      mov r23.xy, r10.zwzz
      mov r8.w, r3.z
      mov r14.z, r6.w
      mov r22.y, r13.w
      mov r22.x, r22.z
      mov r20.z, r14.y
      mov r21.w, r7.w
      mov r17.w, r15.w
      mov r19.w, |r9.w|
      mov r22.w, l(0)
      loop 
        ige r23.z, r22.w, l(4)
        breakc_nz r23.z
        itof r23.z, r22.w
        add r23.z, r23.z, l(1.000000)
        mul r23.z, r23.z, l(0.250000)
        mad r24.xyz, r19.xyzx, r23.zzzz, r15.yzwy
        sample_l_indexable(texture2d)(float,float,float,float) r23.z, r24.xyxx, t28.yzxw, s1, l(0.000000)
        mul r23.w, r24.z, |r23.z|
        lt r23.w, r23.w, l(1.000000)
        if_nz r23.w
          lt r23.w, r3.w, |r23.z|
          add r24.w, -r17.w, r24.z
          add r25.x, -r19.w, |r23.z|
          mul r25.y, r17.w, r24.z
          mul r25.x, r25.y, |r25.x|
          lt r24.w, r25.x, |r24.w|
          and r25.x, r23.w, r24.w
          lt r25.y, r14.z, r24.z
          and r25.z, r23.w, r25.y
          movc r21.xy, r25.zzzz, r20.xyxx, r22.yxyy
          or r24.w, r24.w, r25.y
          and r23.w, r23.w, r24.w
          movc r24.xy, r23.wwww, r24.xyxx, r23.xyxx
          movc r24.w, r25.x, l(1.000000), r8.w
          movc r23.w, r23.w, r24.z, r14.z
          movc r25.xyzw, r25.xxxx, r20.xyzw, r21.xyzw
          mov r8.w, r24.w
          mov r23.xy, r24.xyxx
          mov r14.z, r23.w
          mov r22.xy, r25.yxyy
          mov r20.z, r25.z
          mov r21.w, r25.w
          break 
        endif 
        mov r17.w, r24.z
        mov r19.w, |r23.z|
        iadd r22.w, r22.w, l(1)
      endloop 
      mov r10.zw, r23.xxxy
      mov r3.z, r8.w
      mov r6.w, r14.z
      mov r22.yz, r22.yyxy
      mov r7.w, r21.w
      mov r4.w, r20.x
    endloop 
    rcp r3.y, r6.w
    add r3.y, -r3.w, r3.y
    add r3.w, -r3.w, r14.w
    div r3.y, |r3.y|, |r3.w|
    min r17.x, r3.y, l(1.000000)
    countbits r3.y, r22.y
    utof r3.y, r3.y
    add r3.y, r3.y, l(1.000000)
    iadd r3.w, -r22.z, l(32)
    utof r3.w, r3.w
    div r3.y, r3.y, r3.w
    min r17.y, r3.y, l(1.000000)
  else 
    mov r17.xy, l(1.000000,0,0,0)
    mov r3.z, l(0)
  endif 
  add r3.y, r2.y, l(-0.83333331)
  mul r3.y, r3.y, l(5.99999952)
  max r3.y, r3.y, l(0.000000)
  mad r3.w, r3.y, l(-2.000000), l(3.000000)
  mul r3.y, r3.y, r3.y
  mul r3.y, r3.y, r3.w
  add r3.w, r10.y, l(-60.000000)
  mul_sat r3.w, r3.w, l(0.01666667)
  mad r4.w, r3.w, l(-2.000000), l(3.000000)
  mul r3.w, r3.w, r3.w
  mul r3.w, r3.w, r4.w
  mul r3.y, r3.w, r3.y
  mul r3.y, r17.y, r3.y
  mad r14.yz, r10.zzwz, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
  add r14.yz, |r14.yyzy|, l(0.000000, -0.500000, -0.500000, 0.000000)
  add_sat r14.yz, r14.yyzy, r14.yyzy
  mad r15.yz, r14.yyzy, l(0.000000, -2.000000, -2.000000, 0.000000), l(0.000000, 3.000000, 3.000000, 0.000000)
  mul r14.yz, r14.yyzy, r14.yyzy
  mad r14.yz, -r15.yyzy, r14.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
  mul r3.w, r14.z, r14.y
  mul r3.y, r3.w, r3.y
  mul r3.w, r17.x, l(10.000000)
  min r3.w, r3.w, l(1.000000)
  add r4.w, -r3.z, l(1.000000)
  mul r4.w, r3.y, r4.w
  add r3.w, r3.w, l(-1.000000)
  mad r3.w, r4.w, r3.w, l(1.000000)
  mul r3.y, r3.z, r3.y
  lt r3.z, l(0.000000), r3.y
  if_nz r3.z
    sample_l_indexable(texture2d)(float,float,float,float) r14.yz, r10.zwzz, t22.zxyw, s4, l(0.000000)
    add r15.yz, |r14.yyzy|, l(0.000000, -0.500000, -0.500000, 0.000000)
    add_sat r15.yz, r15.yyzy, r15.yyzy
    add r17.xy, |r14.yzyy|, |r14.yzyy|
    min r17.xy, r17.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    mul r17.xy, r17.xyxx, l(10.000000, 10.000000, 0.000000, 0.000000)
    mad r15.yz, r15.yyzy, l(0.000000, 30.000000, 30.000000, 0.000000), r17.xxyx
    ge r14.yz, r14.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
    movc r14.yz, r14.yyzy, r15.yyzy, -r15.yyzy
    mad r10.yz, -r14.yyzy, cb1[44].zzwz, r10.zzwz
    sample_l_indexable(texture2d)(float,float,float,float) r10.yzw, r10.yzyy, t21.wxyz, s4, l(0.000000)
    mul r10.yzw, r10.yyzw, cb1[85].xxxx
    mul r10.yzw, r3.yyyy, r10.yyzw
  else 
    mov r10.yzw, l(0,0,0,0)
    mov r3.y, l(0)
  endif 
else 
  mov r10.yzw, l(0,0,0,0)
  mov r3.yw, l(0,0,0,1.000000)
endif 
dp3 r3.z, r12.xyzx, cb2[17].xyzx
mov_sat r4.w, r3.z
movc r6.w, r3.x, |r3.z|, r4.w
ge r7.w, l(0.000000), r6.w
if_nz r7.w
  mov r8.w, l(0)
endif 
if_z r7.w
  mul r14.yzw, r11.yyyy, cb2[29].xxyz
  mad r14.yzw, r11.xxxx, cb2[28].xxyz, r14.yyzw
  mad r14.yzw, r11.zzzz, cb2[30].xxyz, r14.yyzw
  add r14.yzw, r14.yyzw, cb2[31].xxyz
  add r7.w, r14.w, -cb2[17].w
  mad r7.w, -r7.w, l(0.00006104), l(1.000000)
  mov_sat r9.w, r7.w
  eq r9.w, r7.w, r9.w
  if_nz r9.w
    mov r9.w, l(0)
    mov r13.w, l(0)
    loop 
      ge r15.y, r9.w, l(3.000000)
      breakc_nz r15.y
      ftou r15.y, r9.w
      add r15.zw, r14.yyyz, -cb2[r15.y + 20].xxxy
      max r15.z, |r15.w|, |r15.z|
      mul r13.w, r15.z, cb2[r15.y + 20].z
      lt r15.y, r13.w, l(1.000000)
      if_nz r15.y
        break 
      endif 
      add r9.w, r9.w, l(1.000000)
      mov r13.w, l(0)
    endloop 
  else 
    mov r9.w, l(3.000000)
    mov r13.w, l(0)
  endif 
  ge r15.y, r9.w, l(3.000000)
  if_nz r15.y
    mul r17.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
    rcp r18.xz, r17.xxxx
    mov r18.y, -r18.z
    mad r17.xyz, r14.yzyy, r18.xyzx, r17.yzyy
    add r18.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r17.xyz, r17.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r17.xyz, r18.xyzx, r17.xyzx
    mul r15.zw, r17.zzzy, cb2[32].xxxx
    round_ni r15.zw, r15.zzzw
    mul r15.w, r15.w, cb2[27].x
    mad r15.z, r15.w, cb2[32].x, r15.z
    ftou r15.z, r15.z
    iadd r15.z, r15.z, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.w, r15.z, l(0), t23.xxxx
    and r17.w, r15.w, l(0x40000000)
    ishl r18.x, r15.w, l(2)
    if_z r17.w
      and r17.w, r15.w, l(0x01ffffff)
      iadd r19.x, r15.z, r17.w
      ushr r15.z, r15.w, l(25)
      utof r15.z, r15.z
      mul r17.xyz, r15.zzzz, r17.xyzx
      frc r17.xyz, r17.xyzx
      mul r17.xyz, r17.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
      ftou r17.xyz, r17.xyzx
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.z, r19.x, l(0), t23.xxxx
      ushr r15.zw, r17.zzzy, l(0, 0, 6, 6)
      and r17.w, r19.z, l(0xc0000000)
      iadd r18.y, r19.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.y, r18.y, l(0), t23.xxxx
      movc r15.w, r15.w, r19.z, r18.y
      ushr r18.y, r15.w, l(13)
      movc r15.z, r15.z, r18.y, r15.w
      and r15.z, r15.z, l(8191)
      iadd r20.x, r15.z, r19.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.z, r20.x, l(0), t23.xxxx
      mov r19.y, l(0)
      mov r20.y, l(1)
      movc r18.yzw, r17.wwww, r19.xxyz, r20.xxyz
      movc r20.yz, r17.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r15.zw, r17.zzzy, r20.yyyy
      and r15.zw, r15.zzzw, l(0, 0, 1, 1)
      and r19.w, r18.w, l(0xc0000000)
      iadd r20.y, r18.y, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.y, r20.y, l(0), t23.xxxx
      movc r15.w, r15.w, r18.w, r20.y
      ushr r20.y, r15.w, l(13)
      movc r15.z, r15.z, r20.y, r15.w
      and r15.z, r15.z, l(8191)
      iadd r20.x, r15.z, r18.y
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.w, r20.x, l(0), t23.xxxx
      movc r18.yzw, r19.wwww, r18.yyzw, r20.xxzw
      movc r18.yzw, r17.wwww, r19.xxyz, r18.yyzw
      and r15.z, r18.w, l(0xc0000000)
      if_z r15.z
        iadd r15.z, -r18.z, l(6)
        ushr r15.zw, r17.zzzy, r15.zzzz
        or r17.w, r18.w, l(0x40000000)
        bfi r15.w, l(1), l(1), r15.w, l(0)
        bfi r15.z, l(1), l(0), r15.z, r15.w
        imul null, r15.z, r15.z, l(10)
        ushr r15.z, r17.w, r15.z
        and r15.z, r15.z, l(1023)
        iadd r19.x, r15.z, r18.y
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.w, r19.x, l(0), t23.xxxx
        iadd r19.yz, r18.zzzz, l(0, 1, 2, 0)
        iadd r15.z, -r19.y, l(6)
        ushr r15.zw, r17.zzzy, r15.zzzz
        and r17.w, r19.w, l(0xc0000000)
        or r18.z, r19.w, l(0x40000000)
        bfi r15.w, l(1), l(1), r15.w, l(0)
        bfi r15.z, l(1), l(0), r15.z, r15.w
        imul null, r15.z, r15.z, l(10)
        ushr r15.z, r18.z, r15.z
        and r15.z, r15.z, l(1023)
        iadd r20.x, r15.z, r19.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.z, r20.x, l(0), t23.xxxx
        mov r20.y, r19.z
        movc r20.xyz, r17.wwww, r19.xywx, r20.xyzx
        iadd r15.z, -r20.y, l(6)
        ushr r15.zw, r17.zzzy, r15.zzzz
        and r18.z, r20.z, l(0xc0000000)
        or r19.y, r20.z, l(0x40000000)
        bfi r15.w, l(1), l(1), r15.w, l(0)
        bfi r15.z, l(1), l(0), r15.z, r15.w
        imul null, r15.z, r15.z, l(10)
        ushr r15.z, r19.y, r15.z
        and r15.z, r15.z, l(1023)
        iadd r21.x, r15.z, r20.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r21.y, r21.x, l(0), t23.xxxx
        movc r15.zw, r18.zzzz, r20.xxxz, r21.xxxy
        movc r18.yw, r17.wwww, r19.xxxw, r15.zzzw
      endif 
      and r15.z, r18.w, l(0xc0000000)
      if_z r15.z
        ubfe r15.w, l(14), l(15), r18.w
        utof r15.w, r15.w
        mul r15.w, r15.w, cb2[27].w
        mul r15.w, r15.w, l(0.00006104)
        and r19.xy, r18.wwww, l(0x00007fff, 0x20000000, 0, 0)
        utof r17.w, r19.x
        mul r17.w, r17.w, cb2[27].w
        mul r17.w, r17.w, l(0.00003052)
        and r18.z, r17.y, l(3)
        iadd r18.z, r18.z, r18.y
        iadd r18.z, r18.z, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.z, l(0), t23.xxxx
        bfi r19.xzw, l(2, 0, 2, 1), l(3, 0, 1, 4), r17.xxyz, l(0, 0, 0, 0)
        ushr r17.x, r18.z, r19.x
        and r17.x, r17.x, l(255)
        utof r17.x, r17.x
        mul r17.x, r17.w, r17.x
        mad r17.x, r17.x, l(0.00392157), r15.w
        iadd r17.y, r19.z, l(1)
        ubfe r17.z, l(1), l(1), r17.z
        iadd r17.y, r17.z, r17.y
        iadd r17.y, r17.y, r18.y
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.y, r17.y, l(0), t23.xxxx
        ushr r17.y, r17.y, r19.w
        and r17.y, r17.y, l(0x0000ffff)
        utof r17.y, r17.y
        mul r17.y, r17.w, r17.y
        mad r15.w, r17.y, l(0.00001526), r15.w
        movc r18.x, r19.y, r17.x, r15.w
      else 
        and r15.w, r18.w, l(0x80000000)
        iadd r17.x, r18.y, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.x, r17.x, l(0), t23.xxxx
        movc r15.w, r15.w, r17.x, l(0)
        ishl r17.x, r18.w, l(2)
        ushr r17.y, r15.w, l(16)
        f16tof32 r17.y, r17.y
        and r15.w, r15.w, l(0x0000ffff)
        f16tof32 r15.w, r15.w
        mad r17.x, r14.y, r17.y, r17.x
        mad r15.w, r14.z, r15.w, r17.x
        movc r18.x, r15.z, r15.w, r18.x
      endif 
    endif 
    mad r14.w, -cb2[27].z, l(2.000000), r14.w
    lt r14.w, r18.x, r14.w
    movc r8.w, r14.w, l(0), l(1.000000)
  endif 
  if_z r15.y
    if_z cb2[58].y
      ftou r14.w, r9.w
      add r15.yz, r14.yyzy, -cb2[r14.w + 20].xxyx
      mul r15.yz, r15.yyzy, cb2[r14.w + 20].zzzz
      mad r17.xy, r15.yzyy, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r14.w, cb2[26].y
      add r17.z, r9.w, r14.w
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r14.w, r17.xyzx, t13.xxxx, s13, r7.w
      sample_l_indexable(texture2darray)(float,float,float,float) r15.y, r17.xyzx, t31.yxzw, s0, l(0.000000)
      add r14.w, r14.w, r15.y
      add_sat r14.w, r14.w, l(-1.000000)
      mul r15.y, r14.w, r14.w
      mul r8.w, r14.w, r15.y
    endif 
    if_nz cb2[58].y
      mov r17.x, -r14.x
      ftou r14.w, r9.w
      add r9.w, r9.w, l(1.000000)
      min r9.w, r9.w, l(2.000000)
      ftou r9.w, r9.w
      add r13.w, -r13.w, l(1.000000)
      mul r13.w, r13.w, l(28.000000)
      ftou r13.w, r13.w
      add r15.yz, r14.yyzy, -cb2[r14.w + 20].xxyx
      mul r15.yz, r15.yyzy, cb2[r14.w + 20].zzzz
      mad r15.yz, r15.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      add r14.yz, r14.yyzy, -cb2[r9.w + 20].xxyx
      mul r14.yz, r14.yyzy, cb2[r9.w + 20].zzzz
      mad r14.yz, r14.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      mov r17.y, r15.x
      mov r17.z, r14.x
      mov r15.w, l(0)
      mov r17.w, l(0)
      loop 
        uge r18.x, r17.w, l(8)
        breakc_nz r18.x
        ult r18.x, r13.w, r17.w
        movc r18.yz, r18.xxxx, r14.yyzy, r15.yyzy
        movc r18.w, r18.x, cb2[r9.w + 20].w, cb2[r14.w + 20].w
        movc r18.x, r18.x, r9.w, r14.w
        dp2 r19.x, icb[r17.w + 0].yxyy, r17.xyxx
        dp2 r19.y, icb[r17.w + 0].yxyy, r17.yzyy
        mad r19.xy, r19.xyxx, r18.wwww, r18.yzyy
        iadd r18.x, r18.x, cb2[26].y
        utof r19.z, r18.x
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r18.x, r19.xyzx, t13.xxxx, s13, r7.w
        sample_l_indexable(texture2darray)(float,float,float,float) r18.y, r19.xyzx, t31.yxzw, s0, l(0.000000)
        add r18.x, r18.y, r18.x
        add_sat r18.x, r18.x, l(-1.000000)
        mad r15.w, r18.x, l(0.125000), r15.w
        iadd r17.w, r17.w, l(1)
      endloop 
      mul r7.w, r15.w, r15.w
      mul r8.w, r15.w, r7.w
    endif 
  endif 
endif 
add r7.w, -r2.y, l(1.000000)
mul r9.w, r7.w, l(5.000000)
mad r13.w, r7.w, l(5.000000), l(-2.500000)
mul r13.w, r13.w, l(0.400000)
max r13.w, r13.w, l(0.000000)
mul r13.w, r13.w, l(100.000000)
mad r14.yz, -r7.wwww, l(0.000000, 10.000000, 5.000000, 0.000000), l(0.000000, 6.857410, 7.085000, 0.000000)
exp r14.y, r14.y
mul r14.y, r2.x, r14.y
mul r14.w, r7.w, r9.w
mad r14.z, -r14.w, l(2.015905), r14.z
exp r14.z, r14.z
mul r14.z, r2.x, r14.z
mul r14.yz, r14.yyzy, l(0.000000, 9.136810, 9.708090, 0.000000)
max r14.y, r14.z, r14.y
max r14.y, r14.y, l(1.268160)
iadd r14.z, cb2[0].y, -cb2[58].x
ftou r14.w, cb1[44].x
iadd r14.w, r14.w, l(7)
ushr r14.w, r14.w, l(3)
imad r0.y, r0.z, r14.w, r0.y
bfi r0.y, l(27), l(5), r0.y, l(16)
and r0.z, r14.z, l(-32)
iadd r14.w, -r0.z, r14.z
and r15.y, cb2[0].y, l(-32)
iadd r15.z, -r15.y, cb2[0].y
mov r17.yz, l(0,0,1.000000,0)
mov r18.xy, l(0,0,0,0)
mov r19.x, l(1.000000)
mov r20.xy, l(0,0,0,0)
mov r21.xy, l(0,0,0,0)
mov r22.xyzw, l(0,0,0,0)
mov r23.yzw, l(0,0,0,0)
mov r15.w, r0.z
loop 
  uge r17.w, r15.w, cb2[0].y
  breakc_nz r17.w
  ushr r17.w, r15.w, l(5)
  iadd r17.w, r0.y, r17.w
  ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.w, r17.w, l(0), t26.xxxx
  ieq r18.w, r0.z, r15.w
  bfi r19.z, r14.w, l(0), l(0), r17.w
  movc r17.w, r18.w, r19.z, r17.w
  ieq r18.w, r15.y, r15.w
  ubfe r19.z, r15.z, l(0), r17.w
  movc r17.w, r18.w, r19.z, r17.w
  mov r24.xyzw, r22.xyzw
  mov r25.xyz, r23.yzwy
  mov r18.w, r17.w
  loop 
    breakc_z r18.w
    firstbit_lo r19.z, r18.w
    ishl r19.w, l(1), r19.z
    not r19.w, r19.w
    and r18.w, r18.w, r19.w
    iadd r19.z, r15.w, r19.z
    imul null, r19.z, r19.z, l(14)
    add r26.xyz, r11.xyzx, -cb10[r19.z + 0].xyzx
    and r19.w, l(0x0000ffff), cb10[r19.z + 7].z
    ubfe r20.w, l(6), l(25), cb10[r19.z + 7].z
    imul null, r21.w, r19.w, l(6)
    dp3 r26.w, cb11[r21.w + 0].xyzx, r26.xyzx
    add_sat r26.w, r26.w, cb11[r21.w + 0].w
    dp3 r27.x, cb11[r21.w + 1].xyzx, r26.xyzx
    add_sat r27.x, r27.x, cb11[r21.w + 1].w
    mul r26.w, r26.w, r27.x
    dp3 r27.x, cb11[r21.w + 2].xyzx, r26.xyzx
    add_sat r27.x, r27.x, cb11[r21.w + 2].w
    mul r26.w, r26.w, r27.x
    dp3 r27.x, cb11[r21.w + 3].xyzx, r26.xyzx
    add_sat r27.x, r27.x, cb11[r21.w + 3].w
    mul r26.w, r26.w, r27.x
    dp3 r27.x, cb11[r21.w + 4].xyzx, r26.xyzx
    add_sat r27.x, r27.x, cb11[r21.w + 4].w
    mul r26.w, r26.w, r27.x
    dp3 r27.x, cb11[r21.w + 5].xyzx, r26.xyzx
    add_sat r21.w, r27.x, cb11[r21.w + 5].w
    mul r17.x, r21.w, r26.w
    and r21.w, l(1), cb10[r19.z + 6].x
    movc r27.xy, r21.wwww, r17.xyxx, r17.zxzz
    mov r17.x, cb10[r19.z + 6].x
    mov r28.xy, r27.xyxx
    mov r21.w, l(1)
    loop 
      ige r26.w, r21.w, r20.w
      breakc_nz r26.w
      iadd r26.w, r19.w, r21.w
      imul null, r26.w, r26.w, l(6)
      dp3 r27.z, cb11[r26.w + 0].xyzx, r26.xyzx
      add_sat r27.z, r27.z, cb11[r26.w + 0].w
      mul r27.z, r27.z, r28.x
      dp3 r27.w, cb11[r26.w + 1].xyzx, r26.xyzx
      add_sat r27.w, r27.w, cb11[r26.w + 1].w
      mul r27.z, r27.w, r27.z
      dp3 r27.w, cb11[r26.w + 2].xyzx, r26.xyzx
      add_sat r27.w, r27.w, cb11[r26.w + 2].w
      mul r27.z, r27.w, r27.z
      dp3 r27.w, cb11[r26.w + 3].xyzx, r26.xyzx
      add_sat r27.w, r27.w, cb11[r26.w + 3].w
      mul r27.z, r27.w, r27.z
      dp3 r27.w, cb11[r26.w + 4].xyzx, r26.xyzx
      add_sat r27.w, r27.w, cb11[r26.w + 4].w
      mul r27.z, r27.w, r27.z
      dp3 r27.w, cb11[r26.w + 5].xyzx, r26.xyzx
      add_sat r26.w, r27.w, cb11[r26.w + 5].w
      mul r28.x, r26.w, r27.z
      ushr r27.w, r17.x, l(2)
      ubfe r28.z, l(1), l(2), r17.x
      and r28.w, r27.w, l(2)
      max r29.x, r28.x, r28.y
      mad r26.w, -r27.z, r26.w, l(1.000000)
      mul r26.w, r26.w, r28.y
      movc r19.y, r28.w, r26.w, r29.x
      movc r28.xy, r28.zzzz, r28.xyxx, r19.xyxx
      iadd r21.w, r21.w, l(1)
      mov r17.x, r27.w
    endloop 
    mov_sat r28.y, r28.y
    mul r17.x, r28.y, cb10[r19.z + 6].y
    lt r19.y, l(0.000000), r17.x
    if_nz r19.y
      mad r25.z, r28.y, cb10[r19.z + 6].y, r25.z
      mul r17.x, r17.x, cb10[r19.z + 7].y
      mov r27.x, cb10[r19.z + 7].w
      mov r27.yz, cb10[r19.z + 8].xxyx
      dp3 r19.y, r16.xyzx, r27.xyzx
      dp3 r19.w, r26.xyzx, r27.xyzx
      add r19.w, r19.w, -cb10[r19.z + 8].z
      ge r20.w, r19.w, l(0.000000)
      max r19.w, r13.w, |r19.w|
      movc r19.w, r20.w, r19.w, -r19.w
      max r19.y, -r19.y, l(0.00000010)
      div r19.y, r19.w, r19.y
      min r19.y, |r19.y|, l(131072.000000)
      mov r27.x, cb10[r19.z + 8].w
      mov r27.yz, cb10[r19.z + 9].xxyx
      dp3 r19.w, r16.xyzx, r27.xyzx
      dp3 r20.w, r26.xyzx, r27.xyzx
      add r20.w, r20.w, -cb10[r19.z + 9].z
      ge r21.w, r20.w, l(0.000000)
      max r20.w, r13.w, |r20.w|
      movc r20.w, r21.w, r20.w, -r20.w
      max r19.w, -r19.w, l(0.00000010)
      div r19.w, r20.w, r19.w
      min r19.y, |r19.w|, r19.y
      mov r27.x, cb10[r19.z + 9].w
      mov r27.yz, cb10[r19.z + 10].xxyx
      dp3 r19.w, r16.xyzx, r27.xyzx
      dp3 r20.w, r26.xyzx, r27.xyzx
      add r20.w, r20.w, -cb10[r19.z + 10].z
      ge r21.w, r20.w, l(0.000000)
      max r20.w, r13.w, |r20.w|
      movc r20.w, r21.w, r20.w, -r20.w
      max r19.w, -r19.w, l(0.00000010)
      div r19.w, r20.w, r19.w
      min r19.y, |r19.w|, r19.y
      mov r27.x, cb10[r19.z + 10].w
      mov r27.yz, cb10[r19.z + 11].xxyx
      dp3 r19.w, r16.xyzx, r27.xyzx
      dp3 r20.w, r26.xyzx, r27.xyzx
      add r20.w, r20.w, -cb10[r19.z + 11].z
      ge r21.w, r20.w, l(0.000000)
      max r20.w, r13.w, |r20.w|
      movc r20.w, r21.w, r20.w, -r20.w
      max r19.w, -r19.w, l(0.00000010)
      div r19.w, r20.w, r19.w
      min r19.y, |r19.w|, r19.y
      mov r27.x, cb10[r19.z + 11].w
      mov r27.yz, cb10[r19.z + 12].xxyx
      dp3 r19.w, r16.xyzx, r27.xyzx
      dp3 r20.w, r26.xyzx, r27.xyzx
      add r20.w, r20.w, -cb10[r19.z + 12].z
      ge r21.w, r20.w, l(0.000000)
      max r20.w, r13.w, |r20.w|
      movc r20.w, r21.w, r20.w, -r20.w
      max r19.w, -r19.w, l(0.00000010)
      div r19.w, r20.w, r19.w
      min r19.y, |r19.w|, r19.y
      mov r27.x, cb10[r19.z + 12].w
      mov r27.yz, cb10[r19.z + 13].xxyx
      dp3 r19.w, r16.xyzx, r27.xyzx
      dp3 r20.w, r26.xyzx, r27.xyzx
      add r20.w, r20.w, -cb10[r19.z + 13].z
      ge r21.w, r20.w, l(0.000000)
      max r20.w, r13.w, |r20.w|
      movc r20.w, r21.w, r20.w, -r20.w
      max r19.w, -r19.w, l(0.00000010)
      div r19.w, r20.w, r19.w
      min r19.y, |r19.w|, r19.y
      add r27.x, r26.x, cb10[r19.z + 3].w
      add r27.yz, r26.yyzy, cb10[r19.z + 4].xxyx
      mad r27.xyz, r16.xyzx, r19.yyyy, r27.xyzx
      dp3 r19.w, r27.xyzx, r27.xyzx
      sqrt r19.w, r19.w
      div r19.y, r19.y, r19.w
      add r19.y, r19.y, r19.y
      sqrt r19.y, r19.y
      mad r19.y, r7.w, l(5.000000), r19.y
      add r19.y, r19.y, l(-0.844800)
      mov r29.x, cb10[r19.z + 0].w
      mov r29.y, cb10[r19.z + 1].z
      mov r29.z, cb10[r19.z + 2].y
      dp3 r30.x, r27.xyzx, r29.xyzx
      mov r31.xy, cb10[r19.z + 1].xwxx
      mov r31.z, cb10[r19.z + 2].z
      dp3 r30.y, r27.xyzx, r31.xyzx
      mov r32.x, cb10[r19.z + 1].y
      mov r32.yz, cb10[r19.z + 2].xxwx
      dp3 r30.z, r27.xyzx, r32.xyzx
      ubfe r19.w, l(9), l(16), cb10[r19.z + 7].z
      utof r30.w, r19.w
      sample_l_indexable(texturecubearray)(float,float,float,float) r27.xyz, r30.xyzw, t8.xyzw, s2, r19.y
      dp3 r33.x, r26.xyzx, r29.xyzx
      dp3 r33.y, r26.xyzx, r31.xyzx
      dp3 r33.z, r26.xyzx, r32.xyzx
      mad_sat r26.xyz, r33.xyzx, cb10[r19.z + 3].xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
      mul r33.xy, r26.xyxx, cb10[r19.z + 4].zwzz
      mul r33.z, r26.z, cb10[r19.z + 5].x
      add r19.yzw, r33.xxyz, cb10[r19.z + 5].yyzw
      dp3 r30.x, r12.xyzx, r29.xyzx
      dp3 r30.y, r12.xyzx, r31.xyzx
      dp3 r30.z, r12.xyzx, r32.xyzx
      lt r26.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r30.xyzx
      movc r18.z, r26.x, l(0), l(0.500000)
      add r28.xzw, r18.xxyz, r19.yyzw
      sample_l_indexable(texture3d)(float,float,float,float) r28.xzw, r28.xzwx, t17.xwyz, s4, l(0.000000)
      mul r29.xyz, r30.xyzx, r30.xyzx
      mul r29.xyz, r17.xxxx, r29.xyzx
      movc r20.z, r26.y, l(0), l(0.500000)
      add r26.xyw, r19.yzyw, r20.xyxz
      sample_l_indexable(texture3d)(float,float,float,float) r26.xyw, r26.xywx, t18.xywz, s4, l(0.000000)
      mul r26.xyw, r29.yyyy, r26.xyxw
      mad r26.xyw, r28.xzxw, r29.xxxx, r26.xyxw
      movc r21.z, r26.z, l(0), l(0.500000)
      add r19.yzw, r19.yyzw, r21.xxyz
      sample_l_indexable(texture3d)(float,float,float,float) r19.yzw, r19.yzwy, t19.wxyz, s4, l(0.000000)
      mad r19.yzw, r19.yyzw, r29.zzzz, r26.xxyw
      sample_l_indexable(texturecubearray)(float,float,float,float) r26.xyz, r30.xyzw, t8.xyzw, s2, l(6.000000)
      mul r28.xzw, r19.yyzw, r26.xxyz
      dp3 r18.z, r28.xzwx, l(0.212600, 0.715200, 0.072200, 0.000000)
      mad r24.xyz, r19.yzwy, r26.xyzx, r24.xyzx
      mul r19.y, r14.y, r18.z
      mul r26.xyz, r17.xxxx, r27.xyzx
      dp3 r17.x, r26.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
      mad r17.x, r14.y, r18.z, r17.x
      div r17.x, r19.y, r17.x
      mov r27.x, r24.w
      mov r27.yz, r25.xxyx
      mad r25.xyw, r26.yzyx, r17.xxxx, r27.yzyx
      mov r24.w, r25.w
    endif 
  endloop 
  mov r22.xyzw, r24.xyzw
  mov r23.yzw, r25.xxyz
  iadd r15.w, r15.w, l(32)
endloop 
lt r15.y, r23.w, l(1.000000)
if_nz r15.y
  mov r17.yz, l(0,0,1.000000,0)
  mov r18.xy, l(0,0,0,0)
  mov r19.x, l(1.000000)
  mov r20.xy, l(0,0,0,0)
  mov r21.xy, l(0,0,0,0)
  mov r24.x, r22.w
  mov r24.yzw, r23.yyzw
  mov r15.yzw, r22.xxyz
  mov r17.w, r23.w
  mov r18.w, l(0)
  loop 
    uge r19.z, r18.w, r14.z
    breakc_nz r19.z
    ushr r19.z, r18.w, l(5)
    iadd r19.z, r0.y, r19.z
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.z, r19.z, l(0), t26.xxxx
    ieq r19.w, r0.z, r18.w
    ubfe r20.w, r14.w, l(0), r19.z
    movc r19.z, r19.w, r20.w, r19.z
    mov r25.xyzw, r24.xyzw
    mov r26.xyz, r15.yzwy
    mov r19.w, r17.w
    mov r20.w, r19.z
    loop 
      breakc_z r20.w
      firstbit_lo r21.w, r20.w
      ishl r26.w, l(1), r21.w
      not r26.w, r26.w
      and r20.w, r20.w, r26.w
      iadd r21.w, r18.w, r21.w
      imul null, r21.w, r21.w, l(14)
      add r27.xyz, r11.xyzx, -cb10[r21.w + 0].xyzx
      and r26.w, l(0x0000ffff), cb10[r21.w + 7].z
      ubfe r27.w, l(6), l(25), cb10[r21.w + 7].z
      imul null, r28.x, r26.w, l(6)
      dp3 r28.y, cb11[r28.x + 0].xyzx, r27.xyzx
      add_sat r28.y, r28.y, cb11[r28.x + 0].w
      dp3 r28.z, cb11[r28.x + 1].xyzx, r27.xyzx
      add_sat r28.z, r28.z, cb11[r28.x + 1].w
      mul r28.y, r28.z, r28.y
      dp3 r28.z, cb11[r28.x + 2].xyzx, r27.xyzx
      add_sat r28.z, r28.z, cb11[r28.x + 2].w
      mul r28.y, r28.z, r28.y
      dp3 r28.z, cb11[r28.x + 3].xyzx, r27.xyzx
      add_sat r28.z, r28.z, cb11[r28.x + 3].w
      mul r28.y, r28.z, r28.y
      dp3 r28.z, cb11[r28.x + 4].xyzx, r27.xyzx
      add_sat r28.z, r28.z, cb11[r28.x + 4].w
      mul r28.y, r28.z, r28.y
      dp3 r28.z, cb11[r28.x + 5].xyzx, r27.xyzx
      add_sat r28.x, r28.z, cb11[r28.x + 5].w
      mul r17.x, r28.x, r28.y
      and r28.x, l(1), cb10[r21.w + 6].x
      movc r28.xy, r28.xxxx, r17.xyxx, r17.zxzz
      mov r17.x, cb10[r21.w + 6].x
      mov r29.xy, r28.xyxx
      mov r28.z, l(1)
      loop 
        ige r28.w, r28.z, r27.w
        breakc_nz r28.w
        iadd r28.w, r26.w, r28.z
        imul null, r28.w, r28.w, l(6)
        dp3 r29.z, cb11[r28.w + 0].xyzx, r27.xyzx
        add_sat r29.z, r29.z, cb11[r28.w + 0].w
        mul r29.z, r29.z, r29.x
        dp3 r29.w, cb11[r28.w + 1].xyzx, r27.xyzx
        add_sat r29.w, r29.w, cb11[r28.w + 1].w
        mul r29.z, r29.w, r29.z
        dp3 r29.w, cb11[r28.w + 2].xyzx, r27.xyzx
        add_sat r29.w, r29.w, cb11[r28.w + 2].w
        mul r29.z, r29.w, r29.z
        dp3 r29.w, cb11[r28.w + 3].xyzx, r27.xyzx
        add_sat r29.w, r29.w, cb11[r28.w + 3].w
        mul r29.z, r29.w, r29.z
        dp3 r29.w, cb11[r28.w + 4].xyzx, r27.xyzx
        add_sat r29.w, r29.w, cb11[r28.w + 4].w
        mul r29.z, r29.w, r29.z
        dp3 r29.w, cb11[r28.w + 5].xyzx, r27.xyzx
        add_sat r28.w, r29.w, cb11[r28.w + 5].w
        mul r29.x, r28.w, r29.z
        ushr r29.w, r17.x, l(2)
        ubfe r30.x, l(1), l(2), r17.x
        and r30.y, r29.w, l(2)
        max r30.z, r29.x, r29.y
        mad r28.w, -r29.z, r28.w, l(1.000000)
        mul r28.w, r28.w, r29.y
        movc r19.y, r30.y, r28.w, r30.z
        movc r29.xy, r30.xxxx, r29.xyxx, r19.xyxx
        iadd r28.z, r28.z, l(1)
        mov r17.x, r29.w
      endloop 
      add_sat r17.x, -r19.w, r29.y
      mul r19.y, r17.x, cb10[r21.w + 6].y
      lt r26.w, l(0.000000), r19.y
      if_nz r26.w
        mad r25.w, r17.x, cb10[r21.w + 6].y, r25.w
        mul r17.x, r19.y, cb10[r21.w + 7].y
        mov r28.x, cb10[r21.w + 7].w
        mov r28.yz, cb10[r21.w + 8].xxyx
        dp3 r19.y, r16.xyzx, r28.xyzx
        dp3 r26.w, r27.xyzx, r28.xyzx
        add r26.w, r26.w, -cb10[r21.w + 8].z
        ge r27.w, r26.w, l(0.000000)
        max r26.w, r13.w, |r26.w|
        movc r26.w, r27.w, r26.w, -r26.w
        max r19.y, -r19.y, l(0.00000010)
        div r19.y, r26.w, r19.y
        min r19.y, |r19.y|, l(131072.000000)
        mov r28.x, cb10[r21.w + 8].w
        mov r28.yz, cb10[r21.w + 9].xxyx
        dp3 r26.w, r16.xyzx, r28.xyzx
        dp3 r27.w, r27.xyzx, r28.xyzx
        add r27.w, r27.w, -cb10[r21.w + 9].z
        ge r28.x, r27.w, l(0.000000)
        max r27.w, r13.w, |r27.w|
        movc r27.w, r28.x, r27.w, -r27.w
        max r26.w, -r26.w, l(0.00000010)
        div r26.w, r27.w, r26.w
        min r19.y, r19.y, |r26.w|
        mov r28.x, cb10[r21.w + 9].w
        mov r28.yz, cb10[r21.w + 10].xxyx
        dp3 r26.w, r16.xyzx, r28.xyzx
        dp3 r27.w, r27.xyzx, r28.xyzx
        add r27.w, r27.w, -cb10[r21.w + 10].z
        ge r28.x, r27.w, l(0.000000)
        max r27.w, r13.w, |r27.w|
        movc r27.w, r28.x, r27.w, -r27.w
        max r26.w, -r26.w, l(0.00000010)
        div r26.w, r27.w, r26.w
        min r19.y, r19.y, |r26.w|
        mov r28.x, cb10[r21.w + 10].w
        mov r28.yz, cb10[r21.w + 11].xxyx
        dp3 r26.w, r16.xyzx, r28.xyzx
        dp3 r27.w, r27.xyzx, r28.xyzx
        add r27.w, r27.w, -cb10[r21.w + 11].z
        ge r28.x, r27.w, l(0.000000)
        max r27.w, r13.w, |r27.w|
        movc r27.w, r28.x, r27.w, -r27.w
        max r26.w, -r26.w, l(0.00000010)
        div r26.w, r27.w, r26.w
        min r19.y, r19.y, |r26.w|
        mov r28.x, cb10[r21.w + 11].w
        mov r28.yz, cb10[r21.w + 12].xxyx
        dp3 r26.w, r16.xyzx, r28.xyzx
        dp3 r27.w, r27.xyzx, r28.xyzx
        add r27.w, r27.w, -cb10[r21.w + 12].z
        ge r28.x, r27.w, l(0.000000)
        max r27.w, r13.w, |r27.w|
        movc r27.w, r28.x, r27.w, -r27.w
        max r26.w, -r26.w, l(0.00000010)
        div r26.w, r27.w, r26.w
        min r19.y, r19.y, |r26.w|
        mov r28.x, cb10[r21.w + 12].w
        mov r28.yz, cb10[r21.w + 13].xxyx
        dp3 r26.w, r16.xyzx, r28.xyzx
        dp3 r27.w, r27.xyzx, r28.xyzx
        add r27.w, r27.w, -cb10[r21.w + 13].z
        ge r28.x, r27.w, l(0.000000)
        max r27.w, r13.w, |r27.w|
        movc r27.w, r28.x, r27.w, -r27.w
        max r26.w, -r26.w, l(0.00000010)
        div r26.w, r27.w, r26.w
        min r19.y, r19.y, |r26.w|
        add r28.x, r27.x, cb10[r21.w + 3].w
        add r28.yz, r27.yyzy, cb10[r21.w + 4].xxyx
        mad r28.xyz, r16.xyzx, r19.yyyy, r28.xyzx
        dp3 r26.w, r28.xyzx, r28.xyzx
        sqrt r26.w, r26.w
        div r19.y, r19.y, r26.w
        add r19.y, r19.y, r19.y
        sqrt r19.y, r19.y
        mad r19.y, r7.w, l(5.000000), r19.y
        add r19.y, r19.y, l(-0.844800)
        mov r30.x, cb10[r21.w + 0].w
        mov r30.y, cb10[r21.w + 1].z
        mov r30.z, cb10[r21.w + 2].y
        dp3 r31.x, r28.xyzx, r30.xyzx
        mov r32.xy, cb10[r21.w + 1].xwxx
        mov r32.z, cb10[r21.w + 2].z
        dp3 r31.y, r28.xyzx, r32.xyzx
        mov r33.x, cb10[r21.w + 1].y
        mov r33.yz, cb10[r21.w + 2].xxwx
        dp3 r31.z, r28.xyzx, r33.xyzx
        ubfe r26.w, l(9), l(16), cb10[r21.w + 7].z
        utof r31.w, r26.w
        sample_l_indexable(texturecubearray)(float,float,float,float) r28.xyz, r31.xyzw, t8.xyzw, s2, r19.y
        dp3 r34.x, r27.xyzx, r30.xyzx
        dp3 r34.y, r27.xyzx, r32.xyzx
        dp3 r34.z, r27.xyzx, r33.xyzx
        mad_sat r27.xyz, r34.xyzx, cb10[r21.w + 3].xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
        mul r34.xy, r27.xyxx, cb10[r21.w + 4].zwzz
        mul r34.z, r27.z, cb10[r21.w + 5].x
        add r27.xyz, r34.xyzx, cb10[r21.w + 5].yzwy
        dp3 r31.x, r12.xyzx, r30.xyzx
        dp3 r31.y, r12.xyzx, r32.xyzx
        dp3 r31.z, r12.xyzx, r33.xyzx
        lt r29.xzw, l(0.000000, 0.000000, 0.000000, 0.000000), r31.xxyz
        movc r18.z, r29.x, l(0), l(0.500000)
        add r30.xyz, r18.xyzx, r27.xyzx
        sample_l_indexable(texture3d)(float,float,float,float) r30.xyz, r30.xyzx, t17.xyzw, s4, l(0.000000)
        mul r32.xyz, r31.xyzx, r31.xyzx
        mul r32.xyz, r17.xxxx, r32.xyzx
        movc r20.z, r29.z, l(0), l(0.500000)
        add r33.xyz, r20.xyzx, r27.xyzx
        sample_l_indexable(texture3d)(float,float,float,float) r33.xyz, r33.xyzx, t18.xyzw, s4, l(0.000000)
        mul r33.xyz, r32.yyyy, r33.xyzx
        mad r30.xyz, r30.xyzx, r32.xxxx, r33.xyzx
        movc r21.z, r29.w, l(0), l(0.500000)
        add r27.xyz, r21.xyzx, r27.xyzx
        sample_l_indexable(texture3d)(float,float,float,float) r27.xyz, r27.xyzx, t19.xyzw, s4, l(0.000000)
        mad r27.xyz, r27.xyzx, r32.zzzz, r30.xyzx
        sample_l_indexable(texturecubearray)(float,float,float,float) r29.xzw, r31.xyzw, t8.xwyz, s2, l(6.000000)
        mul r30.xyz, r27.xyzx, r29.xzwx
        dp3 r18.z, r30.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
        mad r26.xyz, r27.xyzx, r29.xzwx, r26.xyzx
        mul r19.y, r14.y, r18.z
        mul r27.xyz, r17.xxxx, r28.xyzx
        dp3 r17.x, r27.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
        mad r17.x, r14.y, r18.z, r17.x
        div r17.x, r19.y, r17.x
        mad r25.xyz, r27.xyzx, r17.xxxx, r25.xyzx
      endif 
    endloop 
    mov r24.xyzw, r25.xyzw
    mov r15.yzw, r26.xxyz
    iadd r18.w, r18.w, l(32)
  endloop 
  mov r23.xyzw, r24.zxyw
  mov r22.xyz, r15.yzwy
  mov r23.xyzw, r23.yzxw
else 
  mov r23.x, r22.w
endif 
max r0.y, r23.w, l(1.000000)
rcp r0.y, r0.y
mov_sat r23.w, r23.w
mul r14.yzw, r0.yyyy, r22.xxyz
mul r15.yzw, r0.yyyy, r23.xxyz
lt r0.z, r23.w, l(0.990000)
if_nz r0.z
  add r0.z, -r23.w, l(1.000000)
  mul r7.w, r0.z, cb2[19].x
  add r17.xyz, r11.xyzx, -cb2[35].xyzx
  mul r18.x, r17.x, cb2[35].w
  mul r18.yz, r17.yyzy, cb2[36].xxyx
  add_sat r17.xyz, r18.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mul r18.xy, r17.xyxx, cb2[36].zwzz
  mul r18.z, r17.z, cb2[37].x
  add r17.xyz, r18.xyzx, cb2[37].yzwy
  lt r18.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r12.xyzx
  movc r18.xyz, r18.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
  mov r18.w, l(0)
  add r19.xyz, r17.xyzx, r18.wwxw
  sample_l_indexable(texture3d)(float,float,float,float) r19.xyz, r19.xyzx, t17.xyzw, s4, l(0.000000)
  mul r20.xyz, r12.xyzx, r12.xyzx
  mul r20.xyz, r7.wwww, r20.xyzx
  add r21.xyz, r17.xyzx, r18.wwyw
  sample_l_indexable(texture3d)(float,float,float,float) r21.xyz, r21.xyzx, t18.xyzw, s4, l(0.000000)
  mul r21.xyz, r20.yyyy, r21.xyzx
  mad r19.xyz, r19.xyzx, r20.xxxx, r21.xyzx
  add r17.xyz, r17.xyzx, r18.wwzw
  sample_l_indexable(texture3d)(float,float,float,float) r17.xyz, r17.xyzx, t19.xyzw, s4, l(0.000000)
  mad r17.xyz, r17.xyzx, r20.zzzz, r19.xyzx
  mov r12.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r18.xyz, r12.xyzw, t8.xyzw, s2, l(6.000000)
  mul r17.xyz, r17.xyzx, r18.xyzx
  dp3 r7.w, r17.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  mad r14.yzw, r22.xxyz, r0.yyyy, r17.xxyz
  mov r16.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r17.xyz, r16.xyzw, t8.xyzw, s2, r9.w
  mad r0.y, cb2[19].x, r0.z, -r7.w
  mad r0.y, r2.y, r0.y, r7.w
  mad r15.yzw, r17.xxyz, r0.yyyy, r15.yyzw
endif 
add r0.y, -r3.y, l(1.000000)
mad r10.yzw, r15.yyzw, r0.yyyy, r10.yyzw
mad r0.y, r5.z, r2.z, r2.x
log r0.y, |r0.y|
mul r0.y, r0.y, r1.w
exp r0.y, r0.y
mad r0.y, r5.z, r2.z, r0.y
add_sat r0.y, r0.y, l(-1.000000)
mul r0.y, r3.w, r0.y
mul r17.xyz, r2.wwww, r14.yzwy
and r18.xyz, r3.xxxx, r17.yzxy
mad r2.yz, r2.xxyx, l(0.000000, 0.984375, 0.984375, 0.000000), l(0.000000, 0.00781250, 0.00781250, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r2.yz, r2.yzyy, t5.zxyw, s2, l(0.000000)
mul r10.yzw, r0.yyyy, r10.yyzw
mul r15.yzw, r2.yyyy, r10.yyzw
mul r19.xyz, r2.zzzz, r10.yzwy
sqrt r0.y, r1.w
mad r0.y, r0.y, l(0.500000), l(0.500000)
mul r0.y, r0.y, r0.y
mul r0.z, r0.y, l(0.500000)
mad r0.y, -r0.y, l(0.500000), l(1.000000)
mad r2.y, r2.x, r0.y, r0.z
mul r0.yz, r0.yyzy, r2.yyyy
lt r2.y, l(0.000000), r6.w
if_nz r2.y
  lt r2.y, l(0.000000), r8.w
  if_nz r2.y
    mul r2.y, r1.z, cb2[18].w
    mul r2.y, r4.w, r2.y
    if_nz cb2[23].x
      add r20.xyz, r11.xyzx, cb1[24].xyzx
      mov r20.w, l(1.000000)
      dp4 r2.z, cb2[24].xyzw, r20.xyzw
      dp4 r3.y, cb2[25].xyzw, r20.xyzw
      frc r20.x, r2.z
      frc r20.y, r3.y
      iadd r2.z, l(-1), cb2[23].x
      utof r20.z, r2.z
      sample_l_indexable(texture2darray)(float,float,float,float) r10.yzw, r20.xyzx, t20.wxyz, s2, l(0.000000)
      add r10.yzw, r10.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
      mad r10.yzw, cb2[23].yyyy, r10.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
      mul r10.yzw, r10.yyzw, cb2[18].xxyz
    else 
      mov r10.yzw, cb2[18].xxyz
    endif 
    ushr r2.z, cb2[53].x, l(16)
    ult r3.y, l(0), r2.z
    and r3.y, r10.x, r3.y
    if_nz r3.y
      iadd r2.z, r2.z, cb2[0].x
      imad r2.z, r2.z, l(15), l(-15)
      mad r3.y, |r3.z|, l(-0.200000), l(0.400000)
      lt r3.w, r3.z, l(0.000000)
      and r3.w, r3.w, r3.x
      movc r3.y, r3.w, -r3.y, r3.y
      mad r20.xyz, r12.xyzx, r3.yyyy, r11.xyzx
      mov r21.xyz, cb9[r2.z + 4].yzwy
      mov r21.w, cb9[r2.z + 5].x
      mov r20.w, l(1.000000)
      dp4 r21.x, r21.xyzw, r20.xyzw
      mov r22.xyz, cb9[r2.z + 5].yzwy
      mov r22.w, cb9[r2.z + 6].x
      dp4 r21.y, r22.xyzw, r20.xyzw
      mad r3.yw, r21.xxxy, l(0.000000, 0.500000, 0.000000, -0.500000), l(0.000000, 0.500000, 0.000000, 0.500000)
      add r21.x, r3.y, cb9[r2.z + 9].w
      add r21.y, r3.w, cb9[r2.z + 10].x
      mul r3.yw, r21.xxxy, cb9[r2.z + 9].yyyz
      div r21.xy, cb9[r2.z + 3].yyyy, cb9[r2.z + 8].ywyy
      add r21.zw, -r21.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
      ge r21.zw, r3.yyyw, r21.zzzw
      ge r21.xy, r21.xyxx, r3.ywyy
      or r21.xy, r21.xyxx, r21.zwzz
      or r5.z, r21.y, r21.x
      if_z r5.z
        mov r21.xyz, cb9[r2.z + 6].yzwy
        mov r21.w, cb9[r2.z + 7].x
        dp4 r5.z, r21.xyzw, r20.xyzw
        mov_sat r3.yw, r3.yyyw
        mad r20.x, r3.y, cb9[r2.z + 8].y, cb9[r2.z + 8].z
        mad r20.y, r3.w, cb9[r2.z + 8].w, cb9[r2.z + 9].x
        add r3.y, r5.z, cb9[r2.z + 10].y
        div r3.y, r3.y, cb9[r2.z + 10].z
        max r3.y, r3.y, l(0.00006104)
        and r3.w, l(0x0000ffff), cb9[r2.z + 1].w
        if_nz cb2[58].y
          mov r21.x, -r14.x
          utof r22.z, r3.w
          mov r21.y, r15.x
          mov r21.z, r14.x
          mov r5.z, l(0)
          mov r7.w, l(0)
          loop 
            ige r9.w, r7.w, l(8)
            breakc_nz r9.w
            dp2 r23.x, icb[r7.w + 0].yxyy, r21.xyxx
            dp2 r23.y, icb[r7.w + 0].yxyy, r21.yzyy
            mad r22.xy, r23.xyxx, cb9[r2.z + 3].yyyy, r20.xyxx
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r9.w, r22.xyzx, t9.xxxx, s13, r3.y
            mad r5.z, r9.w, l(0.125000), r5.z
            iadd r7.w, r7.w, l(1)
          endloop 
        else 
          utof r20.z, r3.w
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r5.z, r20.xyzx, t9.xxxx, s13, r3.y
        endif 
        mul r2.z, r5.z, r5.z
        mul r2.z, r5.z, r2.z
      else 
        mov r2.z, l(1.000000)
      endif 
      mul r8.w, r2.z, r8.w
    else 
      and r2.z, cb2[53].x, l(0x0000ffff)
      ult r3.y, l(0), r2.z
      not r3.w, r10.x
      and r3.y, r3.w, r3.y
      if_nz r3.y
        iadd r2.z, r2.z, cb2[0].x
        imad r2.z, r2.z, l(15), l(-15)
        mad r3.y, |r3.z|, l(-0.200000), l(0.400000)
        lt r3.w, r3.z, l(0.000000)
        and r3.w, r3.w, r3.x
        movc r3.y, r3.w, -r3.y, r3.y
        mad r20.xyz, r12.xyzx, r3.yyyy, r11.xyzx
        mov r21.xyz, cb9[r2.z + 4].yzwy
        mov r21.w, cb9[r2.z + 5].x
        mov r20.w, l(1.000000)
        dp4 r21.x, r21.xyzw, r20.xyzw
        mov r22.xyz, cb9[r2.z + 5].yzwy
        mov r22.w, cb9[r2.z + 6].x
        dp4 r21.y, r22.xyzw, r20.xyzw
        mad r3.yw, r21.xxxy, l(0.000000, 0.500000, 0.000000, -0.500000), l(0.000000, 0.500000, 0.000000, 0.500000)
        add r21.x, r3.y, cb9[r2.z + 9].w
        add r21.y, r3.w, cb9[r2.z + 10].x
        mul r3.yw, r21.xxxy, cb9[r2.z + 9].yyyz
        div r21.xy, cb9[r2.z + 3].yyyy, cb9[r2.z + 8].ywyy
        add r21.zw, -r21.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
        ge r21.zw, r3.yyyw, r21.zzzw
        ge r21.xy, r21.xyxx, r3.ywyy
        or r21.xy, r21.xyxx, r21.zwzz
        or r5.z, r21.y, r21.x
        if_z r5.z
          mov r21.xyz, cb9[r2.z + 6].yzwy
          mov r21.w, cb9[r2.z + 7].x
          dp4 r5.z, r21.xyzw, r20.xyzw
          mov_sat r3.yw, r3.yyyw
          mad r20.x, r3.y, cb9[r2.z + 8].y, cb9[r2.z + 8].z
          mad r20.y, r3.w, cb9[r2.z + 8].w, cb9[r2.z + 9].x
          add r3.y, r5.z, cb9[r2.z + 10].y
          div r3.y, r3.y, cb9[r2.z + 10].z
          max r3.y, r3.y, l(0.00006104)
          and r3.w, l(0x0000ffff), cb9[r2.z + 1].w
          if_nz cb2[58].y
            mov r21.x, -r14.x
            utof r22.z, r3.w
            mov r21.y, r15.x
            mov r21.z, r14.x
            mov r5.z, l(0)
            mov r7.w, l(0)
            loop 
              ige r9.w, r7.w, l(8)
              breakc_nz r9.w
              dp2 r23.x, icb[r7.w + 0].yxyy, r21.xyxx
              dp2 r23.y, icb[r7.w + 0].yxyy, r21.yzyy
              mad r22.xy, r23.xyxx, cb9[r2.z + 3].yyyy, r20.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r9.w, r22.xyzx, t9.xxxx, s13, r3.y
              mad r5.z, r9.w, l(0.125000), r5.z
              iadd r7.w, r7.w, l(1)
            endloop 
          else 
            utof r20.z, r3.w
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r5.z, r20.xyzx, t9.xxxx, s13, r3.y
          endif 
          mul r2.z, r5.z, r5.z
          mul r2.z, r5.z, r2.z
        else 
          mov r2.z, l(1.000000)
        endif 
        mul r8.w, r2.z, r8.w
      endif 
    endif 
    mad r2.z, -r2.x, l(0.500000), l(1.000000)
    mad r2.z, -r6.w, r2.z, l(1.000000)
    mul r2.z, r2.z, r2.z
    mad r2.z, -r2.z, l(0.620000), l(0.620000)
    add r2.z, -r6.w, r2.z
    mad r2.z, r1.w, r2.z, r6.w
    mul r2.z, r8.w, r2.z
    mul r20.xyz, r10.yzwy, r2.zzzz
    lt r3.y, l(0.000000), r3.z
    mad r20.xyz, r14.yzwy, r2.wwww, r20.xyzx
    mad r14.yzw, -r11.xxyz, r0.wwww, cb2[17].xxyz
    dp3 r0.w, r14.yzwy, r14.yzwy
    rsq r0.w, r0.w
    mul r14.yzw, r0.wwww, r14.yyzw
    dp3 r0.w, r14.yzwy, r13.xyzx
    dp3 r2.w, r12.xyzx, r14.yzwy
    mad r3.z, |r2.w|, r1.z, -|r2.w|
    mad r2.w, |r2.w|, r3.z, l(1.000000)
    mad r3.z, r4.w, r0.y, r0.z
    mul r2.w, r2.w, r2.w
    mul r2.w, r3.z, r2.w
    rcp r2.w, r2.w
    mul r2.y, r2.y, r2.w
    mul r2.y, r2.y, r8.w
    mul r2.y, r2.y, l(0.250000)
    mad r21.yzw, r2.yyyy, r10.yyzw, r19.xxyz
    add_sat r0.w, -r0.w, l(1.000000)
    mul r2.w, r0.w, r0.w
    mul r2.w, r2.w, r2.w
    mul r0.w, r0.w, r2.w
    mul r0.w, r0.w, r2.y
    mad r14.yzw, r0.wwww, r10.yyzw, r15.yyzw
    mad r2.yzw, r2.zzzz, r10.yyzw, r18.zzxy
    and r22.xyz, r2.zwyz, r3.xxxx
    mov r20.w, r18.z
    mov r17.w, r22.z
    movc r17.xyzw, r3.yyyy, r20.xyzw, r17.xyzw
    mov r18.zw, r14.yyyz
    mov r22.zw, r15.yyyz
    movc r20.xyzw, r3.yyyy, r18.xyzw, r22.xyzw
    mov r21.x, r14.w
    mov r19.w, r15.w
    movc r19.xyzw, r3.yyyy, r21.yzwx, r19.xyzw
    mov r18.z, r17.w
    mov r18.xy, r20.xyxx
    mov r15.yz, r20.zzwz
    mov r15.w, r19.w
  endif 
endif 
ushr r0.x, r0.x, l(24)
imul null, r0.x, r0.x, l(15)
ubfe r0.w, l(3), l(24), cb9[r0.x + 1].w
switch r0.w
  case l(4)
  lt r0.w, l(0.000000), cb9[r0.x + 6].y
  mov r20.xy, cb9[r0.x + 5].zwzz
  mov r20.z, cb9[r0.x + 6].x
  mad r2.yzw, -r20.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000), cb9[r0.x + 0].xxyz
  add r3.yzw, -r11.xxyz, r2.yyzw
  dp3 r4.w, r20.xyzx, r3.yzwy
  div_sat r5.z, -r4.w, cb9[r0.x + 6].y
  mad r10.yzw, r5.zzzz, r20.xxyz, r2.yyzw
  movc r10.yzw, r0.wwww, r10.yyzw, cb9[r0.x + 0].xxyz
  add r10.yzw, -r11.xxyz, r10.yyzw
  dp3 r6.w, r10.yzwy, r10.yzwy
  rsq r7.w, r6.w
  mul r10.yzw, r7.wwww, r10.yyzw
  dp3 r7.w, r12.xyzx, r10.yzwy
  mov_sat r8.w, r7.w
  movc r8.w, r3.x, |r7.w|, r8.w
  lt r9.w, l(0.000000), r8.w
  if_nz r9.w
    sqrt r9.w, r6.w
    mul r10.y, cb9[r0.x + 3].x, cb9[r0.x + 3].x
    div r6.w, r10.y, r6.w
    min r6.w, r6.w, l(1.000000)
    mad_sat r10.yz, r9.wwww, cb9[r0.x + 2].xxzx, cb9[r0.x + 2].yywy
    mul r14.yz, r10.yyzy, r10.yyzy
    mad r10.yz, r10.yyzy, l(0.000000, -2.000000, -2.000000, 0.000000), l(0.000000, 3.000000, 3.000000, 0.000000)
    mul r10.yz, r10.yyzy, r14.yyzy
    mul r6.w, r6.w, r10.y
    mul r6.w, r10.z, r6.w
    lt r9.w, l(0.000000), r6.w
    if_nz r9.w
      ubfe r9.w, l(3), l(27), cb9[r0.x + 1].w
      ine r9.w, r9.w, l(1)
      if_nz r9.w
        utof r10.yz, r1.yyxy
        dp2 r9.w, r10.yzyy, l(0.06711056, 0.00583715, 0.000000, 0.000000)
        frc r9.w, r9.w
        mul r9.w, r9.w, l(52.982918)
        frc r9.w, r9.w
        mad r9.w, r9.w, l(6.28318548), cb1[70].w
        sincos r21.x, r22.x, r9.w
        mad r9.w, |r7.w|, l(-0.200000), l(0.400000)
        lt r10.y, r7.w, l(0.000000)
        and r10.y, r3.x, r10.y
        movc r9.w, r10.y, -r9.w, r9.w
        mad r10.yzw, r12.xxyz, r9.wwww, r11.xxyz
        add r10.yzw, r10.yyzw, -cb9[r0.x + 4].yyzw
        max r9.w, |r10.w|, |r10.z|
        max r9.w, r9.w, |r10.y|
        div r9.w, cb9[r0.x + 5].x, r9.w
        add r9.w, r9.w, cb9[r0.x + 5].y
        dp3 r12.w, r10.yzwy, r10.yzwy
        rsq r12.w, r12.w
        max r9.w, r9.w, l(0.00006104)
        and r13.w, l(0x0000ffff), cb9[r0.x + 1].w
        mov r23.x, -r14.x
        utof r24.w, r13.w
        mov r23.y, r15.x
        mov r23.z, r14.x
        mov r13.w, l(0)
        mov r14.y, l(0)
        loop 
          ige r14.z, r14.y, l(8)
          breakc_nz r14.z
          dp2 r21.y, icb[r14.y + 0].yxyy, r23.xyxx
          dp2 r21.z, icb[r14.y + 0].yxyy, r23.yzyy
          mul r25.yz, r21.yyzy, cb9[r0.x + 3].yyyy
          mul r25.x, r22.x, r25.y
          mul r25.w, r21.x, r25.y
          mad r24.xyz, r10.yzwy, r12.wwww, r25.xzwx
          sample_c_lz_indexable(texturecubearray)(float,float,float,float) r14.z, r24.xyzw, t10.xxxx, s13, r9.w
          mad r13.w, r14.z, l(0.125000), r13.w
          iadd r14.y, r14.y, l(1)
        endloop 
      else 
        mov r13.w, l(1.000000)
      endif 
      mul r6.w, r6.w, r13.w
      lt r9.w, l(0.000000), r6.w
      if_nz r9.w
        mul r9.w, r1.z, cb9[r0.x + 1].z
        mul r9.w, r9.w, l(0.250000)
        dp3 r10.y, r20.xyzx, r16.xyzx
        dp3 r3.y, r16.xyzx, r3.yzwy
        mad r3.z, -r10.y, r10.y, cb9[r0.x + 6].y
        mad r3.y, r10.y, r3.y, -r4.w
        div_sat r3.y, r3.y, r3.z
        div r3.z, r3.z, cb9[r0.x + 6].y
        mul r3.z, r3.z, l(10.000000)
        min r3.z, r3.z, l(1.000000)
        add r3.y, -r5.z, r3.y
        mad r3.y, r3.z, r3.y, r5.z
        mad r2.yzw, r3.yyyy, r20.xxyz, r2.yyzw
        movc r2.yzw, r0.wwww, r2.yyzw, cb9[r0.x + 0].xxyz
        add r2.yzw, -r11.xxyz, r2.yyzw
        dp3 r0.w, r2.yzwy, r2.yzwy
        rsq r0.w, r0.w
        mul r3.yzw, r0.wwww, r2.yyzw
        ubfe r4.w, l(4), l(16), cb9[r0.x + 1].w
        ult r5.z, l(0), r4.w
        and r5.z, r10.x, r5.z
        if_nz r5.z
          iadd r4.w, r4.w, cb2[0].x
          imad r4.w, r4.w, l(15), l(-15)
          mad r5.z, |r7.w|, l(-0.200000), l(0.400000)
          lt r10.y, r7.w, l(0.000000)
          and r10.y, r3.x, r10.y
          movc r5.z, r10.y, -r5.z, r5.z
          mad r16.xyz, r12.xyzx, r5.zzzz, r11.xyzx
          mov r20.xyz, cb9[r4.w + 6].yzwy
          mov r20.w, cb9[r4.w + 7].x
          mov r16.w, l(1.000000)
          dp4 r5.z, r20.xyzw, r16.xyzw
          mov r20.xyz, cb9[r4.w + 7].yzwy
          mov r20.w, cb9[r4.w + 8].x
          dp4 r10.y, r20.xyzw, r16.xyzw
          lt r10.z, r10.y, r5.z
          if_z r10.z
            mov r20.xyz, cb9[r4.w + 4].yzwy
            mov r20.w, cb9[r4.w + 5].x
            dp4 r20.x, r20.xyzw, r16.xyzw
            mov r21.xyz, cb9[r4.w + 5].yzwy
            mov r21.w, cb9[r4.w + 6].x
            dp4 r20.y, r21.xyzw, r16.xyzw
            div r14.yz, r20.xxyx, r10.yyyy
            mad r14.yz, r14.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
            add r16.x, r14.y, cb9[r4.w + 9].w
            add r16.y, r14.z, cb9[r4.w + 10].x
            mul r14.yz, r16.xxyx, cb9[r4.w + 9].yyzy
            div r16.xy, cb9[r4.w + 3].yyyy, cb9[r4.w + 8].ywyy
            add r16.zw, -r16.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
            ge r16.zw, r14.yyyz, r16.zzzw
            ge r16.xy, r16.xyxx, r14.yzyy
            or r16.xy, r16.xyxx, r16.zwzz
            or r10.w, r16.y, r16.x
            if_z r10.w
              mov_sat r14.yz, r14.yyzy
              mad r16.x, r14.y, cb9[r4.w + 8].y, cb9[r4.w + 8].z
              mad r16.y, r14.z, cb9[r4.w + 8].w, cb9[r4.w + 9].x
              mul r12.w, r10.y, cb9[r4.w + 10].z
              mad r5.z, cb9[r4.w + 10].y, r10.y, r5.z
              div r5.z, r5.z, r12.w
            endif 
          else 
            mov r10.w, l(-1)
          endif 
          or r10.y, r10.z, r10.w
          if_z r10.y
            max r5.z, r5.z, l(0.00006104)
            and r10.y, l(0x0000ffff), cb9[r4.w + 1].w
            if_nz cb2[58].y
              mov r20.x, -r14.x
              utof r21.z, r10.y
              mov r20.y, r15.x
              mov r20.z, r14.x
              mov r10.zw, l(0,0,0,0)
              loop 
                ige r12.w, r10.w, l(8)
                breakc_nz r12.w
                dp2 r22.x, icb[r10.w + 0].yxyy, r20.xyxx
                dp2 r22.y, icb[r10.w + 0].yxyy, r20.yzyy
                mad r21.xy, r22.xyxx, cb9[r4.w + 3].yyyy, r16.xyxx
                sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.w, r21.xyzx, t9.xxxx, s13, r5.z
                mad r10.z, r12.w, l(0.125000), r10.z
                iadd r10.w, r10.w, l(1)
              endloop 
            else 
              utof r16.z, r10.y
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.z, r16.xyzx, t9.xxxx, s13, r5.z
            endif 
            mul r4.w, r10.z, r10.z
            mul r4.w, r10.z, r4.w
          else 
            mov r4.w, l(1.000000)
          endif 
          mul r6.w, r4.w, r6.w
        else 
          ubfe r4.w, l(4), l(20), cb9[r0.x + 1].w
          ult r5.z, l(0), r4.w
          not r10.y, r10.x
          and r5.z, r5.z, r10.y
          if_nz r5.z
            iadd r4.w, r4.w, cb2[0].x
            imad r4.w, r4.w, l(15), l(-15)
            mad r5.z, |r7.w|, l(-0.200000), l(0.400000)
            lt r10.y, r7.w, l(0.000000)
            and r10.y, r3.x, r10.y
            movc r5.z, r10.y, -r5.z, r5.z
            mad r16.xyz, r12.xyzx, r5.zzzz, r11.xyzx
            mov r20.xyz, cb9[r4.w + 6].yzwy
            mov r20.w, cb9[r4.w + 7].x
            mov r16.w, l(1.000000)
            dp4 r5.z, r20.xyzw, r16.xyzw
            mov r20.xyz, cb9[r4.w + 7].yzwy
            mov r20.w, cb9[r4.w + 8].x
            dp4 r10.y, r20.xyzw, r16.xyzw
            lt r10.z, r10.y, r5.z
            if_z r10.z
              mov r20.xyz, cb9[r4.w + 4].yzwy
              mov r20.w, cb9[r4.w + 5].x
              dp4 r20.x, r20.xyzw, r16.xyzw
              mov r21.xyz, cb9[r4.w + 5].yzwy
              mov r21.w, cb9[r4.w + 6].x
              dp4 r20.y, r21.xyzw, r16.xyzw
              div r14.yz, r20.xxyx, r10.yyyy
              mad r14.yz, r14.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
              add r16.x, r14.y, cb9[r4.w + 9].w
              add r16.y, r14.z, cb9[r4.w + 10].x
              mul r14.yz, r16.xxyx, cb9[r4.w + 9].yyzy
              div r16.xy, cb9[r4.w + 3].yyyy, cb9[r4.w + 8].ywyy
              add r16.zw, -r16.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
              ge r16.zw, r14.yyyz, r16.zzzw
              ge r16.xy, r16.xyxx, r14.yzyy
              or r16.xy, r16.xyxx, r16.zwzz
              or r10.w, r16.y, r16.x
              if_z r10.w
                mov_sat r14.yz, r14.yyzy
                mad r16.x, r14.y, cb9[r4.w + 8].y, cb9[r4.w + 8].z
                mad r16.y, r14.z, cb9[r4.w + 8].w, cb9[r4.w + 9].x
                mul r12.w, r10.y, cb9[r4.w + 10].z
                mad r5.z, cb9[r4.w + 10].y, r10.y, r5.z
                div r5.z, r5.z, r12.w
              endif 
            else 
              mov r10.w, l(-1)
            endif 
            or r10.y, r10.z, r10.w
            if_z r10.y
              max r5.z, r5.z, l(0.00006104)
              and r10.y, l(0x0000ffff), cb9[r4.w + 1].w
              if_nz cb2[58].y
                mov r20.x, -r14.x
                utof r21.z, r10.y
                mov r20.y, r15.x
                mov r20.z, r14.x
                mov r10.zw, l(0,0,0,0)
                loop 
                  ige r12.w, r10.w, l(8)
                  breakc_nz r12.w
                  dp2 r22.x, icb[r10.w + 0].yxyy, r20.xyxx
                  dp2 r22.y, icb[r10.w + 0].yxyy, r20.yzyy
                  mad r21.xy, r22.xyxx, cb9[r4.w + 3].yyyy, r16.xyxx
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.w, r21.xyzx, t9.xxxx, s13, r5.z
                  mad r10.z, r12.w, l(0.125000), r10.z
                  iadd r10.w, r10.w, l(1)
                endloop 
              else 
                utof r16.z, r10.y
                sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.z, r16.xyzx, t9.xxxx, s13, r5.z
              endif 
              mul r4.w, r10.z, r10.z
              mul r4.w, r10.z, r4.w
            else 
              mov r4.w, l(1.000000)
            endif 
            mul r6.w, r4.w, r6.w
          endif 
        endif 
        mad r4.w, -r2.x, l(0.500000), l(1.000000)
        mad r4.w, -r8.w, r4.w, l(1.000000)
        mul r4.w, r4.w, r4.w
        mad r4.w, -r4.w, l(0.620000), l(0.620000)
        add r4.w, -r8.w, r4.w
        mad r4.w, r1.w, r4.w, r8.w
        mul r4.w, r6.w, r4.w
        mov r16.x, cb9[r0.x + 0].w
        mov r16.yz, cb9[r0.x + 1].xxyx
        lt r5.z, l(0.000000), r7.w
        mad r10.yzw, r4.wwww, r16.xxyz, r17.xxyz
        dp3_sat r3.y, r12.xyzx, r3.yzwy
        mad r2.yzw, r2.yyzw, r0.wwww, r13.xxyz
        dp3 r0.w, r2.yzwy, r2.yzwy
        rsq r0.w, r0.w
        mul r2.yzw, r0.wwww, r2.yyzw
        dp3 r0.w, r2.yzwy, r13.xyzx
        dp3 r2.y, r12.xyzx, r2.yzwy
        mad r2.z, |r2.y|, r1.z, -|r2.y|
        mad r2.y, |r2.y|, r2.z, l(1.000000)
        mad r2.z, r3.y, r0.y, r0.z
        mul r2.y, r2.y, r2.y
        mul r2.y, r2.z, r2.y
        rcp r2.y, r2.y
        mul r2.z, r9.w, r3.y
        mul r2.y, r2.z, r2.y
        mul r2.y, r6.w, r2.y
        mad r3.yzw, r2.yyyy, r16.xxyz, r19.xxyz
        add_sat r0.w, -r0.w, l(1.000000)
        mul r2.z, r0.w, r0.w
        mul r2.z, r2.z, r2.z
        mul r0.w, r0.w, r2.z
        mul r0.w, r0.w, r2.y
        mad r2.yzw, r0.wwww, r16.xxyz, r15.yyzw
        mad r14.yzw, r4.wwww, r16.xxyz, r18.zzxy
        movc r14.yzw, r3.xxxx, r14.yyzw, r18.zzxy
        movc r17.xyz, r5.zzzz, r10.yzwy, r17.xyzx
        movc r18.xyz, r5.zzzz, r18.xyzx, r14.zwyz
        movc r15.yzw, r5.zzzz, r2.yyzw, r15.yyzw
        movc r19.xyz, r5.zzzz, r3.yzwy, r19.xyzx
      endif 
    endif 
  endif 
  break 
  case l(2)
  add r16.xy, -r11.xyxx, cb9[r0.x + 3].zwzz
  add r16.z, -r11.z, cb9[r0.x + 4].x
  dp3 r0.w, r16.xyzx, r16.xyzx
  rsq r0.w, r0.w
  mul r2.yzw, r0.wwww, r16.xxyz
  dp3 r2.y, r12.xyzx, r2.yzwy
  mov_sat r2.z, r2.y
  movc r2.w, r3.x, |r2.y|, r2.z
  lt r3.y, l(0.000000), r2.w
  if_nz r3.y
    mov r20.xyz, cb9[r0.x + 7].yzwy
    mov r20.w, cb9[r0.x + 8].x
    mov r11.w, l(1.000000)
    dp4 r3.y, r20.xyzw, r11.xyzw
    lt r3.z, r3.y, l(1.000000)
    if_nz r3.z
      mov r10.yzw, l(0,1.000000,1.000000,1.000000)
      mov r3.z, l(0)
    else 
      add r14.yzw, -r11.xxyz, cb9[r0.x + 0].xxyz
      mul r3.w, cb9[r0.x + 3].x, cb9[r0.x + 3].x
      dp3 r4.w, r14.yzwy, r14.yzwy
      div r3.w, r3.w, r4.w
      min r3.w, r3.w, l(1.000000)
      mad_sat r14.yz, r3.yyyy, cb9[r0.x + 2].xxzx, cb9[r0.x + 2].yywy
      mul r21.xy, r14.yzyy, r14.yzyy
      mad r14.yz, r14.yyzy, l(0.000000, -2.000000, -2.000000, 0.000000), l(0.000000, 3.000000, 3.000000, 0.000000)
      mul r14.yz, r14.yyzy, r21.xxyx
      mul r3.w, r3.w, r14.y
      mul r3.w, r14.z, r3.w
      mov r21.xyz, cb9[r0.x + 4].yzwy
      mov r21.w, cb9[r0.x + 5].x
      dp4 r21.x, r21.xyzw, r11.xyzw
      mov r22.xyz, cb9[r0.x + 5].yzwy
      mov r22.w, cb9[r0.x + 6].x
      dp4 r21.y, r22.xyzw, r11.xyzw
      div r21.xy, r21.xyxx, r3.yyyy
      lt r3.y, cb9[r0.x + 10].w, l(0.00048828)
      if_nz r3.y
        mad_sat r14.yz, |r21.xxyx|, cb9[r0.x + 12].xxyx, cb9[r0.x + 12].zzwz
        mul r22.xy, r14.yzyy, r14.yzyy
        mad r14.yz, r14.yyzy, l(0.000000, -2.000000, -2.000000, 0.000000), l(0.000000, 3.000000, 3.000000, 0.000000)
        mul r14.yz, r14.yyzy, r22.xxyx
        mul r3.y, r14.z, r14.y
      else 
        mul_sat r22.xyzw, |r21.yyxx|, cb9[r0.x + 11].xyzw
        log r22.xyzw, r22.xyzw
        mul r22.xyzw, r22.xyzw, cb9[r0.x + 12].zzzz
        exp r22.xyzw, r22.xyzw
        add r14.yz, r22.zzwz, r22.xxyx
        log r14.yz, r14.yyzy
        mul r14.yz, r14.yyzy, cb9[r0.x + 12].wwww
        exp r14.yz, r14.yyzy
        mul r4.w, r14.y, cb9[r0.x + 12].x
        mad r5.z, cb9[r0.x + 12].y, r14.z, l(-1.000000)
        mad r4.w, cb9[r0.x + 12].y, r14.z, -r4.w
        div_sat r4.w, r5.z, r4.w
        mul r5.z, r4.w, r4.w
        mad r4.w, r4.w, l(-2.000000), l(3.000000)
        mul r3.y, r4.w, r5.z
      endif 
      mul r3.z, r3.y, r3.w
      and r3.y, l(255), cb9[r0.x + 14].w
      if_nz r3.y
        mov r21.z, l(1.000000)
        dp3 r3.w, cb9[r0.x + 13].xyzx, r21.xyzx
        mov r22.x, cb9[r0.x + 13].w
        mov r22.yz, cb9[r0.x + 14].xxyx
        dp3 r4.w, r22.xyzx, r21.xyzx
        frc r21.x, r3.w
        frc r21.y, r4.w
        iadd r3.y, r3.y, l(-1)
        utof r21.z, r3.y
        sample_l_indexable(texture2darray)(float,float,float,float) r10.yzw, r21.xyzx, t20.wxyz, s2, l(0.000000)
      else 
        mov r10.yzw, l(0,1.000000,1.000000,1.000000)
      endif 
    endif 
    mov r21.x, cb9[r0.x + 0].w
    mov r21.yz, cb9[r0.x + 1].xxyx
    mul r10.yzw, r10.yyzw, r21.xxyz
    lt r3.y, l(0.000000), r3.z
    if_nz r3.y
      ubfe r3.y, l(3), l(27), cb9[r0.x + 1].w
      ine r3.y, r3.y, l(1)
      if_nz r3.y
        mad r3.y, |r2.y|, l(-0.200000), l(0.400000)
        lt r3.w, r2.y, l(0.000000)
        and r3.w, r3.w, r3.x
        movc r3.y, r3.w, -r3.y, r3.y
        mad r21.xyz, r12.xyzx, r3.yyyy, r11.xyzx
        mov r22.xyz, cb9[r0.x + 6].yzwy
        mov r22.w, cb9[r0.x + 7].x
        mov r21.w, l(1.000000)
        dp4 r3.y, r22.xyzw, r21.xyzw
        dp4 r3.w, r20.xyzw, r21.xyzw
        ge r4.w, r3.w, r3.y
        if_nz r4.w
          mov r20.xyz, cb9[r0.x + 4].yzwy
          mov r20.w, cb9[r0.x + 5].x
          dp4 r20.x, r20.xyzw, r21.xyzw
          mov r22.xyz, cb9[r0.x + 5].yzwy
          mov r22.w, cb9[r0.x + 6].x
          dp4 r20.y, r22.xyzw, r21.xyzw
          div r14.yz, r20.xxyx, r3.wwww
          mad_sat r14.yz, r14.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
          mad r20.x, r14.y, cb9[r0.x + 8].y, cb9[r0.x + 8].z
          mad r20.y, r14.z, cb9[r0.x + 8].w, cb9[r0.x + 9].x
          div r3.y, r3.y, r3.w
          max r3.y, r3.y, l(0.00006104)
          and r3.w, l(0x0000ffff), cb9[r0.x + 1].w
          if_nz cb2[58].y
            mov r21.x, -r14.x
            utof r22.z, r3.w
            mov r21.y, r15.x
            mov r21.z, r14.x
            mov r4.w, l(0)
            mov r5.z, l(0)
            loop 
              ige r6.w, r5.z, l(8)
              breakc_nz r6.w
              dp2 r23.x, icb[r5.z + 0].yxyy, r21.xyxx
              dp2 r23.y, icb[r5.z + 0].yxyy, r21.yzyy
              mad r22.xy, r23.xyxx, cb9[r0.x + 3].yyyy, r20.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r6.w, r22.xyzx, t9.xxxx, s13, r3.y
              mad r4.w, r6.w, l(0.125000), r4.w
              iadd r5.z, r5.z, l(1)
            endloop 
          else 
            utof r20.z, r3.w
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r4.w, r20.xyzx, t9.xxxx, s13, r3.y
          endif 
          mul r3.y, r4.w, r4.w
          mul r3.y, r4.w, r3.y
        else 
          mov r3.y, l(1.000000)
        endif 
      else 
        mov r3.y, l(1.000000)
      endif 
      mul r3.y, r3.y, r3.z
      lt r3.z, l(0.000000), r3.y
      if_nz r3.z
        mul r3.z, r1.z, cb9[r0.x + 1].z
        mul r3.z, r2.z, r3.z
        ubfe r3.w, l(4), l(16), cb9[r0.x + 1].w
        ult r4.w, l(0), r3.w
        and r4.w, r10.x, r4.w
        if_nz r4.w
          iadd r3.w, r3.w, cb2[0].x
          imad r3.w, r3.w, l(15), l(-15)
          mad r4.w, |r2.y|, l(-0.200000), l(0.400000)
          lt r5.z, r2.y, l(0.000000)
          and r5.z, r3.x, r5.z
          movc r4.w, r5.z, -r4.w, r4.w
          mad r20.xyz, r12.xyzx, r4.wwww, r11.xyzx
          mov r21.xyz, cb9[r3.w + 6].yzwy
          mov r21.w, cb9[r3.w + 7].x
          mov r20.w, l(1.000000)
          dp4 r4.w, r21.xyzw, r20.xyzw
          mov r21.xyz, cb9[r3.w + 7].yzwy
          mov r21.w, cb9[r3.w + 8].x
          dp4 r5.z, r21.xyzw, r20.xyzw
          lt r6.w, r5.z, r4.w
          if_z r6.w
            mov r21.xyz, cb9[r3.w + 4].yzwy
            mov r21.w, cb9[r3.w + 5].x
            dp4 r21.x, r21.xyzw, r20.xyzw
            mov r22.xyz, cb9[r3.w + 5].yzwy
            mov r22.w, cb9[r3.w + 6].x
            dp4 r21.y, r22.xyzw, r20.xyzw
            div r14.yz, r21.xxyx, r5.zzzz
            mad r14.yz, r14.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
            add r20.x, r14.y, cb9[r3.w + 9].w
            add r20.y, r14.z, cb9[r3.w + 10].x
            mul r14.yz, r20.xxyx, cb9[r3.w + 9].yyzy
            div r20.xy, cb9[r3.w + 3].yyyy, cb9[r3.w + 8].ywyy
            add r20.zw, -r20.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
            ge r20.zw, r14.yyyz, r20.zzzw
            ge r20.xy, r20.xyxx, r14.yzyy
            or r20.xy, r20.xyxx, r20.zwzz
            or r7.w, r20.y, r20.x
            if_z r7.w
              mov_sat r14.yz, r14.yyzy
              mad r20.x, r14.y, cb9[r3.w + 8].y, cb9[r3.w + 8].z
              mad r20.y, r14.z, cb9[r3.w + 8].w, cb9[r3.w + 9].x
              mul r8.w, r5.z, cb9[r3.w + 10].z
              mad r4.w, cb9[r3.w + 10].y, r5.z, r4.w
              div r4.w, r4.w, r8.w
            endif 
          else 
            mov r7.w, l(-1)
          endif 
          or r5.z, r6.w, r7.w
          if_z r5.z
            max r4.w, r4.w, l(0.00006104)
            and r5.z, l(0x0000ffff), cb9[r3.w + 1].w
            if_nz cb2[58].y
              mov r21.x, -r14.x
              utof r22.z, r5.z
              mov r21.y, r15.x
              mov r21.z, r14.x
              mov r6.w, l(0)
              mov r7.w, l(0)
              loop 
                ige r8.w, r7.w, l(8)
                breakc_nz r8.w
                dp2 r23.x, icb[r7.w + 0].yxyy, r21.xyxx
                dp2 r23.y, icb[r7.w + 0].yxyy, r21.yzyy
                mad r22.xy, r23.xyxx, cb9[r3.w + 3].yyyy, r20.xyxx
                sample_c_lz_indexable(texture2darray)(float,float,float,float) r8.w, r22.xyzx, t9.xxxx, s13, r4.w
                mad r6.w, r8.w, l(0.125000), r6.w
                iadd r7.w, r7.w, l(1)
              endloop 
            else 
              utof r20.z, r5.z
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r6.w, r20.xyzx, t9.xxxx, s13, r4.w
            endif 
            mul r3.w, r6.w, r6.w
            mul r3.w, r6.w, r3.w
          else 
            mov r3.w, l(1.000000)
          endif 
          mul r3.y, r3.w, r3.y
        else 
          ubfe r0.x, l(4), l(20), cb9[r0.x + 1].w
          ult r3.w, l(0), r0.x
          not r4.w, r10.x
          and r3.w, r3.w, r4.w
          if_nz r3.w
            iadd r0.x, r0.x, cb2[0].x
            imad r0.x, r0.x, l(15), l(-15)
            mad r3.w, |r2.y|, l(-0.200000), l(0.400000)
            lt r4.w, r2.y, l(0.000000)
            and r4.w, r3.x, r4.w
            movc r3.w, r4.w, -r3.w, r3.w
            mad r20.xyz, r12.xyzx, r3.wwww, r11.xyzx
            mov r21.xyz, cb9[r0.x + 6].yzwy
            mov r21.w, cb9[r0.x + 7].x
            mov r20.w, l(1.000000)
            dp4 r3.w, r21.xyzw, r20.xyzw
            mov r21.xyz, cb9[r0.x + 7].yzwy
            mov r21.w, cb9[r0.x + 8].x
            dp4 r4.w, r21.xyzw, r20.xyzw
            lt r5.z, r4.w, r3.w
            if_z r5.z
              mov r21.xyz, cb9[r0.x + 4].yzwy
              mov r21.w, cb9[r0.x + 5].x
              dp4 r21.x, r21.xyzw, r20.xyzw
              mov r22.xyz, cb9[r0.x + 5].yzwy
              mov r22.w, cb9[r0.x + 6].x
              dp4 r21.y, r22.xyzw, r20.xyzw
              div r14.yz, r21.xxyx, r4.wwww
              mad r14.yz, r14.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
              add r20.x, r14.y, cb9[r0.x + 9].w
              add r20.y, r14.z, cb9[r0.x + 10].x
              mul r14.yz, r20.xxyx, cb9[r0.x + 9].yyzy
              div r20.xy, cb9[r0.x + 3].yyyy, cb9[r0.x + 8].ywyy
              add r20.zw, -r20.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
              ge r20.zw, r14.yyyz, r20.zzzw
              ge r20.xy, r20.xyxx, r14.yzyy
              or r20.xy, r20.xyxx, r20.zwzz
              or r6.w, r20.y, r20.x
              if_z r6.w
                mov_sat r14.yz, r14.yyzy
                mad r20.x, r14.y, cb9[r0.x + 8].y, cb9[r0.x + 8].z
                mad r20.y, r14.z, cb9[r0.x + 8].w, cb9[r0.x + 9].x
                mul r7.w, r4.w, cb9[r0.x + 10].z
                mad r3.w, cb9[r0.x + 10].y, r4.w, r3.w
                div r3.w, r3.w, r7.w
              endif 
            else 
              mov r6.w, l(-1)
            endif 
            or r4.w, r5.z, r6.w
            if_z r4.w
              max r3.w, r3.w, l(0.00006104)
              and r4.w, l(0x0000ffff), cb9[r0.x + 1].w
              if_nz cb2[58].y
                mov r21.x, -r14.x
                utof r22.z, r4.w
                mov r21.y, r15.x
                mov r21.z, r14.x
                mov r5.z, l(0)
                mov r6.w, l(0)
                loop 
                  ige r7.w, r6.w, l(8)
                  breakc_nz r7.w
                  dp2 r14.x, icb[r6.w + 0].yxyy, r21.xyxx
                  dp2 r14.y, icb[r6.w + 0].yxyy, r21.yzyy
                  mad r22.xy, r14.xyxx, cb9[r0.x + 3].yyyy, r20.xyxx
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r7.w, r22.xyzx, t9.xxxx, s13, r3.w
                  mad r5.z, r7.w, l(0.125000), r5.z
                  iadd r6.w, r6.w, l(1)
                endloop 
              else 
                utof r20.z, r4.w
                sample_c_lz_indexable(texture2darray)(float,float,float,float) r5.z, r20.xyzx, t9.xxxx, s13, r3.w
              endif 
              mul r0.x, r5.z, r5.z
              mul r0.x, r5.z, r0.x
            else 
              mov r0.x, l(1.000000)
            endif 
            mul r3.y, r0.x, r3.y
          endif 
        endif 
        mad r0.x, -r2.x, l(0.500000), l(1.000000)
        mad r0.x, -r2.w, r0.x, l(1.000000)
        mul r0.x, r0.x, r0.x
        mad r0.x, -r0.x, l(0.620000), l(0.620000)
        add r0.x, -r2.w, r0.x
        mad r0.x, r1.w, r0.x, r2.w
        mul r0.x, r3.y, r0.x
        lt r1.w, l(0.000000), r2.y
        mad r2.xyw, r0.xxxx, r10.yzyw, r17.xyxz
        mad r14.xyz, r16.xyzx, r0.wwww, r13.xyzx
        dp3 r0.w, r14.xyzx, r14.xyzx
        rsq r0.w, r0.w
        mul r14.xyz, r0.wwww, r14.xyzx
        dp3 r0.w, r14.xyzx, r13.xyzx
        dp3 r3.w, r12.xyzx, r14.xyzx
        mad r1.z, |r3.w|, r1.z, -|r3.w|
        mad r1.z, |r3.w|, r1.z, l(1.000000)
        mad r0.y, r2.z, r0.y, r0.z
        mul r0.z, r1.z, r1.z
        mul r0.y, r0.y, r0.z
        rcp r0.y, r0.y
        mul r0.y, r3.z, r0.y
        mul r0.y, r0.y, r3.y
        mul r0.y, r0.y, l(0.250000)
        mad r3.yzw, r0.yyyy, r10.yyzw, r19.xxyz
        add_sat r0.z, -r0.w, l(1.000000)
        mul r0.w, r0.z, r0.z
        mul r0.w, r0.w, r0.w
        mul r0.z, r0.w, r0.z
        mul r0.y, r0.z, r0.y
        mad r0.yzw, r0.yyyy, r10.yyzw, r15.yyzw
        mad r10.xyz, r0.xxxx, r10.yzwy, r18.zxyz
        movc r10.xyz, r3.xxxx, r10.xyzx, r18.zxyz
        movc r17.xyz, r1.wwww, r2.xywx, r17.xyzx
        movc r18.xyz, r1.wwww, r18.xyzx, r10.yzxy
        movc r15.yzw, r1.wwww, r0.yyzw, r15.yyzw
        movc r19.xyz, r1.wwww, r3.yzwy, r19.xyzx
      endif 
    endif 
  endif 
  break 
  default 
  break 
endswitch 
mad r0.xyz, r5.xwyx, l(1.000000, 3.000000, 2.000000, 0.000000), l(0.000000, 0.500000, -1.000000, 0.000000)
ftou r1.z, r0.y
mad r2.xyz, r6.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r1.w, r2.x
ieq r1.w, r1.z, r1.w
movc r2.xy, r1.wwww, r2.yzyy, l(-1.000000,0,0,0)
mad r3.yzw, r7.zzxy, l(0.000000, 3.000000, 1.000000, 2.000000), l(0.000000, 0.500000, 0.000000, -1.000000)
ftou r1.w, r3.y
ieq r1.w, r1.z, r1.w
movc r2.zw, r1.wwww, r3.zzzw, l(0,0,-1.000000,0)
mad r3.yzw, r8.zzxy, l(0.000000, 3.000000, 1.000000, 2.000000), l(0.000000, 0.500000, 0.000000, -1.000000)
ftou r1.w, r3.y
ieq r1.w, r1.z, r1.w
movc r3.yz, r1.wwww, r3.zzwz, l(0,-1.000000,0,0)
mad r5.xyz, r9.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r1.w, r5.x
ieq r1.z, r1.z, r1.w
movc r1.zw, r1.zzzz, r5.yyyz, l(0,0,-1.000000,0)
mov r5.xy, r2.xzxx
mov r5.z, r3.y
mov r5.w, r1.z
add r5.xyzw, -r0.xxxx, r5.xyzw
ge r5.xyzw, |r5.xyzw|, l(0.00902149, 0.00902149, 0.00902149, 0.00902149)
movc r5.xyzw, r5.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
add r1.z, r5.y, r5.x
add r1.z, r5.z, r1.z
add r1.z, r5.w, r1.z
mul r2.x, r2.w, r5.y
mad r2.x, r5.x, r2.y, r2.x
mad r2.x, r5.z, r3.z, r2.x
mad r1.w, r5.w, r1.w, r2.x
div r0.w, r1.w, r1.z
ge r1.z, l(0.000000), r1.z
movc r0.yz, r1.zzzz, l(0,0,0,0), r0.zzwz
and r1.zw, r1.xxxy, l(0, 0, 1, 1)
ieq r0.w, r1.w, r1.z
movc r0.xyz, r0.wwww, r0.xyzx, r0.xzyx
mad r0.x, -r0.z, l(0.500000), r0.x
add r2.y, r0.x, r0.z
mad r2.z, -r0.y, l(0.500000), r0.x
add r2.x, r0.y, r2.z
mul r0.xyz, r4.xyzx, r17.xyzx
mad r0.xyz, r18.zxyz, r2.xyzx, r0.xyzx
mul r3.yzw, r15.yyzw, l(0.000000, 0.960000, 0.960000, 0.960000)
mad r3.yzw, r19.xxyz, l(0.000000, 0.040000, 0.040000, 0.040000), r3.yyzw
add r0.xyz, r0.xyzx, r3.yzwy
add r3.yzw, -r2.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
mul r3.yzw, r3.yyzw, r15.yyzw
mad r2.xyz, r19.xyzx, r2.xyzx, r3.yzwy
mad r2.xyz, r17.xyzx, r4.xyzx, r2.xyzx
movc r0.xyz, r3.xxxx, r0.xyzx, r2.xyzx
lt r0.w, l(0.000000), cb2[9].z
if_nz r0.w
  dp3 r0.w, r11.xyzx, r11.xyzx
  rsq r1.z, r0.w
  mul r2.xyz, r1.zzzz, r11.xyzx
  sqrt r0.w, r0.w
  lt r1.z, l(0.000000), cb2[13].w
  if_nz r1.z
    mad r1.zw, r0.wwww, cb2[15].xxxy, cb2[14].zzzw
    mul r1.zw, r1.zzzw, cb2[16].xxxy
    lt r2.w, l(0.010000), |r11.z|
    mul r3.xy, r11.zzzz, cb2[15].zwzz
    mul r3.zw, r3.xxxy, l(0.000000, 0.000000, -1.442695, -1.442695)
    exp r3.zw, r3.zzzw
    add r3.zw, -r3.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    div r3.xy, r3.zwzz, r3.xyxx
    mul r3.xy, r1.zwzz, r3.xyxx
    movc r1.zw, r2.wwww, r3.xxxy, r1.zzzw
    mul r3.xyz, r1.zzzz, cb2[12].xyzx
    exp r3.xyz, r3.xyzx
    mul r4.xyz, r1.wwww, cb2[12].xyzx
    exp r4.xyz, r4.xyzx
    add r4.xyz, -r3.xyzx, r4.xyzx
    mad r3.xyz, cb2[13].wwww, r4.xyzx, r3.xyzx
  else 
    mad r1.z, r0.w, cb2[15].x, cb2[14].z
    mul r1.z, r1.z, cb2[16].x
    lt r1.w, l(0.010000), |r11.z|
    mul r2.w, r11.z, cb2[15].z
    mul r3.w, r2.w, l(-1.442695)
    exp r3.w, r3.w
    add r3.w, -r3.w, l(1.000000)
    div r2.w, r3.w, r2.w
    mul r2.w, r1.z, r2.w
    movc r1.z, r1.w, r2.w, r1.z
    mul r4.xyz, r1.zzzz, cb2[12].xyzx
    exp r3.xyz, r4.xyzx
  endif 
  mad r3.xyz, r3.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r3.xyz, r3.xyzx, -cb2[9].zzzz
  dp3 r1.z, cb2[7].yzwy, -r2.xyzx
  mad r1.w, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r2.x, cb2[8].w, -r1.z, l(1.000000)
  mul r2.x, r2.x, r2.x
  mul r2.x, r2.x, l(12.566371)
  div r1.w, r1.w, r2.x
  add r0.w, r0.w, -cb2[10].w
  mul_sat r0.w, r0.w, cb2[11].w
  mul r0.w, r0.w, r1.w
  mov_sat r1.z, r1.z
  mad r1.z, r1.z, r1.z, l(1.000000)
  mad r1.z, r1.z, l(0.05968310), l(-1.000000)
  mad r1.z, cb2[8].z, r1.z, l(1.000000)
  mul r2.xyz, r0.wwww, cb2[11].xyzx
  mad r2.xyz, r1.zzzz, cb2[10].xyzx, r2.xyzx
  mul r2.xyz, r2.xyzx, cb2[9].wwww
  add r4.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r2.xyz, r2.xyzx, r4.xyzx
  mad r2.xyz, r0.xyzx, r3.xyzx, r2.xyzx
else 
  mul r0.w, r11.z, cb2[6].x
  mad r1.z, cb2[6].x, r11.z, cb2[5].x
  lt r1.w, |r0.w|, l(0.000100)
  min r2.w, r1.z, l(64.000000)
  mul r2.w, r2.w, l(1.442695)
  exp r2.w, r2.w
  mov_sat r3.x, cb2[6].z
  lt r3.y, r1.z, l(0.000000)
  add r1.z, r1.z, l(1.000000)
  movc r1.z, r3.y, r2.w, r1.z
  add r1.z, r1.z, -cb2[6].z
  movc r0.w, r1.w, l(1.000000), r0.w
  div r0.w, r1.z, r0.w
  movc r0.w, r1.w, r3.x, r0.w
  mul r0.w, r0.w, cb2[5].z
  dp3 r1.z, r11.xyzx, r11.xyzx
  sqrt r1.w, r1.z
  mad r0.w, r0.w, r1.w, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  rsq r1.z, r1.z
  mul r3.xyz, r1.zzzz, r11.xyzx
  dp3 r1.z, cb2[7].yzwy, r3.xyzx
  mad_sat r1.z, cb2[8].y, r1.z, cb2[8].x
  add r3.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r3.xyzw, r1.zzzz, r3.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r3.w
  add r3.xyz, -r0.xyzx, r3.xyzx
  mad r2.xyz, r0.wwww, r3.xyzx, r0.xyzx
endif 
mul r0.xyzw, r2.xyzx, cb1[85].yyyy
ge r2.xyzw, r0.wyzw, l(0.00006104, 0.00006104, 0.00006104, 0.00006104)
and r0.xyzw, r0.xyzw, r2.xyzw
min r0.xyzw, r0.xyzw, l(65024.000000, 65024.000000, 64512.000000, 65024.000000)
store_uav_typed u0.xyzw, r1.xyyy, r0.xyzw
ret 
// Approximately 2336 instruction slots used
