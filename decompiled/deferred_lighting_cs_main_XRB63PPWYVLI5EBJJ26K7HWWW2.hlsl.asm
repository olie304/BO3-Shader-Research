//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:24:09 2021
//
//
// Buffer Definitions: 
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4
//   uint enableCountDebug;             // Offset:  836 Size:     4
//   uint centerGroupIDx;               // Offset:  840 Size:     4
//   uint centerGroupIDy;               // Offset:  844 Size:     4
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4
//   float drawNumLighstScale;          // Offset:  856 Size:     4
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4
//   uint probeDebug;                   // Offset:  864 Size:     4
//   float probeDebugRadius;            // Offset:  868 Size:     4
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4
//   uint showAO;                       // Offset:  880 Size:     4
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// cbuffer LightingPackCBuffer
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } lightConstantsCB[273];           // Offset:    0 Size: 65520
//
// }
//
// cbuffer RefProbePackCBuffer
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } refProbeConstantsCB[273];        // Offset:    0 Size: 61152
//
// }
//
// cbuffer RefProbeBlendPackCBuffer
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } refProbeAttenuationConstantsCB[682];// Offset:    0 Size: 65472
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for lightingDebug
// {
//
//   struct LightingDebug
//   {
//       
//       struct LightingDebugCounts
//       {
//           
//           uint visibleLights;        // Offset:    0
//           uint activeLights;         // Offset:    4
//           uint litLights;            // Offset:    8
//           uint visibleProbes;        // Offset:   12
//           uint activeProbes;         // Offset:   16
//
//       } maxCounts;                   // Offset:    0
//       
//       struct LightingDebugCounts
//       {
//           
//           uint visibleLights;        // Offset:   20
//           uint activeLights;         // Offset:   24
//           uint litLights;            // Offset:   28
//           uint visibleProbes;        // Offset:   32
//           uint activeProbes;         // Offset:   36
//
//       } centerCounts;                // Offset:   20
//       
//       struct LightingDebugCounts
//       {
//           
//           uint visibleLights;        // Offset:   40
//           uint activeLights;         // Offset:   44
//           uint litLights;            // Offset:   48
//           uint visibleProbes;        // Offset:   52
//           uint activeProbes;         // Offset:   56
//
//       } sumDeferredCounts;           // Offset:   40
//       
//       struct LightingDebugCounts
//       {
//           
//           uint visibleLights;        // Offset:   60
//           uint activeLights;         // Offset:   64
//           uint litLights;            // Offset:   68
//           uint visibleProbes;        // Offset:   72
//           uint activeProbes;         // Offset:   76
//
//       } sumForwardCounts;            // Offset:   60
//       float3 cameraWorldPos;         // Offset:   80
//       float3 pickedWldPos;           // Offset:   92
//       uint numPickedLights;          // Offset:  104
//       uint numPickedProbes;          // Offset:  108
//       
//       struct LightingDebugLight
//       {
//           
//           uint flags;                // Offset:  112
//           float3 wldOrigin;          // Offset:  116
//           float activeAttenuation;   // Offset:  128
//           float litAttenuation;      // Offset:  132
//
//       } pickedLights[32];            // Offset:  112
//       
//       struct LightingDebugProbe
//       {
//           
//           uint flags;                // Offset:  880
//           float3 wldOrigin;          // Offset:  884
//           float weight;              // Offset:  896
//
//       } pickedProbes[32];            // Offset:  880
//       uint overdrawHistogram[64];    // Offset: 1520
//       uint overdrawSum;              // Offset: 1776
//       uint overdrawMax;              // Offset: 1780
//       float padding0;                // Offset: 1784
//       float padding1;                // Offset: 1788
//
//   } $Element;                        // Offset:    0 Size:  1792
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// samplerPointClamp                 sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// GBufferDiffuseColor               texture  float4          2d             t0      1 
// GBufferNormalAndGloss             texture  float4          2d             t1      1 
// GBufferSpecularColorAndOcclusion    texture  float4          2d             t2      1 
// GBufferDepth                      texture   float          2d             t4      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// gDownsampledScene                 texture  float4          2d            t21      1 
// gMotionVectors                    texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// gSSAOTexture                      texture   float          2d            t27      1 
// gSSAODepthTexture                 texture   float          2d            t28      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// litBuffer                             UAV  float3          2d             u0      1 
// lightingDebug                         UAV  struct         r/w             u2      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
// LightingPackCBuffer               cbuffer      NA          NA            cb9      1 
// RefProbePackCBuffer               cbuffer      NA          NA           cb10      1 
// RefProbeBlendPackCBuffer          cbuffer      NA          NA           cb11      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000},
                              { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB1[86], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_constantbuffer CB9[4095], dynamicIndexed
dcl_constantbuffer CB10[3822], dynamicIndexed
dcl_constantbuffer CB11[4092], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s4, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t27
dcl_resource_texture2d (float,float,float,float) t28
dcl_resource_texture2darray (float,float,float,float) t31
dcl_uav_typed_texture2d (float,float,float,float) u0
dcl_uav_structured u2, 1792
dcl_input vThreadIDInGroupFlattened
dcl_input vThreadGroupID.xy
dcl_input vThreadIDInGroup.xy
dcl_temps 46
dcl_tgsm_raw g0, 4
dcl_tgsm_raw g1, 4
dcl_tgsm_structured g2, 12, 8
dcl_tgsm_raw g3, 96
dcl_tgsm_raw g4, 12
dcl_tgsm_raw g5, 12
dcl_tgsm_structured g6, 4, 32
dcl_tgsm_raw g7, 4
dcl_tgsm_raw g8, 20
dcl_tgsm_raw g9, 20
dcl_thread_group 8, 8, 1
if_z vThreadIDInGroupFlattened.x
  store_raw g7.x, l(0), l(0)
  store_raw g8.xyzw, l(0), l(0,0,0,0)
  store_raw g8.x, l(16), l(0)
  store_raw g9.xyzw, l(0), l(0,0,0,0)
  store_raw g9.x, l(16), l(0)
endif 
imad r0.xy, vThreadGroupID.xyxx, l(8, 8, 0, 0), vThreadIDInGroup.xyxx
mov r0.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r1.x, r0.xyww, t4.xyzw
ld_indexable(texture2d)(float,float,float,float) r2.xyzw, r0.xyww, t1.xyzw
ftou r1.yz, cb1[44].xxyx
ult r1.yz, r0.xxyx, r1.yyzy
and r1.w, r1.z, r1.y
lt r3.x, l(0.000000), r1.x
and r1.w, r1.w, r3.x
ge r3.x, r1.x, l(0.984375)
mul r3.z, r1.x, l(1.01587307)
mad r1.x, r1.x, l(64.000000), l(-63.000000)
movc r1.x, r3.x, r1.x, r3.z
max r1.x, r1.x, l(0.00000001)
rcp r3.y, r1.x
and r3.yz, r1.wwww, r3.xxyx
if_z vThreadIDInGroupFlattened.x
  store_raw g0.x, l(0), l(340282346638528859811704183484516925440.000000)
  store_raw g1.x, l(0), l(0)
endif 
sync_g_t
if_nz r1.w
  atomic_umin g0, l(0), r3.z
  add r1.x, r3.z, l(0.001000)
  atomic_umax g1, l(0), r1.x
endif 
sync_g_t
ld_raw r4.x, l(0), g0.xxxx
ld_raw r4.y, l(0), g1.xxxx
ult r4.zw, vThreadIDInGroupFlattened.xxxx, l(0, 0, 8, 6)
if_nz r4.z
  ishl r5.xy, vThreadGroupID.xyxx, l(3, 3, 0, 0)
  and r1.x, vThreadIDInGroupFlattened.x, l(1)
  ubfe r5.zw, l(0, 0, 1, 1), l(0, 0, 1, 2), vThreadIDInGroupFlattened.xxxx
  xor r1.x, r1.x, r5.z
  ishl r1.x, r1.x, l(3)
  iadd r1.x, r1.x, r5.x
  ishl r3.w, r5.z, l(3)
  iadd r3.w, r3.w, r5.y
  dp2 r4.x, r4.xyxx, icb[r5.w + 0].xyxx
  utof r5.x, r1.x
  utof r5.y, r3.w
  add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  add r5.xy, r5.xyxx, -cb1[71].xyxx
  mul r5.xy, r5.xyxx, cb1[44].zwzz
  mad r5.xy, r5.xyxx, l(2.000000, -2.000000, 0.000000, 0.000000), l(-1.000000, 1.000000, 0.000000, 0.000000)
  mov r6.x, cb1[12].x
  mov r6.y, cb1[13].y
  mul r5.xy, r5.xyxx, r6.xyxx
  mov r5.z, l(1.000000)
  mul r5.xyz, r4.xxxx, r5.xyzx
  mul r6.xyz, r5.yyyy, cb1[17].xyzx
  mad r5.xyw, r5.xxxx, cb1[16].xyxz, r6.xyxz
  mad r5.xyz, r5.zzzz, cb1[18].xyzx, r5.xywx
  store_structured g2.xyz, vThreadIDInGroupFlattened.x, l(0), r5.xyzx
endif 
sync_g_t
if_z vThreadIDInGroupFlattened.x
  ld_structured r5.xyz, l(0), l(0), g2.xyzx
  mul r5.xyz, r5.xyzx, l(0.125000, 0.125000, 0.125000, 0.000000)
  ftoi r5.xyz, r5.xyzx
  store_raw g4.xyz, l(0), r5.xyzx
  store_raw g5.xyz, l(0), l(0,0,0,0)
endif 
sync_g_t
ult r1.x, l(0), vThreadIDInGroupFlattened.x
and r1.x, r4.z, r1.x
if_nz r1.x
  ld_structured r5.xyz, vThreadIDInGroupFlattened.x, l(0), g2.xyzx
  mul r5.xyz, r5.xyzx, l(0.125000, 0.125000, 0.125000, 0.000000)
  ftoi r5.xyz, r5.xyzx
  atomic_iadd g4, l(0), r5.x
  atomic_iadd g4, l(4), r5.y
  atomic_iadd g4, l(8), r5.z
endif 
sync_g_t
if_nz r4.z
  ld_structured r4.xyz, vThreadIDInGroupFlattened.x, l(0), g2.xyzx
  ld_raw r5.xyz, l(0), g4.xyzx
  itof r5.xyz, r5.xyzx
  add r4.xyz, r4.xyzx, -r5.xyzx
  mov r4.xyz, |r4.xyzx|
  atomic_umax g5, l(0), r4.x
  atomic_umax g5, l(4), r4.y
  atomic_umax g5, l(8), r4.z
endif 
sync_g_t
ld_raw r4.xyz, l(0), g4.xyzx
itof r4.xyz, r4.xyzx
ld_raw r5.xyz, l(0), g5.xyzx
if_nz r4.w
  ishl r6.xy, vThreadIDInGroupFlattened.xxxx, l(2, 4, 0, 0)
  ushr r6.xzw, l(0x00603210, 0, 0x00517654, 0x00420321), r6.xxxx
  and r6.xzw, r6.xxzw, l(7, 0, 7, 7)
  ld_structured r7.xyz, r6.x, l(0), g2.xyzx
  ld_structured r8.xyz, r6.z, l(0), g2.xyzx
  ld_structured r6.xzw, r6.w, l(0), g2.xxyz
  add r8.xyz, -r7.zxyz, r8.zxyz
  add r6.xzw, -r7.yyzx, r6.zzwx
  mul r9.xyz, r6.xzwx, r8.xyzx
  mad r6.xzw, r8.zzxy, r6.zzwx, -r9.xxyz
  dp3 r1.x, r6.xzwx, r6.xzwx
  rsq r1.x, r1.x
  mul r8.xyz, r1.xxxx, r6.xzwx
  dp3 r1.x, r8.xyzx, r7.xyzx
  mov r8.w, -r1.x
  store_raw g3.xyzw, r6.y, r8.xyzw
endif 
sync_g_t
ld_raw r6.xyzw, l(0), g3.xyzw
ld_raw r7.xyzw, l(16), g3.xyzw
ld_raw r8.xyzw, l(32), g3.xyzw
ld_raw r9.xyzw, l(48), g3.xyzw
ld_raw r10.xyzw, l(64), g3.xyzw
ld_raw r11.xyzw, l(80), g3.xyzw
mov r1.x, vThreadIDInGroupFlattened.x
loop 
  uge r3.w, r1.x, l(32)
  breakc_nz r3.w
  store_structured g6.x, r1.x, l(0), l(0)
  iadd r1.x, r1.x, l(64)
endloop 
sync_g_t
iadd r1.x, cb2[0].y, cb2[0].x
mov r12.y, l(0)
mov r3.w, vThreadIDInGroupFlattened.x
loop 
  uge r4.w, r3.w, r1.x
  breakc_nz r4.w
  ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r13.xyzw, r3.w, l(0), t11.xyzw
  ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r14.xy, r3.w, l(16), t11.xyxx
  add r15.xyz, -r4.xyzx, r13.xyzx
  mov r14.z, r13.w
  add r16.xyz, r5.xyzx, r14.zxyz
  lt r15.xyz, r16.xyzx, |r15.xyzx|
  or r4.w, r15.y, r15.x
  or r4.w, r15.z, r4.w
  if_z r4.w
    dp3 r4.w, r13.xyzx, r6.xyzx
    dp3 r5.w, r14.zxyz, |r6.xyzx|
    add r4.w, r4.w, r5.w
    lt r4.w, r4.w, -r6.w
    not r5.w, r4.w
    dp3 r12.z, r13.xyzx, r7.xyzx
    dp3 r12.w, r14.zxyz, |r7.xyzx|
    add r12.z, r12.w, r12.z
    lt r12.z, r12.z, -r7.w
    or r12.z, r4.w, r12.z
    and r5.w, r5.w, r12.z
    or r4.w, r4.w, r5.w
    dp3 r5.w, r13.xyzx, r8.xyzx
    dp3 r12.z, r14.zxyz, |r8.xyzx|
    add r5.w, r5.w, r12.z
    lt r5.w, r5.w, -r8.w
    or r4.w, r4.w, r5.w
    dp3 r5.w, r13.xyzx, r9.xyzx
    dp3 r12.z, r14.zxyz, |r9.xyzx|
    add r5.w, r5.w, r12.z
    lt r5.w, r5.w, -r9.w
    or r4.w, r4.w, r5.w
    dp3 r5.w, r13.xyzx, r10.xyzx
    dp3 r12.z, r14.zxyz, |r10.xyzx|
    add r5.w, r5.w, r12.z
    lt r5.w, r5.w, -r10.w
    or r4.w, r4.w, r5.w
    dp3 r5.w, r13.xyzx, r11.xyzx
    dp3 r12.z, r14.zxyz, |r11.xyzx|
    add r5.w, r5.w, r12.z
    lt r5.w, r5.w, -r11.w
    or r4.w, r4.w, r5.w
    if_z r4.w
      ult r4.w, r3.w, cb2[0].x
      iadd r5.w, r3.w, -cb2[0].x
      movc r5.w, r4.w, r3.w, r5.w
      movc r4.w, r4.w, l(0), l(16)
      ushr r12.z, r5.w, l(5)
      ishl r5.w, l(1), r5.w
      iadd r12.x, r4.w, r12.z
      atomic_or g6, r12.xyxx, r5.w
    endif 
  endif 
  iadd r3.w, r3.w, l(64)
endloop 
sync_g_t
lt r1.x, l(0.000000), r2.z
and r1.x, r1.x, r1.w
if_z r1.x
  ret 
endif 
ld_indexable(texture2d)(float,float,float,float) r4.xyzw, r0.xyww, t2.xyzw
utof r1.xw, r0.xxxy
add r5.xy, r1.xwxx, l(0.500000, 0.500000, 0.000000, 0.000000)
mul r5.zw, r5.xxxy, cb1[44].zzzw
sample_l_indexable(texture2d)(float,float,float,float) r3.w, r5.zwzz, t27.yzwx, s4, l(0.000000)
mul r3.w, r3.w, r4.z
if_nz cb2[55].x
  mul r4.z, r3.w, l(0.750000)
  store_uav_typed u0.xyzw, r0.xyyy, r4.zzzz
  ret 
else 
  movc r4.z, cb2[54].w, r3.w, l(1.000000)
endif 
ge r3.w, r2.z, l(0.500000)
ld_indexable(texture2d)(float,float,float,float) r6.xyz, r0.xyww, t0.xyzw
ld_aoffimmi_indexable(-1,0,0)(texture2d)(float,float,float,float) r7.xyz, r0.xyww, t2.xywz
ld_aoffimmi_indexable(0,-1,0)(texture2d)(float,float,float,float) r8.xyz, r0.xyww, t2.xywz
ld_aoffimmi_indexable(1,0,0)(texture2d)(float,float,float,float) r9.xyz, r0.xyww, t2.xywz
ld_aoffimmi_indexable(0,1,0)(texture2d)(float,float,float,float) r10.xyz, r0.xyzw, t2.xywz
add r0.zw, r5.xxxy, -cb1[71].xxxy
mul r0.zw, r0.zzzw, cb1[44].zzzw
mad r0.zw, r0.zzzw, l(0.000000, 0.000000, 2.000000, -2.000000), l(0.000000, 0.000000, -1.000000, 1.000000)
mov r5.x, cb1[12].x
mov r5.y, cb1[13].y
mul r5.xy, r0.zwzz, r5.xyxx
mov r5.z, l(1.000000)
mul r5.xyz, r3.zzzz, r5.xyzx
mul r11.xyz, r5.yyyy, cb1[17].xyzx
mad r5.xyw, r5.xxxx, cb1[16].xyxz, r11.xyxz
mad r5.xyz, r5.zzzz, cb1[18].xyzx, r5.xywx
mad r0.z, r2.w, l(3.000000), l(0.500000)
ftou r0.z, r0.z
mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r2.xy, r2.xyxx, l(0.850000, 0.850000, 0.000000, 0.000000)
dp2 r0.w, r2.xyxx, r2.xyxx
add r11.zw, -r0.wwww, l(0.000000, 0.000000, 2.000000, 1.000000)
sqrt r0.w, r11.z
mul r11.xy, r0.wwww, r2.xyxx
and r12.xyzw, r0.zzzz, l(2, 1, 2, 1)
movc r12.xyzw, r12.zwxy, l(-1.000000,-1.000000,1,1), l(1.000000,1.000000,0,0)
xor r0.z, r12.w, r12.z
movc r12.z, r0.z, l(-1.000000), l(1.000000)
mul r2.xyw, r12.xyxz, l(-1.000000, 0.000000, 0.000000, 1.000000)
mul r13.xyz, r12.xyzx, l(1.000000, -2.000000, 1.000000, 0.000000)
mul r11.xyz, r11.xywx, l(0.40824831, 0.70710677, 0.57735026, 0.000000)
mul r2.xyw, r2.xyxw, r11.yyyy
mad r2.xyw, r13.xyxz, r11.xxxx, r2.xyxw
mad r11.xyz, r12.xyzx, r11.zzzz, r2.xywx
movc r0.z, r3.w, l(-0.500000), l(-0.00146628)
add r0.z, r0.z, r2.z
mul_sat r2.y, r0.z, l(2.00982332)
dp3 r0.z, -r5.xyzx, -r5.xyzx
rsq r0.z, r0.z
mul r12.xyz, r0.zzzz, -r5.xyzx
dp2 r0.w, r1.xwxx, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r0.w, r0.w
mul r0.w, r0.w, l(52.982918)
frc r0.w, r0.w
mad r0.w, r0.w, l(6.28318548), cb1[70].w
sincos r13.x, r14.x, r0.w
utof r1.xw, r0.yyyx
dp2 r0.w, r1.xwxx, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r0.w, r0.w
mul r0.w, r0.w, l(52.982918)
frc r0.w, r0.w
mad r0.w, r0.w, l(6.28318548), cb1[70].w
sincos r1.x, r15.x, r0.w
dp3_sat r2.x, r11.xyzx, r12.xyzx
dp3 r0.w, -r12.xyzx, r11.xyzx
add r0.w, r0.w, r0.w
mad r16.xyz, r11.xyzx, -r0.wwww, -r12.xyzx
mul r0.w, r2.y, l(17.000000)
exp r0.w, r0.w
add r0.w, r0.w, l(2.000000)
div r0.w, l(2.000000), r0.w
sqrt r1.w, r0.w
mul r2.zw, cb1[44].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
ftou r13.zw, r2.zzzw
ieq r13.zw, r0.xxxy, r13.zzzw
and r6.w, r13.w, r13.z
lt r7.w, l(0.83333331), r2.y
lt r8.w, l(60.000000), r3.z
and r7.w, r7.w, r8.w
if_nz r7.w
  mul r15.yzw, r5.yyyy, cb1[9].xxyw
  mad r15.yzw, r5.xxxx, cb1[8].xxyw, r15.yyzw
  mad r15.yzw, r5.zzzz, cb1[10].xxyw, r15.yyzw
  add r15.yzw, r15.yyzw, cb1[11].xxyw
  mad r17.xyz, r16.xyzx, l(2000.000000, 2000.000000, 2000.000000, 0.000000), r5.xyzx
  mul r18.xyz, r17.yyyy, cb1[9].xywx
  mad r17.xyw, r17.xxxx, cb1[8].xyxw, r18.xyxz
  mad r17.xyz, r17.zzzz, cb1[10].xywx, r17.xywx
  add r17.xyz, r17.xyzx, cb1[11].xywx
  ge r7.w, r17.z, r15.w
  if_nz r7.w
    rcp r18.z, r15.w
    mul r18.xy, r15.yzyy, r18.zzzz
    rcp r19.z, r17.z
    mul r19.xy, r17.xyxx, r19.zzzz
    lt r13.zw, l(0.000000, 0.000000, 1.000000, 1.000000), r19.xxxy
    mad r20.xyzw, r17.xxyy, r19.zzzz, l(-1.000000, 1.000000, -1.000000, 1.000000)
    mad r21.xyzw, r17.xxyy, r19.zzzz, -r18.xxyy
    lt r15.yz, r19.xxyx, l(0.000000, -1.000000, -1.000000, 0.000000)
    div r20.xyzw, r20.xyzw, r21.xyzw
    and r15.yz, r15.yyzy, r20.yywy
    movc r13.zw, r13.zzzw, r20.xxxz, r15.yyyz
    max r7.w, r13.w, r13.z
    add r17.xyw, r18.xyxz, -r19.xyxz
    mad r17.xyw, r7.wwww, r17.xyxw, r19.xyxz
    mad r13.zw, r18.xxxy, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
    mad r15.yz, r17.xxyx, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
    add r13.zw, r13.zzzw, -r15.yyyz
    mul r13.zw, r2.zzzw, |r13.zzzw|
    max r7.w, r13.w, r13.z
    max r7.w, r7.w, l(1.000000)
    rcp r7.w, r7.w
    mad r18.xyz, r18.xyzx, l(0.500000, -0.500000, 1.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    mad r19.xyw, r17.xyxw, l(0.500000, -0.500000, 0.000000, 1.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    add r20.xyz, -r18.xyzx, r19.xywx
    mad r18.xyz, r7.wwww, r20.xyzx, r18.xyzx
    add r19.xyw, -r18.xyxz, r19.xyxw
    mul r20.xyz, r19.xywx, l(0.031250, 0.031250, 0.031250, 0.000000)
    mul r2.zw, r2.zzzw, |r20.xxxy|
    max r2.z, r2.w, r2.z
    log r2.z, r2.z
    round_pi r2.z, r2.z
    max r2.z, r2.z, l(0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r2.w, r18.xyxx, t28.yzwx, s1, r2.z
    mad r21.xyz, r19.xywx, l(0.031250, 0.031250, 0.031250, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r2.w, |r2.w|, |r7.w|
    mul r2.w, r21.z, r2.w
    lt r2.w, r2.w, l(1.000000)
    and r8.w, r2.w, l(1)
    mad r21.xyz, r19.xywx, l(0.062500, 0.062500, 0.062500, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r9.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r7.w, |r7.w|, |r9.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    bfi r2.w, l(1), l(0), r2.w, l(2)
    movc r2.w, r7.w, r2.w, r8.w
    mad r21.xyz, r19.xywx, l(0.093750, 0.093750, 0.093750, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r8.w, |r9.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.w, r2.w, l(4)
    movc r2.w, r8.w, r9.w, r2.w
    mad r21.xyz, r19.xywx, l(0.125000, 0.125000, 0.125000, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.w, r2.w, l(8)
    movc r2.w, r7.w, r9.w, r2.w
    mad r21.xyz, r19.xywx, l(0.156250, 0.156250, 0.156250, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.w, r2.w, l(16)
    movc r2.w, r8.w, r9.w, r2.w
    mad r21.xyz, r19.xywx, l(0.187500, 0.187500, 0.187500, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.w, r2.w, l(32)
    movc r2.w, r7.w, r9.w, r2.w
    mad r21.xyz, r19.xywx, l(0.218750, 0.218750, 0.218750, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.w, r2.w, l(64)
    movc r2.w, r8.w, r9.w, r2.w
    mad r21.xyz, r19.xywx, l(0.250000, 0.250000, 0.250000, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.w, r2.w, l(128)
    movc r2.w, r7.w, r9.w, r2.w
    mad r21.xyz, r19.xywx, l(0.281250, 0.281250, 0.281250, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.w, r2.w, l(256)
    movc r2.w, r8.w, r9.w, r2.w
    mad r21.xyz, r19.xywx, l(0.312500, 0.312500, 0.312500, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.w, r2.w, l(512)
    movc r2.w, r7.w, r9.w, r2.w
    mad r21.xyz, r19.xywx, l(0.343750, 0.343750, 0.343750, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.w, r2.w, l(1024)
    movc r2.w, r8.w, r9.w, r2.w
    mad r21.xyz, r19.xywx, l(0.375000, 0.375000, 0.375000, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.w, r2.w, l(2048)
    movc r2.w, r7.w, r9.w, r2.w
    mad r21.xyz, r19.xywx, l(0.406250, 0.406250, 0.406250, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.w, r2.w, l(4096)
    movc r2.w, r8.w, r9.w, r2.w
    mad r21.xyz, r19.xywx, l(0.437500, 0.437500, 0.437500, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.w, r2.w, l(8192)
    movc r2.w, r7.w, r9.w, r2.w
    mad r21.xyz, r19.xywx, l(0.468750, 0.468750, 0.468750, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.w, r2.w, l(0x00004000)
    movc r2.w, r8.w, r9.w, r2.w
    mad r21.xyz, r19.xywx, l(0.500000, 0.500000, 0.500000, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.w, r2.w, l(0x00008000)
    movc r2.w, r7.w, r9.w, r2.w
    mad r21.xyz, r19.xywx, l(0.531250, 0.531250, 0.531250, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.w, r2.w, l(0x00010000)
    movc r2.w, r8.w, r9.w, r2.w
    mad r21.xyz, r19.xywx, l(0.562500, 0.562500, 0.562500, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.w, r2.w, l(0x00020000)
    movc r2.w, r7.w, r9.w, r2.w
    mad r21.xyz, r19.xywx, l(0.593750, 0.593750, 0.593750, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.w, r2.w, l(0x00040000)
    movc r2.w, r8.w, r9.w, r2.w
    mad r21.xyz, r19.xywx, l(0.625000, 0.625000, 0.625000, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.w, r2.w, l(0x00080000)
    movc r2.w, r7.w, r9.w, r2.w
    mad r21.xyz, r19.xywx, l(0.656250, 0.656250, 0.656250, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.w, r2.w, l(0x00100000)
    movc r2.w, r8.w, r9.w, r2.w
    mad r21.xyz, r19.xywx, l(0.687500, 0.687500, 0.687500, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.w, r2.w, l(0x00200000)
    movc r2.w, r7.w, r9.w, r2.w
    mad r21.xyz, r19.xywx, l(0.718750, 0.718750, 0.718750, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.w, r2.w, l(0x00400000)
    movc r2.w, r8.w, r9.w, r2.w
    mad r21.xyz, r19.xywx, l(0.750000, 0.750000, 0.750000, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.w, r2.w, l(0x00800000)
    movc r2.w, r7.w, r9.w, r2.w
    mad r21.xyz, r19.xywx, l(0.781250, 0.781250, 0.781250, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.w, r2.w, l(0x01000000)
    movc r2.w, r8.w, r9.w, r2.w
    mad r21.xyz, r19.xywx, l(0.812500, 0.812500, 0.812500, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.w, r2.w, l(0x02000000)
    movc r2.w, r7.w, r9.w, r2.w
    mad r21.xyz, r19.xywx, l(0.843750, 0.843750, 0.843750, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.w, r2.w, l(0x04000000)
    movc r2.w, r8.w, r9.w, r2.w
    mad r21.xyz, r19.xywx, l(0.875000, 0.875000, 0.875000, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.w, r2.w, l(0x08000000)
    movc r2.w, r7.w, r9.w, r2.w
    mad r21.xyz, r19.xywx, l(0.906250, 0.906250, 0.906250, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.w, r2.w, l(0x10000000)
    movc r2.w, r8.w, r9.w, r2.w
    mad r21.xyz, r19.xywx, l(0.937500, 0.937500, 0.937500, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.w, r2.w, l(0x20000000)
    movc r2.w, r7.w, r9.w, r2.w
    mad r21.xyz, r19.xywx, l(0.968750, 0.968750, 0.968750, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.w, r2.w, l(0x40000000)
    movc r2.w, r8.w, r9.w, r2.w
    sample_l_indexable(texture2d)(float,float,float,float) r2.z, r15.yzyy, t28.yzxw, s1, r2.z
    min r2.z, |r7.w|, |r2.z|
    mul r2.z, r17.w, r2.z
    lt r2.z, r2.z, l(1.000000)
    iadd r7.w, r2.w, l(0x80000000)
    movc r2.z, r2.z, r7.w, r2.w
    mov r21.w, l(-1)
    mov r22.z, l(-1)
    mov r13.zw, l(0,0,0,0)
    mov r2.w, l(0)
    mov r7.w, r2.z
    mov r8.w, r19.z
    mov r23.yz, l(0,0,0,0)
    mov r21.z, l(0)
    mov r9.w, l(0)
    loop 
      breakc_z r7.w
      firstbit_lo r21.y, r7.w
      ishl r10.w, l(1), r21.y
      xor r21.x, r7.w, r10.w
      utof r12.w, r21.y
      mul r12.w, r12.w, l(0.031250)
      mad r17.xyw, r19.xyxw, r12.wwww, r18.xyxz
      sample_l_indexable(texture2d)(float,float,float,float) r12.w, r17.xyxx, t28.yzwx, s1, l(0.000000)
      mul r14.w, r17.w, |r12.w|
      lt r14.w, r14.w, l(1.000000)
      if_nz r14.w
        if_nz r21.z
          lt r14.w, r15.w, |r12.w|
          lt r15.y, r8.w, r17.w
          and r14.w, r14.w, r15.y
          movc r15.yz, r14.wwww, r17.xxyx, r13.zzwz
          mov r21.z, r17.w
          mov r23.x, r8.w
          movc r24.xyz, r14.wwww, r21.zxyz, r23.xyzx
          mov r7.w, r21.x
          mov r21.z, l(-1)
          mov r13.zw, r15.yyyz
          mov r8.w, r24.x
          mov r23.yz, r24.yyzy
          continue 
        endif 
        mov r14.w, r23.y
        mov r15.y, l(0)
      else 
        not r10.w, r10.w
        and r14.w, r10.w, r23.y
        mov r15.y, r21.z
      endif 
      if_nz r9.w
        mov r7.w, r21.x
        mov r23.y, r14.w
        mov r21.z, r15.y
        mov r9.w, l(-1)
        continue 
      endif 
      mov r24.xy, r13.zwzz
      mov r10.w, r2.w
      mov r15.z, r8.w
      mov r23.y, r14.w
      mov r23.x, r23.z
      mov r21.z, r15.y
      mov r22.w, r9.w
      mov r18.w, r17.w
      mov r20.w, |r12.w|
      mov r23.w, l(0)
      loop 
        ige r24.z, r23.w, l(4)
        breakc_nz r24.z
        itof r24.z, r23.w
        add r24.z, r24.z, l(1.000000)
        mul r24.z, r24.z, l(0.250000)
        mad r25.xyz, r20.xyzx, r24.zzzz, r17.xywx
        sample_l_indexable(texture2d)(float,float,float,float) r24.z, r25.xyxx, t28.yzxw, s1, l(0.000000)
        mul r24.w, r25.z, |r24.z|
        lt r24.w, r24.w, l(1.000000)
        if_nz r24.w
          lt r24.w, r15.w, |r24.z|
          add r25.w, -r18.w, r25.z
          add r26.x, -r20.w, |r24.z|
          mul r26.y, r18.w, r25.z
          mul r26.x, r26.y, |r26.x|
          lt r25.w, r26.x, |r25.w|
          and r26.x, r24.w, r25.w
          lt r26.y, r15.z, r25.z
          and r26.z, r24.w, r26.y
          movc r22.xy, r26.zzzz, r21.xyxx, r23.yxyy
          or r25.w, r25.w, r26.y
          and r24.w, r24.w, r25.w
          movc r25.xy, r24.wwww, r25.xyxx, r24.xyxx
          movc r25.w, r26.x, l(1.000000), r10.w
          movc r24.w, r24.w, r25.z, r15.z
          movc r26.xyzw, r26.xxxx, r21.xyzw, r22.xyzw
          mov r10.w, r25.w
          mov r24.xy, r25.xyxx
          mov r15.z, r24.w
          mov r23.xy, r26.yxyy
          mov r21.z, r26.z
          mov r22.w, r26.w
          break 
        endif 
        mov r18.w, r25.z
        mov r20.w, |r24.z|
        iadd r23.w, r23.w, l(1)
      endloop 
      mov r13.zw, r24.xxxy
      mov r2.w, r10.w
      mov r8.w, r15.z
      mov r23.yz, r23.yyxy
      mov r9.w, r22.w
      mov r7.w, r21.x
    endloop 
    rcp r2.z, r8.w
    add r2.z, -r15.w, r2.z
    add r7.w, -r15.w, r17.z
    div r2.z, |r2.z|, |r7.w|
    min r17.x, r2.z, l(1.000000)
    countbits r2.z, r23.y
    utof r2.z, r2.z
    add r2.z, r2.z, l(1.000000)
    iadd r7.w, -r23.z, l(32)
    utof r7.w, r7.w
    div r2.z, r2.z, r7.w
    min r17.y, r2.z, l(1.000000)
  else 
    mov r17.xy, l(1.000000,0,0,0)
    mov r2.w, l(0)
  endif 
  add r2.z, r2.y, l(-0.83333331)
  mul r2.z, r2.z, l(5.99999952)
  max r2.z, r2.z, l(0.000000)
  mad r7.w, r2.z, l(-2.000000), l(3.000000)
  mul r2.z, r2.z, r2.z
  mul r2.z, r2.z, r7.w
  add r3.z, r3.z, l(-60.000000)
  mul_sat r3.z, r3.z, l(0.01666667)
  mad r7.w, r3.z, l(-2.000000), l(3.000000)
  mul r3.z, r3.z, r3.z
  mul r3.z, r3.z, r7.w
  mul r2.z, r2.z, r3.z
  mul r2.z, r17.y, r2.z
  mad r15.yz, r13.zzwz, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
  add r15.yz, |r15.yyzy|, l(0.000000, -0.500000, -0.500000, 0.000000)
  add_sat r15.yz, r15.yyzy, r15.yyzy
  mad r17.yz, r15.yyzy, l(0.000000, -2.000000, -2.000000, 0.000000), l(0.000000, 3.000000, 3.000000, 0.000000)
  mul r15.yz, r15.yyzy, r15.yyzy
  mad r15.yz, -r17.yyzy, r15.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
  mul r3.z, r15.z, r15.y
  mul r2.z, r2.z, r3.z
  mul r3.z, r17.x, l(10.000000)
  min r3.z, r3.z, l(1.000000)
  add r7.w, -r2.w, l(1.000000)
  mul r7.w, r2.z, r7.w
  add r3.z, r3.z, l(-1.000000)
  mad r3.z, r7.w, r3.z, l(1.000000)
  mul r2.z, r2.w, r2.z
  lt r2.w, l(0.000000), r2.z
  if_nz r2.w
    sample_l_indexable(texture2d)(float,float,float,float) r15.yz, r13.zwzz, t22.zxyw, s4, l(0.000000)
    add r17.xy, |r15.yzyy|, l(-0.500000, -0.500000, 0.000000, 0.000000)
    add_sat r17.xy, r17.xyxx, r17.xyxx
    add r17.zw, |r15.yyyz|, |r15.yyyz|
    min r17.zw, r17.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    mul r17.zw, r17.zzzw, l(0.000000, 0.000000, 10.000000, 10.000000)
    mad r17.xy, r17.xyxx, l(30.000000, 30.000000, 0.000000, 0.000000), r17.zwzz
    ge r15.yz, r15.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
    movc r15.yz, r15.yyzy, r17.xxyx, -r17.xxyx
    mad r13.zw, -r15.yyyz, cb1[44].zzzw, r13.zzzw
    sample_l_indexable(texture2d)(float,float,float,float) r15.yzw, r13.zwzz, t21.wxyz, s4, l(0.000000)
    mul r15.yzw, r15.yyzw, cb1[85].xxxx
    mul r15.yzw, r2.zzzz, r15.yyzw
  else 
    mov r15.yzw, l(0,0,0,0)
    mov r2.z, l(0)
  endif 
else 
  mov r15.yzw, l(0,0,0,0)
  mov r3.z, l(1.000000)
  mov r2.z, l(0)
endif 
dp3 r2.w, r11.xyzx, cb2[17].xyzx
mov_sat r7.w, r2.w
movc r8.w, r3.w, |r2.w|, r7.w
ge r9.w, l(0.000000), r8.w
if_nz r9.w
  mov r10.w, l(0)
endif 
if_z r9.w
  mul r17.xyz, r5.yyyy, cb2[29].xyzx
  mad r17.xyz, r5.xxxx, cb2[28].xyzx, r17.xyzx
  mad r17.xyz, r5.zzzz, cb2[30].xyzx, r17.xyzx
  add r17.xyz, r17.xyzx, cb2[31].xyzx
  add r9.w, r17.z, -cb2[17].w
  mad r9.w, -r9.w, l(0.00006104), l(1.000000)
  mov_sat r12.w, r9.w
  eq r12.w, r9.w, r12.w
  if_nz r12.w
    mov r12.w, l(0)
    mov r13.z, l(0)
    loop 
      ge r13.w, r12.w, l(3.000000)
      breakc_nz r13.w
      ftou r13.w, r12.w
      add r18.xy, r17.xyxx, -cb2[r13.w + 20].xyxx
      max r14.w, |r18.y|, |r18.x|
      mul r13.z, r14.w, cb2[r13.w + 20].z
      lt r13.w, r13.z, l(1.000000)
      if_nz r13.w
        break 
      endif 
      add r12.w, r12.w, l(1.000000)
      mov r13.z, l(0)
    endloop 
  else 
    mov r12.w, l(3.000000)
    mov r13.z, l(0)
  endif 
  ge r13.w, r12.w, l(3.000000)
  if_nz r13.w
    mul r18.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
    rcp r19.xz, r18.xxxx
    mov r19.y, -r19.z
    mad r18.xyz, r17.xyxx, r19.xyzx, r18.yzyy
    add r19.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r18.xyz, r18.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r18.xyz, r19.xyzx, r18.xyzx
    mul r19.xy, r18.zyzz, cb2[32].xxxx
    round_ni r19.xy, r19.xyxx
    mul r14.w, r19.y, cb2[27].x
    mad r14.w, r14.w, cb2[32].x, r19.x
    ftou r14.w, r14.w
    iadd r14.w, r14.w, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.w, r14.w, l(0), t23.xxxx
    and r18.w, r17.w, l(0x40000000)
    ishl r19.x, r17.w, l(2)
    if_z r18.w
      and r18.w, r17.w, l(0x01ffffff)
      iadd r20.x, r14.w, r18.w
      ushr r14.w, r17.w, l(25)
      utof r14.w, r14.w
      mul r18.xyz, r14.wwww, r18.xyzx
      frc r18.xyz, r18.xyzx
      mul r18.xyz, r18.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
      ftou r18.xyz, r18.xyzx
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.z, r20.x, l(0), t23.xxxx
      ushr r19.yz, r18.zzyz, l(0, 6, 6, 0)
      and r14.w, r20.z, l(0xc0000000)
      iadd r17.w, r20.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.w, r17.w, l(0), t23.xxxx
      movc r17.w, r19.z, r20.z, r17.w
      ushr r18.w, r17.w, l(13)
      movc r17.w, r19.y, r18.w, r17.w
      and r17.w, r17.w, l(8191)
      iadd r21.x, r17.w, r20.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r21.z, r21.x, l(0), t23.xxxx
      mov r20.y, l(0)
      mov r21.y, l(1)
      movc r19.yzw, r14.wwww, r20.xxyz, r21.xxyz
      movc r21.yz, r14.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r22.xy, r18.zyzz, r21.yyyy
      and r22.xy, r22.xyxx, l(1, 1, 0, 0)
      and r17.w, r19.w, l(0xc0000000)
      iadd r18.w, r19.y, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.w, r18.w, l(0), t23.xxxx
      movc r18.w, r22.y, r19.w, r18.w
      ushr r20.w, r18.w, l(13)
      movc r18.w, r22.x, r20.w, r18.w
      and r18.w, r18.w, l(8191)
      iadd r21.x, r18.w, r19.y
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r21.w, r21.x, l(0), t23.xxxx
      movc r19.yzw, r17.wwww, r19.yyzw, r21.xxzw
      movc r19.yzw, r14.wwww, r20.xxyz, r19.yyzw
      and r14.w, r19.w, l(0xc0000000)
      if_z r14.w
        iadd r14.w, -r19.z, l(6)
        ushr r20.xy, r18.zyzz, r14.wwww
        or r14.w, r19.w, l(0x40000000)
        bfi r17.w, l(1), l(1), r20.y, l(0)
        bfi r17.w, l(1), l(0), r20.x, r17.w
        imul null, r17.w, r17.w, l(10)
        ushr r14.w, r14.w, r17.w
        and r14.w, r14.w, l(1023)
        iadd r20.x, r14.w, r19.y
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.w, r20.x, l(0), t23.xxxx
        iadd r20.yz, r19.zzzz, l(0, 1, 2, 0)
        iadd r14.w, -r20.y, l(6)
        ushr r21.xy, r18.zyzz, r14.wwww
        and r14.w, r20.w, l(0xc0000000)
        or r17.w, r20.w, l(0x40000000)
        bfi r18.w, l(1), l(1), r21.y, l(0)
        bfi r18.w, l(1), l(0), r21.x, r18.w
        imul null, r18.w, r18.w, l(10)
        ushr r17.w, r17.w, r18.w
        and r17.w, r17.w, l(1023)
        iadd r21.x, r17.w, r20.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r21.z, r21.x, l(0), t23.xxxx
        mov r21.y, r20.z
        movc r21.xyz, r14.wwww, r20.xywx, r21.xyzx
        iadd r17.w, -r21.y, l(6)
        ushr r20.yz, r18.zzyz, r17.wwww
        and r17.w, r21.z, l(0xc0000000)
        or r18.w, r21.z, l(0x40000000)
        bfi r19.z, l(1), l(1), r20.z, l(0)
        bfi r19.z, l(1), l(0), r20.y, r19.z
        imul null, r19.z, r19.z, l(10)
        ushr r18.w, r18.w, r19.z
        and r18.w, r18.w, l(1023)
        iadd r22.x, r18.w, r21.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r22.y, r22.x, l(0), t23.xxxx
        movc r20.yz, r17.wwww, r21.xxzx, r22.xxyx
        movc r19.yw, r14.wwww, r20.xxxw, r20.yyyz
      endif 
      and r14.w, r19.w, l(0xc0000000)
      if_z r14.w
        ubfe r17.w, l(14), l(15), r19.w
        utof r17.w, r17.w
        mul r17.w, r17.w, cb2[27].w
        mul r17.w, r17.w, l(0.00006104)
        and r20.xy, r19.wwww, l(0x00007fff, 0x20000000, 0, 0)
        utof r18.w, r20.x
        mul r18.w, r18.w, cb2[27].w
        mul r18.w, r18.w, l(0.00003052)
        and r19.z, r18.y, l(3)
        iadd r19.z, r19.z, r19.y
        iadd r19.z, r19.z, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.z, r19.z, l(0), t23.xxxx
        bfi r20.xzw, l(2, 0, 2, 1), l(3, 0, 1, 4), r18.xxyz, l(0, 0, 0, 0)
        ushr r18.x, r19.z, r20.x
        and r18.x, r18.x, l(255)
        utof r18.x, r18.x
        mul r18.x, r18.w, r18.x
        mad r18.x, r18.x, l(0.00392157), r17.w
        iadd r18.y, r20.z, l(1)
        ubfe r18.z, l(1), l(1), r18.z
        iadd r18.y, r18.z, r18.y
        iadd r18.y, r18.y, r19.y
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.y, r18.y, l(0), t23.xxxx
        ushr r18.y, r18.y, r20.w
        and r18.y, r18.y, l(0x0000ffff)
        utof r18.y, r18.y
        mul r18.y, r18.w, r18.y
        mad r17.w, r18.y, l(0.00001526), r17.w
        movc r19.x, r20.y, r18.x, r17.w
      else 
        and r17.w, r19.w, l(0x80000000)
        iadd r18.x, r19.y, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.x, r18.x, l(0), t23.xxxx
        movc r17.w, r17.w, r18.x, l(0)
        ishl r18.x, r19.w, l(2)
        ushr r18.y, r17.w, l(16)
        f16tof32 r18.y, r18.y
        and r17.w, r17.w, l(0x0000ffff)
        f16tof32 r17.w, r17.w
        mad r18.x, r17.x, r18.y, r18.x
        mad r17.w, r17.y, r17.w, r18.x
        movc r19.x, r14.w, r17.w, r19.x
      endif 
    endif 
    mad r14.w, -cb2[27].z, l(2.000000), r17.z
    lt r14.w, r19.x, r14.w
    movc r10.w, r14.w, l(0), l(1.000000)
  endif 
  if_z r13.w
    if_z cb2[58].y
      ftou r13.w, r12.w
      add r17.zw, r17.xxxy, -cb2[r13.w + 20].xxxy
      mul r17.zw, r17.zzzw, cb2[r13.w + 20].zzzz
      mad r18.xy, r17.zwzz, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r13.w, cb2[26].y
      add r18.z, r12.w, r13.w
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r13.w, r18.xyzx, t13.xxxx, s13, r9.w
      sample_l_indexable(texture2darray)(float,float,float,float) r14.w, r18.xyzx, t31.yzwx, s0, l(0.000000)
      add r13.w, r13.w, r14.w
      add_sat r13.w, r13.w, l(-1.000000)
      mul r14.w, r13.w, r13.w
      mul r10.w, r13.w, r14.w
    endif 
    if_nz cb2[58].y
      mov r18.x, -r13.x
      ftou r13.w, r12.w
      add r12.w, r12.w, l(1.000000)
      min r12.w, r12.w, l(2.000000)
      ftou r12.w, r12.w
      add r13.z, -r13.z, l(1.000000)
      mul r13.z, r13.z, l(28.000000)
      ftou r13.z, r13.z
      add r17.zw, r17.xxxy, -cb2[r13.w + 20].xxxy
      mul r17.zw, r17.zzzw, cb2[r13.w + 20].zzzz
      mad r17.zw, r17.zzzw, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
      add r17.xy, r17.xyxx, -cb2[r12.w + 20].xyxx
      mul r17.xy, r17.xyxx, cb2[r12.w + 20].zzzz
      mad r17.xy, r17.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      mov r18.y, r14.x
      mov r18.z, r13.x
      mov r14.w, l(0)
      mov r18.w, l(0)
      loop 
        uge r19.x, r18.w, l(8)
        breakc_nz r19.x
        ult r19.x, r13.z, r18.w
        movc r19.yz, r19.xxxx, r17.xxyx, r17.zzwz
        movc r19.w, r19.x, cb2[r12.w + 20].w, cb2[r13.w + 20].w
        movc r19.x, r19.x, r12.w, r13.w
        dp2 r20.x, icb[r18.w + 4].yxyy, r18.xyxx
        dp2 r20.y, icb[r18.w + 4].yxyy, r18.yzyy
        mad r20.xy, r20.xyxx, r19.wwww, r19.yzyy
        iadd r19.x, r19.x, cb2[26].y
        utof r20.z, r19.x
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.x, r20.xyzx, t13.xxxx, s13, r9.w
        sample_l_indexable(texture2darray)(float,float,float,float) r19.y, r20.xyzx, t31.yxzw, s0, l(0.000000)
        add r19.x, r19.y, r19.x
        add_sat r19.x, r19.x, l(-1.000000)
        mad r14.w, r19.x, l(0.125000), r14.w
        iadd r18.w, r18.w, l(1)
      endloop 
      mul r9.w, r14.w, r14.w
      mul r10.w, r14.w, r9.w
    endif 
  endif 
endif 
add r9.w, -r2.y, l(1.000000)
mul r12.w, r9.w, l(5.000000)
mad r13.z, r9.w, l(5.000000), l(-2.500000)
mul r13.z, r13.z, l(0.400000)
max r13.z, r13.z, l(0.000000)
mad r17.xy, -r9.wwww, l(10.000000, 5.000000, 0.000000, 0.000000), l(6.857410, 7.085000, 0.000000, 0.000000)
exp r13.w, r17.x
mul r13.w, r2.x, r13.w
mul r13.zw, r13.zzzw, l(0.000000, 0.000000, 100.000000, 9.136810)
mul r14.w, r9.w, r12.w
mad r14.w, -r14.w, l(2.015905), r17.y
exp r14.w, r14.w
mul r14.w, r2.x, r14.w
mul r14.w, r14.w, l(9.708090)
max r13.w, r13.w, r14.w
max r13.w, r13.w, l(1.268160)
if_nz cb2[54].x
  mov r17.xyzw, l(0,0,0,0)
  mov r18.xyzw, l(0,0,0,0)
  mov r19.xyzw, l(0,0,0,0)
  mov r20.xyzw, l(0,0,0,0)
  mov r21.xyzw, l(0,0,0,0)
  mov r22.xyzw, l(0,0,0,0)
  mov r23.xyzw, l(0,0,0,0)
  mov r24.xyzw, l(0,0,0,0)
  mov r25.xyzw, l(0,0,0,0)
  mov r26.xyzw, l(0,0,0,0)
  mov r27.xyzw, l(0,0,0,0)
  mov r14.w, l(0)
  mov r30.z, l(0)
  mov r31.z, l(0)
  mov r28.xyzw, l(0,0,0,0)
  mov r29.xyz, l(0,0,0,0)
  loop 
    uge r29.w, r29.z, cb2[0].y
    breakc_nz r29.w
    ushr r29.w, r29.z, l(5)
    iadd r29.w, r29.w, l(16)
    ld_structured r29.w, r29.w, l(0), g6.xxxx
    mov r32.xyzw, r17.yxzw
    mov r33.xyzw, r18.xyzw
    mov r34.xyzw, r19.yzwx
    mov r35.xyzw, r20.xyzw
    mov r36.xyzw, r21.xyzw
    mov r37.xyzw, r22.zwxy
    mov r38.xyzw, r23.zwxy
    mov r39.xyzw, r25.zwxy
    mov r40.xyzw, r26.zwxy
    mov r41.xyz, r28.xyzx
    mov r42.xy, r29.yxyy
    mov r30.w, r14.w
    mov r31.w, r30.z
    mov r41.w, r31.z
    mov r42.z, r28.w
    mov r43.xyzw, r24.zwxy
    mov r44.xyzw, r27.zwxy
    mov r42.w, r29.w
    loop 
      breakc_z r42.w
      firstbit_lo r45.x, r42.w
      ishl r45.y, l(1), r45.x
      not r45.y, r45.y
      and r42.w, r42.w, r45.y
      iadd r45.x, r29.z, r45.x
      imul null, r45.x, r45.x, l(14)
      add r45.yzw, r5.xxyz, -cb10[r45.x + 0].xxyz
      dp3 r45.y, r45.yzwy, r45.yzwy
      sqrt r45.y, r45.y
      ge r45.y, cb2[54].y, r45.y
      if_nz r45.y
        mov r32.yzw, cb10[r45.x + 1].xxyz
        mov r32.x, cb10[r45.x + 0].w
        mov r33.yzw, cb10[r45.x + 2].xxyz
        mov r33.x, cb10[r45.x + 1].w
        mov r34.xyz, cb10[r45.x + 3].xyzx
        mov r34.w, cb10[r45.x + 4].z
        mov r35.yz, cb10[r45.x + 4].xxyx
        mov r35.x, cb10[r45.x + 3].w
        mov r35.w, cb10[r45.x + 6].x
        mov r36.yzw, cb10[r45.x + 5].xxyz
        mov r36.x, cb10[r45.x + 4].w
        mov r37.yz, cb10[r45.x + 7].yywy
        mov r37.x, cb10[r45.x + 6].y
        mov r37.w, cb10[r45.x + 8].x
        mov r38.xyz, cb10[r45.x + 8].yzwy
        mov r38.w, cb10[r45.x + 9].x
        mov r39.xyz, cb10[r45.x + 10].yzwy
        mov r39.w, cb10[r45.x + 11].x
        mov r40.xyz, cb10[r45.x + 11].yzwy
        mov r40.w, cb10[r45.x + 12].x
        mov r41.xyz, cb10[r45.x + 0].xyzx
        mov r45.yz, cb10[r45.x + 13].yyzy
        mov r30.w, l(-1)
        mov r31.w, cb10[r45.x + 2].w
        mov r41.w, cb10[r45.x + 5].w
        mov r42.z, cb10[r45.x + 7].z
        mov r43.xyz, cb10[r45.x + 9].yzwy
        mov r43.w, cb10[r45.x + 10].x
        mov r44.xyz, cb10[r45.x + 12].yzwy
        mov r44.w, cb10[r45.x + 13].x
        mov r42.xy, r45.yzyy
        break 
      endif 
    endloop 
    if_nz r30.w
      mov r17.xyzw, r32.yxzw
      mov r18.xyzw, r33.xyzw
      mov r19.xyzw, r34.wxyz
      mov r20.xyzw, r35.xyzw
      mov r21.xyzw, r36.xyzw
      mov r22.xyzw, r37.zwxy
      mov r23.xyzw, r38.zwxy
      mov r24.xyzw, r43.zwxy
      mov r25.xyzw, r39.zwxy
      mov r26.xyzw, r40.zwxy
      mov r27.xyzw, r44.zwxy
      mov r28.xyz, r41.xyzx
      mov r29.xy, r42.yxyy
      mov r14.w, l(-1)
      mov r30.z, r31.w
      mov r31.z, r41.w
      mov r28.w, r42.z
      break 
    endif 
    iadd r29.z, r29.z, l(32)
    mov r17.xyzw, r32.yxzw
    mov r18.xyzw, r33.xyzw
    mov r19.xyzw, r34.wxyz
    mov r20.xyzw, r35.xyzw
    mov r21.xyzw, r36.xyzw
    mov r22.xyzw, r37.zwxy
    mov r23.xyzw, r38.zwxy
    mov r25.xyzw, r39.zwxy
    mov r26.xyzw, r40.zwxy
    mov r28.xyz, r41.xyzx
    mov r29.xy, r42.yxyy
    mov r14.w, r30.w
    mov r30.z, r31.w
    mov r31.z, r41.w
    mov r28.w, r42.z
    mov r24.xyzw, r43.zwxy
    mov r27.xyzw, r44.zwxy
  endloop 
  mov r32.xy, r17.ywyy
  mov r30.x, r17.z
  mov r17.yz, r18.xxwx
  mov r30.y, r18.y
  mov r32.z, r18.z
  mov r18.xyz, r19.yzwy
  mov r19.yz, r21.xxyx
  mov r31.xy, r21.zwzz
  mov r21.xy, r22.zwzz
  mov r22.z, r23.z
  mov r23.z, r24.z
  mov r24.z, r25.z
  mov r25.z, r26.z
  mov r26.z, r27.z
  mov r27.z, r29.y
else 
  mov r14.w, l(0)
endif 
if_nz r14.w
  if_nz r6.w
    add r33.yzw, r28.xxyz, cb1[24].xxyz
    mov r33.x, l(16)
    store_structured u2.xyzw, cb2[52].x, l(880), r33.xyzw
  endif 
  add r28.xyz, r5.xyzx, -r28.xyzx
  and r17.w, r28.w, l(0x0000ffff)
  ubfe r18.w, l(6), l(25), r28.w
  imul null, r19.w, r17.w, l(6)
  dp3 r21.z, cb11[r19.w + 0].xyzx, r28.xyzx
  add_sat r21.z, r21.z, cb11[r19.w + 0].w
  dp3 r21.w, cb11[r19.w + 1].xyzx, r28.xyzx
  add_sat r21.w, r21.w, cb11[r19.w + 1].w
  mul r21.z, r21.w, r21.z
  dp3 r21.w, cb11[r19.w + 2].xyzx, r28.xyzx
  add_sat r21.w, r21.w, cb11[r19.w + 2].w
  mul r21.z, r21.w, r21.z
  dp3 r21.w, cb11[r19.w + 3].xyzx, r28.xyzx
  add_sat r21.w, r21.w, cb11[r19.w + 3].w
  mul r21.z, r21.w, r21.z
  dp3 r21.w, cb11[r19.w + 4].xyzx, r28.xyzx
  add_sat r21.w, r21.w, cb11[r19.w + 4].w
  mul r21.z, r21.w, r21.z
  dp3 r21.w, cb11[r19.w + 5].xyzx, r28.xyzx
  add_sat r19.w, r21.w, cb11[r19.w + 5].w
  mul r33.x, r19.w, r21.z
  and r19.w, r20.w, l(1)
  mov r33.yz, l(0,0,1.000000,0)
  movc r21.zw, r19.wwww, r33.xxxy, r33.zzzx
  mov r33.x, l(1.000000)
  mov r19.w, r20.w
  mov r34.xy, r21.zwzz
  mov r22.w, l(1)
  loop 
    ige r29.y, r22.w, r18.w
    breakc_nz r29.y
    iadd r29.y, r17.w, r22.w
    imul null, r29.y, r29.y, l(6)
    dp3 r29.z, cb11[r29.y + 0].xyzx, r28.xyzx
    add_sat r29.z, r29.z, cb11[r29.y + 0].w
    mul r29.z, r29.z, r34.x
    dp3 r29.w, cb11[r29.y + 1].xyzx, r28.xyzx
    add_sat r29.w, r29.w, cb11[r29.y + 1].w
    mul r29.z, r29.w, r29.z
    dp3 r29.w, cb11[r29.y + 2].xyzx, r28.xyzx
    add_sat r29.w, r29.w, cb11[r29.y + 2].w
    mul r29.z, r29.w, r29.z
    dp3 r29.w, cb11[r29.y + 3].xyzx, r28.xyzx
    add_sat r29.w, r29.w, cb11[r29.y + 3].w
    mul r29.z, r29.w, r29.z
    dp3 r29.w, cb11[r29.y + 4].xyzx, r28.xyzx
    add_sat r29.w, r29.w, cb11[r29.y + 4].w
    mul r29.z, r29.w, r29.z
    dp3 r29.w, cb11[r29.y + 5].xyzx, r28.xyzx
    add_sat r29.y, r29.w, cb11[r29.y + 5].w
    mul r34.x, r29.y, r29.z
    ushr r29.w, r19.w, l(2)
    ubfe r30.w, l(1), l(2), r19.w
    and r31.w, r29.w, l(2)
    max r32.w, r34.x, r34.y
    mad r29.y, -r29.z, r29.y, l(1.000000)
    mul r29.y, r29.y, r34.y
    movc r33.y, r31.w, r29.y, r32.w
    movc r34.xy, r30.wwww, r34.xyxx, r33.xyxx
    iadd r22.w, r22.w, l(1)
    mov r19.w, r29.w
  endloop 
  mov_sat r34.y, r34.y
  mul r33.w, r21.x, r34.y
  lt r17.w, l(0.000000), r33.w
  if_nz r17.w
    if_nz r6.w
      ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r17.w, cb2[52].x, l(880), u2.xxxx
      or r17.w, r17.w, l(32)
      store_structured u2.x, cb2[52].x, l(880), r17.w
      store_structured u2.x, cb2[52].x, l(896), r33.w
    endif 
    mul r17.w, r21.y, r33.w
    dp3 r18.w, r16.xyzx, r22.xyzx
    dp3 r19.w, r28.xyzx, r22.xyzx
    add r19.w, -r23.w, r19.w
    ge r20.w, r19.w, l(0.000000)
    max r19.w, r13.z, |r19.w|
    movc r19.w, r20.w, r19.w, -r19.w
    max r18.w, -r18.w, l(0.00000010)
    div r18.w, r19.w, r18.w
    min r18.w, |r18.w|, l(131072.000000)
    dp3 r19.w, r16.xyzx, r23.xyzx
    dp3 r20.w, r28.xyzx, r23.xyzx
    add r20.w, -r24.w, r20.w
    ge r21.x, r20.w, l(0.000000)
    max r20.w, r13.z, |r20.w|
    movc r20.w, r21.x, r20.w, -r20.w
    max r19.w, -r19.w, l(0.00000010)
    div r19.w, r20.w, r19.w
    min r18.w, r18.w, |r19.w|
    dp3 r19.w, r16.xyzx, r24.xyzx
    dp3 r20.w, r28.xyzx, r24.xyzx
    add r20.w, -r25.w, r20.w
    ge r21.x, r20.w, l(0.000000)
    max r20.w, r13.z, |r20.w|
    movc r20.w, r21.x, r20.w, -r20.w
    max r19.w, -r19.w, l(0.00000010)
    div r19.w, r20.w, r19.w
    min r18.w, r18.w, |r19.w|
    dp3 r19.w, r16.xyzx, r25.xyzx
    dp3 r20.w, r28.xyzx, r25.xyzx
    add r20.w, -r26.w, r20.w
    ge r21.x, r20.w, l(0.000000)
    max r20.w, r13.z, |r20.w|
    movc r20.w, r21.x, r20.w, -r20.w
    max r19.w, -r19.w, l(0.00000010)
    div r19.w, r20.w, r19.w
    min r18.w, r18.w, |r19.w|
    dp3 r19.w, r16.xyzx, r26.xyzx
    dp3 r20.w, r28.xyzx, r26.xyzx
    add r20.w, -r27.w, r20.w
    ge r21.x, r20.w, l(0.000000)
    max r20.w, r13.z, |r20.w|
    movc r20.w, r21.x, r20.w, -r20.w
    max r19.w, -r19.w, l(0.00000010)
    div r19.w, r20.w, r19.w
    min r18.w, r18.w, |r19.w|
    dp3 r19.w, r16.xyzx, r27.xyzx
    dp3 r20.w, r28.xyzx, r27.xyzx
    add r20.w, -r29.x, r20.w
    ge r21.x, r20.w, l(0.000000)
    max r20.w, r13.z, |r20.w|
    movc r20.w, r21.x, r20.w, -r20.w
    max r19.w, -r19.w, l(0.00000010)
    div r19.w, r20.w, r19.w
    min r18.w, r18.w, |r19.w|
    add r20.xyz, r20.xyzx, r28.xyzx
    mad r20.xyz, r16.xyzx, r18.wwww, r20.xyzx
    dp3 r19.w, r20.xyzx, r20.xyzx
    sqrt r19.w, r19.w
    div r18.w, r18.w, r19.w
    add r18.w, r18.w, r18.w
    sqrt r18.w, r18.w
    mad r18.w, r9.w, l(5.000000), r18.w
    add r18.w, r18.w, l(-0.844800)
    dp3 r21.x, r20.xyzx, r32.xyzx
    dp3 r21.y, r20.xyzx, r17.xyzx
    dp3 r21.z, r20.xyzx, r30.xyzx
    ubfe r19.w, l(9), l(16), r28.w
    utof r21.w, r19.w
    sample_l_indexable(texturecubearray)(float,float,float,float) r20.xyz, r21.xyzw, t8.xyzw, s2, r18.w
    and r22.xyz, r20.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
    ieq r22.xyz, r22.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
    or r18.w, r22.y, r22.x
    or r18.w, r22.z, r18.w
    movc r20.xyz, r18.wwww, l(1.000000,1.000000,0,0), r20.xyzx
    dp3 r22.x, r28.xyzx, r32.xyzx
    dp3 r22.y, r28.xyzx, r17.xyzx
    dp3 r22.z, r28.xyzx, r30.xyzx
    mad_sat r18.xyz, r22.xyzx, r18.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    mad r18.xyz, r18.xyzx, r19.xyzx, r31.xyzx
    dp3 r21.x, r11.xyzx, r32.xyzx
    dp3 r21.y, r11.xyzx, r17.xyzx
    dp3 r21.z, r11.xyzx, r30.xyzx
    lt r17.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r21.xyzx
    movc r19.z, r17.x, l(0), l(0.500000)
    mov r19.xy, l(0,0,0,0)
    add r19.xyz, r18.xyzx, r19.xyzx
    sample_l_indexable(texture3d)(float,float,float,float) r19.xyz, r19.xyzx, t17.xyzw, s4, l(0.000000)
    mul r22.xyz, r21.xyzx, r21.xyzx
    mul r22.xyz, r17.wwww, r22.xyzx
    movc r23.z, r17.y, l(0), l(0.500000)
    mov r23.xy, l(0,0,0,0)
    add r23.xyz, r18.xyzx, r23.xyzx
    sample_l_indexable(texture3d)(float,float,float,float) r23.xyz, r23.xyzx, t18.xyzw, s4, l(0.000000)
    mul r23.xyz, r22.yyyy, r23.xyzx
    mad r19.xyz, r19.xyzx, r22.xxxx, r23.xyzx
    movc r17.z, r17.z, l(0), l(0.500000)
    mov r17.xy, l(0,0,0,0)
    add r17.xyz, r17.xyzx, r18.xyzx
    sample_l_indexable(texture3d)(float,float,float,float) r17.xyz, r17.xyzx, t19.xyzw, s4, l(0.000000)
    mad r17.xyz, r17.xyzx, r22.zzzz, r19.xyzx
    sample_l_indexable(texturecubearray)(float,float,float,float) r18.xyz, r21.xyzw, t8.xyzw, s2, l(6.000000)
    and r19.xyz, r18.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
    ieq r19.xyz, r19.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
    or r18.w, r19.y, r19.x
    or r18.w, r19.z, r18.w
    movc r18.xyz, r18.wwww, l(1.000000,1.000000,0,0), r18.xyzx
    mul r17.xyz, r17.xyzx, r18.xyzx
    dp3 r17.x, r17.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
    mul r17.y, r13.w, r17.x
    mul r18.xyz, r17.wwww, r20.xyzx
    dp3 r17.z, r18.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
    mad r17.x, r13.w, r17.x, r17.z
    div r17.x, r17.y, r17.x
    mul r33.xyz, r17.xxxx, r18.xyzx
    mov r17.x, l(257)
  else 
    mov r33.xyzw, l(0,0,0,0)
    mov r17.x, l(1)
  endif 
  mov r17.y, l(-1)
else 
  mov r33.xyzw, l(0,0,0,0)
  mov r17.x, l(0)
endif 
and r14.w, r14.w, r17.y
if_z r14.w
  iadd r14.w, cb2[0].y, -cb2[58].x
  and r17.y, r14.w, l(-32)
  iadd r17.z, r14.w, -r17.y
  and r17.w, cb2[0].y, l(-32)
  iadd r18.x, -r17.w, cb2[0].y
  mov r19.x, l(16)
  mov r20.yz, l(0,0,1.000000,0)
  mov r21.xy, l(0,0,0,0)
  mov r22.xz, l(1.000000,0,1.000000,0)
  mov r23.xy, l(0,0,0,0)
  mov r24.xy, l(0,0,0,0)
  mov r25.xyz, l(0,0,0,0)
  mov r25.w, r33.x
  mov r26.xyz, r33.yzwy
  mov r26.w, r17.x
  mov r18.y, r17.y
  loop 
    uge r18.z, r18.y, cb2[0].y
    breakc_nz r18.z
    ushr r18.z, r18.y, l(5)
    iadd r18.z, r18.z, l(16)
    ld_structured r18.z, r18.z, l(0), g6.xxxx
    ieq r18.w, r17.y, r18.y
    bfi r20.w, r17.z, l(0), l(0), r18.z
    movc r18.z, r18.w, r20.w, r18.z
    ieq r18.w, r17.w, r18.y
    ubfe r20.w, r18.x, l(0), r18.z
    movc r18.z, r18.w, r20.w, r18.z
    mov r27.xyzw, r25.xyzw
    mov r28.xyzw, r26.xyzw
    mov r18.w, r18.z
    loop 
      breakc_z r18.w
      firstbit_lo r20.w, r18.w
      ishl r21.w, l(1), r20.w
      not r21.w, r21.w
      and r18.w, r18.w, r21.w
      iadd r20.w, r18.y, r20.w
      imul null, r20.w, r20.w, l(14)
      and r21.w, r28.w, l(255)
      ult r23.w, r21.w, l(32)
      and r23.w, r6.w, r23.w
      if_nz r23.w
        imad r21.w, r21.w, l(20), l(880)
        add r19.yzw, cb1[24].xxyz, cb10[r20.w + 0].xxyz
        store_structured u2.xyzw, cb2[52].x, r21.w, r19.xyzw
      endif 
      iadd r29.w, r28.w, l(1)
      add r19.yzw, r5.xxyz, -cb10[r20.w + 0].xxyz
      and r21.w, l(0x0000ffff), cb10[r20.w + 7].z
      ubfe r23.w, l(6), l(25), cb10[r20.w + 7].z
      imul null, r24.w, r21.w, l(6)
      dp3 r30.x, cb11[r24.w + 0].xyzx, r19.yzwy
      add_sat r30.x, r30.x, cb11[r24.w + 0].w
      dp3 r30.y, cb11[r24.w + 1].xyzx, r19.yzwy
      add_sat r30.y, r30.y, cb11[r24.w + 1].w
      mul r30.x, r30.y, r30.x
      dp3 r30.y, cb11[r24.w + 2].xyzx, r19.yzwy
      add_sat r30.y, r30.y, cb11[r24.w + 2].w
      mul r30.x, r30.y, r30.x
      dp3 r30.y, cb11[r24.w + 3].xyzx, r19.yzwy
      add_sat r30.y, r30.y, cb11[r24.w + 3].w
      mul r30.x, r30.y, r30.x
      dp3 r30.y, cb11[r24.w + 4].xyzx, r19.yzwy
      add_sat r30.y, r30.y, cb11[r24.w + 4].w
      mul r30.x, r30.y, r30.x
      dp3 r30.y, cb11[r24.w + 5].xyzx, r19.yzwy
      add_sat r24.w, r30.y, cb11[r24.w + 5].w
      mul r20.x, r24.w, r30.x
      and r24.w, l(1), cb10[r20.w + 6].x
      movc r30.xy, r24.wwww, r20.xyxx, r20.zxzz
      mov r20.x, cb10[r20.w + 6].x
      mov r31.xy, r30.xyxx
      mov r24.w, l(1)
      loop 
        ige r30.z, r24.w, r23.w
        breakc_nz r30.z
        iadd r30.z, r21.w, r24.w
        imul null, r30.z, r30.z, l(6)
        dp3 r30.w, cb11[r30.z + 0].xyzx, r19.yzwy
        add_sat r30.w, r30.w, cb11[r30.z + 0].w
        mul r30.w, r30.w, r31.x
        dp3 r31.z, cb11[r30.z + 1].xyzx, r19.yzwy
        add_sat r31.z, r31.z, cb11[r30.z + 1].w
        mul r30.w, r30.w, r31.z
        dp3 r31.z, cb11[r30.z + 2].xyzx, r19.yzwy
        add_sat r31.z, r31.z, cb11[r30.z + 2].w
        mul r30.w, r30.w, r31.z
        dp3 r31.z, cb11[r30.z + 3].xyzx, r19.yzwy
        add_sat r31.z, r31.z, cb11[r30.z + 3].w
        mul r30.w, r30.w, r31.z
        dp3 r31.z, cb11[r30.z + 4].xyzx, r19.yzwy
        add_sat r31.z, r31.z, cb11[r30.z + 4].w
        mul r30.w, r30.w, r31.z
        dp3 r31.z, cb11[r30.z + 5].xyzx, r19.yzwy
        add_sat r30.z, r31.z, cb11[r30.z + 5].w
        mul r31.x, r30.z, r30.w
        ushr r31.z, r20.x, l(2)
        ubfe r31.w, l(1), l(2), r20.x
        and r32.x, r31.z, l(2)
        max r32.y, r31.x, r31.y
        mad r30.z, -r30.w, r30.z, l(1.000000)
        mul r30.z, r30.z, r31.y
        movc r22.y, r32.x, r30.z, r32.y
        movc r31.xy, r31.wwww, r31.xyxx, r22.xyxx
        iadd r24.w, r24.w, l(1)
        mov r20.x, r31.z
      endloop 
      mov_sat r31.y, r31.y
      mul r20.x, r31.y, cb10[r20.w + 6].y
      lt r21.w, l(0.000000), r20.x
      if_nz r21.w
        and r21.w, r29.w, l(255)
        iadd r22.y, r21.w, l(-1)
        ult r22.y, r22.y, l(32)
        and r22.y, r6.w, r22.y
        if_nz r22.y
          imad r30.xy, r21.wwww, l(20, 20, 0, 0), l(860, 876, 0, 0)
          ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r21.w, cb2[52].x, r30.x, u2.xxxx
          or r21.w, r21.w, l(32)
          store_structured u2.x, cb2[52].x, r30.x, r21.w
          store_structured u2.x, cb2[52].x, r30.y, r20.x
        endif 
        iadd r28.w, r28.w, l(257)
        mad r28.z, r31.y, cb10[r20.w + 6].y, r28.z
        mul r20.x, r20.x, cb10[r20.w + 7].y
        mov r30.x, cb10[r20.w + 7].w
        mov r30.yz, cb10[r20.w + 8].xxyx
        dp3 r21.w, r16.xyzx, r30.xyzx
        dp3 r22.y, r19.yzwy, r30.xyzx
        add r22.y, r22.y, -cb10[r20.w + 8].z
        ge r23.w, r22.y, l(0.000000)
        max r22.y, r13.z, |r22.y|
        movc r22.y, r23.w, r22.y, -r22.y
        max r21.w, -r21.w, l(0.00000010)
        div r21.w, r22.y, r21.w
        min r21.w, |r21.w|, l(131072.000000)
        mov r30.x, cb10[r20.w + 8].w
        mov r30.yz, cb10[r20.w + 9].xxyx
        dp3 r22.y, r16.xyzx, r30.xyzx
        dp3 r23.w, r19.yzwy, r30.xyzx
        add r23.w, r23.w, -cb10[r20.w + 9].z
        ge r24.w, r23.w, l(0.000000)
        max r23.w, r13.z, |r23.w|
        movc r23.w, r24.w, r23.w, -r23.w
        max r22.y, -r22.y, l(0.00000010)
        div r22.y, r23.w, r22.y
        min r21.w, r21.w, |r22.y|
        mov r30.x, cb10[r20.w + 9].w
        mov r30.yz, cb10[r20.w + 10].xxyx
        dp3 r22.y, r16.xyzx, r30.xyzx
        dp3 r23.w, r19.yzwy, r30.xyzx
        add r23.w, r23.w, -cb10[r20.w + 10].z
        ge r24.w, r23.w, l(0.000000)
        max r23.w, r13.z, |r23.w|
        movc r23.w, r24.w, r23.w, -r23.w
        max r22.y, -r22.y, l(0.00000010)
        div r22.y, r23.w, r22.y
        min r21.w, r21.w, |r22.y|
        mov r30.x, cb10[r20.w + 10].w
        mov r30.yz, cb10[r20.w + 11].xxyx
        dp3 r22.y, r16.xyzx, r30.xyzx
        dp3 r23.w, r19.yzwy, r30.xyzx
        add r23.w, r23.w, -cb10[r20.w + 11].z
        ge r24.w, r23.w, l(0.000000)
        max r23.w, r13.z, |r23.w|
        movc r23.w, r24.w, r23.w, -r23.w
        max r22.y, -r22.y, l(0.00000010)
        div r22.y, r23.w, r22.y
        min r21.w, r21.w, |r22.y|
        mov r30.x, cb10[r20.w + 11].w
        mov r30.yz, cb10[r20.w + 12].xxyx
        dp3 r22.y, r16.xyzx, r30.xyzx
        dp3 r23.w, r19.yzwy, r30.xyzx
        add r23.w, r23.w, -cb10[r20.w + 12].z
        ge r24.w, r23.w, l(0.000000)
        max r23.w, r13.z, |r23.w|
        movc r23.w, r24.w, r23.w, -r23.w
        max r22.y, -r22.y, l(0.00000010)
        div r22.y, r23.w, r22.y
        min r21.w, r21.w, |r22.y|
        mov r30.x, cb10[r20.w + 12].w
        mov r30.yz, cb10[r20.w + 13].xxyx
        dp3 r22.y, r16.xyzx, r30.xyzx
        dp3 r23.w, r19.yzwy, r30.xyzx
        add r23.w, r23.w, -cb10[r20.w + 13].z
        ge r24.w, r23.w, l(0.000000)
        max r23.w, r13.z, |r23.w|
        movc r23.w, r24.w, r23.w, -r23.w
        max r22.y, -r22.y, l(0.00000010)
        div r22.y, r23.w, r22.y
        min r21.w, r21.w, |r22.y|
        add r30.x, r19.y, cb10[r20.w + 3].w
        add r30.yz, r19.zzwz, cb10[r20.w + 4].xxyx
        mad r30.xyz, r16.xyzx, r21.wwww, r30.xyzx
        dp3 r22.y, r30.xyzx, r30.xyzx
        sqrt r22.y, r22.y
        div r21.w, r21.w, r22.y
        add r21.w, r21.w, r21.w
        sqrt r21.w, r21.w
        mad r21.w, r9.w, l(5.000000), r21.w
        add r21.w, r21.w, l(-0.844800)
        mov r32.x, cb10[r20.w + 0].w
        mov r32.y, cb10[r20.w + 1].z
        mov r32.z, cb10[r20.w + 2].y
        dp3 r34.x, r30.xyzx, r32.xyzx
        mov r35.xy, cb10[r20.w + 1].xwxx
        mov r35.z, cb10[r20.w + 2].z
        dp3 r34.y, r30.xyzx, r35.xyzx
        mov r36.x, cb10[r20.w + 1].y
        mov r36.yz, cb10[r20.w + 2].xxwx
        dp3 r34.z, r30.xyzx, r36.xyzx
        ubfe r22.y, l(9), l(16), cb10[r20.w + 7].z
        utof r34.w, r22.y
        sample_l_indexable(texturecubearray)(float,float,float,float) r30.xyz, r34.xyzw, t8.xyzw, s2, r21.w
        and r31.xzw, r30.xxyz, l(0x7fffffff, 0, 0x7fffffff, 0x7fffffff)
        ieq r31.xzw, r31.xxzw, l(0x7f800000, 0, 0x7f800000, 0x7f800000)
        or r21.w, r31.z, r31.x
        or r21.w, r31.w, r21.w
        movc r30.xyz, r21.wwww, l(1.000000,1.000000,0,0), r30.xyzx
        dp3 r37.x, r19.yzwy, r32.xyzx
        dp3 r37.y, r19.yzwy, r35.xyzx
        dp3 r37.z, r19.yzwy, r36.xyzx
        mad_sat r19.yzw, r37.xxyz, cb10[r20.w + 3].xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
        mul r37.xy, r19.yzyy, cb10[r20.w + 4].zwzz
        mul r37.z, r19.w, cb10[r20.w + 5].x
        add r19.yzw, r37.xxyz, cb10[r20.w + 5].yyzw
        dp3 r34.x, r11.xyzx, r32.xyzx
        dp3 r34.y, r11.xyzx, r35.xyzx
        dp3 r34.z, r11.xyzx, r36.xyzx
        lt r31.xzw, l(0.000000, 0.000000, 0.000000, 0.000000), r34.xxyz
        movc r21.z, r31.x, l(0), l(0.500000)
        add r32.xyz, r19.yzwy, r21.xyzx
        sample_l_indexable(texture3d)(float,float,float,float) r32.xyz, r32.xyzx, t17.xyzw, s4, l(0.000000)
        mul r35.xyz, r34.xyzx, r34.xyzx
        mul r35.xyz, r20.xxxx, r35.xyzx
        movc r23.z, r31.z, l(0), l(0.500000)
        add r36.xyz, r19.yzwy, r23.xyzx
        sample_l_indexable(texture3d)(float,float,float,float) r36.xyz, r36.xyzx, t18.xyzw, s4, l(0.000000)
        mul r36.xyz, r35.yyyy, r36.xyzx
        mad r32.xyz, r32.xyzx, r35.xxxx, r36.xyzx
        movc r24.z, r31.w, l(0), l(0.500000)
        add r19.yzw, r19.yyzw, r24.xxyz
        sample_l_indexable(texture3d)(float,float,float,float) r19.yzw, r19.yzwy, t19.wxyz, s4, l(0.000000)
        mad r19.yzw, r19.yyzw, r35.zzzz, r32.xxyz
        sample_l_indexable(texturecubearray)(float,float,float,float) r31.xzw, r34.xyzw, t8.xwyz, s2, l(6.000000)
        and r32.xyz, r31.xzwx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
        ieq r32.xyz, r32.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
        or r20.w, r32.y, r32.x
        or r20.w, r32.z, r20.w
        movc r31.xzw, r20.wwww, l(1.000000,0,1.000000,0), r31.xxzw
        mul r32.xyz, r19.yzwy, r31.xzwx
        dp3 r20.w, r32.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
        mad r27.xyz, r19.yzwy, r31.xzwx, r27.xyzx
        mul r19.y, r13.w, r20.w
        mul r30.xyz, r20.xxxx, r30.xyzx
        dp3 r19.z, r30.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
        mad r19.z, r13.w, r20.w, r19.z
        div r19.y, r19.y, r19.z
        mov r32.x, r27.w
        mov r32.yz, r28.xxyx
        mad r19.yzw, r30.xxyz, r19.yyyy, r32.xxyz
        mov r27.w, r19.y
        mov r28.xy, r19.zwzz
      else 
        mov r29.xyz, r28.xyzx
        mov r28.xyzw, r29.xyzw
      endif 
    endloop 
    mov r25.xyzw, r27.xyzw
    mov r26.xyzw, r28.xyzw
    iadd r18.y, r18.y, l(32)
  endloop 
  mov r18.x, l(16)
  mov r19.yz, l(0,0,1.000000,0)
  mov r20.xy, l(0,0,0,0)
  mov r21.xy, l(0,0,0,0)
  mov r23.xy, l(0,0,0,0)
  mov r24.xyz, r25.xyzx
  mov r27.x, r25.w
  mov r27.yz, r26.xxyx
  mov r28.xyz, r26.zwzz
  mov r17.w, l(0)
  loop 
    uge r19.w, r17.w, r14.w
    breakc_nz r19.w
    ushr r19.w, r17.w, l(5)
    iadd r19.w, r19.w, l(16)
    ld_structured r19.w, r19.w, l(0), g6.xxxx
    ieq r20.w, r17.y, r17.w
    ubfe r21.w, r17.z, l(0), r19.w
    movc r19.w, r20.w, r21.w, r19.w
    mov r29.xyz, r24.xyzx
    mov r30.xyz, r27.xyzx
    mov r31.xyz, r28.xzyx
    mov r20.w, r19.w
    loop 
      breakc_z r20.w
      firstbit_lo r21.w, r20.w
      ishl r22.x, l(1), r21.w
      not r22.x, r22.x
      and r20.w, r20.w, r22.x
      iadd r21.w, r17.w, r21.w
      imul null, r21.w, r21.w, l(14)
      and r22.x, r31.z, l(255)
      ult r22.y, r22.x, l(32)
      and r22.y, r6.w, r22.y
      if_nz r22.y
        imad r22.x, r22.x, l(20), l(880)
        add r18.yzw, cb1[24].xxyz, cb10[r21.w + 0].xxyz
        store_structured u2.xyzw, cb2[52].x, r22.x, r18.xyzw
      endif 
      iadd r22.y, r31.z, l(1)
      add r18.yzw, r5.xxyz, -cb10[r21.w + 0].xxyz
      and r23.w, l(0x0000ffff), cb10[r21.w + 7].z
      ubfe r24.w, l(6), l(25), cb10[r21.w + 7].z
      imul null, r27.w, r23.w, l(6)
      dp3 r28.w, cb11[r27.w + 0].xyzx, r18.yzwy
      add_sat r28.w, r28.w, cb11[r27.w + 0].w
      dp3 r29.w, cb11[r27.w + 1].xyzx, r18.yzwy
      add_sat r29.w, r29.w, cb11[r27.w + 1].w
      mul r28.w, r28.w, r29.w
      dp3 r29.w, cb11[r27.w + 2].xyzx, r18.yzwy
      add_sat r29.w, r29.w, cb11[r27.w + 2].w
      mul r28.w, r28.w, r29.w
      dp3 r29.w, cb11[r27.w + 3].xyzx, r18.yzwy
      add_sat r29.w, r29.w, cb11[r27.w + 3].w
      mul r28.w, r28.w, r29.w
      dp3 r29.w, cb11[r27.w + 4].xyzx, r18.yzwy
      add_sat r29.w, r29.w, cb11[r27.w + 4].w
      mul r28.w, r28.w, r29.w
      dp3 r29.w, cb11[r27.w + 5].xyzx, r18.yzwy
      add_sat r27.w, r29.w, cb11[r27.w + 5].w
      mul r19.x, r27.w, r28.w
      and r27.w, l(1), cb10[r21.w + 6].x
      movc r32.xy, r27.wwww, r19.xyxx, r19.zxzz
      mov r19.x, cb10[r21.w + 6].x
      mov r34.xy, r32.xyxx
      mov r27.w, l(1)
      loop 
        ige r28.w, r27.w, r24.w
        breakc_nz r28.w
        iadd r28.w, r23.w, r27.w
        imul null, r28.w, r28.w, l(6)
        dp3 r29.w, cb11[r28.w + 0].xyzx, r18.yzwy
        add_sat r29.w, r29.w, cb11[r28.w + 0].w
        mul r29.w, r29.w, r34.x
        dp3 r30.w, cb11[r28.w + 1].xyzx, r18.yzwy
        add_sat r30.w, r30.w, cb11[r28.w + 1].w
        mul r29.w, r29.w, r30.w
        dp3 r30.w, cb11[r28.w + 2].xyzx, r18.yzwy
        add_sat r30.w, r30.w, cb11[r28.w + 2].w
        mul r29.w, r29.w, r30.w
        dp3 r30.w, cb11[r28.w + 3].xyzx, r18.yzwy
        add_sat r30.w, r30.w, cb11[r28.w + 3].w
        mul r29.w, r29.w, r30.w
        dp3 r30.w, cb11[r28.w + 4].xyzx, r18.yzwy
        add_sat r30.w, r30.w, cb11[r28.w + 4].w
        mul r29.w, r29.w, r30.w
        dp3 r30.w, cb11[r28.w + 5].xyzx, r18.yzwy
        add_sat r28.w, r30.w, cb11[r28.w + 5].w
        mul r34.x, r28.w, r29.w
        ushr r30.w, r19.x, l(2)
        ubfe r31.w, l(1), l(2), r19.x
        and r32.z, r30.w, l(2)
        max r32.w, r34.x, r34.y
        mad r28.w, -r29.w, r28.w, l(1.000000)
        mul r28.w, r28.w, r34.y
        movc r22.w, r32.z, r28.w, r32.w
        movc r34.xy, r31.wwww, r34.xyxx, r22.zwzz
        iadd r27.w, r27.w, l(1)
        mov r19.x, r30.w
      endloop 
      add_sat r19.x, -r31.y, r34.y
      mul r22.w, r19.x, cb10[r21.w + 6].y
      lt r23.w, l(0.000000), r22.w
      if_nz r23.w
        and r23.w, r22.y, l(255)
        iadd r24.w, r23.w, l(-1)
        ult r24.w, r24.w, l(32)
        and r24.w, r6.w, r24.w
        if_nz r24.w
          imad r32.xy, r23.wwww, l(20, 20, 0, 0), l(860, 876, 0, 0)
          ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r23.w, cb2[52].x, r32.x, u2.xxxx
          or r23.w, r23.w, l(32)
          store_structured u2.x, cb2[52].x, r32.x, r23.w
          store_structured u2.x, cb2[52].x, r32.y, r22.w
        endif 
        iadd r31.z, r31.z, l(257)
        mad r31.x, r19.x, cb10[r21.w + 6].y, r31.x
        mul r19.x, r22.w, cb10[r21.w + 7].y
        mov r32.x, cb10[r21.w + 7].w
        mov r32.yz, cb10[r21.w + 8].xxyx
        dp3 r22.w, r16.xyzx, r32.xyzx
        dp3 r23.w, r18.yzwy, r32.xyzx
        add r23.w, r23.w, -cb10[r21.w + 8].z
        ge r24.w, r23.w, l(0.000000)
        max r23.w, r13.z, |r23.w|
        movc r23.w, r24.w, r23.w, -r23.w
        max r22.w, -r22.w, l(0.00000010)
        div r22.w, r23.w, r22.w
        min r22.w, |r22.w|, l(131072.000000)
        mov r32.x, cb10[r21.w + 8].w
        mov r32.yz, cb10[r21.w + 9].xxyx
        dp3 r23.w, r16.xyzx, r32.xyzx
        dp3 r24.w, r18.yzwy, r32.xyzx
        add r24.w, r24.w, -cb10[r21.w + 9].z
        ge r27.w, r24.w, l(0.000000)
        max r24.w, r13.z, |r24.w|
        movc r24.w, r27.w, r24.w, -r24.w
        max r23.w, -r23.w, l(0.00000010)
        div r23.w, r24.w, r23.w
        min r22.w, r22.w, |r23.w|
        mov r32.x, cb10[r21.w + 9].w
        mov r32.yz, cb10[r21.w + 10].xxyx
        dp3 r23.w, r16.xyzx, r32.xyzx
        dp3 r24.w, r18.yzwy, r32.xyzx
        add r24.w, r24.w, -cb10[r21.w + 10].z
        ge r27.w, r24.w, l(0.000000)
        max r24.w, r13.z, |r24.w|
        movc r24.w, r27.w, r24.w, -r24.w
        max r23.w, -r23.w, l(0.00000010)
        div r23.w, r24.w, r23.w
        min r22.w, r22.w, |r23.w|
        mov r32.x, cb10[r21.w + 10].w
        mov r32.yz, cb10[r21.w + 11].xxyx
        dp3 r23.w, r16.xyzx, r32.xyzx
        dp3 r24.w, r18.yzwy, r32.xyzx
        add r24.w, r24.w, -cb10[r21.w + 11].z
        ge r27.w, r24.w, l(0.000000)
        max r24.w, r13.z, |r24.w|
        movc r24.w, r27.w, r24.w, -r24.w
        max r23.w, -r23.w, l(0.00000010)
        div r23.w, r24.w, r23.w
        min r22.w, r22.w, |r23.w|
        mov r32.x, cb10[r21.w + 11].w
        mov r32.yz, cb10[r21.w + 12].xxyx
        dp3 r23.w, r16.xyzx, r32.xyzx
        dp3 r24.w, r18.yzwy, r32.xyzx
        add r24.w, r24.w, -cb10[r21.w + 12].z
        ge r27.w, r24.w, l(0.000000)
        max r24.w, r13.z, |r24.w|
        movc r24.w, r27.w, r24.w, -r24.w
        max r23.w, -r23.w, l(0.00000010)
        div r23.w, r24.w, r23.w
        min r22.w, r22.w, |r23.w|
        mov r32.x, cb10[r21.w + 12].w
        mov r32.yz, cb10[r21.w + 13].xxyx
        dp3 r23.w, r16.xyzx, r32.xyzx
        dp3 r24.w, r18.yzwy, r32.xyzx
        add r24.w, r24.w, -cb10[r21.w + 13].z
        ge r27.w, r24.w, l(0.000000)
        max r24.w, r13.z, |r24.w|
        movc r24.w, r27.w, r24.w, -r24.w
        max r23.w, -r23.w, l(0.00000010)
        div r23.w, r24.w, r23.w
        min r22.w, r22.w, |r23.w|
        add r32.x, r18.y, cb10[r21.w + 3].w
        add r32.yz, r18.zzwz, cb10[r21.w + 4].xxyx
        mad r32.xyz, r16.xyzx, r22.wwww, r32.xyzx
        dp3 r23.w, r32.xyzx, r32.xyzx
        sqrt r23.w, r23.w
        div r22.w, r22.w, r23.w
        add r22.w, r22.w, r22.w
        sqrt r22.w, r22.w
        mad r22.w, r9.w, l(5.000000), r22.w
        add r22.w, r22.w, l(-0.844800)
        mov r35.x, cb10[r21.w + 0].w
        mov r35.y, cb10[r21.w + 1].z
        mov r35.z, cb10[r21.w + 2].y
        dp3 r36.x, r32.xyzx, r35.xyzx
        mov r37.xy, cb10[r21.w + 1].xwxx
        mov r37.z, cb10[r21.w + 2].z
        dp3 r36.y, r32.xyzx, r37.xyzx
        mov r38.x, cb10[r21.w + 1].y
        mov r38.yz, cb10[r21.w + 2].xxwx
        dp3 r36.z, r32.xyzx, r38.xyzx
        ubfe r23.w, l(9), l(16), cb10[r21.w + 7].z
        utof r36.w, r23.w
        sample_l_indexable(texturecubearray)(float,float,float,float) r32.xyz, r36.xyzw, t8.xyzw, s2, r22.w
        and r34.xzw, r32.xxyz, l(0x7fffffff, 0, 0x7fffffff, 0x7fffffff)
        ieq r34.xzw, r34.xxzw, l(0x7f800000, 0, 0x7f800000, 0x7f800000)
        or r22.w, r34.z, r34.x
        or r22.w, r34.w, r22.w
        movc r32.xyz, r22.wwww, l(1.000000,1.000000,0,0), r32.xyzx
        dp3 r39.x, r18.yzwy, r35.xyzx
        dp3 r39.y, r18.yzwy, r37.xyzx
        dp3 r39.z, r18.yzwy, r38.xyzx
        mad_sat r18.yzw, r39.xxyz, cb10[r21.w + 3].xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
        mul r39.xy, r18.yzyy, cb10[r21.w + 4].zwzz
        mul r39.z, r18.w, cb10[r21.w + 5].x
        add r18.yzw, r39.xxyz, cb10[r21.w + 5].yyzw
        dp3 r36.x, r11.xyzx, r35.xyzx
        dp3 r36.y, r11.xyzx, r37.xyzx
        dp3 r36.z, r11.xyzx, r38.xyzx
        lt r34.xzw, l(0.000000, 0.000000, 0.000000, 0.000000), r36.xxyz
        movc r20.z, r34.x, l(0), l(0.500000)
        add r35.xyz, r18.yzwy, r20.xyzx
        sample_l_indexable(texture3d)(float,float,float,float) r35.xyz, r35.xyzx, t17.xyzw, s4, l(0.000000)
        mul r37.xyz, r36.xyzx, r36.xyzx
        mul r37.xyz, r19.xxxx, r37.xyzx
        movc r21.z, r34.z, l(0), l(0.500000)
        add r38.xyz, r18.yzwy, r21.xyzx
        sample_l_indexable(texture3d)(float,float,float,float) r38.xyz, r38.xyzx, t18.xyzw, s4, l(0.000000)
        mul r38.xyz, r37.yyyy, r38.xyzx
        mad r35.xyz, r35.xyzx, r37.xxxx, r38.xyzx
        movc r23.z, r34.w, l(0), l(0.500000)
        add r18.yzw, r18.yyzw, r23.xxyz
        sample_l_indexable(texture3d)(float,float,float,float) r18.yzw, r18.yzwy, t19.wxyz, s4, l(0.000000)
        mad r18.yzw, r18.yyzw, r37.zzzz, r35.xxyz
        sample_l_indexable(texturecubearray)(float,float,float,float) r34.xzw, r36.xyzw, t8.xwyz, s2, l(6.000000)
        and r35.xyz, r34.xzwx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
        ieq r35.xyz, r35.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
        or r20.z, r35.y, r35.x
        or r20.z, r35.z, r20.z
        movc r34.xzw, r20.zzzz, l(1.000000,0,1.000000,0), r34.xxzw
        mul r35.xyz, r18.yzwy, r34.xzwx
        dp3 r20.z, r35.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
        mad r29.xyz, r18.yzwy, r34.xzwx, r29.xyzx
        mul r18.y, r13.w, r20.z
        mul r32.xyz, r19.xxxx, r32.xyzx
        dp3 r18.z, r32.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
        mad r18.z, r13.w, r20.z, r18.z
        div r18.y, r18.y, r18.z
        mad r30.xyz, r32.xyzx, r18.yyyy, r30.xyzx
      else 
        mov r22.x, r31.x
        mov r31.xz, r22.xxyx
      endif 
    endloop 
    mov r24.xyz, r29.xyzx
    mov r27.xyz, r30.xyzx
    mov r28.xy, r31.xzxx
    iadd r17.w, r17.w, l(32)
  endloop 
  ge r9.w, r26.z, l(1.000000)
  and r13.z, r26.w, l(0x0000ff00)
  bfi r13.z, l(8), l(0), r28.y, r13.z
  movc r17.x, r9.w, r13.z, r28.y
  max r9.w, r28.x, l(1.000000)
  rcp r9.w, r9.w
  mov_sat r28.x, r28.x
  mul r17.yzw, r9.wwww, r24.xxyz
  mul r33.xyz, r9.wwww, r27.xyzx
  lt r13.z, r28.x, l(0.990000)
  if_nz r13.z
    iadd r17.x, r17.x, l(256)
    add r13.z, -r28.x, l(1.000000)
    mul r13.w, r13.z, cb2[19].x
    add r18.xyz, r5.xyzx, -cb2[35].xyzx
    mul r19.x, r18.x, cb2[35].w
    mul r19.yz, r18.yyzy, cb2[36].xxyx
    add_sat r18.xyz, r19.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    mul r19.xy, r18.xyxx, cb2[36].zwzz
    mul r19.z, r18.z, cb2[37].x
    add r18.xyz, r19.xyzx, cb2[37].yzwy
    lt r19.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
    movc r19.xyz, r19.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
    mov r19.w, l(0)
    add r20.xyz, r18.xyzx, r19.wwxw
    sample_l_indexable(texture3d)(float,float,float,float) r20.xyz, r20.xyzx, t17.xyzw, s4, l(0.000000)
    mul r21.xyz, r11.xyzx, r11.xyzx
    mul r21.xyz, r13.wwww, r21.xyzx
    add r22.xyz, r18.xyzx, r19.wwyw
    sample_l_indexable(texture3d)(float,float,float,float) r22.xyz, r22.xyzx, t18.xyzw, s4, l(0.000000)
    mul r22.xyz, r21.yyyy, r22.xyzx
    mad r20.xyz, r20.xyzx, r21.xxxx, r22.xyzx
    add r18.xyz, r18.xyzx, r19.wwzw
    sample_l_indexable(texture3d)(float,float,float,float) r18.xyz, r18.xyzx, t19.xyzw, s4, l(0.000000)
    mad r18.xyz, r18.xyzx, r21.zzzz, r20.xyzx
    mov r11.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r19.xyz, r11.xyzw, t8.xyzw, s2, l(6.000000)
    mul r18.xyz, r18.xyzx, r19.xyzx
    dp3 r11.w, r18.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
    mad r17.yzw, r24.xxyz, r9.wwww, r18.xxyz
    mov r16.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r18.xyz, r16.xyzw, t8.xyzw, s2, r12.w
    mad r9.w, cb2[19].x, r13.z, -r11.w
    mad r9.w, r2.y, r9.w, r11.w
    mad r33.xyz, r18.xyzx, r9.wwww, r33.xyzx
  endif 
else 
  mov r17.yzw, l(0,0,0,0)
endif 
add r2.z, -r2.z, l(1.000000)
mad r15.yzw, r33.xxyz, r2.zzzz, r15.yyzw
add r2.z, r4.z, r2.x
log r2.z, |r2.z|
mul r2.z, r1.w, r2.z
exp r2.z, r2.z
add r2.z, r4.z, r2.z
add_sat r2.z, r2.z, l(-1.000000)
mul r2.z, r3.z, r2.z
mul r18.xyz, r4.zzzz, r17.yzwy
and r19.xyz, r3.wwww, r18.yzxy
mad r13.zw, r2.xxxy, l(0.000000, 0.000000, 0.984375, 0.984375), l(0.000000, 0.000000, 0.00781250, 0.00781250)
sample_l_indexable(texture2d)(float,float,float,float) r13.zw, r13.zwzz, t5.zwxy, s2, l(0.000000)
mul r15.yzw, r2.zzzz, r15.yyzw
mul r20.xyz, r13.zzzz, r15.yzwy
mul r21.xyz, r13.wwww, r15.yzwy
sqrt r2.y, r1.w
mad r2.y, r2.y, l(0.500000), l(0.500000)
mul r2.y, r2.y, r2.y
mul r2.z, r2.y, l(0.500000)
mad r2.y, -r2.y, l(0.500000), l(1.000000)
mad r3.z, r2.x, r2.y, r2.z
mul r2.yz, r2.yyzy, r3.zzzz
if_nz r6.w
  mov r22.x, l(3)
  mov r22.yzw, cb1[24].xxyz
  store_structured u2.xyzw, cb2[52].x, l(112), r22.xyzw
endif 
lt r3.z, l(0.000000), r8.w
if_nz r3.z
  if_nz r6.w
    ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r3.z, cb2[52].x, l(112), u2.xxxx
    or r3.z, r3.z, l(4)
    store_structured u2.x, cb2[52].x, l(112), r3.z
    store_structured u2.x, cb2[52].x, l(128), r10.w
  endif 
  lt r3.z, l(0.000000), r10.w
  if_nz r3.z
    mul r3.z, r0.w, cb2[18].w
    mul r3.z, r7.w, r3.z
    if_nz cb2[23].x
      add r22.xyz, r5.xyzx, cb1[24].xyzx
      mov r22.w, l(1.000000)
      dp4 r9.w, cb2[24].xyzw, r22.xyzw
      dp4 r11.w, cb2[25].xyzw, r22.xyzw
      frc r22.x, r9.w
      frc r22.y, r11.w
      iadd r9.w, l(-1), cb2[23].x
      utof r22.z, r9.w
      sample_l_indexable(texture2darray)(float,float,float,float) r15.yzw, r22.xyzx, t20.wxyz, s2, l(0.000000)
      add r15.yzw, r15.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
      mad r15.yzw, cb2[23].yyyy, r15.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
      mul r15.yzw, r15.yyzw, cb2[18].xxyz
    else 
      mov r15.yzw, cb2[18].xxyz
    endif 
    ushr r9.w, cb2[53].x, l(16)
    ult r11.w, l(0), r9.w
    and r11.w, r1.y, r11.w
    and r11.w, r1.z, r11.w
    and r11.w, r3.x, r11.w
    if_nz r11.w
      iadd r9.w, r9.w, cb2[0].x
      imad r9.w, r9.w, l(15), l(-15)
      mad r11.w, |r2.w|, l(-0.200000), l(0.400000)
      lt r12.w, r2.w, l(0.000000)
      and r12.w, r3.w, r12.w
      movc r11.w, r12.w, -r11.w, r11.w
      mad r22.xyz, r11.xyzx, r11.wwww, r5.xyzx
      mov r23.xyz, cb9[r9.w + 4].yzwy
      mov r23.w, cb9[r9.w + 5].x
      mov r22.w, l(1.000000)
      dp4 r23.x, r23.xyzw, r22.xyzw
      mov r24.xyz, cb9[r9.w + 5].yzwy
      mov r24.w, cb9[r9.w + 6].x
      dp4 r23.y, r24.xyzw, r22.xyzw
      mad r13.zw, r23.xxxy, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
      add r23.x, r13.z, cb9[r9.w + 9].w
      add r23.y, r13.w, cb9[r9.w + 10].x
      mul r13.zw, r23.xxxy, cb9[r9.w + 9].yyyz
      div r23.xy, cb9[r9.w + 3].yyyy, cb9[r9.w + 8].ywyy
      add r23.zw, -r23.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
      ge r23.zw, r13.zzzw, r23.zzzw
      ge r23.xy, r23.xyxx, r13.zwzz
      or r23.xy, r23.xyxx, r23.zwzz
      or r11.w, r23.y, r23.x
      if_z r11.w
        mov r23.xyz, cb9[r9.w + 6].yzwy
        mov r23.w, cb9[r9.w + 7].x
        dp4 r11.w, r23.xyzw, r22.xyzw
        mov_sat r13.zw, r13.zzzw
        mad r22.x, r13.z, cb9[r9.w + 8].y, cb9[r9.w + 8].z
        mad r22.y, r13.w, cb9[r9.w + 8].w, cb9[r9.w + 9].x
        add r11.w, r11.w, cb9[r9.w + 10].y
        div r11.w, r11.w, cb9[r9.w + 10].z
        max r11.w, r11.w, l(0.00006104)
        and r12.w, l(0x0000ffff), cb9[r9.w + 1].w
        if_nz cb2[58].y
          mov r23.x, -r13.x
          utof r24.z, r12.w
          mov r23.y, r14.x
          mov r23.z, r13.x
          mov r13.zw, l(0,0,0,0)
          loop 
            ige r14.w, r13.w, l(8)
            breakc_nz r14.w
            dp2 r25.x, icb[r13.w + 4].yxyy, r23.xyxx
            dp2 r25.y, icb[r13.w + 4].yxyy, r23.yzyy
            mad r24.xy, r25.xyxx, cb9[r9.w + 3].yyyy, r22.xyxx
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r14.w, r24.xyzx, t9.xxxx, s13, r11.w
            mad r13.z, r14.w, l(0.125000), r13.z
            iadd r13.w, r13.w, l(1)
          endloop 
        else 
          utof r22.z, r12.w
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r13.z, r22.xyzx, t9.xxxx, s13, r11.w
        endif 
        mul r9.w, r13.z, r13.z
        mul r9.w, r13.z, r9.w
      else 
        mov r9.w, l(1.000000)
      endif 
      mul r10.w, r9.w, r10.w
    else 
      and r9.w, cb2[53].x, l(0x0000ffff)
      ult r11.w, l(0), r9.w
      not r12.w, r3.y
      and r11.w, r11.w, r12.w
      if_nz r11.w
        iadd r9.w, r9.w, cb2[0].x
        imad r9.w, r9.w, l(15), l(-15)
        mad r11.w, |r2.w|, l(-0.200000), l(0.400000)
        lt r12.w, r2.w, l(0.000000)
        and r12.w, r3.w, r12.w
        movc r11.w, r12.w, -r11.w, r11.w
        mad r22.xyz, r11.xyzx, r11.wwww, r5.xyzx
        mov r23.xyz, cb9[r9.w + 4].yzwy
        mov r23.w, cb9[r9.w + 5].x
        mov r22.w, l(1.000000)
        dp4 r23.x, r23.xyzw, r22.xyzw
        mov r24.xyz, cb9[r9.w + 5].yzwy
        mov r24.w, cb9[r9.w + 6].x
        dp4 r23.y, r24.xyzw, r22.xyzw
        mad r13.zw, r23.xxxy, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
        add r23.x, r13.z, cb9[r9.w + 9].w
        add r23.y, r13.w, cb9[r9.w + 10].x
        mul r13.zw, r23.xxxy, cb9[r9.w + 9].yyyz
        div r23.xy, cb9[r9.w + 3].yyyy, cb9[r9.w + 8].ywyy
        add r23.zw, -r23.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
        ge r23.zw, r13.zzzw, r23.zzzw
        ge r23.xy, r23.xyxx, r13.zwzz
        or r23.xy, r23.xyxx, r23.zwzz
        or r11.w, r23.y, r23.x
        if_z r11.w
          mov r23.xyz, cb9[r9.w + 6].yzwy
          mov r23.w, cb9[r9.w + 7].x
          dp4 r11.w, r23.xyzw, r22.xyzw
          mov_sat r13.zw, r13.zzzw
          mad r22.x, r13.z, cb9[r9.w + 8].y, cb9[r9.w + 8].z
          mad r22.y, r13.w, cb9[r9.w + 8].w, cb9[r9.w + 9].x
          add r11.w, r11.w, cb9[r9.w + 10].y
          div r11.w, r11.w, cb9[r9.w + 10].z
          max r11.w, r11.w, l(0.00006104)
          and r12.w, l(0x0000ffff), cb9[r9.w + 1].w
          if_nz cb2[58].y
            mov r23.x, -r13.x
            utof r24.z, r12.w
            mov r23.y, r14.x
            mov r23.z, r13.x
            mov r13.zw, l(0,0,0,0)
            loop 
              ige r14.w, r13.w, l(8)
              breakc_nz r14.w
              dp2 r25.x, icb[r13.w + 4].yxyy, r23.xyxx
              dp2 r25.y, icb[r13.w + 4].yxyy, r23.yzyy
              mad r24.xy, r25.xyxx, cb9[r9.w + 3].yyyy, r22.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r14.w, r24.xyzx, t9.xxxx, s13, r11.w
              mad r13.z, r14.w, l(0.125000), r13.z
              iadd r13.w, r13.w, l(1)
            endloop 
          else 
            utof r22.z, r12.w
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r13.z, r22.xyzx, t9.xxxx, s13, r11.w
          endif 
          mul r9.w, r13.z, r13.z
          mul r9.w, r13.z, r9.w
        else 
          mov r9.w, l(1.000000)
        endif 
        mul r10.w, r9.w, r10.w
      endif 
    endif 
    mad r9.w, -r2.x, l(0.500000), l(1.000000)
    mad r9.w, -r8.w, r9.w, l(1.000000)
    mul r9.w, r9.w, r9.w
    mad r9.w, -r9.w, l(0.620000), l(0.620000)
    add r9.w, -r8.w, r9.w
    mad r8.w, r1.w, r9.w, r8.w
    mul r8.w, r10.w, r8.w
    mul r22.xyz, r15.yzwy, r8.wwww
    lt r2.w, l(0.000000), r2.w
    mad r22.xyz, r17.yzwy, r4.zzzz, r22.xyzx
    mad r17.yzw, -r5.xxyz, r0.zzzz, cb2[17].xxyz
    dp3 r0.z, r17.yzwy, r17.yzwy
    rsq r0.z, r0.z
    mul r17.yzw, r0.zzzz, r17.yyzw
    dp3 r0.z, r17.yzwy, r12.xyzx
    dp3 r4.z, r11.xyzx, r17.yzwy
    mad r9.w, |r4.z|, r0.w, -|r4.z|
    mad r4.z, |r4.z|, r9.w, l(1.000000)
    mad r7.w, r7.w, r2.y, r2.z
    mul r4.z, r4.z, r4.z
    mul r4.z, r7.w, r4.z
    rcp r4.z, r4.z
    mul r3.z, r3.z, r4.z
    mul r3.z, r3.z, r10.w
    mul r3.z, r3.z, l(0.250000)
    mad r23.yzw, r3.zzzz, r15.yyzw, r21.xxyz
    add_sat r0.z, -r0.z, l(1.000000)
    mul r4.z, r0.z, r0.z
    mul r4.z, r4.z, r4.z
    mul r0.z, r0.z, r4.z
    mul r0.z, r0.z, r3.z
    mad r17.yzw, r0.zzzz, r15.yyzw, r20.xxyz
    mad r15.yzw, r8.wwww, r15.yyzw, r19.zzxy
    and r24.xyz, r3.wwww, r15.zwyz
    mov r22.w, r19.z
    mov r18.w, r24.z
    movc r18.xyzw, r2.wwww, r22.xyzw, r18.xyzw
    mov r19.zw, r17.yyyz
    mov r24.zw, r20.xxxy
    movc r22.xyzw, r2.wwww, r19.xyzw, r24.xyzw
    mov r23.x, r17.w
    mov r21.w, r20.z
    movc r21.xyzw, r2.wwww, r23.yzwx, r21.xyzw
    if_nz r6.w
      ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r0.z, cb2[52].x, l(112), u2.xxxx
      or r0.z, r0.z, l(8)
      store_structured u2.x, cb2[52].x, l(112), r0.z
      store_structured u2.x, cb2[52].x, l(132), r10.w
    endif 
    mov r19.z, r18.w
    mov r19.xy, r22.xyxx
    mov r20.xy, r22.zwzz
    mov r20.z, r21.w
    mov r0.z, l(0x00010101)
  else 
    mov r0.z, l(257)
  endif 
else 
  mov r0.z, l(1)
endif 
not r2.w, r3.y
mov r22.x, -r13.x
mad r2.x, -r2.x, l(0.500000), l(1.000000)
mov r23.x, l(2)
mov r5.w, l(1.000000)
mov r24.x, l(2)
mov r25.z, l(1.000000)
mov r26.w, l(1.000000)
mov r27.w, l(1.000000)
mov r28.w, l(1.000000)
mov r22.z, r13.x
mov r29.w, l(1.000000)
mov r22.yw, r14.xxxx
mov r13.y, r22.w
mov r14.y, r22.x
mov r30.x, r14.x
mov r30.y, r22.x
mov r30.z, r13.x
mov r14.z, r13.x
mov r31.w, l(1.000000)
mov r32.x, r14.x
mov r32.y, r22.x
mov r32.z, r13.x
mov r33.x, r14.x
mov r33.y, r22.x
mov r33.z, r13.x
mov r15.yzw, r18.xxyz
mov r34.xyz, r19.zxyz
mov r35.xyz, r20.xyzx
mov r17.yzw, r21.xxyz
mov r3.y, cb2[58].y
mov r3.z, r0.z
mov r4.z, l(0)
loop 
  uge r7.w, r4.z, cb2[0].x
  breakc_nz r7.w
  ushr r7.w, r4.z, l(5)
  ld_structured r7.w, r7.w, l(0), g6.xxxx
  mov r36.xyz, r15.yzwy
  mov r37.xyz, r34.xyzx
  mov r38.xyz, r35.xyzx
  mov r39.xyz, r17.yzwy
  mov r8.w, r3.y
  mov r9.w, r3.z
  mov r10.w, r7.w
  loop 
    breakc_z r10.w
    firstbit_lo r11.w, r10.w
    ishl r12.w, l(1), r11.w
    not r12.w, r12.w
    and r10.w, r10.w, r12.w
    iadd r11.w, r4.z, r11.w
    imul null, r11.w, r11.w, l(15)
    ubfe r12.w, l(3), l(24), cb9[r11.w + 1].w
    ieq r13.z, r12.w, l(2)
    if_nz r13.z
      ubfe r13.z, l(3), l(27), cb9[r11.w + 1].w
      and r13.w, r9.w, l(255)
      ult r14.w, r13.w, l(32)
      and r14.w, r6.w, r14.w
      if_nz r14.w
        imad r13.w, r13.w, l(24), l(112)
        add r23.yzw, cb1[24].xxyz, cb9[r11.w + 0].xxyz
        store_structured u2.xyzw, cb2[52].x, r13.w, r23.xyzw
      endif 
      iadd r13.w, r9.w, l(1)
      add r40.xy, -r5.xyxx, cb9[r11.w + 3].zwzz
      add r40.z, -r5.z, cb9[r11.w + 4].x
      dp3 r14.w, r40.xyzx, r40.xyzx
      rsq r14.w, r14.w
      mul r23.yzw, r14.wwww, r40.xxyz
      mul r16.w, r0.w, cb9[r11.w + 1].z
      mul r16.w, r16.w, l(0.250000)
      dp3 r18.w, r11.xyzx, r23.yzwy
      mov_sat r19.w, r18.w
      movc r20.w, r3.w, |r18.w|, r19.w
      lt r21.w, l(0.000000), r20.w
      if_nz r21.w
        mov r41.xyz, cb9[r11.w + 7].yzwy
        mov r41.w, cb9[r11.w + 8].x
        dp4 r21.w, r41.xyzw, r5.xyzw
        lt r23.y, r21.w, l(1.000000)
        if_nz r23.y
          mov r23.yzw, l(0,1.000000,1.000000,1.000000)
          mov r25.w, l(0)
        else 
          add r42.xyz, -r5.xyzx, cb9[r11.w + 0].xyzx
          mul r30.w, cb9[r11.w + 3].x, cb9[r11.w + 3].x
          dp3 r32.w, r42.xyzx, r42.xyzx
          div r30.w, r30.w, r32.w
          min r30.w, r30.w, l(1.000000)
          mad_sat r42.xy, r21.wwww, cb9[r11.w + 2].xzxx, cb9[r11.w + 2].ywyy
          mul r42.zw, r42.xxxy, r42.xxxy
          mad r42.xy, r42.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
          mul r42.xy, r42.xyxx, r42.zwzz
          mul r30.w, r30.w, r42.x
          mul r30.w, r42.y, r30.w
          mov r42.xyz, cb9[r11.w + 4].yzwy
          mov r42.w, cb9[r11.w + 5].x
          dp4 r42.x, r42.xyzw, r5.xyzw
          mov r43.xyz, cb9[r11.w + 5].yzwy
          mov r43.w, cb9[r11.w + 6].x
          dp4 r42.y, r43.xyzw, r5.xyzw
          div r25.xy, r42.xyxx, r21.wwww
          lt r21.w, cb9[r11.w + 10].w, l(0.00048828)
          if_nz r21.w
            mad_sat r42.xy, |r25.xyxx|, cb9[r11.w + 12].xyxx, cb9[r11.w + 12].zwzz
            mul r42.zw, r42.xxxy, r42.xxxy
            mad r42.xy, r42.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
            mul r42.xy, r42.xyxx, r42.zwzz
            mul r21.w, r42.y, r42.x
          else 
            mul_sat r42.xyzw, |r25.yyxx|, cb9[r11.w + 11].xyzw
            log r42.xyzw, r42.xyzw
            mul r42.xyzw, r42.xyzw, cb9[r11.w + 12].zzzz
            exp r42.xyzw, r42.xyzw
            add r42.xy, r42.zwzz, r42.xyxx
            log r42.xy, r42.xyxx
            mul r42.xy, r42.xyxx, cb9[r11.w + 12].wwww
            exp r42.xy, r42.xyxx
            mul r32.w, r42.x, cb9[r11.w + 12].x
            mad r33.w, cb9[r11.w + 12].y, r42.y, l(-1.000000)
            mad r32.w, cb9[r11.w + 12].y, r42.y, -r32.w
            div_sat r32.w, r33.w, r32.w
            mul r33.w, r32.w, r32.w
            mad r32.w, r32.w, l(-2.000000), l(3.000000)
            mul r21.w, r32.w, r33.w
          endif 
          mul r25.w, r21.w, r30.w
          and r21.w, l(255), cb9[r11.w + 14].w
          if_nz r21.w
            dp3 r30.w, cb9[r11.w + 13].xyzx, r25.xyzx
            mov r42.x, cb9[r11.w + 13].w
            mov r42.yz, cb9[r11.w + 14].xxyx
            dp3 r25.x, r42.xyzx, r25.xyzx
            frc r42.x, r30.w
            frc r42.y, r25.x
            iadd r21.w, r21.w, l(-1)
            utof r42.z, r21.w
            sample_l_indexable(texture2darray)(float,float,float,float) r23.yzw, r42.xyzx, t20.wxyz, s2, l(0.000000)
          else 
            mov r23.yzw, l(0,1.000000,1.000000,1.000000)
          endif 
        endif 
        mov r42.x, cb9[r11.w + 0].w
        mov r42.yz, cb9[r11.w + 1].xxyx
        mul r23.yzw, r23.yyzw, r42.xxyz
        lt r21.w, l(0.000000), r25.w
        if_nz r21.w
          and r21.w, r13.w, l(255)
          iadd r25.x, r21.w, l(-1)
          ult r25.x, r25.x, l(32)
          and r25.x, r6.w, r25.x
          if_nz r25.x
            imad r25.xy, r21.wwww, l(24, 24, 0, 0), l(88, 104, 0, 0)
            ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r21.w, cb2[52].x, r25.x, u2.xxxx
            or r21.w, r21.w, l(4)
            store_structured u2.x, cb2[52].x, r25.x, r21.w
            store_structured u2.x, cb2[52].x, r25.y, r25.w
          endif 
          iadd r21.w, r9.w, l(257)
          ine r13.z, r13.z, l(1)
          if_nz r13.z
            mad r13.z, |r18.w|, l(-0.200000), l(0.400000)
            lt r25.x, r18.w, l(0.000000)
            and r25.x, r3.w, r25.x
            movc r13.z, r25.x, -r13.z, r13.z
            mad r26.xyz, r11.xyzx, r13.zzzz, r5.xyzx
            mov r42.xyz, cb9[r11.w + 6].yzwy
            mov r42.w, cb9[r11.w + 7].x
            dp4 r13.z, r42.xyzw, r26.xyzw
            dp4 r25.x, r41.xyzw, r26.xyzw
            ge r25.y, r25.x, r13.z
            if_nz r25.y
              mov r41.xyz, cb9[r11.w + 4].yzwy
              mov r41.w, cb9[r11.w + 5].x
              dp4 r41.x, r41.xyzw, r26.xyzw
              mov r42.xyz, cb9[r11.w + 5].yzwy
              mov r42.w, cb9[r11.w + 6].x
              dp4 r41.y, r42.xyzw, r26.xyzw
              div r26.xy, r41.xyxx, r25.xxxx
              mad_sat r26.xy, r26.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
              mad r41.x, r26.x, cb9[r11.w + 8].y, cb9[r11.w + 8].z
              mad r41.y, r26.y, cb9[r11.w + 8].w, cb9[r11.w + 9].x
              div r13.z, r13.z, r25.x
              max r13.z, r13.z, l(0.00006104)
              and r25.x, l(0x0000ffff), cb9[r11.w + 1].w
              if_nz r8.w
                utof r26.z, r25.x
                mov r25.y, l(0)
                mov r30.w, l(0)
                loop 
                  ige r32.w, r30.w, l(8)
                  breakc_nz r32.w
                  dp2 r42.x, icb[r30.w + 4].yxyy, r22.xyxx
                  dp2 r42.y, icb[r30.w + 4].yxyy, r22.yzyy
                  mad r26.xy, r42.xyxx, cb9[r11.w + 3].yyyy, r41.xyxx
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r26.x, r26.xyzx, t9.xxxx, s13, r13.z
                  mad r25.y, r26.x, l(0.125000), r25.y
                  iadd r30.w, r30.w, l(1)
                endloop 
              else 
                utof r41.z, r25.x
                sample_c_lz_indexable(texture2darray)(float,float,float,float) r25.y, r41.xyzx, t9.xxxx, s13, r13.z
              endif 
              mul r13.z, r25.y, r25.y
              mul r13.z, r25.y, r13.z
            else 
              mov r13.z, l(1.000000)
            endif 
          else 
            mov r13.z, l(1.000000)
          endif 
          mul r13.z, r13.z, r25.w
          lt r25.x, l(0.000000), r13.z
          if_nz r25.x
            ubfe r25.x, l(4), l(16), cb9[r11.w + 1].w
            ult r25.w, l(0), r25.x
            and r25.w, r1.y, r25.w
            and r25.w, r1.z, r25.w
            and r25.w, r3.x, r25.w
            if_nz r25.w
              iadd r25.x, r25.x, cb2[0].x
              imad r25.x, r25.x, l(15), l(-15)
              mad r25.w, |r18.w|, l(-0.200000), l(0.400000)
              lt r26.x, r18.w, l(0.000000)
              and r26.x, r3.w, r26.x
              movc r25.w, r26.x, -r25.w, r25.w
              mad r27.xyz, r11.xyzx, r25.wwww, r5.xyzx
              mov r41.xyz, cb9[r25.x + 6].yzwy
              mov r41.w, cb9[r25.x + 7].x
              dp4 r25.w, r41.xyzw, r27.xyzw
              mov r41.xyz, cb9[r25.x + 7].yzwy
              mov r41.w, cb9[r25.x + 8].x
              dp4 r26.x, r41.xyzw, r27.xyzw
              lt r26.y, r26.x, r25.w
              if_z r26.y
                mov r41.xyz, cb9[r25.x + 4].yzwy
                mov r41.w, cb9[r25.x + 5].x
                dp4 r41.x, r41.xyzw, r27.xyzw
                mov r42.xyz, cb9[r25.x + 5].yzwy
                mov r42.w, cb9[r25.x + 6].x
                dp4 r41.y, r42.xyzw, r27.xyzw
                div r27.xy, r41.xyxx, r26.xxxx
                mad r27.xy, r27.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                add r41.x, r27.x, cb9[r25.x + 9].w
                add r41.y, r27.y, cb9[r25.x + 10].x
                mul r27.xy, r41.xyxx, cb9[r25.x + 9].yzyy
                div r41.xy, cb9[r25.x + 3].yyyy, cb9[r25.x + 8].ywyy
                add r41.zw, -r41.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                ge r41.zw, r27.xxxy, r41.zzzw
                ge r41.xy, r41.xyxx, r27.xyxx
                or r41.xy, r41.xyxx, r41.zwzz
                or r26.z, r41.y, r41.x
                if_z r26.z
                  mov_sat r27.xy, r27.xyxx
                  mad r41.x, r27.x, cb9[r25.x + 8].y, cb9[r25.x + 8].z
                  mad r41.y, r27.y, cb9[r25.x + 8].w, cb9[r25.x + 9].x
                  mul r27.x, r26.x, cb9[r25.x + 10].z
                  mad r25.w, cb9[r25.x + 10].y, r26.x, r25.w
                  div r25.w, r25.w, r27.x
                endif 
              else 
                mov r26.z, l(-1)
              endif 
              or r26.x, r26.y, r26.z
              if_z r26.x
                max r25.w, r25.w, l(0.00006104)
                and r26.x, l(0x0000ffff), cb9[r25.x + 1].w
                if_nz r8.w
                  utof r27.z, r26.x
                  mov r26.yz, l(0,0,0,0)
                  loop 
                    ige r30.w, r26.z, l(8)
                    breakc_nz r30.w
                    dp2 r42.x, icb[r26.z + 4].yxyy, r22.xwxx
                    dp2 r42.y, icb[r26.z + 4].xyxx, r13.xyxx
                    mad r27.xy, r42.xyxx, cb9[r25.x + 3].yyyy, r41.xyxx
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r27.x, r27.xyzx, t9.xxxx, s13, r25.w
                    mad r26.y, r27.x, l(0.125000), r26.y
                    iadd r26.z, r26.z, l(1)
                  endloop 
                else 
                  utof r41.z, r26.x
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r26.y, r41.xyzx, t9.xxxx, s13, r25.w
                endif 
                mul r25.x, r26.y, r26.y
                mul r25.x, r26.y, r25.x
              else 
                mov r25.x, l(1.000000)
              endif 
              mul r13.z, r13.z, r25.x
            else 
              ubfe r25.x, l(4), l(20), cb9[r11.w + 1].w
              ult r25.w, l(0), r25.x
              and r25.w, r2.w, r25.w
              if_nz r25.w
                iadd r25.x, r25.x, cb2[0].x
                imad r25.x, r25.x, l(15), l(-15)
                mad r25.w, |r18.w|, l(-0.200000), l(0.400000)
                lt r26.x, r18.w, l(0.000000)
                and r26.x, r3.w, r26.x
                movc r25.w, r26.x, -r25.w, r25.w
                mad r28.xyz, r11.xyzx, r25.wwww, r5.xyzx
                mov r41.xyz, cb9[r25.x + 6].yzwy
                mov r41.w, cb9[r25.x + 7].x
                dp4 r25.w, r41.xyzw, r28.xyzw
                mov r41.xyz, cb9[r25.x + 7].yzwy
                mov r41.w, cb9[r25.x + 8].x
                dp4 r26.x, r41.xyzw, r28.xyzw
                lt r26.z, r26.x, r25.w
                if_z r26.z
                  mov r41.xyz, cb9[r25.x + 4].yzwy
                  mov r41.w, cb9[r25.x + 5].x
                  dp4 r27.x, r41.xyzw, r28.xyzw
                  mov r41.xyz, cb9[r25.x + 5].yzwy
                  mov r41.w, cb9[r25.x + 6].x
                  dp4 r27.y, r41.xyzw, r28.xyzw
                  div r27.xy, r27.xyxx, r26.xxxx
                  mad r27.xy, r27.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r28.x, r27.x, cb9[r25.x + 9].w
                  add r28.y, r27.y, cb9[r25.x + 10].x
                  mul r27.xy, r28.xyxx, cb9[r25.x + 9].yzyy
                  div r28.xy, cb9[r25.x + 3].yyyy, cb9[r25.x + 8].ywyy
                  add r41.xy, -r28.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                  ge r41.xy, r27.xyxx, r41.xyxx
                  ge r28.xy, r28.xyxx, r27.xyxx
                  or r28.xy, r28.xyxx, r41.xyxx
                  or r27.z, r28.y, r28.x
                  if_z r27.z
                    mov_sat r27.xy, r27.xyxx
                    mad r28.x, r27.x, cb9[r25.x + 8].y, cb9[r25.x + 8].z
                    mad r28.y, r27.y, cb9[r25.x + 8].w, cb9[r25.x + 9].x
                    mul r27.x, r26.x, cb9[r25.x + 10].z
                    mad r25.w, cb9[r25.x + 10].y, r26.x, r25.w
                    div r25.w, r25.w, r27.x
                  endif 
                else 
                  mov r27.z, l(-1)
                endif 
                or r26.x, r26.z, r27.z
                if_z r26.x
                  max r25.w, r25.w, l(0.00006104)
                  and r26.x, l(0x0000ffff), cb9[r25.x + 1].w
                  if_nz r8.w
                    utof r27.z, r26.x
                    mov r26.z, l(0)
                    mov r30.w, l(0)
                    loop 
                      ige r32.w, r30.w, l(8)
                      breakc_nz r32.w
                      dp2 r41.x, icb[r30.w + 4].xyxx, r30.xyxx
                      dp2 r41.y, icb[r30.w + 4].yxyy, r30.xzxx
                      mad r27.xy, r41.xyxx, cb9[r25.x + 3].yyyy, r28.xyxx
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r27.x, r27.xyzx, t9.xxxx, s13, r25.w
                      mad r26.z, r27.x, l(0.125000), r26.z
                      iadd r30.w, r30.w, l(1)
                    endloop 
                  else 
                    utof r28.z, r26.x
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r26.z, r28.xyzx, t9.xxxx, s13, r25.w
                  endif 
                  mul r25.x, r26.z, r26.z
                  mul r25.x, r26.z, r25.x
                else 
                  mov r25.x, l(1.000000)
                endif 
                mul r13.z, r13.z, r25.x
              endif 
            endif 
            mad r25.x, -r20.w, r2.x, l(1.000000)
            mul r25.x, r25.x, r25.x
            mad r25.x, -r25.x, l(0.620000), l(0.620000)
            add r25.x, -r20.w, r25.x
            mad r20.w, r1.w, r25.x, r20.w
            mul r20.w, r13.z, r20.w
            lt r18.w, l(0.000000), r18.w
            mad r27.xyz, r20.wwww, r23.yzwy, r36.xyzx
            mad r28.xyz, r40.xyzx, r14.wwww, r12.xyzx
            dp3 r14.w, r28.xyzx, r28.xyzx
            rsq r14.w, r14.w
            mul r28.xyz, r14.wwww, r28.xyzx
            dp3 r14.w, r28.xyzx, r12.xyzx
            dp3 r25.x, r11.xyzx, r28.xyzx
            mad r25.w, |r25.x|, r0.w, -|r25.x|
            mad r25.x, |r25.x|, r25.w, l(1.000000)
            mad r25.w, r19.w, r2.y, r2.z
            mul r25.x, r25.x, r25.x
            mul r25.x, r25.w, r25.x
            rcp r25.x, r25.x
            mul r16.w, r16.w, r19.w
            mul r16.w, r16.w, r25.x
            mul r16.w, r13.z, r16.w
            mad r28.xyz, r16.wwww, r23.yzwy, r39.xyzx
            add_sat r14.w, -r14.w, l(1.000000)
            mul r19.w, r14.w, r14.w
            mul r19.w, r19.w, r19.w
            mul r14.w, r14.w, r19.w
            mul r14.w, r14.w, r16.w
            mad r40.xyz, r14.wwww, r23.yzwy, r38.xyzx
            mad r23.yzw, r20.wwww, r23.yyzw, r37.xxyz
            movc r23.yzw, r3.wwww, r23.yyzw, r37.xxyz
            movc r36.xyz, r18.wwww, r27.xyzx, r36.xyzx
            movc r37.xyz, r18.wwww, r37.xyzx, r23.yzwy
            movc r38.xyz, r18.wwww, r40.xyzx, r38.xyzx
            movc r39.xyz, r18.wwww, r28.xyzx, r39.xyzx
            and r14.w, r21.w, l(255)
            iadd r16.w, r14.w, l(-1)
            ult r16.w, r16.w, l(32)
            and r16.w, r6.w, r16.w
            if_nz r16.w
              imad r23.yz, r14.wwww, l(0, 24, 24, 0), l(0, 88, 108, 0)
              ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r14.w, cb2[52].x, r23.y, u2.xxxx
              or r14.w, r14.w, l(8)
              store_structured u2.x, cb2[52].x, r23.y, r14.w
              store_structured u2.x, cb2[52].x, r23.z, r13.z
            endif 
            iadd r9.w, r9.w, l(0x00010101)
          else 
            mov r9.w, r21.w
          endif 
        else 
          mov r9.w, r13.w
        endif 
      else 
        mov r9.w, r13.w
      endif 
    else 
      ieq r12.w, r12.w, l(4)
      if_nz r12.w
        ubfe r12.w, l(3), l(27), cb9[r11.w + 1].w
        and r13.z, r9.w, l(255)
        ult r13.w, r13.z, l(32)
        and r13.w, r6.w, r13.w
        if_nz r13.w
          imad r13.z, r13.z, l(24), l(112)
          add r24.yzw, cb1[24].xxyz, cb9[r11.w + 0].xxyz
          store_structured u2.xyzw, cb2[52].x, r13.z, r24.xyzw
        endif 
        iadd r13.z, r9.w, l(1)
        mul r13.w, r0.w, cb9[r11.w + 1].z
        mul r13.w, r13.w, l(0.250000)
        lt r14.w, l(0.000000), cb9[r11.w + 6].y
        mov r27.xy, cb9[r11.w + 5].zwzz
        mov r27.z, cb9[r11.w + 6].x
        mad r23.yzw, -r27.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000), cb9[r11.w + 0].xxyz
        add r24.yzw, -r5.xxyz, r23.yyzw
        dp3 r16.w, r27.xyzx, r16.xyzx
        dp3 r18.w, r27.xyzx, r24.yzwy
        dp3 r19.w, r16.xyzx, r24.yzwy
        mad r20.w, -r16.w, r16.w, cb9[r11.w + 6].y
        mad r16.w, r16.w, r19.w, -r18.w
        div_sat r18.w, -r18.w, cb9[r11.w + 6].y
        div_sat r16.w, r16.w, r20.w
        div r19.w, r20.w, cb9[r11.w + 6].y
        mul r19.w, r19.w, l(10.000000)
        min r19.w, r19.w, l(1.000000)
        add r16.w, -r18.w, r16.w
        mad r16.w, r19.w, r16.w, r18.w
        mad r24.yzw, r16.wwww, r27.xxyz, r23.yyzw
        mad r23.yzw, r18.wwww, r27.xxyz, r23.yyzw
        movc r23.yzw, r14.wwww, r23.yyzw, cb9[r11.w + 0].xxyz
        movc r24.yzw, r14.wwww, r24.yyzw, cb9[r11.w + 0].xxyz
        add r24.yzw, -r5.xxyz, r24.yyzw
        add r23.yzw, -r5.xxyz, r23.yyzw
        dp3 r14.w, r24.yzwy, r24.yzwy
        rsq r14.w, r14.w
        mul r27.xyz, r14.wwww, r24.yzwy
        dp3 r16.w, r23.yzwy, r23.yzwy
        rsq r18.w, r16.w
        mul r23.yzw, r18.wwww, r23.yyzw
        dp3 r18.w, r11.xyzx, r23.yzwy
        mov_sat r19.w, r18.w
        movc r19.w, r3.w, |r18.w|, r19.w
        lt r20.w, l(0.000000), r19.w
        if_nz r20.w
          sqrt r20.w, r16.w
          mul r21.w, cb9[r11.w + 3].x, cb9[r11.w + 3].x
          div r16.w, r21.w, r16.w
          min r16.w, r16.w, l(1.000000)
          mad_sat r23.yz, r20.wwww, cb9[r11.w + 2].xxzx, cb9[r11.w + 2].yywy
          mul r25.xw, r23.yyyz, r23.yyyz
          mad r23.yz, r23.yyzy, l(0.000000, -2.000000, -2.000000, 0.000000), l(0.000000, 3.000000, 3.000000, 0.000000)
          mul r23.yz, r23.yyzy, r25.xxwx
          mul r16.w, r16.w, r23.y
          mul r16.w, r23.z, r16.w
          lt r20.w, l(0.000000), r16.w
          if_nz r20.w
            and r20.w, r13.z, l(255)
            iadd r21.w, r20.w, l(-1)
            ult r21.w, r21.w, l(32)
            and r21.w, r6.w, r21.w
            if_nz r21.w
              imad r23.yz, r20.wwww, l(0, 24, 24, 0), l(0, 88, 104, 0)
              ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r20.w, cb2[52].x, r23.y, u2.xxxx
              or r20.w, r20.w, l(4)
              store_structured u2.x, cb2[52].x, r23.y, r20.w
              store_structured u2.x, cb2[52].x, r23.z, r16.w
            endif 
            iadd r20.w, r9.w, l(257)
            ine r12.w, r12.w, l(1)
            if_nz r12.w
              mad r12.w, |r18.w|, l(-0.200000), l(0.400000)
              lt r21.w, r18.w, l(0.000000)
              and r21.w, r3.w, r21.w
              movc r12.w, r21.w, -r12.w, r12.w
              mad r23.yzw, r11.xxyz, r12.wwww, r5.xxyz
              add r23.yzw, r23.yyzw, -cb9[r11.w + 4].yyzw
              max r12.w, |r23.w|, |r23.z|
              max r12.w, r12.w, |r23.y|
              div r12.w, cb9[r11.w + 5].x, r12.w
              add r12.w, r12.w, cb9[r11.w + 5].y
              dp3 r21.w, r23.yzwy, r23.yzwy
              rsq r21.w, r21.w
              max r12.w, r12.w, l(0.00006104)
              and r25.x, l(0x0000ffff), cb9[r11.w + 1].w
              utof r40.w, r25.x
              mov r25.xw, l(0,0,0,0)
              loop 
                ige r26.x, r25.w, l(8)
                breakc_nz r26.x
                dp2 r28.y, icb[r25.w + 4].xyxx, r14.xyxx
                dp2 r28.z, icb[r25.w + 4].yxyy, r14.xzxx
                mul r41.yz, r28.yyzy, cb9[r11.w + 3].yyyy
                mul r41.x, r15.x, r41.y
                mul r41.w, r1.x, r41.y
                mad r40.xyz, r23.yzwy, r21.wwww, r41.xzwx
                sample_c_lz_indexable(texturecubearray)(float,float,float,float) r26.x, r40.xyzw, t10.xxxx, s13, r12.w
                mad r25.x, r26.x, l(0.125000), r25.x
                iadd r25.w, r25.w, l(1)
              endloop 
            else 
              mov r25.x, l(1.000000)
            endif 
            mul r12.w, r16.w, r25.x
            lt r16.w, l(0.000000), r12.w
            if_nz r16.w
              ubfe r16.w, l(4), l(16), cb9[r11.w + 1].w
              ult r21.w, l(0), r16.w
              and r21.w, r1.y, r21.w
              and r21.w, r1.z, r21.w
              and r21.w, r3.x, r21.w
              if_nz r21.w
                iadd r16.w, r16.w, cb2[0].x
                imad r16.w, r16.w, l(15), l(-15)
                mad r21.w, |r18.w|, l(-0.200000), l(0.400000)
                lt r23.y, r18.w, l(0.000000)
                and r23.y, r3.w, r23.y
                movc r21.w, r23.y, -r21.w, r21.w
                mad r29.xyz, r11.xyzx, r21.wwww, r5.xyzx
                mov r40.xyz, cb9[r16.w + 6].yzwy
                mov r40.w, cb9[r16.w + 7].x
                dp4 r21.w, r40.xyzw, r29.xyzw
                mov r40.xyz, cb9[r16.w + 7].yzwy
                mov r40.w, cb9[r16.w + 8].x
                dp4 r23.y, r40.xyzw, r29.xyzw
                lt r23.z, r23.y, r21.w
                if_z r23.z
                  mov r40.xyz, cb9[r16.w + 4].yzwy
                  mov r40.w, cb9[r16.w + 5].x
                  dp4 r28.x, r40.xyzw, r29.xyzw
                  mov r40.xyz, cb9[r16.w + 5].yzwy
                  mov r40.w, cb9[r16.w + 6].x
                  dp4 r28.y, r40.xyzw, r29.xyzw
                  div r28.xy, r28.xyxx, r23.yyyy
                  mad r28.xy, r28.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r29.x, r28.x, cb9[r16.w + 9].w
                  add r29.y, r28.y, cb9[r16.w + 10].x
                  mul r28.xy, r29.xyxx, cb9[r16.w + 9].yzyy
                  div r29.xy, cb9[r16.w + 3].yyyy, cb9[r16.w + 8].ywyy
                  add r40.xy, -r29.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                  ge r40.xy, r28.xyxx, r40.xyxx
                  ge r29.xy, r29.xyxx, r28.xyxx
                  or r29.xy, r29.xyxx, r40.xyxx
                  or r23.w, r29.y, r29.x
                  if_z r23.w
                    mov_sat r28.xy, r28.xyxx
                    mad r29.x, r28.x, cb9[r16.w + 8].y, cb9[r16.w + 8].z
                    mad r29.y, r28.y, cb9[r16.w + 8].w, cb9[r16.w + 9].x
                    mul r25.w, r23.y, cb9[r16.w + 10].z
                    mad r21.w, cb9[r16.w + 10].y, r23.y, r21.w
                    div r21.w, r21.w, r25.w
                  endif 
                else 
                  mov r23.w, l(-1)
                endif 
                or r23.y, r23.z, r23.w
                if_z r23.y
                  max r21.w, r21.w, l(0.00006104)
                  and r23.y, l(0x0000ffff), cb9[r16.w + 1].w
                  if_nz r8.w
                    utof r28.z, r23.y
                    mov r23.zw, l(0,0,0,0)
                    loop 
                      ige r25.w, r23.w, l(8)
                      breakc_nz r25.w
                      dp2 r40.x, icb[r23.w + 4].xyxx, r32.xyxx
                      dp2 r40.y, icb[r23.w + 4].yxyy, r32.xzxx
                      mad r28.xy, r40.xyxx, cb9[r16.w + 3].yyyy, r29.xyxx
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r25.w, r28.xyzx, t9.xxxx, s13, r21.w
                      mad r23.z, r25.w, l(0.125000), r23.z
                      iadd r23.w, r23.w, l(1)
                    endloop 
                  else 
                    utof r29.z, r23.y
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.z, r29.xyzx, t9.xxxx, s13, r21.w
                  endif 
                  mul r16.w, r23.z, r23.z
                  mul r16.w, r23.z, r16.w
                else 
                  mov r16.w, l(1.000000)
                endif 
                mul r12.w, r12.w, r16.w
              else 
                ubfe r16.w, l(4), l(20), cb9[r11.w + 1].w
                ult r21.w, l(0), r16.w
                and r21.w, r2.w, r21.w
                if_nz r21.w
                  iadd r16.w, r16.w, cb2[0].x
                  imad r16.w, r16.w, l(15), l(-15)
                  mad r21.w, |r18.w|, l(-0.200000), l(0.400000)
                  lt r23.y, r18.w, l(0.000000)
                  and r23.y, r3.w, r23.y
                  movc r21.w, r23.y, -r21.w, r21.w
                  mad r31.xyz, r11.xyzx, r21.wwww, r5.xyzx
                  mov r40.xyz, cb9[r16.w + 6].yzwy
                  mov r40.w, cb9[r16.w + 7].x
                  dp4 r21.w, r40.xyzw, r31.xyzw
                  mov r40.xyz, cb9[r16.w + 7].yzwy
                  mov r40.w, cb9[r16.w + 8].x
                  dp4 r23.y, r40.xyzw, r31.xyzw
                  lt r23.w, r23.y, r21.w
                  if_z r23.w
                    mov r40.xyz, cb9[r16.w + 4].yzwy
                    mov r40.w, cb9[r16.w + 5].x
                    dp4 r28.x, r40.xyzw, r31.xyzw
                    mov r40.xyz, cb9[r16.w + 5].yzwy
                    mov r40.w, cb9[r16.w + 6].x
                    dp4 r28.y, r40.xyzw, r31.xyzw
                    div r28.xy, r28.xyxx, r23.yyyy
                    mad r28.xy, r28.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r29.x, r28.x, cb9[r16.w + 9].w
                    add r29.y, r28.y, cb9[r16.w + 10].x
                    mul r28.xy, r29.xyxx, cb9[r16.w + 9].yzyy
                    div r29.xy, cb9[r16.w + 3].yyyy, cb9[r16.w + 8].ywyy
                    add r31.xy, -r29.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                    ge r31.xy, r28.xyxx, r31.xyxx
                    ge r29.xy, r29.xyxx, r28.xyxx
                    or r29.xy, r29.xyxx, r31.xyxx
                    or r25.w, r29.y, r29.x
                    if_z r25.w
                      mov_sat r28.xy, r28.xyxx
                      mad r29.x, r28.x, cb9[r16.w + 8].y, cb9[r16.w + 8].z
                      mad r29.y, r28.y, cb9[r16.w + 8].w, cb9[r16.w + 9].x
                      mul r26.x, r23.y, cb9[r16.w + 10].z
                      mad r21.w, cb9[r16.w + 10].y, r23.y, r21.w
                      div r21.w, r21.w, r26.x
                    endif 
                  else 
                    mov r25.w, l(-1)
                  endif 
                  or r23.y, r23.w, r25.w
                  if_z r23.y
                    max r21.w, r21.w, l(0.00006104)
                    and r23.y, l(0x0000ffff), cb9[r16.w + 1].w
                    if_nz r8.w
                      utof r28.z, r23.y
                      mov r23.w, l(0)
                      mov r25.w, l(0)
                      loop 
                        ige r26.x, r25.w, l(8)
                        breakc_nz r26.x
                        dp2 r31.x, icb[r25.w + 4].xyxx, r33.xyxx
                        dp2 r31.y, icb[r25.w + 4].yxyy, r33.xzxx
                        mad r28.xy, r31.xyxx, cb9[r16.w + 3].yyyy, r29.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r26.x, r28.xyzx, t9.xxxx, s13, r21.w
                        mad r23.w, r26.x, l(0.125000), r23.w
                        iadd r25.w, r25.w, l(1)
                      endloop 
                    else 
                      utof r29.z, r23.y
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.w, r29.xyzx, t9.xxxx, s13, r21.w
                    endif 
                    mul r16.w, r23.w, r23.w
                    mul r16.w, r23.w, r16.w
                  else 
                    mov r16.w, l(1.000000)
                  endif 
                  mul r12.w, r12.w, r16.w
                endif 
              endif 
              mad r16.w, -r19.w, r2.x, l(1.000000)
              mul r16.w, r16.w, r16.w
              mad r16.w, -r16.w, l(0.620000), l(0.620000)
              add r16.w, -r19.w, r16.w
              mad r16.w, r1.w, r16.w, r19.w
              mul r16.w, r12.w, r16.w
              mov r28.x, cb9[r11.w + 0].w
              mov r28.yz, cb9[r11.w + 1].xxyx
              lt r11.w, l(0.000000), r18.w
              mad r29.xyz, r16.wwww, r28.xyzx, r36.xyzx
              dp3_sat r18.w, r11.xyzx, r27.xyzx
              mad r24.yzw, r24.yyzw, r14.wwww, r12.xxyz
              dp3 r14.w, r24.yzwy, r24.yzwy
              rsq r14.w, r14.w
              mul r24.yzw, r14.wwww, r24.yyzw
              dp3 r14.w, r24.yzwy, r12.xyzx
              dp3 r19.w, r11.xyzx, r24.yzwy
              mad r21.w, |r19.w|, r0.w, -|r19.w|
              mad r19.w, |r19.w|, r21.w, l(1.000000)
              mad r21.w, r18.w, r2.y, r2.z
              mul r19.w, r19.w, r19.w
              mul r19.w, r21.w, r19.w
              rcp r19.w, r19.w
              mul r13.w, r13.w, r18.w
              mul r13.w, r13.w, r19.w
              mul r13.w, r12.w, r13.w
              mad r24.yzw, r13.wwww, r28.xxyz, r39.xxyz
              add_sat r14.w, -r14.w, l(1.000000)
              mul r18.w, r14.w, r14.w
              mul r18.w, r18.w, r18.w
              mul r14.w, r14.w, r18.w
              mul r13.w, r13.w, r14.w
              mad r27.xyz, r13.wwww, r28.xyzx, r38.xyzx
              mad r28.xyz, r16.wwww, r28.xyzx, r37.xyzx
              movc r28.xyz, r3.wwww, r28.xyzx, r37.xyzx
              movc r36.xyz, r11.wwww, r29.xyzx, r36.xyzx
              movc r37.xyz, r11.wwww, r37.xyzx, r28.xyzx
              movc r38.xyz, r11.wwww, r27.xyzx, r38.xyzx
              movc r39.xyz, r11.wwww, r24.yzwy, r39.xyzx
              and r11.w, r20.w, l(255)
              iadd r13.w, r11.w, l(-1)
              ult r13.w, r13.w, l(32)
              and r13.w, r6.w, r13.w
              if_nz r13.w
                imad r24.yz, r11.wwww, l(0, 24, 24, 0), l(0, 88, 108, 0)
                ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r11.w, cb2[52].x, r24.y, u2.xxxx
                or r11.w, r11.w, l(8)
                store_structured u2.x, cb2[52].x, r24.y, r11.w
                store_structured u2.x, cb2[52].x, r24.z, r12.w
              endif 
              iadd r9.w, r9.w, l(0x00010101)
            else 
              mov r9.w, r20.w
            endif 
          else 
            mov r9.w, r13.z
          endif 
        else 
          mov r9.w, r13.z
        endif 
      endif 
    endif 
  endloop 
  mov r15.yzw, r36.xxyz
  mov r34.xyz, r37.xyzx
  mov r35.xyz, r38.xyzx
  mov r17.yzw, r39.xxyz
  mov r3.z, r9.w
  iadd r4.z, r4.z, l(32)
endloop 
mad r1.xyz, r4.xwyx, l(1.000000, 3.000000, 2.000000, 0.000000), l(0.000000, 0.500000, -1.000000, 0.000000)
ftou r0.z, r1.y
mad r2.xyz, r7.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r0.w, r2.x
ieq r0.w, r0.z, r0.w
movc r2.xy, r0.wwww, r2.yzyy, l(-1.000000,0,0,0)
mad r4.xyz, r8.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r0.w, r4.x
ieq r0.w, r0.z, r0.w
movc r2.zw, r0.wwww, r4.yyyz, l(0,0,-1.000000,0)
mad r4.xyz, r9.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r0.w, r4.x
ieq r0.w, r0.z, r0.w
movc r3.xy, r0.wwww, r4.yzyy, l(-1.000000,0,0,0)
mad r4.xyz, r10.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r0.w, r4.x
ieq r0.z, r0.z, r0.w
movc r0.zw, r0.zzzz, r4.yyyz, l(0,0,-1.000000,0)
mov r4.xy, r2.xzxx
mov r4.z, r3.x
mov r4.w, r0.z
add r4.xyzw, -r1.xxxx, r4.xyzw
ge r4.xyzw, |r4.xyzw|, l(0.00902149, 0.00902149, 0.00902149, 0.00902149)
movc r4.xyzw, r4.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
add r0.z, r4.y, r4.x
add r0.z, r4.z, r0.z
add r0.z, r4.w, r0.z
mul r2.x, r2.w, r4.y
mad r2.x, r4.x, r2.y, r2.x
mad r2.x, r4.z, r3.y, r2.x
mad r0.w, r4.w, r0.w, r2.x
div r1.w, r0.w, r0.z
ge r0.z, l(0.000000), r0.z
movc r1.yz, r0.zzzz, l(0,0,0,0), r1.zzwz
and r0.zw, r0.xxxy, l(0, 0, 1, 1)
ieq r0.z, r0.w, r0.z
movc r1.xyz, r0.zzzz, r1.xyzx, r1.xzyx
mad r0.z, -r1.z, l(0.500000), r1.x
add r2.y, r0.z, r1.z
mad r2.z, -r1.y, l(0.500000), r0.z
add r2.x, r1.y, r2.z
mul r1.xyz, r6.xyzx, r15.yzwy
mad r1.xyz, r34.xyzx, r2.xyzx, r1.xyzx
mul r4.xyz, r35.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
mad r4.xyz, r17.yzwy, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
add r1.xyz, r1.xyzx, r4.xyzx
add r4.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r4.xyz, r4.xyzx, r35.xyzx
mad r2.xyz, r17.yzwy, r2.xyzx, r4.xyzx
mad r2.xyz, r15.yzwy, r6.xyzx, r2.xyzx
movc r1.xyz, r3.wwww, r1.xyzx, r2.xyzx
lt r0.z, l(0.000000), cb2[9].z
if_nz r0.z
  dp3 r0.z, r5.xyzx, r5.xyzx
  rsq r0.w, r0.z
  mul r2.xyz, r0.wwww, r5.xyzx
  sqrt r0.z, r0.z
  lt r0.w, l(0.000000), cb2[13].w
  if_nz r0.w
    mad r3.xy, r0.zzzz, cb2[15].xyxx, cb2[14].zwzz
    mul r3.xy, r3.xyxx, cb2[16].xyxx
    lt r0.w, l(0.010000), |r5.z|
    mul r4.xy, r5.zzzz, cb2[15].zwzz
    mul r4.zw, r4.xxxy, l(0.000000, 0.000000, -1.442695, -1.442695)
    exp r4.zw, r4.zzzw
    add r4.zw, -r4.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    div r4.xy, r4.zwzz, r4.xyxx
    mul r4.xy, r3.xyxx, r4.xyxx
    movc r3.xy, r0.wwww, r4.xyxx, r3.xyxx
    mul r4.xyz, r3.xxxx, cb2[12].xyzx
    exp r4.xyz, r4.xyzx
    mul r3.xyw, r3.yyyy, cb2[12].xyxz
    exp r3.xyw, r3.xyxw
    add r3.xyw, -r4.xyxz, r3.xyxw
    mad r3.xyw, cb2[13].wwww, r3.xyxw, r4.xyxz
  else 
    mad r0.w, r0.z, cb2[15].x, cb2[14].z
    mul r0.w, r0.w, cb2[16].x
    lt r1.w, l(0.010000), |r5.z|
    mul r2.w, r5.z, cb2[15].z
    mul r4.x, r2.w, l(-1.442695)
    exp r4.x, r4.x
    add r4.x, -r4.x, l(1.000000)
    div r2.w, r4.x, r2.w
    mul r2.w, r0.w, r2.w
    movc r0.w, r1.w, r2.w, r0.w
    mul r4.xyz, r0.wwww, cb2[12].xyzx
    exp r3.xyw, r4.xyxz
  endif 
  mad r3.xyw, r3.xyxw, cb2[9].zzzz, l(1.000000, 1.000000, 0.000000, 1.000000)
  add_sat r3.xyw, r3.xyxw, -cb2[9].zzzz
  dp3 r0.w, cb2[7].yzwy, -r2.xyzx
  mad r1.w, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r2.x, cb2[8].w, -r0.w, l(1.000000)
  mul r2.x, r2.x, r2.x
  mul r2.x, r2.x, l(12.566371)
  div r1.w, r1.w, r2.x
  add r0.z, r0.z, -cb2[10].w
  mul_sat r0.z, r0.z, cb2[11].w
  mul r0.z, r0.z, r1.w
  mov_sat r0.w, r0.w
  mad r0.w, r0.w, r0.w, l(1.000000)
  mad r0.w, r0.w, l(0.05968310), l(-1.000000)
  mad r0.w, cb2[8].z, r0.w, l(1.000000)
  mul r2.xyz, r0.zzzz, cb2[11].xyzx
  mad r2.xyz, r0.wwww, cb2[10].xyzx, r2.xyzx
  mul r2.xyz, r2.xyzx, cb2[9].wwww
  add r4.xyz, -r3.xywx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r2.xyz, r2.xyzx, r4.xyzx
  mad r2.xyz, r1.xyzx, r3.xywx, r2.xyzx
else 
  mul r0.z, r5.z, cb2[6].x
  mad r0.w, cb2[6].x, r5.z, cb2[5].x
  lt r1.w, |r0.z|, l(0.000100)
  min r2.w, r0.w, l(64.000000)
  mul r2.w, r2.w, l(1.442695)
  exp r2.w, r2.w
  mov_sat r3.x, cb2[6].z
  lt r3.y, r0.w, l(0.000000)
  add r0.w, r0.w, l(1.000000)
  movc r0.w, r3.y, r2.w, r0.w
  add r0.w, r0.w, -cb2[6].z
  movc r0.z, r1.w, l(1.000000), r0.z
  div r0.z, r0.w, r0.z
  movc r0.z, r1.w, r3.x, r0.z
  mul r0.z, r0.z, cb2[5].z
  dp3 r0.w, r5.xyzx, r5.xyzx
  sqrt r1.w, r0.w
  mad r0.z, r0.z, r1.w, cb2[5].w
  exp r0.z, r0.z
  min r0.z, r0.z, l(1.000000)
  add r0.z, -r0.z, l(1.000000)
  rsq r0.w, r0.w
  mul r3.xyw, r0.wwww, r5.xyxz
  dp3 r0.w, cb2[7].yzwy, r3.xywx
  mad_sat r0.w, cb2[8].y, r0.w, cb2[8].x
  add r4.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r4.xyzw, r0.wwww, r4.xyzw, cb2[4].xyzw
  mul r0.z, r0.z, r4.w
  add r3.xyw, -r1.xyxz, r4.xyxz
  mad r2.xyz, r0.zzzz, r3.xywx, r1.xyzx
endif 
mul r1.xyz, r2.xyzx, cb1[85].yyyy
ge r2.xyz, r1.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r1.xyz, r1.xyzx, r2.xyzx
min r1.xyz, r1.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
ilt r0.z, l(0), cb2[55].w
and r2.xyzw, cb2[55].wwww, l(32, 3, 64, 12)
ine r2.xz, r2.xxzx, l(0, 0, 0, 0)
ieq r2.yw, r2.yyyw, l(0, 0, 0, 0)
and r2.xy, r2.ywyy, r2.xzxx
and r2.xy, r2.xyxx, l(0x3e4ccccd, 0x3e4ccccd, 0, 0)
and r0.w, cb2[55].w, l(16)
ine r1.w, r0.w, l(0)
ieq r0.w, r0.w, l(0)
and r0.w, r0.w, r1.w
and r2.z, r0.w, l(0x3e4ccccd)
mad r2.xyz, r2.xyzx, cb1[85].xxxx, -r1.xyzx
mad r2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
movc r1.xyz, r0.zzzz, r2.xyzx, r1.xyzx
if_nz cb2[52].y
  if_nz cb2[53].y
    switch cb2[53].y
      case l(1)
      and r0.z, r3.z, l(255)
      break 
      case l(2)
      ubfe r0.z, l(8), l(8), r3.z
      break 
      case l(3)
      ubfe r0.z, l(8), l(16), r3.z
      break 
      case l(4)
      and r0.z, r17.x, l(255)
      break 
      case l(5)
      ubfe r0.z, l(8), l(8), r17.x
      break 
      default 
      mov r0.z, l(0)
      break 
    endswitch 
    utof r0.z, r0.z
    mul r0.z, r0.z, cb2[53].z
    mad r2.xyz, r0.zzzz, l(0.500000, 0.500000, 0.500000, 0.000000), -r1.xyzx
    mad r1.xyz, cb2[53].wwww, r2.xyzx, r1.xyzx
  endif 
endif 
store_uav_typed u0.xyzw, r0.xyyy, r1.xyzx
if_nz r6.w
  add r0.xyz, r5.xyzx, cb1[24].xyzx
  and r0.w, r3.z, l(255)
  store_structured u2.xyzw, cb2[52].x, l(92), r0.xyzw
  and r0.x, r17.x, l(255)
  store_structured u2.x, cb2[52].x, l(108), r0.x
endif 
if_nz cb2[52].y
  and r0.x, r3.z, l(255)
  atomic_iadd g8, l(0), r0.x
  ubfe r0.yz, l(0, 8, 8, 0), l(0, 8, 16, 0), r3.zzzz
  atomic_iadd g8, l(4), r0.y
  atomic_iadd g8, l(8), r0.z
  and r0.w, r17.x, l(255)
  atomic_iadd g8, l(12), r0.w
  ubfe r1.x, l(8), l(8), r17.x
  atomic_iadd g8, l(16), r1.x
  atomic_umax g9, l(0), r0.x
  atomic_umax g9, l(4), r0.y
  atomic_umax g9, l(8), r0.z
  atomic_umax g9, l(12), r0.w
  atomic_umax g9, l(16), r1.x
  imm_atomic_iadd r0.x, g7, l(0), l(1)
  ieq r0.x, r0.x, l(63)
  if_nz r0.x
    ld_raw r0.xyzw, l(0), g8.xyzw
    mov r1.xz, cb2[52].xxxx
    mov r1.yw, l(0,40,0,44)
    atomic_iadd u2, r1.xyxx, r0.x
    atomic_iadd u2, r1.zwzz, r0.y
    mov r1.xz, cb2[52].xxxx
    mov r1.yw, l(0,48,0,52)
    atomic_iadd u2, r1.xyxx, r0.z
    atomic_iadd u2, r1.zwzz, r0.w
    ld_raw r0.x, l(16), g8.xxxx
    mov r1.xz, cb2[52].xxxx
    mov r1.yw, l(0,56,0,0)
    atomic_iadd u2, r1.xyxx, r0.x
    ld_raw r0.xyzw, l(0), g9.xyzw
    atomic_umax u2, r1.zwzz, r0.x
    mov r1.xz, cb2[52].xxxx
    mov r1.yw, l(0,4,0,8)
    atomic_umax u2, r1.xyxx, r0.y
    atomic_umax u2, r1.zwzz, r0.z
    mov r1.xz, cb2[52].xxxx
    mov r1.yw, l(0,12,0,16)
    atomic_umax u2, r1.xyxx, r0.w
    ld_raw r1.x, l(16), g9.xxxx
    atomic_umax u2, r1.zwzz, r1.x
    ieq r1.yz, vThreadGroupID.xxyx, cb2[52].zzwz
    and r1.y, r1.z, r1.y
    if_nz r1.y
      store_structured u2.xyzw, cb2[52].x, l(20), r0.xyzw
      store_structured u2.x, cb2[52].x, l(36), r1.x
    endif 
  endif 
endif 
ret 
// Approximately 3170 instruction slots used
