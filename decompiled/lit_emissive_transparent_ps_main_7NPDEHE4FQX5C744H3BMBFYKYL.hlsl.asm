//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:33:56 2021
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float3 colorTint;                  // Offset:  160 Size:    12
//   float3 specColorTint;              // Offset:  176 Size:    12 [unused]
//   float baseNormalHeight;            // Offset:  188 Size:     4
//   float2 glossRange;                 // Offset:  192 Size:     8
//   float rowCount;                    // Offset:  200 Size:     4
//   float columnCount;                 // Offset:  204 Size:     4
//   float imageTime;                   // Offset:  208 Size:     4
//   float2 rotateUVs;                  // Offset:  212 Size:     8
//   float2 scrollUVs;                  // Offset:  224 Size:     8
//   float2 scaleUVs;                   // Offset:  232 Size:     8
//   float2 offsetUVs;                  // Offset:  240 Size:     8
//   float2 zoomUVs;                    // Offset:  248 Size:     8
//   float zoomRate;                    // Offset:  256 Size:     4
//   float layerDepth;                  // Offset:  260 Size:     4
//   bool clampU;                       // Offset:  264 Size:     4
//   bool clampV;                       // Offset:  268 Size:     4
//   float2 flickerSeed;                // Offset:  272 Size:     8
//   float flickerSpeed;                // Offset:  280 Size:     4
//   float2 flickerRange;               // Offset:  288 Size:     8
//   float flickerPower;                // Offset:  296 Size:     4
//   bool useAsCamo;                    // Offset:  300 Size:     4
//   uint zFeatherComputeSprites;       // Offset:  304 Size:     4 [unused]
//   float hdrScale;                    // Offset:  308 Size:     4
//   float emissiveFalloffPower;        // Offset:  312 Size:     4
//   float3 emissiveTint1;              // Offset:  320 Size:    12
//   bool relativeHDR;                  // Offset:  332 Size:     4
//   bool invertFalloff;                // Offset:  336 Size:     4
//   float uvMotionToggle1;             // Offset:  340 Size:     4
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16 [unused]
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16
//   float4 debugGlossOverride;         // Offset:  992 Size:    16
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for shaderConstantSetBuffer
// {
//
//   struct GpuShaderConstantSet
//   {
//       
//       float4 scriptVector0;          // Offset:    0
//       float4 scriptVector1;          // Offset:   16
//       float4 scriptVector2;          // Offset:   32
//       float4 scriptVector3;          // Offset:   48
//       float4 scriptVector4;          // Offset:   64
//       float4 scriptVector5;          // Offset:   80
//       float4 scriptVector6;          // Offset:   96
//       float4 scriptVector7;          // Offset:  112
//       float4 weaponParam0;           // Offset:  128
//       float4 weaponParam1;           // Offset:  144
//       float4 weaponParam2;           // Offset:  160
//       float4 weaponParam3;           // Offset:  176
//       float4 weaponParam4;           // Offset:  192
//       float4 weaponParam5;           // Offset:  208
//       float4 weaponParam6;           // Offset:  224
//       float4 weaponParam7;           // Offset:  240
//       float4 characterParam0;        // Offset:  256
//       float4 characterParam1;        // Offset:  272
//       float4 characterParam2;        // Offset:  288
//       float4 characterParam3;        // Offset:  304
//       float4 characterParam4;        // Offset:  320
//       float4 characterParam5;        // Offset:  336
//       float4 characterParam6;        // Offset:  352
//       float4 characterParam7;        // Offset:  368
//
//   } $Element;                        // Offset:    0 Size:   384
//
// }
//
// Resource bind info for modelInstanceBuffer
// {
//
//   struct ModelInstanceData
//   {
//       
//       uint boneArrayIndex;           // Offset:    0
//       uint shaderConstantSet;        // Offset:    4
//       uint flagsAndPrevFrameIndex;   // Offset:    8
//       uint worldMatrix;              // Offset:   12
//       uint siegeAnimStateOffset;     // Offset:   16
//       uint prevFrameSiegeAnimStateOffset;// Offset:   20
//
//   } $Element;                        // Offset:    0 Size:    24
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for forwardDecalConstants
// {
//
//   struct CoreDecalConstantsPack
//   {
//       
//       uint4 data[8];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   128
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// colorSampler                      sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// specColorSampler                  sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// normalSampler                     sampler      NA          NA             s5      1 
// aoSampler                         sampler      NA          NA             s6      1 
// lookupSampler                     sampler      NA          NA             s7      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// shaderConstantSetBuffer           texture  struct         r/o             t0      1 
// modelInstanceBuffer               texture  struct         r/o             t4      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// colorMap                          texture  float4          2d            t21      1 
// specColorMap                      texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// normalMap                         texture  float4          2d            t24      1 
// glossMap                          texture  float4          2d            t25      1 
// aoMap                             texture  float4          2d            t26      1 
// flickerLookupMap                  texture  float4          2d            t29      1 
// camoMaskMap                       texture  float4          2d            t30      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// visibleDecals                     texture    uint     2darray            t35      1 
// forwardDecalConstants             texture  struct         r/o            t36      1 
// normalBodyMap                     texture  float4          2d            t37      1 
// emissiveMap                       texture  float4          2d            t38      1 
// materialTexBC7                    texture  float4     2darray            t42      1 
// materialTexBC3                    texture  float4     2darray            t43      1 
// materialTexBC7linear              texture  float4     2darray            t44      1 
// materialTexMask                   texture  float4     2darray            t45      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyz 
// COLOR                    0   xyz         1     NONE   float   xyz 
// COLOR                    1      w        1     NONE   float       
// TEXCOORD                 0   xy          2     NONE   float   xy  
// UVOFFSETS                0   xyz         3     NONE   float   xyz 
// TEXCOORD                 4      w        3     NONE    uint      w
// TEXCOORD                 1   xyz         4     NONE   float   xyz 
// TEXCOORD                 2   xyz         5     NONE   float   xyz 
// TEXCOORD                 3   xyz         6     NONE   float   xyz 
// OFFPOSITION              0   xyz         7     NONE   float   xyz 
// SV_IsFrontFace           0   x           8    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[22], immediateIndexed
dcl_constantbuffer CB1[93], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_structured t0, 384
dcl_resource_structured t4, 24
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2d (float,float,float,float) t26
dcl_resource_texture2d (float,float,float,float) t29
dcl_resource_texture2d (float,float,float,float) t30
dcl_resource_texture2darray (float,float,float,float) t31
dcl_resource_texture2darray (uint,uint,uint,uint) t35
dcl_resource_structured t36, 128
dcl_resource_texture2d (float,float,float,float) t37
dcl_resource_texture2d (float,float,float,float) t38
dcl_resource_texture2darray (float,float,float,float) t42
dcl_resource_texture2darray (float,float,float,float) t43
dcl_resource_texture2darray (float,float,float,float) t44
dcl_resource_texture2darray (float,float,float,float) t45
dcl_input_ps_siv linear noperspective v0.xyz, position
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xy
dcl_input_ps constant v3.xyz
dcl_input_ps constant v3.w
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyz
dcl_input_ps_sgv constant v8.x, is_front_face
dcl_output o0.xyzw
dcl_temps 46
if_nz cb0[18].w
  ld_structured_indexable(structured_buffer, stride=24)(mixed,mixed,mixed,mixed) r0.x, v3.w, l(4), t4.xxxx
  ld_structured_indexable(structured_buffer, stride=384)(mixed,mixed,mixed,mixed) r0.yzw, r0.x, l(208), t0.xxyz
  ld_structured_indexable(structured_buffer, stride=384)(mixed,mixed,mixed,mixed) r1.xyz, r0.x, l(224), t0.xyzx
  ld_structured_indexable(structured_buffer, stride=384)(mixed,mixed,mixed,mixed) r2.xyz, r0.x, l(240), t0.xyzx
  sample_indexable(texture2d)(float,float,float,float) r3.xyz, v2.xyxx, t30.xyzw, s1
  dp3_sat o0.w, r3.xyzx, r0.yzwy
  mov r0.xy, v2.xyxx
  mov r0.z, l(1.000000)
  dp3 r1.x, r1.xyzx, r0.xyzx
  dp3 r1.y, r2.xyzx, r0.xyzx
else 
  mov r1.xy, v2.xyxx
  mov o0.w, l(1.000000)
endif 
ld_structured_indexable(structured_buffer, stride=24)(mixed,mixed,mixed,mixed) r0.x, v3.w, l(4), t4.xxxx
ld_structured_indexable(structured_buffer, stride=384)(mixed,mixed,mixed,mixed) r0.y, r0.x, l(236), t0.xxxx
ftoi r0.y, r0.y
and r0.y, r0.y, l(2)
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.xyxx, t21.xyzw, s1
add r3.xyz, cb0[10].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r3.xyz, r2.wwww, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r2.xyz, r2.xyzx, r3.xyzx
mul r2.xyz, r2.xyzx, v1.xyzx
sample_indexable(texture2d)(float,float,float,float) r3.xyz, r1.xyxx, t22.xyzw, s3
sample_indexable(texture2d)(float,float,float,float) r0.z, r1.xyxx, t26.yzxw, s6
sample_indexable(texture2d)(float,float,float,float) r0.w, r1.xyxx, t25.yzwx, s3
add r1.z, -cb0[12].x, cb0[12].y
mad r0.w, r0.w, r1.z, cb0[12].x
mul_sat r0.w, r0.w, l(0.05882353)
sample_indexable(texture2d)(float,float,float,float) r4.xyz, r1.xyxx, t24.xyzw, s5
add r4.xyz, r4.xyzx, l(-0.500000, -0.500000, -0.000000, 0.000000)
mad r4.xyz, cb0[11].wwww, r4.xyzx, l(0.500000, 0.500000, 0.000000, 0.000000)
mad r4.xy, r4.xyxx, l(1.99218750, 1.99218750, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r1.w, r4.z, r4.z
mul r1.w, r1.w, l(0.33333334)
min r1.w, r1.w, l(1.000000)
if_nz r0.y
  ld_structured_indexable(structured_buffer, stride=384)(mixed,mixed,mixed,mixed) r0.x, r0.x, l(192), t0.xxxx
  sample_indexable(texture2d)(float,float,float,float) r5.xyz, v2.xyxx, t37.xyzw, s5
  mad r5.xy, r5.xyxx, l(1.99218750, 1.99218750, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  dp2 r0.y, r5.xyxx, r5.xyxx
  add r0.y, -r0.y, l(1.000000)
  max r0.y, r0.y, l(0.000000)
  sqrt r6.z, r0.y
  mul r0.y, r5.z, r5.z
  mul r0.y, r0.y, l(0.33333334)
  min r0.y, r0.y, l(1.000000)
  mad r6.xy, r4.xyxx, r0.xxxx, r5.xyxx
  dp3 r2.w, r6.xyzx, r6.xyzx
  rsq r2.w, r2.w
  mul r4.xyw, r2.wwww, r6.xyxz
  mad r1.w, r1.w, r0.x, r0.y
else 
  dp2 r0.x, r4.xyxx, r4.xyxx
  add r0.x, -r0.x, l(1.000000)
  max r0.x, r0.x, l(0.000000)
  sqrt r4.w, r0.x
endif 
movc r0.x, v8.x, l(1.000000), l(-1.000000)
dp3 r0.y, v4.xyzx, v4.xyzx
rsq r0.y, r0.y
mul r5.xyz, r0.yyyy, v4.xyzx
mul r5.xyz, r0.xxxx, r5.xyzx
dp3 r0.y, v5.xyzx, v5.xyzx
rsq r0.y, r0.y
mul r6.xyz, r0.yyyy, v5.xyzx
mul r6.xyz, r0.xxxx, r6.xyzx
dp3 r0.y, v6.xyzx, v6.xyzx
rsq r0.y, r0.y
mul r7.xyz, r0.yyyy, v6.xyzx
mul r7.xyz, r0.xxxx, r7.xyzx
mul r0.y, r0.w, l(-17.000000)
exp r0.y, r0.y
add r0.y, r0.y, r1.w
log r0.y, r0.y
mul r7.xyz, r4.yyyy, r7.xyzx
mad r4.xyz, r6.xyzx, r4.xxxx, r7.xyzx
mad r4.xyz, r5.xyzx, r4.wwww, r4.xyzx
dp3 r0.w, r4.xyzx, r4.xyzx
rsq r0.w, r0.w
mul r4.xyz, r0.wwww, r4.xyzx
mad r0.w, cb1[62].x, r1.z, cb0[12].x
mul_sat r0.yw, r0.yyyw, l(0.000000, -0.05882353, 0.000000, 0.05882353)
mul r0.w, r0.w, l(-17.000000)
exp r0.w, r0.w
add r0.w, r0.w, r1.w
log r0.w, r0.w
mul_sat r0.w, r0.w, l(-0.05882353)
lt r1.z, l(0.000000), cb1[64].w
if_nz r1.z
  ftoi r1.z, cb1[64].w
  lod r1.w, r1.xyxx, t21.y, s1
  lod r2.w, r1.xyxx, t21.x, s1
  lt r1.w, r1.w, r2.w
  lt r2.w, l(0.000000), r2.w
  and r6.xyz, r1.zzzz, l(1, 2, 4, 0)
  movc r7.xyz, r6.xxxx, l(1.000000,0,1.000000,0), r2.xyzx
  movc r6.xyw, r6.yyyy, l(0,1.000000,0,1.000000), r2.xyxz
  movc r6.xyw, r2.wwww, r7.xyxz, r6.xyxw
  movc r7.xyz, r6.zzzz, l(0,1.000000,0,0), r2.xyzx
  movc r2.xyz, r1.wwww, r6.xywx, r7.xyzx
endif 
add r6.xyz, -r2.xyzx, cb1[58].xyzx
mad r2.xyz, cb1[58].wwww, r6.xyzx, r2.xyzx
add r6.xyz, -r3.xyzx, cb1[61].xyzx
mad r3.xyz, cb1[61].wwww, r6.xyzx, r3.xyzx
add r0.w, -r0.y, r0.w
mad r0.y, cb1[62].w, r0.w, r0.y
add r0.w, -r0.z, cb1[63].x
mad r0.z, cb1[63].w, r0.w, r0.z
movc r6.xyz, v8.xxxx, v4.xyzx, -v4.xyzx
dp3 r0.w, r6.xyzx, r6.xyzx
rsq r0.w, r0.w
mad r6.xyz, r6.xyzx, r0.wwww, -r4.xyzx
mad r4.xyz, cb1[60].wwww, r6.xyzx, r4.xyzx
ge r0.w, v0.z, l(0.984375)
mul r1.z, v0.z, l(1.01587307)
mad r1.w, v0.z, l(64.000000), l(-63.000000)
movc r0.w, r0.w, r1.w, r1.z
max r0.w, r0.w, l(0.00000001)
rcp r0.w, r0.w
ftou r1.zw, v0.yyyx
deriv_rtx_coarse r6.xyz, v7.xyzx
deriv_rty_coarse r7.xyz, v7.xyzx
iadd r2.w, cb2[0].y, cb2[0].x
add r8.xyz, v7.xyzx, cb1[24].xyzx
mul r0.w, r0.w, l(0.00781250)
min r0.w, r0.w, l(15.000000)
ftou r0.w, r0.w
ushr r9.xy, r1.wzww, l(6, 6, 0, 0)
ishl r9.z, r0.w, l(4)
and r0.w, cb2[57].z, l(-32)
iadd r3.w, -r0.w, cb2[57].z
mov r10.xy, l(0,0,0,0)
mov r11.w, l(0)
mov r8.w, l(1.000000)
mov r12.xyz, l(0,0,0,0)
mov r13.xyz, l(0,0,0,0)
mov r14.xyz, l(0,0,0,0)
mov r4.w, l(0)
mov r5.w, l(0)
mov r6.w, l(0)
loop 
  uge r7.w, r6.w, cb2[57].z
  breakc_nz r7.w
  ushr r10.z, r6.w, l(5)
  iadd r11.xyz, r9.xyzx, r10.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r7.w, r11.xyzw, t35.yzwx
  ieq r9.w, r0.w, r6.w
  ubfe r10.z, r3.w, l(0), r7.w
  movc r7.w, r9.w, r10.z, r7.w
  iadd r9.w, r2.w, r6.w
  mov r11.xyz, r12.xyzx
  mov r15.xyz, r13.xyzx
  mov r16.xyz, r14.xyzx
  mov r10.z, r4.w
  mov r10.w, r5.w
  mov r12.w, r7.w
  loop 
    breakc_z r12.w
    firstbit_lo r13.w, r12.w
    ishl r14.w, l(1), r13.w
    and r15.w, r12.w, r14.w
    if_nz r15.w
      xor r12.w, r12.w, r14.w
      iadd r14.w, r9.w, r13.w
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r17.xyzw, r14.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r18.xy, r14.w, l(16), t11.xyxx
      add r17.xyz, r17.xyzx, -v7.xyzx
      mov r18.z, r17.w
      lt r17.xyz, |r17.xyzx|, r18.zxyz
      and r14.w, r17.y, r17.x
      and r14.w, r17.z, r14.w
      if_nz r14.w
        iadd r13.w, r6.w, r13.w
        ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r17.xyz, r13.w, l(0), t36.xyzx
        ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r18.xyz, r13.w, l(16), t36.xyzx
        ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r19.xyz, r13.w, l(32), t36.xyzx
        mov r20.x, r17.x
        mov r20.y, r18.x
        mov r20.z, r19.x
        dp3 r14.w, r20.xyzx, r20.xyzx
        rsq r14.w, r14.w
        mul r21.xyz, r14.wwww, r20.xyzx
        dp3 r14.w, r21.xyzx, v4.xyzx
        ge r14.w, r14.w, l(0.500000)
        if_nz r14.w
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r22.xyw, r13.w, l(48), t36.xyxz
          mov r20.w, r22.x
          dp4 r20.x, r8.xyzw, r20.xyzw
          mov r23.x, r17.y
          mov r23.y, r18.y
          mov r23.z, r19.y
          mov r23.w, r22.y
          dp4 r20.y, r8.xyzw, r23.xyzw
          mov r22.x, r17.z
          mov r22.y, r18.z
          mov r22.z, r19.z
          dp4 r20.z, r8.xyzw, r22.xyzw
          lt r17.xyz, |r20.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
          and r14.w, r17.y, r17.x
          and r14.w, r17.z, r14.w
          if_nz r14.w
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r17.xyzw, r13.w, l(64), t36.xyzw
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r18.xyzw, r13.w, l(80), t36.xyzw
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r19.xyzw, r13.w, l(96), t36.xyzw
            dp3 r24.x, r6.xyzx, r23.xyzx
            dp3 r24.y, r6.xyzx, r22.xyzx
            dp3 r25.x, r7.xyzx, r23.xyzx
            dp3 r25.y, r7.xyzx, r22.xyzx
            mad r20.xy, r20.yzyy, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
            mul r24.xyz, r24.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
            mul r25.xyz, r25.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
            and r20.zw, r18.yyyz, l(0, 0, 0x0000ffff, 0x0000ffff)
            if_nz r20.z
              ubfe r14.w, l(4), l(24), r18.w
              ishl r14.w, l(1), r14.w
              ushr r15.w, r18.w, l(28)
              ishl r15.w, l(1), r15.w
              ieq r16.w, r20.z, l(4)
              if_nz r16.w
                and r16.w, r18.w, l(4095)
                ubfe r21.w, l(12), l(12), r18.w
                and r22.w, r19.w, l(1023)
                utof r26.xz, r14.wwww
                utof r26.y, r15.w
                mad r27.xy, r20.xyxx, r26.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                add r27.zw, r26.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                min r27.xy, r27.zwzz, r27.xyxx
                utof r28.x, r16.w
                utof r28.y, r21.w
                add r27.xy, r27.xyxx, r28.xyxx
                mul r27.xy, r27.xyxx, cb1[83].xyxx
                utof r27.z, r22.w
                mul r28.xyz, r24.zyzz, cb1[83].xyxx
                mul r28.xyz, r26.xyzx, r28.xyzx
                mul r29.xyz, r25.zyzz, cb1[83].xyxx
                mul r26.xyz, r26.xyzx, r29.xyzx
                sample_d_indexable(texture2darray)(float,float,float,float) r26.xyzw, r27.xyzx, t42.xyzw, s4, r28.xyzx, r26.xyzx
              else 
                ieq r16.w, r20.z, l(1)
                if_nz r16.w
                  and r16.w, r18.w, l(4095)
                  ubfe r18.w, l(12), l(12), r18.w
                  and r20.z, r19.w, l(1023)
                  utof r27.xz, r14.wwww
                  utof r27.y, r15.w
                  mad r28.xy, r20.xyxx, r27.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r28.zw, r27.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r28.xy, r28.zwzz, r28.xyxx
                  utof r29.x, r16.w
                  utof r29.y, r18.w
                  add r28.xy, r28.xyxx, r29.xyxx
                  mul r28.xy, r28.xyxx, cb1[83].zwzz
                  utof r28.z, r20.z
                  mul r29.xyz, r24.zyzz, cb1[83].zwzz
                  mul r29.xyz, r27.xyzx, r29.xyzx
                  mul r30.xyz, r25.zyzz, cb1[83].zwzz
                  mul r27.xyz, r27.xyzx, r30.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r26.xyzw, r28.xyzx, t43.xyzw, s4, r29.xyzx, r27.xyzx
                else 
                  mov r26.xyzw, l(1.000000,1.000000,1.000000,1.000000)
                endif 
              endif 
              mul r17.xyz, r17.xyzx, r26.xyzx
              mul r14.w, r17.w, r26.w
            else 
              mov r17.xyz, l(0,0,0,0)
              mov r14.w, l(0)
            endif 
            ne r15.w, r18.x, l(1.000000)
            add r16.w, r17.w, r14.w
            mad_sat r16.w, r16.w, r18.x, -r18.x
            movc r14.w, r15.w, r16.w, r14.w
            if_nz r20.w
              ubfe r15.w, l(4), l(24), r19.y
              ishl r15.w, l(1), r15.w
              ushr r16.w, r19.y, l(28)
              ishl r16.w, l(1), r16.w
              ieq r17.w, r20.w, l(2)
              if_nz r17.w
                and r17.w, r19.y, l(4095)
                ubfe r18.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r19.yyyw
                utof r26.xz, r15.wwww
                utof r26.y, r16.w
                mad r27.xy, r20.xyxx, r26.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                add r27.zw, r26.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                min r27.xy, r27.zwzz, r27.xyxx
                utof r28.x, r17.w
                utof r28.y, r18.x
                add r27.xy, r27.xyxx, r28.xyxx
                mul r27.xy, r27.xyxx, cb1[84].xyxx
                utof r27.z, r18.w
                mul r28.xyz, r24.zyzz, cb1[84].xyxx
                mul r28.xyz, r26.xyzx, r28.xyzx
                mul r29.xyz, r25.zyzz, cb1[84].xyxx
                mul r26.xyz, r26.xyzx, r29.xyzx
                sample_d_indexable(texture2darray)(float,float,float,float) r17.w, r27.xyzx, t45.yzwx, s4, r28.xyzx, r26.xyzx
              else 
                ieq r18.x, r20.w, l(4)
                if_nz r18.x
                  and r18.x, r19.y, l(4095)
                  ubfe r20.zw, l(0, 0, 12, 10), l(0, 0, 12, 20), r19.yyyw
                  utof r26.xz, r15.wwww
                  utof r26.y, r16.w
                  mad r27.xy, r20.xyxx, r26.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r27.zw, r26.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r27.xy, r27.zwzz, r27.xyxx
                  utof r28.x, r18.x
                  utof r28.y, r20.z
                  add r18.xw, r27.xxxy, r28.xxxy
                  mul r27.xy, r18.xwxx, cb1[83].xyxx
                  utof r27.z, r20.w
                  mul r28.xyz, r24.zyzz, cb1[83].xyxx
                  mul r28.xyz, r26.xyzx, r28.xyzx
                  mul r29.xyz, r25.zyzz, cb1[83].xyxx
                  mul r26.xyz, r26.xyzx, r29.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r17.w, r27.xyzx, t42.yzwx, s4, r28.xyzx, r26.xyzx
                else 
                  and r18.x, r19.y, l(4095)
                  ubfe r20.zw, l(0, 0, 12, 10), l(0, 0, 12, 20), r19.yyyw
                  utof r26.xz, r15.wwww
                  utof r26.y, r16.w
                  mad r27.xy, r20.xyxx, r26.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r27.zw, r26.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r27.xy, r27.zwzz, r27.xyxx
                  utof r28.x, r18.x
                  utof r28.y, r20.z
                  add r18.xw, r27.xxxy, r28.xxxy
                  mul r27.xy, r18.xwxx, cb1[83].zwzz
                  utof r27.z, r20.w
                  mul r28.xyz, r24.zyzz, cb1[83].zwzz
                  mul r28.xyz, r26.xyzx, r28.xyzx
                  mul r29.xyz, r25.zyzz, cb1[83].zwzz
                  mul r26.xyz, r26.xyzx, r29.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r17.w, r27.xyzx, t43.yzwx, s4, r28.xyzx, r26.xyzx
                endif 
              endif 
              mad r26.xyz, r17.wwww, l(0.960000, 0.960000, 0.960000, 0.000000), l(0.040000, 0.040000, 0.040000, 0.000000)
              add_sat r15.w, -r17.w, l(1.000000)
              mul r17.xyz, r15.wwww, r17.xyzx
            else 
              mov r26.xyz, l(0.040000,0.040000,0.040000,0)
            endif 
            ushr r18.xy, r18.zyzz, l(16, 16, 0, 0)
            if_nz r18.x
              ieq r15.w, r18.x, l(2)
              if_nz r15.w
                ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r13.w, r13.w, l(112), t36.xxxx
                ubfe r18.zw, l(0, 0, 4, 12), l(0, 0, 24, 12), r19.zzzz
                ishl r15.w, l(1), r18.z
                ushr r16.w, r19.z, l(28)
                ishl r16.w, l(1), r16.w
                and r17.w, r19.z, l(4095)
                and r13.w, r13.w, l(1023)
                utof r27.xz, r15.wwww
                utof r27.y, r16.w
                mad r19.yz, r20.xxyx, r27.zzyz, l(0.000000, 0.500000, 0.500000, 0.000000)
                add r20.zw, r27.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                min r19.yz, r19.yyzy, r20.zzwz
                utof r28.x, r17.w
                utof r28.y, r18.w
                add r18.zw, r19.yyyz, r28.xxxy
                mul r28.xy, r18.zwzz, cb1[84].xyxx
                utof r28.z, r13.w
                mul r29.xyz, r24.zyzz, cb1[84].xyxx
                mul r29.xyz, r27.xyzx, r29.xyzx
                mul r30.xyz, r25.zyzz, cb1[84].xyxx
                mul r27.xyz, r27.xyzx, r30.xyzx
                sample_d_indexable(texture2darray)(float,float,float,float) r13.w, r28.xyzx, t45.yzwx, s4, r29.xyzx, r27.xyzx
              else 
                ieq r15.w, r18.x, l(6)
                movc r13.w, r15.w, l(0), l(1.000000)
              endif 
            else 
              mov r13.w, l(1.000000)
            endif 
            mul_sat r13.w, r13.w, l(0.76470590)
            if_nz r18.y
              ieq r15.w, r18.y, l(3)
              if_nz r15.w
                ubfe r18.xyz, l(4, 12, 10, 0), l(24, 12, 10, 0), r19.xxwx
                ishl r15.w, l(1), r18.x
                ushr r16.w, r19.x, l(28)
                ishl r16.w, l(1), r16.w
                and r17.w, r19.x, l(4095)
                utof r19.xz, r15.wwww
                utof r19.y, r16.w
                mad r18.xw, r20.xxxy, r19.xxxy, l(0.500000, 0.000000, 0.000000, 0.500000)
                add r20.xy, r19.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                min r18.xw, r18.xxxw, r20.xxxy
                utof r20.x, r17.w
                utof r20.yz, r18.yyzy
                add r18.xy, r18.xwxx, r20.xyxx
                mul r20.xy, r18.xyxx, cb1[84].zwzz
                mul r18.xyz, r24.xyzx, cb1[84].zwzz
                mul r18.xyz, r19.xyzx, r18.xyzx
                mul r24.xyz, r25.xyzx, cb1[84].zwzz
                mul r19.xyz, r19.xyzx, r24.xyzx
                sample_d_indexable(texture2darray)(float,float,float,float) r18.xyz, r20.xyzx, t44.xyzw, s4, r18.xyzx, r19.xyzx
              else 
                mov r18.xyz, l(0.500000,0.500000,1.000000,0)
              endif 
              mad r18.xy, r18.xyxx, l(1.99218750, 1.99218750, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
              dp2 r15.w, r18.xyxx, r18.xyxx
              add r15.w, -r15.w, l(1.000000)
              max r15.w, r15.w, l(0.000000)
              sqrt r15.w, r15.w
              mul r16.w, r18.z, r18.z
              mul r16.w, r16.w, l(0.33333334)
              min r16.w, r16.w, l(1.000000)
              dp3 r17.w, r23.xyzx, r23.xyzx
              rsq r17.w, r17.w
              mul r19.xyz, r17.wwww, r23.xyzx
              dp3 r17.w, -r22.xyzx, -r22.xyzx
              rsq r17.w, r17.w
              mul r20.xyz, r17.wwww, -r22.xyzx
              mul r21.xyz, r0.xxxx, r21.xyzx
              mul r19.xyz, r0.xxxx, r19.xyzx
              mul r20.xyz, r0.xxxx, r20.xyzx
              mul r17.w, r13.w, l(-17.000000)
              exp r17.w, r17.w
              add r16.w, r16.w, r17.w
              log r16.w, r16.w
              mul r16.w, r16.w, l(-0.05882353)
              max r13.w, r16.w, l(0.000000)
              mul r18.yzw, r18.yyyy, r20.xxyz
              mad r18.xyz, r19.xyzx, r18.xxxx, r18.yzwy
              mad r18.xyz, r21.xyzx, r15.wwww, r18.xyzx
              dp3 r15.w, r18.xyzx, r18.xyzx
              rsq r15.w, r15.w
              mul r18.xyz, r15.wwww, r18.xyzx
              add r15.w, -r14.w, l(1.000000)
              mul r19.xyz, r15.wwww, r15.xyzx
              mad r15.xyz, r18.xyzx, r14.wwww, r19.xyzx
            endif 
            add r15.w, -r14.w, l(1.000000)
            mul r18.xyz, r11.xyzx, r15.wwww
            mad r11.xyz, r17.xyzx, r14.wwww, r18.xyzx
            mul r17.xyz, r15.wwww, r16.xyzx
            mad r16.xyz, r26.xyzx, r14.wwww, r17.xyzx
            mad r10.z, r10.z, r15.w, r14.w
            mul r15.w, r10.w, r15.w
            mad r10.w, r13.w, r14.w, r15.w
          endif 
        endif 
      endif 
    endif 
  endloop 
  mov r12.xyz, r11.xyzx
  mov r13.xyz, r15.xyzx
  mov r14.xyz, r16.xyzx
  mov r4.w, r10.z
  mov r5.w, r10.w
  iadd r6.w, r6.w, l(32)
endloop 
mov_sat r4.w, r4.w
add r0.x, -r4.w, l(1.000000)
mad r2.xyz, r2.xyzx, r0.xxxx, r12.xyzx
mad r4.xyz, r4.xyzx, r0.xxxx, r13.xyzx
dp3 r0.w, r4.xyzx, r4.xyzx
rsq r0.w, r0.w
mul r4.xyz, r0.wwww, r4.xyzx
mad r6.y, r0.y, r0.x, r5.w
mad r3.xyz, r3.xyzx, r0.xxxx, r14.xyzx
lt r0.y, l(0.500000), cb0[21].y
if_nz r0.y
  mul r0.y, cb0[12].w, cb0[12].z
  mul r0.w, r0.y, cb0[13].x
  mul r2.w, r0.w, cb1[69].w
  ge r2.w, r2.w, -r2.w
  movc r2.w, r2.w, r0.w, -r0.w
  div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
  mul r3.w, r3.w, cb1[69].w
  frc r3.w, r3.w
  mul r2.w, r2.w, r3.w
  div r0.w, r2.w, r0.w
  mul r0.y, r0.y, r0.w
  round_ne r0.y, r0.y
  div r0.w, r0.y, cb0[12].w
  mul r2.w, r0.y, cb0[12].w
  ge r2.w, r2.w, -r2.w
  movc r2.w, r2.w, cb0[12].w, -cb0[12].w
  div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
  mul r0.y, r0.y, r3.w
  frc r0.y, r0.y
  mul r0.y, r0.y, r2.w
  round_z r0.y, r0.y
  add r0.y, r0.y, r1.x
  div r7.x, r0.y, cb0[12].w
  round_z r0.y, r0.w
  add r0.y, r0.y, r1.y
  div r7.y, r0.y, cb0[12].z
else 
  dp3 r0.y, -v7.xyzx, -v7.xyzx
  rsq r0.y, r0.y
  mul r10.xyz, r0.yyyy, -v7.xyzx
  dp3 r11.x, r10.xyzx, v5.xyzx
  dp3 r11.y, r10.xyzx, v6.xyzx
  dp3 r0.y, r10.xyzx, v4.xyzx
  lt r0.w, l(0.000000), r0.y
  div r6.zw, -r11.xxxy, r0.yyyy
  and r0.yw, r0.wwww, r6.zzzw
  add r1.xy, r1.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
  add r2.w, cb0[16].y, l(0.000010)
  mul r0.yw, r0.yyyw, r2.wwww
  mul r0.yw, r0.yyyw, cb0[14].zzzw
  mad r0.yw, r1.xxxy, cb0[14].zzzw, r0.yyyw
  mad r0.yw, cb0[15].xxxy, cb0[14].zzzw, r0.yyyw
  mad r1.x, cb0[13].z, cb1[69].w, l(1.000000)
  mul r1.x, r1.x, cb0[13].y
  mul r1.x, r1.x, l(0.01745329)
  sincos r1.x, r10.x, r1.x
  mov r10.y, r10.x
  mov r10.z, r1.x
  dp2 r11.x, r10.yzyy, r0.ywyy
  mov r10.x, -r1.x
  dp2 r11.y, r10.xyxx, r0.ywyy
  mul r0.yw, cb0[14].xxxy, cb1[69].wwww
  mad r0.yw, r0.yyyw, cb0[14].zzzw, r11.xxxy
  mul r1.x, cb0[16].x, cb1[69].w
  sincos null, r1.x, r1.x
  mad r1.x, r1.x, l(0.500000), l(0.500000)
  add r1.x, -r1.x, l(1.000000)
  add r1.y, -cb0[15].z, cb0[15].w
  mad r1.x, r1.x, r1.y, cb0[15].z
  div r0.yw, r0.yyyw, r1.xxxx
  add r0.yw, r0.yyyw, l(0.000000, 0.500000, 0.000000, 0.500000)
  mov_sat r1.xy, r0.ywyy
  movc r7.xy, cb0[16].zwzz, r1.xyxx, r0.ywyy
endif 
dp3 r0.y, -v7.xyzx, -v7.xyzx
rsq r0.y, r0.y
mul r10.xyz, r0.yyyy, -v7.xyzx
dp3_sat r0.w, r10.xyzx, r5.xyzx
sample_indexable(texture2d)(float,float,float,float) r5.xyzw, r7.xyxx, t38.xyzw, s1
mul r5.xyz, r5.xyzx, cb0[20].xyzx
log r1.x, r0.w
mul r1.x, r1.x, cb0[19].z
exp r1.x, r1.x
add r0.w, -r0.w, l(1.000000)
log r0.w, r0.w
mul r0.w, r0.w, cb0[19].z
exp r0.w, r0.w
movc r0.w, cb0[21].x, r0.w, r1.x
eq r1.x, cb0[19].z, l(0.000000)
movc r0.w, r1.x, l(1.000000), r0.w
mul r1.x, r5.w, cb0[19].y
mul r0.w, r0.w, r1.x
mul r0.x, r0.x, r0.w
mul r5.xyz, r0.xxxx, r5.xyzx
add r0.x, v3.y, v3.x
add r0.x, r0.x, v3.z
add r0.x, r0.x, cb0[17].y
frc r0.x, r0.x
mad r1.y, cb1[69].w, cb0[17].z, r0.x
mov r1.x, cb0[17].x
sample_l_indexable(texture2d)(float,float,float,float) r0.x, r1.xyxx, t29.xyzw, s7, l(0.000000)
log r0.x, |r0.x|
mul r0.x, r0.x, cb0[18].z
exp r0.x, r0.x
add r0.w, -cb0[18].x, cb0[18].y
mad r0.x, r0.x, r0.w, cb0[18].x
mul r5.xyz, r0.xxxx, r5.xyzx
ine r0.x, cb1[92].x, l(0)
utof r1.xy, r1.zwzz
dp2 r0.w, r1.yxyy, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r0.w, r0.w
mul r0.w, r0.w, l(52.982918)
frc r0.w, r0.w
mad r0.w, r0.w, l(6.28318548), cb1[70].w
sincos r7.x, r11.x, r0.w
dp2 r0.w, r1.xyxx, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r0.w, r0.w
mul r0.w, r0.w, l(52.982918)
frc r0.w, r0.w
mad r0.w, r0.w, l(6.28318548), cb1[70].w
sincos r1.x, r12.x, r0.w
dp3_sat r6.x, r4.xyzx, r10.xyzx
dp3 r0.w, -r10.xyzx, r4.xyzx
add r0.w, r0.w, r0.w
mad r13.xyz, r4.xyzx, -r0.wwww, -r10.xyzx
mul r0.w, r6.y, l(17.000000)
exp r0.w, r0.w
add r0.w, r0.w, l(2.000000)
div r0.w, l(2.000000), r0.w
sqrt r1.y, r0.w
add r1.z, -r6.y, l(1.000000)
mul r1.w, r1.z, l(5.000000)
mad r2.w, r1.z, l(5.000000), l(-2.500000)
mul_sat r2.w, r2.w, l(0.400000)
mul r2.w, r2.w, l(100.000000)
mad r6.zw, -r1.zzzz, l(0.000000, 0.000000, 10.000000, 5.000000), l(0.000000, 0.000000, 6.857410, 7.085000)
exp r3.w, r6.z
mul r3.w, r3.w, r6.x
mul r3.w, r3.w, l(9.136810)
mul r5.w, r1.z, r1.w
mad r5.w, -r5.w, l(2.015905), r6.w
exp r5.w, r5.w
mul r5.w, r5.w, r6.x
mul r5.w, r5.w, l(9.708090)
max r3.w, r3.w, r5.w
max r3.w, r3.w, l(1.268160)
mov r14.xy, l(0,0,0,0)
mov r15.w, l(0)
mov r16.yz, l(0,0,1.000000,0)
mov r17.xy, l(0,0,0,0)
mov r18.xy, l(0,0,0,0)
mov r19.xy, l(0,0,0,0)
mov r20.x, l(1.000000)
mov r21.xyzw, l(0,0,0,0)
mov r22.yzw, l(0,0,0,0)
mov r5.w, l(0)
mov r6.z, l(0)
loop 
  uge r6.w, r6.z, cb2[0].y
  breakc_nz r6.w
  ushr r14.z, r6.z, l(5)
  iadd r15.xyz, r9.xyzx, r14.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r6.w, r15.xyzw, t7.yzwx
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r23.xyzw, r6.z, l(0), t15.wxyz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r6.z, l(16), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r6.z, l(32), t15.yxwz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r6.z, l(48), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r6.z, l(64), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r6.z, l(80), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r7.zw, r6.z, l(96), t15.xxxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r6.z, l(116), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r6.z, l(132), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r6.z, l(148), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r6.z, l(164), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r6.z, l(180), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r6.z, l(196), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xy, r6.z, l(212), t15.xyxx
  add r12.yzw, -r23.yyzw, v7.xxyz
  dp3 r9.w, r12.yzwy, r12.yzwy
  sqrt r9.w, r9.w
  ge r9.w, cb2[54].y, r9.w
  and r10.w, r29.y, l(0x0000ffff)
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r10.w, l(0), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r10.w, l(16), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r38.xyzw, r10.w, l(32), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r39.xyzw, r10.w, l(48), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r40.xyzw, r10.w, l(64), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r41.xyzw, r10.w, l(80), t16.xyzw
  dp3 r11.w, r36.xyzx, r12.yzwy
  add_sat r11.w, r36.w, r11.w
  dp3 r14.z, r37.xyzx, r12.yzwy
  add_sat r14.z, r37.w, r14.z
  mul r11.w, r11.w, r14.z
  dp3 r14.z, r38.xyzx, r12.yzwy
  add_sat r14.z, r38.w, r14.z
  mul r11.w, r11.w, r14.z
  dp3 r14.z, r39.xyzx, r12.yzwy
  add_sat r14.z, r39.w, r14.z
  mul r11.w, r11.w, r14.z
  dp3 r14.z, r40.xyzx, r12.yzwy
  add_sat r14.z, r40.w, r14.z
  mul r11.w, r11.w, r14.z
  dp3 r14.z, r41.xyzx, r12.yzwy
  add_sat r14.z, r41.w, r14.z
  mul r16.x, r11.w, r14.z
  and r11.w, r7.z, l(1)
  movc r14.zw, r11.wwww, r16.xxxy, r16.zzzx
  mov r15.xy, r29.zwzz
  mov r15.z, r30.z
  dp3 r11.w, r13.xyzx, r15.xyzx
  dp3 r15.x, r12.yzwy, r15.xyzx
  add r15.x, -r30.w, r15.x
  ge r15.y, r15.x, l(0.000000)
  max r15.x, r2.w, |r15.x|
  movc r15.x, r15.y, r15.x, -r15.x
  max r11.w, -r11.w, l(0.00000010)
  div r11.w, r15.x, r11.w
  min r11.w, |r11.w|, l(131072.000000)
  mov r30.z, r31.z
  dp3 r15.x, r13.xyzx, r30.xyzx
  dp3 r15.y, r12.yzwy, r30.xyzx
  add r15.y, -r31.w, r15.y
  ge r15.z, r15.y, l(0.000000)
  max r15.y, r2.w, |r15.y|
  movc r15.y, r15.z, r15.y, -r15.y
  max r15.x, -r15.x, l(0.00000010)
  div r15.x, r15.y, r15.x
  min r11.w, r11.w, |r15.x|
  mov r31.z, r32.z
  dp3 r15.x, r13.xyzx, r31.xyzx
  dp3 r15.y, r12.yzwy, r31.xyzx
  add r15.y, -r32.w, r15.y
  ge r15.z, r15.y, l(0.000000)
  max r15.y, r2.w, |r15.y|
  movc r15.y, r15.z, r15.y, -r15.y
  max r15.x, -r15.x, l(0.00000010)
  div r15.x, r15.y, r15.x
  min r11.w, r11.w, |r15.x|
  mov r32.z, r33.z
  dp3 r15.x, r13.xyzx, r32.xyzx
  dp3 r15.y, r12.yzwy, r32.xyzx
  add r15.y, -r33.w, r15.y
  ge r15.z, r15.y, l(0.000000)
  max r15.y, r2.w, |r15.y|
  movc r15.y, r15.z, r15.y, -r15.y
  max r15.x, -r15.x, l(0.00000010)
  div r15.x, r15.y, r15.x
  min r11.w, r11.w, |r15.x|
  mov r33.z, r34.x
  dp3 r15.x, r13.xyzx, r33.xyzx
  dp3 r15.y, r12.yzwy, r33.xyzx
  add r15.y, -r34.y, r15.y
  ge r15.z, r15.y, l(0.000000)
  max r15.y, r2.w, |r15.y|
  movc r15.y, r15.z, r15.y, -r15.y
  max r15.x, -r15.x, l(0.00000010)
  div r15.x, r15.y, r15.x
  min r11.w, r11.w, |r15.x|
  mov r35.zw, r34.zzzw
  dp3 r15.x, r13.zxyz, r35.xzwx
  dp3 r15.y, r12.wyzw, r35.xzwx
  add r15.y, -r35.y, r15.y
  ge r15.z, r15.y, l(0.000000)
  max r15.y, r2.w, |r15.y|
  movc r15.y, r15.z, r15.y, -r15.y
  max r15.x, -r15.x, l(0.00000010)
  div r15.x, r15.y, r15.x
  min r11.w, r11.w, |r15.x|
  mov r15.x, r26.w
  mov r15.yz, r27.zzwz
  add r15.xyz, r12.yzwy, r15.xyzx
  mad r15.xyz, r13.xyzx, r11.wwww, r15.xyzx
  dp3 r16.x, r15.xyzx, r15.xyzx
  sqrt r16.x, r16.x
  div r11.w, r11.w, r16.x
  add r11.w, r11.w, r11.w
  sqrt r11.w, r11.w
  mad r11.w, r1.z, l(5.000000), r11.w
  add r11.w, r11.w, l(-0.844800)
  mov r23.y, r24.z
  mov r23.z, r25.x
  dp3 r30.x, r15.xyzx, r23.xyzx
  mov r31.xy, r24.xwxx
  mov r31.z, r25.w
  dp3 r30.y, r15.xyzx, r31.xyzx
  mov r25.x, r24.y
  dp3 r30.z, r15.xyzx, r25.xyzx
  ubfe r15.xy, l(6, 9, 0, 0), l(25, 16, 0, 0), r29.yyyy
  utof r30.w, r15.y
  sample_l_indexable(texturecubearray)(float,float,float,float) r24.xyz, r30.xyzw, t8.xyzw, s2, r11.w
  and r29.yzw, r24.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
  ieq r29.yzw, r29.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
  or r11.w, r29.z, r29.y
  or r11.w, r29.w, r11.w
  movc r24.xyz, r11.wwww, l(1.000000,1.000000,0,0), r24.xyzx
  dp3 r32.x, r12.yzwy, r23.xyzx
  dp3 r32.y, r12.yzwy, r31.xyzx
  dp3 r32.z, r12.yzwy, r25.xyzx
  mad_sat r26.xyz, r32.xyzx, r26.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mov r27.z, r28.x
  mad r26.xyz, r26.xyzx, r27.xyzx, r28.yzwy
  dp3 r30.x, r4.xyzx, r23.xyzx
  dp3 r30.y, r4.xyzx, r31.xyzx
  dp3 r30.z, r4.xyzx, r25.xyzx
  lt r23.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r30.xyzx
  movc r17.z, r23.x, l(0), l(0.500000)
  add r25.xyz, r17.xyzx, r26.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r25.xyz, r25.xyzx, t17.xyzw, s4, l(0.000000)
  movc r18.z, r23.y, l(0), l(0.500000)
  add r23.xyw, r18.xyxz, r26.xyxz
  sample_l_indexable(texture3d)(float,float,float,float) r23.xyw, r23.xywx, t18.xywz, s4, l(0.000000)
  movc r19.z, r23.z, l(0), l(0.500000)
  add r26.xyz, r19.xyzx, r26.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r26.xyz, r26.xyzx, t19.xyzw, s4, l(0.000000)
  mul r27.xyz, r30.xyzx, r30.xyzx
  sample_l_indexable(texturecubearray)(float,float,float,float) r28.xyz, r30.xyzw, t8.xyzw, s2, l(6.000000)
  and r29.yzw, r28.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
  ieq r29.yzw, r29.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
  or r11.w, r29.z, r29.y
  or r11.w, r29.w, r11.w
  movc r28.xyz, r11.wwww, l(1.000000,1.000000,0,0), r28.xyzx
  mov r30.xyzw, r21.xyzw
  mov r29.yzw, r22.yyzw
  mov r11.w, r5.w
  mov r15.y, r6.w
  loop 
    breakc_z r15.y
    firstbit_lo r15.z, r15.y
    ishl r15.z, l(1), r15.z
    and r16.x, r15.z, r15.y
    if_nz r16.x
      not r15.z, r15.z
      and r15.y, r15.z, r15.y
      if_nz r9.w
        mov r15.z, r7.z
        mov r31.xy, r14.zwzz
        mov r16.x, l(1)
        loop 
          ige r16.w, r16.x, r15.x
          breakc_nz r16.w
          iadd r16.w, r10.w, r16.x
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r16.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r16.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r16.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r16.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r16.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r16.w, l(80), t16.xyzw
          dp3 r16.w, r32.xyzx, r12.yzwy
          add_sat r16.w, r32.w, r16.w
          mul r16.w, r16.w, r31.x
          dp3 r17.z, r33.xyzx, r12.yzwy
          add_sat r17.z, r33.w, r17.z
          mul r16.w, r16.w, r17.z
          dp3 r17.z, r34.xyzx, r12.yzwy
          add_sat r17.z, r34.w, r17.z
          mul r16.w, r16.w, r17.z
          dp3 r17.z, r35.xyzx, r12.yzwy
          add_sat r17.z, r35.w, r17.z
          mul r16.w, r16.w, r17.z
          dp3 r17.z, r36.xyzx, r12.yzwy
          add_sat r17.z, r36.w, r17.z
          mul r16.w, r16.w, r17.z
          dp3 r17.z, r37.xyzx, r12.yzwy
          add_sat r17.z, r37.w, r17.z
          mul r31.x, r16.w, r17.z
          ushr r17.w, r15.z, l(2)
          ubfe r18.z, l(1), l(2), r15.z
          and r18.w, r17.w, l(2)
          max r19.z, r31.x, r31.y
          mad r16.w, -r16.w, r17.z, l(1.000000)
          mul r16.w, r16.w, r31.y
          movc r20.y, r18.w, r16.w, r19.z
          movc r31.xy, r18.zzzz, r31.xyxx, r20.xyxx
          iadd r16.x, r16.x, l(1)
          mov r15.z, r17.w
        endloop 
        mov_sat r31.y, r31.y
        mul r15.z, r7.w, r31.y
        lt r16.x, l(0.000000), r15.z
        if_nz r16.x
          mad r32.z, r31.y, r7.w, r29.w
          mul r15.z, r29.x, r15.z
          mul r20.yzw, r15.zzzz, r27.xxyz
          mul r31.xzw, r20.zzzz, r23.xxyw
          mad r31.xzw, r25.xxyz, r20.yyyy, r31.xxzw
          mad r20.yzw, r26.xxyz, r20.wwww, r31.xxzw
          mul r31.xzw, r28.xxyz, r20.yyzw
          dp3 r16.x, r31.xzwx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r33.xyz, r20.yzwy, r28.xyzx, r30.xyzx
          mul r16.w, r3.w, r16.x
          mul r20.yzw, r15.zzzz, r24.xxyz
          dp3 r15.z, r20.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r15.z, r3.w, r16.x, r15.z
          div r15.z, r16.w, r15.z
          mov r34.x, r30.w
          mov r34.yz, r29.yyzy
          mad r32.xyw, r20.zwzy, r15.zzzz, r34.yzyx
          mov r33.w, r32.w
        else 
          mov r33.xyzw, r30.xyzw
          mov r32.xyz, r29.yzwy
        endif 
        mov r11.w, l(-1)
        mov r30.xyzw, r33.xyzw
        mov r29.yzw, r32.xxyz
        break 
      endif 
    endif 
  endloop 
  if_nz r11.w
    mov r21.xyzw, r30.xyzw
    mov r22.yzw, r29.yyzw
    mov r5.w, l(-1)
    break 
  endif 
  iadd r6.z, r6.z, l(32)
  mov r21.xyzw, r30.xyzw
  mov r22.yzw, r29.yyzw
  mov r5.w, r11.w
endloop 
if_z r5.w
  iadd r5.w, cb2[0].y, -cb2[58].x
  and r6.z, r5.w, l(-32)
  iadd r6.w, r5.w, -r6.z
  and r7.z, cb2[0].y, l(-32)
  iadd r7.w, -r7.z, cb2[0].y
  mov r14.xy, l(0,0,0,0)
  mov r15.w, l(0)
  mov r16.yz, l(0,0,1.000000,0)
  mov r17.xy, l(0,0,0,0)
  mov r18.x, l(1.000000)
  mov r19.xy, l(0,0,0,0)
  mov r20.xy, l(0,0,0,0)
  mov r23.xyzw, r21.xyzw
  mov r24.yzw, r22.yyzw
  mov r9.w, r6.z
  loop 
    uge r10.w, r9.w, cb2[0].y
    breakc_nz r10.w
    ushr r14.z, r9.w, l(5)
    iadd r15.xyz, r9.xyzx, r14.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r10.w, r15.xyzw, t7.yzwx
    ieq r11.w, r6.z, r9.w
    bfi r12.y, r6.w, l(0), l(0), r10.w
    movc r10.w, r11.w, r12.y, r10.w
    ieq r11.w, r7.z, r9.w
    ubfe r12.y, r7.w, l(0), r10.w
    movc r10.w, r11.w, r12.y, r10.w
    iadd r11.w, r9.w, cb2[0].x
    mov r25.xyzw, r23.xyzw
    mov r26.xyz, r24.yzwy
    mov r12.y, r10.w
    loop 
      breakc_z r12.y
      firstbit_lo r12.z, r12.y
      ishl r12.w, l(1), r12.z
      and r14.z, r12.w, r12.y
      if_nz r14.z
        xor r12.y, r12.w, r12.y
        iadd r12.w, r11.w, r12.z
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r27.xyzw, r12.w, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r15.xy, r12.w, l(16), t11.xyxx
        add r27.xyz, r27.xyzx, -v7.xyzx
        mov r15.z, r27.w
        lt r15.xyz, |r27.xyzx|, r15.zxyz
        and r12.w, r15.y, r15.x
        and r12.w, r15.z, r12.w
        if_nz r12.w
          iadd r12.z, r9.w, r12.z
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r12.z, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r14.zw, r12.z, l(96), t15.xxxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r12.z, l(116), t15.zwxy
          add r15.xyz, -r27.yzwy, v7.xyzx
          and r12.w, r28.w, l(0x0000ffff)
          ubfe r16.w, l(6), l(25), r28.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r12.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r12.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r12.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r12.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r12.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r12.w, l(80), t16.xyzw
          dp3 r17.w, r29.xyzx, r15.xyzx
          add_sat r17.w, r29.w, r17.w
          dp3 r18.z, r30.xyzx, r15.xyzx
          add_sat r18.z, r30.w, r18.z
          mul r17.w, r17.w, r18.z
          dp3 r18.z, r31.xyzx, r15.xyzx
          add_sat r18.z, r31.w, r18.z
          mul r17.w, r17.w, r18.z
          dp3 r18.z, r32.xyzx, r15.xyzx
          add_sat r18.z, r32.w, r18.z
          mul r17.w, r17.w, r18.z
          dp3 r18.z, r33.xyzx, r15.xyzx
          add_sat r18.z, r33.w, r18.z
          mul r17.w, r17.w, r18.z
          dp3 r18.z, r34.xyzx, r15.xyzx
          add_sat r18.z, r34.w, r18.z
          mul r16.x, r17.w, r18.z
          and r17.w, r14.z, l(1)
          movc r18.zw, r17.wwww, r16.xxxy, r16.zzzx
          mov r16.x, r14.z
          mov r29.xy, r18.zwzz
          mov r17.w, l(1)
          loop 
            ige r19.w, r17.w, r16.w
            breakc_nz r19.w
            iadd r19.w, r12.w, r17.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r19.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r19.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r19.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r19.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r19.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r19.w, l(80), t16.xyzw
            dp3 r19.w, r30.xyzx, r15.xyzx
            add_sat r19.w, r30.w, r19.w
            mul r19.w, r19.w, r29.x
            dp3 r20.w, r31.xyzx, r15.xyzx
            add_sat r20.w, r31.w, r20.w
            mul r19.w, r19.w, r20.w
            dp3 r20.w, r32.xyzx, r15.xyzx
            add_sat r20.w, r32.w, r20.w
            mul r19.w, r19.w, r20.w
            dp3 r20.w, r33.xyzx, r15.xyzx
            add_sat r20.w, r33.w, r20.w
            mul r19.w, r19.w, r20.w
            dp3 r20.w, r34.xyzx, r15.xyzx
            add_sat r20.w, r34.w, r20.w
            mul r19.w, r19.w, r20.w
            dp3 r20.w, r35.xyzx, r15.xyzx
            add_sat r20.w, r35.w, r20.w
            mul r29.x, r19.w, r20.w
            ushr r27.w, r16.x, l(2)
            ubfe r29.z, l(1), l(2), r16.x
            and r29.w, r27.w, l(2)
            max r30.x, r29.x, r29.y
            mad r19.w, -r19.w, r20.w, l(1.000000)
            mul r19.w, r19.w, r29.y
            movc r18.y, r29.w, r19.w, r30.x
            movc r29.xy, r29.zzzz, r29.xyxx, r18.xyxx
            iadd r17.w, r17.w, l(1)
            mov r16.x, r27.w
          endloop 
          mov_sat r29.y, r29.y
          mul r12.w, r14.w, r29.y
          lt r14.z, l(0.000000), r12.w
          if_nz r14.z
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r12.z, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r12.z, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r12.z, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r12.z, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r12.z, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r12.z, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r12.z, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r12.z, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r12.z, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xyzw, r12.z, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r40.xy, r12.z, l(212), t15.xyxx
            mad r26.z, r29.y, r14.w, r26.z
            mul r12.z, r28.z, r12.w
            mov r28.z, r35.z
            dp3 r12.w, r13.xyzx, r28.xyzx
            dp3 r14.z, r15.xyzx, r28.xyzx
            add r14.z, -r35.w, r14.z
            ge r14.w, r14.z, l(0.000000)
            max r14.z, r2.w, |r14.z|
            movc r14.z, r14.w, r14.z, -r14.z
            max r12.w, -r12.w, l(0.00000010)
            div r12.w, r14.z, r12.w
            min r12.w, |r12.w|, l(131072.000000)
            mov r35.z, r36.z
            dp3 r14.z, r13.xyzx, r35.xyzx
            dp3 r14.w, r15.xyzx, r35.xyzx
            add r14.w, -r36.w, r14.w
            ge r16.x, r14.w, l(0.000000)
            max r14.w, r2.w, |r14.w|
            movc r14.w, r16.x, r14.w, -r14.w
            max r14.z, -r14.z, l(0.00000010)
            div r14.z, r14.w, r14.z
            min r12.w, r12.w, |r14.z|
            mov r36.z, r37.z
            dp3 r14.z, r13.xyzx, r36.xyzx
            dp3 r14.w, r15.xyzx, r36.xyzx
            add r14.w, -r37.w, r14.w
            ge r16.x, r14.w, l(0.000000)
            max r14.w, r2.w, |r14.w|
            movc r14.w, r16.x, r14.w, -r14.w
            max r14.z, -r14.z, l(0.00000010)
            div r14.z, r14.w, r14.z
            min r12.w, r12.w, |r14.z|
            mov r37.z, r38.z
            dp3 r14.z, r13.xyzx, r37.xyzx
            dp3 r14.w, r15.xyzx, r37.xyzx
            add r14.w, -r38.w, r14.w
            ge r16.x, r14.w, l(0.000000)
            max r14.w, r2.w, |r14.w|
            movc r14.w, r16.x, r14.w, -r14.w
            max r14.z, -r14.z, l(0.00000010)
            div r14.z, r14.w, r14.z
            min r12.w, r12.w, |r14.z|
            mov r38.z, r39.x
            dp3 r14.z, r13.xyzx, r38.xyzx
            dp3 r14.w, r15.xyzx, r38.xyzx
            add r14.w, -r39.y, r14.w
            ge r16.x, r14.w, l(0.000000)
            max r14.w, r2.w, |r14.w|
            movc r14.w, r16.x, r14.w, -r14.w
            max r14.z, -r14.z, l(0.00000010)
            div r14.z, r14.w, r14.z
            min r12.w, r12.w, |r14.z|
            mov r40.zw, r39.zzzw
            dp3 r14.z, r13.zxyz, r40.xzwx
            dp3 r14.w, r15.zxyz, r40.xzwx
            add r14.w, -r40.y, r14.w
            ge r16.x, r14.w, l(0.000000)
            max r14.w, r2.w, |r14.w|
            movc r14.w, r16.x, r14.w, -r14.w
            max r14.z, -r14.z, l(0.00000010)
            div r14.z, r14.w, r14.z
            min r12.w, r12.w, |r14.z|
            mov r28.x, r32.w
            mov r28.yz, r33.zzwz
            add r18.yzw, r15.xxyz, r28.xxyz
            mad r18.yzw, r13.xxyz, r12.wwww, r18.yyzw
            dp3 r14.z, r18.yzwy, r18.yzwy
            sqrt r14.z, r14.z
            div r12.w, r12.w, r14.z
            add r12.w, r12.w, r12.w
            sqrt r12.w, r12.w
            mad r12.w, r1.z, l(5.000000), r12.w
            add r12.w, r12.w, l(-0.844800)
            mov r27.y, r30.z
            mov r27.z, r31.x
            dp3 r35.x, r18.yzwy, r27.xyzx
            mov r28.xy, r30.xwxx
            mov r28.z, r31.w
            dp3 r35.y, r18.yzwy, r28.xyzx
            mov r31.x, r30.y
            dp3 r35.z, r18.yzwy, r31.xyzx
            ubfe r14.z, l(9), l(16), r28.w
            utof r35.w, r14.z
            sample_l_indexable(texturecubearray)(float,float,float,float) r18.yzw, r35.xyzw, t8.wxyz, s2, r12.w
            and r29.xzw, r18.yyzw, l(0x7fffffff, 0, 0x7fffffff, 0x7fffffff)
            ieq r29.xzw, r29.xxzw, l(0x7f800000, 0, 0x7f800000, 0x7f800000)
            or r12.w, r29.z, r29.x
            or r12.w, r29.w, r12.w
            movc r18.yzw, r12.wwww, l(0,1.000000,1.000000,0), r18.yyzw
            dp3 r30.x, r15.xyzx, r27.xyzx
            dp3 r30.y, r15.xyzx, r28.xyzx
            dp3 r30.z, r15.xyzx, r31.xyzx
            mad_sat r15.xyz, r30.xyzx, r32.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
            mov r33.z, r34.x
            mad r15.xyz, r15.xyzx, r33.xyzx, r34.yzwy
            dp3 r35.x, r4.xyzx, r27.xyzx
            dp3 r35.y, r4.xyzx, r28.xyzx
            dp3 r35.z, r4.xyzx, r31.xyzx
            lt r27.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r35.xyzx
            movc r17.z, r27.x, l(0), l(0.500000)
            add r28.xyz, r15.xyzx, r17.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r28.xyz, r28.xyzx, t17.xyzw, s4, l(0.000000)
            mul r29.xzw, r35.xxyz, r35.xxyz
            mul r29.xzw, r12.zzzz, r29.xxzw
            movc r19.z, r27.y, l(0), l(0.500000)
            add r27.xyw, r15.xyxz, r19.xyxz
            sample_l_indexable(texture3d)(float,float,float,float) r27.xyw, r27.xywx, t18.xywz, s4, l(0.000000)
            mul r27.xyw, r29.zzzz, r27.xyxw
            mad r27.xyw, r28.xyxz, r29.xxxx, r27.xyxw
            movc r20.z, r27.z, l(0), l(0.500000)
            add r15.xyz, r15.xyzx, r20.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r15.xyz, r15.xyzx, t19.xyzw, s4, l(0.000000)
            mad r15.xyz, r15.xyzx, r29.wwww, r27.xywx
            sample_l_indexable(texturecubearray)(float,float,float,float) r27.xyz, r35.xyzw, t8.xyzw, s2, l(6.000000)
            and r28.xyz, r27.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
            ieq r28.xyz, r28.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
            or r12.w, r28.y, r28.x
            or r12.w, r28.z, r12.w
            movc r27.xyz, r12.wwww, l(1.000000,1.000000,0,0), r27.xyzx
            mul r28.xyz, r15.xyzx, r27.xyzx
            dp3 r12.w, r28.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r25.xyz, r15.xyzx, r27.xyzx, r25.xyzx
            mul r14.z, r3.w, r12.w
            mul r15.xyz, r12.zzzz, r18.yzwy
            dp3 r12.z, r15.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r12.z, r3.w, r12.w, r12.z
            div r12.z, r14.z, r12.z
            mov r27.x, r25.w
            mov r27.yz, r26.xxyx
            mad r26.xyw, r15.yzyx, r12.zzzz, r27.yzyx
            mov r25.w, r26.w
          endif 
        endif 
      endif 
    endloop 
    mov r23.xyzw, r25.xyzw
    mov r24.yzw, r26.xxyz
    iadd r9.w, r9.w, l(32)
  endloop 
  lt r7.z, r24.w, l(1.000000)
  if_nz r7.z
    mov r14.xy, l(0,0,0,0)
    mov r15.w, l(0)
    mov r16.yz, l(0,0,1.000000,0)
    mov r17.xy, l(0,0,0,0)
    mov r18.x, l(1.000000)
    mov r19.xy, l(0,0,0,0)
    mov r20.xy, l(0,0,0,0)
    mov r25.x, r23.w
    mov r25.yzw, r24.yyzw
    mov r12.yzw, r23.xxyz
    mov r7.z, r24.w
    mov r7.w, l(0)
    loop 
      uge r9.w, r7.w, r5.w
      breakc_nz r9.w
      ushr r14.z, r7.w, l(5)
      iadd r15.xyz, r9.xyzx, r14.xyzx
      ld_indexable(texture2darray)(uint,uint,uint,uint) r9.w, r15.xyzw, t7.yzwx
      ieq r10.w, r6.z, r7.w
      ubfe r11.w, r6.w, l(0), r9.w
      movc r9.w, r10.w, r11.w, r9.w
      iadd r10.w, r7.w, cb2[0].x
      mov r26.xyzw, r25.xyzw
      mov r15.xyz, r12.yzwy
      mov r11.w, r7.z
      mov r14.z, r9.w
      loop 
        breakc_z r14.z
        firstbit_lo r14.w, r14.z
        ishl r16.w, l(1), r14.w
        and r17.w, r14.z, r16.w
        if_nz r17.w
          xor r14.z, r14.z, r16.w
          iadd r16.w, r10.w, r14.w
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r27.xyzw, r16.w, l(0), t11.xyzw
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r28.xy, r16.w, l(16), t11.xyxx
          add r27.xyz, r27.xyzx, -v7.xyzx
          mov r28.z, r27.w
          lt r27.xyz, |r27.xyzx|, r28.zxyz
          and r16.w, r27.y, r27.x
          and r16.w, r27.z, r16.w
          if_nz r16.w
            iadd r14.w, r7.w, r14.w
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r14.w, l(0), t15.wxyz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r18.zw, r14.w, l(96), t15.xxxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r14.w, l(116), t15.zwxy
            add r29.xyz, -r27.yzwy, v7.xyzx
            and r16.w, r28.w, l(0x0000ffff)
            ubfe r17.w, l(6), l(25), r28.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r16.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r16.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r16.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r16.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r16.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r16.w, l(80), t16.xyzw
            dp3 r19.w, r30.xyzx, r29.xyzx
            add_sat r19.w, r30.w, r19.w
            dp3 r20.w, r31.xyzx, r29.xyzx
            add_sat r20.w, r31.w, r20.w
            mul r19.w, r19.w, r20.w
            dp3 r20.w, r32.xyzx, r29.xyzx
            add_sat r20.w, r32.w, r20.w
            mul r19.w, r19.w, r20.w
            dp3 r20.w, r33.xyzx, r29.xyzx
            add_sat r20.w, r33.w, r20.w
            mul r19.w, r19.w, r20.w
            dp3 r20.w, r34.xyzx, r29.xyzx
            add_sat r20.w, r34.w, r20.w
            mul r19.w, r19.w, r20.w
            dp3 r20.w, r35.xyzx, r29.xyzx
            add_sat r20.w, r35.w, r20.w
            mul r16.x, r19.w, r20.w
            and r19.w, r18.z, l(1)
            movc r30.xy, r19.wwww, r16.xyxx, r16.zxzz
            mov r16.x, r18.z
            mov r31.xy, r30.xyxx
            mov r19.w, l(1)
            loop 
              ige r20.w, r19.w, r17.w
              breakc_nz r20.w
              iadd r20.w, r16.w, r19.w
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r20.w, l(0), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r20.w, l(16), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r20.w, l(32), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r20.w, l(48), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r20.w, l(64), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r20.w, l(80), t16.xyzw
              dp3 r20.w, r32.xyzx, r29.xyzx
              add_sat r20.w, r32.w, r20.w
              mul r20.w, r20.w, r31.x
              dp3 r22.w, r33.xyzx, r29.xyzx
              add_sat r22.w, r33.w, r22.w
              mul r20.w, r20.w, r22.w
              dp3 r22.w, r34.xyzx, r29.xyzx
              add_sat r22.w, r34.w, r22.w
              mul r20.w, r20.w, r22.w
              dp3 r22.w, r35.xyzx, r29.xyzx
              add_sat r22.w, r35.w, r22.w
              mul r20.w, r20.w, r22.w
              dp3 r22.w, r36.xyzx, r29.xyzx
              add_sat r22.w, r36.w, r22.w
              mul r20.w, r20.w, r22.w
              dp3 r22.w, r37.xyzx, r29.xyzx
              add_sat r22.w, r37.w, r22.w
              mul r31.x, r20.w, r22.w
              ushr r27.w, r16.x, l(2)
              ubfe r29.w, l(1), l(2), r16.x
              and r30.z, r27.w, l(2)
              max r30.w, r31.x, r31.y
              mad r20.w, -r20.w, r22.w, l(1.000000)
              mul r20.w, r20.w, r31.y
              movc r18.y, r30.z, r20.w, r30.w
              movc r31.xy, r29.wwww, r31.xyxx, r18.xyxx
              iadd r19.w, r19.w, l(1)
              mov r16.x, r27.w
            endloop 
            add_sat r16.x, -r11.w, r31.y
            mul r16.w, r18.w, r16.x
            lt r17.w, l(0.000000), r16.w
            if_nz r17.w
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r14.w, l(16), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r14.w, l(32), t15.yxwz
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r14.w, l(48), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r14.w, l(64), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r14.w, l(80), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r14.w, l(132), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r14.w, l(148), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r14.w, l(164), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xyzw, r14.w, l(180), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r40.xyzw, r14.w, l(196), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r41.xy, r14.w, l(212), t15.xyxx
              mad r26.w, r16.x, r18.w, r26.w
              mul r14.w, r28.z, r16.w
              mov r28.z, r36.z
              dp3 r16.x, r13.xyzx, r28.xyzx
              dp3 r16.w, r29.xyzx, r28.xyzx
              add r16.w, -r36.w, r16.w
              ge r17.w, r16.w, l(0.000000)
              max r16.w, r2.w, |r16.w|
              movc r16.w, r17.w, r16.w, -r16.w
              max r16.x, -r16.x, l(0.00000010)
              div r16.x, r16.w, r16.x
              min r16.x, |r16.x|, l(131072.000000)
              mov r36.z, r37.z
              dp3 r16.w, r13.xyzx, r36.xyzx
              dp3 r17.w, r29.xyzx, r36.xyzx
              add r17.w, -r37.w, r17.w
              ge r18.y, r17.w, l(0.000000)
              max r17.w, r2.w, |r17.w|
              movc r17.w, r18.y, r17.w, -r17.w
              max r16.w, -r16.w, l(0.00000010)
              div r16.w, r17.w, r16.w
              min r16.x, |r16.w|, r16.x
              mov r37.z, r38.z
              dp3 r16.w, r13.xyzx, r37.xyzx
              dp3 r17.w, r29.xyzx, r37.xyzx
              add r17.w, -r38.w, r17.w
              ge r18.y, r17.w, l(0.000000)
              max r17.w, r2.w, |r17.w|
              movc r17.w, r18.y, r17.w, -r17.w
              max r16.w, -r16.w, l(0.00000010)
              div r16.w, r17.w, r16.w
              min r16.x, |r16.w|, r16.x
              mov r38.z, r39.z
              dp3 r16.w, r13.xyzx, r38.xyzx
              dp3 r17.w, r29.xyzx, r38.xyzx
              add r17.w, -r39.w, r17.w
              ge r18.y, r17.w, l(0.000000)
              max r17.w, r2.w, |r17.w|
              movc r17.w, r18.y, r17.w, -r17.w
              max r16.w, -r16.w, l(0.00000010)
              div r16.w, r17.w, r16.w
              min r16.x, |r16.w|, r16.x
              mov r39.z, r40.x
              dp3 r16.w, r13.xyzx, r39.xyzx
              dp3 r17.w, r29.xyzx, r39.xyzx
              add r17.w, -r40.y, r17.w
              ge r18.y, r17.w, l(0.000000)
              max r17.w, r2.w, |r17.w|
              movc r17.w, r18.y, r17.w, -r17.w
              max r16.w, -r16.w, l(0.00000010)
              div r16.w, r17.w, r16.w
              min r16.x, |r16.w|, r16.x
              mov r41.zw, r40.zzzw
              dp3 r16.w, r13.zxyz, r41.xzwx
              dp3 r17.w, r29.zxyz, r41.xzwx
              add r17.w, -r41.y, r17.w
              ge r18.y, r17.w, l(0.000000)
              max r17.w, r2.w, |r17.w|
              movc r17.w, r18.y, r17.w, -r17.w
              max r16.w, -r16.w, l(0.00000010)
              div r16.w, r17.w, r16.w
              min r16.x, |r16.w|, r16.x
              mov r28.x, r33.w
              mov r28.yz, r34.zzwz
              add r18.yzw, r29.xxyz, r28.xxyz
              mad r18.yzw, r13.xxyz, r16.xxxx, r18.yyzw
              dp3 r16.w, r18.yzwy, r18.yzwy
              sqrt r16.w, r16.w
              div r16.x, r16.x, r16.w
              add r16.x, r16.x, r16.x
              sqrt r16.x, r16.x
              mad r16.x, r1.z, l(5.000000), r16.x
              add r16.x, r16.x, l(-0.844800)
              mov r27.y, r30.z
              mov r27.z, r32.x
              dp3 r36.x, r18.yzwy, r27.xyzx
              mov r28.xy, r30.xwxx
              mov r28.z, r32.w
              dp3 r36.y, r18.yzwy, r28.xyzx
              mov r32.x, r30.y
              dp3 r36.z, r18.yzwy, r32.xyzx
              ubfe r16.w, l(9), l(16), r28.w
              utof r36.w, r16.w
              sample_l_indexable(texturecubearray)(float,float,float,float) r18.yzw, r36.xyzw, t8.wxyz, s2, r16.x
              and r30.xyz, r18.yzwy, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
              ieq r30.xyz, r30.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
              or r16.x, r30.y, r30.x
              or r16.x, r30.z, r16.x
              movc r18.yzw, r16.xxxx, l(0,1.000000,1.000000,0), r18.yyzw
              dp3 r30.x, r29.xyzx, r27.xyzx
              dp3 r30.y, r29.xyzx, r28.xyzx
              dp3 r30.z, r29.xyzx, r32.xyzx
              mad_sat r29.xyz, r30.xyzx, r33.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
              mov r34.z, r35.x
              mad r29.xyz, r29.xyzx, r34.xyzx, r35.yzwy
              dp3 r36.x, r4.xyzx, r27.xyzx
              dp3 r36.y, r4.xyzx, r28.xyzx
              dp3 r36.z, r4.xyzx, r32.xyzx
              lt r27.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r36.xyzx
              movc r17.z, r27.x, l(0), l(0.500000)
              add r28.xyz, r17.xyzx, r29.xyzx
              sample_l_indexable(texture3d)(float,float,float,float) r28.xyz, r28.xyzx, t17.xyzw, s4, l(0.000000)
              mul r30.xyz, r36.xyzx, r36.xyzx
              mul r30.xyz, r14.wwww, r30.xyzx
              movc r19.z, r27.y, l(0), l(0.500000)
              add r27.xyw, r19.xyxz, r29.xyxz
              sample_l_indexable(texture3d)(float,float,float,float) r27.xyw, r27.xywx, t18.xywz, s4, l(0.000000)
              mul r27.xyw, r30.yyyy, r27.xyxw
              mad r27.xyw, r28.xyxz, r30.xxxx, r27.xyxw
              movc r20.z, r27.z, l(0), l(0.500000)
              add r28.xyz, r20.xyzx, r29.xyzx
              sample_l_indexable(texture3d)(float,float,float,float) r28.xyz, r28.xyzx, t19.xyzw, s4, l(0.000000)
              mad r27.xyz, r28.xyzx, r30.zzzz, r27.xywx
              sample_l_indexable(texturecubearray)(float,float,float,float) r28.xyz, r36.xyzw, t8.xyzw, s2, l(6.000000)
              and r29.xyz, r28.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
              ieq r29.xyz, r29.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
              or r16.x, r29.y, r29.x
              or r16.x, r29.z, r16.x
              movc r28.xyz, r16.xxxx, l(1.000000,1.000000,0,0), r28.xyzx
              mul r29.xyz, r27.xyzx, r28.xyzx
              dp3 r16.x, r29.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
              mad r15.xyz, r27.xyzx, r28.xyzx, r15.xyzx
              mul r16.w, r3.w, r16.x
              mul r18.yzw, r14.wwww, r18.yyzw
              dp3 r14.w, r18.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
              mad r14.w, r3.w, r16.x, r14.w
              div r14.w, r16.w, r14.w
              mad r26.xyz, r18.yzwy, r14.wwww, r26.xyzx
            endif 
          endif 
        endif 
      endloop 
      mov r25.xyzw, r26.xyzw
      mov r12.yzw, r15.xxyz
      iadd r7.w, r7.w, l(32)
    endloop 
    mov r24.xyzw, r25.zxyw
    mov r23.xyz, r12.yzwy
    mov r24.xyzw, r24.yzxw
  else 
    mov r24.x, r23.w
  endif 
  max r1.z, r24.w, l(1.000000)
  rcp r1.z, r1.z
  mov_sat r24.w, r24.w
  mul r21.xyz, r1.zzzz, r23.xyzx
  mul r22.xyz, r1.zzzz, r24.xyzx
  lt r2.w, r24.w, l(0.990000)
  if_nz r2.w
    add r2.w, -r24.w, l(1.000000)
    mul r3.w, r2.w, cb2[19].x
    add r12.yzw, v7.xxyz, -cb2[35].xxyz
    mul r14.x, r12.y, cb2[35].w
    mul r14.yz, r12.zzwz, cb2[36].xxyx
    add_sat r12.yzw, r14.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
    mul r14.xy, r12.yzyy, cb2[36].zwzz
    mul r14.z, r12.w, cb2[37].x
    add r12.yzw, r14.xxyz, cb2[37].yyzw
    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r4.xyzx
    movc r14.xyz, r14.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
    mov r14.w, l(0)
    add r15.xyz, r12.yzwy, r14.wwxw
    sample_l_indexable(texture3d)(float,float,float,float) r15.xyz, r15.xyzx, t17.xyzw, s4, l(0.000000)
    mul r16.xyz, r4.xyzx, r4.xyzx
    mul r16.xyz, r3.wwww, r16.xyzx
    add r17.xyz, r12.yzwy, r14.wwyw
    sample_l_indexable(texture3d)(float,float,float,float) r17.xyz, r17.xyzx, t18.xyzw, s4, l(0.000000)
    mul r17.xyz, r16.yyyy, r17.xyzx
    mad r15.xyz, r15.xyzx, r16.xxxx, r17.xyzx
    add r12.yzw, r12.yyzw, r14.wwwz
    sample_l_indexable(texture3d)(float,float,float,float) r12.yzw, r12.yzwy, t19.wxyz, s4, l(0.000000)
    mad r12.yzw, r12.yyzw, r16.zzzz, r15.xxyz
    mov r4.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r14.xyz, r4.xyzw, t8.xyzw, s2, l(6.000000)
    mul r12.yzw, r12.yyzw, r14.xxyz
    dp3 r3.w, r12.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
    mad r21.xyz, r23.xyzx, r1.zzzz, r12.yzwy
    mov r13.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r12.yzw, r13.xyzw, t8.wxyz, s2, r1.w
    mad r1.z, cb2[19].x, r2.w, -r3.w
    mad r1.z, r6.y, r1.z, r3.w
    mad r22.xyz, r12.yzwy, r1.zzzz, r22.xyzx
  endif 
else 
  mov r22.x, r21.w
endif 
add r1.z, r0.z, r6.x
log r1.z, |r1.z|
mul r1.z, r1.z, r1.y
exp r1.z, r1.z
add r1.z, r0.z, r1.z
add_sat r1.z, r1.z, l(-1.000000)
mul r14.xyz, r0.zzzz, r21.xyzx
mad r6.yz, r6.xxyx, l(0.000000, 0.984375, 0.984375, 0.000000), l(0.000000, 0.00781250, 0.00781250, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r6.yz, r6.yzyy, t5.zxyw, s2, l(0.000000)
mul r12.yzw, r1.zzzz, r22.xxyz
mul r15.xyz, r6.yyyy, r12.zwyz
mul r6.yzw, r6.zzzz, r12.yyzw
sqrt r0.z, r1.y
mad r0.z, r0.z, l(0.500000), l(0.500000)
mul r0.z, r0.z, r0.z
mul r1.z, r0.z, l(0.500000)
mad r0.z, -r0.z, l(0.500000), l(1.000000)
mad r1.w, r6.x, r0.z, r1.z
mul r0.z, r0.z, r1.w
mul r1.z, r1.w, r1.z
dp3 r1.w, r4.xyzx, cb2[17].xyzx
mov_sat r2.w, r1.w
ge r3.w, l(0.000000), r2.w
if_nz r3.w
  mov r4.w, l(0)
endif 
if_z r3.w
  mul r12.yzw, v7.yyyy, cb2[29].xxyz
  mad r12.yzw, v7.xxxx, cb2[28].xxyz, r12.yyzw
  mad r12.yzw, v7.zzzz, cb2[30].xxyz, r12.yyzw
  add r12.yzw, r12.yyzw, cb2[31].xxyz
  add r3.w, r12.w, -cb2[17].w
  mad r3.w, -r3.w, l(0.00006104), l(1.000000)
  mov_sat r5.w, r3.w
  eq r5.w, r3.w, r5.w
  if_nz r5.w
    mov r5.w, l(0)
    mov r7.z, l(0)
    loop 
      ge r7.w, r5.w, l(3.000000)
      breakc_nz r7.w
      ftou r7.w, r5.w
      add r16.xy, r12.yzyy, -cb2[r7.w + 20].xyxx
      max r9.w, |r16.y|, |r16.x|
      mul r7.z, r9.w, cb2[r7.w + 20].z
      lt r7.w, r7.z, l(1.000000)
      if_nz r7.w
        break 
      endif 
      add r5.w, r5.w, l(1.000000)
      mov r7.z, l(0)
    endloop 
  else 
    mov r5.w, l(3.000000)
    mov r7.z, l(0)
  endif 
  ge r7.w, r5.w, l(3.000000)
  if_nz r7.w
    mul r16.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
    rcp r17.xz, r16.xxxx
    mov r17.y, -r17.z
    mad r16.xyz, r12.yzyy, r17.xyzx, r16.yzyy
    add r17.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r16.xyz, r16.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r16.xyz, r17.xyzx, r16.xyzx
    mul r17.xy, r16.zyzz, cb2[32].xxxx
    round_ni r17.xy, r17.xyxx
    mul r9.w, r17.y, cb2[27].x
    mad r9.w, r9.w, cb2[32].x, r17.x
    ftou r9.w, r9.w
    iadd r9.w, r9.w, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r10.w, r9.w, l(0), t23.xxxx
    and r11.w, r10.w, l(0x40000000)
    ishl r13.w, r10.w, l(2)
    if_z r11.w
      and r11.w, r10.w, l(0x01ffffff)
      iadd r17.x, r9.w, r11.w
      ushr r9.w, r10.w, l(25)
      utof r9.w, r9.w
      mul r16.xyz, r9.wwww, r16.xyzx
      frc r16.xyz, r16.xyzx
      mul r16.xyz, r16.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
      ftou r16.xyz, r16.xyzx
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.z, r17.x, l(0), t23.xxxx
      ushr r18.xy, r16.zyzz, l(6, 6, 0, 0)
      and r9.w, r17.z, l(0xc0000000)
      iadd r10.w, r17.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r10.w, r10.w, l(0), t23.xxxx
      movc r10.w, r18.y, r17.z, r10.w
      ushr r11.w, r10.w, l(13)
      movc r10.w, r18.x, r11.w, r10.w
      and r10.w, r10.w, l(8191)
      iadd r18.x, r10.w, r17.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.x, l(0), t23.xxxx
      mov r17.y, l(0)
      mov r18.y, l(1)
      movc r18.xyz, r9.wwww, r17.xyzx, r18.xyzx
      movc r19.yz, r9.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r20.xy, r16.zyzz, r19.yyyy
      and r20.xy, r20.xyxx, l(1, 1, 0, 0)
      and r10.w, r18.z, l(0xc0000000)
      iadd r11.w, r18.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r11.w, r11.w, l(0), t23.xxxx
      movc r11.w, r20.y, r18.z, r11.w
      ushr r16.w, r11.w, l(13)
      movc r11.w, r20.x, r16.w, r11.w
      and r11.w, r11.w, l(8191)
      iadd r19.x, r11.w, r18.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.w, r19.x, l(0), t23.xxxx
      movc r18.xyz, r10.wwww, r18.xyzx, r19.xzwx
      movc r17.xyz, r9.wwww, r17.xyzx, r18.xyzx
      and r9.w, r17.z, l(0xc0000000)
      if_z r9.w
        iadd r9.w, -r17.y, l(6)
        ushr r18.xy, r16.zyzz, r9.wwww
        or r9.w, r17.z, l(0x40000000)
        bfi r10.w, l(1), l(1), r18.y, l(0)
        bfi r10.w, l(1), l(0), r18.x, r10.w
        imul null, r10.w, r10.w, l(10)
        ushr r9.w, r9.w, r10.w
        and r9.w, r9.w, l(1023)
        iadd r18.x, r9.w, r17.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.w, r18.x, l(0), t23.xxxx
        iadd r18.yz, r17.yyyy, l(0, 1, 2, 0)
        iadd r9.w, -r18.y, l(6)
        ushr r17.yw, r16.zzzy, r9.wwww
        and r9.w, r18.w, l(0xc0000000)
        or r10.w, r18.w, l(0x40000000)
        bfi r11.w, l(1), l(1), r17.w, l(0)
        bfi r11.w, l(1), l(0), r17.y, r11.w
        imul null, r11.w, r11.w, l(10)
        ushr r10.w, r10.w, r11.w
        and r10.w, r10.w, l(1023)
        iadd r19.x, r10.w, r18.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.z, r19.x, l(0), t23.xxxx
        mov r19.y, r18.z
        movc r19.xyz, r9.wwww, r18.xywx, r19.xyzx
        iadd r10.w, -r19.y, l(6)
        ushr r17.yw, r16.zzzy, r10.wwww
        and r10.w, r19.z, l(0xc0000000)
        or r11.w, r19.z, l(0x40000000)
        bfi r16.w, l(1), l(1), r17.w, l(0)
        bfi r16.w, l(1), l(0), r17.y, r16.w
        imul null, r16.w, r16.w, l(10)
        ushr r11.w, r11.w, r16.w
        and r11.w, r11.w, l(1023)
        iadd r20.x, r11.w, r19.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.y, r20.x, l(0), t23.xxxx
        movc r17.yw, r10.wwww, r19.xxxz, r20.xxxy
        movc r17.xz, r9.wwww, r18.xxwx, r17.yywy
      endif 
      and r9.w, r17.z, l(0xc0000000)
      if_z r9.w
        ubfe r10.w, l(14), l(15), r17.z
        utof r10.w, r10.w
        mul r10.w, r10.w, cb2[27].w
        mul r10.w, r10.w, l(0.00006104)
        and r17.yw, r17.zzzz, l(0, 0x00007fff, 0, 0x20000000)
        utof r11.w, r17.y
        mul r11.w, r11.w, cb2[27].w
        mul r11.w, r11.w, l(0.00003052)
        and r16.w, r16.y, l(3)
        iadd r16.w, r16.w, r17.x
        iadd r16.w, r16.w, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.w, r16.w, l(0), t23.xxxx
        bfi r18.xyz, l(2, 2, 1, 0), l(3, 1, 4, 0), r16.xyzx, l(0, 0, 0, 0)
        ushr r16.x, r16.w, r18.x
        and r16.x, r16.x, l(255)
        utof r16.x, r16.x
        mul r16.x, r11.w, r16.x
        mad r16.x, r16.x, l(0.00392157), r10.w
        iadd r16.y, r18.y, l(1)
        ubfe r16.z, l(1), l(1), r16.z
        iadd r16.y, r16.z, r16.y
        iadd r16.y, r16.y, r17.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.y, r16.y, l(0), t23.xxxx
        ushr r16.y, r16.y, r18.z
        and r16.y, r16.y, l(0x0000ffff)
        utof r16.y, r16.y
        mul r11.w, r11.w, r16.y
        mad r10.w, r11.w, l(0.00001526), r10.w
        movc r13.w, r17.w, r16.x, r10.w
      else 
        and r10.w, r17.z, l(0x80000000)
        iadd r11.w, r17.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r11.w, r11.w, l(0), t23.xxxx
        movc r10.w, r10.w, r11.w, l(0)
        ishl r11.w, r17.z, l(2)
        ushr r16.x, r10.w, l(16)
        f16tof32 r16.x, r16.x
        and r10.w, r10.w, l(0x0000ffff)
        f16tof32 r10.w, r10.w
        mad r11.w, r12.y, r16.x, r11.w
        mad r10.w, r12.z, r10.w, r11.w
        movc r13.w, r9.w, r10.w, r13.w
      endif 
    endif 
    mad r9.w, -cb2[27].z, l(2.000000), r12.w
    lt r9.w, r13.w, r9.w
    movc r4.w, r9.w, l(0), l(1.000000)
  endif 
  if_z r7.w
    if_z cb2[58].y
      ftou r7.w, r5.w
      add r16.xy, r12.yzyy, -cb2[r7.w + 20].xyxx
      mul r16.xy, r16.xyxx, cb2[r7.w + 20].zzzz
      mad r16.xy, r16.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r7.w, cb2[26].y
      add r16.z, r5.w, r7.w
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r7.w, r16.xyzx, t13.xxxx, s13, r3.w
      sample_l_indexable(texture2darray)(float,float,float,float) r9.w, r16.xyzx, t31.yzwx, s0, l(0.000000)
      add r7.w, r7.w, r9.w
      add_sat r7.w, r7.w, l(-1.000000)
      mul r9.w, r7.w, r7.w
      mul r4.w, r7.w, r9.w
    endif 
    if_nz cb2[58].y
      mov r16.x, -r7.x
      ftou r7.w, r5.w
      add r5.w, r5.w, l(1.000000)
      min r5.w, r5.w, l(2.000000)
      ftou r5.w, r5.w
      add r7.z, -r7.z, l(1.000000)
      mul r7.z, r7.z, l(28.000000)
      ftou r7.z, r7.z
      add r17.xy, r12.yzyy, -cb2[r7.w + 20].xyxx
      mul r17.xy, r17.xyxx, cb2[r7.w + 20].zzzz
      mad r17.xy, r17.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      add r12.yz, r12.yyzy, -cb2[r5.w + 20].xxyx
      mul r12.yz, r12.yyzy, cb2[r5.w + 20].zzzz
      mad r12.yz, r12.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      mov r16.y, r11.x
      mov r16.z, r7.x
      mov r9.w, l(0)
      mov r10.w, l(0)
      loop 
        uge r11.w, r10.w, l(8)
        breakc_nz r11.w
        ult r11.w, r7.z, r10.w
        movc r17.zw, r11.wwww, r12.yyyz, r17.xxxy
        movc r12.w, r11.w, cb2[r5.w + 20].w, cb2[r7.w + 20].w
        movc r11.w, r11.w, r5.w, r7.w
        dp2 r18.x, icb[r10.w + 0].yxyy, r16.xyxx
        dp2 r18.y, icb[r10.w + 0].yxyy, r16.yzyy
        mad r18.xy, r18.xyxx, r12.wwww, r17.zwzz
        iadd r11.w, r11.w, cb2[26].y
        utof r18.z, r11.w
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r11.w, r18.xyzx, t13.xxxx, s13, r3.w
        sample_l_indexable(texture2darray)(float,float,float,float) r12.w, r18.xyzx, t31.yzwx, s0, l(0.000000)
        add r11.w, r11.w, r12.w
        add_sat r11.w, r11.w, l(-1.000000)
        mad r9.w, r11.w, l(0.125000), r9.w
        iadd r10.w, r10.w, l(1)
      endloop 
      mul r3.w, r9.w, r9.w
      mul r4.w, r9.w, r3.w
    endif 
  endif 
endif 
lt r3.w, l(0.000000), r2.w
if_nz r3.w
  lt r3.w, l(0.000000), r4.w
  if_nz r3.w
    mul r3.w, r0.w, cb2[18].w
    mul r3.w, r2.w, r3.w
    if_nz cb2[23].x
      mov r8.w, l(1.000000)
      dp4 r5.w, cb2[24].xyzw, r8.xyzw
      dp4 r7.z, cb2[25].xyzw, r8.xyzw
      frc r8.x, r5.w
      frc r8.y, r7.z
      iadd r5.w, l(-1), cb2[23].x
      utof r8.z, r5.w
      sample_l_indexable(texture2darray)(float,float,float,float) r8.xyz, r8.xyzx, t20.xyzw, s2, l(0.000000)
      add r8.xyz, r8.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
      mad r8.xyz, cb2[23].yyyy, r8.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      mul r8.xyz, r8.xyzx, cb2[18].xyzx
    else 
      mov r8.xyz, cb2[18].xyzx
    endif 
    ushr r5.w, cb2[53].x, l(16)
    ult r7.z, l(0), r5.w
    and r7.z, r0.x, r7.z
    if_nz r7.z
      iadd r5.w, r5.w, cb2[0].x
      iadd r5.w, r5.w, l(-1)
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r7.z, r5.w, l(52), t12.xxxx
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r5.w, l(68), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r5.w, l(84), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r5.w, l(132), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.xyzw, r5.w, l(148), t12.xyzw
      mad r7.w, |r1.w|, l(-0.200000), l(0.400000)
      mad r20.xyz, r4.xyzx, r7.wwww, v7.xyzx
      mov r20.w, l(1.000000)
      dp4 r16.x, r16.xyzw, r20.xyzw
      dp4 r16.y, r17.xyzw, r20.xyzw
      mad r12.yz, r16.xxyx, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      add r12.yz, r19.zzwz, r12.yyzy
      mul r12.yz, r19.xxyx, r12.yyzy
      div r16.xy, r7.zzzz, r18.xzxx
      add r16.zw, -r16.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
      ge r16.zw, r12.yyyz, r16.zzzw
      ge r16.xy, r16.xyxx, r12.yzyy
      or r16.xy, r16.xyxx, r16.zwzz
      or r7.w, r16.y, r16.x
      if_z r7.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r7.w, r5.w, l(28), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r5.w, l(100), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xy, r5.w, l(164), t12.xyxx
        dp4 r5.w, r16.xyzw, r20.xyzw
        mov_sat r12.yz, r12.yyzy
        mad r16.xy, r12.yzyy, r18.xzxx, r18.ywyy
        add r5.w, r17.x, r5.w
        div r5.w, r5.w, r17.y
        max r5.w, r5.w, l(0.00006104)
        and r7.w, r7.w, l(0x0000ffff)
        if_nz cb2[58].y
          mov r17.x, -r7.x
          utof r18.z, r7.w
          mov r17.y, r11.x
          mov r17.z, r7.x
          mov r8.w, l(0)
          mov r9.w, l(0)
          loop 
            ige r10.w, r9.w, l(8)
            breakc_nz r10.w
            dp2 r19.x, icb[r9.w + 0].yxyy, r17.xyxx
            dp2 r19.y, icb[r9.w + 0].yxyy, r17.yzyy
            mad r18.xy, r19.xyxx, r7.zzzz, r16.xyxx
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.w, r18.xyzx, t9.xxxx, s13, r5.w
            mad r8.w, r10.w, l(0.125000), r8.w
            iadd r9.w, r9.w, l(1)
          endloop 
        else 
          utof r16.z, r7.w
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r8.w, r16.xyzx, t9.xxxx, s13, r5.w
        endif 
        mul r5.w, r8.w, r8.w
        mul r5.w, r8.w, r5.w
      else 
        mov r5.w, l(1.000000)
      endif 
      mul r4.w, r4.w, r5.w
    else 
      and r5.w, cb2[53].x, l(0x0000ffff)
      ult r7.z, l(0), r5.w
      not r7.w, r0.x
      and r7.z, r7.w, r7.z
      if_nz r7.z
        iadd r5.w, r5.w, cb2[0].x
        iadd r5.w, r5.w, l(-1)
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r7.z, r5.w, l(52), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r5.w, l(68), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r5.w, l(84), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r5.w, l(132), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.xyzw, r5.w, l(148), t12.xyzw
        mad r7.w, |r1.w|, l(-0.200000), l(0.400000)
        mad r20.xyz, r4.xyzx, r7.wwww, v7.xyzx
        mov r20.w, l(1.000000)
        dp4 r16.x, r16.xyzw, r20.xyzw
        dp4 r16.y, r17.xyzw, r20.xyzw
        mad r12.yz, r16.xxyx, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
        add r12.yz, r19.zzwz, r12.yyzy
        mul r12.yz, r19.xxyx, r12.yyzy
        div r16.xy, r7.zzzz, r18.xzxx
        add r16.zw, -r16.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
        ge r16.zw, r12.yyyz, r16.zzzw
        ge r16.xy, r16.xyxx, r12.yzyy
        or r16.xy, r16.xyxx, r16.zwzz
        or r7.w, r16.y, r16.x
        if_z r7.w
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r7.w, r5.w, l(28), t12.xxxx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r5.w, l(100), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xy, r5.w, l(164), t12.xyxx
          dp4 r5.w, r16.xyzw, r20.xyzw
          mov_sat r12.yz, r12.yyzy
          mad r16.xy, r12.yzyy, r18.xzxx, r18.ywyy
          add r5.w, r17.x, r5.w
          div r5.w, r5.w, r17.y
          max r5.w, r5.w, l(0.00006104)
          and r7.w, r7.w, l(0x0000ffff)
          if_nz cb2[58].y
            mov r17.x, -r7.x
            utof r18.z, r7.w
            mov r17.y, r11.x
            mov r17.z, r7.x
            mov r8.w, l(0)
            mov r9.w, l(0)
            loop 
              ige r10.w, r9.w, l(8)
              breakc_nz r10.w
              dp2 r19.x, icb[r9.w + 0].yxyy, r17.xyxx
              dp2 r19.y, icb[r9.w + 0].yxyy, r17.yzyy
              mad r18.xy, r19.xyxx, r7.zzzz, r16.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.w, r18.xyzx, t9.xxxx, s13, r5.w
              mad r8.w, r10.w, l(0.125000), r8.w
              iadd r9.w, r9.w, l(1)
            endloop 
          else 
            utof r16.z, r7.w
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r8.w, r16.xyzx, t9.xxxx, s13, r5.w
          endif 
          mul r5.w, r8.w, r8.w
          mul r5.w, r8.w, r5.w
        else 
          mov r5.w, l(1.000000)
        endif 
        mul r4.w, r4.w, r5.w
      endif 
    endif 
    mad r5.w, -r6.x, l(0.500000), l(1.000000)
    mad r5.w, -r2.w, r5.w, l(1.000000)
    mul r5.w, r5.w, r5.w
    mad r5.w, -r5.w, l(0.620000), l(0.620000)
    add r5.w, -r2.w, r5.w
    mad r5.w, r1.y, r5.w, r2.w
    mul r5.w, r4.w, r5.w
    lt r1.w, l(0.000000), r1.w
    mad r16.xyz, r5.wwww, r8.xyzx, r14.xyzx
    mad r12.yzw, -v7.xxyz, r0.yyyy, cb2[17].xxyz
    dp3 r0.y, r12.yzwy, r12.yzwy
    rsq r0.y, r0.y
    mul r12.yzw, r0.yyyy, r12.yyzw
    dp3 r0.y, r12.yzwy, r10.xyzx
    dp3 r5.w, r4.xyzx, r12.yzwy
    mad r7.z, |r5.w|, r0.w, -|r5.w|
    mad r5.w, |r5.w|, r7.z, l(1.000000)
    mad r2.w, r2.w, r0.z, r1.z
    mul r5.w, r5.w, r5.w
    mul r2.w, r2.w, r5.w
    rcp r2.w, r2.w
    mul r2.w, r3.w, r2.w
    mul r2.w, r2.w, r4.w
    mul r2.w, r2.w, l(0.250000)
    mad r12.yzw, r2.wwww, r8.xxyz, r6.yyzw
    add_sat r0.y, -r0.y, l(1.000000)
    mul r3.w, r0.y, r0.y
    mul r3.w, r3.w, r3.w
    mul r0.y, r0.y, r3.w
    mul r0.y, r0.y, r2.w
    mad r8.xyz, r0.yyyy, r8.yzxy, r15.xyzx
    mov r16.w, r8.z
    mov r14.w, r15.z
    movc r14.xyzw, r1.wwww, r16.xyzw, r14.xyzw
    mov r8.zw, r12.yyyz
    mov r15.zw, r6.yyyz
    movc r8.xyzw, r1.wwww, r8.xyzw, r15.xyzw
    movc r6.w, r1.w, r12.w, r6.w
    mov r15.z, r14.w
    mov r15.xy, r8.xyxx
    mov r6.yz, r8.zzwz
  endif 
endif 
mov r8.x, -r7.x
not r0.y, r0.x
mad r1.w, -r6.x, l(0.500000), l(1.000000)
mov r16.xy, l(0,0,0,0)
mov r17.w, l(0)
mov r18.xyz, v7.xyzx
mov r18.w, l(1.000000)
mov r19.w, l(1.000000)
mov r8.z, r7.x
mov r20.w, l(1.000000)
mov r21.z, l(1.000000)
mov r22.w, l(1.000000)
mov r8.yw, r11.xxxx
mov r7.y, r8.w
mov r23.w, l(1.000000)
mov r11.y, r8.x
mov r11.z, r7.x
mov r24.w, l(1.000000)
mov r25.x, r11.x
mov r25.y, r8.x
mov r25.z, r7.x
mov r26.x, r11.x
mov r26.y, r8.x
mov r26.z, r7.x
mov r27.x, r11.x
mov r27.y, r8.x
mov r27.z, r7.x
mov r12.yzw, r14.xxyz
mov r28.xyz, r15.zxyz
mov r29.xyz, r6.yzwy
mov r2.w, cb2[58].y
mov r3.w, l(0)
loop 
  uge r4.w, r3.w, cb2[0].x
  breakc_nz r4.w
  ushr r16.z, r3.w, l(5)
  iadd r17.xyz, r9.xyzx, r16.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r4.w, r17.xyzw, t6.yzwx
  mov r17.xyz, r12.yzwy
  mov r30.xyz, r28.xyzx
  mov r31.xyz, r29.xyzx
  mov r5.w, r2.w
  mov r6.x, r4.w
  loop 
    breakc_z r6.x
    firstbit_lo r7.z, r6.x
    ishl r7.w, l(1), r7.z
    and r9.w, r6.x, r7.w
    if_nz r9.w
      xor r6.x, r6.x, r7.w
      iadd r7.z, r3.w, r7.z
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r32.xyzw, r7.z, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r33.xy, r7.z, l(16), t11.xyxx
      add r32.xyz, r32.xyzx, -v7.xyzx
      mov r33.z, r32.w
      lt r32.xyz, |r32.xyzx|, r33.zxyz
      and r7.w, r32.y, r32.x
      and r7.w, r32.z, r7.w
      if_nz r7.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r7.z, l(0), t12.wxyz
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r7.z, l(16), t12.zxyw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r7.z, l(32), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r7.z, l(48), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r7.z, l(64), t12.yzwx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r7.z, l(80), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r7.z, l(96), t12.yzwx
        ubfe r7.w, l(3), l(24), r33.w
        switch r7.w
          case l(4)
          lt r7.w, l(0.000000), r38.x
          mov r39.xy, r37.zwzz
          mov r39.z, r38.w
          mad r40.xyz, -r39.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r32.yzwy
          add r41.xyz, r40.xyzx, -v7.xyzx
          dp3 r9.w, r39.xyzx, r41.xyzx
          div_sat r10.w, -r9.w, r38.x
          mad r42.xyz, r10.wwww, r39.xyzx, r40.xyzx
          movc r42.xyz, r7.wwww, r42.xyzx, r32.yzwy
          add r42.xyz, r42.xyzx, -v7.xyzx
          dp3 r11.w, r42.xyzx, r42.xyzx
          rsq r13.w, r11.w
          mul r42.xyz, r13.wwww, r42.xyzx
          dp3 r13.w, r4.xyzx, r42.xyzx
          mov_sat r14.w, r13.w
          lt r15.w, l(0.000000), r14.w
          if_nz r15.w
            sqrt r15.w, r11.w
            mul r16.z, r35.x, r35.x
            div r11.w, r16.z, r11.w
            min r11.w, r11.w, l(1.000000)
            mad_sat r16.zw, r15.wwww, r34.xxxz, r34.yyyw
            mul r42.xy, r16.zwzz, r16.zwzz
            mad r16.zw, r16.zzzw, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
            mul r16.zw, r16.zzzw, r42.xxxy
            mul r11.w, r11.w, r16.z
            mul r11.w, r16.w, r11.w
            lt r15.w, l(0.000000), r11.w
            if_nz r15.w
              ubfe r15.w, l(3), l(27), r33.w
              ine r15.w, r15.w, l(1)
              if_nz r15.w
                mad r15.w, |r13.w|, l(-0.200000), l(0.400000)
                mad r42.xyz, r4.xyzx, r15.wwww, v7.xyzx
                add r42.xyz, -r36.xyzx, r42.xyzx
                max r15.w, |r42.z|, |r42.y|
                max r15.w, r15.w, |r42.x|
                div r15.w, r37.x, r15.w
                add r15.w, r37.y, r15.w
                dp3 r16.z, r42.xyzx, r42.xyzx
                rsq r16.z, r16.z
                max r15.w, r15.w, l(0.00006104)
                and r16.w, r33.w, l(0x0000ffff)
                utof r43.w, r16.w
                mov r16.w, l(0)
                mov r21.w, l(0)
                loop 
                  ige r25.w, r21.w, l(8)
                  breakc_nz r25.w
                  dp2 r44.y, icb[r21.w + 0].yxyy, r8.xyxx
                  dp2 r44.z, icb[r21.w + 0].yxyy, r8.yzyy
                  mul r44.yz, r35.yyyy, r44.yyzy
                  mul r44.x, r12.x, r44.y
                  mul r44.w, r1.x, r44.y
                  mad r43.xyz, r42.xyzx, r16.zzzz, r44.xzwx
                  sample_c_lz_indexable(texturecubearray)(float,float,float,float) r25.w, r43.xyzw, t10.xxxx, s13, r15.w
                  mad r16.w, r25.w, l(0.125000), r16.w
                  iadd r21.w, r21.w, l(1)
                endloop 
              else 
                mov r16.w, l(1.000000)
              endif 
              mul r11.w, r11.w, r16.w
              lt r15.w, l(0.000000), r11.w
              if_nz r15.w
                mul r15.w, r0.w, r33.x
                mul r15.w, r15.w, l(0.250000)
                dp3 r16.z, r39.xyzx, r13.xyzx
                dp3 r21.w, r13.xyzx, r41.xyzx
                mad r25.w, -r16.z, r16.z, r38.x
                mad r9.w, r16.z, r21.w, -r9.w
                div_sat r9.w, r9.w, r25.w
                div r16.z, r25.w, r38.x
                mul r16.z, r16.z, l(10.000000)
                min r16.z, r16.z, l(1.000000)
                add r9.w, -r10.w, r9.w
                mad r9.w, r16.z, r9.w, r10.w
                mad r39.xyz, r9.wwww, r39.xyzx, r40.xyzx
                movc r39.xyz, r7.wwww, r39.xyzx, r32.yzwy
                add r39.xyz, r39.xyzx, -v7.xyzx
                dp3 r7.w, r39.xyzx, r39.xyzx
                rsq r7.w, r7.w
                mul r40.xyz, r7.wwww, r39.xyzx
                ubfe r9.w, l(4), l(16), r33.w
                ult r10.w, l(0), r9.w
                and r10.w, r0.x, r10.w
                if_nz r10.w
                  iadd r9.w, r9.w, cb2[0].x
                  iadd r9.w, r9.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r10.w, r9.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r9.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r9.w, l(116), t12.xyzw
                  mad r16.z, |r13.w|, l(-0.200000), l(0.400000)
                  mad r19.xyz, r4.xyzx, r16.zzzz, v7.xyzx
                  dp4 r16.z, r41.xyzw, r19.xyzw
                  dp4 r21.w, r42.xyzw, r19.xyzw
                  lt r25.w, r21.w, r16.z
                  if_z r25.w
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r9.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r9.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r9.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r9.w, l(148), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xy, r9.w, l(164), t12.xyxx
                    dp4 r41.x, r41.xyzw, r19.xyzw
                    dp4 r41.y, r42.xyzw, r19.xyzw
                    div r19.xy, r41.xyxx, r21.wwww
                    mad r19.xy, r19.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r19.xy, r44.zwzz, r19.xyxx
                    mul r19.xy, r44.xyxx, r19.xyxx
                    div r41.xy, r10.wwww, r43.xzxx
                    add r41.zw, -r41.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                    ge r41.zw, r19.xxxy, r41.zzzw
                    ge r41.xy, r41.xyxx, r19.xyxx
                    or r41.xy, r41.xyxx, r41.zwzz
                    or r19.z, r41.y, r41.x
                    mov_sat r19.xy, r19.xyxx
                    mad r41.xy, r19.xyxx, r43.xzxx, r43.ywyy
                    mul r19.x, r21.w, r45.y
                    mad r16.z, r45.x, r21.w, r16.z
                    div r16.z, r16.z, r19.x
                  else 
                    mov r19.z, l(-1)
                  endif 
                  or r19.x, r25.w, r19.z
                  if_z r19.x
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r9.w, r9.w, l(28), t12.xxxx
                    max r16.z, r16.z, l(0.00006104)
                    and r9.w, r9.w, l(0x0000ffff)
                    if_nz r5.w
                      utof r19.z, r9.w
                      mov r21.w, l(0)
                      mov r25.w, l(0)
                      loop 
                        ige r26.w, r25.w, l(8)
                        breakc_nz r26.w
                        dp2 r42.x, icb[r25.w + 0].yxyy, r8.xwxx
                        dp2 r42.y, icb[r25.w + 0].xyxx, r7.xyxx
                        mad r19.xy, r42.xyxx, r10.wwww, r41.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.x, r19.xyzx, t9.xxxx, s13, r16.z
                        mad r21.w, r19.x, l(0.125000), r21.w
                        iadd r25.w, r25.w, l(1)
                      endloop 
                    else 
                      utof r41.z, r9.w
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.w, r41.xyzx, t9.xxxx, s13, r16.z
                    endif 
                    mul r9.w, r21.w, r21.w
                    mul r9.w, r21.w, r9.w
                  else 
                    mov r9.w, l(1.000000)
                  endif 
                  mul r11.w, r9.w, r11.w
                else 
                  ubfe r9.w, l(4), l(20), r33.w
                  ult r10.w, l(0), r9.w
                  and r10.w, r0.y, r10.w
                  if_nz r10.w
                    iadd r9.w, r9.w, cb2[0].x
                    iadd r9.w, r9.w, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r10.w, r9.w, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r9.w, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r9.w, l(116), t12.xyzw
                    mad r16.z, |r13.w|, l(-0.200000), l(0.400000)
                    mad r20.xyz, r4.xyzx, r16.zzzz, v7.xyzx
                    dp4 r16.z, r41.xyzw, r20.xyzw
                    dp4 r19.x, r42.xyzw, r20.xyzw
                    lt r19.y, r19.x, r16.z
                    if_z r19.y
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r9.w, l(68), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r9.w, l(84), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r9.w, l(132), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r9.w, l(148), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xy, r9.w, l(164), t12.xyxx
                      dp4 r41.x, r41.xyzw, r20.xyzw
                      dp4 r41.y, r42.xyzw, r20.xyzw
                      div r20.xy, r41.xyxx, r19.xxxx
                      mad r20.xy, r20.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                      add r20.xy, r44.zwzz, r20.xyxx
                      mul r20.xy, r44.xyxx, r20.xyxx
                      div r41.xy, r10.wwww, r43.xzxx
                      add r41.zw, -r41.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                      ge r41.zw, r20.xxxy, r41.zzzw
                      ge r41.xy, r41.xyxx, r20.xyxx
                      or r41.xy, r41.xyxx, r41.zwzz
                      or r19.z, r41.y, r41.x
                      mov_sat r20.xy, r20.xyxx
                      mad r20.xy, r20.xyxx, r43.xzxx, r43.ywyy
                      mul r25.w, r19.x, r45.y
                      mad r16.z, r45.x, r19.x, r16.z
                      div r16.z, r16.z, r25.w
                    else 
                      mov r19.z, l(-1)
                    endif 
                    or r19.x, r19.y, r19.z
                    if_z r19.x
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r9.w, r9.w, l(28), t12.xxxx
                      max r16.z, r16.z, l(0.00006104)
                      and r9.w, r9.w, l(0x0000ffff)
                      if_nz r5.w
                        utof r19.z, r9.w
                        mov r25.w, l(0)
                        mov r26.w, l(0)
                        loop 
                          ige r27.w, r26.w, l(8)
                          breakc_nz r27.w
                          dp2 r41.x, icb[r26.w + 0].xyxx, r11.xyxx
                          dp2 r41.y, icb[r26.w + 0].yxyy, r11.xzxx
                          mad r19.xy, r41.xyxx, r10.wwww, r20.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.x, r19.xyzx, t9.xxxx, s13, r16.z
                          mad r25.w, r19.x, l(0.125000), r25.w
                          iadd r26.w, r26.w, l(1)
                        endloop 
                      else 
                        utof r20.z, r9.w
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r25.w, r20.xyzx, t9.xxxx, s13, r16.z
                      endif 
                      mul r9.w, r25.w, r25.w
                      mul r9.w, r25.w, r9.w
                    else 
                      mov r9.w, l(1.000000)
                    endif 
                    mul r11.w, r9.w, r11.w
                  endif 
                endif 
                mad r9.w, -r14.w, r1.w, l(1.000000)
                mul r9.w, r9.w, r9.w
                mad r9.w, -r9.w, l(0.620000), l(0.620000)
                add r9.w, -r14.w, r9.w
                mad r9.w, r1.y, r9.w, r14.w
                mul r9.w, r11.w, r9.w
                mov r33.x, r32.x
                lt r10.w, l(0.000000), r13.w
                mad r19.xyz, r9.wwww, r33.xyzx, r17.xyzx
                dp3_sat r9.w, r4.xyzx, r40.xyzx
                mad r20.xyz, r39.xyzx, r7.wwww, r10.xyzx
                dp3 r7.w, r20.xyzx, r20.xyzx
                rsq r7.w, r7.w
                mul r20.xyz, r7.wwww, r20.xyzx
                dp3 r7.w, r20.xyzx, r10.xyzx
                dp3 r13.w, r4.xyzx, r20.xyzx
                mad r14.w, |r13.w|, r0.w, -|r13.w|
                mad r13.w, |r13.w|, r14.w, l(1.000000)
                mad r14.w, r9.w, r0.z, r1.z
                mul r13.w, r13.w, r13.w
                mul r13.w, r14.w, r13.w
                rcp r13.w, r13.w
                mul r9.w, r15.w, r9.w
                mul r9.w, r9.w, r13.w
                mul r9.w, r11.w, r9.w
                mad r20.xyz, r9.wwww, r33.xyzx, r31.xyzx
                add_sat r7.w, -r7.w, l(1.000000)
                mul r11.w, r7.w, r7.w
                mul r11.w, r11.w, r11.w
                mul r7.w, r7.w, r11.w
                mul r7.w, r7.w, r9.w
                mad r39.xyz, r7.wwww, r33.xyzx, r30.xyzx
                movc r17.xyz, r10.wwww, r19.xyzx, r17.xyzx
                movc r30.xyz, r10.wwww, r39.xyzx, r30.xyzx
                movc r31.xyz, r10.wwww, r20.xyzx, r31.xyzx
              endif 
            endif 
          endif 
          break 
          case l(2)
          mov r19.xy, r35.zwzz
          mov r19.z, r36.w
          add r19.xyz, r19.xyzx, -v7.xyzx
          dp3 r7.w, r19.xyzx, r19.xyzx
          rsq r7.w, r7.w
          mul r20.xyz, r7.wwww, r19.xyzx
          dp3 r9.w, r4.xyzx, r20.xyzx
          mov_sat r10.w, r9.w
          lt r11.w, l(0.000000), r10.w
          if_nz r11.w
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r7.z, l(112), t12.yzwx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r7.z, l(128), t12.zxyw
            mov r41.xyz, r39.xyzx
            mov r41.w, r40.y
            dp4 r11.w, r41.xyzw, r18.xyzw
            lt r13.w, r11.w, l(1.000000)
            if_nz r13.w
              mov r20.xyz, l(1.000000,1.000000,1.000000,0)
              mov r13.w, l(0)
            else 
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r7.z, l(172), t12.yzwx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r7.z, l(188), t12.wxyz
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r7.z, l(204), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.w, r7.z, l(236), t12.xxxx
              add r45.xyz, r32.yzwy, -v7.xyzx
              mul r15.w, r35.x, r35.x
              dp3 r16.z, r45.xyzx, r45.xyzx
              div r15.w, r15.w, r16.z
              min r15.w, r15.w, l(1.000000)
              mad_sat r34.xy, r11.wwww, r34.xzxx, r34.ywyy
              mul r34.zw, r34.xxxy, r34.xxxy
              mad r34.xy, r34.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
              mul r34.xy, r34.xyxx, r34.zwzz
              mul r15.w, r15.w, r34.x
              mul r15.w, r34.y, r15.w
              mov r36.w, r37.x
              dp4 r34.x, r36.xyzw, r18.xyzw
              mov r45.xyz, r37.yzwy
              mov r45.w, r38.w
              dp4 r34.y, r45.xyzw, r18.xyzw
              div r21.xy, r34.xyxx, r11.wwww
              lt r11.w, r42.w, l(0.00048828)
              if_nz r11.w
                mov r43.y, r44.x
                mad_sat r34.xy, |r21.xyxx|, r43.zwzz, r43.xyxx
                mul r34.zw, r34.xxxy, r34.xxxy
                mad r34.xy, r34.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
                mul r34.xy, r34.xyxx, r34.zwzz
                mul r11.w, r34.y, r34.x
              else 
                mov r42.w, r43.y
                mul_sat r34.xyzw, |r21.yyxx|, r42.xyzw
                log r34.xyzw, r34.xyzw
                mul r34.xyzw, r34.xyzw, r43.xxxx
                exp r34.xyzw, r34.xyzw
                add r34.xy, r34.zwzz, r34.xyxx
                log r34.xy, r34.xyxx
                mul r34.xy, r34.xyxx, r44.xxxx
                exp r34.xy, r34.xyxx
                mul r16.z, r34.x, r43.z
                mad r26.w, r43.w, r34.y, l(-1.000000)
                mad r16.z, r43.w, r34.y, -r16.z
                div_sat r16.z, r26.w, r16.z
                mul r26.w, r16.z, r16.z
                mad r16.z, r16.z, l(-2.000000), l(3.000000)
                mul r11.w, r16.z, r26.w
              endif 
              mul r13.w, r11.w, r15.w
              and r11.w, r14.w, l(255)
              if_nz r11.w
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyz, r7.z, l(220), t12.xyzx
                dp3 r14.w, r44.yzwy, r21.xyzx
                dp3 r15.w, r34.xyzx, r21.xyzx
                frc r34.x, r14.w
                frc r34.y, r15.w
                iadd r11.w, r11.w, l(-1)
                utof r34.z, r11.w
                sample_l_indexable(texture2darray)(float,float,float,float) r20.xyz, r34.xyzx, t20.xyzw, s2, l(0.000000)
              else 
                mov r20.xyz, l(1.000000,1.000000,1.000000,0)
              endif 
            endif 
            mov r32.yz, r33.yyzy
            mul r20.xyz, r20.xyzx, r32.xyzx
            lt r11.w, l(0.000000), r13.w
            if_nz r11.w
              ubfe r11.w, l(3), l(27), r33.w
              ine r11.w, r11.w, l(1)
              if_nz r11.w
                mad r11.w, |r9.w|, l(-0.200000), l(0.400000)
                mad r22.xyz, r4.xyzx, r11.wwww, v7.xyzx
                mov r39.xyz, r38.xyzx
                dp4 r11.w, r39.xyzw, r22.xyzw
                dp4 r14.w, r41.xyzw, r22.xyzw
                ge r15.w, r14.w, r11.w
                if_nz r15.w
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.y, r7.z, l(144), t12.xxxx
                  mov r36.w, r37.x
                  dp4 r21.x, r36.xyzw, r22.xyzw
                  mov r38.xyz, r37.yzwy
                  dp4 r21.y, r38.xyzw, r22.xyzw
                  div r21.xy, r21.xyxx, r14.wwww
                  mad_sat r21.xy, r21.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  mad r22.xy, r21.xyxx, r40.zwzz, r40.xyxx
                  div r7.z, r11.w, r14.w
                  max r7.z, r7.z, l(0.00006104)
                  and r11.w, r33.w, l(0x0000ffff)
                  if_nz r5.w
                    utof r32.z, r11.w
                    mov r14.w, l(0)
                    mov r15.w, l(0)
                    loop 
                      ige r16.z, r15.w, l(8)
                      breakc_nz r16.z
                      dp2 r21.x, icb[r15.w + 0].xyxx, r25.xyxx
                      dp2 r21.y, icb[r15.w + 0].yxyy, r25.xzxx
                      mad r32.xy, r21.xyxx, r35.yyyy, r22.xyxx
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r16.z, r32.xyzx, t9.xxxx, s13, r7.z
                      mad r14.w, r16.z, l(0.125000), r14.w
                      iadd r15.w, r15.w, l(1)
                    endloop 
                  else 
                    utof r22.z, r11.w
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r14.w, r22.xyzx, t9.xxxx, s13, r7.z
                  endif 
                  mul r7.z, r14.w, r14.w
                  mul r7.z, r14.w, r7.z
                else 
                  mov r7.z, l(1.000000)
                endif 
              else 
                mov r7.z, l(1.000000)
              endif 
              mul r7.z, r7.z, r13.w
              lt r11.w, l(0.000000), r7.z
              if_nz r11.w
                mul r11.w, r0.w, r33.x
                mul r11.w, r10.w, r11.w
                ubfe r13.w, l(4), l(16), r33.w
                ult r15.w, l(0), r13.w
                and r15.w, r0.x, r15.w
                if_nz r15.w
                  iadd r13.w, r13.w, cb2[0].x
                  iadd r13.w, r13.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.w, r13.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r13.w, l(68), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r13.w, l(84), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r13.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r13.w, l(116), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r13.w, l(132), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r13.w, l(148), t12.xyzw
                  mad r16.z, |r9.w|, l(-0.200000), l(0.400000)
                  mad r23.xyz, r4.xyzx, r16.zzzz, v7.xyzx
                  dp4 r21.x, r32.xyzw, r23.xyzw
                  dp4 r21.y, r34.xyzw, r23.xyzw
                  dp4 r16.z, r35.xyzw, r23.xyzw
                  dp4 r22.x, r36.xyzw, r23.xyzw
                  lt r22.y, r22.x, r16.z
                  div r21.xy, r21.xyxx, r22.xxxx
                  mad r21.xy, r21.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r21.xy, r38.zwzz, r21.xyxx
                  mul r21.xy, r38.xyxx, r21.xyxx
                  div r23.xy, r15.wwww, r37.xzxx
                  add r32.xy, -r23.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                  ge r32.xy, r21.xyxx, r32.xyxx
                  ge r23.xy, r23.xyxx, r21.xyxx
                  or r23.xy, r23.xyxx, r32.xyxx
                  or r22.z, r23.y, r23.x
                  or r22.y, r22.y, r22.z
                  if_z r22.y
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r22.y, r13.w, l(28), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.xy, r13.w, l(164), t12.xyxx
                    mov_sat r21.xy, r21.xyxx
                    mad r32.xy, r21.xyxx, r37.xzxx, r37.ywyy
                    mul r13.w, r22.x, r23.y
                    mad r16.z, r23.x, r22.x, r16.z
                    div r13.w, r16.z, r13.w
                    max r13.w, r13.w, l(0.00006104)
                    and r16.z, r22.y, l(0x0000ffff)
                    if_nz r5.w
                      utof r22.z, r16.z
                      mov r21.xy, l(0,0,0,0)
                      loop 
                        ige r23.x, r21.y, l(8)
                        breakc_nz r23.x
                        dp2 r23.x, icb[r21.y + 0].xyxx, r26.xyxx
                        dp2 r23.y, icb[r21.y + 0].yxyy, r26.xzxx
                        mad r22.xy, r23.xyxx, r15.wwww, r32.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.x, r22.xyzx, t9.xxxx, s13, r13.w
                        mad r21.x, r22.x, l(0.125000), r21.x
                        iadd r21.y, r21.y, l(1)
                      endloop 
                    else 
                      utof r32.z, r16.z
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.x, r32.xyzx, t9.xxxx, s13, r13.w
                    endif 
                    mul r13.w, r21.x, r21.x
                    mul r13.w, r21.x, r13.w
                  else 
                    mov r13.w, l(1.000000)
                  endif 
                  mul r7.z, r7.z, r13.w
                else 
                  ubfe r13.w, l(4), l(20), r33.w
                  ult r15.w, l(0), r13.w
                  and r15.w, r0.y, r15.w
                  if_nz r15.w
                    iadd r13.w, r13.w, cb2[0].x
                    iadd r13.w, r13.w, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.w, r13.w, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r13.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r13.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r13.w, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r13.w, l(116), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r13.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r13.w, l(148), t12.xyzw
                    mad r16.z, |r9.w|, l(-0.200000), l(0.400000)
                    mad r24.xyz, r4.xyzx, r16.zzzz, v7.xyzx
                    dp4 r22.x, r32.xyzw, r24.xyzw
                    dp4 r22.y, r33.xyzw, r24.xyzw
                    dp4 r16.z, r34.xyzw, r24.xyzw
                    dp4 r21.y, r35.xyzw, r24.xyzw
                    lt r22.z, r21.y, r16.z
                    div r22.xy, r22.xyxx, r21.yyyy
                    mad r22.xy, r22.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r22.xy, r37.zwzz, r22.xyxx
                    mul r22.xy, r37.xyxx, r22.xyxx
                    div r23.xy, r15.wwww, r36.xzxx
                    add r24.xy, -r23.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                    ge r24.xy, r22.xyxx, r24.xyxx
                    ge r23.xy, r23.xyxx, r22.xyxx
                    or r23.xy, r23.xyxx, r24.xyxx
                    or r23.x, r23.y, r23.x
                    or r22.z, r22.z, r23.x
                    if_z r22.z
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r22.z, r13.w, l(28), t12.xxxx
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.xy, r13.w, l(164), t12.xyxx
                      mov_sat r22.xy, r22.xyxx
                      mad r24.xy, r22.xyxx, r36.xzxx, r36.ywyy
                      mul r13.w, r21.y, r23.y
                      mad r16.z, r23.x, r21.y, r16.z
                      div r13.w, r16.z, r13.w
                      max r13.w, r13.w, l(0.00006104)
                      and r16.z, r22.z, l(0x0000ffff)
                      if_nz r5.w
                        utof r22.z, r16.z
                        mov r21.y, l(0)
                        mov r23.x, l(0)
                        loop 
                          ige r23.y, r23.x, l(8)
                          breakc_nz r23.y
                          dp2 r32.x, icb[r23.x + 0].xyxx, r27.xyxx
                          dp2 r32.y, icb[r23.x + 0].yxyy, r27.xzxx
                          mad r22.xy, r32.xyxx, r15.wwww, r24.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.x, r22.xyzx, t9.xxxx, s13, r13.w
                          mad r21.y, r22.x, l(0.125000), r21.y
                          iadd r23.x, r23.x, l(1)
                        endloop 
                      else 
                        utof r24.z, r16.z
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.y, r24.xyzx, t9.xxxx, s13, r13.w
                      endif 
                      mul r13.w, r21.y, r21.y
                      mul r13.w, r21.y, r13.w
                    else 
                      mov r13.w, l(1.000000)
                    endif 
                    mul r7.z, r7.z, r13.w
                  endif 
                endif 
                mad r13.w, -r10.w, r1.w, l(1.000000)
                mul r13.w, r13.w, r13.w
                mad r13.w, -r13.w, l(0.620000), l(0.620000)
                add r13.w, -r10.w, r13.w
                mad r13.w, r1.y, r13.w, r10.w
                mul r13.w, r7.z, r13.w
                lt r9.w, l(0.000000), r9.w
                mad r22.xyz, r13.wwww, r20.xyzx, r17.xyzx
                mad r19.xyz, r19.xyzx, r7.wwww, r10.xyzx
                dp3 r7.w, r19.xyzx, r19.xyzx
                rsq r7.w, r7.w
                mul r19.xyz, r7.wwww, r19.xyzx
                dp3 r7.w, r19.xyzx, r10.xyzx
                dp3 r13.w, r4.xyzx, r19.xyzx
                mad r15.w, |r13.w|, r0.w, -|r13.w|
                mad r13.w, |r13.w|, r15.w, l(1.000000)
                mad r10.w, r10.w, r0.z, r1.z
                mul r13.w, r13.w, r13.w
                mul r10.w, r10.w, r13.w
                rcp r10.w, r10.w
                mul r10.w, r11.w, r10.w
                mul r7.z, r7.z, r10.w
                mul r7.z, r7.z, l(0.250000)
                mad r19.xyz, r7.zzzz, r20.xyzx, r31.xyzx
                add_sat r7.w, -r7.w, l(1.000000)
                mul r10.w, r7.w, r7.w
                mul r10.w, r10.w, r10.w
                mul r7.w, r7.w, r10.w
                mul r7.z, r7.w, r7.z
                mad r20.xyz, r7.zzzz, r20.xyzx, r30.xyzx
                movc r17.xyz, r9.wwww, r22.xyzx, r17.xyzx
                movc r30.xyz, r9.wwww, r20.xyzx, r30.xyzx
                movc r31.xyz, r9.wwww, r19.xyzx, r31.xyzx
              endif 
            endif 
          endif 
          break 
          default 
          break 
        endswitch 
      endif 
    endif 
  endloop 
  mov r12.yzw, r17.xxyz
  mov r28.xyz, r30.xyzx
  mov r29.xyz, r31.xyzx
  iadd r3.w, r3.w, l(32)
endloop 
add r0.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r0.xyz, r0.xyzx, r28.xyzx
mad r0.xyz, r29.xyzx, r3.xyzx, r0.xyzx
mad r0.xyz, r12.yzwy, r2.xyzx, r0.xyzx
dp3 r0.w, r0.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
max r0.w, r0.w, l(0.000100)
max r0.w, r0.w, cb1[85].x
mul r1.xyz, r0.wwww, r5.xyzx
movc r1.xyz, cb0[20].wwww, r1.xyzx, r5.xyzx
add r0.xyz, r0.xyzx, r1.xyzx
lt r0.w, l(0.000000), cb2[9].z
if_nz r0.w
  dp3 r0.w, v7.xyzx, v7.xyzx
  rsq r1.x, r0.w
  mul r1.xyz, r1.xxxx, v7.xyzx
  sqrt r0.w, r0.w
  lt r1.w, l(0.000000), cb2[13].w
  if_nz r1.w
    mad r2.xy, r0.wwww, cb2[15].xyxx, cb2[14].zwzz
    mul r2.xy, r2.xyxx, cb2[16].xyxx
    lt r1.w, l(0.010000), |v7.z|
    mul r2.zw, v7.zzzz, cb2[15].zzzw
    mul r3.xy, r2.zwzz, l(-1.442695, -1.442695, 0.000000, 0.000000)
    exp r3.xy, r3.xyxx
    add r3.xy, -r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    div r2.zw, r3.xxxy, r2.zzzw
    mul r2.zw, r2.zzzw, r2.xxxy
    movc r2.xy, r1.wwww, r2.zwzz, r2.xyxx
    mul r2.xzw, r2.xxxx, cb2[12].xxyz
    exp r2.xzw, r2.xxzw
    mul r3.xyz, r2.yyyy, cb2[12].xyzx
    exp r3.xyz, r3.xyzx
    add r3.xyz, -r2.xzwx, r3.xyzx
    mad r2.xyz, cb2[13].wwww, r3.xyzx, r2.xzwx
  else 
    mad r1.w, r0.w, cb2[15].x, cb2[14].z
    mul r1.w, r1.w, cb2[16].x
    lt r2.w, l(0.010000), |v7.z|
    mul r3.x, v7.z, cb2[15].z
    mul r3.y, r3.x, l(-1.442695)
    exp r3.y, r3.y
    add r3.y, -r3.y, l(1.000000)
    div r3.x, r3.y, r3.x
    mul r3.x, r1.w, r3.x
    movc r1.w, r2.w, r3.x, r1.w
    mul r3.xyz, r1.wwww, cb2[12].xyzx
    exp r2.xyz, r3.xyzx
  endif 
  mad r2.xyz, r2.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r2.xyz, r2.xyzx, -cb2[9].zzzz
  dp3 r1.x, cb2[7].yzwy, -r1.xyzx
  mad r1.y, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r1.z, cb2[8].w, -r1.x, l(1.000000)
  mul r1.z, r1.z, r1.z
  mul r1.z, r1.z, l(12.566371)
  div r1.y, r1.y, r1.z
  add r0.w, r0.w, -cb2[10].w
  mul_sat r0.w, r0.w, cb2[11].w
  mul r0.w, r0.w, r1.y
  mov_sat r1.x, r1.x
  mad r1.x, r1.x, r1.x, l(1.000000)
  mad r1.x, r1.x, l(0.05968310), l(-1.000000)
  mad r1.x, cb2[8].z, r1.x, l(1.000000)
  mul r1.yzw, r0.wwww, cb2[11].xxyz
  mad r1.xyz, r1.xxxx, cb2[10].xyzx, r1.yzwy
  mul r1.xyz, r1.xyzx, cb2[9].wwww
  add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r1.xyz, r1.xyzx, r3.xyzx
  mad r1.xyz, r0.xyzx, r2.xyzx, r1.xyzx
else 
  mul r0.w, v7.z, cb2[6].x
  mad r1.w, cb2[6].x, v7.z, cb2[5].x
  lt r2.x, |r0.w|, l(0.000100)
  min r2.y, r1.w, l(64.000000)
  mul r2.y, r2.y, l(1.442695)
  exp r2.y, r2.y
  mov_sat r2.z, cb2[6].z
  lt r2.w, r1.w, l(0.000000)
  add r1.w, r1.w, l(1.000000)
  movc r1.w, r2.w, r2.y, r1.w
  add r1.w, r1.w, -cb2[6].z
  movc r0.w, r2.x, l(1.000000), r0.w
  div r0.w, r1.w, r0.w
  movc r0.w, r2.x, r2.z, r0.w
  mul r0.w, r0.w, cb2[5].z
  dp3 r1.w, v7.xyzx, v7.xyzx
  sqrt r2.x, r1.w
  mad r0.w, r0.w, r2.x, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  rsq r1.w, r1.w
  mul r2.xyz, r1.wwww, v7.xyzx
  dp3 r1.w, cb2[7].yzwy, r2.xyzx
  mad_sat r1.w, cb2[8].y, r1.w, cb2[8].x
  add r2.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r2.xyzw, r1.wwww, r2.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r2.w
  add r2.xyz, -r0.xyzx, r2.xyzx
  mad r1.xyz, r0.wwww, r2.xyzx, r0.xyzx
endif 
mul r0.xyz, r1.xyzx, cb1[85].yyyy
ge r1.xyz, r0.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.xyz, r0.xyzx, r1.xyzx
min o0.xyz, r0.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
ret 
// Approximately 2683 instruction slots used
