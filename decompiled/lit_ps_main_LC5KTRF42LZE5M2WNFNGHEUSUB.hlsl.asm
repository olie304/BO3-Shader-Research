//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:38:03 2021
//
//
// Note: shader requires additional functionality:
//       Early depth-stencil
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float3 colorTint;                  // Offset:  160 Size:    12
//   float3 specColorTint;              // Offset:  176 Size:    12 [unused]
//   float baseNormalHeight;            // Offset:  188 Size:     4
//   float2 glossRange;                 // Offset:  192 Size:     8
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16 [unused]
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16
//   float4 debugNormalOverride;        // Offset:  960 Size:    16
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16
//   float4 debugGlossOverride;         // Offset:  992 Size:    16
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// colorSampler                      sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// specColorSampler                  sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// normalSampler                     sampler      NA          NA             s5      1 
// aoSampler                         sampler      NA          NA             s6      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// colorMap                          texture  float4          2d             t0      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// tintMask                          texture  float4          2d            t21      1 
// specColorMap                      texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// normalMap                         texture  float4          2d            t24      1 
// glossMap                          texture  float4          2d            t25      1 
// aoMap                             texture  float4          2d            t26      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// gOit_Pixels                           UAV    uint          2d             u6      1 
// gOit_Nodes                            UAV   uint2     2darray             u7      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyz 
// COLOR                    1   x           1     NONE   float       
// TEXCOORD                 0    yz         1     NONE   float    yz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// OFFPOSITION              0   xyz         5     NONE   float   xyz 
// SV_IsFrontFace           0   x           6    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | forceEarlyDepthStencil
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[13], immediateIndexed
dcl_constantbuffer CB1[93], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2d (float,float,float,float) t26
dcl_resource_texture2darray (float,float,float,float) t31
dcl_uav_typed_texture2d (uint,uint,uint,uint) u6
dcl_uav_typed_texture2darray (uint,uint,uint,uint) u7
dcl_input_ps_siv linear noperspective v0.xyz, position
dcl_input_ps linear v1.yz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps_sgv constant v6.x, is_front_face
dcl_output o0.xyzw
dcl_temps 46
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.yzyy, t0.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r1.x, v1.yzyy, t21.xyzw, s1
add r1.yzw, cb0[10].xxyz, l(0.000000, -1.000000, -1.000000, -1.000000)
mad r1.xyz, r1.xxxx, r1.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r0.xyz, r0.xyzx, r1.xyzx
lt r1.x, l(0.000000), cb1[64].w
if_nz r1.x
  ftoi r1.x, cb1[64].w
  lod r1.y, v1.yzyy, t0.y, s1
  lod r1.z, v1.yzyy, t0.x, s1
  lt r1.y, r1.y, r1.z
  lt r1.z, l(0.000000), r1.z
  and r2.xyz, r1.xxxx, l(1, 2, 4, 0)
  movc r3.xyz, r2.xxxx, l(1.000000,0,1.000000,0), r0.xyzx
  movc r2.xyw, r2.yyyy, l(0,1.000000,0,1.000000), r0.xyxz
  movc r1.xzw, r1.zzzz, r3.xxyz, r2.xxyw
  movc r2.xyz, r2.zzzz, l(0,1.000000,0,0), r0.xyzx
  movc r0.xyz, r1.yyyy, r1.xzwx, r2.xyzx
endif 
add r1.x, -r0.w, cb1[59].x
mad r1.w, cb1[59].w, r1.x, r0.w
eq r0.w, r1.w, l(0.000000)
if_nz r0.w
  mov o0.xyzw, l(0,0,0,0)
  ret 
endif 
sample_indexable(texture2d)(float,float,float,float) r2.xyz, v1.yzyy, t22.xyzw, s3
sample_indexable(texture2d)(float,float,float,float) r0.w, v1.yzyy, t25.yzwx, s3
sample_indexable(texture2d)(float,float,float,float) r3.xyz, v1.yzyy, t24.xyzw, s5
sample_indexable(texture2d)(float,float,float,float) r2.w, v1.yzyy, t26.yzwx, s6
add r3.w, -cb0[12].x, cb0[12].y
mad r0.w, r0.w, r3.w, cb0[12].x
mul_sat r0.w, r0.w, l(0.05882353)
add r3.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.000000, 0.000000)
mad r3.xyz, cb0[11].wwww, r3.xyzx, l(0.500000, 0.500000, 0.000000, 0.000000)
mad r3.xy, r3.xyxx, l(1.99218750, 1.99218750, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r4.x, r3.xyxx, r3.xyxx
add r4.x, -r4.x, l(1.000000)
max r4.x, r4.x, l(0.000000)
sqrt r4.x, r4.x
mul r3.z, r3.z, r3.z
mul r3.z, r3.z, l(0.33333334)
min r3.z, r3.z, l(1.000000)
movc r4.y, v6.x, l(1.000000), l(-1.000000)
dp3 r4.z, v2.xyzx, v2.xyzx
rsq r4.z, r4.z
mul r5.xyz, r4.zzzz, v2.xyzx
mul r5.xyz, r4.yyyy, r5.xyzx
dp3 r4.z, v3.xyzx, v3.xyzx
rsq r4.z, r4.z
mul r6.xyz, r4.zzzz, v3.xyzx
mul r6.xyz, r4.yyyy, r6.xyzx
dp3 r4.z, v4.xyzx, v4.xyzx
rsq r4.z, r4.z
mul r7.xyz, r4.zzzz, v4.xyzx
mul r4.yzw, r4.yyyy, r7.xxyz
mul r0.w, r0.w, l(-17.000000)
exp r0.w, r0.w
add r0.w, r0.w, r3.z
log r0.w, r0.w
mul r0.w, r0.w, l(-0.05882353)
max r0.w, r0.w, l(0.000000)
mul r4.yzw, r3.yyyy, r4.yyzw
mad r4.yzw, r6.xxyz, r3.xxxx, r4.yyzw
mad r4.xyz, r5.xyzx, r4.xxxx, r4.yzwy
dp3 r3.x, r4.xyzx, r4.xyzx
rsq r3.x, r3.x
mul r4.xyz, r3.xxxx, r4.xyzx
mad r3.x, cb1[62].x, r3.w, cb0[12].x
mul_sat r3.x, r3.x, l(0.05882353)
mul r3.x, r3.x, l(-17.000000)
exp r3.x, r3.x
add r3.x, r3.x, r3.z
log r3.x, r3.x
mul r3.x, r3.x, l(-0.05882353)
max r3.x, r3.x, l(0.000000)
add r3.yzw, -r0.xxyz, cb1[58].xxyz
mad r0.xyz, cb1[58].wwww, r3.yzwy, r0.xyzx
add r3.yzw, -r2.xxyz, cb1[61].xxyz
mad r2.xyz, cb1[61].wwww, r3.yzwy, r2.xyzx
add r3.x, -r0.w, r3.x
mad r3.y, cb1[62].w, r3.x, r0.w
add r0.w, -r2.w, cb1[63].x
mad r0.w, cb1[63].w, r0.w, r2.w
movc r5.xyz, v6.xxxx, v2.xyzx, -v2.xyzx
dp3 r2.w, r5.xyzx, r5.xyzx
rsq r2.w, r2.w
mad r5.xyz, r5.xyzx, r2.wwww, -r4.xyzx
mad r4.xyz, cb1[60].wwww, r5.xyzx, r4.xyzx
ftou r3.zw, v0.xxxy
ge r2.w, v0.z, l(0.984375)
mul r5.x, v0.z, l(1.01587307)
mad r5.y, v0.z, l(64.000000), l(-63.000000)
movc r2.w, r2.w, r5.y, r5.x
max r2.w, r2.w, l(0.00000001)
rcp r2.w, r2.w
dp3 r5.x, -v5.xyzx, -v5.xyzx
rsq r5.x, r5.x
mul r5.yzw, r5.xxxx, -v5.xxyz
ine r6.x, cb1[92].x, l(0)
utof r6.yz, r3.wwzw
dp2 r6.w, r6.zyzz, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r6.w, r6.w
mul r6.w, r6.w, l(52.982918)
frc r6.w, r6.w
mad r6.w, r6.w, l(6.28318548), cb1[70].w
sincos r7.x, r8.x, r6.w
dp2 r6.y, r6.yzyy, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r6.y, r6.y
mul r6.y, r6.y, l(52.982918)
frc r6.y, r6.y
mad r6.y, r6.y, l(6.28318548), cb1[70].w
sincos r9.x, r10.x, r6.y
dp3_sat r3.x, r4.xyzx, r5.yzwy
dp3 r6.y, -r5.yzwy, r4.xyzx
add r6.y, r6.y, r6.y
mad r11.xyz, r4.xyzx, -r6.yyyy, -r5.yzwy
mul r6.y, r3.y, l(17.000000)
exp r6.y, r6.y
add r6.y, r6.y, l(2.000000)
div r6.y, l(2.000000), r6.y
sqrt r6.z, r6.y
add r6.w, -r3.y, l(1.000000)
mul r7.z, r6.w, l(5.000000)
mad r7.w, r6.w, l(5.000000), l(-2.500000)
mul_sat r7.w, r7.w, l(0.400000)
mul r7.w, r7.w, l(100.000000)
mad r9.yz, -r6.wwww, l(0.000000, 10.000000, 5.000000, 0.000000), l(0.000000, 6.857410, 7.085000, 0.000000)
exp r8.w, r9.y
mul r8.w, r3.x, r8.w
mul r8.w, r8.w, l(9.136810)
mul r9.y, r6.w, r7.z
mad r9.y, -r9.y, l(2.015905), r9.z
exp r9.y, r9.y
mul r9.y, r3.x, r9.y
mul r9.y, r9.y, l(9.708090)
max r8.w, r8.w, r9.y
max r8.w, r8.w, l(1.268160)
mul r2.w, r2.w, l(0.00781250)
min r2.w, r2.w, l(15.000000)
ftou r2.w, r2.w
ushr r12.xy, r3.zwzz, l(6, 6, 0, 0)
ishl r12.z, r2.w, l(4)
mov r13.xy, l(0,0,0,0)
mov r14.w, l(0)
mov r15.yz, l(0,0,1.000000,0)
mov r16.xy, l(0,0,0,0)
mov r17.xy, l(0,0,0,0)
mov r18.xy, l(0,0,0,0)
mov r19.x, l(1.000000)
mov r20.xyzw, l(0,0,0,0)
mov r21.yzw, l(0,0,0,0)
mov r2.w, l(0)
mov r3.z, l(0)
loop 
  uge r3.w, r3.z, cb2[0].y
  breakc_nz r3.w
  ushr r13.z, r3.z, l(5)
  iadd r14.xyz, r12.xyzx, r13.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r3.w, r14.xyzw, t7.yzwx
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r22.xyzw, r3.z, l(0), t15.wxyz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r23.xyzw, r3.z, l(16), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r3.z, l(32), t15.yxwz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r3.z, l(48), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r3.z, l(64), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r3.z, l(80), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r9.yz, r3.z, l(96), t15.xxyx
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r3.z, l(116), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r3.z, l(132), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r3.z, l(148), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r3.z, l(164), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r3.z, l(180), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r3.z, l(196), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xy, r3.z, l(212), t15.xyxx
  add r10.yzw, -r22.yyzw, v5.xxyz
  dp3 r9.w, r10.yzwy, r10.yzwy
  sqrt r9.w, r9.w
  ge r9.w, cb2[54].y, r9.w
  and r12.w, r28.y, l(0x0000ffff)
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r12.w, l(0), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r12.w, l(16), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r12.w, l(32), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r38.xyzw, r12.w, l(48), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r39.xyzw, r12.w, l(64), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r40.xyzw, r12.w, l(80), t16.xyzw
  dp3 r13.z, r35.xyzx, r10.yzwy
  add_sat r13.z, r35.w, r13.z
  dp3 r13.w, r36.xyzx, r10.yzwy
  add_sat r13.w, r36.w, r13.w
  mul r13.z, r13.w, r13.z
  dp3 r13.w, r37.xyzx, r10.yzwy
  add_sat r13.w, r37.w, r13.w
  mul r13.z, r13.w, r13.z
  dp3 r13.w, r38.xyzx, r10.yzwy
  add_sat r13.w, r38.w, r13.w
  mul r13.z, r13.w, r13.z
  dp3 r13.w, r39.xyzx, r10.yzwy
  add_sat r13.w, r39.w, r13.w
  mul r13.z, r13.w, r13.z
  dp3 r13.w, r40.xyzx, r10.yzwy
  add_sat r13.w, r40.w, r13.w
  mul r15.x, r13.w, r13.z
  and r13.z, r9.y, l(1)
  movc r13.zw, r13.zzzz, r15.xxxy, r15.zzzx
  mov r14.xy, r28.zwzz
  mov r14.z, r29.z
  dp3 r15.x, r11.xyzx, r14.xyzx
  dp3 r14.x, r10.yzwy, r14.xyzx
  add r14.x, -r29.w, r14.x
  ge r14.y, r14.x, l(0.000000)
  max r14.x, r7.w, |r14.x|
  movc r14.x, r14.y, r14.x, -r14.x
  max r14.y, -r15.x, l(0.00000010)
  div r14.x, r14.x, r14.y
  min r14.x, |r14.x|, l(131072.000000)
  mov r29.z, r30.z
  dp3 r14.y, r11.xyzx, r29.xyzx
  dp3 r14.z, r10.yzwy, r29.xyzx
  add r14.z, -r30.w, r14.z
  ge r15.x, r14.z, l(0.000000)
  max r14.z, r7.w, |r14.z|
  movc r14.z, r15.x, r14.z, -r14.z
  max r14.y, -r14.y, l(0.00000010)
  div r14.y, r14.z, r14.y
  min r14.x, |r14.y|, r14.x
  mov r30.z, r31.z
  dp3 r14.y, r11.xyzx, r30.xyzx
  dp3 r14.z, r10.yzwy, r30.xyzx
  add r14.z, -r31.w, r14.z
  ge r15.x, r14.z, l(0.000000)
  max r14.z, r7.w, |r14.z|
  movc r14.z, r15.x, r14.z, -r14.z
  max r14.y, -r14.y, l(0.00000010)
  div r14.y, r14.z, r14.y
  min r14.x, |r14.y|, r14.x
  mov r31.z, r32.z
  dp3 r14.y, r11.xyzx, r31.xyzx
  dp3 r14.z, r10.yzwy, r31.xyzx
  add r14.z, -r32.w, r14.z
  ge r15.x, r14.z, l(0.000000)
  max r14.z, r7.w, |r14.z|
  movc r14.z, r15.x, r14.z, -r14.z
  max r14.y, -r14.y, l(0.00000010)
  div r14.y, r14.z, r14.y
  min r14.x, |r14.y|, r14.x
  mov r32.z, r33.x
  dp3 r14.y, r11.xyzx, r32.xyzx
  dp3 r14.z, r10.yzwy, r32.xyzx
  add r14.z, -r33.y, r14.z
  ge r15.x, r14.z, l(0.000000)
  max r14.z, r7.w, |r14.z|
  movc r14.z, r15.x, r14.z, -r14.z
  max r14.y, -r14.y, l(0.00000010)
  div r14.y, r14.z, r14.y
  min r14.x, |r14.y|, r14.x
  mov r34.zw, r33.zzzw
  dp3 r14.y, r11.zxyz, r34.xzwx
  dp3 r14.z, r10.wyzw, r34.xzwx
  add r14.z, -r34.y, r14.z
  ge r15.x, r14.z, l(0.000000)
  max r14.z, r7.w, |r14.z|
  movc r14.z, r15.x, r14.z, -r14.z
  max r14.y, -r14.y, l(0.00000010)
  div r14.y, r14.z, r14.y
  min r14.x, |r14.y|, r14.x
  mov r29.x, r25.w
  mov r29.yz, r26.zzwz
  add r29.xyz, r10.yzwy, r29.xyzx
  mad r29.xyz, r11.xyzx, r14.xxxx, r29.xyzx
  dp3 r14.y, r29.xyzx, r29.xyzx
  sqrt r14.y, r14.y
  div r14.x, r14.x, r14.y
  add r14.x, r14.x, r14.x
  sqrt r14.x, r14.x
  mad r14.x, r6.w, l(5.000000), r14.x
  add r14.x, r14.x, l(-0.844800)
  mov r22.y, r23.z
  mov r22.z, r24.x
  dp3 r30.x, r29.xyzx, r22.xyzx
  mov r31.xy, r23.xwxx
  mov r31.z, r24.w
  dp3 r30.y, r29.xyzx, r31.xyzx
  mov r24.x, r23.y
  dp3 r30.z, r29.xyzx, r24.xyzx
  ubfe r14.yz, l(0, 6, 9, 0), l(0, 25, 16, 0), r28.yyyy
  utof r30.w, r14.z
  sample_l_indexable(texturecubearray)(float,float,float,float) r23.xyz, r30.xyzw, t8.xyzw, s2, r14.x
  and r28.yzw, r23.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
  ieq r28.yzw, r28.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
  or r14.x, r28.z, r28.y
  or r14.x, r28.w, r14.x
  movc r23.xyz, r14.xxxx, l(1.000000,1.000000,0,0), r23.xyzx
  dp3 r29.x, r10.yzwy, r22.xyzx
  dp3 r29.y, r10.yzwy, r31.xyzx
  dp3 r29.z, r10.yzwy, r24.xyzx
  mad_sat r25.xyz, r29.xyzx, r25.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mov r26.z, r27.x
  mad r25.xyz, r25.xyzx, r26.xyzx, r27.yzwy
  dp3 r30.x, r4.xyzx, r22.xyzx
  dp3 r30.y, r4.xyzx, r31.xyzx
  dp3 r30.z, r4.xyzx, r24.xyzx
  lt r22.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r30.xyzx
  movc r16.z, r22.x, l(0), l(0.500000)
  add r24.xyz, r16.xyzx, r25.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r24.xyz, r24.xyzx, t17.xyzw, s4, l(0.000000)
  movc r17.z, r22.y, l(0), l(0.500000)
  add r22.xyw, r17.xyxz, r25.xyxz
  sample_l_indexable(texture3d)(float,float,float,float) r22.xyw, r22.xywx, t18.xywz, s4, l(0.000000)
  movc r18.z, r22.z, l(0), l(0.500000)
  add r25.xyz, r18.xyzx, r25.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r25.xyz, r25.xyzx, t19.xyzw, s4, l(0.000000)
  mul r26.xyz, r30.xyzx, r30.xyzx
  sample_l_indexable(texturecubearray)(float,float,float,float) r27.xyz, r30.xyzw, t8.xyzw, s2, l(6.000000)
  and r28.yzw, r27.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
  ieq r28.yzw, r28.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
  or r14.x, r28.z, r28.y
  or r14.x, r28.w, r14.x
  movc r27.xyz, r14.xxxx, l(1.000000,1.000000,0,0), r27.xyzx
  mov r29.xyzw, r20.xyzw
  mov r28.yzw, r21.yyzw
  mov r14.x, r2.w
  mov r14.z, r3.w
  loop 
    breakc_z r14.z
    firstbit_lo r15.x, r14.z
    ishl r15.x, l(1), r15.x
    and r15.w, r14.z, r15.x
    if_nz r15.w
      not r15.x, r15.x
      and r14.z, r14.z, r15.x
      if_nz r9.w
        mov r15.x, r9.y
        mov r30.xy, r13.zwzz
        mov r15.w, l(1)
        loop 
          ige r16.z, r15.w, r14.y
          breakc_nz r16.z
          iadd r16.z, r12.w, r15.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r16.z, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r16.z, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r16.z, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r16.z, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r16.z, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r16.z, l(80), t16.xyzw
          dp3 r16.z, r31.xyzx, r10.yzwy
          add_sat r16.z, r31.w, r16.z
          mul r16.z, r16.z, r30.x
          dp3 r16.w, r32.xyzx, r10.yzwy
          add_sat r16.w, r32.w, r16.w
          mul r16.z, r16.w, r16.z
          dp3 r16.w, r33.xyzx, r10.yzwy
          add_sat r16.w, r33.w, r16.w
          mul r16.z, r16.w, r16.z
          dp3 r16.w, r34.xyzx, r10.yzwy
          add_sat r16.w, r34.w, r16.w
          mul r16.z, r16.w, r16.z
          dp3 r16.w, r35.xyzx, r10.yzwy
          add_sat r16.w, r35.w, r16.w
          mul r16.z, r16.w, r16.z
          dp3 r16.w, r36.xyzx, r10.yzwy
          add_sat r16.w, r36.w, r16.w
          mul r30.x, r16.w, r16.z
          ushr r17.z, r15.x, l(2)
          ubfe r17.w, l(1), l(2), r15.x
          and r18.z, r17.z, l(2)
          max r18.w, r30.x, r30.y
          mad r16.z, -r16.z, r16.w, l(1.000000)
          mul r16.z, r16.z, r30.y
          movc r19.y, r18.z, r16.z, r18.w
          movc r30.xy, r17.wwww, r30.xyxx, r19.xyxx
          iadd r15.w, r15.w, l(1)
          mov r15.x, r17.z
        endloop 
        mov_sat r30.y, r30.y
        mul r15.x, r9.z, r30.y
        lt r15.w, l(0.000000), r15.x
        if_nz r15.w
          mad r31.z, r30.y, r9.z, r28.w
          mul r15.x, r28.x, r15.x
          mul r19.yzw, r15.xxxx, r26.xxyz
          mul r30.xzw, r19.zzzz, r22.xxyw
          mad r30.xzw, r24.xxyz, r19.yyyy, r30.xxzw
          mad r19.yzw, r25.xxyz, r19.wwww, r30.xxzw
          mul r30.xzw, r27.xxyz, r19.yyzw
          dp3 r15.w, r30.xzwx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r32.xyz, r19.yzwy, r27.xyzx, r29.xyzx
          mul r16.z, r8.w, r15.w
          mul r19.yzw, r15.xxxx, r23.xxyz
          dp3 r15.x, r19.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r15.x, r8.w, r15.w, r15.x
          div r15.x, r16.z, r15.x
          mov r33.x, r29.w
          mov r33.yz, r28.yyzy
          mad r31.xyw, r19.zwzy, r15.xxxx, r33.yzyx
          mov r32.w, r31.w
        else 
          mov r32.xyzw, r29.xyzw
          mov r31.xyz, r28.yzwy
        endif 
        mov r14.x, l(-1)
        mov r29.xyzw, r32.xyzw
        mov r28.yzw, r31.xxyz
        break 
      endif 
    endif 
  endloop 
  if_nz r14.x
    mov r20.xyzw, r29.xyzw
    mov r21.yzw, r28.yyzw
    mov r2.w, l(-1)
    break 
  endif 
  iadd r3.z, r3.z, l(32)
  mov r20.xyzw, r29.xyzw
  mov r21.yzw, r28.yyzw
  mov r2.w, r14.x
endloop 
if_z r2.w
  iadd r2.w, cb2[0].y, -cb2[58].x
  and r3.z, r2.w, l(-32)
  iadd r3.w, r2.w, -r3.z
  and r9.y, cb2[0].y, l(-32)
  iadd r9.z, -r9.y, cb2[0].y
  mov r13.xy, l(0,0,0,0)
  mov r14.w, l(0)
  mov r15.yz, l(0,0,1.000000,0)
  mov r16.xy, l(0,0,0,0)
  mov r17.x, l(1.000000)
  mov r18.xy, l(0,0,0,0)
  mov r19.xy, l(0,0,0,0)
  mov r22.xyzw, r20.xyzw
  mov r23.yzw, r21.yyzw
  mov r9.w, r3.z
  loop 
    uge r10.y, r9.w, cb2[0].y
    breakc_nz r10.y
    ushr r13.z, r9.w, l(5)
    iadd r14.xyz, r12.xyzx, r13.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r10.y, r14.xyzw, t7.yxzw
    ieq r10.z, r3.z, r9.w
    bfi r10.w, r3.w, l(0), l(0), r10.y
    movc r10.y, r10.z, r10.w, r10.y
    ieq r10.z, r9.y, r9.w
    ubfe r10.w, r9.z, l(0), r10.y
    movc r10.y, r10.z, r10.w, r10.y
    iadd r10.z, r9.w, cb2[0].x
    mov r24.xyzw, r22.xyzw
    mov r25.xyz, r23.yzwy
    mov r10.w, r10.y
    loop 
      breakc_z r10.w
      firstbit_lo r12.w, r10.w
      ishl r13.z, l(1), r12.w
      and r13.w, r10.w, r13.z
      if_nz r13.w
        xor r10.w, r10.w, r13.z
        iadd r13.z, r10.z, r12.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r26.xyzw, r13.z, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r14.xy, r13.z, l(16), t11.xyxx
        add r26.xyz, r26.xyzx, -v5.xyzx
        mov r14.z, r26.w
        lt r14.xyz, |r26.xyzx|, r14.zxyz
        and r13.z, r14.y, r14.x
        and r13.z, r14.z, r13.z
        if_nz r13.z
          iadd r12.w, r9.w, r12.w
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r12.w, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r13.zw, r12.w, l(96), t15.xxxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r12.w, l(116), t15.zwxy
          add r14.xyz, -r26.yzwy, v5.xyzx
          and r15.w, r27.w, l(0x0000ffff)
          ubfe r16.w, l(6), l(25), r27.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r15.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r15.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r15.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r15.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r15.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r15.w, l(80), t16.xyzw
          dp3 r17.z, r28.xyzx, r14.xyzx
          add_sat r17.z, r28.w, r17.z
          dp3 r17.w, r29.xyzx, r14.xyzx
          add_sat r17.w, r29.w, r17.w
          mul r17.z, r17.w, r17.z
          dp3 r17.w, r30.xyzx, r14.xyzx
          add_sat r17.w, r30.w, r17.w
          mul r17.z, r17.w, r17.z
          dp3 r17.w, r31.xyzx, r14.xyzx
          add_sat r17.w, r31.w, r17.w
          mul r17.z, r17.w, r17.z
          dp3 r17.w, r32.xyzx, r14.xyzx
          add_sat r17.w, r32.w, r17.w
          mul r17.z, r17.w, r17.z
          dp3 r17.w, r33.xyzx, r14.xyzx
          add_sat r17.w, r33.w, r17.w
          mul r15.x, r17.w, r17.z
          and r17.z, r13.z, l(1)
          movc r17.zw, r17.zzzz, r15.xxxy, r15.zzzx
          mov r15.x, r13.z
          mov r28.xy, r17.zwzz
          mov r18.w, l(1)
          loop 
            ige r19.w, r18.w, r16.w
            breakc_nz r19.w
            iadd r19.w, r15.w, r18.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r19.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r19.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r19.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r19.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r19.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r19.w, l(80), t16.xyzw
            dp3 r19.w, r29.xyzx, r14.xyzx
            add_sat r19.w, r29.w, r19.w
            mul r19.w, r19.w, r28.x
            dp3 r26.w, r30.xyzx, r14.xyzx
            add_sat r26.w, r30.w, r26.w
            mul r19.w, r19.w, r26.w
            dp3 r26.w, r31.xyzx, r14.xyzx
            add_sat r26.w, r31.w, r26.w
            mul r19.w, r19.w, r26.w
            dp3 r26.w, r32.xyzx, r14.xyzx
            add_sat r26.w, r32.w, r26.w
            mul r19.w, r19.w, r26.w
            dp3 r26.w, r33.xyzx, r14.xyzx
            add_sat r26.w, r33.w, r26.w
            mul r19.w, r19.w, r26.w
            dp3 r26.w, r34.xyzx, r14.xyzx
            add_sat r26.w, r34.w, r26.w
            mul r28.x, r19.w, r26.w
            ushr r28.z, r15.x, l(2)
            ubfe r28.w, l(1), l(2), r15.x
            and r29.x, r28.z, l(2)
            max r29.y, r28.x, r28.y
            mad r19.w, -r19.w, r26.w, l(1.000000)
            mul r19.w, r19.w, r28.y
            movc r17.y, r29.x, r19.w, r29.y
            movc r28.xy, r28.wwww, r28.xyxx, r17.xyxx
            iadd r18.w, r18.w, l(1)
            mov r15.x, r28.z
          endloop 
          mov_sat r28.y, r28.y
          mul r13.z, r13.w, r28.y
          lt r15.x, l(0.000000), r13.z
          if_nz r15.x
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r12.w, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r12.w, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r12.w, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r12.w, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r12.w, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r12.w, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r12.w, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r12.w, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r12.w, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r12.w, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xy, r12.w, l(212), t15.xyxx
            mad r25.z, r28.y, r13.w, r25.z
            mul r12.w, r27.z, r13.z
            mov r27.z, r34.z
            dp3 r13.z, r11.xyzx, r27.xyzx
            dp3 r13.w, r14.xyzx, r27.xyzx
            add r13.w, -r34.w, r13.w
            ge r15.x, r13.w, l(0.000000)
            max r13.w, r7.w, |r13.w|
            movc r13.w, r15.x, r13.w, -r13.w
            max r13.z, -r13.z, l(0.00000010)
            div r13.z, r13.w, r13.z
            min r13.z, |r13.z|, l(131072.000000)
            mov r34.z, r35.z
            dp3 r13.w, r11.xyzx, r34.xyzx
            dp3 r15.x, r14.xyzx, r34.xyzx
            add r15.x, -r35.w, r15.x
            ge r15.w, r15.x, l(0.000000)
            max r15.x, r7.w, |r15.x|
            movc r15.x, r15.w, r15.x, -r15.x
            max r13.w, -r13.w, l(0.00000010)
            div r13.w, r15.x, r13.w
            min r13.z, |r13.w|, r13.z
            mov r35.z, r36.z
            dp3 r13.w, r11.xyzx, r35.xyzx
            dp3 r15.x, r14.xyzx, r35.xyzx
            add r15.x, -r36.w, r15.x
            ge r15.w, r15.x, l(0.000000)
            max r15.x, r7.w, |r15.x|
            movc r15.x, r15.w, r15.x, -r15.x
            max r13.w, -r13.w, l(0.00000010)
            div r13.w, r15.x, r13.w
            min r13.z, |r13.w|, r13.z
            mov r36.z, r37.z
            dp3 r13.w, r11.xyzx, r36.xyzx
            dp3 r15.x, r14.xyzx, r36.xyzx
            add r15.x, -r37.w, r15.x
            ge r15.w, r15.x, l(0.000000)
            max r15.x, r7.w, |r15.x|
            movc r15.x, r15.w, r15.x, -r15.x
            max r13.w, -r13.w, l(0.00000010)
            div r13.w, r15.x, r13.w
            min r13.z, |r13.w|, r13.z
            mov r37.z, r38.x
            dp3 r13.w, r11.xyzx, r37.xyzx
            dp3 r15.x, r14.xyzx, r37.xyzx
            add r15.x, -r38.y, r15.x
            ge r15.w, r15.x, l(0.000000)
            max r15.x, r7.w, |r15.x|
            movc r15.x, r15.w, r15.x, -r15.x
            max r13.w, -r13.w, l(0.00000010)
            div r13.w, r15.x, r13.w
            min r13.z, |r13.w|, r13.z
            mov r39.zw, r38.zzzw
            dp3 r13.w, r11.zxyz, r39.xzwx
            dp3 r15.x, r14.zxyz, r39.xzwx
            add r15.x, -r39.y, r15.x
            ge r15.w, r15.x, l(0.000000)
            max r15.x, r7.w, |r15.x|
            movc r15.x, r15.w, r15.x, -r15.x
            max r13.w, -r13.w, l(0.00000010)
            div r13.w, r15.x, r13.w
            min r13.z, |r13.w|, r13.z
            mov r27.x, r31.w
            mov r27.yz, r32.zzwz
            add r17.yzw, r14.xxyz, r27.xxyz
            mad r17.yzw, r11.xxyz, r13.zzzz, r17.yyzw
            dp3 r13.w, r17.yzwy, r17.yzwy
            sqrt r13.w, r13.w
            div r13.z, r13.z, r13.w
            add r13.z, r13.z, r13.z
            sqrt r13.z, r13.z
            mad r13.z, r6.w, l(5.000000), r13.z
            add r13.z, r13.z, l(-0.844800)
            mov r26.y, r29.z
            mov r26.z, r30.x
            dp3 r34.x, r17.yzwy, r26.xyzx
            mov r27.xy, r29.xwxx
            mov r27.z, r30.w
            dp3 r34.y, r17.yzwy, r27.xyzx
            mov r30.x, r29.y
            dp3 r34.z, r17.yzwy, r30.xyzx
            ubfe r13.w, l(9), l(16), r27.w
            utof r34.w, r13.w
            sample_l_indexable(texturecubearray)(float,float,float,float) r17.yzw, r34.xyzw, t8.wxyz, s2, r13.z
            and r28.xzw, r17.yyzw, l(0x7fffffff, 0, 0x7fffffff, 0x7fffffff)
            ieq r28.xzw, r28.xxzw, l(0x7f800000, 0, 0x7f800000, 0x7f800000)
            or r13.z, r28.z, r28.x
            or r13.z, r28.w, r13.z
            movc r17.yzw, r13.zzzz, l(0,1.000000,1.000000,0), r17.yyzw
            dp3 r29.x, r14.xyzx, r26.xyzx
            dp3 r29.y, r14.xyzx, r27.xyzx
            dp3 r29.z, r14.xyzx, r30.xyzx
            mad_sat r14.xyz, r29.xyzx, r31.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
            mov r32.z, r33.x
            mad r14.xyz, r14.xyzx, r32.xyzx, r33.yzwy
            dp3 r34.x, r4.xyzx, r26.xyzx
            dp3 r34.y, r4.xyzx, r27.xyzx
            dp3 r34.z, r4.xyzx, r30.xyzx
            lt r26.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r34.xyzx
            movc r16.z, r26.x, l(0), l(0.500000)
            add r27.xyz, r14.xyzx, r16.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r27.xyz, r27.xyzx, t17.xyzw, s4, l(0.000000)
            mul r28.xzw, r34.xxyz, r34.xxyz
            mul r28.xzw, r12.wwww, r28.xxzw
            movc r18.z, r26.y, l(0), l(0.500000)
            add r26.xyw, r14.xyxz, r18.xyxz
            sample_l_indexable(texture3d)(float,float,float,float) r26.xyw, r26.xywx, t18.xywz, s4, l(0.000000)
            mul r26.xyw, r28.zzzz, r26.xyxw
            mad r26.xyw, r27.xyxz, r28.xxxx, r26.xyxw
            movc r19.z, r26.z, l(0), l(0.500000)
            add r14.xyz, r14.xyzx, r19.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r14.xyz, r14.xyzx, t19.xyzw, s4, l(0.000000)
            mad r14.xyz, r14.xyzx, r28.wwww, r26.xywx
            sample_l_indexable(texturecubearray)(float,float,float,float) r26.xyz, r34.xyzw, t8.xyzw, s2, l(6.000000)
            and r27.xyz, r26.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
            ieq r27.xyz, r27.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
            or r13.z, r27.y, r27.x
            or r13.z, r27.z, r13.z
            movc r26.xyz, r13.zzzz, l(1.000000,1.000000,0,0), r26.xyzx
            mul r27.xyz, r14.xyzx, r26.xyzx
            dp3 r13.z, r27.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r24.xyz, r14.xyzx, r26.xyzx, r24.xyzx
            mul r13.w, r8.w, r13.z
            mul r14.xyz, r12.wwww, r17.yzwy
            dp3 r12.w, r14.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r12.w, r8.w, r13.z, r12.w
            div r12.w, r13.w, r12.w
            mov r26.x, r24.w
            mov r26.yz, r25.xxyx
            mad r25.xyw, r14.yzyx, r12.wwww, r26.yzyx
            mov r24.w, r25.w
          endif 
        endif 
      endif 
    endloop 
    mov r22.xyzw, r24.xyzw
    mov r23.yzw, r25.xxyz
    iadd r9.w, r9.w, l(32)
  endloop 
  lt r9.y, r23.w, l(1.000000)
  if_nz r9.y
    mov r13.xy, l(0,0,0,0)
    mov r14.w, l(0)
    mov r15.yz, l(0,0,1.000000,0)
    mov r16.xy, l(0,0,0,0)
    mov r17.x, l(1.000000)
    mov r18.xy, l(0,0,0,0)
    mov r19.xy, l(0,0,0,0)
    mov r24.x, r22.w
    mov r24.yzw, r23.yyzw
    mov r9.yzw, r22.xxyz
    mov r10.y, r23.w
    mov r10.z, l(0)
    loop 
      uge r10.w, r10.z, r2.w
      breakc_nz r10.w
      ushr r13.z, r10.z, l(5)
      iadd r14.xyz, r12.xyzx, r13.xyzx
      ld_indexable(texture2darray)(uint,uint,uint,uint) r10.w, r14.xyzw, t7.yzwx
      ieq r12.w, r3.z, r10.z
      ubfe r13.z, r3.w, l(0), r10.w
      movc r10.w, r12.w, r13.z, r10.w
      iadd r12.w, r10.z, cb2[0].x
      mov r25.xyzw, r24.xyzw
      mov r14.xyz, r9.yzwy
      mov r13.z, r10.y
      mov r13.w, r10.w
      loop 
        breakc_z r13.w
        firstbit_lo r15.w, r13.w
        ishl r16.w, l(1), r15.w
        and r17.z, r13.w, r16.w
        if_nz r17.z
          xor r13.w, r13.w, r16.w
          iadd r16.w, r12.w, r15.w
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r26.xyzw, r16.w, l(0), t11.xyzw
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r27.xy, r16.w, l(16), t11.xyxx
          add r26.xyz, r26.xyzx, -v5.xyzx
          mov r27.z, r26.w
          lt r26.xyz, |r26.xyzx|, r27.zxyz
          and r16.w, r26.y, r26.x
          and r16.w, r26.z, r16.w
          if_nz r16.w
            iadd r15.w, r10.z, r15.w
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r15.w, l(0), t15.wxyz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r17.zw, r15.w, l(96), t15.xxxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r15.w, l(116), t15.zwxy
            add r28.xyz, -r26.yzwy, v5.xyzx
            and r16.w, r27.w, l(0x0000ffff)
            ubfe r18.w, l(6), l(25), r27.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r16.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r16.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r16.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r16.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r16.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r16.w, l(80), t16.xyzw
            dp3 r19.w, r29.xyzx, r28.xyzx
            add_sat r19.w, r29.w, r19.w
            dp3 r21.w, r30.xyzx, r28.xyzx
            add_sat r21.w, r30.w, r21.w
            mul r19.w, r19.w, r21.w
            dp3 r21.w, r31.xyzx, r28.xyzx
            add_sat r21.w, r31.w, r21.w
            mul r19.w, r19.w, r21.w
            dp3 r21.w, r32.xyzx, r28.xyzx
            add_sat r21.w, r32.w, r21.w
            mul r19.w, r19.w, r21.w
            dp3 r21.w, r33.xyzx, r28.xyzx
            add_sat r21.w, r33.w, r21.w
            mul r19.w, r19.w, r21.w
            dp3 r21.w, r34.xyzx, r28.xyzx
            add_sat r21.w, r34.w, r21.w
            mul r15.x, r19.w, r21.w
            and r19.w, r17.z, l(1)
            movc r29.xy, r19.wwww, r15.xyxx, r15.zxzz
            mov r15.x, r17.z
            mov r30.xy, r29.xyxx
            mov r19.w, l(1)
            loop 
              ige r21.w, r19.w, r18.w
              breakc_nz r21.w
              iadd r21.w, r16.w, r19.w
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r21.w, l(0), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r21.w, l(16), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r21.w, l(32), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r21.w, l(48), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r21.w, l(64), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r21.w, l(80), t16.xyzw
              dp3 r21.w, r31.xyzx, r28.xyzx
              add_sat r21.w, r31.w, r21.w
              mul r21.w, r21.w, r30.x
              dp3 r26.w, r32.xyzx, r28.xyzx
              add_sat r26.w, r32.w, r26.w
              mul r21.w, r21.w, r26.w
              dp3 r26.w, r33.xyzx, r28.xyzx
              add_sat r26.w, r33.w, r26.w
              mul r21.w, r21.w, r26.w
              dp3 r26.w, r34.xyzx, r28.xyzx
              add_sat r26.w, r34.w, r26.w
              mul r21.w, r21.w, r26.w
              dp3 r26.w, r35.xyzx, r28.xyzx
              add_sat r26.w, r35.w, r26.w
              mul r21.w, r21.w, r26.w
              dp3 r26.w, r36.xyzx, r28.xyzx
              add_sat r26.w, r36.w, r26.w
              mul r30.x, r21.w, r26.w
              ushr r28.w, r15.x, l(2)
              ubfe r29.z, l(1), l(2), r15.x
              and r29.w, r28.w, l(2)
              max r30.z, r30.x, r30.y
              mad r21.w, -r21.w, r26.w, l(1.000000)
              mul r21.w, r21.w, r30.y
              movc r17.y, r29.w, r21.w, r30.z
              movc r30.xy, r29.zzzz, r30.xyxx, r17.xyxx
              iadd r19.w, r19.w, l(1)
              mov r15.x, r28.w
            endloop 
            add_sat r15.x, -r13.z, r30.y
            mul r16.w, r17.w, r15.x
            lt r17.y, l(0.000000), r16.w
            if_nz r17.y
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r15.w, l(16), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r15.w, l(32), t15.yxwz
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r15.w, l(48), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r15.w, l(64), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r15.w, l(80), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r15.w, l(132), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r15.w, l(148), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r15.w, l(164), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r15.w, l(180), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xyzw, r15.w, l(196), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r40.xy, r15.w, l(212), t15.xyxx
              mad r25.w, r15.x, r17.w, r25.w
              mul r15.x, r27.z, r16.w
              mov r27.z, r35.z
              dp3 r15.w, r11.xyzx, r27.xyzx
              dp3 r16.w, r28.xyzx, r27.xyzx
              add r16.w, -r35.w, r16.w
              ge r17.y, r16.w, l(0.000000)
              max r16.w, r7.w, |r16.w|
              movc r16.w, r17.y, r16.w, -r16.w
              max r15.w, -r15.w, l(0.00000010)
              div r15.w, r16.w, r15.w
              min r15.w, |r15.w|, l(131072.000000)
              mov r35.z, r36.z
              dp3 r16.w, r11.xyzx, r35.xyzx
              dp3 r17.y, r28.xyzx, r35.xyzx
              add r17.y, -r36.w, r17.y
              ge r17.z, r17.y, l(0.000000)
              max r17.y, r7.w, |r17.y|
              movc r17.y, r17.z, r17.y, -r17.y
              max r16.w, -r16.w, l(0.00000010)
              div r16.w, r17.y, r16.w
              min r15.w, r15.w, |r16.w|
              mov r36.z, r37.z
              dp3 r16.w, r11.xyzx, r36.xyzx
              dp3 r17.y, r28.xyzx, r36.xyzx
              add r17.y, -r37.w, r17.y
              ge r17.z, r17.y, l(0.000000)
              max r17.y, r7.w, |r17.y|
              movc r17.y, r17.z, r17.y, -r17.y
              max r16.w, -r16.w, l(0.00000010)
              div r16.w, r17.y, r16.w
              min r15.w, r15.w, |r16.w|
              mov r37.z, r38.z
              dp3 r16.w, r11.xyzx, r37.xyzx
              dp3 r17.y, r28.xyzx, r37.xyzx
              add r17.y, -r38.w, r17.y
              ge r17.z, r17.y, l(0.000000)
              max r17.y, r7.w, |r17.y|
              movc r17.y, r17.z, r17.y, -r17.y
              max r16.w, -r16.w, l(0.00000010)
              div r16.w, r17.y, r16.w
              min r15.w, r15.w, |r16.w|
              mov r38.z, r39.x
              dp3 r16.w, r11.xyzx, r38.xyzx
              dp3 r17.y, r28.xyzx, r38.xyzx
              add r17.y, -r39.y, r17.y
              ge r17.z, r17.y, l(0.000000)
              max r17.y, r7.w, |r17.y|
              movc r17.y, r17.z, r17.y, -r17.y
              max r16.w, -r16.w, l(0.00000010)
              div r16.w, r17.y, r16.w
              min r15.w, r15.w, |r16.w|
              mov r40.zw, r39.zzzw
              dp3 r16.w, r11.zxyz, r40.xzwx
              dp3 r17.y, r28.zxyz, r40.xzwx
              add r17.y, -r40.y, r17.y
              ge r17.z, r17.y, l(0.000000)
              max r17.y, r7.w, |r17.y|
              movc r17.y, r17.z, r17.y, -r17.y
              max r16.w, -r16.w, l(0.00000010)
              div r16.w, r17.y, r16.w
              min r15.w, r15.w, |r16.w|
              mov r27.x, r32.w
              mov r27.yz, r33.zzwz
              add r17.yzw, r28.xxyz, r27.xxyz
              mad r17.yzw, r11.xxyz, r15.wwww, r17.yyzw
              dp3 r16.w, r17.yzwy, r17.yzwy
              sqrt r16.w, r16.w
              div r15.w, r15.w, r16.w
              add r15.w, r15.w, r15.w
              sqrt r15.w, r15.w
              mad r15.w, r6.w, l(5.000000), r15.w
              add r15.w, r15.w, l(-0.844800)
              mov r26.y, r29.z
              mov r26.z, r31.x
              dp3 r35.x, r17.yzwy, r26.xyzx
              mov r27.xy, r29.xwxx
              mov r27.z, r31.w
              dp3 r35.y, r17.yzwy, r27.xyzx
              mov r31.x, r29.y
              dp3 r35.z, r17.yzwy, r31.xyzx
              ubfe r16.w, l(9), l(16), r27.w
              utof r35.w, r16.w
              sample_l_indexable(texturecubearray)(float,float,float,float) r17.yzw, r35.xyzw, t8.wxyz, s2, r15.w
              and r29.xyz, r17.yzwy, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
              ieq r29.xyz, r29.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
              or r15.w, r29.y, r29.x
              or r15.w, r29.z, r15.w
              movc r17.yzw, r15.wwww, l(0,1.000000,1.000000,0), r17.yyzw
              dp3 r29.x, r28.xyzx, r26.xyzx
              dp3 r29.y, r28.xyzx, r27.xyzx
              dp3 r29.z, r28.xyzx, r31.xyzx
              mad_sat r28.xyz, r29.xyzx, r32.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
              mov r33.z, r34.x
              mad r28.xyz, r28.xyzx, r33.xyzx, r34.yzwy
              dp3 r35.x, r4.xyzx, r26.xyzx
              dp3 r35.y, r4.xyzx, r27.xyzx
              dp3 r35.z, r4.xyzx, r31.xyzx
              lt r26.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r35.xyzx
              movc r16.z, r26.x, l(0), l(0.500000)
              add r27.xyz, r16.xyzx, r28.xyzx
              sample_l_indexable(texture3d)(float,float,float,float) r27.xyz, r27.xyzx, t17.xyzw, s4, l(0.000000)
              mul r29.xyz, r35.xyzx, r35.xyzx
              mul r29.xyz, r15.xxxx, r29.xyzx
              movc r18.z, r26.y, l(0), l(0.500000)
              add r26.xyw, r18.xyxz, r28.xyxz
              sample_l_indexable(texture3d)(float,float,float,float) r26.xyw, r26.xywx, t18.xywz, s4, l(0.000000)
              mul r26.xyw, r29.yyyy, r26.xyxw
              mad r26.xyw, r27.xyxz, r29.xxxx, r26.xyxw
              movc r19.z, r26.z, l(0), l(0.500000)
              add r27.xyz, r19.xyzx, r28.xyzx
              sample_l_indexable(texture3d)(float,float,float,float) r27.xyz, r27.xyzx, t19.xyzw, s4, l(0.000000)
              mad r26.xyz, r27.xyzx, r29.zzzz, r26.xywx
              sample_l_indexable(texturecubearray)(float,float,float,float) r27.xyz, r35.xyzw, t8.xyzw, s2, l(6.000000)
              and r28.xyz, r27.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
              ieq r28.xyz, r28.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
              or r15.w, r28.y, r28.x
              or r15.w, r28.z, r15.w
              movc r27.xyz, r15.wwww, l(1.000000,1.000000,0,0), r27.xyzx
              mul r28.xyz, r26.xyzx, r27.xyzx
              dp3 r15.w, r28.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
              mad r14.xyz, r26.xyzx, r27.xyzx, r14.xyzx
              mul r16.z, r8.w, r15.w
              mul r17.yzw, r15.xxxx, r17.yyzw
              dp3 r15.x, r17.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
              mad r15.x, r8.w, r15.w, r15.x
              div r15.x, r16.z, r15.x
              mad r25.xyz, r17.yzwy, r15.xxxx, r25.xyzx
            endif 
          endif 
        endif 
      endloop 
      mov r24.xyzw, r25.xyzw
      mov r9.yzw, r14.xxyz
      iadd r10.z, r10.z, l(32)
    endloop 
    mov r23.xyzw, r24.zxyw
    mov r22.xyz, r9.yzwy
    mov r23.xyzw, r23.yzxw
  else 
    mov r23.x, r22.w
  endif 
  max r2.w, r23.w, l(1.000000)
  rcp r2.w, r2.w
  mov_sat r23.w, r23.w
  mul r20.xyz, r2.wwww, r22.xyzx
  mul r21.xyz, r2.wwww, r23.xyzx
  lt r3.z, r23.w, l(0.990000)
  if_nz r3.z
    add r3.z, -r23.w, l(1.000000)
    mul r3.w, r3.z, cb2[19].x
    add r9.yzw, v5.xxyz, -cb2[35].xxyz
    mul r13.x, r9.y, cb2[35].w
    mul r13.yz, r9.zzwz, cb2[36].xxyx
    add_sat r9.yzw, r13.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
    mul r13.xy, r9.yzyy, cb2[36].zwzz
    mul r13.z, r9.w, cb2[37].x
    add r9.yzw, r13.xxyz, cb2[37].yyzw
    lt r10.yzw, l(0.000000, 0.000000, 0.000000, 0.000000), r4.xxyz
    movc r13.xyz, r10.yzwy, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
    mov r13.w, l(0)
    add r10.yzw, r9.yyzw, r13.wwwx
    sample_l_indexable(texture3d)(float,float,float,float) r10.yzw, r10.yzwy, t17.wxyz, s4, l(0.000000)
    mul r14.xyz, r4.xyzx, r4.xyzx
    mul r14.xyz, r3.wwww, r14.xyzx
    add r15.xyz, r9.yzwy, r13.wwyw
    sample_l_indexable(texture3d)(float,float,float,float) r15.xyz, r15.xyzx, t18.xyzw, s4, l(0.000000)
    mul r15.xyz, r14.yyyy, r15.xyzx
    mad r10.yzw, r10.yyzw, r14.xxxx, r15.xxyz
    add r9.yzw, r9.yyzw, r13.wwwz
    sample_l_indexable(texture3d)(float,float,float,float) r9.yzw, r9.yzwy, t19.wxyz, s4, l(0.000000)
    mad r9.yzw, r9.yyzw, r14.zzzz, r10.yyzw
    mov r4.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r10.yzw, r4.xyzw, t8.wxyz, s2, l(6.000000)
    mul r9.yzw, r9.yyzw, r10.yyzw
    dp3 r3.w, r9.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
    mad r20.xyz, r22.xyzx, r2.wwww, r9.yzwy
    mov r11.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r9.yzw, r11.xyzw, t8.wxyz, s2, r7.z
    mad r2.w, cb2[19].x, r3.z, -r3.w
    mad r2.w, r3.y, r2.w, r3.w
    mad r21.xyz, r9.yzwy, r2.wwww, r21.xyzx
  endif 
else 
  mov r21.x, r20.w
endif 
add r2.w, r0.w, r3.x
log r2.w, |r2.w|
mul r2.w, r2.w, r6.z
exp r2.w, r2.w
add r2.w, r0.w, r2.w
add_sat r2.w, r2.w, l(-1.000000)
mul r13.xyz, r0.wwww, r20.xyzx
mad r3.yz, r3.xxyx, l(0.000000, 0.984375, 0.984375, 0.000000), l(0.000000, 0.00781250, 0.00781250, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r3.yz, r3.yzyy, t5.zxyw, s2, l(0.000000)
mul r9.yzw, r2.wwww, r21.xxyz
mul r14.xyz, r3.yyyy, r9.zwyz
mul r3.yzw, r3.zzzz, r9.yyzw
sqrt r0.w, r6.z
mad r0.w, r0.w, l(0.500000), l(0.500000)
mul r0.w, r0.w, r0.w
mul r2.w, r0.w, l(0.500000)
mad r0.w, -r0.w, l(0.500000), l(1.000000)
mad r4.w, r3.x, r0.w, r2.w
mul r0.w, r0.w, r4.w
mul r2.w, r2.w, r4.w
dp3 r4.w, r4.xyzx, cb2[17].xyzx
mov_sat r6.w, r4.w
ge r7.z, l(0.000000), r6.w
if_nz r7.z
  mov r7.w, l(0)
endif 
if_z r7.z
  mul r9.yzw, v5.yyyy, cb2[29].xxyz
  mad r9.yzw, v5.xxxx, cb2[28].xxyz, r9.yyzw
  mad r9.yzw, v5.zzzz, cb2[30].xxyz, r9.yyzw
  add r9.yzw, r9.yyzw, cb2[31].xxyz
  add r7.z, r9.w, -cb2[17].w
  mad r7.z, -r7.z, l(0.00006104), l(1.000000)
  mov_sat r8.w, r7.z
  eq r8.w, r7.z, r8.w
  if_nz r8.w
    mov r8.w, l(0)
    mov r10.y, l(0)
    loop 
      ge r10.z, r8.w, l(3.000000)
      breakc_nz r10.z
      ftou r10.z, r8.w
      add r15.xy, r9.yzyy, -cb2[r10.z + 20].xyxx
      max r10.w, |r15.y|, |r15.x|
      mul r10.y, r10.w, cb2[r10.z + 20].z
      lt r10.z, r10.y, l(1.000000)
      if_nz r10.z
        break 
      endif 
      add r8.w, r8.w, l(1.000000)
      mov r10.y, l(0)
    endloop 
  else 
    mov r8.w, l(3.000000)
    mov r10.y, l(0)
  endif 
  ge r10.z, r8.w, l(3.000000)
  if_nz r10.z
    mul r15.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
    rcp r16.xz, r15.xxxx
    mov r16.y, -r16.z
    mad r15.xyz, r9.yzyy, r16.xyzx, r15.yzyy
    add r16.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r15.xyz, r15.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r15.xyz, r16.xyzx, r15.xyzx
    mul r16.xy, r15.zyzz, cb2[32].xxxx
    round_ni r16.xy, r16.xyxx
    mul r10.w, r16.y, cb2[27].x
    mad r10.w, r10.w, cb2[32].x, r16.x
    ftou r10.w, r10.w
    iadd r10.w, r10.w, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r11.w, r10.w, l(0), t23.xxxx
    and r12.w, r11.w, l(0x40000000)
    ishl r15.w, r11.w, l(2)
    if_z r12.w
      and r12.w, r11.w, l(0x01ffffff)
      iadd r16.x, r10.w, r12.w
      ushr r10.w, r11.w, l(25)
      utof r10.w, r10.w
      mul r15.xyz, r10.wwww, r15.xyzx
      frc r15.xyz, r15.xyzx
      mul r15.xyz, r15.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
      ftou r15.xyz, r15.xyzx
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.z, r16.x, l(0), t23.xxxx
      ushr r17.xy, r15.zyzz, l(6, 6, 0, 0)
      and r10.w, r16.z, l(0xc0000000)
      iadd r11.w, r16.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r11.w, r11.w, l(0), t23.xxxx
      movc r11.w, r17.y, r16.z, r11.w
      ushr r12.w, r11.w, l(13)
      movc r11.w, r17.x, r12.w, r11.w
      and r11.w, r11.w, l(8191)
      iadd r17.x, r11.w, r16.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.z, r17.x, l(0), t23.xxxx
      mov r16.y, l(0)
      mov r17.y, l(1)
      movc r17.xyz, r10.wwww, r16.xyzx, r17.xyzx
      movc r18.yz, r10.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r19.xy, r15.zyzz, r18.yyyy
      and r19.xy, r19.xyxx, l(1, 1, 0, 0)
      and r11.w, r17.z, l(0xc0000000)
      iadd r12.w, r17.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r12.w, r12.w, l(0), t23.xxxx
      movc r12.w, r19.y, r17.z, r12.w
      ushr r16.w, r12.w, l(13)
      movc r12.w, r19.x, r16.w, r12.w
      and r12.w, r12.w, l(8191)
      iadd r18.x, r12.w, r17.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.w, r18.x, l(0), t23.xxxx
      movc r17.xyz, r11.wwww, r17.xyzx, r18.xzwx
      movc r16.xyz, r10.wwww, r16.xyzx, r17.xyzx
      and r10.w, r16.z, l(0xc0000000)
      if_z r10.w
        iadd r10.w, -r16.y, l(6)
        ushr r17.xy, r15.zyzz, r10.wwww
        or r10.w, r16.z, l(0x40000000)
        bfi r11.w, l(1), l(1), r17.y, l(0)
        bfi r11.w, l(1), l(0), r17.x, r11.w
        imul null, r11.w, r11.w, l(10)
        ushr r10.w, r10.w, r11.w
        and r10.w, r10.w, l(1023)
        iadd r17.x, r10.w, r16.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.w, r17.x, l(0), t23.xxxx
        iadd r17.yz, r16.yyyy, l(0, 1, 2, 0)
        iadd r10.w, -r17.y, l(6)
        ushr r16.yw, r15.zzzy, r10.wwww
        and r10.w, r17.w, l(0xc0000000)
        or r11.w, r17.w, l(0x40000000)
        bfi r12.w, l(1), l(1), r16.w, l(0)
        bfi r12.w, l(1), l(0), r16.y, r12.w
        imul null, r12.w, r12.w, l(10)
        ushr r11.w, r11.w, r12.w
        and r11.w, r11.w, l(1023)
        iadd r18.x, r11.w, r17.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.x, l(0), t23.xxxx
        mov r18.y, r17.z
        movc r18.xyz, r10.wwww, r17.xywx, r18.xyzx
        iadd r11.w, -r18.y, l(6)
        ushr r16.yw, r15.zzzy, r11.wwww
        and r11.w, r18.z, l(0xc0000000)
        or r12.w, r18.z, l(0x40000000)
        bfi r16.w, l(1), l(1), r16.w, l(0)
        bfi r16.y, l(1), l(0), r16.y, r16.w
        imul null, r16.y, r16.y, l(10)
        ushr r12.w, r12.w, r16.y
        and r12.w, r12.w, l(1023)
        iadd r19.x, r12.w, r18.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.y, r19.x, l(0), t23.xxxx
        movc r16.yw, r11.wwww, r18.xxxz, r19.xxxy
        movc r16.xz, r10.wwww, r17.xxwx, r16.yywy
      endif 
      and r10.w, r16.z, l(0xc0000000)
      if_z r10.w
        ubfe r11.w, l(14), l(15), r16.z
        utof r11.w, r11.w
        mul r11.w, r11.w, cb2[27].w
        mul r11.w, r11.w, l(0.00006104)
        and r16.yw, r16.zzzz, l(0, 0x00007fff, 0, 0x20000000)
        utof r12.w, r16.y
        mul r12.w, r12.w, cb2[27].w
        mul r12.w, r12.w, l(0.00003052)
        and r16.y, r15.y, l(3)
        iadd r16.y, r16.y, r16.x
        iadd r16.y, r16.y, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.y, r16.y, l(0), t23.xxxx
        bfi r17.xyz, l(2, 2, 1, 0), l(3, 1, 4, 0), r15.xyzx, l(0, 0, 0, 0)
        ushr r15.x, r16.y, r17.x
        and r15.x, r15.x, l(255)
        utof r15.x, r15.x
        mul r15.x, r12.w, r15.x
        mad r15.x, r15.x, l(0.00392157), r11.w
        iadd r15.y, r17.y, l(1)
        ubfe r15.z, l(1), l(1), r15.z
        iadd r15.y, r15.z, r15.y
        iadd r15.y, r15.y, r16.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.y, r15.y, l(0), t23.xxxx
        ushr r15.y, r15.y, r17.z
        and r15.y, r15.y, l(0x0000ffff)
        utof r15.y, r15.y
        mul r12.w, r12.w, r15.y
        mad r11.w, r12.w, l(0.00001526), r11.w
        movc r15.w, r16.w, r15.x, r11.w
      else 
        and r11.w, r16.z, l(0x80000000)
        iadd r12.w, r16.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r12.w, r12.w, l(0), t23.xxxx
        movc r11.w, r11.w, r12.w, l(0)
        ishl r12.w, r16.z, l(2)
        ushr r15.x, r11.w, l(16)
        f16tof32 r15.x, r15.x
        and r11.w, r11.w, l(0x0000ffff)
        f16tof32 r11.w, r11.w
        mad r12.w, r9.y, r15.x, r12.w
        mad r11.w, r9.z, r11.w, r12.w
        movc r15.w, r10.w, r11.w, r15.w
      endif 
    endif 
    mad r9.w, -cb2[27].z, l(2.000000), r9.w
    lt r9.w, r15.w, r9.w
    movc r7.w, r9.w, l(0), l(1.000000)
  endif 
  if_z r10.z
    if_z cb2[58].y
      ftou r9.w, r8.w
      add r10.zw, r9.yyyz, -cb2[r9.w + 20].xxxy
      mul r10.zw, r10.zzzw, cb2[r9.w + 20].zzzz
      mad r15.xy, r10.zwzz, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r9.w, cb2[26].y
      add r15.z, r8.w, r9.w
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r9.w, r15.xyzx, t13.xxxx, s13, r7.z
      sample_l_indexable(texture2darray)(float,float,float,float) r10.z, r15.xyzx, t31.yzxw, s0, l(0.000000)
      add r9.w, r9.w, r10.z
      add_sat r9.w, r9.w, l(-1.000000)
      mul r10.z, r9.w, r9.w
      mul r7.w, r9.w, r10.z
    endif 
    if_nz cb2[58].y
      mov r15.x, -r7.x
      ftou r9.w, r8.w
      add r8.w, r8.w, l(1.000000)
      min r8.w, r8.w, l(2.000000)
      ftou r8.w, r8.w
      add r10.y, -r10.y, l(1.000000)
      mul r10.y, r10.y, l(28.000000)
      ftou r10.y, r10.y
      add r10.zw, r9.yyyz, -cb2[r9.w + 20].xxxy
      mul r10.zw, r10.zzzw, cb2[r9.w + 20].zzzz
      mad r10.zw, r10.zzzw, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
      add r9.yz, r9.yyzy, -cb2[r8.w + 20].xxyx
      mul r9.yz, r9.yyzy, cb2[r8.w + 20].zzzz
      mad r9.yz, r9.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      mov r15.y, r8.x
      mov r15.z, r7.x
      mov r11.w, l(0)
      mov r12.w, l(0)
      loop 
        uge r15.w, r12.w, l(8)
        breakc_nz r15.w
        ult r15.w, r10.y, r12.w
        movc r16.xy, r15.wwww, r9.yzyy, r10.zwzz
        movc r16.z, r15.w, cb2[r8.w + 20].w, cb2[r9.w + 20].w
        movc r15.w, r15.w, r8.w, r9.w
        dp2 r17.x, icb[r12.w + 0].yxyy, r15.xyxx
        dp2 r17.y, icb[r12.w + 0].yxyy, r15.yzyy
        mad r16.xy, r17.xyxx, r16.zzzz, r16.xyxx
        iadd r15.w, r15.w, cb2[26].y
        utof r16.z, r15.w
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r15.w, r16.xyzx, t13.xxxx, s13, r7.z
        sample_l_indexable(texture2darray)(float,float,float,float) r16.x, r16.xyzx, t31.xyzw, s0, l(0.000000)
        add r15.w, r15.w, r16.x
        add_sat r15.w, r15.w, l(-1.000000)
        mad r11.w, r15.w, l(0.125000), r11.w
        iadd r12.w, r12.w, l(1)
      endloop 
      mul r7.z, r11.w, r11.w
      mul r7.w, r11.w, r7.z
    endif 
  endif 
endif 
lt r7.z, l(0.000000), r6.w
if_nz r7.z
  lt r7.z, l(0.000000), r7.w
  if_nz r7.z
    mul r7.z, r6.y, cb2[18].w
    mul r7.z, r6.w, r7.z
    if_nz cb2[23].x
      add r15.xyz, v5.xyzx, cb1[24].xyzx
      mov r15.w, l(1.000000)
      dp4 r8.w, cb2[24].xyzw, r15.xyzw
      dp4 r9.y, cb2[25].xyzw, r15.xyzw
      frc r15.x, r8.w
      frc r15.y, r9.y
      iadd r8.w, l(-1), cb2[23].x
      utof r15.z, r8.w
      sample_l_indexable(texture2darray)(float,float,float,float) r9.yzw, r15.xyzx, t20.wxyz, s2, l(0.000000)
      add r9.yzw, r9.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
      mad r9.yzw, cb2[23].yyyy, r9.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
      mul r9.yzw, r9.yyzw, cb2[18].xxyz
    else 
      mov r9.yzw, cb2[18].xxyz
    endif 
    ushr r8.w, cb2[53].x, l(16)
    ult r10.y, l(0), r8.w
    and r10.y, r6.x, r10.y
    if_nz r10.y
      iadd r8.w, r8.w, cb2[0].x
      iadd r8.w, r8.w, l(-1)
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r10.y, r8.w, l(52), t12.xxxx
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r8.w, l(68), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r8.w, l(84), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r8.w, l(132), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r8.w, l(148), t12.xyzw
      mad r10.z, |r4.w|, l(-0.200000), l(0.400000)
      mad r19.xyz, r4.xyzx, r10.zzzz, v5.xyzx
      mov r19.w, l(1.000000)
      dp4 r15.x, r15.xyzw, r19.xyzw
      dp4 r15.y, r16.xyzw, r19.xyzw
      mad r10.zw, r15.xxxy, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
      add r10.zw, r18.zzzw, r10.zzzw
      mul r10.zw, r18.xxxy, r10.zzzw
      div r15.xy, r10.yyyy, r17.xzxx
      add r15.zw, -r15.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
      ge r15.zw, r10.zzzw, r15.zzzw
      ge r15.xy, r15.xyxx, r10.zwzz
      or r15.xy, r15.xyxx, r15.zwzz
      or r11.w, r15.y, r15.x
      if_z r11.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r11.w, r8.w, l(28), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r8.w, l(100), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xy, r8.w, l(164), t12.xyxx
        dp4 r8.w, r15.xyzw, r19.xyzw
        mov_sat r10.zw, r10.zzzw
        mad r15.xy, r10.zwzz, r17.xzxx, r17.ywyy
        add r8.w, r16.x, r8.w
        div r8.w, r8.w, r16.y
        max r8.w, r8.w, l(0.00006104)
        and r10.z, r11.w, l(0x0000ffff)
        if_nz cb2[58].y
          mov r16.x, -r7.x
          utof r17.z, r10.z
          mov r16.y, r8.x
          mov r16.z, r7.x
          mov r10.w, l(0)
          mov r11.w, l(0)
          loop 
            ige r12.w, r11.w, l(8)
            breakc_nz r12.w
            dp2 r18.x, icb[r11.w + 0].yxyy, r16.xyxx
            dp2 r18.y, icb[r11.w + 0].yxyy, r16.yzyy
            mad r17.xy, r18.xyxx, r10.yyyy, r15.xyxx
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.w, r17.xyzx, t9.xxxx, s13, r8.w
            mad r10.w, r12.w, l(0.125000), r10.w
            iadd r11.w, r11.w, l(1)
          endloop 
        else 
          utof r15.z, r10.z
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.w, r15.xyzx, t9.xxxx, s13, r8.w
        endif 
        mul r8.w, r10.w, r10.w
        mul r8.w, r10.w, r8.w
      else 
        mov r8.w, l(1.000000)
      endif 
      mul r7.w, r7.w, r8.w
    else 
      and r8.w, cb2[53].x, l(0x0000ffff)
      ult r10.y, l(0), r8.w
      not r10.z, r6.x
      and r10.y, r10.z, r10.y
      if_nz r10.y
        iadd r8.w, r8.w, cb2[0].x
        iadd r8.w, r8.w, l(-1)
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r10.y, r8.w, l(52), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r8.w, l(68), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r8.w, l(84), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r8.w, l(132), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r8.w, l(148), t12.xyzw
        mad r10.z, |r4.w|, l(-0.200000), l(0.400000)
        mad r19.xyz, r4.xyzx, r10.zzzz, v5.xyzx
        mov r19.w, l(1.000000)
        dp4 r15.x, r15.xyzw, r19.xyzw
        dp4 r15.y, r16.xyzw, r19.xyzw
        mad r10.zw, r15.xxxy, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
        add r10.zw, r18.zzzw, r10.zzzw
        mul r10.zw, r18.xxxy, r10.zzzw
        div r15.xy, r10.yyyy, r17.xzxx
        add r15.zw, -r15.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
        ge r15.zw, r10.zzzw, r15.zzzw
        ge r15.xy, r15.xyxx, r10.zwzz
        or r15.xy, r15.xyxx, r15.zwzz
        or r11.w, r15.y, r15.x
        if_z r11.w
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r11.w, r8.w, l(28), t12.xxxx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r8.w, l(100), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xy, r8.w, l(164), t12.xyxx
          dp4 r8.w, r15.xyzw, r19.xyzw
          mov_sat r10.zw, r10.zzzw
          mad r15.xy, r10.zwzz, r17.xzxx, r17.ywyy
          add r8.w, r16.x, r8.w
          div r8.w, r8.w, r16.y
          max r8.w, r8.w, l(0.00006104)
          and r10.z, r11.w, l(0x0000ffff)
          if_nz cb2[58].y
            mov r16.x, -r7.x
            utof r17.z, r10.z
            mov r16.y, r8.x
            mov r16.z, r7.x
            mov r10.w, l(0)
            mov r11.w, l(0)
            loop 
              ige r12.w, r11.w, l(8)
              breakc_nz r12.w
              dp2 r18.x, icb[r11.w + 0].yxyy, r16.xyxx
              dp2 r18.y, icb[r11.w + 0].yxyy, r16.yzyy
              mad r17.xy, r18.xyxx, r10.yyyy, r15.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.w, r17.xyzx, t9.xxxx, s13, r8.w
              mad r10.w, r12.w, l(0.125000), r10.w
              iadd r11.w, r11.w, l(1)
            endloop 
          else 
            utof r15.z, r10.z
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.w, r15.xyzx, t9.xxxx, s13, r8.w
          endif 
          mul r8.w, r10.w, r10.w
          mul r8.w, r10.w, r8.w
        else 
          mov r8.w, l(1.000000)
        endif 
        mul r7.w, r7.w, r8.w
      endif 
    endif 
    mad r8.w, -r3.x, l(0.500000), l(1.000000)
    mad r8.w, -r6.w, r8.w, l(1.000000)
    mul r8.w, r8.w, r8.w
    mad r8.w, -r8.w, l(0.620000), l(0.620000)
    add r8.w, -r6.w, r8.w
    mad r8.w, r6.z, r8.w, r6.w
    mul r8.w, r7.w, r8.w
    lt r4.w, l(0.000000), r4.w
    mad r15.xyz, r8.wwww, r9.yzwy, r13.xyzx
    mad r10.yzw, -v5.xxyz, r5.xxxx, cb2[17].xxyz
    dp3 r5.x, r10.yzwy, r10.yzwy
    rsq r5.x, r5.x
    mul r10.yzw, r5.xxxx, r10.yyzw
    dp3 r5.x, r10.yzwy, r5.yzwy
    dp3 r8.w, r4.xyzx, r10.yzwy
    mad r10.y, |r8.w|, r6.y, -|r8.w|
    mad r8.w, |r8.w|, r10.y, l(1.000000)
    mad r6.w, r6.w, r0.w, r2.w
    mul r8.w, r8.w, r8.w
    mul r6.w, r6.w, r8.w
    rcp r6.w, r6.w
    mul r6.w, r7.z, r6.w
    mul r6.w, r6.w, r7.w
    mul r6.w, r6.w, l(0.250000)
    mad r10.yzw, r6.wwww, r9.yyzw, r3.yyzw
    add_sat r5.x, -r5.x, l(1.000000)
    mul r7.z, r5.x, r5.x
    mul r7.z, r7.z, r7.z
    mul r5.x, r5.x, r7.z
    mul r5.x, r5.x, r6.w
    mad r16.xyz, r5.xxxx, r9.zwyz, r14.xyzx
    mov r15.w, r16.z
    mov r13.w, r14.z
    movc r13.xyzw, r4.wwww, r15.xyzw, r13.xyzw
    mov r16.zw, r10.yyyz
    mov r14.zw, r3.yyyz
    movc r15.xyzw, r4.wwww, r16.xyzw, r14.xyzw
    movc r3.w, r4.w, r10.w, r3.w
    mov r14.z, r13.w
    mov r14.xy, r15.xyxx
    mov r3.yz, r15.zzwz
  endif 
endif 
mov r15.x, -r7.x
not r4.w, r6.x
mad r3.x, -r3.x, l(0.500000), l(1.000000)
mov r16.xy, l(0,0,0,0)
mov r17.w, l(0)
mov r18.xyz, v5.xyzx
mov r18.w, l(1.000000)
mov r19.w, l(1.000000)
mov r15.z, r7.x
mov r20.w, l(1.000000)
mov r21.z, l(1.000000)
mov r22.w, l(1.000000)
mov r15.yw, r8.xxxx
mov r7.y, r15.w
mov r23.w, l(1.000000)
mov r8.y, r15.x
mov r8.z, r7.x
mov r24.w, l(1.000000)
mov r25.x, r8.x
mov r25.y, r15.x
mov r25.z, r7.x
mov r26.x, r8.x
mov r26.y, r15.x
mov r26.z, r7.x
mov r27.x, r8.x
mov r27.y, r15.x
mov r27.z, r7.x
mov r9.yzw, r13.xxyz
mov r28.xyz, r14.zxyz
mov r29.xyz, r3.yzwy
mov r5.x, cb2[58].y
mov r6.w, l(0)
loop 
  uge r7.z, r6.w, cb2[0].x
  breakc_nz r7.z
  ushr r16.z, r6.w, l(5)
  iadd r17.xyz, r12.xyzx, r16.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r7.z, r17.xyzw, t6.yzxw
  mov r10.yzw, r9.yyzw
  mov r17.xyz, r28.xyzx
  mov r30.xyz, r29.xyzx
  mov r7.w, r5.x
  mov r8.w, r7.z
  loop 
    breakc_z r8.w
    firstbit_lo r11.w, r8.w
    ishl r12.w, l(1), r11.w
    and r13.w, r8.w, r12.w
    if_nz r13.w
      xor r8.w, r8.w, r12.w
      iadd r11.w, r6.w, r11.w
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r31.xyzw, r11.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r32.xy, r11.w, l(16), t11.xyxx
      add r31.xyz, r31.xyzx, -v5.xyzx
      mov r32.z, r31.w
      lt r31.xyz, |r31.xyzx|, r32.zxyz
      and r12.w, r31.y, r31.x
      and r12.w, r31.z, r12.w
      if_nz r12.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r11.w, l(0), t12.wxyz
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r11.w, l(16), t12.zxyw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r11.w, l(32), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r11.w, l(48), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r11.w, l(64), t12.yzwx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r11.w, l(80), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r11.w, l(96), t12.yzwx
        ubfe r12.w, l(3), l(24), r32.w
        switch r12.w
          case l(4)
          lt r12.w, l(0.000000), r37.x
          mov r38.xy, r36.zwzz
          mov r38.z, r37.w
          mad r39.xyz, -r38.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r31.yzwy
          add r40.xyz, r39.xyzx, -v5.xyzx
          dp3 r13.w, r38.xyzx, r40.xyzx
          div_sat r14.w, -r13.w, r37.x
          mad r41.xyz, r14.wwww, r38.xyzx, r39.xyzx
          movc r41.xyz, r12.wwww, r41.xyzx, r31.yzwy
          add r41.xyz, r41.xyzx, -v5.xyzx
          dp3 r16.z, r41.xyzx, r41.xyzx
          rsq r16.w, r16.z
          mul r41.xyz, r16.wwww, r41.xyzx
          dp3 r16.w, r4.xyzx, r41.xyzx
          mov_sat r21.w, r16.w
          lt r25.w, l(0.000000), r21.w
          if_nz r25.w
            sqrt r25.w, r16.z
            mul r26.w, r34.x, r34.x
            div r16.z, r26.w, r16.z
            min r16.z, r16.z, l(1.000000)
            mad_sat r41.xy, r25.wwww, r33.xzxx, r33.ywyy
            mul r41.zw, r41.xxxy, r41.xxxy
            mad r41.xy, r41.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
            mul r41.xy, r41.xyxx, r41.zwzz
            mul r16.z, r16.z, r41.x
            mul r16.z, r41.y, r16.z
            lt r25.w, l(0.000000), r16.z
            if_nz r25.w
              ubfe r25.w, l(3), l(27), r32.w
              ine r25.w, r25.w, l(1)
              if_nz r25.w
                mad r25.w, |r16.w|, l(-0.200000), l(0.400000)
                mad r41.xyz, r4.xyzx, r25.wwww, v5.xyzx
                add r41.xyz, -r35.xyzx, r41.xyzx
                max r25.w, |r41.z|, |r41.y|
                max r25.w, r25.w, |r41.x|
                div r25.w, r36.x, r25.w
                add r25.w, r36.y, r25.w
                dp3 r26.w, r41.xyzx, r41.xyzx
                rsq r26.w, r26.w
                max r25.w, r25.w, l(0.00006104)
                and r27.w, r32.w, l(0x0000ffff)
                utof r42.w, r27.w
                mov r27.w, l(0)
                mov r28.w, l(0)
                loop 
                  ige r29.w, r28.w, l(8)
                  breakc_nz r29.w
                  dp2 r43.y, icb[r28.w + 0].yxyy, r15.xyxx
                  dp2 r43.z, icb[r28.w + 0].yxyy, r15.yzyy
                  mul r43.yz, r34.yyyy, r43.yyzy
                  mul r43.x, r10.x, r43.y
                  mul r43.w, r9.x, r43.y
                  mad r42.xyz, r41.xyzx, r26.wwww, r43.xzwx
                  sample_c_lz_indexable(texturecubearray)(float,float,float,float) r29.w, r42.xyzw, t10.xxxx, s13, r25.w
                  mad r27.w, r29.w, l(0.125000), r27.w
                  iadd r28.w, r28.w, l(1)
                endloop 
              else 
                mov r27.w, l(1.000000)
              endif 
              mul r16.z, r16.z, r27.w
              lt r25.w, l(0.000000), r16.z
              if_nz r25.w
                mul r25.w, r6.y, r32.x
                mul r25.w, r25.w, l(0.250000)
                dp3 r26.w, r38.xyzx, r11.xyzx
                dp3 r28.w, r11.xyzx, r40.xyzx
                mad r29.w, -r26.w, r26.w, r37.x
                mad r13.w, r26.w, r28.w, -r13.w
                div_sat r13.w, r13.w, r29.w
                div r26.w, r29.w, r37.x
                mul r26.w, r26.w, l(10.000000)
                min r26.w, r26.w, l(1.000000)
                add r13.w, -r14.w, r13.w
                mad r13.w, r26.w, r13.w, r14.w
                mad r38.xyz, r13.wwww, r38.xyzx, r39.xyzx
                movc r38.xyz, r12.wwww, r38.xyzx, r31.yzwy
                add r38.xyz, r38.xyzx, -v5.xyzx
                dp3 r12.w, r38.xyzx, r38.xyzx
                rsq r12.w, r12.w
                mul r39.xyz, r12.wwww, r38.xyzx
                ubfe r13.w, l(4), l(16), r32.w
                ult r14.w, l(0), r13.w
                and r14.w, r6.x, r14.w
                if_nz r14.w
                  iadd r13.w, r13.w, cb2[0].x
                  iadd r13.w, r13.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.w, r13.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r13.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r13.w, l(116), t12.xyzw
                  mad r26.w, |r16.w|, l(-0.200000), l(0.400000)
                  mad r19.xyz, r4.xyzx, r26.wwww, v5.xyzx
                  dp4 r26.w, r40.xyzw, r19.xyzw
                  dp4 r28.w, r41.xyzw, r19.xyzw
                  lt r29.w, r28.w, r26.w
                  if_z r29.w
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r13.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r13.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r13.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r13.w, l(148), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xy, r13.w, l(164), t12.xyxx
                    dp4 r40.x, r40.xyzw, r19.xyzw
                    dp4 r40.y, r41.xyzw, r19.xyzw
                    div r19.xy, r40.xyxx, r28.wwww
                    mad r19.xy, r19.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r19.xy, r43.zwzz, r19.xyxx
                    mul r19.xy, r43.xyxx, r19.xyxx
                    div r40.xy, r14.wwww, r42.xzxx
                    add r40.zw, -r40.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                    ge r40.zw, r19.xxxy, r40.zzzw
                    ge r40.xy, r40.xyxx, r19.xyxx
                    or r40.xy, r40.xyxx, r40.zwzz
                    or r19.z, r40.y, r40.x
                    mov_sat r19.xy, r19.xyxx
                    mad r40.xy, r19.xyxx, r42.xzxx, r42.ywyy
                    mul r19.x, r28.w, r44.y
                    mad r19.y, r44.x, r28.w, r26.w
                    div r19.x, r19.y, r19.x
                  else 
                    mov r19.z, l(-1)
                  endif 
                  or r19.y, r29.w, r19.z
                  if_z r19.y
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.w, r13.w, l(28), t12.xxxx
                    max r19.x, r19.x, l(0.00006104)
                    and r13.w, r13.w, l(0x0000ffff)
                    if_nz r7.w
                      utof r41.z, r13.w
                      mov r19.yz, l(0,0,0,0)
                      loop 
                        ige r26.w, r19.z, l(8)
                        breakc_nz r26.w
                        dp2 r42.x, icb[r19.z + 0].yxyy, r15.xwxx
                        dp2 r42.y, icb[r19.z + 0].xyxx, r7.xyxx
                        mad r41.xy, r42.xyxx, r14.wwww, r40.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r26.w, r41.xyzx, t9.xxxx, s13, r19.x
                        mad r19.y, r26.w, l(0.125000), r19.y
                        iadd r19.z, r19.z, l(1)
                      endloop 
                    else 
                      utof r40.z, r13.w
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.y, r40.xyzx, t9.xxxx, s13, r19.x
                    endif 
                    mul r13.w, r19.y, r19.y
                    mul r13.w, r19.y, r13.w
                  else 
                    mov r13.w, l(1.000000)
                  endif 
                  mul r16.z, r13.w, r16.z
                else 
                  ubfe r13.w, l(4), l(20), r32.w
                  ult r14.w, l(0), r13.w
                  and r14.w, r4.w, r14.w
                  if_nz r14.w
                    iadd r13.w, r13.w, cb2[0].x
                    iadd r13.w, r13.w, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.w, r13.w, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r13.w, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r13.w, l(116), t12.xyzw
                    mad r19.x, |r16.w|, l(-0.200000), l(0.400000)
                    mad r20.xyz, r4.xyzx, r19.xxxx, v5.xyzx
                    dp4 r19.x, r40.xyzw, r20.xyzw
                    dp4 r19.z, r41.xyzw, r20.xyzw
                    lt r26.w, r19.z, r19.x
                    if_z r26.w
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r13.w, l(68), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r13.w, l(84), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r13.w, l(132), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r13.w, l(148), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xy, r13.w, l(164), t12.xyxx
                      dp4 r40.x, r40.xyzw, r20.xyzw
                      dp4 r40.y, r41.xyzw, r20.xyzw
                      div r20.xy, r40.xyxx, r19.zzzz
                      mad r20.xy, r20.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                      add r20.xy, r43.zwzz, r20.xyxx
                      mul r20.xy, r43.xyxx, r20.xyxx
                      div r40.xy, r14.wwww, r42.xzxx
                      add r40.zw, -r40.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                      ge r40.zw, r20.xxxy, r40.zzzw
                      ge r40.xy, r40.xyxx, r20.xyxx
                      or r40.xy, r40.xyxx, r40.zwzz
                      or r20.z, r40.y, r40.x
                      mov_sat r20.xy, r20.xyxx
                      mad r40.xy, r20.xyxx, r42.xzxx, r42.ywyy
                      mul r20.x, r19.z, r44.y
                      mad r19.x, r44.x, r19.z, r19.x
                      div r19.x, r19.x, r20.x
                    else 
                      mov r20.z, l(-1)
                    endif 
                    or r19.z, r26.w, r20.z
                    if_z r19.z
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.w, r13.w, l(28), t12.xxxx
                      max r19.x, r19.x, l(0.00006104)
                      and r13.w, r13.w, l(0x0000ffff)
                      if_nz r7.w
                        utof r20.z, r13.w
                        mov r19.z, l(0)
                        mov r26.w, l(0)
                        loop 
                          ige r28.w, r26.w, l(8)
                          breakc_nz r28.w
                          dp2 r41.x, icb[r26.w + 0].xyxx, r8.xyxx
                          dp2 r41.y, icb[r26.w + 0].yxyy, r8.xzxx
                          mad r20.xy, r41.xyxx, r14.wwww, r40.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r20.x, r20.xyzx, t9.xxxx, s13, r19.x
                          mad r19.z, r20.x, l(0.125000), r19.z
                          iadd r26.w, r26.w, l(1)
                        endloop 
                      else 
                        utof r40.z, r13.w
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.z, r40.xyzx, t9.xxxx, s13, r19.x
                      endif 
                      mul r13.w, r19.z, r19.z
                      mul r13.w, r19.z, r13.w
                    else 
                      mov r13.w, l(1.000000)
                    endif 
                    mul r16.z, r13.w, r16.z
                  endif 
                endif 
                mad r13.w, -r21.w, r3.x, l(1.000000)
                mul r13.w, r13.w, r13.w
                mad r13.w, -r13.w, l(0.620000), l(0.620000)
                add r13.w, -r21.w, r13.w
                mad r13.w, r6.z, r13.w, r21.w
                mul r13.w, r16.z, r13.w
                mov r32.x, r31.x
                lt r14.w, l(0.000000), r16.w
                mad r20.xyz, r13.wwww, r32.xyzx, r10.yzwy
                dp3_sat r13.w, r4.xyzx, r39.xyzx
                mad r38.xyz, r38.xyzx, r12.wwww, r5.yzwy
                dp3 r12.w, r38.xyzx, r38.xyzx
                rsq r12.w, r12.w
                mul r38.xyz, r12.wwww, r38.xyzx
                dp3 r12.w, r38.xyzx, r5.yzwy
                dp3 r16.w, r4.xyzx, r38.xyzx
                mad r19.x, |r16.w|, r6.y, -|r16.w|
                mad r16.w, |r16.w|, r19.x, l(1.000000)
                mad r19.x, r13.w, r0.w, r2.w
                mul r16.w, r16.w, r16.w
                mul r16.w, r19.x, r16.w
                rcp r16.w, r16.w
                mul r13.w, r25.w, r13.w
                mul r13.w, r13.w, r16.w
                mul r13.w, r16.z, r13.w
                mad r38.xyz, r13.wwww, r32.xyzx, r30.xyzx
                add_sat r12.w, -r12.w, l(1.000000)
                mul r16.z, r12.w, r12.w
                mul r16.z, r16.z, r16.z
                mul r12.w, r12.w, r16.z
                mul r12.w, r12.w, r13.w
                mad r39.xyz, r12.wwww, r32.xyzx, r17.xyzx
                movc r10.yzw, r14.wwww, r20.xxyz, r10.yyzw
                movc r17.xyz, r14.wwww, r39.xyzx, r17.xyzx
                movc r30.xyz, r14.wwww, r38.xyzx, r30.xyzx
              endif 
            endif 
          endif 
          break 
          case l(2)
          mov r20.xy, r34.zwzz
          mov r20.z, r35.w
          add r20.xyz, r20.xyzx, -v5.xyzx
          dp3 r12.w, r20.xyzx, r20.xyzx
          rsq r12.w, r12.w
          mul r38.xyz, r12.wwww, r20.xyzx
          dp3 r13.w, r4.xyzx, r38.xyzx
          mov_sat r14.w, r13.w
          lt r16.z, l(0.000000), r14.w
          if_nz r16.z
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r11.w, l(112), t12.yzwx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r11.w, l(128), t12.zxyw
            mov r40.xyz, r38.xyzx
            mov r40.w, r39.y
            dp4 r16.z, r40.xyzw, r18.xyzw
            lt r16.w, r16.z, l(1.000000)
            if_nz r16.w
              mov r41.xyz, l(1.000000,1.000000,1.000000,0)
              mov r16.w, l(0)
            else 
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r11.w, l(172), t12.yzwx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r11.w, l(188), t12.wxyz
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r11.w, l(204), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.x, r11.w, l(236), t12.xxxx
              add r45.xyz, r31.yzwy, -v5.xyzx
              mul r21.w, r34.x, r34.x
              dp3 r25.w, r45.xyzx, r45.xyzx
              div r21.w, r21.w, r25.w
              min r21.w, r21.w, l(1.000000)
              mad_sat r33.xy, r16.zzzz, r33.xzxx, r33.ywyy
              mul r33.zw, r33.xxxy, r33.xxxy
              mad r33.xy, r33.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
              mul r33.xy, r33.xyxx, r33.zwzz
              mul r21.w, r21.w, r33.x
              mul r21.w, r33.y, r21.w
              mov r35.w, r36.x
              dp4 r33.x, r35.xyzw, r18.xyzw
              mov r45.xyz, r36.yzwy
              mov r45.w, r37.w
              dp4 r33.y, r45.xyzw, r18.xyzw
              div r21.xy, r33.xyxx, r16.zzzz
              lt r16.z, r42.w, l(0.00048828)
              if_nz r16.z
                mov r43.y, r44.x
                mad_sat r33.xy, |r21.xyxx|, r43.zwzz, r43.xyxx
                mul r33.zw, r33.xxxy, r33.xxxy
                mad r33.xy, r33.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
                mul r33.xy, r33.xyxx, r33.zwzz
                mul r16.z, r33.y, r33.x
              else 
                mov r42.w, r43.y
                mul_sat r33.xyzw, |r21.yyxx|, r42.xyzw
                log r33.xyzw, r33.xyzw
                mul r33.xyzw, r33.xyzw, r43.xxxx
                exp r33.xyzw, r33.xyzw
                add r33.xy, r33.zwzz, r33.xyxx
                log r33.xy, r33.xyxx
                mul r33.xy, r33.xyxx, r44.xxxx
                exp r33.xy, r33.xyxx
                mul r25.w, r33.x, r43.z
                mad r26.w, r43.w, r33.y, l(-1.000000)
                mad r25.w, r43.w, r33.y, -r25.w
                div_sat r25.w, r26.w, r25.w
                mul r26.w, r25.w, r25.w
                mad r25.w, r25.w, l(-2.000000), l(3.000000)
                mul r16.z, r25.w, r26.w
              endif 
              mul r16.w, r16.z, r21.w
              and r16.z, r19.x, l(255)
              if_nz r16.z
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyz, r11.w, l(220), t12.xyzx
                dp3 r19.x, r44.yzwy, r21.xyzx
                dp3 r21.x, r33.xyzx, r21.xyzx
                frc r33.x, r19.x
                frc r33.y, r21.x
                iadd r16.z, r16.z, l(-1)
                utof r33.z, r16.z
                sample_l_indexable(texture2darray)(float,float,float,float) r41.xyz, r33.xyzx, t20.xyzw, s2, l(0.000000)
              else 
                mov r41.xyz, l(1.000000,1.000000,1.000000,0)
              endif 
            endif 
            mov r31.yz, r32.yyzy
            mul r21.xyw, r41.xyxz, r31.xyxz
            lt r16.z, l(0.000000), r16.w
            if_nz r16.z
              ubfe r16.z, l(3), l(27), r32.w
              ine r16.z, r16.z, l(1)
              if_nz r16.z
                mad r16.z, |r13.w|, l(-0.200000), l(0.400000)
                mad r22.xyz, r4.xyzx, r16.zzzz, v5.xyzx
                mov r38.xyz, r37.xyzx
                dp4 r16.z, r38.xyzw, r22.xyzw
                dp4 r19.x, r40.xyzw, r22.xyzw
                ge r25.w, r19.x, r16.z
                if_nz r25.w
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.y, r11.w, l(144), t12.xxxx
                  mov r35.w, r36.x
                  dp4 r31.x, r35.xyzw, r22.xyzw
                  mov r37.xyz, r36.yzwy
                  dp4 r31.y, r37.xyzw, r22.xyzw
                  div r22.xy, r31.xyxx, r19.xxxx
                  mad_sat r22.xy, r22.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  mad r22.xy, r22.xyxx, r39.zwzz, r39.xyxx
                  div r11.w, r16.z, r19.x
                  max r11.w, r11.w, l(0.00006104)
                  and r16.z, r32.w, l(0x0000ffff)
                  if_nz r7.w
                    utof r31.z, r16.z
                    mov r19.x, l(0)
                    mov r25.w, l(0)
                    loop 
                      ige r26.w, r25.w, l(8)
                      breakc_nz r26.w
                      dp2 r33.x, icb[r25.w + 0].xyxx, r25.xyxx
                      dp2 r33.y, icb[r25.w + 0].yxyy, r25.xzxx
                      mad r31.xy, r33.xyxx, r34.yyyy, r22.xyxx
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r26.w, r31.xyzx, t9.xxxx, s13, r11.w
                      mad r19.x, r26.w, l(0.125000), r19.x
                      iadd r25.w, r25.w, l(1)
                    endloop 
                  else 
                    utof r22.z, r16.z
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.x, r22.xyzx, t9.xxxx, s13, r11.w
                  endif 
                  mul r11.w, r19.x, r19.x
                  mul r11.w, r19.x, r11.w
                else 
                  mov r11.w, l(1.000000)
                endif 
              else 
                mov r11.w, l(1.000000)
              endif 
              mul r11.w, r11.w, r16.w
              lt r16.z, l(0.000000), r11.w
              if_nz r16.z
                mul r16.z, r6.y, r32.x
                mul r16.z, r14.w, r16.z
                ubfe r16.w, l(4), l(16), r32.w
                ult r22.x, l(0), r16.w
                and r22.x, r6.x, r22.x
                if_nz r22.x
                  iadd r16.w, r16.w, cb2[0].x
                  iadd r16.w, r16.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r22.x, r16.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r16.w, l(68), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r16.w, l(84), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r16.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r16.w, l(116), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r16.w, l(132), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r16.w, l(148), t12.xyzw
                  mad r22.y, |r13.w|, l(-0.200000), l(0.400000)
                  mad r23.xyz, r4.xyzx, r22.yyyy, v5.xyzx
                  dp4 r31.x, r31.xyzw, r23.xyzw
                  dp4 r31.y, r33.xyzw, r23.xyzw
                  dp4 r22.y, r34.xyzw, r23.xyzw
                  dp4 r22.z, r35.xyzw, r23.xyzw
                  lt r23.x, r22.z, r22.y
                  div r23.yz, r31.xxyx, r22.zzzz
                  mad r23.yz, r23.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
                  add r23.yz, r37.zzwz, r23.yyzy
                  mul r23.yz, r37.xxyx, r23.yyzy
                  div r31.xy, r22.xxxx, r36.xzxx
                  add r31.zw, -r31.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                  ge r31.zw, r23.yyyz, r31.zzzw
                  ge r31.xy, r31.xyxx, r23.yzyy
                  or r31.xy, r31.xyxx, r31.zwzz
                  or r25.w, r31.y, r31.x
                  or r23.x, r23.x, r25.w
                  if_z r23.x
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.x, r16.w, l(28), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xy, r16.w, l(164), t12.xyxx
                    mov_sat r23.yz, r23.yyzy
                    mad r32.xy, r23.yzyy, r36.xzxx, r36.ywyy
                    mul r16.w, r22.z, r31.y
                    mad r22.y, r31.x, r22.z, r22.y
                    div r16.w, r22.y, r16.w
                    max r16.w, r16.w, l(0.00006104)
                    and r22.y, r23.x, l(0x0000ffff)
                    if_nz r7.w
                      utof r23.z, r22.y
                      mov r22.z, l(0)
                      mov r25.w, l(0)
                      loop 
                        ige r26.w, r25.w, l(8)
                        breakc_nz r26.w
                        dp2 r31.x, icb[r25.w + 0].xyxx, r26.xyxx
                        dp2 r31.y, icb[r25.w + 0].yxyy, r26.xzxx
                        mad r23.xy, r31.xyxx, r22.xxxx, r32.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.x, r23.xyzx, t9.xxxx, s13, r16.w
                        mad r22.z, r23.x, l(0.125000), r22.z
                        iadd r25.w, r25.w, l(1)
                      endloop 
                    else 
                      utof r32.z, r22.y
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.z, r32.xyzx, t9.xxxx, s13, r16.w
                    endif 
                    mul r16.w, r22.z, r22.z
                    mul r16.w, r22.z, r16.w
                  else 
                    mov r16.w, l(1.000000)
                  endif 
                  mul r11.w, r11.w, r16.w
                else 
                  ubfe r16.w, l(4), l(20), r32.w
                  ult r22.x, l(0), r16.w
                  and r22.x, r4.w, r22.x
                  if_nz r22.x
                    iadd r16.w, r16.w, cb2[0].x
                    iadd r16.w, r16.w, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r22.x, r16.w, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r16.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r16.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r16.w, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r16.w, l(116), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r16.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r16.w, l(148), t12.xyzw
                    mad r22.y, |r13.w|, l(-0.200000), l(0.400000)
                    mad r24.xyz, r4.xyzx, r22.yyyy, v5.xyzx
                    dp4 r23.x, r31.xyzw, r24.xyzw
                    dp4 r23.y, r32.xyzw, r24.xyzw
                    dp4 r22.y, r33.xyzw, r24.xyzw
                    dp4 r23.z, r34.xyzw, r24.xyzw
                    lt r24.x, r23.z, r22.y
                    div r23.xy, r23.xyxx, r23.zzzz
                    mad r23.xy, r23.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r23.xy, r36.zwzz, r23.xyxx
                    mul r23.xy, r36.xyxx, r23.xyxx
                    div r24.yz, r22.xxxx, r35.xxzx
                    add r31.xy, -r24.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
                    ge r31.xy, r23.xyxx, r31.xyxx
                    ge r24.yz, r24.yyzy, r23.xxyx
                    or r24.yz, r24.yyzy, r31.xxyx
                    or r24.y, r24.z, r24.y
                    or r24.x, r24.x, r24.y
                    if_z r24.x
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r24.x, r16.w, l(28), t12.xxxx
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r24.yz, r16.w, l(164), t12.xxyx
                      mov_sat r23.xy, r23.xyxx
                      mad r31.xy, r23.xyxx, r35.xzxx, r35.ywyy
                      mul r16.w, r23.z, r24.z
                      mad r22.y, r24.y, r23.z, r22.y
                      div r16.w, r22.y, r16.w
                      max r16.w, r16.w, l(0.00006104)
                      and r22.y, r24.x, l(0x0000ffff)
                      if_nz r7.w
                        utof r23.z, r22.y
                        mov r24.xy, l(0,0,0,0)
                        loop 
                          ige r24.z, r24.y, l(8)
                          breakc_nz r24.z
                          dp2 r32.x, icb[r24.y + 0].xyxx, r27.xyxx
                          dp2 r32.y, icb[r24.y + 0].yxyy, r27.xzxx
                          mad r23.xy, r32.xyxx, r22.xxxx, r31.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.x, r23.xyzx, t9.xxxx, s13, r16.w
                          mad r24.x, r23.x, l(0.125000), r24.x
                          iadd r24.y, r24.y, l(1)
                        endloop 
                      else 
                        utof r31.z, r22.y
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.x, r31.xyzx, t9.xxxx, s13, r16.w
                      endif 
                      mul r16.w, r24.x, r24.x
                      mul r16.w, r24.x, r16.w
                    else 
                      mov r16.w, l(1.000000)
                    endif 
                    mul r11.w, r11.w, r16.w
                  endif 
                endif 
                mad r16.w, -r14.w, r3.x, l(1.000000)
                mul r16.w, r16.w, r16.w
                mad r16.w, -r16.w, l(0.620000), l(0.620000)
                add r16.w, -r14.w, r16.w
                mad r16.w, r6.z, r16.w, r14.w
                mul r16.w, r11.w, r16.w
                lt r13.w, l(0.000000), r13.w
                mad r23.xyz, r16.wwww, r21.xywx, r10.yzwy
                mad r20.xyz, r20.xyzx, r12.wwww, r5.yzwy
                dp3 r12.w, r20.xyzx, r20.xyzx
                rsq r12.w, r12.w
                mul r20.xyz, r12.wwww, r20.xyzx
                dp3 r12.w, r20.xyzx, r5.yzwy
                dp3 r16.w, r4.xyzx, r20.xyzx
                mad r20.x, |r16.w|, r6.y, -|r16.w|
                mad r16.w, |r16.w|, r20.x, l(1.000000)
                mad r14.w, r14.w, r0.w, r2.w
                mul r16.w, r16.w, r16.w
                mul r14.w, r14.w, r16.w
                rcp r14.w, r14.w
                mul r14.w, r16.z, r14.w
                mul r11.w, r11.w, r14.w
                mul r11.w, r11.w, l(0.250000)
                mad r20.xyz, r11.wwww, r21.xywx, r30.xyzx
                add_sat r12.w, -r12.w, l(1.000000)
                mul r14.w, r12.w, r12.w
                mul r14.w, r14.w, r14.w
                mul r12.w, r12.w, r14.w
                mul r11.w, r11.w, r12.w
                mad r21.xyw, r11.wwww, r21.xyxw, r17.xyxz
                movc r10.yzw, r13.wwww, r23.xxyz, r10.yyzw
                movc r17.xyz, r13.wwww, r21.xywx, r17.xyzx
                movc r30.xyz, r13.wwww, r20.xyzx, r30.xyzx
              endif 
            endif 
          endif 
          break 
          default 
          break 
        endswitch 
      endif 
    endif 
  endloop 
  mov r9.yzw, r10.yyzw
  mov r28.xyz, r17.xyzx
  mov r29.xyz, r30.xyzx
  iadd r6.w, r6.w, l(32)
endloop 
add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r3.xyz, r3.xyzx, r28.xyzx
mad r2.xyz, r29.xyzx, r2.xyzx, r3.xyzx
mad r0.xyz, r9.yzwy, r0.xyzx, r2.xyzx
lt r0.w, l(0.000000), cb2[9].z
if_nz r0.w
  dp3 r0.w, v5.xyzx, v5.xyzx
  rsq r2.x, r0.w
  mul r2.xyz, r2.xxxx, v5.xyzx
  sqrt r0.w, r0.w
  lt r2.w, l(0.000000), cb2[13].w
  if_nz r2.w
    mad r3.xy, r0.wwww, cb2[15].xyxx, cb2[14].zwzz
    mul r3.xy, r3.xyxx, cb2[16].xyxx
    lt r2.w, l(0.010000), |v5.z|
    mul r3.zw, v5.zzzz, cb2[15].zzzw
    mul r4.xy, r3.zwzz, l(-1.442695, -1.442695, 0.000000, 0.000000)
    exp r4.xy, r4.xyxx
    add r4.xy, -r4.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    div r3.zw, r4.xxxy, r3.zzzw
    mul r3.zw, r3.zzzw, r3.xxxy
    movc r3.xy, r2.wwww, r3.zwzz, r3.xyxx
    mul r3.xzw, r3.xxxx, cb2[12].xxyz
    exp r3.xzw, r3.xxzw
    mul r4.xyz, r3.yyyy, cb2[12].xyzx
    exp r4.xyz, r4.xyzx
    add r4.xyz, -r3.xzwx, r4.xyzx
    mad r3.xyz, cb2[13].wwww, r4.xyzx, r3.xzwx
  else 
    mad r2.w, r0.w, cb2[15].x, cb2[14].z
    mul r2.w, r2.w, cb2[16].x
    lt r3.w, l(0.010000), |v5.z|
    mul r4.x, v5.z, cb2[15].z
    mul r4.y, r4.x, l(-1.442695)
    exp r4.y, r4.y
    add r4.y, -r4.y, l(1.000000)
    div r4.x, r4.y, r4.x
    mul r4.x, r2.w, r4.x
    movc r2.w, r3.w, r4.x, r2.w
    mul r4.xyz, r2.wwww, cb2[12].xyzx
    exp r3.xyz, r4.xyzx
  endif 
  mad r3.xyz, r3.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r3.xyz, r3.xyzx, -cb2[9].zzzz
  dp3 r2.x, cb2[7].yzwy, -r2.xyzx
  mad r2.y, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r2.z, cb2[8].w, -r2.x, l(1.000000)
  mul r2.z, r2.z, r2.z
  mul r2.z, r2.z, l(12.566371)
  div r2.y, r2.y, r2.z
  add r0.w, r0.w, -cb2[10].w
  mul_sat r0.w, r0.w, cb2[11].w
  mul r0.w, r0.w, r2.y
  mov_sat r2.x, r2.x
  mad r2.x, r2.x, r2.x, l(1.000000)
  mad r2.x, r2.x, l(0.05968310), l(-1.000000)
  mad r2.x, cb2[8].z, r2.x, l(1.000000)
  mul r2.yzw, r0.wwww, cb2[11].xxyz
  mad r2.xyz, r2.xxxx, cb2[10].xyzx, r2.yzwy
  mul r2.xyz, r2.xyzx, cb2[9].wwww
  add r4.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r2.xyz, r2.xyzx, r4.xyzx
  mad r2.xyz, r0.xyzx, r3.xyzx, r2.xyzx
else 
  mul r0.w, v5.z, cb2[6].x
  mad r2.w, cb2[6].x, v5.z, cb2[5].x
  lt r3.x, |r0.w|, l(0.000100)
  min r3.y, r2.w, l(64.000000)
  mul r3.y, r3.y, l(1.442695)
  exp r3.y, r3.y
  mov_sat r3.z, cb2[6].z
  lt r3.w, r2.w, l(0.000000)
  add r2.w, r2.w, l(1.000000)
  movc r2.w, r3.w, r3.y, r2.w
  add r2.w, r2.w, -cb2[6].z
  movc r0.w, r3.x, l(1.000000), r0.w
  div r0.w, r2.w, r0.w
  movc r0.w, r3.x, r3.z, r0.w
  mul r0.w, r0.w, cb2[5].z
  dp3 r2.w, v5.xyzx, v5.xyzx
  sqrt r3.x, r2.w
  mad r0.w, r0.w, r3.x, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  rsq r2.w, r2.w
  mul r3.xyz, r2.wwww, v5.xyzx
  dp3 r2.w, cb2[7].yzwy, r3.xyzx
  mad_sat r2.w, cb2[8].y, r2.w, cb2[8].x
  add r3.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r3.xyzw, r2.wwww, r3.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r3.w
  add r3.xyz, -r0.xyzx, r3.xyzx
  mad r2.xyz, r0.wwww, r3.xyzx, r0.xyzx
endif 
mul r0.xyz, r2.xyzx, cb1[85].yyyy
ge r2.xyz, r0.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.xyz, r0.xyzx, r2.xyzx
min r0.xyz, r0.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
max r2.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r1.xyz, r1.wwww, r2.xyzx
and r0.w, r1.w, l(0x7f800000)
ieq r0.w, r0.w, l(0x7f800000)
eq r3.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
and r3.xy, r3.zwzz, r3.xyxx
and r2.w, r3.y, r3.x
or r0.w, r0.w, r2.w
if_z r0.w
  ftou r3.xy, v0.xyxx
  imm_atomic_iadd r3.z, u6, r3.xyxx, l(1)
  ult r0.w, r3.z, cb2[58].z
  if_nz r0.w
    max r0.w, r1.z, r1.y
    max r0.w, r0.w, r1.x
    mov r0.w, |r0.w|
    and r0.w, r0.w, l(0x7f800000)
    iadd r0.w, r0.w, l(0x00800000)
    mad r2.xyz, r2.xyzx, r1.wwww, r0.wwww
    ubfe r2.x, l(8), l(15), r2.x
    ushr r2.yz, r2.yyzy, l(0, 15, 15, 0)
    bfi r2.yz, l(0, 8, 8, 0), l(0, 8, 16, 0), r2.yyzy, l(0, 0, 0, 0)
    iadd r2.x, r2.y, r2.x
    iadd r2.x, r2.z, r2.x
    ishl r0.w, r0.w, l(1)
    iadd r2.xzw, r0.wwww, r2.xxxx
    mov_sat r0.w, r1.w
    mul r0.w, r0.w, l(2046.000000)
    ftou r0.w, r0.w
    ishl r3.w, v0.z, l(2)
    and r0.w, r0.w, l(2046)
    bfi r2.y, l(11), l(0), r0.w, r3.w
    store_uav_typed u7.xyzw, r3.xyzz, r2.xyzw
    mov r0.w, l(-1)
  else 
    mov r0.w, l(0)
  endif 
else 
  mov r0.w, l(-1)
endif 
mul r1.xyz, r1.wwww, r0.xyzx
movc o0.xyzw, r0.wwww, l(0,0,0,0), r1.xyzw
ret 
// Approximately 2258 instruction slots used
