//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:39:45 2021
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float3 specColorTint;              // Offset:  160 Size:    12 [unused]
//   float baseNormalHeight;            // Offset:  172 Size:     4 [unused]
//   float2 glossRange;                 // Offset:  176 Size:     8 [unused]
//   float2 normalMapScale;             // Offset:  184 Size:     8
//   float4 flowParams;                 // Offset:  192 Size:    16
//   float4 noiseParams;                // Offset:  208 Size:    16
//   bool useOrientedNormalMap;         // Offset:  224 Size:     4
//   float4 specularLobeRoughnessControl;// Offset:  240 Size:    16
//   float4 lobeWeightingThicknessRefraction;// Offset:  256 Size:    16
//   float3 normalAdjustAndGloss;       // Offset:  272 Size:    12
//   float4 decalTint;                  // Offset:  288 Size:    16 [unused]
//   float2 opacityScale;               // Offset:  304 Size:     8
//   float invZFeatherDepth;            // Offset:  312 Size:     4 [unused]
//   float2 normalsFlowScaleMin;        // Offset:  320 Size:     8
//   float4 ssrParams;                  // Offset:  336 Size:    16
//   float translucentShadowOpacity;    // Offset:  352 Size:     4 [unused]
//   float3 foamColor;                  // Offset:  356 Size:    12
//   float4 foamMaskScroll01;           // Offset:  368 Size:    16 [unused]
//   float4 foamMaskScroll23;           // Offset:  384 Size:    16 [unused]
//   float4 foamMaskScale01;            // Offset:  400 Size:    16 [unused]
//   float4 foamMaskScale23;            // Offset:  416 Size:    16 [unused]
//   float foamScale;                   // Offset:  432 Size:     4 [unused]
//   float2 foamSpacing;                // Offset:  436 Size:     8
//   float foamColorScale;              // Offset:  444 Size:     4
//   float foamZFeather;                // Offset:  448 Size:     4
//   bool useFoam;                      // Offset:  452 Size:     4
//   bool useSSR;                       // Offset:  456 Size:     4
//   bool useLoopedSSR;                 // Offset:  460 Size:     4
//   bool useSpecularZFeather;          // Offset:  464 Size:     4 [unused]
//   bool scaleNormalsWithFlow;         // Offset:  468 Size:     4
//   bool doubleSidedLighting;          // Offset:  472 Size:     4
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for forwardDecalConstants
// {
//
//   struct CoreDecalConstantsPack
//   {
//       
//       uint4 data[8];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   128
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// colorSampler                      sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// normalSampler                     sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// flowSampler                       sampler      NA          NA             s5      1 
// noiseSampler                      sampler      NA          NA             s6      1 
// foamSampler                       sampler      NA          NA             s7      1 
// bilinearClamp                     sampler      NA          NA             s8      1 
// pointClamp                        sampler      NA          NA             s9      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// colorMap                          texture  float4          2d             t0      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// normalMap                         texture  float4          2d            t21      1 
// flowMap                           texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// noiseMap                          texture  float4          2d            t24      1 
// foamBase                          texture  float4          2d            t25      1 
// ifloatZSceneDownsampled           texture  float4          2d            t26      1 
// ifloatZScene                      texture  float4          2d            t29      1 
// iResolveScene                     texture  float4          2d            t30      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// visibleDecals                     texture    uint     2darray            t35      1 
// forwardDecalConstants             texture  struct         r/o            t36      1 
// rColorRamp                        texture  float4          2d            t37      1 
// materialTexBC7                    texture  float4     2darray            t42      1 
// materialTexBC3                    texture  float4     2darray            t43      1 
// materialTexMask                   texture  float4     2darray            t45      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyz         1     NONE   float       
// COLOR                    1      w        1     NONE   float       
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 4   x           3     NONE    uint       
// TEXCOORD                 1   xyz         4     NONE   float   xyz 
// TEXCOORD                 2   xyz         5     NONE   float   xyz 
// TEXCOORD                 3   xyz         6     NONE   float   xyz 
// OFFPOSITION              0   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
// SV_IsFrontFace           0   x          10    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[30], immediateIndexed
dcl_constantbuffer CB1[86], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_sampler s9, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2d (float,float,float,float) t26
dcl_resource_texture2d (float,float,float,float) t29
dcl_resource_texture2d (float,float,float,float) t30
dcl_resource_texture2darray (float,float,float,float) t31
dcl_resource_texture2darray (uint,uint,uint,uint) t35
dcl_resource_structured t36, 128
dcl_resource_texture2d (float,float,float,float) t37
dcl_resource_texture2darray (float,float,float,float) t42
dcl_resource_texture2darray (float,float,float,float) t43
dcl_resource_texture2darray (float,float,float,float) t45
dcl_input_ps_siv linear noperspective v0.xyzw, position
dcl_input_ps linear v2.xy
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyz
dcl_input_ps linear v8.xyzw
dcl_input_ps linear v9.xyzw
dcl_input_ps_sgv constant v10.x, is_front_face
dcl_output o0.xyzw
dcl_temps 45
ge r0.x, v0.z, l(0.984375)
mul r0.y, v0.z, l(1.01587307)
mad r0.z, v0.z, l(64.000000), l(-63.000000)
movc r0.x, r0.x, r0.z, r0.y
max r0.x, r0.x, l(0.00000001)
rcp r0.x, r0.x
ftou r0.yz, v0.yyxy
deriv_rtx_coarse r1.xyz, v7.xyzx
deriv_rty_coarse r2.xyz, v7.xyzx
iadd r0.w, cb2[0].y, cb2[0].x
add r3.xyz, v7.xyzx, cb1[24].xyzx
mul r1.w, r0.x, l(0.00781250)
min r1.w, r1.w, l(15.000000)
ftou r1.w, r1.w
ushr r4.xy, r0.zyzz, l(6, 6, 0, 0)
ishl r4.z, r1.w, l(4)
and r1.w, cb2[57].z, l(-32)
iadd r2.w, -r1.w, cb2[57].z
mov r5.xy, l(0,0,0,0)
mov r6.w, l(0)
mov r3.w, l(1.000000)
mov r7.xyzw, l(0,0,0,0)
mov r8.xyz, l(0,0,0,0)
mov r4.w, l(0)
loop 
  uge r5.w, r4.w, cb2[57].z
  breakc_nz r5.w
  ushr r5.z, r4.w, l(5)
  iadd r6.xyz, r4.xyzx, r5.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r5.z, r6.xyzw, t35.yzxw
  ieq r5.w, r1.w, r4.w
  ubfe r6.x, r2.w, l(0), r5.z
  movc r5.z, r5.w, r6.x, r5.z
  iadd r5.w, r0.w, r4.w
  mov r9.xyzw, r7.yzwx
  mov r6.xyz, r8.xyzx
  mov r8.w, r5.z
  loop 
    breakc_z r8.w
    firstbit_lo r10.x, r8.w
    ishl r10.y, l(1), r10.x
    and r10.z, r8.w, r10.y
    if_nz r10.z
      xor r8.w, r8.w, r10.y
      iadd r10.y, r5.w, r10.x
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r11.xyzw, r10.y, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r12.xy, r10.y, l(16), t11.xyxx
      add r10.yzw, r11.xxyz, -v7.xxyz
      mov r12.z, r11.w
      lt r10.yzw, |r10.yyzw|, r12.zzxy
      and r10.y, r10.z, r10.y
      and r10.y, r10.w, r10.y
      if_nz r10.y
        iadd r10.x, r4.w, r10.x
        ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r10.yzw, r10.x, l(0), t36.xxyz
        ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r11.xyz, r10.x, l(16), t36.xyzx
        ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r12.xyz, r10.x, l(32), t36.xyzx
        mov r13.x, r10.y
        mov r13.y, r11.x
        mov r13.z, r12.x
        dp3 r10.y, r13.xyzx, r13.xyzx
        rsq r10.y, r10.y
        mul r14.xyz, r10.yyyy, r13.xyzx
        dp3 r10.y, r14.xyzx, v4.xyzx
        ge r10.y, r10.y, l(0.500000)
        if_nz r10.y
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r14.xyw, r10.x, l(48), t36.xyxz
          mov r13.w, r14.x
          dp4 r13.x, r3.xyzw, r13.xyzw
          mov r15.x, r10.z
          mov r15.y, r11.y
          mov r15.z, r12.y
          mov r15.w, r14.y
          dp4 r13.y, r3.xyzw, r15.xyzw
          mov r14.x, r10.w
          mov r14.y, r11.z
          mov r14.z, r12.z
          dp4 r13.z, r3.xyzw, r14.xyzw
          lt r10.yzw, |r13.xxyz|, l(0.000000, 1.000000, 1.000000, 1.000000)
          and r10.y, r10.z, r10.y
          and r10.y, r10.w, r10.y
          if_nz r10.y
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r11.xyzw, r10.x, l(64), t36.xyzw
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r12.xyzw, r10.x, l(80), t36.xyzw
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r10.y, r10.x, l(108), t36.xxxx
            dp3 r16.x, r1.xyzx, r15.xyzx
            dp3 r16.y, r1.xyzx, r14.xyzx
            dp3 r15.x, r2.xyzx, r15.xyzx
            dp3 r15.y, r2.xyzx, r14.xyzx
            mad r10.zw, r13.yyyz, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
            mul r13.xyz, r16.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
            mul r14.xyz, r15.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
            and r12.yz, r12.yyzy, l(0, 0x0000ffff, 0x0000ffff, 0)
            if_nz r12.y
              ubfe r13.w, l(4), l(24), r12.w
              ishl r13.w, l(1), r13.w
              ushr r14.w, r12.w, l(28)
              ishl r14.w, l(1), r14.w
              ieq r15.x, r12.y, l(4)
              if_nz r15.x
                and r15.x, r12.w, l(4095)
                ubfe r15.y, l(12), l(12), r12.w
                and r15.z, r10.y, l(1023)
                utof r16.xz, r13.wwww
                utof r16.y, r14.w
                mad r17.xy, r10.zwzz, r16.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                add r17.zw, r16.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                min r17.xy, r17.zwzz, r17.xyxx
                utof r18.xy, r15.xyxx
                add r15.xy, r17.xyxx, r18.xyxx
                mul r17.xy, r15.xyxx, cb1[83].xyxx
                utof r17.z, r15.z
                mul r15.xyz, r13.zyzz, cb1[83].xyxx
                mul r15.xyz, r16.xyzx, r15.xyzx
                mul r18.xyz, r14.zyzz, cb1[83].xyxx
                mul r16.xyz, r16.xyzx, r18.xyzx
                sample_d_indexable(texture2darray)(float,float,float,float) r15.xyzw, r17.xyzx, t42.xyzw, s4, r15.xyzx, r16.xyzx
              else 
                ieq r12.y, r12.y, l(1)
                if_nz r12.y
                  and r12.y, r12.w, l(4095)
                  ubfe r12.w, l(12), l(12), r12.w
                  and r16.x, r10.y, l(1023)
                  utof r17.xz, r13.wwww
                  utof r17.y, r14.w
                  mad r16.yz, r10.zzwz, r17.zzyz, l(0.000000, 0.500000, 0.500000, 0.000000)
                  add r18.xy, r17.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r16.yz, r16.yyzy, r18.xxyx
                  utof r18.xy, r12.ywyy
                  add r12.yw, r16.yyyz, r18.xxxy
                  mul r18.xy, r12.ywyy, cb1[83].zwzz
                  utof r18.z, r16.x
                  mul r16.xyz, r13.zyzz, cb1[83].zwzz
                  mul r16.xyz, r17.xyzx, r16.xyzx
                  mul r19.xyz, r14.zyzz, cb1[83].zwzz
                  mul r17.xyz, r17.xyzx, r19.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r15.xyzw, r18.xyzx, t43.xyzw, s4, r16.xyzx, r17.xyzx
                else 
                  mov r15.xyzw, l(1.000000,1.000000,1.000000,1.000000)
                endif 
              endif 
              mul r11.xyz, r11.xyzx, r15.xyzx
              mul r12.y, r11.w, r15.w
            else 
              mov r11.xyz, l(0,0,0,0)
              mov r12.y, l(0)
            endif 
            ne r12.w, r12.x, l(1.000000)
            add r11.w, r11.w, r12.y
            mad_sat r11.w, r11.w, r12.x, -r12.x
            movc r11.w, r12.w, r11.w, r12.y
            if_nz r12.z
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r10.x, r10.x, l(100), t36.xxxx
              ubfe r12.x, l(4), l(24), r10.x
              ushr r12.y, r10.x, l(28)
              ishl r12.xy, l(1, 1, 0, 0), r12.xyxx
              ieq r12.w, r12.z, l(2)
              if_nz r12.w
                and r12.w, r10.x, l(4095)
                ubfe r13.w, l(12), l(12), r10.x
                ubfe r14.w, l(10), l(20), r10.y
                utof r15.xyz, r12.xyxx
                mad r16.xy, r10.zwzz, r15.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                add r16.zw, r15.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                min r16.xy, r16.zwzz, r16.xyxx
                utof r17.x, r12.w
                utof r17.y, r13.w
                add r16.xy, r16.xyxx, r17.xyxx
                mul r16.xy, r16.xyxx, cb1[84].xyxx
                utof r16.z, r14.w
                mul r17.xyz, r13.zyzz, cb1[84].xyxx
                mul r17.xyz, r15.xyzx, r17.xyzx
                mul r18.xyz, r14.zyzz, cb1[84].xyxx
                mul r15.xyz, r15.xyzx, r18.xyzx
                sample_d_indexable(texture2darray)(float,float,float,float) r12.w, r16.xyzx, t45.yzwx, s4, r17.xyzx, r15.xyzx
              else 
                ieq r12.z, r12.z, l(4)
                if_nz r12.z
                  and r12.z, r10.x, l(4095)
                  ubfe r13.w, l(12), l(12), r10.x
                  ubfe r14.w, l(10), l(20), r10.y
                  utof r15.xyz, r12.xyxx
                  mad r16.xy, r10.zwzz, r15.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r16.zw, r15.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r16.xy, r16.zwzz, r16.xyxx
                  utof r17.x, r12.z
                  utof r17.y, r13.w
                  add r16.xy, r16.xyxx, r17.xyxx
                  mul r16.xy, r16.xyxx, cb1[83].xyxx
                  utof r16.z, r14.w
                  mul r17.xyz, r13.zyzz, cb1[83].xyxx
                  mul r17.xyz, r15.xyzx, r17.xyzx
                  mul r18.xyz, r14.zyzz, cb1[83].xyxx
                  mul r15.xyz, r15.xyzx, r18.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r12.w, r16.xyzx, t42.yzwx, s4, r17.xyzx, r15.xyzx
                else 
                  and r12.z, r10.x, l(4095)
                  ubfe r10.x, l(12), l(12), r10.x
                  ubfe r10.y, l(10), l(20), r10.y
                  utof r15.xyz, r12.xyxx
                  mad r10.zw, r10.zzzw, r15.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
                  add r12.xy, r15.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r10.zw, r10.zzzw, r12.xxxy
                  utof r12.x, r12.z
                  utof r12.yz, r10.xxyx
                  add r10.xz, r10.zzwz, r12.xxyx
                  mul r12.xy, r10.xzxx, cb1[83].zwzz
                  mul r10.xyz, r13.xyzx, cb1[83].zwzz
                  mul r10.xyz, r15.xyzx, r10.xyzx
                  mul r13.xyz, r14.xyzx, cb1[83].zwzz
                  mul r13.xyz, r15.xyzx, r13.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r12.w, r12.xyzx, t43.yzwx, s4, r10.xyzx, r13.xyzx
                endif 
              endif 
              mad r10.xyz, r12.wwww, l(0.960000, 0.960000, 0.960000, 0.000000), l(0.040000, 0.040000, 0.040000, 0.000000)
              add_sat r10.w, -r12.w, l(1.000000)
              mul r11.xyz, r10.wwww, r11.xyzx
            else 
              mov r10.xyz, l(0.040000,0.040000,0.040000,0)
            endif 
            add r10.w, -r11.w, l(1.000000)
            mul r12.xyz, r6.xyzx, r10.wwww
            mad r6.xyz, r11.xyzx, r11.wwww, r12.xyzx
            mul r11.xyz, r9.xyzx, r10.wwww
            mad r9.xyz, r10.xyzx, r11.wwww, r11.xyzx
            mad r9.w, r9.w, r10.w, r11.w
          endif 
        endif 
      endif 
    endif 
  endloop 
  mov r7.xyzw, r9.wxyz
  mov r8.xyz, r6.xyzx
  iadd r4.w, r4.w, l(32)
endloop 
mov_sat r7.x, r7.x
add r0.w, -r7.x, l(1.000000)
mul r1.xy, v2.xyxx, cb0[11].zwzz
mul r1.zw, cb0[13].xxxy, cb1[69].wwww
mad r1.zw, v2.xxxy, cb0[13].zzzz, r1.zzzw
sample_indexable(texture2d)(float,float,float,float) r1.zw, r1.zwzz, t24.zwxy, s6
mul r1.zw, r1.zzzw, cb0[13].wwww
mad r1.zw, v2.xxxy, cb0[12].xxxx, r1.zzzw
frc r2.xy, r1.zwzz
mad r2.zw, r2.xxxy, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
mul r2.xy, r2.xyxx, r2.xyxx
mul r5.xy, r2.xyxx, r2.zwzz
resinfo_indexable(texture2d)(float,float,float,float) r5.zw, l(0), t21.zwxy
mul r5.zw, r1.xxxy, r5.zzzw
deriv_rtx_coarse r6.xy, r5.zwzz
deriv_rty_coarse r5.zw, r5.zzzw
dp2 r4.w, r6.xyxx, r6.xyxx
dp2 r5.z, r5.zwzz, r5.zwzz
max r4.w, r4.w, r5.z
log r4.w, r4.w
mul r4.w, r4.w, l(0.500000)
round_ni r5.zw, r1.zzzw
div r5.zw, r5.zzzw, cb0[12].xxxx
sample_indexable(texture2d)(float,float,float,float) r5.zw, r5.zwzz, t22.zwxy, s5
add r5.zw, r5.zzzw, r5.zzzw
add r6.xyzw, r1.zwzw, l(1.000000, 0.000000, 0.000000, 1.000000)
round_ni r6.xyzw, r6.xyzw
div r6.xyzw, r6.xyzw, cb0[12].xxxx
sample_indexable(texture2d)(float,float,float,float) r6.xy, r6.xyxx, t22.xyzw, s5
add r6.xy, r6.xyxx, r6.xyxx
sample_indexable(texture2d)(float,float,float,float) r6.zw, r6.zwzz, t22.zwxy, s5
add r6.zw, r6.zzzw, r6.zzzw
add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
round_ni r1.zw, r1.zzzw
div r1.zw, r1.zzzw, cb0[12].xxxx
sample_indexable(texture2d)(float,float,float,float) r1.zw, r1.zwzz, t22.zwxy, s5
add r1.zw, r1.zzzw, r1.zzzw
if_nz cb0[29].y
  sample_indexable(texture2d)(float,float,float,float) r9.xy, v2.xyxx, t22.xyzw, s5
  add r9.xy, r9.xyxx, r9.xyxx
  mad r9.zw, r9.xxxy, l(0.000000, 0.000000, -1.000000, 1.000000), l(0.000000, 0.000000, 1.000000, -1.000000)
  mad r9.xy, r9.xwxx, l(-1.000000, 1.000000, 0.000000, 0.000000), l(1.000000, 0.000000, 0.000000, 0.000000)
  dp2 r8.w, r9.zwzz, r9.xyxx
  sqrt r8.w, r8.w
  mad r8.w, r8.w, cb0[20].y, cb0[20].x
  mul r9.xy, r8.wwww, cb0[17].xyxx
else 
  mov r9.xy, cb0[17].xyxx
endif 
mad r2.xy, -r2.zwzz, r2.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
mul r2.xy, r2.xyxx, r2.xyxx
mad r2.xy, r5.xyxx, r5.xyxx, r2.xyxx
rsq r2.xy, r2.xyxx
if_z cb0[14].x
  mul r2.z, cb0[12].y, cb1[69].w
  mad r9.zw, r5.zzzw, l(0.000000, 0.000000, -1.000000, 1.000000), l(0.000000, 0.000000, 1.000000, -1.000000)
  mad r9.zw, r9.zzzw, r2.zzzz, r1.xxxy
  sample_l_indexable(texture2d)(float,float,float,float) r9.zw, r9.zwzz, t21.zwxy, s3, r4.w
  mad r10.xy, r6.xyxx, l(-1.000000, 1.000000, 0.000000, 0.000000), l(1.000000, -1.000000, 0.000000, 0.000000)
  mad r10.xy, r10.xyxx, r2.zzzz, r1.xyxx
  sample_l_indexable(texture2d)(float,float,float,float) r10.xy, r10.xyxx, t21.xyzw, s3, r4.w
  add r10.xy, -r9.zwzz, r10.xyxx
  mad r9.zw, r5.xxxx, r10.xxxy, r9.zzzw
  mad r10.xy, r6.zwzz, l(-1.000000, 1.000000, 0.000000, 0.000000), l(1.000000, -1.000000, 0.000000, 0.000000)
  mad r10.xy, r10.xyxx, r2.zzzz, r1.xyxx
  sample_l_indexable(texture2d)(float,float,float,float) r10.xy, r10.xyxx, t21.xyzw, s3, r4.w
  mad r10.zw, r1.zzzw, l(0.000000, 0.000000, -1.000000, 1.000000), l(0.000000, 0.000000, 1.000000, -1.000000)
  mad r1.xy, r10.zwzz, r2.zzzz, r1.xyxx
  sample_l_indexable(texture2d)(float,float,float,float) r1.xy, r1.xyxx, t21.xyzw, s3, r4.w
  add r1.xy, -r10.xyxx, r1.xyxx
  mad r1.xy, r5.xxxx, r1.xyxx, r10.xyxx
  add r1.xy, -r9.zwzz, r1.xyxx
  mad r1.xy, r5.yyyy, r1.xyxx, r9.zwzz
  mad r1.xy, r1.xyxx, r9.xxxx, r9.yyyy
else 
  mad r2.zw, r5.zzzw, l(0.000000, 0.000000, -1.000000, 1.000000), l(0.000000, 0.000000, 1.000000, -1.000000)
  dp2 r5.z, r2.zwzz, r2.zwzz
  sqrt r5.z, r5.z
  max r5.z, r5.z, l(0.000010)
  div r10.xy, r2.zwzz, r5.zzzz
  mov r10.z, -r10.x
  dp2 r11.x, v2.xyxx, r10.yzyy
  dp2 r11.y, v2.xyxx, -r10.xyxx
  mul r11.xy, r11.xyxx, cb0[11].zwzz
  mul r2.z, r5.z, cb1[69].w
  mad r11.z, -r2.z, cb0[12].y, r11.y
  sample_l_indexable(texture2d)(float,float,float,float) r2.zw, r11.xzxx, t21.zwxy, s3, r4.w
  mad r2.zw, r2.zzzw, r9.xxxx, r9.yyyy
  dp2 r11.x, r2.zwzz, r10.yzyy
  dp2 r11.y, r2.zwzz, -r10.xyxx
  mad r2.zw, r6.xxxy, l(0.000000, 0.000000, -1.000000, 1.000000), l(0.000000, 0.000000, 1.000000, -1.000000)
  dp2 r5.z, r2.zwzz, r2.zwzz
  sqrt r5.z, r5.z
  max r5.z, r5.z, l(0.000010)
  div r10.xy, r2.zwzz, r5.zzzz
  mov r10.z, -r10.x
  dp2 r6.x, v2.xyxx, r10.yzyy
  dp2 r6.y, v2.xyxx, -r10.xyxx
  mul r12.xy, r6.xyxx, cb0[11].zwzz
  mul r2.z, r5.z, cb1[69].w
  mad r12.z, -r2.z, cb0[12].y, r12.y
  sample_l_indexable(texture2d)(float,float,float,float) r2.zw, r12.xzxx, t21.zwxy, s3, r4.w
  mad r2.zw, r2.zzzw, r9.xxxx, r9.yyyy
  dp2 r6.x, r2.zwzz, r10.yzyy
  dp2 r6.y, r2.zwzz, -r10.xyxx
  add r2.zw, -r11.xxxy, r6.xxxy
  mad r2.zw, r5.xxxx, r2.zzzw, r11.xxxy
  mad r5.zw, r6.zzzw, l(0.000000, 0.000000, -1.000000, 1.000000), l(0.000000, 0.000000, 1.000000, -1.000000)
  dp2 r6.x, r5.zwzz, r5.zwzz
  sqrt r6.x, r6.x
  max r6.x, r6.x, l(0.000010)
  div r10.xy, r5.zwzz, r6.xxxx
  mov r10.z, -r10.x
  dp2 r11.x, v2.xyxx, r10.yzyy
  dp2 r11.y, v2.xyxx, -r10.xyxx
  mul r11.xy, r11.xyxx, cb0[11].zwzz
  mul r5.z, r6.x, cb1[69].w
  mad r11.z, -r5.z, cb0[12].y, r11.y
  sample_l_indexable(texture2d)(float,float,float,float) r5.zw, r11.xzxx, t21.zwxy, s3, r4.w
  mad r5.zw, r5.zzzw, r9.xxxx, r9.yyyy
  dp2 r6.x, r5.zwzz, r10.yzyy
  dp2 r6.y, r5.zwzz, -r10.xyxx
  mad r1.zw, r1.zzzw, l(0.000000, 0.000000, -1.000000, 1.000000), l(0.000000, 0.000000, 1.000000, -1.000000)
  dp2 r5.z, r1.zwzz, r1.zwzz
  sqrt r5.z, r5.z
  max r5.z, r5.z, l(0.000010)
  div r10.xy, r1.zwzz, r5.zzzz
  mov r10.z, -r10.x
  dp2 r11.x, v2.xyxx, r10.yzyy
  dp2 r11.y, v2.xyxx, -r10.xyxx
  mul r11.xy, r11.xyxx, cb0[11].zwzz
  mul r1.z, r5.z, cb1[69].w
  mad r11.z, -r1.z, cb0[12].y, r11.y
  sample_l_indexable(texture2d)(float,float,float,float) r1.zw, r11.xzxx, t21.zwxy, s3, r4.w
  mad r1.zw, r1.zzzw, r9.xxxx, r9.yyyy
  dp2 r9.x, r1.zwzz, r10.yzyy
  dp2 r9.y, r1.zwzz, -r10.xyxx
  add r1.zw, -r6.xxxy, r9.xxxy
  mad r1.zw, r5.xxxx, r1.zzzw, r6.xxxy
  add r1.zw, -r2.zzzw, r1.zzzw
  mad r1.xy, r5.yyyy, r1.zwzz, r2.zwzz
endif 
mul r1.z, r2.y, r2.x
mul r1.xy, r1.zzzz, r1.xyxx
mul r1.yzw, r1.yyyy, v6.xxyz
mad r1.xyz, v5.xyzx, r1.xxxx, r1.yzwy
add r1.xyz, r1.xyzx, v4.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
movc r1.xyz, v10.xxxx, r1.xyzx, -r1.xyzx
dp3 r2.x, v7.xyzx, v7.xyzx
rsq r2.y, r2.x
mul r2.yzw, r2.yyyy, v7.xxyz
dp3_sat r5.z, r1.xyzx, -r2.yzwy
if_nz v10.x
  ftoi r6.xy, v0.xyxx
  mov r6.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.w, r6.xyzw, t29.yzwx
  ge r6.x, r4.w, l(0.984375)
  mul r6.y, r4.w, l(1.01587307)
  mad r4.w, r4.w, l(64.000000), l(-63.000000)
  movc r4.w, r6.x, r4.w, r6.y
  max r4.w, r4.w, l(0.00000001)
  rcp r4.w, r4.w
  add r4.w, r4.w, -v0.w
  max r4.w, r4.w, l(0.000000)
  min r4.w, r4.w, cb0[21].x
  mov r6.x, cb0[19].y
else 
  sqrt r4.w, r2.x
  mov r6.x, cb0[19].x
endif 
if_nz cb0[28].y
  sample_indexable(texture2d)(float,float,float,float) r6.y, v8.xyxx, t25.yxzw, s7
  sample_indexable(texture2d)(float,float,float,float) r6.z, v8.zwzz, t25.yzxw, s7
  sample_indexable(texture2d)(float,float,float,float) r6.w, v9.xyxx, t25.yzwx, s7
  sample_indexable(texture2d)(float,float,float,float) r8.w, v9.zwzz, t25.yzwx, s7
  add r6.y, r6.z, r6.y
  add r6.y, r6.w, r6.y
  add r6.y, r8.w, r6.y
  mul r6.y, r6.y, cb0[27].w
  sample_indexable(texture2d)(float,float,float,float) r6.z, v2.xyxx, t22.xyzw, s5
  mad r6.z, cb0[27].z, r6.z, cb0[27].y
  max r6.y, r6.y, l(0.000000)
  log r6.y, r6.y
  mul r6.y, r6.y, r6.z
  exp r6.y, r6.y
  mul r6.z, r4.w, cb0[28].x
  min r6.z, r6.z, l(1.000000)
  mul r6.w, r6.z, r6.y
  mad r6.y, -r6.y, r6.z, l(1.000000)
  mul r6.y, r6.y, cb0[17].z
else 
  mov r6.w, l(0)
  mov r6.y, cb0[17].z
endif 
ine r6.z, cb0[29].z, l(0)
dp3 r8.w, -v7.xyzx, -v7.xyzx
rsq r8.w, r8.w
mul r9.xyz, r8.wwww, -v7.xyzx
utof r0.yz, r0.yyzy
dp2 r9.w, r0.zyzz, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r9.w, r9.w
mul r9.w, r9.w, l(52.982918)
frc r9.w, r9.w
mad r9.w, r9.w, l(6.28318548), cb1[70].w
sincos r10.x, r11.x, r9.w
dp2 r0.y, r0.yzyy, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r0.y, r0.y
mul r0.y, r0.y, l(52.982918)
frc r0.y, r0.y
mad r0.y, r0.y, l(6.28318548), cb1[70].w
sincos r12.x, r13.x, r0.y
dp3_sat r0.y, r1.xyzx, r9.xyzx
dp3 r0.z, -r9.xyzx, r1.xyzx
add r0.z, r0.z, r0.z
mad r14.xyz, r1.xyzx, -r0.zzzz, -r9.xyzx
add r0.z, -r6.y, l(1.000000)
mul r9.w, r0.z, l(5.000000)
mad r10.z, r0.z, l(5.000000), l(-2.500000)
mul_sat r10.z, r10.z, l(0.400000)
mul r10.z, r10.z, l(100.000000)
mad r12.yz, -r0.zzzz, l(0.000000, 10.000000, 5.000000, 0.000000), l(0.000000, 6.857410, 7.085000, 0.000000)
exp r10.w, r12.y
mul r10.w, r0.y, r10.w
mul r10.w, r10.w, l(9.136810)
mul r11.w, r0.z, r9.w
mad r11.w, -r11.w, l(2.015905), r12.z
exp r11.w, r11.w
mul r11.w, r0.y, r11.w
mul r11.w, r11.w, l(9.708090)
max r10.w, r10.w, r11.w
max r10.w, r10.w, l(1.268160)
mov r15.xy, l(0,0,0,0)
mov r16.w, l(0)
mov r17.yz, l(0,0,1.000000,0)
mov r18.xy, l(0,0,0,0)
mov r19.xy, l(0,0,0,0)
mov r20.xy, l(0,0,0,0)
mov r5.xw, l(1.000000,0,0,0)
mov r21.xyzw, l(0,0,0,0)
mov r22.yzw, l(0,0,0,0)
mov r23.w, l(0)
mov r11.w, l(0)
mov r12.y, l(0)
loop 
  uge r12.z, r12.y, cb2[0].y
  breakc_nz r12.z
  ushr r15.z, r12.y, l(5)
  iadd r16.xyz, r4.xyzx, r15.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r12.z, r16.xyzw, t7.yzxw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r12.y, l(0), t15.wxyz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r12.y, l(16), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r12.y, l(32), t15.yxwz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r12.y, l(48), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r12.y, l(64), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r12.y, l(80), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r13.yz, r12.y, l(96), t15.xxyx
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r12.y, l(116), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r12.y, l(132), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r12.y, l(148), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r12.y, l(164), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r12.y, l(180), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r12.y, l(196), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xy, r12.y, l(212), t15.xyxx
  add r16.xyz, -r24.yzwy, v7.xyzx
  dp3 r12.w, r16.xyzx, r16.xyzx
  sqrt r12.w, r12.w
  ge r12.w, cb2[54].y, r12.w
  and r13.w, r30.y, l(0x0000ffff)
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r13.w, l(0), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r38.xyzw, r13.w, l(16), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r39.xyzw, r13.w, l(32), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r40.xyzw, r13.w, l(48), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r41.xyzw, r13.w, l(64), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r42.xyzw, r13.w, l(80), t16.xyzw
  dp3 r15.z, r37.xyzx, r16.xyzx
  add_sat r15.z, r37.w, r15.z
  dp3 r15.w, r38.xyzx, r16.xyzx
  add_sat r15.w, r38.w, r15.w
  mul r15.z, r15.w, r15.z
  dp3 r15.w, r39.xyzx, r16.xyzx
  add_sat r15.w, r39.w, r15.w
  mul r15.z, r15.w, r15.z
  dp3 r15.w, r40.xyzx, r16.xyzx
  add_sat r15.w, r40.w, r15.w
  mul r15.z, r15.w, r15.z
  dp3 r15.w, r41.xyzx, r16.xyzx
  add_sat r15.w, r41.w, r15.w
  mul r15.z, r15.w, r15.z
  dp3 r15.w, r42.xyzx, r16.xyzx
  add_sat r15.w, r42.w, r15.w
  mul r17.x, r15.w, r15.z
  and r15.z, r13.y, l(1)
  movc r15.zw, r15.zzzz, r17.xxxy, r17.zzzx
  mov r37.xy, r30.zwzz
  mov r37.z, r31.z
  dp3 r17.x, r14.xyzx, r37.xyzx
  dp3 r17.w, r16.xyzx, r37.xyzx
  add r17.w, -r31.w, r17.w
  ge r18.w, r17.w, l(0.000000)
  max r17.w, r10.z, |r17.w|
  movc r17.w, r18.w, r17.w, -r17.w
  max r17.x, -r17.x, l(0.00000010)
  div r17.x, r17.w, r17.x
  min r17.x, |r17.x|, l(131072.000000)
  mov r31.z, r32.z
  dp3 r17.w, r14.xyzx, r31.xyzx
  dp3 r18.w, r16.xyzx, r31.xyzx
  add r18.w, -r32.w, r18.w
  ge r19.w, r18.w, l(0.000000)
  max r18.w, r10.z, |r18.w|
  movc r18.w, r19.w, r18.w, -r18.w
  max r17.w, -r17.w, l(0.00000010)
  div r17.w, r18.w, r17.w
  min r17.x, |r17.w|, r17.x
  mov r32.z, r33.z
  dp3 r17.w, r14.xyzx, r32.xyzx
  dp3 r18.w, r16.xyzx, r32.xyzx
  add r18.w, -r33.w, r18.w
  ge r19.w, r18.w, l(0.000000)
  max r18.w, r10.z, |r18.w|
  movc r18.w, r19.w, r18.w, -r18.w
  max r17.w, -r17.w, l(0.00000010)
  div r17.w, r18.w, r17.w
  min r17.x, |r17.w|, r17.x
  mov r33.z, r34.z
  dp3 r17.w, r14.xyzx, r33.xyzx
  dp3 r18.w, r16.xyzx, r33.xyzx
  add r18.w, -r34.w, r18.w
  ge r19.w, r18.w, l(0.000000)
  max r18.w, r10.z, |r18.w|
  movc r18.w, r19.w, r18.w, -r18.w
  max r17.w, -r17.w, l(0.00000010)
  div r17.w, r18.w, r17.w
  min r17.x, |r17.w|, r17.x
  mov r34.z, r35.x
  dp3 r17.w, r14.xyzx, r34.xyzx
  dp3 r18.w, r16.xyzx, r34.xyzx
  add r18.w, -r35.y, r18.w
  ge r19.w, r18.w, l(0.000000)
  max r18.w, r10.z, |r18.w|
  movc r18.w, r19.w, r18.w, -r18.w
  max r17.w, -r17.w, l(0.00000010)
  div r17.w, r18.w, r17.w
  min r17.x, |r17.w|, r17.x
  mov r36.zw, r35.zzzw
  dp3 r17.w, r14.zxyz, r36.xzwx
  dp3 r18.w, r16.zxyz, r36.xzwx
  add r18.w, -r36.y, r18.w
  ge r19.w, r18.w, l(0.000000)
  max r18.w, r10.z, |r18.w|
  movc r18.w, r19.w, r18.w, -r18.w
  max r17.w, -r17.w, l(0.00000010)
  div r17.w, r18.w, r17.w
  min r17.x, |r17.w|, r17.x
  mov r31.x, r27.w
  mov r31.yz, r28.zzwz
  add r31.xyz, r16.xyzx, r31.xyzx
  mad r31.xyz, r14.xyzx, r17.xxxx, r31.xyzx
  dp3 r17.w, r31.xyzx, r31.xyzx
  sqrt r17.w, r17.w
  div r17.x, r17.x, r17.w
  add r17.x, r17.x, r17.x
  sqrt r17.x, r17.x
  mad r17.x, r0.z, l(5.000000), r17.x
  add r17.x, r17.x, l(-0.844800)
  mov r24.y, r25.z
  mov r24.z, r26.x
  dp3 r32.x, r31.xyzx, r24.xyzx
  mov r33.xy, r25.xwxx
  mov r33.z, r26.w
  dp3 r32.y, r31.xyzx, r33.xyzx
  mov r26.x, r25.y
  dp3 r32.z, r31.xyzx, r26.xyzx
  ubfe r25.xy, l(6, 9, 0, 0), l(25, 16, 0, 0), r30.yyyy
  utof r32.w, r25.y
  sample_l_indexable(texturecubearray)(float,float,float,float) r25.yzw, r32.xyzw, t8.wxyz, s2, r17.x
  and r30.yzw, r25.yyzw, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
  ieq r30.yzw, r30.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
  or r17.x, r30.z, r30.y
  or r17.x, r30.w, r17.x
  movc r25.yzw, r17.xxxx, l(0,1.000000,1.000000,0), r25.yyzw
  dp3 r31.x, r16.xyzx, r24.xyzx
  dp3 r31.y, r16.xyzx, r33.xyzx
  dp3 r31.z, r16.xyzx, r26.xyzx
  mad_sat r27.xyz, r31.xyzx, r27.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mov r28.z, r29.x
  mad r27.xyz, r27.xyzx, r28.xyzx, r29.yzwy
  dp3 r32.x, r1.xyzx, r24.xyzx
  dp3 r32.y, r1.xyzx, r33.xyzx
  dp3 r32.z, r1.xyzx, r26.xyzx
  lt r24.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r32.xyzx
  movc r18.z, r24.x, l(0), l(0.500000)
  add r26.xyz, r18.xyzx, r27.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r26.xyz, r26.xyzx, t17.xyzw, s4, l(0.000000)
  movc r19.z, r24.y, l(0), l(0.500000)
  add r24.xyw, r19.xyxz, r27.xyxz
  sample_l_indexable(texture3d)(float,float,float,float) r24.xyw, r24.xywx, t18.xywz, s4, l(0.000000)
  movc r20.z, r24.z, l(0), l(0.500000)
  add r27.xyz, r20.xyzx, r27.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r27.xyz, r27.xyzx, t19.xyzw, s4, l(0.000000)
  mul r28.xyz, r32.xyzx, r32.xyzx
  sample_l_indexable(texturecubearray)(float,float,float,float) r29.xyz, r32.xyzw, t8.xyzw, s2, l(6.000000)
  and r30.yzw, r29.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
  ieq r30.yzw, r30.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
  or r17.x, r30.z, r30.y
  or r17.x, r30.w, r17.x
  movc r29.xyz, r17.xxxx, l(1.000000,1.000000,0,0), r29.xyzx
  mov r31.xyzw, r21.xyzw
  mov r30.yzw, r22.yyzw
  mov r17.x, r23.w
  mov r17.w, r11.w
  mov r18.z, r12.z
  loop 
    breakc_z r18.z
    firstbit_lo r18.w, r18.z
    ishl r18.w, l(1), r18.w
    and r19.z, r18.w, r18.z
    if_nz r19.z
      not r18.w, r18.w
      and r18.z, r18.w, r18.z
      if_nz r12.w
        mov r18.w, r13.y
        mov r32.xy, r15.zwzz
        mov r19.z, l(1)
        loop 
          ige r19.w, r19.z, r25.x
          breakc_nz r19.w
          iadd r19.w, r13.w, r19.z
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r19.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r19.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r19.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r19.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r19.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r38.xyzw, r19.w, l(80), t16.xyzw
          dp3 r19.w, r33.xyzx, r16.xyzx
          add_sat r19.w, r33.w, r19.w
          mul r19.w, r19.w, r32.x
          dp3 r20.z, r34.xyzx, r16.xyzx
          add_sat r20.z, r34.w, r20.z
          mul r19.w, r19.w, r20.z
          dp3 r20.z, r35.xyzx, r16.xyzx
          add_sat r20.z, r35.w, r20.z
          mul r19.w, r19.w, r20.z
          dp3 r20.z, r36.xyzx, r16.xyzx
          add_sat r20.z, r36.w, r20.z
          mul r19.w, r19.w, r20.z
          dp3 r20.z, r37.xyzx, r16.xyzx
          add_sat r20.z, r37.w, r20.z
          mul r19.w, r19.w, r20.z
          dp3 r20.z, r38.xyzx, r16.xyzx
          add_sat r20.z, r38.w, r20.z
          mul r32.x, r19.w, r20.z
          ushr r20.w, r18.w, l(2)
          ubfe r24.z, l(1), l(2), r18.w
          and r26.w, r20.w, l(2)
          max r27.w, r32.x, r32.y
          mad r19.w, -r19.w, r20.z, l(1.000000)
          mul r19.w, r19.w, r32.y
          movc r5.y, r26.w, r19.w, r27.w
          movc r32.xy, r24.zzzz, r32.xyxx, r5.xyxx
          iadd r19.z, r19.z, l(1)
          mov r18.w, r20.w
        endloop 
        mov_sat r32.y, r32.y
        mul r5.y, r13.z, r32.y
        lt r18.w, l(0.000000), r5.y
        if_nz r18.w
          iadd r18.w, r17.x, l(257)
          mad r33.z, r32.y, r13.z, r30.w
          mul r5.y, r30.x, r5.y
          mul r32.xzw, r5.yyyy, r28.xxyz
          mul r34.xyz, r24.xywx, r32.zzzz
          mad r34.xyz, r26.xyzx, r32.xxxx, r34.xyzx
          mad r32.xzw, r27.xxyz, r32.wwww, r34.xxyz
          mul r34.xyz, r29.xyzx, r32.xzwx
          dp3 r19.z, r34.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r34.xyz, r32.xzwx, r29.xyzx, r31.xyzx
          mul r19.w, r10.w, r19.z
          mul r32.xzw, r5.yyyy, r25.yyzw
          dp3 r5.y, r32.xzwx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r5.y, r10.w, r19.z, r5.y
          div r5.y, r19.w, r5.y
          mov r35.x, r31.w
          mov r35.yz, r30.yyzy
          mad r33.xyw, r32.zwzx, r5.yyyy, r35.yzyx
          mov r34.w, r33.w
        else 
          iadd r18.w, r17.x, l(1)
          mov r34.xyzw, r31.xyzw
          mov r33.xyz, r30.yzwy
        endif 
        mov r17.w, l(-1)
        mov r31.xyzw, r34.xyzw
        mov r30.yzw, r33.xxyz
        mov r17.x, r18.w
        break 
      endif 
    endif 
  endloop 
  if_nz r17.w
    mov r21.xyzw, r31.xyzw
    mov r22.yzw, r30.yyzw
    mov r23.w, r17.x
    mov r11.w, l(-1)
    break 
  endif 
  iadd r12.y, r12.y, l(32)
  mov r21.xyzw, r31.xyzw
  mov r22.yzw, r30.yyzw
  mov r23.w, r17.x
  mov r11.w, r17.w
endloop 
if_z r11.w
  iadd r5.x, cb2[0].y, -cb2[58].x
  and r5.y, r5.x, l(-32)
  iadd r11.w, -r5.y, r5.x
  and r12.y, cb2[0].y, l(-32)
  iadd r12.z, -r12.y, cb2[0].y
  mov r15.xy, l(0,0,0,0)
  mov r16.w, l(0)
  mov r17.yz, l(0,0,1.000000,0)
  mov r18.xy, l(0,0,0,0)
  mov r19.x, l(1.000000)
  mov r20.xy, l(0,0,0,0)
  mov r24.xy, l(0,0,0,0)
  mov r25.xyzw, r21.wxyz
  mov r26.xyz, r22.yzwy
  mov r26.w, r23.w
  mov r12.w, r5.y
  loop 
    uge r13.y, r12.w, cb2[0].y
    breakc_nz r13.y
    ushr r15.z, r12.w, l(5)
    iadd r16.xyz, r4.xyzx, r15.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r13.y, r16.xyzw, t7.yxzw
    ieq r13.z, r5.y, r12.w
    bfi r13.w, r11.w, l(0), l(0), r13.y
    movc r13.y, r13.z, r13.w, r13.y
    ieq r13.z, r12.y, r12.w
    ubfe r13.w, r12.z, l(0), r13.y
    movc r13.y, r13.z, r13.w, r13.y
    iadd r13.z, r12.w, cb2[0].x
    mov r27.xyzw, r25.yzwx
    mov r28.xyzw, r26.xyzw
    mov r13.w, r13.y
    loop 
      breakc_z r13.w
      firstbit_lo r15.z, r13.w
      ishl r15.w, l(1), r15.z
      and r16.x, r13.w, r15.w
      if_nz r16.x
        xor r13.w, r13.w, r15.w
        iadd r15.w, r13.z, r15.z
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r29.xyzw, r15.w, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r16.xy, r15.w, l(16), t11.xyxx
        add r29.xyz, r29.xyzx, -v7.xyzx
        mov r16.z, r29.w
        lt r16.xyz, |r29.xyzx|, r16.zxyz
        and r15.w, r16.y, r16.x
        and r15.w, r16.z, r15.w
        if_nz r15.w
          iadd r15.z, r12.w, r15.z
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r15.z, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r16.xy, r15.z, l(96), t15.xyxx
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r15.z, l(116), t15.zwxy
          add r31.xyz, -r29.yzwy, v7.xyzx
          and r15.w, r30.w, l(0x0000ffff)
          ubfe r16.z, l(6), l(25), r30.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r15.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r15.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r15.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r15.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r15.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r15.w, l(80), t16.xyzw
          dp3 r17.w, r32.xyzx, r31.xyzx
          add_sat r17.w, r32.w, r17.w
          dp3 r18.w, r33.xyzx, r31.xyzx
          add_sat r18.w, r33.w, r18.w
          mul r17.w, r17.w, r18.w
          dp3 r18.w, r34.xyzx, r31.xyzx
          add_sat r18.w, r34.w, r18.w
          mul r17.w, r17.w, r18.w
          dp3 r18.w, r35.xyzx, r31.xyzx
          add_sat r18.w, r35.w, r18.w
          mul r17.w, r17.w, r18.w
          dp3 r18.w, r36.xyzx, r31.xyzx
          add_sat r18.w, r36.w, r18.w
          mul r17.w, r17.w, r18.w
          dp3 r18.w, r37.xyzx, r31.xyzx
          add_sat r18.w, r37.w, r18.w
          mul r17.x, r17.w, r18.w
          and r17.w, r16.x, l(1)
          movc r17.xw, r17.wwww, r17.xxxy, r17.zzzx
          mov r18.w, r16.x
          mov r32.xy, r17.xwxx
          mov r19.z, l(1)
          loop 
            ige r19.w, r19.z, r16.z
            breakc_nz r19.w
            iadd r19.w, r15.w, r19.z
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r19.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r19.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r19.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r19.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r19.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r38.xyzw, r19.w, l(80), t16.xyzw
            dp3 r19.w, r33.xyzx, r31.xyzx
            add_sat r19.w, r33.w, r19.w
            mul r19.w, r19.w, r32.x
            dp3 r20.w, r34.xyzx, r31.xyzx
            add_sat r20.w, r34.w, r20.w
            mul r19.w, r19.w, r20.w
            dp3 r20.w, r35.xyzx, r31.xyzx
            add_sat r20.w, r35.w, r20.w
            mul r19.w, r19.w, r20.w
            dp3 r20.w, r36.xyzx, r31.xyzx
            add_sat r20.w, r36.w, r20.w
            mul r19.w, r19.w, r20.w
            dp3 r20.w, r37.xyzx, r31.xyzx
            add_sat r20.w, r37.w, r20.w
            mul r19.w, r19.w, r20.w
            dp3 r20.w, r38.xyzx, r31.xyzx
            add_sat r20.w, r38.w, r20.w
            mul r32.x, r19.w, r20.w
            ushr r24.w, r18.w, l(2)
            ubfe r29.w, l(1), l(2), r18.w
            and r31.w, r24.w, l(2)
            max r32.z, r32.x, r32.y
            mad r19.w, -r19.w, r20.w, l(1.000000)
            mul r19.w, r19.w, r32.y
            movc r19.y, r31.w, r19.w, r32.z
            movc r32.xy, r29.wwww, r32.xyxx, r19.xyxx
            iadd r19.z, r19.z, l(1)
            mov r18.w, r24.w
          endloop 
          mov_sat r32.y, r32.y
          mul r15.w, r16.y, r32.y
          lt r16.x, l(0.000000), r15.w
          if_nz r16.x
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r15.z, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r15.z, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r15.z, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r15.z, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r15.z, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r15.z, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xyzw, r15.z, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r40.xyzw, r15.z, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r41.xyzw, r15.z, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r42.xyzw, r15.z, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r43.xy, r15.z, l(212), t15.xyxx
            iadd r28.w, r28.w, l(257)
            mad r28.z, r32.y, r16.y, r28.z
            mul r15.z, r30.z, r15.w
            mov r30.z, r38.z
            dp3 r15.w, r14.xyzx, r30.xyzx
            dp3 r16.x, r31.xyzx, r30.xyzx
            add r16.x, -r38.w, r16.x
            ge r16.y, r16.x, l(0.000000)
            max r16.x, r10.z, |r16.x|
            movc r16.x, r16.y, r16.x, -r16.x
            max r15.w, -r15.w, l(0.00000010)
            div r15.w, r16.x, r15.w
            min r15.w, |r15.w|, l(131072.000000)
            mov r38.z, r39.z
            dp3 r16.x, r14.xyzx, r38.xyzx
            dp3 r16.y, r31.xyzx, r38.xyzx
            add r16.y, -r39.w, r16.y
            ge r16.z, r16.y, l(0.000000)
            max r16.y, r10.z, |r16.y|
            movc r16.y, r16.z, r16.y, -r16.y
            max r16.x, -r16.x, l(0.00000010)
            div r16.x, r16.y, r16.x
            min r15.w, r15.w, |r16.x|
            mov r39.z, r40.z
            dp3 r16.x, r14.xyzx, r39.xyzx
            dp3 r16.y, r31.xyzx, r39.xyzx
            add r16.y, -r40.w, r16.y
            ge r16.z, r16.y, l(0.000000)
            max r16.y, r10.z, |r16.y|
            movc r16.y, r16.z, r16.y, -r16.y
            max r16.x, -r16.x, l(0.00000010)
            div r16.x, r16.y, r16.x
            min r15.w, r15.w, |r16.x|
            mov r40.z, r41.z
            dp3 r16.x, r14.xyzx, r40.xyzx
            dp3 r16.y, r31.xyzx, r40.xyzx
            add r16.y, -r41.w, r16.y
            ge r16.z, r16.y, l(0.000000)
            max r16.y, r10.z, |r16.y|
            movc r16.y, r16.z, r16.y, -r16.y
            max r16.x, -r16.x, l(0.00000010)
            div r16.x, r16.y, r16.x
            min r15.w, r15.w, |r16.x|
            mov r41.z, r42.x
            dp3 r16.x, r14.xyzx, r41.xyzx
            dp3 r16.y, r31.xyzx, r41.xyzx
            add r16.y, -r42.y, r16.y
            ge r16.z, r16.y, l(0.000000)
            max r16.y, r10.z, |r16.y|
            movc r16.y, r16.z, r16.y, -r16.y
            max r16.x, -r16.x, l(0.00000010)
            div r16.x, r16.y, r16.x
            min r15.w, r15.w, |r16.x|
            mov r43.zw, r42.zzzw
            dp3 r16.x, r14.zxyz, r43.xzwx
            dp3 r16.y, r31.zxyz, r43.xzwx
            add r16.y, -r43.y, r16.y
            ge r16.z, r16.y, l(0.000000)
            max r16.y, r10.z, |r16.y|
            movc r16.y, r16.z, r16.y, -r16.y
            max r16.x, -r16.x, l(0.00000010)
            div r16.x, r16.y, r16.x
            min r15.w, r15.w, |r16.x|
            mov r16.x, r35.w
            mov r16.yz, r36.zzwz
            add r16.xyz, r31.xyzx, r16.xyzx
            mad r16.xyz, r14.xyzx, r15.wwww, r16.xyzx
            dp3 r17.x, r16.xyzx, r16.xyzx
            sqrt r17.x, r17.x
            div r15.w, r15.w, r17.x
            add r15.w, r15.w, r15.w
            sqrt r15.w, r15.w
            mad r15.w, r0.z, l(5.000000), r15.w
            add r15.w, r15.w, l(-0.844800)
            mov r29.y, r33.z
            mov r29.z, r34.x
            dp3 r38.x, r16.xyzx, r29.xyzx
            mov r30.xy, r33.xwxx
            mov r30.z, r34.w
            dp3 r38.y, r16.xyzx, r30.xyzx
            mov r34.x, r33.y
            dp3 r38.z, r16.xyzx, r34.xyzx
            ubfe r16.x, l(9), l(16), r30.w
            utof r38.w, r16.x
            sample_l_indexable(texturecubearray)(float,float,float,float) r16.xyz, r38.xyzw, t8.xyzw, s2, r15.w
            and r19.yzw, r16.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
            ieq r19.yzw, r19.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
            or r15.w, r19.z, r19.y
            or r15.w, r19.w, r15.w
            movc r16.xyz, r15.wwww, l(1.000000,1.000000,0,0), r16.xyzx
            dp3 r33.x, r31.xyzx, r29.xyzx
            dp3 r33.y, r31.xyzx, r30.xyzx
            dp3 r33.z, r31.xyzx, r34.xyzx
            mad_sat r19.yzw, r33.xxyz, r35.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
            mov r36.z, r37.x
            mad r19.yzw, r19.yyzw, r36.xxyz, r37.yyzw
            dp3 r38.x, r1.xyzx, r29.xyzx
            dp3 r38.y, r1.xyzx, r30.xyzx
            dp3 r38.z, r1.xyzx, r34.xyzx
            lt r29.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r38.xyzx
            movc r18.z, r29.x, l(0), l(0.500000)
            add r30.xyz, r18.xyzx, r19.yzwy
            sample_l_indexable(texture3d)(float,float,float,float) r30.xyz, r30.xyzx, t17.xyzw, s4, l(0.000000)
            mul r31.xyz, r38.xyzx, r38.xyzx
            mul r31.xyz, r15.zzzz, r31.xyzx
            movc r20.z, r29.y, l(0), l(0.500000)
            add r29.xyw, r19.yzyw, r20.xyxz
            sample_l_indexable(texture3d)(float,float,float,float) r29.xyw, r29.xywx, t18.xywz, s4, l(0.000000)
            mul r29.xyw, r31.yyyy, r29.xyxw
            mad r29.xyw, r30.xyxz, r31.xxxx, r29.xyxw
            movc r24.z, r29.z, l(0), l(0.500000)
            add r19.yzw, r19.yyzw, r24.xxyz
            sample_l_indexable(texture3d)(float,float,float,float) r19.yzw, r19.yzwy, t19.wxyz, s4, l(0.000000)
            mad r19.yzw, r19.yyzw, r31.zzzz, r29.xxyw
            sample_l_indexable(texturecubearray)(float,float,float,float) r29.xyz, r38.xyzw, t8.xyzw, s2, l(6.000000)
            and r30.xyz, r29.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
            ieq r30.xyz, r30.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
            or r15.w, r30.y, r30.x
            or r15.w, r30.z, r15.w
            movc r29.xyz, r15.wwww, l(1.000000,1.000000,0,0), r29.xyzx
            mul r30.xyz, r19.yzwy, r29.xyzx
            dp3 r15.w, r30.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r27.xyz, r19.yzwy, r29.xyzx, r27.xyzx
            mul r17.x, r10.w, r15.w
            mul r16.xyz, r15.zzzz, r16.xyzx
            dp3 r15.z, r16.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r15.z, r10.w, r15.w, r15.z
            div r15.z, r17.x, r15.z
            mov r29.x, r27.w
            mov r29.yz, r28.xxyx
            mad r16.xyz, r16.xyzx, r15.zzzz, r29.xyzx
            mov r27.w, r16.x
            mov r28.xy, r16.yzyy
          else 
            iadd r28.w, r28.w, l(1)
          endif 
        endif 
      endif 
    endloop 
    mov r25.xyzw, r27.wxyz
    mov r26.xyzw, r28.xyzw
    iadd r12.w, r12.w, l(32)
  endloop 
  mov r23.xyzw, r26.zxyw
  lt r12.y, r23.x, l(1.000000)
  if_nz r12.y
    mov r15.xy, l(0,0,0,0)
    mov r16.w, l(0)
    mov r17.yz, l(0,0,1.000000,0)
    mov r18.xy, l(0,0,0,0)
    mov r19.x, l(1.000000)
    mov r20.xy, l(0,0,0,0)
    mov r24.xy, l(0,0,0,0)
    mov r12.yzw, r25.yyzw
    mov r26.x, r25.x
    mov r26.yz, r23.yyzy
    mov r13.yzw, r23.xxwx
    mov r15.w, l(0)
    loop 
      uge r17.w, r15.w, r5.x
      breakc_nz r17.w
      ushr r15.z, r15.w, l(5)
      iadd r16.xyz, r4.xyzx, r15.xyzx
      ld_indexable(texture2darray)(uint,uint,uint,uint) r15.z, r16.xyzw, t7.yzxw
      ieq r16.x, r5.y, r15.w
      ubfe r16.y, r11.w, l(0), r15.z
      movc r15.z, r16.x, r16.y, r15.z
      iadd r16.x, r15.w, cb2[0].x
      mov r27.xyz, r12.yzwy
      mov r28.xyz, r26.xyzx
      mov r16.yz, r13.yyzy
      mov r17.w, r13.w
      mov r18.w, r15.z
      loop 
        breakc_z r18.w
        firstbit_lo r19.z, r18.w
        ishl r19.w, l(1), r19.z
        and r20.w, r18.w, r19.w
        if_nz r20.w
          xor r18.w, r18.w, r19.w
          iadd r19.w, r16.x, r19.z
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r29.xyzw, r19.w, l(0), t11.xyzw
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r30.xy, r19.w, l(16), t11.xyxx
          add r29.xyz, r29.xyzx, -v7.xyzx
          mov r30.z, r29.w
          lt r29.xyz, |r29.xyzx|, r30.zxyz
          and r19.w, r29.y, r29.x
          and r19.w, r29.z, r19.w
          if_nz r19.w
            iadd r19.z, r15.w, r19.z
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r19.z, l(0), t15.wxyz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xy, r19.z, l(96), t15.xyxx
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r19.z, l(116), t15.zwxy
            add r32.xyz, -r29.yzwy, v7.xyzx
            and r19.w, r31.w, l(0x0000ffff)
            ubfe r20.w, l(6), l(25), r31.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r19.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r19.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r19.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r19.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r19.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r38.xyzw, r19.w, l(80), t16.xyzw
            dp3 r22.w, r33.xyzx, r32.xyzx
            add_sat r22.w, r33.w, r22.w
            dp3 r24.w, r34.xyzx, r32.xyzx
            add_sat r24.w, r34.w, r24.w
            mul r22.w, r22.w, r24.w
            dp3 r24.w, r35.xyzx, r32.xyzx
            add_sat r24.w, r35.w, r24.w
            mul r22.w, r22.w, r24.w
            dp3 r24.w, r36.xyzx, r32.xyzx
            add_sat r24.w, r36.w, r24.w
            mul r22.w, r22.w, r24.w
            dp3 r24.w, r37.xyzx, r32.xyzx
            add_sat r24.w, r37.w, r24.w
            mul r22.w, r22.w, r24.w
            dp3 r24.w, r38.xyzx, r32.xyzx
            add_sat r24.w, r38.w, r24.w
            mul r17.x, r22.w, r24.w
            and r22.w, r30.x, l(1)
            movc r30.zw, r22.wwww, r17.xxxy, r17.zzzx
            mov r17.x, r30.x
            mov r33.xy, r30.zwzz
            mov r22.w, l(1)
            loop 
              ige r24.w, r22.w, r20.w
              breakc_nz r24.w
              iadd r24.w, r19.w, r22.w
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r24.w, l(0), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r24.w, l(16), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r24.w, l(32), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r24.w, l(48), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r38.xyzw, r24.w, l(64), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r39.xyzw, r24.w, l(80), t16.xyzw
              dp3 r24.w, r34.xyzx, r32.xyzx
              add_sat r24.w, r34.w, r24.w
              mul r24.w, r24.w, r33.x
              dp3 r26.w, r35.xyzx, r32.xyzx
              add_sat r26.w, r35.w, r26.w
              mul r24.w, r24.w, r26.w
              dp3 r26.w, r36.xyzx, r32.xyzx
              add_sat r26.w, r36.w, r26.w
              mul r24.w, r24.w, r26.w
              dp3 r26.w, r37.xyzx, r32.xyzx
              add_sat r26.w, r37.w, r26.w
              mul r24.w, r24.w, r26.w
              dp3 r26.w, r38.xyzx, r32.xyzx
              add_sat r26.w, r38.w, r26.w
              mul r24.w, r24.w, r26.w
              dp3 r26.w, r39.xyzx, r32.xyzx
              add_sat r26.w, r39.w, r26.w
              mul r33.x, r24.w, r26.w
              ushr r27.w, r17.x, l(2)
              ubfe r28.w, l(1), l(2), r17.x
              and r29.w, r27.w, l(2)
              max r32.w, r33.x, r33.y
              mad r24.w, -r24.w, r26.w, l(1.000000)
              mul r24.w, r24.w, r33.y
              movc r19.y, r29.w, r24.w, r32.w
              movc r33.xy, r28.wwww, r33.xyxx, r19.xyxx
              iadd r22.w, r22.w, l(1)
              mov r17.x, r27.w
            endloop 
            add_sat r17.x, -r17.w, r33.y
            mul r19.y, r30.y, r17.x
            lt r19.w, l(0.000000), r19.y
            if_nz r19.w
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r19.z, l(16), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r19.z, l(32), t15.yxwz
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r19.z, l(48), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r19.z, l(64), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r19.z, l(80), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xyzw, r19.z, l(132), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r40.xyzw, r19.z, l(148), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r41.xyzw, r19.z, l(164), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r42.xyzw, r19.z, l(180), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r43.xyzw, r19.z, l(196), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r44.xy, r19.z, l(212), t15.xyxx
              iadd r16.z, r16.z, l(257)
              mad r16.y, r17.x, r30.y, r16.y
              mul r17.x, r31.z, r19.y
              mov r31.z, r39.z
              dp3 r19.y, r14.xyzx, r31.xyzx
              dp3 r19.z, r32.xyzx, r31.xyzx
              add r19.z, -r39.w, r19.z
              ge r19.w, r19.z, l(0.000000)
              max r19.z, r10.z, |r19.z|
              movc r19.z, r19.w, r19.z, -r19.z
              max r19.y, -r19.y, l(0.00000010)
              div r19.y, r19.z, r19.y
              min r19.y, |r19.y|, l(131072.000000)
              mov r39.z, r40.z
              dp3 r19.z, r14.xyzx, r39.xyzx
              dp3 r19.w, r32.xyzx, r39.xyzx
              add r19.w, -r40.w, r19.w
              ge r20.w, r19.w, l(0.000000)
              max r19.w, r10.z, |r19.w|
              movc r19.w, r20.w, r19.w, -r19.w
              max r19.z, -r19.z, l(0.00000010)
              div r19.z, r19.w, r19.z
              min r19.y, |r19.z|, r19.y
              mov r40.z, r41.z
              dp3 r19.z, r14.xyzx, r40.xyzx
              dp3 r19.w, r32.xyzx, r40.xyzx
              add r19.w, -r41.w, r19.w
              ge r20.w, r19.w, l(0.000000)
              max r19.w, r10.z, |r19.w|
              movc r19.w, r20.w, r19.w, -r19.w
              max r19.z, -r19.z, l(0.00000010)
              div r19.z, r19.w, r19.z
              min r19.y, |r19.z|, r19.y
              mov r41.z, r42.z
              dp3 r19.z, r14.xyzx, r41.xyzx
              dp3 r19.w, r32.xyzx, r41.xyzx
              add r19.w, -r42.w, r19.w
              ge r20.w, r19.w, l(0.000000)
              max r19.w, r10.z, |r19.w|
              movc r19.w, r20.w, r19.w, -r19.w
              max r19.z, -r19.z, l(0.00000010)
              div r19.z, r19.w, r19.z
              min r19.y, |r19.z|, r19.y
              mov r42.z, r43.x
              dp3 r19.z, r14.xyzx, r42.xyzx
              dp3 r19.w, r32.xyzx, r42.xyzx
              add r19.w, -r43.y, r19.w
              ge r20.w, r19.w, l(0.000000)
              max r19.w, r10.z, |r19.w|
              movc r19.w, r20.w, r19.w, -r19.w
              max r19.z, -r19.z, l(0.00000010)
              div r19.z, r19.w, r19.z
              min r19.y, |r19.z|, r19.y
              mov r44.zw, r43.zzzw
              dp3 r19.z, r14.zxyz, r44.xzwx
              dp3 r19.w, r32.zxyz, r44.xzwx
              add r19.w, -r44.y, r19.w
              ge r20.w, r19.w, l(0.000000)
              max r19.w, r10.z, |r19.w|
              movc r19.w, r20.w, r19.w, -r19.w
              max r19.z, -r19.z, l(0.00000010)
              div r19.z, r19.w, r19.z
              min r19.y, |r19.z|, r19.y
              mov r30.x, r36.w
              mov r30.yz, r37.zzwz
              add r30.xyz, r32.xyzx, r30.xyzx
              mad r30.xyz, r14.xyzx, r19.yyyy, r30.xyzx
              dp3 r19.z, r30.xyzx, r30.xyzx
              sqrt r19.z, r19.z
              div r19.y, r19.y, r19.z
              add r19.y, r19.y, r19.y
              sqrt r19.y, r19.y
              mad r19.y, r0.z, l(5.000000), r19.y
              add r19.y, r19.y, l(-0.844800)
              mov r29.y, r34.z
              mov r29.z, r35.x
              dp3 r39.x, r30.xyzx, r29.xyzx
              mov r31.xy, r34.xwxx
              mov r31.z, r35.w
              dp3 r39.y, r30.xyzx, r31.xyzx
              mov r35.x, r34.y
              dp3 r39.z, r30.xyzx, r35.xyzx
              ubfe r19.z, l(9), l(16), r31.w
              utof r39.w, r19.z
              sample_l_indexable(texturecubearray)(float,float,float,float) r19.yzw, r39.xyzw, t8.wxyz, s2, r19.y
              and r30.xyz, r19.yzwy, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
              ieq r30.xyz, r30.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
              or r20.w, r30.y, r30.x
              or r20.w, r30.z, r20.w
              movc r19.yzw, r20.wwww, l(0,1.000000,1.000000,0), r19.yyzw
              dp3 r30.x, r32.xyzx, r29.xyzx
              dp3 r30.y, r32.xyzx, r31.xyzx
              dp3 r30.z, r32.xyzx, r35.xyzx
              mad_sat r30.xyz, r30.xyzx, r36.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
              mov r37.z, r38.x
              mad r30.xyz, r30.xyzx, r37.xyzx, r38.yzwy
              dp3 r39.x, r1.xyzx, r29.xyzx
              dp3 r39.y, r1.xyzx, r31.xyzx
              dp3 r39.z, r1.xyzx, r35.xyzx
              lt r29.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r39.xyzx
              movc r18.z, r29.x, l(0), l(0.500000)
              add r31.xyz, r18.xyzx, r30.xyzx
              sample_l_indexable(texture3d)(float,float,float,float) r31.xyz, r31.xyzx, t17.xyzw, s4, l(0.000000)
              mul r32.xyz, r39.xyzx, r39.xyzx
              mul r32.xyz, r17.xxxx, r32.xyzx
              movc r20.z, r29.y, l(0), l(0.500000)
              add r29.xyw, r20.xyxz, r30.xyxz
              sample_l_indexable(texture3d)(float,float,float,float) r29.xyw, r29.xywx, t18.xywz, s4, l(0.000000)
              mul r29.xyw, r32.yyyy, r29.xyxw
              mad r29.xyw, r31.xyxz, r32.xxxx, r29.xyxw
              movc r24.z, r29.z, l(0), l(0.500000)
              add r30.xyz, r24.xyzx, r30.xyzx
              sample_l_indexable(texture3d)(float,float,float,float) r30.xyz, r30.xyzx, t19.xyzw, s4, l(0.000000)
              mad r29.xyz, r30.xyzx, r32.zzzz, r29.xywx
              sample_l_indexable(texturecubearray)(float,float,float,float) r30.xyz, r39.xyzw, t8.xyzw, s2, l(6.000000)
              and r31.xyz, r30.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
              ieq r31.xyz, r31.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
              or r18.z, r31.y, r31.x
              or r18.z, r31.z, r18.z
              movc r30.xyz, r18.zzzz, l(1.000000,1.000000,0,0), r30.xyzx
              mul r31.xyz, r29.xyzx, r30.xyzx
              dp3 r18.z, r31.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
              mad r27.xyz, r29.xyzx, r30.xyzx, r27.xyzx
              mul r20.z, r10.w, r18.z
              mul r19.yzw, r17.xxxx, r19.yyzw
              dp3 r17.x, r19.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
              mad r17.x, r10.w, r18.z, r17.x
              div r17.x, r20.z, r17.x
              mad r28.xyz, r19.yzwy, r17.xxxx, r28.xyzx
            else 
              iadd r16.z, r16.z, l(1)
            endif 
          endif 
        endif 
      endloop 
      mov r12.yzw, r27.xxyz
      mov r26.xyz, r28.xyzx
      mov r13.yz, r16.yyzy
      iadd r15.w, r15.w, l(32)
    endloop 
    mov r25.xyz, r26.xyzx
    mov r23.yw, r13.yyyz
    mov r23.xw, r23.yyyw
  else 
    mov r12.yzw, r25.yyzw
    mov r25.yz, r23.yyzy
  endif 
  max r0.z, r23.x, l(1.000000)
  rcp r0.z, r0.z
  mov_sat r23.x, r23.x
  mul r21.xyz, r0.zzzz, r12.yzwy
  mul r22.xyz, r0.zzzz, r25.xyzx
  lt r5.x, r23.x, l(0.990000)
  if_nz r5.x
    iadd r23.w, r23.w, l(256)
    add r5.x, -r23.x, l(1.000000)
    mul r5.y, r5.x, cb2[19].x
    add r13.yzw, v7.xxyz, -cb2[35].xxyz
    mul r15.x, r13.y, cb2[35].w
    mul r15.yz, r13.zzwz, cb2[36].xxyx
    add_sat r13.yzw, r15.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
    mul r15.xy, r13.yzyy, cb2[36].zwzz
    mul r15.z, r13.w, cb2[37].x
    add r13.yzw, r15.xxyz, cb2[37].yyzw
    lt r15.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r1.xyzx
    movc r15.xyz, r15.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
    mov r15.w, l(0)
    add r16.xyz, r13.yzwy, r15.wwxw
    sample_l_indexable(texture3d)(float,float,float,float) r16.xyz, r16.xyzx, t17.xyzw, s4, l(0.000000)
    mul r17.xyz, r1.xyzx, r1.xyzx
    mul r17.xyz, r5.yyyy, r17.xyzx
    add r18.xyz, r13.yzwy, r15.wwyw
    sample_l_indexable(texture3d)(float,float,float,float) r18.xyz, r18.xyzx, t18.xyzw, s4, l(0.000000)
    mul r18.xyz, r17.yyyy, r18.xyzx
    mad r16.xyz, r16.xyzx, r17.xxxx, r18.xyzx
    add r13.yzw, r13.yyzw, r15.wwwz
    sample_l_indexable(texture3d)(float,float,float,float) r13.yzw, r13.yzwy, t19.wxyz, s4, l(0.000000)
    mad r13.yzw, r13.yyzw, r17.zzzz, r16.xxyz
    mov r1.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r15.xyz, r1.xyzw, t8.xyzw, s2, l(6.000000)
    mul r13.yzw, r13.yyzw, r15.xxyz
    dp3 r1.w, r13.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
    mad r21.xyz, r12.yzwy, r0.zzzz, r13.yzwy
    mov r14.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r12.yzw, r14.xyzw, t8.wxyz, s2, r9.w
    mad r0.z, cb2[19].x, r5.x, -r1.w
    mad r0.z, r6.y, r0.z, r1.w
    mad r22.xyz, r12.yzwy, r0.zzzz, r22.xyzx
  endif 
else 
  mov r22.x, r21.w
endif 
if_nz cb0[28].z
  dp3 r0.z, r2.yzwy, r1.xyzx
  add r0.z, r0.z, r0.z
  mad r12.yzw, r1.xxyz, -r0.zzzz, r2.yyzw
  dp3 r0.z, r2.yzwy, -r1.xyzx
  add r0.z, r0.z, r0.z
  mad r13.yzw, r1.xxyz, r0.zzzz, r2.yyzw
  movc r12.yzw, v10.xxxx, r12.yyzw, r13.yyzw
  if_nz cb0[28].w
    mul r13.yzw, v7.yyyy, cb1[5].xxyz
    mad r13.yzw, v7.xxxx, cb1[4].xxyz, r13.yyzw
    mad r13.yzw, v7.zzzz, cb1[6].xxyz, r13.yyzw
    mul r14.xyz, r12.yzwy, cb0[21].zzzz
    mul r15.xyz, r14.yyyy, cb1[5].xyzx
    mad r14.xyw, r14.xxxx, cb1[4].xyxz, r15.xyxz
    mad r14.xyz, r14.zzzz, cb1[6].xyzx, r14.xywx
    min r0.z, cb0[21].x, l(1000.000000)
    mad r13.yzw, r14.xxyz, l(0.000000, 10.000000, 10.000000, 10.000000), r13.yyzw
    div r0.z, r0.z, cb0[21].z
    mov r15.xyz, r22.xyzx
    mov r16.xyz, r13.yzwy
    mov r1.w, l(0)
    loop 
      itof r5.x, r1.w
      ge r5.x, r5.x, r0.z
      breakc_nz r5.x
      add r16.xyz, r14.xyzx, r16.xyzx
      mul r17.xyz, r16.yyyy, cb1[1].xywx
      mad r17.xyz, r16.xxxx, cb1[0].xywx, r17.xyzx
      mad r17.xyz, r16.zzzz, cb1[2].xywx, r17.xyzx
      add r17.xyz, r17.xyzx, cb1[3].xywx
      max r5.x, |r17.y|, |r17.x|
      lt r5.x, r17.z, r5.x
      if_nz r5.x
        break 
      endif 
      div r5.xy, r17.xyxx, r17.zzzz
      mad r5.xy, r5.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      sample_l_indexable(texture2d)(float,float,float,float) r5.x, r5.xyxx, t26.xyzw, s8, l(1.000000)
      lt r5.y, |r5.x|, r16.z
      ge r6.y, |r5.x|, v0.w
      and r5.y, r5.y, r6.y
      if_nz r5.y
        add r5.x, -|r5.x|, r16.z
        mul r5.x, r5.x, cb0[21].w
        mad r17.xyz, -r5.xxxx, r14.xyzx, r16.xyzx
        mul r18.xyz, r17.yyyy, cb1[1].xywx
        mad r17.xyw, r17.xxxx, cb1[0].xyxw, r18.xyxz
        mad r17.xyz, r17.zzzz, cb1[2].xywx, r17.xywx
        add r17.xyz, r17.xyzx, cb1[3].xywx
        div r5.xy, r17.xyxx, r17.zzzz
        mad r5.xy, r5.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r17.xyz, r5.xyxx, t30.xyzw, s8, l(0.000000)
        mul r17.xyz, r17.xyzx, cb1[85].xxxx
        mov r15.xyz, r17.xyzx
        break 
      endif 
      iadd r1.w, r1.w, l(1)
    endloop 
    mov r22.xyz, r15.xyzx
  else 
    mul r0.z, r4.w, cb0[21].y
    mad r12.yzw, r12.yyzw, r0.zzzz, v7.xxyz
    mul r13.yzw, r12.zzzz, cb1[9].xxyw
    mad r13.yzw, r12.yyyy, cb1[8].xxyw, r13.yyzw
    mad r12.yzw, r12.wwww, cb1[10].xxyw, r13.yyzw
    add r12.yzw, r12.yyzw, cb1[11].xxyw
    div r5.xy, r12.yzyy, r12.wwww
    max r0.z, |r5.y|, |r5.x|
    mad r5.xy, r5.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r1.w, r5.xyxx, t26.yzwx, s8, l(0.000000)
    ge r1.w, |r1.w|, v0.w
    lt r0.z, r0.z, l(1.000000)
    and r0.z, r0.z, r1.w
    sample_indexable(texture2d)(float,float,float,float) r12.yzw, r5.xyxx, t30.wxyz, s8
    if_nz r0.z
      mul r22.xyz, r12.yzwy, cb1[85].xxxx
    endif 
  endif 
endif 
dp3 r0.z, r1.xyzx, cb2[17].xyzx
mov_sat r1.w, r0.z
movc r5.x, cb0[29].z, |r0.z|, r1.w
ge r5.x, l(0.000000), r5.x
if_nz r5.x
  mov r5.y, l(0)
endif 
if_z r5.x
  mul r12.yzw, v7.yyyy, cb2[29].xxyz
  mad r12.yzw, v7.xxxx, cb2[28].xxyz, r12.yyzw
  mad r12.yzw, v7.zzzz, cb2[30].xxyz, r12.yyzw
  add r12.yzw, r12.yyzw, cb2[31].xxyz
  add r5.x, r12.w, -cb2[17].w
  mad r5.x, -r5.x, l(0.00006104), l(1.000000)
  mov_sat r6.y, r5.x
  eq r6.y, r5.x, r6.y
  if_nz r6.y
    mov r6.y, l(0)
    mov r9.w, l(0)
    loop 
      ge r10.z, r6.y, l(3.000000)
      breakc_nz r10.z
      ftou r10.z, r6.y
      add r13.yz, r12.yyzy, -cb2[r10.z + 20].xxyx
      max r10.w, |r13.z|, |r13.y|
      mul r9.w, r10.w, cb2[r10.z + 20].z
      lt r10.z, r9.w, l(1.000000)
      if_nz r10.z
        break 
      endif 
      add r6.y, r6.y, l(1.000000)
      mov r9.w, l(0)
    endloop 
  else 
    mov r6.y, l(3.000000)
    mov r9.w, l(0)
  endif 
  ge r10.z, r6.y, l(3.000000)
  if_nz r10.z
    mul r13.yzw, l(0.000000, 128.000000, 0.500000, 0.500000), cb2[27].zzxy
    rcp r14.xz, r13.yyyy
    mov r14.y, -r14.z
    mad r13.yzw, r12.yyzy, r14.xxyz, r13.zzwz
    add r14.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r13.yzw, r13.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r13.yzw, r14.xxyz, r13.yyzw
    mul r14.xy, r13.wzww, cb2[32].xxxx
    round_ni r14.xy, r14.xyxx
    mul r10.w, r14.y, cb2[27].x
    mad r10.w, r10.w, cb2[32].x, r14.x
    ftou r10.w, r10.w
    iadd r10.w, r10.w, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r11.w, r10.w, l(0), t23.xxxx
    and r14.x, r11.w, l(0x40000000)
    ishl r14.y, r11.w, l(2)
    if_z r14.x
      and r14.x, r11.w, l(0x01ffffff)
      iadd r15.x, r10.w, r14.x
      ushr r10.w, r11.w, l(25)
      utof r10.w, r10.w
      mul r13.yzw, r10.wwww, r13.yyzw
      frc r13.yzw, r13.yyzw
      mul r13.yzw, r13.yyzw, l(0.000000, 128.000000, 128.000000, 128.000000)
      ftou r13.yzw, r13.yyzw
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.z, r15.x, l(0), t23.xxxx
      ushr r14.xz, r13.wwzw, l(6, 0, 6, 0)
      and r10.w, r15.z, l(0xc0000000)
      iadd r11.w, r15.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r11.w, r11.w, l(0), t23.xxxx
      movc r11.w, r14.z, r15.z, r11.w
      ushr r14.z, r11.w, l(13)
      movc r11.w, r14.x, r14.z, r11.w
      and r11.w, r11.w, l(8191)
      iadd r16.x, r11.w, r15.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.z, r16.x, l(0), t23.xxxx
      mov r15.y, l(0)
      mov r16.y, l(1)
      movc r14.xzw, r10.wwww, r15.xxyz, r16.xxyz
      movc r16.yz, r10.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r17.xy, r13.wzww, r16.yyyy
      and r17.xy, r17.xyxx, l(1, 1, 0, 0)
      and r11.w, r14.w, l(0xc0000000)
      iadd r15.w, r14.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.w, r15.w, l(0), t23.xxxx
      movc r15.w, r17.y, r14.w, r15.w
      ushr r16.y, r15.w, l(13)
      movc r15.w, r17.x, r16.y, r15.w
      and r15.w, r15.w, l(8191)
      iadd r16.x, r14.x, r15.w
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.w, r16.x, l(0), t23.xxxx
      movc r14.xzw, r11.wwww, r14.xxzw, r16.xxzw
      movc r14.xzw, r10.wwww, r15.xxyz, r14.xxzw
      and r10.w, r14.w, l(0xc0000000)
      if_z r10.w
        iadd r10.w, -r14.z, l(6)
        ushr r15.xy, r13.wzww, r10.wwww
        or r10.w, r14.w, l(0x40000000)
        bfi r11.w, l(1), l(1), r15.y, l(0)
        bfi r11.w, l(1), l(0), r15.x, r11.w
        imul null, r11.w, r11.w, l(10)
        ushr r10.w, r10.w, r11.w
        and r10.w, r10.w, l(1023)
        iadd r15.x, r10.w, r14.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.w, r15.x, l(0), t23.xxxx
        iadd r15.yz, r14.zzzz, l(0, 1, 2, 0)
        iadd r10.w, -r15.y, l(6)
        ushr r16.xy, r13.wzww, r10.wwww
        and r10.w, r15.w, l(0xc0000000)
        or r11.w, r15.w, l(0x40000000)
        bfi r14.z, l(1), l(1), r16.y, l(0)
        bfi r14.z, l(1), l(0), r16.x, r14.z
        imul null, r14.z, r14.z, l(10)
        ushr r11.w, r11.w, r14.z
        and r11.w, r11.w, l(1023)
        iadd r16.x, r11.w, r15.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.z, r16.x, l(0), t23.xxxx
        mov r16.y, r15.z
        movc r16.xyz, r10.wwww, r15.xywx, r16.xyzx
        iadd r11.w, -r16.y, l(6)
        ushr r15.yz, r13.wwzw, r11.wwww
        and r11.w, r16.z, l(0xc0000000)
        or r14.z, r16.z, l(0x40000000)
        bfi r15.z, l(1), l(1), r15.z, l(0)
        bfi r15.y, l(1), l(0), r15.y, r15.z
        imul null, r15.y, r15.y, l(10)
        ushr r14.z, r14.z, r15.y
        and r14.z, r14.z, l(1023)
        iadd r17.x, r14.z, r16.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.y, r17.x, l(0), t23.xxxx
        movc r15.yz, r11.wwww, r16.xxzx, r17.xxyx
        movc r14.xw, r10.wwww, r15.xxxw, r15.yyyz
      endif 
      and r10.w, r14.w, l(0xc0000000)
      if_z r10.w
        ubfe r11.w, l(14), l(15), r14.w
        utof r11.w, r11.w
        mul r11.w, r11.w, cb2[27].w
        mul r11.w, r11.w, l(0.00006104)
        and r15.xy, r14.wwww, l(0x00007fff, 0x20000000, 0, 0)
        utof r14.z, r15.x
        mul r14.z, r14.z, cb2[27].w
        mul r14.z, r14.z, l(0.00003052)
        and r15.x, r13.z, l(3)
        iadd r15.x, r14.x, r15.x
        iadd r15.x, r15.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.x, r15.x, l(0), t23.xxxx
        bfi r16.xyz, l(2, 2, 1, 0), l(3, 1, 4, 0), r13.yzwy, l(0, 0, 0, 0)
        ushr r13.y, r15.x, r16.x
        and r13.y, r13.y, l(255)
        utof r13.y, r13.y
        mul r13.y, r14.z, r13.y
        mad r13.y, r13.y, l(0.00392157), r11.w
        iadd r13.z, r16.y, l(1)
        ubfe r13.w, l(1), l(1), r13.w
        iadd r13.z, r13.w, r13.z
        iadd r13.z, r13.z, r14.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r13.z, r13.z, l(0), t23.xxxx
        ushr r13.z, r13.z, r16.z
        and r13.z, r13.z, l(0x0000ffff)
        utof r13.z, r13.z
        mul r13.z, r14.z, r13.z
        mad r11.w, r13.z, l(0.00001526), r11.w
        movc r14.y, r15.y, r13.y, r11.w
      else 
        and r11.w, r14.w, l(0x80000000)
        iadd r13.y, r14.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r13.y, r13.y, l(0), t23.xxxx
        movc r11.w, r11.w, r13.y, l(0)
        ishl r13.y, r14.w, l(2)
        ushr r13.z, r11.w, l(16)
        f16tof32 r13.z, r13.z
        and r11.w, r11.w, l(0x0000ffff)
        f16tof32 r11.w, r11.w
        mad r13.y, r12.y, r13.z, r13.y
        mad r11.w, r12.z, r11.w, r13.y
        movc r14.y, r10.w, r11.w, r14.y
      endif 
    endif 
    mad r10.w, -cb2[27].z, l(2.000000), r12.w
    lt r10.w, r14.y, r10.w
    movc r5.y, r10.w, l(0), l(1.000000)
  endif 
  if_z r10.z
    if_z cb2[58].y
      ftou r10.z, r6.y
      add r13.yz, r12.yyzy, -cb2[r10.z + 20].xxyx
      mul r10.zw, r13.yyyz, cb2[r10.z + 20].zzzz
      mad r14.xy, r10.zwzz, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r10.z, cb2[26].y
      add r14.z, r6.y, r10.z
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.z, r14.xyzx, t13.xxxx, s13, r5.x
      sample_l_indexable(texture2darray)(float,float,float,float) r10.w, r14.xyzx, t31.yzwx, s0, l(0.000000)
      add r10.z, r10.w, r10.z
      add_sat r10.z, r10.z, l(-1.000000)
      mul r10.w, r10.z, r10.z
      mul r5.y, r10.z, r10.w
    endif 
    if_nz cb2[58].y
      mov r14.x, -r10.x
      ftou r10.z, r6.y
      add r6.y, r6.y, l(1.000000)
      min r6.y, r6.y, l(2.000000)
      ftou r6.y, r6.y
      add r9.w, -r9.w, l(1.000000)
      mul r9.w, r9.w, l(28.000000)
      ftou r9.w, r9.w
      add r13.yz, r12.yyzy, -cb2[r10.z + 20].xxyx
      mul r13.yz, r13.yyzy, cb2[r10.z + 20].zzzz
      mad r13.yz, r13.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      add r12.yz, r12.yyzy, -cb2[r6.y + 20].xxyx
      mul r12.yz, r12.yyzy, cb2[r6.y + 20].zzzz
      mad r12.yz, r12.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      mov r14.y, r11.x
      mov r14.z, r10.x
      mov r10.w, l(0)
      mov r11.w, l(0)
      loop 
        uge r12.w, r11.w, l(8)
        breakc_nz r12.w
        ult r12.w, r9.w, r11.w
        movc r15.xy, r12.wwww, r12.yzyy, r13.yzyy
        movc r13.w, r12.w, cb2[r6.y + 20].w, cb2[r10.z + 20].w
        movc r12.w, r12.w, r6.y, r10.z
        dp2 r16.x, icb[r11.w + 0].yxyy, r14.xyxx
        dp2 r16.y, icb[r11.w + 0].yxyy, r14.yzyy
        mad r15.xy, r16.xyxx, r13.wwww, r15.xyxx
        iadd r12.w, r12.w, cb2[26].y
        utof r15.z, r12.w
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.w, r15.xyzx, t13.xxxx, s13, r5.x
        sample_l_indexable(texture2darray)(float,float,float,float) r13.w, r15.xyzx, t31.yzwx, s0, l(0.000000)
        add r12.w, r12.w, r13.w
        add_sat r12.w, r12.w, l(-1.000000)
        mad r10.w, r12.w, l(0.125000), r10.w
        iadd r11.w, r11.w, l(1)
      endloop 
      mul r5.x, r10.w, r10.w
      mul r5.y, r10.w, r5.x
    endif 
  endif 
endif 
and r5.x, cb2[53].x, l(0x0000ffff)
ult r6.y, l(0), r5.x
lt r9.w, l(0.000000), r5.y
and r6.y, r6.y, r9.w
if_nz r6.y
  iadd r5.x, r5.x, cb2[0].x
  iadd r5.x, r5.x, l(-1)
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r6.y, r5.x, l(52), t12.xxxx
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.xyzw, r5.x, l(68), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r5.x, l(84), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r5.x, l(100), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r5.x, l(116), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r5.x, l(132), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.xyzw, r5.x, l(148), t12.xyzw
  mad r9.w, |r0.z|, l(-0.200000), l(0.400000)
  lt r0.z, r0.z, l(0.000000)
  and r0.z, r0.z, r6.z
  movc r0.z, r0.z, -r9.w, r9.w
  mad r20.xyz, r1.xyzx, r0.zzzz, v7.xyzx
  mov r20.w, l(1.000000)
  dp4 r14.x, r14.xyzw, r20.xyzw
  dp4 r14.y, r15.xyzw, r20.xyzw
  dp4 r0.z, r16.xyzw, r20.xyzw
  dp4 r9.w, r17.xyzw, r20.xyzw
  lt r10.z, r9.w, r0.z
  div r12.yz, r14.xxyx, r9.wwww
  mad r12.yz, r12.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
  add r12.yz, r19.zzwz, r12.yyzy
  mul r12.yz, r19.xxyx, r12.yyzy
  div r13.yz, r6.yyyy, r18.xxzx
  add r14.xy, -r13.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
  ge r14.xy, r12.yzyy, r14.xyxx
  ge r13.yz, r13.yyzy, r12.yyzy
  or r13.yz, r13.yyzy, r14.xxyx
  or r10.w, r13.z, r13.y
  or r10.z, r10.z, r10.w
  if_z r10.z
    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r10.z, r5.x, l(28), t12.xxxx
    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.yz, r5.x, l(164), t12.xxyx
    mov_sat r12.yz, r12.yyzy
    mad r14.xy, r12.yzyy, r18.xzxx, r18.ywyy
    mul r5.x, r9.w, r13.z
    mad r0.z, r13.y, r9.w, r0.z
    div r0.z, r0.z, r5.x
    max r0.z, r0.z, l(0.00006104)
    and r5.x, r10.z, l(0x0000ffff)
    if_nz cb2[58].y
      mov r15.x, -r10.x
      utof r16.z, r5.x
      mov r15.y, r11.x
      mov r15.z, r10.x
      mov r9.w, l(0)
      mov r10.z, l(0)
      loop 
        ige r10.w, r10.z, l(8)
        breakc_nz r10.w
        dp2 r17.x, icb[r10.z + 0].yxyy, r15.xyxx
        dp2 r17.y, icb[r10.z + 0].yxyy, r15.yzyy
        mad r16.xy, r17.xyxx, r6.yyyy, r14.xyxx
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.w, r16.xyzx, t9.xxxx, s13, r0.z
        mad r9.w, r10.w, l(0.125000), r9.w
        iadd r10.z, r10.z, l(1)
      endloop 
    else 
      utof r14.z, r5.x
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r9.w, r14.xyzx, t9.xxxx, s13, r0.z
    endif 
    mul r0.z, r9.w, r9.w
    mul r0.z, r9.w, r0.z
  else 
    mov r0.z, l(1.000000)
  endif 
  mul r5.y, r0.z, r5.y
endif 
lt r0.z, l(0.000000), r1.w
lt r5.x, l(0.000000), r5.y
if_nz r5.x
  if_nz cb2[23].x
    mov r3.w, l(1.000000)
    dp4 r5.x, cb2[24].xyzw, r3.xyzw
    dp4 r3.x, cb2[25].xyzw, r3.xyzw
    frc r14.x, r5.x
    frc r14.y, r3.x
    iadd r3.x, l(-1), cb2[23].x
    utof r14.z, r3.x
    sample_l_indexable(texture2darray)(float,float,float,float) r3.xyz, r14.xyzx, t20.xyzw, s2, l(0.000000)
    add r3.xyz, r3.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
    mad r3.xyz, cb2[23].yyyy, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mul r3.xyz, r3.xyzx, cb2[18].xyzx
  else 
    mov r3.xyz, cb2[18].xyzx
  endif 
  mul r3.xyz, r3.xyzx, r5.yyyy
  add r3.w, r0.y, r1.w
  div r3.w, r1.w, r3.w
  mad r12.yzw, r3.xxyz, r3.wwww, r21.xxyz
  mad r13.yzw, -v7.xxyz, r8.wwww, cb2[17].xxyz
  dp3 r3.w, r13.yzwy, r13.yzwy
  rsq r3.w, r3.w
  mul r13.yzw, r3.wwww, r13.yyzw
  dp3_sat r3.w, r1.xyzx, r13.yzwy
  dp3_sat r5.x, r13.yzwy, r9.xyzx
  mul r5.y, r3.w, r3.w
  mad r10.zw, r5.yyyy, cb0[15].xxxz, l(0.000000, 0.000000, 1.000000, 1.000000)
  mul r10.zw, r10.zzzw, r10.zzzw
  div r10.zw, cb0[15].yyyw, r10.zzzw
  mul r10.zw, r3.wwww, r10.zzzw
  mul r3.w, r5.x, l(4.000000)
  div r5.xy, r10.zwzz, r3.wwww
  mul r5.xy, r5.xyxx, cb0[16].xyxx
  mul r13.yzw, r3.xxyz, r5.xxxx
  mad r13.yzw, r13.yyzw, r1.wwww, r22.xxyz
  mul r3.xyz, r3.xyzx, r5.yyyy
  mad r3.xyz, r3.xyzx, r1.wwww, r13.yzwy
  mov r5.xy, l(1,1,0,0)
else 
  mov r12.yzw, r21.xxyz
  mov r3.xyz, r22.xyzx
  mov r5.xy, l(0,0,0,0)
endif 
movc r12.yzw, r0.zzzz, r12.yyzw, r21.xxyz
movc r3.xyz, r0.zzzz, r3.xyzx, r22.xyzx
and r5.xy, r0.zzzz, r5.xyxx
mov r14.x, -r10.x
mov r15.xy, l(0,0,0,0)
mov r16.w, l(0)
mov r17.xyz, v7.xyzx
mov r17.w, l(1.000000)
mov r18.w, l(1.000000)
mov r14.z, r10.x
mov r19.z, l(1.000000)
mov r20.w, l(1.000000)
mov r14.yw, r11.xxxx
mov r10.y, r14.w
mov r21.w, l(1.000000)
mov r11.y, r14.x
mov r11.z, r10.x
mov r22.x, r11.x
mov r22.y, r14.x
mov r22.z, r10.x
mov r13.z, l(1)
mov r13.yw, r5.yyyx
mov r23.xyz, r12.yzwy
mov r24.xyz, r3.xyzx
mov r0.z, cb2[58].y
mov r1.w, l(0)
loop 
  uge r3.w, r1.w, cb2[0].x
  breakc_nz r3.w
  ushr r15.z, r1.w, l(5)
  iadd r16.xyz, r4.xyzx, r15.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r3.w, r16.xyzw, t6.yzwx
  mov r16.xyz, r23.xyzx
  mov r25.xyz, r24.xyzx
  mov r6.y, r0.z
  mov r8.w, r13.z
  mov r9.w, r13.w
  mov r10.z, r13.y
  mov r10.w, r3.w
  loop 
    breakc_z r10.w
    firstbit_lo r11.w, r10.w
    ishl r15.z, l(1), r11.w
    and r15.w, r10.w, r15.z
    if_nz r15.w
      xor r10.w, r10.w, r15.z
      iadd r11.w, r1.w, r11.w
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r26.xyzw, r11.w, l(0), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r27.xy, r11.w, l(16), t12.xyxx
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r28.xyzw, r11.w, l(28), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r29.xyzw, r11.w, l(44), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r30.xyzw, r11.w, l(60), t12.zwxy
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r11.w, l(76), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r11.w, l(92), t12.zwxy
      ubfe r15.z, l(3), l(24), r28.x
      switch r15.z
        case l(4)
        lt r15.z, l(0.000000), r32.x
        mov r33.x, r31.w
        mov r33.yz, r32.zzwz
        mad r34.xyz, -r33.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r26.xyzx
        add r35.xyz, r34.xyzx, -v7.xyzx
        dp3 r15.w, r33.xyzx, r35.xyzx
        div_sat r15.w, -r15.w, r32.x
        mad r33.xyz, r15.wwww, r33.xyzx, r34.xyzx
        movc r33.xyz, r15.zzzz, r33.xyzx, r26.xyzx
        add r33.xyz, r33.xyzx, -v7.xyzx
        dp3 r15.z, r33.xyzx, r33.xyzx
        rsq r15.w, r15.z
        mul r34.xyz, r15.wwww, r33.xyzx
        dp3 r19.w, r1.xyzx, r34.xyzx
        mov_sat r22.w, r19.w
        movc r22.w, cb0[29].z, |r19.w|, r22.w
        lt r24.w, l(0.000000), r22.w
        if_nz r24.w
          sqrt r24.w, r15.z
          mul r25.w, r29.y, r29.y
          div r15.z, r25.w, r15.z
          min r15.z, r15.z, l(1.000000)
          mad_sat r25.w, r24.w, r28.y, r28.z
          mad_sat r24.w, r24.w, r28.w, r29.x
          mul r33.w, r25.w, r25.w
          mad r25.w, r25.w, l(-2.000000), l(3.000000)
          mul r25.w, r25.w, r33.w
          mul r15.z, r15.z, r25.w
          mul r25.w, r24.w, r24.w
          mad r24.w, r24.w, l(-2.000000), l(3.000000)
          mul r24.w, r24.w, r25.w
          mul r15.z, r15.z, r24.w
          lt r24.w, l(0.000000), r15.z
          if_nz r24.w
            iadd r9.w, r9.w, l(1)
            ubfe r34.xy, l(3, 4, 0, 0), l(27, 20, 0, 0), r28.xxxx
            ine r24.w, r34.x, l(1)
            if_nz r24.w
              mad r24.w, |r19.w|, l(-0.200000), l(0.400000)
              lt r25.w, r19.w, l(0.000000)
              and r25.w, r6.z, r25.w
              movc r24.w, r25.w, -r24.w, r24.w
              mad r34.xzw, r1.xxyz, r24.wwww, v7.xxyz
              mov r30.z, r31.x
              add r34.xzw, -r30.xxyz, r34.xxzw
              max r24.w, |r34.w|, |r34.z|
              max r24.w, r24.w, |r34.x|
              div r24.w, r31.y, r24.w
              add r24.w, r31.z, r24.w
              dp3 r25.w, r34.xzwx, r34.xzwx
              rsq r25.w, r25.w
              max r24.w, r24.w, l(0.00006104)
              and r33.w, r28.x, l(0x0000ffff)
              utof r35.w, r33.w
              mov r33.w, l(0)
              mov r36.x, l(0)
              loop 
                ige r36.y, r36.x, l(8)
                breakc_nz r36.y
                dp2 r36.y, icb[r36.x + 0].yxyy, r14.xyxx
                dp2 r36.z, icb[r36.x + 0].yxyy, r14.yzyy
                mul r37.yz, r29.zzzz, r36.yyzy
                mul r37.x, r13.x, r37.y
                mul r37.w, r12.x, r37.y
                mad r35.xyz, r34.xzwx, r25.wwww, r37.xzwx
                sample_c_lz_indexable(texturecubearray)(float,float,float,float) r35.x, r35.xyzw, t10.xxxx, s13, r24.w
                mad r33.w, r35.x, l(0.125000), r33.w
                iadd r36.x, r36.x, l(1)
              endloop 
            else 
              mov r33.w, l(1.000000)
            endif 
            mul r15.z, r15.z, r33.w
            if_nz r34.y
              iadd r24.w, r34.y, cb2[0].x
              iadd r24.w, r24.w, l(-1)
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r25.w, r24.w, l(52), t12.xxxx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r24.w, l(100), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r24.w, l(116), t12.xyzw
              mad r36.x, |r19.w|, l(-0.200000), l(0.400000)
              lt r19.w, r19.w, l(0.000000)
              and r19.w, r6.z, r19.w
              movc r19.w, r19.w, -r36.x, r36.x
              mad r18.xyz, r1.xyzx, r19.wwww, v7.xyzx
              dp4 r19.w, r34.xyzw, r18.xyzw
              dp4 r34.x, r35.xyzw, r18.xyzw
              lt r34.y, r34.x, r19.w
              if_z r34.y
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r24.w, l(68), t12.xyzw
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r24.w, l(84), t12.xyzw
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r24.w, l(132), t12.xyzw
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r24.w, l(148), t12.xyzw
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.zw, r24.w, l(164), t12.xxxy
                dp4 r35.x, r35.xyzw, r18.xyzw
                dp4 r35.y, r36.xyzw, r18.xyzw
                div r18.xy, r35.xyxx, r34.xxxx
                mad r18.xy, r18.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                add r18.xy, r38.zwzz, r18.xyxx
                mul r18.xy, r38.xyxx, r18.xyxx
                div r35.xy, r25.wwww, r37.xzxx
                add r35.zw, -r35.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                ge r35.zw, r18.xxxy, r35.zzzw
                ge r35.xy, r35.xyxx, r18.xyxx
                or r35.xy, r35.xyxx, r35.zwzz
                or r18.z, r35.y, r35.x
                mov_sat r18.xy, r18.xyxx
                mad r35.xy, r18.xyxx, r37.xzxx, r37.ywyy
                mul r18.x, r34.x, r34.w
                mad r18.y, r34.z, r34.x, r19.w
                div r18.x, r18.y, r18.x
              else 
                mov r18.z, l(-1)
              endif 
              or r18.y, r34.y, r18.z
              if_z r18.y
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.y, r24.w, l(28), t12.xxxx
                max r18.x, r18.x, l(0.00006104)
                and r18.y, r18.y, l(0x0000ffff)
                if_nz r6.y
                  utof r34.z, r18.y
                  mov r18.z, l(0)
                  mov r19.w, l(0)
                  loop 
                    ige r24.w, r19.w, l(8)
                    breakc_nz r24.w
                    dp2 r36.x, icb[r19.w + 0].yxyy, r14.xwxx
                    dp2 r36.y, icb[r19.w + 0].xyxx, r10.xyxx
                    mad r34.xy, r36.xyxx, r25.wwww, r35.xyxx
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.w, r34.xyzx, t9.xxxx, s13, r18.x
                    mad r18.z, r24.w, l(0.125000), r18.z
                    iadd r19.w, r19.w, l(1)
                  endloop 
                else 
                  utof r35.z, r18.y
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r18.z, r35.xyzx, t9.xxxx, s13, r18.x
                endif 
                mul r18.x, r18.z, r18.z
                mul r18.x, r18.z, r18.x
              else 
                mov r18.x, l(1.000000)
              endif 
              mul r15.z, r15.z, r18.x
            endif 
            lt r18.x, l(0.000000), r15.z
            if_nz r18.x
              iadd r10.z, r10.z, l(1)
              mov r27.z, r26.w
              mul r34.xyz, r27.zxyz, r15.zzzz
              add r15.z, r0.y, r22.w
              div r15.z, r22.w, r15.z
              mad r16.xyz, r34.xyzx, r15.zzzz, r16.xyzx
              mad r33.xyz, r33.xyzx, r15.wwww, r9.xyzx
              dp3 r15.z, r33.xyzx, r33.xyzx
              rsq r15.z, r15.z
              mul r33.xyz, r15.zzzz, r33.xyzx
              dp3_sat r15.z, r1.xyzx, r33.xyzx
              dp3_sat r15.w, r33.xyzx, r9.xyzx
              mul r18.x, r15.z, r15.z
              mad r18.xy, r18.xxxx, cb0[15].xzxx, l(1.000000, 1.000000, 0.000000, 0.000000)
              mul r18.xy, r18.xyxx, r18.xyxx
              div r18.xy, cb0[15].ywyy, r18.xyxx
              mul r18.xy, r15.zzzz, r18.xyxx
              mul r15.z, r15.w, l(4.000000)
              div r15.zw, r18.xxxy, r15.zzzz
              mul r15.zw, r15.zzzw, cb0[16].xxxy
              mul r33.xyz, r15.zzzz, r34.xyzx
              mad r33.xyz, r33.xyzx, r22.wwww, r25.xyzx
              mul r34.xyz, r15.wwww, r34.xyzx
              mad r25.xyz, r34.xyzx, r22.wwww, r33.xyzx
            endif 
          endif 
        endif 
        break 
        case l(2)
        mov r33.x, r29.w
        mov r33.yz, r30.zzwz
        add r33.xyz, r33.xyzx, -v7.xyzx
        dp3 r15.z, r33.xyzx, r33.xyzx
        rsq r15.z, r15.z
        mul r34.xyz, r15.zzzz, r33.xyzx
        dp3 r15.w, r1.xyzx, r34.xyzx
        mov_sat r18.x, r15.w
        movc r18.x, cb0[29].z, |r15.w|, r18.x
        lt r18.y, l(0.000000), r18.x
        if_nz r18.y
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r11.w, l(108), t12.zwxy
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r11.w, l(124), t12.xyzw
          mov r36.xy, r34.xyxx
          mov r36.zw, r35.xxxy
          dp4 r18.y, r36.xyzw, r17.xyzw
          lt r19.w, r18.y, l(1.000000)
          if_nz r19.w
            mov r37.xyz, l(1.000000,1.000000,1.000000,0)
            mov r19.w, l(0)
          else 
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r11.w, l(172), t12.yzwx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r11.w, l(188), t12.wxyz
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r11.w, l(204), t12.xyzw
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r22.w, r11.w, l(236), t12.xxxx
            add r26.xyz, r26.xyzx, -v7.xyzx
            mul r24.w, r29.y, r29.y
            dp3 r25.w, r26.xyzx, r26.xyzx
            div r24.w, r24.w, r25.w
            min r24.w, r24.w, l(1.000000)
            mad_sat r25.w, r18.y, r28.y, r28.z
            mad_sat r26.x, r18.y, r28.w, r29.x
            mul r26.y, r25.w, r25.w
            mad r25.w, r25.w, l(-2.000000), l(3.000000)
            mul r25.w, r25.w, r26.y
            mul r24.w, r24.w, r25.w
            mul r25.w, r26.x, r26.x
            mad r26.x, r26.x, l(-2.000000), l(3.000000)
            mul r25.w, r25.w, r26.x
            mul r24.w, r24.w, r25.w
            mov r30.zw, r31.xxxy
            dp4 r26.x, r30.xyzw, r17.xyzw
            mov r41.xy, r31.zwzz
            mov r41.zw, r32.zzzw
            dp4 r26.y, r41.xyzw, r17.xyzw
            div r19.xy, r26.xyxx, r18.yyyy
            lt r18.y, r38.w, l(0.00048828)
            if_nz r18.y
              mov r39.y, r40.x
              mad_sat r26.xy, |r19.xyxx|, r39.zwzz, r39.xyxx
              mul r28.yz, r26.xxyx, r26.xxyx
              mad r26.xy, r26.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
              mul r26.xy, r26.xyxx, r28.yzyy
              mul r18.y, r26.y, r26.x
            else 
              mov r38.w, r39.y
              mul_sat r38.xyzw, |r19.yyxx|, r38.xyzw
              log r38.xyzw, r38.xyzw
              mul r38.xyzw, r38.xyzw, r39.xxxx
              exp r38.xyzw, r38.xyzw
              add r26.xy, r38.zwzz, r38.xyxx
              log r26.xy, r26.xyxx
              mul r26.xy, r26.xyxx, r40.xxxx
              exp r26.xy, r26.xyxx
              mul r25.w, r26.x, r39.z
              mad r26.x, r39.w, r26.y, l(-1.000000)
              mad r25.w, r39.w, r26.y, -r25.w
              div_sat r25.w, r26.x, r25.w
              mul r26.x, r25.w, r25.w
              mad r25.w, r25.w, l(-2.000000), l(3.000000)
              mul r18.y, r25.w, r26.x
            endif 
            mul r19.w, r18.y, r24.w
            and r18.y, r22.w, l(255)
            if_nz r18.y
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r26.xyz, r11.w, l(220), t12.xyzx
              dp3 r22.w, r40.yzwy, r19.xyzx
              dp3 r19.x, r26.xyzx, r19.xyzx
              frc r26.x, r22.w
              frc r26.y, r19.x
              iadd r18.y, r18.y, l(-1)
              utof r26.z, r18.y
              sample_l_indexable(texture2darray)(float,float,float,float) r37.xyz, r26.xyzx, t20.xyzw, s2, l(0.000000)
            else 
              mov r37.xyz, l(1.000000,1.000000,1.000000,0)
            endif 
          endif 
          mov r27.w, r26.w
          mul r26.xyz, r27.wxyw, r37.xyzx
          lt r18.y, l(0.000000), r19.w
          if_nz r18.y
            iadd r9.w, r9.w, l(1)
            ubfe r19.xy, l(3, 4, 0, 0), l(27, 20, 0, 0), r28.xxxx
            ine r18.y, r19.x, l(1)
            if_nz r18.y
              mad r18.y, |r15.w|, l(-0.200000), l(0.400000)
              lt r19.x, r15.w, l(0.000000)
              and r19.x, r6.z, r19.x
              movc r18.y, r19.x, -r18.y, r18.y
              mad r20.xyz, r1.xyzx, r18.yyyy, v7.xyzx
              mov r34.xy, r32.xyxx
              dp4 r18.y, r34.xyzw, r20.xyzw
              dp4 r19.x, r36.xyzw, r20.xyzw
              ge r22.w, r19.x, r18.y
              if_nz r22.w
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xy, r11.w, l(140), t12.xyxx
                mov r30.zw, r31.xxxy
                dp4 r27.x, r30.xyzw, r20.xyzw
                mov r32.xy, r31.zwzz
                dp4 r27.y, r32.xyzw, r20.xyzw
                div r20.xy, r27.xyxx, r19.xxxx
                mad_sat r20.xy, r20.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                mad r20.xy, r20.xyxx, r35.zxzz, r35.wyww
                div r11.w, r18.y, r19.x
                max r11.w, r11.w, l(0.00006104)
                and r18.y, r28.x, l(0x0000ffff)
                if_nz r6.y
                  utof r27.z, r18.y
                  mov r19.x, l(0)
                  mov r22.w, l(0)
                  loop 
                    ige r24.w, r22.w, l(8)
                    breakc_nz r24.w
                    dp2 r28.x, icb[r22.w + 0].xyxx, r11.xyxx
                    dp2 r28.y, icb[r22.w + 0].yxyy, r11.xzxx
                    mad r27.xy, r28.xyxx, r29.zzzz, r20.xyxx
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.w, r27.xyzx, t9.xxxx, s13, r11.w
                    mad r19.x, r24.w, l(0.125000), r19.x
                    iadd r22.w, r22.w, l(1)
                  endloop 
                else 
                  utof r20.z, r18.y
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.x, r20.xyzx, t9.xxxx, s13, r11.w
                endif 
                mul r11.w, r19.x, r19.x
                mul r11.w, r19.x, r11.w
              else 
                mov r11.w, l(1.000000)
              endif 
            else 
              mov r11.w, l(1.000000)
            endif 
            mul r11.w, r11.w, r19.w
            if_nz r19.y
              iadd r18.y, r19.y, cb2[0].x
              iadd r18.y, r18.y, l(-1)
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.y, r18.y, l(52), t12.xxxx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r27.xyzw, r18.y, l(68), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r28.xyzw, r18.y, l(84), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r29.xyzw, r18.y, l(100), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r30.xyzw, r18.y, l(116), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r18.y, l(132), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r18.y, l(148), t12.xyzw
              mad r19.w, |r15.w|, l(-0.200000), l(0.400000)
              lt r15.w, r15.w, l(0.000000)
              and r15.w, r6.z, r15.w
              movc r15.w, r15.w, -r19.w, r19.w
              mad r21.xyz, r1.xyzx, r15.wwww, v7.xyzx
              dp4 r20.x, r27.xyzw, r21.xyzw
              dp4 r20.y, r28.xyzw, r21.xyzw
              dp4 r15.w, r29.xyzw, r21.xyzw
              dp4 r19.w, r30.xyzw, r21.xyzw
              lt r20.z, r19.w, r15.w
              div r20.xy, r20.xyxx, r19.wwww
              mad r20.xy, r20.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
              add r20.xy, r32.zwzz, r20.xyxx
              mul r20.xy, r32.xyxx, r20.xyxx
              div r21.xy, r19.yyyy, r31.xzxx
              add r27.xy, -r21.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
              ge r27.xy, r20.xyxx, r27.xyxx
              ge r21.xy, r21.xyxx, r20.xyxx
              or r21.xy, r21.xyxx, r27.xyxx
              or r21.x, r21.y, r21.x
              or r20.z, r20.z, r21.x
              if_z r20.z
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r20.z, r18.y, l(28), t12.xxxx
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r21.xy, r18.y, l(164), t12.xyxx
                mov_sat r20.xy, r20.xyxx
                mad r27.xy, r20.xyxx, r31.xzxx, r31.ywyy
                mul r18.y, r19.w, r21.y
                mad r15.w, r21.x, r19.w, r15.w
                div r15.w, r15.w, r18.y
                max r15.w, r15.w, l(0.00006104)
                and r18.y, r20.z, l(0x0000ffff)
                if_nz r6.y
                  utof r20.z, r18.y
                  mov r19.w, l(0)
                  mov r21.x, l(0)
                  loop 
                    ige r21.y, r21.x, l(8)
                    breakc_nz r21.y
                    dp2 r28.x, icb[r21.x + 0].xyxx, r22.xyxx
                    dp2 r28.y, icb[r21.x + 0].yxyy, r22.xzxx
                    mad r20.xy, r28.xyxx, r19.yyyy, r27.xyxx
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r20.x, r20.xyzx, t9.xxxx, s13, r15.w
                    mad r19.w, r20.x, l(0.125000), r19.w
                    iadd r21.x, r21.x, l(1)
                  endloop 
                else 
                  utof r27.z, r18.y
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.w, r27.xyzx, t9.xxxx, s13, r15.w
                endif 
                mul r15.w, r19.w, r19.w
                mul r15.w, r19.w, r15.w
              else 
                mov r15.w, l(1.000000)
              endif 
              mul r11.w, r11.w, r15.w
            endif 
            lt r15.w, l(0.000000), r11.w
            if_nz r15.w
              iadd r10.z, r10.z, l(1)
              mul r20.xyz, r26.xyzx, r11.wwww
              add r11.w, r0.y, r18.x
              div r11.w, r18.x, r11.w
              mad r16.xyz, r20.xyzx, r11.wwww, r16.xyzx
              mad r21.xyz, r33.xyzx, r15.zzzz, r9.xyzx
              dp3 r11.w, r21.xyzx, r21.xyzx
              rsq r11.w, r11.w
              mul r21.xyz, r11.wwww, r21.xyzx
              dp3_sat r11.w, r1.xyzx, r21.xyzx
              dp3_sat r15.z, r21.xyzx, r9.xyzx
              mul r15.w, r11.w, r11.w
              mad r21.xy, r15.wwww, cb0[15].xzxx, l(1.000000, 1.000000, 0.000000, 0.000000)
              mul r21.xy, r21.xyxx, r21.xyxx
              div r21.xy, cb0[15].ywyy, r21.xyxx
              mul r21.xy, r11.wwww, r21.xyxx
              mul r11.w, r15.z, l(4.000000)
              div r15.zw, r21.xxxy, r11.wwww
              mul r15.zw, r15.zzzw, cb0[16].xxxy
              mul r21.xyz, r15.zzzz, r20.xyzx
              mad r21.xyz, r21.xyzx, r18.xxxx, r25.xyzx
              mul r20.xyz, r15.wwww, r20.xyzx
              mad r25.xyz, r20.xyzx, r18.xxxx, r21.xyzx
            endif 
          endif 
        endif 
        break 
        default 
        break 
      endswitch 
      iadd r8.w, r8.w, l(1)
    endif 
  endloop 
  mov r23.xyz, r16.xyzx
  mov r24.xyz, r25.xyzx
  mov r13.z, r8.w
  mov r13.w, r9.w
  mov r13.y, r10.z
  iadd r1.w, r1.w, l(32)
endloop 
sample_indexable(texture2d)(float,float,float,float) r3.xyzw, r5.zwzz, t0.xyzw, s1
add r0.y, r4.w, l(1.000000)
log r0.y, r0.y
mul r0.y, r0.y, cb0[16].w
min r0.y, r0.y, l(500.000000)
mad r0.yz, r0.yyyy, r1.xxyx, v0.xxyx
add r1.xy, cb1[44].xyxx, l(-1.000000, -1.000000, 0.000000, 0.000000)
max r0.yz, r0.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
min r0.yz, r1.xxyx, r0.yyzy
ftoi r1.xy, r0.yzyy
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r1.x, r1.xyzw, t29.xyzw
ge r1.y, r1.x, l(0.984375)
mul r1.z, r1.x, l(1.01587307)
mad r1.x, r1.x, l(64.000000), l(-63.000000)
movc r1.x, r1.y, r1.x, r1.z
max r1.x, r1.x, l(0.00000001)
rcp r1.x, r1.x
lt r0.x, r0.x, r1.x
mul r0.yz, r0.yyzy, cb1[44].zzwz
sample_indexable(texture2d)(float,float,float,float) r1.xyz, r0.yzyy, t30.xyzw, s9
if_z r0.x
  ftoi r9.xy, v0.xyxx
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r1.xyz, r9.xyzw, t30.xyzw
endif 
mul r0.xyz, r1.xyzx, cb1[85].xxxx
mad r1.w, r4.w, l(2.000000), l(1.000000)
log r1.w, r1.w
mul r4.x, r1.w, l(0.08333334)
mov r4.y, l(0)
sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r4.xyxx, t37.xyzw, s8
mul r4.xyz, r0.xyzx, r4.xyzx
mul r1.w, r3.w, r4.w
mad r3.xyz, r3.xyzx, r23.xyzx, -r4.xyzx
mad r3.xyz, r1.wwww, r3.xyzx, r4.xyzx
mad r1.xyz, -r1.xyzx, cb1[85].xxxx, r3.xyzx
mad r0.xyz, r6.xxxx, r1.xyzx, r0.xyzx
mad r1.xyz, r8.xyzx, r23.xyzx, -r0.xyzx
mad r0.xyz, r7.xxxx, r1.xyzx, r0.xyzx
mad r1.xyz, r24.xyzx, r0.wwww, r7.yzwy
add r0.w, -r5.z, l(1.000000)
mul r1.w, r0.w, r0.w
mul r1.w, r1.w, r1.w
mul r0.w, r0.w, r1.w
mad r0.w, r0.w, l(0.980000), l(0.020000)
add r1.xyz, -r0.xyzx, r1.xyzx
mad r0.xyz, r0.wwww, r1.xyzx, r0.xyzx
mad r1.xyz, cb0[22].yzwy, r23.xyzx, -r0.xyzx
mad r1.xyz, r6.wwww, r1.xyzx, r0.xyzx
movc r0.xyz, cb0[28].yyyy, r1.xyzx, r0.xyzx
if_nz cb2[52].y
  if_nz cb2[53].y
    switch cb2[53].y
      case l(1)
      mov r13.y, r13.z
      break 
      case l(2)
      mov r13.y, r13.w
      break 
      case l(3)
      break 
      case l(4)
      and r13.y, r23.w, l(255)
      break 
      case l(5)
      ubfe r13.y, l(8), l(8), r23.w
      break 
      default 
      mov r13.y, l(0)
      break 
    endswitch 
    utof r0.w, r13.y
    mad r1.xyz, r0.wwww, l(50.000000, 50.000000, 50.000000, 0.000000), -r0.xyzx
    mad r0.xyz, cb2[53].wwww, r1.xyzx, r0.xyzx
  endif 
endif 
lt r0.w, l(0.000000), cb2[9].z
if_nz r0.w
  sqrt r0.w, r2.x
  lt r1.x, l(0.000000), cb2[13].w
  if_nz r1.x
    mad r1.xy, r0.wwww, cb2[15].xyxx, cb2[14].zwzz
    mul r1.xy, r1.xyxx, cb2[16].xyxx
    lt r1.z, l(0.010000), |v7.z|
    mul r3.xy, v7.zzzz, cb2[15].zwzz
    mul r3.zw, r3.xxxy, l(0.000000, 0.000000, -1.442695, -1.442695)
    exp r3.zw, r3.zzzw
    add r3.zw, -r3.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    div r3.xy, r3.zwzz, r3.xyxx
    mul r3.xy, r1.xyxx, r3.xyxx
    movc r1.xy, r1.zzzz, r3.xyxx, r1.xyxx
    mul r1.xzw, r1.xxxx, cb2[12].xxyz
    exp r1.xzw, r1.xxzw
    mul r3.xyz, r1.yyyy, cb2[12].xyzx
    exp r3.xyz, r3.xyzx
    add r3.xyz, -r1.xzwx, r3.xyzx
    mad r1.xyz, cb2[13].wwww, r3.xyzx, r1.xzwx
  else 
    mad r1.w, r0.w, cb2[15].x, cb2[14].z
    mul r1.w, r1.w, cb2[16].x
    lt r3.x, l(0.010000), |v7.z|
    mul r3.y, v7.z, cb2[15].z
    mul r3.z, r3.y, l(-1.442695)
    exp r3.z, r3.z
    add r3.z, -r3.z, l(1.000000)
    div r3.y, r3.z, r3.y
    mul r3.y, r1.w, r3.y
    movc r1.w, r3.x, r3.y, r1.w
    mul r3.xyz, r1.wwww, cb2[12].xyzx
    exp r1.xyz, r3.xyzx
  endif 
  mad r1.xyz, r1.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r1.xyz, r1.xyzx, -cb2[9].zzzz
  dp3 r1.w, cb2[7].yzwy, -r2.yzwy
  mad r3.x, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r3.y, cb2[8].w, -r1.w, l(1.000000)
  mul r3.y, r3.y, r3.y
  mul r3.y, r3.y, l(12.566371)
  div r3.x, r3.x, r3.y
  add r0.w, r0.w, -cb2[10].w
  mul_sat r0.w, r0.w, cb2[11].w
  mul r0.w, r0.w, r3.x
  mov_sat r1.w, r1.w
  mad r1.w, r1.w, r1.w, l(1.000000)
  mad r1.w, r1.w, l(0.05968310), l(-1.000000)
  mad r1.w, cb2[8].z, r1.w, l(1.000000)
  mul r3.xyz, r0.wwww, cb2[11].xyzx
  mad r3.xyz, r1.wwww, cb2[10].xyzx, r3.xyzx
  mul r3.xyz, r3.xyzx, cb2[9].wwww
  add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r3.xyz, r3.xyzx, r4.xyzx
  mad r1.xyz, r0.xyzx, r1.xyzx, r3.xyzx
else 
  mul r0.w, v7.z, cb2[6].x
  mad r1.w, cb2[6].x, v7.z, cb2[5].x
  lt r3.x, |r0.w|, l(0.000100)
  min r3.y, r1.w, l(64.000000)
  mul r3.y, r3.y, l(1.442695)
  exp r3.y, r3.y
  mov_sat r3.z, cb2[6].z
  lt r3.w, r1.w, l(0.000000)
  add r1.w, r1.w, l(1.000000)
  movc r1.w, r3.w, r3.y, r1.w
  add r1.w, r1.w, -cb2[6].z
  movc r0.w, r3.x, l(1.000000), r0.w
  div r0.w, r1.w, r0.w
  movc r0.w, r3.x, r3.z, r0.w
  mul r0.w, r0.w, cb2[5].z
  sqrt r1.w, r2.x
  mad r0.w, r0.w, r1.w, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  dp3 r1.w, cb2[7].yzwy, r2.yzwy
  mad_sat r1.w, cb2[8].y, r1.w, cb2[8].x
  add r2.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r2.xyzw, r1.wwww, r2.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r2.w
  add r2.xyz, -r0.xyzx, r2.xyzx
  mad r1.xyz, r0.wwww, r2.xyzx, r0.xyzx
endif 
mul r0.xyz, r1.xyzx, cb1[85].yyyy
ge r1.xyz, r0.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.xyz, r0.xyzx, r1.xyzx
min o0.xyz, r0.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
mov o0.w, l(1.000000)
ret 
// Approximately 2448 instruction slots used
