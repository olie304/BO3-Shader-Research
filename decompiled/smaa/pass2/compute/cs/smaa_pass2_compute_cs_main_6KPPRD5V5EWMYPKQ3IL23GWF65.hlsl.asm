//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:40:46 2021
//
//
// Buffer Definitions: 
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16 [unused]
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16 [unused]
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16 [unused]
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
// Resource bind info for morphologicalWorkQueueRWBufferV
// {
//
//   uint3 $Element;                    // Offset:    0 Size:    12
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// bilinearSampler                   sampler      NA          NA             s0      1 
// smaaTex                           texture  float4          2d             t0      1 
// edgesTex                          texture  float4          2d             t4      1 
// dstRWTex                              UAV  float3          2d             u2      1 
// morphologicalWorkQueueRWBufferV        UAV  struct         r/w             u5      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB1[45], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t4
dcl_uav_typed_texture2d (float,float,float,float) u2
dcl_uav_structured u5, 12
dcl_input vThreadID.x
dcl_temps 8
dcl_thread_group 64, 1, 1
ld_structured_indexable(structured_buffer, stride=12)(mixed,mixed,mixed,mixed) r0.xyz, vThreadID.x, l(0), u5.xyzx
ushr r0.w, r0.x, l(12)
and r1.xyzw, r0.xwww, l(4095, 4095, 4095, 4095)
itof r0.xw, r1.xxxw
add r0.xw, r0.xxxw, l(0.500000, 0.000000, 0.000000, 0.500000)
mul r2.yz, r0.xxwx, cb1[44].zzwz
mul r3.xy, cb1[44].zwzz, l(-0.125000, -0.250000, 0.000000, 0.000000)
mad r3.xy, r0.xwxx, cb1[44].zwzz, r3.xyxx
mov r3.zw, l(0,0,0,1.000000)
mov r4.xy, r3.xyxx
mov r4.zw, l(0,0,-3.000000,61.000000)
loop 
  ge r5.x, r4.z, r4.w
  breakc_nz r5.x
  sample_l_indexable(texture2d)(float,float,float,float) r3.zw, r4.xyxx, t4.zwyx, s0, l(0.000000)
  mad r4.xy, cb1[44].zwzz, l(-0.000000, -2.000000, 0.000000, 0.000000), r4.xyxx
  mad r5.x, -r3.z, l(32.000000), r3.w
  lt r5.x, l(0.828125), r5.x
  movc r4.w, r5.x, r4.w, r4.z
  add r4.z, r4.z, l(2.000000)
endloop 
mul r3.xy, r3.zwzz, l(32.000000, 32.000000, 0.000000, 0.000000)
round_ne r3.xy, r3.xyxx
ftoi r3.xy, r3.xyxx
mov r3.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r3.xy, r3.xyzw, t0.xyzw
mul r3.y, r3.y, l(3.000000)
mad r3.x, r3.x, l(2.007874), r4.z
round_ne r4.y, r3.x
round_ne r3.x, r3.y
mul r3.zw, cb1[44].zzzw, l(0.000000, 0.000000, -0.125000, 1.750000)
mad r0.xw, r0.xxxw, cb1[44].zzzw, r3.zzzw
mov r3.zw, l(0,0,0,1.000000)
mov r4.zw, r0.xxxw
mov r5.xy, l(-2.000000,62.000000,0,0)
loop 
  ge r5.z, r5.x, r5.y
  breakc_nz r5.z
  sample_l_indexable(texture2d)(float,float,float,float) r3.zw, r4.zwzz, t4.zwyx, s0, l(0.000000)
  mad r4.zw, cb1[44].zzzw, l(0.000000, 0.000000, 0.000000, 2.000000), r4.zzzw
  mad r5.z, -r3.z, l(32.000000), r3.w
  lt r5.z, l(0.828125), r5.z
  movc r5.y, r5.z, r5.y, r5.x
  add r5.x, r5.x, l(2.000000)
endloop 
mad r0.xw, r3.zzzw, l(32.000000, 0.000000, 0.000000, 32.000000), l(33.000000, 0.000000, 0.000000, 0.000000)
round_ne r0.xw, r0.xxxw
ftoi r6.xy, r0.xwxx
mov r6.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.xw, r6.xyzw, t0.xzwy
mul r0.w, r0.w, l(3.000000)
mad r0.x, r0.x, l(2.007874), r5.x
round_ne r4.x, r0.x
round_ne r3.y, r0.w
mov r0.xw, |r4.yyyx|
ishr r0.xw, r0.xxxw, l(1, 0, 0, 1)
iadd r0.xw, r0.xxxw, l(0x1fbd1df5, 0, 0, 0x1fbd1df5)
min r0.xw, r0.xxxw, l(19.000000, 0.000000, 0.000000, 19.000000)
mad r0.xw, r3.xxxy, l(20.000000, 0.000000, 0.000000, 20.000000), r0.xxxw
mad r0.xw, r0.xxxw, l(0.012500, 0.000000, 0.000000, 0.00510204), l(0.006250, 0.000000, 0.000000, 0.18622449)
sample_l_indexable(texture2d)(float,float,float,float) r0.xw, r0.xwxx, t0.xzwy, s0, l(0.000000)
max r3.x, r0.w, r0.x
lt r3.x, l(0.000000), r3.x
if_nz r3.x
  mad r2.x, -cb1[44].w, r4.y, r2.z
  mad r2.w, cb1[44].w, r4.x, r2.z
  ge r3.xy, r4.xyxx, r4.yxyy
  and r3.zw, r3.xxxy, l(0, 0, 0x3f800000, 0x3f800000)
  eq r2.z, r3.w, r3.z
  or r3.xy, r2.zzzz, r3.xyxx
  and r3.xy, r3.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
  mad r3.zw, cb1[44].zzzw, l(0.000000, 0.000000, 0.000000, 0.250000), r2.yyyx
  mad r3.zw, cb1[44].zzzw, l(0.000000, 0.000000, 1.000000, -1.000000), r3.zzzw
  sample_l_indexable(texture2d)(float,float,float,float) r3.zw, r3.zwzz, t4.zwxy, s0, l(0.000000)
  mad r2.z, r3.w, l(5.000000), l(-3.750000)
  mul r2.z, |r2.z|, r3.w
  round_ne r5.y, r2.z
  round_ne r5.x, r3.z
  mul r3.zw, r3.xxxx, r5.xxxy
  add r4.zw, r2.yyyw, cb1[44].zzzw
  sample_l_indexable(texture2d)(float,float,float,float) r4.zw, r4.zwzz, t4.zwxy, s0, l(0.000000)
  mul r5.zw, r3.yyyy, r4.zzzw
  mad r6.xyzw, cb1[44].zwzw, l(-2.000000, 0.000000, 0.250000, 0.000000), r2.yxyw
  sample_l_indexable(texture2d)(float,float,float,float) r2.w, r6.xyxx, t4.xzwy, s0, l(0.000000)
  add r2.xy, r2.yxyy, -cb1[44].zwzz
  sample_l_indexable(texture2d)(float,float,float,float) r2.z, r2.xyxx, t4.yzxw, s0, l(0.000000)
  mul r2.xy, r2.zwzz, r3.xxxx
  mad r6.xy, cb1[44].zwzz, l(-2.000000, 1.000000, 0.000000, 0.000000), r6.zwzz
  sample_l_indexable(texture2d)(float,float,float,float) r6.xy, r6.xyxx, t4.xyzw, s0, l(0.000000)
  mad r6.z, r6.x, l(5.000000), l(-3.750000)
  mul r6.x, |r6.z|, r6.x
  round_ne r6.zw, r6.xxxy
  mul r6.xy, r3.yyyy, r6.zwzz
  add r4.x, r4.x, r4.y
  lt r4.x, l(0.000000), r4.x
  mad_sat r7.xy, r3.xxxx, r5.xyxx, r5.zwzz
  mad_sat r7.zw, r3.xxxx, r2.zzzw, r6.xxxy
  add r2.z, r3.z, r3.w
  mad r2.z, r3.y, r4.w, r2.z
  mad_sat r2.z, r3.y, r4.z, r2.z
  add r2.x, r2.x, r2.y
  mad r2.x, r3.y, r6.w, r2.x
  mad_sat r2.x, r3.y, r6.z, r2.x
  mad r2.y, -r3.x, r5.y, l(2.000000)
  mad_sat r2.y, -r3.y, r4.w, r2.y
  mul r5.x, r2.y, r2.z
  mad r2.y, -r3.x, r2.w, l(2.000000)
  mad_sat r2.y, -r3.y, r6.w, r2.y
  mul r5.y, r2.y, r2.x
  movc r2.xy, r4.xxxx, r7.xzxx, r5.xyxx
  add r2.zw, -r7.yyyw, l(0.000000, 0.000000, 1.000000, 1.000000)
  mul r2.xy, r2.zwzz, r2.xyxx
  movc r2.xy, r4.xxxx, r2.xyxx, r5.xyxx
  mul r0.xw, r0.xxxw, r2.xxxy
endif 
max r2.x, r0.w, r0.x
lt r2.x, l(0.000000), r2.x
if_nz r2.x
  bfi r2.xy, l(11, 11, 0, 0), l(4, 4, 0, 0), r0.yzyy, l(0, 0, 0, 0)
  ushr r3.xyzw, r0.yyzz, l(7, 17, 7, 17)
  and r3.xyzw, r3.xyzw, l(0x00007ff0, 0x00007fe0, 0x00007ff0, 0x00007fe0)
  f16tof32 r4.xw, r2.xxxx
  f16tof32 r4.yz, r3.xxyx
  f16tof32 r2.xw, r2.yyyy
  f16tof32 r2.yz, r3.zzwz
  add r3.xyzw, -r4.wyzw, r2.wyzw
  mad r3.xyzw, r0.xxxx, r3.xyzw, r4.wyzw
  store_uav_typed u2.xyzw, r1.xwww, r3.xyzw
  iadd r1.xyzw, r1.xyzw, l(-1, 0, 0, 0)
  add r3.xyzw, -r2.wyzw, r4.xyzw
  mad r0.xyzw, r0.wwww, r3.xyzw, r2.xyzw
  store_uav_typed u2.xyzw, r1.xyzw, r0.xyzw
endif 
ret 
// Approximately 134 instruction slots used
