//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:40:47 2021
//
//
// Buffer Definitions: 
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16 [unused]
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16 [unused]
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16 [unused]
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
// Resource bind info for morphologicalWorkQueueRWBufferH
// {
//
//   uint3 $Element;                    // Offset:    0 Size:    12
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// bilinearSampler                   sampler      NA          NA             s0      1 
// smaaTex                           texture  float4          2d             t0      1 
// edgesTex                          texture  float4          2d             t4      1 
// dstRWTex                              UAV  float3          2d             u2      1 
// morphologicalWorkQueueRWBufferH        UAV  struct         r/w             u4      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB1[45], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t4
dcl_uav_typed_texture2d (float,float,float,float) u2
dcl_uav_structured u4, 12
dcl_input vThreadID.x
dcl_temps 10
dcl_thread_group 64, 1, 1
ld_structured_indexable(structured_buffer, stride=12)(mixed,mixed,mixed,mixed) r0.xyz, vThreadID.x, l(0), u4.xyzx
ushr r1.xy, r0.xxxx, l(24, 12, 0, 0)
utof r1.x, r1.x
mov r0.w, r1.y
and r2.xyzw, r0.xwww, l(4095, 4095, 4095, 4095)
itof r0.xw, r2.xxxw
add r0.xw, r0.xxxw, l(0.500000, 0.000000, 0.000000, 0.500000)
mul r3.yw, r0.xxxw, cb1[44].zzzw
mad r1.x, r1.x, l(1.000000), l(0.500000)
ftoi r1.x, r1.x
and r1.x, r1.x, l(15)
sample_l_indexable(texture2d)(float,float,float,float) r1.yz, r3.ywyy, t4.zxyw, s0, l(0.000000)
mad r4.xyzw, cb1[44].zwzw, l(-1.000000, 0.000000, 1.000000, 0.000000), r3.ywyw
sample_l_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t4.xzwy, s0, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r4.xy, r4.zwzz, t4.xyzw, s0, l(0.000000)
min r4.y, r1.z, r4.y
min r1.w, r1.w, r4.y
lt r1.z, l(0.500000), r1.z
ge r1.w, l(0.500000), r1.w
and r5.y, r1.w, r1.z
if_nz r5.y
  mov r1.zw, r3.yyyw
  mov r6.y, l(-1.000000)
  mov r4.yzw, l(0,1.000000,1.000000,7.000000)
  loop 
    ge r5.z, r6.y, r4.w
    breakc_nz r5.z
    mad r1.zw, cb1[44].zzzw, l(0.000000, 0.000000, 1.000000, -1.000000), r1.zzzw
    sample_l_indexable(texture2d)(float,float,float,float) r4.yz, r1.zwzz, t4.zxyw, s0, l(0.000000)
    min r5.z, r4.z, r4.y
    lt r5.z, l(0.500000), r5.z
    movc r4.w, r5.z, r4.w, r6.y
    add r6.y, r6.y, l(1.000000)
  endloop 
  min r1.z, r4.z, r4.y
  ge r1.z, l(0.500000), r1.z
  lt r1.y, l(0.500000), r1.y
  if_nz r1.y
    mov r1.yw, r3.yyyw
    mov r4.zw, l(0,0,-1.000000,7.000000)
    mov r5.zw, l(0,0,1.000000,1.000000)
    loop 
      ge r6.z, r4.z, r4.w
      breakc_nz r6.z
      mad r1.yw, cb1[44].zzzw, l(0.000000, -1.000000, 0.000000, 1.000000), r1.yyyw
      sample_l_indexable(texture2d)(float,float,float,float) r5.zw, r1.ywyy, t4.zwxy, s0, l(0.000000)
      min r6.z, r5.w, r5.z
      lt r6.z, l(0.500000), r6.z
      movc r4.w, r6.z, r4.w, r4.z
      add r4.z, r4.z, l(1.000000)
    endloop 
    lt r1.y, l(0.500000), r5.w
    add r1.w, r4.z, l(1.000000)
    movc r6.x, r1.y, r1.w, r4.z
    min r1.w, r5.w, r5.z
    ge r1.w, l(0.500000), r1.w
  else 
    mov r6.x, l(0)
    mov r1.yw, l(0,-1,0,-1)
  endif 
  add r4.z, r6.y, r6.x
  lt r4.z, l(0.000000), r4.z
  if_nz r4.z
    mad r7.xyzw, r6.yyyy, l(1.000000, -1.000000, 1.000000, -1.000000), l(1.000000, -2.000000, 1.000000, 0.000000)
    mad r7.xyzw, r7.xyzw, cb1[44].zwzw, r3.ywyw
    sample_l_indexable(texture2d)(float,float,float,float) r4.z, r7.xyxx, t4.yzxw, s0, l(0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r5.w, r7.zwzz, t4.zwxy, s0, l(0.000000)
    if_z r1.y
      mad r6.zw, r6.xxxx, l(0.000000, 0.000000, -1.000000, 1.000000), l(0.000000, 0.000000, 0.000000, 1.000000)
      mad r6.zw, r6.zzzw, cb1[44].zzzw, r3.yyyw
      sample_l_indexable(texture2d)(float,float,float,float) r6.z, r6.zwzz, t4.zwxy, s0, l(0.000000)
      mov r5.z, l(0)
    else 
      mad r7.xy, r6.xxxx, l(-1.000000, 1.000000, 0.000000, 0.000000), l(-1.000000, 0.000000, 0.000000, 0.000000)
      mad r7.xy, r7.xyxx, cb1[44].zwzz, r3.ywyy
      sample_l_indexable(texture2d)(float,float,float,float) r5.z, r7.xyxx, t4.zwyx, s0, l(0.000000)
      mov r6.z, l(0)
    endif 
    mul r6.w, r4.y, r4.z
    mad r4.yz, r5.zzwz, l(0.000000, 2.000000, 2.000000, 0.000000), r6.zzwz
    and r7.xy, r1.wzww, r4.yzyy
    min r1.yz, r6.xxyx, l(0.000000, 19.000000, 19.000000, 0.000000)
    mad r1.yz, r7.xxyx, l(0.000000, 20.000000, 20.000000, 0.000000), r1.yyzy
    mad r1.yz, r1.yyzy, l(0.000000, 0.012500, 0.00510204, 0.000000), l(0.000000, 0.006250, 0.59438777, 0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r1.yz, r1.yzyy, t0.zxyw, s0, l(0.000000)
  else 
    mov r1.yz, l(0,0,0,0)
  endif 
  mov r4.yz, r3.yywy
  mov r5.zw, l(0,0,1.000000,1.000000)
  mov r6.x, l(-1.000000)
  mov r1.w, l(7.000000)
  loop 
    ge r4.w, r6.x, r1.w
    breakc_nz r4.w
    add r4.yz, r4.yyzy, -cb1[44].zzwz
    mad r6.zw, cb1[44].zzzw, l(0.000000, 0.000000, 0.250000, 0.000000), r4.yyyz
    sample_l_indexable(texture2d)(float,float,float,float) r6.zw, r6.zwzz, t4.zwxy, s0, l(0.000000)
    mad r4.w, r6.z, l(5.000000), l(-3.750000)
    mul r4.w, |r4.w|, r6.z
    round_ne r5.z, r4.w
    round_ne r5.w, r6.w
    min r4.w, r5.w, r5.z
    lt r4.w, l(0.500000), r4.w
    movc r1.w, r4.w, r1.w, r6.x
    add r6.x, r6.x, l(1.000000)
  endloop 
  min r1.w, r5.w, r5.z
  ge r1.w, l(0.500000), r1.w
  lt r4.x, l(0.500000), r4.x
  if_nz r4.x
    mov r4.xy, r3.ywyy
    mov r4.zw, l(0,0,-1.000000,7.000000)
    mov r5.w, l(1.000000)
    mov r6.z, l(1.000000)
    loop 
      ge r6.w, r4.z, r4.w
      breakc_nz r6.w
      add r4.xy, r4.xyxx, cb1[44].zwzz
      mad r7.xy, cb1[44].zwzz, l(0.250000, 0.000000, 0.000000, 0.000000), r4.xyxx
      sample_l_indexable(texture2d)(float,float,float,float) r7.xy, r7.xyxx, t4.xyzw, s0, l(0.000000)
      mad r6.w, r7.x, l(5.000000), l(-3.750000)
      mul r6.w, |r6.w|, r7.x
      round_ne r5.w, r6.w
      round_ne r6.z, r7.y
      min r6.w, r5.w, r6.z
      lt r6.w, l(0.500000), r6.w
      movc r4.w, r6.w, r4.w, r4.z
      add r4.z, r4.z, l(1.000000)
    endloop 
    lt r4.x, l(0.500000), r6.z
    add r4.y, r4.z, l(1.000000)
    movc r6.y, r4.x, r4.y, r4.z
    min r4.y, r5.w, r6.z
    ge r4.y, l(0.500000), r4.y
  else 
    mov r6.y, l(0)
    mov r4.xy, l(-1,-1,0,0)
  endif 
  add r4.z, r6.x, r6.y
  lt r4.z, l(0.000000), r4.z
  if_nz r4.z
    add r7.xyzw, -r6.xxxx, l(0.000000, -2.000000, -1.000000, 0.000000)
    mad r7.xyzw, r7.xyzw, cb1[44].zwzw, r3.ywyw
    sample_l_indexable(texture2d)(float,float,float,float) r4.z, r7.xyxx, t4.yzxw, s0, l(0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r7.zwzz, t4.zwxy, s0, l(0.000000)
    if_z r4.x
      add r4.x, r6.y, l(1.000000)
      mad r4.xw, r4.xxxx, cb1[44].zzzw, r3.yyyw
      sample_l_indexable(texture2d)(float,float,float,float) r4.x, r4.xwxx, t4.xzwy, s0, l(0.000000)
      mov r6.z, l(0)
    else 
      add r7.xy, r6.yyyy, l(1.000000, 0.000000, 0.000000, 0.000000)
      mad r7.xy, r7.xyxx, cb1[44].zwzz, r3.ywyy
      sample_l_indexable(texture2d)(float,float,float,float) r6.z, r7.xyxx, t4.zwyx, s0, l(0.000000)
      mov r4.x, l(0)
    endif 
    mul r4.w, r5.z, r4.z
    mad r4.xz, r6.zzwz, l(2.000000, 0.000000, 2.000000, 0.000000), r4.xxwx
    and r4.y, r4.x, r4.y
    and r4.x, r1.w, r4.z
    min r4.zw, r6.xxxy, l(0.000000, 0.000000, 19.000000, 19.000000)
    mad r4.xy, r4.xyxx, l(20.000000, 20.000000, 0.000000, 0.000000), r4.zwzz
    mad r4.xy, r4.xyxx, l(0.012500, 0.00510204, 0.000000, 0.000000), l(0.006250, 0.59438777, 0.000000, 0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r4.xy, r4.xyxx, t0.yxzw, s0, l(0.000000)
  else 
    mov r4.xy, l(0,0,0,0)
  endif 
  add r1.w, r1.z, r1.y
  add r4.z, r4.y, r4.x
  lt r1.w, r4.z, r1.w
  movc r1.yz, r1.wwww, r1.yyzy, r4.xxyx
  max r1.w, r1.z, r1.y
  eq r5.x, r1.w, l(0.000000)
else 
  mov r1.yz, l(0,0,0,0)
  mov r5.x, l(-1)
endif 
ieq r1.x, r1.x, l(2)
and r1.x, r1.x, r5.x
if_nz r1.x
  mul r1.xw, cb1[44].zzzw, l(-0.250000, 0.000000, 0.000000, -0.125000)
  mad r1.xw, r0.xxxw, cb1[44].zzzw, r1.xxxw
  mov r4.xy, l(0,1.000000,0,0)
  mov r4.zw, r1.xxxw
  mov r5.zw, l(0,0,-3.000000,61.000000)
  loop 
    ge r6.x, r5.z, r5.w
    breakc_nz r6.x
    sample_l_indexable(texture2d)(float,float,float,float) r4.xy, r4.zwzz, t4.xyzw, s0, l(0.000000)
    mad r4.zw, cb1[44].zzzw, l(0.000000, 0.000000, -2.000000, -0.000000), r4.zzzw
    mad r6.x, -r4.x, l(32.000000), r4.y
    lt r6.x, l(0.828125), r6.x
    movc r5.w, r6.x, r5.w, r5.z
    add r5.z, r5.z, l(2.000000)
  endloop 
  mul r1.xw, r4.xxxy, l(32.000000, 0.000000, 0.000000, 32.000000)
  round_ne r1.xw, r1.xxxw
  ftoi r4.xy, r1.xwxx
  mov r4.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r1.xw, r4.xyzw, t0.xzwy
  mul r1.w, r1.w, l(3.000000)
  mad r1.x, r1.x, l(2.007874), r5.z
  round_ne r4.y, r1.x
  round_ne r6.x, r1.w
  mul r1.xw, cb1[44].zzzw, l(1.750000, 0.000000, 0.000000, -0.125000)
  mad r1.xw, r0.xxxw, cb1[44].zzzw, r1.xxxw
  mov r4.zw, l(0,0,0,1.000000)
  mov r5.zw, r1.xxxw
  mov r6.zw, l(0,0,-2.000000,62.000000)
  loop 
    ge r7.x, r6.z, r6.w
    breakc_nz r7.x
    sample_l_indexable(texture2d)(float,float,float,float) r4.zw, r5.zwzz, t4.zwxy, s0, l(0.000000)
    mad r5.zw, cb1[44].zzzw, l(0.000000, 0.000000, 2.000000, 0.000000), r5.zzzw
    mad r7.x, -r4.z, l(32.000000), r4.w
    lt r7.x, l(0.828125), r7.x
    movc r6.w, r7.x, r6.w, r6.z
    add r6.z, r6.z, l(2.000000)
  endloop 
  mad r1.xw, r4.zzzw, l(32.000000, 0.000000, 0.000000, 32.000000), l(33.000000, 0.000000, 0.000000, 0.000000)
  round_ne r1.xw, r1.xxxw
  ftoi r7.xy, r1.xwxx
  mov r7.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r1.xw, r7.xyzw, t0.xzwy
  mul r1.w, r1.w, l(3.000000)
  mad r1.x, r1.x, l(2.007874), r6.z
  round_ne r4.x, r1.x
  round_ne r6.y, r1.w
  mov r1.xw, |r4.yyyx|
  ishr r1.xw, r1.xxxw, l(1, 0, 0, 1)
  iadd r1.xw, r1.xxxw, l(0x1fbd1df5, 0, 0, 0x1fbd1df5)
  min r1.xw, r1.xxxw, l(19.000000, 0.000000, 0.000000, 19.000000)
  mad r1.xw, r6.xxxy, l(20.000000, 0.000000, 0.000000, 20.000000), r1.xxxw
  mad r1.xw, r1.xxxw, l(0.012500, 0.000000, 0.000000, 0.00510204), l(0.006250, 0.000000, 0.000000, 0.18622449)
  sample_l_indexable(texture2d)(float,float,float,float) r1.yz, r1.xwxx, t0.zxyw, s0, l(0.000000)
  max r1.x, r1.z, r1.y
  lt r1.x, l(0.000000), r1.x
  if_nz r1.x
    mad r3.z, -cb1[44].z, r4.y, r3.y
    mad r3.x, cb1[44].z, r4.x, r3.y
    ge r1.xw, r4.xxxy, r4.yyyx
    and r4.zw, r1.xxxw, l(0, 0, 0x3f800000, 0x3f800000)
    eq r4.z, r4.w, r4.z
    or r1.xw, r1.xxxw, r4.zzzz
    and r1.xw, r1.xxxw, l(0x3f800000, 0, 0, 0x3f800000)
    mad r4.zw, cb1[44].zzzw, l(0.000000, 0.000000, 0.250000, 0.000000), r3.zzzw
    mad r4.zw, cb1[44].zzzw, l(0.000000, 0.000000, -1.000000, 1.000000), r4.zzzw
    sample_l_indexable(texture2d)(float,float,float,float) r4.zw, r4.zwzz, t4.zwxy, s0, l(0.000000)
    mad r5.z, r4.z, l(5.000000), l(-3.750000)
    mul r4.z, r4.z, |r5.z|
    round_ne r6.xy, r4.wzww
    mul r4.zw, r1.xxxx, r6.xxxy
    add r5.zw, r3.xxxw, cb1[44].zzzw
    sample_l_indexable(texture2d)(float,float,float,float) r5.zw, r5.zwzz, t4.zwxy, s0, l(0.000000)
    mul r6.zw, r1.wwww, r5.wwwz
    mad r7.xyzw, cb1[44].zwzw, l(0.000000, -2.000000, 0.000000, 0.250000), r3.zwxw
    sample_l_indexable(texture2d)(float,float,float,float) r7.y, r7.xyxx, t4.wxyz, s0, l(0.000000)
    add r8.xy, r3.zwzz, -cb1[44].zwzz
    sample_l_indexable(texture2d)(float,float,float,float) r7.x, r8.xyxx, t4.ywxz, s0, l(0.000000)
    mul r8.xy, r1.xxxx, r7.xyxx
    mad r7.zw, cb1[44].zzzw, l(0.000000, 0.000000, 1.000000, -2.000000), r7.zzzw
    sample_l_indexable(texture2d)(float,float,float,float) r7.zw, r7.zwzz, t4.zwxy, s0, l(0.000000)
    mad r8.z, r7.w, l(5.000000), l(-3.750000)
    mul r7.w, r7.w, |r8.z|
    round_ne r8.zw, r7.wwwz
    mul r7.zw, r1.wwww, r8.zzzw
    add r4.x, r4.x, r4.y
    lt r4.x, l(0.000000), r4.x
    mad_sat r9.xy, r1.xxxx, r6.xyxx, r6.zwzz
    mad_sat r9.zw, r1.xxxx, r7.xxxy, r7.zzzw
    add r4.y, r4.z, r4.w
    mad r4.y, r1.w, r5.z, r4.y
    mad_sat r4.y, r1.w, r5.w, r4.y
    add r4.z, r8.x, r8.y
    mad r4.z, r1.w, r8.w, r4.z
    mad_sat r4.z, r1.w, r8.z, r4.z
    mad r4.w, -r1.x, r6.y, l(2.000000)
    mad_sat r4.w, -r1.w, r5.z, r4.w
    mul r6.x, r4.w, r4.y
    mad r1.x, -r1.x, r7.y, l(2.000000)
    mad_sat r1.x, -r1.w, r8.w, r1.x
    mul r6.y, r1.x, r4.z
    movc r1.xw, r4.xxxx, r9.xxxz, r6.xxxy
    add r4.yz, -r9.yywy, l(0.000000, 1.000000, 1.000000, 0.000000)
    mul r1.xw, r1.xxxw, r4.yyyz
    movc r1.xw, r4.xxxx, r1.xxxw, r6.xxxy
    mul r1.yz, r1.xxwx, r1.yyzy
  endif 
  mov r5.y, l(-1)
endif 
if_nz r5.x
  mul r1.xw, cb1[44].zzzw, l(-0.125000, 0.000000, 0.000000, -0.250000)
  mad r1.xw, r0.xxxw, cb1[44].zzzw, r1.xxxw
  mov r4.xy, l(0,1.000000,0,0)
  mov r4.zw, r1.xxxw
  mov r5.zw, l(0,0,-3.000000,61.000000)
  loop 
    ge r6.x, r5.z, r5.w
    breakc_nz r6.x
    sample_l_indexable(texture2d)(float,float,float,float) r4.xy, r4.zwzz, t4.yxzw, s0, l(0.000000)
    mad r4.zw, cb1[44].zzzw, l(0.000000, 0.000000, -0.000000, -2.000000), r4.zzzw
    mad r6.x, -r4.x, l(32.000000), r4.y
    lt r6.x, l(0.828125), r6.x
    movc r5.w, r6.x, r5.w, r5.z
    add r5.z, r5.z, l(2.000000)
  endloop 
  mul r1.xw, r4.xxxy, l(32.000000, 0.000000, 0.000000, 32.000000)
  round_ne r1.xw, r1.xxxw
  ftoi r4.xy, r1.xwxx
  mov r4.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r1.xw, r4.xyzw, t0.xzwy
  mul r1.w, r1.w, l(3.000000)
  mad r1.x, r1.x, l(2.007874), r5.z
  round_ne r4.y, r1.x
  round_ne r6.x, r1.w
  mul r1.xw, cb1[44].zzzw, l(-0.125000, 0.000000, 0.000000, 1.750000)
  mad r0.xw, r0.xxxw, cb1[44].zzzw, r1.xxxw
  mov r1.xw, l(0,0,0,1.000000)
  mov r4.zw, r0.xxxw
  mov r5.zw, l(0,0,-2.000000,62.000000)
  loop 
    ge r6.z, r5.z, r5.w
    breakc_nz r6.z
    sample_l_indexable(texture2d)(float,float,float,float) r1.xw, r4.zwzz, t4.yzwx, s0, l(0.000000)
    mad r4.zw, cb1[44].zzzw, l(0.000000, 0.000000, 0.000000, 2.000000), r4.zzzw
    mad r6.z, -r1.x, l(32.000000), r1.w
    lt r6.z, l(0.828125), r6.z
    movc r5.w, r6.z, r5.w, r5.z
    add r5.z, r5.z, l(2.000000)
  endloop 
  mad r0.xw, r1.xxxw, l(32.000000, 0.000000, 0.000000, 32.000000), l(33.000000, 0.000000, 0.000000, 0.000000)
  round_ne r0.xw, r0.xxxw
  ftoi r7.xy, r0.xwxx
  mov r7.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r0.xw, r7.xyzw, t0.xzwy
  mul r0.w, r0.w, l(3.000000)
  mad r0.x, r0.x, l(2.007874), r5.z
  round_ne r4.x, r0.x
  round_ne r6.y, r0.w
  mov r0.xw, |r4.yyyx|
  ishr r0.xw, r0.xxxw, l(1, 0, 0, 1)
  iadd r0.xw, r0.xxxw, l(0x1fbd1df5, 0, 0, 0x1fbd1df5)
  min r0.xw, r0.xxxw, l(19.000000, 0.000000, 0.000000, 19.000000)
  mad r0.xw, r6.xxxy, l(20.000000, 0.000000, 0.000000, 20.000000), r0.xxxw
  mad r0.xw, r0.xxxw, l(0.012500, 0.000000, 0.000000, 0.00510204), l(0.006250, 0.000000, 0.000000, 0.18622449)
  sample_l_indexable(texture2d)(float,float,float,float) r1.yz, r0.xwxx, t0.zxyw, s0, l(0.000000)
  max r0.x, r1.z, r1.y
  lt r0.x, l(0.000000), r0.x
  if_nz r0.x
    mad r3.x, -cb1[44].w, r4.y, r3.w
    mad r3.z, cb1[44].w, r4.x, r3.w
    ge r0.xw, r4.xxxy, r4.yyyx
    and r1.xw, r0.xxxw, l(0x3f800000, 0, 0, 0x3f800000)
    eq r1.x, r1.w, r1.x
    or r0.xw, r0.xxxw, r1.xxxx
    and r0.xw, r0.xxxw, l(0x3f800000, 0, 0, 0x3f800000)
    mad r1.xw, cb1[44].zzzw, l(0.000000, 0.000000, 0.000000, 0.250000), r3.yyyx
    mad r1.xw, cb1[44].zzzw, l(1.000000, 0.000000, 0.000000, -1.000000), r1.xxxw
    sample_l_indexable(texture2d)(float,float,float,float) r1.xw, r1.xwxx, t4.xzwy, s0, l(0.000000)
    mad r3.w, r1.w, l(5.000000), l(-3.750000)
    mul r1.w, r1.w, |r3.w|
    round_ne r6.xy, r1.xwxx
    mul r1.xw, r0.xxxx, r6.xxxy
    add r4.zw, r3.yyyz, cb1[44].zzzw
    sample_l_indexable(texture2d)(float,float,float,float) r4.zw, r4.zwzz, t4.zwxy, s0, l(0.000000)
    mul r5.zw, r0.wwww, r4.zzzw
    mad r7.xyzw, cb1[44].zwzw, l(-2.000000, 0.000000, 0.250000, 0.000000), r3.yxyz
    sample_l_indexable(texture2d)(float,float,float,float) r3.w, r7.xyxx, t4.xzwy, s0, l(0.000000)
    add r3.xy, r3.yxyy, -cb1[44].zwzz
    sample_l_indexable(texture2d)(float,float,float,float) r3.z, r3.xyxx, t4.yzxw, s0, l(0.000000)
    mul r3.xy, r0.xxxx, r3.zwzz
    mad r6.zw, cb1[44].zzzw, l(0.000000, 0.000000, -2.000000, 1.000000), r7.zzzw
    sample_l_indexable(texture2d)(float,float,float,float) r6.zw, r6.zwzz, t4.zwxy, s0, l(0.000000)
    mad r7.x, r6.z, l(5.000000), l(-3.750000)
    mul r6.z, r6.z, |r7.x|
    round_ne r7.zw, r6.zzzw
    mul r6.zw, r0.wwww, r7.zzzw
    add r4.x, r4.x, r4.y
    lt r4.x, l(0.000000), r4.x
    mad_sat r8.xy, r0.xxxx, r6.xyxx, r5.zwzz
    mad_sat r8.zw, r0.xxxx, r3.zzzw, r6.zzzw
    add r1.x, r1.x, r1.w
    mad r1.x, r0.w, r4.w, r1.x
    mad_sat r1.x, r0.w, r4.z, r1.x
    add r1.w, r3.x, r3.y
    mad r1.w, r0.w, r7.w, r1.w
    mad_sat r1.w, r0.w, r7.z, r1.w
    mad r3.x, -r0.x, r6.y, l(2.000000)
    mad_sat r3.x, -r0.w, r4.w, r3.x
    mul r3.x, r1.x, r3.x
    mad r0.x, -r0.x, r3.w, l(2.000000)
    mad_sat r0.x, -r0.w, r7.w, r0.x
    mul r3.y, r0.x, r1.w
    movc r0.xw, r4.xxxx, r8.xxxz, r3.xxxy
    add r1.xw, -r8.yyyw, l(1.000000, 0.000000, 0.000000, 1.000000)
    mul r0.xw, r0.xxxw, r1.xxxw
    movc r0.xw, r4.xxxx, r0.xxxw, r3.xxxy
    mul r1.yz, r0.xxwx, r1.yyzy
  endif 
  mov r5.y, l(0)
endif 
max r0.x, r1.z, r1.y
lt r0.x, l(0.000000), r0.x
if_nz r0.x
  bfi r0.xw, l(11, 0, 0, 11), l(4, 0, 0, 4), r0.yyyz, l(0, 0, 0, 0)
  ushr r3.xyzw, r0.yyzz, l(7, 17, 7, 17)
  and r3.xyzw, r3.xyzw, l(0x00007ff0, 0x00007fe0, 0x00007ff0, 0x00007fe0)
  f16tof32 r4.xw, r0.xxxx
  f16tof32 r4.yz, r3.xxyx
  f16tof32 r0.xw, r0.wwww
  f16tof32 r0.yz, r3.zzwz
  add r3.xyzw, -r4.wyzw, r0.wyzw
  mad r3.xyzw, r1.yyyy, r3.xyzw, r4.wyzw
  store_uav_typed u2.xyzw, r2.xwww, r3.xyzw
  iadd r2.xyzw, r2.xyzw, r5.xyyy
  add r3.xyzw, -r0.wyzw, r4.xyzw
  mad r0.xyzw, r1.zzzz, r3.xyzw, r0.xyzw
  store_uav_typed u2.xyzw, r2.xyzw, r0.xyzw
endif 
ret 
// Approximately 421 instruction slots used
