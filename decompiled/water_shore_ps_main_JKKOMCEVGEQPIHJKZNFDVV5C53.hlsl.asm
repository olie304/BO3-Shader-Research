//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:44:06 2021
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float3 specColorTint;              // Offset:  160 Size:    12 [unused]
//   float baseNormalHeight;            // Offset:  172 Size:     4 [unused]
//   float2 glossRange;                 // Offset:  176 Size:     8 [unused]
//   float2 normalMapScale;             // Offset:  184 Size:     8 [unused]
//   float4 specularLobeRoughnessControl;// Offset:  192 Size:    16 [unused]
//   float2 lobeWeighting;              // Offset:  208 Size:     8 [unused]
//   float4 controlVar0;                // Offset:  224 Size:    16
//   float4 controlVar1;                // Offset:  240 Size:    16
//   float4 shoreUVControl;             // Offset:  256 Size:    16 [unused]
//   float reflectionGloss;             // Offset:  272 Size:     4
//   float probeReflectionLevel;        // Offset:  276 Size:     4
//   float2 horizonControl;             // Offset:  280 Size:     8
//   float SSRLevel;                    // Offset:  288 Size:     4
//   float4 normalScaleLoHi;            // Offset:  304 Size:    16
//   float3 normalUVScrollSpeed;        // Offset:  320 Size:    12 [unused]
//   float4 normalUVLo;                 // Offset:  336 Size:    16 [unused]
//   float4 normalUVHi0;                // Offset:  352 Size:    16 [unused]
//   float4 normalUVHi1;                // Offset:  368 Size:    16 [unused]
//   float3 foamColor;                  // Offset:  384 Size:    12
//   float3 waterColorShallow;          // Offset:  400 Size:    12
//   float3 waterColorDeep;             // Offset:  416 Size:    12
//   float3 waterColorShallowScatter;   // Offset:  432 Size:    12
//   float3 waterColorDeepScatter;      // Offset:  448 Size:    12
//   float3 horizonColor;               // Offset:  464 Size:    12
//   float4 foamMaskScroll01;           // Offset:  480 Size:    16 [unused]
//   float4 foamMaskScroll23;           // Offset:  496 Size:    16 [unused]
//   float4 foamMaskScale01;            // Offset:  512 Size:    16 [unused]
//   float4 foamMaskScale23;            // Offset:  528 Size:    16 [unused]
//   float foamScale;                   // Offset:  544 Size:     4 [unused]
//   float3 foamSpacing;                // Offset:  548 Size:    12
//   float foamColorScale;              // Offset:  560 Size:     4
//   float foamWaveIncrease;            // Offset:  564 Size:     4 [unused]
//   float4 wave0K;                     // Offset:  576 Size:    16 [unused]
//   float4 wave1K;                     // Offset:  592 Size:    16 [unused]
//   float4 wave2K;                     // Offset:  608 Size:    16 [unused]
//   float4 wave3K;                     // Offset:  624 Size:    16 [unused]
//   float4 waveAmplitude;              // Offset:  640 Size:    16 [unused]
//   float4 waveSteepness;              // Offset:  656 Size:    16 [unused]
//   float4 waveFrequency;              // Offset:  672 Size:    16 [unused]
//   bool useFoam;                      // Offset:  688 Size:     4
//   bool useVertexWaves;               // Offset:  692 Size:     4 [unused]
//   bool scaleNormalsWithFlow;         // Offset:  696 Size:     4 [unused]
//   bool useSSR;                       // Offset:  700 Size:     4
//   float maxRayDepth;                 // Offset:  704 Size:     4
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16 [unused]
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4 [unused]
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// colorSampler                      sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// normalSampler                     sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// bilinearClamp                     sampler      NA          NA             s5      1 
// bilinearTile                      sampler      NA          NA             s6      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// colorMap                          texture  float4          2d             t0      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// normalMap                         texture  float4          2d            t21      1 
// controlMap                        texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// normalMapHi                       texture  float4          2d            t24      1 
// maskMap                           texture  float4          2d            t25      1 
// ifloatZScene                      texture  float4          2d            t26      1 
// iResolveScene                     texture  float4          2d            t29      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    1   x           1     NONE   float       
// TEXCOORD                 0    yz         1     NONE   float    yz 
// TEXCOORD                 1   xyz         2     NONE   float       
// TEXCOORD                 2   xyz         3     NONE   float       
// TEXCOORD                 3   xyz         4     NONE   float       
// OFFPOSITION              0   xyz         5     NONE   float   xyz 
// TEXCOORD                 6   xy          6     NONE   float   xy  
// TEXCOORD                 9     z         6     NONE   float     z 
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
// TEXCOORD                 8   xyzw        8     NONE   float   xyzw
// TEXCOORD                10   xy          9     NONE   float   xy  
// TEXCOORD                11   xyzw       10     NONE   float   xyzw
// SV_IsFrontFace           0   x          11    FFACE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[45], immediateIndexed
dcl_constantbuffer CB1[86], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2d (float,float,float,float) t26
dcl_resource_texture2d (float,float,float,float) t29
dcl_resource_texture2darray (float,float,float,float) t31
dcl_input_ps_siv linear noperspective v0.xyzw, position
dcl_input_ps linear v1.yz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xy
dcl_input_ps linear v6.z
dcl_input_ps linear v7.xyzw
dcl_input_ps linear v8.xyzw
dcl_input_ps linear v9.xy
dcl_input_ps linear v10.xyzw
dcl_output o0.xyzw
dcl_temps 44
sample_indexable(texture2d)(float,float,float,float) r0.xy, v9.xyxx, t21.xyzw, s3
mad r0.xy, r0.xyxx, cb0[19].xxxx, cb0[19].yyyy
sample_indexable(texture2d)(float,float,float,float) r1.xy, v10.xyxx, t24.xyzw, s3
sample_indexable(texture2d)(float,float,float,float) r1.zw, v10.zwzz, t24.zwxy, s3
mad r1.xyzw, r1.xyzw, cb0[19].zzzz, cb0[19].wwww
add r0.zw, r1.zzzw, r1.xxxy
add r0.xy, r0.zwzz, r0.xyxx
mov r0.z, -r0.y
mov r0.w, l(1.000000)
dp3 r0.y, r0.xzwx, r0.xzwx
rsq r0.y, r0.y
mul r1.xyz, r0.yyyy, r0.xzwx
mul r0.xz, r1.xxyx, cb0[15].wwww
mad r2.xy, r1.xyxx, cb0[15].zzzz, v1.yzyy
sample_indexable(texture2d)(float,float,float,float) r2.xyz, r2.xyxx, t22.xyzw, s6
add r3.xyz, -cb0[25].xyzx, cb0[26].xyzx
mad r3.xyz, r2.xxxx, r3.xyzx, cb0[25].xyzx
add r4.xyz, -cb0[27].xyzx, cb0[28].xyzx
mad r4.xyz, r2.xxxx, r4.xyzx, cb0[27].xyzx
mad r0.xz, r0.xxzx, r2.yyyy, v6.xxyx
sample_indexable(texture2d)(float,float,float,float) r0.xzw, r0.xzxx, t0.xwyz, s1
dp3 r2.x, v5.xyzx, v5.xyzx
rsq r2.w, r2.x
mul r5.xyz, r2.wwww, v5.xyzx
dp3_sat r2.w, r1.xyzx, -r5.xyzx
add r2.w, -r2.w, l(1.000000)
mul r3.w, r2.w, r2.w
mul r3.w, r3.w, r3.w
mul r2.w, r2.w, r3.w
mad r2.w, cb0[14].w, r2.w, cb0[14].z
add r3.xyz, r3.xyzx, -r4.xyzx
mad r3.xyz, r2.wwww, r3.xyzx, r4.xyzx
if_nz cb0[43].x
  sample_indexable(texture2d)(float,float,float,float) r2.w, v7.xyxx, t25.yzwx, s6
  sample_indexable(texture2d)(float,float,float,float) r3.w, v7.zwzz, t25.yzwx, s6
  sample_indexable(texture2d)(float,float,float,float) r4.x, v8.xyxx, t25.xyzw, s6
  sample_indexable(texture2d)(float,float,float,float) r4.y, v8.zwzz, t25.yxzw, s6
  add r2.w, r2.w, r3.w
  add r2.w, r4.x, r2.w
  add r2.w, r4.y, r2.w
  mul r2.w, r2.w, cb0[35].x
  mad r2.z, cb0[34].z, r2.z, cb0[34].y
  add r2.z, r2.z, v6.z
  max r2.z, r2.z, cb0[34].w
  max r2.w, r2.w, l(0.000000)
  log r2.w, r2.w
  mul r2.z, r2.w, r2.z
  exp r2.z, r2.z
  add r4.xyz, -r3.xyzx, cb0[24].xyzx
  mad r3.xyz, r2.zzzz, r4.xyzx, r3.xyzx
  add r4.xyz, -r0.xzwx, cb0[24].xyzx
  mad r0.xzw, r2.zzzz, r4.xxyz, r0.xxzw
  add r2.w, -r2.z, l(1.000000)
  mul r2.w, r2.w, cb0[17].x
else 
  mov r2.w, cb0[17].x
endif 
ftou r4.xy, v0.xyxx
ge r3.w, v0.z, l(0.984375)
mul r4.z, v0.z, l(1.01587307)
mad r4.w, v0.z, l(64.000000), l(-63.000000)
movc r3.w, r3.w, r4.w, r4.z
max r3.w, r3.w, l(0.00000001)
rcp r3.w, r3.w
dp3 r4.z, -v5.xyzx, -v5.xyzx
rsq r4.z, r4.z
mul r6.xyz, r4.zzzz, -v5.xyzx
utof r7.xy, r4.yxyy
dp2 r4.w, r7.yxyy, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r4.w, r4.w
mul r4.w, r4.w, l(52.982918)
frc r4.w, r4.w
mad r4.w, r4.w, l(6.28318548), cb1[70].w
sincos r8.x, r9.x, r4.w
dp2 r4.w, r7.xyxx, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r4.w, r4.w
mul r4.w, r4.w, l(52.982918)
frc r4.w, r4.w
mad r4.w, r4.w, l(6.28318548), cb1[70].w
sincos r7.x, r10.x, r4.w
dp3_sat r4.w, r1.xyzx, r6.xyzx
dp3 r5.w, -r6.xyzx, r1.xyzx
add r5.w, r5.w, r5.w
mad r11.xyz, r1.xyzx, -r5.wwww, -r6.xyzx
add r5.w, -r2.w, l(1.000000)
mul r6.w, r5.w, l(5.000000)
mad r7.y, r5.w, l(5.000000), l(-2.500000)
mul_sat r7.y, r7.y, l(0.400000)
mul r7.y, r7.y, l(100.000000)
mad r7.zw, -r5.wwww, l(0.000000, 0.000000, 10.000000, 5.000000), l(0.000000, 0.000000, 6.857410, 7.085000)
exp r7.z, r7.z
mul r7.z, r4.w, r7.z
mul r8.z, r5.w, r6.w
mad r7.w, -r8.z, l(2.015905), r7.w
exp r7.w, r7.w
mul r7.w, r4.w, r7.w
mul r7.zw, r7.zzzw, l(0.000000, 0.000000, 9.136810, 9.708090)
max r7.z, r7.w, r7.z
max r7.z, r7.z, l(1.268160)
iadd r7.w, cb2[0].y, -cb2[58].x
mul r3.w, r3.w, l(0.00781250)
min r3.w, r3.w, l(15.000000)
ftou r3.w, r3.w
ushr r12.xy, r4.xyxx, l(6, 6, 0, 0)
ishl r12.z, r3.w, l(4)
and r3.w, r7.w, l(-32)
iadd r4.x, -r3.w, r7.w
and r4.y, cb2[0].y, l(-32)
iadd r8.z, -r4.y, cb2[0].y
mov r13.xy, l(0,0,0,0)
mov r14.w, l(0)
mov r15.yz, l(0,0,1.000000,0)
mov r16.xy, l(0,0,0,0)
mov r17.x, l(1.000000)
mov r18.xy, l(0,0,0,0)
mov r19.xy, l(0,0,0,0)
mov r20.xyzw, l(0,0,0,0)
mov r21.yzw, l(0,0,0,0)
mov r8.w, r3.w
loop 
  uge r9.w, r8.w, cb2[0].y
  breakc_nz r9.w
  ushr r13.z, r8.w, l(5)
  iadd r14.xyz, r12.xyzx, r13.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r9.w, r14.xyzw, t7.yzwx
  ieq r10.y, r3.w, r8.w
  bfi r10.z, r4.x, l(0), l(0), r9.w
  movc r9.w, r10.y, r10.z, r9.w
  ieq r10.y, r4.y, r8.w
  ubfe r10.z, r8.z, l(0), r9.w
  movc r9.w, r10.y, r10.z, r9.w
  iadd r10.y, r8.w, cb2[0].x
  mov r22.xyzw, r20.xyzw
  mov r23.xyz, r21.yzwy
  mov r10.z, r9.w
  loop 
    breakc_z r10.z
    firstbit_lo r10.w, r10.z
    ishl r12.w, l(1), r10.w
    and r13.z, r10.z, r12.w
    if_nz r13.z
      xor r10.z, r10.z, r12.w
      iadd r12.w, r10.w, r10.y
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r24.xyzw, r12.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r14.xy, r12.w, l(16), t11.xyxx
      add r24.xyz, r24.xyzx, -v5.xyzx
      mov r14.z, r24.w
      lt r14.xyz, |r24.xyzx|, r14.zxyz
      and r12.w, r14.y, r14.x
      and r12.w, r14.z, r12.w
      if_nz r12.w
        iadd r10.w, r8.w, r10.w
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r10.w, l(0), t15.wxyz
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r13.zw, r10.w, l(96), t15.xxxy
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r10.w, l(116), t15.zwxy
        add r14.xyz, -r24.yzwy, v5.xyzx
        and r12.w, r25.w, l(0x0000ffff)
        ubfe r15.w, l(6), l(25), r25.w
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r26.xyzw, r12.w, l(0), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r12.w, l(16), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r12.w, l(32), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r12.w, l(48), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r12.w, l(64), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r12.w, l(80), t16.xyzw
        dp3 r16.w, r26.xyzx, r14.xyzx
        add_sat r16.w, r26.w, r16.w
        dp3 r17.z, r27.xyzx, r14.xyzx
        add_sat r17.z, r27.w, r17.z
        mul r16.w, r16.w, r17.z
        dp3 r17.z, r28.xyzx, r14.xyzx
        add_sat r17.z, r28.w, r17.z
        mul r16.w, r16.w, r17.z
        dp3 r17.z, r29.xyzx, r14.xyzx
        add_sat r17.z, r29.w, r17.z
        mul r16.w, r16.w, r17.z
        dp3 r17.z, r30.xyzx, r14.xyzx
        add_sat r17.z, r30.w, r17.z
        mul r16.w, r16.w, r17.z
        dp3 r17.z, r31.xyzx, r14.xyzx
        add_sat r17.z, r31.w, r17.z
        mul r15.x, r16.w, r17.z
        and r16.w, r13.z, l(1)
        movc r17.zw, r16.wwww, r15.xxxy, r15.zzzx
        mov r15.x, r13.z
        mov r26.xy, r17.zwzz
        mov r16.w, l(1)
        loop 
          ige r18.w, r16.w, r15.w
          breakc_nz r18.w
          iadd r18.w, r12.w, r16.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r18.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r18.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r18.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r18.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r18.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r18.w, l(80), t16.xyzw
          dp3 r18.w, r27.xyzx, r14.xyzx
          add_sat r18.w, r27.w, r18.w
          mul r18.w, r18.w, r26.x
          dp3 r19.w, r28.xyzx, r14.xyzx
          add_sat r19.w, r28.w, r19.w
          mul r18.w, r18.w, r19.w
          dp3 r19.w, r29.xyzx, r14.xyzx
          add_sat r19.w, r29.w, r19.w
          mul r18.w, r18.w, r19.w
          dp3 r19.w, r30.xyzx, r14.xyzx
          add_sat r19.w, r30.w, r19.w
          mul r18.w, r18.w, r19.w
          dp3 r19.w, r31.xyzx, r14.xyzx
          add_sat r19.w, r31.w, r19.w
          mul r18.w, r18.w, r19.w
          dp3 r19.w, r32.xyzx, r14.xyzx
          add_sat r19.w, r32.w, r19.w
          mul r26.x, r18.w, r19.w
          ushr r24.w, r15.x, l(2)
          ubfe r26.z, l(1), l(2), r15.x
          and r26.w, r24.w, l(2)
          max r27.x, r26.x, r26.y
          mad r18.w, -r18.w, r19.w, l(1.000000)
          mul r18.w, r18.w, r26.y
          movc r17.y, r26.w, r18.w, r27.x
          movc r26.xy, r26.zzzz, r26.xyxx, r17.xyxx
          iadd r16.w, r16.w, l(1)
          mov r15.x, r24.w
        endloop 
        mov_sat r26.y, r26.y
        mul r12.w, r13.w, r26.y
        lt r13.z, l(0.000000), r12.w
        if_nz r13.z
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r10.w, l(16), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r10.w, l(32), t15.yxwz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r10.w, l(48), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r10.w, l(64), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r10.w, l(80), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r10.w, l(132), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r10.w, l(148), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r10.w, l(164), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r10.w, l(180), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r10.w, l(196), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xy, r10.w, l(212), t15.xyxx
          mad r23.z, r26.y, r13.w, r23.z
          mul r10.w, r25.z, r12.w
          mov r25.z, r32.z
          dp3 r12.w, r11.xyzx, r25.xyzx
          dp3 r13.z, r14.xyzx, r25.xyzx
          add r13.z, -r32.w, r13.z
          ge r13.w, r13.z, l(0.000000)
          max r13.z, r7.y, |r13.z|
          movc r13.z, r13.w, r13.z, -r13.z
          max r12.w, -r12.w, l(0.00000010)
          div r12.w, r13.z, r12.w
          min r12.w, |r12.w|, l(131072.000000)
          mov r32.z, r33.z
          dp3 r13.z, r11.xyzx, r32.xyzx
          dp3 r13.w, r14.xyzx, r32.xyzx
          add r13.w, -r33.w, r13.w
          ge r15.x, r13.w, l(0.000000)
          max r13.w, r7.y, |r13.w|
          movc r13.w, r15.x, r13.w, -r13.w
          max r13.z, -r13.z, l(0.00000010)
          div r13.z, r13.w, r13.z
          min r12.w, r12.w, |r13.z|
          mov r33.z, r34.z
          dp3 r13.z, r11.xyzx, r33.xyzx
          dp3 r13.w, r14.xyzx, r33.xyzx
          add r13.w, -r34.w, r13.w
          ge r15.x, r13.w, l(0.000000)
          max r13.w, r7.y, |r13.w|
          movc r13.w, r15.x, r13.w, -r13.w
          max r13.z, -r13.z, l(0.00000010)
          div r13.z, r13.w, r13.z
          min r12.w, r12.w, |r13.z|
          mov r34.z, r35.z
          dp3 r13.z, r11.xyzx, r34.xyzx
          dp3 r13.w, r14.xyzx, r34.xyzx
          add r13.w, -r35.w, r13.w
          ge r15.x, r13.w, l(0.000000)
          max r13.w, r7.y, |r13.w|
          movc r13.w, r15.x, r13.w, -r13.w
          max r13.z, -r13.z, l(0.00000010)
          div r13.z, r13.w, r13.z
          min r12.w, r12.w, |r13.z|
          mov r35.z, r36.x
          dp3 r13.z, r11.xyzx, r35.xyzx
          dp3 r13.w, r14.xyzx, r35.xyzx
          add r13.w, -r36.y, r13.w
          ge r15.x, r13.w, l(0.000000)
          max r13.w, r7.y, |r13.w|
          movc r13.w, r15.x, r13.w, -r13.w
          max r13.z, -r13.z, l(0.00000010)
          div r13.z, r13.w, r13.z
          min r12.w, r12.w, |r13.z|
          mov r37.zw, r36.zzzw
          dp3 r13.z, r11.zxyz, r37.xzwx
          dp3 r13.w, r14.zxyz, r37.xzwx
          add r13.w, -r37.y, r13.w
          ge r15.x, r13.w, l(0.000000)
          max r13.w, r7.y, |r13.w|
          movc r13.w, r15.x, r13.w, -r13.w
          max r13.z, -r13.z, l(0.00000010)
          div r13.z, r13.w, r13.z
          min r12.w, r12.w, |r13.z|
          mov r25.x, r29.w
          mov r25.yz, r30.zzwz
          add r17.yzw, r14.xxyz, r25.xxyz
          mad r17.yzw, r11.xxyz, r12.wwww, r17.yyzw
          dp3 r13.z, r17.yzwy, r17.yzwy
          sqrt r13.z, r13.z
          div r12.w, r12.w, r13.z
          add r12.w, r12.w, r12.w
          sqrt r12.w, r12.w
          mad r12.w, r5.w, l(5.000000), r12.w
          add r12.w, r12.w, l(-0.844800)
          mov r24.y, r27.z
          mov r24.z, r28.x
          dp3 r32.x, r17.yzwy, r24.xyzx
          mov r25.xy, r27.xwxx
          mov r25.z, r28.w
          dp3 r32.y, r17.yzwy, r25.xyzx
          mov r28.x, r27.y
          dp3 r32.z, r17.yzwy, r28.xyzx
          ubfe r13.z, l(9), l(16), r25.w
          utof r32.w, r13.z
          sample_l_indexable(texturecubearray)(float,float,float,float) r17.yzw, r32.xyzw, t8.wxyz, s2, r12.w
          dp3 r27.x, r14.xyzx, r24.xyzx
          dp3 r27.y, r14.xyzx, r25.xyzx
          dp3 r27.z, r14.xyzx, r28.xyzx
          mad_sat r14.xyz, r27.xyzx, r29.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
          mov r30.z, r31.x
          mad r14.xyz, r14.xyzx, r30.xyzx, r31.yzwy
          dp3 r32.x, r1.xyzx, r24.xyzx
          dp3 r32.y, r1.xyzx, r25.xyzx
          dp3 r32.z, r1.xyzx, r28.xyzx
          lt r24.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r32.xyzx
          movc r16.z, r24.x, l(0), l(0.500000)
          add r25.xyz, r14.xyzx, r16.xyzx
          sample_l_indexable(texture3d)(float,float,float,float) r25.xyz, r25.xyzx, t17.xyzw, s4, l(0.000000)
          mul r26.xzw, r32.xxyz, r32.xxyz
          mul r26.xzw, r10.wwww, r26.xxzw
          movc r18.z, r24.y, l(0), l(0.500000)
          add r24.xyw, r14.xyxz, r18.xyxz
          sample_l_indexable(texture3d)(float,float,float,float) r24.xyw, r24.xywx, t18.xywz, s4, l(0.000000)
          mul r24.xyw, r26.zzzz, r24.xyxw
          mad r24.xyw, r25.xyxz, r26.xxxx, r24.xyxw
          movc r19.z, r24.z, l(0), l(0.500000)
          add r14.xyz, r14.xyzx, r19.xyzx
          sample_l_indexable(texture3d)(float,float,float,float) r14.xyz, r14.xyzx, t19.xyzw, s4, l(0.000000)
          mad r14.xyz, r14.xyzx, r26.wwww, r24.xywx
          sample_l_indexable(texturecubearray)(float,float,float,float) r24.xyz, r32.xyzw, t8.xyzw, s2, l(6.000000)
          mul r25.xyz, r14.xyzx, r24.xyzx
          dp3 r12.w, r25.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r22.xyz, r14.xyzx, r24.xyzx, r22.xyzx
          mul r13.z, r7.z, r12.w
          mul r14.xyz, r10.wwww, r17.yzwy
          dp3 r10.w, r14.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r10.w, r7.z, r12.w, r10.w
          div r10.w, r13.z, r10.w
          mov r24.x, r22.w
          mov r24.yz, r23.xxyx
          mad r23.xyw, r14.yzyx, r10.wwww, r24.yzyx
          mov r22.w, r23.w
        endif 
      endif 
    endif 
  endloop 
  mov r20.xyzw, r22.xyzw
  mov r21.yzw, r23.xxyz
  iadd r8.w, r8.w, l(32)
endloop 
lt r4.y, r21.w, l(1.000000)
if_nz r4.y
  mov r13.xy, l(0,0,0,0)
  mov r14.w, l(0)
  mov r15.yz, l(0,0,1.000000,0)
  mov r16.xy, l(0,0,0,0)
  mov r17.x, l(1.000000)
  mov r18.xy, l(0,0,0,0)
  mov r19.xy, l(0,0,0,0)
  mov r22.x, r20.w
  mov r22.yzw, r21.yyzw
  mov r10.yzw, r20.xxyz
  mov r4.y, r21.w
  mov r8.z, l(0)
  loop 
    uge r8.w, r8.z, r7.w
    breakc_nz r8.w
    ushr r13.z, r8.z, l(5)
    iadd r14.xyz, r12.xyzx, r13.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r8.w, r14.xyzw, t7.yzwx
    ieq r9.w, r3.w, r8.z
    ubfe r12.w, r4.x, l(0), r8.w
    movc r8.w, r9.w, r12.w, r8.w
    iadd r9.w, r8.z, cb2[0].x
    mov r23.xyzw, r22.xyzw
    mov r14.xyz, r10.yzwy
    mov r12.w, r4.y
    mov r13.z, r8.w
    loop 
      breakc_z r13.z
      firstbit_lo r13.w, r13.z
      ishl r15.w, l(1), r13.w
      and r16.w, r13.z, r15.w
      if_nz r16.w
        xor r13.z, r13.z, r15.w
        iadd r15.w, r9.w, r13.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r24.xyzw, r15.w, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r25.xy, r15.w, l(16), t11.xyxx
        add r24.xyz, r24.xyzx, -v5.xyzx
        mov r25.z, r24.w
        lt r24.xyz, |r24.xyzx|, r25.zxyz
        and r15.w, r24.y, r24.x
        and r15.w, r24.z, r15.w
        if_nz r15.w
          iadd r13.w, r8.z, r13.w
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r13.w, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r17.zw, r13.w, l(96), t15.xxxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r13.w, l(116), t15.zwxy
          add r26.xyz, -r24.yzwy, v5.xyzx
          and r15.w, r25.w, l(0x0000ffff)
          ubfe r16.w, l(6), l(25), r25.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r15.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r15.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r15.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r15.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r15.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r15.w, l(80), t16.xyzw
          dp3 r18.w, r27.xyzx, r26.xyzx
          add_sat r18.w, r27.w, r18.w
          dp3 r19.w, r28.xyzx, r26.xyzx
          add_sat r19.w, r28.w, r19.w
          mul r18.w, r18.w, r19.w
          dp3 r19.w, r29.xyzx, r26.xyzx
          add_sat r19.w, r29.w, r19.w
          mul r18.w, r18.w, r19.w
          dp3 r19.w, r30.xyzx, r26.xyzx
          add_sat r19.w, r30.w, r19.w
          mul r18.w, r18.w, r19.w
          dp3 r19.w, r31.xyzx, r26.xyzx
          add_sat r19.w, r31.w, r19.w
          mul r18.w, r18.w, r19.w
          dp3 r19.w, r32.xyzx, r26.xyzx
          add_sat r19.w, r32.w, r19.w
          mul r15.x, r18.w, r19.w
          and r18.w, r17.z, l(1)
          movc r27.xy, r18.wwww, r15.xyxx, r15.zxzz
          mov r15.x, r17.z
          mov r28.xy, r27.xyxx
          mov r18.w, l(1)
          loop 
            ige r19.w, r18.w, r16.w
            breakc_nz r19.w
            iadd r19.w, r15.w, r18.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r19.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r19.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r19.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r19.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r19.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r19.w, l(80), t16.xyzw
            dp3 r19.w, r29.xyzx, r26.xyzx
            add_sat r19.w, r29.w, r19.w
            mul r19.w, r19.w, r28.x
            dp3 r24.w, r30.xyzx, r26.xyzx
            add_sat r24.w, r30.w, r24.w
            mul r19.w, r19.w, r24.w
            dp3 r24.w, r31.xyzx, r26.xyzx
            add_sat r24.w, r31.w, r24.w
            mul r19.w, r19.w, r24.w
            dp3 r24.w, r32.xyzx, r26.xyzx
            add_sat r24.w, r32.w, r24.w
            mul r19.w, r19.w, r24.w
            dp3 r24.w, r33.xyzx, r26.xyzx
            add_sat r24.w, r33.w, r24.w
            mul r19.w, r19.w, r24.w
            dp3 r24.w, r34.xyzx, r26.xyzx
            add_sat r24.w, r34.w, r24.w
            mul r28.x, r19.w, r24.w
            ushr r26.w, r15.x, l(2)
            ubfe r27.z, l(1), l(2), r15.x
            and r27.w, r26.w, l(2)
            max r28.z, r28.x, r28.y
            mad r19.w, -r19.w, r24.w, l(1.000000)
            mul r19.w, r19.w, r28.y
            movc r17.y, r27.w, r19.w, r28.z
            movc r28.xy, r27.zzzz, r28.xyxx, r17.xyxx
            iadd r18.w, r18.w, l(1)
            mov r15.x, r26.w
          endloop 
          add_sat r15.x, -r12.w, r28.y
          mul r15.w, r17.w, r15.x
          lt r16.w, l(0.000000), r15.w
          if_nz r16.w
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r13.w, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r13.w, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r13.w, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r13.w, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r13.w, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r13.w, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r13.w, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r13.w, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r13.w, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r13.w, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xy, r13.w, l(212), t15.xyxx
            mad r23.w, r15.x, r17.w, r23.w
            mul r13.w, r25.z, r15.w
            mov r25.z, r33.z
            dp3 r15.x, r11.xyzx, r25.xyzx
            dp3 r15.w, r26.xyzx, r25.xyzx
            add r15.w, -r33.w, r15.w
            ge r16.w, r15.w, l(0.000000)
            max r15.w, r7.y, |r15.w|
            movc r15.w, r16.w, r15.w, -r15.w
            max r15.x, -r15.x, l(0.00000010)
            div r15.x, r15.w, r15.x
            min r15.x, |r15.x|, l(131072.000000)
            mov r33.z, r34.z
            dp3 r15.w, r11.xyzx, r33.xyzx
            dp3 r16.w, r26.xyzx, r33.xyzx
            add r16.w, -r34.w, r16.w
            ge r17.y, r16.w, l(0.000000)
            max r16.w, r7.y, |r16.w|
            movc r16.w, r17.y, r16.w, -r16.w
            max r15.w, -r15.w, l(0.00000010)
            div r15.w, r16.w, r15.w
            min r15.x, |r15.w|, r15.x
            mov r34.z, r35.z
            dp3 r15.w, r11.xyzx, r34.xyzx
            dp3 r16.w, r26.xyzx, r34.xyzx
            add r16.w, -r35.w, r16.w
            ge r17.y, r16.w, l(0.000000)
            max r16.w, r7.y, |r16.w|
            movc r16.w, r17.y, r16.w, -r16.w
            max r15.w, -r15.w, l(0.00000010)
            div r15.w, r16.w, r15.w
            min r15.x, |r15.w|, r15.x
            mov r35.z, r36.z
            dp3 r15.w, r11.xyzx, r35.xyzx
            dp3 r16.w, r26.xyzx, r35.xyzx
            add r16.w, -r36.w, r16.w
            ge r17.y, r16.w, l(0.000000)
            max r16.w, r7.y, |r16.w|
            movc r16.w, r17.y, r16.w, -r16.w
            max r15.w, -r15.w, l(0.00000010)
            div r15.w, r16.w, r15.w
            min r15.x, |r15.w|, r15.x
            mov r36.z, r37.x
            dp3 r15.w, r11.xyzx, r36.xyzx
            dp3 r16.w, r26.xyzx, r36.xyzx
            add r16.w, -r37.y, r16.w
            ge r17.y, r16.w, l(0.000000)
            max r16.w, r7.y, |r16.w|
            movc r16.w, r17.y, r16.w, -r16.w
            max r15.w, -r15.w, l(0.00000010)
            div r15.w, r16.w, r15.w
            min r15.x, |r15.w|, r15.x
            mov r38.zw, r37.zzzw
            dp3 r15.w, r11.zxyz, r38.xzwx
            dp3 r16.w, r26.zxyz, r38.xzwx
            add r16.w, -r38.y, r16.w
            ge r17.y, r16.w, l(0.000000)
            max r16.w, r7.y, |r16.w|
            movc r16.w, r17.y, r16.w, -r16.w
            max r15.w, -r15.w, l(0.00000010)
            div r15.w, r16.w, r15.w
            min r15.x, |r15.w|, r15.x
            mov r25.x, r30.w
            mov r25.yz, r31.zzwz
            add r17.yzw, r26.xxyz, r25.xxyz
            mad r17.yzw, r11.xxyz, r15.xxxx, r17.yyzw
            dp3 r15.w, r17.yzwy, r17.yzwy
            sqrt r15.w, r15.w
            div r15.x, r15.x, r15.w
            add r15.x, r15.x, r15.x
            sqrt r15.x, r15.x
            mad r15.x, r5.w, l(5.000000), r15.x
            add r15.x, r15.x, l(-0.844800)
            mov r24.y, r27.z
            mov r24.z, r29.x
            dp3 r33.x, r17.yzwy, r24.xyzx
            mov r25.xy, r27.xwxx
            mov r25.z, r29.w
            dp3 r33.y, r17.yzwy, r25.xyzx
            mov r29.x, r27.y
            dp3 r33.z, r17.yzwy, r29.xyzx
            ubfe r15.w, l(9), l(16), r25.w
            utof r33.w, r15.w
            sample_l_indexable(texturecubearray)(float,float,float,float) r17.yzw, r33.xyzw, t8.wxyz, s2, r15.x
            dp3 r27.x, r26.xyzx, r24.xyzx
            dp3 r27.y, r26.xyzx, r25.xyzx
            dp3 r27.z, r26.xyzx, r29.xyzx
            mad_sat r26.xyz, r27.xyzx, r30.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
            mov r31.z, r32.x
            mad r26.xyz, r26.xyzx, r31.xyzx, r32.yzwy
            dp3 r33.x, r1.xyzx, r24.xyzx
            dp3 r33.y, r1.xyzx, r25.xyzx
            dp3 r33.z, r1.xyzx, r29.xyzx
            lt r24.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r33.xyzx
            movc r16.z, r24.x, l(0), l(0.500000)
            add r25.xyz, r16.xyzx, r26.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r25.xyz, r25.xyzx, t17.xyzw, s4, l(0.000000)
            mul r27.xyz, r33.xyzx, r33.xyzx
            mul r27.xyz, r13.wwww, r27.xyzx
            movc r18.z, r24.y, l(0), l(0.500000)
            add r24.xyw, r18.xyxz, r26.xyxz
            sample_l_indexable(texture3d)(float,float,float,float) r24.xyw, r24.xywx, t18.xywz, s4, l(0.000000)
            mul r24.xyw, r27.yyyy, r24.xyxw
            mad r24.xyw, r25.xyxz, r27.xxxx, r24.xyxw
            movc r19.z, r24.z, l(0), l(0.500000)
            add r25.xyz, r19.xyzx, r26.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r25.xyz, r25.xyzx, t19.xyzw, s4, l(0.000000)
            mad r24.xyz, r25.xyzx, r27.zzzz, r24.xywx
            sample_l_indexable(texturecubearray)(float,float,float,float) r25.xyz, r33.xyzw, t8.xyzw, s2, l(6.000000)
            mul r26.xyz, r24.xyzx, r25.xyzx
            dp3 r15.x, r26.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r14.xyz, r24.xyzx, r25.xyzx, r14.xyzx
            mul r15.w, r7.z, r15.x
            mul r17.yzw, r13.wwww, r17.yyzw
            dp3 r13.w, r17.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r13.w, r7.z, r15.x, r13.w
            div r13.w, r15.w, r13.w
            mad r23.xyz, r17.yzwy, r13.wwww, r23.xyzx
          endif 
        endif 
      endif 
    endloop 
    mov r22.xyzw, r23.xyzw
    mov r10.yzw, r14.xxyz
    iadd r8.z, r8.z, l(32)
  endloop 
  mov r21.xyzw, r22.zxyw
  mov r20.xyz, r10.yzwy
  mov r21.xyzw, r21.yzxw
else 
  mov r21.x, r20.w
endif 
max r3.w, r21.w, l(1.000000)
rcp r3.w, r3.w
mov_sat r21.w, r21.w
mul r7.yzw, r3.wwww, r20.xxyz
mul r10.yzw, r3.wwww, r21.xxyz
lt r4.x, r21.w, l(0.990000)
if_nz r4.x
  add r4.x, -r21.w, l(1.000000)
  mul r4.y, r4.x, cb2[19].x
  add r13.xyz, v5.xyzx, -cb2[35].xyzx
  mul r14.x, r13.x, cb2[35].w
  mul r14.yz, r13.yyzy, cb2[36].xxyx
  add_sat r13.xyz, r14.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mul r14.xy, r13.xyxx, cb2[36].zwzz
  mul r14.z, r13.z, cb2[37].x
  add r13.xyz, r14.xyzx, cb2[37].yzwy
  lt r8.zw, l(0.000000, 0.000000, 0.000000, 0.000000), r1.xxxy
  movc r14.xy, r8.zwzz, l(0,0,0,0), l(0.500000,0.500000,0,0)
  mov r14.z, l(0)
  add r15.xyz, r13.xyzx, r14.zzxz
  sample_l_indexable(texture3d)(float,float,float,float) r15.xyz, r15.xyzx, t17.xyzw, s4, l(0.000000)
  mul r16.xyz, r1.xyzx, r1.xyzx
  mul r16.xyz, r4.yyyy, r16.xyzx
  add r14.xyz, r13.xyzx, r14.zzyz
  sample_l_indexable(texture3d)(float,float,float,float) r14.xyz, r14.xyzx, t18.xyzw, s4, l(0.000000)
  mul r14.xyz, r16.yyyy, r14.xyzx
  mad r14.xyz, r15.xyzx, r16.xxxx, r14.xyzx
  lt r0.y, l(0.000000), r0.y
  movc r15.z, r0.y, l(0), l(0.500000)
  mov r15.xy, l(0,0,0,0)
  add r13.xyz, r13.xyzx, r15.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r13.xyz, r13.xyzx, t19.xyzw, s4, l(0.000000)
  mad r13.xyz, r13.xyzx, r16.zzzz, r14.xyzx
  mov r1.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r14.xyz, r1.xyzw, t8.xyzw, s2, l(6.000000)
  mul r13.xyz, r13.xyzx, r14.xyzx
  dp3 r0.y, r13.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  mad r7.yzw, r20.xxyz, r3.wwww, r13.xxyz
  mov r11.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r11.xyz, r11.xyzw, t8.xyzw, s2, r6.w
  mad r1.w, cb2[19].x, r4.x, -r0.y
  mad r0.y, r2.w, r1.w, r0.y
  mad r10.yzw, r11.xxyz, r0.yyyy, r10.yyzw
endif 
mul r10.yzw, r10.yyzw, cb0[17].yyyy
if_nz cb0[43].w
  dp3 r0.y, r5.xyzx, r1.xyzx
  add r0.y, r0.y, r0.y
  mad r11.xyz, r1.xyzx, -r0.yyyy, r5.xyzx
  ftoi r13.xy, v0.xyxx
  mov r13.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r0.y, r13.xyzw, t26.yxzw
  ge r1.w, r0.y, l(0.984375)
  mul r2.w, r0.y, l(1.01587307)
  mad r0.y, r0.y, l(64.000000), l(-63.000000)
  movc r0.y, r1.w, r0.y, r2.w
  max r0.y, r0.y, l(0.00000001)
  rcp r0.y, r0.y
  add r0.y, r0.y, -v0.w
  max r0.y, r0.y, l(0.000000)
  min r0.y, r0.y, cb0[44].x
  mov r11.w, |r11.z|
  mad r11.xyz, r11.xywx, r0.yyyy, v5.xyzx
  mul r13.xyz, r11.yyyy, cb1[9].xywx
  mad r11.xyw, r11.xxxx, cb1[8].xyxw, r13.xyxz
  mad r11.xyz, r11.zzzz, cb1[10].xywx, r11.xywx
  add r11.xyz, r11.xyzx, cb1[11].xywx
  div r4.xy, r11.xyxx, r11.zzzz
  max r0.y, |r4.y|, |r4.x|
  mad r4.xy, r4.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  mul r8.zw, r4.xxxy, cb1[44].xxxy
  ftoi r11.xy, r8.zwzz
  mov r11.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r1.w, r11.xyzw, t26.yzwx
  ge r2.w, r1.w, l(0.984375)
  mul r3.w, r1.w, l(1.01587307)
  mad r1.w, r1.w, l(64.000000), l(-63.000000)
  movc r1.w, r2.w, r1.w, r3.w
  max r1.w, r1.w, l(0.00000001)
  rcp r1.w, r1.w
  ge r1.w, r1.w, v0.w
  lt r0.y, r0.y, l(1.000000)
  and r0.y, r0.y, r1.w
  sample_indexable(texture2d)(float,float,float,float) r11.xyz, r4.xyxx, t29.xyzw, s5
  if_nz r0.y
    mul r11.xyz, r11.xyzx, cb1[85].xxxx
    mul r11.xyz, r11.xyzx, cb0[18].xxxx
    mad r0.y, -r2.z, l(0.500000), l(1.000000)
    mul r10.yzw, r0.yyyy, r11.xxyz
  endif 
endif 
dp3 r0.y, r1.xyzx, cb2[17].xyzx
mov_sat r1.w, r0.y
ge r2.z, l(0.000000), r1.w
if_nz r2.z
  mov r2.w, l(0)
endif 
if_z r2.z
  mul r11.xyz, v5.yyyy, cb2[29].xyzx
  mad r11.xyz, v5.xxxx, cb2[28].xyzx, r11.xyzx
  mad r11.xyz, v5.zzzz, cb2[30].xyzx, r11.xyzx
  add r11.xyz, r11.xyzx, cb2[31].xyzx
  add r2.z, r11.z, -cb2[17].w
  mad r2.z, -r2.z, l(0.00006104), l(1.000000)
  mov_sat r3.w, r2.z
  eq r3.w, r2.z, r3.w
  if_nz r3.w
    mov r3.w, l(0)
    mov r4.x, l(0)
    loop 
      ge r4.y, r3.w, l(3.000000)
      breakc_nz r4.y
      ftou r4.y, r3.w
      add r8.zw, r11.xxxy, -cb2[r4.y + 20].xxxy
      max r5.w, |r8.w|, |r8.z|
      mul r4.x, r5.w, cb2[r4.y + 20].z
      lt r4.y, r4.x, l(1.000000)
      if_nz r4.y
        break 
      endif 
      add r3.w, r3.w, l(1.000000)
      mov r4.x, l(0)
    endloop 
  else 
    mov r3.w, l(3.000000)
    mov r4.x, l(0)
  endif 
  ge r4.y, r3.w, l(3.000000)
  if_nz r4.y
    mul r13.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
    rcp r14.xz, r13.xxxx
    mov r14.y, -r14.z
    mad r13.xyz, r11.xyxx, r14.xyzx, r13.yzyy
    add r14.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r13.xyz, r13.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r13.xyz, r14.xyzx, r13.xyzx
    mul r8.zw, r13.zzzy, cb2[32].xxxx
    round_ni r8.zw, r8.zzzw
    mul r5.w, r8.w, cb2[27].x
    mad r5.w, r5.w, cb2[32].x, r8.z
    ftou r5.w, r5.w
    iadd r5.w, r5.w, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r6.w, r5.w, l(0), t23.xxxx
    and r8.z, r6.w, l(0x40000000)
    ishl r8.w, r6.w, l(2)
    if_z r8.z
      and r8.z, r6.w, l(0x01ffffff)
      iadd r14.x, r5.w, r8.z
      ushr r5.w, r6.w, l(25)
      utof r5.w, r5.w
      mul r13.xyz, r5.wwww, r13.xyzx
      frc r13.xyz, r13.xyzx
      mul r13.xyz, r13.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
      ftou r13.xyz, r13.xyzx
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r14.z, r14.x, l(0), t23.xxxx
      ushr r15.xy, r13.zyzz, l(6, 6, 0, 0)
      and r5.w, r14.z, l(0xc0000000)
      iadd r6.w, r14.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r6.w, r6.w, l(0), t23.xxxx
      movc r6.w, r15.y, r14.z, r6.w
      ushr r8.z, r6.w, l(13)
      movc r6.w, r15.x, r8.z, r6.w
      and r6.w, r6.w, l(8191)
      iadd r15.x, r6.w, r14.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.z, r15.x, l(0), t23.xxxx
      mov r14.y, l(0)
      mov r15.y, l(1)
      movc r15.xyz, r5.wwww, r14.xyzx, r15.xyzx
      movc r16.yz, r5.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r17.xy, r13.zyzz, r16.yyyy
      and r17.xy, r17.xyxx, l(1, 1, 0, 0)
      and r6.w, r15.z, l(0xc0000000)
      iadd r8.z, r15.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r8.z, r8.z, l(0), t23.xxxx
      movc r8.z, r17.y, r15.z, r8.z
      ushr r9.w, r8.z, l(13)
      movc r8.z, r17.x, r9.w, r8.z
      and r8.z, r8.z, l(8191)
      iadd r16.x, r8.z, r15.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.w, r16.x, l(0), t23.xxxx
      movc r15.xyz, r6.wwww, r15.xyzx, r16.xzwx
      movc r14.xyz, r5.wwww, r14.xyzx, r15.xyzx
      and r5.w, r14.z, l(0xc0000000)
      if_z r5.w
        iadd r5.w, -r14.y, l(6)
        ushr r15.xy, r13.zyzz, r5.wwww
        or r5.w, r14.z, l(0x40000000)
        bfi r6.w, l(1), l(1), r15.y, l(0)
        bfi r6.w, l(1), l(0), r15.x, r6.w
        imul null, r6.w, r6.w, l(10)
        ushr r5.w, r5.w, r6.w
        and r5.w, r5.w, l(1023)
        iadd r15.x, r5.w, r14.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.w, r15.x, l(0), t23.xxxx
        iadd r15.yz, r14.yyyy, l(0, 1, 2, 0)
        iadd r5.w, -r15.y, l(6)
        ushr r14.yw, r13.zzzy, r5.wwww
        and r5.w, r15.w, l(0xc0000000)
        or r6.w, r15.w, l(0x40000000)
        bfi r8.z, l(1), l(1), r14.w, l(0)
        bfi r8.z, l(1), l(0), r14.y, r8.z
        imul null, r8.z, r8.z, l(10)
        ushr r6.w, r6.w, r8.z
        and r6.w, r6.w, l(1023)
        iadd r16.x, r6.w, r15.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.z, r16.x, l(0), t23.xxxx
        mov r16.y, r15.z
        movc r16.xyz, r5.wwww, r15.xywx, r16.xyzx
        iadd r6.w, -r16.y, l(6)
        ushr r14.yw, r13.zzzy, r6.wwww
        and r6.w, r16.z, l(0xc0000000)
        or r8.z, r16.z, l(0x40000000)
        bfi r9.w, l(1), l(1), r14.w, l(0)
        bfi r9.w, l(1), l(0), r14.y, r9.w
        imul null, r9.w, r9.w, l(10)
        ushr r8.z, r8.z, r9.w
        and r8.z, r8.z, l(1023)
        iadd r17.x, r8.z, r16.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.y, r17.x, l(0), t23.xxxx
        movc r14.yw, r6.wwww, r16.xxxz, r17.xxxy
        movc r14.xz, r5.wwww, r15.xxwx, r14.yywy
      endif 
      and r5.w, r14.z, l(0xc0000000)
      if_z r5.w
        ubfe r6.w, l(14), l(15), r14.z
        utof r6.w, r6.w
        mul r6.w, r6.w, cb2[27].w
        mul r6.w, r6.w, l(0.00006104)
        and r14.yw, r14.zzzz, l(0, 0x00007fff, 0, 0x20000000)
        utof r8.z, r14.y
        mul r8.z, r8.z, cb2[27].w
        mul r8.z, r8.z, l(0.00003052)
        and r9.w, r13.y, l(3)
        iadd r9.w, r9.w, r14.x
        iadd r9.w, r9.w, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r9.w, r9.w, l(0), t23.xxxx
        bfi r13.xyw, l(2, 2, 0, 1), l(3, 1, 0, 4), r13.xyxz, l(0, 0, 0, 0)
        ushr r9.w, r9.w, r13.x
        and r9.w, r9.w, l(255)
        utof r9.w, r9.w
        mul r9.w, r8.z, r9.w
        mad r9.w, r9.w, l(0.00392157), r6.w
        iadd r11.w, r13.y, l(1)
        ubfe r12.w, l(1), l(1), r13.z
        iadd r11.w, r11.w, r12.w
        iadd r11.w, r11.w, r14.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r11.w, r11.w, l(0), t23.xxxx
        ushr r11.w, r11.w, r13.w
        and r11.w, r11.w, l(0x0000ffff)
        utof r11.w, r11.w
        mul r8.z, r8.z, r11.w
        mad r6.w, r8.z, l(0.00001526), r6.w
        movc r8.w, r14.w, r9.w, r6.w
      else 
        and r6.w, r14.z, l(0x80000000)
        iadd r8.z, r14.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r8.z, r8.z, l(0), t23.xxxx
        movc r6.w, r6.w, r8.z, l(0)
        ishl r8.z, r14.z, l(2)
        ushr r9.w, r6.w, l(16)
        f16tof32 r9.w, r9.w
        and r6.w, r6.w, l(0x0000ffff)
        f16tof32 r6.w, r6.w
        mad r8.z, r11.x, r9.w, r8.z
        mad r6.w, r11.y, r6.w, r8.z
        movc r8.w, r5.w, r6.w, r8.w
      endif 
    endif 
    mad r5.w, -cb2[27].z, l(2.000000), r11.z
    lt r5.w, r8.w, r5.w
    movc r2.w, r5.w, l(0), l(1.000000)
  endif 
  if_z r4.y
    if_z cb2[58].y
      ftou r4.y, r3.w
      add r8.zw, r11.xxxy, -cb2[r4.y + 20].xxxy
      mul r8.zw, r8.zzzw, cb2[r4.y + 20].zzzz
      mad r13.xy, r8.zwzz, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r4.y, cb2[26].y
      add r13.z, r3.w, r4.y
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r4.y, r13.xyzx, t13.xxxx, s13, r2.z
      sample_l_indexable(texture2darray)(float,float,float,float) r5.w, r13.xyzx, t31.yzwx, s0, l(0.000000)
      add r4.y, r4.y, r5.w
      add_sat r4.y, r4.y, l(-1.000000)
      mul r5.w, r4.y, r4.y
      mul r2.w, r4.y, r5.w
    endif 
    if_nz cb2[58].y
      mov r13.x, -r8.x
      ftou r4.y, r3.w
      add r3.w, r3.w, l(1.000000)
      min r3.w, r3.w, l(2.000000)
      ftou r3.w, r3.w
      add r4.x, -r4.x, l(1.000000)
      mul r4.x, r4.x, l(28.000000)
      ftou r4.x, r4.x
      add r8.zw, r11.xxxy, -cb2[r4.y + 20].xxxy
      mul r8.zw, r8.zzzw, cb2[r4.y + 20].zzzz
      mad r8.zw, r8.zzzw, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
      add r11.xy, r11.xyxx, -cb2[r3.w + 20].xyxx
      mul r11.xy, r11.xyxx, cb2[r3.w + 20].zzzz
      mad r11.xy, r11.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      mov r13.y, r9.x
      mov r13.z, r8.x
      mov r5.w, l(0)
      mov r6.w, l(0)
      loop 
        uge r9.w, r6.w, l(8)
        breakc_nz r9.w
        ult r9.w, r4.x, r6.w
        movc r11.zw, r9.wwww, r11.xxxy, r8.zzzw
        movc r12.w, r9.w, cb2[r3.w + 20].w, cb2[r4.y + 20].w
        movc r9.w, r9.w, r3.w, r4.y
        dp2 r14.x, icb[r6.w + 0].yxyy, r13.xyxx
        dp2 r14.y, icb[r6.w + 0].yxyy, r13.yzyy
        mad r14.xy, r14.xyxx, r12.wwww, r11.zwzz
        iadd r9.w, r9.w, cb2[26].y
        utof r14.z, r9.w
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r9.w, r14.xyzx, t13.xxxx, s13, r2.z
        sample_l_indexable(texture2darray)(float,float,float,float) r11.z, r14.xyzx, t31.yzxw, s0, l(0.000000)
        add r9.w, r9.w, r11.z
        add_sat r9.w, r9.w, l(-1.000000)
        mad r5.w, r9.w, l(0.125000), r5.w
        iadd r6.w, r6.w, l(1)
      endloop 
      mul r2.z, r5.w, r5.w
      mul r2.w, r5.w, r2.z
    endif 
  endif 
endif 
and r2.z, cb2[53].x, l(0x0000ffff)
if_nz r2.z
  iadd r2.z, r2.z, cb2[0].x
  iadd r2.z, r2.z, l(-1)
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r3.w, r2.z, l(52), t12.xxxx
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r11.xyzw, r2.z, l(68), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.xyzw, r2.z, l(84), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.xyzw, r2.z, l(132), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r2.z, l(148), t12.xyzw
  mad r0.y, |r0.y|, l(-0.200000), l(0.400000)
  mad r16.xyz, r1.xyzx, r0.yyyy, v5.xyzx
  mov r16.w, l(1.000000)
  dp4 r4.x, r11.xyzw, r16.xyzw
  dp4 r4.y, r13.xyzw, r16.xyzw
  mad r4.xy, r4.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  add r4.xy, r15.zwzz, r4.xyxx
  mul r4.xy, r15.xyxx, r4.xyxx
  div r8.zw, r3.wwww, r14.xxxz
  add r11.xy, -r8.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
  ge r11.xy, r4.xyxx, r11.xyxx
  ge r8.zw, r8.zzzw, r4.xxxy
  or r8.zw, r8.zzzw, r11.xxxy
  or r0.y, r8.w, r8.z
  if_z r0.y
    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r0.y, r2.z, l(28), t12.xxxx
    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r11.xyzw, r2.z, l(100), t12.xyzw
    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r8.zw, r2.z, l(164), t12.xxxy
    dp4 r2.z, r11.xyzw, r16.xyzw
    mov_sat r4.xy, r4.xyxx
    mad r11.xy, r4.xyxx, r14.xzxx, r14.ywyy
    add r2.z, r8.z, r2.z
    div r2.z, r2.z, r8.w
    max r2.z, r2.z, l(0.00006104)
    and r0.y, r0.y, l(0x0000ffff)
    if_nz cb2[58].y
      mov r13.x, -r8.x
      utof r14.z, r0.y
      mov r13.y, r9.x
      mov r13.z, r8.x
      mov r4.xy, l(0,0,0,0)
      loop 
        ige r5.w, r4.y, l(8)
        breakc_nz r5.w
        dp2 r15.x, icb[r4.y + 0].yxyy, r13.xyxx
        dp2 r15.y, icb[r4.y + 0].yxyy, r13.yzyy
        mad r14.xy, r15.xyxx, r3.wwww, r11.xyxx
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r5.w, r14.xyzx, t9.xxxx, s13, r2.z
        mad r4.x, r5.w, l(0.125000), r4.x
        iadd r4.y, r4.y, l(1)
      endloop 
    else 
      utof r11.z, r0.y
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r4.x, r11.xyzx, t9.xxxx, s13, r2.z
    endif 
    mul r0.y, r4.x, r4.x
    mul r0.y, r4.x, r0.y
  else 
    mov r0.y, l(1.000000)
  endif 
  mul r2.w, r0.y, r2.w
endif 
mul r11.xyz, r2.wwww, cb2[18].xyzx
mad r13.xyz, -v5.xyzx, r4.zzzz, cb2[17].xyzx
dp3 r0.y, r13.xyzx, r13.xyzx
rsq r0.y, r0.y
mul r13.xyz, r0.yyyy, r13.xyzx
dp3_sat r0.y, r1.xyzx, r13.xyzx
dp3_sat r2.z, r13.xyzx, cb2[17].xyzx
dp3_sat r2.w, r13.xyzx, r6.xyzx
add r2.z, -r2.z, l(1.000000)
mul r3.w, r2.z, r2.z
mul r3.w, r3.w, r3.w
mul r2.z, r2.z, r3.w
mad r2.z, cb0[14].w, r2.z, cb0[14].z
log r0.y, r0.y
mul r4.xy, r0.yyyy, cb0[14].xyxx
exp r4.xy, r4.xyxx
dp2 r0.y, r4.xyxx, cb0[15].xyxx
mul r2.z, r1.w, r2.z
mul r2.w, r2.w, l(12.566371)
div r2.z, r2.z, r2.w
mul r0.y, r0.y, r2.z
mul r13.xyz, r0.yyyy, r11.xyzx
add r0.y, r1.w, r1.w
div r0.y, r1.w, r0.y
mul r14.xyz, r0.yyyy, r11.xyzx
mul r11.xyz, r1.wwww, r11.xyzx
mov r15.x, -r8.x
mov r16.xy, l(0,0,0,0)
mov r17.w, l(0)
mov r18.xyz, v5.xyzx
mov r18.w, l(1.000000)
mov r19.w, l(1.000000)
mov r15.z, r8.x
mov r20.z, l(1.000000)
mov r21.w, l(1.000000)
mov r15.yw, r9.xxxx
mov r8.y, r15.w
mov r22.w, l(1.000000)
mov r9.y, r15.x
mov r9.z, r8.x
mov r23.x, r9.x
mov r23.y, r15.x
mov r23.z, r8.x
mov r24.xyz, r14.xyzx
mov r25.xyz, r11.xyzx
mov r26.xyz, r13.xyzx
mov r0.y, cb2[58].y
mov r1.w, l(0)
loop 
  uge r2.z, r1.w, cb2[0].x
  breakc_nz r2.z
  ushr r16.z, r1.w, l(5)
  iadd r17.xyz, r12.xyzx, r16.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r2.z, r17.xyzw, t6.yzxw
  mov r17.xyz, r24.xyzx
  mov r27.xyz, r25.xyzx
  mov r28.xyz, r26.xyzx
  mov r2.w, r0.y
  mov r3.w, r2.z
  loop 
    breakc_z r3.w
    firstbit_lo r4.x, r3.w
    ishl r4.y, l(1), r4.x
    and r5.w, r3.w, r4.y
    if_nz r5.w
      xor r3.w, r3.w, r4.y
      iadd r4.x, r1.w, r4.x
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r29.xyzw, r4.x, l(0), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r30.xy, r4.x, l(16), t12.xyxx
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r4.x, l(28), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r4.x, l(44), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r4.x, l(60), t12.zwxy
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r4.x, l(76), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r4.x, l(92), t12.zwxy
      ubfe r4.y, l(3), l(24), r31.x
      switch r4.y
        case l(4)
        lt r4.y, l(0.000000), r35.x
        mov r36.x, r34.w
        mov r36.yz, r35.zzwz
        mad r37.xyz, -r36.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r29.xyzx
        add r38.xyz, r37.xyzx, -v5.xyzx
        dp3 r5.w, r36.xyzx, r38.xyzx
        div_sat r5.w, -r5.w, r35.x
        mad r36.xyz, r5.wwww, r36.xyzx, r37.xyzx
        movc r36.xyz, r4.yyyy, r36.xyzx, r29.xyzx
        add r36.xyz, r36.xyzx, -v5.xyzx
        dp3 r4.y, r36.xyzx, r36.xyzx
        rsq r5.w, r4.y
        mul r36.xyz, r5.wwww, r36.xyzx
        dp3 r5.w, r1.xyzx, r36.xyzx
        mov_sat r6.w, r5.w
        lt r8.z, l(0.000000), r6.w
        if_nz r8.z
          sqrt r8.z, r4.y
          mul r8.w, r32.y, r32.y
          div r4.y, r8.w, r4.y
          min r4.y, r4.y, l(1.000000)
          mad_sat r8.w, r8.z, r31.y, r31.z
          mad_sat r8.z, r8.z, r31.w, r32.x
          mul r9.w, r8.w, r8.w
          mad r8.w, r8.w, l(-2.000000), l(3.000000)
          mul r8.w, r8.w, r9.w
          mul r4.y, r4.y, r8.w
          mul r8.w, r8.z, r8.z
          mad r8.z, r8.z, l(-2.000000), l(3.000000)
          mul r8.z, r8.z, r8.w
          mul r4.y, r4.y, r8.z
          lt r8.z, l(0.000000), r4.y
          if_nz r8.z
            ubfe r8.zw, l(0, 0, 3, 4), l(0, 0, 27, 20), r31.xxxx
            ine r8.z, r8.z, l(1)
            if_nz r8.z
              mad r8.z, |r5.w|, l(-0.200000), l(0.400000)
              mad r37.xyz, r1.xyzx, r8.zzzz, v5.xyzx
              mov r33.z, r34.x
              add r37.xyz, -r33.xyzx, r37.xyzx
              max r8.z, |r37.z|, |r37.y|
              max r8.z, r8.z, |r37.x|
              div r8.z, r34.y, r8.z
              add r8.z, r34.z, r8.z
              dp3 r9.w, r37.xyzx, r37.xyzx
              rsq r9.w, r9.w
              max r8.z, r8.z, l(0.00006104)
              and r11.w, r31.x, l(0x0000ffff)
              utof r38.w, r11.w
              mov r11.w, l(0)
              mov r12.w, l(0)
              loop 
                ige r13.w, r12.w, l(8)
                breakc_nz r13.w
                dp2 r39.y, icb[r12.w + 0].yxyy, r15.xyxx
                dp2 r39.z, icb[r12.w + 0].yxyy, r15.yzyy
                mul r39.yz, r32.zzzz, r39.yyzy
                mul r39.x, r10.x, r39.y
                mul r39.w, r7.x, r39.y
                mad r38.xyz, r37.xyzx, r9.wwww, r39.xzwx
                sample_c_lz_indexable(texturecubearray)(float,float,float,float) r13.w, r38.xyzw, t10.xxxx, s13, r8.z
                mad r11.w, r13.w, l(0.125000), r11.w
                iadd r12.w, r12.w, l(1)
              endloop 
            else 
              mov r11.w, l(1.000000)
            endif 
            mul r4.y, r4.y, r11.w
            if_nz r8.w
              iadd r8.z, r8.w, cb2[0].x
              iadd r8.z, r8.z, l(-1)
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r8.w, r8.z, l(52), t12.xxxx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r8.z, l(100), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r8.z, l(116), t12.xyzw
              mad r5.w, |r5.w|, l(-0.200000), l(0.400000)
              mad r19.xyz, r1.xyzx, r5.wwww, v5.xyzx
              dp4 r5.w, r37.xyzw, r19.xyzw
              dp4 r9.w, r38.xyzw, r19.xyzw
              lt r12.w, r9.w, r5.w
              if_z r12.w
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r8.z, l(68), t12.xyzw
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r8.z, l(84), t12.xyzw
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r8.z, l(132), t12.xyzw
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r8.z, l(148), t12.xyzw
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.zw, r8.z, l(164), t12.xxxy
                dp4 r37.x, r37.xyzw, r19.xyzw
                dp4 r37.y, r38.xyzw, r19.xyzw
                div r19.xy, r37.xyxx, r9.wwww
                mad r19.xy, r19.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                add r19.xy, r40.zwzz, r19.xyxx
                mul r19.xy, r40.xyxx, r19.xyxx
                div r37.xy, r8.wwww, r39.xzxx
                add r37.zw, -r37.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                ge r37.zw, r19.xxxy, r37.zzzw
                ge r37.xy, r37.xyxx, r19.xyxx
                or r37.xy, r37.xyxx, r37.zwzz
                or r13.w, r37.y, r37.x
                mov_sat r19.xy, r19.xyxx
                mad r19.xy, r19.xyxx, r39.xzxx, r39.ywyy
                mul r14.w, r9.w, r16.w
                mad r5.w, r16.z, r9.w, r5.w
                div r5.w, r5.w, r14.w
              else 
                mov r13.w, l(-1)
              endif 
              or r9.w, r12.w, r13.w
              if_z r9.w
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r8.z, r8.z, l(28), t12.xxxx
                max r5.w, r5.w, l(0.00006104)
                and r8.z, r8.z, l(0x0000ffff)
                if_nz r2.w
                  utof r37.z, r8.z
                  mov r9.w, l(0)
                  mov r12.w, l(0)
                  loop 
                    ige r13.w, r12.w, l(8)
                    breakc_nz r13.w
                    dp2 r38.x, icb[r12.w + 0].yxyy, r15.xwxx
                    dp2 r38.y, icb[r12.w + 0].xyxx, r8.xyxx
                    mad r37.xy, r38.xyxx, r8.wwww, r19.xyxx
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r13.w, r37.xyzx, t9.xxxx, s13, r5.w
                    mad r9.w, r13.w, l(0.125000), r9.w
                    iadd r12.w, r12.w, l(1)
                  endloop 
                else 
                  utof r19.z, r8.z
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r9.w, r19.xyzx, t9.xxxx, s13, r5.w
                endif 
                mul r5.w, r9.w, r9.w
                mul r5.w, r9.w, r5.w
              else 
                mov r5.w, l(1.000000)
              endif 
              mul r4.y, r4.y, r5.w
            endif 
            lt r5.w, l(0.000000), r4.y
            if_nz r5.w
              mad r19.xyz, -v5.xyzx, r4.zzzz, r36.xyzx
              dp3 r5.w, r19.xyzx, r19.xyzx
              rsq r5.w, r5.w
              mul r19.xyz, r5.wwww, r19.xyzx
              dp3_sat r5.w, r1.xyzx, r19.xyzx
              dp3_sat r8.z, r19.xyzx, r6.xyzx
              dp3_sat r8.w, r19.xyzx, r36.xyzx
              mov r30.z, r29.w
              mul r19.xyz, r30.zxyz, r4.yyyy
              add r4.y, r4.w, r6.w
              div r4.y, r6.w, r4.y
              mad r17.xyz, r19.xyzx, r4.yyyy, r17.xyzx
              mad r27.xyz, r19.xyzx, r6.wwww, r27.xyzx
              add r4.y, -r8.w, l(1.000000)
              mul r8.w, r4.y, r4.y
              mul r8.w, r8.w, r8.w
              mul r4.y, r4.y, r8.w
              mad r4.y, cb0[14].w, r4.y, cb0[14].z
              log r5.w, r5.w
              mul r16.zw, r5.wwww, cb0[14].xxxy
              exp r16.zw, r16.zzzw
              dp2 r5.w, r16.zwzz, cb0[15].xyxx
              mul r4.y, r6.w, r4.y
              mul r6.w, r8.z, l(12.566371)
              div r4.y, r4.y, r6.w
              mul r4.y, r4.y, r5.w
              mad r28.xyz, r19.xyzx, r4.yyyy, r28.xyzx
            endif 
          endif 
        endif 
        break 
        case l(2)
        mov r19.x, r32.w
        mov r19.yz, r33.zzwz
        add r19.xyz, r19.xyzx, -v5.xyzx
        dp3 r4.y, r19.xyzx, r19.xyzx
        rsq r4.y, r4.y
        mul r19.xyz, r4.yyyy, r19.xyzx
        dp3 r4.y, r1.xyzx, r19.xyzx
        mov_sat r5.w, r4.y
        lt r6.w, l(0.000000), r5.w
        if_nz r6.w
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r4.x, l(108), t12.zwxy
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r4.x, l(124), t12.xyzw
          mov r38.xy, r36.xyxx
          mov r38.zw, r37.xxxy
          dp4 r6.w, r38.xyzw, r18.xyzw
          lt r8.z, r6.w, l(1.000000)
          if_nz r8.z
            mov r39.xyz, l(1.000000,1.000000,1.000000,0)
            mov r8.z, l(0)
          else 
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r4.x, l(172), t12.yzwx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r4.x, l(188), t12.wxyz
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r4.x, l(204), t12.xyzw
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r8.w, r4.x, l(236), t12.xxxx
            add r29.xyz, r29.xyzx, -v5.xyzx
            mul r12.w, r32.y, r32.y
            dp3 r13.w, r29.xyzx, r29.xyzx
            div r12.w, r12.w, r13.w
            min r12.w, r12.w, l(1.000000)
            mad_sat r13.w, r6.w, r31.y, r31.z
            mad_sat r14.w, r6.w, r31.w, r32.x
            mul r16.z, r13.w, r13.w
            mad r13.w, r13.w, l(-2.000000), l(3.000000)
            mul r13.w, r13.w, r16.z
            mul r12.w, r12.w, r13.w
            mul r13.w, r14.w, r14.w
            mad r14.w, r14.w, l(-2.000000), l(3.000000)
            mul r13.w, r13.w, r14.w
            mul r12.w, r12.w, r13.w
            mov r33.zw, r34.xxxy
            dp4 r29.x, r33.xyzw, r18.xyzw
            mov r43.xy, r34.zwzz
            mov r43.zw, r35.zzzw
            dp4 r29.y, r43.xyzw, r18.xyzw
            div r20.xy, r29.xyxx, r6.wwww
            lt r6.w, r40.w, l(0.00048828)
            if_nz r6.w
              mov r41.y, r42.x
              mad_sat r16.zw, |r20.xxxy|, r41.zzzw, r41.xxxy
              mul r29.xy, r16.zwzz, r16.zwzz
              mad r16.zw, r16.zzzw, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
              mul r16.zw, r16.zzzw, r29.xxxy
              mul r6.w, r16.w, r16.z
            else 
              mov r40.w, r41.y
              mul_sat r40.xyzw, |r20.yyxx|, r40.xyzw
              log r40.xyzw, r40.xyzw
              mul r40.xyzw, r40.xyzw, r41.xxxx
              exp r40.xyzw, r40.xyzw
              add r16.zw, r40.zzzw, r40.xxxy
              log r16.zw, r16.zzzw
              mul r16.zw, r16.zzzw, r42.xxxx
              exp r16.zw, r16.zzzw
              mul r13.w, r16.z, r41.z
              mad r14.w, r41.w, r16.w, l(-1.000000)
              mad r13.w, r41.w, r16.w, -r13.w
              div_sat r13.w, r14.w, r13.w
              mul r14.w, r13.w, r13.w
              mad r13.w, r13.w, l(-2.000000), l(3.000000)
              mul r6.w, r13.w, r14.w
            endif 
            mul r8.z, r6.w, r12.w
            and r6.w, r8.w, l(255)
            if_nz r6.w
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r29.xyz, r4.x, l(220), t12.xyzx
              dp3 r8.w, r42.yzwy, r20.xyzx
              dp3 r12.w, r29.xyzx, r20.xyzx
              frc r29.x, r8.w
              frc r29.y, r12.w
              iadd r6.w, r6.w, l(-1)
              utof r29.z, r6.w
              sample_l_indexable(texture2darray)(float,float,float,float) r39.xyz, r29.xyzx, t20.xyzw, s2, l(0.000000)
            else 
              mov r39.xyz, l(1.000000,1.000000,1.000000,0)
            endif 
          endif 
          mov r30.w, r29.w
          mul r20.xyw, r30.wxwy, r39.xyxz
          lt r6.w, l(0.000000), r8.z
          if_nz r6.w
            ubfe r16.zw, l(0, 0, 3, 4), l(0, 0, 27, 20), r31.xxxx
            ine r6.w, r16.z, l(1)
            if_nz r6.w
              mad r6.w, |r4.y|, l(-0.200000), l(0.400000)
              mad r21.xyz, r1.xyzx, r6.wwww, v5.xyzx
              mov r36.xy, r35.xyxx
              dp4 r6.w, r36.xyzw, r21.xyzw
              dp4 r8.w, r38.xyzw, r21.xyzw
              ge r12.w, r8.w, r6.w
              if_nz r12.w
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xy, r4.x, l(140), t12.xyxx
                mov r33.zw, r34.xxxy
                dp4 r29.x, r33.xyzw, r21.xyzw
                mov r35.xy, r34.zwzz
                dp4 r29.y, r35.xyzw, r21.xyzw
                div r21.xy, r29.xyxx, r8.wwww
                mad_sat r21.xy, r21.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                mad r21.xy, r21.xyxx, r37.zxzz, r37.wyww
                div r4.x, r6.w, r8.w
                max r4.x, r4.x, l(0.00006104)
                and r6.w, r31.x, l(0x0000ffff)
                if_nz r2.w
                  utof r29.z, r6.w
                  mov r8.w, l(0)
                  mov r12.w, l(0)
                  loop 
                    ige r13.w, r12.w, l(8)
                    breakc_nz r13.w
                    dp2 r30.x, icb[r12.w + 0].xyxx, r9.xyxx
                    dp2 r30.y, icb[r12.w + 0].yxyy, r9.xzxx
                    mad r29.xy, r30.xyxx, r32.zzzz, r21.xyxx
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r13.w, r29.xyzx, t9.xxxx, s13, r4.x
                    mad r8.w, r13.w, l(0.125000), r8.w
                    iadd r12.w, r12.w, l(1)
                  endloop 
                else 
                  utof r21.z, r6.w
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r8.w, r21.xyzx, t9.xxxx, s13, r4.x
                endif 
                mul r4.x, r8.w, r8.w
                mul r4.x, r8.w, r4.x
              else 
                mov r4.x, l(1.000000)
              endif 
            else 
              mov r4.x, l(1.000000)
            endif 
            mul r4.x, r4.x, r8.z
            if_nz r16.w
              iadd r6.w, r16.w, cb2[0].x
              iadd r6.w, r6.w, l(-1)
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r8.z, r6.w, l(52), t12.xxxx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r29.xyzw, r6.w, l(68), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r30.xyzw, r6.w, l(84), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r6.w, l(100), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r6.w, l(116), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r6.w, l(132), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r6.w, l(148), t12.xyzw
              mad r4.y, |r4.y|, l(-0.200000), l(0.400000)
              mad r22.xyz, r1.xyzx, r4.yyyy, v5.xyzx
              dp4 r21.x, r29.xyzw, r22.xyzw
              dp4 r21.y, r30.xyzw, r22.xyzw
              dp4 r4.y, r31.xyzw, r22.xyzw
              dp4 r12.w, r32.xyzw, r22.xyzw
              lt r13.w, r12.w, r4.y
              div r16.zw, r21.xxxy, r12.wwww
              mad r16.zw, r16.zzzw, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
              add r16.zw, r34.zzzw, r16.zzzw
              mul r16.zw, r34.xxxy, r16.zzzw
              div r21.xy, r8.zzzz, r33.xzxx
              add r22.xy, -r21.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
              ge r22.xy, r16.zwzz, r22.xyxx
              ge r21.xy, r21.xyxx, r16.zwzz
              or r21.xy, r21.xyxx, r22.xyxx
              or r14.w, r21.y, r21.x
              or r13.w, r13.w, r14.w
              if_z r13.w
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.w, r6.w, l(28), t12.xxxx
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r21.xy, r6.w, l(164), t12.xyxx
                mov_sat r16.zw, r16.zzzw
                mad r22.xy, r16.zwzz, r33.xzxx, r33.ywyy
                mul r6.w, r12.w, r21.y
                mad r4.y, r21.x, r12.w, r4.y
                div r4.y, r4.y, r6.w
                max r4.y, r4.y, l(0.00006104)
                and r6.w, r13.w, l(0x0000ffff)
                if_nz r2.w
                  utof r21.z, r6.w
                  mov r12.w, l(0)
                  mov r13.w, l(0)
                  loop 
                    ige r14.w, r13.w, l(8)
                    breakc_nz r14.w
                    dp2 r29.x, icb[r13.w + 0].xyxx, r23.xyxx
                    dp2 r29.y, icb[r13.w + 0].yxyy, r23.xzxx
                    mad r21.xy, r29.xyxx, r8.zzzz, r22.xyxx
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r14.w, r21.xyzx, t9.xxxx, s13, r4.y
                    mad r12.w, r14.w, l(0.125000), r12.w
                    iadd r13.w, r13.w, l(1)
                  endloop 
                else 
                  utof r22.z, r6.w
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.w, r22.xyzx, t9.xxxx, s13, r4.y
                endif 
                mul r4.y, r12.w, r12.w
                mul r4.y, r12.w, r4.y
              else 
                mov r4.y, l(1.000000)
              endif 
              mul r4.x, r4.y, r4.x
            endif 
            lt r4.y, l(0.000000), r4.x
            if_nz r4.y
              mad r21.xyz, -v5.xyzx, r4.zzzz, r19.xyzx
              dp3 r4.y, r21.xyzx, r21.xyzx
              rsq r4.y, r4.y
              mul r21.xyz, r4.yyyy, r21.xyzx
              dp3_sat r4.y, r1.xyzx, r21.xyzx
              dp3_sat r6.w, r21.xyzx, r6.xyzx
              dp3_sat r8.z, r21.xyzx, r19.xyzx
              mul r19.xyz, r20.xywx, r4.xxxx
              add r4.x, r4.w, r5.w
              div r4.x, r5.w, r4.x
              mad r17.xyz, r19.xyzx, r4.xxxx, r17.xyzx
              mad r27.xyz, r19.xyzx, r5.wwww, r27.xyzx
              add r4.x, -r8.z, l(1.000000)
              mul r8.z, r4.x, r4.x
              mul r8.z, r8.z, r8.z
              mul r4.x, r4.x, r8.z
              mad r4.x, cb0[14].w, r4.x, cb0[14].z
              log r4.y, r4.y
              mul r16.zw, r4.yyyy, cb0[14].xxxy
              exp r16.zw, r16.zzzw
              dp2 r4.y, r16.zwzz, cb0[15].xyxx
              mul r4.x, r5.w, r4.x
              mul r5.w, r6.w, l(12.566371)
              div r4.x, r4.x, r5.w
              mul r4.x, r4.x, r4.y
              mad r28.xyz, r19.xyzx, r4.xxxx, r28.xyzx
            endif 
          endif 
        endif 
        break 
        default 
        break 
      endswitch 
    endif 
  endloop 
  mov r24.xyz, r17.xyzx
  mov r25.xyz, r27.xyzx
  mov r26.xyz, r28.xyzx
  iadd r1.w, r1.w, l(32)
endloop 
add r1.xyz, r10.yzwy, r26.xyzx
add r4.xyz, r7.yzwy, r24.xyzx
add r6.xyz, r7.yzwy, r25.xyzx
mul r3.xyz, r3.xyzx, r4.xyzx
mad r0.xyz, r6.xyzx, r0.xzwx, -r3.xyzx
mad r0.xyz, r2.yyyy, r0.xyzx, r3.xyzx
add r0.w, -r2.y, l(1.000000)
mad r0.xyz, r1.xyzx, r0.wwww, r0.xyzx
sqrt r0.w, r2.x
mad r1.x, r0.w, cb0[17].z, cb0[17].w
exp r1.x, r1.x
min r1.x, r1.x, l(1.000000)
mul r1.yzw, cb0[29].xxyz, cb2[18].xxyz
mad r0.xyz, -cb0[29].xyzx, cb2[18].xyzx, r0.xyzx
mad r0.xyz, r1.xxxx, r0.xyzx, r1.yzwy
lt r1.x, l(0.000000), cb2[9].z
if_nz r1.x
  lt r1.x, l(0.000000), cb2[13].w
  if_nz r1.x
    mad r1.xy, r0.wwww, cb2[15].xyxx, cb2[14].zwzz
    mul r1.xy, r1.xyxx, cb2[16].xyxx
    lt r1.z, l(0.010000), |v5.z|
    mul r2.xy, v5.zzzz, cb2[15].zwzz
    mul r2.zw, r2.xxxy, l(0.000000, 0.000000, -1.442695, -1.442695)
    exp r2.zw, r2.zzzw
    add r2.zw, -r2.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    div r2.xy, r2.zwzz, r2.xyxx
    mul r2.xy, r1.xyxx, r2.xyxx
    movc r1.xy, r1.zzzz, r2.xyxx, r1.xyxx
    mul r1.xzw, r1.xxxx, cb2[12].xxyz
    exp r1.xzw, r1.xxzw
    mul r2.xyz, r1.yyyy, cb2[12].xyzx
    exp r2.xyz, r2.xyzx
    add r2.xyz, -r1.xzwx, r2.xyzx
    mad r1.xyz, cb2[13].wwww, r2.xyzx, r1.xzwx
  else 
    mad r1.w, r0.w, cb2[15].x, cb2[14].z
    mul r1.w, r1.w, cb2[16].x
    lt r2.x, l(0.010000), |v5.z|
    mul r2.y, v5.z, cb2[15].z
    mul r2.z, r2.y, l(-1.442695)
    exp r2.z, r2.z
    add r2.z, -r2.z, l(1.000000)
    div r2.y, r2.z, r2.y
    mul r2.y, r1.w, r2.y
    movc r1.w, r2.x, r2.y, r1.w
    mul r2.xyz, r1.wwww, cb2[12].xyzx
    exp r1.xyz, r2.xyzx
  endif 
  mad r1.xyz, r1.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r1.xyz, r1.xyzx, -cb2[9].zzzz
  dp3 r1.w, cb2[7].yzwy, -r5.xyzx
  mad r2.x, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r2.y, cb2[8].w, -r1.w, l(1.000000)
  mul r2.y, r2.y, r2.y
  mul r2.y, r2.y, l(12.566371)
  div r2.x, r2.x, r2.y
  add r2.y, r0.w, -cb2[10].w
  mul_sat r2.y, r2.y, cb2[11].w
  mul r2.x, r2.y, r2.x
  mov_sat r1.w, r1.w
  mad r1.w, r1.w, r1.w, l(1.000000)
  mad r1.w, r1.w, l(0.05968310), l(-1.000000)
  mad r1.w, cb2[8].z, r1.w, l(1.000000)
  mul r2.xyz, r2.xxxx, cb2[11].xyzx
  mad r2.xyz, r1.wwww, cb2[10].xyzx, r2.xyzx
  mul r2.xyz, r2.xyzx, cb2[9].wwww
  add r3.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r2.xyz, r2.xyzx, r3.xyzx
  mad r1.xyz, r0.xyzx, r1.xyzx, r2.xyzx
else 
  mul r1.w, v5.z, cb2[6].x
  mad r2.x, cb2[6].x, v5.z, cb2[5].x
  lt r2.y, |r1.w|, l(0.000100)
  min r2.z, r2.x, l(64.000000)
  mul r2.z, r2.z, l(1.442695)
  exp r2.z, r2.z
  mov_sat r2.w, cb2[6].z
  lt r3.x, r2.x, l(0.000000)
  add r2.x, r2.x, l(1.000000)
  movc r2.x, r3.x, r2.z, r2.x
  add r2.x, r2.x, -cb2[6].z
  movc r1.w, r2.y, l(1.000000), r1.w
  div r1.w, r2.x, r1.w
  movc r1.w, r2.y, r2.w, r1.w
  mul r1.w, r1.w, cb2[5].z
  mad r0.w, r1.w, r0.w, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  dp3 r1.w, cb2[7].yzwy, r5.xyzx
  mad_sat r1.w, cb2[8].y, r1.w, cb2[8].x
  add r2.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r2.xyzw, r1.wwww, r2.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r2.w
  add r2.xyz, -r0.xyzx, r2.xyzx
  mad r1.xyz, r0.wwww, r2.xyzx, r0.xyzx
endif 
mul r0.xyz, r1.xyzx, cb1[85].yyyy
ge r1.xyz, r0.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.xyz, r0.xyzx, r1.xyzx
min o0.xyz, r0.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
mov o0.w, l(1.000000)
ret 
// Approximately 1618 instruction slots used
