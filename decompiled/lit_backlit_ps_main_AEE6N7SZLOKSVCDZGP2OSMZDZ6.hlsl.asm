//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:32:08 2021
//
//
// Note: shader requires additional functionality:
//       Early depth-stencil
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float3 colorTint;                  // Offset:  160 Size:    12
//   float3 specColorTint;              // Offset:  176 Size:    12
//   float baseNormalHeight;            // Offset:  188 Size:     4
//   float2 glossRange;                 // Offset:  192 Size:     8
//   float3 backlightScatterColor;      // Offset:  208 Size:    12
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16 [unused]
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4 [unused]
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// colorSampler                      sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// specColorSampler                  sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// normalSampler                     sampler      NA          NA             s5      1 
// aoSampler                         sampler      NA          NA             s6      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// colorMap                          texture  float4          2d             t0      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// tintMask                          texture  float4          2d            t21      1 
// specColorMap                      texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// normalMap                         texture  float4          2d            t24      1 
// glossMap                          texture  float4          2d            t25      1 
// aoMap                             texture  float4          2d            t26      1 
// thicknessMap                      texture  float4          2d            t29      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// gOit_Pixels                           UAV    uint          2d             u6      1 
// gOit_Nodes                            UAV   uint2     2darray             u7      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyz 
// COLOR                    1   x           1     NONE   float   x   
// TEXCOORD                 0    yz         1     NONE   float    yz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// OFFPOSITION              0   xyz         5     NONE   float   xyz 
// SV_IsFrontFace           0   x           6    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | forceEarlyDepthStencil
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[14], immediateIndexed
dcl_constantbuffer CB1[93], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2d (float,float,float,float) t26
dcl_resource_texture2d (float,float,float,float) t29
dcl_resource_texture2darray (float,float,float,float) t31
dcl_uav_typed_texture2d (uint,uint,uint,uint) u6
dcl_uav_typed_texture2darray (uint,uint,uint,uint) u7
dcl_input_ps_siv linear noperspective v0.xyz, position
dcl_input_ps linear v1.x
dcl_input_ps linear v1.yz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps_sgv constant v6.x, is_front_face
dcl_output o0.xyzw
dcl_temps 50
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.yzyy, t0.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r1.x, v1.yzyy, t21.xyzw, s1
add r1.yzw, cb0[10].xxyz, l(0.000000, -1.000000, -1.000000, -1.000000)
mad r1.xyz, r1.xxxx, r1.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r0.xyz, r0.xyzx, r1.xyzx
mul r1.w, r0.w, v1.x
sample_indexable(texture2d)(float,float,float,float) r0.w, v1.yzyy, t22.yzwx, s3
add r2.xyz, cb0[11].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r2.xyz, r0.wwww, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
add_sat r0.w, -r0.w, l(1.000000)
mul r0.xyz, r0.wwww, r0.xyzx
sample_indexable(texture2d)(float,float,float,float) r0.w, v1.yzyy, t26.yzwx, s6
sample_indexable(texture2d)(float,float,float,float) r2.w, v1.yzyy, t25.yzwx, s3
add r3.x, -cb0[12].x, cb0[12].y
mad r2.w, r2.w, r3.x, cb0[12].x
mul_sat r2.w, r2.w, l(0.05882353)
sample_indexable(texture2d)(float,float,float,float) r3.xyz, v1.yzyy, t24.xyzw, s5
add r3.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.000000, 0.000000)
mad r3.xyz, cb0[11].wwww, r3.xyzx, l(0.500000, 0.500000, 0.000000, 0.000000)
mad r3.xy, r3.xyxx, l(1.99218750, 1.99218750, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r3.w, r3.xyxx, r3.xyxx
add r3.w, -r3.w, l(1.000000)
max r3.w, r3.w, l(0.000000)
sqrt r3.w, r3.w
mul r3.z, r3.z, r3.z
mul r3.z, r3.z, l(0.33333334)
min r3.z, r3.z, l(1.000000)
movc r4.x, v6.x, l(1.000000), l(-1.000000)
dp3 r4.y, v2.xyzx, v2.xyzx
rsq r4.y, r4.y
mul r4.yzw, r4.yyyy, v2.xxyz
mul r4.yzw, r4.xxxx, r4.yyzw
dp3 r5.x, v3.xyzx, v3.xyzx
rsq r5.x, r5.x
mul r5.xyz, r5.xxxx, v3.xyzx
mul r5.xyz, r4.xxxx, r5.xyzx
dp3 r5.w, v4.xyzx, v4.xyzx
rsq r5.w, r5.w
mul r6.xyz, r5.wwww, v4.xyzx
mul r6.xyz, r4.xxxx, r6.xyzx
mul r2.w, r2.w, l(-17.000000)
exp r2.w, r2.w
add r2.w, r2.w, r3.z
log r2.w, r2.w
mul r2.w, r2.w, l(-0.05882353)
max r7.y, r2.w, l(0.000000)
mul r6.xyz, r3.yyyy, r6.xyzx
mad r3.xyz, r5.xyzx, r3.xxxx, r6.xyzx
mad r3.xyz, r4.yzwy, r3.wwww, r3.xyzx
dp3 r2.w, r3.xyzx, r3.xyzx
rsq r2.w, r2.w
mul r3.xyz, r2.wwww, r3.xyzx
sample_indexable(texture2d)(float,float,float,float) r2.w, v1.yzyy, t29.yzwx, s1
add r2.w, -r2.w, l(1.000000)
mul r4.xyz, r2.wwww, cb0[13].xyzx
mul r4.xyz, r0.xyzx, r4.xyzx
ftou r5.xy, v0.xyxx
ge r2.w, v0.z, l(0.984375)
mul r4.w, v0.z, l(1.01587307)
mad r5.z, v0.z, l(64.000000), l(-63.000000)
movc r2.w, r2.w, r5.z, r4.w
max r2.w, r2.w, l(0.00000001)
rcp r2.w, r2.w
dp3 r4.w, -v5.xyzx, -v5.xyzx
rsq r4.w, r4.w
mul r6.xyz, r4.wwww, -v5.xyzx
ine r5.z, cb1[92].x, l(0)
utof r7.zw, r5.yyyx
dp2 r5.w, r7.wzww, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r5.w, r5.w
mul r5.w, r5.w, l(52.982918)
frc r5.w, r5.w
mad r5.w, r5.w, l(6.28318548), cb1[70].w
sincos r8.x, r9.x, r5.w
dp2 r5.w, r7.zwzz, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r5.w, r5.w
mul r5.w, r5.w, l(52.982918)
frc r5.w, r5.w
mad r5.w, r5.w, l(6.28318548), cb1[70].w
sincos r10.x, r11.x, r5.w
dp3_sat r7.x, r3.xyzx, r6.xyzx
dp3 r5.w, -r6.xyzx, r3.xyzx
add r5.w, r5.w, r5.w
mad r12.xyz, r3.xyzx, -r5.wwww, -r6.xyzx
mul r5.w, r7.y, l(17.000000)
exp r5.w, r5.w
add r5.w, r5.w, l(2.000000)
div r5.w, l(2.000000), r5.w
sqrt r6.w, r5.w
add r7.z, -r7.y, l(1.000000)
mul r7.w, r7.z, l(5.000000)
mad r8.z, r7.z, l(5.000000), l(-2.500000)
mul r8.z, r8.z, l(0.400000)
max r8.z, r8.z, l(0.000000)
mad r10.yz, -r7.zzzz, l(0.000000, 10.000000, 5.000000, 0.000000), l(0.000000, 6.857410, 7.085000, 0.000000)
exp r8.w, r10.y
mul r8.w, r7.x, r8.w
mul r8.zw, r8.zzzw, l(0.000000, 0.000000, 100.000000, 9.136810)
mul r9.w, r7.z, r7.w
mad r9.w, -r9.w, l(2.015905), r10.z
exp r9.w, r9.w
mul r9.w, r7.x, r9.w
mul r9.w, r9.w, l(9.708090)
max r8.w, r8.w, r9.w
max r8.w, r8.w, l(1.268160)
iadd r9.w, cb2[0].y, -cb2[58].x
mul r2.w, r2.w, l(0.00781250)
min r2.w, r2.w, l(15.000000)
ftou r2.w, r2.w
ushr r13.xy, r5.xyxx, l(6, 6, 0, 0)
ishl r13.z, r2.w, l(4)
and r2.w, r9.w, l(-32)
iadd r5.x, -r2.w, r9.w
and r5.y, cb2[0].y, l(-32)
iadd r10.y, -r5.y, cb2[0].y
mov r14.xy, l(0,0,0,0)
mov r15.w, l(0)
mov r16.yz, l(0,0,1.000000,0)
mov r17.xy, l(0,0,0,0)
mov r18.x, l(1.000000)
mov r19.xy, l(0,0,0,0)
mov r20.xy, l(0,0,0,0)
mov r21.xyzw, l(0,0,0,0)
mov r22.yzw, l(0,0,0,0)
mov r10.z, r2.w
loop 
  uge r10.w, r10.z, cb2[0].y
  breakc_nz r10.w
  ushr r14.z, r10.z, l(5)
  iadd r15.xyz, r13.xyzx, r14.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r10.w, r15.xyzw, t7.yzwx
  ieq r11.y, r2.w, r10.z
  bfi r11.z, r5.x, l(0), l(0), r10.w
  movc r10.w, r11.y, r11.z, r10.w
  ieq r11.y, r5.y, r10.z
  ubfe r11.z, r10.y, l(0), r10.w
  movc r10.w, r11.y, r11.z, r10.w
  iadd r11.y, r10.z, cb2[0].x
  mov r23.xyzw, r21.xyzw
  mov r24.xyz, r22.yzwy
  mov r11.z, r10.w
  loop 
    breakc_z r11.z
    firstbit_lo r11.w, r11.z
    ishl r13.w, l(1), r11.w
    and r14.z, r11.z, r13.w
    if_nz r14.z
      xor r11.z, r11.z, r13.w
      iadd r13.w, r11.w, r11.y
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r25.xyzw, r13.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r15.xy, r13.w, l(16), t11.xyxx
      add r25.xyz, r25.xyzx, -v5.xyzx
      mov r15.z, r25.w
      lt r15.xyz, |r25.xyzx|, r15.zxyz
      and r13.w, r15.y, r15.x
      and r13.w, r15.z, r13.w
      if_nz r13.w
        iadd r11.w, r10.z, r11.w
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r11.w, l(0), t15.wxyz
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r14.zw, r11.w, l(96), t15.xxxy
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r11.w, l(116), t15.zwxy
        add r15.xyz, -r25.yzwy, v5.xyzx
        and r13.w, r26.w, l(0x0000ffff)
        ubfe r16.w, l(6), l(25), r26.w
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r13.w, l(0), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r13.w, l(16), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r13.w, l(32), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r13.w, l(48), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r13.w, l(64), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r13.w, l(80), t16.xyzw
        dp3 r17.w, r27.xyzx, r15.xyzx
        add_sat r17.w, r27.w, r17.w
        dp3 r18.z, r28.xyzx, r15.xyzx
        add_sat r18.z, r28.w, r18.z
        mul r17.w, r17.w, r18.z
        dp3 r18.z, r29.xyzx, r15.xyzx
        add_sat r18.z, r29.w, r18.z
        mul r17.w, r17.w, r18.z
        dp3 r18.z, r30.xyzx, r15.xyzx
        add_sat r18.z, r30.w, r18.z
        mul r17.w, r17.w, r18.z
        dp3 r18.z, r31.xyzx, r15.xyzx
        add_sat r18.z, r31.w, r18.z
        mul r17.w, r17.w, r18.z
        dp3 r18.z, r32.xyzx, r15.xyzx
        add_sat r18.z, r32.w, r18.z
        mul r16.x, r17.w, r18.z
        and r17.w, r14.z, l(1)
        movc r18.zw, r17.wwww, r16.xxxy, r16.zzzx
        mov r16.x, r14.z
        mov r27.xy, r18.zwzz
        mov r17.w, l(1)
        loop 
          ige r19.w, r17.w, r16.w
          breakc_nz r19.w
          iadd r19.w, r13.w, r17.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r19.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r19.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r19.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r19.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r19.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r19.w, l(80), t16.xyzw
          dp3 r19.w, r28.xyzx, r15.xyzx
          add_sat r19.w, r28.w, r19.w
          mul r19.w, r19.w, r27.x
          dp3 r20.w, r29.xyzx, r15.xyzx
          add_sat r20.w, r29.w, r20.w
          mul r19.w, r19.w, r20.w
          dp3 r20.w, r30.xyzx, r15.xyzx
          add_sat r20.w, r30.w, r20.w
          mul r19.w, r19.w, r20.w
          dp3 r20.w, r31.xyzx, r15.xyzx
          add_sat r20.w, r31.w, r20.w
          mul r19.w, r19.w, r20.w
          dp3 r20.w, r32.xyzx, r15.xyzx
          add_sat r20.w, r32.w, r20.w
          mul r19.w, r19.w, r20.w
          dp3 r20.w, r33.xyzx, r15.xyzx
          add_sat r20.w, r33.w, r20.w
          mul r27.x, r19.w, r20.w
          ushr r25.w, r16.x, l(2)
          ubfe r27.z, l(1), l(2), r16.x
          and r27.w, r25.w, l(2)
          max r28.x, r27.x, r27.y
          mad r19.w, -r19.w, r20.w, l(1.000000)
          mul r19.w, r19.w, r27.y
          movc r18.y, r27.w, r19.w, r28.x
          movc r27.xy, r27.zzzz, r27.xyxx, r18.xyxx
          iadd r17.w, r17.w, l(1)
          mov r16.x, r25.w
        endloop 
        mov_sat r27.y, r27.y
        mul r13.w, r14.w, r27.y
        lt r14.z, l(0.000000), r13.w
        if_nz r14.z
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r11.w, l(16), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r11.w, l(32), t15.yxwz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r11.w, l(48), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r11.w, l(64), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r11.w, l(80), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r11.w, l(132), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r11.w, l(148), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r11.w, l(164), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r11.w, l(180), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r11.w, l(196), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xy, r11.w, l(212), t15.xyxx
          mad r24.z, r27.y, r14.w, r24.z
          mul r11.w, r26.z, r13.w
          mov r26.z, r33.z
          dp3 r13.w, r12.xyzx, r26.xyzx
          dp3 r14.z, r15.xyzx, r26.xyzx
          add r14.z, -r33.w, r14.z
          ge r14.w, r14.z, l(0.000000)
          max r14.z, r8.z, |r14.z|
          movc r14.z, r14.w, r14.z, -r14.z
          max r13.w, -r13.w, l(0.00000010)
          div r13.w, r14.z, r13.w
          min r13.w, |r13.w|, l(131072.000000)
          mov r33.z, r34.z
          dp3 r14.z, r12.xyzx, r33.xyzx
          dp3 r14.w, r15.xyzx, r33.xyzx
          add r14.w, -r34.w, r14.w
          ge r16.x, r14.w, l(0.000000)
          max r14.w, r8.z, |r14.w|
          movc r14.w, r16.x, r14.w, -r14.w
          max r14.z, -r14.z, l(0.00000010)
          div r14.z, r14.w, r14.z
          min r13.w, r13.w, |r14.z|
          mov r34.z, r35.z
          dp3 r14.z, r12.xyzx, r34.xyzx
          dp3 r14.w, r15.xyzx, r34.xyzx
          add r14.w, -r35.w, r14.w
          ge r16.x, r14.w, l(0.000000)
          max r14.w, r8.z, |r14.w|
          movc r14.w, r16.x, r14.w, -r14.w
          max r14.z, -r14.z, l(0.00000010)
          div r14.z, r14.w, r14.z
          min r13.w, r13.w, |r14.z|
          mov r35.z, r36.z
          dp3 r14.z, r12.xyzx, r35.xyzx
          dp3 r14.w, r15.xyzx, r35.xyzx
          add r14.w, -r36.w, r14.w
          ge r16.x, r14.w, l(0.000000)
          max r14.w, r8.z, |r14.w|
          movc r14.w, r16.x, r14.w, -r14.w
          max r14.z, -r14.z, l(0.00000010)
          div r14.z, r14.w, r14.z
          min r13.w, r13.w, |r14.z|
          mov r36.z, r37.x
          dp3 r14.z, r12.xyzx, r36.xyzx
          dp3 r14.w, r15.xyzx, r36.xyzx
          add r14.w, -r37.y, r14.w
          ge r16.x, r14.w, l(0.000000)
          max r14.w, r8.z, |r14.w|
          movc r14.w, r16.x, r14.w, -r14.w
          max r14.z, -r14.z, l(0.00000010)
          div r14.z, r14.w, r14.z
          min r13.w, r13.w, |r14.z|
          mov r38.zw, r37.zzzw
          dp3 r14.z, r12.zxyz, r38.xzwx
          dp3 r14.w, r15.zxyz, r38.xzwx
          add r14.w, -r38.y, r14.w
          ge r16.x, r14.w, l(0.000000)
          max r14.w, r8.z, |r14.w|
          movc r14.w, r16.x, r14.w, -r14.w
          max r14.z, -r14.z, l(0.00000010)
          div r14.z, r14.w, r14.z
          min r13.w, r13.w, |r14.z|
          mov r26.x, r30.w
          mov r26.yz, r31.zzwz
          add r18.yzw, r15.xxyz, r26.xxyz
          mad r18.yzw, r12.xxyz, r13.wwww, r18.yyzw
          dp3 r14.z, r18.yzwy, r18.yzwy
          sqrt r14.z, r14.z
          div r13.w, r13.w, r14.z
          add r13.w, r13.w, r13.w
          sqrt r13.w, r13.w
          mad r13.w, r7.z, l(5.000000), r13.w
          add r13.w, r13.w, l(-0.844800)
          mov r25.y, r28.z
          mov r25.z, r29.x
          dp3 r33.x, r18.yzwy, r25.xyzx
          mov r26.xy, r28.xwxx
          mov r26.z, r29.w
          dp3 r33.y, r18.yzwy, r26.xyzx
          mov r29.x, r28.y
          dp3 r33.z, r18.yzwy, r29.xyzx
          ubfe r14.z, l(9), l(16), r26.w
          utof r33.w, r14.z
          sample_l_indexable(texturecubearray)(float,float,float,float) r18.yzw, r33.xyzw, t8.wxyz, s2, r13.w
          dp3 r28.x, r15.xyzx, r25.xyzx
          dp3 r28.y, r15.xyzx, r26.xyzx
          dp3 r28.z, r15.xyzx, r29.xyzx
          mad_sat r15.xyz, r28.xyzx, r30.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
          mov r31.z, r32.x
          mad r15.xyz, r15.xyzx, r31.xyzx, r32.yzwy
          dp3 r33.x, r3.xyzx, r25.xyzx
          dp3 r33.y, r3.xyzx, r26.xyzx
          dp3 r33.z, r3.xyzx, r29.xyzx
          lt r25.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r33.xyzx
          movc r17.z, r25.x, l(0), l(0.500000)
          add r26.xyz, r15.xyzx, r17.xyzx
          sample_l_indexable(texture3d)(float,float,float,float) r26.xyz, r26.xyzx, t17.xyzw, s4, l(0.000000)
          mul r27.xzw, r33.xxyz, r33.xxyz
          mul r27.xzw, r11.wwww, r27.xxzw
          movc r19.z, r25.y, l(0), l(0.500000)
          add r25.xyw, r15.xyxz, r19.xyxz
          sample_l_indexable(texture3d)(float,float,float,float) r25.xyw, r25.xywx, t18.xywz, s4, l(0.000000)
          mul r25.xyw, r27.zzzz, r25.xyxw
          mad r25.xyw, r26.xyxz, r27.xxxx, r25.xyxw
          movc r20.z, r25.z, l(0), l(0.500000)
          add r15.xyz, r15.xyzx, r20.xyzx
          sample_l_indexable(texture3d)(float,float,float,float) r15.xyz, r15.xyzx, t19.xyzw, s4, l(0.000000)
          mad r15.xyz, r15.xyzx, r27.wwww, r25.xywx
          sample_l_indexable(texturecubearray)(float,float,float,float) r25.xyz, r33.xyzw, t8.xyzw, s2, l(6.000000)
          mul r26.xyz, r15.xyzx, r25.xyzx
          dp3 r13.w, r26.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r23.xyz, r15.xyzx, r25.xyzx, r23.xyzx
          mul r14.z, r8.w, r13.w
          mul r15.xyz, r11.wwww, r18.yzwy
          dp3 r11.w, r15.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r11.w, r8.w, r13.w, r11.w
          div r11.w, r14.z, r11.w
          mov r25.x, r23.w
          mov r25.yz, r24.xxyx
          mad r24.xyw, r15.yzyx, r11.wwww, r25.yzyx
          mov r23.w, r24.w
        endif 
      endif 
    endif 
  endloop 
  mov r21.xyzw, r23.xyzw
  mov r22.yzw, r24.xxyz
  iadd r10.z, r10.z, l(32)
endloop 
lt r5.y, r22.w, l(1.000000)
if_nz r5.y
  mov r14.xy, l(0,0,0,0)
  mov r15.w, l(0)
  mov r16.yz, l(0,0,1.000000,0)
  mov r17.xy, l(0,0,0,0)
  mov r18.x, l(1.000000)
  mov r19.xy, l(0,0,0,0)
  mov r20.xy, l(0,0,0,0)
  mov r23.x, r21.w
  mov r23.yzw, r22.yyzw
  mov r10.yzw, r21.xxyz
  mov r5.y, r22.w
  mov r11.y, l(0)
  loop 
    uge r11.z, r11.y, r9.w
    breakc_nz r11.z
    ushr r14.z, r11.y, l(5)
    iadd r15.xyz, r13.xyzx, r14.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r11.z, r15.xyzw, t7.yzxw
    ieq r11.w, r2.w, r11.y
    ubfe r13.w, r5.x, l(0), r11.z
    movc r11.z, r11.w, r13.w, r11.z
    iadd r11.w, r11.y, cb2[0].x
    mov r24.xyzw, r23.xyzw
    mov r15.xyz, r10.yzwy
    mov r13.w, r5.y
    mov r14.z, r11.z
    loop 
      breakc_z r14.z
      firstbit_lo r14.w, r14.z
      ishl r16.w, l(1), r14.w
      and r17.w, r14.z, r16.w
      if_nz r17.w
        xor r14.z, r14.z, r16.w
        iadd r16.w, r11.w, r14.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r25.xyzw, r16.w, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r26.xy, r16.w, l(16), t11.xyxx
        add r25.xyz, r25.xyzx, -v5.xyzx
        mov r26.z, r25.w
        lt r25.xyz, |r25.xyzx|, r26.zxyz
        and r16.w, r25.y, r25.x
        and r16.w, r25.z, r16.w
        if_nz r16.w
          iadd r14.w, r11.y, r14.w
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r14.w, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r18.zw, r14.w, l(96), t15.xxxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r14.w, l(116), t15.zwxy
          add r27.xyz, -r25.yzwy, v5.xyzx
          and r16.w, r26.w, l(0x0000ffff)
          ubfe r17.w, l(6), l(25), r26.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r16.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r16.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r16.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r16.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r16.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r16.w, l(80), t16.xyzw
          dp3 r19.w, r28.xyzx, r27.xyzx
          add_sat r19.w, r28.w, r19.w
          dp3 r20.w, r29.xyzx, r27.xyzx
          add_sat r20.w, r29.w, r20.w
          mul r19.w, r19.w, r20.w
          dp3 r20.w, r30.xyzx, r27.xyzx
          add_sat r20.w, r30.w, r20.w
          mul r19.w, r19.w, r20.w
          dp3 r20.w, r31.xyzx, r27.xyzx
          add_sat r20.w, r31.w, r20.w
          mul r19.w, r19.w, r20.w
          dp3 r20.w, r32.xyzx, r27.xyzx
          add_sat r20.w, r32.w, r20.w
          mul r19.w, r19.w, r20.w
          dp3 r20.w, r33.xyzx, r27.xyzx
          add_sat r20.w, r33.w, r20.w
          mul r16.x, r19.w, r20.w
          and r19.w, r18.z, l(1)
          movc r28.xy, r19.wwww, r16.xyxx, r16.zxzz
          mov r16.x, r18.z
          mov r29.xy, r28.xyxx
          mov r19.w, l(1)
          loop 
            ige r20.w, r19.w, r17.w
            breakc_nz r20.w
            iadd r20.w, r16.w, r19.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r20.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r20.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r20.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r20.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r20.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r20.w, l(80), t16.xyzw
            dp3 r20.w, r30.xyzx, r27.xyzx
            add_sat r20.w, r30.w, r20.w
            mul r20.w, r20.w, r29.x
            dp3 r25.w, r31.xyzx, r27.xyzx
            add_sat r25.w, r31.w, r25.w
            mul r20.w, r20.w, r25.w
            dp3 r25.w, r32.xyzx, r27.xyzx
            add_sat r25.w, r32.w, r25.w
            mul r20.w, r20.w, r25.w
            dp3 r25.w, r33.xyzx, r27.xyzx
            add_sat r25.w, r33.w, r25.w
            mul r20.w, r20.w, r25.w
            dp3 r25.w, r34.xyzx, r27.xyzx
            add_sat r25.w, r34.w, r25.w
            mul r20.w, r20.w, r25.w
            dp3 r25.w, r35.xyzx, r27.xyzx
            add_sat r25.w, r35.w, r25.w
            mul r29.x, r20.w, r25.w
            ushr r27.w, r16.x, l(2)
            ubfe r28.z, l(1), l(2), r16.x
            and r28.w, r27.w, l(2)
            max r29.z, r29.x, r29.y
            mad r20.w, -r20.w, r25.w, l(1.000000)
            mul r20.w, r20.w, r29.y
            movc r18.y, r28.w, r20.w, r29.z
            movc r29.xy, r28.zzzz, r29.xyxx, r18.xyxx
            iadd r19.w, r19.w, l(1)
            mov r16.x, r27.w
          endloop 
          add_sat r16.x, -r13.w, r29.y
          mul r16.w, r18.w, r16.x
          lt r17.w, l(0.000000), r16.w
          if_nz r17.w
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r14.w, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r14.w, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r14.w, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r14.w, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r14.w, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r14.w, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r14.w, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r14.w, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r14.w, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r14.w, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xy, r14.w, l(212), t15.xyxx
            mad r24.w, r16.x, r18.w, r24.w
            mul r14.w, r26.z, r16.w
            mov r26.z, r34.z
            dp3 r16.x, r12.xyzx, r26.xyzx
            dp3 r16.w, r27.xyzx, r26.xyzx
            add r16.w, -r34.w, r16.w
            ge r17.w, r16.w, l(0.000000)
            max r16.w, r8.z, |r16.w|
            movc r16.w, r17.w, r16.w, -r16.w
            max r16.x, -r16.x, l(0.00000010)
            div r16.x, r16.w, r16.x
            min r16.x, |r16.x|, l(131072.000000)
            mov r34.z, r35.z
            dp3 r16.w, r12.xyzx, r34.xyzx
            dp3 r17.w, r27.xyzx, r34.xyzx
            add r17.w, -r35.w, r17.w
            ge r18.y, r17.w, l(0.000000)
            max r17.w, r8.z, |r17.w|
            movc r17.w, r18.y, r17.w, -r17.w
            max r16.w, -r16.w, l(0.00000010)
            div r16.w, r17.w, r16.w
            min r16.x, |r16.w|, r16.x
            mov r35.z, r36.z
            dp3 r16.w, r12.xyzx, r35.xyzx
            dp3 r17.w, r27.xyzx, r35.xyzx
            add r17.w, -r36.w, r17.w
            ge r18.y, r17.w, l(0.000000)
            max r17.w, r8.z, |r17.w|
            movc r17.w, r18.y, r17.w, -r17.w
            max r16.w, -r16.w, l(0.00000010)
            div r16.w, r17.w, r16.w
            min r16.x, |r16.w|, r16.x
            mov r36.z, r37.z
            dp3 r16.w, r12.xyzx, r36.xyzx
            dp3 r17.w, r27.xyzx, r36.xyzx
            add r17.w, -r37.w, r17.w
            ge r18.y, r17.w, l(0.000000)
            max r17.w, r8.z, |r17.w|
            movc r17.w, r18.y, r17.w, -r17.w
            max r16.w, -r16.w, l(0.00000010)
            div r16.w, r17.w, r16.w
            min r16.x, |r16.w|, r16.x
            mov r37.z, r38.x
            dp3 r16.w, r12.xyzx, r37.xyzx
            dp3 r17.w, r27.xyzx, r37.xyzx
            add r17.w, -r38.y, r17.w
            ge r18.y, r17.w, l(0.000000)
            max r17.w, r8.z, |r17.w|
            movc r17.w, r18.y, r17.w, -r17.w
            max r16.w, -r16.w, l(0.00000010)
            div r16.w, r17.w, r16.w
            min r16.x, |r16.w|, r16.x
            mov r39.zw, r38.zzzw
            dp3 r16.w, r12.zxyz, r39.xzwx
            dp3 r17.w, r27.zxyz, r39.xzwx
            add r17.w, -r39.y, r17.w
            ge r18.y, r17.w, l(0.000000)
            max r17.w, r8.z, |r17.w|
            movc r17.w, r18.y, r17.w, -r17.w
            max r16.w, -r16.w, l(0.00000010)
            div r16.w, r17.w, r16.w
            min r16.x, |r16.w|, r16.x
            mov r26.x, r31.w
            mov r26.yz, r32.zzwz
            add r18.yzw, r27.xxyz, r26.xxyz
            mad r18.yzw, r12.xxyz, r16.xxxx, r18.yyzw
            dp3 r16.w, r18.yzwy, r18.yzwy
            sqrt r16.w, r16.w
            div r16.x, r16.x, r16.w
            add r16.x, r16.x, r16.x
            sqrt r16.x, r16.x
            mad r16.x, r7.z, l(5.000000), r16.x
            add r16.x, r16.x, l(-0.844800)
            mov r25.y, r28.z
            mov r25.z, r30.x
            dp3 r34.x, r18.yzwy, r25.xyzx
            mov r26.xy, r28.xwxx
            mov r26.z, r30.w
            dp3 r34.y, r18.yzwy, r26.xyzx
            mov r30.x, r28.y
            dp3 r34.z, r18.yzwy, r30.xyzx
            ubfe r16.w, l(9), l(16), r26.w
            utof r34.w, r16.w
            sample_l_indexable(texturecubearray)(float,float,float,float) r18.yzw, r34.xyzw, t8.wxyz, s2, r16.x
            dp3 r28.x, r27.xyzx, r25.xyzx
            dp3 r28.y, r27.xyzx, r26.xyzx
            dp3 r28.z, r27.xyzx, r30.xyzx
            mad_sat r27.xyz, r28.xyzx, r31.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
            mov r32.z, r33.x
            mad r27.xyz, r27.xyzx, r32.xyzx, r33.yzwy
            dp3 r34.x, r3.xyzx, r25.xyzx
            dp3 r34.y, r3.xyzx, r26.xyzx
            dp3 r34.z, r3.xyzx, r30.xyzx
            lt r25.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r34.xyzx
            movc r17.z, r25.x, l(0), l(0.500000)
            add r26.xyz, r17.xyzx, r27.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r26.xyz, r26.xyzx, t17.xyzw, s4, l(0.000000)
            mul r28.xyz, r34.xyzx, r34.xyzx
            mul r28.xyz, r14.wwww, r28.xyzx
            movc r19.z, r25.y, l(0), l(0.500000)
            add r25.xyw, r19.xyxz, r27.xyxz
            sample_l_indexable(texture3d)(float,float,float,float) r25.xyw, r25.xywx, t18.xywz, s4, l(0.000000)
            mul r25.xyw, r28.yyyy, r25.xyxw
            mad r25.xyw, r26.xyxz, r28.xxxx, r25.xyxw
            movc r20.z, r25.z, l(0), l(0.500000)
            add r26.xyz, r20.xyzx, r27.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r26.xyz, r26.xyzx, t19.xyzw, s4, l(0.000000)
            mad r25.xyz, r26.xyzx, r28.zzzz, r25.xywx
            sample_l_indexable(texturecubearray)(float,float,float,float) r26.xyz, r34.xyzw, t8.xyzw, s2, l(6.000000)
            mul r27.xyz, r25.xyzx, r26.xyzx
            dp3 r16.x, r27.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r15.xyz, r25.xyzx, r26.xyzx, r15.xyzx
            mul r16.w, r8.w, r16.x
            mul r18.yzw, r14.wwww, r18.yyzw
            dp3 r14.w, r18.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r14.w, r8.w, r16.x, r14.w
            div r14.w, r16.w, r14.w
            mad r24.xyz, r18.yzwy, r14.wwww, r24.xyzx
          endif 
        endif 
      endif 
    endloop 
    mov r23.xyzw, r24.xyzw
    mov r10.yzw, r15.xxyz
    iadd r11.y, r11.y, l(32)
  endloop 
  mov r22.xyzw, r23.zxyw
  mov r21.xyz, r10.yzwy
  mov r22.xyzw, r22.yzxw
else 
  mov r22.x, r21.w
endif 
max r2.w, r22.w, l(1.000000)
rcp r2.w, r2.w
mov_sat r22.w, r22.w
mul r10.yzw, r2.wwww, r21.xxyz
mul r11.yzw, r2.wwww, r22.xxyz
lt r5.x, r22.w, l(0.990000)
if_nz r5.x
  add r5.x, -r22.w, l(1.000000)
  mul r5.y, r5.x, cb2[19].x
  add r14.xyz, v5.xyzx, -cb2[35].xyzx
  mul r15.x, r14.x, cb2[35].w
  mul r15.yz, r14.yyzy, cb2[36].xxyx
  add_sat r14.xyz, r15.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mul r15.xy, r14.xyxx, cb2[36].zwzz
  mul r15.z, r14.z, cb2[37].x
  add r14.xyz, r15.xyzx, cb2[37].yzwy
  lt r15.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r3.xyzx
  movc r15.xyz, r15.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
  mov r15.w, l(0)
  add r16.xyz, r14.xyzx, r15.wwxw
  sample_l_indexable(texture3d)(float,float,float,float) r16.xyz, r16.xyzx, t17.xyzw, s4, l(0.000000)
  mul r17.xyz, r3.xyzx, r3.xyzx
  mul r17.xyz, r5.yyyy, r17.xyzx
  add r18.xyz, r14.xyzx, r15.wwyw
  sample_l_indexable(texture3d)(float,float,float,float) r18.xyz, r18.xyzx, t18.xyzw, s4, l(0.000000)
  mul r18.xyz, r17.yyyy, r18.xyzx
  mad r16.xyz, r16.xyzx, r17.xxxx, r18.xyzx
  add r14.xyz, r14.xyzx, r15.wwzw
  sample_l_indexable(texture3d)(float,float,float,float) r14.xyz, r14.xyzx, t19.xyzw, s4, l(0.000000)
  mad r14.xyz, r14.xyzx, r17.zzzz, r16.xyzx
  mov r3.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r15.xyz, r3.xyzw, t8.xyzw, s2, l(6.000000)
  mul r14.xyz, r14.xyzx, r15.xyzx
  dp3 r3.w, r14.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  mad r10.yzw, r21.xxyz, r2.wwww, r14.xxyz
  mov r12.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r14.xyz, r12.xyzw, t8.xyzw, s2, r7.w
  mad r2.w, cb2[19].x, r5.x, -r3.w
  mad r2.w, r7.y, r2.w, r3.w
  mad r11.yzw, r14.xxyz, r2.wwww, r11.yyzw
endif 
add r2.w, r0.w, r7.x
log r2.w, |r2.w|
mul r2.w, r2.w, r6.w
exp r2.w, r2.w
add r2.w, r0.w, r2.w
add_sat r2.w, r2.w, l(-1.000000)
mul r14.xyz, r0.wwww, r10.zwyz
mad r5.xy, r7.xyxx, l(0.984375, 0.984375, 0.000000, 0.000000), l(0.00781250, 0.00781250, 0.000000, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r5.xy, r5.xyxx, t5.xyzw, s2, l(0.000000)
mul r7.yzw, r2.wwww, r11.yyzw
mul r10.yzw, r5.xxxx, r7.yyzw
mul r15.xyz, r5.yyyy, r7.yzwy
sqrt r0.w, r6.w
mad r0.w, r0.w, l(0.500000), l(0.500000)
mul r0.w, r0.w, r0.w
mul r2.w, r0.w, l(0.500000)
mad r0.w, -r0.w, l(0.500000), l(1.000000)
mad r3.w, r7.x, r0.w, r2.w
mul r0.w, r0.w, r3.w
mul r2.w, r2.w, r3.w
dp3 r3.w, r3.xyzx, cb2[17].xyzx
ge r5.x, l(0.000000), |r3.w|
if_nz r5.x
  mov r5.y, l(0)
endif 
if_z r5.x
  mul r7.yzw, v5.yyyy, cb2[29].xxyz
  mad r7.yzw, v5.xxxx, cb2[28].xxyz, r7.yyzw
  mad r7.yzw, v5.zzzz, cb2[30].xxyz, r7.yyzw
  add r7.yzw, r7.yyzw, cb2[31].xxyz
  add r5.x, r7.w, -cb2[17].w
  mad r5.x, -r5.x, l(0.00006104), l(1.000000)
  mov_sat r8.z, r5.x
  eq r8.z, r5.x, r8.z
  if_nz r8.z
    mov r8.zw, l(0,0,0,0)
    loop 
      ge r9.w, r8.z, l(3.000000)
      breakc_nz r9.w
      ftou r9.w, r8.z
      add r11.yz, r7.yyzy, -cb2[r9.w + 20].xxyx
      max r11.y, |r11.z|, |r11.y|
      mul r8.w, r11.y, cb2[r9.w + 20].z
      lt r9.w, r8.w, l(1.000000)
      if_nz r9.w
        break 
      endif 
      add r8.z, r8.z, l(1.000000)
      mov r8.w, l(0)
    endloop 
  else 
    mov r8.zw, l(0,0,3.000000,0)
  endif 
  ge r9.w, r8.z, l(3.000000)
  if_nz r9.w
    mul r11.yzw, l(0.000000, 128.000000, 0.500000, 0.500000), cb2[27].zzxy
    rcp r16.xz, r11.yyyy
    mov r16.y, -r16.z
    mad r11.yzw, r7.yyzy, r16.xxyz, r11.zzwz
    add r16.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r11.yzw, r11.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r11.yzw, r16.xxyz, r11.yyzw
    mul r16.xy, r11.wzww, cb2[32].xxxx
    round_ni r16.xy, r16.xyxx
    mul r12.w, r16.y, cb2[27].x
    mad r12.w, r12.w, cb2[32].x, r16.x
    ftou r12.w, r12.w
    iadd r12.w, r12.w, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r13.w, r12.w, l(0), t23.xxxx
    and r16.x, r13.w, l(0x40000000)
    ishl r16.y, r13.w, l(2)
    if_z r16.x
      and r16.x, r13.w, l(0x01ffffff)
      iadd r17.x, r12.w, r16.x
      ushr r12.w, r13.w, l(25)
      utof r12.w, r12.w
      mul r11.yzw, r11.yyzw, r12.wwww
      frc r11.yzw, r11.yyzw
      mul r11.yzw, r11.yyzw, l(0.000000, 128.000000, 128.000000, 128.000000)
      ftou r11.yzw, r11.yyzw
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.z, r17.x, l(0), t23.xxxx
      ushr r16.xz, r11.wwzw, l(6, 0, 6, 0)
      and r12.w, r17.z, l(0xc0000000)
      iadd r13.w, r17.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r13.w, r13.w, l(0), t23.xxxx
      movc r13.w, r16.z, r17.z, r13.w
      ushr r16.z, r13.w, l(13)
      movc r13.w, r16.x, r16.z, r13.w
      and r13.w, r13.w, l(8191)
      iadd r18.x, r13.w, r17.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.x, l(0), t23.xxxx
      mov r17.y, l(0)
      mov r18.y, l(1)
      movc r16.xzw, r12.wwww, r17.xxyz, r18.xxyz
      movc r18.yz, r12.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r19.xy, r11.wzww, r18.yyyy
      and r19.xy, r19.xyxx, l(1, 1, 0, 0)
      and r13.w, r16.w, l(0xc0000000)
      iadd r17.w, r16.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.w, r17.w, l(0), t23.xxxx
      movc r17.w, r19.y, r16.w, r17.w
      ushr r18.y, r17.w, l(13)
      movc r17.w, r19.x, r18.y, r17.w
      and r17.w, r17.w, l(8191)
      iadd r18.x, r16.x, r17.w
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.w, r18.x, l(0), t23.xxxx
      movc r16.xzw, r13.wwww, r16.xxzw, r18.xxzw
      movc r16.xzw, r12.wwww, r17.xxyz, r16.xxzw
      and r12.w, r16.w, l(0xc0000000)
      if_z r12.w
        iadd r12.w, -r16.z, l(6)
        ushr r17.xy, r11.wzww, r12.wwww
        or r12.w, r16.w, l(0x40000000)
        bfi r13.w, l(1), l(1), r17.y, l(0)
        bfi r13.w, l(1), l(0), r17.x, r13.w
        imul null, r13.w, r13.w, l(10)
        ushr r12.w, r12.w, r13.w
        and r12.w, r12.w, l(1023)
        iadd r17.x, r12.w, r16.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.w, r17.x, l(0), t23.xxxx
        iadd r17.yz, r16.zzzz, l(0, 1, 2, 0)
        iadd r12.w, -r17.y, l(6)
        ushr r18.xy, r11.wzww, r12.wwww
        and r12.w, r17.w, l(0xc0000000)
        or r13.w, r17.w, l(0x40000000)
        bfi r16.z, l(1), l(1), r18.y, l(0)
        bfi r16.z, l(1), l(0), r18.x, r16.z
        imul null, r16.z, r16.z, l(10)
        ushr r13.w, r13.w, r16.z
        and r13.w, r13.w, l(1023)
        iadd r18.x, r13.w, r17.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.x, l(0), t23.xxxx
        mov r18.y, r17.z
        movc r18.xyz, r12.wwww, r17.xywx, r18.xyzx
        iadd r13.w, -r18.y, l(6)
        ushr r17.yz, r11.wwzw, r13.wwww
        and r13.w, r18.z, l(0xc0000000)
        or r16.z, r18.z, l(0x40000000)
        bfi r17.z, l(1), l(1), r17.z, l(0)
        bfi r17.y, l(1), l(0), r17.y, r17.z
        imul null, r17.y, r17.y, l(10)
        ushr r16.z, r16.z, r17.y
        and r16.z, r16.z, l(1023)
        iadd r19.x, r16.z, r18.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.y, r19.x, l(0), t23.xxxx
        movc r17.yz, r13.wwww, r18.xxzx, r19.xxyx
        movc r16.xw, r12.wwww, r17.xxxw, r17.yyyz
      endif 
      and r12.w, r16.w, l(0xc0000000)
      if_z r12.w
        ubfe r13.w, l(14), l(15), r16.w
        utof r13.w, r13.w
        mul r13.w, r13.w, cb2[27].w
        mul r13.w, r13.w, l(0.00006104)
        and r17.xy, r16.wwww, l(0x00007fff, 0x20000000, 0, 0)
        utof r16.z, r17.x
        mul r16.z, r16.z, cb2[27].w
        mul r16.z, r16.z, l(0.00003052)
        and r17.x, r11.z, l(3)
        iadd r17.x, r16.x, r17.x
        iadd r17.x, r17.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.x, r17.x, l(0), t23.xxxx
        bfi r18.xyz, l(2, 2, 1, 0), l(3, 1, 4, 0), r11.yzwy, l(0, 0, 0, 0)
        ushr r11.y, r17.x, r18.x
        and r11.y, r11.y, l(255)
        utof r11.y, r11.y
        mul r11.y, r16.z, r11.y
        mad r11.y, r11.y, l(0.00392157), r13.w
        iadd r11.z, r18.y, l(1)
        ubfe r11.w, l(1), l(1), r11.w
        iadd r11.z, r11.w, r11.z
        iadd r11.z, r11.z, r16.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r11.z, r11.z, l(0), t23.xxxx
        ushr r11.z, r11.z, r18.z
        and r11.z, r11.z, l(0x0000ffff)
        utof r11.z, r11.z
        mul r11.z, r16.z, r11.z
        mad r11.z, r11.z, l(0.00001526), r13.w
        movc r16.y, r17.y, r11.y, r11.z
      else 
        and r11.y, r16.w, l(0x80000000)
        iadd r11.z, r16.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r11.z, r11.z, l(0), t23.xxxx
        movc r11.y, r11.y, r11.z, l(0)
        ishl r11.z, r16.w, l(2)
        ushr r11.w, r11.y, l(16)
        and r11.y, r11.y, l(0x0000ffff)
        f16tof32 r11.yw, r11.yyyw
        mad r11.z, r7.y, r11.w, r11.z
        mad r11.y, r7.z, r11.y, r11.z
        movc r16.y, r12.w, r11.y, r16.y
      endif 
    endif 
    mad r7.w, -cb2[27].z, l(2.000000), r7.w
    lt r7.w, r16.y, r7.w
    movc r5.y, r7.w, l(0), l(1.000000)
  endif 
  if_z r9.w
    if_z cb2[58].y
      ftou r7.w, r8.z
      add r11.yz, r7.yyzy, -cb2[r7.w + 20].xxyx
      mul r11.yz, r11.yyzy, cb2[r7.w + 20].zzzz
      mad r16.xy, r11.yzyy, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r7.w, cb2[26].y
      add r16.z, r7.w, r8.z
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r7.w, r16.xyzx, t13.xxxx, s13, r5.x
      sample_l_indexable(texture2darray)(float,float,float,float) r9.w, r16.xyzx, t31.yzwx, s0, l(0.000000)
      add r7.w, r7.w, r9.w
      add_sat r7.w, r7.w, l(-1.000000)
      mul r9.w, r7.w, r7.w
      mul r5.y, r7.w, r9.w
    endif 
    if_nz cb2[58].y
      mov r16.x, -r8.x
      ftou r7.w, r8.z
      add r8.z, r8.z, l(1.000000)
      min r8.z, r8.z, l(2.000000)
      add r8.w, -r8.w, l(1.000000)
      mul r8.w, r8.w, l(28.000000)
      ftou r8.zw, r8.zzzw
      add r11.yz, r7.yyzy, -cb2[r7.w + 20].xxyx
      mul r11.yz, r11.yyzy, cb2[r7.w + 20].zzzz
      mad r11.yz, r11.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      add r7.yz, r7.yyzy, -cb2[r8.z + 20].xxyx
      mul r7.yz, r7.yyzy, cb2[r8.z + 20].zzzz
      mad r7.yz, r7.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      mov r16.y, r9.x
      mov r16.z, r8.x
      mov r9.w, l(0)
      mov r11.w, l(0)
      loop 
        uge r12.w, r11.w, l(8)
        breakc_nz r12.w
        ult r12.w, r8.w, r11.w
        movc r17.xy, r12.wwww, r7.yzyy, r11.yzyy
        movc r13.w, r12.w, cb2[r8.z + 20].w, cb2[r7.w + 20].w
        movc r12.w, r12.w, r8.z, r7.w
        dp2 r18.x, icb[r11.w + 0].yxyy, r16.xyxx
        dp2 r18.y, icb[r11.w + 0].yxyy, r16.yzyy
        mad r17.xy, r18.xyxx, r13.wwww, r17.xyxx
        iadd r12.w, r12.w, cb2[26].y
        utof r17.z, r12.w
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.w, r17.xyzx, t13.xxxx, s13, r5.x
        sample_l_indexable(texture2darray)(float,float,float,float) r13.w, r17.xyzx, t31.yzwx, s0, l(0.000000)
        add r12.w, r12.w, r13.w
        add_sat r12.w, r12.w, l(-1.000000)
        mad r9.w, r12.w, l(0.125000), r9.w
        iadd r11.w, r11.w, l(1)
      endloop 
      mul r5.x, r9.w, r9.w
      mul r5.y, r9.w, r5.x
    endif 
  endif 
endif 
lt r5.x, l(0.000000), |r3.w|
if_nz r5.x
  lt r5.x, l(0.000000), r5.y
  if_nz r5.x
    mul r5.x, r5.w, cb2[18].w
    mul r5.x, r5.x, l(0.250000)
    if_nz cb2[23].x
      add r16.xyz, v5.xyzx, cb1[24].xyzx
      mov r16.w, l(1.000000)
      dp4 r7.y, cb2[24].xyzw, r16.xyzw
      dp4 r7.z, cb2[25].xyzw, r16.xyzw
      frc r16.xy, r7.yzyy
      iadd r7.y, l(-1), cb2[23].x
      utof r16.z, r7.y
      sample_l_indexable(texture2darray)(float,float,float,float) r7.yzw, r16.xyzx, t20.wxyz, s2, l(0.000000)
      add r7.yzw, r7.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
      mad r7.yzw, cb2[23].yyyy, r7.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
      mul r7.yzw, r7.yyzw, cb2[18].xxyz
    else 
      mov r7.yzw, cb2[18].xxyz
    endif 
    ushr r8.z, cb2[53].x, l(16)
    ult r8.w, l(0), r8.z
    and r8.w, r5.z, r8.w
    if_nz r8.w
      iadd r8.z, r8.z, cb2[0].x
      iadd r8.z, r8.z, l(-1)
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r8.w, r8.z, l(52), t12.xxxx
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r8.z, l(68), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r8.z, l(84), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r8.z, l(132), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.xyzw, r8.z, l(148), t12.xyzw
      mad r9.w, |r3.w|, l(-0.200000), l(0.400000)
      lt r11.y, r3.w, l(0.000000)
      movc r9.w, r11.y, -r9.w, r9.w
      mad r20.xyz, r3.xyzx, r9.wwww, v5.xyzx
      mov r20.w, l(1.000000)
      dp4 r16.x, r16.xyzw, r20.xyzw
      dp4 r16.y, r17.xyzw, r20.xyzw
      mad r11.yz, r16.xxyx, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      add r11.yz, r19.zzwz, r11.yyzy
      mul r11.yz, r19.xxyx, r11.yyzy
      div r16.xy, r8.wwww, r18.xzxx
      add r16.zw, -r16.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
      ge r16.zw, r11.yyyz, r16.zzzw
      ge r16.xy, r16.xyxx, r11.yzyy
      or r16.xy, r16.xyxx, r16.zwzz
      or r9.w, r16.y, r16.x
      if_z r9.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r9.w, r8.z, l(28), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r8.z, l(100), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xy, r8.z, l(164), t12.xyxx
        dp4 r8.z, r16.xyzw, r20.xyzw
        mov_sat r11.yz, r11.yyzy
        mad r16.xy, r11.yzyy, r18.xzxx, r18.ywyy
        add r8.z, r17.x, r8.z
        div r8.z, r8.z, r17.y
        max r8.z, r8.z, l(0.00006104)
        and r9.w, r9.w, l(0x0000ffff)
        if_nz cb2[58].y
          mov r17.x, -r8.x
          utof r18.z, r9.w
          mov r17.y, r9.x
          mov r17.z, r8.x
          mov r11.yz, l(0,0,0,0)
          loop 
            ige r11.w, r11.z, l(8)
            breakc_nz r11.w
            dp2 r19.x, icb[r11.z + 0].yxyy, r17.xyxx
            dp2 r19.y, icb[r11.z + 0].yxyy, r17.yzyy
            mad r18.xy, r19.xyxx, r8.wwww, r16.xyxx
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r11.w, r18.xyzx, t9.xxxx, s13, r8.z
            mad r11.y, r11.w, l(0.125000), r11.y
            iadd r11.z, r11.z, l(1)
          endloop 
        else 
          utof r16.z, r9.w
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r11.y, r16.xyzx, t9.xxxx, s13, r8.z
        endif 
        mul r8.z, r11.y, r11.y
        mul r8.z, r11.y, r8.z
      else 
        mov r8.z, l(1.000000)
      endif 
      mul r5.y, r5.y, r8.z
    else 
      and r8.z, cb2[53].x, l(0x0000ffff)
      ult r8.w, l(0), r8.z
      not r9.w, r5.z
      and r8.w, r8.w, r9.w
      if_nz r8.w
        iadd r8.z, r8.z, cb2[0].x
        iadd r8.z, r8.z, l(-1)
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r8.w, r8.z, l(52), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r8.z, l(68), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r8.z, l(84), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r8.z, l(132), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.xyzw, r8.z, l(148), t12.xyzw
        mad r9.w, |r3.w|, l(-0.200000), l(0.400000)
        lt r11.y, r3.w, l(0.000000)
        movc r9.w, r11.y, -r9.w, r9.w
        mad r20.xyz, r3.xyzx, r9.wwww, v5.xyzx
        mov r20.w, l(1.000000)
        dp4 r16.x, r16.xyzw, r20.xyzw
        dp4 r16.y, r17.xyzw, r20.xyzw
        mad r11.yz, r16.xxyx, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
        add r11.yz, r19.zzwz, r11.yyzy
        mul r11.yz, r19.xxyx, r11.yyzy
        div r16.xy, r8.wwww, r18.xzxx
        add r16.zw, -r16.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
        ge r16.zw, r11.yyyz, r16.zzzw
        ge r16.xy, r16.xyxx, r11.yzyy
        or r16.xy, r16.xyxx, r16.zwzz
        or r9.w, r16.y, r16.x
        if_z r9.w
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r9.w, r8.z, l(28), t12.xxxx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r8.z, l(100), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xy, r8.z, l(164), t12.xyxx
          dp4 r8.z, r16.xyzw, r20.xyzw
          mov_sat r11.yz, r11.yyzy
          mad r16.xy, r11.yzyy, r18.xzxx, r18.ywyy
          add r8.z, r17.x, r8.z
          div r8.z, r8.z, r17.y
          max r8.z, r8.z, l(0.00006104)
          and r9.w, r9.w, l(0x0000ffff)
          if_nz cb2[58].y
            mov r17.x, -r8.x
            utof r18.z, r9.w
            mov r17.y, r9.x
            mov r17.z, r8.x
            mov r11.yz, l(0,0,0,0)
            loop 
              ige r11.w, r11.z, l(8)
              breakc_nz r11.w
              dp2 r19.x, icb[r11.z + 0].yxyy, r17.xyxx
              dp2 r19.y, icb[r11.z + 0].yxyy, r17.yzyy
              mad r18.xy, r19.xyxx, r8.wwww, r16.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r11.w, r18.xyzx, t9.xxxx, s13, r8.z
              mad r11.y, r11.w, l(0.125000), r11.y
              iadd r11.z, r11.z, l(1)
            endloop 
          else 
            utof r16.z, r9.w
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r11.y, r16.xyzx, t9.xxxx, s13, r8.z
          endif 
          mul r8.z, r11.y, r11.y
          mul r8.z, r11.y, r8.z
        else 
          mov r8.z, l(1.000000)
        endif 
        mul r5.y, r5.y, r8.z
      endif 
    endif 
    mad r8.z, -r7.x, l(0.500000), l(1.000000)
    mad r8.z, -|r3.w|, r8.z, l(1.000000)
    mul r8.z, r8.z, r8.z
    mad r8.z, -r8.z, l(0.620000), l(0.620000)
    add r8.z, -|r3.w|, r8.z
    mad r8.z, r6.w, r8.z, |r3.w|
    mul r8.z, r5.y, r8.z
    lt r8.w, l(0.000000), r3.w
    mad r16.xyz, r8.zzzz, r7.zwyz, r14.xyzx
    mov_sat r3.w, r3.w
    mad r11.yzw, -v5.xxyz, r4.wwww, cb2[17].xxyz
    dp3 r4.w, r11.yzwy, r11.yzwy
    rsq r4.w, r4.w
    mul r11.yzw, r4.wwww, r11.yyzw
    dp3 r4.w, r11.yzwy, r6.xyzx
    dp3 r8.z, r3.xyzx, r11.yzwy
    mad r9.w, |r8.z|, r5.w, -|r8.z|
    mad r8.z, |r8.z|, r9.w, l(1.000000)
    mad r9.w, r3.w, r0.w, r2.w
    mul r8.z, r8.z, r8.z
    mul r8.z, r9.w, r8.z
    rcp r8.z, r8.z
    mul r3.w, r5.x, r3.w
    mul r3.w, r3.w, r8.z
    mul r3.w, r5.y, r3.w
    mad r17.yzw, r3.wwww, r7.yyzw, r15.xxyz
    add_sat r4.w, -r4.w, l(1.000000)
    mul r5.x, r4.w, r4.w
    mul r5.x, r5.x, r5.x
    mul r4.w, r4.w, r5.x
    mul r3.w, r3.w, r4.w
    mad r7.yzw, r3.wwww, r7.yyzw, r10.yyzw
    mov r16.w, r14.z
    mov r14.w, r16.z
    movc r18.xyzw, r8.wwww, r16.zxyw, r14.zxyw
    mov r14.zw, r7.yyyz
    mov r16.zw, r10.yyyz
    movc r16.xyzw, r8.wwww, r14.xyzw, r16.xyzw
    mov r17.x, r7.w
    mov r15.w, r10.w
    movc r15.xyzw, r8.wwww, r17.yzwx, r15.xyzw
    mov r14.z, r18.w
    mov r14.xy, r16.xyxx
    mov r10.yz, r16.zzwz
    mov r10.w, r15.w
  else 
    mov r18.xyz, r14.zxyz
  endif 
else 
  mov r18.xyz, r14.zxyz
endif 
mov r16.x, -r8.x
not r3.w, r5.z
mad r4.w, -r7.x, l(0.500000), l(1.000000)
mov r7.xy, l(0,0,0,0)
mov r17.w, l(0)
mov r19.xyz, v5.xyzx
mov r19.w, l(1.000000)
mov r20.w, l(1.000000)
mov r16.z, r8.x
mov r21.w, l(1.000000)
mov r22.z, l(1.000000)
mov r23.w, l(1.000000)
mov r16.yw, r9.xxxx
mov r8.y, r16.w
mov r24.w, l(1.000000)
mov r9.y, r16.x
mov r9.z, r8.x
mov r25.w, l(1.000000)
mov r26.x, r9.x
mov r26.y, r16.x
mov r26.z, r8.x
mov r27.x, r9.x
mov r27.y, r16.x
mov r27.z, r8.x
mov r28.x, r9.x
mov r28.y, r16.x
mov r28.z, r8.x
mov r11.yzw, r18.xxyz
mov r29.xyz, r14.zxyz
mov r30.xyz, r10.yzwy
mov r31.xyz, r15.xyzx
mov r5.x, cb2[58].y
mov r5.y, l(0)
loop 
  uge r7.w, r5.y, cb2[0].x
  breakc_nz r7.w
  ushr r7.z, r5.y, l(5)
  iadd r17.xyz, r7.xyzx, r13.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r7.z, r17.xyzw, t6.yzxw
  mov r17.xyz, r11.yzwy
  mov r32.xyz, r29.xyzx
  mov r33.xyz, r30.xyzx
  mov r34.xyz, r31.xyzx
  mov r7.w, r5.x
  mov r8.z, r7.z
  loop 
    breakc_z r8.z
    firstbit_lo r8.w, r8.z
    ishl r9.w, l(1), r8.w
    and r12.w, r8.z, r9.w
    if_nz r12.w
      xor r8.z, r8.z, r9.w
      iadd r8.w, r5.y, r8.w
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r35.xyzw, r8.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r36.xy, r8.w, l(16), t11.xyxx
      add r35.xyz, r35.xyzx, -v5.xyzx
      mov r36.z, r35.w
      lt r35.xyz, |r35.xyzx|, r36.zxyz
      and r9.w, r35.y, r35.x
      and r9.w, r35.z, r9.w
      if_nz r9.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r8.w, l(0), t12.wxyz
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r8.w, l(16), t12.zxyw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r8.w, l(32), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r8.w, l(48), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r8.w, l(64), t12.yzwx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r8.w, l(80), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r8.w, l(96), t12.yzwx
        ubfe r9.w, l(3), l(24), r36.w
        switch r9.w
          case l(4)
          lt r9.w, l(0.000000), r41.x
          mov r42.xy, r40.zwzz
          mov r42.z, r41.w
          mad r43.xyz, -r42.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r35.yzwy
          add r44.xyz, r43.xyzx, -v5.xyzx
          dp3 r12.w, r42.xyzx, r44.xyzx
          div_sat r13.w, -r12.w, r41.x
          mad r45.xyz, r13.wwww, r42.xyzx, r43.xyzx
          movc r45.xyz, r9.wwww, r45.xyzx, r35.yzwy
          add r45.xyz, r45.xyzx, -v5.xyzx
          dp3 r14.w, r45.xyzx, r45.xyzx
          rsq r15.w, r14.w
          mul r45.xyz, r15.wwww, r45.xyzx
          dp3 r15.w, r3.xyzx, r45.xyzx
          lt r18.w, l(0.000000), |r15.w|
          if_nz r18.w
            sqrt r18.w, r14.w
            mul r22.w, r38.x, r38.x
            div r14.w, r22.w, r14.w
            min r14.w, r14.w, l(1.000000)
            mad_sat r45.xy, r18.wwww, r37.xzxx, r37.ywyy
            mul r45.zw, r45.xxxy, r45.xxxy
            mad r45.xy, r45.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
            mul r45.xy, r45.xyxx, r45.zwzz
            mul r14.w, r14.w, r45.x
            mul r14.w, r45.y, r14.w
            lt r18.w, l(0.000000), r14.w
            if_nz r18.w
              ubfe r18.w, l(3), l(27), r36.w
              ine r18.w, r18.w, l(1)
              if_nz r18.w
                mad r18.w, |r15.w|, l(-0.200000), l(0.400000)
                lt r22.w, r15.w, l(0.000000)
                movc r18.w, r22.w, -r18.w, r18.w
                mad r45.xyz, r3.xyzx, r18.wwww, v5.xyzx
                add r45.xyz, -r39.xyzx, r45.xyzx
                max r18.w, |r45.z|, |r45.y|
                max r18.w, r18.w, |r45.x|
                div r18.w, r40.x, r18.w
                add r18.w, r40.y, r18.w
                dp3 r22.w, r45.xyzx, r45.xyzx
                rsq r22.w, r22.w
                max r18.w, r18.w, l(0.00006104)
                and r26.w, r36.w, l(0x0000ffff)
                utof r46.w, r26.w
                mov r26.w, l(0)
                mov r27.w, l(0)
                loop 
                  ige r28.w, r27.w, l(8)
                  breakc_nz r28.w
                  dp2 r47.y, icb[r27.w + 0].yxyy, r16.xyxx
                  dp2 r47.z, icb[r27.w + 0].yxyy, r16.yzyy
                  mul r47.yz, r38.yyyy, r47.yyzy
                  mul r47.x, r11.x, r47.y
                  mul r47.w, r10.x, r47.y
                  mad r46.xyz, r45.xyzx, r22.wwww, r47.xzwx
                  sample_c_lz_indexable(texturecubearray)(float,float,float,float) r28.w, r46.xyzw, t10.xxxx, s13, r18.w
                  mad r26.w, r28.w, l(0.125000), r26.w
                  iadd r27.w, r27.w, l(1)
                endloop 
              else 
                mov r26.w, l(1.000000)
              endif 
              mul r14.w, r14.w, r26.w
              lt r18.w, l(0.000000), r14.w
              if_nz r18.w
                mul r18.w, r5.w, r36.x
                mul r18.w, r18.w, l(0.250000)
                dp3 r22.w, r42.xyzx, r12.xyzx
                dp3 r27.w, r12.xyzx, r44.xyzx
                mad r28.w, -r22.w, r22.w, r41.x
                mad r12.w, r22.w, r27.w, -r12.w
                div_sat r12.w, r12.w, r28.w
                div r22.w, r28.w, r41.x
                mul r22.w, r22.w, l(10.000000)
                min r22.w, r22.w, l(1.000000)
                add r12.w, -r13.w, r12.w
                mad r12.w, r22.w, r12.w, r13.w
                mad r42.xyz, r12.wwww, r42.xyzx, r43.xyzx
                movc r42.xyz, r9.wwww, r42.xyzx, r35.yzwy
                add r42.xyz, r42.xyzx, -v5.xyzx
                dp3 r9.w, r42.xyzx, r42.xyzx
                rsq r9.w, r9.w
                mul r43.xyz, r9.wwww, r42.xyzx
                ubfe r12.w, l(4), l(16), r36.w
                ult r13.w, l(0), r12.w
                and r13.w, r5.z, r13.w
                if_nz r13.w
                  iadd r12.w, r12.w, cb2[0].x
                  iadd r12.w, r12.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.w, r12.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r12.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xyzw, r12.w, l(116), t12.xyzw
                  mad r22.w, |r15.w|, l(-0.200000), l(0.400000)
                  lt r27.w, r15.w, l(0.000000)
                  movc r22.w, r27.w, -r22.w, r22.w
                  mad r20.xyz, r3.xyzx, r22.wwww, v5.xyzx
                  dp4 r22.w, r44.xyzw, r20.xyzw
                  dp4 r27.w, r45.xyzw, r20.xyzw
                  lt r28.w, r27.w, r22.w
                  if_z r28.w
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r12.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xyzw, r12.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r46.xyzw, r12.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r47.xyzw, r12.w, l(148), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r48.xy, r12.w, l(164), t12.xyxx
                    dp4 r44.x, r44.xyzw, r20.xyzw
                    dp4 r44.y, r45.xyzw, r20.xyzw
                    div r20.xy, r44.xyxx, r27.wwww
                    mad r20.xy, r20.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r20.xy, r47.zwzz, r20.xyxx
                    mul r20.xy, r47.xyxx, r20.xyxx
                    div r44.xy, r13.wwww, r46.xzxx
                    add r44.zw, -r44.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                    ge r44.zw, r20.xxxy, r44.zzzw
                    ge r44.xy, r44.xyxx, r20.xyxx
                    or r44.xy, r44.xyxx, r44.zwzz
                    or r20.z, r44.y, r44.x
                    mov_sat r20.xy, r20.xyxx
                    mad r44.xy, r20.xyxx, r46.xzxx, r46.ywyy
                    mul r20.x, r27.w, r48.y
                    mad r20.y, r48.x, r27.w, r22.w
                    div r20.x, r20.y, r20.x
                  else 
                    mov r20.z, l(-1)
                  endif 
                  or r20.y, r28.w, r20.z
                  if_z r20.y
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.w, r12.w, l(28), t12.xxxx
                    max r20.x, r20.x, l(0.00006104)
                    and r12.w, r12.w, l(0x0000ffff)
                    if_nz r7.w
                      utof r45.z, r12.w
                      mov r20.yz, l(0,0,0,0)
                      loop 
                        ige r22.w, r20.z, l(8)
                        breakc_nz r22.w
                        dp2 r46.x, icb[r20.z + 0].yxyy, r16.xwxx
                        dp2 r46.y, icb[r20.z + 0].xyxx, r8.xyxx
                        mad r45.xy, r46.xyxx, r13.wwww, r44.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.w, r45.xyzx, t9.xxxx, s13, r20.x
                        mad r20.y, r22.w, l(0.125000), r20.y
                        iadd r20.z, r20.z, l(1)
                      endloop 
                    else 
                      utof r44.z, r12.w
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r20.y, r44.xyzx, t9.xxxx, s13, r20.x
                    endif 
                    mul r12.w, r20.y, r20.y
                    mul r12.w, r20.y, r12.w
                  else 
                    mov r12.w, l(1.000000)
                  endif 
                  mul r14.w, r12.w, r14.w
                else 
                  ubfe r12.w, l(4), l(20), r36.w
                  ult r13.w, l(0), r12.w
                  and r13.w, r3.w, r13.w
                  if_nz r13.w
                    iadd r12.w, r12.w, cb2[0].x
                    iadd r12.w, r12.w, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.w, r12.w, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r12.w, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xyzw, r12.w, l(116), t12.xyzw
                    mad r20.x, |r15.w|, l(-0.200000), l(0.400000)
                    lt r20.z, r15.w, l(0.000000)
                    movc r20.x, r20.z, -r20.x, r20.x
                    mad r21.xyz, r3.xyzx, r20.xxxx, v5.xyzx
                    dp4 r20.x, r44.xyzw, r21.xyzw
                    dp4 r20.z, r45.xyzw, r21.xyzw
                    lt r22.w, r20.z, r20.x
                    if_z r22.w
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r12.w, l(68), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xyzw, r12.w, l(84), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r46.xyzw, r12.w, l(132), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r47.xyzw, r12.w, l(148), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r48.xy, r12.w, l(164), t12.xyxx
                      dp4 r44.x, r44.xyzw, r21.xyzw
                      dp4 r44.y, r45.xyzw, r21.xyzw
                      div r21.xy, r44.xyxx, r20.zzzz
                      mad r21.xy, r21.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                      add r21.xy, r47.zwzz, r21.xyxx
                      mul r21.xy, r47.xyxx, r21.xyxx
                      div r44.xy, r13.wwww, r46.xzxx
                      add r44.zw, -r44.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                      ge r44.zw, r21.xxxy, r44.zzzw
                      ge r44.xy, r44.xyxx, r21.xyxx
                      or r44.xy, r44.xyxx, r44.zwzz
                      or r21.z, r44.y, r44.x
                      mov_sat r21.xy, r21.xyxx
                      mad r44.xy, r21.xyxx, r46.xzxx, r46.ywyy
                      mul r21.x, r20.z, r48.y
                      mad r20.x, r48.x, r20.z, r20.x
                      div r20.x, r20.x, r21.x
                    else 
                      mov r21.z, l(-1)
                    endif 
                    or r20.z, r22.w, r21.z
                    if_z r20.z
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.w, r12.w, l(28), t12.xxxx
                      max r20.x, r20.x, l(0.00006104)
                      and r12.w, r12.w, l(0x0000ffff)
                      if_nz r7.w
                        utof r21.z, r12.w
                        mov r20.z, l(0)
                        mov r22.w, l(0)
                        loop 
                          ige r27.w, r22.w, l(8)
                          breakc_nz r27.w
                          dp2 r45.x, icb[r22.w + 0].xyxx, r9.xyxx
                          dp2 r45.y, icb[r22.w + 0].yxyy, r9.xzxx
                          mad r21.xy, r45.xyxx, r13.wwww, r44.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.x, r21.xyzx, t9.xxxx, s13, r20.x
                          mad r20.z, r21.x, l(0.125000), r20.z
                          iadd r22.w, r22.w, l(1)
                        endloop 
                      else 
                        utof r44.z, r12.w
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r20.z, r44.xyzx, t9.xxxx, s13, r20.x
                      endif 
                      mul r12.w, r20.z, r20.z
                      mul r12.w, r20.z, r12.w
                    else 
                      mov r12.w, l(1.000000)
                    endif 
                    mul r14.w, r12.w, r14.w
                  endif 
                endif 
                mad r12.w, -|r15.w|, r4.w, l(1.000000)
                mul r12.w, r12.w, r12.w
                mad r12.w, -r12.w, l(0.620000), l(0.620000)
                add r12.w, -|r15.w|, r12.w
                mad r12.w, r6.w, r12.w, |r15.w|
                mul r12.w, r14.w, r12.w
                mov r36.x, r35.x
                lt r13.w, l(0.000000), r15.w
                mad r21.xyz, r12.wwww, r36.xyzx, r17.xyzx
                dp3_sat r15.w, r3.xyzx, r43.xyzx
                mad r42.xyz, r42.xyzx, r9.wwww, r6.xyzx
                dp3 r9.w, r42.xyzx, r42.xyzx
                rsq r9.w, r9.w
                mul r42.xyz, r9.wwww, r42.xyzx
                dp3 r9.w, r42.xyzx, r6.xyzx
                dp3 r20.x, r3.xyzx, r42.xyzx
                mad r22.w, |r20.x|, r5.w, -|r20.x|
                mad r20.x, |r20.x|, r22.w, l(1.000000)
                mad r22.w, r15.w, r0.w, r2.w
                mul r20.x, r20.x, r20.x
                mul r20.x, r22.w, r20.x
                rcp r20.x, r20.x
                mul r15.w, r18.w, r15.w
                mul r15.w, r15.w, r20.x
                mul r14.w, r14.w, r15.w
                mad r42.xyz, r14.wwww, r36.xyzx, r34.xyzx
                add_sat r9.w, -r9.w, l(1.000000)
                mul r15.w, r9.w, r9.w
                mul r15.w, r15.w, r15.w
                mul r9.w, r9.w, r15.w
                mul r9.w, r9.w, r14.w
                mad r43.xyz, r9.wwww, r36.xyzx, r33.xyzx
                mad r44.xyz, r12.wwww, r36.xyzx, r32.xyzx
                movc r17.xyz, r13.wwww, r21.xyzx, r17.xyzx
                movc r32.xyz, r13.wwww, r32.xyzx, r44.xyzx
                movc r33.xyz, r13.wwww, r43.xyzx, r33.xyzx
                movc r34.xyz, r13.wwww, r42.xyzx, r34.xyzx
              endif 
            endif 
          endif 
          break 
          case l(2)
          mov r21.xy, r38.zwzz
          mov r21.z, r39.w
          add r21.xyz, r21.xyzx, -v5.xyzx
          dp3 r9.w, r21.xyzx, r21.xyzx
          rsq r9.w, r9.w
          mul r42.xyz, r9.wwww, r21.xyzx
          dp3 r12.w, r3.xyzx, r42.xyzx
          lt r13.w, l(0.000000), |r12.w|
          if_nz r13.w
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r8.w, l(112), t12.yzwx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r8.w, l(128), t12.zxyw
            mov r44.xyz, r42.xyzx
            mov r44.w, r43.y
            dp4 r13.w, r44.xyzw, r19.xyzw
            lt r14.w, r13.w, l(1.000000)
            if_nz r14.w
              mov r45.xyz, l(1.000000,1.000000,1.000000,0)
              mov r14.w, l(0)
            else 
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r46.xyzw, r8.w, l(172), t12.yzwx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r47.xyzw, r8.w, l(188), t12.wxyz
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r48.xyzw, r8.w, l(204), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.w, r8.w, l(236), t12.xxxx
              add r49.xyz, r35.yzwy, -v5.xyzx
              mul r18.w, r38.x, r38.x
              dp3 r20.x, r49.xyzx, r49.xyzx
              div r18.w, r18.w, r20.x
              min r18.w, r18.w, l(1.000000)
              mad_sat r37.xy, r13.wwww, r37.xzxx, r37.ywyy
              mul r37.zw, r37.xxxy, r37.xxxy
              mad r37.xy, r37.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
              mul r37.xy, r37.xyxx, r37.zwzz
              mul r18.w, r18.w, r37.x
              mul r18.w, r37.y, r18.w
              mov r39.w, r40.x
              dp4 r37.x, r39.xyzw, r19.xyzw
              mov r49.xyz, r40.yzwy
              mov r49.w, r41.w
              dp4 r37.y, r49.xyzw, r19.xyzw
              div r22.xy, r37.xyxx, r13.wwww
              lt r13.w, r46.w, l(0.00048828)
              if_nz r13.w
                mov r47.y, r48.x
                mad_sat r37.xy, |r22.xyxx|, r47.zwzz, r47.xyxx
                mul r37.zw, r37.xxxy, r37.xxxy
                mad r37.xy, r37.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
                mul r37.xy, r37.xyxx, r37.zwzz
                mul r13.w, r37.y, r37.x
              else 
                mov r46.w, r47.y
                mul_sat r37.xyzw, |r22.yyxx|, r46.xyzw
                log r37.xyzw, r37.xyzw
                mul r37.xyzw, r37.xyzw, r47.xxxx
                exp r37.xyzw, r37.xyzw
                add r37.xy, r37.zwzz, r37.xyxx
                log r37.xy, r37.xyxx
                mul r37.xy, r37.xyxx, r48.xxxx
                exp r37.xy, r37.xyxx
                mul r20.x, r37.x, r47.z
                mad r22.w, r47.w, r37.y, l(-1.000000)
                mad r20.x, r47.w, r37.y, -r20.x
                div_sat r20.x, r22.w, r20.x
                mul r22.w, r20.x, r20.x
                mad r20.x, r20.x, l(-2.000000), l(3.000000)
                mul r13.w, r20.x, r22.w
              endif 
              mul r14.w, r13.w, r18.w
              and r13.w, r15.w, l(255)
              if_nz r13.w
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyz, r8.w, l(220), t12.xyzx
                dp3 r15.w, r48.yzwy, r22.xyzx
                dp3 r18.w, r37.xyzx, r22.xyzx
                frc r37.x, r15.w
                frc r37.y, r18.w
                iadd r13.w, r13.w, l(-1)
                utof r37.z, r13.w
                sample_l_indexable(texture2darray)(float,float,float,float) r45.xyz, r37.xyzx, t20.xyzw, s2, l(0.000000)
              else 
                mov r45.xyz, l(1.000000,1.000000,1.000000,0)
              endif 
            endif 
            mov r35.yz, r36.yyzy
            mul r22.xyw, r45.xyxz, r35.xyxz
            lt r13.w, l(0.000000), r14.w
            if_nz r13.w
              ubfe r13.w, l(3), l(27), r36.w
              ine r13.w, r13.w, l(1)
              if_nz r13.w
                mad r13.w, |r12.w|, l(-0.200000), l(0.400000)
                lt r15.w, r12.w, l(0.000000)
                movc r13.w, r15.w, -r13.w, r13.w
                mad r23.xyz, r3.xyzx, r13.wwww, v5.xyzx
                mov r42.xyz, r41.xyzx
                dp4 r13.w, r42.xyzw, r23.xyzw
                dp4 r15.w, r44.xyzw, r23.xyzw
                ge r18.w, r15.w, r13.w
                if_nz r18.w
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.y, r8.w, l(144), t12.xxxx
                  mov r39.w, r40.x
                  dp4 r35.x, r39.xyzw, r23.xyzw
                  mov r41.xyz, r40.yzwy
                  dp4 r35.y, r41.xyzw, r23.xyzw
                  div r23.xy, r35.xyxx, r15.wwww
                  mad_sat r23.xy, r23.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  mad r23.xy, r23.xyxx, r43.zwzz, r43.xyxx
                  div r8.w, r13.w, r15.w
                  max r8.w, r8.w, l(0.00006104)
                  and r13.w, r36.w, l(0x0000ffff)
                  if_nz r7.w
                    utof r35.z, r13.w
                    mov r15.w, l(0)
                    mov r18.w, l(0)
                    loop 
                      ige r20.x, r18.w, l(8)
                      breakc_nz r20.x
                      dp2 r37.x, icb[r18.w + 0].xyxx, r26.xyxx
                      dp2 r37.y, icb[r18.w + 0].yxyy, r26.xzxx
                      mad r35.xy, r37.xyxx, r38.yyyy, r23.xyxx
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r20.x, r35.xyzx, t9.xxxx, s13, r8.w
                      mad r15.w, r20.x, l(0.125000), r15.w
                      iadd r18.w, r18.w, l(1)
                    endloop 
                  else 
                    utof r23.z, r13.w
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r15.w, r23.xyzx, t9.xxxx, s13, r8.w
                  endif 
                  mul r8.w, r15.w, r15.w
                  mul r8.w, r15.w, r8.w
                else 
                  mov r8.w, l(1.000000)
                endif 
              else 
                mov r8.w, l(1.000000)
              endif 
              mul r8.w, r8.w, r14.w
              lt r13.w, l(0.000000), r8.w
              if_nz r13.w
                mul r13.w, r5.w, r36.x
                mul r13.w, r13.w, l(0.250000)
                ubfe r14.w, l(4), l(16), r36.w
                ult r18.w, l(0), r14.w
                and r18.w, r5.z, r18.w
                if_nz r18.w
                  iadd r14.w, r14.w, cb2[0].x
                  iadd r14.w, r14.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.w, r14.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r14.w, l(68), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r14.w, l(84), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r14.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r14.w, l(116), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r14.w, l(132), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r14.w, l(148), t12.xyzw
                  mad r20.x, |r12.w|, l(-0.200000), l(0.400000)
                  lt r23.x, r12.w, l(0.000000)
                  movc r20.x, r23.x, -r20.x, r20.x
                  mad r24.xyz, r3.xyzx, r20.xxxx, v5.xyzx
                  dp4 r23.x, r35.xyzw, r24.xyzw
                  dp4 r23.y, r37.xyzw, r24.xyzw
                  dp4 r20.x, r38.xyzw, r24.xyzw
                  dp4 r23.z, r39.xyzw, r24.xyzw
                  lt r24.x, r23.z, r20.x
                  div r23.xy, r23.xyxx, r23.zzzz
                  mad r23.xy, r23.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r23.xy, r41.zwzz, r23.xyxx
                  mul r23.xy, r41.xyxx, r23.xyxx
                  div r24.yz, r18.wwww, r40.xxzx
                  add r35.xy, -r24.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
                  ge r35.xy, r23.xyxx, r35.xyxx
                  ge r24.yz, r24.yyzy, r23.xxyx
                  or r24.yz, r24.yyzy, r35.xxyx
                  or r24.y, r24.z, r24.y
                  or r24.x, r24.x, r24.y
                  if_z r24.x
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r24.x, r14.w, l(28), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r24.yz, r14.w, l(164), t12.xxyx
                    mov_sat r23.xy, r23.xyxx
                    mad r35.xy, r23.xyxx, r40.xzxx, r40.ywyy
                    mul r14.w, r23.z, r24.z
                    mad r20.x, r24.y, r23.z, r20.x
                    div r14.w, r20.x, r14.w
                    max r14.w, r14.w, l(0.00006104)
                    and r20.x, r24.x, l(0x0000ffff)
                    if_nz r7.w
                      utof r23.z, r20.x
                      mov r24.xy, l(0,0,0,0)
                      loop 
                        ige r24.z, r24.y, l(8)
                        breakc_nz r24.z
                        dp2 r36.x, icb[r24.y + 0].xyxx, r27.xyxx
                        dp2 r36.y, icb[r24.y + 0].yxyy, r27.xzxx
                        mad r23.xy, r36.xyxx, r18.wwww, r35.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.x, r23.xyzx, t9.xxxx, s13, r14.w
                        mad r24.x, r23.x, l(0.125000), r24.x
                        iadd r24.y, r24.y, l(1)
                      endloop 
                    else 
                      utof r35.z, r20.x
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.x, r35.xyzx, t9.xxxx, s13, r14.w
                    endif 
                    mul r14.w, r24.x, r24.x
                    mul r14.w, r24.x, r14.w
                  else 
                    mov r14.w, l(1.000000)
                  endif 
                  mul r8.w, r8.w, r14.w
                else 
                  ubfe r14.w, l(4), l(20), r36.w
                  ult r18.w, l(0), r14.w
                  and r18.w, r3.w, r18.w
                  if_nz r18.w
                    iadd r14.w, r14.w, cb2[0].x
                    iadd r14.w, r14.w, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.w, r14.w, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r14.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r14.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r14.w, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r14.w, l(116), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r14.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r14.w, l(148), t12.xyzw
                    mad r20.x, |r12.w|, l(-0.200000), l(0.400000)
                    lt r23.x, r12.w, l(0.000000)
                    movc r20.x, r23.x, -r20.x, r20.x
                    mad r25.xyz, r3.xyzx, r20.xxxx, v5.xyzx
                    dp4 r23.x, r35.xyzw, r25.xyzw
                    dp4 r23.y, r36.xyzw, r25.xyzw
                    dp4 r20.x, r37.xyzw, r25.xyzw
                    dp4 r23.z, r38.xyzw, r25.xyzw
                    lt r24.y, r23.z, r20.x
                    div r23.xy, r23.xyxx, r23.zzzz
                    mad r23.xy, r23.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r23.xy, r40.zwzz, r23.xyxx
                    mul r23.xy, r40.xyxx, r23.xyxx
                    div r25.xy, r18.wwww, r39.xzxx
                    add r35.xy, -r25.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                    ge r35.xy, r23.xyxx, r35.xyxx
                    ge r25.xy, r25.xyxx, r23.xyxx
                    or r25.xy, r25.xyxx, r35.xyxx
                    or r24.z, r25.y, r25.x
                    or r24.y, r24.y, r24.z
                    if_z r24.y
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r24.y, r14.w, l(28), t12.xxxx
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r25.xy, r14.w, l(164), t12.xyxx
                      mov_sat r23.xy, r23.xyxx
                      mad r35.xy, r23.xyxx, r39.xzxx, r39.ywyy
                      mul r14.w, r23.z, r25.y
                      mad r20.x, r25.x, r23.z, r20.x
                      div r14.w, r20.x, r14.w
                      max r14.w, r14.w, l(0.00006104)
                      and r20.x, r24.y, l(0x0000ffff)
                      if_nz r7.w
                        utof r23.z, r20.x
                        mov r24.yz, l(0,0,0,0)
                        loop 
                          ige r25.x, r24.z, l(8)
                          breakc_nz r25.x
                          dp2 r25.x, icb[r24.z + 0].xyxx, r28.xyxx
                          dp2 r25.y, icb[r24.z + 0].yxyy, r28.xzxx
                          mad r23.xy, r25.xyxx, r18.wwww, r35.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.x, r23.xyzx, t9.xxxx, s13, r14.w
                          mad r24.y, r23.x, l(0.125000), r24.y
                          iadd r24.z, r24.z, l(1)
                        endloop 
                      else 
                        utof r35.z, r20.x
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.y, r35.xyzx, t9.xxxx, s13, r14.w
                      endif 
                      mul r14.w, r24.y, r24.y
                      mul r14.w, r24.y, r14.w
                    else 
                      mov r14.w, l(1.000000)
                    endif 
                    mul r8.w, r8.w, r14.w
                  endif 
                endif 
                mad r14.w, -|r12.w|, r4.w, l(1.000000)
                mul r14.w, r14.w, r14.w
                mad r14.w, -r14.w, l(0.620000), l(0.620000)
                add r14.w, -|r12.w|, r14.w
                mad r14.w, r6.w, r14.w, |r12.w|
                mul r14.w, r8.w, r14.w
                lt r18.w, l(0.000000), r12.w
                mad r23.xyz, r14.wwww, r22.xywx, r17.xyzx
                mov_sat r12.w, r12.w
                mad r21.xyz, r21.xyzx, r9.wwww, r6.xyzx
                dp3 r9.w, r21.xyzx, r21.xyzx
                rsq r9.w, r9.w
                mul r21.xyz, r9.wwww, r21.xyzx
                dp3 r9.w, r21.xyzx, r6.xyzx
                dp3 r20.x, r3.xyzx, r21.xyzx
                mad r21.x, |r20.x|, r5.w, -|r20.x|
                mad r20.x, |r20.x|, r21.x, l(1.000000)
                mad r21.x, r12.w, r0.w, r2.w
                mul r20.x, r20.x, r20.x
                mul r20.x, r21.x, r20.x
                rcp r20.x, r20.x
                mul r12.w, r13.w, r12.w
                mul r12.w, r12.w, r20.x
                mul r8.w, r8.w, r12.w
                mad r21.xyz, r8.wwww, r22.xywx, r34.xyzx
                add_sat r9.w, -r9.w, l(1.000000)
                mul r12.w, r9.w, r9.w
                mul r12.w, r12.w, r12.w
                mul r9.w, r9.w, r12.w
                mul r8.w, r8.w, r9.w
                mad r25.xyz, r8.wwww, r22.xywx, r33.xyzx
                mad r22.xyw, r14.wwww, r22.xyxw, r32.xyxz
                movc r17.xyz, r18.wwww, r23.xyzx, r17.xyzx
                movc r32.xyz, r18.wwww, r32.xyzx, r22.xywx
                movc r33.xyz, r18.wwww, r25.xyzx, r33.xyzx
                movc r34.xyz, r18.wwww, r21.xyzx, r34.xyzx
              endif 
            endif 
          endif 
          break 
          default 
          break 
        endswitch 
      endif 
    endif 
  endloop 
  mov r11.yzw, r17.xxyz
  mov r29.xyz, r32.xyzx
  mov r30.xyz, r33.xyzx
  mov r31.xyz, r34.xyzx
  iadd r5.y, r5.y, l(32)
endloop 
mul r3.xyz, r4.xyzx, r29.xyzx
mad r0.xyz, r11.yzwy, r0.xyzx, r3.xyzx
add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r3.xyz, r3.xyzx, r30.xyzx
mad r2.xyz, r31.xyzx, r2.xyzx, r3.xyzx
add r0.xyz, r0.xyzx, r2.xyzx
lt r0.w, l(0.000000), cb2[9].z
if_nz r0.w
  dp3 r0.w, v5.xyzx, v5.xyzx
  rsq r2.x, r0.w
  mul r2.xyz, r2.xxxx, v5.xyzx
  sqrt r0.w, r0.w
  lt r2.w, l(0.000000), cb2[13].w
  if_nz r2.w
    mad r3.xy, r0.wwww, cb2[15].xyxx, cb2[14].zwzz
    mul r3.xy, r3.xyxx, cb2[16].xyxx
    lt r2.w, l(0.010000), |v5.z|
    mul r3.zw, v5.zzzz, cb2[15].zzzw
    mul r4.xy, r3.zwzz, l(-1.442695, -1.442695, 0.000000, 0.000000)
    exp r4.xy, r4.xyxx
    add r4.xy, -r4.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    div r3.zw, r4.xxxy, r3.zzzw
    mul r3.zw, r3.zzzw, r3.xxxy
    movc r3.xy, r2.wwww, r3.zwzz, r3.xyxx
    mul r3.xzw, r3.xxxx, cb2[12].xxyz
    exp r3.xzw, r3.xxzw
    mul r4.xyz, r3.yyyy, cb2[12].xyzx
    exp r4.xyz, r4.xyzx
    add r4.xyz, -r3.xzwx, r4.xyzx
    mad r3.xyz, cb2[13].wwww, r4.xyzx, r3.xzwx
  else 
    mad r2.w, r0.w, cb2[15].x, cb2[14].z
    mul r2.w, r2.w, cb2[16].x
    lt r3.w, l(0.010000), |v5.z|
    mul r4.x, v5.z, cb2[15].z
    mul r4.y, r4.x, l(-1.442695)
    exp r4.y, r4.y
    add r4.y, -r4.y, l(1.000000)
    div r4.x, r4.y, r4.x
    mul r4.x, r2.w, r4.x
    movc r2.w, r3.w, r4.x, r2.w
    mul r4.xyz, r2.wwww, cb2[12].xyzx
    exp r3.xyz, r4.xyzx
  endif 
  mad r3.xyz, r3.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r3.xyz, r3.xyzx, -cb2[9].zzzz
  dp3 r2.x, cb2[7].yzwy, -r2.xyzx
  mad r2.y, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r2.z, cb2[8].w, -r2.x, l(1.000000)
  mul r2.z, r2.z, r2.z
  mul r2.z, r2.z, l(12.566371)
  div r2.y, r2.y, r2.z
  add r0.w, r0.w, -cb2[10].w
  mul_sat r0.w, r0.w, cb2[11].w
  mul r0.w, r0.w, r2.y
  mov_sat r2.x, r2.x
  mad r2.x, r2.x, r2.x, l(1.000000)
  mad r2.x, r2.x, l(0.05968310), l(-1.000000)
  mad r2.x, cb2[8].z, r2.x, l(1.000000)
  mul r2.yzw, r0.wwww, cb2[11].xxyz
  mad r2.xyz, r2.xxxx, cb2[10].xyzx, r2.yzwy
  mul r2.xyz, r2.xyzx, cb2[9].wwww
  add r4.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r2.xyz, r2.xyzx, r4.xyzx
  mad r2.xyz, r0.xyzx, r3.xyzx, r2.xyzx
else 
  mul r0.w, v5.z, cb2[6].x
  mad r2.w, cb2[6].x, v5.z, cb2[5].x
  lt r3.x, |r0.w|, l(0.000100)
  min r3.y, r2.w, l(64.000000)
  mul r3.y, r3.y, l(1.442695)
  exp r3.y, r3.y
  mov_sat r3.z, cb2[6].z
  lt r3.w, r2.w, l(0.000000)
  add r2.w, r2.w, l(1.000000)
  movc r2.w, r3.w, r3.y, r2.w
  add r2.w, r2.w, -cb2[6].z
  movc r0.w, r3.x, l(1.000000), r0.w
  div r0.w, r2.w, r0.w
  movc r0.w, r3.x, r3.z, r0.w
  mul r0.w, r0.w, cb2[5].z
  dp3 r2.w, v5.xyzx, v5.xyzx
  sqrt r3.x, r2.w
  mad r0.w, r0.w, r3.x, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  rsq r2.w, r2.w
  mul r3.xyz, r2.wwww, v5.xyzx
  dp3 r2.w, cb2[7].yzwy, r3.xyzx
  mad_sat r2.w, cb2[8].y, r2.w, cb2[8].x
  add r3.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r3.xyzw, r2.wwww, r3.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r3.w
  add r3.xyz, -r0.xyzx, r3.xyzx
  mad r2.xyz, r0.wwww, r3.xyzx, r0.xyzx
endif 
mul r0.xyz, r2.xyzx, cb1[85].yyyy
ge r2.xyz, r0.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.xyz, r0.xyzx, r2.xyzx
min r0.xyz, r0.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
max r2.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r1.xyz, r1.wwww, r2.xyzx
and r0.w, r1.w, l(0x7f800000)
ieq r0.w, r0.w, l(0x7f800000)
eq r3.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
and r3.xy, r3.zwzz, r3.xyxx
and r2.w, r3.y, r3.x
or r0.w, r0.w, r2.w
if_z r0.w
  ftou r3.xy, v0.xyxx
  imm_atomic_iadd r4.x, u6, r3.xyxx, l(1)
  and r3.zw, r4.xxxx, l(0, 0, 0x0000ffff, 0x0000ffff)
  ult r0.w, r3.w, cb2[58].z
  if_nz r0.w
    max r0.w, r1.z, r1.y
    max r0.w, r0.w, r1.x
    mov r0.w, |r0.w|
    and r0.w, r0.w, l(0x7f800000)
    iadd r0.w, r0.w, l(0x00800000)
    mad r2.xyz, r2.xyzx, r1.wwww, r0.wwww
    ubfe r2.x, l(8), l(15), r2.x
    ushr r2.yz, r2.yyzy, l(0, 15, 15, 0)
    bfi r2.yz, l(0, 8, 8, 0), l(0, 8, 16, 0), r2.yyzy, l(0, 0, 0, 0)
    iadd r2.x, r2.y, r2.x
    iadd r2.x, r2.z, r2.x
    ishl r0.w, r0.w, l(1)
    iadd r2.xzw, r0.wwww, r2.xxxx
    mov_sat r0.w, r1.w
    mul r0.w, r0.w, l(2046.000000)
    ftou r0.w, r0.w
    ishl r4.x, v0.z, l(2)
    and r0.w, r0.w, l(2046)
    bfi r2.y, l(11), l(0), r0.w, r4.x
    store_uav_typed u7.xyzw, r3.xyzw, r2.xyzw
    mov r0.w, l(-1)
  else 
    mov r0.w, l(0)
  endif 
else 
  mov r0.w, l(-1)
endif 
mul r1.xyz, r1.wwww, r0.xyzx
movc o0.xyzw, r0.wwww, l(0,0,0,0), r1.xyzw
ret 
// Approximately 1951 instruction slots used
