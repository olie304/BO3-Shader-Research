//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:39:41 2021
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float3 specColorTint;              // Offset:  160 Size:    12 [unused]
//   float baseNormalHeight;            // Offset:  172 Size:     4 [unused]
//   float2 glossRange;                 // Offset:  176 Size:     8 [unused]
//   float2 normalMapScale;             // Offset:  184 Size:     8
//   float4 flowParams;                 // Offset:  192 Size:    16
//   float4 noiseParams;                // Offset:  208 Size:    16
//   bool useOrientedNormalMap;         // Offset:  224 Size:     4
//   float4 specularLobeRoughnessControl;// Offset:  240 Size:    16
//   float4 lobeWeightingThicknessRefraction;// Offset:  256 Size:    16
//   float3 normalAdjustAndGloss;       // Offset:  272 Size:    12
//   float4 decalTint;                  // Offset:  288 Size:    16
//   float2 opacityScale;               // Offset:  304 Size:     8
//   float invZFeatherDepth;            // Offset:  312 Size:     4 [unused]
//   float2 normalsFlowScaleMin;        // Offset:  320 Size:     8
//   float4 ssrParams;                  // Offset:  336 Size:    16
//   float translucentShadowOpacity;    // Offset:  352 Size:     4 [unused]
//   float3 foamColor;                  // Offset:  356 Size:    12
//   float4 foamMaskScroll01;           // Offset:  368 Size:    16 [unused]
//   float4 foamMaskScroll23;           // Offset:  384 Size:    16 [unused]
//   float4 foamMaskScale01;            // Offset:  400 Size:    16 [unused]
//   float4 foamMaskScale23;            // Offset:  416 Size:    16 [unused]
//   float foamScale;                   // Offset:  432 Size:     4 [unused]
//   float2 foamSpacing;                // Offset:  436 Size:     8
//   float foamColorScale;              // Offset:  444 Size:     4
//   float foamZFeather;                // Offset:  448 Size:     4
//   bool useFoam;                      // Offset:  452 Size:     4
//   bool useSSR;                       // Offset:  456 Size:     4
//   bool useLoopedSSR;                 // Offset:  460 Size:     4
//   bool useSpecularZFeather;          // Offset:  464 Size:     4 [unused]
//   bool scaleNormalsWithFlow;         // Offset:  468 Size:     4
//   bool doubleSidedLighting;          // Offset:  472 Size:     4
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4 [unused]
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for forwardDecalConstants
// {
//
//   struct CoreDecalConstantsPack
//   {
//       
//       uint4 data[8];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   128
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// normalSampler                     sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// flowSampler                       sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// noiseSampler                      sampler      NA          NA             s5      1 
// foamSampler                       sampler      NA          NA             s6      1 
// decalSampler                      sampler      NA          NA             s7      1 
// bilinearClamp                     sampler      NA          NA             s8      1 
// pointClamp                        sampler      NA          NA             s9      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// normalMap                         texture  float4          2d             t0      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// flowMap                           texture  float4          2d            t21      1 
// noiseMap                          texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// foamBase                          texture  float4          2d            t24      1 
// decalMap                          texture  float4          2d            t25      1 
// ifloatZSceneDownsampled           texture  float4          2d            t26      1 
// ifloatZScene                      texture  float4          2d            t29      1 
// iResolveScene                     texture  float4          2d            t30      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// visibleDecals                     texture    uint     2darray            t35      1 
// forwardDecalConstants             texture  struct         r/o            t36      1 
// rColorRamp                        texture  float4          2d            t37      1 
// materialTexBC7                    texture  float4     2darray            t42      1 
// materialTexBC3                    texture  float4     2darray            t43      1 
// materialTexMask                   texture  float4     2darray            t45      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyz         1     NONE   float       
// COLOR                    1      w        1     NONE   float       
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 4   x           3     NONE    uint       
// TEXCOORD                 1   xyz         4     NONE   float   xyz 
// TEXCOORD                 2   xyz         5     NONE   float   xyz 
// TEXCOORD                 3   xyz         6     NONE   float   xyz 
// OFFPOSITION              0   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
// SV_IsFrontFace           0   x          10    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[30], immediateIndexed
dcl_constantbuffer CB1[86], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_sampler s9, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2d (float,float,float,float) t26
dcl_resource_texture2d (float,float,float,float) t29
dcl_resource_texture2d (float,float,float,float) t30
dcl_resource_texture2darray (float,float,float,float) t31
dcl_resource_texture2darray (uint,uint,uint,uint) t35
dcl_resource_structured t36, 128
dcl_resource_texture2d (float,float,float,float) t37
dcl_resource_texture2darray (float,float,float,float) t42
dcl_resource_texture2darray (float,float,float,float) t43
dcl_resource_texture2darray (float,float,float,float) t45
dcl_input_ps_siv linear noperspective v0.xyzw, position
dcl_input_ps linear v2.xy
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyz
dcl_input_ps linear v8.xyzw
dcl_input_ps linear v9.xyzw
dcl_input_ps_sgv constant v10.x, is_front_face
dcl_output o0.xyzw
dcl_temps 45
ge r0.x, v0.z, l(0.984375)
mul r0.y, v0.z, l(1.01587307)
mad r0.z, v0.z, l(64.000000), l(-63.000000)
movc r0.x, r0.x, r0.z, r0.y
max r0.x, r0.x, l(0.00000001)
rcp r0.x, r0.x
ftou r0.yz, v0.yyxy
deriv_rtx_coarse r1.xyz, v7.xyzx
deriv_rty_coarse r2.xyz, v7.xyzx
iadd r0.w, cb2[0].y, cb2[0].x
add r3.xyz, v7.xyzx, cb1[24].xyzx
mul r1.w, r0.x, l(0.00781250)
min r1.w, r1.w, l(15.000000)
ftou r1.w, r1.w
ushr r4.xy, r0.zyzz, l(6, 6, 0, 0)
ishl r4.z, r1.w, l(4)
and r1.w, cb2[57].z, l(-32)
iadd r2.w, -r1.w, cb2[57].z
mov r5.xy, l(0,0,0,0)
mov r6.w, l(0)
mov r3.w, l(1.000000)
mov r7.xyzw, l(0,0,0,0)
mov r8.xyz, l(0,0,0,0)
mov r4.w, l(0)
loop 
  uge r5.w, r4.w, cb2[57].z
  breakc_nz r5.w
  ushr r5.z, r4.w, l(5)
  iadd r6.xyz, r4.xyzx, r5.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r5.z, r6.xyzw, t35.yzxw
  ieq r5.w, r1.w, r4.w
  ubfe r6.x, r2.w, l(0), r5.z
  movc r5.z, r5.w, r6.x, r5.z
  iadd r5.w, r0.w, r4.w
  mov r9.xyzw, r7.yzwx
  mov r6.xyz, r8.xyzx
  mov r8.w, r5.z
  loop 
    breakc_z r8.w
    firstbit_lo r10.x, r8.w
    ishl r10.y, l(1), r10.x
    and r10.z, r8.w, r10.y
    if_nz r10.z
      xor r8.w, r8.w, r10.y
      iadd r10.y, r5.w, r10.x
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r11.xyzw, r10.y, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r12.xy, r10.y, l(16), t11.xyxx
      add r10.yzw, r11.xxyz, -v7.xxyz
      mov r12.z, r11.w
      lt r10.yzw, |r10.yyzw|, r12.zzxy
      and r10.y, r10.z, r10.y
      and r10.y, r10.w, r10.y
      if_nz r10.y
        iadd r10.x, r4.w, r10.x
        ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r10.yzw, r10.x, l(0), t36.xxyz
        ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r11.xyz, r10.x, l(16), t36.xyzx
        ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r12.xyz, r10.x, l(32), t36.xyzx
        mov r13.x, r10.y
        mov r13.y, r11.x
        mov r13.z, r12.x
        dp3 r10.y, r13.xyzx, r13.xyzx
        rsq r10.y, r10.y
        mul r14.xyz, r10.yyyy, r13.xyzx
        dp3 r10.y, r14.xyzx, v4.xyzx
        ge r10.y, r10.y, l(0.500000)
        if_nz r10.y
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r14.xyw, r10.x, l(48), t36.xyxz
          mov r13.w, r14.x
          dp4 r13.x, r3.xyzw, r13.xyzw
          mov r15.x, r10.z
          mov r15.y, r11.y
          mov r15.z, r12.y
          mov r15.w, r14.y
          dp4 r13.y, r3.xyzw, r15.xyzw
          mov r14.x, r10.w
          mov r14.y, r11.z
          mov r14.z, r12.z
          dp4 r13.z, r3.xyzw, r14.xyzw
          lt r10.yzw, |r13.xxyz|, l(0.000000, 1.000000, 1.000000, 1.000000)
          and r10.y, r10.z, r10.y
          and r10.y, r10.w, r10.y
          if_nz r10.y
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r11.xyzw, r10.x, l(64), t36.xyzw
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r12.xyzw, r10.x, l(80), t36.xyzw
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r10.y, r10.x, l(108), t36.xxxx
            dp3 r16.x, r1.xyzx, r15.xyzx
            dp3 r16.y, r1.xyzx, r14.xyzx
            dp3 r15.x, r2.xyzx, r15.xyzx
            dp3 r15.y, r2.xyzx, r14.xyzx
            mad r10.zw, r13.yyyz, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
            mul r13.xyz, r16.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
            mul r14.xyz, r15.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
            and r12.yz, r12.yyzy, l(0, 0x0000ffff, 0x0000ffff, 0)
            if_nz r12.y
              ubfe r13.w, l(4), l(24), r12.w
              ishl r13.w, l(1), r13.w
              ushr r14.w, r12.w, l(28)
              ishl r14.w, l(1), r14.w
              ieq r15.x, r12.y, l(4)
              if_nz r15.x
                and r15.x, r12.w, l(4095)
                ubfe r15.y, l(12), l(12), r12.w
                and r15.z, r10.y, l(1023)
                utof r16.xz, r13.wwww
                utof r16.y, r14.w
                mad r17.xy, r10.zwzz, r16.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                add r17.zw, r16.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                min r17.xy, r17.zwzz, r17.xyxx
                utof r18.xy, r15.xyxx
                add r15.xy, r17.xyxx, r18.xyxx
                mul r17.xy, r15.xyxx, cb1[83].xyxx
                utof r17.z, r15.z
                mul r15.xyz, r13.zyzz, cb1[83].xyxx
                mul r15.xyz, r16.xyzx, r15.xyzx
                mul r18.xyz, r14.zyzz, cb1[83].xyxx
                mul r16.xyz, r16.xyzx, r18.xyzx
                sample_d_indexable(texture2darray)(float,float,float,float) r15.xyzw, r17.xyzx, t42.xyzw, s4, r15.xyzx, r16.xyzx
              else 
                ieq r12.y, r12.y, l(1)
                if_nz r12.y
                  and r12.y, r12.w, l(4095)
                  ubfe r12.w, l(12), l(12), r12.w
                  and r16.x, r10.y, l(1023)
                  utof r17.xz, r13.wwww
                  utof r17.y, r14.w
                  mad r16.yz, r10.zzwz, r17.zzyz, l(0.000000, 0.500000, 0.500000, 0.000000)
                  add r18.xy, r17.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r16.yz, r16.yyzy, r18.xxyx
                  utof r18.xy, r12.ywyy
                  add r12.yw, r16.yyyz, r18.xxxy
                  mul r18.xy, r12.ywyy, cb1[83].zwzz
                  utof r18.z, r16.x
                  mul r16.xyz, r13.zyzz, cb1[83].zwzz
                  mul r16.xyz, r17.xyzx, r16.xyzx
                  mul r19.xyz, r14.zyzz, cb1[83].zwzz
                  mul r17.xyz, r17.xyzx, r19.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r15.xyzw, r18.xyzx, t43.xyzw, s4, r16.xyzx, r17.xyzx
                else 
                  mov r15.xyzw, l(1.000000,1.000000,1.000000,1.000000)
                endif 
              endif 
              mul r11.xyz, r11.xyzx, r15.xyzx
              mul r12.y, r11.w, r15.w
            else 
              mov r11.xyz, l(0,0,0,0)
              mov r12.y, l(0)
            endif 
            ne r12.w, r12.x, l(1.000000)
            add r11.w, r11.w, r12.y
            mad_sat r11.w, r11.w, r12.x, -r12.x
            movc r11.w, r12.w, r11.w, r12.y
            if_nz r12.z
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r10.x, r10.x, l(100), t36.xxxx
              ubfe r12.x, l(4), l(24), r10.x
              ushr r12.y, r10.x, l(28)
              ishl r12.xy, l(1, 1, 0, 0), r12.xyxx
              ieq r12.w, r12.z, l(2)
              if_nz r12.w
                and r12.w, r10.x, l(4095)
                ubfe r13.w, l(12), l(12), r10.x
                ubfe r14.w, l(10), l(20), r10.y
                utof r15.xyz, r12.xyxx
                mad r16.xy, r10.zwzz, r15.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                add r16.zw, r15.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                min r16.xy, r16.zwzz, r16.xyxx
                utof r17.x, r12.w
                utof r17.y, r13.w
                add r16.xy, r16.xyxx, r17.xyxx
                mul r16.xy, r16.xyxx, cb1[84].xyxx
                utof r16.z, r14.w
                mul r17.xyz, r13.zyzz, cb1[84].xyxx
                mul r17.xyz, r15.xyzx, r17.xyzx
                mul r18.xyz, r14.zyzz, cb1[84].xyxx
                mul r15.xyz, r15.xyzx, r18.xyzx
                sample_d_indexable(texture2darray)(float,float,float,float) r12.w, r16.xyzx, t45.yzwx, s4, r17.xyzx, r15.xyzx
              else 
                ieq r12.z, r12.z, l(4)
                if_nz r12.z
                  and r12.z, r10.x, l(4095)
                  ubfe r13.w, l(12), l(12), r10.x
                  ubfe r14.w, l(10), l(20), r10.y
                  utof r15.xyz, r12.xyxx
                  mad r16.xy, r10.zwzz, r15.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r16.zw, r15.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r16.xy, r16.zwzz, r16.xyxx
                  utof r17.x, r12.z
                  utof r17.y, r13.w
                  add r16.xy, r16.xyxx, r17.xyxx
                  mul r16.xy, r16.xyxx, cb1[83].xyxx
                  utof r16.z, r14.w
                  mul r17.xyz, r13.zyzz, cb1[83].xyxx
                  mul r17.xyz, r15.xyzx, r17.xyzx
                  mul r18.xyz, r14.zyzz, cb1[83].xyxx
                  mul r15.xyz, r15.xyzx, r18.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r12.w, r16.xyzx, t42.yzwx, s4, r17.xyzx, r15.xyzx
                else 
                  and r12.z, r10.x, l(4095)
                  ubfe r10.x, l(12), l(12), r10.x
                  ubfe r10.y, l(10), l(20), r10.y
                  utof r15.xyz, r12.xyxx
                  mad r10.zw, r10.zzzw, r15.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
                  add r12.xy, r15.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r10.zw, r10.zzzw, r12.xxxy
                  utof r12.x, r12.z
                  utof r12.yz, r10.xxyx
                  add r10.xz, r10.zzwz, r12.xxyx
                  mul r12.xy, r10.xzxx, cb1[83].zwzz
                  mul r10.xyz, r13.xyzx, cb1[83].zwzz
                  mul r10.xyz, r15.xyzx, r10.xyzx
                  mul r13.xyz, r14.xyzx, cb1[83].zwzz
                  mul r13.xyz, r15.xyzx, r13.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r12.w, r12.xyzx, t43.yzwx, s4, r10.xyzx, r13.xyzx
                endif 
              endif 
              mad r10.xyz, r12.wwww, l(0.960000, 0.960000, 0.960000, 0.000000), l(0.040000, 0.040000, 0.040000, 0.000000)
              add_sat r10.w, -r12.w, l(1.000000)
              mul r11.xyz, r10.wwww, r11.xyzx
            else 
              mov r10.xyz, l(0.040000,0.040000,0.040000,0)
            endif 
            add r10.w, -r11.w, l(1.000000)
            mul r12.xyz, r6.xyzx, r10.wwww
            mad r6.xyz, r11.xyzx, r11.wwww, r12.xyzx
            mul r11.xyz, r9.xyzx, r10.wwww
            mad r9.xyz, r10.xyzx, r11.wwww, r11.xyzx
            mad r9.w, r9.w, r10.w, r11.w
          endif 
        endif 
      endif 
    endif 
  endloop 
  mov r7.xyzw, r9.wxyz
  mov r8.xyz, r6.xyzx
  iadd r4.w, r4.w, l(32)
endloop 
mov_sat r7.x, r7.x
add r0.w, -r7.x, l(1.000000)
mul r1.xy, v2.xyxx, cb0[11].zwzz
mul r1.zw, cb0[13].xxxy, cb1[69].wwww
mad r1.zw, v2.xxxy, cb0[13].zzzz, r1.zzzw
sample_indexable(texture2d)(float,float,float,float) r1.zw, r1.zwzz, t22.zwxy, s5
mul r1.zw, r1.zzzw, cb0[13].wwww
mad r1.zw, v2.xxxy, cb0[12].xxxx, r1.zzzw
frc r2.xy, r1.zwzz
mad r2.zw, r2.xxxy, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
mul r2.xy, r2.xyxx, r2.xyxx
mul r5.xy, r2.xyxx, r2.zwzz
resinfo_indexable(texture2d)(float,float,float,float) r5.zw, l(0), t0.zwxy
mul r5.zw, r1.xxxy, r5.zzzw
deriv_rtx_coarse r6.xy, r5.zwzz
deriv_rty_coarse r5.zw, r5.zzzw
dp2 r4.w, r6.xyxx, r6.xyxx
dp2 r5.z, r5.zwzz, r5.zwzz
max r4.w, r4.w, r5.z
log r4.w, r4.w
mul r4.w, r4.w, l(0.500000)
round_ni r5.zw, r1.zzzw
div r5.zw, r5.zzzw, cb0[12].xxxx
sample_indexable(texture2d)(float,float,float,float) r5.zw, r5.zwzz, t21.zwxy, s3
add r5.zw, r5.zzzw, r5.zzzw
add r6.xyzw, r1.zwzw, l(1.000000, 0.000000, 0.000000, 1.000000)
round_ni r6.xyzw, r6.xyzw
div r6.xyzw, r6.xyzw, cb0[12].xxxx
sample_indexable(texture2d)(float,float,float,float) r6.xy, r6.xyxx, t21.xyzw, s3
add r6.xy, r6.xyxx, r6.xyxx
sample_indexable(texture2d)(float,float,float,float) r6.zw, r6.zwzz, t21.zwxy, s3
add r6.zw, r6.zzzw, r6.zzzw
add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
round_ni r1.zw, r1.zzzw
div r1.zw, r1.zzzw, cb0[12].xxxx
sample_indexable(texture2d)(float,float,float,float) r1.zw, r1.zwzz, t21.zwxy, s3
add r1.zw, r1.zzzw, r1.zzzw
resinfo_indexable(texture2d)(float,float,float,float) r9.xy, l(0), t25.xyzw
mul r9.xy, r1.xyxx, r9.xyxx
deriv_rtx_coarse r9.zw, r9.xxxy
deriv_rty_coarse r9.xy, r9.xyxx
dp2 r8.w, r9.zwzz, r9.zwzz
dp2 r9.x, r9.xyxx, r9.xyxx
max r8.w, r8.w, r9.x
log r8.w, r8.w
mul r8.w, r8.w, l(0.500000)
if_nz cb0[29].y
  sample_indexable(texture2d)(float,float,float,float) r9.xy, v2.xyxx, t21.xyzw, s3
  add r9.xy, r9.xyxx, r9.xyxx
  mad r9.zw, r9.xxxy, l(0.000000, 0.000000, -1.000000, 1.000000), l(0.000000, 0.000000, 1.000000, -1.000000)
  mad r9.xy, r9.xwxx, l(-1.000000, 1.000000, 0.000000, 0.000000), l(1.000000, 0.000000, 0.000000, 0.000000)
  dp2 r9.x, r9.zwzz, r9.xyxx
  sqrt r9.x, r9.x
  mad r9.x, r9.x, cb0[20].y, cb0[20].x
  mul r9.xy, r9.xxxx, cb0[17].xyxx
else 
  mov r9.xy, cb0[17].xyxx
endif 
mad r2.xy, -r2.zwzz, r2.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
mul r2.xy, r2.xyxx, r2.xyxx
mad r2.xy, r5.xyxx, r5.xyxx, r2.xyxx
rsq r2.xy, r2.xyxx
if_z cb0[14].x
  mul r2.z, cb0[12].y, cb1[69].w
  mad r9.zw, r5.zzzw, l(0.000000, 0.000000, -1.000000, 1.000000), l(0.000000, 0.000000, 1.000000, -1.000000)
  mad r9.zw, r9.zzzw, r2.zzzz, r1.xxxy
  sample_l_indexable(texture2d)(float,float,float,float) r9.zw, r9.zwzz, t0.zwxy, s1, r4.w
  mad r10.xy, r6.xyxx, l(-1.000000, 1.000000, 0.000000, 0.000000), l(1.000000, -1.000000, 0.000000, 0.000000)
  mad r10.xy, r10.xyxx, r2.zzzz, r1.xyxx
  sample_l_indexable(texture2d)(float,float,float,float) r10.xy, r10.xyxx, t0.xyzw, s1, r4.w
  add r10.xy, -r9.zwzz, r10.xyxx
  mad r9.zw, r5.xxxx, r10.xxxy, r9.zzzw
  mad r10.xy, r6.zwzz, l(-1.000000, 1.000000, 0.000000, 0.000000), l(1.000000, -1.000000, 0.000000, 0.000000)
  mad r10.xy, r10.xyxx, r2.zzzz, r1.xyxx
  sample_l_indexable(texture2d)(float,float,float,float) r10.xy, r10.xyxx, t0.xyzw, s1, r4.w
  mad r10.zw, r1.zzzw, l(0.000000, 0.000000, -1.000000, 1.000000), l(0.000000, 0.000000, 1.000000, -1.000000)
  mad r2.zw, r10.zzzw, r2.zzzz, r1.xxxy
  sample_l_indexable(texture2d)(float,float,float,float) r2.zw, r2.zwzz, t0.zwxy, s1, r4.w
  add r2.zw, -r10.xxxy, r2.zzzw
  mad r2.zw, r5.xxxx, r2.zzzw, r10.xxxy
  add r2.zw, -r9.zzzw, r2.zzzw
  mad r2.zw, r5.yyyy, r2.zzzw, r9.zzzw
  mad r2.zw, r2.zzzw, r9.xxxx, r9.yyyy
else 
  mad r9.zw, r5.zzzw, l(0.000000, 0.000000, -1.000000, 1.000000), l(0.000000, 0.000000, 1.000000, -1.000000)
  dp2 r10.x, r9.zwzz, r9.zwzz
  sqrt r10.x, r10.x
  max r10.x, r10.x, l(0.000010)
  div r11.xy, r9.zwzz, r10.xxxx
  mov r11.z, -r11.x
  dp2 r12.x, v2.xyxx, r11.yzyy
  dp2 r12.y, v2.xyxx, -r11.xyxx
  mul r12.xy, r12.xyxx, cb0[11].zwzz
  mul r9.z, r10.x, cb1[69].w
  mad r12.z, -r9.z, cb0[12].y, r12.y
  sample_l_indexable(texture2d)(float,float,float,float) r9.zw, r12.xzxx, t0.zwxy, s1, r4.w
  mad r9.zw, r9.zzzw, r9.xxxx, r9.yyyy
  dp2 r10.x, r9.zwzz, r11.yzyy
  dp2 r10.y, r9.zwzz, -r11.xyxx
  mad r9.zw, r6.xxxy, l(0.000000, 0.000000, -1.000000, 1.000000), l(0.000000, 0.000000, 1.000000, -1.000000)
  dp2 r10.z, r9.zwzz, r9.zwzz
  sqrt r10.z, r10.z
  max r10.z, r10.z, l(0.000010)
  div r11.xy, r9.zwzz, r10.zzzz
  mov r11.z, -r11.x
  dp2 r12.x, v2.xyxx, r11.yzyy
  dp2 r12.y, v2.xyxx, -r11.xyxx
  mul r12.xy, r12.xyxx, cb0[11].zwzz
  mul r9.z, r10.z, cb1[69].w
  mad r12.z, -r9.z, cb0[12].y, r12.y
  sample_l_indexable(texture2d)(float,float,float,float) r9.zw, r12.xzxx, t0.zwxy, s1, r4.w
  mad r9.zw, r9.zzzw, r9.xxxx, r9.yyyy
  dp2 r12.x, r9.zwzz, r11.yzyy
  dp2 r12.y, r9.zwzz, -r11.xyxx
  add r9.zw, -r10.xxxy, r12.xxxy
  mad r9.zw, r5.xxxx, r9.zzzw, r10.xxxy
  mad r10.xy, r6.zwzz, l(-1.000000, 1.000000, 0.000000, 0.000000), l(1.000000, -1.000000, 0.000000, 0.000000)
  dp2 r10.z, r10.xyxx, r10.xyxx
  sqrt r10.z, r10.z
  max r10.z, r10.z, l(0.000010)
  div r11.xy, r10.xyxx, r10.zzzz
  mov r11.z, -r11.x
  dp2 r10.x, v2.xyxx, r11.yzyy
  dp2 r10.y, v2.xyxx, -r11.xyxx
  mul r12.xy, r10.xyxx, cb0[11].zwzz
  mul r10.x, r10.z, cb1[69].w
  mad r12.z, -r10.x, cb0[12].y, r12.y
  sample_l_indexable(texture2d)(float,float,float,float) r10.xy, r12.xzxx, t0.xyzw, s1, r4.w
  mad r10.xy, r10.xyxx, r9.xxxx, r9.yyyy
  dp2 r12.x, r10.xyxx, r11.yzyy
  dp2 r12.y, r10.xyxx, -r11.xyxx
  mad r10.xy, r1.zwzz, l(-1.000000, 1.000000, 0.000000, 0.000000), l(1.000000, -1.000000, 0.000000, 0.000000)
  dp2 r10.z, r10.xyxx, r10.xyxx
  sqrt r10.z, r10.z
  max r10.z, r10.z, l(0.000010)
  div r11.xy, r10.xyxx, r10.zzzz
  mov r11.z, -r11.x
  dp2 r10.x, v2.xyxx, r11.yzyy
  dp2 r10.y, v2.xyxx, -r11.xyxx
  mul r13.xy, r10.xyxx, cb0[11].zwzz
  mul r10.x, r10.z, cb1[69].w
  mad r13.z, -r10.x, cb0[12].y, r13.y
  sample_l_indexable(texture2d)(float,float,float,float) r10.xy, r13.xzxx, t0.xyzw, s1, r4.w
  mad r9.xy, r10.xyxx, r9.xxxx, r9.yyyy
  dp2 r10.x, r9.xyxx, r11.yzyy
  dp2 r10.y, r9.xyxx, -r11.xyxx
  add r9.xy, -r12.xyxx, r10.xyxx
  mad r9.xy, r5.xxxx, r9.xyxx, r12.xyxx
  add r9.xy, -r9.zwzz, r9.xyxx
  mad r2.zw, r5.yyyy, r9.xxxy, r9.zzzw
endif 
mul r2.x, r2.y, r2.x
mul r2.xy, r2.xxxx, r2.zwzz
mul r2.yzw, r2.yyyy, v6.xxyz
mad r2.xyz, v5.xyzx, r2.xxxx, r2.yzwy
add r2.xyz, r2.xyzx, v4.xyzx
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul r2.xyz, r2.wwww, r2.xyzx
movc r2.xyz, v10.xxxx, r2.xyzx, -r2.xyzx
dp3 r4.w, v7.xyzx, v7.xyzx
rsq r9.x, r4.w
mul r9.xyz, r9.xxxx, v7.xyzx
dp3_sat r9.w, r2.xyzx, -r9.xyzx
if_nz v10.x
  ftoi r10.xy, v0.xyxx
  mov r10.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r10.x, r10.xyzw, t29.xyzw
  ge r10.y, r10.x, l(0.984375)
  mul r10.z, r10.x, l(1.01587307)
  mad r10.x, r10.x, l(64.000000), l(-63.000000)
  movc r10.x, r10.y, r10.x, r10.z
  max r10.x, r10.x, l(0.00000001)
  rcp r10.x, r10.x
  add r10.x, r10.x, -v0.w
  max r10.x, r10.x, l(0.000000)
  min r10.x, r10.x, cb0[21].x
  mov r10.y, cb0[19].y
else 
  sqrt r10.x, r4.w
  mov r10.y, cb0[19].x
endif 
if_nz cb0[28].y
  sample_indexable(texture2d)(float,float,float,float) r10.z, v8.xyxx, t24.yzxw, s6
  sample_indexable(texture2d)(float,float,float,float) r10.w, v8.zwzz, t24.yzwx, s6
  sample_indexable(texture2d)(float,float,float,float) r11.x, v9.xyxx, t24.xyzw, s6
  sample_indexable(texture2d)(float,float,float,float) r11.y, v9.zwzz, t24.yxzw, s6
  add r10.z, r10.w, r10.z
  add r10.z, r11.x, r10.z
  add r10.z, r11.y, r10.z
  mul r10.z, r10.z, cb0[27].w
  sample_indexable(texture2d)(float,float,float,float) r10.w, v2.xyxx, t21.xywz, s3
  mad r10.w, cb0[27].z, r10.w, cb0[27].y
  max r10.z, r10.z, l(0.000000)
  log r10.z, r10.z
  mul r10.z, r10.z, r10.w
  exp r10.z, r10.z
  mul r10.w, r10.x, cb0[28].x
  min r10.w, r10.w, l(1.000000)
  mul r11.x, r10.w, r10.z
  mad r10.z, -r10.z, r10.w, l(1.000000)
  mul r10.z, r10.z, cb0[17].z
else 
  mov r11.x, l(0)
  mov r10.z, cb0[17].z
endif 
ine r10.w, cb0[29].z, l(0)
dp3 r11.y, -v7.xyzx, -v7.xyzx
rsq r11.y, r11.y
mul r12.xyz, r11.yyyy, -v7.xyzx
utof r0.yz, r0.yyzy
dp2 r11.z, r0.zyzz, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r11.z, r11.z
mul r11.z, r11.z, l(52.982918)
frc r11.z, r11.z
mad r11.z, r11.z, l(6.28318548), cb1[70].w
sincos r13.x, r14.x, r11.z
dp2 r0.y, r0.yzyy, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r0.y, r0.y
mul r0.y, r0.y, l(52.982918)
frc r0.y, r0.y
mad r0.y, r0.y, l(6.28318548), cb1[70].w
sincos r15.x, r16.x, r0.y
dp3_sat r0.y, r2.xyzx, r12.xyzx
dp3 r0.z, -r12.xyzx, r2.xyzx
add r0.z, r0.z, r0.z
mad r17.xyz, r2.xyzx, -r0.zzzz, -r12.xyzx
add r0.z, -r10.z, l(1.000000)
mul r11.z, r0.z, l(5.000000)
mad r11.w, r0.z, l(5.000000), l(-2.500000)
mul_sat r11.w, r11.w, l(0.400000)
mul r11.w, r11.w, l(100.000000)
mad r13.zw, -r0.zzzz, l(0.000000, 0.000000, 10.000000, 5.000000), l(0.000000, 0.000000, 6.857410, 7.085000)
exp r12.w, r13.z
mul r12.w, r0.y, r12.w
mul r12.w, r12.w, l(9.136810)
mul r13.z, r0.z, r11.z
mad r13.z, -r13.z, l(2.015905), r13.w
exp r13.z, r13.z
mul r13.z, r0.y, r13.z
mul r13.z, r13.z, l(9.708090)
max r12.w, r12.w, r13.z
max r12.w, r12.w, l(1.268160)
iadd r13.z, cb2[0].y, -cb2[58].x
and r13.w, r13.z, l(-32)
iadd r14.w, -r13.w, r13.z
and r15.y, cb2[0].y, l(-32)
iadd r15.z, -r15.y, cb2[0].y
mov r18.xy, l(0,0,0,0)
mov r19.w, l(0)
mov r20.yz, l(0,0,1.000000,0)
mov r21.xy, l(0,0,0,0)
mov r22.xw, l(1.000000,0,0,0)
mov r23.xy, l(0,0,0,0)
mov r24.xy, l(0,0,0,0)
mov r25.xyzw, l(0,0,0,0)
mov r26.yzw, l(0,0,0,0)
mov r15.w, r13.w
loop 
  uge r16.y, r15.w, cb2[0].y
  breakc_nz r16.y
  ushr r18.z, r15.w, l(5)
  iadd r19.xyz, r4.xyzx, r18.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r16.y, r19.xyzw, t7.yxzw
  ieq r16.z, r13.w, r15.w
  bfi r16.w, r14.w, l(0), l(0), r16.y
  movc r16.y, r16.z, r16.w, r16.y
  ieq r16.z, r15.y, r15.w
  ubfe r16.w, r15.z, l(0), r16.y
  movc r16.y, r16.z, r16.w, r16.y
  iadd r16.z, r15.w, cb2[0].x
  mov r27.xyzw, r25.xyzw
  mov r28.xyz, r26.yzwy
  mov r16.w, r16.y
  loop 
    breakc_z r16.w
    firstbit_lo r18.z, r16.w
    ishl r18.w, l(1), r18.z
    and r19.x, r16.w, r18.w
    if_nz r19.x
      xor r16.w, r16.w, r18.w
      iadd r18.w, r16.z, r18.z
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r29.xyzw, r18.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r19.xy, r18.w, l(16), t11.xyxx
      add r29.xyz, r29.xyzx, -v7.xyzx
      mov r19.z, r29.w
      lt r19.xyz, |r29.xyzx|, r19.zxyz
      and r18.w, r19.y, r19.x
      and r18.w, r19.z, r18.w
      if_nz r18.w
        iadd r18.z, r15.w, r18.z
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r18.z, l(0), t15.wxyz
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r19.xy, r18.z, l(96), t15.xyxx
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r18.z, l(116), t15.zwxy
        add r31.xyz, -r29.yzwy, v7.xyzx
        and r18.w, r30.w, l(0x0000ffff)
        ubfe r19.z, l(6), l(25), r30.w
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r18.w, l(0), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r18.w, l(16), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r18.w, l(32), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r18.w, l(48), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r18.w, l(64), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r18.w, l(80), t16.xyzw
        dp3 r20.w, r32.xyzx, r31.xyzx
        add_sat r20.w, r32.w, r20.w
        dp3 r21.w, r33.xyzx, r31.xyzx
        add_sat r21.w, r33.w, r21.w
        mul r20.w, r20.w, r21.w
        dp3 r21.w, r34.xyzx, r31.xyzx
        add_sat r21.w, r34.w, r21.w
        mul r20.w, r20.w, r21.w
        dp3 r21.w, r35.xyzx, r31.xyzx
        add_sat r21.w, r35.w, r21.w
        mul r20.w, r20.w, r21.w
        dp3 r21.w, r36.xyzx, r31.xyzx
        add_sat r21.w, r36.w, r21.w
        mul r20.w, r20.w, r21.w
        dp3 r21.w, r37.xyzx, r31.xyzx
        add_sat r21.w, r37.w, r21.w
        mul r20.x, r20.w, r21.w
        and r20.w, r19.x, l(1)
        movc r20.xw, r20.wwww, r20.xxxy, r20.zzzx
        mov r21.w, r19.x
        mov r32.xy, r20.xwxx
        mov r23.w, l(1)
        loop 
          ige r24.w, r23.w, r19.z
          breakc_nz r24.w
          iadd r24.w, r18.w, r23.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r24.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r24.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r24.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r24.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r24.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r38.xyzw, r24.w, l(80), t16.xyzw
          dp3 r24.w, r33.xyzx, r31.xyzx
          add_sat r24.w, r33.w, r24.w
          mul r24.w, r24.w, r32.x
          dp3 r29.w, r34.xyzx, r31.xyzx
          add_sat r29.w, r34.w, r29.w
          mul r24.w, r24.w, r29.w
          dp3 r29.w, r35.xyzx, r31.xyzx
          add_sat r29.w, r35.w, r29.w
          mul r24.w, r24.w, r29.w
          dp3 r29.w, r36.xyzx, r31.xyzx
          add_sat r29.w, r36.w, r29.w
          mul r24.w, r24.w, r29.w
          dp3 r29.w, r37.xyzx, r31.xyzx
          add_sat r29.w, r37.w, r29.w
          mul r24.w, r24.w, r29.w
          dp3 r29.w, r38.xyzx, r31.xyzx
          add_sat r29.w, r38.w, r29.w
          mul r32.x, r24.w, r29.w
          ushr r31.w, r21.w, l(2)
          ubfe r32.z, l(1), l(2), r21.w
          and r32.w, r31.w, l(2)
          max r33.x, r32.x, r32.y
          mad r24.w, -r24.w, r29.w, l(1.000000)
          mul r24.w, r24.w, r32.y
          movc r22.y, r32.w, r24.w, r33.x
          movc r32.xy, r32.zzzz, r32.xyxx, r22.xyxx
          iadd r23.w, r23.w, l(1)
          mov r21.w, r31.w
        endloop 
        mov_sat r32.y, r32.y
        mul r18.w, r19.y, r32.y
        lt r19.x, l(0.000000), r18.w
        if_nz r19.x
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r18.z, l(16), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r18.z, l(32), t15.yxwz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r18.z, l(48), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r18.z, l(64), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r18.z, l(80), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r18.z, l(132), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xyzw, r18.z, l(148), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r40.xyzw, r18.z, l(164), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r41.xyzw, r18.z, l(180), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r42.xyzw, r18.z, l(196), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r43.xy, r18.z, l(212), t15.xyxx
          mad r28.z, r32.y, r19.y, r28.z
          mul r18.z, r30.z, r18.w
          mov r30.z, r38.z
          dp3 r18.w, r17.xyzx, r30.xyzx
          dp3 r19.x, r31.xyzx, r30.xyzx
          add r19.x, -r38.w, r19.x
          ge r19.y, r19.x, l(0.000000)
          max r19.x, r11.w, |r19.x|
          movc r19.x, r19.y, r19.x, -r19.x
          max r18.w, -r18.w, l(0.00000010)
          div r18.w, r19.x, r18.w
          min r18.w, |r18.w|, l(131072.000000)
          mov r38.z, r39.z
          dp3 r19.x, r17.xyzx, r38.xyzx
          dp3 r19.y, r31.xyzx, r38.xyzx
          add r19.y, -r39.w, r19.y
          ge r19.z, r19.y, l(0.000000)
          max r19.y, r11.w, |r19.y|
          movc r19.y, r19.z, r19.y, -r19.y
          max r19.x, -r19.x, l(0.00000010)
          div r19.x, r19.y, r19.x
          min r18.w, r18.w, |r19.x|
          mov r39.z, r40.z
          dp3 r19.x, r17.xyzx, r39.xyzx
          dp3 r19.y, r31.xyzx, r39.xyzx
          add r19.y, -r40.w, r19.y
          ge r19.z, r19.y, l(0.000000)
          max r19.y, r11.w, |r19.y|
          movc r19.y, r19.z, r19.y, -r19.y
          max r19.x, -r19.x, l(0.00000010)
          div r19.x, r19.y, r19.x
          min r18.w, r18.w, |r19.x|
          mov r40.z, r41.z
          dp3 r19.x, r17.xyzx, r40.xyzx
          dp3 r19.y, r31.xyzx, r40.xyzx
          add r19.y, -r41.w, r19.y
          ge r19.z, r19.y, l(0.000000)
          max r19.y, r11.w, |r19.y|
          movc r19.y, r19.z, r19.y, -r19.y
          max r19.x, -r19.x, l(0.00000010)
          div r19.x, r19.y, r19.x
          min r18.w, r18.w, |r19.x|
          mov r41.z, r42.x
          dp3 r19.x, r17.xyzx, r41.xyzx
          dp3 r19.y, r31.xyzx, r41.xyzx
          add r19.y, -r42.y, r19.y
          ge r19.z, r19.y, l(0.000000)
          max r19.y, r11.w, |r19.y|
          movc r19.y, r19.z, r19.y, -r19.y
          max r19.x, -r19.x, l(0.00000010)
          div r19.x, r19.y, r19.x
          min r18.w, r18.w, |r19.x|
          mov r43.zw, r42.zzzw
          dp3 r19.x, r17.zxyz, r43.xzwx
          dp3 r19.y, r31.zxyz, r43.xzwx
          add r19.y, -r43.y, r19.y
          ge r19.z, r19.y, l(0.000000)
          max r19.y, r11.w, |r19.y|
          movc r19.y, r19.z, r19.y, -r19.y
          max r19.x, -r19.x, l(0.00000010)
          div r19.x, r19.y, r19.x
          min r18.w, r18.w, |r19.x|
          mov r19.x, r35.w
          mov r19.yz, r36.zzwz
          add r19.xyz, r31.xyzx, r19.xyzx
          mad r19.xyz, r17.xyzx, r18.wwww, r19.xyzx
          dp3 r20.x, r19.xyzx, r19.xyzx
          sqrt r20.x, r20.x
          div r18.w, r18.w, r20.x
          add r18.w, r18.w, r18.w
          sqrt r18.w, r18.w
          mad r18.w, r0.z, l(5.000000), r18.w
          add r18.w, r18.w, l(-0.844800)
          mov r29.y, r33.z
          mov r29.z, r34.x
          dp3 r38.x, r19.xyzx, r29.xyzx
          mov r30.xy, r33.xwxx
          mov r30.z, r34.w
          dp3 r38.y, r19.xyzx, r30.xyzx
          mov r34.x, r33.y
          dp3 r38.z, r19.xyzx, r34.xyzx
          ubfe r19.x, l(9), l(16), r30.w
          utof r38.w, r19.x
          sample_l_indexable(texturecubearray)(float,float,float,float) r19.xyz, r38.xyzw, t8.xyzw, s2, r18.w
          dp3 r33.x, r31.xyzx, r29.xyzx
          dp3 r33.y, r31.xyzx, r30.xyzx
          dp3 r33.z, r31.xyzx, r34.xyzx
          mad_sat r31.xyz, r33.xyzx, r35.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
          mov r36.z, r37.x
          mad r31.xyz, r31.xyzx, r36.xyzx, r37.yzwy
          dp3 r38.x, r2.xyzx, r29.xyzx
          dp3 r38.y, r2.xyzx, r30.xyzx
          dp3 r38.z, r2.xyzx, r34.xyzx
          lt r29.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r38.xyzx
          movc r21.z, r29.x, l(0), l(0.500000)
          add r30.xyz, r21.xyzx, r31.xyzx
          sample_l_indexable(texture3d)(float,float,float,float) r30.xyz, r30.xyzx, t17.xyzw, s4, l(0.000000)
          mul r32.xzw, r38.xxyz, r38.xxyz
          mul r32.xzw, r18.zzzz, r32.xxzw
          movc r23.z, r29.y, l(0), l(0.500000)
          add r29.xyw, r23.xyxz, r31.xyxz
          sample_l_indexable(texture3d)(float,float,float,float) r29.xyw, r29.xywx, t18.xywz, s4, l(0.000000)
          mul r29.xyw, r32.zzzz, r29.xyxw
          mad r29.xyw, r30.xyxz, r32.xxxx, r29.xyxw
          movc r24.z, r29.z, l(0), l(0.500000)
          add r30.xyz, r24.xyzx, r31.xyzx
          sample_l_indexable(texture3d)(float,float,float,float) r30.xyz, r30.xyzx, t19.xyzw, s4, l(0.000000)
          mad r29.xyz, r30.xyzx, r32.wwww, r29.xywx
          sample_l_indexable(texturecubearray)(float,float,float,float) r30.xyz, r38.xyzw, t8.xyzw, s2, l(6.000000)
          mul r31.xyz, r29.xyzx, r30.xyzx
          dp3 r18.w, r31.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r27.xyz, r29.xyzx, r30.xyzx, r27.xyzx
          mul r20.x, r12.w, r18.w
          mul r19.xyz, r18.zzzz, r19.xyzx
          dp3 r18.z, r19.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r18.z, r12.w, r18.w, r18.z
          div r18.z, r20.x, r18.z
          mov r29.x, r27.w
          mov r29.yz, r28.xxyx
          mad r28.xyw, r19.yzyx, r18.zzzz, r29.yzyx
          mov r27.w, r28.w
        endif 
      endif 
    endif 
  endloop 
  mov r25.xyzw, r27.xyzw
  mov r26.yzw, r28.xxyz
  iadd r15.w, r15.w, l(32)
endloop 
lt r15.y, r26.w, l(1.000000)
if_nz r15.y
  mov r18.xy, l(0,0,0,0)
  mov r19.w, l(0)
  mov r20.yz, l(0,0,1.000000,0)
  mov r21.xy, l(0,0,0,0)
  mov r22.x, l(1.000000)
  mov r23.xy, l(0,0,0,0)
  mov r24.xy, l(0,0,0,0)
  mov r27.x, r25.w
  mov r27.yzw, r26.yyzw
  mov r15.yzw, r25.xxyz
  mov r16.y, r26.w
  mov r16.z, l(0)
  loop 
    uge r16.w, r16.z, r13.z
    breakc_nz r16.w
    ushr r18.z, r16.z, l(5)
    iadd r19.xyz, r4.xyzx, r18.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r16.w, r19.xyzw, t7.yzwx
    ieq r18.z, r13.w, r16.z
    ubfe r18.w, r14.w, l(0), r16.w
    movc r16.w, r18.z, r18.w, r16.w
    iadd r18.z, r16.z, cb2[0].x
    mov r28.xyzw, r27.xyzw
    mov r19.xyz, r15.yzwy
    mov r18.w, r16.y
    mov r20.w, r16.w
    loop 
      breakc_z r20.w
      firstbit_lo r21.w, r20.w
      ishl r23.w, l(1), r21.w
      and r24.w, r20.w, r23.w
      if_nz r24.w
        xor r20.w, r20.w, r23.w
        iadd r23.w, r18.z, r21.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r29.xyzw, r23.w, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r30.xy, r23.w, l(16), t11.xyxx
        add r29.xyz, r29.xyzx, -v7.xyzx
        mov r30.z, r29.w
        lt r29.xyz, |r29.xyzx|, r30.zxyz
        and r23.w, r29.y, r29.x
        and r23.w, r29.z, r23.w
        if_nz r23.w
          iadd r21.w, r16.z, r21.w
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r21.w, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xy, r21.w, l(96), t15.xyxx
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r21.w, l(116), t15.zwxy
          add r32.xyz, -r29.yzwy, v7.xyzx
          and r23.w, r31.w, l(0x0000ffff)
          ubfe r24.w, l(6), l(25), r31.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r23.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r23.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r23.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r23.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r23.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r38.xyzw, r23.w, l(80), t16.xyzw
          dp3 r29.w, r33.xyzx, r32.xyzx
          add_sat r29.w, r33.w, r29.w
          dp3 r30.z, r34.xyzx, r32.xyzx
          add_sat r30.z, r34.w, r30.z
          mul r29.w, r29.w, r30.z
          dp3 r30.z, r35.xyzx, r32.xyzx
          add_sat r30.z, r35.w, r30.z
          mul r29.w, r29.w, r30.z
          dp3 r30.z, r36.xyzx, r32.xyzx
          add_sat r30.z, r36.w, r30.z
          mul r29.w, r29.w, r30.z
          dp3 r30.z, r37.xyzx, r32.xyzx
          add_sat r30.z, r37.w, r30.z
          mul r29.w, r29.w, r30.z
          dp3 r30.z, r38.xyzx, r32.xyzx
          add_sat r30.z, r38.w, r30.z
          mul r20.x, r29.w, r30.z
          and r29.w, r30.x, l(1)
          movc r30.zw, r29.wwww, r20.xxxy, r20.zzzx
          mov r20.x, r30.x
          mov r33.xy, r30.zwzz
          mov r29.w, l(1)
          loop 
            ige r32.w, r29.w, r24.w
            breakc_nz r32.w
            iadd r32.w, r23.w, r29.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r32.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r32.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r32.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r32.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r38.xyzw, r32.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r39.xyzw, r32.w, l(80), t16.xyzw
            dp3 r32.w, r34.xyzx, r32.xyzx
            add_sat r32.w, r34.w, r32.w
            mul r32.w, r32.w, r33.x
            dp3 r33.z, r35.xyzx, r32.xyzx
            add_sat r33.z, r35.w, r33.z
            mul r32.w, r32.w, r33.z
            dp3 r33.z, r36.xyzx, r32.xyzx
            add_sat r33.z, r36.w, r33.z
            mul r32.w, r32.w, r33.z
            dp3 r33.z, r37.xyzx, r32.xyzx
            add_sat r33.z, r37.w, r33.z
            mul r32.w, r32.w, r33.z
            dp3 r33.z, r38.xyzx, r32.xyzx
            add_sat r33.z, r38.w, r33.z
            mul r32.w, r32.w, r33.z
            dp3 r33.z, r39.xyzx, r32.xyzx
            add_sat r33.z, r39.w, r33.z
            mul r33.x, r32.w, r33.z
            ushr r33.w, r20.x, l(2)
            ubfe r34.x, l(1), l(2), r20.x
            and r34.y, r33.w, l(2)
            max r34.z, r33.x, r33.y
            mad r32.w, -r32.w, r33.z, l(1.000000)
            mul r32.w, r32.w, r33.y
            movc r22.y, r34.y, r32.w, r34.z
            movc r33.xy, r34.xxxx, r33.xyxx, r22.xyxx
            iadd r29.w, r29.w, l(1)
            mov r20.x, r33.w
          endloop 
          add_sat r20.x, -r18.w, r33.y
          mul r22.y, r30.y, r20.x
          lt r23.w, l(0.000000), r22.y
          if_nz r23.w
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r21.w, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r21.w, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r21.w, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r21.w, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r21.w, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xyzw, r21.w, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r40.xyzw, r21.w, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r41.xyzw, r21.w, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r42.xyzw, r21.w, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r43.xyzw, r21.w, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r44.xy, r21.w, l(212), t15.xyxx
            mad r28.w, r20.x, r30.y, r28.w
            mul r20.x, r31.z, r22.y
            mov r31.z, r39.z
            dp3 r21.w, r17.xyzx, r31.xyzx
            dp3 r22.y, r32.xyzx, r31.xyzx
            add r22.y, -r39.w, r22.y
            ge r23.w, r22.y, l(0.000000)
            max r22.y, r11.w, |r22.y|
            movc r22.y, r23.w, r22.y, -r22.y
            max r21.w, -r21.w, l(0.00000010)
            div r21.w, r22.y, r21.w
            min r21.w, |r21.w|, l(131072.000000)
            mov r39.z, r40.z
            dp3 r22.y, r17.xyzx, r39.xyzx
            dp3 r23.w, r32.xyzx, r39.xyzx
            add r23.w, -r40.w, r23.w
            ge r24.w, r23.w, l(0.000000)
            max r23.w, r11.w, |r23.w|
            movc r23.w, r24.w, r23.w, -r23.w
            max r22.y, -r22.y, l(0.00000010)
            div r22.y, r23.w, r22.y
            min r21.w, r21.w, |r22.y|
            mov r40.z, r41.z
            dp3 r22.y, r17.xyzx, r40.xyzx
            dp3 r23.w, r32.xyzx, r40.xyzx
            add r23.w, -r41.w, r23.w
            ge r24.w, r23.w, l(0.000000)
            max r23.w, r11.w, |r23.w|
            movc r23.w, r24.w, r23.w, -r23.w
            max r22.y, -r22.y, l(0.00000010)
            div r22.y, r23.w, r22.y
            min r21.w, r21.w, |r22.y|
            mov r41.z, r42.z
            dp3 r22.y, r17.xyzx, r41.xyzx
            dp3 r23.w, r32.xyzx, r41.xyzx
            add r23.w, -r42.w, r23.w
            ge r24.w, r23.w, l(0.000000)
            max r23.w, r11.w, |r23.w|
            movc r23.w, r24.w, r23.w, -r23.w
            max r22.y, -r22.y, l(0.00000010)
            div r22.y, r23.w, r22.y
            min r21.w, r21.w, |r22.y|
            mov r42.z, r43.x
            dp3 r22.y, r17.xyzx, r42.xyzx
            dp3 r23.w, r32.xyzx, r42.xyzx
            add r23.w, -r43.y, r23.w
            ge r24.w, r23.w, l(0.000000)
            max r23.w, r11.w, |r23.w|
            movc r23.w, r24.w, r23.w, -r23.w
            max r22.y, -r22.y, l(0.00000010)
            div r22.y, r23.w, r22.y
            min r21.w, r21.w, |r22.y|
            mov r44.zw, r43.zzzw
            dp3 r22.y, r17.zxyz, r44.xzwx
            dp3 r23.w, r32.zxyz, r44.xzwx
            add r23.w, -r44.y, r23.w
            ge r24.w, r23.w, l(0.000000)
            max r23.w, r11.w, |r23.w|
            movc r23.w, r24.w, r23.w, -r23.w
            max r22.y, -r22.y, l(0.00000010)
            div r22.y, r23.w, r22.y
            min r21.w, r21.w, |r22.y|
            mov r30.x, r36.w
            mov r30.yz, r37.zzwz
            add r30.xyz, r32.xyzx, r30.xyzx
            mad r30.xyz, r17.xyzx, r21.wwww, r30.xyzx
            dp3 r22.y, r30.xyzx, r30.xyzx
            sqrt r22.y, r22.y
            div r21.w, r21.w, r22.y
            add r21.w, r21.w, r21.w
            sqrt r21.w, r21.w
            mad r21.w, r0.z, l(5.000000), r21.w
            add r21.w, r21.w, l(-0.844800)
            mov r29.y, r34.z
            mov r29.z, r35.x
            dp3 r39.x, r30.xyzx, r29.xyzx
            mov r31.xy, r34.xwxx
            mov r31.z, r35.w
            dp3 r39.y, r30.xyzx, r31.xyzx
            mov r35.x, r34.y
            dp3 r39.z, r30.xyzx, r35.xyzx
            ubfe r22.y, l(9), l(16), r31.w
            utof r39.w, r22.y
            sample_l_indexable(texturecubearray)(float,float,float,float) r30.xyz, r39.xyzw, t8.xyzw, s2, r21.w
            dp3 r34.x, r32.xyzx, r29.xyzx
            dp3 r34.y, r32.xyzx, r31.xyzx
            dp3 r34.z, r32.xyzx, r35.xyzx
            mad_sat r32.xyz, r34.xyzx, r36.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
            mov r37.z, r38.x
            mad r32.xyz, r32.xyzx, r37.xyzx, r38.yzwy
            dp3 r39.x, r2.xyzx, r29.xyzx
            dp3 r39.y, r2.xyzx, r31.xyzx
            dp3 r39.z, r2.xyzx, r35.xyzx
            lt r29.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r39.xyzx
            movc r21.z, r29.x, l(0), l(0.500000)
            add r31.xyz, r21.xyzx, r32.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r31.xyz, r31.xyzx, t17.xyzw, s4, l(0.000000)
            mul r33.xzw, r39.xxyz, r39.xxyz
            mul r33.xzw, r20.xxxx, r33.xxzw
            movc r23.z, r29.y, l(0), l(0.500000)
            add r29.xyw, r23.xyxz, r32.xyxz
            sample_l_indexable(texture3d)(float,float,float,float) r29.xyw, r29.xywx, t18.xywz, s4, l(0.000000)
            mul r29.xyw, r33.zzzz, r29.xyxw
            mad r29.xyw, r31.xyxz, r33.xxxx, r29.xyxw
            movc r24.z, r29.z, l(0), l(0.500000)
            add r31.xyz, r24.xyzx, r32.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r31.xyz, r31.xyzx, t19.xyzw, s4, l(0.000000)
            mad r29.xyz, r31.xyzx, r33.wwww, r29.xywx
            sample_l_indexable(texturecubearray)(float,float,float,float) r31.xyz, r39.xyzw, t8.xyzw, s2, l(6.000000)
            mul r32.xyz, r29.xyzx, r31.xyzx
            dp3 r21.z, r32.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r19.xyz, r29.xyzx, r31.xyzx, r19.xyzx
            mul r21.w, r12.w, r21.z
            mul r29.xyz, r20.xxxx, r30.xyzx
            dp3 r20.x, r29.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r20.x, r12.w, r21.z, r20.x
            div r20.x, r21.w, r20.x
            mad r28.xyz, r29.xyzx, r20.xxxx, r28.xyzx
          endif 
        endif 
      endif 
    endloop 
    mov r27.xyzw, r28.xyzw
    mov r15.yzw, r19.xxyz
    iadd r16.z, r16.z, l(32)
  endloop 
  mov r26.xyzw, r27.zxyw
  mov r25.xyz, r15.yzwy
  mov r26.xyzw, r26.yzxw
else 
  mov r26.x, r25.w
endif 
max r0.z, r26.w, l(1.000000)
rcp r0.z, r0.z
mov_sat r26.w, r26.w
mul r15.yzw, r0.zzzz, r25.xxyz
mul r16.yzw, r0.zzzz, r26.xxyz
lt r11.w, r26.w, l(0.990000)
if_nz r11.w
  add r11.w, -r26.w, l(1.000000)
  mul r12.w, r11.w, cb2[19].x
  add r18.xyz, v7.xyzx, -cb2[35].xyzx
  mul r19.x, r18.x, cb2[35].w
  mul r19.yz, r18.yyzy, cb2[36].xxyx
  add_sat r18.xyz, r19.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mul r19.xy, r18.xyxx, cb2[36].zwzz
  mul r19.z, r18.z, cb2[37].x
  add r18.xyz, r19.xyzx, cb2[37].yzwy
  lt r19.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r2.xyzx
  movc r19.xyz, r19.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
  mov r19.w, l(0)
  add r20.xyz, r18.xyzx, r19.wwxw
  sample_l_indexable(texture3d)(float,float,float,float) r20.xyz, r20.xyzx, t17.xyzw, s4, l(0.000000)
  mul r21.xyz, r2.xyzx, r2.xyzx
  mul r21.xyz, r12.wwww, r21.xyzx
  add r23.xyz, r18.xyzx, r19.wwyw
  sample_l_indexable(texture3d)(float,float,float,float) r23.xyz, r23.xyzx, t18.xyzw, s4, l(0.000000)
  mul r23.xyz, r21.yyyy, r23.xyzx
  mad r20.xyz, r20.xyzx, r21.xxxx, r23.xyzx
  add r18.xyz, r18.xyzx, r19.wwzw
  sample_l_indexable(texture3d)(float,float,float,float) r18.xyz, r18.xyzx, t19.xyzw, s4, l(0.000000)
  mad r18.xyz, r18.xyzx, r21.zzzz, r20.xyzx
  mov r2.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r19.xyz, r2.xyzw, t8.xyzw, s2, l(6.000000)
  mul r18.xyz, r18.xyzx, r19.xyzx
  dp3 r2.w, r18.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  mad r15.yzw, r25.xxyz, r0.zzzz, r18.xxyz
  mov r17.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r17.xyz, r17.xyzw, t8.xyzw, s2, r11.z
  mad r0.z, cb2[19].x, r11.w, -r2.w
  mad r0.z, r10.z, r0.z, r2.w
  mad r16.yzw, r17.xxyz, r0.zzzz, r16.yyzw
endif 
if_nz cb0[28].z
  dp3 r0.z, r9.xyzx, r2.xyzx
  add r0.z, r0.z, r0.z
  mad r17.xyz, r2.xyzx, -r0.zzzz, r9.xyzx
  dp3 r0.z, r9.xyzx, -r2.xyzx
  add r0.z, r0.z, r0.z
  mad r18.xyz, r2.xyzx, r0.zzzz, r9.xyzx
  movc r17.xyz, v10.xxxx, r17.xyzx, r18.xyzx
  if_nz cb0[28].w
    mul r18.xyz, v7.yyyy, cb1[5].xyzx
    mad r18.xyz, v7.xxxx, cb1[4].xyzx, r18.xyzx
    mad r18.xyz, v7.zzzz, cb1[6].xyzx, r18.xyzx
    mul r19.xyz, r17.xyzx, cb0[21].zzzz
    mul r20.xyz, r19.yyyy, cb1[5].xyzx
    mad r19.xyw, r19.xxxx, cb1[4].xyxz, r20.xyxz
    mad r19.xyz, r19.zzzz, cb1[6].xyzx, r19.xywx
    min r0.z, cb0[21].x, l(1000.000000)
    mad r18.xyz, r19.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000), r18.xyzx
    div r0.z, r0.z, cb0[21].z
    mov r20.xyz, r16.yzwy
    mov r21.xyz, r18.xyzx
    mov r2.w, l(0)
    loop 
      itof r10.z, r2.w
      ge r10.z, r10.z, r0.z
      breakc_nz r10.z
      add r21.xyz, r19.xyzx, r21.xyzx
      mul r23.xyz, r21.yyyy, cb1[1].xywx
      mad r23.xyz, r21.xxxx, cb1[0].xywx, r23.xyzx
      mad r23.xyz, r21.zzzz, cb1[2].xywx, r23.xyzx
      add r23.xyz, r23.xyzx, cb1[3].xywx
      max r10.z, |r23.y|, |r23.x|
      lt r10.z, r23.z, r10.z
      if_nz r10.z
        break 
      endif 
      div r11.zw, r23.xxxy, r23.zzzz
      mad r11.zw, r11.zzzw, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
      sample_l_indexable(texture2d)(float,float,float,float) r10.z, r11.zwzz, t26.yzxw, s8, l(1.000000)
      lt r11.z, |r10.z|, r21.z
      ge r11.w, |r10.z|, v0.w
      and r11.z, r11.w, r11.z
      if_nz r11.z
        add r10.z, -|r10.z|, r21.z
        mul r10.z, r10.z, cb0[21].w
        mad r23.xyz, -r10.zzzz, r19.xyzx, r21.xyzx
        mul r24.xyz, r23.yyyy, cb1[1].xywx
        mad r23.xyw, r23.xxxx, cb1[0].xyxw, r24.xyxz
        mad r23.xyz, r23.zzzz, cb1[2].xywx, r23.xywx
        add r23.xyz, r23.xyzx, cb1[3].xywx
        div r11.zw, r23.xxxy, r23.zzzz
        mad r11.zw, r11.zzzw, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
        sample_l_indexable(texture2d)(float,float,float,float) r23.xyz, r11.zwzz, t30.xyzw, s8, l(0.000000)
        mul r23.xyz, r23.xyzx, cb1[85].xxxx
        mov r20.xyz, r23.xyzx
        break 
      endif 
      iadd r2.w, r2.w, l(1)
    endloop 
    mov r16.yzw, r20.xxyz
  else 
    mul r0.z, r10.x, cb0[21].y
    mad r17.xyz, r17.xyzx, r0.zzzz, v7.xyzx
    mul r18.xyz, r17.yyyy, cb1[9].xywx
    mad r17.xyw, r17.xxxx, cb1[8].xyxw, r18.xyxz
    mad r17.xyz, r17.zzzz, cb1[10].xywx, r17.xywx
    add r17.xyz, r17.xyzx, cb1[11].xywx
    div r11.zw, r17.xxxy, r17.zzzz
    max r0.z, |r11.w|, |r11.z|
    mad r11.zw, r11.zzzw, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
    sample_l_indexable(texture2d)(float,float,float,float) r2.w, r11.zwzz, t26.yzwx, s8, l(0.000000)
    ge r2.w, |r2.w|, v0.w
    lt r0.z, r0.z, l(1.000000)
    and r0.z, r0.z, r2.w
    sample_indexable(texture2d)(float,float,float,float) r17.xyz, r11.zwzz, t30.xyzw, s8
    if_nz r0.z
      mul r16.yzw, r17.xxyz, cb1[85].xxxx
    endif 
  endif 
endif 
dp3 r0.z, r2.xyzx, cb2[17].xyzx
mov_sat r2.w, r0.z
movc r10.z, cb0[29].z, |r0.z|, r2.w
ge r10.z, l(0.000000), r10.z
if_nz r10.z
  mov r11.z, l(0)
endif 
if_z r10.z
  mul r17.xyz, v7.yyyy, cb2[29].xyzx
  mad r17.xyz, v7.xxxx, cb2[28].xyzx, r17.xyzx
  mad r17.xyz, v7.zzzz, cb2[30].xyzx, r17.xyzx
  add r17.xyz, r17.xyzx, cb2[31].xyzx
  add r10.z, r17.z, -cb2[17].w
  mad r10.z, -r10.z, l(0.00006104), l(1.000000)
  mov_sat r11.w, r10.z
  eq r11.w, r10.z, r11.w
  if_nz r11.w
    mov r11.w, l(0)
    mov r12.w, l(0)
    loop 
      ge r13.z, r11.w, l(3.000000)
      breakc_nz r13.z
      ftou r13.z, r11.w
      add r18.xy, r17.xyxx, -cb2[r13.z + 20].xyxx
      max r13.w, |r18.y|, |r18.x|
      mul r12.w, r13.w, cb2[r13.z + 20].z
      lt r13.z, r12.w, l(1.000000)
      if_nz r13.z
        break 
      endif 
      add r11.w, r11.w, l(1.000000)
      mov r12.w, l(0)
    endloop 
  else 
    mov r11.w, l(3.000000)
    mov r12.w, l(0)
  endif 
  ge r13.z, r11.w, l(3.000000)
  if_nz r13.z
    mul r18.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
    rcp r19.xz, r18.xxxx
    mov r19.y, -r19.z
    mad r18.xyz, r17.xyxx, r19.xyzx, r18.yzyy
    add r19.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r18.xyz, r18.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r18.xyz, r19.xyzx, r18.xyzx
    mul r19.xy, r18.zyzz, cb2[32].xxxx
    round_ni r19.xy, r19.xyxx
    mul r13.w, r19.y, cb2[27].x
    mad r13.w, r13.w, cb2[32].x, r19.x
    ftou r13.w, r13.w
    iadd r13.w, r13.w, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r14.w, r13.w, l(0), t23.xxxx
    and r17.w, r14.w, l(0x40000000)
    ishl r18.w, r14.w, l(2)
    if_z r17.w
      and r17.w, r14.w, l(0x01ffffff)
      iadd r19.x, r13.w, r17.w
      ushr r13.w, r14.w, l(25)
      utof r13.w, r13.w
      mul r18.xyz, r13.wwww, r18.xyzx
      frc r18.xyz, r18.xyzx
      mul r18.xyz, r18.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
      ftou r18.xyz, r18.xyzx
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.z, r19.x, l(0), t23.xxxx
      ushr r20.xy, r18.zyzz, l(6, 6, 0, 0)
      and r13.w, r19.z, l(0xc0000000)
      iadd r14.w, r19.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r14.w, r14.w, l(0), t23.xxxx
      movc r14.w, r20.y, r19.z, r14.w
      ushr r17.w, r14.w, l(13)
      movc r14.w, r20.x, r17.w, r14.w
      and r14.w, r14.w, l(8191)
      iadd r20.x, r14.w, r19.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.z, r20.x, l(0), t23.xxxx
      mov r19.y, l(0)
      mov r20.y, l(1)
      movc r20.xyz, r13.wwww, r19.xyzx, r20.xyzx
      movc r21.yz, r13.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r22.xy, r18.zyzz, r21.yyyy
      and r22.xy, r22.xyxx, l(1, 1, 0, 0)
      and r14.w, r20.z, l(0xc0000000)
      iadd r17.w, r20.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.w, r17.w, l(0), t23.xxxx
      movc r17.w, r22.y, r20.z, r17.w
      ushr r19.w, r17.w, l(13)
      movc r17.w, r22.x, r19.w, r17.w
      and r17.w, r17.w, l(8191)
      iadd r21.x, r17.w, r20.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r21.w, r21.x, l(0), t23.xxxx
      movc r20.xyz, r14.wwww, r20.xyzx, r21.xzwx
      movc r19.xyz, r13.wwww, r19.xyzx, r20.xyzx
      and r13.w, r19.z, l(0xc0000000)
      if_z r13.w
        iadd r13.w, -r19.y, l(6)
        ushr r20.xy, r18.zyzz, r13.wwww
        or r13.w, r19.z, l(0x40000000)
        bfi r14.w, l(1), l(1), r20.y, l(0)
        bfi r14.w, l(1), l(0), r20.x, r14.w
        imul null, r14.w, r14.w, l(10)
        ushr r13.w, r13.w, r14.w
        and r13.w, r13.w, l(1023)
        iadd r20.x, r13.w, r19.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.w, r20.x, l(0), t23.xxxx
        iadd r20.yz, r19.yyyy, l(0, 1, 2, 0)
        iadd r13.w, -r20.y, l(6)
        ushr r19.yw, r18.zzzy, r13.wwww
        and r13.w, r20.w, l(0xc0000000)
        or r14.w, r20.w, l(0x40000000)
        bfi r17.w, l(1), l(1), r19.w, l(0)
        bfi r17.w, l(1), l(0), r19.y, r17.w
        imul null, r17.w, r17.w, l(10)
        ushr r14.w, r14.w, r17.w
        and r14.w, r14.w, l(1023)
        iadd r21.x, r14.w, r20.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r21.z, r21.x, l(0), t23.xxxx
        mov r21.y, r20.z
        movc r21.xyz, r13.wwww, r20.xywx, r21.xyzx
        iadd r14.w, -r21.y, l(6)
        ushr r19.yw, r18.zzzy, r14.wwww
        and r14.w, r21.z, l(0xc0000000)
        or r17.w, r21.z, l(0x40000000)
        bfi r19.w, l(1), l(1), r19.w, l(0)
        bfi r19.y, l(1), l(0), r19.y, r19.w
        imul null, r19.y, r19.y, l(10)
        ushr r17.w, r17.w, r19.y
        and r17.w, r17.w, l(1023)
        iadd r22.x, r17.w, r21.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r22.y, r22.x, l(0), t23.xxxx
        movc r19.yw, r14.wwww, r21.xxxz, r22.xxxy
        movc r19.xz, r13.wwww, r20.xxwx, r19.yywy
      endif 
      and r13.w, r19.z, l(0xc0000000)
      if_z r13.w
        ubfe r14.w, l(14), l(15), r19.z
        utof r14.w, r14.w
        mul r14.w, r14.w, cb2[27].w
        mul r14.w, r14.w, l(0.00006104)
        and r19.yw, r19.zzzz, l(0, 0x00007fff, 0, 0x20000000)
        utof r17.w, r19.y
        mul r17.w, r17.w, cb2[27].w
        mul r17.w, r17.w, l(0.00003052)
        and r19.y, r18.y, l(3)
        iadd r19.y, r19.y, r19.x
        iadd r19.y, r19.y, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.y, r19.y, l(0), t23.xxxx
        bfi r20.xyz, l(2, 2, 1, 0), l(3, 1, 4, 0), r18.xyzx, l(0, 0, 0, 0)
        ushr r18.x, r19.y, r20.x
        and r18.x, r18.x, l(255)
        utof r18.x, r18.x
        mul r18.x, r17.w, r18.x
        mad r18.x, r18.x, l(0.00392157), r14.w
        iadd r18.y, r20.y, l(1)
        ubfe r18.z, l(1), l(1), r18.z
        iadd r18.y, r18.z, r18.y
        iadd r18.y, r18.y, r19.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.y, r18.y, l(0), t23.xxxx
        ushr r18.y, r18.y, r20.z
        and r18.y, r18.y, l(0x0000ffff)
        utof r18.y, r18.y
        mul r17.w, r17.w, r18.y
        mad r14.w, r17.w, l(0.00001526), r14.w
        movc r18.w, r19.w, r18.x, r14.w
      else 
        and r14.w, r19.z, l(0x80000000)
        iadd r17.w, r19.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.w, r17.w, l(0), t23.xxxx
        movc r14.w, r14.w, r17.w, l(0)
        ishl r17.w, r19.z, l(2)
        ushr r18.x, r14.w, l(16)
        f16tof32 r18.x, r18.x
        and r14.w, r14.w, l(0x0000ffff)
        f16tof32 r14.w, r14.w
        mad r17.w, r17.x, r18.x, r17.w
        mad r14.w, r17.y, r14.w, r17.w
        movc r18.w, r13.w, r14.w, r18.w
      endif 
    endif 
    mad r13.w, -cb2[27].z, l(2.000000), r17.z
    lt r13.w, r18.w, r13.w
    movc r11.z, r13.w, l(0), l(1.000000)
  endif 
  if_z r13.z
    if_z cb2[58].y
      ftou r13.z, r11.w
      add r17.zw, r17.xxxy, -cb2[r13.z + 20].xxxy
      mul r13.zw, r17.zzzw, cb2[r13.z + 20].zzzz
      mad r18.xy, r13.zwzz, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r13.z, cb2[26].y
      add r18.z, r11.w, r13.z
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r13.z, r18.xyzx, t13.xxxx, s13, r10.z
      sample_l_indexable(texture2darray)(float,float,float,float) r13.w, r18.xyzx, t31.yzwx, s0, l(0.000000)
      add r13.z, r13.w, r13.z
      add_sat r13.z, r13.z, l(-1.000000)
      mul r13.w, r13.z, r13.z
      mul r11.z, r13.z, r13.w
    endif 
    if_nz cb2[58].y
      mov r18.x, -r13.x
      ftou r13.z, r11.w
      add r11.w, r11.w, l(1.000000)
      min r11.w, r11.w, l(2.000000)
      ftou r11.w, r11.w
      add r12.w, -r12.w, l(1.000000)
      mul r12.w, r12.w, l(28.000000)
      ftou r12.w, r12.w
      add r17.zw, r17.xxxy, -cb2[r13.z + 20].xxxy
      mul r17.zw, r17.zzzw, cb2[r13.z + 20].zzzz
      mad r17.zw, r17.zzzw, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
      add r17.xy, r17.xyxx, -cb2[r11.w + 20].xyxx
      mul r17.xy, r17.xyxx, cb2[r11.w + 20].zzzz
      mad r17.xy, r17.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      mov r18.y, r14.x
      mov r18.z, r13.x
      mov r13.w, l(0)
      mov r14.w, l(0)
      loop 
        uge r18.w, r14.w, l(8)
        breakc_nz r18.w
        ult r18.w, r12.w, r14.w
        movc r19.xy, r18.wwww, r17.xyxx, r17.zwzz
        movc r19.z, r18.w, cb2[r11.w + 20].w, cb2[r13.z + 20].w
        movc r18.w, r18.w, r11.w, r13.z
        dp2 r20.x, icb[r14.w + 0].yxyy, r18.xyxx
        dp2 r20.y, icb[r14.w + 0].yxyy, r18.yzyy
        mad r19.xy, r20.xyxx, r19.zzzz, r19.xyxx
        iadd r18.w, r18.w, cb2[26].y
        utof r19.z, r18.w
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r18.w, r19.xyzx, t13.xxxx, s13, r10.z
        sample_l_indexable(texture2darray)(float,float,float,float) r19.x, r19.xyzx, t31.xyzw, s0, l(0.000000)
        add r18.w, r18.w, r19.x
        add_sat r18.w, r18.w, l(-1.000000)
        mad r13.w, r18.w, l(0.125000), r13.w
        iadd r14.w, r14.w, l(1)
      endloop 
      mul r10.z, r13.w, r13.w
      mul r11.z, r13.w, r10.z
    endif 
  endif 
endif 
and r10.z, cb2[53].x, l(0x0000ffff)
ult r11.w, l(0), r10.z
lt r12.w, l(0.000000), r11.z
and r11.w, r11.w, r12.w
if_nz r11.w
  iadd r10.z, r10.z, cb2[0].x
  iadd r10.z, r10.z, l(-1)
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r11.w, r10.z, l(52), t12.xxxx
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r10.z, l(68), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r10.z, l(84), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.xyzw, r10.z, l(100), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r20.xyzw, r10.z, l(116), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r21.xyzw, r10.z, l(132), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.xyzw, r10.z, l(148), t12.xyzw
  mad r12.w, |r0.z|, l(-0.200000), l(0.400000)
  lt r0.z, r0.z, l(0.000000)
  and r0.z, r0.z, r10.w
  movc r0.z, r0.z, -r12.w, r12.w
  mad r24.xyz, r2.xyzx, r0.zzzz, v7.xyzx
  mov r24.w, l(1.000000)
  dp4 r17.x, r17.xyzw, r24.xyzw
  dp4 r17.y, r18.xyzw, r24.xyzw
  dp4 r0.z, r19.xyzw, r24.xyzw
  dp4 r12.w, r20.xyzw, r24.xyzw
  lt r13.z, r12.w, r0.z
  div r17.xy, r17.xyxx, r12.wwww
  mad r17.xy, r17.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  add r17.xy, r23.zwzz, r17.xyxx
  mul r17.xy, r23.xyxx, r17.xyxx
  div r17.zw, r11.wwww, r21.xxxz
  add r18.xy, -r17.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
  ge r18.xy, r17.xyxx, r18.xyxx
  ge r17.zw, r17.zzzw, r17.xxxy
  or r17.zw, r17.zzzw, r18.xxxy
  or r13.w, r17.w, r17.z
  or r13.z, r13.z, r13.w
  if_z r13.z
    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.z, r10.z, l(28), t12.xxxx
    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.zw, r10.z, l(164), t12.xxxy
    mov_sat r17.xy, r17.xyxx
    mad r18.xy, r17.xyxx, r21.xzxx, r21.ywyy
    mul r10.z, r12.w, r17.w
    mad r0.z, r17.z, r12.w, r0.z
    div r0.z, r0.z, r10.z
    max r0.z, r0.z, l(0.00006104)
    and r10.z, r13.z, l(0x0000ffff)
    if_nz cb2[58].y
      mov r17.x, -r13.x
      utof r19.z, r10.z
      mov r17.y, r14.x
      mov r17.z, r13.x
      mov r12.w, l(0)
      mov r13.z, l(0)
      loop 
        ige r13.w, r13.z, l(8)
        breakc_nz r13.w
        dp2 r20.x, icb[r13.z + 0].yxyy, r17.xyxx
        dp2 r20.y, icb[r13.z + 0].yxyy, r17.yzyy
        mad r19.xy, r20.xyxx, r11.wwww, r18.xyxx
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r13.w, r19.xyzx, t9.xxxx, s13, r0.z
        mad r12.w, r13.w, l(0.125000), r12.w
        iadd r13.z, r13.z, l(1)
      endloop 
    else 
      utof r18.z, r10.z
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.w, r18.xyzx, t9.xxxx, s13, r0.z
    endif 
    mul r0.z, r12.w, r12.w
    mul r0.z, r12.w, r0.z
  else 
    mov r0.z, l(1.000000)
  endif 
  mul r11.z, r0.z, r11.z
endif 
lt r0.z, l(0.000000), r2.w
lt r10.z, l(0.000000), r11.z
if_nz r10.z
  if_nz cb2[23].x
    mov r3.w, l(1.000000)
    dp4 r10.z, cb2[24].xyzw, r3.xyzw
    dp4 r3.x, cb2[25].xyzw, r3.xyzw
    frc r17.x, r10.z
    frc r17.y, r3.x
    iadd r3.x, l(-1), cb2[23].x
    utof r17.z, r3.x
    sample_l_indexable(texture2darray)(float,float,float,float) r3.xyz, r17.xyzx, t20.xyzw, s2, l(0.000000)
    add r3.xyz, r3.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
    mad r3.xyz, cb2[23].yyyy, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mul r3.xyz, r3.xyzx, cb2[18].xyzx
  else 
    mov r3.xyz, cb2[18].xyzx
  endif 
  mul r3.xyz, r3.xyzx, r11.zzzz
  add r3.w, r0.y, r2.w
  div r3.w, r2.w, r3.w
  mad r17.xyz, r3.xyzx, r3.wwww, r15.yzwy
  mad r11.yzw, -v7.xxyz, r11.yyyy, cb2[17].xxyz
  dp3 r3.w, r11.yzwy, r11.yzwy
  rsq r3.w, r3.w
  mul r11.yzw, r3.wwww, r11.yyzw
  dp3_sat r3.w, r2.xyzx, r11.yzwy
  dp3_sat r10.z, r11.yzwy, r12.xyzx
  mul r11.y, r3.w, r3.w
  mad r11.yz, r11.yyyy, cb0[15].xxzx, l(0.000000, 1.000000, 1.000000, 0.000000)
  mul r11.yz, r11.yyzy, r11.yyzy
  div r11.yz, cb0[15].yywy, r11.yyzy
  mul r11.yz, r3.wwww, r11.yyzy
  mul r3.w, r10.z, l(4.000000)
  div r11.yz, r11.yyzy, r3.wwww
  mul r11.yz, r11.yyzy, cb0[16].xxyx
  mul r18.xyz, r3.xyzx, r11.yyyy
  mad r18.xyz, r18.xyzx, r2.wwww, r16.yzwy
  mul r3.xyz, r3.xyzx, r11.zzzz
  mad r3.xyz, r3.xyzx, r2.wwww, r18.xyzx
else 
  mov r17.xyz, r15.yzwy
  mov r3.xyz, r16.yzwy
endif 
movc r11.yzw, r0.zzzz, r17.xxyz, r15.yyzw
movc r3.xyz, r0.zzzz, r3.xyzx, r16.yzwy
mov r17.x, -r13.x
mov r18.xy, l(0,0,0,0)
mov r19.w, l(0)
mov r20.xyz, v7.xyzx
mov r20.w, l(1.000000)
mov r21.w, l(1.000000)
mov r17.z, r13.x
mov r23.z, l(1.000000)
mov r24.w, l(1.000000)
mov r17.yw, r14.xxxx
mov r13.y, r17.w
mov r25.w, l(1.000000)
mov r14.y, r17.x
mov r14.z, r13.x
mov r26.x, r14.x
mov r26.y, r17.x
mov r26.z, r13.x
mov r15.yzw, r11.yyzw
mov r16.yzw, r3.xxyz
mov r0.z, cb2[58].y
mov r2.w, l(0)
loop 
  uge r3.w, r2.w, cb2[0].x
  breakc_nz r3.w
  ushr r18.z, r2.w, l(5)
  iadd r19.xyz, r4.xyzx, r18.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r3.w, r19.xyzw, t6.yzwx
  mov r19.xyz, r15.yzwy
  mov r27.xyz, r16.yzwy
  mov r10.z, r0.z
  mov r12.w, r3.w
  loop 
    breakc_z r12.w
    firstbit_lo r13.z, r12.w
    ishl r13.w, l(1), r13.z
    and r14.w, r12.w, r13.w
    if_nz r14.w
      xor r12.w, r12.w, r13.w
      iadd r13.z, r2.w, r13.z
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r28.xyzw, r13.z, l(0), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r29.xy, r13.z, l(16), t12.xyxx
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r30.xyzw, r13.z, l(28), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r13.z, l(44), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r13.z, l(60), t12.zwxy
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r13.z, l(76), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r13.z, l(92), t12.zwxy
      ubfe r13.w, l(3), l(24), r30.x
      switch r13.w
        case l(4)
        lt r13.w, l(0.000000), r34.x
        mov r35.x, r33.w
        mov r35.yz, r34.zzwz
        mad r36.xyz, -r35.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r28.xyzx
        add r37.xyz, r36.xyzx, -v7.xyzx
        dp3 r14.w, r35.xyzx, r37.xyzx
        div_sat r14.w, -r14.w, r34.x
        mad r35.xyz, r14.wwww, r35.xyzx, r36.xyzx
        movc r35.xyz, r13.wwww, r35.xyzx, r28.xyzx
        add r35.xyz, r35.xyzx, -v7.xyzx
        dp3 r13.w, r35.xyzx, r35.xyzx
        rsq r14.w, r13.w
        mul r36.xyz, r14.wwww, r35.xyzx
        dp3 r18.z, r2.xyzx, r36.xyzx
        mov_sat r18.w, r18.z
        movc r18.w, cb0[29].z, |r18.z|, r18.w
        lt r22.x, l(0.000000), r18.w
        if_nz r22.x
          sqrt r22.x, r13.w
          mul r22.y, r31.y, r31.y
          div r13.w, r22.y, r13.w
          min r13.w, r13.w, l(1.000000)
          mad_sat r22.y, r22.x, r30.y, r30.z
          mad_sat r22.x, r22.x, r30.w, r31.x
          mul r23.w, r22.y, r22.y
          mad r22.y, r22.y, l(-2.000000), l(3.000000)
          mul r22.y, r22.y, r23.w
          mul r13.w, r13.w, r22.y
          mul r22.y, r22.x, r22.x
          mad r22.x, r22.x, l(-2.000000), l(3.000000)
          mul r22.x, r22.x, r22.y
          mul r13.w, r13.w, r22.x
          lt r22.x, l(0.000000), r13.w
          if_nz r22.x
            ubfe r22.xy, l(3, 4, 0, 0), l(27, 20, 0, 0), r30.xxxx
            ine r22.x, r22.x, l(1)
            if_nz r22.x
              mad r22.x, |r18.z|, l(-0.200000), l(0.400000)
              lt r23.w, r18.z, l(0.000000)
              and r23.w, r10.w, r23.w
              movc r22.x, r23.w, -r22.x, r22.x
              mad r36.xyz, r2.xyzx, r22.xxxx, v7.xyzx
              mov r32.z, r33.x
              add r36.xyz, -r32.xyzx, r36.xyzx
              max r22.x, |r36.z|, |r36.y|
              max r22.x, r22.x, |r36.x|
              div r22.x, r33.y, r22.x
              add r22.x, r33.z, r22.x
              dp3 r23.w, r36.xyzx, r36.xyzx
              rsq r23.w, r23.w
              max r22.x, r22.x, l(0.00006104)
              and r26.w, r30.x, l(0x0000ffff)
              utof r37.w, r26.w
              mov r26.w, l(0)
              mov r27.w, l(0)
              loop 
                ige r35.w, r27.w, l(8)
                breakc_nz r35.w
                dp2 r38.y, icb[r27.w + 0].yxyy, r17.xyxx
                dp2 r38.z, icb[r27.w + 0].yxyy, r17.yzyy
                mul r38.yz, r31.zzzz, r38.yyzy
                mul r38.x, r16.x, r38.y
                mul r38.w, r15.x, r38.y
                mad r37.xyz, r36.xyzx, r23.wwww, r38.xzwx
                sample_c_lz_indexable(texturecubearray)(float,float,float,float) r35.w, r37.xyzw, t10.xxxx, s13, r22.x
                mad r26.w, r35.w, l(0.125000), r26.w
                iadd r27.w, r27.w, l(1)
              endloop 
            else 
              mov r26.w, l(1.000000)
            endif 
            mul r13.w, r13.w, r26.w
            if_nz r22.y
              iadd r22.x, r22.y, cb2[0].x
              iadd r22.x, r22.x, l(-1)
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r22.y, r22.x, l(52), t12.xxxx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r22.x, l(100), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r22.x, l(116), t12.xyzw
              mad r23.w, |r18.z|, l(-0.200000), l(0.400000)
              lt r18.z, r18.z, l(0.000000)
              and r18.z, r10.w, r18.z
              movc r18.z, r18.z, -r23.w, r23.w
              mad r21.xyz, r2.xyzx, r18.zzzz, v7.xyzx
              dp4 r18.z, r36.xyzw, r21.xyzw
              dp4 r23.w, r37.xyzw, r21.xyzw
              lt r27.w, r23.w, r18.z
              if_z r27.w
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r22.x, l(68), t12.xyzw
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r22.x, l(84), t12.xyzw
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r22.x, l(132), t12.xyzw
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r22.x, l(148), t12.xyzw
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xy, r22.x, l(164), t12.xyxx
                dp4 r36.x, r36.xyzw, r21.xyzw
                dp4 r36.y, r37.xyzw, r21.xyzw
                div r21.xy, r36.xyxx, r23.wwww
                mad r21.xy, r21.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                add r21.xy, r39.zwzz, r21.xyxx
                mul r21.xy, r39.xyxx, r21.xyxx
                div r36.xy, r22.yyyy, r38.xzxx
                add r36.zw, -r36.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                ge r36.zw, r21.xxxy, r36.zzzw
                ge r36.xy, r36.xyxx, r21.xyxx
                or r36.xy, r36.xyxx, r36.zwzz
                or r21.z, r36.y, r36.x
                mov_sat r21.xy, r21.xyxx
                mad r36.xy, r21.xyxx, r38.xzxx, r38.ywyy
                mul r21.x, r23.w, r40.y
                mad r18.z, r40.x, r23.w, r18.z
                div r18.z, r18.z, r21.x
              else 
                mov r21.z, l(-1)
              endif 
              or r21.x, r27.w, r21.z
              if_z r21.x
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r21.x, r22.x, l(28), t12.xxxx
                max r18.z, r18.z, l(0.00006104)
                and r21.x, r21.x, l(0x0000ffff)
                if_nz r10.z
                  utof r37.z, r21.x
                  mov r21.yz, l(0,0,0,0)
                  loop 
                    ige r22.x, r21.z, l(8)
                    breakc_nz r22.x
                    dp2 r38.x, icb[r21.z + 0].yxyy, r17.xwxx
                    dp2 r38.y, icb[r21.z + 0].xyxx, r13.xyxx
                    mad r37.xy, r38.xyxx, r22.yyyy, r36.xyxx
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.x, r37.xyzx, t9.xxxx, s13, r18.z
                    mad r21.y, r22.x, l(0.125000), r21.y
                    iadd r21.z, r21.z, l(1)
                  endloop 
                else 
                  utof r36.z, r21.x
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.y, r36.xyzx, t9.xxxx, s13, r18.z
                endif 
                mul r18.z, r21.y, r21.y
                mul r18.z, r21.y, r18.z
              else 
                mov r18.z, l(1.000000)
              endif 
              mul r13.w, r13.w, r18.z
            endif 
            lt r18.z, l(0.000000), r13.w
            if_nz r18.z
              mov r29.z, r28.w
              mul r36.xyz, r29.zxyz, r13.wwww
              add r13.w, r0.y, r18.w
              div r13.w, r18.w, r13.w
              mad r19.xyz, r36.xyzx, r13.wwww, r19.xyzx
              mad r35.xyz, r35.xyzx, r14.wwww, r12.xyzx
              dp3 r13.w, r35.xyzx, r35.xyzx
              rsq r13.w, r13.w
              mul r35.xyz, r13.wwww, r35.xyzx
              dp3_sat r13.w, r2.xyzx, r35.xyzx
              dp3_sat r14.w, r35.xyzx, r12.xyzx
              mul r18.z, r13.w, r13.w
              mad r21.xz, r18.zzzz, cb0[15].xxzx, l(1.000000, 0.000000, 1.000000, 0.000000)
              mul r21.xz, r21.xxzx, r21.xxzx
              div r21.xz, cb0[15].yywy, r21.xxzx
              mul r21.xz, r13.wwww, r21.xxzx
              mul r13.w, r14.w, l(4.000000)
              div r21.xz, r21.xxzx, r13.wwww
              mul r21.xz, r21.xxzx, cb0[16].xxyx
              mul r35.xyz, r21.xxxx, r36.xyzx
              mad r35.xyz, r35.xyzx, r18.wwww, r27.xyzx
              mul r36.xyz, r21.zzzz, r36.xyzx
              mad r27.xyz, r36.xyzx, r18.wwww, r35.xyzx
            endif 
          endif 
        endif 
        break 
        case l(2)
        mov r35.x, r31.w
        mov r35.yz, r32.zzwz
        add r35.xyz, r35.xyzx, -v7.xyzx
        dp3 r13.w, r35.xyzx, r35.xyzx
        rsq r13.w, r13.w
        mul r36.xyz, r13.wwww, r35.xyzx
        dp3 r14.w, r2.xyzx, r36.xyzx
        mov_sat r18.z, r14.w
        movc r18.z, cb0[29].z, |r14.w|, r18.z
        lt r18.w, l(0.000000), r18.z
        if_nz r18.w
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r13.z, l(108), t12.zwxy
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r13.z, l(124), t12.xyzw
          mov r38.xy, r36.xyxx
          mov r38.zw, r37.xxxy
          dp4 r18.w, r38.xyzw, r20.xyzw
          lt r21.x, r18.w, l(1.000000)
          if_nz r21.x
            mov r39.xyz, l(1.000000,1.000000,1.000000,0)
            mov r21.x, l(0)
          else 
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r13.z, l(172), t12.yzwx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r13.z, l(188), t12.wxyz
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r13.z, l(204), t12.xyzw
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r21.z, r13.z, l(236), t12.xxxx
            add r28.xyz, r28.xyzx, -v7.xyzx
            mul r22.x, r31.y, r31.y
            dp3 r22.y, r28.xyzx, r28.xyzx
            div r22.x, r22.x, r22.y
            min r22.x, r22.x, l(1.000000)
            mad_sat r22.y, r18.w, r30.y, r30.z
            mad_sat r23.w, r18.w, r30.w, r31.x
            mul r27.w, r22.y, r22.y
            mad r22.y, r22.y, l(-2.000000), l(3.000000)
            mul r22.y, r22.y, r27.w
            mul r22.x, r22.y, r22.x
            mul r22.y, r23.w, r23.w
            mad r23.w, r23.w, l(-2.000000), l(3.000000)
            mul r22.y, r22.y, r23.w
            mul r22.x, r22.y, r22.x
            mov r32.zw, r33.xxxy
            dp4 r28.x, r32.xyzw, r20.xyzw
            mov r43.xy, r33.zwzz
            mov r43.zw, r34.zzzw
            dp4 r28.y, r43.xyzw, r20.xyzw
            div r23.xy, r28.xyxx, r18.wwww
            lt r18.w, r40.w, l(0.00048828)
            if_nz r18.w
              mov r41.y, r42.x
              mad_sat r28.xy, |r23.xyxx|, r41.zwzz, r41.xyxx
              mul r30.yz, r28.xxyx, r28.xxyx
              mad r28.xy, r28.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
              mul r28.xy, r28.xyxx, r30.yzyy
              mul r18.w, r28.y, r28.x
            else 
              mov r40.w, r41.y
              mul_sat r40.xyzw, |r23.yyxx|, r40.xyzw
              log r40.xyzw, r40.xyzw
              mul r40.xyzw, r40.xyzw, r41.xxxx
              exp r40.xyzw, r40.xyzw
              add r28.xy, r40.zwzz, r40.xyxx
              log r28.xy, r28.xyxx
              mul r28.xy, r28.xyxx, r42.xxxx
              exp r28.xy, r28.xyxx
              mul r22.y, r28.x, r41.z
              mad r23.w, r41.w, r28.y, l(-1.000000)
              mad r22.y, r41.w, r28.y, -r22.y
              div_sat r22.y, r23.w, r22.y
              mul r23.w, r22.y, r22.y
              mad r22.y, r22.y, l(-2.000000), l(3.000000)
              mul r18.w, r22.y, r23.w
            endif 
            mul r21.x, r18.w, r22.x
            and r18.w, r21.z, l(255)
            if_nz r18.w
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r28.xyz, r13.z, l(220), t12.xyzx
              dp3 r21.z, r42.yzwy, r23.xyzx
              dp3 r22.x, r28.xyzx, r23.xyzx
              frc r28.x, r21.z
              frc r28.y, r22.x
              iadd r18.w, r18.w, l(-1)
              utof r28.z, r18.w
              sample_l_indexable(texture2darray)(float,float,float,float) r39.xyz, r28.xyzx, t20.xyzw, s2, l(0.000000)
            else 
              mov r39.xyz, l(1.000000,1.000000,1.000000,0)
            endif 
          endif 
          mov r29.w, r28.w
          mul r23.xyw, r29.wxwy, r39.xyxz
          lt r18.w, l(0.000000), r21.x
          if_nz r18.w
            ubfe r22.xy, l(3, 4, 0, 0), l(27, 20, 0, 0), r30.xxxx
            ine r18.w, r22.x, l(1)
            if_nz r18.w
              mad r18.w, |r14.w|, l(-0.200000), l(0.400000)
              lt r21.z, r14.w, l(0.000000)
              and r21.z, r10.w, r21.z
              movc r18.w, r21.z, -r18.w, r18.w
              mad r24.xyz, r2.xyzx, r18.wwww, v7.xyzx
              mov r36.xy, r34.xyxx
              dp4 r18.w, r36.xyzw, r24.xyzw
              dp4 r21.z, r38.xyzw, r24.xyzw
              ge r22.x, r21.z, r18.w
              if_nz r22.x
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xy, r13.z, l(140), t12.xyxx
                mov r32.zw, r33.xxxy
                dp4 r28.x, r32.xyzw, r24.xyzw
                mov r34.xy, r33.zwzz
                dp4 r28.y, r34.xyzw, r24.xyzw
                div r24.xy, r28.xyxx, r21.zzzz
                mad_sat r24.xy, r24.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                mad r24.xy, r24.xyxx, r37.zxzz, r37.wyww
                div r13.z, r18.w, r21.z
                max r13.z, r13.z, l(0.00006104)
                and r18.w, r30.x, l(0x0000ffff)
                if_nz r10.z
                  utof r28.z, r18.w
                  mov r21.z, l(0)
                  mov r22.x, l(0)
                  loop 
                    ige r27.w, r22.x, l(8)
                    breakc_nz r27.w
                    dp2 r29.x, icb[r22.x + 0].xyxx, r14.xyxx
                    dp2 r29.y, icb[r22.x + 0].yxyy, r14.xzxx
                    mad r28.xy, r29.xyxx, r31.zzzz, r24.xyxx
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r27.w, r28.xyzx, t9.xxxx, s13, r13.z
                    mad r21.z, r27.w, l(0.125000), r21.z
                    iadd r22.x, r22.x, l(1)
                  endloop 
                else 
                  utof r24.z, r18.w
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.z, r24.xyzx, t9.xxxx, s13, r13.z
                endif 
                mul r13.z, r21.z, r21.z
                mul r13.z, r21.z, r13.z
              else 
                mov r13.z, l(1.000000)
              endif 
            else 
              mov r13.z, l(1.000000)
            endif 
            mul r13.z, r13.z, r21.x
            if_nz r22.y
              iadd r18.w, r22.y, cb2[0].x
              iadd r18.w, r18.w, l(-1)
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r21.x, r18.w, l(52), t12.xxxx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r28.xyzw, r18.w, l(68), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r29.xyzw, r18.w, l(84), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r30.xyzw, r18.w, l(100), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r18.w, l(116), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r18.w, l(132), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r18.w, l(148), t12.xyzw
              mad r22.x, |r14.w|, l(-0.200000), l(0.400000)
              lt r14.w, r14.w, l(0.000000)
              and r14.w, r10.w, r14.w
              movc r14.w, r14.w, -r22.x, r22.x
              mad r25.xyz, r2.xyzx, r14.wwww, v7.xyzx
              dp4 r22.x, r28.xyzw, r25.xyzw
              dp4 r22.y, r29.xyzw, r25.xyzw
              dp4 r14.w, r30.xyzw, r25.xyzw
              dp4 r24.x, r31.xyzw, r25.xyzw
              lt r24.y, r24.x, r14.w
              div r22.xy, r22.xyxx, r24.xxxx
              mad r22.xy, r22.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
              add r22.xy, r33.zwzz, r22.xyxx
              mul r22.xy, r33.xyxx, r22.xyxx
              div r25.xy, r21.xxxx, r32.xzxx
              add r28.xy, -r25.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
              ge r28.xy, r22.xyxx, r28.xyxx
              ge r25.xy, r25.xyxx, r22.xyxx
              or r25.xy, r25.xyxx, r28.xyxx
              or r24.z, r25.y, r25.x
              or r24.y, r24.y, r24.z
              if_z r24.y
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r24.y, r18.w, l(28), t12.xxxx
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r25.xy, r18.w, l(164), t12.xyxx
                mov_sat r22.xy, r22.xyxx
                mad r28.xy, r22.xyxx, r32.xzxx, r32.ywyy
                mul r18.w, r24.x, r25.y
                mad r14.w, r25.x, r24.x, r14.w
                div r14.w, r14.w, r18.w
                max r14.w, r14.w, l(0.00006104)
                and r18.w, r24.y, l(0x0000ffff)
                if_nz r10.z
                  utof r24.z, r18.w
                  mov r22.xy, l(0,0,0,0)
                  loop 
                    ige r25.x, r22.y, l(8)
                    breakc_nz r25.x
                    dp2 r25.x, icb[r22.y + 0].xyxx, r26.xyxx
                    dp2 r25.y, icb[r22.y + 0].yxyy, r26.xzxx
                    mad r24.xy, r25.xyxx, r21.xxxx, r28.xyxx
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.x, r24.xyzx, t9.xxxx, s13, r14.w
                    mad r22.x, r24.x, l(0.125000), r22.x
                    iadd r22.y, r22.y, l(1)
                  endloop 
                else 
                  utof r28.z, r18.w
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.x, r28.xyzx, t9.xxxx, s13, r14.w
                endif 
                mul r14.w, r22.x, r22.x
                mul r14.w, r22.x, r14.w
              else 
                mov r14.w, l(1.000000)
              endif 
              mul r13.z, r13.z, r14.w
            endif 
            lt r14.w, l(0.000000), r13.z
            if_nz r14.w
              mul r23.xyw, r23.xyxw, r13.zzzz
              add r13.z, r0.y, r18.z
              div r13.z, r18.z, r13.z
              mad r19.xyz, r23.xywx, r13.zzzz, r19.xyzx
              mad r24.xyz, r35.xyzx, r13.wwww, r12.xyzx
              dp3 r13.z, r24.xyzx, r24.xyzx
              rsq r13.z, r13.z
              mul r24.xyz, r13.zzzz, r24.xyzx
              dp3_sat r13.z, r2.xyzx, r24.xyzx
              dp3_sat r13.w, r24.xyzx, r12.xyzx
              mul r14.w, r13.z, r13.z
              mad r24.xy, r14.wwww, cb0[15].xzxx, l(1.000000, 1.000000, 0.000000, 0.000000)
              mul r24.xy, r24.xyxx, r24.xyxx
              div r24.xy, cb0[15].ywyy, r24.xyxx
              mul r24.xy, r13.zzzz, r24.xyxx
              mul r13.z, r13.w, l(4.000000)
              div r13.zw, r24.xxxy, r13.zzzz
              mul r13.zw, r13.zzzw, cb0[16].xxxy
              mul r24.xyz, r13.zzzz, r23.xywx
              mad r24.xyz, r24.xyzx, r18.zzzz, r27.xyzx
              mul r23.xyw, r13.wwww, r23.xyxw
              mad r27.xyz, r23.xywx, r18.zzzz, r24.xyzx
            endif 
          endif 
        endif 
        break 
        default 
        break 
      endswitch 
    endif 
  endloop 
  mov r15.yzw, r19.xxyz
  mov r16.yzw, r27.xxyz
  iadd r2.w, r2.w, l(32)
endloop 
mul r0.y, cb0[12].y, cb1[69].w
mad r2.zw, r5.zzzw, l(0.000000, 0.000000, -1.000000, 1.000000), l(0.000000, 0.000000, 1.000000, -1.000000)
mad r2.zw, r2.zzzw, r0.yyyy, r1.xxxy
sample_l_indexable(texture2d)(float,float,float,float) r3.xyzw, r2.zwzz, t25.xyzw, s7, r8.w
mad r2.zw, r6.xxxy, l(0.000000, 0.000000, -1.000000, 1.000000), l(0.000000, 0.000000, 1.000000, -1.000000)
mad r2.zw, r2.zzzw, r0.yyyy, r1.xxxy
sample_l_indexable(texture2d)(float,float,float,float) r4.xyz, r2.zwzz, t25.xyzw, s7, r8.w
add r4.xyz, -r3.xyzx, r4.xyzx
mad r4.xyz, r5.xxxx, r4.xyzx, r3.xyzx
mad r2.zw, r6.zzzw, l(0.000000, 0.000000, -1.000000, 1.000000), l(0.000000, 0.000000, 1.000000, -1.000000)
mad r2.zw, r2.zzzw, r0.yyyy, r1.xxxy
sample_l_indexable(texture2d)(float,float,float,float) r6.xyz, r2.zwzz, t25.xyzw, s7, r8.w
mad r1.zw, r1.zzzw, l(0.000000, 0.000000, -1.000000, 1.000000), l(0.000000, 0.000000, 1.000000, -1.000000)
mad r0.yz, r1.zzwz, r0.yyyy, r1.xxyx
sample_l_indexable(texture2d)(float,float,float,float) r1.xyz, r0.yzyy, t25.xyzw, s7, r8.w
add r1.xyz, -r6.xyzx, r1.xyzx
mad r1.xyz, r5.xxxx, r1.xyzx, r6.xyzx
add r1.xyz, -r4.xyzx, r1.xyzx
mad r3.xyz, r5.yyyy, r1.xyzx, r4.xyzx
mul r1.xyzw, r3.xyzw, cb0[18].xyzw
add r0.y, r10.x, l(1.000000)
log r0.y, r0.y
mul r0.y, r0.y, cb0[16].w
min r0.y, r0.y, l(500.000000)
mad r0.yz, r0.yyyy, r2.xxyx, v0.xxyx
add r2.xy, cb1[44].xyxx, l(-1.000000, -1.000000, 0.000000, 0.000000)
max r0.yz, r0.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
min r0.yz, r2.xxyx, r0.yyzy
ftoi r2.xy, r0.yzyy
mov r2.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r2.x, r2.xyzw, t29.xyzw
ge r2.y, r2.x, l(0.984375)
mul r2.z, r2.x, l(1.01587307)
mad r2.x, r2.x, l(64.000000), l(-63.000000)
movc r2.x, r2.y, r2.x, r2.z
max r2.x, r2.x, l(0.00000001)
rcp r2.x, r2.x
lt r0.x, r0.x, r2.x
mul r0.yz, r0.yyzy, cb1[44].zzwz
sample_indexable(texture2d)(float,float,float,float) r2.xyz, r0.yzyy, t30.xyzw, s9
if_z r0.x
  ftoi r3.xy, v0.xyxx
  mov r3.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r2.xyz, r3.xyzw, t30.xyzw
endif 
mul r0.xyz, r2.xyzx, cb1[85].xxxx
mad r2.w, r10.x, l(2.000000), l(1.000000)
log r2.w, r2.w
mul r22.z, r2.w, l(0.08333334)
sample_indexable(texture2d)(float,float,float,float) r3.xyzw, r22.zwzz, t37.xyzw, s8
mul r3.xyz, r0.xyzx, r3.xyzx
mul r1.w, r1.w, r3.w
mad r1.xyz, r1.xyzx, r15.yzwy, -r3.xyzx
mad r1.xyz, r1.wwww, r1.xyzx, r3.xyzx
mad r1.xyz, -r2.xyzx, cb1[85].xxxx, r1.xyzx
mad r0.xyz, r10.yyyy, r1.xyzx, r0.xyzx
mad r1.xyz, r8.xyzx, r15.yzwy, -r0.xyzx
mad r0.xyz, r7.xxxx, r1.xyzx, r0.xyzx
mad r1.xyz, r16.yzwy, r0.wwww, r7.yzwy
add r0.w, -r9.w, l(1.000000)
mul r1.w, r0.w, r0.w
mul r1.w, r1.w, r1.w
mul r0.w, r0.w, r1.w
mad r0.w, r0.w, l(0.980000), l(0.020000)
add r1.xyz, -r0.xyzx, r1.xyzx
mad r0.xyz, r0.wwww, r1.xyzx, r0.xyzx
mad r1.xyz, cb0[22].yzwy, r15.yzwy, -r0.xyzx
mad r1.xyz, r11.xxxx, r1.xyzx, r0.xyzx
movc r0.xyz, cb0[28].yyyy, r1.xyzx, r0.xyzx
lt r0.w, l(0.000000), cb2[9].z
if_nz r0.w
  sqrt r0.w, r4.w
  lt r1.x, l(0.000000), cb2[13].w
  if_nz r1.x
    mad r1.xy, r0.wwww, cb2[15].xyxx, cb2[14].zwzz
    mul r1.xy, r1.xyxx, cb2[16].xyxx
    lt r1.z, l(0.010000), |v7.z|
    mul r2.xy, v7.zzzz, cb2[15].zwzz
    mul r2.zw, r2.xxxy, l(0.000000, 0.000000, -1.442695, -1.442695)
    exp r2.zw, r2.zzzw
    add r2.zw, -r2.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    div r2.xy, r2.zwzz, r2.xyxx
    mul r2.xy, r1.xyxx, r2.xyxx
    movc r1.xy, r1.zzzz, r2.xyxx, r1.xyxx
    mul r1.xzw, r1.xxxx, cb2[12].xxyz
    exp r1.xzw, r1.xxzw
    mul r2.xyz, r1.yyyy, cb2[12].xyzx
    exp r2.xyz, r2.xyzx
    add r2.xyz, -r1.xzwx, r2.xyzx
    mad r1.xyz, cb2[13].wwww, r2.xyzx, r1.xzwx
  else 
    mad r1.w, r0.w, cb2[15].x, cb2[14].z
    mul r1.w, r1.w, cb2[16].x
    lt r2.x, l(0.010000), |v7.z|
    mul r2.y, v7.z, cb2[15].z
    mul r2.z, r2.y, l(-1.442695)
    exp r2.z, r2.z
    add r2.z, -r2.z, l(1.000000)
    div r2.y, r2.z, r2.y
    mul r2.y, r1.w, r2.y
    movc r1.w, r2.x, r2.y, r1.w
    mul r2.xyz, r1.wwww, cb2[12].xyzx
    exp r1.xyz, r2.xyzx
  endif 
  mad r1.xyz, r1.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r1.xyz, r1.xyzx, -cb2[9].zzzz
  dp3 r1.w, cb2[7].yzwy, -r9.xyzx
  mad r2.x, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r2.y, cb2[8].w, -r1.w, l(1.000000)
  mul r2.y, r2.y, r2.y
  mul r2.y, r2.y, l(12.566371)
  div r2.x, r2.x, r2.y
  add r0.w, r0.w, -cb2[10].w
  mul_sat r0.w, r0.w, cb2[11].w
  mul r0.w, r0.w, r2.x
  mov_sat r1.w, r1.w
  mad r1.w, r1.w, r1.w, l(1.000000)
  mad r1.w, r1.w, l(0.05968310), l(-1.000000)
  mad r1.w, cb2[8].z, r1.w, l(1.000000)
  mul r2.xyz, r0.wwww, cb2[11].xyzx
  mad r2.xyz, r1.wwww, cb2[10].xyzx, r2.xyzx
  mul r2.xyz, r2.xyzx, cb2[9].wwww
  add r3.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r2.xyz, r2.xyzx, r3.xyzx
  mad r1.xyz, r0.xyzx, r1.xyzx, r2.xyzx
else 
  mul r0.w, v7.z, cb2[6].x
  mad r1.w, cb2[6].x, v7.z, cb2[5].x
  lt r2.x, |r0.w|, l(0.000100)
  min r2.y, r1.w, l(64.000000)
  mul r2.y, r2.y, l(1.442695)
  exp r2.y, r2.y
  mov_sat r2.z, cb2[6].z
  lt r2.w, r1.w, l(0.000000)
  add r1.w, r1.w, l(1.000000)
  movc r1.w, r2.w, r2.y, r1.w
  add r1.w, r1.w, -cb2[6].z
  movc r0.w, r2.x, l(1.000000), r0.w
  div r0.w, r1.w, r0.w
  movc r0.w, r2.x, r2.z, r0.w
  mul r0.w, r0.w, cb2[5].z
  sqrt r1.w, r4.w
  mad r0.w, r0.w, r1.w, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  dp3 r1.w, cb2[7].yzwy, r9.xyzx
  mad_sat r1.w, cb2[8].y, r1.w, cb2[8].x
  add r2.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r2.xyzw, r1.wwww, r2.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r2.w
  add r2.xyz, -r0.xyzx, r2.xyzx
  mad r1.xyz, r0.wwww, r2.xyzx, r0.xyzx
endif 
mul r0.xyz, r1.xyzx, cb1[85].yyyy
ge r1.xyz, r0.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.xyz, r0.xyzx, r1.xyzx
min o0.xyz, r0.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
mov o0.w, l(1.000000)
ret 
// Approximately 2113 instruction slots used
