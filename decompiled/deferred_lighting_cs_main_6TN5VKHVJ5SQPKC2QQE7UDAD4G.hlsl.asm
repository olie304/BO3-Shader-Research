//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:23:05 2021
//
//
// Buffer Definitions: 
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4
//   uint enableCountDebug;             // Offset:  836 Size:     4
//   uint centerGroupIDx;               // Offset:  840 Size:     4
//   uint centerGroupIDy;               // Offset:  844 Size:     4
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4
//   float drawNumLighstScale;          // Offset:  856 Size:     4
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4
//   uint probeDebug;                   // Offset:  864 Size:     4
//   float probeDebugRadius;            // Offset:  868 Size:     4
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4
//   uint showAO;                       // Offset:  880 Size:     4
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// cbuffer LightingPackCBuffer
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } lightConstantsCB[273];           // Offset:    0 Size: 65520
//
// }
//
// cbuffer RefProbePackCBuffer
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } refProbeConstantsCB[273];        // Offset:    0 Size: 61152
//
// }
//
// cbuffer RefProbeBlendPackCBuffer
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } refProbeAttenuationConstantsCB[682];// Offset:    0 Size: 65472
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for gPermutedTilingBuffer
// {
//
//   struct PermutedTilingBuffer
//   {
//       
//       uint2 data;                    // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:     8
//
// }
//
// Resource bind info for gDeferredCullBits
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for lightingDebug
// {
//
//   struct LightingDebug
//   {
//       
//       struct LightingDebugCounts
//       {
//           
//           uint visibleLights;        // Offset:    0
//           uint activeLights;         // Offset:    4
//           uint litLights;            // Offset:    8
//           uint visibleProbes;        // Offset:   12
//           uint activeProbes;         // Offset:   16
//
//       } maxCounts;                   // Offset:    0
//       
//       struct LightingDebugCounts
//       {
//           
//           uint visibleLights;        // Offset:   20
//           uint activeLights;         // Offset:   24
//           uint litLights;            // Offset:   28
//           uint visibleProbes;        // Offset:   32
//           uint activeProbes;         // Offset:   36
//
//       } centerCounts;                // Offset:   20
//       
//       struct LightingDebugCounts
//       {
//           
//           uint visibleLights;        // Offset:   40
//           uint activeLights;         // Offset:   44
//           uint litLights;            // Offset:   48
//           uint visibleProbes;        // Offset:   52
//           uint activeProbes;         // Offset:   56
//
//       } sumDeferredCounts;           // Offset:   40
//       
//       struct LightingDebugCounts
//       {
//           
//           uint visibleLights;        // Offset:   60
//           uint activeLights;         // Offset:   64
//           uint litLights;            // Offset:   68
//           uint visibleProbes;        // Offset:   72
//           uint activeProbes;         // Offset:   76
//
//       } sumForwardCounts;            // Offset:   60
//       float3 cameraWorldPos;         // Offset:   80
//       float3 pickedWldPos;           // Offset:   92
//       uint numPickedLights;          // Offset:  104
//       uint numPickedProbes;          // Offset:  108
//       
//       struct LightingDebugLight
//       {
//           
//           uint flags;                // Offset:  112
//           float3 wldOrigin;          // Offset:  116
//           float activeAttenuation;   // Offset:  128
//           float litAttenuation;      // Offset:  132
//
//       } pickedLights[32];            // Offset:  112
//       
//       struct LightingDebugProbe
//       {
//           
//           uint flags;                // Offset:  880
//           float3 wldOrigin;          // Offset:  884
//           float weight;              // Offset:  896
//
//       } pickedProbes[32];            // Offset:  880
//       uint overdrawHistogram[64];    // Offset: 1520
//       uint overdrawSum;              // Offset: 1776
//       uint overdrawMax;              // Offset: 1780
//       float padding0;                // Offset: 1784
//       float padding1;                // Offset: 1788
//
//   } $Element;                        // Offset:    0 Size:  1792
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// samplerPointClamp                 sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// GBufferDiffuseColor               texture  float4          2d             t0      1 
// GBufferNormalAndGloss             texture  float4          2d             t1      1 
// GBufferSpecularColorAndOcclusion    texture  float4          2d             t2      1 
// GBufferDepth                      texture   float          2d             t4      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// gDownsampledScene                 texture  float4          2d            t21      1 
// gMotionVectors                    texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// gPermutedTilingBuffer             texture  struct         r/o            t25      1 
// gDeferredCullBits                 texture  struct         r/o            t26      1 
// gSSAOTexture                      texture   float          2d            t27      1 
// gSSAODepthTexture                 texture   float          2d            t28      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// litBuffer                             UAV  float3          2d             u0      1 
// lightingDebug                         UAV  struct         r/w             u2      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
// LightingPackCBuffer               cbuffer      NA          NA            cb9      1 
// RefProbePackCBuffer               cbuffer      NA          NA           cb10      1 
// RefProbeBlendPackCBuffer          cbuffer      NA          NA           cb11      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB1[86], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_constantbuffer CB9[4095], dynamicIndexed
dcl_constantbuffer CB10[3822], dynamicIndexed
dcl_constantbuffer CB11[4092], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s4, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_structured t25, 8
dcl_resource_structured t26, 4
dcl_resource_texture2d (float,float,float,float) t27
dcl_resource_texture2d (float,float,float,float) t28
dcl_resource_texture2darray (float,float,float,float) t31
dcl_uav_typed_texture2d (float,float,float,float) u0
dcl_uav_structured u2, 1792
dcl_input vThreadIDInGroupFlattened
dcl_input vThreadGroupID.x
dcl_input vThreadIDInGroup.xy
dcl_temps 47
dcl_tgsm_raw g0, 4
dcl_tgsm_raw g1, 20
dcl_tgsm_raw g2, 20
dcl_thread_group 8, 8, 1
if_z vThreadIDInGroupFlattened.x
  store_raw g0.x, l(0), l(0)
  store_raw g1.xyzw, l(0), l(0,0,0,0)
  store_raw g1.x, l(16), l(0)
  store_raw g2.xyzw, l(0), l(0,0,0,0)
  store_raw g2.x, l(16), l(0)
endif 
sync_g_t
imad r0.x, cb2[57].x, l(3), vThreadGroupID.x
ld_structured_indexable(structured_buffer, stride=8)(mixed,mixed,mixed,mixed) r0.xy, r0.x, l(0), t25.xyxx
and r0.yz, r0.xxyx, l(0, 4095, 4095, 0)
imad r1.xy, r0.yzyy, l(8, 8, 0, 0), vThreadIDInGroup.xyxx
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.xyww, t1.xyzw
ftou r3.xy, cb1[44].xyxx
ult r3.xy, r1.xyxx, r3.xyxx
and r0.w, r3.y, r3.x
lt r3.x, l(0.000000), r2.z
and r0.w, r0.w, r3.x
if_z r0.w
  ret 
endif 
ld_indexable(texture2d)(float,float,float,float) r3.xyzw, r1.xyww, t2.xyzw
utof r4.xy, r1.xyxx
add r4.zw, r4.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
mul r5.xy, r4.zwzz, cb1[44].zwzz
sample_l_indexable(texture2d)(float,float,float,float) r5.x, r5.xyxx, t27.xyzw, s4, l(0.000000)
mul r3.z, r3.z, r5.x
if_nz cb2[55].x
  mul r5.x, r3.z, l(0.750000)
  store_uav_typed u0.xyzw, r1.xyyy, r5.xxxx
  ret 
else 
  movc r5.x, cb2[54].w, r3.z, l(1.000000)
endif 
ge r3.z, r2.z, l(0.500000)
ld_indexable(texture2d)(float,float,float,float) r5.y, r1.xyww, t4.yxzw
ld_indexable(texture2d)(float,float,float,float) r6.xyz, r1.xyww, t0.xyzw
ld_aoffimmi_indexable(-1,0,0)(texture2d)(float,float,float,float) r7.xyz, r1.xyww, t2.xywz
ld_aoffimmi_indexable(0,-1,0)(texture2d)(float,float,float,float) r8.xyz, r1.xyww, t2.xywz
ld_aoffimmi_indexable(1,0,0)(texture2d)(float,float,float,float) r9.xyz, r1.xyww, t2.xywz
ld_aoffimmi_indexable(0,1,0)(texture2d)(float,float,float,float) r10.xyz, r1.xyzw, t2.xywz
ge r11.x, r5.y, l(0.984375)
mul r1.z, r5.y, l(1.01587307)
mad r1.w, r5.y, l(64.000000), l(-63.000000)
movc r1.z, r11.x, r1.w, r1.z
max r1.z, r1.z, l(0.00000001)
rcp r11.y, r1.z
and r1.zw, r0.wwww, r11.xxxy
add r4.zw, r4.zzzw, -cb1[71].xxxy
mul r4.zw, r4.zzzw, cb1[44].zzzw
mad r4.zw, r4.zzzw, l(0.000000, 0.000000, 2.000000, -2.000000), l(0.000000, 0.000000, -1.000000, 1.000000)
mul r11.x, r4.z, cb1[12].x
mul r11.y, r4.w, cb1[13].y
mov r11.zw, l(0,0,1.000000,1.000000)
mul r5.yzw, r1.wwww, r11.xxyz
mul r11.xyz, r5.zzzz, cb1[17].xyzx
mad r11.xyz, r5.yyyy, cb1[16].xyzx, r11.xyzx
mad r11.xyz, r5.wwww, cb1[18].xyzx, r11.xyzx
mad r0.w, r2.w, l(3.000000), l(0.500000)
ftou r0.w, r0.w
mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r2.xy, r2.xyxx, l(0.850000, 0.850000, 0.000000, 0.000000)
dp2 r2.w, r2.xyxx, r2.xyxx
add r12.zw, -r2.wwww, l(0.000000, 0.000000, 2.000000, 1.000000)
sqrt r2.w, r12.z
mul r12.xy, r2.wwww, r2.xyxx
and r13.xyzw, r0.wwww, l(2, 1, 2, 1)
movc r13.xyzw, r13.zwxy, l(-1.000000,-1.000000,1,1), l(1.000000,1.000000,0,0)
xor r0.w, r13.w, r13.z
movc r13.z, r0.w, l(-1.000000), l(1.000000)
mul r2.xyw, r13.xyxz, l(-1.000000, 0.000000, 0.000000, 1.000000)
mul r5.yzw, r13.xxyz, l(0.000000, 1.000000, -2.000000, 1.000000)
mul r12.xyz, r12.xywx, l(0.40824831, 0.70710677, 0.57735026, 0.000000)
mul r2.xyw, r2.xyxw, r12.yyyy
mad r2.xyw, r5.yzyw, r12.xxxx, r2.xyxw
mad r12.xyz, r13.xyzx, r12.zzzz, r2.xywx
movc r0.w, r3.z, l(-0.500000), l(-0.00146628)
add r0.w, r0.w, r2.z
mul_sat r2.y, r0.w, l(2.00982332)
dp3 r0.w, -r11.xyzx, -r11.xyzx
rsq r0.w, r0.w
mul r5.yzw, r0.wwww, -r11.xxyz
dp2 r2.z, r4.xyxx, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r2.z, r2.z
mul r2.z, r2.z, l(52.982918)
frc r2.z, r2.z
mad r2.z, r2.z, l(6.28318548), cb1[70].w
sincos r4.x, r13.x, r2.z
utof r2.zw, r1.yyyx
dp2 r2.z, r2.zwzz, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r2.z, r2.z
mul r2.z, r2.z, l(52.982918)
frc r2.z, r2.z
mad r2.z, r2.z, l(6.28318548), cb1[70].w
sincos r14.x, r15.x, r2.z
dp3_sat r2.x, r12.xyzx, r5.yzwy
dp3 r2.z, -r5.yzwy, r12.xyzx
add r2.z, r2.z, r2.z
mad r16.xyz, r12.xyzx, -r2.zzzz, -r5.yzwy
mul r2.z, r2.y, l(17.000000)
exp r2.z, r2.z
add r2.z, r2.z, l(2.000000)
div r2.z, l(2.000000), r2.z
sqrt r2.w, r2.z
mul r4.zw, cb1[44].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
ftou r14.yz, r4.zzwz
ieq r14.yz, r1.xxyx, r14.yyzy
and r6.w, r14.z, r14.y
lt r7.w, l(0.83333331), r2.y
lt r8.w, l(60.000000), r1.w
and r7.w, r7.w, r8.w
if_nz r7.w
  mul r14.yzw, r11.yyyy, cb1[9].xxyw
  mad r14.yzw, r11.xxxx, cb1[8].xxyw, r14.yyzw
  mad r14.yzw, r11.zzzz, cb1[10].xxyw, r14.yyzw
  add r14.yzw, r14.yyzw, cb1[11].xxyw
  mad r15.yzw, r16.xxyz, l(0.000000, 2000.000000, 2000.000000, 2000.000000), r11.xxyz
  mul r17.xyz, r15.zzzz, cb1[9].xywx
  mad r17.xyz, r15.yyyy, cb1[8].xywx, r17.xyzx
  mad r15.yzw, r15.wwww, cb1[10].xxyw, r17.xxyz
  add r15.yzw, r15.yyzw, cb1[11].xxyw
  ge r7.w, r15.w, r14.w
  if_nz r7.w
    rcp r17.z, r14.w
    mul r17.xy, r14.yzyy, r17.zzzz
    rcp r18.z, r15.w
    mul r18.xy, r15.yzyy, r18.zzzz
    lt r14.yz, l(0.000000, 1.000000, 1.000000, 0.000000), r18.xxyx
    mad r19.xyzw, r15.yyzz, r18.zzzz, l(-1.000000, 1.000000, -1.000000, 1.000000)
    mad r20.xyzw, r15.yyzz, r18.zzzz, -r17.xxyy
    lt r15.yz, r18.xxyx, l(0.000000, -1.000000, -1.000000, 0.000000)
    div r19.xyzw, r19.xyzw, r20.xyzw
    and r15.yz, r15.yyzy, r19.yywy
    movc r14.yz, r14.yyzy, r19.xxzx, r15.yyzy
    max r7.w, r14.z, r14.y
    add r19.xyz, r17.xyzx, -r18.xyzx
    mad r18.xyw, r7.wwww, r19.xyxz, r18.xyxz
    mad r14.yz, r17.xxyx, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
    mad r15.yz, r18.xxyx, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
    add r14.yz, r14.yyzy, -r15.yyzy
    mul r14.yz, r4.zzwz, |r14.yyzy|
    max r7.w, r14.z, r14.y
    max r7.w, r7.w, l(1.000000)
    rcp r7.w, r7.w
    mad r17.xyz, r17.xyzx, l(0.500000, -0.500000, 1.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    mad r19.xyz, r18.xywx, l(0.500000, -0.500000, 1.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    add r20.xyz, -r17.xyzx, r19.xyzx
    mad r17.xyz, r7.wwww, r20.xyzx, r17.xyzx
    add r19.xyz, -r17.xyzx, r19.xyzx
    mul r20.xyz, r19.xyzx, l(0.031250, 0.031250, 0.031250, 0.000000)
    mul r4.zw, r4.zzzw, |r20.xxxy|
    max r4.z, r4.w, r4.z
    log r4.z, r4.z
    round_pi r4.z, r4.z
    max r4.z, r4.z, l(0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r17.xyxx, t28.yzwx, s1, r4.z
    mad r21.xyz, r19.xyzx, l(0.031250, 0.031250, 0.031250, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r4.w, |r4.w|, |r7.w|
    mul r4.w, r21.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    and r8.w, r4.w, l(1)
    mad r21.xyz, r19.xyzx, l(0.062500, 0.062500, 0.062500, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r9.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r7.w, |r7.w|, |r9.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    bfi r4.w, l(1), l(0), r4.w, l(2)
    movc r4.w, r7.w, r4.w, r8.w
    mad r21.xyz, r19.xyzx, l(0.093750, 0.093750, 0.093750, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r8.w, |r9.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.w, r4.w, l(4)
    movc r4.w, r8.w, r9.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.125000, 0.125000, 0.125000, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.w, r4.w, l(8)
    movc r4.w, r7.w, r9.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.156250, 0.156250, 0.156250, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.w, r4.w, l(16)
    movc r4.w, r8.w, r9.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.187500, 0.187500, 0.187500, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.w, r4.w, l(32)
    movc r4.w, r7.w, r9.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.218750, 0.218750, 0.218750, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.w, r4.w, l(64)
    movc r4.w, r8.w, r9.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.w, r4.w, l(128)
    movc r4.w, r7.w, r9.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.281250, 0.281250, 0.281250, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.w, r4.w, l(256)
    movc r4.w, r8.w, r9.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.312500, 0.312500, 0.312500, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.w, r4.w, l(512)
    movc r4.w, r7.w, r9.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.343750, 0.343750, 0.343750, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.w, r4.w, l(1024)
    movc r4.w, r8.w, r9.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.375000, 0.375000, 0.375000, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.w, r4.w, l(2048)
    movc r4.w, r7.w, r9.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.406250, 0.406250, 0.406250, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.w, r4.w, l(4096)
    movc r4.w, r8.w, r9.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.437500, 0.437500, 0.437500, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.w, r4.w, l(8192)
    movc r4.w, r7.w, r9.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.468750, 0.468750, 0.468750, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.w, r4.w, l(0x00004000)
    movc r4.w, r8.w, r9.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.w, r4.w, l(0x00008000)
    movc r4.w, r7.w, r9.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.531250, 0.531250, 0.531250, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.w, r4.w, l(0x00010000)
    movc r4.w, r8.w, r9.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.562500, 0.562500, 0.562500, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.w, r4.w, l(0x00020000)
    movc r4.w, r7.w, r9.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.593750, 0.593750, 0.593750, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.w, r4.w, l(0x00040000)
    movc r4.w, r8.w, r9.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.625000, 0.625000, 0.625000, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.w, r4.w, l(0x00080000)
    movc r4.w, r7.w, r9.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.656250, 0.656250, 0.656250, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.w, r4.w, l(0x00100000)
    movc r4.w, r8.w, r9.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.687500, 0.687500, 0.687500, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.w, r4.w, l(0x00200000)
    movc r4.w, r7.w, r9.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.718750, 0.718750, 0.718750, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.w, r4.w, l(0x00400000)
    movc r4.w, r8.w, r9.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.750000, 0.750000, 0.750000, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.w, r4.w, l(0x00800000)
    movc r4.w, r7.w, r9.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.781250, 0.781250, 0.781250, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.w, r4.w, l(0x01000000)
    movc r4.w, r8.w, r9.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.812500, 0.812500, 0.812500, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.w, r4.w, l(0x02000000)
    movc r4.w, r7.w, r9.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.843750, 0.843750, 0.843750, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.w, r4.w, l(0x04000000)
    movc r4.w, r8.w, r9.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.875000, 0.875000, 0.875000, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.w, r4.w, l(0x08000000)
    movc r4.w, r7.w, r9.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.906250, 0.906250, 0.906250, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.w, r4.w, l(0x10000000)
    movc r4.w, r8.w, r9.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.937500, 0.937500, 0.937500, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.w, r4.w, l(0x20000000)
    movc r4.w, r7.w, r9.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.968750, 0.968750, 0.968750, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.w, r4.w, l(0x40000000)
    movc r4.w, r8.w, r9.w, r4.w
    sample_l_indexable(texture2d)(float,float,float,float) r4.z, r15.yzyy, t28.yzxw, s1, r4.z
    min r4.z, |r7.w|, |r4.z|
    mul r4.z, r18.w, r4.z
    lt r4.z, r4.z, l(1.000000)
    iadd r7.w, r4.w, l(0x80000000)
    movc r4.z, r4.z, r7.w, r4.w
    mov r21.w, l(-1)
    mov r22.z, l(-1)
    mov r14.yz, l(0,0,0,0)
    mov r4.w, l(0)
    mov r7.w, r4.z
    mov r8.w, r18.z
    mov r23.yz, l(0,0,0,0)
    mov r21.z, l(0)
    mov r9.w, l(0)
    loop 
      breakc_z r7.w
      firstbit_lo r21.y, r7.w
      ishl r10.w, l(1), r21.y
      xor r21.x, r7.w, r10.w
      utof r13.w, r21.y
      mul r13.w, r13.w, l(0.031250)
      mad r18.xyw, r19.xyxz, r13.wwww, r17.xyxz
      sample_l_indexable(texture2d)(float,float,float,float) r13.w, r18.xyxx, t28.yzwx, s1, l(0.000000)
      mul r15.y, r18.w, |r13.w|
      lt r15.y, r15.y, l(1.000000)
      if_nz r15.y
        if_nz r21.z
          lt r15.y, r14.w, |r13.w|
          lt r15.z, r8.w, r18.w
          and r15.y, r15.z, r15.y
          movc r24.xy, r15.yyyy, r18.xyxx, r14.yzyy
          mov r21.z, r18.w
          mov r23.x, r8.w
          movc r25.xyz, r15.yyyy, r21.zxyz, r23.xyzx
          mov r7.w, r21.x
          mov r21.z, l(-1)
          mov r14.yz, r24.xxyx
          mov r8.w, r25.x
          mov r23.yz, r25.yyzy
          continue 
        endif 
        mov r15.y, r23.y
        mov r15.z, l(0)
      else 
        not r10.w, r10.w
        and r15.y, r10.w, r23.y
        mov r15.z, r21.z
      endif 
      if_nz r9.w
        mov r7.w, r21.x
        mov r23.y, r15.y
        mov r21.z, r15.z
        mov r9.w, l(-1)
        continue 
      endif 
      mov r24.xy, r14.yzyy
      mov r10.w, r4.w
      mov r17.w, r8.w
      mov r23.y, r15.y
      mov r23.x, r23.z
      mov r21.z, r15.z
      mov r22.w, r9.w
      mov r19.w, r18.w
      mov r20.w, |r13.w|
      mov r23.w, l(0)
      loop 
        ige r24.z, r23.w, l(4)
        breakc_nz r24.z
        itof r24.z, r23.w
        add r24.z, r24.z, l(1.000000)
        mul r24.z, r24.z, l(0.250000)
        mad r25.xyz, r20.xyzx, r24.zzzz, r18.xywx
        sample_l_indexable(texture2d)(float,float,float,float) r24.z, r25.xyxx, t28.yzxw, s1, l(0.000000)
        mul r24.w, r25.z, |r24.z|
        lt r24.w, r24.w, l(1.000000)
        if_nz r24.w
          lt r24.w, r14.w, |r24.z|
          add r25.w, -r19.w, r25.z
          add r26.x, -r20.w, |r24.z|
          mul r26.y, r19.w, r25.z
          mul r26.x, r26.y, |r26.x|
          lt r25.w, r26.x, |r25.w|
          and r26.x, r24.w, r25.w
          lt r26.y, r17.w, r25.z
          and r26.z, r24.w, r26.y
          movc r22.xy, r26.zzzz, r21.xyxx, r23.yxyy
          or r25.w, r25.w, r26.y
          and r24.w, r24.w, r25.w
          movc r25.xy, r24.wwww, r25.xyxx, r24.xyxx
          movc r25.w, r26.x, l(1.000000), r10.w
          movc r24.w, r24.w, r25.z, r17.w
          movc r26.xyzw, r26.xxxx, r21.xyzw, r22.xyzw
          mov r10.w, r25.w
          mov r24.xy, r25.xyxx
          mov r17.w, r24.w
          mov r23.xy, r26.yxyy
          mov r21.z, r26.z
          mov r22.w, r26.w
          break 
        endif 
        mov r19.w, r25.z
        mov r20.w, |r24.z|
        iadd r23.w, r23.w, l(1)
      endloop 
      mov r14.yz, r24.xxyx
      mov r4.w, r10.w
      mov r8.w, r17.w
      mov r23.yz, r23.yyxy
      mov r9.w, r22.w
      mov r7.w, r21.x
    endloop 
    rcp r4.z, r8.w
    add r4.z, -r14.w, r4.z
    add r7.w, -r14.w, r15.w
    div r4.z, |r4.z|, |r7.w|
    min r17.x, r4.z, l(1.000000)
    countbits r4.z, r23.y
    utof r4.z, r4.z
    add r4.z, r4.z, l(1.000000)
    iadd r7.w, -r23.z, l(32)
    utof r7.w, r7.w
    div r4.z, r4.z, r7.w
    min r17.y, r4.z, l(1.000000)
  else 
    mov r17.xy, l(1.000000,0,0,0)
    mov r4.w, l(0)
  endif 
  add r4.z, r2.y, l(-0.83333331)
  mul r4.z, r4.z, l(5.99999952)
  max r4.z, r4.z, l(0.000000)
  mad r7.w, r4.z, l(-2.000000), l(3.000000)
  mul r4.z, r4.z, r4.z
  mul r4.z, r4.z, r7.w
  add r1.w, r1.w, l(-60.000000)
  mul_sat r1.w, r1.w, l(0.01666667)
  mad r7.w, r1.w, l(-2.000000), l(3.000000)
  mul r1.w, r1.w, r1.w
  mul r1.w, r1.w, r7.w
  mul r1.w, r1.w, r4.z
  mul r1.w, r17.y, r1.w
  mad r15.yz, r14.yyzy, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
  add r15.yz, |r15.yyzy|, l(0.000000, -0.500000, -0.500000, 0.000000)
  add_sat r15.yz, r15.yyzy, r15.yyzy
  mad r17.yz, r15.yyzy, l(0.000000, -2.000000, -2.000000, 0.000000), l(0.000000, 3.000000, 3.000000, 0.000000)
  mul r15.yz, r15.yyzy, r15.yyzy
  mad r15.yz, -r17.yyzy, r15.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
  mul r4.z, r15.z, r15.y
  mul r1.w, r1.w, r4.z
  mul r4.z, r17.x, l(10.000000)
  min r4.z, r4.z, l(1.000000)
  add r7.w, -r4.w, l(1.000000)
  mul r7.w, r1.w, r7.w
  add r4.z, r4.z, l(-1.000000)
  mad r4.z, r7.w, r4.z, l(1.000000)
  mul r1.w, r4.w, r1.w
  lt r4.w, l(0.000000), r1.w
  if_nz r4.w
    sample_l_indexable(texture2d)(float,float,float,float) r15.yz, r14.yzyy, t22.zxyw, s4, l(0.000000)
    add r17.xy, |r15.yzyy|, l(-0.500000, -0.500000, 0.000000, 0.000000)
    add_sat r17.xy, r17.xyxx, r17.xyxx
    add r17.zw, |r15.yyyz|, |r15.yyyz|
    min r17.zw, r17.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    mul r17.zw, r17.zzzw, l(0.000000, 0.000000, 10.000000, 10.000000)
    mad r17.xy, r17.xyxx, l(30.000000, 30.000000, 0.000000, 0.000000), r17.zwzz
    ge r15.yz, r15.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
    movc r15.yz, r15.yyzy, r17.xxyx, -r17.xxyx
    mad r14.yz, -r15.yyzy, cb1[44].zzwz, r14.yyzy
    sample_l_indexable(texture2d)(float,float,float,float) r14.yzw, r14.yzyy, t21.wxyz, s4, l(0.000000)
    mul r14.yzw, r14.yyzw, cb1[85].xxxx
    mul r14.yzw, r1.wwww, r14.yyzw
  else 
    mov r14.yzw, l(0,0,0,0)
    mov r1.w, l(0)
  endif 
else 
  mov r14.yzw, l(0,0,0,0)
  mov r4.z, l(1.000000)
  mov r1.w, l(0)
endif 
dp3 r4.w, r12.xyzx, cb2[17].xyzx
mov_sat r7.w, r4.w
movc r8.w, r3.z, |r4.w|, r7.w
ge r9.w, l(0.000000), r8.w
if_nz r9.w
  mov r10.w, l(0)
endif 
if_z r9.w
  mul r15.yzw, r11.yyyy, cb2[29].xxyz
  mad r15.yzw, r11.xxxx, cb2[28].xxyz, r15.yyzw
  mad r15.yzw, r11.zzzz, cb2[30].xxyz, r15.yyzw
  add r15.yzw, r15.yyzw, cb2[31].xxyz
  add r9.w, r15.w, -cb2[17].w
  mad r9.w, -r9.w, l(0.00006104), l(1.000000)
  mov_sat r13.w, r9.w
  eq r13.w, r9.w, r13.w
  if_nz r13.w
    mov r13.w, l(0)
    mov r17.x, l(0)
    loop 
      ge r17.y, r13.w, l(3.000000)
      breakc_nz r17.y
      ftou r17.y, r13.w
      add r17.zw, r15.yyyz, -cb2[r17.y + 20].xxxy
      max r17.z, |r17.w|, |r17.z|
      mul r17.x, r17.z, cb2[r17.y + 20].z
      lt r17.y, r17.x, l(1.000000)
      if_nz r17.y
        break 
      endif 
      add r13.w, r13.w, l(1.000000)
      mov r17.x, l(0)
    endloop 
  else 
    mov r13.w, l(3.000000)
    mov r17.x, l(0)
  endif 
  ge r17.y, r13.w, l(3.000000)
  if_nz r17.y
    mul r18.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
    rcp r19.xz, r18.xxxx
    mov r19.y, -r19.z
    mad r18.xyz, r15.yzyy, r19.xyzx, r18.yzyy
    add r19.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r18.xyz, r18.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r18.xyz, r19.xyzx, r18.xyzx
    mul r17.zw, r18.zzzy, cb2[32].xxxx
    round_ni r17.zw, r17.zzzw
    mul r17.w, r17.w, cb2[27].x
    mad r17.z, r17.w, cb2[32].x, r17.z
    ftou r17.z, r17.z
    iadd r17.z, r17.z, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.w, r17.z, l(0), t23.xxxx
    and r18.w, r17.w, l(0x40000000)
    ishl r19.x, r17.w, l(2)
    if_z r18.w
      and r18.w, r17.w, l(0x01ffffff)
      iadd r20.x, r17.z, r18.w
      ushr r17.z, r17.w, l(25)
      utof r17.z, r17.z
      mul r18.xyz, r17.zzzz, r18.xyzx
      frc r18.xyz, r18.xyzx
      mul r18.xyz, r18.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
      ftou r18.xyz, r18.xyzx
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.z, r20.x, l(0), t23.xxxx
      ushr r17.zw, r18.zzzy, l(0, 0, 6, 6)
      and r18.w, r20.z, l(0xc0000000)
      iadd r19.y, r20.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.y, r19.y, l(0), t23.xxxx
      movc r17.w, r17.w, r20.z, r19.y
      ushr r19.y, r17.w, l(13)
      movc r17.z, r17.z, r19.y, r17.w
      and r17.z, r17.z, l(8191)
      iadd r21.x, r17.z, r20.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r21.z, r21.x, l(0), t23.xxxx
      mov r20.y, l(0)
      mov r21.y, l(1)
      movc r19.yzw, r18.wwww, r20.xxyz, r21.xxyz
      movc r21.yz, r18.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r17.zw, r18.zzzy, r21.yyyy
      and r17.zw, r17.zzzw, l(0, 0, 1, 1)
      and r20.w, r19.w, l(0xc0000000)
      iadd r21.y, r19.y, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r21.y, r21.y, l(0), t23.xxxx
      movc r17.w, r17.w, r19.w, r21.y
      ushr r21.y, r17.w, l(13)
      movc r17.z, r17.z, r21.y, r17.w
      and r17.z, r17.z, l(8191)
      iadd r21.x, r17.z, r19.y
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r21.w, r21.x, l(0), t23.xxxx
      movc r19.yzw, r20.wwww, r19.yyzw, r21.xxzw
      movc r19.yzw, r18.wwww, r20.xxyz, r19.yyzw
      and r17.z, r19.w, l(0xc0000000)
      if_z r17.z
        iadd r17.z, -r19.z, l(6)
        ushr r17.zw, r18.zzzy, r17.zzzz
        or r18.w, r19.w, l(0x40000000)
        bfi r17.w, l(1), l(1), r17.w, l(0)
        bfi r17.z, l(1), l(0), r17.z, r17.w
        imul null, r17.z, r17.z, l(10)
        ushr r17.z, r18.w, r17.z
        and r17.z, r17.z, l(1023)
        iadd r20.x, r17.z, r19.y
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.w, r20.x, l(0), t23.xxxx
        iadd r20.yz, r19.zzzz, l(0, 1, 2, 0)
        iadd r17.z, -r20.y, l(6)
        ushr r17.zw, r18.zzzy, r17.zzzz
        and r18.w, r20.w, l(0xc0000000)
        or r19.z, r20.w, l(0x40000000)
        bfi r17.w, l(1), l(1), r17.w, l(0)
        bfi r17.z, l(1), l(0), r17.z, r17.w
        imul null, r17.z, r17.z, l(10)
        ushr r17.z, r19.z, r17.z
        and r17.z, r17.z, l(1023)
        iadd r21.x, r17.z, r20.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r21.z, r21.x, l(0), t23.xxxx
        mov r21.y, r20.z
        movc r21.xyz, r18.wwww, r20.xywx, r21.xyzx
        iadd r17.z, -r21.y, l(6)
        ushr r17.zw, r18.zzzy, r17.zzzz
        and r19.z, r21.z, l(0xc0000000)
        or r20.y, r21.z, l(0x40000000)
        bfi r17.w, l(1), l(1), r17.w, l(0)
        bfi r17.z, l(1), l(0), r17.z, r17.w
        imul null, r17.z, r17.z, l(10)
        ushr r17.z, r20.y, r17.z
        and r17.z, r17.z, l(1023)
        iadd r22.x, r17.z, r21.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r22.y, r22.x, l(0), t23.xxxx
        movc r17.zw, r19.zzzz, r21.xxxz, r22.xxxy
        movc r19.yw, r18.wwww, r20.xxxw, r17.zzzw
      endif 
      and r17.z, r19.w, l(0xc0000000)
      if_z r17.z
        ubfe r17.w, l(14), l(15), r19.w
        utof r17.w, r17.w
        mul r17.w, r17.w, cb2[27].w
        mul r17.w, r17.w, l(0.00006104)
        and r20.xy, r19.wwww, l(0x00007fff, 0x20000000, 0, 0)
        utof r18.w, r20.x
        mul r18.w, r18.w, cb2[27].w
        mul r18.w, r18.w, l(0.00003052)
        and r19.z, r18.y, l(3)
        iadd r19.z, r19.z, r19.y
        iadd r19.z, r19.z, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.z, r19.z, l(0), t23.xxxx
        bfi r20.xzw, l(2, 0, 2, 1), l(3, 0, 1, 4), r18.xxyz, l(0, 0, 0, 0)
        ushr r18.x, r19.z, r20.x
        and r18.x, r18.x, l(255)
        utof r18.x, r18.x
        mul r18.x, r18.w, r18.x
        mad r18.x, r18.x, l(0.00392157), r17.w
        iadd r18.y, r20.z, l(1)
        ubfe r18.z, l(1), l(1), r18.z
        iadd r18.y, r18.z, r18.y
        iadd r18.y, r18.y, r19.y
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.y, r18.y, l(0), t23.xxxx
        ushr r18.y, r18.y, r20.w
        and r18.y, r18.y, l(0x0000ffff)
        utof r18.y, r18.y
        mul r18.y, r18.w, r18.y
        mad r17.w, r18.y, l(0.00001526), r17.w
        movc r19.x, r20.y, r18.x, r17.w
      else 
        and r17.w, r19.w, l(0x80000000)
        iadd r18.x, r19.y, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.x, r18.x, l(0), t23.xxxx
        movc r17.w, r17.w, r18.x, l(0)
        ishl r18.x, r19.w, l(2)
        ushr r18.y, r17.w, l(16)
        f16tof32 r18.y, r18.y
        and r17.w, r17.w, l(0x0000ffff)
        f16tof32 r17.w, r17.w
        mad r18.x, r15.y, r18.y, r18.x
        mad r17.w, r15.z, r17.w, r18.x
        movc r19.x, r17.z, r17.w, r19.x
      endif 
    endif 
    mad r15.w, -cb2[27].z, l(2.000000), r15.w
    lt r15.w, r19.x, r15.w
    movc r10.w, r15.w, l(0), l(1.000000)
  endif 
  if_z r17.y
    if_z cb2[58].y
      ftou r15.w, r13.w
      add r17.yz, r15.yyzy, -cb2[r15.w + 20].xxyx
      mul r17.yz, r17.yyzy, cb2[r15.w + 20].zzzz
      mad r18.xy, r17.yzyy, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r15.w, cb2[26].y
      add r18.z, r13.w, r15.w
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r15.w, r18.xyzx, t13.xxxx, s13, r9.w
      sample_l_indexable(texture2darray)(float,float,float,float) r17.y, r18.xyzx, t31.yxzw, s0, l(0.000000)
      add r15.w, r15.w, r17.y
      add_sat r15.w, r15.w, l(-1.000000)
      mul r17.y, r15.w, r15.w
      mul r10.w, r15.w, r17.y
    endif 
    if_nz cb2[58].y
      mov r18.x, -r4.x
      ftou r15.w, r13.w
      add r13.w, r13.w, l(1.000000)
      min r13.w, r13.w, l(2.000000)
      ftou r13.w, r13.w
      add r17.x, -r17.x, l(1.000000)
      mul r17.x, r17.x, l(28.000000)
      ftou r17.x, r17.x
      add r17.yz, r15.yyzy, -cb2[r15.w + 20].xxyx
      mul r17.yz, r17.yyzy, cb2[r15.w + 20].zzzz
      mad r17.yz, r17.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      add r15.yz, r15.yyzy, -cb2[r13.w + 20].xxyx
      mul r15.yz, r15.yyzy, cb2[r13.w + 20].zzzz
      mad r15.yz, r15.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      mov r18.y, r13.x
      mov r18.z, r4.x
      mov r17.w, l(0)
      mov r18.w, l(0)
      loop 
        uge r19.x, r18.w, l(8)
        breakc_nz r19.x
        ult r19.x, r17.x, r18.w
        movc r19.yz, r19.xxxx, r15.yyzy, r17.yyzy
        movc r19.w, r19.x, cb2[r13.w + 20].w, cb2[r15.w + 20].w
        movc r19.x, r19.x, r13.w, r15.w
        dp2 r20.x, icb[r18.w + 0].yxyy, r18.xyxx
        dp2 r20.y, icb[r18.w + 0].yxyy, r18.yzyy
        mad r20.xy, r20.xyxx, r19.wwww, r19.yzyy
        iadd r19.x, r19.x, cb2[26].y
        utof r20.z, r19.x
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.x, r20.xyzx, t13.xxxx, s13, r9.w
        sample_l_indexable(texture2darray)(float,float,float,float) r19.y, r20.xyzx, t31.yxzw, s0, l(0.000000)
        add r19.x, r19.y, r19.x
        add_sat r19.x, r19.x, l(-1.000000)
        mad r17.w, r19.x, l(0.125000), r17.w
        iadd r18.w, r18.w, l(1)
      endloop 
      mul r9.w, r17.w, r17.w
      mul r10.w, r17.w, r9.w
    endif 
  endif 
endif 
add r9.w, -r2.y, l(1.000000)
mul r13.w, r9.w, l(5.000000)
mad r15.y, r9.w, l(5.000000), l(-2.500000)
mul r15.y, r15.y, l(0.400000)
max r15.y, r15.y, l(0.000000)
mad r15.zw, -r9.wwww, l(0.000000, 0.000000, 10.000000, 5.000000), l(0.000000, 0.000000, 6.857410, 7.085000)
exp r15.z, r15.z
mul r17.x, r9.w, r13.w
mad r15.w, -r17.x, l(2.015905), r15.w
exp r15.w, r15.w
mul r15.zw, r2.xxxx, r15.zzzw
mul r15.yzw, r15.yyzw, l(0.000000, 100.000000, 9.136810, 9.708090)
max r15.z, r15.w, r15.z
max r15.z, r15.z, l(1.268160)
if_nz cb2[54].x
  ftou r15.w, cb1[44].x
  iadd r15.w, r15.w, l(7)
  ushr r15.w, r15.w, l(3)
  imad r15.w, r0.z, r15.w, r0.y
  bfi r15.w, l(27), l(5), r15.w, l(16)
  mov r17.xyzw, l(0,0,0,0)
  mov r18.xyzw, l(0,0,0,0)
  mov r19.xyzw, l(0,0,0,0)
  mov r20.xyzw, l(0,0,0,0)
  mov r21.xyzw, l(0,0,0,0)
  mov r22.xyzw, l(0,0,0,0)
  mov r23.xyzw, l(0,0,0,0)
  mov r24.xyzw, l(0,0,0,0)
  mov r25.xyzw, l(0,0,0,0)
  mov r26.xyzw, l(0,0,0,0)
  mov r27.xyzw, l(0,0,0,0)
  mov r28.xyzw, l(0,0,0,0)
  mov r30.z, l(0)
  mov r31.z, l(0)
  mov r29.xyzw, l(0,0,0,0)
  loop 
    uge r30.w, r29.w, cb2[0].y
    breakc_nz r30.w
    ushr r30.w, r29.w, l(5)
    iadd r30.w, r15.w, r30.w
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r30.w, r30.w, l(0), t26.xxxx
    mov r32.xyzw, r17.yxzw
    mov r33.xyzw, r18.xyzw
    mov r34.xyzw, r19.yzwx
    mov r35.xyzw, r20.xyzw
    mov r36.xyzw, r21.xyzw
    mov r37.xyzw, r22.zwxy
    mov r38.xyzw, r23.zwxy
    mov r39.xyzw, r25.zwxy
    mov r40.xyzw, r26.zwxy
    mov r41.xyz, r28.xyzx
    mov r31.w, r28.w
    mov r41.w, r30.z
    mov r42.z, r31.z
    mov r42.xyw, r29.yxyz
    mov r43.xyzw, r24.zwxy
    mov r44.xyzw, r27.zwxy
    mov r45.x, r30.w
    loop 
      breakc_z r45.x
      firstbit_lo r45.y, r45.x
      ishl r45.z, l(1), r45.y
      not r45.z, r45.z
      and r45.x, r45.z, r45.x
      iadd r45.y, r29.w, r45.y
      imul null, r45.y, r45.y, l(14)
      add r46.xyz, r11.xyzx, -cb10[r45.y + 0].xyzx
      dp3 r45.z, r46.xyzx, r46.xyzx
      sqrt r45.z, r45.z
      ge r45.z, cb2[54].y, r45.z
      if_nz r45.z
        mov r32.yzw, cb10[r45.y + 1].xxyz
        mov r32.x, cb10[r45.y + 0].w
        mov r33.yzw, cb10[r45.y + 2].xxyz
        mov r33.x, cb10[r45.y + 1].w
        mov r34.xyz, cb10[r45.y + 3].xyzx
        mov r34.w, cb10[r45.y + 4].z
        mov r35.yz, cb10[r45.y + 4].xxyx
        mov r35.x, cb10[r45.y + 3].w
        mov r35.w, cb10[r45.y + 6].x
        mov r36.yzw, cb10[r45.y + 5].xxyz
        mov r36.x, cb10[r45.y + 4].w
        mov r37.yz, cb10[r45.y + 7].yywy
        mov r37.x, cb10[r45.y + 6].y
        mov r37.w, cb10[r45.y + 8].x
        mov r38.xyz, cb10[r45.y + 8].yzwy
        mov r38.w, cb10[r45.y + 9].x
        mov r39.xyz, cb10[r45.y + 10].yzwy
        mov r39.w, cb10[r45.y + 11].x
        mov r40.xyz, cb10[r45.y + 11].yzwy
        mov r40.w, cb10[r45.y + 12].x
        mov r41.xyz, cb10[r45.y + 0].xyzx
        mov r45.zw, cb10[r45.y + 13].yyyz
        mov r31.w, l(-1)
        mov r41.w, cb10[r45.y + 2].w
        mov r42.z, cb10[r45.y + 5].w
        mov r42.w, cb10[r45.y + 7].z
        mov r43.xyz, cb10[r45.y + 9].yzwy
        mov r43.w, cb10[r45.y + 10].x
        mov r44.xyz, cb10[r45.y + 12].yzwy
        mov r44.w, cb10[r45.y + 13].x
        mov r42.xy, r45.zwzz
        break 
      endif 
    endloop 
    if_nz r31.w
      mov r17.xyzw, r32.yxzw
      mov r18.xyzw, r33.xyzw
      mov r19.xyzw, r34.wxyz
      mov r20.xyzw, r35.xyzw
      mov r21.xyzw, r36.xyzw
      mov r22.xyzw, r37.zwxy
      mov r23.xyzw, r38.zwxy
      mov r24.xyzw, r43.zwxy
      mov r25.xyzw, r39.zwxy
      mov r26.xyzw, r40.zwxy
      mov r27.xyzw, r44.zwxy
      mov r28.xyz, r41.xyzx
      mov r28.w, l(-1)
      mov r30.z, r41.w
      mov r31.z, r42.z
      mov r29.xyz, r42.yxwy
      break 
    endif 
    iadd r29.w, r29.w, l(32)
    mov r17.xyzw, r32.yxzw
    mov r18.xyzw, r33.xyzw
    mov r19.xyzw, r34.wxyz
    mov r20.xyzw, r35.xyzw
    mov r21.xyzw, r36.xyzw
    mov r22.xyzw, r37.zwxy
    mov r23.xyzw, r38.zwxy
    mov r25.xyzw, r39.zwxy
    mov r26.xyzw, r40.zwxy
    mov r28.xyz, r41.xyzx
    mov r28.w, r31.w
    mov r30.z, r41.w
    mov r31.z, r42.z
    mov r29.xyz, r42.yxwy
    mov r24.xyzw, r43.zwxy
    mov r27.xyzw, r44.zwxy
  endloop 
  mov r32.xy, r17.ywyy
  mov r30.x, r17.z
  mov r17.yz, r18.xxwx
  mov r30.y, r18.y
  mov r32.z, r18.z
  mov r18.xyz, r19.yzwy
  mov r19.yz, r21.xxyx
  mov r31.xy, r21.zwzz
  mov r21.xy, r22.zwzz
  mov r22.z, r23.z
  mov r23.z, r24.z
  mov r24.z, r25.z
  mov r25.z, r26.z
  mov r26.z, r27.z
  mov r27.z, r29.y
else 
  mov r28.w, l(0)
endif 
if_nz r28.w
  if_nz r6.w
    add r33.yzw, r28.xxyz, cb1[24].xxyz
    mov r33.x, l(16)
    store_structured u2.xyzw, cb2[52].x, l(880), r33.xyzw
  endif 
  add r28.xyz, r11.xyzx, -r28.xyzx
  and r15.w, r29.z, l(0x0000ffff)
  ubfe r17.w, l(6), l(25), r29.z
  imul null, r18.w, r15.w, l(6)
  dp3 r19.w, cb11[r18.w + 0].xyzx, r28.xyzx
  add_sat r19.w, r19.w, cb11[r18.w + 0].w
  dp3 r21.z, cb11[r18.w + 1].xyzx, r28.xyzx
  add_sat r21.z, r21.z, cb11[r18.w + 1].w
  mul r19.w, r19.w, r21.z
  dp3 r21.z, cb11[r18.w + 2].xyzx, r28.xyzx
  add_sat r21.z, r21.z, cb11[r18.w + 2].w
  mul r19.w, r19.w, r21.z
  dp3 r21.z, cb11[r18.w + 3].xyzx, r28.xyzx
  add_sat r21.z, r21.z, cb11[r18.w + 3].w
  mul r19.w, r19.w, r21.z
  dp3 r21.z, cb11[r18.w + 4].xyzx, r28.xyzx
  add_sat r21.z, r21.z, cb11[r18.w + 4].w
  mul r19.w, r19.w, r21.z
  dp3 r21.z, cb11[r18.w + 5].xyzx, r28.xyzx
  add_sat r18.w, r21.z, cb11[r18.w + 5].w
  mul r33.x, r18.w, r19.w
  and r18.w, r20.w, l(1)
  mov r33.yz, l(0,0,1.000000,0)
  movc r21.zw, r18.wwww, r33.xxxy, r33.zzzx
  mov r33.x, l(1.000000)
  mov r18.w, r20.w
  mov r34.xy, r21.zwzz
  mov r19.w, l(1)
  loop 
    ige r22.w, r19.w, r17.w
    breakc_nz r22.w
    iadd r22.w, r15.w, r19.w
    imul null, r22.w, r22.w, l(6)
    dp3 r29.y, cb11[r22.w + 0].xyzx, r28.xyzx
    add_sat r29.y, r29.y, cb11[r22.w + 0].w
    mul r29.y, r29.y, r34.x
    dp3 r29.w, cb11[r22.w + 1].xyzx, r28.xyzx
    add_sat r29.w, r29.w, cb11[r22.w + 1].w
    mul r29.y, r29.w, r29.y
    dp3 r29.w, cb11[r22.w + 2].xyzx, r28.xyzx
    add_sat r29.w, r29.w, cb11[r22.w + 2].w
    mul r29.y, r29.w, r29.y
    dp3 r29.w, cb11[r22.w + 3].xyzx, r28.xyzx
    add_sat r29.w, r29.w, cb11[r22.w + 3].w
    mul r29.y, r29.w, r29.y
    dp3 r29.w, cb11[r22.w + 4].xyzx, r28.xyzx
    add_sat r29.w, r29.w, cb11[r22.w + 4].w
    mul r29.y, r29.w, r29.y
    dp3 r29.w, cb11[r22.w + 5].xyzx, r28.xyzx
    add_sat r22.w, r29.w, cb11[r22.w + 5].w
    mul r34.x, r22.w, r29.y
    ushr r29.w, r18.w, l(2)
    ubfe r30.w, l(1), l(2), r18.w
    and r31.w, r29.w, l(2)
    max r32.w, r34.x, r34.y
    mad r22.w, -r29.y, r22.w, l(1.000000)
    mul r22.w, r22.w, r34.y
    movc r33.y, r31.w, r22.w, r32.w
    movc r34.xy, r30.wwww, r34.xyxx, r33.xyxx
    iadd r19.w, r19.w, l(1)
    mov r18.w, r29.w
  endloop 
  mov_sat r34.y, r34.y
  mul r33.w, r21.x, r34.y
  lt r15.w, l(0.000000), r33.w
  if_nz r15.w
    if_nz r6.w
      ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r15.w, cb2[52].x, l(880), u2.xxxx
      or r15.w, r15.w, l(32)
      store_structured u2.x, cb2[52].x, l(880), r15.w
      store_structured u2.x, cb2[52].x, l(896), r33.w
    endif 
    mul r15.w, r21.y, r33.w
    dp3 r17.w, r16.xyzx, r22.xyzx
    dp3 r18.w, r28.xyzx, r22.xyzx
    add r18.w, -r23.w, r18.w
    ge r19.w, r18.w, l(0.000000)
    max r18.w, r15.y, |r18.w|
    movc r18.w, r19.w, r18.w, -r18.w
    max r17.w, -r17.w, l(0.00000010)
    div r17.w, r18.w, r17.w
    min r17.w, |r17.w|, l(131072.000000)
    dp3 r18.w, r16.xyzx, r23.xyzx
    dp3 r19.w, r28.xyzx, r23.xyzx
    add r19.w, -r24.w, r19.w
    ge r20.w, r19.w, l(0.000000)
    max r19.w, r15.y, |r19.w|
    movc r19.w, r20.w, r19.w, -r19.w
    max r18.w, -r18.w, l(0.00000010)
    div r18.w, r19.w, r18.w
    min r17.w, r17.w, |r18.w|
    dp3 r18.w, r16.xyzx, r24.xyzx
    dp3 r19.w, r28.xyzx, r24.xyzx
    add r19.w, -r25.w, r19.w
    ge r20.w, r19.w, l(0.000000)
    max r19.w, r15.y, |r19.w|
    movc r19.w, r20.w, r19.w, -r19.w
    max r18.w, -r18.w, l(0.00000010)
    div r18.w, r19.w, r18.w
    min r17.w, r17.w, |r18.w|
    dp3 r18.w, r16.xyzx, r25.xyzx
    dp3 r19.w, r28.xyzx, r25.xyzx
    add r19.w, -r26.w, r19.w
    ge r20.w, r19.w, l(0.000000)
    max r19.w, r15.y, |r19.w|
    movc r19.w, r20.w, r19.w, -r19.w
    max r18.w, -r18.w, l(0.00000010)
    div r18.w, r19.w, r18.w
    min r17.w, r17.w, |r18.w|
    dp3 r18.w, r16.xyzx, r26.xyzx
    dp3 r19.w, r28.xyzx, r26.xyzx
    add r19.w, -r27.w, r19.w
    ge r20.w, r19.w, l(0.000000)
    max r19.w, r15.y, |r19.w|
    movc r19.w, r20.w, r19.w, -r19.w
    max r18.w, -r18.w, l(0.00000010)
    div r18.w, r19.w, r18.w
    min r17.w, r17.w, |r18.w|
    dp3 r18.w, r16.xyzx, r27.xyzx
    dp3 r19.w, r28.xyzx, r27.xyzx
    add r19.w, -r29.x, r19.w
    ge r20.w, r19.w, l(0.000000)
    max r19.w, r15.y, |r19.w|
    movc r19.w, r20.w, r19.w, -r19.w
    max r18.w, -r18.w, l(0.00000010)
    div r18.w, r19.w, r18.w
    min r17.w, r17.w, |r18.w|
    add r20.xyz, r20.xyzx, r28.xyzx
    mad r20.xyz, r16.xyzx, r17.wwww, r20.xyzx
    dp3 r18.w, r20.xyzx, r20.xyzx
    sqrt r18.w, r18.w
    div r17.w, r17.w, r18.w
    add r17.w, r17.w, r17.w
    sqrt r17.w, r17.w
    mad r17.w, r9.w, l(5.000000), r17.w
    add r17.w, r17.w, l(-0.844800)
    dp3 r21.x, r20.xyzx, r32.xyzx
    dp3 r21.y, r20.xyzx, r17.xyzx
    dp3 r21.z, r20.xyzx, r30.xyzx
    ubfe r18.w, l(9), l(16), r29.z
    utof r21.w, r18.w
    sample_l_indexable(texturecubearray)(float,float,float,float) r20.xyz, r21.xyzw, t8.xyzw, s2, r17.w
    and r22.xyz, r20.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
    ieq r22.xyz, r22.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
    or r17.w, r22.y, r22.x
    or r17.w, r22.z, r17.w
    movc r20.xyz, r17.wwww, l(1.000000,1.000000,0,0), r20.xyzx
    dp3 r22.x, r28.xyzx, r32.xyzx
    dp3 r22.y, r28.xyzx, r17.xyzx
    dp3 r22.z, r28.xyzx, r30.xyzx
    mad_sat r18.xyz, r22.xyzx, r18.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    mad r18.xyz, r18.xyzx, r19.xyzx, r31.xyzx
    dp3 r21.x, r12.xyzx, r32.xyzx
    dp3 r21.y, r12.xyzx, r17.xyzx
    dp3 r21.z, r12.xyzx, r30.xyzx
    lt r17.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r21.xyzx
    movc r19.z, r17.x, l(0), l(0.500000)
    mov r19.xy, l(0,0,0,0)
    add r19.xyz, r18.xyzx, r19.xyzx
    sample_l_indexable(texture3d)(float,float,float,float) r19.xyz, r19.xyzx, t17.xyzw, s4, l(0.000000)
    mul r22.xyz, r21.xyzx, r21.xyzx
    mul r22.xyz, r15.wwww, r22.xyzx
    movc r23.z, r17.y, l(0), l(0.500000)
    mov r23.xy, l(0,0,0,0)
    add r17.xyw, r18.xyxz, r23.xyxz
    sample_l_indexable(texture3d)(float,float,float,float) r17.xyw, r17.xywx, t18.xywz, s4, l(0.000000)
    mul r17.xyw, r22.yyyy, r17.xyxw
    mad r17.xyw, r19.xyxz, r22.xxxx, r17.xyxw
    movc r19.z, r17.z, l(0), l(0.500000)
    mov r19.xy, l(0,0,0,0)
    add r18.xyz, r18.xyzx, r19.xyzx
    sample_l_indexable(texture3d)(float,float,float,float) r18.xyz, r18.xyzx, t19.xyzw, s4, l(0.000000)
    mad r17.xyz, r18.xyzx, r22.zzzz, r17.xywx
    sample_l_indexable(texturecubearray)(float,float,float,float) r18.xyz, r21.xyzw, t8.xyzw, s2, l(6.000000)
    and r19.xyz, r18.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
    ieq r19.xyz, r19.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
    or r17.w, r19.y, r19.x
    or r17.w, r19.z, r17.w
    movc r18.xyz, r17.wwww, l(1.000000,1.000000,0,0), r18.xyzx
    mul r17.xyz, r17.xyzx, r18.xyzx
    dp3 r17.x, r17.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
    mul r17.y, r15.z, r17.x
    mul r18.xyz, r15.wwww, r20.xyzx
    dp3 r15.w, r18.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
    mad r15.w, r15.z, r17.x, r15.w
    div r15.w, r17.y, r15.w
    mul r33.xyz, r15.wwww, r18.xyzx
    mov r15.w, l(257)
  else 
    mov r33.xyzw, l(0,0,0,0)
    mov r15.w, l(1)
  endif 
  mov r17.x, l(-1)
else 
  mov r33.xyzw, l(0,0,0,0)
  mov r15.w, l(0)
endif 
and r17.x, r17.x, r28.w
if_z r17.x
  iadd r17.x, cb2[0].y, -cb2[58].x
  ftou r17.y, cb1[44].x
  iadd r17.y, r17.y, l(7)
  ushr r17.y, r17.y, l(3)
  imad r17.y, r0.z, r17.y, r0.y
  bfi r17.y, l(27), l(5), r17.y, l(16)
  and r17.z, r17.x, l(-32)
  iadd r17.w, -r17.z, r17.x
  and r18.x, cb2[0].y, l(-32)
  iadd r18.y, -r18.x, cb2[0].y
  mov r19.x, l(16)
  mov r20.yz, l(0,0,1.000000,0)
  mov r21.xy, l(0,0,0,0)
  mov r22.xz, l(1.000000,0,1.000000,0)
  mov r23.xy, l(0,0,0,0)
  mov r24.xy, l(0,0,0,0)
  mov r25.xyz, l(0,0,0,0)
  mov r25.w, r33.x
  mov r26.xyz, r33.yzwy
  mov r26.w, r15.w
  mov r18.z, r17.z
  loop 
    uge r18.w, r18.z, cb2[0].y
    breakc_nz r18.w
    ushr r18.w, r18.z, l(5)
    iadd r18.w, r17.y, r18.w
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.w, r18.w, l(0), t26.xxxx
    ieq r20.w, r17.z, r18.z
    bfi r21.w, r17.w, l(0), l(0), r18.w
    movc r18.w, r20.w, r21.w, r18.w
    ieq r20.w, r18.x, r18.z
    ubfe r21.w, r18.y, l(0), r18.w
    movc r18.w, r20.w, r21.w, r18.w
    mov r27.xyzw, r25.xyzw
    mov r28.xyzw, r26.xyzw
    mov r20.w, r18.w
    loop 
      breakc_z r20.w
      firstbit_lo r21.w, r20.w
      ishl r23.w, l(1), r21.w
      not r23.w, r23.w
      and r20.w, r20.w, r23.w
      iadd r21.w, r18.z, r21.w
      imul null, r21.w, r21.w, l(14)
      and r23.w, r28.w, l(255)
      ult r24.w, r23.w, l(32)
      and r24.w, r6.w, r24.w
      if_nz r24.w
        imad r23.w, r23.w, l(20), l(880)
        add r19.yzw, cb1[24].xxyz, cb10[r21.w + 0].xxyz
        store_structured u2.xyzw, cb2[52].x, r23.w, r19.xyzw
      endif 
      iadd r29.w, r28.w, l(1)
      add r19.yzw, r11.xxyz, -cb10[r21.w + 0].xxyz
      and r23.w, l(0x0000ffff), cb10[r21.w + 7].z
      ubfe r24.w, l(6), l(25), cb10[r21.w + 7].z
      imul null, r30.x, r23.w, l(6)
      dp3 r30.y, cb11[r30.x + 0].xyzx, r19.yzwy
      add_sat r30.y, r30.y, cb11[r30.x + 0].w
      dp3 r30.z, cb11[r30.x + 1].xyzx, r19.yzwy
      add_sat r30.z, r30.z, cb11[r30.x + 1].w
      mul r30.y, r30.z, r30.y
      dp3 r30.z, cb11[r30.x + 2].xyzx, r19.yzwy
      add_sat r30.z, r30.z, cb11[r30.x + 2].w
      mul r30.y, r30.z, r30.y
      dp3 r30.z, cb11[r30.x + 3].xyzx, r19.yzwy
      add_sat r30.z, r30.z, cb11[r30.x + 3].w
      mul r30.y, r30.z, r30.y
      dp3 r30.z, cb11[r30.x + 4].xyzx, r19.yzwy
      add_sat r30.z, r30.z, cb11[r30.x + 4].w
      mul r30.y, r30.z, r30.y
      dp3 r30.z, cb11[r30.x + 5].xyzx, r19.yzwy
      add_sat r30.x, r30.z, cb11[r30.x + 5].w
      mul r20.x, r30.x, r30.y
      and r30.x, l(1), cb10[r21.w + 6].x
      movc r30.xy, r30.xxxx, r20.xyxx, r20.zxzz
      mov r20.x, cb10[r21.w + 6].x
      mov r31.xy, r30.xyxx
      mov r30.z, l(1)
      loop 
        ige r30.w, r30.z, r24.w
        breakc_nz r30.w
        iadd r30.w, r23.w, r30.z
        imul null, r30.w, r30.w, l(6)
        dp3 r31.z, cb11[r30.w + 0].xyzx, r19.yzwy
        add_sat r31.z, r31.z, cb11[r30.w + 0].w
        mul r31.z, r31.z, r31.x
        dp3 r31.w, cb11[r30.w + 1].xyzx, r19.yzwy
        add_sat r31.w, r31.w, cb11[r30.w + 1].w
        mul r31.z, r31.w, r31.z
        dp3 r31.w, cb11[r30.w + 2].xyzx, r19.yzwy
        add_sat r31.w, r31.w, cb11[r30.w + 2].w
        mul r31.z, r31.w, r31.z
        dp3 r31.w, cb11[r30.w + 3].xyzx, r19.yzwy
        add_sat r31.w, r31.w, cb11[r30.w + 3].w
        mul r31.z, r31.w, r31.z
        dp3 r31.w, cb11[r30.w + 4].xyzx, r19.yzwy
        add_sat r31.w, r31.w, cb11[r30.w + 4].w
        mul r31.z, r31.w, r31.z
        dp3 r31.w, cb11[r30.w + 5].xyzx, r19.yzwy
        add_sat r30.w, r31.w, cb11[r30.w + 5].w
        mul r31.x, r30.w, r31.z
        ushr r31.w, r20.x, l(2)
        ubfe r32.x, l(1), l(2), r20.x
        and r32.y, r31.w, l(2)
        max r32.z, r31.x, r31.y
        mad r30.w, -r31.z, r30.w, l(1.000000)
        mul r30.w, r30.w, r31.y
        movc r22.y, r32.y, r30.w, r32.z
        movc r31.xy, r32.xxxx, r31.xyxx, r22.xyxx
        iadd r30.z, r30.z, l(1)
        mov r20.x, r31.w
      endloop 
      mov_sat r31.y, r31.y
      mul r20.x, r31.y, cb10[r21.w + 6].y
      lt r22.y, l(0.000000), r20.x
      if_nz r22.y
        and r22.y, r29.w, l(255)
        iadd r23.w, r22.y, l(-1)
        ult r23.w, r23.w, l(32)
        and r23.w, r6.w, r23.w
        if_nz r23.w
          imad r30.xy, r22.yyyy, l(20, 20, 0, 0), l(860, 876, 0, 0)
          ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r22.y, cb2[52].x, r30.x, u2.xxxx
          or r22.y, r22.y, l(32)
          store_structured u2.x, cb2[52].x, r30.x, r22.y
          store_structured u2.x, cb2[52].x, r30.y, r20.x
        endif 
        iadd r28.w, r28.w, l(257)
        mad r28.z, r31.y, cb10[r21.w + 6].y, r28.z
        mul r20.x, r20.x, cb10[r21.w + 7].y
        mov r30.x, cb10[r21.w + 7].w
        mov r30.yz, cb10[r21.w + 8].xxyx
        dp3 r22.y, r16.xyzx, r30.xyzx
        dp3 r23.w, r19.yzwy, r30.xyzx
        add r23.w, r23.w, -cb10[r21.w + 8].z
        ge r24.w, r23.w, l(0.000000)
        max r23.w, r15.y, |r23.w|
        movc r23.w, r24.w, r23.w, -r23.w
        max r22.y, -r22.y, l(0.00000010)
        div r22.y, r23.w, r22.y
        min r22.y, |r22.y|, l(131072.000000)
        mov r30.x, cb10[r21.w + 8].w
        mov r30.yz, cb10[r21.w + 9].xxyx
        dp3 r23.w, r16.xyzx, r30.xyzx
        dp3 r24.w, r19.yzwy, r30.xyzx
        add r24.w, r24.w, -cb10[r21.w + 9].z
        ge r30.x, r24.w, l(0.000000)
        max r24.w, r15.y, |r24.w|
        movc r24.w, r30.x, r24.w, -r24.w
        max r23.w, -r23.w, l(0.00000010)
        div r23.w, r24.w, r23.w
        min r22.y, r22.y, |r23.w|
        mov r30.x, cb10[r21.w + 9].w
        mov r30.yz, cb10[r21.w + 10].xxyx
        dp3 r23.w, r16.xyzx, r30.xyzx
        dp3 r24.w, r19.yzwy, r30.xyzx
        add r24.w, r24.w, -cb10[r21.w + 10].z
        ge r30.x, r24.w, l(0.000000)
        max r24.w, r15.y, |r24.w|
        movc r24.w, r30.x, r24.w, -r24.w
        max r23.w, -r23.w, l(0.00000010)
        div r23.w, r24.w, r23.w
        min r22.y, r22.y, |r23.w|
        mov r30.x, cb10[r21.w + 10].w
        mov r30.yz, cb10[r21.w + 11].xxyx
        dp3 r23.w, r16.xyzx, r30.xyzx
        dp3 r24.w, r19.yzwy, r30.xyzx
        add r24.w, r24.w, -cb10[r21.w + 11].z
        ge r30.x, r24.w, l(0.000000)
        max r24.w, r15.y, |r24.w|
        movc r24.w, r30.x, r24.w, -r24.w
        max r23.w, -r23.w, l(0.00000010)
        div r23.w, r24.w, r23.w
        min r22.y, r22.y, |r23.w|
        mov r30.x, cb10[r21.w + 11].w
        mov r30.yz, cb10[r21.w + 12].xxyx
        dp3 r23.w, r16.xyzx, r30.xyzx
        dp3 r24.w, r19.yzwy, r30.xyzx
        add r24.w, r24.w, -cb10[r21.w + 12].z
        ge r30.x, r24.w, l(0.000000)
        max r24.w, r15.y, |r24.w|
        movc r24.w, r30.x, r24.w, -r24.w
        max r23.w, -r23.w, l(0.00000010)
        div r23.w, r24.w, r23.w
        min r22.y, r22.y, |r23.w|
        mov r30.x, cb10[r21.w + 12].w
        mov r30.yz, cb10[r21.w + 13].xxyx
        dp3 r23.w, r16.xyzx, r30.xyzx
        dp3 r24.w, r19.yzwy, r30.xyzx
        add r24.w, r24.w, -cb10[r21.w + 13].z
        ge r30.x, r24.w, l(0.000000)
        max r24.w, r15.y, |r24.w|
        movc r24.w, r30.x, r24.w, -r24.w
        max r23.w, -r23.w, l(0.00000010)
        div r23.w, r24.w, r23.w
        min r22.y, r22.y, |r23.w|
        add r30.x, r19.y, cb10[r21.w + 3].w
        add r30.yz, r19.zzwz, cb10[r21.w + 4].xxyx
        mad r30.xyz, r16.xyzx, r22.yyyy, r30.xyzx
        dp3 r23.w, r30.xyzx, r30.xyzx
        sqrt r23.w, r23.w
        div r22.y, r22.y, r23.w
        add r22.y, r22.y, r22.y
        sqrt r22.y, r22.y
        mad r22.y, r9.w, l(5.000000), r22.y
        add r22.y, r22.y, l(-0.844800)
        mov r32.x, cb10[r21.w + 0].w
        mov r32.y, cb10[r21.w + 1].z
        mov r32.z, cb10[r21.w + 2].y
        dp3 r34.x, r30.xyzx, r32.xyzx
        mov r35.xy, cb10[r21.w + 1].xwxx
        mov r35.z, cb10[r21.w + 2].z
        dp3 r34.y, r30.xyzx, r35.xyzx
        mov r36.x, cb10[r21.w + 1].y
        mov r36.yz, cb10[r21.w + 2].xxwx
        dp3 r34.z, r30.xyzx, r36.xyzx
        ubfe r23.w, l(9), l(16), cb10[r21.w + 7].z
        utof r34.w, r23.w
        sample_l_indexable(texturecubearray)(float,float,float,float) r30.xyz, r34.xyzw, t8.xyzw, s2, r22.y
        and r31.xzw, r30.xxyz, l(0x7fffffff, 0, 0x7fffffff, 0x7fffffff)
        ieq r31.xzw, r31.xxzw, l(0x7f800000, 0, 0x7f800000, 0x7f800000)
        or r22.y, r31.z, r31.x
        or r22.y, r31.w, r22.y
        movc r30.xyz, r22.yyyy, l(1.000000,1.000000,0,0), r30.xyzx
        dp3 r37.x, r19.yzwy, r32.xyzx
        dp3 r37.y, r19.yzwy, r35.xyzx
        dp3 r37.z, r19.yzwy, r36.xyzx
        mad_sat r19.yzw, r37.xxyz, cb10[r21.w + 3].xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
        mul r37.xy, r19.yzyy, cb10[r21.w + 4].zwzz
        mul r37.z, r19.w, cb10[r21.w + 5].x
        add r19.yzw, r37.xxyz, cb10[r21.w + 5].yyzw
        dp3 r34.x, r12.xyzx, r32.xyzx
        dp3 r34.y, r12.xyzx, r35.xyzx
        dp3 r34.z, r12.xyzx, r36.xyzx
        lt r31.xzw, l(0.000000, 0.000000, 0.000000, 0.000000), r34.xxyz
        movc r21.z, r31.x, l(0), l(0.500000)
        add r32.xyz, r19.yzwy, r21.xyzx
        sample_l_indexable(texture3d)(float,float,float,float) r32.xyz, r32.xyzx, t17.xyzw, s4, l(0.000000)
        mul r35.xyz, r34.xyzx, r34.xyzx
        mul r35.xyz, r20.xxxx, r35.xyzx
        movc r23.z, r31.z, l(0), l(0.500000)
        add r36.xyz, r19.yzwy, r23.xyzx
        sample_l_indexable(texture3d)(float,float,float,float) r36.xyz, r36.xyzx, t18.xyzw, s4, l(0.000000)
        mul r36.xyz, r35.yyyy, r36.xyzx
        mad r32.xyz, r32.xyzx, r35.xxxx, r36.xyzx
        movc r24.z, r31.w, l(0), l(0.500000)
        add r19.yzw, r19.yyzw, r24.xxyz
        sample_l_indexable(texture3d)(float,float,float,float) r19.yzw, r19.yzwy, t19.wxyz, s4, l(0.000000)
        mad r19.yzw, r19.yyzw, r35.zzzz, r32.xxyz
        sample_l_indexable(texturecubearray)(float,float,float,float) r31.xzw, r34.xyzw, t8.xwyz, s2, l(6.000000)
        and r32.xyz, r31.xzwx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
        ieq r32.xyz, r32.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
        or r21.z, r32.y, r32.x
        or r21.z, r32.z, r21.z
        movc r31.xzw, r21.zzzz, l(1.000000,0,1.000000,0), r31.xxzw
        mul r32.xyz, r19.yzwy, r31.xzwx
        dp3 r21.z, r32.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
        mad r27.xyz, r19.yzwy, r31.xzwx, r27.xyzx
        mul r19.y, r15.z, r21.z
        mul r30.xyz, r20.xxxx, r30.xyzx
        dp3 r19.z, r30.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
        mad r19.z, r15.z, r21.z, r19.z
        div r19.y, r19.y, r19.z
        mov r32.x, r27.w
        mov r32.yz, r28.xxyx
        mad r19.yzw, r30.xxyz, r19.yyyy, r32.xxyz
        mov r27.w, r19.y
        mov r28.xy, r19.zwzz
      else 
        mov r29.xyz, r28.xyzx
        mov r28.xyzw, r29.xyzw
      endif 
    endloop 
    mov r25.xyzw, r27.xyzw
    mov r26.xyzw, r28.xyzw
    iadd r18.z, r18.z, l(32)
  endloop 
  mov r18.x, l(16)
  mov r19.yz, l(0,0,1.000000,0)
  mov r20.xy, l(0,0,0,0)
  mov r21.xy, l(0,0,0,0)
  mov r23.xy, l(0,0,0,0)
  mov r24.xyz, r25.xyzx
  mov r27.x, r25.w
  mov r27.yz, r26.xxyx
  mov r28.xyz, r26.zwzz
  mov r19.w, l(0)
  loop 
    uge r20.w, r19.w, r17.x
    breakc_nz r20.w
    ushr r20.w, r19.w, l(5)
    iadd r20.w, r17.y, r20.w
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.w, r20.w, l(0), t26.xxxx
    ieq r21.w, r17.z, r19.w
    ubfe r22.x, r17.w, l(0), r20.w
    movc r20.w, r21.w, r22.x, r20.w
    mov r29.xyz, r24.xyzx
    mov r30.xyz, r27.xyzx
    mov r31.xyz, r28.xzyx
    mov r21.w, r20.w
    loop 
      breakc_z r21.w
      firstbit_lo r22.x, r21.w
      ishl r22.y, l(1), r22.x
      not r22.y, r22.y
      and r21.w, r21.w, r22.y
      iadd r22.x, r19.w, r22.x
      imul null, r22.x, r22.x, l(14)
      and r22.y, r31.z, l(255)
      ult r23.w, r22.y, l(32)
      and r23.w, r6.w, r23.w
      if_nz r23.w
        imad r22.y, r22.y, l(20), l(880)
        add r18.yzw, cb1[24].xxyz, cb10[r22.x + 0].xxyz
        store_structured u2.xyzw, cb2[52].x, r22.y, r18.xyzw
      endif 
      iadd r32.y, r31.z, l(1)
      add r18.yzw, r11.xxyz, -cb10[r22.x + 0].xxyz
      and r22.y, l(0x0000ffff), cb10[r22.x + 7].z
      ubfe r23.w, l(6), l(25), cb10[r22.x + 7].z
      imul null, r24.w, r22.y, l(6)
      dp3 r27.w, cb11[r24.w + 0].xyzx, r18.yzwy
      add_sat r27.w, r27.w, cb11[r24.w + 0].w
      dp3 r28.w, cb11[r24.w + 1].xyzx, r18.yzwy
      add_sat r28.w, r28.w, cb11[r24.w + 1].w
      mul r27.w, r27.w, r28.w
      dp3 r28.w, cb11[r24.w + 2].xyzx, r18.yzwy
      add_sat r28.w, r28.w, cb11[r24.w + 2].w
      mul r27.w, r27.w, r28.w
      dp3 r28.w, cb11[r24.w + 3].xyzx, r18.yzwy
      add_sat r28.w, r28.w, cb11[r24.w + 3].w
      mul r27.w, r27.w, r28.w
      dp3 r28.w, cb11[r24.w + 4].xyzx, r18.yzwy
      add_sat r28.w, r28.w, cb11[r24.w + 4].w
      mul r27.w, r27.w, r28.w
      dp3 r28.w, cb11[r24.w + 5].xyzx, r18.yzwy
      add_sat r24.w, r28.w, cb11[r24.w + 5].w
      mul r19.x, r24.w, r27.w
      and r24.w, l(1), cb10[r22.x + 6].x
      movc r32.zw, r24.wwww, r19.xxxy, r19.zzzx
      mov r19.x, cb10[r22.x + 6].x
      mov r34.xy, r32.zwzz
      mov r24.w, l(1)
      loop 
        ige r27.w, r24.w, r23.w
        breakc_nz r27.w
        iadd r27.w, r22.y, r24.w
        imul null, r27.w, r27.w, l(6)
        dp3 r28.w, cb11[r27.w + 0].xyzx, r18.yzwy
        add_sat r28.w, r28.w, cb11[r27.w + 0].w
        mul r28.w, r28.w, r34.x
        dp3 r29.w, cb11[r27.w + 1].xyzx, r18.yzwy
        add_sat r29.w, r29.w, cb11[r27.w + 1].w
        mul r28.w, r28.w, r29.w
        dp3 r29.w, cb11[r27.w + 2].xyzx, r18.yzwy
        add_sat r29.w, r29.w, cb11[r27.w + 2].w
        mul r28.w, r28.w, r29.w
        dp3 r29.w, cb11[r27.w + 3].xyzx, r18.yzwy
        add_sat r29.w, r29.w, cb11[r27.w + 3].w
        mul r28.w, r28.w, r29.w
        dp3 r29.w, cb11[r27.w + 4].xyzx, r18.yzwy
        add_sat r29.w, r29.w, cb11[r27.w + 4].w
        mul r28.w, r28.w, r29.w
        dp3 r29.w, cb11[r27.w + 5].xyzx, r18.yzwy
        add_sat r27.w, r29.w, cb11[r27.w + 5].w
        mul r34.x, r27.w, r28.w
        ushr r29.w, r19.x, l(2)
        ubfe r30.w, l(1), l(2), r19.x
        and r31.w, r29.w, l(2)
        max r33.w, r34.x, r34.y
        mad r27.w, -r28.w, r27.w, l(1.000000)
        mul r27.w, r27.w, r34.y
        movc r22.w, r31.w, r27.w, r33.w
        movc r34.xy, r30.wwww, r34.xyxx, r22.zwzz
        iadd r24.w, r24.w, l(1)
        mov r19.x, r29.w
      endloop 
      add_sat r19.x, -r31.y, r34.y
      mul r22.y, r19.x, cb10[r22.x + 6].y
      lt r22.w, l(0.000000), r22.y
      if_nz r22.w
        and r22.w, r32.y, l(255)
        iadd r23.w, r22.w, l(-1)
        ult r23.w, r23.w, l(32)
        and r23.w, r6.w, r23.w
        if_nz r23.w
          imad r32.zw, r22.wwww, l(0, 0, 20, 20), l(0, 0, 860, 876)
          ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r22.w, cb2[52].x, r32.z, u2.xxxx
          or r22.w, r22.w, l(32)
          store_structured u2.x, cb2[52].x, r32.z, r22.w
          store_structured u2.x, cb2[52].x, r32.w, r22.y
        endif 
        iadd r31.z, r31.z, l(257)
        mad r31.x, r19.x, cb10[r22.x + 6].y, r31.x
        mul r19.x, r22.y, cb10[r22.x + 7].y
        mov r35.x, cb10[r22.x + 7].w
        mov r35.yz, cb10[r22.x + 8].xxyx
        dp3 r22.y, r16.xyzx, r35.xyzx
        dp3 r22.w, r18.yzwy, r35.xyzx
        add r22.w, r22.w, -cb10[r22.x + 8].z
        ge r23.w, r22.w, l(0.000000)
        max r22.w, r15.y, |r22.w|
        movc r22.w, r23.w, r22.w, -r22.w
        max r22.y, -r22.y, l(0.00000010)
        div r22.y, r22.w, r22.y
        min r22.y, |r22.y|, l(131072.000000)
        mov r35.x, cb10[r22.x + 8].w
        mov r35.yz, cb10[r22.x + 9].xxyx
        dp3 r22.w, r16.xyzx, r35.xyzx
        dp3 r23.w, r18.yzwy, r35.xyzx
        add r23.w, r23.w, -cb10[r22.x + 9].z
        ge r24.w, r23.w, l(0.000000)
        max r23.w, r15.y, |r23.w|
        movc r23.w, r24.w, r23.w, -r23.w
        max r22.w, -r22.w, l(0.00000010)
        div r22.w, r23.w, r22.w
        min r22.y, |r22.w|, r22.y
        mov r35.x, cb10[r22.x + 9].w
        mov r35.yz, cb10[r22.x + 10].xxyx
        dp3 r22.w, r16.xyzx, r35.xyzx
        dp3 r23.w, r18.yzwy, r35.xyzx
        add r23.w, r23.w, -cb10[r22.x + 10].z
        ge r24.w, r23.w, l(0.000000)
        max r23.w, r15.y, |r23.w|
        movc r23.w, r24.w, r23.w, -r23.w
        max r22.w, -r22.w, l(0.00000010)
        div r22.w, r23.w, r22.w
        min r22.y, |r22.w|, r22.y
        mov r35.x, cb10[r22.x + 10].w
        mov r35.yz, cb10[r22.x + 11].xxyx
        dp3 r22.w, r16.xyzx, r35.xyzx
        dp3 r23.w, r18.yzwy, r35.xyzx
        add r23.w, r23.w, -cb10[r22.x + 11].z
        ge r24.w, r23.w, l(0.000000)
        max r23.w, r15.y, |r23.w|
        movc r23.w, r24.w, r23.w, -r23.w
        max r22.w, -r22.w, l(0.00000010)
        div r22.w, r23.w, r22.w
        min r22.y, |r22.w|, r22.y
        mov r35.x, cb10[r22.x + 11].w
        mov r35.yz, cb10[r22.x + 12].xxyx
        dp3 r22.w, r16.xyzx, r35.xyzx
        dp3 r23.w, r18.yzwy, r35.xyzx
        add r23.w, r23.w, -cb10[r22.x + 12].z
        ge r24.w, r23.w, l(0.000000)
        max r23.w, r15.y, |r23.w|
        movc r23.w, r24.w, r23.w, -r23.w
        max r22.w, -r22.w, l(0.00000010)
        div r22.w, r23.w, r22.w
        min r22.y, |r22.w|, r22.y
        mov r35.x, cb10[r22.x + 12].w
        mov r35.yz, cb10[r22.x + 13].xxyx
        dp3 r22.w, r16.xyzx, r35.xyzx
        dp3 r23.w, r18.yzwy, r35.xyzx
        add r23.w, r23.w, -cb10[r22.x + 13].z
        ge r24.w, r23.w, l(0.000000)
        max r23.w, r15.y, |r23.w|
        movc r23.w, r24.w, r23.w, -r23.w
        max r22.w, -r22.w, l(0.00000010)
        div r22.w, r23.w, r22.w
        min r22.y, |r22.w|, r22.y
        add r35.x, r18.y, cb10[r22.x + 3].w
        add r35.yz, r18.zzwz, cb10[r22.x + 4].xxyx
        mad r34.xzw, r16.xxyz, r22.yyyy, r35.xxyz
        dp3 r22.w, r34.xzwx, r34.xzwx
        sqrt r22.w, r22.w
        div r22.y, r22.y, r22.w
        add r22.y, r22.y, r22.y
        sqrt r22.y, r22.y
        mad r22.y, r9.w, l(5.000000), r22.y
        add r22.y, r22.y, l(-0.844800)
        mov r35.x, cb10[r22.x + 0].w
        mov r35.y, cb10[r22.x + 1].z
        mov r35.z, cb10[r22.x + 2].y
        dp3 r36.x, r34.xzwx, r35.xyzx
        mov r37.xy, cb10[r22.x + 1].xwxx
        mov r37.z, cb10[r22.x + 2].z
        dp3 r36.y, r34.xzwx, r37.xyzx
        mov r38.x, cb10[r22.x + 1].y
        mov r38.yz, cb10[r22.x + 2].xxwx
        dp3 r36.z, r34.xzwx, r38.xyzx
        ubfe r22.w, l(9), l(16), cb10[r22.x + 7].z
        utof r36.w, r22.w
        sample_l_indexable(texturecubearray)(float,float,float,float) r34.xzw, r36.xyzw, t8.xwyz, s2, r22.y
        and r39.xyz, r34.xzwx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
        ieq r39.xyz, r39.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
        or r22.y, r39.y, r39.x
        or r22.y, r39.z, r22.y
        movc r34.xzw, r22.yyyy, l(1.000000,0,1.000000,0), r34.xxzw
        dp3 r39.x, r18.yzwy, r35.xyzx
        dp3 r39.y, r18.yzwy, r37.xyzx
        dp3 r39.z, r18.yzwy, r38.xyzx
        mad_sat r18.yzw, r39.xxyz, cb10[r22.x + 3].xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
        mul r39.xy, r18.yzyy, cb10[r22.x + 4].zwzz
        mul r39.z, r18.w, cb10[r22.x + 5].x
        add r18.yzw, r39.xxyz, cb10[r22.x + 5].yyzw
        dp3 r36.x, r12.xyzx, r35.xyzx
        dp3 r36.y, r12.xyzx, r37.xyzx
        dp3 r36.z, r12.xyzx, r38.xyzx
        lt r22.xyw, l(0.000000, 0.000000, 0.000000, 0.000000), r36.xyxz
        movc r20.z, r22.x, l(0), l(0.500000)
        add r35.xyz, r18.yzwy, r20.xyzx
        sample_l_indexable(texture3d)(float,float,float,float) r35.xyz, r35.xyzx, t17.xyzw, s4, l(0.000000)
        mul r37.xyz, r36.xyzx, r36.xyzx
        mul r37.xyz, r19.xxxx, r37.xyzx
        movc r21.z, r22.y, l(0), l(0.500000)
        add r38.xyz, r18.yzwy, r21.xyzx
        sample_l_indexable(texture3d)(float,float,float,float) r38.xyz, r38.xyzx, t18.xyzw, s4, l(0.000000)
        mul r38.xyz, r37.yyyy, r38.xyzx
        mad r35.xyz, r35.xyzx, r37.xxxx, r38.xyzx
        movc r23.z, r22.w, l(0), l(0.500000)
        add r18.yzw, r18.yyzw, r23.xxyz
        sample_l_indexable(texture3d)(float,float,float,float) r18.yzw, r18.yzwy, t19.wxyz, s4, l(0.000000)
        mad r18.yzw, r18.yyzw, r37.zzzz, r35.xxyz
        sample_l_indexable(texturecubearray)(float,float,float,float) r22.xyw, r36.xyzw, t8.xywz, s2, l(6.000000)
        and r35.xyz, r22.xywx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
        ieq r35.xyz, r35.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
        or r20.z, r35.y, r35.x
        or r20.z, r35.z, r20.z
        movc r22.xyw, r20.zzzz, l(1.000000,1.000000,0,0), r22.xyxw
        mul r35.xyz, r18.yzwy, r22.xywx
        dp3 r20.z, r35.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
        mad r29.xyz, r18.yzwy, r22.xywx, r29.xyzx
        mul r18.y, r15.z, r20.z
        mul r22.xyw, r19.xxxx, r34.xzxw
        dp3 r18.z, r22.xywx, l(0.212600, 0.715200, 0.072200, 0.000000)
        mad r18.z, r15.z, r20.z, r18.z
        div r18.y, r18.y, r18.z
        mad r30.xyz, r22.xywx, r18.yyyy, r30.xyzx
      else 
        mov r32.x, r31.x
        mov r31.xz, r32.xxyx
      endif 
    endloop 
    mov r24.xyz, r29.xyzx
    mov r27.xyz, r30.xyzx
    mov r28.xy, r31.xzxx
    iadd r19.w, r19.w, l(32)
  endloop 
  ge r9.w, r26.z, l(1.000000)
  and r15.y, r26.w, l(0x0000ff00)
  bfi r15.y, l(8), l(0), r28.y, r15.y
  movc r15.w, r9.w, r15.y, r28.y
  max r9.w, r28.x, l(1.000000)
  rcp r9.w, r9.w
  mov_sat r28.x, r28.x
  mul r17.xyz, r9.wwww, r24.xyzx
  mul r33.xyz, r9.wwww, r27.xyzx
  lt r15.y, r28.x, l(0.990000)
  if_nz r15.y
    iadd r15.w, r15.w, l(256)
    add r15.y, -r28.x, l(1.000000)
    mul r15.z, r15.y, cb2[19].x
    add r18.xyz, r11.xyzx, -cb2[35].xyzx
    mul r19.x, r18.x, cb2[35].w
    mul r19.yz, r18.yyzy, cb2[36].xxyx
    add_sat r18.xyz, r19.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    mul r19.xy, r18.xyxx, cb2[36].zwzz
    mul r19.z, r18.z, cb2[37].x
    add r18.xyz, r19.xyzx, cb2[37].yzwy
    lt r19.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r12.xyzx
    movc r19.xyz, r19.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
    mov r19.w, l(0)
    add r20.xyz, r18.xyzx, r19.wwxw
    sample_l_indexable(texture3d)(float,float,float,float) r20.xyz, r20.xyzx, t17.xyzw, s4, l(0.000000)
    mul r21.xyz, r12.xyzx, r12.xyzx
    mul r21.xyz, r15.zzzz, r21.xyzx
    add r22.xyz, r18.xyzx, r19.wwyw
    sample_l_indexable(texture3d)(float,float,float,float) r22.xyz, r22.xyzx, t18.xyzw, s4, l(0.000000)
    mul r22.xyz, r21.yyyy, r22.xyzx
    mad r20.xyz, r20.xyzx, r21.xxxx, r22.xyzx
    add r18.xyz, r18.xyzx, r19.wwzw
    sample_l_indexable(texture3d)(float,float,float,float) r18.xyz, r18.xyzx, t19.xyzw, s4, l(0.000000)
    mad r18.xyz, r18.xyzx, r21.zzzz, r20.xyzx
    mov r12.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r19.xyz, r12.xyzw, t8.xyzw, s2, l(6.000000)
    mul r18.xyz, r18.xyzx, r19.xyzx
    dp3 r12.w, r18.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
    mad r17.xyz, r24.xyzx, r9.wwww, r18.xyzx
    mov r16.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r18.xyz, r16.xyzw, t8.xyzw, s2, r13.w
    mad r9.w, cb2[19].x, r15.y, -r12.w
    mad r9.w, r2.y, r9.w, r12.w
    mad r33.xyz, r18.xyzx, r9.wwww, r33.xyzx
  endif 
else 
  mov r17.xyz, l(0,0,0,0)
endif 
add r1.w, -r1.w, l(1.000000)
mad r14.yzw, r33.xxyz, r1.wwww, r14.yyzw
add r1.w, r5.x, r2.x
log r1.w, |r1.w|
mul r1.w, r1.w, r2.w
exp r1.w, r1.w
add r1.w, r5.x, r1.w
add_sat r1.w, r1.w, l(-1.000000)
mul r1.w, r4.z, r1.w
mul r18.xyz, r5.xxxx, r17.xyzx
and r19.xyz, r3.zzzz, r18.yzxy
mad r15.yz, r2.xxyx, l(0.000000, 0.984375, 0.984375, 0.000000), l(0.000000, 0.00781250, 0.00781250, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r15.yz, r15.yzyy, t5.zxyw, s2, l(0.000000)
mul r14.yzw, r1.wwww, r14.yyzw
mul r20.xyz, r15.yyyy, r14.yzwy
mul r21.xyz, r15.zzzz, r14.yzwy
sqrt r1.w, r2.w
mad r1.w, r1.w, l(0.500000), l(0.500000)
mul r1.w, r1.w, r1.w
mul r2.y, r1.w, l(0.500000)
mad r1.w, -r1.w, l(0.500000), l(1.000000)
mad r4.z, r2.x, r1.w, r2.y
mul r1.w, r1.w, r4.z
mul r2.y, r2.y, r4.z
if_nz r6.w
  mov r22.x, l(3)
  mov r22.yzw, cb1[24].xxyz
  store_structured u2.xyzw, cb2[52].x, l(112), r22.xyzw
endif 
lt r4.z, l(0.000000), r8.w
if_nz r4.z
  if_nz r6.w
    ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r4.z, cb2[52].x, l(112), u2.xxxx
    or r4.z, r4.z, l(4)
    store_structured u2.x, cb2[52].x, l(112), r4.z
    store_structured u2.x, cb2[52].x, l(128), r10.w
  endif 
  lt r4.z, l(0.000000), r10.w
  if_nz r4.z
    mul r4.z, r2.z, cb2[18].w
    mul r4.z, r7.w, r4.z
    if_nz cb2[23].x
      add r22.xyz, r11.xyzx, cb1[24].xyzx
      mov r22.w, l(1.000000)
      dp4 r9.w, cb2[24].xyzw, r22.xyzw
      dp4 r12.w, cb2[25].xyzw, r22.xyzw
      frc r22.x, r9.w
      frc r22.y, r12.w
      iadd r9.w, l(-1), cb2[23].x
      utof r22.z, r9.w
      sample_l_indexable(texture2darray)(float,float,float,float) r14.yzw, r22.xyzx, t20.wxyz, s2, l(0.000000)
      add r14.yzw, r14.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
      mad r14.yzw, cb2[23].yyyy, r14.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
      mul r14.yzw, r14.yyzw, cb2[18].xxyz
    else 
      mov r14.yzw, cb2[18].xxyz
    endif 
    ushr r9.w, cb2[53].x, l(16)
    ult r12.w, l(0), r9.w
    and r12.w, r1.z, r12.w
    if_nz r12.w
      iadd r9.w, r9.w, cb2[0].x
      imad r9.w, r9.w, l(15), l(-15)
      mad r12.w, |r4.w|, l(-0.200000), l(0.400000)
      lt r13.w, r4.w, l(0.000000)
      and r13.w, r3.z, r13.w
      movc r12.w, r13.w, -r12.w, r12.w
      mad r22.xyz, r12.xyzx, r12.wwww, r11.xyzx
      mov r23.xyz, cb9[r9.w + 4].yzwy
      mov r23.w, cb9[r9.w + 5].x
      mov r22.w, l(1.000000)
      dp4 r23.x, r23.xyzw, r22.xyzw
      mov r24.xyz, cb9[r9.w + 5].yzwy
      mov r24.w, cb9[r9.w + 6].x
      dp4 r23.y, r24.xyzw, r22.xyzw
      mad r15.yz, r23.xxyx, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      add r23.x, r15.y, cb9[r9.w + 9].w
      add r23.y, r15.z, cb9[r9.w + 10].x
      mul r15.yz, r23.xxyx, cb9[r9.w + 9].yyzy
      div r23.xy, cb9[r9.w + 3].yyyy, cb9[r9.w + 8].ywyy
      add r23.zw, -r23.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
      ge r23.zw, r15.yyyz, r23.zzzw
      ge r23.xy, r23.xyxx, r15.yzyy
      or r23.xy, r23.xyxx, r23.zwzz
      or r12.w, r23.y, r23.x
      if_z r12.w
        mov r23.xyz, cb9[r9.w + 6].yzwy
        mov r23.w, cb9[r9.w + 7].x
        dp4 r12.w, r23.xyzw, r22.xyzw
        mov_sat r15.yz, r15.yyzy
        mad r22.x, r15.y, cb9[r9.w + 8].y, cb9[r9.w + 8].z
        mad r22.y, r15.z, cb9[r9.w + 8].w, cb9[r9.w + 9].x
        add r12.w, r12.w, cb9[r9.w + 10].y
        div r12.w, r12.w, cb9[r9.w + 10].z
        max r12.w, r12.w, l(0.00006104)
        and r13.w, l(0x0000ffff), cb9[r9.w + 1].w
        if_nz cb2[58].y
          mov r23.x, -r4.x
          utof r24.z, r13.w
          mov r23.y, r13.x
          mov r23.z, r4.x
          mov r15.yz, l(0,0,0,0)
          loop 
            ige r16.w, r15.z, l(8)
            breakc_nz r16.w
            dp2 r25.x, icb[r15.z + 0].yxyy, r23.xyxx
            dp2 r25.y, icb[r15.z + 0].yxyy, r23.yzyy
            mad r24.xy, r25.xyxx, cb9[r9.w + 3].yyyy, r22.xyxx
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r16.w, r24.xyzx, t9.xxxx, s13, r12.w
            mad r15.y, r16.w, l(0.125000), r15.y
            iadd r15.z, r15.z, l(1)
          endloop 
        else 
          utof r22.z, r13.w
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r15.y, r22.xyzx, t9.xxxx, s13, r12.w
        endif 
        mul r9.w, r15.y, r15.y
        mul r9.w, r15.y, r9.w
      else 
        mov r9.w, l(1.000000)
      endif 
      mul r10.w, r9.w, r10.w
    else 
      and r9.w, cb2[53].x, l(0x0000ffff)
      ult r12.w, l(0), r9.w
      not r13.w, r1.z
      and r12.w, r12.w, r13.w
      if_nz r12.w
        iadd r9.w, r9.w, cb2[0].x
        imad r9.w, r9.w, l(15), l(-15)
        mad r12.w, |r4.w|, l(-0.200000), l(0.400000)
        lt r13.w, r4.w, l(0.000000)
        and r13.w, r3.z, r13.w
        movc r12.w, r13.w, -r12.w, r12.w
        mad r22.xyz, r12.xyzx, r12.wwww, r11.xyzx
        mov r23.xyz, cb9[r9.w + 4].yzwy
        mov r23.w, cb9[r9.w + 5].x
        mov r22.w, l(1.000000)
        dp4 r23.x, r23.xyzw, r22.xyzw
        mov r24.xyz, cb9[r9.w + 5].yzwy
        mov r24.w, cb9[r9.w + 6].x
        dp4 r23.y, r24.xyzw, r22.xyzw
        mad r15.yz, r23.xxyx, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
        add r23.x, r15.y, cb9[r9.w + 9].w
        add r23.y, r15.z, cb9[r9.w + 10].x
        mul r15.yz, r23.xxyx, cb9[r9.w + 9].yyzy
        div r23.xy, cb9[r9.w + 3].yyyy, cb9[r9.w + 8].ywyy
        add r23.zw, -r23.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
        ge r23.zw, r15.yyyz, r23.zzzw
        ge r23.xy, r23.xyxx, r15.yzyy
        or r23.xy, r23.xyxx, r23.zwzz
        or r12.w, r23.y, r23.x
        if_z r12.w
          mov r23.xyz, cb9[r9.w + 6].yzwy
          mov r23.w, cb9[r9.w + 7].x
          dp4 r12.w, r23.xyzw, r22.xyzw
          mov_sat r15.yz, r15.yyzy
          mad r22.x, r15.y, cb9[r9.w + 8].y, cb9[r9.w + 8].z
          mad r22.y, r15.z, cb9[r9.w + 8].w, cb9[r9.w + 9].x
          add r12.w, r12.w, cb9[r9.w + 10].y
          div r12.w, r12.w, cb9[r9.w + 10].z
          max r12.w, r12.w, l(0.00006104)
          and r13.w, l(0x0000ffff), cb9[r9.w + 1].w
          if_nz cb2[58].y
            mov r23.x, -r4.x
            utof r24.z, r13.w
            mov r23.y, r13.x
            mov r23.z, r4.x
            mov r15.yz, l(0,0,0,0)
            loop 
              ige r16.w, r15.z, l(8)
              breakc_nz r16.w
              dp2 r25.x, icb[r15.z + 0].yxyy, r23.xyxx
              dp2 r25.y, icb[r15.z + 0].yxyy, r23.yzyy
              mad r24.xy, r25.xyxx, cb9[r9.w + 3].yyyy, r22.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r16.w, r24.xyzx, t9.xxxx, s13, r12.w
              mad r15.y, r16.w, l(0.125000), r15.y
              iadd r15.z, r15.z, l(1)
            endloop 
          else 
            utof r22.z, r13.w
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r15.y, r22.xyzx, t9.xxxx, s13, r12.w
          endif 
          mul r9.w, r15.y, r15.y
          mul r9.w, r15.y, r9.w
        else 
          mov r9.w, l(1.000000)
        endif 
        mul r10.w, r9.w, r10.w
      endif 
    endif 
    mad r9.w, -r2.x, l(0.500000), l(1.000000)
    mad r9.w, -r8.w, r9.w, l(1.000000)
    mul r9.w, r9.w, r9.w
    mad r9.w, -r9.w, l(0.620000), l(0.620000)
    add r9.w, -r8.w, r9.w
    mad r8.w, r2.w, r9.w, r8.w
    mul r8.w, r10.w, r8.w
    mul r22.xyz, r14.yzwy, r8.wwww
    lt r4.w, l(0.000000), r4.w
    mad r17.xyz, r17.xyzx, r5.xxxx, r22.xyzx
    mad r22.xyz, -r11.xyzx, r0.wwww, cb2[17].xyzx
    dp3 r0.w, r22.xyzx, r22.xyzx
    rsq r0.w, r0.w
    mul r22.xyz, r0.wwww, r22.xyzx
    dp3 r0.w, r22.xyzx, r5.yzwy
    dp3 r5.x, r12.xyzx, r22.xyzx
    mad r9.w, |r5.x|, r2.z, -|r5.x|
    mad r5.x, |r5.x|, r9.w, l(1.000000)
    mad r7.w, r7.w, r1.w, r2.y
    mul r5.x, r5.x, r5.x
    mul r5.x, r7.w, r5.x
    rcp r5.x, r5.x
    mul r4.z, r4.z, r5.x
    mul r4.z, r4.z, r10.w
    mul r4.z, r4.z, l(0.250000)
    mad r22.yzw, r4.zzzz, r14.yyzw, r21.xxyz
    add_sat r0.w, -r0.w, l(1.000000)
    mul r5.x, r0.w, r0.w
    mul r5.x, r5.x, r5.x
    mul r0.w, r0.w, r5.x
    mul r0.w, r0.w, r4.z
    mad r23.xyz, r0.wwww, r14.yzwy, r20.xyzx
    mad r14.yzw, r8.wwww, r14.yyzw, r19.zzxy
    and r24.xyz, r3.zzzz, r14.zwyz
    mov r17.w, r19.z
    mov r18.w, r24.z
    movc r18.xyzw, r4.wwww, r17.xyzw, r18.xyzw
    mov r19.zw, r23.xxxy
    mov r24.zw, r20.xxxy
    movc r17.xyzw, r4.wwww, r19.xyzw, r24.xyzw
    mov r22.x, r23.z
    mov r21.w, r20.z
    movc r21.xyzw, r4.wwww, r22.yzwx, r21.xyzw
    if_nz r6.w
      ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r0.w, cb2[52].x, l(112), u2.xxxx
      or r0.w, r0.w, l(8)
      store_structured u2.x, cb2[52].x, l(112), r0.w
      store_structured u2.x, cb2[52].x, l(132), r10.w
    endif 
    mov r19.z, r18.w
    mov r19.xy, r17.xyxx
    mov r20.xy, r17.zwzz
    mov r20.z, r21.w
    mov r0.w, l(0x00010101)
  else 
    mov r0.w, l(257)
  endif 
else 
  mov r0.w, l(1)
endif 
ushr r4.z, r0.x, l(24)
ubfe r0.x, l(10), l(12), r0.x
mov r17.x, -r4.x
not r4.w, r1.z
mad r2.x, -r2.x, l(0.500000), l(1.000000)
mov r22.x, l(2)
mov r23.x, l(2)
mov r24.w, l(1.000000)
mov r17.z, r4.x
mov r25.w, l(1.000000)
mov r26.z, l(1.000000)
mov r27.w, l(1.000000)
mov r17.yw, r13.xxxx
mov r4.y, r17.w
mov r28.w, l(1.000000)
mov r13.y, r17.x
mov r13.z, r4.x
mov r29.w, l(1.000000)
mov r30.x, r13.x
mov r30.y, r17.x
mov r30.z, r4.x
mov r31.x, r13.x
mov r31.y, r17.x
mov r31.z, r4.x
mov r32.x, r13.x
mov r32.y, r17.x
mov r32.z, r4.x
mov r14.yzw, r18.xxyz
mov r33.xyz, r19.zxyz
mov r34.xyz, r20.xyzx
mov r35.xyz, r21.xyzx
mov r5.x, r0.w
mov r7.w, l(0)
loop 
  ieq r8.w, r7.w, l(2)
  breakc_nz r8.w
  movc r8.w, r7.w, r0.x, r4.z
  imul null, r8.w, r8.w, l(15)
  ubfe r9.w, l(3), l(24), cb9[r8.w + 1].w
  switch r9.w
    case l(4)
    if_nz r6.w
      and r9.w, r5.x, l(7)
      imad r9.w, r9.w, l(24), l(112)
      add r22.yzw, cb1[24].xxyz, cb9[r8.w + 0].xxyz
      store_structured u2.xyzw, cb2[52].x, r9.w, r22.xyzw
    endif 
    iadd r9.w, r5.x, l(1)
    lt r10.w, l(0.000000), cb9[r8.w + 6].y
    mov r36.xy, cb9[r8.w + 5].zwzz
    mov r36.z, cb9[r8.w + 6].x
    mad r22.yzw, -r36.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000), cb9[r8.w + 0].xxyz
    add r37.xyz, -r11.xyzx, r22.yzwy
    dp3 r12.w, r36.xyzx, r37.xyzx
    div_sat r13.w, -r12.w, cb9[r8.w + 6].y
    mad r38.xyz, r13.wwww, r36.xyzx, r22.yzwy
    movc r38.xyz, r10.wwww, r38.xyzx, cb9[r8.w + 0].xyzx
    add r38.xyz, -r11.xyzx, r38.xyzx
    dp3 r15.y, r38.xyzx, r38.xyzx
    rsq r15.z, r15.y
    mul r38.xyz, r15.zzzz, r38.xyzx
    dp3 r15.z, r12.xyzx, r38.xyzx
    mov_sat r16.w, r15.z
    movc r16.w, r3.z, |r15.z|, r16.w
    lt r18.w, l(0.000000), r16.w
    if_nz r18.w
      sqrt r18.w, r15.y
      mul r19.w, cb9[r8.w + 3].x, cb9[r8.w + 3].x
      div r15.y, r19.w, r15.y
      min r15.y, r15.y, l(1.000000)
      mad_sat r38.xy, r18.wwww, cb9[r8.w + 2].xzxx, cb9[r8.w + 2].ywyy
      mul r38.zw, r38.xxxy, r38.xxxy
      mad r38.xy, r38.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
      mul r38.xy, r38.xyxx, r38.zwzz
      mul r15.y, r15.y, r38.x
      mul r15.y, r38.y, r15.y
      lt r18.w, l(0.000000), r15.y
      if_nz r18.w
        ubfe r18.w, l(3), l(27), cb9[r8.w + 1].w
        and r19.w, r9.w, l(15)
        iadd r20.w, r19.w, l(-1)
        ult r20.w, r20.w, l(32)
        and r20.w, r6.w, r20.w
        if_nz r20.w
          imad r38.xy, r19.wwww, l(24, 24, 0, 0), l(88, 104, 0, 0)
          ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r19.w, cb2[52].x, r38.x, u2.xxxx
          or r19.w, r19.w, l(4)
          store_structured u2.x, cb2[52].x, r38.x, r19.w
          store_structured u2.x, cb2[52].x, r38.y, r15.y
        endif 
        iadd r19.w, r5.x, l(257)
        ine r18.w, r18.w, l(1)
        if_nz r18.w
          mad r18.w, |r15.z|, l(-0.200000), l(0.400000)
          lt r20.w, r15.z, l(0.000000)
          and r20.w, r3.z, r20.w
          movc r18.w, r20.w, -r18.w, r18.w
          mad r38.xyz, r12.xyzx, r18.wwww, r11.xyzx
          add r38.xyz, r38.xyzx, -cb9[r8.w + 4].yzwy
          max r18.w, |r38.z|, |r38.y|
          max r18.w, r18.w, |r38.x|
          div r18.w, cb9[r8.w + 5].x, r18.w
          add r18.w, r18.w, cb9[r8.w + 5].y
          dp3 r20.w, r38.xyzx, r38.xyzx
          rsq r20.w, r20.w
          max r18.w, r18.w, l(0.00006104)
          and r21.w, l(0x0000ffff), cb9[r8.w + 1].w
          utof r39.w, r21.w
          mov r21.w, l(0)
          mov r26.w, l(0)
          loop 
            ige r30.w, r26.w, l(8)
            breakc_nz r30.w
            dp2 r40.y, icb[r26.w + 0].yxyy, r17.xyxx
            dp2 r40.z, icb[r26.w + 0].yxyy, r17.yzyy
            mul r40.yz, r40.yyzy, cb9[r8.w + 3].yyyy
            mul r40.x, r15.x, r40.y
            mul r40.w, r14.x, r40.y
            mad r39.xyz, r38.xyzx, r20.wwww, r40.xzwx
            sample_c_lz_indexable(texturecubearray)(float,float,float,float) r30.w, r39.xyzw, t10.xxxx, s13, r18.w
            mad r21.w, r30.w, l(0.125000), r21.w
            iadd r26.w, r26.w, l(1)
          endloop 
        else 
          mov r21.w, l(1.000000)
        endif 
        mul r15.y, r15.y, r21.w
        lt r18.w, l(0.000000), r15.y
        if_nz r18.w
          mul r18.w, r2.z, cb9[r8.w + 1].z
          mul r18.w, r18.w, l(0.250000)
          dp3 r20.w, r36.xyzx, r16.xyzx
          dp3 r26.w, r16.xyzx, r37.xyzx
          mad r30.w, -r20.w, r20.w, cb9[r8.w + 6].y
          mad r12.w, r20.w, r26.w, -r12.w
          div_sat r12.w, r12.w, r30.w
          div r20.w, r30.w, cb9[r8.w + 6].y
          mul r20.w, r20.w, l(10.000000)
          min r20.w, r20.w, l(1.000000)
          add r12.w, -r13.w, r12.w
          mad r12.w, r20.w, r12.w, r13.w
          mad r22.yzw, r12.wwww, r36.xxyz, r22.yyzw
          movc r22.yzw, r10.wwww, r22.yyzw, cb9[r8.w + 0].xxyz
          add r22.yzw, -r11.xxyz, r22.yyzw
          dp3 r10.w, r22.yzwy, r22.yzwy
          rsq r10.w, r10.w
          mul r36.xyz, r10.wwww, r22.yzwy
          ubfe r12.w, l(4), l(16), cb9[r8.w + 1].w
          ult r13.w, l(0), r12.w
          and r13.w, r1.z, r13.w
          if_nz r13.w
            iadd r12.w, r12.w, cb2[0].x
            imad r12.w, r12.w, l(15), l(-15)
            mad r13.w, |r15.z|, l(-0.200000), l(0.400000)
            lt r20.w, r15.z, l(0.000000)
            and r20.w, r3.z, r20.w
            movc r13.w, r20.w, -r13.w, r13.w
            mad r24.xyz, r12.xyzx, r13.wwww, r11.xyzx
            mov r37.xyz, cb9[r12.w + 6].yzwy
            mov r37.w, cb9[r12.w + 7].x
            dp4 r13.w, r37.xyzw, r24.xyzw
            mov r37.xyz, cb9[r12.w + 7].yzwy
            mov r37.w, cb9[r12.w + 8].x
            dp4 r20.w, r37.xyzw, r24.xyzw
            lt r26.w, r20.w, r13.w
            if_z r26.w
              mov r37.xyz, cb9[r12.w + 4].yzwy
              mov r37.w, cb9[r12.w + 5].x
              dp4 r37.x, r37.xyzw, r24.xyzw
              mov r38.xyz, cb9[r12.w + 5].yzwy
              mov r38.w, cb9[r12.w + 6].x
              dp4 r37.y, r38.xyzw, r24.xyzw
              div r24.xy, r37.xyxx, r20.wwww
              mad r24.xy, r24.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
              add r37.x, r24.x, cb9[r12.w + 9].w
              add r37.y, r24.y, cb9[r12.w + 10].x
              mul r24.xy, r37.xyxx, cb9[r12.w + 9].yzyy
              div r37.xy, cb9[r12.w + 3].yyyy, cb9[r12.w + 8].ywyy
              add r37.zw, -r37.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
              ge r37.zw, r24.xxxy, r37.zzzw
              ge r37.xy, r37.xyxx, r24.xyxx
              or r37.xy, r37.xyxx, r37.zwzz
              or r24.z, r37.y, r37.x
              if_z r24.z
                mov_sat r24.xy, r24.xyxx
                mad r37.x, r24.x, cb9[r12.w + 8].y, cb9[r12.w + 8].z
                mad r37.y, r24.y, cb9[r12.w + 8].w, cb9[r12.w + 9].x
                mul r24.x, r20.w, cb9[r12.w + 10].z
                mad r13.w, cb9[r12.w + 10].y, r20.w, r13.w
                div r13.w, r13.w, r24.x
              endif 
            else 
              mov r24.z, l(-1)
            endif 
            or r20.w, r26.w, r24.z
            if_z r20.w
              max r13.w, r13.w, l(0.00006104)
              and r20.w, l(0x0000ffff), cb9[r12.w + 1].w
              if_nz cb2[58].y
                utof r24.z, r20.w
                mov r26.w, l(0)
                mov r30.w, l(0)
                loop 
                  ige r31.w, r30.w, l(8)
                  breakc_nz r31.w
                  dp2 r38.x, icb[r30.w + 0].yxyy, r17.xwxx
                  dp2 r38.y, icb[r30.w + 0].xyxx, r4.xyxx
                  mad r24.xy, r38.xyxx, cb9[r12.w + 3].yyyy, r37.xyxx
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.x, r24.xyzx, t9.xxxx, s13, r13.w
                  mad r26.w, r24.x, l(0.125000), r26.w
                  iadd r30.w, r30.w, l(1)
                endloop 
              else 
                utof r37.z, r20.w
                sample_c_lz_indexable(texture2darray)(float,float,float,float) r26.w, r37.xyzx, t9.xxxx, s13, r13.w
              endif 
              mul r12.w, r26.w, r26.w
              mul r12.w, r26.w, r12.w
            else 
              mov r12.w, l(1.000000)
            endif 
            mul r15.y, r12.w, r15.y
          else 
            ubfe r12.w, l(4), l(20), cb9[r8.w + 1].w
            ult r13.w, l(0), r12.w
            and r13.w, r4.w, r13.w
            if_nz r13.w
              iadd r12.w, r12.w, cb2[0].x
              imad r12.w, r12.w, l(15), l(-15)
              mad r13.w, |r15.z|, l(-0.200000), l(0.400000)
              lt r20.w, r15.z, l(0.000000)
              and r20.w, r3.z, r20.w
              movc r13.w, r20.w, -r13.w, r13.w
              mad r25.xyz, r12.xyzx, r13.wwww, r11.xyzx
              mov r37.xyz, cb9[r12.w + 6].yzwy
              mov r37.w, cb9[r12.w + 7].x
              dp4 r13.w, r37.xyzw, r25.xyzw
              mov r37.xyz, cb9[r12.w + 7].yzwy
              mov r37.w, cb9[r12.w + 8].x
              dp4 r20.w, r37.xyzw, r25.xyzw
              lt r24.x, r20.w, r13.w
              if_z r24.x
                mov r37.xyz, cb9[r12.w + 4].yzwy
                mov r37.w, cb9[r12.w + 5].x
                dp4 r37.x, r37.xyzw, r25.xyzw
                mov r38.xyz, cb9[r12.w + 5].yzwy
                mov r38.w, cb9[r12.w + 6].x
                dp4 r37.y, r38.xyzw, r25.xyzw
                div r24.yz, r37.xxyx, r20.wwww
                mad r24.yz, r24.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
                add r25.x, r24.y, cb9[r12.w + 9].w
                add r25.y, r24.z, cb9[r12.w + 10].x
                mul r24.yz, r25.xxyx, cb9[r12.w + 9].yyzy
                div r25.xy, cb9[r12.w + 3].yyyy, cb9[r12.w + 8].ywyy
                add r37.xy, -r25.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                ge r37.xy, r24.yzyy, r37.xyxx
                ge r25.xy, r25.xyxx, r24.yzyy
                or r25.xy, r25.xyxx, r37.xyxx
                or r25.x, r25.y, r25.x
                if_z r25.x
                  mov_sat r24.yz, r24.yyzy
                  mad r37.x, r24.y, cb9[r12.w + 8].y, cb9[r12.w + 8].z
                  mad r37.y, r24.z, cb9[r12.w + 8].w, cb9[r12.w + 9].x
                  mul r24.y, r20.w, cb9[r12.w + 10].z
                  mad r13.w, cb9[r12.w + 10].y, r20.w, r13.w
                  div r13.w, r13.w, r24.y
                endif 
              else 
                mov r25.x, l(-1)
              endif 
              or r20.w, r24.x, r25.x
              if_z r20.w
                max r13.w, r13.w, l(0.00006104)
                and r20.w, l(0x0000ffff), cb9[r12.w + 1].w
                if_nz cb2[58].y
                  utof r24.z, r20.w
                  mov r25.xy, l(0,0,0,0)
                  loop 
                    ige r25.z, r25.y, l(8)
                    breakc_nz r25.z
                    dp2 r38.x, icb[r25.y + 0].xyxx, r13.xyxx
                    dp2 r38.y, icb[r25.y + 0].yxyy, r13.xzxx
                    mad r24.xy, r38.xyxx, cb9[r12.w + 3].yyyy, r37.xyxx
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.x, r24.xyzx, t9.xxxx, s13, r13.w
                    mad r25.x, r24.x, l(0.125000), r25.x
                    iadd r25.y, r25.y, l(1)
                  endloop 
                else 
                  utof r37.z, r20.w
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r25.x, r37.xyzx, t9.xxxx, s13, r13.w
                endif 
                mul r12.w, r25.x, r25.x
                mul r12.w, r25.x, r12.w
              else 
                mov r12.w, l(1.000000)
              endif 
              mul r15.y, r12.w, r15.y
            endif 
          endif 
          mad r12.w, -r16.w, r2.x, l(1.000000)
          mul r12.w, r12.w, r12.w
          mad r12.w, -r12.w, l(0.620000), l(0.620000)
          add r12.w, -r16.w, r12.w
          mad r12.w, r2.w, r12.w, r16.w
          mul r12.w, r15.y, r12.w
          mov r24.x, cb9[r8.w + 0].w
          mov r24.yz, cb9[r8.w + 1].xxyx
          lt r13.w, l(0.000000), r15.z
          mad r37.xyz, r12.wwww, r24.xyzx, r14.yzwy
          dp3_sat r15.z, r12.xyzx, r36.xyzx
          mad r22.yzw, r22.yyzw, r10.wwww, r5.yyzw
          dp3 r10.w, r22.yzwy, r22.yzwy
          rsq r10.w, r10.w
          mul r22.yzw, r10.wwww, r22.yyzw
          dp3 r10.w, r22.yzwy, r5.yzwy
          dp3 r16.w, r12.xyzx, r22.yzwy
          mad r20.w, |r16.w|, r2.z, -|r16.w|
          mad r16.w, |r16.w|, r20.w, l(1.000000)
          mad r20.w, r15.z, r1.w, r2.y
          mul r16.w, r16.w, r16.w
          mul r16.w, r20.w, r16.w
          rcp r16.w, r16.w
          mul r15.z, r18.w, r15.z
          mul r15.z, r15.z, r16.w
          mul r15.z, r15.y, r15.z
          mad r22.yzw, r15.zzzz, r24.xxyz, r35.xxyz
          add_sat r10.w, -r10.w, l(1.000000)
          mul r16.w, r10.w, r10.w
          mul r16.w, r16.w, r16.w
          mul r10.w, r10.w, r16.w
          mul r10.w, r10.w, r15.z
          mad r36.xyz, r10.wwww, r24.xyzx, r34.xyzx
          mad r24.xyz, r12.wwww, r24.xyzx, r33.xyzx
          movc r24.xyz, r3.zzzz, r24.xyzx, r33.xyzx
          movc r14.yzw, r13.wwww, r37.xxyz, r14.yyzw
          movc r33.xyz, r13.wwww, r33.xyzx, r24.xyzx
          movc r34.xyz, r13.wwww, r36.xyzx, r34.xyzx
          movc r35.xyz, r13.wwww, r22.yzwy, r35.xyzx
          and r10.w, r19.w, l(15)
          iadd r12.w, r10.w, l(-1)
          ult r12.w, r12.w, l(32)
          and r12.w, r6.w, r12.w
          if_nz r12.w
            imad r22.yz, r10.wwww, l(0, 24, 24, 0), l(0, 88, 108, 0)
            ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r10.w, cb2[52].x, r22.y, u2.xxxx
            or r10.w, r10.w, l(8)
            store_structured u2.x, cb2[52].x, r22.y, r10.w
            store_structured u2.x, cb2[52].x, r22.z, r15.y
          endif 
          iadd r5.x, r5.x, l(0x00010101)
        else 
          mov r5.x, r19.w
        endif 
      else 
        mov r5.x, r9.w
      endif 
    else 
      mov r5.x, r9.w
    endif 
    break 
    case l(2)
    if_nz r6.w
      and r9.w, r5.x, l(7)
      imad r9.w, r9.w, l(24), l(112)
      add r23.yzw, cb1[24].xxyz, cb9[r8.w + 0].xxyz
      store_structured u2.xyzw, cb2[52].x, r9.w, r23.xyzw
    endif 
    iadd r9.w, r5.x, l(1)
    add r24.xy, -r11.xyxx, cb9[r8.w + 3].zwzz
    add r24.z, -r11.z, cb9[r8.w + 4].x
    dp3 r10.w, r24.xyzx, r24.xyzx
    rsq r10.w, r10.w
    mul r22.yzw, r10.wwww, r24.xxyz
    dp3 r12.w, r12.xyzx, r22.yzwy
    mov_sat r13.w, r12.w
    movc r15.y, r3.z, |r12.w|, r13.w
    lt r15.z, l(0.000000), r15.y
    if_nz r15.z
      mov r36.xyz, cb9[r8.w + 7].yzwy
      mov r36.w, cb9[r8.w + 8].x
      dp4 r15.z, r36.xyzw, r11.xyzw
      lt r16.w, r15.z, l(1.000000)
      if_nz r16.w
        mov r22.yzw, l(0,1.000000,1.000000,1.000000)
        mov r16.w, l(0)
      else 
        add r23.yzw, -r11.xxyz, cb9[r8.w + 0].xxyz
        mul r18.w, cb9[r8.w + 3].x, cb9[r8.w + 3].x
        dp3 r19.w, r23.yzwy, r23.yzwy
        div r18.w, r18.w, r19.w
        min r18.w, r18.w, l(1.000000)
        mad_sat r23.yz, r15.zzzz, cb9[r8.w + 2].xxzx, cb9[r8.w + 2].yywy
        mul r25.yz, r23.yyzy, r23.yyzy
        mad r23.yz, r23.yyzy, l(0.000000, -2.000000, -2.000000, 0.000000), l(0.000000, 3.000000, 3.000000, 0.000000)
        mul r23.yz, r23.yyzy, r25.yyzy
        mul r18.w, r18.w, r23.y
        mul r18.w, r23.z, r18.w
        mov r37.xyz, cb9[r8.w + 4].yzwy
        mov r37.w, cb9[r8.w + 5].x
        dp4 r37.x, r37.xyzw, r11.xyzw
        mov r38.xyz, cb9[r8.w + 5].yzwy
        mov r38.w, cb9[r8.w + 6].x
        dp4 r37.y, r38.xyzw, r11.xyzw
        div r26.xy, r37.xyxx, r15.zzzz
        lt r15.z, cb9[r8.w + 10].w, l(0.00048828)
        if_nz r15.z
          mad_sat r23.yz, |r26.xxyx|, cb9[r8.w + 12].xxyx, cb9[r8.w + 12].zzwz
          mul r25.yz, r23.yyzy, r23.yyzy
          mad r23.yz, r23.yyzy, l(0.000000, -2.000000, -2.000000, 0.000000), l(0.000000, 3.000000, 3.000000, 0.000000)
          mul r23.yz, r23.yyzy, r25.yyzy
          mul r15.z, r23.z, r23.y
        else 
          mul_sat r37.xyzw, |r26.yyxx|, cb9[r8.w + 11].xyzw
          log r37.xyzw, r37.xyzw
          mul r37.xyzw, r37.xyzw, cb9[r8.w + 12].zzzz
          exp r37.xyzw, r37.xyzw
          add r23.yz, r37.zzwz, r37.xxyx
          log r23.yz, r23.yyzy
          mul r23.yz, r23.yyzy, cb9[r8.w + 12].wwww
          exp r23.yz, r23.yyzy
          mul r19.w, r23.y, cb9[r8.w + 12].x
          mad r20.w, cb9[r8.w + 12].y, r23.z, l(-1.000000)
          mad r19.w, cb9[r8.w + 12].y, r23.z, -r19.w
          div_sat r19.w, r20.w, r19.w
          mul r20.w, r19.w, r19.w
          mad r19.w, r19.w, l(-2.000000), l(3.000000)
          mul r15.z, r19.w, r20.w
        endif 
        mul r16.w, r15.z, r18.w
        and r15.z, l(255), cb9[r8.w + 14].w
        if_nz r15.z
          dp3 r18.w, cb9[r8.w + 13].xyzx, r26.xyzx
          mov r37.x, cb9[r8.w + 13].w
          mov r37.yz, cb9[r8.w + 14].xxyx
          dp3 r19.w, r37.xyzx, r26.xyzx
          frc r37.x, r18.w
          frc r37.y, r19.w
          iadd r15.z, r15.z, l(-1)
          utof r37.z, r15.z
          sample_l_indexable(texture2darray)(float,float,float,float) r22.yzw, r37.xyzx, t20.wxyz, s2, l(0.000000)
        else 
          mov r22.yzw, l(0,1.000000,1.000000,1.000000)
        endif 
      endif 
      mov r37.x, cb9[r8.w + 0].w
      mov r37.yz, cb9[r8.w + 1].xxyx
      mul r22.yzw, r22.yyzw, r37.xxyz
      lt r15.z, l(0.000000), r16.w
      if_nz r15.z
        ubfe r15.z, l(3), l(27), cb9[r8.w + 1].w
        and r18.w, r9.w, l(15)
        iadd r19.w, r18.w, l(-1)
        ult r19.w, r19.w, l(32)
        and r19.w, r6.w, r19.w
        if_nz r19.w
          imad r23.yz, r18.wwww, l(0, 24, 24, 0), l(0, 88, 104, 0)
          ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r18.w, cb2[52].x, r23.y, u2.xxxx
          or r18.w, r18.w, l(4)
          store_structured u2.x, cb2[52].x, r23.y, r18.w
          store_structured u2.x, cb2[52].x, r23.z, r16.w
        endif 
        iadd r18.w, r5.x, l(257)
        ine r15.z, r15.z, l(1)
        if_nz r15.z
          mad r15.z, |r12.w|, l(-0.200000), l(0.400000)
          lt r19.w, r12.w, l(0.000000)
          and r19.w, r3.z, r19.w
          movc r15.z, r19.w, -r15.z, r15.z
          mad r27.xyz, r12.xyzx, r15.zzzz, r11.xyzx
          mov r37.xyz, cb9[r8.w + 6].yzwy
          mov r37.w, cb9[r8.w + 7].x
          dp4 r15.z, r37.xyzw, r27.xyzw
          dp4 r19.w, r36.xyzw, r27.xyzw
          ge r20.w, r19.w, r15.z
          if_nz r20.w
            mov r36.xyz, cb9[r8.w + 4].yzwy
            mov r36.w, cb9[r8.w + 5].x
            dp4 r26.x, r36.xyzw, r27.xyzw
            mov r36.xyz, cb9[r8.w + 5].yzwy
            mov r36.w, cb9[r8.w + 6].x
            dp4 r26.y, r36.xyzw, r27.xyzw
            div r23.yz, r26.xxyx, r19.wwww
            mad_sat r23.yz, r23.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
            mad r27.x, r23.y, cb9[r8.w + 8].y, cb9[r8.w + 8].z
            mad r27.y, r23.z, cb9[r8.w + 8].w, cb9[r8.w + 9].x
            div r15.z, r15.z, r19.w
            max r15.z, r15.z, l(0.00006104)
            and r19.w, l(0x0000ffff), cb9[r8.w + 1].w
            if_nz cb2[58].y
              utof r36.z, r19.w
              mov r20.w, l(0)
              mov r23.y, l(0)
              loop 
                ige r23.z, r23.y, l(8)
                breakc_nz r23.z
                dp2 r26.x, icb[r23.y + 0].xyxx, r30.xyxx
                dp2 r26.y, icb[r23.y + 0].yxyy, r30.xzxx
                mad r36.xy, r26.xyxx, cb9[r8.w + 3].yyyy, r27.xyxx
                sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.z, r36.xyzx, t9.xxxx, s13, r15.z
                mad r20.w, r23.z, l(0.125000), r20.w
                iadd r23.y, r23.y, l(1)
              endloop 
            else 
              utof r27.z, r19.w
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r20.w, r27.xyzx, t9.xxxx, s13, r15.z
            endif 
            mul r15.z, r20.w, r20.w
            mul r15.z, r20.w, r15.z
          else 
            mov r15.z, l(1.000000)
          endif 
        else 
          mov r15.z, l(1.000000)
        endif 
        mul r15.z, r15.z, r16.w
        lt r16.w, l(0.000000), r15.z
        if_nz r16.w
          mul r16.w, r2.z, cb9[r8.w + 1].z
          mul r16.w, r13.w, r16.w
          ubfe r19.w, l(4), l(16), cb9[r8.w + 1].w
          ult r23.y, l(0), r19.w
          and r23.y, r1.z, r23.y
          if_nz r23.y
            iadd r19.w, r19.w, cb2[0].x
            imad r19.w, r19.w, l(15), l(-15)
            mad r23.y, |r12.w|, l(-0.200000), l(0.400000)
            lt r23.z, r12.w, l(0.000000)
            and r23.z, r3.z, r23.z
            movc r23.y, r23.z, -r23.y, r23.y
            mad r28.xyz, r12.xyzx, r23.yyyy, r11.xyzx
            mov r36.xyz, cb9[r19.w + 6].yzwy
            mov r36.w, cb9[r19.w + 7].x
            dp4 r23.y, r36.xyzw, r28.xyzw
            mov r36.xyz, cb9[r19.w + 7].yzwy
            mov r36.w, cb9[r19.w + 8].x
            dp4 r23.z, r36.xyzw, r28.xyzw
            lt r23.w, r23.z, r23.y
            if_z r23.w
              mov r36.xyz, cb9[r19.w + 4].yzwy
              mov r36.w, cb9[r19.w + 5].x
              dp4 r26.x, r36.xyzw, r28.xyzw
              mov r36.xyz, cb9[r19.w + 5].yzwy
              mov r36.w, cb9[r19.w + 6].x
              dp4 r26.y, r36.xyzw, r28.xyzw
              div r25.yz, r26.xxyx, r23.zzzz
              mad r25.yz, r25.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
              add r26.x, r25.y, cb9[r19.w + 9].w
              add r26.y, r25.z, cb9[r19.w + 10].x
              mul r25.yz, r26.xxyx, cb9[r19.w + 9].yyzy
              div r26.xy, cb9[r19.w + 3].yyyy, cb9[r19.w + 8].ywyy
              add r27.xy, -r26.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
              ge r27.xy, r25.yzyy, r27.xyxx
              ge r26.xy, r26.xyxx, r25.yzyy
              or r26.xy, r26.xyxx, r27.xyxx
              or r26.x, r26.y, r26.x
              if_z r26.x
                mov_sat r25.yz, r25.yyzy
                mad r27.x, r25.y, cb9[r19.w + 8].y, cb9[r19.w + 8].z
                mad r27.y, r25.z, cb9[r19.w + 8].w, cb9[r19.w + 9].x
                mul r25.y, r23.z, cb9[r19.w + 10].z
                mad r23.y, cb9[r19.w + 10].y, r23.z, r23.y
                div r23.y, r23.y, r25.y
              endif 
            else 
              mov r26.x, l(-1)
            endif 
            or r23.z, r23.w, r26.x
            if_z r23.z
              max r23.y, r23.y, l(0.00006104)
              and r23.z, l(0x0000ffff), cb9[r19.w + 1].w
              if_nz cb2[58].y
                utof r28.z, r23.z
                mov r23.w, l(0)
                mov r25.y, l(0)
                loop 
                  ige r25.z, r25.y, l(8)
                  breakc_nz r25.z
                  dp2 r26.x, icb[r25.y + 0].xyxx, r31.xyxx
                  dp2 r26.y, icb[r25.y + 0].yxyy, r31.xzxx
                  mad r28.xy, r26.xyxx, cb9[r19.w + 3].yyyy, r27.xyxx
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r25.z, r28.xyzx, t9.xxxx, s13, r23.y
                  mad r23.w, r25.z, l(0.125000), r23.w
                  iadd r25.y, r25.y, l(1)
                endloop 
              else 
                utof r27.z, r23.z
                sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.w, r27.xyzx, t9.xxxx, s13, r23.y
              endif 
              mul r19.w, r23.w, r23.w
              mul r19.w, r23.w, r19.w
            else 
              mov r19.w, l(1.000000)
            endif 
            mul r15.z, r15.z, r19.w
          else 
            ubfe r8.w, l(4), l(20), cb9[r8.w + 1].w
            ult r19.w, l(0), r8.w
            and r19.w, r4.w, r19.w
            if_nz r19.w
              iadd r8.w, r8.w, cb2[0].x
              imad r8.w, r8.w, l(15), l(-15)
              mad r19.w, |r12.w|, l(-0.200000), l(0.400000)
              lt r23.y, r12.w, l(0.000000)
              and r23.y, r3.z, r23.y
              movc r19.w, r23.y, -r19.w, r19.w
              mad r29.xyz, r12.xyzx, r19.wwww, r11.xyzx
              mov r36.xyz, cb9[r8.w + 6].yzwy
              mov r36.w, cb9[r8.w + 7].x
              dp4 r19.w, r36.xyzw, r29.xyzw
              mov r36.xyz, cb9[r8.w + 7].yzwy
              mov r36.w, cb9[r8.w + 8].x
              dp4 r23.y, r36.xyzw, r29.xyzw
              lt r23.z, r23.y, r19.w
              if_z r23.z
                mov r36.xyz, cb9[r8.w + 4].yzwy
                mov r36.w, cb9[r8.w + 5].x
                dp4 r26.x, r36.xyzw, r29.xyzw
                mov r36.xyz, cb9[r8.w + 5].yzwy
                mov r36.w, cb9[r8.w + 6].x
                dp4 r26.y, r36.xyzw, r29.xyzw
                div r25.yz, r26.xxyx, r23.yyyy
                mad r25.yz, r25.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
                add r26.x, r25.y, cb9[r8.w + 9].w
                add r26.y, r25.z, cb9[r8.w + 10].x
                mul r25.yz, r26.xxyx, cb9[r8.w + 9].yyzy
                div r26.xy, cb9[r8.w + 3].yyyy, cb9[r8.w + 8].ywyy
                add r27.xy, -r26.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                ge r27.xy, r25.yzyy, r27.xyxx
                ge r26.xy, r26.xyxx, r25.yzyy
                or r26.xy, r26.xyxx, r27.xyxx
                or r26.x, r26.y, r26.x
                if_z r26.x
                  mov_sat r25.yz, r25.yyzy
                  mad r27.x, r25.y, cb9[r8.w + 8].y, cb9[r8.w + 8].z
                  mad r27.y, r25.z, cb9[r8.w + 8].w, cb9[r8.w + 9].x
                  mul r25.y, r23.y, cb9[r8.w + 10].z
                  mad r19.w, cb9[r8.w + 10].y, r23.y, r19.w
                  div r19.w, r19.w, r25.y
                endif 
              else 
                mov r26.x, l(-1)
              endif 
              or r23.y, r23.z, r26.x
              if_z r23.y
                max r19.w, r19.w, l(0.00006104)
                and r23.y, l(0x0000ffff), cb9[r8.w + 1].w
                if_nz cb2[58].y
                  utof r28.z, r23.y
                  mov r23.z, l(0)
                  mov r25.y, l(0)
                  loop 
                    ige r25.z, r25.y, l(8)
                    breakc_nz r25.z
                    dp2 r26.x, icb[r25.y + 0].xyxx, r32.xyxx
                    dp2 r26.y, icb[r25.y + 0].yxyy, r32.xzxx
                    mad r28.xy, r26.xyxx, cb9[r8.w + 3].yyyy, r27.xyxx
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r25.z, r28.xyzx, t9.xxxx, s13, r19.w
                    mad r23.z, r25.z, l(0.125000), r23.z
                    iadd r25.y, r25.y, l(1)
                  endloop 
                else 
                  utof r27.z, r23.y
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.z, r27.xyzx, t9.xxxx, s13, r19.w
                endif 
                mul r8.w, r23.z, r23.z
                mul r8.w, r23.z, r8.w
              else 
                mov r8.w, l(1.000000)
              endif 
              mul r15.z, r8.w, r15.z
            endif 
          endif 
          mad r8.w, -r15.y, r2.x, l(1.000000)
          mul r8.w, r8.w, r8.w
          mad r8.w, -r8.w, l(0.620000), l(0.620000)
          add r8.w, -r15.y, r8.w
          mad r8.w, r2.w, r8.w, r15.y
          mul r8.w, r15.z, r8.w
          lt r12.w, l(0.000000), r12.w
          mad r27.xyz, r8.wwww, r22.yzwy, r14.yzwy
          mad r24.xyz, r24.xyzx, r10.wwww, r5.yzwy
          dp3 r10.w, r24.xyzx, r24.xyzx
          rsq r10.w, r10.w
          mul r24.xyz, r10.wwww, r24.xyzx
          dp3 r10.w, r24.xyzx, r5.yzwy
          dp3 r15.y, r12.xyzx, r24.xyzx
          mad r19.w, |r15.y|, r2.z, -|r15.y|
          mad r15.y, |r15.y|, r19.w, l(1.000000)
          mad r13.w, r13.w, r1.w, r2.y
          mul r15.y, r15.y, r15.y
          mul r13.w, r13.w, r15.y
          rcp r13.w, r13.w
          mul r13.w, r16.w, r13.w
          mul r13.w, r13.w, r15.z
          mul r13.w, r13.w, l(0.250000)
          mad r24.xyz, r13.wwww, r22.yzwy, r35.xyzx
          add_sat r10.w, -r10.w, l(1.000000)
          mul r15.y, r10.w, r10.w
          mul r15.y, r15.y, r15.y
          mul r10.w, r10.w, r15.y
          mul r10.w, r10.w, r13.w
          mad r28.xyz, r10.wwww, r22.yzwy, r34.xyzx
          mad r22.yzw, r8.wwww, r22.yyzw, r33.xxyz
          movc r22.yzw, r3.zzzz, r22.yyzw, r33.xxyz
          movc r14.yzw, r12.wwww, r27.xxyz, r14.yyzw
          movc r33.xyz, r12.wwww, r33.xyzx, r22.yzwy
          movc r34.xyz, r12.wwww, r28.xyzx, r34.xyzx
          movc r35.xyz, r12.wwww, r24.xyzx, r35.xyzx
          and r8.w, r18.w, l(15)
          iadd r10.w, r8.w, l(-1)
          ult r10.w, r10.w, l(32)
          and r10.w, r6.w, r10.w
          if_nz r10.w
            imad r22.yz, r8.wwww, l(0, 24, 24, 0), l(0, 88, 108, 0)
            ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r8.w, cb2[52].x, r22.y, u2.xxxx
            or r8.w, r8.w, l(8)
            store_structured u2.x, cb2[52].x, r22.y, r8.w
            store_structured u2.x, cb2[52].x, r22.z, r15.z
          endif 
          iadd r5.x, r5.x, l(0x00010101)
        else 
          mov r5.x, r18.w
        endif 
      else 
        mov r5.x, r9.w
      endif 
    else 
      mov r5.x, r9.w
    endif 
    break 
    default 
    break 
  endswitch 
  iadd r7.w, r7.w, l(1)
endloop 
mad r2.xyz, r3.xwyx, l(1.000000, 3.000000, 2.000000, 0.000000), l(0.000000, 0.500000, -1.000000, 0.000000)
ftou r0.x, r2.y
mad r3.xyw, r7.zxzy, l(3.000000, 1.000000, 0.000000, 2.000000), l(0.500000, 0.000000, 0.000000, -1.000000)
ftou r0.w, r3.x
ieq r0.w, r0.x, r0.w
movc r1.zw, r0.wwww, r3.yyyw, l(0,0,-1.000000,0)
mad r3.xyw, r8.zxzy, l(3.000000, 1.000000, 0.000000, 2.000000), l(0.500000, 0.000000, 0.000000, -1.000000)
ftou r0.w, r3.x
ieq r0.w, r0.x, r0.w
movc r3.xy, r0.wwww, r3.ywyy, l(-1.000000,0,0,0)
mad r4.xyz, r9.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r0.w, r4.x
ieq r0.w, r0.x, r0.w
movc r4.xy, r0.wwww, r4.yzyy, l(-1.000000,0,0,0)
mad r5.yzw, r10.zzxy, l(0.000000, 3.000000, 1.000000, 2.000000), l(0.000000, 0.500000, 0.000000, -1.000000)
ftou r0.w, r5.y
ieq r0.x, r0.x, r0.w
movc r0.xw, r0.xxxx, r5.zzzw, l(-1.000000,0,0,0)
mov r7.x, r1.z
mov r7.y, r3.x
mov r7.z, r4.x
mov r7.w, r0.x
add r7.xyzw, -r2.xxxx, r7.xyzw
ge r7.xyzw, |r7.xyzw|, l(0.00902149, 0.00902149, 0.00902149, 0.00902149)
movc r7.xyzw, r7.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
add r0.x, r7.y, r7.x
add r0.x, r7.z, r0.x
add r0.x, r7.w, r0.x
mul r1.z, r3.y, r7.y
mad r1.z, r7.x, r1.w, r1.z
mad r1.z, r7.z, r4.y, r1.z
mad r0.w, r7.w, r0.w, r1.z
div r2.w, r0.w, r0.x
ge r0.x, l(0.000000), r0.x
movc r2.yz, r0.xxxx, l(0,0,0,0), r2.zzwz
and r0.xw, r1.xxxy, l(1, 0, 0, 1)
ieq r0.x, r0.w, r0.x
movc r2.xyz, r0.xxxx, r2.xyzx, r2.xzyx
mad r0.x, -r2.z, l(0.500000), r2.x
add r4.y, r0.x, r2.z
mad r4.z, -r2.y, l(0.500000), r0.x
add r4.x, r2.y, r4.z
mul r2.xyz, r6.xyzx, r14.yzwy
mad r2.xyz, r33.xyzx, r4.xyzx, r2.xyzx
mul r3.xyw, r34.xyxz, l(0.960000, 0.960000, 0.000000, 0.960000)
mad r3.xyw, r35.xyxz, l(0.040000, 0.040000, 0.000000, 0.040000), r3.xyxw
add r2.xyz, r2.xyzx, r3.xywx
add r3.xyw, -r4.xyxz, l(1.000000, 1.000000, 0.000000, 1.000000)
mul r3.xyw, r3.xyxw, r34.xyxz
mad r3.xyw, r35.xyxz, r4.xyxz, r3.xyxw
mad r3.xyw, r14.yzyw, r6.xyxz, r3.xyxw
movc r2.xyz, r3.zzzz, r2.xyzx, r3.xywx
lt r0.x, l(0.000000), cb2[9].z
if_nz r0.x
  dp3 r0.x, r11.xyzx, r11.xyzx
  rsq r0.w, r0.x
  mul r3.xyz, r0.wwww, r11.xyzx
  sqrt r0.x, r0.x
  lt r0.w, l(0.000000), cb2[13].w
  if_nz r0.w
    mad r1.zw, r0.xxxx, cb2[15].xxxy, cb2[14].zzzw
    mul r1.zw, r1.zzzw, cb2[16].xxxy
    lt r0.w, l(0.010000), |r11.z|
    mul r4.xy, r11.zzzz, cb2[15].zwzz
    mul r4.zw, r4.xxxy, l(0.000000, 0.000000, -1.442695, -1.442695)
    exp r4.zw, r4.zzzw
    add r4.zw, -r4.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    div r4.xy, r4.zwzz, r4.xyxx
    mul r4.xy, r1.zwzz, r4.xyxx
    movc r1.zw, r0.wwww, r4.xxxy, r1.zzzw
    mul r4.xyz, r1.zzzz, cb2[12].xyzx
    exp r4.xyz, r4.xyzx
    mul r5.yzw, r1.wwww, cb2[12].xxyz
    exp r5.yzw, r5.yyzw
    add r5.yzw, -r4.xxyz, r5.yyzw
    mad r4.xyz, cb2[13].wwww, r5.yzwy, r4.xyzx
  else 
    mad r0.w, r0.x, cb2[15].x, cb2[14].z
    mul r0.w, r0.w, cb2[16].x
    lt r1.z, l(0.010000), |r11.z|
    mul r1.w, r11.z, cb2[15].z
    mul r2.w, r1.w, l(-1.442695)
    exp r2.w, r2.w
    add r2.w, -r2.w, l(1.000000)
    div r1.w, r2.w, r1.w
    mul r1.w, r0.w, r1.w
    movc r0.w, r1.z, r1.w, r0.w
    mul r5.yzw, r0.wwww, cb2[12].xxyz
    exp r4.xyz, r5.yzwy
  endif 
  mad r4.xyz, r4.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r4.xyz, r4.xyzx, -cb2[9].zzzz
  dp3 r0.w, cb2[7].yzwy, -r3.xyzx
  mad r1.z, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r1.w, cb2[8].w, -r0.w, l(1.000000)
  mul r1.w, r1.w, r1.w
  mul r1.w, r1.w, l(12.566371)
  div r1.z, r1.z, r1.w
  add r0.x, r0.x, -cb2[10].w
  mul_sat r0.x, r0.x, cb2[11].w
  mul r0.x, r0.x, r1.z
  mov_sat r0.w, r0.w
  mad r0.w, r0.w, r0.w, l(1.000000)
  mad r0.w, r0.w, l(0.05968310), l(-1.000000)
  mad r0.w, cb2[8].z, r0.w, l(1.000000)
  mul r3.xyz, r0.xxxx, cb2[11].xyzx
  mad r3.xyz, r0.wwww, cb2[10].xyzx, r3.xyzx
  mul r3.xyz, r3.xyzx, cb2[9].wwww
  add r5.yzw, -r4.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
  mul r3.xyz, r3.xyzx, r5.yzwy
  mad r3.xyz, r2.xyzx, r4.xyzx, r3.xyzx
else 
  mul r0.x, r11.z, cb2[6].x
  mad r0.w, cb2[6].x, r11.z, cb2[5].x
  lt r1.z, |r0.x|, l(0.000100)
  min r1.w, r0.w, l(64.000000)
  mul r1.w, r1.w, l(1.442695)
  exp r1.w, r1.w
  mov_sat r2.w, cb2[6].z
  lt r3.w, r0.w, l(0.000000)
  add r0.w, r0.w, l(1.000000)
  movc r0.w, r3.w, r1.w, r0.w
  add r0.w, r0.w, -cb2[6].z
  movc r0.x, r1.z, l(1.000000), r0.x
  div r0.x, r0.w, r0.x
  movc r0.x, r1.z, r2.w, r0.x
  mul r0.x, r0.x, cb2[5].z
  dp3 r0.w, r11.xyzx, r11.xyzx
  sqrt r1.z, r0.w
  mad r0.x, r0.x, r1.z, cb2[5].w
  exp r0.x, r0.x
  min r0.x, r0.x, l(1.000000)
  add r0.x, -r0.x, l(1.000000)
  rsq r0.w, r0.w
  mul r4.xyz, r0.wwww, r11.xyzx
  dp3 r0.w, cb2[7].yzwy, r4.xyzx
  mad_sat r0.w, cb2[8].y, r0.w, cb2[8].x
  add r4.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r4.xyzw, r0.wwww, r4.xyzw, cb2[4].xyzw
  mul r0.x, r0.x, r4.w
  add r4.xyz, -r2.xyzx, r4.xyzx
  mad r3.xyz, r0.xxxx, r4.xyzx, r2.xyzx
endif 
mul r2.xyz, r3.xyzx, cb1[85].yyyy
ge r3.xyz, r2.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r2.xyz, r2.xyzx, r3.xyzx
min r2.xyz, r2.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
ilt r0.x, l(0), cb2[55].w
and r3.xyzw, cb2[55].wwww, l(32, 3, 64, 12)
ine r1.zw, r3.xxxz, l(0, 0, 0, 0)
ieq r3.xy, r3.ywyy, l(3, 0, 0, 0)
and r1.zw, r1.zzzw, r3.xxxy
and r3.xy, r1.zwzz, l(0x3e4ccccd, 0x3e4ccccd, 0, 0)
and r0.w, cb2[55].w, l(16)
ine r1.z, r0.w, l(0)
ieq r0.w, r0.w, l(0)
and r0.w, r0.w, r1.z
and r3.z, r0.w, l(0x3e4ccccd)
mad r3.xyz, r3.xyzx, cb1[85].xxxx, -r2.xyzx
mad r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r2.xyzx
movc r2.xyz, r0.xxxx, r3.xyzx, r2.xyzx
if_nz cb2[52].y
  if_nz cb2[53].y
    switch cb2[53].y
      case l(1)
      and r0.x, r5.x, l(7)
      break 
      case l(2)
      ubfe r0.x, l(3), l(8), r5.x
      break 
      case l(3)
      ushr r0.x, r5.x, l(16)
      break 
      case l(4)
      and r0.x, r15.w, l(255)
      break 
      case l(5)
      ubfe r0.x, l(8), l(8), r15.w
      break 
      default 
      mov r0.x, l(0)
      break 
    endswitch 
    utof r0.x, r0.x
    mul r0.x, r0.x, cb2[53].z
    mad r3.xyz, r0.xxxx, l(0.500000, 0.500000, 0.500000, 0.000000), -r2.xyzx
    mad r2.xyz, cb2[53].wwww, r3.xyzx, r2.xyzx
  endif 
endif 
store_uav_typed u0.xyzw, r1.xyyy, r2.xyzx
if_nz r6.w
  add r1.xyz, r11.xyzx, cb1[24].xyzx
  and r1.w, r5.x, l(7)
  store_structured u2.xyzw, cb2[52].x, l(92), r1.xyzw
  and r0.x, r15.w, l(255)
  store_structured u2.x, cb2[52].x, l(108), r0.x
endif 
if_nz cb2[52].y
  and r0.x, r5.x, l(7)
  atomic_iadd g1, l(0), r0.x
  ubfe r0.w, l(3), l(8), r5.x
  atomic_iadd g1, l(4), r0.w
  ushr r1.x, r5.x, l(16)
  atomic_iadd g1, l(8), r1.x
  and r1.y, r15.w, l(255)
  atomic_iadd g1, l(12), r1.y
  ubfe r1.z, l(8), l(8), r15.w
  atomic_iadd g1, l(16), r1.z
  atomic_umax g2, l(0), r0.x
  atomic_umax g2, l(4), r0.w
  atomic_umax g2, l(8), r1.x
  atomic_umax g2, l(12), r1.y
  atomic_umax g2, l(16), r1.z
  imm_atomic_iadd r1.x, g0, l(0), l(1)
  ieq r0.x, r1.x, l(63)
  if_nz r0.x
    ld_raw r1.xyzw, l(0), g1.xyzw
    mov r2.xz, cb2[52].xxxx
    mov r2.yw, l(0,40,0,44)
    atomic_iadd u2, r2.xyxx, r1.x
    atomic_iadd u2, r2.zwzz, r1.y
    mov r2.xz, cb2[52].xxxx
    mov r2.yw, l(0,48,0,52)
    atomic_iadd u2, r2.xyxx, r1.z
    atomic_iadd u2, r2.zwzz, r1.w
    ld_raw r0.x, l(16), g1.xxxx
    mov r1.xz, cb2[52].xxxx
    mov r1.yw, l(0,56,0,0)
    atomic_iadd u2, r1.xyxx, r0.x
    ld_raw r2.xyzw, l(0), g2.xyzw
    atomic_umax u2, r1.zwzz, r2.x
    mov r1.xz, cb2[52].xxxx
    mov r1.yw, l(0,4,0,8)
    atomic_umax u2, r1.xyxx, r2.y
    atomic_umax u2, r1.zwzz, r2.z
    mov r1.xz, cb2[52].xxxx
    mov r1.yw, l(0,12,0,16)
    atomic_umax u2, r1.xyxx, r2.w
    ld_raw r0.x, l(16), g2.xxxx
    atomic_umax u2, r1.zwzz, r0.x
    ieq r0.yz, r0.yyzy, cb2[52].zzwz
    and r0.y, r0.z, r0.y
    if_nz r0.y
      store_structured u2.xyzw, cb2[52].x, l(20), r2.xyzw
      store_structured u2.x, cb2[52].x, l(36), r0.x
    endif 
  endif 
endif 
ret 
// Approximately 2982 instruction slots used
