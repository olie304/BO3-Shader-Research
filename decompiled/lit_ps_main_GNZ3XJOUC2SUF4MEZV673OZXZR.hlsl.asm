//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:37:54 2021
//
//
// Note: shader requires additional functionality:
//       Early depth-stencil
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float alphaRevealSoftEdge;         // Offset:  160 Size:     4
//   float alphaRevealRamp;             // Offset:  164 Size:     4
//   float2 revealScale;                // Offset:  168 Size:     8
//   float3 colorTint;                  // Offset:  176 Size:    12
//   float baseNormalHeight;            // Offset:  188 Size:     4
//   float2 glossRange;                 // Offset:  192 Size:     8
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16 [unused]
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4 [unused]
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// revealSampler                     sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// colorSampler                      sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// specColorSampler                  sampler      NA          NA             s5      1 
// normalSampler                     sampler      NA          NA             s6      1 
// aoSampler                         sampler      NA          NA             s7      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// revealMap                         texture  float4          2d             t0      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// colorMap                          texture  float4          2d            t21      1 
// tintMask                          texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// normalMap                         texture  float4          2d            t24      1 
// glossMap                          texture  float4          2d            t25      1 
// aoMap                             texture  float4          2d            t26      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// gOit_Pixels                           UAV    uint          2d             u6      1 
// gOit_Nodes                            UAV   uint2     2darray             u7      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyz 
// COLOR                    0   xyz         1     NONE   float   xyz 
// COLOR                    1      w        1     NONE   float      w
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xyz         3     NONE   float   xyz 
// TEXCOORD                 2   xyz         4     NONE   float   xyz 
// TEXCOORD                 3   xyz         5     NONE   float   xyz 
// OFFPOSITION              0   xyz         6     NONE   float   xyz 
// SV_IsFrontFace           0   x           7    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | forceEarlyDepthStencil
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[13], immediateIndexed
dcl_constantbuffer CB1[93], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2d (float,float,float,float) t26
dcl_resource_texture2darray (float,float,float,float) t31
dcl_uav_typed_texture2d (uint,uint,uint,uint) u6
dcl_uav_typed_texture2darray (uint,uint,uint,uint) u7
dcl_input_ps_siv linear noperspective v0.xyz, position
dcl_input_ps linear v1.xyz
dcl_input_ps linear v1.w
dcl_input_ps linear v2.xy
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps_sgv constant v7.x, is_front_face
dcl_output o0.xyzw
dcl_temps 45
mul r0.xy, v2.xyxx, cb0[10].zwzz
sample_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t0.xyzw, s1
mad_sat r0.y, v1.w, l(0.998000), l(0.001000)
add r0.z, -r0.y, l(1.000000)
mov_sat r0.w, cb0[10].y
log r0.y, r0.y
mul r0.y, r0.y, r0.w
exp r0.y, r0.y
mov r1.x, -r0.y
log r0.y, r0.z
mul r0.y, r0.y, r0.w
exp r1.y, r0.y
mad_sat r0.yz, cb0[10].xxxx, r1.xxyx, r0.zzzz
add r0.x, -r0.y, r0.x
add r0.y, -r0.y, r0.z
div_sat r0.w, r0.x, r0.y
eq r1.x, r0.w, l(0.000000)
if_nz r1.x
  mov o0.xyzw, l(0,0,0,0)
  ret 
endif 
sample_indexable(texture2d)(float,float,float,float) r1.xyz, v2.xyxx, t21.xyzw, s3
sample_indexable(texture2d)(float,float,float,float) r1.w, v2.xyxx, t22.yzwx, s3
sample_indexable(texture2d)(float,float,float,float) r2.x, v2.xyxx, t25.xyzw, s5
sample_indexable(texture2d)(float,float,float,float) r2.yzw, v2.xyxx, t24.wxyz, s6
add r3.xyz, cb0[11].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r3.xyz, r1.wwww, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r1.xyz, r1.xyzx, r3.xyzx
mul r1.xyz, r1.xyzx, v1.xyzx
sample_indexable(texture2d)(float,float,float,float) r1.w, v2.xyxx, t26.yzwx, s7
add r3.x, -cb0[12].x, cb0[12].y
mad r2.x, r2.x, r3.x, cb0[12].x
mul_sat r2.x, r2.x, l(0.05882353)
add r2.yzw, r2.yyzw, l(0.000000, -0.500000, -0.500000, -0.000000)
mad r2.yzw, cb0[11].wwww, r2.yyzw, l(0.000000, 0.500000, 0.500000, 0.000000)
mad r2.yz, r2.yyzy, l(0.000000, 1.99218750, 1.99218750, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
dp2 r3.x, r2.yzyy, r2.yzyy
add r3.x, -r3.x, l(1.000000)
max r3.x, r3.x, l(0.000000)
sqrt r3.x, r3.x
mul r2.w, r2.w, r2.w
mul r2.w, r2.w, l(0.33333334)
min r2.w, r2.w, l(1.000000)
movc r3.y, v7.x, l(1.000000), l(-1.000000)
dp3 r3.z, v3.xyzx, v3.xyzx
rsq r3.z, r3.z
mul r4.xyz, r3.zzzz, v3.xyzx
mul r4.xyz, r3.yyyy, r4.xyzx
dp3 r3.z, v4.xyzx, v4.xyzx
rsq r3.z, r3.z
mul r5.xyz, r3.zzzz, v4.xyzx
mul r5.xyz, r3.yyyy, r5.xyzx
dp3 r3.z, v5.xyzx, v5.xyzx
rsq r3.z, r3.z
mul r6.xyz, r3.zzzz, v5.xyzx
mul r3.yzw, r3.yyyy, r6.xxyz
mul r2.x, r2.x, l(-17.000000)
exp r2.x, r2.x
add r2.x, r2.x, r2.w
log r2.x, r2.x
mul r2.x, r2.x, l(-0.05882353)
max r6.y, r2.x, l(0.000000)
mul r2.xzw, r2.zzzz, r3.yyzw
mad r2.xyz, r5.xyzx, r2.yyyy, r2.xzwx
mad r2.xyz, r4.xyzx, r3.xxxx, r2.xyzx
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul r2.xyz, r2.wwww, r2.xyzx
ftou r3.xy, v0.xyxx
ge r3.z, v0.z, l(0.984375)
mul r3.w, v0.z, l(1.01587307)
mad r4.x, v0.z, l(64.000000), l(-63.000000)
movc r3.z, r3.z, r4.x, r3.w
max r3.z, r3.z, l(0.00000001)
rcp r3.z, r3.z
dp3 r3.w, -v6.xyzx, -v6.xyzx
rsq r3.w, r3.w
mul r4.xyz, r3.wwww, -v6.xyzx
ine r4.w, cb1[92].x, l(0)
utof r5.xy, r3.yxyy
dp2 r5.z, r5.yxyy, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r5.z, r5.z
mul r5.z, r5.z, l(52.982918)
frc r5.z, r5.z
mad r5.z, r5.z, l(6.28318548), cb1[70].w
sincos r7.x, r8.x, r5.z
dp2 r5.x, r5.xyxx, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r5.x, r5.x
mul r5.x, r5.x, l(52.982918)
frc r5.x, r5.x
mad r5.x, r5.x, l(6.28318548), cb1[70].w
sincos r5.x, r9.x, r5.x
dp3_sat r6.x, r2.xyzx, r4.xyzx
dp3 r5.y, -r4.xyzx, r2.xyzx
add r5.y, r5.y, r5.y
mad r10.xyz, r2.xyzx, -r5.yyyy, -r4.xyzx
mul r5.y, r6.y, l(17.000000)
exp r5.y, r5.y
add r5.y, r5.y, l(2.000000)
div r5.y, l(2.000000), r5.y
sqrt r5.z, r5.y
add r5.w, -r6.y, l(1.000000)
mul r6.z, r5.w, l(5.000000)
mad r6.w, r5.w, l(5.000000), l(-2.500000)
mul r6.w, r6.w, l(0.400000)
max r6.w, r6.w, l(0.000000)
mul r6.w, r6.w, l(100.000000)
mad r7.zw, -r5.wwww, l(0.000000, 0.000000, 10.000000, 5.000000), l(0.000000, 0.000000, 6.857410, 7.085000)
exp r7.z, r7.z
mul r7.z, r6.x, r7.z
mul r8.w, r5.w, r6.z
mad r7.w, -r8.w, l(2.015905), r7.w
exp r7.w, r7.w
mul r7.w, r6.x, r7.w
mul r7.zw, r7.zzzw, l(0.000000, 0.000000, 9.136810, 9.708090)
max r7.z, r7.w, r7.z
max r7.z, r7.z, l(1.268160)
iadd r7.w, cb2[0].y, -cb2[58].x
mul r3.z, r3.z, l(0.00781250)
min r3.z, r3.z, l(15.000000)
ftou r3.z, r3.z
ushr r11.xy, r3.xyxx, l(6, 6, 0, 0)
ishl r11.z, r3.z, l(4)
and r3.x, r7.w, l(-32)
iadd r3.y, -r3.x, r7.w
and r3.z, cb2[0].y, l(-32)
iadd r8.w, -r3.z, cb2[0].y
mov r12.xy, l(0,0,0,0)
mov r13.w, l(0)
mov r14.yz, l(0,0,1.000000,0)
mov r15.xy, l(0,0,0,0)
mov r16.x, l(1.000000)
mov r17.xy, l(0,0,0,0)
mov r18.xy, l(0,0,0,0)
mov r19.xyzw, l(0,0,0,0)
mov r20.yzw, l(0,0,0,0)
mov r9.y, r3.x
loop 
  uge r9.z, r9.y, cb2[0].y
  breakc_nz r9.z
  ushr r12.z, r9.y, l(5)
  iadd r13.xyz, r11.xyzx, r12.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r9.z, r13.xyzw, t7.yzxw
  ieq r9.w, r3.x, r9.y
  bfi r11.w, r3.y, l(0), l(0), r9.z
  movc r9.z, r9.w, r11.w, r9.z
  ieq r9.w, r3.z, r9.y
  ubfe r11.w, r8.w, l(0), r9.z
  movc r9.z, r9.w, r11.w, r9.z
  iadd r9.w, r9.y, cb2[0].x
  mov r21.xyzw, r19.xyzw
  mov r22.xyz, r20.yzwy
  mov r11.w, r9.z
  loop 
    breakc_z r11.w
    firstbit_lo r12.z, r11.w
    ishl r12.w, l(1), r12.z
    and r13.x, r11.w, r12.w
    if_nz r13.x
      xor r11.w, r11.w, r12.w
      iadd r12.w, r9.w, r12.z
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r23.xyzw, r12.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r13.xy, r12.w, l(16), t11.xyxx
      add r23.xyz, r23.xyzx, -v6.xyzx
      mov r13.z, r23.w
      lt r13.xyz, |r23.xyzx|, r13.zxyz
      and r12.w, r13.y, r13.x
      and r12.w, r13.z, r12.w
      if_nz r12.w
        iadd r12.z, r9.y, r12.z
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r23.xyzw, r12.z, l(0), t15.wxyz
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r13.xy, r12.z, l(96), t15.xyxx
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r12.z, l(116), t15.zwxy
        add r25.xyz, -r23.yzwy, v6.xyzx
        and r12.w, r24.w, l(0x0000ffff)
        ubfe r13.z, l(6), l(25), r24.w
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r26.xyzw, r12.w, l(0), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r12.w, l(16), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r12.w, l(32), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r12.w, l(48), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r12.w, l(64), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r12.w, l(80), t16.xyzw
        dp3 r14.w, r26.xyzx, r25.xyzx
        add_sat r14.w, r26.w, r14.w
        dp3 r15.w, r27.xyzx, r25.xyzx
        add_sat r15.w, r27.w, r15.w
        mul r14.w, r14.w, r15.w
        dp3 r15.w, r28.xyzx, r25.xyzx
        add_sat r15.w, r28.w, r15.w
        mul r14.w, r14.w, r15.w
        dp3 r15.w, r29.xyzx, r25.xyzx
        add_sat r15.w, r29.w, r15.w
        mul r14.w, r14.w, r15.w
        dp3 r15.w, r30.xyzx, r25.xyzx
        add_sat r15.w, r30.w, r15.w
        mul r14.w, r14.w, r15.w
        dp3 r15.w, r31.xyzx, r25.xyzx
        add_sat r15.w, r31.w, r15.w
        mul r14.x, r14.w, r15.w
        and r14.w, r13.x, l(1)
        movc r14.xw, r14.wwww, r14.xxxy, r14.zzzx
        mov r15.w, r13.x
        mov r26.xy, r14.xwxx
        mov r16.z, l(1)
        loop 
          ige r16.w, r16.z, r13.z
          breakc_nz r16.w
          iadd r16.w, r12.w, r16.z
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r16.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r16.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r16.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r16.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r16.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r16.w, l(80), t16.xyzw
          dp3 r16.w, r27.xyzx, r25.xyzx
          add_sat r16.w, r27.w, r16.w
          mul r16.w, r16.w, r26.x
          dp3 r17.w, r28.xyzx, r25.xyzx
          add_sat r17.w, r28.w, r17.w
          mul r16.w, r16.w, r17.w
          dp3 r17.w, r29.xyzx, r25.xyzx
          add_sat r17.w, r29.w, r17.w
          mul r16.w, r16.w, r17.w
          dp3 r17.w, r30.xyzx, r25.xyzx
          add_sat r17.w, r30.w, r17.w
          mul r16.w, r16.w, r17.w
          dp3 r17.w, r31.xyzx, r25.xyzx
          add_sat r17.w, r31.w, r17.w
          mul r16.w, r16.w, r17.w
          dp3 r17.w, r32.xyzx, r25.xyzx
          add_sat r17.w, r32.w, r17.w
          mul r26.x, r16.w, r17.w
          ushr r18.w, r15.w, l(2)
          ubfe r23.w, l(1), l(2), r15.w
          and r25.w, r18.w, l(2)
          max r26.z, r26.x, r26.y
          mad r16.w, -r16.w, r17.w, l(1.000000)
          mul r16.w, r16.w, r26.y
          movc r16.y, r25.w, r16.w, r26.z
          movc r26.xy, r23.wwww, r26.xyxx, r16.xyxx
          iadd r16.z, r16.z, l(1)
          mov r15.w, r18.w
        endloop 
        mov_sat r26.y, r26.y
        mul r12.w, r13.y, r26.y
        lt r13.x, l(0.000000), r12.w
        if_nz r13.x
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r12.z, l(16), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r12.z, l(32), t15.yxwz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r12.z, l(48), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r12.z, l(64), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r12.z, l(80), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r12.z, l(132), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r12.z, l(148), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r12.z, l(164), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r12.z, l(180), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r12.z, l(196), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xy, r12.z, l(212), t15.xyxx
          mad r22.z, r26.y, r13.y, r22.z
          mul r12.z, r24.z, r12.w
          mov r24.z, r32.z
          dp3 r12.w, r10.xyzx, r24.xyzx
          dp3 r13.x, r25.xyzx, r24.xyzx
          add r13.x, -r32.w, r13.x
          ge r13.y, r13.x, l(0.000000)
          max r13.x, r6.w, |r13.x|
          movc r13.x, r13.y, r13.x, -r13.x
          max r12.w, -r12.w, l(0.00000010)
          div r12.w, r13.x, r12.w
          min r12.w, |r12.w|, l(131072.000000)
          mov r32.z, r33.z
          dp3 r13.x, r10.xyzx, r32.xyzx
          dp3 r13.y, r25.xyzx, r32.xyzx
          add r13.y, -r33.w, r13.y
          ge r13.z, r13.y, l(0.000000)
          max r13.y, r6.w, |r13.y|
          movc r13.y, r13.z, r13.y, -r13.y
          max r13.x, -r13.x, l(0.00000010)
          div r13.x, r13.y, r13.x
          min r12.w, r12.w, |r13.x|
          mov r33.z, r34.z
          dp3 r13.x, r10.xyzx, r33.xyzx
          dp3 r13.y, r25.xyzx, r33.xyzx
          add r13.y, -r34.w, r13.y
          ge r13.z, r13.y, l(0.000000)
          max r13.y, r6.w, |r13.y|
          movc r13.y, r13.z, r13.y, -r13.y
          max r13.x, -r13.x, l(0.00000010)
          div r13.x, r13.y, r13.x
          min r12.w, r12.w, |r13.x|
          mov r34.z, r35.z
          dp3 r13.x, r10.xyzx, r34.xyzx
          dp3 r13.y, r25.xyzx, r34.xyzx
          add r13.y, -r35.w, r13.y
          ge r13.z, r13.y, l(0.000000)
          max r13.y, r6.w, |r13.y|
          movc r13.y, r13.z, r13.y, -r13.y
          max r13.x, -r13.x, l(0.00000010)
          div r13.x, r13.y, r13.x
          min r12.w, r12.w, |r13.x|
          mov r35.z, r36.x
          dp3 r13.x, r10.xyzx, r35.xyzx
          dp3 r13.y, r25.xyzx, r35.xyzx
          add r13.y, -r36.y, r13.y
          ge r13.z, r13.y, l(0.000000)
          max r13.y, r6.w, |r13.y|
          movc r13.y, r13.z, r13.y, -r13.y
          max r13.x, -r13.x, l(0.00000010)
          div r13.x, r13.y, r13.x
          min r12.w, r12.w, |r13.x|
          mov r37.zw, r36.zzzw
          dp3 r13.x, r10.zxyz, r37.xzwx
          dp3 r13.y, r25.zxyz, r37.xzwx
          add r13.y, -r37.y, r13.y
          ge r13.z, r13.y, l(0.000000)
          max r13.y, r6.w, |r13.y|
          movc r13.y, r13.z, r13.y, -r13.y
          max r13.x, -r13.x, l(0.00000010)
          div r13.x, r13.y, r13.x
          min r12.w, r12.w, |r13.x|
          mov r13.x, r29.w
          mov r13.yz, r30.zzwz
          add r13.xyz, r25.xyzx, r13.xyzx
          mad r13.xyz, r10.xyzx, r12.wwww, r13.xyzx
          dp3 r14.x, r13.xyzx, r13.xyzx
          sqrt r14.x, r14.x
          div r12.w, r12.w, r14.x
          add r12.w, r12.w, r12.w
          sqrt r12.w, r12.w
          mad r12.w, r5.w, l(5.000000), r12.w
          add r12.w, r12.w, l(-0.844800)
          mov r23.y, r27.z
          mov r23.z, r28.x
          dp3 r32.x, r13.xyzx, r23.xyzx
          mov r24.xy, r27.xwxx
          mov r24.z, r28.w
          dp3 r32.y, r13.xyzx, r24.xyzx
          mov r28.x, r27.y
          dp3 r32.z, r13.xyzx, r28.xyzx
          ubfe r13.x, l(9), l(16), r24.w
          utof r32.w, r13.x
          sample_l_indexable(texturecubearray)(float,float,float,float) r13.xyz, r32.xyzw, t8.xyzw, s2, r12.w
          dp3 r27.x, r25.xyzx, r23.xyzx
          dp3 r27.y, r25.xyzx, r24.xyzx
          dp3 r27.z, r25.xyzx, r28.xyzx
          mad_sat r16.yzw, r27.xxyz, r29.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
          mov r30.z, r31.x
          mad r16.yzw, r16.yyzw, r30.xxyz, r31.yyzw
          dp3 r32.x, r2.xyzx, r23.xyzx
          dp3 r32.y, r2.xyzx, r24.xyzx
          dp3 r32.z, r2.xyzx, r28.xyzx
          lt r23.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r32.xyzx
          movc r15.z, r23.x, l(0), l(0.500000)
          add r24.xyz, r15.xyzx, r16.yzwy
          sample_l_indexable(texture3d)(float,float,float,float) r24.xyz, r24.xyzx, t17.xyzw, s4, l(0.000000)
          mul r25.xyz, r32.xyzx, r32.xyzx
          mul r25.xyz, r12.zzzz, r25.xyzx
          movc r17.z, r23.y, l(0), l(0.500000)
          add r23.xyw, r16.yzyw, r17.xyxz
          sample_l_indexable(texture3d)(float,float,float,float) r23.xyw, r23.xywx, t18.xywz, s4, l(0.000000)
          mul r23.xyw, r25.yyyy, r23.xyxw
          mad r23.xyw, r24.xyxz, r25.xxxx, r23.xyxw
          movc r18.z, r23.z, l(0), l(0.500000)
          add r16.yzw, r16.yyzw, r18.xxyz
          sample_l_indexable(texture3d)(float,float,float,float) r16.yzw, r16.yzwy, t19.wxyz, s4, l(0.000000)
          mad r16.yzw, r16.yyzw, r25.zzzz, r23.xxyw
          sample_l_indexable(texturecubearray)(float,float,float,float) r23.xyz, r32.xyzw, t8.xyzw, s2, l(6.000000)
          mul r24.xyz, r16.yzwy, r23.xyzx
          dp3 r12.w, r24.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r21.xyz, r16.yzwy, r23.xyzx, r21.xyzx
          mul r14.x, r7.z, r12.w
          mul r13.xyz, r12.zzzz, r13.xyzx
          dp3 r12.z, r13.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r12.z, r7.z, r12.w, r12.z
          div r12.z, r14.x, r12.z
          mov r23.x, r21.w
          mov r23.yz, r22.xxyx
          mad r22.xyw, r13.yzyx, r12.zzzz, r23.yzyx
          mov r21.w, r22.w
        endif 
      endif 
    endif 
  endloop 
  mov r19.xyzw, r21.xyzw
  mov r20.yzw, r22.xxyz
  iadd r9.y, r9.y, l(32)
endloop 
lt r3.z, r20.w, l(1.000000)
if_nz r3.z
  mov r12.xy, l(0,0,0,0)
  mov r13.w, l(0)
  mov r14.yz, l(0,0,1.000000,0)
  mov r15.xy, l(0,0,0,0)
  mov r16.x, l(1.000000)
  mov r17.xy, l(0,0,0,0)
  mov r18.xy, l(0,0,0,0)
  mov r21.x, r19.w
  mov r21.yzw, r20.yyzw
  mov r9.yzw, r19.xxyz
  mov r3.z, r20.w
  mov r8.w, l(0)
  loop 
    uge r11.w, r8.w, r7.w
    breakc_nz r11.w
    ushr r12.z, r8.w, l(5)
    iadd r13.xyz, r11.xyzx, r12.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r11.w, r13.xyzw, t7.yzwx
    ieq r12.z, r3.x, r8.w
    ubfe r12.w, r3.y, l(0), r11.w
    movc r11.w, r12.z, r12.w, r11.w
    iadd r12.z, r8.w, cb2[0].x
    mov r22.xyzw, r21.xyzw
    mov r13.xyz, r9.yzwy
    mov r12.w, r3.z
    mov r14.w, r11.w
    loop 
      breakc_z r14.w
      firstbit_lo r15.w, r14.w
      ishl r16.z, l(1), r15.w
      and r16.w, r14.w, r16.z
      if_nz r16.w
        xor r14.w, r14.w, r16.z
        iadd r16.z, r12.z, r15.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r23.xyzw, r16.z, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r24.xy, r16.z, l(16), t11.xyxx
        add r23.xyz, r23.xyzx, -v6.xyzx
        mov r24.z, r23.w
        lt r23.xyz, |r23.xyzx|, r24.zxyz
        and r16.z, r23.y, r23.x
        and r16.z, r23.z, r16.z
        if_nz r16.z
          iadd r15.w, r8.w, r15.w
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r23.xyzw, r15.w, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r16.zw, r15.w, l(96), t15.xxxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r15.w, l(116), t15.zwxy
          add r25.xyz, -r23.yzwy, v6.xyzx
          and r17.w, r24.w, l(0x0000ffff)
          ubfe r18.w, l(6), l(25), r24.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r26.xyzw, r17.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r17.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r17.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r17.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r17.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r17.w, l(80), t16.xyzw
          dp3 r23.w, r26.xyzx, r25.xyzx
          add_sat r23.w, r26.w, r23.w
          dp3 r25.w, r27.xyzx, r25.xyzx
          add_sat r25.w, r27.w, r25.w
          mul r23.w, r23.w, r25.w
          dp3 r25.w, r28.xyzx, r25.xyzx
          add_sat r25.w, r28.w, r25.w
          mul r23.w, r23.w, r25.w
          dp3 r25.w, r29.xyzx, r25.xyzx
          add_sat r25.w, r29.w, r25.w
          mul r23.w, r23.w, r25.w
          dp3 r25.w, r30.xyzx, r25.xyzx
          add_sat r25.w, r30.w, r25.w
          mul r23.w, r23.w, r25.w
          dp3 r25.w, r31.xyzx, r25.xyzx
          add_sat r25.w, r31.w, r25.w
          mul r14.x, r23.w, r25.w
          and r23.w, r16.z, l(1)
          movc r26.xy, r23.wwww, r14.xyxx, r14.zxzz
          mov r14.x, r16.z
          mov r27.xy, r26.xyxx
          mov r23.w, l(1)
          loop 
            ige r25.w, r23.w, r18.w
            breakc_nz r25.w
            iadd r25.w, r17.w, r23.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r25.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r25.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r25.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r25.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r25.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r25.w, l(80), t16.xyzw
            dp3 r25.w, r28.xyzx, r25.xyzx
            add_sat r25.w, r28.w, r25.w
            mul r25.w, r25.w, r27.x
            dp3 r26.z, r29.xyzx, r25.xyzx
            add_sat r26.z, r29.w, r26.z
            mul r25.w, r25.w, r26.z
            dp3 r26.z, r30.xyzx, r25.xyzx
            add_sat r26.z, r30.w, r26.z
            mul r25.w, r25.w, r26.z
            dp3 r26.z, r31.xyzx, r25.xyzx
            add_sat r26.z, r31.w, r26.z
            mul r25.w, r25.w, r26.z
            dp3 r26.z, r32.xyzx, r25.xyzx
            add_sat r26.z, r32.w, r26.z
            mul r25.w, r25.w, r26.z
            dp3 r26.z, r33.xyzx, r25.xyzx
            add_sat r26.z, r33.w, r26.z
            mul r27.x, r25.w, r26.z
            ushr r26.w, r14.x, l(2)
            ubfe r27.z, l(1), l(2), r14.x
            and r27.w, r26.w, l(2)
            max r28.x, r27.x, r27.y
            mad r25.w, -r25.w, r26.z, l(1.000000)
            mul r25.w, r25.w, r27.y
            movc r16.y, r27.w, r25.w, r28.x
            movc r27.xy, r27.zzzz, r27.xyxx, r16.xyxx
            iadd r23.w, r23.w, l(1)
            mov r14.x, r26.w
          endloop 
          add_sat r14.x, -r12.w, r27.y
          mul r16.y, r16.w, r14.x
          lt r16.z, l(0.000000), r16.y
          if_nz r16.z
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r15.w, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r15.w, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r15.w, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r15.w, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r15.w, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r15.w, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r15.w, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r15.w, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r15.w, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r15.w, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xy, r15.w, l(212), t15.xyxx
            mad r22.w, r14.x, r16.w, r22.w
            mul r14.x, r24.z, r16.y
            mov r24.z, r32.z
            dp3 r15.w, r10.xyzx, r24.xyzx
            dp3 r16.y, r25.xyzx, r24.xyzx
            add r16.y, -r32.w, r16.y
            ge r16.z, r16.y, l(0.000000)
            max r16.y, r6.w, |r16.y|
            movc r16.y, r16.z, r16.y, -r16.y
            max r15.w, -r15.w, l(0.00000010)
            div r15.w, r16.y, r15.w
            min r15.w, |r15.w|, l(131072.000000)
            mov r32.z, r33.z
            dp3 r16.y, r10.xyzx, r32.xyzx
            dp3 r16.z, r25.xyzx, r32.xyzx
            add r16.z, -r33.w, r16.z
            ge r16.w, r16.z, l(0.000000)
            max r16.z, r6.w, |r16.z|
            movc r16.z, r16.w, r16.z, -r16.z
            max r16.y, -r16.y, l(0.00000010)
            div r16.y, r16.z, r16.y
            min r15.w, r15.w, |r16.y|
            mov r33.z, r34.z
            dp3 r16.y, r10.xyzx, r33.xyzx
            dp3 r16.z, r25.xyzx, r33.xyzx
            add r16.z, -r34.w, r16.z
            ge r16.w, r16.z, l(0.000000)
            max r16.z, r6.w, |r16.z|
            movc r16.z, r16.w, r16.z, -r16.z
            max r16.y, -r16.y, l(0.00000010)
            div r16.y, r16.z, r16.y
            min r15.w, r15.w, |r16.y|
            mov r34.z, r35.z
            dp3 r16.y, r10.xyzx, r34.xyzx
            dp3 r16.z, r25.xyzx, r34.xyzx
            add r16.z, -r35.w, r16.z
            ge r16.w, r16.z, l(0.000000)
            max r16.z, r6.w, |r16.z|
            movc r16.z, r16.w, r16.z, -r16.z
            max r16.y, -r16.y, l(0.00000010)
            div r16.y, r16.z, r16.y
            min r15.w, r15.w, |r16.y|
            mov r35.z, r36.x
            dp3 r16.y, r10.xyzx, r35.xyzx
            dp3 r16.z, r25.xyzx, r35.xyzx
            add r16.z, -r36.y, r16.z
            ge r16.w, r16.z, l(0.000000)
            max r16.z, r6.w, |r16.z|
            movc r16.z, r16.w, r16.z, -r16.z
            max r16.y, -r16.y, l(0.00000010)
            div r16.y, r16.z, r16.y
            min r15.w, r15.w, |r16.y|
            mov r37.zw, r36.zzzw
            dp3 r16.y, r10.zxyz, r37.xzwx
            dp3 r16.z, r25.zxyz, r37.xzwx
            add r16.z, -r37.y, r16.z
            ge r16.w, r16.z, l(0.000000)
            max r16.z, r6.w, |r16.z|
            movc r16.z, r16.w, r16.z, -r16.z
            max r16.y, -r16.y, l(0.00000010)
            div r16.y, r16.z, r16.y
            min r15.w, r15.w, |r16.y|
            mov r24.x, r29.w
            mov r24.yz, r30.zzwz
            add r16.yzw, r25.xxyz, r24.xxyz
            mad r16.yzw, r10.xxyz, r15.wwww, r16.yyzw
            dp3 r17.w, r16.yzwy, r16.yzwy
            sqrt r17.w, r17.w
            div r15.w, r15.w, r17.w
            add r15.w, r15.w, r15.w
            sqrt r15.w, r15.w
            mad r15.w, r5.w, l(5.000000), r15.w
            add r15.w, r15.w, l(-0.844800)
            mov r23.y, r26.z
            mov r23.z, r28.x
            dp3 r32.x, r16.yzwy, r23.xyzx
            mov r24.xy, r26.xwxx
            mov r24.z, r28.w
            dp3 r32.y, r16.yzwy, r24.xyzx
            mov r28.x, r26.y
            dp3 r32.z, r16.yzwy, r28.xyzx
            ubfe r16.y, l(9), l(16), r24.w
            utof r32.w, r16.y
            sample_l_indexable(texturecubearray)(float,float,float,float) r16.yzw, r32.xyzw, t8.wxyz, s2, r15.w
            dp3 r26.x, r25.xyzx, r23.xyzx
            dp3 r26.y, r25.xyzx, r24.xyzx
            dp3 r26.z, r25.xyzx, r28.xyzx
            mad_sat r25.xyz, r26.xyzx, r29.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
            mov r30.z, r31.x
            mad r25.xyz, r25.xyzx, r30.xyzx, r31.yzwy
            dp3 r32.x, r2.xyzx, r23.xyzx
            dp3 r32.y, r2.xyzx, r24.xyzx
            dp3 r32.z, r2.xyzx, r28.xyzx
            lt r23.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r32.xyzx
            movc r15.z, r23.x, l(0), l(0.500000)
            add r24.xyz, r15.xyzx, r25.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r24.xyz, r24.xyzx, t17.xyzw, s4, l(0.000000)
            mul r26.xyz, r32.xyzx, r32.xyzx
            mul r26.xyz, r14.xxxx, r26.xyzx
            movc r17.z, r23.y, l(0), l(0.500000)
            add r23.xyw, r17.xyxz, r25.xyxz
            sample_l_indexable(texture3d)(float,float,float,float) r23.xyw, r23.xywx, t18.xywz, s4, l(0.000000)
            mul r23.xyw, r26.yyyy, r23.xyxw
            mad r23.xyw, r24.xyxz, r26.xxxx, r23.xyxw
            movc r18.z, r23.z, l(0), l(0.500000)
            add r24.xyz, r18.xyzx, r25.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r24.xyz, r24.xyzx, t19.xyzw, s4, l(0.000000)
            mad r23.xyz, r24.xyzx, r26.zzzz, r23.xywx
            sample_l_indexable(texturecubearray)(float,float,float,float) r24.xyz, r32.xyzw, t8.xyzw, s2, l(6.000000)
            mul r25.xyz, r23.xyzx, r24.xyzx
            dp3 r15.z, r25.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r13.xyz, r23.xyzx, r24.xyzx, r13.xyzx
            mul r15.w, r7.z, r15.z
            mul r16.yzw, r14.xxxx, r16.yyzw
            dp3 r14.x, r16.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r14.x, r7.z, r15.z, r14.x
            div r14.x, r15.w, r14.x
            mad r22.xyz, r16.yzwy, r14.xxxx, r22.xyzx
          endif 
        endif 
      endif 
    endloop 
    mov r21.xyzw, r22.xyzw
    mov r9.yzw, r13.xxyz
    iadd r8.w, r8.w, l(32)
  endloop 
  mov r20.xyzw, r21.zxyw
  mov r19.xyz, r9.yzwy
  mov r20.xyzw, r20.yzxw
else 
  mov r20.x, r19.w
endif 
max r3.x, r20.w, l(1.000000)
rcp r3.x, r3.x
mov_sat r20.w, r20.w
mul r9.yzw, r3.xxxx, r19.xxyz
mul r12.xyz, r3.xxxx, r20.xyzx
lt r3.y, r20.w, l(0.990000)
if_nz r3.y
  add r3.y, -r20.w, l(1.000000)
  mul r3.z, r3.y, cb2[19].x
  add r13.xyz, v6.xyzx, -cb2[35].xyzx
  mul r14.x, r13.x, cb2[35].w
  mul r14.yz, r13.yyzy, cb2[36].xxyx
  add_sat r13.xyz, r14.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mul r14.xy, r13.xyxx, cb2[36].zwzz
  mul r14.z, r13.z, cb2[37].x
  add r13.xyz, r14.xyzx, cb2[37].yzwy
  lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r2.xyzx
  movc r14.xyz, r14.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
  mov r14.w, l(0)
  add r15.xyz, r13.xyzx, r14.wwxw
  sample_l_indexable(texture3d)(float,float,float,float) r15.xyz, r15.xyzx, t17.xyzw, s4, l(0.000000)
  mul r16.xyz, r2.xyzx, r2.xyzx
  mul r16.xyz, r3.zzzz, r16.xyzx
  add r17.xyz, r13.xyzx, r14.wwyw
  sample_l_indexable(texture3d)(float,float,float,float) r17.xyz, r17.xyzx, t18.xyzw, s4, l(0.000000)
  mul r17.xyz, r16.yyyy, r17.xyzx
  mad r15.xyz, r15.xyzx, r16.xxxx, r17.xyzx
  add r13.xyz, r13.xyzx, r14.wwzw
  sample_l_indexable(texture3d)(float,float,float,float) r13.xyz, r13.xyzx, t19.xyzw, s4, l(0.000000)
  mad r13.xyz, r13.xyzx, r16.zzzz, r15.xyzx
  mov r2.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r14.xyz, r2.xyzw, t8.xyzw, s2, l(6.000000)
  mul r13.xyz, r13.xyzx, r14.xyzx
  dp3 r2.w, r13.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  mad r9.yzw, r19.xxyz, r3.xxxx, r13.xxyz
  mov r10.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r13.xyz, r10.xyzw, t8.xyzw, s2, r6.z
  mad r3.x, cb2[19].x, r3.y, -r2.w
  mad r2.w, r6.y, r3.x, r2.w
  mad r12.xyz, r13.xyzx, r2.wwww, r12.xyzx
endif 
add r2.w, r1.w, r6.x
log r2.w, |r2.w|
mul r2.w, r2.w, r5.z
exp r2.w, r2.w
add r2.w, r1.w, r2.w
add_sat r2.w, r2.w, l(-1.000000)
mul r13.xyz, r1.wwww, r9.yzwy
mad r3.xy, r6.xyxx, l(0.984375, 0.984375, 0.000000, 0.000000), l(0.00781250, 0.00781250, 0.000000, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r3.xy, r3.xyxx, t5.xyzw, s2, l(0.000000)
mul r6.yzw, r2.wwww, r12.xxyz
mul r12.xyz, r3.xxxx, r6.zwyz
mul r3.xyz, r3.yyyy, r6.yzwy
sqrt r1.w, r5.z
mad r1.w, r1.w, l(0.500000), l(0.500000)
mul r1.w, r1.w, r1.w
mul r2.w, r1.w, l(0.500000)
mad r1.w, -r1.w, l(0.500000), l(1.000000)
mad r5.w, r6.x, r1.w, r2.w
mul r1.w, r1.w, r5.w
mul r2.w, r2.w, r5.w
dp3 r5.w, r2.xyzx, cb2[17].xyzx
mov_sat r6.y, r5.w
ge r6.z, l(0.000000), r6.y
if_nz r6.z
  mov r6.w, l(0)
endif 
if_z r6.z
  mul r9.yzw, v6.yyyy, cb2[29].xxyz
  mad r9.yzw, v6.xxxx, cb2[28].xxyz, r9.yyzw
  mad r9.yzw, v6.zzzz, cb2[30].xxyz, r9.yyzw
  add r9.yzw, r9.yyzw, cb2[31].xxyz
  add r6.z, r9.w, -cb2[17].w
  mad r6.z, -r6.z, l(0.00006104), l(1.000000)
  mov_sat r7.z, r6.z
  eq r7.z, r6.z, r7.z
  if_nz r7.z
    mov r7.zw, l(0,0,0,0)
    loop 
      ge r8.w, r7.z, l(3.000000)
      breakc_nz r8.w
      ftou r8.w, r7.z
      add r14.xy, r9.yzyy, -cb2[r8.w + 20].xyxx
      max r10.w, |r14.y|, |r14.x|
      mul r7.w, r10.w, cb2[r8.w + 20].z
      lt r8.w, r7.w, l(1.000000)
      if_nz r8.w
        break 
      endif 
      add r7.z, r7.z, l(1.000000)
      mov r7.w, l(0)
    endloop 
  else 
    mov r7.zw, l(0,0,3.000000,0)
  endif 
  ge r8.w, r7.z, l(3.000000)
  if_nz r8.w
    mul r14.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
    rcp r15.xz, r14.xxxx
    mov r15.y, -r15.z
    mad r14.xyz, r9.yzyy, r15.xyzx, r14.yzyy
    add r15.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r14.xyz, r14.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r14.xyz, r15.xyzx, r14.xyzx
    mul r15.xy, r14.zyzz, cb2[32].xxxx
    round_ni r15.xy, r15.xyxx
    mul r10.w, r15.y, cb2[27].x
    mad r10.w, r10.w, cb2[32].x, r15.x
    ftou r10.w, r10.w
    iadd r10.w, r10.w, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r11.w, r10.w, l(0), t23.xxxx
    and r14.w, r11.w, l(0x40000000)
    ishl r15.x, r11.w, l(2)
    if_z r14.w
      and r14.w, r11.w, l(0x01ffffff)
      iadd r16.x, r10.w, r14.w
      ushr r10.w, r11.w, l(25)
      utof r10.w, r10.w
      mul r14.xyz, r10.wwww, r14.xyzx
      frc r14.xyz, r14.xyzx
      mul r14.xyz, r14.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
      ftou r14.xyz, r14.xyzx
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.z, r16.x, l(0), t23.xxxx
      ushr r15.yz, r14.zzyz, l(0, 6, 6, 0)
      and r10.w, r16.z, l(0xc0000000)
      iadd r11.w, r16.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r11.w, r11.w, l(0), t23.xxxx
      movc r11.w, r15.z, r16.z, r11.w
      ushr r14.w, r11.w, l(13)
      movc r11.w, r15.y, r14.w, r11.w
      and r11.w, r11.w, l(8191)
      iadd r17.x, r11.w, r16.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.z, r17.x, l(0), t23.xxxx
      mov r16.y, l(0)
      mov r17.y, l(1)
      movc r15.yzw, r10.wwww, r16.xxyz, r17.xxyz
      movc r17.yz, r10.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r18.xy, r14.zyzz, r17.yyyy
      and r18.xy, r18.xyxx, l(1, 1, 0, 0)
      and r11.w, r15.w, l(0xc0000000)
      iadd r14.w, r15.y, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r14.w, r14.w, l(0), t23.xxxx
      movc r14.w, r18.y, r15.w, r14.w
      ushr r16.w, r14.w, l(13)
      movc r14.w, r18.x, r16.w, r14.w
      and r14.w, r14.w, l(8191)
      iadd r17.x, r14.w, r15.y
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.w, r17.x, l(0), t23.xxxx
      movc r15.yzw, r11.wwww, r15.yyzw, r17.xxzw
      movc r15.yzw, r10.wwww, r16.xxyz, r15.yyzw
      and r10.w, r15.w, l(0xc0000000)
      if_z r10.w
        iadd r10.w, -r15.z, l(6)
        ushr r16.xy, r14.zyzz, r10.wwww
        or r10.w, r15.w, l(0x40000000)
        bfi r11.w, l(1), l(1), r16.y, l(0)
        bfi r11.w, l(1), l(0), r16.x, r11.w
        imul null, r11.w, r11.w, l(10)
        ushr r10.w, r10.w, r11.w
        and r10.w, r10.w, l(1023)
        iadd r16.x, r10.w, r15.y
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.w, r16.x, l(0), t23.xxxx
        iadd r16.yz, r15.zzzz, l(0, 1, 2, 0)
        iadd r10.w, -r16.y, l(6)
        ushr r17.xy, r14.zyzz, r10.wwww
        and r10.w, r16.w, l(0xc0000000)
        or r11.w, r16.w, l(0x40000000)
        bfi r14.w, l(1), l(1), r17.y, l(0)
        bfi r14.w, l(1), l(0), r17.x, r14.w
        imul null, r14.w, r14.w, l(10)
        ushr r11.w, r11.w, r14.w
        and r11.w, r11.w, l(1023)
        iadd r17.x, r11.w, r16.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.z, r17.x, l(0), t23.xxxx
        mov r17.y, r16.z
        movc r17.xyz, r10.wwww, r16.xywx, r17.xyzx
        iadd r11.w, -r17.y, l(6)
        ushr r16.yz, r14.zzyz, r11.wwww
        and r11.w, r17.z, l(0xc0000000)
        or r14.w, r17.z, l(0x40000000)
        bfi r15.z, l(1), l(1), r16.z, l(0)
        bfi r15.z, l(1), l(0), r16.y, r15.z
        imul null, r15.z, r15.z, l(10)
        ushr r14.w, r14.w, r15.z
        and r14.w, r14.w, l(1023)
        iadd r18.x, r14.w, r17.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.y, r18.x, l(0), t23.xxxx
        movc r16.yz, r11.wwww, r17.xxzx, r18.xxyx
        movc r15.yw, r10.wwww, r16.xxxw, r16.yyyz
      endif 
      and r10.w, r15.w, l(0xc0000000)
      if_z r10.w
        ubfe r11.w, l(14), l(15), r15.w
        utof r11.w, r11.w
        mul r11.w, r11.w, cb2[27].w
        mul r11.w, r11.w, l(0.00006104)
        and r16.xy, r15.wwww, l(0x00007fff, 0x20000000, 0, 0)
        utof r14.w, r16.x
        mul r14.w, r14.w, cb2[27].w
        mul r14.w, r14.w, l(0.00003052)
        and r15.z, r14.y, l(3)
        iadd r15.z, r15.z, r15.y
        iadd r15.z, r15.z, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.z, r15.z, l(0), t23.xxxx
        bfi r16.xzw, l(2, 0, 2, 1), l(3, 0, 1, 4), r14.xxyz, l(0, 0, 0, 0)
        ushr r14.x, r15.z, r16.x
        and r14.x, r14.x, l(255)
        utof r14.x, r14.x
        mul r14.x, r14.w, r14.x
        mad r14.x, r14.x, l(0.00392157), r11.w
        iadd r14.y, r16.z, l(1)
        ubfe r14.z, l(1), l(1), r14.z
        iadd r14.y, r14.z, r14.y
        iadd r14.y, r14.y, r15.y
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r14.y, r14.y, l(0), t23.xxxx
        ushr r14.y, r14.y, r16.w
        and r14.y, r14.y, l(0x0000ffff)
        utof r14.y, r14.y
        mul r14.y, r14.w, r14.y
        mad r11.w, r14.y, l(0.00001526), r11.w
        movc r15.x, r16.y, r14.x, r11.w
      else 
        and r11.w, r15.w, l(0x80000000)
        iadd r14.x, r15.y, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r14.x, r14.x, l(0), t23.xxxx
        movc r11.w, r11.w, r14.x, l(0)
        ishl r14.x, r15.w, l(2)
        ushr r14.y, r11.w, l(16)
        f16tof32 r14.y, r14.y
        and r11.w, r11.w, l(0x0000ffff)
        f16tof32 r11.w, r11.w
        mad r14.x, r9.y, r14.y, r14.x
        mad r11.w, r9.z, r11.w, r14.x
        movc r15.x, r10.w, r11.w, r15.x
      endif 
    endif 
    mad r9.w, -cb2[27].z, l(2.000000), r9.w
    lt r9.w, r15.x, r9.w
    movc r6.w, r9.w, l(0), l(1.000000)
  endif 
  if_z r8.w
    if_z cb2[58].y
      ftou r8.w, r7.z
      add r14.xy, r9.yzyy, -cb2[r8.w + 20].xyxx
      mul r14.xy, r14.xyxx, cb2[r8.w + 20].zzzz
      mad r14.xy, r14.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r8.w, cb2[26].y
      add r14.z, r7.z, r8.w
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r8.w, r14.xyzx, t13.xxxx, s13, r6.z
      sample_l_indexable(texture2darray)(float,float,float,float) r9.w, r14.xyzx, t31.yzwx, s0, l(0.000000)
      add r8.w, r8.w, r9.w
      add_sat r8.w, r8.w, l(-1.000000)
      mul r9.w, r8.w, r8.w
      mul r6.w, r8.w, r9.w
    endif 
    if_nz cb2[58].y
      mov r14.x, -r7.x
      ftou r8.w, r7.z
      add r7.z, r7.z, l(1.000000)
      min r7.z, r7.z, l(2.000000)
      add r7.w, -r7.w, l(1.000000)
      mul r7.w, r7.w, l(28.000000)
      ftou r7.zw, r7.zzzw
      add r15.xy, r9.yzyy, -cb2[r8.w + 20].xyxx
      mul r15.xy, r15.xyxx, cb2[r8.w + 20].zzzz
      mad r15.xy, r15.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      add r9.yz, r9.yyzy, -cb2[r7.z + 20].xxyx
      mul r9.yz, r9.yyzy, cb2[r7.z + 20].zzzz
      mad r9.yz, r9.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      mov r14.y, r8.x
      mov r14.z, r7.x
      mov r9.w, l(0)
      mov r10.w, l(0)
      loop 
        uge r11.w, r10.w, l(8)
        breakc_nz r11.w
        ult r11.w, r7.w, r10.w
        movc r15.zw, r11.wwww, r9.yyyz, r15.xxxy
        movc r14.w, r11.w, cb2[r7.z + 20].w, cb2[r8.w + 20].w
        movc r11.w, r11.w, r7.z, r8.w
        dp2 r16.x, icb[r10.w + 0].yxyy, r14.xyxx
        dp2 r16.y, icb[r10.w + 0].yxyy, r14.yzyy
        mad r16.xy, r16.xyxx, r14.wwww, r15.zwzz
        iadd r11.w, r11.w, cb2[26].y
        utof r16.z, r11.w
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r11.w, r16.xyzx, t13.xxxx, s13, r6.z
        sample_l_indexable(texture2darray)(float,float,float,float) r14.w, r16.xyzx, t31.yzwx, s0, l(0.000000)
        add r11.w, r11.w, r14.w
        add_sat r11.w, r11.w, l(-1.000000)
        mad r9.w, r11.w, l(0.125000), r9.w
        iadd r10.w, r10.w, l(1)
      endloop 
      mul r6.z, r9.w, r9.w
      mul r6.w, r9.w, r6.z
    endif 
  endif 
endif 
lt r6.z, l(0.000000), r6.y
if_nz r6.z
  lt r6.z, l(0.000000), r6.w
  if_nz r6.z
    mul r6.z, r5.y, cb2[18].w
    mul r6.z, r6.y, r6.z
    if_nz cb2[23].x
      add r14.xyz, v6.xyzx, cb1[24].xyzx
      mov r14.w, l(1.000000)
      dp4 r7.z, cb2[24].xyzw, r14.xyzw
      dp4 r7.w, cb2[25].xyzw, r14.xyzw
      frc r14.xy, r7.zwzz
      iadd r7.z, l(-1), cb2[23].x
      utof r14.z, r7.z
      sample_l_indexable(texture2darray)(float,float,float,float) r9.yzw, r14.xyzx, t20.wxyz, s2, l(0.000000)
      add r9.yzw, r9.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
      mad r9.yzw, cb2[23].yyyy, r9.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
      mul r9.yzw, r9.yyzw, cb2[18].xxyz
    else 
      mov r9.yzw, cb2[18].xxyz
    endif 
    ushr r7.z, cb2[53].x, l(16)
    ult r7.w, l(0), r7.z
    and r7.w, r4.w, r7.w
    if_nz r7.w
      iadd r7.z, r7.z, cb2[0].x
      iadd r7.z, r7.z, l(-1)
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r7.w, r7.z, l(52), t12.xxxx
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.xyzw, r7.z, l(68), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r7.z, l(84), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r7.z, l(132), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r7.z, l(148), t12.xyzw
      mad r8.w, |r5.w|, l(-0.200000), l(0.400000)
      mad r18.xyz, r2.xyzx, r8.wwww, v6.xyzx
      mov r18.w, l(1.000000)
      dp4 r14.x, r14.xyzw, r18.xyzw
      dp4 r14.y, r15.xyzw, r18.xyzw
      mad r14.xy, r14.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      add r14.xy, r17.zwzz, r14.xyxx
      mul r14.xy, r17.xyxx, r14.xyxx
      div r14.zw, r7.wwww, r16.xxxz
      add r15.xy, -r14.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
      ge r15.xy, r14.xyxx, r15.xyxx
      ge r14.zw, r14.zzzw, r14.xxxy
      or r14.zw, r14.zzzw, r15.xxxy
      or r8.w, r14.w, r14.z
      if_z r8.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r8.w, r7.z, l(28), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r7.z, l(100), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.zw, r7.z, l(164), t12.xxxy
        dp4 r7.z, r15.xyzw, r18.xyzw
        mov_sat r14.xy, r14.xyxx
        mad r15.xy, r14.xyxx, r16.xzxx, r16.ywyy
        add r7.z, r14.z, r7.z
        div r7.z, r7.z, r14.w
        max r7.z, r7.z, l(0.00006104)
        and r8.w, r8.w, l(0x0000ffff)
        if_nz cb2[58].y
          mov r14.x, -r7.x
          utof r16.z, r8.w
          mov r14.y, r8.x
          mov r14.z, r7.x
          mov r10.w, l(0)
          mov r11.w, l(0)
          loop 
            ige r14.w, r11.w, l(8)
            breakc_nz r14.w
            dp2 r17.x, icb[r11.w + 0].yxyy, r14.xyxx
            dp2 r17.y, icb[r11.w + 0].yxyy, r14.yzyy
            mad r16.xy, r17.xyxx, r7.wwww, r15.xyxx
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r14.w, r16.xyzx, t9.xxxx, s13, r7.z
            mad r10.w, r14.w, l(0.125000), r10.w
            iadd r11.w, r11.w, l(1)
          endloop 
        else 
          utof r15.z, r8.w
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.w, r15.xyzx, t9.xxxx, s13, r7.z
        endif 
        mul r7.z, r10.w, r10.w
        mul r7.z, r10.w, r7.z
      else 
        mov r7.z, l(1.000000)
      endif 
      mul r6.w, r6.w, r7.z
    else 
      and r7.z, cb2[53].x, l(0x0000ffff)
      ult r7.w, l(0), r7.z
      not r8.w, r4.w
      and r7.w, r7.w, r8.w
      if_nz r7.w
        iadd r7.z, r7.z, cb2[0].x
        iadd r7.z, r7.z, l(-1)
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r7.w, r7.z, l(52), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.xyzw, r7.z, l(68), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r7.z, l(84), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r7.z, l(132), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r7.z, l(148), t12.xyzw
        mad r8.w, |r5.w|, l(-0.200000), l(0.400000)
        mad r18.xyz, r2.xyzx, r8.wwww, v6.xyzx
        mov r18.w, l(1.000000)
        dp4 r14.x, r14.xyzw, r18.xyzw
        dp4 r14.y, r15.xyzw, r18.xyzw
        mad r14.xy, r14.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
        add r14.xy, r17.zwzz, r14.xyxx
        mul r14.xy, r17.xyxx, r14.xyxx
        div r14.zw, r7.wwww, r16.xxxz
        add r15.xy, -r14.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
        ge r15.xy, r14.xyxx, r15.xyxx
        ge r14.zw, r14.zzzw, r14.xxxy
        or r14.zw, r14.zzzw, r15.xxxy
        or r8.w, r14.w, r14.z
        if_z r8.w
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r8.w, r7.z, l(28), t12.xxxx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r7.z, l(100), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.zw, r7.z, l(164), t12.xxxy
          dp4 r7.z, r15.xyzw, r18.xyzw
          mov_sat r14.xy, r14.xyxx
          mad r15.xy, r14.xyxx, r16.xzxx, r16.ywyy
          add r7.z, r14.z, r7.z
          div r7.z, r7.z, r14.w
          max r7.z, r7.z, l(0.00006104)
          and r8.w, r8.w, l(0x0000ffff)
          if_nz cb2[58].y
            mov r14.x, -r7.x
            utof r16.z, r8.w
            mov r14.y, r8.x
            mov r14.z, r7.x
            mov r10.w, l(0)
            mov r11.w, l(0)
            loop 
              ige r14.w, r11.w, l(8)
              breakc_nz r14.w
              dp2 r17.x, icb[r11.w + 0].yxyy, r14.xyxx
              dp2 r17.y, icb[r11.w + 0].yxyy, r14.yzyy
              mad r16.xy, r17.xyxx, r7.wwww, r15.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r14.w, r16.xyzx, t9.xxxx, s13, r7.z
              mad r10.w, r14.w, l(0.125000), r10.w
              iadd r11.w, r11.w, l(1)
            endloop 
          else 
            utof r15.z, r8.w
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.w, r15.xyzx, t9.xxxx, s13, r7.z
          endif 
          mul r7.z, r10.w, r10.w
          mul r7.z, r10.w, r7.z
        else 
          mov r7.z, l(1.000000)
        endif 
        mul r6.w, r6.w, r7.z
      endif 
    endif 
    mad r7.z, -r6.x, l(0.500000), l(1.000000)
    mad r7.z, -r6.y, r7.z, l(1.000000)
    mul r7.z, r7.z, r7.z
    mad r7.z, -r7.z, l(0.620000), l(0.620000)
    add r7.z, -r6.y, r7.z
    mad r7.z, r5.z, r7.z, r6.y
    mul r7.z, r6.w, r7.z
    lt r5.w, l(0.000000), r5.w
    mad r14.xyz, r7.zzzz, r9.yzwy, r13.xyzx
    mad r15.xyz, -v6.xyzx, r3.wwww, cb2[17].xyzx
    dp3 r3.w, r15.xyzx, r15.xyzx
    rsq r3.w, r3.w
    mul r15.xyz, r3.wwww, r15.xyzx
    dp3 r3.w, r15.xyzx, r4.xyzx
    dp3 r7.z, r2.xyzx, r15.xyzx
    mad r7.w, |r7.z|, r5.y, -|r7.z|
    mad r7.z, |r7.z|, r7.w, l(1.000000)
    mad r6.y, r6.y, r1.w, r2.w
    mul r7.z, r7.z, r7.z
    mul r6.y, r6.y, r7.z
    rcp r6.y, r6.y
    mul r6.y, r6.z, r6.y
    mul r6.y, r6.y, r6.w
    mul r6.y, r6.y, l(0.250000)
    mad r15.xyz, r6.yyyy, r9.yzwy, r3.xyzx
    add_sat r3.w, -r3.w, l(1.000000)
    mul r6.z, r3.w, r3.w
    mul r6.z, r6.z, r6.z
    mul r3.w, r3.w, r6.z
    mul r3.w, r3.w, r6.y
    mad r16.xyz, r3.wwww, r9.zwyz, r12.xyzx
    mov r14.w, r16.z
    mov r13.w, r12.z
    movc r13.xyzw, r5.wwww, r14.xyzw, r13.xyzw
    mov r16.zw, r15.xxxy
    mov r12.zw, r3.xxxy
    movc r14.xyzw, r5.wwww, r16.xyzw, r12.xyzw
    movc r3.z, r5.w, r15.z, r3.z
    mov r12.z, r13.w
    mov r12.xy, r14.xyxx
    mov r3.xy, r14.zwzz
  endif 
endif 
mov r14.x, -r7.x
not r3.w, r4.w
mad r5.w, -r6.x, l(0.500000), l(1.000000)
mov r6.xy, l(0,0,0,0)
mov r15.w, l(0)
mov r16.xyz, v6.xyzx
mov r16.w, l(1.000000)
mov r17.w, l(1.000000)
mov r14.z, r7.x
mov r18.w, l(1.000000)
mov r19.z, l(1.000000)
mov r20.w, l(1.000000)
mov r14.yw, r8.xxxx
mov r7.y, r14.w
mov r21.w, l(1.000000)
mov r8.y, r14.x
mov r8.z, r7.x
mov r22.w, l(1.000000)
mov r23.x, r8.x
mov r23.y, r14.x
mov r23.z, r7.x
mov r24.x, r8.x
mov r24.y, r14.x
mov r24.z, r7.x
mov r25.x, r8.x
mov r25.y, r14.x
mov r25.z, r7.x
mov r9.yzw, r13.xxyz
mov r26.xyz, r12.zxyz
mov r27.xyz, r3.xyzx
mov r6.w, cb2[58].y
mov r7.z, l(0)
loop 
  uge r7.w, r7.z, cb2[0].x
  breakc_nz r7.w
  ushr r6.z, r7.z, l(5)
  iadd r15.xyz, r6.xyzx, r11.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r6.z, r15.xyzw, t6.yzxw
  mov r15.xyz, r9.yzwy
  mov r28.xyz, r26.xyzx
  mov r29.xyz, r27.xyzx
  mov r7.w, r6.w
  mov r8.w, r6.z
  loop 
    breakc_z r8.w
    firstbit_lo r10.w, r8.w
    ishl r11.w, l(1), r10.w
    and r12.w, r8.w, r11.w
    if_nz r12.w
      xor r8.w, r8.w, r11.w
      iadd r10.w, r7.z, r10.w
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r30.xyzw, r10.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r31.xy, r10.w, l(16), t11.xyxx
      add r30.xyz, r30.xyzx, -v6.xyzx
      mov r31.z, r30.w
      lt r30.xyz, |r30.xyzx|, r31.zxyz
      and r11.w, r30.y, r30.x
      and r11.w, r30.z, r11.w
      if_nz r11.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r30.xyzw, r10.w, l(0), t12.wxyz
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r10.w, l(16), t12.zxyw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r10.w, l(32), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r10.w, l(48), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r10.w, l(64), t12.yzwx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r10.w, l(80), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r10.w, l(96), t12.yzwx
        ubfe r11.w, l(3), l(24), r31.w
        switch r11.w
          case l(4)
          lt r11.w, l(0.000000), r36.x
          mov r37.xy, r35.zwzz
          mov r37.z, r36.w
          mad r38.xyz, -r37.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r30.yzwy
          add r39.xyz, r38.xyzx, -v6.xyzx
          dp3 r12.w, r37.xyzx, r39.xyzx
          div_sat r13.w, -r12.w, r36.x
          mad r40.xyz, r13.wwww, r37.xyzx, r38.xyzx
          movc r40.xyz, r11.wwww, r40.xyzx, r30.yzwy
          add r40.xyz, r40.xyzx, -v6.xyzx
          dp3 r19.w, r40.xyzx, r40.xyzx
          rsq r23.w, r19.w
          mul r40.xyz, r23.wwww, r40.xyzx
          dp3 r23.w, r2.xyzx, r40.xyzx
          mov_sat r24.w, r23.w
          lt r25.w, l(0.000000), r24.w
          if_nz r25.w
            sqrt r25.w, r19.w
            mul r26.w, r33.x, r33.x
            div r19.w, r26.w, r19.w
            min r19.w, r19.w, l(1.000000)
            mad_sat r40.xy, r25.wwww, r32.xzxx, r32.ywyy
            mul r40.zw, r40.xxxy, r40.xxxy
            mad r40.xy, r40.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
            mul r40.xy, r40.xyxx, r40.zwzz
            mul r19.w, r19.w, r40.x
            mul r19.w, r40.y, r19.w
            lt r25.w, l(0.000000), r19.w
            if_nz r25.w
              ubfe r25.w, l(3), l(27), r31.w
              ine r25.w, r25.w, l(1)
              if_nz r25.w
                mad r25.w, |r23.w|, l(-0.200000), l(0.400000)
                mad r40.xyz, r2.xyzx, r25.wwww, v6.xyzx
                add r40.xyz, -r34.xyzx, r40.xyzx
                max r25.w, |r40.z|, |r40.y|
                max r25.w, r25.w, |r40.x|
                div r25.w, r35.x, r25.w
                add r25.w, r35.y, r25.w
                dp3 r26.w, r40.xyzx, r40.xyzx
                rsq r26.w, r26.w
                max r25.w, r25.w, l(0.00006104)
                and r27.w, r31.w, l(0x0000ffff)
                utof r41.w, r27.w
                mov r27.w, l(0)
                mov r28.w, l(0)
                loop 
                  ige r29.w, r28.w, l(8)
                  breakc_nz r29.w
                  dp2 r42.y, icb[r28.w + 0].yxyy, r14.xyxx
                  dp2 r42.z, icb[r28.w + 0].yxyy, r14.yzyy
                  mul r42.yz, r33.yyyy, r42.yyzy
                  mul r42.x, r9.x, r42.y
                  mul r42.w, r5.x, r42.y
                  mad r41.xyz, r40.xyzx, r26.wwww, r42.xzwx
                  sample_c_lz_indexable(texturecubearray)(float,float,float,float) r29.w, r41.xyzw, t10.xxxx, s13, r25.w
                  mad r27.w, r29.w, l(0.125000), r27.w
                  iadd r28.w, r28.w, l(1)
                endloop 
              else 
                mov r27.w, l(1.000000)
              endif 
              mul r19.w, r19.w, r27.w
              lt r25.w, l(0.000000), r19.w
              if_nz r25.w
                mul r25.w, r5.y, r31.x
                mul r25.w, r25.w, l(0.250000)
                dp3 r26.w, r37.xyzx, r10.xyzx
                dp3 r28.w, r10.xyzx, r39.xyzx
                mad r29.w, -r26.w, r26.w, r36.x
                mad r12.w, r26.w, r28.w, -r12.w
                div_sat r12.w, r12.w, r29.w
                div r26.w, r29.w, r36.x
                mul r26.w, r26.w, l(10.000000)
                min r26.w, r26.w, l(1.000000)
                add r12.w, -r13.w, r12.w
                mad r12.w, r26.w, r12.w, r13.w
                mad r37.xyz, r12.wwww, r37.xyzx, r38.xyzx
                movc r37.xyz, r11.wwww, r37.xyzx, r30.yzwy
                add r37.xyz, r37.xyzx, -v6.xyzx
                dp3 r11.w, r37.xyzx, r37.xyzx
                rsq r11.w, r11.w
                mul r38.xyz, r11.wwww, r37.xyzx
                ubfe r12.w, l(4), l(16), r31.w
                ult r13.w, l(0), r12.w
                and r13.w, r4.w, r13.w
                if_nz r13.w
                  iadd r12.w, r12.w, cb2[0].x
                  iadd r12.w, r12.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.w, r12.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r12.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r12.w, l(116), t12.xyzw
                  mad r26.w, |r23.w|, l(-0.200000), l(0.400000)
                  mad r17.xyz, r2.xyzx, r26.wwww, v6.xyzx
                  dp4 r26.w, r39.xyzw, r17.xyzw
                  dp4 r28.w, r40.xyzw, r17.xyzw
                  lt r29.w, r28.w, r26.w
                  if_z r29.w
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r12.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r12.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r12.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r12.w, l(148), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xy, r12.w, l(164), t12.xyxx
                    dp4 r39.x, r39.xyzw, r17.xyzw
                    dp4 r39.y, r40.xyzw, r17.xyzw
                    div r17.xy, r39.xyxx, r28.wwww
                    mad r17.xy, r17.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r17.xy, r42.zwzz, r17.xyxx
                    mul r17.xy, r42.xyxx, r17.xyxx
                    div r39.xy, r13.wwww, r41.xzxx
                    add r39.zw, -r39.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                    ge r39.zw, r17.xxxy, r39.zzzw
                    ge r39.xy, r39.xyxx, r17.xyxx
                    or r39.xy, r39.xyxx, r39.zwzz
                    or r17.z, r39.y, r39.x
                    mov_sat r17.xy, r17.xyxx
                    mad r39.xy, r17.xyxx, r41.xzxx, r41.ywyy
                    mul r17.x, r28.w, r43.y
                    mad r17.y, r43.x, r28.w, r26.w
                    div r17.x, r17.y, r17.x
                  else 
                    mov r17.z, l(-1)
                  endif 
                  or r17.y, r29.w, r17.z
                  if_z r17.y
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.w, r12.w, l(28), t12.xxxx
                    max r17.x, r17.x, l(0.00006104)
                    and r12.w, r12.w, l(0x0000ffff)
                    if_nz r7.w
                      utof r40.z, r12.w
                      mov r17.yz, l(0,0,0,0)
                      loop 
                        ige r26.w, r17.z, l(8)
                        breakc_nz r26.w
                        dp2 r41.x, icb[r17.z + 0].yxyy, r14.xwxx
                        dp2 r41.y, icb[r17.z + 0].xyxx, r7.xyxx
                        mad r40.xy, r41.xyxx, r13.wwww, r39.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r26.w, r40.xyzx, t9.xxxx, s13, r17.x
                        mad r17.y, r26.w, l(0.125000), r17.y
                        iadd r17.z, r17.z, l(1)
                      endloop 
                    else 
                      utof r39.z, r12.w
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r17.y, r39.xyzx, t9.xxxx, s13, r17.x
                    endif 
                    mul r12.w, r17.y, r17.y
                    mul r12.w, r17.y, r12.w
                  else 
                    mov r12.w, l(1.000000)
                  endif 
                  mul r19.w, r12.w, r19.w
                else 
                  ubfe r12.w, l(4), l(20), r31.w
                  ult r13.w, l(0), r12.w
                  and r13.w, r3.w, r13.w
                  if_nz r13.w
                    iadd r12.w, r12.w, cb2[0].x
                    iadd r12.w, r12.w, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.w, r12.w, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r12.w, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r12.w, l(116), t12.xyzw
                    mad r17.x, |r23.w|, l(-0.200000), l(0.400000)
                    mad r18.xyz, r2.xyzx, r17.xxxx, v6.xyzx
                    dp4 r17.x, r39.xyzw, r18.xyzw
                    dp4 r17.z, r40.xyzw, r18.xyzw
                    lt r26.w, r17.z, r17.x
                    if_z r26.w
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r12.w, l(68), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r12.w, l(84), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r12.w, l(132), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r12.w, l(148), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xy, r12.w, l(164), t12.xyxx
                      dp4 r39.x, r39.xyzw, r18.xyzw
                      dp4 r39.y, r40.xyzw, r18.xyzw
                      div r18.xy, r39.xyxx, r17.zzzz
                      mad r18.xy, r18.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                      add r18.xy, r42.zwzz, r18.xyxx
                      mul r18.xy, r42.xyxx, r18.xyxx
                      div r39.xy, r13.wwww, r41.xzxx
                      add r39.zw, -r39.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                      ge r39.zw, r18.xxxy, r39.zzzw
                      ge r39.xy, r39.xyxx, r18.xyxx
                      or r39.xy, r39.xyxx, r39.zwzz
                      or r18.z, r39.y, r39.x
                      mov_sat r18.xy, r18.xyxx
                      mad r39.xy, r18.xyxx, r41.xzxx, r41.ywyy
                      mul r18.x, r17.z, r43.y
                      mad r17.x, r43.x, r17.z, r17.x
                      div r17.x, r17.x, r18.x
                    else 
                      mov r18.z, l(-1)
                    endif 
                    or r17.z, r26.w, r18.z
                    if_z r17.z
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.w, r12.w, l(28), t12.xxxx
                      max r17.x, r17.x, l(0.00006104)
                      and r12.w, r12.w, l(0x0000ffff)
                      if_nz r7.w
                        utof r18.z, r12.w
                        mov r17.z, l(0)
                        mov r26.w, l(0)
                        loop 
                          ige r28.w, r26.w, l(8)
                          breakc_nz r28.w
                          dp2 r40.x, icb[r26.w + 0].xyxx, r8.xyxx
                          dp2 r40.y, icb[r26.w + 0].yxyy, r8.xzxx
                          mad r18.xy, r40.xyxx, r13.wwww, r39.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r18.x, r18.xyzx, t9.xxxx, s13, r17.x
                          mad r17.z, r18.x, l(0.125000), r17.z
                          iadd r26.w, r26.w, l(1)
                        endloop 
                      else 
                        utof r39.z, r12.w
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r17.z, r39.xyzx, t9.xxxx, s13, r17.x
                      endif 
                      mul r12.w, r17.z, r17.z
                      mul r12.w, r17.z, r12.w
                    else 
                      mov r12.w, l(1.000000)
                    endif 
                    mul r19.w, r12.w, r19.w
                  endif 
                endif 
                mad r12.w, -r24.w, r5.w, l(1.000000)
                mul r12.w, r12.w, r12.w
                mad r12.w, -r12.w, l(0.620000), l(0.620000)
                add r12.w, -r24.w, r12.w
                mad r12.w, r5.z, r12.w, r24.w
                mul r12.w, r19.w, r12.w
                mov r31.x, r30.x
                lt r13.w, l(0.000000), r23.w
                mad r18.xyz, r12.wwww, r31.xyzx, r15.xyzx
                dp3_sat r12.w, r2.xyzx, r38.xyzx
                mad r37.xyz, r37.xyzx, r11.wwww, r4.xyzx
                dp3 r11.w, r37.xyzx, r37.xyzx
                rsq r11.w, r11.w
                mul r37.xyz, r11.wwww, r37.xyzx
                dp3 r11.w, r37.xyzx, r4.xyzx
                dp3 r17.x, r2.xyzx, r37.xyzx
                mad r23.w, |r17.x|, r5.y, -|r17.x|
                mad r17.x, |r17.x|, r23.w, l(1.000000)
                mad r23.w, r12.w, r1.w, r2.w
                mul r17.x, r17.x, r17.x
                mul r17.x, r23.w, r17.x
                rcp r17.x, r17.x
                mul r12.w, r25.w, r12.w
                mul r12.w, r12.w, r17.x
                mul r12.w, r19.w, r12.w
                mad r37.xyz, r12.wwww, r31.xyzx, r29.xyzx
                add_sat r11.w, -r11.w, l(1.000000)
                mul r17.x, r11.w, r11.w
                mul r17.x, r17.x, r17.x
                mul r11.w, r11.w, r17.x
                mul r11.w, r11.w, r12.w
                mad r38.xyz, r11.wwww, r31.xyzx, r28.xyzx
                movc r15.xyz, r13.wwww, r18.xyzx, r15.xyzx
                movc r28.xyz, r13.wwww, r38.xyzx, r28.xyzx
                movc r29.xyz, r13.wwww, r37.xyzx, r29.xyzx
              endif 
            endif 
          endif 
          break 
          case l(2)
          mov r18.xy, r33.zwzz
          mov r18.z, r34.w
          add r18.xyz, r18.xyzx, -v6.xyzx
          dp3 r11.w, r18.xyzx, r18.xyzx
          rsq r11.w, r11.w
          mul r37.xyz, r11.wwww, r18.xyzx
          dp3 r12.w, r2.xyzx, r37.xyzx
          mov_sat r13.w, r12.w
          lt r17.x, l(0.000000), r13.w
          if_nz r17.x
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r10.w, l(112), t12.yzwx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r10.w, l(128), t12.zxyw
            mov r39.xyz, r37.xyzx
            mov r39.w, r38.y
            dp4 r17.x, r39.xyzw, r16.xyzw
            lt r19.w, r17.x, l(1.000000)
            if_nz r19.w
              mov r40.xyz, l(1.000000,1.000000,1.000000,0)
              mov r19.w, l(0)
            else 
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r10.w, l(172), t12.yzwx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r10.w, l(188), t12.wxyz
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r10.w, l(204), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.w, r10.w, l(236), t12.xxxx
              add r44.xyz, r30.yzwy, -v6.xyzx
              mul r24.w, r33.x, r33.x
              dp3 r25.w, r44.xyzx, r44.xyzx
              div r24.w, r24.w, r25.w
              min r24.w, r24.w, l(1.000000)
              mad_sat r32.xy, r17.xxxx, r32.xzxx, r32.ywyy
              mul r32.zw, r32.xxxy, r32.xxxy
              mad r32.xy, r32.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
              mul r32.xy, r32.xyxx, r32.zwzz
              mul r24.w, r24.w, r32.x
              mul r24.w, r32.y, r24.w
              mov r34.w, r35.x
              dp4 r32.x, r34.xyzw, r16.xyzw
              mov r44.xyz, r35.yzwy
              mov r44.w, r36.w
              dp4 r32.y, r44.xyzw, r16.xyzw
              div r19.xy, r32.xyxx, r17.xxxx
              lt r17.x, r41.w, l(0.00048828)
              if_nz r17.x
                mov r42.y, r43.x
                mad_sat r32.xy, |r19.xyxx|, r42.zwzz, r42.xyxx
                mul r32.zw, r32.xxxy, r32.xxxy
                mad r32.xy, r32.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
                mul r32.xy, r32.xyxx, r32.zwzz
                mul r17.x, r32.y, r32.x
              else 
                mov r41.w, r42.y
                mul_sat r32.xyzw, |r19.yyxx|, r41.xyzw
                log r32.xyzw, r32.xyzw
                mul r32.xyzw, r32.xyzw, r42.xxxx
                exp r32.xyzw, r32.xyzw
                add r32.xy, r32.zwzz, r32.xyxx
                log r32.xy, r32.xyxx
                mul r32.xy, r32.xyxx, r43.xxxx
                exp r32.xy, r32.xyxx
                mul r25.w, r32.x, r42.z
                mad r26.w, r42.w, r32.y, l(-1.000000)
                mad r25.w, r42.w, r32.y, -r25.w
                div_sat r25.w, r26.w, r25.w
                mul r26.w, r25.w, r25.w
                mad r25.w, r25.w, l(-2.000000), l(3.000000)
                mul r17.x, r25.w, r26.w
              endif 
              mul r19.w, r17.x, r24.w
              and r17.x, r23.w, l(255)
              if_nz r17.x
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyz, r10.w, l(220), t12.xyzx
                dp3 r23.w, r43.yzwy, r19.xyzx
                dp3 r19.x, r32.xyzx, r19.xyzx
                frc r32.x, r23.w
                frc r32.y, r19.x
                iadd r17.x, r17.x, l(-1)
                utof r32.z, r17.x
                sample_l_indexable(texture2darray)(float,float,float,float) r40.xyz, r32.xyzx, t20.xyzw, s2, l(0.000000)
              else 
                mov r40.xyz, l(1.000000,1.000000,1.000000,0)
              endif 
            endif 
            mov r30.yz, r31.yyzy
            mul r30.xyz, r40.xyzx, r30.xyzx
            lt r17.x, l(0.000000), r19.w
            if_nz r17.x
              ubfe r17.x, l(3), l(27), r31.w
              ine r17.x, r17.x, l(1)
              if_nz r17.x
                mad r17.x, |r12.w|, l(-0.200000), l(0.400000)
                mad r20.xyz, r2.xyzx, r17.xxxx, v6.xyzx
                mov r37.xyz, r36.xyzx
                dp4 r17.x, r37.xyzw, r20.xyzw
                dp4 r19.x, r39.xyzw, r20.xyzw
                ge r19.y, r19.x, r17.x
                if_nz r19.y
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.y, r10.w, l(144), t12.xxxx
                  mov r34.w, r35.x
                  dp4 r32.x, r34.xyzw, r20.xyzw
                  mov r36.xyz, r35.yzwy
                  dp4 r32.y, r36.xyzw, r20.xyzw
                  div r20.xy, r32.xyxx, r19.xxxx
                  mad_sat r20.xy, r20.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  mad r20.xy, r20.xyxx, r38.zwzz, r38.xyxx
                  div r10.w, r17.x, r19.x
                  max r10.w, r10.w, l(0.00006104)
                  and r17.x, r31.w, l(0x0000ffff)
                  if_nz r7.w
                    utof r32.z, r17.x
                    mov r19.xy, l(0,0,0,0)
                    loop 
                      ige r23.w, r19.y, l(8)
                      breakc_nz r23.w
                      dp2 r34.x, icb[r19.y + 0].xyxx, r23.xyxx
                      dp2 r34.y, icb[r19.y + 0].yxyy, r23.xzxx
                      mad r32.xy, r34.xyxx, r33.yyyy, r20.xyxx
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.w, r32.xyzx, t9.xxxx, s13, r10.w
                      mad r19.x, r23.w, l(0.125000), r19.x
                      iadd r19.y, r19.y, l(1)
                    endloop 
                  else 
                    utof r20.z, r17.x
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.x, r20.xyzx, t9.xxxx, s13, r10.w
                  endif 
                  mul r10.w, r19.x, r19.x
                  mul r10.w, r19.x, r10.w
                else 
                  mov r10.w, l(1.000000)
                endif 
              else 
                mov r10.w, l(1.000000)
              endif 
              mul r10.w, r10.w, r19.w
              lt r17.x, l(0.000000), r10.w
              if_nz r17.x
                mul r17.x, r5.y, r31.x
                mul r17.x, r13.w, r17.x
                ubfe r19.y, l(4), l(16), r31.w
                ult r19.w, l(0), r19.y
                and r19.w, r4.w, r19.w
                if_nz r19.w
                  iadd r19.y, r19.y, cb2[0].x
                  iadd r19.y, r19.y, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.w, r19.y, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r19.y, l(68), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r19.y, l(84), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r19.y, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r19.y, l(116), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r19.y, l(132), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r19.y, l(148), t12.xyzw
                  mad r20.x, |r12.w|, l(-0.200000), l(0.400000)
                  mad r21.xyz, r2.xyzx, r20.xxxx, v6.xyzx
                  dp4 r20.x, r32.xyzw, r21.xyzw
                  dp4 r20.y, r33.xyzw, r21.xyzw
                  dp4 r20.z, r34.xyzw, r21.xyzw
                  dp4 r21.x, r35.xyzw, r21.xyzw
                  lt r21.y, r21.x, r20.z
                  div r20.xy, r20.xyxx, r21.xxxx
                  mad r20.xy, r20.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r20.xy, r37.zwzz, r20.xyxx
                  mul r20.xy, r37.xyxx, r20.xyxx
                  div r31.xy, r19.wwww, r36.xzxx
                  add r32.xy, -r31.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                  ge r32.xy, r20.xyxx, r32.xyxx
                  ge r31.xy, r31.xyxx, r20.xyxx
                  or r31.xy, r31.xyxx, r32.xyxx
                  or r21.z, r31.y, r31.x
                  or r21.y, r21.y, r21.z
                  if_z r21.y
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r21.y, r19.y, l(28), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xy, r19.y, l(164), t12.xyxx
                    mov_sat r20.xy, r20.xyxx
                    mad r32.xy, r20.xyxx, r36.xzxx, r36.ywyy
                    mul r19.y, r21.x, r31.y
                    mad r20.x, r31.x, r21.x, r20.z
                    div r19.y, r20.x, r19.y
                    max r19.y, r19.y, l(0.00006104)
                    and r20.x, r21.y, l(0x0000ffff)
                    if_nz r7.w
                      utof r21.z, r20.x
                      mov r20.yz, l(0,0,0,0)
                      loop 
                        ige r23.w, r20.z, l(8)
                        breakc_nz r23.w
                        dp2 r31.x, icb[r20.z + 0].xyxx, r24.xyxx
                        dp2 r31.y, icb[r20.z + 0].yxyy, r24.xzxx
                        mad r21.xy, r31.xyxx, r19.wwww, r32.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.x, r21.xyzx, t9.xxxx, s13, r19.y
                        mad r20.y, r21.x, l(0.125000), r20.y
                        iadd r20.z, r20.z, l(1)
                      endloop 
                    else 
                      utof r32.z, r20.x
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r20.y, r32.xyzx, t9.xxxx, s13, r19.y
                    endif 
                    mul r19.y, r20.y, r20.y
                    mul r19.y, r20.y, r19.y
                  else 
                    mov r19.y, l(1.000000)
                  endif 
                  mul r10.w, r10.w, r19.y
                else 
                  ubfe r19.y, l(4), l(20), r31.w
                  ult r19.w, l(0), r19.y
                  and r19.w, r3.w, r19.w
                  if_nz r19.w
                    iadd r19.y, r19.y, cb2[0].x
                    iadd r19.y, r19.y, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.w, r19.y, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r19.y, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r19.y, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r19.y, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r19.y, l(116), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r19.y, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r19.y, l(148), t12.xyzw
                    mad r20.x, |r12.w|, l(-0.200000), l(0.400000)
                    mad r22.xyz, r2.xyzx, r20.xxxx, v6.xyzx
                    dp4 r21.x, r31.xyzw, r22.xyzw
                    dp4 r21.y, r32.xyzw, r22.xyzw
                    dp4 r20.x, r33.xyzw, r22.xyzw
                    dp4 r20.z, r34.xyzw, r22.xyzw
                    lt r21.z, r20.z, r20.x
                    div r21.xy, r21.xyxx, r20.zzzz
                    mad r21.xy, r21.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r21.xy, r36.zwzz, r21.xyxx
                    mul r21.xy, r36.xyxx, r21.xyxx
                    div r22.xy, r19.wwww, r35.xzxx
                    add r31.xy, -r22.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                    ge r31.xy, r21.xyxx, r31.xyxx
                    ge r22.xy, r22.xyxx, r21.xyxx
                    or r22.xy, r22.xyxx, r31.xyxx
                    or r22.x, r22.y, r22.x
                    or r21.z, r21.z, r22.x
                    if_z r21.z
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r21.z, r19.y, l(28), t12.xxxx
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r22.xy, r19.y, l(164), t12.xyxx
                      mov_sat r21.xy, r21.xyxx
                      mad r31.xy, r21.xyxx, r35.xzxx, r35.ywyy
                      mul r19.y, r20.z, r22.y
                      mad r20.x, r22.x, r20.z, r20.x
                      div r19.y, r20.x, r19.y
                      max r19.y, r19.y, l(0.00006104)
                      and r20.x, r21.z, l(0x0000ffff)
                      if_nz r7.w
                        utof r21.z, r20.x
                        mov r20.z, l(0)
                        mov r22.x, l(0)
                        loop 
                          ige r22.y, r22.x, l(8)
                          breakc_nz r22.y
                          dp2 r32.x, icb[r22.x + 0].xyxx, r25.xyxx
                          dp2 r32.y, icb[r22.x + 0].yxyy, r25.xzxx
                          mad r21.xy, r32.xyxx, r19.wwww, r31.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.x, r21.xyzx, t9.xxxx, s13, r19.y
                          mad r20.z, r21.x, l(0.125000), r20.z
                          iadd r22.x, r22.x, l(1)
                        endloop 
                      else 
                        utof r31.z, r20.x
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r20.z, r31.xyzx, t9.xxxx, s13, r19.y
                      endif 
                      mul r19.y, r20.z, r20.z
                      mul r19.y, r20.z, r19.y
                    else 
                      mov r19.y, l(1.000000)
                    endif 
                    mul r10.w, r10.w, r19.y
                  endif 
                endif 
                mad r19.y, -r13.w, r5.w, l(1.000000)
                mul r19.y, r19.y, r19.y
                mad r19.y, -r19.y, l(0.620000), l(0.620000)
                add r19.y, -r13.w, r19.y
                mad r19.y, r5.z, r19.y, r13.w
                mul r19.y, r10.w, r19.y
                lt r12.w, l(0.000000), r12.w
                mad r21.xyz, r19.yyyy, r30.xyzx, r15.xyzx
                mad r18.xyz, r18.xyzx, r11.wwww, r4.xyzx
                dp3 r11.w, r18.xyzx, r18.xyzx
                rsq r11.w, r11.w
                mul r18.xyz, r11.wwww, r18.xyzx
                dp3 r11.w, r18.xyzx, r4.xyzx
                dp3 r18.x, r2.xyzx, r18.xyzx
                mad r18.y, |r18.x|, r5.y, -|r18.x|
                mad r18.x, |r18.x|, r18.y, l(1.000000)
                mad r13.w, r13.w, r1.w, r2.w
                mul r18.x, r18.x, r18.x
                mul r13.w, r13.w, r18.x
                rcp r13.w, r13.w
                mul r13.w, r17.x, r13.w
                mul r10.w, r10.w, r13.w
                mul r10.w, r10.w, l(0.250000)
                mad r18.xyz, r10.wwww, r30.xyzx, r29.xyzx
                add_sat r11.w, -r11.w, l(1.000000)
                mul r13.w, r11.w, r11.w
                mul r13.w, r13.w, r13.w
                mul r11.w, r11.w, r13.w
                mul r10.w, r10.w, r11.w
                mad r22.xyz, r10.wwww, r30.xyzx, r28.xyzx
                movc r15.xyz, r12.wwww, r21.xyzx, r15.xyzx
                movc r28.xyz, r12.wwww, r22.xyzx, r28.xyzx
                movc r29.xyz, r12.wwww, r18.xyzx, r29.xyzx
              endif 
            endif 
          endif 
          break 
          default 
          break 
        endswitch 
      endif 
    endif 
  endloop 
  mov r9.yzw, r15.xxyz
  mov r26.xyz, r28.xyzx
  mov r27.xyz, r29.xyzx
  iadd r7.z, r7.z, l(32)
endloop 
mul r2.xyz, r26.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
mad r2.xyz, r27.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000), r2.xyzx
mad r1.xyz, r9.yzwy, r1.xyzx, r2.xyzx
lt r1.w, l(0.000000), cb2[9].z
if_nz r1.w
  dp3 r1.w, v6.xyzx, v6.xyzx
  rsq r2.x, r1.w
  mul r2.xyz, r2.xxxx, v6.xyzx
  sqrt r1.w, r1.w
  lt r2.w, l(0.000000), cb2[13].w
  if_nz r2.w
    mad r3.xy, r1.wwww, cb2[15].xyxx, cb2[14].zwzz
    mul r3.xy, r3.xyxx, cb2[16].xyxx
    lt r2.w, l(0.010000), |v6.z|
    mul r3.zw, v6.zzzz, cb2[15].zzzw
    mul r4.xy, r3.zwzz, l(-1.442695, -1.442695, 0.000000, 0.000000)
    exp r4.xy, r4.xyxx
    add r4.xy, -r4.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    div r3.zw, r4.xxxy, r3.zzzw
    mul r3.zw, r3.zzzw, r3.xxxy
    movc r3.xy, r2.wwww, r3.zwzz, r3.xyxx
    mul r3.xzw, r3.xxxx, cb2[12].xxyz
    exp r3.xzw, r3.xxzw
    mul r4.xyz, r3.yyyy, cb2[12].xyzx
    exp r4.xyz, r4.xyzx
    add r4.xyz, -r3.xzwx, r4.xyzx
    mad r3.xyz, cb2[13].wwww, r4.xyzx, r3.xzwx
  else 
    mad r2.w, r1.w, cb2[15].x, cb2[14].z
    mul r2.w, r2.w, cb2[16].x
    lt r3.w, l(0.010000), |v6.z|
    mul r4.x, v6.z, cb2[15].z
    mul r4.y, r4.x, l(-1.442695)
    exp r4.y, r4.y
    add r4.y, -r4.y, l(1.000000)
    div r4.x, r4.y, r4.x
    mul r4.x, r2.w, r4.x
    movc r2.w, r3.w, r4.x, r2.w
    mul r4.xyz, r2.wwww, cb2[12].xyzx
    exp r3.xyz, r4.xyzx
  endif 
  mad r3.xyz, r3.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r3.xyz, r3.xyzx, -cb2[9].zzzz
  dp3 r2.x, cb2[7].yzwy, -r2.xyzx
  mad r2.y, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r2.z, cb2[8].w, -r2.x, l(1.000000)
  mul r2.z, r2.z, r2.z
  mul r2.z, r2.z, l(12.566371)
  div r2.y, r2.y, r2.z
  add r1.w, r1.w, -cb2[10].w
  mul_sat r1.w, r1.w, cb2[11].w
  mul r1.w, r1.w, r2.y
  mov_sat r2.x, r2.x
  mad r2.x, r2.x, r2.x, l(1.000000)
  mad r2.x, r2.x, l(0.05968310), l(-1.000000)
  mad r2.x, cb2[8].z, r2.x, l(1.000000)
  mul r2.yzw, r1.wwww, cb2[11].xxyz
  mad r2.xyz, r2.xxxx, cb2[10].xyzx, r2.yzwy
  mul r2.xyz, r2.xyzx, cb2[9].wwww
  add r4.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r2.xyz, r2.xyzx, r4.xyzx
  mad r2.xyz, r1.xyzx, r3.xyzx, r2.xyzx
else 
  mul r1.w, v6.z, cb2[6].x
  mad r2.w, cb2[6].x, v6.z, cb2[5].x
  lt r3.x, |r1.w|, l(0.000100)
  min r3.y, r2.w, l(64.000000)
  mul r3.y, r3.y, l(1.442695)
  exp r3.y, r3.y
  mov_sat r3.z, cb2[6].z
  lt r3.w, r2.w, l(0.000000)
  add r2.w, r2.w, l(1.000000)
  movc r2.w, r3.w, r3.y, r2.w
  add r2.w, r2.w, -cb2[6].z
  movc r1.w, r3.x, l(1.000000), r1.w
  div r1.w, r2.w, r1.w
  movc r1.w, r3.x, r3.z, r1.w
  mul r1.w, r1.w, cb2[5].z
  dp3 r2.w, v6.xyzx, v6.xyzx
  sqrt r3.x, r2.w
  mad r1.w, r1.w, r3.x, cb2[5].w
  exp r1.w, r1.w
  min r1.w, r1.w, l(1.000000)
  add r1.w, -r1.w, l(1.000000)
  rsq r2.w, r2.w
  mul r3.xyz, r2.wwww, v6.xyzx
  dp3 r2.w, cb2[7].yzwy, r3.xyzx
  mad_sat r2.w, cb2[8].y, r2.w, cb2[8].x
  add r3.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r3.xyzw, r2.wwww, r3.xyzw, cb2[4].xyzw
  mul r1.w, r1.w, r3.w
  add r3.xyz, -r1.xyzx, r3.xyzx
  mad r2.xyz, r1.wwww, r3.xyzx, r1.xyzx
endif 
mul r1.xyz, r2.xyzx, cb1[85].yyyy
ge r2.xyz, r1.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r1.xyz, r1.xyzx, r2.xyzx
min r1.xyz, r1.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
max r2.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.xyz, r0.wwww, r2.xyzx
eq r3.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
and r3.xy, r3.zwzz, r3.xyxx
and r1.w, r3.y, r3.x
if_z r1.w
  ftou r3.xy, v0.xyxx
  imm_atomic_iadd r3.z, u6, r3.xyxx, l(1)
  ult r1.w, r3.z, cb2[58].z
  if_nz r1.w
    max r1.w, r0.z, r0.y
    max r1.w, r0.x, r1.w
    and r1.w, r1.w, l(0x7f800000)
    iadd r1.w, r1.w, l(0x00800000)
    mad r2.xyz, r2.xyzx, r0.wwww, r1.wwww
    ubfe r2.x, l(8), l(15), r2.x
    ushr r2.yz, r2.yyzy, l(0, 15, 15, 0)
    bfi r2.yz, l(0, 8, 8, 0), l(0, 8, 16, 0), r2.yyzy, l(0, 0, 0, 0)
    iadd r2.x, r2.y, r2.x
    iadd r2.x, r2.z, r2.x
    ishl r1.w, r1.w, l(1)
    iadd r2.xzw, r1.wwww, r2.xxxx
    mul r1.w, r0.w, l(2046.000000)
    ftou r1.w, r1.w
    ishl r3.w, v0.z, l(2)
    and r1.w, r1.w, l(2046)
    bfi r2.y, l(11), l(0), r1.w, r3.w
    store_uav_typed u7.xyzw, r3.xyzz, r2.xyzw
    mov r1.w, l(-1)
  else 
    mov r1.w, l(0)
  endif 
else 
  mov r1.w, l(-1)
endif 
mul r0.xyz, r0.wwww, r1.xyzx
movc o0.xyzw, r1.wwww, l(0,0,0,0), r0.xyzw
ret 
// Approximately 1928 instruction slots used
