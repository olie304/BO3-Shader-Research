//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:24:35 2021
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float3 specColorTint;              // Offset:  160 Size:    12 [unused]
//   float baseNormalHeight;            // Offset:  172 Size:     4 [unused]
//   float2 glossRange;                 // Offset:  176 Size:     8 [unused]
//   float2 featherParms;               // Offset:  184 Size:     8
//   float1 alphaDissolve;              // Offset:  192 Size:     4 [unused]
//   bool useOldHDRScale;               // Offset:  196 Size:     4 [unused]
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16 [unused]
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16 [unused]
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16 [unused]
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
// Resource bind info for fxExclusionVolumes
// {
//
//   struct CoreFXExclusionVolume
//   {
//       
//       bool enabled;                  // Offset:    0
//       row_major float3x3 wldToObb;   // Offset:    4
//       float3 originObb;              // Offset:   40
//       float3 halfExtents;            // Offset:   52
//
//   } $Element;                        // Offset:    0 Size:    64
//
// }
//
// Resource bind info for particleCloudInstanceBuffer
// {
//
//   struct CoreParticleCloudPack
//   {
//       
//       uint4 data[4];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    64
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// fxExclusionVolumes                texture  struct         r/o             t0      1 
// particleCloudInstanceBuffer       texture  struct         r/o            t21      1 
// particleCloudVertexBuffer         texture  float4         buf            t22      1 
// fx_randomTable                    texture    byte         r/o            t24      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_VertexID              0   x           0   VERTID    uint   x   
// TEXCOORD                15   x           1     NONE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[12], immediateIndexed
dcl_constantbuffer CB1[25], immediateIndexed
dcl_resource_structured t0, 64
dcl_resource_structured t21, 64
dcl_resource_buffer (float,float,float,float) t22
dcl_resource_raw t24
dcl_input_sgv v0.x, vertex_id
dcl_input v1.x
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xy
dcl_temps 12
ushr r0.x, v1.x, l(12)
and r0.y, v1.x, l(4095)
ubfe r0.z, l(1), l(1), v0.x
utof r1.x, r0.z
and r0.z, v0.x, l(1)
utof r1.y, r0.z
ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r2.xyzw, r0.x, l(0), t21.xyzw
ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r3.xyzw, r0.x, l(16), t21.xyzw
ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r4.xyzw, r0.x, l(32), t21.xyzw
ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r0.zw, r0.x, l(48), t21.xxxy
ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r0.x, r0.x, l(60), t21.xxxx
and r1.z, r4.y, l(255)
utof r1.z, r1.z
mul o1.x, r1.z, l(0.00392157)
ubfe r1.zw, l(0, 0, 8, 8), l(0, 0, 8, 16), r4.yyyy
utof r1.zw, r1.zzzw
mul o1.yz, r1.zzwz, l(0.000000, 0.00392157, 0.00392157, 0.000000)
ushr r1.z, r4.y, l(24)
utof r1.z, r1.z
mul r1.z, r1.z, l(0.00392157)
ld_indexable(buffer)(float,float,float,float) r5.xyz, r0.yyyy, t22.xyzw
ushr r6.xyzw, r3.xyzw, l(16, 16, 16, 16)
f16tof32 r3.xyzw, r3.xwzy
f16tof32 r6.xyzw, r6.wxyz
mov r7.xz, r3.xxwx
mov r7.yw, r6.yyyz
mul r8.xyzw, r7.xxxx, r7.xyzw
add r9.xyz, r8.xzwx, r8.xzwx
mul r10.xyz, r6.yyyy, r7.zwyz
add r1.w, r10.y, r10.y
mul r7.xy, r3.wwww, r7.wzww
add r7.xy, r7.xyxx, r7.xyxx
mad r4.y, r10.z, l(2.000000), r7.y
add r11.x, -r4.y, l(1.000000)
mad r11.yz, r8.yyxy, l(0.000000, 2.000000, 2.000000, 0.000000), r7.xxyx
mad r11.w, r8.z, l(2.000000), -r1.w
mul r7.yzw, r2.wwww, r11.xxyw
mad r8.x, r8.y, l(2.000000), -r7.x
add r8.y, -r11.z, l(1.000000)
mad r9.xyw, r10.xyxz, l(2.000000, 2.000000, 0.000000, 2.000000), r9.zyzx
mov r8.z, r9.x
mul r8.xyz, r2.wwww, r8.xyzx
mad r10.y, r10.x, l(2.000000), -r9.z
mad r10.xz, r9.yywy, l(1.000000, 0.000000, -1.000000, 0.000000), l(0.000000, 0.000000, 1.000000, 0.000000)
mul r9.xyz, r2.wwww, r10.xyzx
add r2.xyz, r2.xyzx, -cb1[24].xyzx
mul r8.xyz, r5.yyyy, r8.xyzx
mad r5.xyw, r5.xxxx, r7.yzyw, r8.xyxz
mad r5.xyz, r5.zzzz, r9.xyzx, r5.xywx
add r2.xyz, r2.xyzx, r5.xyzx
ubfe r5.xy, l(1, 1, 0, 0), l(19, 20, 0, 0), r0.xxxx
dp2 r0.x, -r2.xyxx, -r2.xyxx
rsq r0.x, r0.x
mul r7.xz, r0.xxxx, -r2.yyxy
mov r7.y, l(0)
mov r3.x, r6.w
mul r8.xyz, r7.xyzx, r3.yzxy
mad r7.xyz, r3.xyzx, r7.yzxy, -r8.xyzx
dp3 r0.x, r7.xyzx, r7.xyzx
rsq r0.x, r0.x
mul r7.xyz, r0.xxxx, r7.xyzx
f16tof32 r6.y, r4.x
add r4.xy, r1.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r5.zw, r6.xxxy, r4.xxxy
mad r6.yzw, r7.xxyz, r5.zzzz, r2.xxyz
mad r6.yzw, r3.zzxy, r5.wwww, r6.yyzw
mov r3.w, r6.x
mul r3.xyzw, r3.zxyw, r4.xxyy
add r3.xy, r3.zwzz, r3.xyxx
mul r3.yzw, r3.yyyy, cb1[17].xxyz
mad r3.xyz, r3.xxxx, cb1[16].xyzx, r3.yzwy
add r2.xyz, r2.xyzx, r3.xyzx
movc r2.xyz, r5.xxxx, r6.yzwy, r2.xyzx
mul r3.xyzw, r2.yyyy, cb1[9].xyzw
mad r3.xyzw, r2.xxxx, cb1[8].xyzw, r3.xyzw
mad r3.xyzw, r2.zzzz, cb1[10].xyzw, r3.xyzw
add r3.xyzw, r3.xyzw, cb1[11].xyzw
if_nz r0.z
  if_nz r0.z
    ubfe r6.xyzw, l(14, 8, 8, 8), l(16, 8, 16, 8), r0.wzzw
    imad r0.x, r0.y, l(500), r6.x
    udiv null, r0.x, r0.x, l(809)
    ushr r1.w, r0.z, l(24)
    and r7.xyzw, r0.wwzz, l(0x0000ffff, 15, 3, 4)
    ubfe r8.z, l(4), l(4), r7.x
    iadd r0.w, r7.y, r8.z
    ishl r2.w, l(1), r0.w
    ishl r0.x, r0.x, l(2)
    iadd r0.x, r0.x, l(88)
    ld_raw_indexable(raw_buffer)(mixed,mixed,mixed,mixed) r0.x, r0.x, t24.xxxx
    and r0.x, r0.x, l(0x0000ffff)
    imul null, r0.x, r2.w, r0.x
    ushr r0.x, r0.x, l(16)
    ieq r5.xzw, r7.zzzz, l(1, 0, 0, 3)
    iadd r2.w, r2.w, l(-1)
    ubfe r0.y, r0.w, l(0), r0.y
    movc r0.x, r5.x, r0.x, r0.y
    or r0.y, r5.w, r5.z
    movc r0.x, r0.y, r6.y, r0.x
    utof r0.x, r0.x
    iadd r0.y, r6.w, l(1)
    utof r4.x, r0.y
    mad r4.y, r4.z, r4.x, r0.x
    utof r4.z, r6.z
    mul r4.z, r4.z, r4.w
    mad r0.x, r4.z, l(0.001000), r0.x
    movc r0.x, r7.w, r4.y, r0.x
    round_ni r4.y, r0.x
    ftou r9.x, r4.y
    round_pi r0.x, r0.x
    ftou r9.y, r0.x
    and r4.yzw, r0.zzzz, l(0, 8, 16, 32)
    imul null, r0.x, r1.w, r0.y
    uge r0.xy, r9.xyxx, r0.xxxx
    movc r0.xy, r0.xyxx, r6.wwww, r9.xyxx
    movc r0.xy, r4.yyyy, r0.xyxx, r9.xyxx
    rcp r0.z, r4.x
    utof r5.xz, r0.xxyx
    mul r5.xz, r0.zzzz, r5.xxzx
    frc r5.xz, r5.xxzx
    mul r4.xy, r4.xxxx, r5.xzxx
    ftou r4.xy, r4.xyxx
    iadd r4.xy, r4.xyxx, r6.yyyy
    movc r0.xy, r5.wwww, r4.xyxx, r0.xyxx
    movc r0.y, r4.z, r0.y, r0.x
    ubfe r0.xy, r0.wwww, l(0, 0, 0, 0), r0.xyxx
    iadd r0.y, -r0.y, r2.w
    movc r8.x, r4.w, r0.y, r0.x
    mov r8.y, r7.y
  else 
    mov r8.xyz, l(0,0,0,0)
  endif 
  ishl r0.xy, r8.yzyy, l(23, 23, 0, 0)
  iadd r0.xy, -r0.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
  ubfe r0.z, r8.y, l(0), r8.x
  ubfe r0.w, r8.z, r8.y, r8.x
  utof r4.xy, r0.zwzz
  add r0.zw, r1.xxxy, r4.xxxy
  mul o2.xy, r0.xyxx, r0.zwzz
else 
  mov o2.xy, r1.xyxx
endif 
ge r0.x, l(1.000000), cb0[11].z
mul_sat r0.y, r3.w, cb0[11].z
mul r0.y, r0.y, r1.z
movc r0.x, r0.x, r0.y, r1.z
ine r0.y, r5.y, l(0)
add r1.xyz, r2.xyzx, cb1[24].xyzx
mov r2.y, l(0)
mov r0.zw, l(0,0,0,0)
mov r1.w, l(0)
loop 
  ige r2.z, r0.w, l(5)
  mov r1.w, l(0)
  breakc_nz r2.z
  ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r2.z, r0.w, l(0), t0.xxxx
  if_nz r2.z
    ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r4.xyzw, r0.w, l(4), t0.xyzw
    ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r5.xyzw, r0.w, l(20), t0.xyzw
    ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r6.xyzw, r0.w, l(36), t0.xyzw
    mov r7.xy, r4.xwxx
    mov r7.z, r5.z
    dp3 r7.x, r1.xyzx, r7.xyzx
    mov r8.x, r4.y
    mov r8.yz, r5.xxwx
    dp3 r7.y, r1.xyzx, r8.xyzx
    mov r5.x, r4.z
    mov r5.z, r6.x
    dp3 r7.z, r1.xyzx, r5.xyzx
    add r4.xyz, r6.yzwy, r7.xyzx
    ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r5.xyz, r0.w, l(52), t0.xyzx
    lt r4.xyz, |r4.xyzx|, r5.xyzx
    and r2.z, r4.y, r4.x
    and r2.z, r4.z, r2.z
    if_nz r2.z
      mov r0.z, l(-1)
      mov r1.w, l(-1)
      break 
    endif 
    mov r1.w, r2.z
  else 
    mov r1.w, l(0)
  endif 
  iadd r2.x, r0.w, l(1)
  mov r0.zw, r2.yyyx
endloop 
and r0.z, r0.z, r1.w
and r0.y, r0.z, r0.y
movc o1.w, r0.y, l(0), r0.x
mov o0.xyzw, r3.xyzw
ret 
// Approximately 191 instruction slots used
