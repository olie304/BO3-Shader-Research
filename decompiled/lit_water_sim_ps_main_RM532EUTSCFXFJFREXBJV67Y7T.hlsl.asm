//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:39:45 2021
//
//
// Note: shader requires additional functionality:
//       Early depth-stencil
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float3 specColorTint;              // Offset:  160 Size:    12 [unused]
//   float baseNormalHeight;            // Offset:  172 Size:     4 [unused]
//   float2 glossRange;                 // Offset:  176 Size:     8 [unused]
//   float2 normalMapScale;             // Offset:  184 Size:     8
//   float4 flowParams;                 // Offset:  192 Size:    16
//   float4 noiseParams;                // Offset:  208 Size:    16
//   bool useOrientedNormalMap;         // Offset:  224 Size:     4
//   float4 specularLobeRoughnessControl;// Offset:  240 Size:    16
//   float4 lobeWeightingThicknessRefraction;// Offset:  256 Size:    16
//   float3 normalAdjustAndGloss;       // Offset:  272 Size:    12
//   float4 decalTint;                  // Offset:  288 Size:    16 [unused]
//   float2 opacityScale;               // Offset:  304 Size:     8
//   float invZFeatherDepth;            // Offset:  312 Size:     4 [unused]
//   float2 normalsFlowScaleMin;        // Offset:  320 Size:     8
//   float4 ssrParams;                  // Offset:  336 Size:    16
//   float translucentShadowOpacity;    // Offset:  352 Size:     4 [unused]
//   float3 foamColor;                  // Offset:  356 Size:    12
//   float4 foamMaskScroll01;           // Offset:  368 Size:    16 [unused]
//   float4 foamMaskScroll23;           // Offset:  384 Size:    16 [unused]
//   float4 foamMaskScale01;            // Offset:  400 Size:    16 [unused]
//   float4 foamMaskScale23;            // Offset:  416 Size:    16 [unused]
//   float foamScale;                   // Offset:  432 Size:     4 [unused]
//   float2 foamSpacing;                // Offset:  436 Size:     8
//   float foamColorScale;              // Offset:  444 Size:     4
//   float foamZFeather;                // Offset:  448 Size:     4
//   bool useFoam;                      // Offset:  452 Size:     4
//   bool useSSR;                       // Offset:  456 Size:     4
//   bool useLoopedSSR;                 // Offset:  460 Size:     4
//   bool useSpecularZFeather;          // Offset:  464 Size:     4 [unused]
//   bool scaleNormalsWithFlow;         // Offset:  468 Size:     4
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4 [unused]
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for forwardDecalConstants
// {
//
//   struct CoreDecalConstantsPack
//   {
//       
//       uint4 data[8];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   128
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// colorSampler                      sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// normalSampler                     sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// flowSampler                       sampler      NA          NA             s5      1 
// noiseSampler                      sampler      NA          NA             s6      1 
// foamSampler                       sampler      NA          NA             s7      1 
// bilinearClamp                     sampler      NA          NA             s8      1 
// pointClamp                        sampler      NA          NA             s9      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// colorMap                          texture  float4          2d             t0      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// normalMap                         texture  float4          2d            t21      1 
// flowMap                           texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// noiseMap                          texture  float4          2d            t24      1 
// foamBase                          texture  float4          2d            t25      1 
// ifloatZSceneDownsampled           texture  float4          2d            t26      1 
// ifloatZScene                      texture  float4          2d            t29      1 
// iResolveScene                     texture  float4          2d            t30      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// visibleDecals                     texture    uint     2darray            t35      1 
// forwardDecalConstants             texture  struct         r/o            t36      1 
// rColorRamp                        texture  float4          2d            t37      1 
// materialTexBC7                    texture  float4     2darray            t42      1 
// materialTexBC3                    texture  float4     2darray            t43      1 
// materialTexMask                   texture  float4     2darray            t45      1 
// gOit_Pixels                           UAV    uint          2d             u6      1 
// gOit_Nodes                            UAV   uint2     2darray             u7      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyz         1     NONE   float       
// COLOR                    1      w        1     NONE   float       
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 4   x           3     NONE    uint       
// TEXCOORD                 1   xyz         4     NONE   float   xyz 
// TEXCOORD                 2   xyz         5     NONE   float   xyz 
// TEXCOORD                 3   xyz         6     NONE   float   xyz 
// OFFPOSITION              0   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
// SV_IsFrontFace           0   x          10    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | forceEarlyDepthStencil
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[30], immediateIndexed
dcl_constantbuffer CB1[86], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_sampler s9, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2d (float,float,float,float) t26
dcl_resource_texture2d (float,float,float,float) t29
dcl_resource_texture2d (float,float,float,float) t30
dcl_resource_texture2darray (float,float,float,float) t31
dcl_resource_texture2darray (uint,uint,uint,uint) t35
dcl_resource_structured t36, 128
dcl_resource_texture2d (float,float,float,float) t37
dcl_resource_texture2darray (float,float,float,float) t42
dcl_resource_texture2darray (float,float,float,float) t43
dcl_resource_texture2darray (float,float,float,float) t45
dcl_uav_typed_texture2d (uint,uint,uint,uint) u6
dcl_uav_typed_texture2darray (uint,uint,uint,uint) u7
dcl_input_ps_siv linear noperspective v0.xyzw, position
dcl_input_ps linear v2.xy
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyz
dcl_input_ps linear v8.xyzw
dcl_input_ps linear v9.xyzw
dcl_input_ps_sgv constant v10.x, is_front_face
dcl_output o0.xyzw
dcl_temps 41
ge r0.x, v0.z, l(0.984375)
mul r0.y, v0.z, l(1.01587307)
mad r0.z, v0.z, l(64.000000), l(-63.000000)
movc r0.x, r0.x, r0.z, r0.y
max r0.x, r0.x, l(0.00000001)
rcp r0.x, r0.x
ftou r1.xy, v0.xyxx
deriv_rtx_coarse r0.yzw, v7.xxyz
deriv_rty_coarse r2.xyz, v7.xyzx
iadd r2.w, cb2[0].y, cb2[0].x
add r3.xyz, v7.xyzx, cb1[24].xyzx
mul r4.x, r0.x, l(0.00781250)
min r4.x, r4.x, l(15.000000)
ftou r4.x, r4.x
ushr r5.xy, r1.xyxx, l(6, 6, 0, 0)
ishl r5.z, r4.x, l(4)
and r4.x, cb2[57].z, l(-32)
iadd r4.y, -r4.x, cb2[57].z
mov r6.xy, l(0,0,0,0)
mov r7.w, l(0)
mov r3.w, l(1.000000)
mov r8.xyzw, l(0,0,0,0)
mov r9.xyz, l(0,0,0,0)
mov r4.z, l(0)
loop 
  uge r4.w, r4.z, cb2[57].z
  breakc_nz r4.w
  ushr r6.z, r4.z, l(5)
  iadd r7.xyz, r5.xyzx, r6.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r4.w, r7.xyzw, t35.yzwx
  ieq r5.w, r4.x, r4.z
  ubfe r6.z, r4.y, l(0), r4.w
  movc r4.w, r5.w, r6.z, r4.w
  iadd r5.w, r2.w, r4.z
  mov r10.xyzw, r8.yzwx
  mov r7.xyz, r9.xyzx
  mov r6.z, r4.w
  loop 
    breakc_z r6.z
    firstbit_lo r6.w, r6.z
    ishl r9.w, l(1), r6.w
    and r11.x, r6.z, r9.w
    if_nz r11.x
      xor r6.z, r6.z, r9.w
      iadd r9.w, r5.w, r6.w
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r11.xyzw, r9.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r12.xy, r9.w, l(16), t11.xyxx
      add r11.xyz, r11.xyzx, -v7.xyzx
      mov r12.z, r11.w
      lt r11.xyz, |r11.xyzx|, r12.zxyz
      and r9.w, r11.y, r11.x
      and r9.w, r11.z, r9.w
      if_nz r9.w
        iadd r6.w, r4.z, r6.w
        ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r11.xyz, r6.w, l(0), t36.xyzx
        ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r12.xyz, r6.w, l(16), t36.xyzx
        ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r13.xyz, r6.w, l(32), t36.xyzx
        mov r14.x, r11.x
        mov r14.y, r12.x
        mov r14.z, r13.x
        dp3 r9.w, r14.xyzx, r14.xyzx
        rsq r9.w, r9.w
        mul r15.xyz, r9.wwww, r14.xyzx
        dp3 r9.w, r15.xyzx, v4.xyzx
        ge r9.w, r9.w, l(0.500000)
        if_nz r9.w
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r15.xyw, r6.w, l(48), t36.xyxz
          mov r14.w, r15.x
          dp4 r14.x, r3.xyzw, r14.xyzw
          mov r16.x, r11.y
          mov r16.y, r12.y
          mov r16.z, r13.y
          mov r16.w, r15.y
          dp4 r14.y, r3.xyzw, r16.xyzw
          mov r15.x, r11.z
          mov r15.y, r12.z
          mov r15.z, r13.z
          dp4 r14.z, r3.xyzw, r15.xyzw
          lt r11.xyz, |r14.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
          and r9.w, r11.y, r11.x
          and r9.w, r11.z, r9.w
          if_nz r9.w
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r11.xyzw, r6.w, l(64), t36.xyzw
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r12.xyzw, r6.w, l(80), t36.xyzw
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r9.w, r6.w, l(108), t36.xxxx
            dp3 r13.x, r0.yzwy, r16.xyzx
            dp3 r13.y, r0.yzwy, r15.xyzx
            dp3 r16.x, r2.xyzx, r16.xyzx
            dp3 r16.y, r2.xyzx, r15.xyzx
            mad r13.zw, r14.yyyz, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
            mul r14.xyz, r13.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
            mul r15.xyz, r16.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
            and r12.yz, r12.yyzy, l(0, 0x0000ffff, 0x0000ffff, 0)
            if_nz r12.y
              ubfe r13.x, l(4), l(24), r12.w
              ushr r13.y, r12.w, l(28)
              ishl r13.xy, l(1, 1, 0, 0), r13.xyxx
              ieq r14.w, r12.y, l(4)
              if_nz r14.w
                and r14.w, r12.w, l(4095)
                ubfe r15.w, l(12), l(12), r12.w
                and r16.x, r9.w, l(1023)
                utof r17.xyz, r13.xyxx
                mad r16.yz, r13.zzwz, r17.zzyz, l(0.000000, 0.500000, 0.500000, 0.000000)
                add r18.xy, r17.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                min r16.yz, r16.yyzy, r18.xxyx
                utof r18.x, r14.w
                utof r18.y, r15.w
                add r16.yz, r16.yyzy, r18.xxyx
                mul r18.xy, r16.yzyy, cb1[83].xyxx
                utof r18.z, r16.x
                mul r16.xyz, r14.zyzz, cb1[83].xyxx
                mul r16.xyz, r17.xyzx, r16.xyzx
                mul r19.xyz, r15.zyzz, cb1[83].xyxx
                mul r17.xyz, r17.xyzx, r19.xyzx
                sample_d_indexable(texture2darray)(float,float,float,float) r16.xyzw, r18.xyzx, t42.xyzw, s4, r16.xyzx, r17.xyzx
              else 
                ieq r12.y, r12.y, l(1)
                if_nz r12.y
                  and r12.y, r12.w, l(4095)
                  ubfe r12.w, l(12), l(12), r12.w
                  and r14.w, r9.w, l(1023)
                  utof r17.xyz, r13.xyxx
                  mad r13.xy, r13.zwzz, r17.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r18.xy, r17.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r13.xy, r13.xyxx, r18.xyxx
                  utof r18.xy, r12.ywyy
                  add r12.yw, r13.xxxy, r18.xxxy
                  mul r18.xy, r12.ywyy, cb1[83].zwzz
                  utof r18.z, r14.w
                  mul r19.xyz, r14.zyzz, cb1[83].zwzz
                  mul r19.xyz, r17.xyzx, r19.xyzx
                  mul r20.xyz, r15.zyzz, cb1[83].zwzz
                  mul r17.xyz, r17.xyzx, r20.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r16.xyzw, r18.xyzx, t43.xyzw, s4, r19.xyzx, r17.xyzx
                else 
                  mov r16.xyzw, l(1.000000,1.000000,1.000000,1.000000)
                endif 
              endif 
              mul r11.xyz, r11.xyzx, r16.xyzx
              mul r12.y, r11.w, r16.w
            else 
              mov r11.xyz, l(0,0,0,0)
              mov r12.y, l(0)
            endif 
            ne r12.w, r12.x, l(1.000000)
            add r11.w, r11.w, r12.y
            mad_sat r11.w, r11.w, r12.x, -r12.x
            movc r11.w, r12.w, r11.w, r12.y
            if_nz r12.z
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r6.w, r6.w, l(100), t36.xxxx
              ubfe r12.x, l(4), l(24), r6.w
              ushr r12.y, r6.w, l(28)
              ishl r12.xy, l(1, 1, 0, 0), r12.xyxx
              ieq r12.w, r12.z, l(2)
              if_nz r12.w
                and r12.w, r6.w, l(4095)
                ubfe r13.x, l(12), l(12), r6.w
                ubfe r13.y, l(10), l(20), r9.w
                utof r16.xyz, r12.xyxx
                mad r17.xy, r13.zwzz, r16.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                add r17.zw, r16.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                min r17.xy, r17.zwzz, r17.xyxx
                utof r18.x, r12.w
                utof r18.y, r13.x
                add r17.xy, r17.xyxx, r18.xyxx
                mul r17.xy, r17.xyxx, cb1[84].xyxx
                utof r17.z, r13.y
                mul r18.xyz, r14.zyzz, cb1[84].xyxx
                mul r18.xyz, r16.xyzx, r18.xyzx
                mul r19.xyz, r15.zyzz, cb1[84].xyxx
                mul r16.xyz, r16.xyzx, r19.xyzx
                sample_d_indexable(texture2darray)(float,float,float,float) r12.w, r17.xyzx, t45.yzwx, s4, r18.xyzx, r16.xyzx
              else 
                ieq r12.z, r12.z, l(4)
                if_nz r12.z
                  and r12.z, r6.w, l(4095)
                  ubfe r13.x, l(12), l(12), r6.w
                  ubfe r13.y, l(10), l(20), r9.w
                  utof r16.xyz, r12.xyxx
                  mad r17.xy, r13.zwzz, r16.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r17.zw, r16.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r17.xy, r17.zwzz, r17.xyxx
                  utof r18.x, r12.z
                  utof r18.y, r13.x
                  add r17.xy, r17.xyxx, r18.xyxx
                  mul r17.xy, r17.xyxx, cb1[83].xyxx
                  utof r17.z, r13.y
                  mul r18.xyz, r14.zyzz, cb1[83].xyxx
                  mul r18.xyz, r16.xyzx, r18.xyzx
                  mul r19.xyz, r15.zyzz, cb1[83].xyxx
                  mul r16.xyz, r16.xyzx, r19.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r12.w, r17.xyzx, t42.yzwx, s4, r18.xyzx, r16.xyzx
                else 
                  and r12.z, r6.w, l(4095)
                  ubfe r6.w, l(12), l(12), r6.w
                  ubfe r9.w, l(10), l(20), r9.w
                  utof r16.xyz, r12.xyxx
                  mad r12.xy, r13.zwzz, r16.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r13.xy, r16.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r12.xy, r12.xyxx, r13.xyxx
                  utof r13.x, r12.z
                  utof r13.y, r6.w
                  add r12.xy, r12.xyxx, r13.xyxx
                  mul r12.xy, r12.xyxx, cb1[83].zwzz
                  utof r12.z, r9.w
                  mul r13.xyz, r14.xyzx, cb1[83].zwzz
                  mul r13.xyz, r16.xyzx, r13.xyzx
                  mul r14.xyz, r15.xyzx, cb1[83].zwzz
                  mul r14.xyz, r16.xyzx, r14.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r12.w, r12.xyzx, t43.yzwx, s4, r13.xyzx, r14.xyzx
                endif 
              endif 
              mad r12.xyz, r12.wwww, l(0.960000, 0.960000, 0.960000, 0.000000), l(0.040000, 0.040000, 0.040000, 0.000000)
              add_sat r6.w, -r12.w, l(1.000000)
              mul r11.xyz, r6.wwww, r11.xyzx
            else 
              mov r12.xyz, l(0.040000,0.040000,0.040000,0)
            endif 
            add r6.w, -r11.w, l(1.000000)
            mul r13.xyz, r6.wwww, r7.xyzx
            mad r7.xyz, r11.xyzx, r11.wwww, r13.xyzx
            mul r11.xyz, r6.wwww, r10.xyzx
            mad r10.xyz, r12.xyzx, r11.wwww, r11.xyzx
            mad r10.w, r10.w, r6.w, r11.w
          endif 
        endif 
      endif 
    endif 
  endloop 
  mov r8.xyzw, r10.wxyz
  mov r9.xyz, r7.xyzx
  iadd r4.z, r4.z, l(32)
endloop 
mov_sat r8.x, r8.x
add r0.y, -r8.x, l(1.000000)
mul r0.zw, v2.xxxy, cb0[11].zzzw
mul r2.xy, cb0[13].xyxx, cb1[69].wwww
mad r2.xy, v2.xyxx, cb0[13].zzzz, r2.xyxx
sample_indexable(texture2d)(float,float,float,float) r2.xy, r2.xyxx, t24.xyzw, s6
mul r2.xy, r2.xyxx, cb0[13].wwww
mad r2.xy, v2.xyxx, cb0[12].xxxx, r2.xyxx
frc r2.zw, r2.xxxy
mad r4.xy, r2.zwzz, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
mul r2.zw, r2.zzzw, r2.zzzw
mul r4.zw, r2.zzzw, r4.xxxy
resinfo_indexable(texture2d)(float,float,float,float) r6.xy, l(0), t21.xyzw
mul r6.xy, r0.zwzz, r6.xyxx
deriv_rtx_coarse r6.zw, r6.xxxy
deriv_rty_coarse r6.xy, r6.xyxx
dp2 r5.w, r6.zwzz, r6.zwzz
dp2 r6.x, r6.xyxx, r6.xyxx
max r5.w, r5.w, r6.x
log r5.w, r5.w
mul r5.w, r5.w, l(0.500000)
round_ni r6.xy, r2.xyxx
div r6.xy, r6.xyxx, cb0[12].xxxx
sample_indexable(texture2d)(float,float,float,float) r6.xy, r6.xyxx, t22.xyzw, s5
add r6.xy, r6.xyxx, r6.xyxx
add r7.xyzw, r2.xyxy, l(1.000000, 0.000000, 0.000000, 1.000000)
round_ni r7.xyzw, r7.xyzw
div r7.xyzw, r7.xyzw, cb0[12].xxxx
sample_indexable(texture2d)(float,float,float,float) r6.zw, r7.xyxx, t22.zwxy, s5
add r6.zw, r6.zzzw, r6.zzzw
sample_indexable(texture2d)(float,float,float,float) r7.xy, r7.zwzz, t22.xyzw, s5
add r7.xy, r7.xyxx, r7.xyxx
add r2.xy, r2.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
round_ni r2.xy, r2.xyxx
div r2.xy, r2.xyxx, cb0[12].xxxx
sample_indexable(texture2d)(float,float,float,float) r2.xy, r2.xyxx, t22.xyzw, s5
add r2.xy, r2.xyxx, r2.xyxx
if_nz cb0[29].y
  sample_indexable(texture2d)(float,float,float,float) r7.zw, v2.xyxx, t22.zwxy, s5
  add r10.xy, r7.zwzz, r7.zwzz
  mad r10.zw, r10.xxxy, l(0.000000, 0.000000, -1.000000, 1.000000), l(0.000000, 0.000000, 1.000000, -1.000000)
  mad r7.zw, r10.xxxw, l(0.000000, 0.000000, -1.000000, 1.000000), l(0.000000, 0.000000, 1.000000, 0.000000)
  dp2 r7.z, r10.zwzz, r7.zwzz
  sqrt r7.z, r7.z
  mad r7.z, r7.z, cb0[20].y, cb0[20].x
  mul r7.zw, r7.zzzz, cb0[17].xxxy
else 
  mov r7.zw, cb0[17].xxxy
endif 
mad r2.zw, -r4.xxxy, r2.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
mul r2.zw, r2.zzzw, r2.zzzw
mad r2.zw, r4.zzzw, r4.zzzw, r2.zzzw
rsq r2.zw, r2.zzzw
if_z cb0[14].x
  mul r4.x, cb0[12].y, cb1[69].w
  mad r10.xy, r6.xyxx, l(-1.000000, 1.000000, 0.000000, 0.000000), l(1.000000, -1.000000, 0.000000, 0.000000)
  mad r10.xy, r10.xyxx, r4.xxxx, r0.zwzz
  sample_l_indexable(texture2d)(float,float,float,float) r10.xy, r10.xyxx, t21.xyzw, s3, r5.w
  mad r10.zw, r6.zzzw, l(0.000000, 0.000000, -1.000000, 1.000000), l(0.000000, 0.000000, 1.000000, -1.000000)
  mad r10.zw, r10.zzzw, r4.xxxx, r0.zzzw
  sample_l_indexable(texture2d)(float,float,float,float) r10.zw, r10.zwzz, t21.zwxy, s3, r5.w
  add r10.zw, -r10.xxxy, r10.zzzw
  mad r10.xy, r4.zzzz, r10.zwzz, r10.xyxx
  mad r10.zw, r7.xxxy, l(0.000000, 0.000000, -1.000000, 1.000000), l(0.000000, 0.000000, 1.000000, -1.000000)
  mad r10.zw, r10.zzzw, r4.xxxx, r0.zzzw
  sample_l_indexable(texture2d)(float,float,float,float) r10.zw, r10.zwzz, t21.zwxy, s3, r5.w
  mad r11.xy, r2.xyxx, l(-1.000000, 1.000000, 0.000000, 0.000000), l(1.000000, -1.000000, 0.000000, 0.000000)
  mad r0.zw, r11.xxxy, r4.xxxx, r0.zzzw
  sample_l_indexable(texture2d)(float,float,float,float) r0.zw, r0.zwzz, t21.zwxy, s3, r5.w
  add r0.zw, -r10.zzzw, r0.zzzw
  mad r0.zw, r4.zzzz, r0.zzzw, r10.zzzw
  add r0.zw, -r10.xxxy, r0.zzzw
  mad r0.zw, r4.wwww, r0.zzzw, r10.xxxy
  mad r0.zw, r0.zzzw, r7.zzzz, r7.wwww
else 
  mad r4.xy, r6.xyxx, l(-1.000000, 1.000000, 0.000000, 0.000000), l(1.000000, -1.000000, 0.000000, 0.000000)
  dp2 r6.x, r4.xyxx, r4.xyxx
  sqrt r6.x, r6.x
  max r6.x, r6.x, l(0.000010)
  div r10.xy, r4.xyxx, r6.xxxx
  mov r10.z, -r10.x
  dp2 r4.x, v2.xyxx, r10.yzyy
  dp2 r4.y, v2.xyxx, -r10.xyxx
  mul r11.xy, r4.xyxx, cb0[11].zwzz
  mul r4.x, r6.x, cb1[69].w
  mad r11.z, -r4.x, cb0[12].y, r11.y
  sample_l_indexable(texture2d)(float,float,float,float) r4.xy, r11.xzxx, t21.xyzw, s3, r5.w
  mad r4.xy, r4.xyxx, r7.zzzz, r7.wwww
  dp2 r6.x, r4.xyxx, r10.yzyy
  dp2 r6.y, r4.xyxx, -r10.xyxx
  mad r4.xy, r6.zwzz, l(-1.000000, 1.000000, 0.000000, 0.000000), l(1.000000, -1.000000, 0.000000, 0.000000)
  dp2 r6.z, r4.xyxx, r4.xyxx
  sqrt r6.z, r6.z
  max r6.z, r6.z, l(0.000010)
  div r10.xy, r4.xyxx, r6.zzzz
  mov r10.z, -r10.x
  dp2 r4.x, v2.xyxx, r10.yzyy
  dp2 r4.y, v2.xyxx, -r10.xyxx
  mul r11.xy, r4.xyxx, cb0[11].zwzz
  mul r4.x, r6.z, cb1[69].w
  mad r11.z, -r4.x, cb0[12].y, r11.y
  sample_l_indexable(texture2d)(float,float,float,float) r4.xy, r11.xzxx, t21.xyzw, s3, r5.w
  mad r4.xy, r4.xyxx, r7.zzzz, r7.wwww
  dp2 r11.x, r4.xyxx, r10.yzyy
  dp2 r11.y, r4.xyxx, -r10.xyxx
  add r4.xy, -r6.xyxx, r11.xyxx
  mad r4.xy, r4.zzzz, r4.xyxx, r6.xyxx
  mad r6.xy, r7.xyxx, l(-1.000000, 1.000000, 0.000000, 0.000000), l(1.000000, -1.000000, 0.000000, 0.000000)
  dp2 r6.z, r6.xyxx, r6.xyxx
  sqrt r6.z, r6.z
  max r6.z, r6.z, l(0.000010)
  div r10.xy, r6.xyxx, r6.zzzz
  mov r10.z, -r10.x
  dp2 r6.x, v2.xyxx, r10.yzyy
  dp2 r6.y, v2.xyxx, -r10.xyxx
  mul r11.xy, r6.xyxx, cb0[11].zwzz
  mul r6.x, r6.z, cb1[69].w
  mad r11.z, -r6.x, cb0[12].y, r11.y
  sample_l_indexable(texture2d)(float,float,float,float) r6.xy, r11.xzxx, t21.xyzw, s3, r5.w
  mad r6.xy, r6.xyxx, r7.zzzz, r7.wwww
  dp2 r7.x, r6.xyxx, r10.yzyy
  dp2 r7.y, r6.xyxx, -r10.xyxx
  mad r2.xy, r2.xyxx, l(-1.000000, 1.000000, 0.000000, 0.000000), l(1.000000, -1.000000, 0.000000, 0.000000)
  dp2 r6.x, r2.xyxx, r2.xyxx
  sqrt r6.x, r6.x
  max r6.x, r6.x, l(0.000010)
  div r10.xy, r2.xyxx, r6.xxxx
  mov r10.z, -r10.x
  dp2 r2.x, v2.xyxx, r10.yzyy
  dp2 r2.y, v2.xyxx, -r10.xyxx
  mul r11.xy, r2.xyxx, cb0[11].zwzz
  mul r2.x, r6.x, cb1[69].w
  mad r11.z, -r2.x, cb0[12].y, r11.y
  sample_l_indexable(texture2d)(float,float,float,float) r2.xy, r11.xzxx, t21.xyzw, s3, r5.w
  mad r2.xy, r2.xyxx, r7.zzzz, r7.wwww
  dp2 r6.x, r2.xyxx, r10.yzyy
  dp2 r6.y, r2.xyxx, -r10.xyxx
  add r2.xy, -r7.xyxx, r6.xyxx
  mad r2.xy, r4.zzzz, r2.xyxx, r7.xyxx
  add r2.xy, -r4.xyxx, r2.xyxx
  mad r0.zw, r4.wwww, r2.xxxy, r4.xxxy
endif 
mul r2.x, r2.w, r2.z
mul r0.zw, r0.zzzw, r2.xxxx
mul r2.xyz, r0.wwww, v6.xyzx
mad r2.xyz, v5.xyzx, r0.zzzz, r2.xyzx
add r2.xyz, r2.xyzx, v4.xyzx
dp3 r0.z, r2.xyzx, r2.xyzx
rsq r0.z, r0.z
mul r2.xyz, r0.zzzz, r2.xyzx
movc r2.xyz, v10.xxxx, r2.xyzx, -r2.xyzx
dp3 r0.z, v7.xyzx, v7.xyzx
rsq r0.w, r0.z
mul r4.xyz, r0.wwww, v7.xyzx
dp3_sat r6.z, r2.xyzx, -r4.xyzx
if_nz v10.x
  ftoi r7.xy, v0.xyxx
  mov r7.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r0.w, r7.xyzw, t29.yzwx
  ge r4.w, r0.w, l(0.984375)
  mul r5.w, r0.w, l(1.01587307)
  mad r0.w, r0.w, l(64.000000), l(-63.000000)
  movc r0.w, r4.w, r0.w, r5.w
  max r0.w, r0.w, l(0.00000001)
  rcp r0.w, r0.w
  add r0.w, r0.w, -v0.w
  max r0.w, r0.w, l(0.000000)
  min r0.w, r0.w, cb0[21].x
  mov r4.w, cb0[19].y
else 
  sqrt r0.w, r0.z
  mov r4.w, cb0[19].x
endif 
if_nz cb0[28].y
  sample_indexable(texture2d)(float,float,float,float) r5.w, v8.xyxx, t25.yzwx, s7
  sample_indexable(texture2d)(float,float,float,float) r7.x, v8.zwzz, t25.xyzw, s7
  sample_indexable(texture2d)(float,float,float,float) r7.y, v9.xyxx, t25.yxzw, s7
  sample_indexable(texture2d)(float,float,float,float) r7.z, v9.zwzz, t25.yzxw, s7
  add r5.w, r5.w, r7.x
  add r5.w, r7.y, r5.w
  add r5.w, r7.z, r5.w
  mul r5.w, r5.w, cb0[27].w
  sample_indexable(texture2d)(float,float,float,float) r7.x, v2.xyxx, t22.zxyw, s5
  mad r7.x, cb0[27].z, r7.x, cb0[27].y
  max r5.w, r5.w, l(0.000000)
  log r5.w, r5.w
  mul r5.w, r5.w, r7.x
  exp r5.w, r5.w
  mul r7.x, r0.w, cb0[28].x
  min r7.x, r7.x, l(1.000000)
  mul r7.y, r5.w, r7.x
  mad r5.w, -r5.w, r7.x, l(1.000000)
  mul r5.w, r5.w, cb0[17].z
else 
  mov r7.y, l(0)
  mov r5.w, cb0[17].z
endif 
dp3 r7.x, -v7.xyzx, -v7.xyzx
rsq r7.x, r7.x
mul r10.xyz, r7.xxxx, -v7.xyzx
utof r7.zw, r1.xxxy
dp2 r7.z, r7.zwzz, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r7.z, r7.z
mul r7.z, r7.z, l(52.982918)
frc r7.z, r7.z
mad r7.z, r7.z, l(6.28318548), cb1[70].w
sincos r11.x, r12.x, r7.z
dp3_sat r7.z, r2.xyzx, r10.xyzx
dp3 r7.w, -r10.xyzx, r2.xyzx
add r7.w, r7.w, r7.w
mad r13.xyz, r2.xyzx, -r7.wwww, -r10.xyzx
add r7.w, -r5.w, l(1.000000)
mul r9.w, r7.w, l(5.000000)
mad r10.w, r7.w, l(5.000000), l(-2.500000)
mul_sat r10.w, r10.w, l(0.400000)
mul r10.w, r10.w, l(100.000000)
mad r11.yz, -r7.wwww, l(0.000000, 10.000000, 5.000000, 0.000000), l(0.000000, 6.857410, 7.085000, 0.000000)
exp r11.y, r11.y
mul r11.y, r7.z, r11.y
mul r11.w, r7.w, r9.w
mad r11.z, -r11.w, l(2.015905), r11.z
exp r11.z, r11.z
mul r11.z, r7.z, r11.z
mul r11.yz, r11.yyzy, l(0.000000, 9.136810, 9.708090, 0.000000)
max r11.y, r11.z, r11.y
max r11.y, r11.y, l(1.268160)
iadd r11.z, cb2[0].y, -cb2[58].x
and r11.w, r11.z, l(-32)
iadd r12.y, -r11.w, r11.z
and r12.z, cb2[0].y, l(-32)
iadd r12.w, -r12.z, cb2[0].y
mov r14.xy, l(0,0,0,0)
mov r15.w, l(0)
mov r16.yz, l(0,0,1.000000,0)
mov r17.xy, l(0,0,0,0)
mov r6.xw, l(1.000000,0,0,0)
mov r18.xy, l(0,0,0,0)
mov r19.xy, l(0,0,0,0)
mov r20.xyzw, l(0,0,0,0)
mov r21.yzw, l(0,0,0,0)
mov r14.w, r11.w
loop 
  uge r16.w, r14.w, cb2[0].y
  breakc_nz r16.w
  ushr r14.z, r14.w, l(5)
  iadd r15.xyz, r5.xyzx, r14.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r14.z, r15.xyzw, t7.yzxw
  ieq r15.x, r11.w, r14.w
  bfi r15.y, r12.y, l(0), l(0), r14.z
  movc r14.z, r15.x, r15.y, r14.z
  ieq r15.x, r12.z, r14.w
  ubfe r15.y, r12.w, l(0), r14.z
  movc r14.z, r15.x, r15.y, r14.z
  iadd r15.x, r14.w, cb2[0].x
  mov r22.xyzw, r20.xyzw
  mov r23.xyz, r21.yzwy
  mov r15.y, r14.z
  loop 
    breakc_z r15.y
    firstbit_lo r15.z, r15.y
    ishl r16.w, l(1), r15.z
    and r17.w, r15.y, r16.w
    if_nz r17.w
      xor r15.y, r15.y, r16.w
      iadd r16.w, r15.z, r15.x
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r24.xyzw, r16.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r25.xy, r16.w, l(16), t11.xyxx
      add r24.xyz, r24.xyzx, -v7.xyzx
      mov r25.z, r24.w
      lt r24.xyz, |r24.xyzx|, r25.zxyz
      and r16.w, r24.y, r24.x
      and r16.w, r24.z, r16.w
      if_nz r16.w
        iadd r15.z, r14.w, r15.z
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r15.z, l(0), t15.wxyz
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xy, r15.z, l(96), t15.xyxx
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r15.z, l(116), t15.zwxy
        add r27.xyz, -r24.yzwy, v7.xyzx
        and r16.w, r26.w, l(0x0000ffff)
        ubfe r17.w, l(6), l(25), r26.w
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r16.w, l(0), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r16.w, l(16), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r16.w, l(32), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r16.w, l(48), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r16.w, l(64), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r16.w, l(80), t16.xyzw
        dp3 r18.w, r28.xyzx, r27.xyzx
        add_sat r18.w, r28.w, r18.w
        dp3 r19.w, r29.xyzx, r27.xyzx
        add_sat r19.w, r29.w, r19.w
        mul r18.w, r18.w, r19.w
        dp3 r19.w, r30.xyzx, r27.xyzx
        add_sat r19.w, r30.w, r19.w
        mul r18.w, r18.w, r19.w
        dp3 r19.w, r31.xyzx, r27.xyzx
        add_sat r19.w, r31.w, r19.w
        mul r18.w, r18.w, r19.w
        dp3 r19.w, r32.xyzx, r27.xyzx
        add_sat r19.w, r32.w, r19.w
        mul r18.w, r18.w, r19.w
        dp3 r19.w, r33.xyzx, r27.xyzx
        add_sat r19.w, r33.w, r19.w
        mul r16.x, r18.w, r19.w
        and r18.w, r25.x, l(1)
        movc r25.zw, r18.wwww, r16.xxxy, r16.zzzx
        mov r16.x, r25.x
        mov r28.xy, r25.zwzz
        mov r18.w, l(1)
        loop 
          ige r19.w, r18.w, r17.w
          breakc_nz r19.w
          iadd r19.w, r16.w, r18.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r19.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r19.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r19.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r19.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r19.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r19.w, l(80), t16.xyzw
          dp3 r19.w, r29.xyzx, r27.xyzx
          add_sat r19.w, r29.w, r19.w
          mul r19.w, r19.w, r28.x
          dp3 r24.w, r30.xyzx, r27.xyzx
          add_sat r24.w, r30.w, r24.w
          mul r19.w, r19.w, r24.w
          dp3 r24.w, r31.xyzx, r27.xyzx
          add_sat r24.w, r31.w, r24.w
          mul r19.w, r19.w, r24.w
          dp3 r24.w, r32.xyzx, r27.xyzx
          add_sat r24.w, r32.w, r24.w
          mul r19.w, r19.w, r24.w
          dp3 r24.w, r33.xyzx, r27.xyzx
          add_sat r24.w, r33.w, r24.w
          mul r19.w, r19.w, r24.w
          dp3 r24.w, r34.xyzx, r27.xyzx
          add_sat r24.w, r34.w, r24.w
          mul r28.x, r19.w, r24.w
          ushr r27.w, r16.x, l(2)
          ubfe r28.z, l(1), l(2), r16.x
          and r28.w, r27.w, l(2)
          max r29.x, r28.x, r28.y
          mad r19.w, -r19.w, r24.w, l(1.000000)
          mul r19.w, r19.w, r28.y
          movc r6.y, r28.w, r19.w, r29.x
          movc r28.xy, r28.zzzz, r28.xyxx, r6.xyxx
          iadd r18.w, r18.w, l(1)
          mov r16.x, r27.w
        endloop 
        mov_sat r28.y, r28.y
        mul r6.y, r25.y, r28.y
        lt r16.x, l(0.000000), r6.y
        if_nz r16.x
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r15.z, l(16), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r15.z, l(32), t15.yxwz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r15.z, l(48), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r15.z, l(64), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r15.z, l(80), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r15.z, l(132), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r15.z, l(148), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r15.z, l(164), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r15.z, l(180), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r15.z, l(196), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xy, r15.z, l(212), t15.xyxx
          mad r23.z, r28.y, r25.y, r23.z
          mul r6.y, r26.z, r6.y
          mov r26.z, r34.z
          dp3 r15.z, r13.xyzx, r26.xyzx
          dp3 r16.x, r27.xyzx, r26.xyzx
          add r16.x, -r34.w, r16.x
          ge r16.w, r16.x, l(0.000000)
          max r16.x, r10.w, |r16.x|
          movc r16.x, r16.w, r16.x, -r16.x
          max r15.z, -r15.z, l(0.00000010)
          div r15.z, r16.x, r15.z
          min r15.z, |r15.z|, l(131072.000000)
          mov r34.z, r35.z
          dp3 r16.x, r13.xyzx, r34.xyzx
          dp3 r16.w, r27.xyzx, r34.xyzx
          add r16.w, -r35.w, r16.w
          ge r17.w, r16.w, l(0.000000)
          max r16.w, r10.w, |r16.w|
          movc r16.w, r17.w, r16.w, -r16.w
          max r16.x, -r16.x, l(0.00000010)
          div r16.x, r16.w, r16.x
          min r15.z, r15.z, |r16.x|
          mov r35.z, r36.z
          dp3 r16.x, r13.xyzx, r35.xyzx
          dp3 r16.w, r27.xyzx, r35.xyzx
          add r16.w, -r36.w, r16.w
          ge r17.w, r16.w, l(0.000000)
          max r16.w, r10.w, |r16.w|
          movc r16.w, r17.w, r16.w, -r16.w
          max r16.x, -r16.x, l(0.00000010)
          div r16.x, r16.w, r16.x
          min r15.z, r15.z, |r16.x|
          mov r36.z, r37.z
          dp3 r16.x, r13.xyzx, r36.xyzx
          dp3 r16.w, r27.xyzx, r36.xyzx
          add r16.w, -r37.w, r16.w
          ge r17.w, r16.w, l(0.000000)
          max r16.w, r10.w, |r16.w|
          movc r16.w, r17.w, r16.w, -r16.w
          max r16.x, -r16.x, l(0.00000010)
          div r16.x, r16.w, r16.x
          min r15.z, r15.z, |r16.x|
          mov r37.z, r38.x
          dp3 r16.x, r13.xyzx, r37.xyzx
          dp3 r16.w, r27.xyzx, r37.xyzx
          add r16.w, -r38.y, r16.w
          ge r17.w, r16.w, l(0.000000)
          max r16.w, r10.w, |r16.w|
          movc r16.w, r17.w, r16.w, -r16.w
          max r16.x, -r16.x, l(0.00000010)
          div r16.x, r16.w, r16.x
          min r15.z, r15.z, |r16.x|
          mov r39.zw, r38.zzzw
          dp3 r16.x, r13.zxyz, r39.xzwx
          dp3 r16.w, r27.zxyz, r39.xzwx
          add r16.w, -r39.y, r16.w
          ge r17.w, r16.w, l(0.000000)
          max r16.w, r10.w, |r16.w|
          movc r16.w, r17.w, r16.w, -r16.w
          max r16.x, -r16.x, l(0.00000010)
          div r16.x, r16.w, r16.x
          min r15.z, r15.z, |r16.x|
          mov r25.x, r31.w
          mov r25.yz, r32.zzwz
          add r25.xyz, r27.xyzx, r25.xyzx
          mad r25.xyz, r13.xyzx, r15.zzzz, r25.xyzx
          dp3 r16.x, r25.xyzx, r25.xyzx
          sqrt r16.x, r16.x
          div r15.z, r15.z, r16.x
          add r15.z, r15.z, r15.z
          sqrt r15.z, r15.z
          mad r15.z, r7.w, l(5.000000), r15.z
          add r15.z, r15.z, l(-0.844800)
          mov r24.y, r29.z
          mov r24.z, r30.x
          dp3 r34.x, r25.xyzx, r24.xyzx
          mov r26.xy, r29.xwxx
          mov r26.z, r30.w
          dp3 r34.y, r25.xyzx, r26.xyzx
          mov r30.x, r29.y
          dp3 r34.z, r25.xyzx, r30.xyzx
          ubfe r16.x, l(9), l(16), r26.w
          utof r34.w, r16.x
          sample_l_indexable(texturecubearray)(float,float,float,float) r25.xyz, r34.xyzw, t8.xyzw, s2, r15.z
          dp3 r29.x, r27.xyzx, r24.xyzx
          dp3 r29.y, r27.xyzx, r26.xyzx
          dp3 r29.z, r27.xyzx, r30.xyzx
          mad_sat r27.xyz, r29.xyzx, r31.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
          mov r32.z, r33.x
          mad r27.xyz, r27.xyzx, r32.xyzx, r33.yzwy
          dp3 r34.x, r2.xyzx, r24.xyzx
          dp3 r34.y, r2.xyzx, r26.xyzx
          dp3 r34.z, r2.xyzx, r30.xyzx
          lt r24.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r34.xyzx
          movc r17.z, r24.x, l(0), l(0.500000)
          add r26.xyz, r17.xyzx, r27.xyzx
          sample_l_indexable(texture3d)(float,float,float,float) r26.xyz, r26.xyzx, t17.xyzw, s4, l(0.000000)
          mul r28.xzw, r34.xxyz, r34.xxyz
          mul r28.xzw, r6.yyyy, r28.xxzw
          movc r18.z, r24.y, l(0), l(0.500000)
          add r24.xyw, r18.xyxz, r27.xyxz
          sample_l_indexable(texture3d)(float,float,float,float) r24.xyw, r24.xywx, t18.xywz, s4, l(0.000000)
          mul r24.xyw, r28.zzzz, r24.xyxw
          mad r24.xyw, r26.xyxz, r28.xxxx, r24.xyxw
          movc r19.z, r24.z, l(0), l(0.500000)
          add r26.xyz, r19.xyzx, r27.xyzx
          sample_l_indexable(texture3d)(float,float,float,float) r26.xyz, r26.xyzx, t19.xyzw, s4, l(0.000000)
          mad r24.xyz, r26.xyzx, r28.wwww, r24.xywx
          sample_l_indexable(texturecubearray)(float,float,float,float) r26.xyz, r34.xyzw, t8.xyzw, s2, l(6.000000)
          mul r27.xyz, r24.xyzx, r26.xyzx
          dp3 r15.z, r27.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r22.xyz, r24.xyzx, r26.xyzx, r22.xyzx
          mul r16.x, r11.y, r15.z
          mul r24.xyz, r6.yyyy, r25.xyzx
          dp3 r6.y, r24.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r6.y, r11.y, r15.z, r6.y
          div r6.y, r16.x, r6.y
          mov r25.x, r22.w
          mov r25.yz, r23.xxyx
          mad r23.xyw, r24.yzyx, r6.yyyy, r25.yzyx
          mov r22.w, r23.w
        endif 
      endif 
    endif 
  endloop 
  mov r20.xyzw, r22.xyzw
  mov r21.yzw, r23.xxyz
  iadd r14.w, r14.w, l(32)
endloop 
lt r6.x, r21.w, l(1.000000)
if_nz r6.x
  mov r14.xy, l(0,0,0,0)
  mov r15.w, l(0)
  mov r16.yz, l(0,0,1.000000,0)
  mov r17.xy, l(0,0,0,0)
  mov r6.x, l(1.000000)
  mov r18.xy, l(0,0,0,0)
  mov r19.xy, l(0,0,0,0)
  mov r22.x, r20.w
  mov r22.yzw, r21.yyzw
  mov r23.xyz, r20.xyzx
  mov r12.z, r21.w
  mov r12.w, l(0)
  loop 
    uge r14.w, r12.w, r11.z
    breakc_nz r14.w
    ushr r14.z, r12.w, l(5)
    iadd r15.xyz, r5.xyzx, r14.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r14.z, r15.xyzw, t7.yzxw
    ieq r14.w, r11.w, r12.w
    ubfe r15.x, r12.y, l(0), r14.z
    movc r14.z, r14.w, r15.x, r14.z
    iadd r14.w, r12.w, cb2[0].x
    mov r24.xyzw, r22.xyzw
    mov r15.xyz, r23.xyzx
    mov r16.w, r12.z
    mov r17.w, r14.z
    loop 
      breakc_z r17.w
      firstbit_lo r18.w, r17.w
      ishl r19.w, l(1), r18.w
      and r23.w, r17.w, r19.w
      if_nz r23.w
        xor r17.w, r17.w, r19.w
        iadd r19.w, r14.w, r18.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r25.xyzw, r19.w, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r26.xy, r19.w, l(16), t11.xyxx
        add r25.xyz, r25.xyzx, -v7.xyzx
        mov r26.z, r25.w
        lt r25.xyz, |r25.xyzx|, r26.zxyz
        and r19.w, r25.y, r25.x
        and r19.w, r25.z, r19.w
        if_nz r19.w
          iadd r18.w, r12.w, r18.w
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r18.w, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xy, r18.w, l(96), t15.xyxx
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r18.w, l(116), t15.zwxy
          add r28.xyz, -r25.yzwy, v7.xyzx
          and r19.w, r27.w, l(0x0000ffff)
          ubfe r23.w, l(6), l(25), r27.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r19.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r19.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r19.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r19.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r19.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r19.w, l(80), t16.xyzw
          dp3 r25.w, r29.xyzx, r28.xyzx
          add_sat r25.w, r29.w, r25.w
          dp3 r26.z, r30.xyzx, r28.xyzx
          add_sat r26.z, r30.w, r26.z
          mul r25.w, r25.w, r26.z
          dp3 r26.z, r31.xyzx, r28.xyzx
          add_sat r26.z, r31.w, r26.z
          mul r25.w, r25.w, r26.z
          dp3 r26.z, r32.xyzx, r28.xyzx
          add_sat r26.z, r32.w, r26.z
          mul r25.w, r25.w, r26.z
          dp3 r26.z, r33.xyzx, r28.xyzx
          add_sat r26.z, r33.w, r26.z
          mul r25.w, r25.w, r26.z
          dp3 r26.z, r34.xyzx, r28.xyzx
          add_sat r26.z, r34.w, r26.z
          mul r16.x, r25.w, r26.z
          and r25.w, r26.x, l(1)
          movc r26.zw, r25.wwww, r16.xxxy, r16.zzzx
          mov r16.x, r26.x
          mov r29.xy, r26.zwzz
          mov r25.w, l(1)
          loop 
            ige r28.w, r25.w, r23.w
            breakc_nz r28.w
            iadd r28.w, r19.w, r25.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r28.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r28.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r28.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r28.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r28.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r28.w, l(80), t16.xyzw
            dp3 r28.w, r30.xyzx, r28.xyzx
            add_sat r28.w, r30.w, r28.w
            mul r28.w, r28.w, r29.x
            dp3 r29.z, r31.xyzx, r28.xyzx
            add_sat r29.z, r31.w, r29.z
            mul r28.w, r28.w, r29.z
            dp3 r29.z, r32.xyzx, r28.xyzx
            add_sat r29.z, r32.w, r29.z
            mul r28.w, r28.w, r29.z
            dp3 r29.z, r33.xyzx, r28.xyzx
            add_sat r29.z, r33.w, r29.z
            mul r28.w, r28.w, r29.z
            dp3 r29.z, r34.xyzx, r28.xyzx
            add_sat r29.z, r34.w, r29.z
            mul r28.w, r28.w, r29.z
            dp3 r29.z, r35.xyzx, r28.xyzx
            add_sat r29.z, r35.w, r29.z
            mul r29.x, r28.w, r29.z
            ushr r29.w, r16.x, l(2)
            ubfe r30.x, l(1), l(2), r16.x
            and r30.y, r29.w, l(2)
            max r30.z, r29.x, r29.y
            mad r28.w, -r28.w, r29.z, l(1.000000)
            mul r28.w, r28.w, r29.y
            movc r6.y, r30.y, r28.w, r30.z
            movc r29.xy, r30.xxxx, r29.xyxx, r6.xyxx
            iadd r25.w, r25.w, l(1)
            mov r16.x, r29.w
          endloop 
          add_sat r6.y, -r16.w, r29.y
          mul r16.x, r26.y, r6.y
          lt r19.w, l(0.000000), r16.x
          if_nz r19.w
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r18.w, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r18.w, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r18.w, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r18.w, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r18.w, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r18.w, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r18.w, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r18.w, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r18.w, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xyzw, r18.w, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r40.xy, r18.w, l(212), t15.xyxx
            mad r24.w, r6.y, r26.y, r24.w
            mul r6.y, r27.z, r16.x
            mov r27.z, r35.z
            dp3 r16.x, r13.xyzx, r27.xyzx
            dp3 r18.w, r28.xyzx, r27.xyzx
            add r18.w, -r35.w, r18.w
            ge r19.w, r18.w, l(0.000000)
            max r18.w, r10.w, |r18.w|
            movc r18.w, r19.w, r18.w, -r18.w
            max r16.x, -r16.x, l(0.00000010)
            div r16.x, r18.w, r16.x
            min r16.x, |r16.x|, l(131072.000000)
            mov r35.z, r36.z
            dp3 r18.w, r13.xyzx, r35.xyzx
            dp3 r19.w, r28.xyzx, r35.xyzx
            add r19.w, -r36.w, r19.w
            ge r23.w, r19.w, l(0.000000)
            max r19.w, r10.w, |r19.w|
            movc r19.w, r23.w, r19.w, -r19.w
            max r18.w, -r18.w, l(0.00000010)
            div r18.w, r19.w, r18.w
            min r16.x, r16.x, |r18.w|
            mov r36.z, r37.z
            dp3 r18.w, r13.xyzx, r36.xyzx
            dp3 r19.w, r28.xyzx, r36.xyzx
            add r19.w, -r37.w, r19.w
            ge r23.w, r19.w, l(0.000000)
            max r19.w, r10.w, |r19.w|
            movc r19.w, r23.w, r19.w, -r19.w
            max r18.w, -r18.w, l(0.00000010)
            div r18.w, r19.w, r18.w
            min r16.x, r16.x, |r18.w|
            mov r37.z, r38.z
            dp3 r18.w, r13.xyzx, r37.xyzx
            dp3 r19.w, r28.xyzx, r37.xyzx
            add r19.w, -r38.w, r19.w
            ge r23.w, r19.w, l(0.000000)
            max r19.w, r10.w, |r19.w|
            movc r19.w, r23.w, r19.w, -r19.w
            max r18.w, -r18.w, l(0.00000010)
            div r18.w, r19.w, r18.w
            min r16.x, r16.x, |r18.w|
            mov r38.z, r39.x
            dp3 r18.w, r13.xyzx, r38.xyzx
            dp3 r19.w, r28.xyzx, r38.xyzx
            add r19.w, -r39.y, r19.w
            ge r23.w, r19.w, l(0.000000)
            max r19.w, r10.w, |r19.w|
            movc r19.w, r23.w, r19.w, -r19.w
            max r18.w, -r18.w, l(0.00000010)
            div r18.w, r19.w, r18.w
            min r16.x, r16.x, |r18.w|
            mov r40.zw, r39.zzzw
            dp3 r18.w, r13.zxyz, r40.xzwx
            dp3 r19.w, r28.zxyz, r40.xzwx
            add r19.w, -r40.y, r19.w
            ge r23.w, r19.w, l(0.000000)
            max r19.w, r10.w, |r19.w|
            movc r19.w, r23.w, r19.w, -r19.w
            max r18.w, -r18.w, l(0.00000010)
            div r18.w, r19.w, r18.w
            min r16.x, r16.x, |r18.w|
            mov r26.x, r32.w
            mov r26.yz, r33.zzwz
            add r26.xyz, r28.xyzx, r26.xyzx
            mad r26.xyz, r13.xyzx, r16.xxxx, r26.xyzx
            dp3 r18.w, r26.xyzx, r26.xyzx
            sqrt r18.w, r18.w
            div r16.x, r16.x, r18.w
            add r16.x, r16.x, r16.x
            sqrt r16.x, r16.x
            mad r16.x, r7.w, l(5.000000), r16.x
            add r16.x, r16.x, l(-0.844800)
            mov r25.y, r30.z
            mov r25.z, r31.x
            dp3 r35.x, r26.xyzx, r25.xyzx
            mov r27.xy, r30.xwxx
            mov r27.z, r31.w
            dp3 r35.y, r26.xyzx, r27.xyzx
            mov r31.x, r30.y
            dp3 r35.z, r26.xyzx, r31.xyzx
            ubfe r18.w, l(9), l(16), r27.w
            utof r35.w, r18.w
            sample_l_indexable(texturecubearray)(float,float,float,float) r26.xyz, r35.xyzw, t8.xyzw, s2, r16.x
            dp3 r30.x, r28.xyzx, r25.xyzx
            dp3 r30.y, r28.xyzx, r27.xyzx
            dp3 r30.z, r28.xyzx, r31.xyzx
            mad_sat r28.xyz, r30.xyzx, r32.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
            mov r33.z, r34.x
            mad r28.xyz, r28.xyzx, r33.xyzx, r34.yzwy
            dp3 r35.x, r2.xyzx, r25.xyzx
            dp3 r35.y, r2.xyzx, r27.xyzx
            dp3 r35.z, r2.xyzx, r31.xyzx
            lt r25.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r35.xyzx
            movc r17.z, r25.x, l(0), l(0.500000)
            add r27.xyz, r17.xyzx, r28.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r27.xyz, r27.xyzx, t17.xyzw, s4, l(0.000000)
            mul r29.xzw, r35.xxyz, r35.xxyz
            mul r29.xzw, r6.yyyy, r29.xxzw
            movc r18.z, r25.y, l(0), l(0.500000)
            add r25.xyw, r18.xyxz, r28.xyxz
            sample_l_indexable(texture3d)(float,float,float,float) r25.xyw, r25.xywx, t18.xywz, s4, l(0.000000)
            mul r25.xyw, r29.zzzz, r25.xyxw
            mad r25.xyw, r27.xyxz, r29.xxxx, r25.xyxw
            movc r19.z, r25.z, l(0), l(0.500000)
            add r27.xyz, r19.xyzx, r28.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r27.xyz, r27.xyzx, t19.xyzw, s4, l(0.000000)
            mad r25.xyz, r27.xyzx, r29.wwww, r25.xywx
            sample_l_indexable(texturecubearray)(float,float,float,float) r27.xyz, r35.xyzw, t8.xyzw, s2, l(6.000000)
            mul r28.xyz, r25.xyzx, r27.xyzx
            dp3 r16.x, r28.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r15.xyz, r25.xyzx, r27.xyzx, r15.xyzx
            mul r17.z, r11.y, r16.x
            mul r25.xyz, r6.yyyy, r26.xyzx
            dp3 r6.y, r25.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r6.y, r11.y, r16.x, r6.y
            div r6.y, r17.z, r6.y
            mad r24.xyz, r25.xyzx, r6.yyyy, r24.xyzx
          endif 
        endif 
      endif 
    endloop 
    mov r22.xyzw, r24.xyzw
    mov r23.xyz, r15.xyzx
    iadd r12.w, r12.w, l(32)
  endloop 
  mov r21.xyzw, r22.zxyw
  mov r20.xyz, r23.xyzx
  mov r21.xyzw, r21.yzxw
else 
  mov r21.x, r20.w
endif 
max r5.x, r21.w, l(1.000000)
rcp r5.x, r5.x
mov_sat r21.w, r21.w
mul r11.yzw, r5.xxxx, r20.xxyz
mul r12.yzw, r5.xxxx, r21.xxyz
lt r5.y, r21.w, l(0.990000)
if_nz r5.y
  add r5.y, -r21.w, l(1.000000)
  mul r5.z, r5.y, cb2[19].x
  add r14.xyz, v7.xyzx, -cb2[35].xyzx
  mul r15.x, r14.x, cb2[35].w
  mul r15.yz, r14.yyzy, cb2[36].xxyx
  add_sat r14.xyz, r15.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mul r15.xy, r14.xyxx, cb2[36].zwzz
  mul r15.z, r14.z, cb2[37].x
  add r14.xyz, r15.xyzx, cb2[37].yzwy
  lt r15.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r2.xyzx
  movc r15.xyz, r15.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
  mov r15.w, l(0)
  add r16.xyz, r14.xyzx, r15.wwxw
  sample_l_indexable(texture3d)(float,float,float,float) r16.xyz, r16.xyzx, t17.xyzw, s4, l(0.000000)
  mul r17.xyz, r2.xyzx, r2.xyzx
  mul r17.xyz, r5.zzzz, r17.xyzx
  add r18.xyz, r14.xyzx, r15.wwyw
  sample_l_indexable(texture3d)(float,float,float,float) r18.xyz, r18.xyzx, t18.xyzw, s4, l(0.000000)
  mul r18.xyz, r17.yyyy, r18.xyzx
  mad r16.xyz, r16.xyzx, r17.xxxx, r18.xyzx
  add r14.xyz, r14.xyzx, r15.wwzw
  sample_l_indexable(texture3d)(float,float,float,float) r14.xyz, r14.xyzx, t19.xyzw, s4, l(0.000000)
  mad r14.xyz, r14.xyzx, r17.zzzz, r16.xyzx
  mov r2.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r15.xyz, r2.xyzw, t8.xyzw, s2, l(6.000000)
  mul r14.xyz, r14.xyzx, r15.xyzx
  dp3 r2.w, r14.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  mad r11.yzw, r20.xxyz, r5.xxxx, r14.xxyz
  mov r13.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r13.xyz, r13.xyzw, t8.xyzw, s2, r9.w
  mad r5.x, cb2[19].x, r5.y, -r2.w
  mad r2.w, r5.w, r5.x, r2.w
  mad r12.yzw, r13.xxyz, r2.wwww, r12.yyzw
endif 
if_nz cb0[28].z
  dp3 r2.w, r4.xyzx, r2.xyzx
  add r2.w, r2.w, r2.w
  mad r5.xyz, r2.xyzx, -r2.wwww, r4.xyzx
  dp3 r2.w, r4.xyzx, -r2.xyzx
  add r2.w, r2.w, r2.w
  mad r13.xyz, r2.xyzx, r2.wwww, r4.xyzx
  movc r5.xyz, v10.xxxx, r5.xyzx, r13.xyzx
  if_nz cb0[28].w
    mul r13.xyz, v7.yyyy, cb1[5].xyzx
    mad r13.xyz, v7.xxxx, cb1[4].xyzx, r13.xyzx
    mad r13.xyz, v7.zzzz, cb1[6].xyzx, r13.xyzx
    mul r14.xyz, r5.xyzx, cb0[21].zzzz
    mul r15.xyz, r14.yyyy, cb1[5].xyzx
    mad r14.xyw, r14.xxxx, cb1[4].xyxz, r15.xyxz
    mad r14.xyz, r14.zzzz, cb1[6].xyzx, r14.xywx
    min r2.w, cb0[21].x, l(1000.000000)
    mad r13.xyz, r14.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000), r13.xyzx
    div r2.w, r2.w, cb0[21].z
    mov r15.xyz, r12.yzwy
    mov r16.xyz, r13.xyzx
    mov r5.w, l(0)
    loop 
      itof r6.x, r5.w
      ge r6.x, r6.x, r2.w
      breakc_nz r6.x
      add r16.xyz, r14.xyzx, r16.xyzx
      mul r17.xyz, r16.yyyy, cb1[1].xywx
      mad r17.xyz, r16.xxxx, cb1[0].xywx, r17.xyzx
      mad r17.xyz, r16.zzzz, cb1[2].xywx, r17.xyzx
      add r17.xyz, r17.xyzx, cb1[3].xywx
      max r6.x, |r17.y|, |r17.x|
      lt r6.x, r17.z, r6.x
      if_nz r6.x
        break 
      endif 
      div r6.xy, r17.xyxx, r17.zzzz
      mad r6.xy, r6.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      sample_l_indexable(texture2d)(float,float,float,float) r6.x, r6.xyxx, t26.xyzw, s8, l(1.000000)
      lt r6.y, |r6.x|, r16.z
      ge r7.w, |r6.x|, v0.w
      and r6.y, r6.y, r7.w
      if_nz r6.y
        add r6.x, -|r6.x|, r16.z
        mul r6.x, r6.x, cb0[21].w
        mad r17.xyz, -r6.xxxx, r14.xyzx, r16.xyzx
        mul r18.xyz, r17.yyyy, cb1[1].xywx
        mad r17.xyw, r17.xxxx, cb1[0].xyxw, r18.xyxz
        mad r17.xyz, r17.zzzz, cb1[2].xywx, r17.xywx
        add r17.xyz, r17.xyzx, cb1[3].xywx
        div r6.xy, r17.xyxx, r17.zzzz
        mad r6.xy, r6.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r17.xyz, r6.xyxx, t30.xyzw, s8, l(0.000000)
        mul r17.xyz, r17.xyzx, cb1[85].xxxx
        mov r15.xyz, r17.xyzx
        break 
      endif 
      iadd r5.w, r5.w, l(1)
    endloop 
    mov r12.yzw, r15.xxyz
  else 
    mul r2.w, r0.w, cb0[21].y
    mad r5.xyz, r5.xyzx, r2.wwww, v7.xyzx
    mul r13.xyz, r5.yyyy, cb1[9].xywx
    mad r5.xyw, r5.xxxx, cb1[8].xyxw, r13.xyxz
    mad r5.xyz, r5.zzzz, cb1[10].xywx, r5.xywx
    add r5.xyz, r5.xyzx, cb1[11].xywx
    div r5.xy, r5.xyxx, r5.zzzz
    max r2.w, |r5.y|, |r5.x|
    mad r5.xy, r5.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r5.z, r5.xyxx, t26.yzxw, s8, l(0.000000)
    ge r5.z, |r5.z|, v0.w
    lt r2.w, r2.w, l(1.000000)
    and r2.w, r2.w, r5.z
    sample_indexable(texture2d)(float,float,float,float) r5.xyz, r5.xyxx, t30.xyzw, s8
    if_nz r2.w
      mul r12.yzw, r5.xxyz, cb1[85].xxxx
    endif 
  endif 
endif 
dp3 r2.w, r2.xyzx, cb2[17].xyzx
mov_sat r5.x, r2.w
ge r5.y, l(0.000000), r5.x
if_nz r5.y
  mov r5.z, l(0)
endif 
if_z r5.y
  mul r13.xyz, v7.yyyy, cb2[29].xyzx
  mad r13.xyz, v7.xxxx, cb2[28].xyzx, r13.xyzx
  mad r13.xyz, v7.zzzz, cb2[30].xyzx, r13.xyzx
  add r13.xyz, r13.xyzx, cb2[31].xyzx
  add r5.y, r13.z, -cb2[17].w
  mad r5.y, -r5.y, l(0.00006104), l(1.000000)
  mov_sat r5.w, r5.y
  eq r5.w, r5.y, r5.w
  if_nz r5.w
    mov r5.w, l(0)
    mov r6.x, l(0)
    loop 
      ge r6.y, r5.w, l(3.000000)
      breakc_nz r6.y
      ftou r6.y, r5.w
      add r14.xy, r13.xyxx, -cb2[r6.y + 20].xyxx
      max r7.w, |r14.y|, |r14.x|
      mul r6.x, r7.w, cb2[r6.y + 20].z
      lt r6.y, r6.x, l(1.000000)
      if_nz r6.y
        break 
      endif 
      add r5.w, r5.w, l(1.000000)
      mov r6.x, l(0)
    endloop 
  else 
    mov r5.w, l(3.000000)
    mov r6.x, l(0)
  endif 
  ge r6.y, r5.w, l(3.000000)
  if_nz r6.y
    mul r14.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
    rcp r15.xz, r14.xxxx
    mov r15.y, -r15.z
    mad r14.xyz, r13.xyxx, r15.xyzx, r14.yzyy
    add r15.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r14.xyz, r14.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r14.xyz, r15.xyzx, r14.xyzx
    mul r15.xy, r14.zyzz, cb2[32].xxxx
    round_ni r15.xy, r15.xyxx
    mul r7.w, r15.y, cb2[27].x
    mad r7.w, r7.w, cb2[32].x, r15.x
    ftou r7.w, r7.w
    iadd r7.w, r7.w, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r9.w, r7.w, l(0), t23.xxxx
    and r10.w, r9.w, l(0x40000000)
    ishl r13.w, r9.w, l(2)
    if_z r10.w
      and r10.w, r9.w, l(0x01ffffff)
      iadd r15.x, r7.w, r10.w
      ushr r7.w, r9.w, l(25)
      utof r7.w, r7.w
      mul r14.xyz, r7.wwww, r14.xyzx
      frc r14.xyz, r14.xyzx
      mul r14.xyz, r14.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
      ftou r14.xyz, r14.xyzx
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.z, r15.x, l(0), t23.xxxx
      ushr r16.xy, r14.zyzz, l(6, 6, 0, 0)
      and r7.w, r15.z, l(0xc0000000)
      iadd r9.w, r15.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r9.w, r9.w, l(0), t23.xxxx
      movc r9.w, r16.y, r15.z, r9.w
      ushr r10.w, r9.w, l(13)
      movc r9.w, r16.x, r10.w, r9.w
      and r9.w, r9.w, l(8191)
      iadd r16.x, r9.w, r15.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.z, r16.x, l(0), t23.xxxx
      mov r15.y, l(0)
      mov r16.y, l(1)
      movc r16.xyz, r7.wwww, r15.xyzx, r16.xyzx
      movc r17.yz, r7.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r18.xy, r14.zyzz, r17.yyyy
      and r18.xy, r18.xyxx, l(1, 1, 0, 0)
      and r9.w, r16.z, l(0xc0000000)
      iadd r10.w, r16.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r10.w, r10.w, l(0), t23.xxxx
      movc r10.w, r18.y, r16.z, r10.w
      ushr r14.w, r10.w, l(13)
      movc r10.w, r18.x, r14.w, r10.w
      and r10.w, r10.w, l(8191)
      iadd r17.x, r10.w, r16.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.w, r17.x, l(0), t23.xxxx
      movc r16.xyz, r9.wwww, r16.xyzx, r17.xzwx
      movc r15.xyz, r7.wwww, r15.xyzx, r16.xyzx
      and r7.w, r15.z, l(0xc0000000)
      if_z r7.w
        iadd r7.w, -r15.y, l(6)
        ushr r16.xy, r14.zyzz, r7.wwww
        or r7.w, r15.z, l(0x40000000)
        bfi r9.w, l(1), l(1), r16.y, l(0)
        bfi r9.w, l(1), l(0), r16.x, r9.w
        imul null, r9.w, r9.w, l(10)
        ushr r7.w, r7.w, r9.w
        and r7.w, r7.w, l(1023)
        iadd r16.x, r7.w, r15.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.w, r16.x, l(0), t23.xxxx
        iadd r16.yz, r15.yyyy, l(0, 1, 2, 0)
        iadd r7.w, -r16.y, l(6)
        ushr r15.yw, r14.zzzy, r7.wwww
        and r7.w, r16.w, l(0xc0000000)
        or r9.w, r16.w, l(0x40000000)
        bfi r10.w, l(1), l(1), r15.w, l(0)
        bfi r10.w, l(1), l(0), r15.y, r10.w
        imul null, r10.w, r10.w, l(10)
        ushr r9.w, r9.w, r10.w
        and r9.w, r9.w, l(1023)
        iadd r17.x, r9.w, r16.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.z, r17.x, l(0), t23.xxxx
        mov r17.y, r16.z
        movc r17.xyz, r7.wwww, r16.xywx, r17.xyzx
        iadd r9.w, -r17.y, l(6)
        ushr r15.yw, r14.zzzy, r9.wwww
        and r9.w, r17.z, l(0xc0000000)
        or r10.w, r17.z, l(0x40000000)
        bfi r14.w, l(1), l(1), r15.w, l(0)
        bfi r14.w, l(1), l(0), r15.y, r14.w
        imul null, r14.w, r14.w, l(10)
        ushr r10.w, r10.w, r14.w
        and r10.w, r10.w, l(1023)
        iadd r18.x, r10.w, r17.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.y, r18.x, l(0), t23.xxxx
        movc r15.yw, r9.wwww, r17.xxxz, r18.xxxy
        movc r15.xz, r7.wwww, r16.xxwx, r15.yywy
      endif 
      and r7.w, r15.z, l(0xc0000000)
      if_z r7.w
        ubfe r9.w, l(14), l(15), r15.z
        utof r9.w, r9.w
        mul r9.w, r9.w, cb2[27].w
        mul r9.w, r9.w, l(0.00006104)
        and r15.yw, r15.zzzz, l(0, 0x00007fff, 0, 0x20000000)
        utof r10.w, r15.y
        mul r10.w, r10.w, cb2[27].w
        mul r10.w, r10.w, l(0.00003052)
        and r14.w, r14.y, l(3)
        iadd r14.w, r14.w, r15.x
        iadd r14.w, r14.w, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r14.w, r14.w, l(0), t23.xxxx
        bfi r16.xyz, l(2, 2, 1, 0), l(3, 1, 4, 0), r14.xyzx, l(0, 0, 0, 0)
        ushr r14.x, r14.w, r16.x
        and r14.x, r14.x, l(255)
        utof r14.x, r14.x
        mul r14.x, r10.w, r14.x
        mad r14.x, r14.x, l(0.00392157), r9.w
        iadd r14.y, r16.y, l(1)
        ubfe r14.z, l(1), l(1), r14.z
        iadd r14.y, r14.z, r14.y
        iadd r14.y, r14.y, r15.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r14.y, r14.y, l(0), t23.xxxx
        ushr r14.y, r14.y, r16.z
        and r14.y, r14.y, l(0x0000ffff)
        utof r14.y, r14.y
        mul r10.w, r10.w, r14.y
        mad r9.w, r10.w, l(0.00001526), r9.w
        movc r13.w, r15.w, r14.x, r9.w
      else 
        and r9.w, r15.z, l(0x80000000)
        iadd r10.w, r15.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r10.w, r10.w, l(0), t23.xxxx
        movc r9.w, r9.w, r10.w, l(0)
        ishl r10.w, r15.z, l(2)
        ushr r14.x, r9.w, l(16)
        f16tof32 r14.x, r14.x
        and r9.w, r9.w, l(0x0000ffff)
        f16tof32 r9.w, r9.w
        mad r10.w, r13.x, r14.x, r10.w
        mad r9.w, r13.y, r9.w, r10.w
        movc r13.w, r7.w, r9.w, r13.w
      endif 
    endif 
    mad r7.w, -cb2[27].z, l(2.000000), r13.z
    lt r7.w, r13.w, r7.w
    movc r5.z, r7.w, l(0), l(1.000000)
  endif 
  if_z r6.y
    if_z cb2[58].y
      ftou r6.y, r5.w
      add r13.zw, r13.xxxy, -cb2[r6.y + 20].xxxy
      mul r13.zw, r13.zzzw, cb2[r6.y + 20].zzzz
      mad r14.xy, r13.zwzz, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r6.y, cb2[26].y
      add r14.z, r5.w, r6.y
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r6.y, r14.xyzx, t13.xxxx, s13, r5.y
      sample_l_indexable(texture2darray)(float,float,float,float) r7.w, r14.xyzx, t31.yzwx, s0, l(0.000000)
      add r6.y, r6.y, r7.w
      add_sat r6.y, r6.y, l(-1.000000)
      mul r7.w, r6.y, r6.y
      mul r5.z, r6.y, r7.w
    endif 
    if_nz cb2[58].y
      mov r14.x, -r11.x
      ftou r6.y, r5.w
      add r5.w, r5.w, l(1.000000)
      min r5.w, r5.w, l(2.000000)
      ftou r5.w, r5.w
      add r6.x, -r6.x, l(1.000000)
      mul r6.x, r6.x, l(28.000000)
      ftou r6.x, r6.x
      add r13.zw, r13.xxxy, -cb2[r6.y + 20].xxxy
      mul r13.zw, r13.zzzw, cb2[r6.y + 20].zzzz
      mad r13.zw, r13.zzzw, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
      add r13.xy, r13.xyxx, -cb2[r5.w + 20].xyxx
      mul r13.xy, r13.xyxx, cb2[r5.w + 20].zzzz
      mad r13.xy, r13.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      mov r14.y, r12.x
      mov r14.z, r11.x
      mov r7.w, l(0)
      mov r9.w, l(0)
      loop 
        uge r10.w, r9.w, l(8)
        breakc_nz r10.w
        ult r10.w, r6.x, r9.w
        movc r15.xy, r10.wwww, r13.xyxx, r13.zwzz
        movc r14.w, r10.w, cb2[r5.w + 20].w, cb2[r6.y + 20].w
        movc r10.w, r10.w, r5.w, r6.y
        dp2 r16.x, icb[r9.w + 0].yxyy, r14.xyxx
        dp2 r16.y, icb[r9.w + 0].yxyy, r14.yzyy
        mad r15.xy, r16.xyxx, r14.wwww, r15.xyxx
        iadd r10.w, r10.w, cb2[26].y
        utof r15.z, r10.w
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.w, r15.xyzx, t13.xxxx, s13, r5.y
        sample_l_indexable(texture2darray)(float,float,float,float) r14.w, r15.xyzx, t31.yzwx, s0, l(0.000000)
        add r10.w, r10.w, r14.w
        add_sat r10.w, r10.w, l(-1.000000)
        mad r7.w, r10.w, l(0.125000), r7.w
        iadd r9.w, r9.w, l(1)
      endloop 
      mul r5.y, r7.w, r7.w
      mul r5.z, r7.w, r5.y
    endif 
  endif 
endif 
and r5.y, cb2[53].x, l(0x0000ffff)
ult r5.w, l(0), r5.y
lt r6.x, l(0.000000), r5.z
and r5.w, r5.w, r6.x
if_nz r5.w
  iadd r5.y, r5.y, cb2[0].x
  iadd r5.y, r5.y, l(-1)
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r5.w, r5.y, l(52), t12.xxxx
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.xyzw, r5.y, l(68), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.xyzw, r5.y, l(84), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r5.y, l(100), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r5.y, l(116), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r5.y, l(132), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r5.y, l(148), t12.xyzw
  mad r2.w, |r2.w|, l(-0.200000), l(0.400000)
  mad r19.xyz, r2.xyzx, r2.wwww, v7.xyzx
  mov r19.w, l(1.000000)
  dp4 r6.x, r13.xyzw, r19.xyzw
  dp4 r6.y, r14.xyzw, r19.xyzw
  dp4 r2.w, r15.xyzw, r19.xyzw
  dp4 r7.w, r16.xyzw, r19.xyzw
  lt r9.w, r7.w, r2.w
  div r6.xy, r6.xyxx, r7.wwww
  mad r6.xy, r6.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  add r6.xy, r18.zwzz, r6.xyxx
  mul r6.xy, r18.xyxx, r6.xyxx
  div r13.xy, r5.wwww, r17.xzxx
  add r13.zw, -r13.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
  ge r13.zw, r6.xxxy, r13.zzzw
  ge r13.xy, r13.xyxx, r6.xyxx
  or r13.xy, r13.xyxx, r13.zwzz
  or r10.w, r13.y, r13.x
  or r9.w, r9.w, r10.w
  if_z r9.w
    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r9.w, r5.y, l(28), t12.xxxx
    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.xy, r5.y, l(164), t12.xyxx
    mov_sat r6.xy, r6.xyxx
    mad r14.xy, r6.xyxx, r17.xzxx, r17.ywyy
    mul r5.y, r7.w, r13.y
    mad r2.w, r13.x, r7.w, r2.w
    div r2.w, r2.w, r5.y
    max r2.w, r2.w, l(0.00006104)
    and r5.y, r9.w, l(0x0000ffff)
    if_nz cb2[58].y
      mov r13.x, -r11.x
      utof r15.z, r5.y
      mov r13.y, r12.x
      mov r13.z, r11.x
      mov r6.xy, l(0,0,0,0)
      loop 
        ige r7.w, r6.y, l(8)
        breakc_nz r7.w
        dp2 r16.x, icb[r6.y + 0].yxyy, r13.xyxx
        dp2 r16.y, icb[r6.y + 0].yxyy, r13.yzyy
        mad r15.xy, r16.xyxx, r5.wwww, r14.xyxx
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r7.w, r15.xyzx, t9.xxxx, s13, r2.w
        mad r6.x, r7.w, l(0.125000), r6.x
        iadd r6.y, r6.y, l(1)
      endloop 
    else 
      utof r14.z, r5.y
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r6.x, r14.xyzx, t9.xxxx, s13, r2.w
    endif 
    mul r2.w, r6.x, r6.x
    mul r2.w, r6.x, r2.w
  else 
    mov r2.w, l(1.000000)
  endif 
  mul r5.z, r2.w, r5.z
endif 
lt r2.w, l(0.000000), r5.x
lt r5.y, l(0.000000), r5.z
if_nz r5.y
  if_nz cb2[23].x
    mov r3.w, l(1.000000)
    dp4 r5.y, cb2[24].xyzw, r3.xyzw
    dp4 r3.x, cb2[25].xyzw, r3.xyzw
    frc r13.x, r5.y
    frc r13.y, r3.x
    iadd r3.x, l(-1), cb2[23].x
    utof r13.z, r3.x
    sample_l_indexable(texture2darray)(float,float,float,float) r3.xyz, r13.xyzx, t20.xyzw, s2, l(0.000000)
    add r3.xyz, r3.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
    mad r3.xyz, cb2[23].yyyy, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mul r3.xyz, r3.xyzx, cb2[18].xyzx
  else 
    mov r3.xyz, cb2[18].xyzx
  endif 
  mul r3.xyz, r3.xyzx, r5.zzzz
  add r3.w, r5.x, r7.z
  div r3.w, r5.x, r3.w
  mad r5.yzw, r3.xxyz, r3.wwww, r11.yyzw
  mad r7.xzw, -v7.xxyz, r7.xxxx, cb2[17].xxyz
  dp3 r3.w, r7.xzwx, r7.xzwx
  rsq r3.w, r3.w
  mul r7.xzw, r3.wwww, r7.xxzw
  dp3_sat r3.w, r2.xyzx, r7.xzwx
  dp3_sat r6.x, r7.xzwx, r10.xyzx
  mul r6.y, r3.w, r3.w
  mad r7.xz, r6.yyyy, cb0[15].xxzx, l(1.000000, 0.000000, 1.000000, 0.000000)
  mul r7.xz, r7.xxzx, r7.xxzx
  div r7.xz, cb0[15].yywy, r7.xxzx
  mul r7.xz, r3.wwww, r7.xxzx
  mul r3.w, r6.x, l(4.000000)
  div r6.xy, r7.xzxx, r3.wwww
  mul r6.xy, r6.xyxx, cb0[16].xyxx
  mul r7.xzw, r3.xxyz, r6.xxxx
  mad r7.xzw, r7.xxzw, r5.xxxx, r12.yyzw
  mul r3.xyz, r3.xyzx, r6.yyyy
  mad r3.xyz, r3.xyzx, r5.xxxx, r7.xzwx
else 
  mov r5.yzw, r11.yyzw
  mov r3.xyz, r12.yzwy
endif 
movc r5.xyz, r2.wwww, r5.yzwy, r11.yzwy
movc r3.xyz, r2.wwww, r3.xyzx, r12.yzwy
sample_indexable(texture2d)(float,float,float,float) r10.xyzw, r6.zwzz, t0.xyzw, s1
mul r2.yw, r2.yyyy, cb1[5].xxxy
mad r2.xy, r2.xxxx, cb1[4].xyxx, r2.ywyy
mad r2.xy, r2.zzzz, cb1[6].xyxx, r2.xyxx
add r2.z, r0.w, l(1.000000)
log r2.z, r2.z
mul r2.z, r2.z, cb0[16].w
min r2.z, r2.z, l(500.000000)
mad r2.xy, r2.zzzz, r2.xyxx, v0.xyxx
add r2.zw, cb1[44].xxxy, l(0.000000, 0.000000, -1.000000, -1.000000)
max r2.xy, r2.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r2.xy, r2.zwzz, r2.xyxx
ftoi r11.xy, r2.xyxx
mov r11.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r2.z, r11.xyzw, t29.yzxw
ge r2.w, r2.z, l(0.984375)
mul r3.w, r2.z, l(1.01587307)
mad r2.z, r2.z, l(64.000000), l(-63.000000)
movc r2.z, r2.w, r2.z, r3.w
max r2.z, r2.z, l(0.00000001)
rcp r2.z, r2.z
lt r0.x, r0.x, r2.z
mul r2.xy, r2.xyxx, cb1[44].zwzz
sample_indexable(texture2d)(float,float,float,float) r2.xyz, r2.xyxx, t30.xyzw, s9
if_z r0.x
  ftoi r11.xy, v0.xyxx
  mov r11.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r2.xyz, r11.xyzw, t30.xyzw
endif 
mul r6.xyw, r2.xyxz, cb1[85].xxxx
mad r0.x, r0.w, l(2.000000), l(1.000000)
log r0.x, r0.x
mul r11.x, r0.x, l(0.08333334)
mov r11.y, l(0)
sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r11.xyxx, t37.xyzw, s8
mul r7.xzw, r6.xxyw, r11.xxyz
mul r0.x, r10.w, r11.w
mad r10.xyz, r10.xyzx, r5.xyzx, -r7.xzwx
mad r7.xzw, r0.xxxx, r10.xxyz, r7.xxzw
mad r2.xyz, -r2.xyzx, cb1[85].xxxx, r7.xzwx
mad r2.xyz, r4.wwww, r2.xyzx, r6.xywx
mad r6.xyw, r9.xyxz, r5.xyxz, -r2.xyxz
mad r2.xyz, r8.xxxx, r6.xywx, r2.xyzx
mad r0.xyw, r3.xyxz, r0.yyyy, r8.yzyw
add r2.w, -r6.z, l(1.000000)
mul r3.x, r2.w, r2.w
mul r3.x, r3.x, r3.x
mul r2.w, r2.w, r3.x
mad r2.w, r2.w, l(0.980000), l(0.020000)
add r0.xyw, -r2.xyxz, r0.xyxw
mad r0.xyw, r2.wwww, r0.xyxw, r2.xyxz
mad r2.xyz, cb0[22].yzwy, r5.xyzx, -r0.xywx
mad r2.xyz, r7.yyyy, r2.xyzx, r0.xywx
movc r0.xyw, cb0[28].yyyy, r2.xyxz, r0.xyxw
lt r2.x, l(0.000000), cb2[9].z
if_nz r2.x
  sqrt r2.x, r0.z
  lt r2.y, l(0.000000), cb2[13].w
  if_nz r2.y
    mad r2.yz, r2.xxxx, cb2[15].xxyx, cb2[14].zzwz
    mul r2.yz, r2.yyzy, cb2[16].xxyx
    lt r2.w, l(0.010000), |v7.z|
    mul r3.xy, v7.zzzz, cb2[15].zwzz
    mul r3.zw, r3.xxxy, l(0.000000, 0.000000, -1.442695, -1.442695)
    exp r3.zw, r3.zzzw
    add r3.zw, -r3.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    div r3.xy, r3.zwzz, r3.xyxx
    mul r3.xy, r2.yzyy, r3.xyxx
    movc r2.yz, r2.wwww, r3.xxyx, r2.yyzy
    mul r3.xyz, r2.yyyy, cb2[12].xyzx
    exp r3.xyz, r3.xyzx
    mul r2.yzw, r2.zzzz, cb2[12].xxyz
    exp r2.yzw, r2.yyzw
    add r2.yzw, -r3.xxyz, r2.yyzw
    mad r2.yzw, cb2[13].wwww, r2.yyzw, r3.xxyz
  else 
    mad r3.x, r2.x, cb2[15].x, cb2[14].z
    mul r3.x, r3.x, cb2[16].x
    lt r3.y, l(0.010000), |v7.z|
    mul r3.z, v7.z, cb2[15].z
    mul r3.w, r3.z, l(-1.442695)
    exp r3.w, r3.w
    add r3.w, -r3.w, l(1.000000)
    div r3.z, r3.w, r3.z
    mul r3.z, r3.z, r3.x
    movc r3.x, r3.y, r3.z, r3.x
    mul r3.xyz, r3.xxxx, cb2[12].xyzx
    exp r2.yzw, r3.xxyz
  endif 
  mad r2.yzw, r2.yyzw, cb2[9].zzzz, l(0.000000, 1.000000, 1.000000, 1.000000)
  add_sat r2.yzw, r2.yyzw, -cb2[9].zzzz
  dp3 r3.x, cb2[7].yzwy, -r4.xyzx
  mad r3.y, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r3.z, cb2[8].w, -r3.x, l(1.000000)
  mul r3.z, r3.z, r3.z
  mul r3.z, r3.z, l(12.566371)
  div r3.y, r3.y, r3.z
  add r2.x, r2.x, -cb2[10].w
  mul_sat r2.x, r2.x, cb2[11].w
  mul r2.x, r2.x, r3.y
  mov_sat r3.x, r3.x
  mad r3.x, r3.x, r3.x, l(1.000000)
  mad r3.x, r3.x, l(0.05968310), l(-1.000000)
  mad r3.x, cb2[8].z, r3.x, l(1.000000)
  mul r3.yzw, r2.xxxx, cb2[11].xxyz
  mad r3.xyz, r3.xxxx, cb2[10].xyzx, r3.yzwy
  mul r3.xyz, r3.xyzx, cb2[9].wwww
  add r5.xyz, -r2.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r3.xyz, r3.xyzx, r5.xyzx
  mad r2.xyz, r0.xywx, r2.yzwy, r3.xyzx
else 
  mul r2.w, v7.z, cb2[6].x
  mad r3.x, cb2[6].x, v7.z, cb2[5].x
  lt r3.y, |r2.w|, l(0.000100)
  min r3.z, r3.x, l(64.000000)
  mul r3.z, r3.z, l(1.442695)
  exp r3.z, r3.z
  mov_sat r3.w, cb2[6].z
  lt r4.w, r3.x, l(0.000000)
  add r3.x, r3.x, l(1.000000)
  movc r3.x, r4.w, r3.z, r3.x
  add r3.x, r3.x, -cb2[6].z
  movc r2.w, r3.y, l(1.000000), r2.w
  div r2.w, r3.x, r2.w
  movc r2.w, r3.y, r3.w, r2.w
  mul r2.w, r2.w, cb2[5].z
  sqrt r0.z, r0.z
  mad r0.z, r2.w, r0.z, cb2[5].w
  exp r0.z, r0.z
  min r0.z, r0.z, l(1.000000)
  add r0.z, -r0.z, l(1.000000)
  dp3 r2.w, cb2[7].yzwy, r4.xyzx
  mad_sat r2.w, cb2[8].y, r2.w, cb2[8].x
  add r3.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r3.xyzw, r2.wwww, r3.xyzw, cb2[4].xyzw
  mul r0.z, r0.z, r3.w
  add r3.xyz, -r0.xywx, r3.xyzx
  mad r2.xyz, r0.zzzz, r3.xyzx, r0.xywx
endif 
mul r0.xyz, r2.xyzx, cb1[85].yyyy
ge r2.xyz, r0.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.xyz, r0.xyzx, r2.xyzx
min r0.xyz, r0.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
imm_atomic_iadd r2.x, u6, r1.xyxx, l(1)
and r1.zw, r2.xxxx, l(0, 0, 0x0000ffff, 0x0000ffff)
ult r2.x, r1.w, cb2[58].z
if_nz r2.x
  max r2.yzw, r0.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
  max r3.x, r2.w, r2.z
  max r3.x, r2.y, r3.x
  and r3.x, r3.x, l(0x7f800000)
  iadd r3.x, r3.x, l(0x00800000)
  add r2.yzw, r2.yyzw, r3.xxxx
  ubfe r2.y, l(8), l(15), r2.y
  ushr r2.zw, r2.zzzw, l(0, 0, 15, 15)
  bfi r2.zw, l(0, 0, 8, 8), l(0, 0, 8, 16), r2.zzzw, l(0, 0, 0, 0)
  iadd r2.y, r2.z, r2.y
  iadd r2.y, r2.w, r2.y
  ishl r2.z, r3.x, l(1)
  iadd r3.xzw, r2.zzzz, r2.yyyy
  ishl r2.y, v0.z, l(2)
  bfi r3.y, l(11), l(0), l(2046), r2.y
  store_uav_typed u7.xyzw, r1.xyzw, r3.xyzw
endif 
mov r0.w, l(1.000000)
movc o0.xyzw, r2.xxxx, l(0,0,0,0), r0.xyzw
ret 
// Approximately 1633 instruction slots used
