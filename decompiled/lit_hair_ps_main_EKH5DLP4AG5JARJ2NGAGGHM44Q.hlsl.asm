//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:36:58 2021
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float baseNormalHeight;            // Offset:  160 Size:     4
//   float2 glossRange;                 // Offset:  164 Size:     8
//   float anisotropy;                  // Offset:  172 Size:     4
//   float3 specColorTint;              // Offset:  176 Size:    12
//   float3 transColorTint;             // Offset:  192 Size:    12
//   bool useAlphaControls;             // Offset:  204 Size:     4
//   float zFeatherDistance;            // Offset:  208 Size:     4
//   float falloffBegin;                // Offset:  212 Size:     4
//   float falloffEnd;                  // Offset:  216 Size:     4
//   float alphaRevealSoftEdge;         // Offset:  220 Size:     4
//   float alphaRevealRamp;             // Offset:  224 Size:     4
//   float scriptControl;               // Offset:  228 Size:     4 [unused]
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4 [unused]
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for shaderConstantSetBuffer
// {
//
//   struct GpuShaderConstantSet
//   {
//       
//       float4 scriptVector0;          // Offset:    0
//       float4 scriptVector1;          // Offset:   16
//       float4 scriptVector2;          // Offset:   32
//       float4 scriptVector3;          // Offset:   48
//       float4 scriptVector4;          // Offset:   64
//       float4 scriptVector5;          // Offset:   80
//       float4 scriptVector6;          // Offset:   96
//       float4 scriptVector7;          // Offset:  112
//       float4 weaponParam0;           // Offset:  128
//       float4 weaponParam1;           // Offset:  144
//       float4 weaponParam2;           // Offset:  160
//       float4 weaponParam3;           // Offset:  176
//       float4 weaponParam4;           // Offset:  192
//       float4 weaponParam5;           // Offset:  208
//       float4 weaponParam6;           // Offset:  224
//       float4 weaponParam7;           // Offset:  240
//       float4 characterParam0;        // Offset:  256
//       float4 characterParam1;        // Offset:  272
//       float4 characterParam2;        // Offset:  288
//       float4 characterParam3;        // Offset:  304
//       float4 characterParam4;        // Offset:  320
//       float4 characterParam5;        // Offset:  336
//       float4 characterParam6;        // Offset:  352
//       float4 characterParam7;        // Offset:  368
//
//   } $Element;                        // Offset:    0 Size:   384
//
// }
//
// Resource bind info for modelInstanceBuffer
// {
//
//   struct ModelInstanceData
//   {
//       
//       uint boneArrayIndex;           // Offset:    0
//       uint shaderConstantSet;        // Offset:    4
//       uint flagsAndPrevFrameIndex;   // Offset:    8
//       uint worldMatrix;              // Offset:   12
//       uint siegeAnimStateOffset;     // Offset:   16
//       uint prevFrameSiegeAnimStateOffset;// Offset:   20
//
//   } $Element;                        // Offset:    0 Size:    24
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// colorSampler                      sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// specColorSampler                  sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// normalSampler                     sampler      NA          NA             s5      1 
// aoSampler                         sampler      NA          NA             s6      1 
// revealSampler                     sampler      NA          NA             s7      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// shaderConstantSetBuffer           texture  struct         r/o             t0      1 
// modelInstanceBuffer               texture  struct         r/o             t4      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// floatZSampler                     texture  float4          2d            t21      1 
// colorMap                          texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// normalMap                         texture  float4          2d            t24      1 
// glossMap                          texture  float4          2d            t25      1 
// aoMap                             texture  float4          2d            t26      1 
// revealMap                         texture  float4          2d            t29      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyz 
// COLOR                    1   x           1     NONE   float       
// TEXCOORD                 0    yz         1     NONE   float    yz 
// TEXCOORD                 4   x           2     NONE    uint   x   
// TEXCOORD                 1   xyz         3     NONE   float   xyz 
// TEXCOORD                 2   xyz         4     NONE   float   xyz 
// TEXCOORD                 3   xyz         5     NONE   float   xyz 
// OFFPOSITION              0   xyz         6     NONE   float   xyz 
// SV_IsFrontFace           0   x           7    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[15], immediateIndexed
dcl_constantbuffer CB1[86], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_structured t0, 384
dcl_resource_structured t4, 24
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2d (float,float,float,float) t26
dcl_resource_texture2d (float,float,float,float) t29
dcl_resource_texture2darray (float,float,float,float) t31
dcl_input_ps_siv linear noperspective v0.xyz, position
dcl_input_ps linear v1.yz
dcl_input_ps constant v2.x
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps_sgv constant v7.x, is_front_face
dcl_output o0.xyzw
dcl_temps 66
dcl_indexableTemp x0[4], 4
dcl_indexableTemp x1[4], 4
dcl_indexableTemp x2[4], 4
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.yzyy, t22.wxyz, s1
sample_indexable(texture2d)(float,float,float,float) r1.x, v1.yzyy, t25.xyzw, s3
add r1.y, -cb0[10].y, cb0[10].z
mul r1.z, r1.y, r1.x
mad r1.x, r1.x, r1.y, cb0[10].y
mad r1.y, r1.z, l(0.500000), cb0[10].y
mul_sat r1.xy, r1.xyxx, l(0.05882353, 0.05882353, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r2.xyz, v1.yzyy, t24.xyzw, s5
add r2.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.000000, 0.000000)
mad r2.xyz, cb0[10].xxxx, r2.xyzx, l(0.500000, 0.500000, 0.000000, 0.000000)
mad r1.zw, r2.xxxy, l(0.000000, 0.000000, 1.99218750, 1.99218750), l(0.000000, 0.000000, -1.000000, -1.000000)
dp2 r2.x, r1.zwzz, r1.zwzz
add r2.x, -r2.x, l(1.000000)
max r2.x, r2.x, l(0.000000)
sqrt r2.x, r2.x
mul r2.y, r2.z, r2.z
mul r2.y, r2.y, l(0.33333334)
min r2.y, r2.y, l(1.000000)
movc r2.z, v7.x, l(1.000000), l(-1.000000)
dp3 r2.w, v3.xyzx, v3.xyzx
rsq r2.w, r2.w
mul r3.xyz, r2.wwww, v3.xyzx
mul r3.xyz, r2.zzzz, r3.xyzx
dp3 r2.w, v4.xyzx, v4.xyzx
rsq r2.w, r2.w
mul r4.xyz, r2.wwww, v4.xyzx
mul r4.xyz, r2.zzzz, r4.xyzx
dp3 r2.w, v5.xyzx, v5.xyzx
rsq r2.w, r2.w
mul r5.xyz, r2.wwww, v5.xyzx
mul r5.xyz, r2.zzzz, r5.xyzx
mul r1.xy, r1.xyxx, l(-17.000000, -17.000000, 0.000000, 0.000000)
exp r1.x, r1.x
add r1.x, r1.x, r2.y
log r1.x, r1.x
exp r1.y, r1.y
add r1.y, r1.y, r2.y
log r1.y, r1.y
mul r1.xy, r1.xyxx, l(-0.05882353, -0.05882353, 0.000000, 0.000000)
max r1.xy, r1.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r2.yzw, r1.wwww, r5.xxyz
mad r2.yzw, r4.xxyz, r1.zzzz, r2.yyzw
mad r2.xyz, r3.xyzx, r2.xxxx, r2.yzwy
dp3 r1.z, r2.xyzx, r2.xyzx
rsq r1.z, r1.z
mul r2.xyz, r1.zzzz, r2.xyzx
ftou r1.zw, v0.xxxy
ge r3.w, v0.z, l(0.984375)
mul r4.w, v0.z, l(1.01587307)
mad r5.w, v0.z, l(64.000000), l(-63.000000)
movc r3.w, r3.w, r5.w, r4.w
max r3.w, r3.w, l(0.00000001)
rcp r3.w, r3.w
dp3 r4.w, -v6.xyzx, -v6.xyzx
rsq r4.w, r4.w
mul r6.xyz, r4.wwww, -v6.xyzx
utof r7.xy, r1.wzww
dp2 r5.w, r7.yxyy, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r5.w, r5.w
mul r5.w, r5.w, l(52.982918)
frc r5.w, r5.w
mad r5.w, r5.w, l(6.28318548), cb1[70].w
sincos r8.x, r9.x, r5.w
dp2 r5.w, r7.xyxx, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r5.w, r5.w
mul r5.w, r5.w, l(52.982918)
frc r5.w, r5.w
mad r5.w, r5.w, l(6.28318548), cb1[70].w
sincos r7.x, r10.x, r5.w
dp3_sat r5.w, r2.xyzx, r6.xyzx
dp3 r6.w, -r6.xyzx, r2.xyzx
add r6.w, r6.w, r6.w
mad r11.xyz, r2.xyzx, -r6.wwww, -r6.xyzx
mul r7.yzw, cb1[9].xxyw, -cb1[24].yyyy
mad r7.yzw, -cb1[24].xxxx, cb1[8].xxyw, r7.yyzw
mad r7.yzw, -cb1[24].zzzz, cb1[10].xxyw, r7.yyzw
add r7.yzw, r7.yyzw, cb1[11].xxyw
add r12.xyz, v6.xyzx, cb1[24].xyzx
mad r6.w, r5.w, l(0.54703742), l(0.45296258)
mul r8.zw, r6.wwww, l(0.000000, 0.000000, 0.54703742, 0.45296258)
min r6.w, |cb0[10].w|, l(1.000000)
add r1.y, -r1.x, r1.y
mad r1.x, r6.w, r1.y, r1.x
lt r1.y, cb0[10].w, l(0.000000)
mul r1.x, r1.x, l(17.000000)
exp r13.y, r1.x
mov r13.xz, l(1.000000,0,1.000000,0)
movc r1.xy, r1.yyyy, r13.xyxx, r13.yxyy
add r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000)
div r1.xy, l(2.000000, 2.000000, 0.000000, 0.000000), r1.xyxx
dp3 r6.w, r2.xyzx, cb2[17].xyzx
ge r9.w, l(0.000000), |r6.w|
if_nz r9.w
  mov r13.y, l(0)
endif 
if_z r9.w
  mul r10.yzw, v6.yyyy, cb2[29].xxyz
  mad r10.yzw, v6.xxxx, cb2[28].xxyz, r10.yyzw
  mad r10.yzw, v6.zzzz, cb2[30].xxyz, r10.yyzw
  add r10.yzw, r10.yyzw, cb2[31].xxyz
  add r9.w, r10.w, -cb2[17].w
  mad r9.w, -r9.w, l(0.00006104), l(1.000000)
  mov_sat r14.x, r9.w
  eq r14.x, r9.w, r14.x
  if_nz r14.x
    mov r14.xy, l(0,0,0,0)
    loop 
      ge r14.z, r14.x, l(3.000000)
      breakc_nz r14.z
      ftou r14.z, r14.x
      add r15.xy, r10.yzyy, -cb2[r14.z + 20].xyxx
      max r14.w, |r15.y|, |r15.x|
      mul r14.y, r14.w, cb2[r14.z + 20].z
      lt r14.z, r14.y, l(1.000000)
      if_nz r14.z
        break 
      endif 
      add r14.x, r14.x, l(1.000000)
      mov r14.y, l(0)
    endloop 
  else 
    mov r14.xy, l(3.000000,0,0,0)
  endif 
  ge r14.z, r14.x, l(3.000000)
  if_nz r14.z
    mul r15.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
    rcp r16.xz, r15.xxxx
    mov r16.y, -r16.z
    mad r15.xyz, r10.yzyy, r16.xyzx, r15.yzyy
    add r16.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r15.xyz, r15.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r15.xyz, r16.xyzx, r15.xyzx
    mul r16.xy, r15.zyzz, cb2[32].xxxx
    round_ni r16.xy, r16.xyxx
    mul r14.w, r16.y, cb2[27].x
    mad r14.w, r14.w, cb2[32].x, r16.x
    ftou r14.w, r14.w
    iadd r14.w, r14.w, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.w, r14.w, l(0), t23.xxxx
    and r16.x, r15.w, l(0x40000000)
    ishl r16.y, r15.w, l(2)
    if_z r16.x
      and r16.x, r15.w, l(0x01ffffff)
      iadd r17.x, r14.w, r16.x
      ushr r14.w, r15.w, l(25)
      utof r14.w, r14.w
      mul r15.xyz, r14.wwww, r15.xyzx
      frc r15.xyz, r15.xyzx
      mul r15.xyz, r15.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
      ftou r15.xyz, r15.xyzx
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.z, r17.x, l(0), t23.xxxx
      ushr r16.xz, r15.zzyz, l(6, 0, 6, 0)
      and r14.w, r17.z, l(0xc0000000)
      iadd r15.w, r17.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.w, r15.w, l(0), t23.xxxx
      movc r15.w, r16.z, r17.z, r15.w
      ushr r16.z, r15.w, l(13)
      movc r15.w, r16.x, r16.z, r15.w
      and r15.w, r15.w, l(8191)
      iadd r18.x, r15.w, r17.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.x, l(0), t23.xxxx
      mov r17.y, l(0)
      mov r18.y, l(1)
      movc r16.xzw, r14.wwww, r17.xxyz, r18.xxyz
      movc r18.yz, r14.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r19.xy, r15.zyzz, r18.yyyy
      and r19.xy, r19.xyxx, l(1, 1, 0, 0)
      and r15.w, r16.w, l(0xc0000000)
      iadd r17.w, r16.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.w, r17.w, l(0), t23.xxxx
      movc r17.w, r19.y, r16.w, r17.w
      ushr r18.y, r17.w, l(13)
      movc r17.w, r19.x, r18.y, r17.w
      and r17.w, r17.w, l(8191)
      iadd r18.x, r16.x, r17.w
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.w, r18.x, l(0), t23.xxxx
      movc r16.xzw, r15.wwww, r16.xxzw, r18.xxzw
      movc r16.xzw, r14.wwww, r17.xxyz, r16.xxzw
      and r14.w, r16.w, l(0xc0000000)
      if_z r14.w
        iadd r14.w, -r16.z, l(6)
        ushr r17.xy, r15.zyzz, r14.wwww
        or r14.w, r16.w, l(0x40000000)
        bfi r15.w, l(1), l(1), r17.y, l(0)
        bfi r15.w, l(1), l(0), r17.x, r15.w
        imul null, r15.w, r15.w, l(10)
        ushr r14.w, r14.w, r15.w
        and r14.w, r14.w, l(1023)
        iadd r17.x, r14.w, r16.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.w, r17.x, l(0), t23.xxxx
        iadd r17.yz, r16.zzzz, l(0, 1, 2, 0)
        iadd r14.w, -r17.y, l(6)
        ushr r18.xy, r15.zyzz, r14.wwww
        and r14.w, r17.w, l(0xc0000000)
        or r15.w, r17.w, l(0x40000000)
        bfi r16.z, l(1), l(1), r18.y, l(0)
        bfi r16.z, l(1), l(0), r18.x, r16.z
        imul null, r16.z, r16.z, l(10)
        ushr r15.w, r15.w, r16.z
        and r15.w, r15.w, l(1023)
        iadd r18.x, r15.w, r17.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.x, l(0), t23.xxxx
        mov r18.y, r17.z
        movc r18.xyz, r14.wwww, r17.xywx, r18.xyzx
        iadd r15.w, -r18.y, l(6)
        ushr r17.yz, r15.zzyz, r15.wwww
        and r15.w, r18.z, l(0xc0000000)
        or r16.z, r18.z, l(0x40000000)
        bfi r17.z, l(1), l(1), r17.z, l(0)
        bfi r17.y, l(1), l(0), r17.y, r17.z
        imul null, r17.y, r17.y, l(10)
        ushr r16.z, r16.z, r17.y
        and r16.z, r16.z, l(1023)
        iadd r19.x, r16.z, r18.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.y, r19.x, l(0), t23.xxxx
        movc r17.yz, r15.wwww, r18.xxzx, r19.xxyx
        movc r16.xw, r14.wwww, r17.xxxw, r17.yyyz
      endif 
      and r14.w, r16.w, l(0xc0000000)
      if_z r14.w
        ubfe r15.w, l(14), l(15), r16.w
        utof r15.w, r15.w
        mul r15.w, r15.w, cb2[27].w
        mul r15.w, r15.w, l(0.00006104)
        and r17.xy, r16.wwww, l(0x00007fff, 0x20000000, 0, 0)
        utof r16.z, r17.x
        mul r16.z, r16.z, cb2[27].w
        mul r16.z, r16.z, l(0.00003052)
        and r17.x, r15.y, l(3)
        iadd r17.x, r16.x, r17.x
        iadd r17.x, r17.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.x, r17.x, l(0), t23.xxxx
        bfi r18.xyz, l(2, 2, 1, 0), l(3, 1, 4, 0), r15.xyzx, l(0, 0, 0, 0)
        ushr r15.x, r17.x, r18.x
        and r15.x, r15.x, l(255)
        utof r15.x, r15.x
        mul r15.x, r16.z, r15.x
        mad r15.x, r15.x, l(0.00392157), r15.w
        iadd r15.y, r18.y, l(1)
        ubfe r15.z, l(1), l(1), r15.z
        iadd r15.y, r15.z, r15.y
        iadd r15.y, r15.y, r16.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.y, r15.y, l(0), t23.xxxx
        ushr r15.y, r15.y, r18.z
        and r15.y, r15.y, l(0x0000ffff)
        utof r15.y, r15.y
        mul r15.y, r16.z, r15.y
        mad r15.y, r15.y, l(0.00001526), r15.w
        movc r16.y, r17.y, r15.x, r15.y
      else 
        and r15.x, r16.w, l(0x80000000)
        iadd r15.y, r16.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.y, r15.y, l(0), t23.xxxx
        movc r15.x, r15.x, r15.y, l(0)
        ishl r15.y, r16.w, l(2)
        ushr r15.z, r15.x, l(16)
        and r15.x, r15.x, l(0x0000ffff)
        f16tof32 r15.xz, r15.xxzx
        mad r15.y, r10.y, r15.z, r15.y
        mad r15.x, r10.z, r15.x, r15.y
        movc r16.y, r14.w, r15.x, r16.y
      endif 
    endif 
    mad r10.w, -cb2[27].z, l(2.000000), r10.w
    lt r10.w, r16.y, r10.w
    movc r13.y, r10.w, l(0), l(1.000000)
  endif 
  if_z r14.z
    if_z cb2[58].y
      ftou r10.w, r14.x
      add r14.zw, r10.yyyz, -cb2[r10.w + 20].xxxy
      mul r14.zw, r14.zzzw, cb2[r10.w + 20].zzzz
      mad r15.xy, r14.zwzz, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r10.w, cb2[26].y
      add r15.z, r10.w, r14.x
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.w, r15.xyzx, t13.xxxx, s13, r9.w
      sample_l_indexable(texture2darray)(float,float,float,float) r14.z, r15.xyzx, t31.yzxw, s0, l(0.000000)
      add r10.w, r10.w, r14.z
      add_sat r10.w, r10.w, l(-1.000000)
      mul r14.z, r10.w, r10.w
      mul r13.y, r10.w, r14.z
    endif 
    if_nz cb2[58].y
      mov r15.x, -r8.x
      ftou r10.w, r14.x
      add r14.x, r14.x, l(1.000000)
      min r14.x, r14.x, l(2.000000)
      add r14.y, -r14.y, l(1.000000)
      mul r14.y, r14.y, l(28.000000)
      ftou r14.xy, r14.xyxx
      add r14.zw, r10.yyyz, -cb2[r10.w + 20].xxxy
      mul r14.zw, r14.zzzw, cb2[r10.w + 20].zzzz
      mad r14.zw, r14.zzzw, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
      add r10.yz, r10.yyzy, -cb2[r14.x + 20].xxyx
      mul r10.yz, r10.yyzy, cb2[r14.x + 20].zzzz
      mad r10.yz, r10.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      mov r15.y, r9.x
      mov r15.z, r8.x
      mov r15.w, l(0)
      mov r16.x, l(0)
      loop 
        uge r16.y, r16.x, l(8)
        breakc_nz r16.y
        ult r16.y, r14.y, r16.x
        movc r16.zw, r16.yyyy, r10.yyyz, r14.zzzw
        movc r17.x, r16.y, cb2[r14.x + 20].w, cb2[r10.w + 20].w
        movc r16.y, r16.y, r14.x, r10.w
        dp2 r18.x, icb[r16.x + 0].yxyy, r15.xyxx
        dp2 r18.y, icb[r16.x + 0].yxyy, r15.yzyy
        mad r17.xy, r18.xyxx, r17.xxxx, r16.zwzz
        iadd r16.y, r16.y, cb2[26].y
        utof r17.z, r16.y
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r16.y, r17.xyzx, t13.xxxx, s13, r9.w
        sample_l_indexable(texture2darray)(float,float,float,float) r16.z, r17.xyzx, t31.yzxw, s0, l(0.000000)
        add r16.y, r16.z, r16.y
        add_sat r16.y, r16.y, l(-1.000000)
        mad r15.w, r16.y, l(0.125000), r15.w
        iadd r16.x, r16.x, l(1)
      endloop 
      mul r9.w, r15.w, r15.w
      mul r13.y, r15.w, r9.w
    endif 
  endif 
endif 
and r9.w, cb2[53].x, l(0x0000ffff)
if_nz r9.w
  iadd r9.w, r9.w, cb2[0].x
  iadd r9.w, r9.w, l(-1)
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r10.y, r9.w, l(52), t12.xxxx
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.xyzw, r9.w, l(68), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r9.w, l(84), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r9.w, l(132), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r9.w, l(148), t12.xyzw
  mad r10.z, |r6.w|, l(-0.200000), l(0.400000)
  lt r10.w, r6.w, l(0.000000)
  movc r10.z, r10.w, -r10.z, r10.z
  mad r18.xyz, r2.xyzx, r10.zzzz, v6.xyzx
  mov r18.w, l(1.000000)
  dp4 r14.x, r14.xyzw, r18.xyzw
  dp4 r14.y, r15.xyzw, r18.xyzw
  mad r10.zw, r14.xxxy, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
  add r10.zw, r17.zzzw, r10.zzzw
  mul r10.zw, r17.xxxy, r10.zzzw
  div r14.xy, r10.yyyy, r16.xzxx
  add r14.zw, -r14.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
  ge r14.zw, r10.zzzw, r14.zzzw
  ge r14.xy, r14.xyxx, r10.zwzz
  or r14.xy, r14.xyxx, r14.zwzz
  or r14.x, r14.y, r14.x
  if_z r14.x
    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.x, r9.w, l(28), t12.xxxx
    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r9.w, l(100), t12.xyzw
    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.yz, r9.w, l(164), t12.xxyx
    dp4 r9.w, r15.xyzw, r18.xyzw
    mov_sat r10.zw, r10.zzzw
    mad r15.xy, r10.zwzz, r16.xzxx, r16.ywyy
    add r9.w, r14.y, r9.w
    div r9.w, r9.w, r14.z
    max r9.w, r9.w, l(0.00006104)
    and r10.z, r14.x, l(0x0000ffff)
    if_nz cb2[58].y
      mov r14.x, -r8.x
      utof r16.z, r10.z
      mov r14.y, r9.x
      mov r14.z, r8.x
      mov r10.w, l(0)
      mov r14.w, l(0)
      loop 
        ige r15.w, r14.w, l(8)
        breakc_nz r15.w
        dp2 r17.x, icb[r14.w + 0].yxyy, r14.xyxx
        dp2 r17.y, icb[r14.w + 0].yxyy, r14.yzyy
        mad r16.xy, r17.xyxx, r10.yyyy, r15.xyxx
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r15.w, r16.xyzx, t9.xxxx, s13, r9.w
        mad r10.w, r15.w, l(0.125000), r10.w
        iadd r14.w, r14.w, l(1)
      endloop 
    else 
      utof r15.z, r10.z
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.w, r15.xyzx, t9.xxxx, s13, r9.w
    endif 
    mul r9.w, r10.w, r10.w
    mul r9.w, r10.w, r9.w
  else 
    mov r9.w, l(1.000000)
  endif 
  mul r13.y, r9.w, r13.y
endif 
lt r9.w, l(0.000000), |r6.w|
if_nz r9.w
  lt r9.w, l(0.000000), r13.y
  if_nz r9.w
    mul r9.w, l(0.16666667), cb2[18].w
    if_nz cb2[23].x
      mov r12.w, l(1.000000)
      dp4 r10.y, cb2[24].xyzw, r12.xyzw
      dp4 r10.z, cb2[25].xyzw, r12.xyzw
      frc r14.xy, r10.yzyy
      iadd r10.y, l(-1), cb2[23].x
      utof r14.z, r10.y
      sample_l_indexable(texture2darray)(float,float,float,float) r10.yzw, r14.xyzx, t20.wxyz, s2, l(0.000000)
      add r10.yzw, r10.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
      mad r10.yzw, cb2[23].yyyy, r10.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
      mul r10.yzw, r10.yyzw, cb2[18].xxyz
    else 
      mov r10.yzw, cb2[18].xxyz
    endif 
    mad r12.w, -r5.w, l(0.500000), l(1.000000)
    mad r12.w, -|r6.w|, r12.w, l(1.000000)
    mul r12.w, r12.w, r12.w
    mad r12.w, -r12.w, l(0.620000), l(0.620000)
    add r12.w, -|r6.w|, r12.w
    mad r12.w, r12.w, l(0.81649661), |r6.w|
    lt r14.x, l(0.000000), r6.w
    mov_sat r6.w, r6.w
    mad r14.yzw, -v6.xxyz, r4.wwww, cb2[17].xxyz
    dp3 r4.w, r14.yzwy, r14.yzwy
    rsq r4.w, r4.w
    mul r14.yzw, r4.wwww, r14.yyzw
    dp3 r4.w, r2.xyzx, r14.yzwy
    dp3 r15.x, r14.yzwy, r6.xyzx
    mul r15.y, r1.y, r1.x
    sqrt r15.y, r15.y
    dp3 r15.z, r14.yzwy, r4.xyzx
    dp3 r14.y, r14.yzwy, r5.xyzx
    mul r14.z, r15.z, r15.z
    mul r14.y, r14.y, r14.y
    div r14.yz, r14.yyzy, r1.yyxy
    add r14.y, r14.y, r14.z
    mad r4.w, |r4.w|, |r4.w|, r14.y
    mad r14.y, r6.w, r8.z, r8.w
    mul r4.w, r4.w, r4.w
    mul r4.w, r15.y, r4.w
    mul r4.w, r14.y, r4.w
    rcp r4.w, r4.w
    mul r6.w, r9.w, r6.w
    mul r4.w, r4.w, r6.w
    add_sat r6.w, -r15.x, l(1.000000)
    mul r9.w, r6.w, r6.w
    mul r9.w, r9.w, r9.w
    mul r6.w, r6.w, r9.w
    mul r6.w, r4.w, r6.w
    and r9.w, r12.w, r14.x
    movc r14.yzw, r14.xxxx, l(0,0,0,0), r12.wwww
    and r15.xy, r6.wwww, r14.xxxx
    and r16.xyz, r4.wwww, r14.xxxx
    dp3 r4.w, r10.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
    mul r4.w, r4.w, r13.y
    mov r13.x, l(1.000000)
    mov r6.w, cb2[17].x
    mov r15.zw, cb2[17].yyyz
    mov r17.xy, r9.wwww
    mov r12.w, r15.y
  else 
    mov r13.xy, l(0,0,0,0)
    mov r4.w, l(0)
    mov r10.yzw, l(0,0,0,0)
    mov r6.w, l(0)
    mov r17.xy, l(0,0,0,0)
    mov r14.yzw, l(0,0,0,0)
    mov r9.w, l(0)
    mov r16.xyz, l(0,0,0,0)
    mov r12.w, l(0)
    mov r15.xyzw, l(0,0,0,0)
  endif 
else 
  mov r13.xy, l(0,0,0,0)
  mov r4.w, l(0)
  mov r10.yzw, l(0,0,0,0)
  mov r6.w, l(0)
  mov r17.xy, l(0,0,0,0)
  mov r14.yzw, l(0,0,0,0)
  mov r9.w, l(0)
  mov r16.xyz, l(0,0,0,0)
  mov r12.w, l(0)
  mov r15.xyzw, l(0,0,0,0)
endif 
mul r14.x, r3.w, l(0.00781250)
min r14.x, r14.x, l(15.000000)
ftou r14.x, r14.x
ushr r18.xy, r1.zwzz, l(6, 6, 0, 0)
ishl r18.z, r14.x, l(4)
mov r19.x, -r8.x
mad r1.z, -r5.w, l(0.500000), l(1.000000)
mul r1.w, r1.y, r1.x
sqrt r1.w, r1.w
mov r20.xy, l(0,0,0,0)
mov r21.w, l(0)
mov r22.xyz, v6.xyzx
mov r22.w, l(1.000000)
mov r23.w, l(1.000000)
mov r19.z, r8.x
mov r24.z, l(1.000000)
mov r25.w, l(1.000000)
mov r19.yw, r9.xxxx
mov r8.y, r19.w
mov r26.w, l(1.000000)
mov r9.y, r19.x
mov r9.z, r8.x
mov r27.x, r9.x
mov r27.y, r19.x
mov r27.z, r8.x
mov r28.xyz, l(0,0,0,0)
mov r29.xyz, l(0,0,0,0)
mov r30.xyz, l(0,0,0,0)
mov r31.xyz, l(0,0,0,0)
mov r32.xyz, r10.yzwy
mov r33.x, r6.w
mov r33.yz, r15.zzwz
mov r34.xy, r17.xyxx
mov r34.z, r9.w
mov r35.xyz, r14.yzwy
mov r36.xyz, r16.xyzx
mov r37.x, r12.w
mov r37.yz, r15.xxyx
mov r38.x, cb2[58].y
mov r38.y, r4.w
mov r17.zw, r13.xxxy
mov r14.x, l(0)
loop 
  uge r16.w, r14.x, cb2[0].x
  breakc_nz r16.w
  ushr r20.z, r14.x, l(5)
  iadd r21.xyz, r18.xyzx, r20.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r16.w, r21.xyzw, t6.yzwx
  mov r21.xyz, r28.xyzx
  mov r39.xyz, r29.xyzx
  mov r40.xyz, r30.xyzx
  mov r41.xyz, r31.xyzx
  mov r42.xyz, r32.xyzx
  mov r43.xyz, r33.xyzx
  mov r44.xyz, r34.xyzx
  mov r45.xyz, r36.xyzx
  mov r46.xyz, r37.xyzx
  mov r20.zw, r17.zzzw
  mov r18.w, r38.x
  mov r24.w, r38.y
  mov r47.xyz, r35.xyzx
  mov r27.w, r16.w
  loop 
    breakc_z r27.w
    firstbit_lo r28.w, r27.w
    ishl r29.w, l(1), r28.w
    and r30.w, r27.w, r29.w
    if_nz r30.w
      xor r27.w, r27.w, r29.w
      iadd r28.w, r14.x, r28.w
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r48.xyzw, r28.w, l(0), t12.wxyz
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r49.xyzw, r28.w, l(16), t12.zxyw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r50.xyzw, r28.w, l(32), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r51.xyzw, r28.w, l(48), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r52.xyzw, r28.w, l(64), t12.yzwx
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r53.xyzw, r28.w, l(80), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r54.xyzw, r28.w, l(96), t12.yzwx
      ubfe r29.w, l(3), l(24), r49.w
      switch r29.w
        case l(4)
        lt r29.w, l(0.000000), r54.x
        mov r55.xy, r53.zwzz
        mov r55.z, r54.w
        mad r56.xyz, -r55.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r48.yzwy
        add r57.xyz, r56.xyzx, -v6.xyzx
        dp3 r30.w, r55.xyzx, r57.xyzx
        div_sat r31.w, -r30.w, r54.x
        mad r58.xyz, r31.wwww, r55.xyzx, r56.xyzx
        movc r58.xyz, r29.wwww, r58.xyzx, r48.yzwy
        add r58.xyz, r58.xyzx, -v6.xyzx
        dp3 r32.w, r58.xyzx, r58.xyzx
        rsq r33.w, r32.w
        mul r58.xyz, r33.wwww, r58.xyzx
        dp3 r33.w, r2.xyzx, r58.xyzx
        lt r34.w, l(0.000000), |r33.w|
        if_nz r34.w
          sqrt r34.w, r32.w
          mul r35.w, r51.x, r51.x
          div r32.w, r35.w, r32.w
          min r32.w, r32.w, l(1.000000)
          mad_sat r38.zw, r34.wwww, r50.xxxz, r50.yyyw
          mul r59.xy, r38.zwzz, r38.zwzz
          mad r38.zw, r38.zzzw, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
          mul r38.zw, r38.zzzw, r59.xxxy
          mul r32.w, r32.w, r38.z
          mul r59.x, r38.w, r32.w
          lt r32.w, l(0.000000), r59.x
          if_nz r32.w
            ubfe r38.zw, l(0, 0, 3, 4), l(0, 0, 27, 20), r49.wwww
            ine r32.w, r38.z, l(1)
            if_nz r32.w
              mad r32.w, |r33.w|, l(-0.200000), l(0.400000)
              lt r34.w, r33.w, l(0.000000)
              movc r32.w, r34.w, -r32.w, r32.w
              mad r60.xyz, r2.xyzx, r32.wwww, v6.xyzx
              add r60.xyz, -r52.xyzx, r60.xyzx
              max r32.w, |r60.z|, |r60.y|
              max r32.w, r32.w, |r60.x|
              div r32.w, r53.x, r32.w
              add r32.w, r53.y, r32.w
              dp3 r34.w, r60.xyzx, r60.xyzx
              rsq r34.w, r34.w
              max r32.w, r32.w, l(0.00006104)
              and r35.w, r49.w, l(0x0000ffff)
              utof r61.w, r35.w
              mov r59.y, l(0)
              mov r35.w, l(0)
              loop 
                ige r36.w, r35.w, l(8)
                breakc_nz r36.w
                dp2 r62.y, icb[r35.w + 0].yxyy, r19.xyxx
                dp2 r62.z, icb[r35.w + 0].yxyy, r19.yzyy
                mul r62.yz, r51.yyyy, r62.yyzy
                mul r62.x, r10.x, r62.y
                mul r62.w, r7.x, r62.y
                mad r61.xyz, r60.xyzx, r34.wwww, r62.xzwx
                sample_c_lz_indexable(texturecubearray)(float,float,float,float) r36.w, r61.xyzw, t10.xxxx, s13, r32.w
                mad r59.y, r36.w, l(0.125000), r59.y
                iadd r35.w, r35.w, l(1)
              endloop 
            else 
              mov r59.y, l(1.000000)
            endif 
            if_nz r38.w
              iadd r32.w, r38.w, cb2[0].x
              iadd r32.w, r32.w, l(-1)
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.w, r32.w, l(52), t12.xxxx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r60.xyzw, r32.w, l(100), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r61.xyzw, r32.w, l(116), t12.xyzw
              mad r35.w, |r33.w|, l(-0.200000), l(0.400000)
              lt r36.w, r33.w, l(0.000000)
              movc r35.w, r36.w, -r35.w, r35.w
              mad r23.xyz, r2.xyzx, r35.wwww, v6.xyzx
              dp4 r35.w, r60.xyzw, r23.xyzw
              dp4 r36.w, r61.xyzw, r23.xyzw
              lt r37.w, r36.w, r35.w
              if_z r37.w
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r60.xyzw, r32.w, l(68), t12.xyzw
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r61.xyzw, r32.w, l(84), t12.xyzw
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r62.xyzw, r32.w, l(132), t12.xyzw
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r63.xyzw, r32.w, l(148), t12.xyzw
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.zw, r32.w, l(164), t12.xxxy
                dp4 r60.x, r60.xyzw, r23.xyzw
                dp4 r60.y, r61.xyzw, r23.xyzw
                div r23.xy, r60.xyxx, r36.wwww
                mad r23.xy, r23.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                add r23.xy, r63.zwzz, r23.xyxx
                mul r23.xy, r63.xyxx, r23.xyxx
                div r59.zw, r34.wwww, r62.xxxz
                add r60.xy, -r59.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
                ge r60.xy, r23.xyxx, r60.xyxx
                ge r59.zw, r59.zzzw, r23.xxxy
                or r59.zw, r59.zzzw, r60.xxxy
                or r23.z, r59.w, r59.z
                mov_sat r23.xy, r23.xyxx
                mad r60.xy, r23.xyxx, r62.xzxx, r62.ywyy
                mul r23.x, r36.w, r38.w
                mad r23.y, r38.z, r36.w, r35.w
                div r23.x, r23.y, r23.x
              else 
                mov r23.z, l(-1)
              endif 
              or r23.y, r37.w, r23.z
              if_z r23.y
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.y, r32.w, l(28), t12.xxxx
                max r23.x, r23.x, l(0.00006104)
                and r23.y, r23.y, l(0x0000ffff)
                if_nz r18.w
                  utof r61.z, r23.y
                  mov r23.z, l(0)
                  mov r32.w, l(0)
                  loop 
                    ige r35.w, r32.w, l(8)
                    breakc_nz r35.w
                    dp2 r62.x, icb[r32.w + 0].yxyy, r19.xwxx
                    dp2 r62.y, icb[r32.w + 0].xyxx, r8.xyxx
                    mad r61.xy, r62.xyxx, r34.wwww, r60.xyxx
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r35.w, r61.xyzx, t9.xxxx, s13, r23.x
                    mad r23.z, r35.w, l(0.125000), r23.z
                    iadd r32.w, r32.w, l(1)
                  endloop 
                else 
                  utof r60.z, r23.y
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.z, r60.xyzx, t9.xxxx, s13, r23.x
                endif 
                mul r23.x, r23.z, r23.z
                mul r23.x, r23.z, r23.x
              else 
                mov r23.x, l(1.000000)
              endif 
              mul r59.y, r23.x, r59.y
            endif 
            mul r23.x, r59.y, r59.x
            lt r23.y, l(0.000000), r23.x
            if_nz r23.y
              mul r23.y, r49.x, l(0.16666667)
              dp3 r32.w, r55.xyzx, r11.xyzx
              dp3 r34.w, r11.xyzx, r57.xyzx
              mad r35.w, -r32.w, r32.w, r54.x
              mad r30.w, r32.w, r34.w, -r30.w
              div_sat r30.w, r30.w, r35.w
              div r32.w, r35.w, r54.x
              mul r32.w, r32.w, l(10.000000)
              min r32.w, r32.w, l(1.000000)
              add r30.w, -r31.w, r30.w
              mad r30.w, r32.w, r30.w, r31.w
              mad r55.xyz, r30.wwww, r55.xyzx, r56.xyzx
              movc r55.xyz, r29.wwww, r55.xyzx, r48.yzwy
              add r55.xyz, r55.xyzx, -v6.xyzx
              dp3 r29.w, r55.xyzx, r55.xyzx
              rsq r29.w, r29.w
              mul r56.xyz, r29.wwww, r55.xyzx
              mad r30.w, -|r33.w|, r1.z, l(1.000000)
              mul r30.w, r30.w, r30.w
              mad r30.w, -r30.w, l(0.620000), l(0.620000)
              add r30.w, -|r33.w|, r30.w
              mad r30.w, r30.w, l(0.81649661), |r33.w|
              lt r31.w, l(0.000000), r33.w
              dp3_sat r32.w, r2.xyzx, r56.xyzx
              mad r55.xyz, r55.xyzx, r29.wwww, r6.xyzx
              dp3 r29.w, r55.xyzx, r55.xyzx
              rsq r29.w, r29.w
              mul r55.xyz, r29.wwww, r55.xyzx
              dp3 r29.w, r2.xyzx, r55.xyzx
              dp3 r33.w, r55.xyzx, r6.xyzx
              dp3 r34.w, r55.xyzx, r4.xyzx
              dp3 r35.w, r55.xyzx, r5.xyzx
              mul r34.w, r34.w, r34.w
              div r34.w, r34.w, r1.x
              mul r35.w, r35.w, r35.w
              div r35.w, r35.w, r1.y
              add r34.w, r34.w, r35.w
              mad r29.w, |r29.w|, |r29.w|, r34.w
              mad r34.w, r32.w, r8.z, r8.w
              mul r29.w, r29.w, r29.w
              mul r29.w, r1.w, r29.w
              mul r29.w, r34.w, r29.w
              rcp r29.w, r29.w
              mul r23.y, r23.y, r32.w
              mul r23.y, r23.y, r29.w
              add_sat r29.w, -r33.w, l(1.000000)
              mul r32.w, r29.w, r29.w
              mul r32.w, r32.w, r32.w
              mul r29.w, r29.w, r32.w
              mul r29.w, r23.y, r29.w
              and r55.xyz, r30.wwww, r31.wwww
              movc r30.w, r31.w, l(0), r30.w
              and r56.xyz, r29.wwww, r31.wwww
              and r23.y, r23.y, r31.w
              mov r49.x, r48.x
              dp3 r29.w, r49.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
              mul r29.w, r23.x, r29.w
              lt r31.w, r24.w, r29.w
              if_nz r31.w
                mul r31.w, r20.w, r20.z
                mul r57.xyz, r42.xyzx, r31.wwww
                mad r21.xyz, r57.xyzx, r44.xyzx, r21.xyzx
                mad r39.xyz, r57.xyzx, r47.xyzx, r39.xyzx
                mad r41.xyz, r57.xyzx, r45.xyzx, r41.xyzx
                mad r40.xyz, r57.xyzx, r46.xyzx, r40.xyzx
                mov r45.xyz, r23.yyyy
                mov r24.w, r29.w
                mov r47.xyz, r30.wwww
                mov r42.xyz, r49.xyzx
                mov r43.xyz, r58.xyzx
                mov r44.xyz, r55.xyzx
                mov r46.xyz, r56.xyzx
                mov r20.zw, r59.xxxy
              else 
                mul r55.xyw, r23.xxxx, r49.xyxz
                mad r21.xyz, r55.xywx, r55.zzzz, r21.xyzx
                mad r39.xyz, r55.xywx, r30.wwww, r39.xyzx
                mad r41.xyz, r55.xywx, r23.yyyy, r41.xyzx
                mad r40.xyz, r55.xywx, r56.xyzx, r40.xyzx
              endif 
            endif 
          endif 
        endif 
        break 
        case l(2)
        mov r55.xy, r51.zwzz
        mov r55.z, r52.w
        add r55.xyz, r55.xyzx, -v6.xyzx
        dp3 r23.x, r55.xyzx, r55.xyzx
        rsq r23.x, r23.x
        mul r56.xyz, r23.xxxx, r55.xyzx
        dp3 r23.y, r2.xyzx, r56.xyzx
        lt r29.w, l(0.000000), |r23.y|
        if_nz r29.w
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r57.xyzw, r28.w, l(112), t12.yzwx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r58.xyzw, r28.w, l(128), t12.zxyw
          mov r60.xyz, r57.xyzx
          mov r60.w, r58.y
          dp4 r29.w, r60.xyzw, r22.xyzw
          lt r30.w, r29.w, l(1.000000)
          if_nz r30.w
            mov r59.xzw, l(1.000000,0,1.000000,1.000000)
            mov r61.x, l(0)
          else 
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r62.xyzw, r28.w, l(172), t12.yzwx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r63.xyzw, r28.w, l(188), t12.wxyz
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r64.xyzw, r28.w, l(204), t12.xyzw
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r30.w, r28.w, l(236), t12.xxxx
            add r65.xyz, r48.yzwy, -v6.xyzx
            mul r31.w, r51.x, r51.x
            dp3 r32.w, r65.xyzx, r65.xyzx
            div r31.w, r31.w, r32.w
            min r31.w, r31.w, l(1.000000)
            mad_sat r38.zw, r29.wwww, r50.xxxz, r50.yyyw
            mul r50.xy, r38.zwzz, r38.zwzz
            mad r38.zw, r38.zzzw, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
            mul r38.zw, r38.zzzw, r50.xxxy
            mul r31.w, r31.w, r38.z
            mul r31.w, r38.w, r31.w
            mov r52.w, r53.x
            dp4 r50.x, r52.xyzw, r22.xyzw
            mov r65.xyz, r53.yzwy
            mov r65.w, r54.w
            dp4 r50.y, r65.xyzw, r22.xyzw
            div r24.xy, r50.xyxx, r29.wwww
            lt r29.w, r62.w, l(0.00048828)
            if_nz r29.w
              mov r63.y, r64.x
              mad_sat r38.zw, |r24.xxxy|, r63.zzzw, r63.xxxy
              mul r50.xy, r38.zwzz, r38.zwzz
              mad r38.zw, r38.zzzw, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
              mul r38.zw, r38.zzzw, r50.xxxy
              mul r29.w, r38.w, r38.z
            else 
              mov r62.w, r63.y
              mul_sat r50.xyzw, |r24.yyxx|, r62.xyzw
              log r50.xyzw, r50.xyzw
              mul r50.xyzw, r50.xyzw, r63.xxxx
              exp r50.xyzw, r50.xyzw
              add r38.zw, r50.zzzw, r50.xxxy
              log r38.zw, r38.zzzw
              mul r38.zw, r38.zzzw, r64.xxxx
              exp r38.zw, r38.zzzw
              mul r32.w, r38.z, r63.z
              mad r33.w, r63.w, r38.w, l(-1.000000)
              mad r32.w, r63.w, r38.w, -r32.w
              div_sat r32.w, r33.w, r32.w
              mul r33.w, r32.w, r32.w
              mad r32.w, r32.w, l(-2.000000), l(3.000000)
              mul r29.w, r32.w, r33.w
            endif 
            mul r61.x, r29.w, r31.w
            and r29.w, r30.w, l(255)
            if_nz r29.w
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r50.xyz, r28.w, l(220), t12.xyzx
              dp3 r30.w, r64.yzwy, r24.xyzx
              dp3 r24.x, r50.xyzx, r24.xyzx
              frc r50.x, r30.w
              frc r50.y, r24.x
              iadd r24.x, r29.w, l(-1)
              utof r50.z, r24.x
              sample_l_indexable(texture2darray)(float,float,float,float) r59.xzw, r50.xyzx, t20.xwyz, s2, l(0.000000)
            else 
              mov r59.xzw, l(1.000000,0,1.000000,1.000000)
            endif 
          endif 
          mov r48.yz, r49.yyzy
          mul r48.xyz, r59.xzwx, r48.xyzx
          lt r24.x, l(0.000000), r61.x
          if_nz r24.x
            ubfe r24.xy, l(3, 4, 0, 0), l(27, 20, 0, 0), r49.wwww
            ine r24.x, r24.x, l(1)
            if_nz r24.x
              mad r24.x, |r23.y|, l(-0.200000), l(0.400000)
              lt r29.w, r23.y, l(0.000000)
              movc r24.x, r29.w, -r24.x, r24.x
              mad r25.xyz, r2.xyzx, r24.xxxx, v6.xyzx
              mov r57.xyz, r54.xyzx
              dp4 r24.x, r57.xyzw, r25.xyzw
              dp4 r29.w, r60.xyzw, r25.xyzw
              ge r30.w, r29.w, r24.x
              if_nz r30.w
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r58.y, r28.w, l(144), t12.xxxx
                mov r52.w, r53.x
                dp4 r50.x, r52.xyzw, r25.xyzw
                mov r54.xyz, r53.yzwy
                dp4 r50.y, r54.xyzw, r25.xyzw
                div r25.xy, r50.xyxx, r29.wwww
                mad_sat r25.xy, r25.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                mad r25.xy, r25.xyxx, r58.zwzz, r58.xyxx
                div r24.x, r24.x, r29.w
                max r24.x, r24.x, l(0.00006104)
                and r28.w, r49.w, l(0x0000ffff)
                if_nz r18.w
                  utof r50.z, r28.w
                  mov r29.w, l(0)
                  mov r30.w, l(0)
                  loop 
                    ige r31.w, r30.w, l(8)
                    breakc_nz r31.w
                    dp2 r52.x, icb[r30.w + 0].xyxx, r9.xyxx
                    dp2 r52.y, icb[r30.w + 0].yxyy, r9.xzxx
                    mad r50.xy, r52.xyxx, r51.yyyy, r25.xyxx
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r31.w, r50.xyzx, t9.xxxx, s13, r24.x
                    mad r29.w, r31.w, l(0.125000), r29.w
                    iadd r30.w, r30.w, l(1)
                  endloop 
                else 
                  utof r25.z, r28.w
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r29.w, r25.xyzx, t9.xxxx, s13, r24.x
                endif 
                mul r24.x, r29.w, r29.w
                mul r61.y, r29.w, r24.x
              else 
                mov r61.y, l(1.000000)
              endif 
            else 
              mov r61.y, l(1.000000)
            endif 
            if_nz r24.y
              iadd r24.x, r24.y, cb2[0].x
              iadd r24.x, r24.x, l(-1)
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r24.y, r24.x, l(52), t12.xxxx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r50.xyzw, r24.x, l(68), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r51.xyzw, r24.x, l(84), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r52.xyzw, r24.x, l(100), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r53.xyzw, r24.x, l(116), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r54.xyzw, r24.x, l(132), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r57.xyzw, r24.x, l(148), t12.xyzw
              mad r25.x, |r23.y|, l(-0.200000), l(0.400000)
              lt r25.y, r23.y, l(0.000000)
              movc r25.x, r25.y, -r25.x, r25.x
              mad r26.xyz, r2.xyzx, r25.xxxx, v6.xyzx
              dp4 r25.x, r50.xyzw, r26.xyzw
              dp4 r25.y, r51.xyzw, r26.xyzw
              dp4 r25.z, r52.xyzw, r26.xyzw
              dp4 r26.x, r53.xyzw, r26.xyzw
              lt r26.y, r26.x, r25.z
              div r25.xy, r25.xyxx, r26.xxxx
              mad r25.xy, r25.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
              add r25.xy, r57.zwzz, r25.xyxx
              mul r25.xy, r57.xyxx, r25.xyxx
              div r38.zw, r24.yyyy, r54.xxxz
              add r49.yz, -r38.zzwz, l(0.000000, 1.000000, 1.000000, 0.000000)
              ge r49.yz, r25.xxyx, r49.yyzy
              ge r38.zw, r38.zzzw, r25.xxxy
              or r38.zw, r38.zzzw, r49.yyyz
              or r26.z, r38.w, r38.z
              or r26.y, r26.y, r26.z
              if_z r26.y
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r26.y, r24.x, l(28), t12.xxxx
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.zw, r24.x, l(164), t12.xxxy
                mov_sat r25.xy, r25.xyxx
                mad r50.xy, r25.xyxx, r54.xzxx, r54.ywyy
                mul r24.x, r26.x, r38.w
                mad r25.x, r38.z, r26.x, r25.z
                div r24.x, r25.x, r24.x
                max r24.x, r24.x, l(0.00006104)
                and r25.x, r26.y, l(0x0000ffff)
                if_nz r18.w
                  utof r26.z, r25.x
                  mov r25.yz, l(0,0,0,0)
                  loop 
                    ige r28.w, r25.z, l(8)
                    breakc_nz r28.w
                    dp2 r51.x, icb[r25.z + 0].xyxx, r27.xyxx
                    dp2 r51.y, icb[r25.z + 0].yxyy, r27.xzxx
                    mad r26.xy, r51.xyxx, r24.yyyy, r50.xyxx
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r26.x, r26.xyzx, t9.xxxx, s13, r24.x
                    mad r25.y, r26.x, l(0.125000), r25.y
                    iadd r25.z, r25.z, l(1)
                  endloop 
                else 
                  utof r50.z, r25.x
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r25.y, r50.xyzx, t9.xxxx, s13, r24.x
                endif 
                mul r24.x, r25.y, r25.y
                mul r24.x, r25.y, r24.x
              else 
                mov r24.x, l(1.000000)
              endif 
              mul r61.y, r24.x, r61.y
            endif 
            mul r24.x, r61.y, r61.x
            lt r24.y, l(0.000000), r24.x
            if_nz r24.y
              mul r24.y, r49.x, l(0.16666667)
              mad r25.x, -|r23.y|, r1.z, l(1.000000)
              mul r25.x, r25.x, r25.x
              mad r25.x, -r25.x, l(0.620000), l(0.620000)
              add r25.x, -|r23.y|, r25.x
              mad r25.x, r25.x, l(0.81649661), |r23.y|
              lt r25.z, l(0.000000), r23.y
              mov_sat r23.y, r23.y
              mad r26.xyz, r55.xyzx, r23.xxxx, r6.xyzx
              dp3 r23.x, r26.xyzx, r26.xyzx
              rsq r23.x, r23.x
              mul r26.xyz, r23.xxxx, r26.xyzx
              dp3 r23.x, r2.xyzx, r26.xyzx
              dp3 r28.w, r26.xyzx, r6.xyzx
              dp3 r30.w, r26.xyzx, r4.xyzx
              dp3 r26.x, r26.xyzx, r5.xyzx
              mul r26.y, r30.w, r30.w
              mul r26.x, r26.x, r26.x
              div r26.xy, r26.xyxx, r1.yxyy
              add r26.x, r26.x, r26.y
              mad r23.x, |r23.x|, |r23.x|, r26.x
              mad r26.x, r23.y, r8.z, r8.w
              mul r23.x, r23.x, r23.x
              mul r23.x, r1.w, r23.x
              mul r23.x, r26.x, r23.x
              rcp r23.x, r23.x
              mul r23.y, r24.y, r23.y
              mul r23.x, r23.y, r23.x
              add_sat r23.y, -r28.w, l(1.000000)
              mul r24.y, r23.y, r23.y
              mul r24.y, r24.y, r24.y
              mul r23.y, r23.y, r24.y
              mul r23.y, r23.y, r23.x
              and r26.xyz, r25.xxxx, r25.zzzz
              movc r24.y, r25.z, l(0), r25.x
              and r49.xyz, r23.yyyy, r25.zzzz
              and r23.x, r23.x, r25.z
              dp3 r23.y, r48.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
              mul r23.y, r23.y, r24.x
              lt r25.x, r24.w, r23.y
              if_nz r25.x
                mul r25.x, r20.w, r20.z
                mul r50.xyz, r42.xyzx, r25.xxxx
                mad r21.xyz, r50.xyzx, r44.xyzx, r21.xyzx
                mad r39.xyz, r50.xyzx, r47.xyzx, r39.xyzx
                mad r41.xyz, r50.xyzx, r45.xyzx, r41.xyzx
                mad r40.xyz, r50.xyzx, r46.xyzx, r40.xyzx
                mov r45.xyz, r23.xxxx
                mov r24.w, r23.y
                mov r47.xyz, r24.yyyy
                mov r42.xyz, r48.xyzx
                mov r43.xyz, r56.xyzx
                mov r44.xyz, r26.xyzx
                mov r46.xyz, r49.xyzx
                mov r20.zw, r61.xxxy
              else 
                mul r48.xyz, r48.xyzx, r24.xxxx
                mad r21.xyz, r48.xyzx, r26.zzzz, r21.xyzx
                mad r39.xyz, r48.xyzx, r24.yyyy, r39.xyzx
                mad r41.xyz, r48.xyzx, r23.xxxx, r41.xyzx
                mad r40.xyz, r48.xyzx, r49.xyzx, r40.xyzx
              endif 
            endif 
          endif 
        endif 
        break 
        default 
        break 
      endswitch 
    endif 
  endloop 
  mov r28.xyz, r21.xyzx
  mov r29.xyz, r39.xyzx
  mov r30.xyz, r40.xyzx
  mov r31.xyz, r41.xyzx
  mov r32.xyz, r42.xyzx
  mov r33.xyz, r43.xyzx
  mov r34.xyz, r44.xyzx
  mov r36.xyz, r45.xyzx
  mov r37.xyz, r46.xyzx
  mov r17.zw, r20.zzzw
  mov r38.y, r24.w
  mov r35.xyz, r47.xyzx
  iadd r14.x, r14.x, l(32)
endloop 
mov r1.z, l(0)
mul r1.xy, r33.yxyy, l(1.000000, -1.000000, 0.000000, 0.000000)
mul r4.xyz, r1.yzxy, r33.zxyz
mad r4.xyz, r33.yzxy, r1.zxyz, -r4.xyzx
mul r5.xyz, r12.yyyy, cb1[9].xywx
mad r5.xyz, r12.xxxx, cb1[8].xywx, r5.xyzx
mad r5.xyz, r12.zzzz, cb1[10].xywx, r5.xyzx
add r5.xyz, r7.yzwy, r5.xyzx
rcp r8.z, r5.z
mul r5.xy, r5.xyxx, r8.zzzz
mad r8.xy, r5.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
mad r9.xyz, r33.xyzx, l(2.400000, 2.400000, 2.400000, 0.000000), r12.xyzx
dp2 r1.w, v0.xyxx, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r1.w, r1.w
mul r1.w, r1.w, l(52.982918)
frc r1.w, r1.w
mul r4.w, r1.w, l(3.141600)
mad r4.w, cb1[70].w, l(0.500000), r4.w
sincos r5.x, r7.x, r4.w
mul r10.xyz, r4.xyzx, r5.xxxx
mad r10.xyz, r7.xxxx, r1.xyzx, r10.xyzx
mad r10.xyz, r10.xyzx, l(0.120000, 0.120000, 0.120000, 0.000000), r9.xyzx
mul r12.xyz, r10.yyyy, cb1[9].xywx
mad r10.xyw, r10.xxxx, cb1[8].xyxw, r12.xyxz
mad r10.xyz, r10.zzzz, cb1[10].xywx, r10.xywx
add r10.xyz, r7.yzwy, r10.xyzx
mul r5.xy, r10.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000)
rcp r10.z, r10.z
mad r10.xy, r5.xyxx, r10.zzzz, l(0.500000, 0.500000, 0.000000, 0.000000)
mov r12.xyz, -r8.xyzx
add r10.xyz, r10.xyzx, r12.xyzx
add r4.w, r4.w, l(3.141600)
sincos r5.x, r7.x, r4.w
mul r4.xyz, r4.xyzx, r5.xxxx
mad r1.xyz, r7.xxxx, r1.xyzx, r4.xyzx
mad r1.xyz, r1.xyzx, l(0.120000, 0.120000, 0.120000, 0.000000), r9.xyzx
mul r4.xyz, r1.yyyy, cb1[9].xywx
mad r4.xyz, r1.xxxx, cb1[8].xywx, r4.xyzx
mad r1.xyz, r1.zzzz, cb1[10].xywx, r4.xyzx
add r1.xyz, r7.yzwy, r1.xyzx
mul r1.xy, r1.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000)
rcp r4.z, r1.z
mad r4.xy, r1.xyxx, r4.zzzz, r12.xyxx
mov r12.xyw, l(0,0,0,0.500000)
add r1.xyz, r12.wwzw, r4.xyzx
dp2 r4.x, cb1[44].zwzz, cb1[44].zwzz
dp2 r4.y, r10.xyxx, r10.xyxx
sqrt r4.xy, r4.xyxx
rcp r4.y, r4.y
mul r4.x, r4.y, r4.x
mad r4.yz, r1.wwww, l(0.000000, 0.500000, 0.500000, 0.000000), l(0.000000, 0.33333334, 1.000000, 0.000000)
mul r4.yz, r4.yyzy, l(0.000000, 0.11764706, 0.11764706, 0.000000)
mul r4.yz, r4.yyzy, r4.yyzy
mov x1[0].x, r4.y
mad r7.xyz, r10.xyzx, r4.yyyy, r8.xyzx
lt r5.xy, r4.xxxx, r4.yzyy
mul r7.xy, r7.xyxx, cb1[44].xyxx
ftoi r9.xy, r7.xyxx
mov r9.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r4.w, r9.xyzw, t21.yzwx
ge r6.w, r4.w, l(0.984375)
mul r7.x, r4.w, l(1.01587307)
mad r4.w, r4.w, l(64.000000), l(-63.000000)
movc r4.w, r6.w, r4.w, r7.x
max r4.w, r4.w, l(0.00000001)
rcp r4.w, r4.w
mov x2[0].x, r4.w
add r6.w, r4.w, l(0.042000)
mul r6.w, r6.w, r7.z
lt r6.w, l(1.000000), r6.w
and r6.w, r6.w, l(0x3f800000)
movc r5.x, r5.x, r6.w, l(1.000000)
mov x0[0].x, r5.x
mov x1[1].x, r4.z
mad r7.xyz, r1.xyzx, r4.zzzz, r8.xyzx
mul r7.xy, r7.xyxx, cb1[44].xyxx
ftoi r9.xy, r7.xyxx
mov r9.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r6.w, r9.xyzw, t21.yzwx
ge r7.x, r6.w, l(0.984375)
mul r7.y, r6.w, l(1.01587307)
mad r6.w, r6.w, l(64.000000), l(-63.000000)
movc r6.w, r7.x, r6.w, r7.y
max r6.w, r6.w, l(0.00000001)
rcp r6.w, r6.w
mov x2[1].x, r6.w
add r7.x, r6.w, l(0.042000)
mul r7.x, r7.x, r7.z
lt r7.x, l(1.000000), r7.x
and r7.x, r7.x, l(0x3f800000)
movc r5.y, r5.y, r7.x, l(1.000000)
mov x0[1].x, r5.y
add r7.x, r5.y, r5.x
ne r7.x, r7.x, l(0.000000)
if_nz r7.x
  mad r7.xy, r1.wwww, l(0.500000, 0.500000, 0.000000, 0.000000), l(1.33333337, 2.000000, 0.000000, 0.000000)
  mul r7.xy, r7.xyxx, l(0.11764706, 0.11764706, 0.000000, 0.000000)
  mad r7.xy, r7.xyxx, r7.xyxx, -r4.yzyy
  mad r4.y, r5.x, r7.x, r4.y
  mov x1[0].x, r4.y
  mad r7.xzw, r10.xxyz, r4.yyyy, r8.xxyz
  lt r4.y, r4.x, r4.y
  mul r7.xz, r7.xxzx, cb1[44].xxyx
  ftoi r9.xy, r7.xzxx
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r7.x, r9.xyzw, t21.xyzw
  ge r7.z, r7.x, l(0.984375)
  mul r8.w, r7.x, l(1.01587307)
  mad r7.x, r7.x, l(64.000000), l(-63.000000)
  movc r7.x, r7.z, r7.x, r8.w
  max r7.x, r7.x, l(0.00000001)
  rcp r7.x, r7.x
  movc r4.w, r4.y, r7.x, r4.w
  mov x2[0].x, r4.w
  add r4.w, r7.x, l(0.042000)
  mul r4.w, r4.w, r7.w
  lt r4.w, l(1.000000), r4.w
  and r4.w, r4.w, l(0x3f800000)
  mul r4.w, r4.w, r5.x
  movc r4.y, r4.y, r4.w, r5.x
  mov x0[0].x, r4.y
  mad r4.z, r5.y, r7.y, r4.z
  mov x1[1].x, r4.z
  mad r7.xyz, r1.xyzx, r4.zzzz, r8.xyzx
  lt r4.z, r4.x, r4.z
  mul r7.xy, r7.xyxx, cb1[44].xyxx
  ftoi r9.xy, r7.xyxx
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.w, r9.xyzw, t21.yzwx
  ge r5.x, r4.w, l(0.984375)
  mul r7.x, r4.w, l(1.01587307)
  mad r4.w, r4.w, l(64.000000), l(-63.000000)
  movc r4.w, r5.x, r4.w, r7.x
  max r4.w, r4.w, l(0.00000001)
  rcp r4.w, r4.w
  movc r5.x, r4.z, r4.w, r6.w
  mov x2[1].x, r5.x
  add r4.w, r4.w, l(0.042000)
  mul r4.w, r4.w, r7.z
  lt r4.w, l(1.000000), r4.w
  and r4.w, r4.w, l(0x3f800000)
  mul r4.w, r4.w, r5.y
  movc r4.z, r4.z, r4.w, r5.y
  mov x0[1].x, r4.z
  add r4.y, r4.z, r4.y
  eq r4.y, r4.y, l(0.000000)
else 
  mov r4.y, l(-1)
endif 
if_z r4.y
  mad r4.yz, r1.wwww, l(0.000000, 0.500000, 0.500000, 0.000000), l(0.000000, 2.33333325, 3.000000, 0.000000)
  mul r4.yz, r4.yyzy, l(0.000000, 0.11764706, 0.11764706, 0.000000)
  mov r4.w, x1[0].x
  mov r5.x, x0[0].x
  mad r4.y, r4.y, r4.y, -r4.w
  mad r4.y, r5.x, r4.y, r4.w
  mov x1[0].x, r4.y
  mad r7.xyz, r10.xyzx, r4.yyyy, r8.xyzx
  lt r4.y, r4.x, r4.y
  mul r7.xy, r7.xyxx, cb1[44].xyxx
  ftoi r9.xy, r7.xyxx
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.w, r9.xyzw, t21.yzwx
  ge r5.y, r4.w, l(0.984375)
  mul r6.w, r4.w, l(1.01587307)
  mad r4.w, r4.w, l(64.000000), l(-63.000000)
  movc r4.w, r5.y, r4.w, r6.w
  max r4.w, r4.w, l(0.00000001)
  rcp r4.w, r4.w
  mov r5.y, x2[0].x
  movc r5.y, r4.y, r4.w, r5.y
  mov x2[0].x, r5.y
  add r4.w, r4.w, l(0.042000)
  mul r4.w, r4.w, r7.z
  lt r4.w, l(1.000000), r4.w
  and r4.w, r4.w, l(0x3f800000)
  mul r4.w, r4.w, r5.x
  movc r4.y, r4.y, r4.w, r5.x
  mov x0[0].x, r4.y
  mov r4.w, x1[1].x
  mov r5.x, x0[1].x
  mad r4.z, r4.z, r4.z, -r4.w
  mad r4.z, r5.x, r4.z, r4.w
  mov x1[1].x, r4.z
  mad r7.xyz, r1.xyzx, r4.zzzz, r8.xyzx
  lt r4.z, r4.x, r4.z
  mul r7.xy, r7.xyxx, cb1[44].xyxx
  ftoi r9.xy, r7.xyxx
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.w, r9.xyzw, t21.yzwx
  ge r5.y, r4.w, l(0.984375)
  mul r6.w, r4.w, l(1.01587307)
  mad r4.w, r4.w, l(64.000000), l(-63.000000)
  movc r4.w, r5.y, r4.w, r6.w
  max r4.w, r4.w, l(0.00000001)
  rcp r4.w, r4.w
  mov r5.y, x2[1].x
  movc r5.y, r4.z, r4.w, r5.y
  mov x2[1].x, r5.y
  add r4.w, r4.w, l(0.042000)
  mul r4.w, r4.w, r7.z
  lt r4.w, l(1.000000), r4.w
  and r4.w, r4.w, l(0x3f800000)
  mul r4.w, r4.w, r5.x
  movc r4.z, r4.z, r4.w, r5.x
  mov x0[1].x, r4.z
  add r4.y, r4.z, r4.y
  eq r4.y, r4.y, l(0.000000)
else 
  mov r4.y, l(-1)
endif 
if_z r4.y
  mad r4.yz, r1.wwww, l(0.000000, 0.500000, 0.500000, 0.000000), l(0.000000, 3.33333325, 4.000000, 0.000000)
  mul r4.yz, r4.yyzy, l(0.000000, 0.11764706, 0.11764706, 0.000000)
  mov r4.w, x1[0].x
  mov r5.x, x0[0].x
  mad r4.y, r4.y, r4.y, -r4.w
  mad r4.y, r5.x, r4.y, r4.w
  mov x1[0].x, r4.y
  mad r7.xyz, r10.xyzx, r4.yyyy, r8.xyzx
  lt r4.y, r4.x, r4.y
  mul r7.xy, r7.xyxx, cb1[44].xyxx
  ftoi r9.xy, r7.xyxx
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.w, r9.xyzw, t21.yzwx
  ge r5.y, r4.w, l(0.984375)
  mul r6.w, r4.w, l(1.01587307)
  mad r4.w, r4.w, l(64.000000), l(-63.000000)
  movc r4.w, r5.y, r4.w, r6.w
  max r4.w, r4.w, l(0.00000001)
  rcp r4.w, r4.w
  mov r5.y, x2[0].x
  movc r5.y, r4.y, r4.w, r5.y
  mov x2[0].x, r5.y
  add r4.w, r4.w, l(0.042000)
  mul r4.w, r4.w, r7.z
  lt r4.w, l(1.000000), r4.w
  and r4.w, r4.w, l(0x3f800000)
  mul r4.w, r4.w, r5.x
  movc r4.y, r4.y, r4.w, r5.x
  mov x0[0].x, r4.y
  mov r4.w, x1[1].x
  mov r5.x, x0[1].x
  mad r4.z, r4.z, r4.z, -r4.w
  mad r4.z, r5.x, r4.z, r4.w
  mov x1[1].x, r4.z
  mad r7.xyz, r1.xyzx, r4.zzzz, r8.xyzx
  lt r4.z, r4.x, r4.z
  mul r7.xy, r7.xyxx, cb1[44].xyxx
  ftoi r9.xy, r7.xyxx
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.w, r9.xyzw, t21.yzwx
  ge r5.y, r4.w, l(0.984375)
  mul r6.w, r4.w, l(1.01587307)
  mad r4.w, r4.w, l(64.000000), l(-63.000000)
  movc r4.w, r5.y, r4.w, r6.w
  max r4.w, r4.w, l(0.00000001)
  rcp r4.w, r4.w
  mov r5.y, x2[1].x
  movc r5.y, r4.z, r4.w, r5.y
  mov x2[1].x, r5.y
  add r4.w, r4.w, l(0.042000)
  mul r4.w, r4.w, r7.z
  lt r4.w, l(1.000000), r4.w
  and r4.w, r4.w, l(0x3f800000)
  mul r4.w, r4.w, r5.x
  movc r4.z, r4.z, r4.w, r5.x
  mov x0[1].x, r4.z
  add r4.y, r4.z, r4.y
  eq r4.y, r4.y, l(0.000000)
else 
  mov r4.y, l(-1)
endif 
if_z r4.y
  mad r4.yz, r1.wwww, l(0.000000, 0.500000, 0.500000, 0.000000), l(0.000000, 4.33333349, 5.000000, 0.000000)
  mul r4.yz, r4.yyzy, l(0.000000, 0.11764706, 0.11764706, 0.000000)
  mov r4.w, x1[0].x
  mov r5.x, x0[0].x
  mad r4.y, r4.y, r4.y, -r4.w
  mad r4.y, r5.x, r4.y, r4.w
  mov x1[0].x, r4.y
  mad r7.xyz, r10.xyzx, r4.yyyy, r8.xyzx
  lt r4.y, r4.x, r4.y
  mul r7.xy, r7.xyxx, cb1[44].xyxx
  ftoi r9.xy, r7.xyxx
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.w, r9.xyzw, t21.yzwx
  ge r5.y, r4.w, l(0.984375)
  mul r6.w, r4.w, l(1.01587307)
  mad r4.w, r4.w, l(64.000000), l(-63.000000)
  movc r4.w, r5.y, r4.w, r6.w
  max r4.w, r4.w, l(0.00000001)
  rcp r4.w, r4.w
  mov r5.y, x2[0].x
  movc r5.y, r4.y, r4.w, r5.y
  mov x2[0].x, r5.y
  add r4.w, r4.w, l(0.042000)
  mul r4.w, r4.w, r7.z
  lt r4.w, l(1.000000), r4.w
  and r4.w, r4.w, l(0x3f800000)
  mul r4.w, r4.w, r5.x
  movc r4.y, r4.y, r4.w, r5.x
  mov x0[0].x, r4.y
  mov r4.w, x1[1].x
  mov r5.x, x0[1].x
  mad r4.z, r4.z, r4.z, -r4.w
  mad r4.z, r5.x, r4.z, r4.w
  mov x1[1].x, r4.z
  mad r7.xyz, r1.xyzx, r4.zzzz, r8.xyzx
  lt r4.z, r4.x, r4.z
  mul r7.xy, r7.xyxx, cb1[44].xyxx
  ftoi r9.xy, r7.xyxx
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.w, r9.xyzw, t21.yzwx
  ge r5.y, r4.w, l(0.984375)
  mul r6.w, r4.w, l(1.01587307)
  mad r4.w, r4.w, l(64.000000), l(-63.000000)
  movc r4.w, r5.y, r4.w, r6.w
  max r4.w, r4.w, l(0.00000001)
  rcp r4.w, r4.w
  mov r5.y, x2[1].x
  movc r5.y, r4.z, r4.w, r5.y
  mov x2[1].x, r5.y
  add r4.w, r4.w, l(0.042000)
  mul r4.w, r4.w, r7.z
  lt r4.w, l(1.000000), r4.w
  and r4.w, r4.w, l(0x3f800000)
  mul r4.w, r4.w, r5.x
  movc r4.z, r4.z, r4.w, r5.x
  mov x0[1].x, r4.z
  add r4.y, r4.z, r4.y
  eq r4.y, r4.y, l(0.000000)
else 
  mov r4.y, l(-1)
endif 
if_z r4.y
  mad r4.yz, r1.wwww, l(0.000000, 0.500000, 0.500000, 0.000000), l(0.000000, 5.33333349, 6.000000, 0.000000)
  mul r4.yz, r4.yyzy, l(0.000000, 0.11764706, 0.11764706, 0.000000)
  mov r4.w, x1[0].x
  mov r5.x, x0[0].x
  mad r4.y, r4.y, r4.y, -r4.w
  mad r4.y, r5.x, r4.y, r4.w
  mov x1[0].x, r4.y
  mad r7.xyz, r10.xyzx, r4.yyyy, r8.xyzx
  lt r4.y, r4.x, r4.y
  mul r7.xy, r7.xyxx, cb1[44].xyxx
  ftoi r9.xy, r7.xyxx
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.w, r9.xyzw, t21.yzwx
  ge r5.y, r4.w, l(0.984375)
  mul r6.w, r4.w, l(1.01587307)
  mad r4.w, r4.w, l(64.000000), l(-63.000000)
  movc r4.w, r5.y, r4.w, r6.w
  max r4.w, r4.w, l(0.00000001)
  rcp r4.w, r4.w
  mov r5.y, x2[0].x
  movc r5.y, r4.y, r4.w, r5.y
  mov x2[0].x, r5.y
  add r4.w, r4.w, l(0.042000)
  mul r4.w, r4.w, r7.z
  lt r4.w, l(1.000000), r4.w
  and r4.w, r4.w, l(0x3f800000)
  mul r4.w, r4.w, r5.x
  movc r4.y, r4.y, r4.w, r5.x
  mov x0[0].x, r4.y
  mov r4.w, x1[1].x
  mov r5.x, x0[1].x
  mad r4.z, r4.z, r4.z, -r4.w
  mad r4.z, r5.x, r4.z, r4.w
  mov x1[1].x, r4.z
  mad r7.xyz, r1.xyzx, r4.zzzz, r8.xyzx
  lt r4.z, r4.x, r4.z
  mul r7.xy, r7.xyxx, cb1[44].xyxx
  ftoi r9.xy, r7.xyxx
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.w, r9.xyzw, t21.yzwx
  ge r5.y, r4.w, l(0.984375)
  mul r6.w, r4.w, l(1.01587307)
  mad r4.w, r4.w, l(64.000000), l(-63.000000)
  movc r4.w, r5.y, r4.w, r6.w
  max r4.w, r4.w, l(0.00000001)
  rcp r4.w, r4.w
  mov r5.y, x2[1].x
  movc r5.y, r4.z, r4.w, r5.y
  mov x2[1].x, r5.y
  add r4.w, r4.w, l(0.042000)
  mul r4.w, r4.w, r7.z
  lt r4.w, l(1.000000), r4.w
  and r4.w, r4.w, l(0x3f800000)
  mul r4.w, r4.w, r5.x
  movc r4.z, r4.z, r4.w, r5.x
  mov x0[1].x, r4.z
  add r4.y, r4.z, r4.y
  eq r4.y, r4.y, l(0.000000)
else 
  mov r4.y, l(-1)
endif 
if_z r4.y
  mad r4.yz, r1.wwww, l(0.000000, 0.500000, 0.500000, 0.000000), l(0.000000, 6.33333349, 7.000000, 0.000000)
  mul r4.yz, r4.yyzy, l(0.000000, 0.11764706, 0.11764706, 0.000000)
  mov r4.w, x1[0].x
  mov r5.x, x0[0].x
  mad r4.y, r4.y, r4.y, -r4.w
  mad r4.y, r5.x, r4.y, r4.w
  mov x1[0].x, r4.y
  mad r7.xyz, r10.xyzx, r4.yyyy, r8.xyzx
  lt r4.y, r4.x, r4.y
  mul r7.xy, r7.xyxx, cb1[44].xyxx
  ftoi r9.xy, r7.xyxx
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.w, r9.xyzw, t21.yzwx
  ge r5.y, r4.w, l(0.984375)
  mul r6.w, r4.w, l(1.01587307)
  mad r4.w, r4.w, l(64.000000), l(-63.000000)
  movc r4.w, r5.y, r4.w, r6.w
  max r4.w, r4.w, l(0.00000001)
  rcp r4.w, r4.w
  mov r5.y, x2[0].x
  movc r5.y, r4.y, r4.w, r5.y
  mov x2[0].x, r5.y
  add r4.w, r4.w, l(0.042000)
  mul r4.w, r4.w, r7.z
  lt r4.w, l(1.000000), r4.w
  and r4.w, r4.w, l(0x3f800000)
  mul r4.w, r4.w, r5.x
  movc r4.y, r4.y, r4.w, r5.x
  mov x0[0].x, r4.y
  mov r4.w, x1[1].x
  mov r5.x, x0[1].x
  mad r4.z, r4.z, r4.z, -r4.w
  mad r4.z, r5.x, r4.z, r4.w
  mov x1[1].x, r4.z
  mad r7.xyz, r1.xyzx, r4.zzzz, r8.xyzx
  lt r4.z, r4.x, r4.z
  mul r7.xy, r7.xyxx, cb1[44].xyxx
  ftoi r9.xy, r7.xyxx
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.w, r9.xyzw, t21.yzwx
  ge r5.y, r4.w, l(0.984375)
  mul r6.w, r4.w, l(1.01587307)
  mad r4.w, r4.w, l(64.000000), l(-63.000000)
  movc r4.w, r5.y, r4.w, r6.w
  max r4.w, r4.w, l(0.00000001)
  rcp r4.w, r4.w
  mov r5.y, x2[1].x
  movc r5.y, r4.z, r4.w, r5.y
  mov x2[1].x, r5.y
  add r4.w, r4.w, l(0.042000)
  mul r4.w, r4.w, r7.z
  lt r4.w, l(1.000000), r4.w
  and r4.w, r4.w, l(0x3f800000)
  mul r4.w, r4.w, r5.x
  movc r4.z, r4.z, r4.w, r5.x
  mov x0[1].x, r4.z
  add r4.y, r4.z, r4.y
  eq r4.y, r4.y, l(0.000000)
else 
  mov r4.y, l(-1)
endif 
if_z r4.y
  mad r4.yz, r1.wwww, l(0.000000, 0.500000, 0.500000, 0.000000), l(0.000000, 7.33333349, 8.000000, 0.000000)
  mul r4.yz, r4.yyzy, l(0.000000, 0.11764706, 0.11764706, 0.000000)
  mov r1.w, x1[0].x
  mov r4.w, x0[0].x
  mad r4.y, r4.y, r4.y, -r1.w
  mad r1.w, r4.w, r4.y, r1.w
  mad r7.xyz, r10.xyzx, r1.wwww, r8.xyzx
  lt r1.w, r4.x, r1.w
  mul r5.xy, r7.xyxx, cb1[44].xyxx
  ftoi r9.xy, r5.xyxx
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.y, r9.xyzw, t21.yxzw
  ge r5.x, r4.y, l(0.984375)
  mul r5.y, r4.y, l(1.01587307)
  mad r4.y, r4.y, l(64.000000), l(-63.000000)
  movc r4.y, r5.x, r4.y, r5.y
  max r4.y, r4.y, l(0.00000001)
  rcp r4.y, r4.y
  mov r5.x, x2[0].x
  movc r5.x, r1.w, r4.y, r5.x
  mov x2[0].x, r5.x
  add r4.y, r4.y, l(0.042000)
  mul r4.y, r4.y, r7.z
  lt r4.y, l(1.000000), r4.y
  and r4.y, r4.y, l(0x3f800000)
  mul r4.y, r4.y, r4.w
  movc r1.w, r1.w, r4.y, r4.w
  mov x0[0].x, r1.w
  mov r1.w, x1[1].x
  mov r4.y, x0[1].x
  mad r4.z, r4.z, r4.z, -r1.w
  mad r1.w, r4.y, r4.z, r1.w
  mad r1.xyz, r1.xyzx, r1.wwww, r8.xyzx
  lt r1.w, r4.x, r1.w
  mul r1.xy, r1.xyxx, cb1[44].xyxx
  ftoi r7.xy, r1.xyxx
  mov r7.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r1.x, r7.xyzw, t21.xyzw
  ge r1.y, r1.x, l(0.984375)
  mul r4.x, r1.x, l(1.01587307)
  mad r1.x, r1.x, l(64.000000), l(-63.000000)
  movc r1.x, r1.y, r1.x, r4.x
  max r1.x, r1.x, l(0.00000001)
  rcp r1.x, r1.x
  mov r1.y, x2[1].x
  movc r1.y, r1.w, r1.x, r1.y
  mov x2[1].x, r1.y
  add r1.x, r1.x, l(0.042000)
  mul r1.x, r1.x, r1.z
  lt r1.x, l(1.000000), r1.x
  and r1.x, r1.x, l(0x3f800000)
  mul r1.x, r1.x, r4.y
  movc r1.x, r1.w, r1.x, r4.y
  mov x0[1].x, r1.x
endif 
mov r1.x, x0[0].x
iadd r1.y, cb2[0].y, -cb2[58].x
and r1.z, r1.y, l(-32)
iadd r1.w, -r1.z, r1.y
and r4.x, cb2[0].y, l(-32)
iadd r4.y, -r4.x, cb2[0].y
mov r7.xy, l(0,0,0,0)
mov r8.w, l(0)
mov r9.yz, l(0,0,1.000000,0)
mov r10.xy, l(0,0,0,0)
mov r14.xy, l(0,0,0,0)
mov r15.xyzw, l(0,0,0,0)
mov r16.yzw, l(0,0,0,0)
mov r4.z, r1.z
loop 
  uge r4.w, r4.z, cb2[0].y
  breakc_nz r4.w
  ushr r7.z, r4.z, l(5)
  iadd r8.xyz, r7.xyzx, r18.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r4.w, r8.xyzw, t7.yzwx
  ieq r5.x, r1.z, r4.z
  bfi r5.y, r1.w, l(0), l(0), r4.w
  movc r4.w, r5.x, r5.y, r4.w
  ieq r5.x, r4.x, r4.z
  ubfe r5.y, r4.y, l(0), r4.w
  movc r4.w, r5.x, r5.y, r4.w
  iadd r5.x, r4.z, cb2[0].x
  mov r19.xyzw, r15.xyzw
  mov r20.xyz, r16.yzwy
  mov r5.y, r4.w
  loop 
    breakc_z r5.y
    firstbit_lo r6.w, r5.y
    ishl r7.z, l(1), r6.w
    and r7.w, r5.y, r7.z
    if_nz r7.w
      xor r5.y, r5.y, r7.z
      iadd r7.z, r5.x, r6.w
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r21.xyzw, r7.z, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r8.xy, r7.z, l(16), t11.xyxx
      add r21.xyz, r21.xyzx, -v6.xyzx
      mov r8.z, r21.w
      lt r8.xyz, |r21.xyzx|, r8.zxyz
      and r7.z, r8.y, r8.x
      and r7.z, r8.z, r7.z
      if_nz r7.z
        iadd r6.w, r4.z, r6.w
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r21.xyzw, r6.w, l(0), t15.wxyz
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r7.zw, r6.w, l(96), t15.xxxy
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r22.xyzw, r6.w, l(116), t15.zwxy
        add r8.xyz, -r21.yzwy, v6.xyzx
        and r9.w, r22.w, l(0x0000ffff)
        ubfe r10.w, l(6), l(25), r22.w
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r23.xyzw, r9.w, l(0), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r24.xyzw, r9.w, l(16), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r25.xyzw, r9.w, l(32), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r26.xyzw, r9.w, l(48), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r9.w, l(64), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r9.w, l(80), t16.xyzw
        dp3 r12.w, r23.xyzx, r8.xyzx
        add_sat r12.w, r23.w, r12.w
        dp3 r13.x, r24.xyzx, r8.xyzx
        add_sat r13.x, r24.w, r13.x
        mul r12.w, r12.w, r13.x
        dp3 r13.x, r25.xyzx, r8.xyzx
        add_sat r13.x, r25.w, r13.x
        mul r12.w, r12.w, r13.x
        dp3 r13.x, r26.xyzx, r8.xyzx
        add_sat r13.x, r26.w, r13.x
        mul r12.w, r12.w, r13.x
        dp3 r13.x, r27.xyzx, r8.xyzx
        add_sat r13.x, r27.w, r13.x
        mul r12.w, r12.w, r13.x
        dp3 r13.x, r33.xyzx, r8.xyzx
        add_sat r13.x, r33.w, r13.x
        mul r9.x, r12.w, r13.x
        and r12.w, r7.z, l(1)
        movc r13.xy, r12.wwww, r9.xyxx, r9.zxzz
        mov r9.x, r7.z
        mov r17.xy, r13.xyxx
        mov r12.w, l(1)
        loop 
          ige r14.w, r12.w, r10.w
          breakc_nz r14.w
          iadd r14.w, r9.w, r12.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r23.xyzw, r14.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r24.xyzw, r14.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r25.xyzw, r14.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r26.xyzw, r14.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r14.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r14.w, l(80), t16.xyzw
          dp3 r14.w, r23.xyzx, r8.xyzx
          add_sat r14.w, r23.w, r14.w
          mul r14.w, r14.w, r17.x
          dp3 r18.w, r24.xyzx, r8.xyzx
          add_sat r18.w, r24.w, r18.w
          mul r14.w, r14.w, r18.w
          dp3 r18.w, r25.xyzx, r8.xyzx
          add_sat r18.w, r25.w, r18.w
          mul r14.w, r14.w, r18.w
          dp3 r18.w, r26.xyzx, r8.xyzx
          add_sat r18.w, r26.w, r18.w
          mul r14.w, r14.w, r18.w
          dp3 r18.w, r27.xyzx, r8.xyzx
          add_sat r18.w, r27.w, r18.w
          mul r14.w, r14.w, r18.w
          dp3 r18.w, r33.xyzx, r8.xyzx
          add_sat r18.w, r33.w, r18.w
          mul r17.x, r14.w, r18.w
          ushr r21.w, r9.x, l(2)
          ubfe r23.x, l(1), l(2), r9.x
          and r23.y, r21.w, l(2)
          max r23.z, r17.x, r17.y
          mad r14.w, -r14.w, r18.w, l(1.000000)
          mul r14.w, r14.w, r17.y
          movc r13.w, r23.y, r14.w, r23.z
          movc r17.xy, r23.xxxx, r17.xyxx, r13.zwzz
          iadd r12.w, r12.w, l(1)
          mov r9.x, r21.w
        endloop 
        mov_sat r17.y, r17.y
        mul r7.z, r7.w, r17.y
        lt r9.x, l(0.000000), r7.z
        if_nz r9.x
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r23.xyzw, r6.w, l(16), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r6.w, l(32), t15.yxwz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r6.w, l(48), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r6.w, l(64), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r6.w, l(80), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r6.w, l(132), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r6.w, l(148), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xyzw, r6.w, l(164), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r40.xyzw, r6.w, l(180), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r41.xyzw, r6.w, l(196), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r42.xy, r6.w, l(212), t15.xyxx
          mad r20.z, r17.y, r7.w, r20.z
          mul r6.w, r22.z, r7.z
          mov r22.z, r33.z
          dp3 r7.z, r11.xyzx, r22.xyzx
          dp3 r7.w, r8.xyzx, r22.xyzx
          add r7.w, -r33.w, r7.w
          ge r9.x, r7.w, l(0.000000)
          max r7.w, |r7.w|, l(100.000000)
          movc r7.w, r9.x, r7.w, -r7.w
          max r7.z, -r7.z, l(0.00000010)
          div r7.z, r7.w, r7.z
          min r7.z, |r7.z|, l(131072.000000)
          mov r33.z, r38.z
          dp3 r7.w, r11.xyzx, r33.xyzx
          dp3 r9.x, r8.xyzx, r33.xyzx
          add r9.x, -r38.w, r9.x
          ge r9.w, r9.x, l(0.000000)
          max r9.x, |r9.x|, l(100.000000)
          movc r9.x, r9.w, r9.x, -r9.x
          max r7.w, -r7.w, l(0.00000010)
          div r7.w, r9.x, r7.w
          min r7.z, |r7.w|, r7.z
          mov r38.z, r39.z
          dp3 r7.w, r11.xyzx, r38.xyzx
          dp3 r9.x, r8.xyzx, r38.xyzx
          add r9.x, -r39.w, r9.x
          ge r9.w, r9.x, l(0.000000)
          max r9.x, |r9.x|, l(100.000000)
          movc r9.x, r9.w, r9.x, -r9.x
          max r7.w, -r7.w, l(0.00000010)
          div r7.w, r9.x, r7.w
          min r7.z, |r7.w|, r7.z
          mov r39.z, r40.z
          dp3 r7.w, r11.xyzx, r39.xyzx
          dp3 r9.x, r8.xyzx, r39.xyzx
          add r9.x, -r40.w, r9.x
          ge r9.w, r9.x, l(0.000000)
          max r9.x, |r9.x|, l(100.000000)
          movc r9.x, r9.w, r9.x, -r9.x
          max r7.w, -r7.w, l(0.00000010)
          div r7.w, r9.x, r7.w
          min r7.z, |r7.w|, r7.z
          mov r40.z, r41.x
          dp3 r7.w, r11.xyzx, r40.xyzx
          dp3 r9.x, r8.xyzx, r40.xyzx
          add r9.x, -r41.y, r9.x
          ge r9.w, r9.x, l(0.000000)
          max r9.x, |r9.x|, l(100.000000)
          movc r9.x, r9.w, r9.x, -r9.x
          max r7.w, -r7.w, l(0.00000010)
          div r7.w, r9.x, r7.w
          min r7.z, |r7.w|, r7.z
          mov r42.zw, r41.zzzw
          dp3 r7.w, r11.zxyz, r42.xzwx
          dp3 r9.x, r8.zxyz, r42.xzwx
          add r9.x, -r42.y, r9.x
          ge r9.w, r9.x, l(0.000000)
          max r9.x, |r9.x|, l(100.000000)
          movc r9.x, r9.w, r9.x, -r9.x
          max r7.w, -r7.w, l(0.00000010)
          div r7.w, r9.x, r7.w
          min r7.z, |r7.w|, r7.z
          mov r22.x, r25.w
          mov r22.yz, r26.zzwz
          add r13.xyw, r8.xyxz, r22.xyxz
          mad r13.xyw, r11.xyxz, r7.zzzz, r13.xyxw
          dp3 r7.w, r13.xywx, r13.xywx
          sqrt r7.w, r7.w
          div r7.z, r7.z, r7.w
          add r7.z, r7.z, r7.z
          sqrt r7.z, r7.z
          add r7.z, r7.z, l(4.155200)
          mov r21.y, r23.z
          mov r21.z, r24.x
          dp3 r33.x, r13.xywx, r21.xyzx
          mov r22.xy, r23.xwxx
          mov r22.z, r24.w
          dp3 r33.y, r13.xywx, r22.xyzx
          mov r24.x, r23.y
          dp3 r33.z, r13.xywx, r24.xyzx
          ubfe r7.w, l(9), l(16), r22.w
          utof r33.w, r7.w
          sample_l_indexable(texturecubearray)(float,float,float,float) r13.xyw, r33.xyzw, t8.xywz, s2, r7.z
          dp3 r23.x, r8.xyzx, r21.xyzx
          dp3 r23.y, r8.xyzx, r22.xyzx
          dp3 r23.z, r8.xyzx, r24.xyzx
          mad_sat r8.xyz, r23.xyzx, r25.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
          mov r26.z, r27.x
          mad r8.xyz, r8.xyzx, r26.xyzx, r27.yzwy
          dp3 r33.x, r2.xyzx, r21.xyzx
          dp3 r33.y, r2.xyzx, r22.xyzx
          dp3 r33.z, r2.xyzx, r24.xyzx
          lt r21.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r33.xyzx
          movc r10.z, r21.x, l(0), l(0.500000)
          add r22.xyz, r8.xyzx, r10.xyzx
          sample_l_indexable(texture3d)(float,float,float,float) r22.xyz, r22.xyzx, t17.xyzw, s4, l(0.000000)
          mul r23.xyz, r33.xyzx, r33.xyzx
          mul r23.xyz, r6.wwww, r23.xyzx
          movc r12.z, r21.y, l(0), l(0.500000)
          add r21.xyw, r8.xyxz, r12.xyxz
          sample_l_indexable(texture3d)(float,float,float,float) r21.xyw, r21.xywx, t18.xywz, s4, l(0.000000)
          mul r21.xyw, r23.yyyy, r21.xyxw
          mad r21.xyw, r22.xyxz, r23.xxxx, r21.xyxw
          movc r14.z, r21.z, l(0), l(0.500000)
          add r8.xyz, r8.xyzx, r14.xyzx
          sample_l_indexable(texture3d)(float,float,float,float) r8.xyz, r8.xyzx, t19.xyzw, s4, l(0.000000)
          mad r8.xyz, r8.xyzx, r23.zzzz, r21.xywx
          sample_l_indexable(texturecubearray)(float,float,float,float) r21.xyz, r33.xyzw, t8.xyzw, s2, l(6.000000)
          mul r22.xyz, r8.xyzx, r21.xyzx
          dp3 r7.z, r22.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r19.xyz, r8.xyzx, r21.xyzx, r19.xyzx
          mul r7.w, r7.z, l(1.268160)
          mul r8.xyz, r6.wwww, r13.xywx
          dp3 r6.w, r8.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r6.w, r7.z, l(1.268160), r6.w
          div r6.w, r7.w, r6.w
          mov r21.x, r19.w
          mov r21.yz, r20.xxyx
          mad r20.xyw, r8.yzyx, r6.wwww, r21.yzyx
          mov r19.w, r20.w
        endif 
      endif 
    endif 
  endloop 
  mov r15.xyzw, r19.xyzw
  mov r16.yzw, r20.xxyz
  iadd r4.z, r4.z, l(32)
endloop 
lt r4.x, r16.w, l(1.000000)
if_nz r4.x
  mov r4.xy, l(0,0,0,0)
  mov r7.w, l(0)
  mov r8.yz, l(0,0,1.000000,0)
  mov r9.xy, l(0,0,0,0)
  mov r5.x, l(1.000000)
  mov r10.xy, l(0,0,0,0)
  mov r12.xy, l(0,0,0,0)
  mov r13.x, r15.w
  mov r13.yzw, r16.yyzw
  mov r14.xyz, r15.xyzx
  mov r4.w, r16.w
  mov r6.w, l(0)
  loop 
    uge r8.w, r6.w, r1.y
    breakc_nz r8.w
    ushr r4.z, r6.w, l(5)
    iadd r7.xyz, r4.xyzx, r18.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r4.z, r7.xyzw, t7.yzxw
    ieq r7.x, r1.z, r6.w
    ubfe r7.y, r1.w, l(0), r4.z
    movc r4.z, r7.x, r7.y, r4.z
    iadd r7.x, r6.w, cb2[0].x
    mov r19.xyzw, r13.xyzw
    mov r20.xyz, r14.xyzx
    mov r7.y, r4.w
    mov r7.z, r4.z
    loop 
      breakc_z r7.z
      firstbit_lo r8.w, r7.z
      ishl r9.w, l(1), r8.w
      and r10.w, r7.z, r9.w
      if_nz r10.w
        xor r7.z, r7.z, r9.w
        iadd r9.w, r7.x, r8.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r21.xyzw, r9.w, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r22.xy, r9.w, l(16), t11.xyxx
        add r21.xyz, r21.xyzx, -v6.xyzx
        mov r22.z, r21.w
        lt r21.xyz, |r21.xyzx|, r22.zxyz
        and r9.w, r21.y, r21.x
        and r9.w, r21.z, r9.w
        if_nz r9.w
          iadd r8.w, r6.w, r8.w
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r21.xyzw, r8.w, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r17.xy, r8.w, l(96), t15.xyxx
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r22.xyzw, r8.w, l(116), t15.zwxy
          add r23.xyz, -r21.yzwy, v6.xyzx
          and r9.w, r22.w, l(0x0000ffff)
          ubfe r10.w, l(6), l(25), r22.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r24.xyzw, r9.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r25.xyzw, r9.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r26.xyzw, r9.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r9.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r9.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r38.xyzw, r9.w, l(80), t16.xyzw
          dp3 r12.w, r24.xyzx, r23.xyzx
          add_sat r12.w, r24.w, r12.w
          dp3 r14.w, r25.xyzx, r23.xyzx
          add_sat r14.w, r25.w, r14.w
          mul r12.w, r12.w, r14.w
          dp3 r14.w, r26.xyzx, r23.xyzx
          add_sat r14.w, r26.w, r14.w
          mul r12.w, r12.w, r14.w
          dp3 r14.w, r27.xyzx, r23.xyzx
          add_sat r14.w, r27.w, r14.w
          mul r12.w, r12.w, r14.w
          dp3 r14.w, r33.xyzx, r23.xyzx
          add_sat r14.w, r33.w, r14.w
          mul r12.w, r12.w, r14.w
          dp3 r14.w, r38.xyzx, r23.xyzx
          add_sat r14.w, r38.w, r14.w
          mul r8.x, r12.w, r14.w
          and r12.w, r17.x, l(1)
          movc r24.xy, r12.wwww, r8.xyxx, r8.zxzz
          mov r8.x, r17.x
          mov r25.xy, r24.xyxx
          mov r12.w, l(1)
          loop 
            ige r14.w, r12.w, r10.w
            breakc_nz r14.w
            iadd r14.w, r9.w, r12.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r26.xyzw, r14.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r14.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r14.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r38.xyzw, r14.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r39.xyzw, r14.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r40.xyzw, r14.w, l(80), t16.xyzw
            dp3 r14.w, r26.xyzx, r23.xyzx
            add_sat r14.w, r26.w, r14.w
            mul r14.w, r14.w, r25.x
            dp3 r18.w, r27.xyzx, r23.xyzx
            add_sat r18.w, r27.w, r18.w
            mul r14.w, r14.w, r18.w
            dp3 r18.w, r33.xyzx, r23.xyzx
            add_sat r18.w, r33.w, r18.w
            mul r14.w, r14.w, r18.w
            dp3 r18.w, r38.xyzx, r23.xyzx
            add_sat r18.w, r38.w, r18.w
            mul r14.w, r14.w, r18.w
            dp3 r18.w, r39.xyzx, r23.xyzx
            add_sat r18.w, r39.w, r18.w
            mul r14.w, r14.w, r18.w
            dp3 r18.w, r40.xyzx, r23.xyzx
            add_sat r18.w, r40.w, r18.w
            mul r25.x, r14.w, r18.w
            ushr r20.w, r8.x, l(2)
            ubfe r21.w, l(1), l(2), r8.x
            and r23.w, r20.w, l(2)
            max r24.z, r25.x, r25.y
            mad r14.w, -r14.w, r18.w, l(1.000000)
            mul r14.w, r14.w, r25.y
            movc r5.y, r23.w, r14.w, r24.z
            movc r25.xy, r21.wwww, r25.xyxx, r5.xyxx
            iadd r12.w, r12.w, l(1)
            mov r8.x, r20.w
          endloop 
          add_sat r5.y, -r7.y, r25.y
          mul r8.x, r17.y, r5.y
          lt r9.w, l(0.000000), r8.x
          if_nz r9.w
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r8.w, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r8.w, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r8.w, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r8.w, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r8.w, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xyzw, r8.w, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r40.xyzw, r8.w, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r41.xyzw, r8.w, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r42.xyzw, r8.w, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r43.xyzw, r8.w, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r44.xy, r8.w, l(212), t15.xyxx
            mad r19.w, r5.y, r17.y, r19.w
            mul r5.y, r22.z, r8.x
            mov r22.z, r39.z
            dp3 r8.x, r11.xyzx, r22.xyzx
            dp3 r8.w, r23.xyzx, r22.xyzx
            add r8.w, -r39.w, r8.w
            ge r9.w, r8.w, l(0.000000)
            max r8.w, |r8.w|, l(100.000000)
            movc r8.w, r9.w, r8.w, -r8.w
            max r8.x, -r8.x, l(0.00000010)
            div r8.x, r8.w, r8.x
            min r8.x, |r8.x|, l(131072.000000)
            mov r39.z, r40.z
            dp3 r8.w, r11.xyzx, r39.xyzx
            dp3 r9.w, r23.xyzx, r39.xyzx
            add r9.w, -r40.w, r9.w
            ge r10.w, r9.w, l(0.000000)
            max r9.w, |r9.w|, l(100.000000)
            movc r9.w, r10.w, r9.w, -r9.w
            max r8.w, -r8.w, l(0.00000010)
            div r8.w, r9.w, r8.w
            min r8.x, |r8.w|, r8.x
            mov r40.z, r41.z
            dp3 r8.w, r11.xyzx, r40.xyzx
            dp3 r9.w, r23.xyzx, r40.xyzx
            add r9.w, -r41.w, r9.w
            ge r10.w, r9.w, l(0.000000)
            max r9.w, |r9.w|, l(100.000000)
            movc r9.w, r10.w, r9.w, -r9.w
            max r8.w, -r8.w, l(0.00000010)
            div r8.w, r9.w, r8.w
            min r8.x, |r8.w|, r8.x
            mov r41.z, r42.z
            dp3 r8.w, r11.xyzx, r41.xyzx
            dp3 r9.w, r23.xyzx, r41.xyzx
            add r9.w, -r42.w, r9.w
            ge r10.w, r9.w, l(0.000000)
            max r9.w, |r9.w|, l(100.000000)
            movc r9.w, r10.w, r9.w, -r9.w
            max r8.w, -r8.w, l(0.00000010)
            div r8.w, r9.w, r8.w
            min r8.x, |r8.w|, r8.x
            mov r42.z, r43.x
            dp3 r8.w, r11.xyzx, r42.xyzx
            dp3 r9.w, r23.xyzx, r42.xyzx
            add r9.w, -r43.y, r9.w
            ge r10.w, r9.w, l(0.000000)
            max r9.w, |r9.w|, l(100.000000)
            movc r9.w, r10.w, r9.w, -r9.w
            max r8.w, -r8.w, l(0.00000010)
            div r8.w, r9.w, r8.w
            min r8.x, |r8.w|, r8.x
            mov r44.zw, r43.zzzw
            dp3 r8.w, r11.zxyz, r44.xzwx
            dp3 r9.w, r23.zxyz, r44.xzwx
            add r9.w, -r44.y, r9.w
            ge r10.w, r9.w, l(0.000000)
            max r9.w, |r9.w|, l(100.000000)
            movc r9.w, r10.w, r9.w, -r9.w
            max r8.w, -r8.w, l(0.00000010)
            div r8.w, r9.w, r8.w
            min r8.x, |r8.w|, r8.x
            mov r22.x, r27.w
            mov r22.yz, r33.zzwz
            add r22.xyz, r23.xyzx, r22.xyzx
            mad r22.xyz, r11.xyzx, r8.xxxx, r22.xyzx
            dp3 r8.w, r22.xyzx, r22.xyzx
            sqrt r8.w, r8.w
            div r8.x, r8.x, r8.w
            add r8.x, r8.x, r8.x
            sqrt r8.x, r8.x
            add r8.x, r8.x, l(4.155200)
            mov r21.y, r24.z
            mov r21.z, r26.x
            dp3 r39.x, r22.xyzx, r21.xyzx
            mov r40.xy, r24.xwxx
            mov r40.z, r26.w
            dp3 r39.y, r22.xyzx, r40.xyzx
            mov r26.x, r24.y
            dp3 r39.z, r22.xyzx, r26.xyzx
            ubfe r8.w, l(9), l(16), r22.w
            utof r39.w, r8.w
            sample_l_indexable(texturecubearray)(float,float,float,float) r22.xyz, r39.xyzw, t8.xyzw, s2, r8.x
            dp3 r24.x, r23.xyzx, r21.xyzx
            dp3 r24.y, r23.xyzx, r40.xyzx
            dp3 r24.z, r23.xyzx, r26.xyzx
            mad_sat r23.xyz, r24.xyzx, r27.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
            mov r33.z, r38.x
            mad r23.xyz, r23.xyzx, r33.xyzx, r38.yzwy
            dp3 r39.x, r2.xyzx, r21.xyzx
            dp3 r39.y, r2.xyzx, r40.xyzx
            dp3 r39.z, r2.xyzx, r26.xyzx
            lt r21.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r39.xyzx
            movc r9.z, r21.x, l(0), l(0.500000)
            add r24.xyz, r9.xyzx, r23.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r24.xyz, r24.xyzx, t17.xyzw, s4, l(0.000000)
            mul r25.xzw, r39.xxyz, r39.xxyz
            mul r25.xzw, r5.yyyy, r25.xxzw
            movc r10.z, r21.y, l(0), l(0.500000)
            add r21.xyw, r10.xyxz, r23.xyxz
            sample_l_indexable(texture3d)(float,float,float,float) r21.xyw, r21.xywx, t18.xywz, s4, l(0.000000)
            mul r21.xyw, r25.zzzz, r21.xyxw
            mad r21.xyw, r24.xyxz, r25.xxxx, r21.xyxw
            movc r12.z, r21.z, l(0), l(0.500000)
            add r23.xyz, r12.xyzx, r23.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r23.xyz, r23.xyzx, t19.xyzw, s4, l(0.000000)
            mad r21.xyz, r23.xyzx, r25.wwww, r21.xywx
            sample_l_indexable(texturecubearray)(float,float,float,float) r23.xyz, r39.xyzw, t8.xyzw, s2, l(6.000000)
            mul r24.xyz, r21.xyzx, r23.xyzx
            dp3 r8.x, r24.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r20.xyz, r21.xyzx, r23.xyzx, r20.xyzx
            mul r8.w, r8.x, l(1.268160)
            mul r21.xyz, r5.yyyy, r22.xyzx
            dp3 r5.y, r21.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r5.y, r8.x, l(1.268160), r5.y
            div r5.y, r8.w, r5.y
            mad r19.xyz, r21.xyzx, r5.yyyy, r19.xyzx
          endif 
        endif 
      endif 
    endloop 
    mov r13.xyzw, r19.xyzw
    mov r14.xyz, r20.xyzx
    iadd r6.w, r6.w, l(32)
  endloop 
  mov r16.xyzw, r13.zxyw
  mov r15.xyz, r14.xyzx
  mov r16.xyzw, r16.yzxw
else 
  mov r16.x, r15.w
endif 
max r1.y, r16.w, l(1.000000)
rcp r1.y, r1.y
mov_sat r16.w, r16.w
mul r4.xyz, r1.yyyy, r15.xyzx
mul r7.xyz, r1.yyyy, r16.xyzx
lt r1.z, r16.w, l(0.990000)
if_nz r1.z
  add r1.z, -r16.w, l(1.000000)
  mul r1.z, r1.z, cb2[19].x
  add r8.xyz, v6.xyzx, -cb2[35].xyzx
  mul r9.x, r8.x, cb2[35].w
  mul r9.yz, r8.yyzy, cb2[36].xxyx
  add_sat r8.xyz, r9.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mul r9.xy, r8.xyxx, cb2[36].zwzz
  mul r9.z, r8.z, cb2[37].x
  add r8.xyz, r9.xyzx, cb2[37].yzwy
  lt r9.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r2.xyzx
  movc r9.xyz, r9.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
  mov r9.w, l(0)
  add r10.xyz, r8.xyzx, r9.wwxw
  sample_l_indexable(texture3d)(float,float,float,float) r10.xyz, r10.xyzx, t17.xyzw, s4, l(0.000000)
  mul r12.xyz, r2.xyzx, r2.xyzx
  mul r12.xyz, r1.zzzz, r12.xyzx
  add r13.xyz, r8.xyzx, r9.wwyw
  sample_l_indexable(texture3d)(float,float,float,float) r13.xyz, r13.xyzx, t18.xyzw, s4, l(0.000000)
  mul r13.xyz, r12.yyyy, r13.xyzx
  mad r10.xyz, r10.xyzx, r12.xxxx, r13.xyzx
  add r8.xyz, r8.xyzx, r9.wwzw
  sample_l_indexable(texture3d)(float,float,float,float) r8.xyz, r8.xyzx, t19.xyzw, s4, l(0.000000)
  mad r8.xyz, r8.xyzx, r12.zzzz, r10.xyzx
  mov r2.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r2.xyz, r2.xyzw, t8.xyzw, s2, l(6.000000)
  mul r2.xyz, r2.xyzx, r8.xyzx
  dp3 r1.z, r2.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  mad r4.xyz, r15.xyzx, r1.yyyy, r2.xyzx
  mov r11.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r2.xyz, r11.xyzw, t8.xyzw, s2, l(5.000000)
  mad r7.xyz, r2.xyzx, r1.zzzz, r7.xyzx
endif 
dp3 r1.y, r3.xyzx, r6.xyzx
if_nz cb0[12].w
  eq r2.xyz, cb0[13].yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  and r1.z, r2.y, r2.x
  mul r2.xy, cb0[13].yzyy, l(0.01745329, 0.01745329, 0.000000, 0.000000)
  sincos null, r2.xy, r2.xyxx
  mul r2.yw, r2.xxxy, r2.xxxy
  mad r1.w, r2.x, r2.x, -r2.w
  div r3.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  mad r3.y, -r2.y, r3.x, l(1.000000)
  movc r1.zw, r1.zzzz, l(0,0,0,1.000000), r3.xxxy
  mul r2.x, |r1.y|, |r1.y|
  mad_sat r1.z, r2.x, r1.z, r1.w
  mul r1.z, r0.x, r1.z
  ftoi r6.xy, v0.xyxx
  mov r6.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r1.w, r6.xyzw, t21.yzwx
  ge r2.x, r1.w, l(0.984375)
  mul r2.y, r1.w, l(1.01587307)
  mad r1.w, r1.w, l(64.000000), l(-63.000000)
  movc r1.w, r2.x, r1.w, r2.y
  max r1.w, r1.w, l(0.00000001)
  rcp r1.w, r1.w
  div r2.x, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[13].x
  movc r2.x, r2.z, l(60000.000000), r2.x
  add r1.w, -r3.w, r1.w
  mul_sat r1.w, r2.x, r1.w
  mul r0.x, r1.w, r1.z
endif 
ld_structured_indexable(structured_buffer, stride=24)(mixed,mixed,mixed,mixed) r1.z, v2.x, l(4), t4.xxxx
ld_structured_indexable(structured_buffer, stride=384)(mixed,mixed,mixed,mixed) r1.z, r1.z, l(0), t0.xxxx
sample_indexable(texture2d)(float,float,float,float) r1.w, v1.yzyy, t29.yzwx, s7
mad_sat r1.z, r1.z, l(0.998000), l(0.001000)
add r2.x, -r1.z, l(1.000000)
mov_sat r2.y, cb0[14].x
log r1.z, r1.z
mul r1.z, r1.z, r2.y
exp r1.z, r1.z
mov r3.x, -r1.z
log r1.z, r2.x
mul r1.z, r1.z, r2.y
exp r3.y, r1.z
mad_sat r2.xy, cb0[13].wwww, r3.xyxx, r2.xxxx
add r1.z, r1.w, -r2.x
add r1.w, -r2.x, r2.y
div_sat r1.z, r1.z, r1.w
mul r0.x, r0.x, r1.z
lt r1.z, r0.x, l(0.500000)
discard_nz r1.z
sample_indexable(texture2d)(float,float,float,float) r1.z, v1.yzyy, t26.yzxw, s6
mov r1.w, x2[0].x
add r1.w, -r5.z, r1.w
lt r1.w, l(2.400000), |r1.w|
mad r1.x, -r1.x, l(0.500000), l(1.000000)
movc r1.x, r1.w, l(0.500000), r1.x
mov r1.w, x2[1].x
add r1.w, -r5.z, r1.w
lt r1.w, l(2.400000), |r1.w|
mov r2.x, x0[1].x
mul r2.x, r2.x, l(0.500000)
movc r1.w, r1.w, l(-0.500000), -r2.x
add r1.x, r1.w, r1.x
add_sat r1.x, -r1.x, l(1.000000)
mad r1.w, r1.x, l(-2.000000), l(3.000000)
mul r1.x, r1.x, r1.x
mul r1.x, r1.x, r1.w
min r1.x, r1.x, r17.w
mul r1.x, r1.x, r17.z
mul r2.xyz, r32.xyzx, r1.xxxx
mad r3.xyz, r2.xyzx, r34.xyzx, r28.xyzx
mad r5.xyz, r2.xyzx, r35.xyzx, r29.xyzx
mad r6.xyz, r2.xyzx, r36.xyzx, r31.xyzx
mad r2.xyz, r2.xyzx, r37.xyzx, r30.xyzx
mad r3.xyz, r4.xyzx, r1.zzzz, r3.xyzx
mad r4.xyz, r4.xyzx, r1.zzzz, r5.xyzx
mul r5.x, r5.w, l(0.984375)
mov r5.y, l(0)
add r1.xw, r5.xxxy, l(0.00781250, 0.000000, 0.000000, 0.00781250)
sample_l_indexable(texture2d)(float,float,float,float) r1.xw, r1.xwxx, t5.xzwy, s2, l(0.000000)
mul r5.xyz, r1.zzzz, r7.xyzx
mad r2.xyz, r5.xyzx, r1.xxxx, r2.xyzx
mad r1.xzw, r5.xxyz, r1.wwww, r6.xxyz
add r1.y, -|r1.y|, l(1.000000)
mul r1.y, r1.y, r1.y
mad r1.y, r1.y, l(0.600000), l(0.400000)
min r1.y, r1.y, l(1.000000)
mul r5.xyz, r1.yyyy, cb0[12].xyzx
mad_sat r6.xyz, r0.yzwy, l(0.020000, 0.020000, 0.020000, 0.000000), l(0.040000, 0.040000, 0.040000, 0.000000)
mul r7.xyz, r6.xyzx, cb0[11].xyzx
mul r5.xyz, r0.yzwy, r5.xyzx
mul r4.xyz, r4.xyzx, r5.xyzx
mad r0.yzw, r3.xxyz, r0.yyzw, r4.xxyz
mad r3.xyz, -r6.xyzx, cb0[11].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r2.xyz, r2.xyzx, r3.xyzx
mad r1.xyz, r1.xzwx, r7.xyzx, r2.xyzx
add r0.yzw, r0.yyzw, r1.xxyz
lt r1.x, l(0.000000), cb2[9].z
if_nz r1.x
  dp3 r1.x, v6.xyzx, v6.xyzx
  rsq r1.y, r1.x
  mul r1.yzw, r1.yyyy, v6.xxyz
  sqrt r1.x, r1.x
  lt r2.x, l(0.000000), cb2[13].w
  if_nz r2.x
    mad r2.xy, r1.xxxx, cb2[15].xyxx, cb2[14].zwzz
    mul r2.xy, r2.xyxx, cb2[16].xyxx
    lt r2.z, l(0.010000), |v6.z|
    mul r3.xy, v6.zzzz, cb2[15].zwzz
    mul r3.zw, r3.xxxy, l(0.000000, 0.000000, -1.442695, -1.442695)
    exp r3.zw, r3.zzzw
    add r3.zw, -r3.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    div r3.xy, r3.zwzz, r3.xyxx
    mul r3.xy, r2.xyxx, r3.xyxx
    movc r2.xy, r2.zzzz, r3.xyxx, r2.xyxx
    mul r2.xzw, r2.xxxx, cb2[12].xxyz
    exp r2.xzw, r2.xxzw
    mul r3.xyz, r2.yyyy, cb2[12].xyzx
    exp r3.xyz, r3.xyzx
    add r3.xyz, -r2.xzwx, r3.xyzx
    mad r2.xyz, cb2[13].wwww, r3.xyzx, r2.xzwx
  else 
    mad r2.w, r1.x, cb2[15].x, cb2[14].z
    mul r2.w, r2.w, cb2[16].x
    lt r3.x, l(0.010000), |v6.z|
    mul r3.y, v6.z, cb2[15].z
    mul r3.z, r3.y, l(-1.442695)
    exp r3.z, r3.z
    add r3.z, -r3.z, l(1.000000)
    div r3.y, r3.z, r3.y
    mul r3.y, r2.w, r3.y
    movc r2.w, r3.x, r3.y, r2.w
    mul r3.xyz, r2.wwww, cb2[12].xyzx
    exp r2.xyz, r3.xyzx
  endif 
  mad r2.xyz, r2.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r2.xyz, r2.xyzx, -cb2[9].zzzz
  dp3 r1.y, cb2[7].yzwy, -r1.yzwy
  mad r1.z, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r1.w, cb2[8].w, -r1.y, l(1.000000)
  mul r1.w, r1.w, r1.w
  mul r1.w, r1.w, l(12.566371)
  div r1.z, r1.z, r1.w
  add r1.x, r1.x, -cb2[10].w
  mul_sat r1.x, r1.x, cb2[11].w
  mul r1.x, r1.x, r1.z
  mov_sat r1.y, r1.y
  mad r1.y, r1.y, r1.y, l(1.000000)
  mad r1.y, r1.y, l(0.05968310), l(-1.000000)
  mad r1.y, cb2[8].z, r1.y, l(1.000000)
  mul r1.xzw, r1.xxxx, cb2[11].xxyz
  mad r1.xyz, r1.yyyy, cb2[10].xyzx, r1.xzwx
  mul r1.xyz, r1.xyzx, cb2[9].wwww
  add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r1.xyz, r1.xyzx, r3.xyzx
  mad r1.xyz, r0.yzwy, r2.xyzx, r1.xyzx
else 
  mul r1.w, v6.z, cb2[6].x
  mad r2.x, cb2[6].x, v6.z, cb2[5].x
  lt r2.y, |r1.w|, l(0.000100)
  min r2.z, r2.x, l(64.000000)
  mul r2.z, r2.z, l(1.442695)
  exp r2.z, r2.z
  mov_sat r2.w, cb2[6].z
  lt r3.x, r2.x, l(0.000000)
  add r2.x, r2.x, l(1.000000)
  movc r2.x, r3.x, r2.z, r2.x
  add r2.x, r2.x, -cb2[6].z
  movc r1.w, r2.y, l(1.000000), r1.w
  div r1.w, r2.x, r1.w
  movc r1.w, r2.y, r2.w, r1.w
  mul r1.w, r1.w, cb2[5].z
  dp3 r2.x, v6.xyzx, v6.xyzx
  sqrt r2.y, r2.x
  mad r1.w, r1.w, r2.y, cb2[5].w
  exp r1.w, r1.w
  min r1.w, r1.w, l(1.000000)
  add r1.w, -r1.w, l(1.000000)
  rsq r2.x, r2.x
  mul r2.xyz, r2.xxxx, v6.xyzx
  dp3 r2.x, cb2[7].yzwy, r2.xyzx
  mad_sat r2.x, cb2[8].y, r2.x, cb2[8].x
  add r3.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r2.xyzw, r2.xxxx, r3.xyzw, cb2[4].xyzw
  mul r1.w, r1.w, r2.w
  add r2.xyz, -r0.yzwy, r2.xyzx
  mad r1.xyz, r1.wwww, r2.xyzx, r0.yzwy
endif 
mul r0.yzw, r1.xxyz, cb1[85].yyyy
ge r1.xyz, r0.yzwy, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.yzw, r0.yyzw, r1.xxyz
min o0.xyz, r0.yzwy, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
mov o0.w, r0.x
ret 
// Approximately 2337 instruction slots used
