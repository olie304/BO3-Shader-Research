//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:24:16 2021
//
//
// Buffer Definitions: 
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16 [unused]
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16
//   float4 gameTick;                   // Offset: 1120 Size:    16 [unused]
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16 [unused]
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// bilinearWrapSampler               sampler      NA          NA             s0      1 
// zebraWarningMap                   texture  float4          2d             t0      1 
// gbufferTextureAlbedo                  UAV    uint          2d             u0      1 
// gbufferTextureNormalGloss             UAV    uint          2d             u1      1 
// gbufferTextureReflectanceOcclusion        UAV    uint          2d             u2      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB1[70], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_uav_typed_texture2d (uint,uint,uint,uint) u0
dcl_uav_typed_texture2d (uint,uint,uint,uint) u1
dcl_uav_typed_texture2d (uint,uint,uint,uint) u2
dcl_input vThreadID.xy
dcl_temps 11
dcl_thread_group 8, 8, 1
ftou r0.xy, cb1[44].xyxx
ult r0.xy, r0.xyxx, vThreadID.xyxx
or r0.x, r0.y, r0.x
if_nz r0.x
  ret 
endif 
ld_uav_typed_indexable(texture2d)(uint,uint,uint,uint) r0.x, vThreadID.xyyy, u0.xyzw
ld_uav_typed_indexable(texture2d)(uint,uint,uint,uint) r0.y, vThreadID.xyyy, u1.yxzw
ubfe r0.z, l(10), l(20), r0.y
utof r0.z, r0.z
ld_uav_typed_indexable(texture2d)(uint,uint,uint,uint) r0.w, vThreadID.xyyy, u2.yzwx
iadd r1.xyzw, vThreadID.xyxy, l(-1, 0, 0, -1)
ld_uav_typed_indexable(texture2d)(uint,uint,uint,uint) r1.x, r1.xyyy, u2.xyzw
ld_uav_typed_indexable(texture2d)(uint,uint,uint,uint) r1.y, r1.zwww, u2.yxzw
iadd r2.xyzw, vThreadID.xyxy, l(1, 0, 0, 1)
ld_uav_typed_indexable(texture2d)(uint,uint,uint,uint) r1.z, r2.xyyy, u2.yzxw
ld_uav_typed_indexable(texture2d)(uint,uint,uint,uint) r1.w, r2.zwww, u2.yzwx
ge r2.x, r0.z, l(511.500000)
lt r2.y, l(0.000000), r0.z
and r2.y, r2.y, l(1)
movc r2.y, r2.x, l(2), r2.y
if_z r2.y
  ret 
endif 
and r2.z, r0.x, l(255)
utof r3.x, r2.z
ubfe r2.zw, l(0, 0, 8, 8), l(0, 0, 8, 16), r0.xxxx
utof r3.yz, r2.zzwz
mul r4.xyz, r3.xyzx, l(0.00392157, 0.00392157, 0.00392157, 0.000000)
ge r4.xyz, l(0.040450, 0.040450, 0.040450, 0.000000), r4.xyzx
mul r5.xyz, r3.xyzx, l(0.00030353, 0.00030353, 0.00030353, 0.000000)
mad r3.xyz, r3.xyzx, l(0.00392157, 0.00392157, 0.00392157, 0.000000), l(0.055000, 0.055000, 0.055000, 0.000000)
mul r3.xyz, r3.xyzx, l(0.94786733, 0.94786733, 0.94786733, 0.000000)
log r3.xyz, r3.xyzx
mul r3.xyz, r3.xyzx, l(2.400000, 2.400000, 2.400000, 0.000000)
exp r3.xyz, r3.xyzx
movc r3.xyz, r4.xyzx, r5.xyzx, r3.xyzx
and r0.x, r0.y, l(1023)
utof r4.x, r0.x
ubfe r0.x, l(10), l(10), r0.y
utof r4.y, r0.x
ushr r0.x, r0.y, l(30)
and r0.y, r0.w, l(1023)
utof r5.x, r0.y
ubfe r2.zw, l(0, 0, 10, 10), l(0, 0, 10, 20), r0.wwww
utof r5.yz, r2.zzwz
mul_sat r6.y, r5.z, l(0.00097752)
ushr r0.y, r0.w, l(30)
and r0.w, r1.x, l(1023)
utof r7.x, r0.w
ubfe r0.w, l(10), l(10), r1.x
utof r7.y, r0.w
ushr r0.w, r1.x, l(30)
utof r0.xyw, r0.xyxw
and r1.x, r1.y, l(1023)
utof r8.x, r1.x
ubfe r1.x, l(10), l(10), r1.y
utof r8.y, r1.x
ushr r1.x, r1.y, l(30)
and r1.y, r1.z, l(1023)
utof r9.x, r1.y
ubfe r1.y, l(10), l(10), r1.z
utof r9.y, r1.y
ushr r1.y, r1.z, l(30)
and r1.z, r1.w, l(1023)
utof r10.x, r1.z
ubfe r1.z, l(10), l(10), r1.w
utof r10.y, r1.z
ushr r1.z, r1.w, l(30)
utof r1.xyz, r1.xyzx
add r0.xyw, r0.xyxw, l(0.500000, 0.500000, 0.000000, 0.500000)
mad r5.xy, r5.xyxx, l(0.00097752, 0.00195503, 0.000000, 0.000000), l(0.000000, -1.000000, 0.000000, 0.000000)
ftou r0.xyw, r0.xyxw
ieq r0.w, r0.y, r0.w
mad r2.zw, r7.xxxy, l(0.000000, 0.000000, 0.00097752, 0.00195503), l(0.000000, 0.000000, 0.000000, -1.000000)
movc r2.zw, r0.wwww, r2.zzzw, l(0,0,-1.000000,0)
add r0.w, r1.x, l(0.500000)
ftou r0.w, r0.w
ieq r0.w, r0.y, r0.w
mad r1.xw, r8.xxxy, l(0.00097752, 0.000000, 0.000000, 0.00195503), l(0.000000, 0.000000, 0.000000, -1.000000)
movc r1.xw, r0.wwww, r1.xxxw, l(-1.000000,0,0,0)
add r0.w, r1.y, l(0.500000)
ftou r0.w, r0.w
ieq r0.w, r0.y, r0.w
mad r4.zw, r9.xxxy, l(0.000000, 0.000000, 0.00097752, 0.00195503), l(0.000000, 0.000000, 0.000000, -1.000000)
movc r4.zw, r0.wwww, r4.zzzw, l(0,0,-1.000000,0)
add r0.w, r1.z, l(0.500000)
ftou r0.w, r0.w
ieq r0.y, r0.y, r0.w
mad r1.yz, r10.xxyx, l(0.000000, 0.00097752, 0.00195503, 0.000000), l(0.000000, 0.000000, -1.000000, 0.000000)
movc r0.yw, r0.yyyy, r1.yyyz, l(0,-1.000000,0,0)
mov r7.x, r2.z
mov r7.y, r1.x
mov r7.z, r4.z
mov r7.w, r0.y
add r7.xyzw, -r5.xxxx, r7.xyzw
ge r7.xyzw, |r7.xyzw|, l(0.00902149, 0.00902149, 0.00902149, 0.00902149)
movc r7.xyzw, r7.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
add r0.y, r7.y, r7.x
add r0.y, r7.z, r0.y
add r0.y, r7.w, r0.y
mul r1.x, r1.w, r7.y
mad r1.x, r7.x, r2.w, r1.x
mad r1.x, r7.z, r4.w, r1.x
mad r0.w, r7.w, r0.w, r1.x
div r5.z, r0.w, r0.y
ge r0.y, l(0.000000), r0.y
movc r5.yz, r0.yyyy, l(0,0,0,0), r5.yyzy
and r0.yw, vThreadID.xxxy, l(0, 1, 0, 1)
ieq r0.y, r0.w, r0.y
movc r1.xyz, r0.yyyy, r5.xyzx, r5.xzyx
mad r0.w, -r1.z, l(0.500000), r1.x
add r5.y, r0.w, r1.z
mad r5.z, -r1.y, l(0.500000), r0.w
add r5.x, r1.y, r5.z
mad r1.xy, r4.xyxx, l(0.00195503, 0.00195503, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r1.xy, r1.xyxx, l(0.850000, 0.850000, 0.000000, 0.000000)
dp2 r0.w, r1.xyxx, r1.xyxx
add r4.zw, -r0.wwww, l(0.000000, 0.000000, 2.000000, 1.000000)
sqrt r0.w, r4.z
mul r4.xy, r0.wwww, r1.xyxx
and r1.xyzw, r0.xxxx, l(2, 1, 2, 1)
movc r1.xyzw, r1.xzwy, l(1,-1.000000,-1.000000,1), l(0,1.000000,1.000000,0)
xor r0.x, r1.w, r1.x
movc r1.w, r0.x, l(-1.000000), l(1.000000)
mul r7.xyz, r1.yzwy, l(-1.000000, 0.000000, 1.000000, 0.000000)
mul r8.xyz, r1.yzwy, l(1.000000, -2.000000, 1.000000, 0.000000)
mul r4.xyz, r4.xywx, l(0.40824831, 0.70710677, 0.57735026, 0.000000)
mul r7.xyz, r4.yyyy, r7.xyzx
mad r4.xyw, r8.xyxz, r4.xxxx, r7.xyxz
mad r1.yzw, r1.yyzw, r4.zzzz, r4.xxyw
movc r0.xw, r2.xxxx, l(0.500000,0,0,-0.500000), l(0.00146628,0,0,-0.00146628)
mad r0.z, r0.z, l(0.00097752), r0.w
mul_sat r0.z, r0.z, l(2.00982332)
dp3 r0.w, r3.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
dp3 r2.x, r5.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
lt r2.z, r0.w, l(0.013000)
ine r2.w, r2.y, l(1)
lt r4.xy, r2.xxxx, l(0.060000, 0.017000, 0.000000, 0.000000)
movc r7.xyz, r4.xxxx, l(0,0,0,0), r5.xyzx
mov r5.w, l(-1)
mov r7.w, r4.x
movc r7.xyzw, r2.wwww, r5.xyzw, r7.xyzw
or r2.w, r2.w, r4.x
movc r4.xzw, r2.wwww, l(1.000000,0,0.150000,0.050000), r3.xxyz
mov r5.w, l(0)
movc r5.xyzw, r2.zzzz, r7.xyzw, r5.xyzw
movc r3.xyz, r2.zzzz, r4.xzwx, r3.xyzx
ieq r2.z, r2.y, l(1)
lt r4.xz, l(0.003000, 0.000000, 0.896000, 0.000000), r0.wwww
lt r0.w, l(0.060000), r2.x
and r0.w, r0.w, r4.x
and r0.w, r0.w, r2.z
movc r3.xyz, r0.wwww, l(1.000000,0.010000,1.000000,0), r3.xyzx
or r0.w, r4.z, r0.w
movc r3.xyz, r4.zzzz, l(0,0.800000,1.000000,0), r3.xyzx
and r2.x, r4.y, r2.z
movc r3.xyz, r2.xxxx, l(1.000000,0,0,0), r3.zyxz
or r0.w, r0.w, r2.x
movc r4.xyzw, r0.wwww, l(0,0,0,-1), r5.xyzw
if_nz r4.w
  utof r2.xz, vThreadID.xxyx
  div r2.xz, r2.xxzx, cb1[44].xxyx
  mul r0.w, cb1[69].w, l(-0.100000)
  mad r2.xz, r2.xxzx, l(16.000000, 0.000000, 16.000000, 0.000000), r0.wwww
  sample_l_indexable(texture2d)(float,float,float,float) r0.w, r2.xzxx, t0.yzwx, s0, l(0.000000)
  mul r3.xyz, r0.wwww, r3.xyzx
endif 
utof r0.w, r2.y
mul_sat r6.x, r0.w, l(0.33333334)
add r0.w, r1.z, r1.y
add r0.w, r1.w, r0.w
mul r2.x, r0.w, l(0.500000)
mad r2.yzw, -r0.wwww, l(0.000000, 0.500000, 0.500000, 0.500000), r1.yyzw
max r0.w, r2.w, r2.z
max r0.w, r0.w, r2.y
max r0.w, r0.w, r2.x
eq r2.x, r0.w, r2.y
mul r5.yzw, r1.yyzw, l(0.000000, 1.000000, -1.000000, -1.000000)
add r2.y, r0.w, l(2.000000)
mov r5.x, l(1)
mov r1.x, l(0)
movc r1.xyzw, r2.xxxx, r5.xyzw, r1.xyzw
movc r0.w, r2.x, r2.y, r0.w
eq r2.x, r0.w, r2.z
mul r5.yzw, r1.yyzw, l(0.000000, -1.000000, 1.000000, -1.000000)
add r2.y, r2.z, l(2.000000)
mov r5.x, l(2)
movc r1.xyzw, r2.xxxx, r5.xyzw, r1.xyzw
movc r0.w, r2.x, r2.y, r0.w
eq r0.w, r0.w, r2.w
mul r2.yzw, r1.yyzw, l(0.000000, -1.000000, -1.000000, 1.000000)
mov r2.x, l(3)
movc r1.xyzw, r0.wwww, r2.xyzw, r1.xyzw
add r0.w, r1.z, r1.y
add r2.z, r1.w, r0.w
add r2.y, -r1.y, r1.w
mad r2.x, -r1.z, l(3.000000), r2.z
mul r1.yzw, r2.xxyz, l(0.000000, 0.40824831, 0.70710677, 0.57735026)
add r0.w, |r1.w|, l(1.000000)
rsq r0.w, r0.w
mul r1.yz, r0.wwww, r1.zzyz
mad_sat r2.zw, r1.yyyz, l(0.000000, 0.000000, 0.58823532, 0.58823532), l(0.000000, 0.000000, 0.500000, 0.500000)
mad_sat r2.y, r0.z, l(0.49755621), r0.x
utof r0.x, r1.x
mul_sat r2.x, r0.x, l(0.33333334)
add r1.y, -r4.z, r4.x
mad r0.x, r1.y, l(0.500000), r4.z
add r1.z, -r0.x, r4.y
mad r1.x, r1.z, l(0.500000), r0.x
movc r0.xy, r0.yyyy, r1.yxyy, r1.zxzz
mad_sat r6.zw, r0.xxxy, l(0.000000, 0.000000, 0.500000, 1.000000), l(0.000000, 0.000000, 0.500000, 0.000000)
mov_sat r3.xyz, r3.xyzx
ge r0.xyz, l(0.00313080, 0.00313080, 0.00313080, 0.000000), r3.xyzx
mul r1.xyz, r3.xyzx, l(12.920000, 12.920000, 12.920000, 0.000000)
log r3.xyz, r3.xyzx
mul r3.xyz, r3.xyzx, l(0.416660, 0.416660, 0.416660, 0.000000)
exp r3.xyz, r3.xyzx
mad r3.xyz, r3.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
movc r0.xyz, r0.xyzx, r1.xyzx, r3.xyzx
mad r0.xyz, r0.xyzx, l(255.000000, 255.000000, 255.000000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
ftou r0.xyz, r0.xyzx
ishl r0.xy, r0.xyxx, l(16, 8, 0, 0)
or r0.x, r0.x, l(0xff000000)
or r0.x, r0.y, r0.x
or r0.x, r0.z, r0.x
store_uav_typed u0.xyzw, vThreadID.xyyy, r0.xxxx
mad r0.xyzw, r2.xyzw, l(3.000000, 1023.000000, 1023.000000, 1023.000000), l(0.500000, 0.500000, 0.500000, 0.500000)
ftou r0.xyzw, r0.xyzw
ishl r0.yz, r0.yyzy, l(0, 20, 10, 0)
imad r0.x, r0.x, l(0x40000000), r0.y
iadd r0.x, r0.x, r0.z
iadd r0.x, r0.x, r0.w
store_uav_typed u1.xyzw, vThreadID.xyyy, r0.xxxx
mad r0.xyzw, r6.xyzw, l(3.000000, 1023.000000, 1023.000000, 1023.000000), l(0.500000, 0.500000, 0.500000, 0.500000)
ftou r0.xyzw, r0.xyzw
ishl r0.yz, r0.yyzy, l(0, 20, 10, 0)
imad r0.x, r0.x, l(0x40000000), r0.y
iadd r0.x, r0.x, r0.z
iadd r0.x, r0.x, r0.w
store_uav_typed u2.xyzw, vThreadID.xyyy, r0.xxxx
ret 
// Approximately 242 instruction slots used
