//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:23:40 2021
//
//
// Buffer Definitions: 
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4
//   uint enableCountDebug;             // Offset:  836 Size:     4
//   uint centerGroupIDx;               // Offset:  840 Size:     4
//   uint centerGroupIDy;               // Offset:  844 Size:     4
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4
//   float drawNumLighstScale;          // Offset:  856 Size:     4
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4 [unused]
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4
//   uint showAO;                       // Offset:  880 Size:     4
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// cbuffer LightingPackCBuffer
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } lightConstantsCB[273];           // Offset:    0 Size: 65520
//
// }
//
// cbuffer RefProbePackCBuffer
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } refProbeConstantsCB[273];        // Offset:    0 Size: 61152
//
// }
//
// cbuffer RefProbeBlendPackCBuffer
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } refProbeAttenuationConstantsCB[682];// Offset:    0 Size: 65472
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for gPermutedTilingBuffer
// {
//
//   struct PermutedTilingBuffer
//   {
//       
//       uint2 data;                    // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:     8
//
// }
//
// Resource bind info for gDeferredCullBits
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for lightingDebug
// {
//
//   struct LightingDebug
//   {
//       
//       struct LightingDebugCounts
//       {
//           
//           uint visibleLights;        // Offset:    0
//           uint activeLights;         // Offset:    4
//           uint litLights;            // Offset:    8
//           uint visibleProbes;        // Offset:   12
//           uint activeProbes;         // Offset:   16
//
//       } maxCounts;                   // Offset:    0
//       
//       struct LightingDebugCounts
//       {
//           
//           uint visibleLights;        // Offset:   20
//           uint activeLights;         // Offset:   24
//           uint litLights;            // Offset:   28
//           uint visibleProbes;        // Offset:   32
//           uint activeProbes;         // Offset:   36
//
//       } centerCounts;                // Offset:   20
//       
//       struct LightingDebugCounts
//       {
//           
//           uint visibleLights;        // Offset:   40
//           uint activeLights;         // Offset:   44
//           uint litLights;            // Offset:   48
//           uint visibleProbes;        // Offset:   52
//           uint activeProbes;         // Offset:   56
//
//       } sumDeferredCounts;           // Offset:   40
//       
//       struct LightingDebugCounts
//       {
//           
//           uint visibleLights;        // Offset:   60
//           uint activeLights;         // Offset:   64
//           uint litLights;            // Offset:   68
//           uint visibleProbes;        // Offset:   72
//           uint activeProbes;         // Offset:   76
//
//       } sumForwardCounts;            // Offset:   60
//       float3 cameraWorldPos;         // Offset:   80
//       float3 pickedWldPos;           // Offset:   92
//       uint numPickedLights;          // Offset:  104
//       uint numPickedProbes;          // Offset:  108
//       
//       struct LightingDebugLight
//       {
//           
//           uint flags;                // Offset:  112
//           float3 wldOrigin;          // Offset:  116
//           float activeAttenuation;   // Offset:  128
//           float litAttenuation;      // Offset:  132
//
//       } pickedLights[32];            // Offset:  112
//       
//       struct LightingDebugProbe
//       {
//           
//           uint flags;                // Offset:  880
//           float3 wldOrigin;          // Offset:  884
//           float weight;              // Offset:  896
//
//       } pickedProbes[32];            // Offset:  880
//       uint overdrawHistogram[64];    // Offset: 1520
//       uint overdrawSum;              // Offset: 1776
//       uint overdrawMax;              // Offset: 1780
//       float padding0;                // Offset: 1784
//       float padding1;                // Offset: 1788
//
//   } $Element;                        // Offset:    0 Size:  1792
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// samplerPointClamp                 sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// GBufferDiffuseColor               texture  float4          2d             t0      1 
// GBufferNormalAndGloss             texture  float4          2d             t1      1 
// GBufferSpecularColorAndOcclusion    texture  float4          2d             t2      1 
// GBufferDepth                      texture   float          2d             t4      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// gDownsampledScene                 texture  float4          2d            t21      1 
// gMotionVectors                    texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// gPermutedTilingBuffer             texture  struct         r/o            t25      1 
// gDeferredCullBits                 texture  struct         r/o            t26      1 
// gSSAOTexture                      texture   float          2d            t27      1 
// gSSAODepthTexture                 texture   float          2d            t28      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// litBuffer                             UAV  float3          2d             u0      1 
// lightingDebug                         UAV  struct         r/w             u2      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
// LightingPackCBuffer               cbuffer      NA          NA            cb9      1 
// RefProbePackCBuffer               cbuffer      NA          NA           cb10      1 
// RefProbeBlendPackCBuffer          cbuffer      NA          NA           cb11      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB1[86], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_constantbuffer CB9[4095], dynamicIndexed
dcl_constantbuffer CB10[3584], dynamicIndexed
dcl_constantbuffer CB11[4092], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s4, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_structured t25, 8
dcl_resource_structured t26, 4
dcl_resource_texture2d (float,float,float,float) t27
dcl_resource_texture2d (float,float,float,float) t28
dcl_resource_texture2darray (float,float,float,float) t31
dcl_uav_typed_texture2d (float,float,float,float) u0
dcl_uav_structured u2, 1792
dcl_input vThreadIDInGroupFlattened
dcl_input vThreadGroupID.x
dcl_input vThreadIDInGroup.xy
dcl_temps 41
dcl_tgsm_raw g0, 4
dcl_tgsm_raw g1, 20
dcl_tgsm_raw g2, 20
dcl_thread_group 8, 8, 1
if_z vThreadIDInGroupFlattened.x
  store_raw g0.x, l(0), l(0)
  store_raw g1.xyzw, l(0), l(0,0,0,0)
  store_raw g1.x, l(16), l(0)
  store_raw g2.xyzw, l(0), l(0,0,0,0)
  store_raw g2.x, l(16), l(0)
endif 
sync_g_t
imad r0.x, cb2[57].x, l(40), vThreadGroupID.x
ld_structured_indexable(structured_buffer, stride=8)(mixed,mixed,mixed,mixed) r0.xy, r0.x, l(0), t25.xyxx
and r0.xz, r0.xxyx, l(4095, 0, 4095, 0)
imad r1.xy, r0.xzxx, l(8, 8, 0, 0), vThreadIDInGroup.xyxx
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.xyww, t1.xyzw
ftou r3.xy, cb1[44].xyxx
ult r3.xy, r1.xyxx, r3.xyxx
and r0.w, r3.y, r3.x
lt r3.x, l(0.000000), r2.z
and r0.w, r0.w, r3.x
if_z r0.w
  ret 
endif 
ld_indexable(texture2d)(float,float,float,float) r3.xyzw, r1.xyww, t2.xyzw
utof r4.xy, r1.xyxx
add r4.zw, r4.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
mul r5.xy, r4.zwzz, cb1[44].zwzz
sample_l_indexable(texture2d)(float,float,float,float) r5.x, r5.xyxx, t27.xyzw, s4, l(0.000000)
mul r3.z, r3.z, r5.x
if_nz cb2[55].x
  mul r5.x, r3.z, l(0.750000)
  store_uav_typed u0.xyzw, r1.xyyy, r5.xxxx
  ret 
else 
  movc r5.x, cb2[54].w, r3.z, l(1.000000)
endif 
ge r3.z, r2.z, l(0.500000)
ld_indexable(texture2d)(float,float,float,float) r5.y, r1.xyww, t4.yxzw
ld_indexable(texture2d)(float,float,float,float) r6.xyz, r1.xyww, t0.xyzw
ld_aoffimmi_indexable(-1,0,0)(texture2d)(float,float,float,float) r7.xyz, r1.xyww, t2.xywz
ld_aoffimmi_indexable(0,-1,0)(texture2d)(float,float,float,float) r8.xyz, r1.xyww, t2.xywz
ld_aoffimmi_indexable(1,0,0)(texture2d)(float,float,float,float) r9.xyz, r1.xyww, t2.xywz
ld_aoffimmi_indexable(0,1,0)(texture2d)(float,float,float,float) r10.xyz, r1.xyzw, t2.xywz
ge r11.x, r5.y, l(0.984375)
mul r1.z, r5.y, l(1.01587307)
mad r1.w, r5.y, l(64.000000), l(-63.000000)
movc r1.z, r11.x, r1.w, r1.z
max r1.z, r1.z, l(0.00000001)
rcp r11.y, r1.z
and r1.zw, r0.wwww, r11.xxxy
add r4.zw, r4.zzzw, -cb1[71].xxxy
mul r4.zw, r4.zzzw, cb1[44].zzzw
mad r4.zw, r4.zzzw, l(0.000000, 0.000000, 2.000000, -2.000000), l(0.000000, 0.000000, -1.000000, 1.000000)
mul r11.x, r4.z, cb1[12].x
mul r11.y, r4.w, cb1[13].y
mov r11.zw, l(0,0,1.000000,1.000000)
mul r5.yzw, r1.wwww, r11.xxyz
mul r11.xyz, r5.zzzz, cb1[17].xyzx
mad r11.xyz, r5.yyyy, cb1[16].xyzx, r11.xyzx
mad r11.xyz, r5.wwww, cb1[18].xyzx, r11.xyzx
mad r0.w, r2.w, l(3.000000), l(0.500000)
ftou r0.w, r0.w
mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r2.xy, r2.xyxx, l(0.850000, 0.850000, 0.000000, 0.000000)
dp2 r2.w, r2.xyxx, r2.xyxx
add r12.zw, -r2.wwww, l(0.000000, 0.000000, 2.000000, 1.000000)
sqrt r2.w, r12.z
mul r12.xy, r2.wwww, r2.xyxx
and r13.xyzw, r0.wwww, l(2, 1, 2, 1)
movc r13.xyzw, r13.zwxy, l(-1.000000,-1.000000,1,1), l(1.000000,1.000000,0,0)
xor r0.w, r13.w, r13.z
movc r13.z, r0.w, l(-1.000000), l(1.000000)
mul r2.xyw, r13.xyxz, l(-1.000000, 0.000000, 0.000000, 1.000000)
mul r5.yzw, r13.xxyz, l(0.000000, 1.000000, -2.000000, 1.000000)
mul r12.xyz, r12.xywx, l(0.40824831, 0.70710677, 0.57735026, 0.000000)
mul r2.xyw, r2.xyxw, r12.yyyy
mad r2.xyw, r5.yzyw, r12.xxxx, r2.xyxw
mad r12.xyz, r13.xyzx, r12.zzzz, r2.xywx
movc r0.w, r3.z, l(-0.500000), l(-0.00146628)
add r0.w, r0.w, r2.z
mul_sat r2.y, r0.w, l(2.00982332)
dp3 r0.w, -r11.xyzx, -r11.xyzx
rsq r0.w, r0.w
mul r5.yzw, r0.wwww, -r11.xxyz
dp2 r2.z, r4.xyxx, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r2.z, r2.z
mul r2.z, r2.z, l(52.982918)
frc r2.z, r2.z
mad r2.z, r2.z, l(6.28318548), cb1[70].w
sincos r4.x, r13.x, r2.z
utof r2.zw, r1.yyyx
dp2 r2.z, r2.zwzz, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r2.z, r2.z
mul r2.z, r2.z, l(52.982918)
frc r2.z, r2.z
mad r2.z, r2.z, l(6.28318548), cb1[70].w
sincos r14.x, r15.x, r2.z
dp3_sat r2.x, r12.xyzx, r5.yzwy
dp3 r2.z, -r5.yzwy, r12.xyzx
add r2.z, r2.z, r2.z
mad r16.xyz, r12.xyzx, -r2.zzzz, -r5.yzwy
mul r2.z, r2.y, l(17.000000)
exp r2.z, r2.z
add r2.z, r2.z, l(2.000000)
div r2.z, l(2.000000), r2.z
sqrt r2.w, r2.z
mul r4.zw, cb1[44].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
ftou r14.yz, r4.zzwz
ieq r14.yz, r1.xxyx, r14.yyzy
and r3.z, r14.z, r14.y
lt r6.w, l(0.83333331), r2.y
lt r7.w, l(60.000000), r1.w
and r6.w, r6.w, r7.w
if_nz r6.w
  mul r14.yzw, r11.yyyy, cb1[9].xxyw
  mad r14.yzw, r11.xxxx, cb1[8].xxyw, r14.yyzw
  mad r14.yzw, r11.zzzz, cb1[10].xxyw, r14.yyzw
  add r14.yzw, r14.yyzw, cb1[11].xxyw
  mad r15.yzw, r16.xxyz, l(0.000000, 2000.000000, 2000.000000, 2000.000000), r11.xxyz
  mul r17.xyz, r15.zzzz, cb1[9].xywx
  mad r17.xyz, r15.yyyy, cb1[8].xywx, r17.xyzx
  mad r15.yzw, r15.wwww, cb1[10].xxyw, r17.xxyz
  add r15.yzw, r15.yyzw, cb1[11].xxyw
  ge r6.w, r15.w, r14.w
  if_nz r6.w
    rcp r17.z, r14.w
    mul r17.xy, r14.yzyy, r17.zzzz
    rcp r18.z, r15.w
    mul r18.xy, r15.yzyy, r18.zzzz
    lt r14.yz, l(0.000000, 1.000000, 1.000000, 0.000000), r18.xxyx
    mad r19.xyzw, r15.yyzz, r18.zzzz, l(-1.000000, 1.000000, -1.000000, 1.000000)
    mad r20.xyzw, r15.yyzz, r18.zzzz, -r17.xxyy
    lt r15.yz, r18.xxyx, l(0.000000, -1.000000, -1.000000, 0.000000)
    div r19.xyzw, r19.xyzw, r20.xyzw
    and r15.yz, r15.yyzy, r19.yywy
    movc r14.yz, r14.yyzy, r19.xxzx, r15.yyzy
    max r6.w, r14.z, r14.y
    add r19.xyz, r17.xyzx, -r18.xyzx
    mad r18.xyw, r6.wwww, r19.xyxz, r18.xyxz
    mad r14.yz, r17.xxyx, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
    mad r15.yz, r18.xxyx, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
    add r14.yz, r14.yyzy, -r15.yyzy
    mul r14.yz, r4.zzwz, |r14.yyzy|
    max r6.w, r14.z, r14.y
    max r6.w, r6.w, l(1.000000)
    rcp r6.w, r6.w
    mad r17.xyz, r17.xyzx, l(0.500000, -0.500000, 1.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    mad r19.xyz, r18.xywx, l(0.500000, -0.500000, 1.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    add r20.xyz, -r17.xyzx, r19.xyzx
    mad r17.xyz, r6.wwww, r20.xyzx, r17.xyzx
    add r19.xyz, -r17.xyzx, r19.xyzx
    mul r20.xyz, r19.xyzx, l(0.031250, 0.031250, 0.031250, 0.000000)
    mul r4.zw, r4.zzzw, |r20.xxxy|
    max r4.z, r4.w, r4.z
    log r4.z, r4.z
    round_pi r4.z, r4.z
    max r4.z, r4.z, l(0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r17.xyxx, t28.yzwx, s1, r4.z
    mad r21.xyz, r19.xyzx, l(0.031250, 0.031250, 0.031250, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r21.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    and r7.w, r4.w, l(1)
    mad r21.xyz, r19.xyzx, l(0.062500, 0.062500, 0.062500, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r6.w, |r6.w|, |r8.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    bfi r4.w, l(1), l(0), r4.w, l(2)
    movc r4.w, r6.w, r4.w, r7.w
    mad r21.xyz, r19.xyzx, l(0.093750, 0.093750, 0.093750, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r7.w, |r8.w|, |r6.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r8.w, r4.w, l(4)
    movc r4.w, r7.w, r8.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.125000, 0.125000, 0.125000, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r6.w, |r6.w|, |r7.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r8.w, r4.w, l(8)
    movc r4.w, r6.w, r8.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.156250, 0.156250, 0.156250, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r7.w, |r7.w|, |r6.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r8.w, r4.w, l(16)
    movc r4.w, r7.w, r8.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.187500, 0.187500, 0.187500, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r6.w, |r6.w|, |r7.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r8.w, r4.w, l(32)
    movc r4.w, r6.w, r8.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.218750, 0.218750, 0.218750, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r7.w, |r7.w|, |r6.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r8.w, r4.w, l(64)
    movc r4.w, r7.w, r8.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r6.w, |r6.w|, |r7.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r8.w, r4.w, l(128)
    movc r4.w, r6.w, r8.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.281250, 0.281250, 0.281250, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r7.w, |r7.w|, |r6.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r8.w, r4.w, l(256)
    movc r4.w, r7.w, r8.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.312500, 0.312500, 0.312500, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r6.w, |r6.w|, |r7.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r8.w, r4.w, l(512)
    movc r4.w, r6.w, r8.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.343750, 0.343750, 0.343750, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r7.w, |r7.w|, |r6.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r8.w, r4.w, l(1024)
    movc r4.w, r7.w, r8.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.375000, 0.375000, 0.375000, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r6.w, |r6.w|, |r7.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r8.w, r4.w, l(2048)
    movc r4.w, r6.w, r8.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.406250, 0.406250, 0.406250, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r7.w, |r7.w|, |r6.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r8.w, r4.w, l(4096)
    movc r4.w, r7.w, r8.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.437500, 0.437500, 0.437500, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r6.w, |r6.w|, |r7.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r8.w, r4.w, l(8192)
    movc r4.w, r6.w, r8.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.468750, 0.468750, 0.468750, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r7.w, |r7.w|, |r6.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r8.w, r4.w, l(0x00004000)
    movc r4.w, r7.w, r8.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r6.w, |r6.w|, |r7.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r8.w, r4.w, l(0x00008000)
    movc r4.w, r6.w, r8.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.531250, 0.531250, 0.531250, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r7.w, |r7.w|, |r6.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r8.w, r4.w, l(0x00010000)
    movc r4.w, r7.w, r8.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.562500, 0.562500, 0.562500, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r6.w, |r6.w|, |r7.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r8.w, r4.w, l(0x00020000)
    movc r4.w, r6.w, r8.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.593750, 0.593750, 0.593750, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r7.w, |r7.w|, |r6.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r8.w, r4.w, l(0x00040000)
    movc r4.w, r7.w, r8.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.625000, 0.625000, 0.625000, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r6.w, |r6.w|, |r7.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r8.w, r4.w, l(0x00080000)
    movc r4.w, r6.w, r8.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.656250, 0.656250, 0.656250, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r7.w, |r7.w|, |r6.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r8.w, r4.w, l(0x00100000)
    movc r4.w, r7.w, r8.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.687500, 0.687500, 0.687500, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r6.w, |r6.w|, |r7.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r8.w, r4.w, l(0x00200000)
    movc r4.w, r6.w, r8.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.718750, 0.718750, 0.718750, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r7.w, |r7.w|, |r6.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r8.w, r4.w, l(0x00400000)
    movc r4.w, r7.w, r8.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.750000, 0.750000, 0.750000, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r6.w, |r6.w|, |r7.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r8.w, r4.w, l(0x00800000)
    movc r4.w, r6.w, r8.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.781250, 0.781250, 0.781250, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r7.w, |r7.w|, |r6.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r8.w, r4.w, l(0x01000000)
    movc r4.w, r7.w, r8.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.812500, 0.812500, 0.812500, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r6.w, |r6.w|, |r7.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r8.w, r4.w, l(0x02000000)
    movc r4.w, r6.w, r8.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.843750, 0.843750, 0.843750, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r7.w, |r7.w|, |r6.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r8.w, r4.w, l(0x04000000)
    movc r4.w, r7.w, r8.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.875000, 0.875000, 0.875000, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r6.w, |r6.w|, |r7.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r8.w, r4.w, l(0x08000000)
    movc r4.w, r6.w, r8.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.906250, 0.906250, 0.906250, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r7.w, |r7.w|, |r6.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r8.w, r4.w, l(0x10000000)
    movc r4.w, r7.w, r8.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.937500, 0.937500, 0.937500, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r6.w, |r6.w|, |r7.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r8.w, r4.w, l(0x20000000)
    movc r4.w, r6.w, r8.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.968750, 0.968750, 0.968750, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r7.w, |r7.w|, |r6.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r8.w, r4.w, l(0x40000000)
    movc r4.w, r7.w, r8.w, r4.w
    sample_l_indexable(texture2d)(float,float,float,float) r4.z, r15.yzyy, t28.yzxw, s1, r4.z
    min r4.z, |r6.w|, |r4.z|
    mul r4.z, r18.w, r4.z
    lt r4.z, r4.z, l(1.000000)
    iadd r6.w, r4.w, l(0x80000000)
    movc r4.z, r4.z, r6.w, r4.w
    mov r21.w, l(-1)
    mov r22.z, l(-1)
    mov r14.yz, l(0,0,0,0)
    mov r4.w, l(0)
    mov r6.w, r4.z
    mov r7.w, r18.z
    mov r23.yz, l(0,0,0,0)
    mov r21.z, l(0)
    mov r8.w, l(0)
    loop 
      breakc_z r6.w
      firstbit_lo r21.y, r6.w
      ishl r9.w, l(1), r21.y
      xor r21.x, r6.w, r9.w
      utof r10.w, r21.y
      mul r10.w, r10.w, l(0.031250)
      mad r18.xyw, r19.xyxz, r10.wwww, r17.xyxz
      sample_l_indexable(texture2d)(float,float,float,float) r10.w, r18.xyxx, t28.yzwx, s1, l(0.000000)
      mul r13.w, r18.w, |r10.w|
      lt r13.w, r13.w, l(1.000000)
      if_nz r13.w
        if_nz r21.z
          lt r13.w, r14.w, |r10.w|
          lt r15.y, r7.w, r18.w
          and r13.w, r13.w, r15.y
          movc r15.yz, r13.wwww, r18.xxyx, r14.yyzy
          mov r21.z, r18.w
          mov r23.x, r7.w
          movc r24.xyz, r13.wwww, r21.zxyz, r23.xyzx
          mov r6.w, r21.x
          mov r21.z, l(-1)
          mov r14.yz, r15.yyzy
          mov r7.w, r24.x
          mov r23.yz, r24.yyzy
          continue 
        endif 
        mov r13.w, r23.y
        mov r15.y, l(0)
      else 
        not r9.w, r9.w
        and r13.w, r9.w, r23.y
        mov r15.y, r21.z
      endif 
      if_nz r8.w
        mov r6.w, r21.x
        mov r23.y, r13.w
        mov r21.z, r15.y
        mov r8.w, l(-1)
        continue 
      endif 
      mov r24.xy, r14.yzyy
      mov r9.w, r4.w
      mov r15.z, r7.w
      mov r23.y, r13.w
      mov r23.x, r23.z
      mov r21.z, r15.y
      mov r22.w, r8.w
      mov r17.w, r18.w
      mov r19.w, |r10.w|
      mov r20.w, l(0)
      loop 
        ige r23.w, r20.w, l(4)
        breakc_nz r23.w
        itof r23.w, r20.w
        add r23.w, r23.w, l(1.000000)
        mul r23.w, r23.w, l(0.250000)
        mad r25.xyz, r20.xyzx, r23.wwww, r18.xywx
        sample_l_indexable(texture2d)(float,float,float,float) r23.w, r25.xyxx, t28.yzwx, s1, l(0.000000)
        mul r24.z, r25.z, |r23.w|
        lt r24.z, r24.z, l(1.000000)
        if_nz r24.z
          lt r24.z, r14.w, |r23.w|
          add r24.w, -r17.w, r25.z
          add r25.w, -r19.w, |r23.w|
          mul r26.x, r17.w, r25.z
          mul r25.w, |r25.w|, r26.x
          lt r24.w, r25.w, |r24.w|
          and r25.w, r24.w, r24.z
          lt r26.x, r15.z, r25.z
          and r26.y, r24.z, r26.x
          movc r22.xy, r26.yyyy, r21.xyxx, r23.yxyy
          or r24.w, r24.w, r26.x
          and r24.z, r24.z, r24.w
          movc r25.xy, r24.zzzz, r25.xyxx, r24.xyxx
          movc r24.w, r25.w, l(1.000000), r9.w
          movc r24.z, r24.z, r25.z, r15.z
          movc r26.xyzw, r25.wwww, r21.xyzw, r22.xyzw
          mov r9.w, r24.w
          mov r24.xy, r25.xyxx
          mov r15.z, r24.z
          mov r23.xy, r26.yxyy
          mov r21.z, r26.z
          mov r22.w, r26.w
          break 
        endif 
        mov r17.w, r25.z
        mov r19.w, |r23.w|
        iadd r20.w, r20.w, l(1)
      endloop 
      mov r14.yz, r24.xxyx
      mov r4.w, r9.w
      mov r7.w, r15.z
      mov r23.yz, r23.yyxy
      mov r8.w, r22.w
      mov r6.w, r21.x
    endloop 
    rcp r4.z, r7.w
    add r4.z, -r14.w, r4.z
    add r6.w, -r14.w, r15.w
    div r4.z, |r4.z|, |r6.w|
    min r17.x, r4.z, l(1.000000)
    countbits r4.z, r23.y
    utof r4.z, r4.z
    add r4.z, r4.z, l(1.000000)
    iadd r6.w, -r23.z, l(32)
    utof r6.w, r6.w
    div r4.z, r4.z, r6.w
    min r17.y, r4.z, l(1.000000)
  else 
    mov r17.xy, l(1.000000,0,0,0)
    mov r4.w, l(0)
  endif 
  add r4.z, r2.y, l(-0.83333331)
  mul r4.z, r4.z, l(5.99999952)
  max r4.z, r4.z, l(0.000000)
  mad r6.w, r4.z, l(-2.000000), l(3.000000)
  mul r4.z, r4.z, r4.z
  mul r4.z, r4.z, r6.w
  add r1.w, r1.w, l(-60.000000)
  mul_sat r1.w, r1.w, l(0.01666667)
  mad r6.w, r1.w, l(-2.000000), l(3.000000)
  mul r1.w, r1.w, r1.w
  mul r1.w, r1.w, r6.w
  mul r1.w, r1.w, r4.z
  mul r1.w, r17.y, r1.w
  mad r15.yz, r14.yyzy, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
  add r15.yz, |r15.yyzy|, l(0.000000, -0.500000, -0.500000, 0.000000)
  add_sat r15.yz, r15.yyzy, r15.yyzy
  mad r17.yz, r15.yyzy, l(0.000000, -2.000000, -2.000000, 0.000000), l(0.000000, 3.000000, 3.000000, 0.000000)
  mul r15.yz, r15.yyzy, r15.yyzy
  mad r15.yz, -r17.yyzy, r15.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
  mul r4.z, r15.z, r15.y
  mul r1.w, r1.w, r4.z
  mul r4.z, r17.x, l(10.000000)
  min r4.z, r4.z, l(1.000000)
  add r6.w, -r4.w, l(1.000000)
  mul r6.w, r1.w, r6.w
  add r4.z, r4.z, l(-1.000000)
  mad r4.z, r6.w, r4.z, l(1.000000)
  mul r1.w, r4.w, r1.w
  lt r4.w, l(0.000000), r1.w
  if_nz r4.w
    sample_l_indexable(texture2d)(float,float,float,float) r15.yz, r14.yzyy, t22.zxyw, s4, l(0.000000)
    add r17.xy, |r15.yzyy|, l(-0.500000, -0.500000, 0.000000, 0.000000)
    add_sat r17.xy, r17.xyxx, r17.xyxx
    add r17.zw, |r15.yyyz|, |r15.yyyz|
    min r17.zw, r17.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    mul r17.zw, r17.zzzw, l(0.000000, 0.000000, 10.000000, 10.000000)
    mad r17.xy, r17.xyxx, l(30.000000, 30.000000, 0.000000, 0.000000), r17.zwzz
    ge r15.yz, r15.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
    movc r15.yz, r15.yyzy, r17.xxyx, -r17.xxyx
    mad r14.yz, -r15.yyzy, cb1[44].zzwz, r14.yyzy
    sample_l_indexable(texture2d)(float,float,float,float) r14.yzw, r14.yzyy, t21.wxyz, s4, l(0.000000)
    mul r14.yzw, r14.yyzw, cb1[85].xxxx
    mul r14.yzw, r1.wwww, r14.yyzw
  else 
    mov r14.yzw, l(0,0,0,0)
    mov r1.w, l(0)
  endif 
else 
  mov r14.yzw, l(0,0,0,0)
  mov r4.z, l(1.000000)
  mov r1.w, l(0)
endif 
dp3 r4.w, r12.xyzx, cb2[17].xyzx
mov_sat r6.w, r4.w
ge r7.w, l(0.000000), r6.w
if_nz r7.w
  mov r8.w, l(0)
endif 
if_z r7.w
  mul r15.yzw, r11.yyyy, cb2[29].xxyz
  mad r15.yzw, r11.xxxx, cb2[28].xxyz, r15.yyzw
  mad r15.yzw, r11.zzzz, cb2[30].xxyz, r15.yyzw
  add r15.yzw, r15.yyzw, cb2[31].xxyz
  add r7.w, r15.w, -cb2[17].w
  mad r7.w, -r7.w, l(0.00006104), l(1.000000)
  mov_sat r9.w, r7.w
  eq r9.w, r7.w, r9.w
  if_nz r9.w
    mov r9.w, l(0)
    mov r10.w, l(0)
    loop 
      ge r13.w, r9.w, l(3.000000)
      breakc_nz r13.w
      ftou r13.w, r9.w
      add r17.xy, r15.yzyy, -cb2[r13.w + 20].xyxx
      max r17.x, |r17.y|, |r17.x|
      mul r10.w, r17.x, cb2[r13.w + 20].z
      lt r13.w, r10.w, l(1.000000)
      if_nz r13.w
        break 
      endif 
      add r9.w, r9.w, l(1.000000)
      mov r10.w, l(0)
    endloop 
  else 
    mov r9.w, l(3.000000)
    mov r10.w, l(0)
  endif 
  ge r13.w, r9.w, l(3.000000)
  if_nz r13.w
    mul r17.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
    rcp r18.xz, r17.xxxx
    mov r18.y, -r18.z
    mad r17.xyz, r15.yzyy, r18.xyzx, r17.yzyy
    add r18.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r17.xyz, r17.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r17.xyz, r18.xyzx, r17.xyzx
    mul r18.xy, r17.zyzz, cb2[32].xxxx
    round_ni r18.xy, r18.xyxx
    mul r17.w, r18.y, cb2[27].x
    mad r17.w, r17.w, cb2[32].x, r18.x
    ftou r17.w, r17.w
    iadd r17.w, r17.w, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.x, r17.w, l(0), t23.xxxx
    and r18.y, r18.x, l(0x40000000)
    ishl r18.z, r18.x, l(2)
    if_z r18.y
      and r18.y, r18.x, l(0x01ffffff)
      iadd r19.x, r17.w, r18.y
      ushr r17.w, r18.x, l(25)
      utof r17.w, r17.w
      mul r17.xyz, r17.wwww, r17.xyzx
      frc r17.xyz, r17.xyzx
      mul r17.xyz, r17.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
      ftou r17.xyz, r17.xyzx
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.z, r19.x, l(0), t23.xxxx
      ushr r18.xy, r17.zyzz, l(6, 6, 0, 0)
      and r17.w, r19.z, l(0xc0000000)
      iadd r18.w, r19.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.w, r18.w, l(0), t23.xxxx
      movc r18.y, r18.y, r19.z, r18.w
      ushr r18.w, r18.y, l(13)
      movc r18.x, r18.x, r18.w, r18.y
      and r18.x, r18.x, l(8191)
      iadd r20.x, r18.x, r19.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.z, r20.x, l(0), t23.xxxx
      mov r19.y, l(0)
      mov r20.y, l(1)
      movc r18.xyw, r17.wwww, r19.xyxz, r20.xyxz
      movc r20.yz, r17.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r21.xy, r17.zyzz, r20.yyyy
      and r21.xy, r21.xyxx, l(1, 1, 0, 0)
      and r19.w, r18.w, l(0xc0000000)
      iadd r20.y, r18.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.y, r20.y, l(0), t23.xxxx
      movc r20.y, r21.y, r18.w, r20.y
      ushr r21.y, r20.y, l(13)
      movc r20.y, r21.x, r21.y, r20.y
      and r20.y, r20.y, l(8191)
      iadd r20.x, r18.x, r20.y
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.w, r20.x, l(0), t23.xxxx
      movc r18.xyw, r19.wwww, r18.xyxw, r20.xzxw
      movc r18.xyw, r17.wwww, r19.xyxz, r18.xyxw
      and r17.w, r18.w, l(0xc0000000)
      if_z r17.w
        iadd r17.w, -r18.y, l(6)
        ushr r19.xy, r17.zyzz, r17.wwww
        or r17.w, r18.w, l(0x40000000)
        bfi r19.y, l(1), l(1), r19.y, l(0)
        bfi r19.x, l(1), l(0), r19.x, r19.y
        imul null, r19.x, r19.x, l(10)
        ushr r17.w, r17.w, r19.x
        and r17.w, r17.w, l(1023)
        iadd r19.x, r17.w, r18.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.w, r19.x, l(0), t23.xxxx
        iadd r19.yz, r18.yyyy, l(0, 1, 2, 0)
        iadd r17.w, -r19.y, l(6)
        ushr r20.xy, r17.zyzz, r17.wwww
        and r17.w, r19.w, l(0xc0000000)
        or r18.y, r19.w, l(0x40000000)
        bfi r20.y, l(1), l(1), r20.y, l(0)
        bfi r20.x, l(1), l(0), r20.x, r20.y
        imul null, r20.x, r20.x, l(10)
        ushr r18.y, r18.y, r20.x
        and r18.y, r18.y, l(1023)
        iadd r20.x, r18.y, r19.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.z, r20.x, l(0), t23.xxxx
        mov r20.y, r19.z
        movc r20.xyz, r17.wwww, r19.xywx, r20.xyzx
        iadd r18.y, -r20.y, l(6)
        ushr r19.yz, r17.zzyz, r18.yyyy
        and r18.y, r20.z, l(0xc0000000)
        or r20.y, r20.z, l(0x40000000)
        bfi r19.z, l(1), l(1), r19.z, l(0)
        bfi r19.y, l(1), l(0), r19.y, r19.z
        imul null, r19.y, r19.y, l(10)
        ushr r19.y, r20.y, r19.y
        and r19.y, r19.y, l(1023)
        iadd r21.x, r19.y, r20.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r21.y, r21.x, l(0), t23.xxxx
        movc r19.yz, r18.yyyy, r20.xxzx, r21.xxyx
        movc r18.xw, r17.wwww, r19.xxxw, r19.yyyz
      endif 
      and r17.w, r18.w, l(0xc0000000)
      if_z r17.w
        ubfe r18.y, l(14), l(15), r18.w
        utof r18.y, r18.y
        mul r18.y, r18.y, cb2[27].w
        mul r18.y, r18.y, l(0.00006104)
        and r19.xy, r18.wwww, l(0x00007fff, 0x20000000, 0, 0)
        utof r19.x, r19.x
        mul r19.x, r19.x, cb2[27].w
        mul r19.x, r19.x, l(0.00003052)
        and r19.z, r17.y, l(3)
        iadd r19.z, r18.x, r19.z
        iadd r19.z, r19.z, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.z, r19.z, l(0), t23.xxxx
        bfi r20.xyz, l(2, 2, 1, 0), l(3, 1, 4, 0), r17.xyzx, l(0, 0, 0, 0)
        ushr r17.x, r19.z, r20.x
        and r17.x, r17.x, l(255)
        utof r17.x, r17.x
        mul r17.x, r19.x, r17.x
        mad r17.x, r17.x, l(0.00392157), r18.y
        iadd r17.y, r20.y, l(1)
        ubfe r17.z, l(1), l(1), r17.z
        iadd r17.y, r17.z, r17.y
        iadd r17.y, r17.y, r18.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.y, r17.y, l(0), t23.xxxx
        ushr r17.y, r17.y, r20.z
        and r17.y, r17.y, l(0x0000ffff)
        utof r17.y, r17.y
        mul r17.y, r19.x, r17.y
        mad r17.y, r17.y, l(0.00001526), r18.y
        movc r18.z, r19.y, r17.x, r17.y
      else 
        and r17.x, r18.w, l(0x80000000)
        iadd r17.y, r18.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.y, r17.y, l(0), t23.xxxx
        movc r17.x, r17.x, r17.y, l(0)
        ishl r17.y, r18.w, l(2)
        ushr r17.z, r17.x, l(16)
        and r17.x, r17.x, l(0x0000ffff)
        f16tof32 r17.xz, r17.xxzx
        mad r17.y, r15.y, r17.z, r17.y
        mad r17.x, r15.z, r17.x, r17.y
        movc r18.z, r17.w, r17.x, r18.z
      endif 
    endif 
    mad r15.w, -cb2[27].z, l(2.000000), r15.w
    lt r15.w, r18.z, r15.w
    movc r8.w, r15.w, l(0), l(1.000000)
  endif 
  if_z r13.w
    if_z cb2[58].y
      ftou r13.w, r9.w
      add r17.xy, r15.yzyy, -cb2[r13.w + 20].xyxx
      mul r17.xy, r17.xyxx, cb2[r13.w + 20].zzzz
      mad r17.xy, r17.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r13.w, cb2[26].y
      add r17.z, r9.w, r13.w
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r13.w, r17.xyzx, t13.xxxx, s13, r7.w
      sample_l_indexable(texture2darray)(float,float,float,float) r15.w, r17.xyzx, t31.yzwx, s0, l(0.000000)
      add r13.w, r13.w, r15.w
      add_sat r13.w, r13.w, l(-1.000000)
      mul r15.w, r13.w, r13.w
      mul r8.w, r13.w, r15.w
    endif 
    if_nz cb2[58].y
      mov r17.x, -r4.x
      ftou r13.w, r9.w
      add r9.w, r9.w, l(1.000000)
      min r9.w, r9.w, l(2.000000)
      ftou r9.w, r9.w
      add r10.w, -r10.w, l(1.000000)
      mul r10.w, r10.w, l(28.000000)
      ftou r10.w, r10.w
      add r18.xy, r15.yzyy, -cb2[r13.w + 20].xyxx
      mul r18.xy, r18.xyxx, cb2[r13.w + 20].zzzz
      mad r18.xy, r18.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      add r15.yz, r15.yyzy, -cb2[r9.w + 20].xxyx
      mul r15.yz, r15.yyzy, cb2[r9.w + 20].zzzz
      mad r15.yz, r15.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      mov r17.y, r13.x
      mov r17.z, r4.x
      mov r15.w, l(0)
      mov r17.w, l(0)
      loop 
        uge r18.z, r17.w, l(8)
        breakc_nz r18.z
        ult r18.z, r10.w, r17.w
        movc r19.xy, r18.zzzz, r15.yzyy, r18.xyxx
        movc r18.w, r18.z, cb2[r9.w + 20].w, cb2[r13.w + 20].w
        movc r18.z, r18.z, r9.w, r13.w
        dp2 r20.x, icb[r17.w + 0].yxyy, r17.xyxx
        dp2 r20.y, icb[r17.w + 0].yxyy, r17.yzyy
        mad r19.xy, r20.xyxx, r18.wwww, r19.xyxx
        iadd r18.z, r18.z, cb2[26].y
        utof r19.z, r18.z
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r18.z, r19.xyzx, t13.xxxx, s13, r7.w
        sample_l_indexable(texture2darray)(float,float,float,float) r18.w, r19.xyzx, t31.yzwx, s0, l(0.000000)
        add r18.z, r18.w, r18.z
        add_sat r18.z, r18.z, l(-1.000000)
        mad r15.w, r18.z, l(0.125000), r15.w
        iadd r17.w, r17.w, l(1)
      endloop 
      mul r7.w, r15.w, r15.w
      mul r8.w, r15.w, r7.w
    endif 
  endif 
endif 
add r7.w, -r2.y, l(1.000000)
mul r9.w, r7.w, l(5.000000)
mad r10.w, r7.w, l(5.000000), l(-2.500000)
mul r10.w, r10.w, l(0.400000)
max r10.w, r10.w, l(0.000000)
mul r10.w, r10.w, l(100.000000)
mad r15.yz, -r7.wwww, l(0.000000, 10.000000, 5.000000, 0.000000), l(0.000000, 6.857410, 7.085000, 0.000000)
exp r13.w, r15.y
mul r13.w, r2.x, r13.w
mul r13.w, r13.w, l(9.136810)
mul r15.y, r7.w, r9.w
mad r15.y, -r15.y, l(2.015905), r15.z
exp r15.y, r15.y
mul r15.y, r2.x, r15.y
mul r15.y, r15.y, l(9.708090)
max r13.w, r13.w, r15.y
max r13.w, r13.w, l(1.268160)
iadd r15.y, cb2[0].y, -cb2[58].x
ushr r0.y, r0.y, l(24)
uge r15.z, r0.y, r15.y
ult r15.w, r0.y, cb2[0].y
and r15.z, r15.w, r15.z
if_nz r15.z
  imul null, r15.z, r0.y, l(14)
  if_nz r3.z
    add r17.yzw, cb1[24].xxyz, cb10[r15.z + 0].xxyz
    mov r17.x, l(16)
    store_structured u2.xyzw, cb2[52].x, l(880), r17.xyzw
  endif 
  add r17.xyz, r11.xyzx, -cb10[r15.z + 0].xyzx
  and r15.w, l(0x0000ffff), cb10[r15.z + 7].z
  ubfe r17.w, l(6), l(25), cb10[r15.z + 7].z
  imul null, r18.x, r15.w, l(6)
  dp3 r18.y, cb11[r18.x + 0].xyzx, r17.xyzx
  add_sat r18.y, r18.y, cb11[r18.x + 0].w
  dp3 r18.z, cb11[r18.x + 1].xyzx, r17.xyzx
  add_sat r18.z, r18.z, cb11[r18.x + 1].w
  mul r18.y, r18.z, r18.y
  dp3 r18.z, cb11[r18.x + 2].xyzx, r17.xyzx
  add_sat r18.z, r18.z, cb11[r18.x + 2].w
  mul r18.y, r18.z, r18.y
  dp3 r18.z, cb11[r18.x + 3].xyzx, r17.xyzx
  add_sat r18.z, r18.z, cb11[r18.x + 3].w
  mul r18.y, r18.z, r18.y
  dp3 r18.z, cb11[r18.x + 4].xyzx, r17.xyzx
  add_sat r18.z, r18.z, cb11[r18.x + 4].w
  mul r18.y, r18.z, r18.y
  dp3 r18.z, cb11[r18.x + 5].xyzx, r17.xyzx
  add_sat r18.x, r18.z, cb11[r18.x + 5].w
  mul r18.x, r18.x, r18.y
  and r18.w, l(1), cb10[r15.z + 6].x
  mov r18.yz, l(0,0,1.000000,0)
  movc r18.xy, r18.wwww, r18.xyxx, r18.zxzz
  mov r19.x, l(1.000000)
  mov r18.z, cb10[r15.z + 6].x
  mov r20.xy, r18.xyxx
  mov r18.w, l(1)
  loop 
    ige r19.z, r18.w, r17.w
    breakc_nz r19.z
    iadd r19.z, r15.w, r18.w
    imul null, r19.z, r19.z, l(6)
    dp3 r19.w, cb11[r19.z + 0].xyzx, r17.xyzx
    add_sat r19.w, r19.w, cb11[r19.z + 0].w
    mul r19.w, r19.w, r20.x
    dp3 r20.z, cb11[r19.z + 1].xyzx, r17.xyzx
    add_sat r20.z, r20.z, cb11[r19.z + 1].w
    mul r19.w, r19.w, r20.z
    dp3 r20.z, cb11[r19.z + 2].xyzx, r17.xyzx
    add_sat r20.z, r20.z, cb11[r19.z + 2].w
    mul r19.w, r19.w, r20.z
    dp3 r20.z, cb11[r19.z + 3].xyzx, r17.xyzx
    add_sat r20.z, r20.z, cb11[r19.z + 3].w
    mul r19.w, r19.w, r20.z
    dp3 r20.z, cb11[r19.z + 4].xyzx, r17.xyzx
    add_sat r20.z, r20.z, cb11[r19.z + 4].w
    mul r19.w, r19.w, r20.z
    dp3 r20.z, cb11[r19.z + 5].xyzx, r17.xyzx
    add_sat r19.z, r20.z, cb11[r19.z + 5].w
    mul r20.x, r19.z, r19.w
    ushr r20.z, r18.z, l(2)
    ubfe r20.w, l(1), l(2), r18.z
    and r21.x, r20.z, l(2)
    max r21.y, r20.x, r20.y
    mad r19.z, -r19.w, r19.z, l(1.000000)
    mul r19.z, r19.z, r20.y
    movc r19.y, r21.x, r19.z, r21.y
    movc r20.xy, r20.wwww, r20.xyxx, r19.xyxx
    iadd r18.w, r18.w, l(1)
    mov r18.z, r20.z
  endloop 
  mov_sat r20.y, r20.y
  mul r15.w, r20.y, cb10[r15.z + 6].y
  lt r17.w, l(0.000000), r15.w
  if_nz r17.w
    if_nz r3.z
      ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r17.w, cb2[52].x, l(880), u2.xxxx
      or r17.w, r17.w, l(32)
      store_structured u2.x, cb2[52].x, l(880), r17.w
      store_structured u2.x, cb2[52].x, l(896), r15.w
    endif 
    mul r17.w, r15.w, cb10[r15.z + 7].y
    mov r18.x, cb10[r15.z + 7].w
    mov r18.yz, cb10[r15.z + 8].xxyx
    dp3 r18.w, r16.xyzx, r18.xyzx
    dp3 r18.x, r17.xyzx, r18.xyzx
    add r18.x, r18.x, -cb10[r15.z + 8].z
    ge r18.y, r18.x, l(0.000000)
    max r18.x, r10.w, |r18.x|
    movc r18.x, r18.y, r18.x, -r18.x
    max r18.y, -r18.w, l(0.00000010)
    div r18.x, r18.x, r18.y
    min r18.x, |r18.x|, l(131072.000000)
    mov r19.x, cb10[r15.z + 8].w
    mov r19.yz, cb10[r15.z + 9].xxyx
    dp3 r18.y, r16.xyzx, r19.xyzx
    dp3 r18.z, r17.xyzx, r19.xyzx
    add r18.z, r18.z, -cb10[r15.z + 9].z
    ge r18.w, r18.z, l(0.000000)
    max r18.z, r10.w, |r18.z|
    movc r18.z, r18.w, r18.z, -r18.z
    max r18.y, -r18.y, l(0.00000010)
    div r18.y, r18.z, r18.y
    min r18.x, |r18.y|, r18.x
    mov r19.x, cb10[r15.z + 9].w
    mov r19.yz, cb10[r15.z + 10].xxyx
    dp3 r18.y, r16.xyzx, r19.xyzx
    dp3 r18.z, r17.xyzx, r19.xyzx
    add r18.z, r18.z, -cb10[r15.z + 10].z
    ge r18.w, r18.z, l(0.000000)
    max r18.z, r10.w, |r18.z|
    movc r18.z, r18.w, r18.z, -r18.z
    max r18.y, -r18.y, l(0.00000010)
    div r18.y, r18.z, r18.y
    min r18.x, |r18.y|, r18.x
    mov r19.x, cb10[r15.z + 10].w
    mov r19.yz, cb10[r15.z + 11].xxyx
    dp3 r18.y, r16.xyzx, r19.xyzx
    dp3 r18.z, r17.xyzx, r19.xyzx
    add r18.z, r18.z, -cb10[r15.z + 11].z
    ge r18.w, r18.z, l(0.000000)
    max r18.z, r10.w, |r18.z|
    movc r18.z, r18.w, r18.z, -r18.z
    max r18.y, -r18.y, l(0.00000010)
    div r18.y, r18.z, r18.y
    min r18.x, |r18.y|, r18.x
    mov r19.x, cb10[r15.z + 11].w
    mov r19.yz, cb10[r15.z + 12].xxyx
    dp3 r18.y, r16.xyzx, r19.xyzx
    dp3 r18.z, r17.xyzx, r19.xyzx
    add r18.z, r18.z, -cb10[r15.z + 12].z
    ge r18.w, r18.z, l(0.000000)
    max r18.z, r10.w, |r18.z|
    movc r18.z, r18.w, r18.z, -r18.z
    max r18.y, -r18.y, l(0.00000010)
    div r18.y, r18.z, r18.y
    min r18.x, |r18.y|, r18.x
    mov r19.x, cb10[r15.z + 12].w
    mov r19.yz, cb10[r15.z + 13].xxyx
    dp3 r18.y, r16.xyzx, r19.xyzx
    dp3 r18.z, r17.xyzx, r19.xyzx
    add r18.z, r18.z, -cb10[r15.z + 13].z
    ge r18.w, r18.z, l(0.000000)
    max r18.z, r10.w, |r18.z|
    movc r18.z, r18.w, r18.z, -r18.z
    max r18.y, -r18.y, l(0.00000010)
    div r18.y, r18.z, r18.y
    min r18.x, |r18.y|, r18.x
    add r19.x, r17.x, cb10[r15.z + 3].w
    add r19.yz, r17.yyzy, cb10[r15.z + 4].xxyx
    mad r18.yzw, r16.xxyz, r18.xxxx, r19.xxyz
    dp3 r19.x, r18.yzwy, r18.yzwy
    sqrt r19.x, r19.x
    div r18.x, r18.x, r19.x
    add r18.x, r18.x, r18.x
    sqrt r18.x, r18.x
    mad r18.x, r7.w, l(5.000000), r18.x
    add r18.x, r18.x, l(-0.844800)
    mov r19.x, cb10[r15.z + 0].w
    mov r19.y, cb10[r15.z + 1].z
    mov r19.z, cb10[r15.z + 2].y
    dp3 r20.x, r18.yzwy, r19.xyzx
    mov r21.xy, cb10[r15.z + 1].xwxx
    mov r21.z, cb10[r15.z + 2].z
    dp3 r20.y, r18.yzwy, r21.xyzx
    mov r22.x, cb10[r15.z + 1].y
    mov r22.yz, cb10[r15.z + 2].xxwx
    dp3 r20.z, r18.yzwy, r22.xyzx
    ubfe r18.y, l(9), l(16), cb10[r15.z + 7].z
    utof r20.w, r18.y
    sample_l_indexable(texturecubearray)(float,float,float,float) r18.xyz, r20.xyzw, t8.xyzw, s2, r18.x
    and r23.xyz, r18.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
    ieq r23.xyz, r23.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
    or r18.w, r23.y, r23.x
    or r18.w, r23.z, r18.w
    movc r18.xyz, r18.wwww, l(1.000000,1.000000,0,0), r18.xyzx
    dp3 r23.x, r17.xyzx, r19.xyzx
    dp3 r23.y, r17.xyzx, r21.xyzx
    dp3 r23.z, r17.xyzx, r22.xyzx
    mad_sat r17.xyz, r23.xyzx, cb10[r15.z + 3].xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    mul r23.xy, r17.xyxx, cb10[r15.z + 4].zwzz
    mul r23.z, r17.z, cb10[r15.z + 5].x
    add r17.xyz, r23.xyzx, cb10[r15.z + 5].yzwy
    dp3 r20.x, r12.xyzx, r19.xyzx
    dp3 r20.y, r12.xyzx, r21.xyzx
    dp3 r20.z, r12.xyzx, r22.xyzx
    lt r19.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r20.xyzx
    movc r21.z, r19.x, l(0), l(0.500000)
    mov r21.xy, l(0,0,0,0)
    add r21.xyz, r17.xyzx, r21.xyzx
    sample_l_indexable(texture3d)(float,float,float,float) r21.xyz, r21.xyzx, t17.xyzw, s4, l(0.000000)
    mul r22.xyz, r20.xyzx, r20.xyzx
    mul r22.xyz, r17.wwww, r22.xyzx
    movc r23.z, r19.y, l(0), l(0.500000)
    mov r23.xy, l(0,0,0,0)
    add r19.xyw, r17.xyxz, r23.xyxz
    sample_l_indexable(texture3d)(float,float,float,float) r19.xyw, r19.xywx, t18.xywz, s4, l(0.000000)
    mul r19.xyw, r22.yyyy, r19.xyxw
    mad r19.xyw, r21.xyxz, r22.xxxx, r19.xyxw
    movc r21.z, r19.z, l(0), l(0.500000)
    mov r21.xy, l(0,0,0,0)
    add r17.xyz, r17.xyzx, r21.xyzx
    sample_l_indexable(texture3d)(float,float,float,float) r17.xyz, r17.xyzx, t19.xyzw, s4, l(0.000000)
    mad r17.xyz, r17.xyzx, r22.zzzz, r19.xywx
    sample_l_indexable(texturecubearray)(float,float,float,float) r19.xyz, r20.xyzw, t8.xyzw, s2, l(6.000000)
    and r20.xyz, r19.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
    ieq r20.xyz, r20.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
    or r15.z, r20.y, r20.x
    or r15.z, r20.z, r15.z
    movc r19.xyz, r15.zzzz, l(1.000000,1.000000,0,0), r19.xyzx
    mul r17.xyz, r17.xyzx, r19.xyzx
    dp3 r15.z, r17.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
    mul r18.w, r13.w, r15.z
    mul r18.xyz, r17.wwww, r18.xyzx
    dp3 r17.w, r18.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
    mad r15.z, r13.w, r15.z, r17.w
    div r15.z, r18.w, r15.z
    mul r18.xyz, r15.zzzz, r18.xyzx
    mov r15.z, l(257)
  else 
    mov r17.xyz, l(0,0,0,0)
    mov r18.xyz, l(0,0,0,0)
    mov r15.zw, l(0,0,1,0)
  endif 
else 
  mov r17.xyz, l(0,0,0,0)
  mov r18.xyz, l(0,0,0,0)
  mov r15.zw, l(0,0,0,0)
endif 
ult r15.y, r0.y, r15.y
if_nz r15.y
  imul null, r0.y, r0.y, l(14)
  if_nz r3.z
    and r15.y, r15.z, l(1)
    imad r15.y, r15.y, l(20), l(880)
    add r19.yzw, cb1[24].xxyz, cb10[r0.y + 0].xxyz
    mov r19.x, l(16)
    store_structured u2.xyzw, cb2[52].x, r15.y, r19.xyzw
  endif 
  iadd r15.y, r15.z, l(1)
  add r19.xyz, r11.xyzx, -cb10[r0.y + 0].xyzx
  and r17.w, l(0x0000ffff), cb10[r0.y + 7].z
  ubfe r18.w, l(6), l(25), cb10[r0.y + 7].z
  imul null, r19.w, r17.w, l(6)
  dp3 r20.x, cb11[r19.w + 0].xyzx, r19.xyzx
  add_sat r20.x, r20.x, cb11[r19.w + 0].w
  dp3 r20.y, cb11[r19.w + 1].xyzx, r19.xyzx
  add_sat r20.y, r20.y, cb11[r19.w + 1].w
  mul r20.x, r20.y, r20.x
  dp3 r20.y, cb11[r19.w + 2].xyzx, r19.xyzx
  add_sat r20.y, r20.y, cb11[r19.w + 2].w
  mul r20.x, r20.y, r20.x
  dp3 r20.y, cb11[r19.w + 3].xyzx, r19.xyzx
  add_sat r20.y, r20.y, cb11[r19.w + 3].w
  mul r20.x, r20.y, r20.x
  dp3 r20.y, cb11[r19.w + 4].xyzx, r19.xyzx
  add_sat r20.y, r20.y, cb11[r19.w + 4].w
  mul r20.x, r20.y, r20.x
  dp3 r20.y, cb11[r19.w + 5].xyzx, r19.xyzx
  add_sat r19.w, r20.y, cb11[r19.w + 5].w
  mul r20.x, r19.w, r20.x
  and r19.w, l(1), cb10[r0.y + 6].x
  mov r20.yz, l(0,0,1.000000,0)
  movc r20.xy, r19.wwww, r20.xyxx, r20.zxzz
  mov r21.x, l(1.000000)
  mov r19.w, cb10[r0.y + 6].x
  mov r22.xy, r20.xyxx
  mov r20.z, l(1)
  loop 
    ige r20.w, r20.z, r18.w
    breakc_nz r20.w
    iadd r20.w, r17.w, r20.z
    imul null, r20.w, r20.w, l(6)
    dp3 r21.z, cb11[r20.w + 0].xyzx, r19.xyzx
    add_sat r21.z, r21.z, cb11[r20.w + 0].w
    mul r21.z, r21.z, r22.x
    dp3 r21.w, cb11[r20.w + 1].xyzx, r19.xyzx
    add_sat r21.w, r21.w, cb11[r20.w + 1].w
    mul r21.z, r21.w, r21.z
    dp3 r21.w, cb11[r20.w + 2].xyzx, r19.xyzx
    add_sat r21.w, r21.w, cb11[r20.w + 2].w
    mul r21.z, r21.w, r21.z
    dp3 r21.w, cb11[r20.w + 3].xyzx, r19.xyzx
    add_sat r21.w, r21.w, cb11[r20.w + 3].w
    mul r21.z, r21.w, r21.z
    dp3 r21.w, cb11[r20.w + 4].xyzx, r19.xyzx
    add_sat r21.w, r21.w, cb11[r20.w + 4].w
    mul r21.z, r21.w, r21.z
    dp3 r21.w, cb11[r20.w + 5].xyzx, r19.xyzx
    add_sat r20.w, r21.w, cb11[r20.w + 5].w
    mul r22.x, r20.w, r21.z
    ushr r21.w, r19.w, l(2)
    ubfe r22.z, l(1), l(2), r19.w
    and r22.w, r21.w, l(2)
    max r23.x, r22.x, r22.y
    mad r20.w, -r21.z, r20.w, l(1.000000)
    mul r20.w, r20.w, r22.y
    movc r21.y, r22.w, r20.w, r23.x
    movc r22.xy, r22.zzzz, r22.xyxx, r21.xyxx
    iadd r20.z, r20.z, l(1)
    mov r19.w, r21.w
  endloop 
  add_sat r17.w, -r15.w, r22.y
  mul r18.w, r17.w, cb10[r0.y + 6].y
  lt r19.w, l(0.000000), r18.w
  if_nz r19.w
    and r19.w, r15.y, l(3)
    iadd r20.x, r19.w, l(-1)
    ult r20.x, r20.x, l(32)
    and r20.x, r3.z, r20.x
    if_nz r20.x
      imad r20.xy, r19.wwww, l(20, 20, 0, 0), l(860, 876, 0, 0)
      ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r19.w, cb2[52].x, r20.x, u2.xxxx
      or r19.w, r19.w, l(32)
      store_structured u2.x, cb2[52].x, r20.x, r19.w
      store_structured u2.x, cb2[52].x, r20.y, r18.w
    endif 
    iadd r15.y, r15.z, l(257)
    mad r17.w, r17.w, cb10[r0.y + 6].y, r15.w
    mul r18.w, r18.w, cb10[r0.y + 7].y
    mov r20.x, cb10[r0.y + 7].w
    mov r20.yz, cb10[r0.y + 8].xxyx
    dp3 r19.w, r16.xyzx, r20.xyzx
    dp3 r20.x, r19.xyzx, r20.xyzx
    add r20.x, r20.x, -cb10[r0.y + 8].z
    ge r20.y, r20.x, l(0.000000)
    max r20.x, r10.w, |r20.x|
    movc r20.x, r20.y, r20.x, -r20.x
    max r19.w, -r19.w, l(0.00000010)
    div r19.w, r20.x, r19.w
    min r19.w, |r19.w|, l(131072.000000)
    mov r20.x, cb10[r0.y + 8].w
    mov r20.yz, cb10[r0.y + 9].xxyx
    dp3 r20.w, r16.xyzx, r20.xyzx
    dp3 r20.x, r19.xyzx, r20.xyzx
    add r20.x, r20.x, -cb10[r0.y + 9].z
    ge r20.y, r20.x, l(0.000000)
    max r20.x, r10.w, |r20.x|
    movc r20.x, r20.y, r20.x, -r20.x
    max r20.y, -r20.w, l(0.00000010)
    div r20.x, r20.x, r20.y
    min r19.w, r19.w, |r20.x|
    mov r20.x, cb10[r0.y + 9].w
    mov r20.yz, cb10[r0.y + 10].xxyx
    dp3 r20.w, r16.xyzx, r20.xyzx
    dp3 r20.x, r19.xyzx, r20.xyzx
    add r20.x, r20.x, -cb10[r0.y + 10].z
    ge r20.y, r20.x, l(0.000000)
    max r20.x, r10.w, |r20.x|
    movc r20.x, r20.y, r20.x, -r20.x
    max r20.y, -r20.w, l(0.00000010)
    div r20.x, r20.x, r20.y
    min r19.w, r19.w, |r20.x|
    mov r20.x, cb10[r0.y + 10].w
    mov r20.yz, cb10[r0.y + 11].xxyx
    dp3 r20.w, r16.xyzx, r20.xyzx
    dp3 r20.x, r19.xyzx, r20.xyzx
    add r20.x, r20.x, -cb10[r0.y + 11].z
    ge r20.y, r20.x, l(0.000000)
    max r20.x, r10.w, |r20.x|
    movc r20.x, r20.y, r20.x, -r20.x
    max r20.y, -r20.w, l(0.00000010)
    div r20.x, r20.x, r20.y
    min r19.w, r19.w, |r20.x|
    mov r20.x, cb10[r0.y + 11].w
    mov r20.yz, cb10[r0.y + 12].xxyx
    dp3 r20.w, r16.xyzx, r20.xyzx
    dp3 r20.x, r19.xyzx, r20.xyzx
    add r20.x, r20.x, -cb10[r0.y + 12].z
    ge r20.y, r20.x, l(0.000000)
    max r20.x, r10.w, |r20.x|
    movc r20.x, r20.y, r20.x, -r20.x
    max r20.y, -r20.w, l(0.00000010)
    div r20.x, r20.x, r20.y
    min r19.w, r19.w, |r20.x|
    mov r20.x, cb10[r0.y + 12].w
    mov r20.yz, cb10[r0.y + 13].xxyx
    dp3 r20.w, r16.xyzx, r20.xyzx
    dp3 r20.x, r19.xyzx, r20.xyzx
    add r20.x, r20.x, -cb10[r0.y + 13].z
    ge r20.y, r20.x, l(0.000000)
    max r10.w, r10.w, |r20.x|
    movc r10.w, r20.y, r10.w, -r10.w
    max r20.x, -r20.w, l(0.00000010)
    div r10.w, r10.w, r20.x
    min r10.w, |r10.w|, r19.w
    add r20.x, r19.x, cb10[r0.y + 3].w
    add r20.yz, r19.yyzy, cb10[r0.y + 4].xxyx
    mad r20.xyz, r16.xyzx, r10.wwww, r20.xyzx
    dp3 r19.w, r20.xyzx, r20.xyzx
    sqrt r19.w, r19.w
    div r10.w, r10.w, r19.w
    add r10.w, r10.w, r10.w
    sqrt r10.w, r10.w
    mad r7.w, r7.w, l(5.000000), r10.w
    add r7.w, r7.w, l(-0.844800)
    mov r21.x, cb10[r0.y + 0].w
    mov r21.y, cb10[r0.y + 1].z
    mov r21.z, cb10[r0.y + 2].y
    dp3 r22.x, r20.xyzx, r21.xyzx
    mov r23.xy, cb10[r0.y + 1].xwxx
    mov r23.z, cb10[r0.y + 2].z
    dp3 r22.y, r20.xyzx, r23.xyzx
    mov r24.x, cb10[r0.y + 1].y
    mov r24.yz, cb10[r0.y + 2].xxwx
    dp3 r22.z, r20.xyzx, r24.xyzx
    ubfe r10.w, l(9), l(16), cb10[r0.y + 7].z
    utof r22.w, r10.w
    sample_l_indexable(texturecubearray)(float,float,float,float) r20.xyz, r22.xyzw, t8.xyzw, s2, r7.w
    and r25.xyz, r20.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
    ieq r25.xyz, r25.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
    or r7.w, r25.y, r25.x
    or r7.w, r25.z, r7.w
    movc r20.xyz, r7.wwww, l(1.000000,1.000000,0,0), r20.xyzx
    dp3 r25.x, r19.xyzx, r21.xyzx
    dp3 r25.y, r19.xyzx, r23.xyzx
    dp3 r25.z, r19.xyzx, r24.xyzx
    mad_sat r19.xyz, r25.xyzx, cb10[r0.y + 3].xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    mul r25.xy, r19.xyxx, cb10[r0.y + 4].zwzz
    mul r25.z, r19.z, cb10[r0.y + 5].x
    add r19.xyz, r25.xyzx, cb10[r0.y + 5].yzwy
    dp3 r22.x, r12.xyzx, r21.xyzx
    dp3 r22.y, r12.xyzx, r23.xyzx
    dp3 r22.z, r12.xyzx, r24.xyzx
    lt r21.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r22.xyzx
    movc r23.z, r21.x, l(0), l(0.500000)
    mov r23.xy, l(0,0,0,0)
    add r23.xyz, r19.xyzx, r23.xyzx
    sample_l_indexable(texture3d)(float,float,float,float) r23.xyz, r23.xyzx, t17.xyzw, s4, l(0.000000)
    mul r24.xyz, r22.xyzx, r22.xyzx
    mul r24.xyz, r18.wwww, r24.xyzx
    movc r25.z, r21.y, l(0), l(0.500000)
    mov r25.xy, l(0,0,0,0)
    add r21.xyw, r19.xyxz, r25.xyxz
    sample_l_indexable(texture3d)(float,float,float,float) r21.xyw, r21.xywx, t18.xywz, s4, l(0.000000)
    mul r21.xyw, r24.yyyy, r21.xyxw
    mad r21.xyw, r23.xyxz, r24.xxxx, r21.xyxw
    movc r23.z, r21.z, l(0), l(0.500000)
    mov r23.xy, l(0,0,0,0)
    add r19.xyz, r19.xyzx, r23.xyzx
    sample_l_indexable(texture3d)(float,float,float,float) r19.xyz, r19.xyzx, t19.xyzw, s4, l(0.000000)
    mad r19.xyz, r19.xyzx, r24.zzzz, r21.xywx
    sample_l_indexable(texturecubearray)(float,float,float,float) r21.xyz, r22.xyzw, t8.xyzw, s2, l(6.000000)
    and r22.xyz, r21.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
    ieq r22.xyz, r22.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
    or r0.y, r22.y, r22.x
    or r0.y, r22.z, r0.y
    movc r21.xyz, r0.yyyy, l(1.000000,1.000000,0,0), r21.xyzx
    mul r22.xyz, r19.xyzx, r21.xyzx
    dp3 r0.y, r22.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
    mad r17.xyz, r19.xyzx, r21.xyzx, r17.xyzx
    mul r7.w, r0.y, r13.w
    mul r19.xyz, r18.wwww, r20.xyzx
    dp3 r10.w, r19.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
    mad r0.y, r13.w, r0.y, r10.w
    div r0.y, r7.w, r0.y
    mad r18.xyz, r19.xyzx, r0.yyyy, r18.xyzx
  else 
    mov r17.w, r15.w
  endif 
else 
  mov r17.w, r15.w
  mov r15.y, r15.z
endif 
ge r0.y, r15.w, l(1.000000)
bfi r7.w, l(8), l(0), r15.y, r15.z
movc r0.y, r0.y, r7.w, r15.y
max r7.w, r17.w, l(1.000000)
rcp r7.w, r7.w
mov_sat r17.w, r17.w
mul r15.yzw, r7.wwww, r17.xxyz
mul r18.xyz, r7.wwww, r18.xyzx
lt r10.w, r17.w, l(0.990000)
if_nz r10.w
  iadd r0.y, r0.y, l(256)
  add r10.w, -r17.w, l(1.000000)
  mul r13.w, r10.w, cb2[19].x
  add r19.xyz, r11.xyzx, -cb2[35].xyzx
  mul r20.x, r19.x, cb2[35].w
  mul r20.yz, r19.yyzy, cb2[36].xxyx
  add_sat r19.xyz, r20.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mul r20.xy, r19.xyxx, cb2[36].zwzz
  mul r20.z, r19.z, cb2[37].x
  add r19.xyz, r20.xyzx, cb2[37].yzwy
  lt r20.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r12.xyzx
  movc r20.xyz, r20.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
  mov r20.w, l(0)
  add r21.xyz, r19.xyzx, r20.wwxw
  sample_l_indexable(texture3d)(float,float,float,float) r21.xyz, r21.xyzx, t17.xyzw, s4, l(0.000000)
  mul r22.xyz, r12.xyzx, r12.xyzx
  mul r22.xyz, r13.wwww, r22.xyzx
  add r23.xyz, r19.xyzx, r20.wwyw
  sample_l_indexable(texture3d)(float,float,float,float) r23.xyz, r23.xyzx, t18.xyzw, s4, l(0.000000)
  mul r23.xyz, r22.yyyy, r23.xyzx
  mad r21.xyz, r21.xyzx, r22.xxxx, r23.xyzx
  add r19.xyz, r19.xyzx, r20.wwzw
  sample_l_indexable(texture3d)(float,float,float,float) r19.xyz, r19.xyzx, t19.xyzw, s4, l(0.000000)
  mad r19.xyz, r19.xyzx, r22.zzzz, r21.xyzx
  mov r12.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r20.xyz, r12.xyzw, t8.xyzw, s2, l(6.000000)
  mul r19.xyz, r19.xyzx, r20.xyzx
  dp3 r12.w, r19.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  mad r15.yzw, r17.xxyz, r7.wwww, r19.xxyz
  mov r16.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r17.xyz, r16.xyzw, t8.xyzw, s2, r9.w
  mad r7.w, cb2[19].x, r10.w, -r12.w
  mad r7.w, r2.y, r7.w, r12.w
  mad r18.xyz, r17.xyzx, r7.wwww, r18.xyzx
endif 
add r1.w, -r1.w, l(1.000000)
mad r14.yzw, r18.xxyz, r1.wwww, r14.yyzw
add r1.w, r5.x, r2.x
log r1.w, |r1.w|
mul r1.w, r1.w, r2.w
exp r1.w, r1.w
add r1.w, r5.x, r1.w
add_sat r1.w, r1.w, l(-1.000000)
mul r1.w, r4.z, r1.w
mul r17.xyz, r5.xxxx, r15.yzwy
mad r15.yz, r2.xxyx, l(0.000000, 0.984375, 0.984375, 0.000000), l(0.000000, 0.00781250, 0.00781250, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r15.yz, r15.yzyy, t5.zxyw, s2, l(0.000000)
mul r14.yzw, r1.wwww, r14.yyzw
mul r18.xyz, r15.yyyy, r14.zwyz
mul r14.yzw, r15.zzzz, r14.yyzw
sqrt r1.w, r2.w
mad r1.w, r1.w, l(0.500000), l(0.500000)
mul r1.w, r1.w, r1.w
mul r2.y, r1.w, l(0.500000)
mad r1.w, -r1.w, l(0.500000), l(1.000000)
mad r4.z, r2.x, r1.w, r2.y
mul r1.w, r1.w, r4.z
mul r2.y, r2.y, r4.z
if_nz r3.z
  mov r19.x, l(3)
  mov r19.yzw, cb1[24].xxyz
  store_structured u2.xyzw, cb2[52].x, l(112), r19.xyzw
endif 
lt r4.z, l(0.000000), r6.w
if_nz r4.z
  if_nz r3.z
    ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r4.z, cb2[52].x, l(112), u2.xxxx
    or r4.z, r4.z, l(4)
    store_structured u2.x, cb2[52].x, l(112), r4.z
    store_structured u2.x, cb2[52].x, l(128), r8.w
  endif 
  lt r4.z, l(0.000000), r8.w
  if_nz r4.z
    mul r4.z, r2.z, cb2[18].w
    mul r4.z, r6.w, r4.z
    if_nz cb2[23].x
      add r19.xyz, r11.xyzx, cb1[24].xyzx
      mov r19.w, l(1.000000)
      dp4 r5.x, cb2[24].xyzw, r19.xyzw
      dp4 r7.w, cb2[25].xyzw, r19.xyzw
      frc r19.x, r5.x
      frc r19.y, r7.w
      iadd r5.x, l(-1), cb2[23].x
      utof r19.z, r5.x
      sample_l_indexable(texture2darray)(float,float,float,float) r15.yzw, r19.xyzx, t20.wxyz, s2, l(0.000000)
      add r15.yzw, r15.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
      mad r15.yzw, cb2[23].yyyy, r15.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
      mul r15.yzw, r15.yyzw, cb2[18].xxyz
    else 
      mov r15.yzw, cb2[18].xxyz
    endif 
    ushr r5.x, cb2[53].x, l(16)
    ult r7.w, l(0), r5.x
    and r7.w, r1.z, r7.w
    if_nz r7.w
      iadd r5.x, r5.x, cb2[0].x
      imad r5.x, r5.x, l(15), l(-15)
      mad r7.w, |r4.w|, l(-0.200000), l(0.400000)
      mad r19.xyz, r12.xyzx, r7.wwww, r11.xyzx
      mov r20.xyz, cb9[r5.x + 4].yzwy
      mov r20.w, cb9[r5.x + 5].x
      mov r19.w, l(1.000000)
      dp4 r20.x, r20.xyzw, r19.xyzw
      mov r21.xyz, cb9[r5.x + 5].yzwy
      mov r21.w, cb9[r5.x + 6].x
      dp4 r20.y, r21.xyzw, r19.xyzw
      mad r20.xy, r20.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      add r21.x, r20.x, cb9[r5.x + 9].w
      add r21.y, r20.y, cb9[r5.x + 10].x
      mul r20.xy, r21.xyxx, cb9[r5.x + 9].yzyy
      div r20.zw, cb9[r5.x + 3].yyyy, cb9[r5.x + 8].yyyw
      add r21.xy, -r20.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
      ge r21.xy, r20.xyxx, r21.xyxx
      ge r20.zw, r20.zzzw, r20.xxxy
      or r20.zw, r20.zzzw, r21.xxxy
      or r7.w, r20.w, r20.z
      if_z r7.w
        mov r21.xyz, cb9[r5.x + 6].yzwy
        mov r21.w, cb9[r5.x + 7].x
        dp4 r7.w, r21.xyzw, r19.xyzw
        mov_sat r20.xy, r20.xyxx
        mad r19.x, r20.x, cb9[r5.x + 8].y, cb9[r5.x + 8].z
        mad r19.y, r20.y, cb9[r5.x + 8].w, cb9[r5.x + 9].x
        add r7.w, r7.w, cb9[r5.x + 10].y
        div r7.w, r7.w, cb9[r5.x + 10].z
        max r7.w, r7.w, l(0.00006104)
        and r9.w, l(0x0000ffff), cb9[r5.x + 1].w
        if_nz cb2[58].y
          mov r20.x, -r4.x
          utof r21.z, r9.w
          mov r20.y, r13.x
          mov r20.z, r4.x
          mov r10.w, l(0)
          mov r12.w, l(0)
          loop 
            ige r13.w, r12.w, l(8)
            breakc_nz r13.w
            dp2 r22.x, icb[r12.w + 0].yxyy, r20.xyxx
            dp2 r22.y, icb[r12.w + 0].yxyy, r20.yzyy
            mad r21.xy, r22.xyxx, cb9[r5.x + 3].yyyy, r19.xyxx
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r13.w, r21.xyzx, t9.xxxx, s13, r7.w
            mad r10.w, r13.w, l(0.125000), r10.w
            iadd r12.w, r12.w, l(1)
          endloop 
        else 
          utof r19.z, r9.w
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.w, r19.xyzx, t9.xxxx, s13, r7.w
        endif 
        mul r5.x, r10.w, r10.w
        mul r5.x, r10.w, r5.x
      else 
        mov r5.x, l(1.000000)
      endif 
      mul r8.w, r5.x, r8.w
    else 
      and r5.x, cb2[53].x, l(0x0000ffff)
      ult r7.w, l(0), r5.x
      not r9.w, r1.z
      and r7.w, r7.w, r9.w
      if_nz r7.w
        iadd r5.x, r5.x, cb2[0].x
        imad r5.x, r5.x, l(15), l(-15)
        mad r7.w, |r4.w|, l(-0.200000), l(0.400000)
        mad r19.xyz, r12.xyzx, r7.wwww, r11.xyzx
        mov r20.xyz, cb9[r5.x + 4].yzwy
        mov r20.w, cb9[r5.x + 5].x
        mov r19.w, l(1.000000)
        dp4 r20.x, r20.xyzw, r19.xyzw
        mov r21.xyz, cb9[r5.x + 5].yzwy
        mov r21.w, cb9[r5.x + 6].x
        dp4 r20.y, r21.xyzw, r19.xyzw
        mad r20.xy, r20.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
        add r21.x, r20.x, cb9[r5.x + 9].w
        add r21.y, r20.y, cb9[r5.x + 10].x
        mul r20.xy, r21.xyxx, cb9[r5.x + 9].yzyy
        div r20.zw, cb9[r5.x + 3].yyyy, cb9[r5.x + 8].yyyw
        add r21.xy, -r20.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
        ge r21.xy, r20.xyxx, r21.xyxx
        ge r20.zw, r20.zzzw, r20.xxxy
        or r20.zw, r20.zzzw, r21.xxxy
        or r7.w, r20.w, r20.z
        if_z r7.w
          mov r21.xyz, cb9[r5.x + 6].yzwy
          mov r21.w, cb9[r5.x + 7].x
          dp4 r7.w, r21.xyzw, r19.xyzw
          mov_sat r20.xy, r20.xyxx
          mad r19.x, r20.x, cb9[r5.x + 8].y, cb9[r5.x + 8].z
          mad r19.y, r20.y, cb9[r5.x + 8].w, cb9[r5.x + 9].x
          add r7.w, r7.w, cb9[r5.x + 10].y
          div r7.w, r7.w, cb9[r5.x + 10].z
          max r7.w, r7.w, l(0.00006104)
          and r9.w, l(0x0000ffff), cb9[r5.x + 1].w
          if_nz cb2[58].y
            mov r20.x, -r4.x
            utof r21.z, r9.w
            mov r20.y, r13.x
            mov r20.z, r4.x
            mov r10.w, l(0)
            mov r12.w, l(0)
            loop 
              ige r13.w, r12.w, l(8)
              breakc_nz r13.w
              dp2 r22.x, icb[r12.w + 0].yxyy, r20.xyxx
              dp2 r22.y, icb[r12.w + 0].yxyy, r20.yzyy
              mad r21.xy, r22.xyxx, cb9[r5.x + 3].yyyy, r19.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r13.w, r21.xyzx, t9.xxxx, s13, r7.w
              mad r10.w, r13.w, l(0.125000), r10.w
              iadd r12.w, r12.w, l(1)
            endloop 
          else 
            utof r19.z, r9.w
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.w, r19.xyzx, t9.xxxx, s13, r7.w
          endif 
          mul r5.x, r10.w, r10.w
          mul r5.x, r10.w, r5.x
        else 
          mov r5.x, l(1.000000)
        endif 
        mul r8.w, r5.x, r8.w
      endif 
    endif 
    mad r5.x, -r2.x, l(0.500000), l(1.000000)
    mad r5.x, -r6.w, r5.x, l(1.000000)
    mul r5.x, r5.x, r5.x
    mad r5.x, -r5.x, l(0.620000), l(0.620000)
    add r5.x, -r6.w, r5.x
    mad r5.x, r2.w, r5.x, r6.w
    mul r5.x, r8.w, r5.x
    lt r4.w, l(0.000000), r4.w
    mad r19.xyz, r5.xxxx, r15.yzwy, r17.xyzx
    mad r20.xyz, -r11.xyzx, r0.wwww, cb2[17].xyzx
    dp3 r0.w, r20.xyzx, r20.xyzx
    rsq r0.w, r0.w
    mul r20.xyz, r0.wwww, r20.xyzx
    dp3 r0.w, r20.xyzx, r5.yzwy
    dp3 r5.x, r12.xyzx, r20.xyzx
    mad r7.w, |r5.x|, r2.z, -|r5.x|
    mad r5.x, |r5.x|, r7.w, l(1.000000)
    mad r6.w, r6.w, r1.w, r2.y
    mul r5.x, r5.x, r5.x
    mul r5.x, r6.w, r5.x
    rcp r5.x, r5.x
    mul r4.z, r4.z, r5.x
    mul r4.z, r4.z, r8.w
    mul r4.z, r4.z, l(0.250000)
    mad r20.xyz, r4.zzzz, r15.yzwy, r14.yzwy
    add_sat r0.w, -r0.w, l(1.000000)
    mul r5.x, r0.w, r0.w
    mul r5.x, r5.x, r5.x
    mul r0.w, r0.w, r5.x
    mul r0.w, r0.w, r4.z
    mad r21.xyz, r0.wwww, r15.zwyz, r18.xyzx
    mov r19.w, r21.z
    mov r17.w, r18.z
    movc r17.xyzw, r4.wwww, r19.xyzw, r17.xyzw
    mov r21.zw, r20.xxxy
    mov r18.zw, r14.yyyz
    movc r19.xyzw, r4.wwww, r21.xyzw, r18.xyzw
    movc r14.w, r4.w, r20.z, r14.w
    if_nz r3.z
      ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r0.w, cb2[52].x, l(112), u2.xxxx
      or r0.w, r0.w, l(8)
      store_structured u2.x, cb2[52].x, l(112), r0.w
      store_structured u2.x, cb2[52].x, l(132), r8.w
    endif 
    mov r18.z, r17.w
    mov r18.xy, r19.xyxx
    mov r14.yz, r19.zzwz
    mov r0.w, l(0x00010101)
  else 
    mov r0.w, l(257)
  endif 
else 
  mov r0.w, l(1)
endif 
ftou r4.z, cb1[44].x
iadd r4.z, r4.z, l(7)
ushr r4.z, r4.z, l(3)
imad r4.z, r0.z, r4.z, r0.x
ishl r4.z, r4.z, l(5)
not r4.w, r1.z
mov r19.x, -r4.x
mad r2.x, -r2.x, l(0.500000), l(1.000000)
mov r20.x, l(2)
mov r21.x, l(2)
mov r22.z, l(1.000000)
mov r23.w, l(1.000000)
mov r24.w, l(1.000000)
mov r25.w, l(1.000000)
mov r19.z, r4.x
mov r26.w, l(1.000000)
mov r19.yw, r13.xxxx
mov r4.y, r19.w
mov r13.y, r19.x
mov r27.x, r13.x
mov r27.y, r19.x
mov r27.z, r4.x
mov r13.z, r4.x
mov r28.w, l(1.000000)
mov r29.x, r13.x
mov r29.y, r19.x
mov r29.z, r4.x
mov r30.x, r13.x
mov r30.y, r19.x
mov r30.z, r4.x
mov r15.yzw, r17.xxyz
mov r31.xyz, r18.zxyz
mov r32.xyz, r14.yzwy
mov r5.x, cb2[58].y
mov r6.w, r0.w
mov r7.w, l(0)
loop 
  uge r8.w, r7.w, cb2[0].x
  breakc_nz r8.w
  ushr r8.w, r7.w, l(5)
  iadd r8.w, r4.z, r8.w
  ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r8.w, r8.w, l(0), t26.xxxx
  mov r33.xyz, r15.yzwy
  mov r34.xyz, r31.xyzx
  mov r35.xyz, r32.xyzx
  mov r9.w, r5.x
  mov r10.w, r6.w
  mov r12.w, r8.w
  loop 
    breakc_z r12.w
    firstbit_lo r13.w, r12.w
    ishl r16.w, l(1), r13.w
    not r16.w, r16.w
    and r12.w, r12.w, r16.w
    iadd r13.w, r7.w, r13.w
    imul null, r13.w, r13.w, l(15)
    ubfe r16.w, l(3), l(24), cb9[r13.w + 1].w
    ieq r17.w, r16.w, l(2)
    if_nz r17.w
      ubfe r17.w, l(3), l(27), cb9[r13.w + 1].w
      and r18.w, r10.w, l(255)
      ult r22.w, r18.w, l(32)
      and r22.w, r3.z, r22.w
      if_nz r22.w
        imad r18.w, r18.w, l(24), l(112)
        add r20.yzw, cb1[24].xxyz, cb9[r13.w + 0].xxyz
        store_structured u2.xyzw, cb2[52].x, r18.w, r20.xyzw
      endif 
      iadd r18.w, r10.w, l(1)
      add r36.xy, -r11.xyxx, cb9[r13.w + 3].zwzz
      add r36.z, -r11.z, cb9[r13.w + 4].x
      dp3 r20.y, r36.xyzx, r36.xyzx
      rsq r20.y, r20.y
      mul r37.xyz, r20.yyyy, r36.xyzx
      mul r20.z, r2.z, cb9[r13.w + 1].z
      mul r20.z, r20.z, l(0.250000)
      dp3 r20.w, r12.xyzx, r37.xyzx
      mov_sat r22.w, r20.w
      lt r27.w, l(0.000000), r22.w
      if_nz r27.w
        mov r37.xyz, cb9[r13.w + 7].yzwy
        mov r37.w, cb9[r13.w + 8].x
        dp4 r27.w, r37.xyzw, r11.xyzw
        lt r29.w, r27.w, l(1.000000)
        if_nz r29.w
          mov r38.xyz, l(1.000000,1.000000,1.000000,0)
          mov r29.w, l(0)
        else 
          add r39.xyz, -r11.xyzx, cb9[r13.w + 0].xyzx
          mul r30.w, cb9[r13.w + 3].x, cb9[r13.w + 3].x
          dp3 r31.w, r39.xyzx, r39.xyzx
          div r30.w, r30.w, r31.w
          min r30.w, r30.w, l(1.000000)
          mad_sat r39.xy, r27.wwww, cb9[r13.w + 2].xzxx, cb9[r13.w + 2].ywyy
          mul r39.zw, r39.xxxy, r39.xxxy
          mad r39.xy, r39.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
          mul r39.xy, r39.xyxx, r39.zwzz
          mul r30.w, r30.w, r39.x
          mul r30.w, r39.y, r30.w
          mov r39.xyz, cb9[r13.w + 4].yzwy
          mov r39.w, cb9[r13.w + 5].x
          dp4 r39.x, r39.xyzw, r11.xyzw
          mov r40.xyz, cb9[r13.w + 5].yzwy
          mov r40.w, cb9[r13.w + 6].x
          dp4 r39.y, r40.xyzw, r11.xyzw
          div r22.xy, r39.xyxx, r27.wwww
          lt r27.w, cb9[r13.w + 10].w, l(0.00048828)
          if_nz r27.w
            mad_sat r39.xy, |r22.xyxx|, cb9[r13.w + 12].xyxx, cb9[r13.w + 12].zwzz
            mul r39.zw, r39.xxxy, r39.xxxy
            mad r39.xy, r39.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
            mul r39.xy, r39.xyxx, r39.zwzz
            mul r27.w, r39.y, r39.x
          else 
            mul_sat r39.xyzw, |r22.yyxx|, cb9[r13.w + 11].xyzw
            log r39.xyzw, r39.xyzw
            mul r39.xyzw, r39.xyzw, cb9[r13.w + 12].zzzz
            exp r39.xyzw, r39.xyzw
            add r39.xy, r39.zwzz, r39.xyxx
            log r39.xy, r39.xyxx
            mul r39.xy, r39.xyxx, cb9[r13.w + 12].wwww
            exp r39.xy, r39.xyxx
            mul r31.w, r39.x, cb9[r13.w + 12].x
            mad r32.w, cb9[r13.w + 12].y, r39.y, l(-1.000000)
            mad r31.w, cb9[r13.w + 12].y, r39.y, -r31.w
            div_sat r31.w, r32.w, r31.w
            mul r32.w, r31.w, r31.w
            mad r31.w, r31.w, l(-2.000000), l(3.000000)
            mul r27.w, r31.w, r32.w
          endif 
          mul r29.w, r27.w, r30.w
          and r27.w, l(255), cb9[r13.w + 14].w
          if_nz r27.w
            dp3 r30.w, cb9[r13.w + 13].xyzx, r22.xyzx
            mov r39.x, cb9[r13.w + 13].w
            mov r39.yz, cb9[r13.w + 14].xxyx
            dp3 r22.x, r39.xyzx, r22.xyzx
            frc r39.x, r30.w
            frc r39.y, r22.x
            iadd r22.x, r27.w, l(-1)
            utof r39.z, r22.x
            sample_l_indexable(texture2darray)(float,float,float,float) r38.xyz, r39.xyzx, t20.xyzw, s2, l(0.000000)
          else 
            mov r38.xyz, l(1.000000,1.000000,1.000000,0)
          endif 
        endif 
        mov r39.x, cb9[r13.w + 0].w
        mov r39.yz, cb9[r13.w + 1].xxyx
        mul r38.xyz, r38.xyzx, r39.xyzx
        lt r22.x, l(0.000000), r29.w
        if_nz r22.x
          and r22.x, r18.w, l(255)
          iadd r22.y, r22.x, l(-1)
          ult r22.y, r22.y, l(32)
          and r22.y, r3.z, r22.y
          if_nz r22.y
            imad r22.xy, r22.xxxx, l(24, 24, 0, 0), l(88, 104, 0, 0)
            ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r27.w, cb2[52].x, r22.x, u2.xxxx
            or r27.w, r27.w, l(4)
            store_structured u2.x, cb2[52].x, r22.x, r27.w
            store_structured u2.x, cb2[52].x, r22.y, r29.w
          endif 
          iadd r22.x, r10.w, l(257)
          ine r17.w, r17.w, l(1)
          if_nz r17.w
            mad r17.w, |r20.w|, l(-0.200000), l(0.400000)
            mad r23.xyz, r12.xyzx, r17.wwww, r11.xyzx
            mov r39.xyz, cb9[r13.w + 6].yzwy
            mov r39.w, cb9[r13.w + 7].x
            dp4 r17.w, r39.xyzw, r23.xyzw
            dp4 r22.y, r37.xyzw, r23.xyzw
            ge r27.w, r22.y, r17.w
            if_nz r27.w
              mov r37.xyz, cb9[r13.w + 4].yzwy
              mov r37.w, cb9[r13.w + 5].x
              dp4 r37.x, r37.xyzw, r23.xyzw
              mov r39.xyz, cb9[r13.w + 5].yzwy
              mov r39.w, cb9[r13.w + 6].x
              dp4 r37.y, r39.xyzw, r23.xyzw
              div r23.xy, r37.xyxx, r22.yyyy
              mad_sat r23.xy, r23.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
              mad r37.x, r23.x, cb9[r13.w + 8].y, cb9[r13.w + 8].z
              mad r37.y, r23.y, cb9[r13.w + 8].w, cb9[r13.w + 9].x
              div r17.w, r17.w, r22.y
              max r17.w, r17.w, l(0.00006104)
              and r22.y, l(0x0000ffff), cb9[r13.w + 1].w
              if_nz r9.w
                utof r23.z, r22.y
                mov r27.w, l(0)
                mov r30.w, l(0)
                loop 
                  ige r31.w, r30.w, l(8)
                  breakc_nz r31.w
                  dp2 r39.x, icb[r30.w + 0].yxyy, r19.xyxx
                  dp2 r39.y, icb[r30.w + 0].yxyy, r19.yzyy
                  mad r23.xy, r39.xyxx, cb9[r13.w + 3].yyyy, r37.xyxx
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.x, r23.xyzx, t9.xxxx, s13, r17.w
                  mad r27.w, r23.x, l(0.125000), r27.w
                  iadd r30.w, r30.w, l(1)
                endloop 
              else 
                utof r37.z, r22.y
                sample_c_lz_indexable(texture2darray)(float,float,float,float) r27.w, r37.xyzx, t9.xxxx, s13, r17.w
              endif 
              mul r17.w, r27.w, r27.w
              mul r17.w, r27.w, r17.w
            else 
              mov r17.w, l(1.000000)
            endif 
          else 
            mov r17.w, l(1.000000)
          endif 
          mul r17.w, r17.w, r29.w
          lt r22.y, l(0.000000), r17.w
          if_nz r22.y
            ubfe r22.y, l(4), l(16), cb9[r13.w + 1].w
            ult r23.x, l(0), r22.y
            and r23.x, r1.z, r23.x
            if_nz r23.x
              iadd r22.y, r22.y, cb2[0].x
              imad r22.y, r22.y, l(15), l(-15)
              mad r23.x, |r20.w|, l(-0.200000), l(0.400000)
              mad r24.xyz, r12.xyzx, r23.xxxx, r11.xyzx
              mov r37.xyz, cb9[r22.y + 6].yzwy
              mov r37.w, cb9[r22.y + 7].x
              dp4 r23.x, r37.xyzw, r24.xyzw
              mov r37.xyz, cb9[r22.y + 7].yzwy
              mov r37.w, cb9[r22.y + 8].x
              dp4 r23.y, r37.xyzw, r24.xyzw
              lt r23.z, r23.y, r23.x
              if_z r23.z
                mov r37.xyz, cb9[r22.y + 4].yzwy
                mov r37.w, cb9[r22.y + 5].x
                dp4 r37.x, r37.xyzw, r24.xyzw
                mov r39.xyz, cb9[r22.y + 5].yzwy
                mov r39.w, cb9[r22.y + 6].x
                dp4 r37.y, r39.xyzw, r24.xyzw
                div r24.xy, r37.xyxx, r23.yyyy
                mad r24.xy, r24.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                add r37.x, r24.x, cb9[r22.y + 9].w
                add r37.y, r24.y, cb9[r22.y + 10].x
                mul r24.xy, r37.xyxx, cb9[r22.y + 9].yzyy
                div r37.xy, cb9[r22.y + 3].yyyy, cb9[r22.y + 8].ywyy
                add r37.zw, -r37.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                ge r37.zw, r24.xxxy, r37.zzzw
                ge r37.xy, r37.xyxx, r24.xyxx
                or r37.xy, r37.xyxx, r37.zwzz
                or r24.z, r37.y, r37.x
                if_z r24.z
                  mov_sat r24.xy, r24.xyxx
                  mad r37.x, r24.x, cb9[r22.y + 8].y, cb9[r22.y + 8].z
                  mad r37.y, r24.y, cb9[r22.y + 8].w, cb9[r22.y + 9].x
                  mul r24.x, r23.y, cb9[r22.y + 10].z
                  mad r23.x, cb9[r22.y + 10].y, r23.y, r23.x
                  div r23.x, r23.x, r24.x
                endif 
              else 
                mov r24.z, l(-1)
              endif 
              or r23.y, r23.z, r24.z
              if_z r23.y
                max r23.x, r23.x, l(0.00006104)
                and r23.y, l(0x0000ffff), cb9[r22.y + 1].w
                if_nz r9.w
                  utof r24.z, r23.y
                  mov r23.z, l(0)
                  mov r29.w, l(0)
                  loop 
                    ige r30.w, r29.w, l(8)
                    breakc_nz r30.w
                    dp2 r39.x, icb[r29.w + 0].yxyy, r19.xwxx
                    dp2 r39.y, icb[r29.w + 0].xyxx, r4.xyxx
                    mad r24.xy, r39.xyxx, cb9[r22.y + 3].yyyy, r37.xyxx
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.x, r24.xyzx, t9.xxxx, s13, r23.x
                    mad r23.z, r24.x, l(0.125000), r23.z
                    iadd r29.w, r29.w, l(1)
                  endloop 
                else 
                  utof r37.z, r23.y
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.z, r37.xyzx, t9.xxxx, s13, r23.x
                endif 
                mul r22.y, r23.z, r23.z
                mul r22.y, r23.z, r22.y
              else 
                mov r22.y, l(1.000000)
              endif 
              mul r17.w, r17.w, r22.y
            else 
              ubfe r22.y, l(4), l(20), cb9[r13.w + 1].w
              ult r23.x, l(0), r22.y
              and r23.x, r4.w, r23.x
              if_nz r23.x
                iadd r22.y, r22.y, cb2[0].x
                imad r22.y, r22.y, l(15), l(-15)
                mad r23.x, |r20.w|, l(-0.200000), l(0.400000)
                mad r25.xyz, r12.xyzx, r23.xxxx, r11.xyzx
                mov r37.xyz, cb9[r22.y + 6].yzwy
                mov r37.w, cb9[r22.y + 7].x
                dp4 r23.x, r37.xyzw, r25.xyzw
                mov r37.xyz, cb9[r22.y + 7].yzwy
                mov r37.w, cb9[r22.y + 8].x
                dp4 r23.y, r37.xyzw, r25.xyzw
                lt r24.x, r23.y, r23.x
                if_z r24.x
                  mov r37.xyz, cb9[r22.y + 4].yzwy
                  mov r37.w, cb9[r22.y + 5].x
                  dp4 r37.x, r37.xyzw, r25.xyzw
                  mov r39.xyz, cb9[r22.y + 5].yzwy
                  mov r39.w, cb9[r22.y + 6].x
                  dp4 r37.y, r39.xyzw, r25.xyzw
                  div r24.yz, r37.xxyx, r23.yyyy
                  mad r24.yz, r24.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
                  add r25.x, r24.y, cb9[r22.y + 9].w
                  add r25.y, r24.z, cb9[r22.y + 10].x
                  mul r24.yz, r25.xxyx, cb9[r22.y + 9].yyzy
                  div r25.xy, cb9[r22.y + 3].yyyy, cb9[r22.y + 8].ywyy
                  add r37.xy, -r25.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                  ge r37.xy, r24.yzyy, r37.xyxx
                  ge r25.xy, r25.xyxx, r24.yzyy
                  or r25.xy, r25.xyxx, r37.xyxx
                  or r25.x, r25.y, r25.x
                  if_z r25.x
                    mov_sat r24.yz, r24.yyzy
                    mad r37.x, r24.y, cb9[r22.y + 8].y, cb9[r22.y + 8].z
                    mad r37.y, r24.z, cb9[r22.y + 8].w, cb9[r22.y + 9].x
                    mul r24.y, r23.y, cb9[r22.y + 10].z
                    mad r23.x, cb9[r22.y + 10].y, r23.y, r23.x
                    div r23.x, r23.x, r24.y
                  endif 
                else 
                  mov r25.x, l(-1)
                endif 
                or r23.y, r24.x, r25.x
                if_z r23.y
                  max r23.x, r23.x, l(0.00006104)
                  and r23.y, l(0x0000ffff), cb9[r22.y + 1].w
                  if_nz r9.w
                    utof r24.z, r23.y
                    mov r25.xy, l(0,0,0,0)
                    loop 
                      ige r25.z, r25.y, l(8)
                      breakc_nz r25.z
                      dp2 r39.x, icb[r25.y + 0].xyxx, r27.xyxx
                      dp2 r39.y, icb[r25.y + 0].yxyy, r27.xzxx
                      mad r24.xy, r39.xyxx, cb9[r22.y + 3].yyyy, r37.xyxx
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.x, r24.xyzx, t9.xxxx, s13, r23.x
                      mad r25.x, r24.x, l(0.125000), r25.x
                      iadd r25.y, r25.y, l(1)
                    endloop 
                  else 
                    utof r37.z, r23.y
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r25.x, r37.xyzx, t9.xxxx, s13, r23.x
                  endif 
                  mul r22.y, r25.x, r25.x
                  mul r22.y, r25.x, r22.y
                else 
                  mov r22.y, l(1.000000)
                endif 
                mul r17.w, r17.w, r22.y
              endif 
            endif 
            mad r22.y, -r22.w, r2.x, l(1.000000)
            mul r22.y, r22.y, r22.y
            mad r22.y, -r22.y, l(0.620000), l(0.620000)
            add r22.y, -r22.w, r22.y
            mad r22.y, r2.w, r22.y, r22.w
            mul r22.y, r17.w, r22.y
            lt r20.w, l(0.000000), r20.w
            mad r24.xyz, r22.yyyy, r38.xyzx, r33.xyzx
            mad r36.xyz, r36.xyzx, r20.yyyy, r5.yzwy
            dp3 r20.y, r36.xyzx, r36.xyzx
            rsq r20.y, r20.y
            mul r36.xyz, r20.yyyy, r36.xyzx
            dp3 r20.y, r36.xyzx, r5.yzwy
            dp3 r22.y, r12.xyzx, r36.xyzx
            mad r23.x, |r22.y|, r2.z, -|r22.y|
            mad r22.y, |r22.y|, r23.x, l(1.000000)
            mad r23.x, r22.w, r1.w, r2.y
            mul r22.y, r22.y, r22.y
            mul r22.y, r23.x, r22.y
            rcp r22.y, r22.y
            mul r20.z, r20.z, r22.w
            mul r20.z, r20.z, r22.y
            mul r20.z, r17.w, r20.z
            mad r36.xyz, r20.zzzz, r38.xyzx, r35.xyzx
            add_sat r20.y, -r20.y, l(1.000000)
            mul r22.y, r20.y, r20.y
            mul r22.y, r22.y, r22.y
            mul r20.y, r20.y, r22.y
            mul r20.y, r20.y, r20.z
            mad r37.xyz, r20.yyyy, r38.xyzx, r34.xyzx
            movc r33.xyz, r20.wwww, r24.xyzx, r33.xyzx
            movc r34.xyz, r20.wwww, r37.xyzx, r34.xyzx
            movc r35.xyz, r20.wwww, r36.xyzx, r35.xyzx
            and r20.y, r22.x, l(255)
            iadd r20.z, r20.y, l(-1)
            ult r20.z, r20.z, l(32)
            and r20.z, r3.z, r20.z
            if_nz r20.z
              imad r20.yz, r20.yyyy, l(0, 24, 24, 0), l(0, 88, 108, 0)
              ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r20.w, cb2[52].x, r20.y, u2.xxxx
              or r20.w, r20.w, l(8)
              store_structured u2.x, cb2[52].x, r20.y, r20.w
              store_structured u2.x, cb2[52].x, r20.z, r17.w
            endif 
            iadd r10.w, r10.w, l(0x00010101)
          else 
            mov r10.w, r22.x
          endif 
        else 
          mov r10.w, r18.w
        endif 
      else 
        mov r10.w, r18.w
      endif 
    else 
      ieq r16.w, r16.w, l(4)
      if_nz r16.w
        ubfe r16.w, l(3), l(27), cb9[r13.w + 1].w
        and r17.w, r10.w, l(255)
        ult r18.w, r17.w, l(32)
        and r18.w, r3.z, r18.w
        if_nz r18.w
          imad r17.w, r17.w, l(24), l(112)
          add r21.yzw, cb1[24].xxyz, cb9[r13.w + 0].xxyz
          store_structured u2.xyzw, cb2[52].x, r17.w, r21.xyzw
        endif 
        iadd r17.w, r10.w, l(1)
        mul r18.w, r2.z, cb9[r13.w + 1].z
        mul r18.w, r18.w, l(0.250000)
        lt r20.y, l(0.000000), cb9[r13.w + 6].y
        mov r24.xy, cb9[r13.w + 5].zwzz
        mov r24.z, cb9[r13.w + 6].x
        mad r21.yzw, -r24.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000), cb9[r13.w + 0].xxyz
        add r22.xyw, -r11.xyxz, r21.yzyw
        dp3 r20.z, r24.xyzx, r16.xyzx
        dp3 r20.w, r24.xyzx, r22.xywx
        dp3 r22.x, r16.xyzx, r22.xywx
        mad r22.y, -r20.z, r20.z, cb9[r13.w + 6].y
        mad r20.z, r20.z, r22.x, -r20.w
        div_sat r20.w, -r20.w, cb9[r13.w + 6].y
        div_sat r20.z, r20.z, r22.y
        div r22.x, r22.y, cb9[r13.w + 6].y
        mul r22.x, r22.x, l(10.000000)
        min r22.x, r22.x, l(1.000000)
        add r20.z, -r20.w, r20.z
        mad r20.z, r22.x, r20.z, r20.w
        mad r22.xyw, r20.zzzz, r24.xyxz, r21.yzyw
        mad r21.yzw, r20.wwww, r24.xxyz, r21.yyzw
        movc r21.yzw, r20.yyyy, r21.yyzw, cb9[r13.w + 0].xxyz
        movc r20.yzw, r20.yyyy, r22.xxyw, cb9[r13.w + 0].xxyz
        add r20.yzw, -r11.xxyz, r20.yyzw
        add r21.yzw, -r11.xxyz, r21.yyzw
        dp3 r22.x, r20.yzwy, r20.yzwy
        rsq r22.x, r22.x
        mul r24.xyz, r20.yzwy, r22.xxxx
        dp3 r22.y, r21.yzwy, r21.yzwy
        rsq r22.w, r22.y
        mul r21.yzw, r21.yyzw, r22.wwww
        dp3 r21.y, r12.xyzx, r21.yzwy
        mov_sat r21.z, r21.y
        lt r21.w, l(0.000000), r21.z
        if_nz r21.w
          sqrt r21.w, r22.y
          mul r22.w, cb9[r13.w + 3].x, cb9[r13.w + 3].x
          div r22.y, r22.w, r22.y
          min r22.y, r22.y, l(1.000000)
          mad_sat r23.xy, r21.wwww, cb9[r13.w + 2].xzxx, cb9[r13.w + 2].ywyy
          mul r25.yz, r23.xxyx, r23.xxyx
          mad r23.xy, r23.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
          mul r23.xy, r23.xyxx, r25.yzyy
          mul r21.w, r22.y, r23.x
          mul r21.w, r23.y, r21.w
          lt r22.y, l(0.000000), r21.w
          if_nz r22.y
            and r22.y, r17.w, l(255)
            iadd r22.w, r22.y, l(-1)
            ult r22.w, r22.w, l(32)
            and r22.w, r3.z, r22.w
            if_nz r22.w
              imad r22.yw, r22.yyyy, l(0, 24, 0, 24), l(0, 88, 0, 104)
              ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r23.x, cb2[52].x, r22.y, u2.xxxx
              or r23.x, r23.x, l(4)
              store_structured u2.x, cb2[52].x, r22.y, r23.x
              store_structured u2.x, cb2[52].x, r22.w, r21.w
            endif 
            iadd r22.y, r10.w, l(257)
            ine r16.w, r16.w, l(1)
            if_nz r16.w
              mad r16.w, |r21.y|, l(-0.200000), l(0.400000)
              mad r36.xyz, r12.xyzx, r16.wwww, r11.xyzx
              add r36.xyz, r36.xyzx, -cb9[r13.w + 4].yzwy
              max r16.w, |r36.z|, |r36.y|
              max r16.w, r16.w, |r36.x|
              div r16.w, cb9[r13.w + 5].x, r16.w
              add r16.w, r16.w, cb9[r13.w + 5].y
              dp3 r22.w, r36.xyzx, r36.xyzx
              rsq r22.w, r22.w
              max r16.w, r16.w, l(0.00006104)
              and r23.x, l(0x0000ffff), cb9[r13.w + 1].w
              utof r37.w, r23.x
              mov r23.xy, l(0,0,0,0)
              loop 
                ige r25.y, r23.y, l(8)
                breakc_nz r25.y
                dp2 r25.y, icb[r23.y + 0].xyxx, r13.xyxx
                dp2 r25.z, icb[r23.y + 0].yxyy, r13.xzxx
                mul r38.yz, r25.yyzy, cb9[r13.w + 3].yyyy
                mul r38.x, r15.x, r38.y
                mul r38.w, r14.x, r38.y
                mad r37.xyz, r36.xyzx, r22.wwww, r38.xzwx
                sample_c_lz_indexable(texturecubearray)(float,float,float,float) r25.y, r37.xyzw, t10.xxxx, s13, r16.w
                mad r23.x, r25.y, l(0.125000), r23.x
                iadd r23.y, r23.y, l(1)
              endloop 
            else 
              mov r23.x, l(1.000000)
            endif 
            mul r16.w, r21.w, r23.x
            lt r21.w, l(0.000000), r16.w
            if_nz r21.w
              ubfe r21.w, l(4), l(16), cb9[r13.w + 1].w
              ult r22.w, l(0), r21.w
              and r22.w, r1.z, r22.w
              if_nz r22.w
                iadd r21.w, r21.w, cb2[0].x
                imad r21.w, r21.w, l(15), l(-15)
                mad r22.w, |r21.y|, l(-0.200000), l(0.400000)
                mad r26.xyz, r12.xyzx, r22.wwww, r11.xyzx
                mov r36.xyz, cb9[r21.w + 6].yzwy
                mov r36.w, cb9[r21.w + 7].x
                dp4 r22.w, r36.xyzw, r26.xyzw
                mov r36.xyz, cb9[r21.w + 7].yzwy
                mov r36.w, cb9[r21.w + 8].x
                dp4 r23.y, r36.xyzw, r26.xyzw
                lt r25.y, r23.y, r22.w
                if_z r25.y
                  mov r36.xyz, cb9[r21.w + 4].yzwy
                  mov r36.w, cb9[r21.w + 5].x
                  dp4 r36.x, r36.xyzw, r26.xyzw
                  mov r37.xyz, cb9[r21.w + 5].yzwy
                  mov r37.w, cb9[r21.w + 6].x
                  dp4 r36.y, r37.xyzw, r26.xyzw
                  div r26.xy, r36.xyxx, r23.yyyy
                  mad r26.xy, r26.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r36.x, r26.x, cb9[r21.w + 9].w
                  add r36.y, r26.y, cb9[r21.w + 10].x
                  mul r26.xy, r36.xyxx, cb9[r21.w + 9].yzyy
                  div r36.xy, cb9[r21.w + 3].yyyy, cb9[r21.w + 8].ywyy
                  add r36.zw, -r36.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                  ge r36.zw, r26.xxxy, r36.zzzw
                  ge r36.xy, r36.xyxx, r26.xyxx
                  or r36.xy, r36.xyxx, r36.zwzz
                  or r25.z, r36.y, r36.x
                  if_z r25.z
                    mov_sat r26.xy, r26.xyxx
                    mad r36.x, r26.x, cb9[r21.w + 8].y, cb9[r21.w + 8].z
                    mad r36.y, r26.y, cb9[r21.w + 8].w, cb9[r21.w + 9].x
                    mul r26.x, r23.y, cb9[r21.w + 10].z
                    mad r22.w, cb9[r21.w + 10].y, r23.y, r22.w
                    div r22.w, r22.w, r26.x
                  endif 
                else 
                  mov r25.z, l(-1)
                endif 
                or r23.y, r25.y, r25.z
                if_z r23.y
                  max r22.w, r22.w, l(0.00006104)
                  and r23.y, l(0x0000ffff), cb9[r21.w + 1].w
                  if_nz r9.w
                    utof r26.z, r23.y
                    mov r25.yz, l(0,0,0,0)
                    loop 
                      ige r29.w, r25.z, l(8)
                      breakc_nz r29.w
                      dp2 r37.x, icb[r25.z + 0].xyxx, r29.xyxx
                      dp2 r37.y, icb[r25.z + 0].yxyy, r29.xzxx
                      mad r26.xy, r37.xyxx, cb9[r21.w + 3].yyyy, r36.xyxx
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r26.x, r26.xyzx, t9.xxxx, s13, r22.w
                      mad r25.y, r26.x, l(0.125000), r25.y
                      iadd r25.z, r25.z, l(1)
                    endloop 
                  else 
                    utof r36.z, r23.y
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r25.y, r36.xyzx, t9.xxxx, s13, r22.w
                  endif 
                  mul r21.w, r25.y, r25.y
                  mul r21.w, r25.y, r21.w
                else 
                  mov r21.w, l(1.000000)
                endif 
                mul r16.w, r16.w, r21.w
              else 
                ubfe r21.w, l(4), l(20), cb9[r13.w + 1].w
                ult r22.w, l(0), r21.w
                and r22.w, r4.w, r22.w
                if_nz r22.w
                  iadd r21.w, r21.w, cb2[0].x
                  imad r21.w, r21.w, l(15), l(-15)
                  mad r22.w, |r21.y|, l(-0.200000), l(0.400000)
                  mad r28.xyz, r12.xyzx, r22.wwww, r11.xyzx
                  mov r36.xyz, cb9[r21.w + 6].yzwy
                  mov r36.w, cb9[r21.w + 7].x
                  dp4 r22.w, r36.xyzw, r28.xyzw
                  mov r36.xyz, cb9[r21.w + 7].yzwy
                  mov r36.w, cb9[r21.w + 8].x
                  dp4 r23.y, r36.xyzw, r28.xyzw
                  lt r25.z, r23.y, r22.w
                  if_z r25.z
                    mov r36.xyz, cb9[r21.w + 4].yzwy
                    mov r36.w, cb9[r21.w + 5].x
                    dp4 r26.x, r36.xyzw, r28.xyzw
                    mov r36.xyz, cb9[r21.w + 5].yzwy
                    mov r36.w, cb9[r21.w + 6].x
                    dp4 r26.y, r36.xyzw, r28.xyzw
                    div r26.xy, r26.xyxx, r23.yyyy
                    mad r26.xy, r26.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r28.x, r26.x, cb9[r21.w + 9].w
                    add r28.y, r26.y, cb9[r21.w + 10].x
                    mul r26.xy, r28.xyxx, cb9[r21.w + 9].yzyy
                    div r28.xy, cb9[r21.w + 3].yyyy, cb9[r21.w + 8].ywyy
                    add r36.xy, -r28.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                    ge r36.xy, r26.xyxx, r36.xyxx
                    ge r28.xy, r28.xyxx, r26.xyxx
                    or r28.xy, r28.xyxx, r36.xyxx
                    or r26.z, r28.y, r28.x
                    if_z r26.z
                      mov_sat r26.xy, r26.xyxx
                      mad r28.x, r26.x, cb9[r21.w + 8].y, cb9[r21.w + 8].z
                      mad r28.y, r26.y, cb9[r21.w + 8].w, cb9[r21.w + 9].x
                      mul r26.x, r23.y, cb9[r21.w + 10].z
                      mad r22.w, cb9[r21.w + 10].y, r23.y, r22.w
                      div r22.w, r22.w, r26.x
                    endif 
                  else 
                    mov r26.z, l(-1)
                  endif 
                  or r23.y, r25.z, r26.z
                  if_z r23.y
                    max r22.w, r22.w, l(0.00006104)
                    and r23.y, l(0x0000ffff), cb9[r21.w + 1].w
                    if_nz r9.w
                      utof r26.z, r23.y
                      mov r25.z, l(0)
                      mov r29.w, l(0)
                      loop 
                        ige r30.w, r29.w, l(8)
                        breakc_nz r30.w
                        dp2 r36.x, icb[r29.w + 0].xyxx, r30.xyxx
                        dp2 r36.y, icb[r29.w + 0].yxyy, r30.xzxx
                        mad r26.xy, r36.xyxx, cb9[r21.w + 3].yyyy, r28.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r26.x, r26.xyzx, t9.xxxx, s13, r22.w
                        mad r25.z, r26.x, l(0.125000), r25.z
                        iadd r29.w, r29.w, l(1)
                      endloop 
                    else 
                      utof r28.z, r23.y
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r25.z, r28.xyzx, t9.xxxx, s13, r22.w
                    endif 
                    mul r21.w, r25.z, r25.z
                    mul r21.w, r25.z, r21.w
                  else 
                    mov r21.w, l(1.000000)
                  endif 
                  mul r16.w, r16.w, r21.w
                endif 
              endif 
              mad r21.w, -r21.z, r2.x, l(1.000000)
              mul r21.w, r21.w, r21.w
              mad r21.w, -r21.w, l(0.620000), l(0.620000)
              add r21.w, -r21.z, r21.w
              mad r21.z, r2.w, r21.w, r21.z
              mul r21.z, r16.w, r21.z
              mov r26.x, cb9[r13.w + 0].w
              mov r26.yz, cb9[r13.w + 1].xxyx
              lt r13.w, l(0.000000), r21.y
              mad r21.yzw, r21.zzzz, r26.xxyz, r33.xxyz
              dp3_sat r22.w, r12.xyzx, r24.xyzx
              mad r20.yzw, r20.yyzw, r22.xxxx, r5.yyzw
              dp3 r22.x, r20.yzwy, r20.yzwy
              rsq r22.x, r22.x
              mul r20.yzw, r20.yyzw, r22.xxxx
              dp3 r22.x, r20.yzwy, r5.yzwy
              dp3 r20.y, r12.xyzx, r20.yzwy
              mad r20.z, |r20.y|, r2.z, -|r20.y|
              mad r20.y, |r20.y|, r20.z, l(1.000000)
              mad r20.z, r22.w, r1.w, r2.y
              mul r20.y, r20.y, r20.y
              mul r20.y, r20.z, r20.y
              rcp r20.y, r20.y
              mul r18.w, r18.w, r22.w
              mul r18.w, r18.w, r20.y
              mul r18.w, r16.w, r18.w
              mad r20.yzw, r18.wwww, r26.xxyz, r35.xxyz
              add_sat r22.x, -r22.x, l(1.000000)
              mul r22.w, r22.x, r22.x
              mul r22.w, r22.w, r22.w
              mul r22.x, r22.w, r22.x
              mul r18.w, r18.w, r22.x
              mad r24.xyz, r18.wwww, r26.xyzx, r34.xyzx
              movc r33.xyz, r13.wwww, r21.yzwy, r33.xyzx
              movc r34.xyz, r13.wwww, r24.xyzx, r34.xyzx
              movc r35.xyz, r13.wwww, r20.yzwy, r35.xyzx
              and r13.w, r22.y, l(255)
              iadd r18.w, r13.w, l(-1)
              ult r18.w, r18.w, l(32)
              and r18.w, r3.z, r18.w
              if_nz r18.w
                imad r20.yz, r13.wwww, l(0, 24, 24, 0), l(0, 88, 108, 0)
                ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r13.w, cb2[52].x, r20.y, u2.xxxx
                or r13.w, r13.w, l(8)
                store_structured u2.x, cb2[52].x, r20.y, r13.w
                store_structured u2.x, cb2[52].x, r20.z, r16.w
              endif 
              iadd r10.w, r10.w, l(0x00010101)
            else 
              mov r10.w, r22.y
            endif 
          else 
            mov r10.w, r17.w
          endif 
        else 
          mov r10.w, r17.w
        endif 
      endif 
    endif 
  endloop 
  mov r15.yzw, r33.xxyz
  mov r31.xyz, r34.xyzx
  mov r32.xyz, r35.xyzx
  mov r6.w, r10.w
  iadd r7.w, r7.w, l(32)
endloop 
mad r2.xyz, r3.xwyx, l(1.000000, 3.000000, 2.000000, 0.000000), l(0.000000, 0.500000, -1.000000, 0.000000)
ftou r0.w, r2.y
mad r3.xyw, r7.zxzy, l(3.000000, 1.000000, 0.000000, 2.000000), l(0.500000, 0.000000, 0.000000, -1.000000)
ftou r1.z, r3.x
ieq r1.z, r0.w, r1.z
movc r1.zw, r1.zzzz, r3.yyyw, l(0,0,-1.000000,0)
mad r3.xyw, r8.zxzy, l(3.000000, 1.000000, 0.000000, 2.000000), l(0.500000, 0.000000, 0.000000, -1.000000)
ftou r3.x, r3.x
ieq r3.x, r0.w, r3.x
movc r3.xy, r3.xxxx, r3.ywyy, l(-1.000000,0,0,0)
mad r4.xyz, r9.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r3.w, r4.x
ieq r3.w, r0.w, r3.w
movc r4.xy, r3.wwww, r4.yzyy, l(-1.000000,0,0,0)
mad r5.xyz, r10.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r3.w, r5.x
ieq r0.w, r0.w, r3.w
movc r4.zw, r0.wwww, r5.yyyz, l(0,0,-1.000000,0)
mov r5.x, r1.z
mov r5.y, r3.x
mov r5.zw, r4.xxxz
add r5.xyzw, -r2.xxxx, r5.xyzw
ge r5.xyzw, |r5.xyzw|, l(0.00902149, 0.00902149, 0.00902149, 0.00902149)
movc r5.xyzw, r5.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
add r0.w, r5.y, r5.x
add r0.w, r5.z, r0.w
add r0.w, r5.w, r0.w
mul r1.z, r3.y, r5.y
mad r1.z, r5.x, r1.w, r1.z
mad r1.z, r5.z, r4.y, r1.z
mad r1.z, r5.w, r4.w, r1.z
div r2.w, r1.z, r0.w
ge r0.w, l(0.000000), r0.w
movc r2.yz, r0.wwww, l(0,0,0,0), r2.zzwz
and r1.zw, r1.xxxy, l(0, 0, 1, 1)
ieq r0.w, r1.w, r1.z
movc r2.xyz, r0.wwww, r2.xyzx, r2.xzyx
mad r0.w, -r2.z, l(0.500000), r2.x
add r4.y, r0.w, r2.z
mad r4.z, -r2.y, l(0.500000), r0.w
add r4.x, r2.y, r4.z
add r2.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r2.xyz, r2.xyzx, r31.xyzx
mad r2.xyz, r32.xyzx, r4.xyzx, r2.xyzx
mad r2.xyz, r15.yzwy, r6.xyzx, r2.xyzx
lt r0.w, l(0.000000), cb2[9].z
if_nz r0.w
  dp3 r0.w, r11.xyzx, r11.xyzx
  rsq r1.z, r0.w
  mul r3.xyw, r1.zzzz, r11.xyxz
  sqrt r0.w, r0.w
  lt r1.z, l(0.000000), cb2[13].w
  if_nz r1.z
    mad r1.zw, r0.wwww, cb2[15].xxxy, cb2[14].zzzw
    mul r1.zw, r1.zzzw, cb2[16].xxxy
    lt r2.w, l(0.010000), |r11.z|
    mul r4.xy, r11.zzzz, cb2[15].zwzz
    mul r4.zw, r4.xxxy, l(0.000000, 0.000000, -1.442695, -1.442695)
    exp r4.zw, r4.zzzw
    add r4.zw, -r4.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    div r4.xy, r4.zwzz, r4.xyxx
    mul r4.xy, r1.zwzz, r4.xyxx
    movc r1.zw, r2.wwww, r4.xxxy, r1.zzzw
    mul r4.xyz, r1.zzzz, cb2[12].xyzx
    exp r4.xyz, r4.xyzx
    mul r5.xyz, r1.wwww, cb2[12].xyzx
    exp r5.xyz, r5.xyzx
    add r5.xyz, -r4.xyzx, r5.xyzx
    mad r4.xyz, cb2[13].wwww, r5.xyzx, r4.xyzx
  else 
    mad r1.z, r0.w, cb2[15].x, cb2[14].z
    mul r1.z, r1.z, cb2[16].x
    lt r1.w, l(0.010000), |r11.z|
    mul r2.w, r11.z, cb2[15].z
    mul r4.w, r2.w, l(-1.442695)
    exp r4.w, r4.w
    add r4.w, -r4.w, l(1.000000)
    div r2.w, r4.w, r2.w
    mul r2.w, r1.z, r2.w
    movc r1.z, r1.w, r2.w, r1.z
    mul r5.xyz, r1.zzzz, cb2[12].xyzx
    exp r4.xyz, r5.xyzx
  endif 
  mad r4.xyz, r4.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r4.xyz, r4.xyzx, -cb2[9].zzzz
  dp3 r1.z, cb2[7].yzwy, -r3.xywx
  mad r1.w, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r2.w, cb2[8].w, -r1.z, l(1.000000)
  mul r2.w, r2.w, r2.w
  mul r2.w, r2.w, l(12.566371)
  div r1.w, r1.w, r2.w
  add r0.w, r0.w, -cb2[10].w
  mul_sat r0.w, r0.w, cb2[11].w
  mul r0.w, r0.w, r1.w
  mov_sat r1.z, r1.z
  mad r1.z, r1.z, r1.z, l(1.000000)
  mad r1.z, r1.z, l(0.05968310), l(-1.000000)
  mad r1.z, cb2[8].z, r1.z, l(1.000000)
  mul r3.xyw, r0.wwww, cb2[11].xyxz
  mad r3.xyw, r1.zzzz, cb2[10].xyxz, r3.xyxw
  mul r3.xyw, r3.xyxw, cb2[9].wwww
  add r5.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r3.xyw, r3.xyxw, r5.xyxz
  mad r3.xyw, r2.xyxz, r4.xyxz, r3.xyxw
else 
  mul r0.w, r11.z, cb2[6].x
  mad r1.z, cb2[6].x, r11.z, cb2[5].x
  lt r1.w, |r0.w|, l(0.000100)
  min r2.w, r1.z, l(64.000000)
  mul r2.w, r2.w, l(1.442695)
  exp r2.w, r2.w
  mov_sat r4.x, cb2[6].z
  lt r4.y, r1.z, l(0.000000)
  add r1.z, r1.z, l(1.000000)
  movc r1.z, r4.y, r2.w, r1.z
  add r1.z, r1.z, -cb2[6].z
  movc r0.w, r1.w, l(1.000000), r0.w
  div r0.w, r1.z, r0.w
  movc r0.w, r1.w, r4.x, r0.w
  mul r0.w, r0.w, cb2[5].z
  dp3 r1.z, r11.xyzx, r11.xyzx
  sqrt r1.w, r1.z
  mad r0.w, r0.w, r1.w, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  rsq r1.z, r1.z
  mul r4.xyz, r1.zzzz, r11.xyzx
  dp3 r1.z, cb2[7].yzwy, r4.xyzx
  mad_sat r1.z, cb2[8].y, r1.z, cb2[8].x
  add r4.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r4.xyzw, r1.zzzz, r4.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r4.w
  add r4.xyz, -r2.xyzx, r4.xyzx
  mad r3.xyw, r0.wwww, r4.xyxz, r2.xyxz
endif 
mul r2.xyz, r3.xywx, cb1[85].yyyy
ge r3.xyw, r2.xyxz, l(0.00006104, 0.00006104, 0.000000, 0.00006104)
and r2.xyz, r2.xyzx, r3.xywx
min r2.xyz, r2.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
ilt r0.w, l(0), cb2[55].w
and r4.xyzw, cb2[55].wwww, l(32, 3, 64, 12)
ine r1.zw, r4.xxxz, l(0, 0, 0, 0)
ieq r3.xy, r4.ywyy, l(0, 8, 0, 0)
and r1.zw, r1.zzzw, r3.xxxy
and r4.xy, r1.zwzz, l(0x3e4ccccd, 0x3e4ccccd, 0, 0)
and r1.z, cb2[55].w, l(16)
ine r1.w, r1.z, l(0)
ieq r1.z, r1.z, l(0)
and r1.z, r1.z, r1.w
and r4.z, r1.z, l(0x3e4ccccd)
mad r3.xyw, r4.xyxz, cb1[85].xxxx, -r2.xyxz
mad r3.xyw, r3.xyxw, l(0.500000, 0.500000, 0.000000, 0.500000), r2.xyxz
movc r2.xyz, r0.wwww, r3.xywx, r2.xyzx
if_nz cb2[52].y
  if_nz cb2[53].y
    switch cb2[53].y
      case l(1)
      and r0.w, r6.w, l(255)
      break 
      case l(2)
      ubfe r0.w, l(8), l(8), r6.w
      break 
      case l(3)
      ubfe r0.w, l(8), l(16), r6.w
      break 
      case l(4)
      and r0.w, r0.y, l(3)
      break 
      case l(5)
      ushr r0.w, r0.y, l(8)
      break 
      default 
      mov r0.w, l(0)
      break 
    endswitch 
    utof r0.w, r0.w
    mul r0.w, r0.w, cb2[53].z
    mad r3.xyw, r0.wwww, l(0.500000, 0.500000, 0.000000, 0.500000), -r2.xyxz
    mad r2.xyz, cb2[53].wwww, r3.xywx, r2.xyzx
  endif 
endif 
store_uav_typed u0.xyzw, r1.xyyy, r2.xyzx
if_nz r3.z
  add r1.xyz, r11.xyzx, cb1[24].xyzx
  and r1.w, r6.w, l(255)
  store_structured u2.xyzw, cb2[52].x, l(92), r1.xyzw
  and r0.w, r0.y, l(3)
  store_structured u2.x, cb2[52].x, l(108), r0.w
endif 
if_nz cb2[52].y
  and r0.w, r6.w, l(255)
  atomic_iadd g1, l(0), r0.w
  ubfe r1.xy, l(8, 8, 0, 0), l(8, 16, 0, 0), r6.wwww
  atomic_iadd g1, l(4), r1.x
  atomic_iadd g1, l(8), r1.y
  and r1.z, r0.y, l(3)
  atomic_iadd g1, l(12), r1.z
  ushr r0.y, r0.y, l(8)
  atomic_iadd g1, l(16), r0.y
  atomic_umax g2, l(0), r0.w
  atomic_umax g2, l(4), r1.x
  atomic_umax g2, l(8), r1.y
  atomic_umax g2, l(12), r1.z
  atomic_umax g2, l(16), r0.y
  imm_atomic_iadd r1.x, g0, l(0), l(1)
  ieq r0.y, r1.x, l(63)
  if_nz r0.y
    ld_raw r1.xyzw, l(0), g1.xyzw
    mov r2.xz, cb2[52].xxxx
    mov r2.yw, l(0,40,0,44)
    atomic_iadd u2, r2.xyxx, r1.x
    atomic_iadd u2, r2.zwzz, r1.y
    mov r2.xz, cb2[52].xxxx
    mov r2.yw, l(0,48,0,52)
    atomic_iadd u2, r2.xyxx, r1.z
    atomic_iadd u2, r2.zwzz, r1.w
    ld_raw r0.y, l(16), g1.xxxx
    mov r1.xz, cb2[52].xxxx
    mov r1.yw, l(0,56,0,0)
    atomic_iadd u2, r1.xyxx, r0.y
    ld_raw r2.xyzw, l(0), g2.xyzw
    atomic_umax u2, r1.zwzz, r2.x
    mov r1.xz, cb2[52].xxxx
    mov r1.yw, l(0,4,0,8)
    atomic_umax u2, r1.xyxx, r2.y
    atomic_umax u2, r1.zwzz, r2.z
    mov r1.xz, cb2[52].xxxx
    mov r1.yw, l(0,12,0,16)
    atomic_umax u2, r1.xyxx, r2.w
    ld_raw r0.y, l(16), g2.xxxx
    atomic_umax u2, r1.zwzz, r0.y
    ieq r0.xz, r0.xxzx, cb2[52].zzwz
    and r0.x, r0.z, r0.x
    if_nz r0.x
      store_structured u2.xyzw, cb2[52].x, l(20), r2.xyzw
      store_structured u2.x, cb2[52].x, l(36), r0.y
    endif 
  endif 
endif 
ret 
// Approximately 2534 instruction slots used
