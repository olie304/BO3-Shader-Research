//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:42:38 2021
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float3 specColorTint;              // Offset:  160 Size:    12 [unused]
//   float baseNormalHeight;            // Offset:  172 Size:     4 [unused]
//   float2 glossRange;                 // Offset:  176 Size:     8
//   float2 rotateUVs;                  // Offset:  184 Size:     8 [unused]
//   float2 scrollUVs;                  // Offset:  192 Size:     8 [unused]
//   float2 scaleUVs;                   // Offset:  200 Size:     8 [unused]
//   float2 offsetUVs;                  // Offset:  208 Size:     8 [unused]
//   float2 zoomUVs;                    // Offset:  216 Size:     8 [unused]
//   float zoomRate;                    // Offset:  224 Size:     4 [unused]
//   float layerDepth;                  // Offset:  228 Size:     4 [unused]
//   bool clampU;                       // Offset:  232 Size:     4 [unused]
//   bool clampV;                       // Offset:  236 Size:     4 [unused]
//   float2 colorMapScale;              // Offset:  240 Size:     8
//   float4 colorTint;                  // Offset:  256 Size:    16
//   float zFeatherDistance;            // Offset:  272 Size:     4
//   float falloffBegin;                // Offset:  276 Size:     4 [unused]
//   float falloffEnd;                  // Offset:  280 Size:     4 [unused]
//   float uvMotionToggle1;             // Offset:  284 Size:     4 [unused]
//   float2 maskRotateUVs;              // Offset:  288 Size:     8
//   float2 maskScrollUVs;              // Offset:  296 Size:     8
//   float2 maskScaleUVs;               // Offset:  304 Size:     8
//   float2 maskOffsetUVs;              // Offset:  312 Size:     8
//   float2 maskZoomUVs;                // Offset:  320 Size:     8
//   float maskZoomRate;                // Offset:  328 Size:     4
//   bool noReceiveShadow;              // Offset:  332 Size:     4
//   float4 flowParams;                 // Offset:  336 Size:    16
//   float4 noiseParams;                // Offset:  352 Size:    16
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16 [unused]
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// colorSampler                      sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// flowSampler                       sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// noiseSampler                      sampler      NA          NA             s5      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// floatZSampler                     texture  float4          2d             t0      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// colorMap                          texture  float4          2d            t21      1 
// alphaMask                         texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// flowMap                           texture  float4          2d            t24      1 
// noiseMap                          texture  float4          2d            t25      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyz 
// COLOR                    1   x           1     NONE   float       
// TEXCOORD                 0    yz         1     NONE   float    yz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// OFFPOSITION              0   xyz         5     NONE   float   xyz 
// TEXCOORD                 9   xy          6     NONE   float   xy  
// SV_IsFrontFace           0   x           7    FFACE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[23], immediateIndexed
dcl_constantbuffer CB1[93], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2darray (float,float,float,float) t31
dcl_input_ps_siv linear noperspective v0.xyz, position
dcl_input_ps linear v1.yz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xy
dcl_output o0.xyzw
dcl_temps 43
mul r0.xy, v1.yzyy, cb0[15].xyxx
mul r0.zw, cb0[22].xxxy, cb1[69].wwww
mad r0.zw, v1.yyyz, cb0[22].zzzz, r0.zzzw
sample_indexable(texture2d)(float,float,float,float) r0.zw, r0.zwzz, t25.zwxy, s5
mul r0.zw, r0.zzzw, cb0[22].wwww
mad r0.zw, v1.yyyz, cb0[21].xxxx, r0.zzzw
frc r1.xy, r0.zwzz
mad r1.zw, r1.xxxy, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
mul r1.xy, r1.xyxx, r1.xyxx
mul r1.xy, r1.xyxx, r1.zwzz
round_ni r1.zw, r0.zzzw
div r1.zw, r1.zzzw, cb0[21].xxxx
sample_indexable(texture2d)(float,float,float,float) r1.zw, r1.zwzz, t24.zwxy, s3
add r1.zw, r1.zzzw, r1.zzzw
add r2.xyzw, r0.zwzw, l(1.000000, 0.000000, 0.000000, 1.000000)
round_ni r2.xyzw, r2.xyzw
div r2.xyzw, r2.xyzw, cb0[21].xxxx
sample_indexable(texture2d)(float,float,float,float) r2.xy, r2.xyxx, t24.xyzw, s3
add r2.xy, r2.xyxx, r2.xyxx
sample_indexable(texture2d)(float,float,float,float) r2.zw, r2.zwzz, t24.zwxy, s3
add r2.zw, r2.zzzw, r2.zzzw
add r0.zw, r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
round_ni r0.zw, r0.zzzw
div r0.zw, r0.zzzw, cb0[21].xxxx
sample_indexable(texture2d)(float,float,float,float) r0.zw, r0.zwzz, t24.zwxy, s3
add r0.zw, r0.zzzw, r0.zzzw
resinfo_indexable(texture2d)(float,float,float,float) r3.xy, l(0), t21.xyzw
mul r3.xy, r0.xyxx, r3.xyxx
deriv_rtx_coarse r3.zw, r3.xxxy
deriv_rty_coarse r3.xy, r3.xyxx
dp2 r3.z, r3.zwzz, r3.zwzz
dp2 r3.x, r3.xyxx, r3.xyxx
max r3.x, r3.x, r3.z
log r3.x, r3.x
mul r3.x, r3.x, l(0.500000)
mul r3.y, cb0[21].y, cb1[69].w
mad r1.zw, r1.zzzw, l(0.000000, 0.000000, -1.000000, 1.000000), l(0.000000, 0.000000, 1.000000, -1.000000)
mad r1.zw, r1.zzzw, r3.yyyy, r0.xxxy
sample_l_indexable(texture2d)(float,float,float,float) r4.xyzw, r1.zwzz, t21.xyzw, s1, r3.x
mad r1.zw, r2.xxxy, l(0.000000, 0.000000, -1.000000, 1.000000), l(0.000000, 0.000000, 1.000000, -1.000000)
mad r1.zw, r1.zzzw, r3.yyyy, r0.xxxy
sample_l_indexable(texture2d)(float,float,float,float) r5.xyz, r1.zwzz, t21.xyzw, s1, r3.x
add r5.xyz, -r4.xyzx, r5.xyzx
mad r5.xyz, r1.xxxx, r5.xyzx, r4.xyzx
mad r1.zw, r2.zzzw, l(0.000000, 0.000000, -1.000000, 1.000000), l(0.000000, 0.000000, 1.000000, -1.000000)
mad r1.zw, r1.zzzw, r3.yyyy, r0.xxxy
sample_l_indexable(texture2d)(float,float,float,float) r2.xyz, r1.zwzz, t21.xyzw, s1, r3.x
mad r0.zw, r0.zzzw, l(0.000000, 0.000000, -1.000000, 1.000000), l(0.000000, 0.000000, 1.000000, -1.000000)
mad r0.xy, r0.zwzz, r3.yyyy, r0.xyxx
sample_l_indexable(texture2d)(float,float,float,float) r0.xyz, r0.xyxx, t21.xyzw, s1, r3.x
add r0.xyz, -r2.xyzx, r0.xyzx
mad r0.xyz, r1.xxxx, r0.xyzx, r2.xyzx
add r0.xyz, -r5.xyzx, r0.xyzx
mad r4.xyz, r1.yyyy, r0.xyzx, r5.xyzx
mul r0.xyzw, r4.xyzw, cb0[16].xyzw
dp3 r1.x, -v5.xyzx, -v5.xyzx
rsq r1.x, r1.x
mul r1.yzw, r1.xxxx, -v5.xxyz
dp3 r2.x, r1.yzwy, v2.xyzx
dp3 r3.x, r1.yzwy, v3.xyzx
dp3 r3.y, r1.yzwy, v4.xyzx
lt r2.z, l(0.000000), r2.x
div r3.xy, -r3.xyxx, r2.xxxx
and r2.zw, r2.zzzz, r3.xxxy
add r3.xy, v1.yzyy, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r2.zw, r2.zzzw, cb0[19].xxxy
mul r2.zw, r2.zzzw, l(0.000000, 0.000000, 0.000010, 0.000010)
mad r2.zw, r3.xxxy, cb0[19].xxxy, r2.zzzw
mad r2.zw, cb0[19].zzzw, cb0[19].xxxy, r2.zzzw
mul r3.xy, cb0[18].zwzz, cb1[69].wwww
mad r3.z, cb0[18].y, cb1[69].w, l(1.000000)
mul r3.z, r3.z, cb0[18].x
mul r3.z, r3.z, l(0.01745329)
sincos r4.x, r5.x, r3.z
mov r5.y, r5.x
mov r5.z, r4.x
dp2 r6.x, r5.yzyy, r2.zwzz
mov r5.x, -r4.x
dp2 r6.y, r5.xyxx, r2.zwzz
mad r2.zw, r3.xxxy, cb0[19].xxxy, r6.xxxy
mul r3.x, cb0[20].z, cb1[69].w
sincos null, r3.x, r3.x
mad r3.x, r3.x, l(0.500000), l(0.500000)
add r3.x, -r3.x, l(1.000000)
add r3.y, -cb0[20].x, cb0[20].y
mad r3.x, r3.x, r3.y, cb0[20].x
div r2.zw, r2.zzzw, r3.xxxx
add r2.zw, r2.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
sample_indexable(texture2d)(float,float,float,float) r2.z, r2.zwzz, t22.yzxw, s1
mul r0.w, r0.w, r2.z
mul r2.z, r2.x, r2.x
mad_sat r2.z, r2.z, v6.x, v6.y
mul r0.w, r0.w, r2.z
ftoi r3.xy, v0.xyxx
mov r3.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r2.z, r3.xyzw, t0.yzxw
ge r2.w, r2.z, l(0.984375)
mul r3.x, r2.z, l(1.01587307)
mad r2.z, r2.z, l(64.000000), l(-63.000000)
movc r2.z, r2.w, r2.z, r3.x
max r2.z, r2.z, l(0.00000001)
ge r2.w, v0.z, l(0.984375)
mul r3.x, v0.z, l(1.01587307)
mad r3.y, v0.z, l(64.000000), l(-63.000000)
movc r2.w, r2.w, r3.y, r3.x
max r2.w, r2.w, l(0.00000001)
rcp r2.zw, r2.zzzw
eq r3.x, cb0[17].x, l(0.000000)
div r3.y, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[17].x
movc r3.x, r3.x, l(60000.000000), r3.y
add r2.z, -r2.w, r2.z
mul_sat r2.z, r3.x, r2.z
mul o0.w, r0.w, r2.z
mul_sat r2.y, cb0[11].y, l(0.05882353)
ftou r3.xy, v0.xyxx
ine r0.w, cb1[92].x, l(0)
utof r3.zw, r3.yyyx
dp2 r2.z, r3.wzww, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r2.z, r2.z
mul r2.zw, r2.zzzw, l(0.000000, 0.000000, 52.982918, 0.00781250)
frc r2.z, r2.z
mad r2.z, r2.z, l(6.28318548), cb1[70].w
sincos r4.x, r5.x, r2.z
dp2 r2.z, r3.zwzz, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r2.z, r2.z
mul r2.z, r2.z, l(52.982918)
frc r2.z, r2.z
mad r2.z, r2.z, l(6.28318548), cb1[70].w
sincos r6.x, r7.x, r2.z
mov_sat r2.x, r2.x
dp3 r2.z, -r1.yzwy, v2.xyzx
add r2.z, r2.z, r2.z
mad r8.xyz, v2.xyzx, -r2.zzzz, -r1.yzwy
mul r2.z, r2.y, l(17.000000)
exp r2.z, r2.z
add r2.z, r2.z, l(2.000000)
div r2.z, l(2.000000), r2.z
sqrt r3.z, r2.z
add r3.w, -r2.y, l(1.000000)
mul r4.z, r3.w, l(5.000000)
mad r4.w, r3.w, l(5.000000), l(-2.500000)
mul r4.w, r4.w, l(0.400000)
max r4.w, r4.w, l(0.000000)
mul r4.w, r4.w, l(100.000000)
mad r6.yz, -r3.wwww, l(0.000000, 10.000000, 5.000000, 0.000000), l(0.000000, 6.857410, 7.085000, 0.000000)
exp r5.w, r6.y
mul r5.w, r2.x, r5.w
mul r5.w, r5.w, l(9.136810)
mul r6.y, r3.w, r4.z
mad r6.y, -r6.y, l(2.015905), r6.z
exp r6.y, r6.y
mul r6.y, r2.x, r6.y
mul r6.y, r6.y, l(9.708090)
max r5.w, r5.w, r6.y
max r5.w, r5.w, l(1.268160)
min r2.w, r2.w, l(15.000000)
ftou r2.w, r2.w
ushr r9.xy, r3.xyxx, l(6, 6, 0, 0)
ishl r9.z, r2.w, l(4)
mov r10.xy, l(0,0,0,0)
mov r11.w, l(0)
mov r12.yz, l(0,0,1.000000,0)
mov r13.xy, l(0,0,0,0)
mov r14.xy, l(0,0,0,0)
mov r15.xy, l(0,0,0,0)
mov r3.x, l(1.000000)
mov r16.xyzw, l(0,0,0,0)
mov r17.yzw, l(0,0,0,0)
mov r2.w, l(0)
mov r6.y, l(0)
loop 
  uge r6.z, r6.y, cb2[0].y
  breakc_nz r6.z
  ushr r10.z, r6.y, l(5)
  iadd r11.xyz, r9.xyzx, r10.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r6.z, r11.xyzw, t7.yzxw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r18.xyzw, r6.y, l(0), t15.wxyz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r19.xyzw, r6.y, l(16), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r20.xyzw, r6.y, l(32), t15.yxwz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r21.xyzw, r6.y, l(48), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r22.xyzw, r6.y, l(64), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r23.xyzw, r6.y, l(80), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r7.yz, r6.y, l(96), t15.xxyx
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r6.y, l(116), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r6.y, l(132), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r6.y, l(148), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r6.y, l(164), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r6.y, l(180), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r6.y, l(196), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xy, r6.y, l(212), t15.xyxx
  add r11.xyz, -r18.yzwy, v5.xyzx
  dp3 r6.w, r11.xyzx, r11.xyzx
  sqrt r6.w, r6.w
  ge r6.w, cb2[54].y, r6.w
  and r7.w, r24.y, l(0x0000ffff)
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r7.w, l(0), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r7.w, l(16), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r7.w, l(32), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r7.w, l(48), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r7.w, l(64), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r7.w, l(80), t16.xyzw
  dp3 r9.w, r31.xyzx, r11.xyzx
  add_sat r9.w, r31.w, r9.w
  dp3 r10.z, r32.xyzx, r11.xyzx
  add_sat r10.z, r32.w, r10.z
  mul r9.w, r9.w, r10.z
  dp3 r10.z, r33.xyzx, r11.xyzx
  add_sat r10.z, r33.w, r10.z
  mul r9.w, r9.w, r10.z
  dp3 r10.z, r34.xyzx, r11.xyzx
  add_sat r10.z, r34.w, r10.z
  mul r9.w, r9.w, r10.z
  dp3 r10.z, r35.xyzx, r11.xyzx
  add_sat r10.z, r35.w, r10.z
  mul r9.w, r9.w, r10.z
  dp3 r10.z, r36.xyzx, r11.xyzx
  add_sat r10.z, r36.w, r10.z
  mul r12.x, r9.w, r10.z
  and r9.w, r7.y, l(1)
  movc r10.zw, r9.wwww, r12.xxxy, r12.zzzx
  mov r31.xy, r24.zwzz
  mov r31.z, r25.z
  dp3 r9.w, r8.xyzx, r31.xyzx
  dp3 r12.x, r11.xyzx, r31.xyzx
  add r12.x, -r25.w, r12.x
  ge r12.w, r12.x, l(0.000000)
  max r12.x, r4.w, |r12.x|
  movc r12.x, r12.w, r12.x, -r12.x
  max r9.w, -r9.w, l(0.00000010)
  div r9.w, r12.x, r9.w
  min r9.w, |r9.w|, l(131072.000000)
  mov r25.z, r26.z
  dp3 r12.x, r8.xyzx, r25.xyzx
  dp3 r12.w, r11.xyzx, r25.xyzx
  add r12.w, -r26.w, r12.w
  ge r13.w, r12.w, l(0.000000)
  max r12.w, r4.w, |r12.w|
  movc r12.w, r13.w, r12.w, -r12.w
  max r12.x, -r12.x, l(0.00000010)
  div r12.x, r12.w, r12.x
  min r9.w, r9.w, |r12.x|
  mov r26.z, r27.z
  dp3 r12.x, r8.xyzx, r26.xyzx
  dp3 r12.w, r11.xyzx, r26.xyzx
  add r12.w, -r27.w, r12.w
  ge r13.w, r12.w, l(0.000000)
  max r12.w, r4.w, |r12.w|
  movc r12.w, r13.w, r12.w, -r12.w
  max r12.x, -r12.x, l(0.00000010)
  div r12.x, r12.w, r12.x
  min r9.w, r9.w, |r12.x|
  mov r27.z, r28.z
  dp3 r12.x, r8.xyzx, r27.xyzx
  dp3 r12.w, r11.xyzx, r27.xyzx
  add r12.w, -r28.w, r12.w
  ge r13.w, r12.w, l(0.000000)
  max r12.w, r4.w, |r12.w|
  movc r12.w, r13.w, r12.w, -r12.w
  max r12.x, -r12.x, l(0.00000010)
  div r12.x, r12.w, r12.x
  min r9.w, r9.w, |r12.x|
  mov r28.z, r29.x
  dp3 r12.x, r8.xyzx, r28.xyzx
  dp3 r12.w, r11.xyzx, r28.xyzx
  add r12.w, -r29.y, r12.w
  ge r13.w, r12.w, l(0.000000)
  max r12.w, r4.w, |r12.w|
  movc r12.w, r13.w, r12.w, -r12.w
  max r12.x, -r12.x, l(0.00000010)
  div r12.x, r12.w, r12.x
  min r9.w, r9.w, |r12.x|
  mov r30.zw, r29.zzzw
  dp3 r12.x, r8.zxyz, r30.xzwx
  dp3 r12.w, r11.zxyz, r30.xzwx
  add r12.w, -r30.y, r12.w
  ge r13.w, r12.w, l(0.000000)
  max r12.w, r4.w, |r12.w|
  movc r12.w, r13.w, r12.w, -r12.w
  max r12.x, -r12.x, l(0.00000010)
  div r12.x, r12.w, r12.x
  min r9.w, r9.w, |r12.x|
  mov r25.x, r21.w
  mov r25.yz, r22.zzwz
  add r25.xyz, r11.xyzx, r25.xyzx
  mad r25.xyz, r8.xyzx, r9.wwww, r25.xyzx
  dp3 r12.x, r25.xyzx, r25.xyzx
  sqrt r12.x, r12.x
  div r9.w, r9.w, r12.x
  add r9.w, r9.w, r9.w
  sqrt r9.w, r9.w
  mad r9.w, r3.w, l(5.000000), r9.w
  add r9.w, r9.w, l(-0.844800)
  mov r18.y, r19.z
  mov r18.z, r20.x
  dp3 r26.x, r25.xyzx, r18.xyzx
  mov r27.xy, r19.xwxx
  mov r27.z, r20.w
  dp3 r26.y, r25.xyzx, r27.xyzx
  mov r20.x, r19.y
  dp3 r26.z, r25.xyzx, r20.xyzx
  ubfe r12.xw, l(6, 0, 0, 9), l(25, 0, 0, 16), r24.yyyy
  utof r26.w, r12.w
  sample_l_indexable(texturecubearray)(float,float,float,float) r19.xyz, r26.xyzw, t8.xyzw, s2, r9.w
  and r24.yzw, r19.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
  ieq r24.yzw, r24.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
  or r9.w, r24.z, r24.y
  or r9.w, r24.w, r9.w
  movc r19.xyz, r9.wwww, l(1.000000,1.000000,0,0), r19.xyzx
  dp3 r25.x, r11.xyzx, r18.xyzx
  dp3 r25.y, r11.xyzx, r27.xyzx
  dp3 r25.z, r11.xyzx, r20.xyzx
  mad_sat r21.xyz, r25.xyzx, r21.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mov r22.z, r23.x
  mad r21.xyz, r21.xyzx, r22.xyzx, r23.yzwy
  dp3 r26.x, v2.xyzx, r18.xyzx
  dp3 r26.y, v2.xyzx, r27.xyzx
  dp3 r26.z, v2.xyzx, r20.xyzx
  lt r18.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r26.xyzx
  movc r13.z, r18.x, l(0), l(0.500000)
  add r20.xyz, r13.xyzx, r21.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r20.xyz, r20.xyzx, t17.xyzw, s4, l(0.000000)
  movc r14.z, r18.y, l(0), l(0.500000)
  add r18.xyw, r14.xyxz, r21.xyxz
  sample_l_indexable(texture3d)(float,float,float,float) r18.xyw, r18.xywx, t18.xywz, s4, l(0.000000)
  movc r15.z, r18.z, l(0), l(0.500000)
  add r21.xyz, r15.xyzx, r21.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r21.xyz, r21.xyzx, t19.xyzw, s4, l(0.000000)
  mul r22.xyz, r26.xyzx, r26.xyzx
  sample_l_indexable(texturecubearray)(float,float,float,float) r23.xyz, r26.xyzw, t8.xyzw, s2, l(6.000000)
  and r24.yzw, r23.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
  ieq r24.yzw, r24.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
  or r9.w, r24.z, r24.y
  or r9.w, r24.w, r9.w
  movc r23.xyz, r9.wwww, l(1.000000,1.000000,0,0), r23.xyzx
  mov r25.xyzw, r16.xyzw
  mov r24.yzw, r17.yyzw
  mov r9.w, r2.w
  mov r12.w, r6.z
  loop 
    breakc_z r12.w
    firstbit_lo r13.z, r12.w
    ishl r13.z, l(1), r13.z
    and r13.w, r12.w, r13.z
    if_nz r13.w
      not r13.z, r13.z
      and r12.w, r12.w, r13.z
      if_nz r6.w
        mov r13.z, r7.y
        mov r26.xy, r10.zwzz
        mov r13.w, l(1)
        loop 
          ige r14.z, r13.w, r12.x
          breakc_nz r14.z
          iadd r14.z, r7.w, r13.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r14.z, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r14.z, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r14.z, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r14.z, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r14.z, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r14.z, l(80), t16.xyzw
          dp3 r14.z, r27.xyzx, r11.xyzx
          add_sat r14.z, r27.w, r14.z
          mul r14.z, r14.z, r26.x
          dp3 r14.w, r28.xyzx, r11.xyzx
          add_sat r14.w, r28.w, r14.w
          mul r14.z, r14.w, r14.z
          dp3 r14.w, r29.xyzx, r11.xyzx
          add_sat r14.w, r29.w, r14.w
          mul r14.z, r14.w, r14.z
          dp3 r14.w, r30.xyzx, r11.xyzx
          add_sat r14.w, r30.w, r14.w
          mul r14.z, r14.w, r14.z
          dp3 r14.w, r31.xyzx, r11.xyzx
          add_sat r14.w, r31.w, r14.w
          mul r14.z, r14.w, r14.z
          dp3 r14.w, r32.xyzx, r11.xyzx
          add_sat r14.w, r32.w, r14.w
          mul r26.x, r14.w, r14.z
          ushr r15.z, r13.z, l(2)
          ubfe r15.w, l(1), l(2), r13.z
          and r18.z, r15.z, l(2)
          max r19.w, r26.x, r26.y
          mad r14.z, -r14.z, r14.w, l(1.000000)
          mul r14.z, r14.z, r26.y
          movc r3.y, r18.z, r14.z, r19.w
          movc r26.xy, r15.wwww, r26.xyxx, r3.xyxx
          iadd r13.w, r13.w, l(1)
          mov r13.z, r15.z
        endloop 
        mov_sat r26.y, r26.y
        mul r3.y, r7.z, r26.y
        lt r13.z, l(0.000000), r3.y
        if_nz r13.z
          mad r27.z, r26.y, r7.z, r24.w
          mul r3.y, r24.x, r3.y
          mul r26.xzw, r3.yyyy, r22.xxyz
          mul r28.xyz, r18.xywx, r26.zzzz
          mad r28.xyz, r20.xyzx, r26.xxxx, r28.xyzx
          mad r26.xzw, r21.xxyz, r26.wwww, r28.xxyz
          mul r28.xyz, r23.xyzx, r26.xzwx
          dp3 r13.z, r28.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r28.xyz, r26.xzwx, r23.xyzx, r25.xyzx
          mul r13.w, r5.w, r13.z
          mul r26.xzw, r3.yyyy, r19.xxyz
          dp3 r3.y, r26.xzwx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r3.y, r5.w, r13.z, r3.y
          div r3.y, r13.w, r3.y
          mov r29.x, r25.w
          mov r29.yz, r24.yyzy
          mad r27.xyw, r26.zwzx, r3.yyyy, r29.yzyx
          mov r28.w, r27.w
        else 
          mov r28.xyzw, r25.xyzw
          mov r27.xyz, r24.yzwy
        endif 
        mov r9.w, l(-1)
        mov r25.xyzw, r28.xyzw
        mov r24.yzw, r27.xxyz
        break 
      endif 
    endif 
  endloop 
  if_nz r9.w
    mov r16.xyzw, r25.xyzw
    mov r17.yzw, r24.yyzw
    mov r2.w, l(-1)
    break 
  endif 
  iadd r6.y, r6.y, l(32)
  mov r16.xyzw, r25.xyzw
  mov r17.yzw, r24.yyzw
  mov r2.w, r9.w
endloop 
if_z r2.w
  iadd r2.w, cb2[0].y, -cb2[58].x
  and r3.x, r2.w, l(-32)
  iadd r3.y, r2.w, -r3.x
  and r6.y, cb2[0].y, l(-32)
  iadd r6.z, -r6.y, cb2[0].y
  mov r10.xy, l(0,0,0,0)
  mov r11.w, l(0)
  mov r12.yz, l(0,0,1.000000,0)
  mov r13.xy, l(0,0,0,0)
  mov r14.x, l(1.000000)
  mov r15.xy, l(0,0,0,0)
  mov r18.xy, l(0,0,0,0)
  mov r19.xyzw, r16.xyzw
  mov r20.yzw, r17.yyzw
  mov r6.w, r3.x
  loop 
    uge r7.y, r6.w, cb2[0].y
    breakc_nz r7.y
    ushr r10.z, r6.w, l(5)
    iadd r11.xyz, r9.xyzx, r10.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r7.y, r11.xyzw, t7.yxzw
    ieq r7.z, r3.x, r6.w
    bfi r7.w, r3.y, l(0), l(0), r7.y
    movc r7.y, r7.z, r7.w, r7.y
    ieq r7.z, r6.y, r6.w
    ubfe r7.w, r6.z, l(0), r7.y
    movc r7.y, r7.z, r7.w, r7.y
    iadd r7.z, r6.w, cb2[0].x
    mov r21.xyzw, r19.xyzw
    mov r22.xyz, r20.yzwy
    mov r7.w, r7.y
    loop 
      breakc_z r7.w
      firstbit_lo r9.w, r7.w
      ishl r10.z, l(1), r9.w
      and r10.w, r7.w, r10.z
      if_nz r10.w
        xor r7.w, r7.w, r10.z
        iadd r10.z, r7.z, r9.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r23.xyzw, r10.z, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r11.xy, r10.z, l(16), t11.xyxx
        add r23.xyz, r23.xyzx, -v5.xyzx
        mov r11.z, r23.w
        lt r11.xyz, |r23.xyzx|, r11.zxyz
        and r10.z, r11.y, r11.x
        and r10.z, r11.z, r10.z
        if_nz r10.z
          iadd r9.w, r6.w, r9.w
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r23.xyzw, r9.w, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r10.zw, r9.w, l(96), t15.xxxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r9.w, l(116), t15.zwxy
          add r11.xyz, -r23.yzwy, v5.xyzx
          and r12.w, r24.w, l(0x0000ffff)
          ubfe r13.w, l(6), l(25), r24.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r25.xyzw, r12.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r26.xyzw, r12.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r12.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r12.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r12.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r12.w, l(80), t16.xyzw
          dp3 r14.z, r25.xyzx, r11.xyzx
          add_sat r14.z, r25.w, r14.z
          dp3 r14.w, r26.xyzx, r11.xyzx
          add_sat r14.w, r26.w, r14.w
          mul r14.z, r14.w, r14.z
          dp3 r14.w, r27.xyzx, r11.xyzx
          add_sat r14.w, r27.w, r14.w
          mul r14.z, r14.w, r14.z
          dp3 r14.w, r28.xyzx, r11.xyzx
          add_sat r14.w, r28.w, r14.w
          mul r14.z, r14.w, r14.z
          dp3 r14.w, r29.xyzx, r11.xyzx
          add_sat r14.w, r29.w, r14.w
          mul r14.z, r14.w, r14.z
          dp3 r14.w, r30.xyzx, r11.xyzx
          add_sat r14.w, r30.w, r14.w
          mul r12.x, r14.w, r14.z
          and r14.z, r10.z, l(1)
          movc r14.zw, r14.zzzz, r12.xxxy, r12.zzzx
          mov r12.x, r10.z
          mov r25.xy, r14.zwzz
          mov r15.w, l(1)
          loop 
            ige r18.w, r15.w, r13.w
            breakc_nz r18.w
            iadd r18.w, r12.w, r15.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r26.xyzw, r18.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r18.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r18.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r18.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r18.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r18.w, l(80), t16.xyzw
            dp3 r18.w, r26.xyzx, r11.xyzx
            add_sat r18.w, r26.w, r18.w
            mul r18.w, r18.w, r25.x
            dp3 r23.w, r27.xyzx, r11.xyzx
            add_sat r23.w, r27.w, r23.w
            mul r18.w, r18.w, r23.w
            dp3 r23.w, r28.xyzx, r11.xyzx
            add_sat r23.w, r28.w, r23.w
            mul r18.w, r18.w, r23.w
            dp3 r23.w, r29.xyzx, r11.xyzx
            add_sat r23.w, r29.w, r23.w
            mul r18.w, r18.w, r23.w
            dp3 r23.w, r30.xyzx, r11.xyzx
            add_sat r23.w, r30.w, r23.w
            mul r18.w, r18.w, r23.w
            dp3 r23.w, r31.xyzx, r11.xyzx
            add_sat r23.w, r31.w, r23.w
            mul r25.x, r18.w, r23.w
            ushr r25.z, r12.x, l(2)
            ubfe r25.w, l(1), l(2), r12.x
            and r26.x, r25.z, l(2)
            max r26.y, r25.x, r25.y
            mad r18.w, -r18.w, r23.w, l(1.000000)
            mul r18.w, r18.w, r25.y
            movc r14.y, r26.x, r18.w, r26.y
            movc r25.xy, r25.wwww, r25.xyxx, r14.xyxx
            iadd r15.w, r15.w, l(1)
            mov r12.x, r25.z
          endloop 
          mov_sat r25.y, r25.y
          mul r10.z, r10.w, r25.y
          lt r12.x, l(0.000000), r10.z
          if_nz r12.x
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r9.w, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r9.w, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r9.w, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r9.w, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r9.w, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r9.w, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r9.w, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r9.w, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r9.w, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r9.w, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xy, r9.w, l(212), t15.xyxx
            mad r22.z, r25.y, r10.w, r22.z
            mul r9.w, r24.z, r10.z
            mov r24.z, r31.z
            dp3 r10.z, r8.xyzx, r24.xyzx
            dp3 r10.w, r11.xyzx, r24.xyzx
            add r10.w, -r31.w, r10.w
            ge r12.x, r10.w, l(0.000000)
            max r10.w, r4.w, |r10.w|
            movc r10.w, r12.x, r10.w, -r10.w
            max r10.z, -r10.z, l(0.00000010)
            div r10.z, r10.w, r10.z
            min r10.z, |r10.z|, l(131072.000000)
            mov r31.z, r32.z
            dp3 r10.w, r8.xyzx, r31.xyzx
            dp3 r12.x, r11.xyzx, r31.xyzx
            add r12.x, -r32.w, r12.x
            ge r12.w, r12.x, l(0.000000)
            max r12.x, r4.w, |r12.x|
            movc r12.x, r12.w, r12.x, -r12.x
            max r10.w, -r10.w, l(0.00000010)
            div r10.w, r12.x, r10.w
            min r10.z, |r10.w|, r10.z
            mov r32.z, r33.z
            dp3 r10.w, r8.xyzx, r32.xyzx
            dp3 r12.x, r11.xyzx, r32.xyzx
            add r12.x, -r33.w, r12.x
            ge r12.w, r12.x, l(0.000000)
            max r12.x, r4.w, |r12.x|
            movc r12.x, r12.w, r12.x, -r12.x
            max r10.w, -r10.w, l(0.00000010)
            div r10.w, r12.x, r10.w
            min r10.z, |r10.w|, r10.z
            mov r33.z, r34.z
            dp3 r10.w, r8.xyzx, r33.xyzx
            dp3 r12.x, r11.xyzx, r33.xyzx
            add r12.x, -r34.w, r12.x
            ge r12.w, r12.x, l(0.000000)
            max r12.x, r4.w, |r12.x|
            movc r12.x, r12.w, r12.x, -r12.x
            max r10.w, -r10.w, l(0.00000010)
            div r10.w, r12.x, r10.w
            min r10.z, |r10.w|, r10.z
            mov r34.z, r35.x
            dp3 r10.w, r8.xyzx, r34.xyzx
            dp3 r12.x, r11.xyzx, r34.xyzx
            add r12.x, -r35.y, r12.x
            ge r12.w, r12.x, l(0.000000)
            max r12.x, r4.w, |r12.x|
            movc r12.x, r12.w, r12.x, -r12.x
            max r10.w, -r10.w, l(0.00000010)
            div r10.w, r12.x, r10.w
            min r10.z, |r10.w|, r10.z
            mov r36.zw, r35.zzzw
            dp3 r10.w, r8.zxyz, r36.xzwx
            dp3 r12.x, r11.zxyz, r36.xzwx
            add r12.x, -r36.y, r12.x
            ge r12.w, r12.x, l(0.000000)
            max r12.x, r4.w, |r12.x|
            movc r12.x, r12.w, r12.x, -r12.x
            max r10.w, -r10.w, l(0.00000010)
            div r10.w, r12.x, r10.w
            min r10.z, |r10.w|, r10.z
            mov r24.x, r28.w
            mov r24.yz, r29.zzwz
            add r14.yzw, r11.xxyz, r24.xxyz
            mad r14.yzw, r8.xxyz, r10.zzzz, r14.yyzw
            dp3 r10.w, r14.yzwy, r14.yzwy
            sqrt r10.w, r10.w
            div r10.z, r10.z, r10.w
            add r10.z, r10.z, r10.z
            sqrt r10.z, r10.z
            mad r10.z, r3.w, l(5.000000), r10.z
            add r10.z, r10.z, l(-0.844800)
            mov r23.y, r26.z
            mov r23.z, r27.x
            dp3 r31.x, r14.yzwy, r23.xyzx
            mov r24.xy, r26.xwxx
            mov r24.z, r27.w
            dp3 r31.y, r14.yzwy, r24.xyzx
            mov r27.x, r26.y
            dp3 r31.z, r14.yzwy, r27.xyzx
            ubfe r10.w, l(9), l(16), r24.w
            utof r31.w, r10.w
            sample_l_indexable(texturecubearray)(float,float,float,float) r14.yzw, r31.xyzw, t8.wxyz, s2, r10.z
            and r25.xzw, r14.yyzw, l(0x7fffffff, 0, 0x7fffffff, 0x7fffffff)
            ieq r25.xzw, r25.xxzw, l(0x7f800000, 0, 0x7f800000, 0x7f800000)
            or r10.z, r25.z, r25.x
            or r10.z, r25.w, r10.z
            movc r14.yzw, r10.zzzz, l(0,1.000000,1.000000,0), r14.yyzw
            dp3 r26.x, r11.xyzx, r23.xyzx
            dp3 r26.y, r11.xyzx, r24.xyzx
            dp3 r26.z, r11.xyzx, r27.xyzx
            mad_sat r11.xyz, r26.xyzx, r28.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
            mov r29.z, r30.x
            mad r11.xyz, r11.xyzx, r29.xyzx, r30.yzwy
            dp3 r31.x, v2.xyzx, r23.xyzx
            dp3 r31.y, v2.xyzx, r24.xyzx
            dp3 r31.z, v2.xyzx, r27.xyzx
            lt r23.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r31.xyzx
            movc r13.z, r23.x, l(0), l(0.500000)
            add r24.xyz, r11.xyzx, r13.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r24.xyz, r24.xyzx, t17.xyzw, s4, l(0.000000)
            mul r25.xzw, r31.xxyz, r31.xxyz
            mul r25.xzw, r9.wwww, r25.xxzw
            movc r15.z, r23.y, l(0), l(0.500000)
            add r23.xyw, r11.xyxz, r15.xyxz
            sample_l_indexable(texture3d)(float,float,float,float) r23.xyw, r23.xywx, t18.xywz, s4, l(0.000000)
            mul r23.xyw, r25.zzzz, r23.xyxw
            mad r23.xyw, r24.xyxz, r25.xxxx, r23.xyxw
            movc r18.z, r23.z, l(0), l(0.500000)
            add r11.xyz, r11.xyzx, r18.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r11.xyz, r11.xyzx, t19.xyzw, s4, l(0.000000)
            mad r11.xyz, r11.xyzx, r25.wwww, r23.xywx
            sample_l_indexable(texturecubearray)(float,float,float,float) r23.xyz, r31.xyzw, t8.xyzw, s2, l(6.000000)
            and r24.xyz, r23.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
            ieq r24.xyz, r24.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
            or r10.z, r24.y, r24.x
            or r10.z, r24.z, r10.z
            movc r23.xyz, r10.zzzz, l(1.000000,1.000000,0,0), r23.xyzx
            mul r24.xyz, r11.xyzx, r23.xyzx
            dp3 r10.z, r24.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r21.xyz, r11.xyzx, r23.xyzx, r21.xyzx
            mul r10.w, r5.w, r10.z
            mul r11.xyz, r9.wwww, r14.yzwy
            dp3 r9.w, r11.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r9.w, r5.w, r10.z, r9.w
            div r9.w, r10.w, r9.w
            mov r23.x, r21.w
            mov r23.yz, r22.xxyx
            mad r22.xyw, r11.yzyx, r9.wwww, r23.yzyx
            mov r21.w, r22.w
          endif 
        endif 
      endif 
    endloop 
    mov r19.xyzw, r21.xyzw
    mov r20.yzw, r22.xxyz
    iadd r6.w, r6.w, l(32)
  endloop 
  lt r6.y, r20.w, l(1.000000)
  if_nz r6.y
    mov r10.xy, l(0,0,0,0)
    mov r11.w, l(0)
    mov r12.yz, l(0,0,1.000000,0)
    mov r13.xy, l(0,0,0,0)
    mov r14.x, l(1.000000)
    mov r15.xy, l(0,0,0,0)
    mov r18.xy, l(0,0,0,0)
    mov r21.x, r19.w
    mov r21.yzw, r20.yyzw
    mov r6.yzw, r19.xxyz
    mov r7.y, r20.w
    mov r7.z, l(0)
    loop 
      uge r7.w, r7.z, r2.w
      breakc_nz r7.w
      ushr r10.z, r7.z, l(5)
      iadd r11.xyz, r9.xyzx, r10.xyzx
      ld_indexable(texture2darray)(uint,uint,uint,uint) r7.w, r11.xyzw, t7.yzwx
      ieq r9.w, r3.x, r7.z
      ubfe r10.z, r3.y, l(0), r7.w
      movc r7.w, r9.w, r10.z, r7.w
      iadd r9.w, r7.z, cb2[0].x
      mov r22.xyzw, r21.xyzw
      mov r11.xyz, r6.yzwy
      mov r10.z, r7.y
      mov r10.w, r7.w
      loop 
        breakc_z r10.w
        firstbit_lo r12.w, r10.w
        ishl r13.w, l(1), r12.w
        and r14.z, r10.w, r13.w
        if_nz r14.z
          xor r10.w, r10.w, r13.w
          iadd r13.w, r9.w, r12.w
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r23.xyzw, r13.w, l(0), t11.xyzw
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r24.xy, r13.w, l(16), t11.xyxx
          add r23.xyz, r23.xyzx, -v5.xyzx
          mov r24.z, r23.w
          lt r23.xyz, |r23.xyzx|, r24.zxyz
          and r13.w, r23.y, r23.x
          and r13.w, r23.z, r13.w
          if_nz r13.w
            iadd r12.w, r7.z, r12.w
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r23.xyzw, r12.w, l(0), t15.wxyz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r14.zw, r12.w, l(96), t15.xxxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r12.w, l(116), t15.zwxy
            add r25.xyz, -r23.yzwy, v5.xyzx
            and r13.w, r24.w, l(0x0000ffff)
            ubfe r15.w, l(6), l(25), r24.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r26.xyzw, r13.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r13.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r13.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r13.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r13.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r13.w, l(80), t16.xyzw
            dp3 r17.w, r26.xyzx, r25.xyzx
            add_sat r17.w, r26.w, r17.w
            dp3 r18.w, r27.xyzx, r25.xyzx
            add_sat r18.w, r27.w, r18.w
            mul r17.w, r17.w, r18.w
            dp3 r18.w, r28.xyzx, r25.xyzx
            add_sat r18.w, r28.w, r18.w
            mul r17.w, r17.w, r18.w
            dp3 r18.w, r29.xyzx, r25.xyzx
            add_sat r18.w, r29.w, r18.w
            mul r17.w, r17.w, r18.w
            dp3 r18.w, r30.xyzx, r25.xyzx
            add_sat r18.w, r30.w, r18.w
            mul r17.w, r17.w, r18.w
            dp3 r18.w, r31.xyzx, r25.xyzx
            add_sat r18.w, r31.w, r18.w
            mul r12.x, r17.w, r18.w
            and r17.w, r14.z, l(1)
            movc r26.xy, r17.wwww, r12.xyxx, r12.zxzz
            mov r12.x, r14.z
            mov r27.xy, r26.xyxx
            mov r17.w, l(1)
            loop 
              ige r18.w, r17.w, r15.w
              breakc_nz r18.w
              iadd r18.w, r13.w, r17.w
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r18.w, l(0), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r18.w, l(16), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r18.w, l(32), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r18.w, l(48), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r18.w, l(64), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r18.w, l(80), t16.xyzw
              dp3 r18.w, r28.xyzx, r25.xyzx
              add_sat r18.w, r28.w, r18.w
              mul r18.w, r18.w, r27.x
              dp3 r23.w, r29.xyzx, r25.xyzx
              add_sat r23.w, r29.w, r23.w
              mul r18.w, r18.w, r23.w
              dp3 r23.w, r30.xyzx, r25.xyzx
              add_sat r23.w, r30.w, r23.w
              mul r18.w, r18.w, r23.w
              dp3 r23.w, r31.xyzx, r25.xyzx
              add_sat r23.w, r31.w, r23.w
              mul r18.w, r18.w, r23.w
              dp3 r23.w, r32.xyzx, r25.xyzx
              add_sat r23.w, r32.w, r23.w
              mul r18.w, r18.w, r23.w
              dp3 r23.w, r33.xyzx, r25.xyzx
              add_sat r23.w, r33.w, r23.w
              mul r27.x, r18.w, r23.w
              ushr r25.w, r12.x, l(2)
              ubfe r26.z, l(1), l(2), r12.x
              and r26.w, r25.w, l(2)
              max r27.z, r27.x, r27.y
              mad r18.w, -r18.w, r23.w, l(1.000000)
              mul r18.w, r18.w, r27.y
              movc r14.y, r26.w, r18.w, r27.z
              movc r27.xy, r26.zzzz, r27.xyxx, r14.xyxx
              iadd r17.w, r17.w, l(1)
              mov r12.x, r25.w
            endloop 
            add_sat r12.x, -r10.z, r27.y
            mul r13.w, r14.w, r12.x
            lt r14.y, l(0.000000), r13.w
            if_nz r14.y
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r12.w, l(16), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r12.w, l(32), t15.yxwz
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r12.w, l(48), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r12.w, l(64), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r12.w, l(80), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r12.w, l(132), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r12.w, l(148), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r12.w, l(164), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r12.w, l(180), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r12.w, l(196), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xy, r12.w, l(212), t15.xyxx
              mad r22.w, r12.x, r14.w, r22.w
              mul r12.x, r24.z, r13.w
              mov r24.z, r32.z
              dp3 r12.w, r8.xyzx, r24.xyzx
              dp3 r13.w, r25.xyzx, r24.xyzx
              add r13.w, -r32.w, r13.w
              ge r14.y, r13.w, l(0.000000)
              max r13.w, r4.w, |r13.w|
              movc r13.w, r14.y, r13.w, -r13.w
              max r12.w, -r12.w, l(0.00000010)
              div r12.w, r13.w, r12.w
              min r12.w, |r12.w|, l(131072.000000)
              mov r32.z, r33.z
              dp3 r13.w, r8.xyzx, r32.xyzx
              dp3 r14.y, r25.xyzx, r32.xyzx
              add r14.y, -r33.w, r14.y
              ge r14.z, r14.y, l(0.000000)
              max r14.y, r4.w, |r14.y|
              movc r14.y, r14.z, r14.y, -r14.y
              max r13.w, -r13.w, l(0.00000010)
              div r13.w, r14.y, r13.w
              min r12.w, r12.w, |r13.w|
              mov r33.z, r34.z
              dp3 r13.w, r8.xyzx, r33.xyzx
              dp3 r14.y, r25.xyzx, r33.xyzx
              add r14.y, -r34.w, r14.y
              ge r14.z, r14.y, l(0.000000)
              max r14.y, r4.w, |r14.y|
              movc r14.y, r14.z, r14.y, -r14.y
              max r13.w, -r13.w, l(0.00000010)
              div r13.w, r14.y, r13.w
              min r12.w, r12.w, |r13.w|
              mov r34.z, r35.z
              dp3 r13.w, r8.xyzx, r34.xyzx
              dp3 r14.y, r25.xyzx, r34.xyzx
              add r14.y, -r35.w, r14.y
              ge r14.z, r14.y, l(0.000000)
              max r14.y, r4.w, |r14.y|
              movc r14.y, r14.z, r14.y, -r14.y
              max r13.w, -r13.w, l(0.00000010)
              div r13.w, r14.y, r13.w
              min r12.w, r12.w, |r13.w|
              mov r35.z, r36.x
              dp3 r13.w, r8.xyzx, r35.xyzx
              dp3 r14.y, r25.xyzx, r35.xyzx
              add r14.y, -r36.y, r14.y
              ge r14.z, r14.y, l(0.000000)
              max r14.y, r4.w, |r14.y|
              movc r14.y, r14.z, r14.y, -r14.y
              max r13.w, -r13.w, l(0.00000010)
              div r13.w, r14.y, r13.w
              min r12.w, r12.w, |r13.w|
              mov r37.zw, r36.zzzw
              dp3 r13.w, r8.zxyz, r37.xzwx
              dp3 r14.y, r25.zxyz, r37.xzwx
              add r14.y, -r37.y, r14.y
              ge r14.z, r14.y, l(0.000000)
              max r14.y, r4.w, |r14.y|
              movc r14.y, r14.z, r14.y, -r14.y
              max r13.w, -r13.w, l(0.00000010)
              div r13.w, r14.y, r13.w
              min r12.w, r12.w, |r13.w|
              mov r24.x, r29.w
              mov r24.yz, r30.zzwz
              add r14.yzw, r25.xxyz, r24.xxyz
              mad r14.yzw, r8.xxyz, r12.wwww, r14.yyzw
              dp3 r13.w, r14.yzwy, r14.yzwy
              sqrt r13.w, r13.w
              div r12.w, r12.w, r13.w
              add r12.w, r12.w, r12.w
              sqrt r12.w, r12.w
              mad r12.w, r3.w, l(5.000000), r12.w
              add r12.w, r12.w, l(-0.844800)
              mov r23.y, r26.z
              mov r23.z, r28.x
              dp3 r32.x, r14.yzwy, r23.xyzx
              mov r24.xy, r26.xwxx
              mov r24.z, r28.w
              dp3 r32.y, r14.yzwy, r24.xyzx
              mov r28.x, r26.y
              dp3 r32.z, r14.yzwy, r28.xyzx
              ubfe r13.w, l(9), l(16), r24.w
              utof r32.w, r13.w
              sample_l_indexable(texturecubearray)(float,float,float,float) r14.yzw, r32.xyzw, t8.wxyz, s2, r12.w
              and r26.xyz, r14.yzwy, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
              ieq r26.xyz, r26.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
              or r12.w, r26.y, r26.x
              or r12.w, r26.z, r12.w
              movc r14.yzw, r12.wwww, l(0,1.000000,1.000000,0), r14.yyzw
              dp3 r26.x, r25.xyzx, r23.xyzx
              dp3 r26.y, r25.xyzx, r24.xyzx
              dp3 r26.z, r25.xyzx, r28.xyzx
              mad_sat r25.xyz, r26.xyzx, r29.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
              mov r30.z, r31.x
              mad r25.xyz, r25.xyzx, r30.xyzx, r31.yzwy
              dp3 r32.x, v2.xyzx, r23.xyzx
              dp3 r32.y, v2.xyzx, r24.xyzx
              dp3 r32.z, v2.xyzx, r28.xyzx
              lt r23.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r32.xyzx
              movc r13.z, r23.x, l(0), l(0.500000)
              add r24.xyz, r13.xyzx, r25.xyzx
              sample_l_indexable(texture3d)(float,float,float,float) r24.xyz, r24.xyzx, t17.xyzw, s4, l(0.000000)
              mul r26.xyz, r32.xyzx, r32.xyzx
              mul r26.xyz, r12.xxxx, r26.xyzx
              movc r15.z, r23.y, l(0), l(0.500000)
              add r23.xyw, r15.xyxz, r25.xyxz
              sample_l_indexable(texture3d)(float,float,float,float) r23.xyw, r23.xywx, t18.xywz, s4, l(0.000000)
              mul r23.xyw, r26.yyyy, r23.xyxw
              mad r23.xyw, r24.xyxz, r26.xxxx, r23.xyxw
              movc r18.z, r23.z, l(0), l(0.500000)
              add r24.xyz, r18.xyzx, r25.xyzx
              sample_l_indexable(texture3d)(float,float,float,float) r24.xyz, r24.xyzx, t19.xyzw, s4, l(0.000000)
              mad r23.xyz, r24.xyzx, r26.zzzz, r23.xywx
              sample_l_indexable(texturecubearray)(float,float,float,float) r24.xyz, r32.xyzw, t8.xyzw, s2, l(6.000000)
              and r25.xyz, r24.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
              ieq r25.xyz, r25.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
              or r12.w, r25.y, r25.x
              or r12.w, r25.z, r12.w
              movc r24.xyz, r12.wwww, l(1.000000,1.000000,0,0), r24.xyzx
              mul r25.xyz, r23.xyzx, r24.xyzx
              dp3 r12.w, r25.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
              mad r11.xyz, r23.xyzx, r24.xyzx, r11.xyzx
              mul r13.z, r5.w, r12.w
              mul r14.yzw, r12.xxxx, r14.yyzw
              dp3 r12.x, r14.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
              mad r12.x, r5.w, r12.w, r12.x
              div r12.x, r13.z, r12.x
              mad r22.xyz, r14.yzwy, r12.xxxx, r22.xyzx
            endif 
          endif 
        endif 
      endloop 
      mov r21.xyzw, r22.xyzw
      mov r6.yzw, r11.xxyz
      iadd r7.z, r7.z, l(32)
    endloop 
    mov r20.xyzw, r21.zxyw
    mov r19.xyz, r6.yzwy
    mov r20.xyzw, r20.yzxw
  else 
    mov r20.x, r19.w
  endif 
  max r2.w, r20.w, l(1.000000)
  rcp r2.w, r2.w
  mov_sat r20.w, r20.w
  mul r16.xyz, r2.wwww, r19.xyzx
  mul r17.xyz, r2.wwww, r20.xyzx
  lt r3.x, r20.w, l(0.990000)
  if_nz r3.x
    add r3.x, -r20.w, l(1.000000)
    mul r3.y, r3.x, cb2[19].x
    add r6.yzw, v5.xxyz, -cb2[35].xxyz
    mul r10.x, r6.y, cb2[35].w
    mul r10.yz, r6.zzwz, cb2[36].xxyx
    add_sat r6.yzw, r10.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
    mul r10.xy, r6.yzyy, cb2[36].zwzz
    mul r10.z, r6.w, cb2[37].x
    add r6.yzw, r10.xxyz, cb2[37].yyzw
    lt r7.yzw, l(0.000000, 0.000000, 0.000000, 0.000000), v2.xxyz
    movc r10.xyz, r7.yzwy, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
    mov r10.w, l(0)
    add r7.yzw, r6.yyzw, r10.wwwx
    sample_l_indexable(texture3d)(float,float,float,float) r7.yzw, r7.yzwy, t17.wxyz, s4, l(0.000000)
    mul r11.xyz, v2.xyzx, v2.xyzx
    mul r11.xyz, r3.yyyy, r11.xyzx
    add r12.xyz, r6.yzwy, r10.wwyw
    sample_l_indexable(texture3d)(float,float,float,float) r12.xyz, r12.xyzx, t18.xyzw, s4, l(0.000000)
    mul r12.xyz, r11.yyyy, r12.xyzx
    mad r7.yzw, r7.yyzw, r11.xxxx, r12.xxyz
    add r6.yzw, r6.yyzw, r10.wwwz
    sample_l_indexable(texture3d)(float,float,float,float) r6.yzw, r6.yzwy, t19.wxyz, s4, l(0.000000)
    mad r6.yzw, r6.yyzw, r11.zzzz, r7.yyzw
    mov r10.xyz, v2.xyzx
    mov r10.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r7.yzw, r10.xyzw, t8.wxyz, s2, l(6.000000)
    mul r6.yzw, r6.yyzw, r7.yyzw
    dp3 r3.y, r6.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
    mad r16.xyz, r19.xyzx, r2.wwww, r6.yzwy
    mov r8.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r6.yzw, r8.xyzw, t8.wxyz, s2, r4.z
    mad r2.w, cb2[19].x, r3.x, -r3.y
    mad r2.w, r2.y, r2.w, r3.y
    mad r17.xyz, r6.yzwy, r2.wwww, r17.xyzx
  endif 
else 
  mov r17.x, r16.w
endif 
mad r2.yw, r2.xxxy, l(0.000000, 0.984375, 0.000000, 0.984375), l(0.000000, 0.00781250, 0.000000, 0.00781250)
sample_l_indexable(texture2d)(float,float,float,float) r2.yw, r2.ywyy, t5.zxwy, s2, l(0.000000)
mul r10.xyz, r2.yyyy, r17.yzxy
mul r3.xyw, r2.wwww, r17.xyxz
sqrt r2.y, r3.z
mad r2.y, r2.y, l(0.500000), l(0.500000)
mul r2.y, r2.y, r2.y
mul r2.w, r2.y, l(0.500000)
mad r2.y, -r2.y, l(0.500000), l(1.000000)
mad r4.z, r2.x, r2.y, r2.w
mul r2.yw, r2.yyyw, r4.zzzz
if_z cb0[20].w
  dp3 r4.z, v2.xyzx, cb2[17].xyzx
  ge r4.z, l(0.000000), |r4.z|
  if_nz r4.z
    mov r4.w, l(0)
  endif 
  if_z r4.z
    mul r6.yzw, v5.yyyy, cb2[29].xxyz
    mad r6.yzw, v5.xxxx, cb2[28].xxyz, r6.yyzw
    mad r6.yzw, v5.zzzz, cb2[30].xxyz, r6.yyzw
    add r6.yzw, r6.yyzw, cb2[31].xxyz
    add r4.z, r6.w, -cb2[17].w
    mad r4.z, -r4.z, l(0.00006104), l(1.000000)
    mov_sat r5.w, r4.z
    eq r5.w, r4.z, r5.w
    if_nz r5.w
      mov r5.w, l(0)
      mov r7.y, l(0)
      loop 
        ge r7.z, r5.w, l(3.000000)
        breakc_nz r7.z
        ftou r7.z, r5.w
        add r11.xy, r6.yzyy, -cb2[r7.z + 20].xyxx
        max r7.w, |r11.y|, |r11.x|
        mul r7.y, r7.w, cb2[r7.z + 20].z
        lt r7.z, r7.y, l(1.000000)
        if_nz r7.z
          break 
        endif 
        add r5.w, r5.w, l(1.000000)
        mov r7.y, l(0)
      endloop 
    else 
      mov r5.w, l(3.000000)
      mov r7.y, l(0)
    endif 
    ge r7.z, r5.w, l(3.000000)
    if_nz r7.z
      mul r11.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
      rcp r12.xz, r11.xxxx
      mov r12.y, -r12.z
      mad r11.xyz, r6.yzyy, r12.xyzx, r11.yzyy
      add r12.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
      max r11.xyz, r11.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
      min r11.xyz, r12.xyzx, r11.xyzx
      mul r12.xy, r11.zyzz, cb2[32].xxxx
      round_ni r12.xy, r12.xyxx
      mul r7.w, r12.y, cb2[27].x
      mad r7.w, r7.w, cb2[32].x, r12.x
      ftou r7.w, r7.w
      iadd r7.w, r7.w, cb2[32].y
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r8.w, r7.w, l(0), t23.xxxx
      and r9.w, r8.w, l(0x40000000)
      ishl r11.w, r8.w, l(2)
      if_z r9.w
        and r9.w, r8.w, l(0x01ffffff)
        iadd r12.x, r7.w, r9.w
        ushr r7.w, r8.w, l(25)
        utof r7.w, r7.w
        mul r11.xyz, r7.wwww, r11.xyzx
        frc r11.xyz, r11.xyzx
        mul r11.xyz, r11.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
        ftou r11.xyz, r11.xyzx
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r12.z, r12.x, l(0), t23.xxxx
        ushr r13.xy, r11.zyzz, l(6, 6, 0, 0)
        and r7.w, r12.z, l(0xc0000000)
        iadd r8.w, r12.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r8.w, r8.w, l(0), t23.xxxx
        movc r8.w, r13.y, r12.z, r8.w
        ushr r9.w, r8.w, l(13)
        movc r8.w, r13.x, r9.w, r8.w
        and r8.w, r8.w, l(8191)
        iadd r13.x, r8.w, r12.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r13.z, r13.x, l(0), t23.xxxx
        mov r12.y, l(0)
        mov r13.y, l(1)
        movc r13.xyz, r7.wwww, r12.xyzx, r13.xyzx
        movc r14.yz, r7.wwww, l(0,6,1,0), l(0,5,2,0)
        ushr r15.xy, r11.zyzz, r14.yyyy
        and r15.xy, r15.xyxx, l(1, 1, 0, 0)
        and r8.w, r13.z, l(0xc0000000)
        iadd r9.w, r13.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r9.w, r9.w, l(0), t23.xxxx
        movc r9.w, r15.y, r13.z, r9.w
        ushr r12.w, r9.w, l(13)
        movc r9.w, r15.x, r12.w, r9.w
        and r9.w, r9.w, l(8191)
        iadd r14.x, r9.w, r13.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r14.w, r14.x, l(0), t23.xxxx
        movc r13.xyz, r8.wwww, r13.xyzx, r14.xzwx
        movc r12.xyz, r7.wwww, r12.xyzx, r13.xyzx
        and r7.w, r12.z, l(0xc0000000)
        if_z r7.w
          iadd r7.w, -r12.y, l(6)
          ushr r13.xy, r11.zyzz, r7.wwww
          or r7.w, r12.z, l(0x40000000)
          bfi r8.w, l(1), l(1), r13.y, l(0)
          bfi r8.w, l(1), l(0), r13.x, r8.w
          imul null, r8.w, r8.w, l(10)
          ushr r7.w, r7.w, r8.w
          and r7.w, r7.w, l(1023)
          iadd r13.x, r7.w, r12.x
          ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r13.w, r13.x, l(0), t23.xxxx
          iadd r13.yz, r12.yyyy, l(0, 1, 2, 0)
          iadd r7.w, -r13.y, l(6)
          ushr r12.yw, r11.zzzy, r7.wwww
          and r7.w, r13.w, l(0xc0000000)
          or r8.w, r13.w, l(0x40000000)
          bfi r9.w, l(1), l(1), r12.w, l(0)
          bfi r9.w, l(1), l(0), r12.y, r9.w
          imul null, r9.w, r9.w, l(10)
          ushr r8.w, r8.w, r9.w
          and r8.w, r8.w, l(1023)
          iadd r14.x, r8.w, r13.x
          ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r14.z, r14.x, l(0), t23.xxxx
          mov r14.y, r13.z
          movc r14.xyz, r7.wwww, r13.xywx, r14.xyzx
          iadd r8.w, -r14.y, l(6)
          ushr r12.yw, r11.zzzy, r8.wwww
          and r8.w, r14.z, l(0xc0000000)
          or r9.w, r14.z, l(0x40000000)
          bfi r12.w, l(1), l(1), r12.w, l(0)
          bfi r12.y, l(1), l(0), r12.y, r12.w
          imul null, r12.y, r12.y, l(10)
          ushr r9.w, r9.w, r12.y
          and r9.w, r9.w, l(1023)
          iadd r15.x, r9.w, r14.x
          ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.y, r15.x, l(0), t23.xxxx
          movc r12.yw, r8.wwww, r14.xxxz, r15.xxxy
          movc r12.xz, r7.wwww, r13.xxwx, r12.yywy
        endif 
        and r7.w, r12.z, l(0xc0000000)
        if_z r7.w
          ubfe r8.w, l(14), l(15), r12.z
          utof r8.w, r8.w
          mul r8.w, r8.w, cb2[27].w
          mul r8.w, r8.w, l(0.00006104)
          and r12.yw, r12.zzzz, l(0, 0x00007fff, 0, 0x20000000)
          utof r9.w, r12.y
          mul r9.w, r9.w, cb2[27].w
          mul r9.w, r9.w, l(0.00003052)
          and r12.y, r11.y, l(3)
          iadd r12.y, r12.y, r12.x
          iadd r12.y, r12.y, l(1)
          ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r12.y, r12.y, l(0), t23.xxxx
          bfi r13.xyz, l(2, 2, 1, 0), l(3, 1, 4, 0), r11.xyzx, l(0, 0, 0, 0)
          ushr r11.x, r12.y, r13.x
          and r11.x, r11.x, l(255)
          utof r11.x, r11.x
          mul r11.x, r9.w, r11.x
          mad r11.x, r11.x, l(0.00392157), r8.w
          iadd r11.y, r13.y, l(1)
          ubfe r11.z, l(1), l(1), r11.z
          iadd r11.y, r11.z, r11.y
          iadd r11.y, r11.y, r12.x
          ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r11.y, r11.y, l(0), t23.xxxx
          ushr r11.y, r11.y, r13.z
          and r11.y, r11.y, l(0x0000ffff)
          utof r11.y, r11.y
          mul r9.w, r9.w, r11.y
          mad r8.w, r9.w, l(0.00001526), r8.w
          movc r11.w, r12.w, r11.x, r8.w
        else 
          and r8.w, r12.z, l(0x80000000)
          iadd r9.w, r12.x, l(1)
          ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r9.w, r9.w, l(0), t23.xxxx
          movc r8.w, r8.w, r9.w, l(0)
          ishl r9.w, r12.z, l(2)
          ushr r11.x, r8.w, l(16)
          f16tof32 r11.x, r11.x
          and r8.w, r8.w, l(0x0000ffff)
          f16tof32 r8.w, r8.w
          mad r9.w, r6.y, r11.x, r9.w
          mad r8.w, r6.z, r8.w, r9.w
          movc r11.w, r7.w, r8.w, r11.w
        endif 
      endif 
      mad r6.w, -cb2[27].z, l(2.000000), r6.w
      lt r6.w, r11.w, r6.w
      movc r4.w, r6.w, l(0), l(1.000000)
    endif 
    if_z r7.z
      if_z cb2[58].y
        ftou r6.w, r5.w
        add r7.zw, r6.yyyz, -cb2[r6.w + 20].xxxy
        mul r7.zw, r7.zzzw, cb2[r6.w + 20].zzzz
        mad r11.xy, r7.zwzz, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
        itof r6.w, cb2[26].y
        add r11.z, r5.w, r6.w
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r6.w, r11.xyzx, t13.xxxx, s13, r4.z
        sample_l_indexable(texture2darray)(float,float,float,float) r7.z, r11.xyzx, t31.yzxw, s0, l(0.000000)
        add r6.w, r6.w, r7.z
        add_sat r6.w, r6.w, l(-1.000000)
        mul r7.z, r6.w, r6.w
        mul r4.w, r6.w, r7.z
      endif 
      if_nz cb2[58].y
        mov r11.x, -r4.x
        ftou r6.w, r5.w
        add r5.w, r5.w, l(1.000000)
        min r5.w, r5.w, l(2.000000)
        ftou r5.w, r5.w
        add r7.y, -r7.y, l(1.000000)
        mul r7.y, r7.y, l(28.000000)
        ftou r7.y, r7.y
        add r7.zw, r6.yyyz, -cb2[r6.w + 20].xxxy
        mul r7.zw, r7.zzzw, cb2[r6.w + 20].zzzz
        mad r7.zw, r7.zzzw, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
        add r6.yz, r6.yyzy, -cb2[r5.w + 20].xxyx
        mul r6.yz, r6.yyzy, cb2[r5.w + 20].zzzz
        mad r6.yz, r6.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
        mov r11.y, r5.x
        mov r11.z, r4.x
        mov r8.w, l(0)
        mov r9.w, l(0)
        loop 
          uge r11.w, r9.w, l(8)
          breakc_nz r11.w
          ult r11.w, r7.y, r9.w
          movc r12.xy, r11.wwww, r6.yzyy, r7.zwzz
          movc r12.z, r11.w, cb2[r5.w + 20].w, cb2[r6.w + 20].w
          movc r11.w, r11.w, r5.w, r6.w
          dp2 r13.x, icb[r9.w + 0].yxyy, r11.xyxx
          dp2 r13.y, icb[r9.w + 0].yxyy, r11.yzyy
          mad r12.xy, r13.xyxx, r12.zzzz, r12.xyxx
          iadd r11.w, r11.w, cb2[26].y
          utof r12.z, r11.w
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r11.w, r12.xyzx, t13.xxxx, s13, r4.z
          sample_l_indexable(texture2darray)(float,float,float,float) r12.x, r12.xyzx, t31.xyzw, s0, l(0.000000)
          add r11.w, r11.w, r12.x
          add_sat r11.w, r11.w, l(-1.000000)
          mad r8.w, r11.w, l(0.125000), r8.w
          iadd r9.w, r9.w, l(1)
        endloop 
        mul r4.z, r8.w, r8.w
        mul r4.w, r8.w, r4.z
      endif 
    endif 
  endif 
else 
  mov r4.w, l(1.000000)
endif 
dp3 r4.z, v2.xyzx, cb2[17].xyzx
lt r5.w, l(0.000000), |r4.z|
if_nz r5.w
  lt r5.w, l(0.000000), r4.w
  if_nz r5.w
    mul r5.w, r2.z, cb2[18].w
    mul r5.w, r5.w, l(0.250000)
    if_nz cb2[23].x
      add r11.xyz, v5.xyzx, cb1[24].xyzx
      mov r11.w, l(1.000000)
      dp4 r6.y, cb2[24].xyzw, r11.xyzw
      dp4 r6.z, cb2[25].xyzw, r11.xyzw
      frc r11.xy, r6.yzyy
      iadd r6.y, l(-1), cb2[23].x
      utof r11.z, r6.y
      sample_l_indexable(texture2darray)(float,float,float,float) r6.yzw, r11.xyzx, t20.wxyz, s2, l(0.000000)
      add r6.yzw, r6.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
      mad r6.yzw, cb2[23].yyyy, r6.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
      mul r6.yzw, r6.yyzw, cb2[18].xxyz
    else 
      mov r6.yzw, cb2[18].xxyz
    endif 
    if_z cb0[20].w
      ushr r7.y, cb2[53].x, l(16)
      ult r7.z, l(0), r7.y
      and r7.z, r0.w, r7.z
      if_nz r7.z
        iadd r7.y, r7.y, cb2[0].x
        iadd r7.y, r7.y, l(-1)
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r7.z, r7.y, l(52), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r11.xyzw, r7.y, l(68), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.xyzw, r7.y, l(84), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.xyzw, r7.y, l(132), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.xyzw, r7.y, l(148), t12.xyzw
        mad r7.w, |r4.z|, l(-0.200000), l(0.400000)
        lt r8.w, r4.z, l(0.000000)
        movc r7.w, r8.w, -r7.w, r7.w
        mad r15.xyz, v2.xyzx, r7.wwww, v5.xyzx
        mov r15.w, l(1.000000)
        dp4 r11.x, r11.xyzw, r15.xyzw
        dp4 r11.y, r12.xyzw, r15.xyzw
        mad r11.xy, r11.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
        add r11.xy, r14.zwzz, r11.xyxx
        mul r11.xy, r14.xyxx, r11.xyxx
        div r11.zw, r7.zzzz, r13.xxxz
        add r12.xy, -r11.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
        ge r12.xy, r11.xyxx, r12.xyxx
        ge r11.zw, r11.zzzw, r11.xxxy
        or r11.zw, r11.zzzw, r12.xxxy
        or r7.w, r11.w, r11.z
        if_z r7.w
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r7.w, r7.y, l(28), t12.xxxx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.xyzw, r7.y, l(100), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r11.zw, r7.y, l(164), t12.xxxy
          dp4 r7.y, r12.xyzw, r15.xyzw
          mov_sat r11.xy, r11.xyxx
          mad r12.xy, r11.xyxx, r13.xzxx, r13.ywyy
          add r7.y, r11.z, r7.y
          div r7.y, r7.y, r11.w
          max r7.y, r7.y, l(0.00006104)
          and r7.w, r7.w, l(0x0000ffff)
          if_nz cb2[58].y
            mov r11.x, -r4.x
            utof r13.z, r7.w
            mov r11.y, r5.x
            mov r11.z, r4.x
            mov r8.w, l(0)
            mov r9.w, l(0)
            loop 
              ige r11.w, r9.w, l(8)
              breakc_nz r11.w
              dp2 r14.x, icb[r9.w + 0].yxyy, r11.xyxx
              dp2 r14.y, icb[r9.w + 0].yxyy, r11.yzyy
              mad r13.xy, r14.xyxx, r7.zzzz, r12.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r11.w, r13.xyzx, t9.xxxx, s13, r7.y
              mad r8.w, r11.w, l(0.125000), r8.w
              iadd r9.w, r9.w, l(1)
            endloop 
          else 
            utof r12.z, r7.w
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r8.w, r12.xyzx, t9.xxxx, s13, r7.y
          endif 
          mul r7.y, r8.w, r8.w
          mul r7.y, r8.w, r7.y
        else 
          mov r7.y, l(1.000000)
        endif 
        mul r4.w, r4.w, r7.y
      else 
        and r7.y, cb2[53].x, l(0x0000ffff)
        ult r7.z, l(0), r7.y
        not r7.w, r0.w
        and r7.z, r7.w, r7.z
        if_nz r7.z
          iadd r7.y, r7.y, cb2[0].x
          iadd r7.y, r7.y, l(-1)
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r7.z, r7.y, l(52), t12.xxxx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r11.xyzw, r7.y, l(68), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.xyzw, r7.y, l(84), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.xyzw, r7.y, l(132), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.xyzw, r7.y, l(148), t12.xyzw
          mad r7.w, |r4.z|, l(-0.200000), l(0.400000)
          lt r8.w, r4.z, l(0.000000)
          movc r7.w, r8.w, -r7.w, r7.w
          mad r15.xyz, v2.xyzx, r7.wwww, v5.xyzx
          mov r15.w, l(1.000000)
          dp4 r11.x, r11.xyzw, r15.xyzw
          dp4 r11.y, r12.xyzw, r15.xyzw
          mad r11.xy, r11.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
          add r11.xy, r14.zwzz, r11.xyxx
          mul r11.xy, r14.xyxx, r11.xyxx
          div r11.zw, r7.zzzz, r13.xxxz
          add r12.xy, -r11.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
          ge r12.xy, r11.xyxx, r12.xyxx
          ge r11.zw, r11.zzzw, r11.xxxy
          or r11.zw, r11.zzzw, r12.xxxy
          or r7.w, r11.w, r11.z
          if_z r7.w
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r7.w, r7.y, l(28), t12.xxxx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.xyzw, r7.y, l(100), t12.xyzw
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r11.zw, r7.y, l(164), t12.xxxy
            dp4 r7.y, r12.xyzw, r15.xyzw
            mov_sat r11.xy, r11.xyxx
            mad r12.xy, r11.xyxx, r13.xzxx, r13.ywyy
            add r7.y, r11.z, r7.y
            div r7.y, r7.y, r11.w
            max r7.y, r7.y, l(0.00006104)
            and r7.w, r7.w, l(0x0000ffff)
            if_nz cb2[58].y
              mov r11.x, -r4.x
              utof r13.z, r7.w
              mov r11.y, r5.x
              mov r11.z, r4.x
              mov r8.w, l(0)
              mov r9.w, l(0)
              loop 
                ige r11.w, r9.w, l(8)
                breakc_nz r11.w
                dp2 r14.x, icb[r9.w + 0].yxyy, r11.xyxx
                dp2 r14.y, icb[r9.w + 0].yxyy, r11.yzyy
                mad r13.xy, r14.xyxx, r7.zzzz, r12.xyxx
                sample_c_lz_indexable(texture2darray)(float,float,float,float) r11.w, r13.xyzx, t9.xxxx, s13, r7.y
                mad r8.w, r11.w, l(0.125000), r8.w
                iadd r9.w, r9.w, l(1)
              endloop 
            else 
              utof r12.z, r7.w
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r8.w, r12.xyzx, t9.xxxx, s13, r7.y
            endif 
            mul r7.y, r8.w, r8.w
            mul r7.y, r8.w, r7.y
          else 
            mov r7.y, l(1.000000)
          endif 
          mul r4.w, r4.w, r7.y
        endif 
      endif 
    endif 
    mad r7.y, -r2.x, l(0.500000), l(1.000000)
    mad r7.y, -|r4.z|, r7.y, l(1.000000)
    mul r7.y, r7.y, r7.y
    mad r7.y, -r7.y, l(0.620000), l(0.620000)
    add r7.y, -|r4.z|, r7.y
    mad r7.y, r3.z, r7.y, |r4.z|
    mul r7.y, r4.w, r7.y
    lt r7.z, l(0.000000), r4.z
    mad r11.xyz, r7.yyyy, r6.yzwy, r16.xyzx
    mov_sat r4.z, r4.z
    mad r12.xyz, -v5.xyzx, r1.xxxx, cb2[17].xyzx
    dp3 r1.x, r12.xyzx, r12.xyzx
    rsq r1.x, r1.x
    mul r12.xyz, r1.xxxx, r12.xyzx
    dp3 r1.x, r12.xyzx, r1.yzwy
    dp3 r7.y, v2.xyzx, r12.xyzx
    mad r7.w, |r7.y|, r2.z, -|r7.y|
    mad r7.y, |r7.y|, r7.w, l(1.000000)
    mad r7.w, r4.z, r2.y, r2.w
    mul r7.y, r7.y, r7.y
    mul r7.y, r7.w, r7.y
    rcp r7.y, r7.y
    mul r4.z, r5.w, r4.z
    mul r4.z, r4.z, r7.y
    mul r4.z, r4.w, r4.z
    mad r12.xyz, r4.zzzz, r6.yzwy, r3.xywx
    add_sat r1.x, -r1.x, l(1.000000)
    mul r4.w, r1.x, r1.x
    mul r4.w, r4.w, r4.w
    mul r1.x, r1.x, r4.w
    mul r1.x, r1.x, r4.z
    mad r13.xyz, r1.xxxx, r6.zwyz, r10.xyzx
    mov r11.w, r13.z
    mov r16.w, r10.z
    movc r16.xyzw, r7.zzzz, r11.xyzw, r16.xyzw
    mov r13.zw, r12.xxxy
    mov r10.zw, r3.xxxy
    movc r11.xyzw, r7.zzzz, r13.xyzw, r10.xyzw
    movc r3.w, r7.z, r12.z, r3.w
    mov r10.z, r16.w
    mov r10.xy, r11.xyxx
    mov r3.xy, r11.zwzz
  endif 
endif 
mov r11.x, -r4.x
not r1.x, r0.w
mad r2.x, -r2.x, l(0.500000), l(1.000000)
mov r12.xy, l(0,0,0,0)
mov r13.w, l(0)
mov r14.xyz, v5.xyzx
mov r14.w, l(1.000000)
mov r15.w, l(1.000000)
mov r11.z, r4.x
mov r17.w, l(1.000000)
mov r18.z, l(1.000000)
mov r19.w, l(1.000000)
mov r11.yw, r5.xxxx
mov r4.y, r11.w
mov r20.w, l(1.000000)
mov r5.y, r11.x
mov r5.z, r4.x
mov r21.w, l(1.000000)
mov r22.x, r5.x
mov r22.y, r11.x
mov r22.z, r4.x
mov r23.x, r5.x
mov r23.y, r11.x
mov r23.z, r4.x
mov r24.x, r5.x
mov r24.y, r11.x
mov r24.z, r4.x
mov r6.yzw, r16.xxyz
mov r25.xyz, r10.zxyz
mov r26.xyz, r3.xywx
mov r4.z, cb2[58].y
mov r4.w, l(0)
loop 
  uge r5.w, r4.w, cb2[0].x
  breakc_nz r5.w
  ushr r12.z, r4.w, l(5)
  iadd r13.xyz, r9.xyzx, r12.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r5.w, r13.xyzw, t6.yzwx
  mov r7.yzw, r6.yyzw
  mov r13.xyz, r25.xyzx
  mov r27.xyz, r26.xyzx
  mov r8.w, r4.z
  mov r9.w, r5.w
  loop 
    breakc_z r9.w
    firstbit_lo r10.w, r9.w
    ishl r12.z, l(1), r10.w
    and r12.w, r9.w, r12.z
    if_nz r12.w
      xor r9.w, r9.w, r12.z
      iadd r10.w, r4.w, r10.w
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r28.xyzw, r10.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r29.xy, r10.w, l(16), t11.xyxx
      add r28.xyz, r28.xyzx, -v5.xyzx
      mov r29.z, r28.w
      lt r28.xyz, |r28.xyzx|, r29.zxyz
      and r12.z, r28.y, r28.x
      and r12.z, r28.z, r12.z
      if_nz r12.z
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r28.xyzw, r10.w, l(0), t12.wxyz
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r29.xyzw, r10.w, l(16), t12.zxyw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r30.xyzw, r10.w, l(32), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r10.w, l(48), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r10.w, l(64), t12.yzwx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r10.w, l(80), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r10.w, l(96), t12.yzwx
        ubfe r12.z, l(3), l(24), r29.w
        switch r12.z
          case l(4)
          lt r12.z, l(0.000000), r34.x
          mov r35.xy, r33.zwzz
          mov r35.z, r34.w
          mad r36.xyz, -r35.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r28.yzwy
          add r37.xyz, r36.xyzx, -v5.xyzx
          dp3 r12.w, r35.xyzx, r37.xyzx
          div_sat r16.w, -r12.w, r34.x
          mad r38.xyz, r16.wwww, r35.xyzx, r36.xyzx
          movc r38.xyz, r12.zzzz, r38.xyzx, r28.yzwy
          add r38.xyz, r38.xyzx, -v5.xyzx
          dp3 r18.w, r38.xyzx, r38.xyzx
          rsq r22.w, r18.w
          mul r38.xyz, r22.wwww, r38.xyzx
          dp3 r22.w, v2.xyzx, r38.xyzx
          lt r23.w, l(0.000000), |r22.w|
          if_nz r23.w
            sqrt r23.w, r18.w
            mul r24.w, r31.x, r31.x
            div r18.w, r24.w, r18.w
            min r18.w, r18.w, l(1.000000)
            mad_sat r38.xy, r23.wwww, r30.xzxx, r30.ywyy
            mul r38.zw, r38.xxxy, r38.xxxy
            mad r38.xy, r38.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
            mul r38.xy, r38.xyxx, r38.zwzz
            mul r18.w, r18.w, r38.x
            mul r18.w, r38.y, r18.w
            lt r23.w, l(0.000000), r18.w
            if_nz r23.w
              ubfe r23.w, l(3), l(27), r29.w
              ine r23.w, r23.w, l(1)
              if_nz r23.w
                mad r23.w, |r22.w|, l(-0.200000), l(0.400000)
                lt r24.w, r22.w, l(0.000000)
                movc r23.w, r24.w, -r23.w, r23.w
                mad r38.xyz, v2.xyzx, r23.wwww, v5.xyzx
                add r38.xyz, -r32.xyzx, r38.xyzx
                max r23.w, |r38.z|, |r38.y|
                max r23.w, r23.w, |r38.x|
                div r23.w, r33.x, r23.w
                add r23.w, r33.y, r23.w
                dp3 r24.w, r38.xyzx, r38.xyzx
                rsq r24.w, r24.w
                max r23.w, r23.w, l(0.00006104)
                and r25.w, r29.w, l(0x0000ffff)
                utof r39.w, r25.w
                mov r25.w, l(0)
                mov r26.w, l(0)
                loop 
                  ige r27.w, r26.w, l(8)
                  breakc_nz r27.w
                  dp2 r40.y, icb[r26.w + 0].yxyy, r11.xyxx
                  dp2 r40.z, icb[r26.w + 0].yxyy, r11.yzyy
                  mul r40.yz, r31.yyyy, r40.yyzy
                  mul r40.x, r7.x, r40.y
                  mul r40.w, r6.x, r40.y
                  mad r39.xyz, r38.xyzx, r24.wwww, r40.xzwx
                  sample_c_lz_indexable(texturecubearray)(float,float,float,float) r27.w, r39.xyzw, t10.xxxx, s13, r23.w
                  mad r25.w, r27.w, l(0.125000), r25.w
                  iadd r26.w, r26.w, l(1)
                endloop 
              else 
                mov r25.w, l(1.000000)
              endif 
              mul r18.w, r18.w, r25.w
              lt r23.w, l(0.000000), r18.w
              if_nz r23.w
                mul r23.w, r2.z, r29.x
                mul r23.w, r23.w, l(0.250000)
                dp3 r24.w, r35.xyzx, r8.xyzx
                dp3 r26.w, r8.xyzx, r37.xyzx
                mad r27.w, -r24.w, r24.w, r34.x
                mad r12.w, r24.w, r26.w, -r12.w
                div_sat r12.w, r12.w, r27.w
                div r24.w, r27.w, r34.x
                mul r24.w, r24.w, l(10.000000)
                min r24.w, r24.w, l(1.000000)
                add r12.w, -r16.w, r12.w
                mad r12.w, r24.w, r12.w, r16.w
                mad r35.xyz, r12.wwww, r35.xyzx, r36.xyzx
                movc r35.xyz, r12.zzzz, r35.xyzx, r28.yzwy
                add r35.xyz, r35.xyzx, -v5.xyzx
                dp3 r12.z, r35.xyzx, r35.xyzx
                rsq r12.z, r12.z
                mul r36.xyz, r12.zzzz, r35.xyzx
                ubfe r12.w, l(4), l(16), r29.w
                ult r16.w, l(0), r12.w
                and r16.w, r0.w, r16.w
                if_nz r16.w
                  iadd r12.w, r12.w, cb2[0].x
                  iadd r12.w, r12.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.w, r12.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r12.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r12.w, l(116), t12.xyzw
                  mad r24.w, |r22.w|, l(-0.200000), l(0.400000)
                  lt r26.w, r22.w, l(0.000000)
                  movc r24.w, r26.w, -r24.w, r24.w
                  mad r15.xyz, v2.xyzx, r24.wwww, v5.xyzx
                  dp4 r24.w, r37.xyzw, r15.xyzw
                  dp4 r26.w, r38.xyzw, r15.xyzw
                  lt r27.w, r26.w, r24.w
                  if_z r27.w
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r12.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r12.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r12.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r12.w, l(148), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xy, r12.w, l(164), t12.xyxx
                    dp4 r37.x, r37.xyzw, r15.xyzw
                    dp4 r37.y, r38.xyzw, r15.xyzw
                    div r15.xy, r37.xyxx, r26.wwww
                    mad r15.xy, r15.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r15.xy, r40.zwzz, r15.xyxx
                    mul r15.xy, r40.xyxx, r15.xyxx
                    div r37.xy, r16.wwww, r39.xzxx
                    add r37.zw, -r37.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                    ge r37.zw, r15.xxxy, r37.zzzw
                    ge r37.xy, r37.xyxx, r15.xyxx
                    or r37.xy, r37.xyxx, r37.zwzz
                    or r15.z, r37.y, r37.x
                    mov_sat r15.xy, r15.xyxx
                    mad r37.xy, r15.xyxx, r39.xzxx, r39.ywyy
                    mul r15.x, r26.w, r41.y
                    mad r15.y, r41.x, r26.w, r24.w
                    div r15.x, r15.y, r15.x
                  else 
                    mov r15.z, l(-1)
                  endif 
                  or r15.y, r27.w, r15.z
                  if_z r15.y
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.w, r12.w, l(28), t12.xxxx
                    max r15.x, r15.x, l(0.00006104)
                    and r12.w, r12.w, l(0x0000ffff)
                    if_nz r8.w
                      utof r38.z, r12.w
                      mov r15.yz, l(0,0,0,0)
                      loop 
                        ige r24.w, r15.z, l(8)
                        breakc_nz r24.w
                        dp2 r39.x, icb[r15.z + 0].yxyy, r11.xwxx
                        dp2 r39.y, icb[r15.z + 0].xyxx, r4.xyxx
                        mad r38.xy, r39.xyxx, r16.wwww, r37.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.w, r38.xyzx, t9.xxxx, s13, r15.x
                        mad r15.y, r24.w, l(0.125000), r15.y
                        iadd r15.z, r15.z, l(1)
                      endloop 
                    else 
                      utof r37.z, r12.w
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r15.y, r37.xyzx, t9.xxxx, s13, r15.x
                    endif 
                    mul r12.w, r15.y, r15.y
                    mul r12.w, r15.y, r12.w
                  else 
                    mov r12.w, l(1.000000)
                  endif 
                  mul r18.w, r12.w, r18.w
                else 
                  ubfe r12.w, l(4), l(20), r29.w
                  ult r15.x, l(0), r12.w
                  and r15.x, r1.x, r15.x
                  if_nz r15.x
                    iadd r12.w, r12.w, cb2[0].x
                    iadd r12.w, r12.w, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.x, r12.w, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r12.w, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r12.w, l(116), t12.xyzw
                    mad r15.z, |r22.w|, l(-0.200000), l(0.400000)
                    lt r16.w, r22.w, l(0.000000)
                    movc r15.z, r16.w, -r15.z, r15.z
                    mad r17.xyz, v2.xyzx, r15.zzzz, v5.xyzx
                    dp4 r15.z, r37.xyzw, r17.xyzw
                    dp4 r16.w, r38.xyzw, r17.xyzw
                    lt r24.w, r16.w, r15.z
                    if_z r24.w
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r12.w, l(68), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r12.w, l(84), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r12.w, l(132), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r12.w, l(148), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xy, r12.w, l(164), t12.xyxx
                      dp4 r37.x, r37.xyzw, r17.xyzw
                      dp4 r37.y, r38.xyzw, r17.xyzw
                      div r17.xy, r37.xyxx, r16.wwww
                      mad r17.xy, r17.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                      add r17.xy, r40.zwzz, r17.xyxx
                      mul r17.xy, r40.xyxx, r17.xyxx
                      div r37.xy, r15.xxxx, r39.xzxx
                      add r37.zw, -r37.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                      ge r37.zw, r17.xxxy, r37.zzzw
                      ge r37.xy, r37.xyxx, r17.xyxx
                      or r37.xy, r37.xyxx, r37.zwzz
                      or r17.z, r37.y, r37.x
                      mov_sat r17.xy, r17.xyxx
                      mad r37.xy, r17.xyxx, r39.xzxx, r39.ywyy
                      mul r17.x, r16.w, r41.y
                      mad r15.z, r41.x, r16.w, r15.z
                      div r15.z, r15.z, r17.x
                    else 
                      mov r17.z, l(-1)
                    endif 
                    or r16.w, r24.w, r17.z
                    if_z r16.w
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.w, r12.w, l(28), t12.xxxx
                      max r15.z, r15.z, l(0.00006104)
                      and r12.w, r12.w, l(0x0000ffff)
                      if_nz r8.w
                        utof r17.z, r12.w
                        mov r16.w, l(0)
                        mov r24.w, l(0)
                        loop 
                          ige r26.w, r24.w, l(8)
                          breakc_nz r26.w
                          dp2 r38.x, icb[r24.w + 0].xyxx, r5.xyxx
                          dp2 r38.y, icb[r24.w + 0].yxyy, r5.xzxx
                          mad r17.xy, r38.xyxx, r15.xxxx, r37.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r17.x, r17.xyzx, t9.xxxx, s13, r15.z
                          mad r16.w, r17.x, l(0.125000), r16.w
                          iadd r24.w, r24.w, l(1)
                        endloop 
                      else 
                        utof r37.z, r12.w
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r16.w, r37.xyzx, t9.xxxx, s13, r15.z
                      endif 
                      mul r12.w, r16.w, r16.w
                      mul r12.w, r16.w, r12.w
                    else 
                      mov r12.w, l(1.000000)
                    endif 
                    mul r18.w, r12.w, r18.w
                  endif 
                endif 
                mad r12.w, -|r22.w|, r2.x, l(1.000000)
                mul r12.w, r12.w, r12.w
                mad r12.w, -r12.w, l(0.620000), l(0.620000)
                add r12.w, -|r22.w|, r12.w
                mad r12.w, r3.z, r12.w, |r22.w|
                mul r12.w, r18.w, r12.w
                mov r29.x, r28.x
                lt r15.x, l(0.000000), r22.w
                mad r17.xyz, r12.wwww, r29.xyzx, r7.yzwy
                dp3_sat r12.w, v2.xyzx, r36.xyzx
                mad r35.xyz, r35.xyzx, r12.zzzz, r1.yzwy
                dp3 r12.z, r35.xyzx, r35.xyzx
                rsq r12.z, r12.z
                mul r35.xyz, r12.zzzz, r35.xyzx
                dp3 r12.z, r35.xyzx, r1.yzwy
                dp3 r15.z, v2.xyzx, r35.xyzx
                mad r22.w, |r15.z|, r2.z, -|r15.z|
                mad r15.z, |r15.z|, r22.w, l(1.000000)
                mad r22.w, r12.w, r2.y, r2.w
                mul r15.z, r15.z, r15.z
                mul r15.z, r22.w, r15.z
                rcp r15.z, r15.z
                mul r12.w, r23.w, r12.w
                mul r12.w, r12.w, r15.z
                mul r12.w, r18.w, r12.w
                mad r35.xyz, r12.wwww, r29.xyzx, r27.xyzx
                add_sat r12.z, -r12.z, l(1.000000)
                mul r15.z, r12.z, r12.z
                mul r15.z, r15.z, r15.z
                mul r12.z, r12.z, r15.z
                mul r12.z, r12.z, r12.w
                mad r36.xyz, r12.zzzz, r29.xyzx, r13.xyzx
                movc r7.yzw, r15.xxxx, r17.xxyz, r7.yyzw
                movc r13.xyz, r15.xxxx, r36.xyzx, r13.xyzx
                movc r27.xyz, r15.xxxx, r35.xyzx, r27.xyzx
              endif 
            endif 
          endif 
          break 
          case l(2)
          mov r17.xy, r31.zwzz
          mov r17.z, r32.w
          add r17.xyz, r17.xyzx, -v5.xyzx
          dp3 r12.z, r17.xyzx, r17.xyzx
          rsq r12.z, r12.z
          mul r35.xyz, r12.zzzz, r17.xyzx
          dp3 r12.w, v2.xyzx, r35.xyzx
          lt r15.x, l(0.000000), |r12.w|
          if_nz r15.x
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r10.w, l(112), t12.yzwx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r10.w, l(128), t12.zxyw
            mov r37.xyz, r35.xyzx
            mov r37.w, r36.y
            dp4 r15.x, r37.xyzw, r14.xyzw
            lt r15.z, r15.x, l(1.000000)
            if_nz r15.z
              mov r38.xyz, l(1.000000,1.000000,1.000000,0)
              mov r15.z, l(0)
            else 
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r10.w, l(172), t12.yzwx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r10.w, l(188), t12.wxyz
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r10.w, l(204), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.w, r10.w, l(236), t12.xxxx
              add r42.xyz, r28.yzwy, -v5.xyzx
              mul r22.w, r31.x, r31.x
              dp3 r23.w, r42.xyzx, r42.xyzx
              div r22.w, r22.w, r23.w
              min r22.w, r22.w, l(1.000000)
              mad_sat r30.xy, r15.xxxx, r30.xzxx, r30.ywyy
              mul r30.zw, r30.xxxy, r30.xxxy
              mad r30.xy, r30.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
              mul r30.xy, r30.xyxx, r30.zwzz
              mul r22.w, r22.w, r30.x
              mul r22.w, r30.y, r22.w
              mov r32.w, r33.x
              dp4 r30.x, r32.xyzw, r14.xyzw
              mov r42.xyz, r33.yzwy
              mov r42.w, r34.w
              dp4 r30.y, r42.xyzw, r14.xyzw
              div r18.xy, r30.xyxx, r15.xxxx
              lt r15.x, r39.w, l(0.00048828)
              if_nz r15.x
                mov r40.y, r41.x
                mad_sat r30.xy, |r18.xyxx|, r40.zwzz, r40.xyxx
                mul r30.zw, r30.xxxy, r30.xxxy
                mad r30.xy, r30.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
                mul r30.xy, r30.xyxx, r30.zwzz
                mul r15.x, r30.y, r30.x
              else 
                mov r39.w, r40.y
                mul_sat r30.xyzw, |r18.yyxx|, r39.xyzw
                log r30.xyzw, r30.xyzw
                mul r30.xyzw, r30.xyzw, r40.xxxx
                exp r30.xyzw, r30.xyzw
                add r30.xy, r30.zwzz, r30.xyxx
                log r30.xy, r30.xyxx
                mul r30.xy, r30.xyxx, r41.xxxx
                exp r30.xy, r30.xyxx
                mul r23.w, r30.x, r40.z
                mad r24.w, r40.w, r30.y, l(-1.000000)
                mad r23.w, r40.w, r30.y, -r23.w
                div_sat r23.w, r24.w, r23.w
                mul r24.w, r23.w, r23.w
                mad r23.w, r23.w, l(-2.000000), l(3.000000)
                mul r15.x, r23.w, r24.w
              endif 
              mul r15.z, r15.x, r22.w
              and r15.x, r18.w, l(255)
              if_nz r15.x
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r30.xyz, r10.w, l(220), t12.xyzx
                dp3 r18.w, r41.yzwy, r18.xyzx
                dp3 r18.x, r30.xyzx, r18.xyzx
                frc r30.xy, r18.wxww
                iadd r15.x, r15.x, l(-1)
                utof r30.z, r15.x
                sample_l_indexable(texture2darray)(float,float,float,float) r38.xyz, r30.xyzx, t20.xyzw, s2, l(0.000000)
              else 
                mov r38.xyz, l(1.000000,1.000000,1.000000,0)
              endif 
            endif 
            mov r28.yz, r29.yyzy
            mul r18.xyw, r38.xyxz, r28.xyxz
            lt r15.x, l(0.000000), r15.z
            if_nz r15.x
              ubfe r15.x, l(3), l(27), r29.w
              ine r15.x, r15.x, l(1)
              if_nz r15.x
                mad r15.x, |r12.w|, l(-0.200000), l(0.400000)
                lt r22.w, r12.w, l(0.000000)
                movc r15.x, r22.w, -r15.x, r15.x
                mad r19.xyz, v2.xyzx, r15.xxxx, v5.xyzx
                mov r35.xyz, r34.xyzx
                dp4 r15.x, r35.xyzw, r19.xyzw
                dp4 r22.w, r37.xyzw, r19.xyzw
                ge r23.w, r22.w, r15.x
                if_nz r23.w
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.y, r10.w, l(144), t12.xxxx
                  mov r32.w, r33.x
                  dp4 r28.x, r32.xyzw, r19.xyzw
                  mov r34.xyz, r33.yzwy
                  dp4 r28.y, r34.xyzw, r19.xyzw
                  div r19.xy, r28.xyxx, r22.wwww
                  mad_sat r19.xy, r19.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  mad r19.xy, r19.xyxx, r36.zwzz, r36.xyxx
                  div r10.w, r15.x, r22.w
                  max r10.w, r10.w, l(0.00006104)
                  and r15.x, r29.w, l(0x0000ffff)
                  if_nz r8.w
                    utof r28.z, r15.x
                    mov r22.w, l(0)
                    mov r23.w, l(0)
                    loop 
                      ige r24.w, r23.w, l(8)
                      breakc_nz r24.w
                      dp2 r30.x, icb[r23.w + 0].xyxx, r22.xyxx
                      dp2 r30.y, icb[r23.w + 0].yxyy, r22.xzxx
                      mad r28.xy, r30.xyxx, r31.yyyy, r19.xyxx
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.w, r28.xyzx, t9.xxxx, s13, r10.w
                      mad r22.w, r24.w, l(0.125000), r22.w
                      iadd r23.w, r23.w, l(1)
                    endloop 
                  else 
                    utof r19.z, r15.x
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.w, r19.xyzx, t9.xxxx, s13, r10.w
                  endif 
                  mul r10.w, r22.w, r22.w
                  mul r10.w, r22.w, r10.w
                else 
                  mov r10.w, l(1.000000)
                endif 
              else 
                mov r10.w, l(1.000000)
              endif 
              mul r10.w, r10.w, r15.z
              lt r15.x, l(0.000000), r10.w
              if_nz r15.x
                mul r15.x, r2.z, r29.x
                mul r15.x, r15.x, l(0.250000)
                ubfe r15.z, l(4), l(16), r29.w
                ult r19.x, l(0), r15.z
                and r19.x, r0.w, r19.x
                if_nz r19.x
                  iadd r15.z, r15.z, cb2[0].x
                  iadd r15.z, r15.z, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.x, r15.z, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r28.xyzw, r15.z, l(68), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r30.xyzw, r15.z, l(84), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r15.z, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r15.z, l(116), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r15.z, l(132), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r15.z, l(148), t12.xyzw
                  mad r19.y, |r12.w|, l(-0.200000), l(0.400000)
                  lt r19.z, r12.w, l(0.000000)
                  movc r19.y, r19.z, -r19.y, r19.y
                  mad r20.xyz, v2.xyzx, r19.yyyy, v5.xyzx
                  dp4 r28.x, r28.xyzw, r20.xyzw
                  dp4 r28.y, r30.xyzw, r20.xyzw
                  dp4 r19.y, r31.xyzw, r20.xyzw
                  dp4 r19.z, r32.xyzw, r20.xyzw
                  lt r20.x, r19.z, r19.y
                  div r20.yz, r28.xxyx, r19.zzzz
                  mad r20.yz, r20.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
                  add r20.yz, r34.zzwz, r20.yyzy
                  mul r20.yz, r34.xxyx, r20.yyzy
                  div r28.xy, r19.xxxx, r33.xzxx
                  add r28.zw, -r28.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                  ge r28.zw, r20.yyyz, r28.zzzw
                  ge r28.xy, r28.xyxx, r20.yzyy
                  or r28.xy, r28.xyxx, r28.zwzz
                  or r23.w, r28.y, r28.x
                  or r20.x, r20.x, r23.w
                  if_z r20.x
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r20.x, r15.z, l(28), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r28.xy, r15.z, l(164), t12.xyxx
                    mov_sat r20.yz, r20.yyzy
                    mad r29.xy, r20.yzyy, r33.xzxx, r33.ywyy
                    mul r15.z, r19.z, r28.y
                    mad r19.y, r28.x, r19.z, r19.y
                    div r15.z, r19.y, r15.z
                    max r15.z, r15.z, l(0.00006104)
                    and r19.y, r20.x, l(0x0000ffff)
                    if_nz r8.w
                      utof r20.z, r19.y
                      mov r19.z, l(0)
                      mov r23.w, l(0)
                      loop 
                        ige r24.w, r23.w, l(8)
                        breakc_nz r24.w
                        dp2 r28.x, icb[r23.w + 0].xyxx, r23.xyxx
                        dp2 r28.y, icb[r23.w + 0].yxyy, r23.xzxx
                        mad r20.xy, r28.xyxx, r19.xxxx, r29.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r20.x, r20.xyzx, t9.xxxx, s13, r15.z
                        mad r19.z, r20.x, l(0.125000), r19.z
                        iadd r23.w, r23.w, l(1)
                      endloop 
                    else 
                      utof r29.z, r19.y
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.z, r29.xyzx, t9.xxxx, s13, r15.z
                    endif 
                    mul r15.z, r19.z, r19.z
                    mul r15.z, r19.z, r15.z
                  else 
                    mov r15.z, l(1.000000)
                  endif 
                  mul r10.w, r10.w, r15.z
                else 
                  ubfe r15.z, l(4), l(20), r29.w
                  ult r19.x, l(0), r15.z
                  and r19.x, r1.x, r19.x
                  if_nz r19.x
                    iadd r15.z, r15.z, cb2[0].x
                    iadd r15.z, r15.z, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.x, r15.z, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r28.xyzw, r15.z, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r29.xyzw, r15.z, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r30.xyzw, r15.z, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r15.z, l(116), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r15.z, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r15.z, l(148), t12.xyzw
                    mad r19.y, |r12.w|, l(-0.200000), l(0.400000)
                    lt r20.x, r12.w, l(0.000000)
                    movc r19.y, r20.x, -r19.y, r19.y
                    mad r21.xyz, v2.xyzx, r19.yyyy, v5.xyzx
                    dp4 r20.x, r28.xyzw, r21.xyzw
                    dp4 r20.y, r29.xyzw, r21.xyzw
                    dp4 r19.y, r30.xyzw, r21.xyzw
                    dp4 r20.z, r31.xyzw, r21.xyzw
                    lt r21.x, r20.z, r19.y
                    div r20.xy, r20.xyxx, r20.zzzz
                    mad r20.xy, r20.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r20.xy, r33.zwzz, r20.xyxx
                    mul r20.xy, r33.xyxx, r20.xyxx
                    div r21.yz, r19.xxxx, r32.xxzx
                    add r28.xy, -r21.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
                    ge r28.xy, r20.xyxx, r28.xyxx
                    ge r21.yz, r21.yyzy, r20.xxyx
                    or r21.yz, r21.yyzy, r28.xxyx
                    or r21.y, r21.z, r21.y
                    or r21.x, r21.x, r21.y
                    if_z r21.x
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r21.x, r15.z, l(28), t12.xxxx
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r21.yz, r15.z, l(164), t12.xxyx
                      mov_sat r20.xy, r20.xyxx
                      mad r28.xy, r20.xyxx, r32.xzxx, r32.ywyy
                      mul r15.z, r20.z, r21.z
                      mad r19.y, r21.y, r20.z, r19.y
                      div r15.z, r19.y, r15.z
                      max r15.z, r15.z, l(0.00006104)
                      and r19.y, r21.x, l(0x0000ffff)
                      if_nz r8.w
                        utof r20.z, r19.y
                        mov r21.xy, l(0,0,0,0)
                        loop 
                          ige r21.z, r21.y, l(8)
                          breakc_nz r21.z
                          dp2 r29.x, icb[r21.y + 0].xyxx, r24.xyxx
                          dp2 r29.y, icb[r21.y + 0].yxyy, r24.xzxx
                          mad r20.xy, r29.xyxx, r19.xxxx, r28.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r20.x, r20.xyzx, t9.xxxx, s13, r15.z
                          mad r21.x, r20.x, l(0.125000), r21.x
                          iadd r21.y, r21.y, l(1)
                        endloop 
                      else 
                        utof r28.z, r19.y
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.x, r28.xyzx, t9.xxxx, s13, r15.z
                      endif 
                      mul r15.z, r21.x, r21.x
                      mul r15.z, r21.x, r15.z
                    else 
                      mov r15.z, l(1.000000)
                    endif 
                    mul r10.w, r10.w, r15.z
                  endif 
                endif 
                mad r15.z, -|r12.w|, r2.x, l(1.000000)
                mul r15.z, r15.z, r15.z
                mad r15.z, -r15.z, l(0.620000), l(0.620000)
                add r15.z, -|r12.w|, r15.z
                mad r15.z, r3.z, r15.z, |r12.w|
                mul r15.z, r10.w, r15.z
                lt r19.x, l(0.000000), r12.w
                mad r20.xyz, r15.zzzz, r18.xywx, r7.yzwy
                mov_sat r12.w, r12.w
                mad r17.xyz, r17.xyzx, r12.zzzz, r1.yzwy
                dp3 r12.z, r17.xyzx, r17.xyzx
                rsq r12.z, r12.z
                mul r17.xyz, r12.zzzz, r17.xyzx
                dp3 r12.z, r17.xyzx, r1.yzwy
                dp3 r15.z, v2.xyzx, r17.xyzx
                mad r17.x, |r15.z|, r2.z, -|r15.z|
                mad r15.z, |r15.z|, r17.x, l(1.000000)
                mad r17.x, r12.w, r2.y, r2.w
                mul r15.z, r15.z, r15.z
                mul r15.z, r17.x, r15.z
                rcp r15.z, r15.z
                mul r12.w, r15.x, r12.w
                mul r12.w, r12.w, r15.z
                mul r10.w, r10.w, r12.w
                mad r17.xyz, r10.wwww, r18.xywx, r27.xyzx
                add_sat r12.z, -r12.z, l(1.000000)
                mul r12.w, r12.z, r12.z
                mul r12.w, r12.w, r12.w
                mul r12.z, r12.w, r12.z
                mul r10.w, r10.w, r12.z
                mad r18.xyw, r10.wwww, r18.xyxw, r13.xyxz
                movc r7.yzw, r19.xxxx, r20.xxyz, r7.yyzw
                movc r13.xyz, r19.xxxx, r18.xywx, r13.xyzx
                movc r27.xyz, r19.xxxx, r17.xyzx, r27.xyzx
              endif 
            endif 
          endif 
          break 
          default 
          break 
        endswitch 
      endif 
    endif 
  endloop 
  mov r6.yzw, r7.yyzw
  mov r25.xyz, r13.xyzx
  mov r26.xyz, r27.xyzx
  iadd r4.w, r4.w, l(32)
endloop 
mul r1.xyz, r25.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
mad r1.xyz, r26.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
mad r0.xyz, r6.yzwy, r0.xyzx, r1.xyzx
lt r0.w, l(0.000000), cb2[9].z
if_nz r0.w
  dp3 r0.w, v5.xyzx, v5.xyzx
  rsq r1.x, r0.w
  mul r1.xyz, r1.xxxx, v5.xyzx
  sqrt r0.w, r0.w
  lt r1.w, l(0.000000), cb2[13].w
  if_nz r1.w
    mad r2.xy, r0.wwww, cb2[15].xyxx, cb2[14].zwzz
    mul r2.xy, r2.xyxx, cb2[16].xyxx
    lt r1.w, l(0.010000), |v5.z|
    mul r2.zw, v5.zzzz, cb2[15].zzzw
    mul r3.xy, r2.zwzz, l(-1.442695, -1.442695, 0.000000, 0.000000)
    exp r3.xy, r3.xyxx
    add r3.xy, -r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    div r2.zw, r3.xxxy, r2.zzzw
    mul r2.zw, r2.zzzw, r2.xxxy
    movc r2.xy, r1.wwww, r2.zwzz, r2.xyxx
    mul r2.xzw, r2.xxxx, cb2[12].xxyz
    exp r2.xzw, r2.xxzw
    mul r3.xyz, r2.yyyy, cb2[12].xyzx
    exp r3.xyz, r3.xyzx
    add r3.xyz, -r2.xzwx, r3.xyzx
    mad r2.xyz, cb2[13].wwww, r3.xyzx, r2.xzwx
  else 
    mad r1.w, r0.w, cb2[15].x, cb2[14].z
    mul r1.w, r1.w, cb2[16].x
    lt r2.w, l(0.010000), |v5.z|
    mul r3.x, v5.z, cb2[15].z
    mul r3.y, r3.x, l(-1.442695)
    exp r3.y, r3.y
    add r3.y, -r3.y, l(1.000000)
    div r3.x, r3.y, r3.x
    mul r3.x, r1.w, r3.x
    movc r1.w, r2.w, r3.x, r1.w
    mul r3.xyz, r1.wwww, cb2[12].xyzx
    exp r2.xyz, r3.xyzx
  endif 
  mad r2.xyz, r2.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r2.xyz, r2.xyzx, -cb2[9].zzzz
  dp3 r1.x, cb2[7].yzwy, -r1.xyzx
  mad r1.y, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r1.z, cb2[8].w, -r1.x, l(1.000000)
  mul r1.z, r1.z, r1.z
  mul r1.z, r1.z, l(12.566371)
  div r1.y, r1.y, r1.z
  add r0.w, r0.w, -cb2[10].w
  mul_sat r0.w, r0.w, cb2[11].w
  mul r0.w, r0.w, r1.y
  mov_sat r1.x, r1.x
  mad r1.x, r1.x, r1.x, l(1.000000)
  mad r1.x, r1.x, l(0.05968310), l(-1.000000)
  mad r1.x, cb2[8].z, r1.x, l(1.000000)
  mul r1.yzw, r0.wwww, cb2[11].xxyz
  mad r1.xyz, r1.xxxx, cb2[10].xyzx, r1.yzwy
  mul r1.xyz, r1.xyzx, cb2[9].wwww
  add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r1.xyz, r1.xyzx, r3.xyzx
  mad r1.xyz, r0.xyzx, r2.xyzx, r1.xyzx
else 
  mul r0.w, v5.z, cb2[6].x
  mad r1.w, cb2[6].x, v5.z, cb2[5].x
  lt r2.x, |r0.w|, l(0.000100)
  min r2.y, r1.w, l(64.000000)
  mul r2.y, r2.y, l(1.442695)
  exp r2.y, r2.y
  mov_sat r2.z, cb2[6].z
  lt r2.w, r1.w, l(0.000000)
  add r1.w, r1.w, l(1.000000)
  movc r1.w, r2.w, r2.y, r1.w
  add r1.w, r1.w, -cb2[6].z
  movc r0.w, r2.x, l(1.000000), r0.w
  div r0.w, r1.w, r0.w
  movc r0.w, r2.x, r2.z, r0.w
  mul r0.w, r0.w, cb2[5].z
  dp3 r1.w, v5.xyzx, v5.xyzx
  sqrt r2.x, r1.w
  mad r0.w, r0.w, r2.x, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  rsq r1.w, r1.w
  mul r2.xyz, r1.wwww, v5.xyzx
  dp3 r1.w, cb2[7].yzwy, r2.xyzx
  mad_sat r1.w, cb2[8].y, r1.w, cb2[8].x
  add r2.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r2.xyzw, r1.wwww, r2.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r2.w
  add r2.xyz, -r0.xyzx, r2.xyzx
  mad r1.xyz, r0.wwww, r2.xyzx, r0.xyzx
endif 
mul r0.xyz, r1.xyzx, cb1[85].yyyy
ge r1.xyz, r0.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.xyz, r0.xyzx, r1.xyzx
min o0.xyz, r0.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
ret 
// Approximately 2243 instruction slots used
