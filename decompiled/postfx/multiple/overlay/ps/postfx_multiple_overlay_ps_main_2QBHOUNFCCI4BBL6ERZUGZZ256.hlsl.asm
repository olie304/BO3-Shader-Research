//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:40:12 2021
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float alphaRevealSoftEdge;         // Offset:  160 Size:     4 [unused]
//   float alphaRevealRamp;             // Offset:  164 Size:     4 [unused]
//   float scanlineScale;               // Offset:  168 Size:     4
//   float2 w1ScaleUVs;                 // Offset:  176 Size:     8
//   float2 w1OffsetUVs;                // Offset:  184 Size:     8
//   float2 w1RotateUVs;                // Offset:  192 Size:     8
//   float2 w1ScrollUVs;                // Offset:  200 Size:     8
//   float2 w1ZoomUVs;                  // Offset:  208 Size:     8
//   float w1ZoomRate;                  // Offset:  216 Size:     4
//   bool w1Enabled;                    // Offset:  220 Size:     4 [unused]
//   float2 w2ScaleUVs;                 // Offset:  224 Size:     8
//   float2 w2OffsetUVs;                // Offset:  232 Size:     8
//   float2 w2RotateUVs;                // Offset:  240 Size:     8
//   float2 w2ScrollUVs;                // Offset:  248 Size:     8
//   float2 w2ZoomUVs;                  // Offset:  256 Size:     8
//   float w2ZoomRate;                  // Offset:  264 Size:     4
//   bool w2Enabled;                    // Offset:  268 Size:     4 [unused]
//   float2 w3ScaleUVs;                 // Offset:  272 Size:     8
//   float2 w3OffsetUVs;                // Offset:  280 Size:     8
//   float2 w3RotateUVs;                // Offset:  288 Size:     8
//   float2 w3ScrollUVs;                // Offset:  296 Size:     8
//   float2 w3ZoomUVs;                  // Offset:  304 Size:     8
//   float w3ZoomRate;                  // Offset:  312 Size:     4
//   bool w3Enabled;                    // Offset:  316 Size:     4 [unused]
//   float2 w4ScaleUVs;                 // Offset:  320 Size:     8
//   float2 w4OffsetUVs;                // Offset:  328 Size:     8
//   float2 w4RotateUVs;                // Offset:  336 Size:     8
//   float2 w4ScrollUVs;                // Offset:  344 Size:     8
//   float2 w4ZoomUVs;                  // Offset:  352 Size:     8
//   float w4ZoomRate;                  // Offset:  360 Size:     4
//   bool w4Enabled;                    // Offset:  364 Size:     4 [unused]
//   float2 w5ScaleUVs;                 // Offset:  368 Size:     8
//   float2 w5OffsetUVs;                // Offset:  376 Size:     8
//   float2 w5RotateUVs;                // Offset:  384 Size:     8
//   float2 w5ScrollUVs;                // Offset:  392 Size:     8
//   float2 w5ZoomUVs;                  // Offset:  400 Size:     8
//   float w5ZoomRate;                  // Offset:  408 Size:     4
//   bool w5Enabled;                    // Offset:  412 Size:     4 [unused]
//
// }
//
// cbuffer GenericsCBuffer
// {
//
//   float4 scriptVector0;              // Offset:    0 Size:    16
//   float4 scriptVector1;              // Offset:   16 Size:    16
//   float4 scriptVector2;              // Offset:   32 Size:    16 [unused]
//   float4 scriptVector3;              // Offset:   48 Size:    16 [unused]
//   float4 scriptVector4;              // Offset:   64 Size:    16 [unused]
//   float4 scriptVector5;              // Offset:   80 Size:    16 [unused]
//   float4 scriptVector6;              // Offset:   96 Size:    16 [unused]
//   float4 scriptVector7;              // Offset:  112 Size:    16 [unused]
//   float4 weaponParam0;               // Offset:  128 Size:    16 [unused]
//   float4 weaponParam1;               // Offset:  144 Size:    16 [unused]
//   float4 weaponParam2;               // Offset:  160 Size:    16 [unused]
//   float4 weaponParam3;               // Offset:  176 Size:    16 [unused]
//   float4 weaponParam4;               // Offset:  192 Size:    16 [unused]
//   float4 weaponParam5;               // Offset:  208 Size:    16 [unused]
//   float4 weaponParam6;               // Offset:  224 Size:    16 [unused]
//   float4 weaponParam7;               // Offset:  240 Size:    16 [unused]
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16 [unused]
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16
//   float4 gameTick;                   // Offset: 1120 Size:    16 [unused]
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16 [unused]
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// bilinearClampler                  sampler      NA          NA             s1      1 
// bilinearSampler                   sampler      NA          NA             s2      1 
// frameBuffer                       texture  float4          2d             t0      1 
// colorMap                          texture  float4          2d             t6      1 
// widgetMap1                        texture  float4          2d             t7      1 
// widgetMap2                        texture  float4          2d             t9      1 
// widgetMap3                        texture  float4          2d            t10      1 
// widgetMap4                        texture  float4          2d            t11      1 
// widgetMap5                        texture  float4          2d            t12      1 
// scanlineMap                       texture  float4          2d            t14      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// GenericsCBuffer                   cbuffer      NA          NA            cb3      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[26], immediateIndexed
dcl_constantbuffer CB3[2], immediateIndexed
dcl_constantbuffer CB1[70], immediateIndexed
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t11
dcl_resource_texture2d (float,float,float,float) t12
dcl_resource_texture2d (float,float,float,float) t14
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 8
div r0.x, cb1[44].x, cb1[44].y
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t6.xyzw, s1
mul r2.xy, v1.xyxx, cb0[10].zzzz
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r2.xyxx, t14.xyzw, s2
mul r2.w, r2.w, cb3[1].z
add r2.xyz, r2.xyzx, l(-2.000000, -2.000000, -2.000000, 0.000000)
mad r2.xyz, r2.wwww, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
lt r3.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), cb3[0].yzwy
if_nz r3.x
  mov r0.y, l(1.000000)
  mul r3.xw, r0.xxxy, cb0[11].xxxy
  add r4.xy, v1.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
  mul r4.zw, r3.xxxw, cb0[11].zzzw
  mad r4.xy, r4.xyxx, r3.xwxx, r4.zwzz
  mul r4.zw, cb0[12].zzzw, cb1[69].wwww
  mad r2.w, cb0[12].y, cb1[69].w, l(1.000000)
  mul r2.w, r2.w, cb0[12].x
  mul r2.w, r2.w, l(0.01745329)
  sincos r5.x, r6.x, r2.w
  mov r6.y, r6.x
  mov r6.z, r5.x
  dp2 r7.x, r6.yzyy, r4.xyxx
  mov r6.x, -r5.x
  dp2 r7.y, r6.xyxx, r4.xyxx
  mad r3.xw, r4.zzzw, r3.xxxw, r7.xxxy
  mul r2.w, cb0[13].z, cb1[69].w
  sincos null, r2.w, r2.w
  mad r2.w, r2.w, l(0.500000), l(0.500000)
  add r2.w, -r2.w, l(1.000000)
  add r4.x, -cb0[13].x, cb0[13].y
  mad r2.w, r2.w, r4.x, cb0[13].x
  div r3.xw, r3.xxxw, r2.wwww
  add r3.xw, r3.xxxw, l(0.500000, 0.000000, 0.000000, 0.500000)
  sample_indexable(texture2d)(float,float,float,float) r4.xyz, r3.xwxx, t7.xyzw, s1
  add r5.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mad r4.xyz, -r4.xyzx, cb3[0].yyyy, l(1.000000, 1.000000, 1.000000, 0.000000)
  mad r1.xyz, -r5.xyzx, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
endif 
if_nz r3.y
  mov r0.z, l(1.000000)
  mul r3.xy, r0.xzxx, cb0[14].xyxx
  add r4.xy, v1.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
  mul r4.zw, r3.xxxy, cb0[14].zzzw
  mad r4.xy, r4.xyxx, r3.xyxx, r4.zwzz
  mul r4.zw, cb0[15].zzzw, cb1[69].wwww
  mad r0.z, cb0[15].y, cb1[69].w, l(1.000000)
  mul r0.z, r0.z, cb0[15].x
  mul r0.z, r0.z, l(0.01745329)
  sincos r5.x, r6.x, r0.z
  mov r6.y, r6.x
  mov r6.z, r5.x
  dp2 r7.x, r6.yzyy, r4.xyxx
  mov r6.x, -r5.x
  dp2 r7.y, r6.xyxx, r4.xyxx
  mad r3.xy, r4.zwzz, r3.xyxx, r7.xyxx
  mul r0.z, cb0[16].z, cb1[69].w
  sincos null, r0.z, r0.z
  mad r0.z, r0.z, l(0.500000), l(0.500000)
  add r0.z, -r0.z, l(1.000000)
  add r2.w, -cb0[16].x, cb0[16].y
  mad r0.z, r0.z, r2.w, cb0[16].x
  div r3.xy, r3.xyxx, r0.zzzz
  add r3.xy, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  sample_indexable(texture2d)(float,float,float,float) r3.xyw, r3.xyxx, t9.xywz, s1
  add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mad r3.xyw, -r3.xyxw, cb3[0].zzzz, l(1.000000, 1.000000, 0.000000, 1.000000)
  mad r1.xyz, -r4.xyzx, r3.xywx, l(1.000000, 1.000000, 1.000000, 0.000000)
endif 
if_nz r3.z
  mov r0.w, l(1.000000)
  mul r0.zw, r0.xxxw, cb0[17].xxxy
  add r3.xy, v1.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
  mul r3.zw, r0.zzzw, cb0[17].zzzw
  mad r3.xy, r3.xyxx, r0.zwzz, r3.zwzz
  mul r3.zw, cb0[18].zzzw, cb1[69].wwww
  mad r2.w, cb0[18].y, cb1[69].w, l(1.000000)
  mul r2.w, r2.w, cb0[18].x
  mul r2.w, r2.w, l(0.01745329)
  sincos r4.x, r5.x, r2.w
  mov r5.y, r5.x
  mov r5.z, r4.x
  dp2 r6.x, r5.yzyy, r3.xyxx
  mov r5.x, -r4.x
  dp2 r6.y, r5.xyxx, r3.xyxx
  mad r0.zw, r3.zzzw, r0.zzzw, r6.xxxy
  mul r2.w, cb0[19].z, cb1[69].w
  sincos null, r2.w, r2.w
  mad r2.w, r2.w, l(0.500000), l(0.500000)
  add r2.w, -r2.w, l(1.000000)
  add r3.x, -cb0[19].x, cb0[19].y
  mad r2.w, r2.w, r3.x, cb0[19].x
  div r0.zw, r0.zzzw, r2.wwww
  add r0.zw, r0.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
  sample_indexable(texture2d)(float,float,float,float) r3.xyz, r0.zwzz, t10.xyzw, s1
  add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mad r3.xyz, -r3.xyzx, cb3[0].wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
  mad r1.xyz, -r4.xyzx, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
endif 
lt r0.zw, l(0.000000, 0.000000, 0.000000, 0.000000), cb3[1].xxxy
if_nz r0.z
  mov r0.y, l(1.000000)
  mul r3.xy, r0.xyxx, cb0[20].xyxx
  add r3.zw, v1.xxxy, l(0.000000, 0.000000, -0.500000, -0.500000)
  mul r4.xy, r3.xyxx, cb0[20].zwzz
  mad r3.zw, r3.zzzw, r3.xxxy, r4.xxxy
  mul r4.xy, cb0[21].zwzz, cb1[69].wwww
  mad r0.z, cb0[21].y, cb1[69].w, l(1.000000)
  mul r0.z, r0.z, cb0[21].x
  mul r0.z, r0.z, l(0.01745329)
  sincos r5.x, r6.x, r0.z
  mov r6.y, r6.x
  mov r6.z, r5.x
  dp2 r7.x, r6.yzyy, r3.zwzz
  mov r6.x, -r5.x
  dp2 r7.y, r6.xyxx, r3.zwzz
  mad r3.xy, r4.xyxx, r3.xyxx, r7.xyxx
  mul r0.z, cb0[22].z, cb1[69].w
  sincos null, r0.z, r0.z
  mad r0.z, r0.z, l(0.500000), l(0.500000)
  add r0.z, -r0.z, l(1.000000)
  add r2.w, -cb0[22].x, cb0[22].y
  mad r0.z, r0.z, r2.w, cb0[22].x
  div r3.xy, r3.xyxx, r0.zzzz
  add r3.xy, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  sample_indexable(texture2d)(float,float,float,float) r3.xyz, r3.xyxx, t11.xyzw, s1
  add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mad r3.xyz, -r3.xyzx, cb3[1].xxxx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mad r1.xyz, -r4.xyzx, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
endif 
if_nz r0.w
  mov r0.y, l(1.000000)
  mul r0.xy, r0.xyxx, cb0[23].xyxx
  add r0.zw, v1.xxxy, l(0.000000, 0.000000, -0.500000, -0.500000)
  mul r3.xy, r0.xyxx, cb0[23].zwzz
  mad r0.zw, r0.zzzw, r0.xxxy, r3.xxxy
  mul r3.xy, cb0[24].zwzz, cb1[69].wwww
  mad r2.w, cb0[24].y, cb1[69].w, l(1.000000)
  mul r2.w, r2.w, cb0[24].x
  mul r2.w, r2.w, l(0.01745329)
  sincos r4.x, r5.x, r2.w
  mov r5.y, r5.x
  mov r5.z, r4.x
  dp2 r6.x, r5.yzyy, r0.zwzz
  mov r5.x, -r4.x
  dp2 r6.y, r5.xyxx, r0.zwzz
  mad r0.xy, r3.xyxx, r0.xyxx, r6.xyxx
  mul r0.z, cb0[25].z, cb1[69].w
  sincos null, r0.z, r0.z
  mad r0.z, r0.z, l(0.500000), l(0.500000)
  add r0.z, -r0.z, l(1.000000)
  add r0.w, -cb0[25].x, cb0[25].y
  mad r0.z, r0.z, r0.w, cb0[25].x
  div r0.xy, r0.xyxx, r0.zzzz
  add r0.xy, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  sample_indexable(texture2d)(float,float,float,float) r0.xyz, r0.xyxx, t12.xyzw, s1
  add r3.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mad r0.xyz, -r0.xyzx, cb3[1].yyyy, l(1.000000, 1.000000, 1.000000, 0.000000)
  mad r1.xyz, -r3.xyzx, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
endif 
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t0.xyzw, s1
mov_sat r2.w, cb3[0].x
mul r1.w, r1.w, r2.w
mad r0.xyz, -r0.xyzx, l(0.00003052, 0.00003052, 0.00003052, 0.000000), l(1.000000, 1.000000, 1.000000, 0.000000)
mad r1.xyz, -r1.xyzx, r1.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r0.xyz, -r0.xyzx, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r0.xyz, r2.xyzx, r0.xyzx
mul o0.xyz, r0.xyzx, l(32768.000000, 32768.000000, 32768.000000, 0.000000)
mov o0.w, r0.w
ret 
// Approximately 169 instruction slots used
