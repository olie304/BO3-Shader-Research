// ---- Created with 3Dmigoto v1.2.45 on Thu Jul 15 15:40:11 2021

cbuffer PostFxCBuffer : register(b8)
{
  float4 postFxControl0 : packoffset(c0);
  float4 postFxControl1 : packoffset(c1);
  float4 postFxControl2 : packoffset(c2);
  float4 postFxControl3 : packoffset(c3);
  float4 postFxControl4 : packoffset(c4);
  float4 postFxControl5 : packoffset(c5);
  float4 postFxControl6 : packoffset(c6);
  float4 postFxControl7 : packoffset(c7);
  float4 postFxControl8 : packoffset(c8);
  float4 postFxControl9 : packoffset(c9);
  float4 postFxControlA : packoffset(c10);
  float4 postFxControlB : packoffset(c11);
  float4 postFxControlC : packoffset(c12);
  float4 postFxControlD : packoffset(c13);
  float4 postFxControlE : packoffset(c14);
  float4 postFxControlF : packoffset(c15);
  float4 postFxConst00 : packoffset(c16);
  float4 postFxConst01 : packoffset(c17);
  float4 postFxConst02 : packoffset(c18);
  float4 postFxConst03 : packoffset(c19);
  float4 postFxConst04 : packoffset(c20);
  float4 postFxConst05 : packoffset(c21);
  float4 postFxConst06 : packoffset(c22);
  float4 postFxConst07 : packoffset(c23);
  float4 postFxConst08 : packoffset(c24);
  float4 postFxConst09 : packoffset(c25);
  float4 postFxConst10 : packoffset(c26);
  float4 postFxConst11 : packoffset(c27);
  float4 postFxConst12 : packoffset(c28);
  float4 postFxConst13 : packoffset(c29);
  float4 postFxConst14 : packoffset(c30);
  float4 postFxConst15 : packoffset(c31);
  float4 postFxConst16 : packoffset(c32);
  float4 postFxConst17 : packoffset(c33);
  float4 postFxConst18 : packoffset(c34);
  float4 postFxConst19 : packoffset(c35);
  float4 postFxConst20 : packoffset(c36);
  float4 postFxConst21 : packoffset(c37);
  float4 postFxConst22 : packoffset(c38);
  float4 postFxConst23 : packoffset(c39);
  float4 postFxConst24 : packoffset(c40);
  float4 postFxConst25 : packoffset(c41);
  float4 postFxConst26 : packoffset(c42);
  float4 postFxConst27 : packoffset(c43);
  float4 postFxConst28 : packoffset(c44);
  float4 postFxConst29 : packoffset(c45);
  float4 postFxConst30 : packoffset(c46);
  float4 postFxConst31 : packoffset(c47);
  float4 postFxConst32 : packoffset(c48);
  float4 postFxConst33 : packoffset(c49);
  float4 postFxConst34 : packoffset(c50);
  float4 postFxConst35 : packoffset(c51);
  float4 postFxConst36 : packoffset(c52);
  float4 postFxConst37 : packoffset(c53);
  float4 postFxConst38 : packoffset(c54);
  float4 postFxConst39 : packoffset(c55);
  float4 postFxConst40 : packoffset(c56);
  float4 postFxConst41 : packoffset(c57);
  float4 postFxConst42 : packoffset(c58);
  float4 postFxConst43 : packoffset(c59);
  float4 postFxConst44 : packoffset(c60);
  float4 postFxConst45 : packoffset(c61);
  float4 postFxConst46 : packoffset(c62);
  float4 postFxConst47 : packoffset(c63);
  float4 postFxConst48 : packoffset(c64);
  float4 postFxConst49 : packoffset(c65);
  float4 postFxConst50 : packoffset(c66);
  float4 postFxConst51 : packoffset(c67);
  float4 postFxConst52 : packoffset(c68);
  float4 postFxConst53 : packoffset(c69);
  float4 postFxConst54 : packoffset(c70);
  float4 postFxConst55 : packoffset(c71);
  float4 postFxConst56 : packoffset(c72);
  float4 postFxConst57 : packoffset(c73);
  float4 postFxConst58 : packoffset(c74);
  float4 postFxConst59 : packoffset(c75);
  float4 postFxConst60 : packoffset(c76);
  float4 postFxConst61 : packoffset(c77);
  float4 postFxConst62 : packoffset(c78);
  float4 postFxConst63 : packoffset(c79);
  float4 postFxBloom00 : packoffset(c80);
  float4 postFxBloom01 : packoffset(c81);
  float4 postFxBloom02 : packoffset(c82);
  float4 postFxBloom03 : packoffset(c83);
  float4 postFxBloom04 : packoffset(c84);
  float4 postFxBloom05 : packoffset(c85);
  float4 postFxBloom06 : packoffset(c86);
  float4 postFxBloom07 : packoffset(c87);
  float4 postFxBloom08 : packoffset(c88);
  float4 postFxBloom09 : packoffset(c89);
  float4 postFxBloom10 : packoffset(c90);
  float4 postFxBloom11 : packoffset(c91);
  float4 postFxBloom12 : packoffset(c92);
  float4 postFxBloom13 : packoffset(c93);
  float4 postFxBloom14 : packoffset(c94);
  float4 postFxBloom15 : packoffset(c95);
  float4 postFxBloom16 : packoffset(c96);
  float4 postFxBloom17 : packoffset(c97);
  float4 postFxBloom18 : packoffset(c98);
  float4 postFxBloom19 : packoffset(c99);
  float4 postFxBloom20 : packoffset(c100);
  float4 postFxBloom21 : packoffset(c101);
  float4 postFxBloom22 : packoffset(c102);
  float4 postFxBloom23 : packoffset(c103);
  float4 postFxBloom24 : packoffset(c104);
  float4 postFxBloom25 : packoffset(c105);
  float4 filterTap[8] : packoffset(c106);
  float4 postfxViewMatrix0 : packoffset(c114);
  float4 postfxViewMatrix1 : packoffset(c115);
  float4 postfxViewMatrix2 : packoffset(c116);
  float4 postfxViewMatrix3 : packoffset(c117);
  float4 postfxProjMatrix0 : packoffset(c118);
  float4 postfxProjMatrix1 : packoffset(c119);
  float4 postfxProjMatrix2 : packoffset(c120);
  float4 postfxProjMatrix3 : packoffset(c121);
  float4 postfxViewProjMatrix0 : packoffset(c122);
  float4 postfxViewProjMatrix1 : packoffset(c123);
  float4 postfxViewProjMatrix2 : packoffset(c124);
  float4 postfxViewProjMatrix3 : packoffset(c125);
}

SamplerState pointClamp_s : register(s1);
Texture2D<float4> codeTexture0 : register(t0);


// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main( 
  float4 v0 : SV_POSITION0,
  float2 v1 : TEXCOORD0,
  out float4 o0 : SV_TARGET0)
{
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21,r22;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xy = postFxControl0.xy + v1.xy;
  r1.xyzw = codeTexture0.Sample(pointClamp_s, r0.xy).xyzw;
  r2.xyzw = r1.xyzw * float4(255,255,255,255) + float4(-128,-128,-128,-128);
  r3.z = dot(r2.xy, r2.xy);
  r2.z = dot(r2.zw, r2.zw);
  r0.z = cmp(-1 < r3.z);
  r3.xy = r1.xy;
  r2.xy = r1.zw;
  r1.xyz = r0.zzz ? r3.xyz : float3(0,0,-1);
  r0.zw = postFxControl0.zw + r0.xy;
  r3.xyzw = codeTexture0.Sample(pointClamp_s, r0.zw).xyzw;
  r4.xyzw = r3.xyzw * float4(255,255,255,255) + float4(-128,-128,-128,-128);
  r5.z = dot(r4.xy, r4.xy);
  r4.z = dot(r4.zw, r4.zw);
  r0.z = cmp(r1.z < r5.z);
  r5.xy = r3.xy;
  r4.xy = r3.zw;
  r1.xyz = r0.zzz ? r5.xyz : r1.xyz;
  r0.zw = postFxControl0.zw * float2(2,2) + r0.xy;
  r3.xyzw = codeTexture0.Sample(pointClamp_s, r0.zw).xyzw;
  r5.xyzw = r3.xyzw * float4(255,255,255,255) + float4(-128,-128,-128,-128);
  r6.z = dot(r5.xy, r5.xy);
  r5.z = dot(r5.zw, r5.zw);
  r0.z = cmp(r1.z < r6.z);
  r6.xy = r3.xy;
  r5.xy = r3.zw;
  r1.xyz = r0.zzz ? r6.xyz : r1.xyz;
  r3.xyzw = postFxControl0.zwzw * float4(3,3,4,4) + r0.xyxy;
  r6.xyzw = codeTexture0.Sample(pointClamp_s, r3.xy).xyzw;
  r3.xyzw = codeTexture0.Sample(pointClamp_s, r3.zw).xyzw;
  r7.xyzw = r6.xyzw * float4(255,255,255,255) + float4(-128,-128,-128,-128);
  r8.z = dot(r7.xy, r7.xy);
  r7.z = dot(r7.zw, r7.zw);
  r0.z = cmp(r1.z < r8.z);
  r8.xy = r6.xy;
  r7.xy = r6.zw;
  r1.xyz = r0.zzz ? r8.xyz : r1.xyz;
  r6.xyzw = r3.xyzw * float4(255,255,255,255) + float4(-128,-128,-128,-128);
  r8.z = dot(r6.xy, r6.xy);
  r6.z = dot(r6.zw, r6.zw);
  r0.z = cmp(r1.z < r8.z);
  r8.xy = r3.xy;
  r6.xy = r3.zw;
  r1.xyz = r0.zzz ? r8.xyz : r1.xyz;
  r3.xyzw = postFxControl0.zwzw * float4(5,5,6,6) + r0.xyxy;
  r8.xyzw = codeTexture0.Sample(pointClamp_s, r3.xy).xyzw;
  r3.xyzw = codeTexture0.Sample(pointClamp_s, r3.zw).xyzw;
  r9.xyzw = r8.xyzw * float4(255,255,255,255) + float4(-128,-128,-128,-128);
  r10.z = dot(r9.xy, r9.xy);
  r9.z = dot(r9.zw, r9.zw);
  r0.z = cmp(r1.z < r10.z);
  r10.xy = r8.xy;
  r9.xy = r8.zw;
  r1.xyz = r0.zzz ? r10.xyz : r1.xyz;
  r8.xyzw = r3.xyzw * float4(255,255,255,255) + float4(-128,-128,-128,-128);
  r10.z = dot(r8.xy, r8.xy);
  r8.z = dot(r8.zw, r8.zw);
  r0.z = cmp(r1.z < r10.z);
  r10.xy = r3.xy;
  r8.xy = r3.zw;
  r1.xyz = r0.zzz ? r10.xyz : r1.xyz;
  r3.xyzw = postFxControl0.zwzw * float4(7,7,8,8) + r0.xyxy;
  r10.xyzw = codeTexture0.Sample(pointClamp_s, r3.xy).xyzw;
  r3.xyzw = codeTexture0.Sample(pointClamp_s, r3.zw).xyzw;
  r11.xyzw = r10.xyzw * float4(255,255,255,255) + float4(-128,-128,-128,-128);
  r12.z = dot(r11.xy, r11.xy);
  r11.z = dot(r11.zw, r11.zw);
  r0.z = cmp(r1.z < r12.z);
  r12.xy = r10.xy;
  r11.xy = r10.zw;
  r1.xyz = r0.zzz ? r12.xyz : r1.xyz;
  r10.xyzw = r3.xyzw * float4(255,255,255,255) + float4(-128,-128,-128,-128);
  r12.z = dot(r10.xy, r10.xy);
  r10.z = dot(r10.zw, r10.zw);
  r0.z = cmp(r1.z < r12.z);
  r12.xy = r3.xy;
  r10.xy = r3.zw;
  r1.xyz = r0.zzz ? r12.xyz : r1.xyz;
  r3.xyzw = postFxControl0.zwzw * float4(9,9,10,10) + r0.xyxy;
  r12.xyzw = codeTexture0.Sample(pointClamp_s, r3.xy).xyzw;
  r3.xyzw = codeTexture0.Sample(pointClamp_s, r3.zw).xyzw;
  r13.xyzw = r12.xyzw * float4(255,255,255,255) + float4(-128,-128,-128,-128);
  r14.z = dot(r13.xy, r13.xy);
  r13.z = dot(r13.zw, r13.zw);
  r0.z = cmp(r1.z < r14.z);
  r14.xy = r12.xy;
  r13.xy = r12.zw;
  r1.xyz = r0.zzz ? r14.xyz : r1.xyz;
  r12.xyzw = r3.xyzw * float4(255,255,255,255) + float4(-128,-128,-128,-128);
  r14.z = dot(r12.xy, r12.xy);
  r12.z = dot(r12.zw, r12.zw);
  r0.z = cmp(r1.z < r14.z);
  r14.xy = r3.xy;
  r12.xy = r3.zw;
  r1.xyz = r0.zzz ? r14.xyz : r1.xyz;
  r3.xyzw = postFxControl0.zwzw * float4(11,11,12,12) + r0.xyxy;
  r14.xyzw = codeTexture0.Sample(pointClamp_s, r3.xy).xyzw;
  r3.xyzw = codeTexture0.Sample(pointClamp_s, r3.zw).xyzw;
  r15.xyzw = r14.xyzw * float4(255,255,255,255) + float4(-128,-128,-128,-128);
  r16.z = dot(r15.xy, r15.xy);
  r15.z = dot(r15.zw, r15.zw);
  r0.z = cmp(r1.z < r16.z);
  r16.xy = r14.xy;
  r15.xy = r14.zw;
  r1.xyz = r0.zzz ? r16.xyz : r1.xyz;
  r14.xyzw = r3.xyzw * float4(255,255,255,255) + float4(-128,-128,-128,-128);
  r16.z = dot(r14.xy, r14.xy);
  r14.z = dot(r14.zw, r14.zw);
  r0.z = cmp(r1.z < r16.z);
  r16.xy = r3.xy;
  r14.xy = r3.zw;
  r1.xyz = r0.zzz ? r16.xyz : r1.xyz;
  r3.xyzw = postFxControl0.zwzw * float4(13,13,14,14) + r0.xyxy;
  r16.xyzw = codeTexture0.Sample(pointClamp_s, r3.xy).xyzw;
  r3.xyzw = codeTexture0.Sample(pointClamp_s, r3.zw).xyzw;
  r17.xyzw = r16.xyzw * float4(255,255,255,255) + float4(-128,-128,-128,-128);
  r18.z = dot(r17.xy, r17.xy);
  r17.z = dot(r17.zw, r17.zw);
  r0.z = cmp(r1.z < r18.z);
  r18.xy = r16.xy;
  r17.xy = r16.zw;
  r1.xyz = r0.zzz ? r18.xyz : r1.xyz;
  r16.xyzw = r3.xyzw * float4(255,255,255,255) + float4(-128,-128,-128,-128);
  r18.z = dot(r16.xy, r16.xy);
  r16.z = dot(r16.zw, r16.zw);
  r0.z = cmp(r1.z < r18.z);
  r18.xy = r3.xy;
  r16.xy = r3.zw;
  r1.xyz = r0.zzz ? r18.xyz : r1.xyz;
  r3.xyzw = postFxControl0.zwzw * float4(15,15,16,16) + r0.xyxy;
  r18.xyzw = codeTexture0.Sample(pointClamp_s, r3.xy).xyzw;
  r3.xyzw = codeTexture0.Sample(pointClamp_s, r3.zw).xyzw;
  r19.xyzw = r18.xyzw * float4(255,255,255,255) + float4(-128,-128,-128,-128);
  r20.z = dot(r19.xy, r19.xy);
  r19.z = dot(r19.zw, r19.zw);
  r0.z = cmp(r1.z < r20.z);
  r20.xy = r18.xy;
  r19.xy = r18.zw;
  r1.xyz = r0.zzz ? r20.xyz : r1.xyz;
  r18.xyzw = r3.xyzw * float4(255,255,255,255) + float4(-128,-128,-128,-128);
  r20.z = dot(r18.xy, r18.xy);
  r18.z = dot(r18.zw, r18.zw);
  r0.z = cmp(r1.z < r20.z);
  r20.xy = r3.xy;
  r18.xy = r3.zw;
  r1.xyz = r0.zzz ? r20.xyz : r1.xyz;
  r3.xyzw = postFxControl0.zwzw * float4(17,17,18,18) + r0.xyxy;
  r0.xy = postFxControl0.zw * float2(19,19) + r0.xy;
  r0.xyzw = codeTexture0.Sample(pointClamp_s, r0.xy).xyzw;
  r20.xyzw = codeTexture0.Sample(pointClamp_s, r3.xy).xyzw;
  r3.xyzw = codeTexture0.Sample(pointClamp_s, r3.zw).xyzw;
  r21.xyzw = r20.xyzw * float4(255,255,255,255) + float4(-128,-128,-128,-128);
  r22.z = dot(r21.xy, r21.xy);
  r21.z = dot(r21.zw, r21.zw);
  r1.w = cmp(r1.z < r22.z);
  r22.xy = r20.xy;
  r21.xy = r20.zw;
  r1.xyz = r1.www ? r22.xyz : r1.xyz;
  r20.xyzw = r3.xyzw * float4(255,255,255,255) + float4(-128,-128,-128,-128);
  r22.z = dot(r20.xy, r20.xy);
  r20.z = dot(r20.zw, r20.zw);
  r1.w = cmp(r1.z < r22.z);
  r22.xy = r3.xy;
  r20.xy = r3.zw;
  r1.xyz = r1.www ? r22.xyz : r1.xyz;
  r3.xyzw = r0.xyzw * float4(255,255,255,255) + float4(-128,-128,-128,-128);
  r1.w = dot(r3.xy, r3.xy);
  r2.w = dot(r3.zw, r3.zw);
  r1.z = cmp(r1.z < r1.w);
  o0.xy = r1.zz ? r0.xy : r1.xy;
  r0.x = cmp(r2.z < 1601);
  r1.xyz = r0.xxx ? r2.xyz : float3(0,0,1601);
  r0.x = cmp(r4.z < r1.z);
  r1.xyz = r0.xxx ? r4.xyz : r1.xyz;
  r0.x = cmp(r5.z < r1.z);
  r1.xyz = r0.xxx ? r5.xyz : r1.xyz;
  r0.x = cmp(r7.z < r1.z);
  r1.xyz = r0.xxx ? r7.xyz : r1.xyz;
  r0.x = cmp(r6.z < r1.z);
  r1.xyz = r0.xxx ? r6.xyz : r1.xyz;
  r0.x = cmp(r9.z < r1.z);
  r1.xyz = r0.xxx ? r9.xyz : r1.xyz;
  r0.x = cmp(r8.z < r1.z);
  r1.xyz = r0.xxx ? r8.xyz : r1.xyz;
  r0.x = cmp(r11.z < r1.z);
  r1.xyz = r0.xxx ? r11.xyz : r1.xyz;
  r0.x = cmp(r10.z < r1.z);
  r1.xyz = r0.xxx ? r10.xyz : r1.xyz;
  r0.x = cmp(r13.z < r1.z);
  r1.xyz = r0.xxx ? r13.xyz : r1.xyz;
  r0.x = cmp(r12.z < r1.z);
  r1.xyz = r0.xxx ? r12.xyz : r1.xyz;
  r0.x = cmp(r15.z < r1.z);
  r1.xyz = r0.xxx ? r15.xyz : r1.xyz;
  r0.x = cmp(r14.z < r1.z);
  r1.xyz = r0.xxx ? r14.xyz : r1.xyz;
  r0.x = cmp(r17.z < r1.z);
  r1.xyz = r0.xxx ? r17.xyz : r1.xyz;
  r0.x = cmp(r16.z < r1.z);
  r1.xyz = r0.xxx ? r16.xyz : r1.xyz;
  r0.x = cmp(r19.z < r1.z);
  r1.xyz = r0.xxx ? r19.xyz : r1.xyz;
  r0.x = cmp(r18.z < r1.z);
  r1.xyz = r0.xxx ? r18.xyz : r1.xyz;
  r0.x = cmp(r21.z < r1.z);
  r1.xyz = r0.xxx ? r21.xyz : r1.xyz;
  r0.x = cmp(r20.z < r1.z);
  r1.xyz = r0.xxx ? r20.xyz : r1.xyz;
  r0.x = cmp(r2.w < r1.z);
  o0.zw = r0.xx ? r0.zw : r1.xy;
  return;
}