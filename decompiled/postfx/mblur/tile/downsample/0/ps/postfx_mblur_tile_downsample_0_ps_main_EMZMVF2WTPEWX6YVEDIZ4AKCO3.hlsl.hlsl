// ---- Created with 3Dmigoto v1.2.45 on Thu Jul 15 15:40:11 2021

cbuffer PostFxCBuffer : register(b8)
{
  float4 postFxControl0 : packoffset(c0);
  float4 postFxControl1 : packoffset(c1);
  float4 postFxControl2 : packoffset(c2);
  float4 postFxControl3 : packoffset(c3);
  float4 postFxControl4 : packoffset(c4);
  float4 postFxControl5 : packoffset(c5);
  float4 postFxControl6 : packoffset(c6);
  float4 postFxControl7 : packoffset(c7);
  float4 postFxControl8 : packoffset(c8);
  float4 postFxControl9 : packoffset(c9);
  float4 postFxControlA : packoffset(c10);
  float4 postFxControlB : packoffset(c11);
  float4 postFxControlC : packoffset(c12);
  float4 postFxControlD : packoffset(c13);
  float4 postFxControlE : packoffset(c14);
  float4 postFxControlF : packoffset(c15);
  float4 postFxConst00 : packoffset(c16);
  float4 postFxConst01 : packoffset(c17);
  float4 postFxConst02 : packoffset(c18);
  float4 postFxConst03 : packoffset(c19);
  float4 postFxConst04 : packoffset(c20);
  float4 postFxConst05 : packoffset(c21);
  float4 postFxConst06 : packoffset(c22);
  float4 postFxConst07 : packoffset(c23);
  float4 postFxConst08 : packoffset(c24);
  float4 postFxConst09 : packoffset(c25);
  float4 postFxConst10 : packoffset(c26);
  float4 postFxConst11 : packoffset(c27);
  float4 postFxConst12 : packoffset(c28);
  float4 postFxConst13 : packoffset(c29);
  float4 postFxConst14 : packoffset(c30);
  float4 postFxConst15 : packoffset(c31);
  float4 postFxConst16 : packoffset(c32);
  float4 postFxConst17 : packoffset(c33);
  float4 postFxConst18 : packoffset(c34);
  float4 postFxConst19 : packoffset(c35);
  float4 postFxConst20 : packoffset(c36);
  float4 postFxConst21 : packoffset(c37);
  float4 postFxConst22 : packoffset(c38);
  float4 postFxConst23 : packoffset(c39);
  float4 postFxConst24 : packoffset(c40);
  float4 postFxConst25 : packoffset(c41);
  float4 postFxConst26 : packoffset(c42);
  float4 postFxConst27 : packoffset(c43);
  float4 postFxConst28 : packoffset(c44);
  float4 postFxConst29 : packoffset(c45);
  float4 postFxConst30 : packoffset(c46);
  float4 postFxConst31 : packoffset(c47);
  float4 postFxConst32 : packoffset(c48);
  float4 postFxConst33 : packoffset(c49);
  float4 postFxConst34 : packoffset(c50);
  float4 postFxConst35 : packoffset(c51);
  float4 postFxConst36 : packoffset(c52);
  float4 postFxConst37 : packoffset(c53);
  float4 postFxConst38 : packoffset(c54);
  float4 postFxConst39 : packoffset(c55);
  float4 postFxConst40 : packoffset(c56);
  float4 postFxConst41 : packoffset(c57);
  float4 postFxConst42 : packoffset(c58);
  float4 postFxConst43 : packoffset(c59);
  float4 postFxConst44 : packoffset(c60);
  float4 postFxConst45 : packoffset(c61);
  float4 postFxConst46 : packoffset(c62);
  float4 postFxConst47 : packoffset(c63);
  float4 postFxConst48 : packoffset(c64);
  float4 postFxConst49 : packoffset(c65);
  float4 postFxConst50 : packoffset(c66);
  float4 postFxConst51 : packoffset(c67);
  float4 postFxConst52 : packoffset(c68);
  float4 postFxConst53 : packoffset(c69);
  float4 postFxConst54 : packoffset(c70);
  float4 postFxConst55 : packoffset(c71);
  float4 postFxConst56 : packoffset(c72);
  float4 postFxConst57 : packoffset(c73);
  float4 postFxConst58 : packoffset(c74);
  float4 postFxConst59 : packoffset(c75);
  float4 postFxConst60 : packoffset(c76);
  float4 postFxConst61 : packoffset(c77);
  float4 postFxConst62 : packoffset(c78);
  float4 postFxConst63 : packoffset(c79);
  float4 postFxBloom00 : packoffset(c80);
  float4 postFxBloom01 : packoffset(c81);
  float4 postFxBloom02 : packoffset(c82);
  float4 postFxBloom03 : packoffset(c83);
  float4 postFxBloom04 : packoffset(c84);
  float4 postFxBloom05 : packoffset(c85);
  float4 postFxBloom06 : packoffset(c86);
  float4 postFxBloom07 : packoffset(c87);
  float4 postFxBloom08 : packoffset(c88);
  float4 postFxBloom09 : packoffset(c89);
  float4 postFxBloom10 : packoffset(c90);
  float4 postFxBloom11 : packoffset(c91);
  float4 postFxBloom12 : packoffset(c92);
  float4 postFxBloom13 : packoffset(c93);
  float4 postFxBloom14 : packoffset(c94);
  float4 postFxBloom15 : packoffset(c95);
  float4 postFxBloom16 : packoffset(c96);
  float4 postFxBloom17 : packoffset(c97);
  float4 postFxBloom18 : packoffset(c98);
  float4 postFxBloom19 : packoffset(c99);
  float4 postFxBloom20 : packoffset(c100);
  float4 postFxBloom21 : packoffset(c101);
  float4 postFxBloom22 : packoffset(c102);
  float4 postFxBloom23 : packoffset(c103);
  float4 postFxBloom24 : packoffset(c104);
  float4 postFxBloom25 : packoffset(c105);
  float4 filterTap[8] : packoffset(c106);
  float4 postfxViewMatrix0 : packoffset(c114);
  float4 postfxViewMatrix1 : packoffset(c115);
  float4 postfxViewMatrix2 : packoffset(c116);
  float4 postfxViewMatrix3 : packoffset(c117);
  float4 postfxProjMatrix0 : packoffset(c118);
  float4 postfxProjMatrix1 : packoffset(c119);
  float4 postfxProjMatrix2 : packoffset(c120);
  float4 postfxProjMatrix3 : packoffset(c121);
  float4 postfxViewProjMatrix0 : packoffset(c122);
  float4 postfxViewProjMatrix1 : packoffset(c123);
  float4 postfxViewProjMatrix2 : packoffset(c124);
  float4 postfxViewProjMatrix3 : packoffset(c125);
}

SamplerState pointClamp_s : register(s1);
Texture2D<float4> codeTexture0 : register(t0);


// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main( 
  float4 v0 : SV_POSITION0,
  float2 v1 : TEXCOORD0,
  out float4 o0 : SV_TARGET0)
{
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xy = postFxControl0.xy + v1.xy;
  r1.xy = codeTexture0.Sample(pointClamp_s, r0.xy).xy;
  r0.zw = r1.xy * float2(255,255) + float2(-128,-128);
  r1.z = dot(r0.zw, r0.zw);
  r0.z = cmp(-1 < r1.z);
  r2.xyz = r0.zzz ? r1.xyz : float3(0,0,-1);
  r0.zw = postFxControl0.zw + r0.xy;
  r3.xy = codeTexture0.Sample(pointClamp_s, r0.zw).xy;
  r0.zw = r3.xy * float2(255,255) + float2(-128,-128);
  r3.z = dot(r0.zw, r0.zw);
  r0.z = cmp(r2.z < r3.z);
  r2.xyz = r0.zzz ? r3.xyz : r2.xyz;
  r0.zw = postFxControl0.zw * float2(2,2) + r0.xy;
  r4.xy = codeTexture0.Sample(pointClamp_s, r0.zw).xy;
  r0.zw = r4.xy * float2(255,255) + float2(-128,-128);
  r4.z = dot(r0.zw, r0.zw);
  r0.z = cmp(r2.z < r4.z);
  r2.xyz = r0.zzz ? r4.xyz : r2.xyz;
  r5.xyzw = postFxControl0.zwzw * float4(3,3,4,4) + r0.xyxy;
  r6.xy = codeTexture0.Sample(pointClamp_s, r5.xy).xy;
  r5.xy = codeTexture0.Sample(pointClamp_s, r5.zw).xy;
  r0.zw = r6.xy * float2(255,255) + float2(-128,-128);
  r6.z = dot(r0.zw, r0.zw);
  r0.z = cmp(r2.z < r6.z);
  r2.xyz = r0.zzz ? r6.xyz : r2.xyz;
  r0.zw = r5.xy * float2(255,255) + float2(-128,-128);
  r5.z = dot(r0.zw, r0.zw);
  r0.z = cmp(r2.z < r5.z);
  r2.xyz = r0.zzz ? r5.xyz : r2.xyz;
  r7.xyzw = postFxControl0.zwzw * float4(5,5,6,6) + r0.xyxy;
  r8.xy = codeTexture0.Sample(pointClamp_s, r7.xy).xy;
  r7.xy = codeTexture0.Sample(pointClamp_s, r7.zw).xy;
  r0.zw = r8.xy * float2(255,255) + float2(-128,-128);
  r8.z = dot(r0.zw, r0.zw);
  r0.z = cmp(r2.z < r8.z);
  r2.xyz = r0.zzz ? r8.xyz : r2.xyz;
  r0.zw = r7.xy * float2(255,255) + float2(-128,-128);
  r7.z = dot(r0.zw, r0.zw);
  r0.z = cmp(r2.z < r7.z);
  r2.xyz = r0.zzz ? r7.xyz : r2.xyz;
  r9.xyzw = postFxControl0.zwzw * float4(7,7,8,8) + r0.xyxy;
  r10.xy = codeTexture0.Sample(pointClamp_s, r9.xy).xy;
  r9.xy = codeTexture0.Sample(pointClamp_s, r9.zw).xy;
  r0.zw = r10.xy * float2(255,255) + float2(-128,-128);
  r10.z = dot(r0.zw, r0.zw);
  r0.z = cmp(r2.z < r10.z);
  r2.xyz = r0.zzz ? r10.xyz : r2.xyz;
  r0.zw = r9.xy * float2(255,255) + float2(-128,-128);
  r9.z = dot(r0.zw, r0.zw);
  r0.z = cmp(r2.z < r9.z);
  r2.xyz = r0.zzz ? r9.xyz : r2.xyz;
  r11.xyzw = postFxControl0.zwzw * float4(9,9,10,10) + r0.xyxy;
  r12.xy = codeTexture0.Sample(pointClamp_s, r11.xy).xy;
  r11.xy = codeTexture0.Sample(pointClamp_s, r11.zw).xy;
  r0.zw = r12.xy * float2(255,255) + float2(-128,-128);
  r12.z = dot(r0.zw, r0.zw);
  r0.z = cmp(r2.z < r12.z);
  r2.xyz = r0.zzz ? r12.xyz : r2.xyz;
  r0.zw = r11.xy * float2(255,255) + float2(-128,-128);
  r11.z = dot(r0.zw, r0.zw);
  r0.z = cmp(r2.z < r11.z);
  r2.xyz = r0.zzz ? r11.xyz : r2.xyz;
  r13.xyzw = postFxControl0.zwzw * float4(11,11,12,12) + r0.xyxy;
  r14.xy = codeTexture0.Sample(pointClamp_s, r13.xy).xy;
  r13.xy = codeTexture0.Sample(pointClamp_s, r13.zw).xy;
  r0.zw = r14.xy * float2(255,255) + float2(-128,-128);
  r14.z = dot(r0.zw, r0.zw);
  r0.z = cmp(r2.z < r14.z);
  r2.xyz = r0.zzz ? r14.xyz : r2.xyz;
  r0.zw = r13.xy * float2(255,255) + float2(-128,-128);
  r13.z = dot(r0.zw, r0.zw);
  r0.z = cmp(r2.z < r13.z);
  r2.xyz = r0.zzz ? r13.xyz : r2.xyz;
  r15.xyzw = postFxControl0.zwzw * float4(13,13,14,14) + r0.xyxy;
  r16.xy = codeTexture0.Sample(pointClamp_s, r15.xy).xy;
  r15.xy = codeTexture0.Sample(pointClamp_s, r15.zw).xy;
  r0.zw = r16.xy * float2(255,255) + float2(-128,-128);
  r16.z = dot(r0.zw, r0.zw);
  r0.z = cmp(r2.z < r16.z);
  r2.xyz = r0.zzz ? r16.xyz : r2.xyz;
  r0.zw = r15.xy * float2(255,255) + float2(-128,-128);
  r15.z = dot(r0.zw, r0.zw);
  r0.z = cmp(r2.z < r15.z);
  r2.xyz = r0.zzz ? r15.xyz : r2.xyz;
  r17.xyzw = postFxControl0.zwzw * float4(15,15,16,16) + r0.xyxy;
  r18.xy = codeTexture0.Sample(pointClamp_s, r17.xy).xy;
  r17.xy = codeTexture0.Sample(pointClamp_s, r17.zw).xy;
  r0.zw = r18.xy * float2(255,255) + float2(-128,-128);
  r18.z = dot(r0.zw, r0.zw);
  r0.z = cmp(r2.z < r18.z);
  r2.xyz = r0.zzz ? r18.xyz : r2.xyz;
  r0.zw = r17.xy * float2(255,255) + float2(-128,-128);
  r17.z = dot(r0.zw, r0.zw);
  r0.z = cmp(r2.z < r17.z);
  r2.xyz = r0.zzz ? r17.xyz : r2.xyz;
  r19.xyzw = postFxControl0.zwzw * float4(17,17,18,18) + r0.xyxy;
  r0.xy = postFxControl0.zw * float2(19,19) + r0.xy;
  r0.xy = codeTexture0.Sample(pointClamp_s, r0.xy).xy;
  r20.xy = codeTexture0.Sample(pointClamp_s, r19.xy).xy;
  r19.xy = codeTexture0.Sample(pointClamp_s, r19.zw).xy;
  r0.zw = r20.xy * float2(255,255) + float2(-128,-128);
  r20.z = dot(r0.zw, r0.zw);
  r0.z = cmp(r2.z < r20.z);
  r2.xyz = r0.zzz ? r20.xyz : r2.xyz;
  r0.zw = r19.xy * float2(255,255) + float2(-128,-128);
  r19.z = dot(r0.zw, r0.zw);
  r0.z = cmp(r2.z < r19.z);
  r2.xyz = r0.zzz ? r19.xyz : r2.xyz;
  r0.zw = r0.xy * float2(255,255) + float2(-128,-128);
  r0.z = dot(r0.zw, r0.zw);
  r0.w = cmp(r2.z < r0.z);
  o0.xy = r0.ww ? r0.xy : r2.xy;
  r0.w = cmp(r1.z < 1601);
  r1.xyz = r0.www ? r1.xyz : float3(0,0,1601);
  r0.w = cmp(r3.z < r1.z);
  r1.xyz = r0.www ? r3.xyz : r1.xyz;
  r0.w = cmp(r4.z < r1.z);
  r1.xyz = r0.www ? r4.xyz : r1.xyz;
  r0.w = cmp(r6.z < r1.z);
  r1.xyz = r0.www ? r6.xyz : r1.xyz;
  r0.w = cmp(r5.z < r1.z);
  r1.xyz = r0.www ? r5.xyz : r1.xyz;
  r0.w = cmp(r8.z < r1.z);
  r1.xyz = r0.www ? r8.xyz : r1.xyz;
  r0.w = cmp(r7.z < r1.z);
  r1.xyz = r0.www ? r7.xyz : r1.xyz;
  r0.w = cmp(r10.z < r1.z);
  r1.xyz = r0.www ? r10.xyz : r1.xyz;
  r0.w = cmp(r9.z < r1.z);
  r1.xyz = r0.www ? r9.xyz : r1.xyz;
  r0.w = cmp(r12.z < r1.z);
  r1.xyz = r0.www ? r12.xyz : r1.xyz;
  r0.w = cmp(r11.z < r1.z);
  r1.xyz = r0.www ? r11.xyz : r1.xyz;
  r0.w = cmp(r14.z < r1.z);
  r1.xyz = r0.www ? r14.xyz : r1.xyz;
  r0.w = cmp(r13.z < r1.z);
  r1.xyz = r0.www ? r13.xyz : r1.xyz;
  r0.w = cmp(r16.z < r1.z);
  r1.xyz = r0.www ? r16.xyz : r1.xyz;
  r0.w = cmp(r15.z < r1.z);
  r1.xyz = r0.www ? r15.xyz : r1.xyz;
  r0.w = cmp(r18.z < r1.z);
  r1.xyz = r0.www ? r18.xyz : r1.xyz;
  r0.w = cmp(r17.z < r1.z);
  r1.xyz = r0.www ? r17.xyz : r1.xyz;
  r0.w = cmp(r20.z < r1.z);
  r1.xyz = r0.www ? r20.xyz : r1.xyz;
  r0.w = cmp(r19.z < r1.z);
  r1.xyz = r0.www ? r19.xyz : r1.xyz;
  r0.z = cmp(r0.z < r1.z);
  o0.zw = r0.zz ? r0.xy : r1.xy;
  return;
}