//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:40:10 2021
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float alphaRevealSoftEdge;         // Offset:  160 Size:     4
//   float alphaRevealRamp;             // Offset:  164 Size:     4
//   float pulseWidth;                  // Offset:  168 Size:     4
//   float3 pulseColor;                 // Offset:  176 Size:    12
//   float glowBoost;                   // Offset:  188 Size:     4
//   float2 pulseScroll;                // Offset:  192 Size:     8
//   float2 pulseTiling;                // Offset:  200 Size:     8
//   float pulseCurvature;              // Offset:  208 Size:     4
//   float2 distortionScroll;           // Offset:  212 Size:     8
//   float2 distortionScale;            // Offset:  224 Size:     8
//   float distortionAmt;               // Offset:  232 Size:     4
//   float blurAmt;                     // Offset:  236 Size:     4
//
// }
//
// cbuffer PostFxCBuffer
// {
//
//   float4 postFxControl0;             // Offset:    0 Size:    16 [unused]
//   float4 postFxControl1;             // Offset:   16 Size:    16 [unused]
//   float4 postFxControl2;             // Offset:   32 Size:    16 [unused]
//   float4 postFxControl3;             // Offset:   48 Size:    16 [unused]
//   float4 postFxControl4;             // Offset:   64 Size:    16 [unused]
//   float4 postFxControl5;             // Offset:   80 Size:    16 [unused]
//   float4 postFxControl6;             // Offset:   96 Size:    16 [unused]
//   float4 postFxControl7;             // Offset:  112 Size:    16 [unused]
//   float4 postFxControl8;             // Offset:  128 Size:    16 [unused]
//   float4 postFxControl9;             // Offset:  144 Size:    16 [unused]
//   float4 postFxControlA;             // Offset:  160 Size:    16 [unused]
//   float4 postFxControlB;             // Offset:  176 Size:    16 [unused]
//   float4 postFxControlC;             // Offset:  192 Size:    16 [unused]
//   float4 postFxControlD;             // Offset:  208 Size:    16 [unused]
//   float4 postFxControlE;             // Offset:  224 Size:    16 [unused]
//   float4 postFxControlF;             // Offset:  240 Size:    16 [unused]
//   float4 postFxConst00;              // Offset:  256 Size:    16 [unused]
//   float4 postFxConst01;              // Offset:  272 Size:    16 [unused]
//   float4 postFxConst02;              // Offset:  288 Size:    16 [unused]
//   float4 postFxConst03;              // Offset:  304 Size:    16 [unused]
//   float4 postFxConst04;              // Offset:  320 Size:    16 [unused]
//   float4 postFxConst05;              // Offset:  336 Size:    16 [unused]
//   float4 postFxConst06;              // Offset:  352 Size:    16 [unused]
//   float4 postFxConst07;              // Offset:  368 Size:    16 [unused]
//   float4 postFxConst08;              // Offset:  384 Size:    16 [unused]
//   float4 postFxConst09;              // Offset:  400 Size:    16 [unused]
//   float4 postFxConst10;              // Offset:  416 Size:    16 [unused]
//   float4 postFxConst11;              // Offset:  432 Size:    16 [unused]
//   float4 postFxConst12;              // Offset:  448 Size:    16 [unused]
//   float4 postFxConst13;              // Offset:  464 Size:    16 [unused]
//   float4 postFxConst14;              // Offset:  480 Size:    16 [unused]
//   float4 postFxConst15;              // Offset:  496 Size:    16 [unused]
//   float4 postFxConst16;              // Offset:  512 Size:    16 [unused]
//   float4 postFxConst17;              // Offset:  528 Size:    16 [unused]
//   float4 postFxConst18;              // Offset:  544 Size:    16 [unused]
//   float4 postFxConst19;              // Offset:  560 Size:    16 [unused]
//   float4 postFxConst20;              // Offset:  576 Size:    16 [unused]
//   float4 postFxConst21;              // Offset:  592 Size:    16 [unused]
//   float4 postFxConst22;              // Offset:  608 Size:    16 [unused]
//   float4 postFxConst23;              // Offset:  624 Size:    16 [unused]
//   float4 postFxConst24;              // Offset:  640 Size:    16 [unused]
//   float4 postFxConst25;              // Offset:  656 Size:    16 [unused]
//   float4 postFxConst26;              // Offset:  672 Size:    16 [unused]
//   float4 postFxConst27;              // Offset:  688 Size:    16 [unused]
//   float4 postFxConst28;              // Offset:  704 Size:    16 [unused]
//   float4 postFxConst29;              // Offset:  720 Size:    16 [unused]
//   float4 postFxConst30;              // Offset:  736 Size:    16 [unused]
//   float4 postFxConst31;              // Offset:  752 Size:    16 [unused]
//   float4 postFxConst32;              // Offset:  768 Size:    16 [unused]
//   float4 postFxConst33;              // Offset:  784 Size:    16 [unused]
//   float4 postFxConst34;              // Offset:  800 Size:    16 [unused]
//   float4 postFxConst35;              // Offset:  816 Size:    16 [unused]
//   float4 postFxConst36;              // Offset:  832 Size:    16 [unused]
//   float4 postFxConst37;              // Offset:  848 Size:    16 [unused]
//   float4 postFxConst38;              // Offset:  864 Size:    16 [unused]
//   float4 postFxConst39;              // Offset:  880 Size:    16 [unused]
//   float4 postFxConst40;              // Offset:  896 Size:    16 [unused]
//   float4 postFxConst41;              // Offset:  912 Size:    16 [unused]
//   float4 postFxConst42;              // Offset:  928 Size:    16 [unused]
//   float4 postFxConst43;              // Offset:  944 Size:    16 [unused]
//   float4 postFxConst44;              // Offset:  960 Size:    16 [unused]
//   float4 postFxConst45;              // Offset:  976 Size:    16 [unused]
//   float4 postFxConst46;              // Offset:  992 Size:    16 [unused]
//   float4 postFxConst47;              // Offset: 1008 Size:    16 [unused]
//   float4 postFxConst48;              // Offset: 1024 Size:    16 [unused]
//   float4 postFxConst49;              // Offset: 1040 Size:    16 [unused]
//   float4 postFxConst50;              // Offset: 1056 Size:    16 [unused]
//   float4 postFxConst51;              // Offset: 1072 Size:    16 [unused]
//   float4 postFxConst52;              // Offset: 1088 Size:    16 [unused]
//   float4 postFxConst53;              // Offset: 1104 Size:    16 [unused]
//   float4 postFxConst54;              // Offset: 1120 Size:    16 [unused]
//   float4 postFxConst55;              // Offset: 1136 Size:    16 [unused]
//   float4 postFxConst56;              // Offset: 1152 Size:    16 [unused]
//   float4 postFxConst57;              // Offset: 1168 Size:    16 [unused]
//   float4 postFxConst58;              // Offset: 1184 Size:    16 [unused]
//   float4 postFxConst59;              // Offset: 1200 Size:    16 [unused]
//   float4 postFxConst60;              // Offset: 1216 Size:    16 [unused]
//   float4 postFxConst61;              // Offset: 1232 Size:    16 [unused]
//   float4 postFxConst62;              // Offset: 1248 Size:    16 [unused]
//   float4 postFxConst63;              // Offset: 1264 Size:    16 [unused]
//   float4 postFxBloom00;              // Offset: 1280 Size:    16 [unused]
//   float4 postFxBloom01;              // Offset: 1296 Size:    16 [unused]
//   float4 postFxBloom02;              // Offset: 1312 Size:    16 [unused]
//   float4 postFxBloom03;              // Offset: 1328 Size:    16 [unused]
//   float4 postFxBloom04;              // Offset: 1344 Size:    16 [unused]
//   float4 postFxBloom05;              // Offset: 1360 Size:    16 [unused]
//   float4 postFxBloom06;              // Offset: 1376 Size:    16 [unused]
//   float4 postFxBloom07;              // Offset: 1392 Size:    16 [unused]
//   float4 postFxBloom08;              // Offset: 1408 Size:    16 [unused]
//   float4 postFxBloom09;              // Offset: 1424 Size:    16 [unused]
//   float4 postFxBloom10;              // Offset: 1440 Size:    16 [unused]
//   float4 postFxBloom11;              // Offset: 1456 Size:    16 [unused]
//   float4 postFxBloom12;              // Offset: 1472 Size:    16 [unused]
//   float4 postFxBloom13;              // Offset: 1488 Size:    16 [unused]
//   float4 postFxBloom14;              // Offset: 1504 Size:    16 [unused]
//   float4 postFxBloom15;              // Offset: 1520 Size:    16 [unused]
//   float4 postFxBloom16;              // Offset: 1536 Size:    16 [unused]
//   float4 postFxBloom17;              // Offset: 1552 Size:    16 [unused]
//   float4 postFxBloom18;              // Offset: 1568 Size:    16 [unused]
//   float4 postFxBloom19;              // Offset: 1584 Size:    16 [unused]
//   float4 postFxBloom20;              // Offset: 1600 Size:    16 [unused]
//   float4 postFxBloom21;              // Offset: 1616 Size:    16 [unused]
//   float4 postFxBloom22;              // Offset: 1632 Size:    16 [unused]
//   float4 postFxBloom23;              // Offset: 1648 Size:    16 [unused]
//   float4 postFxBloom24;              // Offset: 1664 Size:    16 [unused]
//   float4 postFxBloom25;              // Offset: 1680 Size:    16 [unused]
//   float4 filterTap[8];               // Offset: 1696 Size:   128 [unused]
//   float4 postfxViewMatrix0;          // Offset: 1824 Size:    16 [unused]
//   float4 postfxViewMatrix1;          // Offset: 1840 Size:    16 [unused]
//   float4 postfxViewMatrix2;          // Offset: 1856 Size:    16 [unused]
//   float4 postfxViewMatrix3;          // Offset: 1872 Size:    16 [unused]
//   float4 postfxProjMatrix0;          // Offset: 1888 Size:    16
//   float4 postfxProjMatrix1;          // Offset: 1904 Size:    16
//   float4 postfxProjMatrix2;          // Offset: 1920 Size:    16 [unused]
//   float4 postfxProjMatrix3;          // Offset: 1936 Size:    16 [unused]
//   float4 postfxViewProjMatrix0;      // Offset: 1952 Size:    16 [unused]
//   float4 postfxViewProjMatrix1;      // Offset: 1968 Size:    16 [unused]
//   float4 postfxViewProjMatrix2;      // Offset: 1984 Size:    16 [unused]
//   float4 postfxViewProjMatrix3;      // Offset: 2000 Size:    16 [unused]
//
// }
//
// cbuffer GenericsCBuffer
// {
//
//   float4 scriptVector0;              // Offset:    0 Size:    16
//   float4 scriptVector1;              // Offset:   16 Size:    16
//   float4 scriptVector2;              // Offset:   32 Size:    16 [unused]
//   float4 scriptVector3;              // Offset:   48 Size:    16 [unused]
//   float4 scriptVector4;              // Offset:   64 Size:    16 [unused]
//   float4 scriptVector5;              // Offset:   80 Size:    16 [unused]
//   float4 scriptVector6;              // Offset:   96 Size:    16 [unused]
//   float4 scriptVector7;              // Offset:  112 Size:    16 [unused]
//   float4 weaponParam0;               // Offset:  128 Size:    16 [unused]
//   float4 weaponParam1;               // Offset:  144 Size:    16 [unused]
//   float4 weaponParam2;               // Offset:  160 Size:    16 [unused]
//   float4 weaponParam3;               // Offset:  176 Size:    16 [unused]
//   float4 weaponParam4;               // Offset:  192 Size:    16 [unused]
//   float4 weaponParam5;               // Offset:  208 Size:    16 [unused]
//   float4 weaponParam6;               // Offset:  224 Size:    16 [unused]
//   float4 weaponParam7;               // Offset:  240 Size:    16 [unused]
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16 [unused]
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16
//   float4 gameTick;                   // Offset: 1120 Size:    16 [unused]
//   float4 subpixelOffset;             // Offset: 1136 Size:    16
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16 [unused]
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// trilinearSampler                  sampler      NA          NA             s1      1 
// bilinearClampler                  sampler      NA          NA             s2      1 
// pointSampler                      sampler      NA          NA             s3      1 
// frameBuffer                       texture  float4          2d             t0      1 
// floatzTexture                     texture  float4          2d             t6      1 
// pulseTexture                      texture  float4          2d             t7      1 
// irisTexture                       texture  float4          2d             t9      1 
// distortionMask                    texture  float4          2d            t10      1 
// distortionMap                     texture  float4          2d            t11      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// GenericsCBuffer                   cbuffer      NA          NA            cb3      1 
// PostFxCBuffer                     cbuffer      NA          NA            cb8      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[15], immediateIndexed
dcl_constantbuffer CB8[120], immediateIndexed
dcl_constantbuffer CB3[2], immediateIndexed
dcl_constantbuffer CB1[74], immediateIndexed
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t11
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 17
sample_indexable(texture2d)(float,float,float,float) r0.x, v1.xyxx, t10.xyzw, s1
mul r0.y, r0.x, cb3[1].y
lt r0.y, l(0.000000), r0.y
mul r1.xyzw, cb0[14].zzww, cb1[44].zwzw
mul r1.xyzw, r0.xxxx, r1.xyzw
mul r1.xyzw, r1.xyzw, cb3[1].yyyy
mul r0.xz, cb0[13].yyzy, cb1[69].wwww
mad r0.xz, v1.xxyx, cb0[14].xxyx, r0.xxzx
sample_indexable(texture2d)(float,float,float,float) r0.xz, r0.xzxx, t11.xzyw, s1
mad r2.xyzw, r0.xzxz, l(1.99218750, 1.99218750, 1.99218750, 1.99218750), l(-1.000000, -1.000000, -1.000000, -1.000000)
mad r2.xyzw, r2.xyzw, r1.xyxy, v1.xyxy
max r0.x, r1.w, r1.z
mad_sat r1.xyzw, r0.xxxx, l(-0.56308931, -0.26805860, -0.10714890, -0.65222108), r2.zwzw
sample_indexable(texture2d)(float,float,float,float) r3.xyzw, r1.xyxx, t0.xyzw, s2
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, r1.zwzz, t0.xyzw, s2
mad_sat r4.xyzw, r0.xxxx, l(-0.29749349, 0.23678830, -0.94028169, 0.28764710), r2.zwzw
sample_indexable(texture2d)(float,float,float,float) r5.xyzw, r4.xyxx, t0.xyzw, s2
sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r4.zwzz, t0.xyzw, s2
mad_sat r6.xyzw, r0.xxxx, l(0.374713, -0.33693859, 0.45787710, -0.74987531), r2.zwzw
sample_indexable(texture2d)(float,float,float,float) r7.xyzw, r6.xyxx, t0.xyzw, s2
sample_indexable(texture2d)(float,float,float,float) r6.xyzw, r6.zwzz, t0.xyzw, s2
mad_sat r8.xyzw, r0.xxxx, l(-0.44277370, -0.886701, 0.78879791, -0.427878), r2.zwzw
sample_indexable(texture2d)(float,float,float,float) r9.xyzw, r8.xyxx, t0.xyzw, s2
sample_indexable(texture2d)(float,float,float,float) r8.xyzw, r8.zwzz, t0.xyzw, s2
mad_sat r10.xyzw, r0.xxxx, l(-0.02906443, -0.20072490, 0.42776331, 0.16513520), r2.zwzw
sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r10.xyxx, t0.xyzw, s2
sample_indexable(texture2d)(float,float,float,float) r10.xyzw, r10.zwzz, t0.xyzw, s2
mad_sat r12.xyzw, r0.xxxx, l(-0.23078820, 0.64043868, -0.65763211, 0.67459911), r2.zwzw
sample_indexable(texture2d)(float,float,float,float) r13.xyzw, r12.xyxx, t0.xyzw, s2
sample_indexable(texture2d)(float,float,float,float) r12.xyzw, r12.zwzz, t0.xyzw, s2
mad_sat r14.xyzw, r0.xxxx, l(0.86913669, 0.00676916, 0.28367040, 0.93041968), r2.zwzw
sample_indexable(texture2d)(float,float,float,float) r15.xyzw, r14.xyxx, t0.xyzw, s2
sample_indexable(texture2d)(float,float,float,float) r14.xyzw, r14.zwzz, t0.xyzw, s2
mad_sat r2.xyzw, r0.xxxx, l(0.51202959, 0.59052241, -0.96844608, -0.18936320), r2.xyzw
sample_indexable(texture2d)(float,float,float,float) r16.xyzw, r2.xyxx, t0.xyzw, s2
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r2.zwzz, t0.xyzw, s2
if_nz r0.y
  add r0.xyzw, r1.xyzw, r3.xyzw
  add r0.xyzw, r5.xyzw, r0.xyzw
  add r0.xyzw, r4.xyzw, r0.xyzw
  add r0.xyzw, r7.xyzw, r0.xyzw
  add r0.xyzw, r6.xyzw, r0.xyzw
  add r0.xyzw, r9.xyzw, r0.xyzw
  add r0.xyzw, r8.xyzw, r0.xyzw
  add r0.xyzw, r11.xyzw, r0.xyzw
  add r0.xyzw, r10.xyzw, r0.xyzw
  add r0.xyzw, r13.xyzw, r0.xyzw
  add r0.xyzw, r12.xyzw, r0.xyzw
  add r0.xyzw, r15.xyzw, r0.xyzw
  add r0.xyzw, r14.xyzw, r0.xyzw
  add r0.xyzw, r16.xyzw, r0.xyzw
  add r0.xyzw, r2.xyzw, r0.xyzw
  mul r0.xyzw, r0.xyzw, l(0.062500, 0.062500, 0.062500, 0.062500)
else 
  sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t0.xyzw, s2
endif 
mad r1.x, v1.x, l(2.000000), l(-1.000000)
mul r1.x, |r1.x|, |r1.x|
mad r1.x, r1.x, -cb0[13].x, l(1.000000)
sample_indexable(texture2d)(float,float,float,float) r1.y, v1.xyxx, t6.yxzw, s2
ge r1.z, r1.y, l(0.984375)
mul r1.w, r1.y, l(1.01587307)
mad r2.x, r1.y, l(64.000000), l(-63.000000)
movc r1.z, r1.z, r2.x, r1.w
max r1.xz, r1.xxzx, l(0.001000, 0.000000, 0.00000001, 0.000000)
rcp r1.z, r1.z
max r1.w, cb3[1].x, l(0.001000)
div r2.x, r1.z, r1.w
min r2.x, r2.x, l(1.000000)
log r2.x, r2.x
mul r1.x, r1.x, r2.x
exp r1.x, r1.x
dp4 r2.x, r0.xyzw, l(81.239487, 17.348024, 37.349838, 59.394840)
frc r2.x, r2.x
mov r2.yzw, r0.yyzw
dp4 r0.w, r2.xyzw, l(81.239487, 17.348024, 37.349838, 59.394840)
frc r2.y, r0.w
dp4 r0.w, r2.xyzw, l(81.239487, 17.348024, 37.349838, 59.394840)
frc r2.z, r0.w
dp4 r0.w, r2.xyzw, l(81.239487, 17.348024, 37.349838, 59.394840)
frc r3.w, r0.w
mov r3.xyz, r2.xyzx
dp4 r0.w, r3.xyzw, l(81.239487, 17.348024, 37.349838, 59.394840)
frc r3.x, r0.w
dp4 r0.w, r3.xyzw, l(81.239487, 17.348024, 37.349838, 59.394840)
frc r0.w, r0.w
mul r2.xy, cb1[69].wwww, l(0.130000, -0.700000, 0.000000, 0.000000)
sincos null, r2.x, r2.x
mad r2.x, r2.x, l(0.500000), l(0.500000)
mul r0.w, r0.w, r2.x
sincos r2.x, null, r2.y
mad r2.x, r2.x, l(0.500000), l(0.500000)
mul r2.x, r2.x, r3.x
mul r2.y, v1.x, l(402.123871)
sincos null, r2.y, r2.y
mad r2.y, r2.y, l(0.500000), l(0.500000)
mul r3.x, r0.w, r2.y
mul r0.w, r1.x, l(402.123871)
sincos null, r0.w, r0.w
mad r0.w, r0.w, l(0.500000), l(0.500000)
mul r3.y, r2.x, r0.w
mul r2.xy, v1.xyxx, cb0[12].zwzz
mul r3.zw, cb0[12].xxxy, cb1[69].wwww
mad r4.xy, v1.xyxx, cb0[12].zwzz, r3.zwzz
sample_indexable(texture2d)(float,float,float,float) r0.w, r4.xyxx, t7.yzwx, s1
mul r3.zw, r3.zzzw, l(0.000000, 0.000000, -1.370000, 1.730000)
mad r2.xy, r2.xyxx, l(0.470000, 0.470000, 0.000000, 0.000000), r3.zwzz
mad r2.xy, r3.xyxx, l(0.090000, 0.090000, 0.000000, 0.000000), r2.xyxx
sample_indexable(texture2d)(float,float,float,float) r2.x, r2.xyxx, t7.xyzw, s1
lt r1.y, r1.y, l(0.984375)
if_nz r1.y
  mul r0.w, r0.w, r2.x
  mad r2.xy, -cb1[44].zwzz, l(0.500000, 0.500000, 0.000000, 0.000000), v1.xyxx
  gather4_indexable(texture2d)(float,float,float,float) r2.xyz, r2.xyxx, t6.xyzw, s3.x
  mad r3.yz, cb1[44].zzwz, l(0.000000, 0.500000, 0.500000, 0.000000), v1.xxyx
  gather4_indexable(texture2d)(float,float,float,float) r3.yz, r3.yzyy, t6.yxzw, s3.x
  ge r1.y, r2.y, l(0.984375)
  mul r3.w, r2.y, l(1.01587307)
  mad r4.x, r2.y, l(64.000000), l(-63.000000)
  movc r1.y, r1.y, r4.x, r3.w
  max r1.y, r1.y, l(0.00000001)
  rcp r4.y, r1.y
  mad r5.xy, cb1[73].yxyy, v1.yxyy, -cb1[73].wzww
  mul r4.xz, r4.yyyy, r5.xxyx
  add r5.xyzw, -r2.yyyy, r2.xxzz
  add r6.xyzw, -r2.yyyy, r3.zzyy
  lt r5.xyzw, |r5.xyzw|, |r6.xyzw|
  movc r6.xy, r5.ywyy, l(-1.000000,-1.000000,0,0), l(1.000000,1.000000,0,0)
  movc r5.xyzw, r5.xyzw, r2.xxzz, r3.zzyy
  mul r2.x, r6.x, cb1[44].z
  mov r2.y, l(0)
  add r2.xy, r2.xyxx, v1.xyxx
  ge r3.yz, r5.yywy, l(0.000000, 0.984375, 0.984375, 0.000000)
  mul r5.yw, r5.yyyw, l(0.000000, 1.01587307, 0.000000, 1.01587307)
  mad r5.xz, r5.xxzx, l(64.000000, 0.000000, 64.000000, 0.000000), l(-63.000000, 0.000000, -63.000000, 0.000000)
  movc r3.yz, r3.yyzy, r5.xxzx, r5.yywy
  max r3.yz, r3.yyzy, l(0.000000, 0.00000001, 0.00000001, 0.000000)
  rcp r5.zw, r3.yyyz
  mad r2.xy, cb1[73].xyxx, r2.xyxx, -cb1[73].zwzz
  mul r5.xy, r2.xyxx, r5.zzzz
  mov r6.z, l(0)
  mad r2.xy, r6.yzyy, cb1[44].wzww, v1.yxyy
  mad r2.xy, cb1[73].yxyy, r2.xyxx, -cb1[73].wzww
  mul r2.xz, r2.xxyx, r5.wwww
  add r3.yzw, -r4.yyzx, r5.zzxy
  mul r3.yzw, r3.yyzw, r6.xxxx
  mov r2.y, r5.w
  add r2.xyz, -r4.xyzx, r2.xyzx
  mul r2.xyz, r2.xyzx, r6.yyyy
  mul r4.xyz, r2.xyzx, r3.yzwy
  mad r2.xyz, r3.wyzw, r2.yzxy, -r4.xyzx
  dp3 r1.y, r2.xyzx, r2.xyzx
  rsq r1.y, r1.y
  mul r1.y, r1.y, r2.y
  ge r1.y, r1.y, l(0.900000)
  rcp r2.x, cb8[118].x
  rcp r2.y, cb8[119].y
  add r3.yz, v0.xxyx, -cb1[71].xxyx
  mul r3.yz, r3.yyzy, cb1[44].zzwz
  mad r3.yz, r3.yyzy, l(0.000000, 2.000000, -2.000000, 0.000000), l(0.000000, -1.000000, 1.000000, 0.000000)
  mul r2.xy, r2.xyxx, r3.yzyy
  mov r2.z, l(1.000000)
  mul r2.xyz, r1.zzzz, r2.xyzx
  mul r1.z, r2.y, cb1[17].y
  mad r1.z, r2.x, cb1[16].y, r1.z
  mad r1.z, r2.z, cb1[18].y, r1.z
  ge r1.z, -r1.z, l(1.000000)
  div_sat r1.w, cb3[0].x, r1.w
  mul r2.x, cb0[10].z, cb3[0].y
  mad_sat r2.y, -cb0[10].z, cb3[0].y, r1.w
  add r2.z, r1.w, -r2.y
  add r2.y, r1.x, -r2.y
  div r2.z, l(1.000000, 1.000000, 1.000000, 1.000000), r2.z
  mul_sat r2.y, r2.z, r2.y
  mad r2.z, r2.y, l(-2.000000), l(3.000000)
  mul r2.y, r2.y, r2.y
  mul r2.y, r2.y, r2.z
  ge r2.z, r1.x, r1.w
  movc r2.y, r2.z, l(0), r2.y
  mad_sat r1.w, r2.x, cb3[0].z, r1.w
  ge r1.x, r1.x, r1.w
  and r1.w, r2.z, l(0x3f800000)
  movc r1.x, r1.x, l(0), r1.w
  mad r1.w, r3.x, l(0.200000), l(0.800000)
  dp2 r1.x, r1.xxxx, r1.wwww
  mad r0.w, r2.y, r0.w, r1.x
  ge r1.x, cb3[1].x, cb3[0].x
  and r1.xyz, r1.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
  mul r0.w, r0.w, r1.x
  mul r0.w, r0.w, cb0[11].w
  mul r0.w, r1.y, r0.w
  mul r0.w, r1.z, r0.w
else 
  mov r0.w, l(0)
endif 
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t9.xyzw, s1
mad_sat r2.x, cb3[0].w, l(0.998000), l(0.001000)
add r2.y, -r2.x, l(1.000000)
mov_sat r2.z, cb0[10].y
log r2.x, r2.x
mul r2.x, r2.x, r2.z
exp r2.x, r2.x
mov r3.x, -r2.x
log r2.x, r2.y
mul r2.x, r2.x, r2.z
exp r3.y, r2.x
mad_sat r2.xy, cb0[10].xxxx, r3.xyxx, r2.yyyy
add r1.w, r1.w, -r2.x
add r2.x, -r2.x, r2.y
div_sat r1.w, r1.w, r2.x
mul r1.xyz, r1.wwww, r1.xyzx
mad r1.xyz, cb0[11].xyzx, r0.wwww, r1.xyzx
mad r0.xyz, r0.xyzx, l(0.00003052, 0.00003052, 0.00003052, 0.000000), r1.xyzx
mul o0.xyz, r0.xyzx, l(32768.000000, 32768.000000, 32768.000000, 0.000000)
mov o0.w, r2.w
ret 
// Approximately 216 instruction slots used
