//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:40:19 2021
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float shadowMaskAmount;            // Offset:    0 Size:     4
//   float2 shadowMaskScale;            // Offset:    4 Size:     8
//   float chromaticAberration;         // Offset:   12 Size:     4
//   float2 ghostImageOffset;           // Offset:   16 Size:     8
//   float ghostImageAmount;            // Offset:   24 Size:     4
//   float3 ghostImageTint;             // Offset:   32 Size:    12
//   float4 flagParams;                 // Offset:   48 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   64 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   80 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   96 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:  100 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:  104 Size:     8 [unused]
//   float4 detailScale;                // Offset:  112 Size:    16 [unused]
//   float4 detailScale1;               // Offset:  128 Size:    16 [unused]
//   float4 detailScale2;               // Offset:  144 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  160 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  176 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  192 Size:    16 [unused]
//
// }
//
// cbuffer PostFxCBuffer
// {
//
//   float4 postFxControl0;             // Offset:    0 Size:    16
//   float4 postFxControl1;             // Offset:   16 Size:    16
//   float4 postFxControl2;             // Offset:   32 Size:    16 [unused]
//   float4 postFxControl3;             // Offset:   48 Size:    16 [unused]
//   float4 postFxControl4;             // Offset:   64 Size:    16 [unused]
//   float4 postFxControl5;             // Offset:   80 Size:    16 [unused]
//   float4 postFxControl6;             // Offset:   96 Size:    16 [unused]
//   float4 postFxControl7;             // Offset:  112 Size:    16 [unused]
//   float4 postFxControl8;             // Offset:  128 Size:    16 [unused]
//   float4 postFxControl9;             // Offset:  144 Size:    16 [unused]
//   float4 postFxControlA;             // Offset:  160 Size:    16 [unused]
//   float4 postFxControlB;             // Offset:  176 Size:    16 [unused]
//   float4 postFxControlC;             // Offset:  192 Size:    16 [unused]
//   float4 postFxControlD;             // Offset:  208 Size:    16 [unused]
//   float4 postFxControlE;             // Offset:  224 Size:    16 [unused]
//   float4 postFxControlF;             // Offset:  240 Size:    16 [unused]
//   float4 postFxConst00;              // Offset:  256 Size:    16 [unused]
//   float4 postFxConst01;              // Offset:  272 Size:    16 [unused]
//   float4 postFxConst02;              // Offset:  288 Size:    16 [unused]
//   float4 postFxConst03;              // Offset:  304 Size:    16 [unused]
//   float4 postFxConst04;              // Offset:  320 Size:    16 [unused]
//   float4 postFxConst05;              // Offset:  336 Size:    16 [unused]
//   float4 postFxConst06;              // Offset:  352 Size:    16 [unused]
//   float4 postFxConst07;              // Offset:  368 Size:    16 [unused]
//   float4 postFxConst08;              // Offset:  384 Size:    16 [unused]
//   float4 postFxConst09;              // Offset:  400 Size:    16 [unused]
//   float4 postFxConst10;              // Offset:  416 Size:    16 [unused]
//   float4 postFxConst11;              // Offset:  432 Size:    16 [unused]
//   float4 postFxConst12;              // Offset:  448 Size:    16 [unused]
//   float4 postFxConst13;              // Offset:  464 Size:    16 [unused]
//   float4 postFxConst14;              // Offset:  480 Size:    16 [unused]
//   float4 postFxConst15;              // Offset:  496 Size:    16 [unused]
//   float4 postFxConst16;              // Offset:  512 Size:    16 [unused]
//   float4 postFxConst17;              // Offset:  528 Size:    16 [unused]
//   float4 postFxConst18;              // Offset:  544 Size:    16 [unused]
//   float4 postFxConst19;              // Offset:  560 Size:    16 [unused]
//   float4 postFxConst20;              // Offset:  576 Size:    16 [unused]
//   float4 postFxConst21;              // Offset:  592 Size:    16 [unused]
//   float4 postFxConst22;              // Offset:  608 Size:    16 [unused]
//   float4 postFxConst23;              // Offset:  624 Size:    16 [unused]
//   float4 postFxConst24;              // Offset:  640 Size:    16 [unused]
//   float4 postFxConst25;              // Offset:  656 Size:    16 [unused]
//   float4 postFxConst26;              // Offset:  672 Size:    16 [unused]
//   float4 postFxConst27;              // Offset:  688 Size:    16 [unused]
//   float4 postFxConst28;              // Offset:  704 Size:    16 [unused]
//   float4 postFxConst29;              // Offset:  720 Size:    16 [unused]
//   float4 postFxConst30;              // Offset:  736 Size:    16 [unused]
//   float4 postFxConst31;              // Offset:  752 Size:    16 [unused]
//   float4 postFxConst32;              // Offset:  768 Size:    16 [unused]
//   float4 postFxConst33;              // Offset:  784 Size:    16 [unused]
//   float4 postFxConst34;              // Offset:  800 Size:    16 [unused]
//   float4 postFxConst35;              // Offset:  816 Size:    16 [unused]
//   float4 postFxConst36;              // Offset:  832 Size:    16 [unused]
//   float4 postFxConst37;              // Offset:  848 Size:    16 [unused]
//   float4 postFxConst38;              // Offset:  864 Size:    16 [unused]
//   float4 postFxConst39;              // Offset:  880 Size:    16 [unused]
//   float4 postFxConst40;              // Offset:  896 Size:    16 [unused]
//   float4 postFxConst41;              // Offset:  912 Size:    16 [unused]
//   float4 postFxConst42;              // Offset:  928 Size:    16 [unused]
//   float4 postFxConst43;              // Offset:  944 Size:    16 [unused]
//   float4 postFxConst44;              // Offset:  960 Size:    16 [unused]
//   float4 postFxConst45;              // Offset:  976 Size:    16 [unused]
//   float4 postFxConst46;              // Offset:  992 Size:    16 [unused]
//   float4 postFxConst47;              // Offset: 1008 Size:    16 [unused]
//   float4 postFxConst48;              // Offset: 1024 Size:    16 [unused]
//   float4 postFxConst49;              // Offset: 1040 Size:    16 [unused]
//   float4 postFxConst50;              // Offset: 1056 Size:    16 [unused]
//   float4 postFxConst51;              // Offset: 1072 Size:    16 [unused]
//   float4 postFxConst52;              // Offset: 1088 Size:    16 [unused]
//   float4 postFxConst53;              // Offset: 1104 Size:    16 [unused]
//   float4 postFxConst54;              // Offset: 1120 Size:    16 [unused]
//   float4 postFxConst55;              // Offset: 1136 Size:    16 [unused]
//   float4 postFxConst56;              // Offset: 1152 Size:    16 [unused]
//   float4 postFxConst57;              // Offset: 1168 Size:    16 [unused]
//   float4 postFxConst58;              // Offset: 1184 Size:    16 [unused]
//   float4 postFxConst59;              // Offset: 1200 Size:    16 [unused]
//   float4 postFxConst60;              // Offset: 1216 Size:    16 [unused]
//   float4 postFxConst61;              // Offset: 1232 Size:    16 [unused]
//   float4 postFxConst62;              // Offset: 1248 Size:    16 [unused]
//   float4 postFxConst63;              // Offset: 1264 Size:    16 [unused]
//   float4 postFxBloom00;              // Offset: 1280 Size:    16 [unused]
//   float4 postFxBloom01;              // Offset: 1296 Size:    16 [unused]
//   float4 postFxBloom02;              // Offset: 1312 Size:    16 [unused]
//   float4 postFxBloom03;              // Offset: 1328 Size:    16 [unused]
//   float4 postFxBloom04;              // Offset: 1344 Size:    16 [unused]
//   float4 postFxBloom05;              // Offset: 1360 Size:    16 [unused]
//   float4 postFxBloom06;              // Offset: 1376 Size:    16 [unused]
//   float4 postFxBloom07;              // Offset: 1392 Size:    16 [unused]
//   float4 postFxBloom08;              // Offset: 1408 Size:    16 [unused]
//   float4 postFxBloom09;              // Offset: 1424 Size:    16 [unused]
//   float4 postFxBloom10;              // Offset: 1440 Size:    16 [unused]
//   float4 postFxBloom11;              // Offset: 1456 Size:    16 [unused]
//   float4 postFxBloom12;              // Offset: 1472 Size:    16 [unused]
//   float4 postFxBloom13;              // Offset: 1488 Size:    16 [unused]
//   float4 postFxBloom14;              // Offset: 1504 Size:    16 [unused]
//   float4 postFxBloom15;              // Offset: 1520 Size:    16 [unused]
//   float4 postFxBloom16;              // Offset: 1536 Size:    16 [unused]
//   float4 postFxBloom17;              // Offset: 1552 Size:    16 [unused]
//   float4 postFxBloom18;              // Offset: 1568 Size:    16 [unused]
//   float4 postFxBloom19;              // Offset: 1584 Size:    16 [unused]
//   float4 postFxBloom20;              // Offset: 1600 Size:    16 [unused]
//   float4 postFxBloom21;              // Offset: 1616 Size:    16 [unused]
//   float4 postFxBloom22;              // Offset: 1632 Size:    16 [unused]
//   float4 postFxBloom23;              // Offset: 1648 Size:    16 [unused]
//   float4 postFxBloom24;              // Offset: 1664 Size:    16 [unused]
//   float4 postFxBloom25;              // Offset: 1680 Size:    16 [unused]
//   float4 filterTap[8];               // Offset: 1696 Size:   128 [unused]
//   float4 postfxViewMatrix0;          // Offset: 1824 Size:    16 [unused]
//   float4 postfxViewMatrix1;          // Offset: 1840 Size:    16 [unused]
//   float4 postfxViewMatrix2;          // Offset: 1856 Size:    16 [unused]
//   float4 postfxViewMatrix3;          // Offset: 1872 Size:    16 [unused]
//   float4 postfxProjMatrix0;          // Offset: 1888 Size:    16 [unused]
//   float4 postfxProjMatrix1;          // Offset: 1904 Size:    16 [unused]
//   float4 postfxProjMatrix2;          // Offset: 1920 Size:    16 [unused]
//   float4 postfxProjMatrix3;          // Offset: 1936 Size:    16 [unused]
//   float4 postfxViewProjMatrix0;      // Offset: 1952 Size:    16 [unused]
//   float4 postfxViewProjMatrix1;      // Offset: 1968 Size:    16 [unused]
//   float4 postfxViewProjMatrix2;      // Offset: 1984 Size:    16 [unused]
//   float4 postfxViewProjMatrix3;      // Offset: 2000 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// bilinearClamp                     sampler      NA          NA             s1      1 
// colorMapSampler                   texture  float4          2d             t0      1 
// hudTexture                        texture  float4          2d             t6      1 
// shadowMaskTexture                 texture  float4          2d             t7      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PostFxCBuffer                     cbuffer      NA          NA            cb8      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 0.001342, 0, 0, 0},
                              { 0.004077, 0, 0, 0},
                              { 0.007940, 0, 0, 0},
                              { 0.009916, 0, 0, 0},
                              { 0.007940, 0, 0, 0},
                              { 0.004077, 0, 0, 0},
                              { 0.001342, 0, 0, 0},
                              { 0.004077, 0, 0, 0},
                              { 0.012383, 0, 0, 0},
                              { 0.024120, 0, 0, 0},
                              { 0.030122, 0, 0, 0},
                              { 0.024120, 0, 0, 0},
                              { 0.012383, 0, 0, 0},
                              { 0.004077, 0, 0, 0},
                              { 0.007940, 0, 0, 0},
                              { 0.024120, 0, 0, 0},
                              { 0.046979, 0, 0, 0},
                              { 0.058669, 0, 0, 0},
                              { 0.046979, 0, 0, 0},
                              { 0.024120, 0, 0, 0},
                              { 0.007940, 0, 0, 0},
                              { 0.009916, 0, 0, 0},
                              { 0.030122, 0, 0, 0},
                              { 0.058669, 0, 0, 0},
                              { 0.073269, 0, 0, 0},
                              { 0.058669, 0, 0, 0},
                              { 0.030122, 0, 0, 0},
                              { 0.009916, 0, 0, 0},
                              { 0.007940, 0, 0, 0},
                              { 0.024120, 0, 0, 0},
                              { 0.046979, 0, 0, 0},
                              { 0.058669, 0, 0, 0},
                              { 0.046979, 0, 0, 0},
                              { 0.024120, 0, 0, 0},
                              { 0.007940, 0, 0, 0},
                              { 0.004077, 0, 0, 0},
                              { 0.012383, 0, 0, 0},
                              { 0.024120, 0, 0, 0},
                              { 0.030122, 0, 0, 0},
                              { 0.024120, 0, 0, 0},
                              { 0.012383, 0, 0, 0},
                              { 0.004077, 0, 0, 0},
                              { 0.001342, 0, 0, 0},
                              { 0.004077, 0, 0, 0},
                              { 0.007940, 0, 0, 0},
                              { 0.009916, 0, 0, 0},
                              { 0.007940, 0, 0, 0},
                              { 0.004077, 0, 0, 0},
                              { 0.001342, 0, 0, 0} }
dcl_constantbuffer CB0[3], immediateIndexed
dcl_constantbuffer CB8[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 8
mov r0.xz, cb0[0].wwww
mov r0.y, l(0)
add r1.xy, v1.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r1.zw, r1.xxxy, r1.xxxy
add r0.w, r1.w, r1.z
sqrt r1.z, r0.w
mul r1.z, r1.z, cb8[0].z
mad r0.xyz, r0.xyzx, l(0.150000, 1.500000, -0.150000, 0.000000), r1.zzzz
mad r0.xyz, r0.wwww, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r0.xyz, r0.xyzx, cb8[1].zzzz
mad r2.xyz, r0.xyzx, r1.xxxx, l(0.500000, 0.500000, 0.500000, 0.000000)
mad r0.xyz, r0.xzyx, r1.yyyy, l(0.500000, 0.500000, 0.500000, 0.000000)
mov r2.w, r0.x
sample_indexable(texture2d)(float,float,float,float) r1.x, r2.xwxx, t6.xyzw, s1
mov r0.xw, r2.zzzy
sample_indexable(texture2d)(float,float,float,float) r1.y, r0.wzww, t6.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r1.z, r0.xyxx, t6.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t0.xyzw, s0
mul r2.xy, v1.xyxx, cb0[0].yzyy
mul r2.xy, r2.xyxx, l(5.000000, 5.000000, 0.000000, 0.000000)
frc r2.xy, r2.xyxx
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r2.xyxx, t7.xyzw, s1
mul r3.xy, cb0[1].xyxx, l(0.00156250, 0.00277778, 0.000000, 0.000000)
lt r3.z, l(0.500000), v1.x
movc r4.x, r3.z, -r3.x, r3.x
lt r3.x, v1.y, l(0.500000)
movc r4.y, r3.x, -r3.y, r3.y
mov r3.xyzw, l(0,0,0,0)
mov r4.zw, l(0,0,0,-3.000000)
loop 
  lt r5.x, l(3.000000), r4.w
  breakc_nz r5.x
  mul r5.y, r4.w, l(0.00277778)
  mov r6.xyzw, r3.xyzw
  mov r5.z, r4.z
  mov r5.w, l(-3.000000)
  loop 
    lt r7.x, l(3.000000), r5.w
    breakc_nz r7.x
    mul r5.x, r5.w, l(0.00156250)
    add r7.xy, r5.xyxx, v1.xyxx
    add r7.xy, r4.xyxx, r7.xyxx
    sample_indexable(texture2d)(float,float,float,float) r7.xyzw, r7.xyxx, t6.xyzw, s1
    mad r6.xyzw, icb[r5.z + 0].xxxx, r7.xyzw, r6.xyzw
    iadd r5.z, r5.z, l(1)
    add r5.w, r5.w, l(1.000000)
  endloop 
  mov r3.xyzw, r6.xyzw
  mov r4.z, r5.z
  add r4.w, r4.w, l(1.000000)
endloop 
mul r3.xyzw, r3.xyzw, cb0[1].zzzz
mul r3.xyz, r3.xyzx, cb0[2].xyzx
mov r1.w, l(255.000000)
mul r3.xyzw, r3.xyzw, l(0.000010, 0.000010, 0.000010, 0.000010)
mad r1.xyzw, r1.xyzw, l(255.000000, 255.000000, 255.000000, 1.000000), r3.xyzw
mad r2.xyzw, cb0[0].xxxx, r2.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
mad r1.xyzw, r2.xyzw, l(0.000100, 0.000100, 0.000100, 0.000100), r1.xyzw
dp3 r2.x, l(0.350000, 0.500000, 0.150000, 0.000000), r1.xyzx
dp3 r2.y, r0.xyzx, l(0.350000, 0.500000, 0.150000, 0.000000)
mul r2.z, r2.x, cb8[0].x
add r2.x, r2.x, r2.y
div_sat r2.x, r2.z, r2.x
add r3.xyzw, -r0.xyzw, r1.xyzw
mad r0.xyzw, r2.xxxx, r3.xyzw, r0.xyzw
mad o0.xyzw, cb8[0].yyyy, r1.xyzw, r0.xyzw
ret 
// Approximately 67 instruction slots used
