// ---- Created with 3Dmigoto v1.2.45 on Thu Jul 15 15:40:14 2021

cbuffer PostFxCBuffer : register(b8)
{
  float4 postFxControl0 : packoffset(c0);
  float4 postFxControl1 : packoffset(c1);
  float4 postFxControl2 : packoffset(c2);
  float4 postFxControl3 : packoffset(c3);
  float4 postFxControl4 : packoffset(c4);
  float4 postFxControl5 : packoffset(c5);
  float4 postFxControl6 : packoffset(c6);
  float4 postFxControl7 : packoffset(c7);
  float4 postFxControl8 : packoffset(c8);
  float4 postFxControl9 : packoffset(c9);
  float4 postFxControlA : packoffset(c10);
  float4 postFxControlB : packoffset(c11);
  float4 postFxControlC : packoffset(c12);
  float4 postFxControlD : packoffset(c13);
  float4 postFxControlE : packoffset(c14);
  float4 postFxControlF : packoffset(c15);
  float4 postFxConst00 : packoffset(c16);
  float4 postFxConst01 : packoffset(c17);
  float4 postFxConst02 : packoffset(c18);
  float4 postFxConst03 : packoffset(c19);
  float4 postFxConst04 : packoffset(c20);
  float4 postFxConst05 : packoffset(c21);
  float4 postFxConst06 : packoffset(c22);
  float4 postFxConst07 : packoffset(c23);
  float4 postFxConst08 : packoffset(c24);
  float4 postFxConst09 : packoffset(c25);
  float4 postFxConst10 : packoffset(c26);
  float4 postFxConst11 : packoffset(c27);
  float4 postFxConst12 : packoffset(c28);
  float4 postFxConst13 : packoffset(c29);
  float4 postFxConst14 : packoffset(c30);
  float4 postFxConst15 : packoffset(c31);
  float4 postFxConst16 : packoffset(c32);
  float4 postFxConst17 : packoffset(c33);
  float4 postFxConst18 : packoffset(c34);
  float4 postFxConst19 : packoffset(c35);
  float4 postFxConst20 : packoffset(c36);
  float4 postFxConst21 : packoffset(c37);
  float4 postFxConst22 : packoffset(c38);
  float4 postFxConst23 : packoffset(c39);
  float4 postFxConst24 : packoffset(c40);
  float4 postFxConst25 : packoffset(c41);
  float4 postFxConst26 : packoffset(c42);
  float4 postFxConst27 : packoffset(c43);
  float4 postFxConst28 : packoffset(c44);
  float4 postFxConst29 : packoffset(c45);
  float4 postFxConst30 : packoffset(c46);
  float4 postFxConst31 : packoffset(c47);
  float4 postFxConst32 : packoffset(c48);
  float4 postFxConst33 : packoffset(c49);
  float4 postFxConst34 : packoffset(c50);
  float4 postFxConst35 : packoffset(c51);
  float4 postFxConst36 : packoffset(c52);
  float4 postFxConst37 : packoffset(c53);
  float4 postFxConst38 : packoffset(c54);
  float4 postFxConst39 : packoffset(c55);
  float4 postFxConst40 : packoffset(c56);
  float4 postFxConst41 : packoffset(c57);
  float4 postFxConst42 : packoffset(c58);
  float4 postFxConst43 : packoffset(c59);
  float4 postFxConst44 : packoffset(c60);
  float4 postFxConst45 : packoffset(c61);
  float4 postFxConst46 : packoffset(c62);
  float4 postFxConst47 : packoffset(c63);
  float4 postFxConst48 : packoffset(c64);
  float4 postFxConst49 : packoffset(c65);
  float4 postFxConst50 : packoffset(c66);
  float4 postFxConst51 : packoffset(c67);
  float4 postFxConst52 : packoffset(c68);
  float4 postFxConst53 : packoffset(c69);
  float4 postFxConst54 : packoffset(c70);
  float4 postFxConst55 : packoffset(c71);
  float4 postFxConst56 : packoffset(c72);
  float4 postFxConst57 : packoffset(c73);
  float4 postFxConst58 : packoffset(c74);
  float4 postFxConst59 : packoffset(c75);
  float4 postFxConst60 : packoffset(c76);
  float4 postFxConst61 : packoffset(c77);
  float4 postFxConst62 : packoffset(c78);
  float4 postFxConst63 : packoffset(c79);
  float4 postFxBloom00 : packoffset(c80);
  float4 postFxBloom01 : packoffset(c81);
  float4 postFxBloom02 : packoffset(c82);
  float4 postFxBloom03 : packoffset(c83);
  float4 postFxBloom04 : packoffset(c84);
  float4 postFxBloom05 : packoffset(c85);
  float4 postFxBloom06 : packoffset(c86);
  float4 postFxBloom07 : packoffset(c87);
  float4 postFxBloom08 : packoffset(c88);
  float4 postFxBloom09 : packoffset(c89);
  float4 postFxBloom10 : packoffset(c90);
  float4 postFxBloom11 : packoffset(c91);
  float4 postFxBloom12 : packoffset(c92);
  float4 postFxBloom13 : packoffset(c93);
  float4 postFxBloom14 : packoffset(c94);
  float4 postFxBloom15 : packoffset(c95);
  float4 postFxBloom16 : packoffset(c96);
  float4 postFxBloom17 : packoffset(c97);
  float4 postFxBloom18 : packoffset(c98);
  float4 postFxBloom19 : packoffset(c99);
  float4 postFxBloom20 : packoffset(c100);
  float4 postFxBloom21 : packoffset(c101);
  float4 postFxBloom22 : packoffset(c102);
  float4 postFxBloom23 : packoffset(c103);
  float4 postFxBloom24 : packoffset(c104);
  float4 postFxBloom25 : packoffset(c105);
  float4 filterTap[8] : packoffset(c106);
  float4 postfxViewMatrix0 : packoffset(c114);
  float4 postfxViewMatrix1 : packoffset(c115);
  float4 postfxViewMatrix2 : packoffset(c116);
  float4 postfxViewMatrix3 : packoffset(c117);
  float4 postfxProjMatrix0 : packoffset(c118);
  float4 postfxProjMatrix1 : packoffset(c119);
  float4 postfxProjMatrix2 : packoffset(c120);
  float4 postfxProjMatrix3 : packoffset(c121);
  float4 postfxViewProjMatrix0 : packoffset(c122);
  float4 postfxViewProjMatrix1 : packoffset(c123);
  float4 postfxViewProjMatrix2 : packoffset(c124);
  float4 postfxViewProjMatrix3 : packoffset(c125);
}

cbuffer PerSceneConsts : register(b1)
{
  row_major float4x4 projectionMatrix : packoffset(c0);
  row_major float4x4 viewMatrix : packoffset(c4);
  row_major float4x4 viewProjectionMatrix : packoffset(c8);
  row_major float4x4 inverseProjectionMatrix : packoffset(c12);
  row_major float4x4 inverseViewMatrix : packoffset(c16);
  row_major float4x4 inverseViewProjectionMatrix : packoffset(c20);
  float4 eyeOffset : packoffset(c24);
  float4 adsZScale : packoffset(c25);
  float4 hdrControl0 : packoffset(c26);
  float4 hdrControl1 : packoffset(c27);
  float4 fogColor : packoffset(c28);
  float4 fogConsts : packoffset(c29);
  float4 fogConsts2 : packoffset(c30);
  float4 fogConsts3 : packoffset(c31);
  float4 fogConsts4 : packoffset(c32);
  float4 fogConsts5 : packoffset(c33);
  float4 fogConsts6 : packoffset(c34);
  float4 fogConsts7 : packoffset(c35);
  float4 fogConsts8 : packoffset(c36);
  float4 fogConsts9 : packoffset(c37);
  float3 sunFogDir : packoffset(c38);
  float4 sunFogColor : packoffset(c39);
  float2 sunFog : packoffset(c40);
  float4 zNear : packoffset(c41);
  float3 clothPrimaryTint : packoffset(c42);
  float3 clothSecondaryTint : packoffset(c43);
  float4 renderTargetSize : packoffset(c44);
  float4 upscaledTargetSize : packoffset(c45);
  float4 materialColor : packoffset(c46);
  float4 cameraUp : packoffset(c47);
  float4 cameraLook : packoffset(c48);
  float4 cameraSide : packoffset(c49);
  float4 cameraVelocity : packoffset(c50);
  float4 skyMxR : packoffset(c51);
  float4 skyMxG : packoffset(c52);
  float4 skyMxB : packoffset(c53);
  float4 sunMxR : packoffset(c54);
  float4 sunMxG : packoffset(c55);
  float4 sunMxB : packoffset(c56);
  float4 skyRotationTransition : packoffset(c57);
  float4 debugColorOverride : packoffset(c58);
  float4 debugAlphaOverride : packoffset(c59);
  float4 debugNormalOverride : packoffset(c60);
  float4 debugSpecularOverride : packoffset(c61);
  float4 debugGlossOverride : packoffset(c62);
  float4 debugOcclusionOverride : packoffset(c63);
  float4 debugStreamerControl : packoffset(c64);
  float4 emblemLUTSelector : packoffset(c65);
  float4 colorMatrixR : packoffset(c66);
  float4 colorMatrixG : packoffset(c67);
  float4 colorMatrixB : packoffset(c68);
  float4 gameTime : packoffset(c69);
  float4 gameTick : packoffset(c70);
  float4 subpixelOffset : packoffset(c71);
  float4 viewportDimensions : packoffset(c72);
  float4 viewSpaceScaleBias : packoffset(c73);
  float4 ui3dUVSetup0 : packoffset(c74);
  float4 ui3dUVSetup1 : packoffset(c75);
  float4 ui3dUVSetup2 : packoffset(c76);
  float4 ui3dUVSetup3 : packoffset(c77);
  float4 ui3dUVSetup4 : packoffset(c78);
  float4 ui3dUVSetup5 : packoffset(c79);
  float4 clipSpaceLookupScale : packoffset(c80);
  float4 clipSpaceLookupOffset : packoffset(c81);
  uint4 computeSpriteControl : packoffset(c82);
  float4 invBcTexSizes : packoffset(c83);
  float4 invMaskTexSizes : packoffset(c84);
  float4 relHDRExposure : packoffset(c85);
  uint4 triDensityFlags : packoffset(c86);
  float4 triDensityParams : packoffset(c87);
  float4 voldecalRevealTextureInfo : packoffset(c88);
  float4 extraClipPlane0 : packoffset(c89);
  float4 extraClipPlane1 : packoffset(c90);
  float4 shaderDebug : packoffset(c91);
  uint isDepthHack : packoffset(c92);
}

SamplerState samp0_s : register(s0);
SamplerState samplerBilinearWrap_s : register(s1);
Texture2D<float4> floatZSampler : register(t0);
Texture2D<float4> colorMapSampler : register(t6);
Texture2D<float4> gridTexture : register(t7);
Texture2D<float4> revealTexture : register(t9);
Texture2D<float4> codeTexture1 : register(t10);
Texture2D<float4> codeTexture2 : register(t11);


// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main( 
  float4 v0 : SV_POSITION0,
  float2 v1 : TEXCOORD0,
  out float4 o0 : SV_TARGET0)
{
  float4 r0,r1,r2,r3,r4,r5;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xy = -postFxConst01.xy + postFxConst00.xy;
  r0.z = -r0.x;
  r0.x = dot(r0.yz, r0.yz);
  r0.x = cmp(r0.x == 0.000000);
  r0.xy = r0.xx ? float2(1,0) : r0.yz;
  r0.z = dot(r0.xy, r0.xy);
  r0.z = sqrt(r0.z);
  r1.xy = postFxControlF.xx * r0.yx;
  r0.zw = r1.xy / r0.zz;
  r1.xy = postFxConst00.xy + r0.wz;
  r0.zw = postFxConst00.yx + -r0.zw;
  r2.xy = -postFxConst02.xy + postFxConst01.xy;
  r2.z = -r2.x;
  r1.z = dot(r2.yz, r2.yz);
  r1.z = cmp(r1.z == 0.000000);
  r1.zw = r1.zz ? float2(1,0) : r2.yz;
  r0.xy = r1.zw + r0.xy;
  r0.xy = float2(0.5,0.5) * r0.xy;
  r2.x = dot(r0.xy, r0.xy);
  r0.xy = postFxControlF.xx * r0.yx;
  r2.x = sqrt(r2.x);
  r0.xy = r0.xy / r2.xx;
  r2.xy = postFxConst01.xy + r0.yx;
  r0.xy = postFxConst01.yx + -r0.xy;
  r2.zw = -r2.yx + r1.yx;
  r3.xy = renderTargetSize.xy * v1.xy;
  r3.xy = (int2)r3.xy;
  r3.zw = float2(0,0);
  r3.x = floatZSampler.Load(r3.xyz).x;
  r3.y = cmp(r3.x >= 0.984375);
  r3.z = 1.01587307 * r3.x;
  r3.x = r3.x * 64 + -63;
  r3.x = r3.y ? r3.x : r3.z;
  r3.x = max(9.99999994e-09, r3.x);
  r3.x = rcp(r3.x);
  r3.yz = float2(-0.5,-0.5) + v1.xy;
  r3.z = -r3.z * r3.x;
  r3.y = r3.y * r3.x;
  r3.yz = postFxControlF.zw * r3.yz;
  r4.xyz = postFxControl1.zxy * r3.zzz;
  r3.yzw = r3.yyy * postFxControl0.zxy + r4.xyz;
  r3.xyz = r3.xxx * postFxControl2.zxy + r3.yzw;
  r3.xyz = postFxControl3.zxy + r3.xyz;
  r2.w = r3.z * r2.w;
  r2.z = r2.z * r3.y + -r2.w;
  r2.z = r1.x * r2.y + r2.z;
  r2.z = -r1.y * r2.x + r2.z;
  r2.w = cmp(0 < r2.z);
  r2.z = cmp(r2.z < 0);
  r4.xy = r0.zw + -r1.yx;
  r3.w = r4.y * r3.z;
  r3.w = r4.x * r3.y + -r3.w;
  r1.y = r0.w * r1.y + r3.w;
  r1.x = -r0.z * r1.x + r1.y;
  r1.y = cmp(0 < r1.x);
  r1.x = cmp(r1.x < 0);
  r1.xy = r2.zw ? r1.xy : 0;
  r2.zw = r2.yx + -r0.zw;
  r2.w = r2.w * r3.z;
  r2.z = r2.z * r3.y + -r2.w;
  r2.z = r2.x * r0.z + r2.z;
  r2.z = -r2.y * r0.w + r2.z;
  r2.w = cmp(0 < r2.z);
  r2.z = cmp(r2.z < 0);
  r1.xy = r1.xy ? r2.zw : 0;
  r1.x = (int)r1.y | (int)r1.x;
  r2.zw = -r2.yx + r0.zw;
  r1.y = r2.w * r3.z;
  r1.y = r2.z * r3.y + -r1.y;
  r1.y = r2.y * r0.w + r1.y;
  r1.y = -r2.x * r0.z + r1.y;
  r2.z = cmp(0 < r1.y);
  r1.y = cmp(r1.y < 0);
  r4.xy = r2.yx + -r0.xy;
  r2.w = r4.y * r3.z;
  r2.w = r4.x * r3.y + -r2.w;
  r2.w = r2.x * r0.x + r2.w;
  r2.w = -r2.y * r0.y + r2.w;
  r3.w = cmp(0 < r2.w);
  r2.w = cmp(r2.w < 0);
  r1.y = r1.y ? r2.w : 0;
  r2.z = r2.z ? r3.w : 0;
  r4.xy = r0.xy + -r0.zw;
  r2.w = r4.y * r3.z;
  r2.w = r4.x * r3.y + -r2.w;
  r0.z = r0.y * r0.z + r2.w;
  r0.z = -r0.x * r0.w + r0.z;
  r0.w = cmp(0 < r0.z);
  r0.z = cmp(r0.z < 0);
  r0.z = r0.z ? r1.y : 0;
  r0.w = r0.w ? r2.z : 0;
  r0.z = (int)r0.w | (int)r0.z;
  r0.z = r0.z ? 1.000000 : 0;
  r0.w = postFxControlF.x + postFxControlF.x;
  r1.y = -postFxConst01.z + r3.x;
  r1.y = cmp(r0.w >= abs(r1.y));
  r1.xy = r1.xy ? float2(1,1) : 0;
  r0.z = r1.y * r0.z;
  r4.xyz = -postFxConst00.zxy + r3.xyz;
  r2.z = cmp(r0.w >= abs(r4.x));
  r2.w = dot(r4.yz, r4.yz);
  r2.w = sqrt(r2.w);
  r2.w = cmp(r2.w < postFxControlF.x);
  r2.w = r2.z ? r2.w : 0;
  r2.z = r2.z ? 1.000000 : 0;
  r0.z = r2.z * r1.x + r0.z;
  r1.x = r2.w ? 1.000000 : 0;
  r4.xy = -postFxConst03.xy + postFxConst02.xy;
  r4.z = -r4.x;
  r2.z = dot(r4.yz, r4.yz);
  r2.z = cmp(r2.z == 0.000000);
  r2.zw = r2.zz ? float2(1,0) : r4.yz;
  r1.zw = r2.zw + r1.zw;
  r1.zw = float2(0.5,0.5) * r1.zw;
  r3.w = dot(r1.zw, r1.zw);
  r1.zw = postFxControlF.xx * r1.wz;
  r3.w = sqrt(r3.w);
  r1.zw = r1.zw / r3.ww;
  r4.xy = postFxConst02.xy + r1.wz;
  r1.zw = postFxConst02.yx + -r1.zw;
  r4.zw = -r4.yx + r2.yx;
  r3.w = r4.w * r3.z;
  r3.w = r4.z * r3.y + -r3.w;
  r3.w = r2.x * r4.y + r3.w;
  r3.w = -r2.y * r4.x + r3.w;
  r4.z = cmp(0 < r3.w);
  r3.w = cmp(r3.w < 0);
  r5.xy = r0.xy + -r2.yx;
  r4.w = r5.y * r3.z;
  r4.w = r5.x * r3.y + -r4.w;
  r2.y = r2.y * r0.y + r4.w;
  r2.x = -r2.x * r0.x + r2.y;
  r2.y = cmp(0 < r2.x);
  r2.x = cmp(r2.x < 0);
  r2.x = r3.w ? r2.x : 0;
  r2.y = r4.z ? r2.y : 0;
  r4.zw = r4.yx + -r0.xy;
  r3.w = r4.w * r3.z;
  r3.w = r4.z * r3.y + -r3.w;
  r3.w = r4.x * r0.x + r3.w;
  r3.w = -r4.y * r0.y + r3.w;
  r4.z = cmp(0 < r3.w);
  r3.w = cmp(r3.w < 0);
  r2.x = r2.x ? r3.w : 0;
  r2.y = r2.y ? r4.z : 0;
  r2.x = (int)r2.y | (int)r2.x;
  r2.x = r2.x ? 0.937500 : 0;
  r0.z = r1.y * r2.x + r0.z;
  r2.xy = -r4.yx + r0.xy;
  r1.y = r2.y * r3.z;
  r1.y = r2.x * r3.y + -r1.y;
  r1.y = r4.y * r0.y + r1.y;
  r1.y = -r4.x * r0.x + r1.y;
  r2.x = cmp(0 < r1.y);
  r1.y = cmp(r1.y < 0);
  r4.zw = r4.yx + -r1.zw;
  r2.y = r4.w * r3.z;
  r2.y = r4.z * r3.y + -r2.y;
  r2.y = r4.x * r1.z + r2.y;
  r2.y = -r4.y * r1.w + r2.y;
  r3.w = cmp(0 < r2.y);
  r2.y = cmp(r2.y < 0);
  r1.y = r1.y ? r2.y : 0;
  r2.x = r2.x ? r3.w : 0;
  r4.zw = r1.zw + -r0.xy;
  r2.y = r4.w * r3.z;
  r2.y = r4.z * r3.y + -r2.y;
  r0.x = r1.w * r0.x + r2.y;
  r0.x = -r1.z * r0.y + r0.x;
  r0.y = cmp(0 < r0.x);
  r0.x = cmp(r0.x < 0);
  r0.x = r0.x ? r1.y : 0;
  r0.y = r0.y ? r2.x : 0;
  r0.x = (int)r0.y | (int)r0.x;
  r0.y = -postFxConst02.z + r3.x;
  r0.y = cmp(r0.w >= abs(r0.y));
  r0.xy = r0.xy ? float2(0.9375,1) : 0;
  r0.x = r0.y * r0.x + r0.z;
  r5.xy = -postFxConst04.xy + postFxConst03.xy;
  r5.z = -r5.x;
  r0.z = dot(r5.yz, r5.yz);
  r0.z = cmp(r0.z == 0.000000);
  r2.xy = r0.zz ? float2(1,0) : r5.yz;
  r2.zw = r2.zw + r2.xy;
  r2.zw = float2(0.5,0.5) * r2.zw;
  r0.z = dot(r2.zw, r2.zw);
  r2.zw = postFxControlF.xx * r2.wz;
  r0.z = sqrt(r0.z);
  r2.zw = r2.zw / r0.zz;
  r4.zw = postFxConst03.xy + r2.wz;
  r2.zw = postFxConst03.yx + -r2.zw;
  r5.xy = r4.yx + -r4.wz;
  r0.z = r5.y * r3.z;
  r0.z = r5.x * r3.y + -r0.z;
  r0.z = r4.x * r4.w + r0.z;
  r0.z = -r4.y * r4.z + r0.z;
  r1.y = cmp(0 < r0.z);
  r0.z = cmp(r0.z < 0);
  r5.xy = r1.zw + -r4.yx;
  r3.w = r5.y * r3.z;
  r3.w = r5.x * r3.y + -r3.w;
  r3.w = r4.y * r1.w + r3.w;
  r3.w = -r4.x * r1.z + r3.w;
  r4.x = cmp(0 < r3.w);
  r3.w = cmp(r3.w < 0);
  r0.z = r0.z ? r3.w : 0;
  r1.y = r1.y ? r4.x : 0;
  r4.xy = r4.wz + -r1.zw;
  r3.w = r4.y * r3.z;
  r3.w = r4.x * r3.y + -r3.w;
  r3.w = r4.z * r1.z + r3.w;
  r3.w = -r4.w * r1.w + r3.w;
  r4.x = cmp(0 < r3.w);
  r3.w = cmp(r3.w < 0);
  r0.z = r0.z ? r3.w : 0;
  r1.y = r1.y ? r4.x : 0;
  r0.z = (int)r0.z | (int)r1.y;
  r0.z = r0.z ? 0.875000 : 0;
  r0.x = r0.y * r0.z + r0.x;
  r0.yz = -r4.wz + r1.zw;
  r0.z = r0.z * r3.z;
  r0.y = r0.y * r3.y + -r0.z;
  r0.y = r4.w * r1.w + r0.y;
  r0.y = -r4.z * r1.z + r0.y;
  r0.z = cmp(0 < r0.y);
  r0.y = cmp(r0.y < 0);
  r4.xy = r4.wz + -r2.zw;
  r1.y = r4.y * r3.z;
  r1.y = r4.x * r3.y + -r1.y;
  r1.y = r4.z * r2.z + r1.y;
  r1.y = -r4.w * r2.w + r1.y;
  r3.w = cmp(0 < r1.y);
  r1.y = cmp(r1.y < 0);
  r0.y = r0.y ? r1.y : 0;
  r0.z = r0.z ? r3.w : 0;
  r4.xy = r2.zw + -r1.zw;
  r1.y = r4.y * r3.z;
  r1.y = r4.x * r3.y + -r1.y;
  r1.y = r2.w * r1.z + r1.y;
  r1.y = -r2.z * r1.w + r1.y;
  r1.z = cmp(0 < r1.y);
  r1.y = cmp(r1.y < 0);
  r0.yz = r0.yz ? r1.yz : 0;
  r0.y = (int)r0.z | (int)r0.y;
  r0.z = -postFxConst03.z + r3.x;
  r0.z = cmp(r0.w >= abs(r0.z));
  r0.yz = r0.yz ? float2(0.875,1) : 0;
  r0.x = r0.z * r0.y + r0.x;
  r5.xy = -postFxConst05.xy + postFxConst04.xy;
  r5.z = -r5.x;
  r0.y = dot(r5.yz, r5.yz);
  r0.y = cmp(r0.y == 0.000000);
  r1.yz = r0.yy ? float2(1,0) : r5.yz;
  r2.xy = r2.xy + r1.yz;
  r2.xy = float2(0.5,0.5) * r2.xy;
  r0.y = dot(r2.xy, r2.xy);
  r2.xy = postFxControlF.xx * r2.yx;
  r0.y = sqrt(r0.y);
  r2.xy = r2.xy / r0.yy;
  r4.xy = postFxConst04.xy + r2.yx;
  r2.xy = postFxConst04.yx + -r2.xy;
  r5.xy = r4.wz + -r4.yx;
  r0.y = r5.y * r3.z;
  r0.y = r5.x * r3.y + -r0.y;
  r0.y = r4.z * r4.y + r0.y;
  r0.y = -r4.w * r4.x + r0.y;
  r1.w = cmp(0 < r0.y);
  r0.y = cmp(r0.y < 0);
  r5.xy = r2.zw + -r4.wz;
  r3.w = r5.y * r3.z;
  r3.w = r5.x * r3.y + -r3.w;
  r3.w = r4.w * r2.w + r3.w;
  r3.w = -r4.z * r2.z + r3.w;
  r4.z = cmp(0 < r3.w);
  r3.w = cmp(r3.w < 0);
  r0.y = r0.y ? r3.w : 0;
  r1.w = r1.w ? r4.z : 0;
  r4.zw = r4.yx + -r2.zw;
  r3.w = r4.w * r3.z;
  r3.w = r4.z * r3.y + -r3.w;
  r3.w = r4.x * r2.z + r3.w;
  r3.w = -r4.y * r2.w + r3.w;
  r4.z = cmp(0 < r3.w);
  r3.w = cmp(r3.w < 0);
  r0.y = r0.y ? r3.w : 0;
  r1.w = r1.w ? r4.z : 0;
  r0.y = (int)r0.y | (int)r1.w;
  r0.y = r0.y ? 0.812500 : 0;
  r0.x = r0.z * r0.y + r0.x;
  r0.yz = -r4.yx + r2.zw;
  r0.z = r0.z * r3.z;
  r0.y = r0.y * r3.y + -r0.z;
  r0.y = r4.y * r2.w + r0.y;
  r0.y = -r4.x * r2.z + r0.y;
  r0.z = cmp(0 < r0.y);
  r0.y = cmp(r0.y < 0);
  r4.zw = r4.yx + -r2.xy;
  r1.w = r4.w * r3.z;
  r1.w = r4.z * r3.y + -r1.w;
  r1.w = r4.x * r2.x + r1.w;
  r1.w = -r4.y * r2.y + r1.w;
  r3.w = cmp(0 < r1.w);
  r1.w = cmp(r1.w < 0);
  r0.y = r0.y ? r1.w : 0;
  r0.z = r0.z ? r3.w : 0;
  r4.zw = r2.xy + -r2.zw;
  r1.w = r4.w * r3.z;
  r1.w = r4.z * r3.y + -r1.w;
  r1.w = r2.y * r2.z + r1.w;
  r1.w = -r2.x * r2.w + r1.w;
  r2.z = cmp(0 < r1.w);
  r1.w = cmp(r1.w < 0);
  r0.y = r0.y ? r1.w : 0;
  r0.z = r0.z ? r2.z : 0;
  r0.y = (int)r0.z | (int)r0.y;
  r0.z = -postFxConst04.z + r3.x;
  r0.z = cmp(r0.w >= abs(r0.z));
  r0.yz = r0.yz ? float2(0.8125,1) : 0;
  r0.x = r0.z * r0.y + r0.x;
  r5.xy = -postFxConst06.xy + postFxConst05.xy;
  r5.z = -r5.x;
  r0.y = dot(r5.yz, r5.yz);
  r0.y = cmp(r0.y == 0.000000);
  r2.zw = r0.yy ? float2(1,0) : r5.yz;
  r1.yz = r2.zw + r1.yz;
  r1.yz = float2(0.5,0.5) * r1.yz;
  r0.y = dot(r1.yz, r1.yz);
  r1.yz = postFxControlF.xx * r1.zy;
  r0.y = sqrt(r0.y);
  r1.yz = r1.yz / r0.yy;
  r4.zw = postFxConst05.xy + r1.zy;
  r1.yz = postFxConst05.yx + -r1.yz;
  r5.xy = r4.yx + -r4.wz;
  r0.y = r5.y * r3.z;
  r0.y = r5.x * r3.y + -r0.y;
  r0.y = r4.x * r4.w + r0.y;
  r0.y = -r4.y * r4.z + r0.y;
  r1.w = cmp(0 < r0.y);
  r0.y = cmp(r0.y < 0);
  r5.xy = r2.xy + -r4.yx;
  r3.w = r5.y * r3.z;
  r3.w = r5.x * r3.y + -r3.w;
  r3.w = r4.y * r2.y + r3.w;
  r3.w = -r4.x * r2.x + r3.w;
  r4.x = cmp(0 < r3.w);
  r3.w = cmp(r3.w < 0);
  r0.y = r0.y ? r3.w : 0;
  r1.w = r1.w ? r4.x : 0;
  r4.xy = r4.wz + -r2.xy;
  r3.w = r4.y * r3.z;
  r3.w = r4.x * r3.y + -r3.w;
  r3.w = r4.z * r2.x + r3.w;
  r3.w = -r4.w * r2.y + r3.w;
  r4.x = cmp(0 < r3.w);
  r3.w = cmp(r3.w < 0);
  r0.y = r0.y ? r3.w : 0;
  r1.w = r1.w ? r4.x : 0;
  r0.y = (int)r0.y | (int)r1.w;
  r0.y = r0.y ? 0.750000 : 0;
  r0.x = r0.z * r0.y + r0.x;
  r0.yz = -r4.wz + r2.xy;
  r0.z = r0.z * r3.z;
  r0.y = r0.y * r3.y + -r0.z;
  r0.y = r4.w * r2.y + r0.y;
  r0.y = -r4.z * r2.x + r0.y;
  r0.z = cmp(0 < r0.y);
  r0.y = cmp(r0.y < 0);
  r4.xy = r4.wz + -r1.yz;
  r1.w = r4.y * r3.z;
  r1.w = r4.x * r3.y + -r1.w;
  r1.w = r4.z * r1.y + r1.w;
  r1.w = -r4.w * r1.z + r1.w;
  r3.w = cmp(0 < r1.w);
  r1.w = cmp(r1.w < 0);
  r0.y = r0.y ? r1.w : 0;
  r0.z = r0.z ? r3.w : 0;
  r4.xy = r1.yz + -r2.xy;
  r1.w = r4.y * r3.z;
  r1.w = r4.x * r3.y + -r1.w;
  r1.w = r1.z * r2.x + r1.w;
  r1.w = -r1.y * r2.y + r1.w;
  r2.x = cmp(0 < r1.w);
  r1.w = cmp(r1.w < 0);
  r0.y = r0.y ? r1.w : 0;
  r0.z = r0.z ? r2.x : 0;
  r0.y = (int)r0.z | (int)r0.y;
  r0.z = -postFxConst05.z + r3.x;
  r0.z = cmp(r0.w >= abs(r0.z));
  r0.yz = r0.yz ? float2(0.75,1) : 0;
  r0.x = r0.z * r0.y + r0.x;
  r5.xy = -postFxConst07.xy + postFxConst06.xy;
  r5.z = -r5.x;
  r0.y = dot(r5.yz, r5.yz);
  r0.y = cmp(r0.y == 0.000000);
  r2.xy = r0.yy ? float2(1,0) : r5.yz;
  r2.zw = r2.zw + r2.xy;
  r2.zw = float2(0.5,0.5) * r2.zw;
  r0.y = dot(r2.zw, r2.zw);
  r2.zw = postFxControlF.xx * r2.wz;
  r0.y = sqrt(r0.y);
  r2.zw = r2.zw / r0.yy;
  r4.xy = postFxConst06.xy + r2.wz;
  r2.zw = postFxConst06.yx + -r2.zw;
  r5.xy = r4.wz + -r4.yx;
  r0.y = r5.y * r3.z;
  r0.y = r5.x * r3.y + -r0.y;
  r0.y = r4.z * r4.y + r0.y;
  r0.y = -r4.w * r4.x + r0.y;
  r1.w = cmp(0 < r0.y);
  r0.y = cmp(r0.y < 0);
  r5.xy = r1.yz + -r4.wz;
  r3.w = r5.y * r3.z;
  r3.w = r5.x * r3.y + -r3.w;
  r3.w = r4.w * r1.z + r3.w;
  r3.w = -r4.z * r1.y + r3.w;
  r4.z = cmp(0 < r3.w);
  r3.w = cmp(r3.w < 0);
  r0.y = r0.y ? r3.w : 0;
  r1.w = r1.w ? r4.z : 0;
  r4.zw = r4.yx + -r1.yz;
  r3.w = r4.w * r3.z;
  r3.w = r4.z * r3.y + -r3.w;
  r3.w = r4.x * r1.y + r3.w;
  r3.w = -r4.y * r1.z + r3.w;
  r4.z = cmp(0 < r3.w);
  r3.w = cmp(r3.w < 0);
  r0.y = r0.y ? r3.w : 0;
  r1.w = r1.w ? r4.z : 0;
  r0.y = (int)r0.y | (int)r1.w;
  r0.y = r0.y ? 0.687500 : 0;
  r0.x = r0.z * r0.y + r0.x;
  r0.yz = -r4.yx + r1.yz;
  r0.z = r0.z * r3.z;
  r0.y = r0.y * r3.y + -r0.z;
  r0.y = r4.y * r1.z + r0.y;
  r0.y = -r4.x * r1.y + r0.y;
  r0.z = cmp(0 < r0.y);
  r0.y = cmp(r0.y < 0);
  r4.zw = r4.yx + -r2.zw;
  r1.w = r4.w * r3.z;
  r1.w = r4.z * r3.y + -r1.w;
  r1.w = r4.x * r2.z + r1.w;
  r1.w = -r4.y * r2.w + r1.w;
  r3.w = cmp(0 < r1.w);
  r1.w = cmp(r1.w < 0);
  r0.y = r0.y ? r1.w : 0;
  r0.z = r0.z ? r3.w : 0;
  r4.zw = r2.zw + -r1.yz;
  r1.w = r4.w * r3.z;
  r1.w = r4.z * r3.y + -r1.w;
  r1.y = r2.w * r1.y + r1.w;
  r1.y = -r2.z * r1.z + r1.y;
  r1.z = cmp(0 < r1.y);
  r1.y = cmp(r1.y < 0);
  r0.yz = r0.yz ? r1.yz : 0;
  r0.y = (int)r0.z | (int)r0.y;
  r0.z = -postFxConst06.z + r3.x;
  r0.z = cmp(r0.w >= abs(r0.z));
  r0.yz = r0.yz ? float2(0.6875,1) : 0;
  r0.x = r0.z * r0.y + r0.x;
  r5.xy = -postFxConst08.xy + postFxConst07.xy;
  r5.z = -r5.x;
  r0.y = dot(r5.yz, r5.yz);
  r0.y = cmp(r0.y == 0.000000);
  r1.yz = r0.yy ? float2(1,0) : r5.yz;
  r2.xy = r2.xy + r1.yz;
  r2.xy = float2(0.5,0.5) * r2.xy;
  r0.y = dot(r2.xy, r2.xy);
  r2.xy = postFxControlF.xx * r2.yx;
  r0.y = sqrt(r0.y);
  r2.xy = r2.xy / r0.yy;
  r4.zw = postFxConst07.xy + r2.yx;
  r2.xy = postFxConst07.yx + -r2.xy;
  r5.xy = r4.yx + -r4.wz;
  r0.y = r5.y * r3.z;
  r0.y = r5.x * r3.y + -r0.y;
  r0.y = r4.x * r4.w + r0.y;
  r0.y = -r4.y * r4.z + r0.y;
  r1.w = cmp(0 < r0.y);
  r0.y = cmp(r0.y < 0);
  r5.xy = r2.zw + -r4.yx;
  r3.w = r5.y * r3.z;
  r3.w = r5.x * r3.y + -r3.w;
  r3.w = r4.y * r2.w + r3.w;
  r3.w = -r4.x * r2.z + r3.w;
  r4.x = cmp(0 < r3.w);
  r3.w = cmp(r3.w < 0);
  r0.y = r0.y ? r3.w : 0;
  r1.w = r1.w ? r4.x : 0;
  r4.xy = r4.wz + -r2.zw;
  r3.w = r4.y * r3.z;
  r3.w = r4.x * r3.y + -r3.w;
  r3.w = r4.z * r2.z + r3.w;
  r3.w = -r4.w * r2.w + r3.w;
  r4.x = cmp(0 < r3.w);
  r3.w = cmp(r3.w < 0);
  r0.y = r0.y ? r3.w : 0;
  r1.w = r1.w ? r4.x : 0;
  r0.y = (int)r0.y | (int)r1.w;
  r0.y = r0.y ? 0.625000 : 0;
  r0.x = r0.z * r0.y + r0.x;
  r0.yz = -r4.wz + r2.zw;
  r0.z = r0.z * r3.z;
  r0.y = r0.y * r3.y + -r0.z;
  r0.y = r4.w * r2.w + r0.y;
  r0.y = -r4.z * r2.z + r0.y;
  r0.z = cmp(0 < r0.y);
  r0.y = cmp(r0.y < 0);
  r4.xy = r4.wz + -r2.xy;
  r1.w = r4.y * r3.z;
  r1.w = r4.x * r3.y + -r1.w;
  r1.w = r4.z * r2.x + r1.w;
  r1.w = -r4.w * r2.y + r1.w;
  r3.w = cmp(0 < r1.w);
  r1.w = cmp(r1.w < 0);
  r0.y = r0.y ? r1.w : 0;
  r0.z = r0.z ? r3.w : 0;
  r4.xy = r2.xy + -r2.zw;
  r1.w = r4.y * r3.z;
  r1.w = r4.x * r3.y + -r1.w;
  r1.w = r2.y * r2.z + r1.w;
  r1.w = -r2.x * r2.w + r1.w;
  r2.z = cmp(0 < r1.w);
  r1.w = cmp(r1.w < 0);
  r0.y = r0.y ? r1.w : 0;
  r0.z = r0.z ? r2.z : 0;
  r0.y = (int)r0.z | (int)r0.y;
  r0.z = -postFxConst07.z + r3.x;
  r0.z = cmp(r0.w >= abs(r0.z));
  r0.yz = r0.yz ? float2(0.625,1) : 0;
  r0.x = r0.z * r0.y + r0.x;
  r5.xy = -postFxConst09.xy + postFxConst08.xy;
  r5.z = -r5.x;
  r0.y = dot(r5.yz, r5.yz);
  r0.y = cmp(r0.y == 0.000000);
  r2.zw = r0.yy ? float2(1,0) : r5.yz;
  r1.yz = r2.zw + r1.yz;
  r1.yz = float2(0.5,0.5) * r1.yz;
  r0.y = dot(r1.yz, r1.yz);
  r1.yz = postFxControlF.xx * r1.zy;
  r0.y = sqrt(r0.y);
  r1.yz = r1.yz / r0.yy;
  r4.xy = postFxConst08.xy + r1.zy;
  r1.yz = postFxConst08.yx + -r1.yz;
  r5.xy = r4.wz + -r4.yx;
  r0.y = r5.y * r3.z;
  r0.y = r5.x * r3.y + -r0.y;
  r0.y = r4.z * r4.y + r0.y;
  r0.y = -r4.w * r4.x + r0.y;
  r1.w = cmp(0 < r0.y);
  r0.y = cmp(r0.y < 0);
  r5.xy = r2.xy + -r4.wz;
  r3.w = r5.y * r3.z;
  r3.w = r5.x * r3.y + -r3.w;
  r3.w = r4.w * r2.y + r3.w;
  r3.w = -r4.z * r2.x + r3.w;
  r4.z = cmp(0 < r3.w);
  r3.w = cmp(r3.w < 0);
  r0.y = r0.y ? r3.w : 0;
  r1.w = r1.w ? r4.z : 0;
  r4.zw = r4.yx + -r2.xy;
  r3.w = r4.w * r3.z;
  r3.w = r4.z * r3.y + -r3.w;
  r3.w = r4.x * r2.x + r3.w;
  r3.w = -r4.y * r2.y + r3.w;
  r4.z = cmp(0 < r3.w);
  r3.w = cmp(r3.w < 0);
  r0.y = r0.y ? r3.w : 0;
  r1.w = r1.w ? r4.z : 0;
  r0.y = (int)r0.y | (int)r1.w;
  r0.y = r0.y ? 0.562500 : 0;
  r0.x = r0.z * r0.y + r0.x;
  r0.yz = -r4.yx + r2.xy;
  r0.z = r0.z * r3.z;
  r0.y = r0.y * r3.y + -r0.z;
  r0.y = r4.y * r2.y + r0.y;
  r0.y = -r4.x * r2.x + r0.y;
  r0.z = cmp(0 < r0.y);
  r0.y = cmp(r0.y < 0);
  r4.zw = r4.yx + -r1.yz;
  r1.w = r4.w * r3.z;
  r1.w = r4.z * r3.y + -r1.w;
  r1.w = r4.x * r1.y + r1.w;
  r1.w = -r4.y * r1.z + r1.w;
  r3.w = cmp(0 < r1.w);
  r1.w = cmp(r1.w < 0);
  r0.y = r0.y ? r1.w : 0;
  r0.z = r0.z ? r3.w : 0;
  r4.zw = r1.yz + -r2.xy;
  r1.w = r4.w * r3.z;
  r1.w = r4.z * r3.y + -r1.w;
  r1.w = r1.z * r2.x + r1.w;
  r1.w = -r1.y * r2.y + r1.w;
  r2.x = cmp(0 < r1.w);
  r1.w = cmp(r1.w < 0);
  r0.y = r0.y ? r1.w : 0;
  r0.z = r0.z ? r2.x : 0;
  r0.y = (int)r0.z | (int)r0.y;
  r0.z = -postFxConst08.z + r3.x;
  r0.z = cmp(r0.w >= abs(r0.z));
  r0.yz = r0.yz ? float2(0.5625,1) : 0;
  r0.x = r0.z * r0.y + r0.x;
  r5.xy = -postFxConst10.xy + postFxConst09.xy;
  r5.z = -r5.x;
  r0.y = dot(r5.yz, r5.yz);
  r0.y = cmp(r0.y == 0.000000);
  r2.xy = r0.yy ? float2(1,0) : r5.yz;
  r2.zw = r2.zw + r2.xy;
  r2.zw = float2(0.5,0.5) * r2.zw;
  r0.y = dot(r2.zw, r2.zw);
  r2.zw = postFxControlF.xx * r2.wz;
  r0.y = sqrt(r0.y);
  r2.zw = r2.zw / r0.yy;
  r4.zw = postFxConst09.xy + r2.wz;
  r2.zw = postFxConst09.yx + -r2.zw;
  r5.xy = r4.yx + -r4.wz;
  r0.y = r5.y * r3.z;
  r0.y = r5.x * r3.y + -r0.y;
  r0.y = r4.x * r4.w + r0.y;
  r0.y = -r4.y * r4.z + r0.y;
  r1.w = cmp(0 < r0.y);
  r0.y = cmp(r0.y < 0);
  r5.xy = r1.yz + -r4.yx;
  r3.w = r5.y * r3.z;
  r3.w = r5.x * r3.y + -r3.w;
  r3.w = r4.y * r1.z + r3.w;
  r3.w = -r4.x * r1.y + r3.w;
  r4.x = cmp(0 < r3.w);
  r3.w = cmp(r3.w < 0);
  r0.y = r0.y ? r3.w : 0;
  r1.w = r1.w ? r4.x : 0;
  r4.xy = r4.wz + -r1.yz;
  r3.w = r4.y * r3.z;
  r3.w = r4.x * r3.y + -r3.w;
  r3.w = r4.z * r1.y + r3.w;
  r3.w = -r4.w * r1.z + r3.w;
  r4.x = cmp(0 < r3.w);
  r3.w = cmp(r3.w < 0);
  r0.y = r0.y ? r3.w : 0;
  r1.w = r1.w ? r4.x : 0;
  r0.y = (int)r0.y | (int)r1.w;
  r0.y = r0.y ? 0.500000 : 0;
  r0.x = r0.z * r0.y + r0.x;
  r0.yz = -r4.wz + r1.yz;
  r0.z = r0.z * r3.z;
  r0.y = r0.y * r3.y + -r0.z;
  r0.y = r4.w * r1.z + r0.y;
  r0.y = -r4.z * r1.y + r0.y;
  r0.z = cmp(0 < r0.y);
  r0.y = cmp(r0.y < 0);
  r4.xy = r4.wz + -r2.zw;
  r1.w = r4.y * r3.z;
  r1.w = r4.x * r3.y + -r1.w;
  r1.w = r4.z * r2.z + r1.w;
  r1.w = -r4.w * r2.w + r1.w;
  r3.w = cmp(0 < r1.w);
  r1.w = cmp(r1.w < 0);
  r0.y = r0.y ? r1.w : 0;
  r0.z = r0.z ? r3.w : 0;
  r4.xy = r2.zw + -r1.yz;
  r1.w = r4.y * r3.z;
  r1.w = r4.x * r3.y + -r1.w;
  r1.y = r2.w * r1.y + r1.w;
  r1.y = -r2.z * r1.z + r1.y;
  r1.z = cmp(0 < r1.y);
  r1.y = cmp(r1.y < 0);
  r0.yz = r0.yz ? r1.yz : 0;
  r0.y = (int)r0.z | (int)r0.y;
  r0.z = -postFxConst09.z + r3.x;
  r0.z = cmp(r0.w >= abs(r0.z));
  r0.yz = r0.yz ? float2(0.5,1) : 0;
  r0.x = r0.z * r0.y + r0.x;
  r5.xy = -postFxConst11.xy + postFxConst10.xy;
  r5.z = -r5.x;
  r0.y = dot(r5.yz, r5.yz);
  r0.y = cmp(r0.y == 0.000000);
  r1.yz = r0.yy ? float2(1,0) : r5.yz;
  r2.xy = r2.xy + r1.yz;
  r2.xy = float2(0.5,0.5) * r2.xy;
  r0.y = dot(r2.xy, r2.xy);
  r2.xy = postFxControlF.xx * r2.yx;
  r0.y = sqrt(r0.y);
  r2.xy = r2.xy / r0.yy;
  r4.xy = postFxConst10.xy + r2.yx;
  r2.xy = postFxConst10.yx + -r2.xy;
  r5.xy = r4.wz + -r4.yx;
  r0.y = r5.y * r3.z;
  r0.y = r5.x * r3.y + -r0.y;
  r0.y = r4.z * r4.y + r0.y;
  r0.y = -r4.w * r4.x + r0.y;
  r1.w = cmp(0 < r0.y);
  r0.y = cmp(r0.y < 0);
  r5.xy = r2.zw + -r4.wz;
  r3.w = r5.y * r3.z;
  r3.w = r5.x * r3.y + -r3.w;
  r3.w = r4.w * r2.w + r3.w;
  r3.w = -r4.z * r2.z + r3.w;
  r4.z = cmp(0 < r3.w);
  r3.w = cmp(r3.w < 0);
  r0.y = r0.y ? r3.w : 0;
  r1.w = r1.w ? r4.z : 0;
  r4.zw = r4.yx + -r2.zw;
  r3.w = r4.w * r3.z;
  r3.w = r4.z * r3.y + -r3.w;
  r3.w = r4.x * r2.z + r3.w;
  r3.w = -r4.y * r2.w + r3.w;
  r4.z = cmp(0 < r3.w);
  r3.w = cmp(r3.w < 0);
  r0.y = r0.y ? r3.w : 0;
  r1.w = r1.w ? r4.z : 0;
  r0.y = (int)r0.y | (int)r1.w;
  r0.y = r0.y ? 0.437500 : 0;
  r0.x = r0.z * r0.y + r0.x;
  r0.yz = -r4.yx + r2.zw;
  r0.z = r0.z * r3.z;
  r0.y = r0.y * r3.y + -r0.z;
  r0.y = r4.y * r2.w + r0.y;
  r0.y = -r4.x * r2.z + r0.y;
  r0.z = cmp(0 < r0.y);
  r0.y = cmp(r0.y < 0);
  r4.zw = r4.yx + -r2.xy;
  r1.w = r4.w * r3.z;
  r1.w = r4.z * r3.y + -r1.w;
  r1.w = r4.x * r2.x + r1.w;
  r1.w = -r4.y * r2.y + r1.w;
  r3.w = cmp(0 < r1.w);
  r1.w = cmp(r1.w < 0);
  r0.y = r0.y ? r1.w : 0;
  r0.z = r0.z ? r3.w : 0;
  r4.zw = r2.xy + -r2.zw;
  r1.w = r4.w * r3.z;
  r1.w = r4.z * r3.y + -r1.w;
  r1.w = r2.y * r2.z + r1.w;
  r1.w = -r2.x * r2.w + r1.w;
  r2.z = cmp(0 < r1.w);
  r1.w = cmp(r1.w < 0);
  r0.y = r0.y ? r1.w : 0;
  r0.z = r0.z ? r2.z : 0;
  r0.y = (int)r0.z | (int)r0.y;
  r0.z = -postFxConst10.z + r3.x;
  r0.z = cmp(r0.w >= abs(r0.z));
  r0.yz = r0.yz ? float2(0.4375,1) : 0;
  r0.x = r0.z * r0.y + r0.x;
  r5.xy = -postFxConst12.xy + postFxConst11.xy;
  r5.z = -r5.x;
  r0.y = dot(r5.yz, r5.yz);
  r0.y = cmp(r0.y == 0.000000);
  r2.zw = r0.yy ? float2(1,0) : r5.yz;
  r1.yz = r2.zw + r1.yz;
  r1.yz = float2(0.5,0.5) * r1.yz;
  r0.y = dot(r1.yz, r1.yz);
  r1.yz = postFxControlF.xx * r1.zy;
  r0.y = sqrt(r0.y);
  r1.yz = r1.yz / r0.yy;
  r4.zw = postFxConst11.xy + r1.zy;
  r1.yz = postFxConst11.yx + -r1.yz;
  r5.xy = r4.yx + -r4.wz;
  r0.y = r5.y * r3.z;
  r0.y = r5.x * r3.y + -r0.y;
  r0.y = r4.x * r4.w + r0.y;
  r0.y = -r4.y * r4.z + r0.y;
  r1.w = cmp(0 < r0.y);
  r0.y = cmp(r0.y < 0);
  r5.xy = r2.xy + -r4.yx;
  r3.w = r5.y * r3.z;
  r3.w = r5.x * r3.y + -r3.w;
  r3.w = r4.y * r2.y + r3.w;
  r3.w = -r4.x * r2.x + r3.w;
  r4.x = cmp(0 < r3.w);
  r3.w = cmp(r3.w < 0);
  r0.y = r0.y ? r3.w : 0;
  r1.w = r1.w ? r4.x : 0;
  r4.xy = r4.wz + -r2.xy;
  r3.w = r4.y * r3.z;
  r3.w = r4.x * r3.y + -r3.w;
  r3.w = r4.z * r2.x + r3.w;
  r3.w = -r4.w * r2.y + r3.w;
  r4.x = cmp(0 < r3.w);
  r3.w = cmp(r3.w < 0);
  r0.y = r0.y ? r3.w : 0;
  r1.w = r1.w ? r4.x : 0;
  r0.y = (int)r0.y | (int)r1.w;
  r0.y = r0.y ? 0.375000 : 0;
  r0.x = r0.z * r0.y + r0.x;
  r0.yz = -r4.wz + r2.xy;
  r0.z = r0.z * r3.z;
  r0.y = r0.y * r3.y + -r0.z;
  r0.y = r4.w * r2.y + r0.y;
  r0.y = -r4.z * r2.x + r0.y;
  r0.z = cmp(0 < r0.y);
  r0.y = cmp(r0.y < 0);
  r4.xy = r4.wz + -r1.yz;
  r1.w = r4.y * r3.z;
  r1.w = r4.x * r3.y + -r1.w;
  r1.w = r4.z * r1.y + r1.w;
  r1.w = -r4.w * r1.z + r1.w;
  r3.w = cmp(0 < r1.w);
  r1.w = cmp(r1.w < 0);
  r0.y = r0.y ? r1.w : 0;
  r0.z = r0.z ? r3.w : 0;
  r4.xy = r1.yz + -r2.xy;
  r1.w = r4.y * r3.z;
  r1.w = r4.x * r3.y + -r1.w;
  r1.w = r1.z * r2.x + r1.w;
  r1.w = -r1.y * r2.y + r1.w;
  r2.x = cmp(0 < r1.w);
  r1.w = cmp(r1.w < 0);
  r0.y = r0.y ? r1.w : 0;
  r0.z = r0.z ? r2.x : 0;
  r0.y = (int)r0.z | (int)r0.y;
  r0.z = -postFxConst11.z + r3.x;
  r0.z = cmp(r0.w >= abs(r0.z));
  r0.yz = r0.yz ? float2(0.375,1) : 0;
  r0.x = r0.z * r0.y + r0.x;
  r5.xy = -postFxConst13.xy + postFxConst12.xy;
  r5.z = -r5.x;
  r0.y = dot(r5.yz, r5.yz);
  r0.y = cmp(r0.y == 0.000000);
  r2.xy = r0.yy ? float2(1,0) : r5.yz;
  r2.zw = r2.zw + r2.xy;
  r2.zw = float2(0.5,0.5) * r2.zw;
  r0.y = dot(r2.zw, r2.zw);
  r2.zw = postFxControlF.xx * r2.wz;
  r0.y = sqrt(r0.y);
  r2.zw = r2.zw / r0.yy;
  r4.xy = postFxConst12.xy + r2.wz;
  r2.zw = postFxConst12.yx + -r2.zw;
  r5.xy = r4.wz + -r4.yx;
  r0.y = r5.y * r3.z;
  r0.y = r5.x * r3.y + -r0.y;
  r0.y = r4.z * r4.y + r0.y;
  r0.y = -r4.w * r4.x + r0.y;
  r1.w = cmp(0 < r0.y);
  r0.y = cmp(r0.y < 0);
  r5.xy = r1.yz + -r4.wz;
  r3.w = r5.y * r3.z;
  r3.w = r5.x * r3.y + -r3.w;
  r3.w = r4.w * r1.z + r3.w;
  r3.w = -r4.z * r1.y + r3.w;
  r4.z = cmp(0 < r3.w);
  r3.w = cmp(r3.w < 0);
  r0.y = r0.y ? r3.w : 0;
  r1.w = r1.w ? r4.z : 0;
  r4.zw = r4.yx + -r1.yz;
  r3.w = r4.w * r3.z;
  r3.w = r4.z * r3.y + -r3.w;
  r3.w = r4.x * r1.y + r3.w;
  r3.w = -r4.y * r1.z + r3.w;
  r4.z = cmp(0 < r3.w);
  r3.w = cmp(r3.w < 0);
  r0.y = r0.y ? r3.w : 0;
  r1.w = r1.w ? r4.z : 0;
  r0.y = (int)r0.y | (int)r1.w;
  r0.y = r0.y ? 0.312500 : 0;
  r0.x = r0.z * r0.y + r0.x;
  r0.yz = -r4.yx + r1.yz;
  r0.z = r0.z * r3.z;
  r0.y = r0.y * r3.y + -r0.z;
  r0.y = r4.y * r1.z + r0.y;
  r0.y = -r4.x * r1.y + r0.y;
  r0.z = cmp(0 < r0.y);
  r0.y = cmp(r0.y < 0);
  r4.zw = r4.yx + -r2.zw;
  r1.w = r4.w * r3.z;
  r1.w = r4.z * r3.y + -r1.w;
  r1.w = r4.x * r2.z + r1.w;
  r1.w = -r4.y * r2.w + r1.w;
  r3.w = cmp(0 < r1.w);
  r1.w = cmp(r1.w < 0);
  r0.y = r0.y ? r1.w : 0;
  r0.z = r0.z ? r3.w : 0;
  r4.zw = r2.zw + -r1.yz;
  r1.w = r4.w * r3.z;
  r1.w = r4.z * r3.y + -r1.w;
  r1.y = r2.w * r1.y + r1.w;
  r1.y = -r2.z * r1.z + r1.y;
  r1.z = cmp(0 < r1.y);
  r1.y = cmp(r1.y < 0);
  r0.yz = r0.yz ? r1.yz : 0;
  r0.y = (int)r0.z | (int)r0.y;
  r0.z = -postFxConst12.z + r3.x;
  r0.z = cmp(r0.w >= abs(r0.z));
  r0.yz = r0.yz ? float2(0.3125,1) : 0;
  r0.x = r0.z * r0.y + r0.x;
  r5.xy = -postFxConst14.xy + postFxConst13.xy;
  r5.z = -r5.x;
  r0.y = dot(r5.yz, r5.yz);
  r0.y = cmp(r0.y == 0.000000);
  r1.yz = r0.yy ? float2(1,0) : r5.yz;
  r2.xy = r2.xy + r1.yz;
  r2.xy = float2(0.5,0.5) * r2.xy;
  r0.y = dot(r2.xy, r2.xy);
  r2.xy = postFxControlF.xx * r2.yx;
  r0.y = sqrt(r0.y);
  r2.xy = r2.xy / r0.yy;
  r4.zw = postFxConst13.xy + r2.yx;
  r2.xy = postFxConst13.yx + -r2.xy;
  r5.xy = r4.yx + -r4.wz;
  r0.y = r5.y * r3.z;
  r0.y = r5.x * r3.y + -r0.y;
  r0.y = r4.x * r4.w + r0.y;
  r0.y = -r4.y * r4.z + r0.y;
  r1.w = cmp(0 < r0.y);
  r0.y = cmp(r0.y < 0);
  r5.xy = r2.zw + -r4.yx;
  r3.w = r5.y * r3.z;
  r3.w = r5.x * r3.y + -r3.w;
  r3.w = r4.y * r2.w + r3.w;
  r3.w = -r4.x * r2.z + r3.w;
  r4.x = cmp(0 < r3.w);
  r3.w = cmp(r3.w < 0);
  r0.y = r0.y ? r3.w : 0;
  r1.w = r1.w ? r4.x : 0;
  r4.xy = r4.wz + -r2.zw;
  r3.w = r4.y * r3.z;
  r3.w = r4.x * r3.y + -r3.w;
  r3.w = r4.z * r2.z + r3.w;
  r3.w = -r4.w * r2.w + r3.w;
  r4.x = cmp(0 < r3.w);
  r3.w = cmp(r3.w < 0);
  r0.y = r0.y ? r3.w : 0;
  r1.w = r1.w ? r4.x : 0;
  r0.y = (int)r0.y | (int)r1.w;
  r0.y = r0.y ? 0.250000 : 0;
  r0.x = r0.z * r0.y + r0.x;
  r0.yz = -r4.wz + r2.zw;
  r0.z = r0.z * r3.z;
  r0.y = r0.y * r3.y + -r0.z;
  r0.y = r4.w * r2.w + r0.y;
  r0.y = -r4.z * r2.z + r0.y;
  r0.z = cmp(0 < r0.y);
  r0.y = cmp(r0.y < 0);
  r4.xy = r4.wz + -r2.xy;
  r1.w = r4.y * r3.z;
  r1.w = r4.x * r3.y + -r1.w;
  r1.w = r4.z * r2.x + r1.w;
  r1.w = -r4.w * r2.y + r1.w;
  r3.w = cmp(0 < r1.w);
  r1.w = cmp(r1.w < 0);
  r0.y = r0.y ? r1.w : 0;
  r0.z = r0.z ? r3.w : 0;
  r4.xy = r2.xy + -r2.zw;
  r1.w = r4.y * r3.z;
  r1.w = r4.x * r3.y + -r1.w;
  r1.w = r2.y * r2.z + r1.w;
  r1.w = -r2.x * r2.w + r1.w;
  r2.z = cmp(0 < r1.w);
  r1.w = cmp(r1.w < 0);
  r0.y = r0.y ? r1.w : 0;
  r0.z = r0.z ? r2.z : 0;
  r0.y = (int)r0.z | (int)r0.y;
  r0.z = -postFxConst13.z + r3.x;
  r0.z = cmp(r0.w >= abs(r0.z));
  r0.yz = r0.yz ? float2(0.25,1) : 0;
  r0.x = r0.z * r0.y + r0.x;
  r2.zw = r2.xy + -r4.wz;
  r0.y = r2.w * r3.z;
  r0.y = r2.z * r3.y + -r0.y;
  r0.y = r4.w * r2.y + r0.y;
  r0.y = -r4.z * r2.x + r0.y;
  r1.w = cmp(0 < r0.y);
  r0.y = cmp(r0.y < 0);
  r5.xy = -postFxConst15.xy + postFxConst14.xy;
  r5.z = -r5.x;
  r2.z = dot(r5.yz, r5.yz);
  r2.z = cmp(r2.z == 0.000000);
  r2.zw = r2.zz ? float2(1,0) : r5.yz;
  r1.yz = r2.zw + r1.yz;
  r1.yz = float2(0.5,0.5) * r1.yz;
  r3.w = dot(r1.yz, r1.yz);
  r1.yz = postFxControlF.xx * r1.zy;
  r3.w = sqrt(r3.w);
  r1.yz = r1.yz / r3.ww;
  r4.xy = postFxConst14.xy + r1.zy;
  r1.yz = postFxConst14.yx + -r1.yz;
  r5.xy = r4.wz + -r4.yx;
  r3.w = r5.y * r3.z;
  r3.w = r5.x * r3.y + -r3.w;
  r3.w = r4.z * r4.y + r3.w;
  r3.w = -r4.w * r4.x + r3.w;
  r4.z = cmp(0 < r3.w);
  r3.w = cmp(r3.w < 0);
  r0.y = r0.y ? r3.w : 0;
  r1.w = r1.w ? r4.z : 0;
  r4.zw = r4.yx + -r2.xy;
  r3.w = r4.w * r3.z;
  r3.w = r4.z * r3.y + -r3.w;
  r3.w = r4.x * r2.x + r3.w;
  r3.w = -r4.y * r2.y + r3.w;
  r4.z = cmp(0 < r3.w);
  r3.w = cmp(r3.w < 0);
  r0.y = r0.y ? r3.w : 0;
  r1.w = r1.w ? r4.z : 0;
  r0.y = (int)r0.y | (int)r1.w;
  r0.y = r0.y ? 0.187500 : 0;
  r0.x = r0.z * r0.y + r0.x;
  r0.yz = -r4.yx + r2.xy;
  r0.z = r0.z * r3.z;
  r0.y = r0.y * r3.y + -r0.z;
  r0.y = r4.y * r2.y + r0.y;
  r0.y = -r4.x * r2.x + r0.y;
  r0.z = cmp(0 < r0.y);
  r0.y = cmp(r0.y < 0);
  r4.zw = r4.yx + -r1.yz;
  r1.w = r4.w * r3.z;
  r1.w = r4.z * r3.y + -r1.w;
  r1.w = r4.x * r1.y + r1.w;
  r1.w = -r4.y * r1.z + r1.w;
  r3.w = cmp(0 < r1.w);
  r1.w = cmp(r1.w < 0);
  r0.y = r0.y ? r1.w : 0;
  r0.z = r0.z ? r3.w : 0;
  r4.zw = r1.yz + -r2.xy;
  r1.w = r4.w * r3.z;
  r1.w = r4.z * r3.y + -r1.w;
  r1.w = r1.z * r2.x + r1.w;
  r1.w = -r1.y * r2.y + r1.w;
  r2.x = cmp(0 < r1.w);
  r1.w = cmp(r1.w < 0);
  r0.y = r0.y ? r1.w : 0;
  r0.z = r0.z ? r2.x : 0;
  r0.y = (int)r0.z | (int)r0.y;
  r0.z = -postFxConst14.z + r3.x;
  r0.z = cmp(r0.w >= abs(r0.z));
  r0.yz = r0.yz ? float2(0.1875,1) : 0;
  r0.x = r0.z * r0.y + r0.x;
  r0.y = dot(r2.zw, r2.zw);
  r2.xy = postFxControlF.xx * r2.zw;
  r0.y = sqrt(r0.y);
  r2.xy = r2.xy / r0.yy;
  r2.zw = postFxConst15.xy + r2.xy;
  r2.xy = postFxConst15.xy + -r2.xy;
  r4.zw = r4.yx + -r2.wz;
  r0.y = r4.w * r3.z;
  r0.y = r4.z * r3.y + -r0.y;
  r0.y = r4.x * r2.w + r0.y;
  r0.y = -r4.y * r2.z + r0.y;
  r1.w = cmp(0 < r0.y);
  r0.y = cmp(r0.y < 0);
  r4.zw = r1.yz + -r4.yx;
  r3.w = r4.w * r3.z;
  r3.w = r4.z * r3.y + -r3.w;
  r3.w = r4.y * r1.z + r3.w;
  r3.w = -r4.x * r1.y + r3.w;
  r4.x = cmp(0 < r3.w);
  r3.w = cmp(r3.w < 0);
  r0.y = r0.y ? r3.w : 0;
  r1.w = r1.w ? r4.x : 0;
  r4.xy = r2.wz + -r1.yz;
  r3.w = r4.y * r3.z;
  r3.w = r4.x * r3.y + -r3.w;
  r3.w = r2.z * r1.y + r3.w;
  r3.w = -r2.w * r1.z + r3.w;
  r4.x = cmp(0 < r3.w);
  r3.w = cmp(r3.w < 0);
  r0.y = r0.y ? r3.w : 0;
  r1.w = r1.w ? r4.x : 0;
  r0.y = (int)r0.y | (int)r1.w;
  r0.y = r0.y ? 0.125000 : 0;
  r0.x = r0.z * r0.y + r0.x;
  r0.yz = -r2.wz + r1.yz;
  r0.z = r0.z * r3.z;
  r0.y = r0.y * r3.y + -r0.z;
  r0.y = r2.w * r1.z + r0.y;
  r0.y = -r2.z * r1.y + r0.y;
  r0.z = cmp(0 < r0.y);
  r0.y = cmp(r0.y < 0);
  r4.xy = r2.wz + -r2.yx;
  r1.w = r4.y * r3.z;
  r1.w = r4.x * r3.y + -r1.w;
  r1.w = r2.z * r2.y + r1.w;
  r1.w = -r2.w * r2.x + r1.w;
  r2.z = cmp(0 < r1.w);
  r1.w = cmp(r1.w < 0);
  r0.y = r0.y ? r1.w : 0;
  r0.z = r0.z ? r2.z : 0;
  r2.zw = r2.yx + -r1.yz;
  r1.w = r2.w * r3.z;
  r1.w = r2.z * r3.y + -r1.w;
  r1.y = r2.x * r1.y + r1.w;
  r1.y = -r2.y * r1.z + r1.y;
  r1.z = cmp(0 < r1.y);
  r1.y = cmp(r1.y < 0);
  r0.yz = r0.yz ? r1.yz : 0;
  r0.y = (int)r0.z | (int)r0.y;
  r0.z = -postFxConst15.z + r3.x;
  r0.z = cmp(r0.w >= abs(r0.z));
  r0.yz = r0.yz ? float2(0.125,1) : 0;
  r0.x = r0.z * r0.y + r0.x;
  r0.y = r0.x + r1.x;
  r0.z = cmp(r0.x == 0.000000);
  r0.x = r0.z ? r0.y : r0.x;
  r1.xyzw = codeTexture1.Sample(samp0_s, v1.xy).xyzw;
  r0.y = saturate(dot(r1.xyzw, float4(1,1,1,1)));
  r0.x = r0.y * r0.x;
  r0.x = 0.5 * r0.x;
  r0.y = codeTexture2.Sample(samp0_s, v1.xy).x;
  r0.z = floatZSampler.Sample(samp0_s, v1.xy).x;
  r0.y = cmp(r0.y < r0.z);
  r0.z = cmp(0.899999976 < r0.z);
  r0.y = (int)r0.y | (int)r0.z;
  r0.x = r0.y ? 0 : r0.x;
  r1.w = 0.0250000004 * r3.z;
  r0.yzw = float3(20,0.100000001,0.0800000057) * gameTime.www;
  r1.xyz = r3.yyz * float3(0.0250000004,0.00312500005,0.00312500005) + r0.zww;
  r0.y = frac(r0.y);
  r0.y = gameTime.w * 20 + -r0.y;
  r2.z = 0.0500000007 * r0.y;
  r0.y = gridTexture.Sample(samplerBilinearWrap_s, r1.xw).w;
  r0.z = revealTexture.Sample(samplerBilinearWrap_s, r1.yz).x;
  r0.w = 1;
  r1.xy = r0.zw * r0.yy;
  r1.w = r1.y * r0.z;
  r1.z = r1.w * r1.w;
  r3.xyzw = r1.xzxz * r0.zzzz;
  r3.xyzw = float4(0,3,0,3) * r3.xyzw;
  r1.xyzw = r1.xwxw * float4(0,1,0,1) + r3.xyzw;
  r2.w = v1.y;
  r0.y = dot(r2.zw, float2(37.3498383,59.3948402));
  r2.x = frac(r0.y);
  r0.y = dot(r2.xzw, float3(81.2394867,37.3498383,59.3948402));
  r2.y = frac(r0.y);
  r0.y = dot(r2.xyzw, float4(81.2394867,17.3480244,37.3498383,59.3948402));
  r2.z = frac(r0.y);
  r0.y = dot(r2.xyzw, float4(81.2394867,17.3480244,37.3498383,59.3948402));
  r2.w = frac(r0.y);
  r0.y = dot(r2.xyzw, float4(81.2394867,17.3480244,37.3498383,59.3948402));
  r0.y = frac(r0.y);
  r0.y = frac(r0.y);
  r0.y = r0.y * 0.600000024 + 0.400000006;
  r1.xyzw = r0.yyyy * r1.xyzw;
  r0.xyzw = r1.xyzw * r0.xxxx;
  r1.xyzw = colorMapSampler.Sample(samp0_s, v1.xy).xyzw;
  r0.xyzw = r1.xyzw * float4(3.05175781e-05,3.05175781e-05,3.05175781e-05,1) + r0.xyzw;
  o0.xyzw = float4(32768,32768,32768,1) * r0.xyzw;
  return;
}