//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:40:19 2021
//
//
// Buffer Definitions: 
//
// cbuffer PostFxCBuffer
// {
//
//   float4 postFxControl0;             // Offset:    0 Size:    16
//   float4 postFxControl1;             // Offset:   16 Size:    16
//   float4 postFxControl2;             // Offset:   32 Size:    16
//   float4 postFxControl3;             // Offset:   48 Size:    16
//   float4 postFxControl4;             // Offset:   64 Size:    16
//   float4 postFxControl5;             // Offset:   80 Size:    16
//   float4 postFxControl6;             // Offset:   96 Size:    16
//   float4 postFxControl7;             // Offset:  112 Size:    16 [unused]
//   float4 postFxControl8;             // Offset:  128 Size:    16 [unused]
//   float4 postFxControl9;             // Offset:  144 Size:    16 [unused]
//   float4 postFxControlA;             // Offset:  160 Size:    16 [unused]
//   float4 postFxControlB;             // Offset:  176 Size:    16 [unused]
//   float4 postFxControlC;             // Offset:  192 Size:    16 [unused]
//   float4 postFxControlD;             // Offset:  208 Size:    16 [unused]
//   float4 postFxControlE;             // Offset:  224 Size:    16 [unused]
//   float4 postFxControlF;             // Offset:  240 Size:    16
//   float4 postFxConst00;              // Offset:  256 Size:    16 [unused]
//   float4 postFxConst01;              // Offset:  272 Size:    16 [unused]
//   float4 postFxConst02;              // Offset:  288 Size:    16 [unused]
//   float4 postFxConst03;              // Offset:  304 Size:    16 [unused]
//   float4 postFxConst04;              // Offset:  320 Size:    16 [unused]
//   float4 postFxConst05;              // Offset:  336 Size:    16 [unused]
//   float4 postFxConst06;              // Offset:  352 Size:    16 [unused]
//   float4 postFxConst07;              // Offset:  368 Size:    16 [unused]
//   float4 postFxConst08;              // Offset:  384 Size:    16 [unused]
//   float4 postFxConst09;              // Offset:  400 Size:    16 [unused]
//   float4 postFxConst10;              // Offset:  416 Size:    16 [unused]
//   float4 postFxConst11;              // Offset:  432 Size:    16 [unused]
//   float4 postFxConst12;              // Offset:  448 Size:    16 [unused]
//   float4 postFxConst13;              // Offset:  464 Size:    16 [unused]
//   float4 postFxConst14;              // Offset:  480 Size:    16 [unused]
//   float4 postFxConst15;              // Offset:  496 Size:    16 [unused]
//   float4 postFxConst16;              // Offset:  512 Size:    16 [unused]
//   float4 postFxConst17;              // Offset:  528 Size:    16 [unused]
//   float4 postFxConst18;              // Offset:  544 Size:    16 [unused]
//   float4 postFxConst19;              // Offset:  560 Size:    16 [unused]
//   float4 postFxConst20;              // Offset:  576 Size:    16 [unused]
//   float4 postFxConst21;              // Offset:  592 Size:    16 [unused]
//   float4 postFxConst22;              // Offset:  608 Size:    16 [unused]
//   float4 postFxConst23;              // Offset:  624 Size:    16 [unused]
//   float4 postFxConst24;              // Offset:  640 Size:    16 [unused]
//   float4 postFxConst25;              // Offset:  656 Size:    16 [unused]
//   float4 postFxConst26;              // Offset:  672 Size:    16 [unused]
//   float4 postFxConst27;              // Offset:  688 Size:    16 [unused]
//   float4 postFxConst28;              // Offset:  704 Size:    16 [unused]
//   float4 postFxConst29;              // Offset:  720 Size:    16 [unused]
//   float4 postFxConst30;              // Offset:  736 Size:    16 [unused]
//   float4 postFxConst31;              // Offset:  752 Size:    16 [unused]
//   float4 postFxConst32;              // Offset:  768 Size:    16 [unused]
//   float4 postFxConst33;              // Offset:  784 Size:    16 [unused]
//   float4 postFxConst34;              // Offset:  800 Size:    16 [unused]
//   float4 postFxConst35;              // Offset:  816 Size:    16 [unused]
//   float4 postFxConst36;              // Offset:  832 Size:    16 [unused]
//   float4 postFxConst37;              // Offset:  848 Size:    16 [unused]
//   float4 postFxConst38;              // Offset:  864 Size:    16 [unused]
//   float4 postFxConst39;              // Offset:  880 Size:    16 [unused]
//   float4 postFxConst40;              // Offset:  896 Size:    16 [unused]
//   float4 postFxConst41;              // Offset:  912 Size:    16 [unused]
//   float4 postFxConst42;              // Offset:  928 Size:    16 [unused]
//   float4 postFxConst43;              // Offset:  944 Size:    16 [unused]
//   float4 postFxConst44;              // Offset:  960 Size:    16 [unused]
//   float4 postFxConst45;              // Offset:  976 Size:    16 [unused]
//   float4 postFxConst46;              // Offset:  992 Size:    16 [unused]
//   float4 postFxConst47;              // Offset: 1008 Size:    16 [unused]
//   float4 postFxConst48;              // Offset: 1024 Size:    16 [unused]
//   float4 postFxConst49;              // Offset: 1040 Size:    16 [unused]
//   float4 postFxConst50;              // Offset: 1056 Size:    16 [unused]
//   float4 postFxConst51;              // Offset: 1072 Size:    16 [unused]
//   float4 postFxConst52;              // Offset: 1088 Size:    16 [unused]
//   float4 postFxConst53;              // Offset: 1104 Size:    16 [unused]
//   float4 postFxConst54;              // Offset: 1120 Size:    16 [unused]
//   float4 postFxConst55;              // Offset: 1136 Size:    16 [unused]
//   float4 postFxConst56;              // Offset: 1152 Size:    16 [unused]
//   float4 postFxConst57;              // Offset: 1168 Size:    16 [unused]
//   float4 postFxConst58;              // Offset: 1184 Size:    16 [unused]
//   float4 postFxConst59;              // Offset: 1200 Size:    16 [unused]
//   float4 postFxConst60;              // Offset: 1216 Size:    16 [unused]
//   float4 postFxConst61;              // Offset: 1232 Size:    16 [unused]
//   float4 postFxConst62;              // Offset: 1248 Size:    16 [unused]
//   float4 postFxConst63;              // Offset: 1264 Size:    16 [unused]
//   float4 postFxBloom00;              // Offset: 1280 Size:    16 [unused]
//   float4 postFxBloom01;              // Offset: 1296 Size:    16 [unused]
//   float4 postFxBloom02;              // Offset: 1312 Size:    16 [unused]
//   float4 postFxBloom03;              // Offset: 1328 Size:    16 [unused]
//   float4 postFxBloom04;              // Offset: 1344 Size:    16 [unused]
//   float4 postFxBloom05;              // Offset: 1360 Size:    16 [unused]
//   float4 postFxBloom06;              // Offset: 1376 Size:    16 [unused]
//   float4 postFxBloom07;              // Offset: 1392 Size:    16 [unused]
//   float4 postFxBloom08;              // Offset: 1408 Size:    16 [unused]
//   float4 postFxBloom09;              // Offset: 1424 Size:    16 [unused]
//   float4 postFxBloom10;              // Offset: 1440 Size:    16 [unused]
//   float4 postFxBloom11;              // Offset: 1456 Size:    16 [unused]
//   float4 postFxBloom12;              // Offset: 1472 Size:    16 [unused]
//   float4 postFxBloom13;              // Offset: 1488 Size:    16 [unused]
//   float4 postFxBloom14;              // Offset: 1504 Size:    16 [unused]
//   float4 postFxBloom15;              // Offset: 1520 Size:    16 [unused]
//   float4 postFxBloom16;              // Offset: 1536 Size:    16 [unused]
//   float4 postFxBloom17;              // Offset: 1552 Size:    16 [unused]
//   float4 postFxBloom18;              // Offset: 1568 Size:    16 [unused]
//   float4 postFxBloom19;              // Offset: 1584 Size:    16 [unused]
//   float4 postFxBloom20;              // Offset: 1600 Size:    16 [unused]
//   float4 postFxBloom21;              // Offset: 1616 Size:    16 [unused]
//   float4 postFxBloom22;              // Offset: 1632 Size:    16 [unused]
//   float4 postFxBloom23;              // Offset: 1648 Size:    16 [unused]
//   float4 postFxBloom24;              // Offset: 1664 Size:    16 [unused]
//   float4 postFxBloom25;              // Offset: 1680 Size:    16 [unused]
//   float4 filterTap[8];               // Offset: 1696 Size:   128 [unused]
//   float4 postfxViewMatrix0;          // Offset: 1824 Size:    16 [unused]
//   float4 postfxViewMatrix1;          // Offset: 1840 Size:    16 [unused]
//   float4 postfxViewMatrix2;          // Offset: 1856 Size:    16 [unused]
//   float4 postfxViewMatrix3;          // Offset: 1872 Size:    16 [unused]
//   float4 postfxProjMatrix0;          // Offset: 1888 Size:    16 [unused]
//   float4 postfxProjMatrix1;          // Offset: 1904 Size:    16 [unused]
//   float4 postfxProjMatrix2;          // Offset: 1920 Size:    16 [unused]
//   float4 postfxProjMatrix3;          // Offset: 1936 Size:    16 [unused]
//   float4 postfxViewProjMatrix0;      // Offset: 1952 Size:    16 [unused]
//   float4 postfxViewProjMatrix1;      // Offset: 1968 Size:    16 [unused]
//   float4 postfxViewProjMatrix2;      // Offset: 1984 Size:    16 [unused]
//   float4 postfxViewProjMatrix3;      // Offset: 2000 Size:    16 [unused]
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16 [unused]
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16
//   float4 gameTick;                   // Offset: 1120 Size:    16 [unused]
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16 [unused]
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// samplerBilinearWrap               sampler      NA          NA             s2      1 
// floatZSampler                     texture  float4          2d             t0      1 
// colorMapSampler                   texture  float4          2d             t6      1 
// gridTexture                       texture  float4          2d             t7      1 
// randomTextureB                    texture  float4          2d             t9      1 
// codeTexture1                      texture  float4          2d            t10      1 
// codeTexture2                      texture  float4          2d            t11      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// PostFxCBuffer                     cbuffer      NA          NA            cb8      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB8[16], immediateIndexed
dcl_constantbuffer CB1[70], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t11
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 9
sample_indexable(texture2d)(float,float,float,float) r0.x, v1.xyxx, t0.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r0.y, v1.xyxx, t11.yxzw, s0
mul r0.zw, v1.xxxy, cb1[44].xxxy
ftoi r1.xy, r0.zwzz
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.z, r1.xyww, t11.yzxw
max r0.z, r0.z, l(0.00000001)
div r0.z, cb1[41].x, r0.z
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v1.xyxx, t10.xyzw, s0
ld_indexable(texture2d)(float,float,float,float) r0.w, r1.xyzw, t0.yzwx
ge r1.x, r0.w, l(0.984375)
mul r1.y, r0.w, l(1.01587307)
mad r0.w, r0.w, l(64.000000), l(-63.000000)
movc r0.w, r1.x, r0.w, r1.y
max r0.w, r0.w, l(0.00000001)
rcp r1.y, r0.w
add r3.xy, v1.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r0.w, r1.y, r3.x
mul r1.z, r0.w, cb8[15].z
mul r0.w, r1.y, -r3.y
mul r1.x, r0.w, cb8[15].w
mul r3.xyz, r1.xxxx, cb8[4].xyzx
mad r3.xyz, r1.zzzz, cb8[3].xyzx, r3.xyzx
mad r3.xyz, r1.yyyy, cb8[5].xyzx, r3.xyzx
add r3.xyz, r3.xyzx, cb8[6].xyzx
mov r4.x, cb1[44].z
mov r4.yz, l(0,0,0,0)
add r4.xy, r4.xyxx, v1.xyxx
mul r5.xy, r4.xyxx, cb1[44].xyxx
ftoi r5.xy, r5.xyxx
mov r5.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.w, r5.xyzw, t0.yzwx
ge r1.w, r0.w, l(0.984375)
mul r4.y, r0.w, l(1.01587307)
mad r0.w, r0.w, l(64.000000), l(-63.000000)
movc r0.w, r1.w, r0.w, r4.y
max r0.w, r0.w, l(0.00000001)
rcp r5.x, r0.w
add r0.w, r4.x, l(-0.500000)
mul r0.w, r1.y, r0.w
mul r5.y, r0.w, cb8[15].z
mov r4.w, -cb1[44].w
add r4.xy, r4.zwzz, v1.xyxx
mul r4.xz, r4.xxyx, cb1[44].xxyx
ftoi r6.xy, r4.xzxx
mov r6.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.w, r6.xyzw, t0.yzwx
ge r1.w, r0.w, l(0.984375)
mul r4.x, r0.w, l(1.01587307)
mad r0.w, r0.w, l(64.000000), l(-63.000000)
movc r0.w, r1.w, r0.w, r4.x
max r0.w, r0.w, l(0.00000001)
rcp r6.y, r0.w
add r0.w, r4.y, l(-0.500000)
mul r0.w, r1.y, -r0.w
mul r6.x, r0.w, cb8[15].w
eq r0.w, r1.y, l(0.000000)
eq r1.w, r5.x, l(0.000000)
or r0.w, r0.w, r1.w
eq r1.w, r6.y, l(0.000000)
or r0.w, r0.w, r1.w
add r1.w, r1.y, -r5.x
lt r1.w, l(100.000000), |r1.w|
or r0.w, r0.w, r1.w
add r1.w, r1.y, -r6.y
lt r1.w, l(100.000000), |r1.w|
or r0.w, r0.w, r1.w
movc r0.w, r0.w, l(0), l(1.000000)
mov r5.z, r1.x
add r4.xyz, -r1.yzxy, r5.xyzx
mov r6.z, r1.z
add r5.xyz, -r1.xyzx, r6.xyzx
mul r6.xyz, r4.xyzx, r5.xyzx
mad r4.xyz, r4.zxyz, r5.yzxy, -r6.xyzx
dp3 r1.x, r4.xyzx, r4.xyzx
sqrt r1.x, r1.x
div r1.x, r4.z, r1.x
mad r1.x, r1.x, l(0.500000), l(0.500000)
mul r0.w, r0.w, r1.x
dp2 r1.x, r1.yzyy, r1.yzyy
sqrt r1.x, r1.x
mul r1.z, cb8[0].x, cb1[69].w
div r1.x, r1.x, cb8[0].z
frc r1.xz, r1.xxzx
add r1.x, -r1.x, r1.z
frc r1.x, r1.x
log r1.z, r1.x
mul r1.w, r1.z, cb8[0].w
exp r1.w, r1.w
mul r1.z, r1.z, cb8[1].x
exp r1.z, r1.z
add r1.zw, -r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
lt r4.x, l(0.000000), r0.y
lt r0.x, r0.y, r0.x
and r0.x, r0.x, r4.x
movc r2.xyzw, r0.xxxx, l(0,0,0,0), r2.xyzw
add r0.y, -r1.y, cb8[0].y
div_sat r0.y, r0.y, cb8[0].y
log r0.y, r0.y
mul r0.y, r0.y, l(50.000000)
exp r0.y, r0.y
lt r1.y, cb8[1].y, r0.z
add r4.x, cb8[1].y, l(200.000000)
add r0.z, -r0.z, r4.x
mul_sat r0.z, r0.z, l(0.005000)
mul r4.xyzw, r0.zzzz, r2.xyzw
movc r2.xyzw, r1.yyyy, r4.xyzw, r2.xyzw
mov r3.w, cb1[69].w
dp3 r0.z, r3.xywx, l(81.239487, 17.348024, 37.349838, 0.000000)
frc r4.x, r0.z
mov r4.zw, r3.yyyw
dp3 r0.z, r4.xzwx, l(81.239487, 17.348024, 37.349838, 0.000000)
frc r4.y, r0.z
dp3 r0.z, r4.xywx, l(81.239487, 17.348024, 37.349838, 0.000000)
frc r4.z, r0.z
dp3 r0.z, r4.xyzx, l(81.239487, 17.348024, 37.349838, 0.000000)
frc r4.w, r0.z
dp4 r0.z, r4.xyzw, l(81.239487, 17.348024, 37.349838, 59.394840)
frc r4.x, r0.z
dp4 r0.z, r4.xyzw, l(81.239487, 17.348024, 37.349838, 59.394840)
frc r4.y, r0.z
mul r4.xy, r4.xyxx, cb8[2].zzzz
mad r4.xy, r3.xyxx, l(0.002500, 0.002500, 0.000000, 0.000000), r4.xyxx
sample_indexable(texture2d)(float,float,float,float) r4.xy, r4.xyxx, t9.xyzw, s2
mul r0.z, cb1[69].w, l(4.000000)
sincos r0.z, null, r0.z
mad r0.z, r0.z, l(0.500000), l(0.500000)
add r1.y, -r4.x, r4.y
mad r0.z, r0.z, r1.y, r4.x
rsq r1.y, r0.y
div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
mad r4.xyzw, r1.yyyy, l(0.000000, 1.000000, -1.000000, 0.000000), l(0.000000, 0.000000, 1.000000, 0.000000)
mul r4.xyzw, r0.wwww, r4.xyzw
mul r4.xyzw, r0.yyyy, r4.xyzw
mul r4.xyzw, r0.zzzz, r4.xyzw
mul r4.xyzw, r1.wwww, r4.xyzw
sample_indexable(texture2d)(float,float,float,float) r5.xyzw, v1.xyxx, t6.xyzw, s0
add r0.z, r2.y, r2.x
lt r0.z, l(0.000000), r0.z
eq r1.y, r2.z, l(0.000000)
and r0.z, r0.z, r1.y
mul r6.xyzw, cb8[1].wwww, cb1[44].zwzw
dp4 r1.y, r3.xyzw, l(81.239487, 17.348024, 37.349838, 59.394840)
frc r3.x, r1.y
dp4 r1.y, r3.xyzw, l(81.239487, 17.348024, 37.349838, 59.394840)
frc r3.y, r1.y
dp4 r1.y, r3.xyzw, l(81.239487, 17.348024, 37.349838, 59.394840)
frc r3.z, r1.y
dp4 r1.y, r3.xyzw, l(81.239487, 17.348024, 37.349838, 59.394840)
frc r3.w, r1.y
dp4 r1.y, r3.xyzw, l(81.239487, 17.348024, 37.349838, 59.394840)
frc r3.x, r1.y
dp4 r1.y, r3.xyzw, l(81.239487, 17.348024, 37.349838, 59.394840)
frc r7.yw, r1.yyyy
mov r7.xz, r3.xxxx
add r3.xyzw, r7.xyzw, l(-0.500000, -0.500000, -0.500000, -0.500000)
mad r3.xyzw, cb8[2].wwww, r3.xyzw, v1.xyxy
sample_indexable(texture2d)(float,float,float,float) r1.y, r3.zwzz, t0.yxzw, s0
mad r7.xyzw, r6.zwzw, l(1.000000, 0.000000, -1.000000, 0.000000), r3.zwzw
sample_indexable(texture2d)(float,float,float,float) r1.w, r7.xyxx, t0.yzwx, s0
sample_indexable(texture2d)(float,float,float,float) r7.x, r7.zwzz, t0.xyzw, s0
mad r8.xyzw, r6.zwzw, l(0.000000, 1.000000, 0.000000, -1.000000), r3.zwzw
sample_indexable(texture2d)(float,float,float,float) r7.y, r8.xyxx, t0.yxzw, s0
sample_indexable(texture2d)(float,float,float,float) r7.z, r8.zwzz, t0.yzxw, s0
mad r8.xy, cb1[44].zwzz, cb8[1].wwww, r3.zwzz
sample_indexable(texture2d)(float,float,float,float) r7.w, r8.xyxx, t0.yzwx, s0
mad r8.xy, -cb1[44].zwzz, cb8[1].wwww, r3.zwzz
sample_indexable(texture2d)(float,float,float,float) r8.x, r8.xyxx, t0.xyzw, s0
mad r3.xyzw, r6.xyzw, l(1.000000, -1.000000, -1.000000, 1.000000), r3.xyzw
sample_indexable(texture2d)(float,float,float,float) r3.x, r3.xyxx, t0.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r3.y, r3.zwzz, t0.yxzw, s0
if_nz r0.z
  mul r0.z, cb8[1].z, l(4.000000)
  mad_sat r0.z, r1.x, l(-4.000000), r0.z
  mul r1.x, r0.z, l(0.300000)
  movc r0.x, r0.x, r1.x, r0.z
  rsq r0.z, r0.w
  div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
  add r0.z, -r0.z, l(1.000000)
  add r6.xyz, -r2.xyzx, l(1.000000, 0.500000, 0.000000, 0.000000)
  mad r2.xyz, r0.zzzz, r6.xyzx, r2.xyzx
  mul r0.z, r1.z, r0.y
  add r6.x, r1.w, r7.x
  add r6.y, r7.z, r7.y
  add r6.z, r7.w, r8.x
  add r6.w, r3.y, r3.x
  mad r6.xyzw, r1.yyyy, l(2.000000, 2.000000, 2.000000, 2.000000), -r6.xyzw
  mul r6.xyzw, |r6.xyzw|, l(1000.000000, 1000.000000, 1000.000000, 1000.000000)
  div r6.xyzw, r6.xyzw, r1.yyyy
  max r0.w, r6.y, r6.x
  max r0.w, r6.z, r0.w
  max r0.w, r6.w, r0.w
  lt r1.x, r0.w, l(0.300000)
  mov_sat r0.w, r0.w
  movc r0.w, r1.x, l(0), r0.w
  mad r6.xyzw, r0.zzzz, r0.wwww, r4.wyzw
  add r2.xyzw, r2.xyzw, -r6.wyzw
  mad r2.xyzw, r0.xxxx, r2.xyzw, r6.xyzw
else 
  mul r0.x, r1.z, r0.y
  add r6.x, r1.w, r7.x
  add r6.y, r7.z, r7.y
  add r6.z, r7.w, r8.x
  add r6.w, r3.y, r3.x
  mad r3.xyzw, r1.yyyy, l(2.000000, 2.000000, 2.000000, 2.000000), -r6.xyzw
  mul r3.xyzw, |r3.xyzw|, l(1000.000000, 1000.000000, 1000.000000, 1000.000000)
  div r1.xyzw, r3.xyzw, r1.yyyy
  max r0.y, r1.y, r1.x
  max r0.y, r1.z, r0.y
  max r0.y, r1.w, r0.y
  lt r0.z, r0.y, l(0.300000)
  mov_sat r0.y, r0.y
  movc r0.y, r0.z, l(0), r0.y
  mad r2.xyzw, r0.xxxx, r0.yyyy, r4.xyzw
endif 
add r0.xyzw, r5.xyzw, -cb8[2].yyyy
max r0.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
min r0.xyzw, r0.xyzw, l(100000.000000, 100000.000000, 100000.000000, 100000.000000)
mad r0.xyzw, cb8[2].xxxx, r0.xyzw, r2.xyzw
sample_indexable(texture2d)(float,float,float,float) r1.x, v1.xyxx, t7.xyzw, s2
mul o0.xyzw, r0.xyzw, r1.xxxx
ret 
// Approximately 222 instruction slots used
