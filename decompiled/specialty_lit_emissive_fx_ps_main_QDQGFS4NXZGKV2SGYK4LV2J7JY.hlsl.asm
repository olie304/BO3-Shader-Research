//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:41:47 2021
//
//
// Note: shader requires additional functionality:
//       Early depth-stencil
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float3 colorTint;                  // Offset:  160 Size:    12
//   float baseNormalHeight;            // Offset:  172 Size:     4
//   float2 glossRange;                 // Offset:  176 Size:     8
//   float rowCount;                    // Offset:  184 Size:     4
//   float columnCount;                 // Offset:  188 Size:     4
//   float imageTime;                   // Offset:  192 Size:     4
//   float2 rotateUVs;                  // Offset:  196 Size:     8
//   float2 scrollUVs;                  // Offset:  208 Size:     8
//   float2 scaleUVs;                   // Offset:  216 Size:     8
//   float2 offsetUVs;                  // Offset:  224 Size:     8
//   float2 zoomUVs;                    // Offset:  232 Size:     8
//   float zoomRate;                    // Offset:  240 Size:     4
//   float layerDepth;                  // Offset:  244 Size:     4 [unused]
//   bool clampU;                       // Offset:  248 Size:     4
//   bool clampV;                       // Offset:  252 Size:     4
//   float2 flickerSeed;                // Offset:  256 Size:     8
//   float flickerSpeed;                // Offset:  264 Size:     4
//   float2 flickerRange;               // Offset:  272 Size:     8
//   float flickerPower;                // Offset:  280 Size:     4
//   bool relativeHDR;                  // Offset:  284 Size:     4
//   bool invertFalloff;                // Offset:  288 Size:     4
//   float hdrScale;                    // Offset:  292 Size:     4
//   float emissiveFalloffPower;        // Offset:  296 Size:     4
//   float zFeatherDistance;            // Offset:  300 Size:     4
//   float falloffBegin;                // Offset:  304 Size:     4 [unused]
//   float falloffEnd;                  // Offset:  308 Size:     4 [unused]
//   float alphaCooling;                // Offset:  312 Size:     4
//   float coolingFactor;               // Offset:  316 Size:     4
//   float uvMotionToggle1;             // Offset:  320 Size:     4
//   float2 distortionRotateUVs;        // Offset:  324 Size:     8
//   float2 distortionScrollUVs;        // Offset:  336 Size:     8
//   float2 distortionScaleUVs;         // Offset:  344 Size:     8
//   float2 distortionOffsetUVs;        // Offset:  352 Size:     8
//   float2 distortionZoomUVs;          // Offset:  360 Size:     8
//   float distortionZoomRate;          // Offset:  368 Size:     4
//   float distortionAmount;            // Offset:  372 Size:     4
//   float2 maskRotateUVs;              // Offset:  376 Size:     8
//   float2 maskScrollUVs;              // Offset:  384 Size:     8
//   float2 maskScaleUVs;               // Offset:  392 Size:     8
//   float2 maskOffsetUVs;              // Offset:  400 Size:     8
//   float2 maskZoomUVs;                // Offset:  408 Size:     8
//   float maskZoomRate;                // Offset:  416 Size:     4
//   bool noReceiveShadow;              // Offset:  420 Size:     4
//   uint zFeatherComputeSprites;       // Offset:  424 Size:     4 [unused]
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16 [unused]
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16
//   float4 debugNormalOverride;        // Offset:  960 Size:    16
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16
//   float4 debugGlossOverride;         // Offset:  992 Size:    16
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// colorSampler                      sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// normalSampler                     sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// lookupSampler                     sampler      NA          NA             s5      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// floatZSampler                     texture  float4          2d             t0      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// colorMap                          texture  float4          2d            t21      1 
// tintMask                          texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// normalMap                         texture  float4          2d            t24      1 
// flickerLookupMap                  texture  float4          2d            t25      1 
// emissiveMap                       texture  float4          2d            t26      1 
// alphaMask                         texture  float4          2d            t29      1 
// distortionMap                     texture  float4          2d            t30      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// gOit_Pixels                           UAV    uint          2d             u6      1 
// gOit_Nodes                            UAV   uint2     2darray             u7      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyz 
// COLOR                    1   x           1     NONE   float   x   
// TEXCOORD                 0    yz         1     NONE   float    yz 
// UVOFFSETS                0   xyz         2     NONE   float   xyz 
// TEXCOORD                 1   xyz         3     NONE   float   xyz 
// TEXCOORD                 2   xyz         4     NONE   float   xyz 
// TEXCOORD                 3   xyz         5     NONE   float   xyz 
// OFFPOSITION              0   xyz         6     NONE   float   xyz 
// TEXCOORD                 9   xy          7     NONE   float   xy  
// SV_IsFrontFace           0   x           8    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | forceEarlyDepthStencil
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[27], immediateIndexed
dcl_constantbuffer CB1[93], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2d (float,float,float,float) t26
dcl_resource_texture2d (float,float,float,float) t29
dcl_resource_texture2d (float,float,float,float) t30
dcl_resource_texture2darray (float,float,float,float) t31
dcl_uav_typed_texture2d (uint,uint,uint,uint) u6
dcl_uav_typed_texture2darray (uint,uint,uint,uint) u7
dcl_input_ps_siv linear noperspective v0.xyz, position
dcl_input_ps linear v1.x
dcl_input_ps linear v1.yz
dcl_input_ps constant v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xy
dcl_input_ps_sgv constant v8.x, is_front_face
dcl_output o0.xyzw
dcl_temps 48
add r0.xy, v1.yzyy, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r0.zw, cb0[21].zzzw, cb0[22].xxxy
mad r0.zw, r0.xxxy, cb0[21].zzzw, r0.zzzw
mad r1.x, cb0[20].z, cb1[69].w, l(1.000000)
mul r1.x, r1.x, cb0[20].y
mul r1.x, r1.x, l(0.01745329)
sincos r1.x, r2.x, r1.x
mov r2.y, r2.x
mov r2.z, r1.x
dp2 r3.x, r2.yzyy, r0.zwzz
mov r2.x, -r1.x
dp2 r3.y, r2.xyxx, r0.zwzz
mul r0.zw, cb0[21].xxxy, cb1[69].wwww
mad r0.zw, r0.zzzw, cb0[21].zzzw, r3.xxxy
mul r1.x, cb0[23].x, cb1[69].w
sincos null, r1.x, r1.x
mad r1.x, r1.x, l(0.500000), l(0.500000)
add r1.x, -r1.x, l(1.000000)
add r1.y, -cb0[22].z, cb0[22].w
mad r1.x, r1.x, r1.y, cb0[22].z
div r0.zw, r0.zzzw, r1.xxxx
add r0.zw, r0.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
sample_indexable(texture2d)(float,float,float,float) r0.zw, r0.zwzz, t30.zwxy, s3
mad r0.zw, r0.zzzw, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
lt r1.x, l(0.500000), cb0[20].x
if_nz r1.x
  mul r1.y, cb0[11].w, cb0[11].z
  mul r1.z, r1.y, cb0[12].x
  mul r1.w, r1.z, cb1[69].w
  ge r1.w, r1.w, -r1.w
  movc r1.w, r1.w, r1.z, -r1.z
  div r2.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  mul r2.x, r2.x, cb1[69].w
  frc r2.x, r2.x
  mul r1.w, r1.w, r2.x
  div r1.z, r1.w, r1.z
  mul r1.y, r1.y, r1.z
  round_ne r1.y, r1.y
  div r1.z, r1.y, cb0[11].w
  mul r1.w, r1.y, cb0[11].w
  ge r1.w, r1.w, -r1.w
  movc r1.w, r1.w, cb0[11].w, -cb0[11].w
  div r2.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  mul r1.y, r1.y, r2.x
  frc r1.y, r1.y
  mul r1.y, r1.y, r1.w
  round_z r1.y, r1.y
  add r1.y, r1.y, v1.y
  div r2.x, r1.y, cb0[11].w
  round_z r1.y, r1.z
  add r1.y, r1.y, v1.z
  div r2.y, r1.y, cb0[11].z
else 
  dp3 r1.y, -v6.xyzx, -v6.xyzx
  rsq r1.y, r1.y
  mul r1.yzw, r1.yyyy, -v6.xxyz
  dp3 r3.x, r1.yzwy, v4.xyzx
  dp3 r3.y, r1.yzwy, v5.xyzx
  dp3 r1.y, r1.yzwy, v3.xyzx
  lt r1.z, l(0.000000), r1.y
  div r1.yw, -r3.xxxy, r1.yyyy
  and r1.yz, r1.yywy, r1.zzzz
  mul r1.yz, r1.yyzy, cb0[13].zzwz
  mul r1.yz, r1.yyzy, l(0.000000, 0.000010, 0.000010, 0.000000)
  mad r1.yz, r0.xxyx, cb0[13].zzwz, r1.yyzy
  mad r1.yz, cb0[14].xxyx, cb0[13].zzwz, r1.yyzy
  mad r1.w, cb0[12].z, cb1[69].w, l(1.000000)
  mul r1.w, r1.w, cb0[12].y
  mul r1.w, r1.w, l(0.01745329)
  sincos r3.x, r4.x, r1.w
  mov r4.y, r4.x
  mov r4.z, r3.x
  dp2 r5.x, r4.yzyy, r1.yzyy
  mov r4.x, -r3.x
  dp2 r5.y, r4.xyxx, r1.yzyy
  mul r1.yz, cb0[13].xxyx, cb1[69].wwww
  mad r1.yz, r1.yyzy, cb0[13].zzwz, r5.xxyx
  mul r1.w, cb0[15].x, cb1[69].w
  sincos null, r1.w, r1.w
  mad r1.w, r1.w, l(0.500000), l(0.500000)
  add r1.w, -r1.w, l(1.000000)
  add r2.z, -cb0[14].z, cb0[14].w
  mad r1.w, r1.w, r2.z, cb0[14].z
  div r1.yz, r1.yyzy, r1.wwww
  add r1.yz, r1.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
  mov_sat r2.zw, r1.yyyz
  movc r2.xy, cb0[15].zwzz, r2.zwzz, r1.yzyy
endif 
mad r1.yz, r0.zzwz, cb0[23].yyyy, r2.xxyx
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.yzyy, t21.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r1.w, r1.yzyy, t22.yzwx, s1
add r3.xyz, cb0[10].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r3.xyz, r1.wwww, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r2.xyz, r2.xyzx, r3.xyzx
mul r1.w, r2.w, v1.x
add r3.x, -cb0[11].x, cb0[11].y
mul_sat r3.y, cb0[11].y, l(0.05882353)
sample_indexable(texture2d)(float,float,float,float) r4.xyz, r1.yzyy, t24.xyzw, s3
add r4.xyz, r4.xyzx, l(-0.500000, -0.500000, -0.000000, 0.000000)
mad r4.xyz, cb0[10].wwww, r4.xyzx, l(0.500000, 0.500000, 0.000000, 0.000000)
mad r3.zw, r4.xxxy, l(0.000000, 0.000000, 1.99218750, 1.99218750), l(0.000000, 0.000000, -1.000000, -1.000000)
dp2 r4.x, r3.zwzz, r3.zwzz
add r4.x, -r4.x, l(1.000000)
max r4.x, r4.x, l(0.000000)
sqrt r4.x, r4.x
mul r4.y, r4.z, r4.z
mul r4.y, r4.y, l(0.33333334)
min r4.y, r4.y, l(1.000000)
movc r4.z, v8.x, l(1.000000), l(-1.000000)
dp3 r4.w, v3.xyzx, v3.xyzx
rsq r4.w, r4.w
mul r5.xyz, r4.wwww, v3.xyzx
mul r5.xyz, r4.zzzz, r5.xyzx
dp3 r4.w, v4.xyzx, v4.xyzx
rsq r4.w, r4.w
mul r6.xyz, r4.wwww, v4.xyzx
mul r6.xyz, r4.zzzz, r6.xyzx
dp3 r4.w, v5.xyzx, v5.xyzx
rsq r4.w, r4.w
mul r7.xyz, r4.wwww, v5.xyzx
mul r7.xyz, r4.zzzz, r7.xyzx
mul r3.y, r3.y, l(-17.000000)
exp r3.y, r3.y
add r3.y, r3.y, r4.y
log r3.y, r3.y
mul r3.y, r3.y, l(-0.05882353)
mul r7.xyz, r3.wwww, r7.xyzx
mad r6.xyz, r6.xyzx, r3.zzzz, r7.xyzx
mad r4.xzw, r5.xxyz, r4.xxxx, r6.xxyz
dp3 r3.z, r4.xzwx, r4.xzwx
rsq r3.z, r3.z
mul r4.xzw, r3.zzzz, r4.xxzw
mad r3.x, cb1[62].x, r3.x, cb0[11].x
mul_sat r3.x, r3.x, l(0.05882353)
mul r3.x, r3.x, l(-17.000000)
exp r3.x, r3.x
add r3.x, r3.x, r4.y
log r3.x, r3.x
mul r3.x, r3.x, l(-0.05882353)
max r3.xy, r3.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r3.z, l(0.000000), cb1[64].w
if_nz r3.z
  ftoi r3.z, cb1[64].w
  lod r3.w, r1.yzyy, t21.y, s1
  lod r1.y, r1.yzyy, t21.x, s1
  lt r1.z, r3.w, r1.y
  lt r1.y, l(0.000000), r1.y
  and r5.xyz, r3.zzzz, l(1, 2, 4, 0)
  movc r6.xyz, r5.xxxx, l(1.000000,0,1.000000,0), r2.xyzx
  movc r5.xyw, r5.yyyy, l(0,1.000000,0,1.000000), r2.xyxz
  movc r5.xyw, r1.yyyy, r6.xyxz, r5.xyxw
  movc r6.xyz, r5.zzzz, l(0,1.000000,0,0), r2.xyzx
  movc r2.xyz, r1.zzzz, r5.xywx, r6.xyzx
endif 
add r5.xyz, -r2.xyzx, cb1[58].xyzx
mad r2.xyz, cb1[58].wwww, r5.xyzx, r2.xyzx
mad r1.y, -r2.w, v1.x, cb1[59].x
mad r1.y, cb1[59].w, r1.y, r1.w
add r5.xyz, cb1[61].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r5.xyz, cb1[61].wwww, r5.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
add r1.z, -r3.y, r3.x
mad r3.y, cb1[62].w, r1.z, r3.y
add r1.z, cb1[63].x, l(-1.000000)
mad r1.z, cb1[63].w, r1.z, l(1.000000)
movc r6.xyz, v8.xxxx, v3.xyzx, -v3.xyzx
dp3 r1.w, r6.xyzx, r6.xyzx
rsq r1.w, r1.w
mad r6.xyz, r6.xyzx, r1.wwww, -r4.xzwx
mad r4.xyz, cb1[60].wwww, r6.xyzx, r4.xzwx
dp3 r1.w, -v6.xyzx, -v6.xyzx
rsq r1.w, r1.w
mul r6.xyz, r1.wwww, -v6.xyzx
dp3 r2.w, r6.xyzx, v3.xyzx
if_nz r1.x
  mul r1.x, cb0[11].w, cb0[11].z
  mul r3.z, r1.x, cb0[12].x
  mul r3.w, r3.z, cb1[69].w
  ge r3.w, r3.w, -r3.w
  movc r3.w, r3.w, r3.z, -r3.z
  div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  mul r5.w, r5.w, cb1[69].w
  frc r5.w, r5.w
  mul r3.w, r3.w, r5.w
  div r3.z, r3.w, r3.z
  mul r1.x, r1.x, r3.z
  round_ne r1.x, r1.x
  div r3.z, r1.x, cb0[11].w
  mul r3.w, r1.x, cb0[11].w
  ge r3.w, r3.w, -r3.w
  movc r3.w, r3.w, cb0[11].w, -cb0[11].w
  div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  mul r1.x, r1.x, r5.w
  frc r1.x, r1.x
  mul r1.x, r1.x, r3.w
  round_z r1.x, r1.x
  add r1.x, r1.x, v1.y
  div r7.x, r1.x, cb0[11].w
  round_z r1.x, r3.z
  add r1.x, r1.x, v1.z
  div r7.y, r1.x, cb0[11].z
else 
  mul r3.zw, cb0[13].zzzw, cb0[14].xxxy
  mad r3.zw, r0.xxxy, cb0[13].zzzw, r3.zzzw
  mad r1.x, cb0[12].z, cb1[69].w, l(1.000000)
  mul r1.x, r1.x, cb0[12].y
  mul r1.x, r1.x, l(0.01745329)
  sincos r1.x, r8.x, r1.x
  mov r8.y, r8.x
  mov r8.z, r1.x
  dp2 r9.x, r8.yzyy, r3.zwzz
  mov r8.x, -r1.x
  dp2 r9.y, r8.xyxx, r3.zwzz
  mul r3.zw, cb0[13].xxxy, cb1[69].wwww
  mad r3.zw, r3.zzzw, cb0[13].zzzw, r9.xxxy
  mul r1.x, cb0[15].x, cb1[69].w
  sincos null, r1.x, r1.x
  mad r1.x, r1.x, l(0.500000), l(0.500000)
  add r1.x, -r1.x, l(1.000000)
  add r5.w, -cb0[14].z, cb0[14].w
  mad r1.x, r1.x, r5.w, cb0[14].z
  div r3.zw, r3.zzzw, r1.xxxx
  add r3.zw, r3.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
  mov_sat r7.zw, r3.zzzw
  movc r7.xy, cb0[15].zwzz, r7.zwzz, r3.zwzz
endif 
mad r3.zw, r0.zzzw, cb0[23].yyyy, r7.xxxy
sample_indexable(texture2d)(float,float,float,float) r7.xyzw, r3.zwzz, t26.xyzw, s1
mul r7.xyz, r7.xyzx, cb0[10].xyzx
mov_sat r8.xyz, r7.xyzx
log r8.xyz, r8.xyzx
mul r8.xyz, r8.xyzx, cb0[19].zzzz
exp r8.xyz, r8.xyzx
mov_sat r1.x, r2.w
log r3.z, r1.x
mul r3.z, r3.z, cb0[18].z
exp r3.z, r3.z
add r1.x, -r1.x, l(1.000000)
log r1.x, r1.x
mul r1.x, r1.x, cb0[18].z
exp r1.x, r1.x
movc r1.x, cb0[18].x, r1.x, r3.z
eq r3.zw, cb0[18].zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
movc r1.x, r3.z, l(1.000000), r1.x
mul r3.z, r7.w, cb0[18].y
mul r1.x, r1.x, r3.z
mul r7.xyz, r1.xxxx, r7.xyzx
mul r8.xyz, r1.xxxx, r8.xyzx
add r1.x, v2.y, v2.x
add r1.x, r1.x, v2.z
add r1.x, r1.x, cb0[16].y
frc r1.x, r1.x
mad r9.y, cb1[69].w, cb0[16].z, r1.x
mov r9.x, cb0[16].x
sample_l_indexable(texture2d)(float,float,float,float) r1.x, r9.xyxx, t25.xyzw, s5, l(0.000000)
log r1.x, |r1.x|
mul r1.x, r1.x, cb0[17].z
exp r1.x, r1.x
add r3.z, -cb0[17].x, cb0[17].y
mad r1.x, r1.x, r3.z, cb0[17].x
mul r9.xyz, r1.xxxx, r7.xyzx
div r9.xyz, r9.xyzx, cb0[18].yyyy
dp3_sat r3.z, r9.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
add r1.y, r1.y, r3.z
mul r9.xy, cb0[24].zwzz, cb0[25].xyxx
mad r0.xy, r0.xyxx, cb0[24].zwzz, r9.xyxx
mad r3.z, cb1[69].w, cb0[23].w, l(1.000000)
mul r3.z, r3.z, cb0[23].z
mul r3.z, r3.z, l(0.01745329)
sincos r9.x, r10.x, r3.z
mov r10.y, r10.x
mov r10.z, r9.x
dp2 r11.x, r10.yzyy, r0.xyxx
mov r10.x, -r9.x
dp2 r11.y, r10.xyxx, r0.xyxx
mul r0.xy, cb0[24].xyxx, cb1[69].wwww
mad r0.xy, r0.xyxx, cb0[24].zwzz, r11.xyxx
mul r3.z, cb0[26].x, cb1[69].w
sincos null, r3.z, r3.z
mad r3.z, r3.z, l(0.500000), l(0.500000)
add r3.z, -r3.z, l(1.000000)
add r5.w, -cb0[25].z, cb0[25].w
mad r3.z, r3.z, r5.w, cb0[25].z
div r0.xy, r0.xyxx, r3.zzzz
add r0.xy, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
mov_sat r9.xy, r0.xyxx
movc r0.xy, cb0[15].zwzz, r9.xyxx, r0.xyxx
mad r0.xy, r0.zwzz, cb0[23].yyyy, r0.xyxx
sample_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t29.xyzw, s1
mul r0.x, r0.x, r1.y
mul r0.y, r2.w, r2.w
mad_sat r0.y, r0.y, v7.x, v7.y
mul r0.x, r0.y, r0.x
ftoi r9.xy, v0.xyxx
mov r9.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.y, r9.xyzw, t0.yxzw
ge r0.z, r0.y, l(0.984375)
mul r0.w, r0.y, l(1.01587307)
mad r0.y, r0.y, l(64.000000), l(-63.000000)
movc r0.y, r0.z, r0.y, r0.w
max r0.y, r0.y, l(0.00000001)
ge r0.z, v0.z, l(0.984375)
mul r0.w, v0.z, l(1.01587307)
mad r1.y, v0.z, l(64.000000), l(-63.000000)
movc r0.z, r0.z, r1.y, r0.w
max r0.z, r0.z, l(0.00000001)
rcp r0.yz, r0.yyzy
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[18].w
movc r0.w, r3.w, l(60000.000000), r0.w
add r0.y, -r0.z, r0.y
mul_sat r0.y, r0.w, r0.y
mul r9.w, r0.y, r0.x
ftou r0.xy, v0.xyxx
ine r0.w, cb1[92].x, l(0)
utof r3.zw, r0.yyyx
dp2 r1.y, r3.wzww, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r1.y, r1.y
mul r1.y, r1.y, l(52.982918)
frc r1.y, r1.y
mad r1.y, r1.y, l(6.28318548), cb1[70].w
sincos r10.x, r11.x, r1.y
dp2 r1.y, r3.zwzz, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r1.y, r1.y
mul r1.y, r1.y, l(52.982918)
frc r1.y, r1.y
mad r1.y, r1.y, l(6.28318548), cb1[70].w
sincos r12.x, r13.x, r1.y
dp3_sat r3.x, r4.xyzx, r6.xyzx
dp3 r1.y, -r6.xyzx, r4.xyzx
add r1.y, r1.y, r1.y
mad r14.xyz, r4.xyzx, -r1.yyyy, -r6.xyzx
mul r1.y, r3.y, l(17.000000)
exp r1.y, r1.y
add r1.y, r1.y, l(2.000000)
div r1.y, l(2.000000), r1.y
sqrt r2.w, r1.y
add r3.z, -r3.y, l(1.000000)
mul r3.w, r3.z, l(5.000000)
mad r5.w, r3.z, l(5.000000), l(-2.500000)
mul_sat r5.w, r5.w, l(0.400000)
mul r5.w, r5.w, l(100.000000)
mad r10.zw, -r3.zzzz, l(0.000000, 0.000000, 10.000000, 5.000000), l(0.000000, 0.000000, 6.857410, 7.085000)
exp r6.w, r10.z
mul r6.w, r3.x, r6.w
mul r6.w, r6.w, l(9.136810)
mul r7.w, r3.z, r3.w
mad r7.w, -r7.w, l(2.015905), r10.w
exp r7.w, r7.w
mul r7.w, r3.x, r7.w
mul r7.w, r7.w, l(9.708090)
max r6.w, r6.w, r7.w
max r6.w, r6.w, l(1.268160)
mul r0.z, r0.z, l(0.00781250)
min r0.z, r0.z, l(15.000000)
ftou r0.z, r0.z
ushr r15.xy, r0.xyxx, l(6, 6, 0, 0)
ishl r15.z, r0.z, l(4)
mov r0.xy, l(0,0,0,0)
mov r16.w, l(0)
mov r17.yz, l(0,0,1.000000,0)
mov r18.xy, l(0,0,0,0)
mov r19.xy, l(0,0,0,0)
mov r20.xy, l(0,0,0,0)
mov r21.x, l(1.000000)
mov r22.xyzw, l(0,0,0,0)
mov r23.yzw, l(0,0,0,0)
mov r7.w, l(0)
mov r8.w, l(0)
loop 
  uge r10.z, r8.w, cb2[0].y
  breakc_nz r10.z
  ushr r0.z, r8.w, l(5)
  iadd r16.xyz, r0.xyzx, r15.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r0.z, r16.xyzw, t7.yzxw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r8.w, l(0), t15.wxyz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r8.w, l(16), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r8.w, l(32), t15.yxwz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r8.w, l(48), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r8.w, l(64), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r8.w, l(80), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r10.zw, r8.w, l(96), t15.xxxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r8.w, l(116), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r8.w, l(132), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r8.w, l(148), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r8.w, l(164), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r8.w, l(180), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r8.w, l(196), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xy, r8.w, l(212), t15.xyxx
  add r12.yzw, -r24.yyzw, v6.xxyz
  dp3 r11.w, r12.yzwy, r12.yzwy
  sqrt r11.w, r11.w
  ge r11.w, cb2[54].y, r11.w
  and r13.y, r30.y, l(0x0000ffff)
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r13.y, l(0), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r38.xyzw, r13.y, l(16), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r39.xyzw, r13.y, l(32), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r40.xyzw, r13.y, l(48), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r41.xyzw, r13.y, l(64), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r42.xyzw, r13.y, l(80), t16.xyzw
  dp3 r13.z, r37.xyzx, r12.yzwy
  add_sat r13.z, r37.w, r13.z
  dp3 r13.w, r38.xyzx, r12.yzwy
  add_sat r13.w, r38.w, r13.w
  mul r13.z, r13.w, r13.z
  dp3 r13.w, r39.xyzx, r12.yzwy
  add_sat r13.w, r39.w, r13.w
  mul r13.z, r13.w, r13.z
  dp3 r13.w, r40.xyzx, r12.yzwy
  add_sat r13.w, r40.w, r13.w
  mul r13.z, r13.w, r13.z
  dp3 r13.w, r41.xyzx, r12.yzwy
  add_sat r13.w, r41.w, r13.w
  mul r13.z, r13.w, r13.z
  dp3 r13.w, r42.xyzx, r12.yzwy
  add_sat r13.w, r42.w, r13.w
  mul r17.x, r13.w, r13.z
  and r13.z, r10.z, l(1)
  movc r13.zw, r13.zzzz, r17.xxxy, r17.zzzx
  mov r16.xy, r30.zwzz
  mov r16.z, r31.z
  dp3 r15.w, r14.xyzx, r16.xyzx
  dp3 r16.x, r12.yzwy, r16.xyzx
  add r16.x, -r31.w, r16.x
  ge r16.y, r16.x, l(0.000000)
  max r16.x, r5.w, |r16.x|
  movc r16.x, r16.y, r16.x, -r16.x
  max r15.w, -r15.w, l(0.00000010)
  div r15.w, r16.x, r15.w
  min r15.w, |r15.w|, l(131072.000000)
  mov r31.z, r32.z
  dp3 r16.x, r14.xyzx, r31.xyzx
  dp3 r16.y, r12.yzwy, r31.xyzx
  add r16.y, -r32.w, r16.y
  ge r16.z, r16.y, l(0.000000)
  max r16.y, r5.w, |r16.y|
  movc r16.y, r16.z, r16.y, -r16.y
  max r16.x, -r16.x, l(0.00000010)
  div r16.x, r16.y, r16.x
  min r15.w, r15.w, |r16.x|
  mov r32.z, r33.z
  dp3 r16.x, r14.xyzx, r32.xyzx
  dp3 r16.y, r12.yzwy, r32.xyzx
  add r16.y, -r33.w, r16.y
  ge r16.z, r16.y, l(0.000000)
  max r16.y, r5.w, |r16.y|
  movc r16.y, r16.z, r16.y, -r16.y
  max r16.x, -r16.x, l(0.00000010)
  div r16.x, r16.y, r16.x
  min r15.w, r15.w, |r16.x|
  mov r33.z, r34.z
  dp3 r16.x, r14.xyzx, r33.xyzx
  dp3 r16.y, r12.yzwy, r33.xyzx
  add r16.y, -r34.w, r16.y
  ge r16.z, r16.y, l(0.000000)
  max r16.y, r5.w, |r16.y|
  movc r16.y, r16.z, r16.y, -r16.y
  max r16.x, -r16.x, l(0.00000010)
  div r16.x, r16.y, r16.x
  min r15.w, r15.w, |r16.x|
  mov r34.z, r35.x
  dp3 r16.x, r14.xyzx, r34.xyzx
  dp3 r16.y, r12.yzwy, r34.xyzx
  add r16.y, -r35.y, r16.y
  ge r16.z, r16.y, l(0.000000)
  max r16.y, r5.w, |r16.y|
  movc r16.y, r16.z, r16.y, -r16.y
  max r16.x, -r16.x, l(0.00000010)
  div r16.x, r16.y, r16.x
  min r15.w, r15.w, |r16.x|
  mov r36.zw, r35.zzzw
  dp3 r16.x, r14.zxyz, r36.xzwx
  dp3 r16.y, r12.wyzw, r36.xzwx
  add r16.y, -r36.y, r16.y
  ge r16.z, r16.y, l(0.000000)
  max r16.y, r5.w, |r16.y|
  movc r16.y, r16.z, r16.y, -r16.y
  max r16.x, -r16.x, l(0.00000010)
  div r16.x, r16.y, r16.x
  min r15.w, r15.w, |r16.x|
  mov r16.x, r27.w
  mov r16.yz, r28.zzwz
  add r16.xyz, r12.yzwy, r16.xyzx
  mad r16.xyz, r14.xyzx, r15.wwww, r16.xyzx
  dp3 r17.x, r16.xyzx, r16.xyzx
  sqrt r17.x, r17.x
  div r15.w, r15.w, r17.x
  add r15.w, r15.w, r15.w
  sqrt r15.w, r15.w
  mad r15.w, r3.z, l(5.000000), r15.w
  add r15.w, r15.w, l(-0.844800)
  mov r24.y, r25.z
  mov r24.z, r26.x
  dp3 r31.x, r16.xyzx, r24.xyzx
  mov r32.xy, r25.xwxx
  mov r32.z, r26.w
  dp3 r31.y, r16.xyzx, r32.xyzx
  mov r26.x, r25.y
  dp3 r31.z, r16.xyzx, r26.xyzx
  ubfe r16.xy, l(6, 9, 0, 0), l(25, 16, 0, 0), r30.yyyy
  utof r31.w, r16.y
  sample_l_indexable(texturecubearray)(float,float,float,float) r25.xyz, r31.xyzw, t8.xyzw, s2, r15.w
  and r30.yzw, r25.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
  ieq r30.yzw, r30.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
  or r15.w, r30.z, r30.y
  or r15.w, r30.w, r15.w
  movc r25.xyz, r15.wwww, l(1.000000,1.000000,0,0), r25.xyzx
  dp3 r33.x, r12.yzwy, r24.xyzx
  dp3 r33.y, r12.yzwy, r32.xyzx
  dp3 r33.z, r12.yzwy, r26.xyzx
  mad_sat r27.xyz, r33.xyzx, r27.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mov r28.z, r29.x
  mad r27.xyz, r27.xyzx, r28.xyzx, r29.yzwy
  dp3 r31.x, r4.xyzx, r24.xyzx
  dp3 r31.y, r4.xyzx, r32.xyzx
  dp3 r31.z, r4.xyzx, r26.xyzx
  lt r24.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r31.xyzx
  movc r18.z, r24.x, l(0), l(0.500000)
  add r26.xyz, r18.xyzx, r27.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r26.xyz, r26.xyzx, t17.xyzw, s4, l(0.000000)
  movc r19.z, r24.y, l(0), l(0.500000)
  add r24.xyw, r19.xyxz, r27.xyxz
  sample_l_indexable(texture3d)(float,float,float,float) r24.xyw, r24.xywx, t18.xywz, s4, l(0.000000)
  movc r20.z, r24.z, l(0), l(0.500000)
  add r27.xyz, r20.xyzx, r27.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r27.xyz, r27.xyzx, t19.xyzw, s4, l(0.000000)
  mul r28.xyz, r31.xyzx, r31.xyzx
  sample_l_indexable(texturecubearray)(float,float,float,float) r29.xyz, r31.xyzw, t8.xyzw, s2, l(6.000000)
  and r30.yzw, r29.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
  ieq r30.yzw, r30.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
  or r15.w, r30.z, r30.y
  or r15.w, r30.w, r15.w
  movc r29.xyz, r15.wwww, l(1.000000,1.000000,0,0), r29.xyzx
  mov r31.xyzw, r22.xyzw
  mov r30.yzw, r23.yyzw
  mov r15.w, r7.w
  mov r16.y, r0.z
  loop 
    breakc_z r16.y
    firstbit_lo r16.z, r16.y
    ishl r16.z, l(1), r16.z
    and r17.x, r16.z, r16.y
    if_nz r17.x
      not r16.z, r16.z
      and r16.y, r16.z, r16.y
      if_nz r11.w
        mov r16.z, r10.z
        mov r32.xy, r13.zwzz
        mov r17.x, l(1)
        loop 
          ige r17.w, r17.x, r16.x
          breakc_nz r17.w
          iadd r17.w, r13.y, r17.x
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r17.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r17.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r17.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r17.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r17.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r38.xyzw, r17.w, l(80), t16.xyzw
          dp3 r17.w, r33.xyzx, r12.yzwy
          add_sat r17.w, r33.w, r17.w
          mul r17.w, r17.w, r32.x
          dp3 r18.z, r34.xyzx, r12.yzwy
          add_sat r18.z, r34.w, r18.z
          mul r17.w, r17.w, r18.z
          dp3 r18.z, r35.xyzx, r12.yzwy
          add_sat r18.z, r35.w, r18.z
          mul r17.w, r17.w, r18.z
          dp3 r18.z, r36.xyzx, r12.yzwy
          add_sat r18.z, r36.w, r18.z
          mul r17.w, r17.w, r18.z
          dp3 r18.z, r37.xyzx, r12.yzwy
          add_sat r18.z, r37.w, r18.z
          mul r17.w, r17.w, r18.z
          dp3 r18.z, r38.xyzx, r12.yzwy
          add_sat r18.z, r38.w, r18.z
          mul r32.x, r17.w, r18.z
          ushr r18.w, r16.z, l(2)
          ubfe r19.z, l(1), l(2), r16.z
          and r19.w, r18.w, l(2)
          max r20.z, r32.x, r32.y
          mad r17.w, -r17.w, r18.z, l(1.000000)
          mul r17.w, r17.w, r32.y
          movc r21.y, r19.w, r17.w, r20.z
          movc r32.xy, r19.zzzz, r32.xyxx, r21.xyxx
          iadd r17.x, r17.x, l(1)
          mov r16.z, r18.w
        endloop 
        mov_sat r32.y, r32.y
        mul r16.z, r10.w, r32.y
        lt r17.x, l(0.000000), r16.z
        if_nz r17.x
          mad r33.z, r32.y, r10.w, r30.w
          mul r16.z, r30.x, r16.z
          mul r21.yzw, r16.zzzz, r28.xxyz
          mul r32.xzw, r21.zzzz, r24.xxyw
          mad r32.xzw, r26.xxyz, r21.yyyy, r32.xxzw
          mad r21.yzw, r27.xxyz, r21.wwww, r32.xxzw
          mul r32.xzw, r29.xxyz, r21.yyzw
          dp3 r17.x, r32.xzwx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r34.xyz, r21.yzwy, r29.xyzx, r31.xyzx
          mul r17.w, r6.w, r17.x
          mul r21.yzw, r16.zzzz, r25.xxyz
          dp3 r16.z, r21.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r16.z, r6.w, r17.x, r16.z
          div r16.z, r17.w, r16.z
          mov r35.x, r31.w
          mov r35.yz, r30.yyzy
          mad r33.xyw, r21.zwzy, r16.zzzz, r35.yzyx
          mov r34.w, r33.w
        else 
          mov r34.xyzw, r31.xyzw
          mov r33.xyz, r30.yzwy
        endif 
        mov r15.w, l(-1)
        mov r31.xyzw, r34.xyzw
        mov r30.yzw, r33.xxyz
        break 
      endif 
    endif 
  endloop 
  if_nz r15.w
    mov r22.xyzw, r31.xyzw
    mov r23.yzw, r30.yyzw
    mov r7.w, l(-1)
    break 
  endif 
  iadd r8.w, r8.w, l(32)
  mov r22.xyzw, r31.xyzw
  mov r23.yzw, r30.yyzw
  mov r7.w, r15.w
endloop 
if_z r7.w
  iadd r0.x, cb2[0].y, -cb2[58].x
  and r0.y, r0.x, l(-32)
  iadd r0.z, -r0.y, r0.x
  and r7.w, cb2[0].y, l(-32)
  iadd r8.w, -r7.w, cb2[0].y
  mov r16.xy, l(0,0,0,0)
  mov r17.w, l(0)
  mov r18.yz, l(0,0,1.000000,0)
  mov r19.xy, l(0,0,0,0)
  mov r20.x, l(1.000000)
  mov r21.xy, l(0,0,0,0)
  mov r24.xy, l(0,0,0,0)
  mov r25.xyzw, r22.xyzw
  mov r26.yzw, r23.yyzw
  mov r10.z, r0.y
  loop 
    uge r10.w, r10.z, cb2[0].y
    breakc_nz r10.w
    ushr r16.z, r10.z, l(5)
    iadd r17.xyz, r15.xyzx, r16.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r10.w, r17.xyzw, t7.yzwx
    ieq r11.w, r0.y, r10.z
    bfi r12.y, r0.z, l(0), l(0), r10.w
    movc r10.w, r11.w, r12.y, r10.w
    ieq r11.w, r7.w, r10.z
    ubfe r12.y, r8.w, l(0), r10.w
    movc r10.w, r11.w, r12.y, r10.w
    iadd r11.w, r10.z, cb2[0].x
    mov r27.xyzw, r25.xyzw
    mov r28.xyz, r26.yzwy
    mov r12.y, r10.w
    loop 
      breakc_z r12.y
      firstbit_lo r12.z, r12.y
      ishl r12.w, l(1), r12.z
      and r13.y, r12.w, r12.y
      if_nz r13.y
        xor r12.y, r12.w, r12.y
        iadd r12.w, r11.w, r12.z
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r29.xyzw, r12.w, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r17.xy, r12.w, l(16), t11.xyxx
        add r13.yzw, r29.xxyz, -v6.xxyz
        mov r17.z, r29.w
        lt r13.yzw, |r13.yyzw|, r17.zzxy
        and r12.w, r13.z, r13.y
        and r12.w, r13.w, r12.w
        if_nz r12.w
          iadd r12.z, r10.z, r12.z
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r12.z, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r13.yz, r12.z, l(96), t15.xxyx
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r12.z, l(116), t15.zwxy
          add r17.xyz, -r29.yzwy, v6.xyzx
          and r12.w, r30.w, l(0x0000ffff)
          ubfe r13.w, l(6), l(25), r30.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r12.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r12.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r12.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r12.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r12.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r12.w, l(80), t16.xyzw
          dp3 r15.w, r31.xyzx, r17.xyzx
          add_sat r15.w, r31.w, r15.w
          dp3 r16.z, r32.xyzx, r17.xyzx
          add_sat r16.z, r32.w, r16.z
          mul r15.w, r15.w, r16.z
          dp3 r16.z, r33.xyzx, r17.xyzx
          add_sat r16.z, r33.w, r16.z
          mul r15.w, r15.w, r16.z
          dp3 r16.z, r34.xyzx, r17.xyzx
          add_sat r16.z, r34.w, r16.z
          mul r15.w, r15.w, r16.z
          dp3 r16.z, r35.xyzx, r17.xyzx
          add_sat r16.z, r35.w, r16.z
          mul r15.w, r15.w, r16.z
          dp3 r16.z, r36.xyzx, r17.xyzx
          add_sat r16.z, r36.w, r16.z
          mul r18.x, r15.w, r16.z
          and r15.w, r13.y, l(1)
          movc r16.zw, r15.wwww, r18.xxxy, r18.zzzx
          mov r15.w, r13.y
          mov r31.xy, r16.zwzz
          mov r18.x, l(1)
          loop 
            ige r18.w, r18.x, r13.w
            breakc_nz r18.w
            iadd r18.w, r12.w, r18.x
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r18.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r18.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r18.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r18.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r18.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r18.w, l(80), t16.xyzw
            dp3 r18.w, r32.xyzx, r17.xyzx
            add_sat r18.w, r32.w, r18.w
            mul r18.w, r18.w, r31.x
            dp3 r19.w, r33.xyzx, r17.xyzx
            add_sat r19.w, r33.w, r19.w
            mul r18.w, r18.w, r19.w
            dp3 r19.w, r34.xyzx, r17.xyzx
            add_sat r19.w, r34.w, r19.w
            mul r18.w, r18.w, r19.w
            dp3 r19.w, r35.xyzx, r17.xyzx
            add_sat r19.w, r35.w, r19.w
            mul r18.w, r18.w, r19.w
            dp3 r19.w, r36.xyzx, r17.xyzx
            add_sat r19.w, r36.w, r19.w
            mul r18.w, r18.w, r19.w
            dp3 r19.w, r37.xyzx, r17.xyzx
            add_sat r19.w, r37.w, r19.w
            mul r31.x, r18.w, r19.w
            ushr r20.z, r15.w, l(2)
            ubfe r20.w, l(1), l(2), r15.w
            and r21.w, r20.z, l(2)
            max r24.w, r31.x, r31.y
            mad r18.w, -r18.w, r19.w, l(1.000000)
            mul r18.w, r18.w, r31.y
            movc r20.y, r21.w, r18.w, r24.w
            movc r31.xy, r20.wwww, r31.xyxx, r20.xyxx
            iadd r18.x, r18.x, l(1)
            mov r15.w, r20.z
          endloop 
          mov_sat r31.y, r31.y
          mul r12.w, r13.z, r31.y
          lt r13.y, l(0.000000), r12.w
          if_nz r13.y
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r12.z, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r12.z, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r12.z, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r12.z, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r12.z, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r12.z, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r12.z, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xyzw, r12.z, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r40.xyzw, r12.z, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r41.xyzw, r12.z, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r42.xy, r12.z, l(212), t15.xyxx
            mad r28.z, r31.y, r13.z, r28.z
            mul r12.z, r30.z, r12.w
            mov r30.z, r37.z
            dp3 r12.w, r14.xyzx, r30.xyzx
            dp3 r13.y, r17.xyzx, r30.xyzx
            add r13.y, -r37.w, r13.y
            ge r13.z, r13.y, l(0.000000)
            max r13.y, r5.w, |r13.y|
            movc r13.y, r13.z, r13.y, -r13.y
            max r12.w, -r12.w, l(0.00000010)
            div r12.w, r13.y, r12.w
            min r12.w, |r12.w|, l(131072.000000)
            mov r37.z, r38.z
            dp3 r13.y, r14.xyzx, r37.xyzx
            dp3 r13.z, r17.xyzx, r37.xyzx
            add r13.z, -r38.w, r13.z
            ge r13.w, r13.z, l(0.000000)
            max r13.z, r5.w, |r13.z|
            movc r13.z, r13.w, r13.z, -r13.z
            max r13.y, -r13.y, l(0.00000010)
            div r13.y, r13.z, r13.y
            min r12.w, r12.w, |r13.y|
            mov r38.z, r39.z
            dp3 r13.y, r14.xyzx, r38.xyzx
            dp3 r13.z, r17.xyzx, r38.xyzx
            add r13.z, -r39.w, r13.z
            ge r13.w, r13.z, l(0.000000)
            max r13.z, r5.w, |r13.z|
            movc r13.z, r13.w, r13.z, -r13.z
            max r13.y, -r13.y, l(0.00000010)
            div r13.y, r13.z, r13.y
            min r12.w, r12.w, |r13.y|
            mov r39.z, r40.z
            dp3 r13.y, r14.xyzx, r39.xyzx
            dp3 r13.z, r17.xyzx, r39.xyzx
            add r13.z, -r40.w, r13.z
            ge r13.w, r13.z, l(0.000000)
            max r13.z, r5.w, |r13.z|
            movc r13.z, r13.w, r13.z, -r13.z
            max r13.y, -r13.y, l(0.00000010)
            div r13.y, r13.z, r13.y
            min r12.w, r12.w, |r13.y|
            mov r40.z, r41.x
            dp3 r13.y, r14.xyzx, r40.xyzx
            dp3 r13.z, r17.xyzx, r40.xyzx
            add r13.z, -r41.y, r13.z
            ge r13.w, r13.z, l(0.000000)
            max r13.z, r5.w, |r13.z|
            movc r13.z, r13.w, r13.z, -r13.z
            max r13.y, -r13.y, l(0.00000010)
            div r13.y, r13.z, r13.y
            min r12.w, r12.w, |r13.y|
            mov r42.zw, r41.zzzw
            dp3 r13.y, r14.zxyz, r42.xzwx
            dp3 r13.z, r17.zxyz, r42.xzwx
            add r13.z, -r42.y, r13.z
            ge r13.w, r13.z, l(0.000000)
            max r13.z, r5.w, |r13.z|
            movc r13.z, r13.w, r13.z, -r13.z
            max r13.y, -r13.y, l(0.00000010)
            div r13.y, r13.z, r13.y
            min r12.w, r12.w, |r13.y|
            mov r30.x, r34.w
            mov r30.yz, r35.zzwz
            add r13.yzw, r17.xxyz, r30.xxyz
            mad r13.yzw, r14.xxyz, r12.wwww, r13.yyzw
            dp3 r15.w, r13.yzwy, r13.yzwy
            sqrt r15.w, r15.w
            div r12.w, r12.w, r15.w
            add r12.w, r12.w, r12.w
            sqrt r12.w, r12.w
            mad r12.w, r3.z, l(5.000000), r12.w
            add r12.w, r12.w, l(-0.844800)
            mov r29.y, r32.z
            mov r29.z, r33.x
            dp3 r37.x, r13.yzwy, r29.xyzx
            mov r30.xy, r32.xwxx
            mov r30.z, r33.w
            dp3 r37.y, r13.yzwy, r30.xyzx
            mov r33.x, r32.y
            dp3 r37.z, r13.yzwy, r33.xyzx
            ubfe r13.y, l(9), l(16), r30.w
            utof r37.w, r13.y
            sample_l_indexable(texturecubearray)(float,float,float,float) r13.yzw, r37.xyzw, t8.wxyz, s2, r12.w
            and r20.yzw, r13.yyzw, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
            ieq r20.yzw, r20.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
            or r12.w, r20.z, r20.y
            or r12.w, r20.w, r12.w
            movc r13.yzw, r12.wwww, l(0,1.000000,1.000000,0), r13.yyzw
            dp3 r32.x, r17.xyzx, r29.xyzx
            dp3 r32.y, r17.xyzx, r30.xyzx
            dp3 r32.z, r17.xyzx, r33.xyzx
            mad_sat r17.xyz, r32.xyzx, r34.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
            mov r35.z, r36.x
            mad r17.xyz, r17.xyzx, r35.xyzx, r36.yzwy
            dp3 r37.x, r4.xyzx, r29.xyzx
            dp3 r37.y, r4.xyzx, r30.xyzx
            dp3 r37.z, r4.xyzx, r33.xyzx
            lt r20.yzw, l(0.000000, 0.000000, 0.000000, 0.000000), r37.xxyz
            movc r19.z, r20.y, l(0), l(0.500000)
            add r29.xyz, r17.xyzx, r19.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r29.xyz, r29.xyzx, t17.xyzw, s4, l(0.000000)
            mul r30.xyz, r37.xyzx, r37.xyzx
            mul r30.xyz, r12.zzzz, r30.xyzx
            movc r21.z, r20.z, l(0), l(0.500000)
            add r31.xzw, r17.xxyz, r21.xxyz
            sample_l_indexable(texture3d)(float,float,float,float) r31.xzw, r31.xzwx, t18.xwyz, s4, l(0.000000)
            mul r31.xzw, r30.yyyy, r31.xxzw
            mad r29.xyz, r29.xyzx, r30.xxxx, r31.xzwx
            movc r24.z, r20.w, l(0), l(0.500000)
            add r17.xyz, r17.xyzx, r24.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r17.xyz, r17.xyzx, t19.xyzw, s4, l(0.000000)
            mad r17.xyz, r17.xyzx, r30.zzzz, r29.xyzx
            sample_l_indexable(texturecubearray)(float,float,float,float) r20.yzw, r37.xyzw, t8.wxyz, s2, l(6.000000)
            and r29.xyz, r20.yzwy, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
            ieq r29.xyz, r29.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
            or r12.w, r29.y, r29.x
            or r12.w, r29.z, r12.w
            movc r20.yzw, r12.wwww, l(0,1.000000,1.000000,0), r20.yyzw
            mul r29.xyz, r17.xyzx, r20.yzwy
            dp3 r12.w, r29.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r27.xyz, r17.xyzx, r20.yzwy, r27.xyzx
            mul r15.w, r6.w, r12.w
            mul r13.yzw, r12.zzzz, r13.yyzw
            dp3 r12.z, r13.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r12.z, r6.w, r12.w, r12.z
            div r12.z, r15.w, r12.z
            mov r17.x, r27.w
            mov r17.yz, r28.xxyx
            mad r28.xyw, r13.zwzy, r12.zzzz, r17.yzyx
            mov r27.w, r28.w
          endif 
        endif 
      endif 
    endloop 
    mov r25.xyzw, r27.xyzw
    mov r26.yzw, r28.xxyz
    iadd r10.z, r10.z, l(32)
  endloop 
  lt r7.w, r26.w, l(1.000000)
  if_nz r7.w
    mov r16.xy, l(0,0,0,0)
    mov r17.w, l(0)
    mov r18.yz, l(0,0,1.000000,0)
    mov r19.xy, l(0,0,0,0)
    mov r20.x, l(1.000000)
    mov r21.xy, l(0,0,0,0)
    mov r24.xy, l(0,0,0,0)
    mov r27.x, r25.w
    mov r27.yzw, r26.yyzw
    mov r12.yzw, r25.xxyz
    mov r7.w, r26.w
    mov r8.w, l(0)
    loop 
      uge r10.z, r8.w, r0.x
      breakc_nz r10.z
      ushr r16.z, r8.w, l(5)
      iadd r17.xyz, r15.xyzx, r16.xyzx
      ld_indexable(texture2darray)(uint,uint,uint,uint) r10.z, r17.xyzw, t7.yzxw
      ieq r10.w, r0.y, r8.w
      ubfe r11.w, r0.z, l(0), r10.z
      movc r10.z, r10.w, r11.w, r10.z
      iadd r10.w, r8.w, cb2[0].x
      mov r28.xyzw, r27.xyzw
      mov r13.yzw, r12.yyzw
      mov r11.w, r7.w
      mov r15.w, r10.z
      loop 
        breakc_z r15.w
        firstbit_lo r16.z, r15.w
        ishl r16.w, l(1), r16.z
        and r17.x, r15.w, r16.w
        if_nz r17.x
          xor r15.w, r15.w, r16.w
          iadd r16.w, r10.w, r16.z
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r29.xyzw, r16.w, l(0), t11.xyzw
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r17.xy, r16.w, l(16), t11.xyxx
          add r29.xyz, r29.xyzx, -v6.xyzx
          mov r17.z, r29.w
          lt r17.xyz, |r29.xyzx|, r17.zxyz
          and r16.w, r17.y, r17.x
          and r16.w, r17.z, r16.w
          if_nz r16.w
            iadd r16.z, r8.w, r16.z
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r16.z, l(0), t15.wxyz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r17.xy, r16.z, l(96), t15.xyxx
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r16.z, l(116), t15.zwxy
            add r31.xyz, -r29.yzwy, v6.xyzx
            and r16.w, r30.w, l(0x0000ffff)
            ubfe r17.z, l(6), l(25), r30.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r16.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r16.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r16.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r16.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r16.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r16.w, l(80), t16.xyzw
            dp3 r18.w, r32.xyzx, r31.xyzx
            add_sat r18.w, r32.w, r18.w
            dp3 r19.w, r33.xyzx, r31.xyzx
            add_sat r19.w, r33.w, r19.w
            mul r18.w, r18.w, r19.w
            dp3 r19.w, r34.xyzx, r31.xyzx
            add_sat r19.w, r34.w, r19.w
            mul r18.w, r18.w, r19.w
            dp3 r19.w, r35.xyzx, r31.xyzx
            add_sat r19.w, r35.w, r19.w
            mul r18.w, r18.w, r19.w
            dp3 r19.w, r36.xyzx, r31.xyzx
            add_sat r19.w, r36.w, r19.w
            mul r18.w, r18.w, r19.w
            dp3 r19.w, r37.xyzx, r31.xyzx
            add_sat r19.w, r37.w, r19.w
            mul r18.x, r18.w, r19.w
            and r18.w, r17.x, l(1)
            movc r18.xw, r18.wwww, r18.xxxy, r18.zzzx
            mov r19.w, r17.x
            mov r32.xy, r18.xwxx
            mov r20.z, l(1)
            loop 
              ige r20.w, r20.z, r17.z
              breakc_nz r20.w
              iadd r20.w, r16.w, r20.z
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r20.w, l(0), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r20.w, l(16), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r20.w, l(32), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r20.w, l(48), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r20.w, l(64), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r38.xyzw, r20.w, l(80), t16.xyzw
              dp3 r20.w, r33.xyzx, r31.xyzx
              add_sat r20.w, r33.w, r20.w
              mul r20.w, r20.w, r32.x
              dp3 r21.w, r34.xyzx, r31.xyzx
              add_sat r21.w, r34.w, r21.w
              mul r20.w, r20.w, r21.w
              dp3 r21.w, r35.xyzx, r31.xyzx
              add_sat r21.w, r35.w, r21.w
              mul r20.w, r20.w, r21.w
              dp3 r21.w, r36.xyzx, r31.xyzx
              add_sat r21.w, r36.w, r21.w
              mul r20.w, r20.w, r21.w
              dp3 r21.w, r37.xyzx, r31.xyzx
              add_sat r21.w, r37.w, r21.w
              mul r20.w, r20.w, r21.w
              dp3 r21.w, r38.xyzx, r31.xyzx
              add_sat r21.w, r38.w, r21.w
              mul r32.x, r20.w, r21.w
              ushr r23.w, r19.w, l(2)
              ubfe r24.w, l(1), l(2), r19.w
              and r29.w, r23.w, l(2)
              max r31.w, r32.x, r32.y
              mad r20.w, -r20.w, r21.w, l(1.000000)
              mul r20.w, r20.w, r32.y
              movc r20.y, r29.w, r20.w, r31.w
              movc r32.xy, r24.wwww, r32.xyxx, r20.xyxx
              iadd r20.z, r20.z, l(1)
              mov r19.w, r23.w
            endloop 
            add_sat r16.w, -r11.w, r32.y
            mul r17.x, r17.y, r16.w
            lt r17.z, l(0.000000), r17.x
            if_nz r17.z
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r16.z, l(16), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r16.z, l(32), t15.yxwz
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r16.z, l(48), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r16.z, l(64), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r16.z, l(80), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r16.z, l(132), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xyzw, r16.z, l(148), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r40.xyzw, r16.z, l(164), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r41.xyzw, r16.z, l(180), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r42.xyzw, r16.z, l(196), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r43.xy, r16.z, l(212), t15.xyxx
              mad r28.w, r16.w, r17.y, r28.w
              mul r16.z, r30.z, r17.x
              mov r30.z, r38.z
              dp3 r16.w, r14.xyzx, r30.xyzx
              dp3 r17.x, r31.xyzx, r30.xyzx
              add r17.x, -r38.w, r17.x
              ge r17.y, r17.x, l(0.000000)
              max r17.x, r5.w, |r17.x|
              movc r17.x, r17.y, r17.x, -r17.x
              max r16.w, -r16.w, l(0.00000010)
              div r16.w, r17.x, r16.w
              min r16.w, |r16.w|, l(131072.000000)
              mov r38.z, r39.z
              dp3 r17.x, r14.xyzx, r38.xyzx
              dp3 r17.y, r31.xyzx, r38.xyzx
              add r17.y, -r39.w, r17.y
              ge r17.z, r17.y, l(0.000000)
              max r17.y, r5.w, |r17.y|
              movc r17.y, r17.z, r17.y, -r17.y
              max r17.x, -r17.x, l(0.00000010)
              div r17.x, r17.y, r17.x
              min r16.w, r16.w, |r17.x|
              mov r39.z, r40.z
              dp3 r17.x, r14.xyzx, r39.xyzx
              dp3 r17.y, r31.xyzx, r39.xyzx
              add r17.y, -r40.w, r17.y
              ge r17.z, r17.y, l(0.000000)
              max r17.y, r5.w, |r17.y|
              movc r17.y, r17.z, r17.y, -r17.y
              max r17.x, -r17.x, l(0.00000010)
              div r17.x, r17.y, r17.x
              min r16.w, r16.w, |r17.x|
              mov r40.z, r41.z
              dp3 r17.x, r14.xyzx, r40.xyzx
              dp3 r17.y, r31.xyzx, r40.xyzx
              add r17.y, -r41.w, r17.y
              ge r17.z, r17.y, l(0.000000)
              max r17.y, r5.w, |r17.y|
              movc r17.y, r17.z, r17.y, -r17.y
              max r17.x, -r17.x, l(0.00000010)
              div r17.x, r17.y, r17.x
              min r16.w, r16.w, |r17.x|
              mov r41.z, r42.x
              dp3 r17.x, r14.xyzx, r41.xyzx
              dp3 r17.y, r31.xyzx, r41.xyzx
              add r17.y, -r42.y, r17.y
              ge r17.z, r17.y, l(0.000000)
              max r17.y, r5.w, |r17.y|
              movc r17.y, r17.z, r17.y, -r17.y
              max r17.x, -r17.x, l(0.00000010)
              div r17.x, r17.y, r17.x
              min r16.w, r16.w, |r17.x|
              mov r43.zw, r42.zzzw
              dp3 r17.x, r14.zxyz, r43.xzwx
              dp3 r17.y, r31.zxyz, r43.xzwx
              add r17.y, -r43.y, r17.y
              ge r17.z, r17.y, l(0.000000)
              max r17.y, r5.w, |r17.y|
              movc r17.y, r17.z, r17.y, -r17.y
              max r17.x, -r17.x, l(0.00000010)
              div r17.x, r17.y, r17.x
              min r16.w, r16.w, |r17.x|
              mov r17.x, r35.w
              mov r17.yz, r36.zzwz
              add r17.xyz, r31.xyzx, r17.xyzx
              mad r17.xyz, r14.xyzx, r16.wwww, r17.xyzx
              dp3 r18.x, r17.xyzx, r17.xyzx
              sqrt r18.x, r18.x
              div r16.w, r16.w, r18.x
              add r16.w, r16.w, r16.w
              sqrt r16.w, r16.w
              mad r16.w, r3.z, l(5.000000), r16.w
              add r16.w, r16.w, l(-0.844800)
              mov r29.y, r33.z
              mov r29.z, r34.x
              dp3 r38.x, r17.xyzx, r29.xyzx
              mov r30.xy, r33.xwxx
              mov r30.z, r34.w
              dp3 r38.y, r17.xyzx, r30.xyzx
              mov r34.x, r33.y
              dp3 r38.z, r17.xyzx, r34.xyzx
              ubfe r17.x, l(9), l(16), r30.w
              utof r38.w, r17.x
              sample_l_indexable(texturecubearray)(float,float,float,float) r17.xyz, r38.xyzw, t8.xyzw, s2, r16.w
              and r20.yzw, r17.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
              ieq r20.yzw, r20.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
              or r16.w, r20.z, r20.y
              or r16.w, r20.w, r16.w
              movc r17.xyz, r16.wwww, l(1.000000,1.000000,0,0), r17.xyzx
              dp3 r33.x, r31.xyzx, r29.xyzx
              dp3 r33.y, r31.xyzx, r30.xyzx
              dp3 r33.z, r31.xyzx, r34.xyzx
              mad_sat r20.yzw, r33.xxyz, r35.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
              mov r36.z, r37.x
              mad r20.yzw, r20.yyzw, r36.xxyz, r37.yyzw
              dp3 r38.x, r4.xyzx, r29.xyzx
              dp3 r38.y, r4.xyzx, r30.xyzx
              dp3 r38.z, r4.xyzx, r34.xyzx
              lt r29.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r38.xyzx
              movc r19.z, r29.x, l(0), l(0.500000)
              add r30.xyz, r19.xyzx, r20.yzwy
              sample_l_indexable(texture3d)(float,float,float,float) r30.xyz, r30.xyzx, t17.xyzw, s4, l(0.000000)
              mul r31.xyz, r38.xyzx, r38.xyzx
              mul r31.xyz, r16.zzzz, r31.xyzx
              movc r21.z, r29.y, l(0), l(0.500000)
              add r29.xyw, r20.yzyw, r21.xyxz
              sample_l_indexable(texture3d)(float,float,float,float) r29.xyw, r29.xywx, t18.xywz, s4, l(0.000000)
              mul r29.xyw, r31.yyyy, r29.xyxw
              mad r29.xyw, r30.xyxz, r31.xxxx, r29.xyxw
              movc r24.z, r29.z, l(0), l(0.500000)
              add r20.yzw, r20.yyzw, r24.xxyz
              sample_l_indexable(texture3d)(float,float,float,float) r20.yzw, r20.yzwy, t19.wxyz, s4, l(0.000000)
              mad r20.yzw, r20.yyzw, r31.zzzz, r29.xxyw
              sample_l_indexable(texturecubearray)(float,float,float,float) r29.xyz, r38.xyzw, t8.xyzw, s2, l(6.000000)
              and r30.xyz, r29.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
              ieq r30.xyz, r30.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
              or r16.w, r30.y, r30.x
              or r16.w, r30.z, r16.w
              movc r29.xyz, r16.wwww, l(1.000000,1.000000,0,0), r29.xyzx
              mul r30.xyz, r20.yzwy, r29.xyzx
              dp3 r16.w, r30.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
              mad r13.yzw, r20.yyzw, r29.xxyz, r13.yyzw
              mul r18.x, r6.w, r16.w
              mul r17.xyz, r16.zzzz, r17.xyzx
              dp3 r16.z, r17.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
              mad r16.z, r6.w, r16.w, r16.z
              div r16.z, r18.x, r16.z
              mad r28.xyz, r17.xyzx, r16.zzzz, r28.xyzx
            endif 
          endif 
        endif 
      endloop 
      mov r27.xyzw, r28.xyzw
      mov r12.yzw, r13.yyzw
      iadd r8.w, r8.w, l(32)
    endloop 
    mov r26.xyzw, r27.zxyw
    mov r25.xyz, r12.yzwy
    mov r26.xyzw, r26.yzxw
  else 
    mov r26.x, r25.w
  endif 
  max r0.x, r26.w, l(1.000000)
  rcp r0.x, r0.x
  mov_sat r26.w, r26.w
  mul r22.xyz, r0.xxxx, r25.xyzx
  mul r23.xyz, r0.xxxx, r26.xyzx
  lt r0.y, r26.w, l(0.990000)
  if_nz r0.y
    add r0.y, -r26.w, l(1.000000)
    mul r0.z, r0.y, cb2[19].x
    add r12.yzw, v6.xxyz, -cb2[35].xxyz
    mul r16.x, r12.y, cb2[35].w
    mul r16.yz, r12.zzwz, cb2[36].xxyx
    add_sat r12.yzw, r16.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
    mul r16.xy, r12.yzyy, cb2[36].zwzz
    mul r16.z, r12.w, cb2[37].x
    add r12.yzw, r16.xxyz, cb2[37].yyzw
    lt r13.yzw, l(0.000000, 0.000000, 0.000000, 0.000000), r4.xxyz
    movc r16.xyz, r13.yzwy, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
    mov r16.w, l(0)
    add r13.yzw, r12.yyzw, r16.wwwx
    sample_l_indexable(texture3d)(float,float,float,float) r13.yzw, r13.yzwy, t17.wxyz, s4, l(0.000000)
    mul r17.xyz, r4.xyzx, r4.xyzx
    mul r17.xyz, r0.zzzz, r17.xyzx
    add r18.xyz, r12.yzwy, r16.wwyw
    sample_l_indexable(texture3d)(float,float,float,float) r18.xyz, r18.xyzx, t18.xyzw, s4, l(0.000000)
    mul r18.xyz, r17.yyyy, r18.xyzx
    mad r13.yzw, r13.yyzw, r17.xxxx, r18.xxyz
    add r12.yzw, r12.yyzw, r16.wwwz
    sample_l_indexable(texture3d)(float,float,float,float) r12.yzw, r12.yzwy, t19.wxyz, s4, l(0.000000)
    mad r12.yzw, r12.yyzw, r17.zzzz, r13.yyzw
    mov r4.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r13.yzw, r4.xyzw, t8.wxyz, s2, l(6.000000)
    mul r12.yzw, r12.yyzw, r13.yyzw
    dp3 r0.z, r12.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
    mad r22.xyz, r25.xyzx, r0.xxxx, r12.yzwy
    mov r14.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r12.yzw, r14.xyzw, t8.wxyz, s2, r3.w
    mad r0.x, cb2[19].x, r0.y, -r0.z
    mad r0.x, r3.y, r0.x, r0.z
    mad r23.xyz, r12.yzwy, r0.xxxx, r23.xyzx
  endif 
else 
  mov r23.x, r22.w
endif 
add r0.x, r1.z, r3.x
log r0.x, |r0.x|
mul r0.x, r0.x, r2.w
exp r0.x, r0.x
add r0.x, r1.z, r0.x
add_sat r0.x, r0.x, l(-1.000000)
mul r16.xyz, r1.zzzz, r22.xyzx
mad r0.yz, r3.xxyx, l(0.000000, 0.984375, 0.984375, 0.000000), l(0.000000, 0.00781250, 0.00781250, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r0.yz, r0.yzyy, t5.zxyw, s2, l(0.000000)
mul r3.yzw, r0.xxxx, r23.xxyz
mul r17.xyz, r0.yyyy, r3.zwyz
mul r0.xyz, r0.zzzz, r3.yzwy
sqrt r1.z, r2.w
mad r1.z, r1.z, l(0.500000), l(0.500000)
mul r1.z, r1.z, r1.z
mul r3.y, r1.z, l(0.500000)
mad r1.z, -r1.z, l(0.500000), l(1.000000)
mad r3.z, r3.x, r1.z, r3.y
mul r1.z, r1.z, r3.z
mul r3.y, r3.z, r3.y
if_z cb0[26].y
  dp3 r3.z, r4.xyzx, cb2[17].xyzx
  ge r3.z, l(0.000000), |r3.z|
  if_nz r3.z
    mov r3.w, l(0)
  endif 
  if_z r3.z
    mul r12.yzw, v6.yyyy, cb2[29].xxyz
    mad r12.yzw, v6.xxxx, cb2[28].xxyz, r12.yyzw
    mad r12.yzw, v6.zzzz, cb2[30].xxyz, r12.yyzw
    add r12.yzw, r12.yyzw, cb2[31].xxyz
    add r3.z, r12.w, -cb2[17].w
    mad r3.z, -r3.z, l(0.00006104), l(1.000000)
    mov_sat r4.w, r3.z
    eq r4.w, r3.z, r4.w
    if_nz r4.w
      mov r4.w, l(0)
      mov r5.w, l(0)
      loop 
        ge r6.w, r4.w, l(3.000000)
        breakc_nz r6.w
        ftou r6.w, r4.w
        add r10.zw, r12.yyyz, -cb2[r6.w + 20].xxxy
        max r7.w, |r10.w|, |r10.z|
        mul r5.w, r7.w, cb2[r6.w + 20].z
        lt r6.w, r5.w, l(1.000000)
        if_nz r6.w
          break 
        endif 
        add r4.w, r4.w, l(1.000000)
        mov r5.w, l(0)
      endloop 
    else 
      mov r4.w, l(3.000000)
      mov r5.w, l(0)
    endif 
    ge r6.w, r4.w, l(3.000000)
    if_nz r6.w
      mul r13.yzw, l(0.000000, 128.000000, 0.500000, 0.500000), cb2[27].zzxy
      rcp r18.xz, r13.yyyy
      mov r18.y, -r18.z
      mad r13.yzw, r12.yyzy, r18.xxyz, r13.zzwz
      add r18.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
      max r13.yzw, r13.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
      min r13.yzw, r18.xxyz, r13.yyzw
      mul r10.zw, r13.wwwz, cb2[32].xxxx
      round_ni r10.zw, r10.zzzw
      mul r7.w, r10.w, cb2[27].x
      mad r7.w, r7.w, cb2[32].x, r10.z
      ftou r7.w, r7.w
      iadd r7.w, r7.w, cb2[32].y
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r8.w, r7.w, l(0), t23.xxxx
      and r10.z, r8.w, l(0x40000000)
      ishl r10.w, r8.w, l(2)
      if_z r10.z
        and r10.z, r8.w, l(0x01ffffff)
        iadd r18.x, r7.w, r10.z
        ushr r7.w, r8.w, l(25)
        utof r7.w, r7.w
        mul r13.yzw, r7.wwww, r13.yyzw
        frc r13.yzw, r13.yyzw
        mul r13.yzw, r13.yyzw, l(0.000000, 128.000000, 128.000000, 128.000000)
        ftou r13.yzw, r13.yyzw
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.x, l(0), t23.xxxx
        ushr r19.xy, r13.wzww, l(6, 6, 0, 0)
        and r7.w, r18.z, l(0xc0000000)
        iadd r8.w, r18.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r8.w, r8.w, l(0), t23.xxxx
        movc r8.w, r19.y, r18.z, r8.w
        ushr r10.z, r8.w, l(13)
        movc r8.w, r19.x, r10.z, r8.w
        and r8.w, r8.w, l(8191)
        iadd r19.x, r8.w, r18.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.z, r19.x, l(0), t23.xxxx
        mov r18.y, l(0)
        mov r19.y, l(1)
        movc r19.xyz, r7.wwww, r18.xyzx, r19.xyzx
        movc r20.yz, r7.wwww, l(0,6,1,0), l(0,5,2,0)
        ushr r21.xy, r13.wzww, r20.yyyy
        and r21.xy, r21.xyxx, l(1, 1, 0, 0)
        and r8.w, r19.z, l(0xc0000000)
        iadd r10.z, r19.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r10.z, r10.z, l(0), t23.xxxx
        movc r10.z, r21.y, r19.z, r10.z
        ushr r11.w, r10.z, l(13)
        movc r10.z, r21.x, r11.w, r10.z
        and r10.z, r10.z, l(8191)
        iadd r20.x, r10.z, r19.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.w, r20.x, l(0), t23.xxxx
        movc r19.xyz, r8.wwww, r19.xyzx, r20.xzwx
        movc r18.xyz, r7.wwww, r18.xyzx, r19.xyzx
        and r7.w, r18.z, l(0xc0000000)
        if_z r7.w
          iadd r7.w, -r18.y, l(6)
          ushr r19.xy, r13.wzww, r7.wwww
          or r7.w, r18.z, l(0x40000000)
          bfi r8.w, l(1), l(1), r19.y, l(0)
          bfi r8.w, l(1), l(0), r19.x, r8.w
          imul null, r8.w, r8.w, l(10)
          ushr r7.w, r7.w, r8.w
          and r7.w, r7.w, l(1023)
          iadd r19.x, r7.w, r18.x
          ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.w, r19.x, l(0), t23.xxxx
          iadd r19.yz, r18.yyyy, l(0, 1, 2, 0)
          iadd r7.w, -r19.y, l(6)
          ushr r18.yw, r13.wwwz, r7.wwww
          and r7.w, r19.w, l(0xc0000000)
          or r8.w, r19.w, l(0x40000000)
          bfi r10.z, l(1), l(1), r18.w, l(0)
          bfi r10.z, l(1), l(0), r18.y, r10.z
          imul null, r10.z, r10.z, l(10)
          ushr r8.w, r8.w, r10.z
          and r8.w, r8.w, l(1023)
          iadd r20.x, r8.w, r19.x
          ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.z, r20.x, l(0), t23.xxxx
          mov r20.y, r19.z
          movc r20.xyz, r7.wwww, r19.xywx, r20.xyzx
          iadd r8.w, -r20.y, l(6)
          ushr r18.yw, r13.wwwz, r8.wwww
          and r8.w, r20.z, l(0xc0000000)
          or r10.z, r20.z, l(0x40000000)
          bfi r11.w, l(1), l(1), r18.w, l(0)
          bfi r11.w, l(1), l(0), r18.y, r11.w
          imul null, r11.w, r11.w, l(10)
          ushr r10.z, r10.z, r11.w
          and r10.z, r10.z, l(1023)
          iadd r21.x, r10.z, r20.x
          ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r21.y, r21.x, l(0), t23.xxxx
          movc r18.yw, r8.wwww, r20.xxxz, r21.xxxy
          movc r18.xz, r7.wwww, r19.xxwx, r18.yywy
        endif 
        and r7.w, r18.z, l(0xc0000000)
        if_z r7.w
          ubfe r8.w, l(14), l(15), r18.z
          utof r8.w, r8.w
          mul r8.w, r8.w, cb2[27].w
          mul r8.w, r8.w, l(0.00006104)
          and r18.yw, r18.zzzz, l(0, 0x00007fff, 0, 0x20000000)
          utof r10.z, r18.y
          mul r10.z, r10.z, cb2[27].w
          mul r10.z, r10.z, l(0.00003052)
          and r11.w, r13.z, l(3)
          iadd r11.w, r11.w, r18.x
          iadd r11.w, r11.w, l(1)
          ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r11.w, r11.w, l(0), t23.xxxx
          bfi r19.xyz, l(2, 2, 1, 0), l(3, 1, 4, 0), r13.yzwy, l(0, 0, 0, 0)
          ushr r11.w, r11.w, r19.x
          and r11.w, r11.w, l(255)
          utof r11.w, r11.w
          mul r11.w, r10.z, r11.w
          mad r11.w, r11.w, l(0.00392157), r8.w
          iadd r13.y, r19.y, l(1)
          ubfe r13.z, l(1), l(1), r13.w
          iadd r13.y, r13.z, r13.y
          iadd r13.y, r13.y, r18.x
          ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r13.y, r13.y, l(0), t23.xxxx
          ushr r13.y, r13.y, r19.z
          and r13.y, r13.y, l(0x0000ffff)
          utof r13.y, r13.y
          mul r10.z, r10.z, r13.y
          mad r8.w, r10.z, l(0.00001526), r8.w
          movc r10.w, r18.w, r11.w, r8.w
        else 
          and r8.w, r18.z, l(0x80000000)
          iadd r10.z, r18.x, l(1)
          ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r10.z, r10.z, l(0), t23.xxxx
          movc r8.w, r8.w, r10.z, l(0)
          ishl r10.z, r18.z, l(2)
          ushr r11.w, r8.w, l(16)
          f16tof32 r11.w, r11.w
          and r8.w, r8.w, l(0x0000ffff)
          f16tof32 r8.w, r8.w
          mad r10.z, r12.y, r11.w, r10.z
          mad r8.w, r12.z, r8.w, r10.z
          movc r10.w, r7.w, r8.w, r10.w
        endif 
      endif 
      mad r7.w, -cb2[27].z, l(2.000000), r12.w
      lt r7.w, r10.w, r7.w
      movc r3.w, r7.w, l(0), l(1.000000)
    endif 
    if_z r6.w
      if_z cb2[58].y
        ftou r6.w, r4.w
        add r10.zw, r12.yyyz, -cb2[r6.w + 20].xxxy
        mul r10.zw, r10.zzzw, cb2[r6.w + 20].zzzz
        mad r18.xy, r10.zwzz, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
        itof r6.w, cb2[26].y
        add r18.z, r4.w, r6.w
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r6.w, r18.xyzx, t13.xxxx, s13, r3.z
        sample_l_indexable(texture2darray)(float,float,float,float) r7.w, r18.xyzx, t31.yzwx, s0, l(0.000000)
        add r6.w, r6.w, r7.w
        add_sat r6.w, r6.w, l(-1.000000)
        mul r7.w, r6.w, r6.w
        mul r3.w, r6.w, r7.w
      endif 
      if_nz cb2[58].y
        mov r18.x, -r10.x
        ftou r6.w, r4.w
        add r4.w, r4.w, l(1.000000)
        min r4.w, r4.w, l(2.000000)
        ftou r4.w, r4.w
        add r5.w, -r5.w, l(1.000000)
        mul r5.w, r5.w, l(28.000000)
        ftou r5.w, r5.w
        add r10.zw, r12.yyyz, -cb2[r6.w + 20].xxxy
        mul r10.zw, r10.zzzw, cb2[r6.w + 20].zzzz
        mad r10.zw, r10.zzzw, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
        add r12.yz, r12.yyzy, -cb2[r4.w + 20].xxyx
        mul r12.yz, r12.yyzy, cb2[r4.w + 20].zzzz
        mad r12.yz, r12.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
        mov r18.y, r11.x
        mov r18.z, r10.x
        mov r7.w, l(0)
        mov r8.w, l(0)
        loop 
          uge r11.w, r8.w, l(8)
          breakc_nz r11.w
          ult r11.w, r5.w, r8.w
          movc r13.yz, r11.wwww, r12.yyzy, r10.zzwz
          movc r12.w, r11.w, cb2[r4.w + 20].w, cb2[r6.w + 20].w
          movc r11.w, r11.w, r4.w, r6.w
          dp2 r19.x, icb[r8.w + 0].yxyy, r18.xyxx
          dp2 r19.y, icb[r8.w + 0].yxyy, r18.yzyy
          mad r19.xy, r19.xyxx, r12.wwww, r13.yzyy
          iadd r11.w, r11.w, cb2[26].y
          utof r19.z, r11.w
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r11.w, r19.xyzx, t13.xxxx, s13, r3.z
          sample_l_indexable(texture2darray)(float,float,float,float) r12.w, r19.xyzx, t31.yzwx, s0, l(0.000000)
          add r11.w, r11.w, r12.w
          add_sat r11.w, r11.w, l(-1.000000)
          mad r7.w, r11.w, l(0.125000), r7.w
          iadd r8.w, r8.w, l(1)
        endloop 
        mul r3.z, r7.w, r7.w
        mul r3.w, r7.w, r3.z
      endif 
    endif 
  endif 
else 
  mov r3.w, l(1.000000)
endif 
dp3 r3.z, r4.xyzx, cb2[17].xyzx
lt r4.w, l(0.000000), |r3.z|
if_nz r4.w
  lt r4.w, l(0.000000), r3.w
  if_nz r4.w
    mul r4.w, r1.y, cb2[18].w
    mul r4.w, r4.w, l(0.250000)
    if_nz cb2[23].x
      add r18.xyz, v6.xyzx, cb1[24].xyzx
      mov r18.w, l(1.000000)
      dp4 r5.w, cb2[24].xyzw, r18.xyzw
      dp4 r6.w, cb2[25].xyzw, r18.xyzw
      frc r18.x, r5.w
      frc r18.y, r6.w
      iadd r5.w, l(-1), cb2[23].x
      utof r18.z, r5.w
      sample_l_indexable(texture2darray)(float,float,float,float) r12.yzw, r18.xyzx, t20.wxyz, s2, l(0.000000)
      add r12.yzw, r12.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
      mad r12.yzw, cb2[23].yyyy, r12.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
      mul r12.yzw, r12.yyzw, cb2[18].xxyz
    else 
      mov r12.yzw, cb2[18].xxyz
    endif 
    if_z cb0[26].y
      ushr r5.w, cb2[53].x, l(16)
      ult r6.w, l(0), r5.w
      and r6.w, r0.w, r6.w
      if_nz r6.w
        iadd r5.w, r5.w, cb2[0].x
        iadd r5.w, r5.w, l(-1)
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r6.w, r5.w, l(52), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r5.w, l(68), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.xyzw, r5.w, l(84), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r20.xyzw, r5.w, l(132), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r21.xyzw, r5.w, l(148), t12.xyzw
        mad r7.w, |r3.z|, l(-0.200000), l(0.400000)
        lt r8.w, r3.z, l(0.000000)
        movc r7.w, r8.w, -r7.w, r7.w
        mad r22.xyz, r4.xyzx, r7.wwww, v6.xyzx
        mov r22.w, l(1.000000)
        dp4 r18.x, r18.xyzw, r22.xyzw
        dp4 r18.y, r19.xyzw, r22.xyzw
        mad r10.zw, r18.xxxy, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
        add r10.zw, r21.zzzw, r10.zzzw
        mul r10.zw, r21.xxxy, r10.zzzw
        div r13.yz, r6.wwww, r20.xxzx
        add r18.xy, -r13.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
        ge r18.xy, r10.zwzz, r18.xyxx
        ge r13.yz, r13.yyzy, r10.zzwz
        or r13.yz, r13.yyzy, r18.xxyx
        or r7.w, r13.z, r13.y
        if_z r7.w
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r7.w, r5.w, l(28), t12.xxxx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r5.w, l(100), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.yz, r5.w, l(164), t12.xxyx
          dp4 r5.w, r18.xyzw, r22.xyzw
          mov_sat r10.zw, r10.zzzw
          mad r18.xy, r10.zwzz, r20.xzxx, r20.ywyy
          add r5.w, r13.y, r5.w
          div r5.w, r5.w, r13.z
          max r5.w, r5.w, l(0.00006104)
          and r7.w, r7.w, l(0x0000ffff)
          if_nz cb2[58].y
            mov r19.x, -r10.x
            utof r20.z, r7.w
            mov r19.y, r11.x
            mov r19.z, r10.x
            mov r8.w, l(0)
            mov r10.z, l(0)
            loop 
              ige r10.w, r10.z, l(8)
              breakc_nz r10.w
              dp2 r21.x, icb[r10.z + 0].yxyy, r19.xyxx
              dp2 r21.y, icb[r10.z + 0].yxyy, r19.yzyy
              mad r20.xy, r21.xyxx, r6.wwww, r18.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.w, r20.xyzx, t9.xxxx, s13, r5.w
              mad r8.w, r10.w, l(0.125000), r8.w
              iadd r10.z, r10.z, l(1)
            endloop 
          else 
            utof r18.z, r7.w
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r8.w, r18.xyzx, t9.xxxx, s13, r5.w
          endif 
          mul r5.w, r8.w, r8.w
          mul r5.w, r8.w, r5.w
        else 
          mov r5.w, l(1.000000)
        endif 
        mul r3.w, r3.w, r5.w
      else 
        and r5.w, cb2[53].x, l(0x0000ffff)
        ult r6.w, l(0), r5.w
        not r7.w, r0.w
        and r6.w, r6.w, r7.w
        if_nz r6.w
          iadd r5.w, r5.w, cb2[0].x
          iadd r5.w, r5.w, l(-1)
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r6.w, r5.w, l(52), t12.xxxx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r5.w, l(68), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.xyzw, r5.w, l(84), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r20.xyzw, r5.w, l(132), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r21.xyzw, r5.w, l(148), t12.xyzw
          mad r7.w, |r3.z|, l(-0.200000), l(0.400000)
          lt r8.w, r3.z, l(0.000000)
          movc r7.w, r8.w, -r7.w, r7.w
          mad r22.xyz, r4.xyzx, r7.wwww, v6.xyzx
          mov r22.w, l(1.000000)
          dp4 r18.x, r18.xyzw, r22.xyzw
          dp4 r18.y, r19.xyzw, r22.xyzw
          mad r10.zw, r18.xxxy, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
          add r10.zw, r21.zzzw, r10.zzzw
          mul r10.zw, r21.xxxy, r10.zzzw
          div r13.yz, r6.wwww, r20.xxzx
          add r18.xy, -r13.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
          ge r18.xy, r10.zwzz, r18.xyxx
          ge r13.yz, r13.yyzy, r10.zzwz
          or r13.yz, r13.yyzy, r18.xxyx
          or r7.w, r13.z, r13.y
          if_z r7.w
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r7.w, r5.w, l(28), t12.xxxx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r5.w, l(100), t12.xyzw
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.yz, r5.w, l(164), t12.xxyx
            dp4 r5.w, r18.xyzw, r22.xyzw
            mov_sat r10.zw, r10.zzzw
            mad r18.xy, r10.zwzz, r20.xzxx, r20.ywyy
            add r5.w, r13.y, r5.w
            div r5.w, r5.w, r13.z
            max r5.w, r5.w, l(0.00006104)
            and r7.w, r7.w, l(0x0000ffff)
            if_nz cb2[58].y
              mov r19.x, -r10.x
              utof r20.z, r7.w
              mov r19.y, r11.x
              mov r19.z, r10.x
              mov r8.w, l(0)
              mov r10.z, l(0)
              loop 
                ige r10.w, r10.z, l(8)
                breakc_nz r10.w
                dp2 r21.x, icb[r10.z + 0].yxyy, r19.xyxx
                dp2 r21.y, icb[r10.z + 0].yxyy, r19.yzyy
                mad r20.xy, r21.xyxx, r6.wwww, r18.xyxx
                sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.w, r20.xyzx, t9.xxxx, s13, r5.w
                mad r8.w, r10.w, l(0.125000), r8.w
                iadd r10.z, r10.z, l(1)
              endloop 
            else 
              utof r18.z, r7.w
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r8.w, r18.xyzx, t9.xxxx, s13, r5.w
            endif 
            mul r5.w, r8.w, r8.w
            mul r5.w, r8.w, r5.w
          else 
            mov r5.w, l(1.000000)
          endif 
          mul r3.w, r3.w, r5.w
        endif 
      endif 
    endif 
    mad r5.w, -r3.x, l(0.500000), l(1.000000)
    mad r5.w, -|r3.z|, r5.w, l(1.000000)
    mul r5.w, r5.w, r5.w
    mad r5.w, -r5.w, l(0.620000), l(0.620000)
    add r5.w, -|r3.z|, r5.w
    mad r5.w, r2.w, r5.w, |r3.z|
    mul r5.w, r3.w, r5.w
    lt r6.w, l(0.000000), r3.z
    mad r18.xyz, r5.wwww, r12.yzwy, r16.xyzx
    mov_sat r3.z, r3.z
    mad r13.yzw, -v6.xxyz, r1.wwww, cb2[17].xxyz
    dp3 r1.w, r13.yzwy, r13.yzwy
    rsq r1.w, r1.w
    mul r13.yzw, r1.wwww, r13.yyzw
    dp3 r1.w, r13.yzwy, r6.xyzx
    dp3 r5.w, r4.xyzx, r13.yzwy
    mad r7.w, |r5.w|, r1.y, -|r5.w|
    mad r5.w, |r5.w|, r7.w, l(1.000000)
    mad r7.w, r3.z, r1.z, r3.y
    mul r5.w, r5.w, r5.w
    mul r5.w, r7.w, r5.w
    rcp r5.w, r5.w
    mul r3.z, r4.w, r3.z
    mul r3.z, r3.z, r5.w
    mul r3.z, r3.w, r3.z
    mad r13.yzw, r3.zzzz, r12.yyzw, r0.xxyz
    add_sat r1.w, -r1.w, l(1.000000)
    mul r3.w, r1.w, r1.w
    mul r3.w, r3.w, r3.w
    mul r1.w, r1.w, r3.w
    mul r1.w, r1.w, r3.z
    mad r19.xyz, r1.wwww, r12.zwyz, r17.xyzx
    mov r18.w, r19.z
    mov r16.w, r17.z
    movc r16.xyzw, r6.wwww, r18.xyzw, r16.xyzw
    mov r19.zw, r13.yyyz
    mov r17.zw, r0.xxxy
    movc r18.xyzw, r6.wwww, r19.xyzw, r17.xyzw
    movc r0.z, r6.w, r13.w, r0.z
    mov r17.z, r16.w
    mov r17.xy, r18.xyxx
    mov r0.xy, r18.zwzz
  endif 
endif 
mov r18.x, -r10.x
not r1.w, r0.w
mad r3.x, -r3.x, l(0.500000), l(1.000000)
mov r19.xy, l(0,0,0,0)
mov r20.w, l(0)
mov r21.xyz, v6.xyzx
mov r21.w, l(1.000000)
mov r22.w, l(1.000000)
mov r18.z, r10.x
mov r23.w, l(1.000000)
mov r24.z, l(1.000000)
mov r25.w, l(1.000000)
mov r18.yw, r11.xxxx
mov r10.y, r18.w
mov r26.w, l(1.000000)
mov r11.y, r18.x
mov r11.z, r10.x
mov r27.w, l(1.000000)
mov r28.x, r11.x
mov r28.y, r18.x
mov r28.z, r10.x
mov r29.x, r11.x
mov r29.y, r18.x
mov r29.z, r10.x
mov r30.x, r11.x
mov r30.y, r18.x
mov r30.z, r10.x
mov r12.yzw, r16.xxyz
mov r31.xyz, r17.zxyz
mov r32.xyz, r0.xyzx
mov r3.z, cb2[58].y
mov r3.w, l(0)
loop 
  uge r4.w, r3.w, cb2[0].x
  breakc_nz r4.w
  ushr r19.z, r3.w, l(5)
  iadd r20.xyz, r15.xyzx, r19.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r4.w, r20.xyzw, t6.yzwx
  mov r13.yzw, r12.yyzw
  mov r20.xyz, r31.xyzx
  mov r33.xyz, r32.xyzx
  mov r5.w, r3.z
  mov r6.w, r4.w
  loop 
    breakc_z r6.w
    firstbit_lo r7.w, r6.w
    ishl r8.w, l(1), r7.w
    and r10.z, r6.w, r8.w
    if_nz r10.z
      xor r6.w, r6.w, r8.w
      iadd r7.w, r3.w, r7.w
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r34.xyzw, r7.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r35.xy, r7.w, l(16), t11.xyxx
      add r34.xyz, r34.xyzx, -v6.xyzx
      mov r35.z, r34.w
      lt r34.xyz, |r34.xyzx|, r35.zxyz
      and r8.w, r34.y, r34.x
      and r8.w, r34.z, r8.w
      if_nz r8.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r7.w, l(0), t12.wxyz
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r7.w, l(16), t12.zxyw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r7.w, l(32), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r7.w, l(48), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r7.w, l(64), t12.yzwx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r7.w, l(80), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r7.w, l(96), t12.yzwx
        ubfe r8.w, l(3), l(24), r35.w
        switch r8.w
          case l(4)
          lt r8.w, l(0.000000), r40.x
          mov r41.xy, r39.zwzz
          mov r41.z, r40.w
          mad r42.xyz, -r41.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r34.yzwy
          add r43.xyz, r42.xyzx, -v6.xyzx
          dp3 r10.z, r41.xyzx, r43.xyzx
          div_sat r10.w, -r10.z, r40.x
          mad r44.xyz, r10.wwww, r41.xyzx, r42.xyzx
          movc r44.xyz, r8.wwww, r44.xyzx, r34.yzwy
          add r44.xyz, r44.xyzx, -v6.xyzx
          dp3 r11.w, r44.xyzx, r44.xyzx
          rsq r14.w, r11.w
          mul r44.xyz, r14.wwww, r44.xyzx
          dp3 r14.w, r4.xyzx, r44.xyzx
          lt r15.w, l(0.000000), |r14.w|
          if_nz r15.w
            sqrt r15.w, r11.w
            mul r16.w, r37.x, r37.x
            div r11.w, r16.w, r11.w
            min r11.w, r11.w, l(1.000000)
            mad_sat r19.zw, r15.wwww, r36.xxxz, r36.yyyw
            mul r44.xy, r19.zwzz, r19.zwzz
            mad r19.zw, r19.zzzw, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
            mul r19.zw, r19.zzzw, r44.xxxy
            mul r11.w, r11.w, r19.z
            mul r11.w, r19.w, r11.w
            lt r15.w, l(0.000000), r11.w
            if_nz r15.w
              ubfe r15.w, l(3), l(27), r35.w
              ine r15.w, r15.w, l(1)
              if_nz r15.w
                mad r15.w, |r14.w|, l(-0.200000), l(0.400000)
                lt r16.w, r14.w, l(0.000000)
                movc r15.w, r16.w, -r15.w, r15.w
                mad r44.xyz, r4.xyzx, r15.wwww, v6.xyzx
                add r44.xyz, -r38.xyzx, r44.xyzx
                max r15.w, |r44.z|, |r44.y|
                max r15.w, r15.w, |r44.x|
                div r15.w, r39.x, r15.w
                add r15.w, r39.y, r15.w
                dp3 r16.w, r44.xyzx, r44.xyzx
                rsq r16.w, r16.w
                max r15.w, r15.w, l(0.00006104)
                and r17.w, r35.w, l(0x0000ffff)
                utof r45.w, r17.w
                mov r17.w, l(0)
                mov r19.z, l(0)
                loop 
                  ige r19.w, r19.z, l(8)
                  breakc_nz r19.w
                  dp2 r46.y, icb[r19.z + 0].yxyy, r18.xyxx
                  dp2 r46.z, icb[r19.z + 0].yxyy, r18.yzyy
                  mul r46.yz, r37.yyyy, r46.yyzy
                  mul r46.x, r13.x, r46.y
                  mul r46.w, r12.x, r46.y
                  mad r45.xyz, r44.xyzx, r16.wwww, r46.xzwx
                  sample_c_lz_indexable(texturecubearray)(float,float,float,float) r19.w, r45.xyzw, t10.xxxx, s13, r15.w
                  mad r17.w, r19.w, l(0.125000), r17.w
                  iadd r19.z, r19.z, l(1)
                endloop 
              else 
                mov r17.w, l(1.000000)
              endif 
              mul r11.w, r11.w, r17.w
              lt r15.w, l(0.000000), r11.w
              if_nz r15.w
                mul r15.w, r1.y, r35.x
                mul r15.w, r15.w, l(0.250000)
                dp3 r16.w, r41.xyzx, r14.xyzx
                dp3 r19.z, r14.xyzx, r43.xyzx
                mad r19.w, -r16.w, r16.w, r40.x
                mad r10.z, r16.w, r19.z, -r10.z
                div_sat r10.z, r10.z, r19.w
                div r16.w, r19.w, r40.x
                mul r16.w, r16.w, l(10.000000)
                min r16.w, r16.w, l(1.000000)
                add r10.z, -r10.w, r10.z
                mad r10.z, r16.w, r10.z, r10.w
                mad r41.xyz, r10.zzzz, r41.xyzx, r42.xyzx
                movc r41.xyz, r8.wwww, r41.xyzx, r34.yzwy
                add r41.xyz, r41.xyzx, -v6.xyzx
                dp3 r8.w, r41.xyzx, r41.xyzx
                rsq r8.w, r8.w
                mul r42.xyz, r8.wwww, r41.xyzx
                ubfe r10.z, l(4), l(16), r35.w
                ult r10.w, l(0), r10.z
                and r10.w, r0.w, r10.w
                if_nz r10.w
                  iadd r10.z, r10.z, cb2[0].x
                  iadd r10.z, r10.z, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r10.w, r10.z, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r10.z, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r10.z, l(116), t12.xyzw
                  mad r16.w, |r14.w|, l(-0.200000), l(0.400000)
                  lt r19.z, r14.w, l(0.000000)
                  movc r16.w, r19.z, -r16.w, r16.w
                  mad r22.xyz, r4.xyzx, r16.wwww, v6.xyzx
                  dp4 r16.w, r43.xyzw, r22.xyzw
                  dp4 r19.z, r44.xyzw, r22.xyzw
                  lt r19.w, r19.z, r16.w
                  if_z r19.w
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r10.z, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r10.z, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xyzw, r10.z, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r46.xyzw, r10.z, l(148), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r47.xy, r10.z, l(164), t12.xyxx
                    dp4 r43.x, r43.xyzw, r22.xyzw
                    dp4 r43.y, r44.xyzw, r22.xyzw
                    div r22.xy, r43.xyxx, r19.zzzz
                    mad r22.xy, r22.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r22.xy, r46.zwzz, r22.xyxx
                    mul r22.xy, r46.xyxx, r22.xyxx
                    div r43.xy, r10.wwww, r45.xzxx
                    add r43.zw, -r43.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                    ge r43.zw, r22.xxxy, r43.zzzw
                    ge r43.xy, r43.xyxx, r22.xyxx
                    or r43.xy, r43.xyxx, r43.zwzz
                    or r22.z, r43.y, r43.x
                    mov_sat r22.xy, r22.xyxx
                    mad r43.xy, r22.xyxx, r45.xzxx, r45.ywyy
                    mul r22.x, r19.z, r47.y
                    mad r16.w, r47.x, r19.z, r16.w
                    div r16.w, r16.w, r22.x
                  else 
                    mov r22.z, l(-1)
                  endif 
                  or r19.z, r19.w, r22.z
                  if_z r19.z
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r10.z, r10.z, l(28), t12.xxxx
                    max r16.w, r16.w, l(0.00006104)
                    and r10.z, r10.z, l(0x0000ffff)
                    if_nz r5.w
                      utof r22.z, r10.z
                      mov r19.zw, l(0,0,0,0)
                      loop 
                        ige r24.w, r19.w, l(8)
                        breakc_nz r24.w
                        dp2 r44.x, icb[r19.w + 0].yxyy, r18.xwxx
                        dp2 r44.y, icb[r19.w + 0].xyxx, r10.xyxx
                        mad r22.xy, r44.xyxx, r10.wwww, r43.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.x, r22.xyzx, t9.xxxx, s13, r16.w
                        mad r19.z, r22.x, l(0.125000), r19.z
                        iadd r19.w, r19.w, l(1)
                      endloop 
                    else 
                      utof r43.z, r10.z
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.z, r43.xyzx, t9.xxxx, s13, r16.w
                    endif 
                    mul r10.z, r19.z, r19.z
                    mul r10.z, r19.z, r10.z
                  else 
                    mov r10.z, l(1.000000)
                  endif 
                  mul r11.w, r10.z, r11.w
                else 
                  ubfe r10.z, l(4), l(20), r35.w
                  ult r10.w, l(0), r10.z
                  and r10.w, r1.w, r10.w
                  if_nz r10.w
                    iadd r10.z, r10.z, cb2[0].x
                    iadd r10.z, r10.z, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r10.w, r10.z, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r10.z, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r10.z, l(116), t12.xyzw
                    mad r16.w, |r14.w|, l(-0.200000), l(0.400000)
                    lt r19.w, r14.w, l(0.000000)
                    movc r16.w, r19.w, -r16.w, r16.w
                    mad r23.xyz, r4.xyzx, r16.wwww, v6.xyzx
                    dp4 r16.w, r43.xyzw, r23.xyzw
                    dp4 r19.w, r44.xyzw, r23.xyzw
                    lt r22.x, r19.w, r16.w
                    if_z r22.x
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r10.z, l(68), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r10.z, l(84), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xyzw, r10.z, l(132), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r46.xyzw, r10.z, l(148), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r22.yz, r10.z, l(164), t12.xxyx
                      dp4 r43.x, r43.xyzw, r23.xyzw
                      dp4 r43.y, r44.xyzw, r23.xyzw
                      div r23.xy, r43.xyxx, r19.wwww
                      mad r23.xy, r23.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                      add r23.xy, r46.zwzz, r23.xyxx
                      mul r23.xy, r46.xyxx, r23.xyxx
                      div r43.xy, r10.wwww, r45.xzxx
                      add r43.zw, -r43.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                      ge r43.zw, r23.xxxy, r43.zzzw
                      ge r43.xy, r43.xyxx, r23.xyxx
                      or r43.xy, r43.xyxx, r43.zwzz
                      or r23.z, r43.y, r43.x
                      mov_sat r23.xy, r23.xyxx
                      mad r43.xy, r23.xyxx, r45.xzxx, r45.ywyy
                      mul r22.z, r19.w, r22.z
                      mad r16.w, r22.y, r19.w, r16.w
                      div r16.w, r16.w, r22.z
                    else 
                      mov r23.z, l(-1)
                    endif 
                    or r19.w, r22.x, r23.z
                    if_z r19.w
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r10.z, r10.z, l(28), t12.xxxx
                      max r16.w, r16.w, l(0.00006104)
                      and r10.z, r10.z, l(0x0000ffff)
                      if_nz r5.w
                        utof r22.z, r10.z
                        mov r19.w, l(0)
                        mov r23.x, l(0)
                        loop 
                          ige r23.y, r23.x, l(8)
                          breakc_nz r23.y
                          dp2 r44.x, icb[r23.x + 0].xyxx, r11.xyxx
                          dp2 r44.y, icb[r23.x + 0].yxyy, r11.xzxx
                          mad r22.xy, r44.xyxx, r10.wwww, r43.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.x, r22.xyzx, t9.xxxx, s13, r16.w
                          mad r19.w, r22.x, l(0.125000), r19.w
                          iadd r23.x, r23.x, l(1)
                        endloop 
                      else 
                        utof r43.z, r10.z
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.w, r43.xyzx, t9.xxxx, s13, r16.w
                      endif 
                      mul r10.z, r19.w, r19.w
                      mul r10.z, r19.w, r10.z
                    else 
                      mov r10.z, l(1.000000)
                    endif 
                    mul r11.w, r10.z, r11.w
                  endif 
                endif 
                mad r10.z, -|r14.w|, r3.x, l(1.000000)
                mul r10.z, r10.z, r10.z
                mad r10.z, -r10.z, l(0.620000), l(0.620000)
                add r10.z, -|r14.w|, r10.z
                mad r10.z, r2.w, r10.z, |r14.w|
                mul r10.z, r11.w, r10.z
                mov r35.x, r34.x
                lt r10.w, l(0.000000), r14.w
                mad r22.xyz, r10.zzzz, r35.xyzx, r13.yzwy
                dp3_sat r10.z, r4.xyzx, r42.xyzx
                mad r23.xyz, r41.xyzx, r8.wwww, r6.xyzx
                dp3 r8.w, r23.xyzx, r23.xyzx
                rsq r8.w, r8.w
                mul r23.xyz, r8.wwww, r23.xyzx
                dp3 r8.w, r23.xyzx, r6.xyzx
                dp3 r14.w, r4.xyzx, r23.xyzx
                mad r16.w, |r14.w|, r1.y, -|r14.w|
                mad r14.w, |r14.w|, r16.w, l(1.000000)
                mad r16.w, r10.z, r1.z, r3.y
                mul r14.w, r14.w, r14.w
                mul r14.w, r16.w, r14.w
                rcp r14.w, r14.w
                mul r10.z, r15.w, r10.z
                mul r10.z, r10.z, r14.w
                mul r10.z, r11.w, r10.z
                mad r23.xyz, r10.zzzz, r35.xyzx, r33.xyzx
                add_sat r8.w, -r8.w, l(1.000000)
                mul r11.w, r8.w, r8.w
                mul r11.w, r11.w, r11.w
                mul r8.w, r8.w, r11.w
                mul r8.w, r8.w, r10.z
                mad r41.xyz, r8.wwww, r35.xyzx, r20.xyzx
                movc r13.yzw, r10.wwww, r22.xxyz, r13.yyzw
                movc r20.xyz, r10.wwww, r41.xyzx, r20.xyzx
                movc r33.xyz, r10.wwww, r23.xyzx, r33.xyzx
              endif 
            endif 
          endif 
          break 
          case l(2)
          mov r22.xy, r37.zwzz
          mov r22.z, r38.w
          add r22.xyz, r22.xyzx, -v6.xyzx
          dp3 r8.w, r22.xyzx, r22.xyzx
          rsq r8.w, r8.w
          mul r23.xyz, r8.wwww, r22.xyzx
          dp3 r10.z, r4.xyzx, r23.xyzx
          lt r10.w, l(0.000000), |r10.z|
          if_nz r10.w
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r7.w, l(112), t12.yzwx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r7.w, l(128), t12.zxyw
            mov r43.xyz, r41.xyzx
            mov r43.w, r42.y
            dp4 r10.w, r43.xyzw, r21.xyzw
            lt r11.w, r10.w, l(1.000000)
            if_nz r11.w
              mov r23.xyz, l(1.000000,1.000000,1.000000,0)
              mov r11.w, l(0)
            else 
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r7.w, l(172), t12.yzwx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xyzw, r7.w, l(188), t12.wxyz
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r46.xyzw, r7.w, l(204), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.w, r7.w, l(236), t12.xxxx
              add r47.xyz, r34.yzwy, -v6.xyzx
              mul r15.w, r37.x, r37.x
              dp3 r16.w, r47.xyzx, r47.xyzx
              div r15.w, r15.w, r16.w
              min r15.w, r15.w, l(1.000000)
              mad_sat r36.xy, r10.wwww, r36.xzxx, r36.ywyy
              mul r36.zw, r36.xxxy, r36.xxxy
              mad r36.xy, r36.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
              mul r36.xy, r36.xyxx, r36.zwzz
              mul r15.w, r15.w, r36.x
              mul r15.w, r36.y, r15.w
              mov r38.w, r39.x
              dp4 r36.x, r38.xyzw, r21.xyzw
              mov r47.xyz, r39.yzwy
              mov r47.w, r40.w
              dp4 r36.y, r47.xyzw, r21.xyzw
              div r24.xy, r36.xyxx, r10.wwww
              lt r10.w, r44.w, l(0.00048828)
              if_nz r10.w
                mov r45.y, r46.x
                mad_sat r36.xy, |r24.xyxx|, r45.zwzz, r45.xyxx
                mul r36.zw, r36.xxxy, r36.xxxy
                mad r36.xy, r36.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
                mul r36.xy, r36.xyxx, r36.zwzz
                mul r10.w, r36.y, r36.x
              else 
                mov r44.w, r45.y
                mul_sat r36.xyzw, |r24.yyxx|, r44.xyzw
                log r36.xyzw, r36.xyzw
                mul r36.xyzw, r36.xyzw, r45.xxxx
                exp r36.xyzw, r36.xyzw
                add r36.xy, r36.zwzz, r36.xyxx
                log r36.xy, r36.xyxx
                mul r36.xy, r36.xyxx, r46.xxxx
                exp r36.xy, r36.xyxx
                mul r16.w, r36.x, r45.z
                mad r24.w, r45.w, r36.y, l(-1.000000)
                mad r16.w, r45.w, r36.y, -r16.w
                div_sat r16.w, r24.w, r16.w
                mul r24.w, r16.w, r16.w
                mad r16.w, r16.w, l(-2.000000), l(3.000000)
                mul r10.w, r16.w, r24.w
              endif 
              mul r11.w, r10.w, r15.w
              and r10.w, r14.w, l(255)
              if_nz r10.w
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyz, r7.w, l(220), t12.xyzx
                dp3 r14.w, r46.yzwy, r24.xyzx
                dp3 r15.w, r36.xyzx, r24.xyzx
                frc r36.x, r14.w
                frc r36.y, r15.w
                iadd r10.w, r10.w, l(-1)
                utof r36.z, r10.w
                sample_l_indexable(texture2darray)(float,float,float,float) r23.xyz, r36.xyzx, t20.xyzw, s2, l(0.000000)
              else 
                mov r23.xyz, l(1.000000,1.000000,1.000000,0)
              endif 
            endif 
            mov r34.yz, r35.yyzy
            mul r23.xyz, r23.xyzx, r34.xyzx
            lt r10.w, l(0.000000), r11.w
            if_nz r10.w
              ubfe r10.w, l(3), l(27), r35.w
              ine r10.w, r10.w, l(1)
              if_nz r10.w
                mad r10.w, |r10.z|, l(-0.200000), l(0.400000)
                lt r14.w, r10.z, l(0.000000)
                movc r10.w, r14.w, -r10.w, r10.w
                mad r25.xyz, r4.xyzx, r10.wwww, v6.xyzx
                mov r41.xyz, r40.xyzx
                dp4 r10.w, r41.xyzw, r25.xyzw
                dp4 r14.w, r43.xyzw, r25.xyzw
                ge r15.w, r14.w, r10.w
                if_nz r15.w
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.y, r7.w, l(144), t12.xxxx
                  mov r38.w, r39.x
                  dp4 r24.x, r38.xyzw, r25.xyzw
                  mov r40.xyz, r39.yzwy
                  dp4 r24.y, r40.xyzw, r25.xyzw
                  div r24.xy, r24.xyxx, r14.wwww
                  mad_sat r24.xy, r24.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  mad r25.xy, r24.xyxx, r42.zwzz, r42.xyxx
                  div r7.w, r10.w, r14.w
                  max r7.w, r7.w, l(0.00006104)
                  and r10.w, r35.w, l(0x0000ffff)
                  if_nz r5.w
                    utof r34.z, r10.w
                    mov r14.w, l(0)
                    mov r15.w, l(0)
                    loop 
                      ige r16.w, r15.w, l(8)
                      breakc_nz r16.w
                      dp2 r24.x, icb[r15.w + 0].xyxx, r28.xyxx
                      dp2 r24.y, icb[r15.w + 0].yxyy, r28.xzxx
                      mad r34.xy, r24.xyxx, r37.yyyy, r25.xyxx
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r16.w, r34.xyzx, t9.xxxx, s13, r7.w
                      mad r14.w, r16.w, l(0.125000), r14.w
                      iadd r15.w, r15.w, l(1)
                    endloop 
                  else 
                    utof r25.z, r10.w
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r14.w, r25.xyzx, t9.xxxx, s13, r7.w
                  endif 
                  mul r7.w, r14.w, r14.w
                  mul r7.w, r14.w, r7.w
                else 
                  mov r7.w, l(1.000000)
                endif 
              else 
                mov r7.w, l(1.000000)
              endif 
              mul r7.w, r7.w, r11.w
              lt r10.w, l(0.000000), r7.w
              if_nz r10.w
                mul r10.w, r1.y, r35.x
                mul r10.w, r10.w, l(0.250000)
                ubfe r11.w, l(4), l(16), r35.w
                ult r15.w, l(0), r11.w
                and r15.w, r0.w, r15.w
                if_nz r15.w
                  iadd r11.w, r11.w, cb2[0].x
                  iadd r11.w, r11.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.w, r11.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r11.w, l(68), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r11.w, l(84), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r11.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r11.w, l(116), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r11.w, l(132), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r11.w, l(148), t12.xyzw
                  mad r16.w, |r10.z|, l(-0.200000), l(0.400000)
                  lt r24.x, r10.z, l(0.000000)
                  movc r16.w, r24.x, -r16.w, r16.w
                  mad r26.xyz, r4.xyzx, r16.wwww, v6.xyzx
                  dp4 r24.x, r34.xyzw, r26.xyzw
                  dp4 r24.y, r36.xyzw, r26.xyzw
                  dp4 r16.w, r37.xyzw, r26.xyzw
                  dp4 r24.w, r38.xyzw, r26.xyzw
                  lt r25.x, r24.w, r16.w
                  div r24.xy, r24.xyxx, r24.wwww
                  mad r24.xy, r24.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r24.xy, r40.zwzz, r24.xyxx
                  mul r24.xy, r40.xyxx, r24.xyxx
                  div r25.yz, r15.wwww, r39.xxzx
                  add r26.xy, -r25.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
                  ge r26.xy, r24.xyxx, r26.xyxx
                  ge r25.yz, r25.yyzy, r24.xxyx
                  or r25.yz, r25.yyzy, r26.xxyx
                  or r25.y, r25.z, r25.y
                  or r25.x, r25.x, r25.y
                  if_z r25.x
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r25.x, r11.w, l(28), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r25.yz, r11.w, l(164), t12.xxyx
                    mov_sat r24.xy, r24.xyxx
                    mad r26.xy, r24.xyxx, r39.xzxx, r39.ywyy
                    mul r11.w, r24.w, r25.z
                    mad r16.w, r25.y, r24.w, r16.w
                    div r11.w, r16.w, r11.w
                    max r11.w, r11.w, l(0.00006104)
                    and r16.w, r25.x, l(0x0000ffff)
                    if_nz r5.w
                      utof r25.z, r16.w
                      mov r24.xy, l(0,0,0,0)
                      loop 
                        ige r24.w, r24.y, l(8)
                        breakc_nz r24.w
                        dp2 r34.x, icb[r24.y + 0].xyxx, r29.xyxx
                        dp2 r34.y, icb[r24.y + 0].yxyy, r29.xzxx
                        mad r25.xy, r34.xyxx, r15.wwww, r26.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.w, r25.xyzx, t9.xxxx, s13, r11.w
                        mad r24.x, r24.w, l(0.125000), r24.x
                        iadd r24.y, r24.y, l(1)
                      endloop 
                    else 
                      utof r26.z, r16.w
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.x, r26.xyzx, t9.xxxx, s13, r11.w
                    endif 
                    mul r11.w, r24.x, r24.x
                    mul r11.w, r24.x, r11.w
                  else 
                    mov r11.w, l(1.000000)
                  endif 
                  mul r7.w, r7.w, r11.w
                else 
                  ubfe r11.w, l(4), l(20), r35.w
                  ult r15.w, l(0), r11.w
                  and r15.w, r1.w, r15.w
                  if_nz r15.w
                    iadd r11.w, r11.w, cb2[0].x
                    iadd r11.w, r11.w, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.w, r11.w, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r11.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r11.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r11.w, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r11.w, l(116), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r11.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r11.w, l(148), t12.xyzw
                    mad r16.w, |r10.z|, l(-0.200000), l(0.400000)
                    lt r24.y, r10.z, l(0.000000)
                    movc r16.w, r24.y, -r16.w, r16.w
                    mad r27.xyz, r4.xyzx, r16.wwww, v6.xyzx
                    dp4 r25.x, r34.xyzw, r27.xyzw
                    dp4 r25.y, r35.xyzw, r27.xyzw
                    dp4 r16.w, r36.xyzw, r27.xyzw
                    dp4 r24.y, r37.xyzw, r27.xyzw
                    lt r24.w, r24.y, r16.w
                    div r25.xy, r25.xyxx, r24.yyyy
                    mad r25.xy, r25.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r25.xy, r39.zwzz, r25.xyxx
                    mul r25.xy, r39.xyxx, r25.xyxx
                    div r26.xy, r15.wwww, r38.xzxx
                    add r27.xy, -r26.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                    ge r27.xy, r25.xyxx, r27.xyxx
                    ge r26.xy, r26.xyxx, r25.xyxx
                    or r26.xy, r26.xyxx, r27.xyxx
                    or r25.z, r26.y, r26.x
                    or r24.w, r24.w, r25.z
                    if_z r24.w
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r24.w, r11.w, l(28), t12.xxxx
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r26.xy, r11.w, l(164), t12.xyxx
                      mov_sat r25.xy, r25.xyxx
                      mad r25.xy, r25.xyxx, r38.xzxx, r38.ywyy
                      mul r11.w, r24.y, r26.y
                      mad r16.w, r26.x, r24.y, r16.w
                      div r11.w, r16.w, r11.w
                      max r11.w, r11.w, l(0.00006104)
                      and r16.w, r24.w, l(0x0000ffff)
                      if_nz r5.w
                        utof r26.z, r16.w
                        mov r24.yw, l(0,0,0,0)
                        loop 
                          ige r27.x, r24.w, l(8)
                          breakc_nz r27.x
                          dp2 r27.x, icb[r24.w + 0].xyxx, r30.xyxx
                          dp2 r27.y, icb[r24.w + 0].yxyy, r30.xzxx
                          mad r26.xy, r27.xyxx, r15.wwww, r25.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r26.x, r26.xyzx, t9.xxxx, s13, r11.w
                          mad r24.y, r26.x, l(0.125000), r24.y
                          iadd r24.w, r24.w, l(1)
                        endloop 
                      else 
                        utof r25.z, r16.w
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.y, r25.xyzx, t9.xxxx, s13, r11.w
                      endif 
                      mul r11.w, r24.y, r24.y
                      mul r11.w, r24.y, r11.w
                    else 
                      mov r11.w, l(1.000000)
                    endif 
                    mul r7.w, r7.w, r11.w
                  endif 
                endif 
                mad r11.w, -|r10.z|, r3.x, l(1.000000)
                mul r11.w, r11.w, r11.w
                mad r11.w, -r11.w, l(0.620000), l(0.620000)
                add r11.w, -|r10.z|, r11.w
                mad r11.w, r2.w, r11.w, |r10.z|
                mul r11.w, r7.w, r11.w
                lt r15.w, l(0.000000), r10.z
                mad r25.xyz, r11.wwww, r23.xyzx, r13.yzwy
                mov_sat r10.z, r10.z
                mad r22.xyz, r22.xyzx, r8.wwww, r6.xyzx
                dp3 r8.w, r22.xyzx, r22.xyzx
                rsq r8.w, r8.w
                mul r22.xyz, r8.wwww, r22.xyzx
                dp3 r8.w, r22.xyzx, r6.xyzx
                dp3 r11.w, r4.xyzx, r22.xyzx
                mad r16.w, |r11.w|, r1.y, -|r11.w|
                mad r11.w, |r11.w|, r16.w, l(1.000000)
                mad r16.w, r10.z, r1.z, r3.y
                mul r11.w, r11.w, r11.w
                mul r11.w, r16.w, r11.w
                rcp r11.w, r11.w
                mul r10.z, r10.w, r10.z
                mul r10.z, r10.z, r11.w
                mul r7.w, r7.w, r10.z
                mad r22.xyz, r7.wwww, r23.xyzx, r33.xyzx
                add_sat r8.w, -r8.w, l(1.000000)
                mul r10.z, r8.w, r8.w
                mul r10.z, r10.z, r10.z
                mul r8.w, r8.w, r10.z
                mul r7.w, r7.w, r8.w
                mad r23.xyz, r7.wwww, r23.xyzx, r20.xyzx
                movc r13.yzw, r15.wwww, r25.xxyz, r13.yyzw
                movc r20.xyz, r15.wwww, r23.xyzx, r20.xyzx
                movc r33.xyz, r15.wwww, r22.xyzx, r33.xyzx
              endif 
            endif 
          endif 
          break 
          default 
          break 
        endswitch 
      endif 
    endif 
  endloop 
  mov r12.yzw, r13.yyzw
  mov r31.xyz, r20.xyzx
  mov r32.xyz, r33.xyzx
  iadd r3.w, r3.w, l(32)
endloop 
add r0.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r0.xyz, r0.xyzx, r31.xyzx
mad r0.xyz, r32.xyzx, r5.xyzx, r0.xyzx
mad r0.xyz, r12.yzwy, r2.xyzx, r0.xyzx
add r0.w, -cb0[19].w, l(1.000000)
mul r0.w, r0.w, r9.w
mad r1.xyz, r7.xyzx, r1.xxxx, -r8.xyzx
mad r1.xyz, r0.wwww, r1.xyzx, r8.xyzx
dp3 r0.w, r0.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
max r0.w, r0.w, l(0.000100)
max r0.w, r0.w, cb1[85].x
mul r2.xyz, r0.wwww, r1.xyzx
movc r1.xyz, cb0[17].wwww, r2.xyzx, r1.xyzx
add r0.xyz, r0.xyzx, r1.xyzx
lt r0.w, l(0.000000), cb2[9].z
if_nz r0.w
  dp3 r0.w, v6.xyzx, v6.xyzx
  rsq r1.x, r0.w
  mul r1.xyz, r1.xxxx, v6.xyzx
  sqrt r0.w, r0.w
  lt r1.w, l(0.000000), cb2[13].w
  if_nz r1.w
    mad r2.xy, r0.wwww, cb2[15].xyxx, cb2[14].zwzz
    mul r2.xy, r2.xyxx, cb2[16].xyxx
    lt r1.w, l(0.010000), |v6.z|
    mul r2.zw, v6.zzzz, cb2[15].zzzw
    mul r3.xy, r2.zwzz, l(-1.442695, -1.442695, 0.000000, 0.000000)
    exp r3.xy, r3.xyxx
    add r3.xy, -r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    div r2.zw, r3.xxxy, r2.zzzw
    mul r2.zw, r2.zzzw, r2.xxxy
    movc r2.xy, r1.wwww, r2.zwzz, r2.xyxx
    mul r2.xzw, r2.xxxx, cb2[12].xxyz
    exp r2.xzw, r2.xxzw
    mul r3.xyz, r2.yyyy, cb2[12].xyzx
    exp r3.xyz, r3.xyzx
    add r3.xyz, -r2.xzwx, r3.xyzx
    mad r2.xyz, cb2[13].wwww, r3.xyzx, r2.xzwx
  else 
    mad r1.w, r0.w, cb2[15].x, cb2[14].z
    mul r1.w, r1.w, cb2[16].x
    lt r2.w, l(0.010000), |v6.z|
    mul r3.x, v6.z, cb2[15].z
    mul r3.y, r3.x, l(-1.442695)
    exp r3.y, r3.y
    add r3.y, -r3.y, l(1.000000)
    div r3.x, r3.y, r3.x
    mul r3.x, r1.w, r3.x
    movc r1.w, r2.w, r3.x, r1.w
    mul r3.xyz, r1.wwww, cb2[12].xyzx
    exp r2.xyz, r3.xyzx
  endif 
  mad r2.xyz, r2.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r2.xyz, r2.xyzx, -cb2[9].zzzz
  dp3 r1.x, cb2[7].yzwy, -r1.xyzx
  mad r1.y, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r1.z, cb2[8].w, -r1.x, l(1.000000)
  mul r1.z, r1.z, r1.z
  mul r1.z, r1.z, l(12.566371)
  div r1.y, r1.y, r1.z
  add r0.w, r0.w, -cb2[10].w
  mul_sat r0.w, r0.w, cb2[11].w
  mul r0.w, r0.w, r1.y
  mov_sat r1.x, r1.x
  mad r1.x, r1.x, r1.x, l(1.000000)
  mad r1.x, r1.x, l(0.05968310), l(-1.000000)
  mad r1.x, cb2[8].z, r1.x, l(1.000000)
  mul r1.yzw, r0.wwww, cb2[11].xxyz
  mad r1.xyz, r1.xxxx, cb2[10].xyzx, r1.yzwy
  mul r1.xyz, r1.xyzx, cb2[9].wwww
  add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r1.xyz, r1.xyzx, r3.xyzx
  mad r1.xyz, r0.xyzx, r2.xyzx, r1.xyzx
else 
  mul r0.w, v6.z, cb2[6].x
  mad r1.w, cb2[6].x, v6.z, cb2[5].x
  lt r2.x, |r0.w|, l(0.000100)
  min r2.y, r1.w, l(64.000000)
  mul r2.y, r2.y, l(1.442695)
  exp r2.y, r2.y
  mov_sat r2.z, cb2[6].z
  lt r2.w, r1.w, l(0.000000)
  add r1.w, r1.w, l(1.000000)
  movc r1.w, r2.w, r2.y, r1.w
  add r1.w, r1.w, -cb2[6].z
  movc r0.w, r2.x, l(1.000000), r0.w
  div r0.w, r1.w, r0.w
  movc r0.w, r2.x, r2.z, r0.w
  mul r0.w, r0.w, cb2[5].z
  dp3 r1.w, v6.xyzx, v6.xyzx
  sqrt r2.x, r1.w
  mad r0.w, r0.w, r2.x, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  rsq r1.w, r1.w
  mul r2.xyz, r1.wwww, v6.xyzx
  dp3 r1.w, cb2[7].yzwy, r2.xyzx
  mad_sat r1.w, cb2[8].y, r1.w, cb2[8].x
  add r2.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r2.xyzw, r1.wwww, r2.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r2.w
  add r2.xyz, -r0.xyzx, r2.xyzx
  mad r1.xyz, r0.wwww, r2.xyzx, r0.xyzx
endif 
mul r0.xyz, r1.xyzx, cb1[85].yyyy
ge r1.xyz, r0.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.xyz, r0.xyzx, r1.xyzx
min r0.xyz, r0.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
max r1.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r9.xyz, r9.wwww, r1.xyzx
and r0.w, r9.w, l(0x7f800000)
ieq r0.w, r0.w, l(0x7f800000)
eq r2.xyzw, r9.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
and r2.xy, r2.zwzz, r2.xyxx
and r1.w, r2.y, r2.x
or r0.w, r0.w, r1.w
if_z r0.w
  ftou r2.xy, v0.xyxx
  imm_atomic_iadd r2.z, u6, r2.xyxx, l(1)
  ult r0.w, r2.z, cb2[58].z
  if_nz r0.w
    max r0.w, r9.z, r9.y
    max r0.w, r0.w, r9.x
    mov r0.w, |r0.w|
    and r0.w, r0.w, l(0x7f800000)
    iadd r0.w, r0.w, l(0x00800000)
    mad r1.xyz, r1.xyzx, r9.wwww, r0.wwww
    ubfe r1.x, l(8), l(15), r1.x
    ushr r1.yz, r1.yyzy, l(0, 15, 15, 0)
    bfi r1.yz, l(0, 8, 8, 0), l(0, 8, 16, 0), r1.yyzy, l(0, 0, 0, 0)
    iadd r1.x, r1.y, r1.x
    iadd r1.x, r1.z, r1.x
    ishl r0.w, r0.w, l(1)
    iadd r1.xzw, r0.wwww, r1.xxxx
    mov_sat r0.w, r9.w
    mul r0.w, r0.w, l(2046.000000)
    ftou r0.w, r0.w
    ishl r2.w, v0.z, l(2)
    and r0.w, r0.w, l(2046)
    bfi r1.y, l(11), l(0), r0.w, r2.w
    store_uav_typed u7.xyzw, r2.xyzz, r1.xyzw
    mov r0.w, l(-1)
  else 
    mov r0.w, l(0)
  endif 
else 
  mov r0.w, l(-1)
endif 
mul r9.xyz, r9.wwww, r0.xyzx
movc o0.xyzw, r0.wwww, l(0,0,0,0), r9.xyzw
ret 
// Approximately 2502 instruction slots used
