//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:38:31 2021
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float alphaRevealSoftEdge;         // Offset:  160 Size:     4 [unused]
//   float alphaRevealRamp;             // Offset:  164 Size:     4 [unused]
//   float2 revealScale;                // Offset:  168 Size:     8 [unused]
//   float3 colorTint;                  // Offset:  176 Size:    12
//   float baseNormalHeight;            // Offset:  188 Size:     4
//   float2 glossRange;                 // Offset:  192 Size:     8
//   float detailScaleHeight;           // Offset:  200 Size:     4
//   float3 transColorTint;             // Offset:  208 Size:    12
//   float transNormalHeight;           // Offset:  220 Size:     4
//   float2 transGlossRange;            // Offset:  224 Size:     8
//   float transRevealSoftEdge;         // Offset:  232 Size:     4
//   float transRevealRamp;             // Offset:  236 Size:     4
//   float2 transScale;                 // Offset:  240 Size:     8
//   float scriptReplacement;           // Offset:  248 Size:     4 [unused]
//   bool enableGTAO;                   // Offset:  252 Size:     4
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4 [unused]
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4
//   uint numDynamicDecals;             // Offset:  924 Size:     4
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for shaderConstantSetBuffer
// {
//
//   struct GpuShaderConstantSet
//   {
//       
//       float4 scriptVector0;          // Offset:    0
//       float4 scriptVector1;          // Offset:   16
//       float4 scriptVector2;          // Offset:   32
//       float4 scriptVector3;          // Offset:   48
//       float4 scriptVector4;          // Offset:   64
//       float4 scriptVector5;          // Offset:   80
//       float4 scriptVector6;          // Offset:   96
//       float4 scriptVector7;          // Offset:  112
//       float4 weaponParam0;           // Offset:  128
//       float4 weaponParam1;           // Offset:  144
//       float4 weaponParam2;           // Offset:  160
//       float4 weaponParam3;           // Offset:  176
//       float4 weaponParam4;           // Offset:  192
//       float4 weaponParam5;           // Offset:  208
//       float4 weaponParam6;           // Offset:  224
//       float4 weaponParam7;           // Offset:  240
//       float4 characterParam0;        // Offset:  256
//       float4 characterParam1;        // Offset:  272
//       float4 characterParam2;        // Offset:  288
//       float4 characterParam3;        // Offset:  304
//       float4 characterParam4;        // Offset:  320
//       float4 characterParam5;        // Offset:  336
//       float4 characterParam6;        // Offset:  352
//       float4 characterParam7;        // Offset:  368
//
//   } $Element;                        // Offset:    0 Size:   384
//
// }
//
// Resource bind info for modelInstanceBuffer
// {
//
//   struct ModelInstanceData
//   {
//       
//       uint boneArrayIndex;           // Offset:    0
//       uint shaderConstantSet;        // Offset:    4
//       uint flagsAndPrevFrameIndex;   // Offset:    8
//       uint worldMatrix;              // Offset:   12
//       uint siegeAnimStateOffset;     // Offset:   16
//       uint prevFrameSiegeAnimStateOffset;// Offset:   20
//
//   } $Element;                        // Offset:    0 Size:    24
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for forwardDecalConstants
// {
//
//   struct CoreDecalConstantsPack
//   {
//       
//       uint4 data[8];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   128
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// colorSampler                      sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// specColorSampler                  sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// normalSampler                     sampler      NA          NA             s5      1 
// aoSampler                         sampler      NA          NA             s6      1 
// transitionSampler                 sampler      NA          NA             s7      1 
// LinearSampler                     sampler      NA          NA             s8      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// shaderConstantSetBuffer           texture  struct         r/o             t0      1 
// thicknessMap                      texture  float4          2d             t3      1 
// modelInstanceBuffer               texture  struct         r/o             t4      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// floatZSampler                     texture  float4          2d            t21      1 
// colorMap                          texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// normalMap                         texture  float4          2d            t24      1 
// glossMap                          texture  float4          2d            t25      1 
// aoMap                             texture  float4          2d            t26      1 
// gSSAOTexture                      texture   float          2d            t27      1 
// detailMap                         texture  float4          2d            t29      1 
// transColorMap                     texture  float4          2d            t30      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// visibleDecals                     texture    uint     2darray            t35      1 
// forwardDecalConstants             texture  struct         r/o            t36      1 
// transNormalMap                    texture  float4          2d            t37      1 
// transGlossMap                     texture  float4          2d            t38      1 
// materialTexBC7                    texture  float4     2darray            t42      1 
// materialTexBC3                    texture  float4     2darray            t43      1 
// materialTexBC7linear              texture  float4     2darray            t44      1 
// materialTexMask                   texture  float4     2darray            t45      1 
// transRevealMap                    texture  float4          2d            t46      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    1   x           1     NONE   float       
// TEXCOORD                 0    yz         1     NONE   float    yz 
// TEXCOORD                 4   x           2     NONE    uint   x   
// TEXCOORD                 1   xyz         3     NONE   float   xyz 
// TEXCOORD                 2   xyz         4     NONE   float   xyz 
// TEXCOORD                 3   xyz         5     NONE   float   xyz 
// OFFPOSITION              0   xyz         6     NONE   float   xyz 
// SV_IsFrontFace           0   x           7    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyz         0   TARGET   float   xyz 
// SV_TARGET                1   xyz         1   TARGET   float   xyz 
// SV_TARGET                2   xyzw        2   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[16], immediateIndexed
dcl_constantbuffer CB1[93], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_structured t0, 384
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_structured t4, 24
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2d (float,float,float,float) t26
dcl_resource_texture2d (float,float,float,float) t27
dcl_resource_texture2d (float,float,float,float) t29
dcl_resource_texture2d (float,float,float,float) t30
dcl_resource_texture2darray (float,float,float,float) t31
dcl_resource_texture2darray (uint,uint,uint,uint) t35
dcl_resource_structured t36, 128
dcl_resource_texture2d (float,float,float,float) t37
dcl_resource_texture2d (float,float,float,float) t38
dcl_resource_texture2darray (float,float,float,float) t42
dcl_resource_texture2darray (float,float,float,float) t43
dcl_resource_texture2darray (float,float,float,float) t44
dcl_resource_texture2darray (float,float,float,float) t45
dcl_resource_texture2d (float,float,float,float) t46
dcl_input_ps_siv linear noperspective v0.xyzw, position
dcl_input_ps linear v1.yz
dcl_input_ps constant v2.x
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps_sgv constant v7.x, is_front_face
dcl_output o0.xyz
dcl_output o1.xyz
dcl_output o2.xyzw
dcl_temps 69
dcl_indexableTemp x0[4], 4
dcl_indexableTemp x1[4], 4
dcl_indexableTemp x2[4], 4
ld_structured_indexable(structured_buffer, stride=24)(mixed,mixed,mixed,mixed) r0.xy, v2.x, l(4), t4.xyxx
ld_structured_indexable(structured_buffer, stride=384)(mixed,mixed,mixed,mixed) r0.x, r0.x, l(0), t0.xxxx
sample_indexable(texture2d)(float,float,float,float) r0.z, v1.yzyy, t46.yzxw, s7
mad_sat r0.x, r0.x, l(0.998000), l(0.001000)
add r0.w, -r0.x, l(1.000000)
mov_sat r1.x, cb0[14].w
log r0.x, r0.x
mul r0.x, r0.x, r1.x
exp r0.x, r0.x
mov r2.x, -r0.x
log r0.x, r0.w
mul r0.x, r0.x, r1.x
exp r2.y, r0.x
mad_sat r0.xw, cb0[14].zzzz, r2.xxxy, r0.wwww
add r0.z, -r0.x, r0.z
add r0.x, -r0.x, r0.w
div_sat r0.x, r0.z, r0.x
mul r0.zw, v1.yyyz, cb0[15].xxxy
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.yzyy, t22.xyzw, s1
add r2.xyz, cb0[11].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r2.xyz, r1.wwww, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r1.xyz, r1.xyzx, r2.xyzx
sample_indexable(texture2d)(float,float,float,float) r2.x, v1.yzyy, t25.xyzw, s3
add r2.y, -cb0[12].x, cb0[12].y
mad r2.x, r2.x, r2.y, cb0[12].x
mul_sat r2.x, r2.x, l(0.05882353)
lt r2.y, l(0.000000), r0.x
sample_indexable(texture2d)(float,float,float,float) r3.xyzw, r0.zwzz, t30.xyzw, s7
sample_indexable(texture2d)(float,float,float,float) r2.z, r0.zwzz, t38.yzxw, s7
if_nz r2.y
  add r4.xyz, cb0[13].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
  mad r4.xyz, r3.wwww, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  add r2.y, -cb0[14].x, cb0[14].y
  mad r2.y, r2.z, r2.y, cb0[14].x
  mul_sat r2.y, r2.y, l(0.05882353)
  mul r2.z, r0.x, r3.w
  mad r3.xyz, r3.xyzx, r4.xyzx, -r1.xyzx
  mad r1.xyz, r2.zzzz, r3.xyzx, r1.xyzx
  mad r2.y, r2.y, l(2.000000), l(-1.000000)
  mad r2.y, r2.z, r2.y, l(1.000000)
  mul_sat r2.x, r2.y, r2.x
else 
  mov r2.z, l(0)
endif 
sample_indexable(texture2d)(float,float,float,float) r3.xyz, v1.yzyy, t24.xyzw, s5
add r3.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.000000, 0.000000)
mad r3.xyz, cb0[11].wwww, r3.xyzx, l(0.500000, 0.500000, 0.000000, 0.000000)
mad r2.yw, r3.xxxy, l(0.000000, 1.99218750, 0.000000, 1.99218750), l(0.000000, -1.000000, 0.000000, -1.000000)
dp2 r3.x, r2.ywyy, r2.ywyy
add r3.x, -r3.x, l(1.000000)
max r3.x, r3.x, l(0.000000)
sqrt r4.z, r3.x
mul r3.x, r3.z, r3.z
mul r3.x, r3.x, l(0.33333334)
min r3.x, r3.x, l(1.000000)
mul r3.yz, v1.yyzy, cb0[4].xxyx
sample_indexable(texture2d)(float,float,float,float) r3.yzw, r3.yzyy, t29.wxyz, s5
mad r3.yz, r3.yyzy, l(0.000000, 1.99218750, 1.99218750, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
mul r3.w, r3.w, r3.w
mul r3.w, r3.w, l(0.33333334)
min r3.w, r3.w, l(1.000000)
mad r4.xy, r3.yzyy, cb0[12].zzzz, r2.ywyy
dp3 r2.y, r4.xyzx, r4.xyzx
rsq r2.y, r2.y
mul r4.xyz, r2.yyyy, r4.xyzx
mad r2.y, r3.w, cb0[12].z, r3.x
lt r2.w, l(0.000000), r2.z
sample_indexable(texture2d)(float,float,float,float) r3.xyz, r0.zwzz, t37.xyzw, s7
if_nz r2.w
  add r3.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.000000, 0.000000)
  mad r3.xyz, cb0[13].wwww, r3.xyzx, l(0.500000, 0.500000, 0.000000, 0.000000)
  mad r0.zw, r3.xxxy, l(0.000000, 0.000000, 1.99218750, 1.99218750), l(0.000000, 0.000000, -1.000000, -1.000000)
  mul r2.w, r3.z, r3.z
  mul r2.w, r2.w, l(0.33333334)
  min r2.w, r2.w, l(1.000000)
  mad r4.xy, r0.zwzz, r2.zzzz, r4.xyxx
  dp3 r0.z, r4.xyzx, r4.xyzx
  rsq r0.z, r0.z
  mul r4.xyz, r0.zzzz, r4.xyzx
  mad r2.y, r2.w, r2.z, r2.y
endif 
movc r0.z, v7.x, l(1.000000), l(-1.000000)
dp3 r0.w, v3.xyzx, v3.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, v3.xyzx
mul r3.xyz, r0.zzzz, r3.xyzx
dp3 r0.w, v4.xyzx, v4.xyzx
rsq r0.w, r0.w
mul r5.xyz, r0.wwww, v4.xyzx
mul r5.xyz, r0.zzzz, r5.xyzx
dp3 r0.w, v5.xyzx, v5.xyzx
rsq r0.w, r0.w
mul r6.xyz, r0.wwww, v5.xyzx
mul r6.xyz, r0.zzzz, r6.xyzx
mul r0.w, r2.x, l(-17.000000)
exp r0.w, r0.w
add r0.w, r0.w, r2.y
log r0.w, r0.w
mul_sat r0.w, r0.w, l(-0.05882353)
mul r2.xyz, r4.yyyy, r6.xyzx
mad r2.xyz, r5.xyzx, r4.xxxx, r2.xyzx
mad r2.xyz, r3.xyzx, r4.zzzz, r2.xyzx
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul r2.xyz, r2.wwww, r2.xyzx
sample_indexable(texture2d)(float,float,float,float) r2.w, v1.yzyy, t3.yzwx, s1
add r2.w, -r2.w, l(1.000000)
mul r3.xyz, r2.wwww, l(1.000000, 0.500000, 0.500000, 0.000000)
mul r4.xyzw, v0.xyxy, cb1[44].zwzw
if_nz cb0[15].w
  mul r5.xyz, v3.yyyy, cb1[5].xyzx
  mad r5.xyz, v3.xxxx, cb1[4].xyzx, r5.xyzx
  mad r5.xyz, v3.zzzz, cb1[6].xyzx, r5.xyzx
  dp3 r2.w, r5.xyzx, r5.xyzx
  rsq r2.w, r2.w
  mul r5.xyz, r2.wwww, r5.xyzx
  mul r2.w, cb1[70].w, l(0.500000)
  mad r6.xy, cb1[73].xyxx, r4.zwzz, -cb1[73].zwzz
  mul r6.xy, r6.xyxx, v0.wwww
  dp2 r3.w, v0.xyxx, l(0.06711056, 0.00583715, 0.000000, 0.000000)
  frc r3.w, r3.w
  mul r3.w, r3.w, l(52.982918)
  frc r3.w, r3.w
  mad r2.w, r3.w, l(3.141600), r2.w
  sincos r7.x, r8.x, r2.w
  mul r9.xyzw, cb1[44].zwzw, l(4.166667, 4.166667, 16.666668, 16.666668)
  mov r8.y, r7.x
  mad r7.xyzw, r9.xyzw, r8.xyxy, r4.zwzw
  mul r10.xyzw, r7.xyzw, cb1[44].xyxy
  ftoi r11.xy, r10.xyxx
  mov r11.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r2.w, r11.xyzw, t21.yzwx
  ge r3.w, r2.w, l(0.984375)
  mul r5.w, r2.w, l(1.01587307)
  mad r2.w, r2.w, l(64.000000), l(-63.000000)
  movc r2.w, r3.w, r2.w, r5.w
  max r2.w, r2.w, l(0.00000001)
  rcp r11.z, r2.w
  mad r7.xyzw, cb1[73].xyxy, r7.xyzw, -cb1[73].zwzw
  mul r11.xy, r7.xyxx, r11.zzzz
  mov r6.z, v0.w
  add r11.xyz, -r6.xyzx, r11.xyzx
  dp3 r2.w, r11.xyzx, r11.xyzx
  rsq r2.w, r2.w
  mul r2.w, r2.w, -r11.z
  max r2.w, r2.w, l(-1.000000)
  ftoi r10.xy, r10.zwzz
  mov r10.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.w, r10.xyzw, t21.yzwx
  ge r5.w, r3.w, l(0.984375)
  mul r6.w, r3.w, l(1.01587307)
  mad r3.w, r3.w, l(64.000000), l(-63.000000)
  movc r3.w, r5.w, r3.w, r6.w
  max r3.w, r3.w, l(0.00000001)
  rcp r10.z, r3.w
  mul r10.xy, r7.zwzz, r10.zzzz
  add r7.xyz, -r6.xyzx, r10.xyzx
  dp3 r3.w, r7.xyzx, r7.xyzx
  rsq r3.w, r3.w
  mul r3.w, r3.w, -r7.z
  max r2.w, r2.w, r3.w
  mul r7.xyzw, cb1[44].zwzw, l(37.500000, 37.500000, 66.666672, 66.666672)
  mad r10.xyzw, r7.xyzw, r8.xyxy, r4.zwzw
  mul r11.xyzw, r10.xyzw, cb1[44].xyxy
  ftoi r12.xy, r11.xyxx
  mov r12.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.w, r12.xyzw, t21.yzwx
  ge r5.w, r3.w, l(0.984375)
  mul r6.w, r3.w, l(1.01587307)
  mad r3.w, r3.w, l(64.000000), l(-63.000000)
  movc r3.w, r5.w, r3.w, r6.w
  max r3.w, r3.w, l(0.00000001)
  rcp r12.z, r3.w
  mad r10.xyzw, cb1[73].xyxy, r10.xyzw, -cb1[73].zwzw
  mul r12.xy, r10.xyxx, r12.zzzz
  add r12.xyz, -r6.xyzx, r12.xyzx
  dp3 r3.w, r12.xyzx, r12.xyzx
  rsq r3.w, r3.w
  mul r3.w, r3.w, -r12.z
  max r2.w, r2.w, r3.w
  ftoi r11.xy, r11.zwzz
  mov r11.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.w, r11.xyzw, t21.yzwx
  ge r5.w, r3.w, l(0.984375)
  mul r6.w, r3.w, l(1.01587307)
  mad r3.w, r3.w, l(64.000000), l(-63.000000)
  movc r3.w, r5.w, r3.w, r6.w
  max r3.w, r3.w, l(0.00000001)
  rcp r11.z, r3.w
  mul r11.xy, r10.zwzz, r11.zzzz
  add r10.xyz, -r6.xyzx, r11.xyzx
  dp3 r3.w, r10.xyzx, r10.xyzx
  rsq r3.w, r3.w
  mul r3.w, r3.w, -r10.z
  max r2.w, r2.w, r3.w
  mul r10.xyzw, cb1[44].zwzw, l(104.166664, 104.166664, 150.000000, 150.000000)
  mad r11.xyzw, r10.xyzw, r8.xyxy, r4.zwzw
  mul r12.xyzw, r11.xyzw, cb1[44].xyxy
  ftoi r13.xy, r12.xyxx
  mov r13.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.w, r13.xyzw, t21.yzwx
  ge r5.w, r3.w, l(0.984375)
  mul r6.w, r3.w, l(1.01587307)
  mad r3.w, r3.w, l(64.000000), l(-63.000000)
  movc r3.w, r5.w, r3.w, r6.w
  max r3.w, r3.w, l(0.00000001)
  rcp r13.z, r3.w
  mad r11.xyzw, cb1[73].xyxy, r11.xyzw, -cb1[73].zwzw
  mul r13.xy, r11.xyxx, r13.zzzz
  add r13.xyz, -r6.xyzx, r13.xyzx
  dp3 r3.w, r13.xyzx, r13.xyzx
  rsq r3.w, r3.w
  mul r3.w, r3.w, -r13.z
  max r2.w, r2.w, r3.w
  ftoi r12.xy, r12.zwzz
  mov r12.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.w, r12.xyzw, t21.yzwx
  ge r5.w, r3.w, l(0.984375)
  mul r6.w, r3.w, l(1.01587307)
  mad r3.w, r3.w, l(64.000000), l(-63.000000)
  movc r3.w, r5.w, r3.w, r6.w
  max r3.w, r3.w, l(0.00000001)
  rcp r12.z, r3.w
  mul r12.xy, r11.zwzz, r12.zzzz
  add r11.xyz, -r6.xyzx, r12.xyzx
  dp3 r3.w, r11.xyzx, r11.xyzx
  rsq r3.w, r3.w
  mul r3.w, r3.w, -r11.z
  max r2.w, r2.w, r3.w
  mad r9.xyzw, r9.xyzw, -r8.xyxy, r4.zwzw
  mul r11.xyzw, r9.xyzw, cb1[44].xyxy
  ftoi r11.xyzw, r11.zwxy
  mov r12.xy, r11.zwzz
  mov r12.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.w, r12.xyzw, t21.yzwx
  ge r5.w, r3.w, l(0.984375)
  mul r6.w, r3.w, l(1.01587307)
  mad r3.w, r3.w, l(64.000000), l(-63.000000)
  movc r3.w, r5.w, r3.w, r6.w
  max r3.w, r3.w, l(0.00000001)
  rcp r12.z, r3.w
  mad r9.xyzw, cb1[73].xyxy, r9.xyzw, -cb1[73].zwzw
  mul r12.xy, r9.xyxx, r12.zzzz
  add r12.xyz, -r6.xyzx, r12.xyzx
  dp3 r3.w, r12.xyzx, r12.xyzx
  rsq r3.w, r3.w
  mul r3.w, r3.w, -r12.z
  max r3.w, r3.w, l(-1.000000)
  mov r11.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r5.w, r11.xyzw, t21.yzwx
  ge r6.w, r5.w, l(0.984375)
  mul r8.z, r5.w, l(1.01587307)
  mad r5.w, r5.w, l(64.000000), l(-63.000000)
  movc r5.w, r6.w, r5.w, r8.z
  max r5.w, r5.w, l(0.00000001)
  rcp r11.z, r5.w
  mul r11.xy, r9.zwzz, r11.zzzz
  add r9.xyz, -r6.xyzx, r11.xyzx
  dp3 r5.w, r9.xyzx, r9.xyzx
  rsq r5.w, r5.w
  mul r5.w, r5.w, -r9.z
  max r3.w, r3.w, r5.w
  mad r7.xyzw, r7.xyzw, -r8.xyxy, r4.zwzw
  mul r9.xyzw, r7.xyzw, cb1[44].xyxy
  ftoi r9.xyzw, r9.zwxy
  mov r11.xy, r9.zwzz
  mov r11.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r5.w, r11.xyzw, t21.yzwx
  ge r6.w, r5.w, l(0.984375)
  mul r8.z, r5.w, l(1.01587307)
  mad r5.w, r5.w, l(64.000000), l(-63.000000)
  movc r5.w, r6.w, r5.w, r8.z
  max r5.w, r5.w, l(0.00000001)
  rcp r11.z, r5.w
  mad r7.xyzw, cb1[73].xyxy, r7.xyzw, -cb1[73].zwzw
  mul r11.xy, r7.xyxx, r11.zzzz
  add r11.xyz, -r6.xyzx, r11.xyzx
  dp3 r5.w, r11.xyzx, r11.xyzx
  rsq r5.w, r5.w
  mul r5.w, r5.w, -r11.z
  max r3.w, r3.w, r5.w
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r5.w, r9.xyzw, t21.yzwx
  ge r6.w, r5.w, l(0.984375)
  mul r7.x, r5.w, l(1.01587307)
  mad r5.w, r5.w, l(64.000000), l(-63.000000)
  movc r5.w, r6.w, r5.w, r7.x
  max r5.w, r5.w, l(0.00000001)
  rcp r9.z, r5.w
  mul r9.xy, r7.zwzz, r9.zzzz
  add r7.xyz, -r6.xyzx, r9.xyzx
  dp3 r5.w, r7.xyzx, r7.xyzx
  rsq r5.w, r5.w
  mul r5.w, r5.w, -r7.z
  max r3.w, r3.w, r5.w
  mad r7.xyzw, r10.xyzw, -r8.xyxy, r4.xyzw
  mul r9.xyzw, r7.xyzw, cb1[44].xyxy
  ftoi r9.xyzw, r9.zwxy
  mov r10.xy, r9.zwzz
  mov r10.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.x, r10.xyzw, t21.xyzw
  ge r4.y, r4.x, l(0.984375)
  mul r5.w, r4.x, l(1.01587307)
  mad r4.x, r4.x, l(64.000000), l(-63.000000)
  movc r4.x, r4.y, r4.x, r5.w
  max r4.x, r4.x, l(0.00000001)
  rcp r10.z, r4.x
  mad r7.xyzw, cb1[73].xyxy, r7.xyzw, -cb1[73].zwzw
  mul r10.xy, r7.xyxx, r10.zzzz
  add r10.xyz, -r6.xyzx, r10.xyzx
  dp3 r4.x, r10.xyzx, r10.xyzx
  rsq r4.x, r4.x
  mul r4.x, r4.x, -r10.z
  max r3.w, r3.w, r4.x
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.x, r9.xyzw, t21.xyzw
  ge r4.y, r4.x, l(0.984375)
  mul r5.w, r4.x, l(1.01587307)
  mad r4.x, r4.x, l(64.000000), l(-63.000000)
  movc r4.x, r4.y, r4.x, r5.w
  max r4.x, r4.x, l(0.00000001)
  rcp r9.z, r4.x
  mul r9.xy, r7.zwzz, r9.zzzz
  add r6.xyz, -r6.xyzx, r9.xyzx
  dp3 r4.x, r6.xyzx, r6.xyzx
  rsq r4.x, r4.x
  mul r4.x, r4.x, -r6.z
  max r3.w, r3.w, r4.x
  mul r4.xy, r8.xyxx, cb1[73].xyxx
  dp2 r5.w, r4.xyxx, r4.xyxx
  rsq r5.w, r5.w
  mul r6.xy, r4.xyxx, r5.wwww
  mov r6.zw, -r6.yyyy
  dp2 r4.x, r5.yxyy, r6.xzxx
  mad r5.xy, -r6.wxww, r4.xxxx, r5.xyxx
  dp3 r4.x, r5.xyzx, r5.xyzx
  rsq r4.x, r4.x
  mul r5.xyz, r4.xxxx, r5.zxyz
  dp2 r4.x, r6.xyxx, r5.yzyy
  ge r4.x, r4.x, l(0.000000)
  movc r4.x, r4.x, l(-1.000000), l(1.000000)
  mov_sat r5.x, -r5.x
  add r4.y, -r5.x, l(1.000000)
  sqrt r4.y, r4.y
  mad r5.y, r5.x, l(-0.01872930), l(0.074261)
  mad r5.y, r5.y, r5.x, l(-0.21211439)
  mad r5.x, r5.y, r5.x, l(1.57072878)
  mul r4.y, r4.y, r5.x
  mul r5.x, r4.y, r4.x
  add r5.y, -|r2.w|, l(1.000000)
  sqrt r5.y, r5.y
  mad r5.z, |r2.w|, l(-0.01872930), l(0.074261)
  mad r5.z, r5.z, |r2.w|, l(-0.21211439)
  mad r5.z, r5.z, |r2.w|, l(1.57072878)
  mul r5.w, r5.y, r5.z
  mad r5.w, r5.w, l(-2.000000), l(3.14159274)
  lt r2.w, r2.w, -r2.w
  and r2.w, r2.w, r5.w
  mad r2.w, r5.z, r5.y, r2.w
  add r5.y, -|r3.w|, l(1.000000)
  sqrt r5.y, r5.y
  mad r5.z, |r3.w|, l(-0.01872930), l(0.074261)
  mad r5.z, r5.z, |r3.w|, l(-0.21211439)
  mad r5.z, r5.z, |r3.w|, l(1.57072878)
  mul r5.w, r5.y, r5.z
  mad r5.w, r5.w, l(-2.000000), l(3.14159274)
  lt r3.w, r3.w, -r3.w
  and r3.w, r3.w, r5.w
  mad r3.w, r5.z, r5.y, r3.w
  mad r2.w, -r4.x, r4.y, -r2.w
  max r2.w, r2.w, l(-1.570800)
  mad r2.w, r4.x, r4.y, r2.w
  mad r3.w, -r4.x, r4.y, r3.w
  min r3.w, r3.w, l(1.570800)
  mad r3.w, r4.x, r4.y, r3.w
  sincos r6.x, r7.x, r5.x
  add r2.w, r2.w, r2.w
  mad r5.y, r2.w, r6.x, r7.x
  mad r2.w, -r4.x, r4.y, r2.w
  sincos null, r2.w, r2.w
  add r2.w, -r2.w, r5.y
  add r3.w, r3.w, r3.w
  mad r5.y, r3.w, r6.x, r7.x
  mad r3.w, -r4.x, r4.y, r3.w
  sincos null, r3.w, r3.w
  add r3.w, -r3.w, r5.y
  mul r3.w, r3.w, l(0.250000)
  mad r2.w, r2.w, l(0.250000), r3.w
  mad r3.w, r5.x, r6.x, r7.x
  div r2.w, r2.w, r3.w
else 
  sample_indexable(texture2d)(float,float,float,float) r3.w, v1.yzyy, t26.yzwx, s6
  sample_l_indexable(texture2d)(float,float,float,float) r4.x, r4.zwzz, t27.xyzw, s8, l(0.000000)
  min r2.w, r3.w, r4.x
endif 
ge r3.w, v0.z, l(0.984375)
mul r4.x, v0.z, l(1.01587307)
mad r4.y, v0.z, l(64.000000), l(-63.000000)
movc r3.w, r3.w, r4.y, r4.x
max r3.w, r3.w, l(0.00000001)
rcp r3.w, r3.w
ftou r4.xy, v0.xyxx
deriv_rtx_coarse r5.xyz, v6.xyzx
deriv_rty_coarse r6.xyz, v6.xyzx
iadd r4.z, cb2[0].y, cb2[0].x
and r7.xy, r0.yyyy, l(0x10000000, 0x20000000, 0, 0)
if_nz r7.x
  add r8.xyz, v6.xyzx, cb1[24].xyzx
  mul r0.y, r3.w, l(0.00781250)
  min r0.y, r0.y, l(15.000000)
  ftou r0.y, r0.y
  ushr r9.xy, r4.xyxx, l(6, 6, 0, 0)
  ishl r9.z, r0.y, l(4)
  and r0.y, cb2[57].z, l(-32)
  iadd r4.w, -r0.y, cb2[57].z
  mov r10.xy, l(0,0,0,0)
  mov r11.w, l(0)
  mov r8.w, l(1.000000)
  mov r7.xzw, l(0,0,0,0)
  mov r12.xyz, l(0,0,0,0)
  mov r13.yz, l(0,0,0,0)
  mov r5.w, l(0)
  loop 
    uge r6.w, r5.w, cb2[57].z
    breakc_nz r6.w
    ushr r10.z, r5.w, l(5)
    iadd r11.xyz, r9.xyzx, r10.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r6.w, r11.xyzw, t35.yzwx
    ieq r9.w, r0.y, r5.w
    ubfe r10.z, r4.w, l(0), r6.w
    movc r6.w, r9.w, r10.z, r6.w
    iadd r9.w, r4.z, r5.w
    mov r11.xyz, r7.xzwx
    mov r14.xyz, r12.xzyx
    mov r15.yz, r13.yyzy
    mov r10.z, r6.w
    loop 
      breakc_z r10.z
      firstbit_lo r10.w, r10.z
      ishl r12.w, l(1), r10.w
      and r13.w, r10.z, r12.w
      if_nz r13.w
        xor r10.z, r10.z, r12.w
        iadd r12.w, r9.w, r10.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r16.xyzw, r12.w, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r17.xy, r12.w, l(16), t11.xyxx
        add r16.xyz, r16.xyzx, -v6.xyzx
        mov r17.z, r16.w
        lt r16.xyz, |r16.xyzx|, r17.zxyz
        and r12.w, r16.y, r16.x
        and r12.w, r16.z, r12.w
        if_nz r12.w
          iadd r10.w, r5.w, r10.w
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r16.xyz, r10.w, l(0), t36.xyzx
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r17.xyz, r10.w, l(16), t36.xyzx
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r18.xyz, r10.w, l(32), t36.xyzx
          mov r19.x, r16.x
          mov r19.y, r17.x
          mov r19.z, r18.x
          dp3 r12.w, r19.xyzx, r19.xyzx
          rsq r12.w, r12.w
          mul r20.xyz, r12.wwww, r19.xyzx
          dp3 r12.w, r20.xyzx, v3.xyzx
          ge r12.w, r12.w, l(0.500000)
          if_nz r12.w
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r21.xyw, r10.w, l(48), t36.xyxz
            mov r19.w, r21.x
            dp4 r19.x, r8.xyzw, r19.xyzw
            mov r22.x, r16.y
            mov r22.y, r17.y
            mov r22.z, r18.y
            mov r22.w, r21.y
            dp4 r19.y, r8.xyzw, r22.xyzw
            mov r21.x, r16.z
            mov r21.y, r17.z
            mov r21.z, r18.z
            dp4 r19.z, r8.xyzw, r21.xyzw
            lt r16.xyz, |r19.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
            and r12.w, r16.y, r16.x
            and r12.w, r16.z, r12.w
            if_nz r12.w
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r16.xyzw, r10.w, l(64), t36.xyzw
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r17.xyzw, r10.w, l(80), t36.xyzw
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r18.xyzw, r10.w, l(96), t36.xyzw
              dp3 r23.x, r5.xyzx, r22.xyzx
              dp3 r23.y, r5.xyzx, r21.xyzx
              dp3 r24.x, r6.xyzx, r22.xyzx
              dp3 r24.y, r6.xyzx, r21.xyzx
              mad r19.xy, r19.yzyy, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
              mul r23.xyz, r23.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
              mul r24.xyz, r24.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
              and r19.zw, r17.yyyz, l(0, 0, 0x0000ffff, 0x0000ffff)
              if_nz r19.z
                ubfe r12.w, l(4), l(24), r17.w
                ishl r12.w, l(1), r12.w
                ushr r13.w, r17.w, l(28)
                ishl r13.w, l(1), r13.w
                ieq r14.w, r19.z, l(4)
                if_nz r14.w
                  and r14.w, r17.w, l(4095)
                  ubfe r15.w, l(12), l(12), r17.w
                  and r20.w, r18.w, l(1023)
                  utof r25.xz, r12.wwww
                  utof r25.y, r13.w
                  mad r26.xy, r19.xyxx, r25.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r26.zw, r25.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r26.xy, r26.zwzz, r26.xyxx
                  utof r27.x, r14.w
                  utof r27.y, r15.w
                  add r26.xy, r26.xyxx, r27.xyxx
                  mul r26.xy, r26.xyxx, cb1[83].xyxx
                  utof r26.z, r20.w
                  mul r27.xyz, r23.zyzz, cb1[83].xyxx
                  mul r27.xyz, r25.xyzx, r27.xyzx
                  mul r28.xyz, r24.zyzz, cb1[83].xyxx
                  mul r25.xyz, r25.xyzx, r28.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r25.xyzw, r26.xyzx, t42.xyzw, s4, r27.xyzx, r25.xyzx
                else 
                  ieq r14.w, r19.z, l(1)
                  if_nz r14.w
                    and r14.w, r17.w, l(4095)
                    ubfe r15.w, l(12), l(12), r17.w
                    and r17.w, r18.w, l(1023)
                    utof r26.xz, r12.wwww
                    utof r26.y, r13.w
                    mad r27.xy, r19.xyxx, r26.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r27.zw, r26.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                    min r27.xy, r27.zwzz, r27.xyxx
                    utof r28.x, r14.w
                    utof r28.y, r15.w
                    add r27.xy, r27.xyxx, r28.xyxx
                    mul r27.xy, r27.xyxx, cb1[83].zwzz
                    utof r27.z, r17.w
                    mul r28.xyz, r23.zyzz, cb1[83].zwzz
                    mul r28.xyz, r26.xyzx, r28.xyzx
                    mul r29.xyz, r24.zyzz, cb1[83].zwzz
                    mul r26.xyz, r26.xyzx, r29.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r25.xyzw, r27.xyzx, t43.xyzw, s4, r28.xyzx, r26.xyzx
                  else 
                    mov r25.xyzw, l(1.000000,1.000000,1.000000,1.000000)
                  endif 
                endif 
                mul r16.xyz, r16.xyzx, r25.xyzx
                mul r12.w, r16.w, r25.w
              else 
                mov r16.xyz, l(0,0,0,0)
                mov r12.w, l(0)
              endif 
              ne r13.w, r17.x, l(1.000000)
              add r14.w, r16.w, r12.w
              mad_sat r14.w, r14.w, r17.x, -r17.x
              movc r12.w, r13.w, r14.w, r12.w
              if_nz r19.w
                ubfe r13.w, l(4), l(24), r18.y
                ishl r13.w, l(1), r13.w
                ushr r14.w, r18.y, l(28)
                ishl r14.w, l(1), r14.w
                ieq r15.w, r19.w, l(2)
                if_nz r15.w
                  and r15.w, r18.y, l(4095)
                  ubfe r17.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r18.yyyw
                  utof r25.xz, r13.wwww
                  utof r25.y, r14.w
                  mad r26.xy, r19.xyxx, r25.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r26.zw, r25.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r26.xy, r26.zwzz, r26.xyxx
                  utof r27.x, r15.w
                  utof r27.y, r17.x
                  add r26.xy, r26.xyxx, r27.xyxx
                  mul r26.xy, r26.xyxx, cb1[84].xyxx
                  utof r26.z, r17.w
                  mul r27.xyz, r23.zyzz, cb1[84].xyxx
                  mul r27.xyz, r25.xyzx, r27.xyzx
                  mul r28.xyz, r24.zyzz, cb1[84].xyxx
                  mul r25.xyz, r25.xyzx, r28.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r15.w, r26.xyzx, t45.yzwx, s4, r27.xyzx, r25.xyzx
                else 
                  ieq r16.w, r19.w, l(4)
                  if_nz r16.w
                    and r16.w, r18.y, l(4095)
                    ubfe r17.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r18.yyyw
                    utof r25.xz, r13.wwww
                    utof r25.y, r14.w
                    mad r19.zw, r19.xxxy, r25.zzzy, l(0.000000, 0.000000, 0.500000, 0.500000)
                    add r26.xy, r25.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                    min r19.zw, r19.zzzw, r26.xxxy
                    utof r26.x, r16.w
                    utof r26.yz, r17.xxwx
                    add r19.zw, r19.zzzw, r26.xxxy
                    mul r26.xy, r19.zwzz, cb1[83].xyxx
                    mul r27.xyz, r23.zyzz, cb1[83].xyxx
                    mul r27.xyz, r25.xyzx, r27.xyzx
                    mul r28.xyz, r24.zyzz, cb1[83].xyxx
                    mul r25.xyz, r25.xyzx, r28.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r15.w, r26.xyzx, t42.yzwx, s4, r27.xyzx, r25.xyzx
                  else 
                    and r16.w, r18.y, l(4095)
                    ubfe r17.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r18.yyyw
                    utof r25.xz, r13.wwww
                    utof r25.y, r14.w
                    mad r19.zw, r19.xxxy, r25.zzzy, l(0.000000, 0.000000, 0.500000, 0.500000)
                    add r26.xy, r25.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                    min r19.zw, r19.zzzw, r26.xxxy
                    utof r26.x, r16.w
                    utof r26.yz, r17.xxwx
                    add r19.zw, r19.zzzw, r26.xxxy
                    mul r26.xy, r19.zwzz, cb1[83].zwzz
                    mul r27.xyz, r23.zyzz, cb1[83].zwzz
                    mul r27.xyz, r25.xyzx, r27.xyzx
                    mul r28.xyz, r24.zyzz, cb1[83].zwzz
                    mul r25.xyz, r25.xyzx, r28.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r15.w, r26.xyzx, t43.yzwx, s4, r27.xyzx, r25.xyzx
                  endif 
                endif 
                add_sat r13.w, -r15.w, l(1.000000)
                mul r16.xyz, r13.wwww, r16.xyzx
              endif 
              ushr r17.xy, r17.zyzz, l(16, 16, 0, 0)
              if_nz r17.x
                ieq r13.w, r17.x, l(2)
                if_nz r13.w
                  ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r10.w, r10.w, l(112), t36.xxxx
                  ubfe r17.zw, l(0, 0, 4, 12), l(0, 0, 24, 12), r18.zzzz
                  ishl r13.w, l(1), r17.z
                  ushr r14.w, r18.z, l(28)
                  ishl r14.w, l(1), r14.w
                  and r15.w, r18.z, l(4095)
                  and r10.w, r10.w, l(1023)
                  utof r25.xz, r13.wwww
                  utof r25.y, r14.w
                  mad r18.yz, r19.xxyx, r25.zzyz, l(0.000000, 0.500000, 0.500000, 0.000000)
                  add r19.zw, r25.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r18.yz, r18.yyzy, r19.zzwz
                  utof r26.x, r15.w
                  utof r26.y, r17.w
                  add r17.zw, r18.yyyz, r26.xxxy
                  mul r26.xy, r17.zwzz, cb1[84].xyxx
                  utof r26.z, r10.w
                  mul r27.xyz, r23.zyzz, cb1[84].xyxx
                  mul r27.xyz, r25.xyzx, r27.xyzx
                  mul r28.xyz, r24.zyzz, cb1[84].xyxx
                  mul r25.xyz, r25.xyzx, r28.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r10.w, r26.xyzx, t45.yzwx, s4, r27.xyzx, r25.xyzx
                else 
                  ieq r13.w, r17.x, l(6)
                  movc r10.w, r13.w, l(0), l(1.000000)
                endif 
              else 
                mov r10.w, l(1.000000)
              endif 
              mul_sat r10.w, r10.w, l(0.76470590)
              if_nz r17.y
                ieq r13.w, r17.y, l(3)
                if_nz r13.w
                  ubfe r17.xyz, l(4, 12, 10, 0), l(24, 12, 10, 0), r18.xxwx
                  ishl r13.w, l(1), r17.x
                  ushr r14.w, r18.x, l(28)
                  ishl r14.w, l(1), r14.w
                  and r15.w, r18.x, l(4095)
                  utof r18.xz, r13.wwww
                  utof r18.y, r14.w
                  mad r17.xw, r19.xxxy, r18.xxxy, l(0.500000, 0.000000, 0.000000, 0.500000)
                  add r19.xy, r18.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r17.xw, r17.xxxw, r19.xxxy
                  utof r19.x, r15.w
                  utof r19.yz, r17.yyzy
                  add r17.xy, r17.xwxx, r19.xyxx
                  mul r19.xy, r17.xyxx, cb1[84].zwzz
                  mul r17.xyz, r23.xyzx, cb1[84].zwzz
                  mul r17.xyz, r18.xyzx, r17.xyzx
                  mul r23.xyz, r24.xyzx, cb1[84].zwzz
                  mul r18.xyz, r18.xyzx, r23.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r17.xyz, r19.xyzx, t44.xyzw, s4, r17.xyzx, r18.xyzx
                else 
                  mov r17.xyz, l(0.500000,0.500000,1.000000,0)
                endif 
                mad r17.xy, r17.xyxx, l(1.99218750, 1.99218750, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
                dp2 r13.w, r17.xyxx, r17.xyxx
                add r13.w, -r13.w, l(1.000000)
                max r13.w, r13.w, l(0.000000)
                sqrt r13.w, r13.w
                mul r14.w, r17.z, r17.z
                mul r14.w, r14.w, l(0.33333334)
                min r14.w, r14.w, l(1.000000)
                dp3 r15.w, r22.xyzx, r22.xyzx
                rsq r15.w, r15.w
                mul r18.xyz, r15.wwww, r22.xyzx
                dp3 r15.w, -r21.xyzx, -r21.xyzx
                rsq r15.w, r15.w
                mul r19.xyz, r15.wwww, -r21.xyzx
                mul r20.xyz, r0.zzzz, r20.xyzx
                mul r18.xyz, r0.zzzz, r18.xyzx
                mul r19.xyz, r0.zzzz, r19.xyzx
                mul r15.w, r10.w, l(-17.000000)
                exp r15.w, r15.w
                add r14.w, r14.w, r15.w
                log r14.w, r14.w
                mul r14.w, r14.w, l(-0.05882353)
                max r10.w, r14.w, l(0.000000)
                mul r17.yzw, r17.yyyy, r19.xxyz
                mad r17.xyz, r18.xyzx, r17.xxxx, r17.yzwy
                mad r17.xyz, r20.xyzx, r13.wwww, r17.xyzx
                dp3 r13.w, r17.xyzx, r17.xyzx
                rsq r13.w, r13.w
                mul r17.xyz, r13.wwww, r17.xyzx
                add r13.w, -r12.w, l(1.000000)
                mov r15.x, r14.x
                mul r18.xyz, r13.wwww, r15.xyzx
                mad r15.xyz, r17.xyzx, r12.wwww, r18.xyzx
                mov r14.x, r15.x
              endif 
              add r13.w, -r12.w, l(1.000000)
              mul r17.xyz, r11.xyzx, r13.wwww
              mad r11.xyz, r16.xyzx, r12.wwww, r17.xyzx
              mul r14.w, r13.w, r14.z
              mad r14.y, r14.y, r13.w, r12.w
              mad r14.z, r10.w, r12.w, r14.w
            endif 
          endif 
        endif 
      endif 
    endloop 
    mov r7.xzw, r11.xxyz
    mov r12.xyz, r14.xzyx
    mov r13.yz, r15.yyzy
    iadd r5.w, r5.w, l(32)
  endloop 
  mov r13.x, r12.x
  mov r12.xy, r12.zyzz
else 
  mov r7.xzw, l(0,0,0,0)
  mov r13.xyz, l(0,0,0,0)
  mov r12.xy, l(0,0,0,0)
endif 
if_nz r7.y
  add r8.xyz, v6.xyzx, cb1[24].xyzx
  iadd r0.y, cb2[57].w, cb2[57].z
  mul r3.w, r3.w, l(0.00781250)
  min r3.w, r3.w, l(15.000000)
  ftou r3.w, r3.w
  ushr r9.xy, r4.xyxx, l(6, 6, 0, 0)
  ishl r9.z, r3.w, l(4)
  and r3.w, cb2[57].z, l(-32)
  iadd r4.w, -r3.w, cb2[57].z
  and r5.w, r0.y, l(-32)
  iadd r6.w, r0.y, -r5.w
  mov r10.xy, l(0,0,0,0)
  mov r11.w, l(0)
  mov r8.w, l(1.000000)
  mov r14.xyz, r7.xzwx
  mov r15.xyz, r13.xyzx
  mov r16.xy, r12.xyxx
  mov r7.y, r3.w
  loop 
    uge r9.w, r7.y, r0.y
    breakc_nz r9.w
    ushr r10.z, r7.y, l(5)
    iadd r11.xyz, r9.xyzx, r10.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r9.w, r11.xyzw, t35.yzwx
    ieq r10.z, r3.w, r7.y
    bfi r10.w, r4.w, l(0), l(0), r9.w
    movc r9.w, r10.z, r10.w, r9.w
    ieq r10.z, r5.w, r7.y
    ubfe r10.w, r6.w, l(0), r9.w
    movc r9.w, r10.z, r10.w, r9.w
    iadd r10.z, r4.z, r7.y
    mov r11.xyz, r14.xyzx
    mov r17.xyz, r15.xyzx
    mov r12.zw, r16.xxxy
    mov r10.w, r9.w
    loop 
      breakc_z r10.w
      firstbit_lo r13.w, r10.w
      ishl r14.w, l(1), r13.w
      and r15.w, r10.w, r14.w
      if_nz r15.w
        xor r10.w, r10.w, r14.w
        iadd r14.w, r10.z, r13.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r18.xyzw, r14.w, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r19.xy, r14.w, l(16), t11.xyxx
        add r18.xyz, r18.xyzx, -v6.xyzx
        mov r19.z, r18.w
        lt r18.xyz, |r18.xyzx|, r19.zxyz
        and r14.w, r18.y, r18.x
        and r14.w, r18.z, r14.w
        if_nz r14.w
          iadd r13.w, r7.y, r13.w
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r18.xyz, r13.w, l(0), t36.xyzx
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r19.xyz, r13.w, l(16), t36.xyzx
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r20.xyz, r13.w, l(32), t36.xyzx
          mov r21.x, r18.x
          mov r21.y, r19.x
          mov r21.z, r20.x
          dp3 r14.w, r21.xyzx, r21.xyzx
          rsq r14.w, r14.w
          mul r22.xyz, r14.wwww, r21.xyzx
          dp3 r14.w, r22.xyzx, v3.xyzx
          ge r14.w, r14.w, l(0.500000)
          if_nz r14.w
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r23.xyw, r13.w, l(48), t36.xyxz
            mov r21.w, r23.x
            dp4 r21.x, r8.xyzw, r21.xyzw
            mov r24.x, r18.y
            mov r24.y, r19.y
            mov r24.z, r20.y
            mov r24.w, r23.y
            dp4 r21.y, r8.xyzw, r24.xyzw
            mov r23.x, r18.z
            mov r23.y, r19.z
            mov r23.z, r20.z
            dp4 r21.z, r8.xyzw, r23.xyzw
            lt r18.xyz, |r21.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
            and r14.w, r18.y, r18.x
            and r14.w, r18.z, r14.w
            if_nz r14.w
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r18.xyzw, r13.w, l(64), t36.xyzw
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r19.xyzw, r13.w, l(80), t36.xyzw
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r20.xyzw, r13.w, l(96), t36.xyzw
              dp3 r25.x, r5.xyzx, r24.xyzx
              dp3 r25.y, r5.xyzx, r23.xyzx
              dp3 r26.x, r6.xyzx, r24.xyzx
              dp3 r26.y, r6.xyzx, r23.xyzx
              mad r16.zw, r21.yyyz, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
              mul r21.xyz, r25.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
              mul r25.xyz, r26.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
              and r26.xy, r19.yzyy, l(0x0000ffff, 0x0000ffff, 0, 0)
              if_nz r26.x
                ubfe r14.w, l(4), l(24), r19.w
                ishl r14.w, l(1), r14.w
                ushr r15.w, r19.w, l(28)
                ishl r15.w, l(1), r15.w
                ieq r17.w, r26.x, l(4)
                if_nz r17.w
                  and r17.w, r19.w, l(4095)
                  ubfe r21.w, l(12), l(12), r19.w
                  and r22.w, r20.w, l(1023)
                  utof r27.xz, r14.wwww
                  utof r27.y, r15.w
                  mad r26.zw, r16.zzzw, r27.zzzy, l(0.000000, 0.000000, 0.500000, 0.500000)
                  add r28.xy, r27.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r26.zw, r26.zzzw, r28.xxxy
                  utof r28.x, r17.w
                  utof r28.y, r21.w
                  add r26.zw, r26.zzzw, r28.xxxy
                  mul r28.xy, r26.zwzz, cb1[83].xyxx
                  utof r28.z, r22.w
                  mul r29.xyz, r21.zyzz, cb1[83].xyxx
                  mul r29.xyz, r27.xyzx, r29.xyzx
                  mul r30.xyz, r25.zyzz, cb1[83].xyxx
                  mul r27.xyz, r27.xyzx, r30.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r27.xyzw, r28.xyzx, t42.xyzw, s4, r29.xyzx, r27.xyzx
                else 
                  ieq r17.w, r26.x, l(1)
                  if_nz r17.w
                    and r17.w, r19.w, l(4095)
                    ubfe r19.w, l(12), l(12), r19.w
                    and r21.w, r20.w, l(1023)
                    utof r28.xz, r14.wwww
                    utof r28.y, r15.w
                    mad r26.xz, r16.zzwz, r28.zzyz, l(0.500000, 0.000000, 0.500000, 0.000000)
                    add r29.xy, r28.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                    min r26.xz, r26.xxzx, r29.xxyx
                    utof r29.x, r17.w
                    utof r29.y, r19.w
                    add r26.xz, r26.xxzx, r29.xxyx
                    mul r29.xy, r26.xzxx, cb1[83].zwzz
                    utof r29.z, r21.w
                    mul r26.xzw, r21.zzyz, cb1[83].zzwz
                    mul r26.xzw, r28.xxyz, r26.xxzw
                    mul r30.xyz, r25.zyzz, cb1[83].zwzz
                    mul r28.xyz, r28.xyzx, r30.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r27.xyzw, r29.xyzx, t43.xyzw, s4, r26.xzwx, r28.xyzx
                  else 
                    mov r27.xyzw, l(1.000000,1.000000,1.000000,1.000000)
                  endif 
                endif 
                mul r18.xyz, r18.xyzx, r27.xyzx
                mul r14.w, r18.w, r27.w
              else 
                mov r18.xyz, l(0,0,0,0)
                mov r14.w, l(0)
              endif 
              ne r15.w, r19.x, l(1.000000)
              add r17.w, r18.w, r14.w
              mad_sat r17.w, r17.w, r19.x, -r19.x
              movc r14.w, r15.w, r17.w, r14.w
              if_nz r26.y
                ubfe r15.w, l(4), l(24), r20.y
                ishl r15.w, l(1), r15.w
                ushr r17.w, r20.y, l(28)
                ishl r17.w, l(1), r17.w
                ieq r18.w, r26.y, l(2)
                if_nz r18.w
                  and r18.w, r20.y, l(4095)
                  ubfe r19.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r20.yyyw
                  utof r27.xz, r15.wwww
                  utof r27.y, r17.w
                  mad r26.xz, r16.zzwz, r27.zzyz, l(0.500000, 0.000000, 0.500000, 0.000000)
                  add r28.xy, r27.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r26.xz, r26.xxzx, r28.xxyx
                  utof r28.x, r18.w
                  utof r28.yz, r19.xxwx
                  add r26.xz, r26.xxzx, r28.xxyx
                  mul r28.xy, r26.xzxx, cb1[84].xyxx
                  mul r26.xzw, r21.zzyz, cb1[84].xxyx
                  mul r26.xzw, r27.xxyz, r26.xxzw
                  mul r29.xyz, r25.zyzz, cb1[84].xyxx
                  mul r27.xyz, r27.xyzx, r29.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r18.w, r28.xyzx, t45.yzwx, s4, r26.xzwx, r27.xyzx
                else 
                  ieq r19.x, r26.y, l(4)
                  if_nz r19.x
                    and r19.x, r20.y, l(4095)
                    ubfe r26.xy, l(12, 10, 0, 0), l(12, 20, 0, 0), r20.ywyy
                    utof r27.xz, r15.wwww
                    utof r27.y, r17.w
                    mad r26.zw, r16.zzzw, r27.zzzy, l(0.000000, 0.000000, 0.500000, 0.500000)
                    add r28.xy, r27.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                    min r26.zw, r26.zzzw, r28.xxxy
                    utof r28.x, r19.x
                    utof r28.yz, r26.xxyx
                    add r19.xw, r26.zzzw, r28.xxxy
                    mul r28.xy, r19.xwxx, cb1[83].xyxx
                    mul r26.xyz, r21.zyzz, cb1[83].xyxx
                    mul r26.xyz, r27.xyzx, r26.xyzx
                    mul r29.xyz, r25.zyzz, cb1[83].xyxx
                    mul r27.xyz, r27.xyzx, r29.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r18.w, r28.xyzx, t42.yzwx, s4, r26.xyzx, r27.xyzx
                  else 
                    and r19.x, r20.y, l(4095)
                    ubfe r26.xy, l(12, 10, 0, 0), l(12, 20, 0, 0), r20.ywyy
                    utof r27.xz, r15.wwww
                    utof r27.y, r17.w
                    mad r26.zw, r16.zzzw, r27.zzzy, l(0.000000, 0.000000, 0.500000, 0.500000)
                    add r28.xy, r27.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                    min r26.zw, r26.zzzw, r28.xxxy
                    utof r28.x, r19.x
                    utof r28.yz, r26.xxyx
                    add r19.xw, r26.zzzw, r28.xxxy
                    mul r28.xy, r19.xwxx, cb1[83].zwzz
                    mul r26.xyz, r21.zyzz, cb1[83].zwzz
                    mul r26.xyz, r27.xyzx, r26.xyzx
                    mul r29.xyz, r25.zyzz, cb1[83].zwzz
                    mul r27.xyz, r27.xyzx, r29.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r18.w, r28.xyzx, t43.yzwx, s4, r26.xyzx, r27.xyzx
                  endif 
                endif 
                add_sat r15.w, -r18.w, l(1.000000)
                mul r18.xyz, r15.wwww, r18.xyzx
              endif 
              ushr r19.xy, r19.zyzz, l(16, 16, 0, 0)
              if_nz r19.x
                ieq r15.w, r19.x, l(2)
                if_nz r15.w
                  ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r13.w, r13.w, l(112), t36.xxxx
                  ubfe r19.zw, l(0, 0, 4, 12), l(0, 0, 24, 12), r20.zzzz
                  ishl r15.w, l(1), r19.z
                  ushr r17.w, r20.z, l(28)
                  ishl r17.w, l(1), r17.w
                  and r18.w, r20.z, l(4095)
                  and r13.w, r13.w, l(1023)
                  utof r26.xz, r15.wwww
                  utof r26.y, r17.w
                  mad r20.yz, r16.zzwz, r26.zzyz, l(0.000000, 0.500000, 0.500000, 0.000000)
                  add r27.xy, r26.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r20.yz, r20.yyzy, r27.xxyx
                  utof r27.x, r18.w
                  utof r27.y, r19.w
                  add r19.zw, r20.yyyz, r27.xxxy
                  mul r27.xy, r19.zwzz, cb1[84].xyxx
                  utof r27.z, r13.w
                  mul r28.xyz, r21.zyzz, cb1[84].xyxx
                  mul r28.xyz, r26.xyzx, r28.xyzx
                  mul r29.xyz, r25.zyzz, cb1[84].xyxx
                  mul r26.xyz, r26.xyzx, r29.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r13.w, r27.xyzx, t45.yzwx, s4, r28.xyzx, r26.xyzx
                else 
                  ieq r15.w, r19.x, l(6)
                  movc r13.w, r15.w, l(0), l(1.000000)
                endif 
              else 
                mov r13.w, l(1.000000)
              endif 
              mul_sat r13.w, r13.w, l(0.76470590)
              if_nz r19.y
                ieq r15.w, r19.y, l(3)
                if_nz r15.w
                  ubfe r19.xyz, l(4, 12, 10, 0), l(24, 12, 10, 0), r20.xxwx
                  ishl r15.w, l(1), r19.x
                  ushr r17.w, r20.x, l(28)
                  ishl r17.w, l(1), r17.w
                  and r18.w, r20.x, l(4095)
                  utof r20.xz, r15.wwww
                  utof r20.y, r17.w
                  mad r16.zw, r16.zzzw, r20.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
                  add r19.xw, r20.zzzy, l(-0.500000, 0.000000, 0.000000, -0.500000)
                  min r16.zw, r16.zzzw, r19.xxxw
                  utof r26.x, r18.w
                  utof r26.yz, r19.yyzy
                  add r16.zw, r16.zzzw, r26.xxxy
                  mul r26.xy, r16.zwzz, cb1[84].zwzz
                  mul r19.xyz, r21.xyzx, cb1[84].zwzz
                  mul r19.xyz, r20.xyzx, r19.xyzx
                  mul r21.xyz, r25.xyzx, cb1[84].zwzz
                  mul r20.xyz, r20.xyzx, r21.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r19.xyz, r26.xyzx, t44.xyzw, s4, r19.xyzx, r20.xyzx
                else 
                  mov r19.xyz, l(0.500000,0.500000,1.000000,0)
                endif 
                mad r16.zw, r19.xxxy, l(0.000000, 0.000000, 1.99218750, 1.99218750), l(0.000000, 0.000000, -1.000000, -1.000000)
                dp2 r15.w, r16.zwzz, r16.zwzz
                add r15.w, -r15.w, l(1.000000)
                max r15.w, r15.w, l(0.000000)
                sqrt r15.w, r15.w
                mul r17.w, r19.z, r19.z
                mul r17.w, r17.w, l(0.33333334)
                min r17.w, r17.w, l(1.000000)
                dp3 r18.w, r24.xyzx, r24.xyzx
                rsq r18.w, r18.w
                mul r19.xyz, r18.wwww, r24.xyzx
                dp3 r18.w, -r23.xyzx, -r23.xyzx
                rsq r18.w, r18.w
                mul r20.xyz, r18.wwww, -r23.xyzx
                mul r21.xyz, r0.zzzz, r22.xyzx
                mul r19.xyz, r0.zzzz, r19.xyzx
                mul r20.xyz, r0.zzzz, r20.xyzx
                mul r18.w, r13.w, l(-17.000000)
                exp r18.w, r18.w
                add r17.w, r17.w, r18.w
                log r17.w, r17.w
                mul r17.w, r17.w, l(-0.05882353)
                max r13.w, r17.w, l(0.000000)
                mul r20.xyz, r16.wwww, r20.xyzx
                mad r19.xyz, r19.xyzx, r16.zzzz, r20.xyzx
                mad r19.xyz, r21.xyzx, r15.wwww, r19.xyzx
                dp3 r15.w, r19.xyzx, r19.xyzx
                rsq r15.w, r15.w
                mul r19.xyz, r15.wwww, r19.xyzx
                add r15.w, -r14.w, l(1.000000)
                mul r20.xyz, r15.wwww, r17.xyzx
                mad r17.xyz, r19.xyzx, r14.wwww, r20.xyzx
              endif 
              add r15.w, -r14.w, l(1.000000)
              mul r19.xyz, r11.xyzx, r15.wwww
              mad r11.xyz, r18.xyzx, r14.wwww, r19.xyzx
              mul r16.z, r12.w, r15.w
              mad r12.z, r12.z, r15.w, r14.w
              mad r12.w, r13.w, r14.w, r16.z
            endif 
          endif 
        endif 
      endif 
    endloop 
    mov r14.xyz, r11.xyzx
    mov r15.xyz, r17.xyzx
    mov r16.xy, r12.zwzz
    iadd r7.y, r7.y, l(32)
  endloop 
  mov r7.xzw, r14.xxyz
  mov r13.xyz, r15.xyzx
  mov r12.xy, r16.xyxx
endif 
mov_sat r12.x, r12.x
add r0.y, -r12.x, l(1.000000)
mad o2.xyz, r1.xyzx, r0.yyyy, r7.xzwx
mad r0.z, r1.w, r0.y, r12.x
mad r1.xyz, r2.xyzx, r0.yyyy, r13.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
mad r2.y, r0.w, r0.y, r12.y
log r0.y, |r2.w|
mul r5.xyz, r0.yyyy, l(0.600000, 0.850000, 0.870000, 0.000000)
exp r5.xyz, r5.xyzx
mul r0.y, v6.y, cb1[5].z
mad r0.y, v6.x, cb1[4].z, r0.y
mad r0.y, v6.z, cb1[6].z, r0.y
dp3 r0.w, -v6.xyzx, -v6.xyzx
rsq r0.w, r0.w
mul r6.xyz, r0.wwww, -v6.xyzx
ine r2.z, cb1[92].x, l(0)
utof r4.zw, r4.yyyx
dp2 r2.w, r4.wzww, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r2.w, r2.w
mul r2.w, r2.w, l(52.982918)
frc r2.w, r2.w
mad r2.w, r2.w, l(6.28318548), cb1[70].w
sincos r7.x, r8.x, r2.w
dp2 r2.w, r4.zwzz, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r2.w, r2.w
mul r2.w, r2.w, l(52.982918)
frc r2.w, r2.w
mad r2.w, r2.w, l(6.28318548), cb1[70].w
sincos r9.x, r10.x, r2.w
dp3_sat r2.x, r1.xyzx, r6.xyzx
dp3 r2.w, -r6.xyzx, r1.xyzx
add r2.w, r2.w, r2.w
mad r11.xyz, r1.xyzx, -r2.wwww, -r6.xyzx
mul r2.w, r2.y, l(17.000000)
exp r2.w, r2.w
add r2.w, r2.w, l(2.000000)
div r2.w, l(2.000000), r2.w
sqrt r3.w, r2.w
mul r9.yzw, cb1[9].xxyw, -cb1[24].yyyy
mad r9.yzw, -cb1[24].xxxx, cb1[8].xxyw, r9.yyzw
mad r9.yzw, -cb1[24].zzzz, cb1[10].xxyw, r9.yyzw
add r9.yzw, r9.yyzw, cb1[11].xxyw
add r12.xyz, v6.xyzx, cb1[24].xyzx
sqrt r4.z, r3.w
mad r4.z, r4.z, l(0.500000), l(0.500000)
mul r4.z, r4.z, r4.z
mul r4.w, r4.z, l(0.500000)
mad r4.z, -r4.z, l(0.500000), l(1.000000)
mad r5.w, r2.x, r4.z, r4.w
mul r4.zw, r4.zzzw, r5.wwww
dp3 r5.w, r1.xyzx, cb2[17].xyzx
ge r6.w, l(0.000000), |r5.w|
if_nz r6.w
  mov r13.y, l(0)
endif 
if_z r6.w
  mul r10.yzw, v6.yyyy, cb2[29].xxyz
  mad r10.yzw, v6.xxxx, cb2[28].xxyz, r10.yyzw
  mad r10.yzw, v6.zzzz, cb2[30].xxyz, r10.yyzw
  add r10.yzw, r10.yyzw, cb2[31].xxyz
  add r6.w, r10.w, -cb2[17].w
  mad r6.w, -r6.w, l(0.00006104), l(1.000000)
  mov_sat r7.z, r6.w
  eq r7.z, r6.w, r7.z
  if_nz r7.z
    mov r7.zw, l(0,0,0,0)
    loop 
      ge r8.w, r7.z, l(3.000000)
      breakc_nz r8.w
      ftou r8.w, r7.z
      add r13.zw, r10.yyyz, -cb2[r8.w + 20].xxxy
      max r13.z, |r13.w|, |r13.z|
      mul r7.w, r13.z, cb2[r8.w + 20].z
      lt r8.w, r7.w, l(1.000000)
      if_nz r8.w
        break 
      endif 
      add r7.z, r7.z, l(1.000000)
      mov r7.w, l(0)
    endloop 
  else 
    mov r7.zw, l(0,0,3.000000,0)
  endif 
  ge r8.w, r7.z, l(3.000000)
  if_nz r8.w
    mul r14.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
    rcp r15.xz, r14.xxxx
    mov r15.y, -r15.z
    mad r14.xyz, r10.yzyy, r15.xyzx, r14.yzyy
    add r15.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r14.xyz, r14.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r14.xyz, r15.xyzx, r14.xyzx
    mul r13.zw, r14.zzzy, cb2[32].xxxx
    round_ni r13.zw, r13.zzzw
    mul r13.w, r13.w, cb2[27].x
    mad r13.z, r13.w, cb2[32].x, r13.z
    ftou r13.z, r13.z
    iadd r13.z, r13.z, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r13.w, r13.z, l(0), t23.xxxx
    and r14.w, r13.w, l(0x40000000)
    ishl r15.x, r13.w, l(2)
    if_z r14.w
      and r14.w, r13.w, l(0x01ffffff)
      iadd r16.x, r13.z, r14.w
      ushr r13.z, r13.w, l(25)
      utof r13.z, r13.z
      mul r14.xyz, r13.zzzz, r14.xyzx
      frc r14.xyz, r14.xyzx
      mul r14.xyz, r14.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
      ftou r14.xyz, r14.xyzx
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.z, r16.x, l(0), t23.xxxx
      ushr r13.zw, r14.zzzy, l(0, 0, 6, 6)
      and r14.w, r16.z, l(0xc0000000)
      iadd r15.y, r16.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.y, r15.y, l(0), t23.xxxx
      movc r13.w, r13.w, r16.z, r15.y
      ushr r15.y, r13.w, l(13)
      movc r13.z, r13.z, r15.y, r13.w
      and r13.z, r13.z, l(8191)
      iadd r17.x, r13.z, r16.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.z, r17.x, l(0), t23.xxxx
      mov r16.y, l(0)
      mov r17.y, l(1)
      movc r15.yzw, r14.wwww, r16.xxyz, r17.xxyz
      movc r17.yz, r14.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r13.zw, r14.zzzy, r17.yyyy
      and r13.zw, r13.zzzw, l(0, 0, 1, 1)
      and r16.w, r15.w, l(0xc0000000)
      iadd r17.y, r15.y, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.y, r17.y, l(0), t23.xxxx
      movc r13.w, r13.w, r15.w, r17.y
      ushr r17.y, r13.w, l(13)
      movc r13.z, r13.z, r17.y, r13.w
      and r13.z, r13.z, l(8191)
      iadd r17.x, r13.z, r15.y
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.w, r17.x, l(0), t23.xxxx
      movc r15.yzw, r16.wwww, r15.yyzw, r17.xxzw
      movc r15.yzw, r14.wwww, r16.xxyz, r15.yyzw
      and r13.z, r15.w, l(0xc0000000)
      if_z r13.z
        iadd r13.z, -r15.z, l(6)
        ushr r13.zw, r14.zzzy, r13.zzzz
        or r14.w, r15.w, l(0x40000000)
        bfi r13.w, l(1), l(1), r13.w, l(0)
        bfi r13.z, l(1), l(0), r13.z, r13.w
        imul null, r13.z, r13.z, l(10)
        ushr r13.z, r14.w, r13.z
        and r13.z, r13.z, l(1023)
        iadd r16.x, r13.z, r15.y
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.w, r16.x, l(0), t23.xxxx
        iadd r16.yz, r15.zzzz, l(0, 1, 2, 0)
        iadd r13.z, -r16.y, l(6)
        ushr r13.zw, r14.zzzy, r13.zzzz
        and r14.w, r16.w, l(0xc0000000)
        or r15.z, r16.w, l(0x40000000)
        bfi r13.w, l(1), l(1), r13.w, l(0)
        bfi r13.z, l(1), l(0), r13.z, r13.w
        imul null, r13.z, r13.z, l(10)
        ushr r13.z, r15.z, r13.z
        and r13.z, r13.z, l(1023)
        iadd r17.x, r13.z, r16.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.z, r17.x, l(0), t23.xxxx
        mov r17.y, r16.z
        movc r17.xyz, r14.wwww, r16.xywx, r17.xyzx
        iadd r13.z, -r17.y, l(6)
        ushr r13.zw, r14.zzzy, r13.zzzz
        and r15.z, r17.z, l(0xc0000000)
        or r16.y, r17.z, l(0x40000000)
        bfi r13.w, l(1), l(1), r13.w, l(0)
        bfi r13.z, l(1), l(0), r13.z, r13.w
        imul null, r13.z, r13.z, l(10)
        ushr r13.z, r16.y, r13.z
        and r13.z, r13.z, l(1023)
        iadd r18.x, r13.z, r17.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.y, r18.x, l(0), t23.xxxx
        movc r13.zw, r15.zzzz, r17.xxxz, r18.xxxy
        movc r15.yw, r14.wwww, r16.xxxw, r13.zzzw
      endif 
      and r13.z, r15.w, l(0xc0000000)
      if_z r13.z
        ubfe r13.w, l(14), l(15), r15.w
        utof r13.w, r13.w
        mul r13.w, r13.w, cb2[27].w
        mul r13.w, r13.w, l(0.00006104)
        and r16.xy, r15.wwww, l(0x00007fff, 0x20000000, 0, 0)
        utof r14.w, r16.x
        mul r14.w, r14.w, cb2[27].w
        mul r14.w, r14.w, l(0.00003052)
        and r15.z, r14.y, l(3)
        iadd r15.z, r15.z, r15.y
        iadd r15.z, r15.z, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.z, r15.z, l(0), t23.xxxx
        bfi r16.xzw, l(2, 0, 2, 1), l(3, 0, 1, 4), r14.xxyz, l(0, 0, 0, 0)
        ushr r14.x, r15.z, r16.x
        and r14.x, r14.x, l(255)
        utof r14.x, r14.x
        mul r14.x, r14.w, r14.x
        mad r14.x, r14.x, l(0.00392157), r13.w
        iadd r14.y, r16.z, l(1)
        ubfe r14.z, l(1), l(1), r14.z
        iadd r14.y, r14.z, r14.y
        iadd r14.y, r14.y, r15.y
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r14.y, r14.y, l(0), t23.xxxx
        ushr r14.y, r14.y, r16.w
        and r14.y, r14.y, l(0x0000ffff)
        utof r14.y, r14.y
        mul r14.y, r14.w, r14.y
        mad r13.w, r14.y, l(0.00001526), r13.w
        movc r15.x, r16.y, r14.x, r13.w
      else 
        and r13.w, r15.w, l(0x80000000)
        iadd r14.x, r15.y, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r14.x, r14.x, l(0), t23.xxxx
        movc r13.w, r13.w, r14.x, l(0)
        ishl r14.x, r15.w, l(2)
        ushr r14.y, r13.w, l(16)
        f16tof32 r14.y, r14.y
        and r13.w, r13.w, l(0x0000ffff)
        f16tof32 r13.w, r13.w
        mad r14.x, r10.y, r14.y, r14.x
        mad r13.w, r10.z, r13.w, r14.x
        movc r15.x, r13.z, r13.w, r15.x
      endif 
    endif 
    mad r10.w, -cb2[27].z, l(2.000000), r10.w
    lt r10.w, r15.x, r10.w
    movc r13.y, r10.w, l(0), l(1.000000)
  endif 
  if_z r8.w
    if_z cb2[58].y
      ftou r8.w, r7.z
      add r13.zw, r10.yyyz, -cb2[r8.w + 20].xxxy
      mul r13.zw, r13.zzzw, cb2[r8.w + 20].zzzz
      mad r14.xy, r13.zwzz, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r8.w, cb2[26].y
      add r14.z, r7.z, r8.w
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r8.w, r14.xyzx, t13.xxxx, s13, r6.w
      sample_l_indexable(texture2darray)(float,float,float,float) r10.w, r14.xyzx, t31.yzwx, s0, l(0.000000)
      add r8.w, r8.w, r10.w
      add_sat r8.w, r8.w, l(-1.000000)
      mul r10.w, r8.w, r8.w
      mul r13.y, r8.w, r10.w
    endif 
    if_nz cb2[58].y
      mov r14.x, -r7.x
      ftou r8.w, r7.z
      add r7.z, r7.z, l(1.000000)
      min r7.z, r7.z, l(2.000000)
      add r7.w, -r7.w, l(1.000000)
      mul r7.w, r7.w, l(28.000000)
      ftou r7.zw, r7.zzzw
      add r13.zw, r10.yyyz, -cb2[r8.w + 20].xxxy
      mul r13.zw, r13.zzzw, cb2[r8.w + 20].zzzz
      mad r13.zw, r13.zzzw, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
      add r10.yz, r10.yyzy, -cb2[r7.z + 20].xxyx
      mul r10.yz, r10.yyzy, cb2[r7.z + 20].zzzz
      mad r10.yz, r10.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      mov r14.y, r8.x
      mov r14.z, r7.x
      mov r10.w, l(0)
      mov r14.w, l(0)
      loop 
        uge r15.x, r14.w, l(8)
        breakc_nz r15.x
        ult r15.x, r7.w, r14.w
        movc r15.yz, r15.xxxx, r10.yyzy, r13.zzwz
        movc r15.w, r15.x, cb2[r7.z + 20].w, cb2[r8.w + 20].w
        movc r15.x, r15.x, r7.z, r8.w
        dp2 r16.x, icb[r14.w + 0].yxyy, r14.xyxx
        dp2 r16.y, icb[r14.w + 0].yxyy, r14.yzyy
        mad r16.xy, r16.xyxx, r15.wwww, r15.yzyy
        iadd r15.x, r15.x, cb2[26].y
        utof r16.z, r15.x
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r15.x, r16.xyzx, t13.xxxx, s13, r6.w
        sample_l_indexable(texture2darray)(float,float,float,float) r15.y, r16.xyzx, t31.yxzw, s0, l(0.000000)
        add r15.x, r15.y, r15.x
        add_sat r15.x, r15.x, l(-1.000000)
        mad r10.w, r15.x, l(0.125000), r10.w
        iadd r14.w, r14.w, l(1)
      endloop 
      mul r6.w, r10.w, r10.w
      mul r13.y, r10.w, r6.w
    endif 
  endif 
endif 
lt r6.w, l(0.000000), |r5.w|
if_nz r6.w
  lt r6.w, l(0.000000), r13.y
  if_nz r6.w
    mul r6.w, r2.w, cb2[18].w
    mul r6.w, r6.w, l(0.250000)
    if_nz cb2[23].x
      mov r12.w, l(1.000000)
      dp4 r7.z, cb2[24].xyzw, r12.xyzw
      dp4 r7.w, cb2[25].xyzw, r12.xyzw
      frc r14.xy, r7.zwzz
      iadd r7.z, l(-1), cb2[23].x
      utof r14.z, r7.z
      sample_l_indexable(texture2darray)(float,float,float,float) r10.yzw, r14.xyzx, t20.wxyz, s2, l(0.000000)
      add r10.yzw, r10.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
      mad r10.yzw, cb2[23].yyyy, r10.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
      mul r10.yzw, r10.yyzw, cb2[18].xxyz
    else 
      mov r10.yzw, cb2[18].xxyz
    endif 
    ushr r7.z, cb2[53].x, l(16)
    ult r7.w, l(0), r7.z
    and r7.w, r2.z, r7.w
    if_nz r7.w
      iadd r7.z, r7.z, cb2[0].x
      iadd r7.z, r7.z, l(-1)
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r7.w, r7.z, l(52), t12.xxxx
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.xyzw, r7.z, l(68), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r7.z, l(84), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r7.z, l(132), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r7.z, l(148), t12.xyzw
      mad r8.w, |r5.w|, l(-0.200000), l(0.400000)
      lt r12.w, r5.w, l(0.000000)
      movc r8.w, r12.w, -r8.w, r8.w
      mad r18.xyz, r1.xyzx, r8.wwww, v6.xyzx
      mov r18.w, l(1.000000)
      dp4 r14.x, r14.xyzw, r18.xyzw
      dp4 r14.y, r15.xyzw, r18.xyzw
      mad r13.zw, r14.xxxy, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
      add r13.zw, r17.zzzw, r13.zzzw
      mul r13.zw, r17.xxxy, r13.zzzw
      div r14.xy, r7.wwww, r16.xzxx
      add r14.zw, -r14.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
      ge r14.zw, r13.zzzw, r14.zzzw
      ge r14.xy, r14.xyxx, r13.zwzz
      or r14.xy, r14.xyxx, r14.zwzz
      or r8.w, r14.y, r14.x
      if_z r8.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r8.w, r7.z, l(28), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.xyzw, r7.z, l(100), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xy, r7.z, l(164), t12.xyxx
        dp4 r7.z, r14.xyzw, r18.xyzw
        mov_sat r13.zw, r13.zzzw
        mad r14.xy, r13.zwzz, r16.xzxx, r16.ywyy
        add r7.z, r15.x, r7.z
        div r7.z, r7.z, r15.y
        max r7.z, r7.z, l(0.00006104)
        and r8.w, r8.w, l(0x0000ffff)
        if_nz cb2[58].y
          mov r15.x, -r7.x
          utof r16.z, r8.w
          mov r15.y, r8.x
          mov r15.z, r7.x
          mov r12.w, l(0)
          mov r13.z, l(0)
          loop 
            ige r13.w, r13.z, l(8)
            breakc_nz r13.w
            dp2 r17.x, icb[r13.z + 0].yxyy, r15.xyxx
            dp2 r17.y, icb[r13.z + 0].yxyy, r15.yzyy
            mad r16.xy, r17.xyxx, r7.wwww, r14.xyxx
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r13.w, r16.xyzx, t9.xxxx, s13, r7.z
            mad r12.w, r13.w, l(0.125000), r12.w
            iadd r13.z, r13.z, l(1)
          endloop 
        else 
          utof r14.z, r8.w
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.w, r14.xyzx, t9.xxxx, s13, r7.z
        endif 
        mul r7.z, r12.w, r12.w
        mul r7.z, r12.w, r7.z
      else 
        mov r7.z, l(1.000000)
      endif 
      mul r13.y, r7.z, r13.y
    else 
      and r7.z, cb2[53].x, l(0x0000ffff)
      ult r7.w, l(0), r7.z
      not r8.w, r2.z
      and r7.w, r7.w, r8.w
      if_nz r7.w
        iadd r7.z, r7.z, cb2[0].x
        iadd r7.z, r7.z, l(-1)
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r7.w, r7.z, l(52), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.xyzw, r7.z, l(68), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r7.z, l(84), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r7.z, l(132), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r7.z, l(148), t12.xyzw
        mad r8.w, |r5.w|, l(-0.200000), l(0.400000)
        lt r12.w, r5.w, l(0.000000)
        movc r8.w, r12.w, -r8.w, r8.w
        mad r18.xyz, r1.xyzx, r8.wwww, v6.xyzx
        mov r18.w, l(1.000000)
        dp4 r14.x, r14.xyzw, r18.xyzw
        dp4 r14.y, r15.xyzw, r18.xyzw
        mad r13.zw, r14.xxxy, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
        add r13.zw, r17.zzzw, r13.zzzw
        mul r13.zw, r17.xxxy, r13.zzzw
        div r14.xy, r7.wwww, r16.xzxx
        add r14.zw, -r14.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
        ge r14.zw, r13.zzzw, r14.zzzw
        ge r14.xy, r14.xyxx, r13.zwzz
        or r14.xy, r14.xyxx, r14.zwzz
        or r8.w, r14.y, r14.x
        if_z r8.w
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r8.w, r7.z, l(28), t12.xxxx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.xyzw, r7.z, l(100), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xy, r7.z, l(164), t12.xyxx
          dp4 r7.z, r14.xyzw, r18.xyzw
          mov_sat r13.zw, r13.zzzw
          mad r14.xy, r13.zwzz, r16.xzxx, r16.ywyy
          add r7.z, r15.x, r7.z
          div r7.z, r7.z, r15.y
          max r7.z, r7.z, l(0.00006104)
          and r8.w, r8.w, l(0x0000ffff)
          if_nz cb2[58].y
            mov r15.x, -r7.x
            utof r16.z, r8.w
            mov r15.y, r8.x
            mov r15.z, r7.x
            mov r12.w, l(0)
            mov r13.z, l(0)
            loop 
              ige r13.w, r13.z, l(8)
              breakc_nz r13.w
              dp2 r17.x, icb[r13.z + 0].yxyy, r15.xyxx
              dp2 r17.y, icb[r13.z + 0].yxyy, r15.yzyy
              mad r16.xy, r17.xyxx, r7.wwww, r14.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r13.w, r16.xyzx, t9.xxxx, s13, r7.z
              mad r12.w, r13.w, l(0.125000), r12.w
              iadd r13.z, r13.z, l(1)
            endloop 
          else 
            utof r14.z, r8.w
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.w, r14.xyzx, t9.xxxx, s13, r7.z
          endif 
          mul r7.z, r12.w, r12.w
          mul r7.z, r12.w, r7.z
        else 
          mov r7.z, l(1.000000)
        endif 
        mul r13.y, r7.z, r13.y
      endif 
    endif 
    mad r7.z, -r2.x, l(0.500000), l(1.000000)
    mad r7.z, -|r5.w|, r7.z, l(1.000000)
    mul r7.z, r7.z, r7.z
    mad r7.z, -r7.z, l(0.620000), l(0.620000)
    add r7.z, -|r5.w|, r7.z
    mad r7.z, r3.w, r7.z, |r5.w|
    lt r7.w, l(0.000000), r5.w
    mov_sat r5.w, r5.w
    mad r14.xyz, -v6.xyzx, r0.wwww, cb2[17].xyzx
    dp3 r0.w, r14.xyzx, r14.xyzx
    rsq r0.w, r0.w
    mul r14.xyz, r0.wwww, r14.xyzx
    dp3 r0.w, r14.xyzx, r6.xyzx
    dp3 r8.w, r1.xyzx, r14.xyzx
    mad r12.w, |r8.w|, r2.w, -|r8.w|
    mad r8.w, |r8.w|, r12.w, l(1.000000)
    mad r12.w, r5.w, r4.z, r4.w
    mul r8.w, r8.w, r8.w
    mul r8.w, r12.w, r8.w
    rcp r8.w, r8.w
    mul r5.w, r6.w, r5.w
    mul r5.w, r5.w, r8.w
    add_sat r0.w, -r0.w, l(1.000000)
    mul r6.w, r0.w, r0.w
    mul r6.w, r6.w, r6.w
    mul r0.w, r0.w, r6.w
    mul r0.w, r0.w, r5.w
    and r6.w, r7.z, r7.w
    movc r14.xyz, r7.wwww, l(0,0,0,0), r7.zzzz
    and r13.zw, r0.wwww, r7.wwww
    and r15.xyz, r5.wwww, r7.wwww
    dp3 r0.w, r10.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
    mul r0.w, r0.w, r13.y
    mov r13.x, l(1.000000)
    mov r5.w, cb2[17].x
    mov r7.zw, cb2[17].yyyz
    mov r16.xy, r6.wwww
    mov r8.w, r13.w
  else 
    mov r0.w, l(0)
    mov r10.yzw, l(0,0,0,0)
    mov r5.w, l(0)
    mov r7.zw, l(0,0,0,0)
    mov r16.xy, l(0,0,0,0)
    mov r14.xyz, l(0,0,0,0)
    mov r6.w, l(0)
    mov r15.xyz, l(0,0,0,0)
    mov r8.w, l(0)
    mov r13.xyzw, l(0,0,0,0)
  endif 
else 
  mov r0.w, l(0)
  mov r10.yzw, l(0,0,0,0)
  mov r5.w, l(0)
  mov r7.zw, l(0,0,0,0)
  mov r16.xy, l(0,0,0,0)
  mov r14.xyz, l(0,0,0,0)
  mov r6.w, l(0)
  mov r15.xyz, l(0,0,0,0)
  mov r8.w, l(0)
  mov r13.xyzw, l(0,0,0,0)
endif 
mul r0.y, r0.y, l(0.00781250)
max r0.y, r0.y, l(0.000000)
min r0.y, r0.y, l(15.000000)
ftou r0.y, r0.y
ushr r17.xy, r4.xyxx, l(6, 6, 0, 0)
ishl r17.z, r0.y, l(4)
mov r18.x, -r7.x
not r0.y, r2.z
mad r4.x, -r2.x, l(0.500000), l(1.000000)
mov r19.xy, l(0,0,0,0)
mov r20.w, l(0)
mov r21.xyz, v6.xyzx
mov r21.w, l(1.000000)
mov r22.w, l(1.000000)
mov r18.z, r7.x
mov r23.w, l(1.000000)
mov r24.z, l(1.000000)
mov r25.w, l(1.000000)
mov r18.yw, r8.xxxx
mov r7.y, r18.w
mov r26.w, l(1.000000)
mov r8.y, r18.x
mov r8.z, r7.x
mov r27.w, l(1.000000)
mov r28.x, r8.x
mov r28.y, r18.x
mov r28.z, r7.x
mov r29.x, r8.x
mov r29.y, r18.x
mov r29.z, r7.x
mov r30.x, r8.x
mov r30.y, r18.x
mov r30.z, r7.x
mov r31.xyz, l(0,0,0,0)
mov r32.xyz, l(0,0,0,0)
mov r33.xyz, l(0,0,0,0)
mov r34.xyz, l(0,0,0,0)
mov r35.xyz, r10.yzwy
mov r36.x, r5.w
mov r36.yz, r7.zzwz
mov r37.xy, r16.xyxx
mov r37.z, r6.w
mov r38.xyz, r14.xyzx
mov r39.xyz, r15.xyzx
mov r40.x, r8.w
mov r40.yz, r13.zzwz
mov r41.x, cb2[58].y
mov r41.y, r0.w
mov r16.zw, r13.xxxy
mov r4.y, l(0)
loop 
  uge r12.w, r4.y, cb2[0].x
  breakc_nz r12.w
  ushr r19.z, r4.y, l(5)
  iadd r20.xyz, r17.xyzx, r19.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r12.w, r20.xyzw, t6.yzwx
  mov r20.xyz, r31.xyzx
  mov r42.xyz, r32.xyzx
  mov r43.xyz, r33.xyzx
  mov r44.xyz, r34.xyzx
  mov r45.xyz, r35.xyzx
  mov r46.xyz, r36.xyzx
  mov r47.xyz, r37.xyzx
  mov r48.xyz, r39.xyzx
  mov r49.xyz, r40.xyzx
  mov r19.zw, r16.zzzw
  mov r14.w, r41.x
  mov r15.w, r41.y
  mov r50.xyz, r38.xyzx
  mov r17.w, r12.w
  loop 
    breakc_z r17.w
    firstbit_lo r24.w, r17.w
    ishl r28.w, l(1), r24.w
    and r29.w, r17.w, r28.w
    if_nz r29.w
      xor r17.w, r17.w, r28.w
      iadd r24.w, r4.y, r24.w
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r51.xyzw, r24.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r52.xy, r24.w, l(16), t11.xyxx
      add r51.xyz, r51.xyzx, -v6.xyzx
      mov r52.z, r51.w
      lt r51.xyz, |r51.xyzx|, r52.zxyz
      and r28.w, r51.y, r51.x
      and r28.w, r51.z, r28.w
      if_nz r28.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r51.xyzw, r24.w, l(0), t12.wxyz
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r52.xyzw, r24.w, l(16), t12.zxyw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r53.xyzw, r24.w, l(32), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r54.xyzw, r24.w, l(48), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r55.xyzw, r24.w, l(64), t12.yzwx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r56.xyzw, r24.w, l(80), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r57.xyzw, r24.w, l(96), t12.yzwx
        ubfe r28.w, l(3), l(24), r52.w
        switch r28.w
          case l(4)
          lt r28.w, l(0.000000), r57.x
          mov r58.xy, r56.zwzz
          mov r58.z, r57.w
          mad r59.xyz, -r58.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r51.yzwy
          add r60.xyz, r59.xyzx, -v6.xyzx
          dp3 r29.w, r58.xyzx, r60.xyzx
          div_sat r30.w, -r29.w, r57.x
          mad r61.xyz, r30.wwww, r58.xyzx, r59.xyzx
          movc r61.xyz, r28.wwww, r61.xyzx, r51.yzwy
          add r61.xyz, r61.xyzx, -v6.xyzx
          dp3 r31.w, r61.xyzx, r61.xyzx
          rsq r32.w, r31.w
          mul r61.xyz, r32.wwww, r61.xyzx
          dp3 r32.w, r1.xyzx, r61.xyzx
          lt r33.w, l(0.000000), |r32.w|
          if_nz r33.w
            sqrt r33.w, r31.w
            mul r34.w, r54.x, r54.x
            div r31.w, r34.w, r31.w
            min r31.w, r31.w, l(1.000000)
            mad_sat r41.zw, r33.wwww, r53.xxxz, r53.yyyw
            mul r62.xy, r41.zwzz, r41.zwzz
            mad r41.zw, r41.zzzw, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
            mul r41.zw, r41.zzzw, r62.xxxy
            mul r31.w, r31.w, r41.z
            mul r62.x, r41.w, r31.w
            lt r31.w, l(0.000000), r62.x
            if_nz r31.w
              ubfe r31.w, l(3), l(27), r52.w
              ine r31.w, r31.w, l(1)
              if_nz r31.w
                mad r31.w, |r32.w|, l(-0.200000), l(0.400000)
                lt r33.w, r32.w, l(0.000000)
                movc r31.w, r33.w, -r31.w, r31.w
                mad r63.xyz, r1.xyzx, r31.wwww, v6.xyzx
                add r63.xyz, -r55.xyzx, r63.xyzx
                max r31.w, |r63.z|, |r63.y|
                max r31.w, r31.w, |r63.x|
                div r31.w, r56.x, r31.w
                add r31.w, r56.y, r31.w
                dp3 r33.w, r63.xyzx, r63.xyzx
                rsq r33.w, r33.w
                max r31.w, r31.w, l(0.00006104)
                and r34.w, r52.w, l(0x0000ffff)
                utof r64.w, r34.w
                mov r62.y, l(0)
                mov r34.w, l(0)
                loop 
                  ige r35.w, r34.w, l(8)
                  breakc_nz r35.w
                  dp2 r65.y, icb[r34.w + 0].yxyy, r18.xyxx
                  dp2 r65.z, icb[r34.w + 0].yxyy, r18.yzyy
                  mul r65.yz, r54.yyyy, r65.yyzy
                  mul r65.x, r10.x, r65.y
                  mul r65.w, r9.x, r65.y
                  mad r64.xyz, r63.xyzx, r33.wwww, r65.xzwx
                  sample_c_lz_indexable(texturecubearray)(float,float,float,float) r35.w, r64.xyzw, t10.xxxx, s13, r31.w
                  mad r62.y, r35.w, l(0.125000), r62.y
                  iadd r34.w, r34.w, l(1)
                endloop 
              else 
                mov r62.y, l(1.000000)
              endif 
              mul r31.w, r62.y, r62.x
              lt r31.w, l(0.000000), r31.w
              if_nz r31.w
                mul r31.w, r2.w, r52.x
                mul r31.w, r31.w, l(0.250000)
                dp3 r33.w, r58.xyzx, r11.xyzx
                dp3 r34.w, r11.xyzx, r60.xyzx
                mad r35.w, -r33.w, r33.w, r57.x
                mad r29.w, r33.w, r34.w, -r29.w
                div_sat r29.w, r29.w, r35.w
                div r33.w, r35.w, r57.x
                mul r33.w, r33.w, l(10.000000)
                min r33.w, r33.w, l(1.000000)
                add r29.w, -r30.w, r29.w
                mad r29.w, r33.w, r29.w, r30.w
                mad r58.xyz, r29.wwww, r58.xyzx, r59.xyzx
                movc r58.xyz, r28.wwww, r58.xyzx, r51.yzwy
                add r58.xyz, r58.xyzx, -v6.xyzx
                dp3 r28.w, r58.xyzx, r58.xyzx
                rsq r28.w, r28.w
                mul r59.xyz, r28.wwww, r58.xyzx
                ubfe r29.w, l(4), l(16), r52.w
                ult r30.w, l(0), r29.w
                and r30.w, r2.z, r30.w
                if_nz r30.w
                  iadd r29.w, r29.w, cb2[0].x
                  iadd r29.w, r29.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r30.w, r29.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r60.xyzw, r29.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r63.xyzw, r29.w, l(116), t12.xyzw
                  mad r33.w, |r32.w|, l(-0.200000), l(0.400000)
                  lt r34.w, r32.w, l(0.000000)
                  movc r33.w, r34.w, -r33.w, r33.w
                  mad r22.xyz, r1.xyzx, r33.wwww, v6.xyzx
                  dp4 r33.w, r60.xyzw, r22.xyzw
                  dp4 r34.w, r63.xyzw, r22.xyzw
                  lt r35.w, r34.w, r33.w
                  if_z r35.w
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r60.xyzw, r29.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r63.xyzw, r29.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r64.xyzw, r29.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r65.xyzw, r29.w, l(148), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.zw, r29.w, l(164), t12.xxxy
                    dp4 r60.x, r60.xyzw, r22.xyzw
                    dp4 r60.y, r63.xyzw, r22.xyzw
                    div r22.xy, r60.xyxx, r34.wwww
                    mad r22.xy, r22.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r22.xy, r65.zwzz, r22.xyxx
                    mul r22.xy, r65.xyxx, r22.xyxx
                    div r60.xy, r30.wwww, r64.xzxx
                    add r60.zw, -r60.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                    ge r60.zw, r22.xxxy, r60.zzzw
                    ge r60.xy, r60.xyxx, r22.xyxx
                    or r60.xy, r60.xyxx, r60.zwzz
                    or r22.z, r60.y, r60.x
                    mov_sat r22.xy, r22.xyxx
                    mad r60.xy, r22.xyxx, r64.xzxx, r64.ywyy
                    mul r22.x, r34.w, r41.w
                    mad r22.y, r41.z, r34.w, r33.w
                    div r22.x, r22.y, r22.x
                  else 
                    mov r22.z, l(-1)
                  endif 
                  or r22.y, r35.w, r22.z
                  if_z r22.y
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r22.y, r29.w, l(28), t12.xxxx
                    max r22.x, r22.x, l(0.00006104)
                    and r22.y, r22.y, l(0x0000ffff)
                    if_nz r14.w
                      utof r63.z, r22.y
                      mov r22.z, l(0)
                      mov r29.w, l(0)
                      loop 
                        ige r33.w, r29.w, l(8)
                        breakc_nz r33.w
                        dp2 r64.x, icb[r29.w + 0].yxyy, r18.xwxx
                        dp2 r64.y, icb[r29.w + 0].xyxx, r7.xyxx
                        mad r63.xy, r64.xyxx, r30.wwww, r60.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r33.w, r63.xyzx, t9.xxxx, s13, r22.x
                        mad r22.z, r33.w, l(0.125000), r22.z
                        iadd r29.w, r29.w, l(1)
                      endloop 
                    else 
                      utof r60.z, r22.y
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.z, r60.xyzx, t9.xxxx, s13, r22.x
                    endif 
                    mul r22.x, r22.z, r22.z
                    mul r22.x, r22.z, r22.x
                  else 
                    mov r22.x, l(1.000000)
                  endif 
                  mul r62.y, r22.x, r62.y
                else 
                  ubfe r22.x, l(4), l(20), r52.w
                  ult r22.y, l(0), r22.x
                  and r22.y, r0.y, r22.y
                  if_nz r22.y
                    iadd r22.x, r22.x, cb2[0].x
                    iadd r22.x, r22.x, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r22.y, r22.x, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r60.xyzw, r22.x, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r63.xyzw, r22.x, l(116), t12.xyzw
                    mad r29.w, |r32.w|, l(-0.200000), l(0.400000)
                    lt r30.w, r32.w, l(0.000000)
                    movc r29.w, r30.w, -r29.w, r29.w
                    mad r23.xyz, r1.xyzx, r29.wwww, v6.xyzx
                    dp4 r29.w, r60.xyzw, r23.xyzw
                    dp4 r30.w, r63.xyzw, r23.xyzw
                    lt r33.w, r30.w, r29.w
                    if_z r33.w
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r60.xyzw, r22.x, l(68), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r63.xyzw, r22.x, l(84), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r64.xyzw, r22.x, l(132), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r65.xyzw, r22.x, l(148), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.zw, r22.x, l(164), t12.xxxy
                      dp4 r60.x, r60.xyzw, r23.xyzw
                      dp4 r60.y, r63.xyzw, r23.xyzw
                      div r23.xy, r60.xyxx, r30.wwww
                      mad r23.xy, r23.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                      add r23.xy, r65.zwzz, r23.xyxx
                      mul r23.xy, r65.xyxx, r23.xyxx
                      div r60.xy, r22.yyyy, r64.xzxx
                      add r60.zw, -r60.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                      ge r60.zw, r23.xxxy, r60.zzzw
                      ge r60.xy, r60.xyxx, r23.xyxx
                      or r60.xy, r60.xyxx, r60.zwzz
                      or r23.z, r60.y, r60.x
                      mov_sat r23.xy, r23.xyxx
                      mad r60.xy, r23.xyxx, r64.xzxx, r64.ywyy
                      mul r23.x, r30.w, r41.w
                      mad r23.y, r41.z, r30.w, r29.w
                      div r23.x, r23.y, r23.x
                    else 
                      mov r23.z, l(-1)
                    endif 
                    or r23.y, r33.w, r23.z
                    if_z r23.y
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r22.x, r22.x, l(28), t12.xxxx
                      max r23.x, r23.x, l(0.00006104)
                      and r22.x, r22.x, l(0x0000ffff)
                      if_nz r14.w
                        utof r63.z, r22.x
                        mov r23.yz, l(0,0,0,0)
                        loop 
                          ige r29.w, r23.z, l(8)
                          breakc_nz r29.w
                          dp2 r64.x, icb[r23.z + 0].xyxx, r8.xyxx
                          dp2 r64.y, icb[r23.z + 0].yxyy, r8.xzxx
                          mad r63.xy, r64.xyxx, r22.yyyy, r60.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r29.w, r63.xyzx, t9.xxxx, s13, r23.x
                          mad r23.y, r29.w, l(0.125000), r23.y
                          iadd r23.z, r23.z, l(1)
                        endloop 
                      else 
                        utof r60.z, r22.x
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.y, r60.xyzx, t9.xxxx, s13, r23.x
                      endif 
                      mul r22.x, r23.y, r23.y
                      mul r22.x, r23.y, r22.x
                    else 
                      mov r22.x, l(1.000000)
                    endif 
                    mul r62.y, r22.x, r62.y
                  endif 
                endif 
                mul r22.x, r62.y, r62.x
                mad r22.y, -|r32.w|, r4.x, l(1.000000)
                mul r22.y, r22.y, r22.y
                mad r22.y, -r22.y, l(0.620000), l(0.620000)
                add r22.y, -|r32.w|, r22.y
                mad r22.y, r3.w, r22.y, |r32.w|
                lt r23.x, l(0.000000), r32.w
                dp3_sat r23.z, r1.xyzx, r59.xyzx
                mad r58.xyz, r58.xyzx, r28.wwww, r6.xyzx
                dp3 r28.w, r58.xyzx, r58.xyzx
                rsq r28.w, r28.w
                mul r58.xyz, r28.wwww, r58.xyzx
                dp3 r28.w, r58.xyzx, r6.xyzx
                dp3 r29.w, r1.xyzx, r58.xyzx
                mad r30.w, |r29.w|, r2.w, -|r29.w|
                mad r29.w, |r29.w|, r30.w, l(1.000000)
                mad r30.w, r23.z, r4.z, r4.w
                mul r29.w, r29.w, r29.w
                mul r29.w, r30.w, r29.w
                rcp r29.w, r29.w
                mul r23.z, r31.w, r23.z
                mul r23.z, r23.z, r29.w
                add_sat r28.w, -r28.w, l(1.000000)
                mul r29.w, r28.w, r28.w
                mul r29.w, r29.w, r29.w
                mul r28.w, r28.w, r29.w
                mul r28.w, r23.z, r28.w
                and r58.xyz, r22.yyyy, r23.xxxx
                movc r22.y, r23.x, l(0), r22.y
                and r59.xyz, r23.xxxx, r28.wwww
                and r23.x, r23.z, r23.x
                mov r52.x, r51.x
                dp3 r23.z, r52.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
                mul r23.z, r22.x, r23.z
                lt r28.w, r15.w, r23.z
                if_nz r28.w
                  mul r28.w, r19.w, r19.z
                  mul r60.xyz, r45.xyzx, r28.wwww
                  mad r20.xyz, r60.xyzx, r47.xyzx, r20.xyzx
                  mad r42.xyz, r60.xyzx, r50.xyzx, r42.xyzx
                  mad r44.xyz, r60.xyzx, r48.xyzx, r44.xyzx
                  mad r43.xyz, r60.xyzx, r49.xyzx, r43.xyzx
                  mov r48.xyz, r23.xxxx
                  mov r15.w, r23.z
                  mov r50.xyz, r22.yyyy
                  mov r45.xyz, r52.xyzx
                  mov r46.xyz, r61.xyzx
                  mov r47.xyz, r58.xyzx
                  mov r49.xyz, r59.xyzx
                  mov r19.zw, r62.xxxy
                else 
                  mul r58.xyw, r22.xxxx, r52.xyxz
                  mad r20.xyz, r58.xywx, r58.zzzz, r20.xyzx
                  mad r42.xyz, r58.xywx, r22.yyyy, r42.xyzx
                  mad r44.xyz, r58.xywx, r23.xxxx, r44.xyzx
                  mad r43.xyz, r58.xywx, r59.xyzx, r43.xyzx
                endif 
              endif 
            endif 
          endif 
          break 
          case l(2)
          mov r58.xy, r54.zwzz
          mov r58.z, r55.w
          add r58.xyz, r58.xyzx, -v6.xyzx
          dp3 r22.x, r58.xyzx, r58.xyzx
          rsq r22.x, r22.x
          mul r59.xyz, r22.xxxx, r58.xyzx
          dp3 r22.y, r1.xyzx, r59.xyzx
          lt r23.x, l(0.000000), |r22.y|
          if_nz r23.x
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r60.xyzw, r24.w, l(112), t12.yzwx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r61.xyzw, r24.w, l(128), t12.zxyw
            mov r63.xyz, r60.xyzx
            mov r63.w, r61.y
            dp4 r23.x, r63.xyzw, r21.xyzw
            lt r23.z, r23.x, l(1.000000)
            if_nz r23.z
              mov r62.xzw, l(1.000000,0,1.000000,1.000000)
              mov r64.x, l(0)
            else 
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r65.xyzw, r24.w, l(172), t12.yzwx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r66.xyzw, r24.w, l(188), t12.wxyz
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r67.xyzw, r24.w, l(204), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.z, r24.w, l(236), t12.xxxx
              add r68.xyz, r51.yzwy, -v6.xyzx
              mul r28.w, r54.x, r54.x
              dp3 r29.w, r68.xyzx, r68.xyzx
              div r28.w, r28.w, r29.w
              min r28.w, r28.w, l(1.000000)
              mad_sat r41.zw, r23.xxxx, r53.xxxz, r53.yyyw
              mul r53.xy, r41.zwzz, r41.zwzz
              mad r41.zw, r41.zzzw, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
              mul r41.zw, r41.zzzw, r53.xxxy
              mul r28.w, r28.w, r41.z
              mul r28.w, r41.w, r28.w
              mov r55.w, r56.x
              dp4 r53.x, r55.xyzw, r21.xyzw
              mov r68.xyz, r56.yzwy
              mov r68.w, r57.w
              dp4 r53.y, r68.xyzw, r21.xyzw
              div r24.xy, r53.xyxx, r23.xxxx
              lt r23.x, r65.w, l(0.00048828)
              if_nz r23.x
                mov r66.y, r67.x
                mad_sat r41.zw, |r24.xxxy|, r66.zzzw, r66.xxxy
                mul r53.xy, r41.zwzz, r41.zwzz
                mad r41.zw, r41.zzzw, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
                mul r41.zw, r41.zzzw, r53.xxxy
                mul r23.x, r41.w, r41.z
              else 
                mov r65.w, r66.y
                mul_sat r53.xyzw, |r24.yyxx|, r65.xyzw
                log r53.xyzw, r53.xyzw
                mul r53.xyzw, r53.xyzw, r66.xxxx
                exp r53.xyzw, r53.xyzw
                add r41.zw, r53.zzzw, r53.xxxy
                log r41.zw, r41.zzzw
                mul r41.zw, r41.zzzw, r67.xxxx
                exp r41.zw, r41.zzzw
                mul r29.w, r41.z, r66.z
                mad r30.w, r66.w, r41.w, l(-1.000000)
                mad r29.w, r66.w, r41.w, -r29.w
                div_sat r29.w, r30.w, r29.w
                mul r30.w, r29.w, r29.w
                mad r29.w, r29.w, l(-2.000000), l(3.000000)
                mul r23.x, r29.w, r30.w
              endif 
              mul r64.x, r23.x, r28.w
              and r23.x, r23.z, l(255)
              if_nz r23.x
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r53.xyz, r24.w, l(220), t12.xyzx
                dp3 r23.z, r67.yzwy, r24.xyzx
                dp3 r24.x, r53.xyzx, r24.xyzx
                frc r53.x, r23.z
                frc r53.y, r24.x
                iadd r23.x, r23.x, l(-1)
                utof r53.z, r23.x
                sample_l_indexable(texture2darray)(float,float,float,float) r62.xzw, r53.xyzx, t20.xwyz, s2, l(0.000000)
              else 
                mov r62.xzw, l(1.000000,0,1.000000,1.000000)
              endif 
            endif 
            mov r51.yz, r52.yyzy
            mul r51.xyz, r62.xzwx, r51.xyzx
            lt r23.x, l(0.000000), r64.x
            if_nz r23.x
              ubfe r23.x, l(3), l(27), r52.w
              ine r23.x, r23.x, l(1)
              if_nz r23.x
                mad r23.x, |r22.y|, l(-0.200000), l(0.400000)
                lt r23.z, r22.y, l(0.000000)
                movc r23.x, r23.z, -r23.x, r23.x
                mad r25.xyz, r1.xyzx, r23.xxxx, v6.xyzx
                mov r60.xyz, r57.xyzx
                dp4 r23.x, r60.xyzw, r25.xyzw
                dp4 r23.z, r63.xyzw, r25.xyzw
                ge r24.x, r23.z, r23.x
                if_nz r24.x
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r61.y, r24.w, l(144), t12.xxxx
                  mov r55.w, r56.x
                  dp4 r24.x, r55.xyzw, r25.xyzw
                  mov r57.xyz, r56.yzwy
                  dp4 r24.y, r57.xyzw, r25.xyzw
                  div r24.xy, r24.xyxx, r23.zzzz
                  mad_sat r24.xy, r24.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  mad r25.xy, r24.xyxx, r61.zwzz, r61.xyxx
                  div r23.x, r23.x, r23.z
                  max r23.x, r23.x, l(0.00006104)
                  and r23.z, r52.w, l(0x0000ffff)
                  if_nz r14.w
                    utof r53.z, r23.z
                    mov r24.xy, l(0,0,0,0)
                    loop 
                      ige r24.w, r24.y, l(8)
                      breakc_nz r24.w
                      dp2 r55.x, icb[r24.y + 0].xyxx, r28.xyxx
                      dp2 r55.y, icb[r24.y + 0].yxyy, r28.xzxx
                      mad r53.xy, r55.xyxx, r54.yyyy, r25.xyxx
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.w, r53.xyzx, t9.xxxx, s13, r23.x
                      mad r24.x, r24.w, l(0.125000), r24.x
                      iadd r24.y, r24.y, l(1)
                    endloop 
                  else 
                    utof r25.z, r23.z
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.x, r25.xyzx, t9.xxxx, s13, r23.x
                  endif 
                  mul r23.x, r24.x, r24.x
                  mul r64.y, r24.x, r23.x
                else 
                  mov r64.y, l(1.000000)
                endif 
              else 
                mov r64.y, l(1.000000)
              endif 
              mul r23.x, r64.y, r64.x
              lt r23.x, l(0.000000), r23.x
              if_nz r23.x
                mul r23.x, r2.w, r52.x
                mul r23.x, r23.x, l(0.250000)
                ubfe r23.z, l(4), l(16), r52.w
                ult r24.y, l(0), r23.z
                and r24.y, r2.z, r24.y
                if_nz r24.y
                  iadd r23.z, r23.z, cb2[0].x
                  iadd r23.z, r23.z, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r24.y, r23.z, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r53.xyzw, r23.z, l(68), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r54.xyzw, r23.z, l(84), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r55.xyzw, r23.z, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r56.xyzw, r23.z, l(116), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r57.xyzw, r23.z, l(132), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r60.xyzw, r23.z, l(148), t12.xyzw
                  mad r24.w, |r22.y|, l(-0.200000), l(0.400000)
                  lt r25.x, r22.y, l(0.000000)
                  movc r24.w, r25.x, -r24.w, r24.w
                  mad r26.xyz, r1.xyzx, r24.wwww, v6.xyzx
                  dp4 r25.x, r53.xyzw, r26.xyzw
                  dp4 r25.y, r54.xyzw, r26.xyzw
                  dp4 r24.w, r55.xyzw, r26.xyzw
                  dp4 r25.z, r56.xyzw, r26.xyzw
                  lt r26.x, r25.z, r24.w
                  div r25.xy, r25.xyxx, r25.zzzz
                  mad r25.xy, r25.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r25.xy, r60.zwzz, r25.xyxx
                  mul r25.xy, r60.xyxx, r25.xyxx
                  div r26.yz, r24.yyyy, r57.xxzx
                  add r41.zw, -r26.yyyz, l(0.000000, 0.000000, 1.000000, 1.000000)
                  ge r41.zw, r25.xxxy, r41.zzzw
                  ge r26.yz, r26.yyzy, r25.xxyx
                  or r26.yz, r26.yyzy, r41.zzwz
                  or r26.y, r26.z, r26.y
                  or r26.x, r26.x, r26.y
                  if_z r26.x
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r26.x, r23.z, l(28), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r26.yz, r23.z, l(164), t12.xxyx
                    mov_sat r25.xy, r25.xyxx
                    mad r52.xy, r25.xyxx, r57.xzxx, r57.ywyy
                    mul r23.z, r25.z, r26.z
                    mad r24.w, r26.y, r25.z, r24.w
                    div r23.z, r24.w, r23.z
                    max r23.z, r23.z, l(0.00006104)
                    and r24.w, r26.x, l(0x0000ffff)
                    if_nz r14.w
                      utof r25.z, r24.w
                      mov r26.xy, l(0,0,0,0)
                      loop 
                        ige r26.z, r26.y, l(8)
                        breakc_nz r26.z
                        dp2 r53.x, icb[r26.y + 0].xyxx, r29.xyxx
                        dp2 r53.y, icb[r26.y + 0].yxyy, r29.xzxx
                        mad r25.xy, r53.xyxx, r24.yyyy, r52.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r25.x, r25.xyzx, t9.xxxx, s13, r23.z
                        mad r26.x, r25.x, l(0.125000), r26.x
                        iadd r26.y, r26.y, l(1)
                      endloop 
                    else 
                      utof r52.z, r24.w
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r26.x, r52.xyzx, t9.xxxx, s13, r23.z
                    endif 
                    mul r23.z, r26.x, r26.x
                    mul r23.z, r26.x, r23.z
                  else 
                    mov r23.z, l(1.000000)
                  endif 
                  mul r64.y, r23.z, r64.y
                else 
                  ubfe r23.z, l(4), l(20), r52.w
                  ult r24.y, l(0), r23.z
                  and r24.y, r0.y, r24.y
                  if_nz r24.y
                    iadd r23.z, r23.z, cb2[0].x
                    iadd r23.z, r23.z, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r24.y, r23.z, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r52.xyzw, r23.z, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r53.xyzw, r23.z, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r54.xyzw, r23.z, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r55.xyzw, r23.z, l(116), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r56.xyzw, r23.z, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r57.xyzw, r23.z, l(148), t12.xyzw
                    mad r24.w, |r22.y|, l(-0.200000), l(0.400000)
                    lt r25.x, r22.y, l(0.000000)
                    movc r24.w, r25.x, -r24.w, r24.w
                    mad r27.xyz, r1.xyzx, r24.wwww, v6.xyzx
                    dp4 r25.x, r52.xyzw, r27.xyzw
                    dp4 r25.y, r53.xyzw, r27.xyzw
                    dp4 r24.w, r54.xyzw, r27.xyzw
                    dp4 r25.z, r55.xyzw, r27.xyzw
                    lt r26.y, r25.z, r24.w
                    div r25.xy, r25.xyxx, r25.zzzz
                    mad r25.xy, r25.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r25.xy, r57.zwzz, r25.xyxx
                    mul r25.xy, r57.xyxx, r25.xyxx
                    div r27.xy, r24.yyyy, r56.xzxx
                    add r41.zw, -r27.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                    ge r41.zw, r25.xxxy, r41.zzzw
                    ge r27.xy, r27.xyxx, r25.xyxx
                    or r27.xy, r27.xyxx, r41.zwzz
                    or r26.z, r27.y, r27.x
                    or r26.y, r26.y, r26.z
                    if_z r26.y
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r26.y, r23.z, l(28), t12.xxxx
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r27.xy, r23.z, l(164), t12.xyxx
                      mov_sat r25.xy, r25.xyxx
                      mad r52.xy, r25.xyxx, r56.xzxx, r56.ywyy
                      mul r23.z, r25.z, r27.y
                      mad r24.w, r27.x, r25.z, r24.w
                      div r23.z, r24.w, r23.z
                      max r23.z, r23.z, l(0.00006104)
                      and r24.w, r26.y, l(0x0000ffff)
                      if_nz r14.w
                        utof r25.z, r24.w
                        mov r26.yz, l(0,0,0,0)
                        loop 
                          ige r27.x, r26.z, l(8)
                          breakc_nz r27.x
                          dp2 r27.x, icb[r26.z + 0].xyxx, r30.xyxx
                          dp2 r27.y, icb[r26.z + 0].yxyy, r30.xzxx
                          mad r25.xy, r27.xyxx, r24.yyyy, r52.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r25.x, r25.xyzx, t9.xxxx, s13, r23.z
                          mad r26.y, r25.x, l(0.125000), r26.y
                          iadd r26.z, r26.z, l(1)
                        endloop 
                      else 
                        utof r52.z, r24.w
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r26.y, r52.xyzx, t9.xxxx, s13, r23.z
                      endif 
                      mul r23.z, r26.y, r26.y
                      mul r23.z, r26.y, r23.z
                    else 
                      mov r23.z, l(1.000000)
                    endif 
                    mul r64.y, r23.z, r64.y
                  endif 
                endif 
                mul r23.z, r64.y, r64.x
                mad r24.y, -|r22.y|, r4.x, l(1.000000)
                mul r24.y, r24.y, r24.y
                mad r24.y, -r24.y, l(0.620000), l(0.620000)
                add r24.y, -|r22.y|, r24.y
                mad r24.y, r3.w, r24.y, |r22.y|
                lt r24.w, l(0.000000), r22.y
                mov_sat r22.y, r22.y
                mad r25.xyz, r58.xyzx, r22.xxxx, r6.xyzx
                dp3 r22.x, r25.xyzx, r25.xyzx
                rsq r22.x, r22.x
                mul r25.xyz, r22.xxxx, r25.xyzx
                dp3 r22.x, r25.xyzx, r6.xyzx
                dp3 r25.x, r1.xyzx, r25.xyzx
                mad r25.y, |r25.x|, r2.w, -|r25.x|
                mad r25.x, |r25.x|, r25.y, l(1.000000)
                mad r25.y, r22.y, r4.z, r4.w
                mul r25.x, r25.x, r25.x
                mul r25.x, r25.y, r25.x
                rcp r25.x, r25.x
                mul r22.y, r23.x, r22.y
                mul r22.y, r22.y, r25.x
                add_sat r22.x, -r22.x, l(1.000000)
                mul r23.x, r22.x, r22.x
                mul r23.x, r23.x, r23.x
                mul r22.x, r22.x, r23.x
                mul r22.x, r22.x, r22.y
                and r25.xyz, r24.yyyy, r24.wwww
                movc r23.x, r24.w, l(0), r24.y
                and r27.xyz, r22.xxxx, r24.wwww
                and r22.x, r22.y, r24.w
                dp3 r22.y, r51.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
                mul r22.y, r22.y, r23.z
                lt r24.y, r15.w, r22.y
                if_nz r24.y
                  mul r24.y, r19.w, r19.z
                  mul r52.xyz, r45.xyzx, r24.yyyy
                  mad r20.xyz, r52.xyzx, r47.xyzx, r20.xyzx
                  mad r42.xyz, r52.xyzx, r50.xyzx, r42.xyzx
                  mad r44.xyz, r52.xyzx, r48.xyzx, r44.xyzx
                  mad r43.xyz, r52.xyzx, r49.xyzx, r43.xyzx
                  mov r48.xyz, r22.xxxx
                  mov r15.w, r22.y
                  mov r50.xyz, r23.xxxx
                  mov r45.xyz, r51.xyzx
                  mov r46.xyz, r59.xyzx
                  mov r47.xyz, r25.xyzx
                  mov r49.xyz, r27.xyzx
                  mov r19.zw, r64.xxxy
                else 
                  mul r51.xyz, r51.xyzx, r23.zzzz
                  mad r20.xyz, r51.xyzx, r25.zzzz, r20.xyzx
                  mad r42.xyz, r51.xyzx, r23.xxxx, r42.xyzx
                  mad r44.xyz, r51.xyzx, r22.xxxx, r44.xyzx
                  mad r43.xyz, r51.xyzx, r27.xyzx, r43.xyzx
                endif 
              endif 
            endif 
          endif 
          break 
          default 
          break 
        endswitch 
      endif 
    endif 
  endloop 
  mov r31.xyz, r20.xyzx
  mov r32.xyz, r42.xyzx
  mov r33.xyz, r43.xyzx
  mov r34.xyz, r44.xyzx
  mov r35.xyz, r45.xyzx
  mov r36.xyz, r46.xyzx
  mov r37.xyz, r47.xyzx
  mov r39.xyz, r48.xyzx
  mov r40.xyz, r49.xyzx
  mov r16.zw, r19.zzzw
  mov r41.y, r15.w
  mov r38.xyz, r50.xyzx
  iadd r4.y, r4.y, l(32)
endloop 
mov r4.z, l(0)
mul r4.xy, r36.yxyy, l(1.000000, -1.000000, 0.000000, 0.000000)
mul r6.xyz, r4.yzxy, r36.zxyz
mad r6.xyz, r36.yzxy, r4.zxyz, -r6.xyzx
mul r7.xyz, r12.yyyy, cb1[9].xywx
mad r7.xyz, r12.xxxx, cb1[8].xywx, r7.xyzx
mad r7.xyz, r12.zzzz, cb1[10].xywx, r7.xyzx
add r7.xyz, r9.yzwy, r7.xyzx
rcp r8.z, r7.z
mul r0.yw, r7.xxxy, r8.zzzz
mad r8.xy, r0.ywyy, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
mad r7.xyw, r36.xyxz, l(3.000000, 3.000000, 0.000000, 3.000000), r12.xyxz
dp2 r0.y, v0.xyxx, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r0.y, r0.y
mul r0.y, r0.y, l(52.982918)
frc r0.y, r0.y
mul r0.w, r0.y, l(3.141600)
mad r0.w, cb1[70].w, l(0.500000), r0.w
sincos r9.x, r10.x, r0.w
mul r10.yzw, r6.xxyz, r9.xxxx
mad r10.xyz, r10.xxxx, r4.xyzx, r10.yzwy
mad r10.xyz, r10.xyzx, l(0.120000, 0.120000, 0.120000, 0.000000), r7.xywx
mul r12.xyz, r10.yyyy, cb1[9].xywx
mad r10.xyw, r10.xxxx, cb1[8].xyxw, r12.xyxz
mad r10.xyz, r10.zzzz, cb1[10].xywx, r10.xywx
add r10.xyz, r9.yzwy, r10.xyzx
mul r2.zw, r10.xxxy, l(0.000000, 0.000000, 0.500000, -0.500000)
rcp r10.z, r10.z
mad r10.xy, r2.zwzz, r10.zzzz, l(0.500000, 0.500000, 0.000000, 0.000000)
mov r12.xyz, -r8.xyzx
add r10.xyz, r10.xyzx, r12.xyzx
add r0.w, r0.w, l(3.141600)
sincos r9.x, r13.x, r0.w
mul r6.xyz, r6.xyzx, r9.xxxx
mad r4.xyz, r13.xxxx, r4.xyzx, r6.xyzx
mad r4.xyz, r4.xyzx, l(0.120000, 0.120000, 0.120000, 0.000000), r7.xywx
mul r6.xyz, r4.yyyy, cb1[9].xywx
mad r4.xyw, r4.xxxx, cb1[8].xyxw, r6.xyxz
mad r4.xyz, r4.zzzz, cb1[10].xywx, r4.xywx
add r4.xyz, r9.yzwy, r4.xyzx
mul r2.zw, r4.xxxy, l(0.000000, 0.000000, 0.500000, -0.500000)
rcp r4.z, r4.z
mad r4.xy, r2.zwzz, r4.zzzz, r12.xyxx
mov r12.w, l(0.500000)
add r4.xyz, r12.wwzw, r4.xyzx
dp2 r0.w, cb1[44].zwzz, cb1[44].zwzz
sqrt r0.w, r0.w
dp2 r2.z, r10.xyxx, r10.xyxx
sqrt r2.z, r2.z
rcp r2.z, r2.z
mul r0.w, r0.w, r2.z
mad r2.zw, r0.yyyy, l(0.000000, 0.000000, 0.500000, 0.500000), l(0.000000, 0.000000, 0.33333334, 1.000000)
mul r2.zw, r2.zzzw, l(0.000000, 0.000000, 0.11764706, 0.11764706)
mul r2.zw, r2.zzzw, r2.zzzw
mov x1[0].x, r2.z
mad r6.xyz, r10.xyzx, r2.zzzz, r8.xyzx
lt r7.xy, r0.wwww, r2.zwzz
mul r6.xy, r6.xyxx, cb1[44].xyxx
ftoi r9.xy, r6.xyxx
mov r9.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r3.w, r9.xyzw, t21.yzwx
ge r4.w, r3.w, l(0.984375)
mul r5.w, r3.w, l(1.01587307)
mad r3.w, r3.w, l(64.000000), l(-63.000000)
movc r3.w, r4.w, r3.w, r5.w
max r3.w, r3.w, l(0.00000001)
rcp r3.w, r3.w
mov x2[0].x, r3.w
add r4.w, r3.w, l(0.042000)
mul r4.w, r4.w, r6.z
lt r4.w, l(1.000000), r4.w
and r4.w, r4.w, l(0x3f800000)
movc r4.w, r7.x, r4.w, l(1.000000)
mov x0[0].x, r4.w
mov x1[1].x, r2.w
mad r6.xyz, r4.xyzx, r2.wwww, r8.xyzx
mul r6.xy, r6.xyxx, cb1[44].xyxx
ftoi r9.xy, r6.xyxx
mov r9.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r5.w, r9.xyzw, t21.yzwx
ge r6.x, r5.w, l(0.984375)
mul r6.y, r5.w, l(1.01587307)
mad r5.w, r5.w, l(64.000000), l(-63.000000)
movc r5.w, r6.x, r5.w, r6.y
max r5.w, r5.w, l(0.00000001)
rcp r5.w, r5.w
mov x2[1].x, r5.w
add r6.x, r5.w, l(0.042000)
mul r6.x, r6.x, r6.z
lt r6.x, l(1.000000), r6.x
and r6.x, r6.x, l(0x3f800000)
movc r6.x, r7.y, r6.x, l(1.000000)
mov x0[1].x, r6.x
add r6.y, r4.w, r6.x
ne r6.y, r6.y, l(0.000000)
if_nz r6.y
  mad r6.yz, r0.yyyy, l(0.000000, 0.500000, 0.500000, 0.000000), l(0.000000, 1.33333337, 2.000000, 0.000000)
  mul r6.yz, r6.yyzy, l(0.000000, 0.11764706, 0.11764706, 0.000000)
  mad r6.yz, r6.yyzy, r6.yyzy, -r2.zzwz
  mad r2.z, r4.w, r6.y, r2.z
  mov x1[0].x, r2.z
  mad r7.xyw, r10.xyxz, r2.zzzz, r8.xyxz
  lt r2.z, r0.w, r2.z
  mul r6.yw, r7.xxxy, cb1[44].xxxy
  ftoi r9.xy, r6.ywyy
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r6.y, r9.xyzw, t21.yxzw
  ge r6.w, r6.y, l(0.984375)
  mul r7.x, r6.y, l(1.01587307)
  mad r6.y, r6.y, l(64.000000), l(-63.000000)
  movc r6.y, r6.w, r6.y, r7.x
  max r6.y, r6.y, l(0.00000001)
  rcp r6.y, r6.y
  movc r3.w, r2.z, r6.y, r3.w
  mov x2[0].x, r3.w
  add r3.w, r6.y, l(0.042000)
  mul r3.w, r3.w, r7.w
  lt r3.w, l(1.000000), r3.w
  and r3.w, r3.w, l(0x3f800000)
  mul r3.w, r3.w, r4.w
  movc r2.z, r2.z, r3.w, r4.w
  mov x0[0].x, r2.z
  mad r2.w, r6.x, r6.z, r2.w
  mov x1[1].x, r2.w
  mad r6.yzw, r4.xxyz, r2.wwww, r8.xxyz
  lt r2.w, r0.w, r2.w
  mul r6.yz, r6.yyzy, cb1[44].xxyx
  ftoi r9.xy, r6.yzyy
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.w, r9.xyzw, t21.yzwx
  ge r4.w, r3.w, l(0.984375)
  mul r6.y, r3.w, l(1.01587307)
  mad r3.w, r3.w, l(64.000000), l(-63.000000)
  movc r3.w, r4.w, r3.w, r6.y
  max r3.w, r3.w, l(0.00000001)
  rcp r3.w, r3.w
  movc r4.w, r2.w, r3.w, r5.w
  mov x2[1].x, r4.w
  add r3.w, r3.w, l(0.042000)
  mul r3.w, r3.w, r6.w
  lt r3.w, l(1.000000), r3.w
  and r3.w, r3.w, l(0x3f800000)
  mul r3.w, r3.w, r6.x
  movc r2.w, r2.w, r3.w, r6.x
  mov x0[1].x, r2.w
  add r2.z, r2.w, r2.z
  eq r2.z, r2.z, l(0.000000)
else 
  mov r2.z, l(-1)
endif 
if_z r2.z
  mad r2.zw, r0.yyyy, l(0.000000, 0.000000, 0.500000, 0.500000), l(0.000000, 0.000000, 2.33333325, 3.000000)
  mul r2.zw, r2.zzzw, l(0.000000, 0.000000, 0.11764706, 0.11764706)
  mov r3.w, x1[0].x
  mov r4.w, x0[0].x
  mad r2.z, r2.z, r2.z, -r3.w
  mad r2.z, r4.w, r2.z, r3.w
  mov x1[0].x, r2.z
  mad r6.xyz, r10.xyzx, r2.zzzz, r8.xyzx
  lt r2.z, r0.w, r2.z
  mul r6.xy, r6.xyxx, cb1[44].xyxx
  ftoi r9.xy, r6.xyxx
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.w, r9.xyzw, t21.yzwx
  ge r5.w, r3.w, l(0.984375)
  mul r6.x, r3.w, l(1.01587307)
  mad r3.w, r3.w, l(64.000000), l(-63.000000)
  movc r3.w, r5.w, r3.w, r6.x
  max r3.w, r3.w, l(0.00000001)
  rcp r3.w, r3.w
  mov r5.w, x2[0].x
  movc r5.w, r2.z, r3.w, r5.w
  mov x2[0].x, r5.w
  add r3.w, r3.w, l(0.042000)
  mul r3.w, r3.w, r6.z
  lt r3.w, l(1.000000), r3.w
  and r3.w, r3.w, l(0x3f800000)
  mul r3.w, r3.w, r4.w
  movc r2.z, r2.z, r3.w, r4.w
  mov x0[0].x, r2.z
  mov r3.w, x1[1].x
  mov r4.w, x0[1].x
  mad r2.w, r2.w, r2.w, -r3.w
  mad r2.w, r4.w, r2.w, r3.w
  mov x1[1].x, r2.w
  mad r6.xyz, r4.xyzx, r2.wwww, r8.xyzx
  lt r2.w, r0.w, r2.w
  mul r6.xy, r6.xyxx, cb1[44].xyxx
  ftoi r9.xy, r6.xyxx
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.w, r9.xyzw, t21.yzwx
  ge r5.w, r3.w, l(0.984375)
  mul r6.x, r3.w, l(1.01587307)
  mad r3.w, r3.w, l(64.000000), l(-63.000000)
  movc r3.w, r5.w, r3.w, r6.x
  max r3.w, r3.w, l(0.00000001)
  rcp r3.w, r3.w
  mov r5.w, x2[1].x
  movc r5.w, r2.w, r3.w, r5.w
  mov x2[1].x, r5.w
  add r3.w, r3.w, l(0.042000)
  mul r3.w, r3.w, r6.z
  lt r3.w, l(1.000000), r3.w
  and r3.w, r3.w, l(0x3f800000)
  mul r3.w, r3.w, r4.w
  movc r2.w, r2.w, r3.w, r4.w
  mov x0[1].x, r2.w
  add r2.z, r2.w, r2.z
  eq r2.z, r2.z, l(0.000000)
else 
  mov r2.z, l(-1)
endif 
if_z r2.z
  mad r2.zw, r0.yyyy, l(0.000000, 0.000000, 0.500000, 0.500000), l(0.000000, 0.000000, 3.33333325, 4.000000)
  mul r2.zw, r2.zzzw, l(0.000000, 0.000000, 0.11764706, 0.11764706)
  mov r3.w, x1[0].x
  mov r4.w, x0[0].x
  mad r2.z, r2.z, r2.z, -r3.w
  mad r2.z, r4.w, r2.z, r3.w
  mov x1[0].x, r2.z
  mad r6.xyz, r10.xyzx, r2.zzzz, r8.xyzx
  lt r2.z, r0.w, r2.z
  mul r6.xy, r6.xyxx, cb1[44].xyxx
  ftoi r9.xy, r6.xyxx
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.w, r9.xyzw, t21.yzwx
  ge r5.w, r3.w, l(0.984375)
  mul r6.x, r3.w, l(1.01587307)
  mad r3.w, r3.w, l(64.000000), l(-63.000000)
  movc r3.w, r5.w, r3.w, r6.x
  max r3.w, r3.w, l(0.00000001)
  rcp r3.w, r3.w
  mov r5.w, x2[0].x
  movc r5.w, r2.z, r3.w, r5.w
  mov x2[0].x, r5.w
  add r3.w, r3.w, l(0.042000)
  mul r3.w, r3.w, r6.z
  lt r3.w, l(1.000000), r3.w
  and r3.w, r3.w, l(0x3f800000)
  mul r3.w, r3.w, r4.w
  movc r2.z, r2.z, r3.w, r4.w
  mov x0[0].x, r2.z
  mov r3.w, x1[1].x
  mov r4.w, x0[1].x
  mad r2.w, r2.w, r2.w, -r3.w
  mad r2.w, r4.w, r2.w, r3.w
  mov x1[1].x, r2.w
  mad r6.xyz, r4.xyzx, r2.wwww, r8.xyzx
  lt r2.w, r0.w, r2.w
  mul r6.xy, r6.xyxx, cb1[44].xyxx
  ftoi r9.xy, r6.xyxx
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.w, r9.xyzw, t21.yzwx
  ge r5.w, r3.w, l(0.984375)
  mul r6.x, r3.w, l(1.01587307)
  mad r3.w, r3.w, l(64.000000), l(-63.000000)
  movc r3.w, r5.w, r3.w, r6.x
  max r3.w, r3.w, l(0.00000001)
  rcp r3.w, r3.w
  mov r5.w, x2[1].x
  movc r5.w, r2.w, r3.w, r5.w
  mov x2[1].x, r5.w
  add r3.w, r3.w, l(0.042000)
  mul r3.w, r3.w, r6.z
  lt r3.w, l(1.000000), r3.w
  and r3.w, r3.w, l(0x3f800000)
  mul r3.w, r3.w, r4.w
  movc r2.w, r2.w, r3.w, r4.w
  mov x0[1].x, r2.w
  add r2.z, r2.w, r2.z
  eq r2.z, r2.z, l(0.000000)
else 
  mov r2.z, l(-1)
endif 
if_z r2.z
  mad r2.zw, r0.yyyy, l(0.000000, 0.000000, 0.500000, 0.500000), l(0.000000, 0.000000, 4.33333349, 5.000000)
  mul r2.zw, r2.zzzw, l(0.000000, 0.000000, 0.11764706, 0.11764706)
  mov r3.w, x1[0].x
  mov r4.w, x0[0].x
  mad r2.z, r2.z, r2.z, -r3.w
  mad r2.z, r4.w, r2.z, r3.w
  mov x1[0].x, r2.z
  mad r6.xyz, r10.xyzx, r2.zzzz, r8.xyzx
  lt r2.z, r0.w, r2.z
  mul r6.xy, r6.xyxx, cb1[44].xyxx
  ftoi r9.xy, r6.xyxx
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.w, r9.xyzw, t21.yzwx
  ge r5.w, r3.w, l(0.984375)
  mul r6.x, r3.w, l(1.01587307)
  mad r3.w, r3.w, l(64.000000), l(-63.000000)
  movc r3.w, r5.w, r3.w, r6.x
  max r3.w, r3.w, l(0.00000001)
  rcp r3.w, r3.w
  mov r5.w, x2[0].x
  movc r5.w, r2.z, r3.w, r5.w
  mov x2[0].x, r5.w
  add r3.w, r3.w, l(0.042000)
  mul r3.w, r3.w, r6.z
  lt r3.w, l(1.000000), r3.w
  and r3.w, r3.w, l(0x3f800000)
  mul r3.w, r3.w, r4.w
  movc r2.z, r2.z, r3.w, r4.w
  mov x0[0].x, r2.z
  mov r3.w, x1[1].x
  mov r4.w, x0[1].x
  mad r2.w, r2.w, r2.w, -r3.w
  mad r2.w, r4.w, r2.w, r3.w
  mov x1[1].x, r2.w
  mad r6.xyz, r4.xyzx, r2.wwww, r8.xyzx
  lt r2.w, r0.w, r2.w
  mul r6.xy, r6.xyxx, cb1[44].xyxx
  ftoi r9.xy, r6.xyxx
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.w, r9.xyzw, t21.yzwx
  ge r5.w, r3.w, l(0.984375)
  mul r6.x, r3.w, l(1.01587307)
  mad r3.w, r3.w, l(64.000000), l(-63.000000)
  movc r3.w, r5.w, r3.w, r6.x
  max r3.w, r3.w, l(0.00000001)
  rcp r3.w, r3.w
  mov r5.w, x2[1].x
  movc r5.w, r2.w, r3.w, r5.w
  mov x2[1].x, r5.w
  add r3.w, r3.w, l(0.042000)
  mul r3.w, r3.w, r6.z
  lt r3.w, l(1.000000), r3.w
  and r3.w, r3.w, l(0x3f800000)
  mul r3.w, r3.w, r4.w
  movc r2.w, r2.w, r3.w, r4.w
  mov x0[1].x, r2.w
  add r2.z, r2.w, r2.z
  eq r2.z, r2.z, l(0.000000)
else 
  mov r2.z, l(-1)
endif 
if_z r2.z
  mad r2.zw, r0.yyyy, l(0.000000, 0.000000, 0.500000, 0.500000), l(0.000000, 0.000000, 5.33333349, 6.000000)
  mul r2.zw, r2.zzzw, l(0.000000, 0.000000, 0.11764706, 0.11764706)
  mov r3.w, x1[0].x
  mov r4.w, x0[0].x
  mad r2.z, r2.z, r2.z, -r3.w
  mad r2.z, r4.w, r2.z, r3.w
  mov x1[0].x, r2.z
  mad r6.xyz, r10.xyzx, r2.zzzz, r8.xyzx
  lt r2.z, r0.w, r2.z
  mul r6.xy, r6.xyxx, cb1[44].xyxx
  ftoi r9.xy, r6.xyxx
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.w, r9.xyzw, t21.yzwx
  ge r5.w, r3.w, l(0.984375)
  mul r6.x, r3.w, l(1.01587307)
  mad r3.w, r3.w, l(64.000000), l(-63.000000)
  movc r3.w, r5.w, r3.w, r6.x
  max r3.w, r3.w, l(0.00000001)
  rcp r3.w, r3.w
  mov r5.w, x2[0].x
  movc r5.w, r2.z, r3.w, r5.w
  mov x2[0].x, r5.w
  add r3.w, r3.w, l(0.042000)
  mul r3.w, r3.w, r6.z
  lt r3.w, l(1.000000), r3.w
  and r3.w, r3.w, l(0x3f800000)
  mul r3.w, r3.w, r4.w
  movc r2.z, r2.z, r3.w, r4.w
  mov x0[0].x, r2.z
  mov r3.w, x1[1].x
  mov r4.w, x0[1].x
  mad r2.w, r2.w, r2.w, -r3.w
  mad r2.w, r4.w, r2.w, r3.w
  mov x1[1].x, r2.w
  mad r6.xyz, r4.xyzx, r2.wwww, r8.xyzx
  lt r2.w, r0.w, r2.w
  mul r6.xy, r6.xyxx, cb1[44].xyxx
  ftoi r9.xy, r6.xyxx
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.w, r9.xyzw, t21.yzwx
  ge r5.w, r3.w, l(0.984375)
  mul r6.x, r3.w, l(1.01587307)
  mad r3.w, r3.w, l(64.000000), l(-63.000000)
  movc r3.w, r5.w, r3.w, r6.x
  max r3.w, r3.w, l(0.00000001)
  rcp r3.w, r3.w
  mov r5.w, x2[1].x
  movc r5.w, r2.w, r3.w, r5.w
  mov x2[1].x, r5.w
  add r3.w, r3.w, l(0.042000)
  mul r3.w, r3.w, r6.z
  lt r3.w, l(1.000000), r3.w
  and r3.w, r3.w, l(0x3f800000)
  mul r3.w, r3.w, r4.w
  movc r2.w, r2.w, r3.w, r4.w
  mov x0[1].x, r2.w
  add r2.z, r2.w, r2.z
  eq r2.z, r2.z, l(0.000000)
else 
  mov r2.z, l(-1)
endif 
if_z r2.z
  mad r2.zw, r0.yyyy, l(0.000000, 0.000000, 0.500000, 0.500000), l(0.000000, 0.000000, 6.33333349, 7.000000)
  mul r2.zw, r2.zzzw, l(0.000000, 0.000000, 0.11764706, 0.11764706)
  mov r3.w, x1[0].x
  mov r4.w, x0[0].x
  mad r2.z, r2.z, r2.z, -r3.w
  mad r2.z, r4.w, r2.z, r3.w
  mov x1[0].x, r2.z
  mad r6.xyz, r10.xyzx, r2.zzzz, r8.xyzx
  lt r2.z, r0.w, r2.z
  mul r6.xy, r6.xyxx, cb1[44].xyxx
  ftoi r9.xy, r6.xyxx
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.w, r9.xyzw, t21.yzwx
  ge r5.w, r3.w, l(0.984375)
  mul r6.x, r3.w, l(1.01587307)
  mad r3.w, r3.w, l(64.000000), l(-63.000000)
  movc r3.w, r5.w, r3.w, r6.x
  max r3.w, r3.w, l(0.00000001)
  rcp r3.w, r3.w
  mov r5.w, x2[0].x
  movc r5.w, r2.z, r3.w, r5.w
  mov x2[0].x, r5.w
  add r3.w, r3.w, l(0.042000)
  mul r3.w, r3.w, r6.z
  lt r3.w, l(1.000000), r3.w
  and r3.w, r3.w, l(0x3f800000)
  mul r3.w, r3.w, r4.w
  movc r2.z, r2.z, r3.w, r4.w
  mov x0[0].x, r2.z
  mov r3.w, x1[1].x
  mov r4.w, x0[1].x
  mad r2.w, r2.w, r2.w, -r3.w
  mad r2.w, r4.w, r2.w, r3.w
  mov x1[1].x, r2.w
  mad r6.xyz, r4.xyzx, r2.wwww, r8.xyzx
  lt r2.w, r0.w, r2.w
  mul r6.xy, r6.xyxx, cb1[44].xyxx
  ftoi r9.xy, r6.xyxx
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.w, r9.xyzw, t21.yzwx
  ge r5.w, r3.w, l(0.984375)
  mul r6.x, r3.w, l(1.01587307)
  mad r3.w, r3.w, l(64.000000), l(-63.000000)
  movc r3.w, r5.w, r3.w, r6.x
  max r3.w, r3.w, l(0.00000001)
  rcp r3.w, r3.w
  mov r5.w, x2[1].x
  movc r5.w, r2.w, r3.w, r5.w
  mov x2[1].x, r5.w
  add r3.w, r3.w, l(0.042000)
  mul r3.w, r3.w, r6.z
  lt r3.w, l(1.000000), r3.w
  and r3.w, r3.w, l(0x3f800000)
  mul r3.w, r3.w, r4.w
  movc r2.w, r2.w, r3.w, r4.w
  mov x0[1].x, r2.w
  add r2.z, r2.w, r2.z
  eq r2.z, r2.z, l(0.000000)
else 
  mov r2.z, l(-1)
endif 
if_z r2.z
  mad r2.zw, r0.yyyy, l(0.000000, 0.000000, 0.500000, 0.500000), l(0.000000, 0.000000, 7.33333349, 8.000000)
  mul r2.zw, r2.zzzw, l(0.000000, 0.000000, 0.11764706, 0.11764706)
  mov r0.y, x1[0].x
  mov r3.w, x0[0].x
  mad r2.z, r2.z, r2.z, -r0.y
  mad r0.y, r3.w, r2.z, r0.y
  mad r6.xyz, r10.xyzx, r0.yyyy, r8.xyzx
  lt r0.y, r0.w, r0.y
  mul r6.xy, r6.xyxx, cb1[44].xyxx
  ftoi r9.xy, r6.xyxx
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r2.z, r9.xyzw, t21.yzxw
  ge r4.w, r2.z, l(0.984375)
  mul r5.w, r2.z, l(1.01587307)
  mad r2.z, r2.z, l(64.000000), l(-63.000000)
  movc r2.z, r4.w, r2.z, r5.w
  max r2.z, r2.z, l(0.00000001)
  rcp r2.z, r2.z
  mov r4.w, x2[0].x
  movc r4.w, r0.y, r2.z, r4.w
  mov x2[0].x, r4.w
  add r2.z, r2.z, l(0.042000)
  mul r2.z, r2.z, r6.z
  lt r2.z, l(1.000000), r2.z
  and r2.z, r2.z, l(0x3f800000)
  mul r2.z, r2.z, r3.w
  movc r0.y, r0.y, r2.z, r3.w
  mov x0[0].x, r0.y
  mov r0.y, x1[1].x
  mov r2.z, x0[1].x
  mad r2.w, r2.w, r2.w, -r0.y
  mad r0.y, r2.z, r2.w, r0.y
  mad r4.xyz, r4.xyzx, r0.yyyy, r8.xyzx
  lt r0.y, r0.w, r0.y
  mul r4.xy, r4.xyxx, cb1[44].xyxx
  ftoi r6.xy, r4.xyxx
  mov r6.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r0.w, r6.xyzw, t21.yzwx
  ge r2.w, r0.w, l(0.984375)
  mul r3.w, r0.w, l(1.01587307)
  mad r0.w, r0.w, l(64.000000), l(-63.000000)
  movc r0.w, r2.w, r0.w, r3.w
  max r0.w, r0.w, l(0.00000001)
  rcp r0.w, r0.w
  mov r2.w, x2[1].x
  movc r2.w, r0.y, r0.w, r2.w
  mov x2[1].x, r2.w
  add r0.w, r0.w, l(0.042000)
  mul r0.w, r0.w, r4.z
  lt r0.w, l(1.000000), r0.w
  and r0.w, r0.w, l(0x3f800000)
  mul r0.w, r0.w, r2.z
  movc r0.y, r0.y, r0.w, r2.z
  mov x0[1].x, r0.y
endif 
mov r0.y, x2[0].x
add r0.y, -r7.z, r0.y
lt r0.y, l(3.000000), |r0.y|
mov r0.w, x0[0].x
mad r0.w, -r0.w, l(0.500000), l(1.000000)
movc r0.y, r0.y, l(0.500000), r0.w
mov r0.w, x2[1].x
add r0.w, -r7.z, r0.w
lt r0.w, l(3.000000), |r0.w|
mov r2.z, x0[1].x
mul r2.z, r2.z, l(0.500000)
movc r0.w, r0.w, l(-0.500000), -r2.z
add r0.y, r0.w, r0.y
add_sat r0.y, -r0.y, l(1.000000)
mad r0.w, r0.y, l(-2.000000), l(3.000000)
mul r0.y, r0.y, r0.y
mul r0.y, r0.y, r0.w
min r0.y, r0.y, r16.w
mul r0.y, r0.y, r16.z
mul r4.xyz, r35.xyzx, r0.yyyy
mad r6.xyz, r4.xyzx, r37.xyzx, r31.xyzx
mad r7.xyz, r4.xyzx, r38.xyzx, r32.xyzx
mad r8.xyz, r4.xyzx, r39.xyzx, r34.xyzx
mad r4.xyz, r4.xyzx, r40.xyzx, r33.xyzx
add r0.y, -r2.y, l(1.000000)
mul r0.w, r0.y, l(5.000000)
mad r2.z, r0.y, l(5.000000), l(-2.500000)
mul_sat r2.z, r2.z, l(0.400000)
mul r2.z, r2.z, l(100.000000)
mad r9.xy, -r0.yyyy, l(10.000000, 5.000000, 0.000000, 0.000000), l(6.857410, 7.085000, 0.000000, 0.000000)
exp r2.w, r9.x
mul r2.w, r2.w, r2.x
mul r2.w, r2.w, l(9.136810)
mul r3.w, r0.y, r0.w
mad r3.w, -r3.w, l(2.015905), r9.y
exp r3.w, r3.w
mul r3.w, r2.x, r3.w
mul r3.w, r3.w, l(9.708090)
max r2.w, r2.w, r3.w
max r2.w, r2.w, l(1.268160)
iadd r3.w, cb2[0].y, -cb2[58].x
and r4.w, r3.w, l(-32)
iadd r5.w, r3.w, -r4.w
and r6.w, cb2[0].y, l(-32)
iadd r7.w, -r6.w, cb2[0].y
mov r9.xy, l(0,0,0,0)
mov r10.w, l(0)
mov r12.yz, l(0,0,1.000000,0)
mov r13.xy, l(0,0,0,0)
mov r14.x, l(1.000000)
mov r15.xy, l(0,0,0,0)
mov r16.xy, l(0,0,0,0)
mov r18.xyzw, l(0,0,0,0)
mov r19.yzw, l(0,0,0,0)
mov r8.w, r4.w
loop 
  uge r9.w, r8.w, cb2[0].y
  breakc_nz r9.w
  ushr r9.z, r8.w, l(5)
  iadd r10.xyz, r9.xyzx, r17.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r9.z, r10.xyzw, t7.yzxw
  ieq r9.w, r4.w, r8.w
  bfi r10.x, r5.w, l(0), l(0), r9.z
  movc r9.z, r9.w, r10.x, r9.z
  ieq r9.w, r6.w, r8.w
  ubfe r10.x, r7.w, l(0), r9.z
  movc r9.z, r9.w, r10.x, r9.z
  iadd r9.w, r8.w, cb2[0].x
  mov r20.xyzw, r18.xyzw
  mov r21.xyz, r19.yzwy
  mov r10.x, r9.z
  loop 
    breakc_z r10.x
    firstbit_lo r10.y, r10.x
    ishl r10.z, l(1), r10.y
    and r12.w, r10.z, r10.x
    if_nz r12.w
      xor r10.x, r10.z, r10.x
      iadd r10.z, r9.w, r10.y
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r22.xyzw, r10.z, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r23.xy, r10.z, l(16), t11.xyxx
      add r22.xyz, r22.xyzx, -v6.xyzx
      mov r23.z, r22.w
      lt r22.xyz, |r22.xyzx|, r23.zxyz
      and r10.z, r22.y, r22.x
      and r10.z, r22.z, r10.z
      if_nz r10.z
        iadd r10.y, r8.w, r10.y
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r22.xyzw, r10.y, l(0), t15.wxyz
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r14.zw, r10.y, l(96), t15.xxxy
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r23.xyzw, r10.y, l(116), t15.zwxy
        add r24.xyz, -r22.yzwy, v6.xyzx
        and r10.z, r23.w, l(0x0000ffff)
        ubfe r12.w, l(6), l(25), r23.w
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r25.xyzw, r10.z, l(0), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r26.xyzw, r10.z, l(16), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r10.z, l(32), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r10.z, l(48), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r10.z, l(64), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r10.z, l(80), t16.xyzw
        dp3 r13.w, r25.xyzx, r24.xyzx
        add_sat r13.w, r25.w, r13.w
        dp3 r15.w, r26.xyzx, r24.xyzx
        add_sat r15.w, r26.w, r15.w
        mul r13.w, r13.w, r15.w
        dp3 r15.w, r27.xyzx, r24.xyzx
        add_sat r15.w, r27.w, r15.w
        mul r13.w, r13.w, r15.w
        dp3 r15.w, r28.xyzx, r24.xyzx
        add_sat r15.w, r28.w, r15.w
        mul r13.w, r13.w, r15.w
        dp3 r15.w, r29.xyzx, r24.xyzx
        add_sat r15.w, r29.w, r15.w
        mul r13.w, r13.w, r15.w
        dp3 r15.w, r30.xyzx, r24.xyzx
        add_sat r15.w, r30.w, r15.w
        mul r12.x, r13.w, r15.w
        and r13.w, r14.z, l(1)
        movc r25.xy, r13.wwww, r12.xyxx, r12.zxzz
        mov r12.x, r14.z
        mov r26.xy, r25.xyxx
        mov r13.w, l(1)
        loop 
          ige r15.w, r13.w, r12.w
          breakc_nz r15.w
          iadd r15.w, r10.z, r13.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r15.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r15.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r15.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r15.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r15.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r15.w, l(80), t16.xyzw
          dp3 r15.w, r27.xyzx, r24.xyzx
          add_sat r15.w, r27.w, r15.w
          mul r15.w, r15.w, r26.x
          dp3 r16.w, r28.xyzx, r24.xyzx
          add_sat r16.w, r28.w, r16.w
          mul r15.w, r15.w, r16.w
          dp3 r16.w, r29.xyzx, r24.xyzx
          add_sat r16.w, r29.w, r16.w
          mul r15.w, r15.w, r16.w
          dp3 r16.w, r30.xyzx, r24.xyzx
          add_sat r16.w, r30.w, r16.w
          mul r15.w, r15.w, r16.w
          dp3 r16.w, r31.xyzx, r24.xyzx
          add_sat r16.w, r31.w, r16.w
          mul r15.w, r15.w, r16.w
          dp3 r16.w, r32.xyzx, r24.xyzx
          add_sat r16.w, r32.w, r16.w
          mul r26.x, r15.w, r16.w
          ushr r17.w, r12.x, l(2)
          ubfe r22.w, l(1), l(2), r12.x
          and r24.w, r17.w, l(2)
          max r25.z, r26.x, r26.y
          mad r15.w, -r15.w, r16.w, l(1.000000)
          mul r15.w, r15.w, r26.y
          movc r14.y, r24.w, r15.w, r25.z
          movc r26.xy, r22.wwww, r26.xyxx, r14.xyxx
          iadd r13.w, r13.w, l(1)
          mov r12.x, r17.w
        endloop 
        mov_sat r26.y, r26.y
        mul r10.z, r14.w, r26.y
        lt r12.x, l(0.000000), r10.z
        if_nz r12.x
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r10.y, l(16), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r10.y, l(32), t15.yxwz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r10.y, l(48), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r10.y, l(64), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r10.y, l(80), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r10.y, l(132), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r10.y, l(148), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r10.y, l(164), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r10.y, l(180), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r10.y, l(196), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xy, r10.y, l(212), t15.xyxx
          mad r21.z, r26.y, r14.w, r21.z
          mul r10.y, r23.z, r10.z
          mov r23.z, r31.z
          dp3 r10.z, r11.xyzx, r23.xyzx
          dp3 r12.x, r24.xyzx, r23.xyzx
          add r12.x, -r31.w, r12.x
          ge r12.w, r12.x, l(0.000000)
          max r12.x, r2.z, |r12.x|
          movc r12.x, r12.w, r12.x, -r12.x
          max r10.z, -r10.z, l(0.00000010)
          div r10.z, r12.x, r10.z
          min r10.z, |r10.z|, l(131072.000000)
          mov r31.z, r32.z
          dp3 r12.x, r11.xyzx, r31.xyzx
          dp3 r12.w, r24.xyzx, r31.xyzx
          add r12.w, -r32.w, r12.w
          ge r13.w, r12.w, l(0.000000)
          max r12.w, r2.z, |r12.w|
          movc r12.w, r13.w, r12.w, -r12.w
          max r12.x, -r12.x, l(0.00000010)
          div r12.x, r12.w, r12.x
          min r10.z, r10.z, |r12.x|
          mov r32.z, r33.z
          dp3 r12.x, r11.xyzx, r32.xyzx
          dp3 r12.w, r24.xyzx, r32.xyzx
          add r12.w, -r33.w, r12.w
          ge r13.w, r12.w, l(0.000000)
          max r12.w, r2.z, |r12.w|
          movc r12.w, r13.w, r12.w, -r12.w
          max r12.x, -r12.x, l(0.00000010)
          div r12.x, r12.w, r12.x
          min r10.z, r10.z, |r12.x|
          mov r33.z, r34.z
          dp3 r12.x, r11.xyzx, r33.xyzx
          dp3 r12.w, r24.xyzx, r33.xyzx
          add r12.w, -r34.w, r12.w
          ge r13.w, r12.w, l(0.000000)
          max r12.w, r2.z, |r12.w|
          movc r12.w, r13.w, r12.w, -r12.w
          max r12.x, -r12.x, l(0.00000010)
          div r12.x, r12.w, r12.x
          min r10.z, r10.z, |r12.x|
          mov r34.z, r35.x
          dp3 r12.x, r11.xyzx, r34.xyzx
          dp3 r12.w, r24.xyzx, r34.xyzx
          add r12.w, -r35.y, r12.w
          ge r13.w, r12.w, l(0.000000)
          max r12.w, r2.z, |r12.w|
          movc r12.w, r13.w, r12.w, -r12.w
          max r12.x, -r12.x, l(0.00000010)
          div r12.x, r12.w, r12.x
          min r10.z, r10.z, |r12.x|
          mov r36.zw, r35.zzzw
          dp3 r12.x, r11.zxyz, r36.xzwx
          dp3 r12.w, r24.zxyz, r36.xzwx
          add r12.w, -r36.y, r12.w
          ge r13.w, r12.w, l(0.000000)
          max r12.w, r2.z, |r12.w|
          movc r12.w, r13.w, r12.w, -r12.w
          max r12.x, -r12.x, l(0.00000010)
          div r12.x, r12.w, r12.x
          min r10.z, r10.z, |r12.x|
          mov r23.x, r28.w
          mov r23.yz, r29.zzwz
          add r14.yzw, r24.xxyz, r23.xxyz
          mad r14.yzw, r11.xxyz, r10.zzzz, r14.yyzw
          dp3 r12.x, r14.yzwy, r14.yzwy
          sqrt r12.x, r12.x
          div r10.z, r10.z, r12.x
          add r10.z, r10.z, r10.z
          sqrt r10.z, r10.z
          mad r10.z, r0.y, l(5.000000), r10.z
          add r10.z, r10.z, l(-0.844800)
          mov r22.y, r25.z
          mov r22.z, r27.x
          dp3 r31.x, r14.yzwy, r22.xyzx
          mov r23.xy, r25.xwxx
          mov r23.z, r27.w
          dp3 r31.y, r14.yzwy, r23.xyzx
          mov r27.x, r25.y
          dp3 r31.z, r14.yzwy, r27.xyzx
          ubfe r12.x, l(9), l(16), r23.w
          utof r31.w, r12.x
          sample_l_indexable(texturecubearray)(float,float,float,float) r14.yzw, r31.xyzw, t8.wxyz, s2, r10.z
          dp3 r25.x, r24.xyzx, r22.xyzx
          dp3 r25.y, r24.xyzx, r23.xyzx
          dp3 r25.z, r24.xyzx, r27.xyzx
          mad_sat r24.xyz, r25.xyzx, r28.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
          mov r29.z, r30.x
          mad r24.xyz, r24.xyzx, r29.xyzx, r30.yzwy
          dp3 r31.x, r1.xyzx, r22.xyzx
          dp3 r31.y, r1.xyzx, r23.xyzx
          dp3 r31.z, r1.xyzx, r27.xyzx
          lt r22.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r31.xyzx
          movc r13.z, r22.x, l(0), l(0.500000)
          add r23.xyz, r13.xyzx, r24.xyzx
          sample_l_indexable(texture3d)(float,float,float,float) r23.xyz, r23.xyzx, t17.xyzw, s4, l(0.000000)
          mul r25.xyz, r31.xyzx, r31.xyzx
          mul r25.xyz, r10.yyyy, r25.xyzx
          movc r15.z, r22.y, l(0), l(0.500000)
          add r22.xyw, r15.xyxz, r24.xyxz
          sample_l_indexable(texture3d)(float,float,float,float) r22.xyw, r22.xywx, t18.xywz, s4, l(0.000000)
          mul r22.xyw, r25.yyyy, r22.xyxw
          mad r22.xyw, r23.xyxz, r25.xxxx, r22.xyxw
          movc r16.z, r22.z, l(0), l(0.500000)
          add r23.xyz, r16.xyzx, r24.xyzx
          sample_l_indexable(texture3d)(float,float,float,float) r23.xyz, r23.xyzx, t19.xyzw, s4, l(0.000000)
          mad r22.xyz, r23.xyzx, r25.zzzz, r22.xywx
          sample_l_indexable(texturecubearray)(float,float,float,float) r23.xyz, r31.xyzw, t8.xyzw, s2, l(6.000000)
          mul r24.xyz, r22.xyzx, r23.xyzx
          dp3 r10.z, r24.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r20.xyz, r22.xyzx, r23.xyzx, r20.xyzx
          mul r12.x, r2.w, r10.z
          mul r14.yzw, r10.yyyy, r14.yyzw
          dp3 r10.y, r14.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r10.y, r2.w, r10.z, r10.y
          div r10.y, r12.x, r10.y
          mov r22.x, r20.w
          mov r22.yz, r21.xxyx
          mad r21.xyw, r14.zwzy, r10.yyyy, r22.yzyx
          mov r20.w, r21.w
        endif 
      endif 
    endif 
  endloop 
  mov r18.xyzw, r20.xyzw
  mov r19.yzw, r21.xxyz
  iadd r8.w, r8.w, l(32)
endloop 
lt r6.w, r19.w, l(1.000000)
if_nz r6.w
  mov r9.xy, l(0,0,0,0)
  mov r10.w, l(0)
  mov r12.yz, l(0,0,1.000000,0)
  mov r13.xy, l(0,0,0,0)
  mov r14.x, l(1.000000)
  mov r15.xy, l(0,0,0,0)
  mov r16.xy, l(0,0,0,0)
  mov r20.x, r18.w
  mov r20.yzw, r19.yyzw
  mov r21.xyz, r18.xyzx
  mov r6.w, r19.w
  mov r7.w, l(0)
  loop 
    uge r8.w, r7.w, r3.w
    breakc_nz r8.w
    ushr r9.z, r7.w, l(5)
    iadd r10.xyz, r9.xyzx, r17.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r8.w, r10.xyzw, t7.yzwx
    ieq r9.z, r4.w, r7.w
    ubfe r9.w, r5.w, l(0), r8.w
    movc r8.w, r9.z, r9.w, r8.w
    iadd r9.z, r7.w, cb2[0].x
    mov r22.xyzw, r20.xyzw
    mov r10.xyz, r21.xyzx
    mov r9.w, r6.w
    mov r12.w, r8.w
    loop 
      breakc_z r12.w
      firstbit_lo r13.w, r12.w
      ishl r14.z, l(1), r13.w
      and r14.w, r12.w, r14.z
      if_nz r14.w
        xor r12.w, r12.w, r14.z
        iadd r14.z, r9.z, r13.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r23.xyzw, r14.z, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r24.xy, r14.z, l(16), t11.xyxx
        add r23.xyz, r23.xyzx, -v6.xyzx
        mov r24.z, r23.w
        lt r23.xyz, |r23.xyzx|, r24.zxyz
        and r14.z, r23.y, r23.x
        and r14.z, r23.z, r14.z
        if_nz r14.z
          iadd r13.w, r7.w, r13.w
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r23.xyzw, r13.w, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r14.zw, r13.w, l(96), t15.xxxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r13.w, l(116), t15.zwxy
          add r25.xyz, -r23.yzwy, v6.xyzx
          and r15.w, r24.w, l(0x0000ffff)
          ubfe r16.w, l(6), l(25), r24.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r26.xyzw, r15.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r15.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r15.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r15.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r15.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r15.w, l(80), t16.xyzw
          dp3 r17.w, r26.xyzx, r25.xyzx
          add_sat r17.w, r26.w, r17.w
          dp3 r21.w, r27.xyzx, r25.xyzx
          add_sat r21.w, r27.w, r21.w
          mul r17.w, r17.w, r21.w
          dp3 r21.w, r28.xyzx, r25.xyzx
          add_sat r21.w, r28.w, r21.w
          mul r17.w, r17.w, r21.w
          dp3 r21.w, r29.xyzx, r25.xyzx
          add_sat r21.w, r29.w, r21.w
          mul r17.w, r17.w, r21.w
          dp3 r21.w, r30.xyzx, r25.xyzx
          add_sat r21.w, r30.w, r21.w
          mul r17.w, r17.w, r21.w
          dp3 r21.w, r31.xyzx, r25.xyzx
          add_sat r21.w, r31.w, r21.w
          mul r12.x, r17.w, r21.w
          and r17.w, r14.z, l(1)
          movc r26.xy, r17.wwww, r12.xyxx, r12.zxzz
          mov r12.x, r14.z
          mov r27.xy, r26.xyxx
          mov r17.w, l(1)
          loop 
            ige r21.w, r17.w, r16.w
            breakc_nz r21.w
            iadd r21.w, r15.w, r17.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r21.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r21.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r21.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r21.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r21.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r21.w, l(80), t16.xyzw
            dp3 r21.w, r28.xyzx, r25.xyzx
            add_sat r21.w, r28.w, r21.w
            mul r21.w, r21.w, r27.x
            dp3 r23.w, r29.xyzx, r25.xyzx
            add_sat r23.w, r29.w, r23.w
            mul r21.w, r21.w, r23.w
            dp3 r23.w, r30.xyzx, r25.xyzx
            add_sat r23.w, r30.w, r23.w
            mul r21.w, r21.w, r23.w
            dp3 r23.w, r31.xyzx, r25.xyzx
            add_sat r23.w, r31.w, r23.w
            mul r21.w, r21.w, r23.w
            dp3 r23.w, r32.xyzx, r25.xyzx
            add_sat r23.w, r32.w, r23.w
            mul r21.w, r21.w, r23.w
            dp3 r23.w, r33.xyzx, r25.xyzx
            add_sat r23.w, r33.w, r23.w
            mul r27.x, r21.w, r23.w
            ushr r25.w, r12.x, l(2)
            ubfe r26.z, l(1), l(2), r12.x
            and r26.w, r25.w, l(2)
            max r27.z, r27.x, r27.y
            mad r21.w, -r21.w, r23.w, l(1.000000)
            mul r21.w, r21.w, r27.y
            movc r14.y, r26.w, r21.w, r27.z
            movc r27.xy, r26.zzzz, r27.xyxx, r14.xyxx
            iadd r17.w, r17.w, l(1)
            mov r12.x, r25.w
          endloop 
          add_sat r12.x, -r9.w, r27.y
          mul r14.y, r14.w, r12.x
          lt r14.z, l(0.000000), r14.y
          if_nz r14.z
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r13.w, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r13.w, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r13.w, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r13.w, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r13.w, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r13.w, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r13.w, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r13.w, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r13.w, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r13.w, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xy, r13.w, l(212), t15.xyxx
            mad r22.w, r12.x, r14.w, r22.w
            mul r12.x, r24.z, r14.y
            mov r24.z, r32.z
            dp3 r13.w, r11.xyzx, r24.xyzx
            dp3 r14.y, r25.xyzx, r24.xyzx
            add r14.y, -r32.w, r14.y
            ge r14.z, r14.y, l(0.000000)
            max r14.y, r2.z, |r14.y|
            movc r14.y, r14.z, r14.y, -r14.y
            max r13.w, -r13.w, l(0.00000010)
            div r13.w, r14.y, r13.w
            min r13.w, |r13.w|, l(131072.000000)
            mov r32.z, r33.z
            dp3 r14.y, r11.xyzx, r32.xyzx
            dp3 r14.z, r25.xyzx, r32.xyzx
            add r14.z, -r33.w, r14.z
            ge r14.w, r14.z, l(0.000000)
            max r14.z, r2.z, |r14.z|
            movc r14.z, r14.w, r14.z, -r14.z
            max r14.y, -r14.y, l(0.00000010)
            div r14.y, r14.z, r14.y
            min r13.w, r13.w, |r14.y|
            mov r33.z, r34.z
            dp3 r14.y, r11.xyzx, r33.xyzx
            dp3 r14.z, r25.xyzx, r33.xyzx
            add r14.z, -r34.w, r14.z
            ge r14.w, r14.z, l(0.000000)
            max r14.z, r2.z, |r14.z|
            movc r14.z, r14.w, r14.z, -r14.z
            max r14.y, -r14.y, l(0.00000010)
            div r14.y, r14.z, r14.y
            min r13.w, r13.w, |r14.y|
            mov r34.z, r35.z
            dp3 r14.y, r11.xyzx, r34.xyzx
            dp3 r14.z, r25.xyzx, r34.xyzx
            add r14.z, -r35.w, r14.z
            ge r14.w, r14.z, l(0.000000)
            max r14.z, r2.z, |r14.z|
            movc r14.z, r14.w, r14.z, -r14.z
            max r14.y, -r14.y, l(0.00000010)
            div r14.y, r14.z, r14.y
            min r13.w, r13.w, |r14.y|
            mov r35.z, r36.x
            dp3 r14.y, r11.xyzx, r35.xyzx
            dp3 r14.z, r25.xyzx, r35.xyzx
            add r14.z, -r36.y, r14.z
            ge r14.w, r14.z, l(0.000000)
            max r14.z, r2.z, |r14.z|
            movc r14.z, r14.w, r14.z, -r14.z
            max r14.y, -r14.y, l(0.00000010)
            div r14.y, r14.z, r14.y
            min r13.w, r13.w, |r14.y|
            mov r37.zw, r36.zzzw
            dp3 r14.y, r11.zxyz, r37.xzwx
            dp3 r14.z, r25.zxyz, r37.xzwx
            add r14.z, -r37.y, r14.z
            ge r14.w, r14.z, l(0.000000)
            max r14.z, r2.z, |r14.z|
            movc r14.z, r14.w, r14.z, -r14.z
            max r14.y, -r14.y, l(0.00000010)
            div r14.y, r14.z, r14.y
            min r13.w, r13.w, |r14.y|
            mov r24.x, r29.w
            mov r24.yz, r30.zzwz
            add r14.yzw, r25.xxyz, r24.xxyz
            mad r14.yzw, r11.xxyz, r13.wwww, r14.yyzw
            dp3 r15.w, r14.yzwy, r14.yzwy
            sqrt r15.w, r15.w
            div r13.w, r13.w, r15.w
            add r13.w, r13.w, r13.w
            sqrt r13.w, r13.w
            mad r13.w, r0.y, l(5.000000), r13.w
            add r13.w, r13.w, l(-0.844800)
            mov r23.y, r26.z
            mov r23.z, r28.x
            dp3 r32.x, r14.yzwy, r23.xyzx
            mov r24.xy, r26.xwxx
            mov r24.z, r28.w
            dp3 r32.y, r14.yzwy, r24.xyzx
            mov r28.x, r26.y
            dp3 r32.z, r14.yzwy, r28.xyzx
            ubfe r14.y, l(9), l(16), r24.w
            utof r32.w, r14.y
            sample_l_indexable(texturecubearray)(float,float,float,float) r14.yzw, r32.xyzw, t8.wxyz, s2, r13.w
            dp3 r26.x, r25.xyzx, r23.xyzx
            dp3 r26.y, r25.xyzx, r24.xyzx
            dp3 r26.z, r25.xyzx, r28.xyzx
            mad_sat r25.xyz, r26.xyzx, r29.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
            mov r30.z, r31.x
            mad r25.xyz, r25.xyzx, r30.xyzx, r31.yzwy
            dp3 r32.x, r1.xyzx, r23.xyzx
            dp3 r32.y, r1.xyzx, r24.xyzx
            dp3 r32.z, r1.xyzx, r28.xyzx
            lt r23.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r32.xyzx
            movc r13.z, r23.x, l(0), l(0.500000)
            add r24.xyz, r13.xyzx, r25.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r24.xyz, r24.xyzx, t17.xyzw, s4, l(0.000000)
            mul r26.xyz, r32.xyzx, r32.xyzx
            mul r26.xyz, r12.xxxx, r26.xyzx
            movc r15.z, r23.y, l(0), l(0.500000)
            add r23.xyw, r15.xyxz, r25.xyxz
            sample_l_indexable(texture3d)(float,float,float,float) r23.xyw, r23.xywx, t18.xywz, s4, l(0.000000)
            mul r23.xyw, r26.yyyy, r23.xyxw
            mad r23.xyw, r24.xyxz, r26.xxxx, r23.xyxw
            movc r16.z, r23.z, l(0), l(0.500000)
            add r24.xyz, r16.xyzx, r25.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r24.xyz, r24.xyzx, t19.xyzw, s4, l(0.000000)
            mad r23.xyz, r24.xyzx, r26.zzzz, r23.xywx
            sample_l_indexable(texturecubearray)(float,float,float,float) r24.xyz, r32.xyzw, t8.xyzw, s2, l(6.000000)
            mul r25.xyz, r23.xyzx, r24.xyzx
            dp3 r13.z, r25.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r10.xyz, r23.xyzx, r24.xyzx, r10.xyzx
            mul r13.w, r2.w, r13.z
            mul r14.yzw, r12.xxxx, r14.yyzw
            dp3 r12.x, r14.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r12.x, r2.w, r13.z, r12.x
            div r12.x, r13.w, r12.x
            mad r22.xyz, r14.yzwy, r12.xxxx, r22.xyzx
          endif 
        endif 
      endif 
    endloop 
    mov r20.xyzw, r22.xyzw
    mov r21.xyz, r10.xyzx
    iadd r7.w, r7.w, l(32)
  endloop 
  mov r19.xyzw, r20.zxyw
  mov r18.xyz, r21.xyzx
  mov r19.xyzw, r19.yzxw
else 
  mov r19.x, r18.w
endif 
max r0.y, r19.w, l(1.000000)
rcp r0.y, r0.y
mov_sat r19.w, r19.w
mul r9.xyz, r0.yyyy, r18.xyzx
mul r10.xyz, r0.yyyy, r19.xyzx
lt r2.z, r19.w, l(0.990000)
if_nz r2.z
  add r2.z, -r19.w, l(1.000000)
  mul r2.w, r2.z, cb2[19].x
  add r12.xyz, v6.xyzx, -cb2[35].xyzx
  mul r13.x, r12.x, cb2[35].w
  mul r13.yz, r12.yyzy, cb2[36].xxyx
  add_sat r12.xyz, r13.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mul r13.xy, r12.xyxx, cb2[36].zwzz
  mul r13.z, r12.z, cb2[37].x
  add r12.xyz, r13.xyzx, cb2[37].yzwy
  lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r1.xyzx
  movc r13.xyz, r13.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
  mov r13.w, l(0)
  add r14.xyz, r12.xyzx, r13.wwxw
  sample_l_indexable(texture3d)(float,float,float,float) r14.xyz, r14.xyzx, t17.xyzw, s4, l(0.000000)
  mul r15.xyz, r1.xyzx, r1.xyzx
  mul r15.xyz, r2.wwww, r15.xyzx
  add r16.xyz, r12.xyzx, r13.wwyw
  sample_l_indexable(texture3d)(float,float,float,float) r16.xyz, r16.xyzx, t18.xyzw, s4, l(0.000000)
  mul r16.xyz, r15.yyyy, r16.xyzx
  mad r14.xyz, r14.xyzx, r15.xxxx, r16.xyzx
  add r12.xyz, r12.xyzx, r13.wwzw
  sample_l_indexable(texture3d)(float,float,float,float) r12.xyz, r12.xyzx, t19.xyzw, s4, l(0.000000)
  mad r12.xyz, r12.xyzx, r15.zzzz, r14.xyzx
  mov r1.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r1.xyz, r1.xyzw, t8.xyzw, s2, l(6.000000)
  mul r1.xyz, r1.xyzx, r12.xyzx
  dp3 r1.w, r1.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  mad r9.xyz, r18.xyzx, r0.yyyy, r1.xyzx
  mov r11.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r1.xyz, r11.xyzw, t8.xyzw, s2, r0.w
  mad r0.y, cb2[19].x, r2.z, -r1.w
  mad r0.y, r2.y, r0.y, r1.w
  mad r10.xyz, r1.xyzx, r0.yyyy, r10.xyzx
endif 
mad r1.xyz, r9.xyzx, r5.xyzx, r6.xyzx
mad r5.xyz, r9.xyzx, r5.xyzx, r7.xyzx
mad r0.yw, r2.xxxy, l(0.000000, 0.984375, 0.000000, 0.984375), l(0.000000, 0.00781250, 0.000000, 0.00781250)
sample_l_indexable(texture2d)(float,float,float,float) r0.yw, r0.ywyy, t5.zxwy, s2, l(0.000000)
mad r2.xyz, r10.xyzx, r0.yyyy, r4.xyzx
mad r4.xyz, r10.xyzx, r0.wwww, r8.xyzx
mad r1.xyz, r5.xyzx, r3.xyzx, r1.xyzx
mul r2.xyz, r2.xyzx, l(0.972000, 0.972000, 0.972000, 0.000000)
mad r2.xyz, r4.xyzx, l(0.028000, 0.028000, 0.028000, 0.000000), r2.xyzx
add_sat r0.y, r0.z, l(0.040000)
mul r3.xyz, r0.yyyy, r2.xyzx
lt r0.w, l(0.000000), cb2[9].z
if_nz r0.w
  dp3 r1.w, v6.xyzx, v6.xyzx
  sqrt r1.w, r1.w
  lt r2.w, l(0.000000), cb2[13].w
  if_nz r2.w
    mad r4.xy, r1.wwww, cb2[15].xyxx, cb2[14].zwzz
    mul r4.xy, r4.xyxx, cb2[16].xyxx
    lt r2.w, l(0.010000), |v6.z|
    mul r4.zw, v6.zzzz, cb2[15].zzzw
    mul r5.xy, r4.zwzz, l(-1.442695, -1.442695, 0.000000, 0.000000)
    exp r5.xy, r5.xyxx
    add r5.xy, -r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    div r4.zw, r5.xxxy, r4.zzzw
    mul r4.zw, r4.zzzw, r4.xxxy
    movc r4.xy, r2.wwww, r4.zwzz, r4.xyxx
    mul r4.xzw, r4.xxxx, cb2[12].xxyz
    exp r4.xzw, r4.xxzw
    mul r5.xyz, r4.yyyy, cb2[12].xyzx
    exp r5.xyz, r5.xyzx
    add r5.xyz, -r4.xzwx, r5.xyzx
    mad r4.xyz, cb2[13].wwww, r5.xyzx, r4.xzwx
  else 
    mad r1.w, r1.w, cb2[15].x, cb2[14].z
    mul r1.w, r1.w, cb2[16].x
    lt r2.w, l(0.010000), |v6.z|
    mul r3.w, v6.z, cb2[15].z
    mul r4.w, r3.w, l(-1.442695)
    exp r4.w, r4.w
    add r4.w, -r4.w, l(1.000000)
    div r3.w, r4.w, r3.w
    mul r3.w, r1.w, r3.w
    movc r1.w, r2.w, r3.w, r1.w
    mul r5.xyz, r1.wwww, cb2[12].xyzx
    exp r4.xyz, r5.xyzx
  endif 
  mad r4.xyz, r4.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r4.xyz, r4.xyzx, -cb2[9].zzzz
  mul r4.xyz, r1.xyzx, r4.xyzx
else 
  mul r1.w, v6.z, cb2[6].x
  mad r2.w, cb2[6].x, v6.z, cb2[5].x
  lt r3.w, |r1.w|, l(0.000100)
  min r4.w, r2.w, l(64.000000)
  mul r4.w, r4.w, l(1.442695)
  exp r4.w, r4.w
  mov_sat r5.x, cb2[6].z
  lt r5.y, r2.w, l(0.000000)
  add r2.w, r2.w, l(1.000000)
  movc r2.w, r5.y, r4.w, r2.w
  add r2.w, r2.w, -cb2[6].z
  movc r1.w, r3.w, l(1.000000), r1.w
  div r1.w, r2.w, r1.w
  movc r1.w, r3.w, r5.x, r1.w
  mul r1.w, r1.w, cb2[5].z
  dp3 r2.w, v6.xyzx, v6.xyzx
  sqrt r3.w, r2.w
  mad r1.w, r1.w, r3.w, cb2[5].w
  exp r1.w, r1.w
  min r1.w, r1.w, l(1.000000)
  add r1.w, -r1.w, l(1.000000)
  rsq r2.w, r2.w
  mul r5.xyz, r2.wwww, v6.xyzx
  dp3 r2.w, cb2[7].yzwy, r5.xyzx
  mad_sat r2.w, cb2[8].y, r2.w, cb2[8].x
  add r3.w, cb2[3].w, -cb2[4].w
  mad r2.w, r2.w, r3.w, cb2[4].w
  mul r1.w, r1.w, r2.w
  mad r4.xyz, r1.wwww, -r1.xyzx, r1.xyzx
endif 
mul r1.xyz, r4.xyzx, cb1[85].yyyy
ge r4.xyz, r1.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r1.xyz, r1.xyzx, r4.xyzx
min o1.xyz, r1.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
if_nz r0.w
  dp3 r0.w, v6.xyzx, v6.xyzx
  rsq r1.x, r0.w
  mul r1.xyz, r1.xxxx, v6.xyzx
  sqrt r0.w, r0.w
  lt r1.w, l(0.000000), cb2[13].w
  if_nz r1.w
    mad r4.xy, r0.wwww, cb2[15].xyxx, cb2[14].zwzz
    mul r4.xy, r4.xyxx, cb2[16].xyxx
    lt r1.w, l(0.010000), |v6.z|
    mul r4.zw, v6.zzzz, cb2[15].zzzw
    mul r5.xy, r4.zwzz, l(-1.442695, -1.442695, 0.000000, 0.000000)
    exp r5.xy, r5.xyxx
    add r5.xy, -r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    div r4.zw, r5.xxxy, r4.zzzw
    mul r4.zw, r4.zzzw, r4.xxxy
    movc r4.xy, r1.wwww, r4.zwzz, r4.xyxx
    mul r4.xzw, r4.xxxx, cb2[12].xxyz
    exp r4.xzw, r4.xxzw
    mul r5.xyz, r4.yyyy, cb2[12].xyzx
    exp r5.xyz, r5.xyzx
    add r5.xyz, -r4.xzwx, r5.xyzx
    mad r4.xyz, cb2[13].wwww, r5.xyzx, r4.xzwx
  else 
    mad r1.w, r0.w, cb2[15].x, cb2[14].z
    mul r1.w, r1.w, cb2[16].x
    lt r2.w, l(0.010000), |v6.z|
    mul r3.w, v6.z, cb2[15].z
    mul r4.w, r3.w, l(-1.442695)
    exp r4.w, r4.w
    add r4.w, -r4.w, l(1.000000)
    div r3.w, r4.w, r3.w
    mul r3.w, r1.w, r3.w
    movc r1.w, r2.w, r3.w, r1.w
    mul r5.xyz, r1.wwww, cb2[12].xyzx
    exp r4.xyz, r5.xyzx
  endif 
  mad r4.xyz, r4.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r4.xyz, r4.xyzx, -cb2[9].zzzz
  dp3 r1.x, cb2[7].yzwy, -r1.xyzx
  mad r1.y, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r1.z, cb2[8].w, -r1.x, l(1.000000)
  mul r1.z, r1.z, r1.z
  mul r1.z, r1.z, l(12.566371)
  div r1.y, r1.y, r1.z
  add r0.w, r0.w, -cb2[10].w
  mul_sat r0.w, r0.w, cb2[11].w
  mul r0.w, r0.w, r1.y
  mov_sat r1.x, r1.x
  mad r1.x, r1.x, r1.x, l(1.000000)
  mad r1.x, r1.x, l(0.05968310), l(-1.000000)
  mad r1.x, cb2[8].z, r1.x, l(1.000000)
  mul r1.yzw, r0.wwww, cb2[11].xxyz
  mad r1.xyz, r1.xxxx, cb2[10].xyzx, r1.yzwy
  mul r1.xyz, r1.xyzx, cb2[9].wwww
  add r5.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r1.xyz, r1.xyzx, r5.xyzx
  mad r1.xyz, r3.xyzx, r4.xyzx, r1.xyzx
else 
  mul r0.w, v6.z, cb2[6].x
  mad r1.w, cb2[6].x, v6.z, cb2[5].x
  lt r2.w, |r0.w|, l(0.000100)
  min r3.w, r1.w, l(64.000000)
  mul r3.w, r3.w, l(1.442695)
  exp r3.w, r3.w
  mov_sat r4.x, cb2[6].z
  lt r4.y, r1.w, l(0.000000)
  add r1.w, r1.w, l(1.000000)
  movc r1.w, r4.y, r3.w, r1.w
  add r1.w, r1.w, -cb2[6].z
  movc r0.w, r2.w, l(1.000000), r0.w
  div r0.w, r1.w, r0.w
  movc r0.w, r2.w, r4.x, r0.w
  mul r0.w, r0.w, cb2[5].z
  dp3 r1.w, v6.xyzx, v6.xyzx
  sqrt r2.w, r1.w
  mad r0.w, r0.w, r2.w, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  rsq r1.w, r1.w
  mul r4.xyz, r1.wwww, v6.xyzx
  dp3 r1.w, cb2[7].yzwy, r4.xyzx
  mad_sat r1.w, cb2[8].y, r1.w, cb2[8].x
  add r4.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r4.xyzw, r1.wwww, r4.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r4.w
  mad r2.xyz, -r2.xyzx, r0.yyyy, r4.xyzx
  mad r1.xyz, r0.wwww, r2.xyzx, r3.xyzx
endif 
mul r1.xyz, r1.xyzx, cb1[85].yyyy
ge r2.xyz, r1.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r1.xyz, r1.xyzx, r2.xyzx
min o0.xyz, r1.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
add r0.x, -r0.x, l(1.000000)
mul o2.w, r0.x, r0.z
ret 
// Approximately 3614 instruction slots used
