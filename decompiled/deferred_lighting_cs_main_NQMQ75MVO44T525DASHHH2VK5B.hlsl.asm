//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:23:43 2021
//
//
// Buffer Definitions: 
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16 [unused]
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16 [unused]
//   float4 subpixelOffset;             // Offset: 1136 Size:    16
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4 [unused]
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4 [unused]
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4 [unused]
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4 [unused]
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// cbuffer RefProbePackCBuffer
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } refProbeConstantsCB[273];        // Offset:    0 Size: 61152
//
// }
//
// cbuffer RefProbeBlendPackCBuffer
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } refProbeAttenuationConstantsCB[682];// Offset:    0 Size: 65472
//
// }
//
// Resource bind info for gPermutedTilingBuffer
// {
//
//   struct PermutedTilingBuffer
//   {
//       
//       uint2 data;                    // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:     8
//
// }
//
// Resource bind info for gDeferredCullBits
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samplerLinear                     sampler      NA          NA             s2      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// GBufferDiffuseColor               texture  float4          2d             t0      1 
// GBufferNormalAndGloss             texture  float4          2d             t1      1 
// GBufferSpecularColorAndOcclusion    texture  float4          2d             t2      1 
// GBufferDepth                      texture   float          2d             t4      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gPermutedTilingBuffer             texture  struct         r/o            t25      1 
// gDeferredCullBits                 texture  struct         r/o            t26      1 
// gSSAOTexture                      texture   float          2d            t27      1 
// litBuffer                             UAV  float3          2d             u0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
// RefProbePackCBuffer               cbuffer      NA          NA           cb10      1 
// RefProbeBlendPackCBuffer          cbuffer      NA          NA           cb11      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB1[86], immediateIndexed
dcl_constantbuffer CB2[59], immediateIndexed
dcl_constantbuffer CB10[3822], dynamicIndexed
dcl_constantbuffer CB11[4092], dynamicIndexed
dcl_sampler s2, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_structured t25, 8
dcl_resource_structured t26, 4
dcl_resource_texture2d (float,float,float,float) t27
dcl_uav_typed_texture2d (float,float,float,float) u0
dcl_input vThreadGroupID.x
dcl_input vThreadIDInGroup.xy
dcl_temps 31
dcl_thread_group 8, 8, 1
imad r0.x, cb2[57].x, l(49), vThreadGroupID.x
ld_structured_indexable(structured_buffer, stride=8)(mixed,mixed,mixed,mixed) r0.xy, r0.x, l(0), t25.xyxx
and r0.xy, r0.xyxx, l(4095, 4095, 0, 0)
imad r1.xy, r0.xyxx, l(8, 8, 0, 0), vThreadIDInGroup.xyxx
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.xyww, t1.xyzw
ftou r0.zw, cb1[44].xxxy
ult r0.zw, r1.xxxy, r0.zzzw
and r0.z, r0.w, r0.z
lt r0.w, l(0.000000), r2.z
and r0.z, r0.w, r0.z
if_z r0.z
  ret 
endif 
ge r0.w, r2.z, l(0.500000)
ld_indexable(texture2d)(float,float,float,float) r3.x, r1.xyww, t4.xyzw
ld_indexable(texture2d)(float,float,float,float) r3.yzw, r1.xyww, t0.wxyz
ld_indexable(texture2d)(float,float,float,float) r4.xyzw, r1.xyww, t2.xyzw
ld_aoffimmi_indexable(-1,0,0)(texture2d)(float,float,float,float) r5.xyz, r1.xyww, t2.xywz
ld_aoffimmi_indexable(0,-1,0)(texture2d)(float,float,float,float) r6.xyz, r1.xyww, t2.xywz
ld_aoffimmi_indexable(1,0,0)(texture2d)(float,float,float,float) r7.xyz, r1.xyww, t2.xywz
ld_aoffimmi_indexable(0,1,0)(texture2d)(float,float,float,float) r8.xyz, r1.xyzw, t2.xywz
utof r1.zw, r1.xxxy
add r1.zw, r1.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
ge r5.w, r3.x, l(0.984375)
mul r6.w, r3.x, l(1.01587307)
mad r3.x, r3.x, l(64.000000), l(-63.000000)
movc r3.x, r5.w, r3.x, r6.w
max r3.x, r3.x, l(0.00000001)
rcp r3.x, r3.x
and r0.z, r0.z, r3.x
add r9.xy, r1.zwzz, -cb1[71].xyxx
mul r9.xy, r9.xyxx, cb1[44].zwzz
mad r9.xy, r9.xyxx, l(2.000000, -2.000000, 0.000000, 0.000000), l(-1.000000, 1.000000, 0.000000, 0.000000)
mul r10.x, r9.x, cb1[12].x
mul r10.y, r9.y, cb1[13].y
mov r10.z, l(1.000000)
mul r9.xyz, r0.zzzz, r10.xyzx
mul r10.xyz, r9.yyyy, cb1[17].xyzx
mad r9.xyw, r9.xxxx, cb1[16].xyxz, r10.xyxz
mad r9.xyz, r9.zzzz, cb1[18].xyzx, r9.xywx
mad r0.z, r2.w, l(3.000000), l(0.500000)
ftou r0.z, r0.z
mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r2.xy, r2.xyxx, l(0.850000, 0.850000, 0.000000, 0.000000)
dp2 r2.w, r2.xyxx, r2.xyxx
add r10.zw, -r2.wwww, l(0.000000, 0.000000, 2.000000, 1.000000)
sqrt r2.w, r10.z
mul r10.xy, r2.wwww, r2.xyxx
and r11.xyzw, r0.zzzz, l(2, 1, 2, 1)
movc r11.xyzw, r11.zwxy, l(-1.000000,-1.000000,1,1), l(1.000000,1.000000,0,0)
xor r0.z, r11.w, r11.z
movc r11.z, r0.z, l(-1.000000), l(1.000000)
mul r2.xyw, r11.xyxz, l(-1.000000, 0.000000, 0.000000, 1.000000)
mul r12.xyz, r11.xyzx, l(1.000000, -2.000000, 1.000000, 0.000000)
mul r10.xyz, r10.xywx, l(0.40824831, 0.70710677, 0.57735026, 0.000000)
mul r2.xyw, r2.xyxw, r10.yyyy
mad r2.xyw, r12.xyxz, r10.xxxx, r2.xyxw
mad r10.xyz, r11.xyzx, r10.zzzz, r2.xywx
movc r0.z, r0.w, l(-0.500000), l(-0.00146628)
add r0.z, r0.z, r2.z
mul_sat r2.y, r0.z, l(2.00982332)
dp3 r0.z, -r9.xyzx, -r9.xyzx
rsq r0.z, r0.z
mul r11.xyz, r0.zzzz, -r9.xyzx
dp3_sat r2.x, r10.xyzx, r11.xyzx
dp3 r0.z, -r11.xyzx, r10.xyzx
add r0.z, r0.z, r0.z
mad r11.xyz, r10.xyzx, -r0.zzzz, -r11.xyzx
mul r0.z, r2.y, l(17.000000)
exp r0.z, r0.z
add r0.z, r0.z, l(2.000000)
div r0.z, l(2.000000), r0.z
sqrt r0.z, r0.z
mul r1.zw, r1.zzzw, cb1[44].zzzw
sample_l_indexable(texture2d)(float,float,float,float) r0.w, r1.zwzz, t27.yzwx, s4, l(0.000000)
mul r1.z, r0.w, r4.z
add r1.w, -r2.y, l(1.000000)
mul r2.z, r1.w, l(5.000000)
mad r2.w, r1.w, l(5.000000), l(-2.500000)
mul r2.w, r2.w, l(0.400000)
max r2.w, r2.w, l(0.000000)
mul r2.w, r2.w, l(100.000000)
mad r12.xy, -r1.wwww, l(10.000000, 5.000000, 0.000000, 0.000000), l(6.857410, 7.085000, 0.000000, 0.000000)
exp r3.x, r12.x
mul r3.x, r2.x, r3.x
mul r3.x, r3.x, l(9.136810)
mul r5.w, r1.w, r2.z
mad r5.w, -r5.w, l(2.015905), r12.y
exp r5.w, r5.w
mul r5.w, r2.x, r5.w
mul r5.w, r5.w, l(9.708090)
max r3.x, r3.x, r5.w
max r3.x, r3.x, l(1.268160)
iadd r5.w, cb2[0].y, -cb2[58].x
ftou r6.w, cb1[44].x
iadd r6.w, r6.w, l(7)
ushr r6.w, r6.w, l(3)
imad r0.x, r0.y, r6.w, r0.x
bfi r0.x, l(27), l(5), r0.x, l(16)
and r0.y, r5.w, l(-32)
iadd r6.w, -r0.y, r5.w
and r7.w, cb2[0].y, l(-32)
iadd r8.w, -r7.w, cb2[0].y
mov r12.yz, l(0,0,1.000000,0)
mov r13.xy, l(0,0,0,0)
mov r14.x, l(1.000000)
mov r15.xy, l(0,0,0,0)
mov r16.xy, l(0,0,0,0)
mov r17.xyzw, l(0,0,0,0)
mov r18.yzw, l(0,0,0,0)
mov r9.w, r0.y
loop 
  uge r12.w, r9.w, cb2[0].y
  breakc_nz r12.w
  ushr r12.w, r9.w, l(5)
  iadd r12.w, r0.x, r12.w
  ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r12.w, r12.w, l(0), t26.xxxx
  ieq r13.w, r0.y, r9.w
  bfi r14.z, r6.w, l(0), l(0), r12.w
  movc r12.w, r13.w, r14.z, r12.w
  ieq r13.w, r7.w, r9.w
  ubfe r14.z, r8.w, l(0), r12.w
  movc r12.w, r13.w, r14.z, r12.w
  mov r19.xyzw, r17.xyzw
  mov r20.xyz, r18.yzwy
  mov r13.w, r12.w
  loop 
    breakc_z r13.w
    firstbit_lo r14.z, r13.w
    ishl r14.w, l(1), r14.z
    not r14.w, r14.w
    and r13.w, r13.w, r14.w
    iadd r14.z, r9.w, r14.z
    imul null, r14.z, r14.z, l(14)
    add r21.xyz, r9.xyzx, -cb10[r14.z + 0].xyzx
    and r14.w, l(0x0000ffff), cb10[r14.z + 7].z
    ubfe r15.w, l(6), l(25), cb10[r14.z + 7].z
    imul null, r16.w, r14.w, l(6)
    dp3 r21.w, cb11[r16.w + 0].xyzx, r21.xyzx
    add_sat r21.w, r21.w, cb11[r16.w + 0].w
    dp3 r22.x, cb11[r16.w + 1].xyzx, r21.xyzx
    add_sat r22.x, r22.x, cb11[r16.w + 1].w
    mul r21.w, r21.w, r22.x
    dp3 r22.x, cb11[r16.w + 2].xyzx, r21.xyzx
    add_sat r22.x, r22.x, cb11[r16.w + 2].w
    mul r21.w, r21.w, r22.x
    dp3 r22.x, cb11[r16.w + 3].xyzx, r21.xyzx
    add_sat r22.x, r22.x, cb11[r16.w + 3].w
    mul r21.w, r21.w, r22.x
    dp3 r22.x, cb11[r16.w + 4].xyzx, r21.xyzx
    add_sat r22.x, r22.x, cb11[r16.w + 4].w
    mul r21.w, r21.w, r22.x
    dp3 r22.x, cb11[r16.w + 5].xyzx, r21.xyzx
    add_sat r16.w, r22.x, cb11[r16.w + 5].w
    mul r12.x, r16.w, r21.w
    and r16.w, l(1), cb10[r14.z + 6].x
    movc r22.xy, r16.wwww, r12.xyxx, r12.zxzz
    mov r12.x, cb10[r14.z + 6].x
    mov r23.xy, r22.xyxx
    mov r16.w, l(1)
    loop 
      ige r21.w, r16.w, r15.w
      breakc_nz r21.w
      iadd r21.w, r14.w, r16.w
      imul null, r21.w, r21.w, l(6)
      dp3 r22.z, cb11[r21.w + 0].xyzx, r21.xyzx
      add_sat r22.z, r22.z, cb11[r21.w + 0].w
      mul r22.z, r22.z, r23.x
      dp3 r22.w, cb11[r21.w + 1].xyzx, r21.xyzx
      add_sat r22.w, r22.w, cb11[r21.w + 1].w
      mul r22.z, r22.w, r22.z
      dp3 r22.w, cb11[r21.w + 2].xyzx, r21.xyzx
      add_sat r22.w, r22.w, cb11[r21.w + 2].w
      mul r22.z, r22.w, r22.z
      dp3 r22.w, cb11[r21.w + 3].xyzx, r21.xyzx
      add_sat r22.w, r22.w, cb11[r21.w + 3].w
      mul r22.z, r22.w, r22.z
      dp3 r22.w, cb11[r21.w + 4].xyzx, r21.xyzx
      add_sat r22.w, r22.w, cb11[r21.w + 4].w
      mul r22.z, r22.w, r22.z
      dp3 r22.w, cb11[r21.w + 5].xyzx, r21.xyzx
      add_sat r21.w, r22.w, cb11[r21.w + 5].w
      mul r23.x, r21.w, r22.z
      ushr r22.w, r12.x, l(2)
      ubfe r23.z, l(1), l(2), r12.x
      and r23.w, r22.w, l(2)
      max r24.x, r23.x, r23.y
      mad r21.w, -r22.z, r21.w, l(1.000000)
      mul r21.w, r21.w, r23.y
      movc r14.y, r23.w, r21.w, r24.x
      movc r23.xy, r23.zzzz, r23.xyxx, r14.xyxx
      iadd r16.w, r16.w, l(1)
      mov r12.x, r22.w
    endloop 
    mov_sat r23.y, r23.y
    mul r12.x, r23.y, cb10[r14.z + 6].y
    lt r14.y, l(0.000000), r12.x
    if_nz r14.y
      mad r20.z, r23.y, cb10[r14.z + 6].y, r20.z
      mul r12.x, r12.x, cb10[r14.z + 7].y
      mov r22.x, cb10[r14.z + 7].w
      mov r22.yz, cb10[r14.z + 8].xxyx
      dp3 r14.y, r11.xyzx, r22.xyzx
      dp3 r14.w, r21.xyzx, r22.xyzx
      add r14.w, r14.w, -cb10[r14.z + 8].z
      ge r15.w, r14.w, l(0.000000)
      max r14.w, r2.w, |r14.w|
      movc r14.w, r15.w, r14.w, -r14.w
      max r14.y, -r14.y, l(0.00000010)
      div r14.y, r14.w, r14.y
      min r14.y, |r14.y|, l(131072.000000)
      mov r22.x, cb10[r14.z + 8].w
      mov r22.yz, cb10[r14.z + 9].xxyx
      dp3 r14.w, r11.xyzx, r22.xyzx
      dp3 r15.w, r21.xyzx, r22.xyzx
      add r15.w, r15.w, -cb10[r14.z + 9].z
      ge r16.w, r15.w, l(0.000000)
      max r15.w, r2.w, |r15.w|
      movc r15.w, r16.w, r15.w, -r15.w
      max r14.w, -r14.w, l(0.00000010)
      div r14.w, r15.w, r14.w
      min r14.y, |r14.w|, r14.y
      mov r22.x, cb10[r14.z + 9].w
      mov r22.yz, cb10[r14.z + 10].xxyx
      dp3 r14.w, r11.xyzx, r22.xyzx
      dp3 r15.w, r21.xyzx, r22.xyzx
      add r15.w, r15.w, -cb10[r14.z + 10].z
      ge r16.w, r15.w, l(0.000000)
      max r15.w, r2.w, |r15.w|
      movc r15.w, r16.w, r15.w, -r15.w
      max r14.w, -r14.w, l(0.00000010)
      div r14.w, r15.w, r14.w
      min r14.y, |r14.w|, r14.y
      mov r22.x, cb10[r14.z + 10].w
      mov r22.yz, cb10[r14.z + 11].xxyx
      dp3 r14.w, r11.xyzx, r22.xyzx
      dp3 r15.w, r21.xyzx, r22.xyzx
      add r15.w, r15.w, -cb10[r14.z + 11].z
      ge r16.w, r15.w, l(0.000000)
      max r15.w, r2.w, |r15.w|
      movc r15.w, r16.w, r15.w, -r15.w
      max r14.w, -r14.w, l(0.00000010)
      div r14.w, r15.w, r14.w
      min r14.y, |r14.w|, r14.y
      mov r22.x, cb10[r14.z + 11].w
      mov r22.yz, cb10[r14.z + 12].xxyx
      dp3 r14.w, r11.xyzx, r22.xyzx
      dp3 r15.w, r21.xyzx, r22.xyzx
      add r15.w, r15.w, -cb10[r14.z + 12].z
      ge r16.w, r15.w, l(0.000000)
      max r15.w, r2.w, |r15.w|
      movc r15.w, r16.w, r15.w, -r15.w
      max r14.w, -r14.w, l(0.00000010)
      div r14.w, r15.w, r14.w
      min r14.y, |r14.w|, r14.y
      mov r22.x, cb10[r14.z + 12].w
      mov r22.yz, cb10[r14.z + 13].xxyx
      dp3 r14.w, r11.xyzx, r22.xyzx
      dp3 r15.w, r21.xyzx, r22.xyzx
      add r15.w, r15.w, -cb10[r14.z + 13].z
      ge r16.w, r15.w, l(0.000000)
      max r15.w, r2.w, |r15.w|
      movc r15.w, r16.w, r15.w, -r15.w
      max r14.w, -r14.w, l(0.00000010)
      div r14.w, r15.w, r14.w
      min r14.y, |r14.w|, r14.y
      add r22.x, r21.x, cb10[r14.z + 3].w
      add r22.yz, r21.yyzy, cb10[r14.z + 4].xxyx
      mad r22.xyz, r11.xyzx, r14.yyyy, r22.xyzx
      dp3 r14.w, r22.xyzx, r22.xyzx
      sqrt r14.w, r14.w
      div r14.y, r14.y, r14.w
      add r14.y, r14.y, r14.y
      sqrt r14.y, r14.y
      mad r14.y, r1.w, l(5.000000), r14.y
      add r14.y, r14.y, l(-0.844800)
      mov r24.x, cb10[r14.z + 0].w
      mov r24.y, cb10[r14.z + 1].z
      mov r24.z, cb10[r14.z + 2].y
      dp3 r25.x, r22.xyzx, r24.xyzx
      mov r26.xy, cb10[r14.z + 1].xwxx
      mov r26.z, cb10[r14.z + 2].z
      dp3 r25.y, r22.xyzx, r26.xyzx
      mov r27.x, cb10[r14.z + 1].y
      mov r27.yz, cb10[r14.z + 2].xxwx
      dp3 r25.z, r22.xyzx, r27.xyzx
      ubfe r14.w, l(9), l(16), cb10[r14.z + 7].z
      utof r25.w, r14.w
      sample_l_indexable(texturecubearray)(float,float,float,float) r22.xyz, r25.xyzw, t8.xyzw, s2, r14.y
      dp3 r28.x, r21.xyzx, r24.xyzx
      dp3 r28.y, r21.xyzx, r26.xyzx
      dp3 r28.z, r21.xyzx, r27.xyzx
      mad_sat r21.xyz, r28.xyzx, cb10[r14.z + 3].xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
      mul r28.xy, r21.xyxx, cb10[r14.z + 4].zwzz
      mul r28.z, r21.z, cb10[r14.z + 5].x
      add r14.yzw, r28.xxyz, cb10[r14.z + 5].yyzw
      dp3 r25.x, r10.xyzx, r24.xyzx
      dp3 r25.y, r10.xyzx, r26.xyzx
      dp3 r25.z, r10.xyzx, r27.xyzx
      lt r21.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r25.xyzx
      movc r13.z, r21.x, l(0), l(0.500000)
      add r23.xzw, r13.xxyz, r14.yyzw
      sample_l_indexable(texture3d)(float,float,float,float) r23.xzw, r23.xzwx, t17.xwyz, s4, l(0.000000)
      mul r24.xyz, r25.xyzx, r25.xyzx
      mul r24.xyz, r12.xxxx, r24.xyzx
      movc r15.z, r21.y, l(0), l(0.500000)
      add r21.xyw, r14.yzyw, r15.xyxz
      sample_l_indexable(texture3d)(float,float,float,float) r21.xyw, r21.xywx, t18.xywz, s4, l(0.000000)
      mul r21.xyw, r24.yyyy, r21.xyxw
      mad r21.xyw, r23.xzxw, r24.xxxx, r21.xyxw
      movc r16.z, r21.z, l(0), l(0.500000)
      add r14.yzw, r14.yyzw, r16.xxyz
      sample_l_indexable(texture3d)(float,float,float,float) r14.yzw, r14.yzwy, t19.wxyz, s4, l(0.000000)
      mad r14.yzw, r14.yyzw, r24.zzzz, r21.xxyw
      sample_l_indexable(texturecubearray)(float,float,float,float) r21.xyz, r25.xyzw, t8.xyzw, s2, l(6.000000)
      mul r23.xzw, r14.yyzw, r21.xxyz
      dp3 r13.z, r23.xzwx, l(0.212600, 0.715200, 0.072200, 0.000000)
      mad r19.xyz, r14.yzwy, r21.xyzx, r19.xyzx
      mul r14.y, r3.x, r13.z
      mul r21.xyz, r12.xxxx, r22.xyzx
      dp3 r12.x, r21.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
      mad r12.x, r3.x, r13.z, r12.x
      div r12.x, r14.y, r12.x
      mov r22.x, r19.w
      mov r22.yz, r20.xxyx
      mad r20.xyw, r21.yzyx, r12.xxxx, r22.yzyx
      mov r19.w, r20.w
    endif 
  endloop 
  mov r17.xyzw, r19.xyzw
  mov r18.yzw, r20.xxyz
  iadd r9.w, r9.w, l(32)
endloop 
lt r7.w, r18.w, l(1.000000)
if_nz r7.w
  mov r12.yz, l(0,0,1.000000,0)
  mov r13.xy, l(0,0,0,0)
  mov r14.x, l(1.000000)
  mov r15.xy, l(0,0,0,0)
  mov r16.xy, l(0,0,0,0)
  mov r19.x, r17.w
  mov r19.yzw, r18.yyzw
  mov r20.xyz, r17.xyzx
  mov r7.w, r18.w
  mov r8.w, l(0)
  loop 
    uge r9.w, r8.w, r5.w
    breakc_nz r9.w
    ushr r9.w, r8.w, l(5)
    iadd r9.w, r0.x, r9.w
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r9.w, r9.w, l(0), t26.xxxx
    ieq r12.w, r0.y, r8.w
    ubfe r13.w, r6.w, l(0), r9.w
    movc r9.w, r12.w, r13.w, r9.w
    mov r21.xyzw, r19.xyzw
    mov r22.xyz, r20.xyzx
    mov r12.w, r7.w
    mov r13.w, r9.w
    loop 
      breakc_z r13.w
      firstbit_lo r14.z, r13.w
      ishl r14.w, l(1), r14.z
      not r14.w, r14.w
      and r13.w, r13.w, r14.w
      iadd r14.z, r8.w, r14.z
      imul null, r14.z, r14.z, l(14)
      add r23.xyz, r9.xyzx, -cb10[r14.z + 0].xyzx
      and r14.w, l(0x0000ffff), cb10[r14.z + 7].z
      ubfe r15.w, l(6), l(25), cb10[r14.z + 7].z
      imul null, r16.w, r14.w, l(6)
      dp3 r20.w, cb11[r16.w + 0].xyzx, r23.xyzx
      add_sat r20.w, r20.w, cb11[r16.w + 0].w
      dp3 r22.w, cb11[r16.w + 1].xyzx, r23.xyzx
      add_sat r22.w, r22.w, cb11[r16.w + 1].w
      mul r20.w, r20.w, r22.w
      dp3 r22.w, cb11[r16.w + 2].xyzx, r23.xyzx
      add_sat r22.w, r22.w, cb11[r16.w + 2].w
      mul r20.w, r20.w, r22.w
      dp3 r22.w, cb11[r16.w + 3].xyzx, r23.xyzx
      add_sat r22.w, r22.w, cb11[r16.w + 3].w
      mul r20.w, r20.w, r22.w
      dp3 r22.w, cb11[r16.w + 4].xyzx, r23.xyzx
      add_sat r22.w, r22.w, cb11[r16.w + 4].w
      mul r20.w, r20.w, r22.w
      dp3 r22.w, cb11[r16.w + 5].xyzx, r23.xyzx
      add_sat r16.w, r22.w, cb11[r16.w + 5].w
      mul r12.x, r16.w, r20.w
      and r16.w, l(1), cb10[r14.z + 6].x
      movc r24.xy, r16.wwww, r12.xyxx, r12.zxzz
      mov r12.x, cb10[r14.z + 6].x
      mov r25.xy, r24.xyxx
      mov r16.w, l(1)
      loop 
        ige r20.w, r16.w, r15.w
        breakc_nz r20.w
        iadd r20.w, r14.w, r16.w
        imul null, r20.w, r20.w, l(6)
        dp3 r22.w, cb11[r20.w + 0].xyzx, r23.xyzx
        add_sat r22.w, r22.w, cb11[r20.w + 0].w
        mul r22.w, r22.w, r25.x
        dp3 r23.w, cb11[r20.w + 1].xyzx, r23.xyzx
        add_sat r23.w, r23.w, cb11[r20.w + 1].w
        mul r22.w, r22.w, r23.w
        dp3 r23.w, cb11[r20.w + 2].xyzx, r23.xyzx
        add_sat r23.w, r23.w, cb11[r20.w + 2].w
        mul r22.w, r22.w, r23.w
        dp3 r23.w, cb11[r20.w + 3].xyzx, r23.xyzx
        add_sat r23.w, r23.w, cb11[r20.w + 3].w
        mul r22.w, r22.w, r23.w
        dp3 r23.w, cb11[r20.w + 4].xyzx, r23.xyzx
        add_sat r23.w, r23.w, cb11[r20.w + 4].w
        mul r22.w, r22.w, r23.w
        dp3 r23.w, cb11[r20.w + 5].xyzx, r23.xyzx
        add_sat r20.w, r23.w, cb11[r20.w + 5].w
        mul r25.x, r20.w, r22.w
        ushr r23.w, r12.x, l(2)
        ubfe r24.z, l(1), l(2), r12.x
        and r24.w, r23.w, l(2)
        max r25.z, r25.x, r25.y
        mad r20.w, -r22.w, r20.w, l(1.000000)
        mul r20.w, r20.w, r25.y
        movc r14.y, r24.w, r20.w, r25.z
        movc r25.xy, r24.zzzz, r25.xyxx, r14.xyxx
        iadd r16.w, r16.w, l(1)
        mov r12.x, r23.w
      endloop 
      add_sat r12.x, -r12.w, r25.y
      mul r14.y, r12.x, cb10[r14.z + 6].y
      lt r14.w, l(0.000000), r14.y
      if_nz r14.w
        mad r21.w, r12.x, cb10[r14.z + 6].y, r21.w
        mul r12.x, r14.y, cb10[r14.z + 7].y
        mov r24.x, cb10[r14.z + 7].w
        mov r24.yz, cb10[r14.z + 8].xxyx
        dp3 r14.y, r11.xyzx, r24.xyzx
        dp3 r14.w, r23.xyzx, r24.xyzx
        add r14.w, r14.w, -cb10[r14.z + 8].z
        ge r15.w, r14.w, l(0.000000)
        max r14.w, r2.w, |r14.w|
        movc r14.w, r15.w, r14.w, -r14.w
        max r14.y, -r14.y, l(0.00000010)
        div r14.y, r14.w, r14.y
        min r14.y, |r14.y|, l(131072.000000)
        mov r24.x, cb10[r14.z + 8].w
        mov r24.yz, cb10[r14.z + 9].xxyx
        dp3 r14.w, r11.xyzx, r24.xyzx
        dp3 r15.w, r23.xyzx, r24.xyzx
        add r15.w, r15.w, -cb10[r14.z + 9].z
        ge r16.w, r15.w, l(0.000000)
        max r15.w, r2.w, |r15.w|
        movc r15.w, r16.w, r15.w, -r15.w
        max r14.w, -r14.w, l(0.00000010)
        div r14.w, r15.w, r14.w
        min r14.y, |r14.w|, r14.y
        mov r24.x, cb10[r14.z + 9].w
        mov r24.yz, cb10[r14.z + 10].xxyx
        dp3 r14.w, r11.xyzx, r24.xyzx
        dp3 r15.w, r23.xyzx, r24.xyzx
        add r15.w, r15.w, -cb10[r14.z + 10].z
        ge r16.w, r15.w, l(0.000000)
        max r15.w, r2.w, |r15.w|
        movc r15.w, r16.w, r15.w, -r15.w
        max r14.w, -r14.w, l(0.00000010)
        div r14.w, r15.w, r14.w
        min r14.y, |r14.w|, r14.y
        mov r24.x, cb10[r14.z + 10].w
        mov r24.yz, cb10[r14.z + 11].xxyx
        dp3 r14.w, r11.xyzx, r24.xyzx
        dp3 r15.w, r23.xyzx, r24.xyzx
        add r15.w, r15.w, -cb10[r14.z + 11].z
        ge r16.w, r15.w, l(0.000000)
        max r15.w, r2.w, |r15.w|
        movc r15.w, r16.w, r15.w, -r15.w
        max r14.w, -r14.w, l(0.00000010)
        div r14.w, r15.w, r14.w
        min r14.y, |r14.w|, r14.y
        mov r24.x, cb10[r14.z + 11].w
        mov r24.yz, cb10[r14.z + 12].xxyx
        dp3 r14.w, r11.xyzx, r24.xyzx
        dp3 r15.w, r23.xyzx, r24.xyzx
        add r15.w, r15.w, -cb10[r14.z + 12].z
        ge r16.w, r15.w, l(0.000000)
        max r15.w, r2.w, |r15.w|
        movc r15.w, r16.w, r15.w, -r15.w
        max r14.w, -r14.w, l(0.00000010)
        div r14.w, r15.w, r14.w
        min r14.y, |r14.w|, r14.y
        mov r24.x, cb10[r14.z + 12].w
        mov r24.yz, cb10[r14.z + 13].xxyx
        dp3 r14.w, r11.xyzx, r24.xyzx
        dp3 r15.w, r23.xyzx, r24.xyzx
        add r15.w, r15.w, -cb10[r14.z + 13].z
        ge r16.w, r15.w, l(0.000000)
        max r15.w, r2.w, |r15.w|
        movc r15.w, r16.w, r15.w, -r15.w
        max r14.w, -r14.w, l(0.00000010)
        div r14.w, r15.w, r14.w
        min r14.y, |r14.w|, r14.y
        add r24.x, r23.x, cb10[r14.z + 3].w
        add r24.yz, r23.yyzy, cb10[r14.z + 4].xxyx
        mad r24.xyz, r11.xyzx, r14.yyyy, r24.xyzx
        dp3 r14.w, r24.xyzx, r24.xyzx
        sqrt r14.w, r14.w
        div r14.y, r14.y, r14.w
        add r14.y, r14.y, r14.y
        sqrt r14.y, r14.y
        mad r14.y, r1.w, l(5.000000), r14.y
        add r14.y, r14.y, l(-0.844800)
        mov r26.x, cb10[r14.z + 0].w
        mov r26.y, cb10[r14.z + 1].z
        mov r26.z, cb10[r14.z + 2].y
        dp3 r27.x, r24.xyzx, r26.xyzx
        mov r28.xy, cb10[r14.z + 1].xwxx
        mov r28.z, cb10[r14.z + 2].z
        dp3 r27.y, r24.xyzx, r28.xyzx
        mov r29.x, cb10[r14.z + 1].y
        mov r29.yz, cb10[r14.z + 2].xxwx
        dp3 r27.z, r24.xyzx, r29.xyzx
        ubfe r14.w, l(9), l(16), cb10[r14.z + 7].z
        utof r27.w, r14.w
        sample_l_indexable(texturecubearray)(float,float,float,float) r24.xyz, r27.xyzw, t8.xyzw, s2, r14.y
        dp3 r30.x, r23.xyzx, r26.xyzx
        dp3 r30.y, r23.xyzx, r28.xyzx
        dp3 r30.z, r23.xyzx, r29.xyzx
        mad_sat r23.xyz, r30.xyzx, cb10[r14.z + 3].xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
        mul r30.xy, r23.xyxx, cb10[r14.z + 4].zwzz
        mul r30.z, r23.z, cb10[r14.z + 5].x
        add r14.yzw, r30.xxyz, cb10[r14.z + 5].yyzw
        dp3 r27.x, r10.xyzx, r26.xyzx
        dp3 r27.y, r10.xyzx, r28.xyzx
        dp3 r27.z, r10.xyzx, r29.xyzx
        lt r23.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r27.xyzx
        movc r13.z, r23.x, l(0), l(0.500000)
        add r25.xzw, r13.xxyz, r14.yyzw
        sample_l_indexable(texture3d)(float,float,float,float) r25.xzw, r25.xzwx, t17.xwyz, s4, l(0.000000)
        mul r26.xyz, r27.xyzx, r27.xyzx
        mul r26.xyz, r12.xxxx, r26.xyzx
        movc r15.z, r23.y, l(0), l(0.500000)
        add r23.xyw, r14.yzyw, r15.xyxz
        sample_l_indexable(texture3d)(float,float,float,float) r23.xyw, r23.xywx, t18.xywz, s4, l(0.000000)
        mul r23.xyw, r26.yyyy, r23.xyxw
        mad r23.xyw, r25.xzxw, r26.xxxx, r23.xyxw
        movc r16.z, r23.z, l(0), l(0.500000)
        add r14.yzw, r14.yyzw, r16.xxyz
        sample_l_indexable(texture3d)(float,float,float,float) r14.yzw, r14.yzwy, t19.wxyz, s4, l(0.000000)
        mad r14.yzw, r14.yyzw, r26.zzzz, r23.xxyw
        sample_l_indexable(texturecubearray)(float,float,float,float) r23.xyz, r27.xyzw, t8.xyzw, s2, l(6.000000)
        mul r25.xzw, r14.yyzw, r23.xxyz
        dp3 r13.z, r25.xzwx, l(0.212600, 0.715200, 0.072200, 0.000000)
        mad r22.xyz, r14.yzwy, r23.xyzx, r22.xyzx
        mul r14.y, r3.x, r13.z
        mul r23.xyz, r12.xxxx, r24.xyzx
        dp3 r12.x, r23.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
        mad r12.x, r3.x, r13.z, r12.x
        div r12.x, r14.y, r12.x
        mad r21.xyz, r23.xyzx, r12.xxxx, r21.xyzx
      endif 
    endloop 
    mov r19.xyzw, r21.xyzw
    mov r20.xyz, r22.xyzx
    iadd r8.w, r8.w, l(32)
  endloop 
  mov r18.xyzw, r19.zxyw
  mov r17.xyz, r20.xyzx
  mov r18.xyzw, r18.yzxw
else 
  mov r18.x, r17.w
endif 
max r0.x, r18.w, l(1.000000)
rcp r0.x, r0.x
mov_sat r18.w, r18.w
mul r12.xyz, r0.xxxx, r17.xyzx
mul r13.xyz, r0.xxxx, r18.xyzx
lt r0.y, r18.w, l(0.990000)
if_nz r0.y
  add r0.y, -r18.w, l(1.000000)
  mul r1.w, r0.y, cb2[19].x
  add r14.xyz, r9.xyzx, -cb2[35].xyzx
  mul r15.x, r14.x, cb2[35].w
  mul r15.yz, r14.yyzy, cb2[36].xxyx
  add_sat r14.xyz, r15.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mul r15.xy, r14.xyxx, cb2[36].zwzz
  mul r15.z, r14.z, cb2[37].x
  add r14.xyz, r15.xyzx, cb2[37].yzwy
  lt r15.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
  movc r15.xyz, r15.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
  mov r15.w, l(0)
  add r16.xyz, r14.xyzx, r15.wwxw
  sample_l_indexable(texture3d)(float,float,float,float) r16.xyz, r16.xyzx, t17.xyzw, s4, l(0.000000)
  mul r18.xyz, r10.xyzx, r10.xyzx
  mul r18.xyz, r1.wwww, r18.xyzx
  add r19.xyz, r14.xyzx, r15.wwyw
  sample_l_indexable(texture3d)(float,float,float,float) r19.xyz, r19.xyzx, t18.xyzw, s4, l(0.000000)
  mul r19.xyz, r18.yyyy, r19.xyzx
  mad r16.xyz, r16.xyzx, r18.xxxx, r19.xyzx
  add r14.xyz, r14.xyzx, r15.wwzw
  sample_l_indexable(texture3d)(float,float,float,float) r14.xyz, r14.xyzx, t19.xyzw, s4, l(0.000000)
  mad r14.xyz, r14.xyzx, r18.zzzz, r16.xyzx
  mov r10.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r10.xyz, r10.xyzw, t8.xyzw, s2, l(6.000000)
  mul r10.xyz, r10.xyzx, r14.xyzx
  dp3 r1.w, r10.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  mad r12.xyz, r17.xyzx, r0.xxxx, r10.xyzx
  mov r11.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r10.xyz, r11.xyzw, t8.xyzw, s2, r2.z
  mad r0.x, cb2[19].x, r0.y, -r1.w
  mad r0.x, r2.y, r0.x, r1.w
  mad r13.xyz, r10.xyzx, r0.xxxx, r13.xyzx
endif 
mad r0.x, r4.z, r0.w, r2.x
log r0.x, |r0.x|
mul r0.x, r0.x, r0.z
exp r0.x, r0.x
mad r0.x, r4.z, r0.w, r0.x
add_sat r0.x, r0.x, l(-1.000000)
mul r0.yzw, r1.zzzz, r12.xxyz
mad r1.zw, r2.xxxy, l(0.000000, 0.000000, 0.984375, 0.984375), l(0.000000, 0.000000, 0.00781250, 0.00781250)
sample_l_indexable(texture2d)(float,float,float,float) r1.zw, r1.zwzz, t5.zwxy, s2, l(0.000000)
mul r2.xyz, r0.xxxx, r13.xyzx
mul r10.xyz, r1.zzzz, r2.xyzx
mul r2.xyz, r1.wwww, r2.xyzx
mad r4.xyz, r4.xwyx, l(1.000000, 3.000000, 2.000000, 0.000000), l(0.000000, 0.500000, -1.000000, 0.000000)
ftou r0.x, r4.y
mad r5.xyz, r5.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r1.z, r5.x
ieq r1.z, r0.x, r1.z
movc r1.zw, r1.zzzz, r5.yyyz, l(0,0,-1.000000,0)
mad r5.xyz, r6.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r2.w, r5.x
ieq r2.w, r0.x, r2.w
movc r5.xy, r2.wwww, r5.yzyy, l(-1.000000,0,0,0)
mad r6.xyz, r7.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r2.w, r6.x
ieq r2.w, r0.x, r2.w
movc r5.zw, r2.wwww, r6.yyyz, l(0,0,-1.000000,0)
mad r6.xyz, r8.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r2.w, r6.x
ieq r0.x, r0.x, r2.w
movc r6.xy, r0.xxxx, r6.yzyy, l(-1.000000,0,0,0)
mov r7.x, r1.z
mov r7.yz, r5.xxzx
mov r7.w, r6.x
add r7.xyzw, -r4.xxxx, r7.xyzw
ge r7.xyzw, |r7.xyzw|, l(0.00902149, 0.00902149, 0.00902149, 0.00902149)
movc r7.xyzw, r7.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
add r0.x, r7.y, r7.x
add r0.x, r7.z, r0.x
add r0.x, r7.w, r0.x
mul r1.z, r5.y, r7.y
mad r1.z, r7.x, r1.w, r1.z
mad r1.z, r7.z, r5.w, r1.z
mad r1.z, r7.w, r6.y, r1.z
div r4.w, r1.z, r0.x
ge r0.x, l(0.000000), r0.x
movc r4.yz, r0.xxxx, l(0,0,0,0), r4.zzwz
and r1.zw, r1.xxxy, l(0, 0, 1, 1)
ieq r0.x, r1.w, r1.z
movc r4.xyz, r0.xxxx, r4.xyzx, r4.xzyx
mad r0.x, -r4.z, l(0.500000), r4.x
add r5.y, r0.x, r4.z
mad r5.z, -r4.y, l(0.500000), r0.x
add r5.x, r4.y, r5.z
add r4.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r4.xyz, r4.xyzx, r10.xyzx
mad r2.xyz, r2.xyzx, r5.xyzx, r4.xyzx
mad r0.xyz, r0.yzwy, r3.yzwy, r2.xyzx
lt r0.w, l(0.000000), cb2[9].z
if_nz r0.w
  dp3 r0.w, r9.xyzx, r9.xyzx
  rsq r1.z, r0.w
  mul r2.xyz, r1.zzzz, r9.xyzx
  sqrt r0.w, r0.w
  lt r1.z, l(0.000000), cb2[13].w
  if_nz r1.z
    mad r1.zw, r0.wwww, cb2[15].xxxy, cb2[14].zzzw
    mul r1.zw, r1.zzzw, cb2[16].xxxy
    lt r2.w, l(0.010000), |r9.z|
    mul r3.xy, r9.zzzz, cb2[15].zwzz
    mul r3.zw, r3.xxxy, l(0.000000, 0.000000, -1.442695, -1.442695)
    exp r3.zw, r3.zzzw
    add r3.zw, -r3.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    div r3.xy, r3.zwzz, r3.xyxx
    mul r3.xy, r1.zwzz, r3.xyxx
    movc r1.zw, r2.wwww, r3.xxxy, r1.zzzw
    mul r3.xyz, r1.zzzz, cb2[12].xyzx
    exp r3.xyz, r3.xyzx
    mul r4.xyz, r1.wwww, cb2[12].xyzx
    exp r4.xyz, r4.xyzx
    add r4.xyz, -r3.xyzx, r4.xyzx
    mad r3.xyz, cb2[13].wwww, r4.xyzx, r3.xyzx
  else 
    mad r1.z, r0.w, cb2[15].x, cb2[14].z
    mul r1.z, r1.z, cb2[16].x
    lt r1.w, l(0.010000), |r9.z|
    mul r2.w, r9.z, cb2[15].z
    mul r3.w, r2.w, l(-1.442695)
    exp r3.w, r3.w
    add r3.w, -r3.w, l(1.000000)
    div r2.w, r3.w, r2.w
    mul r2.w, r1.z, r2.w
    movc r1.z, r1.w, r2.w, r1.z
    mul r4.xyz, r1.zzzz, cb2[12].xyzx
    exp r3.xyz, r4.xyzx
  endif 
  mad r3.xyz, r3.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r3.xyz, r3.xyzx, -cb2[9].zzzz
  dp3 r1.z, cb2[7].yzwy, -r2.xyzx
  mad r1.w, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r2.x, cb2[8].w, -r1.z, l(1.000000)
  mul r2.x, r2.x, r2.x
  mul r2.x, r2.x, l(12.566371)
  div r1.w, r1.w, r2.x
  add r0.w, r0.w, -cb2[10].w
  mul_sat r0.w, r0.w, cb2[11].w
  mul r0.w, r0.w, r1.w
  mov_sat r1.z, r1.z
  mad r1.z, r1.z, r1.z, l(1.000000)
  mad r1.z, r1.z, l(0.05968310), l(-1.000000)
  mad r1.z, cb2[8].z, r1.z, l(1.000000)
  mul r2.xyz, r0.wwww, cb2[11].xyzx
  mad r2.xyz, r1.zzzz, cb2[10].xyzx, r2.xyzx
  mul r2.xyz, r2.xyzx, cb2[9].wwww
  add r4.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r2.xyz, r2.xyzx, r4.xyzx
  mad r2.xyz, r0.xyzx, r3.xyzx, r2.xyzx
else 
  mul r0.w, r9.z, cb2[6].x
  mad r1.z, cb2[6].x, r9.z, cb2[5].x
  lt r1.w, |r0.w|, l(0.000100)
  min r2.w, r1.z, l(64.000000)
  mul r2.w, r2.w, l(1.442695)
  exp r2.w, r2.w
  mov_sat r3.x, cb2[6].z
  lt r3.y, r1.z, l(0.000000)
  add r1.z, r1.z, l(1.000000)
  movc r1.z, r3.y, r2.w, r1.z
  add r1.z, r1.z, -cb2[6].z
  movc r0.w, r1.w, l(1.000000), r0.w
  div r0.w, r1.z, r0.w
  movc r0.w, r1.w, r3.x, r0.w
  mul r0.w, r0.w, cb2[5].z
  dp3 r1.z, r9.xyzx, r9.xyzx
  sqrt r1.w, r1.z
  mad r0.w, r0.w, r1.w, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  rsq r1.z, r1.z
  mul r3.xyz, r1.zzzz, r9.xyzx
  dp3 r1.z, cb2[7].yzwy, r3.xyzx
  mad_sat r1.z, cb2[8].y, r1.z, cb2[8].x
  add r3.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r3.xyzw, r1.zzzz, r3.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r3.w
  add r3.xyz, -r0.xyzx, r3.xyzx
  mad r2.xyz, r0.wwww, r3.xyzx, r0.xyzx
endif 
mul r0.xyzw, r2.xyzx, cb1[85].yyyy
ge r2.xyzw, r0.wyzw, l(0.00006104, 0.00006104, 0.00006104, 0.00006104)
and r0.xyzw, r0.xyzw, r2.xyzw
min r0.xyzw, r0.xyzw, l(65024.000000, 65024.000000, 64512.000000, 65024.000000)
store_uav_typed u0.xyzw, r1.xyyy, r0.xyzw
ret 
// Approximately 764 instruction slots used
