//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:40:02 2021
//
//
// Buffer Definitions: 
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16 [unused]
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16 [unused]
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4 [unused]
//   uint numRefProbes;                 // Offset:    4 Size:     4 [unused]
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224 [unused]
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256 [unused]
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48 [unused]
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4 [unused]
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4 [unused]
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4 [unused]
//   uint enableDitheredShadow;         // Offset:  932 Size:     4 [unused]
//   uint oitMaxEntries;                // Offset:  936 Size:     4
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for spritePos
// {
//
//   struct FxComputeSprite_PosPack
//   {
//       
//       uint4 data[2];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    32
//
// }
//
// Resource bind info for spriteData
// {
//
//   struct FxComputeSprite_DataPack
//   {
//       
//       uint4 data[4];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    64
//
// }
//
// Resource bind info for spriteExtra
// {
//
//   struct FxComputeSprite_ExtraPack
//   {
//       
//       uint4 data[3];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    48
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// computeSpritesSampler             sampler      NA          NA             s0      1 
// floatZSampler                     texture  float4          2d             t0      1 
// spritePos                         texture  struct         r/o             t1      1 
// spriteData                        texture  struct         r/o             t2      1 
// spriteExtra                       texture  struct         r/o             t3      1 
// frameBuffer                       texture  float4          2d            t21      1 
// oitFallbackBuffer                 texture  float4          2d            t22      1 
// oit_Nodes                         texture   uint2     2darray            t24      1 
// spriteCullRough                   texture    uint     2darray            t25      1 
// spriteCullRoughRough              texture    uint     2darray            t26      1 
// lmapTex                           texture  float4     2darray            t29      1 
// materialTexBC7                    texture  float4     2darray            t42      1 
// materialTexBC3                    texture  float4     2darray            t43      1 
// materialTexMask                   texture  float4     2darray            t45      1 
// frameAdaptiveTransparencyDepth        UAV  float4          2d             u2      1 
// frameAdaptiveTransparencyTrans        UAV  float4          2d             u3      1 
// frameAlphaResult                      UAV   float          2d             u4      1 
// frameBufferW                          UAV  float4          2d             u5      1 
// gOit_Pixels                           UAV    uint          2d             u6      1 
// frameDepthW                           UAV   float          2d             u7      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB1[86], immediateIndexed
dcl_constantbuffer CB2[59], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_structured t1, 32
dcl_resource_structured t2, 64
dcl_resource_structured t3, 48
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_texture2darray (uint,uint,uint,uint) t24
dcl_resource_texture2darray (uint,uint,uint,uint) t25
dcl_resource_texture2darray (uint,uint,uint,uint) t26
dcl_resource_texture2darray (float,float,float,float) t29
dcl_resource_texture2darray (float,float,float,float) t42
dcl_resource_texture2darray (float,float,float,float) t43
dcl_resource_texture2darray (float,float,float,float) t45
dcl_uav_typed_texture2d (float,float,float,float) u2
dcl_uav_typed_texture2d (float,float,float,float) u3
dcl_uav_typed_texture2d (float,float,float,float) u4
dcl_uav_typed_texture2d (float,float,float,float) u5
dcl_uav_typed_texture2d (uint,uint,uint,uint) u6
dcl_uav_typed_texture2d (float,float,float,float) u7
dcl_input vThreadIDInGroupFlattened
dcl_input vThreadGroupID.xy
dcl_input vThreadID.xy
dcl_temps 28
dcl_indexableTemp x0[4], 4
dcl_indexableTemp x1[4], 4
dcl_indexableTemp x2[4], 4
dcl_indexableTemp x3[4], 4
dcl_indexableTemp x4[4], 4
dcl_indexableTemp x5[4], 4
dcl_indexableTemp x6[4], 4
dcl_indexableTemp x7[4], 4
dcl_indexableTemp x8[4], 4
dcl_indexableTemp x9[4], 4
dcl_tgsm_structured g0, 20, 64
dcl_tgsm_structured g1, 20, 64
dcl_thread_group 8, 8, 1
ftou r0.xy, cb1[44].xyxx
ult r0.xy, r0.xyxx, vThreadID.xyxx
or r0.x, r0.y, r0.x
if_nz r0.x
  ret 
endif 
ld_uav_typed_indexable(texture2d)(uint,uint,uint,uint) r0.x, vThreadID.xyyy, u6.xyzw
ieq r0.y, r0.x, l(0)
ieq r0.z, cb1[82].x, l(0)
and r0.y, r0.z, r0.y
if_nz r0.y
  store_uav_typed u4.xyzw, vThreadID.xyyy, l(1.000000,1.000000,1.000000,1.000000)
  mov r1.xy, vThreadID.xyxx
  mov r1.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r0.y, r1.xyzw, t0.yxzw
  store_uav_typed u7.xyzw, vThreadID.xyyy, r0.yyyy
  ret 
endif 
and r0.y, r0.x, l(0x0000ffff)
umin r0.y, r0.y, cb2[58].z
store_structured g0.xyzw, vThreadIDInGroupFlattened.x, l(0), l(1000000015047466219876688855040.000000,1000000015047466219876688855040.000000,1000000015047466219876688855040.000000,1000000015047466219876688855040.000000)
store_structured g1.xyzw, vThreadIDInGroupFlattened.x, l(0), l(1.000000,1.000000,1.000000,1.000000)
if_nz r0.y
  ult r1.xyz, l(1, 2, 3, 0), r0.yyyy
  if_nz r0.y
    mov r2.xy, vThreadID.xyxx
    mov r2.zw, l(0,0,0,0)
    ld_indexable(texture2darray)(uint,uint,uint,uint) r0.z, r2.xyzw, t24.xzyw
    and r2.xyz, r0.zzzz, l(-2048, 1, 2046, 0)
    movc r3.x, r2.y, r0.z, l(0)
    utof r0.w, r2.z
    mad r1.w, -r0.w, l(0.00048876), l(1.000000)
    lt r0.w, l(409.200012), r0.w
    if_nz r0.w
      ushr r0.w, r0.z, l(2)
      and r0.w, r0.w, l(0x3ffffe00)
      ge r2.y, r0.w, l(0.00049219)
      if_nz r2.y
        add r0.w, -r0.w, l(1.000000)
        store_structured g0.x, vThreadIDInGroupFlattened.x, l(16), l(1000000015047466219876688855040.000000)
        store_structured g1.x, vThreadIDInGroupFlattened.x, l(16), l(1.000000)
        mov r2.y, l(3)
        loop 
          ilt r2.z, r2.y, l(0)
          breakc_nz r2.z
          ige r2.z, r2.y, l(0)
          if_nz r2.z
            ishl r2.z, r2.y, l(2)
            iadd r2.w, r2.z, l(4)
            ld_structured r3.z, vThreadIDInGroupFlattened.x, r2.z, g0.xxxx
            store_structured g0.x, vThreadIDInGroupFlattened.x, r2.w, r3.z
            ld_structured r2.z, vThreadIDInGroupFlattened.x, r2.z, g1.xxxx
            mul r2.z, r1.w, r2.z
            store_structured g1.x, vThreadIDInGroupFlattened.x, r2.w, r2.z
          endif 
          iadd r2.y, r2.y, l(-1)
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, l(0), r0.w
        store_structured g1.x, vThreadIDInGroupFlattened.x, l(0), r1.w
        ld_structured r0.w, vThreadIDInGroupFlattened.x, l(16), g0.xxxx
        ne r0.w, r0.w, l(1000000015047466219876688855040.000000)
        if_nz r0.w
          mov r0.w, l(2)
          loop 
            ige r2.y, r0.w, l(4)
            breakc_nz r2.y
            ishl r2.y, r0.w, l(2)
            ld_structured r2.z, vThreadIDInGroupFlattened.x, r2.y, g0.xxxx
            iadd r2.y, r2.y, l(-4)
            ld_structured r2.w, vThreadIDInGroupFlattened.x, r2.y, g0.xxxx
            add r2.z, -r2.w, r2.z
            ld_structured r2.yw, vThreadIDInGroupFlattened.x, r2.y, g1.xxxy
            add r2.y, -r2.w, r2.y
            mul r2.y, r2.y, r2.z
            mov x0[r0.w + 0].x, r2.y
            iadd r0.w, r0.w, l(1)
          endloop 
          mov r0.w, x0[2].x
          mov r2.y, x0[3].x
          lt r0.w, r2.y, r0.w
          movc r2.yz, r0.wwww, l(0,3,2,0), l(0,2,1,0)
          mov r0.w, l(2)
          loop 
            ige r2.w, r0.w, l(4)
            breakc_nz r2.w
            ige r2.w, r0.w, r2.y
            if_nz r2.w
              ishl r2.w, r0.w, l(2)
              iadd r3.z, r2.w, l(4)
              ld_structured r3.z, vThreadIDInGroupFlattened.x, r3.z, g0.xxxx
              store_structured g0.x, vThreadIDInGroupFlattened.x, r2.w, r3.z
            endif 
            iadd r0.w, r0.w, l(1)
          endloop 
          mov r0.w, l(1)
          loop 
            ige r2.y, r0.w, l(4)
            breakc_nz r2.y
            ige r2.y, r0.w, r2.z
            if_nz r2.y
              ishl r2.y, r0.w, l(2)
              iadd r2.w, r2.y, l(4)
              ld_structured r2.w, vThreadIDInGroupFlattened.x, r2.w, g1.xxxx
              store_structured g1.x, vThreadIDInGroupFlattened.x, r2.y, r2.w
            endif 
            iadd r0.w, r0.w, l(1)
          endloop 
        endif 
      endif 
    else 
      mov r0.z, l(0)
    endif 
  else 
    mov r2.x, l(-2048)
    mov r1.w, l(1.000000)
    mov r3.x, l(0)
    mov r0.z, l(0)
  endif 
  if_nz r1.x
    mov r4.xy, vThreadID.xyxx
    mov r4.zw, l(0,0,1,0)
    ld_indexable(texture2darray)(uint,uint,uint,uint) r0.w, r4.xyzw, t24.xzwy
    and r2.yz, r0.wwww, l(0, 1, 2046, 0)
    umax r4.x, r0.w, r3.x
    umin r4.y, r3.x, r0.w
    mov r3.y, l(0)
    movc r3.xy, r2.yyyy, r4.xyxx, r3.xyxx
    utof r1.x, r2.z
    mad r2.y, -r1.x, l(0.00048876), l(1.000000)
    mul r1.w, r1.w, r2.y
    lt r1.x, l(409.200012), r1.x
    if_nz r1.x
      umax r0.z, r0.w, r0.z
      ushr r1.x, r0.w, l(2)
      and r1.x, r1.x, l(0x3ffffe00)
      ge r2.z, r1.x, l(0.00049219)
      if_nz r2.z
        add r1.x, -r1.x, l(1.000000)
        mov r4.y, l(4)
        mov r2.zw, l(0,0,4,0)
        loop 
          ige r3.z, r2.w, l(4)
          breakc_nz r3.z
          ishl r3.z, r2.w, l(2)
          ld_structured r3.z, vThreadIDInGroupFlattened.x, r3.z, g0.xxxx
          ge r3.z, r3.z, r1.x
          if_nz r3.z
            mov r2.z, r2.w
            break 
          endif 
          iadd r4.x, r2.w, l(1)
          mov r2.zw, r4.yyyx
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, l(16), l(1000000015047466219876688855040.000000)
        store_structured g1.x, vThreadIDInGroupFlattened.x, l(16), l(1.000000)
        ishl r2.w, r2.z, l(2)
        iadd r3.z, r2.w, l(-4)
        ld_structured r3.z, vThreadIDInGroupFlattened.x, r3.z, g1.xxxx
        movc r3.z, r2.z, r3.z, l(1.000000)
        mov r3.w, l(3)
        loop 
          ilt r4.x, r3.w, l(0)
          breakc_nz r4.x
          ige r4.x, r3.w, r2.z
          if_nz r4.x
            ishl r4.x, r3.w, l(2)
            iadd r4.y, r4.x, l(4)
            ld_structured r4.z, vThreadIDInGroupFlattened.x, r4.x, g0.xxxx
            store_structured g0.x, vThreadIDInGroupFlattened.x, r4.y, r4.z
            ld_structured r4.x, vThreadIDInGroupFlattened.x, r4.x, g1.xxxx
            mul r4.x, r2.y, r4.x
            store_structured g1.x, vThreadIDInGroupFlattened.x, r4.y, r4.x
          endif 
          iadd r3.w, r3.w, l(-1)
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, r2.w, r1.x
        mul r1.x, r2.y, r3.z
        store_structured g1.x, vThreadIDInGroupFlattened.x, r2.w, r1.x
        ld_structured r1.x, vThreadIDInGroupFlattened.x, l(16), g0.xxxx
        ne r1.x, r1.x, l(1000000015047466219876688855040.000000)
        if_nz r1.x
          mov r1.x, l(2)
          loop 
            ige r2.y, r1.x, l(4)
            breakc_nz r2.y
            ishl r2.y, r1.x, l(2)
            ld_structured r2.z, vThreadIDInGroupFlattened.x, r2.y, g0.xxxx
            iadd r2.y, r2.y, l(-4)
            ld_structured r2.w, vThreadIDInGroupFlattened.x, r2.y, g0.xxxx
            add r2.z, -r2.w, r2.z
            ld_structured r2.yw, vThreadIDInGroupFlattened.x, r2.y, g1.xxxy
            add r2.y, -r2.w, r2.y
            mul r2.y, r2.y, r2.z
            mov x1[r1.x + 0].x, r2.y
            iadd r1.x, r1.x, l(1)
          endloop 
          mov r1.x, x1[2].x
          mov r2.y, x1[3].x
          lt r1.x, r2.y, r1.x
          movc r2.yz, r1.xxxx, l(0,3,2,0), l(0,2,1,0)
          mov r1.x, l(2)
          loop 
            ige r2.w, r1.x, l(4)
            breakc_nz r2.w
            ige r2.w, r1.x, r2.y
            if_nz r2.w
              ishl r2.w, r1.x, l(2)
              iadd r3.z, r2.w, l(4)
              ld_structured r3.z, vThreadIDInGroupFlattened.x, r3.z, g0.xxxx
              store_structured g0.x, vThreadIDInGroupFlattened.x, r2.w, r3.z
            endif 
            iadd r1.x, r1.x, l(1)
          endloop 
          mov r1.x, l(1)
          loop 
            ige r2.y, r1.x, l(4)
            breakc_nz r2.y
            ige r2.y, r1.x, r2.z
            if_nz r2.y
              ishl r2.y, r1.x, l(2)
              iadd r2.w, r2.y, l(4)
              ld_structured r2.w, vThreadIDInGroupFlattened.x, r2.w, g1.xxxx
              store_structured g1.x, vThreadIDInGroupFlattened.x, r2.y, r2.w
            endif 
            iadd r1.x, r1.x, l(1)
          endloop 
        endif 
      endif 
    endif 
    bfi r0.w, l(11), l(0), l(1), r0.w
  else 
    mov r0.w, l(-2047)
    mov r3.y, l(0)
  endif 
  if_nz r1.y
    mov r4.xy, vThreadID.xyxx
    mov r4.zw, l(0,0,2,0)
    ld_indexable(texture2darray)(uint,uint,uint,uint) r1.x, r4.xyzw, t24.yxzw
    and r2.yz, r1.xxxx, l(0, 1, 2046, 0)
    umax r1.y, r1.x, r3.y
    umax r4.x, r1.y, r3.x
    umin r4.y, r3.x, r1.y
    movc r3.xy, r2.yyyy, r4.xyxx, r3.xyxx
    utof r1.y, r2.z
    mad r2.y, -r1.y, l(0.00048876), l(1.000000)
    mul r1.w, r1.w, r2.y
    lt r1.y, l(409.200012), r1.y
    if_nz r1.y
      umax r0.z, r0.z, r1.x
      ushr r1.y, r1.x, l(2)
      and r1.y, r1.y, l(0x3ffffe00)
      ge r2.z, r1.y, l(0.00049219)
      if_nz r2.z
        add r1.y, -r1.y, l(1.000000)
        mov r4.y, l(4)
        mov r2.zw, l(0,0,4,0)
        loop 
          ige r3.z, r2.w, l(4)
          breakc_nz r3.z
          ishl r3.z, r2.w, l(2)
          ld_structured r3.z, vThreadIDInGroupFlattened.x, r3.z, g0.xxxx
          ge r3.z, r3.z, r1.y
          if_nz r3.z
            mov r2.z, r2.w
            break 
          endif 
          iadd r4.x, r2.w, l(1)
          mov r2.zw, r4.yyyx
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, l(16), l(1000000015047466219876688855040.000000)
        store_structured g1.x, vThreadIDInGroupFlattened.x, l(16), l(1.000000)
        ishl r2.w, r2.z, l(2)
        iadd r3.z, r2.w, l(-4)
        ld_structured r3.z, vThreadIDInGroupFlattened.x, r3.z, g1.xxxx
        movc r3.z, r2.z, r3.z, l(1.000000)
        mov r3.w, l(3)
        loop 
          ilt r4.x, r3.w, l(0)
          breakc_nz r4.x
          ige r4.x, r3.w, r2.z
          if_nz r4.x
            ishl r4.x, r3.w, l(2)
            iadd r4.y, r4.x, l(4)
            ld_structured r4.z, vThreadIDInGroupFlattened.x, r4.x, g0.xxxx
            store_structured g0.x, vThreadIDInGroupFlattened.x, r4.y, r4.z
            ld_structured r4.x, vThreadIDInGroupFlattened.x, r4.x, g1.xxxx
            mul r4.x, r2.y, r4.x
            store_structured g1.x, vThreadIDInGroupFlattened.x, r4.y, r4.x
          endif 
          iadd r3.w, r3.w, l(-1)
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, r2.w, r1.y
        mul r1.y, r2.y, r3.z
        store_structured g1.x, vThreadIDInGroupFlattened.x, r2.w, r1.y
        ld_structured r1.y, vThreadIDInGroupFlattened.x, l(16), g0.xxxx
        ne r1.y, r1.y, l(1000000015047466219876688855040.000000)
        if_nz r1.y
          mov r1.y, l(2)
          loop 
            ige r2.y, r1.y, l(4)
            breakc_nz r2.y
            ishl r2.y, r1.y, l(2)
            ld_structured r2.z, vThreadIDInGroupFlattened.x, r2.y, g0.xxxx
            iadd r2.y, r2.y, l(-4)
            ld_structured r2.w, vThreadIDInGroupFlattened.x, r2.y, g0.xxxx
            add r2.z, -r2.w, r2.z
            ld_structured r2.yw, vThreadIDInGroupFlattened.x, r2.y, g1.xxxy
            add r2.y, -r2.w, r2.y
            mul r2.y, r2.y, r2.z
            mov x2[r1.y + 0].x, r2.y
            iadd r1.y, r1.y, l(1)
          endloop 
          mov r1.y, x2[2].x
          mov r2.y, x2[3].x
          lt r1.y, r2.y, r1.y
          movc r2.yz, r1.yyyy, l(0,3,2,0), l(0,2,1,0)
          mov r1.y, l(2)
          loop 
            ige r2.w, r1.y, l(4)
            breakc_nz r2.w
            ige r2.w, r1.y, r2.y
            if_nz r2.w
              ishl r2.w, r1.y, l(2)
              iadd r3.z, r2.w, l(4)
              ld_structured r3.z, vThreadIDInGroupFlattened.x, r3.z, g0.xxxx
              store_structured g0.x, vThreadIDInGroupFlattened.x, r2.w, r3.z
            endif 
            iadd r1.y, r1.y, l(1)
          endloop 
          mov r1.y, l(1)
          loop 
            ige r2.y, r1.y, l(4)
            breakc_nz r2.y
            ige r2.y, r1.y, r2.z
            if_nz r2.y
              ishl r2.y, r1.y, l(2)
              iadd r2.w, r2.y, l(4)
              ld_structured r2.w, vThreadIDInGroupFlattened.x, r2.w, g1.xxxx
              store_structured g1.x, vThreadIDInGroupFlattened.x, r2.y, r2.w
            endif 
            iadd r1.y, r1.y, l(1)
          endloop 
        endif 
      endif 
    endif 
    bfi r1.x, l(11), l(0), l(2), r1.x
  else 
    mov r1.x, l(-2046)
  endif 
  if_nz r1.z
    mov r4.xy, vThreadID.xyxx
    mov r4.zw, l(0,0,3,0)
    ld_indexable(texture2darray)(uint,uint,uint,uint) r1.y, r4.xyzw, t24.xyzw
    and r2.yz, r1.yyyy, l(0, 1, 2046, 0)
    umax r1.z, r1.y, r3.y
    umax r4.x, r1.z, r3.x
    umin r4.y, r3.x, r1.z
    movc r3.xy, r2.yyyy, r4.xyxx, r3.xyxx
    utof r1.z, r2.z
    mad r2.y, -r1.z, l(0.00048876), l(1.000000)
    mul r1.w, r1.w, r2.y
    lt r1.z, l(409.200012), r1.z
    if_nz r1.z
      umax r0.z, r0.z, r1.y
      ushr r1.z, r1.y, l(2)
      and r1.z, r1.z, l(0x3ffffe00)
      ge r2.z, r1.z, l(0.00049219)
      if_nz r2.z
        add r1.z, -r1.z, l(1.000000)
        mov r4.y, l(4)
        mov r2.zw, l(0,0,4,0)
        loop 
          ige r3.z, r2.w, l(4)
          breakc_nz r3.z
          ishl r3.z, r2.w, l(2)
          ld_structured r3.z, vThreadIDInGroupFlattened.x, r3.z, g0.xxxx
          ge r3.z, r3.z, r1.z
          if_nz r3.z
            mov r2.z, r2.w
            break 
          endif 
          iadd r4.x, r2.w, l(1)
          mov r2.zw, r4.yyyx
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, l(16), l(1000000015047466219876688855040.000000)
        store_structured g1.x, vThreadIDInGroupFlattened.x, l(16), l(1.000000)
        ishl r2.w, r2.z, l(2)
        iadd r3.z, r2.w, l(-4)
        ld_structured r3.z, vThreadIDInGroupFlattened.x, r3.z, g1.xxxx
        movc r3.z, r2.z, r3.z, l(1.000000)
        mov r3.w, l(3)
        loop 
          ilt r4.x, r3.w, l(0)
          breakc_nz r4.x
          ige r4.x, r3.w, r2.z
          if_nz r4.x
            ishl r4.x, r3.w, l(2)
            iadd r4.y, r4.x, l(4)
            ld_structured r4.z, vThreadIDInGroupFlattened.x, r4.x, g0.xxxx
            store_structured g0.x, vThreadIDInGroupFlattened.x, r4.y, r4.z
            ld_structured r4.x, vThreadIDInGroupFlattened.x, r4.x, g1.xxxx
            mul r4.x, r2.y, r4.x
            store_structured g1.x, vThreadIDInGroupFlattened.x, r4.y, r4.x
          endif 
          iadd r3.w, r3.w, l(-1)
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, r2.w, r1.z
        mul r1.z, r2.y, r3.z
        store_structured g1.x, vThreadIDInGroupFlattened.x, r2.w, r1.z
        ld_structured r1.z, vThreadIDInGroupFlattened.x, l(16), g0.xxxx
        ne r1.z, r1.z, l(1000000015047466219876688855040.000000)
        if_nz r1.z
          mov r1.z, l(2)
          loop 
            ige r2.y, r1.z, l(4)
            breakc_nz r2.y
            ishl r2.y, r1.z, l(2)
            ld_structured r2.z, vThreadIDInGroupFlattened.x, r2.y, g0.xxxx
            iadd r2.y, r2.y, l(-4)
            ld_structured r2.w, vThreadIDInGroupFlattened.x, r2.y, g0.xxxx
            add r2.z, -r2.w, r2.z
            ld_structured r2.yw, vThreadIDInGroupFlattened.x, r2.y, g1.xxxy
            add r2.y, -r2.w, r2.y
            mul r2.y, r2.y, r2.z
            mov x3[r1.z + 0].x, r2.y
            iadd r1.z, r1.z, l(1)
          endloop 
          mov r1.z, x3[2].x
          mov r2.y, x3[3].x
          lt r1.z, r2.y, r1.z
          movc r2.yz, r1.zzzz, l(0,3,2,0), l(0,2,1,0)
          mov r1.z, l(2)
          loop 
            ige r2.w, r1.z, l(4)
            breakc_nz r2.w
            ige r2.w, r1.z, r2.y
            if_nz r2.w
              ishl r2.w, r1.z, l(2)
              iadd r3.z, r2.w, l(4)
              ld_structured r3.z, vThreadIDInGroupFlattened.x, r3.z, g0.xxxx
              store_structured g0.x, vThreadIDInGroupFlattened.x, r2.w, r3.z
            endif 
            iadd r1.z, r1.z, l(1)
          endloop 
          mov r1.z, l(1)
          loop 
            ige r2.y, r1.z, l(4)
            breakc_nz r2.y
            ige r2.y, r1.z, r2.z
            if_nz r2.y
              ishl r2.y, r1.z, l(2)
              iadd r2.w, r2.y, l(4)
              ld_structured r2.w, vThreadIDInGroupFlattened.x, r2.w, g1.xxxx
              store_structured g1.x, vThreadIDInGroupFlattened.x, r2.y, r2.w
            endif 
            iadd r1.z, r1.z, l(1)
          endloop 
        endif 
      endif 
    endif 
    bfi r1.y, l(11), l(0), l(3), r1.y
  else 
    mov r1.y, l(-2045)
  endif 
  ult r4.xyzw, l(4, 5, 6, 7), r0.yyyy
  if_nz r4.x
    mov r5.xy, vThreadID.xyxx
    mov r5.zw, l(0,0,4,0)
    ld_indexable(texture2darray)(uint,uint,uint,uint) r1.z, r5.xyzw, t24.xzyw
    and r2.yz, r1.zzzz, l(0, 1, 2046, 0)
    umax r2.w, r1.z, r3.y
    umax r5.x, r2.w, r3.x
    umin r5.y, r3.x, r2.w
    movc r3.xy, r2.yyyy, r5.xyxx, r3.xyxx
    utof r2.y, r2.z
    mad r2.z, -r2.y, l(0.00048876), l(1.000000)
    mul r1.w, r1.w, r2.z
    lt r2.y, l(409.200012), r2.y
    if_nz r2.y
      umax r0.z, r0.z, r1.z
      ushr r2.y, r1.z, l(2)
      and r2.y, r2.y, l(0x3ffffe00)
      ge r2.w, r2.y, l(0.00049219)
      if_nz r2.w
        add r2.y, -r2.y, l(1.000000)
        mov r5.y, l(4)
        mov r3.zw, l(0,0,4,0)
        loop 
          ige r2.w, r3.w, l(4)
          breakc_nz r2.w
          ishl r2.w, r3.w, l(2)
          ld_structured r2.w, vThreadIDInGroupFlattened.x, r2.w, g0.xxxx
          ge r2.w, r2.w, r2.y
          if_nz r2.w
            mov r3.z, r3.w
            break 
          endif 
          iadd r5.x, r3.w, l(1)
          mov r3.zw, r5.yyyx
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, l(16), l(1000000015047466219876688855040.000000)
        store_structured g1.x, vThreadIDInGroupFlattened.x, l(16), l(1.000000)
        ishl r2.w, r3.z, l(2)
        iadd r3.w, r2.w, l(-4)
        ld_structured r3.w, vThreadIDInGroupFlattened.x, r3.w, g1.xxxx
        movc r3.w, r3.z, r3.w, l(1.000000)
        mov r4.x, l(3)
        loop 
          ilt r5.x, r4.x, l(0)
          breakc_nz r5.x
          ige r5.x, r4.x, r3.z
          if_nz r5.x
            ishl r5.x, r4.x, l(2)
            iadd r5.y, r5.x, l(4)
            ld_structured r5.z, vThreadIDInGroupFlattened.x, r5.x, g0.xxxx
            store_structured g0.x, vThreadIDInGroupFlattened.x, r5.y, r5.z
            ld_structured r5.x, vThreadIDInGroupFlattened.x, r5.x, g1.xxxx
            mul r5.x, r2.z, r5.x
            store_structured g1.x, vThreadIDInGroupFlattened.x, r5.y, r5.x
          endif 
          iadd r4.x, r4.x, l(-1)
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, r2.w, r2.y
        mul r2.y, r2.z, r3.w
        store_structured g1.x, vThreadIDInGroupFlattened.x, r2.w, r2.y
        ld_structured r2.y, vThreadIDInGroupFlattened.x, l(16), g0.xxxx
        ne r2.y, r2.y, l(1000000015047466219876688855040.000000)
        if_nz r2.y
          mov r2.y, l(2)
          loop 
            ige r2.z, r2.y, l(4)
            breakc_nz r2.z
            ishl r2.z, r2.y, l(2)
            ld_structured r2.w, vThreadIDInGroupFlattened.x, r2.z, g0.xxxx
            iadd r2.z, r2.z, l(-4)
            ld_structured r3.z, vThreadIDInGroupFlattened.x, r2.z, g0.xxxx
            add r2.w, r2.w, -r3.z
            ld_structured r3.zw, vThreadIDInGroupFlattened.x, r2.z, g1.xxxy
            add r2.z, -r3.w, r3.z
            mul r2.z, r2.z, r2.w
            mov x4[r2.y + 0].x, r2.z
            iadd r2.y, r2.y, l(1)
          endloop 
          mov r2.y, x4[2].x
          mov r2.z, x4[3].x
          lt r2.y, r2.z, r2.y
          movc r2.yz, r2.yyyy, l(0,3,2,0), l(0,2,1,0)
          mov r2.w, l(2)
          loop 
            ige r3.z, r2.w, l(4)
            breakc_nz r3.z
            ige r3.z, r2.w, r2.y
            if_nz r3.z
              ishl r3.z, r2.w, l(2)
              iadd r3.w, r3.z, l(4)
              ld_structured r3.w, vThreadIDInGroupFlattened.x, r3.w, g0.xxxx
              store_structured g0.x, vThreadIDInGroupFlattened.x, r3.z, r3.w
            endif 
            iadd r2.w, r2.w, l(1)
          endloop 
          mov r2.y, l(1)
          loop 
            ige r2.w, r2.y, l(4)
            breakc_nz r2.w
            ige r2.w, r2.y, r2.z
            if_nz r2.w
              ishl r2.w, r2.y, l(2)
              iadd r3.z, r2.w, l(4)
              ld_structured r3.z, vThreadIDInGroupFlattened.x, r3.z, g1.xxxx
              store_structured g1.x, vThreadIDInGroupFlattened.x, r2.w, r3.z
            endif 
            iadd r2.y, r2.y, l(1)
          endloop 
        endif 
      endif 
    endif 
    bfi r1.z, l(11), l(0), l(4), r1.z
  else 
    mov r1.z, l(-2044)
  endif 
  if_nz r4.y
    mov r5.xy, vThreadID.xyxx
    mov r5.zw, l(0,0,5,0)
    ld_indexable(texture2darray)(uint,uint,uint,uint) r2.y, r5.xyzw, t24.xyzw
    and r2.zw, r2.yyyy, l(0, 0, 1, 2046)
    umax r3.z, r2.y, r3.y
    umax r4.x, r3.z, r3.x
    umin r4.y, r3.x, r3.z
    movc r3.xy, r2.zzzz, r4.xyxx, r3.xyxx
    utof r2.z, r2.w
    mad r2.w, -r2.z, l(0.00048876), l(1.000000)
    mul r1.w, r1.w, r2.w
    lt r2.z, l(409.200012), r2.z
    if_nz r2.z
      umax r0.z, r0.z, r2.y
      ushr r2.z, r2.y, l(2)
      and r2.z, r2.z, l(0x3ffffe00)
      ge r3.z, r2.z, l(0.00049219)
      if_nz r3.z
        add r2.z, -r2.z, l(1.000000)
        mov r4.y, l(4)
        mov r3.zw, l(0,0,4,0)
        loop 
          ige r5.x, r3.w, l(4)
          breakc_nz r5.x
          ishl r5.x, r3.w, l(2)
          ld_structured r5.x, vThreadIDInGroupFlattened.x, r5.x, g0.xxxx
          ge r5.x, r5.x, r2.z
          if_nz r5.x
            mov r3.z, r3.w
            break 
          endif 
          iadd r4.x, r3.w, l(1)
          mov r3.zw, r4.yyyx
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, l(16), l(1000000015047466219876688855040.000000)
        store_structured g1.x, vThreadIDInGroupFlattened.x, l(16), l(1.000000)
        ishl r3.w, r3.z, l(2)
        iadd r4.x, r3.w, l(-4)
        ld_structured r4.x, vThreadIDInGroupFlattened.x, r4.x, g1.xxxx
        movc r4.x, r3.z, r4.x, l(1.000000)
        mov r4.y, l(3)
        loop 
          ilt r5.x, r4.y, l(0)
          breakc_nz r5.x
          ige r5.x, r4.y, r3.z
          if_nz r5.x
            ishl r5.x, r4.y, l(2)
            iadd r5.y, r5.x, l(4)
            ld_structured r5.z, vThreadIDInGroupFlattened.x, r5.x, g0.xxxx
            store_structured g0.x, vThreadIDInGroupFlattened.x, r5.y, r5.z
            ld_structured r5.x, vThreadIDInGroupFlattened.x, r5.x, g1.xxxx
            mul r5.x, r2.w, r5.x
            store_structured g1.x, vThreadIDInGroupFlattened.x, r5.y, r5.x
          endif 
          iadd r4.y, r4.y, l(-1)
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, r3.w, r2.z
        mul r2.z, r2.w, r4.x
        store_structured g1.x, vThreadIDInGroupFlattened.x, r3.w, r2.z
        ld_structured r2.z, vThreadIDInGroupFlattened.x, l(16), g0.xxxx
        ne r2.z, r2.z, l(1000000015047466219876688855040.000000)
        if_nz r2.z
          mov r2.z, l(2)
          loop 
            ige r2.w, r2.z, l(4)
            breakc_nz r2.w
            ishl r2.w, r2.z, l(2)
            ld_structured r3.z, vThreadIDInGroupFlattened.x, r2.w, g0.xxxx
            iadd r2.w, r2.w, l(-4)
            ld_structured r3.w, vThreadIDInGroupFlattened.x, r2.w, g0.xxxx
            add r3.z, -r3.w, r3.z
            ld_structured r4.xy, vThreadIDInGroupFlattened.x, r2.w, g1.xyxx
            add r2.w, -r4.y, r4.x
            mul r2.w, r2.w, r3.z
            mov x5[r2.z + 0].x, r2.w
            iadd r2.z, r2.z, l(1)
          endloop 
          mov r2.z, x5[2].x
          mov r2.w, x5[3].x
          lt r2.z, r2.w, r2.z
          movc r2.zw, r2.zzzz, l(0,0,3,2), l(0,0,2,1)
          mov r3.z, l(2)
          loop 
            ige r3.w, r3.z, l(4)
            breakc_nz r3.w
            ige r3.w, r3.z, r2.z
            if_nz r3.w
              ishl r3.w, r3.z, l(2)
              iadd r4.x, r3.w, l(4)
              ld_structured r4.x, vThreadIDInGroupFlattened.x, r4.x, g0.xxxx
              store_structured g0.x, vThreadIDInGroupFlattened.x, r3.w, r4.x
            endif 
            iadd r3.z, r3.z, l(1)
          endloop 
          mov r2.z, l(1)
          loop 
            ige r3.z, r2.z, l(4)
            breakc_nz r3.z
            ige r3.z, r2.z, r2.w
            if_nz r3.z
              ishl r3.z, r2.z, l(2)
              iadd r3.w, r3.z, l(4)
              ld_structured r3.w, vThreadIDInGroupFlattened.x, r3.w, g1.xxxx
              store_structured g1.x, vThreadIDInGroupFlattened.x, r3.z, r3.w
            endif 
            iadd r2.z, r2.z, l(1)
          endloop 
        endif 
      endif 
    endif 
    bfi r2.y, l(11), l(0), l(5), r2.y
  else 
    mov r2.y, l(-2043)
  endif 
  if_nz r4.z
    mov r5.xy, vThreadID.xyxx
    mov r5.zw, l(0,0,6,0)
    ld_indexable(texture2darray)(uint,uint,uint,uint) r2.z, r5.xyzw, t24.xzyw
    and r3.zw, r2.zzzz, l(0, 0, 1, 2046)
    umax r2.w, r2.z, r3.y
    umax r4.x, r2.w, r3.x
    umin r4.y, r3.x, r2.w
    movc r3.xy, r3.zzzz, r4.xyxx, r3.xyxx
    utof r2.w, r3.w
    mad r3.z, -r2.w, l(0.00048876), l(1.000000)
    mul r1.w, r1.w, r3.z
    lt r2.w, l(409.200012), r2.w
    if_nz r2.w
      umax r0.z, r0.z, r2.z
      ushr r2.w, r2.z, l(2)
      and r2.w, r2.w, l(0x3ffffe00)
      ge r3.w, r2.w, l(0.00049219)
      if_nz r3.w
        add r2.w, -r2.w, l(1.000000)
        mov r4.y, l(4)
        mov r5.xy, l(4,0,0,0)
        loop 
          ige r3.w, r5.y, l(4)
          breakc_nz r3.w
          ishl r3.w, r5.y, l(2)
          ld_structured r3.w, vThreadIDInGroupFlattened.x, r3.w, g0.xxxx
          ge r3.w, r3.w, r2.w
          if_nz r3.w
            mov r5.x, r5.y
            break 
          endif 
          iadd r4.x, r5.y, l(1)
          mov r5.xy, r4.yxyy
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, l(16), l(1000000015047466219876688855040.000000)
        store_structured g1.x, vThreadIDInGroupFlattened.x, l(16), l(1.000000)
        ishl r3.w, r5.x, l(2)
        iadd r4.x, r3.w, l(-4)
        ld_structured r4.x, vThreadIDInGroupFlattened.x, r4.x, g1.xxxx
        movc r4.x, r5.x, r4.x, l(1.000000)
        mov r4.y, l(3)
        loop 
          ilt r4.z, r4.y, l(0)
          breakc_nz r4.z
          ige r4.z, r4.y, r5.x
          if_nz r4.z
            ishl r4.z, r4.y, l(2)
            iadd r5.y, r4.z, l(4)
            ld_structured r5.z, vThreadIDInGroupFlattened.x, r4.z, g0.xxxx
            store_structured g0.x, vThreadIDInGroupFlattened.x, r5.y, r5.z
            ld_structured r4.z, vThreadIDInGroupFlattened.x, r4.z, g1.xxxx
            mul r4.z, r3.z, r4.z
            store_structured g1.x, vThreadIDInGroupFlattened.x, r5.y, r4.z
          endif 
          iadd r4.y, r4.y, l(-1)
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, r3.w, r2.w
        mul r2.w, r3.z, r4.x
        store_structured g1.x, vThreadIDInGroupFlattened.x, r3.w, r2.w
        ld_structured r2.w, vThreadIDInGroupFlattened.x, l(16), g0.xxxx
        ne r2.w, r2.w, l(1000000015047466219876688855040.000000)
        if_nz r2.w
          mov r2.w, l(2)
          loop 
            ige r3.z, r2.w, l(4)
            breakc_nz r3.z
            ishl r3.z, r2.w, l(2)
            ld_structured r3.w, vThreadIDInGroupFlattened.x, r3.z, g0.xxxx
            iadd r3.z, r3.z, l(-4)
            ld_structured r4.x, vThreadIDInGroupFlattened.x, r3.z, g0.xxxx
            add r3.w, r3.w, -r4.x
            ld_structured r4.xy, vThreadIDInGroupFlattened.x, r3.z, g1.xyxx
            add r3.z, -r4.y, r4.x
            mul r3.z, r3.z, r3.w
            mov x6[r2.w + 0].x, r3.z
            iadd r2.w, r2.w, l(1)
          endloop 
          mov r2.w, x6[2].x
          mov r3.z, x6[3].x
          lt r2.w, r3.z, r2.w
          movc r3.zw, r2.wwww, l(0,0,3,2), l(0,0,2,1)
          mov r2.w, l(2)
          loop 
            ige r4.x, r2.w, l(4)
            breakc_nz r4.x
            ige r4.x, r2.w, r3.z
            if_nz r4.x
              ishl r4.x, r2.w, l(2)
              iadd r4.y, r4.x, l(4)
              ld_structured r4.y, vThreadIDInGroupFlattened.x, r4.y, g0.xxxx
              store_structured g0.x, vThreadIDInGroupFlattened.x, r4.x, r4.y
            endif 
            iadd r2.w, r2.w, l(1)
          endloop 
          mov r2.w, l(1)
          loop 
            ige r3.z, r2.w, l(4)
            breakc_nz r3.z
            ige r3.z, r2.w, r3.w
            if_nz r3.z
              ishl r3.z, r2.w, l(2)
              iadd r4.x, r3.z, l(4)
              ld_structured r4.x, vThreadIDInGroupFlattened.x, r4.x, g1.xxxx
              store_structured g1.x, vThreadIDInGroupFlattened.x, r3.z, r4.x
            endif 
            iadd r2.w, r2.w, l(1)
          endloop 
        endif 
      endif 
    endif 
    bfi r2.z, l(11), l(0), l(6), r2.z
  else 
    mov r2.z, l(-2042)
  endif 
  if_nz r4.w
    mov r4.xy, vThreadID.xyxx
    mov r4.zw, l(0,0,7,0)
    ld_indexable(texture2darray)(uint,uint,uint,uint) r2.w, r4.xyzw, t24.xzwy
    and r3.zw, r2.wwww, l(0, 0, 1, 2046)
    umax r4.x, r2.w, r3.y
    umax r5.x, r3.x, r4.x
    umin r5.y, r3.x, r4.x
    movc r3.xy, r3.zzzz, r5.xyxx, r3.xyxx
    utof r3.z, r3.w
    mad r3.w, -r3.z, l(0.00048876), l(1.000000)
    mul r1.w, r1.w, r3.w
    lt r3.z, l(409.200012), r3.z
    if_nz r3.z
      umax r0.z, r0.z, r2.w
      ushr r3.z, r2.w, l(2)
      and r3.z, r3.z, l(0x3ffffe00)
      ge r4.x, r3.z, l(0.00049219)
      if_nz r4.x
        add r3.z, -r3.z, l(1.000000)
        mov r4.y, l(4)
        mov r4.zw, l(0,0,4,0)
        loop 
          ige r5.x, r4.w, l(4)
          breakc_nz r5.x
          ishl r5.x, r4.w, l(2)
          ld_structured r5.x, vThreadIDInGroupFlattened.x, r5.x, g0.xxxx
          ge r5.x, r5.x, r3.z
          if_nz r5.x
            mov r4.z, r4.w
            break 
          endif 
          iadd r4.x, r4.w, l(1)
          mov r4.zw, r4.yyyx
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, l(16), l(1000000015047466219876688855040.000000)
        store_structured g1.x, vThreadIDInGroupFlattened.x, l(16), l(1.000000)
        ishl r4.x, r4.z, l(2)
        iadd r4.y, r4.x, l(-4)
        ld_structured r4.y, vThreadIDInGroupFlattened.x, r4.y, g1.xxxx
        movc r4.y, r4.z, r4.y, l(1.000000)
        mov r4.w, l(3)
        loop 
          ilt r5.x, r4.w, l(0)
          breakc_nz r5.x
          ige r5.x, r4.w, r4.z
          if_nz r5.x
            ishl r5.x, r4.w, l(2)
            iadd r5.y, r5.x, l(4)
            ld_structured r5.z, vThreadIDInGroupFlattened.x, r5.x, g0.xxxx
            store_structured g0.x, vThreadIDInGroupFlattened.x, r5.y, r5.z
            ld_structured r5.x, vThreadIDInGroupFlattened.x, r5.x, g1.xxxx
            mul r5.x, r3.w, r5.x
            store_structured g1.x, vThreadIDInGroupFlattened.x, r5.y, r5.x
          endif 
          iadd r4.w, r4.w, l(-1)
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, r4.x, r3.z
        mul r3.z, r3.w, r4.y
        store_structured g1.x, vThreadIDInGroupFlattened.x, r4.x, r3.z
        ld_structured r3.z, vThreadIDInGroupFlattened.x, l(16), g0.xxxx
        ne r3.z, r3.z, l(1000000015047466219876688855040.000000)
        if_nz r3.z
          mov r3.z, l(2)
          loop 
            ige r3.w, r3.z, l(4)
            breakc_nz r3.w
            ishl r3.w, r3.z, l(2)
            ld_structured r4.x, vThreadIDInGroupFlattened.x, r3.w, g0.xxxx
            iadd r3.w, r3.w, l(-4)
            ld_structured r4.y, vThreadIDInGroupFlattened.x, r3.w, g0.xxxx
            add r4.x, -r4.y, r4.x
            ld_structured r4.yz, vThreadIDInGroupFlattened.x, r3.w, g1.xxyx
            add r3.w, -r4.z, r4.y
            mul r3.w, r3.w, r4.x
            mov x7[r3.z + 0].x, r3.w
            iadd r3.z, r3.z, l(1)
          endloop 
          mov r3.z, x7[2].x
          mov r3.w, x7[3].x
          lt r3.z, r3.w, r3.z
          movc r3.zw, r3.zzzz, l(0,0,3,2), l(0,0,2,1)
          mov r4.x, l(2)
          loop 
            ige r4.y, r4.x, l(4)
            breakc_nz r4.y
            ige r4.y, r4.x, r3.z
            if_nz r4.y
              ishl r4.y, r4.x, l(2)
              iadd r4.z, r4.y, l(4)
              ld_structured r4.z, vThreadIDInGroupFlattened.x, r4.z, g0.xxxx
              store_structured g0.x, vThreadIDInGroupFlattened.x, r4.y, r4.z
            endif 
            iadd r4.x, r4.x, l(1)
          endloop 
          mov r3.z, l(1)
          loop 
            ige r4.x, r3.z, l(4)
            breakc_nz r4.x
            ige r4.x, r3.z, r3.w
            if_nz r4.x
              ishl r4.x, r3.z, l(2)
              iadd r4.y, r4.x, l(4)
              ld_structured r4.y, vThreadIDInGroupFlattened.x, r4.y, g1.xxxx
              store_structured g1.x, vThreadIDInGroupFlattened.x, r4.x, r4.y
            endif 
            iadd r3.z, r3.z, l(1)
          endloop 
        endif 
      endif 
    endif 
    bfi r2.w, l(11), l(0), l(7), r2.w
  else 
    mov r2.w, l(-2041)
  endif 
  ushr r0.z, r0.z, l(2)
  and r0.z, r0.z, l(0x3ffffe00)
  add r3.z, -r1.w, l(0.800000)
  max r3.z, r3.z, l(0.000000)
  mad r3.z, -r3.z, l(1.250000), l(1.000000)
  umin r3.w, r0.w, r2.x
  umax r0.w, r0.w, r2.x
  umin r2.x, r1.y, r1.x
  umax r1.x, r1.y, r1.x
  umin r1.y, r1.z, r2.y
  umax r1.z, r1.z, r2.y
  umin r2.y, r2.w, r2.z
  umax r2.z, r2.w, r2.z
  umin r2.w, r1.x, r3.w
  umax r1.x, r1.x, r3.w
  umin r3.w, r1.y, r2.z
  umax r1.y, r1.y, r2.z
  umin r2.z, r0.w, r2.x
  umax r0.w, r0.w, r2.x
  umin r2.x, r1.z, r2.y
  umax r1.z, r1.z, r2.y
  umin r2.y, r2.z, r2.w
  umax r2.z, r2.z, r2.w
  umin r2.w, r1.x, r0.w
  umax r0.w, r1.x, r0.w
  umin r1.x, r2.x, r3.w
  umax r2.x, r2.x, r3.w
  umin r3.w, r1.y, r1.z
  umax r1.y, r1.y, r1.z
  umin r1.z, r1.y, r2.y
  umax r1.y, r1.y, r2.y
  umin r2.y, r2.z, r3.w
  umax r2.z, r2.z, r3.w
  umin r3.w, r2.x, r2.w
  umax r2.x, r2.x, r2.w
  umin r2.w, r0.w, r1.x
  umax r0.w, r0.w, r1.x
  umin r1.x, r1.z, r3.w
  umax r1.z, r1.z, r3.w
  umin r3.w, r2.w, r2.y
  umax r2.y, r2.w, r2.y
  umin r2.w, r2.z, r0.w
  umax r0.w, r2.z, r0.w
  umin r2.z, r1.y, r2.x
  umax r1.y, r1.y, r2.x
  umin r2.x, r1.x, r3.w
  umax r1.x, r1.x, r3.w
  umin r3.w, r1.z, r2.y
  umax r1.z, r1.z, r2.y
  umin r2.y, r2.z, r2.w
  umax r2.z, r2.z, r2.w
  umin r2.w, r0.w, r1.y
  umax r0.w, r0.w, r1.y
  bfi r1.x, l(11), l(4), r1.x, l(0)
  bfi r1.x, l(4), l(0), r2.x, r1.x
  bfi r1.y, l(11), l(8), r3.w, l(0)
  iadd r1.x, r1.y, r1.x
  bfi r1.y, l(11), l(12), r1.z, l(0)
  iadd r1.x, r1.y, r1.x
  bfi r1.y, l(11), l(16), r2.y, l(0)
  iadd r1.x, r1.y, r1.x
  bfi r1.y, l(11), l(20), r2.z, l(0)
  iadd r1.x, r1.y, r1.x
  bfi r1.x, l(8), l(24), r2.w, r1.x
  bfi r2.w, l(4), l(28), r0.w, r1.x
  ult r0.w, cb2[58].z, r0.x
  if_nz r0.w
    store_uav_typed u5.xyzw, vThreadID.xyyy, l(0.750000,0.375000,0.375000,1.000000)
  endif 
else 
  mov r1.w, l(1.000000)
  mov r3.xyz, l(0,0,1.000000,0)
  mov r2.w, l(0)
  mov r0.zw, l(0,0,-1.000000,0)
endif 
if_z r0.w
  iadd r0.w, cb1[82].x, l(1023)
  ushr r0.w, r0.w, l(10)
  umin r0.w, r0.w, l(2)
  ubfe r4.xy, l(27, 27, 0, 0), l(2, 2, 0, 0), vThreadGroupID.xyxx
  uge r1.x, r0.w, l(1)
  if_nz r1.x
    uge r1.x, r0.w, l(2)
    if_nz r1.x
      mov r4.zw, l(0,0,1,0)
      ld_indexable(texture2darray)(uint,uint,uint,uint) r1.x, r4.xyww, t26.xyzw
      ld_indexable(texture2darray)(uint,uint,uint,uint) r1.y, r4.xyzw, t26.yxzw
    else 
      mov r4.zw, l(0,0,0,0)
      ld_indexable(texture2darray)(uint,uint,uint,uint) r1.x, r4.xyzw, t26.xyzw
      mov r1.y, l(0)
    endif 
  else 
    mov r1.xy, l(0,0,0,0)
  endif 
  or r1.z, r1.y, r1.x
  or r1.z, r0.y, r1.z
  if_z r1.z
    store_uav_typed u4.xyzw, vThreadID.xyyy, l(1.000000,1.000000,1.000000,1.000000)
    mov r5.xy, vThreadID.xyxx
    mov r5.zw, l(0,0,0,0)
    ld_indexable(texture2d)(float,float,float,float) r3.w, r5.xyzw, t0.yzwx
    store_uav_typed u7.xyzw, vThreadID.xyyy, r3.wwww
  endif 
  if_nz r1.z
    and r1.z, r0.x, l(0xff000000)
    ieq r1.z, r1.z, l(0)
    ult r0.x, cb2[58].z, r0.x
    if_nz r0.x
      mov r5.xy, vThreadID.xyxx
      mov r5.zw, l(0,0,0,0)
      ld_indexable(texture2d)(float,float,float,float) r6.xyz, r5.xyww, t21.xyzw
      ld_indexable(texture2d)(float,float,float,float) r5.xyzw, r5.xyzw, t22.xyzw
      mad r2.xyz, r5.wwww, r6.xyzx, r5.xyzx
    else 
      mov r5.xy, vThreadID.xyxx
      mov r5.zw, l(0,0,0,0)
      ld_indexable(texture2d)(float,float,float,float) r2.xyz, r5.xyzw, t21.xyzw
    endif 
    mov r5.xy, vThreadID.xyxx
    mov r5.w, l(0)
    ld_indexable(texture2d)(float,float,float,float) r0.x, r5.xyww, t0.xyzw
    lt r3.w, r1.w, l(0.800000)
    and r1.z, r1.z, r3.w
    if_nz r1.z
      max r0.z, r0.x, r0.z
    else 
      mov r0.z, r0.x
    endif 
    store_uav_typed u7.xyzw, vThreadID.xyyy, r0.zzzz
    if_nz r0.w
      ushr r6.xyzw, r3.xxyy, l(2, 2, 2, 2)
      and r6.xyzw, r6.xyzw, l(0x3ffffe00, 0x3ffffe00, 0x3ffffe00, 0x3ffffe00)
      ge r3.xy, r6.ywyy, l(0.984375, 0.984375, 0.000000, 0.000000)
      mul r6.yw, r6.yyyw, l(0.000000, 1.01587307, 0.000000, 1.01587307)
      mad r6.xz, r6.xxzx, l(64.000000, 0.000000, 64.000000, 0.000000), l(-63.000000, 0.000000, -63.000000, 0.000000)
      movc r3.xy, r3.xyxx, r6.xzxx, r6.ywyy
      max r3.xy, r3.xyxx, l(0.00000001, 0.00000001, 0.000000, 0.000000)
      rcp r3.xy, r3.xyxx
      ge r0.z, r0.x, l(0.984375)
      mul r1.z, r0.x, l(1.01587307)
      mad r3.w, r0.x, l(64.000000), l(-63.000000)
      movc r0.z, r0.z, r3.w, r1.z
      max r0.z, r0.z, l(0.00000001)
      rcp r0.z, r0.z
      and r5.z, r2.w, l(7)
      ld_indexable(texture2darray)(uint,uint,uint,uint) r1.z, r5.xyzw, t24.xzyw
      ushr r1.z, r1.z, l(2)
      and r1.z, r1.z, l(0x3ffffe00)
      utof r6.xyzw, vThreadID.xyxy
      mov r4.w, l(0)
      mov r7.xyw, r5.xyxw
      mov r8.w, l(0.00392157)
      mov r9.xw, l(1.000000,0,0,4)
      mov r10.x, r2.w
      mov r10.yzw, r2.xxyz
      mov r3.w, r1.w
      mov r11.x, l(0)
      mov r11.y, r1.z
      mov r11.z, r1.x
      loop 
        breakc_z r11.z
        firstbit_lo r4.z, r11.z
        ishl r11.w, l(1), r4.z
        not r11.w, r11.w
        and r11.z, r11.w, r11.z
        ld_indexable(texture2darray)(uint,uint,uint,uint) r11.w, r4.xyzw, t25.yzwx
        ishl r12.x, r4.z, l(5)
        mov r13.xyzw, r10.xyzw
        mov r12.y, r3.w
        mov r12.zw, r11.xxxy
        mov r14.x, r11.w
        loop 
          breakc_z r14.x
          firstbit_lo r14.y, r14.x
          ishl r14.z, l(1), r14.y
          not r14.z, r14.z
          and r14.x, r14.z, r14.x
          iadd r14.y, r12.x, r14.y
          ld_structured_indexable(structured_buffer, stride=32)(mixed,mixed,mixed,mixed) r15.xyz, r14.y, l(16), t1.xyzx
          mov r16.xyz, r13.yzwy
          mov r14.z, r13.x
          mov r14.w, r12.z
          mov r15.w, r12.w
          loop 
            ult r16.w, r14.w, r0.y
            lt r17.x, r15.w, r15.z
            and r16.w, r16.w, r17.x
            breakc_z r16.w
            and r7.z, r14.z, l(7)
            ld_indexable(texture2darray)(uint,uint,uint,uint) r17.xy, r7.xyzw, t24.xyzw
            ushr r18.xyz, r17.xxxx, l(1, 8, 16, 0)
            and r16.w, r18.x, l(0x7f800000)
            bfi r17.x, l(8), l(15), r17.x, l(0)
            bfi r17.x, l(23), l(0), r17.x, r18.x
            add r19.x, -r16.w, r17.x
            bfi r17.xz, l(8, 0, 8, 0), l(15, 0, 15, 0), r18.yyzy, l(0, 0, 0, 0)
            bfi r17.xz, l(23, 0, 23, 0), l(0, 0, 0, 0), r17.xxzx, r18.xxxx
            add r19.yz, -r16.wwww, r17.xxzx
            and r16.w, r17.y, l(2046)
            utof r16.w, r16.w
            mad r16.w, -r16.w, l(0.00048876), l(1.000000)
            mad r16.xyz, r16.xyzx, r16.wwww, r19.xyzx
            iadd r14.w, r14.w, l(1)
            ushr r16.w, r14.z, l(4)
            ult r17.x, r14.w, r0.y
            if_nz r17.x
              ubfe r7.z, l(3), l(4), r14.z
              ld_indexable(texture2darray)(uint,uint,uint,uint) r7.z, r7.xyzw, t24.xzyw
              ushr r7.z, r7.z, l(2)
              and r15.w, r7.z, l(0x3ffffe00)
            else 
              mov r15.w, l(2.000000)
            endif 
            mov r14.z, r16.w
          endloop 
          mov r13.yzw, r16.xxyz
          mov r13.x, r14.z
          mov r12.z, r14.w
          mov r12.w, r15.w
          lt r7.z, r0.x, r15.z
          if_nz r7.z
            ld_structured_indexable(structured_buffer, stride=32)(mixed,mixed,mixed,mixed) r17.xyzw, r14.y, l(0), t1.xyzw
            mul r18.xyzw, r6.xyzw, r17.xyzw
            add r18.xy, r18.ywyy, r18.xzxx
            add r18.xy, r15.xyxx, r18.xyxx
            mad r15.xy, r18.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
            max r7.z, |r15.y|, |r15.x|
            lt r7.z, r7.z, l(1.000000)
            if_nz r7.z
              ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r19.xyzw, r14.y, l(40), t2.xyzw
              ushr r7.z, r19.x, l(24)
              utof r7.z, r7.z
              mul r15.x, r7.z, l(0.00390625)
              ubfe r20.xyz, l(4, 4, 1, 0), l(26, 16, 20, 0), r19.zwwz
              ishl r21.xyzw, l(1, 1, 1, 1), r20.xyxy
              if_nz r20.z
                ubfe r15.y, l(12), l(12), r19.x
                and r20.xy, r19.xzxx, l(4095, 1023, 0, 0)
                utof r22.xyzw, r21.zwzw
                mad r20.zw, r18.xxxy, r22.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
                add r23.xy, r22.zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                min r20.zw, r20.zzzw, r23.xxxy
                utof r23.xz, r20.xxyx
                utof r23.y, r15.y
                add r23.xy, r20.zwzz, r23.xyxx
                mul r23.xy, r23.xyxx, cb1[83].xyxx
                mul r22.xyzw, r17.xzyw, r22.xyzw
                sample_d_indexable(texture2darray)(float,float,float,float) r24.xyzw, r23.xyzx, t42.xyzw, s0, r22.xyxx, r22.zwzz
                lt r15.y, l(0.000000), r7.z
                if_nz r15.y
                  and r15.y, r19.y, l(4095)
                  ubfe r16.w, l(12), l(12), r19.y
                  utof r20.x, r15.y
                  utof r20.y, r16.w
                  add r20.xy, r20.xyxx, r20.zwzz
                  mul r23.xy, r20.xyxx, cb1[83].xyxx
                  sample_d_indexable(texture2darray)(float,float,float,float) r20.xyzw, r23.xyzx, t42.xyzw, s0, r22.xyxx, r22.zwzz
                  add r20.xyzw, -r24.xyzw, r20.xyzw
                  mad r24.xyzw, r15.xxxx, r20.xyzw, r24.xyzw
                endif 
              else 
                ubfe r15.y, l(12), l(12), r19.x
                and r20.xy, r19.xzxx, l(4095, 1023, 0, 0)
                utof r22.xyzw, r21.zwzw
                mad r20.zw, r18.xxxy, r22.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
                add r23.xy, r22.zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                min r20.zw, r20.zzzw, r23.xxxy
                utof r23.xz, r20.xxyx
                utof r23.y, r15.y
                add r20.xz, r20.zzwz, r23.xxyx
                mul r23.xy, r20.xzxx, cb1[83].zwzz
                mul r20.xyzw, r17.xzyw, r22.xyzw
                sample_d_indexable(texture2darray)(float,float,float,float) r24.xyzw, r23.xyzx, t43.xyzw, s0, r20.xyxx, r20.zwzz
                lt r15.y, l(0.000000), r7.z
                if_nz r15.y
                  ubfe r15.y, l(12), l(12), r19.y
                  and r20.xy, r19.yzyy, l(4095, 1023, 0, 0)
                  utof r21.xyzw, r21.xyzw
                  mad r20.zw, r18.xxxy, r21.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
                  add r22.xy, r21.zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r20.zw, r20.zzzw, r22.xxxy
                  utof r22.xz, r20.xxyx
                  utof r22.y, r15.y
                  add r20.xz, r20.zzwz, r22.xxyx
                  mul r22.xy, r20.xzxx, cb1[83].zwzz
                  mul r20.xyzw, r17.xzyw, r21.xyzw
                  sample_d_indexable(texture2darray)(float,float,float,float) r20.xyzw, r22.xyzx, t43.xyzw, s0, r20.xyxx, r20.zwzz
                  add r20.xyzw, -r24.xyzw, r20.xyzw
                  mad r24.xyzw, r15.xxxx, r20.xyzw, r24.xyzw
                endif 
              endif 
              ne r20.xyzw, r24.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
              or r20.xy, r20.zwzz, r20.xyxx
              or r15.y, r20.y, r20.x
              if_nz r15.y
                ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r20.xyzw, r14.y, l(0), t2.xyzw
                ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r21.xyzw, r14.y, l(16), t2.zxyw
                ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r15.y, r14.y, l(32), t2.xxxx
                ubfe r22.xyz, l(8, 8, 8, 0), l(8, 10, 18, 0), r19.wzzw
                utof r22.xyz, r22.xyzx
                mul r22.xw, r22.xxxz, l(0.00392157, 0.000000, 0.000000, 0.00392157)
                dp3 r16.w, r24.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
                add r23.xyz, -r24.xyzx, r16.wwww
                mad r23.xyz, r22.xxxx, r23.xyzx, r24.xyzx
                ushr r16.w, r19.y, l(24)
                utof r16.w, r16.w
                mul r18.w, r16.w, l(0.00392157)
                and r19.x, r19.w, l(255)
                utof r19.x, r19.x
                eq r19.y, r16.w, l(0.000000)
                eq r22.xz, r22.yyzy, l(255.000000, 0.000000, 0.000000, 0.000000)
                and r19.y, r19.y, r22.x
                and r19.y, r22.z, r19.y
                eq r22.x, r19.x, l(255.000000)
                and r19.y, r19.y, r22.x
                max r22.x, r24.w, l(0.000100)
                div_sat r25.xyz, r23.xyzx, r22.xxxx
                mad r25.xyz, -r16.wwww, l(0.00392157, 0.00392157, 0.00392157, 0.000000), r25.xyzx
                max r25.xyz, r25.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
                mad r16.w, r22.y, l(0.00392157), -r18.w
                max r16.w, r16.w, l(0.000100)
                div r25.xyz, r25.xyzx, r16.wwww
                min r25.xyz, r25.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                mad r16.w, r19.x, l(0.00392157), -r22.w
                mad r22.yzw, r25.xxyz, r16.wwww, r22.wwww
                ge r25.xyz, l(0.040450, 0.040450, 0.040450, 0.000000), r22.yzwy
                mul r26.xyz, r22.yzwy, l(0.07739938, 0.07739938, 0.07739938, 0.000000)
                add r22.yzw, r22.yyzw, l(0.000000, 0.055000, 0.055000, 0.055000)
                mul r22.yzw, |r22.yyzw|, l(0.000000, 0.94786733, 0.94786733, 0.94786733)
                log r22.yzw, r22.yyzw
                mul r22.yzw, r22.yyzw, l(0.000000, 2.400000, 2.400000, 2.400000)
                exp r22.yzw, r22.yyzw
                movc r22.yzw, r25.xxyz, r26.xxyz, r22.yyzw
                mul r22.yzw, r24.wwww, r22.yyzw
                movc r24.xyz, r19.yyyy, r23.xyzx, r22.yzwy
                utof r18.z, r14.y
                sample_l_indexable(texture2darray)(float,float,float,float) r8.xyz, r18.xyzx, t29.xyzw, s0, l(0.000000)
                and r16.w, r20.x, l(255)
                utof r16.w, r16.w
                mul r23.x, r16.w, l(0.00392157)
                ubfe r18.zw, l(0, 0, 8, 8), l(0, 0, 8, 16), r20.xxxx
                utof r18.zw, r18.zzzw
                mul r23.yz, r18.zzwz, l(0.000000, 0.00392157, 0.00392157, 0.000000)
                ushr r16.w, r20.x, l(24)
                utof r23.w, r16.w
                mul r25.xyzw, r8.xyzw, r23.xyzw
                ge r8.x, r15.z, l(0.984375)
                mul r8.y, r15.z, l(1.01587307)
                mad r8.z, r15.z, l(64.000000), l(-63.000000)
                movc r8.x, r8.x, r8.z, r8.y
                max r8.x, r8.x, l(0.00000001)
                rcp r8.x, r8.x
                f16tof32 r8.y, r21.x
                f16tof32 r8.z, r15.y
                ne r16.w, r8.z, l(1.000000)
                div r22.xyz, r24.xyzx, r22.xxxx
                mad r18.z, r8.w, r23.w, r24.w
                mad_sat r26.w, r18.z, r8.z, -r8.z
                mul r26.xyz, r22.xyzx, r26.wwww
                movc r22.xyzw, r16.wwww, r26.xyzw, r24.xyzw
                mov r9.y, r26.w
                movc r18.zw, r16.wwww, r9.xxxy, r25.wwww
                lt r8.z, r8.x, r0.z
                add r9.y, r0.z, -r8.x
                mul_sat r9.y, r8.y, r9.y
                movc r8.z, r8.z, r9.y, l(1.000000)
                add r19.xy, r3.xyxx, -r8.xxxx
                mul r8.xy, r8.yyyy, r19.xyxx
                min r8.xy, |r8.xyxx|, l(1.000000, 1.000000, 0.000000, 0.000000)
                mul r8.x, r8.x, r8.z
                mul r8.x, r8.y, r8.x
                mul r22.xyzw, r8.xxxx, r22.xyzw
                mul r24.xyzw, r18.zzzz, r22.xyzw
                ne r26.xyzw, r24.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                or r8.yz, r26.zzwz, r26.xxyx
                or r8.y, r8.z, r8.y
                if_nz r8.y
                  ubfe r8.y, l(1), l(30), r19.z
                  if_nz r8.y
                    mul r8.x, r8.x, r18.w
                    ushr r8.y, r19.z, l(31)
                    if_nz r8.y
                      ld_structured_indexable(structured_buffer, stride=48)(mixed,mixed,mixed,mixed) r19.xyz, r14.y, l(24), t3.xyzx
                      ushr r8.y, r19.x, l(28)
                      ishl r8.y, l(1), r8.y
                      ubfe r22.xyz, l(4, 12, 10, 0), l(24, 16, 12, 0), r19.yxzy
                      ishl r8.z, l(1), r22.x
                      and r9.y, r19.y, l(4095)
                      utof r26.xyzw, r8.yzyz
                      mad r8.yz, r18.xxyx, r26.zzwz, l(0.000000, 0.500000, 0.500000, 0.000000)
                      add r18.xy, r26.zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                      min r8.yz, r8.yyzy, r18.xxyx
                      utof r18.x, r22.y
                      utof r18.y, r9.y
                      add r18.xy, r8.yzyy, r18.xyxx
                      mul r27.xy, r18.xyxx, cb1[84].xyxx
                      utof r27.z, r22.z
                      mul r17.xyzw, r17.xzyw, r26.xyzw
                      sample_d_indexable(texture2darray)(float,float,float,float) r9.y, r27.xyzx, t45.yxzw, s0, r17.xyxx, r17.zwzz
                      lt r7.z, l(0.000000), r7.z
                      if_nz r7.z
                        ubfe r7.z, l(12), l(12), r19.y
                        and r14.y, r19.z, l(4095)
                        utof r18.x, r7.z
                        utof r18.y, r14.y
                        add r8.yz, r8.yyzy, r18.xxyx
                        mul r27.xy, r8.yzyy, cb1[84].xyxx
                        sample_d_indexable(texture2darray)(float,float,float,float) r7.z, r27.xyzx, t45.yzxw, s0, r17.xyxx, r17.zwzz
                        add r7.z, -r9.y, r7.z
                        mad r9.y, r15.x, r7.z, r9.y
                      endif 
                    else 
                      mov r9.y, l(1.000000)
                    endif 
                    mul r7.z, r8.x, r9.y
                    ushr r8.x, r15.y, l(16)
                    f16tof32 r8.x, r8.x
                    ubfe r8.y, l(1), l(21), r19.w
                    dp3 r8.z, r25.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
                    max r8.z, r8.z, l(0.000100)
                    max r8.z, r8.z, cb1[85].x
                    mul r8.z, r8.x, r8.z
                    movc r8.x, r8.y, r8.x, r8.z
                    mul r7.z, r7.z, r8.x
                    mad r25.xyz, r23.xyzx, r7.zzzz, r25.xyzx
                  endif 
                  mad r7.z, -r22.w, r18.z, l(1.000000)
                  mul r12.y, r7.z, r12.y
                  lt r8.x, r12.y, l(0.800000)
                  lt r8.y, l(0.200000), r24.w
                  or r8.x, r8.y, r8.x
                  if_nz r8.x
                    ge r8.x, r15.z, l(0.00049219)
                    if_nz r8.x
                      add r8.x, -r15.z, l(1.000000)
                      mov r8.yz, l(0,4,0,0)
                      loop 
                        ige r9.y, r8.z, l(4)
                        breakc_nz r9.y
                        ishl r9.y, r8.z, l(2)
                        ld_structured r9.y, vThreadIDInGroupFlattened.x, r9.y, g0.xxxx
                        ge r9.y, r9.y, r8.x
                        if_nz r9.y
                          mov r8.y, r8.z
                          break 
                        endif 
                        iadd r9.z, r8.z, l(1)
                        mov r8.yz, r9.wwzw
                      endloop 
                      store_structured g0.x, vThreadIDInGroupFlattened.x, l(16), l(1000000015047466219876688855040.000000)
                      store_structured g1.x, vThreadIDInGroupFlattened.x, l(16), l(1.000000)
                      ishl r8.z, r8.y, l(2)
                      iadd r9.y, r8.z, l(-4)
                      ld_structured r9.y, vThreadIDInGroupFlattened.x, r9.y, g1.xxxx
                      movc r9.y, r8.y, r9.y, l(1.000000)
                      mov r9.z, l(3)
                      loop 
                        ilt r14.y, r9.z, l(0)
                        breakc_nz r14.y
                        ige r14.y, r9.z, r8.y
                        if_nz r14.y
                          ishl r14.y, r9.z, l(2)
                          iadd r15.x, r14.y, l(4)
                          ld_structured r15.y, vThreadIDInGroupFlattened.x, r14.y, g0.xxxx
                          store_structured g0.x, vThreadIDInGroupFlattened.x, r15.x, r15.y
                          ld_structured r14.y, vThreadIDInGroupFlattened.x, r14.y, g1.xxxx
                          mul r14.y, r7.z, r14.y
                          store_structured g1.x, vThreadIDInGroupFlattened.x, r15.x, r14.y
                        endif 
                        iadd r9.z, r9.z, l(-1)
                      endloop 
                      store_structured g0.x, vThreadIDInGroupFlattened.x, r8.z, r8.x
                      mul r8.x, r7.z, r9.y
                      store_structured g1.x, vThreadIDInGroupFlattened.x, r8.z, r8.x
                      ld_structured r8.x, vThreadIDInGroupFlattened.x, l(16), g0.xxxx
                      ne r8.x, r8.x, l(1000000015047466219876688855040.000000)
                      if_nz r8.x
                        mov r8.x, l(2)
                        loop 
                          ige r8.z, r8.x, l(4)
                          breakc_nz r8.z
                          ishl r8.z, r8.x, l(2)
                          ld_structured r9.y, vThreadIDInGroupFlattened.x, r8.z, g0.xxxx
                          iadd r8.z, r8.z, l(-4)
                          ld_structured r9.z, vThreadIDInGroupFlattened.x, r8.z, g0.xxxx
                          add r9.y, -r9.z, r9.y
                          ld_structured r15.xy, vThreadIDInGroupFlattened.x, r8.z, g1.xyxx
                          add r8.z, -r15.y, r15.x
                          mul r8.z, r8.z, r9.y
                          mov x8[r8.x + 0].x, r8.z
                          iadd r8.x, r8.x, l(1)
                        endloop 
                        mov r8.x, x8[2].x
                        mov r8.z, x8[3].x
                        lt r8.x, r8.z, r8.x
                        movc r8.xz, r8.xxxx, l(3,0,2,0), l(2,0,1,0)
                        mov r9.y, l(2)
                        loop 
                          ige r9.z, r9.y, l(4)
                          breakc_nz r9.z
                          ige r9.z, r9.y, r8.x
                          if_nz r9.z
                            ishl r9.z, r9.y, l(2)
                            iadd r14.y, r9.z, l(4)
                            ld_structured r14.y, vThreadIDInGroupFlattened.x, r14.y, g0.xxxx
                            store_structured g0.x, vThreadIDInGroupFlattened.x, r9.z, r14.y
                          endif 
                          iadd r9.y, r9.y, l(1)
                        endloop 
                        mov r8.x, l(1)
                        loop 
                          ige r9.y, r8.x, l(4)
                          breakc_nz r9.y
                          ige r9.y, r8.x, r8.z
                          if_nz r9.y
                            ishl r9.y, r8.x, l(2)
                            iadd r9.z, r9.y, l(4)
                            ld_structured r9.z, vThreadIDInGroupFlattened.x, r9.z, g1.xxxx
                            store_structured g1.x, vThreadIDInGroupFlattened.x, r9.y, r9.z
                          endif 
                          iadd r8.x, r8.x, l(1)
                        endloop 
                      endif 
                    endif 
                  endif 
                  ushr r8.xz, r21.xxwx, l(16, 0, 16, 0)
                  f16tof32 r15.y, r21.w
                  f16tof32 r15.xz, r8.xxzx
                  ushr r8.xz, r20.yyzy, l(16, 0, 16, 0)
                  f16tof32 r17.xy, r20.yzyy
                  f16tof32 r17.zw, r8.xxxz
                  mul r17.xyz, r24.wwww, r17.xzyx
                  mov r21.x, r20.w
                  mul r18.xyz, r24.wwww, r21.xyzx
                  mad r19.xyz, r24.xyzx, r25.xyzx, -r17.xyzx
                  mad r17.xyz, r17.wwww, r19.xyzx, r17.xyzx
                  mad r15.xyz, r17.xyzx, r15.xyzx, r18.xyzx
                  mul r15.xyz, r15.xyzx, cb1[85].yyyy
                  mad r13.yzw, r13.yyzw, r7.zzzz, r15.xxyz
                endif 
              endif 
            endif 
          endif 
        endloop 
        mov r10.xyzw, r13.xyzw
        mov r3.w, r12.y
        mov r11.xy, r12.zwzz
      endloop 
      mov r2.xyzw, r10.yzwx
      mov r1.w, r3.w
      ult r0.w, l(1), r0.w
      if_nz r0.w
        mov r4.w, l(0)
        mov r7.xyw, r5.xyxw
        mov r8.w, l(0.00392157)
        mov r9.xw, l(1.000000,0,0,4)
        mov r10.xyzw, r2.wxyz
        mov r0.w, r1.w
        mov r1.xz, r11.xxyx
        mov r3.w, r1.y
        loop 
          breakc_z r3.w
          firstbit_lo r11.z, r3.w
          ishl r11.w, l(1), r11.z
          not r11.w, r11.w
          and r3.w, r3.w, r11.w
          iadd r4.z, r11.z, l(32)
          ld_indexable(texture2darray)(uint,uint,uint,uint) r11.z, r4.xyzw, t25.yzxw
          ishl r4.z, r4.z, l(5)
          mov r12.xyzw, r10.xyzw
          mov r11.w, r0.w
          mov r13.xy, r1.xzxx
          mov r13.z, r11.z
          loop 
            breakc_z r13.z
            firstbit_lo r13.w, r13.z
            ishl r14.x, l(1), r13.w
            not r14.x, r14.x
            and r13.z, r13.z, r14.x
            iadd r13.w, r4.z, r13.w
            ld_structured_indexable(structured_buffer, stride=32)(mixed,mixed,mixed,mixed) r14.xyz, r13.w, l(16), t1.xyzx
            mov r15.xyz, r12.yzwy
            mov r14.w, r12.x
            mov r15.w, r13.x
            mov r16.x, r13.y
            loop 
              ult r16.y, r15.w, r0.y
              lt r16.z, r16.x, r14.z
              and r16.y, r16.z, r16.y
              breakc_z r16.y
              and r7.z, r14.w, l(7)
              ld_indexable(texture2darray)(uint,uint,uint,uint) r16.yz, r7.xyzw, t24.zxyw
              ushr r17.xyz, r16.yyyy, l(1, 8, 16, 0)
              and r16.w, r17.x, l(0x7f800000)
              bfi r16.y, l(8), l(15), r16.y, l(0)
              bfi r16.y, l(23), l(0), r16.y, r17.x
              add r18.x, -r16.w, r16.y
              bfi r17.yz, l(0, 8, 8, 0), l(0, 15, 15, 0), r17.yyzy, l(0, 0, 0, 0)
              bfi r17.xy, l(23, 23, 0, 0), l(0, 0, 0, 0), r17.yzyy, r17.xxxx
              add r18.yz, -r16.wwww, r17.xxyx
              and r16.y, r16.z, l(2046)
              utof r16.y, r16.y
              mad r16.y, -r16.y, l(0.00048876), l(1.000000)
              mad r15.xyz, r15.xyzx, r16.yyyy, r18.xyzx
              iadd r15.w, r15.w, l(1)
              ushr r16.y, r14.w, l(4)
              ult r16.z, r15.w, r0.y
              if_nz r16.z
                ubfe r7.z, l(3), l(4), r14.w
                ld_indexable(texture2darray)(uint,uint,uint,uint) r7.z, r7.xyzw, t24.xzyw
                ushr r7.z, r7.z, l(2)
                and r16.x, r7.z, l(0x3ffffe00)
              else 
                mov r16.x, l(2.000000)
              endif 
              mov r14.w, r16.y
            endloop 
            mov r12.yzw, r15.xxyz
            mov r12.x, r14.w
            mov r13.x, r15.w
            mov r13.y, r16.x
            lt r7.z, r0.x, r14.z
            if_nz r7.z
              ld_structured_indexable(structured_buffer, stride=32)(mixed,mixed,mixed,mixed) r17.xyzw, r13.w, l(0), t1.xyzw
              mul r18.xyzw, r6.xyzw, r17.xyzw
              add r16.yz, r18.yywy, r18.xxzx
              add r18.xy, r14.xyxx, r16.yzyy
              mad r14.xy, r18.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
              max r7.z, |r14.y|, |r14.x|
              lt r7.z, r7.z, l(1.000000)
              if_nz r7.z
                ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r19.xyzw, r13.w, l(40), t2.xyzw
                ushr r7.z, r19.x, l(24)
                utof r7.z, r7.z
                mul r14.x, r7.z, l(0.00390625)
                ubfe r16.yzw, l(0, 4, 4, 1), l(0, 26, 16, 20), r19.zzww
                ishl r20.xyzw, l(1, 1, 1, 1), r16.yzyz
                if_nz r16.w
                  ubfe r14.y, l(12), l(12), r19.x
                  and r16.yz, r19.xxzx, l(0, 4095, 1023, 0)
                  utof r21.xyzw, r20.zwzw
                  mad r22.xy, r18.xyxx, r21.zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r22.zw, r21.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r22.xy, r22.zwzz, r22.xyxx
                  utof r23.xz, r16.yyzy
                  utof r23.y, r14.y
                  add r16.yw, r22.xxxy, r23.xxxy
                  mul r23.xy, r16.ywyy, cb1[83].xyxx
                  mul r21.xyzw, r17.xzyw, r21.xyzw
                  sample_d_indexable(texture2darray)(float,float,float,float) r24.xyzw, r23.xyzx, t42.xyzw, s0, r21.xyxx, r21.zwzz
                  lt r14.y, l(0.000000), r7.z
                  if_nz r14.y
                    and r14.y, r19.y, l(4095)
                    ubfe r16.y, l(12), l(12), r19.y
                    utof r25.x, r14.y
                    utof r25.y, r16.y
                    add r16.yz, r22.xxyx, r25.xxyx
                    mul r23.xy, r16.yzyy, cb1[83].xyxx
                    sample_d_indexable(texture2darray)(float,float,float,float) r21.xyzw, r23.xyzx, t42.xyzw, s0, r21.xyxx, r21.zwzz
                    add r21.xyzw, -r24.xyzw, r21.xyzw
                    mad r24.xyzw, r14.xxxx, r21.xyzw, r24.xyzw
                  endif 
                else 
                  ubfe r14.y, l(12), l(12), r19.x
                  and r16.yz, r19.xxzx, l(0, 4095, 1023, 0)
                  utof r21.xyzw, r20.zwzw
                  mad r22.xy, r18.xyxx, r21.zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r22.zw, r21.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r22.xy, r22.zwzz, r22.xyxx
                  utof r23.x, r16.y
                  utof r23.y, r14.y
                  add r16.yw, r22.xxxy, r23.xxxy
                  mul r22.xy, r16.ywyy, cb1[83].zwzz
                  utof r22.z, r16.z
                  mul r21.xyzw, r17.xzyw, r21.xyzw
                  sample_d_indexable(texture2darray)(float,float,float,float) r24.xyzw, r22.xyzx, t43.xyzw, s0, r21.xyxx, r21.zwzz
                  lt r14.y, l(0.000000), r7.z
                  if_nz r14.y
                    ubfe r14.y, l(12), l(12), r19.y
                    and r16.yz, r19.yyzy, l(0, 4095, 1023, 0)
                    utof r20.xyzw, r20.xyzw
                    mad r21.xy, r18.xyxx, r20.zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r21.zw, r20.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
                    min r21.xy, r21.zwzz, r21.xyxx
                    utof r22.x, r16.y
                    utof r22.y, r14.y
                    add r16.yw, r21.xxxy, r22.xxxy
                    mul r21.xy, r16.ywyy, cb1[83].zwzz
                    utof r21.z, r16.z
                    mul r20.xyzw, r17.xzyw, r20.xyzw
                    sample_d_indexable(texture2darray)(float,float,float,float) r20.xyzw, r21.xyzx, t43.xyzw, s0, r20.xyxx, r20.zwzz
                    add r20.xyzw, -r24.xyzw, r20.xyzw
                    mad r24.xyzw, r14.xxxx, r20.xyzw, r24.xyzw
                  endif 
                endif 
                ne r20.xyzw, r24.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                or r16.yz, r20.zzwz, r20.xxyx
                or r14.y, r16.z, r16.y
                if_nz r14.y
                  ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r20.xyzw, r13.w, l(0), t2.xyzw
                  ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r21.xyzw, r13.w, l(16), t2.zxyw
                  ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r14.y, r13.w, l(32), t2.xxxx
                  ubfe r16.yzw, l(0, 8, 8, 8), l(0, 8, 10, 18), r19.wwzz
                  utof r16.yzw, r16.yyzw
                  mul r22.xy, r16.ywyy, l(0.00392157, 0.00392157, 0.000000, 0.000000)
                  dp3 r16.y, r24.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
                  add r23.xyz, -r24.xyzx, r16.yyyy
                  mad r22.xzw, r22.xxxx, r23.xxyz, r24.xxyz
                  ushr r16.y, r19.y, l(24)
                  utof r16.y, r16.y
                  mul r18.w, r16.y, l(0.00392157)
                  and r19.x, r19.w, l(255)
                  utof r19.x, r19.x
                  eq r19.y, r16.y, l(0.000000)
                  eq r23.xy, r16.zwzz, l(255.000000, 0.000000, 0.000000, 0.000000)
                  and r16.w, r19.y, r23.x
                  and r16.w, r23.y, r16.w
                  eq r19.y, r19.x, l(255.000000)
                  and r16.w, r16.w, r19.y
                  max r19.y, r24.w, l(0.000100)
                  div_sat r23.xyz, r22.xzwx, r19.yyyy
                  mad r23.xyz, -r16.yyyy, l(0.00392157, 0.00392157, 0.00392157, 0.000000), r23.xyzx
                  max r23.xyz, r23.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
                  mad r16.y, r16.z, l(0.00392157), -r18.w
                  max r16.y, r16.y, l(0.000100)
                  div r23.xyz, r23.xyzx, r16.yyyy
                  min r23.xyz, r23.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  mad r16.y, r19.x, l(0.00392157), -r22.y
                  mad r23.xyz, r23.xyzx, r16.yyyy, r22.yyyy
                  ge r25.xyz, l(0.040450, 0.040450, 0.040450, 0.000000), r23.xyzx
                  mul r26.xyz, r23.xyzx, l(0.07739938, 0.07739938, 0.07739938, 0.000000)
                  add r23.xyz, r23.xyzx, l(0.055000, 0.055000, 0.055000, 0.000000)
                  mul r23.xyz, |r23.xyzx|, l(0.94786733, 0.94786733, 0.94786733, 0.000000)
                  log r23.xyz, r23.xyzx
                  mul r23.xyz, r23.xyzx, l(2.400000, 2.400000, 2.400000, 0.000000)
                  exp r23.xyz, r23.xyzx
                  movc r23.xyz, r25.xyzx, r26.xyzx, r23.xyzx
                  mul r23.xyz, r24.wwww, r23.xyzx
                  movc r24.xyz, r16.wwww, r22.xzwx, r23.xyzx
                  utof r18.z, r13.w
                  sample_l_indexable(texture2darray)(float,float,float,float) r8.xyz, r18.xyzx, t29.xyzw, s0, l(0.000000)
                  and r16.y, r20.x, l(255)
                  utof r16.y, r16.y
                  mul r22.x, r16.y, l(0.00392157)
                  ubfe r16.yz, l(0, 8, 8, 0), l(0, 8, 16, 0), r20.xxxx
                  utof r16.yz, r16.yyzy
                  mul r22.yz, r16.yyzy, l(0.000000, 0.00392157, 0.00392157, 0.000000)
                  ushr r16.y, r20.x, l(24)
                  utof r22.w, r16.y
                  mul r23.xyzw, r8.xyzw, r22.xyzw
                  ge r8.x, r14.z, l(0.984375)
                  mul r8.y, r14.z, l(1.01587307)
                  mad r8.z, r14.z, l(64.000000), l(-63.000000)
                  movc r8.x, r8.x, r8.z, r8.y
                  max r8.x, r8.x, l(0.00000001)
                  rcp r8.x, r8.x
                  f16tof32 r8.y, r21.x
                  f16tof32 r8.z, r14.y
                  ne r16.y, r8.z, l(1.000000)
                  div r25.xyz, r24.xyzx, r19.yyyy
                  mad r16.z, r8.w, r22.w, r24.w
                  mad_sat r26.w, r16.z, r8.z, -r8.z
                  mul r26.xyz, r25.xyzx, r26.wwww
                  movc r24.xyzw, r16.yyyy, r26.xyzw, r24.xyzw
                  mov r9.y, r26.w
                  movc r16.yz, r16.yyyy, r9.xxyx, r23.wwww
                  lt r8.z, r8.x, r0.z
                  add r9.y, r0.z, -r8.x
                  mul_sat r9.y, r8.y, r9.y
                  movc r8.z, r8.z, r9.y, l(1.000000)
                  add r18.zw, r3.xxxy, -r8.xxxx
                  mul r8.xy, r8.yyyy, r18.zwzz
                  min r8.xy, |r8.xyxx|, l(1.000000, 1.000000, 0.000000, 0.000000)
                  mul r8.x, r8.x, r8.z
                  mul r8.x, r8.y, r8.x
                  mul r24.xyzw, r8.xxxx, r24.xyzw
                  mul r25.xyzw, r16.yyyy, r24.xyzw
                  ne r26.xyzw, r25.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                  or r8.yz, r26.zzwz, r26.xxyx
                  or r8.y, r8.z, r8.y
                  if_nz r8.y
                    ubfe r8.y, l(1), l(30), r19.z
                    if_nz r8.y
                      mul r8.x, r8.x, r16.z
                      ushr r8.y, r19.z, l(31)
                      if_nz r8.y
                        ld_structured_indexable(structured_buffer, stride=48)(mixed,mixed,mixed,mixed) r19.xyz, r13.w, l(24), t3.xyzx
                        ushr r8.y, r19.x, l(28)
                        ishl r8.y, l(1), r8.y
                        ubfe r24.xyz, l(4, 12, 10, 0), l(24, 16, 12, 0), r19.yxzy
                        ishl r8.z, l(1), r24.x
                        and r9.y, r19.y, l(4095)
                        utof r26.xyzw, r8.yzyz
                        mad r8.yz, r18.xxyx, r26.zzwz, l(0.000000, 0.500000, 0.500000, 0.000000)
                        add r16.zw, r26.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
                        min r8.yz, r8.yyzy, r16.zzwz
                        utof r18.xz, r24.yyzy
                        utof r18.y, r9.y
                        add r16.zw, r8.yyyz, r18.xxxy
                        mul r18.xy, r16.zwzz, cb1[84].xyxx
                        mul r17.xyzw, r17.xzyw, r26.xyzw
                        sample_d_indexable(texture2darray)(float,float,float,float) r9.y, r18.xyzx, t45.yxzw, s0, r17.xyxx, r17.zwzz
                        lt r7.z, l(0.000000), r7.z
                        if_nz r7.z
                          ubfe r7.z, l(12), l(12), r19.y
                          and r13.w, r19.z, l(4095)
                          utof r19.x, r7.z
                          utof r19.y, r13.w
                          add r8.yz, r8.yyzy, r19.xxyx
                          mul r18.xy, r8.yzyy, cb1[84].xyxx
                          sample_d_indexable(texture2darray)(float,float,float,float) r7.z, r18.xyzx, t45.yzxw, s0, r17.xyxx, r17.zwzz
                          add r7.z, -r9.y, r7.z
                          mad r9.y, r14.x, r7.z, r9.y
                        endif 
                      else 
                        mov r9.y, l(1.000000)
                      endif 
                      mul r7.z, r8.x, r9.y
                      ushr r8.x, r14.y, l(16)
                      f16tof32 r8.x, r8.x
                      ubfe r8.y, l(1), l(21), r19.w
                      dp3 r8.z, r23.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
                      max r8.z, r8.z, l(0.000100)
                      max r8.z, r8.z, cb1[85].x
                      mul r8.z, r8.x, r8.z
                      movc r8.x, r8.y, r8.x, r8.z
                      mul r7.z, r7.z, r8.x
                      mad r23.xyz, r22.xyzx, r7.zzzz, r23.xyzx
                    endif 
                    mad r7.z, -r24.w, r16.y, l(1.000000)
                    mul r11.w, r7.z, r11.w
                    lt r8.x, r11.w, l(0.800000)
                    lt r8.y, l(0.200000), r25.w
                    or r8.x, r8.y, r8.x
                    if_nz r8.x
                      ge r8.x, r14.z, l(0.00049219)
                      if_nz r8.x
                        add r8.x, -r14.z, l(1.000000)
                        mov r8.yz, l(0,4,0,0)
                        loop 
                          ige r9.y, r8.z, l(4)
                          breakc_nz r9.y
                          ishl r9.y, r8.z, l(2)
                          ld_structured r9.y, vThreadIDInGroupFlattened.x, r9.y, g0.xxxx
                          ge r9.y, r9.y, r8.x
                          if_nz r9.y
                            mov r8.y, r8.z
                            break 
                          endif 
                          iadd r9.z, r8.z, l(1)
                          mov r8.yz, r9.wwzw
                        endloop 
                        store_structured g0.x, vThreadIDInGroupFlattened.x, l(16), l(1000000015047466219876688855040.000000)
                        store_structured g1.x, vThreadIDInGroupFlattened.x, l(16), l(1.000000)
                        ishl r8.z, r8.y, l(2)
                        iadd r9.y, r8.z, l(-4)
                        ld_structured r9.y, vThreadIDInGroupFlattened.x, r9.y, g1.xxxx
                        movc r9.y, r8.y, r9.y, l(1.000000)
                        mov r9.z, l(3)
                        loop 
                          ilt r13.w, r9.z, l(0)
                          breakc_nz r13.w
                          ige r13.w, r9.z, r8.y
                          if_nz r13.w
                            ishl r13.w, r9.z, l(2)
                            iadd r14.x, r13.w, l(4)
                            ld_structured r14.y, vThreadIDInGroupFlattened.x, r13.w, g0.xxxx
                            store_structured g0.x, vThreadIDInGroupFlattened.x, r14.x, r14.y
                            ld_structured r13.w, vThreadIDInGroupFlattened.x, r13.w, g1.xxxx
                            mul r13.w, r7.z, r13.w
                            store_structured g1.x, vThreadIDInGroupFlattened.x, r14.x, r13.w
                          endif 
                          iadd r9.z, r9.z, l(-1)
                        endloop 
                        store_structured g0.x, vThreadIDInGroupFlattened.x, r8.z, r8.x
                        mul r8.x, r7.z, r9.y
                        store_structured g1.x, vThreadIDInGroupFlattened.x, r8.z, r8.x
                        ld_structured r8.x, vThreadIDInGroupFlattened.x, l(16), g0.xxxx
                        ne r8.x, r8.x, l(1000000015047466219876688855040.000000)
                        if_nz r8.x
                          mov r8.x, l(2)
                          loop 
                            ige r8.z, r8.x, l(4)
                            breakc_nz r8.z
                            ishl r8.z, r8.x, l(2)
                            ld_structured r9.y, vThreadIDInGroupFlattened.x, r8.z, g0.xxxx
                            iadd r8.z, r8.z, l(-4)
                            ld_structured r9.z, vThreadIDInGroupFlattened.x, r8.z, g0.xxxx
                            add r9.y, -r9.z, r9.y
                            ld_structured r14.xy, vThreadIDInGroupFlattened.x, r8.z, g1.xyxx
                            add r8.z, -r14.y, r14.x
                            mul r8.z, r8.z, r9.y
                            mov x9[r8.x + 0].x, r8.z
                            iadd r8.x, r8.x, l(1)
                          endloop 
                          mov r8.x, x9[2].x
                          mov r8.z, x9[3].x
                          lt r8.x, r8.z, r8.x
                          movc r8.xz, r8.xxxx, l(3,0,2,0), l(2,0,1,0)
                          mov r9.y, l(2)
                          loop 
                            ige r9.z, r9.y, l(4)
                            breakc_nz r9.z
                            ige r9.z, r9.y, r8.x
                            if_nz r9.z
                              ishl r9.z, r9.y, l(2)
                              iadd r13.w, r9.z, l(4)
                              ld_structured r13.w, vThreadIDInGroupFlattened.x, r13.w, g0.xxxx
                              store_structured g0.x, vThreadIDInGroupFlattened.x, r9.z, r13.w
                            endif 
                            iadd r9.y, r9.y, l(1)
                          endloop 
                          mov r8.x, l(1)
                          loop 
                            ige r9.y, r8.x, l(4)
                            breakc_nz r9.y
                            ige r9.y, r8.x, r8.z
                            if_nz r9.y
                              ishl r9.y, r8.x, l(2)
                              iadd r9.z, r9.y, l(4)
                              ld_structured r9.z, vThreadIDInGroupFlattened.x, r9.z, g1.xxxx
                              store_structured g1.x, vThreadIDInGroupFlattened.x, r9.y, r9.z
                            endif 
                            iadd r8.x, r8.x, l(1)
                          endloop 
                        endif 
                      endif 
                    endif 
                    ushr r8.xz, r21.xxwx, l(16, 0, 16, 0)
                    f16tof32 r14.y, r21.w
                    f16tof32 r14.xz, r8.xxzx
                    ushr r8.xz, r20.yyzy, l(16, 0, 16, 0)
                    f16tof32 r17.xy, r20.yzyy
                    f16tof32 r17.zw, r8.xxxz
                    mul r16.yzw, r25.wwww, r17.xxzy
                    mov r21.x, r20.w
                    mul r17.xyz, r25.wwww, r21.xyzx
                    mad r18.xyz, r25.xyzx, r23.xyzx, -r16.yzwy
                    mad r16.yzw, r17.wwww, r18.xxyz, r16.yyzw
                    mad r14.xyz, r16.yzwy, r14.xyzx, r17.xyzx
                    mul r14.xyz, r14.xyzx, cb1[85].yyyy
                    mad r12.yzw, r12.yyzw, r7.zzzz, r14.xxyz
                  endif 
                endif 
              endif 
            endif 
          endloop 
          mov r10.xyzw, r12.xyzw
          mov r0.w, r11.w
          mov r1.xz, r13.xxyx
        endloop 
        mov r2.xyzw, r10.yzwx
        mov r1.w, r0.w
        mov r11.x, r1.x
      endif 
    else 
      mov r11.x, l(0)
    endif 
    add_sat r0.x, -r1.w, l(0.800000)
    mad r0.x, -r0.x, l(1.250000), l(1.000000)
    mul r0.x, r3.z, r0.x
    store_uav_typed u4.xyzw, vThreadID.xyyy, r0.xxxx
    ge r0.x, l(0.900000), r0.x
    if_nz r0.x
      ld_structured r1.xyzw, vThreadIDInGroupFlattened.x, l(0), g0.xyzw
      ld_structured r3.xyzw, vThreadIDInGroupFlattened.x, l(0), g1.xyzw
      add r1.xyzw, -r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      ge r4.xyzw, r1.xyzw, l(0.984375, 0.984375, 0.984375, 0.984375)
      mul r0.xz, r1.xxyx, l(1.01587307, 0.000000, 1.01587307, 0.000000)
      mad r1.xy, r1.xyxx, l(64.000000, 64.000000, 0.000000, 0.000000), l(-63.000000, -63.000000, 0.000000, 0.000000)
      movc r0.xz, r4.xxyx, r1.xxyx, r0.xxzx
      max r0.xz, r0.xxzx, l(0.00000001, 0.000000, 0.00000001, 0.000000)
      rcp r6.xy, r0.xzxx
      mul r0.xz, r1.zzwz, l(1.01587307, 0.000000, 1.01587307, 0.000000)
      mad r1.xy, r1.zwzz, l(64.000000, 64.000000, 0.000000, 0.000000), l(-63.000000, -63.000000, 0.000000, 0.000000)
      movc r0.xz, r4.zzwz, r1.xxyx, r0.xxzx
      max r0.xz, r0.xxzx, l(0.00000001, 0.000000, 0.00000001, 0.000000)
      rcp r6.zw, r0.xxxz
      mul r1.xyzw, r6.xyzw, l(0.000500, 0.000500, 0.000500, 0.000500)
      min r1.xyzw, r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      store_uav_typed u2.xyzw, vThreadID.xyyy, r1.xyzw
      store_uav_typed u3.xyzw, vThreadID.xyyy, r3.xyzw
    endif 
    mov r1.xyz, r2.xyzx
    mov r0.x, r2.w
    mov r0.z, r11.x
    loop 
      uge r0.w, r0.z, r0.y
      breakc_nz r0.w
      and r5.z, r0.x, l(7)
      ld_indexable(texture2darray)(uint,uint,uint,uint) r3.xy, r5.xyzw, t24.xyzw
      ushr r4.xyz, r3.xxxx, l(1, 8, 16, 0)
      and r0.w, r4.x, l(0x7f800000)
      bfi r3.x, l(8), l(15), r3.x, l(0)
      bfi r3.x, l(23), l(0), r3.x, r4.x
      add r6.x, -r0.w, r3.x
      bfi r3.xz, l(8, 0, 8, 0), l(15, 0, 15, 0), r4.yyzy, l(0, 0, 0, 0)
      bfi r3.xz, l(23, 0, 23, 0), l(0, 0, 0, 0), r3.xxzx, r4.xxxx
      add r6.yz, -r0.wwww, r3.xxzx
      and r0.w, r3.y, l(2046)
      utof r0.w, r0.w
      mad r0.w, -r0.w, l(0.00048876), l(1.000000)
      mad r1.xyz, r1.xyzx, r0.wwww, r6.xyzx
      iadd r0.z, r0.z, l(1)
      ushr r0.x, r0.x, l(4)
    endloop 
    mov r1.w, l(0)
    store_uav_typed u5.xyzw, vThreadID.xyyy, r1.xyzw
  endif 
endif 
ret 
// Approximately 1937 instruction slots used
