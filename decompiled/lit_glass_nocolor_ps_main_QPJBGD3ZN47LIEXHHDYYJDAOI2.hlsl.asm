//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:36:17 2021
//
//
// Note: shader requires additional functionality:
//       Early depth-stencil
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float baseNormalHeight;            // Offset:  160 Size:     4
//   float2 glossRange;                 // Offset:  164 Size:     8
//   uint zFeatherComputeSprites;       // Offset:  172 Size:     4
//   float tintAmount;                  // Offset:  176 Size:     4
//   float3 colorTint;                  // Offset:  180 Size:    12 [unused]
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16 [unused]
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for forwardDecalConstants
// {
//
//   struct CoreDecalConstantsPack
//   {
//       
//       uint4 data[8];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   128
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// specColorSampler                  sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// normalSampler                     sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// normalMap                         texture  float4          2d             t0      1 
// gEnvBRDFGlass                     texture  float2          2d             t5      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// glossMap                          texture  float4          2d            t21      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// visibleDecals                     texture    uint     2darray            t35      1 
// forwardDecalConstants             texture  struct         r/o            t36      1 
// materialTexBC7                    texture  float4     2darray            t42      1 
// materialTexBC3                    texture  float4     2darray            t43      1 
// materialTexBC7linear              texture  float4     2darray            t44      1 
// materialTexMask                   texture  float4     2darray            t45      1 
// gOit_Pixels                           UAV    uint          2d             u6      1 
// gOit_Nodes                            UAV   uint2     2darray             u7      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyz 
// COLOR                    0   xyz         1     NONE   float       
// COLOR                    1      w        1     NONE   float       
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 4   x           3     NONE    uint       
// TEXCOORD                 1   xyz         4     NONE   float   xyz 
// TEXCOORD                 2   xyz         5     NONE   float   xyz 
// TEXCOORD                 3   xyz         6     NONE   float   xyz 
// OFFPOSITION              0   xyz         7     NONE   float   xyz 
// SV_IsFrontFace           0   x           8    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | forceEarlyDepthStencil
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[12], immediateIndexed
dcl_constantbuffer CB1[93], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_structured t23, 4
dcl_resource_texture2darray (float,float,float,float) t31
dcl_resource_texture2darray (uint,uint,uint,uint) t35
dcl_resource_structured t36, 128
dcl_resource_texture2darray (float,float,float,float) t42
dcl_resource_texture2darray (float,float,float,float) t43
dcl_resource_texture2darray (float,float,float,float) t44
dcl_resource_texture2darray (float,float,float,float) t45
dcl_uav_typed_texture2d (uint,uint,uint,uint) u6
dcl_uav_typed_texture2darray (uint,uint,uint,uint) u7
dcl_input_ps_siv linear noperspective v0.xyz, position
dcl_input_ps linear v2.xy
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyz
dcl_input_ps_sgv constant v8.x, is_front_face
dcl_output o0.xyzw
dcl_temps 46
sample_indexable(texture2d)(float,float,float,float) r0.x, v2.xyxx, t21.xyzw, s1
add r0.y, -cb0[10].y, cb0[10].z
mad r0.x, r0.x, r0.y, cb0[10].y
mul_sat r0.x, r0.x, l(0.05882353)
sample_indexable(texture2d)(float,float,float,float) r1.xyz, v2.xyxx, t0.xyzw, s3
add r1.xyz, r1.xyzx, l(-0.500000, -0.500000, -0.000000, 0.000000)
mad r1.xyz, cb0[10].xxxx, r1.xyzx, l(0.500000, 0.500000, 0.000000, 0.000000)
mad r0.zw, r1.xxxy, l(0.000000, 0.000000, 1.99218750, 1.99218750), l(0.000000, 0.000000, -1.000000, -1.000000)
dp2 r1.x, r0.zwzz, r0.zwzz
add r1.x, -r1.x, l(1.000000)
max r1.x, r1.x, l(0.000000)
sqrt r1.x, r1.x
mul r1.y, r1.z, r1.z
mul r1.y, r1.y, l(0.33333334)
min r1.y, r1.y, l(1.000000)
movc r1.z, v8.x, l(1.000000), l(-1.000000)
dp3 r1.w, v4.xyzx, v4.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, v4.xyzx
mul r2.xyz, r1.zzzz, r2.xyzx
dp3 r1.w, v5.xyzx, v5.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, v5.xyzx
mul r3.xyz, r1.zzzz, r3.xyzx
dp3 r1.w, v6.xyzx, v6.xyzx
rsq r1.w, r1.w
mul r4.xyz, r1.wwww, v6.xyzx
mul r4.xyz, r1.zzzz, r4.xyzx
mul r0.x, r0.x, l(-17.000000)
exp r0.x, r0.x
add r0.x, r0.x, r1.y
log r0.x, r0.x
mul r0.x, r0.x, l(-0.05882353)
mul r4.xyz, r0.wwww, r4.xyzx
mad r3.xyz, r3.xyzx, r0.zzzz, r4.xyzx
mad r2.xyz, r2.xyzx, r1.xxxx, r3.xyzx
dp3 r0.z, r2.xyzx, r2.xyzx
rsq r0.z, r0.z
mul r2.xyz, r0.zzzz, r2.xyzx
mad r0.y, cb1[62].x, r0.y, cb0[10].y
mul_sat r0.y, r0.y, l(0.05882353)
mul r0.y, r0.y, l(-17.000000)
exp r0.y, r0.y
add r0.y, r0.y, r1.y
log r0.y, r0.y
mul r0.y, r0.y, l(-0.05882353)
max r0.xy, r0.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
add r0.y, -r0.x, r0.y
mad r0.x, cb1[62].w, r0.y, r0.x
add r0.y, cb1[63].x, l(-1.000000)
mad r0.y, cb1[63].w, r0.y, l(1.000000)
movc r1.xyw, v8.xxxx, v4.xyxz, -v4.xyxz
dp3 r0.z, r1.xywx, r1.xywx
rsq r0.z, r0.z
mad r1.xyw, r1.xyxw, r0.zzzz, -r2.xyxz
mad r1.xyw, cb1[60].wwww, r1.xyxw, r2.xyxz
mad r0.z, cb0[11].x, l(0.920000), l(0.080000)
ge r0.w, v0.z, l(0.984375)
mul r2.x, v0.z, l(1.01587307)
mad r2.y, v0.z, l(64.000000), l(-63.000000)
movc r0.w, r0.w, r2.y, r2.x
max r0.w, r0.w, l(0.00000001)
rcp r0.w, r0.w
ftou r2.xy, v0.yxyy
deriv_rtx_coarse r3.xyz, v7.xyzx
deriv_rty_coarse r4.xyz, v7.xyzx
iadd r2.z, cb2[0].y, cb2[0].x
add r5.xyz, v7.xyzx, cb1[24].xyzx
mul r0.w, r0.w, l(0.00781250)
min r0.w, r0.w, l(15.000000)
ftou r0.w, r0.w
ushr r6.xy, r2.yxyy, l(6, 6, 0, 0)
ishl r6.z, r0.w, l(4)
and r0.w, cb2[57].z, l(-32)
iadd r2.w, -r0.w, cb2[57].z
mov r7.xy, l(0,0,0,0)
mov r8.w, l(0)
mov r5.w, l(1.000000)
mov r9.xyz, l(0,0,0,0)
mov r10.xyz, l(0,0,0,0)
mov r11.xyz, l(0,0,0,0)
mov r3.w, l(0)
mov r4.w, l(0)
mov r6.w, l(0)
loop 
  uge r7.w, r6.w, cb2[57].z
  breakc_nz r7.w
  ushr r7.z, r6.w, l(5)
  iadd r8.xyz, r6.xyzx, r7.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r7.z, r8.xyzw, t35.yzxw
  ieq r7.w, r0.w, r6.w
  ubfe r8.x, r2.w, l(0), r7.z
  movc r7.z, r7.w, r8.x, r7.z
  iadd r7.w, r2.z, r6.w
  mov r8.xyz, r9.xyzx
  mov r12.xyz, r10.xyzx
  mov r13.xyz, r11.xyzx
  mov r9.w, r3.w
  mov r10.w, r4.w
  mov r11.w, r7.z
  loop 
    breakc_z r11.w
    firstbit_lo r12.w, r11.w
    ishl r13.w, l(1), r12.w
    and r14.x, r11.w, r13.w
    if_nz r14.x
      xor r11.w, r11.w, r13.w
      iadd r13.w, r7.w, r12.w
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r14.xyzw, r13.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r15.xy, r13.w, l(16), t11.xyxx
      add r14.xyz, r14.xyzx, -v7.xyzx
      mov r15.z, r14.w
      lt r14.xyz, |r14.xyzx|, r15.zxyz
      and r13.w, r14.y, r14.x
      and r13.w, r14.z, r13.w
      if_nz r13.w
        iadd r12.w, r6.w, r12.w
        ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r14.xyz, r12.w, l(0), t36.xyzx
        ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r15.xyz, r12.w, l(16), t36.xyzx
        ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r16.xyz, r12.w, l(32), t36.xyzx
        mov r17.x, r14.x
        mov r17.y, r15.x
        mov r17.z, r16.x
        dp3 r13.w, r17.xyzx, r17.xyzx
        rsq r13.w, r13.w
        mul r18.xyz, r13.wwww, r17.xyzx
        dp3 r13.w, r18.xyzx, v4.xyzx
        ge r13.w, r13.w, l(0.500000)
        if_nz r13.w
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r19.xyw, r12.w, l(48), t36.xyxz
          mov r17.w, r19.x
          dp4 r17.x, r5.xyzw, r17.xyzw
          mov r20.x, r14.y
          mov r20.y, r15.y
          mov r20.z, r16.y
          mov r20.w, r19.y
          dp4 r17.y, r5.xyzw, r20.xyzw
          mov r19.x, r14.z
          mov r19.y, r15.z
          mov r19.z, r16.z
          dp4 r17.z, r5.xyzw, r19.xyzw
          lt r14.xyz, |r17.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
          and r13.w, r14.y, r14.x
          and r13.w, r14.z, r13.w
          if_nz r13.w
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r14.xyzw, r12.w, l(64), t36.xyzw
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r15.xyzw, r12.w, l(80), t36.xyzw
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r16.xyzw, r12.w, l(96), t36.xyzw
            dp3 r21.x, r3.xyzx, r20.xyzx
            dp3 r21.y, r3.xyzx, r19.xyzx
            dp3 r22.x, r4.xyzx, r20.xyzx
            dp3 r22.y, r4.xyzx, r19.xyzx
            mad r17.xy, r17.yzyy, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
            mul r21.xyz, r21.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
            mul r22.xyz, r22.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
            and r17.zw, r15.yyyz, l(0, 0, 0x0000ffff, 0x0000ffff)
            if_nz r17.z
              ubfe r13.w, l(4), l(24), r15.w
              ishl r13.w, l(1), r13.w
              ushr r18.w, r15.w, l(28)
              ishl r18.w, l(1), r18.w
              ieq r19.w, r17.z, l(4)
              if_nz r19.w
                and r19.w, r15.w, l(4095)
                ubfe r20.w, l(12), l(12), r15.w
                and r21.w, r16.w, l(1023)
                utof r23.xz, r13.wwww
                utof r23.y, r18.w
                mad r24.xy, r17.xyxx, r23.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                add r24.zw, r23.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                min r24.xy, r24.zwzz, r24.xyxx
                utof r25.x, r19.w
                utof r25.y, r20.w
                add r24.xy, r24.xyxx, r25.xyxx
                mul r24.xy, r24.xyxx, cb1[83].xyxx
                utof r24.z, r21.w
                mul r25.xyz, r21.zyzz, cb1[83].xyxx
                mul r25.xyz, r23.xyzx, r25.xyzx
                mul r26.xyz, r22.zyzz, cb1[83].xyxx
                mul r23.xyz, r23.xyzx, r26.xyzx
                sample_d_indexable(texture2darray)(float,float,float,float) r23.xyzw, r24.xyzx, t42.xyzw, s4, r25.xyzx, r23.xyzx
              else 
                ieq r17.z, r17.z, l(1)
                if_nz r17.z
                  and r17.z, r15.w, l(4095)
                  ubfe r15.w, l(12), l(12), r15.w
                  and r19.w, r16.w, l(1023)
                  utof r24.xz, r13.wwww
                  utof r24.y, r18.w
                  mad r25.xy, r17.xyxx, r24.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r25.zw, r24.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r25.xy, r25.zwzz, r25.xyxx
                  utof r26.x, r17.z
                  utof r26.y, r15.w
                  add r25.xy, r25.xyxx, r26.xyxx
                  mul r25.xy, r25.xyxx, cb1[83].zwzz
                  utof r25.z, r19.w
                  mul r26.xyz, r21.zyzz, cb1[83].zwzz
                  mul r26.xyz, r24.xyzx, r26.xyzx
                  mul r27.xyz, r22.zyzz, cb1[83].zwzz
                  mul r24.xyz, r24.xyzx, r27.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r23.xyzw, r25.xyzx, t43.xyzw, s4, r26.xyzx, r24.xyzx
                else 
                  mov r23.xyzw, l(1.000000,1.000000,1.000000,1.000000)
                endif 
              endif 
              mul r14.xyz, r14.xyzx, r23.xyzx
              mul r13.w, r14.w, r23.w
            else 
              mov r14.xyz, l(0,0,0,0)
              mov r13.w, l(0)
            endif 
            ne r15.w, r15.x, l(1.000000)
            add r14.w, r14.w, r13.w
            mad_sat r14.w, r14.w, r15.x, -r15.x
            movc r13.w, r15.w, r14.w, r13.w
            if_nz r17.w
              ubfe r14.w, l(4), l(24), r16.y
              ishl r14.w, l(1), r14.w
              ushr r15.x, r16.y, l(28)
              ishl r15.x, l(1), r15.x
              ieq r15.w, r17.w, l(2)
              if_nz r15.w
                and r15.w, r16.y, l(4095)
                ubfe r23.xy, l(12, 10, 0, 0), l(12, 20, 0, 0), r16.ywyy
                utof r24.xz, r14.wwww
                utof r24.y, r15.x
                mad r23.zw, r17.xxxy, r24.zzzy, l(0.000000, 0.000000, 0.500000, 0.500000)
                add r25.xy, r24.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                min r23.zw, r23.zzzw, r25.xxxy
                utof r25.x, r15.w
                utof r25.yz, r23.xxyx
                add r23.xz, r23.zzwz, r25.xxyx
                mul r25.xy, r23.xzxx, cb1[84].xyxx
                mul r23.xyz, r21.zyzz, cb1[84].xyxx
                mul r23.xyz, r24.xyzx, r23.xyzx
                mul r26.xyz, r22.zyzz, cb1[84].xyxx
                mul r24.xyz, r24.xyzx, r26.xyzx
                sample_d_indexable(texture2darray)(float,float,float,float) r15.w, r25.xyzx, t45.yzwx, s4, r23.xyzx, r24.xyzx
              else 
                ieq r17.z, r17.w, l(4)
                if_nz r17.z
                  and r17.z, r16.y, l(4095)
                  ubfe r23.xy, l(12, 10, 0, 0), l(12, 20, 0, 0), r16.ywyy
                  utof r24.xz, r14.wwww
                  utof r24.y, r15.x
                  mad r23.zw, r17.xxxy, r24.zzzy, l(0.000000, 0.000000, 0.500000, 0.500000)
                  add r25.xy, r24.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r23.zw, r23.zzzw, r25.xxxy
                  utof r25.x, r17.z
                  utof r25.yz, r23.xxyx
                  add r17.zw, r23.zzzw, r25.xxxy
                  mul r25.xy, r17.zwzz, cb1[83].xyxx
                  mul r23.xyz, r21.zyzz, cb1[83].xyxx
                  mul r23.xyz, r24.xyzx, r23.xyzx
                  mul r26.xyz, r22.zyzz, cb1[83].xyxx
                  mul r24.xyz, r24.xyzx, r26.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r15.w, r25.xyzx, t42.yzwx, s4, r23.xyzx, r24.xyzx
                else 
                  and r17.z, r16.y, l(4095)
                  ubfe r23.xy, l(12, 10, 0, 0), l(12, 20, 0, 0), r16.ywyy
                  utof r24.xz, r14.wwww
                  utof r24.y, r15.x
                  mad r23.zw, r17.xxxy, r24.zzzy, l(0.000000, 0.000000, 0.500000, 0.500000)
                  add r25.xy, r24.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r23.zw, r23.zzzw, r25.xxxy
                  utof r25.x, r17.z
                  utof r25.yz, r23.xxyx
                  add r17.zw, r23.zzzw, r25.xxxy
                  mul r25.xy, r17.zwzz, cb1[83].zwzz
                  mul r23.xyz, r21.zyzz, cb1[83].zwzz
                  mul r23.xyz, r24.xyzx, r23.xyzx
                  mul r26.xyz, r22.zyzz, cb1[83].zwzz
                  mul r24.xyz, r24.xyzx, r26.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r15.w, r25.xyzx, t43.yzwx, s4, r23.xyzx, r24.xyzx
                endif 
              endif 
              mad r23.xyz, r15.wwww, l(0.960000, 0.960000, 0.960000, 0.000000), l(0.040000, 0.040000, 0.040000, 0.000000)
              add_sat r14.w, -r15.w, l(1.000000)
              mul r14.xyz, r14.wwww, r14.xyzx
            else 
              mov r23.xyz, l(0.040000,0.040000,0.040000,0)
            endif 
            ushr r15.xy, r15.zyzz, l(16, 16, 0, 0)
            if_nz r15.x
              ieq r14.w, r15.x, l(2)
              if_nz r14.w
                ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r12.w, r12.w, l(112), t36.xxxx
                ubfe r15.zw, l(0, 0, 4, 12), l(0, 0, 24, 12), r16.zzzz
                ishl r14.w, l(1), r15.z
                ushr r15.z, r16.z, l(28)
                ishl r15.z, l(1), r15.z
                and r16.y, r16.z, l(4095)
                and r12.w, r12.w, l(1023)
                utof r24.xz, r14.wwww
                utof r24.y, r15.z
                mad r17.zw, r17.xxxy, r24.zzzy, l(0.000000, 0.000000, 0.500000, 0.500000)
                add r25.xy, r24.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                min r17.zw, r17.zzzw, r25.xxxy
                utof r25.x, r16.y
                utof r25.y, r15.w
                add r15.zw, r17.zzzw, r25.xxxy
                mul r25.xy, r15.zwzz, cb1[84].xyxx
                utof r25.z, r12.w
                mul r26.xyz, r21.zyzz, cb1[84].xyxx
                mul r26.xyz, r24.xyzx, r26.xyzx
                mul r27.xyz, r22.zyzz, cb1[84].xyxx
                mul r24.xyz, r24.xyzx, r27.xyzx
                sample_d_indexable(texture2darray)(float,float,float,float) r12.w, r25.xyzx, t45.yzwx, s4, r26.xyzx, r24.xyzx
              else 
                ieq r14.w, r15.x, l(6)
                movc r12.w, r14.w, l(0), l(1.000000)
              endif 
            else 
              mov r12.w, l(1.000000)
            endif 
            mul_sat r12.w, r12.w, l(0.76470590)
            if_nz r15.y
              ieq r14.w, r15.y, l(3)
              if_nz r14.w
                ubfe r15.xyz, l(4, 12, 10, 0), l(24, 12, 10, 0), r16.xxwx
                ishl r14.w, l(1), r15.x
                ushr r15.x, r16.x, l(28)
                ishl r15.x, l(1), r15.x
                and r15.w, r16.x, l(4095)
                utof r16.xz, r14.wwww
                utof r16.y, r15.x
                mad r17.xy, r17.xyxx, r16.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
                add r17.zw, r16.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                min r17.xy, r17.zwzz, r17.xyxx
                utof r24.xy, r15.wyww
                add r15.xy, r17.xyxx, r24.xyxx
                mul r17.xy, r15.xyxx, cb1[84].zwzz
                utof r17.z, r15.z
                mul r15.xyz, r21.xyzx, cb1[84].zwzz
                mul r15.xyz, r16.xyzx, r15.xyzx
                mul r21.xyz, r22.xyzx, cb1[84].zwzz
                mul r16.xyz, r16.xyzx, r21.xyzx
                sample_d_indexable(texture2darray)(float,float,float,float) r15.xyz, r17.xyzx, t44.xyzw, s4, r15.xyzx, r16.xyzx
              else 
                mov r15.xyz, l(0.500000,0.500000,1.000000,0)
              endif 
              mad r15.xy, r15.xyxx, l(1.99218750, 1.99218750, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
              dp2 r14.w, r15.xyxx, r15.xyxx
              add r14.w, -r14.w, l(1.000000)
              max r14.w, r14.w, l(0.000000)
              sqrt r14.w, r14.w
              mul r15.z, r15.z, r15.z
              mul r15.z, r15.z, l(0.33333334)
              min r15.z, r15.z, l(1.000000)
              dp3 r15.w, r20.xyzx, r20.xyzx
              rsq r15.w, r15.w
              mul r16.xyz, r15.wwww, r20.xyzx
              dp3 r15.w, -r19.xyzx, -r19.xyzx
              rsq r15.w, r15.w
              mul r17.xyz, r15.wwww, -r19.xyzx
              mul r18.xyz, r1.zzzz, r18.xyzx
              mul r16.xyz, r1.zzzz, r16.xyzx
              mul r17.xyz, r1.zzzz, r17.xyzx
              mul r15.w, r12.w, l(-17.000000)
              exp r15.w, r15.w
              add r15.z, r15.w, r15.z
              log r15.z, r15.z
              mul r15.z, r15.z, l(-0.05882353)
              max r12.w, r15.z, l(0.000000)
              mul r15.yzw, r15.yyyy, r17.xxyz
              mad r15.xyz, r16.xyzx, r15.xxxx, r15.yzwy
              mad r15.xyz, r18.xyzx, r14.wwww, r15.xyzx
              dp3 r14.w, r15.xyzx, r15.xyzx
              rsq r14.w, r14.w
              mul r15.xyz, r14.wwww, r15.xyzx
              add r14.w, -r13.w, l(1.000000)
              mul r16.xyz, r12.xyzx, r14.wwww
              mad r12.xyz, r15.xyzx, r13.wwww, r16.xyzx
            endif 
            add r14.w, -r13.w, l(1.000000)
            mul r15.xyz, r8.xyzx, r14.wwww
            mad r8.xyz, r14.xyzx, r13.wwww, r15.xyzx
            mul r14.xyz, r13.xyzx, r14.wwww
            mad r13.xyz, r23.xyzx, r13.wwww, r14.xyzx
            mad r9.w, r9.w, r14.w, r13.w
            mul r14.x, r10.w, r14.w
            mad r10.w, r12.w, r13.w, r14.x
          endif 
        endif 
      endif 
    endif 
  endloop 
  mov r9.xyz, r8.xyzx
  mov r10.xyz, r12.xyzx
  mov r11.xyz, r13.xyzx
  mov r3.w, r9.w
  mov r4.w, r10.w
  iadd r6.w, r6.w, l(32)
endloop 
mov_sat r3.w, r3.w
add r0.w, -r3.w, l(1.000000)
mad r0.z, r0.z, r0.w, r3.w
mad r1.xyz, r1.xywx, r0.wwww, r10.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
mad r3.y, r0.x, r0.w, r4.w
mad r4.xyz, r0.wwww, l(0.080000, 0.080000, 0.080000, 0.000000), r11.xyzx
dp3 r0.x, -v7.xyzx, -v7.xyzx
rsq r0.x, r0.x
mul r7.xyz, r0.xxxx, -v7.xyzx
ine r0.w, cb1[92].x, l(0)
utof r2.xy, r2.xyxx
dp2 r2.z, r2.yxyy, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r2.z, r2.z
mul r2.z, r2.z, l(52.982918)
frc r2.z, r2.z
mad r2.z, r2.z, l(6.28318548), cb1[70].w
sincos r8.x, r10.x, r2.z
dp2 r2.x, r2.xyxx, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r2.x, r2.x
mul r2.x, r2.x, l(52.982918)
frc r2.x, r2.x
mad r2.x, r2.x, l(6.28318548), cb1[70].w
sincos r2.x, r11.x, r2.x
dp3_sat r3.x, r1.xyzx, r7.xyzx
dp3 r2.y, -r7.xyzx, r1.xyzx
add r2.y, r2.y, r2.y
mad r12.xyz, r1.xyzx, -r2.yyyy, -r7.xyzx
mul r2.y, r3.y, l(17.000000)
exp r2.y, r2.y
add r2.y, r2.y, l(2.000000)
div r2.y, l(2.000000), r2.y
sqrt r2.z, r2.y
add r3.zw, -r3.yyyx, l(0.000000, 0.000000, 1.000000, 1.000000)
mul r2.w, r3.z, l(5.000000)
mad r4.w, r3.z, l(5.000000), l(-2.500000)
mul_sat r4.w, r4.w, l(0.400000)
mul r4.w, r4.w, l(100.000000)
mad r8.zw, -r3.zzzz, l(0.000000, 0.000000, 10.000000, 5.000000), l(0.000000, 0.000000, 6.857410, 7.085000)
exp r6.w, r8.z
mul r6.w, r3.x, r6.w
mul r6.w, r6.w, l(9.136810)
mul r7.w, r3.z, r2.w
mad r7.w, -r7.w, l(2.015905), r8.w
exp r7.w, r7.w
mul r7.w, r3.x, r7.w
mul r7.w, r7.w, l(9.708090)
max r6.w, r6.w, r7.w
max r6.w, r6.w, l(1.268160)
mov r13.xy, l(0,0,0,0)
mov r14.w, l(0)
mov r15.yz, l(0,0,1.000000,0)
mov r16.xy, l(0,0,0,0)
mov r17.xy, l(0,0,0,0)
mov r18.xy, l(0,0,0,0)
mov r19.x, l(1.000000)
mov r20.xyzw, l(0,0,0,0)
mov r21.yzw, l(0,0,0,0)
mov r7.w, l(0)
mov r8.z, l(0)
loop 
  uge r8.w, r8.z, cb2[0].y
  breakc_nz r8.w
  ushr r13.z, r8.z, l(5)
  iadd r14.xyz, r6.xyzx, r13.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r8.w, r14.xyzw, t7.yzwx
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r22.xyzw, r8.z, l(0), t15.wxyz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r23.xyzw, r8.z, l(16), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r8.z, l(32), t15.yxwz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r8.z, l(48), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r8.z, l(64), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r8.z, l(80), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r11.yz, r8.z, l(96), t15.xxyx
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r8.z, l(116), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r8.z, l(132), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r8.z, l(148), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r8.z, l(164), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r8.z, l(180), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r8.z, l(196), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xy, r8.z, l(212), t15.xyxx
  add r14.xyz, -r22.yzwy, v7.xyzx
  dp3 r9.w, r14.xyzx, r14.xyzx
  sqrt r9.w, r9.w
  ge r9.w, cb2[54].y, r9.w
  and r10.w, r28.y, l(0x0000ffff)
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r10.w, l(0), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r10.w, l(16), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r10.w, l(32), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r38.xyzw, r10.w, l(48), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r39.xyzw, r10.w, l(64), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r40.xyzw, r10.w, l(80), t16.xyzw
  dp3 r11.w, r35.xyzx, r14.xyzx
  add_sat r11.w, r35.w, r11.w
  dp3 r13.z, r36.xyzx, r14.xyzx
  add_sat r13.z, r36.w, r13.z
  mul r11.w, r11.w, r13.z
  dp3 r13.z, r37.xyzx, r14.xyzx
  add_sat r13.z, r37.w, r13.z
  mul r11.w, r11.w, r13.z
  dp3 r13.z, r38.xyzx, r14.xyzx
  add_sat r13.z, r38.w, r13.z
  mul r11.w, r11.w, r13.z
  dp3 r13.z, r39.xyzx, r14.xyzx
  add_sat r13.z, r39.w, r13.z
  mul r11.w, r11.w, r13.z
  dp3 r13.z, r40.xyzx, r14.xyzx
  add_sat r13.z, r40.w, r13.z
  mul r15.x, r11.w, r13.z
  and r11.w, r11.y, l(1)
  movc r13.zw, r11.wwww, r15.xxxy, r15.zzzx
  mov r35.xy, r28.zwzz
  mov r35.z, r29.z
  dp3 r11.w, r12.xyzx, r35.xyzx
  dp3 r15.x, r14.xyzx, r35.xyzx
  add r15.x, -r29.w, r15.x
  ge r15.w, r15.x, l(0.000000)
  max r15.x, r4.w, |r15.x|
  movc r15.x, r15.w, r15.x, -r15.x
  max r11.w, -r11.w, l(0.00000010)
  div r11.w, r15.x, r11.w
  min r11.w, |r11.w|, l(131072.000000)
  mov r29.z, r30.z
  dp3 r15.x, r12.xyzx, r29.xyzx
  dp3 r15.w, r14.xyzx, r29.xyzx
  add r15.w, -r30.w, r15.w
  ge r16.w, r15.w, l(0.000000)
  max r15.w, r4.w, |r15.w|
  movc r15.w, r16.w, r15.w, -r15.w
  max r15.x, -r15.x, l(0.00000010)
  div r15.x, r15.w, r15.x
  min r11.w, r11.w, |r15.x|
  mov r30.z, r31.z
  dp3 r15.x, r12.xyzx, r30.xyzx
  dp3 r15.w, r14.xyzx, r30.xyzx
  add r15.w, -r31.w, r15.w
  ge r16.w, r15.w, l(0.000000)
  max r15.w, r4.w, |r15.w|
  movc r15.w, r16.w, r15.w, -r15.w
  max r15.x, -r15.x, l(0.00000010)
  div r15.x, r15.w, r15.x
  min r11.w, r11.w, |r15.x|
  mov r31.z, r32.z
  dp3 r15.x, r12.xyzx, r31.xyzx
  dp3 r15.w, r14.xyzx, r31.xyzx
  add r15.w, -r32.w, r15.w
  ge r16.w, r15.w, l(0.000000)
  max r15.w, r4.w, |r15.w|
  movc r15.w, r16.w, r15.w, -r15.w
  max r15.x, -r15.x, l(0.00000010)
  div r15.x, r15.w, r15.x
  min r11.w, r11.w, |r15.x|
  mov r32.z, r33.x
  dp3 r15.x, r12.xyzx, r32.xyzx
  dp3 r15.w, r14.xyzx, r32.xyzx
  add r15.w, -r33.y, r15.w
  ge r16.w, r15.w, l(0.000000)
  max r15.w, r4.w, |r15.w|
  movc r15.w, r16.w, r15.w, -r15.w
  max r15.x, -r15.x, l(0.00000010)
  div r15.x, r15.w, r15.x
  min r11.w, r11.w, |r15.x|
  mov r34.zw, r33.zzzw
  dp3 r15.x, r12.zxyz, r34.xzwx
  dp3 r15.w, r14.zxyz, r34.xzwx
  add r15.w, -r34.y, r15.w
  ge r16.w, r15.w, l(0.000000)
  max r15.w, r4.w, |r15.w|
  movc r15.w, r16.w, r15.w, -r15.w
  max r15.x, -r15.x, l(0.00000010)
  div r15.x, r15.w, r15.x
  min r11.w, r11.w, |r15.x|
  mov r29.x, r25.w
  mov r29.yz, r26.zzwz
  add r29.xyz, r14.xyzx, r29.xyzx
  mad r29.xyz, r12.xyzx, r11.wwww, r29.xyzx
  dp3 r15.x, r29.xyzx, r29.xyzx
  sqrt r15.x, r15.x
  div r11.w, r11.w, r15.x
  add r11.w, r11.w, r11.w
  sqrt r11.w, r11.w
  mad r11.w, r3.z, l(5.000000), r11.w
  add r11.w, r11.w, l(-0.844800)
  mov r22.y, r23.z
  mov r22.z, r24.x
  dp3 r30.x, r29.xyzx, r22.xyzx
  mov r31.xy, r23.xwxx
  mov r31.z, r24.w
  dp3 r30.y, r29.xyzx, r31.xyzx
  mov r24.x, r23.y
  dp3 r30.z, r29.xyzx, r24.xyzx
  ubfe r15.xw, l(6, 0, 0, 9), l(25, 0, 0, 16), r28.yyyy
  utof r30.w, r15.w
  sample_l_indexable(texturecubearray)(float,float,float,float) r23.xyz, r30.xyzw, t8.xyzw, s2, r11.w
  and r28.yzw, r23.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
  ieq r28.yzw, r28.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
  or r11.w, r28.z, r28.y
  or r11.w, r28.w, r11.w
  movc r23.xyz, r11.wwww, l(1.000000,1.000000,0,0), r23.xyzx
  dp3 r29.x, r14.xyzx, r22.xyzx
  dp3 r29.y, r14.xyzx, r31.xyzx
  dp3 r29.z, r14.xyzx, r24.xyzx
  mad_sat r25.xyz, r29.xyzx, r25.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mov r26.z, r27.x
  mad r25.xyz, r25.xyzx, r26.xyzx, r27.yzwy
  dp3 r30.x, r1.xyzx, r22.xyzx
  dp3 r30.y, r1.xyzx, r31.xyzx
  dp3 r30.z, r1.xyzx, r24.xyzx
  lt r22.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r30.xyzx
  movc r16.z, r22.x, l(0), l(0.500000)
  add r24.xyz, r16.xyzx, r25.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r24.xyz, r24.xyzx, t17.xyzw, s4, l(0.000000)
  movc r17.z, r22.y, l(0), l(0.500000)
  add r22.xyw, r17.xyxz, r25.xyxz
  sample_l_indexable(texture3d)(float,float,float,float) r22.xyw, r22.xywx, t18.xywz, s4, l(0.000000)
  movc r18.z, r22.z, l(0), l(0.500000)
  add r25.xyz, r18.xyzx, r25.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r25.xyz, r25.xyzx, t19.xyzw, s4, l(0.000000)
  mul r26.xyz, r30.xyzx, r30.xyzx
  sample_l_indexable(texturecubearray)(float,float,float,float) r27.xyz, r30.xyzw, t8.xyzw, s2, l(6.000000)
  and r28.yzw, r27.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
  ieq r28.yzw, r28.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
  or r11.w, r28.z, r28.y
  or r11.w, r28.w, r11.w
  movc r27.xyz, r11.wwww, l(1.000000,1.000000,0,0), r27.xyzx
  mov r29.xyzw, r20.xyzw
  mov r28.yzw, r21.yyzw
  mov r11.w, r7.w
  mov r15.w, r8.w
  loop 
    breakc_z r15.w
    firstbit_lo r16.z, r15.w
    ishl r16.z, l(1), r16.z
    and r16.w, r15.w, r16.z
    if_nz r16.w
      not r16.z, r16.z
      and r15.w, r15.w, r16.z
      if_nz r9.w
        mov r16.z, r11.y
        mov r30.xy, r13.zwzz
        mov r16.w, l(1)
        loop 
          ige r17.z, r16.w, r15.x
          breakc_nz r17.z
          iadd r17.z, r10.w, r16.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r17.z, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r17.z, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r17.z, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r17.z, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r17.z, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r17.z, l(80), t16.xyzw
          dp3 r17.z, r31.xyzx, r14.xyzx
          add_sat r17.z, r31.w, r17.z
          mul r17.z, r17.z, r30.x
          dp3 r17.w, r32.xyzx, r14.xyzx
          add_sat r17.w, r32.w, r17.w
          mul r17.z, r17.w, r17.z
          dp3 r17.w, r33.xyzx, r14.xyzx
          add_sat r17.w, r33.w, r17.w
          mul r17.z, r17.w, r17.z
          dp3 r17.w, r34.xyzx, r14.xyzx
          add_sat r17.w, r34.w, r17.w
          mul r17.z, r17.w, r17.z
          dp3 r17.w, r35.xyzx, r14.xyzx
          add_sat r17.w, r35.w, r17.w
          mul r17.z, r17.w, r17.z
          dp3 r17.w, r36.xyzx, r14.xyzx
          add_sat r17.w, r36.w, r17.w
          mul r30.x, r17.w, r17.z
          ushr r18.z, r16.z, l(2)
          ubfe r18.w, l(1), l(2), r16.z
          and r19.z, r18.z, l(2)
          max r19.w, r30.x, r30.y
          mad r17.z, -r17.z, r17.w, l(1.000000)
          mul r17.z, r17.z, r30.y
          movc r19.y, r19.z, r17.z, r19.w
          movc r30.xy, r18.wwww, r30.xyxx, r19.xyxx
          iadd r16.w, r16.w, l(1)
          mov r16.z, r18.z
        endloop 
        mov_sat r30.y, r30.y
        mul r16.z, r11.z, r30.y
        lt r16.w, l(0.000000), r16.z
        if_nz r16.w
          mad r31.z, r30.y, r11.z, r28.w
          mul r16.z, r28.x, r16.z
          mul r19.yzw, r16.zzzz, r26.xxyz
          mul r30.xzw, r19.zzzz, r22.xxyw
          mad r30.xzw, r24.xxyz, r19.yyyy, r30.xxzw
          mad r19.yzw, r25.xxyz, r19.wwww, r30.xxzw
          mul r30.xzw, r27.xxyz, r19.yyzw
          dp3 r16.w, r30.xzwx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r32.xyz, r19.yzwy, r27.xyzx, r29.xyzx
          mul r17.z, r6.w, r16.w
          mul r19.yzw, r16.zzzz, r23.xxyz
          dp3 r16.z, r19.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r16.z, r6.w, r16.w, r16.z
          div r16.z, r17.z, r16.z
          mov r33.x, r29.w
          mov r33.yz, r28.yyzy
          mad r31.xyw, r19.zwzy, r16.zzzz, r33.yzyx
          mov r32.w, r31.w
        else 
          mov r32.xyzw, r29.xyzw
          mov r31.xyz, r28.yzwy
        endif 
        mov r11.w, l(-1)
        mov r29.xyzw, r32.xyzw
        mov r28.yzw, r31.xxyz
        break 
      endif 
    endif 
  endloop 
  if_nz r11.w
    mov r20.xyzw, r29.xyzw
    mov r21.yzw, r28.yyzw
    mov r7.w, l(-1)
    break 
  endif 
  iadd r8.z, r8.z, l(32)
  mov r20.xyzw, r29.xyzw
  mov r21.yzw, r28.yyzw
  mov r7.w, r11.w
endloop 
if_z r7.w
  iadd r7.w, cb2[0].y, -cb2[58].x
  and r8.z, r7.w, l(-32)
  iadd r8.w, r7.w, -r8.z
  and r9.w, cb2[0].y, l(-32)
  iadd r10.w, -r9.w, cb2[0].y
  mov r13.xy, l(0,0,0,0)
  mov r14.w, l(0)
  mov r15.yz, l(0,0,1.000000,0)
  mov r16.xy, l(0,0,0,0)
  mov r17.x, l(1.000000)
  mov r18.xy, l(0,0,0,0)
  mov r19.xy, l(0,0,0,0)
  mov r22.xyzw, r20.xyzw
  mov r23.yzw, r21.yyzw
  mov r11.y, r8.z
  loop 
    uge r11.z, r11.y, cb2[0].y
    breakc_nz r11.z
    ushr r13.z, r11.y, l(5)
    iadd r14.xyz, r6.xyzx, r13.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r11.z, r14.xyzw, t7.yzxw
    ieq r11.w, r8.z, r11.y
    bfi r13.z, r8.w, l(0), l(0), r11.z
    movc r11.z, r11.w, r13.z, r11.z
    ieq r11.w, r9.w, r11.y
    ubfe r13.z, r10.w, l(0), r11.z
    movc r11.z, r11.w, r13.z, r11.z
    iadd r11.w, r11.y, cb2[0].x
    mov r24.xyzw, r22.xyzw
    mov r25.xyz, r23.yzwy
    mov r13.z, r11.z
    loop 
      breakc_z r13.z
      firstbit_lo r13.w, r13.z
      ishl r14.x, l(1), r13.w
      and r14.y, r13.z, r14.x
      if_nz r14.y
        xor r13.z, r13.z, r14.x
        iadd r14.x, r11.w, r13.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r26.xyzw, r14.x, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r14.xy, r14.x, l(16), t11.xyxx
        add r26.xyz, r26.xyzx, -v7.xyzx
        mov r14.z, r26.w
        lt r14.xyz, |r26.xyzx|, r14.zxyz
        and r14.x, r14.y, r14.x
        and r14.x, r14.z, r14.x
        if_nz r14.x
          iadd r13.w, r11.y, r13.w
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r13.w, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r14.xy, r13.w, l(96), t15.xyxx
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r13.w, l(116), t15.zwxy
          add r28.xyz, -r26.yzwy, v7.xyzx
          and r14.z, r27.w, l(0x0000ffff)
          ubfe r15.w, l(6), l(25), r27.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r14.z, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r14.z, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r14.z, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r14.z, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r14.z, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r14.z, l(80), t16.xyzw
          dp3 r16.w, r29.xyzx, r28.xyzx
          add_sat r16.w, r29.w, r16.w
          dp3 r17.z, r30.xyzx, r28.xyzx
          add_sat r17.z, r30.w, r17.z
          mul r16.w, r16.w, r17.z
          dp3 r17.z, r31.xyzx, r28.xyzx
          add_sat r17.z, r31.w, r17.z
          mul r16.w, r16.w, r17.z
          dp3 r17.z, r32.xyzx, r28.xyzx
          add_sat r17.z, r32.w, r17.z
          mul r16.w, r16.w, r17.z
          dp3 r17.z, r33.xyzx, r28.xyzx
          add_sat r17.z, r33.w, r17.z
          mul r16.w, r16.w, r17.z
          dp3 r17.z, r34.xyzx, r28.xyzx
          add_sat r17.z, r34.w, r17.z
          mul r15.x, r16.w, r17.z
          and r16.w, r14.x, l(1)
          movc r17.zw, r16.wwww, r15.xxxy, r15.zzzx
          mov r15.x, r14.x
          mov r29.xy, r17.zwzz
          mov r16.w, l(1)
          loop 
            ige r18.w, r16.w, r15.w
            breakc_nz r18.w
            iadd r18.w, r14.z, r16.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r18.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r18.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r18.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r18.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r18.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r18.w, l(80), t16.xyzw
            dp3 r18.w, r30.xyzx, r28.xyzx
            add_sat r18.w, r30.w, r18.w
            mul r18.w, r18.w, r29.x
            dp3 r19.w, r31.xyzx, r28.xyzx
            add_sat r19.w, r31.w, r19.w
            mul r18.w, r18.w, r19.w
            dp3 r19.w, r32.xyzx, r28.xyzx
            add_sat r19.w, r32.w, r19.w
            mul r18.w, r18.w, r19.w
            dp3 r19.w, r33.xyzx, r28.xyzx
            add_sat r19.w, r33.w, r19.w
            mul r18.w, r18.w, r19.w
            dp3 r19.w, r34.xyzx, r28.xyzx
            add_sat r19.w, r34.w, r19.w
            mul r18.w, r18.w, r19.w
            dp3 r19.w, r35.xyzx, r28.xyzx
            add_sat r19.w, r35.w, r19.w
            mul r29.x, r18.w, r19.w
            ushr r26.w, r15.x, l(2)
            ubfe r28.w, l(1), l(2), r15.x
            and r29.z, r26.w, l(2)
            max r29.w, r29.x, r29.y
            mad r18.w, -r18.w, r19.w, l(1.000000)
            mul r18.w, r18.w, r29.y
            movc r17.y, r29.z, r18.w, r29.w
            movc r29.xy, r28.wwww, r29.xyxx, r17.xyxx
            iadd r16.w, r16.w, l(1)
            mov r15.x, r26.w
          endloop 
          mov_sat r29.y, r29.y
          mul r14.x, r14.y, r29.y
          lt r14.z, l(0.000000), r14.x
          if_nz r14.z
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r13.w, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r13.w, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r13.w, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r13.w, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r13.w, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r13.w, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r13.w, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r13.w, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r13.w, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xyzw, r13.w, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r40.xy, r13.w, l(212), t15.xyxx
            mad r25.z, r29.y, r14.y, r25.z
            mul r13.w, r27.z, r14.x
            mov r27.z, r35.z
            dp3 r14.x, r12.xyzx, r27.xyzx
            dp3 r14.y, r28.xyzx, r27.xyzx
            add r14.y, -r35.w, r14.y
            ge r14.z, r14.y, l(0.000000)
            max r14.y, r4.w, |r14.y|
            movc r14.y, r14.z, r14.y, -r14.y
            max r14.x, -r14.x, l(0.00000010)
            div r14.x, r14.y, r14.x
            min r14.x, |r14.x|, l(131072.000000)
            mov r35.z, r36.z
            dp3 r14.y, r12.xyzx, r35.xyzx
            dp3 r14.z, r28.xyzx, r35.xyzx
            add r14.z, -r36.w, r14.z
            ge r15.x, r14.z, l(0.000000)
            max r14.z, r4.w, |r14.z|
            movc r14.z, r15.x, r14.z, -r14.z
            max r14.y, -r14.y, l(0.00000010)
            div r14.y, r14.z, r14.y
            min r14.x, |r14.y|, r14.x
            mov r36.z, r37.z
            dp3 r14.y, r12.xyzx, r36.xyzx
            dp3 r14.z, r28.xyzx, r36.xyzx
            add r14.z, -r37.w, r14.z
            ge r15.x, r14.z, l(0.000000)
            max r14.z, r4.w, |r14.z|
            movc r14.z, r15.x, r14.z, -r14.z
            max r14.y, -r14.y, l(0.00000010)
            div r14.y, r14.z, r14.y
            min r14.x, |r14.y|, r14.x
            mov r37.z, r38.z
            dp3 r14.y, r12.xyzx, r37.xyzx
            dp3 r14.z, r28.xyzx, r37.xyzx
            add r14.z, -r38.w, r14.z
            ge r15.x, r14.z, l(0.000000)
            max r14.z, r4.w, |r14.z|
            movc r14.z, r15.x, r14.z, -r14.z
            max r14.y, -r14.y, l(0.00000010)
            div r14.y, r14.z, r14.y
            min r14.x, |r14.y|, r14.x
            mov r38.z, r39.x
            dp3 r14.y, r12.xyzx, r38.xyzx
            dp3 r14.z, r28.xyzx, r38.xyzx
            add r14.z, -r39.y, r14.z
            ge r15.x, r14.z, l(0.000000)
            max r14.z, r4.w, |r14.z|
            movc r14.z, r15.x, r14.z, -r14.z
            max r14.y, -r14.y, l(0.00000010)
            div r14.y, r14.z, r14.y
            min r14.x, |r14.y|, r14.x
            mov r40.zw, r39.zzzw
            dp3 r14.y, r12.zxyz, r40.xzwx
            dp3 r14.z, r28.zxyz, r40.xzwx
            add r14.z, -r40.y, r14.z
            ge r15.x, r14.z, l(0.000000)
            max r14.z, r4.w, |r14.z|
            movc r14.z, r15.x, r14.z, -r14.z
            max r14.y, -r14.y, l(0.00000010)
            div r14.y, r14.z, r14.y
            min r14.x, |r14.y|, r14.x
            mov r27.x, r32.w
            mov r27.yz, r33.zzwz
            add r17.yzw, r28.xxyz, r27.xxyz
            mad r17.yzw, r12.xxyz, r14.xxxx, r17.yyzw
            dp3 r14.y, r17.yzwy, r17.yzwy
            sqrt r14.y, r14.y
            div r14.x, r14.x, r14.y
            add r14.x, r14.x, r14.x
            sqrt r14.x, r14.x
            mad r14.x, r3.z, l(5.000000), r14.x
            add r14.x, r14.x, l(-0.844800)
            mov r26.y, r30.z
            mov r26.z, r31.x
            dp3 r35.x, r17.yzwy, r26.xyzx
            mov r27.xy, r30.xwxx
            mov r27.z, r31.w
            dp3 r35.y, r17.yzwy, r27.xyzx
            mov r31.x, r30.y
            dp3 r35.z, r17.yzwy, r31.xyzx
            ubfe r14.y, l(9), l(16), r27.w
            utof r35.w, r14.y
            sample_l_indexable(texturecubearray)(float,float,float,float) r14.xyz, r35.xyzw, t8.xyzw, s2, r14.x
            and r17.yzw, r14.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
            ieq r17.yzw, r17.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
            or r15.x, r17.z, r17.y
            or r15.x, r17.w, r15.x
            movc r14.xyz, r15.xxxx, l(1.000000,1.000000,0,0), r14.xyzx
            dp3 r30.x, r28.xyzx, r26.xyzx
            dp3 r30.y, r28.xyzx, r27.xyzx
            dp3 r30.z, r28.xyzx, r31.xyzx
            mad_sat r17.yzw, r30.xxyz, r32.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
            mov r33.z, r34.x
            mad r17.yzw, r17.yyzw, r33.xxyz, r34.yyzw
            dp3 r35.x, r1.xyzx, r26.xyzx
            dp3 r35.y, r1.xyzx, r27.xyzx
            dp3 r35.z, r1.xyzx, r31.xyzx
            lt r26.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r35.xyzx
            movc r16.z, r26.x, l(0), l(0.500000)
            add r27.xyz, r16.xyzx, r17.yzwy
            sample_l_indexable(texture3d)(float,float,float,float) r27.xyz, r27.xyzx, t17.xyzw, s4, l(0.000000)
            mul r28.xyz, r35.xyzx, r35.xyzx
            mul r28.xyz, r13.wwww, r28.xyzx
            movc r18.z, r26.y, l(0), l(0.500000)
            add r26.xyw, r17.yzyw, r18.xyxz
            sample_l_indexable(texture3d)(float,float,float,float) r26.xyw, r26.xywx, t18.xywz, s4, l(0.000000)
            mul r26.xyw, r28.yyyy, r26.xyxw
            mad r26.xyw, r27.xyxz, r28.xxxx, r26.xyxw
            movc r19.z, r26.z, l(0), l(0.500000)
            add r17.yzw, r17.yyzw, r19.xxyz
            sample_l_indexable(texture3d)(float,float,float,float) r17.yzw, r17.yzwy, t19.wxyz, s4, l(0.000000)
            mad r17.yzw, r17.yyzw, r28.zzzz, r26.xxyw
            sample_l_indexable(texturecubearray)(float,float,float,float) r26.xyz, r35.xyzw, t8.xyzw, s2, l(6.000000)
            and r27.xyz, r26.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
            ieq r27.xyz, r27.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
            or r15.x, r27.y, r27.x
            or r15.x, r27.z, r15.x
            movc r26.xyz, r15.xxxx, l(1.000000,1.000000,0,0), r26.xyzx
            mul r27.xyz, r17.yzwy, r26.xyzx
            dp3 r15.x, r27.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r24.xyz, r17.yzwy, r26.xyzx, r24.xyzx
            mul r15.w, r6.w, r15.x
            mul r14.xyz, r13.wwww, r14.xyzx
            dp3 r13.w, r14.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r13.w, r6.w, r15.x, r13.w
            div r13.w, r15.w, r13.w
            mov r26.x, r24.w
            mov r26.yz, r25.xxyx
            mad r25.xyw, r14.yzyx, r13.wwww, r26.yzyx
            mov r24.w, r25.w
          endif 
        endif 
      endif 
    endloop 
    mov r22.xyzw, r24.xyzw
    mov r23.yzw, r25.xxyz
    iadd r11.y, r11.y, l(32)
  endloop 
  lt r9.w, r23.w, l(1.000000)
  if_nz r9.w
    mov r13.xy, l(0,0,0,0)
    mov r14.w, l(0)
    mov r15.yz, l(0,0,1.000000,0)
    mov r16.xy, l(0,0,0,0)
    mov r17.x, l(1.000000)
    mov r18.xy, l(0,0,0,0)
    mov r19.xy, l(0,0,0,0)
    mov r24.x, r22.w
    mov r24.yzw, r23.yyzw
    mov r11.yzw, r22.xxyz
    mov r9.w, r23.w
    mov r10.w, l(0)
    loop 
      uge r13.w, r10.w, r7.w
      breakc_nz r13.w
      ushr r13.z, r10.w, l(5)
      iadd r14.xyz, r6.xyzx, r13.xyzx
      ld_indexable(texture2darray)(uint,uint,uint,uint) r13.z, r14.xyzw, t7.yzxw
      ieq r13.w, r8.z, r10.w
      ubfe r14.x, r8.w, l(0), r13.z
      movc r13.z, r13.w, r14.x, r13.z
      iadd r13.w, r10.w, cb2[0].x
      mov r25.xyzw, r24.xyzw
      mov r14.xyz, r11.yzwy
      mov r15.w, r9.w
      mov r16.w, r13.z
      loop 
        breakc_z r16.w
        firstbit_lo r17.z, r16.w
        ishl r17.w, l(1), r17.z
        and r18.w, r16.w, r17.w
        if_nz r18.w
          xor r16.w, r16.w, r17.w
          iadd r17.w, r13.w, r17.z
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r26.xyzw, r17.w, l(0), t11.xyzw
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r27.xy, r17.w, l(16), t11.xyxx
          add r26.xyz, r26.xyzx, -v7.xyzx
          mov r27.z, r26.w
          lt r26.xyz, |r26.xyzx|, r27.zxyz
          and r17.w, r26.y, r26.x
          and r17.w, r26.z, r17.w
          if_nz r17.w
            iadd r17.z, r10.w, r17.z
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r17.z, l(0), t15.wxyz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xy, r17.z, l(96), t15.xyxx
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r17.z, l(116), t15.zwxy
            add r29.xyz, -r26.yzwy, v7.xyzx
            and r17.w, r28.w, l(0x0000ffff)
            ubfe r18.w, l(6), l(25), r28.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r17.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r17.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r17.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r17.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r17.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r17.w, l(80), t16.xyzw
            dp3 r19.w, r30.xyzx, r29.xyzx
            add_sat r19.w, r30.w, r19.w
            dp3 r21.w, r31.xyzx, r29.xyzx
            add_sat r21.w, r31.w, r21.w
            mul r19.w, r19.w, r21.w
            dp3 r21.w, r32.xyzx, r29.xyzx
            add_sat r21.w, r32.w, r21.w
            mul r19.w, r19.w, r21.w
            dp3 r21.w, r33.xyzx, r29.xyzx
            add_sat r21.w, r33.w, r21.w
            mul r19.w, r19.w, r21.w
            dp3 r21.w, r34.xyzx, r29.xyzx
            add_sat r21.w, r34.w, r21.w
            mul r19.w, r19.w, r21.w
            dp3 r21.w, r35.xyzx, r29.xyzx
            add_sat r21.w, r35.w, r21.w
            mul r15.x, r19.w, r21.w
            and r19.w, r27.x, l(1)
            movc r27.zw, r19.wwww, r15.xxxy, r15.zzzx
            mov r15.x, r27.x
            mov r30.xy, r27.zwzz
            mov r19.w, l(1)
            loop 
              ige r21.w, r19.w, r18.w
              breakc_nz r21.w
              iadd r21.w, r17.w, r19.w
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r21.w, l(0), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r21.w, l(16), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r21.w, l(32), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r21.w, l(48), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r21.w, l(64), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r21.w, l(80), t16.xyzw
              dp3 r21.w, r31.xyzx, r29.xyzx
              add_sat r21.w, r31.w, r21.w
              mul r21.w, r21.w, r30.x
              dp3 r26.w, r32.xyzx, r29.xyzx
              add_sat r26.w, r32.w, r26.w
              mul r21.w, r21.w, r26.w
              dp3 r26.w, r33.xyzx, r29.xyzx
              add_sat r26.w, r33.w, r26.w
              mul r21.w, r21.w, r26.w
              dp3 r26.w, r34.xyzx, r29.xyzx
              add_sat r26.w, r34.w, r26.w
              mul r21.w, r21.w, r26.w
              dp3 r26.w, r35.xyzx, r29.xyzx
              add_sat r26.w, r35.w, r26.w
              mul r21.w, r21.w, r26.w
              dp3 r26.w, r36.xyzx, r29.xyzx
              add_sat r26.w, r36.w, r26.w
              mul r30.x, r21.w, r26.w
              ushr r29.w, r15.x, l(2)
              ubfe r30.z, l(1), l(2), r15.x
              and r30.w, r29.w, l(2)
              max r31.x, r30.x, r30.y
              mad r21.w, -r21.w, r26.w, l(1.000000)
              mul r21.w, r21.w, r30.y
              movc r17.y, r30.w, r21.w, r31.x
              movc r30.xy, r30.zzzz, r30.xyxx, r17.xyxx
              iadd r19.w, r19.w, l(1)
              mov r15.x, r29.w
            endloop 
            add_sat r15.x, -r15.w, r30.y
            mul r17.y, r27.y, r15.x
            lt r17.w, l(0.000000), r17.y
            if_nz r17.w
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r17.z, l(16), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r17.z, l(32), t15.yxwz
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r17.z, l(48), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r17.z, l(64), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r17.z, l(80), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r17.z, l(132), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r17.z, l(148), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r17.z, l(164), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xyzw, r17.z, l(180), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r40.xyzw, r17.z, l(196), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r41.xy, r17.z, l(212), t15.xyxx
              mad r25.w, r15.x, r27.y, r25.w
              mul r15.x, r28.z, r17.y
              mov r28.z, r36.z
              dp3 r17.y, r12.xyzx, r28.xyzx
              dp3 r17.z, r29.xyzx, r28.xyzx
              add r17.z, -r36.w, r17.z
              ge r17.w, r17.z, l(0.000000)
              max r17.z, r4.w, |r17.z|
              movc r17.z, r17.w, r17.z, -r17.z
              max r17.y, -r17.y, l(0.00000010)
              div r17.y, r17.z, r17.y
              min r17.y, |r17.y|, l(131072.000000)
              mov r36.z, r37.z
              dp3 r17.z, r12.xyzx, r36.xyzx
              dp3 r17.w, r29.xyzx, r36.xyzx
              add r17.w, -r37.w, r17.w
              ge r18.w, r17.w, l(0.000000)
              max r17.w, r4.w, |r17.w|
              movc r17.w, r18.w, r17.w, -r17.w
              max r17.z, -r17.z, l(0.00000010)
              div r17.z, r17.w, r17.z
              min r17.y, |r17.z|, r17.y
              mov r37.z, r38.z
              dp3 r17.z, r12.xyzx, r37.xyzx
              dp3 r17.w, r29.xyzx, r37.xyzx
              add r17.w, -r38.w, r17.w
              ge r18.w, r17.w, l(0.000000)
              max r17.w, r4.w, |r17.w|
              movc r17.w, r18.w, r17.w, -r17.w
              max r17.z, -r17.z, l(0.00000010)
              div r17.z, r17.w, r17.z
              min r17.y, |r17.z|, r17.y
              mov r38.z, r39.z
              dp3 r17.z, r12.xyzx, r38.xyzx
              dp3 r17.w, r29.xyzx, r38.xyzx
              add r17.w, -r39.w, r17.w
              ge r18.w, r17.w, l(0.000000)
              max r17.w, r4.w, |r17.w|
              movc r17.w, r18.w, r17.w, -r17.w
              max r17.z, -r17.z, l(0.00000010)
              div r17.z, r17.w, r17.z
              min r17.y, |r17.z|, r17.y
              mov r39.z, r40.x
              dp3 r17.z, r12.xyzx, r39.xyzx
              dp3 r17.w, r29.xyzx, r39.xyzx
              add r17.w, -r40.y, r17.w
              ge r18.w, r17.w, l(0.000000)
              max r17.w, r4.w, |r17.w|
              movc r17.w, r18.w, r17.w, -r17.w
              max r17.z, -r17.z, l(0.00000010)
              div r17.z, r17.w, r17.z
              min r17.y, |r17.z|, r17.y
              mov r41.zw, r40.zzzw
              dp3 r17.z, r12.zxyz, r41.xzwx
              dp3 r17.w, r29.zxyz, r41.xzwx
              add r17.w, -r41.y, r17.w
              ge r18.w, r17.w, l(0.000000)
              max r17.w, r4.w, |r17.w|
              movc r17.w, r18.w, r17.w, -r17.w
              max r17.z, -r17.z, l(0.00000010)
              div r17.z, r17.w, r17.z
              min r17.y, |r17.z|, r17.y
              mov r27.x, r33.w
              mov r27.yz, r34.zzwz
              add r27.xyz, r29.xyzx, r27.xyzx
              mad r27.xyz, r12.xyzx, r17.yyyy, r27.xyzx
              dp3 r17.z, r27.xyzx, r27.xyzx
              sqrt r17.z, r17.z
              div r17.y, r17.y, r17.z
              add r17.y, r17.y, r17.y
              sqrt r17.y, r17.y
              mad r17.y, r3.z, l(5.000000), r17.y
              add r17.y, r17.y, l(-0.844800)
              mov r26.y, r31.z
              mov r26.z, r32.x
              dp3 r36.x, r27.xyzx, r26.xyzx
              mov r28.xy, r31.xwxx
              mov r28.z, r32.w
              dp3 r36.y, r27.xyzx, r28.xyzx
              mov r32.x, r31.y
              dp3 r36.z, r27.xyzx, r32.xyzx
              ubfe r17.z, l(9), l(16), r28.w
              utof r36.w, r17.z
              sample_l_indexable(texturecubearray)(float,float,float,float) r17.yzw, r36.xyzw, t8.wxyz, s2, r17.y
              and r27.xyz, r17.yzwy, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
              ieq r27.xyz, r27.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
              or r18.w, r27.y, r27.x
              or r18.w, r27.z, r18.w
              movc r17.yzw, r18.wwww, l(0,1.000000,1.000000,0), r17.yyzw
              dp3 r27.x, r29.xyzx, r26.xyzx
              dp3 r27.y, r29.xyzx, r28.xyzx
              dp3 r27.z, r29.xyzx, r32.xyzx
              mad_sat r27.xyz, r27.xyzx, r33.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
              mov r34.z, r35.x
              mad r27.xyz, r27.xyzx, r34.xyzx, r35.yzwy
              dp3 r36.x, r1.xyzx, r26.xyzx
              dp3 r36.y, r1.xyzx, r28.xyzx
              dp3 r36.z, r1.xyzx, r32.xyzx
              lt r26.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r36.xyzx
              movc r16.z, r26.x, l(0), l(0.500000)
              add r28.xyz, r16.xyzx, r27.xyzx
              sample_l_indexable(texture3d)(float,float,float,float) r28.xyz, r28.xyzx, t17.xyzw, s4, l(0.000000)
              mul r29.xyz, r36.xyzx, r36.xyzx
              mul r29.xyz, r15.xxxx, r29.xyzx
              movc r18.z, r26.y, l(0), l(0.500000)
              add r26.xyw, r18.xyxz, r27.xyxz
              sample_l_indexable(texture3d)(float,float,float,float) r26.xyw, r26.xywx, t18.xywz, s4, l(0.000000)
              mul r26.xyw, r29.yyyy, r26.xyxw
              mad r26.xyw, r28.xyxz, r29.xxxx, r26.xyxw
              movc r19.z, r26.z, l(0), l(0.500000)
              add r27.xyz, r19.xyzx, r27.xyzx
              sample_l_indexable(texture3d)(float,float,float,float) r27.xyz, r27.xyzx, t19.xyzw, s4, l(0.000000)
              mad r26.xyz, r27.xyzx, r29.zzzz, r26.xywx
              sample_l_indexable(texturecubearray)(float,float,float,float) r27.xyz, r36.xyzw, t8.xyzw, s2, l(6.000000)
              and r28.xyz, r27.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
              ieq r28.xyz, r28.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
              or r16.z, r28.y, r28.x
              or r16.z, r28.z, r16.z
              movc r27.xyz, r16.zzzz, l(1.000000,1.000000,0,0), r27.xyzx
              mul r28.xyz, r26.xyzx, r27.xyzx
              dp3 r16.z, r28.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
              mad r14.xyz, r26.xyzx, r27.xyzx, r14.xyzx
              mul r18.z, r6.w, r16.z
              mul r17.yzw, r15.xxxx, r17.yyzw
              dp3 r15.x, r17.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
              mad r15.x, r6.w, r16.z, r15.x
              div r15.x, r18.z, r15.x
              mad r25.xyz, r17.yzwy, r15.xxxx, r25.xyzx
            endif 
          endif 
        endif 
      endloop 
      mov r24.xyzw, r25.xyzw
      mov r11.yzw, r14.xxyz
      iadd r10.w, r10.w, l(32)
    endloop 
    mov r23.xyzw, r24.zxyw
    mov r22.xyz, r11.yzwy
    mov r23.xyzw, r23.yzxw
  else 
    mov r23.x, r22.w
  endif 
  max r3.z, r23.w, l(1.000000)
  rcp r3.z, r3.z
  mov_sat r23.w, r23.w
  mul r20.xyz, r3.zzzz, r22.xyzx
  mul r21.xyz, r3.zzzz, r23.xyzx
  lt r4.w, r23.w, l(0.990000)
  if_nz r4.w
    add r4.w, -r23.w, l(1.000000)
    mul r6.w, r4.w, cb2[19].x
    add r11.yzw, v7.xxyz, -cb2[35].xxyz
    mul r13.x, r11.y, cb2[35].w
    mul r13.yz, r11.zzwz, cb2[36].xxyx
    add_sat r11.yzw, r13.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
    mul r13.xy, r11.yzyy, cb2[36].zwzz
    mul r13.z, r11.w, cb2[37].x
    add r11.yzw, r13.xxyz, cb2[37].yyzw
    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r1.xyzx
    movc r13.xyz, r13.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
    mov r13.w, l(0)
    add r14.xyz, r11.yzwy, r13.wwxw
    sample_l_indexable(texture3d)(float,float,float,float) r14.xyz, r14.xyzx, t17.xyzw, s4, l(0.000000)
    mul r15.xyz, r1.xyzx, r1.xyzx
    mul r15.xyz, r6.wwww, r15.xyzx
    add r16.xyz, r11.yzwy, r13.wwyw
    sample_l_indexable(texture3d)(float,float,float,float) r16.xyz, r16.xyzx, t18.xyzw, s4, l(0.000000)
    mul r16.xyz, r15.yyyy, r16.xyzx
    mad r14.xyz, r14.xyzx, r15.xxxx, r16.xyzx
    add r11.yzw, r11.yyzw, r13.wwwz
    sample_l_indexable(texture3d)(float,float,float,float) r11.yzw, r11.yzwy, t19.wxyz, s4, l(0.000000)
    mad r11.yzw, r11.yyzw, r15.zzzz, r14.xxyz
    mov r1.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r13.xyz, r1.xyzw, t8.xyzw, s2, l(6.000000)
    mul r11.yzw, r11.yyzw, r13.xxyz
    dp3 r1.w, r11.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
    mad r20.xyz, r22.xyzx, r3.zzzz, r11.yzwy
    mov r12.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r11.yzw, r12.xyzw, t8.wxyz, s2, r2.w
    mad r2.w, cb2[19].x, r4.w, -r1.w
    mad r1.w, r3.y, r2.w, r1.w
    mad r21.xyz, r11.yzwy, r1.wwww, r21.xyzx
  endif 
else 
  mov r21.x, r20.w
endif 
add r1.w, r0.y, r3.x
log r1.w, |r1.w|
mul r1.w, r1.w, r2.z
exp r1.w, r1.w
add r1.w, r0.y, r1.w
add_sat r1.w, r1.w, l(-1.000000)
mul r13.xyz, r0.yyyy, r20.xyzx
mad r3.yz, r3.xxyx, l(0.000000, 0.984375, 0.984375, 0.000000), l(0.000000, 0.00781250, 0.00781250, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r3.yz, r3.yzyy, t5.zxyw, s2, l(0.000000)
mul r11.yzw, r1.wwww, r21.xxyz
mul r14.xyz, r3.yyyy, r11.zwyz
mul r11.yzw, r3.zzzz, r11.yyzw
sqrt r0.y, r2.z
mad r0.y, r0.y, l(0.500000), l(0.500000)
mul r0.y, r0.y, r0.y
mul r1.w, r0.y, l(0.500000)
mad r0.y, -r0.y, l(0.500000), l(1.000000)
mad r2.w, r3.x, r0.y, r1.w
mul r0.y, r0.y, r2.w
mul r1.w, r1.w, r2.w
dp3 r2.w, r1.xyzx, cb2[17].xyzx
mov_sat r3.y, r2.w
ge r3.z, l(0.000000), r3.y
if_nz r3.z
  mov r4.w, l(0)
endif 
if_z r3.z
  mul r15.xyz, v7.yyyy, cb2[29].xyzx
  mad r15.xyz, v7.xxxx, cb2[28].xyzx, r15.xyzx
  mad r15.xyz, v7.zzzz, cb2[30].xyzx, r15.xyzx
  add r15.xyz, r15.xyzx, cb2[31].xyzx
  add r3.z, r15.z, -cb2[17].w
  mad r3.z, -r3.z, l(0.00006104), l(1.000000)
  mov_sat r6.w, r3.z
  eq r6.w, r3.z, r6.w
  if_nz r6.w
    mov r6.w, l(0)
    mov r7.w, l(0)
    loop 
      ge r8.z, r6.w, l(3.000000)
      breakc_nz r8.z
      ftou r8.z, r6.w
      add r16.xy, r15.xyxx, -cb2[r8.z + 20].xyxx
      max r8.w, |r16.y|, |r16.x|
      mul r7.w, r8.w, cb2[r8.z + 20].z
      lt r8.z, r7.w, l(1.000000)
      if_nz r8.z
        break 
      endif 
      add r6.w, r6.w, l(1.000000)
      mov r7.w, l(0)
    endloop 
  else 
    mov r6.w, l(3.000000)
    mov r7.w, l(0)
  endif 
  ge r8.z, r6.w, l(3.000000)
  if_nz r8.z
    mul r16.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
    rcp r17.xz, r16.xxxx
    mov r17.y, -r17.z
    mad r16.xyz, r15.xyxx, r17.xyzx, r16.yzyy
    add r17.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r16.xyz, r16.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r16.xyz, r17.xyzx, r16.xyzx
    mul r17.xy, r16.zyzz, cb2[32].xxxx
    round_ni r17.xy, r17.xyxx
    mul r8.w, r17.y, cb2[27].x
    mad r8.w, r8.w, cb2[32].x, r17.x
    ftou r8.w, r8.w
    iadd r8.w, r8.w, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r9.w, r8.w, l(0), t23.xxxx
    and r10.w, r9.w, l(0x40000000)
    ishl r12.w, r9.w, l(2)
    if_z r10.w
      and r10.w, r9.w, l(0x01ffffff)
      iadd r17.x, r8.w, r10.w
      ushr r8.w, r9.w, l(25)
      utof r8.w, r8.w
      mul r16.xyz, r8.wwww, r16.xyzx
      frc r16.xyz, r16.xyzx
      mul r16.xyz, r16.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
      ftou r16.xyz, r16.xyzx
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.z, r17.x, l(0), t23.xxxx
      ushr r18.xy, r16.zyzz, l(6, 6, 0, 0)
      and r8.w, r17.z, l(0xc0000000)
      iadd r9.w, r17.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r9.w, r9.w, l(0), t23.xxxx
      movc r9.w, r18.y, r17.z, r9.w
      ushr r10.w, r9.w, l(13)
      movc r9.w, r18.x, r10.w, r9.w
      and r9.w, r9.w, l(8191)
      iadd r18.x, r9.w, r17.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.x, l(0), t23.xxxx
      mov r17.y, l(0)
      mov r18.y, l(1)
      movc r18.xyz, r8.wwww, r17.xyzx, r18.xyzx
      movc r19.yz, r8.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r20.xy, r16.zyzz, r19.yyyy
      and r20.xy, r20.xyxx, l(1, 1, 0, 0)
      and r9.w, r18.z, l(0xc0000000)
      iadd r10.w, r18.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r10.w, r10.w, l(0), t23.xxxx
      movc r10.w, r20.y, r18.z, r10.w
      ushr r15.w, r10.w, l(13)
      movc r10.w, r20.x, r15.w, r10.w
      and r10.w, r10.w, l(8191)
      iadd r19.x, r10.w, r18.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.w, r19.x, l(0), t23.xxxx
      movc r18.xyz, r9.wwww, r18.xyzx, r19.xzwx
      movc r17.xyz, r8.wwww, r17.xyzx, r18.xyzx
      and r8.w, r17.z, l(0xc0000000)
      if_z r8.w
        iadd r8.w, -r17.y, l(6)
        ushr r18.xy, r16.zyzz, r8.wwww
        or r8.w, r17.z, l(0x40000000)
        bfi r9.w, l(1), l(1), r18.y, l(0)
        bfi r9.w, l(1), l(0), r18.x, r9.w
        imul null, r9.w, r9.w, l(10)
        ushr r8.w, r8.w, r9.w
        and r8.w, r8.w, l(1023)
        iadd r18.x, r8.w, r17.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.w, r18.x, l(0), t23.xxxx
        iadd r18.yz, r17.yyyy, l(0, 1, 2, 0)
        iadd r8.w, -r18.y, l(6)
        ushr r17.yw, r16.zzzy, r8.wwww
        and r8.w, r18.w, l(0xc0000000)
        or r9.w, r18.w, l(0x40000000)
        bfi r10.w, l(1), l(1), r17.w, l(0)
        bfi r10.w, l(1), l(0), r17.y, r10.w
        imul null, r10.w, r10.w, l(10)
        ushr r9.w, r9.w, r10.w
        and r9.w, r9.w, l(1023)
        iadd r19.x, r9.w, r18.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.z, r19.x, l(0), t23.xxxx
        mov r19.y, r18.z
        movc r19.xyz, r8.wwww, r18.xywx, r19.xyzx
        iadd r9.w, -r19.y, l(6)
        ushr r17.yw, r16.zzzy, r9.wwww
        and r9.w, r19.z, l(0xc0000000)
        or r10.w, r19.z, l(0x40000000)
        bfi r15.w, l(1), l(1), r17.w, l(0)
        bfi r15.w, l(1), l(0), r17.y, r15.w
        imul null, r15.w, r15.w, l(10)
        ushr r10.w, r10.w, r15.w
        and r10.w, r10.w, l(1023)
        iadd r20.x, r10.w, r19.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.y, r20.x, l(0), t23.xxxx
        movc r17.yw, r9.wwww, r19.xxxz, r20.xxxy
        movc r17.xz, r8.wwww, r18.xxwx, r17.yywy
      endif 
      and r8.w, r17.z, l(0xc0000000)
      if_z r8.w
        ubfe r9.w, l(14), l(15), r17.z
        utof r9.w, r9.w
        mul r9.w, r9.w, cb2[27].w
        mul r9.w, r9.w, l(0.00006104)
        and r17.yw, r17.zzzz, l(0, 0x00007fff, 0, 0x20000000)
        utof r10.w, r17.y
        mul r10.w, r10.w, cb2[27].w
        mul r10.w, r10.w, l(0.00003052)
        and r15.w, r16.y, l(3)
        iadd r15.w, r15.w, r17.x
        iadd r15.w, r15.w, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.w, r15.w, l(0), t23.xxxx
        bfi r16.xyw, l(2, 2, 0, 1), l(3, 1, 0, 4), r16.xyxz, l(0, 0, 0, 0)
        ushr r15.w, r15.w, r16.x
        and r15.w, r15.w, l(255)
        utof r15.w, r15.w
        mul r15.w, r10.w, r15.w
        mad r15.w, r15.w, l(0.00392157), r9.w
        iadd r16.x, r16.y, l(1)
        ubfe r16.y, l(1), l(1), r16.z
        iadd r16.x, r16.y, r16.x
        iadd r16.x, r16.x, r17.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.x, r16.x, l(0), t23.xxxx
        ushr r16.x, r16.x, r16.w
        and r16.x, r16.x, l(0x0000ffff)
        utof r16.x, r16.x
        mul r10.w, r10.w, r16.x
        mad r9.w, r10.w, l(0.00001526), r9.w
        movc r12.w, r17.w, r15.w, r9.w
      else 
        and r9.w, r17.z, l(0x80000000)
        iadd r10.w, r17.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r10.w, r10.w, l(0), t23.xxxx
        movc r9.w, r9.w, r10.w, l(0)
        ishl r10.w, r17.z, l(2)
        ushr r15.w, r9.w, l(16)
        f16tof32 r15.w, r15.w
        and r9.w, r9.w, l(0x0000ffff)
        f16tof32 r9.w, r9.w
        mad r10.w, r15.x, r15.w, r10.w
        mad r9.w, r15.y, r9.w, r10.w
        movc r12.w, r8.w, r9.w, r12.w
      endif 
    endif 
    mad r8.w, -cb2[27].z, l(2.000000), r15.z
    lt r8.w, r12.w, r8.w
    movc r4.w, r8.w, l(0), l(1.000000)
  endif 
  if_z r8.z
    if_z cb2[58].y
      ftou r8.z, r6.w
      add r15.zw, r15.xxxy, -cb2[r8.z + 20].xxxy
      mul r8.zw, r15.zzzw, cb2[r8.z + 20].zzzz
      mad r16.xy, r8.zwzz, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r8.z, cb2[26].y
      add r16.z, r6.w, r8.z
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r8.z, r16.xyzx, t13.xxxx, s13, r3.z
      sample_l_indexable(texture2darray)(float,float,float,float) r8.w, r16.xyzx, t31.yzwx, s0, l(0.000000)
      add r8.z, r8.w, r8.z
      add_sat r8.z, r8.z, l(-1.000000)
      mul r8.w, r8.z, r8.z
      mul r4.w, r8.z, r8.w
    endif 
    if_nz cb2[58].y
      mov r16.x, -r8.x
      ftou r8.z, r6.w
      add r6.w, r6.w, l(1.000000)
      min r6.w, r6.w, l(2.000000)
      ftou r6.w, r6.w
      add r7.w, -r7.w, l(1.000000)
      mul r7.w, r7.w, l(28.000000)
      ftou r7.w, r7.w
      add r15.zw, r15.xxxy, -cb2[r8.z + 20].xxxy
      mul r15.zw, r15.zzzw, cb2[r8.z + 20].zzzz
      mad r15.zw, r15.zzzw, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
      add r15.xy, r15.xyxx, -cb2[r6.w + 20].xyxx
      mul r15.xy, r15.xyxx, cb2[r6.w + 20].zzzz
      mad r15.xy, r15.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      mov r16.y, r10.x
      mov r16.z, r8.x
      mov r8.w, l(0)
      mov r9.w, l(0)
      loop 
        uge r10.w, r9.w, l(8)
        breakc_nz r10.w
        ult r10.w, r7.w, r9.w
        movc r17.xy, r10.wwww, r15.xyxx, r15.zwzz
        movc r12.w, r10.w, cb2[r6.w + 20].w, cb2[r8.z + 20].w
        movc r10.w, r10.w, r6.w, r8.z
        dp2 r18.x, icb[r9.w + 0].yxyy, r16.xyxx
        dp2 r18.y, icb[r9.w + 0].yxyy, r16.yzyy
        mad r17.xy, r18.xyxx, r12.wwww, r17.xyxx
        iadd r10.w, r10.w, cb2[26].y
        utof r17.z, r10.w
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.w, r17.xyzx, t13.xxxx, s13, r3.z
        sample_l_indexable(texture2darray)(float,float,float,float) r12.w, r17.xyzx, t31.yzwx, s0, l(0.000000)
        add r10.w, r10.w, r12.w
        add_sat r10.w, r10.w, l(-1.000000)
        mad r8.w, r10.w, l(0.125000), r8.w
        iadd r9.w, r9.w, l(1)
      endloop 
      mul r3.z, r8.w, r8.w
      mul r4.w, r8.w, r3.z
    endif 
  endif 
endif 
lt r3.z, l(0.000000), r3.y
if_nz r3.z
  lt r3.z, l(0.000000), r4.w
  if_nz r3.z
    mul r3.z, r2.y, cb2[18].w
    mul r3.z, r3.y, r3.z
    if_nz cb2[23].x
      mov r5.w, l(1.000000)
      dp4 r6.w, cb2[24].xyzw, r5.xyzw
      dp4 r5.x, cb2[25].xyzw, r5.xyzw
      frc r15.x, r6.w
      frc r15.y, r5.x
      iadd r5.x, l(-1), cb2[23].x
      utof r15.z, r5.x
      sample_l_indexable(texture2darray)(float,float,float,float) r5.xyz, r15.xyzx, t20.xyzw, s2, l(0.000000)
      add r5.xyz, r5.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
      mad r5.xyz, cb2[23].yyyy, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      mul r5.xyz, r5.xyzx, cb2[18].xyzx
    else 
      mov r5.xyz, cb2[18].xyzx
    endif 
    ushr r5.w, cb2[53].x, l(16)
    ult r6.w, l(0), r5.w
    and r6.w, r0.w, r6.w
    if_nz r6.w
      iadd r5.w, r5.w, cb2[0].x
      iadd r5.w, r5.w, l(-1)
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r6.w, r5.w, l(52), t12.xxxx
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r5.w, l(68), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r5.w, l(84), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r5.w, l(132), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r5.w, l(148), t12.xyzw
      mad r7.w, |r2.w|, l(-0.200000), l(0.400000)
      mad r19.xyz, r1.xyzx, r7.wwww, v7.xyzx
      mov r19.w, l(1.000000)
      dp4 r15.x, r15.xyzw, r19.xyzw
      dp4 r15.y, r16.xyzw, r19.xyzw
      mad r8.zw, r15.xxxy, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
      add r8.zw, r18.zzzw, r8.zzzw
      mul r8.zw, r18.xxxy, r8.zzzw
      div r15.xy, r6.wwww, r17.xzxx
      add r15.zw, -r15.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
      ge r15.zw, r8.zzzw, r15.zzzw
      ge r15.xy, r15.xyxx, r8.zwzz
      or r15.xy, r15.xyxx, r15.zwzz
      or r7.w, r15.y, r15.x
      if_z r7.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r7.w, r5.w, l(28), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r5.w, l(100), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xy, r5.w, l(164), t12.xyxx
        dp4 r5.w, r15.xyzw, r19.xyzw
        mov_sat r8.zw, r8.zzzw
        mad r15.xy, r8.zwzz, r17.xzxx, r17.ywyy
        add r5.w, r16.x, r5.w
        div r5.w, r5.w, r16.y
        max r5.w, r5.w, l(0.00006104)
        and r7.w, r7.w, l(0x0000ffff)
        if_nz cb2[58].y
          mov r16.x, -r8.x
          utof r17.z, r7.w
          mov r16.y, r10.x
          mov r16.z, r8.x
          mov r8.zw, l(0,0,0,0)
          loop 
            ige r9.w, r8.w, l(8)
            breakc_nz r9.w
            dp2 r18.x, icb[r8.w + 0].yxyy, r16.xyxx
            dp2 r18.y, icb[r8.w + 0].yxyy, r16.yzyy
            mad r17.xy, r18.xyxx, r6.wwww, r15.xyxx
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r9.w, r17.xyzx, t9.xxxx, s13, r5.w
            mad r8.z, r9.w, l(0.125000), r8.z
            iadd r8.w, r8.w, l(1)
          endloop 
        else 
          utof r15.z, r7.w
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r8.z, r15.xyzx, t9.xxxx, s13, r5.w
        endif 
        mul r5.w, r8.z, r8.z
        mul r5.w, r8.z, r5.w
      else 
        mov r5.w, l(1.000000)
      endif 
      mul r4.w, r4.w, r5.w
    else 
      and r5.w, cb2[53].x, l(0x0000ffff)
      ult r6.w, l(0), r5.w
      not r7.w, r0.w
      and r6.w, r6.w, r7.w
      if_nz r6.w
        iadd r5.w, r5.w, cb2[0].x
        iadd r5.w, r5.w, l(-1)
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r6.w, r5.w, l(52), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r5.w, l(68), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r5.w, l(84), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r5.w, l(132), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r5.w, l(148), t12.xyzw
        mad r7.w, |r2.w|, l(-0.200000), l(0.400000)
        mad r19.xyz, r1.xyzx, r7.wwww, v7.xyzx
        mov r19.w, l(1.000000)
        dp4 r15.x, r15.xyzw, r19.xyzw
        dp4 r15.y, r16.xyzw, r19.xyzw
        mad r8.zw, r15.xxxy, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
        add r8.zw, r18.zzzw, r8.zzzw
        mul r8.zw, r18.xxxy, r8.zzzw
        div r15.xy, r6.wwww, r17.xzxx
        add r15.zw, -r15.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
        ge r15.zw, r8.zzzw, r15.zzzw
        ge r15.xy, r15.xyxx, r8.zwzz
        or r15.xy, r15.xyxx, r15.zwzz
        or r7.w, r15.y, r15.x
        if_z r7.w
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r7.w, r5.w, l(28), t12.xxxx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r5.w, l(100), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xy, r5.w, l(164), t12.xyxx
          dp4 r5.w, r15.xyzw, r19.xyzw
          mov_sat r8.zw, r8.zzzw
          mad r15.xy, r8.zwzz, r17.xzxx, r17.ywyy
          add r5.w, r16.x, r5.w
          div r5.w, r5.w, r16.y
          max r5.w, r5.w, l(0.00006104)
          and r7.w, r7.w, l(0x0000ffff)
          if_nz cb2[58].y
            mov r16.x, -r8.x
            utof r17.z, r7.w
            mov r16.y, r10.x
            mov r16.z, r8.x
            mov r8.zw, l(0,0,0,0)
            loop 
              ige r9.w, r8.w, l(8)
              breakc_nz r9.w
              dp2 r18.x, icb[r8.w + 0].yxyy, r16.xyxx
              dp2 r18.y, icb[r8.w + 0].yxyy, r16.yzyy
              mad r17.xy, r18.xyxx, r6.wwww, r15.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r9.w, r17.xyzx, t9.xxxx, s13, r5.w
              mad r8.z, r9.w, l(0.125000), r8.z
              iadd r8.w, r8.w, l(1)
            endloop 
          else 
            utof r15.z, r7.w
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r8.z, r15.xyzx, t9.xxxx, s13, r5.w
          endif 
          mul r5.w, r8.z, r8.z
          mul r5.w, r8.z, r5.w
        else 
          mov r5.w, l(1.000000)
        endif 
        mul r4.w, r4.w, r5.w
      endif 
    endif 
    mad r5.w, -r3.x, l(0.500000), l(1.000000)
    mad r5.w, -r3.y, r5.w, l(1.000000)
    mul r5.w, r5.w, r5.w
    mad r5.w, -r5.w, l(0.620000), l(0.620000)
    add r5.w, -r3.y, r5.w
    mad r5.w, r2.z, r5.w, r3.y
    mul r5.w, r4.w, r5.w
    lt r2.w, l(0.000000), r2.w
    mad r15.xyz, r5.wwww, r5.xyzx, r13.xyzx
    mad r16.xyz, -v7.xyzx, r0.xxxx, cb2[17].xyzx
    dp3 r0.x, r16.xyzx, r16.xyzx
    rsq r0.x, r0.x
    mul r16.xyz, r0.xxxx, r16.xyzx
    dp3 r0.x, r16.xyzx, r7.xyzx
    dp3 r5.w, r1.xyzx, r16.xyzx
    mad r6.w, |r5.w|, r2.y, -|r5.w|
    mad r5.w, |r5.w|, r6.w, l(1.000000)
    mad r3.y, r3.y, r0.y, r1.w
    mul r5.w, r5.w, r5.w
    mul r3.y, r3.y, r5.w
    rcp r3.y, r3.y
    mul r3.y, r3.z, r3.y
    mul r3.y, r3.y, r4.w
    mul r3.y, r3.y, l(0.250000)
    mad r16.xyz, r3.yyyy, r5.xyzx, r11.yzwy
    add_sat r0.x, -r0.x, l(1.000000)
    log r0.x, r0.x
    mul r0.x, r0.x, l(3.400000)
    exp r0.x, r0.x
    mul r0.x, r0.x, r3.y
    mad r5.xyz, r0.xxxx, r5.yzxy, r14.xyzx
    mov r15.w, r5.z
    mov r13.w, r14.z
    movc r13.xyzw, r2.wwww, r15.xyzw, r13.xyzw
    mov r5.zw, r16.xxxy
    mov r14.zw, r11.yyyz
    movc r5.xyzw, r2.wwww, r5.xyzw, r14.xyzw
    movc r11.w, r2.w, r16.z, r11.w
    mov r14.z, r13.w
    mov r14.xy, r5.xyxx
    mov r11.yz, r5.zzwz
  endif 
endif 
mov r5.x, -r8.x
not r0.x, r0.w
mad r2.w, -r3.x, l(0.500000), l(1.000000)
mov r3.xy, l(0,0,0,0)
mov r15.w, l(0)
mov r16.xyz, v7.xyzx
mov r16.w, l(1.000000)
mov r17.w, l(1.000000)
mov r5.z, r8.x
mov r18.w, l(1.000000)
mov r19.z, l(1.000000)
mov r20.w, l(1.000000)
mov r5.yw, r10.xxxx
mov r8.y, r5.w
mov r21.w, l(1.000000)
mov r10.y, r5.x
mov r10.z, r8.x
mov r22.w, l(1.000000)
mov r23.x, r10.x
mov r23.y, r5.x
mov r23.z, r8.x
mov r24.x, r10.x
mov r24.y, r5.x
mov r24.z, r8.x
mov r25.x, r10.x
mov r25.y, r5.x
mov r25.z, r8.x
mov r26.xyz, r13.xyzx
mov r27.xyz, r14.zxyz
mov r28.xyz, r11.yzwy
mov r4.w, cb2[58].y
mov r6.w, l(0)
loop 
  uge r7.w, r6.w, cb2[0].x
  breakc_nz r7.w
  ushr r3.z, r6.w, l(5)
  iadd r15.xyz, r3.xyzx, r6.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r3.z, r15.xyzw, t6.yzxw
  mov r15.xyz, r26.xyzx
  mov r29.xyz, r27.xyzx
  mov r30.xyz, r28.xyzx
  mov r7.w, r4.w
  mov r8.z, r3.z
  loop 
    breakc_z r8.z
    firstbit_lo r8.w, r8.z
    ishl r9.w, l(1), r8.w
    and r10.w, r8.z, r9.w
    if_nz r10.w
      xor r8.z, r8.z, r9.w
      iadd r8.w, r6.w, r8.w
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r31.xyzw, r8.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r32.xy, r8.w, l(16), t11.xyxx
      add r31.xyz, r31.xyzx, -v7.xyzx
      mov r32.z, r31.w
      lt r31.xyz, |r31.xyzx|, r32.zxyz
      and r9.w, r31.y, r31.x
      and r9.w, r31.z, r9.w
      if_nz r9.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r8.w, l(0), t12.wxyz
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r8.w, l(16), t12.zxyw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r8.w, l(32), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r8.w, l(48), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r8.w, l(64), t12.yzwx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r8.w, l(80), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r8.w, l(96), t12.yzwx
        ubfe r9.w, l(3), l(24), r32.w
        switch r9.w
          case l(4)
          lt r9.w, l(0.000000), r37.x
          mov r38.xy, r36.zwzz
          mov r38.z, r37.w
          mad r39.xyz, -r38.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r31.yzwy
          add r40.xyz, r39.xyzx, -v7.xyzx
          dp3 r10.w, r38.xyzx, r40.xyzx
          div_sat r12.w, -r10.w, r37.x
          mad r41.xyz, r12.wwww, r38.xyzx, r39.xyzx
          movc r41.xyz, r9.wwww, r41.xyzx, r31.yzwy
          add r41.xyz, r41.xyzx, -v7.xyzx
          dp3 r13.w, r41.xyzx, r41.xyzx
          rsq r14.w, r13.w
          mul r41.xyz, r14.wwww, r41.xyzx
          dp3 r14.w, r1.xyzx, r41.xyzx
          mov_sat r19.w, r14.w
          lt r23.w, l(0.000000), r19.w
          if_nz r23.w
            sqrt r23.w, r13.w
            mul r24.w, r34.x, r34.x
            div r13.w, r24.w, r13.w
            min r13.w, r13.w, l(1.000000)
            mad_sat r41.xy, r23.wwww, r33.xzxx, r33.ywyy
            mul r41.zw, r41.xxxy, r41.xxxy
            mad r41.xy, r41.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
            mul r41.xy, r41.xyxx, r41.zwzz
            mul r13.w, r13.w, r41.x
            mul r13.w, r41.y, r13.w
            lt r23.w, l(0.000000), r13.w
            if_nz r23.w
              ubfe r23.w, l(3), l(27), r32.w
              ine r23.w, r23.w, l(1)
              if_nz r23.w
                mad r23.w, |r14.w|, l(-0.200000), l(0.400000)
                mad r41.xyz, r1.xyzx, r23.wwww, v7.xyzx
                add r41.xyz, -r35.xyzx, r41.xyzx
                max r23.w, |r41.z|, |r41.y|
                max r23.w, r23.w, |r41.x|
                div r23.w, r36.x, r23.w
                add r23.w, r36.y, r23.w
                dp3 r24.w, r41.xyzx, r41.xyzx
                rsq r24.w, r24.w
                max r23.w, r23.w, l(0.00006104)
                and r25.w, r32.w, l(0x0000ffff)
                utof r42.w, r25.w
                mov r25.w, l(0)
                mov r26.w, l(0)
                loop 
                  ige r27.w, r26.w, l(8)
                  breakc_nz r27.w
                  dp2 r43.y, icb[r26.w + 0].yxyy, r5.xyxx
                  dp2 r43.z, icb[r26.w + 0].yxyy, r5.yzyy
                  mul r43.yz, r34.yyyy, r43.yyzy
                  mul r43.x, r11.x, r43.y
                  mul r43.w, r2.x, r43.y
                  mad r42.xyz, r41.xyzx, r24.wwww, r43.xzwx
                  sample_c_lz_indexable(texturecubearray)(float,float,float,float) r27.w, r42.xyzw, t10.xxxx, s13, r23.w
                  mad r25.w, r27.w, l(0.125000), r25.w
                  iadd r26.w, r26.w, l(1)
                endloop 
              else 
                mov r25.w, l(1.000000)
              endif 
              mul r13.w, r13.w, r25.w
              lt r23.w, l(0.000000), r13.w
              if_nz r23.w
                mul r23.w, r2.y, r32.x
                mul r23.w, r23.w, l(0.250000)
                dp3 r24.w, r38.xyzx, r12.xyzx
                dp3 r26.w, r12.xyzx, r40.xyzx
                mad r27.w, -r24.w, r24.w, r37.x
                mad r10.w, r24.w, r26.w, -r10.w
                div_sat r10.w, r10.w, r27.w
                div r24.w, r27.w, r37.x
                mul r24.w, r24.w, l(10.000000)
                min r24.w, r24.w, l(1.000000)
                add r10.w, -r12.w, r10.w
                mad r10.w, r24.w, r10.w, r12.w
                mad r38.xyz, r10.wwww, r38.xyzx, r39.xyzx
                movc r38.xyz, r9.wwww, r38.xyzx, r31.yzwy
                add r38.xyz, r38.xyzx, -v7.xyzx
                dp3 r9.w, r38.xyzx, r38.xyzx
                rsq r9.w, r9.w
                mul r39.xyz, r9.wwww, r38.xyzx
                ubfe r10.w, l(4), l(16), r32.w
                ult r12.w, l(0), r10.w
                and r12.w, r0.w, r12.w
                if_nz r12.w
                  iadd r10.w, r10.w, cb2[0].x
                  iadd r10.w, r10.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.w, r10.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r10.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r10.w, l(116), t12.xyzw
                  mad r24.w, |r14.w|, l(-0.200000), l(0.400000)
                  mad r17.xyz, r1.xyzx, r24.wwww, v7.xyzx
                  dp4 r24.w, r40.xyzw, r17.xyzw
                  dp4 r26.w, r41.xyzw, r17.xyzw
                  lt r27.w, r26.w, r24.w
                  if_z r27.w
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r10.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r10.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r10.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r10.w, l(148), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xy, r10.w, l(164), t12.xyxx
                    dp4 r40.x, r40.xyzw, r17.xyzw
                    dp4 r40.y, r41.xyzw, r17.xyzw
                    div r17.xy, r40.xyxx, r26.wwww
                    mad r17.xy, r17.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r17.xy, r43.zwzz, r17.xyxx
                    mul r17.xy, r43.xyxx, r17.xyxx
                    div r40.xy, r12.wwww, r42.xzxx
                    add r40.zw, -r40.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                    ge r40.zw, r17.xxxy, r40.zzzw
                    ge r40.xy, r40.xyxx, r17.xyxx
                    or r40.xy, r40.xyxx, r40.zwzz
                    or r17.z, r40.y, r40.x
                    mov_sat r17.xy, r17.xyxx
                    mad r40.xy, r17.xyxx, r42.xzxx, r42.ywyy
                    mul r17.x, r26.w, r44.y
                    mad r17.y, r44.x, r26.w, r24.w
                    div r17.x, r17.y, r17.x
                  else 
                    mov r17.z, l(-1)
                  endif 
                  or r17.y, r27.w, r17.z
                  if_z r17.y
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r10.w, r10.w, l(28), t12.xxxx
                    max r17.x, r17.x, l(0.00006104)
                    and r10.w, r10.w, l(0x0000ffff)
                    if_nz r7.w
                      utof r41.z, r10.w
                      mov r17.yz, l(0,0,0,0)
                      loop 
                        ige r24.w, r17.z, l(8)
                        breakc_nz r24.w
                        dp2 r42.x, icb[r17.z + 0].yxyy, r5.xwxx
                        dp2 r42.y, icb[r17.z + 0].xyxx, r8.xyxx
                        mad r41.xy, r42.xyxx, r12.wwww, r40.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.w, r41.xyzx, t9.xxxx, s13, r17.x
                        mad r17.y, r24.w, l(0.125000), r17.y
                        iadd r17.z, r17.z, l(1)
                      endloop 
                    else 
                      utof r40.z, r10.w
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r17.y, r40.xyzx, t9.xxxx, s13, r17.x
                    endif 
                    mul r10.w, r17.y, r17.y
                    mul r10.w, r17.y, r10.w
                  else 
                    mov r10.w, l(1.000000)
                  endif 
                  mul r13.w, r10.w, r13.w
                else 
                  ubfe r10.w, l(4), l(20), r32.w
                  ult r12.w, l(0), r10.w
                  and r12.w, r0.x, r12.w
                  if_nz r12.w
                    iadd r10.w, r10.w, cb2[0].x
                    iadd r10.w, r10.w, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.w, r10.w, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r10.w, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r10.w, l(116), t12.xyzw
                    mad r17.x, |r14.w|, l(-0.200000), l(0.400000)
                    mad r18.xyz, r1.xyzx, r17.xxxx, v7.xyzx
                    dp4 r17.x, r40.xyzw, r18.xyzw
                    dp4 r17.z, r41.xyzw, r18.xyzw
                    lt r24.w, r17.z, r17.x
                    if_z r24.w
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r10.w, l(68), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r10.w, l(84), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r10.w, l(132), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r10.w, l(148), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xy, r10.w, l(164), t12.xyxx
                      dp4 r40.x, r40.xyzw, r18.xyzw
                      dp4 r40.y, r41.xyzw, r18.xyzw
                      div r18.xy, r40.xyxx, r17.zzzz
                      mad r18.xy, r18.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                      add r18.xy, r43.zwzz, r18.xyxx
                      mul r18.xy, r43.xyxx, r18.xyxx
                      div r40.xy, r12.wwww, r42.xzxx
                      add r40.zw, -r40.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                      ge r40.zw, r18.xxxy, r40.zzzw
                      ge r40.xy, r40.xyxx, r18.xyxx
                      or r40.xy, r40.xyxx, r40.zwzz
                      or r18.z, r40.y, r40.x
                      mov_sat r18.xy, r18.xyxx
                      mad r40.xy, r18.xyxx, r42.xzxx, r42.ywyy
                      mul r18.x, r17.z, r44.y
                      mad r17.x, r44.x, r17.z, r17.x
                      div r17.x, r17.x, r18.x
                    else 
                      mov r18.z, l(-1)
                    endif 
                    or r17.z, r24.w, r18.z
                    if_z r17.z
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r10.w, r10.w, l(28), t12.xxxx
                      max r17.x, r17.x, l(0.00006104)
                      and r10.w, r10.w, l(0x0000ffff)
                      if_nz r7.w
                        utof r18.z, r10.w
                        mov r17.z, l(0)
                        mov r24.w, l(0)
                        loop 
                          ige r26.w, r24.w, l(8)
                          breakc_nz r26.w
                          dp2 r41.x, icb[r24.w + 0].xyxx, r10.xyxx
                          dp2 r41.y, icb[r24.w + 0].yxyy, r10.xzxx
                          mad r18.xy, r41.xyxx, r12.wwww, r40.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r18.x, r18.xyzx, t9.xxxx, s13, r17.x
                          mad r17.z, r18.x, l(0.125000), r17.z
                          iadd r24.w, r24.w, l(1)
                        endloop 
                      else 
                        utof r40.z, r10.w
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r17.z, r40.xyzx, t9.xxxx, s13, r17.x
                      endif 
                      mul r10.w, r17.z, r17.z
                      mul r10.w, r17.z, r10.w
                    else 
                      mov r10.w, l(1.000000)
                    endif 
                    mul r13.w, r10.w, r13.w
                  endif 
                endif 
                mad r10.w, -r19.w, r2.w, l(1.000000)
                mul r10.w, r10.w, r10.w
                mad r10.w, -r10.w, l(0.620000), l(0.620000)
                add r10.w, -r19.w, r10.w
                mad r10.w, r2.z, r10.w, r19.w
                mul r10.w, r13.w, r10.w
                mov r32.x, r31.x
                lt r12.w, l(0.000000), r14.w
                mad r18.xyz, r10.wwww, r32.xyzx, r15.xyzx
                dp3_sat r10.w, r1.xyzx, r39.xyzx
                mad r38.xyz, r38.xyzx, r9.wwww, r7.xyzx
                dp3 r9.w, r38.xyzx, r38.xyzx
                rsq r9.w, r9.w
                mul r38.xyz, r9.wwww, r38.xyzx
                dp3 r9.w, r38.xyzx, r7.xyzx
                dp3 r14.w, r1.xyzx, r38.xyzx
                mad r17.x, |r14.w|, r2.y, -|r14.w|
                mad r14.w, |r14.w|, r17.x, l(1.000000)
                mad r17.x, r10.w, r0.y, r1.w
                mul r14.w, r14.w, r14.w
                mul r14.w, r17.x, r14.w
                rcp r14.w, r14.w
                mul r10.w, r23.w, r10.w
                mul r10.w, r10.w, r14.w
                mul r10.w, r13.w, r10.w
                mad r38.xyz, r10.wwww, r32.xyzx, r30.xyzx
                add_sat r9.w, -r9.w, l(1.000000)
                log r9.w, r9.w
                mul r9.w, r9.w, l(3.400000)
                exp r9.w, r9.w
                mul r9.w, r9.w, r10.w
                mad r39.xyz, r9.wwww, r32.xyzx, r29.xyzx
                movc r15.xyz, r12.wwww, r18.xyzx, r15.xyzx
                movc r29.xyz, r12.wwww, r39.xyzx, r29.xyzx
                movc r30.xyz, r12.wwww, r38.xyzx, r30.xyzx
              endif 
            endif 
          endif 
          break 
          case l(2)
          mov r18.xy, r34.zwzz
          mov r18.z, r35.w
          add r18.xyz, r18.xyzx, -v7.xyzx
          dp3 r9.w, r18.xyzx, r18.xyzx
          rsq r9.w, r9.w
          mul r38.xyz, r9.wwww, r18.xyzx
          dp3 r10.w, r1.xyzx, r38.xyzx
          mov_sat r12.w, r10.w
          lt r13.w, l(0.000000), r12.w
          if_nz r13.w
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r8.w, l(112), t12.yzwx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r8.w, l(128), t12.zxyw
            mov r40.xyz, r38.xyzx
            mov r40.w, r39.y
            dp4 r13.w, r40.xyzw, r16.xyzw
            lt r14.w, r13.w, l(1.000000)
            if_nz r14.w
              mov r41.xyz, l(1.000000,1.000000,1.000000,0)
              mov r14.w, l(0)
            else 
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r8.w, l(172), t12.yzwx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r8.w, l(188), t12.wxyz
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r8.w, l(204), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.x, r8.w, l(236), t12.xxxx
              add r45.xyz, r31.yzwy, -v7.xyzx
              mul r19.w, r34.x, r34.x
              dp3 r23.w, r45.xyzx, r45.xyzx
              div r19.w, r19.w, r23.w
              min r19.w, r19.w, l(1.000000)
              mad_sat r33.xy, r13.wwww, r33.xzxx, r33.ywyy
              mul r33.zw, r33.xxxy, r33.xxxy
              mad r33.xy, r33.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
              mul r33.xy, r33.xyxx, r33.zwzz
              mul r19.w, r19.w, r33.x
              mul r19.w, r33.y, r19.w
              mov r35.w, r36.x
              dp4 r33.x, r35.xyzw, r16.xyzw
              mov r45.xyz, r36.yzwy
              mov r45.w, r37.w
              dp4 r33.y, r45.xyzw, r16.xyzw
              div r19.xy, r33.xyxx, r13.wwww
              lt r13.w, r42.w, l(0.00048828)
              if_nz r13.w
                mov r43.y, r44.x
                mad_sat r33.xy, |r19.xyxx|, r43.zwzz, r43.xyxx
                mul r33.zw, r33.xxxy, r33.xxxy
                mad r33.xy, r33.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
                mul r33.xy, r33.xyxx, r33.zwzz
                mul r13.w, r33.y, r33.x
              else 
                mov r42.w, r43.y
                mul_sat r33.xyzw, |r19.yyxx|, r42.xyzw
                log r33.xyzw, r33.xyzw
                mul r33.xyzw, r33.xyzw, r43.xxxx
                exp r33.xyzw, r33.xyzw
                add r33.xy, r33.zwzz, r33.xyxx
                log r33.xy, r33.xyxx
                mul r33.xy, r33.xyxx, r44.xxxx
                exp r33.xy, r33.xyxx
                mul r23.w, r33.x, r43.z
                mad r24.w, r43.w, r33.y, l(-1.000000)
                mad r23.w, r43.w, r33.y, -r23.w
                div_sat r23.w, r24.w, r23.w
                mul r24.w, r23.w, r23.w
                mad r23.w, r23.w, l(-2.000000), l(3.000000)
                mul r13.w, r23.w, r24.w
              endif 
              mul r14.w, r13.w, r19.w
              and r13.w, r17.x, l(255)
              if_nz r13.w
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyz, r8.w, l(220), t12.xyzx
                dp3 r17.x, r44.yzwy, r19.xyzx
                dp3 r19.x, r33.xyzx, r19.xyzx
                frc r33.x, r17.x
                frc r33.y, r19.x
                iadd r13.w, r13.w, l(-1)
                utof r33.z, r13.w
                sample_l_indexable(texture2darray)(float,float,float,float) r41.xyz, r33.xyzx, t20.xyzw, s2, l(0.000000)
              else 
                mov r41.xyz, l(1.000000,1.000000,1.000000,0)
              endif 
            endif 
            mov r31.yz, r32.yyzy
            mul r19.xyw, r41.xyxz, r31.xyxz
            lt r13.w, l(0.000000), r14.w
            if_nz r13.w
              ubfe r13.w, l(3), l(27), r32.w
              ine r13.w, r13.w, l(1)
              if_nz r13.w
                mad r13.w, |r10.w|, l(-0.200000), l(0.400000)
                mad r20.xyz, r1.xyzx, r13.wwww, v7.xyzx
                mov r38.xyz, r37.xyzx
                dp4 r13.w, r38.xyzw, r20.xyzw
                dp4 r17.x, r40.xyzw, r20.xyzw
                ge r23.w, r17.x, r13.w
                if_nz r23.w
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.y, r8.w, l(144), t12.xxxx
                  mov r35.w, r36.x
                  dp4 r31.x, r35.xyzw, r20.xyzw
                  mov r37.xyz, r36.yzwy
                  dp4 r31.y, r37.xyzw, r20.xyzw
                  div r20.xy, r31.xyxx, r17.xxxx
                  mad_sat r20.xy, r20.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  mad r20.xy, r20.xyxx, r39.zwzz, r39.xyxx
                  div r8.w, r13.w, r17.x
                  max r8.w, r8.w, l(0.00006104)
                  and r13.w, r32.w, l(0x0000ffff)
                  if_nz r7.w
                    utof r31.z, r13.w
                    mov r17.x, l(0)
                    mov r23.w, l(0)
                    loop 
                      ige r24.w, r23.w, l(8)
                      breakc_nz r24.w
                      dp2 r33.x, icb[r23.w + 0].xyxx, r23.xyxx
                      dp2 r33.y, icb[r23.w + 0].yxyy, r23.xzxx
                      mad r31.xy, r33.xyxx, r34.yyyy, r20.xyxx
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.w, r31.xyzx, t9.xxxx, s13, r8.w
                      mad r17.x, r24.w, l(0.125000), r17.x
                      iadd r23.w, r23.w, l(1)
                    endloop 
                  else 
                    utof r20.z, r13.w
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r17.x, r20.xyzx, t9.xxxx, s13, r8.w
                  endif 
                  mul r8.w, r17.x, r17.x
                  mul r8.w, r17.x, r8.w
                else 
                  mov r8.w, l(1.000000)
                endif 
              else 
                mov r8.w, l(1.000000)
              endif 
              mul r8.w, r8.w, r14.w
              lt r13.w, l(0.000000), r8.w
              if_nz r13.w
                mul r13.w, r2.y, r32.x
                mul r13.w, r12.w, r13.w
                ubfe r14.w, l(4), l(16), r32.w
                ult r20.x, l(0), r14.w
                and r20.x, r0.w, r20.x
                if_nz r20.x
                  iadd r14.w, r14.w, cb2[0].x
                  iadd r14.w, r14.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r20.x, r14.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r14.w, l(68), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r14.w, l(84), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r14.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r14.w, l(116), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r14.w, l(132), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r14.w, l(148), t12.xyzw
                  mad r20.y, |r10.w|, l(-0.200000), l(0.400000)
                  mad r21.xyz, r1.xyzx, r20.yyyy, v7.xyzx
                  dp4 r31.x, r31.xyzw, r21.xyzw
                  dp4 r31.y, r33.xyzw, r21.xyzw
                  dp4 r20.y, r34.xyzw, r21.xyzw
                  dp4 r20.z, r35.xyzw, r21.xyzw
                  lt r21.x, r20.z, r20.y
                  div r21.yz, r31.xxyx, r20.zzzz
                  mad r21.yz, r21.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
                  add r21.yz, r37.zzwz, r21.yyzy
                  mul r21.yz, r37.xxyx, r21.yyzy
                  div r31.xy, r20.xxxx, r36.xzxx
                  add r31.zw, -r31.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                  ge r31.zw, r21.yyyz, r31.zzzw
                  ge r31.xy, r31.xyxx, r21.yzyy
                  or r31.xy, r31.xyxx, r31.zwzz
                  or r23.w, r31.y, r31.x
                  or r21.x, r21.x, r23.w
                  if_z r21.x
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r21.x, r14.w, l(28), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xy, r14.w, l(164), t12.xyxx
                    mov_sat r21.yz, r21.yyzy
                    mad r32.xy, r21.yzyy, r36.xzxx, r36.ywyy
                    mul r14.w, r20.z, r31.y
                    mad r20.y, r31.x, r20.z, r20.y
                    div r14.w, r20.y, r14.w
                    max r14.w, r14.w, l(0.00006104)
                    and r20.y, r21.x, l(0x0000ffff)
                    if_nz r7.w
                      utof r21.z, r20.y
                      mov r20.z, l(0)
                      mov r23.w, l(0)
                      loop 
                        ige r24.w, r23.w, l(8)
                        breakc_nz r24.w
                        dp2 r31.x, icb[r23.w + 0].xyxx, r24.xyxx
                        dp2 r31.y, icb[r23.w + 0].yxyy, r24.xzxx
                        mad r21.xy, r31.xyxx, r20.xxxx, r32.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.x, r21.xyzx, t9.xxxx, s13, r14.w
                        mad r20.z, r21.x, l(0.125000), r20.z
                        iadd r23.w, r23.w, l(1)
                      endloop 
                    else 
                      utof r32.z, r20.y
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r20.z, r32.xyzx, t9.xxxx, s13, r14.w
                    endif 
                    mul r14.w, r20.z, r20.z
                    mul r14.w, r20.z, r14.w
                  else 
                    mov r14.w, l(1.000000)
                  endif 
                  mul r8.w, r8.w, r14.w
                else 
                  ubfe r14.w, l(4), l(20), r32.w
                  ult r20.x, l(0), r14.w
                  and r20.x, r0.x, r20.x
                  if_nz r20.x
                    iadd r14.w, r14.w, cb2[0].x
                    iadd r14.w, r14.w, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r20.x, r14.w, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r14.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r14.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r14.w, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r14.w, l(116), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r14.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r14.w, l(148), t12.xyzw
                    mad r20.y, |r10.w|, l(-0.200000), l(0.400000)
                    mad r22.xyz, r1.xyzx, r20.yyyy, v7.xyzx
                    dp4 r21.x, r31.xyzw, r22.xyzw
                    dp4 r21.y, r32.xyzw, r22.xyzw
                    dp4 r20.y, r33.xyzw, r22.xyzw
                    dp4 r21.z, r34.xyzw, r22.xyzw
                    lt r22.x, r21.z, r20.y
                    div r21.xy, r21.xyxx, r21.zzzz
                    mad r21.xy, r21.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r21.xy, r36.zwzz, r21.xyxx
                    mul r21.xy, r36.xyxx, r21.xyxx
                    div r22.yz, r20.xxxx, r35.xxzx
                    add r31.xy, -r22.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
                    ge r31.xy, r21.xyxx, r31.xyxx
                    ge r22.yz, r22.yyzy, r21.xxyx
                    or r22.yz, r22.yyzy, r31.xxyx
                    or r22.y, r22.z, r22.y
                    or r22.x, r22.x, r22.y
                    if_z r22.x
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r22.x, r14.w, l(28), t12.xxxx
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r22.yz, r14.w, l(164), t12.xxyx
                      mov_sat r21.xy, r21.xyxx
                      mad r31.xy, r21.xyxx, r35.xzxx, r35.ywyy
                      mul r14.w, r21.z, r22.z
                      mad r20.y, r22.y, r21.z, r20.y
                      div r14.w, r20.y, r14.w
                      max r14.w, r14.w, l(0.00006104)
                      and r20.y, r22.x, l(0x0000ffff)
                      if_nz r7.w
                        utof r21.z, r20.y
                        mov r22.xy, l(0,0,0,0)
                        loop 
                          ige r22.z, r22.y, l(8)
                          breakc_nz r22.z
                          dp2 r32.x, icb[r22.y + 0].xyxx, r25.xyxx
                          dp2 r32.y, icb[r22.y + 0].yxyy, r25.xzxx
                          mad r21.xy, r32.xyxx, r20.xxxx, r31.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.x, r21.xyzx, t9.xxxx, s13, r14.w
                          mad r22.x, r21.x, l(0.125000), r22.x
                          iadd r22.y, r22.y, l(1)
                        endloop 
                      else 
                        utof r31.z, r20.y
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.x, r31.xyzx, t9.xxxx, s13, r14.w
                      endif 
                      mul r14.w, r22.x, r22.x
                      mul r14.w, r22.x, r14.w
                    else 
                      mov r14.w, l(1.000000)
                    endif 
                    mul r8.w, r8.w, r14.w
                  endif 
                endif 
                mad r14.w, -r12.w, r2.w, l(1.000000)
                mul r14.w, r14.w, r14.w
                mad r14.w, -r14.w, l(0.620000), l(0.620000)
                add r14.w, -r12.w, r14.w
                mad r14.w, r2.z, r14.w, r12.w
                mul r14.w, r8.w, r14.w
                lt r10.w, l(0.000000), r10.w
                mad r21.xyz, r14.wwww, r19.xywx, r15.xyzx
                mad r18.xyz, r18.xyzx, r9.wwww, r7.xyzx
                dp3 r9.w, r18.xyzx, r18.xyzx
                rsq r9.w, r9.w
                mul r18.xyz, r9.wwww, r18.xyzx
                dp3 r9.w, r18.xyzx, r7.xyzx
                dp3 r14.w, r1.xyzx, r18.xyzx
                mad r18.x, |r14.w|, r2.y, -|r14.w|
                mad r14.w, |r14.w|, r18.x, l(1.000000)
                mad r12.w, r12.w, r0.y, r1.w
                mul r14.w, r14.w, r14.w
                mul r12.w, r12.w, r14.w
                rcp r12.w, r12.w
                mul r12.w, r13.w, r12.w
                mul r8.w, r8.w, r12.w
                mul r8.w, r8.w, l(0.250000)
                mad r18.xyz, r8.wwww, r19.xywx, r30.xyzx
                add_sat r9.w, -r9.w, l(1.000000)
                log r9.w, r9.w
                mul r9.w, r9.w, l(3.400000)
                exp r9.w, r9.w
                mul r8.w, r8.w, r9.w
                mad r19.xyw, r8.wwww, r19.xyxw, r29.xyxz
                movc r15.xyz, r10.wwww, r21.xyzx, r15.xyzx
                movc r29.xyz, r10.wwww, r19.xywx, r29.xyzx
                movc r30.xyz, r10.wwww, r18.xyzx, r30.xyzx
              endif 
            endif 
          endif 
          break 
          default 
          break 
        endswitch 
      endif 
    endif 
  endloop 
  mov r26.xyz, r15.xyzx
  mov r27.xyz, r29.xyzx
  mov r28.xyz, r30.xyzx
  iadd r6.w, r6.w, l(32)
endloop 
add r0.xyw, -r4.xyxz, l(1.000000, 1.000000, 0.000000, 1.000000)
mul r0.xyw, r0.xyxw, r27.xyxz
mad r0.xyw, r28.xyxz, r4.xyxz, r0.xyxw
mad r0.xyw, r26.xyxz, r9.xyxz, r0.xyxw
log r1.x, r3.w
mul r1.x, r1.x, l(3.400000)
exp r1.x, r1.x
add r1.y, -r0.z, l(1.000000)
mad r1.w, r1.x, r1.y, r0.z
lt r0.z, l(0.000000), cb2[9].z
if_nz r0.z
  dp3 r0.z, v7.xyzx, v7.xyzx
  rsq r2.x, r0.z
  mul r2.xyz, r2.xxxx, v7.xyzx
  sqrt r0.z, r0.z
  lt r2.w, l(0.000000), cb2[13].w
  if_nz r2.w
    mad r3.xy, r0.zzzz, cb2[15].xyxx, cb2[14].zwzz
    mul r3.xy, r3.xyxx, cb2[16].xyxx
    lt r2.w, l(0.010000), |v7.z|
    mul r3.zw, v7.zzzz, cb2[15].zzzw
    mul r4.xy, r3.zwzz, l(-1.442695, -1.442695, 0.000000, 0.000000)
    exp r4.xy, r4.xyxx
    add r4.xy, -r4.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    div r3.zw, r4.xxxy, r3.zzzw
    mul r3.zw, r3.zzzw, r3.xxxy
    movc r3.xy, r2.wwww, r3.zwzz, r3.xyxx
    mul r3.xzw, r3.xxxx, cb2[12].xxyz
    exp r3.xzw, r3.xxzw
    mul r4.xyz, r3.yyyy, cb2[12].xyzx
    exp r4.xyz, r4.xyzx
    add r4.xyz, -r3.xzwx, r4.xyzx
    mad r3.xyz, cb2[13].wwww, r4.xyzx, r3.xzwx
  else 
    mad r2.w, r0.z, cb2[15].x, cb2[14].z
    mul r2.w, r2.w, cb2[16].x
    lt r3.w, l(0.010000), |v7.z|
    mul r4.x, v7.z, cb2[15].z
    mul r4.y, r4.x, l(-1.442695)
    exp r4.y, r4.y
    add r4.y, -r4.y, l(1.000000)
    div r4.x, r4.y, r4.x
    mul r4.x, r2.w, r4.x
    movc r2.w, r3.w, r4.x, r2.w
    mul r4.xyz, r2.wwww, cb2[12].xyzx
    exp r3.xyz, r4.xyzx
  endif 
  mad r3.xyz, r3.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r3.xyz, r3.xyzx, -cb2[9].zzzz
  dp3 r2.x, cb2[7].yzwy, -r2.xyzx
  mad r2.y, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r2.z, cb2[8].w, -r2.x, l(1.000000)
  mul r2.z, r2.z, r2.z
  mul r2.z, r2.z, l(12.566371)
  div r2.y, r2.y, r2.z
  add r0.z, r0.z, -cb2[10].w
  mul_sat r0.z, r0.z, cb2[11].w
  mul r0.z, r0.z, r2.y
  mov_sat r2.x, r2.x
  mad r2.x, r2.x, r2.x, l(1.000000)
  mad r2.x, r2.x, l(0.05968310), l(-1.000000)
  mad r2.x, cb2[8].z, r2.x, l(1.000000)
  mul r2.yzw, r0.zzzz, cb2[11].xxyz
  mad r2.xyz, r2.xxxx, cb2[10].xyzx, r2.yzwy
  mul r2.xyz, r2.xyzx, cb2[9].wwww
  add r4.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r2.xyz, r2.xyzx, r4.xyzx
  mul r2.xyz, r1.wwww, r2.xyzx
  mad r2.xyz, r0.xywx, r3.xyzx, r2.xyzx
else 
  mul r0.z, v7.z, cb2[6].x
  mad r2.w, cb2[6].x, v7.z, cb2[5].x
  lt r3.x, |r0.z|, l(0.000100)
  min r3.y, r2.w, l(64.000000)
  mul r3.y, r3.y, l(1.442695)
  exp r3.y, r3.y
  mov_sat r3.z, cb2[6].z
  lt r3.w, r2.w, l(0.000000)
  add r2.w, r2.w, l(1.000000)
  movc r2.w, r3.w, r3.y, r2.w
  add r2.w, r2.w, -cb2[6].z
  movc r0.z, r3.x, l(1.000000), r0.z
  div r0.z, r2.w, r0.z
  movc r0.z, r3.x, r3.z, r0.z
  mul r0.z, r0.z, cb2[5].z
  dp3 r2.w, v7.xyzx, v7.xyzx
  sqrt r3.x, r2.w
  mad r0.z, r0.z, r3.x, cb2[5].w
  exp r0.z, r0.z
  min r0.z, r0.z, l(1.000000)
  add r0.z, -r0.z, l(1.000000)
  rsq r2.w, r2.w
  mul r3.xyz, r2.wwww, v7.xyzx
  dp3 r2.w, cb2[7].yzwy, r3.xyzx
  mad_sat r2.w, cb2[8].y, r2.w, cb2[8].x
  add r3.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r3.xyzw, r2.wwww, r3.xyzw, cb2[4].xyzw
  mul r0.z, r0.z, r3.w
  mad r3.xyz, r3.xyzx, r1.wwww, -r0.xywx
  mad r2.xyz, r0.zzzz, r3.xyzx, r0.xywx
endif 
mul r0.xyz, r2.xyzx, cb1[85].yyyy
ge r2.xyz, r0.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.xyz, r0.xyzx, r2.xyzx
min r0.xyz, r0.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
max r1.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
and r2.x, r1.w, l(0x7f800000)
ieq r2.x, r2.x, l(0x7f800000)
eq r3.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
and r2.yz, r3.zzwz, r3.xxyx
and r2.y, r2.z, r2.y
or r2.x, r2.y, r2.x
if_z r2.x
  ftou r2.xy, v0.xyxx
  imm_atomic_iadd r2.z, u6, r2.xyxx, l(1)
  ult r2.w, r2.z, cb2[58].z
  if_nz r2.w
    max r2.w, r1.z, r1.y
    max r2.w, r1.x, r2.w
    and r2.w, r2.w, l(0x7f800000)
    iadd r2.w, r2.w, l(0x00800000)
    add r1.xyz, r1.xyzx, r2.wwww
    ubfe r1.x, l(8), l(15), r1.x
    ushr r1.yz, r1.yyzy, l(0, 15, 15, 0)
    bfi r1.yz, l(0, 8, 8, 0), l(0, 8, 16, 0), r1.yyzy, l(0, 0, 0, 0)
    iadd r1.x, r1.y, r1.x
    iadd r1.x, r1.z, r1.x
    ishl r1.y, r2.w, l(1)
    iadd r3.xzw, r1.yyyy, r1.xxxx
    mov_sat r1.x, r1.w
    mul r1.x, r1.x, l(2046.000000)
    ftou r1.x, r1.x
    ishl r1.y, v0.z, l(2)
    and r1.x, r1.x, l(2046)
    bfi r1.x, l(11), l(0), r1.x, r1.y
    bfi r3.y, l(1), l(0), cb0[10].w, r1.x
    store_uav_typed u7.xyzw, r2.xyzz, r3.xyzw
    mov r1.x, l(-1)
  else 
    mov r1.x, l(0)
  endif 
else 
  mov r1.x, l(-1)
endif 
mov r0.w, r1.w
movc o0.xyzw, r1.xxxx, l(0,0,0,0), r0.xyzw
ret 
// Approximately 2563 instruction slots used
