//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:42:37 2021
//
//
// Note: shader requires additional functionality:
//       Early depth-stencil
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float3 specColorTint;              // Offset:  160 Size:    12 [unused]
//   float baseNormalHeight;            // Offset:  172 Size:     4 [unused]
//   float2 glossRange;                 // Offset:  176 Size:     8
//   float2 rotateUVs;                  // Offset:  184 Size:     8 [unused]
//   float2 scrollUVs;                  // Offset:  192 Size:     8 [unused]
//   float2 scaleUVs;                   // Offset:  200 Size:     8 [unused]
//   float2 offsetUVs;                  // Offset:  208 Size:     8 [unused]
//   float2 zoomUVs;                    // Offset:  216 Size:     8 [unused]
//   float zoomRate;                    // Offset:  224 Size:     4 [unused]
//   float layerDepth;                  // Offset:  228 Size:     4 [unused]
//   bool clampU;                       // Offset:  232 Size:     4 [unused]
//   bool clampV;                       // Offset:  236 Size:     4 [unused]
//   float2 colorMapScale;              // Offset:  240 Size:     8
//   float4 colorTint;                  // Offset:  256 Size:    16
//   float zFeatherDistance;            // Offset:  272 Size:     4
//   float falloffBegin;                // Offset:  276 Size:     4 [unused]
//   float falloffEnd;                  // Offset:  280 Size:     4 [unused]
//   float uvMotionToggle1;             // Offset:  284 Size:     4 [unused]
//   float2 maskRotateUVs;              // Offset:  288 Size:     8
//   float2 maskScrollUVs;              // Offset:  296 Size:     8
//   float2 maskScaleUVs;               // Offset:  304 Size:     8
//   float2 maskOffsetUVs;              // Offset:  312 Size:     8
//   float2 maskZoomUVs;                // Offset:  320 Size:     8
//   float maskZoomRate;                // Offset:  328 Size:     4
//   bool noReceiveShadow;              // Offset:  332 Size:     4
//   float4 flowParams;                 // Offset:  336 Size:    16
//   float4 noiseParams;                // Offset:  352 Size:    16
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16 [unused]
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// colorSampler                      sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// flowSampler                       sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// noiseSampler                      sampler      NA          NA             s5      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// floatZSampler                     texture  float4          2d             t0      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// colorMap                          texture  float4          2d            t21      1 
// alphaMask                         texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// flowMap                           texture  float4          2d            t24      1 
// noiseMap                          texture  float4          2d            t25      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// gOit_Pixels                           UAV    uint          2d             u6      1 
// gOit_Nodes                            UAV   uint2     2darray             u7      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyz 
// COLOR                    1   x           1     NONE   float       
// TEXCOORD                 0    yz         1     NONE   float    yz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// OFFPOSITION              0   xyz         5     NONE   float   xyz 
// TEXCOORD                 9   xy          6     NONE   float   xy  
// SV_IsFrontFace           0   x           7    FFACE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | forceEarlyDepthStencil
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[23], immediateIndexed
dcl_constantbuffer CB1[93], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2darray (float,float,float,float) t31
dcl_uav_typed_texture2d (uint,uint,uint,uint) u6
dcl_uav_typed_texture2darray (uint,uint,uint,uint) u7
dcl_input_ps_siv linear noperspective v0.xyz, position
dcl_input_ps linear v1.yz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xy
dcl_output o0.xyzw
dcl_temps 44
mul r0.xy, v1.yzyy, cb0[15].xyxx
mul r0.zw, cb0[22].xxxy, cb1[69].wwww
mad r0.zw, v1.yyyz, cb0[22].zzzz, r0.zzzw
sample_indexable(texture2d)(float,float,float,float) r0.zw, r0.zwzz, t25.zwxy, s5
mul r0.zw, r0.zzzw, cb0[22].wwww
mad r0.zw, v1.yyyz, cb0[21].xxxx, r0.zzzw
frc r1.xy, r0.zwzz
mad r1.zw, r1.xxxy, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
mul r1.xy, r1.xyxx, r1.xyxx
mul r1.xy, r1.xyxx, r1.zwzz
round_ni r1.zw, r0.zzzw
div r1.zw, r1.zzzw, cb0[21].xxxx
sample_indexable(texture2d)(float,float,float,float) r1.zw, r1.zwzz, t24.zwxy, s3
add r1.zw, r1.zzzw, r1.zzzw
add r2.xyzw, r0.zwzw, l(1.000000, 0.000000, 0.000000, 1.000000)
round_ni r2.xyzw, r2.xyzw
div r2.xyzw, r2.xyzw, cb0[21].xxxx
sample_indexable(texture2d)(float,float,float,float) r2.xy, r2.xyxx, t24.xyzw, s3
add r2.xy, r2.xyxx, r2.xyxx
sample_indexable(texture2d)(float,float,float,float) r2.zw, r2.zwzz, t24.zwxy, s3
add r2.zw, r2.zzzw, r2.zzzw
add r0.zw, r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
round_ni r0.zw, r0.zzzw
div r0.zw, r0.zzzw, cb0[21].xxxx
sample_indexable(texture2d)(float,float,float,float) r0.zw, r0.zwzz, t24.zwxy, s3
add r0.zw, r0.zzzw, r0.zzzw
resinfo_indexable(texture2d)(float,float,float,float) r3.xy, l(0), t21.xyzw
mul r3.xy, r0.xyxx, r3.xyxx
deriv_rtx_coarse r3.zw, r3.xxxy
deriv_rty_coarse r3.xy, r3.xyxx
dp2 r3.z, r3.zwzz, r3.zwzz
dp2 r3.x, r3.xyxx, r3.xyxx
max r3.x, r3.x, r3.z
log r3.x, r3.x
mul r3.x, r3.x, l(0.500000)
mul r3.y, cb0[21].y, cb1[69].w
mad r1.zw, r1.zzzw, l(0.000000, 0.000000, -1.000000, 1.000000), l(0.000000, 0.000000, 1.000000, -1.000000)
mad r1.zw, r1.zzzw, r3.yyyy, r0.xxxy
sample_l_indexable(texture2d)(float,float,float,float) r4.xyzw, r1.zwzz, t21.xyzw, s1, r3.x
mad r1.zw, r2.xxxy, l(0.000000, 0.000000, -1.000000, 1.000000), l(0.000000, 0.000000, 1.000000, -1.000000)
mad r1.zw, r1.zzzw, r3.yyyy, r0.xxxy
sample_l_indexable(texture2d)(float,float,float,float) r5.xyz, r1.zwzz, t21.xyzw, s1, r3.x
add r5.xyz, -r4.xyzx, r5.xyzx
mad r5.xyz, r1.xxxx, r5.xyzx, r4.xyzx
mad r1.zw, r2.zzzw, l(0.000000, 0.000000, -1.000000, 1.000000), l(0.000000, 0.000000, 1.000000, -1.000000)
mad r1.zw, r1.zzzw, r3.yyyy, r0.xxxy
sample_l_indexable(texture2d)(float,float,float,float) r2.xyz, r1.zwzz, t21.xyzw, s1, r3.x
mad r0.zw, r0.zzzw, l(0.000000, 0.000000, -1.000000, 1.000000), l(0.000000, 0.000000, 1.000000, -1.000000)
mad r0.xy, r0.zwzz, r3.yyyy, r0.xyxx
sample_l_indexable(texture2d)(float,float,float,float) r0.xyz, r0.xyxx, t21.xyzw, s1, r3.x
add r0.xyz, -r2.xyzx, r0.xyzx
mad r0.xyz, r1.xxxx, r0.xyzx, r2.xyzx
add r0.xyz, -r5.xyzx, r0.xyzx
mad r4.xyz, r1.yyyy, r0.xyzx, r5.xyzx
mul r0.xyzw, r4.xyzw, cb0[16].xyzw
dp3 r1.x, -v5.xyzx, -v5.xyzx
rsq r1.x, r1.x
mul r1.yzw, r1.xxxx, -v5.xxyz
dp3 r2.x, r1.yzwy, v2.xyzx
dp3 r3.x, r1.yzwy, v3.xyzx
dp3 r3.y, r1.yzwy, v4.xyzx
lt r2.z, l(0.000000), r2.x
div r3.xy, -r3.xyxx, r2.xxxx
and r2.zw, r2.zzzz, r3.xxxy
add r3.xy, v1.yzyy, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r2.zw, r2.zzzw, cb0[19].xxxy
mul r2.zw, r2.zzzw, l(0.000000, 0.000000, 0.000010, 0.000010)
mad r2.zw, r3.xxxy, cb0[19].xxxy, r2.zzzw
mad r2.zw, cb0[19].zzzw, cb0[19].xxxy, r2.zzzw
mul r3.xy, cb0[18].zwzz, cb1[69].wwww
mad r3.z, cb0[18].y, cb1[69].w, l(1.000000)
mul r3.z, r3.z, cb0[18].x
mul r3.z, r3.z, l(0.01745329)
sincos r4.x, r5.x, r3.z
mov r5.y, r5.x
mov r5.z, r4.x
dp2 r6.x, r5.yzyy, r2.zwzz
mov r5.x, -r4.x
dp2 r6.y, r5.xyxx, r2.zwzz
mad r2.zw, r3.xxxy, cb0[19].xxxy, r6.xxxy
mul r3.x, cb0[20].z, cb1[69].w
sincos null, r3.x, r3.x
mad r3.x, r3.x, l(0.500000), l(0.500000)
add r3.x, -r3.x, l(1.000000)
add r3.y, -cb0[20].x, cb0[20].y
mad r3.x, r3.x, r3.y, cb0[20].x
div r2.zw, r2.zzzw, r3.xxxx
add r2.zw, r2.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
sample_indexable(texture2d)(float,float,float,float) r2.z, r2.zwzz, t22.yzxw, s1
mul r0.w, r0.w, r2.z
mul r2.z, r2.x, r2.x
mad_sat r2.z, r2.z, v6.x, v6.y
mul r0.w, r0.w, r2.z
ftoi r3.xy, v0.xyxx
mov r3.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r2.z, r3.xyzw, t0.yzxw
ge r2.w, r2.z, l(0.984375)
mul r3.x, r2.z, l(1.01587307)
mad r2.z, r2.z, l(64.000000), l(-63.000000)
movc r2.z, r2.w, r2.z, r3.x
max r2.z, r2.z, l(0.00000001)
ge r2.w, v0.z, l(0.984375)
mul r3.x, v0.z, l(1.01587307)
mad r3.y, v0.z, l(64.000000), l(-63.000000)
movc r2.w, r2.w, r3.y, r3.x
max r2.w, r2.w, l(0.00000001)
rcp r2.zw, r2.zzzw
eq r3.x, cb0[17].x, l(0.000000)
div r3.y, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[17].x
movc r3.x, r3.x, l(60000.000000), r3.y
add r2.z, -r2.w, r2.z
mul_sat r2.z, r3.x, r2.z
mul r3.w, r0.w, r2.z
mul_sat r2.y, cb0[11].y, l(0.05882353)
ftou r4.xy, v0.xyxx
ine r0.w, cb1[92].x, l(0)
utof r4.zw, r4.yyyx
dp2 r2.z, r4.wzww, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r2.z, r2.z
mul r2.zw, r2.zzzw, l(0.000000, 0.000000, 52.982918, 0.00781250)
frc r2.z, r2.z
mad r2.z, r2.z, l(6.28318548), cb1[70].w
sincos r5.x, r6.x, r2.z
dp2 r2.z, r4.zwzz, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r2.z, r2.z
mul r2.z, r2.z, l(52.982918)
frc r2.z, r2.z
mad r2.z, r2.z, l(6.28318548), cb1[70].w
sincos r7.x, r8.x, r2.z
mov_sat r2.x, r2.x
dp3 r2.z, -r1.yzwy, v2.xyzx
add r2.z, r2.z, r2.z
mad r9.xyz, v2.xyzx, -r2.zzzz, -r1.yzwy
mul r2.z, r2.y, l(17.000000)
exp r2.z, r2.z
add r2.z, r2.z, l(2.000000)
div r2.z, l(2.000000), r2.z
sqrt r4.z, r2.z
add r4.w, -r2.y, l(1.000000)
mul r5.z, r4.w, l(5.000000)
mad r5.w, r4.w, l(5.000000), l(-2.500000)
mul r5.w, r5.w, l(0.400000)
max r5.w, r5.w, l(0.000000)
mul r5.w, r5.w, l(100.000000)
mad r7.yz, -r4.wwww, l(0.000000, 10.000000, 5.000000, 0.000000), l(0.000000, 6.857410, 7.085000, 0.000000)
exp r6.w, r7.y
mul r6.w, r2.x, r6.w
mul r6.w, r6.w, l(9.136810)
mul r7.y, r4.w, r5.z
mad r7.y, -r7.y, l(2.015905), r7.z
exp r7.y, r7.y
mul r7.y, r2.x, r7.y
mul r7.y, r7.y, l(9.708090)
max r6.w, r6.w, r7.y
max r6.w, r6.w, l(1.268160)
min r2.w, r2.w, l(15.000000)
ftou r2.w, r2.w
ushr r10.xy, r4.xyxx, l(6, 6, 0, 0)
ishl r10.z, r2.w, l(4)
mov r11.xy, l(0,0,0,0)
mov r12.w, l(0)
mov r13.yz, l(0,0,1.000000,0)
mov r14.xy, l(0,0,0,0)
mov r15.xy, l(0,0,0,0)
mov r16.xy, l(0,0,0,0)
mov r4.x, l(1.000000)
mov r17.xyzw, l(0,0,0,0)
mov r18.yzw, l(0,0,0,0)
mov r2.w, l(0)
mov r7.y, l(0)
loop 
  uge r7.z, r7.y, cb2[0].y
  breakc_nz r7.z
  ushr r11.z, r7.y, l(5)
  iadd r12.xyz, r10.xyzx, r11.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r7.z, r12.xyzw, t7.yzxw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r19.xyzw, r7.y, l(0), t15.wxyz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r20.xyzw, r7.y, l(16), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r21.xyzw, r7.y, l(32), t15.yxwz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r22.xyzw, r7.y, l(48), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r23.xyzw, r7.y, l(64), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r7.y, l(80), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r8.yz, r7.y, l(96), t15.xxyx
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r7.y, l(116), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r7.y, l(132), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r7.y, l(148), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r7.y, l(164), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r7.y, l(180), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r7.y, l(196), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xy, r7.y, l(212), t15.xyxx
  add r12.xyz, -r19.yzwy, v5.xyzx
  dp3 r7.w, r12.xyzx, r12.xyzx
  sqrt r7.w, r7.w
  ge r7.w, cb2[54].y, r7.w
  and r8.w, r25.y, l(0x0000ffff)
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r8.w, l(0), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r8.w, l(16), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r8.w, l(32), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r8.w, l(48), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r8.w, l(64), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r8.w, l(80), t16.xyzw
  dp3 r10.w, r32.xyzx, r12.xyzx
  add_sat r10.w, r32.w, r10.w
  dp3 r11.z, r33.xyzx, r12.xyzx
  add_sat r11.z, r33.w, r11.z
  mul r10.w, r10.w, r11.z
  dp3 r11.z, r34.xyzx, r12.xyzx
  add_sat r11.z, r34.w, r11.z
  mul r10.w, r10.w, r11.z
  dp3 r11.z, r35.xyzx, r12.xyzx
  add_sat r11.z, r35.w, r11.z
  mul r10.w, r10.w, r11.z
  dp3 r11.z, r36.xyzx, r12.xyzx
  add_sat r11.z, r36.w, r11.z
  mul r10.w, r10.w, r11.z
  dp3 r11.z, r37.xyzx, r12.xyzx
  add_sat r11.z, r37.w, r11.z
  mul r13.x, r10.w, r11.z
  and r10.w, r8.y, l(1)
  movc r11.zw, r10.wwww, r13.xxxy, r13.zzzx
  mov r32.xy, r25.zwzz
  mov r32.z, r26.z
  dp3 r10.w, r9.xyzx, r32.xyzx
  dp3 r13.x, r12.xyzx, r32.xyzx
  add r13.x, -r26.w, r13.x
  ge r13.w, r13.x, l(0.000000)
  max r13.x, r5.w, |r13.x|
  movc r13.x, r13.w, r13.x, -r13.x
  max r10.w, -r10.w, l(0.00000010)
  div r10.w, r13.x, r10.w
  min r10.w, |r10.w|, l(131072.000000)
  mov r26.z, r27.z
  dp3 r13.x, r9.xyzx, r26.xyzx
  dp3 r13.w, r12.xyzx, r26.xyzx
  add r13.w, -r27.w, r13.w
  ge r14.w, r13.w, l(0.000000)
  max r13.w, r5.w, |r13.w|
  movc r13.w, r14.w, r13.w, -r13.w
  max r13.x, -r13.x, l(0.00000010)
  div r13.x, r13.w, r13.x
  min r10.w, r10.w, |r13.x|
  mov r27.z, r28.z
  dp3 r13.x, r9.xyzx, r27.xyzx
  dp3 r13.w, r12.xyzx, r27.xyzx
  add r13.w, -r28.w, r13.w
  ge r14.w, r13.w, l(0.000000)
  max r13.w, r5.w, |r13.w|
  movc r13.w, r14.w, r13.w, -r13.w
  max r13.x, -r13.x, l(0.00000010)
  div r13.x, r13.w, r13.x
  min r10.w, r10.w, |r13.x|
  mov r28.z, r29.z
  dp3 r13.x, r9.xyzx, r28.xyzx
  dp3 r13.w, r12.xyzx, r28.xyzx
  add r13.w, -r29.w, r13.w
  ge r14.w, r13.w, l(0.000000)
  max r13.w, r5.w, |r13.w|
  movc r13.w, r14.w, r13.w, -r13.w
  max r13.x, -r13.x, l(0.00000010)
  div r13.x, r13.w, r13.x
  min r10.w, r10.w, |r13.x|
  mov r29.z, r30.x
  dp3 r13.x, r9.xyzx, r29.xyzx
  dp3 r13.w, r12.xyzx, r29.xyzx
  add r13.w, -r30.y, r13.w
  ge r14.w, r13.w, l(0.000000)
  max r13.w, r5.w, |r13.w|
  movc r13.w, r14.w, r13.w, -r13.w
  max r13.x, -r13.x, l(0.00000010)
  div r13.x, r13.w, r13.x
  min r10.w, r10.w, |r13.x|
  mov r31.zw, r30.zzzw
  dp3 r13.x, r9.zxyz, r31.xzwx
  dp3 r13.w, r12.zxyz, r31.xzwx
  add r13.w, -r31.y, r13.w
  ge r14.w, r13.w, l(0.000000)
  max r13.w, r5.w, |r13.w|
  movc r13.w, r14.w, r13.w, -r13.w
  max r13.x, -r13.x, l(0.00000010)
  div r13.x, r13.w, r13.x
  min r10.w, r10.w, |r13.x|
  mov r26.x, r22.w
  mov r26.yz, r23.zzwz
  add r26.xyz, r12.xyzx, r26.xyzx
  mad r26.xyz, r9.xyzx, r10.wwww, r26.xyzx
  dp3 r13.x, r26.xyzx, r26.xyzx
  sqrt r13.x, r13.x
  div r10.w, r10.w, r13.x
  add r10.w, r10.w, r10.w
  sqrt r10.w, r10.w
  mad r10.w, r4.w, l(5.000000), r10.w
  add r10.w, r10.w, l(-0.844800)
  mov r19.y, r20.z
  mov r19.z, r21.x
  dp3 r27.x, r26.xyzx, r19.xyzx
  mov r28.xy, r20.xwxx
  mov r28.z, r21.w
  dp3 r27.y, r26.xyzx, r28.xyzx
  mov r21.x, r20.y
  dp3 r27.z, r26.xyzx, r21.xyzx
  ubfe r13.xw, l(6, 0, 0, 9), l(25, 0, 0, 16), r25.yyyy
  utof r27.w, r13.w
  sample_l_indexable(texturecubearray)(float,float,float,float) r20.xyz, r27.xyzw, t8.xyzw, s2, r10.w
  and r25.yzw, r20.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
  ieq r25.yzw, r25.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
  or r10.w, r25.z, r25.y
  or r10.w, r25.w, r10.w
  movc r20.xyz, r10.wwww, l(1.000000,1.000000,0,0), r20.xyzx
  dp3 r26.x, r12.xyzx, r19.xyzx
  dp3 r26.y, r12.xyzx, r28.xyzx
  dp3 r26.z, r12.xyzx, r21.xyzx
  mad_sat r22.xyz, r26.xyzx, r22.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mov r23.z, r24.x
  mad r22.xyz, r22.xyzx, r23.xyzx, r24.yzwy
  dp3 r27.x, v2.xyzx, r19.xyzx
  dp3 r27.y, v2.xyzx, r28.xyzx
  dp3 r27.z, v2.xyzx, r21.xyzx
  lt r19.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r27.xyzx
  movc r14.z, r19.x, l(0), l(0.500000)
  add r21.xyz, r14.xyzx, r22.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r21.xyz, r21.xyzx, t17.xyzw, s4, l(0.000000)
  movc r15.z, r19.y, l(0), l(0.500000)
  add r19.xyw, r15.xyxz, r22.xyxz
  sample_l_indexable(texture3d)(float,float,float,float) r19.xyw, r19.xywx, t18.xywz, s4, l(0.000000)
  movc r16.z, r19.z, l(0), l(0.500000)
  add r22.xyz, r16.xyzx, r22.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r22.xyz, r22.xyzx, t19.xyzw, s4, l(0.000000)
  mul r23.xyz, r27.xyzx, r27.xyzx
  sample_l_indexable(texturecubearray)(float,float,float,float) r24.xyz, r27.xyzw, t8.xyzw, s2, l(6.000000)
  and r25.yzw, r24.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
  ieq r25.yzw, r25.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
  or r10.w, r25.z, r25.y
  or r10.w, r25.w, r10.w
  movc r24.xyz, r10.wwww, l(1.000000,1.000000,0,0), r24.xyzx
  mov r26.xyzw, r17.xyzw
  mov r25.yzw, r18.yyzw
  mov r10.w, r2.w
  mov r13.w, r7.z
  loop 
    breakc_z r13.w
    firstbit_lo r14.z, r13.w
    ishl r14.z, l(1), r14.z
    and r14.w, r13.w, r14.z
    if_nz r14.w
      not r14.z, r14.z
      and r13.w, r13.w, r14.z
      if_nz r7.w
        mov r14.z, r8.y
        mov r27.xy, r11.zwzz
        mov r14.w, l(1)
        loop 
          ige r15.z, r14.w, r13.x
          breakc_nz r15.z
          iadd r15.z, r8.w, r14.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r15.z, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r15.z, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r15.z, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r15.z, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r15.z, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r15.z, l(80), t16.xyzw
          dp3 r15.z, r28.xyzx, r12.xyzx
          add_sat r15.z, r28.w, r15.z
          mul r15.z, r15.z, r27.x
          dp3 r15.w, r29.xyzx, r12.xyzx
          add_sat r15.w, r29.w, r15.w
          mul r15.z, r15.w, r15.z
          dp3 r15.w, r30.xyzx, r12.xyzx
          add_sat r15.w, r30.w, r15.w
          mul r15.z, r15.w, r15.z
          dp3 r15.w, r31.xyzx, r12.xyzx
          add_sat r15.w, r31.w, r15.w
          mul r15.z, r15.w, r15.z
          dp3 r15.w, r32.xyzx, r12.xyzx
          add_sat r15.w, r32.w, r15.w
          mul r15.z, r15.w, r15.z
          dp3 r15.w, r33.xyzx, r12.xyzx
          add_sat r15.w, r33.w, r15.w
          mul r27.x, r15.w, r15.z
          ushr r16.z, r14.z, l(2)
          ubfe r16.w, l(1), l(2), r14.z
          and r19.z, r16.z, l(2)
          max r20.w, r27.x, r27.y
          mad r15.z, -r15.z, r15.w, l(1.000000)
          mul r15.z, r15.z, r27.y
          movc r4.y, r19.z, r15.z, r20.w
          movc r27.xy, r16.wwww, r27.xyxx, r4.xyxx
          iadd r14.w, r14.w, l(1)
          mov r14.z, r16.z
        endloop 
        mov_sat r27.y, r27.y
        mul r4.y, r8.z, r27.y
        lt r14.z, l(0.000000), r4.y
        if_nz r14.z
          mad r28.z, r27.y, r8.z, r25.w
          mul r4.y, r25.x, r4.y
          mul r27.xzw, r4.yyyy, r23.xxyz
          mul r29.xyz, r19.xywx, r27.zzzz
          mad r29.xyz, r21.xyzx, r27.xxxx, r29.xyzx
          mad r27.xzw, r22.xxyz, r27.wwww, r29.xxyz
          mul r29.xyz, r24.xyzx, r27.xzwx
          dp3 r14.z, r29.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r29.xyz, r27.xzwx, r24.xyzx, r26.xyzx
          mul r14.w, r6.w, r14.z
          mul r27.xzw, r4.yyyy, r20.xxyz
          dp3 r4.y, r27.xzwx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r4.y, r6.w, r14.z, r4.y
          div r4.y, r14.w, r4.y
          mov r30.x, r26.w
          mov r30.yz, r25.yyzy
          mad r28.xyw, r27.zwzx, r4.yyyy, r30.yzyx
          mov r29.w, r28.w
        else 
          mov r29.xyzw, r26.xyzw
          mov r28.xyz, r25.yzwy
        endif 
        mov r10.w, l(-1)
        mov r26.xyzw, r29.xyzw
        mov r25.yzw, r28.xxyz
        break 
      endif 
    endif 
  endloop 
  if_nz r10.w
    mov r17.xyzw, r26.xyzw
    mov r18.yzw, r25.yyzw
    mov r2.w, l(-1)
    break 
  endif 
  iadd r7.y, r7.y, l(32)
  mov r17.xyzw, r26.xyzw
  mov r18.yzw, r25.yyzw
  mov r2.w, r10.w
endloop 
if_z r2.w
  iadd r2.w, cb2[0].y, -cb2[58].x
  and r4.x, r2.w, l(-32)
  iadd r4.y, r2.w, -r4.x
  and r7.y, cb2[0].y, l(-32)
  iadd r7.z, -r7.y, cb2[0].y
  mov r11.xy, l(0,0,0,0)
  mov r12.w, l(0)
  mov r13.yz, l(0,0,1.000000,0)
  mov r14.xy, l(0,0,0,0)
  mov r15.x, l(1.000000)
  mov r16.xy, l(0,0,0,0)
  mov r19.xy, l(0,0,0,0)
  mov r20.xyzw, r17.xyzw
  mov r21.yzw, r18.yyzw
  mov r7.w, r4.x
  loop 
    uge r8.y, r7.w, cb2[0].y
    breakc_nz r8.y
    ushr r11.z, r7.w, l(5)
    iadd r12.xyz, r10.xyzx, r11.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r8.y, r12.xyzw, t7.yxzw
    ieq r8.z, r4.x, r7.w
    bfi r8.w, r4.y, l(0), l(0), r8.y
    movc r8.y, r8.z, r8.w, r8.y
    ieq r8.z, r7.y, r7.w
    ubfe r8.w, r7.z, l(0), r8.y
    movc r8.y, r8.z, r8.w, r8.y
    iadd r8.z, r7.w, cb2[0].x
    mov r22.xyzw, r20.xyzw
    mov r23.xyz, r21.yzwy
    mov r8.w, r8.y
    loop 
      breakc_z r8.w
      firstbit_lo r10.w, r8.w
      ishl r11.z, l(1), r10.w
      and r11.w, r8.w, r11.z
      if_nz r11.w
        xor r8.w, r8.w, r11.z
        iadd r11.z, r8.z, r10.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r24.xyzw, r11.z, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r12.xy, r11.z, l(16), t11.xyxx
        add r24.xyz, r24.xyzx, -v5.xyzx
        mov r12.z, r24.w
        lt r12.xyz, |r24.xyzx|, r12.zxyz
        and r11.z, r12.y, r12.x
        and r11.z, r12.z, r11.z
        if_nz r11.z
          iadd r10.w, r7.w, r10.w
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r10.w, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r11.zw, r10.w, l(96), t15.xxxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r10.w, l(116), t15.zwxy
          add r12.xyz, -r24.yzwy, v5.xyzx
          and r13.w, r25.w, l(0x0000ffff)
          ubfe r14.w, l(6), l(25), r25.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r26.xyzw, r13.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r13.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r13.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r13.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r13.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r13.w, l(80), t16.xyzw
          dp3 r15.z, r26.xyzx, r12.xyzx
          add_sat r15.z, r26.w, r15.z
          dp3 r15.w, r27.xyzx, r12.xyzx
          add_sat r15.w, r27.w, r15.w
          mul r15.z, r15.w, r15.z
          dp3 r15.w, r28.xyzx, r12.xyzx
          add_sat r15.w, r28.w, r15.w
          mul r15.z, r15.w, r15.z
          dp3 r15.w, r29.xyzx, r12.xyzx
          add_sat r15.w, r29.w, r15.w
          mul r15.z, r15.w, r15.z
          dp3 r15.w, r30.xyzx, r12.xyzx
          add_sat r15.w, r30.w, r15.w
          mul r15.z, r15.w, r15.z
          dp3 r15.w, r31.xyzx, r12.xyzx
          add_sat r15.w, r31.w, r15.w
          mul r13.x, r15.w, r15.z
          and r15.z, r11.z, l(1)
          movc r15.zw, r15.zzzz, r13.xxxy, r13.zzzx
          mov r13.x, r11.z
          mov r26.xy, r15.zwzz
          mov r16.w, l(1)
          loop 
            ige r19.w, r16.w, r14.w
            breakc_nz r19.w
            iadd r19.w, r13.w, r16.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r19.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r19.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r19.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r19.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r19.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r19.w, l(80), t16.xyzw
            dp3 r19.w, r27.xyzx, r12.xyzx
            add_sat r19.w, r27.w, r19.w
            mul r19.w, r19.w, r26.x
            dp3 r24.w, r28.xyzx, r12.xyzx
            add_sat r24.w, r28.w, r24.w
            mul r19.w, r19.w, r24.w
            dp3 r24.w, r29.xyzx, r12.xyzx
            add_sat r24.w, r29.w, r24.w
            mul r19.w, r19.w, r24.w
            dp3 r24.w, r30.xyzx, r12.xyzx
            add_sat r24.w, r30.w, r24.w
            mul r19.w, r19.w, r24.w
            dp3 r24.w, r31.xyzx, r12.xyzx
            add_sat r24.w, r31.w, r24.w
            mul r19.w, r19.w, r24.w
            dp3 r24.w, r32.xyzx, r12.xyzx
            add_sat r24.w, r32.w, r24.w
            mul r26.x, r19.w, r24.w
            ushr r26.z, r13.x, l(2)
            ubfe r26.w, l(1), l(2), r13.x
            and r27.x, r26.z, l(2)
            max r27.y, r26.x, r26.y
            mad r19.w, -r19.w, r24.w, l(1.000000)
            mul r19.w, r19.w, r26.y
            movc r15.y, r27.x, r19.w, r27.y
            movc r26.xy, r26.wwww, r26.xyxx, r15.xyxx
            iadd r16.w, r16.w, l(1)
            mov r13.x, r26.z
          endloop 
          mov_sat r26.y, r26.y
          mul r11.z, r11.w, r26.y
          lt r13.x, l(0.000000), r11.z
          if_nz r13.x
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r10.w, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r10.w, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r10.w, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r10.w, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r10.w, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r10.w, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r10.w, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r10.w, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r10.w, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r10.w, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xy, r10.w, l(212), t15.xyxx
            mad r23.z, r26.y, r11.w, r23.z
            mul r10.w, r25.z, r11.z
            mov r25.z, r32.z
            dp3 r11.z, r9.xyzx, r25.xyzx
            dp3 r11.w, r12.xyzx, r25.xyzx
            add r11.w, -r32.w, r11.w
            ge r13.x, r11.w, l(0.000000)
            max r11.w, r5.w, |r11.w|
            movc r11.w, r13.x, r11.w, -r11.w
            max r11.z, -r11.z, l(0.00000010)
            div r11.z, r11.w, r11.z
            min r11.z, |r11.z|, l(131072.000000)
            mov r32.z, r33.z
            dp3 r11.w, r9.xyzx, r32.xyzx
            dp3 r13.x, r12.xyzx, r32.xyzx
            add r13.x, -r33.w, r13.x
            ge r13.w, r13.x, l(0.000000)
            max r13.x, r5.w, |r13.x|
            movc r13.x, r13.w, r13.x, -r13.x
            max r11.w, -r11.w, l(0.00000010)
            div r11.w, r13.x, r11.w
            min r11.z, |r11.w|, r11.z
            mov r33.z, r34.z
            dp3 r11.w, r9.xyzx, r33.xyzx
            dp3 r13.x, r12.xyzx, r33.xyzx
            add r13.x, -r34.w, r13.x
            ge r13.w, r13.x, l(0.000000)
            max r13.x, r5.w, |r13.x|
            movc r13.x, r13.w, r13.x, -r13.x
            max r11.w, -r11.w, l(0.00000010)
            div r11.w, r13.x, r11.w
            min r11.z, |r11.w|, r11.z
            mov r34.z, r35.z
            dp3 r11.w, r9.xyzx, r34.xyzx
            dp3 r13.x, r12.xyzx, r34.xyzx
            add r13.x, -r35.w, r13.x
            ge r13.w, r13.x, l(0.000000)
            max r13.x, r5.w, |r13.x|
            movc r13.x, r13.w, r13.x, -r13.x
            max r11.w, -r11.w, l(0.00000010)
            div r11.w, r13.x, r11.w
            min r11.z, |r11.w|, r11.z
            mov r35.z, r36.x
            dp3 r11.w, r9.xyzx, r35.xyzx
            dp3 r13.x, r12.xyzx, r35.xyzx
            add r13.x, -r36.y, r13.x
            ge r13.w, r13.x, l(0.000000)
            max r13.x, r5.w, |r13.x|
            movc r13.x, r13.w, r13.x, -r13.x
            max r11.w, -r11.w, l(0.00000010)
            div r11.w, r13.x, r11.w
            min r11.z, |r11.w|, r11.z
            mov r37.zw, r36.zzzw
            dp3 r11.w, r9.zxyz, r37.xzwx
            dp3 r13.x, r12.zxyz, r37.xzwx
            add r13.x, -r37.y, r13.x
            ge r13.w, r13.x, l(0.000000)
            max r13.x, r5.w, |r13.x|
            movc r13.x, r13.w, r13.x, -r13.x
            max r11.w, -r11.w, l(0.00000010)
            div r11.w, r13.x, r11.w
            min r11.z, |r11.w|, r11.z
            mov r25.x, r29.w
            mov r25.yz, r30.zzwz
            add r15.yzw, r12.xxyz, r25.xxyz
            mad r15.yzw, r9.xxyz, r11.zzzz, r15.yyzw
            dp3 r11.w, r15.yzwy, r15.yzwy
            sqrt r11.w, r11.w
            div r11.z, r11.z, r11.w
            add r11.z, r11.z, r11.z
            sqrt r11.z, r11.z
            mad r11.z, r4.w, l(5.000000), r11.z
            add r11.z, r11.z, l(-0.844800)
            mov r24.y, r27.z
            mov r24.z, r28.x
            dp3 r32.x, r15.yzwy, r24.xyzx
            mov r25.xy, r27.xwxx
            mov r25.z, r28.w
            dp3 r32.y, r15.yzwy, r25.xyzx
            mov r28.x, r27.y
            dp3 r32.z, r15.yzwy, r28.xyzx
            ubfe r11.w, l(9), l(16), r25.w
            utof r32.w, r11.w
            sample_l_indexable(texturecubearray)(float,float,float,float) r15.yzw, r32.xyzw, t8.wxyz, s2, r11.z
            and r26.xzw, r15.yyzw, l(0x7fffffff, 0, 0x7fffffff, 0x7fffffff)
            ieq r26.xzw, r26.xxzw, l(0x7f800000, 0, 0x7f800000, 0x7f800000)
            or r11.z, r26.z, r26.x
            or r11.z, r26.w, r11.z
            movc r15.yzw, r11.zzzz, l(0,1.000000,1.000000,0), r15.yyzw
            dp3 r27.x, r12.xyzx, r24.xyzx
            dp3 r27.y, r12.xyzx, r25.xyzx
            dp3 r27.z, r12.xyzx, r28.xyzx
            mad_sat r12.xyz, r27.xyzx, r29.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
            mov r30.z, r31.x
            mad r12.xyz, r12.xyzx, r30.xyzx, r31.yzwy
            dp3 r32.x, v2.xyzx, r24.xyzx
            dp3 r32.y, v2.xyzx, r25.xyzx
            dp3 r32.z, v2.xyzx, r28.xyzx
            lt r24.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r32.xyzx
            movc r14.z, r24.x, l(0), l(0.500000)
            add r25.xyz, r12.xyzx, r14.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r25.xyz, r25.xyzx, t17.xyzw, s4, l(0.000000)
            mul r26.xzw, r32.xxyz, r32.xxyz
            mul r26.xzw, r10.wwww, r26.xxzw
            movc r16.z, r24.y, l(0), l(0.500000)
            add r24.xyw, r12.xyxz, r16.xyxz
            sample_l_indexable(texture3d)(float,float,float,float) r24.xyw, r24.xywx, t18.xywz, s4, l(0.000000)
            mul r24.xyw, r26.zzzz, r24.xyxw
            mad r24.xyw, r25.xyxz, r26.xxxx, r24.xyxw
            movc r19.z, r24.z, l(0), l(0.500000)
            add r12.xyz, r12.xyzx, r19.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r12.xyz, r12.xyzx, t19.xyzw, s4, l(0.000000)
            mad r12.xyz, r12.xyzx, r26.wwww, r24.xywx
            sample_l_indexable(texturecubearray)(float,float,float,float) r24.xyz, r32.xyzw, t8.xyzw, s2, l(6.000000)
            and r25.xyz, r24.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
            ieq r25.xyz, r25.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
            or r11.z, r25.y, r25.x
            or r11.z, r25.z, r11.z
            movc r24.xyz, r11.zzzz, l(1.000000,1.000000,0,0), r24.xyzx
            mul r25.xyz, r12.xyzx, r24.xyzx
            dp3 r11.z, r25.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r22.xyz, r12.xyzx, r24.xyzx, r22.xyzx
            mul r11.w, r6.w, r11.z
            mul r12.xyz, r10.wwww, r15.yzwy
            dp3 r10.w, r12.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r10.w, r6.w, r11.z, r10.w
            div r10.w, r11.w, r10.w
            mov r24.x, r22.w
            mov r24.yz, r23.xxyx
            mad r23.xyw, r12.yzyx, r10.wwww, r24.yzyx
            mov r22.w, r23.w
          endif 
        endif 
      endif 
    endloop 
    mov r20.xyzw, r22.xyzw
    mov r21.yzw, r23.xxyz
    iadd r7.w, r7.w, l(32)
  endloop 
  lt r7.y, r21.w, l(1.000000)
  if_nz r7.y
    mov r11.xy, l(0,0,0,0)
    mov r12.w, l(0)
    mov r13.yz, l(0,0,1.000000,0)
    mov r14.xy, l(0,0,0,0)
    mov r15.x, l(1.000000)
    mov r16.xy, l(0,0,0,0)
    mov r19.xy, l(0,0,0,0)
    mov r22.x, r20.w
    mov r22.yzw, r21.yyzw
    mov r7.yzw, r20.xxyz
    mov r8.y, r21.w
    mov r8.z, l(0)
    loop 
      uge r8.w, r8.z, r2.w
      breakc_nz r8.w
      ushr r11.z, r8.z, l(5)
      iadd r12.xyz, r10.xyzx, r11.xyzx
      ld_indexable(texture2darray)(uint,uint,uint,uint) r8.w, r12.xyzw, t7.yzwx
      ieq r10.w, r4.x, r8.z
      ubfe r11.z, r4.y, l(0), r8.w
      movc r8.w, r10.w, r11.z, r8.w
      iadd r10.w, r8.z, cb2[0].x
      mov r23.xyzw, r22.xyzw
      mov r12.xyz, r7.yzwy
      mov r11.z, r8.y
      mov r11.w, r8.w
      loop 
        breakc_z r11.w
        firstbit_lo r13.w, r11.w
        ishl r14.w, l(1), r13.w
        and r15.z, r11.w, r14.w
        if_nz r15.z
          xor r11.w, r11.w, r14.w
          iadd r14.w, r10.w, r13.w
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r24.xyzw, r14.w, l(0), t11.xyzw
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r25.xy, r14.w, l(16), t11.xyxx
          add r24.xyz, r24.xyzx, -v5.xyzx
          mov r25.z, r24.w
          lt r24.xyz, |r24.xyzx|, r25.zxyz
          and r14.w, r24.y, r24.x
          and r14.w, r24.z, r14.w
          if_nz r14.w
            iadd r13.w, r8.z, r13.w
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r13.w, l(0), t15.wxyz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r15.zw, r13.w, l(96), t15.xxxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r13.w, l(116), t15.zwxy
            add r26.xyz, -r24.yzwy, v5.xyzx
            and r14.w, r25.w, l(0x0000ffff)
            ubfe r16.w, l(6), l(25), r25.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r14.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r14.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r14.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r14.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r14.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r14.w, l(80), t16.xyzw
            dp3 r18.w, r27.xyzx, r26.xyzx
            add_sat r18.w, r27.w, r18.w
            dp3 r19.w, r28.xyzx, r26.xyzx
            add_sat r19.w, r28.w, r19.w
            mul r18.w, r18.w, r19.w
            dp3 r19.w, r29.xyzx, r26.xyzx
            add_sat r19.w, r29.w, r19.w
            mul r18.w, r18.w, r19.w
            dp3 r19.w, r30.xyzx, r26.xyzx
            add_sat r19.w, r30.w, r19.w
            mul r18.w, r18.w, r19.w
            dp3 r19.w, r31.xyzx, r26.xyzx
            add_sat r19.w, r31.w, r19.w
            mul r18.w, r18.w, r19.w
            dp3 r19.w, r32.xyzx, r26.xyzx
            add_sat r19.w, r32.w, r19.w
            mul r13.x, r18.w, r19.w
            and r18.w, r15.z, l(1)
            movc r27.xy, r18.wwww, r13.xyxx, r13.zxzz
            mov r13.x, r15.z
            mov r28.xy, r27.xyxx
            mov r18.w, l(1)
            loop 
              ige r19.w, r18.w, r16.w
              breakc_nz r19.w
              iadd r19.w, r14.w, r18.w
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r19.w, l(0), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r19.w, l(16), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r19.w, l(32), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r19.w, l(48), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r19.w, l(64), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r19.w, l(80), t16.xyzw
              dp3 r19.w, r29.xyzx, r26.xyzx
              add_sat r19.w, r29.w, r19.w
              mul r19.w, r19.w, r28.x
              dp3 r24.w, r30.xyzx, r26.xyzx
              add_sat r24.w, r30.w, r24.w
              mul r19.w, r19.w, r24.w
              dp3 r24.w, r31.xyzx, r26.xyzx
              add_sat r24.w, r31.w, r24.w
              mul r19.w, r19.w, r24.w
              dp3 r24.w, r32.xyzx, r26.xyzx
              add_sat r24.w, r32.w, r24.w
              mul r19.w, r19.w, r24.w
              dp3 r24.w, r33.xyzx, r26.xyzx
              add_sat r24.w, r33.w, r24.w
              mul r19.w, r19.w, r24.w
              dp3 r24.w, r34.xyzx, r26.xyzx
              add_sat r24.w, r34.w, r24.w
              mul r28.x, r19.w, r24.w
              ushr r26.w, r13.x, l(2)
              ubfe r27.z, l(1), l(2), r13.x
              and r27.w, r26.w, l(2)
              max r28.z, r28.x, r28.y
              mad r19.w, -r19.w, r24.w, l(1.000000)
              mul r19.w, r19.w, r28.y
              movc r15.y, r27.w, r19.w, r28.z
              movc r28.xy, r27.zzzz, r28.xyxx, r15.xyxx
              iadd r18.w, r18.w, l(1)
              mov r13.x, r26.w
            endloop 
            add_sat r13.x, -r11.z, r28.y
            mul r14.w, r15.w, r13.x
            lt r15.y, l(0.000000), r14.w
            if_nz r15.y
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r13.w, l(16), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r13.w, l(32), t15.yxwz
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r13.w, l(48), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r13.w, l(64), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r13.w, l(80), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r13.w, l(132), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r13.w, l(148), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r13.w, l(164), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r13.w, l(180), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r13.w, l(196), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xy, r13.w, l(212), t15.xyxx
              mad r23.w, r13.x, r15.w, r23.w
              mul r13.x, r25.z, r14.w
              mov r25.z, r33.z
              dp3 r13.w, r9.xyzx, r25.xyzx
              dp3 r14.w, r26.xyzx, r25.xyzx
              add r14.w, -r33.w, r14.w
              ge r15.y, r14.w, l(0.000000)
              max r14.w, r5.w, |r14.w|
              movc r14.w, r15.y, r14.w, -r14.w
              max r13.w, -r13.w, l(0.00000010)
              div r13.w, r14.w, r13.w
              min r13.w, |r13.w|, l(131072.000000)
              mov r33.z, r34.z
              dp3 r14.w, r9.xyzx, r33.xyzx
              dp3 r15.y, r26.xyzx, r33.xyzx
              add r15.y, -r34.w, r15.y
              ge r15.z, r15.y, l(0.000000)
              max r15.y, r5.w, |r15.y|
              movc r15.y, r15.z, r15.y, -r15.y
              max r14.w, -r14.w, l(0.00000010)
              div r14.w, r15.y, r14.w
              min r13.w, r13.w, |r14.w|
              mov r34.z, r35.z
              dp3 r14.w, r9.xyzx, r34.xyzx
              dp3 r15.y, r26.xyzx, r34.xyzx
              add r15.y, -r35.w, r15.y
              ge r15.z, r15.y, l(0.000000)
              max r15.y, r5.w, |r15.y|
              movc r15.y, r15.z, r15.y, -r15.y
              max r14.w, -r14.w, l(0.00000010)
              div r14.w, r15.y, r14.w
              min r13.w, r13.w, |r14.w|
              mov r35.z, r36.z
              dp3 r14.w, r9.xyzx, r35.xyzx
              dp3 r15.y, r26.xyzx, r35.xyzx
              add r15.y, -r36.w, r15.y
              ge r15.z, r15.y, l(0.000000)
              max r15.y, r5.w, |r15.y|
              movc r15.y, r15.z, r15.y, -r15.y
              max r14.w, -r14.w, l(0.00000010)
              div r14.w, r15.y, r14.w
              min r13.w, r13.w, |r14.w|
              mov r36.z, r37.x
              dp3 r14.w, r9.xyzx, r36.xyzx
              dp3 r15.y, r26.xyzx, r36.xyzx
              add r15.y, -r37.y, r15.y
              ge r15.z, r15.y, l(0.000000)
              max r15.y, r5.w, |r15.y|
              movc r15.y, r15.z, r15.y, -r15.y
              max r14.w, -r14.w, l(0.00000010)
              div r14.w, r15.y, r14.w
              min r13.w, r13.w, |r14.w|
              mov r38.zw, r37.zzzw
              dp3 r14.w, r9.zxyz, r38.xzwx
              dp3 r15.y, r26.zxyz, r38.xzwx
              add r15.y, -r38.y, r15.y
              ge r15.z, r15.y, l(0.000000)
              max r15.y, r5.w, |r15.y|
              movc r15.y, r15.z, r15.y, -r15.y
              max r14.w, -r14.w, l(0.00000010)
              div r14.w, r15.y, r14.w
              min r13.w, r13.w, |r14.w|
              mov r25.x, r30.w
              mov r25.yz, r31.zzwz
              add r15.yzw, r26.xxyz, r25.xxyz
              mad r15.yzw, r9.xxyz, r13.wwww, r15.yyzw
              dp3 r14.w, r15.yzwy, r15.yzwy
              sqrt r14.w, r14.w
              div r13.w, r13.w, r14.w
              add r13.w, r13.w, r13.w
              sqrt r13.w, r13.w
              mad r13.w, r4.w, l(5.000000), r13.w
              add r13.w, r13.w, l(-0.844800)
              mov r24.y, r27.z
              mov r24.z, r29.x
              dp3 r33.x, r15.yzwy, r24.xyzx
              mov r25.xy, r27.xwxx
              mov r25.z, r29.w
              dp3 r33.y, r15.yzwy, r25.xyzx
              mov r29.x, r27.y
              dp3 r33.z, r15.yzwy, r29.xyzx
              ubfe r14.w, l(9), l(16), r25.w
              utof r33.w, r14.w
              sample_l_indexable(texturecubearray)(float,float,float,float) r15.yzw, r33.xyzw, t8.wxyz, s2, r13.w
              and r27.xyz, r15.yzwy, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
              ieq r27.xyz, r27.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
              or r13.w, r27.y, r27.x
              or r13.w, r27.z, r13.w
              movc r15.yzw, r13.wwww, l(0,1.000000,1.000000,0), r15.yyzw
              dp3 r27.x, r26.xyzx, r24.xyzx
              dp3 r27.y, r26.xyzx, r25.xyzx
              dp3 r27.z, r26.xyzx, r29.xyzx
              mad_sat r26.xyz, r27.xyzx, r30.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
              mov r31.z, r32.x
              mad r26.xyz, r26.xyzx, r31.xyzx, r32.yzwy
              dp3 r33.x, v2.xyzx, r24.xyzx
              dp3 r33.y, v2.xyzx, r25.xyzx
              dp3 r33.z, v2.xyzx, r29.xyzx
              lt r24.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r33.xyzx
              movc r14.z, r24.x, l(0), l(0.500000)
              add r25.xyz, r14.xyzx, r26.xyzx
              sample_l_indexable(texture3d)(float,float,float,float) r25.xyz, r25.xyzx, t17.xyzw, s4, l(0.000000)
              mul r27.xyz, r33.xyzx, r33.xyzx
              mul r27.xyz, r13.xxxx, r27.xyzx
              movc r16.z, r24.y, l(0), l(0.500000)
              add r24.xyw, r16.xyxz, r26.xyxz
              sample_l_indexable(texture3d)(float,float,float,float) r24.xyw, r24.xywx, t18.xywz, s4, l(0.000000)
              mul r24.xyw, r27.yyyy, r24.xyxw
              mad r24.xyw, r25.xyxz, r27.xxxx, r24.xyxw
              movc r19.z, r24.z, l(0), l(0.500000)
              add r25.xyz, r19.xyzx, r26.xyzx
              sample_l_indexable(texture3d)(float,float,float,float) r25.xyz, r25.xyzx, t19.xyzw, s4, l(0.000000)
              mad r24.xyz, r25.xyzx, r27.zzzz, r24.xywx
              sample_l_indexable(texturecubearray)(float,float,float,float) r25.xyz, r33.xyzw, t8.xyzw, s2, l(6.000000)
              and r26.xyz, r25.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
              ieq r26.xyz, r26.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
              or r13.w, r26.y, r26.x
              or r13.w, r26.z, r13.w
              movc r25.xyz, r13.wwww, l(1.000000,1.000000,0,0), r25.xyzx
              mul r26.xyz, r24.xyzx, r25.xyzx
              dp3 r13.w, r26.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
              mad r12.xyz, r24.xyzx, r25.xyzx, r12.xyzx
              mul r14.z, r6.w, r13.w
              mul r15.yzw, r13.xxxx, r15.yyzw
              dp3 r13.x, r15.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
              mad r13.x, r6.w, r13.w, r13.x
              div r13.x, r14.z, r13.x
              mad r23.xyz, r15.yzwy, r13.xxxx, r23.xyzx
            endif 
          endif 
        endif 
      endloop 
      mov r22.xyzw, r23.xyzw
      mov r7.yzw, r12.xxyz
      iadd r8.z, r8.z, l(32)
    endloop 
    mov r21.xyzw, r22.zxyw
    mov r20.xyz, r7.yzwy
    mov r21.xyzw, r21.yzxw
  else 
    mov r21.x, r20.w
  endif 
  max r2.w, r21.w, l(1.000000)
  rcp r2.w, r2.w
  mov_sat r21.w, r21.w
  mul r17.xyz, r2.wwww, r20.xyzx
  mul r18.xyz, r2.wwww, r21.xyzx
  lt r4.x, r21.w, l(0.990000)
  if_nz r4.x
    add r4.x, -r21.w, l(1.000000)
    mul r4.y, r4.x, cb2[19].x
    add r7.yzw, v5.xxyz, -cb2[35].xxyz
    mul r11.x, r7.y, cb2[35].w
    mul r11.yz, r7.zzwz, cb2[36].xxyx
    add_sat r7.yzw, r11.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
    mul r11.xy, r7.yzyy, cb2[36].zwzz
    mul r11.z, r7.w, cb2[37].x
    add r7.yzw, r11.xxyz, cb2[37].yyzw
    lt r8.yzw, l(0.000000, 0.000000, 0.000000, 0.000000), v2.xxyz
    movc r11.xyz, r8.yzwy, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
    mov r11.w, l(0)
    add r8.yzw, r7.yyzw, r11.wwwx
    sample_l_indexable(texture3d)(float,float,float,float) r8.yzw, r8.yzwy, t17.wxyz, s4, l(0.000000)
    mul r12.xyz, v2.xyzx, v2.xyzx
    mul r12.xyz, r4.yyyy, r12.xyzx
    add r13.xyz, r7.yzwy, r11.wwyw
    sample_l_indexable(texture3d)(float,float,float,float) r13.xyz, r13.xyzx, t18.xyzw, s4, l(0.000000)
    mul r13.xyz, r12.yyyy, r13.xyzx
    mad r8.yzw, r8.yyzw, r12.xxxx, r13.xxyz
    add r7.yzw, r7.yyzw, r11.wwwz
    sample_l_indexable(texture3d)(float,float,float,float) r7.yzw, r7.yzwy, t19.wxyz, s4, l(0.000000)
    mad r7.yzw, r7.yyzw, r12.zzzz, r8.yyzw
    mov r11.xyz, v2.xyzx
    mov r11.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r8.yzw, r11.xyzw, t8.wxyz, s2, l(6.000000)
    mul r7.yzw, r7.yyzw, r8.yyzw
    dp3 r4.y, r7.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
    mad r17.xyz, r20.xyzx, r2.wwww, r7.yzwy
    mov r9.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r7.yzw, r9.xyzw, t8.wxyz, s2, r5.z
    mad r2.w, cb2[19].x, r4.x, -r4.y
    mad r2.w, r2.y, r2.w, r4.y
    mad r18.xyz, r7.yzwy, r2.wwww, r18.xyzx
  endif 
else 
  mov r18.x, r17.w
endif 
mad r2.yw, r2.xxxy, l(0.000000, 0.984375, 0.000000, 0.984375), l(0.000000, 0.00781250, 0.000000, 0.00781250)
sample_l_indexable(texture2d)(float,float,float,float) r2.yw, r2.ywyy, t5.zxwy, s2, l(0.000000)
mul r11.xyz, r2.yyyy, r18.yzxy
mul r4.xyw, r2.wwww, r18.xyxz
sqrt r2.y, r4.z
mad r2.y, r2.y, l(0.500000), l(0.500000)
mul r2.y, r2.y, r2.y
mul r2.w, r2.y, l(0.500000)
mad r2.y, -r2.y, l(0.500000), l(1.000000)
mad r5.z, r2.x, r2.y, r2.w
mul r2.yw, r2.yyyw, r5.zzzz
if_z cb0[20].w
  dp3 r5.z, v2.xyzx, cb2[17].xyzx
  ge r5.z, l(0.000000), |r5.z|
  if_nz r5.z
    mov r5.w, l(0)
  endif 
  if_z r5.z
    mul r7.yzw, v5.yyyy, cb2[29].xxyz
    mad r7.yzw, v5.xxxx, cb2[28].xxyz, r7.yyzw
    mad r7.yzw, v5.zzzz, cb2[30].xxyz, r7.yyzw
    add r7.yzw, r7.yyzw, cb2[31].xxyz
    add r5.z, r7.w, -cb2[17].w
    mad r5.z, -r5.z, l(0.00006104), l(1.000000)
    mov_sat r6.w, r5.z
    eq r6.w, r5.z, r6.w
    if_nz r6.w
      mov r6.w, l(0)
      mov r8.y, l(0)
      loop 
        ge r8.z, r6.w, l(3.000000)
        breakc_nz r8.z
        ftou r8.z, r6.w
        add r12.xy, r7.yzyy, -cb2[r8.z + 20].xyxx
        max r8.w, |r12.y|, |r12.x|
        mul r8.y, r8.w, cb2[r8.z + 20].z
        lt r8.z, r8.y, l(1.000000)
        if_nz r8.z
          break 
        endif 
        add r6.w, r6.w, l(1.000000)
        mov r8.y, l(0)
      endloop 
    else 
      mov r6.w, l(3.000000)
      mov r8.y, l(0)
    endif 
    ge r8.z, r6.w, l(3.000000)
    if_nz r8.z
      mul r12.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
      rcp r13.xz, r12.xxxx
      mov r13.y, -r13.z
      mad r12.xyz, r7.yzyy, r13.xyzx, r12.yzyy
      add r13.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
      max r12.xyz, r12.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
      min r12.xyz, r13.xyzx, r12.xyzx
      mul r13.xy, r12.zyzz, cb2[32].xxxx
      round_ni r13.xy, r13.xyxx
      mul r8.w, r13.y, cb2[27].x
      mad r8.w, r8.w, cb2[32].x, r13.x
      ftou r8.w, r8.w
      iadd r8.w, r8.w, cb2[32].y
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r9.w, r8.w, l(0), t23.xxxx
      and r10.w, r9.w, l(0x40000000)
      ishl r12.w, r9.w, l(2)
      if_z r10.w
        and r10.w, r9.w, l(0x01ffffff)
        iadd r13.x, r8.w, r10.w
        ushr r8.w, r9.w, l(25)
        utof r8.w, r8.w
        mul r12.xyz, r8.wwww, r12.xyzx
        frc r12.xyz, r12.xyzx
        mul r12.xyz, r12.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
        ftou r12.xyz, r12.xyzx
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r13.z, r13.x, l(0), t23.xxxx
        ushr r14.xy, r12.zyzz, l(6, 6, 0, 0)
        and r8.w, r13.z, l(0xc0000000)
        iadd r9.w, r13.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r9.w, r9.w, l(0), t23.xxxx
        movc r9.w, r14.y, r13.z, r9.w
        ushr r10.w, r9.w, l(13)
        movc r9.w, r14.x, r10.w, r9.w
        and r9.w, r9.w, l(8191)
        iadd r14.x, r9.w, r13.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r14.z, r14.x, l(0), t23.xxxx
        mov r13.y, l(0)
        mov r14.y, l(1)
        movc r14.xyz, r8.wwww, r13.xyzx, r14.xyzx
        movc r15.yz, r8.wwww, l(0,6,1,0), l(0,5,2,0)
        ushr r16.xy, r12.zyzz, r15.yyyy
        and r16.xy, r16.xyxx, l(1, 1, 0, 0)
        and r9.w, r14.z, l(0xc0000000)
        iadd r10.w, r14.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r10.w, r10.w, l(0), t23.xxxx
        movc r10.w, r16.y, r14.z, r10.w
        ushr r13.w, r10.w, l(13)
        movc r10.w, r16.x, r13.w, r10.w
        and r10.w, r10.w, l(8191)
        iadd r15.x, r10.w, r14.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.w, r15.x, l(0), t23.xxxx
        movc r14.xyz, r9.wwww, r14.xyzx, r15.xzwx
        movc r13.xyz, r8.wwww, r13.xyzx, r14.xyzx
        and r8.w, r13.z, l(0xc0000000)
        if_z r8.w
          iadd r8.w, -r13.y, l(6)
          ushr r14.xy, r12.zyzz, r8.wwww
          or r8.w, r13.z, l(0x40000000)
          bfi r9.w, l(1), l(1), r14.y, l(0)
          bfi r9.w, l(1), l(0), r14.x, r9.w
          imul null, r9.w, r9.w, l(10)
          ushr r8.w, r8.w, r9.w
          and r8.w, r8.w, l(1023)
          iadd r14.x, r8.w, r13.x
          ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r14.w, r14.x, l(0), t23.xxxx
          iadd r14.yz, r13.yyyy, l(0, 1, 2, 0)
          iadd r8.w, -r14.y, l(6)
          ushr r13.yw, r12.zzzy, r8.wwww
          and r8.w, r14.w, l(0xc0000000)
          or r9.w, r14.w, l(0x40000000)
          bfi r10.w, l(1), l(1), r13.w, l(0)
          bfi r10.w, l(1), l(0), r13.y, r10.w
          imul null, r10.w, r10.w, l(10)
          ushr r9.w, r9.w, r10.w
          and r9.w, r9.w, l(1023)
          iadd r15.x, r9.w, r14.x
          ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.z, r15.x, l(0), t23.xxxx
          mov r15.y, r14.z
          movc r15.xyz, r8.wwww, r14.xywx, r15.xyzx
          iadd r9.w, -r15.y, l(6)
          ushr r13.yw, r12.zzzy, r9.wwww
          and r9.w, r15.z, l(0xc0000000)
          or r10.w, r15.z, l(0x40000000)
          bfi r13.w, l(1), l(1), r13.w, l(0)
          bfi r13.y, l(1), l(0), r13.y, r13.w
          imul null, r13.y, r13.y, l(10)
          ushr r10.w, r10.w, r13.y
          and r10.w, r10.w, l(1023)
          iadd r16.x, r10.w, r15.x
          ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.y, r16.x, l(0), t23.xxxx
          movc r13.yw, r9.wwww, r15.xxxz, r16.xxxy
          movc r13.xz, r8.wwww, r14.xxwx, r13.yywy
        endif 
        and r8.w, r13.z, l(0xc0000000)
        if_z r8.w
          ubfe r9.w, l(14), l(15), r13.z
          utof r9.w, r9.w
          mul r9.w, r9.w, cb2[27].w
          mul r9.w, r9.w, l(0.00006104)
          and r13.yw, r13.zzzz, l(0, 0x00007fff, 0, 0x20000000)
          utof r10.w, r13.y
          mul r10.w, r10.w, cb2[27].w
          mul r10.w, r10.w, l(0.00003052)
          and r13.y, r12.y, l(3)
          iadd r13.y, r13.y, r13.x
          iadd r13.y, r13.y, l(1)
          ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r13.y, r13.y, l(0), t23.xxxx
          bfi r14.xyz, l(2, 2, 1, 0), l(3, 1, 4, 0), r12.xyzx, l(0, 0, 0, 0)
          ushr r12.x, r13.y, r14.x
          and r12.x, r12.x, l(255)
          utof r12.x, r12.x
          mul r12.x, r10.w, r12.x
          mad r12.x, r12.x, l(0.00392157), r9.w
          iadd r12.y, r14.y, l(1)
          ubfe r12.z, l(1), l(1), r12.z
          iadd r12.y, r12.z, r12.y
          iadd r12.y, r12.y, r13.x
          ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r12.y, r12.y, l(0), t23.xxxx
          ushr r12.y, r12.y, r14.z
          and r12.y, r12.y, l(0x0000ffff)
          utof r12.y, r12.y
          mul r10.w, r10.w, r12.y
          mad r9.w, r10.w, l(0.00001526), r9.w
          movc r12.w, r13.w, r12.x, r9.w
        else 
          and r9.w, r13.z, l(0x80000000)
          iadd r10.w, r13.x, l(1)
          ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r10.w, r10.w, l(0), t23.xxxx
          movc r9.w, r9.w, r10.w, l(0)
          ishl r10.w, r13.z, l(2)
          ushr r12.x, r9.w, l(16)
          f16tof32 r12.x, r12.x
          and r9.w, r9.w, l(0x0000ffff)
          f16tof32 r9.w, r9.w
          mad r10.w, r7.y, r12.x, r10.w
          mad r9.w, r7.z, r9.w, r10.w
          movc r12.w, r8.w, r9.w, r12.w
        endif 
      endif 
      mad r7.w, -cb2[27].z, l(2.000000), r7.w
      lt r7.w, r12.w, r7.w
      movc r5.w, r7.w, l(0), l(1.000000)
    endif 
    if_z r8.z
      if_z cb2[58].y
        ftou r7.w, r6.w
        add r8.zw, r7.yyyz, -cb2[r7.w + 20].xxxy
        mul r8.zw, r8.zzzw, cb2[r7.w + 20].zzzz
        mad r12.xy, r8.zwzz, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
        itof r7.w, cb2[26].y
        add r12.z, r6.w, r7.w
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r7.w, r12.xyzx, t13.xxxx, s13, r5.z
        sample_l_indexable(texture2darray)(float,float,float,float) r8.z, r12.xyzx, t31.yzxw, s0, l(0.000000)
        add r7.w, r7.w, r8.z
        add_sat r7.w, r7.w, l(-1.000000)
        mul r8.z, r7.w, r7.w
        mul r5.w, r7.w, r8.z
      endif 
      if_nz cb2[58].y
        mov r12.x, -r5.x
        ftou r7.w, r6.w
        add r6.w, r6.w, l(1.000000)
        min r6.w, r6.w, l(2.000000)
        ftou r6.w, r6.w
        add r8.y, -r8.y, l(1.000000)
        mul r8.y, r8.y, l(28.000000)
        ftou r8.y, r8.y
        add r8.zw, r7.yyyz, -cb2[r7.w + 20].xxxy
        mul r8.zw, r8.zzzw, cb2[r7.w + 20].zzzz
        mad r8.zw, r8.zzzw, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
        add r7.yz, r7.yyzy, -cb2[r6.w + 20].xxyx
        mul r7.yz, r7.yyzy, cb2[r6.w + 20].zzzz
        mad r7.yz, r7.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
        mov r12.y, r6.x
        mov r12.z, r5.x
        mov r9.w, l(0)
        mov r10.w, l(0)
        loop 
          uge r12.w, r10.w, l(8)
          breakc_nz r12.w
          ult r12.w, r8.y, r10.w
          movc r13.xy, r12.wwww, r7.yzyy, r8.zwzz
          movc r13.z, r12.w, cb2[r6.w + 20].w, cb2[r7.w + 20].w
          movc r12.w, r12.w, r6.w, r7.w
          dp2 r14.x, icb[r10.w + 0].yxyy, r12.xyxx
          dp2 r14.y, icb[r10.w + 0].yxyy, r12.yzyy
          mad r13.xy, r14.xyxx, r13.zzzz, r13.xyxx
          iadd r12.w, r12.w, cb2[26].y
          utof r13.z, r12.w
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.w, r13.xyzx, t13.xxxx, s13, r5.z
          sample_l_indexable(texture2darray)(float,float,float,float) r13.x, r13.xyzx, t31.xyzw, s0, l(0.000000)
          add r12.w, r12.w, r13.x
          add_sat r12.w, r12.w, l(-1.000000)
          mad r9.w, r12.w, l(0.125000), r9.w
          iadd r10.w, r10.w, l(1)
        endloop 
        mul r5.z, r9.w, r9.w
        mul r5.w, r9.w, r5.z
      endif 
    endif 
  endif 
else 
  mov r5.w, l(1.000000)
endif 
dp3 r5.z, v2.xyzx, cb2[17].xyzx
lt r6.w, l(0.000000), |r5.z|
if_nz r6.w
  lt r6.w, l(0.000000), r5.w
  if_nz r6.w
    mul r6.w, r2.z, cb2[18].w
    mul r6.w, r6.w, l(0.250000)
    if_nz cb2[23].x
      add r12.xyz, v5.xyzx, cb1[24].xyzx
      mov r12.w, l(1.000000)
      dp4 r7.y, cb2[24].xyzw, r12.xyzw
      dp4 r7.z, cb2[25].xyzw, r12.xyzw
      frc r12.xy, r7.yzyy
      iadd r7.y, l(-1), cb2[23].x
      utof r12.z, r7.y
      sample_l_indexable(texture2darray)(float,float,float,float) r7.yzw, r12.xyzx, t20.wxyz, s2, l(0.000000)
      add r7.yzw, r7.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
      mad r7.yzw, cb2[23].yyyy, r7.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
      mul r7.yzw, r7.yyzw, cb2[18].xxyz
    else 
      mov r7.yzw, cb2[18].xxyz
    endif 
    if_z cb0[20].w
      ushr r8.y, cb2[53].x, l(16)
      ult r8.z, l(0), r8.y
      and r8.z, r0.w, r8.z
      if_nz r8.z
        iadd r8.y, r8.y, cb2[0].x
        iadd r8.y, r8.y, l(-1)
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r8.z, r8.y, l(52), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.xyzw, r8.y, l(68), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.xyzw, r8.y, l(84), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.xyzw, r8.y, l(132), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r8.y, l(148), t12.xyzw
        mad r8.w, |r5.z|, l(-0.200000), l(0.400000)
        lt r9.w, r5.z, l(0.000000)
        movc r8.w, r9.w, -r8.w, r8.w
        mad r16.xyz, v2.xyzx, r8.wwww, v5.xyzx
        mov r16.w, l(1.000000)
        dp4 r12.x, r12.xyzw, r16.xyzw
        dp4 r12.y, r13.xyzw, r16.xyzw
        mad r12.xy, r12.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
        add r12.xy, r15.zwzz, r12.xyxx
        mul r12.xy, r15.xyxx, r12.xyxx
        div r12.zw, r8.zzzz, r14.xxxz
        add r13.xy, -r12.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
        ge r13.xy, r12.xyxx, r13.xyxx
        ge r12.zw, r12.zzzw, r12.xxxy
        or r12.zw, r12.zzzw, r13.xxxy
        or r8.w, r12.w, r12.z
        if_z r8.w
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r8.w, r8.y, l(28), t12.xxxx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.xyzw, r8.y, l(100), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.zw, r8.y, l(164), t12.xxxy
          dp4 r8.y, r13.xyzw, r16.xyzw
          mov_sat r12.xy, r12.xyxx
          mad r13.xy, r12.xyxx, r14.xzxx, r14.ywyy
          add r8.y, r12.z, r8.y
          div r8.y, r8.y, r12.w
          max r8.y, r8.y, l(0.00006104)
          and r8.w, r8.w, l(0x0000ffff)
          if_nz cb2[58].y
            mov r12.x, -r5.x
            utof r14.z, r8.w
            mov r12.y, r6.x
            mov r12.z, r5.x
            mov r9.w, l(0)
            mov r10.w, l(0)
            loop 
              ige r12.w, r10.w, l(8)
              breakc_nz r12.w
              dp2 r15.x, icb[r10.w + 0].yxyy, r12.xyxx
              dp2 r15.y, icb[r10.w + 0].yxyy, r12.yzyy
              mad r14.xy, r15.xyxx, r8.zzzz, r13.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.w, r14.xyzx, t9.xxxx, s13, r8.y
              mad r9.w, r12.w, l(0.125000), r9.w
              iadd r10.w, r10.w, l(1)
            endloop 
          else 
            utof r13.z, r8.w
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r9.w, r13.xyzx, t9.xxxx, s13, r8.y
          endif 
          mul r8.y, r9.w, r9.w
          mul r8.y, r9.w, r8.y
        else 
          mov r8.y, l(1.000000)
        endif 
        mul r5.w, r5.w, r8.y
      else 
        and r8.y, cb2[53].x, l(0x0000ffff)
        ult r8.z, l(0), r8.y
        not r8.w, r0.w
        and r8.z, r8.w, r8.z
        if_nz r8.z
          iadd r8.y, r8.y, cb2[0].x
          iadd r8.y, r8.y, l(-1)
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r8.z, r8.y, l(52), t12.xxxx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.xyzw, r8.y, l(68), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.xyzw, r8.y, l(84), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.xyzw, r8.y, l(132), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r8.y, l(148), t12.xyzw
          mad r8.w, |r5.z|, l(-0.200000), l(0.400000)
          lt r9.w, r5.z, l(0.000000)
          movc r8.w, r9.w, -r8.w, r8.w
          mad r16.xyz, v2.xyzx, r8.wwww, v5.xyzx
          mov r16.w, l(1.000000)
          dp4 r12.x, r12.xyzw, r16.xyzw
          dp4 r12.y, r13.xyzw, r16.xyzw
          mad r12.xy, r12.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
          add r12.xy, r15.zwzz, r12.xyxx
          mul r12.xy, r15.xyxx, r12.xyxx
          div r12.zw, r8.zzzz, r14.xxxz
          add r13.xy, -r12.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
          ge r13.xy, r12.xyxx, r13.xyxx
          ge r12.zw, r12.zzzw, r12.xxxy
          or r12.zw, r12.zzzw, r13.xxxy
          or r8.w, r12.w, r12.z
          if_z r8.w
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r8.w, r8.y, l(28), t12.xxxx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.xyzw, r8.y, l(100), t12.xyzw
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.zw, r8.y, l(164), t12.xxxy
            dp4 r8.y, r13.xyzw, r16.xyzw
            mov_sat r12.xy, r12.xyxx
            mad r13.xy, r12.xyxx, r14.xzxx, r14.ywyy
            add r8.y, r12.z, r8.y
            div r8.y, r8.y, r12.w
            max r8.y, r8.y, l(0.00006104)
            and r8.w, r8.w, l(0x0000ffff)
            if_nz cb2[58].y
              mov r12.x, -r5.x
              utof r14.z, r8.w
              mov r12.y, r6.x
              mov r12.z, r5.x
              mov r9.w, l(0)
              mov r10.w, l(0)
              loop 
                ige r12.w, r10.w, l(8)
                breakc_nz r12.w
                dp2 r15.x, icb[r10.w + 0].yxyy, r12.xyxx
                dp2 r15.y, icb[r10.w + 0].yxyy, r12.yzyy
                mad r14.xy, r15.xyxx, r8.zzzz, r13.xyxx
                sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.w, r14.xyzx, t9.xxxx, s13, r8.y
                mad r9.w, r12.w, l(0.125000), r9.w
                iadd r10.w, r10.w, l(1)
              endloop 
            else 
              utof r13.z, r8.w
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r9.w, r13.xyzx, t9.xxxx, s13, r8.y
            endif 
            mul r8.y, r9.w, r9.w
            mul r8.y, r9.w, r8.y
          else 
            mov r8.y, l(1.000000)
          endif 
          mul r5.w, r5.w, r8.y
        endif 
      endif 
    endif 
    mad r8.y, -r2.x, l(0.500000), l(1.000000)
    mad r8.y, -|r5.z|, r8.y, l(1.000000)
    mul r8.y, r8.y, r8.y
    mad r8.y, -r8.y, l(0.620000), l(0.620000)
    add r8.y, -|r5.z|, r8.y
    mad r8.y, r4.z, r8.y, |r5.z|
    mul r8.y, r5.w, r8.y
    lt r8.z, l(0.000000), r5.z
    mad r12.xyz, r8.yyyy, r7.yzwy, r17.xyzx
    mov_sat r5.z, r5.z
    mad r13.xyz, -v5.xyzx, r1.xxxx, cb2[17].xyzx
    dp3 r1.x, r13.xyzx, r13.xyzx
    rsq r1.x, r1.x
    mul r13.xyz, r1.xxxx, r13.xyzx
    dp3 r1.x, r13.xyzx, r1.yzwy
    dp3 r8.y, v2.xyzx, r13.xyzx
    mad r8.w, |r8.y|, r2.z, -|r8.y|
    mad r8.y, |r8.y|, r8.w, l(1.000000)
    mad r8.w, r5.z, r2.y, r2.w
    mul r8.y, r8.y, r8.y
    mul r8.y, r8.w, r8.y
    rcp r8.y, r8.y
    mul r5.z, r6.w, r5.z
    mul r5.z, r5.z, r8.y
    mul r5.z, r5.w, r5.z
    mad r13.xyz, r5.zzzz, r7.yzwy, r4.xywx
    add_sat r1.x, -r1.x, l(1.000000)
    mul r5.w, r1.x, r1.x
    mul r5.w, r5.w, r5.w
    mul r1.x, r1.x, r5.w
    mul r1.x, r1.x, r5.z
    mad r14.xyz, r1.xxxx, r7.zwyz, r11.xyzx
    mov r12.w, r14.z
    mov r17.w, r11.z
    movc r17.xyzw, r8.zzzz, r12.xyzw, r17.xyzw
    mov r14.zw, r13.xxxy
    mov r11.zw, r4.xxxy
    movc r12.xyzw, r8.zzzz, r14.xyzw, r11.xyzw
    movc r4.w, r8.z, r13.z, r4.w
    mov r11.z, r17.w
    mov r11.xy, r12.xyxx
    mov r4.xy, r12.zwzz
  endif 
endif 
mov r12.x, -r5.x
not r1.x, r0.w
mad r2.x, -r2.x, l(0.500000), l(1.000000)
mov r13.xy, l(0,0,0,0)
mov r14.w, l(0)
mov r15.xyz, v5.xyzx
mov r15.w, l(1.000000)
mov r16.w, l(1.000000)
mov r12.z, r5.x
mov r18.w, l(1.000000)
mov r19.z, l(1.000000)
mov r20.w, l(1.000000)
mov r12.yw, r6.xxxx
mov r5.y, r12.w
mov r21.w, l(1.000000)
mov r6.y, r12.x
mov r6.z, r5.x
mov r22.w, l(1.000000)
mov r23.x, r6.x
mov r23.y, r12.x
mov r23.z, r5.x
mov r24.x, r6.x
mov r24.y, r12.x
mov r24.z, r5.x
mov r25.x, r6.x
mov r25.y, r12.x
mov r25.z, r5.x
mov r7.yzw, r17.xxyz
mov r26.xyz, r11.zxyz
mov r27.xyz, r4.xywx
mov r5.z, cb2[58].y
mov r5.w, l(0)
loop 
  uge r6.w, r5.w, cb2[0].x
  breakc_nz r6.w
  ushr r13.z, r5.w, l(5)
  iadd r14.xyz, r10.xyzx, r13.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r6.w, r14.xyzw, t6.yzwx
  mov r8.yzw, r7.yyzw
  mov r14.xyz, r26.xyzx
  mov r28.xyz, r27.xyzx
  mov r9.w, r5.z
  mov r10.w, r6.w
  loop 
    breakc_z r10.w
    firstbit_lo r11.w, r10.w
    ishl r13.z, l(1), r11.w
    and r13.w, r10.w, r13.z
    if_nz r13.w
      xor r10.w, r10.w, r13.z
      iadd r11.w, r5.w, r11.w
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r29.xyzw, r11.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r30.xy, r11.w, l(16), t11.xyxx
      add r29.xyz, r29.xyzx, -v5.xyzx
      mov r30.z, r29.w
      lt r29.xyz, |r29.xyzx|, r30.zxyz
      and r13.z, r29.y, r29.x
      and r13.z, r29.z, r13.z
      if_nz r13.z
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r29.xyzw, r11.w, l(0), t12.wxyz
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r30.xyzw, r11.w, l(16), t12.zxyw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r11.w, l(32), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r11.w, l(48), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r11.w, l(64), t12.yzwx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r11.w, l(80), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r11.w, l(96), t12.yzwx
        ubfe r13.z, l(3), l(24), r30.w
        switch r13.z
          case l(4)
          lt r13.z, l(0.000000), r35.x
          mov r36.xy, r34.zwzz
          mov r36.z, r35.w
          mad r37.xyz, -r36.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r29.yzwy
          add r38.xyz, r37.xyzx, -v5.xyzx
          dp3 r13.w, r36.xyzx, r38.xyzx
          div_sat r17.w, -r13.w, r35.x
          mad r39.xyz, r17.wwww, r36.xyzx, r37.xyzx
          movc r39.xyz, r13.zzzz, r39.xyzx, r29.yzwy
          add r39.xyz, r39.xyzx, -v5.xyzx
          dp3 r19.w, r39.xyzx, r39.xyzx
          rsq r23.w, r19.w
          mul r39.xyz, r23.wwww, r39.xyzx
          dp3 r23.w, v2.xyzx, r39.xyzx
          lt r24.w, l(0.000000), |r23.w|
          if_nz r24.w
            sqrt r24.w, r19.w
            mul r25.w, r32.x, r32.x
            div r19.w, r25.w, r19.w
            min r19.w, r19.w, l(1.000000)
            mad_sat r39.xy, r24.wwww, r31.xzxx, r31.ywyy
            mul r39.zw, r39.xxxy, r39.xxxy
            mad r39.xy, r39.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
            mul r39.xy, r39.xyxx, r39.zwzz
            mul r19.w, r19.w, r39.x
            mul r19.w, r39.y, r19.w
            lt r24.w, l(0.000000), r19.w
            if_nz r24.w
              ubfe r24.w, l(3), l(27), r30.w
              ine r24.w, r24.w, l(1)
              if_nz r24.w
                mad r24.w, |r23.w|, l(-0.200000), l(0.400000)
                lt r25.w, r23.w, l(0.000000)
                movc r24.w, r25.w, -r24.w, r24.w
                mad r39.xyz, v2.xyzx, r24.wwww, v5.xyzx
                add r39.xyz, -r33.xyzx, r39.xyzx
                max r24.w, |r39.z|, |r39.y|
                max r24.w, r24.w, |r39.x|
                div r24.w, r34.x, r24.w
                add r24.w, r34.y, r24.w
                dp3 r25.w, r39.xyzx, r39.xyzx
                rsq r25.w, r25.w
                max r24.w, r24.w, l(0.00006104)
                and r26.w, r30.w, l(0x0000ffff)
                utof r40.w, r26.w
                mov r26.w, l(0)
                mov r27.w, l(0)
                loop 
                  ige r28.w, r27.w, l(8)
                  breakc_nz r28.w
                  dp2 r41.y, icb[r27.w + 0].yxyy, r12.xyxx
                  dp2 r41.z, icb[r27.w + 0].yxyy, r12.yzyy
                  mul r41.yz, r32.yyyy, r41.yyzy
                  mul r41.x, r8.x, r41.y
                  mul r41.w, r7.x, r41.y
                  mad r40.xyz, r39.xyzx, r25.wwww, r41.xzwx
                  sample_c_lz_indexable(texturecubearray)(float,float,float,float) r28.w, r40.xyzw, t10.xxxx, s13, r24.w
                  mad r26.w, r28.w, l(0.125000), r26.w
                  iadd r27.w, r27.w, l(1)
                endloop 
              else 
                mov r26.w, l(1.000000)
              endif 
              mul r19.w, r19.w, r26.w
              lt r24.w, l(0.000000), r19.w
              if_nz r24.w
                mul r24.w, r2.z, r30.x
                mul r24.w, r24.w, l(0.250000)
                dp3 r25.w, r36.xyzx, r9.xyzx
                dp3 r27.w, r9.xyzx, r38.xyzx
                mad r28.w, -r25.w, r25.w, r35.x
                mad r13.w, r25.w, r27.w, -r13.w
                div_sat r13.w, r13.w, r28.w
                div r25.w, r28.w, r35.x
                mul r25.w, r25.w, l(10.000000)
                min r25.w, r25.w, l(1.000000)
                add r13.w, -r17.w, r13.w
                mad r13.w, r25.w, r13.w, r17.w
                mad r36.xyz, r13.wwww, r36.xyzx, r37.xyzx
                movc r36.xyz, r13.zzzz, r36.xyzx, r29.yzwy
                add r36.xyz, r36.xyzx, -v5.xyzx
                dp3 r13.z, r36.xyzx, r36.xyzx
                rsq r13.z, r13.z
                mul r37.xyz, r13.zzzz, r36.xyzx
                ubfe r13.w, l(4), l(16), r30.w
                ult r17.w, l(0), r13.w
                and r17.w, r0.w, r17.w
                if_nz r17.w
                  iadd r13.w, r13.w, cb2[0].x
                  iadd r13.w, r13.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.w, r13.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r13.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r13.w, l(116), t12.xyzw
                  mad r25.w, |r23.w|, l(-0.200000), l(0.400000)
                  lt r27.w, r23.w, l(0.000000)
                  movc r25.w, r27.w, -r25.w, r25.w
                  mad r16.xyz, v2.xyzx, r25.wwww, v5.xyzx
                  dp4 r25.w, r38.xyzw, r16.xyzw
                  dp4 r27.w, r39.xyzw, r16.xyzw
                  lt r28.w, r27.w, r25.w
                  if_z r28.w
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r13.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r13.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r13.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r13.w, l(148), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xy, r13.w, l(164), t12.xyxx
                    dp4 r38.x, r38.xyzw, r16.xyzw
                    dp4 r38.y, r39.xyzw, r16.xyzw
                    div r16.xy, r38.xyxx, r27.wwww
                    mad r16.xy, r16.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r16.xy, r41.zwzz, r16.xyxx
                    mul r16.xy, r41.xyxx, r16.xyxx
                    div r38.xy, r17.wwww, r40.xzxx
                    add r38.zw, -r38.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                    ge r38.zw, r16.xxxy, r38.zzzw
                    ge r38.xy, r38.xyxx, r16.xyxx
                    or r38.xy, r38.xyxx, r38.zwzz
                    or r16.z, r38.y, r38.x
                    mov_sat r16.xy, r16.xyxx
                    mad r38.xy, r16.xyxx, r40.xzxx, r40.ywyy
                    mul r16.x, r27.w, r42.y
                    mad r16.y, r42.x, r27.w, r25.w
                    div r16.x, r16.y, r16.x
                  else 
                    mov r16.z, l(-1)
                  endif 
                  or r16.y, r28.w, r16.z
                  if_z r16.y
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.w, r13.w, l(28), t12.xxxx
                    max r16.x, r16.x, l(0.00006104)
                    and r13.w, r13.w, l(0x0000ffff)
                    if_nz r9.w
                      utof r39.z, r13.w
                      mov r16.yz, l(0,0,0,0)
                      loop 
                        ige r25.w, r16.z, l(8)
                        breakc_nz r25.w
                        dp2 r40.x, icb[r16.z + 0].yxyy, r12.xwxx
                        dp2 r40.y, icb[r16.z + 0].xyxx, r5.xyxx
                        mad r39.xy, r40.xyxx, r17.wwww, r38.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r25.w, r39.xyzx, t9.xxxx, s13, r16.x
                        mad r16.y, r25.w, l(0.125000), r16.y
                        iadd r16.z, r16.z, l(1)
                      endloop 
                    else 
                      utof r38.z, r13.w
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r16.y, r38.xyzx, t9.xxxx, s13, r16.x
                    endif 
                    mul r13.w, r16.y, r16.y
                    mul r13.w, r16.y, r13.w
                  else 
                    mov r13.w, l(1.000000)
                  endif 
                  mul r19.w, r13.w, r19.w
                else 
                  ubfe r13.w, l(4), l(20), r30.w
                  ult r16.x, l(0), r13.w
                  and r16.x, r1.x, r16.x
                  if_nz r16.x
                    iadd r13.w, r13.w, cb2[0].x
                    iadd r13.w, r13.w, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.x, r13.w, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r13.w, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r13.w, l(116), t12.xyzw
                    mad r16.z, |r23.w|, l(-0.200000), l(0.400000)
                    lt r17.w, r23.w, l(0.000000)
                    movc r16.z, r17.w, -r16.z, r16.z
                    mad r18.xyz, v2.xyzx, r16.zzzz, v5.xyzx
                    dp4 r16.z, r38.xyzw, r18.xyzw
                    dp4 r17.w, r39.xyzw, r18.xyzw
                    lt r25.w, r17.w, r16.z
                    if_z r25.w
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r13.w, l(68), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r13.w, l(84), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r13.w, l(132), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r13.w, l(148), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xy, r13.w, l(164), t12.xyxx
                      dp4 r38.x, r38.xyzw, r18.xyzw
                      dp4 r38.y, r39.xyzw, r18.xyzw
                      div r18.xy, r38.xyxx, r17.wwww
                      mad r18.xy, r18.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                      add r18.xy, r41.zwzz, r18.xyxx
                      mul r18.xy, r41.xyxx, r18.xyxx
                      div r38.xy, r16.xxxx, r40.xzxx
                      add r38.zw, -r38.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                      ge r38.zw, r18.xxxy, r38.zzzw
                      ge r38.xy, r38.xyxx, r18.xyxx
                      or r38.xy, r38.xyxx, r38.zwzz
                      or r18.z, r38.y, r38.x
                      mov_sat r18.xy, r18.xyxx
                      mad r38.xy, r18.xyxx, r40.xzxx, r40.ywyy
                      mul r18.x, r17.w, r42.y
                      mad r16.z, r42.x, r17.w, r16.z
                      div r16.z, r16.z, r18.x
                    else 
                      mov r18.z, l(-1)
                    endif 
                    or r17.w, r25.w, r18.z
                    if_z r17.w
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.w, r13.w, l(28), t12.xxxx
                      max r16.z, r16.z, l(0.00006104)
                      and r13.w, r13.w, l(0x0000ffff)
                      if_nz r9.w
                        utof r18.z, r13.w
                        mov r17.w, l(0)
                        mov r25.w, l(0)
                        loop 
                          ige r27.w, r25.w, l(8)
                          breakc_nz r27.w
                          dp2 r39.x, icb[r25.w + 0].xyxx, r6.xyxx
                          dp2 r39.y, icb[r25.w + 0].yxyy, r6.xzxx
                          mad r18.xy, r39.xyxx, r16.xxxx, r38.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r18.x, r18.xyzx, t9.xxxx, s13, r16.z
                          mad r17.w, r18.x, l(0.125000), r17.w
                          iadd r25.w, r25.w, l(1)
                        endloop 
                      else 
                        utof r38.z, r13.w
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r17.w, r38.xyzx, t9.xxxx, s13, r16.z
                      endif 
                      mul r13.w, r17.w, r17.w
                      mul r13.w, r17.w, r13.w
                    else 
                      mov r13.w, l(1.000000)
                    endif 
                    mul r19.w, r13.w, r19.w
                  endif 
                endif 
                mad r13.w, -|r23.w|, r2.x, l(1.000000)
                mul r13.w, r13.w, r13.w
                mad r13.w, -r13.w, l(0.620000), l(0.620000)
                add r13.w, -|r23.w|, r13.w
                mad r13.w, r4.z, r13.w, |r23.w|
                mul r13.w, r19.w, r13.w
                mov r30.x, r29.x
                lt r16.x, l(0.000000), r23.w
                mad r18.xyz, r13.wwww, r30.xyzx, r8.yzwy
                dp3_sat r13.w, v2.xyzx, r37.xyzx
                mad r36.xyz, r36.xyzx, r13.zzzz, r1.yzwy
                dp3 r13.z, r36.xyzx, r36.xyzx
                rsq r13.z, r13.z
                mul r36.xyz, r13.zzzz, r36.xyzx
                dp3 r13.z, r36.xyzx, r1.yzwy
                dp3 r16.z, v2.xyzx, r36.xyzx
                mad r23.w, |r16.z|, r2.z, -|r16.z|
                mad r16.z, |r16.z|, r23.w, l(1.000000)
                mad r23.w, r13.w, r2.y, r2.w
                mul r16.z, r16.z, r16.z
                mul r16.z, r23.w, r16.z
                rcp r16.z, r16.z
                mul r13.w, r24.w, r13.w
                mul r13.w, r13.w, r16.z
                mul r13.w, r19.w, r13.w
                mad r36.xyz, r13.wwww, r30.xyzx, r28.xyzx
                add_sat r13.z, -r13.z, l(1.000000)
                mul r16.z, r13.z, r13.z
                mul r16.z, r16.z, r16.z
                mul r13.z, r13.z, r16.z
                mul r13.z, r13.z, r13.w
                mad r37.xyz, r13.zzzz, r30.xyzx, r14.xyzx
                movc r8.yzw, r16.xxxx, r18.xxyz, r8.yyzw
                movc r14.xyz, r16.xxxx, r37.xyzx, r14.xyzx
                movc r28.xyz, r16.xxxx, r36.xyzx, r28.xyzx
              endif 
            endif 
          endif 
          break 
          case l(2)
          mov r18.xy, r32.zwzz
          mov r18.z, r33.w
          add r18.xyz, r18.xyzx, -v5.xyzx
          dp3 r13.z, r18.xyzx, r18.xyzx
          rsq r13.z, r13.z
          mul r36.xyz, r13.zzzz, r18.xyzx
          dp3 r13.w, v2.xyzx, r36.xyzx
          lt r16.x, l(0.000000), |r13.w|
          if_nz r16.x
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r11.w, l(112), t12.yzwx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r11.w, l(128), t12.zxyw
            mov r38.xyz, r36.xyzx
            mov r38.w, r37.y
            dp4 r16.x, r38.xyzw, r15.xyzw
            lt r16.z, r16.x, l(1.000000)
            if_nz r16.z
              mov r39.xyz, l(1.000000,1.000000,1.000000,0)
              mov r16.z, l(0)
            else 
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r11.w, l(172), t12.yzwx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r11.w, l(188), t12.wxyz
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r11.w, l(204), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.w, r11.w, l(236), t12.xxxx
              add r43.xyz, r29.yzwy, -v5.xyzx
              mul r23.w, r32.x, r32.x
              dp3 r24.w, r43.xyzx, r43.xyzx
              div r23.w, r23.w, r24.w
              min r23.w, r23.w, l(1.000000)
              mad_sat r31.xy, r16.xxxx, r31.xzxx, r31.ywyy
              mul r31.zw, r31.xxxy, r31.xxxy
              mad r31.xy, r31.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
              mul r31.xy, r31.xyxx, r31.zwzz
              mul r23.w, r23.w, r31.x
              mul r23.w, r31.y, r23.w
              mov r33.w, r34.x
              dp4 r31.x, r33.xyzw, r15.xyzw
              mov r43.xyz, r34.yzwy
              mov r43.w, r35.w
              dp4 r31.y, r43.xyzw, r15.xyzw
              div r19.xy, r31.xyxx, r16.xxxx
              lt r16.x, r40.w, l(0.00048828)
              if_nz r16.x
                mov r41.y, r42.x
                mad_sat r31.xy, |r19.xyxx|, r41.zwzz, r41.xyxx
                mul r31.zw, r31.xxxy, r31.xxxy
                mad r31.xy, r31.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
                mul r31.xy, r31.xyxx, r31.zwzz
                mul r16.x, r31.y, r31.x
              else 
                mov r40.w, r41.y
                mul_sat r31.xyzw, |r19.yyxx|, r40.xyzw
                log r31.xyzw, r31.xyzw
                mul r31.xyzw, r31.xyzw, r41.xxxx
                exp r31.xyzw, r31.xyzw
                add r31.xy, r31.zwzz, r31.xyxx
                log r31.xy, r31.xyxx
                mul r31.xy, r31.xyxx, r42.xxxx
                exp r31.xy, r31.xyxx
                mul r24.w, r31.x, r41.z
                mad r25.w, r41.w, r31.y, l(-1.000000)
                mad r24.w, r41.w, r31.y, -r24.w
                div_sat r24.w, r25.w, r24.w
                mul r25.w, r24.w, r24.w
                mad r24.w, r24.w, l(-2.000000), l(3.000000)
                mul r16.x, r24.w, r25.w
              endif 
              mul r16.z, r16.x, r23.w
              and r16.x, r19.w, l(255)
              if_nz r16.x
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyz, r11.w, l(220), t12.xyzx
                dp3 r19.w, r42.yzwy, r19.xyzx
                dp3 r19.x, r31.xyzx, r19.xyzx
                frc r31.xy, r19.wxww
                iadd r16.x, r16.x, l(-1)
                utof r31.z, r16.x
                sample_l_indexable(texture2darray)(float,float,float,float) r39.xyz, r31.xyzx, t20.xyzw, s2, l(0.000000)
              else 
                mov r39.xyz, l(1.000000,1.000000,1.000000,0)
              endif 
            endif 
            mov r29.yz, r30.yyzy
            mul r19.xyw, r39.xyxz, r29.xyxz
            lt r16.x, l(0.000000), r16.z
            if_nz r16.x
              ubfe r16.x, l(3), l(27), r30.w
              ine r16.x, r16.x, l(1)
              if_nz r16.x
                mad r16.x, |r13.w|, l(-0.200000), l(0.400000)
                lt r23.w, r13.w, l(0.000000)
                movc r16.x, r23.w, -r16.x, r16.x
                mad r20.xyz, v2.xyzx, r16.xxxx, v5.xyzx
                mov r36.xyz, r35.xyzx
                dp4 r16.x, r36.xyzw, r20.xyzw
                dp4 r23.w, r38.xyzw, r20.xyzw
                ge r24.w, r23.w, r16.x
                if_nz r24.w
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.y, r11.w, l(144), t12.xxxx
                  mov r33.w, r34.x
                  dp4 r29.x, r33.xyzw, r20.xyzw
                  mov r35.xyz, r34.yzwy
                  dp4 r29.y, r35.xyzw, r20.xyzw
                  div r20.xy, r29.xyxx, r23.wwww
                  mad_sat r20.xy, r20.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  mad r20.xy, r20.xyxx, r37.zwzz, r37.xyxx
                  div r11.w, r16.x, r23.w
                  max r11.w, r11.w, l(0.00006104)
                  and r16.x, r30.w, l(0x0000ffff)
                  if_nz r9.w
                    utof r29.z, r16.x
                    mov r23.w, l(0)
                    mov r24.w, l(0)
                    loop 
                      ige r25.w, r24.w, l(8)
                      breakc_nz r25.w
                      dp2 r31.x, icb[r24.w + 0].xyxx, r23.xyxx
                      dp2 r31.y, icb[r24.w + 0].yxyy, r23.xzxx
                      mad r29.xy, r31.xyxx, r32.yyyy, r20.xyxx
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r25.w, r29.xyzx, t9.xxxx, s13, r11.w
                      mad r23.w, r25.w, l(0.125000), r23.w
                      iadd r24.w, r24.w, l(1)
                    endloop 
                  else 
                    utof r20.z, r16.x
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.w, r20.xyzx, t9.xxxx, s13, r11.w
                  endif 
                  mul r11.w, r23.w, r23.w
                  mul r11.w, r23.w, r11.w
                else 
                  mov r11.w, l(1.000000)
                endif 
              else 
                mov r11.w, l(1.000000)
              endif 
              mul r11.w, r11.w, r16.z
              lt r16.x, l(0.000000), r11.w
              if_nz r16.x
                mul r16.x, r2.z, r30.x
                mul r16.x, r16.x, l(0.250000)
                ubfe r16.z, l(4), l(16), r30.w
                ult r20.x, l(0), r16.z
                and r20.x, r0.w, r20.x
                if_nz r20.x
                  iadd r16.z, r16.z, cb2[0].x
                  iadd r16.z, r16.z, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r20.x, r16.z, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r29.xyzw, r16.z, l(68), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r16.z, l(84), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r16.z, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r16.z, l(116), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r16.z, l(132), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r16.z, l(148), t12.xyzw
                  mad r20.y, |r13.w|, l(-0.200000), l(0.400000)
                  lt r20.z, r13.w, l(0.000000)
                  movc r20.y, r20.z, -r20.y, r20.y
                  mad r21.xyz, v2.xyzx, r20.yyyy, v5.xyzx
                  dp4 r29.x, r29.xyzw, r21.xyzw
                  dp4 r29.y, r31.xyzw, r21.xyzw
                  dp4 r20.y, r32.xyzw, r21.xyzw
                  dp4 r20.z, r33.xyzw, r21.xyzw
                  lt r21.x, r20.z, r20.y
                  div r21.yz, r29.xxyx, r20.zzzz
                  mad r21.yz, r21.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
                  add r21.yz, r35.zzwz, r21.yyzy
                  mul r21.yz, r35.xxyx, r21.yyzy
                  div r29.xy, r20.xxxx, r34.xzxx
                  add r29.zw, -r29.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                  ge r29.zw, r21.yyyz, r29.zzzw
                  ge r29.xy, r29.xyxx, r21.yzyy
                  or r29.xy, r29.xyxx, r29.zwzz
                  or r24.w, r29.y, r29.x
                  or r21.x, r21.x, r24.w
                  if_z r21.x
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r21.x, r16.z, l(28), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r29.xy, r16.z, l(164), t12.xyxx
                    mov_sat r21.yz, r21.yyzy
                    mad r30.xy, r21.yzyy, r34.xzxx, r34.ywyy
                    mul r16.z, r20.z, r29.y
                    mad r20.y, r29.x, r20.z, r20.y
                    div r16.z, r20.y, r16.z
                    max r16.z, r16.z, l(0.00006104)
                    and r20.y, r21.x, l(0x0000ffff)
                    if_nz r9.w
                      utof r21.z, r20.y
                      mov r20.z, l(0)
                      mov r24.w, l(0)
                      loop 
                        ige r25.w, r24.w, l(8)
                        breakc_nz r25.w
                        dp2 r29.x, icb[r24.w + 0].xyxx, r24.xyxx
                        dp2 r29.y, icb[r24.w + 0].yxyy, r24.xzxx
                        mad r21.xy, r29.xyxx, r20.xxxx, r30.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.x, r21.xyzx, t9.xxxx, s13, r16.z
                        mad r20.z, r21.x, l(0.125000), r20.z
                        iadd r24.w, r24.w, l(1)
                      endloop 
                    else 
                      utof r30.z, r20.y
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r20.z, r30.xyzx, t9.xxxx, s13, r16.z
                    endif 
                    mul r16.z, r20.z, r20.z
                    mul r16.z, r20.z, r16.z
                  else 
                    mov r16.z, l(1.000000)
                  endif 
                  mul r11.w, r11.w, r16.z
                else 
                  ubfe r16.z, l(4), l(20), r30.w
                  ult r20.x, l(0), r16.z
                  and r20.x, r1.x, r20.x
                  if_nz r20.x
                    iadd r16.z, r16.z, cb2[0].x
                    iadd r16.z, r16.z, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r20.x, r16.z, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r29.xyzw, r16.z, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r30.xyzw, r16.z, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r16.z, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r16.z, l(116), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r16.z, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r16.z, l(148), t12.xyzw
                    mad r20.y, |r13.w|, l(-0.200000), l(0.400000)
                    lt r21.x, r13.w, l(0.000000)
                    movc r20.y, r21.x, -r20.y, r20.y
                    mad r22.xyz, v2.xyzx, r20.yyyy, v5.xyzx
                    dp4 r21.x, r29.xyzw, r22.xyzw
                    dp4 r21.y, r30.xyzw, r22.xyzw
                    dp4 r20.y, r31.xyzw, r22.xyzw
                    dp4 r21.z, r32.xyzw, r22.xyzw
                    lt r22.x, r21.z, r20.y
                    div r21.xy, r21.xyxx, r21.zzzz
                    mad r21.xy, r21.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r21.xy, r34.zwzz, r21.xyxx
                    mul r21.xy, r34.xyxx, r21.xyxx
                    div r22.yz, r20.xxxx, r33.xxzx
                    add r29.xy, -r22.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
                    ge r29.xy, r21.xyxx, r29.xyxx
                    ge r22.yz, r22.yyzy, r21.xxyx
                    or r22.yz, r22.yyzy, r29.xxyx
                    or r22.y, r22.z, r22.y
                    or r22.x, r22.x, r22.y
                    if_z r22.x
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r22.x, r16.z, l(28), t12.xxxx
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r22.yz, r16.z, l(164), t12.xxyx
                      mov_sat r21.xy, r21.xyxx
                      mad r29.xy, r21.xyxx, r33.xzxx, r33.ywyy
                      mul r16.z, r21.z, r22.z
                      mad r20.y, r22.y, r21.z, r20.y
                      div r16.z, r20.y, r16.z
                      max r16.z, r16.z, l(0.00006104)
                      and r20.y, r22.x, l(0x0000ffff)
                      if_nz r9.w
                        utof r21.z, r20.y
                        mov r22.xy, l(0,0,0,0)
                        loop 
                          ige r22.z, r22.y, l(8)
                          breakc_nz r22.z
                          dp2 r30.x, icb[r22.y + 0].xyxx, r25.xyxx
                          dp2 r30.y, icb[r22.y + 0].yxyy, r25.xzxx
                          mad r21.xy, r30.xyxx, r20.xxxx, r29.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.x, r21.xyzx, t9.xxxx, s13, r16.z
                          mad r22.x, r21.x, l(0.125000), r22.x
                          iadd r22.y, r22.y, l(1)
                        endloop 
                      else 
                        utof r29.z, r20.y
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.x, r29.xyzx, t9.xxxx, s13, r16.z
                      endif 
                      mul r16.z, r22.x, r22.x
                      mul r16.z, r22.x, r16.z
                    else 
                      mov r16.z, l(1.000000)
                    endif 
                    mul r11.w, r11.w, r16.z
                  endif 
                endif 
                mad r16.z, -|r13.w|, r2.x, l(1.000000)
                mul r16.z, r16.z, r16.z
                mad r16.z, -r16.z, l(0.620000), l(0.620000)
                add r16.z, -|r13.w|, r16.z
                mad r16.z, r4.z, r16.z, |r13.w|
                mul r16.z, r11.w, r16.z
                lt r20.x, l(0.000000), r13.w
                mad r21.xyz, r16.zzzz, r19.xywx, r8.yzwy
                mov_sat r13.w, r13.w
                mad r18.xyz, r18.xyzx, r13.zzzz, r1.yzwy
                dp3 r13.z, r18.xyzx, r18.xyzx
                rsq r13.z, r13.z
                mul r18.xyz, r13.zzzz, r18.xyzx
                dp3 r13.z, r18.xyzx, r1.yzwy
                dp3 r16.z, v2.xyzx, r18.xyzx
                mad r18.x, |r16.z|, r2.z, -|r16.z|
                mad r16.z, |r16.z|, r18.x, l(1.000000)
                mad r18.x, r13.w, r2.y, r2.w
                mul r16.z, r16.z, r16.z
                mul r16.z, r18.x, r16.z
                rcp r16.z, r16.z
                mul r13.w, r16.x, r13.w
                mul r13.w, r13.w, r16.z
                mul r11.w, r11.w, r13.w
                mad r18.xyz, r11.wwww, r19.xywx, r28.xyzx
                add_sat r13.z, -r13.z, l(1.000000)
                mul r13.w, r13.z, r13.z
                mul r13.w, r13.w, r13.w
                mul r13.z, r13.w, r13.z
                mul r11.w, r11.w, r13.z
                mad r19.xyw, r11.wwww, r19.xyxw, r14.xyxz
                movc r8.yzw, r20.xxxx, r21.xxyz, r8.yyzw
                movc r14.xyz, r20.xxxx, r19.xywx, r14.xyzx
                movc r28.xyz, r20.xxxx, r18.xyzx, r28.xyzx
              endif 
            endif 
          endif 
          break 
          default 
          break 
        endswitch 
      endif 
    endif 
  endloop 
  mov r7.yzw, r8.yyzw
  mov r26.xyz, r14.xyzx
  mov r27.xyz, r28.xyzx
  iadd r5.w, r5.w, l(32)
endloop 
mul r1.xyz, r26.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
mad r1.xyz, r27.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
mad r0.xyz, r7.yzwy, r0.xyzx, r1.xyzx
lt r0.w, l(0.000000), cb2[9].z
if_nz r0.w
  dp3 r0.w, v5.xyzx, v5.xyzx
  rsq r1.x, r0.w
  mul r1.xyz, r1.xxxx, v5.xyzx
  sqrt r0.w, r0.w
  lt r1.w, l(0.000000), cb2[13].w
  if_nz r1.w
    mad r2.xy, r0.wwww, cb2[15].xyxx, cb2[14].zwzz
    mul r2.xy, r2.xyxx, cb2[16].xyxx
    lt r1.w, l(0.010000), |v5.z|
    mul r2.zw, v5.zzzz, cb2[15].zzzw
    mul r4.xy, r2.zwzz, l(-1.442695, -1.442695, 0.000000, 0.000000)
    exp r4.xy, r4.xyxx
    add r4.xy, -r4.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    div r2.zw, r4.xxxy, r2.zzzw
    mul r2.zw, r2.zzzw, r2.xxxy
    movc r2.xy, r1.wwww, r2.zwzz, r2.xyxx
    mul r2.xzw, r2.xxxx, cb2[12].xxyz
    exp r2.xzw, r2.xxzw
    mul r4.xyz, r2.yyyy, cb2[12].xyzx
    exp r4.xyz, r4.xyzx
    add r4.xyz, -r2.xzwx, r4.xyzx
    mad r2.xyz, cb2[13].wwww, r4.xyzx, r2.xzwx
  else 
    mad r1.w, r0.w, cb2[15].x, cb2[14].z
    mul r1.w, r1.w, cb2[16].x
    lt r2.w, l(0.010000), |v5.z|
    mul r4.x, v5.z, cb2[15].z
    mul r4.y, r4.x, l(-1.442695)
    exp r4.y, r4.y
    add r4.y, -r4.y, l(1.000000)
    div r4.x, r4.y, r4.x
    mul r4.x, r1.w, r4.x
    movc r1.w, r2.w, r4.x, r1.w
    mul r4.xyz, r1.wwww, cb2[12].xyzx
    exp r2.xyz, r4.xyzx
  endif 
  mad r2.xyz, r2.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r2.xyz, r2.xyzx, -cb2[9].zzzz
  dp3 r1.x, cb2[7].yzwy, -r1.xyzx
  mad r1.y, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r1.z, cb2[8].w, -r1.x, l(1.000000)
  mul r1.z, r1.z, r1.z
  mul r1.z, r1.z, l(12.566371)
  div r1.y, r1.y, r1.z
  add r0.w, r0.w, -cb2[10].w
  mul_sat r0.w, r0.w, cb2[11].w
  mul r0.w, r0.w, r1.y
  mov_sat r1.x, r1.x
  mad r1.x, r1.x, r1.x, l(1.000000)
  mad r1.x, r1.x, l(0.05968310), l(-1.000000)
  mad r1.x, cb2[8].z, r1.x, l(1.000000)
  mul r1.yzw, r0.wwww, cb2[11].xxyz
  mad r1.xyz, r1.xxxx, cb2[10].xyzx, r1.yzwy
  mul r1.xyz, r1.xyzx, cb2[9].wwww
  add r4.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r1.xyz, r1.xyzx, r4.xyzx
  mad r1.xyz, r0.xyzx, r2.xyzx, r1.xyzx
else 
  mul r0.w, v5.z, cb2[6].x
  mad r1.w, cb2[6].x, v5.z, cb2[5].x
  lt r2.x, |r0.w|, l(0.000100)
  min r2.y, r1.w, l(64.000000)
  mul r2.y, r2.y, l(1.442695)
  exp r2.y, r2.y
  mov_sat r2.z, cb2[6].z
  lt r2.w, r1.w, l(0.000000)
  add r1.w, r1.w, l(1.000000)
  movc r1.w, r2.w, r2.y, r1.w
  add r1.w, r1.w, -cb2[6].z
  movc r0.w, r2.x, l(1.000000), r0.w
  div r0.w, r1.w, r0.w
  movc r0.w, r2.x, r2.z, r0.w
  mul r0.w, r0.w, cb2[5].z
  dp3 r1.w, v5.xyzx, v5.xyzx
  sqrt r2.x, r1.w
  mad r0.w, r0.w, r2.x, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  rsq r1.w, r1.w
  mul r2.xyz, r1.wwww, v5.xyzx
  dp3 r1.w, cb2[7].yzwy, r2.xyzx
  mad_sat r1.w, cb2[8].y, r1.w, cb2[8].x
  add r2.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r2.xyzw, r1.wwww, r2.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r2.w
  add r2.xyz, -r0.xyzx, r2.xyzx
  mad r1.xyz, r0.wwww, r2.xyzx, r0.xyzx
endif 
mul r0.xyz, r1.xyzx, cb1[85].yyyy
ge r1.xyz, r0.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.xyz, r0.xyzx, r1.xyzx
min r0.xyz, r0.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
max r1.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r3.xyz, r3.wwww, r1.xyzx
and r0.w, r3.w, l(0x7f800000)
ieq r0.w, r0.w, l(0x7f800000)
eq r2.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
and r2.xy, r2.zwzz, r2.xyxx
and r1.w, r2.y, r2.x
or r0.w, r0.w, r1.w
if_z r0.w
  ftou r2.xy, v0.xyxx
  imm_atomic_iadd r2.z, u6, r2.xyxx, l(1)
  ult r0.w, r2.z, cb2[58].z
  if_nz r0.w
    max r0.w, r3.z, r3.y
    max r0.w, r0.w, r3.x
    mov r0.w, |r0.w|
    and r0.w, r0.w, l(0x7f800000)
    iadd r0.w, r0.w, l(0x00800000)
    mad r1.xyz, r1.xyzx, r3.wwww, r0.wwww
    ubfe r1.x, l(8), l(15), r1.x
    ushr r1.yz, r1.yyzy, l(0, 15, 15, 0)
    bfi r1.yz, l(0, 8, 8, 0), l(0, 8, 16, 0), r1.yyzy, l(0, 0, 0, 0)
    iadd r1.x, r1.y, r1.x
    iadd r1.x, r1.z, r1.x
    ishl r0.w, r0.w, l(1)
    iadd r1.xzw, r0.wwww, r1.xxxx
    mov_sat r0.w, r3.w
    mul r0.w, r0.w, l(2046.000000)
    ftou r0.w, r0.w
    ishl r2.w, v0.z, l(2)
    and r0.w, r0.w, l(2046)
    bfi r1.y, l(11), l(0), r0.w, r2.w
    store_uav_typed u7.xyzw, r2.xyzz, r1.xyzw
    mov r0.w, l(-1)
  else 
    mov r0.w, l(0)
  endif 
else 
  mov r0.w, l(-1)
endif 
mul r3.xyz, r3.wwww, r0.xyzx
movc o0.xyzw, r0.wwww, l(0,0,0,0), r3.xyzw
ret 
// Approximately 2285 instruction slots used
