//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:43:39 2021
//
//
// Buffer Definitions: 
//
// cbuffer GenericsCBuffer
// {
//
//   float4 scriptVector0;              // Offset:    0 Size:    16
//   float4 scriptVector1;              // Offset:   16 Size:    16
//   float4 scriptVector2;              // Offset:   32 Size:    16 [unused]
//   float4 scriptVector3;              // Offset:   48 Size:    16 [unused]
//   float4 scriptVector4;              // Offset:   64 Size:    16 [unused]
//   float4 scriptVector5;              // Offset:   80 Size:    16 [unused]
//   float4 scriptVector6;              // Offset:   96 Size:    16 [unused]
//   float4 scriptVector7;              // Offset:  112 Size:    16 [unused]
//   float4 weaponParam0;               // Offset:  128 Size:    16 [unused]
//   float4 weaponParam1;               // Offset:  144 Size:    16 [unused]
//   float4 weaponParam2;               // Offset:  160 Size:    16 [unused]
//   float4 weaponParam3;               // Offset:  176 Size:    16 [unused]
//   float4 weaponParam4;               // Offset:  192 Size:    16 [unused]
//   float4 weaponParam5;               // Offset:  208 Size:    16 [unused]
//   float4 weaponParam6;               // Offset:  224 Size:    16 [unused]
//   float4 weaponParam7;               // Offset:  240 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// tileMipBilinearSampler            sampler      NA          NA             s1      1 
// colorMapSampler                   texture  float4          2d             t0      1 
// GenericsCBuffer                   cbuffer      NA          NA            cb3      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB3[2], immediateIndexed
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xy
dcl_output o0.xyzw
dcl_temps 2
add r0.xy, -v2.yxyy, cb3[1].yxyy
max r0.z, |r0.x|, |r0.y|
div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
min r0.w, |r0.x|, |r0.y|
mul r0.z, r0.z, r0.w
mul r0.w, r0.z, r0.z
mad r1.x, r0.w, l(0.02083510), l(-0.085133)
mad r1.x, r0.w, r1.x, l(0.180141)
mad r1.x, r0.w, r1.x, l(-0.33029950)
mad r0.w, r0.w, r1.x, l(0.999866)
mul r1.x, r0.w, r0.z
mad r1.x, r1.x, l(-2.000000), l(1.57079637)
lt r1.y, |r0.x|, |r0.y|
add r0.xy, -|r0.xyxx|, l(1.000000, 1.000000, 0.000000, 0.000000)
and r1.x, r1.y, r1.x
mad r1.x, r0.z, r0.w, r1.x
max r0.z, |r0.y|, |r0.x|
div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
min r0.w, |r0.y|, |r0.x|
lt r0.x, |r0.y|, |r0.x|
mul r0.y, r0.z, r0.w
mul r0.z, r0.y, r0.y
mad r0.w, r0.z, l(0.02083510), l(-0.085133)
mad r0.w, r0.z, r0.w, l(0.180141)
mad r0.w, r0.z, r0.w, l(-0.33029950)
mad r0.z, r0.z, r0.w, l(0.999866)
mul r0.w, r0.z, r0.y
mad r0.w, r0.w, l(-2.000000), l(1.57079637)
and r0.x, r0.x, r0.w
mad r1.y, r0.y, r0.z, r0.x
mad r0.x, cb3[0].x, l(1.57079637), l(-0.000100)
add r0.xy, -r0.xxxx, r1.xyxx
mul_sat r0.xy, r0.xyxx, l(5000.000000, 5000.000000, 0.000000, 0.000000)
mad r0.zw, r0.xxxy, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
mul r0.xy, r0.xyxx, r0.xyxx
mul r1.xy, r0.xyxx, r0.zwzz
mad r0.xy, -r0.zwzz, r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
mul r0.x, r0.y, r0.x
mad r0.y, -r1.x, r1.y, l(1.000000)
lt r0.z, cb3[0].x, l(0.500000)
movc r0.x, r0.z, r0.y, r0.x
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v2.xyxx, t0.xyzw, s1
mul r1.xyzw, r1.xyzw, v1.xyzw
mul o0.w, r0.x, r1.w
mov o0.xyz, r1.xyzx
ret 
// Approximately 46 instruction slots used
