//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:36:16 2021
//
//
// Note: shader requires additional functionality:
//       Early depth-stencil
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float baseNormalHeight;            // Offset:  160 Size:     4
//   float2 glossRange;                 // Offset:  164 Size:     8
//   uint zFeatherComputeSprites;       // Offset:  172 Size:     4
//   float tintAmount;                  // Offset:  176 Size:     4
//   float3 colorTint;                  // Offset:  180 Size:    12 [unused]
//   float2 glossScale;                 // Offset:  192 Size:     8
//   float2 normalScale;                // Offset:  200 Size:     8
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16 [unused]
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4 [unused]
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4
//   uint numDynamicDecals;             // Offset:  924 Size:     4
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for modelInstanceBuffer
// {
//
//   struct ModelInstanceData
//   {
//       
//       uint boneArrayIndex;           // Offset:    0
//       uint shaderConstantSet;        // Offset:    4
//       uint flagsAndPrevFrameIndex;   // Offset:    8
//       uint worldMatrix;              // Offset:   12
//       uint siegeAnimStateOffset;     // Offset:   16
//       uint prevFrameSiegeAnimStateOffset;// Offset:   20
//
//   } $Element;                        // Offset:    0 Size:    24
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for forwardDecalConstants
// {
//
//   struct CoreDecalConstantsPack
//   {
//       
//       uint4 data[8];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   128
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// specColorSampler                  sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// normalSampler                     sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// normalMap                         texture  float4          2d             t0      1 
// modelInstanceBuffer               texture  struct         r/o             t4      1 
// gEnvBRDFGlass                     texture  float2          2d             t5      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// glossMap                          texture  float4          2d            t21      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// visibleDecals                     texture    uint     2darray            t35      1 
// forwardDecalConstants             texture  struct         r/o            t36      1 
// materialTexBC7                    texture  float4     2darray            t42      1 
// materialTexBC3                    texture  float4     2darray            t43      1 
// materialTexBC7linear              texture  float4     2darray            t44      1 
// materialTexMask                   texture  float4     2darray            t45      1 
// gOit_Pixels                           UAV    uint          2d             u6      1 
// gOit_Nodes                            UAV   uint2     2darray             u7      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyz 
// COLOR                    1   x           1     NONE   float       
// TEXCOORD                 0    yz         1     NONE   float    yz 
// TEXCOORD                 4   x           2     NONE    uint   x   
// TEXCOORD                 1   xyz         3     NONE   float   xyz 
// TEXCOORD                 2   xyz         4     NONE   float   xyz 
// TEXCOORD                 3   xyz         5     NONE   float   xyz 
// OFFPOSITION              0   xyz         6     NONE   float   xyz 
// SV_IsFrontFace           0   x           7    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | forceEarlyDepthStencil
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[13], immediateIndexed
dcl_constantbuffer CB1[93], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_structured t4, 24
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_structured t23, 4
dcl_resource_texture2darray (float,float,float,float) t31
dcl_resource_texture2darray (uint,uint,uint,uint) t35
dcl_resource_structured t36, 128
dcl_resource_texture2darray (float,float,float,float) t42
dcl_resource_texture2darray (float,float,float,float) t43
dcl_resource_texture2darray (float,float,float,float) t44
dcl_resource_texture2darray (float,float,float,float) t45
dcl_uav_typed_texture2d (uint,uint,uint,uint) u6
dcl_uav_typed_texture2darray (uint,uint,uint,uint) u7
dcl_input_ps_siv linear noperspective v0.xyz, position
dcl_input_ps linear v1.yz
dcl_input_ps constant v2.x
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps_sgv constant v7.x, is_front_face
dcl_output o0.xyzw
dcl_temps 46
mul r0.xyzw, v1.yzyz, cb0[12].xyzw
sample_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t21.xyzw, s1
add r0.y, -cb0[10].y, cb0[10].z
mad r0.x, r0.x, r0.y, cb0[10].y
mul_sat r0.x, r0.x, l(0.05882353)
sample_indexable(texture2d)(float,float,float,float) r0.yzw, r0.zwzz, t0.wxyz, s3
add r0.yzw, r0.yyzw, l(0.000000, -0.500000, -0.500000, -0.000000)
mad r0.yzw, cb0[10].xxxx, r0.yyzw, l(0.000000, 0.500000, 0.500000, 0.000000)
mad r0.yz, r0.yyzy, l(0.000000, 1.99218750, 1.99218750, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
dp2 r1.x, r0.yzyy, r0.yzyy
add r1.x, -r1.x, l(1.000000)
max r1.x, r1.x, l(0.000000)
sqrt r1.x, r1.x
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, l(0.33333334)
min r0.w, r0.w, l(1.000000)
movc r1.y, v7.x, l(1.000000), l(-1.000000)
dp3 r1.z, v3.xyzx, v3.xyzx
rsq r1.z, r1.z
mul r2.xyz, r1.zzzz, v3.xyzx
mul r2.xyz, r1.yyyy, r2.xyzx
dp3 r1.z, v4.xyzx, v4.xyzx
rsq r1.z, r1.z
mul r3.xyz, r1.zzzz, v4.xyzx
mul r3.xyz, r1.yyyy, r3.xyzx
dp3 r1.z, v5.xyzx, v5.xyzx
rsq r1.z, r1.z
mul r4.xyz, r1.zzzz, v5.xyzx
mul r4.xyz, r1.yyyy, r4.xyzx
mul r0.x, r0.x, l(-17.000000)
exp r0.x, r0.x
add r0.x, r0.x, r0.w
log r0.x, r0.x
mul r0.x, r0.x, l(-0.05882353)
max r0.x, r0.x, l(0.000000)
mul r4.xyz, r0.zzzz, r4.xyzx
mad r0.yzw, r3.xxyz, r0.yyyy, r4.xxyz
mad r0.yzw, r2.xxyz, r1.xxxx, r0.yyzw
dp3 r1.x, r0.yzwy, r0.yzwy
rsq r1.x, r1.x
mul r0.yzw, r0.yyzw, r1.xxxx
mad r1.x, cb0[11].x, l(0.920000), l(0.080000)
ge r1.z, v0.z, l(0.984375)
mul r1.w, v0.z, l(1.01587307)
mad r2.x, v0.z, l(64.000000), l(-63.000000)
movc r1.z, r1.z, r2.x, r1.w
max r1.z, r1.z, l(0.00000001)
rcp r1.z, r1.z
ftou r2.xy, v0.xyxx
deriv_rtx_coarse r3.xyz, v6.xyzx
deriv_rty_coarse r4.xyz, v6.xyzx
iadd r1.w, cb2[0].y, cb2[0].x
ld_structured_indexable(structured_buffer, stride=24)(mixed,mixed,mixed,mixed) r2.z, v2.x, l(8), t4.xxxx
and r2.zw, r2.zzzz, l(0, 0, 0x10000000, 0x20000000)
if_nz r2.z
  add r5.xyz, v6.xyzx, cb1[24].xyzx
  mul r2.z, r1.z, l(0.00781250)
  min r2.z, r2.z, l(15.000000)
  ftou r2.z, r2.z
  ushr r6.xy, r2.xyxx, l(6, 6, 0, 0)
  ishl r6.z, r2.z, l(4)
  and r2.z, cb2[57].z, l(-32)
  iadd r3.w, -r2.z, cb2[57].z
  mov r7.xy, l(0,0,0,0)
  mov r8.w, l(0)
  mov r5.w, l(1.000000)
  mov r9.xyzw, l(0,0,0,0)
  mov r10.xyz, l(0,0,0,0)
  mov r11.yz, l(0,0,0,0)
  mov r12.xy, l(0,0,0,0)
  mov r4.w, l(0)
  loop 
    uge r6.w, r4.w, cb2[57].z
    breakc_nz r6.w
    ushr r7.z, r4.w, l(5)
    iadd r8.xyz, r6.xyzx, r7.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r6.w, r8.xyzw, t35.yzwx
    ieq r7.z, r2.z, r4.w
    ubfe r7.w, r3.w, l(0), r6.w
    movc r6.w, r7.z, r7.w, r6.w
    iadd r7.z, r1.w, r4.w
    mov r13.xyzw, r9.xzwy
    mov r8.xyz, r10.xyzx
    mov r14.yz, r11.yyzy
    mov r15.xy, r12.xyxx
    mov r7.w, r6.w
    loop 
      breakc_z r7.w
      firstbit_lo r10.w, r7.w
      ishl r11.w, l(1), r10.w
      and r12.w, r7.w, r11.w
      if_nz r12.w
        xor r7.w, r7.w, r11.w
        iadd r11.w, r7.z, r10.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r16.xyzw, r11.w, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r17.xy, r11.w, l(16), t11.xyxx
        add r16.xyz, r16.xyzx, -v6.xyzx
        mov r17.z, r16.w
        lt r16.xyz, |r16.xyzx|, r17.zxyz
        and r11.w, r16.y, r16.x
        and r11.w, r16.z, r11.w
        if_nz r11.w
          iadd r10.w, r4.w, r10.w
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r16.xyz, r10.w, l(0), t36.xyzx
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r17.xyz, r10.w, l(16), t36.xyzx
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r18.xyz, r10.w, l(32), t36.xyzx
          mov r19.x, r16.x
          mov r19.y, r17.x
          mov r19.z, r18.x
          dp3 r11.w, r19.xyzx, r19.xyzx
          rsq r11.w, r11.w
          mul r20.xyz, r11.wwww, r19.xyzx
          dp3 r11.w, r20.xyzx, v3.xyzx
          ge r11.w, r11.w, l(0.500000)
          if_nz r11.w
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r21.xyw, r10.w, l(48), t36.xyxz
            mov r19.w, r21.x
            dp4 r19.x, r5.xyzw, r19.xyzw
            mov r22.x, r16.y
            mov r22.y, r17.y
            mov r22.z, r18.y
            mov r22.w, r21.y
            dp4 r19.y, r5.xyzw, r22.xyzw
            mov r21.x, r16.z
            mov r21.y, r17.z
            mov r21.z, r18.z
            dp4 r19.z, r5.xyzw, r21.xyzw
            lt r16.xyz, |r19.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
            and r11.w, r16.y, r16.x
            and r11.w, r16.z, r11.w
            if_nz r11.w
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r16.xyzw, r10.w, l(64), t36.xyzw
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r17.xyzw, r10.w, l(80), t36.xyzw
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r18.xyzw, r10.w, l(96), t36.xyzw
              dp3 r23.x, r3.xyzx, r22.xyzx
              dp3 r23.y, r3.xyzx, r21.xyzx
              dp3 r24.x, r4.xyzx, r22.xyzx
              dp3 r24.y, r4.xyzx, r21.xyzx
              mad r19.xy, r19.yzyy, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
              mul r23.xyz, r23.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
              mul r24.xyz, r24.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
              and r19.zw, r17.yyyz, l(0, 0, 0x0000ffff, 0x0000ffff)
              if_nz r19.z
                ubfe r11.w, l(4), l(24), r17.w
                ishl r11.w, l(1), r11.w
                ushr r12.w, r17.w, l(28)
                ishl r12.w, l(1), r12.w
                ieq r14.w, r19.z, l(4)
                if_nz r14.w
                  and r14.w, r17.w, l(4095)
                  ubfe r15.w, l(12), l(12), r17.w
                  and r20.w, r18.w, l(1023)
                  utof r25.xz, r11.wwww
                  utof r25.y, r12.w
                  mad r26.xy, r19.xyxx, r25.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r26.zw, r25.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r26.xy, r26.zwzz, r26.xyxx
                  utof r27.x, r14.w
                  utof r27.y, r15.w
                  add r26.xy, r26.xyxx, r27.xyxx
                  mul r26.xy, r26.xyxx, cb1[83].xyxx
                  utof r26.z, r20.w
                  mul r27.xyz, r23.zyzz, cb1[83].xyxx
                  mul r27.xyz, r25.xyzx, r27.xyzx
                  mul r28.xyz, r24.zyzz, cb1[83].xyxx
                  mul r25.xyz, r25.xyzx, r28.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r25.xyzw, r26.xyzx, t42.xyzw, s4, r27.xyzx, r25.xyzx
                else 
                  ieq r14.w, r19.z, l(1)
                  if_nz r14.w
                    and r14.w, r17.w, l(4095)
                    ubfe r15.w, l(12), l(12), r17.w
                    and r17.w, r18.w, l(1023)
                    utof r26.xz, r11.wwww
                    utof r26.y, r12.w
                    mad r27.xy, r19.xyxx, r26.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r27.zw, r26.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                    min r27.xy, r27.zwzz, r27.xyxx
                    utof r28.x, r14.w
                    utof r28.y, r15.w
                    add r27.xy, r27.xyxx, r28.xyxx
                    mul r27.xy, r27.xyxx, cb1[83].zwzz
                    utof r27.z, r17.w
                    mul r28.xyz, r23.zyzz, cb1[83].zwzz
                    mul r28.xyz, r26.xyzx, r28.xyzx
                    mul r29.xyz, r24.zyzz, cb1[83].zwzz
                    mul r26.xyz, r26.xyzx, r29.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r25.xyzw, r27.xyzx, t43.xyzw, s4, r28.xyzx, r26.xyzx
                  else 
                    mov r25.xyzw, l(1.000000,1.000000,1.000000,1.000000)
                  endif 
                endif 
                mul r16.xyz, r16.xyzx, r25.xyzx
                mul r11.w, r16.w, r25.w
              else 
                mov r16.xyz, l(0,0,0,0)
                mov r11.w, l(0)
              endif 
              ne r12.w, r17.x, l(1.000000)
              add r14.w, r16.w, r11.w
              mad_sat r14.w, r14.w, r17.x, -r17.x
              movc r11.w, r12.w, r14.w, r11.w
              if_nz r19.w
                ubfe r12.w, l(4), l(24), r18.y
                ishl r12.w, l(1), r12.w
                ushr r14.w, r18.y, l(28)
                ishl r14.w, l(1), r14.w
                ieq r15.w, r19.w, l(2)
                if_nz r15.w
                  and r15.w, r18.y, l(4095)
                  ubfe r17.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r18.yyyw
                  utof r25.xz, r12.wwww
                  utof r25.y, r14.w
                  mad r26.xy, r19.xyxx, r25.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r26.zw, r25.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r26.xy, r26.zwzz, r26.xyxx
                  utof r27.x, r15.w
                  utof r27.y, r17.x
                  add r26.xy, r26.xyxx, r27.xyxx
                  mul r26.xy, r26.xyxx, cb1[84].xyxx
                  utof r26.z, r17.w
                  mul r27.xyz, r23.zyzz, cb1[84].xyxx
                  mul r27.xyz, r25.xyzx, r27.xyzx
                  mul r28.xyz, r24.zyzz, cb1[84].xyxx
                  mul r25.xyz, r25.xyzx, r28.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r15.w, r26.xyzx, t45.yzwx, s4, r27.xyzx, r25.xyzx
                else 
                  ieq r16.w, r19.w, l(4)
                  if_nz r16.w
                    and r16.w, r18.y, l(4095)
                    ubfe r17.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r18.yyyw
                    utof r25.xz, r12.wwww
                    utof r25.y, r14.w
                    mad r19.zw, r19.xxxy, r25.zzzy, l(0.000000, 0.000000, 0.500000, 0.500000)
                    add r26.xy, r25.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                    min r19.zw, r19.zzzw, r26.xxxy
                    utof r26.x, r16.w
                    utof r26.yz, r17.xxwx
                    add r19.zw, r19.zzzw, r26.xxxy
                    mul r26.xy, r19.zwzz, cb1[83].xyxx
                    mul r27.xyz, r23.zyzz, cb1[83].xyxx
                    mul r27.xyz, r25.xyzx, r27.xyzx
                    mul r28.xyz, r24.zyzz, cb1[83].xyxx
                    mul r25.xyz, r25.xyzx, r28.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r15.w, r26.xyzx, t42.yzwx, s4, r27.xyzx, r25.xyzx
                  else 
                    and r16.w, r18.y, l(4095)
                    ubfe r17.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r18.yyyw
                    utof r25.xz, r12.wwww
                    utof r25.y, r14.w
                    mad r19.zw, r19.xxxy, r25.zzzy, l(0.000000, 0.000000, 0.500000, 0.500000)
                    add r26.xy, r25.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                    min r19.zw, r19.zzzw, r26.xxxy
                    utof r26.x, r16.w
                    utof r26.yz, r17.xxwx
                    add r19.zw, r19.zzzw, r26.xxxy
                    mul r26.xy, r19.zwzz, cb1[83].zwzz
                    mul r27.xyz, r23.zyzz, cb1[83].zwzz
                    mul r27.xyz, r25.xyzx, r27.xyzx
                    mul r28.xyz, r24.zyzz, cb1[83].zwzz
                    mul r25.xyz, r25.xyzx, r28.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r15.w, r26.xyzx, t43.yzwx, s4, r27.xyzx, r25.xyzx
                  endif 
                endif 
                mad r25.xyz, r15.wwww, l(0.960000, 0.960000, 0.960000, 0.000000), l(0.040000, 0.040000, 0.040000, 0.000000)
                add_sat r12.w, -r15.w, l(1.000000)
                mul r16.xyz, r12.wwww, r16.xyzx
              else 
                mov r25.xyz, l(0.040000,0.040000,0.040000,0)
              endif 
              ushr r17.xy, r17.zyzz, l(16, 16, 0, 0)
              if_nz r17.x
                ieq r12.w, r17.x, l(2)
                if_nz r12.w
                  ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r10.w, r10.w, l(112), t36.xxxx
                  ubfe r17.zw, l(0, 0, 4, 12), l(0, 0, 24, 12), r18.zzzz
                  ishl r12.w, l(1), r17.z
                  ushr r14.w, r18.z, l(28)
                  ishl r14.w, l(1), r14.w
                  and r15.w, r18.z, l(4095)
                  and r10.w, r10.w, l(1023)
                  utof r26.xz, r12.wwww
                  utof r26.y, r14.w
                  mad r18.yz, r19.xxyx, r26.zzyz, l(0.000000, 0.500000, 0.500000, 0.000000)
                  add r19.zw, r26.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r18.yz, r18.yyzy, r19.zzwz
                  utof r27.x, r15.w
                  utof r27.y, r17.w
                  add r17.zw, r18.yyyz, r27.xxxy
                  mul r27.xy, r17.zwzz, cb1[84].xyxx
                  utof r27.z, r10.w
                  mul r28.xyz, r23.zyzz, cb1[84].xyxx
                  mul r28.xyz, r26.xyzx, r28.xyzx
                  mul r29.xyz, r24.zyzz, cb1[84].xyxx
                  mul r26.xyz, r26.xyzx, r29.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r10.w, r27.xyzx, t45.yzwx, s4, r28.xyzx, r26.xyzx
                else 
                  ieq r12.w, r17.x, l(6)
                  movc r10.w, r12.w, l(0), l(1.000000)
                endif 
              else 
                mov r10.w, l(1.000000)
              endif 
              mul_sat r10.w, r10.w, l(0.76470590)
              if_nz r17.y
                ieq r12.w, r17.y, l(3)
                if_nz r12.w
                  ubfe r17.xyz, l(4, 12, 10, 0), l(24, 12, 10, 0), r18.xxwx
                  ishl r12.w, l(1), r17.x
                  ushr r14.w, r18.x, l(28)
                  ishl r14.w, l(1), r14.w
                  and r15.w, r18.x, l(4095)
                  utof r18.xz, r12.wwww
                  utof r18.y, r14.w
                  mad r17.xw, r19.xxxy, r18.xxxy, l(0.500000, 0.000000, 0.000000, 0.500000)
                  add r19.xy, r18.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r17.xw, r17.xxxw, r19.xxxy
                  utof r19.x, r15.w
                  utof r19.yz, r17.yyzy
                  add r17.xy, r17.xwxx, r19.xyxx
                  mul r19.xy, r17.xyxx, cb1[84].zwzz
                  mul r17.xyz, r23.xyzx, cb1[84].zwzz
                  mul r17.xyz, r18.xyzx, r17.xyzx
                  mul r23.xyz, r24.xyzx, cb1[84].zwzz
                  mul r18.xyz, r18.xyzx, r23.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r17.xyz, r19.xyzx, t44.xyzw, s4, r17.xyzx, r18.xyzx
                else 
                  mov r17.xyz, l(0.500000,0.500000,1.000000,0)
                endif 
                mad r17.xy, r17.xyxx, l(1.99218750, 1.99218750, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
                dp2 r12.w, r17.xyxx, r17.xyxx
                add r12.w, -r12.w, l(1.000000)
                max r12.w, r12.w, l(0.000000)
                sqrt r12.w, r12.w
                mul r14.w, r17.z, r17.z
                mul r14.w, r14.w, l(0.33333334)
                min r14.w, r14.w, l(1.000000)
                dp3 r15.w, r22.xyzx, r22.xyzx
                rsq r15.w, r15.w
                mul r18.xyz, r15.wwww, r22.xyzx
                dp3 r15.w, -r21.xyzx, -r21.xyzx
                rsq r15.w, r15.w
                mul r19.xyz, r15.wwww, -r21.xyzx
                mul r20.xyz, r1.yyyy, r20.xyzx
                mul r18.xyz, r1.yyyy, r18.xyzx
                mul r19.xyz, r1.yyyy, r19.xyzx
                mul r15.w, r10.w, l(-17.000000)
                exp r15.w, r15.w
                add r14.w, r14.w, r15.w
                log r14.w, r14.w
                mul r14.w, r14.w, l(-0.05882353)
                max r10.w, r14.w, l(0.000000)
                mul r17.yzw, r17.yyyy, r19.xxyz
                mad r17.xyz, r18.xyzx, r17.xxxx, r17.yzwy
                mad r17.xyz, r20.xyzx, r12.wwww, r17.xyzx
                dp3 r12.w, r17.xyzx, r17.xyzx
                rsq r12.w, r12.w
                mul r17.xyz, r12.wwww, r17.xyzx
                add r12.w, -r11.w, l(1.000000)
                mov r14.x, r13.x
                mul r18.xyz, r12.wwww, r14.xyzx
                mad r14.xyz, r17.xyzx, r11.wwww, r18.xyzx
                mov r13.x, r14.x
              endif 
              add r12.w, -r11.w, l(1.000000)
              mul r17.xyz, r8.xyzx, r12.wwww
              mad r8.xyz, r16.xyzx, r11.wwww, r17.xyzx
              mov r15.z, r13.y
              mul r16.xyz, r12.wwww, r15.xyzx
              mad r15.xyz, r25.xyzx, r11.wwww, r16.xyzx
              mul r14.x, r12.w, r13.w
              mad r13.z, r13.z, r12.w, r11.w
              mad r13.w, r10.w, r11.w, r14.x
              mov r13.y, r15.z
            endif 
          endif 
        endif 
      endif 
    endloop 
    mov r9.xyzw, r13.xwyz
    mov r10.xyz, r8.xyzx
    mov r11.yz, r14.yyzy
    mov r12.xy, r15.xyxx
    iadd r4.w, r4.w, l(32)
  endloop 
  mov r11.x, r9.x
  mov r12.z, r9.z
  mov r9.xy, r9.wyww
else 
  mov r10.xyz, l(0,0,0,0)
  mov r11.xyz, l(0,0,0,0)
  mov r12.xyz, l(0,0,0,0)
  mov r9.xy, l(0,0,0,0)
endif 
if_nz r2.w
  add r5.xyz, v6.xyzx, cb1[24].xyzx
  iadd r2.z, cb2[57].w, cb2[57].z
  mul r2.w, r1.z, l(0.00781250)
  min r2.w, r2.w, l(15.000000)
  ftou r2.w, r2.w
  ushr r6.xy, r2.xyxx, l(6, 6, 0, 0)
  ishl r6.z, r2.w, l(4)
  and r2.w, cb2[57].z, l(-32)
  iadd r3.w, -r2.w, cb2[57].z
  and r4.w, r2.z, l(-32)
  iadd r6.w, r2.z, -r4.w
  mov r7.xy, l(0,0,0,0)
  mov r8.w, l(0)
  mov r5.w, l(1.000000)
  mov r13.xyz, r10.xyzx
  mov r14.xyz, r11.xyzx
  mov r15.xyz, r12.xyzx
  mov r16.xy, r9.xyxx
  mov r7.w, r2.w
  loop 
    uge r9.z, r7.w, r2.z
    breakc_nz r9.z
    ushr r7.z, r7.w, l(5)
    iadd r8.xyz, r6.xyzx, r7.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r7.z, r8.xyzw, t35.yzxw
    ieq r8.x, r2.w, r7.w
    bfi r8.y, r3.w, l(0), l(0), r7.z
    movc r7.z, r8.x, r8.y, r7.z
    ieq r8.x, r4.w, r7.w
    ubfe r8.y, r6.w, l(0), r7.z
    movc r7.z, r8.x, r8.y, r7.z
    iadd r8.x, r1.w, r7.w
    mov r17.xyz, r13.xyzx
    mov r18.xyz, r14.xyzx
    mov r19.xyz, r15.xyzx
    mov r8.yz, r16.xxyx
    mov r9.z, r7.z
    loop 
      breakc_z r9.z
      firstbit_lo r9.w, r9.z
      ishl r10.w, l(1), r9.w
      and r11.w, r9.z, r10.w
      if_nz r11.w
        xor r9.z, r9.z, r10.w
        iadd r10.w, r8.x, r9.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r20.xyzw, r10.w, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r21.xy, r10.w, l(16), t11.xyxx
        add r20.xyz, r20.xyzx, -v6.xyzx
        mov r21.z, r20.w
        lt r20.xyz, |r20.xyzx|, r21.zxyz
        and r10.w, r20.y, r20.x
        and r10.w, r20.z, r10.w
        if_nz r10.w
          iadd r9.w, r7.w, r9.w
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r20.xyz, r9.w, l(0), t36.xyzx
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r21.xyz, r9.w, l(16), t36.xyzx
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r22.xyz, r9.w, l(32), t36.xyzx
          mov r23.x, r20.x
          mov r23.y, r21.x
          mov r23.z, r22.x
          dp3 r10.w, r23.xyzx, r23.xyzx
          rsq r10.w, r10.w
          mul r24.xyz, r10.wwww, r23.xyzx
          dp3 r10.w, r24.xyzx, v3.xyzx
          ge r10.w, r10.w, l(0.500000)
          if_nz r10.w
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r25.xyw, r9.w, l(48), t36.xyxz
            mov r23.w, r25.x
            dp4 r23.x, r5.xyzw, r23.xyzw
            mov r26.x, r20.y
            mov r26.y, r21.y
            mov r26.z, r22.y
            mov r26.w, r25.y
            dp4 r23.y, r5.xyzw, r26.xyzw
            mov r25.x, r20.z
            mov r25.y, r21.z
            mov r25.z, r22.z
            dp4 r23.z, r5.xyzw, r25.xyzw
            lt r20.xyz, |r23.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
            and r10.w, r20.y, r20.x
            and r10.w, r20.z, r10.w
            if_nz r10.w
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r20.xyzw, r9.w, l(64), t36.xyzw
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r21.xyzw, r9.w, l(80), t36.xyzw
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r22.xyzw, r9.w, l(96), t36.xyzw
              dp3 r27.x, r3.xyzx, r26.xyzx
              dp3 r27.y, r3.xyzx, r25.xyzx
              dp3 r28.x, r4.xyzx, r26.xyzx
              dp3 r28.y, r4.xyzx, r25.xyzx
              mad r16.zw, r23.yyyz, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
              mul r23.xyz, r27.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
              mul r27.xyz, r28.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
              and r28.xy, r21.yzyy, l(0x0000ffff, 0x0000ffff, 0, 0)
              if_nz r28.x
                ubfe r10.w, l(4), l(24), r21.w
                ishl r10.w, l(1), r10.w
                ushr r11.w, r21.w, l(28)
                ishl r11.w, l(1), r11.w
                ieq r12.w, r28.x, l(4)
                if_nz r12.w
                  and r12.w, r21.w, l(4095)
                  ubfe r13.w, l(12), l(12), r21.w
                  and r14.w, r22.w, l(1023)
                  utof r29.xz, r10.wwww
                  utof r29.y, r11.w
                  mad r28.zw, r16.zzzw, r29.zzzy, l(0.000000, 0.000000, 0.500000, 0.500000)
                  add r30.xy, r29.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r28.zw, r28.zzzw, r30.xxxy
                  utof r30.x, r12.w
                  utof r30.y, r13.w
                  add r28.zw, r28.zzzw, r30.xxxy
                  mul r30.xy, r28.zwzz, cb1[83].xyxx
                  utof r30.z, r14.w
                  mul r31.xyz, r23.zyzz, cb1[83].xyxx
                  mul r31.xyz, r29.xyzx, r31.xyzx
                  mul r32.xyz, r27.zyzz, cb1[83].xyxx
                  mul r29.xyz, r29.xyzx, r32.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r29.xyzw, r30.xyzx, t42.xyzw, s4, r31.xyzx, r29.xyzx
                else 
                  ieq r12.w, r28.x, l(1)
                  if_nz r12.w
                    and r12.w, r21.w, l(4095)
                    ubfe r13.w, l(12), l(12), r21.w
                    and r14.w, r22.w, l(1023)
                    utof r30.xz, r10.wwww
                    utof r30.y, r11.w
                    mad r28.xz, r16.zzwz, r30.zzyz, l(0.500000, 0.000000, 0.500000, 0.000000)
                    add r31.xy, r30.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                    min r28.xz, r28.xxzx, r31.xxyx
                    utof r31.x, r12.w
                    utof r31.y, r13.w
                    add r28.xz, r28.xxzx, r31.xxyx
                    mul r31.xy, r28.xzxx, cb1[83].zwzz
                    utof r31.z, r14.w
                    mul r28.xzw, r23.zzyz, cb1[83].zzwz
                    mul r28.xzw, r30.xxyz, r28.xxzw
                    mul r32.xyz, r27.zyzz, cb1[83].zwzz
                    mul r30.xyz, r30.xyzx, r32.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r29.xyzw, r31.xyzx, t43.xyzw, s4, r28.xzwx, r30.xyzx
                  else 
                    mov r29.xyzw, l(1.000000,1.000000,1.000000,1.000000)
                  endif 
                endif 
                mul r20.xyz, r20.xyzx, r29.xyzx
                mul r10.w, r20.w, r29.w
              else 
                mov r20.xyz, l(0,0,0,0)
                mov r10.w, l(0)
              endif 
              ne r11.w, r21.x, l(1.000000)
              add r12.w, r20.w, r10.w
              mad_sat r12.w, r12.w, r21.x, -r21.x
              movc r10.w, r11.w, r12.w, r10.w
              if_nz r28.y
                ubfe r11.w, l(4), l(24), r22.y
                ishl r11.w, l(1), r11.w
                ushr r12.w, r22.y, l(28)
                ishl r12.w, l(1), r12.w
                ieq r13.w, r28.y, l(2)
                if_nz r13.w
                  and r13.w, r22.y, l(4095)
                  ubfe r21.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r22.yyyw
                  utof r29.xz, r11.wwww
                  utof r29.y, r12.w
                  mad r28.xz, r16.zzwz, r29.zzyz, l(0.500000, 0.000000, 0.500000, 0.000000)
                  add r30.xy, r29.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r28.xz, r28.xxzx, r30.xxyx
                  utof r30.x, r13.w
                  utof r30.yz, r21.xxwx
                  add r28.xz, r28.xxzx, r30.xxyx
                  mul r30.xy, r28.xzxx, cb1[84].xyxx
                  mul r28.xzw, r23.zzyz, cb1[84].xxyx
                  mul r28.xzw, r29.xxyz, r28.xxzw
                  mul r31.xyz, r27.zyzz, cb1[84].xyxx
                  mul r29.xyz, r29.xyzx, r31.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r13.w, r30.xyzx, t45.yzwx, s4, r28.xzwx, r29.xyzx
                else 
                  ieq r14.w, r28.y, l(4)
                  if_nz r14.w
                    and r14.w, r22.y, l(4095)
                    ubfe r21.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r22.yyyw
                    utof r28.xz, r11.wwww
                    utof r28.y, r12.w
                    mad r29.xy, r16.zwzz, r28.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r29.zw, r28.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                    min r29.xy, r29.zwzz, r29.xyxx
                    utof r30.x, r14.w
                    utof r30.y, r21.x
                    add r29.xy, r29.xyxx, r30.xyxx
                    mul r29.xy, r29.xyxx, cb1[83].xyxx
                    utof r29.z, r21.w
                    mul r30.xyz, r23.zyzz, cb1[83].xyxx
                    mul r30.xyz, r28.xyzx, r30.xyzx
                    mul r31.xyz, r27.zyzz, cb1[83].xyxx
                    mul r28.xyz, r28.xyzx, r31.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r13.w, r29.xyzx, t42.yzwx, s4, r30.xyzx, r28.xyzx
                  else 
                    and r14.w, r22.y, l(4095)
                    ubfe r21.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r22.yyyw
                    utof r28.xz, r11.wwww
                    utof r28.y, r12.w
                    mad r29.xy, r16.zwzz, r28.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r29.zw, r28.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                    min r29.xy, r29.zwzz, r29.xyxx
                    utof r30.x, r14.w
                    utof r30.y, r21.x
                    add r29.xy, r29.xyxx, r30.xyxx
                    mul r29.xy, r29.xyxx, cb1[83].zwzz
                    utof r29.z, r21.w
                    mul r30.xyz, r23.zyzz, cb1[83].zwzz
                    mul r30.xyz, r28.xyzx, r30.xyzx
                    mul r31.xyz, r27.zyzz, cb1[83].zwzz
                    mul r28.xyz, r28.xyzx, r31.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r13.w, r29.xyzx, t43.yzwx, s4, r30.xyzx, r28.xyzx
                  endif 
                endif 
                mad r28.xyz, r13.wwww, l(0.960000, 0.960000, 0.960000, 0.000000), l(0.040000, 0.040000, 0.040000, 0.000000)
                add_sat r11.w, -r13.w, l(1.000000)
                mul r20.xyz, r11.wwww, r20.xyzx
              else 
                mov r28.xyz, l(0.040000,0.040000,0.040000,0)
              endif 
              ushr r21.xy, r21.zyzz, l(16, 16, 0, 0)
              if_nz r21.x
                ieq r11.w, r21.x, l(2)
                if_nz r11.w
                  ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r9.w, r9.w, l(112), t36.xxxx
                  ubfe r21.zw, l(0, 0, 4, 12), l(0, 0, 24, 12), r22.zzzz
                  ishl r11.w, l(1), r21.z
                  ushr r12.w, r22.z, l(28)
                  ishl r12.w, l(1), r12.w
                  and r13.w, r22.z, l(4095)
                  and r9.w, r9.w, l(1023)
                  utof r29.xz, r11.wwww
                  utof r29.y, r12.w
                  mad r22.yz, r16.zzwz, r29.zzyz, l(0.000000, 0.500000, 0.500000, 0.000000)
                  add r30.xy, r29.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r22.yz, r22.yyzy, r30.xxyx
                  utof r30.x, r13.w
                  utof r30.y, r21.w
                  add r21.zw, r22.yyyz, r30.xxxy
                  mul r30.xy, r21.zwzz, cb1[84].xyxx
                  utof r30.z, r9.w
                  mul r31.xyz, r23.zyzz, cb1[84].xyxx
                  mul r31.xyz, r29.xyzx, r31.xyzx
                  mul r32.xyz, r27.zyzz, cb1[84].xyxx
                  mul r29.xyz, r29.xyzx, r32.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r9.w, r30.xyzx, t45.yzwx, s4, r31.xyzx, r29.xyzx
                else 
                  ieq r11.w, r21.x, l(6)
                  movc r9.w, r11.w, l(0), l(1.000000)
                endif 
              else 
                mov r9.w, l(1.000000)
              endif 
              mul_sat r9.w, r9.w, l(0.76470590)
              if_nz r21.y
                ieq r11.w, r21.y, l(3)
                if_nz r11.w
                  ubfe r21.xyz, l(4, 12, 10, 0), l(24, 12, 10, 0), r22.xxwx
                  ishl r11.w, l(1), r21.x
                  ushr r12.w, r22.x, l(28)
                  ishl r12.w, l(1), r12.w
                  and r13.w, r22.x, l(4095)
                  utof r22.xz, r11.wwww
                  utof r22.y, r12.w
                  mad r16.zw, r16.zzzw, r22.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
                  add r21.xw, r22.zzzy, l(-0.500000, 0.000000, 0.000000, -0.500000)
                  min r16.zw, r16.zzzw, r21.xxxw
                  utof r29.x, r13.w
                  utof r29.yz, r21.yyzy
                  add r16.zw, r16.zzzw, r29.xxxy
                  mul r29.xy, r16.zwzz, cb1[84].zwzz
                  mul r21.xyz, r23.xyzx, cb1[84].zwzz
                  mul r21.xyz, r22.xyzx, r21.xyzx
                  mul r23.xyz, r27.xyzx, cb1[84].zwzz
                  mul r22.xyz, r22.xyzx, r23.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r21.xyz, r29.xyzx, t44.xyzw, s4, r21.xyzx, r22.xyzx
                else 
                  mov r21.xyz, l(0.500000,0.500000,1.000000,0)
                endif 
                mad r16.zw, r21.xxxy, l(0.000000, 0.000000, 1.99218750, 1.99218750), l(0.000000, 0.000000, -1.000000, -1.000000)
                dp2 r11.w, r16.zwzz, r16.zwzz
                add r11.w, -r11.w, l(1.000000)
                max r11.w, r11.w, l(0.000000)
                sqrt r11.w, r11.w
                mul r12.w, r21.z, r21.z
                mul r12.w, r12.w, l(0.33333334)
                min r12.w, r12.w, l(1.000000)
                dp3 r13.w, r26.xyzx, r26.xyzx
                rsq r13.w, r13.w
                mul r21.xyz, r13.wwww, r26.xyzx
                dp3 r13.w, -r25.xyzx, -r25.xyzx
                rsq r13.w, r13.w
                mul r22.xyz, r13.wwww, -r25.xyzx
                mul r23.xyz, r1.yyyy, r24.xyzx
                mul r21.xyz, r1.yyyy, r21.xyzx
                mul r22.xyz, r1.yyyy, r22.xyzx
                mul r13.w, r9.w, l(-17.000000)
                exp r13.w, r13.w
                add r12.w, r12.w, r13.w
                log r12.w, r12.w
                mul r12.w, r12.w, l(-0.05882353)
                max r9.w, r12.w, l(0.000000)
                mul r22.xyz, r16.wwww, r22.xyzx
                mad r21.xyz, r21.xyzx, r16.zzzz, r22.xyzx
                mad r21.xyz, r23.xyzx, r11.wwww, r21.xyzx
                dp3 r11.w, r21.xyzx, r21.xyzx
                rsq r11.w, r11.w
                mul r21.xyz, r11.wwww, r21.xyzx
                add r11.w, -r10.w, l(1.000000)
                mul r22.xyz, r11.wwww, r18.xyzx
                mad r18.xyz, r21.xyzx, r10.wwww, r22.xyzx
              endif 
              add r11.w, -r10.w, l(1.000000)
              mul r21.xyz, r11.wwww, r17.xyzx
              mad r17.xyz, r20.xyzx, r10.wwww, r21.xyzx
              mul r20.xyz, r11.wwww, r19.xyzx
              mad r19.xyz, r28.xyzx, r10.wwww, r20.xyzx
              mul r12.w, r8.z, r11.w
              mad r8.y, r8.y, r11.w, r10.w
              mad r8.z, r9.w, r10.w, r12.w
            endif 
          endif 
        endif 
      endif 
    endloop 
    mov r13.xyz, r17.xyzx
    mov r14.xyz, r18.xyzx
    mov r15.xyz, r19.xyzx
    mov r16.xy, r8.yzyy
    iadd r7.w, r7.w, l(32)
  endloop 
  mov r10.xyz, r13.xyzx
  mov r11.xyz, r14.xyzx
  mov r12.xyz, r15.xyzx
  mov r9.xy, r16.xyxx
endif 
mov_sat r9.x, r9.x
add r1.y, -r9.x, l(1.000000)
mad r1.x, r1.x, r1.y, r9.x
mad r0.yzw, r0.yyzw, r1.yyyy, r11.xxyz
dp3 r1.w, r0.yzwy, r0.yzwy
rsq r1.w, r1.w
mul r3.xyz, r0.yzwy, r1.wwww
mad r0.y, r0.x, r1.y, r9.y
mad r4.xyz, r1.yyyy, l(0.080000, 0.080000, 0.080000, 0.000000), r12.xyzx
dp3 r0.z, -v6.xyzx, -v6.xyzx
rsq r0.z, r0.z
mul r5.xyz, r0.zzzz, -v6.xyzx
ine r0.w, cb1[92].x, l(0)
utof r1.yw, r2.yyyx
dp2 r2.z, r1.wyww, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r2.z, r2.z
mul r2.z, r2.z, l(52.982918)
frc r2.z, r2.z
mad r2.z, r2.z, l(6.28318548), cb1[70].w
sincos r6.x, r7.x, r2.z
dp2 r1.y, r1.ywyy, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r1.y, r1.y
mul r1.yz, r1.yyzy, l(0.000000, 52.982918, 0.00781250, 0.000000)
frc r1.y, r1.y
mad r1.y, r1.y, l(6.28318548), cb1[70].w
sincos r8.x, r9.x, r1.y
dp3_sat r0.x, r3.xyzx, r5.xyzx
dp3 r1.y, -r5.xyzx, r3.xyzx
add r1.y, r1.y, r1.y
mad r11.xyz, r3.xyzx, -r1.yyyy, -r5.xyzx
mul r1.y, r0.y, l(17.000000)
exp r1.y, r1.y
add r1.y, r1.y, l(2.000000)
div r1.y, l(2.000000), r1.y
sqrt r1.w, r1.y
add r2.zw, -r0.yyyx, l(0.000000, 0.000000, 1.000000, 1.000000)
mul r4.w, r2.z, l(5.000000)
mad r5.w, r2.z, l(5.000000), l(-2.500000)
mul_sat r5.w, r5.w, l(0.400000)
mul r5.w, r5.w, l(100.000000)
mad r6.zw, -r2.zzzz, l(0.000000, 0.000000, 10.000000, 5.000000), l(0.000000, 0.000000, 6.857410, 7.085000)
exp r6.z, r6.z
mul r7.w, r2.z, r4.w
mad r6.w, -r7.w, l(2.015905), r6.w
exp r6.w, r6.w
mul r6.zw, r0.xxxx, r6.zzzw
mul r6.zw, r6.zzzw, l(0.000000, 0.000000, 9.136810, 9.708090)
max r6.z, r6.w, r6.z
max r6.z, r6.z, l(1.268160)
iadd r6.w, cb2[0].y, -cb2[58].x
min r1.z, r1.z, l(15.000000)
ftou r1.z, r1.z
ushr r12.xy, r2.xyxx, l(6, 6, 0, 0)
ishl r12.z, r1.z, l(4)
and r1.z, r6.w, l(-32)
iadd r2.x, -r1.z, r6.w
and r2.y, cb2[0].y, l(-32)
iadd r7.w, -r2.y, cb2[0].y
mov r13.xy, l(0,0,0,0)
mov r14.w, l(0)
mov r15.yz, l(0,0,1.000000,0)
mov r16.xy, l(0,0,0,0)
mov r17.x, l(1.000000)
mov r18.xy, l(0,0,0,0)
mov r19.xy, l(0,0,0,0)
mov r20.xyzw, l(0,0,0,0)
mov r21.yzw, l(0,0,0,0)
mov r8.y, r1.z
loop 
  uge r8.z, r8.y, cb2[0].y
  breakc_nz r8.z
  ushr r13.z, r8.y, l(5)
  iadd r14.xyz, r12.xyzx, r13.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r8.z, r14.xyzw, t7.yzxw
  ieq r8.w, r1.z, r8.y
  bfi r9.y, r2.x, l(0), l(0), r8.z
  movc r8.z, r8.w, r9.y, r8.z
  ieq r8.w, r2.y, r8.y
  ubfe r9.y, r7.w, l(0), r8.z
  movc r8.z, r8.w, r9.y, r8.z
  iadd r8.w, r8.y, cb2[0].x
  mov r22.xyzw, r20.xyzw
  mov r23.xyz, r21.yzwy
  mov r9.y, r8.z
  loop 
    breakc_z r9.y
    firstbit_lo r9.z, r9.y
    ishl r9.w, l(1), r9.z
    and r10.w, r9.w, r9.y
    if_nz r10.w
      xor r9.y, r9.w, r9.y
      iadd r9.w, r8.w, r9.z
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r24.xyzw, r9.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r14.xy, r9.w, l(16), t11.xyxx
      add r24.xyz, r24.xyzx, -v6.xyzx
      mov r14.z, r24.w
      lt r14.xyz, |r24.xyzx|, r14.zxyz
      and r9.w, r14.y, r14.x
      and r9.w, r14.z, r9.w
      if_nz r9.w
        iadd r9.z, r8.y, r9.z
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r9.z, l(0), t15.wxyz
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r13.zw, r9.z, l(96), t15.xxxy
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r9.z, l(116), t15.zwxy
        add r14.xyz, -r24.yzwy, v6.xyzx
        and r9.w, r25.w, l(0x0000ffff)
        ubfe r10.w, l(6), l(25), r25.w
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r26.xyzw, r9.w, l(0), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r9.w, l(16), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r9.w, l(32), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r9.w, l(48), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r9.w, l(64), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r9.w, l(80), t16.xyzw
        dp3 r12.w, r26.xyzx, r14.xyzx
        add_sat r12.w, r26.w, r12.w
        dp3 r15.w, r27.xyzx, r14.xyzx
        add_sat r15.w, r27.w, r15.w
        mul r12.w, r12.w, r15.w
        dp3 r15.w, r28.xyzx, r14.xyzx
        add_sat r15.w, r28.w, r15.w
        mul r12.w, r12.w, r15.w
        dp3 r15.w, r29.xyzx, r14.xyzx
        add_sat r15.w, r29.w, r15.w
        mul r12.w, r12.w, r15.w
        dp3 r15.w, r30.xyzx, r14.xyzx
        add_sat r15.w, r30.w, r15.w
        mul r12.w, r12.w, r15.w
        dp3 r15.w, r31.xyzx, r14.xyzx
        add_sat r15.w, r31.w, r15.w
        mul r15.x, r12.w, r15.w
        and r12.w, r13.z, l(1)
        movc r15.xw, r12.wwww, r15.xxxy, r15.zzzx
        mov r12.w, r13.z
        mov r26.xy, r15.xwxx
        mov r16.w, l(1)
        loop 
          ige r17.z, r16.w, r10.w
          breakc_nz r17.z
          iadd r17.z, r9.w, r16.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r17.z, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r17.z, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r17.z, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r17.z, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r17.z, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r17.z, l(80), t16.xyzw
          dp3 r17.z, r27.xyzx, r14.xyzx
          add_sat r17.z, r27.w, r17.z
          mul r17.z, r17.z, r26.x
          dp3 r17.w, r28.xyzx, r14.xyzx
          add_sat r17.w, r28.w, r17.w
          mul r17.z, r17.w, r17.z
          dp3 r17.w, r29.xyzx, r14.xyzx
          add_sat r17.w, r29.w, r17.w
          mul r17.z, r17.w, r17.z
          dp3 r17.w, r30.xyzx, r14.xyzx
          add_sat r17.w, r30.w, r17.w
          mul r17.z, r17.w, r17.z
          dp3 r17.w, r31.xyzx, r14.xyzx
          add_sat r17.w, r31.w, r17.w
          mul r17.z, r17.w, r17.z
          dp3 r17.w, r32.xyzx, r14.xyzx
          add_sat r17.w, r32.w, r17.w
          mul r26.x, r17.w, r17.z
          ushr r18.w, r12.w, l(2)
          ubfe r19.w, l(1), l(2), r12.w
          and r24.w, r18.w, l(2)
          max r26.z, r26.x, r26.y
          mad r17.z, -r17.z, r17.w, l(1.000000)
          mul r17.z, r17.z, r26.y
          movc r17.y, r24.w, r17.z, r26.z
          movc r26.xy, r19.wwww, r26.xyxx, r17.xyxx
          iadd r16.w, r16.w, l(1)
          mov r12.w, r18.w
        endloop 
        mov_sat r26.y, r26.y
        mul r9.w, r13.w, r26.y
        lt r10.w, l(0.000000), r9.w
        if_nz r10.w
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r9.z, l(16), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r9.z, l(32), t15.yxwz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r9.z, l(48), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r9.z, l(64), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r9.z, l(80), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r9.z, l(132), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r9.z, l(148), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r9.z, l(164), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r9.z, l(180), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r9.z, l(196), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xy, r9.z, l(212), t15.xyxx
          mad r23.z, r26.y, r13.w, r23.z
          mul r9.z, r25.z, r9.w
          mov r25.z, r32.z
          dp3 r9.w, r11.xyzx, r25.xyzx
          dp3 r10.w, r14.xyzx, r25.xyzx
          add r10.w, -r32.w, r10.w
          ge r12.w, r10.w, l(0.000000)
          max r10.w, r5.w, |r10.w|
          movc r10.w, r12.w, r10.w, -r10.w
          max r9.w, -r9.w, l(0.00000010)
          div r9.w, r10.w, r9.w
          min r9.w, |r9.w|, l(131072.000000)
          mov r32.z, r33.z
          dp3 r10.w, r11.xyzx, r32.xyzx
          dp3 r12.w, r14.xyzx, r32.xyzx
          add r12.w, -r33.w, r12.w
          ge r13.z, r12.w, l(0.000000)
          max r12.w, r5.w, |r12.w|
          movc r12.w, r13.z, r12.w, -r12.w
          max r10.w, -r10.w, l(0.00000010)
          div r10.w, r12.w, r10.w
          min r9.w, r9.w, |r10.w|
          mov r33.z, r34.z
          dp3 r10.w, r11.xyzx, r33.xyzx
          dp3 r12.w, r14.xyzx, r33.xyzx
          add r12.w, -r34.w, r12.w
          ge r13.z, r12.w, l(0.000000)
          max r12.w, r5.w, |r12.w|
          movc r12.w, r13.z, r12.w, -r12.w
          max r10.w, -r10.w, l(0.00000010)
          div r10.w, r12.w, r10.w
          min r9.w, r9.w, |r10.w|
          mov r34.z, r35.z
          dp3 r10.w, r11.xyzx, r34.xyzx
          dp3 r12.w, r14.xyzx, r34.xyzx
          add r12.w, -r35.w, r12.w
          ge r13.z, r12.w, l(0.000000)
          max r12.w, r5.w, |r12.w|
          movc r12.w, r13.z, r12.w, -r12.w
          max r10.w, -r10.w, l(0.00000010)
          div r10.w, r12.w, r10.w
          min r9.w, r9.w, |r10.w|
          mov r35.z, r36.x
          dp3 r10.w, r11.xyzx, r35.xyzx
          dp3 r12.w, r14.xyzx, r35.xyzx
          add r12.w, -r36.y, r12.w
          ge r13.z, r12.w, l(0.000000)
          max r12.w, r5.w, |r12.w|
          movc r12.w, r13.z, r12.w, -r12.w
          max r10.w, -r10.w, l(0.00000010)
          div r10.w, r12.w, r10.w
          min r9.w, r9.w, |r10.w|
          mov r37.zw, r36.zzzw
          dp3 r10.w, r11.zxyz, r37.xzwx
          dp3 r12.w, r14.zxyz, r37.xzwx
          add r12.w, -r37.y, r12.w
          ge r13.z, r12.w, l(0.000000)
          max r12.w, r5.w, |r12.w|
          movc r12.w, r13.z, r12.w, -r12.w
          max r10.w, -r10.w, l(0.00000010)
          div r10.w, r12.w, r10.w
          min r9.w, r9.w, |r10.w|
          mov r25.x, r29.w
          mov r25.yz, r30.zzwz
          add r17.yzw, r14.xxyz, r25.xxyz
          mad r17.yzw, r11.xxyz, r9.wwww, r17.yyzw
          dp3 r10.w, r17.yzwy, r17.yzwy
          sqrt r10.w, r10.w
          div r9.w, r9.w, r10.w
          add r9.w, r9.w, r9.w
          sqrt r9.w, r9.w
          mad r9.w, r2.z, l(5.000000), r9.w
          add r9.w, r9.w, l(-0.844800)
          mov r24.y, r27.z
          mov r24.z, r28.x
          dp3 r32.x, r17.yzwy, r24.xyzx
          mov r25.xy, r27.xwxx
          mov r25.z, r28.w
          dp3 r32.y, r17.yzwy, r25.xyzx
          mov r28.x, r27.y
          dp3 r32.z, r17.yzwy, r28.xyzx
          ubfe r10.w, l(9), l(16), r25.w
          utof r32.w, r10.w
          sample_l_indexable(texturecubearray)(float,float,float,float) r17.yzw, r32.xyzw, t8.wxyz, s2, r9.w
          dp3 r27.x, r14.xyzx, r24.xyzx
          dp3 r27.y, r14.xyzx, r25.xyzx
          dp3 r27.z, r14.xyzx, r28.xyzx
          mad_sat r14.xyz, r27.xyzx, r29.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
          mov r30.z, r31.x
          mad r14.xyz, r14.xyzx, r30.xyzx, r31.yzwy
          dp3 r32.x, r3.xyzx, r24.xyzx
          dp3 r32.y, r3.xyzx, r25.xyzx
          dp3 r32.z, r3.xyzx, r28.xyzx
          lt r24.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r32.xyzx
          movc r16.z, r24.x, l(0), l(0.500000)
          add r25.xyz, r14.xyzx, r16.xyzx
          sample_l_indexable(texture3d)(float,float,float,float) r25.xyz, r25.xyzx, t17.xyzw, s4, l(0.000000)
          mul r26.xzw, r32.xxyz, r32.xxyz
          mul r26.xzw, r9.zzzz, r26.xxzw
          movc r18.z, r24.y, l(0), l(0.500000)
          add r24.xyw, r14.xyxz, r18.xyxz
          sample_l_indexable(texture3d)(float,float,float,float) r24.xyw, r24.xywx, t18.xywz, s4, l(0.000000)
          mul r24.xyw, r26.zzzz, r24.xyxw
          mad r24.xyw, r25.xyxz, r26.xxxx, r24.xyxw
          movc r19.z, r24.z, l(0), l(0.500000)
          add r14.xyz, r14.xyzx, r19.xyzx
          sample_l_indexable(texture3d)(float,float,float,float) r14.xyz, r14.xyzx, t19.xyzw, s4, l(0.000000)
          mad r14.xyz, r14.xyzx, r26.wwww, r24.xywx
          sample_l_indexable(texturecubearray)(float,float,float,float) r24.xyz, r32.xyzw, t8.xyzw, s2, l(6.000000)
          mul r25.xyz, r14.xyzx, r24.xyzx
          dp3 r9.w, r25.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r22.xyz, r14.xyzx, r24.xyzx, r22.xyzx
          mul r10.w, r6.z, r9.w
          mul r14.xyz, r9.zzzz, r17.yzwy
          dp3 r9.z, r14.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r9.z, r6.z, r9.w, r9.z
          div r9.z, r10.w, r9.z
          mov r24.x, r22.w
          mov r24.yz, r23.xxyx
          mad r23.xyw, r14.yzyx, r9.zzzz, r24.yzyx
          mov r22.w, r23.w
        endif 
      endif 
    endif 
  endloop 
  mov r20.xyzw, r22.xyzw
  mov r21.yzw, r23.xxyz
  iadd r8.y, r8.y, l(32)
endloop 
lt r2.y, r21.w, l(1.000000)
if_nz r2.y
  mov r13.xy, l(0,0,0,0)
  mov r14.w, l(0)
  mov r15.yz, l(0,0,1.000000,0)
  mov r16.xy, l(0,0,0,0)
  mov r17.x, l(1.000000)
  mov r18.xy, l(0,0,0,0)
  mov r19.xy, l(0,0,0,0)
  mov r22.x, r20.w
  mov r22.yzw, r21.yyzw
  mov r8.yzw, r20.xxyz
  mov r2.y, r21.w
  mov r7.w, l(0)
  loop 
    uge r9.y, r7.w, r6.w
    breakc_nz r9.y
    ushr r13.z, r7.w, l(5)
    iadd r14.xyz, r12.xyzx, r13.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r9.y, r14.xyzw, t7.yxzw
    ieq r9.z, r1.z, r7.w
    ubfe r9.w, r2.x, l(0), r9.y
    movc r9.y, r9.z, r9.w, r9.y
    iadd r9.z, r7.w, cb2[0].x
    mov r23.xyzw, r22.xyzw
    mov r14.xyz, r8.yzwy
    mov r9.w, r2.y
    mov r10.w, r9.y
    loop 
      breakc_z r10.w
      firstbit_lo r12.w, r10.w
      ishl r13.z, l(1), r12.w
      and r13.w, r10.w, r13.z
      if_nz r13.w
        xor r10.w, r10.w, r13.z
        iadd r13.z, r9.z, r12.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r24.xyzw, r13.z, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r25.xy, r13.z, l(16), t11.xyxx
        add r24.xyz, r24.xyzx, -v6.xyzx
        mov r25.z, r24.w
        lt r24.xyz, |r24.xyzx|, r25.zxyz
        and r13.z, r24.y, r24.x
        and r13.z, r24.z, r13.z
        if_nz r13.z
          iadd r12.w, r7.w, r12.w
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r12.w, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r13.zw, r12.w, l(96), t15.xxxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r12.w, l(116), t15.zwxy
          add r26.xyz, -r24.yzwy, v6.xyzx
          and r15.w, r25.w, l(0x0000ffff)
          ubfe r16.w, l(6), l(25), r25.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r15.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r15.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r15.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r15.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r15.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r15.w, l(80), t16.xyzw
          dp3 r17.z, r27.xyzx, r26.xyzx
          add_sat r17.z, r27.w, r17.z
          dp3 r17.w, r28.xyzx, r26.xyzx
          add_sat r17.w, r28.w, r17.w
          mul r17.z, r17.w, r17.z
          dp3 r17.w, r29.xyzx, r26.xyzx
          add_sat r17.w, r29.w, r17.w
          mul r17.z, r17.w, r17.z
          dp3 r17.w, r30.xyzx, r26.xyzx
          add_sat r17.w, r30.w, r17.w
          mul r17.z, r17.w, r17.z
          dp3 r17.w, r31.xyzx, r26.xyzx
          add_sat r17.w, r31.w, r17.w
          mul r17.z, r17.w, r17.z
          dp3 r17.w, r32.xyzx, r26.xyzx
          add_sat r17.w, r32.w, r17.w
          mul r15.x, r17.w, r17.z
          and r17.z, r13.z, l(1)
          movc r17.zw, r17.zzzz, r15.xxxy, r15.zzzx
          mov r15.x, r13.z
          mov r27.xy, r17.zwzz
          mov r18.w, l(1)
          loop 
            ige r19.w, r18.w, r16.w
            breakc_nz r19.w
            iadd r19.w, r15.w, r18.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r19.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r19.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r19.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r19.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r19.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r19.w, l(80), t16.xyzw
            dp3 r19.w, r28.xyzx, r26.xyzx
            add_sat r19.w, r28.w, r19.w
            mul r19.w, r19.w, r27.x
            dp3 r24.w, r29.xyzx, r26.xyzx
            add_sat r24.w, r29.w, r24.w
            mul r19.w, r19.w, r24.w
            dp3 r24.w, r30.xyzx, r26.xyzx
            add_sat r24.w, r30.w, r24.w
            mul r19.w, r19.w, r24.w
            dp3 r24.w, r31.xyzx, r26.xyzx
            add_sat r24.w, r31.w, r24.w
            mul r19.w, r19.w, r24.w
            dp3 r24.w, r32.xyzx, r26.xyzx
            add_sat r24.w, r32.w, r24.w
            mul r19.w, r19.w, r24.w
            dp3 r24.w, r33.xyzx, r26.xyzx
            add_sat r24.w, r33.w, r24.w
            mul r27.x, r19.w, r24.w
            ushr r26.w, r15.x, l(2)
            ubfe r27.z, l(1), l(2), r15.x
            and r27.w, r26.w, l(2)
            max r28.x, r27.x, r27.y
            mad r19.w, -r19.w, r24.w, l(1.000000)
            mul r19.w, r19.w, r27.y
            movc r17.y, r27.w, r19.w, r28.x
            movc r27.xy, r27.zzzz, r27.xyxx, r17.xyxx
            iadd r18.w, r18.w, l(1)
            mov r15.x, r26.w
          endloop 
          add_sat r13.z, -r9.w, r27.y
          mul r15.x, r13.w, r13.z
          lt r15.w, l(0.000000), r15.x
          if_nz r15.w
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r12.w, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r12.w, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r12.w, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r12.w, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r12.w, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r12.w, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r12.w, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r12.w, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r12.w, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r12.w, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xy, r12.w, l(212), t15.xyxx
            mad r23.w, r13.z, r13.w, r23.w
            mul r12.w, r25.z, r15.x
            mov r25.z, r33.z
            dp3 r13.z, r11.xyzx, r25.xyzx
            dp3 r13.w, r26.xyzx, r25.xyzx
            add r13.w, -r33.w, r13.w
            ge r15.x, r13.w, l(0.000000)
            max r13.w, r5.w, |r13.w|
            movc r13.w, r15.x, r13.w, -r13.w
            max r13.z, -r13.z, l(0.00000010)
            div r13.z, r13.w, r13.z
            min r13.z, |r13.z|, l(131072.000000)
            mov r33.z, r34.z
            dp3 r13.w, r11.xyzx, r33.xyzx
            dp3 r15.x, r26.xyzx, r33.xyzx
            add r15.x, -r34.w, r15.x
            ge r15.w, r15.x, l(0.000000)
            max r15.x, r5.w, |r15.x|
            movc r15.x, r15.w, r15.x, -r15.x
            max r13.w, -r13.w, l(0.00000010)
            div r13.w, r15.x, r13.w
            min r13.z, |r13.w|, r13.z
            mov r34.z, r35.z
            dp3 r13.w, r11.xyzx, r34.xyzx
            dp3 r15.x, r26.xyzx, r34.xyzx
            add r15.x, -r35.w, r15.x
            ge r15.w, r15.x, l(0.000000)
            max r15.x, r5.w, |r15.x|
            movc r15.x, r15.w, r15.x, -r15.x
            max r13.w, -r13.w, l(0.00000010)
            div r13.w, r15.x, r13.w
            min r13.z, |r13.w|, r13.z
            mov r35.z, r36.z
            dp3 r13.w, r11.xyzx, r35.xyzx
            dp3 r15.x, r26.xyzx, r35.xyzx
            add r15.x, -r36.w, r15.x
            ge r15.w, r15.x, l(0.000000)
            max r15.x, r5.w, |r15.x|
            movc r15.x, r15.w, r15.x, -r15.x
            max r13.w, -r13.w, l(0.00000010)
            div r13.w, r15.x, r13.w
            min r13.z, |r13.w|, r13.z
            mov r36.z, r37.x
            dp3 r13.w, r11.xyzx, r36.xyzx
            dp3 r15.x, r26.xyzx, r36.xyzx
            add r15.x, -r37.y, r15.x
            ge r15.w, r15.x, l(0.000000)
            max r15.x, r5.w, |r15.x|
            movc r15.x, r15.w, r15.x, -r15.x
            max r13.w, -r13.w, l(0.00000010)
            div r13.w, r15.x, r13.w
            min r13.z, |r13.w|, r13.z
            mov r38.zw, r37.zzzw
            dp3 r13.w, r11.zxyz, r38.xzwx
            dp3 r15.x, r26.zxyz, r38.xzwx
            add r15.x, -r38.y, r15.x
            ge r15.w, r15.x, l(0.000000)
            max r15.x, r5.w, |r15.x|
            movc r15.x, r15.w, r15.x, -r15.x
            max r13.w, -r13.w, l(0.00000010)
            div r13.w, r15.x, r13.w
            min r13.z, |r13.w|, r13.z
            mov r25.x, r30.w
            mov r25.yz, r31.zzwz
            add r17.yzw, r26.xxyz, r25.xxyz
            mad r17.yzw, r11.xxyz, r13.zzzz, r17.yyzw
            dp3 r13.w, r17.yzwy, r17.yzwy
            sqrt r13.w, r13.w
            div r13.z, r13.z, r13.w
            add r13.z, r13.z, r13.z
            sqrt r13.z, r13.z
            mad r13.z, r2.z, l(5.000000), r13.z
            add r13.z, r13.z, l(-0.844800)
            mov r24.y, r28.z
            mov r24.z, r29.x
            dp3 r33.x, r17.yzwy, r24.xyzx
            mov r25.xy, r28.xwxx
            mov r25.z, r29.w
            dp3 r33.y, r17.yzwy, r25.xyzx
            mov r29.x, r28.y
            dp3 r33.z, r17.yzwy, r29.xyzx
            ubfe r13.w, l(9), l(16), r25.w
            utof r33.w, r13.w
            sample_l_indexable(texturecubearray)(float,float,float,float) r17.yzw, r33.xyzw, t8.wxyz, s2, r13.z
            dp3 r28.x, r26.xyzx, r24.xyzx
            dp3 r28.y, r26.xyzx, r25.xyzx
            dp3 r28.z, r26.xyzx, r29.xyzx
            mad_sat r26.xyz, r28.xyzx, r30.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
            mov r31.z, r32.x
            mad r26.xyz, r26.xyzx, r31.xyzx, r32.yzwy
            dp3 r33.x, r3.xyzx, r24.xyzx
            dp3 r33.y, r3.xyzx, r25.xyzx
            dp3 r33.z, r3.xyzx, r29.xyzx
            lt r24.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r33.xyzx
            movc r16.z, r24.x, l(0), l(0.500000)
            add r25.xyz, r16.xyzx, r26.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r25.xyz, r25.xyzx, t17.xyzw, s4, l(0.000000)
            mul r27.xzw, r33.xxyz, r33.xxyz
            mul r27.xzw, r12.wwww, r27.xxzw
            movc r18.z, r24.y, l(0), l(0.500000)
            add r24.xyw, r18.xyxz, r26.xyxz
            sample_l_indexable(texture3d)(float,float,float,float) r24.xyw, r24.xywx, t18.xywz, s4, l(0.000000)
            mul r24.xyw, r27.zzzz, r24.xyxw
            mad r24.xyw, r25.xyxz, r27.xxxx, r24.xyxw
            movc r19.z, r24.z, l(0), l(0.500000)
            add r25.xyz, r19.xyzx, r26.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r25.xyz, r25.xyzx, t19.xyzw, s4, l(0.000000)
            mad r24.xyz, r25.xyzx, r27.wwww, r24.xywx
            sample_l_indexable(texturecubearray)(float,float,float,float) r25.xyz, r33.xyzw, t8.xyzw, s2, l(6.000000)
            mul r26.xyz, r24.xyzx, r25.xyzx
            dp3 r13.z, r26.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r14.xyz, r24.xyzx, r25.xyzx, r14.xyzx
            mul r13.w, r6.z, r13.z
            mul r17.yzw, r12.wwww, r17.yyzw
            dp3 r12.w, r17.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r12.w, r6.z, r13.z, r12.w
            div r12.w, r13.w, r12.w
            mad r23.xyz, r17.yzwy, r12.wwww, r23.xyzx
          endif 
        endif 
      endif 
    endloop 
    mov r22.xyzw, r23.xyzw
    mov r8.yzw, r14.xxyz
    iadd r7.w, r7.w, l(32)
  endloop 
  mov r21.xyzw, r22.zxyw
  mov r20.xyz, r8.yzwy
  mov r21.xyzw, r21.yzxw
else 
  mov r21.x, r20.w
endif 
max r1.z, r21.w, l(1.000000)
rcp r1.z, r1.z
mov_sat r21.w, r21.w
mul r13.xyz, r1.zzzz, r20.xyzx
mul r2.xyz, r1.zzzz, r21.xyzx
lt r5.w, r21.w, l(0.990000)
if_nz r5.w
  add r5.w, -r21.w, l(1.000000)
  mul r6.z, r5.w, cb2[19].x
  add r8.yzw, v6.xxyz, -cb2[35].xxyz
  mul r14.x, r8.y, cb2[35].w
  mul r14.yz, r8.zzwz, cb2[36].xxyx
  add_sat r8.yzw, r14.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
  mul r14.xy, r8.yzyy, cb2[36].zwzz
  mul r14.z, r8.w, cb2[37].x
  add r8.yzw, r14.xxyz, cb2[37].yyzw
  lt r9.yzw, l(0.000000, 0.000000, 0.000000, 0.000000), r3.xxyz
  movc r14.xyz, r9.yzwy, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
  mov r14.w, l(0)
  add r9.yzw, r8.yyzw, r14.wwwx
  sample_l_indexable(texture3d)(float,float,float,float) r9.yzw, r9.yzwy, t17.wxyz, s4, l(0.000000)
  mul r15.xyz, r3.xyzx, r3.xyzx
  mul r15.xyz, r6.zzzz, r15.xyzx
  add r16.xyz, r8.yzwy, r14.wwyw
  sample_l_indexable(texture3d)(float,float,float,float) r16.xyz, r16.xyzx, t18.xyzw, s4, l(0.000000)
  mul r16.xyz, r15.yyyy, r16.xyzx
  mad r9.yzw, r9.yyzw, r15.xxxx, r16.xxyz
  add r8.yzw, r8.yyzw, r14.wwwz
  sample_l_indexable(texture3d)(float,float,float,float) r8.yzw, r8.yzwy, t19.wxyz, s4, l(0.000000)
  mad r8.yzw, r8.yyzw, r15.zzzz, r9.yyzw
  mov r3.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r9.yzw, r3.xyzw, t8.wxyz, s2, l(6.000000)
  mul r8.yzw, r8.yyzw, r9.yyzw
  dp3 r3.w, r8.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
  mad r13.xyz, r20.xyzx, r1.zzzz, r8.yzwy
  mov r11.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r8.yzw, r11.xyzw, t8.wxyz, s2, r4.w
  mad r1.z, cb2[19].x, r5.w, -r3.w
  mad r1.z, r0.y, r1.z, r3.w
  mad r2.xyz, r8.yzwy, r1.zzzz, r2.xyzx
endif 
mad r6.zw, r0.xxxy, l(0.000000, 0.000000, 0.984375, 0.984375), l(0.000000, 0.000000, 0.00781250, 0.00781250)
sample_l_indexable(texture2d)(float,float,float,float) r6.zw, r6.zwzz, t5.zwxy, s2, l(0.000000)
mul r14.xyz, r2.yzxy, r6.zzzz
mul r2.xyz, r2.xyzx, r6.wwww
sqrt r0.y, r1.w
mad r0.y, r0.y, l(0.500000), l(0.500000)
mul r0.y, r0.y, r0.y
mul r1.z, r0.y, l(0.500000)
mad r0.y, -r0.y, l(0.500000), l(1.000000)
mad r3.w, r0.x, r0.y, r1.z
mul r0.y, r0.y, r3.w
mul r1.z, r1.z, r3.w
dp3 r3.w, r3.xyzx, cb2[17].xyzx
mov_sat r4.w, r3.w
ge r5.w, l(0.000000), r4.w
if_nz r5.w
  mov r6.z, l(0)
endif 
if_z r5.w
  mul r8.yzw, v6.yyyy, cb2[29].xxyz
  mad r8.yzw, v6.xxxx, cb2[28].xxyz, r8.yyzw
  mad r8.yzw, v6.zzzz, cb2[30].xxyz, r8.yyzw
  add r8.yzw, r8.yyzw, cb2[31].xxyz
  add r5.w, r8.w, -cb2[17].w
  mad r5.w, -r5.w, l(0.00006104), l(1.000000)
  mov_sat r6.w, r5.w
  eq r6.w, r5.w, r6.w
  if_nz r6.w
    mov r6.w, l(0)
    mov r7.w, l(0)
    loop 
      ge r9.y, r6.w, l(3.000000)
      breakc_nz r9.y
      ftou r9.y, r6.w
      add r9.zw, r8.yyyz, -cb2[r9.y + 20].xxxy
      max r9.z, |r9.w|, |r9.z|
      mul r7.w, r9.z, cb2[r9.y + 20].z
      lt r9.y, r7.w, l(1.000000)
      if_nz r9.y
        break 
      endif 
      add r6.w, r6.w, l(1.000000)
      mov r7.w, l(0)
    endloop 
  else 
    mov r6.w, l(3.000000)
    mov r7.w, l(0)
  endif 
  ge r9.y, r6.w, l(3.000000)
  if_nz r9.y
    mul r15.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
    rcp r16.xz, r15.xxxx
    mov r16.y, -r16.z
    mad r15.xyz, r8.yzyy, r16.xyzx, r15.yzyy
    add r16.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r15.xyz, r15.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r15.xyz, r16.xyzx, r15.xyzx
    mul r9.zw, r15.zzzy, cb2[32].xxxx
    round_ni r9.zw, r9.zzzw
    mul r9.w, r9.w, cb2[27].x
    mad r9.z, r9.w, cb2[32].x, r9.z
    ftou r9.z, r9.z
    iadd r9.z, r9.z, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r9.w, r9.z, l(0), t23.xxxx
    and r10.w, r9.w, l(0x40000000)
    ishl r11.w, r9.w, l(2)
    if_z r10.w
      and r10.w, r9.w, l(0x01ffffff)
      iadd r16.x, r9.z, r10.w
      ushr r9.z, r9.w, l(25)
      utof r9.z, r9.z
      mul r15.xyz, r9.zzzz, r15.xyzx
      frc r15.xyz, r15.xyzx
      mul r15.xyz, r15.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
      ftou r15.xyz, r15.xyzx
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.z, r16.x, l(0), t23.xxxx
      ushr r9.zw, r15.zzzy, l(0, 0, 6, 6)
      and r10.w, r16.z, l(0xc0000000)
      iadd r12.w, r16.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r12.w, r12.w, l(0), t23.xxxx
      movc r9.w, r9.w, r16.z, r12.w
      ushr r12.w, r9.w, l(13)
      movc r9.z, r9.z, r12.w, r9.w
      and r9.z, r9.z, l(8191)
      iadd r17.x, r9.z, r16.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.z, r17.x, l(0), t23.xxxx
      mov r16.y, l(0)
      mov r17.y, l(1)
      movc r17.xyz, r10.wwww, r16.xyzx, r17.xyzx
      movc r18.yz, r10.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r9.zw, r15.zzzy, r18.yyyy
      and r9.zw, r9.zzzw, l(0, 0, 1, 1)
      and r12.w, r17.z, l(0xc0000000)
      iadd r15.w, r17.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.w, r15.w, l(0), t23.xxxx
      movc r9.w, r9.w, r17.z, r15.w
      ushr r15.w, r9.w, l(13)
      movc r9.z, r9.z, r15.w, r9.w
      and r9.z, r9.z, l(8191)
      iadd r18.x, r9.z, r17.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.w, r18.x, l(0), t23.xxxx
      movc r17.xyz, r12.wwww, r17.xyzx, r18.xzwx
      movc r16.xyz, r10.wwww, r16.xyzx, r17.xyzx
      and r9.z, r16.z, l(0xc0000000)
      if_z r9.z
        iadd r9.z, -r16.y, l(6)
        ushr r9.zw, r15.zzzy, r9.zzzz
        or r10.w, r16.z, l(0x40000000)
        bfi r9.w, l(1), l(1), r9.w, l(0)
        bfi r9.z, l(1), l(0), r9.z, r9.w
        imul null, r9.z, r9.z, l(10)
        ushr r9.z, r10.w, r9.z
        and r9.z, r9.z, l(1023)
        iadd r17.x, r9.z, r16.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.w, r17.x, l(0), t23.xxxx
        iadd r17.yz, r16.yyyy, l(0, 1, 2, 0)
        iadd r9.z, -r17.y, l(6)
        ushr r9.zw, r15.zzzy, r9.zzzz
        and r10.w, r17.w, l(0xc0000000)
        or r12.w, r17.w, l(0x40000000)
        bfi r9.w, l(1), l(1), r9.w, l(0)
        bfi r9.z, l(1), l(0), r9.z, r9.w
        imul null, r9.z, r9.z, l(10)
        ushr r9.z, r12.w, r9.z
        and r9.z, r9.z, l(1023)
        iadd r18.x, r9.z, r17.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.x, l(0), t23.xxxx
        mov r18.y, r17.z
        movc r18.xyz, r10.wwww, r17.xywx, r18.xyzx
        iadd r9.z, -r18.y, l(6)
        ushr r9.zw, r15.zzzy, r9.zzzz
        and r12.w, r18.z, l(0xc0000000)
        or r15.w, r18.z, l(0x40000000)
        bfi r9.w, l(1), l(1), r9.w, l(0)
        bfi r9.z, l(1), l(0), r9.z, r9.w
        imul null, r9.z, r9.z, l(10)
        ushr r9.z, r15.w, r9.z
        and r9.z, r9.z, l(1023)
        iadd r19.x, r9.z, r18.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.y, r19.x, l(0), t23.xxxx
        movc r9.zw, r12.wwww, r18.xxxz, r19.xxxy
        movc r16.xz, r10.wwww, r17.xxwx, r9.zzwz
      endif 
      and r9.z, r16.z, l(0xc0000000)
      if_z r9.z
        ubfe r9.w, l(14), l(15), r16.z
        utof r9.w, r9.w
        mul r9.w, r9.w, cb2[27].w
        mul r9.w, r9.w, l(0.00006104)
        and r16.yw, r16.zzzz, l(0, 0x00007fff, 0, 0x20000000)
        utof r10.w, r16.y
        mul r10.w, r10.w, cb2[27].w
        mul r10.w, r10.w, l(0.00003052)
        and r12.w, r15.y, l(3)
        iadd r12.w, r12.w, r16.x
        iadd r12.w, r12.w, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r12.w, r12.w, l(0), t23.xxxx
        bfi r15.xyw, l(2, 2, 0, 1), l(3, 1, 0, 4), r15.xyxz, l(0, 0, 0, 0)
        ushr r12.w, r12.w, r15.x
        and r12.w, r12.w, l(255)
        utof r12.w, r12.w
        mul r12.w, r10.w, r12.w
        mad r12.w, r12.w, l(0.00392157), r9.w
        iadd r15.x, r15.y, l(1)
        ubfe r15.y, l(1), l(1), r15.z
        iadd r15.x, r15.y, r15.x
        iadd r15.x, r15.x, r16.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.x, r15.x, l(0), t23.xxxx
        ushr r15.x, r15.x, r15.w
        and r15.x, r15.x, l(0x0000ffff)
        utof r15.x, r15.x
        mul r10.w, r10.w, r15.x
        mad r9.w, r10.w, l(0.00001526), r9.w
        movc r11.w, r16.w, r12.w, r9.w
      else 
        and r9.w, r16.z, l(0x80000000)
        iadd r10.w, r16.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r10.w, r10.w, l(0), t23.xxxx
        movc r9.w, r9.w, r10.w, l(0)
        ishl r10.w, r16.z, l(2)
        ushr r12.w, r9.w, l(16)
        f16tof32 r12.w, r12.w
        and r9.w, r9.w, l(0x0000ffff)
        f16tof32 r9.w, r9.w
        mad r10.w, r8.y, r12.w, r10.w
        mad r9.w, r8.z, r9.w, r10.w
        movc r11.w, r9.z, r9.w, r11.w
      endif 
    endif 
    mad r8.w, -cb2[27].z, l(2.000000), r8.w
    lt r8.w, r11.w, r8.w
    movc r6.z, r8.w, l(0), l(1.000000)
  endif 
  if_z r9.y
    if_z cb2[58].y
      ftou r8.w, r6.w
      add r9.yz, r8.yyzy, -cb2[r8.w + 20].xxyx
      mul r9.yz, r9.yyzy, cb2[r8.w + 20].zzzz
      mad r15.xy, r9.yzyy, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r8.w, cb2[26].y
      add r15.z, r6.w, r8.w
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r8.w, r15.xyzx, t13.xxxx, s13, r5.w
      sample_l_indexable(texture2darray)(float,float,float,float) r9.y, r15.xyzx, t31.yxzw, s0, l(0.000000)
      add r8.w, r8.w, r9.y
      add_sat r8.w, r8.w, l(-1.000000)
      mul r9.y, r8.w, r8.w
      mul r6.z, r8.w, r9.y
    endif 
    if_nz cb2[58].y
      mov r15.x, -r6.x
      ftou r8.w, r6.w
      add r6.w, r6.w, l(1.000000)
      min r6.w, r6.w, l(2.000000)
      ftou r6.w, r6.w
      add r7.w, -r7.w, l(1.000000)
      mul r7.w, r7.w, l(28.000000)
      ftou r7.w, r7.w
      add r9.yz, r8.yyzy, -cb2[r8.w + 20].xxyx
      mul r9.yz, r9.yyzy, cb2[r8.w + 20].zzzz
      mad r9.yz, r9.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      add r8.yz, r8.yyzy, -cb2[r6.w + 20].xxyx
      mul r8.yz, r8.yyzy, cb2[r6.w + 20].zzzz
      mad r8.yz, r8.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      mov r15.y, r7.x
      mov r15.z, r6.x
      mov r9.w, l(0)
      mov r10.w, l(0)
      loop 
        uge r11.w, r10.w, l(8)
        breakc_nz r11.w
        ult r11.w, r7.w, r10.w
        movc r16.xy, r11.wwww, r8.yzyy, r9.yzyy
        movc r12.w, r11.w, cb2[r6.w + 20].w, cb2[r8.w + 20].w
        movc r11.w, r11.w, r6.w, r8.w
        dp2 r17.x, icb[r10.w + 0].yxyy, r15.xyxx
        dp2 r17.y, icb[r10.w + 0].yxyy, r15.yzyy
        mad r16.xy, r17.xyxx, r12.wwww, r16.xyxx
        iadd r11.w, r11.w, cb2[26].y
        utof r16.z, r11.w
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r11.w, r16.xyzx, t13.xxxx, s13, r5.w
        sample_l_indexable(texture2darray)(float,float,float,float) r12.w, r16.xyzx, t31.yzwx, s0, l(0.000000)
        add r11.w, r11.w, r12.w
        add_sat r11.w, r11.w, l(-1.000000)
        mad r9.w, r11.w, l(0.125000), r9.w
        iadd r10.w, r10.w, l(1)
      endloop 
      mul r5.w, r9.w, r9.w
      mul r6.z, r9.w, r5.w
    endif 
  endif 
endif 
lt r5.w, l(0.000000), r4.w
if_nz r5.w
  lt r5.w, l(0.000000), r6.z
  if_nz r5.w
    mul r5.w, r1.y, cb2[18].w
    mul r5.w, r4.w, r5.w
    if_nz cb2[23].x
      add r15.xyz, v6.xyzx, cb1[24].xyzx
      mov r15.w, l(1.000000)
      dp4 r6.w, cb2[24].xyzw, r15.xyzw
      dp4 r7.w, cb2[25].xyzw, r15.xyzw
      frc r15.x, r6.w
      frc r15.y, r7.w
      iadd r6.w, l(-1), cb2[23].x
      utof r15.z, r6.w
      sample_l_indexable(texture2darray)(float,float,float,float) r8.yzw, r15.xyzx, t20.wxyz, s2, l(0.000000)
      add r8.yzw, r8.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
      mad r8.yzw, cb2[23].yyyy, r8.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
      mul r8.yzw, r8.yyzw, cb2[18].xxyz
    else 
      mov r8.yzw, cb2[18].xxyz
    endif 
    ushr r6.w, cb2[53].x, l(16)
    ult r7.w, l(0), r6.w
    and r7.w, r0.w, r7.w
    if_nz r7.w
      iadd r6.w, r6.w, cb2[0].x
      iadd r6.w, r6.w, l(-1)
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r7.w, r6.w, l(52), t12.xxxx
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r6.w, l(68), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r6.w, l(84), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r6.w, l(132), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r6.w, l(148), t12.xyzw
      mad r9.y, |r3.w|, l(-0.200000), l(0.400000)
      mad r19.xyz, r3.xyzx, r9.yyyy, v6.xyzx
      mov r19.w, l(1.000000)
      dp4 r15.x, r15.xyzw, r19.xyzw
      dp4 r15.y, r16.xyzw, r19.xyzw
      mad r9.yz, r15.xxyx, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      add r9.yz, r18.zzwz, r9.yyzy
      mul r9.yz, r18.xxyx, r9.yyzy
      div r15.xy, r7.wwww, r17.xzxx
      add r15.zw, -r15.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
      ge r15.zw, r9.yyyz, r15.zzzw
      ge r15.xy, r15.xyxx, r9.yzyy
      or r15.xy, r15.xyxx, r15.zwzz
      or r9.w, r15.y, r15.x
      if_z r9.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r9.w, r6.w, l(28), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r6.w, l(100), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xy, r6.w, l(164), t12.xyxx
        dp4 r6.w, r15.xyzw, r19.xyzw
        mov_sat r9.yz, r9.yyzy
        mad r15.xy, r9.yzyy, r17.xzxx, r17.ywyy
        add r6.w, r16.x, r6.w
        div r6.w, r6.w, r16.y
        max r6.w, r6.w, l(0.00006104)
        and r9.y, r9.w, l(0x0000ffff)
        if_nz cb2[58].y
          mov r16.x, -r6.x
          utof r17.z, r9.y
          mov r16.y, r7.x
          mov r16.z, r6.x
          mov r9.zw, l(0,0,0,0)
          loop 
            ige r10.w, r9.w, l(8)
            breakc_nz r10.w
            dp2 r18.x, icb[r9.w + 0].yxyy, r16.xyxx
            dp2 r18.y, icb[r9.w + 0].yxyy, r16.yzyy
            mad r17.xy, r18.xyxx, r7.wwww, r15.xyxx
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.w, r17.xyzx, t9.xxxx, s13, r6.w
            mad r9.z, r10.w, l(0.125000), r9.z
            iadd r9.w, r9.w, l(1)
          endloop 
        else 
          utof r15.z, r9.y
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r9.z, r15.xyzx, t9.xxxx, s13, r6.w
        endif 
        mul r6.w, r9.z, r9.z
        mul r6.w, r9.z, r6.w
      else 
        mov r6.w, l(1.000000)
      endif 
      mul r6.z, r6.w, r6.z
    else 
      and r6.w, cb2[53].x, l(0x0000ffff)
      ult r7.w, l(0), r6.w
      not r9.y, r0.w
      and r7.w, r7.w, r9.y
      if_nz r7.w
        iadd r6.w, r6.w, cb2[0].x
        iadd r6.w, r6.w, l(-1)
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r7.w, r6.w, l(52), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r6.w, l(68), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r6.w, l(84), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r6.w, l(132), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r6.w, l(148), t12.xyzw
        mad r9.y, |r3.w|, l(-0.200000), l(0.400000)
        mad r19.xyz, r3.xyzx, r9.yyyy, v6.xyzx
        mov r19.w, l(1.000000)
        dp4 r15.x, r15.xyzw, r19.xyzw
        dp4 r15.y, r16.xyzw, r19.xyzw
        mad r9.yz, r15.xxyx, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
        add r9.yz, r18.zzwz, r9.yyzy
        mul r9.yz, r18.xxyx, r9.yyzy
        div r15.xy, r7.wwww, r17.xzxx
        add r15.zw, -r15.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
        ge r15.zw, r9.yyyz, r15.zzzw
        ge r15.xy, r15.xyxx, r9.yzyy
        or r15.xy, r15.xyxx, r15.zwzz
        or r9.w, r15.y, r15.x
        if_z r9.w
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r9.w, r6.w, l(28), t12.xxxx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r6.w, l(100), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xy, r6.w, l(164), t12.xyxx
          dp4 r6.w, r15.xyzw, r19.xyzw
          mov_sat r9.yz, r9.yyzy
          mad r15.xy, r9.yzyy, r17.xzxx, r17.ywyy
          add r6.w, r16.x, r6.w
          div r6.w, r6.w, r16.y
          max r6.w, r6.w, l(0.00006104)
          and r9.y, r9.w, l(0x0000ffff)
          if_nz cb2[58].y
            mov r16.x, -r6.x
            utof r17.z, r9.y
            mov r16.y, r7.x
            mov r16.z, r6.x
            mov r9.zw, l(0,0,0,0)
            loop 
              ige r10.w, r9.w, l(8)
              breakc_nz r10.w
              dp2 r18.x, icb[r9.w + 0].yxyy, r16.xyxx
              dp2 r18.y, icb[r9.w + 0].yxyy, r16.yzyy
              mad r17.xy, r18.xyxx, r7.wwww, r15.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.w, r17.xyzx, t9.xxxx, s13, r6.w
              mad r9.z, r10.w, l(0.125000), r9.z
              iadd r9.w, r9.w, l(1)
            endloop 
          else 
            utof r15.z, r9.y
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r9.z, r15.xyzx, t9.xxxx, s13, r6.w
          endif 
          mul r6.w, r9.z, r9.z
          mul r6.w, r9.z, r6.w
        else 
          mov r6.w, l(1.000000)
        endif 
        mul r6.z, r6.w, r6.z
      endif 
    endif 
    mad r6.w, -r0.x, l(0.500000), l(1.000000)
    mad r6.w, -r4.w, r6.w, l(1.000000)
    mul r6.w, r6.w, r6.w
    mad r6.w, -r6.w, l(0.620000), l(0.620000)
    add r6.w, -r4.w, r6.w
    mad r6.w, r1.w, r6.w, r4.w
    mul r6.w, r6.z, r6.w
    lt r3.w, l(0.000000), r3.w
    mad r15.xyz, r6.wwww, r8.yzwy, r13.xyzx
    mad r9.yzw, -v6.xxyz, r0.zzzz, cb2[17].xxyz
    dp3 r0.z, r9.yzwy, r9.yzwy
    rsq r0.z, r0.z
    mul r9.yzw, r0.zzzz, r9.yyzw
    dp3 r0.z, r9.yzwy, r5.xyzx
    dp3 r6.w, r3.xyzx, r9.yzwy
    mad r7.w, |r6.w|, r1.y, -|r6.w|
    mad r6.w, |r6.w|, r7.w, l(1.000000)
    mad r4.w, r4.w, r0.y, r1.z
    mul r6.w, r6.w, r6.w
    mul r4.w, r4.w, r6.w
    rcp r4.w, r4.w
    mul r4.w, r5.w, r4.w
    mul r4.w, r4.w, r6.z
    mul r4.w, r4.w, l(0.250000)
    mad r9.yzw, r4.wwww, r8.yyzw, r2.xxyz
    add_sat r0.z, -r0.z, l(1.000000)
    log r0.z, r0.z
    mul r0.z, r0.z, l(3.400000)
    exp r0.z, r0.z
    mul r0.z, r0.z, r4.w
    mad r16.xyz, r0.zzzz, r8.zwyz, r14.xyzx
    mov r15.w, r16.z
    mov r13.w, r14.z
    movc r13.xyzw, r3.wwww, r15.xyzw, r13.xyzw
    mov r16.zw, r9.yyyz
    mov r14.zw, r2.xxxy
    movc r15.xyzw, r3.wwww, r16.xyzw, r14.xyzw
    movc r2.z, r3.w, r9.w, r2.z
    mov r14.z, r13.w
    mov r14.xy, r15.xyxx
    mov r2.xy, r15.zwzz
  endif 
endif 
mov r15.x, -r6.x
not r0.z, r0.w
mad r0.x, -r0.x, l(0.500000), l(1.000000)
mov r16.xy, l(0,0,0,0)
mov r17.w, l(0)
mov r18.xyz, v6.xyzx
mov r18.w, l(1.000000)
mov r19.w, l(1.000000)
mov r15.z, r6.x
mov r20.w, l(1.000000)
mov r21.z, l(1.000000)
mov r22.w, l(1.000000)
mov r15.yw, r7.xxxx
mov r6.y, r15.w
mov r23.w, l(1.000000)
mov r7.y, r15.x
mov r7.z, r6.x
mov r24.w, l(1.000000)
mov r25.x, r7.x
mov r25.y, r15.x
mov r25.z, r6.x
mov r26.x, r7.x
mov r26.y, r15.x
mov r26.z, r6.x
mov r27.x, r7.x
mov r27.y, r15.x
mov r27.z, r6.x
mov r8.yzw, r13.xxyz
mov r28.xyz, r14.zxyz
mov r29.xyz, r2.xyzx
mov r3.w, cb2[58].y
mov r4.w, l(0)
loop 
  uge r5.w, r4.w, cb2[0].x
  breakc_nz r5.w
  ushr r16.z, r4.w, l(5)
  iadd r17.xyz, r12.xyzx, r16.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r5.w, r17.xyzw, t6.yzwx
  mov r9.yzw, r8.yyzw
  mov r17.xyz, r28.xyzx
  mov r30.xyz, r29.xyzx
  mov r6.z, r3.w
  mov r6.w, r5.w
  loop 
    breakc_z r6.w
    firstbit_lo r7.w, r6.w
    ishl r10.w, l(1), r7.w
    and r11.w, r6.w, r10.w
    if_nz r11.w
      xor r6.w, r6.w, r10.w
      iadd r7.w, r4.w, r7.w
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r31.xyzw, r7.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r32.xy, r7.w, l(16), t11.xyxx
      add r31.xyz, r31.xyzx, -v6.xyzx
      mov r32.z, r31.w
      lt r31.xyz, |r31.xyzx|, r32.zxyz
      and r10.w, r31.y, r31.x
      and r10.w, r31.z, r10.w
      if_nz r10.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r7.w, l(0), t12.wxyz
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r7.w, l(16), t12.zxyw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r7.w, l(32), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r7.w, l(48), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r7.w, l(64), t12.yzwx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r7.w, l(80), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r7.w, l(96), t12.yzwx
        ubfe r10.w, l(3), l(24), r32.w
        switch r10.w
          case l(4)
          lt r10.w, l(0.000000), r37.x
          mov r38.xy, r36.zwzz
          mov r38.z, r37.w
          mad r39.xyz, -r38.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r31.yzwy
          add r40.xyz, r39.xyzx, -v6.xyzx
          dp3 r11.w, r38.xyzx, r40.xyzx
          div_sat r12.w, -r11.w, r37.x
          mad r41.xyz, r12.wwww, r38.xyzx, r39.xyzx
          movc r41.xyz, r10.wwww, r41.xyzx, r31.yzwy
          add r41.xyz, r41.xyzx, -v6.xyzx
          dp3 r13.w, r41.xyzx, r41.xyzx
          rsq r14.w, r13.w
          mul r41.xyz, r14.wwww, r41.xyzx
          dp3 r14.w, r3.xyzx, r41.xyzx
          mov_sat r16.z, r14.w
          lt r16.w, l(0.000000), r16.z
          if_nz r16.w
            sqrt r16.w, r13.w
            mul r21.w, r34.x, r34.x
            div r13.w, r21.w, r13.w
            min r13.w, r13.w, l(1.000000)
            mad_sat r41.xy, r16.wwww, r33.xzxx, r33.ywyy
            mul r41.zw, r41.xxxy, r41.xxxy
            mad r41.xy, r41.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
            mul r41.xy, r41.xyxx, r41.zwzz
            mul r13.w, r13.w, r41.x
            mul r13.w, r41.y, r13.w
            lt r16.w, l(0.000000), r13.w
            if_nz r16.w
              ubfe r16.w, l(3), l(27), r32.w
              ine r16.w, r16.w, l(1)
              if_nz r16.w
                mad r16.w, |r14.w|, l(-0.200000), l(0.400000)
                mad r41.xyz, r3.xyzx, r16.wwww, v6.xyzx
                add r41.xyz, -r35.xyzx, r41.xyzx
                max r16.w, |r41.z|, |r41.y|
                max r16.w, r16.w, |r41.x|
                div r16.w, r36.x, r16.w
                add r16.w, r36.y, r16.w
                dp3 r21.w, r41.xyzx, r41.xyzx
                rsq r21.w, r21.w
                max r16.w, r16.w, l(0.00006104)
                and r25.w, r32.w, l(0x0000ffff)
                utof r42.w, r25.w
                mov r25.w, l(0)
                mov r26.w, l(0)
                loop 
                  ige r27.w, r26.w, l(8)
                  breakc_nz r27.w
                  dp2 r43.y, icb[r26.w + 0].yxyy, r15.xyxx
                  dp2 r43.z, icb[r26.w + 0].yxyy, r15.yzyy
                  mul r43.yz, r34.yyyy, r43.yyzy
                  mul r43.x, r9.x, r43.y
                  mul r43.w, r8.x, r43.y
                  mad r42.xyz, r41.xyzx, r21.wwww, r43.xzwx
                  sample_c_lz_indexable(texturecubearray)(float,float,float,float) r27.w, r42.xyzw, t10.xxxx, s13, r16.w
                  mad r25.w, r27.w, l(0.125000), r25.w
                  iadd r26.w, r26.w, l(1)
                endloop 
              else 
                mov r25.w, l(1.000000)
              endif 
              mul r13.w, r13.w, r25.w
              lt r16.w, l(0.000000), r13.w
              if_nz r16.w
                mul r16.w, r1.y, r32.x
                mul r16.w, r16.w, l(0.250000)
                dp3 r21.w, r38.xyzx, r11.xyzx
                dp3 r26.w, r11.xyzx, r40.xyzx
                mad r27.w, -r21.w, r21.w, r37.x
                mad r11.w, r21.w, r26.w, -r11.w
                div_sat r11.w, r11.w, r27.w
                div r21.w, r27.w, r37.x
                mul r21.w, r21.w, l(10.000000)
                min r21.w, r21.w, l(1.000000)
                add r11.w, -r12.w, r11.w
                mad r11.w, r21.w, r11.w, r12.w
                mad r38.xyz, r11.wwww, r38.xyzx, r39.xyzx
                movc r38.xyz, r10.wwww, r38.xyzx, r31.yzwy
                add r38.xyz, r38.xyzx, -v6.xyzx
                dp3 r10.w, r38.xyzx, r38.xyzx
                rsq r10.w, r10.w
                mul r39.xyz, r10.wwww, r38.xyzx
                ubfe r11.w, l(4), l(16), r32.w
                ult r12.w, l(0), r11.w
                and r12.w, r0.w, r12.w
                if_nz r12.w
                  iadd r11.w, r11.w, cb2[0].x
                  iadd r11.w, r11.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.w, r11.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r11.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r11.w, l(116), t12.xyzw
                  mad r21.w, |r14.w|, l(-0.200000), l(0.400000)
                  mad r19.xyz, r3.xyzx, r21.wwww, v6.xyzx
                  dp4 r21.w, r40.xyzw, r19.xyzw
                  dp4 r26.w, r41.xyzw, r19.xyzw
                  lt r27.w, r26.w, r21.w
                  if_z r27.w
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r11.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r11.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r11.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r11.w, l(148), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xy, r11.w, l(164), t12.xyxx
                    dp4 r40.x, r40.xyzw, r19.xyzw
                    dp4 r40.y, r41.xyzw, r19.xyzw
                    div r19.xy, r40.xyxx, r26.wwww
                    mad r19.xy, r19.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r19.xy, r43.zwzz, r19.xyxx
                    mul r19.xy, r43.xyxx, r19.xyxx
                    div r40.xy, r12.wwww, r42.xzxx
                    add r40.zw, -r40.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                    ge r40.zw, r19.xxxy, r40.zzzw
                    ge r40.xy, r40.xyxx, r19.xyxx
                    or r40.xy, r40.xyxx, r40.zwzz
                    or r19.z, r40.y, r40.x
                    mov_sat r19.xy, r19.xyxx
                    mad r40.xy, r19.xyxx, r42.xzxx, r42.ywyy
                    mul r19.x, r26.w, r44.y
                    mad r19.y, r44.x, r26.w, r21.w
                    div r19.x, r19.y, r19.x
                  else 
                    mov r19.z, l(-1)
                  endif 
                  or r19.y, r27.w, r19.z
                  if_z r19.y
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r11.w, r11.w, l(28), t12.xxxx
                    max r19.x, r19.x, l(0.00006104)
                    and r11.w, r11.w, l(0x0000ffff)
                    if_nz r6.z
                      utof r41.z, r11.w
                      mov r19.yz, l(0,0,0,0)
                      loop 
                        ige r21.w, r19.z, l(8)
                        breakc_nz r21.w
                        dp2 r42.x, icb[r19.z + 0].yxyy, r15.xwxx
                        dp2 r42.y, icb[r19.z + 0].xyxx, r6.xyxx
                        mad r41.xy, r42.xyxx, r12.wwww, r40.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.w, r41.xyzx, t9.xxxx, s13, r19.x
                        mad r19.y, r21.w, l(0.125000), r19.y
                        iadd r19.z, r19.z, l(1)
                      endloop 
                    else 
                      utof r40.z, r11.w
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.y, r40.xyzx, t9.xxxx, s13, r19.x
                    endif 
                    mul r11.w, r19.y, r19.y
                    mul r11.w, r19.y, r11.w
                  else 
                    mov r11.w, l(1.000000)
                  endif 
                  mul r13.w, r11.w, r13.w
                else 
                  ubfe r11.w, l(4), l(20), r32.w
                  ult r12.w, l(0), r11.w
                  and r12.w, r0.z, r12.w
                  if_nz r12.w
                    iadd r11.w, r11.w, cb2[0].x
                    iadd r11.w, r11.w, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.w, r11.w, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r11.w, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r11.w, l(116), t12.xyzw
                    mad r19.x, |r14.w|, l(-0.200000), l(0.400000)
                    mad r20.xyz, r3.xyzx, r19.xxxx, v6.xyzx
                    dp4 r19.x, r40.xyzw, r20.xyzw
                    dp4 r19.z, r41.xyzw, r20.xyzw
                    lt r21.w, r19.z, r19.x
                    if_z r21.w
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r11.w, l(68), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r11.w, l(84), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r11.w, l(132), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r11.w, l(148), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xy, r11.w, l(164), t12.xyxx
                      dp4 r40.x, r40.xyzw, r20.xyzw
                      dp4 r40.y, r41.xyzw, r20.xyzw
                      div r20.xy, r40.xyxx, r19.zzzz
                      mad r20.xy, r20.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                      add r20.xy, r43.zwzz, r20.xyxx
                      mul r20.xy, r43.xyxx, r20.xyxx
                      div r40.xy, r12.wwww, r42.xzxx
                      add r40.zw, -r40.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                      ge r40.zw, r20.xxxy, r40.zzzw
                      ge r40.xy, r40.xyxx, r20.xyxx
                      or r40.xy, r40.xyxx, r40.zwzz
                      or r20.z, r40.y, r40.x
                      mov_sat r20.xy, r20.xyxx
                      mad r40.xy, r20.xyxx, r42.xzxx, r42.ywyy
                      mul r20.x, r19.z, r44.y
                      mad r19.x, r44.x, r19.z, r19.x
                      div r19.x, r19.x, r20.x
                    else 
                      mov r20.z, l(-1)
                    endif 
                    or r19.z, r21.w, r20.z
                    if_z r19.z
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r11.w, r11.w, l(28), t12.xxxx
                      max r19.x, r19.x, l(0.00006104)
                      and r11.w, r11.w, l(0x0000ffff)
                      if_nz r6.z
                        utof r20.z, r11.w
                        mov r19.z, l(0)
                        mov r21.w, l(0)
                        loop 
                          ige r26.w, r21.w, l(8)
                          breakc_nz r26.w
                          dp2 r41.x, icb[r21.w + 0].xyxx, r7.xyxx
                          dp2 r41.y, icb[r21.w + 0].yxyy, r7.xzxx
                          mad r20.xy, r41.xyxx, r12.wwww, r40.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r20.x, r20.xyzx, t9.xxxx, s13, r19.x
                          mad r19.z, r20.x, l(0.125000), r19.z
                          iadd r21.w, r21.w, l(1)
                        endloop 
                      else 
                        utof r40.z, r11.w
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.z, r40.xyzx, t9.xxxx, s13, r19.x
                      endif 
                      mul r11.w, r19.z, r19.z
                      mul r11.w, r19.z, r11.w
                    else 
                      mov r11.w, l(1.000000)
                    endif 
                    mul r13.w, r11.w, r13.w
                  endif 
                endif 
                mad r11.w, -r16.z, r0.x, l(1.000000)
                mul r11.w, r11.w, r11.w
                mad r11.w, -r11.w, l(0.620000), l(0.620000)
                add r11.w, -r16.z, r11.w
                mad r11.w, r1.w, r11.w, r16.z
                mul r11.w, r13.w, r11.w
                mov r32.x, r31.x
                lt r12.w, l(0.000000), r14.w
                mad r20.xyz, r11.wwww, r32.xyzx, r9.yzwy
                dp3_sat r11.w, r3.xyzx, r39.xyzx
                mad r38.xyz, r38.xyzx, r10.wwww, r5.xyzx
                dp3 r10.w, r38.xyzx, r38.xyzx
                rsq r10.w, r10.w
                mul r38.xyz, r10.wwww, r38.xyzx
                dp3 r10.w, r38.xyzx, r5.xyzx
                dp3 r14.w, r3.xyzx, r38.xyzx
                mad r16.z, |r14.w|, r1.y, -|r14.w|
                mad r14.w, |r14.w|, r16.z, l(1.000000)
                mad r16.z, r11.w, r0.y, r1.z
                mul r14.w, r14.w, r14.w
                mul r14.w, r16.z, r14.w
                rcp r14.w, r14.w
                mul r11.w, r16.w, r11.w
                mul r11.w, r11.w, r14.w
                mul r11.w, r13.w, r11.w
                mad r38.xyz, r11.wwww, r32.xyzx, r30.xyzx
                add_sat r10.w, -r10.w, l(1.000000)
                log r10.w, r10.w
                mul r10.w, r10.w, l(3.400000)
                exp r10.w, r10.w
                mul r10.w, r10.w, r11.w
                mad r39.xyz, r10.wwww, r32.xyzx, r17.xyzx
                movc r9.yzw, r12.wwww, r20.xxyz, r9.yyzw
                movc r17.xyz, r12.wwww, r39.xyzx, r17.xyzx
                movc r30.xyz, r12.wwww, r38.xyzx, r30.xyzx
              endif 
            endif 
          endif 
          break 
          case l(2)
          mov r20.xy, r34.zwzz
          mov r20.z, r35.w
          add r20.xyz, r20.xyzx, -v6.xyzx
          dp3 r10.w, r20.xyzx, r20.xyzx
          rsq r10.w, r10.w
          mul r38.xyz, r10.wwww, r20.xyzx
          dp3 r11.w, r3.xyzx, r38.xyzx
          mov_sat r12.w, r11.w
          lt r13.w, l(0.000000), r12.w
          if_nz r13.w
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r7.w, l(112), t12.yzwx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r7.w, l(128), t12.zxyw
            mov r40.xyz, r38.xyzx
            mov r40.w, r39.y
            dp4 r13.w, r40.xyzw, r18.xyzw
            lt r14.w, r13.w, l(1.000000)
            if_nz r14.w
              mov r41.xyz, l(1.000000,1.000000,1.000000,0)
              mov r14.w, l(0)
            else 
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r7.w, l(172), t12.yzwx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r7.w, l(188), t12.wxyz
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r7.w, l(204), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.z, r7.w, l(236), t12.xxxx
              add r45.xyz, r31.yzwy, -v6.xyzx
              mul r16.w, r34.x, r34.x
              dp3 r19.x, r45.xyzx, r45.xyzx
              div r16.w, r16.w, r19.x
              min r16.w, r16.w, l(1.000000)
              mad_sat r33.xy, r13.wwww, r33.xzxx, r33.ywyy
              mul r33.zw, r33.xxxy, r33.xxxy
              mad r33.xy, r33.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
              mul r33.xy, r33.xyxx, r33.zwzz
              mul r16.w, r16.w, r33.x
              mul r16.w, r33.y, r16.w
              mov r35.w, r36.x
              dp4 r33.x, r35.xyzw, r18.xyzw
              mov r45.xyz, r36.yzwy
              mov r45.w, r37.w
              dp4 r33.y, r45.xyzw, r18.xyzw
              div r21.xy, r33.xyxx, r13.wwww
              lt r13.w, r42.w, l(0.00048828)
              if_nz r13.w
                mov r43.y, r44.x
                mad_sat r33.xy, |r21.xyxx|, r43.zwzz, r43.xyxx
                mul r33.zw, r33.xxxy, r33.xxxy
                mad r33.xy, r33.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
                mul r33.xy, r33.xyxx, r33.zwzz
                mul r13.w, r33.y, r33.x
              else 
                mov r42.w, r43.y
                mul_sat r33.xyzw, |r21.yyxx|, r42.xyzw
                log r33.xyzw, r33.xyzw
                mul r33.xyzw, r33.xyzw, r43.xxxx
                exp r33.xyzw, r33.xyzw
                add r33.xy, r33.zwzz, r33.xyxx
                log r33.xy, r33.xyxx
                mul r33.xy, r33.xyxx, r44.xxxx
                exp r33.xy, r33.xyxx
                mul r19.x, r33.x, r43.z
                mad r21.w, r43.w, r33.y, l(-1.000000)
                mad r19.x, r43.w, r33.y, -r19.x
                div_sat r19.x, r21.w, r19.x
                mul r21.w, r19.x, r19.x
                mad r19.x, r19.x, l(-2.000000), l(3.000000)
                mul r13.w, r19.x, r21.w
              endif 
              mul r14.w, r13.w, r16.w
              and r13.w, r16.z, l(255)
              if_nz r13.w
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyz, r7.w, l(220), t12.xyzx
                dp3 r16.z, r44.yzwy, r21.xyzx
                dp3 r16.w, r33.xyzx, r21.xyzx
                frc r33.xy, r16.zwzz
                iadd r13.w, r13.w, l(-1)
                utof r33.z, r13.w
                sample_l_indexable(texture2darray)(float,float,float,float) r41.xyz, r33.xyzx, t20.xyzw, s2, l(0.000000)
              else 
                mov r41.xyz, l(1.000000,1.000000,1.000000,0)
              endif 
            endif 
            mov r31.yz, r32.yyzy
            mul r21.xyw, r41.xyxz, r31.xyxz
            lt r13.w, l(0.000000), r14.w
            if_nz r13.w
              ubfe r13.w, l(3), l(27), r32.w
              ine r13.w, r13.w, l(1)
              if_nz r13.w
                mad r13.w, |r11.w|, l(-0.200000), l(0.400000)
                mad r22.xyz, r3.xyzx, r13.wwww, v6.xyzx
                mov r38.xyz, r37.xyzx
                dp4 r13.w, r38.xyzw, r22.xyzw
                dp4 r16.z, r40.xyzw, r22.xyzw
                ge r16.w, r16.z, r13.w
                if_nz r16.w
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.y, r7.w, l(144), t12.xxxx
                  mov r35.w, r36.x
                  dp4 r31.x, r35.xyzw, r22.xyzw
                  mov r37.xyz, r36.yzwy
                  dp4 r31.y, r37.xyzw, r22.xyzw
                  div r22.xy, r31.xyxx, r16.zzzz
                  mad_sat r22.xy, r22.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  mad r22.xy, r22.xyxx, r39.zwzz, r39.xyxx
                  div r7.w, r13.w, r16.z
                  max r7.w, r7.w, l(0.00006104)
                  and r13.w, r32.w, l(0x0000ffff)
                  if_nz r6.z
                    utof r31.z, r13.w
                    mov r16.zw, l(0,0,0,0)
                    loop 
                      ige r19.x, r16.w, l(8)
                      breakc_nz r19.x
                      dp2 r33.x, icb[r16.w + 0].xyxx, r25.xyxx
                      dp2 r33.y, icb[r16.w + 0].yxyy, r25.xzxx
                      mad r31.xy, r33.xyxx, r34.yyyy, r22.xyxx
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.x, r31.xyzx, t9.xxxx, s13, r7.w
                      mad r16.z, r19.x, l(0.125000), r16.z
                      iadd r16.w, r16.w, l(1)
                    endloop 
                  else 
                    utof r22.z, r13.w
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r16.z, r22.xyzx, t9.xxxx, s13, r7.w
                  endif 
                  mul r7.w, r16.z, r16.z
                  mul r7.w, r16.z, r7.w
                else 
                  mov r7.w, l(1.000000)
                endif 
              else 
                mov r7.w, l(1.000000)
              endif 
              mul r7.w, r7.w, r14.w
              lt r13.w, l(0.000000), r7.w
              if_nz r13.w
                mul r13.w, r1.y, r32.x
                mul r13.w, r12.w, r13.w
                ubfe r14.w, l(4), l(16), r32.w
                ult r16.w, l(0), r14.w
                and r16.w, r0.w, r16.w
                if_nz r16.w
                  iadd r14.w, r14.w, cb2[0].x
                  iadd r14.w, r14.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.w, r14.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r14.w, l(68), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r14.w, l(84), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r14.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r14.w, l(116), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r14.w, l(132), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r14.w, l(148), t12.xyzw
                  mad r19.x, |r11.w|, l(-0.200000), l(0.400000)
                  mad r23.xyz, r3.xyzx, r19.xxxx, v6.xyzx
                  dp4 r22.x, r31.xyzw, r23.xyzw
                  dp4 r22.y, r33.xyzw, r23.xyzw
                  dp4 r19.x, r34.xyzw, r23.xyzw
                  dp4 r22.z, r35.xyzw, r23.xyzw
                  lt r23.x, r22.z, r19.x
                  div r22.xy, r22.xyxx, r22.zzzz
                  mad r22.xy, r22.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r22.xy, r37.zwzz, r22.xyxx
                  mul r22.xy, r37.xyxx, r22.xyxx
                  div r23.yz, r16.wwww, r36.xxzx
                  add r31.xy, -r23.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
                  ge r31.xy, r22.xyxx, r31.xyxx
                  ge r23.yz, r23.yyzy, r22.xxyx
                  or r23.yz, r23.yyzy, r31.xxyx
                  or r23.y, r23.z, r23.y
                  or r23.x, r23.x, r23.y
                  if_z r23.x
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.x, r14.w, l(28), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.yz, r14.w, l(164), t12.xxyx
                    mov_sat r22.xy, r22.xyxx
                    mad r31.xy, r22.xyxx, r36.xzxx, r36.ywyy
                    mul r14.w, r22.z, r23.z
                    mad r19.x, r23.y, r22.z, r19.x
                    div r14.w, r19.x, r14.w
                    max r14.w, r14.w, l(0.00006104)
                    and r19.x, r23.x, l(0x0000ffff)
                    if_nz r6.z
                      utof r22.z, r19.x
                      mov r23.xy, l(0,0,0,0)
                      loop 
                        ige r23.z, r23.y, l(8)
                        breakc_nz r23.z
                        dp2 r32.x, icb[r23.y + 0].xyxx, r26.xyxx
                        dp2 r32.y, icb[r23.y + 0].yxyy, r26.xzxx
                        mad r22.xy, r32.xyxx, r16.wwww, r31.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.x, r22.xyzx, t9.xxxx, s13, r14.w
                        mad r23.x, r22.x, l(0.125000), r23.x
                        iadd r23.y, r23.y, l(1)
                      endloop 
                    else 
                      utof r31.z, r19.x
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.x, r31.xyzx, t9.xxxx, s13, r14.w
                    endif 
                    mul r14.w, r23.x, r23.x
                    mul r14.w, r23.x, r14.w
                  else 
                    mov r14.w, l(1.000000)
                  endif 
                  mul r7.w, r7.w, r14.w
                else 
                  ubfe r14.w, l(4), l(20), r32.w
                  ult r16.w, l(0), r14.w
                  and r16.w, r0.z, r16.w
                  if_nz r16.w
                    iadd r14.w, r14.w, cb2[0].x
                    iadd r14.w, r14.w, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.w, r14.w, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r14.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r14.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r14.w, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r14.w, l(116), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r14.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r14.w, l(148), t12.xyzw
                    mad r19.x, |r11.w|, l(-0.200000), l(0.400000)
                    mad r24.xyz, r3.xyzx, r19.xxxx, v6.xyzx
                    dp4 r22.x, r31.xyzw, r24.xyzw
                    dp4 r22.y, r32.xyzw, r24.xyzw
                    dp4 r19.x, r33.xyzw, r24.xyzw
                    dp4 r22.z, r34.xyzw, r24.xyzw
                    lt r23.y, r22.z, r19.x
                    div r22.xy, r22.xyxx, r22.zzzz
                    mad r22.xy, r22.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r22.xy, r36.zwzz, r22.xyxx
                    mul r22.xy, r36.xyxx, r22.xyxx
                    div r24.xy, r16.wwww, r35.xzxx
                    add r31.xy, -r24.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                    ge r31.xy, r22.xyxx, r31.xyxx
                    ge r24.xy, r24.xyxx, r22.xyxx
                    or r24.xy, r24.xyxx, r31.xyxx
                    or r23.z, r24.y, r24.x
                    or r23.y, r23.y, r23.z
                    if_z r23.y
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.y, r14.w, l(28), t12.xxxx
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r24.xy, r14.w, l(164), t12.xyxx
                      mov_sat r22.xy, r22.xyxx
                      mad r31.xy, r22.xyxx, r35.xzxx, r35.ywyy
                      mul r14.w, r22.z, r24.y
                      mad r19.x, r24.x, r22.z, r19.x
                      div r14.w, r19.x, r14.w
                      max r14.w, r14.w, l(0.00006104)
                      and r19.x, r23.y, l(0x0000ffff)
                      if_nz r6.z
                        utof r22.z, r19.x
                        mov r23.yz, l(0,0,0,0)
                        loop 
                          ige r24.x, r23.z, l(8)
                          breakc_nz r24.x
                          dp2 r24.x, icb[r23.z + 0].xyxx, r27.xyxx
                          dp2 r24.y, icb[r23.z + 0].yxyy, r27.xzxx
                          mad r22.xy, r24.xyxx, r16.wwww, r31.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.x, r22.xyzx, t9.xxxx, s13, r14.w
                          mad r23.y, r22.x, l(0.125000), r23.y
                          iadd r23.z, r23.z, l(1)
                        endloop 
                      else 
                        utof r31.z, r19.x
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.y, r31.xyzx, t9.xxxx, s13, r14.w
                      endif 
                      mul r14.w, r23.y, r23.y
                      mul r14.w, r23.y, r14.w
                    else 
                      mov r14.w, l(1.000000)
                    endif 
                    mul r7.w, r7.w, r14.w
                  endif 
                endif 
                mad r14.w, -r12.w, r0.x, l(1.000000)
                mul r14.w, r14.w, r14.w
                mad r14.w, -r14.w, l(0.620000), l(0.620000)
                add r14.w, -r12.w, r14.w
                mad r14.w, r1.w, r14.w, r12.w
                mul r14.w, r7.w, r14.w
                lt r11.w, l(0.000000), r11.w
                mad r22.xyz, r14.wwww, r21.xywx, r9.yzwy
                mad r20.xyz, r20.xyzx, r10.wwww, r5.xyzx
                dp3 r10.w, r20.xyzx, r20.xyzx
                rsq r10.w, r10.w
                mul r20.xyz, r10.wwww, r20.xyzx
                dp3 r10.w, r20.xyzx, r5.xyzx
                dp3 r14.w, r3.xyzx, r20.xyzx
                mad r16.w, |r14.w|, r1.y, -|r14.w|
                mad r14.w, |r14.w|, r16.w, l(1.000000)
                mad r12.w, r12.w, r0.y, r1.z
                mul r14.w, r14.w, r14.w
                mul r12.w, r12.w, r14.w
                rcp r12.w, r12.w
                mul r12.w, r13.w, r12.w
                mul r7.w, r7.w, r12.w
                mul r7.w, r7.w, l(0.250000)
                mad r20.xyz, r7.wwww, r21.xywx, r30.xyzx
                add_sat r10.w, -r10.w, l(1.000000)
                log r10.w, r10.w
                mul r10.w, r10.w, l(3.400000)
                exp r10.w, r10.w
                mul r7.w, r7.w, r10.w
                mad r21.xyw, r7.wwww, r21.xyxw, r17.xyxz
                movc r9.yzw, r11.wwww, r22.xxyz, r9.yyzw
                movc r17.xyz, r11.wwww, r21.xywx, r17.xyzx
                movc r30.xyz, r11.wwww, r20.xyzx, r30.xyzx
              endif 
            endif 
          endif 
          break 
          default 
          break 
        endswitch 
      endif 
    endif 
  endloop 
  mov r8.yzw, r9.yyzw
  mov r28.xyz, r17.xyzx
  mov r29.xyz, r30.xyzx
  iadd r4.w, r4.w, l(32)
endloop 
add r0.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r0.xyz, r0.xyzx, r28.xyzx
mad r0.xyz, r29.xyzx, r4.xyzx, r0.xyzx
mad r0.xyz, r8.yzwy, r10.xyzx, r0.xyzx
log r0.w, r2.w
mul r0.w, r0.w, l(3.400000)
exp r0.w, r0.w
add r1.y, -r1.x, l(1.000000)
mad r1.w, r0.w, r1.y, r1.x
lt r0.w, l(0.000000), cb2[9].z
if_nz r0.w
  dp3 r0.w, v6.xyzx, v6.xyzx
  rsq r2.x, r0.w
  mul r2.xyz, r2.xxxx, v6.xyzx
  sqrt r0.w, r0.w
  lt r2.w, l(0.000000), cb2[13].w
  if_nz r2.w
    mad r3.xy, r0.wwww, cb2[15].xyxx, cb2[14].zwzz
    mul r3.xy, r3.xyxx, cb2[16].xyxx
    lt r2.w, l(0.010000), |v6.z|
    mul r3.zw, v6.zzzz, cb2[15].zzzw
    mul r4.xy, r3.zwzz, l(-1.442695, -1.442695, 0.000000, 0.000000)
    exp r4.xy, r4.xyxx
    add r4.xy, -r4.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    div r3.zw, r4.xxxy, r3.zzzw
    mul r3.zw, r3.zzzw, r3.xxxy
    movc r3.xy, r2.wwww, r3.zwzz, r3.xyxx
    mul r3.xzw, r3.xxxx, cb2[12].xxyz
    exp r3.xzw, r3.xxzw
    mul r4.xyz, r3.yyyy, cb2[12].xyzx
    exp r4.xyz, r4.xyzx
    add r4.xyz, -r3.xzwx, r4.xyzx
    mad r3.xyz, cb2[13].wwww, r4.xyzx, r3.xzwx
  else 
    mad r2.w, r0.w, cb2[15].x, cb2[14].z
    mul r2.w, r2.w, cb2[16].x
    lt r3.w, l(0.010000), |v6.z|
    mul r4.x, v6.z, cb2[15].z
    mul r4.y, r4.x, l(-1.442695)
    exp r4.y, r4.y
    add r4.y, -r4.y, l(1.000000)
    div r4.x, r4.y, r4.x
    mul r4.x, r2.w, r4.x
    movc r2.w, r3.w, r4.x, r2.w
    mul r4.xyz, r2.wwww, cb2[12].xyzx
    exp r3.xyz, r4.xyzx
  endif 
  mad r3.xyz, r3.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r3.xyz, r3.xyzx, -cb2[9].zzzz
  dp3 r2.x, cb2[7].yzwy, -r2.xyzx
  mad r2.y, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r2.z, cb2[8].w, -r2.x, l(1.000000)
  mul r2.z, r2.z, r2.z
  mul r2.z, r2.z, l(12.566371)
  div r2.y, r2.y, r2.z
  add r0.w, r0.w, -cb2[10].w
  mul_sat r0.w, r0.w, cb2[11].w
  mul r0.w, r0.w, r2.y
  mov_sat r2.x, r2.x
  mad r2.x, r2.x, r2.x, l(1.000000)
  mad r2.x, r2.x, l(0.05968310), l(-1.000000)
  mad r2.x, cb2[8].z, r2.x, l(1.000000)
  mul r2.yzw, r0.wwww, cb2[11].xxyz
  mad r2.xyz, r2.xxxx, cb2[10].xyzx, r2.yzwy
  mul r2.xyz, r2.xyzx, cb2[9].wwww
  add r4.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r2.xyz, r2.xyzx, r4.xyzx
  mul r2.xyz, r1.wwww, r2.xyzx
  mad r2.xyz, r0.xyzx, r3.xyzx, r2.xyzx
else 
  mul r0.w, v6.z, cb2[6].x
  mad r2.w, cb2[6].x, v6.z, cb2[5].x
  lt r3.x, |r0.w|, l(0.000100)
  min r3.y, r2.w, l(64.000000)
  mul r3.y, r3.y, l(1.442695)
  exp r3.y, r3.y
  mov_sat r3.z, cb2[6].z
  lt r3.w, r2.w, l(0.000000)
  add r2.w, r2.w, l(1.000000)
  movc r2.w, r3.w, r3.y, r2.w
  add r2.w, r2.w, -cb2[6].z
  movc r0.w, r3.x, l(1.000000), r0.w
  div r0.w, r2.w, r0.w
  movc r0.w, r3.x, r3.z, r0.w
  mul r0.w, r0.w, cb2[5].z
  dp3 r2.w, v6.xyzx, v6.xyzx
  sqrt r3.x, r2.w
  mad r0.w, r0.w, r3.x, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  rsq r2.w, r2.w
  mul r3.xyz, r2.wwww, v6.xyzx
  dp3 r2.w, cb2[7].yzwy, r3.xyzx
  mad_sat r2.w, cb2[8].y, r2.w, cb2[8].x
  add r3.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r3.xyzw, r2.wwww, r3.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r3.w
  mad r3.xyz, r3.xyzx, r1.wwww, -r0.xyzx
  mad r2.xyz, r0.wwww, r3.xyzx, r0.xyzx
endif 
mul r0.xyz, r2.xyzx, cb1[85].yyyy
ge r2.xyz, r0.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.xyz, r0.xyzx, r2.xyzx
min r0.xyz, r0.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
max r1.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
and r2.x, r1.w, l(0x7f800000)
ieq r2.x, r2.x, l(0x7f800000)
eq r3.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
and r2.yz, r3.zzwz, r3.xxyx
and r2.y, r2.z, r2.y
or r2.x, r2.y, r2.x
if_z r2.x
  ftou r2.xy, v0.xyxx
  imm_atomic_iadd r2.z, u6, r2.xyxx, l(1)
  ult r2.w, r2.z, cb2[58].z
  if_nz r2.w
    max r2.w, r1.z, r1.y
    max r2.w, r1.x, r2.w
    and r2.w, r2.w, l(0x7f800000)
    iadd r2.w, r2.w, l(0x00800000)
    add r1.xyz, r1.xyzx, r2.wwww
    ubfe r1.x, l(8), l(15), r1.x
    ushr r1.yz, r1.yyzy, l(0, 15, 15, 0)
    bfi r1.yz, l(0, 8, 8, 0), l(0, 8, 16, 0), r1.yyzy, l(0, 0, 0, 0)
    iadd r1.x, r1.y, r1.x
    iadd r1.x, r1.z, r1.x
    ishl r1.y, r2.w, l(1)
    iadd r3.xzw, r1.yyyy, r1.xxxx
    mov_sat r1.x, r1.w
    mul r1.x, r1.x, l(2046.000000)
    ftou r1.x, r1.x
    ishl r1.y, v0.z, l(2)
    and r1.x, r1.x, l(2046)
    bfi r1.x, l(11), l(0), r1.x, r1.y
    bfi r3.y, l(1), l(0), cb0[10].w, r1.x
    store_uav_typed u7.xyzw, r2.xyzz, r3.xyzw
    mov r1.x, l(-1)
  else 
    mov r1.x, l(0)
  endif 
else 
  mov r1.x, l(-1)
endif 
mov r0.w, r1.w
movc o0.xyzw, r1.xxxx, l(0,0,0,0), r0.xyzw
ret 
// Approximately 2595 instruction slots used
