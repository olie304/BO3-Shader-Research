//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:36:41 2021
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float3 colorTint;                  // Offset:  160 Size:    12
//   float baseNormalHeight;            // Offset:  172 Size:     4
//   float2 glossRange;                 // Offset:  176 Size:     8
//   float3 backscatterTint;            // Offset:  192 Size:    12
//   uint zFeatherComputeSprites;       // Offset:  204 Size:     4 [unused]
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16 [unused]
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4 [unused]
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for shaderConstantSetBuffer
// {
//
//   struct GpuShaderConstantSet
//   {
//       
//       float4 scriptVector0;          // Offset:    0
//       float4 scriptVector1;          // Offset:   16
//       float4 scriptVector2;          // Offset:   32
//       float4 scriptVector3;          // Offset:   48
//       float4 scriptVector4;          // Offset:   64
//       float4 scriptVector5;          // Offset:   80
//       float4 scriptVector6;          // Offset:   96
//       float4 scriptVector7;          // Offset:  112
//       float4 weaponParam0;           // Offset:  128
//       float4 weaponParam1;           // Offset:  144
//       float4 weaponParam2;           // Offset:  160
//       float4 weaponParam3;           // Offset:  176
//       float4 weaponParam4;           // Offset:  192
//       float4 weaponParam5;           // Offset:  208
//       float4 weaponParam6;           // Offset:  224
//       float4 weaponParam7;           // Offset:  240
//       float4 characterParam0;        // Offset:  256
//       float4 characterParam1;        // Offset:  272
//       float4 characterParam2;        // Offset:  288
//       float4 characterParam3;        // Offset:  304
//       float4 characterParam4;        // Offset:  320
//       float4 characterParam5;        // Offset:  336
//       float4 characterParam6;        // Offset:  352
//       float4 characterParam7;        // Offset:  368
//
//   } $Element;                        // Offset:    0 Size:   384
//
// }
//
// Resource bind info for modelInstanceBuffer
// {
//
//   struct ModelInstanceData
//   {
//       
//       uint boneArrayIndex;           // Offset:    0
//       uint shaderConstantSet;        // Offset:    4
//       uint flagsAndPrevFrameIndex;   // Offset:    8
//       uint worldMatrix;              // Offset:   12
//       uint siegeAnimStateOffset;     // Offset:   16
//       uint prevFrameSiegeAnimStateOffset;// Offset:   20
//
//   } $Element;                        // Offset:    0 Size:    24
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for forwardDecalConstants
// {
//
//   struct CoreDecalConstantsPack
//   {
//       
//       uint4 data[8];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   128
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// colorSampler                      sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// specColorSampler                  sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// normalSampler                     sampler      NA          NA             s5      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// shaderConstantSetBuffer           texture  struct         r/o             t0      1 
// modelInstanceBuffer               texture  struct         r/o             t4      1 
// gEnvBRDFGlass                     texture  float2          2d             t5      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// colorMap                          texture  float4          2d            t21      1 
// tintMask                          texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// normalMap                         texture  float4          2d            t24      1 
// glossMap                          texture  float4          2d            t25      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// visibleDecals                     texture    uint     2darray            t35      1 
// forwardDecalConstants             texture  struct         r/o            t36      1 
// materialTexBC7                    texture  float4     2darray            t42      1 
// materialTexBC3                    texture  float4     2darray            t43      1 
// materialTexBC7linear              texture  float4     2darray            t44      1 
// materialTexMask                   texture  float4     2darray            t45      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyz 
// COLOR                    0   xyz         1     NONE   float   xyz 
// COLOR                    1      w        1     NONE   float      w
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 4   x           3     NONE    uint   x   
// TEXCOORD                 1   xyz         4     NONE   float   xyz 
// TEXCOORD                 2   xyz         5     NONE   float   xyz 
// TEXCOORD                 3   xyz         6     NONE   float   xyz 
// OFFPOSITION              0   xyz         7     NONE   float   xyz 
// SV_IsFrontFace           0   x           8    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[13], immediateIndexed
dcl_constantbuffer CB1[93], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_structured t0, 384
dcl_resource_structured t4, 24
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2darray (float,float,float,float) t31
dcl_resource_texture2darray (uint,uint,uint,uint) t35
dcl_resource_structured t36, 128
dcl_resource_texture2darray (float,float,float,float) t42
dcl_resource_texture2darray (float,float,float,float) t43
dcl_resource_texture2darray (float,float,float,float) t44
dcl_resource_texture2darray (float,float,float,float) t45
dcl_input_ps_siv linear noperspective v0.xyz, position
dcl_input_ps linear v1.xyz
dcl_input_ps linear v1.w
dcl_input_ps linear v2.xy
dcl_input_ps constant v3.x
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyz
dcl_input_ps_sgv constant v8.x, is_front_face
dcl_output o0.xyzw
dcl_temps 48
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v2.xyxx, t21.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r1.x, v2.xyxx, t22.xyzw, s1
add r1.yzw, cb0[10].xxyz, l(0.000000, -1.000000, -1.000000, -1.000000)
mad r1.xyz, r1.xxxx, r1.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r0.xyz, r0.xyzx, r1.xyzx
mul r0.xyzw, r0.xyzw, v1.xyzw
sample_indexable(texture2d)(float,float,float,float) r1.x, v2.xyxx, t25.xyzw, s3
add r1.y, -cb0[11].x, cb0[11].y
mad r1.x, r1.x, r1.y, cb0[11].x
mul_sat r1.x, r1.x, l(0.05882353)
sample_indexable(texture2d)(float,float,float,float) r1.yzw, v2.xyxx, t24.wxyz, s5
add r1.yzw, r1.yyzw, l(0.000000, -0.500000, -0.500000, -0.000000)
mad r1.yzw, cb0[10].wwww, r1.yyzw, l(0.000000, 0.500000, 0.500000, 0.000000)
mad r1.yz, r1.yyzy, l(0.000000, 1.99218750, 1.99218750, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
dp2 r2.x, r1.yzyy, r1.yzyy
add r2.x, -r2.x, l(1.000000)
max r2.x, r2.x, l(0.000000)
sqrt r2.x, r2.x
mul r1.w, r1.w, r1.w
mul r1.w, r1.w, l(0.33333334)
min r1.w, r1.w, l(1.000000)
movc r2.y, v8.x, l(1.000000), l(-1.000000)
dp3 r2.z, v4.xyzx, v4.xyzx
rsq r2.z, r2.z
mul r3.xyz, r2.zzzz, v4.xyzx
mul r3.xyz, r2.yyyy, r3.xyzx
dp3 r2.z, v5.xyzx, v5.xyzx
rsq r2.z, r2.z
mul r4.xyz, r2.zzzz, v5.xyzx
mul r4.xyz, r2.yyyy, r4.xyzx
dp3 r2.z, v6.xyzx, v6.xyzx
rsq r2.z, r2.z
mul r5.xyz, r2.zzzz, v6.xyzx
mul r5.xyz, r2.yyyy, r5.xyzx
mul r1.x, r1.x, l(-17.000000)
exp r1.x, r1.x
add r1.x, r1.x, r1.w
log r1.x, r1.x
mul r1.x, r1.x, l(-0.05882353)
max r1.x, r1.x, l(0.000000)
mul r5.xyz, r1.zzzz, r5.xyzx
mad r1.yzw, r4.xxyz, r1.yyyy, r5.xxyz
mad r1.yzw, r3.xxyz, r2.xxxx, r1.yyzw
dp3 r2.x, r1.yzwy, r1.yzwy
rsq r2.x, r2.x
mul r1.yzw, r1.yyzw, r2.xxxx
ge r2.x, v0.z, l(0.984375)
mul r2.z, v0.z, l(1.01587307)
mad r2.w, v0.z, l(64.000000), l(-63.000000)
movc r2.x, r2.x, r2.w, r2.z
max r2.x, r2.x, l(0.00000001)
rcp r2.x, r2.x
ftou r2.zw, v0.yyyx
deriv_rtx_coarse r3.xyz, v7.xyzx
deriv_rty_coarse r4.xyz, v7.xyzx
iadd r3.w, cb2[0].y, cb2[0].x
add r5.xyz, v7.xyzx, cb1[24].xyzx
mul r2.x, r2.x, l(0.00781250)
min r2.x, r2.x, l(15.000000)
ftou r2.x, r2.x
ushr r6.xy, r2.wzww, l(6, 6, 0, 0)
ishl r6.z, r2.x, l(4)
and r2.x, cb2[57].z, l(-32)
iadd r4.w, -r2.x, cb2[57].z
mov r7.xy, l(0,0,0,0)
mov r8.w, l(0)
mov r5.w, l(1.000000)
mov r10.xyz, l(0,0,0,0)
mov r11.xyz, l(0,0,0,0)
mov r6.w, l(0)
mov r7.w, l(0)
mov r9.xyzw, l(0,0,0,0)
loop 
  uge r10.w, r9.w, cb2[57].z
  breakc_nz r10.w
  ushr r7.z, r9.w, l(5)
  iadd r8.xyz, r6.xyzx, r7.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r7.z, r8.xyzw, t35.yzxw
  ieq r8.x, r2.x, r9.w
  ubfe r8.y, r4.w, l(0), r7.z
  movc r7.z, r8.x, r8.y, r7.z
  iadd r8.x, r3.w, r9.w
  mov r12.xyz, r9.xyzx
  mov r13.xyz, r10.xyzx
  mov r14.xyz, r11.xyzx
  mov r8.y, r6.w
  mov r8.z, r7.w
  mov r10.w, r7.z
  loop 
    breakc_z r10.w
    firstbit_lo r11.w, r10.w
    ishl r12.w, l(1), r11.w
    and r13.w, r10.w, r12.w
    if_nz r13.w
      xor r10.w, r10.w, r12.w
      iadd r12.w, r8.x, r11.w
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r15.xyzw, r12.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r16.xy, r12.w, l(16), t11.xyxx
      add r15.xyz, r15.xyzx, -v7.xyzx
      mov r16.z, r15.w
      lt r15.xyz, |r15.xyzx|, r16.zxyz
      and r12.w, r15.y, r15.x
      and r12.w, r15.z, r12.w
      if_nz r12.w
        iadd r11.w, r9.w, r11.w
        ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r15.xyz, r11.w, l(0), t36.xyzx
        ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r16.xyz, r11.w, l(16), t36.xyzx
        ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r17.xyz, r11.w, l(32), t36.xyzx
        mov r18.x, r15.x
        mov r18.y, r16.x
        mov r18.z, r17.x
        dp3 r12.w, r18.xyzx, r18.xyzx
        rsq r12.w, r12.w
        mul r19.xyz, r12.wwww, r18.xyzx
        dp3 r12.w, r19.xyzx, v4.xyzx
        ge r12.w, r12.w, l(0.500000)
        if_nz r12.w
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r20.xyw, r11.w, l(48), t36.xyxz
          mov r18.w, r20.x
          dp4 r18.x, r5.xyzw, r18.xyzw
          mov r21.x, r15.y
          mov r21.y, r16.y
          mov r21.z, r17.y
          mov r21.w, r20.y
          dp4 r18.y, r5.xyzw, r21.xyzw
          mov r20.x, r15.z
          mov r20.y, r16.z
          mov r20.z, r17.z
          dp4 r18.z, r5.xyzw, r20.xyzw
          lt r15.xyz, |r18.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
          and r12.w, r15.y, r15.x
          and r12.w, r15.z, r12.w
          if_nz r12.w
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r15.xyzw, r11.w, l(64), t36.xyzw
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r16.xyzw, r11.w, l(80), t36.xyzw
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r17.xyzw, r11.w, l(96), t36.xyzw
            dp3 r22.x, r3.xyzx, r21.xyzx
            dp3 r22.y, r3.xyzx, r20.xyzx
            dp3 r23.x, r4.xyzx, r21.xyzx
            dp3 r23.y, r4.xyzx, r20.xyzx
            mad r18.xy, r18.yzyy, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
            mul r22.xyz, r22.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
            mul r23.xyz, r23.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
            and r18.zw, r16.yyyz, l(0, 0, 0x0000ffff, 0x0000ffff)
            if_nz r18.z
              ubfe r12.w, l(4), l(24), r16.w
              ishl r12.w, l(1), r12.w
              ushr r13.w, r16.w, l(28)
              ishl r13.w, l(1), r13.w
              ieq r14.w, r18.z, l(4)
              if_nz r14.w
                and r14.w, r16.w, l(4095)
                ubfe r19.w, l(12), l(12), r16.w
                and r20.w, r17.w, l(1023)
                utof r24.xz, r12.wwww
                utof r24.y, r13.w
                mad r25.xy, r18.xyxx, r24.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                add r25.zw, r24.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                min r25.xy, r25.zwzz, r25.xyxx
                utof r26.x, r14.w
                utof r26.y, r19.w
                add r25.xy, r25.xyxx, r26.xyxx
                mul r25.xy, r25.xyxx, cb1[83].xyxx
                utof r25.z, r20.w
                mul r26.xyz, r22.zyzz, cb1[83].xyxx
                mul r26.xyz, r24.xyzx, r26.xyzx
                mul r27.xyz, r23.zyzz, cb1[83].xyxx
                mul r24.xyz, r24.xyzx, r27.xyzx
                sample_d_indexable(texture2darray)(float,float,float,float) r24.xyzw, r25.xyzx, t42.xyzw, s4, r26.xyzx, r24.xyzx
              else 
                ieq r14.w, r18.z, l(1)
                if_nz r14.w
                  and r14.w, r16.w, l(4095)
                  ubfe r16.w, l(12), l(12), r16.w
                  and r18.z, r17.w, l(1023)
                  utof r25.xz, r12.wwww
                  utof r25.y, r13.w
                  mad r26.xy, r18.xyxx, r25.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r26.zw, r25.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r26.xy, r26.zwzz, r26.xyxx
                  utof r27.x, r14.w
                  utof r27.y, r16.w
                  add r26.xy, r26.xyxx, r27.xyxx
                  mul r26.xy, r26.xyxx, cb1[83].zwzz
                  utof r26.z, r18.z
                  mul r27.xyz, r22.zyzz, cb1[83].zwzz
                  mul r27.xyz, r25.xyzx, r27.xyzx
                  mul r28.xyz, r23.zyzz, cb1[83].zwzz
                  mul r25.xyz, r25.xyzx, r28.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r24.xyzw, r26.xyzx, t43.xyzw, s4, r27.xyzx, r25.xyzx
                else 
                  mov r24.xyzw, l(1.000000,1.000000,1.000000,1.000000)
                endif 
              endif 
              mul r15.xyz, r15.xyzx, r24.xyzx
              mul r12.w, r15.w, r24.w
            else 
              mov r15.xyz, l(0,0,0,0)
              mov r12.w, l(0)
            endif 
            ne r13.w, r16.x, l(1.000000)
            add r14.w, r15.w, r12.w
            mad_sat r14.w, r14.w, r16.x, -r16.x
            movc r12.w, r13.w, r14.w, r12.w
            if_nz r18.w
              ubfe r13.w, l(4), l(24), r17.y
              ishl r13.w, l(1), r13.w
              ushr r14.w, r17.y, l(28)
              ishl r14.w, l(1), r14.w
              ieq r15.w, r18.w, l(2)
              if_nz r15.w
                and r15.w, r17.y, l(4095)
                ubfe r16.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r17.yyyw
                utof r24.xz, r13.wwww
                utof r24.y, r14.w
                mad r25.xy, r18.xyxx, r24.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                add r25.zw, r24.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                min r25.xy, r25.zwzz, r25.xyxx
                utof r26.x, r15.w
                utof r26.y, r16.x
                add r25.xy, r25.xyxx, r26.xyxx
                mul r25.xy, r25.xyxx, cb1[84].xyxx
                utof r25.z, r16.w
                mul r26.xyz, r22.zyzz, cb1[84].xyxx
                mul r26.xyz, r24.xyzx, r26.xyzx
                mul r27.xyz, r23.zyzz, cb1[84].xyxx
                mul r24.xyz, r24.xyzx, r27.xyzx
                sample_d_indexable(texture2darray)(float,float,float,float) r15.w, r25.xyzx, t45.yzwx, s4, r26.xyzx, r24.xyzx
              else 
                ieq r16.x, r18.w, l(4)
                if_nz r16.x
                  and r16.x, r17.y, l(4095)
                  ubfe r18.zw, l(0, 0, 12, 10), l(0, 0, 12, 20), r17.yyyw
                  utof r24.xz, r13.wwww
                  utof r24.y, r14.w
                  mad r25.xy, r18.xyxx, r24.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r25.zw, r24.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r25.xy, r25.zwzz, r25.xyxx
                  utof r26.x, r16.x
                  utof r26.y, r18.z
                  add r16.xw, r25.xxxy, r26.xxxy
                  mul r25.xy, r16.xwxx, cb1[83].xyxx
                  utof r25.z, r18.w
                  mul r26.xyz, r22.zyzz, cb1[83].xyxx
                  mul r26.xyz, r24.xyzx, r26.xyzx
                  mul r27.xyz, r23.zyzz, cb1[83].xyxx
                  mul r24.xyz, r24.xyzx, r27.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r15.w, r25.xyzx, t42.yzwx, s4, r26.xyzx, r24.xyzx
                else 
                  and r16.x, r17.y, l(4095)
                  ubfe r18.zw, l(0, 0, 12, 10), l(0, 0, 12, 20), r17.yyyw
                  utof r24.xz, r13.wwww
                  utof r24.y, r14.w
                  mad r25.xy, r18.xyxx, r24.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r25.zw, r24.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r25.xy, r25.zwzz, r25.xyxx
                  utof r26.x, r16.x
                  utof r26.y, r18.z
                  add r16.xw, r25.xxxy, r26.xxxy
                  mul r25.xy, r16.xwxx, cb1[83].zwzz
                  utof r25.z, r18.w
                  mul r26.xyz, r22.zyzz, cb1[83].zwzz
                  mul r26.xyz, r24.xyzx, r26.xyzx
                  mul r27.xyz, r23.zyzz, cb1[83].zwzz
                  mul r24.xyz, r24.xyzx, r27.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r15.w, r25.xyzx, t43.yzwx, s4, r26.xyzx, r24.xyzx
                endif 
              endif 
              mad r24.xyz, r15.wwww, l(0.960000, 0.960000, 0.960000, 0.000000), l(0.040000, 0.040000, 0.040000, 0.000000)
              add_sat r13.w, -r15.w, l(1.000000)
              mul r15.xyz, r13.wwww, r15.xyzx
            else 
              mov r24.xyz, l(0.040000,0.040000,0.040000,0)
            endif 
            ushr r16.xy, r16.zyzz, l(16, 16, 0, 0)
            if_nz r16.x
              ieq r13.w, r16.x, l(2)
              if_nz r13.w
                ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r11.w, r11.w, l(112), t36.xxxx
                ubfe r16.zw, l(0, 0, 4, 12), l(0, 0, 24, 12), r17.zzzz
                ishl r13.w, l(1), r16.z
                ushr r14.w, r17.z, l(28)
                ishl r14.w, l(1), r14.w
                and r15.w, r17.z, l(4095)
                and r11.w, r11.w, l(1023)
                utof r25.xz, r13.wwww
                utof r25.y, r14.w
                mad r17.yz, r18.xxyx, r25.zzyz, l(0.000000, 0.500000, 0.500000, 0.000000)
                add r18.zw, r25.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                min r17.yz, r17.yyzy, r18.zzwz
                utof r26.x, r15.w
                utof r26.y, r16.w
                add r16.zw, r17.yyyz, r26.xxxy
                mul r26.xy, r16.zwzz, cb1[84].xyxx
                utof r26.z, r11.w
                mul r27.xyz, r22.zyzz, cb1[84].xyxx
                mul r27.xyz, r25.xyzx, r27.xyzx
                mul r28.xyz, r23.zyzz, cb1[84].xyxx
                mul r25.xyz, r25.xyzx, r28.xyzx
                sample_d_indexable(texture2darray)(float,float,float,float) r11.w, r26.xyzx, t45.yzwx, s4, r27.xyzx, r25.xyzx
              else 
                ieq r13.w, r16.x, l(6)
                movc r11.w, r13.w, l(0), l(1.000000)
              endif 
            else 
              mov r11.w, l(1.000000)
            endif 
            mul_sat r11.w, r11.w, l(0.76470590)
            if_nz r16.y
              ieq r13.w, r16.y, l(3)
              if_nz r13.w
                ubfe r16.xyz, l(4, 12, 10, 0), l(24, 12, 10, 0), r17.xxwx
                ishl r13.w, l(1), r16.x
                ushr r14.w, r17.x, l(28)
                ishl r14.w, l(1), r14.w
                and r15.w, r17.x, l(4095)
                utof r17.xz, r13.wwww
                utof r17.y, r14.w
                mad r16.xw, r18.xxxy, r17.xxxy, l(0.500000, 0.000000, 0.000000, 0.500000)
                add r18.xy, r17.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                min r16.xw, r16.xxxw, r18.xxxy
                utof r18.x, r15.w
                utof r18.yz, r16.yyzy
                add r16.xy, r16.xwxx, r18.xyxx
                mul r18.xy, r16.xyxx, cb1[84].zwzz
                mul r16.xyz, r22.xyzx, cb1[84].zwzz
                mul r16.xyz, r17.xyzx, r16.xyzx
                mul r22.xyz, r23.xyzx, cb1[84].zwzz
                mul r17.xyz, r17.xyzx, r22.xyzx
                sample_d_indexable(texture2darray)(float,float,float,float) r16.xyz, r18.xyzx, t44.xyzw, s4, r16.xyzx, r17.xyzx
              else 
                mov r16.xyz, l(0.500000,0.500000,1.000000,0)
              endif 
              mad r16.xy, r16.xyxx, l(1.99218750, 1.99218750, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
              dp2 r13.w, r16.xyxx, r16.xyxx
              add r13.w, -r13.w, l(1.000000)
              max r13.w, r13.w, l(0.000000)
              sqrt r13.w, r13.w
              mul r14.w, r16.z, r16.z
              mul r14.w, r14.w, l(0.33333334)
              min r14.w, r14.w, l(1.000000)
              dp3 r15.w, r21.xyzx, r21.xyzx
              rsq r15.w, r15.w
              mul r17.xyz, r15.wwww, r21.xyzx
              dp3 r15.w, -r20.xyzx, -r20.xyzx
              rsq r15.w, r15.w
              mul r18.xyz, r15.wwww, -r20.xyzx
              mul r19.xyz, r2.yyyy, r19.xyzx
              mul r17.xyz, r2.yyyy, r17.xyzx
              mul r18.xyz, r2.yyyy, r18.xyzx
              mul r15.w, r11.w, l(-17.000000)
              exp r15.w, r15.w
              add r14.w, r14.w, r15.w
              log r14.w, r14.w
              mul r14.w, r14.w, l(-0.05882353)
              max r11.w, r14.w, l(0.000000)
              mul r16.yzw, r16.yyyy, r18.xxyz
              mad r16.xyz, r17.xyzx, r16.xxxx, r16.yzwy
              mad r16.xyz, r19.xyzx, r13.wwww, r16.xyzx
              dp3 r13.w, r16.xyzx, r16.xyzx
              rsq r13.w, r13.w
              mul r16.xyz, r13.wwww, r16.xyzx
              add r13.w, -r12.w, l(1.000000)
              mul r17.xyz, r13.wwww, r13.xyzx
              mad r13.xyz, r16.xyzx, r12.wwww, r17.xyzx
            endif 
            add r13.w, -r12.w, l(1.000000)
            mul r16.xyz, r12.xyzx, r13.wwww
            mad r12.xyz, r15.xyzx, r12.wwww, r16.xyzx
            mul r15.xyz, r13.wwww, r14.xyzx
            mad r14.xyz, r24.xyzx, r12.wwww, r15.xyzx
            mad r8.y, r8.y, r13.w, r12.w
            mul r13.w, r8.z, r13.w
            mad r8.z, r11.w, r12.w, r13.w
          endif 
        endif 
      endif 
    endif 
  endloop 
  mov r9.xyz, r12.xyzx
  mov r10.xyz, r13.xyzx
  mov r11.xyz, r14.xyzx
  mov r6.w, r8.y
  mov r7.w, r8.z
  iadd r9.w, r9.w, l(32)
endloop 
mov_sat r6.w, r6.w
add r2.x, -r6.w, l(1.000000)
mad r0.xyz, r0.xyzx, r2.xxxx, r9.xyzx
mad r0.w, r0.w, r2.x, r6.w
mad r1.yzw, r1.yyzw, r2.xxxx, r10.xxyz
dp3 r2.y, r1.yzwy, r1.yzwy
rsq r2.y, r2.y
mul r3.xyz, r1.yzwy, r2.yyyy
mad r1.y, r1.x, r2.x, r7.w
mad r4.xyz, r2.xxxx, l(0.080000, 0.080000, 0.080000, 0.000000), r11.xyzx
ld_structured_indexable(structured_buffer, stride=24)(mixed,mixed,mixed,mixed) r1.z, v3.x, l(4), t4.xxxx
ld_structured_indexable(structured_buffer, stride=384)(mixed,mixed,mixed,mixed) r1.z, r1.z, l(0), t0.xxxx
add_sat r0.w, r0.w, r1.z
dp3 r1.z, -v7.xyzx, -v7.xyzx
rsq r1.z, r1.z
mul r7.xyz, r1.zzzz, -v7.xyzx
ine r1.w, cb1[92].x, l(0)
utof r2.xy, r2.zwzz
dp2 r2.z, r2.yxyy, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r2.z, r2.z
mul r2.z, r2.z, l(52.982918)
frc r2.z, r2.z
mad r2.z, r2.z, l(6.28318548), cb1[70].w
sincos r8.x, r9.x, r2.z
dp2 r2.x, r2.xyxx, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r2.x, r2.x
mul r2.x, r2.x, l(52.982918)
frc r2.x, r2.x
mad r2.x, r2.x, l(6.28318548), cb1[70].w
sincos r2.x, r10.x, r2.x
dp3_sat r1.x, r3.xyzx, r7.xyzx
dp3 r2.y, -r7.xyzx, r3.xyzx
add r2.y, r2.y, r2.y
mad r11.xyz, r3.xyzx, -r2.yyyy, -r7.xyzx
mul r2.y, r1.y, l(17.000000)
exp r2.y, r2.y
add r2.y, r2.y, l(2.000000)
div r2.y, l(2.000000), r2.y
sqrt r2.z, r2.y
add r8.zw, -r1.yyyx, l(0.000000, 0.000000, 1.000000, 1.000000)
mul r2.w, r8.z, l(5.000000)
mad r4.w, r8.z, l(5.000000), l(-2.500000)
mul_sat r4.w, r4.w, l(0.400000)
mul r4.w, r4.w, l(100.000000)
mad r10.yz, -r8.zzzz, l(0.000000, 10.000000, 5.000000, 0.000000), l(0.000000, 6.857410, 7.085000, 0.000000)
exp r6.w, r10.y
mul r6.w, r1.x, r6.w
mul r6.w, r6.w, l(9.136810)
mul r7.w, r8.z, r2.w
mad r7.w, -r7.w, l(2.015905), r10.z
exp r7.w, r7.w
mul r7.w, r1.x, r7.w
mul r7.w, r7.w, l(9.708090)
max r6.w, r6.w, r7.w
max r6.w, r6.w, l(1.268160)
iadd r7.w, cb2[0].y, -cb2[58].x
and r9.w, r7.w, l(-32)
iadd r10.y, r7.w, -r9.w
and r10.z, cb2[0].y, l(-32)
iadd r10.w, -r10.z, cb2[0].y
mov r12.xy, l(0,0,0,0)
mov r13.w, l(0)
mov r14.yz, l(0,0,1.000000,0)
mov r15.xy, l(0,0,0,0)
mov r16.x, l(1.000000)
mov r17.xy, l(0,0,0,0)
mov r18.xy, l(0,0,0,0)
mov r19.xyzw, l(0,0,0,0)
mov r20.yzw, l(0,0,0,0)
mov r12.w, r9.w
loop 
  uge r14.w, r12.w, cb2[0].y
  breakc_nz r14.w
  ushr r12.z, r12.w, l(5)
  iadd r13.xyz, r6.xyzx, r12.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r12.z, r13.xyzw, t7.yzxw
  ieq r13.x, r9.w, r12.w
  bfi r13.y, r10.y, l(0), l(0), r12.z
  movc r12.z, r13.x, r13.y, r12.z
  ieq r13.x, r10.z, r12.w
  ubfe r13.y, r10.w, l(0), r12.z
  movc r12.z, r13.x, r13.y, r12.z
  iadd r13.x, r12.w, cb2[0].x
  mov r21.xyzw, r19.xyzw
  mov r22.xyz, r20.yzwy
  mov r13.y, r12.z
  loop 
    breakc_z r13.y
    firstbit_lo r13.z, r13.y
    ishl r14.w, l(1), r13.z
    and r15.w, r13.y, r14.w
    if_nz r15.w
      xor r13.y, r13.y, r14.w
      iadd r14.w, r13.z, r13.x
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r23.xyzw, r14.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r24.xy, r14.w, l(16), t11.xyxx
      add r23.xyz, r23.xyzx, -v7.xyzx
      mov r24.z, r23.w
      lt r23.xyz, |r23.xyzx|, r24.zxyz
      and r14.w, r23.y, r23.x
      and r14.w, r23.z, r14.w
      if_nz r14.w
        iadd r13.z, r12.w, r13.z
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r23.xyzw, r13.z, l(0), t15.wxyz
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r16.zw, r13.z, l(96), t15.xxxy
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r13.z, l(116), t15.zwxy
        add r25.xyz, -r23.yzwy, v7.xyzx
        and r14.w, r24.w, l(0x0000ffff)
        ubfe r15.w, l(6), l(25), r24.w
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r26.xyzw, r14.w, l(0), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r14.w, l(16), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r14.w, l(32), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r14.w, l(48), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r14.w, l(64), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r14.w, l(80), t16.xyzw
        dp3 r17.w, r26.xyzx, r25.xyzx
        add_sat r17.w, r26.w, r17.w
        dp3 r18.w, r27.xyzx, r25.xyzx
        add_sat r18.w, r27.w, r18.w
        mul r17.w, r17.w, r18.w
        dp3 r18.w, r28.xyzx, r25.xyzx
        add_sat r18.w, r28.w, r18.w
        mul r17.w, r17.w, r18.w
        dp3 r18.w, r29.xyzx, r25.xyzx
        add_sat r18.w, r29.w, r18.w
        mul r17.w, r17.w, r18.w
        dp3 r18.w, r30.xyzx, r25.xyzx
        add_sat r18.w, r30.w, r18.w
        mul r17.w, r17.w, r18.w
        dp3 r18.w, r31.xyzx, r25.xyzx
        add_sat r18.w, r31.w, r18.w
        mul r14.x, r17.w, r18.w
        and r17.w, r16.z, l(1)
        movc r26.xy, r17.wwww, r14.xyxx, r14.zxzz
        mov r14.x, r16.z
        mov r27.xy, r26.xyxx
        mov r17.w, l(1)
        loop 
          ige r18.w, r17.w, r15.w
          breakc_nz r18.w
          iadd r18.w, r14.w, r17.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r18.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r18.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r18.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r18.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r18.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r18.w, l(80), t16.xyzw
          dp3 r18.w, r28.xyzx, r25.xyzx
          add_sat r18.w, r28.w, r18.w
          mul r18.w, r18.w, r27.x
          dp3 r23.w, r29.xyzx, r25.xyzx
          add_sat r23.w, r29.w, r23.w
          mul r18.w, r18.w, r23.w
          dp3 r23.w, r30.xyzx, r25.xyzx
          add_sat r23.w, r30.w, r23.w
          mul r18.w, r18.w, r23.w
          dp3 r23.w, r31.xyzx, r25.xyzx
          add_sat r23.w, r31.w, r23.w
          mul r18.w, r18.w, r23.w
          dp3 r23.w, r32.xyzx, r25.xyzx
          add_sat r23.w, r32.w, r23.w
          mul r18.w, r18.w, r23.w
          dp3 r23.w, r33.xyzx, r25.xyzx
          add_sat r23.w, r33.w, r23.w
          mul r27.x, r18.w, r23.w
          ushr r25.w, r14.x, l(2)
          ubfe r26.z, l(1), l(2), r14.x
          and r26.w, r25.w, l(2)
          max r27.z, r27.x, r27.y
          mad r18.w, -r18.w, r23.w, l(1.000000)
          mul r18.w, r18.w, r27.y
          movc r16.y, r26.w, r18.w, r27.z
          movc r27.xy, r26.zzzz, r27.xyxx, r16.xyxx
          iadd r17.w, r17.w, l(1)
          mov r14.x, r25.w
        endloop 
        mov_sat r27.y, r27.y
        mul r14.x, r16.w, r27.y
        lt r14.w, l(0.000000), r14.x
        if_nz r14.w
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r13.z, l(16), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r13.z, l(32), t15.yxwz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r13.z, l(48), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r13.z, l(64), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r13.z, l(80), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r13.z, l(132), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r13.z, l(148), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r13.z, l(164), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r13.z, l(180), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r13.z, l(196), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xy, r13.z, l(212), t15.xyxx
          mad r22.z, r27.y, r16.w, r22.z
          mul r13.z, r24.z, r14.x
          mov r24.z, r32.z
          dp3 r14.x, r11.xyzx, r24.xyzx
          dp3 r14.w, r25.xyzx, r24.xyzx
          add r14.w, -r32.w, r14.w
          ge r15.w, r14.w, l(0.000000)
          max r14.w, r4.w, |r14.w|
          movc r14.w, r15.w, r14.w, -r14.w
          max r14.x, -r14.x, l(0.00000010)
          div r14.x, r14.w, r14.x
          min r14.x, |r14.x|, l(131072.000000)
          mov r32.z, r33.z
          dp3 r14.w, r11.xyzx, r32.xyzx
          dp3 r15.w, r25.xyzx, r32.xyzx
          add r15.w, -r33.w, r15.w
          ge r16.y, r15.w, l(0.000000)
          max r15.w, r4.w, |r15.w|
          movc r15.w, r16.y, r15.w, -r15.w
          max r14.w, -r14.w, l(0.00000010)
          div r14.w, r15.w, r14.w
          min r14.x, |r14.w|, r14.x
          mov r33.z, r34.z
          dp3 r14.w, r11.xyzx, r33.xyzx
          dp3 r15.w, r25.xyzx, r33.xyzx
          add r15.w, -r34.w, r15.w
          ge r16.y, r15.w, l(0.000000)
          max r15.w, r4.w, |r15.w|
          movc r15.w, r16.y, r15.w, -r15.w
          max r14.w, -r14.w, l(0.00000010)
          div r14.w, r15.w, r14.w
          min r14.x, |r14.w|, r14.x
          mov r34.z, r35.z
          dp3 r14.w, r11.xyzx, r34.xyzx
          dp3 r15.w, r25.xyzx, r34.xyzx
          add r15.w, -r35.w, r15.w
          ge r16.y, r15.w, l(0.000000)
          max r15.w, r4.w, |r15.w|
          movc r15.w, r16.y, r15.w, -r15.w
          max r14.w, -r14.w, l(0.00000010)
          div r14.w, r15.w, r14.w
          min r14.x, |r14.w|, r14.x
          mov r35.z, r36.x
          dp3 r14.w, r11.xyzx, r35.xyzx
          dp3 r15.w, r25.xyzx, r35.xyzx
          add r15.w, -r36.y, r15.w
          ge r16.y, r15.w, l(0.000000)
          max r15.w, r4.w, |r15.w|
          movc r15.w, r16.y, r15.w, -r15.w
          max r14.w, -r14.w, l(0.00000010)
          div r14.w, r15.w, r14.w
          min r14.x, |r14.w|, r14.x
          mov r37.zw, r36.zzzw
          dp3 r14.w, r11.zxyz, r37.xzwx
          dp3 r15.w, r25.zxyz, r37.xzwx
          add r15.w, -r37.y, r15.w
          ge r16.y, r15.w, l(0.000000)
          max r15.w, r4.w, |r15.w|
          movc r15.w, r16.y, r15.w, -r15.w
          max r14.w, -r14.w, l(0.00000010)
          div r14.w, r15.w, r14.w
          min r14.x, |r14.w|, r14.x
          mov r24.x, r29.w
          mov r24.yz, r30.zzwz
          add r16.yzw, r25.xxyz, r24.xxyz
          mad r16.yzw, r11.xxyz, r14.xxxx, r16.yyzw
          dp3 r14.w, r16.yzwy, r16.yzwy
          sqrt r14.w, r14.w
          div r14.x, r14.x, r14.w
          add r14.x, r14.x, r14.x
          sqrt r14.x, r14.x
          mad r14.x, r8.z, l(5.000000), r14.x
          add r14.x, r14.x, l(-0.844800)
          mov r23.y, r26.z
          mov r23.z, r28.x
          dp3 r32.x, r16.yzwy, r23.xyzx
          mov r24.xy, r26.xwxx
          mov r24.z, r28.w
          dp3 r32.y, r16.yzwy, r24.xyzx
          mov r28.x, r26.y
          dp3 r32.z, r16.yzwy, r28.xyzx
          ubfe r14.w, l(9), l(16), r24.w
          utof r32.w, r14.w
          sample_l_indexable(texturecubearray)(float,float,float,float) r16.yzw, r32.xyzw, t8.wxyz, s2, r14.x
          dp3 r26.x, r25.xyzx, r23.xyzx
          dp3 r26.y, r25.xyzx, r24.xyzx
          dp3 r26.z, r25.xyzx, r28.xyzx
          mad_sat r25.xyz, r26.xyzx, r29.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
          mov r30.z, r31.x
          mad r25.xyz, r25.xyzx, r30.xyzx, r31.yzwy
          dp3 r32.x, r3.xyzx, r23.xyzx
          dp3 r32.y, r3.xyzx, r24.xyzx
          dp3 r32.z, r3.xyzx, r28.xyzx
          lt r23.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r32.xyzx
          movc r15.z, r23.x, l(0), l(0.500000)
          add r24.xyz, r15.xyzx, r25.xyzx
          sample_l_indexable(texture3d)(float,float,float,float) r24.xyz, r24.xyzx, t17.xyzw, s4, l(0.000000)
          mul r26.xyz, r32.xyzx, r32.xyzx
          mul r26.xyz, r13.zzzz, r26.xyzx
          movc r17.z, r23.y, l(0), l(0.500000)
          add r23.xyw, r17.xyxz, r25.xyxz
          sample_l_indexable(texture3d)(float,float,float,float) r23.xyw, r23.xywx, t18.xywz, s4, l(0.000000)
          mul r23.xyw, r26.yyyy, r23.xyxw
          mad r23.xyw, r24.xyxz, r26.xxxx, r23.xyxw
          movc r18.z, r23.z, l(0), l(0.500000)
          add r24.xyz, r18.xyzx, r25.xyzx
          sample_l_indexable(texture3d)(float,float,float,float) r24.xyz, r24.xyzx, t19.xyzw, s4, l(0.000000)
          mad r23.xyz, r24.xyzx, r26.zzzz, r23.xywx
          sample_l_indexable(texturecubearray)(float,float,float,float) r24.xyz, r32.xyzw, t8.xyzw, s2, l(6.000000)
          mul r25.xyz, r23.xyzx, r24.xyzx
          dp3 r14.x, r25.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r21.xyz, r23.xyzx, r24.xyzx, r21.xyzx
          mul r14.w, r6.w, r14.x
          mul r16.yzw, r13.zzzz, r16.yyzw
          dp3 r13.z, r16.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r13.z, r6.w, r14.x, r13.z
          div r13.z, r14.w, r13.z
          mov r23.x, r21.w
          mov r23.yz, r22.xxyx
          mad r22.xyw, r16.zwzy, r13.zzzz, r23.yzyx
          mov r21.w, r22.w
        endif 
      endif 
    endif 
  endloop 
  mov r19.xyzw, r21.xyzw
  mov r20.yzw, r22.xxyz
  iadd r12.w, r12.w, l(32)
endloop 
lt r10.z, r20.w, l(1.000000)
if_nz r10.z
  mov r12.xy, l(0,0,0,0)
  mov r13.w, l(0)
  mov r14.yz, l(0,0,1.000000,0)
  mov r15.xy, l(0,0,0,0)
  mov r16.x, l(1.000000)
  mov r17.xy, l(0,0,0,0)
  mov r18.xy, l(0,0,0,0)
  mov r21.x, r19.w
  mov r21.yzw, r20.yyzw
  mov r22.xyz, r19.xyzx
  mov r10.z, r20.w
  mov r10.w, l(0)
  loop 
    uge r12.w, r10.w, r7.w
    breakc_nz r12.w
    ushr r12.z, r10.w, l(5)
    iadd r13.xyz, r6.xyzx, r12.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r12.z, r13.xyzw, t7.yzxw
    ieq r12.w, r9.w, r10.w
    ubfe r13.x, r10.y, l(0), r12.z
    movc r12.z, r12.w, r13.x, r12.z
    iadd r12.w, r10.w, cb2[0].x
    mov r23.xyzw, r21.xyzw
    mov r13.xyz, r22.xyzx
    mov r14.w, r10.z
    mov r15.w, r12.z
    loop 
      breakc_z r15.w
      firstbit_lo r16.z, r15.w
      ishl r16.w, l(1), r16.z
      and r17.w, r15.w, r16.w
      if_nz r17.w
        xor r15.w, r15.w, r16.w
        iadd r16.w, r12.w, r16.z
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r24.xyzw, r16.w, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r25.xy, r16.w, l(16), t11.xyxx
        add r24.xyz, r24.xyzx, -v7.xyzx
        mov r25.z, r24.w
        lt r24.xyz, |r24.xyzx|, r25.zxyz
        and r16.w, r24.y, r24.x
        and r16.w, r24.z, r16.w
        if_nz r16.w
          iadd r16.z, r10.w, r16.z
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r16.z, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xy, r16.z, l(96), t15.xyxx
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r16.z, l(116), t15.zwxy
          add r27.xyz, -r24.yzwy, v7.xyzx
          and r16.w, r26.w, l(0x0000ffff)
          ubfe r17.w, l(6), l(25), r26.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r16.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r16.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r16.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r16.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r16.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r16.w, l(80), t16.xyzw
          dp3 r18.w, r28.xyzx, r27.xyzx
          add_sat r18.w, r28.w, r18.w
          dp3 r22.w, r29.xyzx, r27.xyzx
          add_sat r22.w, r29.w, r22.w
          mul r18.w, r18.w, r22.w
          dp3 r22.w, r30.xyzx, r27.xyzx
          add_sat r22.w, r30.w, r22.w
          mul r18.w, r18.w, r22.w
          dp3 r22.w, r31.xyzx, r27.xyzx
          add_sat r22.w, r31.w, r22.w
          mul r18.w, r18.w, r22.w
          dp3 r22.w, r32.xyzx, r27.xyzx
          add_sat r22.w, r32.w, r22.w
          mul r18.w, r18.w, r22.w
          dp3 r22.w, r33.xyzx, r27.xyzx
          add_sat r22.w, r33.w, r22.w
          mul r14.x, r18.w, r22.w
          and r18.w, r25.x, l(1)
          movc r25.zw, r18.wwww, r14.xxxy, r14.zzzx
          mov r14.x, r25.x
          mov r28.xy, r25.zwzz
          mov r18.w, l(1)
          loop 
            ige r22.w, r18.w, r17.w
            breakc_nz r22.w
            iadd r22.w, r16.w, r18.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r22.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r22.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r22.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r22.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r22.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r22.w, l(80), t16.xyzw
            dp3 r22.w, r29.xyzx, r27.xyzx
            add_sat r22.w, r29.w, r22.w
            mul r22.w, r22.w, r28.x
            dp3 r24.w, r30.xyzx, r27.xyzx
            add_sat r24.w, r30.w, r24.w
            mul r22.w, r22.w, r24.w
            dp3 r24.w, r31.xyzx, r27.xyzx
            add_sat r24.w, r31.w, r24.w
            mul r22.w, r22.w, r24.w
            dp3 r24.w, r32.xyzx, r27.xyzx
            add_sat r24.w, r32.w, r24.w
            mul r22.w, r22.w, r24.w
            dp3 r24.w, r33.xyzx, r27.xyzx
            add_sat r24.w, r33.w, r24.w
            mul r22.w, r22.w, r24.w
            dp3 r24.w, r34.xyzx, r27.xyzx
            add_sat r24.w, r34.w, r24.w
            mul r28.x, r22.w, r24.w
            ushr r27.w, r14.x, l(2)
            ubfe r28.z, l(1), l(2), r14.x
            and r28.w, r27.w, l(2)
            max r29.x, r28.x, r28.y
            mad r22.w, -r22.w, r24.w, l(1.000000)
            mul r22.w, r22.w, r28.y
            movc r16.y, r28.w, r22.w, r29.x
            movc r28.xy, r28.zzzz, r28.xyxx, r16.xyxx
            iadd r18.w, r18.w, l(1)
            mov r14.x, r27.w
          endloop 
          add_sat r14.x, -r14.w, r28.y
          mul r16.y, r25.y, r14.x
          lt r16.w, l(0.000000), r16.y
          if_nz r16.w
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r16.z, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r16.z, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r16.z, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r16.z, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r16.z, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r16.z, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r16.z, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r16.z, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r16.z, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r16.z, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xy, r16.z, l(212), t15.xyxx
            mad r23.w, r14.x, r25.y, r23.w
            mul r14.x, r26.z, r16.y
            mov r26.z, r34.z
            dp3 r16.y, r11.xyzx, r26.xyzx
            dp3 r16.z, r27.xyzx, r26.xyzx
            add r16.z, -r34.w, r16.z
            ge r16.w, r16.z, l(0.000000)
            max r16.z, r4.w, |r16.z|
            movc r16.z, r16.w, r16.z, -r16.z
            max r16.y, -r16.y, l(0.00000010)
            div r16.y, r16.z, r16.y
            min r16.y, |r16.y|, l(131072.000000)
            mov r34.z, r35.z
            dp3 r16.z, r11.xyzx, r34.xyzx
            dp3 r16.w, r27.xyzx, r34.xyzx
            add r16.w, -r35.w, r16.w
            ge r17.w, r16.w, l(0.000000)
            max r16.w, r4.w, |r16.w|
            movc r16.w, r17.w, r16.w, -r16.w
            max r16.z, -r16.z, l(0.00000010)
            div r16.z, r16.w, r16.z
            min r16.y, |r16.z|, r16.y
            mov r35.z, r36.z
            dp3 r16.z, r11.xyzx, r35.xyzx
            dp3 r16.w, r27.xyzx, r35.xyzx
            add r16.w, -r36.w, r16.w
            ge r17.w, r16.w, l(0.000000)
            max r16.w, r4.w, |r16.w|
            movc r16.w, r17.w, r16.w, -r16.w
            max r16.z, -r16.z, l(0.00000010)
            div r16.z, r16.w, r16.z
            min r16.y, |r16.z|, r16.y
            mov r36.z, r37.z
            dp3 r16.z, r11.xyzx, r36.xyzx
            dp3 r16.w, r27.xyzx, r36.xyzx
            add r16.w, -r37.w, r16.w
            ge r17.w, r16.w, l(0.000000)
            max r16.w, r4.w, |r16.w|
            movc r16.w, r17.w, r16.w, -r16.w
            max r16.z, -r16.z, l(0.00000010)
            div r16.z, r16.w, r16.z
            min r16.y, |r16.z|, r16.y
            mov r37.z, r38.x
            dp3 r16.z, r11.xyzx, r37.xyzx
            dp3 r16.w, r27.xyzx, r37.xyzx
            add r16.w, -r38.y, r16.w
            ge r17.w, r16.w, l(0.000000)
            max r16.w, r4.w, |r16.w|
            movc r16.w, r17.w, r16.w, -r16.w
            max r16.z, -r16.z, l(0.00000010)
            div r16.z, r16.w, r16.z
            min r16.y, |r16.z|, r16.y
            mov r39.zw, r38.zzzw
            dp3 r16.z, r11.zxyz, r39.xzwx
            dp3 r16.w, r27.zxyz, r39.xzwx
            add r16.w, -r39.y, r16.w
            ge r17.w, r16.w, l(0.000000)
            max r16.w, r4.w, |r16.w|
            movc r16.w, r17.w, r16.w, -r16.w
            max r16.z, -r16.z, l(0.00000010)
            div r16.z, r16.w, r16.z
            min r16.y, |r16.z|, r16.y
            mov r25.x, r31.w
            mov r25.yz, r32.zzwz
            add r25.xyz, r27.xyzx, r25.xyzx
            mad r25.xyz, r11.xyzx, r16.yyyy, r25.xyzx
            dp3 r16.z, r25.xyzx, r25.xyzx
            sqrt r16.z, r16.z
            div r16.y, r16.y, r16.z
            add r16.y, r16.y, r16.y
            sqrt r16.y, r16.y
            mad r16.y, r8.z, l(5.000000), r16.y
            add r16.y, r16.y, l(-0.844800)
            mov r24.y, r29.z
            mov r24.z, r30.x
            dp3 r34.x, r25.xyzx, r24.xyzx
            mov r26.xy, r29.xwxx
            mov r26.z, r30.w
            dp3 r34.y, r25.xyzx, r26.xyzx
            mov r30.x, r29.y
            dp3 r34.z, r25.xyzx, r30.xyzx
            ubfe r16.z, l(9), l(16), r26.w
            utof r34.w, r16.z
            sample_l_indexable(texturecubearray)(float,float,float,float) r16.yzw, r34.xyzw, t8.wxyz, s2, r16.y
            dp3 r25.x, r27.xyzx, r24.xyzx
            dp3 r25.y, r27.xyzx, r26.xyzx
            dp3 r25.z, r27.xyzx, r30.xyzx
            mad_sat r25.xyz, r25.xyzx, r31.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
            mov r32.z, r33.x
            mad r25.xyz, r25.xyzx, r32.xyzx, r33.yzwy
            dp3 r34.x, r3.xyzx, r24.xyzx
            dp3 r34.y, r3.xyzx, r26.xyzx
            dp3 r34.z, r3.xyzx, r30.xyzx
            lt r24.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r34.xyzx
            movc r15.z, r24.x, l(0), l(0.500000)
            add r26.xyz, r15.xyzx, r25.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r26.xyz, r26.xyzx, t17.xyzw, s4, l(0.000000)
            mul r27.xyz, r34.xyzx, r34.xyzx
            mul r27.xyz, r14.xxxx, r27.xyzx
            movc r17.z, r24.y, l(0), l(0.500000)
            add r24.xyw, r17.xyxz, r25.xyxz
            sample_l_indexable(texture3d)(float,float,float,float) r24.xyw, r24.xywx, t18.xywz, s4, l(0.000000)
            mul r24.xyw, r27.yyyy, r24.xyxw
            mad r24.xyw, r26.xyxz, r27.xxxx, r24.xyxw
            movc r18.z, r24.z, l(0), l(0.500000)
            add r25.xyz, r18.xyzx, r25.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r25.xyz, r25.xyzx, t19.xyzw, s4, l(0.000000)
            mad r24.xyz, r25.xyzx, r27.zzzz, r24.xywx
            sample_l_indexable(texturecubearray)(float,float,float,float) r25.xyz, r34.xyzw, t8.xyzw, s2, l(6.000000)
            mul r26.xyz, r24.xyzx, r25.xyzx
            dp3 r15.z, r26.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r13.xyz, r24.xyzx, r25.xyzx, r13.xyzx
            mul r17.z, r6.w, r15.z
            mul r16.yzw, r14.xxxx, r16.yyzw
            dp3 r14.x, r16.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r14.x, r6.w, r15.z, r14.x
            div r14.x, r17.z, r14.x
            mad r23.xyz, r16.yzwy, r14.xxxx, r23.xyzx
          endif 
        endif 
      endif 
    endloop 
    mov r21.xyzw, r23.xyzw
    mov r22.xyz, r13.xyzx
    iadd r10.w, r10.w, l(32)
  endloop 
  mov r20.xyzw, r21.zxyw
  mov r19.xyz, r22.xyzx
  mov r20.xyzw, r20.yzxw
else 
  mov r20.x, r19.w
endif 
max r4.w, r20.w, l(1.000000)
rcp r4.w, r4.w
mov_sat r20.w, r20.w
mul r12.xyz, r4.wwww, r19.yzxy
mul r10.yzw, r4.wwww, r20.xxyz
lt r6.w, r20.w, l(0.990000)
if_nz r6.w
  add r6.w, -r20.w, l(1.000000)
  mul r7.w, r6.w, cb2[19].x
  add r13.xyz, v7.xyzx, -cb2[35].xyzx
  mul r14.x, r13.x, cb2[35].w
  mul r14.yz, r13.yyzy, cb2[36].xxyx
  add_sat r13.xyz, r14.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mul r14.xy, r13.xyxx, cb2[36].zwzz
  mul r14.z, r13.z, cb2[37].x
  add r13.xyz, r14.xyzx, cb2[37].yzwy
  lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r3.xyzx
  movc r14.xyz, r14.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
  mov r14.w, l(0)
  add r15.xyz, r13.xyzx, r14.wwxw
  sample_l_indexable(texture3d)(float,float,float,float) r15.xyz, r15.xyzx, t17.xyzw, s4, l(0.000000)
  mul r16.xyz, r3.xyzx, r3.xyzx
  mul r16.xyz, r7.wwww, r16.xyzx
  add r17.xyz, r13.xyzx, r14.wwyw
  sample_l_indexable(texture3d)(float,float,float,float) r17.xyz, r17.xyzx, t18.xyzw, s4, l(0.000000)
  mul r17.xyz, r16.yyyy, r17.xyzx
  mad r15.xyz, r15.xyzx, r16.xxxx, r17.xyzx
  add r13.xyz, r13.xyzx, r14.wwzw
  sample_l_indexable(texture3d)(float,float,float,float) r13.xyz, r13.xyzx, t19.xyzw, s4, l(0.000000)
  mad r13.xyz, r13.xyzx, r16.zzzz, r15.xyzx
  mov r3.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r14.xyz, r3.xyzw, t8.xyzw, s2, l(6.000000)
  mul r13.xyz, r13.xyzx, r14.xyzx
  dp3 r3.w, r13.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  mad r12.xyz, r19.yzxy, r4.wwww, r13.yzxy
  mov r11.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r13.xyz, r11.xyzw, t8.xyzw, s2, r2.w
  mad r2.w, cb2[19].x, r6.w, -r3.w
  mad r2.w, r1.y, r2.w, r3.w
  mad r10.yzw, r13.xxyz, r2.wwww, r10.yyzw
endif 
mad r13.xy, r1.xyxx, l(0.984375, 0.984375, 0.000000, 0.000000), l(0.00781250, 0.00781250, 0.000000, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r13.xy, r13.xyxx, t5.xyzw, s2, l(0.000000)
mul r13.xzw, r10.yyzw, r13.xxxx
mul r14.xyz, r10.yzwy, r13.yyyy
sqrt r1.y, r2.z
mad r1.y, r1.y, l(0.500000), l(0.500000)
mul r1.y, r1.y, r1.y
mul r2.w, r1.y, l(0.500000)
mad r1.y, -r1.y, l(0.500000), l(1.000000)
mad r3.w, r1.x, r1.y, r2.w
mul r1.y, r1.y, r3.w
mul r2.w, r2.w, r3.w
dp3 r3.w, r3.xyzx, cb2[17].xyzx
ge r4.w, l(0.000000), |r3.w|
if_nz r4.w
  mov r6.w, l(0)
endif 
if_z r4.w
  mul r10.yzw, v7.yyyy, cb2[29].xxyz
  mad r10.yzw, v7.xxxx, cb2[28].xxyz, r10.yyzw
  mad r10.yzw, v7.zzzz, cb2[30].xxyz, r10.yyzw
  add r10.yzw, r10.yyzw, cb2[31].xxyz
  add r4.w, r10.w, -cb2[17].w
  mad r4.w, -r4.w, l(0.00006104), l(1.000000)
  mov_sat r7.w, r4.w
  eq r7.w, r4.w, r7.w
  if_nz r7.w
    mov r7.w, l(0)
    mov r8.z, l(0)
    loop 
      ge r9.w, r7.w, l(3.000000)
      breakc_nz r9.w
      ftou r9.w, r7.w
      add r15.xy, r10.yzyy, -cb2[r9.w + 20].xyxx
      max r11.w, |r15.y|, |r15.x|
      mul r8.z, r11.w, cb2[r9.w + 20].z
      lt r9.w, r8.z, l(1.000000)
      if_nz r9.w
        break 
      endif 
      add r7.w, r7.w, l(1.000000)
      mov r8.z, l(0)
    endloop 
  else 
    mov r7.w, l(3.000000)
    mov r8.z, l(0)
  endif 
  ge r9.w, r7.w, l(3.000000)
  if_nz r9.w
    mul r15.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
    rcp r16.xz, r15.xxxx
    mov r16.y, -r16.z
    mad r15.xyz, r10.yzyy, r16.xyzx, r15.yzyy
    add r16.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r15.xyz, r15.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r15.xyz, r16.xyzx, r15.xyzx
    mul r16.xy, r15.zyzz, cb2[32].xxxx
    round_ni r16.xy, r16.xyxx
    mul r11.w, r16.y, cb2[27].x
    mad r11.w, r11.w, cb2[32].x, r16.x
    ftou r11.w, r11.w
    iadd r11.w, r11.w, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r13.y, r11.w, l(0), t23.xxxx
    and r15.w, r13.y, l(0x40000000)
    ishl r16.x, r13.y, l(2)
    if_z r15.w
      and r15.w, r13.y, l(0x01ffffff)
      iadd r17.x, r11.w, r15.w
      ushr r11.w, r13.y, l(25)
      utof r11.w, r11.w
      mul r15.xyz, r11.wwww, r15.xyzx
      frc r15.xyz, r15.xyzx
      mul r15.xyz, r15.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
      ftou r15.xyz, r15.xyzx
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.z, r17.x, l(0), t23.xxxx
      ushr r16.yz, r15.zzyz, l(0, 6, 6, 0)
      and r11.w, r17.z, l(0xc0000000)
      iadd r13.y, r17.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r13.y, r13.y, l(0), t23.xxxx
      movc r13.y, r16.z, r17.z, r13.y
      ushr r15.w, r13.y, l(13)
      movc r13.y, r16.y, r15.w, r13.y
      and r13.y, r13.y, l(8191)
      iadd r18.x, r13.y, r17.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.x, l(0), t23.xxxx
      mov r17.y, l(0)
      mov r18.y, l(1)
      movc r16.yzw, r11.wwww, r17.xxyz, r18.xxyz
      movc r18.yz, r11.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r19.xy, r15.zyzz, r18.yyyy
      and r19.xy, r19.xyxx, l(1, 1, 0, 0)
      and r13.y, r16.w, l(0xc0000000)
      iadd r15.w, r16.y, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.w, r15.w, l(0), t23.xxxx
      movc r15.w, r19.y, r16.w, r15.w
      ushr r17.w, r15.w, l(13)
      movc r15.w, r19.x, r17.w, r15.w
      and r15.w, r15.w, l(8191)
      iadd r18.x, r15.w, r16.y
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.w, r18.x, l(0), t23.xxxx
      movc r16.yzw, r13.yyyy, r16.yyzw, r18.xxzw
      movc r16.yzw, r11.wwww, r17.xxyz, r16.yyzw
      and r11.w, r16.w, l(0xc0000000)
      if_z r11.w
        iadd r11.w, -r16.z, l(6)
        ushr r17.xy, r15.zyzz, r11.wwww
        or r11.w, r16.w, l(0x40000000)
        bfi r13.y, l(1), l(1), r17.y, l(0)
        bfi r13.y, l(1), l(0), r17.x, r13.y
        imul null, r13.y, r13.y, l(10)
        ushr r11.w, r11.w, r13.y
        and r11.w, r11.w, l(1023)
        iadd r17.x, r11.w, r16.y
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.w, r17.x, l(0), t23.xxxx
        iadd r17.yz, r16.zzzz, l(0, 1, 2, 0)
        iadd r11.w, -r17.y, l(6)
        ushr r18.xy, r15.zyzz, r11.wwww
        and r11.w, r17.w, l(0xc0000000)
        or r13.y, r17.w, l(0x40000000)
        bfi r15.w, l(1), l(1), r18.y, l(0)
        bfi r15.w, l(1), l(0), r18.x, r15.w
        imul null, r15.w, r15.w, l(10)
        ushr r13.y, r13.y, r15.w
        and r13.y, r13.y, l(1023)
        iadd r18.x, r13.y, r17.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.x, l(0), t23.xxxx
        mov r18.y, r17.z
        movc r18.xyz, r11.wwww, r17.xywx, r18.xyzx
        iadd r13.y, -r18.y, l(6)
        ushr r17.yz, r15.zzyz, r13.yyyy
        and r13.y, r18.z, l(0xc0000000)
        or r15.w, r18.z, l(0x40000000)
        bfi r16.z, l(1), l(1), r17.z, l(0)
        bfi r16.z, l(1), l(0), r17.y, r16.z
        imul null, r16.z, r16.z, l(10)
        ushr r15.w, r15.w, r16.z
        and r15.w, r15.w, l(1023)
        iadd r19.x, r15.w, r18.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.y, r19.x, l(0), t23.xxxx
        movc r17.yz, r13.yyyy, r18.xxzx, r19.xxyx
        movc r16.yw, r11.wwww, r17.xxxw, r17.yyyz
      endif 
      and r11.w, r16.w, l(0xc0000000)
      if_z r11.w
        ubfe r13.y, l(14), l(15), r16.w
        utof r13.y, r13.y
        mul r13.y, r13.y, cb2[27].w
        mul r13.y, r13.y, l(0.00006104)
        and r17.xy, r16.wwww, l(0x00007fff, 0x20000000, 0, 0)
        utof r15.w, r17.x
        mul r15.w, r15.w, cb2[27].w
        mul r15.w, r15.w, l(0.00003052)
        and r16.z, r15.y, l(3)
        iadd r16.z, r16.z, r16.y
        iadd r16.z, r16.z, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.z, r16.z, l(0), t23.xxxx
        bfi r17.xzw, l(2, 0, 2, 1), l(3, 0, 1, 4), r15.xxyz, l(0, 0, 0, 0)
        ushr r15.x, r16.z, r17.x
        and r15.x, r15.x, l(255)
        utof r15.x, r15.x
        mul r15.x, r15.w, r15.x
        mad r15.x, r15.x, l(0.00392157), r13.y
        iadd r15.y, r17.z, l(1)
        ubfe r15.z, l(1), l(1), r15.z
        iadd r15.y, r15.z, r15.y
        iadd r15.y, r15.y, r16.y
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.y, r15.y, l(0), t23.xxxx
        ushr r15.y, r15.y, r17.w
        and r15.y, r15.y, l(0x0000ffff)
        utof r15.y, r15.y
        mul r15.y, r15.w, r15.y
        mad r13.y, r15.y, l(0.00001526), r13.y
        movc r16.x, r17.y, r15.x, r13.y
      else 
        and r13.y, r16.w, l(0x80000000)
        iadd r15.x, r16.y, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.x, r15.x, l(0), t23.xxxx
        movc r13.y, r13.y, r15.x, l(0)
        ishl r15.x, r16.w, l(2)
        ushr r15.y, r13.y, l(16)
        f16tof32 r15.y, r15.y
        and r13.y, r13.y, l(0x0000ffff)
        f16tof32 r13.y, r13.y
        mad r15.x, r10.y, r15.y, r15.x
        mad r13.y, r10.z, r13.y, r15.x
        movc r16.x, r11.w, r13.y, r16.x
      endif 
    endif 
    mad r10.w, -cb2[27].z, l(2.000000), r10.w
    lt r10.w, r16.x, r10.w
    movc r6.w, r10.w, l(0), l(1.000000)
  endif 
  if_z r9.w
    if_z cb2[58].y
      ftou r9.w, r7.w
      add r15.xy, r10.yzyy, -cb2[r9.w + 20].xyxx
      mul r15.xy, r15.xyxx, cb2[r9.w + 20].zzzz
      mad r15.xy, r15.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r9.w, cb2[26].y
      add r15.z, r7.w, r9.w
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r9.w, r15.xyzx, t13.xxxx, s13, r4.w
      sample_l_indexable(texture2darray)(float,float,float,float) r10.w, r15.xyzx, t31.yzwx, s0, l(0.000000)
      add r9.w, r9.w, r10.w
      add_sat r9.w, r9.w, l(-1.000000)
      mul r10.w, r9.w, r9.w
      mul r6.w, r9.w, r10.w
    endif 
    if_nz cb2[58].y
      mov r15.x, -r8.x
      ftou r9.w, r7.w
      add r7.w, r7.w, l(1.000000)
      min r7.w, r7.w, l(2.000000)
      ftou r7.w, r7.w
      add r8.z, -r8.z, l(1.000000)
      mul r8.z, r8.z, l(28.000000)
      ftou r8.z, r8.z
      add r16.xy, r10.yzyy, -cb2[r9.w + 20].xyxx
      mul r16.xy, r16.xyxx, cb2[r9.w + 20].zzzz
      mad r16.xy, r16.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      add r10.yz, r10.yyzy, -cb2[r7.w + 20].xxyx
      mul r10.yz, r10.yyzy, cb2[r7.w + 20].zzzz
      mad r10.yz, r10.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      mov r15.y, r9.x
      mov r15.z, r8.x
      mov r10.w, l(0)
      mov r11.w, l(0)
      loop 
        uge r13.y, r11.w, l(8)
        breakc_nz r13.y
        ult r13.y, r8.z, r11.w
        movc r16.zw, r13.yyyy, r10.yyyz, r16.xxxy
        movc r15.w, r13.y, cb2[r7.w + 20].w, cb2[r9.w + 20].w
        movc r13.y, r13.y, r7.w, r9.w
        dp2 r17.x, icb[r11.w + 0].yxyy, r15.xyxx
        dp2 r17.y, icb[r11.w + 0].yxyy, r15.yzyy
        mad r17.xy, r17.xyxx, r15.wwww, r16.zwzz
        iadd r13.y, r13.y, cb2[26].y
        utof r17.z, r13.y
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r13.y, r17.xyzx, t13.xxxx, s13, r4.w
        sample_l_indexable(texture2darray)(float,float,float,float) r15.w, r17.xyzx, t31.yzwx, s0, l(0.000000)
        add r13.y, r13.y, r15.w
        add_sat r13.y, r13.y, l(-1.000000)
        mad r10.w, r13.y, l(0.125000), r10.w
        iadd r11.w, r11.w, l(1)
      endloop 
      mul r4.w, r10.w, r10.w
      mul r6.w, r10.w, r4.w
    endif 
  endif 
endif 
lt r4.w, l(0.000000), |r3.w|
if_nz r4.w
  lt r4.w, l(0.000000), r6.w
  if_nz r4.w
    mul r4.w, r2.y, cb2[18].w
    mul r4.w, r4.w, l(0.250000)
    if_nz cb2[23].x
      mov r5.w, l(1.000000)
      dp4 r7.w, cb2[24].xyzw, r5.xyzw
      dp4 r5.x, cb2[25].xyzw, r5.xyzw
      frc r15.x, r7.w
      frc r15.y, r5.x
      iadd r5.x, l(-1), cb2[23].x
      utof r15.z, r5.x
      sample_l_indexable(texture2darray)(float,float,float,float) r5.xyz, r15.xyzx, t20.xyzw, s2, l(0.000000)
      add r5.xyz, r5.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
      mad r5.xyz, cb2[23].yyyy, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      mul r5.xyz, r5.xyzx, cb2[18].xyzx
    else 
      mov r5.xyz, cb2[18].xyzx
    endif 
    ushr r5.w, cb2[53].x, l(16)
    ult r7.w, l(0), r5.w
    and r7.w, r1.w, r7.w
    if_nz r7.w
      iadd r5.w, r5.w, cb2[0].x
      iadd r5.w, r5.w, l(-1)
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r7.w, r5.w, l(52), t12.xxxx
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r5.w, l(68), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r5.w, l(84), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r5.w, l(132), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r5.w, l(148), t12.xyzw
      mad r8.z, |r3.w|, l(-0.200000), l(0.400000)
      lt r9.w, r3.w, l(0.000000)
      movc r8.z, r9.w, -r8.z, r8.z
      mad r19.xyz, r3.xyzx, r8.zzzz, v7.xyzx
      mov r19.w, l(1.000000)
      dp4 r15.x, r15.xyzw, r19.xyzw
      dp4 r15.y, r16.xyzw, r19.xyzw
      mad r10.yz, r15.xxyx, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      add r10.yz, r18.zzwz, r10.yyzy
      mul r10.yz, r18.xxyx, r10.yyzy
      div r15.xy, r7.wwww, r17.xzxx
      add r15.zw, -r15.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
      ge r15.zw, r10.yyyz, r15.zzzw
      ge r15.xy, r15.xyxx, r10.yzyy
      or r15.xy, r15.xyxx, r15.zwzz
      or r8.z, r15.y, r15.x
      if_z r8.z
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r8.z, r5.w, l(28), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r5.w, l(100), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xy, r5.w, l(164), t12.xyxx
        dp4 r5.w, r15.xyzw, r19.xyzw
        mov_sat r10.yz, r10.yyzy
        mad r15.xy, r10.yzyy, r17.xzxx, r17.ywyy
        add r5.w, r16.x, r5.w
        div r5.w, r5.w, r16.y
        max r5.w, r5.w, l(0.00006104)
        and r8.z, r8.z, l(0x0000ffff)
        if_nz cb2[58].y
          mov r16.x, -r8.x
          utof r17.z, r8.z
          mov r16.y, r9.x
          mov r16.z, r8.x
          mov r9.w, l(0)
          mov r10.y, l(0)
          loop 
            ige r10.z, r10.y, l(8)
            breakc_nz r10.z
            dp2 r18.x, icb[r10.y + 0].yxyy, r16.xyxx
            dp2 r18.y, icb[r10.y + 0].yxyy, r16.yzyy
            mad r17.xy, r18.xyxx, r7.wwww, r15.xyxx
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.z, r17.xyzx, t9.xxxx, s13, r5.w
            mad r9.w, r10.z, l(0.125000), r9.w
            iadd r10.y, r10.y, l(1)
          endloop 
        else 
          utof r15.z, r8.z
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r9.w, r15.xyzx, t9.xxxx, s13, r5.w
        endif 
        mul r5.w, r9.w, r9.w
        mul r5.w, r9.w, r5.w
      else 
        mov r5.w, l(1.000000)
      endif 
      mul r6.w, r5.w, r6.w
    else 
      and r5.w, cb2[53].x, l(0x0000ffff)
      ult r7.w, l(0), r5.w
      not r8.z, r1.w
      and r7.w, r7.w, r8.z
      if_nz r7.w
        iadd r5.w, r5.w, cb2[0].x
        iadd r5.w, r5.w, l(-1)
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r7.w, r5.w, l(52), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r5.w, l(68), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r5.w, l(84), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r5.w, l(132), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r5.w, l(148), t12.xyzw
        mad r8.z, |r3.w|, l(-0.200000), l(0.400000)
        lt r9.w, r3.w, l(0.000000)
        movc r8.z, r9.w, -r8.z, r8.z
        mad r19.xyz, r3.xyzx, r8.zzzz, v7.xyzx
        mov r19.w, l(1.000000)
        dp4 r15.x, r15.xyzw, r19.xyzw
        dp4 r15.y, r16.xyzw, r19.xyzw
        mad r10.yz, r15.xxyx, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
        add r10.yz, r18.zzwz, r10.yyzy
        mul r10.yz, r18.xxyx, r10.yyzy
        div r15.xy, r7.wwww, r17.xzxx
        add r15.zw, -r15.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
        ge r15.zw, r10.yyyz, r15.zzzw
        ge r15.xy, r15.xyxx, r10.yzyy
        or r15.xy, r15.xyxx, r15.zwzz
        or r8.z, r15.y, r15.x
        if_z r8.z
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r8.z, r5.w, l(28), t12.xxxx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r5.w, l(100), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xy, r5.w, l(164), t12.xyxx
          dp4 r5.w, r15.xyzw, r19.xyzw
          mov_sat r10.yz, r10.yyzy
          mad r15.xy, r10.yzyy, r17.xzxx, r17.ywyy
          add r5.w, r16.x, r5.w
          div r5.w, r5.w, r16.y
          max r5.w, r5.w, l(0.00006104)
          and r8.z, r8.z, l(0x0000ffff)
          if_nz cb2[58].y
            mov r16.x, -r8.x
            utof r17.z, r8.z
            mov r16.y, r9.x
            mov r16.z, r8.x
            mov r9.w, l(0)
            mov r10.y, l(0)
            loop 
              ige r10.z, r10.y, l(8)
              breakc_nz r10.z
              dp2 r18.x, icb[r10.y + 0].yxyy, r16.xyxx
              dp2 r18.y, icb[r10.y + 0].yxyy, r16.yzyy
              mad r17.xy, r18.xyxx, r7.wwww, r15.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.z, r17.xyzx, t9.xxxx, s13, r5.w
              mad r9.w, r10.z, l(0.125000), r9.w
              iadd r10.y, r10.y, l(1)
            endloop 
          else 
            utof r15.z, r8.z
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r9.w, r15.xyzx, t9.xxxx, s13, r5.w
          endif 
          mul r5.w, r9.w, r9.w
          mul r5.w, r9.w, r5.w
        else 
          mov r5.w, l(1.000000)
        endif 
        mul r6.w, r5.w, r6.w
      endif 
    endif 
    mad r5.w, -r1.x, l(0.500000), l(1.000000)
    mad r5.w, -|r3.w|, r5.w, l(1.000000)
    mul r5.w, r5.w, r5.w
    mad r5.w, -r5.w, l(0.620000), l(0.620000)
    add r5.w, -|r3.w|, r5.w
    mad r5.w, r2.z, r5.w, |r3.w|
    mul r5.w, r6.w, r5.w
    lt r7.w, l(0.000000), r3.w
    mad r15.xyz, r5.wwww, r5.yzxy, r12.xyzx
    mov_sat r3.w, r3.w
    mad r10.yzw, -v7.xxyz, r1.zzzz, cb2[17].xxyz
    dp3 r1.z, r10.yzwy, r10.yzwy
    rsq r1.z, r1.z
    mul r10.yzw, r1.zzzz, r10.yyzw
    dp3 r1.z, r10.yzwy, r7.xyzx
    dp3 r5.w, r3.xyzx, r10.yzwy
    mad r8.z, |r5.w|, r2.y, -|r5.w|
    mad r5.w, |r5.w|, r8.z, l(1.000000)
    mad r8.z, r3.w, r1.y, r2.w
    mul r5.w, r5.w, r5.w
    mul r5.w, r8.z, r5.w
    rcp r5.w, r5.w
    mul r3.w, r4.w, r3.w
    mul r3.w, r3.w, r5.w
    mul r3.w, r6.w, r3.w
    mad r16.yzw, r3.wwww, r5.xxyz, r14.xxyz
    add_sat r1.z, -r1.z, l(1.000000)
    log r1.z, r1.z
    mul r1.z, r1.z, l(3.400000)
    exp r1.z, r1.z
    mul r1.z, r1.z, r3.w
    mad r5.xyz, r1.zzzz, r5.xyzx, r13.xzwx
    mov r15.w, r12.z
    mov r12.w, r15.z
    movc r17.xyzw, r7.wwww, r15.zxyw, r12.zxyw
    mov r12.zw, r5.xxxy
    mov r15.zw, r13.xxxz
    movc r15.xyzw, r7.wwww, r12.xyzw, r15.xyzw
    mov r16.x, r5.z
    mov r14.w, r13.w
    movc r14.xyzw, r7.wwww, r16.yzwx, r14.xyzw
    mov r12.z, r17.w
    mov r12.xy, r15.xyxx
    mov r13.xz, r15.zzwz
    mov r13.w, r14.w
  else 
    mov r17.xyz, r12.zxyz
  endif 
else 
  mov r17.xyz, r12.zxyz
endif 
not r1.z, r1.w
mad r1.x, -r1.x, l(0.500000), l(1.000000)
mov r5.x, -r8.x
mov r15.xy, l(0,0,0,0)
mov r16.w, l(0)
mov r18.xyz, v7.xyzx
mov r18.w, l(1.000000)
mov r19.w, l(1.000000)
mov r5.z, r8.x
mov r20.w, l(1.000000)
mov r21.z, l(1.000000)
mov r22.w, l(1.000000)
mov r5.yw, r9.xxxx
mov r8.y, r5.w
mov r23.w, l(1.000000)
mov r9.y, r5.x
mov r9.z, r8.x
mov r24.w, l(1.000000)
mov r25.x, r9.x
mov r25.y, r5.x
mov r25.z, r8.x
mov r26.x, r9.x
mov r26.y, r5.x
mov r26.z, r8.x
mov r27.x, r9.x
mov r27.y, r5.x
mov r27.z, r8.x
mov r10.yzw, r17.xxyz
mov r28.xyz, r12.zxyz
mov r29.xyz, r13.xzwx
mov r30.xyz, r14.xyzx
mov r3.w, cb2[58].y
mov r4.w, l(0)
loop 
  uge r6.w, r4.w, cb2[0].x
  breakc_nz r6.w
  ushr r15.z, r4.w, l(5)
  iadd r16.xyz, r6.xyzx, r15.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r6.w, r16.xyzw, t6.yzwx
  mov r16.xyz, r10.yzwy
  mov r31.xyz, r28.xyzx
  mov r32.xyz, r29.xyzx
  mov r33.xyz, r30.xyzx
  mov r7.w, r3.w
  mov r8.z, r6.w
  loop 
    breakc_z r8.z
    firstbit_lo r9.w, r8.z
    ishl r11.w, l(1), r9.w
    and r12.w, r8.z, r11.w
    if_nz r12.w
      xor r8.z, r8.z, r11.w
      iadd r9.w, r4.w, r9.w
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r34.xyzw, r9.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r35.xy, r9.w, l(16), t11.xyxx
      add r34.xyz, r34.xyzx, -v7.xyzx
      mov r35.z, r34.w
      lt r34.xyz, |r34.xyzx|, r35.zxyz
      and r11.w, r34.y, r34.x
      and r11.w, r34.z, r11.w
      if_nz r11.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r9.w, l(0), t12.wxyz
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r9.w, l(16), t12.zxyw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r9.w, l(32), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r9.w, l(48), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r9.w, l(64), t12.yzwx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r9.w, l(80), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r9.w, l(96), t12.yzwx
        ubfe r11.w, l(3), l(24), r35.w
        switch r11.w
          case l(4)
          lt r11.w, l(0.000000), r40.x
          mov r41.xy, r39.zwzz
          mov r41.z, r40.w
          mad r42.xyz, -r41.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r34.yzwy
          add r43.xyz, r42.xyzx, -v7.xyzx
          dp3 r12.w, r41.xyzx, r43.xyzx
          div_sat r13.y, -r12.w, r40.x
          mad r44.xyz, r13.yyyy, r41.xyzx, r42.xyzx
          movc r44.xyz, r11.wwww, r44.xyzx, r34.yzwy
          add r44.xyz, r44.xyzx, -v7.xyzx
          dp3 r14.w, r44.xyzx, r44.xyzx
          rsq r15.z, r14.w
          mul r44.xyz, r15.zzzz, r44.xyzx
          dp3 r15.z, r3.xyzx, r44.xyzx
          lt r15.w, l(0.000000), |r15.z|
          if_nz r15.w
            sqrt r15.w, r14.w
            mul r17.w, r37.x, r37.x
            div r14.w, r17.w, r14.w
            min r14.w, r14.w, l(1.000000)
            mad_sat r44.xy, r15.wwww, r36.xzxx, r36.ywyy
            mul r44.zw, r44.xxxy, r44.xxxy
            mad r44.xy, r44.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
            mul r44.xy, r44.xyxx, r44.zwzz
            mul r14.w, r14.w, r44.x
            mul r14.w, r44.y, r14.w
            lt r15.w, l(0.000000), r14.w
            if_nz r15.w
              ubfe r15.w, l(3), l(27), r35.w
              ine r15.w, r15.w, l(1)
              if_nz r15.w
                mad r15.w, |r15.z|, l(-0.200000), l(0.400000)
                lt r17.w, r15.z, l(0.000000)
                movc r15.w, r17.w, -r15.w, r15.w
                mad r44.xyz, r3.xyzx, r15.wwww, v7.xyzx
                add r44.xyz, -r38.xyzx, r44.xyzx
                max r15.w, |r44.z|, |r44.y|
                max r15.w, r15.w, |r44.x|
                div r15.w, r39.x, r15.w
                add r15.w, r39.y, r15.w
                dp3 r17.w, r44.xyzx, r44.xyzx
                rsq r17.w, r17.w
                max r15.w, r15.w, l(0.00006104)
                and r21.w, r35.w, l(0x0000ffff)
                utof r45.w, r21.w
                mov r21.w, l(0)
                mov r25.w, l(0)
                loop 
                  ige r26.w, r25.w, l(8)
                  breakc_nz r26.w
                  dp2 r46.y, icb[r25.w + 0].yxyy, r5.xyxx
                  dp2 r46.z, icb[r25.w + 0].yxyy, r5.yzyy
                  mul r46.yz, r37.yyyy, r46.yyzy
                  mul r46.x, r10.x, r46.y
                  mul r46.w, r2.x, r46.y
                  mad r45.xyz, r44.xyzx, r17.wwww, r46.xzwx
                  sample_c_lz_indexable(texturecubearray)(float,float,float,float) r26.w, r45.xyzw, t10.xxxx, s13, r15.w
                  mad r21.w, r26.w, l(0.125000), r21.w
                  iadd r25.w, r25.w, l(1)
                endloop 
              else 
                mov r21.w, l(1.000000)
              endif 
              mul r14.w, r14.w, r21.w
              lt r15.w, l(0.000000), r14.w
              if_nz r15.w
                mul r15.w, r2.y, r35.x
                mul r15.w, r15.w, l(0.250000)
                dp3 r17.w, r41.xyzx, r11.xyzx
                dp3 r25.w, r11.xyzx, r43.xyzx
                mad r26.w, -r17.w, r17.w, r40.x
                mad r12.w, r17.w, r25.w, -r12.w
                div_sat r12.w, r12.w, r26.w
                div r17.w, r26.w, r40.x
                mul r17.w, r17.w, l(10.000000)
                min r17.w, r17.w, l(1.000000)
                add r12.w, -r13.y, r12.w
                mad r12.w, r17.w, r12.w, r13.y
                mad r41.xyz, r12.wwww, r41.xyzx, r42.xyzx
                movc r41.xyz, r11.wwww, r41.xyzx, r34.yzwy
                add r41.xyz, r41.xyzx, -v7.xyzx
                dp3 r11.w, r41.xyzx, r41.xyzx
                rsq r11.w, r11.w
                mul r42.xyz, r11.wwww, r41.xyzx
                ubfe r12.w, l(4), l(16), r35.w
                ult r13.y, l(0), r12.w
                and r13.y, r1.w, r13.y
                if_nz r13.y
                  iadd r12.w, r12.w, cb2[0].x
                  iadd r12.w, r12.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.y, r12.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r12.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r12.w, l(116), t12.xyzw
                  mad r17.w, |r15.z|, l(-0.200000), l(0.400000)
                  lt r25.w, r15.z, l(0.000000)
                  movc r17.w, r25.w, -r17.w, r17.w
                  mad r19.xyz, r3.xyzx, r17.wwww, v7.xyzx
                  dp4 r17.w, r43.xyzw, r19.xyzw
                  dp4 r25.w, r44.xyzw, r19.xyzw
                  lt r26.w, r25.w, r17.w
                  if_z r26.w
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r12.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r12.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xyzw, r12.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r46.xyzw, r12.w, l(148), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r47.xy, r12.w, l(164), t12.xyxx
                    dp4 r43.x, r43.xyzw, r19.xyzw
                    dp4 r43.y, r44.xyzw, r19.xyzw
                    div r19.xy, r43.xyxx, r25.wwww
                    mad r19.xy, r19.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r19.xy, r46.zwzz, r19.xyxx
                    mul r19.xy, r46.xyxx, r19.xyxx
                    div r43.xy, r13.yyyy, r45.xzxx
                    add r43.zw, -r43.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                    ge r43.zw, r19.xxxy, r43.zzzw
                    ge r43.xy, r43.xyxx, r19.xyxx
                    or r43.xy, r43.xyxx, r43.zwzz
                    or r19.z, r43.y, r43.x
                    mov_sat r19.xy, r19.xyxx
                    mad r43.xy, r19.xyxx, r45.xzxx, r45.ywyy
                    mul r19.x, r25.w, r47.y
                    mad r17.w, r47.x, r25.w, r17.w
                    div r17.w, r17.w, r19.x
                  else 
                    mov r19.z, l(-1)
                  endif 
                  or r19.x, r26.w, r19.z
                  if_z r19.x
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.w, r12.w, l(28), t12.xxxx
                    max r17.w, r17.w, l(0.00006104)
                    and r12.w, r12.w, l(0x0000ffff)
                    if_nz r7.w
                      utof r19.z, r12.w
                      mov r25.w, l(0)
                      mov r26.w, l(0)
                      loop 
                        ige r27.w, r26.w, l(8)
                        breakc_nz r27.w
                        dp2 r44.x, icb[r26.w + 0].yxyy, r5.xwxx
                        dp2 r44.y, icb[r26.w + 0].xyxx, r8.xyxx
                        mad r19.xy, r44.xyxx, r13.yyyy, r43.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.x, r19.xyzx, t9.xxxx, s13, r17.w
                        mad r25.w, r19.x, l(0.125000), r25.w
                        iadd r26.w, r26.w, l(1)
                      endloop 
                    else 
                      utof r43.z, r12.w
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r25.w, r43.xyzx, t9.xxxx, s13, r17.w
                    endif 
                    mul r12.w, r25.w, r25.w
                    mul r12.w, r25.w, r12.w
                  else 
                    mov r12.w, l(1.000000)
                  endif 
                  mul r14.w, r12.w, r14.w
                else 
                  ubfe r12.w, l(4), l(20), r35.w
                  ult r13.y, l(0), r12.w
                  and r13.y, r1.z, r13.y
                  if_nz r13.y
                    iadd r12.w, r12.w, cb2[0].x
                    iadd r12.w, r12.w, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.y, r12.w, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r12.w, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r12.w, l(116), t12.xyzw
                    mad r17.w, |r15.z|, l(-0.200000), l(0.400000)
                    lt r19.x, r15.z, l(0.000000)
                    movc r17.w, r19.x, -r17.w, r17.w
                    mad r20.xyz, r3.xyzx, r17.wwww, v7.xyzx
                    dp4 r17.w, r43.xyzw, r20.xyzw
                    dp4 r19.x, r44.xyzw, r20.xyzw
                    lt r19.y, r19.x, r17.w
                    if_z r19.y
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r12.w, l(68), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r12.w, l(84), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xyzw, r12.w, l(132), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r46.xyzw, r12.w, l(148), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r47.xy, r12.w, l(164), t12.xyxx
                      dp4 r43.x, r43.xyzw, r20.xyzw
                      dp4 r43.y, r44.xyzw, r20.xyzw
                      div r20.xy, r43.xyxx, r19.xxxx
                      mad r20.xy, r20.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                      add r20.xy, r46.zwzz, r20.xyxx
                      mul r20.xy, r46.xyxx, r20.xyxx
                      div r43.xy, r13.yyyy, r45.xzxx
                      add r43.zw, -r43.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                      ge r43.zw, r20.xxxy, r43.zzzw
                      ge r43.xy, r43.xyxx, r20.xyxx
                      or r43.xy, r43.xyxx, r43.zwzz
                      or r19.z, r43.y, r43.x
                      mov_sat r20.xy, r20.xyxx
                      mad r20.xy, r20.xyxx, r45.xzxx, r45.ywyy
                      mul r26.w, r19.x, r47.y
                      mad r17.w, r47.x, r19.x, r17.w
                      div r17.w, r17.w, r26.w
                    else 
                      mov r19.z, l(-1)
                    endif 
                    or r19.x, r19.y, r19.z
                    if_z r19.x
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.w, r12.w, l(28), t12.xxxx
                      max r17.w, r17.w, l(0.00006104)
                      and r12.w, r12.w, l(0x0000ffff)
                      if_nz r7.w
                        utof r19.z, r12.w
                        mov r26.w, l(0)
                        mov r27.w, l(0)
                        loop 
                          ige r28.w, r27.w, l(8)
                          breakc_nz r28.w
                          dp2 r43.x, icb[r27.w + 0].xyxx, r9.xyxx
                          dp2 r43.y, icb[r27.w + 0].yxyy, r9.xzxx
                          mad r19.xy, r43.xyxx, r13.yyyy, r20.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.x, r19.xyzx, t9.xxxx, s13, r17.w
                          mad r26.w, r19.x, l(0.125000), r26.w
                          iadd r27.w, r27.w, l(1)
                        endloop 
                      else 
                        utof r20.z, r12.w
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r26.w, r20.xyzx, t9.xxxx, s13, r17.w
                      endif 
                      mul r12.w, r26.w, r26.w
                      mul r12.w, r26.w, r12.w
                    else 
                      mov r12.w, l(1.000000)
                    endif 
                    mul r14.w, r12.w, r14.w
                  endif 
                endif 
                mad r12.w, -|r15.z|, r1.x, l(1.000000)
                mul r12.w, r12.w, r12.w
                mad r12.w, -r12.w, l(0.620000), l(0.620000)
                add r12.w, -|r15.z|, r12.w
                mad r12.w, r2.z, r12.w, |r15.z|
                mul r12.w, r14.w, r12.w
                mov r35.x, r34.x
                lt r13.y, l(0.000000), r15.z
                mad r19.xyz, r12.wwww, r35.xyzx, r16.xyzx
                dp3_sat r15.z, r3.xyzx, r42.xyzx
                mad r20.xyz, r41.xyzx, r11.wwww, r7.xyzx
                dp3 r11.w, r20.xyzx, r20.xyzx
                rsq r11.w, r11.w
                mul r20.xyz, r11.wwww, r20.xyzx
                dp3 r11.w, r20.xyzx, r7.xyzx
                dp3 r17.w, r3.xyzx, r20.xyzx
                mad r20.x, |r17.w|, r2.y, -|r17.w|
                mad r17.w, |r17.w|, r20.x, l(1.000000)
                mad r20.x, r15.z, r1.y, r2.w
                mul r17.w, r17.w, r17.w
                mul r17.w, r20.x, r17.w
                rcp r17.w, r17.w
                mul r15.z, r15.w, r15.z
                mul r15.z, r15.z, r17.w
                mul r14.w, r14.w, r15.z
                mad r20.xyz, r14.wwww, r35.xyzx, r33.xyzx
                add_sat r11.w, -r11.w, l(1.000000)
                log r11.w, r11.w
                mul r11.w, r11.w, l(3.400000)
                exp r11.w, r11.w
                mul r11.w, r11.w, r14.w
                mad r41.xyz, r11.wwww, r35.xyzx, r32.xyzx
                mad r42.xyz, r12.wwww, r35.xyzx, r31.xyzx
                movc r16.xyz, r13.yyyy, r19.xyzx, r16.xyzx
                movc r31.xyz, r13.yyyy, r31.xyzx, r42.xyzx
                movc r32.xyz, r13.yyyy, r41.xyzx, r32.xyzx
                movc r33.xyz, r13.yyyy, r20.xyzx, r33.xyzx
              endif 
            endif 
          endif 
          break 
          case l(2)
          mov r19.xy, r37.zwzz
          mov r19.z, r38.w
          add r19.xyz, r19.xyzx, -v7.xyzx
          dp3 r11.w, r19.xyzx, r19.xyzx
          rsq r11.w, r11.w
          mul r20.xyz, r11.wwww, r19.xyzx
          dp3 r12.w, r3.xyzx, r20.xyzx
          lt r13.y, l(0.000000), |r12.w|
          if_nz r13.y
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r9.w, l(112), t12.yzwx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r9.w, l(128), t12.zxyw
            mov r43.xyz, r41.xyzx
            mov r43.w, r42.y
            dp4 r13.y, r43.xyzw, r18.xyzw
            lt r14.w, r13.y, l(1.000000)
            if_nz r14.w
              mov r20.xyz, l(1.000000,1.000000,1.000000,0)
              mov r14.w, l(0)
            else 
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r9.w, l(172), t12.yzwx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xyzw, r9.w, l(188), t12.wxyz
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r46.xyzw, r9.w, l(204), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.z, r9.w, l(236), t12.xxxx
              add r47.xyz, r34.yzwy, -v7.xyzx
              mul r15.w, r37.x, r37.x
              dp3 r17.w, r47.xyzx, r47.xyzx
              div r15.w, r15.w, r17.w
              min r15.w, r15.w, l(1.000000)
              mad_sat r36.xy, r13.yyyy, r36.xzxx, r36.ywyy
              mul r36.zw, r36.xxxy, r36.xxxy
              mad r36.xy, r36.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
              mul r36.xy, r36.xyxx, r36.zwzz
              mul r15.w, r15.w, r36.x
              mul r15.w, r36.y, r15.w
              mov r38.w, r39.x
              dp4 r36.x, r38.xyzw, r18.xyzw
              mov r47.xyz, r39.yzwy
              mov r47.w, r40.w
              dp4 r36.y, r47.xyzw, r18.xyzw
              div r21.xy, r36.xyxx, r13.yyyy
              lt r13.y, r44.w, l(0.00048828)
              if_nz r13.y
                mov r45.y, r46.x
                mad_sat r36.xy, |r21.xyxx|, r45.zwzz, r45.xyxx
                mul r36.zw, r36.xxxy, r36.xxxy
                mad r36.xy, r36.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
                mul r36.xy, r36.xyxx, r36.zwzz
                mul r13.y, r36.y, r36.x
              else 
                mov r44.w, r45.y
                mul_sat r36.xyzw, |r21.yyxx|, r44.xyzw
                log r36.xyzw, r36.xyzw
                mul r36.xyzw, r36.xyzw, r45.xxxx
                exp r36.xyzw, r36.xyzw
                add r36.xy, r36.zwzz, r36.xyxx
                log r36.xy, r36.xyxx
                mul r36.xy, r36.xyxx, r46.xxxx
                exp r36.xy, r36.xyxx
                mul r17.w, r36.x, r45.z
                mad r27.w, r45.w, r36.y, l(-1.000000)
                mad r17.w, r45.w, r36.y, -r17.w
                div_sat r17.w, r27.w, r17.w
                mul r27.w, r17.w, r17.w
                mad r17.w, r17.w, l(-2.000000), l(3.000000)
                mul r13.y, r17.w, r27.w
              endif 
              mul r14.w, r13.y, r15.w
              and r13.y, r15.z, l(255)
              if_nz r13.y
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyz, r9.w, l(220), t12.xyzx
                dp3 r15.z, r46.yzwy, r21.xyzx
                dp3 r15.w, r36.xyzx, r21.xyzx
                frc r36.xy, r15.zwzz
                iadd r13.y, r13.y, l(-1)
                utof r36.z, r13.y
                sample_l_indexable(texture2darray)(float,float,float,float) r20.xyz, r36.xyzx, t20.xyzw, s2, l(0.000000)
              else 
                mov r20.xyz, l(1.000000,1.000000,1.000000,0)
              endif 
            endif 
            mov r34.yz, r35.yyzy
            mul r20.xyz, r20.xyzx, r34.xyzx
            lt r13.y, l(0.000000), r14.w
            if_nz r13.y
              ubfe r13.y, l(3), l(27), r35.w
              ine r13.y, r13.y, l(1)
              if_nz r13.y
                mad r13.y, |r12.w|, l(-0.200000), l(0.400000)
                lt r15.z, r12.w, l(0.000000)
                movc r13.y, r15.z, -r13.y, r13.y
                mad r22.xyz, r3.xyzx, r13.yyyy, v7.xyzx
                mov r41.xyz, r40.xyzx
                dp4 r13.y, r41.xyzw, r22.xyzw
                dp4 r15.z, r43.xyzw, r22.xyzw
                ge r15.w, r15.z, r13.y
                if_nz r15.w
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.y, r9.w, l(144), t12.xxxx
                  mov r38.w, r39.x
                  dp4 r21.x, r38.xyzw, r22.xyzw
                  mov r40.xyz, r39.yzwy
                  dp4 r21.y, r40.xyzw, r22.xyzw
                  div r21.xy, r21.xyxx, r15.zzzz
                  mad_sat r21.xy, r21.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  mad r22.xy, r21.xyxx, r42.zwzz, r42.xyxx
                  div r9.w, r13.y, r15.z
                  max r9.w, r9.w, l(0.00006104)
                  and r13.y, r35.w, l(0x0000ffff)
                  if_nz r7.w
                    utof r34.z, r13.y
                    mov r15.zw, l(0,0,0,0)
                    loop 
                      ige r17.w, r15.w, l(8)
                      breakc_nz r17.w
                      dp2 r21.x, icb[r15.w + 0].xyxx, r25.xyxx
                      dp2 r21.y, icb[r15.w + 0].yxyy, r25.xzxx
                      mad r34.xy, r21.xyxx, r37.yyyy, r22.xyxx
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r17.w, r34.xyzx, t9.xxxx, s13, r9.w
                      mad r15.z, r17.w, l(0.125000), r15.z
                      iadd r15.w, r15.w, l(1)
                    endloop 
                  else 
                    utof r22.z, r13.y
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r15.z, r22.xyzx, t9.xxxx, s13, r9.w
                  endif 
                  mul r9.w, r15.z, r15.z
                  mul r9.w, r15.z, r9.w
                else 
                  mov r9.w, l(1.000000)
                endif 
              else 
                mov r9.w, l(1.000000)
              endif 
              mul r9.w, r9.w, r14.w
              lt r13.y, l(0.000000), r9.w
              if_nz r13.y
                mul r13.y, r2.y, r35.x
                mul r13.y, r13.y, l(0.250000)
                ubfe r14.w, l(4), l(16), r35.w
                ult r15.w, l(0), r14.w
                and r15.w, r1.w, r15.w
                if_nz r15.w
                  iadd r14.w, r14.w, cb2[0].x
                  iadd r14.w, r14.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.w, r14.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r14.w, l(68), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r14.w, l(84), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r14.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r14.w, l(116), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r14.w, l(132), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r14.w, l(148), t12.xyzw
                  mad r17.w, |r12.w|, l(-0.200000), l(0.400000)
                  lt r21.x, r12.w, l(0.000000)
                  movc r17.w, r21.x, -r17.w, r17.w
                  mad r23.xyz, r3.xyzx, r17.wwww, v7.xyzx
                  dp4 r21.x, r34.xyzw, r23.xyzw
                  dp4 r21.y, r36.xyzw, r23.xyzw
                  dp4 r17.w, r37.xyzw, r23.xyzw
                  dp4 r22.x, r38.xyzw, r23.xyzw
                  lt r22.y, r22.x, r17.w
                  div r21.xy, r21.xyxx, r22.xxxx
                  mad r21.xy, r21.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r21.xy, r40.zwzz, r21.xyxx
                  mul r21.xy, r40.xyxx, r21.xyxx
                  div r23.xy, r15.wwww, r39.xzxx
                  add r34.xy, -r23.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                  ge r34.xy, r21.xyxx, r34.xyxx
                  ge r23.xy, r23.xyxx, r21.xyxx
                  or r23.xy, r23.xyxx, r34.xyxx
                  or r22.z, r23.y, r23.x
                  or r22.y, r22.y, r22.z
                  if_z r22.y
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r22.y, r14.w, l(28), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.xy, r14.w, l(164), t12.xyxx
                    mov_sat r21.xy, r21.xyxx
                    mad r34.xy, r21.xyxx, r39.xzxx, r39.ywyy
                    mul r14.w, r22.x, r23.y
                    mad r17.w, r23.x, r22.x, r17.w
                    div r14.w, r17.w, r14.w
                    max r14.w, r14.w, l(0.00006104)
                    and r17.w, r22.y, l(0x0000ffff)
                    if_nz r7.w
                      utof r22.z, r17.w
                      mov r21.xy, l(0,0,0,0)
                      loop 
                        ige r23.x, r21.y, l(8)
                        breakc_nz r23.x
                        dp2 r23.x, icb[r21.y + 0].xyxx, r26.xyxx
                        dp2 r23.y, icb[r21.y + 0].yxyy, r26.xzxx
                        mad r22.xy, r23.xyxx, r15.wwww, r34.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.x, r22.xyzx, t9.xxxx, s13, r14.w
                        mad r21.x, r22.x, l(0.125000), r21.x
                        iadd r21.y, r21.y, l(1)
                      endloop 
                    else 
                      utof r34.z, r17.w
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.x, r34.xyzx, t9.xxxx, s13, r14.w
                    endif 
                    mul r14.w, r21.x, r21.x
                    mul r14.w, r21.x, r14.w
                  else 
                    mov r14.w, l(1.000000)
                  endif 
                  mul r9.w, r9.w, r14.w
                else 
                  ubfe r14.w, l(4), l(20), r35.w
                  ult r15.w, l(0), r14.w
                  and r15.w, r1.z, r15.w
                  if_nz r15.w
                    iadd r14.w, r14.w, cb2[0].x
                    iadd r14.w, r14.w, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.w, r14.w, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r14.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r14.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r14.w, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r14.w, l(116), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r14.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r14.w, l(148), t12.xyzw
                    mad r17.w, |r12.w|, l(-0.200000), l(0.400000)
                    lt r21.y, r12.w, l(0.000000)
                    movc r17.w, r21.y, -r17.w, r17.w
                    mad r24.xyz, r3.xyzx, r17.wwww, v7.xyzx
                    dp4 r22.x, r34.xyzw, r24.xyzw
                    dp4 r22.y, r35.xyzw, r24.xyzw
                    dp4 r17.w, r36.xyzw, r24.xyzw
                    dp4 r21.y, r37.xyzw, r24.xyzw
                    lt r22.z, r21.y, r17.w
                    div r22.xy, r22.xyxx, r21.yyyy
                    mad r22.xy, r22.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r22.xy, r39.zwzz, r22.xyxx
                    mul r22.xy, r39.xyxx, r22.xyxx
                    div r23.xy, r15.wwww, r38.xzxx
                    add r24.xy, -r23.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                    ge r24.xy, r22.xyxx, r24.xyxx
                    ge r23.xy, r23.xyxx, r22.xyxx
                    or r23.xy, r23.xyxx, r24.xyxx
                    or r23.x, r23.y, r23.x
                    or r22.z, r22.z, r23.x
                    if_z r22.z
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r22.z, r14.w, l(28), t12.xxxx
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.xy, r14.w, l(164), t12.xyxx
                      mov_sat r22.xy, r22.xyxx
                      mad r24.xy, r22.xyxx, r38.xzxx, r38.ywyy
                      mul r14.w, r21.y, r23.y
                      mad r17.w, r23.x, r21.y, r17.w
                      div r14.w, r17.w, r14.w
                      max r14.w, r14.w, l(0.00006104)
                      and r17.w, r22.z, l(0x0000ffff)
                      if_nz r7.w
                        utof r22.z, r17.w
                        mov r21.y, l(0)
                        mov r23.x, l(0)
                        loop 
                          ige r23.y, r23.x, l(8)
                          breakc_nz r23.y
                          dp2 r34.x, icb[r23.x + 0].xyxx, r27.xyxx
                          dp2 r34.y, icb[r23.x + 0].yxyy, r27.xzxx
                          mad r22.xy, r34.xyxx, r15.wwww, r24.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.x, r22.xyzx, t9.xxxx, s13, r14.w
                          mad r21.y, r22.x, l(0.125000), r21.y
                          iadd r23.x, r23.x, l(1)
                        endloop 
                      else 
                        utof r24.z, r17.w
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.y, r24.xyzx, t9.xxxx, s13, r14.w
                      endif 
                      mul r14.w, r21.y, r21.y
                      mul r14.w, r21.y, r14.w
                    else 
                      mov r14.w, l(1.000000)
                    endif 
                    mul r9.w, r9.w, r14.w
                  endif 
                endif 
                mad r14.w, -|r12.w|, r1.x, l(1.000000)
                mul r14.w, r14.w, r14.w
                mad r14.w, -r14.w, l(0.620000), l(0.620000)
                add r14.w, -|r12.w|, r14.w
                mad r14.w, r2.z, r14.w, |r12.w|
                mul r14.w, r9.w, r14.w
                lt r15.w, l(0.000000), r12.w
                mad r22.xyz, r14.wwww, r20.xyzx, r16.xyzx
                mov_sat r12.w, r12.w
                mad r19.xyz, r19.xyzx, r11.wwww, r7.xyzx
                dp3 r11.w, r19.xyzx, r19.xyzx
                rsq r11.w, r11.w
                mul r19.xyz, r11.wwww, r19.xyzx
                dp3 r11.w, r19.xyzx, r7.xyzx
                dp3 r17.w, r3.xyzx, r19.xyzx
                mad r19.x, |r17.w|, r2.y, -|r17.w|
                mad r17.w, |r17.w|, r19.x, l(1.000000)
                mad r19.x, r12.w, r1.y, r2.w
                mul r17.w, r17.w, r17.w
                mul r17.w, r19.x, r17.w
                rcp r17.w, r17.w
                mul r12.w, r13.y, r12.w
                mul r12.w, r12.w, r17.w
                mul r9.w, r9.w, r12.w
                mad r19.xyz, r9.wwww, r20.xyzx, r33.xyzx
                add_sat r11.w, -r11.w, l(1.000000)
                log r11.w, r11.w
                mul r11.w, r11.w, l(3.400000)
                exp r11.w, r11.w
                mul r9.w, r9.w, r11.w
                mad r23.xyz, r9.wwww, r20.xyzx, r32.xyzx
                mad r20.xyz, r14.wwww, r20.xyzx, r31.xyzx
                movc r16.xyz, r15.wwww, r22.xyzx, r16.xyzx
                movc r31.xyz, r15.wwww, r31.xyzx, r20.xyzx
                movc r32.xyz, r15.wwww, r23.xyzx, r32.xyzx
                movc r33.xyz, r15.wwww, r19.xyzx, r33.xyzx
              endif 
            endif 
          endif 
          break 
          default 
          break 
        endswitch 
      endif 
    endif 
  endloop 
  mov r10.yzw, r16.xxyz
  mov r28.xyz, r31.xyzx
  mov r29.xyz, r32.xyzx
  mov r30.xyz, r33.xyzx
  iadd r4.w, r4.w, l(32)
endloop 
log r1.x, r8.w
mul r1.x, r1.x, l(3.400000)
exp r1.x, r1.x
add r1.y, -r0.w, l(1.000000)
mad r0.w, r1.x, r1.y, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mul r1.xyz, r0.xyzx, cb0[12].xyzx
mul r1.xyz, r1.xyzx, r28.xyzx
mad r0.xyz, r10.yzwy, r0.xyzx, r1.xyzx
add r1.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r1.xyz, r1.xyzx, r29.xyzx
mad r1.xyz, r30.xyzx, r4.xyzx, r1.xyzx
add r0.xyz, r0.xyzx, r1.xyzx
lt r1.x, l(0.000000), cb2[9].z
if_nz r1.x
  dp3 r1.x, v7.xyzx, v7.xyzx
  rsq r1.y, r1.x
  mul r1.yzw, r1.yyyy, v7.xxyz
  sqrt r1.x, r1.x
  lt r2.x, l(0.000000), cb2[13].w
  if_nz r2.x
    mad r2.xy, r1.xxxx, cb2[15].xyxx, cb2[14].zwzz
    mul r2.xy, r2.xyxx, cb2[16].xyxx
    lt r2.z, l(0.010000), |v7.z|
    mul r3.xy, v7.zzzz, cb2[15].zwzz
    mul r3.zw, r3.xxxy, l(0.000000, 0.000000, -1.442695, -1.442695)
    exp r3.zw, r3.zzzw
    add r3.zw, -r3.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    div r3.xy, r3.zwzz, r3.xyxx
    mul r3.xy, r2.xyxx, r3.xyxx
    movc r2.xy, r2.zzzz, r3.xyxx, r2.xyxx
    mul r2.xzw, r2.xxxx, cb2[12].xxyz
    exp r2.xzw, r2.xxzw
    mul r3.xyz, r2.yyyy, cb2[12].xyzx
    exp r3.xyz, r3.xyzx
    add r3.xyz, -r2.xzwx, r3.xyzx
    mad r2.xyz, cb2[13].wwww, r3.xyzx, r2.xzwx
  else 
    mad r2.w, r1.x, cb2[15].x, cb2[14].z
    mul r2.w, r2.w, cb2[16].x
    lt r3.x, l(0.010000), |v7.z|
    mul r3.y, v7.z, cb2[15].z
    mul r3.z, r3.y, l(-1.442695)
    exp r3.z, r3.z
    add r3.z, -r3.z, l(1.000000)
    div r3.y, r3.z, r3.y
    mul r3.y, r2.w, r3.y
    movc r2.w, r3.x, r3.y, r2.w
    mul r3.xyz, r2.wwww, cb2[12].xyzx
    exp r2.xyz, r3.xyzx
  endif 
  mad r2.xyz, r2.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r2.xyz, r2.xyzx, -cb2[9].zzzz
  dp3 r1.y, cb2[7].yzwy, -r1.yzwy
  mad r1.z, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r1.w, cb2[8].w, -r1.y, l(1.000000)
  mul r1.w, r1.w, r1.w
  mul r1.w, r1.w, l(12.566371)
  div r1.z, r1.z, r1.w
  add r1.x, r1.x, -cb2[10].w
  mul_sat r1.x, r1.x, cb2[11].w
  mul r1.x, r1.x, r1.z
  mov_sat r1.y, r1.y
  mad r1.y, r1.y, r1.y, l(1.000000)
  mad r1.y, r1.y, l(0.05968310), l(-1.000000)
  mad r1.y, cb2[8].z, r1.y, l(1.000000)
  mul r1.xzw, r1.xxxx, cb2[11].xxyz
  mad r1.xyz, r1.yyyy, cb2[10].xyzx, r1.xzwx
  mul r1.xyz, r1.xyzx, cb2[9].wwww
  add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r1.xyz, r1.xyzx, r3.xyzx
  mul r1.xyz, r0.wwww, r1.xyzx
  mad r1.xyz, r0.xyzx, r2.xyzx, r1.xyzx
else 
  mul r1.w, v7.z, cb2[6].x
  mad r2.x, cb2[6].x, v7.z, cb2[5].x
  lt r2.y, |r1.w|, l(0.000100)
  min r2.z, r2.x, l(64.000000)
  mul r2.z, r2.z, l(1.442695)
  exp r2.z, r2.z
  mov_sat r2.w, cb2[6].z
  lt r3.x, r2.x, l(0.000000)
  add r2.x, r2.x, l(1.000000)
  movc r2.x, r3.x, r2.z, r2.x
  add r2.x, r2.x, -cb2[6].z
  movc r1.w, r2.y, l(1.000000), r1.w
  div r1.w, r2.x, r1.w
  movc r1.w, r2.y, r2.w, r1.w
  mul r1.w, r1.w, cb2[5].z
  dp3 r2.x, v7.xyzx, v7.xyzx
  sqrt r2.y, r2.x
  mad r1.w, r1.w, r2.y, cb2[5].w
  exp r1.w, r1.w
  min r1.w, r1.w, l(1.000000)
  add r1.w, -r1.w, l(1.000000)
  rsq r2.x, r2.x
  mul r2.xyz, r2.xxxx, v7.xyzx
  dp3 r2.x, cb2[7].yzwy, r2.xyzx
  mad_sat r2.x, cb2[8].y, r2.x, cb2[8].x
  add r3.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r2.xyzw, r2.xxxx, r3.xyzw, cb2[4].xyzw
  mul r1.w, r1.w, r2.w
  mad r2.xyz, r2.xyzx, r0.wwww, -r0.xyzx
  mad r1.xyz, r1.wwww, r2.xyzx, r0.xyzx
endif 
mul r0.xyz, r1.xyzx, cb1[85].yyyy
ge r1.xyz, r0.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.xyz, r0.xyzx, r1.xyzx
min o0.xyz, r0.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
mov o0.w, r0.w
ret 
// Approximately 2246 instruction slots used
