//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:36:42 2021
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float3 colorTint;                  // Offset:  160 Size:    12
//   float baseNormalHeight;            // Offset:  172 Size:     4
//   float2 glossRange;                 // Offset:  176 Size:     8
//   uint zFeatherComputeSprites;       // Offset:  184 Size:     4 [unused]
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16 [unused]
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4 [unused]
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4
//   uint numDynamicDecals;             // Offset:  924 Size:     4
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for shaderConstantSetBuffer
// {
//
//   struct GpuShaderConstantSet
//   {
//       
//       float4 scriptVector0;          // Offset:    0
//       float4 scriptVector1;          // Offset:   16
//       float4 scriptVector2;          // Offset:   32
//       float4 scriptVector3;          // Offset:   48
//       float4 scriptVector4;          // Offset:   64
//       float4 scriptVector5;          // Offset:   80
//       float4 scriptVector6;          // Offset:   96
//       float4 scriptVector7;          // Offset:  112
//       float4 weaponParam0;           // Offset:  128
//       float4 weaponParam1;           // Offset:  144
//       float4 weaponParam2;           // Offset:  160
//       float4 weaponParam3;           // Offset:  176
//       float4 weaponParam4;           // Offset:  192
//       float4 weaponParam5;           // Offset:  208
//       float4 weaponParam6;           // Offset:  224
//       float4 weaponParam7;           // Offset:  240
//       float4 characterParam0;        // Offset:  256
//       float4 characterParam1;        // Offset:  272
//       float4 characterParam2;        // Offset:  288
//       float4 characterParam3;        // Offset:  304
//       float4 characterParam4;        // Offset:  320
//       float4 characterParam5;        // Offset:  336
//       float4 characterParam6;        // Offset:  352
//       float4 characterParam7;        // Offset:  368
//
//   } $Element;                        // Offset:    0 Size:   384
//
// }
//
// Resource bind info for modelInstanceBuffer
// {
//
//   struct ModelInstanceData
//   {
//       
//       uint boneArrayIndex;           // Offset:    0
//       uint shaderConstantSet;        // Offset:    4
//       uint flagsAndPrevFrameIndex;   // Offset:    8
//       uint worldMatrix;              // Offset:   12
//       uint siegeAnimStateOffset;     // Offset:   16
//       uint prevFrameSiegeAnimStateOffset;// Offset:   20
//
//   } $Element;                        // Offset:    0 Size:    24
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for forwardDecalConstants
// {
//
//   struct CoreDecalConstantsPack
//   {
//       
//       uint4 data[8];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   128
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// colorSampler                      sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// specColorSampler                  sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// normalSampler                     sampler      NA          NA             s5      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// shaderConstantSetBuffer           texture  struct         r/o             t0      1 
// modelInstanceBuffer               texture  struct         r/o             t4      1 
// gEnvBRDFGlass                     texture  float2          2d             t5      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// colorMap                          texture  float4          2d            t21      1 
// tintMask                          texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// normalMap                         texture  float4          2d            t24      1 
// glossMap                          texture  float4          2d            t25      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// visibleDecals                     texture    uint     2darray            t35      1 
// forwardDecalConstants             texture  struct         r/o            t36      1 
// materialTexBC7                    texture  float4     2darray            t42      1 
// materialTexBC3                    texture  float4     2darray            t43      1 
// materialTexBC7linear              texture  float4     2darray            t44      1 
// materialTexMask                   texture  float4     2darray            t45      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyz 
// COLOR                    1   x           1     NONE   float   x   
// TEXCOORD                 0    yz         1     NONE   float    yz 
// TEXCOORD                 4   x           2     NONE    uint   x   
// TEXCOORD                 1   xyz         3     NONE   float   xyz 
// TEXCOORD                 2   xyz         4     NONE   float   xyz 
// TEXCOORD                 3   xyz         5     NONE   float   xyz 
// OFFPOSITION              0   xyz         6     NONE   float   xyz 
// SV_IsFrontFace           0   x           7    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[12], immediateIndexed
dcl_constantbuffer CB1[93], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_structured t0, 384
dcl_resource_structured t4, 24
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2darray (float,float,float,float) t31
dcl_resource_texture2darray (uint,uint,uint,uint) t35
dcl_resource_structured t36, 128
dcl_resource_texture2darray (float,float,float,float) t42
dcl_resource_texture2darray (float,float,float,float) t43
dcl_resource_texture2darray (float,float,float,float) t44
dcl_resource_texture2darray (float,float,float,float) t45
dcl_input_ps_siv linear noperspective v0.xyz, position
dcl_input_ps linear v1.x
dcl_input_ps linear v1.yz
dcl_input_ps constant v2.x
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps_sgv constant v7.x, is_front_face
dcl_output o0.xyzw
dcl_temps 46
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.yzyy, t21.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r1.x, v1.yzyy, t22.xyzw, s1
add r1.yzw, cb0[10].xxyz, l(0.000000, -1.000000, -1.000000, -1.000000)
mad r1.xyz, r1.xxxx, r1.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r0.xyz, r0.xyzx, r1.xyzx
mul r0.w, r0.w, v1.x
sample_indexable(texture2d)(float,float,float,float) r1.x, v1.yzyy, t25.xyzw, s3
add r1.y, -cb0[11].x, cb0[11].y
mad r1.x, r1.x, r1.y, cb0[11].x
mul_sat r1.x, r1.x, l(0.05882353)
sample_indexable(texture2d)(float,float,float,float) r1.yzw, v1.yzyy, t24.wxyz, s5
add r1.yzw, r1.yyzw, l(0.000000, -0.500000, -0.500000, -0.000000)
mad r1.yzw, cb0[10].wwww, r1.yyzw, l(0.000000, 0.500000, 0.500000, 0.000000)
mad r1.yz, r1.yyzy, l(0.000000, 1.99218750, 1.99218750, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
dp2 r2.x, r1.yzyy, r1.yzyy
add r2.x, -r2.x, l(1.000000)
max r2.x, r2.x, l(0.000000)
sqrt r2.x, r2.x
mul r1.w, r1.w, r1.w
mul r1.w, r1.w, l(0.33333334)
min r1.w, r1.w, l(1.000000)
movc r2.y, v7.x, l(1.000000), l(-1.000000)
dp3 r2.z, v3.xyzx, v3.xyzx
rsq r2.z, r2.z
mul r3.xyz, r2.zzzz, v3.xyzx
mul r3.xyz, r2.yyyy, r3.xyzx
dp3 r2.z, v4.xyzx, v4.xyzx
rsq r2.z, r2.z
mul r4.xyz, r2.zzzz, v4.xyzx
mul r4.xyz, r2.yyyy, r4.xyzx
dp3 r2.z, v5.xyzx, v5.xyzx
rsq r2.z, r2.z
mul r5.xyz, r2.zzzz, v5.xyzx
mul r5.xyz, r2.yyyy, r5.xyzx
mul r1.x, r1.x, l(-17.000000)
exp r1.x, r1.x
add r1.x, r1.x, r1.w
log r1.x, r1.x
mul r1.x, r1.x, l(-0.05882353)
max r1.x, r1.x, l(0.000000)
mul r5.xyz, r1.zzzz, r5.xyzx
mad r1.yzw, r4.xxyz, r1.yyyy, r5.xxyz
mad r1.yzw, r3.xxyz, r2.xxxx, r1.yyzw
dp3 r2.x, r1.yzwy, r1.yzwy
rsq r2.x, r2.x
mul r1.yzw, r1.yyzw, r2.xxxx
ge r2.x, v0.z, l(0.984375)
mul r2.z, v0.z, l(1.01587307)
mad r2.w, v0.z, l(64.000000), l(-63.000000)
movc r2.x, r2.x, r2.w, r2.z
max r2.x, r2.x, l(0.00000001)
rcp r2.x, r2.x
ftou r2.zw, v0.xxxy
deriv_rtx_coarse r3.xyz, v6.xyzx
deriv_rty_coarse r4.xyz, v6.xyzx
iadd r3.w, cb2[0].y, cb2[0].x
ld_structured_indexable(structured_buffer, stride=24)(mixed,mixed,mixed,mixed) r5.xy, v2.x, l(4), t4.xyxx
and r5.yz, r5.yyyy, l(0, 0x10000000, 0x20000000, 0)
if_nz r5.y
  add r6.xyz, v6.xyzx, cb1[24].xyzx
  mul r4.w, r2.x, l(0.00781250)
  min r4.w, r4.w, l(15.000000)
  ftou r4.w, r4.w
  ushr r7.xy, r2.zwzz, l(6, 6, 0, 0)
  ishl r7.z, r4.w, l(4)
  and r4.w, cb2[57].z, l(-32)
  iadd r5.y, -r4.w, cb2[57].z
  mov r8.xy, l(0,0,0,0)
  mov r9.w, l(0)
  mov r6.w, l(1.000000)
  mov r10.xyzw, l(0,0,0,0)
  mov r11.xyz, l(0,0,0,0)
  mov r12.yz, l(0,0,0,0)
  mov r13.xy, l(0,0,0,0)
  mov r5.w, l(0)
  loop 
    uge r7.w, r5.w, cb2[57].z
    breakc_nz r7.w
    ushr r8.z, r5.w, l(5)
    iadd r9.xyz, r7.xyzx, r8.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r7.w, r9.xyzw, t35.yzwx
    ieq r8.z, r4.w, r5.w
    ubfe r8.w, r5.y, l(0), r7.w
    movc r7.w, r8.z, r8.w, r7.w
    iadd r8.z, r3.w, r5.w
    mov r14.xyzw, r10.xzwy
    mov r9.xyz, r11.xyzx
    mov r15.yz, r12.yyzy
    mov r16.xy, r13.xyxx
    mov r8.w, r7.w
    loop 
      breakc_z r8.w
      firstbit_lo r11.w, r8.w
      ishl r12.w, l(1), r11.w
      and r13.w, r8.w, r12.w
      if_nz r13.w
        xor r8.w, r8.w, r12.w
        iadd r12.w, r8.z, r11.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r17.xyzw, r12.w, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r18.xy, r12.w, l(16), t11.xyxx
        add r17.xyz, r17.xyzx, -v6.xyzx
        mov r18.z, r17.w
        lt r17.xyz, |r17.xyzx|, r18.zxyz
        and r12.w, r17.y, r17.x
        and r12.w, r17.z, r12.w
        if_nz r12.w
          iadd r11.w, r5.w, r11.w
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r17.xyz, r11.w, l(0), t36.xyzx
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r18.xyz, r11.w, l(16), t36.xyzx
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r19.xyz, r11.w, l(32), t36.xyzx
          mov r20.x, r17.x
          mov r20.y, r18.x
          mov r20.z, r19.x
          dp3 r12.w, r20.xyzx, r20.xyzx
          rsq r12.w, r12.w
          mul r21.xyz, r12.wwww, r20.xyzx
          dp3 r12.w, r21.xyzx, v3.xyzx
          ge r12.w, r12.w, l(0.500000)
          if_nz r12.w
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r22.xyw, r11.w, l(48), t36.xyxz
            mov r20.w, r22.x
            dp4 r20.x, r6.xyzw, r20.xyzw
            mov r23.x, r17.y
            mov r23.y, r18.y
            mov r23.z, r19.y
            mov r23.w, r22.y
            dp4 r20.y, r6.xyzw, r23.xyzw
            mov r22.x, r17.z
            mov r22.y, r18.z
            mov r22.z, r19.z
            dp4 r20.z, r6.xyzw, r22.xyzw
            lt r17.xyz, |r20.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
            and r12.w, r17.y, r17.x
            and r12.w, r17.z, r12.w
            if_nz r12.w
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r17.xyzw, r11.w, l(64), t36.xyzw
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r18.xyzw, r11.w, l(80), t36.xyzw
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r19.xyzw, r11.w, l(96), t36.xyzw
              dp3 r24.x, r3.xyzx, r23.xyzx
              dp3 r24.y, r3.xyzx, r22.xyzx
              dp3 r25.x, r4.xyzx, r23.xyzx
              dp3 r25.y, r4.xyzx, r22.xyzx
              mad r20.xy, r20.yzyy, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
              mul r24.xyz, r24.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
              mul r25.xyz, r25.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
              and r20.zw, r18.yyyz, l(0, 0, 0x0000ffff, 0x0000ffff)
              if_nz r20.z
                ubfe r12.w, l(4), l(24), r18.w
                ishl r12.w, l(1), r12.w
                ushr r13.w, r18.w, l(28)
                ishl r13.w, l(1), r13.w
                ieq r15.w, r20.z, l(4)
                if_nz r15.w
                  and r15.w, r18.w, l(4095)
                  ubfe r16.w, l(12), l(12), r18.w
                  and r21.w, r19.w, l(1023)
                  utof r26.xz, r12.wwww
                  utof r26.y, r13.w
                  mad r27.xy, r20.xyxx, r26.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r27.zw, r26.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r27.xy, r27.zwzz, r27.xyxx
                  utof r28.x, r15.w
                  utof r28.y, r16.w
                  add r27.xy, r27.xyxx, r28.xyxx
                  mul r27.xy, r27.xyxx, cb1[83].xyxx
                  utof r27.z, r21.w
                  mul r28.xyz, r24.zyzz, cb1[83].xyxx
                  mul r28.xyz, r26.xyzx, r28.xyzx
                  mul r29.xyz, r25.zyzz, cb1[83].xyxx
                  mul r26.xyz, r26.xyzx, r29.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r26.xyzw, r27.xyzx, t42.xyzw, s4, r28.xyzx, r26.xyzx
                else 
                  ieq r15.w, r20.z, l(1)
                  if_nz r15.w
                    and r15.w, r18.w, l(4095)
                    ubfe r16.w, l(12), l(12), r18.w
                    and r18.w, r19.w, l(1023)
                    utof r27.xz, r12.wwww
                    utof r27.y, r13.w
                    mad r28.xy, r20.xyxx, r27.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r28.zw, r27.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                    min r28.xy, r28.zwzz, r28.xyxx
                    utof r29.x, r15.w
                    utof r29.y, r16.w
                    add r28.xy, r28.xyxx, r29.xyxx
                    mul r28.xy, r28.xyxx, cb1[83].zwzz
                    utof r28.z, r18.w
                    mul r29.xyz, r24.zyzz, cb1[83].zwzz
                    mul r29.xyz, r27.xyzx, r29.xyzx
                    mul r30.xyz, r25.zyzz, cb1[83].zwzz
                    mul r27.xyz, r27.xyzx, r30.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r26.xyzw, r28.xyzx, t43.xyzw, s4, r29.xyzx, r27.xyzx
                  else 
                    mov r26.xyzw, l(1.000000,1.000000,1.000000,1.000000)
                  endif 
                endif 
                mul r17.xyz, r17.xyzx, r26.xyzx
                mul r12.w, r17.w, r26.w
              else 
                mov r17.xyz, l(0,0,0,0)
                mov r12.w, l(0)
              endif 
              ne r13.w, r18.x, l(1.000000)
              add r15.w, r17.w, r12.w
              mad_sat r15.w, r15.w, r18.x, -r18.x
              movc r12.w, r13.w, r15.w, r12.w
              if_nz r20.w
                ubfe r13.w, l(4), l(24), r19.y
                ishl r13.w, l(1), r13.w
                ushr r15.w, r19.y, l(28)
                ishl r15.w, l(1), r15.w
                ieq r16.w, r20.w, l(2)
                if_nz r16.w
                  and r16.w, r19.y, l(4095)
                  ubfe r18.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r19.yyyw
                  utof r26.xz, r13.wwww
                  utof r26.y, r15.w
                  mad r27.xy, r20.xyxx, r26.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r27.zw, r26.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r27.xy, r27.zwzz, r27.xyxx
                  utof r28.x, r16.w
                  utof r28.y, r18.x
                  add r27.xy, r27.xyxx, r28.xyxx
                  mul r27.xy, r27.xyxx, cb1[84].xyxx
                  utof r27.z, r18.w
                  mul r28.xyz, r24.zyzz, cb1[84].xyxx
                  mul r28.xyz, r26.xyzx, r28.xyzx
                  mul r29.xyz, r25.zyzz, cb1[84].xyxx
                  mul r26.xyz, r26.xyzx, r29.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r16.w, r27.xyzx, t45.yzwx, s4, r28.xyzx, r26.xyzx
                else 
                  ieq r17.w, r20.w, l(4)
                  if_nz r17.w
                    and r17.w, r19.y, l(4095)
                    ubfe r18.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r19.yyyw
                    utof r26.xz, r13.wwww
                    utof r26.y, r15.w
                    mad r20.zw, r20.xxxy, r26.zzzy, l(0.000000, 0.000000, 0.500000, 0.500000)
                    add r27.xy, r26.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                    min r20.zw, r20.zzzw, r27.xxxy
                    utof r27.x, r17.w
                    utof r27.yz, r18.xxwx
                    add r20.zw, r20.zzzw, r27.xxxy
                    mul r27.xy, r20.zwzz, cb1[83].xyxx
                    mul r28.xyz, r24.zyzz, cb1[83].xyxx
                    mul r28.xyz, r26.xyzx, r28.xyzx
                    mul r29.xyz, r25.zyzz, cb1[83].xyxx
                    mul r26.xyz, r26.xyzx, r29.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r16.w, r27.xyzx, t42.yzwx, s4, r28.xyzx, r26.xyzx
                  else 
                    and r17.w, r19.y, l(4095)
                    ubfe r18.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r19.yyyw
                    utof r26.xz, r13.wwww
                    utof r26.y, r15.w
                    mad r20.zw, r20.xxxy, r26.zzzy, l(0.000000, 0.000000, 0.500000, 0.500000)
                    add r27.xy, r26.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                    min r20.zw, r20.zzzw, r27.xxxy
                    utof r27.x, r17.w
                    utof r27.yz, r18.xxwx
                    add r20.zw, r20.zzzw, r27.xxxy
                    mul r27.xy, r20.zwzz, cb1[83].zwzz
                    mul r28.xyz, r24.zyzz, cb1[83].zwzz
                    mul r28.xyz, r26.xyzx, r28.xyzx
                    mul r29.xyz, r25.zyzz, cb1[83].zwzz
                    mul r26.xyz, r26.xyzx, r29.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r16.w, r27.xyzx, t43.yzwx, s4, r28.xyzx, r26.xyzx
                  endif 
                endif 
                mad r26.xyz, r16.wwww, l(0.960000, 0.960000, 0.960000, 0.000000), l(0.040000, 0.040000, 0.040000, 0.000000)
                add_sat r13.w, -r16.w, l(1.000000)
                mul r17.xyz, r13.wwww, r17.xyzx
              else 
                mov r26.xyz, l(0.040000,0.040000,0.040000,0)
              endif 
              ushr r18.xy, r18.zyzz, l(16, 16, 0, 0)
              if_nz r18.x
                ieq r13.w, r18.x, l(2)
                if_nz r13.w
                  ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r11.w, r11.w, l(112), t36.xxxx
                  ubfe r18.zw, l(0, 0, 4, 12), l(0, 0, 24, 12), r19.zzzz
                  ishl r13.w, l(1), r18.z
                  ushr r15.w, r19.z, l(28)
                  ishl r15.w, l(1), r15.w
                  and r16.w, r19.z, l(4095)
                  and r11.w, r11.w, l(1023)
                  utof r27.xz, r13.wwww
                  utof r27.y, r15.w
                  mad r19.yz, r20.xxyx, r27.zzyz, l(0.000000, 0.500000, 0.500000, 0.000000)
                  add r20.zw, r27.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r19.yz, r19.yyzy, r20.zzwz
                  utof r28.x, r16.w
                  utof r28.y, r18.w
                  add r18.zw, r19.yyyz, r28.xxxy
                  mul r28.xy, r18.zwzz, cb1[84].xyxx
                  utof r28.z, r11.w
                  mul r29.xyz, r24.zyzz, cb1[84].xyxx
                  mul r29.xyz, r27.xyzx, r29.xyzx
                  mul r30.xyz, r25.zyzz, cb1[84].xyxx
                  mul r27.xyz, r27.xyzx, r30.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r11.w, r28.xyzx, t45.yzwx, s4, r29.xyzx, r27.xyzx
                else 
                  ieq r13.w, r18.x, l(6)
                  movc r11.w, r13.w, l(0), l(1.000000)
                endif 
              else 
                mov r11.w, l(1.000000)
              endif 
              mul_sat r11.w, r11.w, l(0.76470590)
              if_nz r18.y
                ieq r13.w, r18.y, l(3)
                if_nz r13.w
                  ubfe r18.xyz, l(4, 12, 10, 0), l(24, 12, 10, 0), r19.xxwx
                  ishl r13.w, l(1), r18.x
                  ushr r15.w, r19.x, l(28)
                  ishl r15.w, l(1), r15.w
                  and r16.w, r19.x, l(4095)
                  utof r19.xz, r13.wwww
                  utof r19.y, r15.w
                  mad r18.xw, r20.xxxy, r19.xxxy, l(0.500000, 0.000000, 0.000000, 0.500000)
                  add r20.xy, r19.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r18.xw, r18.xxxw, r20.xxxy
                  utof r20.x, r16.w
                  utof r20.yz, r18.yyzy
                  add r18.xy, r18.xwxx, r20.xyxx
                  mul r20.xy, r18.xyxx, cb1[84].zwzz
                  mul r18.xyz, r24.xyzx, cb1[84].zwzz
                  mul r18.xyz, r19.xyzx, r18.xyzx
                  mul r24.xyz, r25.xyzx, cb1[84].zwzz
                  mul r19.xyz, r19.xyzx, r24.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r18.xyz, r20.xyzx, t44.xyzw, s4, r18.xyzx, r19.xyzx
                else 
                  mov r18.xyz, l(0.500000,0.500000,1.000000,0)
                endif 
                mad r18.xy, r18.xyxx, l(1.99218750, 1.99218750, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
                dp2 r13.w, r18.xyxx, r18.xyxx
                add r13.w, -r13.w, l(1.000000)
                max r13.w, r13.w, l(0.000000)
                sqrt r13.w, r13.w
                mul r15.w, r18.z, r18.z
                mul r15.w, r15.w, l(0.33333334)
                min r15.w, r15.w, l(1.000000)
                dp3 r16.w, r23.xyzx, r23.xyzx
                rsq r16.w, r16.w
                mul r19.xyz, r16.wwww, r23.xyzx
                dp3 r16.w, -r22.xyzx, -r22.xyzx
                rsq r16.w, r16.w
                mul r20.xyz, r16.wwww, -r22.xyzx
                mul r21.xyz, r2.yyyy, r21.xyzx
                mul r19.xyz, r2.yyyy, r19.xyzx
                mul r20.xyz, r2.yyyy, r20.xyzx
                mul r16.w, r11.w, l(-17.000000)
                exp r16.w, r16.w
                add r15.w, r15.w, r16.w
                log r15.w, r15.w
                mul r15.w, r15.w, l(-0.05882353)
                max r11.w, r15.w, l(0.000000)
                mul r18.yzw, r18.yyyy, r20.xxyz
                mad r18.xyz, r19.xyzx, r18.xxxx, r18.yzwy
                mad r18.xyz, r21.xyzx, r13.wwww, r18.xyzx
                dp3 r13.w, r18.xyzx, r18.xyzx
                rsq r13.w, r13.w
                mul r18.xyz, r13.wwww, r18.xyzx
                add r13.w, -r12.w, l(1.000000)
                mov r15.x, r14.x
                mul r19.xyz, r13.wwww, r15.xyzx
                mad r15.xyz, r18.xyzx, r12.wwww, r19.xyzx
                mov r14.x, r15.x
              endif 
              add r13.w, -r12.w, l(1.000000)
              mul r18.xyz, r9.xyzx, r13.wwww
              mad r9.xyz, r17.xyzx, r12.wwww, r18.xyzx
              mov r16.z, r14.y
              mul r17.xyz, r13.wwww, r16.xyzx
              mad r16.xyz, r26.xyzx, r12.wwww, r17.xyzx
              mul r15.x, r13.w, r14.w
              mad r14.z, r14.z, r13.w, r12.w
              mad r14.w, r11.w, r12.w, r15.x
              mov r14.y, r16.z
            endif 
          endif 
        endif 
      endif 
    endloop 
    mov r10.xyzw, r14.xwyz
    mov r11.xyz, r9.xyzx
    mov r12.yz, r15.yyzy
    mov r13.xy, r16.xyxx
    iadd r5.w, r5.w, l(32)
  endloop 
  mov r12.x, r10.x
  mov r13.z, r10.z
  mov r10.xy, r10.wyww
else 
  mov r11.xyz, l(0,0,0,0)
  mov r12.xyz, l(0,0,0,0)
  mov r13.xyz, l(0,0,0,0)
  mov r10.xy, l(0,0,0,0)
endif 
if_nz r5.z
  add r6.xyz, v6.xyzx, cb1[24].xyzx
  iadd r4.w, cb2[57].w, cb2[57].z
  mul r5.y, r2.x, l(0.00781250)
  min r5.y, r5.y, l(15.000000)
  ftou r5.y, r5.y
  ushr r7.xy, r2.zwzz, l(6, 6, 0, 0)
  ishl r7.z, r5.y, l(4)
  and r5.y, cb2[57].z, l(-32)
  iadd r5.z, -r5.y, cb2[57].z
  and r5.w, r4.w, l(-32)
  iadd r7.w, r4.w, -r5.w
  mov r8.xy, l(0,0,0,0)
  mov r9.w, l(0)
  mov r6.w, l(1.000000)
  mov r14.xyz, r11.xyzx
  mov r15.xyz, r12.xyzx
  mov r16.xyz, r13.xyzx
  mov r17.xy, r10.xyxx
  mov r8.w, r5.y
  loop 
    uge r10.z, r8.w, r4.w
    breakc_nz r10.z
    ushr r8.z, r8.w, l(5)
    iadd r9.xyz, r7.xyzx, r8.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r8.z, r9.xyzw, t35.yzxw
    ieq r9.x, r5.y, r8.w
    bfi r9.y, r5.z, l(0), l(0), r8.z
    movc r8.z, r9.x, r9.y, r8.z
    ieq r9.x, r5.w, r8.w
    ubfe r9.y, r7.w, l(0), r8.z
    movc r8.z, r9.x, r9.y, r8.z
    iadd r9.x, r3.w, r8.w
    mov r18.xyz, r14.xyzx
    mov r19.xyz, r15.xyzx
    mov r20.xyz, r16.xyzx
    mov r9.yz, r17.xxyx
    mov r10.z, r8.z
    loop 
      breakc_z r10.z
      firstbit_lo r10.w, r10.z
      ishl r11.w, l(1), r10.w
      and r12.w, r10.z, r11.w
      if_nz r12.w
        xor r10.z, r10.z, r11.w
        iadd r11.w, r9.x, r10.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r21.xyzw, r11.w, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r22.xy, r11.w, l(16), t11.xyxx
        add r21.xyz, r21.xyzx, -v6.xyzx
        mov r22.z, r21.w
        lt r21.xyz, |r21.xyzx|, r22.zxyz
        and r11.w, r21.y, r21.x
        and r11.w, r21.z, r11.w
        if_nz r11.w
          iadd r10.w, r8.w, r10.w
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r21.xyz, r10.w, l(0), t36.xyzx
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r22.xyz, r10.w, l(16), t36.xyzx
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r23.xyz, r10.w, l(32), t36.xyzx
          mov r24.x, r21.x
          mov r24.y, r22.x
          mov r24.z, r23.x
          dp3 r11.w, r24.xyzx, r24.xyzx
          rsq r11.w, r11.w
          mul r25.xyz, r11.wwww, r24.xyzx
          dp3 r11.w, r25.xyzx, v3.xyzx
          ge r11.w, r11.w, l(0.500000)
          if_nz r11.w
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r26.xyw, r10.w, l(48), t36.xyxz
            mov r24.w, r26.x
            dp4 r24.x, r6.xyzw, r24.xyzw
            mov r27.x, r21.y
            mov r27.y, r22.y
            mov r27.z, r23.y
            mov r27.w, r26.y
            dp4 r24.y, r6.xyzw, r27.xyzw
            mov r26.x, r21.z
            mov r26.y, r22.z
            mov r26.z, r23.z
            dp4 r24.z, r6.xyzw, r26.xyzw
            lt r21.xyz, |r24.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
            and r11.w, r21.y, r21.x
            and r11.w, r21.z, r11.w
            if_nz r11.w
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r21.xyzw, r10.w, l(64), t36.xyzw
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r22.xyzw, r10.w, l(80), t36.xyzw
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r23.xyzw, r10.w, l(96), t36.xyzw
              dp3 r28.x, r3.xyzx, r27.xyzx
              dp3 r28.y, r3.xyzx, r26.xyzx
              dp3 r29.x, r4.xyzx, r27.xyzx
              dp3 r29.y, r4.xyzx, r26.xyzx
              mad r17.zw, r24.yyyz, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
              mul r24.xyz, r28.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
              mul r28.xyz, r29.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
              and r29.xy, r22.yzyy, l(0x0000ffff, 0x0000ffff, 0, 0)
              if_nz r29.x
                ubfe r11.w, l(4), l(24), r22.w
                ishl r11.w, l(1), r11.w
                ushr r12.w, r22.w, l(28)
                ishl r12.w, l(1), r12.w
                ieq r13.w, r29.x, l(4)
                if_nz r13.w
                  and r13.w, r22.w, l(4095)
                  ubfe r14.w, l(12), l(12), r22.w
                  and r15.w, r23.w, l(1023)
                  utof r30.xz, r11.wwww
                  utof r30.y, r12.w
                  mad r29.zw, r17.zzzw, r30.zzzy, l(0.000000, 0.000000, 0.500000, 0.500000)
                  add r31.xy, r30.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r29.zw, r29.zzzw, r31.xxxy
                  utof r31.x, r13.w
                  utof r31.y, r14.w
                  add r29.zw, r29.zzzw, r31.xxxy
                  mul r31.xy, r29.zwzz, cb1[83].xyxx
                  utof r31.z, r15.w
                  mul r32.xyz, r24.zyzz, cb1[83].xyxx
                  mul r32.xyz, r30.xyzx, r32.xyzx
                  mul r33.xyz, r28.zyzz, cb1[83].xyxx
                  mul r30.xyz, r30.xyzx, r33.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r30.xyzw, r31.xyzx, t42.xyzw, s4, r32.xyzx, r30.xyzx
                else 
                  ieq r13.w, r29.x, l(1)
                  if_nz r13.w
                    and r13.w, r22.w, l(4095)
                    ubfe r14.w, l(12), l(12), r22.w
                    and r15.w, r23.w, l(1023)
                    utof r31.xz, r11.wwww
                    utof r31.y, r12.w
                    mad r29.xz, r17.zzwz, r31.zzyz, l(0.500000, 0.000000, 0.500000, 0.000000)
                    add r32.xy, r31.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                    min r29.xz, r29.xxzx, r32.xxyx
                    utof r32.x, r13.w
                    utof r32.y, r14.w
                    add r29.xz, r29.xxzx, r32.xxyx
                    mul r32.xy, r29.xzxx, cb1[83].zwzz
                    utof r32.z, r15.w
                    mul r29.xzw, r24.zzyz, cb1[83].zzwz
                    mul r29.xzw, r31.xxyz, r29.xxzw
                    mul r33.xyz, r28.zyzz, cb1[83].zwzz
                    mul r31.xyz, r31.xyzx, r33.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r30.xyzw, r32.xyzx, t43.xyzw, s4, r29.xzwx, r31.xyzx
                  else 
                    mov r30.xyzw, l(1.000000,1.000000,1.000000,1.000000)
                  endif 
                endif 
                mul r21.xyz, r21.xyzx, r30.xyzx
                mul r11.w, r21.w, r30.w
              else 
                mov r21.xyz, l(0,0,0,0)
                mov r11.w, l(0)
              endif 
              ne r12.w, r22.x, l(1.000000)
              add r13.w, r21.w, r11.w
              mad_sat r13.w, r13.w, r22.x, -r22.x
              movc r11.w, r12.w, r13.w, r11.w
              if_nz r29.y
                ubfe r12.w, l(4), l(24), r23.y
                ishl r12.w, l(1), r12.w
                ushr r13.w, r23.y, l(28)
                ishl r13.w, l(1), r13.w
                ieq r14.w, r29.y, l(2)
                if_nz r14.w
                  and r14.w, r23.y, l(4095)
                  ubfe r22.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r23.yyyw
                  utof r30.xz, r12.wwww
                  utof r30.y, r13.w
                  mad r29.xz, r17.zzwz, r30.zzyz, l(0.500000, 0.000000, 0.500000, 0.000000)
                  add r31.xy, r30.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r29.xz, r29.xxzx, r31.xxyx
                  utof r31.x, r14.w
                  utof r31.yz, r22.xxwx
                  add r29.xz, r29.xxzx, r31.xxyx
                  mul r31.xy, r29.xzxx, cb1[84].xyxx
                  mul r29.xzw, r24.zzyz, cb1[84].xxyx
                  mul r29.xzw, r30.xxyz, r29.xxzw
                  mul r32.xyz, r28.zyzz, cb1[84].xyxx
                  mul r30.xyz, r30.xyzx, r32.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r14.w, r31.xyzx, t45.yzwx, s4, r29.xzwx, r30.xyzx
                else 
                  ieq r15.w, r29.y, l(4)
                  if_nz r15.w
                    and r15.w, r23.y, l(4095)
                    ubfe r22.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r23.yyyw
                    utof r29.xz, r12.wwww
                    utof r29.y, r13.w
                    mad r30.xy, r17.zwzz, r29.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r30.zw, r29.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                    min r30.xy, r30.zwzz, r30.xyxx
                    utof r31.x, r15.w
                    utof r31.y, r22.x
                    add r30.xy, r30.xyxx, r31.xyxx
                    mul r30.xy, r30.xyxx, cb1[83].xyxx
                    utof r30.z, r22.w
                    mul r31.xyz, r24.zyzz, cb1[83].xyxx
                    mul r31.xyz, r29.xyzx, r31.xyzx
                    mul r32.xyz, r28.zyzz, cb1[83].xyxx
                    mul r29.xyz, r29.xyzx, r32.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r14.w, r30.xyzx, t42.yzwx, s4, r31.xyzx, r29.xyzx
                  else 
                    and r15.w, r23.y, l(4095)
                    ubfe r22.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r23.yyyw
                    utof r29.xz, r12.wwww
                    utof r29.y, r13.w
                    mad r30.xy, r17.zwzz, r29.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r30.zw, r29.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                    min r30.xy, r30.zwzz, r30.xyxx
                    utof r31.x, r15.w
                    utof r31.y, r22.x
                    add r30.xy, r30.xyxx, r31.xyxx
                    mul r30.xy, r30.xyxx, cb1[83].zwzz
                    utof r30.z, r22.w
                    mul r31.xyz, r24.zyzz, cb1[83].zwzz
                    mul r31.xyz, r29.xyzx, r31.xyzx
                    mul r32.xyz, r28.zyzz, cb1[83].zwzz
                    mul r29.xyz, r29.xyzx, r32.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r14.w, r30.xyzx, t43.yzwx, s4, r31.xyzx, r29.xyzx
                  endif 
                endif 
                mad r29.xyz, r14.wwww, l(0.960000, 0.960000, 0.960000, 0.000000), l(0.040000, 0.040000, 0.040000, 0.000000)
                add_sat r12.w, -r14.w, l(1.000000)
                mul r21.xyz, r12.wwww, r21.xyzx
              else 
                mov r29.xyz, l(0.040000,0.040000,0.040000,0)
              endif 
              ushr r22.xy, r22.zyzz, l(16, 16, 0, 0)
              if_nz r22.x
                ieq r12.w, r22.x, l(2)
                if_nz r12.w
                  ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r10.w, r10.w, l(112), t36.xxxx
                  ubfe r22.zw, l(0, 0, 4, 12), l(0, 0, 24, 12), r23.zzzz
                  ishl r12.w, l(1), r22.z
                  ushr r13.w, r23.z, l(28)
                  ishl r13.w, l(1), r13.w
                  and r14.w, r23.z, l(4095)
                  and r10.w, r10.w, l(1023)
                  utof r30.xz, r12.wwww
                  utof r30.y, r13.w
                  mad r23.yz, r17.zzwz, r30.zzyz, l(0.000000, 0.500000, 0.500000, 0.000000)
                  add r31.xy, r30.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r23.yz, r23.yyzy, r31.xxyx
                  utof r31.x, r14.w
                  utof r31.y, r22.w
                  add r22.zw, r23.yyyz, r31.xxxy
                  mul r31.xy, r22.zwzz, cb1[84].xyxx
                  utof r31.z, r10.w
                  mul r32.xyz, r24.zyzz, cb1[84].xyxx
                  mul r32.xyz, r30.xyzx, r32.xyzx
                  mul r33.xyz, r28.zyzz, cb1[84].xyxx
                  mul r30.xyz, r30.xyzx, r33.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r10.w, r31.xyzx, t45.yzwx, s4, r32.xyzx, r30.xyzx
                else 
                  ieq r12.w, r22.x, l(6)
                  movc r10.w, r12.w, l(0), l(1.000000)
                endif 
              else 
                mov r10.w, l(1.000000)
              endif 
              mul_sat r10.w, r10.w, l(0.76470590)
              if_nz r22.y
                ieq r12.w, r22.y, l(3)
                if_nz r12.w
                  ubfe r22.xyz, l(4, 12, 10, 0), l(24, 12, 10, 0), r23.xxwx
                  ishl r12.w, l(1), r22.x
                  ushr r13.w, r23.x, l(28)
                  ishl r13.w, l(1), r13.w
                  and r14.w, r23.x, l(4095)
                  utof r23.xz, r12.wwww
                  utof r23.y, r13.w
                  mad r17.zw, r17.zzzw, r23.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
                  add r22.xw, r23.zzzy, l(-0.500000, 0.000000, 0.000000, -0.500000)
                  min r17.zw, r17.zzzw, r22.xxxw
                  utof r30.x, r14.w
                  utof r30.yz, r22.yyzy
                  add r17.zw, r17.zzzw, r30.xxxy
                  mul r30.xy, r17.zwzz, cb1[84].zwzz
                  mul r22.xyz, r24.xyzx, cb1[84].zwzz
                  mul r22.xyz, r23.xyzx, r22.xyzx
                  mul r24.xyz, r28.xyzx, cb1[84].zwzz
                  mul r23.xyz, r23.xyzx, r24.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r22.xyz, r30.xyzx, t44.xyzw, s4, r22.xyzx, r23.xyzx
                else 
                  mov r22.xyz, l(0.500000,0.500000,1.000000,0)
                endif 
                mad r17.zw, r22.xxxy, l(0.000000, 0.000000, 1.99218750, 1.99218750), l(0.000000, 0.000000, -1.000000, -1.000000)
                dp2 r12.w, r17.zwzz, r17.zwzz
                add r12.w, -r12.w, l(1.000000)
                max r12.w, r12.w, l(0.000000)
                sqrt r12.w, r12.w
                mul r13.w, r22.z, r22.z
                mul r13.w, r13.w, l(0.33333334)
                min r13.w, r13.w, l(1.000000)
                dp3 r14.w, r27.xyzx, r27.xyzx
                rsq r14.w, r14.w
                mul r22.xyz, r14.wwww, r27.xyzx
                dp3 r14.w, -r26.xyzx, -r26.xyzx
                rsq r14.w, r14.w
                mul r23.xyz, r14.wwww, -r26.xyzx
                mul r24.xyz, r2.yyyy, r25.xyzx
                mul r22.xyz, r2.yyyy, r22.xyzx
                mul r23.xyz, r2.yyyy, r23.xyzx
                mul r14.w, r10.w, l(-17.000000)
                exp r14.w, r14.w
                add r13.w, r13.w, r14.w
                log r13.w, r13.w
                mul r13.w, r13.w, l(-0.05882353)
                max r10.w, r13.w, l(0.000000)
                mul r23.xyz, r17.wwww, r23.xyzx
                mad r22.xyz, r22.xyzx, r17.zzzz, r23.xyzx
                mad r22.xyz, r24.xyzx, r12.wwww, r22.xyzx
                dp3 r12.w, r22.xyzx, r22.xyzx
                rsq r12.w, r12.w
                mul r22.xyz, r12.wwww, r22.xyzx
                add r12.w, -r11.w, l(1.000000)
                mul r23.xyz, r12.wwww, r19.xyzx
                mad r19.xyz, r22.xyzx, r11.wwww, r23.xyzx
              endif 
              add r12.w, -r11.w, l(1.000000)
              mul r22.xyz, r12.wwww, r18.xyzx
              mad r18.xyz, r21.xyzx, r11.wwww, r22.xyzx
              mul r21.xyz, r12.wwww, r20.xyzx
              mad r20.xyz, r29.xyzx, r11.wwww, r21.xyzx
              mul r13.w, r9.z, r12.w
              mad r9.y, r9.y, r12.w, r11.w
              mad r9.z, r10.w, r11.w, r13.w
            endif 
          endif 
        endif 
      endif 
    endloop 
    mov r14.xyz, r18.xyzx
    mov r15.xyz, r19.xyzx
    mov r16.xyz, r20.xyzx
    mov r17.xy, r9.yzyy
    iadd r8.w, r8.w, l(32)
  endloop 
  mov r11.xyz, r14.xyzx
  mov r12.xyz, r15.xyzx
  mov r13.xyz, r16.xyzx
  mov r10.xy, r17.xyxx
endif 
mov_sat r10.x, r10.x
add r2.y, -r10.x, l(1.000000)
mad r0.xyz, r0.xyzx, r2.yyyy, r11.xyzx
mad r0.w, r0.w, r2.y, r10.x
mad r1.yzw, r1.yyzw, r2.yyyy, r12.xxyz
dp3 r3.x, r1.yzwy, r1.yzwy
rsq r3.x, r3.x
mul r3.xyz, r1.yzwy, r3.xxxx
mad r1.y, r1.x, r2.y, r10.y
mad r4.xyz, r2.yyyy, l(0.080000, 0.080000, 0.080000, 0.000000), r13.xyzx
ld_structured_indexable(structured_buffer, stride=384)(mixed,mixed,mixed,mixed) r1.z, r5.x, l(0), t0.xxxx
add_sat r0.w, r0.w, r1.z
dp3 r1.z, -v6.xyzx, -v6.xyzx
rsq r1.z, r1.z
mul r5.xyz, r1.zzzz, -v6.xyzx
ine r1.w, cb1[92].x, l(0)
utof r6.xy, r2.wzww
dp2 r2.y, r6.yxyy, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r2.y, r2.y
mul r2.xy, r2.xyxx, l(0.00781250, 52.982918, 0.000000, 0.000000)
frc r2.y, r2.y
mad r2.y, r2.y, l(6.28318548), cb1[70].w
sincos r7.x, r8.x, r2.y
dp2 r2.y, r6.xyxx, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r2.y, r2.y
mul r2.y, r2.y, l(52.982918)
frc r2.y, r2.y
mad r2.y, r2.y, l(6.28318548), cb1[70].w
sincos r6.x, r9.x, r2.y
dp3_sat r1.x, r3.xyzx, r5.xyzx
dp3 r2.y, -r5.xyzx, r3.xyzx
add r2.y, r2.y, r2.y
mad r10.xyz, r3.xyzx, -r2.yyyy, -r5.xyzx
mul r2.y, r1.y, l(17.000000)
exp r2.y, r2.y
add r2.y, r2.y, l(2.000000)
div r2.y, l(2.000000), r2.y
sqrt r4.w, r2.y
add r6.yz, -r1.yyxy, l(0.000000, 1.000000, 1.000000, 0.000000)
mul r5.w, r6.y, l(5.000000)
mad r6.w, r6.y, l(5.000000), l(-2.500000)
mul_sat r6.w, r6.w, l(0.400000)
mul r6.w, r6.w, l(100.000000)
mad r7.zw, -r6.yyyy, l(0.000000, 0.000000, 10.000000, 5.000000), l(0.000000, 0.000000, 6.857410, 7.085000)
exp r7.z, r7.z
mul r8.w, r6.y, r5.w
mad r7.w, -r8.w, l(2.015905), r7.w
exp r7.w, r7.w
mul r7.zw, r1.xxxx, r7.zzzw
mul r7.zw, r7.zzzw, l(0.000000, 0.000000, 9.136810, 9.708090)
max r7.z, r7.w, r7.z
max r7.z, r7.z, l(1.268160)
iadd r7.w, cb2[0].y, -cb2[58].x
min r2.x, r2.x, l(15.000000)
ftou r2.x, r2.x
ushr r11.xy, r2.zwzz, l(6, 6, 0, 0)
ishl r11.z, r2.x, l(4)
and r2.x, r7.w, l(-32)
iadd r2.z, -r2.x, r7.w
and r2.w, cb2[0].y, l(-32)
iadd r8.w, -r2.w, cb2[0].y
mov r12.xy, l(0,0,0,0)
mov r13.w, l(0)
mov r14.yz, l(0,0,1.000000,0)
mov r15.xy, l(0,0,0,0)
mov r16.x, l(1.000000)
mov r17.xy, l(0,0,0,0)
mov r18.xy, l(0,0,0,0)
mov r19.xyzw, l(0,0,0,0)
mov r20.yzw, l(0,0,0,0)
mov r9.y, r2.x
loop 
  uge r9.z, r9.y, cb2[0].y
  breakc_nz r9.z
  ushr r12.z, r9.y, l(5)
  iadd r13.xyz, r11.xyzx, r12.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r9.z, r13.xyzw, t7.yzxw
  ieq r9.w, r2.x, r9.y
  bfi r11.w, r2.z, l(0), l(0), r9.z
  movc r9.z, r9.w, r11.w, r9.z
  ieq r9.w, r2.w, r9.y
  ubfe r11.w, r8.w, l(0), r9.z
  movc r9.z, r9.w, r11.w, r9.z
  iadd r9.w, r9.y, cb2[0].x
  mov r21.xyzw, r19.xyzw
  mov r22.xyz, r20.yzwy
  mov r11.w, r9.z
  loop 
    breakc_z r11.w
    firstbit_lo r12.z, r11.w
    ishl r12.w, l(1), r12.z
    and r13.x, r11.w, r12.w
    if_nz r13.x
      xor r11.w, r11.w, r12.w
      iadd r12.w, r9.w, r12.z
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r23.xyzw, r12.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r13.xy, r12.w, l(16), t11.xyxx
      add r23.xyz, r23.xyzx, -v6.xyzx
      mov r13.z, r23.w
      lt r13.xyz, |r23.xyzx|, r13.zxyz
      and r12.w, r13.y, r13.x
      and r12.w, r13.z, r12.w
      if_nz r12.w
        iadd r12.z, r9.y, r12.z
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r23.xyzw, r12.z, l(0), t15.wxyz
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r13.xy, r12.z, l(96), t15.xyxx
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r12.z, l(116), t15.zwxy
        add r25.xyz, -r23.yzwy, v6.xyzx
        and r12.w, r24.w, l(0x0000ffff)
        ubfe r13.z, l(6), l(25), r24.w
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r26.xyzw, r12.w, l(0), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r12.w, l(16), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r12.w, l(32), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r12.w, l(48), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r12.w, l(64), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r12.w, l(80), t16.xyzw
        dp3 r14.w, r26.xyzx, r25.xyzx
        add_sat r14.w, r26.w, r14.w
        dp3 r15.w, r27.xyzx, r25.xyzx
        add_sat r15.w, r27.w, r15.w
        mul r14.w, r14.w, r15.w
        dp3 r15.w, r28.xyzx, r25.xyzx
        add_sat r15.w, r28.w, r15.w
        mul r14.w, r14.w, r15.w
        dp3 r15.w, r29.xyzx, r25.xyzx
        add_sat r15.w, r29.w, r15.w
        mul r14.w, r14.w, r15.w
        dp3 r15.w, r30.xyzx, r25.xyzx
        add_sat r15.w, r30.w, r15.w
        mul r14.w, r14.w, r15.w
        dp3 r15.w, r31.xyzx, r25.xyzx
        add_sat r15.w, r31.w, r15.w
        mul r14.x, r14.w, r15.w
        and r14.w, r13.x, l(1)
        movc r14.xw, r14.wwww, r14.xxxy, r14.zzzx
        mov r15.w, r13.x
        mov r26.xy, r14.xwxx
        mov r16.z, l(1)
        loop 
          ige r16.w, r16.z, r13.z
          breakc_nz r16.w
          iadd r16.w, r12.w, r16.z
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r16.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r16.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r16.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r16.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r16.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r16.w, l(80), t16.xyzw
          dp3 r16.w, r27.xyzx, r25.xyzx
          add_sat r16.w, r27.w, r16.w
          mul r16.w, r16.w, r26.x
          dp3 r17.w, r28.xyzx, r25.xyzx
          add_sat r17.w, r28.w, r17.w
          mul r16.w, r16.w, r17.w
          dp3 r17.w, r29.xyzx, r25.xyzx
          add_sat r17.w, r29.w, r17.w
          mul r16.w, r16.w, r17.w
          dp3 r17.w, r30.xyzx, r25.xyzx
          add_sat r17.w, r30.w, r17.w
          mul r16.w, r16.w, r17.w
          dp3 r17.w, r31.xyzx, r25.xyzx
          add_sat r17.w, r31.w, r17.w
          mul r16.w, r16.w, r17.w
          dp3 r17.w, r32.xyzx, r25.xyzx
          add_sat r17.w, r32.w, r17.w
          mul r26.x, r16.w, r17.w
          ushr r18.w, r15.w, l(2)
          ubfe r23.w, l(1), l(2), r15.w
          and r25.w, r18.w, l(2)
          max r26.z, r26.x, r26.y
          mad r16.w, -r16.w, r17.w, l(1.000000)
          mul r16.w, r16.w, r26.y
          movc r16.y, r25.w, r16.w, r26.z
          movc r26.xy, r23.wwww, r26.xyxx, r16.xyxx
          iadd r16.z, r16.z, l(1)
          mov r15.w, r18.w
        endloop 
        mov_sat r26.y, r26.y
        mul r12.w, r13.y, r26.y
        lt r13.x, l(0.000000), r12.w
        if_nz r13.x
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r12.z, l(16), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r12.z, l(32), t15.yxwz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r12.z, l(48), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r12.z, l(64), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r12.z, l(80), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r12.z, l(132), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r12.z, l(148), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r12.z, l(164), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r12.z, l(180), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r12.z, l(196), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xy, r12.z, l(212), t15.xyxx
          mad r22.z, r26.y, r13.y, r22.z
          mul r12.z, r24.z, r12.w
          mov r24.z, r32.z
          dp3 r12.w, r10.xyzx, r24.xyzx
          dp3 r13.x, r25.xyzx, r24.xyzx
          add r13.x, -r32.w, r13.x
          ge r13.y, r13.x, l(0.000000)
          max r13.x, r6.w, |r13.x|
          movc r13.x, r13.y, r13.x, -r13.x
          max r12.w, -r12.w, l(0.00000010)
          div r12.w, r13.x, r12.w
          min r12.w, |r12.w|, l(131072.000000)
          mov r32.z, r33.z
          dp3 r13.x, r10.xyzx, r32.xyzx
          dp3 r13.y, r25.xyzx, r32.xyzx
          add r13.y, -r33.w, r13.y
          ge r13.z, r13.y, l(0.000000)
          max r13.y, r6.w, |r13.y|
          movc r13.y, r13.z, r13.y, -r13.y
          max r13.x, -r13.x, l(0.00000010)
          div r13.x, r13.y, r13.x
          min r12.w, r12.w, |r13.x|
          mov r33.z, r34.z
          dp3 r13.x, r10.xyzx, r33.xyzx
          dp3 r13.y, r25.xyzx, r33.xyzx
          add r13.y, -r34.w, r13.y
          ge r13.z, r13.y, l(0.000000)
          max r13.y, r6.w, |r13.y|
          movc r13.y, r13.z, r13.y, -r13.y
          max r13.x, -r13.x, l(0.00000010)
          div r13.x, r13.y, r13.x
          min r12.w, r12.w, |r13.x|
          mov r34.z, r35.z
          dp3 r13.x, r10.xyzx, r34.xyzx
          dp3 r13.y, r25.xyzx, r34.xyzx
          add r13.y, -r35.w, r13.y
          ge r13.z, r13.y, l(0.000000)
          max r13.y, r6.w, |r13.y|
          movc r13.y, r13.z, r13.y, -r13.y
          max r13.x, -r13.x, l(0.00000010)
          div r13.x, r13.y, r13.x
          min r12.w, r12.w, |r13.x|
          mov r35.z, r36.x
          dp3 r13.x, r10.xyzx, r35.xyzx
          dp3 r13.y, r25.xyzx, r35.xyzx
          add r13.y, -r36.y, r13.y
          ge r13.z, r13.y, l(0.000000)
          max r13.y, r6.w, |r13.y|
          movc r13.y, r13.z, r13.y, -r13.y
          max r13.x, -r13.x, l(0.00000010)
          div r13.x, r13.y, r13.x
          min r12.w, r12.w, |r13.x|
          mov r37.zw, r36.zzzw
          dp3 r13.x, r10.zxyz, r37.xzwx
          dp3 r13.y, r25.zxyz, r37.xzwx
          add r13.y, -r37.y, r13.y
          ge r13.z, r13.y, l(0.000000)
          max r13.y, r6.w, |r13.y|
          movc r13.y, r13.z, r13.y, -r13.y
          max r13.x, -r13.x, l(0.00000010)
          div r13.x, r13.y, r13.x
          min r12.w, r12.w, |r13.x|
          mov r13.x, r29.w
          mov r13.yz, r30.zzwz
          add r13.xyz, r25.xyzx, r13.xyzx
          mad r13.xyz, r10.xyzx, r12.wwww, r13.xyzx
          dp3 r14.x, r13.xyzx, r13.xyzx
          sqrt r14.x, r14.x
          div r12.w, r12.w, r14.x
          add r12.w, r12.w, r12.w
          sqrt r12.w, r12.w
          mad r12.w, r6.y, l(5.000000), r12.w
          add r12.w, r12.w, l(-0.844800)
          mov r23.y, r27.z
          mov r23.z, r28.x
          dp3 r32.x, r13.xyzx, r23.xyzx
          mov r24.xy, r27.xwxx
          mov r24.z, r28.w
          dp3 r32.y, r13.xyzx, r24.xyzx
          mov r28.x, r27.y
          dp3 r32.z, r13.xyzx, r28.xyzx
          ubfe r13.x, l(9), l(16), r24.w
          utof r32.w, r13.x
          sample_l_indexable(texturecubearray)(float,float,float,float) r13.xyz, r32.xyzw, t8.xyzw, s2, r12.w
          dp3 r27.x, r25.xyzx, r23.xyzx
          dp3 r27.y, r25.xyzx, r24.xyzx
          dp3 r27.z, r25.xyzx, r28.xyzx
          mad_sat r16.yzw, r27.xxyz, r29.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
          mov r30.z, r31.x
          mad r16.yzw, r16.yyzw, r30.xxyz, r31.yyzw
          dp3 r32.x, r3.xyzx, r23.xyzx
          dp3 r32.y, r3.xyzx, r24.xyzx
          dp3 r32.z, r3.xyzx, r28.xyzx
          lt r23.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r32.xyzx
          movc r15.z, r23.x, l(0), l(0.500000)
          add r24.xyz, r15.xyzx, r16.yzwy
          sample_l_indexable(texture3d)(float,float,float,float) r24.xyz, r24.xyzx, t17.xyzw, s4, l(0.000000)
          mul r25.xyz, r32.xyzx, r32.xyzx
          mul r25.xyz, r12.zzzz, r25.xyzx
          movc r17.z, r23.y, l(0), l(0.500000)
          add r23.xyw, r16.yzyw, r17.xyxz
          sample_l_indexable(texture3d)(float,float,float,float) r23.xyw, r23.xywx, t18.xywz, s4, l(0.000000)
          mul r23.xyw, r25.yyyy, r23.xyxw
          mad r23.xyw, r24.xyxz, r25.xxxx, r23.xyxw
          movc r18.z, r23.z, l(0), l(0.500000)
          add r16.yzw, r16.yyzw, r18.xxyz
          sample_l_indexable(texture3d)(float,float,float,float) r16.yzw, r16.yzwy, t19.wxyz, s4, l(0.000000)
          mad r16.yzw, r16.yyzw, r25.zzzz, r23.xxyw
          sample_l_indexable(texturecubearray)(float,float,float,float) r23.xyz, r32.xyzw, t8.xyzw, s2, l(6.000000)
          mul r24.xyz, r16.yzwy, r23.xyzx
          dp3 r12.w, r24.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r21.xyz, r16.yzwy, r23.xyzx, r21.xyzx
          mul r14.x, r7.z, r12.w
          mul r13.xyz, r12.zzzz, r13.xyzx
          dp3 r12.z, r13.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r12.z, r7.z, r12.w, r12.z
          div r12.z, r14.x, r12.z
          mov r23.x, r21.w
          mov r23.yz, r22.xxyx
          mad r22.xyw, r13.yzyx, r12.zzzz, r23.yzyx
          mov r21.w, r22.w
        endif 
      endif 
    endif 
  endloop 
  mov r19.xyzw, r21.xyzw
  mov r20.yzw, r22.xxyz
  iadd r9.y, r9.y, l(32)
endloop 
lt r2.w, r20.w, l(1.000000)
if_nz r2.w
  mov r12.xy, l(0,0,0,0)
  mov r13.w, l(0)
  mov r14.yz, l(0,0,1.000000,0)
  mov r15.xy, l(0,0,0,0)
  mov r16.x, l(1.000000)
  mov r17.xy, l(0,0,0,0)
  mov r18.xy, l(0,0,0,0)
  mov r21.x, r19.w
  mov r21.yzw, r20.yyzw
  mov r9.yzw, r19.xxyz
  mov r2.w, r20.w
  mov r8.w, l(0)
  loop 
    uge r11.w, r8.w, r7.w
    breakc_nz r11.w
    ushr r12.z, r8.w, l(5)
    iadd r13.xyz, r11.xyzx, r12.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r11.w, r13.xyzw, t7.yzwx
    ieq r12.z, r2.x, r8.w
    ubfe r12.w, r2.z, l(0), r11.w
    movc r11.w, r12.z, r12.w, r11.w
    iadd r12.z, r8.w, cb2[0].x
    mov r22.xyzw, r21.xyzw
    mov r13.xyz, r9.yzwy
    mov r12.w, r2.w
    mov r14.w, r11.w
    loop 
      breakc_z r14.w
      firstbit_lo r15.w, r14.w
      ishl r16.z, l(1), r15.w
      and r16.w, r14.w, r16.z
      if_nz r16.w
        xor r14.w, r14.w, r16.z
        iadd r16.z, r12.z, r15.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r23.xyzw, r16.z, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r24.xy, r16.z, l(16), t11.xyxx
        add r23.xyz, r23.xyzx, -v6.xyzx
        mov r24.z, r23.w
        lt r23.xyz, |r23.xyzx|, r24.zxyz
        and r16.z, r23.y, r23.x
        and r16.z, r23.z, r16.z
        if_nz r16.z
          iadd r15.w, r8.w, r15.w
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r23.xyzw, r15.w, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r16.zw, r15.w, l(96), t15.xxxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r15.w, l(116), t15.zwxy
          add r25.xyz, -r23.yzwy, v6.xyzx
          and r17.w, r24.w, l(0x0000ffff)
          ubfe r18.w, l(6), l(25), r24.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r26.xyzw, r17.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r17.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r17.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r17.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r17.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r17.w, l(80), t16.xyzw
          dp3 r23.w, r26.xyzx, r25.xyzx
          add_sat r23.w, r26.w, r23.w
          dp3 r25.w, r27.xyzx, r25.xyzx
          add_sat r25.w, r27.w, r25.w
          mul r23.w, r23.w, r25.w
          dp3 r25.w, r28.xyzx, r25.xyzx
          add_sat r25.w, r28.w, r25.w
          mul r23.w, r23.w, r25.w
          dp3 r25.w, r29.xyzx, r25.xyzx
          add_sat r25.w, r29.w, r25.w
          mul r23.w, r23.w, r25.w
          dp3 r25.w, r30.xyzx, r25.xyzx
          add_sat r25.w, r30.w, r25.w
          mul r23.w, r23.w, r25.w
          dp3 r25.w, r31.xyzx, r25.xyzx
          add_sat r25.w, r31.w, r25.w
          mul r14.x, r23.w, r25.w
          and r23.w, r16.z, l(1)
          movc r26.xy, r23.wwww, r14.xyxx, r14.zxzz
          mov r14.x, r16.z
          mov r27.xy, r26.xyxx
          mov r23.w, l(1)
          loop 
            ige r25.w, r23.w, r18.w
            breakc_nz r25.w
            iadd r25.w, r17.w, r23.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r25.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r25.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r25.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r25.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r25.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r25.w, l(80), t16.xyzw
            dp3 r25.w, r28.xyzx, r25.xyzx
            add_sat r25.w, r28.w, r25.w
            mul r25.w, r25.w, r27.x
            dp3 r26.z, r29.xyzx, r25.xyzx
            add_sat r26.z, r29.w, r26.z
            mul r25.w, r25.w, r26.z
            dp3 r26.z, r30.xyzx, r25.xyzx
            add_sat r26.z, r30.w, r26.z
            mul r25.w, r25.w, r26.z
            dp3 r26.z, r31.xyzx, r25.xyzx
            add_sat r26.z, r31.w, r26.z
            mul r25.w, r25.w, r26.z
            dp3 r26.z, r32.xyzx, r25.xyzx
            add_sat r26.z, r32.w, r26.z
            mul r25.w, r25.w, r26.z
            dp3 r26.z, r33.xyzx, r25.xyzx
            add_sat r26.z, r33.w, r26.z
            mul r27.x, r25.w, r26.z
            ushr r26.w, r14.x, l(2)
            ubfe r27.z, l(1), l(2), r14.x
            and r27.w, r26.w, l(2)
            max r28.x, r27.x, r27.y
            mad r25.w, -r25.w, r26.z, l(1.000000)
            mul r25.w, r25.w, r27.y
            movc r16.y, r27.w, r25.w, r28.x
            movc r27.xy, r27.zzzz, r27.xyxx, r16.xyxx
            iadd r23.w, r23.w, l(1)
            mov r14.x, r26.w
          endloop 
          add_sat r14.x, -r12.w, r27.y
          mul r16.y, r16.w, r14.x
          lt r16.z, l(0.000000), r16.y
          if_nz r16.z
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r15.w, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r15.w, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r15.w, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r15.w, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r15.w, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r15.w, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r15.w, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r15.w, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r15.w, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r15.w, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xy, r15.w, l(212), t15.xyxx
            mad r22.w, r14.x, r16.w, r22.w
            mul r14.x, r24.z, r16.y
            mov r24.z, r32.z
            dp3 r15.w, r10.xyzx, r24.xyzx
            dp3 r16.y, r25.xyzx, r24.xyzx
            add r16.y, -r32.w, r16.y
            ge r16.z, r16.y, l(0.000000)
            max r16.y, r6.w, |r16.y|
            movc r16.y, r16.z, r16.y, -r16.y
            max r15.w, -r15.w, l(0.00000010)
            div r15.w, r16.y, r15.w
            min r15.w, |r15.w|, l(131072.000000)
            mov r32.z, r33.z
            dp3 r16.y, r10.xyzx, r32.xyzx
            dp3 r16.z, r25.xyzx, r32.xyzx
            add r16.z, -r33.w, r16.z
            ge r16.w, r16.z, l(0.000000)
            max r16.z, r6.w, |r16.z|
            movc r16.z, r16.w, r16.z, -r16.z
            max r16.y, -r16.y, l(0.00000010)
            div r16.y, r16.z, r16.y
            min r15.w, r15.w, |r16.y|
            mov r33.z, r34.z
            dp3 r16.y, r10.xyzx, r33.xyzx
            dp3 r16.z, r25.xyzx, r33.xyzx
            add r16.z, -r34.w, r16.z
            ge r16.w, r16.z, l(0.000000)
            max r16.z, r6.w, |r16.z|
            movc r16.z, r16.w, r16.z, -r16.z
            max r16.y, -r16.y, l(0.00000010)
            div r16.y, r16.z, r16.y
            min r15.w, r15.w, |r16.y|
            mov r34.z, r35.z
            dp3 r16.y, r10.xyzx, r34.xyzx
            dp3 r16.z, r25.xyzx, r34.xyzx
            add r16.z, -r35.w, r16.z
            ge r16.w, r16.z, l(0.000000)
            max r16.z, r6.w, |r16.z|
            movc r16.z, r16.w, r16.z, -r16.z
            max r16.y, -r16.y, l(0.00000010)
            div r16.y, r16.z, r16.y
            min r15.w, r15.w, |r16.y|
            mov r35.z, r36.x
            dp3 r16.y, r10.xyzx, r35.xyzx
            dp3 r16.z, r25.xyzx, r35.xyzx
            add r16.z, -r36.y, r16.z
            ge r16.w, r16.z, l(0.000000)
            max r16.z, r6.w, |r16.z|
            movc r16.z, r16.w, r16.z, -r16.z
            max r16.y, -r16.y, l(0.00000010)
            div r16.y, r16.z, r16.y
            min r15.w, r15.w, |r16.y|
            mov r37.zw, r36.zzzw
            dp3 r16.y, r10.zxyz, r37.xzwx
            dp3 r16.z, r25.zxyz, r37.xzwx
            add r16.z, -r37.y, r16.z
            ge r16.w, r16.z, l(0.000000)
            max r16.z, r6.w, |r16.z|
            movc r16.z, r16.w, r16.z, -r16.z
            max r16.y, -r16.y, l(0.00000010)
            div r16.y, r16.z, r16.y
            min r15.w, r15.w, |r16.y|
            mov r24.x, r29.w
            mov r24.yz, r30.zzwz
            add r16.yzw, r25.xxyz, r24.xxyz
            mad r16.yzw, r10.xxyz, r15.wwww, r16.yyzw
            dp3 r17.w, r16.yzwy, r16.yzwy
            sqrt r17.w, r17.w
            div r15.w, r15.w, r17.w
            add r15.w, r15.w, r15.w
            sqrt r15.w, r15.w
            mad r15.w, r6.y, l(5.000000), r15.w
            add r15.w, r15.w, l(-0.844800)
            mov r23.y, r26.z
            mov r23.z, r28.x
            dp3 r32.x, r16.yzwy, r23.xyzx
            mov r24.xy, r26.xwxx
            mov r24.z, r28.w
            dp3 r32.y, r16.yzwy, r24.xyzx
            mov r28.x, r26.y
            dp3 r32.z, r16.yzwy, r28.xyzx
            ubfe r16.y, l(9), l(16), r24.w
            utof r32.w, r16.y
            sample_l_indexable(texturecubearray)(float,float,float,float) r16.yzw, r32.xyzw, t8.wxyz, s2, r15.w
            dp3 r26.x, r25.xyzx, r23.xyzx
            dp3 r26.y, r25.xyzx, r24.xyzx
            dp3 r26.z, r25.xyzx, r28.xyzx
            mad_sat r25.xyz, r26.xyzx, r29.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
            mov r30.z, r31.x
            mad r25.xyz, r25.xyzx, r30.xyzx, r31.yzwy
            dp3 r32.x, r3.xyzx, r23.xyzx
            dp3 r32.y, r3.xyzx, r24.xyzx
            dp3 r32.z, r3.xyzx, r28.xyzx
            lt r23.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r32.xyzx
            movc r15.z, r23.x, l(0), l(0.500000)
            add r24.xyz, r15.xyzx, r25.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r24.xyz, r24.xyzx, t17.xyzw, s4, l(0.000000)
            mul r26.xyz, r32.xyzx, r32.xyzx
            mul r26.xyz, r14.xxxx, r26.xyzx
            movc r17.z, r23.y, l(0), l(0.500000)
            add r23.xyw, r17.xyxz, r25.xyxz
            sample_l_indexable(texture3d)(float,float,float,float) r23.xyw, r23.xywx, t18.xywz, s4, l(0.000000)
            mul r23.xyw, r26.yyyy, r23.xyxw
            mad r23.xyw, r24.xyxz, r26.xxxx, r23.xyxw
            movc r18.z, r23.z, l(0), l(0.500000)
            add r24.xyz, r18.xyzx, r25.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r24.xyz, r24.xyzx, t19.xyzw, s4, l(0.000000)
            mad r23.xyz, r24.xyzx, r26.zzzz, r23.xywx
            sample_l_indexable(texturecubearray)(float,float,float,float) r24.xyz, r32.xyzw, t8.xyzw, s2, l(6.000000)
            mul r25.xyz, r23.xyzx, r24.xyzx
            dp3 r15.z, r25.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r13.xyz, r23.xyzx, r24.xyzx, r13.xyzx
            mul r15.w, r7.z, r15.z
            mul r16.yzw, r14.xxxx, r16.yyzw
            dp3 r14.x, r16.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r14.x, r7.z, r15.z, r14.x
            div r14.x, r15.w, r14.x
            mad r22.xyz, r16.yzwy, r14.xxxx, r22.xyzx
          endif 
        endif 
      endif 
    endloop 
    mov r21.xyzw, r22.xyzw
    mov r9.yzw, r13.xxyz
    iadd r8.w, r8.w, l(32)
  endloop 
  mov r20.xyzw, r21.zxyw
  mov r19.xyz, r9.yzwy
  mov r20.xyzw, r20.yzxw
else 
  mov r20.x, r19.w
endif 
max r2.x, r20.w, l(1.000000)
rcp r2.x, r2.x
mov_sat r20.w, r20.w
mul r12.xyz, r2.xxxx, r19.xyzx
mul r9.yzw, r2.xxxx, r20.xxyz
lt r2.z, r20.w, l(0.990000)
if_nz r2.z
  add r2.z, -r20.w, l(1.000000)
  mul r2.w, r2.z, cb2[19].x
  add r13.xyz, v6.xyzx, -cb2[35].xyzx
  mul r14.x, r13.x, cb2[35].w
  mul r14.yz, r13.yyzy, cb2[36].xxyx
  add_sat r13.xyz, r14.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mul r14.xy, r13.xyxx, cb2[36].zwzz
  mul r14.z, r13.z, cb2[37].x
  add r13.xyz, r14.xyzx, cb2[37].yzwy
  lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r3.xyzx
  movc r14.xyz, r14.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
  mov r14.w, l(0)
  add r15.xyz, r13.xyzx, r14.wwxw
  sample_l_indexable(texture3d)(float,float,float,float) r15.xyz, r15.xyzx, t17.xyzw, s4, l(0.000000)
  mul r16.xyz, r3.xyzx, r3.xyzx
  mul r16.xyz, r2.wwww, r16.xyzx
  add r17.xyz, r13.xyzx, r14.wwyw
  sample_l_indexable(texture3d)(float,float,float,float) r17.xyz, r17.xyzx, t18.xyzw, s4, l(0.000000)
  mul r17.xyz, r16.yyyy, r17.xyzx
  mad r15.xyz, r15.xyzx, r16.xxxx, r17.xyzx
  add r13.xyz, r13.xyzx, r14.wwzw
  sample_l_indexable(texture3d)(float,float,float,float) r13.xyz, r13.xyzx, t19.xyzw, s4, l(0.000000)
  mad r13.xyz, r13.xyzx, r16.zzzz, r15.xyzx
  mov r3.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r14.xyz, r3.xyzw, t8.xyzw, s2, l(6.000000)
  mul r13.xyz, r13.xyzx, r14.xyzx
  dp3 r2.w, r13.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  mad r12.xyz, r19.xyzx, r2.xxxx, r13.xyzx
  mov r10.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r13.xyz, r10.xyzw, t8.xyzw, s2, r5.w
  mad r2.x, cb2[19].x, r2.z, -r2.w
  mad r2.x, r1.y, r2.x, r2.w
  mad r9.yzw, r13.xxyz, r2.xxxx, r9.yyzw
endif 
mad r2.xz, r1.xxyx, l(0.984375, 0.000000, 0.984375, 0.000000), l(0.00781250, 0.000000, 0.00781250, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r2.xz, r2.xzxx, t5.xzyw, s2, l(0.000000)
mul r13.xyz, r2.xxxx, r9.zwyz
mul r2.xzw, r2.zzzz, r9.yyzw
sqrt r1.y, r4.w
mad r1.y, r1.y, l(0.500000), l(0.500000)
mul r1.y, r1.y, r1.y
mul r3.w, r1.y, l(0.500000)
mad r1.y, -r1.y, l(0.500000), l(1.000000)
mad r5.w, r1.x, r1.y, r3.w
mul r1.y, r1.y, r5.w
mul r3.w, r3.w, r5.w
dp3 r5.w, r3.xyzx, cb2[17].xyzx
mov_sat r6.y, r5.w
ge r6.w, l(0.000000), r6.y
if_nz r6.w
  mov r7.z, l(0)
endif 
if_z r6.w
  mul r9.yzw, v6.yyyy, cb2[29].xxyz
  mad r9.yzw, v6.xxxx, cb2[28].xxyz, r9.yyzw
  mad r9.yzw, v6.zzzz, cb2[30].xxyz, r9.yyzw
  add r9.yzw, r9.yyzw, cb2[31].xxyz
  add r6.w, r9.w, -cb2[17].w
  mad r6.w, -r6.w, l(0.00006104), l(1.000000)
  mov_sat r7.w, r6.w
  eq r7.w, r6.w, r7.w
  if_nz r7.w
    mov r7.w, l(0)
    mov r8.w, l(0)
    loop 
      ge r10.w, r7.w, l(3.000000)
      breakc_nz r10.w
      ftou r10.w, r7.w
      add r14.xy, r9.yzyy, -cb2[r10.w + 20].xyxx
      max r11.w, |r14.y|, |r14.x|
      mul r8.w, r11.w, cb2[r10.w + 20].z
      lt r10.w, r8.w, l(1.000000)
      if_nz r10.w
        break 
      endif 
      add r7.w, r7.w, l(1.000000)
      mov r8.w, l(0)
    endloop 
  else 
    mov r7.w, l(3.000000)
    mov r8.w, l(0)
  endif 
  ge r10.w, r7.w, l(3.000000)
  if_nz r10.w
    mul r14.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
    rcp r15.xz, r14.xxxx
    mov r15.y, -r15.z
    mad r14.xyz, r9.yzyy, r15.xyzx, r14.yzyy
    add r15.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r14.xyz, r14.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r14.xyz, r15.xyzx, r14.xyzx
    mul r15.xy, r14.zyzz, cb2[32].xxxx
    round_ni r15.xy, r15.xyxx
    mul r11.w, r15.y, cb2[27].x
    mad r11.w, r11.w, cb2[32].x, r15.x
    ftou r11.w, r11.w
    iadd r11.w, r11.w, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r14.w, r11.w, l(0), t23.xxxx
    and r15.x, r14.w, l(0x40000000)
    ishl r15.y, r14.w, l(2)
    if_z r15.x
      and r15.x, r14.w, l(0x01ffffff)
      iadd r16.x, r11.w, r15.x
      ushr r11.w, r14.w, l(25)
      utof r11.w, r11.w
      mul r14.xyz, r11.wwww, r14.xyzx
      frc r14.xyz, r14.xyzx
      mul r14.xyz, r14.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
      ftou r14.xyz, r14.xyzx
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.z, r16.x, l(0), t23.xxxx
      ushr r15.xz, r14.zzyz, l(6, 0, 6, 0)
      and r11.w, r16.z, l(0xc0000000)
      iadd r14.w, r16.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r14.w, r14.w, l(0), t23.xxxx
      movc r14.w, r15.z, r16.z, r14.w
      ushr r15.z, r14.w, l(13)
      movc r14.w, r15.x, r15.z, r14.w
      and r14.w, r14.w, l(8191)
      iadd r17.x, r14.w, r16.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.z, r17.x, l(0), t23.xxxx
      mov r16.y, l(0)
      mov r17.y, l(1)
      movc r15.xzw, r11.wwww, r16.xxyz, r17.xxyz
      movc r17.yz, r11.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r18.xy, r14.zyzz, r17.yyyy
      and r18.xy, r18.xyxx, l(1, 1, 0, 0)
      and r14.w, r15.w, l(0xc0000000)
      iadd r16.w, r15.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.w, r16.w, l(0), t23.xxxx
      movc r16.w, r18.y, r15.w, r16.w
      ushr r17.y, r16.w, l(13)
      movc r16.w, r18.x, r17.y, r16.w
      and r16.w, r16.w, l(8191)
      iadd r17.x, r15.x, r16.w
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.w, r17.x, l(0), t23.xxxx
      movc r15.xzw, r14.wwww, r15.xxzw, r17.xxzw
      movc r15.xzw, r11.wwww, r16.xxyz, r15.xxzw
      and r11.w, r15.w, l(0xc0000000)
      if_z r11.w
        iadd r11.w, -r15.z, l(6)
        ushr r16.xy, r14.zyzz, r11.wwww
        or r11.w, r15.w, l(0x40000000)
        bfi r14.w, l(1), l(1), r16.y, l(0)
        bfi r14.w, l(1), l(0), r16.x, r14.w
        imul null, r14.w, r14.w, l(10)
        ushr r11.w, r11.w, r14.w
        and r11.w, r11.w, l(1023)
        iadd r16.x, r11.w, r15.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.w, r16.x, l(0), t23.xxxx
        iadd r16.yz, r15.zzzz, l(0, 1, 2, 0)
        iadd r11.w, -r16.y, l(6)
        ushr r17.xy, r14.zyzz, r11.wwww
        and r11.w, r16.w, l(0xc0000000)
        or r14.w, r16.w, l(0x40000000)
        bfi r15.z, l(1), l(1), r17.y, l(0)
        bfi r15.z, l(1), l(0), r17.x, r15.z
        imul null, r15.z, r15.z, l(10)
        ushr r14.w, r14.w, r15.z
        and r14.w, r14.w, l(1023)
        iadd r17.x, r14.w, r16.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.z, r17.x, l(0), t23.xxxx
        mov r17.y, r16.z
        movc r17.xyz, r11.wwww, r16.xywx, r17.xyzx
        iadd r14.w, -r17.y, l(6)
        ushr r16.yz, r14.zzyz, r14.wwww
        and r14.w, r17.z, l(0xc0000000)
        or r15.z, r17.z, l(0x40000000)
        bfi r16.z, l(1), l(1), r16.z, l(0)
        bfi r16.y, l(1), l(0), r16.y, r16.z
        imul null, r16.y, r16.y, l(10)
        ushr r15.z, r15.z, r16.y
        and r15.z, r15.z, l(1023)
        iadd r18.x, r15.z, r17.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.y, r18.x, l(0), t23.xxxx
        movc r16.yz, r14.wwww, r17.xxzx, r18.xxyx
        movc r15.xw, r11.wwww, r16.xxxw, r16.yyyz
      endif 
      and r11.w, r15.w, l(0xc0000000)
      if_z r11.w
        ubfe r14.w, l(14), l(15), r15.w
        utof r14.w, r14.w
        mul r14.w, r14.w, cb2[27].w
        mul r14.w, r14.w, l(0.00006104)
        and r16.xy, r15.wwww, l(0x00007fff, 0x20000000, 0, 0)
        utof r15.z, r16.x
        mul r15.z, r15.z, cb2[27].w
        mul r15.z, r15.z, l(0.00003052)
        and r16.x, r14.y, l(3)
        iadd r16.x, r15.x, r16.x
        iadd r16.x, r16.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.x, r16.x, l(0), t23.xxxx
        bfi r17.xyz, l(2, 2, 1, 0), l(3, 1, 4, 0), r14.xyzx, l(0, 0, 0, 0)
        ushr r14.x, r16.x, r17.x
        and r14.x, r14.x, l(255)
        utof r14.x, r14.x
        mul r14.x, r15.z, r14.x
        mad r14.x, r14.x, l(0.00392157), r14.w
        iadd r14.y, r17.y, l(1)
        ubfe r14.z, l(1), l(1), r14.z
        iadd r14.y, r14.z, r14.y
        iadd r14.y, r14.y, r15.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r14.y, r14.y, l(0), t23.xxxx
        ushr r14.y, r14.y, r17.z
        and r14.y, r14.y, l(0x0000ffff)
        utof r14.y, r14.y
        mul r14.y, r15.z, r14.y
        mad r14.y, r14.y, l(0.00001526), r14.w
        movc r15.y, r16.y, r14.x, r14.y
      else 
        and r14.x, r15.w, l(0x80000000)
        iadd r14.y, r15.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r14.y, r14.y, l(0), t23.xxxx
        movc r14.x, r14.x, r14.y, l(0)
        ishl r14.y, r15.w, l(2)
        ushr r14.z, r14.x, l(16)
        and r14.x, r14.x, l(0x0000ffff)
        f16tof32 r14.xz, r14.xxzx
        mad r14.y, r9.y, r14.z, r14.y
        mad r14.x, r9.z, r14.x, r14.y
        movc r15.y, r11.w, r14.x, r15.y
      endif 
    endif 
    mad r9.w, -cb2[27].z, l(2.000000), r9.w
    lt r9.w, r15.y, r9.w
    movc r7.z, r9.w, l(0), l(1.000000)
  endif 
  if_z r10.w
    if_z cb2[58].y
      ftou r9.w, r7.w
      add r14.xy, r9.yzyy, -cb2[r9.w + 20].xyxx
      mul r14.xy, r14.xyxx, cb2[r9.w + 20].zzzz
      mad r14.xy, r14.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r9.w, cb2[26].y
      add r14.z, r7.w, r9.w
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r9.w, r14.xyzx, t13.xxxx, s13, r6.w
      sample_l_indexable(texture2darray)(float,float,float,float) r10.w, r14.xyzx, t31.yzwx, s0, l(0.000000)
      add r9.w, r9.w, r10.w
      add_sat r9.w, r9.w, l(-1.000000)
      mul r10.w, r9.w, r9.w
      mul r7.z, r9.w, r10.w
    endif 
    if_nz cb2[58].y
      mov r14.x, -r7.x
      ftou r9.w, r7.w
      add r7.w, r7.w, l(1.000000)
      min r7.w, r7.w, l(2.000000)
      ftou r7.w, r7.w
      add r8.w, -r8.w, l(1.000000)
      mul r8.w, r8.w, l(28.000000)
      ftou r8.w, r8.w
      add r15.xy, r9.yzyy, -cb2[r9.w + 20].xyxx
      mul r15.xy, r15.xyxx, cb2[r9.w + 20].zzzz
      mad r15.xy, r15.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      add r9.yz, r9.yyzy, -cb2[r7.w + 20].xxyx
      mul r9.yz, r9.yyzy, cb2[r7.w + 20].zzzz
      mad r9.yz, r9.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      mov r14.y, r8.x
      mov r14.z, r7.x
      mov r10.w, l(0)
      mov r11.w, l(0)
      loop 
        uge r14.w, r11.w, l(8)
        breakc_nz r14.w
        ult r14.w, r8.w, r11.w
        movc r15.zw, r14.wwww, r9.yyyz, r15.xxxy
        movc r16.x, r14.w, cb2[r7.w + 20].w, cb2[r9.w + 20].w
        movc r14.w, r14.w, r7.w, r9.w
        dp2 r17.x, icb[r11.w + 0].yxyy, r14.xyxx
        dp2 r17.y, icb[r11.w + 0].yxyy, r14.yzyy
        mad r16.xy, r17.xyxx, r16.xxxx, r15.zwzz
        iadd r14.w, r14.w, cb2[26].y
        utof r16.z, r14.w
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r14.w, r16.xyzx, t13.xxxx, s13, r6.w
        sample_l_indexable(texture2darray)(float,float,float,float) r15.z, r16.xyzx, t31.yzxw, s0, l(0.000000)
        add r14.w, r14.w, r15.z
        add_sat r14.w, r14.w, l(-1.000000)
        mad r10.w, r14.w, l(0.125000), r10.w
        iadd r11.w, r11.w, l(1)
      endloop 
      mul r6.w, r10.w, r10.w
      mul r7.z, r10.w, r6.w
    endif 
  endif 
endif 
lt r6.w, l(0.000000), r6.y
if_nz r6.w
  lt r6.w, l(0.000000), r7.z
  if_nz r6.w
    mul r6.w, r2.y, cb2[18].w
    mul r6.w, r6.y, r6.w
    if_nz cb2[23].x
      add r14.xyz, v6.xyzx, cb1[24].xyzx
      mov r14.w, l(1.000000)
      dp4 r7.w, cb2[24].xyzw, r14.xyzw
      dp4 r8.w, cb2[25].xyzw, r14.xyzw
      frc r14.x, r7.w
      frc r14.y, r8.w
      iadd r7.w, l(-1), cb2[23].x
      utof r14.z, r7.w
      sample_l_indexable(texture2darray)(float,float,float,float) r9.yzw, r14.xyzx, t20.wxyz, s2, l(0.000000)
      add r9.yzw, r9.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
      mad r9.yzw, cb2[23].yyyy, r9.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
      mul r9.yzw, r9.yyzw, cb2[18].xxyz
    else 
      mov r9.yzw, cb2[18].xxyz
    endif 
    ushr r7.w, cb2[53].x, l(16)
    ult r8.w, l(0), r7.w
    and r8.w, r1.w, r8.w
    if_nz r8.w
      iadd r7.w, r7.w, cb2[0].x
      iadd r7.w, r7.w, l(-1)
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r8.w, r7.w, l(52), t12.xxxx
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.xyzw, r7.w, l(68), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r7.w, l(84), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r7.w, l(132), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r7.w, l(148), t12.xyzw
      mad r10.w, |r5.w|, l(-0.200000), l(0.400000)
      mad r18.xyz, r3.xyzx, r10.wwww, v6.xyzx
      mov r18.w, l(1.000000)
      dp4 r14.x, r14.xyzw, r18.xyzw
      dp4 r14.y, r15.xyzw, r18.xyzw
      mad r14.xy, r14.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      add r14.xy, r17.zwzz, r14.xyxx
      mul r14.xy, r17.xyxx, r14.xyxx
      div r14.zw, r8.wwww, r16.xxxz
      add r15.xy, -r14.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
      ge r15.xy, r14.xyxx, r15.xyxx
      ge r14.zw, r14.zzzw, r14.xxxy
      or r14.zw, r14.zzzw, r15.xxxy
      or r10.w, r14.w, r14.z
      if_z r10.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r10.w, r7.w, l(28), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r7.w, l(100), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.zw, r7.w, l(164), t12.xxxy
        dp4 r7.w, r15.xyzw, r18.xyzw
        mov_sat r14.xy, r14.xyxx
        mad r15.xy, r14.xyxx, r16.xzxx, r16.ywyy
        add r7.w, r14.z, r7.w
        div r7.w, r7.w, r14.w
        max r7.w, r7.w, l(0.00006104)
        and r10.w, r10.w, l(0x0000ffff)
        if_nz cb2[58].y
          mov r14.x, -r7.x
          utof r16.z, r10.w
          mov r14.y, r8.x
          mov r14.z, r7.x
          mov r11.w, l(0)
          mov r14.w, l(0)
          loop 
            ige r15.w, r14.w, l(8)
            breakc_nz r15.w
            dp2 r17.x, icb[r14.w + 0].yxyy, r14.xyxx
            dp2 r17.y, icb[r14.w + 0].yxyy, r14.yzyy
            mad r16.xy, r17.xyxx, r8.wwww, r15.xyxx
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r15.w, r16.xyzx, t9.xxxx, s13, r7.w
            mad r11.w, r15.w, l(0.125000), r11.w
            iadd r14.w, r14.w, l(1)
          endloop 
        else 
          utof r15.z, r10.w
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r11.w, r15.xyzx, t9.xxxx, s13, r7.w
        endif 
        mul r7.w, r11.w, r11.w
        mul r7.w, r11.w, r7.w
      else 
        mov r7.w, l(1.000000)
      endif 
      mul r7.z, r7.w, r7.z
    else 
      and r7.w, cb2[53].x, l(0x0000ffff)
      ult r8.w, l(0), r7.w
      not r10.w, r1.w
      and r8.w, r8.w, r10.w
      if_nz r8.w
        iadd r7.w, r7.w, cb2[0].x
        iadd r7.w, r7.w, l(-1)
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r8.w, r7.w, l(52), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.xyzw, r7.w, l(68), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r7.w, l(84), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r7.w, l(132), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r7.w, l(148), t12.xyzw
        mad r10.w, |r5.w|, l(-0.200000), l(0.400000)
        mad r18.xyz, r3.xyzx, r10.wwww, v6.xyzx
        mov r18.w, l(1.000000)
        dp4 r14.x, r14.xyzw, r18.xyzw
        dp4 r14.y, r15.xyzw, r18.xyzw
        mad r14.xy, r14.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
        add r14.xy, r17.zwzz, r14.xyxx
        mul r14.xy, r17.xyxx, r14.xyxx
        div r14.zw, r8.wwww, r16.xxxz
        add r15.xy, -r14.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
        ge r15.xy, r14.xyxx, r15.xyxx
        ge r14.zw, r14.zzzw, r14.xxxy
        or r14.zw, r14.zzzw, r15.xxxy
        or r10.w, r14.w, r14.z
        if_z r10.w
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r10.w, r7.w, l(28), t12.xxxx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r7.w, l(100), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.zw, r7.w, l(164), t12.xxxy
          dp4 r7.w, r15.xyzw, r18.xyzw
          mov_sat r14.xy, r14.xyxx
          mad r15.xy, r14.xyxx, r16.xzxx, r16.ywyy
          add r7.w, r14.z, r7.w
          div r7.w, r7.w, r14.w
          max r7.w, r7.w, l(0.00006104)
          and r10.w, r10.w, l(0x0000ffff)
          if_nz cb2[58].y
            mov r14.x, -r7.x
            utof r16.z, r10.w
            mov r14.y, r8.x
            mov r14.z, r7.x
            mov r11.w, l(0)
            mov r14.w, l(0)
            loop 
              ige r15.w, r14.w, l(8)
              breakc_nz r15.w
              dp2 r17.x, icb[r14.w + 0].yxyy, r14.xyxx
              dp2 r17.y, icb[r14.w + 0].yxyy, r14.yzyy
              mad r16.xy, r17.xyxx, r8.wwww, r15.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r15.w, r16.xyzx, t9.xxxx, s13, r7.w
              mad r11.w, r15.w, l(0.125000), r11.w
              iadd r14.w, r14.w, l(1)
            endloop 
          else 
            utof r15.z, r10.w
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r11.w, r15.xyzx, t9.xxxx, s13, r7.w
          endif 
          mul r7.w, r11.w, r11.w
          mul r7.w, r11.w, r7.w
        else 
          mov r7.w, l(1.000000)
        endif 
        mul r7.z, r7.w, r7.z
      endif 
    endif 
    mad r7.w, -r1.x, l(0.500000), l(1.000000)
    mad r7.w, -r6.y, r7.w, l(1.000000)
    mul r7.w, r7.w, r7.w
    mad r7.w, -r7.w, l(0.620000), l(0.620000)
    add r7.w, -r6.y, r7.w
    mad r7.w, r4.w, r7.w, r6.y
    mul r7.w, r7.z, r7.w
    lt r5.w, l(0.000000), r5.w
    mad r14.xyz, r7.wwww, r9.yzwy, r12.xyzx
    mad r15.xyz, -v6.xyzx, r1.zzzz, cb2[17].xyzx
    dp3 r1.z, r15.xyzx, r15.xyzx
    rsq r1.z, r1.z
    mul r15.xyz, r1.zzzz, r15.xyzx
    dp3 r1.z, r15.xyzx, r5.xyzx
    dp3 r7.w, r3.xyzx, r15.xyzx
    mad r8.w, |r7.w|, r2.y, -|r7.w|
    mad r7.w, |r7.w|, r8.w, l(1.000000)
    mad r6.y, r6.y, r1.y, r3.w
    mul r7.w, r7.w, r7.w
    mul r6.y, r6.y, r7.w
    rcp r6.y, r6.y
    mul r6.y, r6.w, r6.y
    mul r6.y, r6.y, r7.z
    mul r6.y, r6.y, l(0.250000)
    mad r15.xyz, r6.yyyy, r9.yzwy, r2.xzwx
    add_sat r1.z, -r1.z, l(1.000000)
    log r1.z, r1.z
    mul r1.z, r1.z, l(3.400000)
    exp r1.z, r1.z
    mul r1.z, r1.z, r6.y
    mad r16.xyz, r1.zzzz, r9.zwyz, r13.xyzx
    mov r14.w, r16.z
    mov r12.w, r13.z
    movc r12.xyzw, r5.wwww, r14.xyzw, r12.xyzw
    mov r16.zw, r15.xxxy
    mov r13.zw, r2.xxxz
    movc r14.xyzw, r5.wwww, r16.xyzw, r13.xyzw
    movc r2.w, r5.w, r15.z, r2.w
    mov r13.z, r12.w
    mov r13.xy, r14.xyxx
    mov r2.xz, r14.zzwz
  endif 
endif 
mov r14.x, -r7.x
not r1.z, r1.w
mad r1.x, -r1.x, l(0.500000), l(1.000000)
mov r15.xy, l(0,0,0,0)
mov r16.w, l(0)
mov r17.xyz, v6.xyzx
mov r17.w, l(1.000000)
mov r18.w, l(1.000000)
mov r14.z, r7.x
mov r19.w, l(1.000000)
mov r20.z, l(1.000000)
mov r21.w, l(1.000000)
mov r14.yw, r8.xxxx
mov r7.y, r14.w
mov r22.w, l(1.000000)
mov r8.y, r14.x
mov r8.z, r7.x
mov r23.w, l(1.000000)
mov r24.x, r8.x
mov r24.y, r14.x
mov r24.z, r7.x
mov r25.x, r8.x
mov r25.y, r14.x
mov r25.z, r7.x
mov r26.x, r8.x
mov r26.y, r14.x
mov r26.z, r7.x
mov r9.yzw, r12.xxyz
mov r27.xyz, r13.zxyz
mov r28.xyz, r2.xzwx
mov r5.w, cb2[58].y
mov r6.y, l(0)
loop 
  uge r6.w, r6.y, cb2[0].x
  breakc_nz r6.w
  ushr r15.z, r6.y, l(5)
  iadd r16.xyz, r11.xyzx, r15.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r6.w, r16.xyzw, t6.yzwx
  mov r16.xyz, r9.yzwy
  mov r29.xyz, r27.xyzx
  mov r30.xyz, r28.xyzx
  mov r7.z, r5.w
  mov r7.w, r6.w
  loop 
    breakc_z r7.w
    firstbit_lo r8.w, r7.w
    ishl r10.w, l(1), r8.w
    and r11.w, r7.w, r10.w
    if_nz r11.w
      xor r7.w, r7.w, r10.w
      iadd r8.w, r6.y, r8.w
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r31.xyzw, r8.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r32.xy, r8.w, l(16), t11.xyxx
      add r31.xyz, r31.xyzx, -v6.xyzx
      mov r32.z, r31.w
      lt r31.xyz, |r31.xyzx|, r32.zxyz
      and r10.w, r31.y, r31.x
      and r10.w, r31.z, r10.w
      if_nz r10.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r8.w, l(0), t12.wxyz
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r8.w, l(16), t12.zxyw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r8.w, l(32), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r8.w, l(48), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r8.w, l(64), t12.yzwx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r8.w, l(80), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r8.w, l(96), t12.yzwx
        ubfe r10.w, l(3), l(24), r32.w
        switch r10.w
          case l(4)
          lt r10.w, l(0.000000), r37.x
          mov r38.xy, r36.zwzz
          mov r38.z, r37.w
          mad r39.xyz, -r38.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r31.yzwy
          add r40.xyz, r39.xyzx, -v6.xyzx
          dp3 r11.w, r38.xyzx, r40.xyzx
          div_sat r12.w, -r11.w, r37.x
          mad r41.xyz, r12.wwww, r38.xyzx, r39.xyzx
          movc r41.xyz, r10.wwww, r41.xyzx, r31.yzwy
          add r41.xyz, r41.xyzx, -v6.xyzx
          dp3 r13.w, r41.xyzx, r41.xyzx
          rsq r15.z, r13.w
          mul r41.xyz, r15.zzzz, r41.xyzx
          dp3 r15.z, r3.xyzx, r41.xyzx
          mov_sat r15.w, r15.z
          lt r20.w, l(0.000000), r15.w
          if_nz r20.w
            sqrt r20.w, r13.w
            mul r24.w, r34.x, r34.x
            div r13.w, r24.w, r13.w
            min r13.w, r13.w, l(1.000000)
            mad_sat r41.xy, r20.wwww, r33.xzxx, r33.ywyy
            mul r41.zw, r41.xxxy, r41.xxxy
            mad r41.xy, r41.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
            mul r41.xy, r41.xyxx, r41.zwzz
            mul r13.w, r13.w, r41.x
            mul r13.w, r41.y, r13.w
            lt r20.w, l(0.000000), r13.w
            if_nz r20.w
              ubfe r20.w, l(3), l(27), r32.w
              ine r20.w, r20.w, l(1)
              if_nz r20.w
                mad r20.w, |r15.z|, l(-0.200000), l(0.400000)
                mad r41.xyz, r3.xyzx, r20.wwww, v6.xyzx
                add r41.xyz, -r35.xyzx, r41.xyzx
                max r20.w, |r41.z|, |r41.y|
                max r20.w, r20.w, |r41.x|
                div r20.w, r36.x, r20.w
                add r20.w, r36.y, r20.w
                dp3 r24.w, r41.xyzx, r41.xyzx
                rsq r24.w, r24.w
                max r20.w, r20.w, l(0.00006104)
                and r25.w, r32.w, l(0x0000ffff)
                utof r42.w, r25.w
                mov r25.w, l(0)
                mov r26.w, l(0)
                loop 
                  ige r27.w, r26.w, l(8)
                  breakc_nz r27.w
                  dp2 r43.y, icb[r26.w + 0].yxyy, r14.xyxx
                  dp2 r43.z, icb[r26.w + 0].yxyy, r14.yzyy
                  mul r43.yz, r34.yyyy, r43.yyzy
                  mul r43.x, r9.x, r43.y
                  mul r43.w, r6.x, r43.y
                  mad r42.xyz, r41.xyzx, r24.wwww, r43.xzwx
                  sample_c_lz_indexable(texturecubearray)(float,float,float,float) r27.w, r42.xyzw, t10.xxxx, s13, r20.w
                  mad r25.w, r27.w, l(0.125000), r25.w
                  iadd r26.w, r26.w, l(1)
                endloop 
              else 
                mov r25.w, l(1.000000)
              endif 
              mul r13.w, r13.w, r25.w
              lt r20.w, l(0.000000), r13.w
              if_nz r20.w
                mul r20.w, r2.y, r32.x
                mul r20.w, r20.w, l(0.250000)
                dp3 r24.w, r38.xyzx, r10.xyzx
                dp3 r26.w, r10.xyzx, r40.xyzx
                mad r27.w, -r24.w, r24.w, r37.x
                mad r11.w, r24.w, r26.w, -r11.w
                div_sat r11.w, r11.w, r27.w
                div r24.w, r27.w, r37.x
                mul r24.w, r24.w, l(10.000000)
                min r24.w, r24.w, l(1.000000)
                add r11.w, -r12.w, r11.w
                mad r11.w, r24.w, r11.w, r12.w
                mad r38.xyz, r11.wwww, r38.xyzx, r39.xyzx
                movc r38.xyz, r10.wwww, r38.xyzx, r31.yzwy
                add r38.xyz, r38.xyzx, -v6.xyzx
                dp3 r10.w, r38.xyzx, r38.xyzx
                rsq r10.w, r10.w
                mul r39.xyz, r10.wwww, r38.xyzx
                ubfe r11.w, l(4), l(16), r32.w
                ult r12.w, l(0), r11.w
                and r12.w, r1.w, r12.w
                if_nz r12.w
                  iadd r11.w, r11.w, cb2[0].x
                  iadd r11.w, r11.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.w, r11.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r11.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r11.w, l(116), t12.xyzw
                  mad r24.w, |r15.z|, l(-0.200000), l(0.400000)
                  mad r18.xyz, r3.xyzx, r24.wwww, v6.xyzx
                  dp4 r24.w, r40.xyzw, r18.xyzw
                  dp4 r26.w, r41.xyzw, r18.xyzw
                  lt r27.w, r26.w, r24.w
                  if_z r27.w
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r11.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r11.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r11.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r11.w, l(148), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xy, r11.w, l(164), t12.xyxx
                    dp4 r40.x, r40.xyzw, r18.xyzw
                    dp4 r40.y, r41.xyzw, r18.xyzw
                    div r18.xy, r40.xyxx, r26.wwww
                    mad r18.xy, r18.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r18.xy, r43.zwzz, r18.xyxx
                    mul r18.xy, r43.xyxx, r18.xyxx
                    div r40.xy, r12.wwww, r42.xzxx
                    add r40.zw, -r40.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                    ge r40.zw, r18.xxxy, r40.zzzw
                    ge r40.xy, r40.xyxx, r18.xyxx
                    or r40.xy, r40.xyxx, r40.zwzz
                    or r18.z, r40.y, r40.x
                    mov_sat r18.xy, r18.xyxx
                    mad r40.xy, r18.xyxx, r42.xzxx, r42.ywyy
                    mul r18.x, r26.w, r44.y
                    mad r18.y, r44.x, r26.w, r24.w
                    div r18.x, r18.y, r18.x
                  else 
                    mov r18.z, l(-1)
                  endif 
                  or r18.y, r27.w, r18.z
                  if_z r18.y
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r11.w, r11.w, l(28), t12.xxxx
                    max r18.x, r18.x, l(0.00006104)
                    and r11.w, r11.w, l(0x0000ffff)
                    if_nz r7.z
                      utof r41.z, r11.w
                      mov r18.yz, l(0,0,0,0)
                      loop 
                        ige r24.w, r18.z, l(8)
                        breakc_nz r24.w
                        dp2 r42.x, icb[r18.z + 0].yxyy, r14.xwxx
                        dp2 r42.y, icb[r18.z + 0].xyxx, r7.xyxx
                        mad r41.xy, r42.xyxx, r12.wwww, r40.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.w, r41.xyzx, t9.xxxx, s13, r18.x
                        mad r18.y, r24.w, l(0.125000), r18.y
                        iadd r18.z, r18.z, l(1)
                      endloop 
                    else 
                      utof r40.z, r11.w
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r18.y, r40.xyzx, t9.xxxx, s13, r18.x
                    endif 
                    mul r11.w, r18.y, r18.y
                    mul r11.w, r18.y, r11.w
                  else 
                    mov r11.w, l(1.000000)
                  endif 
                  mul r13.w, r11.w, r13.w
                else 
                  ubfe r11.w, l(4), l(20), r32.w
                  ult r12.w, l(0), r11.w
                  and r12.w, r1.z, r12.w
                  if_nz r12.w
                    iadd r11.w, r11.w, cb2[0].x
                    iadd r11.w, r11.w, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.w, r11.w, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r11.w, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r11.w, l(116), t12.xyzw
                    mad r18.x, |r15.z|, l(-0.200000), l(0.400000)
                    mad r19.xyz, r3.xyzx, r18.xxxx, v6.xyzx
                    dp4 r18.x, r40.xyzw, r19.xyzw
                    dp4 r18.z, r41.xyzw, r19.xyzw
                    lt r24.w, r18.z, r18.x
                    if_z r24.w
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r11.w, l(68), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r11.w, l(84), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r11.w, l(132), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r11.w, l(148), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xy, r11.w, l(164), t12.xyxx
                      dp4 r40.x, r40.xyzw, r19.xyzw
                      dp4 r40.y, r41.xyzw, r19.xyzw
                      div r19.xy, r40.xyxx, r18.zzzz
                      mad r19.xy, r19.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                      add r19.xy, r43.zwzz, r19.xyxx
                      mul r19.xy, r43.xyxx, r19.xyxx
                      div r40.xy, r12.wwww, r42.xzxx
                      add r40.zw, -r40.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                      ge r40.zw, r19.xxxy, r40.zzzw
                      ge r40.xy, r40.xyxx, r19.xyxx
                      or r40.xy, r40.xyxx, r40.zwzz
                      or r19.z, r40.y, r40.x
                      mov_sat r19.xy, r19.xyxx
                      mad r40.xy, r19.xyxx, r42.xzxx, r42.ywyy
                      mul r19.x, r18.z, r44.y
                      mad r18.x, r44.x, r18.z, r18.x
                      div r18.x, r18.x, r19.x
                    else 
                      mov r19.z, l(-1)
                    endif 
                    or r18.z, r24.w, r19.z
                    if_z r18.z
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r11.w, r11.w, l(28), t12.xxxx
                      max r18.x, r18.x, l(0.00006104)
                      and r11.w, r11.w, l(0x0000ffff)
                      if_nz r7.z
                        utof r19.z, r11.w
                        mov r18.z, l(0)
                        mov r24.w, l(0)
                        loop 
                          ige r26.w, r24.w, l(8)
                          breakc_nz r26.w
                          dp2 r41.x, icb[r24.w + 0].xyxx, r8.xyxx
                          dp2 r41.y, icb[r24.w + 0].yxyy, r8.xzxx
                          mad r19.xy, r41.xyxx, r12.wwww, r40.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.x, r19.xyzx, t9.xxxx, s13, r18.x
                          mad r18.z, r19.x, l(0.125000), r18.z
                          iadd r24.w, r24.w, l(1)
                        endloop 
                      else 
                        utof r40.z, r11.w
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r18.z, r40.xyzx, t9.xxxx, s13, r18.x
                      endif 
                      mul r11.w, r18.z, r18.z
                      mul r11.w, r18.z, r11.w
                    else 
                      mov r11.w, l(1.000000)
                    endif 
                    mul r13.w, r11.w, r13.w
                  endif 
                endif 
                mad r11.w, -r15.w, r1.x, l(1.000000)
                mul r11.w, r11.w, r11.w
                mad r11.w, -r11.w, l(0.620000), l(0.620000)
                add r11.w, -r15.w, r11.w
                mad r11.w, r4.w, r11.w, r15.w
                mul r11.w, r13.w, r11.w
                mov r32.x, r31.x
                lt r12.w, l(0.000000), r15.z
                mad r19.xyz, r11.wwww, r32.xyzx, r16.xyzx
                dp3_sat r11.w, r3.xyzx, r39.xyzx
                mad r38.xyz, r38.xyzx, r10.wwww, r5.xyzx
                dp3 r10.w, r38.xyzx, r38.xyzx
                rsq r10.w, r10.w
                mul r38.xyz, r10.wwww, r38.xyzx
                dp3 r10.w, r38.xyzx, r5.xyzx
                dp3 r15.z, r3.xyzx, r38.xyzx
                mad r15.w, |r15.z|, r2.y, -|r15.z|
                mad r15.z, |r15.z|, r15.w, l(1.000000)
                mad r15.w, r11.w, r1.y, r3.w
                mul r15.z, r15.z, r15.z
                mul r15.z, r15.w, r15.z
                rcp r15.z, r15.z
                mul r11.w, r20.w, r11.w
                mul r11.w, r11.w, r15.z
                mul r11.w, r13.w, r11.w
                mad r38.xyz, r11.wwww, r32.xyzx, r30.xyzx
                add_sat r10.w, -r10.w, l(1.000000)
                log r10.w, r10.w
                mul r10.w, r10.w, l(3.400000)
                exp r10.w, r10.w
                mul r10.w, r10.w, r11.w
                mad r39.xyz, r10.wwww, r32.xyzx, r29.xyzx
                movc r16.xyz, r12.wwww, r19.xyzx, r16.xyzx
                movc r29.xyz, r12.wwww, r39.xyzx, r29.xyzx
                movc r30.xyz, r12.wwww, r38.xyzx, r30.xyzx
              endif 
            endif 
          endif 
          break 
          case l(2)
          mov r19.xy, r34.zwzz
          mov r19.z, r35.w
          add r19.xyz, r19.xyzx, -v6.xyzx
          dp3 r10.w, r19.xyzx, r19.xyzx
          rsq r10.w, r10.w
          mul r38.xyz, r10.wwww, r19.xyzx
          dp3 r11.w, r3.xyzx, r38.xyzx
          mov_sat r12.w, r11.w
          lt r13.w, l(0.000000), r12.w
          if_nz r13.w
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r8.w, l(112), t12.yzwx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r8.w, l(128), t12.zxyw
            mov r40.xyz, r38.xyzx
            mov r40.w, r39.y
            dp4 r13.w, r40.xyzw, r17.xyzw
            lt r15.z, r13.w, l(1.000000)
            if_nz r15.z
              mov r41.xyz, l(1.000000,1.000000,1.000000,0)
              mov r15.z, l(0)
            else 
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r8.w, l(172), t12.yzwx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r8.w, l(188), t12.wxyz
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r8.w, l(204), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.w, r8.w, l(236), t12.xxxx
              add r45.xyz, r31.yzwy, -v6.xyzx
              mul r18.x, r34.x, r34.x
              dp3 r20.w, r45.xyzx, r45.xyzx
              div r18.x, r18.x, r20.w
              min r18.x, r18.x, l(1.000000)
              mad_sat r33.xy, r13.wwww, r33.xzxx, r33.ywyy
              mul r33.zw, r33.xxxy, r33.xxxy
              mad r33.xy, r33.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
              mul r33.xy, r33.xyxx, r33.zwzz
              mul r18.x, r18.x, r33.x
              mul r18.x, r33.y, r18.x
              mov r35.w, r36.x
              dp4 r33.x, r35.xyzw, r17.xyzw
              mov r45.xyz, r36.yzwy
              mov r45.w, r37.w
              dp4 r33.y, r45.xyzw, r17.xyzw
              div r20.xy, r33.xyxx, r13.wwww
              lt r13.w, r42.w, l(0.00048828)
              if_nz r13.w
                mov r43.y, r44.x
                mad_sat r33.xy, |r20.xyxx|, r43.zwzz, r43.xyxx
                mul r33.zw, r33.xxxy, r33.xxxy
                mad r33.xy, r33.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
                mul r33.xy, r33.xyxx, r33.zwzz
                mul r13.w, r33.y, r33.x
              else 
                mov r42.w, r43.y
                mul_sat r33.xyzw, |r20.yyxx|, r42.xyzw
                log r33.xyzw, r33.xyzw
                mul r33.xyzw, r33.xyzw, r43.xxxx
                exp r33.xyzw, r33.xyzw
                add r33.xy, r33.zwzz, r33.xyxx
                log r33.xy, r33.xyxx
                mul r33.xy, r33.xyxx, r44.xxxx
                exp r33.xy, r33.xyxx
                mul r20.w, r33.x, r43.z
                mad r24.w, r43.w, r33.y, l(-1.000000)
                mad r20.w, r43.w, r33.y, -r20.w
                div_sat r20.w, r24.w, r20.w
                mul r24.w, r20.w, r20.w
                mad r20.w, r20.w, l(-2.000000), l(3.000000)
                mul r13.w, r20.w, r24.w
              endif 
              mul r15.z, r13.w, r18.x
              and r13.w, r15.w, l(255)
              if_nz r13.w
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyz, r8.w, l(220), t12.xyzx
                dp3 r15.w, r44.yzwy, r20.xyzx
                dp3 r18.x, r33.xyzx, r20.xyzx
                frc r33.x, r15.w
                frc r33.y, r18.x
                iadd r13.w, r13.w, l(-1)
                utof r33.z, r13.w
                sample_l_indexable(texture2darray)(float,float,float,float) r41.xyz, r33.xyzx, t20.xyzw, s2, l(0.000000)
              else 
                mov r41.xyz, l(1.000000,1.000000,1.000000,0)
              endif 
            endif 
            mov r31.yz, r32.yyzy
            mul r20.xyw, r41.xyxz, r31.xyxz
            lt r13.w, l(0.000000), r15.z
            if_nz r13.w
              ubfe r13.w, l(3), l(27), r32.w
              ine r13.w, r13.w, l(1)
              if_nz r13.w
                mad r13.w, |r11.w|, l(-0.200000), l(0.400000)
                mad r21.xyz, r3.xyzx, r13.wwww, v6.xyzx
                mov r38.xyz, r37.xyzx
                dp4 r13.w, r38.xyzw, r21.xyzw
                dp4 r15.w, r40.xyzw, r21.xyzw
                ge r18.x, r15.w, r13.w
                if_nz r18.x
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.y, r8.w, l(144), t12.xxxx
                  mov r35.w, r36.x
                  dp4 r31.x, r35.xyzw, r21.xyzw
                  mov r37.xyz, r36.yzwy
                  dp4 r31.y, r37.xyzw, r21.xyzw
                  div r21.xy, r31.xyxx, r15.wwww
                  mad_sat r21.xy, r21.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  mad r21.xy, r21.xyxx, r39.zwzz, r39.xyxx
                  div r8.w, r13.w, r15.w
                  max r8.w, r8.w, l(0.00006104)
                  and r13.w, r32.w, l(0x0000ffff)
                  if_nz r7.z
                    utof r31.z, r13.w
                    mov r15.w, l(0)
                    mov r18.x, l(0)
                    loop 
                      ige r24.w, r18.x, l(8)
                      breakc_nz r24.w
                      dp2 r33.x, icb[r18.x + 0].xyxx, r24.xyxx
                      dp2 r33.y, icb[r18.x + 0].yxyy, r24.xzxx
                      mad r31.xy, r33.xyxx, r34.yyyy, r21.xyxx
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.w, r31.xyzx, t9.xxxx, s13, r8.w
                      mad r15.w, r24.w, l(0.125000), r15.w
                      iadd r18.x, r18.x, l(1)
                    endloop 
                  else 
                    utof r21.z, r13.w
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r15.w, r21.xyzx, t9.xxxx, s13, r8.w
                  endif 
                  mul r8.w, r15.w, r15.w
                  mul r8.w, r15.w, r8.w
                else 
                  mov r8.w, l(1.000000)
                endif 
              else 
                mov r8.w, l(1.000000)
              endif 
              mul r8.w, r8.w, r15.z
              lt r13.w, l(0.000000), r8.w
              if_nz r13.w
                mul r13.w, r2.y, r32.x
                mul r13.w, r12.w, r13.w
                ubfe r15.z, l(4), l(16), r32.w
                ult r18.x, l(0), r15.z
                and r18.x, r1.w, r18.x
                if_nz r18.x
                  iadd r15.z, r15.z, cb2[0].x
                  iadd r15.z, r15.z, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.x, r15.z, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r15.z, l(68), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r15.z, l(84), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r15.z, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r15.z, l(116), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r15.z, l(132), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r15.z, l(148), t12.xyzw
                  mad r21.x, |r11.w|, l(-0.200000), l(0.400000)
                  mad r22.xyz, r3.xyzx, r21.xxxx, v6.xyzx
                  dp4 r21.x, r31.xyzw, r22.xyzw
                  dp4 r21.y, r33.xyzw, r22.xyzw
                  dp4 r21.z, r34.xyzw, r22.xyzw
                  dp4 r22.x, r35.xyzw, r22.xyzw
                  lt r22.y, r22.x, r21.z
                  div r21.xy, r21.xyxx, r22.xxxx
                  mad r21.xy, r21.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r21.xy, r37.zwzz, r21.xyxx
                  mul r21.xy, r37.xyxx, r21.xyxx
                  div r31.xy, r18.xxxx, r36.xzxx
                  add r31.zw, -r31.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                  ge r31.zw, r21.xxxy, r31.zzzw
                  ge r31.xy, r31.xyxx, r21.xyxx
                  or r31.xy, r31.xyxx, r31.zwzz
                  or r22.z, r31.y, r31.x
                  or r22.y, r22.y, r22.z
                  if_z r22.y
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r22.y, r15.z, l(28), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xy, r15.z, l(164), t12.xyxx
                    mov_sat r21.xy, r21.xyxx
                    mad r32.xy, r21.xyxx, r36.xzxx, r36.ywyy
                    mul r15.z, r22.x, r31.y
                    mad r21.x, r31.x, r22.x, r21.z
                    div r15.z, r21.x, r15.z
                    max r15.z, r15.z, l(0.00006104)
                    and r21.x, r22.y, l(0x0000ffff)
                    if_nz r7.z
                      utof r22.z, r21.x
                      mov r21.yz, l(0,0,0,0)
                      loop 
                        ige r24.w, r21.z, l(8)
                        breakc_nz r24.w
                        dp2 r31.x, icb[r21.z + 0].xyxx, r25.xyxx
                        dp2 r31.y, icb[r21.z + 0].yxyy, r25.xzxx
                        mad r22.xy, r31.xyxx, r18.xxxx, r32.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.x, r22.xyzx, t9.xxxx, s13, r15.z
                        mad r21.y, r22.x, l(0.125000), r21.y
                        iadd r21.z, r21.z, l(1)
                      endloop 
                    else 
                      utof r32.z, r21.x
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.y, r32.xyzx, t9.xxxx, s13, r15.z
                    endif 
                    mul r15.z, r21.y, r21.y
                    mul r15.z, r21.y, r15.z
                  else 
                    mov r15.z, l(1.000000)
                  endif 
                  mul r8.w, r8.w, r15.z
                else 
                  ubfe r15.z, l(4), l(20), r32.w
                  ult r18.x, l(0), r15.z
                  and r18.x, r1.z, r18.x
                  if_nz r18.x
                    iadd r15.z, r15.z, cb2[0].x
                    iadd r15.z, r15.z, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.x, r15.z, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r15.z, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r15.z, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r15.z, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r15.z, l(116), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r15.z, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r15.z, l(148), t12.xyzw
                    mad r21.x, |r11.w|, l(-0.200000), l(0.400000)
                    mad r23.xyz, r3.xyzx, r21.xxxx, v6.xyzx
                    dp4 r22.x, r31.xyzw, r23.xyzw
                    dp4 r22.y, r32.xyzw, r23.xyzw
                    dp4 r21.x, r33.xyzw, r23.xyzw
                    dp4 r21.z, r34.xyzw, r23.xyzw
                    lt r22.z, r21.z, r21.x
                    div r22.xy, r22.xyxx, r21.zzzz
                    mad r22.xy, r22.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r22.xy, r36.zwzz, r22.xyxx
                    mul r22.xy, r36.xyxx, r22.xyxx
                    div r23.xy, r18.xxxx, r35.xzxx
                    add r31.xy, -r23.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                    ge r31.xy, r22.xyxx, r31.xyxx
                    ge r23.xy, r23.xyxx, r22.xyxx
                    or r23.xy, r23.xyxx, r31.xyxx
                    or r23.x, r23.y, r23.x
                    or r22.z, r22.z, r23.x
                    if_z r22.z
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r22.z, r15.z, l(28), t12.xxxx
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.xy, r15.z, l(164), t12.xyxx
                      mov_sat r22.xy, r22.xyxx
                      mad r31.xy, r22.xyxx, r35.xzxx, r35.ywyy
                      mul r15.z, r21.z, r23.y
                      mad r21.x, r23.x, r21.z, r21.x
                      div r15.z, r21.x, r15.z
                      max r15.z, r15.z, l(0.00006104)
                      and r21.x, r22.z, l(0x0000ffff)
                      if_nz r7.z
                        utof r22.z, r21.x
                        mov r21.z, l(0)
                        mov r23.x, l(0)
                        loop 
                          ige r23.y, r23.x, l(8)
                          breakc_nz r23.y
                          dp2 r32.x, icb[r23.x + 0].xyxx, r26.xyxx
                          dp2 r32.y, icb[r23.x + 0].yxyy, r26.xzxx
                          mad r22.xy, r32.xyxx, r18.xxxx, r31.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.x, r22.xyzx, t9.xxxx, s13, r15.z
                          mad r21.z, r22.x, l(0.125000), r21.z
                          iadd r23.x, r23.x, l(1)
                        endloop 
                      else 
                        utof r31.z, r21.x
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.z, r31.xyzx, t9.xxxx, s13, r15.z
                      endif 
                      mul r15.z, r21.z, r21.z
                      mul r15.z, r21.z, r15.z
                    else 
                      mov r15.z, l(1.000000)
                    endif 
                    mul r8.w, r8.w, r15.z
                  endif 
                endif 
                mad r15.z, -r12.w, r1.x, l(1.000000)
                mul r15.z, r15.z, r15.z
                mad r15.z, -r15.z, l(0.620000), l(0.620000)
                add r15.z, -r12.w, r15.z
                mad r15.z, r4.w, r15.z, r12.w
                mul r15.z, r8.w, r15.z
                lt r11.w, l(0.000000), r11.w
                mad r22.xyz, r15.zzzz, r20.xywx, r16.xyzx
                mad r19.xyz, r19.xyzx, r10.wwww, r5.xyzx
                dp3 r10.w, r19.xyzx, r19.xyzx
                rsq r10.w, r10.w
                mul r19.xyz, r10.wwww, r19.xyzx
                dp3 r10.w, r19.xyzx, r5.xyzx
                dp3 r15.z, r3.xyzx, r19.xyzx
                mad r18.x, |r15.z|, r2.y, -|r15.z|
                mad r15.z, |r15.z|, r18.x, l(1.000000)
                mad r12.w, r12.w, r1.y, r3.w
                mul r15.z, r15.z, r15.z
                mul r12.w, r12.w, r15.z
                rcp r12.w, r12.w
                mul r12.w, r13.w, r12.w
                mul r8.w, r8.w, r12.w
                mul r8.w, r8.w, l(0.250000)
                mad r19.xyz, r8.wwww, r20.xywx, r30.xyzx
                add_sat r10.w, -r10.w, l(1.000000)
                log r10.w, r10.w
                mul r10.w, r10.w, l(3.400000)
                exp r10.w, r10.w
                mul r8.w, r8.w, r10.w
                mad r20.xyw, r8.wwww, r20.xyxw, r29.xyxz
                movc r16.xyz, r11.wwww, r22.xyzx, r16.xyzx
                movc r29.xyz, r11.wwww, r20.xywx, r29.xyzx
                movc r30.xyz, r11.wwww, r19.xyzx, r30.xyzx
              endif 
            endif 
          endif 
          break 
          default 
          break 
        endswitch 
      endif 
    endif 
  endloop 
  mov r9.yzw, r16.xxyz
  mov r27.xyz, r29.xyzx
  mov r28.xyz, r30.xyzx
  iadd r6.y, r6.y, l(32)
endloop 
log r1.x, r6.z
mul r1.x, r1.x, l(3.400000)
exp r1.x, r1.x
add r1.y, -r0.w, l(1.000000)
mad r0.w, r1.x, r1.y, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
add r1.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r1.xyz, r1.xyzx, r27.xyzx
mad r1.xyz, r28.xyzx, r4.xyzx, r1.xyzx
mad r0.xyz, r9.yzwy, r0.xyzx, r1.xyzx
lt r1.x, l(0.000000), cb2[9].z
if_nz r1.x
  dp3 r1.x, v6.xyzx, v6.xyzx
  rsq r1.y, r1.x
  mul r1.yzw, r1.yyyy, v6.xxyz
  sqrt r1.x, r1.x
  lt r2.x, l(0.000000), cb2[13].w
  if_nz r2.x
    mad r2.xy, r1.xxxx, cb2[15].xyxx, cb2[14].zwzz
    mul r2.xy, r2.xyxx, cb2[16].xyxx
    lt r2.z, l(0.010000), |v6.z|
    mul r3.xy, v6.zzzz, cb2[15].zwzz
    mul r3.zw, r3.xxxy, l(0.000000, 0.000000, -1.442695, -1.442695)
    exp r3.zw, r3.zzzw
    add r3.zw, -r3.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    div r3.xy, r3.zwzz, r3.xyxx
    mul r3.xy, r2.xyxx, r3.xyxx
    movc r2.xy, r2.zzzz, r3.xyxx, r2.xyxx
    mul r2.xzw, r2.xxxx, cb2[12].xxyz
    exp r2.xzw, r2.xxzw
    mul r3.xyz, r2.yyyy, cb2[12].xyzx
    exp r3.xyz, r3.xyzx
    add r3.xyz, -r2.xzwx, r3.xyzx
    mad r2.xyz, cb2[13].wwww, r3.xyzx, r2.xzwx
  else 
    mad r2.w, r1.x, cb2[15].x, cb2[14].z
    mul r2.w, r2.w, cb2[16].x
    lt r3.x, l(0.010000), |v6.z|
    mul r3.y, v6.z, cb2[15].z
    mul r3.z, r3.y, l(-1.442695)
    exp r3.z, r3.z
    add r3.z, -r3.z, l(1.000000)
    div r3.y, r3.z, r3.y
    mul r3.y, r2.w, r3.y
    movc r2.w, r3.x, r3.y, r2.w
    mul r3.xyz, r2.wwww, cb2[12].xyzx
    exp r2.xyz, r3.xyzx
  endif 
  mad r2.xyz, r2.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r2.xyz, r2.xyzx, -cb2[9].zzzz
  dp3 r1.y, cb2[7].yzwy, -r1.yzwy
  mad r1.z, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r1.w, cb2[8].w, -r1.y, l(1.000000)
  mul r1.w, r1.w, r1.w
  mul r1.w, r1.w, l(12.566371)
  div r1.z, r1.z, r1.w
  add r1.x, r1.x, -cb2[10].w
  mul_sat r1.x, r1.x, cb2[11].w
  mul r1.x, r1.x, r1.z
  mov_sat r1.y, r1.y
  mad r1.y, r1.y, r1.y, l(1.000000)
  mad r1.y, r1.y, l(0.05968310), l(-1.000000)
  mad r1.y, cb2[8].z, r1.y, l(1.000000)
  mul r1.xzw, r1.xxxx, cb2[11].xxyz
  mad r1.xyz, r1.yyyy, cb2[10].xyzx, r1.xzwx
  mul r1.xyz, r1.xyzx, cb2[9].wwww
  add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r1.xyz, r1.xyzx, r3.xyzx
  mul r1.xyz, r0.wwww, r1.xyzx
  mad r1.xyz, r0.xyzx, r2.xyzx, r1.xyzx
else 
  mul r1.w, v6.z, cb2[6].x
  mad r2.x, cb2[6].x, v6.z, cb2[5].x
  lt r2.y, |r1.w|, l(0.000100)
  min r2.z, r2.x, l(64.000000)
  mul r2.z, r2.z, l(1.442695)
  exp r2.z, r2.z
  mov_sat r2.w, cb2[6].z
  lt r3.x, r2.x, l(0.000000)
  add r2.x, r2.x, l(1.000000)
  movc r2.x, r3.x, r2.z, r2.x
  add r2.x, r2.x, -cb2[6].z
  movc r1.w, r2.y, l(1.000000), r1.w
  div r1.w, r2.x, r1.w
  movc r1.w, r2.y, r2.w, r1.w
  mul r1.w, r1.w, cb2[5].z
  dp3 r2.x, v6.xyzx, v6.xyzx
  sqrt r2.y, r2.x
  mad r1.w, r1.w, r2.y, cb2[5].w
  exp r1.w, r1.w
  min r1.w, r1.w, l(1.000000)
  add r1.w, -r1.w, l(1.000000)
  rsq r2.x, r2.x
  mul r2.xyz, r2.xxxx, v6.xyzx
  dp3 r2.x, cb2[7].yzwy, r2.xyzx
  mad_sat r2.x, cb2[8].y, r2.x, cb2[8].x
  add r3.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r2.xyzw, r2.xxxx, r3.xyzw, cb2[4].xyzw
  mul r1.w, r1.w, r2.w
  mad r2.xyz, r2.xyzx, r0.wwww, -r0.xyzx
  mad r1.xyz, r1.wwww, r2.xyzx, r0.xyzx
endif 
mul r0.xyz, r1.xyzx, cb1[85].yyyy
ge r1.xyz, r0.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.xyz, r0.xyzx, r1.xyzx
min o0.xyz, r0.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
mov o0.w, r0.w
ret 
// Approximately 2567 instruction slots used
