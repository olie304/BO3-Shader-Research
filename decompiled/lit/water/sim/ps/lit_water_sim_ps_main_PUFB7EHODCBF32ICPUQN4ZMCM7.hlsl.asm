//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:39:45 2021
//
//
// Note: shader requires additional functionality:
//       Early depth-stencil
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float3 specColorTint;              // Offset:  160 Size:    12 [unused]
//   float baseNormalHeight;            // Offset:  172 Size:     4 [unused]
//   float2 glossRange;                 // Offset:  176 Size:     8 [unused]
//   float2 normalMapScale;             // Offset:  184 Size:     8
//   float4 flowParams;                 // Offset:  192 Size:    16
//   float4 noiseParams;                // Offset:  208 Size:    16
//   bool useOrientedNormalMap;         // Offset:  224 Size:     4
//   float4 specularLobeRoughnessControl;// Offset:  240 Size:    16
//   float4 lobeWeightingThicknessRefraction;// Offset:  256 Size:    16
//   float3 normalAdjustAndGloss;       // Offset:  272 Size:    12
//   float4 decalTint;                  // Offset:  288 Size:    16 [unused]
//   float2 opacityScale;               // Offset:  304 Size:     8
//   float invZFeatherDepth;            // Offset:  312 Size:     4 [unused]
//   float2 normalsFlowScaleMin;        // Offset:  320 Size:     8
//   float4 ssrParams;                  // Offset:  336 Size:    16
//   float translucentShadowOpacity;    // Offset:  352 Size:     4 [unused]
//   float3 foamColor;                  // Offset:  356 Size:    12
//   float4 foamMaskScroll01;           // Offset:  368 Size:    16 [unused]
//   float4 foamMaskScroll23;           // Offset:  384 Size:    16 [unused]
//   float4 foamMaskScale01;            // Offset:  400 Size:    16 [unused]
//   float4 foamMaskScale23;            // Offset:  416 Size:    16 [unused]
//   float foamScale;                   // Offset:  432 Size:     4 [unused]
//   float2 foamSpacing;                // Offset:  436 Size:     8
//   float foamColorScale;              // Offset:  444 Size:     4
//   float foamZFeather;                // Offset:  448 Size:     4
//   bool useFoam;                      // Offset:  452 Size:     4
//   bool useSSR;                       // Offset:  456 Size:     4
//   bool useLoopedSSR;                 // Offset:  460 Size:     4
//   bool useSpecularZFeather;          // Offset:  464 Size:     4 [unused]
//   bool scaleNormalsWithFlow;         // Offset:  468 Size:     4
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for forwardDecalConstants
// {
//
//   struct CoreDecalConstantsPack
//   {
//       
//       uint4 data[8];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   128
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// colorSampler                      sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// normalSampler                     sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// flowSampler                       sampler      NA          NA             s5      1 
// noiseSampler                      sampler      NA          NA             s6      1 
// foamSampler                       sampler      NA          NA             s7      1 
// bilinearClamp                     sampler      NA          NA             s8      1 
// pointClamp                        sampler      NA          NA             s9      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// colorMap                          texture  float4          2d             t0      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// normalMap                         texture  float4          2d            t21      1 
// flowMap                           texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// noiseMap                          texture  float4          2d            t24      1 
// foamBase                          texture  float4          2d            t25      1 
// ifloatZSceneDownsampled           texture  float4          2d            t26      1 
// ifloatZScene                      texture  float4          2d            t29      1 
// iResolveScene                     texture  float4          2d            t30      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// visibleDecals                     texture    uint     2darray            t35      1 
// forwardDecalConstants             texture  struct         r/o            t36      1 
// rColorRamp                        texture  float4          2d            t37      1 
// materialTexBC7                    texture  float4     2darray            t42      1 
// materialTexBC3                    texture  float4     2darray            t43      1 
// materialTexMask                   texture  float4     2darray            t45      1 
// gOit_Pixels                           UAV    uint          2d             u6      1 
// gOit_Nodes                            UAV   uint2     2darray             u7      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyz         1     NONE   float       
// COLOR                    1      w        1     NONE   float       
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 4   x           3     NONE    uint       
// TEXCOORD                 1   xyz         4     NONE   float   xyz 
// TEXCOORD                 2   xyz         5     NONE   float   xyz 
// TEXCOORD                 3   xyz         6     NONE   float   xyz 
// OFFPOSITION              0   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
// SV_IsFrontFace           0   x          10    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | forceEarlyDepthStencil
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[30], immediateIndexed
dcl_constantbuffer CB1[86], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_sampler s9, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2d (float,float,float,float) t26
dcl_resource_texture2d (float,float,float,float) t29
dcl_resource_texture2d (float,float,float,float) t30
dcl_resource_texture2darray (float,float,float,float) t31
dcl_resource_texture2darray (uint,uint,uint,uint) t35
dcl_resource_structured t36, 128
dcl_resource_texture2d (float,float,float,float) t37
dcl_resource_texture2darray (float,float,float,float) t42
dcl_resource_texture2darray (float,float,float,float) t43
dcl_resource_texture2darray (float,float,float,float) t45
dcl_uav_typed_texture2d (uint,uint,uint,uint) u6
dcl_uav_typed_texture2darray (uint,uint,uint,uint) u7
dcl_input_ps_siv linear noperspective v0.xyzw, position
dcl_input_ps linear v2.xy
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyz
dcl_input_ps linear v8.xyzw
dcl_input_ps linear v9.xyzw
dcl_input_ps_sgv constant v10.x, is_front_face
dcl_output o0.xyzw
dcl_temps 44
ge r0.x, v0.z, l(0.984375)
mul r0.y, v0.z, l(1.01587307)
mad r0.z, v0.z, l(64.000000), l(-63.000000)
movc r0.x, r0.x, r0.z, r0.y
max r0.x, r0.x, l(0.00000001)
rcp r0.x, r0.x
ftou r1.xy, v0.xyxx
deriv_rtx_coarse r0.yzw, v7.xxyz
deriv_rty_coarse r2.xyz, v7.xyzx
iadd r1.w, cb2[0].y, cb2[0].x
add r3.xyz, v7.xyzx, cb1[24].xyzx
mul r2.w, r0.x, l(0.00781250)
min r2.w, r2.w, l(15.000000)
ftou r2.w, r2.w
ushr r4.xy, r1.xyxx, l(6, 6, 0, 0)
ishl r4.z, r2.w, l(4)
and r2.w, cb2[57].z, l(-32)
iadd r4.w, -r2.w, cb2[57].z
mov r5.xy, l(0,0,0,0)
mov r6.w, l(0)
mov r3.w, l(1.000000)
mov r7.xyzw, l(0,0,0,0)
mov r8.xyz, l(0,0,0,0)
mov r5.w, l(0)
loop 
  uge r8.w, r5.w, cb2[57].z
  breakc_nz r8.w
  ushr r5.z, r5.w, l(5)
  iadd r6.xyz, r4.xyzx, r5.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r5.z, r6.xyzw, t35.yzxw
  ieq r6.x, r2.w, r5.w
  ubfe r6.y, r4.w, l(0), r5.z
  movc r5.z, r6.x, r6.y, r5.z
  iadd r6.x, r1.w, r5.w
  mov r9.xyzw, r7.yzwx
  mov r10.xyz, r8.xyzx
  mov r6.y, r5.z
  loop 
    breakc_z r6.y
    firstbit_lo r6.z, r6.y
    ishl r8.w, l(1), r6.z
    and r10.w, r6.y, r8.w
    if_nz r10.w
      xor r6.y, r6.y, r8.w
      iadd r8.w, r6.z, r6.x
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r11.xyzw, r8.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r12.xy, r8.w, l(16), t11.xyxx
      add r11.xyz, r11.xyzx, -v7.xyzx
      mov r12.z, r11.w
      lt r11.xyz, |r11.xyzx|, r12.zxyz
      and r8.w, r11.y, r11.x
      and r8.w, r11.z, r8.w
      if_nz r8.w
        iadd r6.z, r5.w, r6.z
        ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r11.xyz, r6.z, l(0), t36.xyzx
        ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r12.xyz, r6.z, l(16), t36.xyzx
        ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r13.xyz, r6.z, l(32), t36.xyzx
        mov r14.x, r11.x
        mov r14.y, r12.x
        mov r14.z, r13.x
        dp3 r8.w, r14.xyzx, r14.xyzx
        rsq r8.w, r8.w
        mul r15.xyz, r8.wwww, r14.xyzx
        dp3 r8.w, r15.xyzx, v4.xyzx
        ge r8.w, r8.w, l(0.500000)
        if_nz r8.w
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r15.xyw, r6.z, l(48), t36.xyxz
          mov r14.w, r15.x
          dp4 r14.x, r3.xyzw, r14.xyzw
          mov r16.x, r11.y
          mov r16.y, r12.y
          mov r16.z, r13.y
          mov r16.w, r15.y
          dp4 r14.y, r3.xyzw, r16.xyzw
          mov r15.x, r11.z
          mov r15.y, r12.z
          mov r15.z, r13.z
          dp4 r14.z, r3.xyzw, r15.xyzw
          lt r11.xyz, |r14.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
          and r8.w, r11.y, r11.x
          and r8.w, r11.z, r8.w
          if_nz r8.w
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r11.xyzw, r6.z, l(64), t36.xyzw
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r12.xyzw, r6.z, l(80), t36.xyzw
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r8.w, r6.z, l(108), t36.xxxx
            dp3 r13.x, r0.yzwy, r16.xyzx
            dp3 r13.y, r0.yzwy, r15.xyzx
            dp3 r16.x, r2.xyzx, r16.xyzx
            dp3 r16.y, r2.xyzx, r15.xyzx
            mad r13.zw, r14.yyyz, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
            mul r14.xyz, r13.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
            mul r15.xyz, r16.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
            and r12.yz, r12.yyzy, l(0, 0x0000ffff, 0x0000ffff, 0)
            if_nz r12.y
              ubfe r10.w, l(4), l(24), r12.w
              ishl r10.w, l(1), r10.w
              ushr r13.x, r12.w, l(28)
              ishl r13.x, l(1), r13.x
              ieq r13.y, r12.y, l(4)
              if_nz r13.y
                and r13.y, r12.w, l(4095)
                ubfe r14.w, l(12), l(12), r12.w
                and r15.w, r8.w, l(1023)
                utof r16.xz, r10.wwww
                utof r16.y, r13.x
                mad r17.xy, r13.zwzz, r16.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                add r17.zw, r16.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                min r17.xy, r17.zwzz, r17.xyxx
                utof r18.x, r13.y
                utof r18.y, r14.w
                add r17.xy, r17.xyxx, r18.xyxx
                mul r17.xy, r17.xyxx, cb1[83].xyxx
                utof r17.z, r15.w
                mul r18.xyz, r14.zyzz, cb1[83].xyxx
                mul r18.xyz, r16.xyzx, r18.xyzx
                mul r19.xyz, r15.zyzz, cb1[83].xyxx
                mul r16.xyz, r16.xyzx, r19.xyzx
                sample_d_indexable(texture2darray)(float,float,float,float) r16.xyzw, r17.xyzx, t42.xyzw, s4, r18.xyzx, r16.xyzx
              else 
                ieq r12.y, r12.y, l(1)
                if_nz r12.y
                  and r12.y, r12.w, l(4095)
                  ubfe r12.w, l(12), l(12), r12.w
                  and r13.y, r8.w, l(1023)
                  utof r17.xz, r10.wwww
                  utof r17.y, r13.x
                  mad r18.xy, r13.zwzz, r17.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r18.zw, r17.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r18.xy, r18.zwzz, r18.xyxx
                  utof r19.xy, r12.ywyy
                  add r12.yw, r18.xxxy, r19.xxxy
                  mul r18.xy, r12.ywyy, cb1[83].zwzz
                  utof r18.z, r13.y
                  mul r19.xyz, r14.zyzz, cb1[83].zwzz
                  mul r19.xyz, r17.xyzx, r19.xyzx
                  mul r20.xyz, r15.zyzz, cb1[83].zwzz
                  mul r17.xyz, r17.xyzx, r20.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r16.xyzw, r18.xyzx, t43.xyzw, s4, r19.xyzx, r17.xyzx
                else 
                  mov r16.xyzw, l(1.000000,1.000000,1.000000,1.000000)
                endif 
              endif 
              mul r11.xyz, r11.xyzx, r16.xyzx
              mul r10.w, r11.w, r16.w
            else 
              mov r11.xyz, l(0,0,0,0)
              mov r10.w, l(0)
            endif 
            ne r12.y, r12.x, l(1.000000)
            add r11.w, r11.w, r10.w
            mad_sat r11.w, r11.w, r12.x, -r12.x
            movc r10.w, r12.y, r11.w, r10.w
            if_nz r12.z
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r6.z, r6.z, l(100), t36.xxxx
              ubfe r11.w, l(4), l(24), r6.z
              ishl r11.w, l(1), r11.w
              ushr r12.x, r6.z, l(28)
              ishl r12.x, l(1), r12.x
              ieq r12.y, r12.z, l(2)
              if_nz r12.y
                and r12.y, r6.z, l(4095)
                ubfe r12.w, l(12), l(12), r6.z
                ubfe r13.x, l(10), l(20), r8.w
                utof r16.xz, r11.wwww
                utof r16.y, r12.x
                mad r17.xy, r13.zwzz, r16.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                add r17.zw, r16.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                min r17.xy, r17.zwzz, r17.xyxx
                utof r18.xy, r12.ywyy
                add r12.yw, r17.xxxy, r18.xxxy
                mul r17.xy, r12.ywyy, cb1[84].xyxx
                utof r17.z, r13.x
                mul r18.xyz, r14.zyzz, cb1[84].xyxx
                mul r18.xyz, r16.xyzx, r18.xyzx
                mul r19.xyz, r15.zyzz, cb1[84].xyxx
                mul r16.xyz, r16.xyzx, r19.xyzx
                sample_d_indexable(texture2darray)(float,float,float,float) r12.y, r17.xyzx, t45.yxzw, s4, r18.xyzx, r16.xyzx
              else 
                ieq r12.z, r12.z, l(4)
                if_nz r12.z
                  and r12.z, r6.z, l(4095)
                  ubfe r12.w, l(12), l(12), r6.z
                  ubfe r13.x, l(10), l(20), r8.w
                  utof r16.xz, r11.wwww
                  utof r16.y, r12.x
                  mad r17.xy, r13.zwzz, r16.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r17.zw, r16.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r17.xy, r17.zwzz, r17.xyxx
                  utof r18.xy, r12.zwzz
                  add r12.zw, r17.xxxy, r18.xxxy
                  mul r17.xy, r12.zwzz, cb1[83].xyxx
                  utof r17.z, r13.x
                  mul r18.xyz, r14.zyzz, cb1[83].xyxx
                  mul r18.xyz, r16.xyzx, r18.xyzx
                  mul r19.xyz, r15.zyzz, cb1[83].xyxx
                  mul r16.xyz, r16.xyzx, r19.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r12.y, r17.xyzx, t42.yxzw, s4, r18.xyzx, r16.xyzx
                else 
                  and r12.z, r6.z, l(4095)
                  ubfe r6.z, l(12), l(12), r6.z
                  ubfe r8.w, l(10), l(20), r8.w
                  utof r16.xz, r11.wwww
                  utof r16.y, r12.x
                  mad r12.xw, r13.zzzw, r16.xxxy, l(0.500000, 0.000000, 0.000000, 0.500000)
                  add r13.xy, r16.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r12.xw, r12.xxxw, r13.xxxy
                  utof r13.x, r12.z
                  utof r13.y, r6.z
                  add r12.xz, r12.xxwx, r13.xxyx
                  mul r13.xy, r12.xzxx, cb1[83].zwzz
                  utof r13.z, r8.w
                  mul r12.xzw, r14.xxyz, cb1[83].zzwz
                  mul r12.xzw, r16.xxyz, r12.xxzw
                  mul r14.xyz, r15.xyzx, cb1[83].zwzz
                  mul r14.xyz, r16.xyzx, r14.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r12.y, r13.xyzx, t43.yxzw, s4, r12.xzwx, r14.xyzx
                endif 
              endif 
              mad r12.xzw, r12.yyyy, l(0.960000, 0.000000, 0.960000, 0.960000), l(0.040000, 0.000000, 0.040000, 0.040000)
              add_sat r6.z, -r12.y, l(1.000000)
              mul r11.xyz, r6.zzzz, r11.xyzx
            else 
              mov r12.xzw, l(0.040000,0,0.040000,0.040000)
            endif 
            add r6.z, -r10.w, l(1.000000)
            mul r13.xyz, r6.zzzz, r10.xyzx
            mad r10.xyz, r11.xyzx, r10.wwww, r13.xyzx
            mul r11.xyz, r6.zzzz, r9.xyzx
            mad r9.xyz, r12.xzwx, r10.wwww, r11.xyzx
            mad r9.w, r9.w, r6.z, r10.w
          endif 
        endif 
      endif 
    endif 
  endloop 
  mov r7.xyzw, r9.wxyz
  mov r8.xyz, r10.xyzx
  iadd r5.w, r5.w, l(32)
endloop 
mov_sat r7.x, r7.x
add r0.y, -r7.x, l(1.000000)
mul r0.zw, v2.xxxy, cb0[11].zzzw
mul r2.xy, cb0[13].xyxx, cb1[69].wwww
mad r2.xy, v2.xyxx, cb0[13].zzzz, r2.xyxx
sample_indexable(texture2d)(float,float,float,float) r2.xy, r2.xyxx, t24.xyzw, s6
mul r2.xy, r2.xyxx, cb0[13].wwww
mad r2.xy, v2.xyxx, cb0[12].xxxx, r2.xyxx
frc r2.zw, r2.xxxy
mad r5.xy, r2.zwzz, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
mul r2.zw, r2.zzzw, r2.zzzw
mul r5.zw, r2.zzzw, r5.xxxy
resinfo_indexable(texture2d)(float,float,float,float) r6.xy, l(0), t21.xyzw
mul r6.xy, r0.zwzz, r6.xyxx
deriv_rtx_coarse r6.zw, r6.xxxy
deriv_rty_coarse r6.xy, r6.xyxx
dp2 r1.w, r6.zwzz, r6.zwzz
dp2 r4.w, r6.xyxx, r6.xyxx
max r1.w, r1.w, r4.w
log r1.w, r1.w
mul r1.w, r1.w, l(0.500000)
round_ni r6.xy, r2.xyxx
div r6.xy, r6.xyxx, cb0[12].xxxx
sample_indexable(texture2d)(float,float,float,float) r6.xy, r6.xyxx, t22.xyzw, s5
add r6.xy, r6.xyxx, r6.xyxx
add r9.xyzw, r2.xyxy, l(1.000000, 0.000000, 0.000000, 1.000000)
round_ni r9.xyzw, r9.xyzw
div r9.xyzw, r9.xyzw, cb0[12].xxxx
sample_indexable(texture2d)(float,float,float,float) r6.zw, r9.xyxx, t22.zwxy, s5
add r6.zw, r6.zzzw, r6.zzzw
sample_indexable(texture2d)(float,float,float,float) r9.xy, r9.zwzz, t22.xyzw, s5
add r9.xy, r9.xyxx, r9.xyxx
add r2.xy, r2.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
round_ni r2.xy, r2.xyxx
div r2.xy, r2.xyxx, cb0[12].xxxx
sample_indexable(texture2d)(float,float,float,float) r2.xy, r2.xyxx, t22.xyzw, s5
add r2.xy, r2.xyxx, r2.xyxx
if_nz cb0[29].y
  sample_indexable(texture2d)(float,float,float,float) r9.zw, v2.xyxx, t22.zwxy, s5
  add r10.xy, r9.zwzz, r9.zwzz
  mad r10.zw, r10.xxxy, l(0.000000, 0.000000, -1.000000, 1.000000), l(0.000000, 0.000000, 1.000000, -1.000000)
  mad r9.zw, r10.xxxw, l(0.000000, 0.000000, -1.000000, 1.000000), l(0.000000, 0.000000, 1.000000, 0.000000)
  dp2 r4.w, r10.zwzz, r9.zwzz
  sqrt r4.w, r4.w
  mad r4.w, r4.w, cb0[20].y, cb0[20].x
  mul r9.zw, r4.wwww, cb0[17].xxxy
else 
  mov r9.zw, cb0[17].xxxy
endif 
mad r2.zw, -r5.xxxy, r2.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
mul r2.zw, r2.zzzw, r2.zzzw
mad r2.zw, r5.zzzw, r5.zzzw, r2.zzzw
rsq r2.zw, r2.zzzw
if_z cb0[14].x
  mul r4.w, cb0[12].y, cb1[69].w
  mad r5.xy, r6.xyxx, l(-1.000000, 1.000000, 0.000000, 0.000000), l(1.000000, -1.000000, 0.000000, 0.000000)
  mad r5.xy, r5.xyxx, r4.wwww, r0.zwzz
  sample_l_indexable(texture2d)(float,float,float,float) r5.xy, r5.xyxx, t21.xyzw, s3, r1.w
  mad r10.xy, r6.zwzz, l(-1.000000, 1.000000, 0.000000, 0.000000), l(1.000000, -1.000000, 0.000000, 0.000000)
  mad r10.xy, r10.xyxx, r4.wwww, r0.zwzz
  sample_l_indexable(texture2d)(float,float,float,float) r10.xy, r10.xyxx, t21.xyzw, s3, r1.w
  add r10.xy, -r5.xyxx, r10.xyxx
  mad r5.xy, r5.zzzz, r10.xyxx, r5.xyxx
  mad r10.xy, r9.xyxx, l(-1.000000, 1.000000, 0.000000, 0.000000), l(1.000000, -1.000000, 0.000000, 0.000000)
  mad r10.xy, r10.xyxx, r4.wwww, r0.zwzz
  sample_l_indexable(texture2d)(float,float,float,float) r10.xy, r10.xyxx, t21.xyzw, s3, r1.w
  mad r10.zw, r2.xxxy, l(0.000000, 0.000000, -1.000000, 1.000000), l(0.000000, 0.000000, 1.000000, -1.000000)
  mad r0.zw, r10.zzzw, r4.wwww, r0.zzzw
  sample_l_indexable(texture2d)(float,float,float,float) r0.zw, r0.zwzz, t21.zwxy, s3, r1.w
  add r0.zw, -r10.xxxy, r0.zzzw
  mad r0.zw, r5.zzzz, r0.zzzw, r10.xxxy
  add r0.zw, -r5.xxxy, r0.zzzw
  mad r0.zw, r5.wwww, r0.zzzw, r5.xxxy
  mad r0.zw, r0.zzzw, r9.zzzz, r9.wwww
else 
  mad r5.xy, r6.xyxx, l(-1.000000, 1.000000, 0.000000, 0.000000), l(1.000000, -1.000000, 0.000000, 0.000000)
  dp2 r4.w, r5.xyxx, r5.xyxx
  sqrt r4.w, r4.w
  max r4.w, r4.w, l(0.000010)
  div r10.xy, r5.xyxx, r4.wwww
  mov r10.z, -r10.x
  dp2 r5.x, v2.xyxx, r10.yzyy
  dp2 r5.y, v2.xyxx, -r10.xyxx
  mul r11.xy, r5.xyxx, cb0[11].zwzz
  mul r4.w, r4.w, cb1[69].w
  mad r11.z, -r4.w, cb0[12].y, r11.y
  sample_l_indexable(texture2d)(float,float,float,float) r5.xy, r11.xzxx, t21.xyzw, s3, r1.w
  mad r5.xy, r5.xyxx, r9.zzzz, r9.wwww
  dp2 r6.x, r5.xyxx, r10.yzyy
  dp2 r6.y, r5.xyxx, -r10.xyxx
  mad r5.xy, r6.zwzz, l(-1.000000, 1.000000, 0.000000, 0.000000), l(1.000000, -1.000000, 0.000000, 0.000000)
  dp2 r4.w, r5.xyxx, r5.xyxx
  sqrt r4.w, r4.w
  max r4.w, r4.w, l(0.000010)
  div r10.xy, r5.xyxx, r4.wwww
  mov r10.z, -r10.x
  dp2 r5.x, v2.xyxx, r10.yzyy
  dp2 r5.y, v2.xyxx, -r10.xyxx
  mul r11.xy, r5.xyxx, cb0[11].zwzz
  mul r4.w, r4.w, cb1[69].w
  mad r11.z, -r4.w, cb0[12].y, r11.y
  sample_l_indexable(texture2d)(float,float,float,float) r5.xy, r11.xzxx, t21.xyzw, s3, r1.w
  mad r5.xy, r5.xyxx, r9.zzzz, r9.wwww
  dp2 r11.x, r5.xyxx, r10.yzyy
  dp2 r11.y, r5.xyxx, -r10.xyxx
  add r5.xy, -r6.xyxx, r11.xyxx
  mad r5.xy, r5.zzzz, r5.xyxx, r6.xyxx
  mad r6.xy, r9.xyxx, l(-1.000000, 1.000000, 0.000000, 0.000000), l(1.000000, -1.000000, 0.000000, 0.000000)
  dp2 r4.w, r6.xyxx, r6.xyxx
  sqrt r4.w, r4.w
  max r4.w, r4.w, l(0.000010)
  div r6.xy, r6.xyxx, r4.wwww
  mov r6.z, -r6.x
  dp2 r9.x, v2.xyxx, r6.yzyy
  dp2 r9.y, v2.xyxx, -r6.xyxx
  mul r10.xy, r9.xyxx, cb0[11].zwzz
  mul r4.w, r4.w, cb1[69].w
  mad r10.z, -r4.w, cb0[12].y, r10.y
  sample_l_indexable(texture2d)(float,float,float,float) r9.xy, r10.xzxx, t21.xyzw, s3, r1.w
  mad r9.xy, r9.xyxx, r9.zzzz, r9.wwww
  dp2 r10.x, r9.xyxx, r6.yzyy
  dp2 r10.y, r9.xyxx, -r6.xyxx
  mad r2.xy, r2.xyxx, l(-1.000000, 1.000000, 0.000000, 0.000000), l(1.000000, -1.000000, 0.000000, 0.000000)
  dp2 r4.w, r2.xyxx, r2.xyxx
  sqrt r4.w, r4.w
  max r4.w, r4.w, l(0.000010)
  div r6.xy, r2.xyxx, r4.wwww
  mov r6.z, -r6.x
  dp2 r2.x, v2.xyxx, r6.yzyy
  dp2 r2.y, v2.xyxx, -r6.xyxx
  mul r11.xy, r2.xyxx, cb0[11].zwzz
  mul r2.x, r4.w, cb1[69].w
  mad r11.z, -r2.x, cb0[12].y, r11.y
  sample_l_indexable(texture2d)(float,float,float,float) r2.xy, r11.xzxx, t21.xyzw, s3, r1.w
  mad r2.xy, r2.xyxx, r9.zzzz, r9.wwww
  dp2 r9.x, r2.xyxx, r6.yzyy
  dp2 r9.y, r2.xyxx, -r6.xyxx
  add r2.xy, -r10.xyxx, r9.xyxx
  mad r2.xy, r5.zzzz, r2.xyxx, r10.xyxx
  add r2.xy, -r5.xyxx, r2.xyxx
  mad r0.zw, r5.wwww, r2.xxxy, r5.xxxy
endif 
mul r1.w, r2.w, r2.z
mul r0.zw, r0.zzzw, r1.wwww
mul r2.xyz, r0.wwww, v6.xyzx
mad r2.xyz, v5.xyzx, r0.zzzz, r2.xyzx
add r2.xyz, r2.xyzx, v4.xyzx
dp3 r0.z, r2.xyzx, r2.xyzx
rsq r0.z, r0.z
mul r2.xyz, r0.zzzz, r2.xyzx
movc r2.xyz, v10.xxxx, r2.xyzx, -r2.xyzx
dp3 r0.z, v7.xyzx, v7.xyzx
rsq r0.w, r0.z
mul r5.xyz, r0.wwww, v7.xyzx
dp3_sat r6.z, r2.xyzx, -r5.xyzx
if_nz v10.x
  ftoi r9.xy, v0.xyxx
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r0.w, r9.xyzw, t29.yzwx
  ge r1.w, r0.w, l(0.984375)
  mul r4.w, r0.w, l(1.01587307)
  mad r0.w, r0.w, l(64.000000), l(-63.000000)
  movc r0.w, r1.w, r0.w, r4.w
  max r0.w, r0.w, l(0.00000001)
  rcp r0.w, r0.w
  add r0.w, r0.w, -v0.w
  max r0.w, r0.w, l(0.000000)
  min r0.w, r0.w, cb0[21].x
  mov r1.w, cb0[19].y
else 
  sqrt r0.w, r0.z
  mov r1.w, cb0[19].x
endif 
if_nz cb0[28].y
  sample_indexable(texture2d)(float,float,float,float) r4.w, v8.xyxx, t25.yzwx, s7
  sample_indexable(texture2d)(float,float,float,float) r5.w, v8.zwzz, t25.yzwx, s7
  sample_indexable(texture2d)(float,float,float,float) r8.w, v9.xyxx, t25.yzwx, s7
  sample_indexable(texture2d)(float,float,float,float) r9.x, v9.zwzz, t25.xyzw, s7
  add r4.w, r4.w, r5.w
  add r4.w, r8.w, r4.w
  add r4.w, r9.x, r4.w
  mul r4.w, r4.w, cb0[27].w
  sample_indexable(texture2d)(float,float,float,float) r5.w, v2.xyxx, t22.xywz, s5
  mad r5.w, cb0[27].z, r5.w, cb0[27].y
  max r4.w, r4.w, l(0.000000)
  log r4.w, r4.w
  mul r4.w, r4.w, r5.w
  exp r4.w, r4.w
  mul r5.w, r0.w, cb0[28].x
  min r5.w, r5.w, l(1.000000)
  mul r8.w, r4.w, r5.w
  mad r4.w, -r4.w, r5.w, l(1.000000)
  mul r4.w, r4.w, cb0[17].z
else 
  mov r8.w, l(0)
  mov r4.w, cb0[17].z
endif 
dp3 r5.w, -v7.xyzx, -v7.xyzx
rsq r5.w, r5.w
mul r9.xyz, r5.wwww, -v7.xyzx
utof r10.xy, r1.xyxx
dp2 r9.w, r10.xyxx, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r9.w, r9.w
mul r9.w, r9.w, l(52.982918)
frc r9.w, r9.w
mad r9.w, r9.w, l(6.28318548), cb1[70].w
sincos r10.x, r11.x, r9.w
dp3_sat r9.w, r2.xyzx, r9.xyzx
dp3 r10.y, -r9.xyzx, r2.xyzx
add r10.y, r10.y, r10.y
mad r12.xyz, r2.xyzx, -r10.yyyy, -r9.xyzx
add r10.y, -r4.w, l(1.000000)
mul r10.z, r10.y, l(5.000000)
mad r10.w, r10.y, l(5.000000), l(-2.500000)
mul_sat r10.w, r10.w, l(0.400000)
mul r10.w, r10.w, l(100.000000)
mad r11.yz, -r10.yyyy, l(0.000000, 10.000000, 5.000000, 0.000000), l(0.000000, 6.857410, 7.085000, 0.000000)
exp r11.y, r11.y
mul r11.y, r9.w, r11.y
mul r11.w, r10.y, r10.z
mad r11.z, -r11.w, l(2.015905), r11.z
exp r11.z, r11.z
mul r11.z, r9.w, r11.z
mul r11.yz, r11.yyzy, l(0.000000, 9.136810, 9.708090, 0.000000)
max r11.y, r11.z, r11.y
max r11.y, r11.y, l(1.268160)
mov r13.xy, l(0,0,0,0)
mov r14.w, l(0)
mov r15.yz, l(0,0,1.000000,0)
mov r16.xy, l(0,0,0,0)
mov r17.xy, l(0,0,0,0)
mov r18.xy, l(0,0,0,0)
mov r6.xw, l(1.000000,0,0,0)
mov r19.xyzw, l(0,0,0,0)
mov r20.yzw, l(0,0,0,0)
mov r21.w, l(0)
mov r11.zw, l(0,0,0,0)
loop 
  uge r13.w, r11.w, cb2[0].y
  breakc_nz r13.w
  ushr r13.z, r11.w, l(5)
  iadd r14.xyz, r4.xyzx, r13.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r13.z, r14.xyzw, t7.yzxw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r22.xyzw, r11.w, l(0), t15.wxyz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r23.xyzw, r11.w, l(16), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r11.w, l(32), t15.yxwz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r11.w, l(48), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r11.w, l(64), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r11.w, l(80), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r14.xy, r11.w, l(96), t15.xyxx
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r11.w, l(116), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r11.w, l(132), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r11.w, l(148), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r11.w, l(164), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r11.w, l(180), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r11.w, l(196), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xy, r11.w, l(212), t15.xyxx
  add r35.xyz, -r22.yzwy, v7.xyzx
  dp3 r13.w, r35.xyzx, r35.xyzx
  sqrt r13.w, r13.w
  ge r13.w, cb2[54].y, r13.w
  and r14.z, r28.y, l(0x0000ffff)
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r14.z, l(0), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r14.z, l(16), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r38.xyzw, r14.z, l(32), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r39.xyzw, r14.z, l(48), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r40.xyzw, r14.z, l(64), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r41.xyzw, r14.z, l(80), t16.xyzw
  dp3 r15.w, r36.xyzx, r35.xyzx
  add_sat r15.w, r36.w, r15.w
  dp3 r16.w, r37.xyzx, r35.xyzx
  add_sat r16.w, r37.w, r16.w
  mul r15.w, r15.w, r16.w
  dp3 r16.w, r38.xyzx, r35.xyzx
  add_sat r16.w, r38.w, r16.w
  mul r15.w, r15.w, r16.w
  dp3 r16.w, r39.xyzx, r35.xyzx
  add_sat r16.w, r39.w, r16.w
  mul r15.w, r15.w, r16.w
  dp3 r16.w, r40.xyzx, r35.xyzx
  add_sat r16.w, r40.w, r16.w
  mul r15.w, r15.w, r16.w
  dp3 r16.w, r41.xyzx, r35.xyzx
  add_sat r16.w, r41.w, r16.w
  mul r15.x, r15.w, r16.w
  and r15.w, r14.x, l(1)
  movc r15.xw, r15.wwww, r15.xxxy, r15.zzzx
  mov r36.xy, r28.zwzz
  mov r36.z, r29.z
  dp3 r16.w, r12.xyzx, r36.xyzx
  dp3 r17.w, r35.xyzx, r36.xyzx
  add r17.w, -r29.w, r17.w
  ge r18.w, r17.w, l(0.000000)
  max r17.w, r10.w, |r17.w|
  movc r17.w, r18.w, r17.w, -r17.w
  max r16.w, -r16.w, l(0.00000010)
  div r16.w, r17.w, r16.w
  min r16.w, |r16.w|, l(131072.000000)
  mov r29.z, r30.z
  dp3 r17.w, r12.xyzx, r29.xyzx
  dp3 r18.w, r35.xyzx, r29.xyzx
  add r18.w, -r30.w, r18.w
  ge r22.w, r18.w, l(0.000000)
  max r18.w, r10.w, |r18.w|
  movc r18.w, r22.w, r18.w, -r18.w
  max r17.w, -r17.w, l(0.00000010)
  div r17.w, r18.w, r17.w
  min r16.w, r16.w, |r17.w|
  mov r30.z, r31.z
  dp3 r17.w, r12.xyzx, r30.xyzx
  dp3 r18.w, r35.xyzx, r30.xyzx
  add r18.w, -r31.w, r18.w
  ge r22.w, r18.w, l(0.000000)
  max r18.w, r10.w, |r18.w|
  movc r18.w, r22.w, r18.w, -r18.w
  max r17.w, -r17.w, l(0.00000010)
  div r17.w, r18.w, r17.w
  min r16.w, r16.w, |r17.w|
  mov r31.z, r32.z
  dp3 r17.w, r12.xyzx, r31.xyzx
  dp3 r18.w, r35.xyzx, r31.xyzx
  add r18.w, -r32.w, r18.w
  ge r22.w, r18.w, l(0.000000)
  max r18.w, r10.w, |r18.w|
  movc r18.w, r22.w, r18.w, -r18.w
  max r17.w, -r17.w, l(0.00000010)
  div r17.w, r18.w, r17.w
  min r16.w, r16.w, |r17.w|
  mov r32.z, r33.x
  dp3 r17.w, r12.xyzx, r32.xyzx
  dp3 r18.w, r35.xyzx, r32.xyzx
  add r18.w, -r33.y, r18.w
  ge r22.w, r18.w, l(0.000000)
  max r18.w, r10.w, |r18.w|
  movc r18.w, r22.w, r18.w, -r18.w
  max r17.w, -r17.w, l(0.00000010)
  div r17.w, r18.w, r17.w
  min r16.w, r16.w, |r17.w|
  mov r34.zw, r33.zzzw
  dp3 r17.w, r12.zxyz, r34.xzwx
  dp3 r18.w, r35.zxyz, r34.xzwx
  add r18.w, -r34.y, r18.w
  ge r22.w, r18.w, l(0.000000)
  max r18.w, r10.w, |r18.w|
  movc r18.w, r22.w, r18.w, -r18.w
  max r17.w, -r17.w, l(0.00000010)
  div r17.w, r18.w, r17.w
  min r16.w, r16.w, |r17.w|
  mov r29.x, r25.w
  mov r29.yz, r26.zzwz
  add r29.xyz, r35.xyzx, r29.xyzx
  mad r29.xyz, r12.xyzx, r16.wwww, r29.xyzx
  dp3 r17.w, r29.xyzx, r29.xyzx
  sqrt r17.w, r17.w
  div r16.w, r16.w, r17.w
  add r16.w, r16.w, r16.w
  sqrt r16.w, r16.w
  mad r16.w, r10.y, l(5.000000), r16.w
  add r16.w, r16.w, l(-0.844800)
  mov r22.y, r23.z
  mov r22.z, r24.x
  dp3 r30.x, r29.xyzx, r22.xyzx
  mov r31.xy, r23.xwxx
  mov r31.z, r24.w
  dp3 r30.y, r29.xyzx, r31.xyzx
  mov r24.x, r23.y
  dp3 r30.z, r29.xyzx, r24.xyzx
  ubfe r23.xy, l(6, 9, 0, 0), l(25, 16, 0, 0), r28.yyyy
  utof r30.w, r23.y
  sample_l_indexable(texturecubearray)(float,float,float,float) r23.yzw, r30.xyzw, t8.wxyz, s2, r16.w
  and r28.yzw, r23.yyzw, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
  ieq r28.yzw, r28.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
  or r16.w, r28.z, r28.y
  or r16.w, r28.w, r16.w
  movc r23.yzw, r16.wwww, l(0,1.000000,1.000000,0), r23.yyzw
  dp3 r29.x, r35.xyzx, r22.xyzx
  dp3 r29.y, r35.xyzx, r31.xyzx
  dp3 r29.z, r35.xyzx, r24.xyzx
  mad_sat r25.xyz, r29.xyzx, r25.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mov r26.z, r27.x
  mad r25.xyz, r25.xyzx, r26.xyzx, r27.yzwy
  dp3 r30.x, r2.xyzx, r22.xyzx
  dp3 r30.y, r2.xyzx, r31.xyzx
  dp3 r30.z, r2.xyzx, r24.xyzx
  lt r22.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r30.xyzx
  movc r16.z, r22.x, l(0), l(0.500000)
  add r24.xyz, r16.xyzx, r25.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r24.xyz, r24.xyzx, t17.xyzw, s4, l(0.000000)
  movc r17.z, r22.y, l(0), l(0.500000)
  add r22.xyw, r17.xyxz, r25.xyxz
  sample_l_indexable(texture3d)(float,float,float,float) r22.xyw, r22.xywx, t18.xywz, s4, l(0.000000)
  movc r18.z, r22.z, l(0), l(0.500000)
  add r25.xyz, r18.xyzx, r25.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r25.xyz, r25.xyzx, t19.xyzw, s4, l(0.000000)
  mul r26.xyz, r30.xyzx, r30.xyzx
  sample_l_indexable(texturecubearray)(float,float,float,float) r27.xyz, r30.xyzw, t8.xyzw, s2, l(6.000000)
  and r28.yzw, r27.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
  ieq r28.yzw, r28.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
  or r16.z, r28.z, r28.y
  or r16.z, r28.w, r16.z
  movc r27.xyz, r16.zzzz, l(1.000000,1.000000,0,0), r27.xyzx
  mov r29.xyzw, r19.xyzw
  mov r28.yzw, r20.yyzw
  mov r16.z, r21.w
  mov r16.w, r11.z
  mov r17.z, r13.z
  loop 
    breakc_z r17.z
    firstbit_lo r17.w, r17.z
    ishl r17.w, l(1), r17.w
    and r18.z, r17.w, r17.z
    if_nz r18.z
      not r17.w, r17.w
      and r17.z, r17.w, r17.z
      if_nz r13.w
        mov r17.w, r14.x
        mov r30.xy, r15.xwxx
        mov r18.z, l(1)
        loop 
          ige r18.w, r18.z, r23.x
          breakc_nz r18.w
          iadd r18.w, r14.z, r18.z
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r18.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r18.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r18.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r18.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r18.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r18.w, l(80), t16.xyzw
          dp3 r18.w, r31.xyzx, r35.xyzx
          add_sat r18.w, r31.w, r18.w
          mul r18.w, r18.w, r30.x
          dp3 r22.z, r32.xyzx, r35.xyzx
          add_sat r22.z, r32.w, r22.z
          mul r18.w, r18.w, r22.z
          dp3 r22.z, r33.xyzx, r35.xyzx
          add_sat r22.z, r33.w, r22.z
          mul r18.w, r18.w, r22.z
          dp3 r22.z, r34.xyzx, r35.xyzx
          add_sat r22.z, r34.w, r22.z
          mul r18.w, r18.w, r22.z
          dp3 r22.z, r36.xyzx, r35.xyzx
          add_sat r22.z, r36.w, r22.z
          mul r18.w, r18.w, r22.z
          dp3 r22.z, r37.xyzx, r35.xyzx
          add_sat r22.z, r37.w, r22.z
          mul r30.x, r18.w, r22.z
          ushr r24.w, r17.w, l(2)
          ubfe r25.w, l(1), l(2), r17.w
          and r26.w, r24.w, l(2)
          max r27.w, r30.x, r30.y
          mad r18.w, -r18.w, r22.z, l(1.000000)
          mul r18.w, r18.w, r30.y
          movc r6.y, r26.w, r18.w, r27.w
          movc r30.xy, r25.wwww, r30.xyxx, r6.xyxx
          iadd r18.z, r18.z, l(1)
          mov r17.w, r24.w
        endloop 
        mov_sat r30.y, r30.y
        mul r6.y, r14.y, r30.y
        lt r17.w, l(0.000000), r6.y
        if_nz r17.w
          iadd r17.w, r16.z, l(257)
          mad r31.z, r30.y, r14.y, r28.w
          mul r6.y, r28.x, r6.y
          mul r30.xzw, r6.yyyy, r26.xxyz
          mul r32.xyz, r22.xywx, r30.zzzz
          mad r32.xyz, r24.xyzx, r30.xxxx, r32.xyzx
          mad r30.xzw, r25.xxyz, r30.wwww, r32.xxyz
          mul r32.xyz, r27.xyzx, r30.xzwx
          dp3 r18.z, r32.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r32.xyz, r30.xzwx, r27.xyzx, r29.xyzx
          mul r18.w, r11.y, r18.z
          mul r30.xzw, r6.yyyy, r23.yyzw
          dp3 r6.y, r30.xzwx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r6.y, r11.y, r18.z, r6.y
          div r6.y, r18.w, r6.y
          mov r33.x, r29.w
          mov r33.yz, r28.yyzy
          mad r31.xyw, r30.zwzx, r6.yyyy, r33.yzyx
          mov r32.w, r31.w
        else 
          iadd r17.w, r16.z, l(1)
          mov r32.xyzw, r29.xyzw
          mov r31.xyz, r28.yzwy
        endif 
        mov r16.w, l(-1)
        mov r29.xyzw, r32.xyzw
        mov r28.yzw, r31.xxyz
        mov r16.z, r17.w
        break 
      endif 
    endif 
  endloop 
  if_nz r16.w
    mov r19.xyzw, r29.xyzw
    mov r20.yzw, r28.yyzw
    mov r21.w, r16.z
    mov r11.z, l(-1)
    break 
  endif 
  iadd r11.w, r11.w, l(32)
  mov r19.xyzw, r29.xyzw
  mov r20.yzw, r28.yyzw
  mov r21.w, r16.z
  mov r11.z, r16.w
endloop 
if_z r11.z
  iadd r6.x, cb2[0].y, -cb2[58].x
  and r6.y, r6.x, l(-32)
  iadd r11.z, -r6.y, r6.x
  and r11.w, cb2[0].y, l(-32)
  iadd r13.x, -r11.w, cb2[0].y
  mov r14.xy, l(0,0,0,0)
  mov r15.w, l(0)
  mov r16.yz, l(0,0,1.000000,0)
  mov r17.xy, l(0,0,0,0)
  mov r18.x, l(1.000000)
  mov r22.xy, l(0,0,0,0)
  mov r23.xy, l(0,0,0,0)
  mov r24.xyzw, r19.wxyz
  mov r25.xyz, r20.yzwy
  mov r25.w, r21.w
  mov r13.y, r6.y
  loop 
    uge r13.z, r13.y, cb2[0].y
    breakc_nz r13.z
    ushr r14.z, r13.y, l(5)
    iadd r15.xyz, r4.xyzx, r14.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r13.z, r15.xyzw, t7.yzxw
    ieq r13.w, r6.y, r13.y
    bfi r14.z, r11.z, l(0), l(0), r13.z
    movc r13.z, r13.w, r14.z, r13.z
    ieq r13.w, r11.w, r13.y
    ubfe r14.z, r13.x, l(0), r13.z
    movc r13.z, r13.w, r14.z, r13.z
    iadd r13.w, r13.y, cb2[0].x
    mov r26.xyzw, r24.yzwx
    mov r27.xyzw, r25.xyzw
    mov r14.z, r13.z
    loop 
      breakc_z r14.z
      firstbit_lo r14.w, r14.z
      ishl r15.x, l(1), r14.w
      and r15.y, r14.z, r15.x
      if_nz r15.y
        xor r14.z, r14.z, r15.x
        iadd r15.x, r13.w, r14.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r28.xyzw, r15.x, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r15.xy, r15.x, l(16), t11.xyxx
        add r28.xyz, r28.xyzx, -v7.xyzx
        mov r15.z, r28.w
        lt r15.xyz, |r28.xyzx|, r15.zxyz
        and r15.x, r15.y, r15.x
        and r15.x, r15.z, r15.x
        if_nz r15.x
          iadd r14.w, r13.y, r14.w
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r14.w, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r15.xy, r14.w, l(96), t15.xyxx
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r14.w, l(116), t15.zwxy
          add r30.xyz, -r28.yzwy, v7.xyzx
          and r15.z, r29.w, l(0x0000ffff)
          ubfe r16.w, l(6), l(25), r29.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r15.z, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r15.z, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r15.z, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r15.z, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r15.z, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r15.z, l(80), t16.xyzw
          dp3 r17.w, r31.xyzx, r30.xyzx
          add_sat r17.w, r31.w, r17.w
          dp3 r18.z, r32.xyzx, r30.xyzx
          add_sat r18.z, r32.w, r18.z
          mul r17.w, r17.w, r18.z
          dp3 r18.z, r33.xyzx, r30.xyzx
          add_sat r18.z, r33.w, r18.z
          mul r17.w, r17.w, r18.z
          dp3 r18.z, r34.xyzx, r30.xyzx
          add_sat r18.z, r34.w, r18.z
          mul r17.w, r17.w, r18.z
          dp3 r18.z, r35.xyzx, r30.xyzx
          add_sat r18.z, r35.w, r18.z
          mul r17.w, r17.w, r18.z
          dp3 r18.z, r36.xyzx, r30.xyzx
          add_sat r18.z, r36.w, r18.z
          mul r16.x, r17.w, r18.z
          and r17.w, r15.x, l(1)
          movc r18.zw, r17.wwww, r16.xxxy, r16.zzzx
          mov r16.x, r15.x
          mov r31.xy, r18.zwzz
          mov r17.w, l(1)
          loop 
            ige r22.w, r17.w, r16.w
            breakc_nz r22.w
            iadd r22.w, r15.z, r17.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r22.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r22.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r22.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r22.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r22.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r22.w, l(80), t16.xyzw
            dp3 r22.w, r32.xyzx, r30.xyzx
            add_sat r22.w, r32.w, r22.w
            mul r22.w, r22.w, r31.x
            dp3 r23.w, r33.xyzx, r30.xyzx
            add_sat r23.w, r33.w, r23.w
            mul r22.w, r22.w, r23.w
            dp3 r23.w, r34.xyzx, r30.xyzx
            add_sat r23.w, r34.w, r23.w
            mul r22.w, r22.w, r23.w
            dp3 r23.w, r35.xyzx, r30.xyzx
            add_sat r23.w, r35.w, r23.w
            mul r22.w, r22.w, r23.w
            dp3 r23.w, r36.xyzx, r30.xyzx
            add_sat r23.w, r36.w, r23.w
            mul r22.w, r22.w, r23.w
            dp3 r23.w, r37.xyzx, r30.xyzx
            add_sat r23.w, r37.w, r23.w
            mul r31.x, r22.w, r23.w
            ushr r28.w, r16.x, l(2)
            ubfe r30.w, l(1), l(2), r16.x
            and r31.z, r28.w, l(2)
            max r31.w, r31.x, r31.y
            mad r22.w, -r22.w, r23.w, l(1.000000)
            mul r22.w, r22.w, r31.y
            movc r18.y, r31.z, r22.w, r31.w
            movc r31.xy, r30.wwww, r31.xyxx, r18.xyxx
            iadd r17.w, r17.w, l(1)
            mov r16.x, r28.w
          endloop 
          mov_sat r31.y, r31.y
          mul r15.x, r15.y, r31.y
          lt r15.z, l(0.000000), r15.x
          if_nz r15.z
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r14.w, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r14.w, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r14.w, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r14.w, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r14.w, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r14.w, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r14.w, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xyzw, r14.w, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r40.xyzw, r14.w, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r41.xyzw, r14.w, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r42.xy, r14.w, l(212), t15.xyxx
            iadd r27.w, r27.w, l(257)
            mad r27.z, r31.y, r15.y, r27.z
            mul r14.w, r29.z, r15.x
            mov r29.z, r37.z
            dp3 r15.x, r12.xyzx, r29.xyzx
            dp3 r15.y, r30.xyzx, r29.xyzx
            add r15.y, -r37.w, r15.y
            ge r15.z, r15.y, l(0.000000)
            max r15.y, r10.w, |r15.y|
            movc r15.y, r15.z, r15.y, -r15.y
            max r15.x, -r15.x, l(0.00000010)
            div r15.x, r15.y, r15.x
            min r15.x, |r15.x|, l(131072.000000)
            mov r37.z, r38.z
            dp3 r15.y, r12.xyzx, r37.xyzx
            dp3 r15.z, r30.xyzx, r37.xyzx
            add r15.z, -r38.w, r15.z
            ge r16.x, r15.z, l(0.000000)
            max r15.z, r10.w, |r15.z|
            movc r15.z, r16.x, r15.z, -r15.z
            max r15.y, -r15.y, l(0.00000010)
            div r15.y, r15.z, r15.y
            min r15.x, |r15.y|, r15.x
            mov r38.z, r39.z
            dp3 r15.y, r12.xyzx, r38.xyzx
            dp3 r15.z, r30.xyzx, r38.xyzx
            add r15.z, -r39.w, r15.z
            ge r16.x, r15.z, l(0.000000)
            max r15.z, r10.w, |r15.z|
            movc r15.z, r16.x, r15.z, -r15.z
            max r15.y, -r15.y, l(0.00000010)
            div r15.y, r15.z, r15.y
            min r15.x, |r15.y|, r15.x
            mov r39.z, r40.z
            dp3 r15.y, r12.xyzx, r39.xyzx
            dp3 r15.z, r30.xyzx, r39.xyzx
            add r15.z, -r40.w, r15.z
            ge r16.x, r15.z, l(0.000000)
            max r15.z, r10.w, |r15.z|
            movc r15.z, r16.x, r15.z, -r15.z
            max r15.y, -r15.y, l(0.00000010)
            div r15.y, r15.z, r15.y
            min r15.x, |r15.y|, r15.x
            mov r40.z, r41.x
            dp3 r15.y, r12.xyzx, r40.xyzx
            dp3 r15.z, r30.xyzx, r40.xyzx
            add r15.z, -r41.y, r15.z
            ge r16.x, r15.z, l(0.000000)
            max r15.z, r10.w, |r15.z|
            movc r15.z, r16.x, r15.z, -r15.z
            max r15.y, -r15.y, l(0.00000010)
            div r15.y, r15.z, r15.y
            min r15.x, |r15.y|, r15.x
            mov r42.zw, r41.zzzw
            dp3 r15.y, r12.zxyz, r42.xzwx
            dp3 r15.z, r30.zxyz, r42.xzwx
            add r15.z, -r42.y, r15.z
            ge r16.x, r15.z, l(0.000000)
            max r15.z, r10.w, |r15.z|
            movc r15.z, r16.x, r15.z, -r15.z
            max r15.y, -r15.y, l(0.00000010)
            div r15.y, r15.z, r15.y
            min r15.x, |r15.y|, r15.x
            mov r29.x, r34.w
            mov r29.yz, r35.zzwz
            add r18.yzw, r30.xxyz, r29.xxyz
            mad r18.yzw, r12.xxyz, r15.xxxx, r18.yyzw
            dp3 r15.y, r18.yzwy, r18.yzwy
            sqrt r15.y, r15.y
            div r15.x, r15.x, r15.y
            add r15.x, r15.x, r15.x
            sqrt r15.x, r15.x
            mad r15.x, r10.y, l(5.000000), r15.x
            add r15.x, r15.x, l(-0.844800)
            mov r28.y, r32.z
            mov r28.z, r33.x
            dp3 r37.x, r18.yzwy, r28.xyzx
            mov r29.xy, r32.xwxx
            mov r29.z, r33.w
            dp3 r37.y, r18.yzwy, r29.xyzx
            mov r33.x, r32.y
            dp3 r37.z, r18.yzwy, r33.xyzx
            ubfe r15.y, l(9), l(16), r29.w
            utof r37.w, r15.y
            sample_l_indexable(texturecubearray)(float,float,float,float) r15.xyz, r37.xyzw, t8.xyzw, s2, r15.x
            and r18.yzw, r15.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
            ieq r18.yzw, r18.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
            or r16.x, r18.z, r18.y
            or r16.x, r18.w, r16.x
            movc r15.xyz, r16.xxxx, l(1.000000,1.000000,0,0), r15.xyzx
            dp3 r32.x, r30.xyzx, r28.xyzx
            dp3 r32.y, r30.xyzx, r29.xyzx
            dp3 r32.z, r30.xyzx, r33.xyzx
            mad_sat r18.yzw, r32.xxyz, r34.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
            mov r35.z, r36.x
            mad r18.yzw, r18.yyzw, r35.xxyz, r36.yyzw
            dp3 r37.x, r2.xyzx, r28.xyzx
            dp3 r37.y, r2.xyzx, r29.xyzx
            dp3 r37.z, r2.xyzx, r33.xyzx
            lt r28.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r37.xyzx
            movc r17.z, r28.x, l(0), l(0.500000)
            add r29.xyz, r17.xyzx, r18.yzwy
            sample_l_indexable(texture3d)(float,float,float,float) r29.xyz, r29.xyzx, t17.xyzw, s4, l(0.000000)
            mul r30.xyz, r37.xyzx, r37.xyzx
            mul r30.xyz, r14.wwww, r30.xyzx
            movc r22.z, r28.y, l(0), l(0.500000)
            add r28.xyw, r18.yzyw, r22.xyxz
            sample_l_indexable(texture3d)(float,float,float,float) r28.xyw, r28.xywx, t18.xywz, s4, l(0.000000)
            mul r28.xyw, r30.yyyy, r28.xyxw
            mad r28.xyw, r29.xyxz, r30.xxxx, r28.xyxw
            movc r23.z, r28.z, l(0), l(0.500000)
            add r18.yzw, r18.yyzw, r23.xxyz
            sample_l_indexable(texture3d)(float,float,float,float) r18.yzw, r18.yzwy, t19.wxyz, s4, l(0.000000)
            mad r18.yzw, r18.yyzw, r30.zzzz, r28.xxyw
            sample_l_indexable(texturecubearray)(float,float,float,float) r28.xyz, r37.xyzw, t8.xyzw, s2, l(6.000000)
            and r29.xyz, r28.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
            ieq r29.xyz, r29.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
            or r16.x, r29.y, r29.x
            or r16.x, r29.z, r16.x
            movc r28.xyz, r16.xxxx, l(1.000000,1.000000,0,0), r28.xyzx
            mul r29.xyz, r18.yzwy, r28.xyzx
            dp3 r16.x, r29.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r26.xyz, r18.yzwy, r28.xyzx, r26.xyzx
            mul r16.w, r11.y, r16.x
            mul r15.xyz, r14.wwww, r15.xyzx
            dp3 r14.w, r15.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r14.w, r11.y, r16.x, r14.w
            div r14.w, r16.w, r14.w
            mov r28.x, r26.w
            mov r28.yz, r27.xxyx
            mad r15.xyz, r15.xyzx, r14.wwww, r28.xyzx
            mov r26.w, r15.x
            mov r27.xy, r15.yzyy
          else 
            iadd r27.w, r27.w, l(1)
          endif 
        endif 
      endif 
    endloop 
    mov r24.xyzw, r26.wxyz
    mov r25.xyzw, r27.xyzw
    iadd r13.y, r13.y, l(32)
  endloop 
  mov r21.xyzw, r25.zxyw
  lt r11.w, r21.x, l(1.000000)
  if_nz r11.w
    mov r13.xy, l(0,0,0,0)
    mov r14.w, l(0)
    mov r15.yz, l(0,0,1.000000,0)
    mov r16.xy, l(0,0,0,0)
    mov r17.x, l(1.000000)
    mov r18.xy, l(0,0,0,0)
    mov r22.xy, l(0,0,0,0)
    mov r23.xyz, r24.yzwy
    mov r25.x, r24.x
    mov r25.yz, r21.yyzy
    mov r17.zw, r21.xxxw
    mov r11.w, r21.x
    mov r13.w, l(0)
    loop 
      uge r15.w, r13.w, r6.x
      breakc_nz r15.w
      ushr r13.z, r13.w, l(5)
      iadd r14.xyz, r4.xyzx, r13.xyzx
      ld_indexable(texture2darray)(uint,uint,uint,uint) r13.z, r14.xyzw, t7.yzxw
      ieq r14.x, r6.y, r13.w
      ubfe r14.y, r11.z, l(0), r13.z
      movc r13.z, r14.x, r14.y, r13.z
      iadd r14.x, r13.w, cb2[0].x
      mov r26.xyz, r23.xyzx
      mov r27.xyz, r25.xyzx
      mov r14.yz, r17.zzwz
      mov r15.w, r11.w
      mov r16.w, r13.z
      loop 
        breakc_z r16.w
        firstbit_lo r18.w, r16.w
        ishl r20.w, l(1), r18.w
        and r22.w, r16.w, r20.w
        if_nz r22.w
          xor r16.w, r16.w, r20.w
          iadd r20.w, r14.x, r18.w
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r28.xyzw, r20.w, l(0), t11.xyzw
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r29.xy, r20.w, l(16), t11.xyxx
          add r28.xyz, r28.xyzx, -v7.xyzx
          mov r29.z, r28.w
          lt r28.xyz, |r28.xyzx|, r29.zxyz
          and r20.w, r28.y, r28.x
          and r20.w, r28.z, r20.w
          if_nz r20.w
            iadd r18.w, r13.w, r18.w
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r18.w, l(0), t15.wxyz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xy, r18.w, l(96), t15.xyxx
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r18.w, l(116), t15.zwxy
            add r31.xyz, -r28.yzwy, v7.xyzx
            and r20.w, r30.w, l(0x0000ffff)
            ubfe r22.w, l(6), l(25), r30.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r20.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r20.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r20.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r20.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r20.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r20.w, l(80), t16.xyzw
            dp3 r23.w, r32.xyzx, r31.xyzx
            add_sat r23.w, r32.w, r23.w
            dp3 r25.w, r33.xyzx, r31.xyzx
            add_sat r25.w, r33.w, r25.w
            mul r23.w, r23.w, r25.w
            dp3 r25.w, r34.xyzx, r31.xyzx
            add_sat r25.w, r34.w, r25.w
            mul r23.w, r23.w, r25.w
            dp3 r25.w, r35.xyzx, r31.xyzx
            add_sat r25.w, r35.w, r25.w
            mul r23.w, r23.w, r25.w
            dp3 r25.w, r36.xyzx, r31.xyzx
            add_sat r25.w, r36.w, r25.w
            mul r23.w, r23.w, r25.w
            dp3 r25.w, r37.xyzx, r31.xyzx
            add_sat r25.w, r37.w, r25.w
            mul r15.x, r23.w, r25.w
            and r23.w, r29.x, l(1)
            movc r29.zw, r23.wwww, r15.xxxy, r15.zzzx
            mov r15.x, r29.x
            mov r32.xy, r29.zwzz
            mov r23.w, l(1)
            loop 
              ige r25.w, r23.w, r22.w
              breakc_nz r25.w
              iadd r25.w, r20.w, r23.w
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r25.w, l(0), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r25.w, l(16), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r25.w, l(32), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r25.w, l(48), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r25.w, l(64), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r38.xyzw, r25.w, l(80), t16.xyzw
              dp3 r25.w, r33.xyzx, r31.xyzx
              add_sat r25.w, r33.w, r25.w
              mul r25.w, r25.w, r32.x
              dp3 r26.w, r34.xyzx, r31.xyzx
              add_sat r26.w, r34.w, r26.w
              mul r25.w, r25.w, r26.w
              dp3 r26.w, r35.xyzx, r31.xyzx
              add_sat r26.w, r35.w, r26.w
              mul r25.w, r25.w, r26.w
              dp3 r26.w, r36.xyzx, r31.xyzx
              add_sat r26.w, r36.w, r26.w
              mul r25.w, r25.w, r26.w
              dp3 r26.w, r37.xyzx, r31.xyzx
              add_sat r26.w, r37.w, r26.w
              mul r25.w, r25.w, r26.w
              dp3 r26.w, r38.xyzx, r31.xyzx
              add_sat r26.w, r38.w, r26.w
              mul r32.x, r25.w, r26.w
              ushr r27.w, r15.x, l(2)
              ubfe r28.w, l(1), l(2), r15.x
              and r31.w, r27.w, l(2)
              max r32.z, r32.x, r32.y
              mad r25.w, -r25.w, r26.w, l(1.000000)
              mul r25.w, r25.w, r32.y
              movc r17.y, r31.w, r25.w, r32.z
              movc r32.xy, r28.wwww, r32.xyxx, r17.xyxx
              iadd r23.w, r23.w, l(1)
              mov r15.x, r27.w
            endloop 
            add_sat r15.x, -r15.w, r32.y
            mul r17.y, r29.y, r15.x
            lt r20.w, l(0.000000), r17.y
            if_nz r20.w
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r18.w, l(16), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r18.w, l(32), t15.yxwz
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r18.w, l(48), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r18.w, l(64), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r18.w, l(80), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r18.w, l(132), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xyzw, r18.w, l(148), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r40.xyzw, r18.w, l(164), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r41.xyzw, r18.w, l(180), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r42.xyzw, r18.w, l(196), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r43.xy, r18.w, l(212), t15.xyxx
              iadd r14.z, r14.z, l(257)
              mad r14.y, r15.x, r29.y, r14.y
              mul r15.x, r30.z, r17.y
              mov r30.z, r38.z
              dp3 r17.y, r12.xyzx, r30.xyzx
              dp3 r18.w, r31.xyzx, r30.xyzx
              add r18.w, -r38.w, r18.w
              ge r20.w, r18.w, l(0.000000)
              max r18.w, r10.w, |r18.w|
              movc r18.w, r20.w, r18.w, -r18.w
              max r17.y, -r17.y, l(0.00000010)
              div r17.y, r18.w, r17.y
              min r17.y, |r17.y|, l(131072.000000)
              mov r38.z, r39.z
              dp3 r18.w, r12.xyzx, r38.xyzx
              dp3 r20.w, r31.xyzx, r38.xyzx
              add r20.w, -r39.w, r20.w
              ge r22.w, r20.w, l(0.000000)
              max r20.w, r10.w, |r20.w|
              movc r20.w, r22.w, r20.w, -r20.w
              max r18.w, -r18.w, l(0.00000010)
              div r18.w, r20.w, r18.w
              min r17.y, r17.y, |r18.w|
              mov r39.z, r40.z
              dp3 r18.w, r12.xyzx, r39.xyzx
              dp3 r20.w, r31.xyzx, r39.xyzx
              add r20.w, -r40.w, r20.w
              ge r22.w, r20.w, l(0.000000)
              max r20.w, r10.w, |r20.w|
              movc r20.w, r22.w, r20.w, -r20.w
              max r18.w, -r18.w, l(0.00000010)
              div r18.w, r20.w, r18.w
              min r17.y, r17.y, |r18.w|
              mov r40.z, r41.z
              dp3 r18.w, r12.xyzx, r40.xyzx
              dp3 r20.w, r31.xyzx, r40.xyzx
              add r20.w, -r41.w, r20.w
              ge r22.w, r20.w, l(0.000000)
              max r20.w, r10.w, |r20.w|
              movc r20.w, r22.w, r20.w, -r20.w
              max r18.w, -r18.w, l(0.00000010)
              div r18.w, r20.w, r18.w
              min r17.y, r17.y, |r18.w|
              mov r41.z, r42.x
              dp3 r18.w, r12.xyzx, r41.xyzx
              dp3 r20.w, r31.xyzx, r41.xyzx
              add r20.w, -r42.y, r20.w
              ge r22.w, r20.w, l(0.000000)
              max r20.w, r10.w, |r20.w|
              movc r20.w, r22.w, r20.w, -r20.w
              max r18.w, -r18.w, l(0.00000010)
              div r18.w, r20.w, r18.w
              min r17.y, r17.y, |r18.w|
              mov r43.zw, r42.zzzw
              dp3 r18.w, r12.zxyz, r43.xzwx
              dp3 r20.w, r31.zxyz, r43.xzwx
              add r20.w, -r43.y, r20.w
              ge r22.w, r20.w, l(0.000000)
              max r20.w, r10.w, |r20.w|
              movc r20.w, r22.w, r20.w, -r20.w
              max r18.w, -r18.w, l(0.00000010)
              div r18.w, r20.w, r18.w
              min r17.y, r17.y, |r18.w|
              mov r29.x, r35.w
              mov r29.yz, r36.zzwz
              add r29.xyz, r31.xyzx, r29.xyzx
              mad r29.xyz, r12.xyzx, r17.yyyy, r29.xyzx
              dp3 r18.w, r29.xyzx, r29.xyzx
              sqrt r18.w, r18.w
              div r17.y, r17.y, r18.w
              add r17.y, r17.y, r17.y
              sqrt r17.y, r17.y
              mad r17.y, r10.y, l(5.000000), r17.y
              add r17.y, r17.y, l(-0.844800)
              mov r28.y, r33.z
              mov r28.z, r34.x
              dp3 r38.x, r29.xyzx, r28.xyzx
              mov r30.xy, r33.xwxx
              mov r30.z, r34.w
              dp3 r38.y, r29.xyzx, r30.xyzx
              mov r34.x, r33.y
              dp3 r38.z, r29.xyzx, r34.xyzx
              ubfe r18.w, l(9), l(16), r30.w
              utof r38.w, r18.w
              sample_l_indexable(texturecubearray)(float,float,float,float) r29.xyz, r38.xyzw, t8.xyzw, s2, r17.y
              and r32.xzw, r29.xxyz, l(0x7fffffff, 0, 0x7fffffff, 0x7fffffff)
              ieq r32.xzw, r32.xxzw, l(0x7f800000, 0, 0x7f800000, 0x7f800000)
              or r17.y, r32.z, r32.x
              or r17.y, r32.w, r17.y
              movc r29.xyz, r17.yyyy, l(1.000000,1.000000,0,0), r29.xyzx
              dp3 r33.x, r31.xyzx, r28.xyzx
              dp3 r33.y, r31.xyzx, r30.xyzx
              dp3 r33.z, r31.xyzx, r34.xyzx
              mad_sat r31.xyz, r33.xyzx, r35.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
              mov r36.z, r37.x
              mad r31.xyz, r31.xyzx, r36.xyzx, r37.yzwy
              dp3 r38.x, r2.xyzx, r28.xyzx
              dp3 r38.y, r2.xyzx, r30.xyzx
              dp3 r38.z, r2.xyzx, r34.xyzx
              lt r28.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r38.xyzx
              movc r16.z, r28.x, l(0), l(0.500000)
              add r30.xyz, r16.xyzx, r31.xyzx
              sample_l_indexable(texture3d)(float,float,float,float) r30.xyz, r30.xyzx, t17.xyzw, s4, l(0.000000)
              mul r32.xzw, r38.xxyz, r38.xxyz
              mul r32.xzw, r15.xxxx, r32.xxzw
              movc r18.z, r28.y, l(0), l(0.500000)
              add r28.xyw, r18.xyxz, r31.xyxz
              sample_l_indexable(texture3d)(float,float,float,float) r28.xyw, r28.xywx, t18.xywz, s4, l(0.000000)
              mul r28.xyw, r32.zzzz, r28.xyxw
              mad r28.xyw, r30.xyxz, r32.xxxx, r28.xyxw
              movc r22.z, r28.z, l(0), l(0.500000)
              add r30.xyz, r22.xyzx, r31.xyzx
              sample_l_indexable(texture3d)(float,float,float,float) r30.xyz, r30.xyzx, t19.xyzw, s4, l(0.000000)
              mad r28.xyz, r30.xyzx, r32.wwww, r28.xywx
              sample_l_indexable(texturecubearray)(float,float,float,float) r30.xyz, r38.xyzw, t8.xyzw, s2, l(6.000000)
              and r31.xyz, r30.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
              ieq r31.xyz, r31.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
              or r16.z, r31.y, r31.x
              or r16.z, r31.z, r16.z
              movc r30.xyz, r16.zzzz, l(1.000000,1.000000,0,0), r30.xyzx
              mul r31.xyz, r28.xyzx, r30.xyzx
              dp3 r16.z, r31.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
              mad r26.xyz, r28.xyzx, r30.xyzx, r26.xyzx
              mul r17.y, r11.y, r16.z
              mul r28.xyz, r15.xxxx, r29.xyzx
              dp3 r15.x, r28.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
              mad r15.x, r11.y, r16.z, r15.x
              div r15.x, r17.y, r15.x
              mad r27.xyz, r28.xyzx, r15.xxxx, r27.xyzx
            else 
              iadd r14.z, r14.z, l(1)
            endif 
          endif 
        endif 
      endloop 
      mov r23.xyz, r26.xyzx
      mov r25.xyz, r27.xyzx
      mov r17.zw, r14.yyyz
      iadd r13.w, r13.w, l(32)
    endloop 
    mov r24.xyz, r25.xyzx
    mov r21.yw, r17.zzzw
    mov r21.xw, r21.yyyw
  else 
    mov r23.xyz, r24.yzwy
    mov r24.yz, r21.yyzy
  endif 
  max r4.x, r21.x, l(1.000000)
  rcp r4.x, r4.x
  mov_sat r21.x, r21.x
  mul r19.xyz, r4.xxxx, r23.xyzx
  mul r20.xyz, r4.xxxx, r24.xyzx
  lt r4.y, r21.x, l(0.990000)
  if_nz r4.y
    iadd r21.w, r21.w, l(256)
    add r4.y, -r21.x, l(1.000000)
    mul r4.z, r4.y, cb2[19].x
    add r11.yzw, v7.xxyz, -cb2[35].xxyz
    mul r13.x, r11.y, cb2[35].w
    mul r13.yz, r11.zzwz, cb2[36].xxyx
    add_sat r11.yzw, r13.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
    mul r13.xy, r11.yzyy, cb2[36].zwzz
    mul r13.z, r11.w, cb2[37].x
    add r11.yzw, r13.xxyz, cb2[37].yyzw
    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r2.xyzx
    movc r13.xyz, r13.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
    mov r13.w, l(0)
    add r14.xyz, r11.yzwy, r13.wwxw
    sample_l_indexable(texture3d)(float,float,float,float) r14.xyz, r14.xyzx, t17.xyzw, s4, l(0.000000)
    mul r15.xyz, r2.xyzx, r2.xyzx
    mul r15.xyz, r4.zzzz, r15.xyzx
    add r16.xyz, r11.yzwy, r13.wwyw
    sample_l_indexable(texture3d)(float,float,float,float) r16.xyz, r16.xyzx, t18.xyzw, s4, l(0.000000)
    mul r16.xyz, r15.yyyy, r16.xyzx
    mad r14.xyz, r14.xyzx, r15.xxxx, r16.xyzx
    add r11.yzw, r11.yyzw, r13.wwwz
    sample_l_indexable(texture3d)(float,float,float,float) r11.yzw, r11.yzwy, t19.wxyz, s4, l(0.000000)
    mad r11.yzw, r11.yyzw, r15.zzzz, r14.xxyz
    mov r2.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r13.xyz, r2.xyzw, t8.xyzw, s2, l(6.000000)
    mul r11.yzw, r11.yyzw, r13.xxyz
    dp3 r2.w, r11.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
    mad r19.xyz, r23.xyzx, r4.xxxx, r11.yzwy
    mov r12.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r10.yzw, r12.xyzw, t8.wxyz, s2, r10.z
    mad r4.x, cb2[19].x, r4.y, -r2.w
    mad r2.w, r4.w, r4.x, r2.w
    mad r20.xyz, r10.yzwy, r2.wwww, r20.xyzx
  endif 
else 
  mov r20.x, r19.w
endif 
if_nz cb0[28].z
  dp3 r2.w, r5.xyzx, r2.xyzx
  add r2.w, r2.w, r2.w
  mad r4.xyz, r2.xyzx, -r2.wwww, r5.xyzx
  dp3 r2.w, r5.xyzx, -r2.xyzx
  add r2.w, r2.w, r2.w
  mad r10.yzw, r2.xxyz, r2.wwww, r5.xxyz
  movc r4.xyz, v10.xxxx, r4.xyzx, r10.yzwy
  if_nz cb0[28].w
    mul r10.yzw, v7.yyyy, cb1[5].xxyz
    mad r10.yzw, v7.xxxx, cb1[4].xxyz, r10.yyzw
    mad r10.yzw, v7.zzzz, cb1[6].xxyz, r10.yyzw
    mul r11.yzw, r4.xxyz, cb0[21].zzzz
    mul r12.xyz, r11.zzzz, cb1[5].xyzx
    mad r12.xyz, r11.yyyy, cb1[4].xyzx, r12.xyzx
    mad r11.yzw, r11.wwww, cb1[6].xxyz, r12.xxyz
    min r2.w, cb0[21].x, l(1000.000000)
    mad r10.yzw, r11.yyzw, l(0.000000, 10.000000, 10.000000, 10.000000), r10.yyzw
    div r2.w, r2.w, cb0[21].z
    mov r12.xyz, r20.xyzx
    mov r13.xyz, r10.yzwy
    mov r4.w, l(0)
    loop 
      itof r6.x, r4.w
      ge r6.x, r6.x, r2.w
      breakc_nz r6.x
      add r13.xyz, r11.yzwy, r13.xyzx
      mul r14.xyz, r13.yyyy, cb1[1].xywx
      mad r14.xyz, r13.xxxx, cb1[0].xywx, r14.xyzx
      mad r14.xyz, r13.zzzz, cb1[2].xywx, r14.xyzx
      add r14.xyz, r14.xyzx, cb1[3].xywx
      max r6.x, |r14.y|, |r14.x|
      lt r6.x, r14.z, r6.x
      if_nz r6.x
        break 
      endif 
      div r6.xy, r14.xyxx, r14.zzzz
      mad r6.xy, r6.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      sample_l_indexable(texture2d)(float,float,float,float) r6.x, r6.xyxx, t26.xyzw, s8, l(1.000000)
      lt r6.y, |r6.x|, r13.z
      ge r12.w, |r6.x|, v0.w
      and r6.y, r6.y, r12.w
      if_nz r6.y
        add r6.x, -|r6.x|, r13.z
        mul r6.x, r6.x, cb0[21].w
        mad r14.xyz, -r6.xxxx, r11.yzwy, r13.xyzx
        mul r15.xyz, r14.yyyy, cb1[1].xywx
        mad r14.xyw, r14.xxxx, cb1[0].xyxw, r15.xyxz
        mad r14.xyz, r14.zzzz, cb1[2].xywx, r14.xywx
        add r14.xyz, r14.xyzx, cb1[3].xywx
        div r6.xy, r14.xyxx, r14.zzzz
        mad r6.xy, r6.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r14.xyz, r6.xyxx, t30.xyzw, s8, l(0.000000)
        mul r14.xyz, r14.xyzx, cb1[85].xxxx
        mov r12.xyz, r14.xyzx
        break 
      endif 
      iadd r4.w, r4.w, l(1)
    endloop 
    mov r20.xyz, r12.xyzx
  else 
    mul r2.w, r0.w, cb0[21].y
    mad r4.xyz, r4.xyzx, r2.wwww, v7.xyzx
    mul r10.yzw, r4.yyyy, cb1[9].xxyw
    mad r4.xyw, r4.xxxx, cb1[8].xyxw, r10.yzyw
    mad r4.xyz, r4.zzzz, cb1[10].xywx, r4.xywx
    add r4.xyz, r4.xyzx, cb1[11].xywx
    div r4.xy, r4.xyxx, r4.zzzz
    max r2.w, |r4.y|, |r4.x|
    mad r4.xy, r4.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r4.z, r4.xyxx, t26.yzxw, s8, l(0.000000)
    ge r4.z, |r4.z|, v0.w
    lt r2.w, r2.w, l(1.000000)
    and r2.w, r2.w, r4.z
    sample_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xyxx, t30.xyzw, s8
    if_nz r2.w
      mul r20.xyz, r4.xyzx, cb1[85].xxxx
    endif 
  endif 
endif 
dp3 r2.w, r2.xyzx, cb2[17].xyzx
mov_sat r4.x, r2.w
ge r4.y, l(0.000000), r4.x
if_nz r4.y
  mov r4.z, l(0)
endif 
if_z r4.y
  mul r10.yzw, v7.yyyy, cb2[29].xxyz
  mad r10.yzw, v7.xxxx, cb2[28].xxyz, r10.yyzw
  mad r10.yzw, v7.zzzz, cb2[30].xxyz, r10.yyzw
  add r10.yzw, r10.yyzw, cb2[31].xxyz
  add r4.y, r10.w, -cb2[17].w
  mad r4.y, -r4.y, l(0.00006104), l(1.000000)
  mov_sat r4.w, r4.y
  eq r4.w, r4.y, r4.w
  if_nz r4.w
    mov r4.w, l(0)
    mov r6.x, l(0)
    loop 
      ge r6.y, r4.w, l(3.000000)
      breakc_nz r6.y
      ftou r6.y, r4.w
      add r11.yz, r10.yyzy, -cb2[r6.y + 20].xxyx
      max r11.y, |r11.z|, |r11.y|
      mul r6.x, r11.y, cb2[r6.y + 20].z
      lt r6.y, r6.x, l(1.000000)
      if_nz r6.y
        break 
      endif 
      add r4.w, r4.w, l(1.000000)
      mov r6.x, l(0)
    endloop 
  else 
    mov r4.w, l(3.000000)
    mov r6.x, l(0)
  endif 
  ge r6.y, r4.w, l(3.000000)
  if_nz r6.y
    mul r11.yzw, l(0.000000, 128.000000, 0.500000, 0.500000), cb2[27].zzxy
    rcp r12.xz, r11.yyyy
    mov r12.y, -r12.z
    mad r11.yzw, r10.yyzy, r12.xxyz, r11.zzwz
    add r12.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r11.yzw, r11.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r11.yzw, r12.xxyz, r11.yyzw
    mul r12.xy, r11.wzww, cb2[32].xxxx
    round_ni r12.xy, r12.xyxx
    mul r12.y, r12.y, cb2[27].x
    mad r12.x, r12.y, cb2[32].x, r12.x
    ftou r12.x, r12.x
    iadd r12.x, r12.x, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r12.y, r12.x, l(0), t23.xxxx
    and r12.z, r12.y, l(0x40000000)
    ishl r12.w, r12.y, l(2)
    if_z r12.z
      and r12.z, r12.y, l(0x01ffffff)
      iadd r13.x, r12.z, r12.x
      ushr r12.x, r12.y, l(25)
      utof r12.x, r12.x
      mul r11.yzw, r11.yyzw, r12.xxxx
      frc r11.yzw, r11.yyzw
      mul r11.yzw, r11.yyzw, l(0.000000, 128.000000, 128.000000, 128.000000)
      ftou r11.yzw, r11.yyzw
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r13.z, r13.x, l(0), t23.xxxx
      ushr r12.xy, r11.wzww, l(6, 6, 0, 0)
      and r12.z, r13.z, l(0xc0000000)
      iadd r13.w, r13.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r13.w, r13.w, l(0), t23.xxxx
      movc r12.y, r12.y, r13.z, r13.w
      ushr r13.w, r12.y, l(13)
      movc r12.x, r12.x, r13.w, r12.y
      and r12.x, r12.x, l(8191)
      iadd r14.x, r12.x, r13.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r14.z, r14.x, l(0), t23.xxxx
      mov r13.y, l(0)
      mov r14.y, l(1)
      movc r14.xyz, r12.zzzz, r13.xyzx, r14.xyzx
      movc r15.yz, r12.zzzz, l(0,6,1,0), l(0,5,2,0)
      ushr r12.xy, r11.wzww, r15.yyyy
      and r12.xy, r12.xyxx, l(1, 1, 0, 0)
      and r13.w, r14.z, l(0xc0000000)
      iadd r14.w, r14.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r14.w, r14.w, l(0), t23.xxxx
      movc r12.y, r12.y, r14.z, r14.w
      ushr r14.w, r12.y, l(13)
      movc r12.x, r12.x, r14.w, r12.y
      and r12.x, r12.x, l(8191)
      iadd r15.x, r12.x, r14.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.w, r15.x, l(0), t23.xxxx
      movc r14.xyz, r13.wwww, r14.xyzx, r15.xzwx
      movc r12.xyz, r12.zzzz, r13.xyzx, r14.xyzx
      and r13.x, r12.z, l(0xc0000000)
      if_z r13.x
        iadd r13.x, -r12.y, l(6)
        ushr r13.xy, r11.wzww, r13.xxxx
        or r13.z, r12.z, l(0x40000000)
        bfi r13.y, l(1), l(1), r13.y, l(0)
        bfi r13.x, l(1), l(0), r13.x, r13.y
        imul null, r13.x, r13.x, l(10)
        ushr r13.x, r13.z, r13.x
        and r13.x, r13.x, l(1023)
        iadd r13.x, r12.x, r13.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r13.w, r13.x, l(0), t23.xxxx
        iadd r13.yz, r12.yyyy, l(0, 1, 2, 0)
        iadd r12.y, -r13.y, l(6)
        ushr r14.xy, r11.wzww, r12.yyyy
        and r12.y, r13.w, l(0xc0000000)
        or r14.z, r13.w, l(0x40000000)
        bfi r14.y, l(1), l(1), r14.y, l(0)
        bfi r14.x, l(1), l(0), r14.x, r14.y
        imul null, r14.x, r14.x, l(10)
        ushr r14.x, r14.z, r14.x
        and r14.x, r14.x, l(1023)
        iadd r14.x, r13.x, r14.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r14.z, r14.x, l(0), t23.xxxx
        mov r14.y, r13.z
        movc r14.xyz, r12.yyyy, r13.xywx, r14.xyzx
        iadd r13.y, -r14.y, l(6)
        ushr r13.yz, r11.wwzw, r13.yyyy
        and r14.y, r14.z, l(0xc0000000)
        or r14.w, r14.z, l(0x40000000)
        bfi r13.z, l(1), l(1), r13.z, l(0)
        bfi r13.y, l(1), l(0), r13.y, r13.z
        imul null, r13.y, r13.y, l(10)
        ushr r13.y, r14.w, r13.y
        and r13.y, r13.y, l(1023)
        iadd r15.x, r13.y, r14.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.y, r15.x, l(0), t23.xxxx
        movc r13.yz, r14.yyyy, r14.xxzx, r15.xxyx
        movc r12.xz, r12.yyyy, r13.xxwx, r13.yyzy
      endif 
      and r12.y, r12.z, l(0xc0000000)
      if_z r12.y
        ubfe r13.x, l(14), l(15), r12.z
        utof r13.x, r13.x
        mul r13.x, r13.x, cb2[27].w
        and r13.yz, r12.zzzz, l(0, 0x00007fff, 0x20000000, 0)
        utof r13.y, r13.y
        mul r13.y, r13.y, cb2[27].w
        mul r13.xy, r13.xyxx, l(0.00006104, 0.00003052, 0.000000, 0.000000)
        and r13.w, r11.z, l(3)
        iadd r13.w, r12.x, r13.w
        iadd r13.w, r13.w, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r13.w, r13.w, l(0), t23.xxxx
        bfi r14.xyz, l(2, 2, 1, 0), l(3, 1, 4, 0), r11.yzwy, l(0, 0, 0, 0)
        ushr r11.y, r13.w, r14.x
        and r11.y, r11.y, l(255)
        utof r11.y, r11.y
        mul r11.y, r13.y, r11.y
        mad r11.y, r11.y, l(0.00392157), r13.x
        iadd r11.z, r14.y, l(1)
        ubfe r11.w, l(1), l(1), r11.w
        iadd r11.z, r11.w, r11.z
        iadd r11.z, r11.z, r12.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r11.z, r11.z, l(0), t23.xxxx
        ushr r11.z, r11.z, r14.z
        and r11.z, r11.z, l(0x0000ffff)
        utof r11.z, r11.z
        mul r11.z, r13.y, r11.z
        mad r11.z, r11.z, l(0.00001526), r13.x
        movc r12.w, r13.z, r11.y, r11.z
      else 
        and r11.y, r12.z, l(0x80000000)
        iadd r11.z, r12.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r11.z, r11.z, l(0), t23.xxxx
        movc r11.y, r11.y, r11.z, l(0)
        ishl r11.z, r12.z, l(2)
        ushr r11.w, r11.y, l(16)
        and r11.y, r11.y, l(0x0000ffff)
        f16tof32 r11.yw, r11.yyyw
        mad r11.z, r10.y, r11.w, r11.z
        mad r11.y, r10.z, r11.y, r11.z
        movc r12.w, r12.y, r11.y, r12.w
      endif 
    endif 
    mad r10.w, -cb2[27].z, l(2.000000), r10.w
    lt r10.w, r12.w, r10.w
    movc r4.z, r10.w, l(0), l(1.000000)
  endif 
  if_z r6.y
    if_z cb2[58].y
      ftou r6.y, r4.w
      add r11.yz, r10.yyzy, -cb2[r6.y + 20].xxyx
      mul r11.yz, r11.yyzy, cb2[r6.y + 20].zzzz
      mad r12.xy, r11.yzyy, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r6.y, cb2[26].y
      add r12.z, r4.w, r6.y
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r6.y, r12.xyzx, t13.xxxx, s13, r4.y
      sample_l_indexable(texture2darray)(float,float,float,float) r10.w, r12.xyzx, t31.yzwx, s0, l(0.000000)
      add r6.y, r6.y, r10.w
      add_sat r6.y, r6.y, l(-1.000000)
      mul r10.w, r6.y, r6.y
      mul r4.z, r6.y, r10.w
    endif 
    if_nz cb2[58].y
      mov r12.x, -r10.x
      ftou r6.y, r4.w
      add r4.w, r4.w, l(1.000000)
      min r4.w, r4.w, l(2.000000)
      ftou r4.w, r4.w
      add r6.x, -r6.x, l(1.000000)
      mul r6.x, r6.x, l(28.000000)
      ftou r6.x, r6.x
      add r11.yz, r10.yyzy, -cb2[r6.y + 20].xxyx
      mul r11.yz, r11.yyzy, cb2[r6.y + 20].zzzz
      mad r11.yz, r11.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      add r10.yz, r10.yyzy, -cb2[r4.w + 20].xxyx
      mul r10.yz, r10.yyzy, cb2[r4.w + 20].zzzz
      mad r10.yz, r10.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      mov r12.y, r11.x
      mov r12.z, r10.x
      mov r10.w, l(0)
      mov r11.w, l(0)
      loop 
        uge r12.w, r11.w, l(8)
        breakc_nz r12.w
        ult r12.w, r6.x, r11.w
        movc r13.xy, r12.wwww, r10.yzyy, r11.yzyy
        movc r13.z, r12.w, cb2[r4.w + 20].w, cb2[r6.y + 20].w
        movc r12.w, r12.w, r4.w, r6.y
        dp2 r14.x, icb[r11.w + 0].yxyy, r12.xyxx
        dp2 r14.y, icb[r11.w + 0].yxyy, r12.yzyy
        mad r13.xy, r14.xyxx, r13.zzzz, r13.xyxx
        iadd r12.w, r12.w, cb2[26].y
        utof r13.z, r12.w
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.w, r13.xyzx, t13.xxxx, s13, r4.y
        sample_l_indexable(texture2darray)(float,float,float,float) r13.x, r13.xyzx, t31.xyzw, s0, l(0.000000)
        add r12.w, r12.w, r13.x
        add_sat r12.w, r12.w, l(-1.000000)
        mad r10.w, r12.w, l(0.125000), r10.w
        iadd r11.w, r11.w, l(1)
      endloop 
      mul r4.y, r10.w, r10.w
      mul r4.z, r10.w, r4.y
    endif 
  endif 
endif 
and r4.y, cb2[53].x, l(0x0000ffff)
ult r4.w, l(0), r4.y
lt r6.x, l(0.000000), r4.z
and r4.w, r4.w, r6.x
if_nz r4.w
  iadd r4.y, r4.y, cb2[0].x
  iadd r4.y, r4.y, l(-1)
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r4.w, r4.y, l(52), t12.xxxx
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.xyzw, r4.y, l(68), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.xyzw, r4.y, l(84), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.xyzw, r4.y, l(100), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r4.y, l(116), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r4.y, l(132), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r4.y, l(148), t12.xyzw
  mad r2.w, |r2.w|, l(-0.200000), l(0.400000)
  mad r18.xyz, r2.xyzx, r2.wwww, v7.xyzx
  mov r18.w, l(1.000000)
  dp4 r6.x, r12.xyzw, r18.xyzw
  dp4 r6.y, r13.xyzw, r18.xyzw
  dp4 r2.w, r14.xyzw, r18.xyzw
  dp4 r10.y, r15.xyzw, r18.xyzw
  lt r10.z, r10.y, r2.w
  div r6.xy, r6.xyxx, r10.yyyy
  mad r6.xy, r6.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  add r6.xy, r17.zwzz, r6.xyxx
  mul r6.xy, r17.xyxx, r6.xyxx
  div r11.yz, r4.wwww, r16.xxzx
  add r12.xy, -r11.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
  ge r12.xy, r6.xyxx, r12.xyxx
  ge r11.yz, r11.yyzy, r6.xxyx
  or r11.yz, r11.yyzy, r12.xxyx
  or r10.w, r11.z, r11.y
  or r10.z, r10.z, r10.w
  if_z r10.z
    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r10.z, r4.y, l(28), t12.xxxx
    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r11.yz, r4.y, l(164), t12.xxyx
    mov_sat r6.xy, r6.xyxx
    mad r12.xy, r6.xyxx, r16.xzxx, r16.ywyy
    mul r4.y, r10.y, r11.z
    mad r2.w, r11.y, r10.y, r2.w
    div r2.w, r2.w, r4.y
    max r2.w, r2.w, l(0.00006104)
    and r4.y, r10.z, l(0x0000ffff)
    if_nz cb2[58].y
      mov r13.x, -r10.x
      utof r14.z, r4.y
      mov r13.y, r11.x
      mov r13.z, r10.x
      mov r6.xy, l(0,0,0,0)
      loop 
        ige r10.x, r6.y, l(8)
        breakc_nz r10.x
        dp2 r10.x, icb[r6.y + 0].yxyy, r13.xyxx
        dp2 r10.y, icb[r6.y + 0].yxyy, r13.yzyy
        mad r14.xy, r10.xyxx, r4.wwww, r12.xyxx
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.x, r14.xyzx, t9.xxxx, s13, r2.w
        mad r6.x, r10.x, l(0.125000), r6.x
        iadd r6.y, r6.y, l(1)
      endloop 
    else 
      utof r12.z, r4.y
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r6.x, r12.xyzx, t9.xxxx, s13, r2.w
    endif 
    mul r2.w, r6.x, r6.x
    mul r2.w, r6.x, r2.w
  else 
    mov r2.w, l(1.000000)
  endif 
  mul r4.z, r2.w, r4.z
endif 
lt r2.w, l(0.000000), r4.x
lt r4.y, l(0.000000), r4.z
if_nz r4.y
  if_nz cb2[23].x
    mov r3.w, l(1.000000)
    dp4 r4.y, cb2[24].xyzw, r3.xyzw
    dp4 r3.x, cb2[25].xyzw, r3.xyzw
    frc r10.x, r4.y
    frc r10.y, r3.x
    iadd r3.x, l(-1), cb2[23].x
    utof r10.z, r3.x
    sample_l_indexable(texture2darray)(float,float,float,float) r3.xyz, r10.xyzx, t20.xyzw, s2, l(0.000000)
    add r3.xyz, r3.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
    mad r3.xyz, cb2[23].yyyy, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mul r3.xyz, r3.xyzx, cb2[18].xyzx
  else 
    mov r3.xyz, cb2[18].xyzx
  endif 
  mul r3.xyz, r3.xyzx, r4.zzzz
  add r3.w, r4.x, r9.w
  div r3.w, r4.x, r3.w
  mad r4.yzw, r3.xxyz, r3.wwww, r19.xxyz
  mad r10.xyz, -v7.xyzx, r5.wwww, cb2[17].xyzx
  dp3 r3.w, r10.xyzx, r10.xyzx
  rsq r3.w, r3.w
  mul r10.xyz, r3.wwww, r10.xyzx
  dp3_sat r3.w, r2.xyzx, r10.xyzx
  dp3_sat r5.w, r10.xyzx, r9.xyzx
  mul r6.x, r3.w, r3.w
  mad r6.xy, r6.xxxx, cb0[15].xzxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  mul r6.xy, r6.xyxx, r6.xyxx
  div r6.xy, cb0[15].ywyy, r6.xyxx
  mul r6.xy, r3.wwww, r6.xyxx
  mul r3.w, r5.w, l(4.000000)
  div r6.xy, r6.xyxx, r3.wwww
  mul r6.xy, r6.xyxx, cb0[16].xyxx
  mul r9.xyz, r3.xyzx, r6.xxxx
  mad r9.xyz, r9.xyzx, r4.xxxx, r20.xyzx
  mul r3.xyz, r3.xyzx, r6.yyyy
  mad r3.xyz, r3.xyzx, r4.xxxx, r9.xyzx
  mov r6.xy, l(1,1,0,0)
else 
  mov r4.yzw, r19.xxyz
  mov r3.xyz, r20.xyzx
  mov r6.xy, l(0,0,0,0)
endif 
movc r4.xyz, r2.wwww, r4.yzwy, r19.xyzx
movc r3.xyz, r2.wwww, r3.xyzx, r20.xyzx
sample_indexable(texture2d)(float,float,float,float) r9.xyzw, r6.zwzz, t0.xyzw, s1
mul r10.xy, r2.yyyy, cb1[5].xyxx
mad r2.xy, r2.xxxx, cb1[4].xyxx, r10.xyxx
mad r2.xy, r2.zzzz, cb1[6].xyxx, r2.xyxx
add r2.z, r0.w, l(1.000000)
log r2.z, r2.z
mul r2.z, r2.z, cb0[16].w
min r2.z, r2.z, l(500.000000)
mad r2.xy, r2.zzzz, r2.xyxx, v0.xyxx
add r10.xy, cb1[44].xyxx, l(-1.000000, -1.000000, 0.000000, 0.000000)
max r2.xy, r2.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r2.xy, r10.xyxx, r2.xyxx
ftoi r10.xy, r2.xyxx
mov r10.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r2.z, r10.xyzw, t29.yzxw
ge r3.w, r2.z, l(0.984375)
mul r4.w, r2.z, l(1.01587307)
mad r2.z, r2.z, l(64.000000), l(-63.000000)
movc r2.z, r3.w, r2.z, r4.w
max r2.z, r2.z, l(0.00000001)
rcp r2.z, r2.z
lt r0.x, r0.x, r2.z
mul r2.xy, r2.xyxx, cb1[44].zwzz
sample_indexable(texture2d)(float,float,float,float) r2.xyz, r2.xyxx, t30.xyzw, s9
if_z r0.x
  ftoi r10.xy, v0.xyxx
  mov r10.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r2.xyz, r10.xyzw, t30.xyzw
endif 
mul r10.xyz, r2.xyzx, cb1[85].xxxx
mad r0.x, r0.w, l(2.000000), l(1.000000)
log r0.x, r0.x
mul r11.x, r0.x, l(0.08333334)
mov r11.y, l(0)
sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r11.xyxx, t37.xyzw, s8
mul r11.xyz, r10.xyzx, r11.xyzx
mul r0.x, r9.w, r11.w
mad r9.xyz, r9.xyzx, r4.xyzx, -r11.xyzx
mad r9.xyz, r0.xxxx, r9.xyzx, r11.xyzx
mad r2.xyz, -r2.xyzx, cb1[85].xxxx, r9.xyzx
mad r2.xyz, r1.wwww, r2.xyzx, r10.xyzx
mad r8.xyz, r8.xyzx, r4.xyzx, -r2.xyzx
mad r2.xyz, r7.xxxx, r8.xyzx, r2.xyzx
mad r0.xyw, r3.xyxz, r0.yyyy, r7.yzyw
add r1.w, -r6.z, l(1.000000)
mul r3.x, r1.w, r1.w
mul r3.x, r3.x, r3.x
mul r1.w, r1.w, r3.x
mad r1.w, r1.w, l(0.980000), l(0.020000)
add r0.xyw, -r2.xyxz, r0.xyxw
mad r0.xyw, r1.wwww, r0.xyxw, r2.xyxz
mad r2.xyz, cb0[22].yzwy, r4.xyzx, -r0.xywx
mad r2.xyz, r8.wwww, r2.xyzx, r0.xywx
movc r0.xyw, cb0[28].yyyy, r2.xyxz, r0.xyxw
if_nz cb2[52].y
  if_nz cb2[53].y
    and r2.xy, r2.wwww, r6.yxyy
    switch cb2[53].y
      case l(1)
      mov r2.x, l(1)
      break 
      case l(2)
      mov r2.x, r2.y
      break 
      case l(3)
      break 
      case l(4)
      and r2.x, r21.w, l(255)
      break 
      case l(5)
      ubfe r2.x, l(8), l(8), r21.w
      break 
      default 
      mov r2.x, l(0)
      break 
    endswitch 
    utof r1.w, r2.x
    mad r2.xyz, r1.wwww, l(50.000000, 50.000000, 50.000000, 0.000000), -r0.xywx
    mad r0.xyw, cb2[53].wwww, r2.xyxz, r0.xyxw
  endif 
endif 
lt r1.w, l(0.000000), cb2[9].z
if_nz r1.w
  sqrt r1.w, r0.z
  lt r2.x, l(0.000000), cb2[13].w
  if_nz r2.x
    mad r2.xy, r1.wwww, cb2[15].xyxx, cb2[14].zwzz
    mul r2.xy, r2.xyxx, cb2[16].xyxx
    lt r2.z, l(0.010000), |v7.z|
    mul r3.xy, v7.zzzz, cb2[15].zwzz
    mul r3.zw, r3.xxxy, l(0.000000, 0.000000, -1.442695, -1.442695)
    exp r3.zw, r3.zzzw
    add r3.zw, -r3.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    div r3.xy, r3.zwzz, r3.xyxx
    mul r3.xy, r2.xyxx, r3.xyxx
    movc r2.xy, r2.zzzz, r3.xyxx, r2.xyxx
    mul r2.xzw, r2.xxxx, cb2[12].xxyz
    exp r2.xzw, r2.xxzw
    mul r3.xyz, r2.yyyy, cb2[12].xyzx
    exp r3.xyz, r3.xyzx
    add r3.xyz, -r2.xzwx, r3.xyzx
    mad r2.xyz, cb2[13].wwww, r3.xyzx, r2.xzwx
  else 
    mad r2.w, r1.w, cb2[15].x, cb2[14].z
    mul r2.w, r2.w, cb2[16].x
    lt r3.x, l(0.010000), |v7.z|
    mul r3.y, v7.z, cb2[15].z
    mul r3.z, r3.y, l(-1.442695)
    exp r3.z, r3.z
    add r3.z, -r3.z, l(1.000000)
    div r3.y, r3.z, r3.y
    mul r3.y, r2.w, r3.y
    movc r2.w, r3.x, r3.y, r2.w
    mul r3.xyz, r2.wwww, cb2[12].xyzx
    exp r2.xyz, r3.xyzx
  endif 
  mad r2.xyz, r2.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r2.xyz, r2.xyzx, -cb2[9].zzzz
  dp3 r2.w, cb2[7].yzwy, -r5.xyzx
  mad r3.x, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r3.y, cb2[8].w, -r2.w, l(1.000000)
  mul r3.y, r3.y, r3.y
  mul r3.y, r3.y, l(12.566371)
  div r3.x, r3.x, r3.y
  add r1.w, r1.w, -cb2[10].w
  mul_sat r1.w, r1.w, cb2[11].w
  mul r1.w, r1.w, r3.x
  mov_sat r2.w, r2.w
  mad r2.w, r2.w, r2.w, l(1.000000)
  mad r2.w, r2.w, l(0.05968310), l(-1.000000)
  mad r2.w, cb2[8].z, r2.w, l(1.000000)
  mul r3.xyz, r1.wwww, cb2[11].xyzx
  mad r3.xyz, r2.wwww, cb2[10].xyzx, r3.xyzx
  mul r3.xyz, r3.xyzx, cb2[9].wwww
  add r4.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r3.xyz, r3.xyzx, r4.xyzx
  mad r2.xyz, r0.xywx, r2.xyzx, r3.xyzx
else 
  mul r1.w, v7.z, cb2[6].x
  mad r2.w, cb2[6].x, v7.z, cb2[5].x
  lt r3.x, |r1.w|, l(0.000100)
  min r3.y, r2.w, l(64.000000)
  mul r3.y, r3.y, l(1.442695)
  exp r3.y, r3.y
  mov_sat r3.z, cb2[6].z
  lt r3.w, r2.w, l(0.000000)
  add r2.w, r2.w, l(1.000000)
  movc r2.w, r3.w, r3.y, r2.w
  add r2.w, r2.w, -cb2[6].z
  movc r1.w, r3.x, l(1.000000), r1.w
  div r1.w, r2.w, r1.w
  movc r1.w, r3.x, r3.z, r1.w
  mul r1.w, r1.w, cb2[5].z
  sqrt r0.z, r0.z
  mad r0.z, r1.w, r0.z, cb2[5].w
  exp r0.z, r0.z
  min r0.z, r0.z, l(1.000000)
  add r0.z, -r0.z, l(1.000000)
  dp3 r1.w, cb2[7].yzwy, r5.xyzx
  mad_sat r1.w, cb2[8].y, r1.w, cb2[8].x
  add r3.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r3.xyzw, r1.wwww, r3.xyzw, cb2[4].xyzw
  mul r0.z, r0.z, r3.w
  add r3.xyz, -r0.xywx, r3.xyzx
  mad r2.xyz, r0.zzzz, r3.xyzx, r0.xywx
endif 
mul r0.xyz, r2.xyzx, cb1[85].yyyy
ge r2.xyz, r0.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.xyz, r0.xyzx, r2.xyzx
min r0.xyz, r0.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
imm_atomic_iadd r1.z, u6, r1.xyxx, l(1)
ult r1.w, r1.z, cb2[58].z
if_nz r1.w
  max r2.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  max r2.w, r2.z, r2.y
  max r2.w, r2.w, r2.x
  and r2.w, r2.w, l(0x7f800000)
  iadd r2.w, r2.w, l(0x00800000)
  add r2.xyz, r2.wwww, r2.xyzx
  ubfe r2.x, l(8), l(15), r2.x
  ushr r2.yz, r2.yyzy, l(0, 15, 15, 0)
  bfi r2.yz, l(0, 8, 8, 0), l(0, 8, 16, 0), r2.yyzy, l(0, 0, 0, 0)
  iadd r2.x, r2.y, r2.x
  iadd r2.x, r2.z, r2.x
  ishl r2.y, r2.w, l(1)
  iadd r2.xzw, r2.yyyy, r2.xxxx
  ishl r3.x, v0.z, l(2)
  bfi r2.y, l(11), l(0), l(2046), r3.x
  store_uav_typed u7.xyzw, r1.xyzz, r2.xyzw
endif 
mov r0.w, l(1.000000)
movc o0.xyzw, r1.wwww, l(0,0,0,0), r0.xyzw
ret 
// Approximately 1982 instruction slots used
