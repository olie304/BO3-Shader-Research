//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:39:40 2021
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float3 specColorTint;              // Offset:  160 Size:    12 [unused]
//   float baseNormalHeight;            // Offset:  172 Size:     4 [unused]
//   float2 glossRange;                 // Offset:  176 Size:     8 [unused]
//   float2 normalMapScale;             // Offset:  184 Size:     8
//   float4 flowParams;                 // Offset:  192 Size:    16
//   float4 noiseParams;                // Offset:  208 Size:    16
//   bool useOrientedNormalMap;         // Offset:  224 Size:     4
//   float4 specularLobeRoughnessControl;// Offset:  240 Size:    16
//   float4 lobeWeightingThicknessRefraction;// Offset:  256 Size:    16
//   float3 normalAdjustAndGloss;       // Offset:  272 Size:    12
//   float4 decalTint;                  // Offset:  288 Size:    16
//   float2 opacityScale;               // Offset:  304 Size:     8
//   float invZFeatherDepth;            // Offset:  312 Size:     4 [unused]
//   float2 normalsFlowScaleMin;        // Offset:  320 Size:     8
//   float4 ssrParams;                  // Offset:  336 Size:    16
//   float translucentShadowOpacity;    // Offset:  352 Size:     4 [unused]
//   float3 foamColor;                  // Offset:  356 Size:    12
//   float4 foamMaskScroll01;           // Offset:  368 Size:    16 [unused]
//   float4 foamMaskScroll23;           // Offset:  384 Size:    16 [unused]
//   float4 foamMaskScale01;            // Offset:  400 Size:    16 [unused]
//   float4 foamMaskScale23;            // Offset:  416 Size:    16 [unused]
//   float foamScale;                   // Offset:  432 Size:     4 [unused]
//   float2 foamSpacing;                // Offset:  436 Size:     8
//   float foamColorScale;              // Offset:  444 Size:     4
//   float foamZFeather;                // Offset:  448 Size:     4
//   bool useFoam;                      // Offset:  452 Size:     4
//   bool useSSR;                       // Offset:  456 Size:     4
//   bool useLoopedSSR;                 // Offset:  460 Size:     4
//   bool useSpecularZFeather;          // Offset:  464 Size:     4 [unused]
//   bool scaleNormalsWithFlow;         // Offset:  468 Size:     4
//   bool doubleSidedLighting;          // Offset:  472 Size:     4
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4 [unused]
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4
//   uint numDynamicDecals;             // Offset:  924 Size:     4
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for modelInstanceBuffer
// {
//
//   struct ModelInstanceData
//   {
//       
//       uint boneArrayIndex;           // Offset:    0
//       uint shaderConstantSet;        // Offset:    4
//       uint flagsAndPrevFrameIndex;   // Offset:    8
//       uint worldMatrix;              // Offset:   12
//       uint siegeAnimStateOffset;     // Offset:   16
//       uint prevFrameSiegeAnimStateOffset;// Offset:   20
//
//   } $Element;                        // Offset:    0 Size:    24
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for forwardDecalConstants
// {
//
//   struct CoreDecalConstantsPack
//   {
//       
//       uint4 data[8];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   128
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// normalSampler                     sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// flowSampler                       sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// noiseSampler                      sampler      NA          NA             s5      1 
// foamSampler                       sampler      NA          NA             s6      1 
// decalSampler                      sampler      NA          NA             s7      1 
// bilinearClamp                     sampler      NA          NA             s8      1 
// pointClamp                        sampler      NA          NA             s9      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// normalMap                         texture  float4          2d             t0      1 
// modelInstanceBuffer               texture  struct         r/o             t4      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// flowMap                           texture  float4          2d            t21      1 
// noiseMap                          texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// foamBase                          texture  float4          2d            t24      1 
// decalMap                          texture  float4          2d            t25      1 
// ifloatZSceneDownsampled           texture  float4          2d            t26      1 
// ifloatZScene                      texture  float4          2d            t29      1 
// iResolveScene                     texture  float4          2d            t30      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// visibleDecals                     texture    uint     2darray            t35      1 
// forwardDecalConstants             texture  struct         r/o            t36      1 
// rColorRamp                        texture  float4          2d            t37      1 
// materialTexBC7                    texture  float4     2darray            t42      1 
// materialTexBC3                    texture  float4     2darray            t43      1 
// materialTexMask                   texture  float4     2darray            t45      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    1   x           1     NONE   float       
// TEXCOORD                 0    yz         1     NONE   float    yz 
// TEXCOORD                 4   x           2     NONE    uint   x   
// TEXCOORD                 1   xyz         3     NONE   float   xyz 
// TEXCOORD                 2   xyz         4     NONE   float   xyz 
// TEXCOORD                 3   xyz         5     NONE   float   xyz 
// OFFPOSITION              0   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
// TEXCOORD                 8   xyzw        8     NONE   float   xyzw
// SV_IsFrontFace           0   x           9    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[30], immediateIndexed
dcl_constantbuffer CB1[86], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_sampler s9, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_structured t4, 24
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2d (float,float,float,float) t26
dcl_resource_texture2d (float,float,float,float) t29
dcl_resource_texture2d (float,float,float,float) t30
dcl_resource_texture2darray (float,float,float,float) t31
dcl_resource_texture2darray (uint,uint,uint,uint) t35
dcl_resource_structured t36, 128
dcl_resource_texture2d (float,float,float,float) t37
dcl_resource_texture2darray (float,float,float,float) t42
dcl_resource_texture2darray (float,float,float,float) t43
dcl_resource_texture2darray (float,float,float,float) t45
dcl_input_ps_siv linear noperspective v0.xyzw, position
dcl_input_ps linear v1.yz
dcl_input_ps constant v2.x
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyzw
dcl_input_ps linear v8.xyzw
dcl_input_ps_sgv constant v9.x, is_front_face
dcl_output o0.xyzw
dcl_temps 44
ge r0.x, v0.z, l(0.984375)
mul r0.y, v0.z, l(1.01587307)
mad r0.z, v0.z, l(64.000000), l(-63.000000)
movc r0.x, r0.x, r0.z, r0.y
max r0.x, r0.x, l(0.00000001)
rcp r0.x, r0.x
ftou r0.yz, v0.xxyx
deriv_rtx_coarse r1.xyz, v6.xyzx
deriv_rty_coarse r2.xyz, v6.xyzx
iadd r0.w, cb2[0].y, cb2[0].x
ld_structured_indexable(structured_buffer, stride=24)(mixed,mixed,mixed,mixed) r1.w, v2.x, l(8), t4.xxxx
and r3.xy, r1.wwww, l(0x10000000, 0x20000000, 0, 0)
if_nz r3.x
  add r4.xyz, v6.xyzx, cb1[24].xyzx
  mul r1.w, r0.x, l(0.00781250)
  min r1.w, r1.w, l(15.000000)
  ftou r1.w, r1.w
  ushr r5.xy, r0.yzyy, l(6, 6, 0, 0)
  ishl r5.z, r1.w, l(4)
  and r1.w, cb2[57].z, l(-32)
  iadd r2.w, -r1.w, cb2[57].z
  mov r6.xy, l(0,0,0,0)
  mov r7.w, l(0)
  mov r4.w, l(1.000000)
  mov r8.xyzw, l(0,0,0,0)
  mov r3.xzw, l(0,0,0,0)
  mov r5.w, l(0)
  loop 
    uge r6.w, r5.w, cb2[57].z
    breakc_nz r6.w
    ushr r6.z, r5.w, l(5)
    iadd r7.xyz, r5.xyzx, r6.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r6.z, r7.xyzw, t35.yzxw
    ieq r6.w, r1.w, r5.w
    ubfe r7.x, r2.w, l(0), r6.z
    movc r6.z, r6.w, r7.x, r6.z
    iadd r6.w, r0.w, r5.w
    mov r9.xyzw, r8.xyzw
    mov r7.xyz, r3.xzwx
    mov r10.x, r6.z
    loop 
      breakc_z r10.x
      firstbit_lo r10.y, r10.x
      ishl r10.z, l(1), r10.y
      and r10.w, r10.z, r10.x
      if_nz r10.w
        xor r10.x, r10.z, r10.x
        iadd r10.z, r6.w, r10.y
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r11.xyzw, r10.z, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r12.xy, r10.z, l(16), t11.xyxx
        add r11.xyz, r11.xyzx, -v6.xyzx
        mov r12.z, r11.w
        lt r11.xyz, |r11.xyzx|, r12.zxyz
        and r10.z, r11.y, r11.x
        and r10.z, r11.z, r10.z
        if_nz r10.z
          iadd r10.y, r5.w, r10.y
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r11.xyz, r10.y, l(0), t36.xyzx
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r12.xyz, r10.y, l(16), t36.xyzx
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r13.xyz, r10.y, l(32), t36.xyzx
          mov r14.x, r11.x
          mov r14.y, r12.x
          mov r14.z, r13.x
          dp3 r10.z, r14.xyzx, r14.xyzx
          rsq r10.z, r10.z
          mul r15.xyz, r10.zzzz, r14.xyzx
          dp3 r10.z, r15.xyzx, v3.xyzx
          ge r10.z, r10.z, l(0.500000)
          if_nz r10.z
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r15.xyw, r10.y, l(48), t36.xyxz
            mov r14.w, r15.x
            dp4 r14.x, r4.xyzw, r14.xyzw
            mov r16.x, r11.y
            mov r16.y, r12.y
            mov r16.z, r13.y
            mov r16.w, r15.y
            dp4 r14.y, r4.xyzw, r16.xyzw
            mov r15.x, r11.z
            mov r15.y, r12.z
            mov r15.z, r13.z
            dp4 r14.z, r4.xyzw, r15.xyzw
            lt r11.xyz, |r14.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
            and r10.z, r11.y, r11.x
            and r10.z, r11.z, r10.z
            if_nz r10.z
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r11.xyzw, r10.y, l(64), t36.xyzw
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r12.xyzw, r10.y, l(80), t36.xyzw
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r10.z, r10.y, l(108), t36.xxxx
              dp3 r13.x, r1.xyzx, r16.xyzx
              dp3 r13.y, r1.xyzx, r15.xyzx
              dp3 r16.x, r2.xyzx, r16.xyzx
              dp3 r16.y, r2.xyzx, r15.xyzx
              mad r13.zw, r14.yyyz, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
              mul r14.xyz, r13.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
              mul r15.xyz, r16.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
              and r12.yz, r12.yyzy, l(0, 0x0000ffff, 0x0000ffff, 0)
              if_nz r12.y
                ubfe r10.w, l(4), l(24), r12.w
                ishl r10.w, l(1), r10.w
                ushr r13.x, r12.w, l(28)
                ishl r13.x, l(1), r13.x
                ieq r13.y, r12.y, l(4)
                if_nz r13.y
                  and r13.y, r12.w, l(4095)
                  ubfe r14.w, l(12), l(12), r12.w
                  and r15.w, r10.z, l(1023)
                  utof r16.xz, r10.wwww
                  utof r16.y, r13.x
                  mad r17.xy, r13.zwzz, r16.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r17.zw, r16.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r17.xy, r17.zwzz, r17.xyxx
                  utof r18.x, r13.y
                  utof r18.y, r14.w
                  add r17.xy, r17.xyxx, r18.xyxx
                  mul r17.xy, r17.xyxx, cb1[83].xyxx
                  utof r17.z, r15.w
                  mul r18.xyz, r14.zyzz, cb1[83].xyxx
                  mul r18.xyz, r16.xyzx, r18.xyzx
                  mul r19.xyz, r15.zyzz, cb1[83].xyxx
                  mul r16.xyz, r16.xyzx, r19.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r16.xyzw, r17.xyzx, t42.xyzw, s4, r18.xyzx, r16.xyzx
                else 
                  ieq r12.y, r12.y, l(1)
                  if_nz r12.y
                    and r12.y, r12.w, l(4095)
                    ubfe r12.w, l(12), l(12), r12.w
                    and r13.y, r10.z, l(1023)
                    utof r17.xz, r10.wwww
                    utof r17.y, r13.x
                    mad r18.xy, r13.zwzz, r17.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r18.zw, r17.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                    min r18.xy, r18.zwzz, r18.xyxx
                    utof r19.xy, r12.ywyy
                    add r12.yw, r18.xxxy, r19.xxxy
                    mul r18.xy, r12.ywyy, cb1[83].zwzz
                    utof r18.z, r13.y
                    mul r19.xyz, r14.zyzz, cb1[83].zwzz
                    mul r19.xyz, r17.xyzx, r19.xyzx
                    mul r20.xyz, r15.zyzz, cb1[83].zwzz
                    mul r17.xyz, r17.xyzx, r20.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r16.xyzw, r18.xyzx, t43.xyzw, s4, r19.xyzx, r17.xyzx
                  else 
                    mov r16.xyzw, l(1.000000,1.000000,1.000000,1.000000)
                  endif 
                endif 
                mul r11.xyz, r11.xyzx, r16.xyzx
                mul r10.w, r11.w, r16.w
              else 
                mov r11.xyz, l(0,0,0,0)
                mov r10.w, l(0)
              endif 
              ne r12.y, r12.x, l(1.000000)
              add r11.w, r11.w, r10.w
              mad_sat r11.w, r11.w, r12.x, -r12.x
              movc r10.w, r12.y, r11.w, r10.w
              if_nz r12.z
                ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r10.y, r10.y, l(100), t36.xxxx
                ubfe r11.w, l(4), l(24), r10.y
                ishl r11.w, l(1), r11.w
                ushr r12.x, r10.y, l(28)
                ishl r12.x, l(1), r12.x
                ieq r12.y, r12.z, l(2)
                if_nz r12.y
                  and r12.y, r10.y, l(4095)
                  ubfe r12.w, l(12), l(12), r10.y
                  ubfe r13.x, l(10), l(20), r10.z
                  utof r16.xz, r11.wwww
                  utof r16.y, r12.x
                  mad r17.xy, r13.zwzz, r16.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r17.zw, r16.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r17.xy, r17.zwzz, r17.xyxx
                  utof r18.xy, r12.ywyy
                  add r12.yw, r17.xxxy, r18.xxxy
                  mul r17.xy, r12.ywyy, cb1[84].xyxx
                  utof r17.z, r13.x
                  mul r18.xyz, r14.zyzz, cb1[84].xyxx
                  mul r18.xyz, r16.xyzx, r18.xyzx
                  mul r19.xyz, r15.zyzz, cb1[84].xyxx
                  mul r16.xyz, r16.xyzx, r19.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r12.y, r17.xyzx, t45.yxzw, s4, r18.xyzx, r16.xyzx
                else 
                  ieq r12.z, r12.z, l(4)
                  if_nz r12.z
                    and r12.z, r10.y, l(4095)
                    ubfe r12.w, l(12), l(12), r10.y
                    ubfe r13.x, l(10), l(20), r10.z
                    utof r16.xz, r11.wwww
                    utof r16.y, r12.x
                    mad r17.xy, r13.zwzz, r16.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r17.zw, r16.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                    min r17.xy, r17.zwzz, r17.xyxx
                    utof r18.xy, r12.zwzz
                    add r12.zw, r17.xxxy, r18.xxxy
                    mul r17.xy, r12.zwzz, cb1[83].xyxx
                    utof r17.z, r13.x
                    mul r18.xyz, r14.zyzz, cb1[83].xyxx
                    mul r18.xyz, r16.xyzx, r18.xyzx
                    mul r19.xyz, r15.zyzz, cb1[83].xyxx
                    mul r16.xyz, r16.xyzx, r19.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r12.y, r17.xyzx, t42.yxzw, s4, r18.xyzx, r16.xyzx
                  else 
                    and r12.z, r10.y, l(4095)
                    ubfe r10.y, l(12), l(12), r10.y
                    ubfe r10.z, l(10), l(20), r10.z
                    utof r16.xz, r11.wwww
                    utof r16.y, r12.x
                    mad r12.xw, r13.zzzw, r16.xxxy, l(0.500000, 0.000000, 0.000000, 0.500000)
                    add r13.xy, r16.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                    min r12.xw, r12.xxxw, r13.xxxy
                    utof r13.x, r12.z
                    utof r13.yz, r10.yyzy
                    add r12.xz, r12.xxwx, r13.xxyx
                    mul r13.xy, r12.xzxx, cb1[83].zwzz
                    mul r12.xzw, r14.xxyz, cb1[83].zzwz
                    mul r12.xzw, r16.xxyz, r12.xxzw
                    mul r14.xyz, r15.xyzx, cb1[83].zwzz
                    mul r14.xyz, r16.xyzx, r14.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r12.y, r13.xyzx, t43.yxzw, s4, r12.xzwx, r14.xyzx
                  endif 
                endif 
                mad r12.xzw, r12.yyyy, l(0.960000, 0.000000, 0.960000, 0.960000), l(0.040000, 0.000000, 0.040000, 0.040000)
                add_sat r10.y, -r12.y, l(1.000000)
                mul r11.xyz, r10.yyyy, r11.xyzx
              else 
                mov r12.xzw, l(0.040000,0,0.040000,0.040000)
              endif 
              add r10.y, -r10.w, l(1.000000)
              mul r13.xyz, r7.xyzx, r10.yyyy
              mad r7.xyz, r11.xyzx, r10.wwww, r13.xyzx
              mul r11.xyz, r9.xyzx, r10.yyyy
              mad r9.xyz, r12.xzwx, r10.wwww, r11.xyzx
              mad r9.w, r9.w, r10.y, r10.w
            endif 
          endif 
        endif 
      endif 
    endloop 
    mov r8.xyzw, r9.xyzw
    mov r3.xzw, r7.xxyz
    iadd r5.w, r5.w, l(32)
  endloop 
else 
  mov r3.xzw, l(0,0,0,0)
  mov r8.xyzw, l(0,0,0,0)
endif 
if_nz r3.y
  add r4.xyz, v6.xyzx, cb1[24].xyzx
  iadd r1.w, cb2[57].w, cb2[57].z
  mul r2.w, r0.x, l(0.00781250)
  min r2.w, r2.w, l(15.000000)
  ftou r2.w, r2.w
  ushr r5.xy, r0.yzyy, l(6, 6, 0, 0)
  ishl r5.z, r2.w, l(4)
  and r2.w, cb2[57].z, l(-32)
  iadd r3.y, -r2.w, cb2[57].z
  and r5.w, r1.w, l(-32)
  iadd r6.x, r1.w, -r5.w
  mov r7.xy, l(0,0,0,0)
  mov r9.w, l(0)
  mov r4.w, l(1.000000)
  mov r10.xyzw, r8.xyzw
  mov r6.yzw, r3.xxzw
  mov r7.w, r2.w
  loop 
    uge r11.x, r7.w, r1.w
    breakc_nz r11.x
    ushr r7.z, r7.w, l(5)
    iadd r9.xyz, r5.xyzx, r7.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r7.z, r9.xyzw, t35.yzxw
    ieq r9.x, r2.w, r7.w
    bfi r9.y, r3.y, l(0), l(0), r7.z
    movc r7.z, r9.x, r9.y, r7.z
    ieq r9.x, r5.w, r7.w
    ubfe r9.y, r6.x, l(0), r7.z
    movc r7.z, r9.x, r9.y, r7.z
    iadd r9.x, r0.w, r7.w
    mov r11.xyzw, r10.xyzw
    mov r12.xyz, r6.yzwy
    mov r9.y, r7.z
    loop 
      breakc_z r9.y
      firstbit_lo r9.z, r9.y
      ishl r12.w, l(1), r9.z
      and r13.x, r9.y, r12.w
      if_nz r13.x
        xor r9.y, r9.y, r12.w
        iadd r12.w, r9.z, r9.x
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r13.xyzw, r12.w, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r14.xy, r12.w, l(16), t11.xyxx
        add r13.xyz, r13.xyzx, -v6.xyzx
        mov r14.z, r13.w
        lt r13.xyz, |r13.xyzx|, r14.zxyz
        and r12.w, r13.y, r13.x
        and r12.w, r13.z, r12.w
        if_nz r12.w
          iadd r9.z, r7.w, r9.z
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r13.xyz, r9.z, l(0), t36.xyzx
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r14.xyz, r9.z, l(16), t36.xyzx
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r15.xyz, r9.z, l(32), t36.xyzx
          mov r16.x, r13.x
          mov r16.y, r14.x
          mov r16.z, r15.x
          dp3 r12.w, r16.xyzx, r16.xyzx
          rsq r12.w, r12.w
          mul r17.xyz, r12.wwww, r16.xyzx
          dp3 r12.w, r17.xyzx, v3.xyzx
          ge r12.w, r12.w, l(0.500000)
          if_nz r12.w
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r17.xyw, r9.z, l(48), t36.xyxz
            mov r16.w, r17.x
            dp4 r16.x, r4.xyzw, r16.xyzw
            mov r18.x, r13.y
            mov r18.y, r14.y
            mov r18.z, r15.y
            mov r18.w, r17.y
            dp4 r16.y, r4.xyzw, r18.xyzw
            mov r17.x, r13.z
            mov r17.y, r14.z
            mov r17.z, r15.z
            dp4 r16.z, r4.xyzw, r17.xyzw
            lt r13.xyz, |r16.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
            and r12.w, r13.y, r13.x
            and r12.w, r13.z, r12.w
            if_nz r12.w
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r13.xyzw, r9.z, l(64), t36.xyzw
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r14.xyzw, r9.z, l(80), t36.xyzw
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r12.w, r9.z, l(108), t36.xxxx
              dp3 r15.x, r1.xyzx, r18.xyzx
              dp3 r15.y, r1.xyzx, r17.xyzx
              dp3 r18.x, r2.xyzx, r18.xyzx
              dp3 r18.y, r2.xyzx, r17.xyzx
              mad r15.zw, r16.yyyz, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
              mul r16.xyz, r15.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
              mul r17.xyz, r18.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
              and r14.yz, r14.yyzy, l(0, 0x0000ffff, 0x0000ffff, 0)
              if_nz r14.y
                ubfe r15.x, l(4), l(24), r14.w
                ushr r15.y, r14.w, l(28)
                ishl r15.xy, l(1, 1, 0, 0), r15.xyxx
                ieq r16.w, r14.y, l(4)
                if_nz r16.w
                  and r16.w, r14.w, l(4095)
                  ubfe r17.w, l(12), l(12), r14.w
                  and r18.x, r12.w, l(1023)
                  utof r19.xyz, r15.xyxx
                  mad r18.yz, r15.zzwz, r19.zzyz, l(0.000000, 0.500000, 0.500000, 0.000000)
                  add r20.xy, r19.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r18.yz, r18.yyzy, r20.xxyx
                  utof r20.x, r16.w
                  utof r20.y, r17.w
                  add r18.yz, r18.yyzy, r20.xxyx
                  mul r20.xy, r18.yzyy, cb1[83].xyxx
                  utof r20.z, r18.x
                  mul r18.xyz, r16.zyzz, cb1[83].xyxx
                  mul r18.xyz, r19.xyzx, r18.xyzx
                  mul r21.xyz, r17.zyzz, cb1[83].xyxx
                  mul r19.xyz, r19.xyzx, r21.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r18.xyzw, r20.xyzx, t42.xyzw, s4, r18.xyzx, r19.xyzx
                else 
                  ieq r14.y, r14.y, l(1)
                  if_nz r14.y
                    and r14.y, r14.w, l(4095)
                    ubfe r14.w, l(12), l(12), r14.w
                    and r16.w, r12.w, l(1023)
                    utof r19.xyz, r15.xyxx
                    mad r15.xy, r15.zwzz, r19.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r20.xy, r19.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                    min r15.xy, r15.xyxx, r20.xyxx
                    utof r20.xy, r14.ywyy
                    add r14.yw, r15.xxxy, r20.xxxy
                    mul r20.xy, r14.ywyy, cb1[83].zwzz
                    utof r20.z, r16.w
                    mul r21.xyz, r16.zyzz, cb1[83].zwzz
                    mul r21.xyz, r19.xyzx, r21.xyzx
                    mul r22.xyz, r17.zyzz, cb1[83].zwzz
                    mul r19.xyz, r19.xyzx, r22.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r18.xyzw, r20.xyzx, t43.xyzw, s4, r21.xyzx, r19.xyzx
                  else 
                    mov r18.xyzw, l(1.000000,1.000000,1.000000,1.000000)
                  endif 
                endif 
                mul r13.xyz, r13.xyzx, r18.xyzx
                mul r14.y, r13.w, r18.w
              else 
                mov r13.xyz, l(0,0,0,0)
                mov r14.y, l(0)
              endif 
              ne r14.w, r14.x, l(1.000000)
              add r13.w, r13.w, r14.y
              mad_sat r13.w, r13.w, r14.x, -r14.x
              movc r13.w, r14.w, r13.w, r14.y
              if_nz r14.z
                ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r9.z, r9.z, l(100), t36.xxxx
                ubfe r14.x, l(4), l(24), r9.z
                ushr r14.y, r9.z, l(28)
                ishl r14.xy, l(1, 1, 0, 0), r14.xyxx
                ieq r14.w, r14.z, l(2)
                if_nz r14.w
                  and r14.w, r9.z, l(4095)
                  ubfe r15.x, l(12), l(12), r9.z
                  ubfe r15.y, l(10), l(20), r12.w
                  utof r18.xyz, r14.xyxx
                  mad r19.xy, r15.zwzz, r18.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r19.zw, r18.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r19.xy, r19.zwzz, r19.xyxx
                  utof r20.x, r14.w
                  utof r20.y, r15.x
                  add r19.xy, r19.xyxx, r20.xyxx
                  mul r19.xy, r19.xyxx, cb1[84].xyxx
                  utof r19.z, r15.y
                  mul r20.xyz, r16.zyzz, cb1[84].xyxx
                  mul r20.xyz, r18.xyzx, r20.xyzx
                  mul r21.xyz, r17.zyzz, cb1[84].xyxx
                  mul r18.xyz, r18.xyzx, r21.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r14.w, r19.xyzx, t45.yzwx, s4, r20.xyzx, r18.xyzx
                else 
                  ieq r14.z, r14.z, l(4)
                  if_nz r14.z
                    and r14.z, r9.z, l(4095)
                    ubfe r15.x, l(12), l(12), r9.z
                    ubfe r15.y, l(10), l(20), r12.w
                    utof r18.xyz, r14.xyxx
                    mad r19.xy, r15.zwzz, r18.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r19.zw, r18.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                    min r19.xy, r19.zwzz, r19.xyxx
                    utof r20.x, r14.z
                    utof r20.y, r15.x
                    add r19.xy, r19.xyxx, r20.xyxx
                    mul r19.xy, r19.xyxx, cb1[83].xyxx
                    utof r19.z, r15.y
                    mul r20.xyz, r16.zyzz, cb1[83].xyxx
                    mul r20.xyz, r18.xyzx, r20.xyzx
                    mul r21.xyz, r17.zyzz, cb1[83].xyxx
                    mul r18.xyz, r18.xyzx, r21.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r14.w, r19.xyzx, t42.yzwx, s4, r20.xyzx, r18.xyzx
                  else 
                    and r14.z, r9.z, l(4095)
                    ubfe r9.z, l(12), l(12), r9.z
                    ubfe r12.w, l(10), l(20), r12.w
                    utof r18.xyz, r14.xyxx
                    mad r14.xy, r15.zwzz, r18.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r15.xy, r18.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                    min r14.xy, r14.xyxx, r15.xyxx
                    utof r15.x, r14.z
                    utof r15.y, r9.z
                    add r14.xy, r14.xyxx, r15.xyxx
                    mul r14.xy, r14.xyxx, cb1[83].zwzz
                    utof r14.z, r12.w
                    mul r15.xyz, r16.xyzx, cb1[83].zwzz
                    mul r15.xyz, r18.xyzx, r15.xyzx
                    mul r16.xyz, r17.xyzx, cb1[83].zwzz
                    mul r16.xyz, r18.xyzx, r16.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r14.w, r14.xyzx, t43.yzwx, s4, r15.xyzx, r16.xyzx
                  endif 
                endif 
                mad r14.xyz, r14.wwww, l(0.960000, 0.960000, 0.960000, 0.000000), l(0.040000, 0.040000, 0.040000, 0.000000)
                add_sat r9.z, -r14.w, l(1.000000)
                mul r13.xyz, r9.zzzz, r13.xyzx
              else 
                mov r14.xyz, l(0.040000,0.040000,0.040000,0)
              endif 
              add r9.z, -r13.w, l(1.000000)
              mul r15.xyz, r9.zzzz, r12.xyzx
              mad r12.xyz, r13.xyzx, r13.wwww, r15.xyzx
              mul r13.xyz, r9.zzzz, r11.xyzx
              mad r11.xyz, r14.xyzx, r13.wwww, r13.xyzx
              mad r11.w, r11.w, r9.z, r13.w
            endif 
          endif 
        endif 
      endif 
    endloop 
    mov r10.xyzw, r11.xyzw
    mov r6.yzw, r12.xxyz
    iadd r7.w, r7.w, l(32)
  endloop 
  mov r8.xyzw, r10.xyzw
  mov r3.xzw, r6.yyzw
endif 
mov_sat r8.w, r8.w
add r0.w, -r8.w, l(1.000000)
mul r1.xy, v1.yzyy, cb0[11].zwzz
mul r1.zw, cb0[13].xxxy, cb1[69].wwww
mad r1.zw, v1.yyyz, cb0[13].zzzz, r1.zzzw
sample_indexable(texture2d)(float,float,float,float) r1.zw, r1.zwzz, t22.zwxy, s5
mul r1.zw, r1.zzzw, cb0[13].wwww
mad r1.zw, v1.yyyz, cb0[12].xxxx, r1.zzzw
frc r2.xy, r1.zwzz
mad r2.zw, r2.xxxy, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
mul r2.xy, r2.xyxx, r2.xyxx
mul r4.xy, r2.xyxx, r2.zwzz
resinfo_indexable(texture2d)(float,float,float,float) r4.zw, l(0), t0.zwxy
mul r4.zw, r1.xxxy, r4.zzzw
deriv_rtx_coarse r5.xy, r4.zwzz
deriv_rty_coarse r4.zw, r4.zzzw
dp2 r3.y, r5.xyxx, r5.xyxx
dp2 r4.z, r4.zwzz, r4.zwzz
max r3.y, r3.y, r4.z
log r3.y, r3.y
mul r3.y, r3.y, l(0.500000)
round_ni r4.zw, r1.zzzw
div r4.zw, r4.zzzw, cb0[12].xxxx
sample_indexable(texture2d)(float,float,float,float) r4.zw, r4.zwzz, t21.zwxy, s3
add r4.zw, r4.zzzw, r4.zzzw
add r5.xyzw, r1.zwzw, l(1.000000, 0.000000, 0.000000, 1.000000)
round_ni r5.xyzw, r5.xyzw
div r5.xyzw, r5.xyzw, cb0[12].xxxx
sample_indexable(texture2d)(float,float,float,float) r5.xy, r5.xyxx, t21.xyzw, s3
add r5.xy, r5.xyxx, r5.xyxx
sample_indexable(texture2d)(float,float,float,float) r5.zw, r5.zwzz, t21.zwxy, s3
add r5.zw, r5.zzzw, r5.zzzw
add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
round_ni r1.zw, r1.zzzw
div r1.zw, r1.zzzw, cb0[12].xxxx
sample_indexable(texture2d)(float,float,float,float) r1.zw, r1.zwzz, t21.zwxy, s3
add r1.zw, r1.zzzw, r1.zzzw
resinfo_indexable(texture2d)(float,float,float,float) r6.xy, l(0), t25.xyzw
mul r6.xy, r1.xyxx, r6.xyxx
deriv_rtx_coarse r6.zw, r6.xxxy
deriv_rty_coarse r6.xy, r6.xyxx
dp2 r6.z, r6.zwzz, r6.zwzz
dp2 r6.x, r6.xyxx, r6.xyxx
max r6.x, r6.x, r6.z
log r6.x, r6.x
mul r6.x, r6.x, l(0.500000)
if_nz cb0[29].y
  sample_indexable(texture2d)(float,float,float,float) r6.yz, v1.yzyy, t21.zxyw, s3
  add r7.xy, r6.yzyy, r6.yzyy
  mad r7.zw, r7.xxxy, l(0.000000, 0.000000, -1.000000, 1.000000), l(0.000000, 0.000000, 1.000000, -1.000000)
  mad r6.yz, r7.xxwx, l(0.000000, -1.000000, 1.000000, 0.000000), l(0.000000, 1.000000, 0.000000, 0.000000)
  dp2 r6.y, r7.zwzz, r6.yzyy
  sqrt r6.y, r6.y
  mad r6.y, r6.y, cb0[20].y, cb0[20].x
  mul r6.yz, r6.yyyy, cb0[17].xxyx
else 
  mov r6.yz, cb0[17].xxyx
endif 
mad r2.xy, -r2.zwzz, r2.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
mul r2.xy, r2.xyxx, r2.xyxx
mad r2.xy, r4.xyxx, r4.xyxx, r2.xyxx
rsq r2.xy, r2.xyxx
if_z cb0[14].x
  mul r2.z, cb0[12].y, cb1[69].w
  mad r7.xy, r4.zwzz, l(-1.000000, 1.000000, 0.000000, 0.000000), l(1.000000, -1.000000, 0.000000, 0.000000)
  mad r7.xy, r7.xyxx, r2.zzzz, r1.xyxx
  sample_l_indexable(texture2d)(float,float,float,float) r7.xy, r7.xyxx, t0.xyzw, s1, r3.y
  mad r7.zw, r5.xxxy, l(0.000000, 0.000000, -1.000000, 1.000000), l(0.000000, 0.000000, 1.000000, -1.000000)
  mad r7.zw, r7.zzzw, r2.zzzz, r1.xxxy
  sample_l_indexable(texture2d)(float,float,float,float) r7.zw, r7.zwzz, t0.zwxy, s1, r3.y
  add r7.zw, -r7.xxxy, r7.zzzw
  mad r7.xy, r4.xxxx, r7.zwzz, r7.xyxx
  mad r7.zw, r5.zzzw, l(0.000000, 0.000000, -1.000000, 1.000000), l(0.000000, 0.000000, 1.000000, -1.000000)
  mad r7.zw, r7.zzzw, r2.zzzz, r1.xxxy
  sample_l_indexable(texture2d)(float,float,float,float) r7.zw, r7.zwzz, t0.zwxy, s1, r3.y
  mad r9.xy, r1.zwzz, l(-1.000000, 1.000000, 0.000000, 0.000000), l(1.000000, -1.000000, 0.000000, 0.000000)
  mad r2.zw, r9.xxxy, r2.zzzz, r1.xxxy
  sample_l_indexable(texture2d)(float,float,float,float) r2.zw, r2.zwzz, t0.zwxy, s1, r3.y
  add r2.zw, -r7.zzzw, r2.zzzw
  mad r2.zw, r4.xxxx, r2.zzzw, r7.zzzw
  add r2.zw, -r7.xxxy, r2.zzzw
  mad r2.zw, r4.yyyy, r2.zzzw, r7.xxxy
  mad r2.zw, r2.zzzw, r6.yyyy, r6.zzzz
else 
  mad r7.xy, r4.zwzz, l(-1.000000, 1.000000, 0.000000, 0.000000), l(1.000000, -1.000000, 0.000000, 0.000000)
  dp2 r6.w, r7.xyxx, r7.xyxx
  sqrt r6.w, r6.w
  max r6.w, r6.w, l(0.000010)
  div r7.xy, r7.xyxx, r6.wwww
  mov r7.z, -r7.x
  dp2 r9.x, v1.yzyy, r7.yzyy
  dp2 r9.y, v1.yzyy, -r7.xyxx
  mul r9.xy, r9.xyxx, cb0[11].zwzz
  mul r6.w, r6.w, cb1[69].w
  mad r9.z, -r6.w, cb0[12].y, r9.y
  sample_l_indexable(texture2d)(float,float,float,float) r9.xy, r9.xzxx, t0.xyzw, s1, r3.y
  mad r9.xy, r9.xyxx, r6.yyyy, r6.zzzz
  dp2 r10.x, r9.xyxx, r7.yzyy
  dp2 r10.y, r9.xyxx, -r7.xyxx
  mad r7.xy, r5.xyxx, l(-1.000000, 1.000000, 0.000000, 0.000000), l(1.000000, -1.000000, 0.000000, 0.000000)
  dp2 r6.w, r7.xyxx, r7.xyxx
  sqrt r6.w, r6.w
  max r6.w, r6.w, l(0.000010)
  div r7.xy, r7.xyxx, r6.wwww
  mov r7.z, -r7.x
  dp2 r9.x, v1.yzyy, r7.yzyy
  dp2 r9.y, v1.yzyy, -r7.xyxx
  mul r9.xy, r9.xyxx, cb0[11].zwzz
  mul r6.w, r6.w, cb1[69].w
  mad r9.z, -r6.w, cb0[12].y, r9.y
  sample_l_indexable(texture2d)(float,float,float,float) r9.xy, r9.xzxx, t0.xyzw, s1, r3.y
  mad r9.xy, r9.xyxx, r6.yyyy, r6.zzzz
  dp2 r11.x, r9.xyxx, r7.yzyy
  dp2 r11.y, r9.xyxx, -r7.xyxx
  add r7.xy, -r10.xyxx, r11.xyxx
  mad r7.xy, r4.xxxx, r7.xyxx, r10.xyxx
  mad r7.zw, r5.zzzw, l(0.000000, 0.000000, -1.000000, 1.000000), l(0.000000, 0.000000, 1.000000, -1.000000)
  dp2 r6.w, r7.zwzz, r7.zwzz
  sqrt r6.w, r6.w
  max r6.w, r6.w, l(0.000010)
  div r9.xy, r7.zwzz, r6.wwww
  mov r9.z, -r9.x
  dp2 r10.x, v1.yzyy, r9.yzyy
  dp2 r10.y, v1.yzyy, -r9.xyxx
  mul r10.xy, r10.xyxx, cb0[11].zwzz
  mul r6.w, r6.w, cb1[69].w
  mad r10.z, -r6.w, cb0[12].y, r10.y
  sample_l_indexable(texture2d)(float,float,float,float) r7.zw, r10.xzxx, t0.zwxy, s1, r3.y
  mad r7.zw, r7.zzzw, r6.yyyy, r6.zzzz
  dp2 r10.x, r7.zwzz, r9.yzyy
  dp2 r10.y, r7.zwzz, -r9.xyxx
  mad r7.zw, r1.zzzw, l(0.000000, 0.000000, -1.000000, 1.000000), l(0.000000, 0.000000, 1.000000, -1.000000)
  dp2 r6.w, r7.zwzz, r7.zwzz
  sqrt r6.w, r6.w
  max r6.w, r6.w, l(0.000010)
  div r9.xy, r7.zwzz, r6.wwww
  mov r9.z, -r9.x
  dp2 r11.x, v1.yzyy, r9.yzyy
  dp2 r11.y, v1.yzyy, -r9.xyxx
  mul r11.xy, r11.xyxx, cb0[11].zwzz
  mul r6.w, r6.w, cb1[69].w
  mad r11.z, -r6.w, cb0[12].y, r11.y
  sample_l_indexable(texture2d)(float,float,float,float) r7.zw, r11.xzxx, t0.zwxy, s1, r3.y
  mad r6.yz, r7.zzwz, r6.yyyy, r6.zzzz
  dp2 r11.x, r6.yzyy, r9.yzyy
  dp2 r11.y, r6.yzyy, -r9.xyxx
  add r6.yz, -r10.xxyx, r11.xxyx
  mad r6.yz, r4.xxxx, r6.yyzy, r10.xxyx
  add r6.yz, -r7.xxyx, r6.yyzy
  mad r2.zw, r4.yyyy, r6.yyyz, r7.xxxy
endif 
mul r2.x, r2.y, r2.x
mul r2.xy, r2.xxxx, r2.zwzz
mul r2.yzw, r2.yyyy, v5.xxyz
mad r2.xyz, v4.xyzx, r2.xxxx, r2.yzwy
add r2.xyz, r2.xyzx, v3.xyzx
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul r2.xyz, r2.wwww, r2.xyzx
movc r2.xyz, v9.xxxx, r2.xyzx, -r2.xyzx
dp3 r3.y, v6.xyzx, v6.xyzx
rsq r6.y, r3.y
mul r6.yzw, r6.yyyy, v6.xxyz
dp3_sat r7.x, r2.xyzx, -r6.yzwy
if_nz v9.x
  ftoi r9.xy, v0.xyxx
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r7.y, r9.xyzw, t29.yxzw
  ge r7.z, r7.y, l(0.984375)
  mul r7.w, r7.y, l(1.01587307)
  mad r7.y, r7.y, l(64.000000), l(-63.000000)
  movc r7.y, r7.z, r7.y, r7.w
  max r7.y, r7.y, l(0.00000001)
  rcp r7.y, r7.y
  add r7.y, r7.y, -v0.w
  max r7.y, r7.y, l(0.000000)
  min r7.y, r7.y, cb0[21].x
  mov r7.z, cb0[19].y
else 
  sqrt r7.y, r3.y
  mov r7.z, cb0[19].x
endif 
if_nz cb0[28].y
  sample_indexable(texture2d)(float,float,float,float) r7.w, v7.xyxx, t24.yzwx, s6
  sample_indexable(texture2d)(float,float,float,float) r9.x, v7.zwzz, t24.xyzw, s6
  sample_indexable(texture2d)(float,float,float,float) r9.y, v8.xyxx, t24.yxzw, s6
  sample_indexable(texture2d)(float,float,float,float) r9.z, v8.zwzz, t24.yzxw, s6
  add r7.w, r7.w, r9.x
  add r7.w, r9.y, r7.w
  add r7.w, r9.z, r7.w
  mul r7.w, r7.w, cb0[27].w
  sample_indexable(texture2d)(float,float,float,float) r9.x, v1.yzyy, t21.zxyw, s3
  mad r9.x, cb0[27].z, r9.x, cb0[27].y
  max r7.w, r7.w, l(0.000000)
  log r7.w, r7.w
  mul r7.w, r7.w, r9.x
  exp r7.w, r7.w
  mul r9.x, r7.y, cb0[28].x
  min r9.x, r9.x, l(1.000000)
  mul r9.y, r7.w, r9.x
  mad r7.w, -r7.w, r9.x, l(1.000000)
  mul r7.w, r7.w, cb0[17].z
else 
  mov r9.y, l(0)
  mov r7.w, cb0[17].z
endif 
ine r9.x, cb0[29].z, l(0)
dp3 r9.z, -v6.xyzx, -v6.xyzx
rsq r9.z, r9.z
mul r10.xyz, r9.zzzz, -v6.xyzx
utof r11.xy, r0.zyzz
dp2 r9.w, r11.yxyy, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r9.w, r9.w
mul r9.w, r9.w, l(52.982918)
frc r9.w, r9.w
mad r9.w, r9.w, l(6.28318548), cb1[70].w
sincos r12.x, r13.x, r9.w
dp2 r9.w, r11.xyxx, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r9.w, r9.w
mul r9.w, r9.w, l(52.982918)
frc r9.w, r9.w
mad r9.w, r9.w, l(6.28318548), cb1[70].w
sincos r11.x, r14.x, r9.w
dp3_sat r9.w, r2.xyzx, r10.xyzx
dp3 r10.w, -r10.xyzx, r2.xyzx
add r10.w, r10.w, r10.w
mad r15.xyz, r2.xyzx, -r10.wwww, -r10.xyzx
add r10.w, -r7.w, l(1.000000)
mul r11.y, r10.w, l(5.000000)
mad r11.z, r10.w, l(5.000000), l(-2.500000)
mul_sat r11.z, r11.z, l(0.400000)
mul r11.z, r11.z, l(100.000000)
mad r12.zw, -r10.wwww, l(0.000000, 0.000000, 10.000000, 5.000000), l(0.000000, 0.000000, 6.857410, 7.085000)
exp r11.w, r12.z
mul r11.w, r9.w, r11.w
mul r11.w, r11.w, l(9.136810)
mul r12.z, r10.w, r11.y
mad r12.z, -r12.z, l(2.015905), r12.w
exp r12.z, r12.z
mul r12.z, r9.w, r12.z
mul r12.z, r12.z, l(9.708090)
max r11.w, r11.w, r12.z
max r11.w, r11.w, l(1.268160)
iadd r12.z, cb2[0].y, -cb2[58].x
mul r12.w, r0.x, l(0.00781250)
min r12.w, r12.w, l(15.000000)
ftou r12.w, r12.w
ushr r16.xy, r0.yzyy, l(6, 6, 0, 0)
ishl r16.z, r12.w, l(4)
and r0.y, r12.z, l(-32)
iadd r0.z, -r0.y, r12.z
and r12.w, cb2[0].y, l(-32)
iadd r13.w, -r12.w, cb2[0].y
mov r17.xy, l(0,0,0,0)
mov r18.w, l(0)
mov r19.yz, l(0,0,1.000000,0)
mov r20.xy, l(0,0,0,0)
mov r21.xw, l(1.000000,0,0,0)
mov r22.xy, l(0,0,0,0)
mov r23.xy, l(0,0,0,0)
mov r24.xyzw, l(0,0,0,0)
mov r25.yzw, l(0,0,0,0)
mov r14.y, r0.y
loop 
  uge r14.z, r14.y, cb2[0].y
  breakc_nz r14.z
  ushr r17.z, r14.y, l(5)
  iadd r18.xyz, r16.xyzx, r17.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r14.z, r18.xyzw, t7.yzxw
  ieq r14.w, r0.y, r14.y
  bfi r16.w, r0.z, l(0), l(0), r14.z
  movc r14.z, r14.w, r16.w, r14.z
  ieq r14.w, r12.w, r14.y
  ubfe r16.w, r13.w, l(0), r14.z
  movc r14.z, r14.w, r16.w, r14.z
  iadd r14.w, r14.y, cb2[0].x
  mov r26.xyzw, r24.xyzw
  mov r27.xyz, r25.yzwy
  mov r16.w, r14.z
  loop 
    breakc_z r16.w
    firstbit_lo r17.z, r16.w
    ishl r17.w, l(1), r17.z
    and r18.x, r16.w, r17.w
    if_nz r18.x
      xor r16.w, r16.w, r17.w
      iadd r17.w, r14.w, r17.z
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r28.xyzw, r17.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r18.xy, r17.w, l(16), t11.xyxx
      add r28.xyz, r28.xyzx, -v6.xyzx
      mov r18.z, r28.w
      lt r18.xyz, |r28.xyzx|, r18.zxyz
      and r17.w, r18.y, r18.x
      and r17.w, r18.z, r17.w
      if_nz r17.w
        iadd r17.z, r14.y, r17.z
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r17.z, l(0), t15.wxyz
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r18.xy, r17.z, l(96), t15.xyxx
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r17.z, l(116), t15.zwxy
        add r30.xyz, -r28.yzwy, v6.xyzx
        and r17.w, r29.w, l(0x0000ffff)
        ubfe r18.z, l(6), l(25), r29.w
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r17.w, l(0), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r17.w, l(16), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r17.w, l(32), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r17.w, l(48), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r17.w, l(64), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r17.w, l(80), t16.xyzw
        dp3 r19.w, r31.xyzx, r30.xyzx
        add_sat r19.w, r31.w, r19.w
        dp3 r20.w, r32.xyzx, r30.xyzx
        add_sat r20.w, r32.w, r20.w
        mul r19.w, r19.w, r20.w
        dp3 r20.w, r33.xyzx, r30.xyzx
        add_sat r20.w, r33.w, r20.w
        mul r19.w, r19.w, r20.w
        dp3 r20.w, r34.xyzx, r30.xyzx
        add_sat r20.w, r34.w, r20.w
        mul r19.w, r19.w, r20.w
        dp3 r20.w, r35.xyzx, r30.xyzx
        add_sat r20.w, r35.w, r20.w
        mul r19.w, r19.w, r20.w
        dp3 r20.w, r36.xyzx, r30.xyzx
        add_sat r20.w, r36.w, r20.w
        mul r19.x, r19.w, r20.w
        and r19.w, r18.x, l(1)
        movc r19.xw, r19.wwww, r19.xxxy, r19.zzzx
        mov r20.w, r18.x
        mov r31.xy, r19.xwxx
        mov r22.w, l(1)
        loop 
          ige r23.w, r22.w, r18.z
          breakc_nz r23.w
          iadd r23.w, r17.w, r22.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r23.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r23.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r23.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r23.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r23.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r23.w, l(80), t16.xyzw
          dp3 r23.w, r32.xyzx, r30.xyzx
          add_sat r23.w, r32.w, r23.w
          mul r23.w, r23.w, r31.x
          dp3 r28.w, r33.xyzx, r30.xyzx
          add_sat r28.w, r33.w, r28.w
          mul r23.w, r23.w, r28.w
          dp3 r28.w, r34.xyzx, r30.xyzx
          add_sat r28.w, r34.w, r28.w
          mul r23.w, r23.w, r28.w
          dp3 r28.w, r35.xyzx, r30.xyzx
          add_sat r28.w, r35.w, r28.w
          mul r23.w, r23.w, r28.w
          dp3 r28.w, r36.xyzx, r30.xyzx
          add_sat r28.w, r36.w, r28.w
          mul r23.w, r23.w, r28.w
          dp3 r28.w, r37.xyzx, r30.xyzx
          add_sat r28.w, r37.w, r28.w
          mul r31.x, r23.w, r28.w
          ushr r30.w, r20.w, l(2)
          ubfe r31.z, l(1), l(2), r20.w
          and r31.w, r30.w, l(2)
          max r32.x, r31.x, r31.y
          mad r23.w, -r23.w, r28.w, l(1.000000)
          mul r23.w, r23.w, r31.y
          movc r21.y, r31.w, r23.w, r32.x
          movc r31.xy, r31.zzzz, r31.xyxx, r21.xyxx
          iadd r22.w, r22.w, l(1)
          mov r20.w, r30.w
        endloop 
        mov_sat r31.y, r31.y
        mul r17.w, r18.y, r31.y
        lt r18.x, l(0.000000), r17.w
        if_nz r18.x
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r17.z, l(16), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r17.z, l(32), t15.yxwz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r17.z, l(48), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r17.z, l(64), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r17.z, l(80), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r17.z, l(132), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r17.z, l(148), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xyzw, r17.z, l(164), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r40.xyzw, r17.z, l(180), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r41.xyzw, r17.z, l(196), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r42.xy, r17.z, l(212), t15.xyxx
          mad r27.z, r31.y, r18.y, r27.z
          mul r17.z, r29.z, r17.w
          mov r29.z, r37.z
          dp3 r17.w, r15.xyzx, r29.xyzx
          dp3 r18.x, r30.xyzx, r29.xyzx
          add r18.x, -r37.w, r18.x
          ge r18.y, r18.x, l(0.000000)
          max r18.x, r11.z, |r18.x|
          movc r18.x, r18.y, r18.x, -r18.x
          max r17.w, -r17.w, l(0.00000010)
          div r17.w, r18.x, r17.w
          min r17.w, |r17.w|, l(131072.000000)
          mov r37.z, r38.z
          dp3 r18.x, r15.xyzx, r37.xyzx
          dp3 r18.y, r30.xyzx, r37.xyzx
          add r18.y, -r38.w, r18.y
          ge r18.z, r18.y, l(0.000000)
          max r18.y, r11.z, |r18.y|
          movc r18.y, r18.z, r18.y, -r18.y
          max r18.x, -r18.x, l(0.00000010)
          div r18.x, r18.y, r18.x
          min r17.w, r17.w, |r18.x|
          mov r38.z, r39.z
          dp3 r18.x, r15.xyzx, r38.xyzx
          dp3 r18.y, r30.xyzx, r38.xyzx
          add r18.y, -r39.w, r18.y
          ge r18.z, r18.y, l(0.000000)
          max r18.y, r11.z, |r18.y|
          movc r18.y, r18.z, r18.y, -r18.y
          max r18.x, -r18.x, l(0.00000010)
          div r18.x, r18.y, r18.x
          min r17.w, r17.w, |r18.x|
          mov r39.z, r40.z
          dp3 r18.x, r15.xyzx, r39.xyzx
          dp3 r18.y, r30.xyzx, r39.xyzx
          add r18.y, -r40.w, r18.y
          ge r18.z, r18.y, l(0.000000)
          max r18.y, r11.z, |r18.y|
          movc r18.y, r18.z, r18.y, -r18.y
          max r18.x, -r18.x, l(0.00000010)
          div r18.x, r18.y, r18.x
          min r17.w, r17.w, |r18.x|
          mov r40.z, r41.x
          dp3 r18.x, r15.xyzx, r40.xyzx
          dp3 r18.y, r30.xyzx, r40.xyzx
          add r18.y, -r41.y, r18.y
          ge r18.z, r18.y, l(0.000000)
          max r18.y, r11.z, |r18.y|
          movc r18.y, r18.z, r18.y, -r18.y
          max r18.x, -r18.x, l(0.00000010)
          div r18.x, r18.y, r18.x
          min r17.w, r17.w, |r18.x|
          mov r42.zw, r41.zzzw
          dp3 r18.x, r15.zxyz, r42.xzwx
          dp3 r18.y, r30.zxyz, r42.xzwx
          add r18.y, -r42.y, r18.y
          ge r18.z, r18.y, l(0.000000)
          max r18.y, r11.z, |r18.y|
          movc r18.y, r18.z, r18.y, -r18.y
          max r18.x, -r18.x, l(0.00000010)
          div r18.x, r18.y, r18.x
          min r17.w, r17.w, |r18.x|
          mov r18.x, r34.w
          mov r18.yz, r35.zzwz
          add r18.xyz, r30.xyzx, r18.xyzx
          mad r18.xyz, r15.xyzx, r17.wwww, r18.xyzx
          dp3 r19.x, r18.xyzx, r18.xyzx
          sqrt r19.x, r19.x
          div r17.w, r17.w, r19.x
          add r17.w, r17.w, r17.w
          sqrt r17.w, r17.w
          mad r17.w, r10.w, l(5.000000), r17.w
          add r17.w, r17.w, l(-0.844800)
          mov r28.y, r32.z
          mov r28.z, r33.x
          dp3 r37.x, r18.xyzx, r28.xyzx
          mov r29.xy, r32.xwxx
          mov r29.z, r33.w
          dp3 r37.y, r18.xyzx, r29.xyzx
          mov r33.x, r32.y
          dp3 r37.z, r18.xyzx, r33.xyzx
          ubfe r18.x, l(9), l(16), r29.w
          utof r37.w, r18.x
          sample_l_indexable(texturecubearray)(float,float,float,float) r18.xyz, r37.xyzw, t8.xyzw, s2, r17.w
          dp3 r32.x, r30.xyzx, r28.xyzx
          dp3 r32.y, r30.xyzx, r29.xyzx
          dp3 r32.z, r30.xyzx, r33.xyzx
          mad_sat r30.xyz, r32.xyzx, r34.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
          mov r35.z, r36.x
          mad r30.xyz, r30.xyzx, r35.xyzx, r36.yzwy
          dp3 r37.x, r2.xyzx, r28.xyzx
          dp3 r37.y, r2.xyzx, r29.xyzx
          dp3 r37.z, r2.xyzx, r33.xyzx
          lt r28.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r37.xyzx
          movc r20.z, r28.x, l(0), l(0.500000)
          add r29.xyz, r20.xyzx, r30.xyzx
          sample_l_indexable(texture3d)(float,float,float,float) r29.xyz, r29.xyzx, t17.xyzw, s4, l(0.000000)
          mul r31.xzw, r37.xxyz, r37.xxyz
          mul r31.xzw, r17.zzzz, r31.xxzw
          movc r22.z, r28.y, l(0), l(0.500000)
          add r28.xyw, r22.xyxz, r30.xyxz
          sample_l_indexable(texture3d)(float,float,float,float) r28.xyw, r28.xywx, t18.xywz, s4, l(0.000000)
          mul r28.xyw, r31.zzzz, r28.xyxw
          mad r28.xyw, r29.xyxz, r31.xxxx, r28.xyxw
          movc r23.z, r28.z, l(0), l(0.500000)
          add r29.xyz, r23.xyzx, r30.xyzx
          sample_l_indexable(texture3d)(float,float,float,float) r29.xyz, r29.xyzx, t19.xyzw, s4, l(0.000000)
          mad r28.xyz, r29.xyzx, r31.wwww, r28.xywx
          sample_l_indexable(texturecubearray)(float,float,float,float) r29.xyz, r37.xyzw, t8.xyzw, s2, l(6.000000)
          mul r30.xyz, r28.xyzx, r29.xyzx
          dp3 r17.w, r30.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r26.xyz, r28.xyzx, r29.xyzx, r26.xyzx
          mul r19.x, r11.w, r17.w
          mul r18.xyz, r17.zzzz, r18.xyzx
          dp3 r17.z, r18.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r17.z, r11.w, r17.w, r17.z
          div r17.z, r19.x, r17.z
          mov r28.x, r26.w
          mov r28.yz, r27.xxyx
          mad r27.xyw, r18.yzyx, r17.zzzz, r28.yzyx
          mov r26.w, r27.w
        endif 
      endif 
    endif 
  endloop 
  mov r24.xyzw, r26.xyzw
  mov r25.yzw, r27.xxyz
  iadd r14.y, r14.y, l(32)
endloop 
lt r12.w, r25.w, l(1.000000)
if_nz r12.w
  mov r17.xy, l(0,0,0,0)
  mov r18.w, l(0)
  mov r19.yz, l(0,0,1.000000,0)
  mov r20.xy, l(0,0,0,0)
  mov r21.x, l(1.000000)
  mov r22.xy, l(0,0,0,0)
  mov r23.xy, l(0,0,0,0)
  mov r26.x, r24.w
  mov r26.yzw, r25.yyzw
  mov r14.yzw, r24.xxyz
  mov r12.w, r25.w
  mov r13.w, l(0)
  loop 
    uge r16.w, r13.w, r12.z
    breakc_nz r16.w
    ushr r17.z, r13.w, l(5)
    iadd r18.xyz, r16.xyzx, r17.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r16.w, r18.xyzw, t7.yzwx
    ieq r17.z, r0.y, r13.w
    ubfe r17.w, r0.z, l(0), r16.w
    movc r16.w, r17.z, r17.w, r16.w
    iadd r17.z, r13.w, cb2[0].x
    mov r27.xyzw, r26.xyzw
    mov r18.xyz, r14.yzwy
    mov r17.w, r12.w
    mov r19.w, r16.w
    loop 
      breakc_z r19.w
      firstbit_lo r20.w, r19.w
      ishl r22.w, l(1), r20.w
      and r23.w, r19.w, r22.w
      if_nz r23.w
        xor r19.w, r19.w, r22.w
        iadd r22.w, r17.z, r20.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r28.xyzw, r22.w, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r29.xy, r22.w, l(16), t11.xyxx
        add r28.xyz, r28.xyzx, -v6.xyzx
        mov r29.z, r28.w
        lt r28.xyz, |r28.xyzx|, r29.zxyz
        and r22.w, r28.y, r28.x
        and r22.w, r28.z, r22.w
        if_nz r22.w
          iadd r20.w, r13.w, r20.w
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r20.w, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xy, r20.w, l(96), t15.xyxx
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r20.w, l(116), t15.zwxy
          add r31.xyz, -r28.yzwy, v6.xyzx
          and r22.w, r30.w, l(0x0000ffff)
          ubfe r23.w, l(6), l(25), r30.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r22.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r22.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r22.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r22.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r22.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r22.w, l(80), t16.xyzw
          dp3 r28.w, r32.xyzx, r31.xyzx
          add_sat r28.w, r32.w, r28.w
          dp3 r29.z, r33.xyzx, r31.xyzx
          add_sat r29.z, r33.w, r29.z
          mul r28.w, r28.w, r29.z
          dp3 r29.z, r34.xyzx, r31.xyzx
          add_sat r29.z, r34.w, r29.z
          mul r28.w, r28.w, r29.z
          dp3 r29.z, r35.xyzx, r31.xyzx
          add_sat r29.z, r35.w, r29.z
          mul r28.w, r28.w, r29.z
          dp3 r29.z, r36.xyzx, r31.xyzx
          add_sat r29.z, r36.w, r29.z
          mul r28.w, r28.w, r29.z
          dp3 r29.z, r37.xyzx, r31.xyzx
          add_sat r29.z, r37.w, r29.z
          mul r19.x, r28.w, r29.z
          and r28.w, r29.x, l(1)
          movc r29.zw, r28.wwww, r19.xxxy, r19.zzzx
          mov r19.x, r29.x
          mov r32.xy, r29.zwzz
          mov r28.w, l(1)
          loop 
            ige r31.w, r28.w, r23.w
            breakc_nz r31.w
            iadd r31.w, r22.w, r28.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r31.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r31.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r31.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r31.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r31.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r38.xyzw, r31.w, l(80), t16.xyzw
            dp3 r31.w, r33.xyzx, r31.xyzx
            add_sat r31.w, r33.w, r31.w
            mul r31.w, r31.w, r32.x
            dp3 r32.z, r34.xyzx, r31.xyzx
            add_sat r32.z, r34.w, r32.z
            mul r31.w, r31.w, r32.z
            dp3 r32.z, r35.xyzx, r31.xyzx
            add_sat r32.z, r35.w, r32.z
            mul r31.w, r31.w, r32.z
            dp3 r32.z, r36.xyzx, r31.xyzx
            add_sat r32.z, r36.w, r32.z
            mul r31.w, r31.w, r32.z
            dp3 r32.z, r37.xyzx, r31.xyzx
            add_sat r32.z, r37.w, r32.z
            mul r31.w, r31.w, r32.z
            dp3 r32.z, r38.xyzx, r31.xyzx
            add_sat r32.z, r38.w, r32.z
            mul r32.x, r31.w, r32.z
            ushr r32.w, r19.x, l(2)
            ubfe r33.x, l(1), l(2), r19.x
            and r33.y, r32.w, l(2)
            max r33.z, r32.x, r32.y
            mad r31.w, -r31.w, r32.z, l(1.000000)
            mul r31.w, r31.w, r32.y
            movc r21.y, r33.y, r31.w, r33.z
            movc r32.xy, r33.xxxx, r32.xyxx, r21.xyxx
            iadd r28.w, r28.w, l(1)
            mov r19.x, r32.w
          endloop 
          add_sat r19.x, -r17.w, r32.y
          mul r21.y, r29.y, r19.x
          lt r22.w, l(0.000000), r21.y
          if_nz r22.w
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r20.w, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r20.w, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r20.w, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r20.w, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r20.w, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r20.w, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xyzw, r20.w, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r40.xyzw, r20.w, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r41.xyzw, r20.w, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r42.xyzw, r20.w, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r43.xy, r20.w, l(212), t15.xyxx
            mad r27.w, r19.x, r29.y, r27.w
            mul r19.x, r30.z, r21.y
            mov r30.z, r38.z
            dp3 r20.w, r15.xyzx, r30.xyzx
            dp3 r21.y, r31.xyzx, r30.xyzx
            add r21.y, -r38.w, r21.y
            ge r22.w, r21.y, l(0.000000)
            max r21.y, r11.z, |r21.y|
            movc r21.y, r22.w, r21.y, -r21.y
            max r20.w, -r20.w, l(0.00000010)
            div r20.w, r21.y, r20.w
            min r20.w, |r20.w|, l(131072.000000)
            mov r38.z, r39.z
            dp3 r21.y, r15.xyzx, r38.xyzx
            dp3 r22.w, r31.xyzx, r38.xyzx
            add r22.w, -r39.w, r22.w
            ge r23.w, r22.w, l(0.000000)
            max r22.w, r11.z, |r22.w|
            movc r22.w, r23.w, r22.w, -r22.w
            max r21.y, -r21.y, l(0.00000010)
            div r21.y, r22.w, r21.y
            min r20.w, r20.w, |r21.y|
            mov r39.z, r40.z
            dp3 r21.y, r15.xyzx, r39.xyzx
            dp3 r22.w, r31.xyzx, r39.xyzx
            add r22.w, -r40.w, r22.w
            ge r23.w, r22.w, l(0.000000)
            max r22.w, r11.z, |r22.w|
            movc r22.w, r23.w, r22.w, -r22.w
            max r21.y, -r21.y, l(0.00000010)
            div r21.y, r22.w, r21.y
            min r20.w, r20.w, |r21.y|
            mov r40.z, r41.z
            dp3 r21.y, r15.xyzx, r40.xyzx
            dp3 r22.w, r31.xyzx, r40.xyzx
            add r22.w, -r41.w, r22.w
            ge r23.w, r22.w, l(0.000000)
            max r22.w, r11.z, |r22.w|
            movc r22.w, r23.w, r22.w, -r22.w
            max r21.y, -r21.y, l(0.00000010)
            div r21.y, r22.w, r21.y
            min r20.w, r20.w, |r21.y|
            mov r41.z, r42.x
            dp3 r21.y, r15.xyzx, r41.xyzx
            dp3 r22.w, r31.xyzx, r41.xyzx
            add r22.w, -r42.y, r22.w
            ge r23.w, r22.w, l(0.000000)
            max r22.w, r11.z, |r22.w|
            movc r22.w, r23.w, r22.w, -r22.w
            max r21.y, -r21.y, l(0.00000010)
            div r21.y, r22.w, r21.y
            min r20.w, r20.w, |r21.y|
            mov r43.zw, r42.zzzw
            dp3 r21.y, r15.zxyz, r43.xzwx
            dp3 r22.w, r31.zxyz, r43.xzwx
            add r22.w, -r43.y, r22.w
            ge r23.w, r22.w, l(0.000000)
            max r22.w, r11.z, |r22.w|
            movc r22.w, r23.w, r22.w, -r22.w
            max r21.y, -r21.y, l(0.00000010)
            div r21.y, r22.w, r21.y
            min r20.w, r20.w, |r21.y|
            mov r29.x, r35.w
            mov r29.yz, r36.zzwz
            add r29.xyz, r31.xyzx, r29.xyzx
            mad r29.xyz, r15.xyzx, r20.wwww, r29.xyzx
            dp3 r21.y, r29.xyzx, r29.xyzx
            sqrt r21.y, r21.y
            div r20.w, r20.w, r21.y
            add r20.w, r20.w, r20.w
            sqrt r20.w, r20.w
            mad r20.w, r10.w, l(5.000000), r20.w
            add r20.w, r20.w, l(-0.844800)
            mov r28.y, r33.z
            mov r28.z, r34.x
            dp3 r38.x, r29.xyzx, r28.xyzx
            mov r30.xy, r33.xwxx
            mov r30.z, r34.w
            dp3 r38.y, r29.xyzx, r30.xyzx
            mov r34.x, r33.y
            dp3 r38.z, r29.xyzx, r34.xyzx
            ubfe r21.y, l(9), l(16), r30.w
            utof r38.w, r21.y
            sample_l_indexable(texturecubearray)(float,float,float,float) r29.xyz, r38.xyzw, t8.xyzw, s2, r20.w
            dp3 r33.x, r31.xyzx, r28.xyzx
            dp3 r33.y, r31.xyzx, r30.xyzx
            dp3 r33.z, r31.xyzx, r34.xyzx
            mad_sat r31.xyz, r33.xyzx, r35.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
            mov r36.z, r37.x
            mad r31.xyz, r31.xyzx, r36.xyzx, r37.yzwy
            dp3 r38.x, r2.xyzx, r28.xyzx
            dp3 r38.y, r2.xyzx, r30.xyzx
            dp3 r38.z, r2.xyzx, r34.xyzx
            lt r28.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r38.xyzx
            movc r20.z, r28.x, l(0), l(0.500000)
            add r30.xyz, r20.xyzx, r31.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r30.xyz, r30.xyzx, t17.xyzw, s4, l(0.000000)
            mul r32.xzw, r38.xxyz, r38.xxyz
            mul r32.xzw, r19.xxxx, r32.xxzw
            movc r22.z, r28.y, l(0), l(0.500000)
            add r28.xyw, r22.xyxz, r31.xyxz
            sample_l_indexable(texture3d)(float,float,float,float) r28.xyw, r28.xywx, t18.xywz, s4, l(0.000000)
            mul r28.xyw, r32.zzzz, r28.xyxw
            mad r28.xyw, r30.xyxz, r32.xxxx, r28.xyxw
            movc r23.z, r28.z, l(0), l(0.500000)
            add r30.xyz, r23.xyzx, r31.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r30.xyz, r30.xyzx, t19.xyzw, s4, l(0.000000)
            mad r28.xyz, r30.xyzx, r32.wwww, r28.xywx
            sample_l_indexable(texturecubearray)(float,float,float,float) r30.xyz, r38.xyzw, t8.xyzw, s2, l(6.000000)
            mul r31.xyz, r28.xyzx, r30.xyzx
            dp3 r20.z, r31.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r18.xyz, r28.xyzx, r30.xyzx, r18.xyzx
            mul r20.w, r11.w, r20.z
            mul r28.xyz, r19.xxxx, r29.xyzx
            dp3 r19.x, r28.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r19.x, r11.w, r20.z, r19.x
            div r19.x, r20.w, r19.x
            mad r27.xyz, r28.xyzx, r19.xxxx, r27.xyzx
          endif 
        endif 
      endif 
    endloop 
    mov r26.xyzw, r27.xyzw
    mov r14.yzw, r18.xxyz
    iadd r13.w, r13.w, l(32)
  endloop 
  mov r25.xyzw, r26.zxyw
  mov r24.xyz, r14.yzwy
  mov r25.xyzw, r25.yzxw
else 
  mov r25.x, r24.w
endif 
max r0.y, r25.w, l(1.000000)
rcp r0.y, r0.y
mov_sat r25.w, r25.w
mul r14.yzw, r0.yyyy, r24.xxyz
mul r17.xyz, r0.yyyy, r25.xyzx
lt r0.z, r25.w, l(0.990000)
if_nz r0.z
  add r0.z, -r25.w, l(1.000000)
  mul r10.w, r0.z, cb2[19].x
  add r18.xyz, v6.xyzx, -cb2[35].xyzx
  mul r19.x, r18.x, cb2[35].w
  mul r19.yz, r18.yyzy, cb2[36].xxyx
  add_sat r18.xyz, r19.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mul r19.xy, r18.xyxx, cb2[36].zwzz
  mul r19.z, r18.z, cb2[37].x
  add r18.xyz, r19.xyzx, cb2[37].yzwy
  lt r19.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r2.xyzx
  movc r19.xyz, r19.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
  mov r19.w, l(0)
  add r20.xyz, r18.xyzx, r19.wwxw
  sample_l_indexable(texture3d)(float,float,float,float) r20.xyz, r20.xyzx, t17.xyzw, s4, l(0.000000)
  mul r22.xyz, r2.xyzx, r2.xyzx
  mul r22.xyz, r10.wwww, r22.xyzx
  add r23.xyz, r18.xyzx, r19.wwyw
  sample_l_indexable(texture3d)(float,float,float,float) r23.xyz, r23.xyzx, t18.xyzw, s4, l(0.000000)
  mul r23.xyz, r22.yyyy, r23.xyzx
  mad r20.xyz, r20.xyzx, r22.xxxx, r23.xyzx
  add r18.xyz, r18.xyzx, r19.wwzw
  sample_l_indexable(texture3d)(float,float,float,float) r18.xyz, r18.xyzx, t19.xyzw, s4, l(0.000000)
  mad r18.xyz, r18.xyzx, r22.zzzz, r20.xyzx
  mov r2.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r19.xyz, r2.xyzw, t8.xyzw, s2, l(6.000000)
  mul r18.xyz, r18.xyzx, r19.xyzx
  dp3 r2.w, r18.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  mad r14.yzw, r24.xxyz, r0.yyyy, r18.xxyz
  mov r15.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r11.yzw, r15.xyzw, t8.wxyz, s2, r11.y
  mad r0.y, cb2[19].x, r0.z, -r2.w
  mad r0.y, r7.w, r0.y, r2.w
  mad r17.xyz, r11.yzwy, r0.yyyy, r17.xyzx
endif 
if_nz cb0[28].z
  dp3 r0.y, r6.yzwy, r2.xyzx
  add r0.y, r0.y, r0.y
  mad r11.yzw, r2.xxyz, -r0.yyyy, r6.yyzw
  dp3 r0.y, r6.yzwy, -r2.xyzx
  add r0.y, r0.y, r0.y
  mad r15.xyz, r2.xyzx, r0.yyyy, r6.yzwy
  movc r11.yzw, v9.xxxx, r11.yyzw, r15.xxyz
  if_nz cb0[28].w
    mul r15.xyz, v6.yyyy, cb1[5].xyzx
    mad r15.xyz, v6.xxxx, cb1[4].xyzx, r15.xyzx
    mad r15.xyz, v6.zzzz, cb1[6].xyzx, r15.xyzx
    mul r18.xyz, r11.yzwy, cb0[21].zzzz
    mul r19.xyz, r18.yyyy, cb1[5].xyzx
    mad r18.xyw, r18.xxxx, cb1[4].xyxz, r19.xyxz
    mad r18.xyz, r18.zzzz, cb1[6].xyzx, r18.xywx
    min r0.y, cb0[21].x, l(1000.000000)
    mad r15.xyz, r18.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000), r15.xyzx
    div r0.y, r0.y, cb0[21].z
    mov r19.xyz, r17.xyzx
    mov r20.xyz, r15.xyzx
    mov r0.z, l(0)
    loop 
      itof r2.w, r0.z
      ge r2.w, r2.w, r0.y
      breakc_nz r2.w
      add r20.xyz, r18.xyzx, r20.xyzx
      mul r22.xyz, r20.yyyy, cb1[1].xywx
      mad r22.xyz, r20.xxxx, cb1[0].xywx, r22.xyzx
      mad r22.xyz, r20.zzzz, cb1[2].xywx, r22.xyzx
      add r22.xyz, r22.xyzx, cb1[3].xywx
      max r2.w, |r22.y|, |r22.x|
      lt r2.w, r22.z, r2.w
      if_nz r2.w
        break 
      endif 
      div r12.zw, r22.xxxy, r22.zzzz
      mad r12.zw, r12.zzzw, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
      sample_l_indexable(texture2d)(float,float,float,float) r2.w, r12.zwzz, t26.yzwx, s8, l(1.000000)
      lt r7.w, |r2.w|, r20.z
      ge r10.w, |r2.w|, v0.w
      and r7.w, r7.w, r10.w
      if_nz r7.w
        add r2.w, -|r2.w|, r20.z
        mul r2.w, r2.w, cb0[21].w
        mad r22.xyz, -r2.wwww, r18.xyzx, r20.xyzx
        mul r23.xyz, r22.yyyy, cb1[1].xywx
        mad r22.xyw, r22.xxxx, cb1[0].xyxw, r23.xyxz
        mad r22.xyz, r22.zzzz, cb1[2].xywx, r22.xywx
        add r22.xyz, r22.xyzx, cb1[3].xywx
        div r12.zw, r22.xxxy, r22.zzzz
        mad r12.zw, r12.zzzw, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
        sample_l_indexable(texture2d)(float,float,float,float) r22.xyz, r12.zwzz, t30.xyzw, s8, l(0.000000)
        mul r22.xyz, r22.xyzx, cb1[85].xxxx
        mov r19.xyz, r22.xyzx
        break 
      endif 
      iadd r0.z, r0.z, l(1)
    endloop 
    mov r17.xyz, r19.xyzx
  else 
    mul r0.y, r7.y, cb0[21].y
    mad r11.yzw, r11.yyzw, r0.yyyy, v6.xxyz
    mul r15.xyz, r11.zzzz, cb1[9].xywx
    mad r15.xyz, r11.yyyy, cb1[8].xywx, r15.xyzx
    mad r11.yzw, r11.wwww, cb1[10].xxyw, r15.xxyz
    add r11.yzw, r11.yyzw, cb1[11].xxyw
    div r0.yz, r11.yyzy, r11.wwww
    max r2.w, |r0.z|, |r0.y|
    mad r0.yz, r0.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r0.yzyy, t26.yzwx, s8, l(0.000000)
    ge r7.w, |r7.w|, v0.w
    lt r2.w, r2.w, l(1.000000)
    and r2.w, r2.w, r7.w
    sample_indexable(texture2d)(float,float,float,float) r11.yzw, r0.yzyy, t30.wxyz, s8
    if_nz r2.w
      mul r17.xyz, r11.yzwy, cb1[85].xxxx
    endif 
  endif 
endif 
dp3 r0.y, r2.xyzx, cb2[17].xyzx
mov_sat r0.z, r0.y
movc r2.w, cb0[29].z, |r0.y|, r0.z
ge r2.w, l(0.000000), r2.w
if_nz r2.w
  mov r7.w, l(0)
endif 
if_z r2.w
  mul r11.yzw, v6.yyyy, cb2[29].xxyz
  mad r11.yzw, v6.xxxx, cb2[28].xxyz, r11.yyzw
  mad r11.yzw, v6.zzzz, cb2[30].xxyz, r11.yyzw
  add r11.yzw, r11.yyzw, cb2[31].xxyz
  add r2.w, r11.w, -cb2[17].w
  mad r2.w, -r2.w, l(0.00006104), l(1.000000)
  mov_sat r10.w, r2.w
  eq r10.w, r2.w, r10.w
  if_nz r10.w
    mov r10.w, l(0)
    mov r12.z, l(0)
    loop 
      ge r12.w, r10.w, l(3.000000)
      breakc_nz r12.w
      ftou r12.w, r10.w
      add r15.xy, r11.yzyy, -cb2[r12.w + 20].xyxx
      max r13.w, |r15.y|, |r15.x|
      mul r12.z, r13.w, cb2[r12.w + 20].z
      lt r12.w, r12.z, l(1.000000)
      if_nz r12.w
        break 
      endif 
      add r10.w, r10.w, l(1.000000)
      mov r12.z, l(0)
    endloop 
  else 
    mov r10.w, l(3.000000)
    mov r12.z, l(0)
  endif 
  ge r12.w, r10.w, l(3.000000)
  if_nz r12.w
    mul r15.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
    rcp r18.xz, r15.xxxx
    mov r18.y, -r18.z
    mad r15.xyz, r11.yzyy, r18.xyzx, r15.yzyy
    add r18.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r15.xyz, r15.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r15.xyz, r18.xyzx, r15.xyzx
    mul r18.xy, r15.zyzz, cb2[32].xxxx
    round_ni r18.xy, r18.xyxx
    mul r13.w, r18.y, cb2[27].x
    mad r13.w, r13.w, cb2[32].x, r18.x
    ftou r13.w, r13.w
    iadd r13.w, r13.w, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.w, r13.w, l(0), t23.xxxx
    and r16.w, r15.w, l(0x40000000)
    ishl r17.w, r15.w, l(2)
    if_z r16.w
      and r16.w, r15.w, l(0x01ffffff)
      iadd r18.x, r13.w, r16.w
      ushr r13.w, r15.w, l(25)
      utof r13.w, r13.w
      mul r15.xyz, r13.wwww, r15.xyzx
      frc r15.xyz, r15.xyzx
      mul r15.xyz, r15.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
      ftou r15.xyz, r15.xyzx
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.x, l(0), t23.xxxx
      ushr r19.xy, r15.zyzz, l(6, 6, 0, 0)
      and r13.w, r18.z, l(0xc0000000)
      iadd r15.w, r18.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.w, r15.w, l(0), t23.xxxx
      movc r15.w, r19.y, r18.z, r15.w
      ushr r16.w, r15.w, l(13)
      movc r15.w, r19.x, r16.w, r15.w
      and r15.w, r15.w, l(8191)
      iadd r19.x, r15.w, r18.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.z, r19.x, l(0), t23.xxxx
      mov r18.y, l(0)
      mov r19.y, l(1)
      movc r19.xyz, r13.wwww, r18.xyzx, r19.xyzx
      movc r20.yz, r13.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r21.xy, r15.zyzz, r20.yyyy
      and r21.xy, r21.xyxx, l(1, 1, 0, 0)
      and r15.w, r19.z, l(0xc0000000)
      iadd r16.w, r19.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.w, r16.w, l(0), t23.xxxx
      movc r16.w, r21.y, r19.z, r16.w
      ushr r18.w, r16.w, l(13)
      movc r16.w, r21.x, r18.w, r16.w
      and r16.w, r16.w, l(8191)
      iadd r20.x, r16.w, r19.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.w, r20.x, l(0), t23.xxxx
      movc r19.xyz, r15.wwww, r19.xyzx, r20.xzwx
      movc r18.xyz, r13.wwww, r18.xyzx, r19.xyzx
      and r13.w, r18.z, l(0xc0000000)
      if_z r13.w
        iadd r13.w, -r18.y, l(6)
        ushr r19.xy, r15.zyzz, r13.wwww
        or r13.w, r18.z, l(0x40000000)
        bfi r15.w, l(1), l(1), r19.y, l(0)
        bfi r15.w, l(1), l(0), r19.x, r15.w
        imul null, r15.w, r15.w, l(10)
        ushr r13.w, r13.w, r15.w
        and r13.w, r13.w, l(1023)
        iadd r19.x, r13.w, r18.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.w, r19.x, l(0), t23.xxxx
        iadd r19.yz, r18.yyyy, l(0, 1, 2, 0)
        iadd r13.w, -r19.y, l(6)
        ushr r18.yw, r15.zzzy, r13.wwww
        and r13.w, r19.w, l(0xc0000000)
        or r15.w, r19.w, l(0x40000000)
        bfi r16.w, l(1), l(1), r18.w, l(0)
        bfi r16.w, l(1), l(0), r18.y, r16.w
        imul null, r16.w, r16.w, l(10)
        ushr r15.w, r15.w, r16.w
        and r15.w, r15.w, l(1023)
        iadd r20.x, r15.w, r19.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.z, r20.x, l(0), t23.xxxx
        mov r20.y, r19.z
        movc r20.xyz, r13.wwww, r19.xywx, r20.xyzx
        iadd r15.w, -r20.y, l(6)
        ushr r18.yw, r15.zzzy, r15.wwww
        and r15.w, r20.z, l(0xc0000000)
        or r16.w, r20.z, l(0x40000000)
        bfi r18.w, l(1), l(1), r18.w, l(0)
        bfi r18.y, l(1), l(0), r18.y, r18.w
        imul null, r18.y, r18.y, l(10)
        ushr r16.w, r16.w, r18.y
        and r16.w, r16.w, l(1023)
        iadd r21.x, r16.w, r20.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r21.y, r21.x, l(0), t23.xxxx
        movc r18.yw, r15.wwww, r20.xxxz, r21.xxxy
        movc r18.xz, r13.wwww, r19.xxwx, r18.yywy
      endif 
      and r13.w, r18.z, l(0xc0000000)
      if_z r13.w
        ubfe r15.w, l(14), l(15), r18.z
        utof r15.w, r15.w
        mul r15.w, r15.w, cb2[27].w
        mul r15.w, r15.w, l(0.00006104)
        and r18.yw, r18.zzzz, l(0, 0x00007fff, 0, 0x20000000)
        utof r16.w, r18.y
        mul r16.w, r16.w, cb2[27].w
        mul r16.w, r16.w, l(0.00003052)
        and r18.y, r15.y, l(3)
        iadd r18.y, r18.y, r18.x
        iadd r18.y, r18.y, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.y, r18.y, l(0), t23.xxxx
        bfi r19.xyz, l(2, 2, 1, 0), l(3, 1, 4, 0), r15.xyzx, l(0, 0, 0, 0)
        ushr r15.x, r18.y, r19.x
        and r15.x, r15.x, l(255)
        utof r15.x, r15.x
        mul r15.x, r16.w, r15.x
        mad r15.x, r15.x, l(0.00392157), r15.w
        iadd r15.y, r19.y, l(1)
        ubfe r15.z, l(1), l(1), r15.z
        iadd r15.y, r15.z, r15.y
        iadd r15.y, r15.y, r18.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.y, r15.y, l(0), t23.xxxx
        ushr r15.y, r15.y, r19.z
        and r15.y, r15.y, l(0x0000ffff)
        utof r15.y, r15.y
        mul r15.y, r16.w, r15.y
        mad r15.y, r15.y, l(0.00001526), r15.w
        movc r17.w, r18.w, r15.x, r15.y
      else 
        and r15.x, r18.z, l(0x80000000)
        iadd r15.y, r18.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.y, r15.y, l(0), t23.xxxx
        movc r15.x, r15.x, r15.y, l(0)
        ishl r15.y, r18.z, l(2)
        ushr r15.z, r15.x, l(16)
        and r15.x, r15.x, l(0x0000ffff)
        f16tof32 r15.xz, r15.xxzx
        mad r15.y, r11.y, r15.z, r15.y
        mad r15.x, r11.z, r15.x, r15.y
        movc r17.w, r13.w, r15.x, r17.w
      endif 
    endif 
    mad r11.w, -cb2[27].z, l(2.000000), r11.w
    lt r11.w, r17.w, r11.w
    movc r7.w, r11.w, l(0), l(1.000000)
  endif 
  if_z r12.w
    if_z cb2[58].y
      ftou r11.w, r10.w
      add r15.xy, r11.yzyy, -cb2[r11.w + 20].xyxx
      mul r15.xy, r15.xyxx, cb2[r11.w + 20].zzzz
      mad r15.xy, r15.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r11.w, cb2[26].y
      add r15.z, r10.w, r11.w
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r11.w, r15.xyzx, t13.xxxx, s13, r2.w
      sample_l_indexable(texture2darray)(float,float,float,float) r12.w, r15.xyzx, t31.yzwx, s0, l(0.000000)
      add r11.w, r11.w, r12.w
      add_sat r11.w, r11.w, l(-1.000000)
      mul r12.w, r11.w, r11.w
      mul r7.w, r11.w, r12.w
    endif 
    if_nz cb2[58].y
      mov r15.x, -r12.x
      ftou r11.w, r10.w
      add r10.w, r10.w, l(1.000000)
      min r10.w, r10.w, l(2.000000)
      ftou r10.w, r10.w
      add r12.z, -r12.z, l(1.000000)
      mul r12.z, r12.z, l(28.000000)
      ftou r12.z, r12.z
      add r18.xy, r11.yzyy, -cb2[r11.w + 20].xyxx
      mul r18.xy, r18.xyxx, cb2[r11.w + 20].zzzz
      mad r18.xy, r18.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      add r11.yz, r11.yyzy, -cb2[r10.w + 20].xxyx
      mul r11.yz, r11.yyzy, cb2[r10.w + 20].zzzz
      mad r11.yz, r11.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      mov r15.y, r13.x
      mov r15.z, r12.x
      mov r12.w, l(0)
      mov r13.w, l(0)
      loop 
        uge r15.w, r13.w, l(8)
        breakc_nz r15.w
        ult r15.w, r12.z, r13.w
        movc r18.zw, r15.wwww, r11.yyyz, r18.xxxy
        movc r16.w, r15.w, cb2[r10.w + 20].w, cb2[r11.w + 20].w
        movc r15.w, r15.w, r10.w, r11.w
        dp2 r19.x, icb[r13.w + 0].yxyy, r15.xyxx
        dp2 r19.y, icb[r13.w + 0].yxyy, r15.yzyy
        mad r19.xy, r19.xyxx, r16.wwww, r18.zwzz
        iadd r15.w, r15.w, cb2[26].y
        utof r19.z, r15.w
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r15.w, r19.xyzx, t13.xxxx, s13, r2.w
        sample_l_indexable(texture2darray)(float,float,float,float) r16.w, r19.xyzx, t31.yzwx, s0, l(0.000000)
        add r15.w, r15.w, r16.w
        add_sat r15.w, r15.w, l(-1.000000)
        mad r12.w, r15.w, l(0.125000), r12.w
        iadd r13.w, r13.w, l(1)
      endloop 
      mul r2.w, r12.w, r12.w
      mul r7.w, r12.w, r2.w
    endif 
  endif 
endif 
and r2.w, cb2[53].x, l(0x0000ffff)
ult r10.w, l(0), r2.w
lt r11.y, l(0.000000), r7.w
and r10.w, r10.w, r11.y
if_nz r10.w
  iadd r2.w, r2.w, cb2[0].x
  iadd r2.w, r2.w, l(-1)
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r10.w, r2.w, l(52), t12.xxxx
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r2.w, l(68), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r2.w, l(84), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.xyzw, r2.w, l(100), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r20.xyzw, r2.w, l(116), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r22.xyzw, r2.w, l(132), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.xyzw, r2.w, l(148), t12.xyzw
  mad r11.y, |r0.y|, l(-0.200000), l(0.400000)
  lt r0.y, r0.y, l(0.000000)
  and r0.y, r0.y, r9.x
  movc r0.y, r0.y, -r11.y, r11.y
  mad r24.xyz, r2.xyzx, r0.yyyy, v6.xyzx
  mov r24.w, l(1.000000)
  dp4 r15.x, r15.xyzw, r24.xyzw
  dp4 r15.y, r18.xyzw, r24.xyzw
  dp4 r0.y, r19.xyzw, r24.xyzw
  dp4 r11.y, r20.xyzw, r24.xyzw
  lt r11.z, r11.y, r0.y
  div r12.zw, r15.xxxy, r11.yyyy
  mad r12.zw, r12.zzzw, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
  add r12.zw, r23.zzzw, r12.zzzw
  mul r12.zw, r23.xxxy, r12.zzzw
  div r15.xy, r10.wwww, r22.xzxx
  add r15.zw, -r15.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
  ge r15.zw, r12.zzzw, r15.zzzw
  ge r15.xy, r15.xyxx, r12.zwzz
  or r15.xy, r15.xyxx, r15.zwzz
  or r11.w, r15.y, r15.x
  or r11.z, r11.z, r11.w
  if_z r11.z
    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r11.z, r2.w, l(28), t12.xxxx
    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xy, r2.w, l(164), t12.xyxx
    mov_sat r12.zw, r12.zzzw
    mad r18.xy, r12.zwzz, r22.xzxx, r22.ywyy
    mul r2.w, r11.y, r15.y
    mad r0.y, r15.x, r11.y, r0.y
    div r0.y, r0.y, r2.w
    max r0.y, r0.y, l(0.00006104)
    and r2.w, r11.z, l(0x0000ffff)
    if_nz cb2[58].y
      mov r15.x, -r12.x
      utof r19.z, r2.w
      mov r15.y, r13.x
      mov r15.z, r12.x
      mov r11.yz, l(0,0,0,0)
      loop 
        ige r11.w, r11.z, l(8)
        breakc_nz r11.w
        dp2 r20.x, icb[r11.z + 0].yxyy, r15.xyxx
        dp2 r20.y, icb[r11.z + 0].yxyy, r15.yzyy
        mad r19.xy, r20.xyxx, r10.wwww, r18.xyxx
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r11.w, r19.xyzx, t9.xxxx, s13, r0.y
        mad r11.y, r11.w, l(0.125000), r11.y
        iadd r11.z, r11.z, l(1)
      endloop 
    else 
      utof r18.z, r2.w
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r11.y, r18.xyzx, t9.xxxx, s13, r0.y
    endif 
    mul r0.y, r11.y, r11.y
    mul r0.y, r11.y, r0.y
  else 
    mov r0.y, l(1.000000)
  endif 
  mul r7.w, r0.y, r7.w
endif 
lt r0.y, l(0.000000), r0.z
lt r2.w, l(0.000000), r7.w
if_nz r2.w
  if_nz cb2[23].x
    add r15.xyz, v6.xyzx, cb1[24].xyzx
    mov r15.w, l(1.000000)
    dp4 r2.w, cb2[24].xyzw, r15.xyzw
    dp4 r10.w, cb2[25].xyzw, r15.xyzw
    frc r15.x, r2.w
    frc r15.y, r10.w
    iadd r2.w, l(-1), cb2[23].x
    utof r15.z, r2.w
    sample_l_indexable(texture2darray)(float,float,float,float) r11.yzw, r15.xyzx, t20.wxyz, s2, l(0.000000)
    add r11.yzw, r11.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
    mad r11.yzw, cb2[23].yyyy, r11.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
    mul r11.yzw, r11.yyzw, cb2[18].xxyz
  else 
    mov r11.yzw, cb2[18].xxyz
  endif 
  mul r11.yzw, r7.wwww, r11.yyzw
  add r2.w, r0.z, r9.w
  div r2.w, r0.z, r2.w
  mad r15.xyz, r11.yzwy, r2.wwww, r14.yzwy
  mad r18.xyz, -v6.xyzx, r9.zzzz, cb2[17].xyzx
  dp3 r2.w, r18.xyzx, r18.xyzx
  rsq r2.w, r2.w
  mul r18.xyz, r2.wwww, r18.xyzx
  dp3_sat r2.w, r2.xyzx, r18.xyzx
  dp3_sat r7.w, r18.xyzx, r10.xyzx
  mul r9.z, r2.w, r2.w
  mad r12.zw, r9.zzzz, cb0[15].xxxz, l(0.000000, 0.000000, 1.000000, 1.000000)
  mul r12.zw, r12.zzzw, r12.zzzw
  div r12.zw, cb0[15].yyyw, r12.zzzw
  mul r12.zw, r2.wwww, r12.zzzw
  mul r2.w, r7.w, l(4.000000)
  div r12.zw, r12.zzzw, r2.wwww
  mul r12.zw, r12.zzzw, cb0[16].xxxy
  mul r18.xyz, r11.yzwy, r12.zzzz
  mad r18.xyz, r18.xyzx, r0.zzzz, r17.xyzx
  mul r11.yzw, r11.yyzw, r12.wwww
  mad r11.yzw, r11.yyzw, r0.zzzz, r18.xxyz
else 
  mov r15.xyz, r14.yzwy
  mov r11.yzw, r17.xxyz
endif 
movc r14.yzw, r0.yyyy, r15.xxyz, r14.yyzw
movc r11.yzw, r0.yyyy, r11.yyzw, r17.xxyz
mov r15.x, -r12.x
mov r17.xy, l(0,0,0,0)
mov r18.w, l(0)
mov r19.xyz, v6.xyzx
mov r19.w, l(1.000000)
mov r20.w, l(1.000000)
mov r15.z, r12.x
mov r22.z, l(1.000000)
mov r23.w, l(1.000000)
mov r15.yw, r13.xxxx
mov r12.y, r15.w
mov r24.w, l(1.000000)
mov r13.y, r15.x
mov r13.z, r12.x
mov r25.x, r13.x
mov r25.y, r15.x
mov r25.z, r12.x
mov r26.xyz, r14.yzwy
mov r27.xyz, r11.yzwy
mov r0.y, cb2[58].y
mov r0.z, l(0)
loop 
  uge r2.w, r0.z, cb2[0].x
  breakc_nz r2.w
  ushr r17.z, r0.z, l(5)
  iadd r18.xyz, r16.xyzx, r17.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r2.w, r18.xyzw, t6.yzwx
  mov r18.xyz, r26.xyzx
  mov r28.xyz, r27.xyzx
  mov r7.w, r0.y
  mov r9.z, r2.w
  loop 
    breakc_z r9.z
    firstbit_lo r10.w, r9.z
    ishl r12.z, l(1), r10.w
    and r12.w, r9.z, r12.z
    if_nz r12.w
      xor r9.z, r9.z, r12.z
      iadd r10.w, r0.z, r10.w
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r29.xyzw, r10.w, l(0), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r30.xy, r10.w, l(16), t12.xyxx
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r10.w, l(28), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r10.w, l(44), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r10.w, l(60), t12.zwxy
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r10.w, l(76), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r10.w, l(92), t12.zwxy
      ubfe r12.z, l(3), l(24), r31.x
      switch r12.z
        case l(4)
        lt r12.z, l(0.000000), r35.x
        mov r36.x, r34.w
        mov r36.yz, r35.zzwz
        mad r37.xyz, -r36.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r29.xyzx
        add r38.xyz, r37.xyzx, -v6.xyzx
        dp3 r12.w, r36.xyzx, r38.xyzx
        div_sat r12.w, -r12.w, r35.x
        mad r36.xyz, r12.wwww, r36.xyzx, r37.xyzx
        movc r36.xyz, r12.zzzz, r36.xyzx, r29.xyzx
        add r36.xyz, r36.xyzx, -v6.xyzx
        dp3 r12.z, r36.xyzx, r36.xyzx
        rsq r12.w, r12.z
        mul r37.xyz, r12.wwww, r36.xyzx
        dp3 r13.w, r2.xyzx, r37.xyzx
        mov_sat r16.w, r13.w
        movc r16.w, cb0[29].z, |r13.w|, r16.w
        lt r17.z, l(0.000000), r16.w
        if_nz r17.z
          sqrt r17.z, r12.z
          mul r17.w, r32.y, r32.y
          div r12.z, r17.w, r12.z
          min r12.z, r12.z, l(1.000000)
          mad_sat r17.w, r17.z, r31.y, r31.z
          mad_sat r17.z, r17.z, r31.w, r32.x
          mul r21.x, r17.w, r17.w
          mad r17.w, r17.w, l(-2.000000), l(3.000000)
          mul r17.w, r17.w, r21.x
          mul r12.z, r12.z, r17.w
          mul r17.w, r17.z, r17.z
          mad r17.z, r17.z, l(-2.000000), l(3.000000)
          mul r17.z, r17.z, r17.w
          mul r12.z, r12.z, r17.z
          lt r17.z, l(0.000000), r12.z
          if_nz r17.z
            ubfe r17.zw, l(0, 0, 3, 4), l(0, 0, 27, 20), r31.xxxx
            ine r17.z, r17.z, l(1)
            if_nz r17.z
              mad r17.z, |r13.w|, l(-0.200000), l(0.400000)
              lt r21.x, r13.w, l(0.000000)
              and r21.x, r9.x, r21.x
              movc r17.z, r21.x, -r17.z, r17.z
              mad r37.xyz, r2.xyzx, r17.zzzz, v6.xyzx
              mov r33.z, r34.x
              add r37.xyz, -r33.xyzx, r37.xyzx
              max r17.z, |r37.z|, |r37.y|
              max r17.z, r17.z, |r37.x|
              div r17.z, r34.y, r17.z
              add r17.z, r34.z, r17.z
              dp3 r21.x, r37.xyzx, r37.xyzx
              rsq r21.x, r21.x
              max r17.z, r17.z, l(0.00006104)
              and r21.y, r31.x, l(0x0000ffff)
              utof r38.w, r21.y
              mov r21.y, l(0)
              mov r22.w, l(0)
              loop 
                ige r25.w, r22.w, l(8)
                breakc_nz r25.w
                dp2 r39.y, icb[r22.w + 0].yxyy, r15.xyxx
                dp2 r39.z, icb[r22.w + 0].yxyy, r15.yzyy
                mul r39.yz, r32.zzzz, r39.yyzy
                mul r39.x, r14.x, r39.y
                mul r39.w, r11.x, r39.y
                mad r38.xyz, r37.xyzx, r21.xxxx, r39.xzwx
                sample_c_lz_indexable(texturecubearray)(float,float,float,float) r25.w, r38.xyzw, t10.xxxx, s13, r17.z
                mad r21.y, r25.w, l(0.125000), r21.y
                iadd r22.w, r22.w, l(1)
              endloop 
            else 
              mov r21.y, l(1.000000)
            endif 
            mul r12.z, r12.z, r21.y
            if_nz r17.w
              iadd r17.z, r17.w, cb2[0].x
              iadd r17.z, r17.z, l(-1)
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.w, r17.z, l(52), t12.xxxx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r17.z, l(100), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r17.z, l(116), t12.xyzw
              mad r21.x, |r13.w|, l(-0.200000), l(0.400000)
              lt r13.w, r13.w, l(0.000000)
              and r13.w, r9.x, r13.w
              movc r13.w, r13.w, -r21.x, r21.x
              mad r20.xyz, r2.xyzx, r13.wwww, v6.xyzx
              dp4 r13.w, r37.xyzw, r20.xyzw
              dp4 r21.x, r38.xyzw, r20.xyzw
              lt r22.w, r21.x, r13.w
              if_z r22.w
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r17.z, l(68), t12.xyzw
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r17.z, l(84), t12.xyzw
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r17.z, l(132), t12.xyzw
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r17.z, l(148), t12.xyzw
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xy, r17.z, l(164), t12.xyxx
                dp4 r37.x, r37.xyzw, r20.xyzw
                dp4 r37.y, r38.xyzw, r20.xyzw
                div r20.xy, r37.xyxx, r21.xxxx
                mad r20.xy, r20.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                add r20.xy, r40.zwzz, r20.xyxx
                mul r20.xy, r40.xyxx, r20.xyxx
                div r37.xy, r17.wwww, r39.xzxx
                add r37.zw, -r37.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                ge r37.zw, r20.xxxy, r37.zzzw
                ge r37.xy, r37.xyxx, r20.xyxx
                or r37.xy, r37.xyxx, r37.zwzz
                or r20.z, r37.y, r37.x
                mov_sat r20.xy, r20.xyxx
                mad r37.xy, r20.xyxx, r39.xzxx, r39.ywyy
                mul r20.x, r21.x, r41.y
                mad r13.w, r41.x, r21.x, r13.w
                div r13.w, r13.w, r20.x
              else 
                mov r20.z, l(-1)
              endif 
              or r20.x, r22.w, r20.z
              if_z r20.x
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.z, r17.z, l(28), t12.xxxx
                max r13.w, r13.w, l(0.00006104)
                and r17.z, r17.z, l(0x0000ffff)
                if_nz r7.w
                  utof r20.z, r17.z
                  mov r21.x, l(0)
                  mov r22.w, l(0)
                  loop 
                    ige r25.w, r22.w, l(8)
                    breakc_nz r25.w
                    dp2 r38.x, icb[r22.w + 0].yxyy, r15.xwxx
                    dp2 r38.y, icb[r22.w + 0].xyxx, r12.xyxx
                    mad r20.xy, r38.xyxx, r17.wwww, r37.xyxx
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r20.x, r20.xyzx, t9.xxxx, s13, r13.w
                    mad r21.x, r20.x, l(0.125000), r21.x
                    iadd r22.w, r22.w, l(1)
                  endloop 
                else 
                  utof r37.z, r17.z
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.x, r37.xyzx, t9.xxxx, s13, r13.w
                endif 
                mul r13.w, r21.x, r21.x
                mul r13.w, r21.x, r13.w
              else 
                mov r13.w, l(1.000000)
              endif 
              mul r12.z, r12.z, r13.w
            endif 
            lt r13.w, l(0.000000), r12.z
            if_nz r13.w
              mov r30.z, r29.w
              mul r20.xyz, r30.zxyz, r12.zzzz
              add r12.z, r9.w, r16.w
              div r12.z, r16.w, r12.z
              mad r18.xyz, r20.xyzx, r12.zzzz, r18.xyzx
              mad r36.xyz, r36.xyzx, r12.wwww, r10.xyzx
              dp3 r12.z, r36.xyzx, r36.xyzx
              rsq r12.z, r12.z
              mul r36.xyz, r12.zzzz, r36.xyzx
              dp3_sat r12.z, r2.xyzx, r36.xyzx
              dp3_sat r12.w, r36.xyzx, r10.xyzx
              mul r13.w, r12.z, r12.z
              mad r17.zw, r13.wwww, cb0[15].xxxz, l(0.000000, 0.000000, 1.000000, 1.000000)
              mul r17.zw, r17.zzzw, r17.zzzw
              div r17.zw, cb0[15].yyyw, r17.zzzw
              mul r17.zw, r12.zzzz, r17.zzzw
              mul r12.z, r12.w, l(4.000000)
              div r12.zw, r17.zzzw, r12.zzzz
              mul r12.zw, r12.zzzw, cb0[16].xxxy
              mul r36.xyz, r12.zzzz, r20.xyzx
              mad r36.xyz, r36.xyzx, r16.wwww, r28.xyzx
              mul r20.xyz, r12.wwww, r20.xyzx
              mad r28.xyz, r20.xyzx, r16.wwww, r36.xyzx
            endif 
          endif 
        endif 
        break 
        case l(2)
        mov r20.x, r32.w
        mov r20.yz, r33.zzwz
        add r20.xyz, r20.xyzx, -v6.xyzx
        dp3 r12.z, r20.xyzx, r20.xyzx
        rsq r12.z, r12.z
        mul r36.xyz, r12.zzzz, r20.xyzx
        dp3 r12.w, r2.xyzx, r36.xyzx
        mov_sat r13.w, r12.w
        movc r13.w, cb0[29].z, |r12.w|, r13.w
        lt r16.w, l(0.000000), r13.w
        if_nz r16.w
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r10.w, l(108), t12.zwxy
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r10.w, l(124), t12.xyzw
          mov r38.xy, r36.xyxx
          mov r38.zw, r37.xxxy
          dp4 r16.w, r38.xyzw, r19.xyzw
          lt r17.z, r16.w, l(1.000000)
          if_nz r17.z
            mov r39.xyz, l(1.000000,1.000000,1.000000,0)
            mov r17.z, l(0)
          else 
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r10.w, l(172), t12.yzwx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r10.w, l(188), t12.wxyz
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r10.w, l(204), t12.xyzw
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.w, r10.w, l(236), t12.xxxx
            add r29.xyz, r29.xyzx, -v6.xyzx
            mul r22.w, r32.y, r32.y
            dp3 r25.w, r29.xyzx, r29.xyzx
            div r22.w, r22.w, r25.w
            min r22.w, r22.w, l(1.000000)
            mad_sat r25.w, r16.w, r31.y, r31.z
            mad_sat r26.w, r16.w, r31.w, r32.x
            mul r27.w, r25.w, r25.w
            mad r25.w, r25.w, l(-2.000000), l(3.000000)
            mul r25.w, r25.w, r27.w
            mul r22.w, r22.w, r25.w
            mul r25.w, r26.w, r26.w
            mad r26.w, r26.w, l(-2.000000), l(3.000000)
            mul r25.w, r25.w, r26.w
            mul r22.w, r22.w, r25.w
            mov r33.zw, r34.xxxy
            dp4 r29.x, r33.xyzw, r19.xyzw
            mov r43.xy, r34.zwzz
            mov r43.zw, r35.zzzw
            dp4 r29.y, r43.xyzw, r19.xyzw
            div r22.xy, r29.xyxx, r16.wwww
            lt r16.w, r40.w, l(0.00048828)
            if_nz r16.w
              mov r41.y, r42.x
              mad_sat r29.xy, |r22.xyxx|, r41.zwzz, r41.xyxx
              mul r31.yz, r29.xxyx, r29.xxyx
              mad r29.xy, r29.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
              mul r29.xy, r29.xyxx, r31.yzyy
              mul r16.w, r29.y, r29.x
            else 
              mov r40.w, r41.y
              mul_sat r40.xyzw, |r22.yyxx|, r40.xyzw
              log r40.xyzw, r40.xyzw
              mul r40.xyzw, r40.xyzw, r41.xxxx
              exp r40.xyzw, r40.xyzw
              add r29.xy, r40.zwzz, r40.xyxx
              log r29.xy, r29.xyxx
              mul r29.xy, r29.xyxx, r42.xxxx
              exp r29.xy, r29.xyxx
              mul r25.w, r29.x, r41.z
              mad r26.w, r41.w, r29.y, l(-1.000000)
              mad r25.w, r41.w, r29.y, -r25.w
              div_sat r25.w, r26.w, r25.w
              mul r26.w, r25.w, r25.w
              mad r25.w, r25.w, l(-2.000000), l(3.000000)
              mul r16.w, r25.w, r26.w
            endif 
            mul r17.z, r16.w, r22.w
            and r16.w, r17.w, l(255)
            if_nz r16.w
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r29.xyz, r10.w, l(220), t12.xyzx
              dp3 r17.w, r42.yzwy, r22.xyzx
              dp3 r22.x, r29.xyzx, r22.xyzx
              frc r29.x, r17.w
              frc r29.y, r22.x
              iadd r16.w, r16.w, l(-1)
              utof r29.z, r16.w
              sample_l_indexable(texture2darray)(float,float,float,float) r39.xyz, r29.xyzx, t20.xyzw, s2, l(0.000000)
            else 
              mov r39.xyz, l(1.000000,1.000000,1.000000,0)
            endif 
          endif 
          mov r30.w, r29.w
          mul r22.xyw, r30.wxwy, r39.xyxz
          lt r16.w, l(0.000000), r17.z
          if_nz r16.w
            ubfe r29.xy, l(3, 4, 0, 0), l(27, 20, 0, 0), r31.xxxx
            ine r16.w, r29.x, l(1)
            if_nz r16.w
              mad r16.w, |r12.w|, l(-0.200000), l(0.400000)
              lt r17.w, r12.w, l(0.000000)
              and r17.w, r9.x, r17.w
              movc r16.w, r17.w, -r16.w, r16.w
              mad r23.xyz, r2.xyzx, r16.wwww, v6.xyzx
              mov r36.xy, r35.xyxx
              dp4 r16.w, r36.xyzw, r23.xyzw
              dp4 r17.w, r38.xyzw, r23.xyzw
              ge r25.w, r17.w, r16.w
              if_nz r25.w
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xy, r10.w, l(140), t12.xyxx
                mov r33.zw, r34.xxxy
                dp4 r30.x, r33.xyzw, r23.xyzw
                mov r35.xy, r34.zwzz
                dp4 r30.y, r35.xyzw, r23.xyzw
                div r23.xy, r30.xyxx, r17.wwww
                mad_sat r23.xy, r23.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                mad r23.xy, r23.xyxx, r37.zxzz, r37.wyww
                div r10.w, r16.w, r17.w
                max r10.w, r10.w, l(0.00006104)
                and r16.w, r31.x, l(0x0000ffff)
                if_nz r7.w
                  utof r30.z, r16.w
                  mov r17.w, l(0)
                  mov r25.w, l(0)
                  loop 
                    ige r26.w, r25.w, l(8)
                    breakc_nz r26.w
                    dp2 r31.x, icb[r25.w + 0].xyxx, r13.xyxx
                    dp2 r31.y, icb[r25.w + 0].yxyy, r13.xzxx
                    mad r30.xy, r31.xyxx, r32.zzzz, r23.xyxx
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r26.w, r30.xyzx, t9.xxxx, s13, r10.w
                    mad r17.w, r26.w, l(0.125000), r17.w
                    iadd r25.w, r25.w, l(1)
                  endloop 
                else 
                  utof r23.z, r16.w
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r17.w, r23.xyzx, t9.xxxx, s13, r10.w
                endif 
                mul r10.w, r17.w, r17.w
                mul r10.w, r17.w, r10.w
              else 
                mov r10.w, l(1.000000)
              endif 
            else 
              mov r10.w, l(1.000000)
            endif 
            mul r10.w, r10.w, r17.z
            if_nz r29.y
              iadd r16.w, r29.y, cb2[0].x
              iadd r16.w, r16.w, l(-1)
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.z, r16.w, l(52), t12.xxxx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r29.xyzw, r16.w, l(68), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r30.xyzw, r16.w, l(84), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r16.w, l(100), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r16.w, l(116), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r16.w, l(132), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r16.w, l(148), t12.xyzw
              mad r23.x, |r12.w|, l(-0.200000), l(0.400000)
              lt r12.w, r12.w, l(0.000000)
              and r12.w, r9.x, r12.w
              movc r12.w, r12.w, -r23.x, r23.x
              mad r24.xyz, r2.xyzx, r12.wwww, v6.xyzx
              dp4 r23.x, r29.xyzw, r24.xyzw
              dp4 r23.y, r30.xyzw, r24.xyzw
              dp4 r12.w, r31.xyzw, r24.xyzw
              dp4 r23.z, r32.xyzw, r24.xyzw
              lt r24.x, r23.z, r12.w
              div r23.xy, r23.xyxx, r23.zzzz
              mad r23.xy, r23.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
              add r23.xy, r34.zwzz, r23.xyxx
              mul r23.xy, r34.xyxx, r23.xyxx
              div r24.yz, r17.zzzz, r33.xxzx
              add r29.xy, -r24.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
              ge r29.xy, r23.xyxx, r29.xyxx
              ge r24.yz, r24.yyzy, r23.xxyx
              or r24.yz, r24.yyzy, r29.xxyx
              or r24.y, r24.z, r24.y
              or r24.x, r24.x, r24.y
              if_z r24.x
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r24.x, r16.w, l(28), t12.xxxx
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r24.yz, r16.w, l(164), t12.xxyx
                mov_sat r23.xy, r23.xyxx
                mad r29.xy, r23.xyxx, r33.xzxx, r33.ywyy
                mul r16.w, r23.z, r24.z
                mad r12.w, r24.y, r23.z, r12.w
                div r12.w, r12.w, r16.w
                max r12.w, r12.w, l(0.00006104)
                and r16.w, r24.x, l(0x0000ffff)
                if_nz r7.w
                  utof r23.z, r16.w
                  mov r24.xy, l(0,0,0,0)
                  loop 
                    ige r24.z, r24.y, l(8)
                    breakc_nz r24.z
                    dp2 r30.x, icb[r24.y + 0].xyxx, r25.xyxx
                    dp2 r30.y, icb[r24.y + 0].yxyy, r25.xzxx
                    mad r23.xy, r30.xyxx, r17.zzzz, r29.xyxx
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.x, r23.xyzx, t9.xxxx, s13, r12.w
                    mad r24.x, r23.x, l(0.125000), r24.x
                    iadd r24.y, r24.y, l(1)
                  endloop 
                else 
                  utof r29.z, r16.w
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.x, r29.xyzx, t9.xxxx, s13, r12.w
                endif 
                mul r12.w, r24.x, r24.x
                mul r12.w, r24.x, r12.w
              else 
                mov r12.w, l(1.000000)
              endif 
              mul r10.w, r10.w, r12.w
            endif 
            lt r12.w, l(0.000000), r10.w
            if_nz r12.w
              mul r22.xyw, r22.xyxw, r10.wwww
              add r10.w, r9.w, r13.w
              div r10.w, r13.w, r10.w
              mad r18.xyz, r22.xywx, r10.wwww, r18.xyzx
              mad r20.xyz, r20.xyzx, r12.zzzz, r10.xyzx
              dp3 r10.w, r20.xyzx, r20.xyzx
              rsq r10.w, r10.w
              mul r20.xyz, r10.wwww, r20.xyzx
              dp3_sat r10.w, r2.xyzx, r20.xyzx
              dp3_sat r12.z, r20.xyzx, r10.xyzx
              mul r12.w, r10.w, r10.w
              mad r20.xy, r12.wwww, cb0[15].xzxx, l(1.000000, 1.000000, 0.000000, 0.000000)
              mul r20.xy, r20.xyxx, r20.xyxx
              div r20.xy, cb0[15].ywyy, r20.xyxx
              mul r20.xy, r10.wwww, r20.xyxx
              mul r10.w, r12.z, l(4.000000)
              div r12.zw, r20.xxxy, r10.wwww
              mul r12.zw, r12.zzzw, cb0[16].xxxy
              mul r20.xyz, r12.zzzz, r22.xywx
              mad r20.xyz, r20.xyzx, r13.wwww, r28.xyzx
              mul r22.xyw, r12.wwww, r22.xyxw
              mad r28.xyz, r22.xywx, r13.wwww, r20.xyzx
            endif 
          endif 
        endif 
        break 
        default 
        break 
      endswitch 
    endif 
  endloop 
  mov r26.xyz, r18.xyzx
  mov r27.xyz, r28.xyzx
  iadd r0.z, r0.z, l(32)
endloop 
mul r0.y, cb0[12].y, cb1[69].w
mad r2.zw, r4.zzzw, l(0.000000, 0.000000, -1.000000, 1.000000), l(0.000000, 0.000000, 1.000000, -1.000000)
mad r2.zw, r2.zzzw, r0.yyyy, r1.xxxy
sample_l_indexable(texture2d)(float,float,float,float) r10.xyzw, r2.zwzz, t25.xyzw, s7, r6.x
mad r2.zw, r5.xxxy, l(0.000000, 0.000000, -1.000000, 1.000000), l(0.000000, 0.000000, 1.000000, -1.000000)
mad r2.zw, r2.zzzw, r0.yyyy, r1.xxxy
sample_l_indexable(texture2d)(float,float,float,float) r9.xzw, r2.zwzz, t25.xwyz, s7, r6.x
add r9.xzw, -r10.xxyz, r9.xxzw
mad r9.xzw, r4.xxxx, r9.xxzw, r10.xxyz
mad r2.zw, r5.zzzw, l(0.000000, 0.000000, -1.000000, 1.000000), l(0.000000, 0.000000, 1.000000, -1.000000)
mad r2.zw, r2.zzzw, r0.yyyy, r1.xxxy
sample_l_indexable(texture2d)(float,float,float,float) r5.xyz, r2.zwzz, t25.xyzw, s7, r6.x
mad r1.zw, r1.zzzw, l(0.000000, 0.000000, -1.000000, 1.000000), l(0.000000, 0.000000, 1.000000, -1.000000)
mad r0.yz, r1.zzwz, r0.yyyy, r1.xxyx
sample_l_indexable(texture2d)(float,float,float,float) r1.xyz, r0.yzyy, t25.xyzw, s7, r6.x
add r1.xyz, -r5.xyzx, r1.xyzx
mad r1.xyz, r4.xxxx, r1.xyzx, r5.xyzx
add r1.xyz, -r9.xzwx, r1.xyzx
mad r10.xyz, r4.yyyy, r1.xyzx, r9.xzwx
mul r1.xyzw, r10.xyzw, cb0[18].xyzw
add r0.y, r7.y, l(1.000000)
log r0.y, r0.y
mul r0.y, r0.y, cb0[16].w
min r0.y, r0.y, l(500.000000)
mad r0.yz, r0.yyyy, r2.xxyx, v0.xxyx
add r2.xy, cb1[44].xyxx, l(-1.000000, -1.000000, 0.000000, 0.000000)
max r0.yz, r0.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
min r0.yz, r2.xxyx, r0.yyzy
ftoi r2.xy, r0.yzyy
mov r2.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r2.x, r2.xyzw, t29.xyzw
ge r2.y, r2.x, l(0.984375)
mul r2.z, r2.x, l(1.01587307)
mad r2.x, r2.x, l(64.000000), l(-63.000000)
movc r2.x, r2.y, r2.x, r2.z
max r2.x, r2.x, l(0.00000001)
rcp r2.x, r2.x
lt r0.x, r0.x, r2.x
mul r0.yz, r0.yyzy, cb1[44].zzwz
sample_indexable(texture2d)(float,float,float,float) r2.xyz, r0.yzyy, t30.xyzw, s9
if_z r0.x
  ftoi r4.xy, v0.xyxx
  mov r4.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r2.xyz, r4.xyzw, t30.xyzw
endif 
mul r0.xyz, r2.xyzx, cb1[85].xxxx
mad r2.w, r7.y, l(2.000000), l(1.000000)
log r2.w, r2.w
mul r21.z, r2.w, l(0.08333334)
sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r21.zwzz, t37.xyzw, s8
mul r4.xyz, r0.xyzx, r4.xyzx
mul r1.w, r1.w, r4.w
mad r1.xyz, r1.xyzx, r26.xyzx, -r4.xyzx
mad r1.xyz, r1.wwww, r1.xyzx, r4.xyzx
mad r1.xyz, -r2.xyzx, cb1[85].xxxx, r1.xyzx
mad r0.xyz, r7.zzzz, r1.xyzx, r0.xyzx
mad r1.xyz, r3.xzwx, r26.xyzx, -r0.xyzx
mad r0.xyz, r8.wwww, r1.xyzx, r0.xyzx
mad r1.xyz, r27.xyzx, r0.wwww, r8.xyzx
add r0.w, -r7.x, l(1.000000)
mul r1.w, r0.w, r0.w
mul r1.w, r1.w, r1.w
mul r0.w, r0.w, r1.w
mad r0.w, r0.w, l(0.980000), l(0.020000)
add r1.xyz, -r0.xyzx, r1.xyzx
mad r0.xyz, r0.wwww, r1.xyzx, r0.xyzx
mad r1.xyz, cb0[22].yzwy, r26.xyzx, -r0.xyzx
mad r1.xyz, r9.yyyy, r1.xyzx, r0.xyzx
movc r0.xyz, cb0[28].yyyy, r1.xyzx, r0.xyzx
lt r0.w, l(0.000000), cb2[9].z
if_nz r0.w
  sqrt r0.w, r3.y
  lt r1.x, l(0.000000), cb2[13].w
  if_nz r1.x
    mad r1.xy, r0.wwww, cb2[15].xyxx, cb2[14].zwzz
    mul r1.xy, r1.xyxx, cb2[16].xyxx
    lt r1.z, l(0.010000), |v6.z|
    mul r2.xy, v6.zzzz, cb2[15].zwzz
    mul r2.zw, r2.xxxy, l(0.000000, 0.000000, -1.442695, -1.442695)
    exp r2.zw, r2.zzzw
    add r2.zw, -r2.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    div r2.xy, r2.zwzz, r2.xyxx
    mul r2.xy, r1.xyxx, r2.xyxx
    movc r1.xy, r1.zzzz, r2.xyxx, r1.xyxx
    mul r1.xzw, r1.xxxx, cb2[12].xxyz
    exp r1.xzw, r1.xxzw
    mul r2.xyz, r1.yyyy, cb2[12].xyzx
    exp r2.xyz, r2.xyzx
    add r2.xyz, -r1.xzwx, r2.xyzx
    mad r1.xyz, cb2[13].wwww, r2.xyzx, r1.xzwx
  else 
    mad r1.w, r0.w, cb2[15].x, cb2[14].z
    mul r1.w, r1.w, cb2[16].x
    lt r2.x, l(0.010000), |v6.z|
    mul r2.y, v6.z, cb2[15].z
    mul r2.z, r2.y, l(-1.442695)
    exp r2.z, r2.z
    add r2.z, -r2.z, l(1.000000)
    div r2.y, r2.z, r2.y
    mul r2.y, r1.w, r2.y
    movc r1.w, r2.x, r2.y, r1.w
    mul r2.xyz, r1.wwww, cb2[12].xyzx
    exp r1.xyz, r2.xyzx
  endif 
  mad r1.xyz, r1.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r1.xyz, r1.xyzx, -cb2[9].zzzz
  dp3 r1.w, cb2[7].yzwy, -r6.yzwy
  mad r2.x, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r2.y, cb2[8].w, -r1.w, l(1.000000)
  mul r2.y, r2.y, r2.y
  mul r2.y, r2.y, l(12.566371)
  div r2.x, r2.x, r2.y
  add r0.w, r0.w, -cb2[10].w
  mul_sat r0.w, r0.w, cb2[11].w
  mul r0.w, r0.w, r2.x
  mov_sat r1.w, r1.w
  mad r1.w, r1.w, r1.w, l(1.000000)
  mad r1.w, r1.w, l(0.05968310), l(-1.000000)
  mad r1.w, cb2[8].z, r1.w, l(1.000000)
  mul r2.xyz, r0.wwww, cb2[11].xyzx
  mad r2.xyz, r1.wwww, cb2[10].xyzx, r2.xyzx
  mul r2.xyz, r2.xyzx, cb2[9].wwww
  add r3.xzw, -r1.xxyz, l(1.000000, 0.000000, 1.000000, 1.000000)
  mul r2.xyz, r2.xyzx, r3.xzwx
  mad r1.xyz, r0.xyzx, r1.xyzx, r2.xyzx
else 
  mul r0.w, v6.z, cb2[6].x
  mad r1.w, cb2[6].x, v6.z, cb2[5].x
  lt r2.x, |r0.w|, l(0.000100)
  min r2.y, r1.w, l(64.000000)
  mul r2.y, r2.y, l(1.442695)
  exp r2.y, r2.y
  mov_sat r2.z, cb2[6].z
  lt r2.w, r1.w, l(0.000000)
  add r1.w, r1.w, l(1.000000)
  movc r1.w, r2.w, r2.y, r1.w
  add r1.w, r1.w, -cb2[6].z
  movc r0.w, r2.x, l(1.000000), r0.w
  div r0.w, r1.w, r0.w
  movc r0.w, r2.x, r2.z, r0.w
  mul r0.w, r0.w, cb2[5].z
  sqrt r1.w, r3.y
  mad r0.w, r0.w, r1.w, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  dp3 r1.w, cb2[7].yzwy, r6.yzwy
  mad_sat r1.w, cb2[8].y, r1.w, cb2[8].x
  add r2.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r2.xyzw, r1.wwww, r2.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r2.w
  add r2.xyz, -r0.xyzx, r2.xyzx
  mad r1.xyz, r0.wwww, r2.xyzx, r0.xyzx
endif 
mul r0.xyz, r1.xyzx, cb1[85].yyyy
ge r1.xyz, r0.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.xyz, r0.xyzx, r1.xyzx
min o0.xyz, r0.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
mov o0.w, l(1.000000)
ret 
// Approximately 2362 instruction slots used
