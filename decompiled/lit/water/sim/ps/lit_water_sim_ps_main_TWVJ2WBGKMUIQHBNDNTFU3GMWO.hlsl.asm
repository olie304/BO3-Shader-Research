//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:39:46 2021
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float3 specColorTint;              // Offset:  160 Size:    12 [unused]
//   float baseNormalHeight;            // Offset:  172 Size:     4 [unused]
//   float2 glossRange;                 // Offset:  176 Size:     8 [unused]
//   float2 normalMapScale;             // Offset:  184 Size:     8
//   float4 flowParams;                 // Offset:  192 Size:    16
//   float4 noiseParams;                // Offset:  208 Size:    16
//   bool useOrientedNormalMap;         // Offset:  224 Size:     4
//   float4 specularLobeRoughnessControl;// Offset:  240 Size:    16
//   float4 lobeWeightingThicknessRefraction;// Offset:  256 Size:    16
//   float3 normalAdjustAndGloss;       // Offset:  272 Size:    12
//   float4 decalTint;                  // Offset:  288 Size:    16 [unused]
//   float2 opacityScale;               // Offset:  304 Size:     8
//   float invZFeatherDepth;            // Offset:  312 Size:     4 [unused]
//   float2 normalsFlowScaleMin;        // Offset:  320 Size:     8
//   float4 ssrParams;                  // Offset:  336 Size:    16
//   float translucentShadowOpacity;    // Offset:  352 Size:     4 [unused]
//   float3 foamColor;                  // Offset:  356 Size:    12
//   float4 foamMaskScroll01;           // Offset:  368 Size:    16 [unused]
//   float4 foamMaskScroll23;           // Offset:  384 Size:    16 [unused]
//   float4 foamMaskScale01;            // Offset:  400 Size:    16 [unused]
//   float4 foamMaskScale23;            // Offset:  416 Size:    16 [unused]
//   float foamScale;                   // Offset:  432 Size:     4 [unused]
//   float2 foamSpacing;                // Offset:  436 Size:     8
//   float foamColorScale;              // Offset:  444 Size:     4
//   float foamZFeather;                // Offset:  448 Size:     4
//   bool useFoam;                      // Offset:  452 Size:     4
//   bool useSSR;                       // Offset:  456 Size:     4
//   bool useLoopedSSR;                 // Offset:  460 Size:     4
//   bool useSpecularZFeather;          // Offset:  464 Size:     4 [unused]
//   bool scaleNormalsWithFlow;         // Offset:  468 Size:     4
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4 [unused]
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4
//   uint numDynamicDecals;             // Offset:  924 Size:     4
//   uint numOverrideProbes;            // Offset:  928 Size:     4 [unused]
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for modelInstanceBuffer
// {
//
//   struct ModelInstanceData
//   {
//       
//       uint boneArrayIndex;           // Offset:    0
//       uint shaderConstantSet;        // Offset:    4
//       uint flagsAndPrevFrameIndex;   // Offset:    8
//       uint worldMatrix;              // Offset:   12
//       uint siegeAnimStateOffset;     // Offset:   16
//       uint prevFrameSiegeAnimStateOffset;// Offset:   20
//
//   } $Element;                        // Offset:    0 Size:    24
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for forwardDecalConstants
// {
//
//   struct CoreDecalConstantsPack
//   {
//       
//       uint4 data[8];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   128
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// colorSampler                      sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// normalSampler                     sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// flowSampler                       sampler      NA          NA             s5      1 
// noiseSampler                      sampler      NA          NA             s6      1 
// foamSampler                       sampler      NA          NA             s7      1 
// bilinearClamp                     sampler      NA          NA             s8      1 
// pointClamp                        sampler      NA          NA             s9      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// colorMap                          texture  float4          2d             t0      1 
// modelInstanceBuffer               texture  struct         r/o             t4      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// normalMap                         texture  float4          2d            t21      1 
// flowMap                           texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// noiseMap                          texture  float4          2d            t24      1 
// foamBase                          texture  float4          2d            t25      1 
// ifloatZSceneDownsampled           texture  float4          2d            t26      1 
// ifloatZScene                      texture  float4          2d            t29      1 
// iResolveScene                     texture  float4          2d            t30      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// visibleDecals                     texture    uint     2darray            t35      1 
// forwardDecalConstants             texture  struct         r/o            t36      1 
// rColorRamp                        texture  float4          2d            t37      1 
// materialTexBC7                    texture  float4     2darray            t42      1 
// materialTexBC3                    texture  float4     2darray            t43      1 
// materialTexMask                   texture  float4     2darray            t45      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    1   x           1     NONE   float       
// TEXCOORD                 0    yz         1     NONE   float    yz 
// TEXCOORD                 4   x           2     NONE    uint   x   
// TEXCOORD                 1   xyz         3     NONE   float   xyz 
// TEXCOORD                 2   xyz         4     NONE   float   xyz 
// TEXCOORD                 3   xyz         5     NONE   float   xyz 
// OFFPOSITION              0   xyz         6     NONE   float   xyz 
// TEXCOORD                 7   xyzw        7     NONE   float   xyzw
// TEXCOORD                 8   xyzw        8     NONE   float   xyzw
// SV_IsFrontFace           0   x           9    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[30], immediateIndexed
dcl_constantbuffer CB1[86], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_sampler s9, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_structured t4, 24
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2d (float,float,float,float) t26
dcl_resource_texture2d (float,float,float,float) t29
dcl_resource_texture2d (float,float,float,float) t30
dcl_resource_texture2darray (float,float,float,float) t31
dcl_resource_texture2darray (uint,uint,uint,uint) t35
dcl_resource_structured t36, 128
dcl_resource_texture2d (float,float,float,float) t37
dcl_resource_texture2darray (float,float,float,float) t42
dcl_resource_texture2darray (float,float,float,float) t43
dcl_resource_texture2darray (float,float,float,float) t45
dcl_input_ps_siv linear noperspective v0.xyzw, position
dcl_input_ps linear v1.yz
dcl_input_ps constant v2.x
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyzw
dcl_input_ps linear v8.xyzw
dcl_input_ps_sgv constant v9.x, is_front_face
dcl_output o0.xyzw
dcl_temps 23
ge r0.x, v0.z, l(0.984375)
mul r0.y, v0.z, l(1.01587307)
mad r0.z, v0.z, l(64.000000), l(-63.000000)
movc r0.x, r0.x, r0.z, r0.y
max r0.x, r0.x, l(0.00000001)
rcp r0.x, r0.x
ftou r0.yz, v0.xxyx
deriv_rtx_coarse r1.xyz, v6.xyzx
deriv_rty_coarse r2.xyz, v6.xyzx
iadd r0.w, cb2[0].y, cb2[0].x
ld_structured_indexable(structured_buffer, stride=24)(mixed,mixed,mixed,mixed) r1.w, v2.x, l(8), t4.xxxx
and r3.xy, r1.wwww, l(0x10000000, 0x20000000, 0, 0)
if_nz r3.x
  add r4.xyz, v6.xyzx, cb1[24].xyzx
  mul r1.w, r0.x, l(0.00781250)
  min r1.w, r1.w, l(15.000000)
  ftou r1.w, r1.w
  ushr r5.xy, r0.yzyy, l(6, 6, 0, 0)
  ishl r5.z, r1.w, l(4)
  and r1.w, cb2[57].z, l(-32)
  iadd r2.w, -r1.w, cb2[57].z
  mov r6.xy, l(0,0,0,0)
  mov r7.w, l(0)
  mov r4.w, l(1.000000)
  mov r8.xyzw, l(0,0,0,0)
  mov r3.xzw, l(0,0,0,0)
  mov r5.w, l(0)
  loop 
    uge r6.w, r5.w, cb2[57].z
    breakc_nz r6.w
    ushr r6.z, r5.w, l(5)
    iadd r7.xyz, r5.xyzx, r6.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r6.z, r7.xyzw, t35.yzxw
    ieq r6.w, r1.w, r5.w
    ubfe r7.x, r2.w, l(0), r6.z
    movc r6.z, r6.w, r7.x, r6.z
    iadd r6.w, r0.w, r5.w
    mov r9.xyzw, r8.xyzw
    mov r7.xyz, r3.xzwx
    mov r10.x, r6.z
    loop 
      breakc_z r10.x
      firstbit_lo r10.y, r10.x
      ishl r10.z, l(1), r10.y
      and r10.w, r10.z, r10.x
      if_nz r10.w
        xor r10.x, r10.z, r10.x
        iadd r10.z, r6.w, r10.y
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r11.xyzw, r10.z, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r12.xy, r10.z, l(16), t11.xyxx
        add r11.xyz, r11.xyzx, -v6.xyzx
        mov r12.z, r11.w
        lt r11.xyz, |r11.xyzx|, r12.zxyz
        and r10.z, r11.y, r11.x
        and r10.z, r11.z, r10.z
        if_nz r10.z
          iadd r10.y, r5.w, r10.y
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r11.xyz, r10.y, l(0), t36.xyzx
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r12.xyz, r10.y, l(16), t36.xyzx
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r13.xyz, r10.y, l(32), t36.xyzx
          mov r14.x, r11.x
          mov r14.y, r12.x
          mov r14.z, r13.x
          dp3 r10.z, r14.xyzx, r14.xyzx
          rsq r10.z, r10.z
          mul r15.xyz, r10.zzzz, r14.xyzx
          dp3 r10.z, r15.xyzx, v3.xyzx
          ge r10.z, r10.z, l(0.500000)
          if_nz r10.z
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r15.xyw, r10.y, l(48), t36.xyxz
            mov r14.w, r15.x
            dp4 r14.x, r4.xyzw, r14.xyzw
            mov r16.x, r11.y
            mov r16.y, r12.y
            mov r16.z, r13.y
            mov r16.w, r15.y
            dp4 r14.y, r4.xyzw, r16.xyzw
            mov r15.x, r11.z
            mov r15.y, r12.z
            mov r15.z, r13.z
            dp4 r14.z, r4.xyzw, r15.xyzw
            lt r11.xyz, |r14.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
            and r10.z, r11.y, r11.x
            and r10.z, r11.z, r10.z
            if_nz r10.z
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r11.xyzw, r10.y, l(64), t36.xyzw
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r12.xyzw, r10.y, l(80), t36.xyzw
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r10.z, r10.y, l(108), t36.xxxx
              dp3 r13.x, r1.xyzx, r16.xyzx
              dp3 r13.y, r1.xyzx, r15.xyzx
              dp3 r16.x, r2.xyzx, r16.xyzx
              dp3 r16.y, r2.xyzx, r15.xyzx
              mad r13.zw, r14.yyyz, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
              mul r14.xyz, r13.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
              mul r15.xyz, r16.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
              and r12.yz, r12.yyzy, l(0, 0x0000ffff, 0x0000ffff, 0)
              if_nz r12.y
                ubfe r10.w, l(4), l(24), r12.w
                ishl r10.w, l(1), r10.w
                ushr r13.x, r12.w, l(28)
                ishl r13.x, l(1), r13.x
                ieq r13.y, r12.y, l(4)
                if_nz r13.y
                  and r13.y, r12.w, l(4095)
                  ubfe r14.w, l(12), l(12), r12.w
                  and r15.w, r10.z, l(1023)
                  utof r16.xz, r10.wwww
                  utof r16.y, r13.x
                  mad r17.xy, r13.zwzz, r16.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r17.zw, r16.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r17.xy, r17.zwzz, r17.xyxx
                  utof r18.x, r13.y
                  utof r18.y, r14.w
                  add r17.xy, r17.xyxx, r18.xyxx
                  mul r17.xy, r17.xyxx, cb1[83].xyxx
                  utof r17.z, r15.w
                  mul r18.xyz, r14.zyzz, cb1[83].xyxx
                  mul r18.xyz, r16.xyzx, r18.xyzx
                  mul r19.xyz, r15.zyzz, cb1[83].xyxx
                  mul r16.xyz, r16.xyzx, r19.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r16.xyzw, r17.xyzx, t42.xyzw, s4, r18.xyzx, r16.xyzx
                else 
                  ieq r12.y, r12.y, l(1)
                  if_nz r12.y
                    and r12.y, r12.w, l(4095)
                    ubfe r12.w, l(12), l(12), r12.w
                    and r13.y, r10.z, l(1023)
                    utof r17.xz, r10.wwww
                    utof r17.y, r13.x
                    mad r18.xy, r13.zwzz, r17.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r18.zw, r17.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                    min r18.xy, r18.zwzz, r18.xyxx
                    utof r19.xy, r12.ywyy
                    add r12.yw, r18.xxxy, r19.xxxy
                    mul r18.xy, r12.ywyy, cb1[83].zwzz
                    utof r18.z, r13.y
                    mul r19.xyz, r14.zyzz, cb1[83].zwzz
                    mul r19.xyz, r17.xyzx, r19.xyzx
                    mul r20.xyz, r15.zyzz, cb1[83].zwzz
                    mul r17.xyz, r17.xyzx, r20.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r16.xyzw, r18.xyzx, t43.xyzw, s4, r19.xyzx, r17.xyzx
                  else 
                    mov r16.xyzw, l(1.000000,1.000000,1.000000,1.000000)
                  endif 
                endif 
                mul r11.xyz, r11.xyzx, r16.xyzx
                mul r10.w, r11.w, r16.w
              else 
                mov r11.xyz, l(0,0,0,0)
                mov r10.w, l(0)
              endif 
              ne r12.y, r12.x, l(1.000000)
              add r11.w, r11.w, r10.w
              mad_sat r11.w, r11.w, r12.x, -r12.x
              movc r10.w, r12.y, r11.w, r10.w
              if_nz r12.z
                ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r10.y, r10.y, l(100), t36.xxxx
                ubfe r11.w, l(4), l(24), r10.y
                ishl r11.w, l(1), r11.w
                ushr r12.x, r10.y, l(28)
                ishl r12.x, l(1), r12.x
                ieq r12.y, r12.z, l(2)
                if_nz r12.y
                  and r12.y, r10.y, l(4095)
                  ubfe r12.w, l(12), l(12), r10.y
                  ubfe r13.x, l(10), l(20), r10.z
                  utof r16.xz, r11.wwww
                  utof r16.y, r12.x
                  mad r17.xy, r13.zwzz, r16.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r17.zw, r16.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r17.xy, r17.zwzz, r17.xyxx
                  utof r18.xy, r12.ywyy
                  add r12.yw, r17.xxxy, r18.xxxy
                  mul r17.xy, r12.ywyy, cb1[84].xyxx
                  utof r17.z, r13.x
                  mul r18.xyz, r14.zyzz, cb1[84].xyxx
                  mul r18.xyz, r16.xyzx, r18.xyzx
                  mul r19.xyz, r15.zyzz, cb1[84].xyxx
                  mul r16.xyz, r16.xyzx, r19.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r12.y, r17.xyzx, t45.yxzw, s4, r18.xyzx, r16.xyzx
                else 
                  ieq r12.z, r12.z, l(4)
                  if_nz r12.z
                    and r12.z, r10.y, l(4095)
                    ubfe r12.w, l(12), l(12), r10.y
                    ubfe r13.x, l(10), l(20), r10.z
                    utof r16.xz, r11.wwww
                    utof r16.y, r12.x
                    mad r17.xy, r13.zwzz, r16.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r17.zw, r16.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                    min r17.xy, r17.zwzz, r17.xyxx
                    utof r18.xy, r12.zwzz
                    add r12.zw, r17.xxxy, r18.xxxy
                    mul r17.xy, r12.zwzz, cb1[83].xyxx
                    utof r17.z, r13.x
                    mul r18.xyz, r14.zyzz, cb1[83].xyxx
                    mul r18.xyz, r16.xyzx, r18.xyzx
                    mul r19.xyz, r15.zyzz, cb1[83].xyxx
                    mul r16.xyz, r16.xyzx, r19.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r12.y, r17.xyzx, t42.yxzw, s4, r18.xyzx, r16.xyzx
                  else 
                    and r12.z, r10.y, l(4095)
                    ubfe r10.y, l(12), l(12), r10.y
                    ubfe r10.z, l(10), l(20), r10.z
                    utof r16.xz, r11.wwww
                    utof r16.y, r12.x
                    mad r12.xw, r13.zzzw, r16.xxxy, l(0.500000, 0.000000, 0.000000, 0.500000)
                    add r13.xy, r16.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                    min r12.xw, r12.xxxw, r13.xxxy
                    utof r13.x, r12.z
                    utof r13.yz, r10.yyzy
                    add r12.xz, r12.xxwx, r13.xxyx
                    mul r13.xy, r12.xzxx, cb1[83].zwzz
                    mul r12.xzw, r14.xxyz, cb1[83].zzwz
                    mul r12.xzw, r16.xxyz, r12.xxzw
                    mul r14.xyz, r15.xyzx, cb1[83].zwzz
                    mul r14.xyz, r16.xyzx, r14.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r12.y, r13.xyzx, t43.yxzw, s4, r12.xzwx, r14.xyzx
                  endif 
                endif 
                mad r12.xzw, r12.yyyy, l(0.960000, 0.000000, 0.960000, 0.960000), l(0.040000, 0.000000, 0.040000, 0.040000)
                add_sat r10.y, -r12.y, l(1.000000)
                mul r11.xyz, r10.yyyy, r11.xyzx
              else 
                mov r12.xzw, l(0.040000,0,0.040000,0.040000)
              endif 
              add r10.y, -r10.w, l(1.000000)
              mul r13.xyz, r7.xyzx, r10.yyyy
              mad r7.xyz, r11.xyzx, r10.wwww, r13.xyzx
              mul r11.xyz, r9.xyzx, r10.yyyy
              mad r9.xyz, r12.xzwx, r10.wwww, r11.xyzx
              mad r9.w, r9.w, r10.y, r10.w
            endif 
          endif 
        endif 
      endif 
    endloop 
    mov r8.xyzw, r9.xyzw
    mov r3.xzw, r7.xxyz
    iadd r5.w, r5.w, l(32)
  endloop 
else 
  mov r3.xzw, l(0,0,0,0)
  mov r8.xyzw, l(0,0,0,0)
endif 
if_nz r3.y
  add r4.xyz, v6.xyzx, cb1[24].xyzx
  iadd r1.w, cb2[57].w, cb2[57].z
  mul r2.w, r0.x, l(0.00781250)
  min r2.w, r2.w, l(15.000000)
  ftou r2.w, r2.w
  ushr r5.xy, r0.yzyy, l(6, 6, 0, 0)
  ishl r5.z, r2.w, l(4)
  and r2.w, cb2[57].z, l(-32)
  iadd r3.y, -r2.w, cb2[57].z
  and r5.w, r1.w, l(-32)
  iadd r6.x, r1.w, -r5.w
  mov r7.xy, l(0,0,0,0)
  mov r9.w, l(0)
  mov r4.w, l(1.000000)
  mov r10.xyzw, r8.xyzw
  mov r6.yzw, r3.xxzw
  mov r7.w, r2.w
  loop 
    uge r11.x, r7.w, r1.w
    breakc_nz r11.x
    ushr r7.z, r7.w, l(5)
    iadd r9.xyz, r5.xyzx, r7.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r7.z, r9.xyzw, t35.yzxw
    ieq r9.x, r2.w, r7.w
    bfi r9.y, r3.y, l(0), l(0), r7.z
    movc r7.z, r9.x, r9.y, r7.z
    ieq r9.x, r5.w, r7.w
    ubfe r9.y, r6.x, l(0), r7.z
    movc r7.z, r9.x, r9.y, r7.z
    iadd r9.x, r0.w, r7.w
    mov r11.xyzw, r10.xyzw
    mov r12.xyz, r6.yzwy
    mov r9.y, r7.z
    loop 
      breakc_z r9.y
      firstbit_lo r9.z, r9.y
      ishl r12.w, l(1), r9.z
      and r13.x, r9.y, r12.w
      if_nz r13.x
        xor r9.y, r9.y, r12.w
        iadd r12.w, r9.z, r9.x
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r13.xyzw, r12.w, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r14.xy, r12.w, l(16), t11.xyxx
        add r13.xyz, r13.xyzx, -v6.xyzx
        mov r14.z, r13.w
        lt r13.xyz, |r13.xyzx|, r14.zxyz
        and r12.w, r13.y, r13.x
        and r12.w, r13.z, r12.w
        if_nz r12.w
          iadd r9.z, r7.w, r9.z
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r13.xyz, r9.z, l(0), t36.xyzx
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r14.xyz, r9.z, l(16), t36.xyzx
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r15.xyz, r9.z, l(32), t36.xyzx
          mov r16.x, r13.x
          mov r16.y, r14.x
          mov r16.z, r15.x
          dp3 r12.w, r16.xyzx, r16.xyzx
          rsq r12.w, r12.w
          mul r17.xyz, r12.wwww, r16.xyzx
          dp3 r12.w, r17.xyzx, v3.xyzx
          ge r12.w, r12.w, l(0.500000)
          if_nz r12.w
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r17.xyw, r9.z, l(48), t36.xyxz
            mov r16.w, r17.x
            dp4 r16.x, r4.xyzw, r16.xyzw
            mov r18.x, r13.y
            mov r18.y, r14.y
            mov r18.z, r15.y
            mov r18.w, r17.y
            dp4 r16.y, r4.xyzw, r18.xyzw
            mov r17.x, r13.z
            mov r17.y, r14.z
            mov r17.z, r15.z
            dp4 r16.z, r4.xyzw, r17.xyzw
            lt r13.xyz, |r16.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
            and r12.w, r13.y, r13.x
            and r12.w, r13.z, r12.w
            if_nz r12.w
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r13.xyzw, r9.z, l(64), t36.xyzw
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r14.xyzw, r9.z, l(80), t36.xyzw
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r12.w, r9.z, l(108), t36.xxxx
              dp3 r15.x, r1.xyzx, r18.xyzx
              dp3 r15.y, r1.xyzx, r17.xyzx
              dp3 r18.x, r2.xyzx, r18.xyzx
              dp3 r18.y, r2.xyzx, r17.xyzx
              mad r15.zw, r16.yyyz, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
              mul r16.xyz, r15.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
              mul r17.xyz, r18.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
              and r14.yz, r14.yyzy, l(0, 0x0000ffff, 0x0000ffff, 0)
              if_nz r14.y
                ubfe r15.x, l(4), l(24), r14.w
                ushr r15.y, r14.w, l(28)
                ishl r15.xy, l(1, 1, 0, 0), r15.xyxx
                ieq r16.w, r14.y, l(4)
                if_nz r16.w
                  and r16.w, r14.w, l(4095)
                  ubfe r17.w, l(12), l(12), r14.w
                  and r18.x, r12.w, l(1023)
                  utof r19.xyz, r15.xyxx
                  mad r18.yz, r15.zzwz, r19.zzyz, l(0.000000, 0.500000, 0.500000, 0.000000)
                  add r20.xy, r19.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r18.yz, r18.yyzy, r20.xxyx
                  utof r20.x, r16.w
                  utof r20.y, r17.w
                  add r18.yz, r18.yyzy, r20.xxyx
                  mul r20.xy, r18.yzyy, cb1[83].xyxx
                  utof r20.z, r18.x
                  mul r18.xyz, r16.zyzz, cb1[83].xyxx
                  mul r18.xyz, r19.xyzx, r18.xyzx
                  mul r21.xyz, r17.zyzz, cb1[83].xyxx
                  mul r19.xyz, r19.xyzx, r21.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r18.xyzw, r20.xyzx, t42.xyzw, s4, r18.xyzx, r19.xyzx
                else 
                  ieq r14.y, r14.y, l(1)
                  if_nz r14.y
                    and r14.y, r14.w, l(4095)
                    ubfe r14.w, l(12), l(12), r14.w
                    and r16.w, r12.w, l(1023)
                    utof r19.xyz, r15.xyxx
                    mad r15.xy, r15.zwzz, r19.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r20.xy, r19.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                    min r15.xy, r15.xyxx, r20.xyxx
                    utof r20.xy, r14.ywyy
                    add r14.yw, r15.xxxy, r20.xxxy
                    mul r20.xy, r14.ywyy, cb1[83].zwzz
                    utof r20.z, r16.w
                    mul r21.xyz, r16.zyzz, cb1[83].zwzz
                    mul r21.xyz, r19.xyzx, r21.xyzx
                    mul r22.xyz, r17.zyzz, cb1[83].zwzz
                    mul r19.xyz, r19.xyzx, r22.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r18.xyzw, r20.xyzx, t43.xyzw, s4, r21.xyzx, r19.xyzx
                  else 
                    mov r18.xyzw, l(1.000000,1.000000,1.000000,1.000000)
                  endif 
                endif 
                mul r13.xyz, r13.xyzx, r18.xyzx
                mul r14.y, r13.w, r18.w
              else 
                mov r13.xyz, l(0,0,0,0)
                mov r14.y, l(0)
              endif 
              ne r14.w, r14.x, l(1.000000)
              add r13.w, r13.w, r14.y
              mad_sat r13.w, r13.w, r14.x, -r14.x
              movc r13.w, r14.w, r13.w, r14.y
              if_nz r14.z
                ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r9.z, r9.z, l(100), t36.xxxx
                ubfe r14.x, l(4), l(24), r9.z
                ushr r14.y, r9.z, l(28)
                ishl r14.xy, l(1, 1, 0, 0), r14.xyxx
                ieq r14.w, r14.z, l(2)
                if_nz r14.w
                  and r14.w, r9.z, l(4095)
                  ubfe r15.x, l(12), l(12), r9.z
                  ubfe r15.y, l(10), l(20), r12.w
                  utof r18.xyz, r14.xyxx
                  mad r19.xy, r15.zwzz, r18.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r19.zw, r18.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r19.xy, r19.zwzz, r19.xyxx
                  utof r20.x, r14.w
                  utof r20.y, r15.x
                  add r19.xy, r19.xyxx, r20.xyxx
                  mul r19.xy, r19.xyxx, cb1[84].xyxx
                  utof r19.z, r15.y
                  mul r20.xyz, r16.zyzz, cb1[84].xyxx
                  mul r20.xyz, r18.xyzx, r20.xyzx
                  mul r21.xyz, r17.zyzz, cb1[84].xyxx
                  mul r18.xyz, r18.xyzx, r21.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r14.w, r19.xyzx, t45.yzwx, s4, r20.xyzx, r18.xyzx
                else 
                  ieq r14.z, r14.z, l(4)
                  if_nz r14.z
                    and r14.z, r9.z, l(4095)
                    ubfe r15.x, l(12), l(12), r9.z
                    ubfe r15.y, l(10), l(20), r12.w
                    utof r18.xyz, r14.xyxx
                    mad r19.xy, r15.zwzz, r18.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r19.zw, r18.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                    min r19.xy, r19.zwzz, r19.xyxx
                    utof r20.x, r14.z
                    utof r20.y, r15.x
                    add r19.xy, r19.xyxx, r20.xyxx
                    mul r19.xy, r19.xyxx, cb1[83].xyxx
                    utof r19.z, r15.y
                    mul r20.xyz, r16.zyzz, cb1[83].xyxx
                    mul r20.xyz, r18.xyzx, r20.xyzx
                    mul r21.xyz, r17.zyzz, cb1[83].xyxx
                    mul r18.xyz, r18.xyzx, r21.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r14.w, r19.xyzx, t42.yzwx, s4, r20.xyzx, r18.xyzx
                  else 
                    and r14.z, r9.z, l(4095)
                    ubfe r9.z, l(12), l(12), r9.z
                    ubfe r12.w, l(10), l(20), r12.w
                    utof r18.xyz, r14.xyxx
                    mad r14.xy, r15.zwzz, r18.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r15.xy, r18.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                    min r14.xy, r14.xyxx, r15.xyxx
                    utof r15.x, r14.z
                    utof r15.y, r9.z
                    add r14.xy, r14.xyxx, r15.xyxx
                    mul r14.xy, r14.xyxx, cb1[83].zwzz
                    utof r14.z, r12.w
                    mul r15.xyz, r16.xyzx, cb1[83].zwzz
                    mul r15.xyz, r18.xyzx, r15.xyzx
                    mul r16.xyz, r17.xyzx, cb1[83].zwzz
                    mul r16.xyz, r18.xyzx, r16.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r14.w, r14.xyzx, t43.yzwx, s4, r15.xyzx, r16.xyzx
                  endif 
                endif 
                mad r14.xyz, r14.wwww, l(0.960000, 0.960000, 0.960000, 0.000000), l(0.040000, 0.040000, 0.040000, 0.000000)
                add_sat r9.z, -r14.w, l(1.000000)
                mul r13.xyz, r9.zzzz, r13.xyzx
              else 
                mov r14.xyz, l(0.040000,0.040000,0.040000,0)
              endif 
              add r9.z, -r13.w, l(1.000000)
              mul r15.xyz, r9.zzzz, r12.xyzx
              mad r12.xyz, r13.xyzx, r13.wwww, r15.xyzx
              mul r13.xyz, r9.zzzz, r11.xyzx
              mad r11.xyz, r14.xyzx, r13.wwww, r13.xyzx
              mad r11.w, r11.w, r9.z, r13.w
            endif 
          endif 
        endif 
      endif 
    endloop 
    mov r10.xyzw, r11.xyzw
    mov r6.yzw, r12.xxyz
    iadd r7.w, r7.w, l(32)
  endloop 
  mov r8.xyzw, r10.xyzw
  mov r3.xzw, r6.yyzw
endif 
mov_sat r8.w, r8.w
add r0.w, -r8.w, l(1.000000)
mul r1.xy, v1.yzyy, cb0[11].zwzz
mul r1.zw, cb0[13].xxxy, cb1[69].wwww
mad r1.zw, v1.yyyz, cb0[13].zzzz, r1.zzzw
sample_indexable(texture2d)(float,float,float,float) r1.zw, r1.zwzz, t24.zwxy, s6
mul r1.zw, r1.zzzw, cb0[13].wwww
mad r1.zw, v1.yyyz, cb0[12].xxxx, r1.zzzw
frc r2.xy, r1.zwzz
mad r2.zw, r2.xxxy, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
mul r2.xy, r2.xyxx, r2.xyxx
mul r4.xy, r2.xyxx, r2.zwzz
resinfo_indexable(texture2d)(float,float,float,float) r4.zw, l(0), t21.zwxy
mul r4.zw, r1.xxxy, r4.zzzw
deriv_rtx_coarse r5.xy, r4.zwzz
deriv_rty_coarse r4.zw, r4.zzzw
dp2 r3.y, r5.xyxx, r5.xyxx
dp2 r4.z, r4.zwzz, r4.zwzz
max r3.y, r3.y, r4.z
log r3.y, r3.y
mul r3.y, r3.y, l(0.500000)
round_ni r4.zw, r1.zzzw
div r4.zw, r4.zzzw, cb0[12].xxxx
sample_indexable(texture2d)(float,float,float,float) r4.zw, r4.zwzz, t22.zwxy, s5
add r4.zw, r4.zzzw, r4.zzzw
add r5.xyzw, r1.zwzw, l(1.000000, 0.000000, 0.000000, 1.000000)
round_ni r5.xyzw, r5.xyzw
div r5.xyzw, r5.xyzw, cb0[12].xxxx
sample_indexable(texture2d)(float,float,float,float) r5.xy, r5.xyxx, t22.xyzw, s5
add r5.xy, r5.xyxx, r5.xyxx
sample_indexable(texture2d)(float,float,float,float) r5.zw, r5.zwzz, t22.zwxy, s5
add r5.zw, r5.zzzw, r5.zzzw
add r1.zw, r1.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
round_ni r1.zw, r1.zzzw
div r1.zw, r1.zzzw, cb0[12].xxxx
sample_indexable(texture2d)(float,float,float,float) r1.zw, r1.zwzz, t22.zwxy, s5
add r1.zw, r1.zzzw, r1.zzzw
if_nz cb0[29].y
  sample_indexable(texture2d)(float,float,float,float) r6.xy, v1.yzyy, t22.xyzw, s5
  add r6.xy, r6.xyxx, r6.xyxx
  mad r6.zw, r6.xxxy, l(0.000000, 0.000000, -1.000000, 1.000000), l(0.000000, 0.000000, 1.000000, -1.000000)
  mad r6.xy, r6.xwxx, l(-1.000000, 1.000000, 0.000000, 0.000000), l(1.000000, 0.000000, 0.000000, 0.000000)
  dp2 r6.x, r6.zwzz, r6.xyxx
  sqrt r6.x, r6.x
  mad r6.x, r6.x, cb0[20].y, cb0[20].x
  mul r6.xy, r6.xxxx, cb0[17].xyxx
else 
  mov r6.xy, cb0[17].xyxx
endif 
mad r2.xy, -r2.zwzz, r2.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
mul r2.xy, r2.xyxx, r2.xyxx
mad r2.xy, r4.xyxx, r4.xyxx, r2.xyxx
rsq r2.xy, r2.xyxx
if_z cb0[14].x
  mul r2.z, cb0[12].y, cb1[69].w
  mad r6.zw, r4.zzzw, l(0.000000, 0.000000, -1.000000, 1.000000), l(0.000000, 0.000000, 1.000000, -1.000000)
  mad r6.zw, r6.zzzw, r2.zzzz, r1.xxxy
  sample_l_indexable(texture2d)(float,float,float,float) r6.zw, r6.zwzz, t21.zwxy, s3, r3.y
  mad r7.xy, r5.xyxx, l(-1.000000, 1.000000, 0.000000, 0.000000), l(1.000000, -1.000000, 0.000000, 0.000000)
  mad r7.xy, r7.xyxx, r2.zzzz, r1.xyxx
  sample_l_indexable(texture2d)(float,float,float,float) r7.xy, r7.xyxx, t21.xyzw, s3, r3.y
  add r7.xy, -r6.zwzz, r7.xyxx
  mad r6.zw, r4.xxxx, r7.xxxy, r6.zzzw
  mad r7.xy, r5.zwzz, l(-1.000000, 1.000000, 0.000000, 0.000000), l(1.000000, -1.000000, 0.000000, 0.000000)
  mad r7.xy, r7.xyxx, r2.zzzz, r1.xyxx
  sample_l_indexable(texture2d)(float,float,float,float) r7.xy, r7.xyxx, t21.xyzw, s3, r3.y
  mad r7.zw, r1.zzzw, l(0.000000, 0.000000, -1.000000, 1.000000), l(0.000000, 0.000000, 1.000000, -1.000000)
  mad r1.xy, r7.zwzz, r2.zzzz, r1.xyxx
  sample_l_indexable(texture2d)(float,float,float,float) r1.xy, r1.xyxx, t21.xyzw, s3, r3.y
  add r1.xy, -r7.xyxx, r1.xyxx
  mad r1.xy, r4.xxxx, r1.xyxx, r7.xyxx
  add r1.xy, -r6.zwzz, r1.xyxx
  mad r1.xy, r4.yyyy, r1.xyxx, r6.zwzz
  mad r1.xy, r1.xyxx, r6.xxxx, r6.yyyy
else 
  mad r2.zw, r4.zzzw, l(0.000000, 0.000000, -1.000000, 1.000000), l(0.000000, 0.000000, 1.000000, -1.000000)
  dp2 r4.z, r2.zwzz, r2.zwzz
  sqrt r4.z, r4.z
  max r4.z, r4.z, l(0.000010)
  div r7.xy, r2.zwzz, r4.zzzz
  mov r7.z, -r7.x
  dp2 r9.x, v1.yzyy, r7.yzyy
  dp2 r9.y, v1.yzyy, -r7.xyxx
  mul r9.xy, r9.xyxx, cb0[11].zwzz
  mul r2.z, r4.z, cb1[69].w
  mad r9.z, -r2.z, cb0[12].y, r9.y
  sample_l_indexable(texture2d)(float,float,float,float) r2.zw, r9.xzxx, t21.zwxy, s3, r3.y
  mad r2.zw, r2.zzzw, r6.xxxx, r6.yyyy
  dp2 r9.x, r2.zwzz, r7.yzyy
  dp2 r9.y, r2.zwzz, -r7.xyxx
  mad r2.zw, r5.xxxy, l(0.000000, 0.000000, -1.000000, 1.000000), l(0.000000, 0.000000, 1.000000, -1.000000)
  dp2 r4.z, r2.zwzz, r2.zwzz
  sqrt r4.z, r4.z
  max r4.z, r4.z, l(0.000010)
  div r7.xy, r2.zwzz, r4.zzzz
  mov r7.z, -r7.x
  dp2 r5.x, v1.yzyy, r7.yzyy
  dp2 r5.y, v1.yzyy, -r7.xyxx
  mul r10.xy, r5.xyxx, cb0[11].zwzz
  mul r2.z, r4.z, cb1[69].w
  mad r10.z, -r2.z, cb0[12].y, r10.y
  sample_l_indexable(texture2d)(float,float,float,float) r2.zw, r10.xzxx, t21.zwxy, s3, r3.y
  mad r2.zw, r2.zzzw, r6.xxxx, r6.yyyy
  dp2 r5.x, r2.zwzz, r7.yzyy
  dp2 r5.y, r2.zwzz, -r7.xyxx
  add r2.zw, -r9.xxxy, r5.xxxy
  mad r2.zw, r4.xxxx, r2.zzzw, r9.xxxy
  mad r4.zw, r5.zzzw, l(0.000000, 0.000000, -1.000000, 1.000000), l(0.000000, 0.000000, 1.000000, -1.000000)
  dp2 r5.x, r4.zwzz, r4.zwzz
  sqrt r5.x, r5.x
  max r5.x, r5.x, l(0.000010)
  div r7.xy, r4.zwzz, r5.xxxx
  mov r7.z, -r7.x
  dp2 r9.x, v1.yzyy, r7.yzyy
  dp2 r9.y, v1.yzyy, -r7.xyxx
  mul r9.xy, r9.xyxx, cb0[11].zwzz
  mul r4.z, r5.x, cb1[69].w
  mad r9.z, -r4.z, cb0[12].y, r9.y
  sample_l_indexable(texture2d)(float,float,float,float) r4.zw, r9.xzxx, t21.zwxy, s3, r3.y
  mad r4.zw, r4.zzzw, r6.xxxx, r6.yyyy
  dp2 r5.x, r4.zwzz, r7.yzyy
  dp2 r5.y, r4.zwzz, -r7.xyxx
  mad r1.zw, r1.zzzw, l(0.000000, 0.000000, -1.000000, 1.000000), l(0.000000, 0.000000, 1.000000, -1.000000)
  dp2 r4.z, r1.zwzz, r1.zwzz
  sqrt r4.z, r4.z
  max r4.z, r4.z, l(0.000010)
  div r7.xy, r1.zwzz, r4.zzzz
  mov r7.z, -r7.x
  dp2 r9.x, v1.yzyy, r7.yzyy
  dp2 r9.y, v1.yzyy, -r7.xyxx
  mul r9.xy, r9.xyxx, cb0[11].zwzz
  mul r1.z, r4.z, cb1[69].w
  mad r9.z, -r1.z, cb0[12].y, r9.y
  sample_l_indexable(texture2d)(float,float,float,float) r1.zw, r9.xzxx, t21.zwxy, s3, r3.y
  mad r1.zw, r1.zzzw, r6.xxxx, r6.yyyy
  dp2 r6.x, r1.zwzz, r7.yzyy
  dp2 r6.y, r1.zwzz, -r7.xyxx
  add r1.zw, -r5.xxxy, r6.xxxy
  mad r1.zw, r4.xxxx, r1.zzzw, r5.xxxy
  add r1.zw, -r2.zzzw, r1.zzzw
  mad r1.xy, r4.yyyy, r1.zwzz, r2.zwzz
endif 
mul r1.z, r2.y, r2.x
mul r1.xy, r1.zzzz, r1.xyxx
mul r1.yzw, r1.yyyy, v5.xxyz
mad r1.xyz, v4.xyzx, r1.xxxx, r1.yzwy
add r1.xyz, r1.xyzx, v3.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
movc r1.xyz, v9.xxxx, r1.xyzx, -r1.xyzx
dp3 r2.x, v6.xyzx, v6.xyzx
rsq r2.y, r2.x
mul r2.yzw, r2.yyyy, v6.xxyz
dp3_sat r4.x, r1.xyzx, -r2.yzwy
if_nz v9.x
  ftoi r5.xy, v0.xyxx
  mov r5.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.y, r5.xyzw, t29.yxzw
  ge r5.x, r3.y, l(0.984375)
  mul r5.y, r3.y, l(1.01587307)
  mad r3.y, r3.y, l(64.000000), l(-63.000000)
  movc r3.y, r5.x, r3.y, r5.y
  max r3.y, r3.y, l(0.00000001)
  rcp r3.y, r3.y
  add r3.y, r3.y, -v0.w
  max r3.y, r3.y, l(0.000000)
  min r3.y, r3.y, cb0[21].x
  mov r5.x, cb0[19].y
else 
  sqrt r3.y, r2.x
  mov r5.x, cb0[19].x
endif 
if_nz cb0[28].y
  sample_indexable(texture2d)(float,float,float,float) r5.y, v7.xyxx, t25.yxzw, s7
  sample_indexable(texture2d)(float,float,float,float) r5.z, v7.zwzz, t25.yzxw, s7
  sample_indexable(texture2d)(float,float,float,float) r5.w, v8.xyxx, t25.yzwx, s7
  sample_indexable(texture2d)(float,float,float,float) r6.x, v8.zwzz, t25.xyzw, s7
  add r5.y, r5.z, r5.y
  add r5.y, r5.w, r5.y
  add r5.y, r6.x, r5.y
  mul r5.y, r5.y, cb0[27].w
  sample_indexable(texture2d)(float,float,float,float) r5.z, v1.yzyy, t22.xyzw, s5
  mad r5.z, cb0[27].z, r5.z, cb0[27].y
  max r5.y, r5.y, l(0.000000)
  log r5.y, r5.y
  mul r5.y, r5.y, r5.z
  exp r5.y, r5.y
  mul r5.z, r3.y, cb0[28].x
  min r5.z, r5.z, l(1.000000)
  mul r5.w, r5.z, r5.y
  mad r5.y, -r5.y, r5.z, l(1.000000)
  mul r5.y, r5.y, cb0[17].z
else 
  mov r5.w, l(0)
  mov r5.y, cb0[17].z
endif 
dp3 r5.z, -v6.xyzx, -v6.xyzx
rsq r5.z, r5.z
mul r6.xyz, r5.zzzz, -v6.xyzx
utof r0.yz, r0.yyzy
dp2 r0.y, r0.yzyy, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r0.y, r0.y
mul r0.y, r0.y, l(52.982918)
frc r0.y, r0.y
mad r0.y, r0.y, l(6.28318548), cb1[70].w
sincos r7.x, r9.x, r0.y
dp3 r0.y, -r6.xyzx, r1.xyzx
add r0.y, r0.y, r0.y
mad r10.xyz, r1.xyzx, -r0.yyyy, -r6.xyzx
add r0.y, -r5.y, l(1.000000)
mul r0.y, r0.y, l(5.000000)
add r7.yzw, v6.xxyz, -cb2[35].xxyz
mul r11.x, r7.y, cb2[35].w
mul r11.yz, r7.zzwz, cb2[36].xxyx
add_sat r7.yzw, r11.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
mul r11.xy, r7.yzyy, cb2[36].zwzz
mul r11.z, r7.w, cb2[37].x
add r7.yzw, r11.xxyz, cb2[37].yyzw
lt r9.yzw, l(0.000000, 0.000000, 0.000000, 0.000000), r1.xxyz
movc r11.xyz, r9.yzwy, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
mov r11.w, l(0)
add r9.yzw, r7.yyzw, r11.wwwx
sample_l_indexable(texture3d)(float,float,float,float) r9.yzw, r9.yzwy, t17.wxyz, s4, l(0.000000)
mul r12.xyz, r1.xyzx, r1.xyzx
mul r12.xyz, r12.xyzx, cb2[19].xxxx
add r13.xyz, r7.yzwy, r11.wwyw
sample_l_indexable(texture3d)(float,float,float,float) r13.xyz, r13.xyzx, t18.xyzw, s4, l(0.000000)
mul r13.xyz, r12.yyyy, r13.xyzx
mad r9.yzw, r9.yyzw, r12.xxxx, r13.xxyz
add r7.yzw, r7.yyzw, r11.wwwz
sample_l_indexable(texture3d)(float,float,float,float) r7.yzw, r7.yzwy, t19.wxyz, s4, l(0.000000)
mad r7.yzw, r7.yyzw, r12.zzzz, r9.yyzw
mov r1.w, l(0)
sample_l_indexable(texturecubearray)(float,float,float,float) r9.yzw, r1.xyzw, t8.wxyz, s2, l(6.000000)
mul r7.yzw, r7.yyzw, r9.yyzw
dp3 r0.z, r7.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
mov r10.w, l(0)
sample_l_indexable(texturecubearray)(float,float,float,float) r9.yzw, r10.xyzw, t8.wxyz, s2, r0.y
add r0.y, -r0.z, cb2[19].x
mad r0.y, r5.y, r0.y, r0.z
mul r9.yzw, r0.yyyy, r9.yyzw
if_nz cb0[28].z
  dp3 r0.y, r2.yzwy, r1.xyzx
  add r0.y, r0.y, r0.y
  mad r10.xyz, r1.xyzx, -r0.yyyy, r2.yzwy
  dp3 r0.y, r2.yzwy, -r1.xyzx
  add r0.y, r0.y, r0.y
  mad r11.xyz, r1.xyzx, r0.yyyy, r2.yzwy
  movc r10.xyz, v9.xxxx, r10.xyzx, r11.xyzx
  if_nz cb0[28].w
    mul r11.xyz, v6.yyyy, cb1[5].xyzx
    mad r11.xyz, v6.xxxx, cb1[4].xyzx, r11.xyzx
    mad r11.xyz, v6.zzzz, cb1[6].xyzx, r11.xyzx
    mul r12.xyz, r10.xyzx, cb0[21].zzzz
    mul r13.xyz, r12.yyyy, cb1[5].xyzx
    mad r12.xyw, r12.xxxx, cb1[4].xyxz, r13.xyxz
    mad r12.xyz, r12.zzzz, cb1[6].xyzx, r12.xywx
    min r0.y, cb0[21].x, l(1000.000000)
    mad r11.xyz, r12.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000), r11.xyzx
    div r0.y, r0.y, cb0[21].z
    mov r13.xyz, r9.yzwy
    mov r14.xyz, r11.xyzx
    mov r0.z, l(0)
    loop 
      itof r1.w, r0.z
      ge r1.w, r1.w, r0.y
      breakc_nz r1.w
      add r14.xyz, r12.xyzx, r14.xyzx
      mul r15.xyz, r14.yyyy, cb1[1].xywx
      mad r15.xyz, r14.xxxx, cb1[0].xywx, r15.xyzx
      mad r15.xyz, r14.zzzz, cb1[2].xywx, r15.xyzx
      add r15.xyz, r15.xyzx, cb1[3].xywx
      max r1.w, |r15.y|, |r15.x|
      lt r1.w, r15.z, r1.w
      if_nz r1.w
        break 
      endif 
      div r15.xy, r15.xyxx, r15.zzzz
      mad r15.xy, r15.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      sample_l_indexable(texture2d)(float,float,float,float) r1.w, r15.xyxx, t26.yzwx, s8, l(1.000000)
      lt r5.y, |r1.w|, r14.z
      ge r6.w, |r1.w|, v0.w
      and r5.y, r5.y, r6.w
      if_nz r5.y
        add r1.w, -|r1.w|, r14.z
        mul r1.w, r1.w, cb0[21].w
        mad r15.xyz, -r1.wwww, r12.xyzx, r14.xyzx
        mul r16.xyz, r15.yyyy, cb1[1].xywx
        mad r15.xyw, r15.xxxx, cb1[0].xyxw, r16.xyxz
        mad r15.xyz, r15.zzzz, cb1[2].xywx, r15.xywx
        add r15.xyz, r15.xyzx, cb1[3].xywx
        div r15.xy, r15.xyxx, r15.zzzz
        mad r15.xy, r15.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r15.xyz, r15.xyxx, t30.xyzw, s8, l(0.000000)
        mul r15.xyz, r15.xyzx, cb1[85].xxxx
        mov r13.xyz, r15.xyzx
        break 
      endif 
      iadd r0.z, r0.z, l(1)
    endloop 
    mov r9.yzw, r13.xxyz
  else 
    mul r0.y, r3.y, cb0[21].y
    mad r10.xyz, r10.xyzx, r0.yyyy, v6.xyzx
    mul r11.xyz, r10.yyyy, cb1[9].xywx
    mad r10.xyw, r10.xxxx, cb1[8].xyxw, r11.xyxz
    mad r10.xyz, r10.zzzz, cb1[10].xywx, r10.xywx
    add r10.xyz, r10.xyzx, cb1[11].xywx
    div r0.yz, r10.xxyx, r10.zzzz
    max r1.w, |r0.z|, |r0.y|
    mad r0.yz, r0.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r5.y, r0.yzyy, t26.yxzw, s8, l(0.000000)
    ge r5.y, |r5.y|, v0.w
    lt r1.w, r1.w, l(1.000000)
    and r1.w, r1.w, r5.y
    sample_indexable(texture2d)(float,float,float,float) r10.xyz, r0.yzyy, t30.xyzw, s8
    if_nz r1.w
      mul r9.yzw, r10.xxyz, cb1[85].xxxx
    endif 
  endif 
endif 
dp3 r0.y, r1.xyzx, cb2[17].xyzx
mov_sat r0.z, r0.y
ge r1.w, l(0.000000), r0.z
if_nz r1.w
  mov r5.y, l(0)
endif 
if_z r1.w
  mul r10.xyz, v6.yyyy, cb2[29].xyzx
  mad r10.xyz, v6.xxxx, cb2[28].xyzx, r10.xyzx
  mad r10.xyz, v6.zzzz, cb2[30].xyzx, r10.xyzx
  add r10.xyz, r10.xyzx, cb2[31].xyzx
  add r1.w, r10.z, -cb2[17].w
  mad r1.w, -r1.w, l(0.00006104), l(1.000000)
  mov_sat r6.w, r1.w
  eq r6.w, r1.w, r6.w
  if_nz r6.w
    mov r6.w, l(0)
    mov r10.w, l(0)
    loop 
      ge r11.x, r6.w, l(3.000000)
      breakc_nz r11.x
      ftou r11.x, r6.w
      add r11.yz, r10.xxyx, -cb2[r11.x + 20].xxyx
      max r11.y, |r11.z|, |r11.y|
      mul r10.w, r11.y, cb2[r11.x + 20].z
      lt r11.x, r10.w, l(1.000000)
      if_nz r11.x
        break 
      endif 
      add r6.w, r6.w, l(1.000000)
      mov r10.w, l(0)
    endloop 
  else 
    mov r6.w, l(3.000000)
    mov r10.w, l(0)
  endif 
  ge r11.x, r6.w, l(3.000000)
  if_nz r11.x
    mul r11.yzw, l(0.000000, 128.000000, 0.500000, 0.500000), cb2[27].zzxy
    rcp r12.xz, r11.yyyy
    mov r12.y, -r12.z
    mad r11.yzw, r10.xxyx, r12.xxyz, r11.zzwz
    add r12.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r11.yzw, r11.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r11.yzw, r12.xxyz, r11.yyzw
    mul r12.xy, r11.wzww, cb2[32].xxxx
    round_ni r12.xy, r12.xyxx
    mul r12.y, r12.y, cb2[27].x
    mad r12.x, r12.y, cb2[32].x, r12.x
    ftou r12.x, r12.x
    iadd r12.x, r12.x, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r12.y, r12.x, l(0), t23.xxxx
    and r12.z, r12.y, l(0x40000000)
    ishl r12.w, r12.y, l(2)
    if_z r12.z
      and r12.z, r12.y, l(0x01ffffff)
      iadd r13.x, r12.z, r12.x
      ushr r12.x, r12.y, l(25)
      utof r12.x, r12.x
      mul r11.yzw, r11.yyzw, r12.xxxx
      frc r11.yzw, r11.yyzw
      mul r11.yzw, r11.yyzw, l(0.000000, 128.000000, 128.000000, 128.000000)
      ftou r11.yzw, r11.yyzw
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r13.z, r13.x, l(0), t23.xxxx
      ushr r12.xy, r11.wzww, l(6, 6, 0, 0)
      and r12.z, r13.z, l(0xc0000000)
      iadd r13.w, r13.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r13.w, r13.w, l(0), t23.xxxx
      movc r12.y, r12.y, r13.z, r13.w
      ushr r13.w, r12.y, l(13)
      movc r12.x, r12.x, r13.w, r12.y
      and r12.x, r12.x, l(8191)
      iadd r14.x, r12.x, r13.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r14.z, r14.x, l(0), t23.xxxx
      mov r13.y, l(0)
      mov r14.y, l(1)
      movc r14.xyz, r12.zzzz, r13.xyzx, r14.xyzx
      movc r15.yz, r12.zzzz, l(0,6,1,0), l(0,5,2,0)
      ushr r12.xy, r11.wzww, r15.yyyy
      and r12.xy, r12.xyxx, l(1, 1, 0, 0)
      and r13.w, r14.z, l(0xc0000000)
      iadd r14.w, r14.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r14.w, r14.w, l(0), t23.xxxx
      movc r12.y, r12.y, r14.z, r14.w
      ushr r14.w, r12.y, l(13)
      movc r12.x, r12.x, r14.w, r12.y
      and r12.x, r12.x, l(8191)
      iadd r15.x, r12.x, r14.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.w, r15.x, l(0), t23.xxxx
      movc r14.xyz, r13.wwww, r14.xyzx, r15.xzwx
      movc r12.xyz, r12.zzzz, r13.xyzx, r14.xyzx
      and r13.x, r12.z, l(0xc0000000)
      if_z r13.x
        iadd r13.x, -r12.y, l(6)
        ushr r13.xy, r11.wzww, r13.xxxx
        or r13.z, r12.z, l(0x40000000)
        bfi r13.y, l(1), l(1), r13.y, l(0)
        bfi r13.x, l(1), l(0), r13.x, r13.y
        imul null, r13.x, r13.x, l(10)
        ushr r13.x, r13.z, r13.x
        and r13.x, r13.x, l(1023)
        iadd r13.x, r12.x, r13.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r13.w, r13.x, l(0), t23.xxxx
        iadd r13.yz, r12.yyyy, l(0, 1, 2, 0)
        iadd r12.y, -r13.y, l(6)
        ushr r14.xy, r11.wzww, r12.yyyy
        and r12.y, r13.w, l(0xc0000000)
        or r14.z, r13.w, l(0x40000000)
        bfi r14.y, l(1), l(1), r14.y, l(0)
        bfi r14.x, l(1), l(0), r14.x, r14.y
        imul null, r14.x, r14.x, l(10)
        ushr r14.x, r14.z, r14.x
        and r14.x, r14.x, l(1023)
        iadd r14.x, r13.x, r14.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r14.z, r14.x, l(0), t23.xxxx
        mov r14.y, r13.z
        movc r14.xyz, r12.yyyy, r13.xywx, r14.xyzx
        iadd r13.y, -r14.y, l(6)
        ushr r13.yz, r11.wwzw, r13.yyyy
        and r14.y, r14.z, l(0xc0000000)
        or r14.w, r14.z, l(0x40000000)
        bfi r13.z, l(1), l(1), r13.z, l(0)
        bfi r13.y, l(1), l(0), r13.y, r13.z
        imul null, r13.y, r13.y, l(10)
        ushr r13.y, r14.w, r13.y
        and r13.y, r13.y, l(1023)
        iadd r15.x, r13.y, r14.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.y, r15.x, l(0), t23.xxxx
        movc r13.yz, r14.yyyy, r14.xxzx, r15.xxyx
        movc r12.xz, r12.yyyy, r13.xxwx, r13.yyzy
      endif 
      and r12.y, r12.z, l(0xc0000000)
      if_z r12.y
        ubfe r13.x, l(14), l(15), r12.z
        utof r13.x, r13.x
        mul r13.x, r13.x, cb2[27].w
        and r13.yz, r12.zzzz, l(0, 0x00007fff, 0x20000000, 0)
        utof r13.y, r13.y
        mul r13.y, r13.y, cb2[27].w
        mul r13.xy, r13.xyxx, l(0.00006104, 0.00003052, 0.000000, 0.000000)
        and r13.w, r11.z, l(3)
        iadd r13.w, r12.x, r13.w
        iadd r13.w, r13.w, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r13.w, r13.w, l(0), t23.xxxx
        bfi r14.xyz, l(2, 2, 1, 0), l(3, 1, 4, 0), r11.yzwy, l(0, 0, 0, 0)
        ushr r11.y, r13.w, r14.x
        and r11.y, r11.y, l(255)
        utof r11.y, r11.y
        mul r11.y, r13.y, r11.y
        mad r11.y, r11.y, l(0.00392157), r13.x
        iadd r11.z, r14.y, l(1)
        ubfe r11.w, l(1), l(1), r11.w
        iadd r11.z, r11.w, r11.z
        iadd r11.z, r11.z, r12.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r11.z, r11.z, l(0), t23.xxxx
        ushr r11.z, r11.z, r14.z
        and r11.z, r11.z, l(0x0000ffff)
        utof r11.z, r11.z
        mul r11.z, r13.y, r11.z
        mad r11.z, r11.z, l(0.00001526), r13.x
        movc r12.w, r13.z, r11.y, r11.z
      else 
        and r11.y, r12.z, l(0x80000000)
        iadd r11.z, r12.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r11.z, r11.z, l(0), t23.xxxx
        movc r11.y, r11.y, r11.z, l(0)
        ishl r11.z, r12.z, l(2)
        ushr r11.w, r11.y, l(16)
        and r11.y, r11.y, l(0x0000ffff)
        f16tof32 r11.yw, r11.yyyw
        mad r11.z, r10.x, r11.w, r11.z
        mad r11.y, r10.y, r11.y, r11.z
        movc r12.w, r12.y, r11.y, r12.w
      endif 
    endif 
    mad r10.z, -cb2[27].z, l(2.000000), r10.z
    lt r10.z, r12.w, r10.z
    movc r5.y, r10.z, l(0), l(1.000000)
  endif 
  if_z r11.x
    if_z cb2[58].y
      ftou r10.z, r6.w
      add r11.xy, r10.xyxx, -cb2[r10.z + 20].xyxx
      mul r11.xy, r11.xyxx, cb2[r10.z + 20].zzzz
      mad r11.xy, r11.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r10.z, cb2[26].y
      add r11.z, r6.w, r10.z
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.z, r11.xyzx, t13.xxxx, s13, r1.w
      sample_l_indexable(texture2darray)(float,float,float,float) r11.x, r11.xyzx, t31.xyzw, s0, l(0.000000)
      add r10.z, r10.z, r11.x
      add_sat r10.z, r10.z, l(-1.000000)
      mul r11.x, r10.z, r10.z
      mul r5.y, r10.z, r11.x
    endif 
    if_nz cb2[58].y
      mov r11.x, -r7.x
      ftou r10.z, r6.w
      add r6.w, r6.w, l(1.000000)
      min r6.w, r6.w, l(2.000000)
      ftou r6.w, r6.w
      add r10.w, -r10.w, l(1.000000)
      mul r10.w, r10.w, l(28.000000)
      ftou r10.w, r10.w
      add r12.xy, r10.xyxx, -cb2[r10.z + 20].xyxx
      mul r12.xy, r12.xyxx, cb2[r10.z + 20].zzzz
      mad r12.xy, r12.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      add r10.xy, r10.xyxx, -cb2[r6.w + 20].xyxx
      mul r10.xy, r10.xyxx, cb2[r6.w + 20].zzzz
      mad r10.xy, r10.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      mov r11.y, r9.x
      mov r11.z, r7.x
      mov r11.w, l(0)
      mov r12.z, l(0)
      loop 
        uge r12.w, r12.z, l(8)
        breakc_nz r12.w
        ult r12.w, r10.w, r12.z
        movc r13.xy, r12.wwww, r10.xyxx, r12.xyxx
        movc r13.z, r12.w, cb2[r6.w + 20].w, cb2[r10.z + 20].w
        movc r12.w, r12.w, r6.w, r10.z
        dp2 r14.x, icb[r12.z + 0].yxyy, r11.xyxx
        dp2 r14.y, icb[r12.z + 0].yxyy, r11.yzyy
        mad r13.xy, r14.xyxx, r13.zzzz, r13.xyxx
        iadd r12.w, r12.w, cb2[26].y
        utof r13.z, r12.w
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.w, r13.xyzx, t13.xxxx, s13, r1.w
        sample_l_indexable(texture2darray)(float,float,float,float) r13.x, r13.xyzx, t31.xyzw, s0, l(0.000000)
        add r12.w, r12.w, r13.x
        add_sat r12.w, r12.w, l(-1.000000)
        mad r11.w, r12.w, l(0.125000), r11.w
        iadd r12.z, r12.z, l(1)
      endloop 
      mul r1.w, r11.w, r11.w
      mul r5.y, r11.w, r1.w
    endif 
  endif 
endif 
and r1.w, cb2[53].x, l(0x0000ffff)
ult r6.w, l(0), r1.w
lt r10.x, l(0.000000), r5.y
and r6.w, r6.w, r10.x
if_nz r6.w
  iadd r1.w, r1.w, cb2[0].x
  iadd r1.w, r1.w, l(-1)
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r6.w, r1.w, l(52), t12.xxxx
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r10.xyzw, r1.w, l(68), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r11.xyzw, r1.w, l(84), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.xyzw, r1.w, l(100), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.xyzw, r1.w, l(116), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.xyzw, r1.w, l(132), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r1.w, l(148), t12.xyzw
  mad r0.y, |r0.y|, l(-0.200000), l(0.400000)
  mad r16.xyz, r1.xyzx, r0.yyyy, v6.xyzx
  mov r16.w, l(1.000000)
  dp4 r10.x, r10.xyzw, r16.xyzw
  dp4 r10.y, r11.xyzw, r16.xyzw
  dp4 r0.y, r12.xyzw, r16.xyzw
  dp4 r10.z, r13.xyzw, r16.xyzw
  lt r10.w, r10.z, r0.y
  div r10.xy, r10.xyxx, r10.zzzz
  mad r10.xy, r10.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  add r10.xy, r15.zwzz, r10.xyxx
  mul r10.xy, r15.xyxx, r10.xyxx
  div r11.xy, r6.wwww, r14.xzxx
  add r11.zw, -r11.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
  ge r11.zw, r10.xxxy, r11.zzzw
  ge r11.xy, r11.xyxx, r10.xyxx
  or r11.xy, r11.xyxx, r11.zwzz
  or r11.x, r11.y, r11.x
  or r10.w, r10.w, r11.x
  if_z r10.w
    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r10.w, r1.w, l(28), t12.xxxx
    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r11.xy, r1.w, l(164), t12.xyxx
    mov_sat r10.xy, r10.xyxx
    mad r12.xy, r10.xyxx, r14.xzxx, r14.ywyy
    mul r1.w, r10.z, r11.y
    mad r0.y, r11.x, r10.z, r0.y
    div r0.y, r0.y, r1.w
    max r0.y, r0.y, l(0.00006104)
    and r1.w, r10.w, l(0x0000ffff)
    if_nz cb2[58].y
      mov r10.x, -r7.x
      utof r11.z, r1.w
      mov r10.y, r9.x
      mov r10.z, r7.x
      mov r7.x, l(0)
      mov r9.x, l(0)
      loop 
        ige r10.w, r9.x, l(8)
        breakc_nz r10.w
        dp2 r13.x, icb[r9.x + 0].yxyy, r10.xyxx
        dp2 r13.y, icb[r9.x + 0].yxyy, r10.yzyy
        mad r11.xy, r13.xyxx, r6.wwww, r12.xyxx
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.w, r11.xyzx, t9.xxxx, s13, r0.y
        mad r7.x, r10.w, l(0.125000), r7.x
        iadd r9.x, r9.x, l(1)
      endloop 
    else 
      utof r12.z, r1.w
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r7.x, r12.xyzx, t9.xxxx, s13, r0.y
    endif 
    mul r0.y, r7.x, r7.x
    mul r0.y, r7.x, r0.y
  else 
    mov r0.y, l(1.000000)
  endif 
  mul r5.y, r0.y, r5.y
endif 
lt r0.y, l(0.000000), r0.z
lt r1.w, l(0.000000), r5.y
if_nz r1.w
  if_nz cb2[23].x
    add r10.xyz, v6.xyzx, cb1[24].xyzx
    mov r10.w, l(1.000000)
    dp4 r1.w, cb2[24].xyzw, r10.xyzw
    dp4 r6.w, cb2[25].xyzw, r10.xyzw
    frc r10.x, r1.w
    frc r10.y, r6.w
    iadd r1.w, l(-1), cb2[23].x
    utof r10.z, r1.w
    sample_l_indexable(texture2darray)(float,float,float,float) r10.xyz, r10.xyzx, t20.xyzw, s2, l(0.000000)
    add r10.xyz, r10.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
    mad r10.xyz, cb2[23].yyyy, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mul r10.xyz, r10.xyzx, cb2[18].xyzx
  else 
    mov r10.xyz, cb2[18].xyzx
  endif 
  mul r10.xyz, r5.yyyy, r10.xyzx
  dp3_sat r1.w, r1.xyzx, r6.xyzx
  add r1.w, r0.z, r1.w
  div r1.w, r0.z, r1.w
  mad r11.xyz, r10.xyzx, r1.wwww, r7.yzwy
  mad r12.xyz, -v6.xyzx, r5.zzzz, cb2[17].xyzx
  dp3 r1.w, r12.xyzx, r12.xyzx
  rsq r1.w, r1.w
  mul r12.xyz, r1.wwww, r12.xyzx
  dp3_sat r1.z, r1.xyzx, r12.xyzx
  dp3_sat r1.w, r12.xyzx, r6.xyzx
  mul r5.y, r1.z, r1.z
  mad r5.yz, r5.yyyy, cb0[15].xxzx, l(0.000000, 1.000000, 1.000000, 0.000000)
  mul r5.yz, r5.yyzy, r5.yyzy
  div r5.yz, cb0[15].yywy, r5.yyzy
  mul r5.yz, r1.zzzz, r5.yyzy
  mul r1.z, r1.w, l(4.000000)
  div r1.zw, r5.yyyz, r1.zzzz
  mul r1.zw, r1.zzzw, cb0[16].xxxy
  mul r6.xyz, r1.zzzz, r10.xyzx
  mad r6.xyz, r6.xyzx, r0.zzzz, r9.yzwy
  mul r10.xyz, r1.wwww, r10.xyzx
  mad r6.xyz, r10.xyzx, r0.zzzz, r6.xyzx
else 
  mov r11.xyz, r7.yzwy
  mov r6.xyz, r9.yzwy
endif 
movc r7.xyz, r0.yyyy, r11.xyzx, r7.yzwy
movc r6.xyz, r0.yyyy, r6.xyzx, r9.yzwy
mov r4.yw, l(0,0,0,0)
sample_indexable(texture2d)(float,float,float,float) r9.xyzw, r4.xyxx, t0.xyzw, s1
add r0.y, r3.y, l(1.000000)
log r0.y, r0.y
mul r0.y, r0.y, cb0[16].w
min r0.y, r0.y, l(500.000000)
mad r0.yz, r0.yyyy, r1.xxyx, v0.xxyx
add r1.xy, cb1[44].xyxx, l(-1.000000, -1.000000, 0.000000, 0.000000)
max r0.yz, r0.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
min r0.yz, r1.xxyx, r0.yyzy
ftoi r1.xy, r0.yzyy
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r1.x, r1.xyzw, t29.xyzw
ge r1.y, r1.x, l(0.984375)
mul r1.z, r1.x, l(1.01587307)
mad r1.x, r1.x, l(64.000000), l(-63.000000)
movc r1.x, r1.y, r1.x, r1.z
max r1.x, r1.x, l(0.00000001)
rcp r1.x, r1.x
lt r0.x, r0.x, r1.x
mul r0.yz, r0.yyzy, cb1[44].zzwz
sample_indexable(texture2d)(float,float,float,float) r1.xyz, r0.yzyy, t30.xyzw, s9
if_z r0.x
  ftoi r10.xy, v0.xyxx
  mov r10.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r1.xyz, r10.xyzw, t30.xyzw
endif 
mul r0.xyz, r1.xyzx, cb1[85].xxxx
mad r1.w, r3.y, l(2.000000), l(1.000000)
log r1.w, r1.w
mul r4.z, r1.w, l(0.08333334)
sample_indexable(texture2d)(float,float,float,float) r10.xyzw, r4.zwzz, t37.xyzw, s8
mul r4.yzw, r0.xxyz, r10.xxyz
mul r1.w, r9.w, r10.w
mad r9.xyz, r9.xyzx, r7.xyzx, -r4.yzwy
mad r4.yzw, r1.wwww, r9.xxyz, r4.yyzw
mad r1.xyz, -r1.xyzx, cb1[85].xxxx, r4.yzwy
mad r0.xyz, r5.xxxx, r1.xyzx, r0.xyzx
mad r1.xyz, r3.xzwx, r7.xyzx, -r0.xyzx
mad r0.xyz, r8.wwww, r1.xyzx, r0.xyzx
mad r1.xyz, r6.xyzx, r0.wwww, r8.xyzx
add r0.w, -r4.x, l(1.000000)
mul r1.w, r0.w, r0.w
mul r1.w, r1.w, r1.w
mul r0.w, r0.w, r1.w
mad r0.w, r0.w, l(0.980000), l(0.020000)
add r1.xyz, -r0.xyzx, r1.xyzx
mad r0.xyz, r0.wwww, r1.xyzx, r0.xyzx
mad r1.xyz, cb0[22].yzwy, r7.xyzx, -r0.xyzx
mad r1.xyz, r5.wwww, r1.xyzx, r0.xyzx
movc r0.xyz, cb0[28].yyyy, r1.xyzx, r0.xyzx
lt r0.w, l(0.000000), cb2[9].z
if_nz r0.w
  sqrt r0.w, r2.x
  lt r1.x, l(0.000000), cb2[13].w
  if_nz r1.x
    mad r1.xy, r0.wwww, cb2[15].xyxx, cb2[14].zwzz
    mul r1.xy, r1.xyxx, cb2[16].xyxx
    lt r1.z, l(0.010000), |v6.z|
    mul r3.xy, v6.zzzz, cb2[15].zwzz
    mul r3.zw, r3.xxxy, l(0.000000, 0.000000, -1.442695, -1.442695)
    exp r3.zw, r3.zzzw
    add r3.zw, -r3.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    div r3.xy, r3.zwzz, r3.xyxx
    mul r3.xy, r1.xyxx, r3.xyxx
    movc r1.xy, r1.zzzz, r3.xyxx, r1.xyxx
    mul r1.xzw, r1.xxxx, cb2[12].xxyz
    exp r1.xzw, r1.xxzw
    mul r3.xyz, r1.yyyy, cb2[12].xyzx
    exp r3.xyz, r3.xyzx
    add r3.xyz, -r1.xzwx, r3.xyzx
    mad r1.xyz, cb2[13].wwww, r3.xyzx, r1.xzwx
  else 
    mad r1.w, r0.w, cb2[15].x, cb2[14].z
    mul r1.w, r1.w, cb2[16].x
    lt r3.x, l(0.010000), |v6.z|
    mul r3.y, v6.z, cb2[15].z
    mul r3.z, r3.y, l(-1.442695)
    exp r3.z, r3.z
    add r3.z, -r3.z, l(1.000000)
    div r3.y, r3.z, r3.y
    mul r3.y, r1.w, r3.y
    movc r1.w, r3.x, r3.y, r1.w
    mul r3.xyz, r1.wwww, cb2[12].xyzx
    exp r1.xyz, r3.xyzx
  endif 
  mad r1.xyz, r1.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r1.xyz, r1.xyzx, -cb2[9].zzzz
  dp3 r1.w, cb2[7].yzwy, -r2.yzwy
  mad r3.x, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r3.y, cb2[8].w, -r1.w, l(1.000000)
  mul r3.y, r3.y, r3.y
  mul r3.y, r3.y, l(12.566371)
  div r3.x, r3.x, r3.y
  add r0.w, r0.w, -cb2[10].w
  mul_sat r0.w, r0.w, cb2[11].w
  mul r0.w, r0.w, r3.x
  mov_sat r1.w, r1.w
  mad r1.w, r1.w, r1.w, l(1.000000)
  mad r1.w, r1.w, l(0.05968310), l(-1.000000)
  mad r1.w, cb2[8].z, r1.w, l(1.000000)
  mul r3.xyz, r0.wwww, cb2[11].xyzx
  mad r3.xyz, r1.wwww, cb2[10].xyzx, r3.xyzx
  mul r3.xyz, r3.xyzx, cb2[9].wwww
  add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r3.xyz, r3.xyzx, r4.xyzx
  mad r1.xyz, r0.xyzx, r1.xyzx, r3.xyzx
else 
  mul r0.w, v6.z, cb2[6].x
  mad r1.w, cb2[6].x, v6.z, cb2[5].x
  lt r3.x, |r0.w|, l(0.000100)
  min r3.y, r1.w, l(64.000000)
  mul r3.y, r3.y, l(1.442695)
  exp r3.y, r3.y
  mov_sat r3.z, cb2[6].z
  lt r3.w, r1.w, l(0.000000)
  add r1.w, r1.w, l(1.000000)
  movc r1.w, r3.w, r3.y, r1.w
  add r1.w, r1.w, -cb2[6].z
  movc r0.w, r3.x, l(1.000000), r0.w
  div r0.w, r1.w, r0.w
  movc r0.w, r3.x, r3.z, r0.w
  mul r0.w, r0.w, cb2[5].z
  sqrt r1.w, r2.x
  mad r0.w, r0.w, r1.w, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  dp3 r1.w, cb2[7].yzwy, r2.yzwy
  mad_sat r1.w, cb2[8].y, r1.w, cb2[8].x
  add r2.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r2.xyzw, r1.wwww, r2.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r2.w
  add r2.xyz, -r0.xyzx, r2.xyzx
  mad r1.xyz, r0.wwww, r2.xyzx, r0.xyzx
endif 
mul r0.xyz, r1.xyzx, cb1[85].yyyy
ge r1.xyz, r0.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.xyz, r0.xyzx, r1.xyzx
min o0.xyz, r0.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
mov o0.w, l(1.000000)
ret 
// Approximately 1299 instruction slots used
