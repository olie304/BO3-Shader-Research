//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:39:43 2021
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float3 specColorTint;              // Offset:  160 Size:    12 [unused]
//   float baseNormalHeight;            // Offset:  172 Size:     4 [unused]
//   float2 glossRange;                 // Offset:  176 Size:     8 [unused]
//   float2 normalMapScale;             // Offset:  184 Size:     8
//   float4 specularLobeRoughnessControl;// Offset:  192 Size:    16
//   float4 lobeWeightingThicknessRefraction;// Offset:  208 Size:    16
//   float3 normalAdjustAndGloss;       // Offset:  224 Size:    12
//   float4 decalTint;                  // Offset:  240 Size:    16 [unused]
//   float2 opacityScale;               // Offset:  256 Size:     8
//   float invZFeatherDepth;            // Offset:  264 Size:     4 [unused]
//   float2 normalsFlowScaleMin;        // Offset:  272 Size:     8 [unused]
//   float4 ssrParams;                  // Offset:  288 Size:    16
//   float translucentShadowOpacity;    // Offset:  304 Size:     4 [unused]
//   bool useFoam;                      // Offset:  308 Size:     4 [unused]
//   bool useSSR;                       // Offset:  312 Size:     4
//   bool useLoopedSSR;                 // Offset:  316 Size:     4
//   bool useSpecularZFeather;          // Offset:  320 Size:     4 [unused]
//   bool scaleNormalsWithFlow;         // Offset:  324 Size:     4 [unused]
//   bool doubleSidedLighting;          // Offset:  328 Size:     4
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4 [unused]
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for forwardDecalConstants
// {
//
//   struct CoreDecalConstantsPack
//   {
//       
//       uint4 data[8];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   128
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// colorSampler                      sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// normalSampler                     sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// bilinearClamp                     sampler      NA          NA             s5      1 
// pointClamp                        sampler      NA          NA             s6      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// colorMap                          texture  float4          2d             t0      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// normalMap                         texture  float4          2d            t21      1 
// ifloatZSceneDownsampled           texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// ifloatZScene                      texture  float4          2d            t24      1 
// iResolveScene                     texture  float4          2d            t25      1 
// rColorRamp                        texture  float4          2d            t26      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// visibleDecals                     texture    uint     2darray            t35      1 
// forwardDecalConstants             texture  struct         r/o            t36      1 
// materialTexBC7                    texture  float4     2darray            t42      1 
// materialTexBC3                    texture  float4     2darray            t43      1 
// materialTexMask                   texture  float4     2darray            t45      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyz         1     NONE   float       
// COLOR                    1      w        1     NONE   float       
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 4   x           3     NONE    uint       
// TEXCOORD                 1   xyz         4     NONE   float   xyz 
// TEXCOORD                 2   xyz         5     NONE   float   xyz 
// TEXCOORD                 3   xyz         6     NONE   float   xyz 
// OFFPOSITION              0   xyz         7     NONE   float   xyz 
// SV_IsFrontFace           0   x           8    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[21], immediateIndexed
dcl_constantbuffer CB1[86], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2d (float,float,float,float) t26
dcl_resource_texture2darray (float,float,float,float) t31
dcl_resource_texture2darray (uint,uint,uint,uint) t35
dcl_resource_structured t36, 128
dcl_resource_texture2darray (float,float,float,float) t42
dcl_resource_texture2darray (float,float,float,float) t43
dcl_resource_texture2darray (float,float,float,float) t45
dcl_input_ps_siv linear noperspective v0.xyzw, position
dcl_input_ps linear v2.xy
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyz
dcl_input_ps_sgv constant v8.x, is_front_face
dcl_output o0.xyzw
dcl_temps 41
ge r0.x, v0.z, l(0.984375)
mul r0.y, v0.z, l(1.01587307)
mad r0.z, v0.z, l(64.000000), l(-63.000000)
movc r0.x, r0.x, r0.z, r0.y
max r0.x, r0.x, l(0.00000001)
rcp r0.x, r0.x
ftou r0.yz, v0.yyxy
deriv_rtx_coarse r1.xyz, v7.xyzx
deriv_rty_coarse r2.xyz, v7.xyzx
iadd r0.w, cb2[0].y, cb2[0].x
add r3.xyz, v7.xyzx, cb1[24].xyzx
mul r1.w, r0.x, l(0.00781250)
min r1.w, r1.w, l(15.000000)
ftou r1.w, r1.w
ushr r4.xy, r0.zyzz, l(6, 6, 0, 0)
ishl r4.z, r1.w, l(4)
and r1.w, cb2[57].z, l(-32)
iadd r2.w, -r1.w, cb2[57].z
mov r5.xy, l(0,0,0,0)
mov r6.w, l(0)
mov r3.w, l(1.000000)
mov r7.xyzw, l(0,0,0,0)
mov r8.xyz, l(0,0,0,0)
mov r4.w, l(0)
loop 
  uge r5.w, r4.w, cb2[57].z
  breakc_nz r5.w
  ushr r5.z, r4.w, l(5)
  iadd r6.xyz, r4.xyzx, r5.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r5.z, r6.xyzw, t35.yzxw
  ieq r5.w, r1.w, r4.w
  ubfe r6.x, r2.w, l(0), r5.z
  movc r5.z, r5.w, r6.x, r5.z
  iadd r5.w, r0.w, r4.w
  mov r9.xyzw, r7.yzwx
  mov r6.xyz, r8.xyzx
  mov r8.w, r5.z
  loop 
    breakc_z r8.w
    firstbit_lo r10.x, r8.w
    ishl r10.y, l(1), r10.x
    and r10.z, r8.w, r10.y
    if_nz r10.z
      xor r8.w, r8.w, r10.y
      iadd r10.y, r5.w, r10.x
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r11.xyzw, r10.y, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r12.xy, r10.y, l(16), t11.xyxx
      add r10.yzw, r11.xxyz, -v7.xxyz
      mov r12.z, r11.w
      lt r10.yzw, |r10.yyzw|, r12.zzxy
      and r10.y, r10.z, r10.y
      and r10.y, r10.w, r10.y
      if_nz r10.y
        iadd r10.x, r4.w, r10.x
        ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r10.yzw, r10.x, l(0), t36.xxyz
        ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r11.xyz, r10.x, l(16), t36.xyzx
        ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r12.xyz, r10.x, l(32), t36.xyzx
        mov r13.x, r10.y
        mov r13.y, r11.x
        mov r13.z, r12.x
        dp3 r10.y, r13.xyzx, r13.xyzx
        rsq r10.y, r10.y
        mul r14.xyz, r10.yyyy, r13.xyzx
        dp3 r10.y, r14.xyzx, v4.xyzx
        ge r10.y, r10.y, l(0.500000)
        if_nz r10.y
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r14.xyw, r10.x, l(48), t36.xyxz
          mov r13.w, r14.x
          dp4 r13.x, r3.xyzw, r13.xyzw
          mov r15.x, r10.z
          mov r15.y, r11.y
          mov r15.z, r12.y
          mov r15.w, r14.y
          dp4 r13.y, r3.xyzw, r15.xyzw
          mov r14.x, r10.w
          mov r14.y, r11.z
          mov r14.z, r12.z
          dp4 r13.z, r3.xyzw, r14.xyzw
          lt r10.yzw, |r13.xxyz|, l(0.000000, 1.000000, 1.000000, 1.000000)
          and r10.y, r10.z, r10.y
          and r10.y, r10.w, r10.y
          if_nz r10.y
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r11.xyzw, r10.x, l(64), t36.xyzw
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r12.xyzw, r10.x, l(80), t36.xyzw
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r10.y, r10.x, l(108), t36.xxxx
            dp3 r16.x, r1.xyzx, r15.xyzx
            dp3 r16.y, r1.xyzx, r14.xyzx
            dp3 r15.x, r2.xyzx, r15.xyzx
            dp3 r15.y, r2.xyzx, r14.xyzx
            mad r10.zw, r13.yyyz, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
            mul r13.xyz, r16.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
            mul r14.xyz, r15.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
            and r12.yz, r12.yyzy, l(0, 0x0000ffff, 0x0000ffff, 0)
            if_nz r12.y
              ubfe r13.w, l(4), l(24), r12.w
              ishl r13.w, l(1), r13.w
              ushr r14.w, r12.w, l(28)
              ishl r14.w, l(1), r14.w
              ieq r15.x, r12.y, l(4)
              if_nz r15.x
                and r15.x, r12.w, l(4095)
                ubfe r15.y, l(12), l(12), r12.w
                and r15.z, r10.y, l(1023)
                utof r16.xz, r13.wwww
                utof r16.y, r14.w
                mad r17.xy, r10.zwzz, r16.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                add r17.zw, r16.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                min r17.xy, r17.zwzz, r17.xyxx
                utof r18.xy, r15.xyxx
                add r15.xy, r17.xyxx, r18.xyxx
                mul r17.xy, r15.xyxx, cb1[83].xyxx
                utof r17.z, r15.z
                mul r15.xyz, r13.zyzz, cb1[83].xyxx
                mul r15.xyz, r16.xyzx, r15.xyzx
                mul r18.xyz, r14.zyzz, cb1[83].xyxx
                mul r16.xyz, r16.xyzx, r18.xyzx
                sample_d_indexable(texture2darray)(float,float,float,float) r15.xyzw, r17.xyzx, t42.xyzw, s4, r15.xyzx, r16.xyzx
              else 
                ieq r12.y, r12.y, l(1)
                if_nz r12.y
                  and r12.y, r12.w, l(4095)
                  ubfe r12.w, l(12), l(12), r12.w
                  and r16.x, r10.y, l(1023)
                  utof r17.xz, r13.wwww
                  utof r17.y, r14.w
                  mad r16.yz, r10.zzwz, r17.zzyz, l(0.000000, 0.500000, 0.500000, 0.000000)
                  add r18.xy, r17.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r16.yz, r16.yyzy, r18.xxyx
                  utof r18.xy, r12.ywyy
                  add r12.yw, r16.yyyz, r18.xxxy
                  mul r18.xy, r12.ywyy, cb1[83].zwzz
                  utof r18.z, r16.x
                  mul r16.xyz, r13.zyzz, cb1[83].zwzz
                  mul r16.xyz, r17.xyzx, r16.xyzx
                  mul r19.xyz, r14.zyzz, cb1[83].zwzz
                  mul r17.xyz, r17.xyzx, r19.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r15.xyzw, r18.xyzx, t43.xyzw, s4, r16.xyzx, r17.xyzx
                else 
                  mov r15.xyzw, l(1.000000,1.000000,1.000000,1.000000)
                endif 
              endif 
              mul r11.xyz, r11.xyzx, r15.xyzx
              mul r12.y, r11.w, r15.w
            else 
              mov r11.xyz, l(0,0,0,0)
              mov r12.y, l(0)
            endif 
            ne r12.w, r12.x, l(1.000000)
            add r11.w, r11.w, r12.y
            mad_sat r11.w, r11.w, r12.x, -r12.x
            movc r11.w, r12.w, r11.w, r12.y
            if_nz r12.z
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r10.x, r10.x, l(100), t36.xxxx
              ubfe r12.x, l(4), l(24), r10.x
              ushr r12.y, r10.x, l(28)
              ishl r12.xy, l(1, 1, 0, 0), r12.xyxx
              ieq r12.w, r12.z, l(2)
              if_nz r12.w
                and r12.w, r10.x, l(4095)
                ubfe r13.w, l(12), l(12), r10.x
                ubfe r14.w, l(10), l(20), r10.y
                utof r15.xyz, r12.xyxx
                mad r16.xy, r10.zwzz, r15.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                add r16.zw, r15.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                min r16.xy, r16.zwzz, r16.xyxx
                utof r17.x, r12.w
                utof r17.y, r13.w
                add r16.xy, r16.xyxx, r17.xyxx
                mul r16.xy, r16.xyxx, cb1[84].xyxx
                utof r16.z, r14.w
                mul r17.xyz, r13.zyzz, cb1[84].xyxx
                mul r17.xyz, r15.xyzx, r17.xyzx
                mul r18.xyz, r14.zyzz, cb1[84].xyxx
                mul r15.xyz, r15.xyzx, r18.xyzx
                sample_d_indexable(texture2darray)(float,float,float,float) r12.w, r16.xyzx, t45.yzwx, s4, r17.xyzx, r15.xyzx
              else 
                ieq r12.z, r12.z, l(4)
                if_nz r12.z
                  and r12.z, r10.x, l(4095)
                  ubfe r13.w, l(12), l(12), r10.x
                  ubfe r14.w, l(10), l(20), r10.y
                  utof r15.xyz, r12.xyxx
                  mad r16.xy, r10.zwzz, r15.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r16.zw, r15.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r16.xy, r16.zwzz, r16.xyxx
                  utof r17.x, r12.z
                  utof r17.y, r13.w
                  add r16.xy, r16.xyxx, r17.xyxx
                  mul r16.xy, r16.xyxx, cb1[83].xyxx
                  utof r16.z, r14.w
                  mul r17.xyz, r13.zyzz, cb1[83].xyxx
                  mul r17.xyz, r15.xyzx, r17.xyzx
                  mul r18.xyz, r14.zyzz, cb1[83].xyxx
                  mul r15.xyz, r15.xyzx, r18.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r12.w, r16.xyzx, t42.yzwx, s4, r17.xyzx, r15.xyzx
                else 
                  and r12.z, r10.x, l(4095)
                  ubfe r10.x, l(12), l(12), r10.x
                  ubfe r10.y, l(10), l(20), r10.y
                  utof r15.xyz, r12.xyxx
                  mad r10.zw, r10.zzzw, r15.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
                  add r12.xy, r15.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r10.zw, r10.zzzw, r12.xxxy
                  utof r12.x, r12.z
                  utof r12.yz, r10.xxyx
                  add r10.xz, r10.zzwz, r12.xxyx
                  mul r12.xy, r10.xzxx, cb1[83].zwzz
                  mul r10.xyz, r13.xyzx, cb1[83].zwzz
                  mul r10.xyz, r15.xyzx, r10.xyzx
                  mul r13.xyz, r14.xyzx, cb1[83].zwzz
                  mul r13.xyz, r15.xyzx, r13.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r12.w, r12.xyzx, t43.yzwx, s4, r10.xyzx, r13.xyzx
                endif 
              endif 
              mad r10.xyz, r12.wwww, l(0.960000, 0.960000, 0.960000, 0.000000), l(0.040000, 0.040000, 0.040000, 0.000000)
              add_sat r10.w, -r12.w, l(1.000000)
              mul r11.xyz, r10.wwww, r11.xyzx
            else 
              mov r10.xyz, l(0.040000,0.040000,0.040000,0)
            endif 
            add r10.w, -r11.w, l(1.000000)
            mul r12.xyz, r6.xyzx, r10.wwww
            mad r6.xyz, r11.xyzx, r11.wwww, r12.xyzx
            mul r11.xyz, r9.xyzx, r10.wwww
            mad r9.xyz, r10.xyzx, r11.wwww, r11.xyzx
            mad r9.w, r9.w, r10.w, r11.w
          endif 
        endif 
      endif 
    endif 
  endloop 
  mov r7.xyzw, r9.wxyz
  mov r8.xyz, r6.xyzx
  iadd r4.w, r4.w, l(32)
endloop 
mov_sat r7.x, r7.x
add r0.w, -r7.x, l(1.000000)
mul r1.xy, v2.xyxx, cb0[11].zwzz
sample_indexable(texture2d)(float,float,float,float) r1.xy, r1.xyxx, t21.xyzw, s3
mad r1.xy, r1.xyxx, cb0[14].xxxx, cb0[14].yyyy
mul r1.yzw, r1.yyyy, v6.xxyz
mad r1.xyz, v5.xyzx, r1.xxxx, r1.yzwy
add r1.xyz, r1.xyzx, v4.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
movc r1.xyz, v8.xxxx, r1.xyzx, -r1.xyzx
dp3 r2.x, v7.xyzx, v7.xyzx
rsq r2.y, r2.x
mul r2.yzw, r2.yyyy, v7.xxyz
dp3_sat r5.z, r1.xyzx, -r2.yzwy
if_nz v8.x
  ftoi r6.xy, v0.xyxx
  mov r6.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.w, r6.xyzw, t24.yzwx
  ge r6.x, r4.w, l(0.984375)
  mul r6.y, r4.w, l(1.01587307)
  mad r4.w, r4.w, l(64.000000), l(-63.000000)
  movc r4.w, r6.x, r4.w, r6.y
  max r4.w, r4.w, l(0.00000001)
  rcp r4.w, r4.w
  add r4.w, r4.w, -v0.w
  max r4.w, r4.w, l(0.000000)
  min r4.w, r4.w, cb0[18].x
  mov r6.x, cb0[16].y
else 
  sqrt r4.w, r2.x
  mov r6.x, cb0[16].x
endif 
ine r6.y, cb0[20].z, l(0)
dp3 r6.z, -v7.xyzx, -v7.xyzx
rsq r6.z, r6.z
mul r9.xyz, r6.zzzz, -v7.xyzx
utof r0.yz, r0.yyzy
dp2 r6.w, r0.zyzz, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r6.w, r6.w
mul r6.w, r6.w, l(52.982918)
frc r6.w, r6.w
mad r6.w, r6.w, l(6.28318548), cb1[70].w
sincos r10.x, r11.x, r6.w
dp2 r0.y, r0.yzyy, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r0.y, r0.y
mul r0.y, r0.y, l(52.982918)
frc r0.y, r0.y
mad r0.y, r0.y, l(6.28318548), cb1[70].w
sincos r12.x, r13.x, r0.y
dp3_sat r0.y, r1.xyzx, r9.xyzx
dp3 r0.z, -r9.xyzx, r1.xyzx
add r0.z, r0.z, r0.z
mad r14.xyz, r1.xyzx, -r0.zzzz, -r9.xyzx
add r0.z, -cb0[14].z, l(1.000000)
mul r6.w, r0.z, l(5.000000)
mad r8.w, r0.z, l(5.000000), l(-2.500000)
mul_sat r8.w, r8.w, l(0.400000)
mul r8.w, r8.w, l(100.000000)
mad r10.zw, -r0.zzzz, l(0.000000, 0.000000, 10.000000, 5.000000), l(0.000000, 0.000000, 6.857410, 7.085000)
exp r9.w, r10.z
mul r9.w, r0.y, r9.w
mul r9.w, r9.w, l(9.136810)
mul r10.z, r0.z, r6.w
mad r10.z, -r10.z, l(2.015905), r10.w
exp r10.z, r10.z
mul r10.z, r0.y, r10.z
mul r10.z, r10.z, l(9.708090)
max r9.w, r9.w, r10.z
max r9.w, r9.w, l(1.268160)
iadd r10.z, cb2[0].y, -cb2[58].x
and r10.w, r10.z, l(-32)
iadd r11.w, -r10.w, r10.z
and r12.y, cb2[0].y, l(-32)
iadd r12.z, -r12.y, cb2[0].y
mov r15.xy, l(0,0,0,0)
mov r16.w, l(0)
mov r17.yz, l(0,0,1.000000,0)
mov r18.xy, l(0,0,0,0)
mov r5.xw, l(1.000000,0,0,0)
mov r19.xy, l(0,0,0,0)
mov r20.xy, l(0,0,0,0)
mov r21.xyzw, l(0,0,0,0)
mov r22.yzw, l(0,0,0,0)
mov r12.w, r10.w
loop 
  uge r13.y, r12.w, cb2[0].y
  breakc_nz r13.y
  ushr r15.z, r12.w, l(5)
  iadd r16.xyz, r4.xyzx, r15.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r13.y, r16.xyzw, t7.yxzw
  ieq r13.z, r10.w, r12.w
  bfi r13.w, r11.w, l(0), l(0), r13.y
  movc r13.y, r13.z, r13.w, r13.y
  ieq r13.z, r12.y, r12.w
  ubfe r13.w, r12.z, l(0), r13.y
  movc r13.y, r13.z, r13.w, r13.y
  iadd r13.z, r12.w, cb2[0].x
  mov r23.xyzw, r21.xyzw
  mov r24.xyz, r22.yzwy
  mov r13.w, r13.y
  loop 
    breakc_z r13.w
    firstbit_lo r15.z, r13.w
    ishl r15.w, l(1), r15.z
    and r16.x, r13.w, r15.w
    if_nz r16.x
      xor r13.w, r13.w, r15.w
      iadd r15.w, r13.z, r15.z
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r25.xyzw, r15.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r16.xy, r15.w, l(16), t11.xyxx
      add r25.xyz, r25.xyzx, -v7.xyzx
      mov r16.z, r25.w
      lt r16.xyz, |r25.xyzx|, r16.zxyz
      and r15.w, r16.y, r16.x
      and r15.w, r16.z, r15.w
      if_nz r15.w
        iadd r15.z, r12.w, r15.z
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r15.z, l(0), t15.wxyz
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r16.xy, r15.z, l(96), t15.xyxx
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r15.z, l(116), t15.zwxy
        add r27.xyz, -r25.yzwy, v7.xyzx
        and r15.w, r26.w, l(0x0000ffff)
        ubfe r16.z, l(6), l(25), r26.w
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r15.w, l(0), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r15.w, l(16), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r15.w, l(32), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r15.w, l(48), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r15.w, l(64), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r15.w, l(80), t16.xyzw
        dp3 r17.w, r28.xyzx, r27.xyzx
        add_sat r17.w, r28.w, r17.w
        dp3 r18.w, r29.xyzx, r27.xyzx
        add_sat r18.w, r29.w, r18.w
        mul r17.w, r17.w, r18.w
        dp3 r18.w, r30.xyzx, r27.xyzx
        add_sat r18.w, r30.w, r18.w
        mul r17.w, r17.w, r18.w
        dp3 r18.w, r31.xyzx, r27.xyzx
        add_sat r18.w, r31.w, r18.w
        mul r17.w, r17.w, r18.w
        dp3 r18.w, r32.xyzx, r27.xyzx
        add_sat r18.w, r32.w, r18.w
        mul r17.w, r17.w, r18.w
        dp3 r18.w, r33.xyzx, r27.xyzx
        add_sat r18.w, r33.w, r18.w
        mul r17.x, r17.w, r18.w
        and r17.w, r16.x, l(1)
        movc r17.xw, r17.wwww, r17.xxxy, r17.zzzx
        mov r18.w, r16.x
        mov r28.xy, r17.xwxx
        mov r19.w, l(1)
        loop 
          ige r20.w, r19.w, r16.z
          breakc_nz r20.w
          iadd r20.w, r15.w, r19.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r20.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r20.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r20.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r20.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r20.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r20.w, l(80), t16.xyzw
          dp3 r20.w, r29.xyzx, r27.xyzx
          add_sat r20.w, r29.w, r20.w
          mul r20.w, r20.w, r28.x
          dp3 r25.w, r30.xyzx, r27.xyzx
          add_sat r25.w, r30.w, r25.w
          mul r20.w, r20.w, r25.w
          dp3 r25.w, r31.xyzx, r27.xyzx
          add_sat r25.w, r31.w, r25.w
          mul r20.w, r20.w, r25.w
          dp3 r25.w, r32.xyzx, r27.xyzx
          add_sat r25.w, r32.w, r25.w
          mul r20.w, r20.w, r25.w
          dp3 r25.w, r33.xyzx, r27.xyzx
          add_sat r25.w, r33.w, r25.w
          mul r20.w, r20.w, r25.w
          dp3 r25.w, r34.xyzx, r27.xyzx
          add_sat r25.w, r34.w, r25.w
          mul r28.x, r20.w, r25.w
          ushr r27.w, r18.w, l(2)
          ubfe r28.z, l(1), l(2), r18.w
          and r28.w, r27.w, l(2)
          max r29.x, r28.x, r28.y
          mad r20.w, -r20.w, r25.w, l(1.000000)
          mul r20.w, r20.w, r28.y
          movc r5.y, r28.w, r20.w, r29.x
          movc r28.xy, r28.zzzz, r28.xyxx, r5.xyxx
          iadd r19.w, r19.w, l(1)
          mov r18.w, r27.w
        endloop 
        mov_sat r28.y, r28.y
        mul r5.y, r16.y, r28.y
        lt r15.w, l(0.000000), r5.y
        if_nz r15.w
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r15.z, l(16), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r15.z, l(32), t15.yxwz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r15.z, l(48), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r15.z, l(64), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r15.z, l(80), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r15.z, l(132), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r15.z, l(148), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r15.z, l(164), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r15.z, l(180), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r15.z, l(196), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xy, r15.z, l(212), t15.xyxx
          mad r24.z, r28.y, r16.y, r24.z
          mul r5.y, r26.z, r5.y
          mov r26.z, r34.z
          dp3 r15.z, r14.xyzx, r26.xyzx
          dp3 r15.w, r27.xyzx, r26.xyzx
          add r15.w, -r34.w, r15.w
          ge r16.x, r15.w, l(0.000000)
          max r15.w, r8.w, |r15.w|
          movc r15.w, r16.x, r15.w, -r15.w
          max r15.z, -r15.z, l(0.00000010)
          div r15.z, r15.w, r15.z
          min r15.z, |r15.z|, l(131072.000000)
          mov r34.z, r35.z
          dp3 r15.w, r14.xyzx, r34.xyzx
          dp3 r16.x, r27.xyzx, r34.xyzx
          add r16.x, -r35.w, r16.x
          ge r16.y, r16.x, l(0.000000)
          max r16.x, r8.w, |r16.x|
          movc r16.x, r16.y, r16.x, -r16.x
          max r15.w, -r15.w, l(0.00000010)
          div r15.w, r16.x, r15.w
          min r15.z, |r15.w|, r15.z
          mov r35.z, r36.z
          dp3 r15.w, r14.xyzx, r35.xyzx
          dp3 r16.x, r27.xyzx, r35.xyzx
          add r16.x, -r36.w, r16.x
          ge r16.y, r16.x, l(0.000000)
          max r16.x, r8.w, |r16.x|
          movc r16.x, r16.y, r16.x, -r16.x
          max r15.w, -r15.w, l(0.00000010)
          div r15.w, r16.x, r15.w
          min r15.z, |r15.w|, r15.z
          mov r36.z, r37.z
          dp3 r15.w, r14.xyzx, r36.xyzx
          dp3 r16.x, r27.xyzx, r36.xyzx
          add r16.x, -r37.w, r16.x
          ge r16.y, r16.x, l(0.000000)
          max r16.x, r8.w, |r16.x|
          movc r16.x, r16.y, r16.x, -r16.x
          max r15.w, -r15.w, l(0.00000010)
          div r15.w, r16.x, r15.w
          min r15.z, |r15.w|, r15.z
          mov r37.z, r38.x
          dp3 r15.w, r14.xyzx, r37.xyzx
          dp3 r16.x, r27.xyzx, r37.xyzx
          add r16.x, -r38.y, r16.x
          ge r16.y, r16.x, l(0.000000)
          max r16.x, r8.w, |r16.x|
          movc r16.x, r16.y, r16.x, -r16.x
          max r15.w, -r15.w, l(0.00000010)
          div r15.w, r16.x, r15.w
          min r15.z, |r15.w|, r15.z
          mov r39.zw, r38.zzzw
          dp3 r15.w, r14.zxyz, r39.xzwx
          dp3 r16.x, r27.zxyz, r39.xzwx
          add r16.x, -r39.y, r16.x
          ge r16.y, r16.x, l(0.000000)
          max r16.x, r8.w, |r16.x|
          movc r16.x, r16.y, r16.x, -r16.x
          max r15.w, -r15.w, l(0.00000010)
          div r15.w, r16.x, r15.w
          min r15.z, |r15.w|, r15.z
          mov r16.x, r31.w
          mov r16.yz, r32.zzwz
          add r16.xyz, r27.xyzx, r16.xyzx
          mad r16.xyz, r14.xyzx, r15.zzzz, r16.xyzx
          dp3 r15.w, r16.xyzx, r16.xyzx
          sqrt r15.w, r15.w
          div r15.z, r15.z, r15.w
          add r15.z, r15.z, r15.z
          sqrt r15.z, r15.z
          mad r15.z, r0.z, l(5.000000), r15.z
          add r15.z, r15.z, l(-0.844800)
          mov r25.y, r29.z
          mov r25.z, r30.x
          dp3 r34.x, r16.xyzx, r25.xyzx
          mov r26.xy, r29.xwxx
          mov r26.z, r30.w
          dp3 r34.y, r16.xyzx, r26.xyzx
          mov r30.x, r29.y
          dp3 r34.z, r16.xyzx, r30.xyzx
          ubfe r15.w, l(9), l(16), r26.w
          utof r34.w, r15.w
          sample_l_indexable(texturecubearray)(float,float,float,float) r16.xyz, r34.xyzw, t8.xyzw, s2, r15.z
          dp3 r29.x, r27.xyzx, r25.xyzx
          dp3 r29.y, r27.xyzx, r26.xyzx
          dp3 r29.z, r27.xyzx, r30.xyzx
          mad_sat r27.xyz, r29.xyzx, r31.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
          mov r32.z, r33.x
          mad r27.xyz, r27.xyzx, r32.xyzx, r33.yzwy
          dp3 r34.x, r1.xyzx, r25.xyzx
          dp3 r34.y, r1.xyzx, r26.xyzx
          dp3 r34.z, r1.xyzx, r30.xyzx
          lt r25.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r34.xyzx
          movc r18.z, r25.x, l(0), l(0.500000)
          add r26.xyz, r18.xyzx, r27.xyzx
          sample_l_indexable(texture3d)(float,float,float,float) r26.xyz, r26.xyzx, t17.xyzw, s4, l(0.000000)
          mul r28.xzw, r34.xxyz, r34.xxyz
          mul r28.xzw, r5.yyyy, r28.xxzw
          movc r19.z, r25.y, l(0), l(0.500000)
          add r25.xyw, r19.xyxz, r27.xyxz
          sample_l_indexable(texture3d)(float,float,float,float) r25.xyw, r25.xywx, t18.xywz, s4, l(0.000000)
          mul r25.xyw, r28.zzzz, r25.xyxw
          mad r25.xyw, r26.xyxz, r28.xxxx, r25.xyxw
          movc r20.z, r25.z, l(0), l(0.500000)
          add r26.xyz, r20.xyzx, r27.xyzx
          sample_l_indexable(texture3d)(float,float,float,float) r26.xyz, r26.xyzx, t19.xyzw, s4, l(0.000000)
          mad r25.xyz, r26.xyzx, r28.wwww, r25.xywx
          sample_l_indexable(texturecubearray)(float,float,float,float) r26.xyz, r34.xyzw, t8.xyzw, s2, l(6.000000)
          mul r27.xyz, r25.xyzx, r26.xyzx
          dp3 r15.z, r27.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r23.xyz, r25.xyzx, r26.xyzx, r23.xyzx
          mul r15.w, r9.w, r15.z
          mul r16.xyz, r5.yyyy, r16.xyzx
          dp3 r5.y, r16.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r5.y, r9.w, r15.z, r5.y
          div r5.y, r15.w, r5.y
          mov r25.x, r23.w
          mov r25.yz, r24.xxyx
          mad r24.xyw, r16.yzyx, r5.yyyy, r25.yzyx
          mov r23.w, r24.w
        endif 
      endif 
    endif 
  endloop 
  mov r21.xyzw, r23.xyzw
  mov r22.yzw, r24.xxyz
  iadd r12.w, r12.w, l(32)
endloop 
lt r5.x, r22.w, l(1.000000)
if_nz r5.x
  mov r15.xy, l(0,0,0,0)
  mov r16.w, l(0)
  mov r17.yz, l(0,0,1.000000,0)
  mov r18.xy, l(0,0,0,0)
  mov r5.x, l(1.000000)
  mov r19.xy, l(0,0,0,0)
  mov r20.xy, l(0,0,0,0)
  mov r23.x, r21.w
  mov r23.yzw, r22.yyzw
  mov r12.yzw, r21.xxyz
  mov r13.y, r22.w
  mov r13.z, l(0)
  loop 
    uge r13.w, r13.z, r10.z
    breakc_nz r13.w
    ushr r15.z, r13.z, l(5)
    iadd r16.xyz, r4.xyzx, r15.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r13.w, r16.xyzw, t7.yzwx
    ieq r15.z, r10.w, r13.z
    ubfe r15.w, r11.w, l(0), r13.w
    movc r13.w, r15.z, r15.w, r13.w
    iadd r15.z, r13.z, cb2[0].x
    mov r24.xyzw, r23.xyzw
    mov r16.xyz, r12.yzwy
    mov r15.w, r13.y
    mov r17.w, r13.w
    loop 
      breakc_z r17.w
      firstbit_lo r18.w, r17.w
      ishl r19.w, l(1), r18.w
      and r20.w, r17.w, r19.w
      if_nz r20.w
        xor r17.w, r17.w, r19.w
        iadd r19.w, r15.z, r18.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r25.xyzw, r19.w, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r26.xy, r19.w, l(16), t11.xyxx
        add r25.xyz, r25.xyzx, -v7.xyzx
        mov r26.z, r25.w
        lt r25.xyz, |r25.xyzx|, r26.zxyz
        and r19.w, r25.y, r25.x
        and r19.w, r25.z, r19.w
        if_nz r19.w
          iadd r18.w, r13.z, r18.w
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r18.w, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xy, r18.w, l(96), t15.xyxx
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r18.w, l(116), t15.zwxy
          add r28.xyz, -r25.yzwy, v7.xyzx
          and r19.w, r27.w, l(0x0000ffff)
          ubfe r20.w, l(6), l(25), r27.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r19.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r19.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r19.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r19.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r19.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r19.w, l(80), t16.xyzw
          dp3 r25.w, r29.xyzx, r28.xyzx
          add_sat r25.w, r29.w, r25.w
          dp3 r26.z, r30.xyzx, r28.xyzx
          add_sat r26.z, r30.w, r26.z
          mul r25.w, r25.w, r26.z
          dp3 r26.z, r31.xyzx, r28.xyzx
          add_sat r26.z, r31.w, r26.z
          mul r25.w, r25.w, r26.z
          dp3 r26.z, r32.xyzx, r28.xyzx
          add_sat r26.z, r32.w, r26.z
          mul r25.w, r25.w, r26.z
          dp3 r26.z, r33.xyzx, r28.xyzx
          add_sat r26.z, r33.w, r26.z
          mul r25.w, r25.w, r26.z
          dp3 r26.z, r34.xyzx, r28.xyzx
          add_sat r26.z, r34.w, r26.z
          mul r17.x, r25.w, r26.z
          and r25.w, r26.x, l(1)
          movc r26.zw, r25.wwww, r17.xxxy, r17.zzzx
          mov r17.x, r26.x
          mov r29.xy, r26.zwzz
          mov r25.w, l(1)
          loop 
            ige r28.w, r25.w, r20.w
            breakc_nz r28.w
            iadd r28.w, r19.w, r25.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r28.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r28.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r28.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r28.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r28.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r28.w, l(80), t16.xyzw
            dp3 r28.w, r30.xyzx, r28.xyzx
            add_sat r28.w, r30.w, r28.w
            mul r28.w, r28.w, r29.x
            dp3 r29.z, r31.xyzx, r28.xyzx
            add_sat r29.z, r31.w, r29.z
            mul r28.w, r28.w, r29.z
            dp3 r29.z, r32.xyzx, r28.xyzx
            add_sat r29.z, r32.w, r29.z
            mul r28.w, r28.w, r29.z
            dp3 r29.z, r33.xyzx, r28.xyzx
            add_sat r29.z, r33.w, r29.z
            mul r28.w, r28.w, r29.z
            dp3 r29.z, r34.xyzx, r28.xyzx
            add_sat r29.z, r34.w, r29.z
            mul r28.w, r28.w, r29.z
            dp3 r29.z, r35.xyzx, r28.xyzx
            add_sat r29.z, r35.w, r29.z
            mul r29.x, r28.w, r29.z
            ushr r29.w, r17.x, l(2)
            ubfe r30.x, l(1), l(2), r17.x
            and r30.y, r29.w, l(2)
            max r30.z, r29.x, r29.y
            mad r28.w, -r28.w, r29.z, l(1.000000)
            mul r28.w, r28.w, r29.y
            movc r5.y, r30.y, r28.w, r30.z
            movc r29.xy, r30.xxxx, r29.xyxx, r5.xyxx
            iadd r25.w, r25.w, l(1)
            mov r17.x, r29.w
          endloop 
          add_sat r5.y, -r15.w, r29.y
          mul r17.x, r26.y, r5.y
          lt r19.w, l(0.000000), r17.x
          if_nz r19.w
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r18.w, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r18.w, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r18.w, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r18.w, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r18.w, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r18.w, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r18.w, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r18.w, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r18.w, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xyzw, r18.w, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r40.xy, r18.w, l(212), t15.xyxx
            mad r24.w, r5.y, r26.y, r24.w
            mul r5.y, r27.z, r17.x
            mov r27.z, r35.z
            dp3 r17.x, r14.xyzx, r27.xyzx
            dp3 r18.w, r28.xyzx, r27.xyzx
            add r18.w, -r35.w, r18.w
            ge r19.w, r18.w, l(0.000000)
            max r18.w, r8.w, |r18.w|
            movc r18.w, r19.w, r18.w, -r18.w
            max r17.x, -r17.x, l(0.00000010)
            div r17.x, r18.w, r17.x
            min r17.x, |r17.x|, l(131072.000000)
            mov r35.z, r36.z
            dp3 r18.w, r14.xyzx, r35.xyzx
            dp3 r19.w, r28.xyzx, r35.xyzx
            add r19.w, -r36.w, r19.w
            ge r20.w, r19.w, l(0.000000)
            max r19.w, r8.w, |r19.w|
            movc r19.w, r20.w, r19.w, -r19.w
            max r18.w, -r18.w, l(0.00000010)
            div r18.w, r19.w, r18.w
            min r17.x, r17.x, |r18.w|
            mov r36.z, r37.z
            dp3 r18.w, r14.xyzx, r36.xyzx
            dp3 r19.w, r28.xyzx, r36.xyzx
            add r19.w, -r37.w, r19.w
            ge r20.w, r19.w, l(0.000000)
            max r19.w, r8.w, |r19.w|
            movc r19.w, r20.w, r19.w, -r19.w
            max r18.w, -r18.w, l(0.00000010)
            div r18.w, r19.w, r18.w
            min r17.x, r17.x, |r18.w|
            mov r37.z, r38.z
            dp3 r18.w, r14.xyzx, r37.xyzx
            dp3 r19.w, r28.xyzx, r37.xyzx
            add r19.w, -r38.w, r19.w
            ge r20.w, r19.w, l(0.000000)
            max r19.w, r8.w, |r19.w|
            movc r19.w, r20.w, r19.w, -r19.w
            max r18.w, -r18.w, l(0.00000010)
            div r18.w, r19.w, r18.w
            min r17.x, r17.x, |r18.w|
            mov r38.z, r39.x
            dp3 r18.w, r14.xyzx, r38.xyzx
            dp3 r19.w, r28.xyzx, r38.xyzx
            add r19.w, -r39.y, r19.w
            ge r20.w, r19.w, l(0.000000)
            max r19.w, r8.w, |r19.w|
            movc r19.w, r20.w, r19.w, -r19.w
            max r18.w, -r18.w, l(0.00000010)
            div r18.w, r19.w, r18.w
            min r17.x, r17.x, |r18.w|
            mov r40.zw, r39.zzzw
            dp3 r18.w, r14.zxyz, r40.xzwx
            dp3 r19.w, r28.zxyz, r40.xzwx
            add r19.w, -r40.y, r19.w
            ge r20.w, r19.w, l(0.000000)
            max r19.w, r8.w, |r19.w|
            movc r19.w, r20.w, r19.w, -r19.w
            max r18.w, -r18.w, l(0.00000010)
            div r18.w, r19.w, r18.w
            min r17.x, r17.x, |r18.w|
            mov r26.x, r32.w
            mov r26.yz, r33.zzwz
            add r26.xyz, r28.xyzx, r26.xyzx
            mad r26.xyz, r14.xyzx, r17.xxxx, r26.xyzx
            dp3 r18.w, r26.xyzx, r26.xyzx
            sqrt r18.w, r18.w
            div r17.x, r17.x, r18.w
            add r17.x, r17.x, r17.x
            sqrt r17.x, r17.x
            mad r17.x, r0.z, l(5.000000), r17.x
            add r17.x, r17.x, l(-0.844800)
            mov r25.y, r30.z
            mov r25.z, r31.x
            dp3 r35.x, r26.xyzx, r25.xyzx
            mov r27.xy, r30.xwxx
            mov r27.z, r31.w
            dp3 r35.y, r26.xyzx, r27.xyzx
            mov r31.x, r30.y
            dp3 r35.z, r26.xyzx, r31.xyzx
            ubfe r18.w, l(9), l(16), r27.w
            utof r35.w, r18.w
            sample_l_indexable(texturecubearray)(float,float,float,float) r26.xyz, r35.xyzw, t8.xyzw, s2, r17.x
            dp3 r30.x, r28.xyzx, r25.xyzx
            dp3 r30.y, r28.xyzx, r27.xyzx
            dp3 r30.z, r28.xyzx, r31.xyzx
            mad_sat r28.xyz, r30.xyzx, r32.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
            mov r33.z, r34.x
            mad r28.xyz, r28.xyzx, r33.xyzx, r34.yzwy
            dp3 r35.x, r1.xyzx, r25.xyzx
            dp3 r35.y, r1.xyzx, r27.xyzx
            dp3 r35.z, r1.xyzx, r31.xyzx
            lt r25.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r35.xyzx
            movc r18.z, r25.x, l(0), l(0.500000)
            add r27.xyz, r18.xyzx, r28.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r27.xyz, r27.xyzx, t17.xyzw, s4, l(0.000000)
            mul r29.xzw, r35.xxyz, r35.xxyz
            mul r29.xzw, r5.yyyy, r29.xxzw
            movc r19.z, r25.y, l(0), l(0.500000)
            add r25.xyw, r19.xyxz, r28.xyxz
            sample_l_indexable(texture3d)(float,float,float,float) r25.xyw, r25.xywx, t18.xywz, s4, l(0.000000)
            mul r25.xyw, r29.zzzz, r25.xyxw
            mad r25.xyw, r27.xyxz, r29.xxxx, r25.xyxw
            movc r20.z, r25.z, l(0), l(0.500000)
            add r27.xyz, r20.xyzx, r28.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r27.xyz, r27.xyzx, t19.xyzw, s4, l(0.000000)
            mad r25.xyz, r27.xyzx, r29.wwww, r25.xywx
            sample_l_indexable(texturecubearray)(float,float,float,float) r27.xyz, r35.xyzw, t8.xyzw, s2, l(6.000000)
            mul r28.xyz, r25.xyzx, r27.xyzx
            dp3 r17.x, r28.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r16.xyz, r25.xyzx, r27.xyzx, r16.xyzx
            mul r18.z, r9.w, r17.x
            mul r25.xyz, r5.yyyy, r26.xyzx
            dp3 r5.y, r25.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r5.y, r9.w, r17.x, r5.y
            div r5.y, r18.z, r5.y
            mad r24.xyz, r25.xyzx, r5.yyyy, r24.xyzx
          endif 
        endif 
      endif 
    endloop 
    mov r23.xyzw, r24.xyzw
    mov r12.yzw, r16.xxyz
    iadd r13.z, r13.z, l(32)
  endloop 
  mov r22.xyzw, r23.zxyw
  mov r21.xyz, r12.yzwy
  mov r22.xyzw, r22.yzxw
else 
  mov r22.x, r21.w
endif 
max r0.z, r22.w, l(1.000000)
rcp r0.z, r0.z
mov_sat r22.w, r22.w
mul r12.yzw, r0.zzzz, r21.xxyz
mul r13.yzw, r0.zzzz, r22.xxyz
lt r5.x, r22.w, l(0.990000)
if_nz r5.x
  add r5.x, -r22.w, l(1.000000)
  mul r5.y, r5.x, cb2[19].x
  add r15.xyz, v7.xyzx, -cb2[35].xyzx
  mul r16.x, r15.x, cb2[35].w
  mul r16.yz, r15.yyzy, cb2[36].xxyx
  add_sat r15.xyz, r16.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mul r16.xy, r15.xyxx, cb2[36].zwzz
  mul r16.z, r15.z, cb2[37].x
  add r15.xyz, r16.xyzx, cb2[37].yzwy
  lt r16.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r1.xyzx
  movc r16.xyz, r16.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
  mov r16.w, l(0)
  add r17.xyz, r15.xyzx, r16.wwxw
  sample_l_indexable(texture3d)(float,float,float,float) r17.xyz, r17.xyzx, t17.xyzw, s4, l(0.000000)
  mul r18.xyz, r1.xyzx, r1.xyzx
  mul r18.xyz, r5.yyyy, r18.xyzx
  add r19.xyz, r15.xyzx, r16.wwyw
  sample_l_indexable(texture3d)(float,float,float,float) r19.xyz, r19.xyzx, t18.xyzw, s4, l(0.000000)
  mul r19.xyz, r18.yyyy, r19.xyzx
  mad r17.xyz, r17.xyzx, r18.xxxx, r19.xyzx
  add r15.xyz, r15.xyzx, r16.wwzw
  sample_l_indexable(texture3d)(float,float,float,float) r15.xyz, r15.xyzx, t19.xyzw, s4, l(0.000000)
  mad r15.xyz, r15.xyzx, r18.zzzz, r17.xyzx
  mov r1.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r16.xyz, r1.xyzw, t8.xyzw, s2, l(6.000000)
  mul r15.xyz, r15.xyzx, r16.xyzx
  dp3 r1.w, r15.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  mad r12.yzw, r21.xxyz, r0.zzzz, r15.xxyz
  mov r14.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r14.xyz, r14.xyzw, t8.xyzw, s2, r6.w
  mad r0.z, cb2[19].x, r5.x, -r1.w
  mad r0.z, cb0[14].z, r0.z, r1.w
  mad r13.yzw, r14.xxyz, r0.zzzz, r13.yyzw
endif 
if_nz cb0[19].z
  dp3 r0.z, r2.yzwy, r1.xyzx
  add r0.z, r0.z, r0.z
  mad r14.xyz, r1.xyzx, -r0.zzzz, r2.yzwy
  dp3 r0.z, r2.yzwy, -r1.xyzx
  add r0.z, r0.z, r0.z
  mad r15.xyz, r1.xyzx, r0.zzzz, r2.yzwy
  movc r14.xyz, v8.xxxx, r14.xyzx, r15.xyzx
  if_nz cb0[19].w
    mul r15.xyz, v7.yyyy, cb1[5].xyzx
    mad r15.xyz, v7.xxxx, cb1[4].xyzx, r15.xyzx
    mad r15.xyz, v7.zzzz, cb1[6].xyzx, r15.xyzx
    mul r16.xyz, r14.xyzx, cb0[18].zzzz
    mul r17.xyz, r16.yyyy, cb1[5].xyzx
    mad r16.xyw, r16.xxxx, cb1[4].xyxz, r17.xyxz
    mad r16.xyz, r16.zzzz, cb1[6].xyzx, r16.xywx
    min r0.z, cb0[18].x, l(1000.000000)
    mad r15.xyz, r16.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000), r15.xyzx
    div r0.z, r0.z, cb0[18].z
    mov r17.xyz, r13.yzwy
    mov r18.xyz, r15.xyzx
    mov r1.w, l(0)
    loop 
      itof r5.x, r1.w
      ge r5.x, r5.x, r0.z
      breakc_nz r5.x
      add r18.xyz, r16.xyzx, r18.xyzx
      mul r19.xyz, r18.yyyy, cb1[1].xywx
      mad r19.xyz, r18.xxxx, cb1[0].xywx, r19.xyzx
      mad r19.xyz, r18.zzzz, cb1[2].xywx, r19.xyzx
      add r19.xyz, r19.xyzx, cb1[3].xywx
      max r5.x, |r19.y|, |r19.x|
      lt r5.x, r19.z, r5.x
      if_nz r5.x
        break 
      endif 
      div r5.xy, r19.xyxx, r19.zzzz
      mad r5.xy, r5.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      sample_l_indexable(texture2d)(float,float,float,float) r5.x, r5.xyxx, t22.xyzw, s5, l(1.000000)
      lt r5.y, |r5.x|, r18.z
      ge r6.w, |r5.x|, v0.w
      and r5.y, r5.y, r6.w
      if_nz r5.y
        add r5.x, -|r5.x|, r18.z
        mul r5.x, r5.x, cb0[18].w
        mad r19.xyz, -r5.xxxx, r16.xyzx, r18.xyzx
        mul r20.xyz, r19.yyyy, cb1[1].xywx
        mad r19.xyw, r19.xxxx, cb1[0].xyxw, r20.xyxz
        mad r19.xyz, r19.zzzz, cb1[2].xywx, r19.xywx
        add r19.xyz, r19.xyzx, cb1[3].xywx
        div r5.xy, r19.xyxx, r19.zzzz
        mad r5.xy, r5.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r19.xyz, r5.xyxx, t25.xyzw, s5, l(0.000000)
        mul r19.xyz, r19.xyzx, cb1[85].xxxx
        mov r17.xyz, r19.xyzx
        break 
      endif 
      iadd r1.w, r1.w, l(1)
    endloop 
    mov r13.yzw, r17.xxyz
  else 
    mul r0.z, r4.w, cb0[18].y
    mad r14.xyz, r14.xyzx, r0.zzzz, v7.xyzx
    mul r15.xyz, r14.yyyy, cb1[9].xywx
    mad r14.xyw, r14.xxxx, cb1[8].xyxw, r15.xyxz
    mad r14.xyz, r14.zzzz, cb1[10].xywx, r14.xywx
    add r14.xyz, r14.xyzx, cb1[11].xywx
    div r5.xy, r14.xyxx, r14.zzzz
    max r0.z, |r5.y|, |r5.x|
    mad r5.xy, r5.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r1.w, r5.xyxx, t22.yzwx, s5, l(0.000000)
    ge r1.w, |r1.w|, v0.w
    lt r0.z, r0.z, l(1.000000)
    and r0.z, r0.z, r1.w
    sample_indexable(texture2d)(float,float,float,float) r14.xyz, r5.xyxx, t25.xyzw, s5
    if_nz r0.z
      mul r13.yzw, r14.xxyz, cb1[85].xxxx
    endif 
  endif 
endif 
dp3 r0.z, r1.xyzx, cb2[17].xyzx
mov_sat r1.w, r0.z
movc r5.x, cb0[20].z, |r0.z|, r1.w
ge r5.x, l(0.000000), r5.x
if_nz r5.x
  mov r5.y, l(0)
endif 
if_z r5.x
  mul r14.xyz, v7.yyyy, cb2[29].xyzx
  mad r14.xyz, v7.xxxx, cb2[28].xyzx, r14.xyzx
  mad r14.xyz, v7.zzzz, cb2[30].xyzx, r14.xyzx
  add r14.xyz, r14.xyzx, cb2[31].xyzx
  add r5.x, r14.z, -cb2[17].w
  mad r5.x, -r5.x, l(0.00006104), l(1.000000)
  mov_sat r6.w, r5.x
  eq r6.w, r5.x, r6.w
  if_nz r6.w
    mov r6.w, l(0)
    mov r8.w, l(0)
    loop 
      ge r9.w, r6.w, l(3.000000)
      breakc_nz r9.w
      ftou r9.w, r6.w
      add r10.zw, r14.xxxy, -cb2[r9.w + 20].xxxy
      max r10.z, |r10.w|, |r10.z|
      mul r8.w, r10.z, cb2[r9.w + 20].z
      lt r9.w, r8.w, l(1.000000)
      if_nz r9.w
        break 
      endif 
      add r6.w, r6.w, l(1.000000)
      mov r8.w, l(0)
    endloop 
  else 
    mov r6.w, l(3.000000)
    mov r8.w, l(0)
  endif 
  ge r9.w, r6.w, l(3.000000)
  if_nz r9.w
    mul r15.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
    rcp r16.xz, r15.xxxx
    mov r16.y, -r16.z
    mad r15.xyz, r14.xyxx, r16.xyzx, r15.yzyy
    add r16.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r15.xyz, r15.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r15.xyz, r16.xyzx, r15.xyzx
    mul r10.zw, r15.zzzy, cb2[32].xxxx
    round_ni r10.zw, r10.zzzw
    mul r10.w, r10.w, cb2[27].x
    mad r10.z, r10.w, cb2[32].x, r10.z
    ftou r10.z, r10.z
    iadd r10.z, r10.z, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r10.w, r10.z, l(0), t23.xxxx
    and r11.w, r10.w, l(0x40000000)
    ishl r14.w, r10.w, l(2)
    if_z r11.w
      and r11.w, r10.w, l(0x01ffffff)
      iadd r16.x, r10.z, r11.w
      ushr r10.z, r10.w, l(25)
      utof r10.z, r10.z
      mul r15.xyz, r10.zzzz, r15.xyzx
      frc r15.xyz, r15.xyzx
      mul r15.xyz, r15.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
      ftou r15.xyz, r15.xyzx
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.z, r16.x, l(0), t23.xxxx
      ushr r10.zw, r15.zzzy, l(0, 0, 6, 6)
      and r11.w, r16.z, l(0xc0000000)
      iadd r15.w, r16.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.w, r15.w, l(0), t23.xxxx
      movc r10.w, r10.w, r16.z, r15.w
      ushr r15.w, r10.w, l(13)
      movc r10.z, r10.z, r15.w, r10.w
      and r10.z, r10.z, l(8191)
      iadd r17.x, r10.z, r16.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.z, r17.x, l(0), t23.xxxx
      mov r16.y, l(0)
      mov r17.y, l(1)
      movc r17.xyz, r11.wwww, r16.xyzx, r17.xyzx
      movc r18.yz, r11.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r10.zw, r15.zzzy, r18.yyyy
      and r10.zw, r10.zzzw, l(0, 0, 1, 1)
      and r15.w, r17.z, l(0xc0000000)
      iadd r16.w, r17.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.w, r16.w, l(0), t23.xxxx
      movc r10.w, r10.w, r17.z, r16.w
      ushr r16.w, r10.w, l(13)
      movc r10.z, r10.z, r16.w, r10.w
      and r10.z, r10.z, l(8191)
      iadd r18.x, r10.z, r17.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.w, r18.x, l(0), t23.xxxx
      movc r17.xyz, r15.wwww, r17.xyzx, r18.xzwx
      movc r16.xyz, r11.wwww, r16.xyzx, r17.xyzx
      and r10.z, r16.z, l(0xc0000000)
      if_z r10.z
        iadd r10.z, -r16.y, l(6)
        ushr r10.zw, r15.zzzy, r10.zzzz
        or r11.w, r16.z, l(0x40000000)
        bfi r10.w, l(1), l(1), r10.w, l(0)
        bfi r10.z, l(1), l(0), r10.z, r10.w
        imul null, r10.z, r10.z, l(10)
        ushr r10.z, r11.w, r10.z
        and r10.z, r10.z, l(1023)
        iadd r17.x, r10.z, r16.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.w, r17.x, l(0), t23.xxxx
        iadd r17.yz, r16.yyyy, l(0, 1, 2, 0)
        iadd r10.z, -r17.y, l(6)
        ushr r10.zw, r15.zzzy, r10.zzzz
        and r11.w, r17.w, l(0xc0000000)
        or r15.w, r17.w, l(0x40000000)
        bfi r10.w, l(1), l(1), r10.w, l(0)
        bfi r10.z, l(1), l(0), r10.z, r10.w
        imul null, r10.z, r10.z, l(10)
        ushr r10.z, r15.w, r10.z
        and r10.z, r10.z, l(1023)
        iadd r18.x, r10.z, r17.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.x, l(0), t23.xxxx
        mov r18.y, r17.z
        movc r18.xyz, r11.wwww, r17.xywx, r18.xyzx
        iadd r10.z, -r18.y, l(6)
        ushr r10.zw, r15.zzzy, r10.zzzz
        and r15.w, r18.z, l(0xc0000000)
        or r16.y, r18.z, l(0x40000000)
        bfi r10.w, l(1), l(1), r10.w, l(0)
        bfi r10.z, l(1), l(0), r10.z, r10.w
        imul null, r10.z, r10.z, l(10)
        ushr r10.z, r16.y, r10.z
        and r10.z, r10.z, l(1023)
        iadd r19.x, r10.z, r18.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.y, r19.x, l(0), t23.xxxx
        movc r10.zw, r15.wwww, r18.xxxz, r19.xxxy
        movc r16.xz, r11.wwww, r17.xxwx, r10.zzwz
      endif 
      and r10.z, r16.z, l(0xc0000000)
      if_z r10.z
        ubfe r10.w, l(14), l(15), r16.z
        utof r10.w, r10.w
        mul r10.w, r10.w, cb2[27].w
        mul r10.w, r10.w, l(0.00006104)
        and r16.yw, r16.zzzz, l(0, 0x00007fff, 0, 0x20000000)
        utof r11.w, r16.y
        mul r11.w, r11.w, cb2[27].w
        mul r11.w, r11.w, l(0.00003052)
        and r15.w, r15.y, l(3)
        iadd r15.w, r15.w, r16.x
        iadd r15.w, r15.w, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.w, r15.w, l(0), t23.xxxx
        bfi r17.xyz, l(2, 2, 1, 0), l(3, 1, 4, 0), r15.xyzx, l(0, 0, 0, 0)
        ushr r15.x, r15.w, r17.x
        and r15.x, r15.x, l(255)
        utof r15.x, r15.x
        mul r15.x, r11.w, r15.x
        mad r15.x, r15.x, l(0.00392157), r10.w
        iadd r15.y, r17.y, l(1)
        ubfe r15.z, l(1), l(1), r15.z
        iadd r15.y, r15.z, r15.y
        iadd r15.y, r15.y, r16.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.y, r15.y, l(0), t23.xxxx
        ushr r15.y, r15.y, r17.z
        and r15.y, r15.y, l(0x0000ffff)
        utof r15.y, r15.y
        mul r11.w, r11.w, r15.y
        mad r10.w, r11.w, l(0.00001526), r10.w
        movc r14.w, r16.w, r15.x, r10.w
      else 
        and r10.w, r16.z, l(0x80000000)
        iadd r11.w, r16.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r11.w, r11.w, l(0), t23.xxxx
        movc r10.w, r10.w, r11.w, l(0)
        ishl r11.w, r16.z, l(2)
        ushr r15.x, r10.w, l(16)
        f16tof32 r15.x, r15.x
        and r10.w, r10.w, l(0x0000ffff)
        f16tof32 r10.w, r10.w
        mad r11.w, r14.x, r15.x, r11.w
        mad r10.w, r14.y, r10.w, r11.w
        movc r14.w, r10.z, r10.w, r14.w
      endif 
    endif 
    mad r10.z, -cb2[27].z, l(2.000000), r14.z
    lt r10.z, r14.w, r10.z
    movc r5.y, r10.z, l(0), l(1.000000)
  endif 
  if_z r9.w
    if_z cb2[58].y
      ftou r9.w, r6.w
      add r10.zw, r14.xxxy, -cb2[r9.w + 20].xxxy
      mul r10.zw, r10.zzzw, cb2[r9.w + 20].zzzz
      mad r15.xy, r10.zwzz, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r9.w, cb2[26].y
      add r15.z, r6.w, r9.w
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r9.w, r15.xyzx, t13.xxxx, s13, r5.x
      sample_l_indexable(texture2darray)(float,float,float,float) r10.z, r15.xyzx, t31.yzxw, s0, l(0.000000)
      add r9.w, r9.w, r10.z
      add_sat r9.w, r9.w, l(-1.000000)
      mul r10.z, r9.w, r9.w
      mul r5.y, r9.w, r10.z
    endif 
    if_nz cb2[58].y
      mov r15.x, -r10.x
      ftou r9.w, r6.w
      add r6.w, r6.w, l(1.000000)
      min r6.w, r6.w, l(2.000000)
      ftou r6.w, r6.w
      add r8.w, -r8.w, l(1.000000)
      mul r8.w, r8.w, l(28.000000)
      ftou r8.w, r8.w
      add r10.zw, r14.xxxy, -cb2[r9.w + 20].xxxy
      mul r10.zw, r10.zzzw, cb2[r9.w + 20].zzzz
      mad r10.zw, r10.zzzw, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
      add r14.xy, r14.xyxx, -cb2[r6.w + 20].xyxx
      mul r14.xy, r14.xyxx, cb2[r6.w + 20].zzzz
      mad r14.xy, r14.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      mov r15.y, r11.x
      mov r15.z, r10.x
      mov r11.w, l(0)
      mov r14.z, l(0)
      loop 
        uge r14.w, r14.z, l(8)
        breakc_nz r14.w
        ult r14.w, r8.w, r14.z
        movc r16.xy, r14.wwww, r14.xyxx, r10.zwzz
        movc r15.w, r14.w, cb2[r6.w + 20].w, cb2[r9.w + 20].w
        movc r14.w, r14.w, r6.w, r9.w
        dp2 r17.x, icb[r14.z + 0].yxyy, r15.xyxx
        dp2 r17.y, icb[r14.z + 0].yxyy, r15.yzyy
        mad r16.xy, r17.xyxx, r15.wwww, r16.xyxx
        iadd r14.w, r14.w, cb2[26].y
        utof r16.z, r14.w
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r14.w, r16.xyzx, t13.xxxx, s13, r5.x
        sample_l_indexable(texture2darray)(float,float,float,float) r15.w, r16.xyzx, t31.yzwx, s0, l(0.000000)
        add r14.w, r14.w, r15.w
        add_sat r14.w, r14.w, l(-1.000000)
        mad r11.w, r14.w, l(0.125000), r11.w
        iadd r14.z, r14.z, l(1)
      endloop 
      mul r5.x, r11.w, r11.w
      mul r5.y, r11.w, r5.x
    endif 
  endif 
endif 
and r5.x, cb2[53].x, l(0x0000ffff)
ult r6.w, l(0), r5.x
lt r8.w, l(0.000000), r5.y
and r6.w, r6.w, r8.w
if_nz r6.w
  iadd r5.x, r5.x, cb2[0].x
  iadd r5.x, r5.x, l(-1)
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r6.w, r5.x, l(52), t12.xxxx
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.xyzw, r5.x, l(68), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r5.x, l(84), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r5.x, l(100), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r5.x, l(116), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r5.x, l(132), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.xyzw, r5.x, l(148), t12.xyzw
  mad r8.w, |r0.z|, l(-0.200000), l(0.400000)
  lt r0.z, r0.z, l(0.000000)
  and r0.z, r0.z, r6.y
  movc r0.z, r0.z, -r8.w, r8.w
  mad r20.xyz, r1.xyzx, r0.zzzz, v7.xyzx
  mov r20.w, l(1.000000)
  dp4 r14.x, r14.xyzw, r20.xyzw
  dp4 r14.y, r15.xyzw, r20.xyzw
  dp4 r0.z, r16.xyzw, r20.xyzw
  dp4 r8.w, r17.xyzw, r20.xyzw
  lt r9.w, r8.w, r0.z
  div r10.zw, r14.xxxy, r8.wwww
  mad r10.zw, r10.zzzw, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
  add r10.zw, r19.zzzw, r10.zzzw
  mul r10.zw, r19.xxxy, r10.zzzw
  div r14.xy, r6.wwww, r18.xzxx
  add r14.zw, -r14.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
  ge r14.zw, r10.zzzw, r14.zzzw
  ge r14.xy, r14.xyxx, r10.zwzz
  or r14.xy, r14.xyxx, r14.zwzz
  or r11.w, r14.y, r14.x
  or r9.w, r9.w, r11.w
  if_z r9.w
    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r9.w, r5.x, l(28), t12.xxxx
    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.xy, r5.x, l(164), t12.xyxx
    mov_sat r10.zw, r10.zzzw
    mad r15.xy, r10.zwzz, r18.xzxx, r18.ywyy
    mul r5.x, r8.w, r14.y
    mad r0.z, r14.x, r8.w, r0.z
    div r0.z, r0.z, r5.x
    max r0.z, r0.z, l(0.00006104)
    and r5.x, r9.w, l(0x0000ffff)
    if_nz cb2[58].y
      mov r14.x, -r10.x
      utof r16.z, r5.x
      mov r14.y, r11.x
      mov r14.z, r10.x
      mov r8.w, l(0)
      mov r9.w, l(0)
      loop 
        ige r10.z, r9.w, l(8)
        breakc_nz r10.z
        dp2 r17.x, icb[r9.w + 0].yxyy, r14.xyxx
        dp2 r17.y, icb[r9.w + 0].yxyy, r14.yzyy
        mad r16.xy, r17.xyxx, r6.wwww, r15.xyxx
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.z, r16.xyzx, t9.xxxx, s13, r0.z
        mad r8.w, r10.z, l(0.125000), r8.w
        iadd r9.w, r9.w, l(1)
      endloop 
    else 
      utof r15.z, r5.x
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r8.w, r15.xyzx, t9.xxxx, s13, r0.z
    endif 
    mul r0.z, r8.w, r8.w
    mul r0.z, r8.w, r0.z
  else 
    mov r0.z, l(1.000000)
  endif 
  mul r5.y, r0.z, r5.y
endif 
lt r0.z, l(0.000000), r1.w
lt r5.x, l(0.000000), r5.y
if_nz r5.x
  if_nz cb2[23].x
    mov r3.w, l(1.000000)
    dp4 r5.x, cb2[24].xyzw, r3.xyzw
    dp4 r3.x, cb2[25].xyzw, r3.xyzw
    frc r14.x, r5.x
    frc r14.y, r3.x
    iadd r3.x, l(-1), cb2[23].x
    utof r14.z, r3.x
    sample_l_indexable(texture2darray)(float,float,float,float) r3.xyz, r14.xyzx, t20.xyzw, s2, l(0.000000)
    add r3.xyz, r3.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
    mad r3.xyz, cb2[23].yyyy, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mul r3.xyz, r3.xyzx, cb2[18].xyzx
  else 
    mov r3.xyz, cb2[18].xyzx
  endif 
  mul r3.xyz, r3.xyzx, r5.yyyy
  add r3.w, r0.y, r1.w
  div r3.w, r1.w, r3.w
  mad r14.xyz, r3.xyzx, r3.wwww, r12.yzwy
  mad r15.xyz, -v7.xyzx, r6.zzzz, cb2[17].xyzx
  dp3 r3.w, r15.xyzx, r15.xyzx
  rsq r3.w, r3.w
  mul r15.xyz, r3.wwww, r15.xyzx
  dp3_sat r3.w, r1.xyzx, r15.xyzx
  dp3_sat r5.x, r15.xyzx, r9.xyzx
  mul r5.y, r3.w, r3.w
  mad r6.zw, r5.yyyy, cb0[12].xxxz, l(0.000000, 0.000000, 1.000000, 1.000000)
  mul r6.zw, r6.zzzw, r6.zzzw
  div r6.zw, cb0[12].yyyw, r6.zzzw
  mul r6.zw, r3.wwww, r6.zzzw
  mul r3.w, r5.x, l(4.000000)
  div r5.xy, r6.zwzz, r3.wwww
  mul r5.xy, r5.xyxx, cb0[13].xyxx
  mul r15.xyz, r3.xyzx, r5.xxxx
  mad r15.xyz, r15.xyzx, r1.wwww, r13.yzwy
  mul r3.xyz, r3.xyzx, r5.yyyy
  mad r3.xyz, r3.xyzx, r1.wwww, r15.xyzx
else 
  mov r14.xyz, r12.yzwy
  mov r3.xyz, r13.yzwy
endif 
movc r12.yzw, r0.zzzz, r14.xxyz, r12.yyzw
movc r3.xyz, r0.zzzz, r3.xyzx, r13.yzwy
mov r14.x, -r10.x
mov r15.xy, l(0,0,0,0)
mov r16.w, l(0)
mov r17.xyz, v7.xyzx
mov r17.w, l(1.000000)
mov r18.w, l(1.000000)
mov r14.z, r10.x
mov r19.z, l(1.000000)
mov r20.w, l(1.000000)
mov r14.yw, r11.xxxx
mov r10.y, r14.w
mov r21.w, l(1.000000)
mov r11.y, r14.x
mov r11.z, r10.x
mov r22.x, r11.x
mov r22.y, r14.x
mov r22.z, r10.x
mov r13.yzw, r12.yyzw
mov r23.xyz, r3.xyzx
mov r0.z, cb2[58].y
mov r1.w, l(0)
loop 
  uge r3.w, r1.w, cb2[0].x
  breakc_nz r3.w
  ushr r15.z, r1.w, l(5)
  iadd r16.xyz, r4.xyzx, r15.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r3.w, r16.xyzw, t6.yzwx
  mov r16.xyz, r13.yzwy
  mov r24.xyz, r23.xyzx
  mov r5.x, r0.z
  mov r5.y, r3.w
  loop 
    breakc_z r5.y
    firstbit_lo r6.z, r5.y
    ishl r6.w, l(1), r6.z
    and r8.w, r5.y, r6.w
    if_nz r8.w
      xor r5.y, r5.y, r6.w
      iadd r6.z, r1.w, r6.z
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r25.xyzw, r6.z, l(0), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r26.xy, r6.z, l(16), t12.xyxx
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r27.xyzw, r6.z, l(28), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r28.xyzw, r6.z, l(44), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r29.xyzw, r6.z, l(60), t12.zwxy
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r30.xyzw, r6.z, l(76), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r6.z, l(92), t12.zwxy
      ubfe r6.w, l(3), l(24), r27.x
      switch r6.w
        case l(4)
        lt r6.w, l(0.000000), r31.x
        mov r32.x, r30.w
        mov r32.yz, r31.zzwz
        mad r33.xyz, -r32.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r25.xyzx
        add r34.xyz, r33.xyzx, -v7.xyzx
        dp3 r8.w, r32.xyzx, r34.xyzx
        div_sat r8.w, -r8.w, r31.x
        mad r32.xyz, r8.wwww, r32.xyzx, r33.xyzx
        movc r32.xyz, r6.wwww, r32.xyzx, r25.xyzx
        add r32.xyz, r32.xyzx, -v7.xyzx
        dp3 r6.w, r32.xyzx, r32.xyzx
        rsq r8.w, r6.w
        mul r33.xyz, r8.wwww, r32.xyzx
        dp3 r9.w, r1.xyzx, r33.xyzx
        mov_sat r10.z, r9.w
        movc r10.z, cb0[20].z, |r9.w|, r10.z
        lt r10.w, l(0.000000), r10.z
        if_nz r10.w
          sqrt r10.w, r6.w
          mul r11.w, r28.y, r28.y
          div r6.w, r11.w, r6.w
          min r6.w, r6.w, l(1.000000)
          mad_sat r11.w, r10.w, r27.y, r27.z
          mad_sat r10.w, r10.w, r27.w, r28.x
          mul r15.z, r11.w, r11.w
          mad r11.w, r11.w, l(-2.000000), l(3.000000)
          mul r11.w, r11.w, r15.z
          mul r6.w, r6.w, r11.w
          mul r11.w, r10.w, r10.w
          mad r10.w, r10.w, l(-2.000000), l(3.000000)
          mul r10.w, r10.w, r11.w
          mul r6.w, r6.w, r10.w
          lt r10.w, l(0.000000), r6.w
          if_nz r10.w
            ubfe r15.zw, l(0, 0, 3, 4), l(0, 0, 27, 20), r27.xxxx
            ine r10.w, r15.z, l(1)
            if_nz r10.w
              mad r10.w, |r9.w|, l(-0.200000), l(0.400000)
              lt r11.w, r9.w, l(0.000000)
              and r11.w, r6.y, r11.w
              movc r10.w, r11.w, -r10.w, r10.w
              mad r33.xyz, r1.xyzx, r10.wwww, v7.xyzx
              mov r29.z, r30.x
              add r33.xyz, -r29.xyzx, r33.xyzx
              max r10.w, |r33.z|, |r33.y|
              max r10.w, r10.w, |r33.x|
              div r10.w, r30.y, r10.w
              add r10.w, r30.z, r10.w
              dp3 r11.w, r33.xyzx, r33.xyzx
              rsq r11.w, r11.w
              max r10.w, r10.w, l(0.00006104)
              and r15.z, r27.x, l(0x0000ffff)
              utof r34.w, r15.z
              mov r15.z, l(0)
              mov r19.w, l(0)
              loop 
                ige r22.w, r19.w, l(8)
                breakc_nz r22.w
                dp2 r35.y, icb[r19.w + 0].yxyy, r14.xyxx
                dp2 r35.z, icb[r19.w + 0].yxyy, r14.yzyy
                mul r35.yz, r28.zzzz, r35.yyzy
                mul r35.x, r13.x, r35.y
                mul r35.w, r12.x, r35.y
                mad r34.xyz, r33.xyzx, r11.wwww, r35.xzwx
                sample_c_lz_indexable(texturecubearray)(float,float,float,float) r22.w, r34.xyzw, t10.xxxx, s13, r10.w
                mad r15.z, r22.w, l(0.125000), r15.z
                iadd r19.w, r19.w, l(1)
              endloop 
            else 
              mov r15.z, l(1.000000)
            endif 
            mul r6.w, r6.w, r15.z
            if_nz r15.w
              iadd r10.w, r15.w, cb2[0].x
              iadd r10.w, r10.w, l(-1)
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r11.w, r10.w, l(52), t12.xxxx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r10.w, l(100), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r10.w, l(116), t12.xyzw
              mad r15.w, |r9.w|, l(-0.200000), l(0.400000)
              lt r9.w, r9.w, l(0.000000)
              and r9.w, r6.y, r9.w
              movc r9.w, r9.w, -r15.w, r15.w
              mad r18.xyz, r1.xyzx, r9.wwww, v7.xyzx
              dp4 r9.w, r33.xyzw, r18.xyzw
              dp4 r15.w, r34.xyzw, r18.xyzw
              lt r19.w, r15.w, r9.w
              if_z r19.w
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r10.w, l(68), t12.xyzw
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r10.w, l(84), t12.xyzw
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r10.w, l(132), t12.xyzw
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r10.w, l(148), t12.xyzw
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xy, r10.w, l(164), t12.xyxx
                dp4 r33.x, r33.xyzw, r18.xyzw
                dp4 r33.y, r34.xyzw, r18.xyzw
                div r18.xy, r33.xyxx, r15.wwww
                mad r18.xy, r18.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                add r18.xy, r36.zwzz, r18.xyxx
                mul r18.xy, r36.xyxx, r18.xyxx
                div r33.xy, r11.wwww, r35.xzxx
                add r33.zw, -r33.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                ge r33.zw, r18.xxxy, r33.zzzw
                ge r33.xy, r33.xyxx, r18.xyxx
                or r33.xy, r33.xyxx, r33.zwzz
                or r18.z, r33.y, r33.x
                mov_sat r18.xy, r18.xyxx
                mad r33.xy, r18.xyxx, r35.xzxx, r35.ywyy
                mul r18.x, r15.w, r37.y
                mad r9.w, r37.x, r15.w, r9.w
                div r9.w, r9.w, r18.x
              else 
                mov r18.z, l(-1)
              endif 
              or r15.w, r19.w, r18.z
              if_z r15.w
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r10.w, r10.w, l(28), t12.xxxx
                max r9.w, r9.w, l(0.00006104)
                and r10.w, r10.w, l(0x0000ffff)
                if_nz r5.x
                  utof r18.z, r10.w
                  mov r15.w, l(0)
                  mov r19.w, l(0)
                  loop 
                    ige r22.w, r19.w, l(8)
                    breakc_nz r22.w
                    dp2 r34.x, icb[r19.w + 0].yxyy, r14.xwxx
                    dp2 r34.y, icb[r19.w + 0].xyxx, r10.xyxx
                    mad r18.xy, r34.xyxx, r11.wwww, r33.xyxx
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r18.x, r18.xyzx, t9.xxxx, s13, r9.w
                    mad r15.w, r18.x, l(0.125000), r15.w
                    iadd r19.w, r19.w, l(1)
                  endloop 
                else 
                  utof r33.z, r10.w
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r15.w, r33.xyzx, t9.xxxx, s13, r9.w
                endif 
                mul r9.w, r15.w, r15.w
                mul r9.w, r15.w, r9.w
              else 
                mov r9.w, l(1.000000)
              endif 
              mul r6.w, r6.w, r9.w
            endif 
            lt r9.w, l(0.000000), r6.w
            if_nz r9.w
              mov r26.z, r25.w
              mul r18.xyz, r26.zxyz, r6.wwww
              add r6.w, r0.y, r10.z
              div r6.w, r10.z, r6.w
              mad r16.xyz, r18.xyzx, r6.wwww, r16.xyzx
              mad r32.xyz, r32.xyzx, r8.wwww, r9.xyzx
              dp3 r6.w, r32.xyzx, r32.xyzx
              rsq r6.w, r6.w
              mul r32.xyz, r6.wwww, r32.xyzx
              dp3_sat r6.w, r1.xyzx, r32.xyzx
              dp3_sat r8.w, r32.xyzx, r9.xyzx
              mul r9.w, r6.w, r6.w
              mad r32.xy, r9.wwww, cb0[12].xzxx, l(1.000000, 1.000000, 0.000000, 0.000000)
              mul r32.xy, r32.xyxx, r32.xyxx
              div r32.xy, cb0[12].ywyy, r32.xyxx
              mul r32.xy, r6.wwww, r32.xyxx
              mul r6.w, r8.w, l(4.000000)
              div r32.xy, r32.xyxx, r6.wwww
              mul r32.xy, r32.xyxx, cb0[13].xyxx
              mul r32.xzw, r18.xxyz, r32.xxxx
              mad r32.xzw, r32.xxzw, r10.zzzz, r24.xxyz
              mul r18.xyz, r18.xyzx, r32.yyyy
              mad r24.xyz, r18.xyzx, r10.zzzz, r32.xzwx
            endif 
          endif 
        endif 
        break 
        case l(2)
        mov r18.x, r28.w
        mov r18.yz, r29.zzwz
        add r18.xyz, r18.xyzx, -v7.xyzx
        dp3 r6.w, r18.xyzx, r18.xyzx
        rsq r6.w, r6.w
        mul r32.xyz, r6.wwww, r18.xyzx
        dp3 r8.w, r1.xyzx, r32.xyzx
        mov_sat r9.w, r8.w
        movc r9.w, cb0[20].z, |r8.w|, r9.w
        lt r10.z, l(0.000000), r9.w
        if_nz r10.z
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r6.z, l(108), t12.zwxy
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r6.z, l(124), t12.xyzw
          mov r34.xy, r32.xyxx
          mov r34.zw, r33.xxxy
          dp4 r10.z, r34.xyzw, r17.xyzw
          lt r10.w, r10.z, l(1.000000)
          if_nz r10.w
            mov r35.xyz, l(1.000000,1.000000,1.000000,0)
            mov r10.w, l(0)
          else 
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r6.z, l(172), t12.yzwx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r6.z, l(188), t12.wxyz
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r6.z, l(204), t12.xyzw
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r11.w, r6.z, l(236), t12.xxxx
            add r25.xyz, r25.xyzx, -v7.xyzx
            mul r19.w, r28.y, r28.y
            dp3 r22.w, r25.xyzx, r25.xyzx
            div r19.w, r19.w, r22.w
            min r19.w, r19.w, l(1.000000)
            mad_sat r22.w, r10.z, r27.y, r27.z
            mad_sat r23.w, r10.z, r27.w, r28.x
            mul r24.w, r22.w, r22.w
            mad r22.w, r22.w, l(-2.000000), l(3.000000)
            mul r22.w, r22.w, r24.w
            mul r19.w, r19.w, r22.w
            mul r22.w, r23.w, r23.w
            mad r23.w, r23.w, l(-2.000000), l(3.000000)
            mul r22.w, r22.w, r23.w
            mul r19.w, r19.w, r22.w
            mov r29.zw, r30.xxxy
            dp4 r25.x, r29.xyzw, r17.xyzw
            mov r39.xy, r30.zwzz
            mov r39.zw, r31.zzzw
            dp4 r25.y, r39.xyzw, r17.xyzw
            div r19.xy, r25.xyxx, r10.zzzz
            lt r10.z, r36.w, l(0.00048828)
            if_nz r10.z
              mov r37.y, r38.x
              mad_sat r25.xy, |r19.xyxx|, r37.zwzz, r37.xyxx
              mul r27.yz, r25.xxyx, r25.xxyx
              mad r25.xy, r25.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
              mul r25.xy, r25.xyxx, r27.yzyy
              mul r10.z, r25.y, r25.x
            else 
              mov r36.w, r37.y
              mul_sat r36.xyzw, |r19.yyxx|, r36.xyzw
              log r36.xyzw, r36.xyzw
              mul r36.xyzw, r36.xyzw, r37.xxxx
              exp r36.xyzw, r36.xyzw
              add r25.xy, r36.zwzz, r36.xyxx
              log r25.xy, r25.xyxx
              mul r25.xy, r25.xyxx, r38.xxxx
              exp r25.xy, r25.xyxx
              mul r22.w, r25.x, r37.z
              mad r23.w, r37.w, r25.y, l(-1.000000)
              mad r22.w, r37.w, r25.y, -r22.w
              div_sat r22.w, r23.w, r22.w
              mul r23.w, r22.w, r22.w
              mad r22.w, r22.w, l(-2.000000), l(3.000000)
              mul r10.z, r22.w, r23.w
            endif 
            mul r10.w, r10.z, r19.w
            and r10.z, r11.w, l(255)
            if_nz r10.z
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r25.xyz, r6.z, l(220), t12.xyzx
              dp3 r11.w, r38.yzwy, r19.xyzx
              dp3 r19.x, r25.xyzx, r19.xyzx
              frc r25.x, r11.w
              frc r25.y, r19.x
              iadd r10.z, r10.z, l(-1)
              utof r25.z, r10.z
              sample_l_indexable(texture2darray)(float,float,float,float) r35.xyz, r25.xyzx, t20.xyzw, s2, l(0.000000)
            else 
              mov r35.xyz, l(1.000000,1.000000,1.000000,0)
            endif 
          endif 
          mov r26.w, r25.w
          mul r19.xyw, r26.wxwy, r35.xyxz
          lt r10.z, l(0.000000), r10.w
          if_nz r10.z
            ubfe r25.xy, l(3, 4, 0, 0), l(27, 20, 0, 0), r27.xxxx
            ine r10.z, r25.x, l(1)
            if_nz r10.z
              mad r10.z, |r8.w|, l(-0.200000), l(0.400000)
              lt r11.w, r8.w, l(0.000000)
              and r11.w, r6.y, r11.w
              movc r10.z, r11.w, -r10.z, r10.z
              mad r20.xyz, r1.xyzx, r10.zzzz, v7.xyzx
              mov r32.xy, r31.xyxx
              dp4 r10.z, r32.xyzw, r20.xyzw
              dp4 r11.w, r34.xyzw, r20.xyzw
              ge r22.w, r11.w, r10.z
              if_nz r22.w
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xy, r6.z, l(140), t12.xyxx
                mov r29.zw, r30.xxxy
                dp4 r26.x, r29.xyzw, r20.xyzw
                mov r31.xy, r30.zwzz
                dp4 r26.y, r31.xyzw, r20.xyzw
                div r20.xy, r26.xyxx, r11.wwww
                mad_sat r20.xy, r20.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                mad r20.xy, r20.xyxx, r33.zxzz, r33.wyww
                div r6.z, r10.z, r11.w
                max r6.z, r6.z, l(0.00006104)
                and r10.z, r27.x, l(0x0000ffff)
                if_nz r5.x
                  utof r26.z, r10.z
                  mov r11.w, l(0)
                  mov r22.w, l(0)
                  loop 
                    ige r23.w, r22.w, l(8)
                    breakc_nz r23.w
                    dp2 r27.x, icb[r22.w + 0].xyxx, r11.xyxx
                    dp2 r27.y, icb[r22.w + 0].yxyy, r11.xzxx
                    mad r26.xy, r27.xyxx, r28.zzzz, r20.xyxx
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.w, r26.xyzx, t9.xxxx, s13, r6.z
                    mad r11.w, r23.w, l(0.125000), r11.w
                    iadd r22.w, r22.w, l(1)
                  endloop 
                else 
                  utof r20.z, r10.z
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r11.w, r20.xyzx, t9.xxxx, s13, r6.z
                endif 
                mul r6.z, r11.w, r11.w
                mul r6.z, r11.w, r6.z
              else 
                mov r6.z, l(1.000000)
              endif 
            else 
              mov r6.z, l(1.000000)
            endif 
            mul r6.z, r6.z, r10.w
            if_nz r25.y
              iadd r10.z, r25.y, cb2[0].x
              iadd r10.z, r10.z, l(-1)
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r10.w, r10.z, l(52), t12.xxxx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r25.xyzw, r10.z, l(68), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r26.xyzw, r10.z, l(84), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r27.xyzw, r10.z, l(100), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r28.xyzw, r10.z, l(116), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r29.xyzw, r10.z, l(132), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r30.xyzw, r10.z, l(148), t12.xyzw
              mad r20.x, |r8.w|, l(-0.200000), l(0.400000)
              lt r8.w, r8.w, l(0.000000)
              and r8.w, r6.y, r8.w
              movc r8.w, r8.w, -r20.x, r20.x
              mad r21.xyz, r1.xyzx, r8.wwww, v7.xyzx
              dp4 r20.x, r25.xyzw, r21.xyzw
              dp4 r20.y, r26.xyzw, r21.xyzw
              dp4 r8.w, r27.xyzw, r21.xyzw
              dp4 r20.z, r28.xyzw, r21.xyzw
              lt r21.x, r20.z, r8.w
              div r20.xy, r20.xyxx, r20.zzzz
              mad r20.xy, r20.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
              add r20.xy, r30.zwzz, r20.xyxx
              mul r20.xy, r30.xyxx, r20.xyxx
              div r21.yz, r10.wwww, r29.xxzx
              add r25.xy, -r21.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
              ge r25.xy, r20.xyxx, r25.xyxx
              ge r21.yz, r21.yyzy, r20.xxyx
              or r21.yz, r21.yyzy, r25.xxyx
              or r21.y, r21.z, r21.y
              or r21.x, r21.x, r21.y
              if_z r21.x
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r21.x, r10.z, l(28), t12.xxxx
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r21.yz, r10.z, l(164), t12.xxyx
                mov_sat r20.xy, r20.xyxx
                mad r25.xy, r20.xyxx, r29.xzxx, r29.ywyy
                mul r10.z, r20.z, r21.z
                mad r8.w, r21.y, r20.z, r8.w
                div r8.w, r8.w, r10.z
                max r8.w, r8.w, l(0.00006104)
                and r10.z, r21.x, l(0x0000ffff)
                if_nz r5.x
                  utof r20.z, r10.z
                  mov r21.xy, l(0,0,0,0)
                  loop 
                    ige r21.z, r21.y, l(8)
                    breakc_nz r21.z
                    dp2 r26.x, icb[r21.y + 0].xyxx, r22.xyxx
                    dp2 r26.y, icb[r21.y + 0].yxyy, r22.xzxx
                    mad r20.xy, r26.xyxx, r10.wwww, r25.xyxx
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r20.x, r20.xyzx, t9.xxxx, s13, r8.w
                    mad r21.x, r20.x, l(0.125000), r21.x
                    iadd r21.y, r21.y, l(1)
                  endloop 
                else 
                  utof r25.z, r10.z
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.x, r25.xyzx, t9.xxxx, s13, r8.w
                endif 
                mul r8.w, r21.x, r21.x
                mul r8.w, r21.x, r8.w
              else 
                mov r8.w, l(1.000000)
              endif 
              mul r6.z, r6.z, r8.w
            endif 
            lt r8.w, l(0.000000), r6.z
            if_nz r8.w
              mul r19.xyw, r19.xyxw, r6.zzzz
              add r6.z, r0.y, r9.w
              div r6.z, r9.w, r6.z
              mad r16.xyz, r19.xywx, r6.zzzz, r16.xyzx
              mad r18.xyz, r18.xyzx, r6.wwww, r9.xyzx
              dp3 r6.z, r18.xyzx, r18.xyzx
              rsq r6.z, r6.z
              mul r18.xyz, r6.zzzz, r18.xyzx
              dp3_sat r6.z, r1.xyzx, r18.xyzx
              dp3_sat r6.w, r18.xyzx, r9.xyzx
              mul r8.w, r6.z, r6.z
              mad r10.zw, r8.wwww, cb0[12].xxxz, l(0.000000, 0.000000, 1.000000, 1.000000)
              mul r10.zw, r10.zzzw, r10.zzzw
              div r10.zw, cb0[12].yyyw, r10.zzzw
              mul r10.zw, r6.zzzz, r10.zzzw
              mul r6.z, r6.w, l(4.000000)
              div r6.zw, r10.zzzw, r6.zzzz
              mul r6.zw, r6.zzzw, cb0[13].xxxy
              mul r18.xyz, r6.zzzz, r19.xywx
              mad r18.xyz, r18.xyzx, r9.wwww, r24.xyzx
              mul r19.xyw, r6.wwww, r19.xyxw
              mad r24.xyz, r19.xywx, r9.wwww, r18.xyzx
            endif 
          endif 
        endif 
        break 
        default 
        break 
      endswitch 
    endif 
  endloop 
  mov r13.yzw, r16.xxyz
  mov r23.xyz, r24.xyzx
  iadd r1.w, r1.w, l(32)
endloop 
sample_indexable(texture2d)(float,float,float,float) r3.xyzw, r5.zwzz, t0.xyzw, s1
add r0.y, r4.w, l(1.000000)
log r0.y, r0.y
mul r0.y, r0.y, cb0[13].w
min r0.y, r0.y, l(500.000000)
mad r0.yz, r0.yyyy, r1.xxyx, v0.xxyx
add r1.xy, cb1[44].xyxx, l(-1.000000, -1.000000, 0.000000, 0.000000)
max r0.yz, r0.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
min r0.yz, r1.xxyx, r0.yyzy
ftoi r1.xy, r0.yzyy
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r1.x, r1.xyzw, t24.xyzw
ge r1.y, r1.x, l(0.984375)
mul r1.z, r1.x, l(1.01587307)
mad r1.x, r1.x, l(64.000000), l(-63.000000)
movc r1.x, r1.y, r1.x, r1.z
max r1.x, r1.x, l(0.00000001)
rcp r1.x, r1.x
lt r0.x, r0.x, r1.x
mul r0.yz, r0.yyzy, cb1[44].zzwz
sample_indexable(texture2d)(float,float,float,float) r1.xyz, r0.yzyy, t25.xyzw, s6
if_z r0.x
  ftoi r9.xy, v0.xyxx
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r1.xyz, r9.xyzw, t25.xyzw
endif 
mul r0.xyz, r1.xyzx, cb1[85].xxxx
mad r1.w, r4.w, l(2.000000), l(1.000000)
log r1.w, r1.w
mul r4.x, r1.w, l(0.08333334)
mov r4.y, l(0)
sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r4.xyxx, t26.xyzw, s5
mul r4.xyz, r0.xyzx, r4.xyzx
mul r1.w, r3.w, r4.w
mad r3.xyz, r3.xyzx, r13.yzwy, -r4.xyzx
mad r3.xyz, r1.wwww, r3.xyzx, r4.xyzx
mad r1.xyz, -r1.xyzx, cb1[85].xxxx, r3.xyzx
mad r0.xyz, r6.xxxx, r1.xyzx, r0.xyzx
mad r1.xyz, r8.xyzx, r13.yzwy, -r0.xyzx
mad r0.xyz, r7.xxxx, r1.xyzx, r0.xyzx
mad r1.xyz, r23.xyzx, r0.wwww, r7.yzwy
add r0.w, -r5.z, l(1.000000)
mul r1.w, r0.w, r0.w
mul r1.w, r1.w, r1.w
mul r0.w, r0.w, r1.w
mad r0.w, r0.w, l(0.980000), l(0.020000)
add r1.xyz, -r0.xyzx, r1.xyzx
mad r0.xyz, r0.wwww, r1.xyzx, r0.xyzx
lt r0.w, l(0.000000), cb2[9].z
if_nz r0.w
  sqrt r0.w, r2.x
  lt r1.x, l(0.000000), cb2[13].w
  if_nz r1.x
    mad r1.xy, r0.wwww, cb2[15].xyxx, cb2[14].zwzz
    mul r1.xy, r1.xyxx, cb2[16].xyxx
    lt r1.z, l(0.010000), |v7.z|
    mul r3.xy, v7.zzzz, cb2[15].zwzz
    mul r3.zw, r3.xxxy, l(0.000000, 0.000000, -1.442695, -1.442695)
    exp r3.zw, r3.zzzw
    add r3.zw, -r3.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    div r3.xy, r3.zwzz, r3.xyxx
    mul r3.xy, r1.xyxx, r3.xyxx
    movc r1.xy, r1.zzzz, r3.xyxx, r1.xyxx
    mul r1.xzw, r1.xxxx, cb2[12].xxyz
    exp r1.xzw, r1.xxzw
    mul r3.xyz, r1.yyyy, cb2[12].xyzx
    exp r3.xyz, r3.xyzx
    add r3.xyz, -r1.xzwx, r3.xyzx
    mad r1.xyz, cb2[13].wwww, r3.xyzx, r1.xzwx
  else 
    mad r1.w, r0.w, cb2[15].x, cb2[14].z
    mul r1.w, r1.w, cb2[16].x
    lt r3.x, l(0.010000), |v7.z|
    mul r3.y, v7.z, cb2[15].z
    mul r3.z, r3.y, l(-1.442695)
    exp r3.z, r3.z
    add r3.z, -r3.z, l(1.000000)
    div r3.y, r3.z, r3.y
    mul r3.y, r1.w, r3.y
    movc r1.w, r3.x, r3.y, r1.w
    mul r3.xyz, r1.wwww, cb2[12].xyzx
    exp r1.xyz, r3.xyzx
  endif 
  mad r1.xyz, r1.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r1.xyz, r1.xyzx, -cb2[9].zzzz
  dp3 r1.w, cb2[7].yzwy, -r2.yzwy
  mad r3.x, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r3.y, cb2[8].w, -r1.w, l(1.000000)
  mul r3.y, r3.y, r3.y
  mul r3.y, r3.y, l(12.566371)
  div r3.x, r3.x, r3.y
  add r0.w, r0.w, -cb2[10].w
  mul_sat r0.w, r0.w, cb2[11].w
  mul r0.w, r0.w, r3.x
  mov_sat r1.w, r1.w
  mad r1.w, r1.w, r1.w, l(1.000000)
  mad r1.w, r1.w, l(0.05968310), l(-1.000000)
  mad r1.w, cb2[8].z, r1.w, l(1.000000)
  mul r3.xyz, r0.wwww, cb2[11].xyzx
  mad r3.xyz, r1.wwww, cb2[10].xyzx, r3.xyzx
  mul r3.xyz, r3.xyzx, cb2[9].wwww
  add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r3.xyz, r3.xyzx, r4.xyzx
  mad r1.xyz, r0.xyzx, r1.xyzx, r3.xyzx
else 
  mul r0.w, v7.z, cb2[6].x
  mad r1.w, cb2[6].x, v7.z, cb2[5].x
  lt r3.x, |r0.w|, l(0.000100)
  min r3.y, r1.w, l(64.000000)
  mul r3.y, r3.y, l(1.442695)
  exp r3.y, r3.y
  mov_sat r3.z, cb2[6].z
  lt r3.w, r1.w, l(0.000000)
  add r1.w, r1.w, l(1.000000)
  movc r1.w, r3.w, r3.y, r1.w
  add r1.w, r1.w, -cb2[6].z
  movc r0.w, r3.x, l(1.000000), r0.w
  div r0.w, r1.w, r0.w
  movc r0.w, r3.x, r3.z, r0.w
  mul r0.w, r0.w, cb2[5].z
  sqrt r1.w, r2.x
  mad r0.w, r0.w, r1.w, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  dp3 r1.w, cb2[7].yzwy, r2.yzwy
  mad_sat r1.w, cb2[8].y, r1.w, cb2[8].x
  add r2.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r2.xyzw, r1.wwww, r2.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r2.w
  add r2.xyz, -r0.xyzx, r2.xyzx
  mad r1.xyz, r0.wwww, r2.xyzx, r0.xyzx
endif 
mul r0.xyz, r1.xyzx, cb1[85].yyyy
ge r1.xyz, r0.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.xyz, r0.xyzx, r1.xyzx
min o0.xyz, r0.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
mov o0.w, l(1.000000)
ret 
// Approximately 1921 instruction slots used
