//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:39:46 2021
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float3 specColorTint;              // Offset:  160 Size:    12 [unused]
//   float baseNormalHeight;            // Offset:  172 Size:     4 [unused]
//   float2 glossRange;                 // Offset:  176 Size:     8 [unused]
//   float2 normalMapScale;             // Offset:  184 Size:     8
//   float4 specularLobeRoughnessControl;// Offset:  192 Size:    16
//   float4 lobeWeightingThicknessRefraction;// Offset:  208 Size:    16
//   float3 normalAdjustAndGloss;       // Offset:  224 Size:    12
//   float4 decalTint;                  // Offset:  240 Size:    16 [unused]
//   float2 opacityScale;               // Offset:  256 Size:     8
//   float invZFeatherDepth;            // Offset:  264 Size:     4 [unused]
//   float2 normalsFlowScaleMin;        // Offset:  272 Size:     8 [unused]
//   float4 ssrParams;                  // Offset:  288 Size:    16
//   float translucentShadowOpacity;    // Offset:  304 Size:     4 [unused]
//   bool useFoam;                      // Offset:  308 Size:     4 [unused]
//   bool useSSR;                       // Offset:  312 Size:     4
//   bool useLoopedSSR;                 // Offset:  316 Size:     4
//   bool useSpecularZFeather;          // Offset:  320 Size:     4 [unused]
//   bool scaleNormalsWithFlow;         // Offset:  324 Size:     4 [unused]
//   bool doubleSidedLighting;          // Offset:  328 Size:     4
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4 [unused]
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4
//   uint numDynamicDecals;             // Offset:  924 Size:     4
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for modelInstanceBuffer
// {
//
//   struct ModelInstanceData
//   {
//       
//       uint boneArrayIndex;           // Offset:    0
//       uint shaderConstantSet;        // Offset:    4
//       uint flagsAndPrevFrameIndex;   // Offset:    8
//       uint worldMatrix;              // Offset:   12
//       uint siegeAnimStateOffset;     // Offset:   16
//       uint prevFrameSiegeAnimStateOffset;// Offset:   20
//
//   } $Element;                        // Offset:    0 Size:    24
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for forwardDecalConstants
// {
//
//   struct CoreDecalConstantsPack
//   {
//       
//       uint4 data[8];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   128
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// colorSampler                      sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// normalSampler                     sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// bilinearClamp                     sampler      NA          NA             s5      1 
// pointClamp                        sampler      NA          NA             s6      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// colorMap                          texture  float4          2d             t0      1 
// modelInstanceBuffer               texture  struct         r/o             t4      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// normalMap                         texture  float4          2d            t21      1 
// ifloatZSceneDownsampled           texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// ifloatZScene                      texture  float4          2d            t24      1 
// iResolveScene                     texture  float4          2d            t25      1 
// rColorRamp                        texture  float4          2d            t26      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// visibleDecals                     texture    uint     2darray            t35      1 
// forwardDecalConstants             texture  struct         r/o            t36      1 
// materialTexBC7                    texture  float4     2darray            t42      1 
// materialTexBC3                    texture  float4     2darray            t43      1 
// materialTexMask                   texture  float4     2darray            t45      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    1   x           1     NONE   float       
// TEXCOORD                 0    yz         1     NONE   float    yz 
// TEXCOORD                 4   x           2     NONE    uint   x   
// TEXCOORD                 1   xyz         3     NONE   float   xyz 
// TEXCOORD                 2   xyz         4     NONE   float   xyz 
// TEXCOORD                 3   xyz         5     NONE   float   xyz 
// OFFPOSITION              0   xyz         6     NONE   float   xyz 
// SV_IsFrontFace           0   x           7    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[21], immediateIndexed
dcl_constantbuffer CB1[86], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_structured t4, 24
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2d (float,float,float,float) t26
dcl_resource_texture2darray (float,float,float,float) t31
dcl_resource_texture2darray (uint,uint,uint,uint) t35
dcl_resource_structured t36, 128
dcl_resource_texture2darray (float,float,float,float) t42
dcl_resource_texture2darray (float,float,float,float) t43
dcl_resource_texture2darray (float,float,float,float) t45
dcl_input_ps_siv linear noperspective v0.xyzw, position
dcl_input_ps linear v1.yz
dcl_input_ps constant v2.x
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps_sgv constant v7.x, is_front_face
dcl_output o0.xyzw
dcl_temps 40
ge r0.x, v0.z, l(0.984375)
mul r0.y, v0.z, l(1.01587307)
mad r0.z, v0.z, l(64.000000), l(-63.000000)
movc r0.x, r0.x, r0.z, r0.y
max r0.x, r0.x, l(0.00000001)
rcp r0.x, r0.x
ftou r0.yz, v0.xxyx
deriv_rtx_coarse r1.xyz, v6.xyzx
deriv_rty_coarse r2.xyz, v6.xyzx
iadd r0.w, cb2[0].y, cb2[0].x
ld_structured_indexable(structured_buffer, stride=24)(mixed,mixed,mixed,mixed) r1.w, v2.x, l(8), t4.xxxx
and r3.xy, r1.wwww, l(0x10000000, 0x20000000, 0, 0)
if_nz r3.x
  add r4.xyz, v6.xyzx, cb1[24].xyzx
  mul r1.w, r0.x, l(0.00781250)
  min r1.w, r1.w, l(15.000000)
  ftou r1.w, r1.w
  ushr r5.xy, r0.yzyy, l(6, 6, 0, 0)
  ishl r5.z, r1.w, l(4)
  and r1.w, cb2[57].z, l(-32)
  iadd r2.w, -r1.w, cb2[57].z
  mov r6.xy, l(0,0,0,0)
  mov r7.w, l(0)
  mov r4.w, l(1.000000)
  mov r8.xyzw, l(0,0,0,0)
  mov r3.xzw, l(0,0,0,0)
  mov r5.w, l(0)
  loop 
    uge r6.w, r5.w, cb2[57].z
    breakc_nz r6.w
    ushr r6.z, r5.w, l(5)
    iadd r7.xyz, r5.xyzx, r6.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r6.z, r7.xyzw, t35.yzxw
    ieq r6.w, r1.w, r5.w
    ubfe r7.x, r2.w, l(0), r6.z
    movc r6.z, r6.w, r7.x, r6.z
    iadd r6.w, r0.w, r5.w
    mov r9.xyzw, r8.xyzw
    mov r7.xyz, r3.xzwx
    mov r10.x, r6.z
    loop 
      breakc_z r10.x
      firstbit_lo r10.y, r10.x
      ishl r10.z, l(1), r10.y
      and r10.w, r10.z, r10.x
      if_nz r10.w
        xor r10.x, r10.z, r10.x
        iadd r10.z, r6.w, r10.y
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r11.xyzw, r10.z, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r12.xy, r10.z, l(16), t11.xyxx
        add r11.xyz, r11.xyzx, -v6.xyzx
        mov r12.z, r11.w
        lt r11.xyz, |r11.xyzx|, r12.zxyz
        and r10.z, r11.y, r11.x
        and r10.z, r11.z, r10.z
        if_nz r10.z
          iadd r10.y, r5.w, r10.y
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r11.xyz, r10.y, l(0), t36.xyzx
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r12.xyz, r10.y, l(16), t36.xyzx
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r13.xyz, r10.y, l(32), t36.xyzx
          mov r14.x, r11.x
          mov r14.y, r12.x
          mov r14.z, r13.x
          dp3 r10.z, r14.xyzx, r14.xyzx
          rsq r10.z, r10.z
          mul r15.xyz, r10.zzzz, r14.xyzx
          dp3 r10.z, r15.xyzx, v3.xyzx
          ge r10.z, r10.z, l(0.500000)
          if_nz r10.z
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r15.xyw, r10.y, l(48), t36.xyxz
            mov r14.w, r15.x
            dp4 r14.x, r4.xyzw, r14.xyzw
            mov r16.x, r11.y
            mov r16.y, r12.y
            mov r16.z, r13.y
            mov r16.w, r15.y
            dp4 r14.y, r4.xyzw, r16.xyzw
            mov r15.x, r11.z
            mov r15.y, r12.z
            mov r15.z, r13.z
            dp4 r14.z, r4.xyzw, r15.xyzw
            lt r11.xyz, |r14.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
            and r10.z, r11.y, r11.x
            and r10.z, r11.z, r10.z
            if_nz r10.z
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r11.xyzw, r10.y, l(64), t36.xyzw
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r12.xyzw, r10.y, l(80), t36.xyzw
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r10.z, r10.y, l(108), t36.xxxx
              dp3 r13.x, r1.xyzx, r16.xyzx
              dp3 r13.y, r1.xyzx, r15.xyzx
              dp3 r16.x, r2.xyzx, r16.xyzx
              dp3 r16.y, r2.xyzx, r15.xyzx
              mad r13.zw, r14.yyyz, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
              mul r14.xyz, r13.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
              mul r15.xyz, r16.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
              and r12.yz, r12.yyzy, l(0, 0x0000ffff, 0x0000ffff, 0)
              if_nz r12.y
                ubfe r10.w, l(4), l(24), r12.w
                ishl r10.w, l(1), r10.w
                ushr r13.x, r12.w, l(28)
                ishl r13.x, l(1), r13.x
                ieq r13.y, r12.y, l(4)
                if_nz r13.y
                  and r13.y, r12.w, l(4095)
                  ubfe r14.w, l(12), l(12), r12.w
                  and r15.w, r10.z, l(1023)
                  utof r16.xz, r10.wwww
                  utof r16.y, r13.x
                  mad r17.xy, r13.zwzz, r16.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r17.zw, r16.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r17.xy, r17.zwzz, r17.xyxx
                  utof r18.x, r13.y
                  utof r18.y, r14.w
                  add r17.xy, r17.xyxx, r18.xyxx
                  mul r17.xy, r17.xyxx, cb1[83].xyxx
                  utof r17.z, r15.w
                  mul r18.xyz, r14.zyzz, cb1[83].xyxx
                  mul r18.xyz, r16.xyzx, r18.xyzx
                  mul r19.xyz, r15.zyzz, cb1[83].xyxx
                  mul r16.xyz, r16.xyzx, r19.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r16.xyzw, r17.xyzx, t42.xyzw, s4, r18.xyzx, r16.xyzx
                else 
                  ieq r12.y, r12.y, l(1)
                  if_nz r12.y
                    and r12.y, r12.w, l(4095)
                    ubfe r12.w, l(12), l(12), r12.w
                    and r13.y, r10.z, l(1023)
                    utof r17.xz, r10.wwww
                    utof r17.y, r13.x
                    mad r18.xy, r13.zwzz, r17.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r18.zw, r17.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                    min r18.xy, r18.zwzz, r18.xyxx
                    utof r19.xy, r12.ywyy
                    add r12.yw, r18.xxxy, r19.xxxy
                    mul r18.xy, r12.ywyy, cb1[83].zwzz
                    utof r18.z, r13.y
                    mul r19.xyz, r14.zyzz, cb1[83].zwzz
                    mul r19.xyz, r17.xyzx, r19.xyzx
                    mul r20.xyz, r15.zyzz, cb1[83].zwzz
                    mul r17.xyz, r17.xyzx, r20.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r16.xyzw, r18.xyzx, t43.xyzw, s4, r19.xyzx, r17.xyzx
                  else 
                    mov r16.xyzw, l(1.000000,1.000000,1.000000,1.000000)
                  endif 
                endif 
                mul r11.xyz, r11.xyzx, r16.xyzx
                mul r10.w, r11.w, r16.w
              else 
                mov r11.xyz, l(0,0,0,0)
                mov r10.w, l(0)
              endif 
              ne r12.y, r12.x, l(1.000000)
              add r11.w, r11.w, r10.w
              mad_sat r11.w, r11.w, r12.x, -r12.x
              movc r10.w, r12.y, r11.w, r10.w
              if_nz r12.z
                ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r10.y, r10.y, l(100), t36.xxxx
                ubfe r11.w, l(4), l(24), r10.y
                ishl r11.w, l(1), r11.w
                ushr r12.x, r10.y, l(28)
                ishl r12.x, l(1), r12.x
                ieq r12.y, r12.z, l(2)
                if_nz r12.y
                  and r12.y, r10.y, l(4095)
                  ubfe r12.w, l(12), l(12), r10.y
                  ubfe r13.x, l(10), l(20), r10.z
                  utof r16.xz, r11.wwww
                  utof r16.y, r12.x
                  mad r17.xy, r13.zwzz, r16.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r17.zw, r16.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r17.xy, r17.zwzz, r17.xyxx
                  utof r18.xy, r12.ywyy
                  add r12.yw, r17.xxxy, r18.xxxy
                  mul r17.xy, r12.ywyy, cb1[84].xyxx
                  utof r17.z, r13.x
                  mul r18.xyz, r14.zyzz, cb1[84].xyxx
                  mul r18.xyz, r16.xyzx, r18.xyzx
                  mul r19.xyz, r15.zyzz, cb1[84].xyxx
                  mul r16.xyz, r16.xyzx, r19.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r12.y, r17.xyzx, t45.yxzw, s4, r18.xyzx, r16.xyzx
                else 
                  ieq r12.z, r12.z, l(4)
                  if_nz r12.z
                    and r12.z, r10.y, l(4095)
                    ubfe r12.w, l(12), l(12), r10.y
                    ubfe r13.x, l(10), l(20), r10.z
                    utof r16.xz, r11.wwww
                    utof r16.y, r12.x
                    mad r17.xy, r13.zwzz, r16.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r17.zw, r16.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                    min r17.xy, r17.zwzz, r17.xyxx
                    utof r18.xy, r12.zwzz
                    add r12.zw, r17.xxxy, r18.xxxy
                    mul r17.xy, r12.zwzz, cb1[83].xyxx
                    utof r17.z, r13.x
                    mul r18.xyz, r14.zyzz, cb1[83].xyxx
                    mul r18.xyz, r16.xyzx, r18.xyzx
                    mul r19.xyz, r15.zyzz, cb1[83].xyxx
                    mul r16.xyz, r16.xyzx, r19.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r12.y, r17.xyzx, t42.yxzw, s4, r18.xyzx, r16.xyzx
                  else 
                    and r12.z, r10.y, l(4095)
                    ubfe r10.y, l(12), l(12), r10.y
                    ubfe r10.z, l(10), l(20), r10.z
                    utof r16.xz, r11.wwww
                    utof r16.y, r12.x
                    mad r12.xw, r13.zzzw, r16.xxxy, l(0.500000, 0.000000, 0.000000, 0.500000)
                    add r13.xy, r16.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                    min r12.xw, r12.xxxw, r13.xxxy
                    utof r13.x, r12.z
                    utof r13.yz, r10.yyzy
                    add r12.xz, r12.xxwx, r13.xxyx
                    mul r13.xy, r12.xzxx, cb1[83].zwzz
                    mul r12.xzw, r14.xxyz, cb1[83].zzwz
                    mul r12.xzw, r16.xxyz, r12.xxzw
                    mul r14.xyz, r15.xyzx, cb1[83].zwzz
                    mul r14.xyz, r16.xyzx, r14.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r12.y, r13.xyzx, t43.yxzw, s4, r12.xzwx, r14.xyzx
                  endif 
                endif 
                mad r12.xzw, r12.yyyy, l(0.960000, 0.000000, 0.960000, 0.960000), l(0.040000, 0.000000, 0.040000, 0.040000)
                add_sat r10.y, -r12.y, l(1.000000)
                mul r11.xyz, r10.yyyy, r11.xyzx
              else 
                mov r12.xzw, l(0.040000,0,0.040000,0.040000)
              endif 
              add r10.y, -r10.w, l(1.000000)
              mul r13.xyz, r7.xyzx, r10.yyyy
              mad r7.xyz, r11.xyzx, r10.wwww, r13.xyzx
              mul r11.xyz, r9.xyzx, r10.yyyy
              mad r9.xyz, r12.xzwx, r10.wwww, r11.xyzx
              mad r9.w, r9.w, r10.y, r10.w
            endif 
          endif 
        endif 
      endif 
    endloop 
    mov r8.xyzw, r9.xyzw
    mov r3.xzw, r7.xxyz
    iadd r5.w, r5.w, l(32)
  endloop 
else 
  mov r3.xzw, l(0,0,0,0)
  mov r8.xyzw, l(0,0,0,0)
endif 
if_nz r3.y
  add r4.xyz, v6.xyzx, cb1[24].xyzx
  iadd r1.w, cb2[57].w, cb2[57].z
  mul r2.w, r0.x, l(0.00781250)
  min r2.w, r2.w, l(15.000000)
  ftou r2.w, r2.w
  ushr r5.xy, r0.yzyy, l(6, 6, 0, 0)
  ishl r5.z, r2.w, l(4)
  and r2.w, cb2[57].z, l(-32)
  iadd r3.y, -r2.w, cb2[57].z
  and r5.w, r1.w, l(-32)
  iadd r6.x, r1.w, -r5.w
  mov r7.xy, l(0,0,0,0)
  mov r9.w, l(0)
  mov r4.w, l(1.000000)
  mov r10.xyzw, r8.xyzw
  mov r6.yzw, r3.xxzw
  mov r7.w, r2.w
  loop 
    uge r11.x, r7.w, r1.w
    breakc_nz r11.x
    ushr r7.z, r7.w, l(5)
    iadd r9.xyz, r5.xyzx, r7.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r7.z, r9.xyzw, t35.yzxw
    ieq r9.x, r2.w, r7.w
    bfi r9.y, r3.y, l(0), l(0), r7.z
    movc r7.z, r9.x, r9.y, r7.z
    ieq r9.x, r5.w, r7.w
    ubfe r9.y, r6.x, l(0), r7.z
    movc r7.z, r9.x, r9.y, r7.z
    iadd r9.x, r0.w, r7.w
    mov r11.xyzw, r10.xyzw
    mov r12.xyz, r6.yzwy
    mov r9.y, r7.z
    loop 
      breakc_z r9.y
      firstbit_lo r9.z, r9.y
      ishl r12.w, l(1), r9.z
      and r13.x, r9.y, r12.w
      if_nz r13.x
        xor r9.y, r9.y, r12.w
        iadd r12.w, r9.z, r9.x
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r13.xyzw, r12.w, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r14.xy, r12.w, l(16), t11.xyxx
        add r13.xyz, r13.xyzx, -v6.xyzx
        mov r14.z, r13.w
        lt r13.xyz, |r13.xyzx|, r14.zxyz
        and r12.w, r13.y, r13.x
        and r12.w, r13.z, r12.w
        if_nz r12.w
          iadd r9.z, r7.w, r9.z
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r13.xyz, r9.z, l(0), t36.xyzx
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r14.xyz, r9.z, l(16), t36.xyzx
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r15.xyz, r9.z, l(32), t36.xyzx
          mov r16.x, r13.x
          mov r16.y, r14.x
          mov r16.z, r15.x
          dp3 r12.w, r16.xyzx, r16.xyzx
          rsq r12.w, r12.w
          mul r17.xyz, r12.wwww, r16.xyzx
          dp3 r12.w, r17.xyzx, v3.xyzx
          ge r12.w, r12.w, l(0.500000)
          if_nz r12.w
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r17.xyw, r9.z, l(48), t36.xyxz
            mov r16.w, r17.x
            dp4 r16.x, r4.xyzw, r16.xyzw
            mov r18.x, r13.y
            mov r18.y, r14.y
            mov r18.z, r15.y
            mov r18.w, r17.y
            dp4 r16.y, r4.xyzw, r18.xyzw
            mov r17.x, r13.z
            mov r17.y, r14.z
            mov r17.z, r15.z
            dp4 r16.z, r4.xyzw, r17.xyzw
            lt r13.xyz, |r16.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
            and r12.w, r13.y, r13.x
            and r12.w, r13.z, r12.w
            if_nz r12.w
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r13.xyzw, r9.z, l(64), t36.xyzw
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r14.xyzw, r9.z, l(80), t36.xyzw
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r12.w, r9.z, l(108), t36.xxxx
              dp3 r15.x, r1.xyzx, r18.xyzx
              dp3 r15.y, r1.xyzx, r17.xyzx
              dp3 r18.x, r2.xyzx, r18.xyzx
              dp3 r18.y, r2.xyzx, r17.xyzx
              mad r15.zw, r16.yyyz, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
              mul r16.xyz, r15.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
              mul r17.xyz, r18.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
              and r14.yz, r14.yyzy, l(0, 0x0000ffff, 0x0000ffff, 0)
              if_nz r14.y
                ubfe r15.x, l(4), l(24), r14.w
                ushr r15.y, r14.w, l(28)
                ishl r15.xy, l(1, 1, 0, 0), r15.xyxx
                ieq r16.w, r14.y, l(4)
                if_nz r16.w
                  and r16.w, r14.w, l(4095)
                  ubfe r17.w, l(12), l(12), r14.w
                  and r18.x, r12.w, l(1023)
                  utof r19.xyz, r15.xyxx
                  mad r18.yz, r15.zzwz, r19.zzyz, l(0.000000, 0.500000, 0.500000, 0.000000)
                  add r20.xy, r19.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r18.yz, r18.yyzy, r20.xxyx
                  utof r20.x, r16.w
                  utof r20.y, r17.w
                  add r18.yz, r18.yyzy, r20.xxyx
                  mul r20.xy, r18.yzyy, cb1[83].xyxx
                  utof r20.z, r18.x
                  mul r18.xyz, r16.zyzz, cb1[83].xyxx
                  mul r18.xyz, r19.xyzx, r18.xyzx
                  mul r21.xyz, r17.zyzz, cb1[83].xyxx
                  mul r19.xyz, r19.xyzx, r21.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r18.xyzw, r20.xyzx, t42.xyzw, s4, r18.xyzx, r19.xyzx
                else 
                  ieq r14.y, r14.y, l(1)
                  if_nz r14.y
                    and r14.y, r14.w, l(4095)
                    ubfe r14.w, l(12), l(12), r14.w
                    and r16.w, r12.w, l(1023)
                    utof r19.xyz, r15.xyxx
                    mad r15.xy, r15.zwzz, r19.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r20.xy, r19.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                    min r15.xy, r15.xyxx, r20.xyxx
                    utof r20.xy, r14.ywyy
                    add r14.yw, r15.xxxy, r20.xxxy
                    mul r20.xy, r14.ywyy, cb1[83].zwzz
                    utof r20.z, r16.w
                    mul r21.xyz, r16.zyzz, cb1[83].zwzz
                    mul r21.xyz, r19.xyzx, r21.xyzx
                    mul r22.xyz, r17.zyzz, cb1[83].zwzz
                    mul r19.xyz, r19.xyzx, r22.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r18.xyzw, r20.xyzx, t43.xyzw, s4, r21.xyzx, r19.xyzx
                  else 
                    mov r18.xyzw, l(1.000000,1.000000,1.000000,1.000000)
                  endif 
                endif 
                mul r13.xyz, r13.xyzx, r18.xyzx
                mul r14.y, r13.w, r18.w
              else 
                mov r13.xyz, l(0,0,0,0)
                mov r14.y, l(0)
              endif 
              ne r14.w, r14.x, l(1.000000)
              add r13.w, r13.w, r14.y
              mad_sat r13.w, r13.w, r14.x, -r14.x
              movc r13.w, r14.w, r13.w, r14.y
              if_nz r14.z
                ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r9.z, r9.z, l(100), t36.xxxx
                ubfe r14.x, l(4), l(24), r9.z
                ushr r14.y, r9.z, l(28)
                ishl r14.xy, l(1, 1, 0, 0), r14.xyxx
                ieq r14.w, r14.z, l(2)
                if_nz r14.w
                  and r14.w, r9.z, l(4095)
                  ubfe r15.x, l(12), l(12), r9.z
                  ubfe r15.y, l(10), l(20), r12.w
                  utof r18.xyz, r14.xyxx
                  mad r19.xy, r15.zwzz, r18.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r19.zw, r18.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r19.xy, r19.zwzz, r19.xyxx
                  utof r20.x, r14.w
                  utof r20.y, r15.x
                  add r19.xy, r19.xyxx, r20.xyxx
                  mul r19.xy, r19.xyxx, cb1[84].xyxx
                  utof r19.z, r15.y
                  mul r20.xyz, r16.zyzz, cb1[84].xyxx
                  mul r20.xyz, r18.xyzx, r20.xyzx
                  mul r21.xyz, r17.zyzz, cb1[84].xyxx
                  mul r18.xyz, r18.xyzx, r21.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r14.w, r19.xyzx, t45.yzwx, s4, r20.xyzx, r18.xyzx
                else 
                  ieq r14.z, r14.z, l(4)
                  if_nz r14.z
                    and r14.z, r9.z, l(4095)
                    ubfe r15.x, l(12), l(12), r9.z
                    ubfe r15.y, l(10), l(20), r12.w
                    utof r18.xyz, r14.xyxx
                    mad r19.xy, r15.zwzz, r18.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r19.zw, r18.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                    min r19.xy, r19.zwzz, r19.xyxx
                    utof r20.x, r14.z
                    utof r20.y, r15.x
                    add r19.xy, r19.xyxx, r20.xyxx
                    mul r19.xy, r19.xyxx, cb1[83].xyxx
                    utof r19.z, r15.y
                    mul r20.xyz, r16.zyzz, cb1[83].xyxx
                    mul r20.xyz, r18.xyzx, r20.xyzx
                    mul r21.xyz, r17.zyzz, cb1[83].xyxx
                    mul r18.xyz, r18.xyzx, r21.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r14.w, r19.xyzx, t42.yzwx, s4, r20.xyzx, r18.xyzx
                  else 
                    and r14.z, r9.z, l(4095)
                    ubfe r9.z, l(12), l(12), r9.z
                    ubfe r12.w, l(10), l(20), r12.w
                    utof r18.xyz, r14.xyxx
                    mad r14.xy, r15.zwzz, r18.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r15.xy, r18.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                    min r14.xy, r14.xyxx, r15.xyxx
                    utof r15.x, r14.z
                    utof r15.y, r9.z
                    add r14.xy, r14.xyxx, r15.xyxx
                    mul r14.xy, r14.xyxx, cb1[83].zwzz
                    utof r14.z, r12.w
                    mul r15.xyz, r16.xyzx, cb1[83].zwzz
                    mul r15.xyz, r18.xyzx, r15.xyzx
                    mul r16.xyz, r17.xyzx, cb1[83].zwzz
                    mul r16.xyz, r18.xyzx, r16.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r14.w, r14.xyzx, t43.yzwx, s4, r15.xyzx, r16.xyzx
                  endif 
                endif 
                mad r14.xyz, r14.wwww, l(0.960000, 0.960000, 0.960000, 0.000000), l(0.040000, 0.040000, 0.040000, 0.000000)
                add_sat r9.z, -r14.w, l(1.000000)
                mul r13.xyz, r9.zzzz, r13.xyzx
              else 
                mov r14.xyz, l(0.040000,0.040000,0.040000,0)
              endif 
              add r9.z, -r13.w, l(1.000000)
              mul r15.xyz, r9.zzzz, r12.xyzx
              mad r12.xyz, r13.xyzx, r13.wwww, r15.xyzx
              mul r13.xyz, r9.zzzz, r11.xyzx
              mad r11.xyz, r14.xyzx, r13.wwww, r13.xyzx
              mad r11.w, r11.w, r9.z, r13.w
            endif 
          endif 
        endif 
      endif 
    endloop 
    mov r10.xyzw, r11.xyzw
    mov r6.yzw, r12.xxyz
    iadd r7.w, r7.w, l(32)
  endloop 
  mov r8.xyzw, r10.xyzw
  mov r3.xzw, r6.yyzw
endif 
mov_sat r8.w, r8.w
add r0.w, -r8.w, l(1.000000)
mul r1.xy, v1.yzyy, cb0[11].zwzz
sample_indexable(texture2d)(float,float,float,float) r1.xy, r1.xyxx, t21.xyzw, s3
mad r1.xy, r1.xyxx, cb0[14].xxxx, cb0[14].yyyy
mul r1.yzw, r1.yyyy, v5.xxyz
mad r1.xyz, v4.xyzx, r1.xxxx, r1.yzwy
add r1.xyz, r1.xyzx, v3.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
movc r1.xyz, v7.xxxx, r1.xyzx, -r1.xyzx
dp3 r2.x, v6.xyzx, v6.xyzx
rsq r2.y, r2.x
mul r2.yzw, r2.yyyy, v6.xxyz
dp3_sat r4.z, r1.xyzx, -r2.yzwy
if_nz v7.x
  ftoi r5.xy, v0.xyxx
  mov r5.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.y, r5.xyzw, t24.yxzw
  ge r5.x, r3.y, l(0.984375)
  mul r5.y, r3.y, l(1.01587307)
  mad r3.y, r3.y, l(64.000000), l(-63.000000)
  movc r3.y, r5.x, r3.y, r5.y
  max r3.y, r3.y, l(0.00000001)
  rcp r3.y, r3.y
  add r3.y, r3.y, -v0.w
  max r3.y, r3.y, l(0.000000)
  min r3.y, r3.y, cb0[18].x
  mov r5.x, cb0[16].y
else 
  sqrt r3.y, r2.x
  mov r5.x, cb0[16].x
endif 
ine r5.y, cb0[20].z, l(0)
dp3 r5.z, -v6.xyzx, -v6.xyzx
rsq r5.z, r5.z
mul r6.xyz, r5.zzzz, -v6.xyzx
utof r7.xy, r0.zyzz
dp2 r5.w, r7.yxyy, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r5.w, r5.w
mul r5.w, r5.w, l(52.982918)
frc r5.w, r5.w
mad r5.w, r5.w, l(6.28318548), cb1[70].w
sincos r9.x, r10.x, r5.w
dp2 r5.w, r7.xyxx, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r5.w, r5.w
mul r5.w, r5.w, l(52.982918)
frc r5.w, r5.w
mad r5.w, r5.w, l(6.28318548), cb1[70].w
sincos r7.x, r11.x, r5.w
dp3_sat r5.w, r1.xyzx, r6.xyzx
dp3 r6.w, -r6.xyzx, r1.xyzx
add r6.w, r6.w, r6.w
mad r12.xyz, r1.xyzx, -r6.wwww, -r6.xyzx
add r6.w, -cb0[14].z, l(1.000000)
mul r7.y, r6.w, l(5.000000)
mad r7.z, r6.w, l(5.000000), l(-2.500000)
mul_sat r7.z, r7.z, l(0.400000)
mul r7.z, r7.z, l(100.000000)
mad r9.zw, -r6.wwww, l(0.000000, 0.000000, 10.000000, 5.000000), l(0.000000, 0.000000, 6.857410, 7.085000)
exp r7.w, r9.z
mul r7.w, r5.w, r7.w
mul r7.w, r7.w, l(9.136810)
mul r9.z, r6.w, r7.y
mad r9.z, -r9.z, l(2.015905), r9.w
exp r9.z, r9.z
mul r9.z, r5.w, r9.z
mul r9.z, r9.z, l(9.708090)
max r7.w, r7.w, r9.z
max r7.w, r7.w, l(1.268160)
iadd r9.z, cb2[0].y, -cb2[58].x
mul r9.w, r0.x, l(0.00781250)
min r9.w, r9.w, l(15.000000)
ftou r9.w, r9.w
ushr r13.xy, r0.yzyy, l(6, 6, 0, 0)
ishl r13.z, r9.w, l(4)
and r0.y, r9.z, l(-32)
iadd r0.z, -r0.y, r9.z
and r9.w, cb2[0].y, l(-32)
iadd r10.w, -r9.w, cb2[0].y
mov r14.xy, l(0,0,0,0)
mov r15.w, l(0)
mov r16.yz, l(0,0,1.000000,0)
mov r17.xy, l(0,0,0,0)
mov r4.xw, l(1.000000,0,0,0)
mov r18.xy, l(0,0,0,0)
mov r19.xy, l(0,0,0,0)
mov r20.xyzw, l(0,0,0,0)
mov r21.yzw, l(0,0,0,0)
mov r11.y, r0.y
loop 
  uge r11.z, r11.y, cb2[0].y
  breakc_nz r11.z
  ushr r14.z, r11.y, l(5)
  iadd r15.xyz, r13.xyzx, r14.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r11.z, r15.xyzw, t7.yzxw
  ieq r11.w, r0.y, r11.y
  bfi r13.w, r0.z, l(0), l(0), r11.z
  movc r11.z, r11.w, r13.w, r11.z
  ieq r11.w, r9.w, r11.y
  ubfe r13.w, r10.w, l(0), r11.z
  movc r11.z, r11.w, r13.w, r11.z
  iadd r11.w, r11.y, cb2[0].x
  mov r22.xyzw, r20.xyzw
  mov r23.xyz, r21.yzwy
  mov r13.w, r11.z
  loop 
    breakc_z r13.w
    firstbit_lo r14.z, r13.w
    ishl r14.w, l(1), r14.z
    and r15.x, r13.w, r14.w
    if_nz r15.x
      xor r13.w, r13.w, r14.w
      iadd r14.w, r11.w, r14.z
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r24.xyzw, r14.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r15.xy, r14.w, l(16), t11.xyxx
      add r24.xyz, r24.xyzx, -v6.xyzx
      mov r15.z, r24.w
      lt r15.xyz, |r24.xyzx|, r15.zxyz
      and r14.w, r15.y, r15.x
      and r14.w, r15.z, r14.w
      if_nz r14.w
        iadd r14.z, r11.y, r14.z
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r14.z, l(0), t15.wxyz
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r15.xy, r14.z, l(96), t15.xyxx
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r14.z, l(116), t15.zwxy
        add r26.xyz, -r24.yzwy, v6.xyzx
        and r14.w, r25.w, l(0x0000ffff)
        ubfe r15.z, l(6), l(25), r25.w
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r14.w, l(0), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r14.w, l(16), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r14.w, l(32), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r14.w, l(48), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r14.w, l(64), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r14.w, l(80), t16.xyzw
        dp3 r16.w, r27.xyzx, r26.xyzx
        add_sat r16.w, r27.w, r16.w
        dp3 r17.w, r28.xyzx, r26.xyzx
        add_sat r17.w, r28.w, r17.w
        mul r16.w, r16.w, r17.w
        dp3 r17.w, r29.xyzx, r26.xyzx
        add_sat r17.w, r29.w, r17.w
        mul r16.w, r16.w, r17.w
        dp3 r17.w, r30.xyzx, r26.xyzx
        add_sat r17.w, r30.w, r17.w
        mul r16.w, r16.w, r17.w
        dp3 r17.w, r31.xyzx, r26.xyzx
        add_sat r17.w, r31.w, r17.w
        mul r16.w, r16.w, r17.w
        dp3 r17.w, r32.xyzx, r26.xyzx
        add_sat r17.w, r32.w, r17.w
        mul r16.x, r16.w, r17.w
        and r16.w, r15.x, l(1)
        movc r16.xw, r16.wwww, r16.xxxy, r16.zzzx
        mov r17.w, r15.x
        mov r27.xy, r16.xwxx
        mov r18.w, l(1)
        loop 
          ige r19.w, r18.w, r15.z
          breakc_nz r19.w
          iadd r19.w, r14.w, r18.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r19.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r19.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r19.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r19.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r19.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r19.w, l(80), t16.xyzw
          dp3 r19.w, r28.xyzx, r26.xyzx
          add_sat r19.w, r28.w, r19.w
          mul r19.w, r19.w, r27.x
          dp3 r24.w, r29.xyzx, r26.xyzx
          add_sat r24.w, r29.w, r24.w
          mul r19.w, r19.w, r24.w
          dp3 r24.w, r30.xyzx, r26.xyzx
          add_sat r24.w, r30.w, r24.w
          mul r19.w, r19.w, r24.w
          dp3 r24.w, r31.xyzx, r26.xyzx
          add_sat r24.w, r31.w, r24.w
          mul r19.w, r19.w, r24.w
          dp3 r24.w, r32.xyzx, r26.xyzx
          add_sat r24.w, r32.w, r24.w
          mul r19.w, r19.w, r24.w
          dp3 r24.w, r33.xyzx, r26.xyzx
          add_sat r24.w, r33.w, r24.w
          mul r27.x, r19.w, r24.w
          ushr r26.w, r17.w, l(2)
          ubfe r27.z, l(1), l(2), r17.w
          and r27.w, r26.w, l(2)
          max r28.x, r27.x, r27.y
          mad r19.w, -r19.w, r24.w, l(1.000000)
          mul r19.w, r19.w, r27.y
          movc r4.y, r27.w, r19.w, r28.x
          movc r27.xy, r27.zzzz, r27.xyxx, r4.xyxx
          iadd r18.w, r18.w, l(1)
          mov r17.w, r26.w
        endloop 
        mov_sat r27.y, r27.y
        mul r4.y, r15.y, r27.y
        lt r14.w, l(0.000000), r4.y
        if_nz r14.w
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r14.z, l(16), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r14.z, l(32), t15.yxwz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r14.z, l(48), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r14.z, l(64), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r14.z, l(80), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r14.z, l(132), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r14.z, l(148), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r14.z, l(164), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r14.z, l(180), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r14.z, l(196), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xy, r14.z, l(212), t15.xyxx
          mad r23.z, r27.y, r15.y, r23.z
          mul r4.y, r25.z, r4.y
          mov r25.z, r33.z
          dp3 r14.z, r12.xyzx, r25.xyzx
          dp3 r14.w, r26.xyzx, r25.xyzx
          add r14.w, -r33.w, r14.w
          ge r15.x, r14.w, l(0.000000)
          max r14.w, r7.z, |r14.w|
          movc r14.w, r15.x, r14.w, -r14.w
          max r14.z, -r14.z, l(0.00000010)
          div r14.z, r14.w, r14.z
          min r14.z, |r14.z|, l(131072.000000)
          mov r33.z, r34.z
          dp3 r14.w, r12.xyzx, r33.xyzx
          dp3 r15.x, r26.xyzx, r33.xyzx
          add r15.x, -r34.w, r15.x
          ge r15.y, r15.x, l(0.000000)
          max r15.x, r7.z, |r15.x|
          movc r15.x, r15.y, r15.x, -r15.x
          max r14.w, -r14.w, l(0.00000010)
          div r14.w, r15.x, r14.w
          min r14.z, |r14.w|, r14.z
          mov r34.z, r35.z
          dp3 r14.w, r12.xyzx, r34.xyzx
          dp3 r15.x, r26.xyzx, r34.xyzx
          add r15.x, -r35.w, r15.x
          ge r15.y, r15.x, l(0.000000)
          max r15.x, r7.z, |r15.x|
          movc r15.x, r15.y, r15.x, -r15.x
          max r14.w, -r14.w, l(0.00000010)
          div r14.w, r15.x, r14.w
          min r14.z, |r14.w|, r14.z
          mov r35.z, r36.z
          dp3 r14.w, r12.xyzx, r35.xyzx
          dp3 r15.x, r26.xyzx, r35.xyzx
          add r15.x, -r36.w, r15.x
          ge r15.y, r15.x, l(0.000000)
          max r15.x, r7.z, |r15.x|
          movc r15.x, r15.y, r15.x, -r15.x
          max r14.w, -r14.w, l(0.00000010)
          div r14.w, r15.x, r14.w
          min r14.z, |r14.w|, r14.z
          mov r36.z, r37.x
          dp3 r14.w, r12.xyzx, r36.xyzx
          dp3 r15.x, r26.xyzx, r36.xyzx
          add r15.x, -r37.y, r15.x
          ge r15.y, r15.x, l(0.000000)
          max r15.x, r7.z, |r15.x|
          movc r15.x, r15.y, r15.x, -r15.x
          max r14.w, -r14.w, l(0.00000010)
          div r14.w, r15.x, r14.w
          min r14.z, |r14.w|, r14.z
          mov r38.zw, r37.zzzw
          dp3 r14.w, r12.zxyz, r38.xzwx
          dp3 r15.x, r26.zxyz, r38.xzwx
          add r15.x, -r38.y, r15.x
          ge r15.y, r15.x, l(0.000000)
          max r15.x, r7.z, |r15.x|
          movc r15.x, r15.y, r15.x, -r15.x
          max r14.w, -r14.w, l(0.00000010)
          div r14.w, r15.x, r14.w
          min r14.z, |r14.w|, r14.z
          mov r15.x, r30.w
          mov r15.yz, r31.zzwz
          add r15.xyz, r26.xyzx, r15.xyzx
          mad r15.xyz, r12.xyzx, r14.zzzz, r15.xyzx
          dp3 r14.w, r15.xyzx, r15.xyzx
          sqrt r14.w, r14.w
          div r14.z, r14.z, r14.w
          add r14.z, r14.z, r14.z
          sqrt r14.z, r14.z
          mad r14.z, r6.w, l(5.000000), r14.z
          add r14.z, r14.z, l(-0.844800)
          mov r24.y, r28.z
          mov r24.z, r29.x
          dp3 r33.x, r15.xyzx, r24.xyzx
          mov r25.xy, r28.xwxx
          mov r25.z, r29.w
          dp3 r33.y, r15.xyzx, r25.xyzx
          mov r29.x, r28.y
          dp3 r33.z, r15.xyzx, r29.xyzx
          ubfe r14.w, l(9), l(16), r25.w
          utof r33.w, r14.w
          sample_l_indexable(texturecubearray)(float,float,float,float) r15.xyz, r33.xyzw, t8.xyzw, s2, r14.z
          dp3 r28.x, r26.xyzx, r24.xyzx
          dp3 r28.y, r26.xyzx, r25.xyzx
          dp3 r28.z, r26.xyzx, r29.xyzx
          mad_sat r26.xyz, r28.xyzx, r30.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
          mov r31.z, r32.x
          mad r26.xyz, r26.xyzx, r31.xyzx, r32.yzwy
          dp3 r33.x, r1.xyzx, r24.xyzx
          dp3 r33.y, r1.xyzx, r25.xyzx
          dp3 r33.z, r1.xyzx, r29.xyzx
          lt r24.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r33.xyzx
          movc r17.z, r24.x, l(0), l(0.500000)
          add r25.xyz, r17.xyzx, r26.xyzx
          sample_l_indexable(texture3d)(float,float,float,float) r25.xyz, r25.xyzx, t17.xyzw, s4, l(0.000000)
          mul r27.xzw, r33.xxyz, r33.xxyz
          mul r27.xzw, r4.yyyy, r27.xxzw
          movc r18.z, r24.y, l(0), l(0.500000)
          add r24.xyw, r18.xyxz, r26.xyxz
          sample_l_indexable(texture3d)(float,float,float,float) r24.xyw, r24.xywx, t18.xywz, s4, l(0.000000)
          mul r24.xyw, r27.zzzz, r24.xyxw
          mad r24.xyw, r25.xyxz, r27.xxxx, r24.xyxw
          movc r19.z, r24.z, l(0), l(0.500000)
          add r25.xyz, r19.xyzx, r26.xyzx
          sample_l_indexable(texture3d)(float,float,float,float) r25.xyz, r25.xyzx, t19.xyzw, s4, l(0.000000)
          mad r24.xyz, r25.xyzx, r27.wwww, r24.xywx
          sample_l_indexable(texturecubearray)(float,float,float,float) r25.xyz, r33.xyzw, t8.xyzw, s2, l(6.000000)
          mul r26.xyz, r24.xyzx, r25.xyzx
          dp3 r14.z, r26.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r22.xyz, r24.xyzx, r25.xyzx, r22.xyzx
          mul r14.w, r7.w, r14.z
          mul r15.xyz, r4.yyyy, r15.xyzx
          dp3 r4.y, r15.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r4.y, r7.w, r14.z, r4.y
          div r4.y, r14.w, r4.y
          mov r24.x, r22.w
          mov r24.yz, r23.xxyx
          mad r23.xyw, r15.yzyx, r4.yyyy, r24.yzyx
          mov r22.w, r23.w
        endif 
      endif 
    endif 
  endloop 
  mov r20.xyzw, r22.xyzw
  mov r21.yzw, r23.xxyz
  iadd r11.y, r11.y, l(32)
endloop 
lt r4.x, r21.w, l(1.000000)
if_nz r4.x
  mov r14.xy, l(0,0,0,0)
  mov r15.w, l(0)
  mov r16.yz, l(0,0,1.000000,0)
  mov r17.xy, l(0,0,0,0)
  mov r4.x, l(1.000000)
  mov r18.xy, l(0,0,0,0)
  mov r19.xy, l(0,0,0,0)
  mov r22.x, r20.w
  mov r22.yzw, r21.yyzw
  mov r11.yzw, r20.xxyz
  mov r9.w, r21.w
  mov r10.w, l(0)
  loop 
    uge r13.w, r10.w, r9.z
    breakc_nz r13.w
    ushr r14.z, r10.w, l(5)
    iadd r15.xyz, r13.xyzx, r14.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r13.w, r15.xyzw, t7.yzwx
    ieq r14.z, r0.y, r10.w
    ubfe r14.w, r0.z, l(0), r13.w
    movc r13.w, r14.z, r14.w, r13.w
    iadd r14.z, r10.w, cb2[0].x
    mov r23.xyzw, r22.xyzw
    mov r15.xyz, r11.yzwy
    mov r14.w, r9.w
    mov r16.w, r13.w
    loop 
      breakc_z r16.w
      firstbit_lo r17.w, r16.w
      ishl r18.w, l(1), r17.w
      and r19.w, r16.w, r18.w
      if_nz r19.w
        xor r16.w, r16.w, r18.w
        iadd r18.w, r14.z, r17.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r24.xyzw, r18.w, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r25.xy, r18.w, l(16), t11.xyxx
        add r24.xyz, r24.xyzx, -v6.xyzx
        mov r25.z, r24.w
        lt r24.xyz, |r24.xyzx|, r25.zxyz
        and r18.w, r24.y, r24.x
        and r18.w, r24.z, r18.w
        if_nz r18.w
          iadd r17.w, r10.w, r17.w
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r17.w, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xy, r17.w, l(96), t15.xyxx
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r17.w, l(116), t15.zwxy
          add r27.xyz, -r24.yzwy, v6.xyzx
          and r18.w, r26.w, l(0x0000ffff)
          ubfe r19.w, l(6), l(25), r26.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r18.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r18.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r18.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r18.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r18.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r18.w, l(80), t16.xyzw
          dp3 r24.w, r28.xyzx, r27.xyzx
          add_sat r24.w, r28.w, r24.w
          dp3 r25.z, r29.xyzx, r27.xyzx
          add_sat r25.z, r29.w, r25.z
          mul r24.w, r24.w, r25.z
          dp3 r25.z, r30.xyzx, r27.xyzx
          add_sat r25.z, r30.w, r25.z
          mul r24.w, r24.w, r25.z
          dp3 r25.z, r31.xyzx, r27.xyzx
          add_sat r25.z, r31.w, r25.z
          mul r24.w, r24.w, r25.z
          dp3 r25.z, r32.xyzx, r27.xyzx
          add_sat r25.z, r32.w, r25.z
          mul r24.w, r24.w, r25.z
          dp3 r25.z, r33.xyzx, r27.xyzx
          add_sat r25.z, r33.w, r25.z
          mul r16.x, r24.w, r25.z
          and r24.w, r25.x, l(1)
          movc r25.zw, r24.wwww, r16.xxxy, r16.zzzx
          mov r16.x, r25.x
          mov r28.xy, r25.zwzz
          mov r24.w, l(1)
          loop 
            ige r27.w, r24.w, r19.w
            breakc_nz r27.w
            iadd r27.w, r18.w, r24.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r27.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r27.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r27.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r27.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r27.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r27.w, l(80), t16.xyzw
            dp3 r27.w, r29.xyzx, r27.xyzx
            add_sat r27.w, r29.w, r27.w
            mul r27.w, r27.w, r28.x
            dp3 r28.z, r30.xyzx, r27.xyzx
            add_sat r28.z, r30.w, r28.z
            mul r27.w, r27.w, r28.z
            dp3 r28.z, r31.xyzx, r27.xyzx
            add_sat r28.z, r31.w, r28.z
            mul r27.w, r27.w, r28.z
            dp3 r28.z, r32.xyzx, r27.xyzx
            add_sat r28.z, r32.w, r28.z
            mul r27.w, r27.w, r28.z
            dp3 r28.z, r33.xyzx, r27.xyzx
            add_sat r28.z, r33.w, r28.z
            mul r27.w, r27.w, r28.z
            dp3 r28.z, r34.xyzx, r27.xyzx
            add_sat r28.z, r34.w, r28.z
            mul r28.x, r27.w, r28.z
            ushr r28.w, r16.x, l(2)
            ubfe r29.x, l(1), l(2), r16.x
            and r29.y, r28.w, l(2)
            max r29.z, r28.x, r28.y
            mad r27.w, -r27.w, r28.z, l(1.000000)
            mul r27.w, r27.w, r28.y
            movc r4.y, r29.y, r27.w, r29.z
            movc r28.xy, r29.xxxx, r28.xyxx, r4.xyxx
            iadd r24.w, r24.w, l(1)
            mov r16.x, r28.w
          endloop 
          add_sat r4.y, -r14.w, r28.y
          mul r16.x, r25.y, r4.y
          lt r18.w, l(0.000000), r16.x
          if_nz r18.w
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r17.w, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r17.w, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r17.w, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r17.w, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r17.w, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r17.w, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r17.w, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r17.w, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r17.w, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r17.w, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xy, r17.w, l(212), t15.xyxx
            mad r23.w, r4.y, r25.y, r23.w
            mul r4.y, r26.z, r16.x
            mov r26.z, r34.z
            dp3 r16.x, r12.xyzx, r26.xyzx
            dp3 r17.w, r27.xyzx, r26.xyzx
            add r17.w, -r34.w, r17.w
            ge r18.w, r17.w, l(0.000000)
            max r17.w, r7.z, |r17.w|
            movc r17.w, r18.w, r17.w, -r17.w
            max r16.x, -r16.x, l(0.00000010)
            div r16.x, r17.w, r16.x
            min r16.x, |r16.x|, l(131072.000000)
            mov r34.z, r35.z
            dp3 r17.w, r12.xyzx, r34.xyzx
            dp3 r18.w, r27.xyzx, r34.xyzx
            add r18.w, -r35.w, r18.w
            ge r19.w, r18.w, l(0.000000)
            max r18.w, r7.z, |r18.w|
            movc r18.w, r19.w, r18.w, -r18.w
            max r17.w, -r17.w, l(0.00000010)
            div r17.w, r18.w, r17.w
            min r16.x, r16.x, |r17.w|
            mov r35.z, r36.z
            dp3 r17.w, r12.xyzx, r35.xyzx
            dp3 r18.w, r27.xyzx, r35.xyzx
            add r18.w, -r36.w, r18.w
            ge r19.w, r18.w, l(0.000000)
            max r18.w, r7.z, |r18.w|
            movc r18.w, r19.w, r18.w, -r18.w
            max r17.w, -r17.w, l(0.00000010)
            div r17.w, r18.w, r17.w
            min r16.x, r16.x, |r17.w|
            mov r36.z, r37.z
            dp3 r17.w, r12.xyzx, r36.xyzx
            dp3 r18.w, r27.xyzx, r36.xyzx
            add r18.w, -r37.w, r18.w
            ge r19.w, r18.w, l(0.000000)
            max r18.w, r7.z, |r18.w|
            movc r18.w, r19.w, r18.w, -r18.w
            max r17.w, -r17.w, l(0.00000010)
            div r17.w, r18.w, r17.w
            min r16.x, r16.x, |r17.w|
            mov r37.z, r38.x
            dp3 r17.w, r12.xyzx, r37.xyzx
            dp3 r18.w, r27.xyzx, r37.xyzx
            add r18.w, -r38.y, r18.w
            ge r19.w, r18.w, l(0.000000)
            max r18.w, r7.z, |r18.w|
            movc r18.w, r19.w, r18.w, -r18.w
            max r17.w, -r17.w, l(0.00000010)
            div r17.w, r18.w, r17.w
            min r16.x, r16.x, |r17.w|
            mov r39.zw, r38.zzzw
            dp3 r17.w, r12.zxyz, r39.xzwx
            dp3 r18.w, r27.zxyz, r39.xzwx
            add r18.w, -r39.y, r18.w
            ge r19.w, r18.w, l(0.000000)
            max r18.w, r7.z, |r18.w|
            movc r18.w, r19.w, r18.w, -r18.w
            max r17.w, -r17.w, l(0.00000010)
            div r17.w, r18.w, r17.w
            min r16.x, r16.x, |r17.w|
            mov r25.x, r31.w
            mov r25.yz, r32.zzwz
            add r25.xyz, r27.xyzx, r25.xyzx
            mad r25.xyz, r12.xyzx, r16.xxxx, r25.xyzx
            dp3 r17.w, r25.xyzx, r25.xyzx
            sqrt r17.w, r17.w
            div r16.x, r16.x, r17.w
            add r16.x, r16.x, r16.x
            sqrt r16.x, r16.x
            mad r16.x, r6.w, l(5.000000), r16.x
            add r16.x, r16.x, l(-0.844800)
            mov r24.y, r29.z
            mov r24.z, r30.x
            dp3 r34.x, r25.xyzx, r24.xyzx
            mov r26.xy, r29.xwxx
            mov r26.z, r30.w
            dp3 r34.y, r25.xyzx, r26.xyzx
            mov r30.x, r29.y
            dp3 r34.z, r25.xyzx, r30.xyzx
            ubfe r17.w, l(9), l(16), r26.w
            utof r34.w, r17.w
            sample_l_indexable(texturecubearray)(float,float,float,float) r25.xyz, r34.xyzw, t8.xyzw, s2, r16.x
            dp3 r29.x, r27.xyzx, r24.xyzx
            dp3 r29.y, r27.xyzx, r26.xyzx
            dp3 r29.z, r27.xyzx, r30.xyzx
            mad_sat r27.xyz, r29.xyzx, r31.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
            mov r32.z, r33.x
            mad r27.xyz, r27.xyzx, r32.xyzx, r33.yzwy
            dp3 r34.x, r1.xyzx, r24.xyzx
            dp3 r34.y, r1.xyzx, r26.xyzx
            dp3 r34.z, r1.xyzx, r30.xyzx
            lt r24.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r34.xyzx
            movc r17.z, r24.x, l(0), l(0.500000)
            add r26.xyz, r17.xyzx, r27.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r26.xyz, r26.xyzx, t17.xyzw, s4, l(0.000000)
            mul r28.xzw, r34.xxyz, r34.xxyz
            mul r28.xzw, r4.yyyy, r28.xxzw
            movc r18.z, r24.y, l(0), l(0.500000)
            add r24.xyw, r18.xyxz, r27.xyxz
            sample_l_indexable(texture3d)(float,float,float,float) r24.xyw, r24.xywx, t18.xywz, s4, l(0.000000)
            mul r24.xyw, r28.zzzz, r24.xyxw
            mad r24.xyw, r26.xyxz, r28.xxxx, r24.xyxw
            movc r19.z, r24.z, l(0), l(0.500000)
            add r26.xyz, r19.xyzx, r27.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r26.xyz, r26.xyzx, t19.xyzw, s4, l(0.000000)
            mad r24.xyz, r26.xyzx, r28.wwww, r24.xywx
            sample_l_indexable(texturecubearray)(float,float,float,float) r26.xyz, r34.xyzw, t8.xyzw, s2, l(6.000000)
            mul r27.xyz, r24.xyzx, r26.xyzx
            dp3 r16.x, r27.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r15.xyz, r24.xyzx, r26.xyzx, r15.xyzx
            mul r17.z, r7.w, r16.x
            mul r24.xyz, r4.yyyy, r25.xyzx
            dp3 r4.y, r24.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r4.y, r7.w, r16.x, r4.y
            div r4.y, r17.z, r4.y
            mad r23.xyz, r24.xyzx, r4.yyyy, r23.xyzx
          endif 
        endif 
      endif 
    endloop 
    mov r22.xyzw, r23.xyzw
    mov r11.yzw, r15.xxyz
    iadd r10.w, r10.w, l(32)
  endloop 
  mov r21.xyzw, r22.zxyw
  mov r20.xyz, r11.yzwy
  mov r21.xyzw, r21.yzxw
else 
  mov r21.x, r20.w
endif 
max r0.y, r21.w, l(1.000000)
rcp r0.y, r0.y
mov_sat r21.w, r21.w
mul r11.yzw, r0.yyyy, r20.xxyz
mul r14.xyz, r0.yyyy, r21.xyzx
lt r0.z, r21.w, l(0.990000)
if_nz r0.z
  add r0.z, -r21.w, l(1.000000)
  mul r4.x, r0.z, cb2[19].x
  add r15.xyz, v6.xyzx, -cb2[35].xyzx
  mul r16.x, r15.x, cb2[35].w
  mul r16.yz, r15.yyzy, cb2[36].xxyx
  add_sat r15.xyz, r16.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mul r16.xy, r15.xyxx, cb2[36].zwzz
  mul r16.z, r15.z, cb2[37].x
  add r15.xyz, r16.xyzx, cb2[37].yzwy
  lt r16.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r1.xyzx
  movc r16.xyz, r16.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
  mov r16.w, l(0)
  add r17.xyz, r15.xyzx, r16.wwxw
  sample_l_indexable(texture3d)(float,float,float,float) r17.xyz, r17.xyzx, t17.xyzw, s4, l(0.000000)
  mul r18.xyz, r1.xyzx, r1.xyzx
  mul r18.xyz, r4.xxxx, r18.xyzx
  add r19.xyz, r15.xyzx, r16.wwyw
  sample_l_indexable(texture3d)(float,float,float,float) r19.xyz, r19.xyzx, t18.xyzw, s4, l(0.000000)
  mul r19.xyz, r18.yyyy, r19.xyzx
  mad r17.xyz, r17.xyzx, r18.xxxx, r19.xyzx
  add r15.xyz, r15.xyzx, r16.wwzw
  sample_l_indexable(texture3d)(float,float,float,float) r15.xyz, r15.xyzx, t19.xyzw, s4, l(0.000000)
  mad r15.xyz, r15.xyzx, r18.zzzz, r17.xyzx
  mov r1.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r16.xyz, r1.xyzw, t8.xyzw, s2, l(6.000000)
  mul r15.xyz, r15.xyzx, r16.xyzx
  dp3 r1.w, r15.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  mad r11.yzw, r20.xxyz, r0.yyyy, r15.xxyz
  mov r12.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r7.yzw, r12.xyzw, t8.wxyz, s2, r7.y
  mad r0.y, cb2[19].x, r0.z, -r1.w
  mad r0.y, cb0[14].z, r0.y, r1.w
  mad r14.xyz, r7.yzwy, r0.yyyy, r14.xyzx
endif 
if_nz cb0[19].z
  dp3 r0.y, r2.yzwy, r1.xyzx
  add r0.y, r0.y, r0.y
  mad r7.yzw, r1.xxyz, -r0.yyyy, r2.yyzw
  dp3 r0.y, r2.yzwy, -r1.xyzx
  add r0.y, r0.y, r0.y
  mad r12.xyz, r1.xyzx, r0.yyyy, r2.yzwy
  movc r7.yzw, v7.xxxx, r7.yyzw, r12.xxyz
  if_nz cb0[19].w
    mul r12.xyz, v6.yyyy, cb1[5].xyzx
    mad r12.xyz, v6.xxxx, cb1[4].xyzx, r12.xyzx
    mad r12.xyz, v6.zzzz, cb1[6].xyzx, r12.xyzx
    mul r15.xyz, r7.yzwy, cb0[18].zzzz
    mul r16.xyz, r15.yyyy, cb1[5].xyzx
    mad r15.xyw, r15.xxxx, cb1[4].xyxz, r16.xyxz
    mad r15.xyz, r15.zzzz, cb1[6].xyzx, r15.xywx
    min r0.y, cb0[18].x, l(1000.000000)
    mad r12.xyz, r15.xyzx, l(10.000000, 10.000000, 10.000000, 0.000000), r12.xyzx
    div r0.y, r0.y, cb0[18].z
    mov r16.xyz, r14.xyzx
    mov r17.xyz, r12.xyzx
    mov r0.z, l(0)
    loop 
      itof r1.w, r0.z
      ge r1.w, r1.w, r0.y
      breakc_nz r1.w
      add r17.xyz, r15.xyzx, r17.xyzx
      mul r18.xyz, r17.yyyy, cb1[1].xywx
      mad r18.xyz, r17.xxxx, cb1[0].xywx, r18.xyzx
      mad r18.xyz, r17.zzzz, cb1[2].xywx, r18.xyzx
      add r18.xyz, r18.xyzx, cb1[3].xywx
      max r1.w, |r18.y|, |r18.x|
      lt r1.w, r18.z, r1.w
      if_nz r1.w
        break 
      endif 
      div r4.xy, r18.xyxx, r18.zzzz
      mad r4.xy, r4.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      sample_l_indexable(texture2d)(float,float,float,float) r1.w, r4.xyxx, t22.yzwx, s5, l(1.000000)
      lt r4.x, |r1.w|, r17.z
      ge r4.y, |r1.w|, v0.w
      and r4.x, r4.y, r4.x
      if_nz r4.x
        add r1.w, -|r1.w|, r17.z
        mul r1.w, r1.w, cb0[18].w
        mad r18.xyz, -r1.wwww, r15.xyzx, r17.xyzx
        mul r19.xyz, r18.yyyy, cb1[1].xywx
        mad r18.xyw, r18.xxxx, cb1[0].xyxw, r19.xyxz
        mad r18.xyz, r18.zzzz, cb1[2].xywx, r18.xywx
        add r18.xyz, r18.xyzx, cb1[3].xywx
        div r4.xy, r18.xyxx, r18.zzzz
        mad r4.xy, r4.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
        sample_l_indexable(texture2d)(float,float,float,float) r18.xyz, r4.xyxx, t25.xyzw, s5, l(0.000000)
        mul r18.xyz, r18.xyzx, cb1[85].xxxx
        mov r16.xyz, r18.xyzx
        break 
      endif 
      iadd r0.z, r0.z, l(1)
    endloop 
    mov r14.xyz, r16.xyzx
  else 
    mul r0.y, r3.y, cb0[18].y
    mad r7.yzw, r7.yyzw, r0.yyyy, v6.xxyz
    mul r12.xyz, r7.zzzz, cb1[9].xywx
    mad r12.xyz, r7.yyyy, cb1[8].xywx, r12.xyzx
    mad r7.yzw, r7.wwww, cb1[10].xxyw, r12.xxyz
    add r7.yzw, r7.yyzw, cb1[11].xxyw
    div r0.yz, r7.yyzy, r7.wwww
    max r1.w, |r0.z|, |r0.y|
    mad r0.yz, r0.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r4.x, r0.yzyy, t22.xyzw, s5, l(0.000000)
    ge r4.x, |r4.x|, v0.w
    lt r1.w, r1.w, l(1.000000)
    and r1.w, r1.w, r4.x
    sample_indexable(texture2d)(float,float,float,float) r7.yzw, r0.yzyy, t25.wxyz, s5
    if_nz r1.w
      mul r14.xyz, r7.yzwy, cb1[85].xxxx
    endif 
  endif 
endif 
dp3 r0.y, r1.xyzx, cb2[17].xyzx
mov_sat r0.z, r0.y
movc r1.w, cb0[20].z, |r0.y|, r0.z
ge r1.w, l(0.000000), r1.w
if_nz r1.w
  mov r4.x, l(0)
endif 
if_z r1.w
  mul r7.yzw, v6.yyyy, cb2[29].xxyz
  mad r7.yzw, v6.xxxx, cb2[28].xxyz, r7.yyzw
  mad r7.yzw, v6.zzzz, cb2[30].xxyz, r7.yyzw
  add r7.yzw, r7.yyzw, cb2[31].xxyz
  add r1.w, r7.w, -cb2[17].w
  mad r1.w, -r1.w, l(0.00006104), l(1.000000)
  mov_sat r4.y, r1.w
  eq r4.y, r1.w, r4.y
  if_nz r4.y
    mov r4.y, l(0)
    mov r6.w, l(0)
    loop 
      ge r9.z, r4.y, l(3.000000)
      breakc_nz r9.z
      ftou r9.z, r4.y
      add r12.xy, r7.yzyy, -cb2[r9.z + 20].xyxx
      max r9.w, |r12.y|, |r12.x|
      mul r6.w, r9.w, cb2[r9.z + 20].z
      lt r9.z, r6.w, l(1.000000)
      if_nz r9.z
        break 
      endif 
      add r4.y, r4.y, l(1.000000)
      mov r6.w, l(0)
    endloop 
  else 
    mov r4.y, l(3.000000)
    mov r6.w, l(0)
  endif 
  ge r9.z, r4.y, l(3.000000)
  if_nz r9.z
    mul r12.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
    rcp r15.xz, r12.xxxx
    mov r15.y, -r15.z
    mad r12.xyz, r7.yzyy, r15.xyzx, r12.yzyy
    add r15.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r12.xyz, r12.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r12.xyz, r15.xyzx, r12.xyzx
    mul r15.xy, r12.zyzz, cb2[32].xxxx
    round_ni r15.xy, r15.xyxx
    mul r9.w, r15.y, cb2[27].x
    mad r9.w, r9.w, cb2[32].x, r15.x
    ftou r9.w, r9.w
    iadd r9.w, r9.w, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r10.w, r9.w, l(0), t23.xxxx
    and r12.w, r10.w, l(0x40000000)
    ishl r13.w, r10.w, l(2)
    if_z r12.w
      and r12.w, r10.w, l(0x01ffffff)
      iadd r15.x, r9.w, r12.w
      ushr r9.w, r10.w, l(25)
      utof r9.w, r9.w
      mul r12.xyz, r9.wwww, r12.xyzx
      frc r12.xyz, r12.xyzx
      mul r12.xyz, r12.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
      ftou r12.xyz, r12.xyzx
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.z, r15.x, l(0), t23.xxxx
      ushr r16.xy, r12.zyzz, l(6, 6, 0, 0)
      and r9.w, r15.z, l(0xc0000000)
      iadd r10.w, r15.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r10.w, r10.w, l(0), t23.xxxx
      movc r10.w, r16.y, r15.z, r10.w
      ushr r12.w, r10.w, l(13)
      movc r10.w, r16.x, r12.w, r10.w
      and r10.w, r10.w, l(8191)
      iadd r16.x, r10.w, r15.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.z, r16.x, l(0), t23.xxxx
      mov r15.y, l(0)
      mov r16.y, l(1)
      movc r16.xyz, r9.wwww, r15.xyzx, r16.xyzx
      movc r17.yz, r9.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r18.xy, r12.zyzz, r17.yyyy
      and r18.xy, r18.xyxx, l(1, 1, 0, 0)
      and r10.w, r16.z, l(0xc0000000)
      iadd r12.w, r16.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r12.w, r12.w, l(0), t23.xxxx
      movc r12.w, r18.y, r16.z, r12.w
      ushr r14.w, r12.w, l(13)
      movc r12.w, r18.x, r14.w, r12.w
      and r12.w, r12.w, l(8191)
      iadd r17.x, r12.w, r16.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.w, r17.x, l(0), t23.xxxx
      movc r16.xyz, r10.wwww, r16.xyzx, r17.xzwx
      movc r15.xyz, r9.wwww, r15.xyzx, r16.xyzx
      and r9.w, r15.z, l(0xc0000000)
      if_z r9.w
        iadd r9.w, -r15.y, l(6)
        ushr r16.xy, r12.zyzz, r9.wwww
        or r9.w, r15.z, l(0x40000000)
        bfi r10.w, l(1), l(1), r16.y, l(0)
        bfi r10.w, l(1), l(0), r16.x, r10.w
        imul null, r10.w, r10.w, l(10)
        ushr r9.w, r9.w, r10.w
        and r9.w, r9.w, l(1023)
        iadd r16.x, r9.w, r15.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.w, r16.x, l(0), t23.xxxx
        iadd r16.yz, r15.yyyy, l(0, 1, 2, 0)
        iadd r9.w, -r16.y, l(6)
        ushr r15.yw, r12.zzzy, r9.wwww
        and r9.w, r16.w, l(0xc0000000)
        or r10.w, r16.w, l(0x40000000)
        bfi r12.w, l(1), l(1), r15.w, l(0)
        bfi r12.w, l(1), l(0), r15.y, r12.w
        imul null, r12.w, r12.w, l(10)
        ushr r10.w, r10.w, r12.w
        and r10.w, r10.w, l(1023)
        iadd r17.x, r10.w, r16.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.z, r17.x, l(0), t23.xxxx
        mov r17.y, r16.z
        movc r17.xyz, r9.wwww, r16.xywx, r17.xyzx
        iadd r10.w, -r17.y, l(6)
        ushr r15.yw, r12.zzzy, r10.wwww
        and r10.w, r17.z, l(0xc0000000)
        or r12.w, r17.z, l(0x40000000)
        bfi r14.w, l(1), l(1), r15.w, l(0)
        bfi r14.w, l(1), l(0), r15.y, r14.w
        imul null, r14.w, r14.w, l(10)
        ushr r12.w, r12.w, r14.w
        and r12.w, r12.w, l(1023)
        iadd r18.x, r12.w, r17.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.y, r18.x, l(0), t23.xxxx
        movc r15.yw, r10.wwww, r17.xxxz, r18.xxxy
        movc r15.xz, r9.wwww, r16.xxwx, r15.yywy
      endif 
      and r9.w, r15.z, l(0xc0000000)
      if_z r9.w
        ubfe r10.w, l(14), l(15), r15.z
        utof r10.w, r10.w
        mul r10.w, r10.w, cb2[27].w
        mul r10.w, r10.w, l(0.00006104)
        and r15.yw, r15.zzzz, l(0, 0x00007fff, 0, 0x20000000)
        utof r12.w, r15.y
        mul r12.w, r12.w, cb2[27].w
        mul r12.w, r12.w, l(0.00003052)
        and r14.w, r12.y, l(3)
        iadd r14.w, r14.w, r15.x
        iadd r14.w, r14.w, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r14.w, r14.w, l(0), t23.xxxx
        bfi r16.xyz, l(2, 2, 1, 0), l(3, 1, 4, 0), r12.xyzx, l(0, 0, 0, 0)
        ushr r12.x, r14.w, r16.x
        and r12.x, r12.x, l(255)
        utof r12.x, r12.x
        mul r12.x, r12.w, r12.x
        mad r12.x, r12.x, l(0.00392157), r10.w
        iadd r12.y, r16.y, l(1)
        ubfe r12.z, l(1), l(1), r12.z
        iadd r12.y, r12.z, r12.y
        iadd r12.y, r12.y, r15.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r12.y, r12.y, l(0), t23.xxxx
        ushr r12.y, r12.y, r16.z
        and r12.y, r12.y, l(0x0000ffff)
        utof r12.y, r12.y
        mul r12.y, r12.w, r12.y
        mad r10.w, r12.y, l(0.00001526), r10.w
        movc r13.w, r15.w, r12.x, r10.w
      else 
        and r10.w, r15.z, l(0x80000000)
        iadd r12.x, r15.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r12.x, r12.x, l(0), t23.xxxx
        movc r10.w, r10.w, r12.x, l(0)
        ishl r12.x, r15.z, l(2)
        ushr r12.y, r10.w, l(16)
        f16tof32 r12.y, r12.y
        and r10.w, r10.w, l(0x0000ffff)
        f16tof32 r10.w, r10.w
        mad r12.x, r7.y, r12.y, r12.x
        mad r10.w, r7.z, r10.w, r12.x
        movc r13.w, r9.w, r10.w, r13.w
      endif 
    endif 
    mad r7.w, -cb2[27].z, l(2.000000), r7.w
    lt r7.w, r13.w, r7.w
    movc r4.x, r7.w, l(0), l(1.000000)
  endif 
  if_z r9.z
    if_z cb2[58].y
      ftou r7.w, r4.y
      add r9.zw, r7.yyyz, -cb2[r7.w + 20].xxxy
      mul r9.zw, r9.zzzw, cb2[r7.w + 20].zzzz
      mad r12.xy, r9.zwzz, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r7.w, cb2[26].y
      add r12.z, r4.y, r7.w
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r7.w, r12.xyzx, t13.xxxx, s13, r1.w
      sample_l_indexable(texture2darray)(float,float,float,float) r9.z, r12.xyzx, t31.yzxw, s0, l(0.000000)
      add r7.w, r7.w, r9.z
      add_sat r7.w, r7.w, l(-1.000000)
      mul r9.z, r7.w, r7.w
      mul r4.x, r7.w, r9.z
    endif 
    if_nz cb2[58].y
      mov r12.x, -r9.x
      ftou r7.w, r4.y
      add r4.y, r4.y, l(1.000000)
      min r4.y, r4.y, l(2.000000)
      ftou r4.y, r4.y
      add r6.w, -r6.w, l(1.000000)
      mul r6.w, r6.w, l(28.000000)
      ftou r6.w, r6.w
      add r9.zw, r7.yyyz, -cb2[r7.w + 20].xxxy
      mul r9.zw, r9.zzzw, cb2[r7.w + 20].zzzz
      mad r9.zw, r9.zzzw, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
      add r7.yz, r7.yyzy, -cb2[r4.y + 20].xxyx
      mul r7.yz, r7.yyzy, cb2[r4.y + 20].zzzz
      mad r7.yz, r7.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      mov r12.y, r10.x
      mov r12.z, r9.x
      mov r10.w, l(0)
      mov r12.w, l(0)
      loop 
        uge r13.w, r12.w, l(8)
        breakc_nz r13.w
        ult r13.w, r6.w, r12.w
        movc r15.xy, r13.wwww, r7.yzyy, r9.zwzz
        movc r14.w, r13.w, cb2[r4.y + 20].w, cb2[r7.w + 20].w
        movc r13.w, r13.w, r4.y, r7.w
        dp2 r16.x, icb[r12.w + 0].yxyy, r12.xyxx
        dp2 r16.y, icb[r12.w + 0].yxyy, r12.yzyy
        mad r15.xy, r16.xyxx, r14.wwww, r15.xyxx
        iadd r13.w, r13.w, cb2[26].y
        utof r15.z, r13.w
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r13.w, r15.xyzx, t13.xxxx, s13, r1.w
        sample_l_indexable(texture2darray)(float,float,float,float) r14.w, r15.xyzx, t31.yzwx, s0, l(0.000000)
        add r13.w, r13.w, r14.w
        add_sat r13.w, r13.w, l(-1.000000)
        mad r10.w, r13.w, l(0.125000), r10.w
        iadd r12.w, r12.w, l(1)
      endloop 
      mul r1.w, r10.w, r10.w
      mul r4.x, r10.w, r1.w
    endif 
  endif 
endif 
and r1.w, cb2[53].x, l(0x0000ffff)
ult r4.y, l(0), r1.w
lt r6.w, l(0.000000), r4.x
and r4.y, r4.y, r6.w
if_nz r4.y
  iadd r1.w, r1.w, cb2[0].x
  iadd r1.w, r1.w, l(-1)
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r4.y, r1.w, l(52), t12.xxxx
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.xyzw, r1.w, l(68), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r1.w, l(84), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r1.w, l(100), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r1.w, l(116), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r1.w, l(132), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.xyzw, r1.w, l(148), t12.xyzw
  mad r6.w, |r0.y|, l(-0.200000), l(0.400000)
  lt r0.y, r0.y, l(0.000000)
  and r0.y, r0.y, r5.y
  movc r0.y, r0.y, -r6.w, r6.w
  mad r20.xyz, r1.xyzx, r0.yyyy, v6.xyzx
  mov r20.w, l(1.000000)
  dp4 r12.x, r12.xyzw, r20.xyzw
  dp4 r12.y, r15.xyzw, r20.xyzw
  dp4 r0.y, r16.xyzw, r20.xyzw
  dp4 r6.w, r17.xyzw, r20.xyzw
  lt r7.y, r6.w, r0.y
  div r7.zw, r12.xxxy, r6.wwww
  mad r7.zw, r7.zzzw, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
  add r7.zw, r19.zzzw, r7.zzzw
  mul r7.zw, r19.xxxy, r7.zzzw
  div r9.zw, r4.yyyy, r18.xxxz
  add r12.xy, -r9.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
  ge r12.xy, r7.zwzz, r12.xyxx
  ge r9.zw, r9.zzzw, r7.zzzw
  or r9.zw, r9.zzzw, r12.xxxy
  or r9.z, r9.w, r9.z
  or r7.y, r7.y, r9.z
  if_z r7.y
    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r7.y, r1.w, l(28), t12.xxxx
    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r9.zw, r1.w, l(164), t12.xxxy
    mov_sat r7.zw, r7.zzzw
    mad r12.xy, r7.zwzz, r18.xzxx, r18.ywyy
    mul r1.w, r6.w, r9.w
    mad r0.y, r9.z, r6.w, r0.y
    div r0.y, r0.y, r1.w
    max r0.y, r0.y, l(0.00006104)
    and r1.w, r7.y, l(0x0000ffff)
    if_nz cb2[58].y
      mov r15.x, -r9.x
      utof r16.z, r1.w
      mov r15.y, r10.x
      mov r15.z, r9.x
      mov r6.w, l(0)
      mov r7.y, l(0)
      loop 
        ige r7.z, r7.y, l(8)
        breakc_nz r7.z
        dp2 r17.x, icb[r7.y + 0].yxyy, r15.xyxx
        dp2 r17.y, icb[r7.y + 0].yxyy, r15.yzyy
        mad r16.xy, r17.xyxx, r4.yyyy, r12.xyxx
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r7.z, r16.xyzx, t9.xxxx, s13, r0.y
        mad r6.w, r7.z, l(0.125000), r6.w
        iadd r7.y, r7.y, l(1)
      endloop 
    else 
      utof r12.z, r1.w
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r6.w, r12.xyzx, t9.xxxx, s13, r0.y
    endif 
    mul r0.y, r6.w, r6.w
    mul r0.y, r6.w, r0.y
  else 
    mov r0.y, l(1.000000)
  endif 
  mul r4.x, r0.y, r4.x
endif 
lt r0.y, l(0.000000), r0.z
lt r1.w, l(0.000000), r4.x
if_nz r1.w
  if_nz cb2[23].x
    add r12.xyz, v6.xyzx, cb1[24].xyzx
    mov r12.w, l(1.000000)
    dp4 r1.w, cb2[24].xyzw, r12.xyzw
    dp4 r4.y, cb2[25].xyzw, r12.xyzw
    frc r12.x, r1.w
    frc r12.y, r4.y
    iadd r1.w, l(-1), cb2[23].x
    utof r12.z, r1.w
    sample_l_indexable(texture2darray)(float,float,float,float) r7.yzw, r12.xyzx, t20.wxyz, s2, l(0.000000)
    add r7.yzw, r7.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
    mad r7.yzw, cb2[23].yyyy, r7.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
    mul r7.yzw, r7.yyzw, cb2[18].xxyz
  else 
    mov r7.yzw, cb2[18].xxyz
  endif 
  mul r7.yzw, r4.xxxx, r7.yyzw
  add r1.w, r0.z, r5.w
  div r1.w, r0.z, r1.w
  mad r12.xyz, r7.yzwy, r1.wwww, r11.yzwy
  mad r15.xyz, -v6.xyzx, r5.zzzz, cb2[17].xyzx
  dp3 r1.w, r15.xyzx, r15.xyzx
  rsq r1.w, r1.w
  mul r15.xyz, r1.wwww, r15.xyzx
  dp3_sat r1.w, r1.xyzx, r15.xyzx
  dp3_sat r4.x, r15.xyzx, r6.xyzx
  mul r4.y, r1.w, r1.w
  mad r9.zw, r4.yyyy, cb0[12].xxxz, l(0.000000, 0.000000, 1.000000, 1.000000)
  mul r9.zw, r9.zzzw, r9.zzzw
  div r9.zw, cb0[12].yyyw, r9.zzzw
  mul r9.zw, r1.wwww, r9.zzzw
  mul r1.w, r4.x, l(4.000000)
  div r4.xy, r9.zwzz, r1.wwww
  mul r4.xy, r4.xyxx, cb0[13].xyxx
  mul r15.xyz, r4.xxxx, r7.yzwy
  mad r15.xyz, r15.xyzx, r0.zzzz, r14.xyzx
  mul r7.yzw, r4.yyyy, r7.yyzw
  mad r7.yzw, r7.yyzw, r0.zzzz, r15.xxyz
else 
  mov r12.xyz, r11.yzwy
  mov r7.yzw, r14.xxyz
endif 
movc r11.yzw, r0.yyyy, r12.xxyz, r11.yyzw
movc r7.yzw, r0.yyyy, r7.yyzw, r14.xxyz
mov r12.x, -r9.x
mov r14.xy, l(0,0,0,0)
mov r15.w, l(0)
mov r16.xyz, v6.xyzx
mov r16.w, l(1.000000)
mov r17.w, l(1.000000)
mov r12.z, r9.x
mov r18.z, l(1.000000)
mov r19.w, l(1.000000)
mov r12.yw, r10.xxxx
mov r9.y, r12.w
mov r20.w, l(1.000000)
mov r10.y, r12.x
mov r10.z, r9.x
mov r21.x, r10.x
mov r21.y, r12.x
mov r21.z, r9.x
mov r22.xyz, r11.yzwy
mov r23.xyz, r7.yzwy
mov r0.y, cb2[58].y
mov r0.z, l(0)
loop 
  uge r1.w, r0.z, cb2[0].x
  breakc_nz r1.w
  ushr r14.z, r0.z, l(5)
  iadd r15.xyz, r13.xyzx, r14.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r1.w, r15.xyzw, t6.yzwx
  mov r15.xyz, r22.xyzx
  mov r24.xyz, r23.xyzx
  mov r4.x, r0.y
  mov r4.y, r1.w
  loop 
    breakc_z r4.y
    firstbit_lo r5.z, r4.y
    ishl r6.w, l(1), r5.z
    and r9.z, r4.y, r6.w
    if_nz r9.z
      xor r4.y, r4.y, r6.w
      iadd r5.z, r0.z, r5.z
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r25.xyzw, r5.z, l(0), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r26.xy, r5.z, l(16), t12.xyxx
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r27.xyzw, r5.z, l(28), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r28.xyzw, r5.z, l(44), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r29.xyzw, r5.z, l(60), t12.zwxy
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r30.xyzw, r5.z, l(76), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r5.z, l(92), t12.zwxy
      ubfe r6.w, l(3), l(24), r27.x
      switch r6.w
        case l(4)
        lt r6.w, l(0.000000), r31.x
        mov r32.x, r30.w
        mov r32.yz, r31.zzwz
        mad r33.xyz, -r32.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r25.xyzx
        add r34.xyz, r33.xyzx, -v6.xyzx
        dp3 r9.z, r32.xyzx, r34.xyzx
        div_sat r9.z, -r9.z, r31.x
        mad r32.xyz, r9.zzzz, r32.xyzx, r33.xyzx
        movc r32.xyz, r6.wwww, r32.xyzx, r25.xyzx
        add r32.xyz, r32.xyzx, -v6.xyzx
        dp3 r6.w, r32.xyzx, r32.xyzx
        rsq r9.z, r6.w
        mul r33.xyz, r9.zzzz, r32.xyzx
        dp3 r9.w, r1.xyzx, r33.xyzx
        mov_sat r10.w, r9.w
        movc r10.w, cb0[20].z, |r9.w|, r10.w
        lt r13.w, l(0.000000), r10.w
        if_nz r13.w
          sqrt r13.w, r6.w
          mul r14.z, r28.y, r28.y
          div r6.w, r14.z, r6.w
          min r6.w, r6.w, l(1.000000)
          mad_sat r14.z, r13.w, r27.y, r27.z
          mad_sat r13.w, r13.w, r27.w, r28.x
          mul r14.w, r14.z, r14.z
          mad r14.z, r14.z, l(-2.000000), l(3.000000)
          mul r14.z, r14.z, r14.w
          mul r6.w, r6.w, r14.z
          mul r14.z, r13.w, r13.w
          mad r13.w, r13.w, l(-2.000000), l(3.000000)
          mul r13.w, r13.w, r14.z
          mul r6.w, r6.w, r13.w
          lt r13.w, l(0.000000), r6.w
          if_nz r13.w
            ubfe r14.zw, l(0, 0, 3, 4), l(0, 0, 27, 20), r27.xxxx
            ine r13.w, r14.z, l(1)
            if_nz r13.w
              mad r13.w, |r9.w|, l(-0.200000), l(0.400000)
              lt r14.z, r9.w, l(0.000000)
              and r14.z, r5.y, r14.z
              movc r13.w, r14.z, -r13.w, r13.w
              mad r33.xyz, r1.xyzx, r13.wwww, v6.xyzx
              mov r29.z, r30.x
              add r33.xyz, -r29.xyzx, r33.xyzx
              max r13.w, |r33.z|, |r33.y|
              max r13.w, r13.w, |r33.x|
              div r13.w, r30.y, r13.w
              add r13.w, r30.z, r13.w
              dp3 r14.z, r33.xyzx, r33.xyzx
              rsq r14.z, r14.z
              max r13.w, r13.w, l(0.00006104)
              and r18.w, r27.x, l(0x0000ffff)
              utof r34.w, r18.w
              mov r18.w, l(0)
              mov r21.w, l(0)
              loop 
                ige r22.w, r21.w, l(8)
                breakc_nz r22.w
                dp2 r35.y, icb[r21.w + 0].yxyy, r12.xyxx
                dp2 r35.z, icb[r21.w + 0].yxyy, r12.yzyy
                mul r35.yz, r28.zzzz, r35.yyzy
                mul r35.x, r11.x, r35.y
                mul r35.w, r7.x, r35.y
                mad r34.xyz, r33.xyzx, r14.zzzz, r35.xzwx
                sample_c_lz_indexable(texturecubearray)(float,float,float,float) r22.w, r34.xyzw, t10.xxxx, s13, r13.w
                mad r18.w, r22.w, l(0.125000), r18.w
                iadd r21.w, r21.w, l(1)
              endloop 
            else 
              mov r18.w, l(1.000000)
            endif 
            mul r6.w, r6.w, r18.w
            if_nz r14.w
              iadd r13.w, r14.w, cb2[0].x
              iadd r13.w, r13.w, l(-1)
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.z, r13.w, l(52), t12.xxxx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r13.w, l(100), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r13.w, l(116), t12.xyzw
              mad r14.w, |r9.w|, l(-0.200000), l(0.400000)
              lt r9.w, r9.w, l(0.000000)
              and r9.w, r5.y, r9.w
              movc r9.w, r9.w, -r14.w, r14.w
              mad r17.xyz, r1.xyzx, r9.wwww, v6.xyzx
              dp4 r9.w, r33.xyzw, r17.xyzw
              dp4 r14.w, r34.xyzw, r17.xyzw
              lt r21.w, r14.w, r9.w
              if_z r21.w
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r13.w, l(68), t12.xyzw
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r13.w, l(84), t12.xyzw
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r13.w, l(132), t12.xyzw
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r13.w, l(148), t12.xyzw
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xy, r13.w, l(164), t12.xyxx
                dp4 r33.x, r33.xyzw, r17.xyzw
                dp4 r33.y, r34.xyzw, r17.xyzw
                div r17.xy, r33.xyxx, r14.wwww
                mad r17.xy, r17.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                add r17.xy, r36.zwzz, r17.xyxx
                mul r17.xy, r36.xyxx, r17.xyxx
                div r33.xy, r14.zzzz, r35.xzxx
                add r33.zw, -r33.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                ge r33.zw, r17.xxxy, r33.zzzw
                ge r33.xy, r33.xyxx, r17.xyxx
                or r33.xy, r33.xyxx, r33.zwzz
                or r17.z, r33.y, r33.x
                mov_sat r17.xy, r17.xyxx
                mad r33.xy, r17.xyxx, r35.xzxx, r35.ywyy
                mul r17.x, r14.w, r37.y
                mad r9.w, r37.x, r14.w, r9.w
                div r9.w, r9.w, r17.x
              else 
                mov r17.z, l(-1)
              endif 
              or r14.w, r21.w, r17.z
              if_z r14.w
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.w, r13.w, l(28), t12.xxxx
                max r9.w, r9.w, l(0.00006104)
                and r13.w, r13.w, l(0x0000ffff)
                if_nz r4.x
                  utof r17.z, r13.w
                  mov r14.w, l(0)
                  mov r21.w, l(0)
                  loop 
                    ige r22.w, r21.w, l(8)
                    breakc_nz r22.w
                    dp2 r34.x, icb[r21.w + 0].yxyy, r12.xwxx
                    dp2 r34.y, icb[r21.w + 0].xyxx, r9.xyxx
                    mad r17.xy, r34.xyxx, r14.zzzz, r33.xyxx
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r17.x, r17.xyzx, t9.xxxx, s13, r9.w
                    mad r14.w, r17.x, l(0.125000), r14.w
                    iadd r21.w, r21.w, l(1)
                  endloop 
                else 
                  utof r33.z, r13.w
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r14.w, r33.xyzx, t9.xxxx, s13, r9.w
                endif 
                mul r9.w, r14.w, r14.w
                mul r9.w, r14.w, r9.w
              else 
                mov r9.w, l(1.000000)
              endif 
              mul r6.w, r6.w, r9.w
            endif 
            lt r9.w, l(0.000000), r6.w
            if_nz r9.w
              mov r26.z, r25.w
              mul r17.xyz, r26.zxyz, r6.wwww
              add r6.w, r5.w, r10.w
              div r6.w, r10.w, r6.w
              mad r15.xyz, r17.xyzx, r6.wwww, r15.xyzx
              mad r32.xyz, r32.xyzx, r9.zzzz, r6.xyzx
              dp3 r6.w, r32.xyzx, r32.xyzx
              rsq r6.w, r6.w
              mul r32.xyz, r6.wwww, r32.xyzx
              dp3_sat r6.w, r1.xyzx, r32.xyzx
              dp3_sat r9.z, r32.xyzx, r6.xyzx
              mul r9.w, r6.w, r6.w
              mad r32.xy, r9.wwww, cb0[12].xzxx, l(1.000000, 1.000000, 0.000000, 0.000000)
              mul r32.xy, r32.xyxx, r32.xyxx
              div r32.xy, cb0[12].ywyy, r32.xyxx
              mul r32.xy, r6.wwww, r32.xyxx
              mul r6.w, r9.z, l(4.000000)
              div r9.zw, r32.xxxy, r6.wwww
              mul r9.zw, r9.zzzw, cb0[13].xxxy
              mul r32.xyz, r9.zzzz, r17.xyzx
              mad r32.xyz, r32.xyzx, r10.wwww, r24.xyzx
              mul r17.xyz, r9.wwww, r17.xyzx
              mad r24.xyz, r17.xyzx, r10.wwww, r32.xyzx
            endif 
          endif 
        endif 
        break 
        case l(2)
        mov r17.x, r28.w
        mov r17.yz, r29.zzwz
        add r17.xyz, r17.xyzx, -v6.xyzx
        dp3 r6.w, r17.xyzx, r17.xyzx
        rsq r6.w, r6.w
        mul r32.xyz, r6.wwww, r17.xyzx
        dp3 r9.z, r1.xyzx, r32.xyzx
        mov_sat r9.w, r9.z
        movc r9.w, cb0[20].z, |r9.z|, r9.w
        lt r10.w, l(0.000000), r9.w
        if_nz r10.w
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r5.z, l(108), t12.zwxy
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r5.z, l(124), t12.xyzw
          mov r34.xy, r32.xyxx
          mov r34.zw, r33.xxxy
          dp4 r10.w, r34.xyzw, r16.xyzw
          lt r13.w, r10.w, l(1.000000)
          if_nz r13.w
            mov r35.xyz, l(1.000000,1.000000,1.000000,0)
            mov r13.w, l(0)
          else 
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r5.z, l(172), t12.yzwx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r5.z, l(188), t12.wxyz
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r5.z, l(204), t12.xyzw
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.z, r5.z, l(236), t12.xxxx
            add r25.xyz, r25.xyzx, -v6.xyzx
            mul r21.w, r28.y, r28.y
            dp3 r22.w, r25.xyzx, r25.xyzx
            div r21.w, r21.w, r22.w
            min r21.w, r21.w, l(1.000000)
            mad_sat r22.w, r10.w, r27.y, r27.z
            mad_sat r23.w, r10.w, r27.w, r28.x
            mul r24.w, r22.w, r22.w
            mad r22.w, r22.w, l(-2.000000), l(3.000000)
            mul r22.w, r22.w, r24.w
            mul r21.w, r21.w, r22.w
            mul r22.w, r23.w, r23.w
            mad r23.w, r23.w, l(-2.000000), l(3.000000)
            mul r22.w, r22.w, r23.w
            mul r21.w, r21.w, r22.w
            mov r29.zw, r30.xxxy
            dp4 r25.x, r29.xyzw, r16.xyzw
            mov r39.xy, r30.zwzz
            mov r39.zw, r31.zzzw
            dp4 r25.y, r39.xyzw, r16.xyzw
            div r18.xy, r25.xyxx, r10.wwww
            lt r10.w, r36.w, l(0.00048828)
            if_nz r10.w
              mov r37.y, r38.x
              mad_sat r25.xy, |r18.xyxx|, r37.zwzz, r37.xyxx
              mul r27.yz, r25.xxyx, r25.xxyx
              mad r25.xy, r25.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
              mul r25.xy, r25.xyxx, r27.yzyy
              mul r10.w, r25.y, r25.x
            else 
              mov r36.w, r37.y
              mul_sat r36.xyzw, |r18.yyxx|, r36.xyzw
              log r36.xyzw, r36.xyzw
              mul r36.xyzw, r36.xyzw, r37.xxxx
              exp r36.xyzw, r36.xyzw
              add r25.xy, r36.zwzz, r36.xyxx
              log r25.xy, r25.xyxx
              mul r25.xy, r25.xyxx, r38.xxxx
              exp r25.xy, r25.xyxx
              mul r22.w, r25.x, r37.z
              mad r23.w, r37.w, r25.y, l(-1.000000)
              mad r22.w, r37.w, r25.y, -r22.w
              div_sat r22.w, r23.w, r22.w
              mul r23.w, r22.w, r22.w
              mad r22.w, r22.w, l(-2.000000), l(3.000000)
              mul r10.w, r22.w, r23.w
            endif 
            mul r13.w, r10.w, r21.w
            and r10.w, r14.z, l(255)
            if_nz r10.w
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r25.xyz, r5.z, l(220), t12.xyzx
              dp3 r14.z, r38.yzwy, r18.xyzx
              dp3 r18.x, r25.xyzx, r18.xyzx
              frc r25.x, r14.z
              frc r25.y, r18.x
              iadd r10.w, r10.w, l(-1)
              utof r25.z, r10.w
              sample_l_indexable(texture2darray)(float,float,float,float) r35.xyz, r25.xyzx, t20.xyzw, s2, l(0.000000)
            else 
              mov r35.xyz, l(1.000000,1.000000,1.000000,0)
            endif 
          endif 
          mov r26.w, r25.w
          mul r25.xyz, r26.wxyw, r35.xyzx
          lt r10.w, l(0.000000), r13.w
          if_nz r10.w
            ubfe r18.xy, l(3, 4, 0, 0), l(27, 20, 0, 0), r27.xxxx
            ine r10.w, r18.x, l(1)
            if_nz r10.w
              mad r10.w, |r9.z|, l(-0.200000), l(0.400000)
              lt r14.z, r9.z, l(0.000000)
              and r14.z, r5.y, r14.z
              movc r10.w, r14.z, -r10.w, r10.w
              mad r19.xyz, r1.xyzx, r10.wwww, v6.xyzx
              mov r32.xy, r31.xyxx
              dp4 r10.w, r32.xyzw, r19.xyzw
              dp4 r14.z, r34.xyzw, r19.xyzw
              ge r18.x, r14.z, r10.w
              if_nz r18.x
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xy, r5.z, l(140), t12.xyxx
                mov r29.zw, r30.xxxy
                dp4 r26.x, r29.xyzw, r19.xyzw
                mov r31.xy, r30.zwzz
                dp4 r26.y, r31.xyzw, r19.xyzw
                div r19.xy, r26.xyxx, r14.zzzz
                mad_sat r19.xy, r19.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                mad r19.xy, r19.xyxx, r33.zxzz, r33.wyww
                div r5.z, r10.w, r14.z
                max r5.z, r5.z, l(0.00006104)
                and r10.w, r27.x, l(0x0000ffff)
                if_nz r4.x
                  utof r26.z, r10.w
                  mov r14.z, l(0)
                  mov r18.x, l(0)
                  loop 
                    ige r21.w, r18.x, l(8)
                    breakc_nz r21.w
                    dp2 r27.x, icb[r18.x + 0].xyxx, r10.xyxx
                    dp2 r27.y, icb[r18.x + 0].yxyy, r10.xzxx
                    mad r26.xy, r27.xyxx, r28.zzzz, r19.xyxx
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.w, r26.xyzx, t9.xxxx, s13, r5.z
                    mad r14.z, r21.w, l(0.125000), r14.z
                    iadd r18.x, r18.x, l(1)
                  endloop 
                else 
                  utof r19.z, r10.w
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r14.z, r19.xyzx, t9.xxxx, s13, r5.z
                endif 
                mul r5.z, r14.z, r14.z
                mul r5.z, r14.z, r5.z
              else 
                mov r5.z, l(1.000000)
              endif 
            else 
              mov r5.z, l(1.000000)
            endif 
            mul r5.z, r5.z, r13.w
            if_nz r18.y
              iadd r10.w, r18.y, cb2[0].x
              iadd r10.w, r10.w, l(-1)
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.w, r10.w, l(52), t12.xxxx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r26.xyzw, r10.w, l(68), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r27.xyzw, r10.w, l(84), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r28.xyzw, r10.w, l(100), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r29.xyzw, r10.w, l(116), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r30.xyzw, r10.w, l(132), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r10.w, l(148), t12.xyzw
              mad r18.x, |r9.z|, l(-0.200000), l(0.400000)
              lt r9.z, r9.z, l(0.000000)
              and r9.z, r5.y, r9.z
              movc r9.z, r9.z, -r18.x, r18.x
              mad r20.xyz, r1.xyzx, r9.zzzz, v6.xyzx
              dp4 r18.x, r26.xyzw, r20.xyzw
              dp4 r18.y, r27.xyzw, r20.xyzw
              dp4 r9.z, r28.xyzw, r20.xyzw
              dp4 r19.x, r29.xyzw, r20.xyzw
              lt r19.y, r19.x, r9.z
              div r18.xy, r18.xyxx, r19.xxxx
              mad r18.xy, r18.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
              add r18.xy, r31.zwzz, r18.xyxx
              mul r18.xy, r31.xyxx, r18.xyxx
              div r20.xy, r13.wwww, r30.xzxx
              add r26.xy, -r20.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
              ge r26.xy, r18.xyxx, r26.xyxx
              ge r20.xy, r20.xyxx, r18.xyxx
              or r20.xy, r20.xyxx, r26.xyxx
              or r19.z, r20.y, r20.x
              or r19.y, r19.y, r19.z
              if_z r19.y
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.y, r10.w, l(28), t12.xxxx
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r20.xy, r10.w, l(164), t12.xyxx
                mov_sat r18.xy, r18.xyxx
                mad r26.xy, r18.xyxx, r30.xzxx, r30.ywyy
                mul r10.w, r19.x, r20.y
                mad r9.z, r20.x, r19.x, r9.z
                div r9.z, r9.z, r10.w
                max r9.z, r9.z, l(0.00006104)
                and r10.w, r19.y, l(0x0000ffff)
                if_nz r4.x
                  utof r19.z, r10.w
                  mov r18.xy, l(0,0,0,0)
                  loop 
                    ige r20.x, r18.y, l(8)
                    breakc_nz r20.x
                    dp2 r20.x, icb[r18.y + 0].xyxx, r21.xyxx
                    dp2 r20.y, icb[r18.y + 0].yxyy, r21.xzxx
                    mad r19.xy, r20.xyxx, r13.wwww, r26.xyxx
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.x, r19.xyzx, t9.xxxx, s13, r9.z
                    mad r18.x, r19.x, l(0.125000), r18.x
                    iadd r18.y, r18.y, l(1)
                  endloop 
                else 
                  utof r26.z, r10.w
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r18.x, r26.xyzx, t9.xxxx, s13, r9.z
                endif 
                mul r9.z, r18.x, r18.x
                mul r9.z, r18.x, r9.z
              else 
                mov r9.z, l(1.000000)
              endif 
              mul r5.z, r5.z, r9.z
            endif 
            lt r9.z, l(0.000000), r5.z
            if_nz r9.z
              mul r19.xyz, r25.xyzx, r5.zzzz
              add r5.z, r5.w, r9.w
              div r5.z, r9.w, r5.z
              mad r15.xyz, r19.xyzx, r5.zzzz, r15.xyzx
              mad r17.xyz, r17.xyzx, r6.wwww, r6.xyzx
              dp3 r5.z, r17.xyzx, r17.xyzx
              rsq r5.z, r5.z
              mul r17.xyz, r5.zzzz, r17.xyzx
              dp3_sat r5.z, r1.xyzx, r17.xyzx
              dp3_sat r6.w, r17.xyzx, r6.xyzx
              mul r9.z, r5.z, r5.z
              mad r17.xy, r9.zzzz, cb0[12].xzxx, l(1.000000, 1.000000, 0.000000, 0.000000)
              mul r17.xy, r17.xyxx, r17.xyxx
              div r17.xy, cb0[12].ywyy, r17.xyxx
              mul r17.xy, r5.zzzz, r17.xyxx
              mul r5.z, r6.w, l(4.000000)
              div r17.xy, r17.xyxx, r5.zzzz
              mul r17.xy, r17.xyxx, cb0[13].xyxx
              mul r20.xyz, r17.xxxx, r19.xyzx
              mad r20.xyz, r20.xyzx, r9.wwww, r24.xyzx
              mul r17.xyz, r17.yyyy, r19.xyzx
              mad r24.xyz, r17.xyzx, r9.wwww, r20.xyzx
            endif 
          endif 
        endif 
        break 
        default 
        break 
      endswitch 
    endif 
  endloop 
  mov r22.xyz, r15.xyzx
  mov r23.xyz, r24.xyzx
  iadd r0.z, r0.z, l(32)
endloop 
sample_indexable(texture2d)(float,float,float,float) r6.xyzw, r4.zwzz, t0.xyzw, s1
add r0.y, r3.y, l(1.000000)
log r0.y, r0.y
mul r0.y, r0.y, cb0[13].w
min r0.y, r0.y, l(500.000000)
mad r0.yz, r0.yyyy, r1.xxyx, v0.xxyx
add r1.xy, cb1[44].xyxx, l(-1.000000, -1.000000, 0.000000, 0.000000)
max r0.yz, r0.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
min r0.yz, r1.xxyx, r0.yyzy
ftoi r1.xy, r0.yzyy
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r1.x, r1.xyzw, t24.xyzw
ge r1.y, r1.x, l(0.984375)
mul r1.z, r1.x, l(1.01587307)
mad r1.x, r1.x, l(64.000000), l(-63.000000)
movc r1.x, r1.y, r1.x, r1.z
max r1.x, r1.x, l(0.00000001)
rcp r1.x, r1.x
lt r0.x, r0.x, r1.x
mul r0.yz, r0.yyzy, cb1[44].zzwz
sample_indexable(texture2d)(float,float,float,float) r1.xyz, r0.yzyy, t25.xyzw, s6
if_z r0.x
  ftoi r7.xy, v0.xyxx
  mov r7.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r1.xyz, r7.xyzw, t25.xyzw
endif 
mul r0.xyz, r1.xyzx, cb1[85].xxxx
mad r1.w, r3.y, l(2.000000), l(1.000000)
log r1.w, r1.w
mul r4.x, r1.w, l(0.08333334)
mov r4.y, l(0)
sample_indexable(texture2d)(float,float,float,float) r7.xyzw, r4.xyxx, t26.xyzw, s5
mul r4.xyw, r0.xyxz, r7.xyxz
mul r1.w, r6.w, r7.w
mad r5.yzw, r6.xxyz, r22.xxyz, -r4.xxyw
mad r4.xyw, r1.wwww, r5.yzyw, r4.xyxw
mad r1.xyz, -r1.xyzx, cb1[85].xxxx, r4.xywx
mad r0.xyz, r5.xxxx, r1.xyzx, r0.xyzx
mad r1.xyz, r3.xzwx, r22.xyzx, -r0.xyzx
mad r0.xyz, r8.wwww, r1.xyzx, r0.xyzx
mad r1.xyz, r23.xyzx, r0.wwww, r8.xyzx
add r0.w, -r4.z, l(1.000000)
mul r1.w, r0.w, r0.w
mul r1.w, r1.w, r1.w
mul r0.w, r0.w, r1.w
mad r0.w, r0.w, l(0.980000), l(0.020000)
add r1.xyz, -r0.xyzx, r1.xyzx
mad r0.xyz, r0.wwww, r1.xyzx, r0.xyzx
lt r0.w, l(0.000000), cb2[9].z
if_nz r0.w
  sqrt r0.w, r2.x
  lt r1.x, l(0.000000), cb2[13].w
  if_nz r1.x
    mad r1.xy, r0.wwww, cb2[15].xyxx, cb2[14].zwzz
    mul r1.xy, r1.xyxx, cb2[16].xyxx
    lt r1.z, l(0.010000), |v6.z|
    mul r3.xy, v6.zzzz, cb2[15].zwzz
    mul r3.zw, r3.xxxy, l(0.000000, 0.000000, -1.442695, -1.442695)
    exp r3.zw, r3.zzzw
    add r3.zw, -r3.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    div r3.xy, r3.zwzz, r3.xyxx
    mul r3.xy, r1.xyxx, r3.xyxx
    movc r1.xy, r1.zzzz, r3.xyxx, r1.xyxx
    mul r1.xzw, r1.xxxx, cb2[12].xxyz
    exp r1.xzw, r1.xxzw
    mul r3.xyz, r1.yyyy, cb2[12].xyzx
    exp r3.xyz, r3.xyzx
    add r3.xyz, -r1.xzwx, r3.xyzx
    mad r1.xyz, cb2[13].wwww, r3.xyzx, r1.xzwx
  else 
    mad r1.w, r0.w, cb2[15].x, cb2[14].z
    mul r1.w, r1.w, cb2[16].x
    lt r3.x, l(0.010000), |v6.z|
    mul r3.y, v6.z, cb2[15].z
    mul r3.z, r3.y, l(-1.442695)
    exp r3.z, r3.z
    add r3.z, -r3.z, l(1.000000)
    div r3.y, r3.z, r3.y
    mul r3.y, r1.w, r3.y
    movc r1.w, r3.x, r3.y, r1.w
    mul r3.xyz, r1.wwww, cb2[12].xyzx
    exp r1.xyz, r3.xyzx
  endif 
  mad r1.xyz, r1.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r1.xyz, r1.xyzx, -cb2[9].zzzz
  dp3 r1.w, cb2[7].yzwy, -r2.yzwy
  mad r3.x, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r3.y, cb2[8].w, -r1.w, l(1.000000)
  mul r3.y, r3.y, r3.y
  mul r3.y, r3.y, l(12.566371)
  div r3.x, r3.x, r3.y
  add r0.w, r0.w, -cb2[10].w
  mul_sat r0.w, r0.w, cb2[11].w
  mul r0.w, r0.w, r3.x
  mov_sat r1.w, r1.w
  mad r1.w, r1.w, r1.w, l(1.000000)
  mad r1.w, r1.w, l(0.05968310), l(-1.000000)
  mad r1.w, cb2[8].z, r1.w, l(1.000000)
  mul r3.xyz, r0.wwww, cb2[11].xyzx
  mad r3.xyz, r1.wwww, cb2[10].xyzx, r3.xyzx
  mul r3.xyz, r3.xyzx, cb2[9].wwww
  add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r3.xyz, r3.xyzx, r4.xyzx
  mad r1.xyz, r0.xyzx, r1.xyzx, r3.xyzx
else 
  mul r0.w, v6.z, cb2[6].x
  mad r1.w, cb2[6].x, v6.z, cb2[5].x
  lt r3.x, |r0.w|, l(0.000100)
  min r3.y, r1.w, l(64.000000)
  mul r3.y, r3.y, l(1.442695)
  exp r3.y, r3.y
  mov_sat r3.z, cb2[6].z
  lt r3.w, r1.w, l(0.000000)
  add r1.w, r1.w, l(1.000000)
  movc r1.w, r3.w, r3.y, r1.w
  add r1.w, r1.w, -cb2[6].z
  movc r0.w, r3.x, l(1.000000), r0.w
  div r0.w, r1.w, r0.w
  movc r0.w, r3.x, r3.z, r0.w
  mul r0.w, r0.w, cb2[5].z
  sqrt r1.w, r2.x
  mad r0.w, r0.w, r1.w, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  dp3 r1.w, cb2[7].yzwy, r2.yzwy
  mad_sat r1.w, cb2[8].y, r1.w, cb2[8].x
  add r2.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r2.xyzw, r1.wwww, r2.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r2.w
  add r2.xyz, -r0.xyzx, r2.xyzx
  mad r1.xyz, r0.wwww, r2.xyzx, r0.xyzx
endif 
mul r0.xyz, r1.xyzx, cb1[85].yyyy
ge r1.xyz, r0.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.xyz, r0.xyzx, r1.xyzx
min o0.xyz, r0.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
mov o0.w, l(1.000000)
ret 
// Approximately 2171 instruction slots used
