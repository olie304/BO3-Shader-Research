//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:38:31 2021
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float3 colorTint;                  // Offset:  160 Size:    12
//   float baseNormalHeight;            // Offset:  172 Size:     4
//   float2 glossRange;                 // Offset:  176 Size:     8
//   float detailScaleHeight;           // Offset:  184 Size:     4
//   float4 tensionParms;               // Offset:  192 Size:    16
//   bool enableGTAO;                   // Offset:  208 Size:     4
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16
//   float4 debugNormalOverride;        // Offset:  960 Size:    16
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4
//   uint numDynamicDecals;             // Offset:  924 Size:     4
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for modelInstanceBuffer
// {
//
//   struct ModelInstanceData
//   {
//       
//       uint boneArrayIndex;           // Offset:    0
//       uint shaderConstantSet;        // Offset:    4
//       uint flagsAndPrevFrameIndex;   // Offset:    8
//       uint worldMatrix;              // Offset:   12
//       uint siegeAnimStateOffset;     // Offset:   16
//       uint prevFrameSiegeAnimStateOffset;// Offset:   20
//
//   } $Element;                        // Offset:    0 Size:    24
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for forwardDecalConstants
// {
//
//   struct CoreDecalConstantsPack
//   {
//       
//       uint4 data[8];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   128
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// colorSampler                      sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// specColorSampler                  sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// normalSampler                     sampler      NA          NA             s5      1 
// aoSampler                         sampler      NA          NA             s6      1 
// PointSampler                      sampler      NA          NA             s7      1 
// LinearSampler                     sampler      NA          NA             s8      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// floatZSampler                     texture  float4          2d             t0      1 
// thicknessMap                      texture  float4          2d             t3      1 
// modelInstanceBuffer               texture  struct         r/o             t4      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// colorMap                          texture  float4          2d            t21      1 
// normalMap                         texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// glossMap                          texture  float4          2d            t24      1 
// aoMap                             texture  float4          2d            t25      1 
// detailMap                         texture  float4          2d            t26      1 
// gSSAOTexture                      texture   float          2d            t27      1 
// coneLUTMap                        texture  float4          2d            t29      1 
// stretchNormal                     texture  float4          2d            t30      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// visibleDecals                     texture    uint     2darray            t35      1 
// forwardDecalConstants             texture  struct         r/o            t36      1 
// compressNormal                    texture  float4          2d            t37      1 
// materialTexBC7                    texture  float4     2darray            t42      1 
// materialTexBC3                    texture  float4     2darray            t43      1 
// materialTexBC7linear              texture  float4     2darray            t44      1 
// materialTexMask                   texture  float4     2darray            t45      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    1   x           1     NONE   float       
// TEXCOORD                 0    yz         1     NONE   float    yz 
// BENTNORMAL               0   xyz         2     NONE   float   xyz 
// TEXCOORD                 4   x           3     NONE    uint   x   
// TEXCOORD                 1   xyz         4     NONE   float   xyz 
// TEXCOORD                 2   xyz         5     NONE   float   xyz 
// TEXCOORD                 3   xyz         6     NONE   float   xyz 
// OFFPOSITION              0   xyz         7     NONE   float   xyz 
// TENSION                  0   xyz         8     NONE   float   xy  
// SV_IsFrontFace           0   x           9    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyz         0   TARGET   float   xyz 
// SV_TARGET                1   xyz         1   TARGET   float   xyz 
// SV_TARGET                2   xyzw        2   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[14], immediateIndexed
dcl_constantbuffer CB1[93], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_structured t4, 24
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2d (float,float,float,float) t26
dcl_resource_texture2d (float,float,float,float) t27
dcl_resource_texture2d (float,float,float,float) t29
dcl_resource_texture2d (float,float,float,float) t30
dcl_resource_texture2darray (float,float,float,float) t31
dcl_resource_texture2darray (uint,uint,uint,uint) t35
dcl_resource_structured t36, 128
dcl_resource_texture2d (float,float,float,float) t37
dcl_resource_texture2darray (float,float,float,float) t42
dcl_resource_texture2darray (float,float,float,float) t43
dcl_resource_texture2darray (float,float,float,float) t44
dcl_resource_texture2darray (float,float,float,float) t45
dcl_input_ps_siv linear noperspective v0.xyzw, position
dcl_input_ps linear v1.yz
dcl_input_ps linear v2.xyz
dcl_input_ps constant v3.x
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyz
dcl_input_ps linear v8.xy
dcl_input_ps_sgv constant v9.x, is_front_face
dcl_output o0.xyz
dcl_output o1.xyz
dcl_output o2.xyzw
dcl_temps 69
dcl_indexableTemp x0[4], 4
dcl_indexableTemp x1[4], 4
dcl_indexableTemp x2[4], 4
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.yzyy, t21.xyzw, s1
add r1.xyz, cb0[10].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r1.xyz, r0.wwww, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r0.xyz, r0.xyzx, r1.xyzx
sample_indexable(texture2d)(float,float,float,float) r1.x, v1.yzyy, t24.xyzw, s3
add r1.y, -cb0[11].x, cb0[11].y
mad r1.x, r1.x, r1.y, cb0[11].x
mul_sat r1.x, r1.x, l(0.05882353)
mul_sat r1.zw, v8.xxxy, cb0[12].wwww
log r1.zw, r1.zzzw
mul r1.zw, r1.zzzw, cb0[12].zzzz
exp r1.zw, r1.zzzw
lt r2.x, r1.w, r1.z
sample_indexable(texture2d)(float,float,float,float) r2.yzw, v1.yzyy, t37.wxyz, s5
sample_indexable(texture2d)(float,float,float,float) r3.xyz, v1.yzyy, t30.xyzw, s5
movc r2.yzw, r2.xxxx, r2.yyzw, r3.xxyz
movc r1.z, r2.x, r1.z, r1.w
movc r1.w, r2.x, cb0[12].y, cb0[12].x
sample_indexable(texture2d)(float,float,float,float) r3.xyz, v1.yzyy, t22.xyzw, s5
add r3.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.000000, 0.000000)
mad r3.xyz, cb0[10].wwww, r3.xyzx, l(0.500000, 0.500000, 0.000000, 0.000000)
mad r3.xy, r3.xyxx, l(1.99218750, 1.99218750, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r2.x, r3.xyxx, r3.xyxx
add r2.x, -r2.x, l(1.000000)
max r2.x, r2.x, l(0.000000)
sqrt r4.z, r2.x
mul r2.x, r3.z, r3.z
mul r2.x, r2.x, l(0.33333334)
mad r2.yz, r2.yyzy, l(0.000000, 1.99218750, 1.99218750, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
mul r2.w, r2.w, r2.w
mul r2.w, r2.w, l(0.33333334)
min r2.xw, r2.xxxw, l(1.000000, 0.000000, 0.000000, 1.000000)
mul r1.z, r1.w, r1.z
mad r4.xy, r2.yzyy, r1.zzzz, r3.xyxx
dp3 r1.w, r4.xyzx, r4.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r4.xyzx
mad r1.z, r2.w, r1.z, r2.x
mul r2.xy, v1.yzyy, cb0[4].xyxx
sample_indexable(texture2d)(float,float,float,float) r2.xyz, r2.xyxx, t26.xyzw, s5
mad r2.xy, r2.xyxx, l(1.99218750, 1.99218750, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r1.w, r2.z, r2.z
mul r1.w, r1.w, l(0.33333334)
min r1.w, r1.w, l(1.000000)
mad r3.xy, r2.xyxx, cb0[11].zzzz, r3.xyxx
dp3 r2.x, r3.xyzx, r3.xyzx
rsq r2.x, r2.x
mul r2.xyz, r2.xxxx, r3.xyzx
mad r1.z, r1.w, cb0[11].z, r1.z
movc r1.w, v9.x, l(1.000000), l(-1.000000)
dp3 r2.w, v4.xyzx, v4.xyzx
rsq r2.w, r2.w
mul r3.xyz, r2.wwww, v4.xyzx
mul r3.xyz, r1.wwww, r3.xyzx
dp3 r2.w, v5.xyzx, v5.xyzx
rsq r2.w, r2.w
mul r4.xyz, r2.wwww, v5.xyzx
mul r4.xyz, r1.wwww, r4.xyzx
dp3 r2.w, v6.xyzx, v6.xyzx
rsq r2.w, r2.w
mul r5.xyz, r2.wwww, v6.xyzx
mul r5.xyz, r1.wwww, r5.xyzx
mul r1.x, r1.x, l(-17.000000)
exp r1.x, r1.x
add r1.x, r1.x, r1.z
log r1.x, r1.x
mul r5.xyz, r2.yyyy, r5.xyzx
mad r2.xyw, r4.xyxz, r2.xxxx, r5.xyxz
mad r2.xyz, r3.xyzx, r2.zzzz, r2.xywx
dp3 r1.z, r2.xyzx, r2.xyzx
rsq r1.z, r1.z
mul r2.xyz, r1.zzzz, r2.xyzx
mad r1.y, cb1[62].x, r1.y, cb0[11].x
mul_sat r1.xy, r1.xyxx, l(-0.05882353, 0.05882353, 0.000000, 0.000000)
lt r1.z, l(0.000000), cb1[64].w
if_nz r1.z
  ftoi r1.z, cb1[64].w
  lod r2.w, v1.yzyy, t21.y, s1
  lod r3.x, v1.yzyy, t21.x, s1
  lt r2.w, r2.w, r3.x
  lt r3.x, l(0.000000), r3.x
  and r3.yzw, r1.zzzz, l(0, 1, 2, 4)
  movc r4.xyz, r3.yyyy, l(1.000000,0,1.000000,0), r0.xyzx
  movc r5.xyz, r3.zzzz, l(0,1.000000,1.000000,0), r0.xyzx
  movc r3.xyz, r3.xxxx, r4.xyzx, r5.xyzx
  movc r4.xyz, r3.wwww, l(0,1.000000,0,0), r0.xyzx
  movc r0.xyz, r2.wwww, r3.xyzx, r4.xyzx
endif 
add r3.xyz, -r0.xyzx, cb1[58].xyzx
mad r0.xyz, cb1[58].wwww, r3.xyzx, r0.xyzx
add r1.z, -r0.w, cb1[59].x
mad r0.w, cb1[59].w, r1.z, r0.w
add r1.y, -r1.x, r1.y
mad r1.x, cb1[62].w, r1.y, r1.x
movc r3.xyz, v9.xxxx, v4.xyzx, -v4.xyzx
dp3 r1.y, r3.xyzx, r3.xyzx
rsq r1.y, r1.y
mad r3.xyz, r3.xyzx, r1.yyyy, -r2.xyzx
mad r2.xyz, cb1[60].wwww, r3.xyzx, r2.xyzx
sample_indexable(texture2d)(float,float,float,float) r1.y, v1.yzyy, t3.yxzw, s1
add r1.y, -r1.y, l(1.000000)
mul r3.xyz, r1.yyyy, l(1.000000, 0.500000, 0.500000, 0.000000)
mul r4.xyzw, v0.xyxy, cb1[44].zwzw
if_nz cb0[13].x
  mul r5.xyz, v4.yyyy, cb1[5].xyzx
  mad r5.xyz, v4.xxxx, cb1[4].xyzx, r5.xyzx
  mad r5.xyz, v4.zzzz, cb1[6].xyzx, r5.xyzx
  dp3 r1.y, r5.xyzx, r5.xyzx
  rsq r1.y, r1.y
  mul r5.xyz, r1.yyyy, r5.xyzx
  mul r1.y, cb1[70].w, l(0.500000)
  mad r6.xy, cb1[73].xyxx, r4.zwzz, -cb1[73].zwzz
  mul r6.xy, r6.xyxx, v0.wwww
  dp2 r1.z, v0.xyxx, l(0.06711056, 0.00583715, 0.000000, 0.000000)
  frc r1.z, r1.z
  mul r1.z, r1.z, l(52.982918)
  frc r1.z, r1.z
  mad r1.y, r1.z, l(3.141600), r1.y
  sincos r7.x, r8.x, r1.y
  mul r9.xyzw, cb1[44].zwzw, l(4.166667, 4.166667, 16.666668, 16.666668)
  mov r8.y, r7.x
  mad r7.xyzw, r9.xyzw, r8.xyxy, r4.zwzw
  mul r10.xyzw, r7.xyzw, cb1[44].xyxy
  ftoi r11.xy, r10.xyxx
  mov r11.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r1.y, r11.xyzw, t0.yxzw
  ge r1.z, r1.y, l(0.984375)
  mul r2.w, r1.y, l(1.01587307)
  mad r1.y, r1.y, l(64.000000), l(-63.000000)
  movc r1.y, r1.z, r1.y, r2.w
  max r1.y, r1.y, l(0.00000001)
  rcp r11.z, r1.y
  mad r7.xyzw, cb1[73].xyxy, r7.xyzw, -cb1[73].zwzw
  mul r11.xy, r7.xyxx, r11.zzzz
  mov r6.z, v0.w
  add r11.xyz, -r6.xyzx, r11.xyzx
  dp3 r1.y, r11.xyzx, r11.xyzx
  rsq r1.y, r1.y
  mul r1.y, r1.y, -r11.z
  max r1.y, r1.y, l(-1.000000)
  ftoi r10.xy, r10.zwzz
  mov r10.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r1.z, r10.xyzw, t0.yzxw
  ge r2.w, r1.z, l(0.984375)
  mul r3.w, r1.z, l(1.01587307)
  mad r1.z, r1.z, l(64.000000), l(-63.000000)
  movc r1.z, r2.w, r1.z, r3.w
  max r1.z, r1.z, l(0.00000001)
  rcp r10.z, r1.z
  mul r10.xy, r7.zwzz, r10.zzzz
  add r7.xyz, -r6.xyzx, r10.xyzx
  dp3 r1.z, r7.xyzx, r7.xyzx
  rsq r1.z, r1.z
  mul r1.z, r1.z, -r7.z
  max r1.y, r1.z, r1.y
  mul r7.xyzw, cb1[44].zwzw, l(37.500000, 37.500000, 66.666672, 66.666672)
  mad r10.xyzw, r7.xyzw, r8.xyxy, r4.zwzw
  mul r11.xyzw, r10.xyzw, cb1[44].xyxy
  ftoi r12.xy, r11.xyxx
  mov r12.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r1.z, r12.xyzw, t0.yzxw
  ge r2.w, r1.z, l(0.984375)
  mul r3.w, r1.z, l(1.01587307)
  mad r1.z, r1.z, l(64.000000), l(-63.000000)
  movc r1.z, r2.w, r1.z, r3.w
  max r1.z, r1.z, l(0.00000001)
  rcp r12.z, r1.z
  mad r10.xyzw, cb1[73].xyxy, r10.xyzw, -cb1[73].zwzw
  mul r12.xy, r10.xyxx, r12.zzzz
  add r12.xyz, -r6.xyzx, r12.xyzx
  dp3 r1.z, r12.xyzx, r12.xyzx
  rsq r1.z, r1.z
  mul r1.z, r1.z, -r12.z
  max r1.y, r1.z, r1.y
  ftoi r11.xy, r11.zwzz
  mov r11.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r1.z, r11.xyzw, t0.yzxw
  ge r2.w, r1.z, l(0.984375)
  mul r3.w, r1.z, l(1.01587307)
  mad r1.z, r1.z, l(64.000000), l(-63.000000)
  movc r1.z, r2.w, r1.z, r3.w
  max r1.z, r1.z, l(0.00000001)
  rcp r11.z, r1.z
  mul r11.xy, r10.zwzz, r11.zzzz
  add r10.xyz, -r6.xyzx, r11.xyzx
  dp3 r1.z, r10.xyzx, r10.xyzx
  rsq r1.z, r1.z
  mul r1.z, r1.z, -r10.z
  max r1.y, r1.z, r1.y
  mul r10.xyzw, cb1[44].zwzw, l(104.166664, 104.166664, 150.000000, 150.000000)
  mad r11.xyzw, r10.xyzw, r8.xyxy, r4.zwzw
  mul r12.xyzw, r11.xyzw, cb1[44].xyxy
  ftoi r13.xy, r12.xyxx
  mov r13.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r1.z, r13.xyzw, t0.yzxw
  ge r2.w, r1.z, l(0.984375)
  mul r3.w, r1.z, l(1.01587307)
  mad r1.z, r1.z, l(64.000000), l(-63.000000)
  movc r1.z, r2.w, r1.z, r3.w
  max r1.z, r1.z, l(0.00000001)
  rcp r13.z, r1.z
  mad r11.xyzw, cb1[73].xyxy, r11.xyzw, -cb1[73].zwzw
  mul r13.xy, r11.xyxx, r13.zzzz
  add r13.xyz, -r6.xyzx, r13.xyzx
  dp3 r1.z, r13.xyzx, r13.xyzx
  rsq r1.z, r1.z
  mul r1.z, r1.z, -r13.z
  max r1.y, r1.z, r1.y
  ftoi r12.xy, r12.zwzz
  mov r12.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r1.z, r12.xyzw, t0.yzxw
  ge r2.w, r1.z, l(0.984375)
  mul r3.w, r1.z, l(1.01587307)
  mad r1.z, r1.z, l(64.000000), l(-63.000000)
  movc r1.z, r2.w, r1.z, r3.w
  max r1.z, r1.z, l(0.00000001)
  rcp r12.z, r1.z
  mul r12.xy, r11.zwzz, r12.zzzz
  add r11.xyz, -r6.xyzx, r12.xyzx
  dp3 r1.z, r11.xyzx, r11.xyzx
  rsq r1.z, r1.z
  mul r1.z, r1.z, -r11.z
  max r1.y, r1.z, r1.y
  mad r9.xyzw, r9.xyzw, -r8.xyxy, r4.zwzw
  mul r11.xyzw, r9.xyzw, cb1[44].xyxy
  ftoi r11.xyzw, r11.zwxy
  mov r12.xy, r11.zwzz
  mov r12.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r1.z, r12.xyzw, t0.yzxw
  ge r2.w, r1.z, l(0.984375)
  mul r3.w, r1.z, l(1.01587307)
  mad r1.z, r1.z, l(64.000000), l(-63.000000)
  movc r1.z, r2.w, r1.z, r3.w
  max r1.z, r1.z, l(0.00000001)
  rcp r12.z, r1.z
  mad r9.xyzw, cb1[73].xyxy, r9.xyzw, -cb1[73].zwzw
  mul r12.xy, r9.xyxx, r12.zzzz
  add r12.xyz, -r6.xyzx, r12.xyzx
  dp3 r1.z, r12.xyzx, r12.xyzx
  rsq r1.z, r1.z
  mul r1.z, r1.z, -r12.z
  max r1.z, r1.z, l(-1.000000)
  mov r11.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r2.w, r11.xyzw, t0.yzwx
  ge r3.w, r2.w, l(0.984375)
  mul r5.w, r2.w, l(1.01587307)
  mad r2.w, r2.w, l(64.000000), l(-63.000000)
  movc r2.w, r3.w, r2.w, r5.w
  max r2.w, r2.w, l(0.00000001)
  rcp r11.z, r2.w
  mul r11.xy, r9.zwzz, r11.zzzz
  add r9.xyz, -r6.xyzx, r11.xyzx
  dp3 r2.w, r9.xyzx, r9.xyzx
  rsq r2.w, r2.w
  mul r2.w, r2.w, -r9.z
  max r1.z, r1.z, r2.w
  mad r7.xyzw, r7.xyzw, -r8.xyxy, r4.zwzw
  mul r9.xyzw, r7.xyzw, cb1[44].xyxy
  ftoi r9.xyzw, r9.zwxy
  mov r11.xy, r9.zwzz
  mov r11.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r2.w, r11.xyzw, t0.yzwx
  ge r3.w, r2.w, l(0.984375)
  mul r5.w, r2.w, l(1.01587307)
  mad r2.w, r2.w, l(64.000000), l(-63.000000)
  movc r2.w, r3.w, r2.w, r5.w
  max r2.w, r2.w, l(0.00000001)
  rcp r11.z, r2.w
  mad r7.xyzw, cb1[73].xyxy, r7.xyzw, -cb1[73].zwzw
  mul r11.xy, r7.xyxx, r11.zzzz
  add r11.xyz, -r6.xyzx, r11.xyzx
  dp3 r2.w, r11.xyzx, r11.xyzx
  rsq r2.w, r2.w
  mul r2.w, r2.w, -r11.z
  max r1.z, r1.z, r2.w
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r2.w, r9.xyzw, t0.yzwx
  ge r3.w, r2.w, l(0.984375)
  mul r5.w, r2.w, l(1.01587307)
  mad r2.w, r2.w, l(64.000000), l(-63.000000)
  movc r2.w, r3.w, r2.w, r5.w
  max r2.w, r2.w, l(0.00000001)
  rcp r9.z, r2.w
  mul r9.xy, r7.zwzz, r9.zzzz
  add r7.xyz, -r6.xyzx, r9.xyzx
  dp3 r2.w, r7.xyzx, r7.xyzx
  rsq r2.w, r2.w
  mul r2.w, r2.w, -r7.z
  max r1.z, r1.z, r2.w
  mad r7.xyzw, r10.xyzw, -r8.xyxy, r4.xyzw
  mul r9.xyzw, r7.xyzw, cb1[44].xyxy
  ftoi r9.xyzw, r9.zwxy
  mov r10.xy, r9.zwzz
  mov r10.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r2.w, r10.xyzw, t0.yzwx
  ge r3.w, r2.w, l(0.984375)
  mul r4.x, r2.w, l(1.01587307)
  mad r2.w, r2.w, l(64.000000), l(-63.000000)
  movc r2.w, r3.w, r2.w, r4.x
  max r2.w, r2.w, l(0.00000001)
  rcp r10.z, r2.w
  mad r7.xyzw, cb1[73].xyxy, r7.xyzw, -cb1[73].zwzw
  mul r10.xy, r7.xyxx, r10.zzzz
  add r10.xyz, -r6.xyzx, r10.xyzx
  dp3 r2.w, r10.xyzx, r10.xyzx
  rsq r2.w, r2.w
  mul r2.w, r2.w, -r10.z
  max r1.z, r1.z, r2.w
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r2.w, r9.xyzw, t0.yzwx
  ge r3.w, r2.w, l(0.984375)
  mul r4.x, r2.w, l(1.01587307)
  mad r2.w, r2.w, l(64.000000), l(-63.000000)
  movc r2.w, r3.w, r2.w, r4.x
  max r2.w, r2.w, l(0.00000001)
  rcp r9.z, r2.w
  mul r9.xy, r7.zwzz, r9.zzzz
  add r6.xyz, -r6.xyzx, r9.xyzx
  dp3 r2.w, r6.xyzx, r6.xyzx
  rsq r2.w, r2.w
  mul r2.w, r2.w, -r6.z
  max r1.z, r1.z, r2.w
  mul r4.xy, r8.xyxx, cb1[73].xyxx
  dp2 r2.w, r4.xyxx, r4.xyxx
  rsq r2.w, r2.w
  mul r6.xy, r2.wwww, r4.xyxx
  mov r6.zw, -r6.yyyy
  dp2 r2.w, r5.yxyy, r6.xzxx
  mad r5.xy, -r6.wxww, r2.wwww, r5.xyxx
  dp3 r2.w, r5.xyzx, r5.xyzx
  rsq r2.w, r2.w
  mul r5.xyz, r2.wwww, r5.zxyz
  dp2 r2.w, r6.xyxx, r5.yzyy
  ge r2.w, r2.w, l(0.000000)
  movc r2.w, r2.w, l(-1.000000), l(1.000000)
  mov_sat r5.x, -r5.x
  add r3.w, -r5.x, l(1.000000)
  sqrt r3.w, r3.w
  mad r4.x, r5.x, l(-0.01872930), l(0.074261)
  mad r4.x, r4.x, r5.x, l(-0.21211439)
  mad r4.x, r4.x, r5.x, l(1.57072878)
  mul r3.w, r3.w, r4.x
  mul r4.x, r2.w, r3.w
  add r4.y, -|r1.y|, l(1.000000)
  sqrt r4.y, r4.y
  mad r5.x, |r1.y|, l(-0.01872930), l(0.074261)
  mad r5.x, r5.x, |r1.y|, l(-0.21211439)
  mad r5.x, r5.x, |r1.y|, l(1.57072878)
  mul r5.y, r4.y, r5.x
  mad r5.y, r5.y, l(-2.000000), l(3.14159274)
  lt r1.y, r1.y, -r1.y
  and r1.y, r1.y, r5.y
  mad r1.y, r5.x, r4.y, r1.y
  add r4.y, -|r1.z|, l(1.000000)
  sqrt r4.y, r4.y
  mad r5.x, |r1.z|, l(-0.01872930), l(0.074261)
  mad r5.x, r5.x, |r1.z|, l(-0.21211439)
  mad r5.x, r5.x, |r1.z|, l(1.57072878)
  mul r5.y, r4.y, r5.x
  mad r5.y, r5.y, l(-2.000000), l(3.14159274)
  lt r1.z, r1.z, -r1.z
  and r1.z, r1.z, r5.y
  mad r1.z, r5.x, r4.y, r1.z
  mad r1.y, -r2.w, r3.w, -r1.y
  max r1.y, r1.y, l(-1.570800)
  mad r1.y, r2.w, r3.w, r1.y
  mad r1.z, -r2.w, r3.w, r1.z
  min r1.z, r1.z, l(1.570800)
  mad r1.z, r2.w, r3.w, r1.z
  sincos r5.x, r6.x, r4.x
  add r1.yz, r1.yyzy, r1.yyzy
  mad r4.y, r1.y, r5.x, r6.x
  mad r1.y, -r2.w, r3.w, r1.y
  sincos null, r1.y, r1.y
  add r1.y, -r1.y, r4.y
  mad r4.y, r1.z, r5.x, r6.x
  mad r1.z, -r2.w, r3.w, r1.z
  sincos null, r1.z, r1.z
  add r1.z, -r1.z, r4.y
  mul r1.z, r1.z, l(0.250000)
  mad r1.y, r1.y, l(0.250000), r1.z
  mad r1.z, r4.x, r5.x, r6.x
  div r1.y, r1.y, r1.z
else 
  sample_indexable(texture2d)(float,float,float,float) r1.z, v1.yzyy, t25.yzxw, s6
  add r2.w, -r1.z, cb1[63].x
  mad r1.z, cb1[63].w, r2.w, r1.z
  sample_l_indexable(texture2d)(float,float,float,float) r2.w, r4.zwzz, t27.yzwx, s8, l(0.000000)
  min r1.y, r1.z, r2.w
endif 
ge r1.z, v0.z, l(0.984375)
mul r2.w, v0.z, l(1.01587307)
mad r3.w, v0.z, l(64.000000), l(-63.000000)
movc r1.z, r1.z, r3.w, r2.w
max r1.z, r1.z, l(0.00000001)
rcp r1.z, r1.z
ftou r4.xy, v0.xyxx
deriv_rtx_coarse r5.xyz, v7.xyzx
deriv_rty_coarse r6.xyz, v7.xyzx
iadd r2.w, cb2[0].y, cb2[0].x
ld_structured_indexable(structured_buffer, stride=24)(mixed,mixed,mixed,mixed) r3.w, v3.x, l(8), t4.xxxx
and r4.zw, r3.wwww, l(0, 0, 0x10000000, 0x20000000)
if_nz r4.z
  add r7.xyz, v7.xyzx, cb1[24].xyzx
  mul r3.w, r1.z, l(0.00781250)
  min r3.w, r3.w, l(15.000000)
  ftou r3.w, r3.w
  ushr r8.xy, r4.xyxx, l(6, 6, 0, 0)
  ishl r8.z, r3.w, l(4)
  and r3.w, cb2[57].z, l(-32)
  iadd r4.z, -r3.w, cb2[57].z
  mov r9.xy, l(0,0,0,0)
  mov r10.w, l(0)
  mov r7.w, l(1.000000)
  mov r11.xyz, l(0,0,0,0)
  mov r12.xyz, l(0,0,0,0)
  mov r13.yz, l(0,0,0,0)
  mov r5.w, l(0)
  loop 
    uge r6.w, r5.w, cb2[57].z
    breakc_nz r6.w
    ushr r9.z, r5.w, l(5)
    iadd r10.xyz, r8.xyzx, r9.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r6.w, r10.xyzw, t35.yzwx
    ieq r8.w, r3.w, r5.w
    ubfe r9.z, r4.z, l(0), r6.w
    movc r6.w, r8.w, r9.z, r6.w
    iadd r8.w, r2.w, r5.w
    mov r10.xyz, r11.xyzx
    mov r14.xyz, r12.xzyx
    mov r15.yz, r13.yyzy
    mov r9.z, r6.w
    loop 
      breakc_z r9.z
      firstbit_lo r9.w, r9.z
      ishl r11.w, l(1), r9.w
      and r12.w, r9.z, r11.w
      if_nz r12.w
        xor r9.z, r9.z, r11.w
        iadd r11.w, r8.w, r9.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r16.xyzw, r11.w, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r17.xy, r11.w, l(16), t11.xyxx
        add r16.xyz, r16.xyzx, -v7.xyzx
        mov r17.z, r16.w
        lt r16.xyz, |r16.xyzx|, r17.zxyz
        and r11.w, r16.y, r16.x
        and r11.w, r16.z, r11.w
        if_nz r11.w
          iadd r9.w, r5.w, r9.w
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r16.xyz, r9.w, l(0), t36.xyzx
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r17.xyz, r9.w, l(16), t36.xyzx
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r18.xyz, r9.w, l(32), t36.xyzx
          mov r19.x, r16.x
          mov r19.y, r17.x
          mov r19.z, r18.x
          dp3 r11.w, r19.xyzx, r19.xyzx
          rsq r11.w, r11.w
          mul r20.xyz, r11.wwww, r19.xyzx
          dp3 r11.w, r20.xyzx, v4.xyzx
          ge r11.w, r11.w, l(0.500000)
          if_nz r11.w
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r21.xyw, r9.w, l(48), t36.xyxz
            mov r19.w, r21.x
            dp4 r19.x, r7.xyzw, r19.xyzw
            mov r22.x, r16.y
            mov r22.y, r17.y
            mov r22.z, r18.y
            mov r22.w, r21.y
            dp4 r19.y, r7.xyzw, r22.xyzw
            mov r21.x, r16.z
            mov r21.y, r17.z
            mov r21.z, r18.z
            dp4 r19.z, r7.xyzw, r21.xyzw
            lt r16.xyz, |r19.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
            and r11.w, r16.y, r16.x
            and r11.w, r16.z, r11.w
            if_nz r11.w
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r16.xyzw, r9.w, l(64), t36.xyzw
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r17.xyzw, r9.w, l(80), t36.xyzw
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r18.xyzw, r9.w, l(96), t36.xyzw
              dp3 r23.x, r5.xyzx, r22.xyzx
              dp3 r23.y, r5.xyzx, r21.xyzx
              dp3 r24.x, r6.xyzx, r22.xyzx
              dp3 r24.y, r6.xyzx, r21.xyzx
              mad r19.xy, r19.yzyy, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
              mul r23.xyz, r23.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
              mul r24.xyz, r24.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
              and r19.zw, r17.yyyz, l(0, 0, 0x0000ffff, 0x0000ffff)
              if_nz r19.z
                ubfe r11.w, l(4), l(24), r17.w
                ishl r11.w, l(1), r11.w
                ushr r12.w, r17.w, l(28)
                ishl r12.w, l(1), r12.w
                ieq r13.w, r19.z, l(4)
                if_nz r13.w
                  and r13.w, r17.w, l(4095)
                  ubfe r14.w, l(12), l(12), r17.w
                  and r15.w, r18.w, l(1023)
                  utof r25.xz, r11.wwww
                  utof r25.y, r12.w
                  mad r26.xy, r19.xyxx, r25.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r26.zw, r25.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r26.xy, r26.zwzz, r26.xyxx
                  utof r27.x, r13.w
                  utof r27.y, r14.w
                  add r26.xy, r26.xyxx, r27.xyxx
                  mul r26.xy, r26.xyxx, cb1[83].xyxx
                  utof r26.z, r15.w
                  mul r27.xyz, r23.zyzz, cb1[83].xyxx
                  mul r27.xyz, r25.xyzx, r27.xyzx
                  mul r28.xyz, r24.zyzz, cb1[83].xyxx
                  mul r25.xyz, r25.xyzx, r28.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r25.xyzw, r26.xyzx, t42.xyzw, s4, r27.xyzx, r25.xyzx
                else 
                  ieq r13.w, r19.z, l(1)
                  if_nz r13.w
                    and r13.w, r17.w, l(4095)
                    ubfe r14.w, l(12), l(12), r17.w
                    and r15.w, r18.w, l(1023)
                    utof r26.xz, r11.wwww
                    utof r26.y, r12.w
                    mad r27.xy, r19.xyxx, r26.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r27.zw, r26.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                    min r27.xy, r27.zwzz, r27.xyxx
                    utof r28.x, r13.w
                    utof r28.y, r14.w
                    add r27.xy, r27.xyxx, r28.xyxx
                    mul r27.xy, r27.xyxx, cb1[83].zwzz
                    utof r27.z, r15.w
                    mul r28.xyz, r23.zyzz, cb1[83].zwzz
                    mul r28.xyz, r26.xyzx, r28.xyzx
                    mul r29.xyz, r24.zyzz, cb1[83].zwzz
                    mul r26.xyz, r26.xyzx, r29.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r25.xyzw, r27.xyzx, t43.xyzw, s4, r28.xyzx, r26.xyzx
                  else 
                    mov r25.xyzw, l(1.000000,1.000000,1.000000,1.000000)
                  endif 
                endif 
                mul r16.xyz, r16.xyzx, r25.xyzx
                mul r11.w, r16.w, r25.w
              else 
                mov r16.xyz, l(0,0,0,0)
                mov r11.w, l(0)
              endif 
              ne r12.w, r17.x, l(1.000000)
              add r13.w, r16.w, r11.w
              mad_sat r13.w, r13.w, r17.x, -r17.x
              movc r11.w, r12.w, r13.w, r11.w
              if_nz r19.w
                ubfe r12.w, l(4), l(24), r18.y
                ishl r12.w, l(1), r12.w
                ushr r13.w, r18.y, l(28)
                ishl r13.w, l(1), r13.w
                ieq r14.w, r19.w, l(2)
                if_nz r14.w
                  and r14.w, r18.y, l(4095)
                  ubfe r17.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r18.yyyw
                  utof r25.xz, r12.wwww
                  utof r25.y, r13.w
                  mad r26.xy, r19.xyxx, r25.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r26.zw, r25.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r26.xy, r26.zwzz, r26.xyxx
                  utof r27.x, r14.w
                  utof r27.y, r17.x
                  add r26.xy, r26.xyxx, r27.xyxx
                  mul r26.xy, r26.xyxx, cb1[84].xyxx
                  utof r26.z, r17.w
                  mul r27.xyz, r23.zyzz, cb1[84].xyxx
                  mul r27.xyz, r25.xyzx, r27.xyzx
                  mul r28.xyz, r24.zyzz, cb1[84].xyxx
                  mul r25.xyz, r25.xyzx, r28.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r14.w, r26.xyzx, t45.yzwx, s4, r27.xyzx, r25.xyzx
                else 
                  ieq r15.w, r19.w, l(4)
                  if_nz r15.w
                    and r15.w, r18.y, l(4095)
                    ubfe r17.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r18.yyyw
                    utof r25.xz, r12.wwww
                    utof r25.y, r13.w
                    mad r19.zw, r19.xxxy, r25.zzzy, l(0.000000, 0.000000, 0.500000, 0.500000)
                    add r26.xy, r25.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                    min r19.zw, r19.zzzw, r26.xxxy
                    utof r26.x, r15.w
                    utof r26.yz, r17.xxwx
                    add r19.zw, r19.zzzw, r26.xxxy
                    mul r26.xy, r19.zwzz, cb1[83].xyxx
                    mul r27.xyz, r23.zyzz, cb1[83].xyxx
                    mul r27.xyz, r25.xyzx, r27.xyzx
                    mul r28.xyz, r24.zyzz, cb1[83].xyxx
                    mul r25.xyz, r25.xyzx, r28.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r14.w, r26.xyzx, t42.yzwx, s4, r27.xyzx, r25.xyzx
                  else 
                    and r15.w, r18.y, l(4095)
                    ubfe r17.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r18.yyyw
                    utof r25.xz, r12.wwww
                    utof r25.y, r13.w
                    mad r19.zw, r19.xxxy, r25.zzzy, l(0.000000, 0.000000, 0.500000, 0.500000)
                    add r26.xy, r25.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                    min r19.zw, r19.zzzw, r26.xxxy
                    utof r26.x, r15.w
                    utof r26.yz, r17.xxwx
                    add r19.zw, r19.zzzw, r26.xxxy
                    mul r26.xy, r19.zwzz, cb1[83].zwzz
                    mul r27.xyz, r23.zyzz, cb1[83].zwzz
                    mul r27.xyz, r25.xyzx, r27.xyzx
                    mul r28.xyz, r24.zyzz, cb1[83].zwzz
                    mul r25.xyz, r25.xyzx, r28.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r14.w, r26.xyzx, t43.yzwx, s4, r27.xyzx, r25.xyzx
                  endif 
                endif 
                add_sat r12.w, -r14.w, l(1.000000)
                mul r16.xyz, r12.wwww, r16.xyzx
              endif 
              ushr r17.xy, r17.zyzz, l(16, 16, 0, 0)
              if_nz r17.x
                ieq r12.w, r17.x, l(2)
                if_nz r12.w
                  ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r9.w, r9.w, l(112), t36.xxxx
                  ubfe r17.zw, l(0, 0, 4, 12), l(0, 0, 24, 12), r18.zzzz
                  ishl r12.w, l(1), r17.z
                  ushr r13.w, r18.z, l(28)
                  ishl r13.w, l(1), r13.w
                  and r14.w, r18.z, l(4095)
                  and r9.w, r9.w, l(1023)
                  utof r25.xz, r12.wwww
                  utof r25.y, r13.w
                  mad r18.yz, r19.xxyx, r25.zzyz, l(0.000000, 0.500000, 0.500000, 0.000000)
                  add r19.zw, r25.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r18.yz, r18.yyzy, r19.zzwz
                  utof r26.x, r14.w
                  utof r26.y, r17.w
                  add r17.zw, r18.yyyz, r26.xxxy
                  mul r26.xy, r17.zwzz, cb1[84].xyxx
                  utof r26.z, r9.w
                  mul r27.xyz, r23.zyzz, cb1[84].xyxx
                  mul r27.xyz, r25.xyzx, r27.xyzx
                  mul r28.xyz, r24.zyzz, cb1[84].xyxx
                  mul r25.xyz, r25.xyzx, r28.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r9.w, r26.xyzx, t45.yzwx, s4, r27.xyzx, r25.xyzx
                else 
                  ieq r12.w, r17.x, l(6)
                  movc r9.w, r12.w, l(0), l(1.000000)
                endif 
              else 
                mov r9.w, l(1.000000)
              endif 
              mul_sat r9.w, r9.w, l(0.76470590)
              if_nz r17.y
                ieq r12.w, r17.y, l(3)
                if_nz r12.w
                  ubfe r17.xyz, l(4, 12, 10, 0), l(24, 12, 10, 0), r18.xxwx
                  ishl r12.w, l(1), r17.x
                  ushr r13.w, r18.x, l(28)
                  ishl r13.w, l(1), r13.w
                  and r14.w, r18.x, l(4095)
                  utof r18.xz, r12.wwww
                  utof r18.y, r13.w
                  mad r17.xw, r19.xxxy, r18.xxxy, l(0.500000, 0.000000, 0.000000, 0.500000)
                  add r19.xy, r18.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r17.xw, r17.xxxw, r19.xxxy
                  utof r19.x, r14.w
                  utof r19.yz, r17.yyzy
                  add r17.xy, r17.xwxx, r19.xyxx
                  mul r19.xy, r17.xyxx, cb1[84].zwzz
                  mul r17.xyz, r23.xyzx, cb1[84].zwzz
                  mul r17.xyz, r18.xyzx, r17.xyzx
                  mul r23.xyz, r24.xyzx, cb1[84].zwzz
                  mul r18.xyz, r18.xyzx, r23.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r17.xyz, r19.xyzx, t44.xyzw, s4, r17.xyzx, r18.xyzx
                else 
                  mov r17.xyz, l(0.500000,0.500000,1.000000,0)
                endif 
                mad r17.xy, r17.xyxx, l(1.99218750, 1.99218750, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
                dp2 r12.w, r17.xyxx, r17.xyxx
                add r12.w, -r12.w, l(1.000000)
                max r12.w, r12.w, l(0.000000)
                sqrt r12.w, r12.w
                mul r13.w, r17.z, r17.z
                mul r13.w, r13.w, l(0.33333334)
                min r13.w, r13.w, l(1.000000)
                dp3 r14.w, r22.xyzx, r22.xyzx
                rsq r14.w, r14.w
                mul r18.xyz, r14.wwww, r22.xyzx
                dp3 r14.w, -r21.xyzx, -r21.xyzx
                rsq r14.w, r14.w
                mul r19.xyz, r14.wwww, -r21.xyzx
                mul r20.xyz, r1.wwww, r20.xyzx
                mul r18.xyz, r1.wwww, r18.xyzx
                mul r19.xyz, r1.wwww, r19.xyzx
                mul r14.w, r9.w, l(-17.000000)
                exp r14.w, r14.w
                add r13.w, r13.w, r14.w
                log r13.w, r13.w
                mul r13.w, r13.w, l(-0.05882353)
                max r9.w, r13.w, l(0.000000)
                mul r17.yzw, r17.yyyy, r19.xxyz
                mad r17.xyz, r18.xyzx, r17.xxxx, r17.yzwy
                mad r17.xyz, r20.xyzx, r12.wwww, r17.xyzx
                dp3 r12.w, r17.xyzx, r17.xyzx
                rsq r12.w, r12.w
                mul r17.xyz, r12.wwww, r17.xyzx
                add r12.w, -r11.w, l(1.000000)
                mov r15.x, r14.x
                mul r18.xyz, r12.wwww, r15.xyzx
                mad r15.xyz, r17.xyzx, r11.wwww, r18.xyzx
                mov r14.x, r15.x
              endif 
              add r12.w, -r11.w, l(1.000000)
              mul r17.xyz, r10.xyzx, r12.wwww
              mad r10.xyz, r16.xyzx, r11.wwww, r17.xyzx
              mul r13.w, r12.w, r14.z
              mad r14.y, r14.y, r12.w, r11.w
              mad r14.z, r9.w, r11.w, r13.w
            endif 
          endif 
        endif 
      endif 
    endloop 
    mov r11.xyz, r10.xyzx
    mov r12.xyz, r14.xzyx
    mov r13.yz, r15.yyzy
    iadd r5.w, r5.w, l(32)
  endloop 
  mov r13.x, r12.x
  mov r12.xy, r12.zyzz
else 
  mov r11.xyz, l(0,0,0,0)
  mov r13.xyz, l(0,0,0,0)
  mov r12.xy, l(0,0,0,0)
endif 
if_nz r4.w
  add r7.xyz, v7.xyzx, cb1[24].xyzx
  iadd r3.w, cb2[57].w, cb2[57].z
  mul r1.z, r1.z, l(0.00781250)
  min r1.z, r1.z, l(15.000000)
  ftou r1.z, r1.z
  ushr r8.xy, r4.xyxx, l(6, 6, 0, 0)
  ishl r8.z, r1.z, l(4)
  and r1.z, cb2[57].z, l(-32)
  iadd r4.z, -r1.z, cb2[57].z
  and r4.w, r3.w, l(-32)
  iadd r5.w, r3.w, -r4.w
  mov r9.xy, l(0,0,0,0)
  mov r10.w, l(0)
  mov r7.w, l(1.000000)
  mov r14.xyz, r11.xyzx
  mov r15.xyz, r13.xyzx
  mov r16.xy, r12.xyxx
  mov r6.w, r1.z
  loop 
    uge r8.w, r6.w, r3.w
    breakc_nz r8.w
    ushr r9.z, r6.w, l(5)
    iadd r10.xyz, r8.xyzx, r9.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r8.w, r10.xyzw, t35.yzwx
    ieq r9.z, r1.z, r6.w
    bfi r9.w, r4.z, l(0), l(0), r8.w
    movc r8.w, r9.z, r9.w, r8.w
    ieq r9.z, r4.w, r6.w
    ubfe r9.w, r5.w, l(0), r8.w
    movc r8.w, r9.z, r9.w, r8.w
    iadd r9.z, r2.w, r6.w
    mov r10.xyz, r14.xyzx
    mov r17.xyz, r15.xyzx
    mov r12.zw, r16.xxxy
    mov r9.w, r8.w
    loop 
      breakc_z r9.w
      firstbit_lo r11.w, r9.w
      ishl r13.w, l(1), r11.w
      and r14.w, r9.w, r13.w
      if_nz r14.w
        xor r9.w, r9.w, r13.w
        iadd r13.w, r9.z, r11.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r18.xyzw, r13.w, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r19.xy, r13.w, l(16), t11.xyxx
        add r18.xyz, r18.xyzx, -v7.xyzx
        mov r19.z, r18.w
        lt r18.xyz, |r18.xyzx|, r19.zxyz
        and r13.w, r18.y, r18.x
        and r13.w, r18.z, r13.w
        if_nz r13.w
          iadd r11.w, r6.w, r11.w
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r18.xyz, r11.w, l(0), t36.xyzx
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r19.xyz, r11.w, l(16), t36.xyzx
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r20.xyz, r11.w, l(32), t36.xyzx
          mov r21.x, r18.x
          mov r21.y, r19.x
          mov r21.z, r20.x
          dp3 r13.w, r21.xyzx, r21.xyzx
          rsq r13.w, r13.w
          mul r22.xyz, r13.wwww, r21.xyzx
          dp3 r13.w, r22.xyzx, v4.xyzx
          ge r13.w, r13.w, l(0.500000)
          if_nz r13.w
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r23.xyw, r11.w, l(48), t36.xyxz
            mov r21.w, r23.x
            dp4 r21.x, r7.xyzw, r21.xyzw
            mov r24.x, r18.y
            mov r24.y, r19.y
            mov r24.z, r20.y
            mov r24.w, r23.y
            dp4 r21.y, r7.xyzw, r24.xyzw
            mov r23.x, r18.z
            mov r23.y, r19.z
            mov r23.z, r20.z
            dp4 r21.z, r7.xyzw, r23.xyzw
            lt r18.xyz, |r21.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
            and r13.w, r18.y, r18.x
            and r13.w, r18.z, r13.w
            if_nz r13.w
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r18.xyzw, r11.w, l(64), t36.xyzw
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r19.xyzw, r11.w, l(80), t36.xyzw
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r20.xyzw, r11.w, l(96), t36.xyzw
              dp3 r25.x, r5.xyzx, r24.xyzx
              dp3 r25.y, r5.xyzx, r23.xyzx
              dp3 r26.x, r6.xyzx, r24.xyzx
              dp3 r26.y, r6.xyzx, r23.xyzx
              mad r16.zw, r21.yyyz, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
              mul r21.xyz, r25.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
              mul r25.xyz, r26.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
              and r26.xy, r19.yzyy, l(0x0000ffff, 0x0000ffff, 0, 0)
              if_nz r26.x
                ubfe r13.w, l(4), l(24), r19.w
                ishl r13.w, l(1), r13.w
                ushr r14.w, r19.w, l(28)
                ishl r14.w, l(1), r14.w
                ieq r15.w, r26.x, l(4)
                if_nz r15.w
                  and r15.w, r19.w, l(4095)
                  ubfe r17.w, l(12), l(12), r19.w
                  and r21.w, r20.w, l(1023)
                  utof r27.xz, r13.wwww
                  utof r27.y, r14.w
                  mad r26.zw, r16.zzzw, r27.zzzy, l(0.000000, 0.000000, 0.500000, 0.500000)
                  add r28.xy, r27.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r26.zw, r26.zzzw, r28.xxxy
                  utof r28.x, r15.w
                  utof r28.y, r17.w
                  add r26.zw, r26.zzzw, r28.xxxy
                  mul r28.xy, r26.zwzz, cb1[83].xyxx
                  utof r28.z, r21.w
                  mul r29.xyz, r21.zyzz, cb1[83].xyxx
                  mul r29.xyz, r27.xyzx, r29.xyzx
                  mul r30.xyz, r25.zyzz, cb1[83].xyxx
                  mul r27.xyz, r27.xyzx, r30.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r27.xyzw, r28.xyzx, t42.xyzw, s4, r29.xyzx, r27.xyzx
                else 
                  ieq r15.w, r26.x, l(1)
                  if_nz r15.w
                    and r15.w, r19.w, l(4095)
                    ubfe r17.w, l(12), l(12), r19.w
                    and r19.w, r20.w, l(1023)
                    utof r28.xz, r13.wwww
                    utof r28.y, r14.w
                    mad r26.xz, r16.zzwz, r28.zzyz, l(0.500000, 0.000000, 0.500000, 0.000000)
                    add r29.xy, r28.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                    min r26.xz, r26.xxzx, r29.xxyx
                    utof r29.x, r15.w
                    utof r29.y, r17.w
                    add r26.xz, r26.xxzx, r29.xxyx
                    mul r29.xy, r26.xzxx, cb1[83].zwzz
                    utof r29.z, r19.w
                    mul r26.xzw, r21.zzyz, cb1[83].zzwz
                    mul r26.xzw, r28.xxyz, r26.xxzw
                    mul r30.xyz, r25.zyzz, cb1[83].zwzz
                    mul r28.xyz, r28.xyzx, r30.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r27.xyzw, r29.xyzx, t43.xyzw, s4, r26.xzwx, r28.xyzx
                  else 
                    mov r27.xyzw, l(1.000000,1.000000,1.000000,1.000000)
                  endif 
                endif 
                mul r18.xyz, r18.xyzx, r27.xyzx
                mul r13.w, r18.w, r27.w
              else 
                mov r18.xyz, l(0,0,0,0)
                mov r13.w, l(0)
              endif 
              ne r14.w, r19.x, l(1.000000)
              add r15.w, r18.w, r13.w
              mad_sat r15.w, r15.w, r19.x, -r19.x
              movc r13.w, r14.w, r15.w, r13.w
              if_nz r26.y
                ubfe r14.w, l(4), l(24), r20.y
                ishl r14.w, l(1), r14.w
                ushr r15.w, r20.y, l(28)
                ishl r15.w, l(1), r15.w
                ieq r17.w, r26.y, l(2)
                if_nz r17.w
                  and r17.w, r20.y, l(4095)
                  ubfe r19.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r20.yyyw
                  utof r27.xz, r14.wwww
                  utof r27.y, r15.w
                  mad r26.xz, r16.zzwz, r27.zzyz, l(0.500000, 0.000000, 0.500000, 0.000000)
                  add r28.xy, r27.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r26.xz, r26.xxzx, r28.xxyx
                  utof r28.x, r17.w
                  utof r28.yz, r19.xxwx
                  add r26.xz, r26.xxzx, r28.xxyx
                  mul r28.xy, r26.xzxx, cb1[84].xyxx
                  mul r26.xzw, r21.zzyz, cb1[84].xxyx
                  mul r26.xzw, r27.xxyz, r26.xxzw
                  mul r29.xyz, r25.zyzz, cb1[84].xyxx
                  mul r27.xyz, r27.xyzx, r29.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r17.w, r28.xyzx, t45.yzwx, s4, r26.xzwx, r27.xyzx
                else 
                  ieq r18.w, r26.y, l(4)
                  if_nz r18.w
                    and r18.w, r20.y, l(4095)
                    ubfe r19.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r20.yyyw
                    utof r26.xz, r14.wwww
                    utof r26.y, r15.w
                    mad r27.xy, r16.zwzz, r26.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r27.zw, r26.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                    min r27.xy, r27.zwzz, r27.xyxx
                    utof r28.x, r18.w
                    utof r28.y, r19.x
                    add r27.xy, r27.xyxx, r28.xyxx
                    mul r27.xy, r27.xyxx, cb1[83].xyxx
                    utof r27.z, r19.w
                    mul r28.xyz, r21.zyzz, cb1[83].xyxx
                    mul r28.xyz, r26.xyzx, r28.xyzx
                    mul r29.xyz, r25.zyzz, cb1[83].xyxx
                    mul r26.xyz, r26.xyzx, r29.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r17.w, r27.xyzx, t42.yzwx, s4, r28.xyzx, r26.xyzx
                  else 
                    and r18.w, r20.y, l(4095)
                    ubfe r19.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r20.yyyw
                    utof r26.xz, r14.wwww
                    utof r26.y, r15.w
                    mad r27.xy, r16.zwzz, r26.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r27.zw, r26.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                    min r27.xy, r27.zwzz, r27.xyxx
                    utof r28.x, r18.w
                    utof r28.y, r19.x
                    add r27.xy, r27.xyxx, r28.xyxx
                    mul r27.xy, r27.xyxx, cb1[83].zwzz
                    utof r27.z, r19.w
                    mul r28.xyz, r21.zyzz, cb1[83].zwzz
                    mul r28.xyz, r26.xyzx, r28.xyzx
                    mul r29.xyz, r25.zyzz, cb1[83].zwzz
                    mul r26.xyz, r26.xyzx, r29.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r17.w, r27.xyzx, t43.yzwx, s4, r28.xyzx, r26.xyzx
                  endif 
                endif 
                add_sat r14.w, -r17.w, l(1.000000)
                mul r18.xyz, r14.wwww, r18.xyzx
              endif 
              ushr r19.xy, r19.zyzz, l(16, 16, 0, 0)
              if_nz r19.x
                ieq r14.w, r19.x, l(2)
                if_nz r14.w
                  ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r11.w, r11.w, l(112), t36.xxxx
                  ubfe r19.zw, l(0, 0, 4, 12), l(0, 0, 24, 12), r20.zzzz
                  ishl r14.w, l(1), r19.z
                  ushr r15.w, r20.z, l(28)
                  ishl r15.w, l(1), r15.w
                  and r17.w, r20.z, l(4095)
                  and r11.w, r11.w, l(1023)
                  utof r26.xz, r14.wwww
                  utof r26.y, r15.w
                  mad r20.yz, r16.zzwz, r26.zzyz, l(0.000000, 0.500000, 0.500000, 0.000000)
                  add r27.xy, r26.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r20.yz, r20.yyzy, r27.xxyx
                  utof r27.x, r17.w
                  utof r27.y, r19.w
                  add r19.zw, r20.yyyz, r27.xxxy
                  mul r27.xy, r19.zwzz, cb1[84].xyxx
                  utof r27.z, r11.w
                  mul r28.xyz, r21.zyzz, cb1[84].xyxx
                  mul r28.xyz, r26.xyzx, r28.xyzx
                  mul r29.xyz, r25.zyzz, cb1[84].xyxx
                  mul r26.xyz, r26.xyzx, r29.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r11.w, r27.xyzx, t45.yzwx, s4, r28.xyzx, r26.xyzx
                else 
                  ieq r14.w, r19.x, l(6)
                  movc r11.w, r14.w, l(0), l(1.000000)
                endif 
              else 
                mov r11.w, l(1.000000)
              endif 
              mul_sat r11.w, r11.w, l(0.76470590)
              if_nz r19.y
                ieq r14.w, r19.y, l(3)
                if_nz r14.w
                  ubfe r19.xyz, l(4, 12, 10, 0), l(24, 12, 10, 0), r20.xxwx
                  ishl r14.w, l(1), r19.x
                  ushr r15.w, r20.x, l(28)
                  ishl r15.w, l(1), r15.w
                  and r17.w, r20.x, l(4095)
                  utof r20.xz, r14.wwww
                  utof r20.y, r15.w
                  mad r16.zw, r16.zzzw, r20.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
                  add r19.xw, r20.zzzy, l(-0.500000, 0.000000, 0.000000, -0.500000)
                  min r16.zw, r16.zzzw, r19.xxxw
                  utof r26.x, r17.w
                  utof r26.yz, r19.yyzy
                  add r16.zw, r16.zzzw, r26.xxxy
                  mul r26.xy, r16.zwzz, cb1[84].zwzz
                  mul r19.xyz, r21.xyzx, cb1[84].zwzz
                  mul r19.xyz, r20.xyzx, r19.xyzx
                  mul r21.xyz, r25.xyzx, cb1[84].zwzz
                  mul r20.xyz, r20.xyzx, r21.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r19.xyz, r26.xyzx, t44.xyzw, s4, r19.xyzx, r20.xyzx
                else 
                  mov r19.xyz, l(0.500000,0.500000,1.000000,0)
                endif 
                mad r16.zw, r19.xxxy, l(0.000000, 0.000000, 1.99218750, 1.99218750), l(0.000000, 0.000000, -1.000000, -1.000000)
                dp2 r14.w, r16.zwzz, r16.zwzz
                add r14.w, -r14.w, l(1.000000)
                max r14.w, r14.w, l(0.000000)
                sqrt r14.w, r14.w
                mul r15.w, r19.z, r19.z
                mul r15.w, r15.w, l(0.33333334)
                min r15.w, r15.w, l(1.000000)
                dp3 r17.w, r24.xyzx, r24.xyzx
                rsq r17.w, r17.w
                mul r19.xyz, r17.wwww, r24.xyzx
                dp3 r17.w, -r23.xyzx, -r23.xyzx
                rsq r17.w, r17.w
                mul r20.xyz, r17.wwww, -r23.xyzx
                mul r21.xyz, r1.wwww, r22.xyzx
                mul r19.xyz, r1.wwww, r19.xyzx
                mul r20.xyz, r1.wwww, r20.xyzx
                mul r17.w, r11.w, l(-17.000000)
                exp r17.w, r17.w
                add r15.w, r15.w, r17.w
                log r15.w, r15.w
                mul r15.w, r15.w, l(-0.05882353)
                max r11.w, r15.w, l(0.000000)
                mul r20.xyz, r16.wwww, r20.xyzx
                mad r19.xyz, r19.xyzx, r16.zzzz, r20.xyzx
                mad r19.xyz, r21.xyzx, r14.wwww, r19.xyzx
                dp3 r14.w, r19.xyzx, r19.xyzx
                rsq r14.w, r14.w
                mul r19.xyz, r14.wwww, r19.xyzx
                add r14.w, -r13.w, l(1.000000)
                mul r20.xyz, r14.wwww, r17.xyzx
                mad r17.xyz, r19.xyzx, r13.wwww, r20.xyzx
              endif 
              add r14.w, -r13.w, l(1.000000)
              mul r19.xyz, r10.xyzx, r14.wwww
              mad r10.xyz, r18.xyzx, r13.wwww, r19.xyzx
              mul r15.w, r12.w, r14.w
              mad r12.z, r12.z, r14.w, r13.w
              mad r12.w, r11.w, r13.w, r15.w
            endif 
          endif 
        endif 
      endif 
    endloop 
    mov r14.xyz, r10.xyzx
    mov r15.xyz, r17.xyzx
    mov r16.xy, r12.zwzz
    iadd r6.w, r6.w, l(32)
  endloop 
  mov r11.xyz, r14.xyzx
  mov r13.xyz, r15.xyzx
  mov r12.xy, r16.xyxx
endif 
mov_sat r12.x, r12.x
add r1.z, -r12.x, l(1.000000)
mad o2.xyz, r0.xyzx, r1.zzzz, r11.xyzx
mad r0.x, r0.w, r1.z, r12.x
mad r0.yzw, r2.xxyz, r1.zzzz, r13.xxyz
dp3 r1.w, r0.yzwy, r0.yzwy
rsq r1.w, r1.w
mul r2.xyz, r0.yzwy, r1.wwww
mad r5.y, r1.x, r1.z, r12.y
log r1.x, |r1.y|
mul r6.xyz, r1.xxxx, l(0.600000, 0.850000, 0.870000, 0.000000)
exp r6.xyz, r6.xyzx
mul r1.x, v7.y, cb1[5].z
mad r1.x, v7.x, cb1[4].z, r1.x
mad r1.x, v7.z, cb1[6].z, r1.x
dp3 r1.z, -v7.xyzx, -v7.xyzx
rsq r1.z, r1.z
mul r7.xyz, r1.zzzz, -v7.xyzx
ine r2.w, cb1[92].x, l(0)
utof r4.zw, r4.yyyx
dp2 r3.w, r4.wzww, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r3.w, r3.w
mul r3.w, r3.w, l(52.982918)
frc r3.w, r3.w
mad r3.w, r3.w, l(6.28318548), cb1[70].w
sincos r8.x, r9.x, r3.w
dp2 r3.w, r4.zwzz, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r3.w, r3.w
mul r3.w, r3.w, l(52.982918)
frc r3.w, r3.w
mad r3.w, r3.w, l(6.28318548), cb1[70].w
sincos r10.x, r11.x, r3.w
dp3_sat r3.w, r2.xyzx, r7.xyzx
dp3 r4.z, -r7.xyzx, r2.xyzx
add r4.z, r4.z, r4.z
mad r10.yzw, r2.xxyz, -r4.zzzz, -r7.xxyz
mul r4.z, r5.y, l(17.000000)
exp r4.z, r4.z
add r4.z, r4.z, l(2.000000)
div r4.z, l(2.000000), r4.z
sqrt r4.w, r4.z
mul r11.yzw, cb1[9].xxyw, -cb1[24].yyyy
mad r11.yzw, -cb1[24].xxxx, cb1[8].xxyw, r11.yyzw
mad r11.yzw, -cb1[24].zzzz, cb1[10].xxyw, r11.yyzw
add r11.yzw, r11.yyzw, cb1[11].xxyw
add r12.xyz, v7.xyzx, cb1[24].xyzx
sqrt r5.z, r4.w
mad r5.z, r5.z, l(0.500000), l(0.500000)
mul r5.z, r5.z, r5.z
mul r5.w, r5.z, l(0.500000)
mad r5.z, -r5.z, l(0.500000), l(1.000000)
mad r6.w, r3.w, r5.z, r5.w
mul r5.zw, r5.zzzw, r6.wwww
dp3 r6.w, r2.xyzx, cb2[17].xyzx
ge r7.w, l(0.000000), |r6.w|
if_nz r7.w
  mov r13.y, l(0)
endif 
if_z r7.w
  mul r14.xyz, v7.yyyy, cb2[29].xyzx
  mad r14.xyz, v7.xxxx, cb2[28].xyzx, r14.xyzx
  mad r14.xyz, v7.zzzz, cb2[30].xyzx, r14.xyzx
  add r14.xyz, r14.xyzx, cb2[31].xyzx
  add r7.w, r14.z, -cb2[17].w
  mad r7.w, -r7.w, l(0.00006104), l(1.000000)
  mov_sat r8.z, r7.w
  eq r8.z, r7.w, r8.z
  if_nz r8.z
    mov r8.zw, l(0,0,0,0)
    loop 
      ge r9.w, r8.z, l(3.000000)
      breakc_nz r9.w
      ftou r9.w, r8.z
      add r13.zw, r14.xxxy, -cb2[r9.w + 20].xxxy
      max r13.z, |r13.w|, |r13.z|
      mul r8.w, r13.z, cb2[r9.w + 20].z
      lt r9.w, r8.w, l(1.000000)
      if_nz r9.w
        break 
      endif 
      add r8.z, r8.z, l(1.000000)
      mov r8.w, l(0)
    endloop 
  else 
    mov r8.zw, l(0,0,3.000000,0)
  endif 
  ge r9.w, r8.z, l(3.000000)
  if_nz r9.w
    mul r15.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
    rcp r16.xz, r15.xxxx
    mov r16.y, -r16.z
    mad r15.xyz, r14.xyxx, r16.xyzx, r15.yzyy
    add r16.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r15.xyz, r15.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r15.xyz, r16.xyzx, r15.xyzx
    mul r13.zw, r15.zzzy, cb2[32].xxxx
    round_ni r13.zw, r13.zzzw
    mul r13.w, r13.w, cb2[27].x
    mad r13.z, r13.w, cb2[32].x, r13.z
    ftou r13.z, r13.z
    iadd r13.z, r13.z, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r13.w, r13.z, l(0), t23.xxxx
    and r14.w, r13.w, l(0x40000000)
    ishl r15.w, r13.w, l(2)
    if_z r14.w
      and r14.w, r13.w, l(0x01ffffff)
      iadd r16.x, r13.z, r14.w
      ushr r13.z, r13.w, l(25)
      utof r13.z, r13.z
      mul r15.xyz, r13.zzzz, r15.xyzx
      frc r15.xyz, r15.xyzx
      mul r15.xyz, r15.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
      ftou r15.xyz, r15.xyzx
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.z, r16.x, l(0), t23.xxxx
      ushr r13.zw, r15.zzzy, l(0, 0, 6, 6)
      and r14.w, r16.z, l(0xc0000000)
      iadd r16.w, r16.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.w, r16.w, l(0), t23.xxxx
      movc r13.w, r13.w, r16.z, r16.w
      ushr r16.w, r13.w, l(13)
      movc r13.z, r13.z, r16.w, r13.w
      and r13.z, r13.z, l(8191)
      iadd r17.x, r13.z, r16.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.z, r17.x, l(0), t23.xxxx
      mov r16.y, l(0)
      mov r17.y, l(1)
      movc r17.xyz, r14.wwww, r16.xyzx, r17.xyzx
      movc r18.yz, r14.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r13.zw, r15.zzzy, r18.yyyy
      and r13.zw, r13.zzzw, l(0, 0, 1, 1)
      and r16.w, r17.z, l(0xc0000000)
      iadd r17.w, r17.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.w, r17.w, l(0), t23.xxxx
      movc r13.w, r13.w, r17.z, r17.w
      ushr r17.w, r13.w, l(13)
      movc r13.z, r13.z, r17.w, r13.w
      and r13.z, r13.z, l(8191)
      iadd r18.x, r13.z, r17.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.w, r18.x, l(0), t23.xxxx
      movc r17.xyz, r16.wwww, r17.xyzx, r18.xzwx
      movc r16.xyz, r14.wwww, r16.xyzx, r17.xyzx
      and r13.z, r16.z, l(0xc0000000)
      if_z r13.z
        iadd r13.z, -r16.y, l(6)
        ushr r13.zw, r15.zzzy, r13.zzzz
        or r14.w, r16.z, l(0x40000000)
        bfi r13.w, l(1), l(1), r13.w, l(0)
        bfi r13.z, l(1), l(0), r13.z, r13.w
        imul null, r13.z, r13.z, l(10)
        ushr r13.z, r14.w, r13.z
        and r13.z, r13.z, l(1023)
        iadd r17.x, r13.z, r16.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.w, r17.x, l(0), t23.xxxx
        iadd r17.yz, r16.yyyy, l(0, 1, 2, 0)
        iadd r13.z, -r17.y, l(6)
        ushr r13.zw, r15.zzzy, r13.zzzz
        and r14.w, r17.w, l(0xc0000000)
        or r16.y, r17.w, l(0x40000000)
        bfi r13.w, l(1), l(1), r13.w, l(0)
        bfi r13.z, l(1), l(0), r13.z, r13.w
        imul null, r13.z, r13.z, l(10)
        ushr r13.z, r16.y, r13.z
        and r13.z, r13.z, l(1023)
        iadd r18.x, r13.z, r17.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.x, l(0), t23.xxxx
        mov r18.y, r17.z
        movc r18.xyz, r14.wwww, r17.xywx, r18.xyzx
        iadd r13.z, -r18.y, l(6)
        ushr r13.zw, r15.zzzy, r13.zzzz
        and r16.y, r18.z, l(0xc0000000)
        or r16.w, r18.z, l(0x40000000)
        bfi r13.w, l(1), l(1), r13.w, l(0)
        bfi r13.z, l(1), l(0), r13.z, r13.w
        imul null, r13.z, r13.z, l(10)
        ushr r13.z, r16.w, r13.z
        and r13.z, r13.z, l(1023)
        iadd r19.x, r13.z, r18.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.y, r19.x, l(0), t23.xxxx
        movc r13.zw, r16.yyyy, r18.xxxz, r19.xxxy
        movc r16.xz, r14.wwww, r17.xxwx, r13.zzwz
      endif 
      and r13.z, r16.z, l(0xc0000000)
      if_z r13.z
        ubfe r13.w, l(14), l(15), r16.z
        utof r13.w, r13.w
        mul r13.w, r13.w, cb2[27].w
        mul r13.w, r13.w, l(0.00006104)
        and r16.yw, r16.zzzz, l(0, 0x00007fff, 0, 0x20000000)
        utof r14.w, r16.y
        mul r14.w, r14.w, cb2[27].w
        mul r14.w, r14.w, l(0.00003052)
        and r16.y, r15.y, l(3)
        iadd r16.y, r16.y, r16.x
        iadd r16.y, r16.y, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.y, r16.y, l(0), t23.xxxx
        bfi r17.xyz, l(2, 2, 1, 0), l(3, 1, 4, 0), r15.xyzx, l(0, 0, 0, 0)
        ushr r15.x, r16.y, r17.x
        and r15.x, r15.x, l(255)
        utof r15.x, r15.x
        mul r15.x, r14.w, r15.x
        mad r15.x, r15.x, l(0.00392157), r13.w
        iadd r15.y, r17.y, l(1)
        ubfe r15.z, l(1), l(1), r15.z
        iadd r15.y, r15.z, r15.y
        iadd r15.y, r15.y, r16.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.y, r15.y, l(0), t23.xxxx
        ushr r15.y, r15.y, r17.z
        and r15.y, r15.y, l(0x0000ffff)
        utof r15.y, r15.y
        mul r14.w, r14.w, r15.y
        mad r13.w, r14.w, l(0.00001526), r13.w
        movc r15.w, r16.w, r15.x, r13.w
      else 
        and r13.w, r16.z, l(0x80000000)
        iadd r14.w, r16.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r14.w, r14.w, l(0), t23.xxxx
        movc r13.w, r13.w, r14.w, l(0)
        ishl r14.w, r16.z, l(2)
        ushr r15.x, r13.w, l(16)
        f16tof32 r15.x, r15.x
        and r13.w, r13.w, l(0x0000ffff)
        f16tof32 r13.w, r13.w
        mad r14.w, r14.x, r15.x, r14.w
        mad r13.w, r14.y, r13.w, r14.w
        movc r15.w, r13.z, r13.w, r15.w
      endif 
    endif 
    mad r13.z, -cb2[27].z, l(2.000000), r14.z
    lt r13.z, r15.w, r13.z
    movc r13.y, r13.z, l(0), l(1.000000)
  endif 
  if_z r9.w
    if_z cb2[58].y
      ftou r9.w, r8.z
      add r13.zw, r14.xxxy, -cb2[r9.w + 20].xxxy
      mul r13.zw, r13.zzzw, cb2[r9.w + 20].zzzz
      mad r15.xy, r13.zwzz, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r9.w, cb2[26].y
      add r15.z, r8.z, r9.w
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r9.w, r15.xyzx, t13.xxxx, s13, r7.w
      sample_l_indexable(texture2darray)(float,float,float,float) r13.z, r15.xyzx, t31.yzxw, s0, l(0.000000)
      add r9.w, r9.w, r13.z
      add_sat r9.w, r9.w, l(-1.000000)
      mul r13.z, r9.w, r9.w
      mul r13.y, r9.w, r13.z
    endif 
    if_nz cb2[58].y
      mov r15.x, -r8.x
      ftou r9.w, r8.z
      add r8.z, r8.z, l(1.000000)
      min r8.z, r8.z, l(2.000000)
      add r8.w, -r8.w, l(1.000000)
      mul r8.w, r8.w, l(28.000000)
      ftou r8.zw, r8.zzzw
      add r13.zw, r14.xxxy, -cb2[r9.w + 20].xxxy
      mul r13.zw, r13.zzzw, cb2[r9.w + 20].zzzz
      mad r13.zw, r13.zzzw, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
      add r14.xy, r14.xyxx, -cb2[r8.z + 20].xyxx
      mul r14.xy, r14.xyxx, cb2[r8.z + 20].zzzz
      mad r14.xy, r14.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      mov r15.y, r9.x
      mov r15.z, r8.x
      mov r14.zw, l(0,0,0,0)
      loop 
        uge r15.w, r14.w, l(8)
        breakc_nz r15.w
        ult r15.w, r8.w, r14.w
        movc r16.xy, r15.wwww, r14.xyxx, r13.zwzz
        movc r16.z, r15.w, cb2[r8.z + 20].w, cb2[r9.w + 20].w
        movc r15.w, r15.w, r8.z, r9.w
        dp2 r17.x, icb[r14.w + 0].yxyy, r15.xyxx
        dp2 r17.y, icb[r14.w + 0].yxyy, r15.yzyy
        mad r16.xy, r17.xyxx, r16.zzzz, r16.xyxx
        iadd r15.w, r15.w, cb2[26].y
        utof r16.z, r15.w
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r15.w, r16.xyzx, t13.xxxx, s13, r7.w
        sample_l_indexable(texture2darray)(float,float,float,float) r16.x, r16.xyzx, t31.xyzw, s0, l(0.000000)
        add r15.w, r15.w, r16.x
        add_sat r15.w, r15.w, l(-1.000000)
        mad r14.z, r15.w, l(0.125000), r14.z
        iadd r14.w, r14.w, l(1)
      endloop 
      mul r7.w, r14.z, r14.z
      mul r13.y, r14.z, r7.w
    endif 
  endif 
endif 
lt r7.w, l(0.000000), |r6.w|
if_nz r7.w
  lt r7.w, l(0.000000), r13.y
  if_nz r7.w
    mul r7.w, r4.z, cb2[18].w
    mul r7.w, r7.w, l(0.250000)
    if_nz cb2[23].x
      mov r12.w, l(1.000000)
      dp4 r8.z, cb2[24].xyzw, r12.xyzw
      dp4 r8.w, cb2[25].xyzw, r12.xyzw
      frc r14.xy, r8.zwzz
      iadd r8.z, l(-1), cb2[23].x
      utof r14.z, r8.z
      sample_l_indexable(texture2darray)(float,float,float,float) r14.xyz, r14.xyzx, t20.xyzw, s2, l(0.000000)
      add r14.xyz, r14.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
      mad r14.xyz, cb2[23].yyyy, r14.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      mul r14.xyz, r14.xyzx, cb2[18].xyzx
    else 
      mov r14.xyz, cb2[18].xyzx
    endif 
    ushr r8.z, cb2[53].x, l(16)
    ult r8.w, l(0), r8.z
    and r8.w, r2.w, r8.w
    if_nz r8.w
      iadd r8.z, r8.z, cb2[0].x
      iadd r8.z, r8.z, l(-1)
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r8.w, r8.z, l(52), t12.xxxx
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r8.z, l(68), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r8.z, l(84), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r8.z, l(132), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r8.z, l(148), t12.xyzw
      mad r9.w, |r6.w|, l(-0.200000), l(0.400000)
      lt r12.w, r6.w, l(0.000000)
      movc r9.w, r12.w, -r9.w, r9.w
      mad r19.xyz, r2.xyzx, r9.wwww, v7.xyzx
      mov r19.w, l(1.000000)
      dp4 r15.x, r15.xyzw, r19.xyzw
      dp4 r15.y, r16.xyzw, r19.xyzw
      mad r13.zw, r15.xxxy, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
      add r13.zw, r18.zzzw, r13.zzzw
      mul r13.zw, r18.xxxy, r13.zzzw
      div r15.xy, r8.wwww, r17.xzxx
      add r15.zw, -r15.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
      ge r15.zw, r13.zzzw, r15.zzzw
      ge r15.xy, r15.xyxx, r13.zwzz
      or r15.xy, r15.xyxx, r15.zwzz
      or r9.w, r15.y, r15.x
      if_z r9.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r9.w, r8.z, l(28), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r8.z, l(100), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xy, r8.z, l(164), t12.xyxx
        dp4 r8.z, r15.xyzw, r19.xyzw
        mov_sat r13.zw, r13.zzzw
        mad r15.xy, r13.zwzz, r17.xzxx, r17.ywyy
        add r8.z, r16.x, r8.z
        div r8.z, r8.z, r16.y
        max r8.z, r8.z, l(0.00006104)
        and r9.w, r9.w, l(0x0000ffff)
        if_nz cb2[58].y
          mov r16.x, -r8.x
          utof r17.z, r9.w
          mov r16.y, r9.x
          mov r16.z, r8.x
          mov r12.w, l(0)
          mov r13.z, l(0)
          loop 
            ige r13.w, r13.z, l(8)
            breakc_nz r13.w
            dp2 r18.x, icb[r13.z + 0].yxyy, r16.xyxx
            dp2 r18.y, icb[r13.z + 0].yxyy, r16.yzyy
            mad r17.xy, r18.xyxx, r8.wwww, r15.xyxx
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r13.w, r17.xyzx, t9.xxxx, s13, r8.z
            mad r12.w, r13.w, l(0.125000), r12.w
            iadd r13.z, r13.z, l(1)
          endloop 
        else 
          utof r15.z, r9.w
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.w, r15.xyzx, t9.xxxx, s13, r8.z
        endif 
        mul r8.z, r12.w, r12.w
        mul r8.z, r12.w, r8.z
      else 
        mov r8.z, l(1.000000)
      endif 
      mul r13.y, r8.z, r13.y
    else 
      and r8.z, cb2[53].x, l(0x0000ffff)
      ult r8.w, l(0), r8.z
      not r9.w, r2.w
      and r8.w, r8.w, r9.w
      if_nz r8.w
        iadd r8.z, r8.z, cb2[0].x
        iadd r8.z, r8.z, l(-1)
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r8.w, r8.z, l(52), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r8.z, l(68), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r8.z, l(84), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r8.z, l(132), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r8.z, l(148), t12.xyzw
        mad r9.w, |r6.w|, l(-0.200000), l(0.400000)
        lt r12.w, r6.w, l(0.000000)
        movc r9.w, r12.w, -r9.w, r9.w
        mad r19.xyz, r2.xyzx, r9.wwww, v7.xyzx
        mov r19.w, l(1.000000)
        dp4 r15.x, r15.xyzw, r19.xyzw
        dp4 r15.y, r16.xyzw, r19.xyzw
        mad r13.zw, r15.xxxy, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
        add r13.zw, r18.zzzw, r13.zzzw
        mul r13.zw, r18.xxxy, r13.zzzw
        div r15.xy, r8.wwww, r17.xzxx
        add r15.zw, -r15.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
        ge r15.zw, r13.zzzw, r15.zzzw
        ge r15.xy, r15.xyxx, r13.zwzz
        or r15.xy, r15.xyxx, r15.zwzz
        or r9.w, r15.y, r15.x
        if_z r9.w
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r9.w, r8.z, l(28), t12.xxxx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r8.z, l(100), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xy, r8.z, l(164), t12.xyxx
          dp4 r8.z, r15.xyzw, r19.xyzw
          mov_sat r13.zw, r13.zzzw
          mad r15.xy, r13.zwzz, r17.xzxx, r17.ywyy
          add r8.z, r16.x, r8.z
          div r8.z, r8.z, r16.y
          max r8.z, r8.z, l(0.00006104)
          and r9.w, r9.w, l(0x0000ffff)
          if_nz cb2[58].y
            mov r16.x, -r8.x
            utof r17.z, r9.w
            mov r16.y, r9.x
            mov r16.z, r8.x
            mov r12.w, l(0)
            mov r13.z, l(0)
            loop 
              ige r13.w, r13.z, l(8)
              breakc_nz r13.w
              dp2 r18.x, icb[r13.z + 0].yxyy, r16.xyxx
              dp2 r18.y, icb[r13.z + 0].yxyy, r16.yzyy
              mad r17.xy, r18.xyxx, r8.wwww, r15.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r13.w, r17.xyzx, t9.xxxx, s13, r8.z
              mad r12.w, r13.w, l(0.125000), r12.w
              iadd r13.z, r13.z, l(1)
            endloop 
          else 
            utof r15.z, r9.w
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.w, r15.xyzx, t9.xxxx, s13, r8.z
          endif 
          mul r8.z, r12.w, r12.w
          mul r8.z, r12.w, r8.z
        else 
          mov r8.z, l(1.000000)
        endif 
        mul r13.y, r8.z, r13.y
      endif 
    endif 
    mad r8.z, -r3.w, l(0.500000), l(1.000000)
    mad r8.z, -|r6.w|, r8.z, l(1.000000)
    mul r8.z, r8.z, r8.z
    mad r8.z, -r8.z, l(0.620000), l(0.620000)
    add r8.z, -|r6.w|, r8.z
    mad r8.z, r4.w, r8.z, |r6.w|
    lt r8.w, l(0.000000), r6.w
    mov_sat r6.w, r6.w
    mad r15.xyz, -v7.xyzx, r1.zzzz, cb2[17].xyzx
    dp3 r1.z, r15.xyzx, r15.xyzx
    rsq r1.z, r1.z
    mul r15.xyz, r1.zzzz, r15.xyzx
    dp3 r1.z, r15.xyzx, r7.xyzx
    dp3 r9.w, r2.xyzx, r15.xyzx
    mad r12.w, |r9.w|, r4.z, -|r9.w|
    mad r9.w, |r9.w|, r12.w, l(1.000000)
    mad r12.w, r6.w, r5.z, r5.w
    mul r9.w, r9.w, r9.w
    mul r9.w, r12.w, r9.w
    rcp r9.w, r9.w
    mul r6.w, r7.w, r6.w
    mul r6.w, r6.w, r9.w
    add_sat r1.z, -r1.z, l(1.000000)
    mul r7.w, r1.z, r1.z
    mul r7.w, r7.w, r7.w
    mul r1.z, r1.z, r7.w
    mul r1.z, r1.z, r6.w
    and r7.w, r8.z, r8.w
    movc r15.xyz, r8.wwww, l(0,0,0,0), r8.zzzz
    and r13.zw, r1.zzzz, r8.wwww
    and r16.xyz, r6.wwww, r8.wwww
    dp3 r1.z, r14.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
    mul r1.z, r1.z, r13.y
    mov r13.x, l(1.000000)
    mov r6.w, cb2[17].x
    mov r8.zw, cb2[17].yyyz
    mov r17.xy, r7.wwww
    mov r9.w, r13.w
  else 
    mov r1.z, l(0)
    mov r14.xyz, l(0,0,0,0)
    mov r6.w, l(0)
    mov r8.zw, l(0,0,0,0)
    mov r17.xy, l(0,0,0,0)
    mov r15.xyz, l(0,0,0,0)
    mov r7.w, l(0)
    mov r16.xyz, l(0,0,0,0)
    mov r9.w, l(0)
    mov r13.xyzw, l(0,0,0,0)
  endif 
else 
  mov r1.z, l(0)
  mov r14.xyz, l(0,0,0,0)
  mov r6.w, l(0)
  mov r8.zw, l(0,0,0,0)
  mov r17.xy, l(0,0,0,0)
  mov r15.xyz, l(0,0,0,0)
  mov r7.w, l(0)
  mov r16.xyz, l(0,0,0,0)
  mov r9.w, l(0)
  mov r13.xyzw, l(0,0,0,0)
endif 
mul r1.x, r1.x, l(0.00781250)
max r1.x, r1.x, l(0.000000)
min r1.x, r1.x, l(15.000000)
ftou r1.x, r1.x
ushr r18.xy, r4.xyxx, l(6, 6, 0, 0)
ishl r18.z, r1.x, l(4)
mov r19.x, -r8.x
not r1.x, r2.w
mad r3.w, -r3.w, l(0.500000), l(1.000000)
mov r20.xy, l(0,0,0,0)
mov r21.w, l(0)
mov r22.xyz, v7.xyzx
mov r22.w, l(1.000000)
mov r23.w, l(1.000000)
mov r19.z, r8.x
mov r24.w, l(1.000000)
mov r25.z, l(1.000000)
mov r26.w, l(1.000000)
mov r19.yw, r9.xxxx
mov r8.y, r19.w
mov r27.w, l(1.000000)
mov r9.y, r19.x
mov r9.z, r8.x
mov r28.w, l(1.000000)
mov r29.x, r9.x
mov r29.y, r19.x
mov r29.z, r8.x
mov r30.x, r9.x
mov r30.y, r19.x
mov r30.z, r8.x
mov r31.x, r9.x
mov r31.y, r19.x
mov r31.z, r8.x
mov r32.xyz, l(0,0,0,0)
mov r33.xyz, l(0,0,0,0)
mov r34.xyz, l(0,0,0,0)
mov r35.xyz, l(0,0,0,0)
mov r36.xyz, r14.xyzx
mov r37.x, r6.w
mov r37.yz, r8.zzwz
mov r38.xy, r17.xyxx
mov r38.z, r7.w
mov r39.xyz, r15.xyzx
mov r40.xyz, r16.xyzx
mov r41.x, r9.w
mov r41.yz, r13.zzwz
mov r4.x, cb2[58].y
mov r4.y, r1.z
mov r17.zw, r13.xxxy
mov r12.w, l(0)
loop 
  uge r14.w, r12.w, cb2[0].x
  breakc_nz r14.w
  ushr r20.z, r12.w, l(5)
  iadd r21.xyz, r18.xyzx, r20.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r14.w, r21.xyzw, t6.yzwx
  mov r21.xyz, r32.xyzx
  mov r42.xyz, r33.xyzx
  mov r43.xyz, r34.xyzx
  mov r44.xyz, r35.xyzx
  mov r45.xyz, r36.xyzx
  mov r46.xyz, r37.xyzx
  mov r47.xyz, r38.xyzx
  mov r48.xyz, r40.xyzx
  mov r49.xyz, r41.xyzx
  mov r20.zw, r17.zzzw
  mov r15.w, r4.x
  mov r16.w, r4.y
  mov r50.xyz, r39.xyzx
  mov r18.w, r14.w
  loop 
    breakc_z r18.w
    firstbit_lo r25.w, r18.w
    ishl r29.w, l(1), r25.w
    and r30.w, r18.w, r29.w
    if_nz r30.w
      xor r18.w, r18.w, r29.w
      iadd r25.w, r12.w, r25.w
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r51.xyzw, r25.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r52.xy, r25.w, l(16), t11.xyxx
      add r51.xyz, r51.xyzx, -v7.xyzx
      mov r52.z, r51.w
      lt r51.xyz, |r51.xyzx|, r52.zxyz
      and r29.w, r51.y, r51.x
      and r29.w, r51.z, r29.w
      if_nz r29.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r51.xyzw, r25.w, l(0), t12.wxyz
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r52.xyzw, r25.w, l(16), t12.zxyw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r53.xyzw, r25.w, l(32), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r54.xyzw, r25.w, l(48), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r55.xyzw, r25.w, l(64), t12.yzwx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r56.xyzw, r25.w, l(80), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r57.xyzw, r25.w, l(96), t12.yzwx
        ubfe r29.w, l(3), l(24), r52.w
        switch r29.w
          case l(4)
          lt r29.w, l(0.000000), r57.x
          mov r58.xy, r56.zwzz
          mov r58.z, r57.w
          mad r59.xyz, -r58.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r51.yzwy
          add r60.xyz, r59.xyzx, -v7.xyzx
          dp3 r30.w, r58.xyzx, r60.xyzx
          div_sat r31.w, -r30.w, r57.x
          mad r61.xyz, r31.wwww, r58.xyzx, r59.xyzx
          movc r61.xyz, r29.wwww, r61.xyzx, r51.yzwy
          add r61.xyz, r61.xyzx, -v7.xyzx
          dp3 r32.w, r61.xyzx, r61.xyzx
          rsq r33.w, r32.w
          mul r61.xyz, r33.wwww, r61.xyzx
          dp3 r33.w, r2.xyzx, r61.xyzx
          lt r34.w, l(0.000000), |r33.w|
          if_nz r34.w
            sqrt r34.w, r32.w
            mul r35.w, r54.x, r54.x
            div r32.w, r35.w, r32.w
            min r32.w, r32.w, l(1.000000)
            mad_sat r62.xy, r34.wwww, r53.xzxx, r53.ywyy
            mul r62.zw, r62.xxxy, r62.xxxy
            mad r62.xy, r62.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
            mul r62.xy, r62.xyxx, r62.zwzz
            mul r32.w, r32.w, r62.x
            mul r62.x, r62.y, r32.w
            lt r32.w, l(0.000000), r62.x
            if_nz r32.w
              ubfe r32.w, l(3), l(27), r52.w
              ine r32.w, r32.w, l(1)
              if_nz r32.w
                mad r32.w, |r33.w|, l(-0.200000), l(0.400000)
                lt r34.w, r33.w, l(0.000000)
                movc r32.w, r34.w, -r32.w, r32.w
                mad r63.xyz, r2.xyzx, r32.wwww, v7.xyzx
                add r63.xyz, -r55.xyzx, r63.xyzx
                max r32.w, |r63.z|, |r63.y|
                max r32.w, r32.w, |r63.x|
                div r32.w, r56.x, r32.w
                add r32.w, r56.y, r32.w
                dp3 r34.w, r63.xyzx, r63.xyzx
                rsq r34.w, r34.w
                max r32.w, r32.w, l(0.00006104)
                and r35.w, r52.w, l(0x0000ffff)
                utof r64.w, r35.w
                mov r62.y, l(0)
                mov r35.w, l(0)
                loop 
                  ige r36.w, r35.w, l(8)
                  breakc_nz r36.w
                  dp2 r65.y, icb[r35.w + 0].yxyy, r19.xyxx
                  dp2 r65.z, icb[r35.w + 0].yxyy, r19.yzyy
                  mul r65.yz, r54.yyyy, r65.yyzy
                  mul r65.x, r11.x, r65.y
                  mul r65.w, r10.x, r65.y
                  mad r64.xyz, r63.xyzx, r34.wwww, r65.xzwx
                  sample_c_lz_indexable(texturecubearray)(float,float,float,float) r36.w, r64.xyzw, t10.xxxx, s13, r32.w
                  mad r62.y, r36.w, l(0.125000), r62.y
                  iadd r35.w, r35.w, l(1)
                endloop 
              else 
                mov r62.y, l(1.000000)
              endif 
              mul r32.w, r62.y, r62.x
              lt r32.w, l(0.000000), r32.w
              if_nz r32.w
                mul r32.w, r4.z, r52.x
                mul r32.w, r32.w, l(0.250000)
                dp3 r34.w, r58.xyzx, r10.yzwy
                dp3 r35.w, r10.yzwy, r60.xyzx
                mad r36.w, -r34.w, r34.w, r57.x
                mad r30.w, r34.w, r35.w, -r30.w
                div_sat r30.w, r30.w, r36.w
                div r34.w, r36.w, r57.x
                mul r34.w, r34.w, l(10.000000)
                min r34.w, r34.w, l(1.000000)
                add r30.w, -r31.w, r30.w
                mad r30.w, r34.w, r30.w, r31.w
                mad r58.xyz, r30.wwww, r58.xyzx, r59.xyzx
                movc r58.xyz, r29.wwww, r58.xyzx, r51.yzwy
                add r58.xyz, r58.xyzx, -v7.xyzx
                dp3 r29.w, r58.xyzx, r58.xyzx
                rsq r29.w, r29.w
                mul r59.xyz, r29.wwww, r58.xyzx
                ubfe r30.w, l(4), l(16), r52.w
                ult r31.w, l(0), r30.w
                and r31.w, r2.w, r31.w
                if_nz r31.w
                  iadd r30.w, r30.w, cb2[0].x
                  iadd r30.w, r30.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.w, r30.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r60.xyzw, r30.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r63.xyzw, r30.w, l(116), t12.xyzw
                  mad r34.w, |r33.w|, l(-0.200000), l(0.400000)
                  lt r35.w, r33.w, l(0.000000)
                  movc r34.w, r35.w, -r34.w, r34.w
                  mad r23.xyz, r2.xyzx, r34.wwww, v7.xyzx
                  dp4 r34.w, r60.xyzw, r23.xyzw
                  dp4 r35.w, r63.xyzw, r23.xyzw
                  lt r36.w, r35.w, r34.w
                  if_z r36.w
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r60.xyzw, r30.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r63.xyzw, r30.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r64.xyzw, r30.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r65.xyzw, r30.w, l(148), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r62.zw, r30.w, l(164), t12.xxxy
                    dp4 r60.x, r60.xyzw, r23.xyzw
                    dp4 r60.y, r63.xyzw, r23.xyzw
                    div r23.xy, r60.xyxx, r35.wwww
                    mad r23.xy, r23.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r23.xy, r65.zwzz, r23.xyxx
                    mul r23.xy, r65.xyxx, r23.xyxx
                    div r60.xy, r31.wwww, r64.xzxx
                    add r60.zw, -r60.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                    ge r60.zw, r23.xxxy, r60.zzzw
                    ge r60.xy, r60.xyxx, r23.xyxx
                    or r60.xy, r60.xyxx, r60.zwzz
                    or r23.z, r60.y, r60.x
                    mov_sat r23.xy, r23.xyxx
                    mad r60.xy, r23.xyxx, r64.xzxx, r64.ywyy
                    mul r23.x, r35.w, r62.w
                    mad r23.y, r62.z, r35.w, r34.w
                    div r23.x, r23.y, r23.x
                  else 
                    mov r23.z, l(-1)
                  endif 
                  or r23.y, r36.w, r23.z
                  if_z r23.y
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.y, r30.w, l(28), t12.xxxx
                    max r23.x, r23.x, l(0.00006104)
                    and r23.y, r23.y, l(0x0000ffff)
                    if_nz r15.w
                      utof r63.z, r23.y
                      mov r23.z, l(0)
                      mov r30.w, l(0)
                      loop 
                        ige r34.w, r30.w, l(8)
                        breakc_nz r34.w
                        dp2 r64.x, icb[r30.w + 0].yxyy, r19.xwxx
                        dp2 r64.y, icb[r30.w + 0].xyxx, r8.xyxx
                        mad r63.xy, r64.xyxx, r31.wwww, r60.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r34.w, r63.xyzx, t9.xxxx, s13, r23.x
                        mad r23.z, r34.w, l(0.125000), r23.z
                        iadd r30.w, r30.w, l(1)
                      endloop 
                    else 
                      utof r60.z, r23.y
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.z, r60.xyzx, t9.xxxx, s13, r23.x
                    endif 
                    mul r23.x, r23.z, r23.z
                    mul r23.x, r23.z, r23.x
                  else 
                    mov r23.x, l(1.000000)
                  endif 
                  mul r62.y, r23.x, r62.y
                else 
                  ubfe r23.x, l(4), l(20), r52.w
                  ult r23.y, l(0), r23.x
                  and r23.y, r1.x, r23.y
                  if_nz r23.y
                    iadd r23.x, r23.x, cb2[0].x
                    iadd r23.x, r23.x, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.y, r23.x, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r60.xyzw, r23.x, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r63.xyzw, r23.x, l(116), t12.xyzw
                    mad r30.w, |r33.w|, l(-0.200000), l(0.400000)
                    lt r31.w, r33.w, l(0.000000)
                    movc r30.w, r31.w, -r30.w, r30.w
                    mad r24.xyz, r2.xyzx, r30.wwww, v7.xyzx
                    dp4 r30.w, r60.xyzw, r24.xyzw
                    dp4 r31.w, r63.xyzw, r24.xyzw
                    lt r34.w, r31.w, r30.w
                    if_z r34.w
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r60.xyzw, r23.x, l(68), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r63.xyzw, r23.x, l(84), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r64.xyzw, r23.x, l(132), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r65.xyzw, r23.x, l(148), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r62.zw, r23.x, l(164), t12.xxxy
                      dp4 r60.x, r60.xyzw, r24.xyzw
                      dp4 r60.y, r63.xyzw, r24.xyzw
                      div r24.xy, r60.xyxx, r31.wwww
                      mad r24.xy, r24.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                      add r24.xy, r65.zwzz, r24.xyxx
                      mul r24.xy, r65.xyxx, r24.xyxx
                      div r60.xy, r23.yyyy, r64.xzxx
                      add r60.zw, -r60.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                      ge r60.zw, r24.xxxy, r60.zzzw
                      ge r60.xy, r60.xyxx, r24.xyxx
                      or r60.xy, r60.xyxx, r60.zwzz
                      or r24.z, r60.y, r60.x
                      mov_sat r24.xy, r24.xyxx
                      mad r60.xy, r24.xyxx, r64.xzxx, r64.ywyy
                      mul r24.x, r31.w, r62.w
                      mad r24.y, r62.z, r31.w, r30.w
                      div r24.x, r24.y, r24.x
                    else 
                      mov r24.z, l(-1)
                    endif 
                    or r24.y, r34.w, r24.z
                    if_z r24.y
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.x, r23.x, l(28), t12.xxxx
                      max r24.x, r24.x, l(0.00006104)
                      and r23.x, r23.x, l(0x0000ffff)
                      if_nz r15.w
                        utof r63.z, r23.x
                        mov r24.yz, l(0,0,0,0)
                        loop 
                          ige r30.w, r24.z, l(8)
                          breakc_nz r30.w
                          dp2 r64.x, icb[r24.z + 0].xyxx, r9.xyxx
                          dp2 r64.y, icb[r24.z + 0].yxyy, r9.xzxx
                          mad r63.xy, r64.xyxx, r23.yyyy, r60.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r30.w, r63.xyzx, t9.xxxx, s13, r24.x
                          mad r24.y, r30.w, l(0.125000), r24.y
                          iadd r24.z, r24.z, l(1)
                        endloop 
                      else 
                        utof r60.z, r23.x
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.y, r60.xyzx, t9.xxxx, s13, r24.x
                      endif 
                      mul r23.x, r24.y, r24.y
                      mul r23.x, r24.y, r23.x
                    else 
                      mov r23.x, l(1.000000)
                    endif 
                    mul r62.y, r23.x, r62.y
                  endif 
                endif 
                mul r23.x, r62.y, r62.x
                mad r23.y, -|r33.w|, r3.w, l(1.000000)
                mul r23.y, r23.y, r23.y
                mad r23.y, -r23.y, l(0.620000), l(0.620000)
                add r23.y, -|r33.w|, r23.y
                mad r23.y, r4.w, r23.y, |r33.w|
                lt r24.x, l(0.000000), r33.w
                dp3_sat r24.z, r2.xyzx, r59.xyzx
                mad r58.xyz, r58.xyzx, r29.wwww, r7.xyzx
                dp3 r29.w, r58.xyzx, r58.xyzx
                rsq r29.w, r29.w
                mul r58.xyz, r29.wwww, r58.xyzx
                dp3 r29.w, r58.xyzx, r7.xyzx
                dp3 r30.w, r2.xyzx, r58.xyzx
                mad r31.w, |r30.w|, r4.z, -|r30.w|
                mad r30.w, |r30.w|, r31.w, l(1.000000)
                mad r31.w, r24.z, r5.z, r5.w
                mul r30.w, r30.w, r30.w
                mul r30.w, r31.w, r30.w
                rcp r30.w, r30.w
                mul r24.z, r32.w, r24.z
                mul r24.z, r24.z, r30.w
                add_sat r29.w, -r29.w, l(1.000000)
                mul r30.w, r29.w, r29.w
                mul r30.w, r30.w, r30.w
                mul r29.w, r29.w, r30.w
                mul r29.w, r24.z, r29.w
                and r58.xyz, r23.yyyy, r24.xxxx
                movc r23.y, r24.x, l(0), r23.y
                and r59.xyz, r24.xxxx, r29.wwww
                and r24.x, r24.z, r24.x
                mov r52.x, r51.x
                dp3 r24.z, r52.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
                mul r24.z, r23.x, r24.z
                lt r29.w, r16.w, r24.z
                if_nz r29.w
                  mul r29.w, r20.w, r20.z
                  mul r60.xyz, r45.xyzx, r29.wwww
                  mad r21.xyz, r60.xyzx, r47.xyzx, r21.xyzx
                  mad r42.xyz, r60.xyzx, r50.xyzx, r42.xyzx
                  mad r44.xyz, r60.xyzx, r48.xyzx, r44.xyzx
                  mad r43.xyz, r60.xyzx, r49.xyzx, r43.xyzx
                  mov r48.xyz, r24.xxxx
                  mov r16.w, r24.z
                  mov r50.xyz, r23.yyyy
                  mov r45.xyz, r52.xyzx
                  mov r46.xyz, r61.xyzx
                  mov r47.xyz, r58.xyzx
                  mov r49.xyz, r59.xyzx
                  mov r20.zw, r62.xxxy
                else 
                  mul r58.xyw, r23.xxxx, r52.xyxz
                  mad r21.xyz, r58.xywx, r58.zzzz, r21.xyzx
                  mad r42.xyz, r58.xywx, r23.yyyy, r42.xyzx
                  mad r44.xyz, r58.xywx, r24.xxxx, r44.xyzx
                  mad r43.xyz, r58.xywx, r59.xyzx, r43.xyzx
                endif 
              endif 
            endif 
          endif 
          break 
          case l(2)
          mov r58.xy, r54.zwzz
          mov r58.z, r55.w
          add r58.xyz, r58.xyzx, -v7.xyzx
          dp3 r23.x, r58.xyzx, r58.xyzx
          rsq r23.x, r23.x
          mul r59.xyz, r23.xxxx, r58.xyzx
          dp3 r23.y, r2.xyzx, r59.xyzx
          lt r24.x, l(0.000000), |r23.y|
          if_nz r24.x
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r60.xyzw, r25.w, l(112), t12.yzwx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r61.xyzw, r25.w, l(128), t12.zxyw
            mov r63.xyz, r60.xyzx
            mov r63.w, r61.y
            dp4 r24.x, r63.xyzw, r22.xyzw
            lt r24.z, r24.x, l(1.000000)
            if_nz r24.z
              mov r62.xzw, l(1.000000,0,1.000000,1.000000)
              mov r64.x, l(0)
            else 
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r65.xyzw, r25.w, l(172), t12.yzwx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r66.xyzw, r25.w, l(188), t12.wxyz
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r67.xyzw, r25.w, l(204), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r24.z, r25.w, l(236), t12.xxxx
              add r68.xyz, r51.yzwy, -v7.xyzx
              mul r29.w, r54.x, r54.x
              dp3 r30.w, r68.xyzx, r68.xyzx
              div r29.w, r29.w, r30.w
              min r29.w, r29.w, l(1.000000)
              mad_sat r53.xy, r24.xxxx, r53.xzxx, r53.ywyy
              mul r53.zw, r53.xxxy, r53.xxxy
              mad r53.xy, r53.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
              mul r53.xy, r53.xyxx, r53.zwzz
              mul r29.w, r29.w, r53.x
              mul r29.w, r53.y, r29.w
              mov r55.w, r56.x
              dp4 r53.x, r55.xyzw, r22.xyzw
              mov r68.xyz, r56.yzwy
              mov r68.w, r57.w
              dp4 r53.y, r68.xyzw, r22.xyzw
              div r25.xy, r53.xyxx, r24.xxxx
              lt r24.x, r65.w, l(0.00048828)
              if_nz r24.x
                mov r66.y, r67.x
                mad_sat r53.xy, |r25.xyxx|, r66.zwzz, r66.xyxx
                mul r53.zw, r53.xxxy, r53.xxxy
                mad r53.xy, r53.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
                mul r53.xy, r53.xyxx, r53.zwzz
                mul r24.x, r53.y, r53.x
              else 
                mov r65.w, r66.y
                mul_sat r53.xyzw, |r25.yyxx|, r65.xyzw
                log r53.xyzw, r53.xyzw
                mul r53.xyzw, r53.xyzw, r66.xxxx
                exp r53.xyzw, r53.xyzw
                add r53.xy, r53.zwzz, r53.xyxx
                log r53.xy, r53.xyxx
                mul r53.xy, r53.xyxx, r67.xxxx
                exp r53.xy, r53.xyxx
                mul r30.w, r53.x, r66.z
                mad r31.w, r66.w, r53.y, l(-1.000000)
                mad r30.w, r66.w, r53.y, -r30.w
                div_sat r30.w, r31.w, r30.w
                mul r31.w, r30.w, r30.w
                mad r30.w, r30.w, l(-2.000000), l(3.000000)
                mul r24.x, r30.w, r31.w
              endif 
              mul r64.x, r24.x, r29.w
              and r24.x, r24.z, l(255)
              if_nz r24.x
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r53.xyz, r25.w, l(220), t12.xyzx
                dp3 r24.z, r67.yzwy, r25.xyzx
                dp3 r25.x, r53.xyzx, r25.xyzx
                frc r53.x, r24.z
                frc r53.y, r25.x
                iadd r24.x, r24.x, l(-1)
                utof r53.z, r24.x
                sample_l_indexable(texture2darray)(float,float,float,float) r62.xzw, r53.xyzx, t20.xwyz, s2, l(0.000000)
              else 
                mov r62.xzw, l(1.000000,0,1.000000,1.000000)
              endif 
            endif 
            mov r51.yz, r52.yyzy
            mul r51.xyz, r62.xzwx, r51.xyzx
            lt r24.x, l(0.000000), r64.x
            if_nz r24.x
              ubfe r24.x, l(3), l(27), r52.w
              ine r24.x, r24.x, l(1)
              if_nz r24.x
                mad r24.x, |r23.y|, l(-0.200000), l(0.400000)
                lt r24.z, r23.y, l(0.000000)
                movc r24.x, r24.z, -r24.x, r24.x
                mad r26.xyz, r2.xyzx, r24.xxxx, v7.xyzx
                mov r60.xyz, r57.xyzx
                dp4 r24.x, r60.xyzw, r26.xyzw
                dp4 r24.z, r63.xyzw, r26.xyzw
                ge r25.x, r24.z, r24.x
                if_nz r25.x
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r61.y, r25.w, l(144), t12.xxxx
                  mov r55.w, r56.x
                  dp4 r25.x, r55.xyzw, r26.xyzw
                  mov r57.xyz, r56.yzwy
                  dp4 r25.y, r57.xyzw, r26.xyzw
                  div r25.xy, r25.xyxx, r24.zzzz
                  mad_sat r25.xy, r25.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  mad r26.xy, r25.xyxx, r61.zwzz, r61.xyxx
                  div r24.x, r24.x, r24.z
                  max r24.x, r24.x, l(0.00006104)
                  and r24.z, r52.w, l(0x0000ffff)
                  if_nz r15.w
                    utof r53.z, r24.z
                    mov r25.xy, l(0,0,0,0)
                    loop 
                      ige r25.w, r25.y, l(8)
                      breakc_nz r25.w
                      dp2 r55.x, icb[r25.y + 0].xyxx, r29.xyxx
                      dp2 r55.y, icb[r25.y + 0].yxyy, r29.xzxx
                      mad r53.xy, r55.xyxx, r54.yyyy, r26.xyxx
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r25.w, r53.xyzx, t9.xxxx, s13, r24.x
                      mad r25.x, r25.w, l(0.125000), r25.x
                      iadd r25.y, r25.y, l(1)
                    endloop 
                  else 
                    utof r26.z, r24.z
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r25.x, r26.xyzx, t9.xxxx, s13, r24.x
                  endif 
                  mul r24.x, r25.x, r25.x
                  mul r64.y, r25.x, r24.x
                else 
                  mov r64.y, l(1.000000)
                endif 
              else 
                mov r64.y, l(1.000000)
              endif 
              mul r24.x, r64.y, r64.x
              lt r24.x, l(0.000000), r24.x
              if_nz r24.x
                mul r24.x, r4.z, r52.x
                mul r24.x, r24.x, l(0.250000)
                ubfe r24.z, l(4), l(16), r52.w
                ult r25.y, l(0), r24.z
                and r25.y, r2.w, r25.y
                if_nz r25.y
                  iadd r24.z, r24.z, cb2[0].x
                  iadd r24.z, r24.z, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r25.y, r24.z, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r53.xyzw, r24.z, l(68), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r54.xyzw, r24.z, l(84), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r55.xyzw, r24.z, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r56.xyzw, r24.z, l(116), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r57.xyzw, r24.z, l(132), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r60.xyzw, r24.z, l(148), t12.xyzw
                  mad r25.w, |r23.y|, l(-0.200000), l(0.400000)
                  lt r26.x, r23.y, l(0.000000)
                  movc r25.w, r26.x, -r25.w, r25.w
                  mad r27.xyz, r2.xyzx, r25.wwww, v7.xyzx
                  dp4 r26.x, r53.xyzw, r27.xyzw
                  dp4 r26.y, r54.xyzw, r27.xyzw
                  dp4 r25.w, r55.xyzw, r27.xyzw
                  dp4 r26.z, r56.xyzw, r27.xyzw
                  lt r27.x, r26.z, r25.w
                  div r26.xy, r26.xyxx, r26.zzzz
                  mad r26.xy, r26.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r26.xy, r60.zwzz, r26.xyxx
                  mul r26.xy, r60.xyxx, r26.xyxx
                  div r27.yz, r25.yyyy, r57.xxzx
                  add r52.xy, -r27.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
                  ge r52.xy, r26.xyxx, r52.xyxx
                  ge r27.yz, r27.yyzy, r26.xxyx
                  or r27.yz, r27.yyzy, r52.xxyx
                  or r27.y, r27.z, r27.y
                  or r27.x, r27.x, r27.y
                  if_z r27.x
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r27.x, r24.z, l(28), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r27.yz, r24.z, l(164), t12.xxyx
                    mov_sat r26.xy, r26.xyxx
                    mad r52.xy, r26.xyxx, r57.xzxx, r57.ywyy
                    mul r24.z, r26.z, r27.z
                    mad r25.w, r27.y, r26.z, r25.w
                    div r24.z, r25.w, r24.z
                    max r24.z, r24.z, l(0.00006104)
                    and r25.w, r27.x, l(0x0000ffff)
                    if_nz r15.w
                      utof r26.z, r25.w
                      mov r27.xy, l(0,0,0,0)
                      loop 
                        ige r27.z, r27.y, l(8)
                        breakc_nz r27.z
                        dp2 r53.x, icb[r27.y + 0].xyxx, r30.xyxx
                        dp2 r53.y, icb[r27.y + 0].yxyy, r30.xzxx
                        mad r26.xy, r53.xyxx, r25.yyyy, r52.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r26.x, r26.xyzx, t9.xxxx, s13, r24.z
                        mad r27.x, r26.x, l(0.125000), r27.x
                        iadd r27.y, r27.y, l(1)
                      endloop 
                    else 
                      utof r52.z, r25.w
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r27.x, r52.xyzx, t9.xxxx, s13, r24.z
                    endif 
                    mul r24.z, r27.x, r27.x
                    mul r24.z, r27.x, r24.z
                  else 
                    mov r24.z, l(1.000000)
                  endif 
                  mul r64.y, r24.z, r64.y
                else 
                  ubfe r24.z, l(4), l(20), r52.w
                  ult r25.y, l(0), r24.z
                  and r25.y, r1.x, r25.y
                  if_nz r25.y
                    iadd r24.z, r24.z, cb2[0].x
                    iadd r24.z, r24.z, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r25.y, r24.z, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r52.xyzw, r24.z, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r53.xyzw, r24.z, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r54.xyzw, r24.z, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r55.xyzw, r24.z, l(116), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r56.xyzw, r24.z, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r57.xyzw, r24.z, l(148), t12.xyzw
                    mad r25.w, |r23.y|, l(-0.200000), l(0.400000)
                    lt r26.x, r23.y, l(0.000000)
                    movc r25.w, r26.x, -r25.w, r25.w
                    mad r28.xyz, r2.xyzx, r25.wwww, v7.xyzx
                    dp4 r26.x, r52.xyzw, r28.xyzw
                    dp4 r26.y, r53.xyzw, r28.xyzw
                    dp4 r25.w, r54.xyzw, r28.xyzw
                    dp4 r26.z, r55.xyzw, r28.xyzw
                    lt r27.y, r26.z, r25.w
                    div r26.xy, r26.xyxx, r26.zzzz
                    mad r26.xy, r26.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r26.xy, r57.zwzz, r26.xyxx
                    mul r26.xy, r57.xyxx, r26.xyxx
                    div r28.xy, r25.yyyy, r56.xzxx
                    add r52.xy, -r28.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                    ge r52.xy, r26.xyxx, r52.xyxx
                    ge r28.xy, r28.xyxx, r26.xyxx
                    or r28.xy, r28.xyxx, r52.xyxx
                    or r27.z, r28.y, r28.x
                    or r27.y, r27.y, r27.z
                    if_z r27.y
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r27.y, r24.z, l(28), t12.xxxx
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r28.xy, r24.z, l(164), t12.xyxx
                      mov_sat r26.xy, r26.xyxx
                      mad r52.xy, r26.xyxx, r56.xzxx, r56.ywyy
                      mul r24.z, r26.z, r28.y
                      mad r25.w, r28.x, r26.z, r25.w
                      div r24.z, r25.w, r24.z
                      max r24.z, r24.z, l(0.00006104)
                      and r25.w, r27.y, l(0x0000ffff)
                      if_nz r15.w
                        utof r26.z, r25.w
                        mov r27.yz, l(0,0,0,0)
                        loop 
                          ige r28.x, r27.z, l(8)
                          breakc_nz r28.x
                          dp2 r28.x, icb[r27.z + 0].xyxx, r31.xyxx
                          dp2 r28.y, icb[r27.z + 0].yxyy, r31.xzxx
                          mad r26.xy, r28.xyxx, r25.yyyy, r52.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r26.x, r26.xyzx, t9.xxxx, s13, r24.z
                          mad r27.y, r26.x, l(0.125000), r27.y
                          iadd r27.z, r27.z, l(1)
                        endloop 
                      else 
                        utof r52.z, r25.w
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r27.y, r52.xyzx, t9.xxxx, s13, r24.z
                      endif 
                      mul r24.z, r27.y, r27.y
                      mul r24.z, r27.y, r24.z
                    else 
                      mov r24.z, l(1.000000)
                    endif 
                    mul r64.y, r24.z, r64.y
                  endif 
                endif 
                mul r24.z, r64.y, r64.x
                mad r25.y, -|r23.y|, r3.w, l(1.000000)
                mul r25.y, r25.y, r25.y
                mad r25.y, -r25.y, l(0.620000), l(0.620000)
                add r25.y, -|r23.y|, r25.y
                mad r25.y, r4.w, r25.y, |r23.y|
                lt r25.w, l(0.000000), r23.y
                mov_sat r23.y, r23.y
                mad r26.xyz, r58.xyzx, r23.xxxx, r7.xyzx
                dp3 r23.x, r26.xyzx, r26.xyzx
                rsq r23.x, r23.x
                mul r26.xyz, r23.xxxx, r26.xyzx
                dp3 r23.x, r26.xyzx, r7.xyzx
                dp3 r26.x, r2.xyzx, r26.xyzx
                mad r26.y, |r26.x|, r4.z, -|r26.x|
                mad r26.x, |r26.x|, r26.y, l(1.000000)
                mad r26.y, r23.y, r5.z, r5.w
                mul r26.x, r26.x, r26.x
                mul r26.x, r26.y, r26.x
                rcp r26.x, r26.x
                mul r23.y, r24.x, r23.y
                mul r23.y, r23.y, r26.x
                add_sat r23.x, -r23.x, l(1.000000)
                mul r24.x, r23.x, r23.x
                mul r24.x, r24.x, r24.x
                mul r23.x, r23.x, r24.x
                mul r23.x, r23.x, r23.y
                and r26.xyz, r25.yyyy, r25.wwww
                movc r24.x, r25.w, l(0), r25.y
                and r28.xyz, r23.xxxx, r25.wwww
                and r23.x, r23.y, r25.w
                dp3 r23.y, r51.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
                mul r23.y, r23.y, r24.z
                lt r25.y, r16.w, r23.y
                if_nz r25.y
                  mul r25.y, r20.w, r20.z
                  mul r52.xyz, r45.xyzx, r25.yyyy
                  mad r21.xyz, r52.xyzx, r47.xyzx, r21.xyzx
                  mad r42.xyz, r52.xyzx, r50.xyzx, r42.xyzx
                  mad r44.xyz, r52.xyzx, r48.xyzx, r44.xyzx
                  mad r43.xyz, r52.xyzx, r49.xyzx, r43.xyzx
                  mov r48.xyz, r23.xxxx
                  mov r16.w, r23.y
                  mov r50.xyz, r24.xxxx
                  mov r45.xyz, r51.xyzx
                  mov r46.xyz, r59.xyzx
                  mov r47.xyz, r26.xyzx
                  mov r49.xyz, r28.xyzx
                  mov r20.zw, r64.xxxy
                else 
                  mul r51.xyz, r51.xyzx, r24.zzzz
                  mad r21.xyz, r51.xyzx, r26.zzzz, r21.xyzx
                  mad r42.xyz, r51.xyzx, r24.xxxx, r42.xyzx
                  mad r44.xyz, r51.xyzx, r23.xxxx, r44.xyzx
                  mad r43.xyz, r51.xyzx, r28.xyzx, r43.xyzx
                endif 
              endif 
            endif 
          endif 
          break 
          default 
          break 
        endswitch 
      endif 
    endif 
  endloop 
  mov r32.xyz, r21.xyzx
  mov r33.xyz, r42.xyzx
  mov r34.xyz, r43.xyzx
  mov r35.xyz, r44.xyzx
  mov r36.xyz, r45.xyzx
  mov r37.xyz, r46.xyzx
  mov r38.xyz, r47.xyzx
  mov r40.xyz, r48.xyzx
  mov r41.xyz, r49.xyzx
  mov r17.zw, r20.zzzw
  mov r4.y, r16.w
  mov r39.xyz, r50.xyzx
  iadd r12.w, r12.w, l(32)
endloop 
mov r2.z, l(0)
mul r2.xy, r37.yxyy, l(1.000000, -1.000000, 0.000000, 0.000000)
mul r4.xyz, r2.yzxy, r37.zxyz
mad r4.xyz, r37.yzxy, r2.zxyz, -r4.xyzx
mul r8.xyz, r12.yyyy, cb1[9].xywx
mad r8.xyz, r12.xxxx, cb1[8].xywx, r8.xyzx
mad r8.xyz, r12.zzzz, cb1[10].xywx, r8.xyzx
add r8.xyz, r11.yzwy, r8.xyzx
rcp r9.z, r8.z
mul r1.xz, r8.xxyx, r9.zzzz
mad r9.xy, r1.xzxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
mad r8.xyw, r37.xyxz, l(3.000000, 3.000000, 0.000000, 3.000000), r12.xyxz
dp2 r1.x, v0.xyxx, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r1.x, r1.x
mul r1.x, r1.x, l(52.982918)
frc r1.x, r1.x
mul r1.z, r1.x, l(3.141600)
mad r1.z, cb1[70].w, l(0.500000), r1.z
sincos r10.x, r11.x, r1.z
mul r12.xyz, r4.xyzx, r10.xxxx
mad r12.xyz, r11.xxxx, r2.xyzx, r12.xyzx
mad r12.xyz, r12.xyzx, l(0.120000, 0.120000, 0.120000, 0.000000), r8.xywx
mul r13.xyz, r12.yyyy, cb1[9].xywx
mad r12.xyw, r12.xxxx, cb1[8].xyxw, r13.xyxz
mad r12.xyz, r12.zzzz, cb1[10].xywx, r12.xywx
add r12.xyz, r11.yzwy, r12.xyzx
mul r5.zw, r12.xxxy, l(0.000000, 0.000000, 0.500000, -0.500000)
rcp r12.z, r12.z
mad r12.xy, r5.zwzz, r12.zzzz, l(0.500000, 0.500000, 0.000000, 0.000000)
mov r13.xyz, -r9.xyzx
add r12.xyz, r12.xyzx, r13.xyzx
add r1.z, r1.z, l(3.141600)
sincos r10.x, r11.x, r1.z
mul r4.xyz, r4.xyzx, r10.xxxx
mad r2.xyz, r11.xxxx, r2.xyzx, r4.xyzx
mad r2.xyz, r2.xyzx, l(0.120000, 0.120000, 0.120000, 0.000000), r8.xywx
mul r4.xyz, r2.yyyy, cb1[9].xywx
mad r2.xyw, r2.xxxx, cb1[8].xyxw, r4.xyxz
mad r2.xyz, r2.zzzz, cb1[10].xywx, r2.xywx
add r2.xyz, r11.yzwy, r2.xyzx
mul r2.xy, r2.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000)
rcp r4.z, r2.z
mad r4.xy, r2.xyxx, r4.zzzz, r13.xyxx
mov r13.w, l(0.500000)
add r2.xyz, r13.wwzw, r4.xyzx
dp2 r1.z, cb1[44].zwzz, cb1[44].zwzz
sqrt r1.z, r1.z
dp2 r2.w, r12.xyxx, r12.xyxx
sqrt r2.w, r2.w
rcp r2.w, r2.w
mul r1.z, r1.z, r2.w
mad r4.xy, r1.xxxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.33333334, 1.000000, 0.000000, 0.000000)
mul r4.xy, r4.xyxx, l(0.11764706, 0.11764706, 0.000000, 0.000000)
mul r4.xy, r4.xyxx, r4.xyxx
mov x1[0].x, r4.x
mad r8.xyw, r12.xyxz, r4.xxxx, r9.xyxz
lt r4.zw, r1.zzzz, r4.xxxy
mul r5.zw, r8.xxxy, cb1[44].xxxy
ftoi r11.xy, r5.zwzz
mov r11.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r2.w, r11.xyzw, t0.yzwx
ge r3.w, r2.w, l(0.984375)
mul r5.z, r2.w, l(1.01587307)
mad r2.w, r2.w, l(64.000000), l(-63.000000)
movc r2.w, r3.w, r2.w, r5.z
max r2.w, r2.w, l(0.00000001)
rcp r2.w, r2.w
mov x2[0].x, r2.w
add r3.w, r2.w, l(0.042000)
mul r3.w, r3.w, r8.w
lt r3.w, l(1.000000), r3.w
and r3.w, r3.w, l(0x3f800000)
movc r3.w, r4.z, r3.w, l(1.000000)
mov x0[0].x, r3.w
mov x1[1].x, r4.y
mad r8.xyw, r2.xyxz, r4.yyyy, r9.xyxz
mul r5.zw, r8.xxxy, cb1[44].xxxy
ftoi r11.xy, r5.zwzz
mov r11.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r4.z, r11.xyzw, t0.yzxw
ge r5.z, r4.z, l(0.984375)
mul r5.w, r4.z, l(1.01587307)
mad r4.z, r4.z, l(64.000000), l(-63.000000)
movc r4.z, r5.z, r4.z, r5.w
max r4.z, r4.z, l(0.00000001)
rcp r4.z, r4.z
mov x2[1].x, r4.z
add r5.z, r4.z, l(0.042000)
mul r5.z, r5.z, r8.w
lt r5.z, l(1.000000), r5.z
and r5.z, r5.z, l(0x3f800000)
movc r4.w, r4.w, r5.z, l(1.000000)
mov x0[1].x, r4.w
add r5.z, r3.w, r4.w
ne r5.z, r5.z, l(0.000000)
if_nz r5.z
  mad r5.zw, r1.xxxx, l(0.000000, 0.000000, 0.500000, 0.500000), l(0.000000, 0.000000, 1.33333337, 2.000000)
  mul r5.zw, r5.zzzw, l(0.000000, 0.000000, 0.11764706, 0.11764706)
  mad r5.zw, r5.zzzw, r5.zzzw, -r4.xxxy
  mad r4.x, r3.w, r5.z, r4.x
  mov x1[0].x, r4.x
  mad r8.xyw, r12.xyxz, r4.xxxx, r9.xyxz
  lt r4.x, r1.z, r4.x
  mul r8.xy, r8.xyxx, cb1[44].xyxx
  ftoi r11.xy, r8.xyxx
  mov r11.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r5.z, r11.xyzw, t0.yzxw
  ge r6.w, r5.z, l(0.984375)
  mul r7.w, r5.z, l(1.01587307)
  mad r5.z, r5.z, l(64.000000), l(-63.000000)
  movc r5.z, r6.w, r5.z, r7.w
  max r5.z, r5.z, l(0.00000001)
  rcp r5.z, r5.z
  movc r2.w, r4.x, r5.z, r2.w
  mov x2[0].x, r2.w
  add r2.w, r5.z, l(0.042000)
  mul r2.w, r2.w, r8.w
  lt r2.w, l(1.000000), r2.w
  and r2.w, r2.w, l(0x3f800000)
  mul r2.w, r2.w, r3.w
  movc r2.w, r4.x, r2.w, r3.w
  mov x0[0].x, r2.w
  mad r3.w, r4.w, r5.w, r4.y
  mov x1[1].x, r3.w
  mad r8.xyw, r2.xyxz, r3.wwww, r9.xyxz
  lt r3.w, r1.z, r3.w
  mul r4.xy, r8.xyxx, cb1[44].xyxx
  ftoi r11.xy, r4.xyxx
  mov r11.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.x, r11.xyzw, t0.xyzw
  ge r4.y, r4.x, l(0.984375)
  mul r5.z, r4.x, l(1.01587307)
  mad r4.x, r4.x, l(64.000000), l(-63.000000)
  movc r4.x, r4.y, r4.x, r5.z
  max r4.x, r4.x, l(0.00000001)
  rcp r4.x, r4.x
  movc r4.y, r3.w, r4.x, r4.z
  mov x2[1].x, r4.y
  add r4.x, r4.x, l(0.042000)
  mul r4.x, r4.x, r8.w
  lt r4.x, l(1.000000), r4.x
  and r4.x, r4.x, l(0x3f800000)
  mul r4.x, r4.x, r4.w
  movc r3.w, r3.w, r4.x, r4.w
  mov x0[1].x, r3.w
  add r2.w, r2.w, r3.w
  eq r2.w, r2.w, l(0.000000)
else 
  mov r2.w, l(-1)
endif 
if_z r2.w
  mad r4.xy, r1.xxxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(2.33333325, 3.000000, 0.000000, 0.000000)
  mul r4.xy, r4.xyxx, l(0.11764706, 0.11764706, 0.000000, 0.000000)
  mov r2.w, x1[0].x
  mov r3.w, x0[0].x
  mad r4.x, r4.x, r4.x, -r2.w
  mad r2.w, r3.w, r4.x, r2.w
  mov x1[0].x, r2.w
  mad r4.xzw, r12.xxyz, r2.wwww, r9.xxyz
  lt r2.w, r1.z, r2.w
  mul r4.xz, r4.xxzx, cb1[44].xxyx
  ftoi r11.xy, r4.xzxx
  mov r11.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.x, r11.xyzw, t0.xyzw
  ge r4.z, r4.x, l(0.984375)
  mul r5.z, r4.x, l(1.01587307)
  mad r4.x, r4.x, l(64.000000), l(-63.000000)
  movc r4.x, r4.z, r4.x, r5.z
  max r4.x, r4.x, l(0.00000001)
  rcp r4.x, r4.x
  mov r4.z, x2[0].x
  movc r4.z, r2.w, r4.x, r4.z
  mov x2[0].x, r4.z
  add r4.x, r4.x, l(0.042000)
  mul r4.x, r4.x, r4.w
  lt r4.x, l(1.000000), r4.x
  and r4.x, r4.x, l(0x3f800000)
  mul r4.x, r3.w, r4.x
  movc r2.w, r2.w, r4.x, r3.w
  mov x0[0].x, r2.w
  mov r3.w, x1[1].x
  mov r4.x, x0[1].x
  mad r4.y, r4.y, r4.y, -r3.w
  mad r3.w, r4.x, r4.y, r3.w
  mov x1[1].x, r3.w
  mad r4.yzw, r2.xxyz, r3.wwww, r9.xxyz
  lt r3.w, r1.z, r3.w
  mul r4.yz, r4.yyzy, cb1[44].xxyx
  ftoi r11.xy, r4.yzyy
  mov r11.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.y, r11.xyzw, t0.yxzw
  ge r4.z, r4.y, l(0.984375)
  mul r5.z, r4.y, l(1.01587307)
  mad r4.y, r4.y, l(64.000000), l(-63.000000)
  movc r4.y, r4.z, r4.y, r5.z
  max r4.y, r4.y, l(0.00000001)
  rcp r4.y, r4.y
  mov r4.z, x2[1].x
  movc r4.z, r3.w, r4.y, r4.z
  mov x2[1].x, r4.z
  add r4.y, r4.y, l(0.042000)
  mul r4.y, r4.y, r4.w
  lt r4.y, l(1.000000), r4.y
  and r4.y, r4.y, l(0x3f800000)
  mul r4.y, r4.y, r4.x
  movc r3.w, r3.w, r4.y, r4.x
  mov x0[1].x, r3.w
  add r2.w, r2.w, r3.w
  eq r2.w, r2.w, l(0.000000)
else 
  mov r2.w, l(-1)
endif 
if_z r2.w
  mad r4.xy, r1.xxxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(3.33333325, 4.000000, 0.000000, 0.000000)
  mul r4.xy, r4.xyxx, l(0.11764706, 0.11764706, 0.000000, 0.000000)
  mov r2.w, x1[0].x
  mov r3.w, x0[0].x
  mad r4.x, r4.x, r4.x, -r2.w
  mad r2.w, r3.w, r4.x, r2.w
  mov x1[0].x, r2.w
  mad r4.xzw, r12.xxyz, r2.wwww, r9.xxyz
  lt r2.w, r1.z, r2.w
  mul r4.xz, r4.xxzx, cb1[44].xxyx
  ftoi r11.xy, r4.xzxx
  mov r11.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.x, r11.xyzw, t0.xyzw
  ge r4.z, r4.x, l(0.984375)
  mul r5.z, r4.x, l(1.01587307)
  mad r4.x, r4.x, l(64.000000), l(-63.000000)
  movc r4.x, r4.z, r4.x, r5.z
  max r4.x, r4.x, l(0.00000001)
  rcp r4.x, r4.x
  mov r4.z, x2[0].x
  movc r4.z, r2.w, r4.x, r4.z
  mov x2[0].x, r4.z
  add r4.x, r4.x, l(0.042000)
  mul r4.x, r4.x, r4.w
  lt r4.x, l(1.000000), r4.x
  and r4.x, r4.x, l(0x3f800000)
  mul r4.x, r3.w, r4.x
  movc r2.w, r2.w, r4.x, r3.w
  mov x0[0].x, r2.w
  mov r3.w, x1[1].x
  mov r4.x, x0[1].x
  mad r4.y, r4.y, r4.y, -r3.w
  mad r3.w, r4.x, r4.y, r3.w
  mov x1[1].x, r3.w
  mad r4.yzw, r2.xxyz, r3.wwww, r9.xxyz
  lt r3.w, r1.z, r3.w
  mul r4.yz, r4.yyzy, cb1[44].xxyx
  ftoi r11.xy, r4.yzyy
  mov r11.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.y, r11.xyzw, t0.yxzw
  ge r4.z, r4.y, l(0.984375)
  mul r5.z, r4.y, l(1.01587307)
  mad r4.y, r4.y, l(64.000000), l(-63.000000)
  movc r4.y, r4.z, r4.y, r5.z
  max r4.y, r4.y, l(0.00000001)
  rcp r4.y, r4.y
  mov r4.z, x2[1].x
  movc r4.z, r3.w, r4.y, r4.z
  mov x2[1].x, r4.z
  add r4.y, r4.y, l(0.042000)
  mul r4.y, r4.y, r4.w
  lt r4.y, l(1.000000), r4.y
  and r4.y, r4.y, l(0x3f800000)
  mul r4.y, r4.y, r4.x
  movc r3.w, r3.w, r4.y, r4.x
  mov x0[1].x, r3.w
  add r2.w, r2.w, r3.w
  eq r2.w, r2.w, l(0.000000)
else 
  mov r2.w, l(-1)
endif 
if_z r2.w
  mad r4.xy, r1.xxxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(4.33333349, 5.000000, 0.000000, 0.000000)
  mul r4.xy, r4.xyxx, l(0.11764706, 0.11764706, 0.000000, 0.000000)
  mov r2.w, x1[0].x
  mov r3.w, x0[0].x
  mad r4.x, r4.x, r4.x, -r2.w
  mad r2.w, r3.w, r4.x, r2.w
  mov x1[0].x, r2.w
  mad r4.xzw, r12.xxyz, r2.wwww, r9.xxyz
  lt r2.w, r1.z, r2.w
  mul r4.xz, r4.xxzx, cb1[44].xxyx
  ftoi r11.xy, r4.xzxx
  mov r11.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.x, r11.xyzw, t0.xyzw
  ge r4.z, r4.x, l(0.984375)
  mul r5.z, r4.x, l(1.01587307)
  mad r4.x, r4.x, l(64.000000), l(-63.000000)
  movc r4.x, r4.z, r4.x, r5.z
  max r4.x, r4.x, l(0.00000001)
  rcp r4.x, r4.x
  mov r4.z, x2[0].x
  movc r4.z, r2.w, r4.x, r4.z
  mov x2[0].x, r4.z
  add r4.x, r4.x, l(0.042000)
  mul r4.x, r4.x, r4.w
  lt r4.x, l(1.000000), r4.x
  and r4.x, r4.x, l(0x3f800000)
  mul r4.x, r3.w, r4.x
  movc r2.w, r2.w, r4.x, r3.w
  mov x0[0].x, r2.w
  mov r3.w, x1[1].x
  mov r4.x, x0[1].x
  mad r4.y, r4.y, r4.y, -r3.w
  mad r3.w, r4.x, r4.y, r3.w
  mov x1[1].x, r3.w
  mad r4.yzw, r2.xxyz, r3.wwww, r9.xxyz
  lt r3.w, r1.z, r3.w
  mul r4.yz, r4.yyzy, cb1[44].xxyx
  ftoi r11.xy, r4.yzyy
  mov r11.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.y, r11.xyzw, t0.yxzw
  ge r4.z, r4.y, l(0.984375)
  mul r5.z, r4.y, l(1.01587307)
  mad r4.y, r4.y, l(64.000000), l(-63.000000)
  movc r4.y, r4.z, r4.y, r5.z
  max r4.y, r4.y, l(0.00000001)
  rcp r4.y, r4.y
  mov r4.z, x2[1].x
  movc r4.z, r3.w, r4.y, r4.z
  mov x2[1].x, r4.z
  add r4.y, r4.y, l(0.042000)
  mul r4.y, r4.y, r4.w
  lt r4.y, l(1.000000), r4.y
  and r4.y, r4.y, l(0x3f800000)
  mul r4.y, r4.y, r4.x
  movc r3.w, r3.w, r4.y, r4.x
  mov x0[1].x, r3.w
  add r2.w, r2.w, r3.w
  eq r2.w, r2.w, l(0.000000)
else 
  mov r2.w, l(-1)
endif 
if_z r2.w
  mad r4.xy, r1.xxxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(5.33333349, 6.000000, 0.000000, 0.000000)
  mul r4.xy, r4.xyxx, l(0.11764706, 0.11764706, 0.000000, 0.000000)
  mov r2.w, x1[0].x
  mov r3.w, x0[0].x
  mad r4.x, r4.x, r4.x, -r2.w
  mad r2.w, r3.w, r4.x, r2.w
  mov x1[0].x, r2.w
  mad r4.xzw, r12.xxyz, r2.wwww, r9.xxyz
  lt r2.w, r1.z, r2.w
  mul r4.xz, r4.xxzx, cb1[44].xxyx
  ftoi r11.xy, r4.xzxx
  mov r11.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.x, r11.xyzw, t0.xyzw
  ge r4.z, r4.x, l(0.984375)
  mul r5.z, r4.x, l(1.01587307)
  mad r4.x, r4.x, l(64.000000), l(-63.000000)
  movc r4.x, r4.z, r4.x, r5.z
  max r4.x, r4.x, l(0.00000001)
  rcp r4.x, r4.x
  mov r4.z, x2[0].x
  movc r4.z, r2.w, r4.x, r4.z
  mov x2[0].x, r4.z
  add r4.x, r4.x, l(0.042000)
  mul r4.x, r4.x, r4.w
  lt r4.x, l(1.000000), r4.x
  and r4.x, r4.x, l(0x3f800000)
  mul r4.x, r3.w, r4.x
  movc r2.w, r2.w, r4.x, r3.w
  mov x0[0].x, r2.w
  mov r3.w, x1[1].x
  mov r4.x, x0[1].x
  mad r4.y, r4.y, r4.y, -r3.w
  mad r3.w, r4.x, r4.y, r3.w
  mov x1[1].x, r3.w
  mad r4.yzw, r2.xxyz, r3.wwww, r9.xxyz
  lt r3.w, r1.z, r3.w
  mul r4.yz, r4.yyzy, cb1[44].xxyx
  ftoi r11.xy, r4.yzyy
  mov r11.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.y, r11.xyzw, t0.yxzw
  ge r4.z, r4.y, l(0.984375)
  mul r5.z, r4.y, l(1.01587307)
  mad r4.y, r4.y, l(64.000000), l(-63.000000)
  movc r4.y, r4.z, r4.y, r5.z
  max r4.y, r4.y, l(0.00000001)
  rcp r4.y, r4.y
  mov r4.z, x2[1].x
  movc r4.z, r3.w, r4.y, r4.z
  mov x2[1].x, r4.z
  add r4.y, r4.y, l(0.042000)
  mul r4.y, r4.y, r4.w
  lt r4.y, l(1.000000), r4.y
  and r4.y, r4.y, l(0x3f800000)
  mul r4.y, r4.y, r4.x
  movc r3.w, r3.w, r4.y, r4.x
  mov x0[1].x, r3.w
  add r2.w, r2.w, r3.w
  eq r2.w, r2.w, l(0.000000)
else 
  mov r2.w, l(-1)
endif 
if_z r2.w
  mad r4.xy, r1.xxxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(6.33333349, 7.000000, 0.000000, 0.000000)
  mul r4.xy, r4.xyxx, l(0.11764706, 0.11764706, 0.000000, 0.000000)
  mov r2.w, x1[0].x
  mov r3.w, x0[0].x
  mad r4.x, r4.x, r4.x, -r2.w
  mad r2.w, r3.w, r4.x, r2.w
  mov x1[0].x, r2.w
  mad r4.xzw, r12.xxyz, r2.wwww, r9.xxyz
  lt r2.w, r1.z, r2.w
  mul r4.xz, r4.xxzx, cb1[44].xxyx
  ftoi r11.xy, r4.xzxx
  mov r11.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.x, r11.xyzw, t0.xyzw
  ge r4.z, r4.x, l(0.984375)
  mul r5.z, r4.x, l(1.01587307)
  mad r4.x, r4.x, l(64.000000), l(-63.000000)
  movc r4.x, r4.z, r4.x, r5.z
  max r4.x, r4.x, l(0.00000001)
  rcp r4.x, r4.x
  mov r4.z, x2[0].x
  movc r4.z, r2.w, r4.x, r4.z
  mov x2[0].x, r4.z
  add r4.x, r4.x, l(0.042000)
  mul r4.x, r4.x, r4.w
  lt r4.x, l(1.000000), r4.x
  and r4.x, r4.x, l(0x3f800000)
  mul r4.x, r3.w, r4.x
  movc r2.w, r2.w, r4.x, r3.w
  mov x0[0].x, r2.w
  mov r3.w, x1[1].x
  mov r4.x, x0[1].x
  mad r4.y, r4.y, r4.y, -r3.w
  mad r3.w, r4.x, r4.y, r3.w
  mov x1[1].x, r3.w
  mad r4.yzw, r2.xxyz, r3.wwww, r9.xxyz
  lt r3.w, r1.z, r3.w
  mul r4.yz, r4.yyzy, cb1[44].xxyx
  ftoi r11.xy, r4.yzyy
  mov r11.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.y, r11.xyzw, t0.yxzw
  ge r4.z, r4.y, l(0.984375)
  mul r5.z, r4.y, l(1.01587307)
  mad r4.y, r4.y, l(64.000000), l(-63.000000)
  movc r4.y, r4.z, r4.y, r5.z
  max r4.y, r4.y, l(0.00000001)
  rcp r4.y, r4.y
  mov r4.z, x2[1].x
  movc r4.z, r3.w, r4.y, r4.z
  mov x2[1].x, r4.z
  add r4.y, r4.y, l(0.042000)
  mul r4.y, r4.y, r4.w
  lt r4.y, l(1.000000), r4.y
  and r4.y, r4.y, l(0x3f800000)
  mul r4.y, r4.y, r4.x
  movc r3.w, r3.w, r4.y, r4.x
  mov x0[1].x, r3.w
  add r2.w, r2.w, r3.w
  eq r2.w, r2.w, l(0.000000)
else 
  mov r2.w, l(-1)
endif 
if_z r2.w
  mad r4.xy, r1.xxxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(7.33333349, 8.000000, 0.000000, 0.000000)
  mul r4.xy, r4.xyxx, l(0.11764706, 0.11764706, 0.000000, 0.000000)
  mov r1.x, x1[0].x
  mov r2.w, x0[0].x
  mad r3.w, r4.x, r4.x, -r1.x
  mad r1.x, r2.w, r3.w, r1.x
  mad r4.xzw, r12.xxyz, r1.xxxx, r9.xxyz
  lt r1.x, r1.z, r1.x
  mul r4.xz, r4.xxzx, cb1[44].xxyx
  ftoi r11.xy, r4.xzxx
  mov r11.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.w, r11.xyzw, t0.yzwx
  ge r4.x, r3.w, l(0.984375)
  mul r4.z, r3.w, l(1.01587307)
  mad r3.w, r3.w, l(64.000000), l(-63.000000)
  movc r3.w, r4.x, r3.w, r4.z
  max r3.w, r3.w, l(0.00000001)
  rcp r3.w, r3.w
  mov r4.x, x2[0].x
  movc r4.x, r1.x, r3.w, r4.x
  mov x2[0].x, r4.x
  add r3.w, r3.w, l(0.042000)
  mul r3.w, r3.w, r4.w
  lt r3.w, l(1.000000), r3.w
  and r3.w, r3.w, l(0x3f800000)
  mul r3.w, r2.w, r3.w
  movc r1.x, r1.x, r3.w, r2.w
  mov x0[0].x, r1.x
  mov r1.x, x1[1].x
  mov r2.w, x0[1].x
  mad r3.w, r4.y, r4.y, -r1.x
  mad r1.x, r2.w, r3.w, r1.x
  mad r2.xyz, r2.xyzx, r1.xxxx, r9.xyzx
  lt r1.x, r1.z, r1.x
  mul r2.xy, r2.xyxx, cb1[44].xyxx
  ftoi r4.xy, r2.xyxx
  mov r4.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r1.z, r4.xyzw, t0.yzxw
  ge r2.x, r1.z, l(0.984375)
  mul r2.y, r1.z, l(1.01587307)
  mad r1.z, r1.z, l(64.000000), l(-63.000000)
  movc r1.z, r2.x, r1.z, r2.y
  max r1.z, r1.z, l(0.00000001)
  rcp r1.z, r1.z
  mov r2.x, x2[1].x
  movc r2.x, r1.x, r1.z, r2.x
  mov x2[1].x, r2.x
  add r1.z, r1.z, l(0.042000)
  mul r1.z, r1.z, r2.z
  lt r1.z, l(1.000000), r1.z
  and r1.z, r1.z, l(0x3f800000)
  mul r1.z, r1.z, r2.w
  movc r1.x, r1.x, r1.z, r2.w
  mov x0[1].x, r1.x
endif 
mov r1.x, x2[0].x
add r1.x, -r8.z, r1.x
lt r1.x, l(3.000000), |r1.x|
mov r1.z, x0[0].x
mad r1.z, -r1.z, l(0.500000), l(1.000000)
movc r1.x, r1.x, l(0.500000), r1.z
mov r1.z, x2[1].x
add r1.z, -r8.z, r1.z
lt r1.z, l(3.000000), |r1.z|
mov r2.x, x0[1].x
mul r2.x, r2.x, l(0.500000)
movc r1.z, r1.z, l(-0.500000), -r2.x
add r1.x, r1.z, r1.x
add_sat r1.x, -r1.x, l(1.000000)
mad r1.z, r1.x, l(-2.000000), l(3.000000)
mul r1.x, r1.x, r1.x
mul r1.x, r1.x, r1.z
min r1.x, r1.x, r17.w
mul r1.x, r1.x, r17.z
mul r2.xyz, r36.xyzx, r1.xxxx
mad r4.xyz, r2.xyzx, r38.xyzx, r32.xyzx
mad r8.xyz, r2.xyzx, r39.xyzx, r33.xyzx
mad r9.xyz, r2.xyzx, r40.xyzx, r35.xyzx
mad r2.xyz, r2.xyzx, r41.xyzx, r34.xyzx
add r11.xyz, v2.xyzx, -v4.xyzx
mad r0.yzw, r0.yyzw, r1.wwww, r11.xxyz
dp3 r1.x, r0.yzwy, r0.yzwy
rsq r1.x, r1.x
mul r11.xyz, r0.yzwy, r1.xxxx
dp3_sat r5.x, r11.xyzx, r7.xyzx
dp3 r0.y, -r7.xyzx, r11.xyzx
add r0.y, r0.y, r0.y
mad r7.xyz, r11.xyzx, -r0.yyyy, -r7.xyzx
add r0.y, -r5.y, l(1.000000)
log r0.z, r0.y
mul r0.z, r0.z, l(1.750280)
exp r0.z, r0.z
add r12.y, -r0.z, l(1.000000)
add r0.z, -r1.y, l(1.000000)
dp3 r0.w, r11.xyzx, r10.yzwy
mad r0.w, r0.w, l(0.500000), l(0.500000)
mad r0.w, r0.w, l(63.000000), l(0.500000)
round_ni r0.w, r0.w
add r0.z, r0.w, r0.z
mul r12.x, r0.z, l(0.015625)
sample_l_indexable(texture2d)(float,float,float,float) r0.z, r12.xyxx, t29.yzxw, s7, l(0.000000)
mul r0.w, r0.y, l(5.000000)
mad r1.x, r0.y, l(5.000000), l(-2.500000)
mul_sat r1.x, r1.x, l(0.400000)
mul r1.x, r1.x, l(100.000000)
mad r1.yz, -r0.yyyy, l(0.000000, 10.000000, 5.000000, 0.000000), l(0.000000, 6.857410, 7.085000, 0.000000)
exp r1.y, r1.y
mul r1.y, r1.y, r5.x
mul r1.w, r0.y, r0.w
mad r1.z, -r1.w, l(2.015905), r1.z
exp r1.z, r1.z
mul r1.z, r1.z, r5.x
mul r1.yz, r1.yyzy, l(0.000000, 9.136810, 9.708090, 0.000000)
max r1.y, r1.z, r1.y
max r1.y, r1.y, l(1.268160)
mov r10.xy, l(0,0,0,0)
mov r12.w, l(0)
mov r13.yz, l(0,0,1.000000,0)
mov r14.xy, l(0,0,0,0)
mov r15.xy, l(0,0,0,0)
mov r16.xy, l(0,0,0,0)
mov r17.x, l(1.000000)
mov r19.xyzw, l(0,0,0,0)
mov r20.yzw, l(0,0,0,0)
mov r1.zw, l(0,0,0,0)
loop 
  uge r2.w, r1.w, cb2[0].y
  breakc_nz r2.w
  ushr r10.z, r1.w, l(5)
  iadd r12.xyz, r10.xyzx, r18.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r2.w, r12.xyzw, t7.yzwx
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r21.xyzw, r1.w, l(0), t15.wxyz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r22.xyzw, r1.w, l(16), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r23.xyzw, r1.w, l(32), t15.yxwz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r1.w, l(48), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r1.w, l(64), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r1.w, l(80), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r5.zw, r1.w, l(96), t15.xxxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r1.w, l(116), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r1.w, l(132), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r1.w, l(148), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r1.w, l(164), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r1.w, l(180), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r1.w, l(196), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xy, r1.w, l(212), t15.xyxx
  add r12.xyz, -r21.yzwy, v7.xyzx
  dp3 r3.w, r12.xyzx, r12.xyzx
  sqrt r3.w, r3.w
  ge r3.w, cb2[54].y, r3.w
  and r4.w, r27.y, l(0x0000ffff)
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r4.w, l(0), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r4.w, l(16), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r4.w, l(32), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r4.w, l(48), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r38.xyzw, r4.w, l(64), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r39.xyzw, r4.w, l(80), t16.xyzw
  dp3 r6.w, r34.xyzx, r12.xyzx
  add_sat r6.w, r34.w, r6.w
  dp3 r8.w, r35.xyzx, r12.xyzx
  add_sat r8.w, r35.w, r8.w
  mul r6.w, r6.w, r8.w
  dp3 r8.w, r36.xyzx, r12.xyzx
  add_sat r8.w, r36.w, r8.w
  mul r6.w, r6.w, r8.w
  dp3 r8.w, r37.xyzx, r12.xyzx
  add_sat r8.w, r37.w, r8.w
  mul r6.w, r6.w, r8.w
  dp3 r8.w, r38.xyzx, r12.xyzx
  add_sat r8.w, r38.w, r8.w
  mul r6.w, r6.w, r8.w
  dp3 r8.w, r39.xyzx, r12.xyzx
  add_sat r8.w, r39.w, r8.w
  mul r13.x, r6.w, r8.w
  and r6.w, r5.z, l(1)
  movc r10.zw, r6.wwww, r13.xxxy, r13.zzzx
  mov r34.xy, r27.zwzz
  mov r34.z, r28.z
  dp3 r6.w, r7.xyzx, r34.xyzx
  dp3 r8.w, r12.xyzx, r34.xyzx
  add r8.w, -r28.w, r8.w
  ge r9.w, r8.w, l(0.000000)
  max r8.w, r1.x, |r8.w|
  movc r8.w, r9.w, r8.w, -r8.w
  max r6.w, -r6.w, l(0.00000010)
  div r6.w, r8.w, r6.w
  min r6.w, |r6.w|, l(131072.000000)
  mov r28.z, r29.z
  dp3 r8.w, r7.xyzx, r28.xyzx
  dp3 r9.w, r12.xyzx, r28.xyzx
  add r9.w, -r29.w, r9.w
  ge r13.x, r9.w, l(0.000000)
  max r9.w, r1.x, |r9.w|
  movc r9.w, r13.x, r9.w, -r9.w
  max r8.w, -r8.w, l(0.00000010)
  div r8.w, r9.w, r8.w
  min r6.w, r6.w, |r8.w|
  mov r29.z, r30.z
  dp3 r8.w, r7.xyzx, r29.xyzx
  dp3 r9.w, r12.xyzx, r29.xyzx
  add r9.w, -r30.w, r9.w
  ge r13.x, r9.w, l(0.000000)
  max r9.w, r1.x, |r9.w|
  movc r9.w, r13.x, r9.w, -r9.w
  max r8.w, -r8.w, l(0.00000010)
  div r8.w, r9.w, r8.w
  min r6.w, r6.w, |r8.w|
  mov r30.z, r31.z
  dp3 r8.w, r7.xyzx, r30.xyzx
  dp3 r9.w, r12.xyzx, r30.xyzx
  add r9.w, -r31.w, r9.w
  ge r13.x, r9.w, l(0.000000)
  max r9.w, r1.x, |r9.w|
  movc r9.w, r13.x, r9.w, -r9.w
  max r8.w, -r8.w, l(0.00000010)
  div r8.w, r9.w, r8.w
  min r6.w, r6.w, |r8.w|
  mov r31.z, r32.x
  dp3 r8.w, r7.xyzx, r31.xyzx
  dp3 r9.w, r12.xyzx, r31.xyzx
  add r9.w, -r32.y, r9.w
  ge r13.x, r9.w, l(0.000000)
  max r9.w, r1.x, |r9.w|
  movc r9.w, r13.x, r9.w, -r9.w
  max r8.w, -r8.w, l(0.00000010)
  div r8.w, r9.w, r8.w
  min r6.w, r6.w, |r8.w|
  mov r33.zw, r32.zzzw
  dp3 r8.w, r7.zxyz, r33.xzwx
  dp3 r9.w, r12.zxyz, r33.xzwx
  add r9.w, -r33.y, r9.w
  ge r13.x, r9.w, l(0.000000)
  max r9.w, r1.x, |r9.w|
  movc r9.w, r13.x, r9.w, -r9.w
  max r8.w, -r8.w, l(0.00000010)
  div r8.w, r9.w, r8.w
  min r6.w, r6.w, |r8.w|
  mov r28.x, r24.w
  mov r28.yz, r25.zzwz
  add r28.xyz, r12.xyzx, r28.xyzx
  mad r28.xyz, r7.xyzx, r6.wwww, r28.xyzx
  dp3 r8.w, r28.xyzx, r28.xyzx
  sqrt r8.w, r8.w
  div r6.w, r6.w, r8.w
  add r6.w, r6.w, r6.w
  sqrt r6.w, r6.w
  mad r6.w, r0.y, l(5.000000), r6.w
  add r6.w, r6.w, l(-0.844800)
  mov r21.y, r22.z
  mov r21.z, r23.x
  dp3 r29.x, r28.xyzx, r21.xyzx
  mov r30.xy, r22.xwxx
  mov r30.z, r23.w
  dp3 r29.y, r28.xyzx, r30.xyzx
  mov r23.x, r22.y
  dp3 r29.z, r28.xyzx, r23.xyzx
  ubfe r13.xw, l(6, 0, 0, 9), l(25, 0, 0, 16), r27.yyyy
  utof r29.w, r13.w
  sample_l_indexable(texturecubearray)(float,float,float,float) r22.xyz, r29.xyzw, t8.xyzw, s2, r6.w
  and r27.yzw, r22.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
  ieq r27.yzw, r27.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
  or r6.w, r27.z, r27.y
  or r6.w, r27.w, r6.w
  movc r22.xyz, r6.wwww, l(1.000000,1.000000,0,0), r22.xyzx
  dp3 r28.x, r12.xyzx, r21.xyzx
  dp3 r28.y, r12.xyzx, r30.xyzx
  dp3 r28.z, r12.xyzx, r23.xyzx
  mad_sat r24.xyz, r28.xyzx, r24.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mov r25.z, r26.x
  mad r24.xyz, r24.xyzx, r25.xyzx, r26.yzwy
  dp3 r29.x, r11.xyzx, r21.xyzx
  dp3 r29.y, r11.xyzx, r30.xyzx
  dp3 r29.z, r11.xyzx, r23.xyzx
  lt r21.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r29.xyzx
  movc r14.z, r21.x, l(0), l(0.500000)
  add r23.xyz, r14.xyzx, r24.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r23.xyz, r23.xyzx, t17.xyzw, s4, l(0.000000)
  movc r15.z, r21.y, l(0), l(0.500000)
  add r21.xyw, r15.xyxz, r24.xyxz
  sample_l_indexable(texture3d)(float,float,float,float) r21.xyw, r21.xywx, t18.xywz, s4, l(0.000000)
  movc r16.z, r21.z, l(0), l(0.500000)
  add r24.xyz, r16.xyzx, r24.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r24.xyz, r24.xyzx, t19.xyzw, s4, l(0.000000)
  mul r25.xyz, r29.xyzx, r29.xyzx
  sample_l_indexable(texturecubearray)(float,float,float,float) r26.xyz, r29.xyzw, t8.xyzw, s2, l(6.000000)
  and r27.yzw, r26.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
  ieq r27.yzw, r27.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
  or r6.w, r27.z, r27.y
  or r6.w, r27.w, r6.w
  movc r26.xyz, r6.wwww, l(1.000000,1.000000,0,0), r26.xyzx
  mov r28.xyzw, r19.xyzw
  mov r27.yzw, r20.yyzw
  mov r6.w, r1.z
  mov r8.w, r2.w
  loop 
    breakc_z r8.w
    firstbit_lo r9.w, r8.w
    ishl r9.w, l(1), r9.w
    and r13.w, r8.w, r9.w
    if_nz r13.w
      not r9.w, r9.w
      and r8.w, r8.w, r9.w
      if_nz r3.w
        mov r9.w, r5.z
        mov r29.xy, r10.zwzz
        mov r13.w, l(1)
        loop 
          ige r14.z, r13.w, r13.x
          breakc_nz r14.z
          iadd r14.z, r4.w, r13.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r14.z, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r14.z, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r14.z, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r14.z, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r14.z, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r14.z, l(80), t16.xyzw
          dp3 r14.z, r30.xyzx, r12.xyzx
          add_sat r14.z, r30.w, r14.z
          mul r14.z, r14.z, r29.x
          dp3 r14.w, r31.xyzx, r12.xyzx
          add_sat r14.w, r31.w, r14.w
          mul r14.z, r14.w, r14.z
          dp3 r14.w, r32.xyzx, r12.xyzx
          add_sat r14.w, r32.w, r14.w
          mul r14.z, r14.w, r14.z
          dp3 r14.w, r33.xyzx, r12.xyzx
          add_sat r14.w, r33.w, r14.w
          mul r14.z, r14.w, r14.z
          dp3 r14.w, r34.xyzx, r12.xyzx
          add_sat r14.w, r34.w, r14.w
          mul r14.z, r14.w, r14.z
          dp3 r14.w, r35.xyzx, r12.xyzx
          add_sat r14.w, r35.w, r14.w
          mul r29.x, r14.w, r14.z
          ushr r15.z, r9.w, l(2)
          ubfe r15.w, l(1), l(2), r9.w
          and r16.z, r15.z, l(2)
          max r16.w, r29.x, r29.y
          mad r14.z, -r14.z, r14.w, l(1.000000)
          mul r14.z, r14.z, r29.y
          movc r17.y, r16.z, r14.z, r16.w
          movc r29.xy, r15.wwww, r29.xyxx, r17.xyxx
          iadd r13.w, r13.w, l(1)
          mov r9.w, r15.z
        endloop 
        mov_sat r29.y, r29.y
        mul r9.w, r5.w, r29.y
        lt r13.w, l(0.000000), r9.w
        if_nz r13.w
          mad r30.z, r29.y, r5.w, r27.w
          mul r9.w, r27.x, r9.w
          mul r17.yzw, r9.wwww, r25.xxyz
          mul r29.xzw, r17.zzzz, r21.xxyw
          mad r29.xzw, r23.xxyz, r17.yyyy, r29.xxzw
          mad r17.yzw, r24.xxyz, r17.wwww, r29.xxzw
          mul r29.xzw, r26.xxyz, r17.yyzw
          dp3 r13.w, r29.xzwx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r31.xyz, r17.yzwy, r26.xyzx, r28.xyzx
          mul r14.z, r1.y, r13.w
          mul r17.yzw, r9.wwww, r22.xxyz
          dp3 r9.w, r17.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r9.w, r1.y, r13.w, r9.w
          div r9.w, r14.z, r9.w
          mov r32.x, r28.w
          mov r32.yz, r27.yyzy
          mad r30.xyw, r17.zwzy, r9.wwww, r32.yzyx
          mov r31.w, r30.w
        else 
          mov r31.xyzw, r28.xyzw
          mov r30.xyz, r27.yzwy
        endif 
        mov r6.w, l(-1)
        mov r28.xyzw, r31.xyzw
        mov r27.yzw, r30.xxyz
        break 
      endif 
    endif 
  endloop 
  if_nz r6.w
    mov r19.xyzw, r28.xyzw
    mov r20.yzw, r27.yyzw
    mov r1.z, l(-1)
    break 
  endif 
  iadd r1.w, r1.w, l(32)
  mov r19.xyzw, r28.xyzw
  mov r20.yzw, r27.yyzw
  mov r1.z, r6.w
endloop 
if_z r1.z
  iadd r1.z, cb2[0].y, -cb2[58].x
  and r1.w, r1.z, l(-32)
  iadd r2.w, -r1.w, r1.z
  and r3.w, cb2[0].y, l(-32)
  iadd r4.w, -r3.w, cb2[0].y
  mov r10.xy, l(0,0,0,0)
  mov r12.w, l(0)
  mov r13.yz, l(0,0,1.000000,0)
  mov r14.xy, l(0,0,0,0)
  mov r15.x, l(1.000000)
  mov r16.xy, l(0,0,0,0)
  mov r17.xy, l(0,0,0,0)
  mov r21.xyzw, r19.xyzw
  mov r22.yzw, r20.yyzw
  mov r5.z, r1.w
  loop 
    uge r5.w, r5.z, cb2[0].y
    breakc_nz r5.w
    ushr r10.z, r5.z, l(5)
    iadd r12.xyz, r10.xyzx, r18.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r5.w, r12.xyzw, t7.yzwx
    ieq r6.w, r1.w, r5.z
    bfi r8.w, r2.w, l(0), l(0), r5.w
    movc r5.w, r6.w, r8.w, r5.w
    ieq r6.w, r3.w, r5.z
    ubfe r8.w, r4.w, l(0), r5.w
    movc r5.w, r6.w, r8.w, r5.w
    iadd r6.w, r5.z, cb2[0].x
    mov r23.xyzw, r21.xyzw
    mov r24.xyz, r22.yzwy
    mov r8.w, r5.w
    loop 
      breakc_z r8.w
      firstbit_lo r9.w, r8.w
      ishl r10.z, l(1), r9.w
      and r10.w, r8.w, r10.z
      if_nz r10.w
        xor r8.w, r8.w, r10.z
        iadd r10.z, r6.w, r9.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r25.xyzw, r10.z, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r12.xy, r10.z, l(16), t11.xyxx
        add r25.xyz, r25.xyzx, -v7.xyzx
        mov r12.z, r25.w
        lt r12.xyz, |r25.xyzx|, r12.zxyz
        and r10.z, r12.y, r12.x
        and r10.z, r12.z, r10.z
        if_nz r10.z
          iadd r9.w, r5.z, r9.w
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r9.w, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r10.zw, r9.w, l(96), t15.xxxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r9.w, l(116), t15.zwxy
          add r12.xyz, -r25.yzwy, v7.xyzx
          and r13.w, r26.w, l(0x0000ffff)
          ubfe r14.w, l(6), l(25), r26.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r13.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r13.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r13.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r13.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r13.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r13.w, l(80), t16.xyzw
          dp3 r15.z, r27.xyzx, r12.xyzx
          add_sat r15.z, r27.w, r15.z
          dp3 r15.w, r28.xyzx, r12.xyzx
          add_sat r15.w, r28.w, r15.w
          mul r15.z, r15.w, r15.z
          dp3 r15.w, r29.xyzx, r12.xyzx
          add_sat r15.w, r29.w, r15.w
          mul r15.z, r15.w, r15.z
          dp3 r15.w, r30.xyzx, r12.xyzx
          add_sat r15.w, r30.w, r15.w
          mul r15.z, r15.w, r15.z
          dp3 r15.w, r31.xyzx, r12.xyzx
          add_sat r15.w, r31.w, r15.w
          mul r15.z, r15.w, r15.z
          dp3 r15.w, r32.xyzx, r12.xyzx
          add_sat r15.w, r32.w, r15.w
          mul r13.x, r15.w, r15.z
          and r15.z, r10.z, l(1)
          movc r15.zw, r15.zzzz, r13.xxxy, r13.zzzx
          mov r13.x, r10.z
          mov r27.xy, r15.zwzz
          mov r16.w, l(1)
          loop 
            ige r17.w, r16.w, r14.w
            breakc_nz r17.w
            iadd r17.w, r13.w, r16.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r17.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r17.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r17.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r17.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r17.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r17.w, l(80), t16.xyzw
            dp3 r17.w, r28.xyzx, r12.xyzx
            add_sat r17.w, r28.w, r17.w
            mul r17.w, r17.w, r27.x
            dp3 r18.w, r29.xyzx, r12.xyzx
            add_sat r18.w, r29.w, r18.w
            mul r17.w, r17.w, r18.w
            dp3 r18.w, r30.xyzx, r12.xyzx
            add_sat r18.w, r30.w, r18.w
            mul r17.w, r17.w, r18.w
            dp3 r18.w, r31.xyzx, r12.xyzx
            add_sat r18.w, r31.w, r18.w
            mul r17.w, r17.w, r18.w
            dp3 r18.w, r32.xyzx, r12.xyzx
            add_sat r18.w, r32.w, r18.w
            mul r17.w, r17.w, r18.w
            dp3 r18.w, r33.xyzx, r12.xyzx
            add_sat r18.w, r33.w, r18.w
            mul r27.x, r17.w, r18.w
            ushr r25.w, r13.x, l(2)
            ubfe r27.z, l(1), l(2), r13.x
            and r27.w, r25.w, l(2)
            max r28.x, r27.x, r27.y
            mad r17.w, -r17.w, r18.w, l(1.000000)
            mul r17.w, r17.w, r27.y
            movc r15.y, r27.w, r17.w, r28.x
            movc r27.xy, r27.zzzz, r27.xyxx, r15.xyxx
            iadd r16.w, r16.w, l(1)
            mov r13.x, r25.w
          endloop 
          mov_sat r27.y, r27.y
          mul r10.z, r10.w, r27.y
          lt r13.x, l(0.000000), r10.z
          if_nz r13.x
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r9.w, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r9.w, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r9.w, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r9.w, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r9.w, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r9.w, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r9.w, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r9.w, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r9.w, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r9.w, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xy, r9.w, l(212), t15.xyxx
            mad r24.z, r27.y, r10.w, r24.z
            mul r9.w, r26.z, r10.z
            mov r26.z, r33.z
            dp3 r10.z, r7.xyzx, r26.xyzx
            dp3 r10.w, r12.xyzx, r26.xyzx
            add r10.w, -r33.w, r10.w
            ge r13.x, r10.w, l(0.000000)
            max r10.w, r1.x, |r10.w|
            movc r10.w, r13.x, r10.w, -r10.w
            max r10.z, -r10.z, l(0.00000010)
            div r10.z, r10.w, r10.z
            min r10.z, |r10.z|, l(131072.000000)
            mov r33.z, r34.z
            dp3 r10.w, r7.xyzx, r33.xyzx
            dp3 r13.x, r12.xyzx, r33.xyzx
            add r13.x, -r34.w, r13.x
            ge r13.w, r13.x, l(0.000000)
            max r13.x, r1.x, |r13.x|
            movc r13.x, r13.w, r13.x, -r13.x
            max r10.w, -r10.w, l(0.00000010)
            div r10.w, r13.x, r10.w
            min r10.z, |r10.w|, r10.z
            mov r34.z, r35.z
            dp3 r10.w, r7.xyzx, r34.xyzx
            dp3 r13.x, r12.xyzx, r34.xyzx
            add r13.x, -r35.w, r13.x
            ge r13.w, r13.x, l(0.000000)
            max r13.x, r1.x, |r13.x|
            movc r13.x, r13.w, r13.x, -r13.x
            max r10.w, -r10.w, l(0.00000010)
            div r10.w, r13.x, r10.w
            min r10.z, |r10.w|, r10.z
            mov r35.z, r36.z
            dp3 r10.w, r7.xyzx, r35.xyzx
            dp3 r13.x, r12.xyzx, r35.xyzx
            add r13.x, -r36.w, r13.x
            ge r13.w, r13.x, l(0.000000)
            max r13.x, r1.x, |r13.x|
            movc r13.x, r13.w, r13.x, -r13.x
            max r10.w, -r10.w, l(0.00000010)
            div r10.w, r13.x, r10.w
            min r10.z, |r10.w|, r10.z
            mov r36.z, r37.x
            dp3 r10.w, r7.xyzx, r36.xyzx
            dp3 r13.x, r12.xyzx, r36.xyzx
            add r13.x, -r37.y, r13.x
            ge r13.w, r13.x, l(0.000000)
            max r13.x, r1.x, |r13.x|
            movc r13.x, r13.w, r13.x, -r13.x
            max r10.w, -r10.w, l(0.00000010)
            div r10.w, r13.x, r10.w
            min r10.z, |r10.w|, r10.z
            mov r38.zw, r37.zzzw
            dp3 r10.w, r7.zxyz, r38.xzwx
            dp3 r13.x, r12.zxyz, r38.xzwx
            add r13.x, -r38.y, r13.x
            ge r13.w, r13.x, l(0.000000)
            max r13.x, r1.x, |r13.x|
            movc r13.x, r13.w, r13.x, -r13.x
            max r10.w, -r10.w, l(0.00000010)
            div r10.w, r13.x, r10.w
            min r10.z, |r10.w|, r10.z
            mov r26.x, r30.w
            mov r26.yz, r31.zzwz
            add r15.yzw, r12.xxyz, r26.xxyz
            mad r15.yzw, r7.xxyz, r10.zzzz, r15.yyzw
            dp3 r10.w, r15.yzwy, r15.yzwy
            sqrt r10.w, r10.w
            div r10.z, r10.z, r10.w
            add r10.z, r10.z, r10.z
            sqrt r10.z, r10.z
            mad r10.z, r0.y, l(5.000000), r10.z
            add r10.z, r10.z, l(-0.844800)
            mov r25.y, r28.z
            mov r25.z, r29.x
            dp3 r33.x, r15.yzwy, r25.xyzx
            mov r26.xy, r28.xwxx
            mov r26.z, r29.w
            dp3 r33.y, r15.yzwy, r26.xyzx
            mov r29.x, r28.y
            dp3 r33.z, r15.yzwy, r29.xyzx
            ubfe r10.w, l(9), l(16), r26.w
            utof r33.w, r10.w
            sample_l_indexable(texturecubearray)(float,float,float,float) r15.yzw, r33.xyzw, t8.wxyz, s2, r10.z
            and r27.xzw, r15.yyzw, l(0x7fffffff, 0, 0x7fffffff, 0x7fffffff)
            ieq r27.xzw, r27.xxzw, l(0x7f800000, 0, 0x7f800000, 0x7f800000)
            or r10.z, r27.z, r27.x
            or r10.z, r27.w, r10.z
            movc r15.yzw, r10.zzzz, l(0,1.000000,1.000000,0), r15.yyzw
            dp3 r28.x, r12.xyzx, r25.xyzx
            dp3 r28.y, r12.xyzx, r26.xyzx
            dp3 r28.z, r12.xyzx, r29.xyzx
            mad_sat r12.xyz, r28.xyzx, r30.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
            mov r31.z, r32.x
            mad r12.xyz, r12.xyzx, r31.xyzx, r32.yzwy
            dp3 r33.x, r11.xyzx, r25.xyzx
            dp3 r33.y, r11.xyzx, r26.xyzx
            dp3 r33.z, r11.xyzx, r29.xyzx
            lt r25.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r33.xyzx
            movc r14.z, r25.x, l(0), l(0.500000)
            add r26.xyz, r12.xyzx, r14.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r26.xyz, r26.xyzx, t17.xyzw, s4, l(0.000000)
            mul r27.xzw, r33.xxyz, r33.xxyz
            mul r27.xzw, r9.wwww, r27.xxzw
            movc r16.z, r25.y, l(0), l(0.500000)
            add r25.xyw, r12.xyxz, r16.xyxz
            sample_l_indexable(texture3d)(float,float,float,float) r25.xyw, r25.xywx, t18.xywz, s4, l(0.000000)
            mul r25.xyw, r27.zzzz, r25.xyxw
            mad r25.xyw, r26.xyxz, r27.xxxx, r25.xyxw
            movc r17.z, r25.z, l(0), l(0.500000)
            add r12.xyz, r12.xyzx, r17.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r12.xyz, r12.xyzx, t19.xyzw, s4, l(0.000000)
            mad r12.xyz, r12.xyzx, r27.wwww, r25.xywx
            sample_l_indexable(texturecubearray)(float,float,float,float) r25.xyz, r33.xyzw, t8.xyzw, s2, l(6.000000)
            and r26.xyz, r25.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
            ieq r26.xyz, r26.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
            or r10.z, r26.y, r26.x
            or r10.z, r26.z, r10.z
            movc r25.xyz, r10.zzzz, l(1.000000,1.000000,0,0), r25.xyzx
            mul r26.xyz, r12.xyzx, r25.xyzx
            dp3 r10.z, r26.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r23.xyz, r12.xyzx, r25.xyzx, r23.xyzx
            mul r10.w, r1.y, r10.z
            mul r12.xyz, r9.wwww, r15.yzwy
            dp3 r9.w, r12.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r9.w, r1.y, r10.z, r9.w
            div r9.w, r10.w, r9.w
            mov r25.x, r23.w
            mov r25.yz, r24.xxyx
            mad r24.xyw, r12.yzyx, r9.wwww, r25.yzyx
            mov r23.w, r24.w
          endif 
        endif 
      endif 
    endloop 
    mov r21.xyzw, r23.xyzw
    mov r22.yzw, r24.xxyz
    iadd r5.z, r5.z, l(32)
  endloop 
  lt r3.w, r22.w, l(1.000000)
  if_nz r3.w
    mov r10.xy, l(0,0,0,0)
    mov r12.w, l(0)
    mov r13.yz, l(0,0,1.000000,0)
    mov r14.xy, l(0,0,0,0)
    mov r15.x, l(1.000000)
    mov r16.xy, l(0,0,0,0)
    mov r17.xy, l(0,0,0,0)
    mov r23.x, r21.w
    mov r23.yzw, r22.yyzw
    mov r24.xyz, r21.xyzx
    mov r3.w, r22.w
    mov r4.w, l(0)
    loop 
      uge r5.z, r4.w, r1.z
      breakc_nz r5.z
      ushr r10.z, r4.w, l(5)
      iadd r12.xyz, r10.xyzx, r18.xyzx
      ld_indexable(texture2darray)(uint,uint,uint,uint) r5.z, r12.xyzw, t7.yzxw
      ieq r5.w, r1.w, r4.w
      ubfe r6.w, r2.w, l(0), r5.z
      movc r5.z, r5.w, r6.w, r5.z
      iadd r5.w, r4.w, cb2[0].x
      mov r25.xyzw, r23.xyzw
      mov r12.xyz, r24.xyzx
      mov r6.w, r3.w
      mov r8.w, r5.z
      loop 
        breakc_z r8.w
        firstbit_lo r9.w, r8.w
        ishl r10.z, l(1), r9.w
        and r10.w, r8.w, r10.z
        if_nz r10.w
          xor r8.w, r8.w, r10.z
          iadd r10.z, r5.w, r9.w
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r26.xyzw, r10.z, l(0), t11.xyzw
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r27.xy, r10.z, l(16), t11.xyxx
          add r26.xyz, r26.xyzx, -v7.xyzx
          mov r27.z, r26.w
          lt r26.xyz, |r26.xyzx|, r27.zxyz
          and r10.z, r26.y, r26.x
          and r10.z, r26.z, r10.z
          if_nz r10.z
            iadd r9.w, r4.w, r9.w
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r9.w, l(0), t15.wxyz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r10.zw, r9.w, l(96), t15.xxxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r9.w, l(116), t15.zwxy
            add r28.xyz, -r26.yzwy, v7.xyzx
            and r13.w, r27.w, l(0x0000ffff)
            ubfe r14.w, l(6), l(25), r27.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r13.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r13.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r13.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r13.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r13.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r13.w, l(80), t16.xyzw
            dp3 r15.z, r29.xyzx, r28.xyzx
            add_sat r15.z, r29.w, r15.z
            dp3 r15.w, r30.xyzx, r28.xyzx
            add_sat r15.w, r30.w, r15.w
            mul r15.z, r15.w, r15.z
            dp3 r15.w, r31.xyzx, r28.xyzx
            add_sat r15.w, r31.w, r15.w
            mul r15.z, r15.w, r15.z
            dp3 r15.w, r32.xyzx, r28.xyzx
            add_sat r15.w, r32.w, r15.w
            mul r15.z, r15.w, r15.z
            dp3 r15.w, r33.xyzx, r28.xyzx
            add_sat r15.w, r33.w, r15.w
            mul r15.z, r15.w, r15.z
            dp3 r15.w, r34.xyzx, r28.xyzx
            add_sat r15.w, r34.w, r15.w
            mul r13.x, r15.w, r15.z
            and r15.z, r10.z, l(1)
            movc r15.zw, r15.zzzz, r13.xxxy, r13.zzzx
            mov r13.x, r10.z
            mov r29.xy, r15.zwzz
            mov r16.w, l(1)
            loop 
              ige r17.w, r16.w, r14.w
              breakc_nz r17.w
              iadd r17.w, r13.w, r16.w
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r17.w, l(0), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r17.w, l(16), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r17.w, l(32), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r17.w, l(48), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r17.w, l(64), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r17.w, l(80), t16.xyzw
              dp3 r17.w, r30.xyzx, r28.xyzx
              add_sat r17.w, r30.w, r17.w
              mul r17.w, r17.w, r29.x
              dp3 r18.w, r31.xyzx, r28.xyzx
              add_sat r18.w, r31.w, r18.w
              mul r17.w, r17.w, r18.w
              dp3 r18.w, r32.xyzx, r28.xyzx
              add_sat r18.w, r32.w, r18.w
              mul r17.w, r17.w, r18.w
              dp3 r18.w, r33.xyzx, r28.xyzx
              add_sat r18.w, r33.w, r18.w
              mul r17.w, r17.w, r18.w
              dp3 r18.w, r34.xyzx, r28.xyzx
              add_sat r18.w, r34.w, r18.w
              mul r17.w, r17.w, r18.w
              dp3 r18.w, r35.xyzx, r28.xyzx
              add_sat r18.w, r35.w, r18.w
              mul r29.x, r17.w, r18.w
              ushr r20.w, r13.x, l(2)
              ubfe r24.w, l(1), l(2), r13.x
              and r26.w, r20.w, l(2)
              max r28.w, r29.x, r29.y
              mad r17.w, -r17.w, r18.w, l(1.000000)
              mul r17.w, r17.w, r29.y
              movc r15.y, r26.w, r17.w, r28.w
              movc r29.xy, r24.wwww, r29.xyxx, r15.xyxx
              iadd r16.w, r16.w, l(1)
              mov r13.x, r20.w
            endloop 
            add_sat r10.z, -r6.w, r29.y
            mul r13.x, r10.w, r10.z
            lt r13.w, l(0.000000), r13.x
            if_nz r13.w
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r9.w, l(16), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r9.w, l(32), t15.yxwz
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r9.w, l(48), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r9.w, l(64), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r9.w, l(80), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r9.w, l(132), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r9.w, l(148), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r9.w, l(164), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r9.w, l(180), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xyzw, r9.w, l(196), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r40.xy, r9.w, l(212), t15.xyxx
              mad r25.w, r10.z, r10.w, r25.w
              mul r9.w, r27.z, r13.x
              mov r27.z, r35.z
              dp3 r10.z, r7.xyzx, r27.xyzx
              dp3 r10.w, r28.xyzx, r27.xyzx
              add r10.w, -r35.w, r10.w
              ge r13.x, r10.w, l(0.000000)
              max r10.w, r1.x, |r10.w|
              movc r10.w, r13.x, r10.w, -r10.w
              max r10.z, -r10.z, l(0.00000010)
              div r10.z, r10.w, r10.z
              min r10.z, |r10.z|, l(131072.000000)
              mov r35.z, r36.z
              dp3 r10.w, r7.xyzx, r35.xyzx
              dp3 r13.x, r28.xyzx, r35.xyzx
              add r13.x, -r36.w, r13.x
              ge r13.w, r13.x, l(0.000000)
              max r13.x, r1.x, |r13.x|
              movc r13.x, r13.w, r13.x, -r13.x
              max r10.w, -r10.w, l(0.00000010)
              div r10.w, r13.x, r10.w
              min r10.z, |r10.w|, r10.z
              mov r36.z, r37.z
              dp3 r10.w, r7.xyzx, r36.xyzx
              dp3 r13.x, r28.xyzx, r36.xyzx
              add r13.x, -r37.w, r13.x
              ge r13.w, r13.x, l(0.000000)
              max r13.x, r1.x, |r13.x|
              movc r13.x, r13.w, r13.x, -r13.x
              max r10.w, -r10.w, l(0.00000010)
              div r10.w, r13.x, r10.w
              min r10.z, |r10.w|, r10.z
              mov r37.z, r38.z
              dp3 r10.w, r7.xyzx, r37.xyzx
              dp3 r13.x, r28.xyzx, r37.xyzx
              add r13.x, -r38.w, r13.x
              ge r13.w, r13.x, l(0.000000)
              max r13.x, r1.x, |r13.x|
              movc r13.x, r13.w, r13.x, -r13.x
              max r10.w, -r10.w, l(0.00000010)
              div r10.w, r13.x, r10.w
              min r10.z, |r10.w|, r10.z
              mov r38.z, r39.x
              dp3 r10.w, r7.xyzx, r38.xyzx
              dp3 r13.x, r28.xyzx, r38.xyzx
              add r13.x, -r39.y, r13.x
              ge r13.w, r13.x, l(0.000000)
              max r13.x, r1.x, |r13.x|
              movc r13.x, r13.w, r13.x, -r13.x
              max r10.w, -r10.w, l(0.00000010)
              div r10.w, r13.x, r10.w
              min r10.z, |r10.w|, r10.z
              mov r40.zw, r39.zzzw
              dp3 r10.w, r7.zxyz, r40.xzwx
              dp3 r13.x, r28.zxyz, r40.xzwx
              add r13.x, -r40.y, r13.x
              ge r13.w, r13.x, l(0.000000)
              max r13.x, r1.x, |r13.x|
              movc r13.x, r13.w, r13.x, -r13.x
              max r10.w, -r10.w, l(0.00000010)
              div r10.w, r13.x, r10.w
              min r10.z, |r10.w|, r10.z
              mov r27.x, r32.w
              mov r27.yz, r33.zzwz
              add r15.yzw, r28.xxyz, r27.xxyz
              mad r15.yzw, r7.xxyz, r10.zzzz, r15.yyzw
              dp3 r10.w, r15.yzwy, r15.yzwy
              sqrt r10.w, r10.w
              div r10.z, r10.z, r10.w
              add r10.z, r10.z, r10.z
              sqrt r10.z, r10.z
              mad r10.z, r0.y, l(5.000000), r10.z
              add r10.z, r10.z, l(-0.844800)
              mov r26.y, r30.z
              mov r26.z, r31.x
              dp3 r35.x, r15.yzwy, r26.xyzx
              mov r27.xy, r30.xwxx
              mov r27.z, r31.w
              dp3 r35.y, r15.yzwy, r27.xyzx
              mov r31.x, r30.y
              dp3 r35.z, r15.yzwy, r31.xyzx
              ubfe r10.w, l(9), l(16), r27.w
              utof r35.w, r10.w
              sample_l_indexable(texturecubearray)(float,float,float,float) r15.yzw, r35.xyzw, t8.wxyz, s2, r10.z
              and r29.xzw, r15.yyzw, l(0x7fffffff, 0, 0x7fffffff, 0x7fffffff)
              ieq r29.xzw, r29.xxzw, l(0x7f800000, 0, 0x7f800000, 0x7f800000)
              or r10.z, r29.z, r29.x
              or r10.z, r29.w, r10.z
              movc r15.yzw, r10.zzzz, l(0,1.000000,1.000000,0), r15.yyzw
              dp3 r30.x, r28.xyzx, r26.xyzx
              dp3 r30.y, r28.xyzx, r27.xyzx
              dp3 r30.z, r28.xyzx, r31.xyzx
              mad_sat r28.xyz, r30.xyzx, r32.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
              mov r33.z, r34.x
              mad r28.xyz, r28.xyzx, r33.xyzx, r34.yzwy
              dp3 r35.x, r11.xyzx, r26.xyzx
              dp3 r35.y, r11.xyzx, r27.xyzx
              dp3 r35.z, r11.xyzx, r31.xyzx
              lt r26.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r35.xyzx
              movc r14.z, r26.x, l(0), l(0.500000)
              add r27.xyz, r14.xyzx, r28.xyzx
              sample_l_indexable(texture3d)(float,float,float,float) r27.xyz, r27.xyzx, t17.xyzw, s4, l(0.000000)
              mul r29.xzw, r35.xxyz, r35.xxyz
              mul r29.xzw, r9.wwww, r29.xxzw
              movc r16.z, r26.y, l(0), l(0.500000)
              add r26.xyw, r16.xyxz, r28.xyxz
              sample_l_indexable(texture3d)(float,float,float,float) r26.xyw, r26.xywx, t18.xywz, s4, l(0.000000)
              mul r26.xyw, r29.zzzz, r26.xyxw
              mad r26.xyw, r27.xyxz, r29.xxxx, r26.xyxw
              movc r17.z, r26.z, l(0), l(0.500000)
              add r27.xyz, r17.xyzx, r28.xyzx
              sample_l_indexable(texture3d)(float,float,float,float) r27.xyz, r27.xyzx, t19.xyzw, s4, l(0.000000)
              mad r26.xyz, r27.xyzx, r29.wwww, r26.xywx
              sample_l_indexable(texturecubearray)(float,float,float,float) r27.xyz, r35.xyzw, t8.xyzw, s2, l(6.000000)
              and r28.xyz, r27.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
              ieq r28.xyz, r28.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
              or r10.z, r28.y, r28.x
              or r10.z, r28.z, r10.z
              movc r27.xyz, r10.zzzz, l(1.000000,1.000000,0,0), r27.xyzx
              mul r28.xyz, r26.xyzx, r27.xyzx
              dp3 r10.z, r28.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
              mad r12.xyz, r26.xyzx, r27.xyzx, r12.xyzx
              mul r10.w, r1.y, r10.z
              mul r15.yzw, r9.wwww, r15.yyzw
              dp3 r9.w, r15.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
              mad r9.w, r1.y, r10.z, r9.w
              div r9.w, r10.w, r9.w
              mad r25.xyz, r15.yzwy, r9.wwww, r25.xyzx
            endif 
          endif 
        endif 
      endloop 
      mov r23.xyzw, r25.xyzw
      mov r24.xyz, r12.xyzx
      iadd r4.w, r4.w, l(32)
    endloop 
    mov r22.xyzw, r23.zxyw
    mov r21.xyz, r24.xyzx
    mov r22.xyzw, r22.yzxw
  else 
    mov r22.x, r21.w
  endif 
  max r0.y, r22.w, l(1.000000)
  rcp r0.y, r0.y
  mov_sat r22.w, r22.w
  mul r19.xyz, r0.yyyy, r21.xyzx
  mul r20.xyz, r0.yyyy, r22.xyzx
  lt r1.x, r22.w, l(0.990000)
  if_nz r1.x
    add r1.x, -r22.w, l(1.000000)
    mul r1.y, r1.x, cb2[19].x
    add r10.xyz, v7.xyzx, -cb2[35].xyzx
    mul r12.x, r10.x, cb2[35].w
    mul r12.yz, r10.yyzy, cb2[36].xxyx
    add_sat r10.xyz, r12.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    mul r12.xy, r10.xyxx, cb2[36].zwzz
    mul r12.z, r10.z, cb2[37].x
    add r10.xyz, r12.xyzx, cb2[37].yzwy
    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
    movc r12.xyz, r12.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
    mov r12.w, l(0)
    add r13.xyz, r10.xyzx, r12.wwxw
    sample_l_indexable(texture3d)(float,float,float,float) r13.xyz, r13.xyzx, t17.xyzw, s4, l(0.000000)
    mul r14.xyz, r11.xyzx, r11.xyzx
    mul r1.yzw, r1.yyyy, r14.xxyz
    add r14.xyz, r10.xyzx, r12.wwyw
    sample_l_indexable(texture3d)(float,float,float,float) r14.xyz, r14.xyzx, t18.xyzw, s4, l(0.000000)
    mul r14.xyz, r1.zzzz, r14.xyzx
    mad r13.xyz, r13.xyzx, r1.yyyy, r14.xyzx
    add r10.xyz, r10.xyzx, r12.wwzw
    sample_l_indexable(texture3d)(float,float,float,float) r10.xyz, r10.xyzx, t19.xyzw, s4, l(0.000000)
    mad r1.yzw, r10.xxyz, r1.wwww, r13.xxyz
    mov r11.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r10.xyz, r11.xyzw, t8.xyzw, s2, l(6.000000)
    mul r1.yzw, r1.yyzw, r10.xxyz
    dp3 r2.w, r1.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
    mad r19.xyz, r21.xyzx, r0.yyyy, r1.yzwy
    mov r7.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r1.yzw, r7.xyzw, t8.wxyz, s2, r0.w
    mad r0.y, cb2[19].x, r1.x, -r2.w
    mad r0.y, r5.y, r0.y, r2.w
    mad r20.xyz, r1.yzwy, r0.yyyy, r20.xyzx
  endif 
else 
  mov r20.x, r19.w
endif 
mad r1.xyz, r19.xyzx, r6.xyzx, r4.xyzx
mad r4.xyz, r19.xyzx, r6.xyzx, r8.xyzx
mad r0.yw, r5.xxxy, l(0.000000, 0.984375, 0.000000, 0.984375), l(0.000000, 0.00781250, 0.000000, 0.00781250)
sample_l_indexable(texture2d)(float,float,float,float) r0.yw, r0.ywyy, t5.zxwy, s2, l(0.000000)
mul r5.xyz, r0.zzzz, r20.xyzx
mad r2.xyz, r5.xyzx, r0.yyyy, r2.xyzx
mad r0.yzw, r5.xxyz, r0.wwww, r9.xxyz
mad r1.xyz, r4.xyzx, r3.xyzx, r1.xyzx
mul r2.xyz, r2.xyzx, l(0.972000, 0.972000, 0.972000, 0.000000)
mad r0.yzw, r0.yyzw, l(0.000000, 0.028000, 0.028000, 0.028000), r2.xxyz
add_sat r1.w, r0.x, l(0.040000)
mul r2.xyz, r0.yzwy, r1.wwww
lt r2.w, l(0.000000), cb2[9].z
if_nz r2.w
  dp3 r3.x, v7.xyzx, v7.xyzx
  sqrt r3.x, r3.x
  lt r3.y, l(0.000000), cb2[13].w
  if_nz r3.y
    mad r3.yz, r3.xxxx, cb2[15].xxyx, cb2[14].zzwz
    mul r3.yz, r3.yyzy, cb2[16].xxyx
    lt r3.w, l(0.010000), |v7.z|
    mul r4.xy, v7.zzzz, cb2[15].zwzz
    mul r4.zw, r4.xxxy, l(0.000000, 0.000000, -1.442695, -1.442695)
    exp r4.zw, r4.zzzw
    add r4.zw, -r4.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    div r4.xy, r4.zwzz, r4.xyxx
    mul r4.xy, r3.yzyy, r4.xyxx
    movc r3.yz, r3.wwww, r4.xxyx, r3.yyzy
    mul r4.xyz, r3.yyyy, cb2[12].xyzx
    exp r4.xyz, r4.xyzx
    mul r3.yzw, r3.zzzz, cb2[12].xxyz
    exp r3.yzw, r3.yyzw
    add r3.yzw, -r4.xxyz, r3.yyzw
    mad r3.yzw, cb2[13].wwww, r3.yyzw, r4.xxyz
  else 
    mad r3.x, r3.x, cb2[15].x, cb2[14].z
    mul r3.x, r3.x, cb2[16].x
    lt r4.x, l(0.010000), |v7.z|
    mul r4.y, v7.z, cb2[15].z
    mul r4.z, r4.y, l(-1.442695)
    exp r4.z, r4.z
    add r4.z, -r4.z, l(1.000000)
    div r4.y, r4.z, r4.y
    mul r4.y, r3.x, r4.y
    movc r3.x, r4.x, r4.y, r3.x
    mul r4.xyz, r3.xxxx, cb2[12].xyzx
    exp r3.yzw, r4.xxyz
  endif 
  mad r3.xyz, r3.yzwy, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r3.xyz, r3.xyzx, -cb2[9].zzzz
  mul r3.xyz, r1.xyzx, r3.xyzx
else 
  mul r3.w, v7.z, cb2[6].x
  mad r4.x, cb2[6].x, v7.z, cb2[5].x
  lt r4.y, |r3.w|, l(0.000100)
  min r4.z, r4.x, l(64.000000)
  mul r4.z, r4.z, l(1.442695)
  exp r4.z, r4.z
  mov_sat r4.w, cb2[6].z
  lt r5.x, r4.x, l(0.000000)
  add r4.x, r4.x, l(1.000000)
  movc r4.x, r5.x, r4.z, r4.x
  add r4.x, r4.x, -cb2[6].z
  movc r3.w, r4.y, l(1.000000), r3.w
  div r3.w, r4.x, r3.w
  movc r3.w, r4.y, r4.w, r3.w
  mul r3.w, r3.w, cb2[5].z
  dp3 r4.x, v7.xyzx, v7.xyzx
  sqrt r4.y, r4.x
  mad r3.w, r3.w, r4.y, cb2[5].w
  exp r3.w, r3.w
  min r3.w, r3.w, l(1.000000)
  add r3.w, -r3.w, l(1.000000)
  rsq r4.x, r4.x
  mul r4.xyz, r4.xxxx, v7.xyzx
  dp3 r4.x, cb2[7].yzwy, r4.xyzx
  mad_sat r4.x, cb2[8].y, r4.x, cb2[8].x
  add r4.y, cb2[3].w, -cb2[4].w
  mad r4.x, r4.x, r4.y, cb2[4].w
  mul r3.w, r3.w, r4.x
  mad r3.xyz, r3.wwww, -r1.xyzx, r1.xyzx
endif 
mul r1.xyz, r3.xyzx, cb1[85].yyyy
ge r3.xyz, r1.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r1.xyz, r1.xyzx, r3.xyzx
min o1.xyz, r1.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
if_nz r2.w
  dp3 r1.x, v7.xyzx, v7.xyzx
  rsq r1.y, r1.x
  mul r3.xyz, r1.yyyy, v7.xyzx
  sqrt r1.x, r1.x
  lt r1.y, l(0.000000), cb2[13].w
  if_nz r1.y
    mad r1.yz, r1.xxxx, cb2[15].xxyx, cb2[14].zzwz
    mul r1.yz, r1.yyzy, cb2[16].xxyx
    lt r2.w, l(0.010000), |v7.z|
    mul r4.xy, v7.zzzz, cb2[15].zwzz
    mul r4.zw, r4.xxxy, l(0.000000, 0.000000, -1.442695, -1.442695)
    exp r4.zw, r4.zzzw
    add r4.zw, -r4.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    div r4.xy, r4.zwzz, r4.xyxx
    mul r4.xy, r1.yzyy, r4.xyxx
    movc r1.yz, r2.wwww, r4.xxyx, r1.yyzy
    mul r4.xyz, r1.yyyy, cb2[12].xyzx
    exp r4.xyz, r4.xyzx
    mul r5.xyz, r1.zzzz, cb2[12].xyzx
    exp r5.xyz, r5.xyzx
    add r5.xyz, -r4.xyzx, r5.xyzx
    mad r4.xyz, cb2[13].wwww, r5.xyzx, r4.xyzx
  else 
    mad r1.y, r1.x, cb2[15].x, cb2[14].z
    mul r1.y, r1.y, cb2[16].x
    lt r1.z, l(0.010000), |v7.z|
    mul r2.w, v7.z, cb2[15].z
    mul r3.w, r2.w, l(-1.442695)
    exp r3.w, r3.w
    add r3.w, -r3.w, l(1.000000)
    div r2.w, r3.w, r2.w
    mul r2.w, r1.y, r2.w
    movc r1.y, r1.z, r2.w, r1.y
    mul r5.xyz, r1.yyyy, cb2[12].xyzx
    exp r4.xyz, r5.xyzx
  endif 
  mad r4.xyz, r4.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r4.xyz, r4.xyzx, -cb2[9].zzzz
  dp3 r1.y, cb2[7].yzwy, -r3.xyzx
  mad r1.z, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r2.w, cb2[8].w, -r1.y, l(1.000000)
  mul r2.w, r2.w, r2.w
  mul r2.w, r2.w, l(12.566371)
  div r1.z, r1.z, r2.w
  add r1.x, r1.x, -cb2[10].w
  mul_sat r1.x, r1.x, cb2[11].w
  mul r1.x, r1.x, r1.z
  mov_sat r1.y, r1.y
  mad r1.y, r1.y, r1.y, l(1.000000)
  mad r1.y, r1.y, l(0.05968310), l(-1.000000)
  mad r1.y, cb2[8].z, r1.y, l(1.000000)
  mul r3.xyz, r1.xxxx, cb2[11].xyzx
  mad r1.xyz, r1.yyyy, cb2[10].xyzx, r3.xyzx
  mul r1.xyz, r1.xyzx, cb2[9].wwww
  add r3.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r1.xyz, r1.xyzx, r3.xyzx
  mad r1.xyz, r2.xyzx, r4.xyzx, r1.xyzx
else 
  mul r2.w, v7.z, cb2[6].x
  mad r3.x, cb2[6].x, v7.z, cb2[5].x
  lt r3.y, |r2.w|, l(0.000100)
  min r3.z, r3.x, l(64.000000)
  mul r3.z, r3.z, l(1.442695)
  exp r3.z, r3.z
  mov_sat r3.w, cb2[6].z
  lt r4.x, r3.x, l(0.000000)
  add r3.x, r3.x, l(1.000000)
  movc r3.x, r4.x, r3.z, r3.x
  add r3.x, r3.x, -cb2[6].z
  movc r2.w, r3.y, l(1.000000), r2.w
  div r2.w, r3.x, r2.w
  movc r2.w, r3.y, r3.w, r2.w
  mul r2.w, r2.w, cb2[5].z
  dp3 r3.x, v7.xyzx, v7.xyzx
  sqrt r3.y, r3.x
  mad r2.w, r2.w, r3.y, cb2[5].w
  exp r2.w, r2.w
  min r2.w, r2.w, l(1.000000)
  add r2.w, -r2.w, l(1.000000)
  rsq r3.x, r3.x
  mul r3.xyz, r3.xxxx, v7.xyzx
  dp3 r3.x, cb2[7].yzwy, r3.xyzx
  mad_sat r3.x, cb2[8].y, r3.x, cb2[8].x
  add r4.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r3.xyzw, r3.xxxx, r4.xyzw, cb2[4].xyzw
  mul r2.w, r2.w, r3.w
  mad r0.yzw, -r0.yyzw, r1.wwww, r3.xxyz
  mad r1.xyz, r2.wwww, r0.yzwy, r2.xyzx
endif 
mul r0.yzw, r1.xxyz, cb1[85].yyyy
ge r1.xyz, r0.yzwy, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.yzw, r0.yyzw, r1.xxyz
min o0.xyz, r0.yzwy, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
mov o2.w, r0.x
ret 
// Approximately 3928 instruction slots used
