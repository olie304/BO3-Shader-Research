//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:39:33 2021
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float3 colorTint;                  // Offset:  160 Size:    12
//   float baseNormalHeight;            // Offset:  172 Size:     4
//   float2 glossRange;                 // Offset:  176 Size:     8
//   float2 rotateUVs;                  // Offset:  184 Size:     8 [unused]
//   float2 scrollUVs;                  // Offset:  192 Size:     8 [unused]
//   float2 scaleUVs;                   // Offset:  200 Size:     8 [unused]
//   float2 offsetUVs;                  // Offset:  208 Size:     8 [unused]
//   float2 zoomUVs;                    // Offset:  216 Size:     8 [unused]
//   float zoomRate;                    // Offset:  224 Size:     4 [unused]
//   float layerDepth;                  // Offset:  228 Size:     4 [unused]
//   bool clampU;                       // Offset:  232 Size:     4 [unused]
//   bool clampV;                       // Offset:  236 Size:     4 [unused]
//   float2 wind1Parms;                 // Offset:  240 Size:     8 [unused]
//   float2 wind2Parms;                 // Offset:  248 Size:     8 [unused]
//   float2 wind3Parms;                 // Offset:  256 Size:     8 [unused]
//   float3 backlightScatterColor;      // Offset:  272 Size:    12
//   bool useAlphaControls;             // Offset:  284 Size:     4
//   float zFeatherDistance;            // Offset:  288 Size:     4
//   float falloffBegin;                // Offset:  292 Size:     4 [unused]
//   float falloffEnd;                  // Offset:  296 Size:     4 [unused]
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16 [unused]
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16
//   float4 debugNormalOverride;        // Offset:  960 Size:    16
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// colorSampler                      sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// normalSampler                     sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// floatZSampler                     texture  float4          2d             t0      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// colorMap                          texture  float4          2d            t21      1 
// tintMask                          texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// normalMap                         texture  float4          2d            t24      1 
// thicknessMap                      texture  float4          2d            t25      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyz 
// COLOR                    1   x           1     NONE   float   x   
// TEXCOORD                 0    yz         1     NONE   float    yz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// OFFPOSITION              0   xyz         5     NONE   float   xyz 
// TEXCOORD                 9   xy          6     NONE   float   xy  
// SV_IsFrontFace           0   x           7    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[19], immediateIndexed
dcl_constantbuffer CB1[93], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2darray (float,float,float,float) t31
dcl_input_ps_siv linear noperspective v0.xyz, position
dcl_input_ps linear v1.x
dcl_input_ps linear v1.yz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xy
dcl_input_ps_sgv constant v7.x, is_front_face
dcl_output o0.xyzw
dcl_temps 48
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.yzyy, t21.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r1.x, v1.yzyy, t22.xyzw, s1
add r1.yzw, cb0[10].xxyz, l(0.000000, -1.000000, -1.000000, -1.000000)
mad r1.xyz, r1.xxxx, r1.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r0.xyz, r0.xyzx, r1.xyzx
add r1.x, -cb0[11].x, cb0[11].y
mul_sat r1.y, cb0[11].y, l(0.05882353)
sample_indexable(texture2d)(float,float,float,float) r2.xyz, v1.yzyy, t24.xyzw, s3
add r2.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.000000, 0.000000)
mad r2.xyz, cb0[10].wwww, r2.xyzx, l(0.500000, 0.500000, 0.000000, 0.000000)
mad r1.zw, r2.xxxy, l(0.000000, 0.000000, 1.99218750, 1.99218750), l(0.000000, 0.000000, -1.000000, -1.000000)
dp2 r2.x, r1.zwzz, r1.zwzz
add r2.x, -r2.x, l(1.000000)
max r2.x, r2.x, l(0.000000)
sqrt r2.x, r2.x
mul r2.y, r2.z, r2.z
mul r2.y, r2.y, l(0.33333334)
min r2.y, r2.y, l(1.000000)
movc r2.z, v7.x, l(1.000000), l(-1.000000)
dp3 r2.w, v2.xyzx, v2.xyzx
rsq r2.w, r2.w
mul r3.xyz, r2.wwww, v2.xyzx
mul r3.xyz, r2.zzzz, r3.xyzx
dp3 r2.w, v3.xyzx, v3.xyzx
rsq r2.w, r2.w
mul r4.xyz, r2.wwww, v3.xyzx
mul r4.xyz, r2.zzzz, r4.xyzx
dp3 r2.w, v4.xyzx, v4.xyzx
rsq r2.w, r2.w
mul r5.xyz, r2.wwww, v4.xyzx
mul r5.xyz, r2.zzzz, r5.xyzx
mul r1.y, r1.y, l(-17.000000)
exp r1.y, r1.y
add r1.y, r1.y, r2.y
log r1.y, r1.y
mul r1.y, r1.y, l(-0.05882353)
mul r5.xyz, r1.wwww, r5.xyzx
mad r4.xyz, r4.xyzx, r1.zzzz, r5.xyzx
mad r2.xzw, r3.xxyz, r2.xxxx, r4.xxyz
dp3 r1.z, r2.xzwx, r2.xzwx
rsq r1.z, r1.z
mul r2.xzw, r1.zzzz, r2.xxzw
mad r1.x, cb1[62].x, r1.x, cb0[11].x
mul_sat r1.x, r1.x, l(0.05882353)
mul r1.x, r1.x, l(-17.000000)
exp r1.x, r1.x
add r1.x, r1.x, r2.y
log r1.x, r1.x
mul r1.x, r1.x, l(-0.05882353)
max r1.xy, r1.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r1.z, l(0.000000), cb1[64].w
if_nz r1.z
  ftoi r1.z, cb1[64].w
  lod r1.w, v1.yzyy, t21.y, s1
  lod r2.y, v1.yzyy, t21.x, s1
  lt r1.w, r1.w, r2.y
  lt r2.y, l(0.000000), r2.y
  and r3.xyz, r1.zzzz, l(1, 2, 4, 0)
  movc r4.xyz, r3.xxxx, l(1.000000,0,1.000000,0), r0.xyzx
  movc r3.xyw, r3.yyyy, l(0,1.000000,0,1.000000), r0.xyxz
  movc r3.xyw, r2.yyyy, r4.xyxz, r3.xyxw
  movc r4.xyz, r3.zzzz, l(0,1.000000,0,0), r0.xyzx
  movc r0.xyz, r1.wwww, r3.xywx, r4.xyzx
endif 
add r3.xyz, -r0.xyzx, cb1[58].xyzx
mad r0.xyz, cb1[58].wwww, r3.xyzx, r0.xyzx
add r1.z, -r0.w, cb1[59].x
mad r0.w, cb1[59].w, r1.z, r0.w
add r1.x, -r1.y, r1.x
mad r1.y, cb1[62].w, r1.x, r1.y
add r1.z, cb1[63].x, l(-1.000000)
mad r1.z, cb1[63].w, r1.z, l(1.000000)
movc r3.xyz, v7.xxxx, v2.xyzx, -v2.xyzx
dp3 r1.w, r3.xyzx, r3.xyzx
rsq r1.w, r1.w
mad r3.xyz, r3.xyzx, r1.wwww, -r2.xzwx
mad r2.xyz, cb1[60].wwww, r3.xyzx, r2.xzwx
mul r0.w, r0.w, v1.x
sample_indexable(texture2d)(float,float,float,float) r1.w, v1.yzyy, t25.yzwx, s1
mul r3.xyz, r0.xyzx, cb0[17].xyzx
add r1.w, -r1.w, l(1.000000)
mul r3.xyz, r1.wwww, r3.xyzx
mul r3.xyz, r0.xyzx, r3.xyzx
if_nz cb0[17].w
  dp3 r1.w, -v5.xyzx, -v5.xyzx
  rsq r1.w, r1.w
  mul r4.xyz, r1.wwww, -v5.xyzx
  dp3 r1.w, r4.xyzx, v2.xyzx
  mul r1.w, r1.w, r1.w
  mad_sat r1.w, r1.w, v6.x, v6.y
  mul r1.w, r0.w, r1.w
  ftoi r4.xy, v0.xyxx
  mov r4.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.w, r4.xyzw, t0.yzwx
  ge r4.x, r3.w, l(0.984375)
  mul r4.y, r3.w, l(1.01587307)
  mad r3.w, r3.w, l(64.000000), l(-63.000000)
  movc r3.w, r4.x, r3.w, r4.y
  max r3.w, r3.w, l(0.00000001)
  rcp r3.w, r3.w
  ge r4.x, v0.z, l(0.984375)
  mul r4.y, v0.z, l(1.01587307)
  mad r4.z, v0.z, l(64.000000), l(-63.000000)
  movc r4.x, r4.x, r4.z, r4.y
  max r4.x, r4.x, l(0.00000001)
  rcp r4.x, r4.x
  eq r4.y, cb0[18].x, l(0.000000)
  div r4.z, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[18].x
  movc r4.y, r4.y, l(60000.000000), r4.z
  add r3.w, r3.w, -r4.x
  mul_sat r3.w, r4.y, r3.w
  mul o0.w, r1.w, r3.w
else 
  mov o0.w, r0.w
endif 
ftou r4.xy, v0.xyxx
ge r0.w, v0.z, l(0.984375)
mul r1.w, v0.z, l(1.01587307)
mad r3.w, v0.z, l(64.000000), l(-63.000000)
movc r0.w, r0.w, r3.w, r1.w
max r0.w, r0.w, l(0.00000001)
rcp r0.w, r0.w
dp3 r1.w, -v5.xyzx, -v5.xyzx
rsq r1.w, r1.w
mul r5.xyz, r1.wwww, -v5.xyzx
ine r3.w, cb1[92].x, l(0)
utof r4.zw, r4.yyyx
dp2 r5.w, r4.wzww, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r5.w, r5.w
mul r5.w, r5.w, l(52.982918)
frc r5.w, r5.w
mad r5.w, r5.w, l(6.28318548), cb1[70].w
sincos r6.x, r7.x, r5.w
dp2 r4.z, r4.zwzz, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r4.z, r4.z
mul r4.z, r4.z, l(52.982918)
frc r4.z, r4.z
mad r4.z, r4.z, l(6.28318548), cb1[70].w
sincos r8.x, r9.x, r4.z
dp3_sat r1.x, r2.xyzx, r5.xyzx
dp3 r4.z, -r5.xyzx, r2.xyzx
add r4.z, r4.z, r4.z
mad r10.xyz, r2.xyzx, -r4.zzzz, -r5.xyzx
mul r4.z, r1.y, l(17.000000)
exp r4.z, r4.z
add r4.z, r4.z, l(2.000000)
div r4.z, l(2.000000), r4.z
sqrt r4.w, r4.z
add r5.w, -r1.y, l(1.000000)
mul r6.z, r5.w, l(5.000000)
mad r6.w, r5.w, l(5.000000), l(-2.500000)
mul_sat r6.w, r6.w, l(0.400000)
mul r6.w, r6.w, l(100.000000)
mad r8.yz, -r5.wwww, l(0.000000, 10.000000, 5.000000, 0.000000), l(0.000000, 6.857410, 7.085000, 0.000000)
exp r7.w, r8.y
mul r7.w, r1.x, r7.w
mul r7.w, r7.w, l(9.136810)
mul r8.y, r5.w, r6.z
mad r8.y, -r8.y, l(2.015905), r8.z
exp r8.y, r8.y
mul r8.y, r1.x, r8.y
mul r8.y, r8.y, l(9.708090)
max r7.w, r7.w, r8.y
max r7.w, r7.w, l(1.268160)
mul r0.w, r0.w, l(0.00781250)
min r0.w, r0.w, l(15.000000)
ftou r0.w, r0.w
ushr r11.xy, r4.xyxx, l(6, 6, 0, 0)
ishl r11.z, r0.w, l(4)
mov r12.xy, l(0,0,0,0)
mov r13.w, l(0)
mov r14.yz, l(0,0,1.000000,0)
mov r15.xy, l(0,0,0,0)
mov r16.xy, l(0,0,0,0)
mov r17.xy, l(0,0,0,0)
mov r4.x, l(1.000000)
mov r18.xyzw, l(0,0,0,0)
mov r19.yzw, l(0,0,0,0)
mov r0.w, l(0)
mov r8.y, l(0)
loop 
  uge r8.z, r8.y, cb2[0].y
  breakc_nz r8.z
  ushr r12.z, r8.y, l(5)
  iadd r13.xyz, r11.xyzx, r12.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r8.z, r13.xyzw, t7.yzxw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r20.xyzw, r8.y, l(0), t15.wxyz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r21.xyzw, r8.y, l(16), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r22.xyzw, r8.y, l(32), t15.yxwz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r23.xyzw, r8.y, l(48), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r8.y, l(64), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r8.y, l(80), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r9.yz, r8.y, l(96), t15.xxyx
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r8.y, l(116), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r8.y, l(132), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r8.y, l(148), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r8.y, l(164), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r8.y, l(180), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r8.y, l(196), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xy, r8.y, l(212), t15.xyxx
  add r13.xyz, -r20.yzwy, v5.xyzx
  dp3 r8.w, r13.xyzx, r13.xyzx
  sqrt r8.w, r8.w
  ge r8.w, cb2[54].y, r8.w
  and r9.w, r26.y, l(0x0000ffff)
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r9.w, l(0), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r9.w, l(16), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r9.w, l(32), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r9.w, l(48), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r9.w, l(64), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r38.xyzw, r9.w, l(80), t16.xyzw
  dp3 r11.w, r33.xyzx, r13.xyzx
  add_sat r11.w, r33.w, r11.w
  dp3 r12.z, r34.xyzx, r13.xyzx
  add_sat r12.z, r34.w, r12.z
  mul r11.w, r11.w, r12.z
  dp3 r12.z, r35.xyzx, r13.xyzx
  add_sat r12.z, r35.w, r12.z
  mul r11.w, r11.w, r12.z
  dp3 r12.z, r36.xyzx, r13.xyzx
  add_sat r12.z, r36.w, r12.z
  mul r11.w, r11.w, r12.z
  dp3 r12.z, r37.xyzx, r13.xyzx
  add_sat r12.z, r37.w, r12.z
  mul r11.w, r11.w, r12.z
  dp3 r12.z, r38.xyzx, r13.xyzx
  add_sat r12.z, r38.w, r12.z
  mul r14.x, r11.w, r12.z
  and r11.w, r9.y, l(1)
  movc r12.zw, r11.wwww, r14.xxxy, r14.zzzx
  mov r33.xy, r26.zwzz
  mov r33.z, r27.z
  dp3 r11.w, r10.xyzx, r33.xyzx
  dp3 r14.x, r13.xyzx, r33.xyzx
  add r14.x, -r27.w, r14.x
  ge r14.w, r14.x, l(0.000000)
  max r14.x, r6.w, |r14.x|
  movc r14.x, r14.w, r14.x, -r14.x
  max r11.w, -r11.w, l(0.00000010)
  div r11.w, r14.x, r11.w
  min r11.w, |r11.w|, l(131072.000000)
  mov r27.z, r28.z
  dp3 r14.x, r10.xyzx, r27.xyzx
  dp3 r14.w, r13.xyzx, r27.xyzx
  add r14.w, -r28.w, r14.w
  ge r15.w, r14.w, l(0.000000)
  max r14.w, r6.w, |r14.w|
  movc r14.w, r15.w, r14.w, -r14.w
  max r14.x, -r14.x, l(0.00000010)
  div r14.x, r14.w, r14.x
  min r11.w, r11.w, |r14.x|
  mov r28.z, r29.z
  dp3 r14.x, r10.xyzx, r28.xyzx
  dp3 r14.w, r13.xyzx, r28.xyzx
  add r14.w, -r29.w, r14.w
  ge r15.w, r14.w, l(0.000000)
  max r14.w, r6.w, |r14.w|
  movc r14.w, r15.w, r14.w, -r14.w
  max r14.x, -r14.x, l(0.00000010)
  div r14.x, r14.w, r14.x
  min r11.w, r11.w, |r14.x|
  mov r29.z, r30.z
  dp3 r14.x, r10.xyzx, r29.xyzx
  dp3 r14.w, r13.xyzx, r29.xyzx
  add r14.w, -r30.w, r14.w
  ge r15.w, r14.w, l(0.000000)
  max r14.w, r6.w, |r14.w|
  movc r14.w, r15.w, r14.w, -r14.w
  max r14.x, -r14.x, l(0.00000010)
  div r14.x, r14.w, r14.x
  min r11.w, r11.w, |r14.x|
  mov r30.z, r31.x
  dp3 r14.x, r10.xyzx, r30.xyzx
  dp3 r14.w, r13.xyzx, r30.xyzx
  add r14.w, -r31.y, r14.w
  ge r15.w, r14.w, l(0.000000)
  max r14.w, r6.w, |r14.w|
  movc r14.w, r15.w, r14.w, -r14.w
  max r14.x, -r14.x, l(0.00000010)
  div r14.x, r14.w, r14.x
  min r11.w, r11.w, |r14.x|
  mov r32.zw, r31.zzzw
  dp3 r14.x, r10.zxyz, r32.xzwx
  dp3 r14.w, r13.zxyz, r32.xzwx
  add r14.w, -r32.y, r14.w
  ge r15.w, r14.w, l(0.000000)
  max r14.w, r6.w, |r14.w|
  movc r14.w, r15.w, r14.w, -r14.w
  max r14.x, -r14.x, l(0.00000010)
  div r14.x, r14.w, r14.x
  min r11.w, r11.w, |r14.x|
  mov r27.x, r23.w
  mov r27.yz, r24.zzwz
  add r27.xyz, r13.xyzx, r27.xyzx
  mad r27.xyz, r10.xyzx, r11.wwww, r27.xyzx
  dp3 r14.x, r27.xyzx, r27.xyzx
  sqrt r14.x, r14.x
  div r11.w, r11.w, r14.x
  add r11.w, r11.w, r11.w
  sqrt r11.w, r11.w
  mad r11.w, r5.w, l(5.000000), r11.w
  add r11.w, r11.w, l(-0.844800)
  mov r20.y, r21.z
  mov r20.z, r22.x
  dp3 r28.x, r27.xyzx, r20.xyzx
  mov r29.xy, r21.xwxx
  mov r29.z, r22.w
  dp3 r28.y, r27.xyzx, r29.xyzx
  mov r22.x, r21.y
  dp3 r28.z, r27.xyzx, r22.xyzx
  ubfe r14.xw, l(6, 0, 0, 9), l(25, 0, 0, 16), r26.yyyy
  utof r28.w, r14.w
  sample_l_indexable(texturecubearray)(float,float,float,float) r21.xyz, r28.xyzw, t8.xyzw, s2, r11.w
  and r26.yzw, r21.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
  ieq r26.yzw, r26.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
  or r11.w, r26.z, r26.y
  or r11.w, r26.w, r11.w
  movc r21.xyz, r11.wwww, l(1.000000,1.000000,0,0), r21.xyzx
  dp3 r27.x, r13.xyzx, r20.xyzx
  dp3 r27.y, r13.xyzx, r29.xyzx
  dp3 r27.z, r13.xyzx, r22.xyzx
  mad_sat r23.xyz, r27.xyzx, r23.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mov r24.z, r25.x
  mad r23.xyz, r23.xyzx, r24.xyzx, r25.yzwy
  dp3 r28.x, r2.xyzx, r20.xyzx
  dp3 r28.y, r2.xyzx, r29.xyzx
  dp3 r28.z, r2.xyzx, r22.xyzx
  lt r20.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r28.xyzx
  movc r15.z, r20.x, l(0), l(0.500000)
  add r22.xyz, r15.xyzx, r23.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r22.xyz, r22.xyzx, t17.xyzw, s4, l(0.000000)
  movc r16.z, r20.y, l(0), l(0.500000)
  add r20.xyw, r16.xyxz, r23.xyxz
  sample_l_indexable(texture3d)(float,float,float,float) r20.xyw, r20.xywx, t18.xywz, s4, l(0.000000)
  movc r17.z, r20.z, l(0), l(0.500000)
  add r23.xyz, r17.xyzx, r23.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r23.xyz, r23.xyzx, t19.xyzw, s4, l(0.000000)
  mul r24.xyz, r28.xyzx, r28.xyzx
  sample_l_indexable(texturecubearray)(float,float,float,float) r25.xyz, r28.xyzw, t8.xyzw, s2, l(6.000000)
  and r26.yzw, r25.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
  ieq r26.yzw, r26.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
  or r11.w, r26.z, r26.y
  or r11.w, r26.w, r11.w
  movc r25.xyz, r11.wwww, l(1.000000,1.000000,0,0), r25.xyzx
  mov r27.xyzw, r18.xyzw
  mov r26.yzw, r19.yyzw
  mov r11.w, r0.w
  mov r14.w, r8.z
  loop 
    breakc_z r14.w
    firstbit_lo r15.z, r14.w
    ishl r15.z, l(1), r15.z
    and r15.w, r14.w, r15.z
    if_nz r15.w
      not r15.z, r15.z
      and r14.w, r14.w, r15.z
      if_nz r8.w
        mov r15.z, r9.y
        mov r28.xy, r12.zwzz
        mov r15.w, l(1)
        loop 
          ige r16.z, r15.w, r14.x
          breakc_nz r16.z
          iadd r16.z, r9.w, r15.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r16.z, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r16.z, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r16.z, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r16.z, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r16.z, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r16.z, l(80), t16.xyzw
          dp3 r16.z, r29.xyzx, r13.xyzx
          add_sat r16.z, r29.w, r16.z
          mul r16.z, r16.z, r28.x
          dp3 r16.w, r30.xyzx, r13.xyzx
          add_sat r16.w, r30.w, r16.w
          mul r16.z, r16.w, r16.z
          dp3 r16.w, r31.xyzx, r13.xyzx
          add_sat r16.w, r31.w, r16.w
          mul r16.z, r16.w, r16.z
          dp3 r16.w, r32.xyzx, r13.xyzx
          add_sat r16.w, r32.w, r16.w
          mul r16.z, r16.w, r16.z
          dp3 r16.w, r33.xyzx, r13.xyzx
          add_sat r16.w, r33.w, r16.w
          mul r16.z, r16.w, r16.z
          dp3 r16.w, r34.xyzx, r13.xyzx
          add_sat r16.w, r34.w, r16.w
          mul r28.x, r16.w, r16.z
          ushr r17.z, r15.z, l(2)
          ubfe r17.w, l(1), l(2), r15.z
          and r20.z, r17.z, l(2)
          max r21.w, r28.x, r28.y
          mad r16.z, -r16.z, r16.w, l(1.000000)
          mul r16.z, r16.z, r28.y
          movc r4.y, r20.z, r16.z, r21.w
          movc r28.xy, r17.wwww, r28.xyxx, r4.xyxx
          iadd r15.w, r15.w, l(1)
          mov r15.z, r17.z
        endloop 
        mov_sat r28.y, r28.y
        mul r4.y, r9.z, r28.y
        lt r15.z, l(0.000000), r4.y
        if_nz r15.z
          mad r29.z, r28.y, r9.z, r26.w
          mul r4.y, r26.x, r4.y
          mul r28.xzw, r4.yyyy, r24.xxyz
          mul r30.xyz, r20.xywx, r28.zzzz
          mad r30.xyz, r22.xyzx, r28.xxxx, r30.xyzx
          mad r28.xzw, r23.xxyz, r28.wwww, r30.xxyz
          mul r30.xyz, r25.xyzx, r28.xzwx
          dp3 r15.z, r30.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r30.xyz, r28.xzwx, r25.xyzx, r27.xyzx
          mul r15.w, r7.w, r15.z
          mul r28.xzw, r4.yyyy, r21.xxyz
          dp3 r4.y, r28.xzwx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r4.y, r7.w, r15.z, r4.y
          div r4.y, r15.w, r4.y
          mov r31.x, r27.w
          mov r31.yz, r26.yyzy
          mad r29.xyw, r28.zwzx, r4.yyyy, r31.yzyx
          mov r30.w, r29.w
        else 
          mov r30.xyzw, r27.xyzw
          mov r29.xyz, r26.yzwy
        endif 
        mov r11.w, l(-1)
        mov r27.xyzw, r30.xyzw
        mov r26.yzw, r29.xxyz
        break 
      endif 
    endif 
  endloop 
  if_nz r11.w
    mov r18.xyzw, r27.xyzw
    mov r19.yzw, r26.yyzw
    mov r0.w, l(-1)
    break 
  endif 
  iadd r8.y, r8.y, l(32)
  mov r18.xyzw, r27.xyzw
  mov r19.yzw, r26.yyzw
  mov r0.w, r11.w
endloop 
if_z r0.w
  iadd r0.w, cb2[0].y, -cb2[58].x
  and r4.x, r0.w, l(-32)
  iadd r4.y, r0.w, -r4.x
  and r8.y, cb2[0].y, l(-32)
  iadd r8.z, -r8.y, cb2[0].y
  mov r12.xy, l(0,0,0,0)
  mov r13.w, l(0)
  mov r14.yz, l(0,0,1.000000,0)
  mov r15.xy, l(0,0,0,0)
  mov r16.x, l(1.000000)
  mov r17.xy, l(0,0,0,0)
  mov r20.xy, l(0,0,0,0)
  mov r21.xyzw, r18.xyzw
  mov r22.yzw, r19.yyzw
  mov r8.w, r4.x
  loop 
    uge r9.y, r8.w, cb2[0].y
    breakc_nz r9.y
    ushr r12.z, r8.w, l(5)
    iadd r13.xyz, r11.xyzx, r12.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r9.y, r13.xyzw, t7.yxzw
    ieq r9.z, r4.x, r8.w
    bfi r9.w, r4.y, l(0), l(0), r9.y
    movc r9.y, r9.z, r9.w, r9.y
    ieq r9.z, r8.y, r8.w
    ubfe r9.w, r8.z, l(0), r9.y
    movc r9.y, r9.z, r9.w, r9.y
    iadd r9.z, r8.w, cb2[0].x
    mov r23.xyzw, r21.xyzw
    mov r24.xyz, r22.yzwy
    mov r9.w, r9.y
    loop 
      breakc_z r9.w
      firstbit_lo r11.w, r9.w
      ishl r12.z, l(1), r11.w
      and r12.w, r9.w, r12.z
      if_nz r12.w
        xor r9.w, r9.w, r12.z
        iadd r12.z, r9.z, r11.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r25.xyzw, r12.z, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r13.xy, r12.z, l(16), t11.xyxx
        add r25.xyz, r25.xyzx, -v5.xyzx
        mov r13.z, r25.w
        lt r13.xyz, |r25.xyzx|, r13.zxyz
        and r12.z, r13.y, r13.x
        and r12.z, r13.z, r12.z
        if_nz r12.z
          iadd r11.w, r8.w, r11.w
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r11.w, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r12.zw, r11.w, l(96), t15.xxxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r11.w, l(116), t15.zwxy
          add r13.xyz, -r25.yzwy, v5.xyzx
          and r14.w, r26.w, l(0x0000ffff)
          ubfe r15.w, l(6), l(25), r26.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r14.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r14.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r14.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r14.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r14.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r14.w, l(80), t16.xyzw
          dp3 r16.z, r27.xyzx, r13.xyzx
          add_sat r16.z, r27.w, r16.z
          dp3 r16.w, r28.xyzx, r13.xyzx
          add_sat r16.w, r28.w, r16.w
          mul r16.z, r16.w, r16.z
          dp3 r16.w, r29.xyzx, r13.xyzx
          add_sat r16.w, r29.w, r16.w
          mul r16.z, r16.w, r16.z
          dp3 r16.w, r30.xyzx, r13.xyzx
          add_sat r16.w, r30.w, r16.w
          mul r16.z, r16.w, r16.z
          dp3 r16.w, r31.xyzx, r13.xyzx
          add_sat r16.w, r31.w, r16.w
          mul r16.z, r16.w, r16.z
          dp3 r16.w, r32.xyzx, r13.xyzx
          add_sat r16.w, r32.w, r16.w
          mul r14.x, r16.w, r16.z
          and r16.z, r12.z, l(1)
          movc r16.zw, r16.zzzz, r14.xxxy, r14.zzzx
          mov r14.x, r12.z
          mov r27.xy, r16.zwzz
          mov r17.w, l(1)
          loop 
            ige r20.w, r17.w, r15.w
            breakc_nz r20.w
            iadd r20.w, r14.w, r17.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r20.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r20.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r20.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r20.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r20.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r20.w, l(80), t16.xyzw
            dp3 r20.w, r28.xyzx, r13.xyzx
            add_sat r20.w, r28.w, r20.w
            mul r20.w, r20.w, r27.x
            dp3 r25.w, r29.xyzx, r13.xyzx
            add_sat r25.w, r29.w, r25.w
            mul r20.w, r20.w, r25.w
            dp3 r25.w, r30.xyzx, r13.xyzx
            add_sat r25.w, r30.w, r25.w
            mul r20.w, r20.w, r25.w
            dp3 r25.w, r31.xyzx, r13.xyzx
            add_sat r25.w, r31.w, r25.w
            mul r20.w, r20.w, r25.w
            dp3 r25.w, r32.xyzx, r13.xyzx
            add_sat r25.w, r32.w, r25.w
            mul r20.w, r20.w, r25.w
            dp3 r25.w, r33.xyzx, r13.xyzx
            add_sat r25.w, r33.w, r25.w
            mul r27.x, r20.w, r25.w
            ushr r27.z, r14.x, l(2)
            ubfe r27.w, l(1), l(2), r14.x
            and r28.x, r27.z, l(2)
            max r28.y, r27.x, r27.y
            mad r20.w, -r20.w, r25.w, l(1.000000)
            mul r20.w, r20.w, r27.y
            movc r16.y, r28.x, r20.w, r28.y
            movc r27.xy, r27.wwww, r27.xyxx, r16.xyxx
            iadd r17.w, r17.w, l(1)
            mov r14.x, r27.z
          endloop 
          mov_sat r27.y, r27.y
          mul r12.z, r12.w, r27.y
          lt r14.x, l(0.000000), r12.z
          if_nz r14.x
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r11.w, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r11.w, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r11.w, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r11.w, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r11.w, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r11.w, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r11.w, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r11.w, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r11.w, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r11.w, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xy, r11.w, l(212), t15.xyxx
            mad r24.z, r27.y, r12.w, r24.z
            mul r11.w, r26.z, r12.z
            mov r26.z, r33.z
            dp3 r12.z, r10.xyzx, r26.xyzx
            dp3 r12.w, r13.xyzx, r26.xyzx
            add r12.w, -r33.w, r12.w
            ge r14.x, r12.w, l(0.000000)
            max r12.w, r6.w, |r12.w|
            movc r12.w, r14.x, r12.w, -r12.w
            max r12.z, -r12.z, l(0.00000010)
            div r12.z, r12.w, r12.z
            min r12.z, |r12.z|, l(131072.000000)
            mov r33.z, r34.z
            dp3 r12.w, r10.xyzx, r33.xyzx
            dp3 r14.x, r13.xyzx, r33.xyzx
            add r14.x, -r34.w, r14.x
            ge r14.w, r14.x, l(0.000000)
            max r14.x, r6.w, |r14.x|
            movc r14.x, r14.w, r14.x, -r14.x
            max r12.w, -r12.w, l(0.00000010)
            div r12.w, r14.x, r12.w
            min r12.z, |r12.w|, r12.z
            mov r34.z, r35.z
            dp3 r12.w, r10.xyzx, r34.xyzx
            dp3 r14.x, r13.xyzx, r34.xyzx
            add r14.x, -r35.w, r14.x
            ge r14.w, r14.x, l(0.000000)
            max r14.x, r6.w, |r14.x|
            movc r14.x, r14.w, r14.x, -r14.x
            max r12.w, -r12.w, l(0.00000010)
            div r12.w, r14.x, r12.w
            min r12.z, |r12.w|, r12.z
            mov r35.z, r36.z
            dp3 r12.w, r10.xyzx, r35.xyzx
            dp3 r14.x, r13.xyzx, r35.xyzx
            add r14.x, -r36.w, r14.x
            ge r14.w, r14.x, l(0.000000)
            max r14.x, r6.w, |r14.x|
            movc r14.x, r14.w, r14.x, -r14.x
            max r12.w, -r12.w, l(0.00000010)
            div r12.w, r14.x, r12.w
            min r12.z, |r12.w|, r12.z
            mov r36.z, r37.x
            dp3 r12.w, r10.xyzx, r36.xyzx
            dp3 r14.x, r13.xyzx, r36.xyzx
            add r14.x, -r37.y, r14.x
            ge r14.w, r14.x, l(0.000000)
            max r14.x, r6.w, |r14.x|
            movc r14.x, r14.w, r14.x, -r14.x
            max r12.w, -r12.w, l(0.00000010)
            div r12.w, r14.x, r12.w
            min r12.z, |r12.w|, r12.z
            mov r38.zw, r37.zzzw
            dp3 r12.w, r10.zxyz, r38.xzwx
            dp3 r14.x, r13.zxyz, r38.xzwx
            add r14.x, -r38.y, r14.x
            ge r14.w, r14.x, l(0.000000)
            max r14.x, r6.w, |r14.x|
            movc r14.x, r14.w, r14.x, -r14.x
            max r12.w, -r12.w, l(0.00000010)
            div r12.w, r14.x, r12.w
            min r12.z, |r12.w|, r12.z
            mov r26.x, r30.w
            mov r26.yz, r31.zzwz
            add r16.yzw, r13.xxyz, r26.xxyz
            mad r16.yzw, r10.xxyz, r12.zzzz, r16.yyzw
            dp3 r12.w, r16.yzwy, r16.yzwy
            sqrt r12.w, r12.w
            div r12.z, r12.z, r12.w
            add r12.z, r12.z, r12.z
            sqrt r12.z, r12.z
            mad r12.z, r5.w, l(5.000000), r12.z
            add r12.z, r12.z, l(-0.844800)
            mov r25.y, r28.z
            mov r25.z, r29.x
            dp3 r33.x, r16.yzwy, r25.xyzx
            mov r26.xy, r28.xwxx
            mov r26.z, r29.w
            dp3 r33.y, r16.yzwy, r26.xyzx
            mov r29.x, r28.y
            dp3 r33.z, r16.yzwy, r29.xyzx
            ubfe r12.w, l(9), l(16), r26.w
            utof r33.w, r12.w
            sample_l_indexable(texturecubearray)(float,float,float,float) r16.yzw, r33.xyzw, t8.wxyz, s2, r12.z
            and r27.xzw, r16.yyzw, l(0x7fffffff, 0, 0x7fffffff, 0x7fffffff)
            ieq r27.xzw, r27.xxzw, l(0x7f800000, 0, 0x7f800000, 0x7f800000)
            or r12.z, r27.z, r27.x
            or r12.z, r27.w, r12.z
            movc r16.yzw, r12.zzzz, l(0,1.000000,1.000000,0), r16.yyzw
            dp3 r28.x, r13.xyzx, r25.xyzx
            dp3 r28.y, r13.xyzx, r26.xyzx
            dp3 r28.z, r13.xyzx, r29.xyzx
            mad_sat r13.xyz, r28.xyzx, r30.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
            mov r31.z, r32.x
            mad r13.xyz, r13.xyzx, r31.xyzx, r32.yzwy
            dp3 r33.x, r2.xyzx, r25.xyzx
            dp3 r33.y, r2.xyzx, r26.xyzx
            dp3 r33.z, r2.xyzx, r29.xyzx
            lt r25.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r33.xyzx
            movc r15.z, r25.x, l(0), l(0.500000)
            add r26.xyz, r13.xyzx, r15.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r26.xyz, r26.xyzx, t17.xyzw, s4, l(0.000000)
            mul r27.xzw, r33.xxyz, r33.xxyz
            mul r27.xzw, r11.wwww, r27.xxzw
            movc r17.z, r25.y, l(0), l(0.500000)
            add r25.xyw, r13.xyxz, r17.xyxz
            sample_l_indexable(texture3d)(float,float,float,float) r25.xyw, r25.xywx, t18.xywz, s4, l(0.000000)
            mul r25.xyw, r27.zzzz, r25.xyxw
            mad r25.xyw, r26.xyxz, r27.xxxx, r25.xyxw
            movc r20.z, r25.z, l(0), l(0.500000)
            add r13.xyz, r13.xyzx, r20.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r13.xyz, r13.xyzx, t19.xyzw, s4, l(0.000000)
            mad r13.xyz, r13.xyzx, r27.wwww, r25.xywx
            sample_l_indexable(texturecubearray)(float,float,float,float) r25.xyz, r33.xyzw, t8.xyzw, s2, l(6.000000)
            and r26.xyz, r25.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
            ieq r26.xyz, r26.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
            or r12.z, r26.y, r26.x
            or r12.z, r26.z, r12.z
            movc r25.xyz, r12.zzzz, l(1.000000,1.000000,0,0), r25.xyzx
            mul r26.xyz, r13.xyzx, r25.xyzx
            dp3 r12.z, r26.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r23.xyz, r13.xyzx, r25.xyzx, r23.xyzx
            mul r12.w, r7.w, r12.z
            mul r13.xyz, r11.wwww, r16.yzwy
            dp3 r11.w, r13.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r11.w, r7.w, r12.z, r11.w
            div r11.w, r12.w, r11.w
            mov r25.x, r23.w
            mov r25.yz, r24.xxyx
            mad r24.xyw, r13.yzyx, r11.wwww, r25.yzyx
            mov r23.w, r24.w
          endif 
        endif 
      endif 
    endloop 
    mov r21.xyzw, r23.xyzw
    mov r22.yzw, r24.xxyz
    iadd r8.w, r8.w, l(32)
  endloop 
  lt r8.y, r22.w, l(1.000000)
  if_nz r8.y
    mov r12.xy, l(0,0,0,0)
    mov r13.w, l(0)
    mov r14.yz, l(0,0,1.000000,0)
    mov r15.xy, l(0,0,0,0)
    mov r16.x, l(1.000000)
    mov r17.xy, l(0,0,0,0)
    mov r20.xy, l(0,0,0,0)
    mov r23.x, r21.w
    mov r23.yzw, r22.yyzw
    mov r8.yzw, r21.xxyz
    mov r9.y, r22.w
    mov r9.z, l(0)
    loop 
      uge r9.w, r9.z, r0.w
      breakc_nz r9.w
      ushr r12.z, r9.z, l(5)
      iadd r13.xyz, r11.xyzx, r12.xyzx
      ld_indexable(texture2darray)(uint,uint,uint,uint) r9.w, r13.xyzw, t7.yzwx
      ieq r11.w, r4.x, r9.z
      ubfe r12.z, r4.y, l(0), r9.w
      movc r9.w, r11.w, r12.z, r9.w
      iadd r11.w, r9.z, cb2[0].x
      mov r24.xyzw, r23.xyzw
      mov r13.xyz, r8.yzwy
      mov r12.z, r9.y
      mov r12.w, r9.w
      loop 
        breakc_z r12.w
        firstbit_lo r14.w, r12.w
        ishl r15.w, l(1), r14.w
        and r16.z, r12.w, r15.w
        if_nz r16.z
          xor r12.w, r12.w, r15.w
          iadd r15.w, r11.w, r14.w
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r25.xyzw, r15.w, l(0), t11.xyzw
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r26.xy, r15.w, l(16), t11.xyxx
          add r25.xyz, r25.xyzx, -v5.xyzx
          mov r26.z, r25.w
          lt r25.xyz, |r25.xyzx|, r26.zxyz
          and r15.w, r25.y, r25.x
          and r15.w, r25.z, r15.w
          if_nz r15.w
            iadd r14.w, r9.z, r14.w
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r14.w, l(0), t15.wxyz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r16.zw, r14.w, l(96), t15.xxxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r14.w, l(116), t15.zwxy
            add r27.xyz, -r25.yzwy, v5.xyzx
            and r15.w, r26.w, l(0x0000ffff)
            ubfe r17.w, l(6), l(25), r26.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r15.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r15.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r15.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r15.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r15.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r15.w, l(80), t16.xyzw
            dp3 r19.w, r28.xyzx, r27.xyzx
            add_sat r19.w, r28.w, r19.w
            dp3 r20.w, r29.xyzx, r27.xyzx
            add_sat r20.w, r29.w, r20.w
            mul r19.w, r19.w, r20.w
            dp3 r20.w, r30.xyzx, r27.xyzx
            add_sat r20.w, r30.w, r20.w
            mul r19.w, r19.w, r20.w
            dp3 r20.w, r31.xyzx, r27.xyzx
            add_sat r20.w, r31.w, r20.w
            mul r19.w, r19.w, r20.w
            dp3 r20.w, r32.xyzx, r27.xyzx
            add_sat r20.w, r32.w, r20.w
            mul r19.w, r19.w, r20.w
            dp3 r20.w, r33.xyzx, r27.xyzx
            add_sat r20.w, r33.w, r20.w
            mul r14.x, r19.w, r20.w
            and r19.w, r16.z, l(1)
            movc r28.xy, r19.wwww, r14.xyxx, r14.zxzz
            mov r14.x, r16.z
            mov r29.xy, r28.xyxx
            mov r19.w, l(1)
            loop 
              ige r20.w, r19.w, r17.w
              breakc_nz r20.w
              iadd r20.w, r15.w, r19.w
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r20.w, l(0), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r20.w, l(16), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r20.w, l(32), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r20.w, l(48), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r20.w, l(64), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r20.w, l(80), t16.xyzw
              dp3 r20.w, r30.xyzx, r27.xyzx
              add_sat r20.w, r30.w, r20.w
              mul r20.w, r20.w, r29.x
              dp3 r25.w, r31.xyzx, r27.xyzx
              add_sat r25.w, r31.w, r25.w
              mul r20.w, r20.w, r25.w
              dp3 r25.w, r32.xyzx, r27.xyzx
              add_sat r25.w, r32.w, r25.w
              mul r20.w, r20.w, r25.w
              dp3 r25.w, r33.xyzx, r27.xyzx
              add_sat r25.w, r33.w, r25.w
              mul r20.w, r20.w, r25.w
              dp3 r25.w, r34.xyzx, r27.xyzx
              add_sat r25.w, r34.w, r25.w
              mul r20.w, r20.w, r25.w
              dp3 r25.w, r35.xyzx, r27.xyzx
              add_sat r25.w, r35.w, r25.w
              mul r29.x, r20.w, r25.w
              ushr r27.w, r14.x, l(2)
              ubfe r28.z, l(1), l(2), r14.x
              and r28.w, r27.w, l(2)
              max r29.z, r29.x, r29.y
              mad r20.w, -r20.w, r25.w, l(1.000000)
              mul r20.w, r20.w, r29.y
              movc r16.y, r28.w, r20.w, r29.z
              movc r29.xy, r28.zzzz, r29.xyxx, r16.xyxx
              iadd r19.w, r19.w, l(1)
              mov r14.x, r27.w
            endloop 
            add_sat r14.x, -r12.z, r29.y
            mul r15.w, r16.w, r14.x
            lt r16.y, l(0.000000), r15.w
            if_nz r16.y
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r14.w, l(16), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r14.w, l(32), t15.yxwz
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r14.w, l(48), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r14.w, l(64), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r14.w, l(80), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r14.w, l(132), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r14.w, l(148), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r14.w, l(164), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r14.w, l(180), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r14.w, l(196), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xy, r14.w, l(212), t15.xyxx
              mad r24.w, r14.x, r16.w, r24.w
              mul r14.x, r26.z, r15.w
              mov r26.z, r34.z
              dp3 r14.w, r10.xyzx, r26.xyzx
              dp3 r15.w, r27.xyzx, r26.xyzx
              add r15.w, -r34.w, r15.w
              ge r16.y, r15.w, l(0.000000)
              max r15.w, r6.w, |r15.w|
              movc r15.w, r16.y, r15.w, -r15.w
              max r14.w, -r14.w, l(0.00000010)
              div r14.w, r15.w, r14.w
              min r14.w, |r14.w|, l(131072.000000)
              mov r34.z, r35.z
              dp3 r15.w, r10.xyzx, r34.xyzx
              dp3 r16.y, r27.xyzx, r34.xyzx
              add r16.y, -r35.w, r16.y
              ge r16.z, r16.y, l(0.000000)
              max r16.y, r6.w, |r16.y|
              movc r16.y, r16.z, r16.y, -r16.y
              max r15.w, -r15.w, l(0.00000010)
              div r15.w, r16.y, r15.w
              min r14.w, r14.w, |r15.w|
              mov r35.z, r36.z
              dp3 r15.w, r10.xyzx, r35.xyzx
              dp3 r16.y, r27.xyzx, r35.xyzx
              add r16.y, -r36.w, r16.y
              ge r16.z, r16.y, l(0.000000)
              max r16.y, r6.w, |r16.y|
              movc r16.y, r16.z, r16.y, -r16.y
              max r15.w, -r15.w, l(0.00000010)
              div r15.w, r16.y, r15.w
              min r14.w, r14.w, |r15.w|
              mov r36.z, r37.z
              dp3 r15.w, r10.xyzx, r36.xyzx
              dp3 r16.y, r27.xyzx, r36.xyzx
              add r16.y, -r37.w, r16.y
              ge r16.z, r16.y, l(0.000000)
              max r16.y, r6.w, |r16.y|
              movc r16.y, r16.z, r16.y, -r16.y
              max r15.w, -r15.w, l(0.00000010)
              div r15.w, r16.y, r15.w
              min r14.w, r14.w, |r15.w|
              mov r37.z, r38.x
              dp3 r15.w, r10.xyzx, r37.xyzx
              dp3 r16.y, r27.xyzx, r37.xyzx
              add r16.y, -r38.y, r16.y
              ge r16.z, r16.y, l(0.000000)
              max r16.y, r6.w, |r16.y|
              movc r16.y, r16.z, r16.y, -r16.y
              max r15.w, -r15.w, l(0.00000010)
              div r15.w, r16.y, r15.w
              min r14.w, r14.w, |r15.w|
              mov r39.zw, r38.zzzw
              dp3 r15.w, r10.zxyz, r39.xzwx
              dp3 r16.y, r27.zxyz, r39.xzwx
              add r16.y, -r39.y, r16.y
              ge r16.z, r16.y, l(0.000000)
              max r16.y, r6.w, |r16.y|
              movc r16.y, r16.z, r16.y, -r16.y
              max r15.w, -r15.w, l(0.00000010)
              div r15.w, r16.y, r15.w
              min r14.w, r14.w, |r15.w|
              mov r26.x, r31.w
              mov r26.yz, r32.zzwz
              add r16.yzw, r27.xxyz, r26.xxyz
              mad r16.yzw, r10.xxyz, r14.wwww, r16.yyzw
              dp3 r15.w, r16.yzwy, r16.yzwy
              sqrt r15.w, r15.w
              div r14.w, r14.w, r15.w
              add r14.w, r14.w, r14.w
              sqrt r14.w, r14.w
              mad r14.w, r5.w, l(5.000000), r14.w
              add r14.w, r14.w, l(-0.844800)
              mov r25.y, r28.z
              mov r25.z, r30.x
              dp3 r34.x, r16.yzwy, r25.xyzx
              mov r26.xy, r28.xwxx
              mov r26.z, r30.w
              dp3 r34.y, r16.yzwy, r26.xyzx
              mov r30.x, r28.y
              dp3 r34.z, r16.yzwy, r30.xyzx
              ubfe r15.w, l(9), l(16), r26.w
              utof r34.w, r15.w
              sample_l_indexable(texturecubearray)(float,float,float,float) r16.yzw, r34.xyzw, t8.wxyz, s2, r14.w
              and r28.xyz, r16.yzwy, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
              ieq r28.xyz, r28.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
              or r14.w, r28.y, r28.x
              or r14.w, r28.z, r14.w
              movc r16.yzw, r14.wwww, l(0,1.000000,1.000000,0), r16.yyzw
              dp3 r28.x, r27.xyzx, r25.xyzx
              dp3 r28.y, r27.xyzx, r26.xyzx
              dp3 r28.z, r27.xyzx, r30.xyzx
              mad_sat r27.xyz, r28.xyzx, r31.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
              mov r32.z, r33.x
              mad r27.xyz, r27.xyzx, r32.xyzx, r33.yzwy
              dp3 r34.x, r2.xyzx, r25.xyzx
              dp3 r34.y, r2.xyzx, r26.xyzx
              dp3 r34.z, r2.xyzx, r30.xyzx
              lt r25.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r34.xyzx
              movc r15.z, r25.x, l(0), l(0.500000)
              add r26.xyz, r15.xyzx, r27.xyzx
              sample_l_indexable(texture3d)(float,float,float,float) r26.xyz, r26.xyzx, t17.xyzw, s4, l(0.000000)
              mul r28.xyz, r34.xyzx, r34.xyzx
              mul r28.xyz, r14.xxxx, r28.xyzx
              movc r17.z, r25.y, l(0), l(0.500000)
              add r25.xyw, r17.xyxz, r27.xyxz
              sample_l_indexable(texture3d)(float,float,float,float) r25.xyw, r25.xywx, t18.xywz, s4, l(0.000000)
              mul r25.xyw, r28.yyyy, r25.xyxw
              mad r25.xyw, r26.xyxz, r28.xxxx, r25.xyxw
              movc r20.z, r25.z, l(0), l(0.500000)
              add r26.xyz, r20.xyzx, r27.xyzx
              sample_l_indexable(texture3d)(float,float,float,float) r26.xyz, r26.xyzx, t19.xyzw, s4, l(0.000000)
              mad r25.xyz, r26.xyzx, r28.zzzz, r25.xywx
              sample_l_indexable(texturecubearray)(float,float,float,float) r26.xyz, r34.xyzw, t8.xyzw, s2, l(6.000000)
              and r27.xyz, r26.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
              ieq r27.xyz, r27.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
              or r14.w, r27.y, r27.x
              or r14.w, r27.z, r14.w
              movc r26.xyz, r14.wwww, l(1.000000,1.000000,0,0), r26.xyzx
              mul r27.xyz, r25.xyzx, r26.xyzx
              dp3 r14.w, r27.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
              mad r13.xyz, r25.xyzx, r26.xyzx, r13.xyzx
              mul r15.z, r7.w, r14.w
              mul r16.yzw, r14.xxxx, r16.yyzw
              dp3 r14.x, r16.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
              mad r14.x, r7.w, r14.w, r14.x
              div r14.x, r15.z, r14.x
              mad r24.xyz, r16.yzwy, r14.xxxx, r24.xyzx
            endif 
          endif 
        endif 
      endloop 
      mov r23.xyzw, r24.xyzw
      mov r8.yzw, r13.xxyz
      iadd r9.z, r9.z, l(32)
    endloop 
    mov r22.xyzw, r23.zxyw
    mov r21.xyz, r8.yzwy
    mov r22.xyzw, r22.yzxw
  else 
    mov r22.x, r21.w
  endif 
  max r0.w, r22.w, l(1.000000)
  rcp r0.w, r0.w
  mov_sat r22.w, r22.w
  mul r18.xyz, r0.wwww, r21.xyzx
  mul r19.xyz, r0.wwww, r22.xyzx
  lt r4.x, r22.w, l(0.990000)
  if_nz r4.x
    add r4.x, -r22.w, l(1.000000)
    mul r4.y, r4.x, cb2[19].x
    add r8.yzw, v5.xxyz, -cb2[35].xxyz
    mul r12.x, r8.y, cb2[35].w
    mul r12.yz, r8.zzwz, cb2[36].xxyx
    add_sat r8.yzw, r12.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
    mul r12.xy, r8.yzyy, cb2[36].zwzz
    mul r12.z, r8.w, cb2[37].x
    add r8.yzw, r12.xxyz, cb2[37].yyzw
    lt r9.yzw, l(0.000000, 0.000000, 0.000000, 0.000000), r2.xxyz
    movc r12.xyz, r9.yzwy, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
    mov r12.w, l(0)
    add r9.yzw, r8.yyzw, r12.wwwx
    sample_l_indexable(texture3d)(float,float,float,float) r9.yzw, r9.yzwy, t17.wxyz, s4, l(0.000000)
    mul r13.xyz, r2.xyzx, r2.xyzx
    mul r13.xyz, r4.yyyy, r13.xyzx
    add r14.xyz, r8.yzwy, r12.wwyw
    sample_l_indexable(texture3d)(float,float,float,float) r14.xyz, r14.xyzx, t18.xyzw, s4, l(0.000000)
    mul r14.xyz, r13.yyyy, r14.xyzx
    mad r9.yzw, r9.yyzw, r13.xxxx, r14.xxyz
    add r8.yzw, r8.yyzw, r12.wwwz
    sample_l_indexable(texture3d)(float,float,float,float) r8.yzw, r8.yzwy, t19.wxyz, s4, l(0.000000)
    mad r8.yzw, r8.yyzw, r13.zzzz, r9.yyzw
    mov r2.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r9.yzw, r2.xyzw, t8.wxyz, s2, l(6.000000)
    mul r8.yzw, r8.yyzw, r9.yyzw
    dp3 r2.w, r8.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
    mad r18.xyz, r21.xyzx, r0.wwww, r8.yzwy
    mov r10.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r8.yzw, r10.xyzw, t8.wxyz, s2, r6.z
    mad r0.w, cb2[19].x, r4.x, -r2.w
    mad r0.w, r1.y, r0.w, r2.w
    mad r19.xyz, r8.yzwy, r0.wwww, r19.xyzx
  endif 
else 
  mov r19.x, r18.w
endif 
add r0.w, r1.z, r1.x
log r0.w, |r0.w|
mul r0.w, r0.w, r4.w
exp r0.w, r0.w
add r0.w, r1.z, r0.w
add_sat r0.w, r0.w, l(-1.000000)
mul r12.xyz, r1.zzzz, r18.yzxy
mad r1.yz, r1.xxyx, l(0.000000, 0.984375, 0.984375, 0.000000), l(0.000000, 0.00781250, 0.00781250, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r1.yz, r1.yzyy, t5.zxyw, s2, l(0.000000)
mul r8.yzw, r0.wwww, r19.xxyz
mul r9.yzw, r1.yyyy, r8.yyzw
mul r13.xyz, r1.zzzz, r8.yzwy
sqrt r0.w, r4.w
mad r0.w, r0.w, l(0.500000), l(0.500000)
mul r0.w, r0.w, r0.w
mul r1.y, r0.w, l(0.500000)
mad r0.w, -r0.w, l(0.500000), l(1.000000)
mad r1.z, r1.x, r0.w, r1.y
mul r0.w, r0.w, r1.z
mul r1.y, r1.z, r1.y
dp3 r1.z, r2.xyzx, cb2[17].xyzx
ge r2.w, l(0.000000), |r1.z|
if_nz r2.w
  mov r4.x, l(0)
endif 
if_z r2.w
  mul r8.yzw, v5.yyyy, cb2[29].xxyz
  mad r8.yzw, v5.xxxx, cb2[28].xxyz, r8.yyzw
  mad r8.yzw, v5.zzzz, cb2[30].xxyz, r8.yyzw
  add r8.yzw, r8.yyzw, cb2[31].xxyz
  add r2.w, r8.w, -cb2[17].w
  mad r2.w, -r2.w, l(0.00006104), l(1.000000)
  mov_sat r4.y, r2.w
  eq r4.y, r2.w, r4.y
  if_nz r4.y
    mov r4.y, l(0)
    mov r5.w, l(0)
    loop 
      ge r6.z, r4.y, l(3.000000)
      breakc_nz r6.z
      ftou r6.z, r4.y
      add r14.xy, r8.yzyy, -cb2[r6.z + 20].xyxx
      max r6.w, |r14.y|, |r14.x|
      mul r5.w, r6.w, cb2[r6.z + 20].z
      lt r6.z, r5.w, l(1.000000)
      if_nz r6.z
        break 
      endif 
      add r4.y, r4.y, l(1.000000)
      mov r5.w, l(0)
    endloop 
  else 
    mov r4.y, l(3.000000)
    mov r5.w, l(0)
  endif 
  ge r6.z, r4.y, l(3.000000)
  if_nz r6.z
    mul r14.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
    rcp r15.xz, r14.xxxx
    mov r15.y, -r15.z
    mad r14.xyz, r8.yzyy, r15.xyzx, r14.yzyy
    add r15.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r14.xyz, r14.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r14.xyz, r15.xyzx, r14.xyzx
    mul r15.xy, r14.zyzz, cb2[32].xxxx
    round_ni r15.xy, r15.xyxx
    mul r6.w, r15.y, cb2[27].x
    mad r6.w, r6.w, cb2[32].x, r15.x
    ftou r6.w, r6.w
    iadd r6.w, r6.w, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r7.w, r6.w, l(0), t23.xxxx
    and r10.w, r7.w, l(0x40000000)
    ishl r11.w, r7.w, l(2)
    if_z r10.w
      and r10.w, r7.w, l(0x01ffffff)
      iadd r15.x, r6.w, r10.w
      ushr r6.w, r7.w, l(25)
      utof r6.w, r6.w
      mul r14.xyz, r6.wwww, r14.xyzx
      frc r14.xyz, r14.xyzx
      mul r14.xyz, r14.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
      ftou r14.xyz, r14.xyzx
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.z, r15.x, l(0), t23.xxxx
      ushr r16.xy, r14.zyzz, l(6, 6, 0, 0)
      and r6.w, r15.z, l(0xc0000000)
      iadd r7.w, r15.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r7.w, r7.w, l(0), t23.xxxx
      movc r7.w, r16.y, r15.z, r7.w
      ushr r10.w, r7.w, l(13)
      movc r7.w, r16.x, r10.w, r7.w
      and r7.w, r7.w, l(8191)
      iadd r16.x, r7.w, r15.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.z, r16.x, l(0), t23.xxxx
      mov r15.y, l(0)
      mov r16.y, l(1)
      movc r16.xyz, r6.wwww, r15.xyzx, r16.xyzx
      movc r17.yz, r6.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r18.xy, r14.zyzz, r17.yyyy
      and r18.xy, r18.xyxx, l(1, 1, 0, 0)
      and r7.w, r16.z, l(0xc0000000)
      iadd r10.w, r16.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r10.w, r10.w, l(0), t23.xxxx
      movc r10.w, r18.y, r16.z, r10.w
      ushr r14.w, r10.w, l(13)
      movc r10.w, r18.x, r14.w, r10.w
      and r10.w, r10.w, l(8191)
      iadd r17.x, r10.w, r16.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.w, r17.x, l(0), t23.xxxx
      movc r16.xyz, r7.wwww, r16.xyzx, r17.xzwx
      movc r15.xyz, r6.wwww, r15.xyzx, r16.xyzx
      and r6.w, r15.z, l(0xc0000000)
      if_z r6.w
        iadd r6.w, -r15.y, l(6)
        ushr r16.xy, r14.zyzz, r6.wwww
        or r6.w, r15.z, l(0x40000000)
        bfi r7.w, l(1), l(1), r16.y, l(0)
        bfi r7.w, l(1), l(0), r16.x, r7.w
        imul null, r7.w, r7.w, l(10)
        ushr r6.w, r6.w, r7.w
        and r6.w, r6.w, l(1023)
        iadd r16.x, r6.w, r15.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.w, r16.x, l(0), t23.xxxx
        iadd r16.yz, r15.yyyy, l(0, 1, 2, 0)
        iadd r6.w, -r16.y, l(6)
        ushr r15.yw, r14.zzzy, r6.wwww
        and r6.w, r16.w, l(0xc0000000)
        or r7.w, r16.w, l(0x40000000)
        bfi r10.w, l(1), l(1), r15.w, l(0)
        bfi r10.w, l(1), l(0), r15.y, r10.w
        imul null, r10.w, r10.w, l(10)
        ushr r7.w, r7.w, r10.w
        and r7.w, r7.w, l(1023)
        iadd r17.x, r7.w, r16.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.z, r17.x, l(0), t23.xxxx
        mov r17.y, r16.z
        movc r17.xyz, r6.wwww, r16.xywx, r17.xyzx
        iadd r7.w, -r17.y, l(6)
        ushr r15.yw, r14.zzzy, r7.wwww
        and r7.w, r17.z, l(0xc0000000)
        or r10.w, r17.z, l(0x40000000)
        bfi r14.w, l(1), l(1), r15.w, l(0)
        bfi r14.w, l(1), l(0), r15.y, r14.w
        imul null, r14.w, r14.w, l(10)
        ushr r10.w, r10.w, r14.w
        and r10.w, r10.w, l(1023)
        iadd r18.x, r10.w, r17.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.y, r18.x, l(0), t23.xxxx
        movc r15.yw, r7.wwww, r17.xxxz, r18.xxxy
        movc r15.xz, r6.wwww, r16.xxwx, r15.yywy
      endif 
      and r6.w, r15.z, l(0xc0000000)
      if_z r6.w
        ubfe r7.w, l(14), l(15), r15.z
        utof r7.w, r7.w
        mul r7.w, r7.w, cb2[27].w
        mul r7.w, r7.w, l(0.00006104)
        and r15.yw, r15.zzzz, l(0, 0x00007fff, 0, 0x20000000)
        utof r10.w, r15.y
        mul r10.w, r10.w, cb2[27].w
        mul r10.w, r10.w, l(0.00003052)
        and r14.w, r14.y, l(3)
        iadd r14.w, r14.w, r15.x
        iadd r14.w, r14.w, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r14.w, r14.w, l(0), t23.xxxx
        bfi r16.xyz, l(2, 2, 1, 0), l(3, 1, 4, 0), r14.xyzx, l(0, 0, 0, 0)
        ushr r14.x, r14.w, r16.x
        and r14.x, r14.x, l(255)
        utof r14.x, r14.x
        mul r14.x, r10.w, r14.x
        mad r14.x, r14.x, l(0.00392157), r7.w
        iadd r14.y, r16.y, l(1)
        ubfe r14.z, l(1), l(1), r14.z
        iadd r14.y, r14.z, r14.y
        iadd r14.y, r14.y, r15.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r14.y, r14.y, l(0), t23.xxxx
        ushr r14.y, r14.y, r16.z
        and r14.y, r14.y, l(0x0000ffff)
        utof r14.y, r14.y
        mul r10.w, r10.w, r14.y
        mad r7.w, r10.w, l(0.00001526), r7.w
        movc r11.w, r15.w, r14.x, r7.w
      else 
        and r7.w, r15.z, l(0x80000000)
        iadd r10.w, r15.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r10.w, r10.w, l(0), t23.xxxx
        movc r7.w, r7.w, r10.w, l(0)
        ishl r10.w, r15.z, l(2)
        ushr r14.x, r7.w, l(16)
        f16tof32 r14.x, r14.x
        and r7.w, r7.w, l(0x0000ffff)
        f16tof32 r7.w, r7.w
        mad r10.w, r8.y, r14.x, r10.w
        mad r7.w, r8.z, r7.w, r10.w
        movc r11.w, r6.w, r7.w, r11.w
      endif 
    endif 
    mad r6.w, -cb2[27].z, l(2.000000), r8.w
    lt r6.w, r11.w, r6.w
    movc r4.x, r6.w, l(0), l(1.000000)
  endif 
  if_z r6.z
    if_z cb2[58].y
      ftou r6.z, r4.y
      add r14.xy, r8.yzyy, -cb2[r6.z + 20].xyxx
      mul r6.zw, r14.xxxy, cb2[r6.z + 20].zzzz
      mad r14.xy, r6.zwzz, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r6.z, cb2[26].y
      add r14.z, r4.y, r6.z
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r6.z, r14.xyzx, t13.xxxx, s13, r2.w
      sample_l_indexable(texture2darray)(float,float,float,float) r6.w, r14.xyzx, t31.yzwx, s0, l(0.000000)
      add r6.z, r6.w, r6.z
      add_sat r6.z, r6.z, l(-1.000000)
      mul r6.w, r6.z, r6.z
      mul r4.x, r6.z, r6.w
    endif 
    if_nz cb2[58].y
      mov r14.x, -r6.x
      ftou r6.z, r4.y
      add r4.y, r4.y, l(1.000000)
      min r4.y, r4.y, l(2.000000)
      ftou r4.y, r4.y
      add r5.w, -r5.w, l(1.000000)
      mul r5.w, r5.w, l(28.000000)
      ftou r5.w, r5.w
      add r15.xy, r8.yzyy, -cb2[r6.z + 20].xyxx
      mul r15.xy, r15.xyxx, cb2[r6.z + 20].zzzz
      mad r15.xy, r15.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      add r8.yz, r8.yyzy, -cb2[r4.y + 20].xxyx
      mul r8.yz, r8.yyzy, cb2[r4.y + 20].zzzz
      mad r8.yz, r8.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      mov r14.y, r7.x
      mov r14.z, r6.x
      mov r6.w, l(0)
      mov r7.w, l(0)
      loop 
        uge r8.w, r7.w, l(8)
        breakc_nz r8.w
        ult r8.w, r5.w, r7.w
        movc r15.zw, r8.wwww, r8.yyyz, r15.xxxy
        movc r10.w, r8.w, cb2[r4.y + 20].w, cb2[r6.z + 20].w
        movc r8.w, r8.w, r4.y, r6.z
        dp2 r16.x, icb[r7.w + 0].yxyy, r14.xyxx
        dp2 r16.y, icb[r7.w + 0].yxyy, r14.yzyy
        mad r16.xy, r16.xyxx, r10.wwww, r15.zwzz
        iadd r8.w, r8.w, cb2[26].y
        utof r16.z, r8.w
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r8.w, r16.xyzx, t13.xxxx, s13, r2.w
        sample_l_indexable(texture2darray)(float,float,float,float) r10.w, r16.xyzx, t31.yzwx, s0, l(0.000000)
        add r8.w, r8.w, r10.w
        add_sat r8.w, r8.w, l(-1.000000)
        mad r6.w, r8.w, l(0.125000), r6.w
        iadd r7.w, r7.w, l(1)
      endloop 
      mul r2.w, r6.w, r6.w
      mul r4.x, r6.w, r2.w
    endif 
  endif 
endif 
lt r2.w, l(0.000000), |r1.z|
if_nz r2.w
  lt r2.w, l(0.000000), r4.x
  if_nz r2.w
    mul r2.w, r4.z, cb2[18].w
    mul r2.w, r2.w, l(0.250000)
    if_nz cb2[23].x
      add r14.xyz, v5.xyzx, cb1[24].xyzx
      mov r14.w, l(1.000000)
      dp4 r4.y, cb2[24].xyzw, r14.xyzw
      dp4 r5.w, cb2[25].xyzw, r14.xyzw
      frc r14.x, r4.y
      frc r14.y, r5.w
      iadd r4.y, l(-1), cb2[23].x
      utof r14.z, r4.y
      sample_l_indexable(texture2darray)(float,float,float,float) r8.yzw, r14.xyzx, t20.wxyz, s2, l(0.000000)
      add r8.yzw, r8.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
      mad r8.yzw, cb2[23].yyyy, r8.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
      mul r8.yzw, r8.yyzw, cb2[18].xxyz
    else 
      mov r8.yzw, cb2[18].xxyz
    endif 
    ushr r4.y, cb2[53].x, l(16)
    ult r5.w, l(0), r4.y
    and r5.w, r3.w, r5.w
    if_nz r5.w
      iadd r4.y, r4.y, cb2[0].x
      iadd r4.y, r4.y, l(-1)
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r5.w, r4.y, l(52), t12.xxxx
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.xyzw, r4.y, l(68), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r4.y, l(84), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r4.y, l(132), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r4.y, l(148), t12.xyzw
      mad r6.z, |r1.z|, l(-0.200000), l(0.400000)
      lt r6.w, r1.z, l(0.000000)
      movc r6.z, r6.w, -r6.z, r6.z
      mad r18.xyz, r2.xyzx, r6.zzzz, v5.xyzx
      mov r18.w, l(1.000000)
      dp4 r14.x, r14.xyzw, r18.xyzw
      dp4 r14.y, r15.xyzw, r18.xyzw
      mad r6.zw, r14.xxxy, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
      add r6.zw, r17.zzzw, r6.zzzw
      mul r6.zw, r17.xxxy, r6.zzzw
      div r14.xy, r5.wwww, r16.xzxx
      add r14.zw, -r14.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
      ge r14.zw, r6.zzzw, r14.zzzw
      ge r14.xy, r14.xyxx, r6.zwzz
      or r14.xy, r14.xyxx, r14.zwzz
      or r7.w, r14.y, r14.x
      if_z r7.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r7.w, r4.y, l(28), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.xyzw, r4.y, l(100), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xy, r4.y, l(164), t12.xyxx
        dp4 r4.y, r14.xyzw, r18.xyzw
        mov_sat r6.zw, r6.zzzw
        mad r14.xy, r6.zwzz, r16.xzxx, r16.ywyy
        add r4.y, r15.x, r4.y
        div r4.y, r4.y, r15.y
        max r4.y, r4.y, l(0.00006104)
        and r6.z, r7.w, l(0x0000ffff)
        if_nz cb2[58].y
          mov r15.x, -r6.x
          utof r16.z, r6.z
          mov r15.y, r7.x
          mov r15.z, r6.x
          mov r6.w, l(0)
          mov r7.w, l(0)
          loop 
            ige r10.w, r7.w, l(8)
            breakc_nz r10.w
            dp2 r17.x, icb[r7.w + 0].yxyy, r15.xyxx
            dp2 r17.y, icb[r7.w + 0].yxyy, r15.yzyy
            mad r16.xy, r17.xyxx, r5.wwww, r14.xyxx
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.w, r16.xyzx, t9.xxxx, s13, r4.y
            mad r6.w, r10.w, l(0.125000), r6.w
            iadd r7.w, r7.w, l(1)
          endloop 
        else 
          utof r14.z, r6.z
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r6.w, r14.xyzx, t9.xxxx, s13, r4.y
        endif 
        mul r4.y, r6.w, r6.w
        mul r4.y, r6.w, r4.y
      else 
        mov r4.y, l(1.000000)
      endif 
      mul r4.x, r4.y, r4.x
    else 
      and r4.y, cb2[53].x, l(0x0000ffff)
      ult r5.w, l(0), r4.y
      not r6.z, r3.w
      and r5.w, r5.w, r6.z
      if_nz r5.w
        iadd r4.y, r4.y, cb2[0].x
        iadd r4.y, r4.y, l(-1)
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r5.w, r4.y, l(52), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.xyzw, r4.y, l(68), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r4.y, l(84), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r4.y, l(132), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r4.y, l(148), t12.xyzw
        mad r6.z, |r1.z|, l(-0.200000), l(0.400000)
        lt r6.w, r1.z, l(0.000000)
        movc r6.z, r6.w, -r6.z, r6.z
        mad r18.xyz, r2.xyzx, r6.zzzz, v5.xyzx
        mov r18.w, l(1.000000)
        dp4 r14.x, r14.xyzw, r18.xyzw
        dp4 r14.y, r15.xyzw, r18.xyzw
        mad r6.zw, r14.xxxy, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
        add r6.zw, r17.zzzw, r6.zzzw
        mul r6.zw, r17.xxxy, r6.zzzw
        div r14.xy, r5.wwww, r16.xzxx
        add r14.zw, -r14.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
        ge r14.zw, r6.zzzw, r14.zzzw
        ge r14.xy, r14.xyxx, r6.zwzz
        or r14.xy, r14.xyxx, r14.zwzz
        or r7.w, r14.y, r14.x
        if_z r7.w
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r7.w, r4.y, l(28), t12.xxxx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.xyzw, r4.y, l(100), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xy, r4.y, l(164), t12.xyxx
          dp4 r4.y, r14.xyzw, r18.xyzw
          mov_sat r6.zw, r6.zzzw
          mad r14.xy, r6.zwzz, r16.xzxx, r16.ywyy
          add r4.y, r15.x, r4.y
          div r4.y, r4.y, r15.y
          max r4.y, r4.y, l(0.00006104)
          and r6.z, r7.w, l(0x0000ffff)
          if_nz cb2[58].y
            mov r15.x, -r6.x
            utof r16.z, r6.z
            mov r15.y, r7.x
            mov r15.z, r6.x
            mov r6.w, l(0)
            mov r7.w, l(0)
            loop 
              ige r10.w, r7.w, l(8)
              breakc_nz r10.w
              dp2 r17.x, icb[r7.w + 0].yxyy, r15.xyxx
              dp2 r17.y, icb[r7.w + 0].yxyy, r15.yzyy
              mad r16.xy, r17.xyxx, r5.wwww, r14.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.w, r16.xyzx, t9.xxxx, s13, r4.y
              mad r6.w, r10.w, l(0.125000), r6.w
              iadd r7.w, r7.w, l(1)
            endloop 
          else 
            utof r14.z, r6.z
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r6.w, r14.xyzx, t9.xxxx, s13, r4.y
          endif 
          mul r4.y, r6.w, r6.w
          mul r4.y, r6.w, r4.y
        else 
          mov r4.y, l(1.000000)
        endif 
        mul r4.x, r4.y, r4.x
      endif 
    endif 
    mad r4.y, -r1.x, l(0.500000), l(1.000000)
    mad r4.y, -|r1.z|, r4.y, l(1.000000)
    mul r4.y, r4.y, r4.y
    mad r4.y, -r4.y, l(0.620000), l(0.620000)
    add r4.y, -|r1.z|, r4.y
    mad r4.y, r4.w, r4.y, |r1.z|
    mul r4.y, r4.x, r4.y
    lt r5.w, l(0.000000), r1.z
    mad r14.xyz, r4.yyyy, r8.zwyz, r12.xyzx
    mov_sat r1.z, r1.z
    mad r15.xyz, -v5.xyzx, r1.wwww, cb2[17].xyzx
    dp3 r1.w, r15.xyzx, r15.xyzx
    rsq r1.w, r1.w
    mul r15.xyz, r1.wwww, r15.xyzx
    dp3 r1.w, r15.xyzx, r5.xyzx
    dp3 r4.y, r2.xyzx, r15.xyzx
    mad r6.z, |r4.y|, r4.z, -|r4.y|
    mad r4.y, |r4.y|, r6.z, l(1.000000)
    mad r6.z, r1.z, r0.w, r1.y
    mul r4.y, r4.y, r4.y
    mul r4.y, r6.z, r4.y
    rcp r4.y, r4.y
    mul r1.z, r2.w, r1.z
    mul r1.z, r1.z, r4.y
    mul r1.z, r4.x, r1.z
    mad r15.yzw, r1.zzzz, r8.yyzw, r13.xxyz
    add_sat r1.w, -r1.w, l(1.000000)
    mul r2.w, r1.w, r1.w
    mul r2.w, r2.w, r2.w
    mul r1.w, r1.w, r2.w
    mul r1.z, r1.w, r1.z
    mad r8.yzw, r1.zzzz, r8.yyzw, r9.yyzw
    mov r14.w, r12.z
    mov r12.w, r14.z
    movc r16.xyzw, r5.wwww, r14.zxyw, r12.zxyw
    mov r12.zw, r8.yyyz
    mov r14.zw, r9.yyyz
    movc r14.xyzw, r5.wwww, r12.xyzw, r14.xyzw
    mov r15.x, r8.w
    mov r13.w, r9.w
    movc r13.xyzw, r5.wwww, r15.yzwx, r13.xyzw
    mov r12.z, r16.w
    mov r12.xy, r14.xyxx
    mov r9.yz, r14.zzwz
    mov r9.w, r13.w
  else 
    mov r16.xyz, r12.zxyz
  endif 
else 
  mov r16.xyz, r12.zxyz
endif 
not r1.z, r3.w
mad r1.x, -r1.x, l(0.500000), l(1.000000)
mov r14.x, -r6.x
mov r15.xy, l(0,0,0,0)
mov r17.w, l(0)
mov r18.xyz, v5.xyzx
mov r18.w, l(1.000000)
mov r19.w, l(1.000000)
mov r14.z, r6.x
mov r20.w, l(1.000000)
mov r21.z, l(1.000000)
mov r22.w, l(1.000000)
mov r14.yw, r7.xxxx
mov r6.y, r14.w
mov r23.w, l(1.000000)
mov r7.y, r14.x
mov r7.z, r6.x
mov r24.w, l(1.000000)
mov r25.x, r7.x
mov r25.y, r14.x
mov r25.z, r6.x
mov r26.x, r7.x
mov r26.y, r14.x
mov r26.z, r6.x
mov r27.x, r7.x
mov r27.y, r14.x
mov r27.z, r6.x
mov r8.yzw, r16.xxyz
mov r28.xyz, r12.zxyz
mov r29.xyz, r9.yzwy
mov r30.xyz, r13.xyzx
mov r1.w, cb2[58].y
mov r2.w, l(0)
loop 
  uge r4.x, r2.w, cb2[0].x
  breakc_nz r4.x
  ushr r15.z, r2.w, l(5)
  iadd r17.xyz, r11.xyzx, r15.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r4.x, r17.xyzw, t6.xyzw
  mov r17.xyz, r8.yzwy
  mov r31.xyz, r28.xyzx
  mov r32.xyz, r29.xyzx
  mov r33.xyz, r30.xyzx
  mov r4.y, r1.w
  mov r5.w, r4.x
  loop 
    breakc_z r5.w
    firstbit_lo r6.z, r5.w
    ishl r6.w, l(1), r6.z
    and r7.w, r5.w, r6.w
    if_nz r7.w
      xor r5.w, r5.w, r6.w
      iadd r6.z, r2.w, r6.z
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r34.xyzw, r6.z, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r35.xy, r6.z, l(16), t11.xyxx
      add r34.xyz, r34.xyzx, -v5.xyzx
      mov r35.z, r34.w
      lt r34.xyz, |r34.xyzx|, r35.zxyz
      and r6.w, r34.y, r34.x
      and r6.w, r34.z, r6.w
      if_nz r6.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r6.z, l(0), t12.wxyz
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r6.z, l(16), t12.zxyw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r6.z, l(32), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r6.z, l(48), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r6.z, l(64), t12.yzwx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r6.z, l(80), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r6.z, l(96), t12.yzwx
        ubfe r6.w, l(3), l(24), r35.w
        switch r6.w
          case l(4)
          lt r6.w, l(0.000000), r40.x
          mov r41.xy, r39.zwzz
          mov r41.z, r40.w
          mad r42.xyz, -r41.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r34.yzwy
          add r43.xyz, r42.xyzx, -v5.xyzx
          dp3 r7.w, r41.xyzx, r43.xyzx
          div_sat r10.w, -r7.w, r40.x
          mad r44.xyz, r10.wwww, r41.xyzx, r42.xyzx
          movc r44.xyz, r6.wwww, r44.xyzx, r34.yzwy
          add r44.xyz, r44.xyzx, -v5.xyzx
          dp3 r11.w, r44.xyzx, r44.xyzx
          rsq r12.w, r11.w
          mul r44.xyz, r12.wwww, r44.xyzx
          dp3 r12.w, r2.xyzx, r44.xyzx
          lt r13.w, l(0.000000), |r12.w|
          if_nz r13.w
            sqrt r13.w, r11.w
            mul r15.z, r37.x, r37.x
            div r11.w, r15.z, r11.w
            min r11.w, r11.w, l(1.000000)
            mad_sat r15.zw, r13.wwww, r36.xxxz, r36.yyyw
            mul r44.xy, r15.zwzz, r15.zwzz
            mad r15.zw, r15.zzzw, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
            mul r15.zw, r15.zzzw, r44.xxxy
            mul r11.w, r11.w, r15.z
            mul r11.w, r15.w, r11.w
            lt r13.w, l(0.000000), r11.w
            if_nz r13.w
              ubfe r13.w, l(3), l(27), r35.w
              ine r13.w, r13.w, l(1)
              if_nz r13.w
                mad r13.w, |r12.w|, l(-0.200000), l(0.400000)
                lt r15.z, r12.w, l(0.000000)
                movc r13.w, r15.z, -r13.w, r13.w
                mad r44.xyz, r2.xyzx, r13.wwww, v5.xyzx
                add r44.xyz, -r38.xyzx, r44.xyzx
                max r13.w, |r44.z|, |r44.y|
                max r13.w, r13.w, |r44.x|
                div r13.w, r39.x, r13.w
                add r13.w, r39.y, r13.w
                dp3 r15.z, r44.xyzx, r44.xyzx
                rsq r15.z, r15.z
                max r13.w, r13.w, l(0.00006104)
                and r15.w, r35.w, l(0x0000ffff)
                utof r45.w, r15.w
                mov r15.w, l(0)
                mov r16.w, l(0)
                loop 
                  ige r21.w, r16.w, l(8)
                  breakc_nz r21.w
                  dp2 r46.y, icb[r16.w + 0].yxyy, r14.xyxx
                  dp2 r46.z, icb[r16.w + 0].yxyy, r14.yzyy
                  mul r46.yz, r37.yyyy, r46.yyzy
                  mul r46.x, r9.x, r46.y
                  mul r46.w, r8.x, r46.y
                  mad r45.xyz, r44.xyzx, r15.zzzz, r46.xzwx
                  sample_c_lz_indexable(texturecubearray)(float,float,float,float) r21.w, r45.xyzw, t10.xxxx, s13, r13.w
                  mad r15.w, r21.w, l(0.125000), r15.w
                  iadd r16.w, r16.w, l(1)
                endloop 
              else 
                mov r15.w, l(1.000000)
              endif 
              mul r11.w, r11.w, r15.w
              lt r13.w, l(0.000000), r11.w
              if_nz r13.w
                mul r13.w, r4.z, r35.x
                mul r13.w, r13.w, l(0.250000)
                dp3 r15.z, r41.xyzx, r10.xyzx
                dp3 r16.w, r10.xyzx, r43.xyzx
                mad r21.w, -r15.z, r15.z, r40.x
                mad r7.w, r15.z, r16.w, -r7.w
                div_sat r7.w, r7.w, r21.w
                div r15.z, r21.w, r40.x
                mul r15.z, r15.z, l(10.000000)
                min r15.z, r15.z, l(1.000000)
                add r7.w, -r10.w, r7.w
                mad r7.w, r15.z, r7.w, r10.w
                mad r41.xyz, r7.wwww, r41.xyzx, r42.xyzx
                movc r41.xyz, r6.wwww, r41.xyzx, r34.yzwy
                add r41.xyz, r41.xyzx, -v5.xyzx
                dp3 r6.w, r41.xyzx, r41.xyzx
                rsq r6.w, r6.w
                mul r42.xyz, r6.wwww, r41.xyzx
                ubfe r7.w, l(4), l(16), r35.w
                ult r10.w, l(0), r7.w
                and r10.w, r3.w, r10.w
                if_nz r10.w
                  iadd r7.w, r7.w, cb2[0].x
                  iadd r7.w, r7.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r10.w, r7.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r7.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r7.w, l(116), t12.xyzw
                  mad r15.z, |r12.w|, l(-0.200000), l(0.400000)
                  lt r16.w, r12.w, l(0.000000)
                  movc r15.z, r16.w, -r15.z, r15.z
                  mad r19.xyz, r2.xyzx, r15.zzzz, v5.xyzx
                  dp4 r15.z, r43.xyzw, r19.xyzw
                  dp4 r16.w, r44.xyzw, r19.xyzw
                  lt r21.w, r16.w, r15.z
                  if_z r21.w
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r7.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r7.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xyzw, r7.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r46.xyzw, r7.w, l(148), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r47.xy, r7.w, l(164), t12.xyxx
                    dp4 r43.x, r43.xyzw, r19.xyzw
                    dp4 r43.y, r44.xyzw, r19.xyzw
                    div r19.xy, r43.xyxx, r16.wwww
                    mad r19.xy, r19.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r19.xy, r46.zwzz, r19.xyxx
                    mul r19.xy, r46.xyxx, r19.xyxx
                    div r43.xy, r10.wwww, r45.xzxx
                    add r43.zw, -r43.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                    ge r43.zw, r19.xxxy, r43.zzzw
                    ge r43.xy, r43.xyxx, r19.xyxx
                    or r43.xy, r43.xyxx, r43.zwzz
                    or r19.z, r43.y, r43.x
                    mov_sat r19.xy, r19.xyxx
                    mad r43.xy, r19.xyxx, r45.xzxx, r45.ywyy
                    mul r19.x, r16.w, r47.y
                    mad r15.z, r47.x, r16.w, r15.z
                    div r15.z, r15.z, r19.x
                  else 
                    mov r19.z, l(-1)
                  endif 
                  or r16.w, r21.w, r19.z
                  if_z r16.w
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r7.w, r7.w, l(28), t12.xxxx
                    max r15.z, r15.z, l(0.00006104)
                    and r7.w, r7.w, l(0x0000ffff)
                    if_nz r4.y
                      utof r19.z, r7.w
                      mov r16.w, l(0)
                      mov r21.w, l(0)
                      loop 
                        ige r25.w, r21.w, l(8)
                        breakc_nz r25.w
                        dp2 r44.x, icb[r21.w + 0].yxyy, r14.xwxx
                        dp2 r44.y, icb[r21.w + 0].xyxx, r6.xyxx
                        mad r19.xy, r44.xyxx, r10.wwww, r43.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.x, r19.xyzx, t9.xxxx, s13, r15.z
                        mad r16.w, r19.x, l(0.125000), r16.w
                        iadd r21.w, r21.w, l(1)
                      endloop 
                    else 
                      utof r43.z, r7.w
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r16.w, r43.xyzx, t9.xxxx, s13, r15.z
                    endif 
                    mul r7.w, r16.w, r16.w
                    mul r7.w, r16.w, r7.w
                  else 
                    mov r7.w, l(1.000000)
                  endif 
                  mul r11.w, r7.w, r11.w
                else 
                  ubfe r7.w, l(4), l(20), r35.w
                  ult r10.w, l(0), r7.w
                  and r10.w, r1.z, r10.w
                  if_nz r10.w
                    iadd r7.w, r7.w, cb2[0].x
                    iadd r7.w, r7.w, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r10.w, r7.w, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r7.w, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r7.w, l(116), t12.xyzw
                    mad r15.z, |r12.w|, l(-0.200000), l(0.400000)
                    lt r19.x, r12.w, l(0.000000)
                    movc r15.z, r19.x, -r15.z, r15.z
                    mad r20.xyz, r2.xyzx, r15.zzzz, v5.xyzx
                    dp4 r15.z, r43.xyzw, r20.xyzw
                    dp4 r19.x, r44.xyzw, r20.xyzw
                    lt r19.y, r19.x, r15.z
                    if_z r19.y
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r7.w, l(68), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r7.w, l(84), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xyzw, r7.w, l(132), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r46.xyzw, r7.w, l(148), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r47.xy, r7.w, l(164), t12.xyxx
                      dp4 r43.x, r43.xyzw, r20.xyzw
                      dp4 r43.y, r44.xyzw, r20.xyzw
                      div r20.xy, r43.xyxx, r19.xxxx
                      mad r20.xy, r20.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                      add r20.xy, r46.zwzz, r20.xyxx
                      mul r20.xy, r46.xyxx, r20.xyxx
                      div r43.xy, r10.wwww, r45.xzxx
                      add r43.zw, -r43.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                      ge r43.zw, r20.xxxy, r43.zzzw
                      ge r43.xy, r43.xyxx, r20.xyxx
                      or r43.xy, r43.xyxx, r43.zwzz
                      or r19.z, r43.y, r43.x
                      mov_sat r20.xy, r20.xyxx
                      mad r20.xy, r20.xyxx, r45.xzxx, r45.ywyy
                      mul r21.w, r19.x, r47.y
                      mad r15.z, r47.x, r19.x, r15.z
                      div r15.z, r15.z, r21.w
                    else 
                      mov r19.z, l(-1)
                    endif 
                    or r19.x, r19.y, r19.z
                    if_z r19.x
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r7.w, r7.w, l(28), t12.xxxx
                      max r15.z, r15.z, l(0.00006104)
                      and r7.w, r7.w, l(0x0000ffff)
                      if_nz r4.y
                        utof r19.z, r7.w
                        mov r21.w, l(0)
                        mov r25.w, l(0)
                        loop 
                          ige r26.w, r25.w, l(8)
                          breakc_nz r26.w
                          dp2 r43.x, icb[r25.w + 0].xyxx, r7.xyxx
                          dp2 r43.y, icb[r25.w + 0].yxyy, r7.xzxx
                          mad r19.xy, r43.xyxx, r10.wwww, r20.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.x, r19.xyzx, t9.xxxx, s13, r15.z
                          mad r21.w, r19.x, l(0.125000), r21.w
                          iadd r25.w, r25.w, l(1)
                        endloop 
                      else 
                        utof r20.z, r7.w
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.w, r20.xyzx, t9.xxxx, s13, r15.z
                      endif 
                      mul r7.w, r21.w, r21.w
                      mul r7.w, r21.w, r7.w
                    else 
                      mov r7.w, l(1.000000)
                    endif 
                    mul r11.w, r7.w, r11.w
                  endif 
                endif 
                mad r7.w, -|r12.w|, r1.x, l(1.000000)
                mul r7.w, r7.w, r7.w
                mad r7.w, -r7.w, l(0.620000), l(0.620000)
                add r7.w, -|r12.w|, r7.w
                mad r7.w, r4.w, r7.w, |r12.w|
                mul r7.w, r11.w, r7.w
                mov r35.x, r34.x
                lt r10.w, l(0.000000), r12.w
                mad r19.xyz, r7.wwww, r35.xyzx, r17.xyzx
                dp3_sat r12.w, r2.xyzx, r42.xyzx
                mad r20.xyz, r41.xyzx, r6.wwww, r5.xyzx
                dp3 r6.w, r20.xyzx, r20.xyzx
                rsq r6.w, r6.w
                mul r20.xyz, r6.wwww, r20.xyzx
                dp3 r6.w, r20.xyzx, r5.xyzx
                dp3 r15.z, r2.xyzx, r20.xyzx
                mad r20.x, |r15.z|, r4.z, -|r15.z|
                mad r15.z, |r15.z|, r20.x, l(1.000000)
                mad r20.x, r12.w, r0.w, r1.y
                mul r15.z, r15.z, r15.z
                mul r15.z, r20.x, r15.z
                rcp r15.z, r15.z
                mul r12.w, r13.w, r12.w
                mul r12.w, r12.w, r15.z
                mul r11.w, r11.w, r12.w
                mad r20.xyz, r11.wwww, r35.xyzx, r33.xyzx
                add_sat r6.w, -r6.w, l(1.000000)
                mul r12.w, r6.w, r6.w
                mul r12.w, r12.w, r12.w
                mul r6.w, r6.w, r12.w
                mul r6.w, r6.w, r11.w
                mad r41.xyz, r6.wwww, r35.xyzx, r32.xyzx
                mad r42.xyz, r7.wwww, r35.xyzx, r31.xyzx
                movc r17.xyz, r10.wwww, r19.xyzx, r17.xyzx
                movc r31.xyz, r10.wwww, r31.xyzx, r42.xyzx
                movc r32.xyz, r10.wwww, r41.xyzx, r32.xyzx
                movc r33.xyz, r10.wwww, r20.xyzx, r33.xyzx
              endif 
            endif 
          endif 
          break 
          case l(2)
          mov r19.xy, r37.zwzz
          mov r19.z, r38.w
          add r19.xyz, r19.xyzx, -v5.xyzx
          dp3 r6.w, r19.xyzx, r19.xyzx
          rsq r6.w, r6.w
          mul r20.xyz, r6.wwww, r19.xyzx
          dp3 r7.w, r2.xyzx, r20.xyzx
          lt r10.w, l(0.000000), |r7.w|
          if_nz r10.w
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r6.z, l(112), t12.yzwx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r6.z, l(128), t12.zxyw
            mov r43.xyz, r41.xyzx
            mov r43.w, r42.y
            dp4 r10.w, r43.xyzw, r18.xyzw
            lt r11.w, r10.w, l(1.000000)
            if_nz r11.w
              mov r20.xyz, l(1.000000,1.000000,1.000000,0)
              mov r11.w, l(0)
            else 
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r6.z, l(172), t12.yzwx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xyzw, r6.z, l(188), t12.wxyz
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r46.xyzw, r6.z, l(204), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.w, r6.z, l(236), t12.xxxx
              add r47.xyz, r34.yzwy, -v5.xyzx
              mul r13.w, r37.x, r37.x
              dp3 r15.z, r47.xyzx, r47.xyzx
              div r13.w, r13.w, r15.z
              min r13.w, r13.w, l(1.000000)
              mad_sat r36.xy, r10.wwww, r36.xzxx, r36.ywyy
              mul r36.zw, r36.xxxy, r36.xxxy
              mad r36.xy, r36.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
              mul r36.xy, r36.xyxx, r36.zwzz
              mul r13.w, r13.w, r36.x
              mul r13.w, r36.y, r13.w
              mov r38.w, r39.x
              dp4 r36.x, r38.xyzw, r18.xyzw
              mov r47.xyz, r39.yzwy
              mov r47.w, r40.w
              dp4 r36.y, r47.xyzw, r18.xyzw
              div r21.xy, r36.xyxx, r10.wwww
              lt r10.w, r44.w, l(0.00048828)
              if_nz r10.w
                mov r45.y, r46.x
                mad_sat r36.xy, |r21.xyxx|, r45.zwzz, r45.xyxx
                mul r36.zw, r36.xxxy, r36.xxxy
                mad r36.xy, r36.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
                mul r36.xy, r36.xyxx, r36.zwzz
                mul r10.w, r36.y, r36.x
              else 
                mov r44.w, r45.y
                mul_sat r36.xyzw, |r21.yyxx|, r44.xyzw
                log r36.xyzw, r36.xyzw
                mul r36.xyzw, r36.xyzw, r45.xxxx
                exp r36.xyzw, r36.xyzw
                add r36.xy, r36.zwzz, r36.xyxx
                log r36.xy, r36.xyxx
                mul r36.xy, r36.xyxx, r46.xxxx
                exp r36.xy, r36.xyxx
                mul r15.z, r36.x, r45.z
                mad r25.w, r45.w, r36.y, l(-1.000000)
                mad r15.z, r45.w, r36.y, -r15.z
                div_sat r15.z, r25.w, r15.z
                mul r25.w, r15.z, r15.z
                mad r15.z, r15.z, l(-2.000000), l(3.000000)
                mul r10.w, r15.z, r25.w
              endif 
              mul r11.w, r10.w, r13.w
              and r10.w, r12.w, l(255)
              if_nz r10.w
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyz, r6.z, l(220), t12.xyzx
                dp3 r12.w, r46.yzwy, r21.xyzx
                dp3 r13.w, r36.xyzx, r21.xyzx
                frc r36.x, r12.w
                frc r36.y, r13.w
                iadd r10.w, r10.w, l(-1)
                utof r36.z, r10.w
                sample_l_indexable(texture2darray)(float,float,float,float) r20.xyz, r36.xyzx, t20.xyzw, s2, l(0.000000)
              else 
                mov r20.xyz, l(1.000000,1.000000,1.000000,0)
              endif 
            endif 
            mov r34.yz, r35.yyzy
            mul r20.xyz, r20.xyzx, r34.xyzx
            lt r10.w, l(0.000000), r11.w
            if_nz r10.w
              ubfe r10.w, l(3), l(27), r35.w
              ine r10.w, r10.w, l(1)
              if_nz r10.w
                mad r10.w, |r7.w|, l(-0.200000), l(0.400000)
                lt r12.w, r7.w, l(0.000000)
                movc r10.w, r12.w, -r10.w, r10.w
                mad r22.xyz, r2.xyzx, r10.wwww, v5.xyzx
                mov r41.xyz, r40.xyzx
                dp4 r10.w, r41.xyzw, r22.xyzw
                dp4 r12.w, r43.xyzw, r22.xyzw
                ge r13.w, r12.w, r10.w
                if_nz r13.w
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.y, r6.z, l(144), t12.xxxx
                  mov r38.w, r39.x
                  dp4 r21.x, r38.xyzw, r22.xyzw
                  mov r40.xyz, r39.yzwy
                  dp4 r21.y, r40.xyzw, r22.xyzw
                  div r21.xy, r21.xyxx, r12.wwww
                  mad_sat r21.xy, r21.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  mad r22.xy, r21.xyxx, r42.zwzz, r42.xyxx
                  div r6.z, r10.w, r12.w
                  max r6.z, r6.z, l(0.00006104)
                  and r10.w, r35.w, l(0x0000ffff)
                  if_nz r4.y
                    utof r34.z, r10.w
                    mov r12.w, l(0)
                    mov r13.w, l(0)
                    loop 
                      ige r15.z, r13.w, l(8)
                      breakc_nz r15.z
                      dp2 r21.x, icb[r13.w + 0].xyxx, r25.xyxx
                      dp2 r21.y, icb[r13.w + 0].yxyy, r25.xzxx
                      mad r34.xy, r21.xyxx, r37.yyyy, r22.xyxx
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r15.z, r34.xyzx, t9.xxxx, s13, r6.z
                      mad r12.w, r15.z, l(0.125000), r12.w
                      iadd r13.w, r13.w, l(1)
                    endloop 
                  else 
                    utof r22.z, r10.w
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.w, r22.xyzx, t9.xxxx, s13, r6.z
                  endif 
                  mul r6.z, r12.w, r12.w
                  mul r6.z, r12.w, r6.z
                else 
                  mov r6.z, l(1.000000)
                endif 
              else 
                mov r6.z, l(1.000000)
              endif 
              mul r6.z, r6.z, r11.w
              lt r10.w, l(0.000000), r6.z
              if_nz r10.w
                mul r10.w, r4.z, r35.x
                mul r10.w, r10.w, l(0.250000)
                ubfe r11.w, l(4), l(16), r35.w
                ult r13.w, l(0), r11.w
                and r13.w, r3.w, r13.w
                if_nz r13.w
                  iadd r11.w, r11.w, cb2[0].x
                  iadd r11.w, r11.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.w, r11.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r11.w, l(68), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r11.w, l(84), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r11.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r11.w, l(116), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r11.w, l(132), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r11.w, l(148), t12.xyzw
                  mad r15.z, |r7.w|, l(-0.200000), l(0.400000)
                  lt r21.x, r7.w, l(0.000000)
                  movc r15.z, r21.x, -r15.z, r15.z
                  mad r23.xyz, r2.xyzx, r15.zzzz, v5.xyzx
                  dp4 r21.x, r34.xyzw, r23.xyzw
                  dp4 r21.y, r36.xyzw, r23.xyzw
                  dp4 r15.z, r37.xyzw, r23.xyzw
                  dp4 r22.x, r38.xyzw, r23.xyzw
                  lt r22.y, r22.x, r15.z
                  div r21.xy, r21.xyxx, r22.xxxx
                  mad r21.xy, r21.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r21.xy, r40.zwzz, r21.xyxx
                  mul r21.xy, r40.xyxx, r21.xyxx
                  div r23.xy, r13.wwww, r39.xzxx
                  add r34.xy, -r23.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                  ge r34.xy, r21.xyxx, r34.xyxx
                  ge r23.xy, r23.xyxx, r21.xyxx
                  or r23.xy, r23.xyxx, r34.xyxx
                  or r22.z, r23.y, r23.x
                  or r22.y, r22.y, r22.z
                  if_z r22.y
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r22.y, r11.w, l(28), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.xy, r11.w, l(164), t12.xyxx
                    mov_sat r21.xy, r21.xyxx
                    mad r34.xy, r21.xyxx, r39.xzxx, r39.ywyy
                    mul r11.w, r22.x, r23.y
                    mad r15.z, r23.x, r22.x, r15.z
                    div r11.w, r15.z, r11.w
                    max r11.w, r11.w, l(0.00006104)
                    and r15.z, r22.y, l(0x0000ffff)
                    if_nz r4.y
                      utof r22.z, r15.z
                      mov r21.xy, l(0,0,0,0)
                      loop 
                        ige r23.x, r21.y, l(8)
                        breakc_nz r23.x
                        dp2 r23.x, icb[r21.y + 0].xyxx, r26.xyxx
                        dp2 r23.y, icb[r21.y + 0].yxyy, r26.xzxx
                        mad r22.xy, r23.xyxx, r13.wwww, r34.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.x, r22.xyzx, t9.xxxx, s13, r11.w
                        mad r21.x, r22.x, l(0.125000), r21.x
                        iadd r21.y, r21.y, l(1)
                      endloop 
                    else 
                      utof r34.z, r15.z
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.x, r34.xyzx, t9.xxxx, s13, r11.w
                    endif 
                    mul r11.w, r21.x, r21.x
                    mul r11.w, r21.x, r11.w
                  else 
                    mov r11.w, l(1.000000)
                  endif 
                  mul r6.z, r6.z, r11.w
                else 
                  ubfe r11.w, l(4), l(20), r35.w
                  ult r13.w, l(0), r11.w
                  and r13.w, r1.z, r13.w
                  if_nz r13.w
                    iadd r11.w, r11.w, cb2[0].x
                    iadd r11.w, r11.w, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.w, r11.w, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r11.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r11.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r11.w, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r11.w, l(116), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r11.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r11.w, l(148), t12.xyzw
                    mad r15.z, |r7.w|, l(-0.200000), l(0.400000)
                    lt r21.y, r7.w, l(0.000000)
                    movc r15.z, r21.y, -r15.z, r15.z
                    mad r24.xyz, r2.xyzx, r15.zzzz, v5.xyzx
                    dp4 r22.x, r34.xyzw, r24.xyzw
                    dp4 r22.y, r35.xyzw, r24.xyzw
                    dp4 r15.z, r36.xyzw, r24.xyzw
                    dp4 r21.y, r37.xyzw, r24.xyzw
                    lt r22.z, r21.y, r15.z
                    div r22.xy, r22.xyxx, r21.yyyy
                    mad r22.xy, r22.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r22.xy, r39.zwzz, r22.xyxx
                    mul r22.xy, r39.xyxx, r22.xyxx
                    div r23.xy, r13.wwww, r38.xzxx
                    add r24.xy, -r23.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                    ge r24.xy, r22.xyxx, r24.xyxx
                    ge r23.xy, r23.xyxx, r22.xyxx
                    or r23.xy, r23.xyxx, r24.xyxx
                    or r23.x, r23.y, r23.x
                    or r22.z, r22.z, r23.x
                    if_z r22.z
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r22.z, r11.w, l(28), t12.xxxx
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.xy, r11.w, l(164), t12.xyxx
                      mov_sat r22.xy, r22.xyxx
                      mad r24.xy, r22.xyxx, r38.xzxx, r38.ywyy
                      mul r11.w, r21.y, r23.y
                      mad r15.z, r23.x, r21.y, r15.z
                      div r11.w, r15.z, r11.w
                      max r11.w, r11.w, l(0.00006104)
                      and r15.z, r22.z, l(0x0000ffff)
                      if_nz r4.y
                        utof r22.z, r15.z
                        mov r21.y, l(0)
                        mov r23.x, l(0)
                        loop 
                          ige r23.y, r23.x, l(8)
                          breakc_nz r23.y
                          dp2 r34.x, icb[r23.x + 0].xyxx, r27.xyxx
                          dp2 r34.y, icb[r23.x + 0].yxyy, r27.xzxx
                          mad r22.xy, r34.xyxx, r13.wwww, r24.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.x, r22.xyzx, t9.xxxx, s13, r11.w
                          mad r21.y, r22.x, l(0.125000), r21.y
                          iadd r23.x, r23.x, l(1)
                        endloop 
                      else 
                        utof r24.z, r15.z
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.y, r24.xyzx, t9.xxxx, s13, r11.w
                      endif 
                      mul r11.w, r21.y, r21.y
                      mul r11.w, r21.y, r11.w
                    else 
                      mov r11.w, l(1.000000)
                    endif 
                    mul r6.z, r6.z, r11.w
                  endif 
                endif 
                mad r11.w, -|r7.w|, r1.x, l(1.000000)
                mul r11.w, r11.w, r11.w
                mad r11.w, -r11.w, l(0.620000), l(0.620000)
                add r11.w, -|r7.w|, r11.w
                mad r11.w, r4.w, r11.w, |r7.w|
                mul r11.w, r6.z, r11.w
                lt r13.w, l(0.000000), r7.w
                mad r22.xyz, r11.wwww, r20.xyzx, r17.xyzx
                mov_sat r7.w, r7.w
                mad r19.xyz, r19.xyzx, r6.wwww, r5.xyzx
                dp3 r6.w, r19.xyzx, r19.xyzx
                rsq r6.w, r6.w
                mul r19.xyz, r6.wwww, r19.xyzx
                dp3 r6.w, r19.xyzx, r5.xyzx
                dp3 r15.z, r2.xyzx, r19.xyzx
                mad r19.x, |r15.z|, r4.z, -|r15.z|
                mad r15.z, |r15.z|, r19.x, l(1.000000)
                mad r19.x, r7.w, r0.w, r1.y
                mul r15.z, r15.z, r15.z
                mul r15.z, r19.x, r15.z
                rcp r15.z, r15.z
                mul r7.w, r10.w, r7.w
                mul r7.w, r7.w, r15.z
                mul r6.z, r6.z, r7.w
                mad r19.xyz, r6.zzzz, r20.xyzx, r33.xyzx
                add_sat r6.w, -r6.w, l(1.000000)
                mul r7.w, r6.w, r6.w
                mul r7.w, r7.w, r7.w
                mul r6.w, r6.w, r7.w
                mul r6.z, r6.w, r6.z
                mad r23.xyz, r6.zzzz, r20.xyzx, r32.xyzx
                mad r20.xyz, r11.wwww, r20.xyzx, r31.xyzx
                movc r17.xyz, r13.wwww, r22.xyzx, r17.xyzx
                movc r31.xyz, r13.wwww, r31.xyzx, r20.xyzx
                movc r32.xyz, r13.wwww, r23.xyzx, r32.xyzx
                movc r33.xyz, r13.wwww, r19.xyzx, r33.xyzx
              endif 
            endif 
          endif 
          break 
          default 
          break 
        endswitch 
      endif 
    endif 
  endloop 
  mov r8.yzw, r17.xxyz
  mov r28.xyz, r31.xyzx
  mov r29.xyz, r32.xyzx
  mov r30.xyz, r33.xyzx
  iadd r2.w, r2.w, l(32)
endloop 
mul r1.xyz, r3.xyzx, r28.xyzx
mad r0.xyz, r8.yzwy, r0.xyzx, r1.xyzx
mul r1.xyz, r29.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
mad r1.xyz, r30.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
add r0.xyz, r0.xyzx, r1.xyzx
lt r0.w, l(0.000000), cb2[9].z
if_nz r0.w
  dp3 r0.w, v5.xyzx, v5.xyzx
  rsq r1.x, r0.w
  mul r1.xyz, r1.xxxx, v5.xyzx
  sqrt r0.w, r0.w
  lt r1.w, l(0.000000), cb2[13].w
  if_nz r1.w
    mad r2.xy, r0.wwww, cb2[15].xyxx, cb2[14].zwzz
    mul r2.xy, r2.xyxx, cb2[16].xyxx
    lt r1.w, l(0.010000), |v5.z|
    mul r2.zw, v5.zzzz, cb2[15].zzzw
    mul r3.xy, r2.zwzz, l(-1.442695, -1.442695, 0.000000, 0.000000)
    exp r3.xy, r3.xyxx
    add r3.xy, -r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    div r2.zw, r3.xxxy, r2.zzzw
    mul r2.zw, r2.zzzw, r2.xxxy
    movc r2.xy, r1.wwww, r2.zwzz, r2.xyxx
    mul r2.xzw, r2.xxxx, cb2[12].xxyz
    exp r2.xzw, r2.xxzw
    mul r3.xyz, r2.yyyy, cb2[12].xyzx
    exp r3.xyz, r3.xyzx
    add r3.xyz, -r2.xzwx, r3.xyzx
    mad r2.xyz, cb2[13].wwww, r3.xyzx, r2.xzwx
  else 
    mad r1.w, r0.w, cb2[15].x, cb2[14].z
    mul r1.w, r1.w, cb2[16].x
    lt r2.w, l(0.010000), |v5.z|
    mul r3.x, v5.z, cb2[15].z
    mul r3.y, r3.x, l(-1.442695)
    exp r3.y, r3.y
    add r3.y, -r3.y, l(1.000000)
    div r3.x, r3.y, r3.x
    mul r3.x, r1.w, r3.x
    movc r1.w, r2.w, r3.x, r1.w
    mul r3.xyz, r1.wwww, cb2[12].xyzx
    exp r2.xyz, r3.xyzx
  endif 
  mad r2.xyz, r2.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r2.xyz, r2.xyzx, -cb2[9].zzzz
  dp3 r1.x, cb2[7].yzwy, -r1.xyzx
  mad r1.y, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r1.z, cb2[8].w, -r1.x, l(1.000000)
  mul r1.z, r1.z, r1.z
  mul r1.z, r1.z, l(12.566371)
  div r1.y, r1.y, r1.z
  add r0.w, r0.w, -cb2[10].w
  mul_sat r0.w, r0.w, cb2[11].w
  mul r0.w, r0.w, r1.y
  mov_sat r1.x, r1.x
  mad r1.x, r1.x, r1.x, l(1.000000)
  mad r1.x, r1.x, l(0.05968310), l(-1.000000)
  mad r1.x, cb2[8].z, r1.x, l(1.000000)
  mul r1.yzw, r0.wwww, cb2[11].xxyz
  mad r1.xyz, r1.xxxx, cb2[10].xyzx, r1.yzwy
  mul r1.xyz, r1.xyzx, cb2[9].wwww
  add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r1.xyz, r1.xyzx, r3.xyzx
  mad r1.xyz, r0.xyzx, r2.xyzx, r1.xyzx
else 
  mul r0.w, v5.z, cb2[6].x
  mad r1.w, cb2[6].x, v5.z, cb2[5].x
  lt r2.x, |r0.w|, l(0.000100)
  min r2.y, r1.w, l(64.000000)
  mul r2.y, r2.y, l(1.442695)
  exp r2.y, r2.y
  mov_sat r2.z, cb2[6].z
  lt r2.w, r1.w, l(0.000000)
  add r1.w, r1.w, l(1.000000)
  movc r1.w, r2.w, r2.y, r1.w
  add r1.w, r1.w, -cb2[6].z
  movc r0.w, r2.x, l(1.000000), r0.w
  div r0.w, r1.w, r0.w
  movc r0.w, r2.x, r2.z, r0.w
  mul r0.w, r0.w, cb2[5].z
  dp3 r1.w, v5.xyzx, v5.xyzx
  sqrt r2.x, r1.w
  mad r0.w, r0.w, r2.x, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  rsq r1.w, r1.w
  mul r2.xyz, r1.wwww, v5.xyzx
  dp3 r1.w, cb2[7].yzwy, r2.xyzx
  mad_sat r1.w, cb2[8].y, r1.w, cb2[8].x
  add r2.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r2.xyzw, r1.wwww, r2.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r2.w
  add r2.xyz, -r0.xyzx, r2.xyzx
  mad r1.xyz, r0.wwww, r2.xyzx, r0.xyzx
endif 
mul r0.xyz, r1.xyzx, cb1[85].yyyy
ge r1.xyz, r0.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.xyz, r0.xyzx, r1.xyzx
min o0.xyz, r0.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
ret 
// Approximately 2273 instruction slots used
