//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:39:26 2021
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float3 colorTint;                  // Offset:  160 Size:    12
//   float baseNormalHeight;            // Offset:  172 Size:     4
//   float2 glossRange;                 // Offset:  176 Size:     8
//   float2 rotateUVs;                  // Offset:  184 Size:     8 [unused]
//   float2 scrollUVs;                  // Offset:  192 Size:     8 [unused]
//   float2 scaleUVs;                   // Offset:  200 Size:     8 [unused]
//   float2 offsetUVs;                  // Offset:  208 Size:     8 [unused]
//   float2 zoomUVs;                    // Offset:  216 Size:     8 [unused]
//   float zoomRate;                    // Offset:  224 Size:     4 [unused]
//   float layerDepth;                  // Offset:  228 Size:     4 [unused]
//   bool clampU;                       // Offset:  232 Size:     4 [unused]
//   bool clampV;                       // Offset:  236 Size:     4 [unused]
//   float2 wind1Parms;                 // Offset:  240 Size:     8 [unused]
//   float2 wind2Parms;                 // Offset:  248 Size:     8 [unused]
//   float2 wind3Parms;                 // Offset:  256 Size:     8 [unused]
//   float3 backlightScatterColor;      // Offset:  272 Size:    12
//   bool useAlphaControls;             // Offset:  284 Size:     4
//   float zFeatherDistance;            // Offset:  288 Size:     4
//   float falloffBegin;                // Offset:  292 Size:     4 [unused]
//   float falloffEnd;                  // Offset:  296 Size:     4 [unused]
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16 [unused]
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4 [unused]
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// colorSampler                      sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// normalSampler                     sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// floatZSampler                     texture  float4          2d             t0      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// colorMap                          texture  float4          2d            t21      1 
// tintMask                          texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// normalMap                         texture  float4          2d            t24      1 
// thicknessMap                      texture  float4          2d            t25      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyz 
// COLOR                    0   xyz         1     NONE   float       
// COLOR                    1      w        1     NONE   float      w
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 9     zw        2     NONE   float     zw
// TEXCOORD                 1   xyz         3     NONE   float   xyz 
// TEXCOORD                 2   xyz         4     NONE   float   xyz 
// TEXCOORD                 3   xyz         5     NONE   float   xyz 
// OFFPOSITION              0   xyz         6     NONE   float   xyz 
// SV_IsFrontFace           0   x           7    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[19], immediateIndexed
dcl_constantbuffer CB1[93], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2darray (float,float,float,float) t31
dcl_input_ps_siv linear noperspective v0.xyz, position
dcl_input_ps linear v1.w
dcl_input_ps linear v2.xy
dcl_input_ps linear v2.zw
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps_sgv constant v7.x, is_front_face
dcl_output o0.xyzw
dcl_temps 48
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v2.xyxx, t21.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r1.x, v2.xyxx, t22.xyzw, s1
add r1.yzw, cb0[10].xxyz, l(0.000000, -1.000000, -1.000000, -1.000000)
mad r1.xyz, r1.xxxx, r1.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r0.xyz, r0.xyzx, r1.xyzx
mul_sat r1.x, cb0[11].y, l(0.05882353)
sample_indexable(texture2d)(float,float,float,float) r1.yzw, v2.xyxx, t24.wxyz, s3
add r1.yzw, r1.yyzw, l(0.000000, -0.500000, -0.500000, -0.000000)
mad r1.yzw, cb0[10].wwww, r1.yyzw, l(0.000000, 0.500000, 0.500000, 0.000000)
mad r1.yz, r1.yyzy, l(0.000000, 1.99218750, 1.99218750, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
dp2 r2.x, r1.yzyy, r1.yzyy
add r2.x, -r2.x, l(1.000000)
max r2.x, r2.x, l(0.000000)
sqrt r2.x, r2.x
mul r1.w, r1.w, r1.w
mul r1.w, r1.w, l(0.33333334)
min r1.w, r1.w, l(1.000000)
movc r2.y, v7.x, l(1.000000), l(-1.000000)
dp3 r2.z, v3.xyzx, v3.xyzx
rsq r2.z, r2.z
mul r3.xyz, r2.zzzz, v3.xyzx
mul r3.xyz, r2.yyyy, r3.xyzx
dp3 r2.z, v4.xyzx, v4.xyzx
rsq r2.z, r2.z
mul r4.xyz, r2.zzzz, v4.xyzx
mul r4.xyz, r2.yyyy, r4.xyzx
dp3 r2.z, v5.xyzx, v5.xyzx
rsq r2.z, r2.z
mul r5.xyz, r2.zzzz, v5.xyzx
mul r2.yzw, r2.yyyy, r5.xxyz
mul r1.x, r1.x, l(-17.000000)
exp r1.x, r1.x
add r1.x, r1.x, r1.w
log r1.x, r1.x
mul r1.x, r1.x, l(-0.05882353)
max r5.y, r1.x, l(0.000000)
mul r1.xzw, r1.zzzz, r2.yyzw
mad r1.xyz, r4.xyzx, r1.yyyy, r1.xzwx
mad r1.xyz, r3.xyzx, r2.xxxx, r1.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
mul r0.w, r0.w, v1.w
sample_indexable(texture2d)(float,float,float,float) r2.x, v2.xyxx, t25.xyzw, s1
mul r2.yzw, r0.xxyz, cb0[17].xxyz
add r2.x, -r2.x, l(1.000000)
mul r2.xyz, r2.xxxx, r2.yzwy
mul r2.xyz, r0.xyzx, r2.xyzx
if_nz cb0[17].w
  dp3 r2.w, -v6.xyzx, -v6.xyzx
  rsq r2.w, r2.w
  mul r3.xyz, r2.wwww, -v6.xyzx
  dp3 r2.w, r3.xyzx, v3.xyzx
  mul r2.w, r2.w, r2.w
  mad_sat r2.w, r2.w, v2.z, v2.w
  mul r2.w, r0.w, r2.w
  ftoi r3.xy, v0.xyxx
  mov r3.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.x, r3.xyzw, t0.xyzw
  ge r3.y, r3.x, l(0.984375)
  mul r3.z, r3.x, l(1.01587307)
  mad r3.x, r3.x, l(64.000000), l(-63.000000)
  movc r3.x, r3.y, r3.x, r3.z
  max r3.x, r3.x, l(0.00000001)
  ge r3.y, v0.z, l(0.984375)
  mul r3.z, v0.z, l(1.01587307)
  mad r3.w, v0.z, l(64.000000), l(-63.000000)
  movc r3.y, r3.y, r3.w, r3.z
  max r3.y, r3.y, l(0.00000001)
  rcp r3.xy, r3.xyxx
  eq r3.z, cb0[18].x, l(0.000000)
  div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[18].x
  movc r3.z, r3.z, l(60000.000000), r3.w
  add r3.x, -r3.y, r3.x
  mul_sat r3.x, r3.z, r3.x
  mul o0.w, r2.w, r3.x
else 
  mov o0.w, r0.w
endif 
ftou r3.xy, v0.xyxx
ge r0.w, v0.z, l(0.984375)
mul r2.w, v0.z, l(1.01587307)
mad r3.z, v0.z, l(64.000000), l(-63.000000)
movc r0.w, r0.w, r3.z, r2.w
max r0.w, r0.w, l(0.00000001)
rcp r0.w, r0.w
dp3 r2.w, -v6.xyzx, -v6.xyzx
rsq r2.w, r2.w
mul r4.xyz, r2.wwww, -v6.xyzx
ine r3.z, cb1[92].x, l(0)
utof r5.zw, r3.yyyx
dp2 r3.w, r5.wzww, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r3.w, r3.w
mul r3.w, r3.w, l(52.982918)
frc r3.w, r3.w
mad r3.w, r3.w, l(6.28318548), cb1[70].w
sincos r6.x, r7.x, r3.w
dp2 r3.w, r5.zwzz, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r3.w, r3.w
mul r3.w, r3.w, l(52.982918)
frc r3.w, r3.w
mad r3.w, r3.w, l(6.28318548), cb1[70].w
sincos r8.x, r9.x, r3.w
dp3_sat r5.x, r1.xyzx, r4.xyzx
dp3 r3.w, -r4.xyzx, r1.xyzx
add r3.w, r3.w, r3.w
mad r10.xyz, r1.xyzx, -r3.wwww, -r4.xyzx
mul r3.w, r5.y, l(17.000000)
exp r3.w, r3.w
add r3.w, r3.w, l(2.000000)
div r3.w, l(2.000000), r3.w
sqrt r4.w, r3.w
add r5.z, -r5.y, l(1.000000)
mul r5.w, r5.z, l(5.000000)
mad r6.z, r5.z, l(5.000000), l(-2.500000)
mul r6.z, r6.z, l(0.400000)
max r6.z, r6.z, l(0.000000)
mad r8.yz, -r5.zzzz, l(0.000000, 10.000000, 5.000000, 0.000000), l(0.000000, 6.857410, 7.085000, 0.000000)
exp r6.w, r8.y
mul r6.w, r5.x, r6.w
mul r6.zw, r6.zzzw, l(0.000000, 0.000000, 100.000000, 9.136810)
mul r7.w, r5.z, r5.w
mad r7.w, -r7.w, l(2.015905), r8.z
exp r7.w, r7.w
mul r7.w, r5.x, r7.w
mul r7.w, r7.w, l(9.708090)
max r6.w, r6.w, r7.w
max r6.w, r6.w, l(1.268160)
iadd r7.w, cb2[0].y, -cb2[58].x
mul r0.w, r0.w, l(0.00781250)
min r0.w, r0.w, l(15.000000)
ftou r0.w, r0.w
ushr r11.xy, r3.xyxx, l(6, 6, 0, 0)
ishl r11.z, r0.w, l(4)
and r0.w, r7.w, l(-32)
iadd r3.x, -r0.w, r7.w
and r3.y, cb2[0].y, l(-32)
iadd r8.y, -r3.y, cb2[0].y
mov r12.xy, l(0,0,0,0)
mov r13.w, l(0)
mov r14.yz, l(0,0,1.000000,0)
mov r15.xy, l(0,0,0,0)
mov r16.x, l(1.000000)
mov r17.xy, l(0,0,0,0)
mov r18.xy, l(0,0,0,0)
mov r19.xyzw, l(0,0,0,0)
mov r20.yzw, l(0,0,0,0)
mov r8.z, r0.w
loop 
  uge r8.w, r8.z, cb2[0].y
  breakc_nz r8.w
  ushr r12.z, r8.z, l(5)
  iadd r13.xyz, r11.xyzx, r12.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r8.w, r13.xyzw, t7.yzwx
  ieq r9.y, r0.w, r8.z
  bfi r9.z, r3.x, l(0), l(0), r8.w
  movc r8.w, r9.y, r9.z, r8.w
  ieq r9.y, r3.y, r8.z
  ubfe r9.z, r8.y, l(0), r8.w
  movc r8.w, r9.y, r9.z, r8.w
  iadd r9.y, r8.z, cb2[0].x
  mov r21.xyzw, r19.xyzw
  mov r22.xyz, r20.yzwy
  mov r9.z, r8.w
  loop 
    breakc_z r9.z
    firstbit_lo r9.w, r9.z
    ishl r11.w, l(1), r9.w
    and r12.z, r9.z, r11.w
    if_nz r12.z
      xor r9.z, r9.z, r11.w
      iadd r11.w, r9.w, r9.y
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r23.xyzw, r11.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r13.xy, r11.w, l(16), t11.xyxx
      add r23.xyz, r23.xyzx, -v6.xyzx
      mov r13.z, r23.w
      lt r13.xyz, |r23.xyzx|, r13.zxyz
      and r11.w, r13.y, r13.x
      and r11.w, r13.z, r11.w
      if_nz r11.w
        iadd r9.w, r8.z, r9.w
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r23.xyzw, r9.w, l(0), t15.wxyz
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r12.zw, r9.w, l(96), t15.xxxy
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r9.w, l(116), t15.zwxy
        add r13.xyz, -r23.yzwy, v6.xyzx
        and r11.w, r24.w, l(0x0000ffff)
        ubfe r14.w, l(6), l(25), r24.w
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r25.xyzw, r11.w, l(0), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r26.xyzw, r11.w, l(16), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r11.w, l(32), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r11.w, l(48), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r11.w, l(64), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r11.w, l(80), t16.xyzw
        dp3 r15.w, r25.xyzx, r13.xyzx
        add_sat r15.w, r25.w, r15.w
        dp3 r16.z, r26.xyzx, r13.xyzx
        add_sat r16.z, r26.w, r16.z
        mul r15.w, r15.w, r16.z
        dp3 r16.z, r27.xyzx, r13.xyzx
        add_sat r16.z, r27.w, r16.z
        mul r15.w, r15.w, r16.z
        dp3 r16.z, r28.xyzx, r13.xyzx
        add_sat r16.z, r28.w, r16.z
        mul r15.w, r15.w, r16.z
        dp3 r16.z, r29.xyzx, r13.xyzx
        add_sat r16.z, r29.w, r16.z
        mul r15.w, r15.w, r16.z
        dp3 r16.z, r30.xyzx, r13.xyzx
        add_sat r16.z, r30.w, r16.z
        mul r14.x, r15.w, r16.z
        and r15.w, r12.z, l(1)
        movc r16.zw, r15.wwww, r14.xxxy, r14.zzzx
        mov r14.x, r12.z
        mov r25.xy, r16.zwzz
        mov r15.w, l(1)
        loop 
          ige r17.w, r15.w, r14.w
          breakc_nz r17.w
          iadd r17.w, r11.w, r15.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r26.xyzw, r17.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r17.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r17.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r17.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r17.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r17.w, l(80), t16.xyzw
          dp3 r17.w, r26.xyzx, r13.xyzx
          add_sat r17.w, r26.w, r17.w
          mul r17.w, r17.w, r25.x
          dp3 r18.w, r27.xyzx, r13.xyzx
          add_sat r18.w, r27.w, r18.w
          mul r17.w, r17.w, r18.w
          dp3 r18.w, r28.xyzx, r13.xyzx
          add_sat r18.w, r28.w, r18.w
          mul r17.w, r17.w, r18.w
          dp3 r18.w, r29.xyzx, r13.xyzx
          add_sat r18.w, r29.w, r18.w
          mul r17.w, r17.w, r18.w
          dp3 r18.w, r30.xyzx, r13.xyzx
          add_sat r18.w, r30.w, r18.w
          mul r17.w, r17.w, r18.w
          dp3 r18.w, r31.xyzx, r13.xyzx
          add_sat r18.w, r31.w, r18.w
          mul r25.x, r17.w, r18.w
          ushr r23.w, r14.x, l(2)
          ubfe r25.z, l(1), l(2), r14.x
          and r25.w, r23.w, l(2)
          max r26.x, r25.x, r25.y
          mad r17.w, -r17.w, r18.w, l(1.000000)
          mul r17.w, r17.w, r25.y
          movc r16.y, r25.w, r17.w, r26.x
          movc r25.xy, r25.zzzz, r25.xyxx, r16.xyxx
          iadd r15.w, r15.w, l(1)
          mov r14.x, r23.w
        endloop 
        mov_sat r25.y, r25.y
        mul r11.w, r12.w, r25.y
        lt r12.z, l(0.000000), r11.w
        if_nz r12.z
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r9.w, l(16), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r9.w, l(32), t15.yxwz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r9.w, l(48), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r9.w, l(64), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r9.w, l(80), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r9.w, l(132), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r9.w, l(148), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r9.w, l(164), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r9.w, l(180), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r9.w, l(196), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xy, r9.w, l(212), t15.xyxx
          mad r22.z, r25.y, r12.w, r22.z
          mul r9.w, r24.z, r11.w
          mov r24.z, r31.z
          dp3 r11.w, r10.xyzx, r24.xyzx
          dp3 r12.z, r13.xyzx, r24.xyzx
          add r12.z, -r31.w, r12.z
          ge r12.w, r12.z, l(0.000000)
          max r12.z, r6.z, |r12.z|
          movc r12.z, r12.w, r12.z, -r12.z
          max r11.w, -r11.w, l(0.00000010)
          div r11.w, r12.z, r11.w
          min r11.w, |r11.w|, l(131072.000000)
          mov r31.z, r32.z
          dp3 r12.z, r10.xyzx, r31.xyzx
          dp3 r12.w, r13.xyzx, r31.xyzx
          add r12.w, -r32.w, r12.w
          ge r14.x, r12.w, l(0.000000)
          max r12.w, r6.z, |r12.w|
          movc r12.w, r14.x, r12.w, -r12.w
          max r12.z, -r12.z, l(0.00000010)
          div r12.z, r12.w, r12.z
          min r11.w, r11.w, |r12.z|
          mov r32.z, r33.z
          dp3 r12.z, r10.xyzx, r32.xyzx
          dp3 r12.w, r13.xyzx, r32.xyzx
          add r12.w, -r33.w, r12.w
          ge r14.x, r12.w, l(0.000000)
          max r12.w, r6.z, |r12.w|
          movc r12.w, r14.x, r12.w, -r12.w
          max r12.z, -r12.z, l(0.00000010)
          div r12.z, r12.w, r12.z
          min r11.w, r11.w, |r12.z|
          mov r33.z, r34.z
          dp3 r12.z, r10.xyzx, r33.xyzx
          dp3 r12.w, r13.xyzx, r33.xyzx
          add r12.w, -r34.w, r12.w
          ge r14.x, r12.w, l(0.000000)
          max r12.w, r6.z, |r12.w|
          movc r12.w, r14.x, r12.w, -r12.w
          max r12.z, -r12.z, l(0.00000010)
          div r12.z, r12.w, r12.z
          min r11.w, r11.w, |r12.z|
          mov r34.z, r35.x
          dp3 r12.z, r10.xyzx, r34.xyzx
          dp3 r12.w, r13.xyzx, r34.xyzx
          add r12.w, -r35.y, r12.w
          ge r14.x, r12.w, l(0.000000)
          max r12.w, r6.z, |r12.w|
          movc r12.w, r14.x, r12.w, -r12.w
          max r12.z, -r12.z, l(0.00000010)
          div r12.z, r12.w, r12.z
          min r11.w, r11.w, |r12.z|
          mov r36.zw, r35.zzzw
          dp3 r12.z, r10.zxyz, r36.xzwx
          dp3 r12.w, r13.zxyz, r36.xzwx
          add r12.w, -r36.y, r12.w
          ge r14.x, r12.w, l(0.000000)
          max r12.w, r6.z, |r12.w|
          movc r12.w, r14.x, r12.w, -r12.w
          max r12.z, -r12.z, l(0.00000010)
          div r12.z, r12.w, r12.z
          min r11.w, r11.w, |r12.z|
          mov r24.x, r28.w
          mov r24.yz, r29.zzwz
          add r16.yzw, r13.xxyz, r24.xxyz
          mad r16.yzw, r10.xxyz, r11.wwww, r16.yyzw
          dp3 r12.z, r16.yzwy, r16.yzwy
          sqrt r12.z, r12.z
          div r11.w, r11.w, r12.z
          add r11.w, r11.w, r11.w
          sqrt r11.w, r11.w
          mad r11.w, r5.z, l(5.000000), r11.w
          add r11.w, r11.w, l(-0.844800)
          mov r23.y, r26.z
          mov r23.z, r27.x
          dp3 r31.x, r16.yzwy, r23.xyzx
          mov r24.xy, r26.xwxx
          mov r24.z, r27.w
          dp3 r31.y, r16.yzwy, r24.xyzx
          mov r27.x, r26.y
          dp3 r31.z, r16.yzwy, r27.xyzx
          ubfe r12.z, l(9), l(16), r24.w
          utof r31.w, r12.z
          sample_l_indexable(texturecubearray)(float,float,float,float) r16.yzw, r31.xyzw, t8.wxyz, s2, r11.w
          dp3 r26.x, r13.xyzx, r23.xyzx
          dp3 r26.y, r13.xyzx, r24.xyzx
          dp3 r26.z, r13.xyzx, r27.xyzx
          mad_sat r13.xyz, r26.xyzx, r28.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
          mov r29.z, r30.x
          mad r13.xyz, r13.xyzx, r29.xyzx, r30.yzwy
          dp3 r31.x, r1.xyzx, r23.xyzx
          dp3 r31.y, r1.xyzx, r24.xyzx
          dp3 r31.z, r1.xyzx, r27.xyzx
          lt r23.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r31.xyzx
          movc r15.z, r23.x, l(0), l(0.500000)
          add r24.xyz, r13.xyzx, r15.xyzx
          sample_l_indexable(texture3d)(float,float,float,float) r24.xyz, r24.xyzx, t17.xyzw, s4, l(0.000000)
          mul r25.xzw, r31.xxyz, r31.xxyz
          mul r25.xzw, r9.wwww, r25.xxzw
          movc r17.z, r23.y, l(0), l(0.500000)
          add r23.xyw, r13.xyxz, r17.xyxz
          sample_l_indexable(texture3d)(float,float,float,float) r23.xyw, r23.xywx, t18.xywz, s4, l(0.000000)
          mul r23.xyw, r25.zzzz, r23.xyxw
          mad r23.xyw, r24.xyxz, r25.xxxx, r23.xyxw
          movc r18.z, r23.z, l(0), l(0.500000)
          add r13.xyz, r13.xyzx, r18.xyzx
          sample_l_indexable(texture3d)(float,float,float,float) r13.xyz, r13.xyzx, t19.xyzw, s4, l(0.000000)
          mad r13.xyz, r13.xyzx, r25.wwww, r23.xywx
          sample_l_indexable(texturecubearray)(float,float,float,float) r23.xyz, r31.xyzw, t8.xyzw, s2, l(6.000000)
          mul r24.xyz, r13.xyzx, r23.xyzx
          dp3 r11.w, r24.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r21.xyz, r13.xyzx, r23.xyzx, r21.xyzx
          mul r12.z, r6.w, r11.w
          mul r13.xyz, r9.wwww, r16.yzwy
          dp3 r9.w, r13.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r9.w, r6.w, r11.w, r9.w
          div r9.w, r12.z, r9.w
          mov r23.x, r21.w
          mov r23.yz, r22.xxyx
          mad r22.xyw, r13.yzyx, r9.wwww, r23.yzyx
          mov r21.w, r22.w
        endif 
      endif 
    endif 
  endloop 
  mov r19.xyzw, r21.xyzw
  mov r20.yzw, r22.xxyz
  iadd r8.z, r8.z, l(32)
endloop 
lt r3.y, r20.w, l(1.000000)
if_nz r3.y
  mov r12.xy, l(0,0,0,0)
  mov r13.w, l(0)
  mov r14.yz, l(0,0,1.000000,0)
  mov r15.xy, l(0,0,0,0)
  mov r16.x, l(1.000000)
  mov r17.xy, l(0,0,0,0)
  mov r18.xy, l(0,0,0,0)
  mov r21.x, r19.w
  mov r21.yzw, r20.yyzw
  mov r8.yzw, r19.xxyz
  mov r3.y, r20.w
  mov r9.y, l(0)
  loop 
    uge r9.z, r9.y, r7.w
    breakc_nz r9.z
    ushr r12.z, r9.y, l(5)
    iadd r13.xyz, r11.xyzx, r12.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r9.z, r13.xyzw, t7.yzxw
    ieq r9.w, r0.w, r9.y
    ubfe r11.w, r3.x, l(0), r9.z
    movc r9.z, r9.w, r11.w, r9.z
    iadd r9.w, r9.y, cb2[0].x
    mov r22.xyzw, r21.xyzw
    mov r13.xyz, r8.yzwy
    mov r11.w, r3.y
    mov r12.z, r9.z
    loop 
      breakc_z r12.z
      firstbit_lo r12.w, r12.z
      ishl r14.w, l(1), r12.w
      and r15.w, r12.z, r14.w
      if_nz r15.w
        xor r12.z, r12.z, r14.w
        iadd r14.w, r9.w, r12.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r23.xyzw, r14.w, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r24.xy, r14.w, l(16), t11.xyxx
        add r23.xyz, r23.xyzx, -v6.xyzx
        mov r24.z, r23.w
        lt r23.xyz, |r23.xyzx|, r24.zxyz
        and r14.w, r23.y, r23.x
        and r14.w, r23.z, r14.w
        if_nz r14.w
          iadd r12.w, r9.y, r12.w
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r23.xyzw, r12.w, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r16.zw, r12.w, l(96), t15.xxxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r12.w, l(116), t15.zwxy
          add r25.xyz, -r23.yzwy, v6.xyzx
          and r14.w, r24.w, l(0x0000ffff)
          ubfe r15.w, l(6), l(25), r24.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r26.xyzw, r14.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r14.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r14.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r14.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r14.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r14.w, l(80), t16.xyzw
          dp3 r17.w, r26.xyzx, r25.xyzx
          add_sat r17.w, r26.w, r17.w
          dp3 r18.w, r27.xyzx, r25.xyzx
          add_sat r18.w, r27.w, r18.w
          mul r17.w, r17.w, r18.w
          dp3 r18.w, r28.xyzx, r25.xyzx
          add_sat r18.w, r28.w, r18.w
          mul r17.w, r17.w, r18.w
          dp3 r18.w, r29.xyzx, r25.xyzx
          add_sat r18.w, r29.w, r18.w
          mul r17.w, r17.w, r18.w
          dp3 r18.w, r30.xyzx, r25.xyzx
          add_sat r18.w, r30.w, r18.w
          mul r17.w, r17.w, r18.w
          dp3 r18.w, r31.xyzx, r25.xyzx
          add_sat r18.w, r31.w, r18.w
          mul r14.x, r17.w, r18.w
          and r17.w, r16.z, l(1)
          movc r26.xy, r17.wwww, r14.xyxx, r14.zxzz
          mov r14.x, r16.z
          mov r27.xy, r26.xyxx
          mov r17.w, l(1)
          loop 
            ige r18.w, r17.w, r15.w
            breakc_nz r18.w
            iadd r18.w, r14.w, r17.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r18.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r18.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r18.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r18.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r18.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r18.w, l(80), t16.xyzw
            dp3 r18.w, r28.xyzx, r25.xyzx
            add_sat r18.w, r28.w, r18.w
            mul r18.w, r18.w, r27.x
            dp3 r23.w, r29.xyzx, r25.xyzx
            add_sat r23.w, r29.w, r23.w
            mul r18.w, r18.w, r23.w
            dp3 r23.w, r30.xyzx, r25.xyzx
            add_sat r23.w, r30.w, r23.w
            mul r18.w, r18.w, r23.w
            dp3 r23.w, r31.xyzx, r25.xyzx
            add_sat r23.w, r31.w, r23.w
            mul r18.w, r18.w, r23.w
            dp3 r23.w, r32.xyzx, r25.xyzx
            add_sat r23.w, r32.w, r23.w
            mul r18.w, r18.w, r23.w
            dp3 r23.w, r33.xyzx, r25.xyzx
            add_sat r23.w, r33.w, r23.w
            mul r27.x, r18.w, r23.w
            ushr r25.w, r14.x, l(2)
            ubfe r26.z, l(1), l(2), r14.x
            and r26.w, r25.w, l(2)
            max r27.z, r27.x, r27.y
            mad r18.w, -r18.w, r23.w, l(1.000000)
            mul r18.w, r18.w, r27.y
            movc r16.y, r26.w, r18.w, r27.z
            movc r27.xy, r26.zzzz, r27.xyxx, r16.xyxx
            iadd r17.w, r17.w, l(1)
            mov r14.x, r25.w
          endloop 
          add_sat r14.x, -r11.w, r27.y
          mul r14.w, r16.w, r14.x
          lt r15.w, l(0.000000), r14.w
          if_nz r15.w
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r12.w, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r12.w, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r12.w, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r12.w, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r12.w, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r12.w, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r12.w, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r12.w, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r12.w, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r12.w, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xy, r12.w, l(212), t15.xyxx
            mad r22.w, r14.x, r16.w, r22.w
            mul r12.w, r24.z, r14.w
            mov r24.z, r32.z
            dp3 r14.x, r10.xyzx, r24.xyzx
            dp3 r14.w, r25.xyzx, r24.xyzx
            add r14.w, -r32.w, r14.w
            ge r15.w, r14.w, l(0.000000)
            max r14.w, r6.z, |r14.w|
            movc r14.w, r15.w, r14.w, -r14.w
            max r14.x, -r14.x, l(0.00000010)
            div r14.x, r14.w, r14.x
            min r14.x, |r14.x|, l(131072.000000)
            mov r32.z, r33.z
            dp3 r14.w, r10.xyzx, r32.xyzx
            dp3 r15.w, r25.xyzx, r32.xyzx
            add r15.w, -r33.w, r15.w
            ge r16.y, r15.w, l(0.000000)
            max r15.w, r6.z, |r15.w|
            movc r15.w, r16.y, r15.w, -r15.w
            max r14.w, -r14.w, l(0.00000010)
            div r14.w, r15.w, r14.w
            min r14.x, |r14.w|, r14.x
            mov r33.z, r34.z
            dp3 r14.w, r10.xyzx, r33.xyzx
            dp3 r15.w, r25.xyzx, r33.xyzx
            add r15.w, -r34.w, r15.w
            ge r16.y, r15.w, l(0.000000)
            max r15.w, r6.z, |r15.w|
            movc r15.w, r16.y, r15.w, -r15.w
            max r14.w, -r14.w, l(0.00000010)
            div r14.w, r15.w, r14.w
            min r14.x, |r14.w|, r14.x
            mov r34.z, r35.z
            dp3 r14.w, r10.xyzx, r34.xyzx
            dp3 r15.w, r25.xyzx, r34.xyzx
            add r15.w, -r35.w, r15.w
            ge r16.y, r15.w, l(0.000000)
            max r15.w, r6.z, |r15.w|
            movc r15.w, r16.y, r15.w, -r15.w
            max r14.w, -r14.w, l(0.00000010)
            div r14.w, r15.w, r14.w
            min r14.x, |r14.w|, r14.x
            mov r35.z, r36.x
            dp3 r14.w, r10.xyzx, r35.xyzx
            dp3 r15.w, r25.xyzx, r35.xyzx
            add r15.w, -r36.y, r15.w
            ge r16.y, r15.w, l(0.000000)
            max r15.w, r6.z, |r15.w|
            movc r15.w, r16.y, r15.w, -r15.w
            max r14.w, -r14.w, l(0.00000010)
            div r14.w, r15.w, r14.w
            min r14.x, |r14.w|, r14.x
            mov r37.zw, r36.zzzw
            dp3 r14.w, r10.zxyz, r37.xzwx
            dp3 r15.w, r25.zxyz, r37.xzwx
            add r15.w, -r37.y, r15.w
            ge r16.y, r15.w, l(0.000000)
            max r15.w, r6.z, |r15.w|
            movc r15.w, r16.y, r15.w, -r15.w
            max r14.w, -r14.w, l(0.00000010)
            div r14.w, r15.w, r14.w
            min r14.x, |r14.w|, r14.x
            mov r24.x, r29.w
            mov r24.yz, r30.zzwz
            add r16.yzw, r25.xxyz, r24.xxyz
            mad r16.yzw, r10.xxyz, r14.xxxx, r16.yyzw
            dp3 r14.w, r16.yzwy, r16.yzwy
            sqrt r14.w, r14.w
            div r14.x, r14.x, r14.w
            add r14.x, r14.x, r14.x
            sqrt r14.x, r14.x
            mad r14.x, r5.z, l(5.000000), r14.x
            add r14.x, r14.x, l(-0.844800)
            mov r23.y, r26.z
            mov r23.z, r28.x
            dp3 r32.x, r16.yzwy, r23.xyzx
            mov r24.xy, r26.xwxx
            mov r24.z, r28.w
            dp3 r32.y, r16.yzwy, r24.xyzx
            mov r28.x, r26.y
            dp3 r32.z, r16.yzwy, r28.xyzx
            ubfe r14.w, l(9), l(16), r24.w
            utof r32.w, r14.w
            sample_l_indexable(texturecubearray)(float,float,float,float) r16.yzw, r32.xyzw, t8.wxyz, s2, r14.x
            dp3 r26.x, r25.xyzx, r23.xyzx
            dp3 r26.y, r25.xyzx, r24.xyzx
            dp3 r26.z, r25.xyzx, r28.xyzx
            mad_sat r25.xyz, r26.xyzx, r29.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
            mov r30.z, r31.x
            mad r25.xyz, r25.xyzx, r30.xyzx, r31.yzwy
            dp3 r32.x, r1.xyzx, r23.xyzx
            dp3 r32.y, r1.xyzx, r24.xyzx
            dp3 r32.z, r1.xyzx, r28.xyzx
            lt r23.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r32.xyzx
            movc r15.z, r23.x, l(0), l(0.500000)
            add r24.xyz, r15.xyzx, r25.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r24.xyz, r24.xyzx, t17.xyzw, s4, l(0.000000)
            mul r26.xyz, r32.xyzx, r32.xyzx
            mul r26.xyz, r12.wwww, r26.xyzx
            movc r17.z, r23.y, l(0), l(0.500000)
            add r23.xyw, r17.xyxz, r25.xyxz
            sample_l_indexable(texture3d)(float,float,float,float) r23.xyw, r23.xywx, t18.xywz, s4, l(0.000000)
            mul r23.xyw, r26.yyyy, r23.xyxw
            mad r23.xyw, r24.xyxz, r26.xxxx, r23.xyxw
            movc r18.z, r23.z, l(0), l(0.500000)
            add r24.xyz, r18.xyzx, r25.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r24.xyz, r24.xyzx, t19.xyzw, s4, l(0.000000)
            mad r23.xyz, r24.xyzx, r26.zzzz, r23.xywx
            sample_l_indexable(texturecubearray)(float,float,float,float) r24.xyz, r32.xyzw, t8.xyzw, s2, l(6.000000)
            mul r25.xyz, r23.xyzx, r24.xyzx
            dp3 r14.x, r25.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r13.xyz, r23.xyzx, r24.xyzx, r13.xyzx
            mul r14.w, r6.w, r14.x
            mul r16.yzw, r12.wwww, r16.yyzw
            dp3 r12.w, r16.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r12.w, r6.w, r14.x, r12.w
            div r12.w, r14.w, r12.w
            mad r22.xyz, r16.yzwy, r12.wwww, r22.xyzx
          endif 
        endif 
      endif 
    endloop 
    mov r21.xyzw, r22.xyzw
    mov r8.yzw, r13.xxyz
    iadd r9.y, r9.y, l(32)
  endloop 
  mov r20.xyzw, r21.zxyw
  mov r19.xyz, r8.yzwy
  mov r20.xyzw, r20.yzxw
else 
  mov r20.x, r19.w
endif 
max r0.w, r20.w, l(1.000000)
rcp r0.w, r0.w
mov_sat r20.w, r20.w
mul r12.xyz, r0.wwww, r19.yzxy
mul r8.yzw, r0.wwww, r20.xxyz
lt r3.x, r20.w, l(0.990000)
if_nz r3.x
  add r3.x, -r20.w, l(1.000000)
  mul r3.y, r3.x, cb2[19].x
  add r9.yzw, v6.xxyz, -cb2[35].xxyz
  mul r13.x, r9.y, cb2[35].w
  mul r13.yz, r9.zzwz, cb2[36].xxyx
  add_sat r9.yzw, r13.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
  mul r13.xy, r9.yzyy, cb2[36].zwzz
  mul r13.z, r9.w, cb2[37].x
  add r9.yzw, r13.xxyz, cb2[37].yyzw
  lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r1.xyzx
  movc r13.xyz, r13.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
  mov r13.w, l(0)
  add r14.xyz, r9.yzwy, r13.wwxw
  sample_l_indexable(texture3d)(float,float,float,float) r14.xyz, r14.xyzx, t17.xyzw, s4, l(0.000000)
  mul r15.xyz, r1.xyzx, r1.xyzx
  mul r15.xyz, r3.yyyy, r15.xyzx
  add r16.xyz, r9.yzwy, r13.wwyw
  sample_l_indexable(texture3d)(float,float,float,float) r16.xyz, r16.xyzx, t18.xyzw, s4, l(0.000000)
  mul r16.xyz, r15.yyyy, r16.xyzx
  mad r14.xyz, r14.xyzx, r15.xxxx, r16.xyzx
  add r9.yzw, r9.yyzw, r13.wwwz
  sample_l_indexable(texture3d)(float,float,float,float) r9.yzw, r9.yzwy, t19.wxyz, s4, l(0.000000)
  mad r9.yzw, r9.yyzw, r15.zzzz, r14.xxyz
  mov r1.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r13.xyz, r1.xyzw, t8.xyzw, s2, l(6.000000)
  mul r9.yzw, r9.yyzw, r13.xxyz
  dp3 r1.w, r9.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
  mad r12.xyz, r19.yzxy, r0.wwww, r9.zwyz
  mov r10.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r9.yzw, r10.xyzw, t8.wxyz, s2, r5.w
  mad r0.w, cb2[19].x, r3.x, -r1.w
  mad r0.w, r5.y, r0.w, r1.w
  mad r8.yzw, r9.yyzw, r0.wwww, r8.yyzw
endif 
mad r3.xy, r5.xyxx, l(0.984375, 0.984375, 0.000000, 0.000000), l(0.00781250, 0.00781250, 0.000000, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r3.xy, r3.xyxx, t5.xyzw, s2, l(0.000000)
mul r5.yzw, r3.xxxx, r8.yyzw
mul r13.xyz, r3.yyyy, r8.yzwy
sqrt r0.w, r4.w
mad r0.w, r0.w, l(0.500000), l(0.500000)
mul r0.w, r0.w, r0.w
mul r1.w, r0.w, l(0.500000)
mad r0.w, -r0.w, l(0.500000), l(1.000000)
mad r3.x, r5.x, r0.w, r1.w
mul r0.w, r0.w, r3.x
mul r1.w, r1.w, r3.x
dp3 r3.x, r1.xyzx, cb2[17].xyzx
ge r3.y, l(0.000000), |r3.x|
if_nz r3.y
  mov r6.z, l(0)
endif 
if_z r3.y
  mul r8.yzw, v6.yyyy, cb2[29].xxyz
  mad r8.yzw, v6.xxxx, cb2[28].xxyz, r8.yyzw
  mad r8.yzw, v6.zzzz, cb2[30].xxyz, r8.yyzw
  add r8.yzw, r8.yyzw, cb2[31].xxyz
  add r3.y, r8.w, -cb2[17].w
  mad r3.y, -r3.y, l(0.00006104), l(1.000000)
  mov_sat r6.w, r3.y
  eq r6.w, r3.y, r6.w
  if_nz r6.w
    mov r6.w, l(0)
    mov r7.w, l(0)
    loop 
      ge r9.y, r6.w, l(3.000000)
      breakc_nz r9.y
      ftou r9.y, r6.w
      add r9.zw, r8.yyyz, -cb2[r9.y + 20].xxxy
      max r9.z, |r9.w|, |r9.z|
      mul r7.w, r9.z, cb2[r9.y + 20].z
      lt r9.y, r7.w, l(1.000000)
      if_nz r9.y
        break 
      endif 
      add r6.w, r6.w, l(1.000000)
      mov r7.w, l(0)
    endloop 
  else 
    mov r6.w, l(3.000000)
    mov r7.w, l(0)
  endif 
  ge r9.y, r6.w, l(3.000000)
  if_nz r9.y
    mul r14.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
    rcp r15.xz, r14.xxxx
    mov r15.y, -r15.z
    mad r14.xyz, r8.yzyy, r15.xyzx, r14.yzyy
    add r15.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r14.xyz, r14.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r14.xyz, r15.xyzx, r14.xyzx
    mul r9.zw, r14.zzzy, cb2[32].xxxx
    round_ni r9.zw, r9.zzzw
    mul r9.w, r9.w, cb2[27].x
    mad r9.z, r9.w, cb2[32].x, r9.z
    ftou r9.z, r9.z
    iadd r9.z, r9.z, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r9.w, r9.z, l(0), t23.xxxx
    and r10.w, r9.w, l(0x40000000)
    ishl r11.w, r9.w, l(2)
    if_z r10.w
      and r10.w, r9.w, l(0x01ffffff)
      iadd r15.x, r9.z, r10.w
      ushr r9.z, r9.w, l(25)
      utof r9.z, r9.z
      mul r14.xyz, r9.zzzz, r14.xyzx
      frc r14.xyz, r14.xyzx
      mul r14.xyz, r14.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
      ftou r14.xyz, r14.xyzx
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.z, r15.x, l(0), t23.xxxx
      ushr r9.zw, r14.zzzy, l(0, 0, 6, 6)
      and r10.w, r15.z, l(0xc0000000)
      iadd r14.w, r15.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r14.w, r14.w, l(0), t23.xxxx
      movc r9.w, r9.w, r15.z, r14.w
      ushr r14.w, r9.w, l(13)
      movc r9.z, r9.z, r14.w, r9.w
      and r9.z, r9.z, l(8191)
      iadd r16.x, r9.z, r15.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.z, r16.x, l(0), t23.xxxx
      mov r15.y, l(0)
      mov r16.y, l(1)
      movc r16.xyz, r10.wwww, r15.xyzx, r16.xyzx
      movc r17.yz, r10.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r9.zw, r14.zzzy, r17.yyyy
      and r9.zw, r9.zzzw, l(0, 0, 1, 1)
      and r14.w, r16.z, l(0xc0000000)
      iadd r15.w, r16.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.w, r15.w, l(0), t23.xxxx
      movc r9.w, r9.w, r16.z, r15.w
      ushr r15.w, r9.w, l(13)
      movc r9.z, r9.z, r15.w, r9.w
      and r9.z, r9.z, l(8191)
      iadd r17.x, r9.z, r16.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.w, r17.x, l(0), t23.xxxx
      movc r16.xyz, r14.wwww, r16.xyzx, r17.xzwx
      movc r15.xyz, r10.wwww, r15.xyzx, r16.xyzx
      and r9.z, r15.z, l(0xc0000000)
      if_z r9.z
        iadd r9.z, -r15.y, l(6)
        ushr r9.zw, r14.zzzy, r9.zzzz
        or r10.w, r15.z, l(0x40000000)
        bfi r9.w, l(1), l(1), r9.w, l(0)
        bfi r9.z, l(1), l(0), r9.z, r9.w
        imul null, r9.z, r9.z, l(10)
        ushr r9.z, r10.w, r9.z
        and r9.z, r9.z, l(1023)
        iadd r16.x, r9.z, r15.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.w, r16.x, l(0), t23.xxxx
        iadd r16.yz, r15.yyyy, l(0, 1, 2, 0)
        iadd r9.z, -r16.y, l(6)
        ushr r9.zw, r14.zzzy, r9.zzzz
        and r10.w, r16.w, l(0xc0000000)
        or r14.w, r16.w, l(0x40000000)
        bfi r9.w, l(1), l(1), r9.w, l(0)
        bfi r9.z, l(1), l(0), r9.z, r9.w
        imul null, r9.z, r9.z, l(10)
        ushr r9.z, r14.w, r9.z
        and r9.z, r9.z, l(1023)
        iadd r17.x, r9.z, r16.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.z, r17.x, l(0), t23.xxxx
        mov r17.y, r16.z
        movc r17.xyz, r10.wwww, r16.xywx, r17.xyzx
        iadd r9.z, -r17.y, l(6)
        ushr r9.zw, r14.zzzy, r9.zzzz
        and r14.w, r17.z, l(0xc0000000)
        or r15.y, r17.z, l(0x40000000)
        bfi r9.w, l(1), l(1), r9.w, l(0)
        bfi r9.z, l(1), l(0), r9.z, r9.w
        imul null, r9.z, r9.z, l(10)
        ushr r9.z, r15.y, r9.z
        and r9.z, r9.z, l(1023)
        iadd r18.x, r9.z, r17.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.y, r18.x, l(0), t23.xxxx
        movc r9.zw, r14.wwww, r17.xxxz, r18.xxxy
        movc r15.xz, r10.wwww, r16.xxwx, r9.zzwz
      endif 
      and r9.z, r15.z, l(0xc0000000)
      if_z r9.z
        ubfe r9.w, l(14), l(15), r15.z
        utof r9.w, r9.w
        mul r9.w, r9.w, cb2[27].w
        mul r9.w, r9.w, l(0.00006104)
        and r15.yw, r15.zzzz, l(0, 0x00007fff, 0, 0x20000000)
        utof r10.w, r15.y
        mul r10.w, r10.w, cb2[27].w
        mul r10.w, r10.w, l(0.00003052)
        and r14.w, r14.y, l(3)
        iadd r14.w, r14.w, r15.x
        iadd r14.w, r14.w, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r14.w, r14.w, l(0), t23.xxxx
        bfi r16.xyz, l(2, 2, 1, 0), l(3, 1, 4, 0), r14.xyzx, l(0, 0, 0, 0)
        ushr r14.x, r14.w, r16.x
        and r14.x, r14.x, l(255)
        utof r14.x, r14.x
        mul r14.x, r10.w, r14.x
        mad r14.x, r14.x, l(0.00392157), r9.w
        iadd r14.y, r16.y, l(1)
        ubfe r14.z, l(1), l(1), r14.z
        iadd r14.y, r14.z, r14.y
        iadd r14.y, r14.y, r15.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r14.y, r14.y, l(0), t23.xxxx
        ushr r14.y, r14.y, r16.z
        and r14.y, r14.y, l(0x0000ffff)
        utof r14.y, r14.y
        mul r10.w, r10.w, r14.y
        mad r9.w, r10.w, l(0.00001526), r9.w
        movc r11.w, r15.w, r14.x, r9.w
      else 
        and r9.w, r15.z, l(0x80000000)
        iadd r10.w, r15.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r10.w, r10.w, l(0), t23.xxxx
        movc r9.w, r9.w, r10.w, l(0)
        ishl r10.w, r15.z, l(2)
        ushr r14.x, r9.w, l(16)
        f16tof32 r14.x, r14.x
        and r9.w, r9.w, l(0x0000ffff)
        f16tof32 r9.w, r9.w
        mad r10.w, r8.y, r14.x, r10.w
        mad r9.w, r8.z, r9.w, r10.w
        movc r11.w, r9.z, r9.w, r11.w
      endif 
    endif 
    mad r8.w, -cb2[27].z, l(2.000000), r8.w
    lt r8.w, r11.w, r8.w
    movc r6.z, r8.w, l(0), l(1.000000)
  endif 
  if_z r9.y
    if_z cb2[58].y
      ftou r8.w, r6.w
      add r9.yz, r8.yyzy, -cb2[r8.w + 20].xxyx
      mul r9.yz, r9.yyzy, cb2[r8.w + 20].zzzz
      mad r14.xy, r9.yzyy, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r8.w, cb2[26].y
      add r14.z, r6.w, r8.w
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r8.w, r14.xyzx, t13.xxxx, s13, r3.y
      sample_l_indexable(texture2darray)(float,float,float,float) r9.y, r14.xyzx, t31.yxzw, s0, l(0.000000)
      add r8.w, r8.w, r9.y
      add_sat r8.w, r8.w, l(-1.000000)
      mul r9.y, r8.w, r8.w
      mul r6.z, r8.w, r9.y
    endif 
    if_nz cb2[58].y
      mov r14.x, -r6.x
      ftou r8.w, r6.w
      add r6.w, r6.w, l(1.000000)
      min r6.w, r6.w, l(2.000000)
      ftou r6.w, r6.w
      add r7.w, -r7.w, l(1.000000)
      mul r7.w, r7.w, l(28.000000)
      ftou r7.w, r7.w
      add r9.yz, r8.yyzy, -cb2[r8.w + 20].xxyx
      mul r9.yz, r9.yyzy, cb2[r8.w + 20].zzzz
      mad r9.yz, r9.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      add r8.yz, r8.yyzy, -cb2[r6.w + 20].xxyx
      mul r8.yz, r8.yyzy, cb2[r6.w + 20].zzzz
      mad r8.yz, r8.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      mov r14.y, r7.x
      mov r14.z, r6.x
      mov r9.w, l(0)
      mov r10.w, l(0)
      loop 
        uge r11.w, r10.w, l(8)
        breakc_nz r11.w
        ult r11.w, r7.w, r10.w
        movc r15.xy, r11.wwww, r8.yzyy, r9.yzyy
        movc r14.w, r11.w, cb2[r6.w + 20].w, cb2[r8.w + 20].w
        movc r11.w, r11.w, r6.w, r8.w
        dp2 r16.x, icb[r10.w + 0].yxyy, r14.xyxx
        dp2 r16.y, icb[r10.w + 0].yxyy, r14.yzyy
        mad r15.xy, r16.xyxx, r14.wwww, r15.xyxx
        iadd r11.w, r11.w, cb2[26].y
        utof r15.z, r11.w
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r11.w, r15.xyzx, t13.xxxx, s13, r3.y
        sample_l_indexable(texture2darray)(float,float,float,float) r14.w, r15.xyzx, t31.yzwx, s0, l(0.000000)
        add r11.w, r11.w, r14.w
        add_sat r11.w, r11.w, l(-1.000000)
        mad r9.w, r11.w, l(0.125000), r9.w
        iadd r10.w, r10.w, l(1)
      endloop 
      mul r3.y, r9.w, r9.w
      mul r6.z, r9.w, r3.y
    endif 
  endif 
endif 
lt r3.y, l(0.000000), |r3.x|
if_nz r3.y
  lt r3.y, l(0.000000), r6.z
  if_nz r3.y
    mul r3.y, r3.w, cb2[18].w
    mul r3.y, r3.y, l(0.250000)
    if_nz cb2[23].x
      add r14.xyz, v6.xyzx, cb1[24].xyzx
      mov r14.w, l(1.000000)
      dp4 r6.w, cb2[24].xyzw, r14.xyzw
      dp4 r7.w, cb2[25].xyzw, r14.xyzw
      frc r14.x, r6.w
      frc r14.y, r7.w
      iadd r6.w, l(-1), cb2[23].x
      utof r14.z, r6.w
      sample_l_indexable(texture2darray)(float,float,float,float) r8.yzw, r14.xyzx, t20.wxyz, s2, l(0.000000)
      add r8.yzw, r8.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
      mad r8.yzw, cb2[23].yyyy, r8.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
      mul r8.yzw, r8.yyzw, cb2[18].xxyz
    else 
      mov r8.yzw, cb2[18].xxyz
    endif 
    ushr r6.w, cb2[53].x, l(16)
    ult r7.w, l(0), r6.w
    and r7.w, r3.z, r7.w
    if_nz r7.w
      iadd r6.w, r6.w, cb2[0].x
      iadd r6.w, r6.w, l(-1)
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r7.w, r6.w, l(52), t12.xxxx
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.xyzw, r6.w, l(68), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r6.w, l(84), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r6.w, l(132), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r6.w, l(148), t12.xyzw
      mad r9.y, |r3.x|, l(-0.200000), l(0.400000)
      lt r9.z, r3.x, l(0.000000)
      movc r9.y, r9.z, -r9.y, r9.y
      mad r18.xyz, r1.xyzx, r9.yyyy, v6.xyzx
      mov r18.w, l(1.000000)
      dp4 r14.x, r14.xyzw, r18.xyzw
      dp4 r14.y, r15.xyzw, r18.xyzw
      mad r9.yz, r14.xxyx, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      add r9.yz, r17.zzwz, r9.yyzy
      mul r9.yz, r17.xxyx, r9.yyzy
      div r14.xy, r7.wwww, r16.xzxx
      add r14.zw, -r14.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
      ge r14.zw, r9.yyyz, r14.zzzw
      ge r14.xy, r14.xyxx, r9.yzyy
      or r14.xy, r14.xyxx, r14.zwzz
      or r9.w, r14.y, r14.x
      if_z r9.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r9.w, r6.w, l(28), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.xyzw, r6.w, l(100), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xy, r6.w, l(164), t12.xyxx
        dp4 r6.w, r14.xyzw, r18.xyzw
        mov_sat r9.yz, r9.yyzy
        mad r14.xy, r9.yzyy, r16.xzxx, r16.ywyy
        add r6.w, r15.x, r6.w
        div r6.w, r6.w, r15.y
        max r6.w, r6.w, l(0.00006104)
        and r9.y, r9.w, l(0x0000ffff)
        if_nz cb2[58].y
          mov r15.x, -r6.x
          utof r16.z, r9.y
          mov r15.y, r7.x
          mov r15.z, r6.x
          mov r9.zw, l(0,0,0,0)
          loop 
            ige r10.w, r9.w, l(8)
            breakc_nz r10.w
            dp2 r17.x, icb[r9.w + 0].yxyy, r15.xyxx
            dp2 r17.y, icb[r9.w + 0].yxyy, r15.yzyy
            mad r16.xy, r17.xyxx, r7.wwww, r14.xyxx
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.w, r16.xyzx, t9.xxxx, s13, r6.w
            mad r9.z, r10.w, l(0.125000), r9.z
            iadd r9.w, r9.w, l(1)
          endloop 
        else 
          utof r14.z, r9.y
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r9.z, r14.xyzx, t9.xxxx, s13, r6.w
        endif 
        mul r6.w, r9.z, r9.z
        mul r6.w, r9.z, r6.w
      else 
        mov r6.w, l(1.000000)
      endif 
      mul r6.z, r6.w, r6.z
    else 
      and r6.w, cb2[53].x, l(0x0000ffff)
      ult r7.w, l(0), r6.w
      not r9.y, r3.z
      and r7.w, r7.w, r9.y
      if_nz r7.w
        iadd r6.w, r6.w, cb2[0].x
        iadd r6.w, r6.w, l(-1)
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r7.w, r6.w, l(52), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.xyzw, r6.w, l(68), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r6.w, l(84), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r6.w, l(132), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r6.w, l(148), t12.xyzw
        mad r9.y, |r3.x|, l(-0.200000), l(0.400000)
        lt r9.z, r3.x, l(0.000000)
        movc r9.y, r9.z, -r9.y, r9.y
        mad r18.xyz, r1.xyzx, r9.yyyy, v6.xyzx
        mov r18.w, l(1.000000)
        dp4 r14.x, r14.xyzw, r18.xyzw
        dp4 r14.y, r15.xyzw, r18.xyzw
        mad r9.yz, r14.xxyx, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
        add r9.yz, r17.zzwz, r9.yyzy
        mul r9.yz, r17.xxyx, r9.yyzy
        div r14.xy, r7.wwww, r16.xzxx
        add r14.zw, -r14.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
        ge r14.zw, r9.yyyz, r14.zzzw
        ge r14.xy, r14.xyxx, r9.yzyy
        or r14.xy, r14.xyxx, r14.zwzz
        or r9.w, r14.y, r14.x
        if_z r9.w
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r9.w, r6.w, l(28), t12.xxxx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.xyzw, r6.w, l(100), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xy, r6.w, l(164), t12.xyxx
          dp4 r6.w, r14.xyzw, r18.xyzw
          mov_sat r9.yz, r9.yyzy
          mad r14.xy, r9.yzyy, r16.xzxx, r16.ywyy
          add r6.w, r15.x, r6.w
          div r6.w, r6.w, r15.y
          max r6.w, r6.w, l(0.00006104)
          and r9.y, r9.w, l(0x0000ffff)
          if_nz cb2[58].y
            mov r15.x, -r6.x
            utof r16.z, r9.y
            mov r15.y, r7.x
            mov r15.z, r6.x
            mov r9.zw, l(0,0,0,0)
            loop 
              ige r10.w, r9.w, l(8)
              breakc_nz r10.w
              dp2 r17.x, icb[r9.w + 0].yxyy, r15.xyxx
              dp2 r17.y, icb[r9.w + 0].yxyy, r15.yzyy
              mad r16.xy, r17.xyxx, r7.wwww, r14.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.w, r16.xyzx, t9.xxxx, s13, r6.w
              mad r9.z, r10.w, l(0.125000), r9.z
              iadd r9.w, r9.w, l(1)
            endloop 
          else 
            utof r14.z, r9.y
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r9.z, r14.xyzx, t9.xxxx, s13, r6.w
          endif 
          mul r6.w, r9.z, r9.z
          mul r6.w, r9.z, r6.w
        else 
          mov r6.w, l(1.000000)
        endif 
        mul r6.z, r6.w, r6.z
      endif 
    endif 
    mad r6.w, -r5.x, l(0.500000), l(1.000000)
    mad r6.w, -|r3.x|, r6.w, l(1.000000)
    mul r6.w, r6.w, r6.w
    mad r6.w, -r6.w, l(0.620000), l(0.620000)
    add r6.w, -|r3.x|, r6.w
    mad r6.w, r4.w, r6.w, |r3.x|
    mul r6.w, r6.z, r6.w
    lt r7.w, l(0.000000), r3.x
    mad r14.xyz, r6.wwww, r8.zwyz, r12.xyzx
    mov_sat r3.x, r3.x
    mad r9.yzw, -v6.xxyz, r2.wwww, cb2[17].xxyz
    dp3 r2.w, r9.yzwy, r9.yzwy
    rsq r2.w, r2.w
    mul r9.yzw, r2.wwww, r9.yyzw
    dp3 r2.w, r9.yzwy, r4.xyzx
    dp3 r6.w, r1.xyzx, r9.yzwy
    mad r9.y, |r6.w|, r3.w, -|r6.w|
    mad r6.w, |r6.w|, r9.y, l(1.000000)
    mad r9.y, r3.x, r0.w, r1.w
    mul r6.w, r6.w, r6.w
    mul r6.w, r9.y, r6.w
    rcp r6.w, r6.w
    mul r3.x, r3.y, r3.x
    mul r3.x, r3.x, r6.w
    mul r3.x, r6.z, r3.x
    mad r15.yzw, r3.xxxx, r8.yyzw, r13.xxyz
    add_sat r2.w, -r2.w, l(1.000000)
    mul r3.y, r2.w, r2.w
    mul r3.y, r3.y, r3.y
    mul r2.w, r2.w, r3.y
    mul r2.w, r2.w, r3.x
    mad r8.yzw, r2.wwww, r8.yyzw, r5.yyzw
    mov r14.w, r12.z
    mov r12.w, r14.z
    movc r16.xyzw, r7.wwww, r14.zxyw, r12.zxyw
    mov r12.zw, r8.yyyz
    mov r14.zw, r5.yyyz
    movc r14.xyzw, r7.wwww, r12.xyzw, r14.xyzw
    mov r15.x, r8.w
    mov r13.w, r5.w
    movc r13.xyzw, r7.wwww, r15.yzwx, r13.xyzw
    mov r12.z, r16.w
    mov r12.xy, r14.xyxx
    mov r5.yz, r14.zzwz
    mov r5.w, r13.w
  else 
    mov r16.xyz, r12.zxyz
  endif 
else 
  mov r16.xyz, r12.zxyz
endif 
mov r14.x, -r6.x
not r2.w, r3.z
mad r3.x, -r5.x, l(0.500000), l(1.000000)
mov r15.xy, l(0,0,0,0)
mov r17.w, l(0)
mov r18.xyz, v6.xyzx
mov r18.w, l(1.000000)
mov r19.w, l(1.000000)
mov r14.z, r6.x
mov r20.w, l(1.000000)
mov r21.z, l(1.000000)
mov r22.w, l(1.000000)
mov r14.yw, r7.xxxx
mov r6.y, r14.w
mov r23.w, l(1.000000)
mov r7.y, r14.x
mov r7.z, r6.x
mov r24.w, l(1.000000)
mov r25.x, r7.x
mov r25.y, r14.x
mov r25.z, r6.x
mov r26.x, r7.x
mov r26.y, r14.x
mov r26.z, r6.x
mov r27.x, r7.x
mov r27.y, r14.x
mov r27.z, r6.x
mov r8.yzw, r16.xxyz
mov r28.xyz, r12.zxyz
mov r29.xyz, r5.yzwy
mov r9.yzw, r13.xxyz
mov r3.y, cb2[58].y
mov r5.x, l(0)
loop 
  uge r6.z, r5.x, cb2[0].x
  breakc_nz r6.z
  ushr r15.z, r5.x, l(5)
  iadd r17.xyz, r11.xyzx, r15.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r6.z, r17.xyzw, t6.yzxw
  mov r17.xyz, r8.yzwy
  mov r30.xyz, r28.xyzx
  mov r31.xyz, r29.xyzx
  mov r32.xyz, r9.yzwy
  mov r6.w, r3.y
  mov r7.w, r6.z
  loop 
    breakc_z r7.w
    firstbit_lo r10.w, r7.w
    ishl r11.w, l(1), r10.w
    and r12.w, r7.w, r11.w
    if_nz r12.w
      xor r7.w, r7.w, r11.w
      iadd r10.w, r5.x, r10.w
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r33.xyzw, r10.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r34.xy, r10.w, l(16), t11.xyxx
      add r33.xyz, r33.xyzx, -v6.xyzx
      mov r34.z, r33.w
      lt r33.xyz, |r33.xyzx|, r34.zxyz
      and r11.w, r33.y, r33.x
      and r11.w, r33.z, r11.w
      if_nz r11.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r10.w, l(0), t12.wxyz
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r10.w, l(16), t12.zxyw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r10.w, l(32), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r10.w, l(48), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r10.w, l(64), t12.yzwx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r10.w, l(80), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r10.w, l(96), t12.yzwx
        ubfe r11.w, l(3), l(24), r34.w
        switch r11.w
          case l(4)
          lt r11.w, l(0.000000), r39.x
          mov r40.xy, r38.zwzz
          mov r40.z, r39.w
          mad r41.xyz, -r40.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r33.yzwy
          add r42.xyz, r41.xyzx, -v6.xyzx
          dp3 r12.w, r40.xyzx, r42.xyzx
          div_sat r13.w, -r12.w, r39.x
          mad r43.xyz, r13.wwww, r40.xyzx, r41.xyzx
          movc r43.xyz, r11.wwww, r43.xyzx, r33.yzwy
          add r43.xyz, r43.xyzx, -v6.xyzx
          dp3 r15.z, r43.xyzx, r43.xyzx
          rsq r15.w, r15.z
          mul r43.xyz, r15.wwww, r43.xyzx
          dp3 r15.w, r1.xyzx, r43.xyzx
          lt r16.w, l(0.000000), |r15.w|
          if_nz r16.w
            sqrt r16.w, r15.z
            mul r21.w, r36.x, r36.x
            div r15.z, r21.w, r15.z
            min r15.z, r15.z, l(1.000000)
            mad_sat r43.xy, r16.wwww, r35.xzxx, r35.ywyy
            mul r43.zw, r43.xxxy, r43.xxxy
            mad r43.xy, r43.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
            mul r43.xy, r43.xyxx, r43.zwzz
            mul r15.z, r15.z, r43.x
            mul r15.z, r43.y, r15.z
            lt r16.w, l(0.000000), r15.z
            if_nz r16.w
              ubfe r16.w, l(3), l(27), r34.w
              ine r16.w, r16.w, l(1)
              if_nz r16.w
                mad r16.w, |r15.w|, l(-0.200000), l(0.400000)
                lt r21.w, r15.w, l(0.000000)
                movc r16.w, r21.w, -r16.w, r16.w
                mad r43.xyz, r1.xyzx, r16.wwww, v6.xyzx
                add r43.xyz, -r37.xyzx, r43.xyzx
                max r16.w, |r43.z|, |r43.y|
                max r16.w, r16.w, |r43.x|
                div r16.w, r38.x, r16.w
                add r16.w, r38.y, r16.w
                dp3 r21.w, r43.xyzx, r43.xyzx
                rsq r21.w, r21.w
                max r16.w, r16.w, l(0.00006104)
                and r25.w, r34.w, l(0x0000ffff)
                utof r44.w, r25.w
                mov r25.w, l(0)
                mov r26.w, l(0)
                loop 
                  ige r27.w, r26.w, l(8)
                  breakc_nz r27.w
                  dp2 r45.y, icb[r26.w + 0].yxyy, r14.xyxx
                  dp2 r45.z, icb[r26.w + 0].yxyy, r14.yzyy
                  mul r45.yz, r36.yyyy, r45.yyzy
                  mul r45.x, r9.x, r45.y
                  mul r45.w, r8.x, r45.y
                  mad r44.xyz, r43.xyzx, r21.wwww, r45.xzwx
                  sample_c_lz_indexable(texturecubearray)(float,float,float,float) r27.w, r44.xyzw, t10.xxxx, s13, r16.w
                  mad r25.w, r27.w, l(0.125000), r25.w
                  iadd r26.w, r26.w, l(1)
                endloop 
              else 
                mov r25.w, l(1.000000)
              endif 
              mul r15.z, r15.z, r25.w
              lt r16.w, l(0.000000), r15.z
              if_nz r16.w
                mul r16.w, r3.w, r34.x
                mul r16.w, r16.w, l(0.250000)
                dp3 r21.w, r40.xyzx, r10.xyzx
                dp3 r26.w, r10.xyzx, r42.xyzx
                mad r27.w, -r21.w, r21.w, r39.x
                mad r12.w, r21.w, r26.w, -r12.w
                div_sat r12.w, r12.w, r27.w
                div r21.w, r27.w, r39.x
                mul r21.w, r21.w, l(10.000000)
                min r21.w, r21.w, l(1.000000)
                add r12.w, -r13.w, r12.w
                mad r12.w, r21.w, r12.w, r13.w
                mad r40.xyz, r12.wwww, r40.xyzx, r41.xyzx
                movc r40.xyz, r11.wwww, r40.xyzx, r33.yzwy
                add r40.xyz, r40.xyzx, -v6.xyzx
                dp3 r11.w, r40.xyzx, r40.xyzx
                rsq r11.w, r11.w
                mul r41.xyz, r11.wwww, r40.xyzx
                ubfe r12.w, l(4), l(16), r34.w
                ult r13.w, l(0), r12.w
                and r13.w, r3.z, r13.w
                if_nz r13.w
                  iadd r12.w, r12.w, cb2[0].x
                  iadd r12.w, r12.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.w, r12.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r12.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r12.w, l(116), t12.xyzw
                  mad r21.w, |r15.w|, l(-0.200000), l(0.400000)
                  lt r26.w, r15.w, l(0.000000)
                  movc r21.w, r26.w, -r21.w, r21.w
                  mad r19.xyz, r1.xyzx, r21.wwww, v6.xyzx
                  dp4 r21.w, r42.xyzw, r19.xyzw
                  dp4 r26.w, r43.xyzw, r19.xyzw
                  lt r27.w, r26.w, r21.w
                  if_z r27.w
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r12.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r12.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r12.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xyzw, r12.w, l(148), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r46.xy, r12.w, l(164), t12.xyxx
                    dp4 r42.x, r42.xyzw, r19.xyzw
                    dp4 r42.y, r43.xyzw, r19.xyzw
                    div r19.xy, r42.xyxx, r26.wwww
                    mad r19.xy, r19.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r19.xy, r45.zwzz, r19.xyxx
                    mul r19.xy, r45.xyxx, r19.xyxx
                    div r42.xy, r13.wwww, r44.xzxx
                    add r42.zw, -r42.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                    ge r42.zw, r19.xxxy, r42.zzzw
                    ge r42.xy, r42.xyxx, r19.xyxx
                    or r42.xy, r42.xyxx, r42.zwzz
                    or r19.z, r42.y, r42.x
                    mov_sat r19.xy, r19.xyxx
                    mad r42.xy, r19.xyxx, r44.xzxx, r44.ywyy
                    mul r19.x, r26.w, r46.y
                    mad r19.y, r46.x, r26.w, r21.w
                    div r19.x, r19.y, r19.x
                  else 
                    mov r19.z, l(-1)
                  endif 
                  or r19.y, r27.w, r19.z
                  if_z r19.y
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.w, r12.w, l(28), t12.xxxx
                    max r19.x, r19.x, l(0.00006104)
                    and r12.w, r12.w, l(0x0000ffff)
                    if_nz r6.w
                      utof r43.z, r12.w
                      mov r19.yz, l(0,0,0,0)
                      loop 
                        ige r21.w, r19.z, l(8)
                        breakc_nz r21.w
                        dp2 r44.x, icb[r19.z + 0].yxyy, r14.xwxx
                        dp2 r44.y, icb[r19.z + 0].xyxx, r6.xyxx
                        mad r43.xy, r44.xyxx, r13.wwww, r42.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.w, r43.xyzx, t9.xxxx, s13, r19.x
                        mad r19.y, r21.w, l(0.125000), r19.y
                        iadd r19.z, r19.z, l(1)
                      endloop 
                    else 
                      utof r42.z, r12.w
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.y, r42.xyzx, t9.xxxx, s13, r19.x
                    endif 
                    mul r12.w, r19.y, r19.y
                    mul r12.w, r19.y, r12.w
                  else 
                    mov r12.w, l(1.000000)
                  endif 
                  mul r15.z, r12.w, r15.z
                else 
                  ubfe r12.w, l(4), l(20), r34.w
                  ult r13.w, l(0), r12.w
                  and r13.w, r2.w, r13.w
                  if_nz r13.w
                    iadd r12.w, r12.w, cb2[0].x
                    iadd r12.w, r12.w, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.w, r12.w, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r12.w, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r12.w, l(116), t12.xyzw
                    mad r19.x, |r15.w|, l(-0.200000), l(0.400000)
                    lt r19.z, r15.w, l(0.000000)
                    movc r19.x, r19.z, -r19.x, r19.x
                    mad r20.xyz, r1.xyzx, r19.xxxx, v6.xyzx
                    dp4 r19.x, r42.xyzw, r20.xyzw
                    dp4 r19.z, r43.xyzw, r20.xyzw
                    lt r21.w, r19.z, r19.x
                    if_z r21.w
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r12.w, l(68), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r12.w, l(84), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r12.w, l(132), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xyzw, r12.w, l(148), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r46.xy, r12.w, l(164), t12.xyxx
                      dp4 r42.x, r42.xyzw, r20.xyzw
                      dp4 r42.y, r43.xyzw, r20.xyzw
                      div r20.xy, r42.xyxx, r19.zzzz
                      mad r20.xy, r20.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                      add r20.xy, r45.zwzz, r20.xyxx
                      mul r20.xy, r45.xyxx, r20.xyxx
                      div r42.xy, r13.wwww, r44.xzxx
                      add r42.zw, -r42.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                      ge r42.zw, r20.xxxy, r42.zzzw
                      ge r42.xy, r42.xyxx, r20.xyxx
                      or r42.xy, r42.xyxx, r42.zwzz
                      or r20.z, r42.y, r42.x
                      mov_sat r20.xy, r20.xyxx
                      mad r42.xy, r20.xyxx, r44.xzxx, r44.ywyy
                      mul r20.x, r19.z, r46.y
                      mad r19.x, r46.x, r19.z, r19.x
                      div r19.x, r19.x, r20.x
                    else 
                      mov r20.z, l(-1)
                    endif 
                    or r19.z, r21.w, r20.z
                    if_z r19.z
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.w, r12.w, l(28), t12.xxxx
                      max r19.x, r19.x, l(0.00006104)
                      and r12.w, r12.w, l(0x0000ffff)
                      if_nz r6.w
                        utof r20.z, r12.w
                        mov r19.z, l(0)
                        mov r21.w, l(0)
                        loop 
                          ige r26.w, r21.w, l(8)
                          breakc_nz r26.w
                          dp2 r43.x, icb[r21.w + 0].xyxx, r7.xyxx
                          dp2 r43.y, icb[r21.w + 0].yxyy, r7.xzxx
                          mad r20.xy, r43.xyxx, r13.wwww, r42.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r20.x, r20.xyzx, t9.xxxx, s13, r19.x
                          mad r19.z, r20.x, l(0.125000), r19.z
                          iadd r21.w, r21.w, l(1)
                        endloop 
                      else 
                        utof r42.z, r12.w
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.z, r42.xyzx, t9.xxxx, s13, r19.x
                      endif 
                      mul r12.w, r19.z, r19.z
                      mul r12.w, r19.z, r12.w
                    else 
                      mov r12.w, l(1.000000)
                    endif 
                    mul r15.z, r12.w, r15.z
                  endif 
                endif 
                mad r12.w, -|r15.w|, r3.x, l(1.000000)
                mul r12.w, r12.w, r12.w
                mad r12.w, -r12.w, l(0.620000), l(0.620000)
                add r12.w, -|r15.w|, r12.w
                mad r12.w, r4.w, r12.w, |r15.w|
                mul r12.w, r15.z, r12.w
                mov r34.x, r33.x
                lt r13.w, l(0.000000), r15.w
                mad r20.xyz, r12.wwww, r34.xyzx, r17.xyzx
                dp3_sat r15.w, r1.xyzx, r41.xyzx
                mad r40.xyz, r40.xyzx, r11.wwww, r4.xyzx
                dp3 r11.w, r40.xyzx, r40.xyzx
                rsq r11.w, r11.w
                mul r40.xyz, r11.wwww, r40.xyzx
                dp3 r11.w, r40.xyzx, r4.xyzx
                dp3 r19.x, r1.xyzx, r40.xyzx
                mad r21.w, |r19.x|, r3.w, -|r19.x|
                mad r19.x, |r19.x|, r21.w, l(1.000000)
                mad r21.w, r15.w, r0.w, r1.w
                mul r19.x, r19.x, r19.x
                mul r19.x, r21.w, r19.x
                rcp r19.x, r19.x
                mul r15.w, r16.w, r15.w
                mul r15.w, r15.w, r19.x
                mul r15.z, r15.z, r15.w
                mad r40.xyz, r15.zzzz, r34.xyzx, r32.xyzx
                add_sat r11.w, -r11.w, l(1.000000)
                mul r15.w, r11.w, r11.w
                mul r15.w, r15.w, r15.w
                mul r11.w, r11.w, r15.w
                mul r11.w, r11.w, r15.z
                mad r41.xyz, r11.wwww, r34.xyzx, r31.xyzx
                mad r42.xyz, r12.wwww, r34.xyzx, r30.xyzx
                movc r17.xyz, r13.wwww, r20.xyzx, r17.xyzx
                movc r30.xyz, r13.wwww, r30.xyzx, r42.xyzx
                movc r31.xyz, r13.wwww, r41.xyzx, r31.xyzx
                movc r32.xyz, r13.wwww, r40.xyzx, r32.xyzx
              endif 
            endif 
          endif 
          break 
          case l(2)
          mov r20.xy, r36.zwzz
          mov r20.z, r37.w
          add r20.xyz, r20.xyzx, -v6.xyzx
          dp3 r11.w, r20.xyzx, r20.xyzx
          rsq r11.w, r11.w
          mul r40.xyz, r11.wwww, r20.xyzx
          dp3 r12.w, r1.xyzx, r40.xyzx
          lt r13.w, l(0.000000), |r12.w|
          if_nz r13.w
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r10.w, l(112), t12.yzwx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r10.w, l(128), t12.zxyw
            mov r42.xyz, r40.xyzx
            mov r42.w, r41.y
            dp4 r13.w, r42.xyzw, r18.xyzw
            lt r15.z, r13.w, l(1.000000)
            if_nz r15.z
              mov r43.xyz, l(1.000000,1.000000,1.000000,0)
              mov r15.z, l(0)
            else 
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r10.w, l(172), t12.yzwx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xyzw, r10.w, l(188), t12.wxyz
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r46.xyzw, r10.w, l(204), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.w, r10.w, l(236), t12.xxxx
              add r47.xyz, r33.yzwy, -v6.xyzx
              mul r16.w, r36.x, r36.x
              dp3 r19.x, r47.xyzx, r47.xyzx
              div r16.w, r16.w, r19.x
              min r16.w, r16.w, l(1.000000)
              mad_sat r35.xy, r13.wwww, r35.xzxx, r35.ywyy
              mul r35.zw, r35.xxxy, r35.xxxy
              mad r35.xy, r35.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
              mul r35.xy, r35.xyxx, r35.zwzz
              mul r16.w, r16.w, r35.x
              mul r16.w, r35.y, r16.w
              mov r37.w, r38.x
              dp4 r35.x, r37.xyzw, r18.xyzw
              mov r47.xyz, r38.yzwy
              mov r47.w, r39.w
              dp4 r35.y, r47.xyzw, r18.xyzw
              div r21.xy, r35.xyxx, r13.wwww
              lt r13.w, r44.w, l(0.00048828)
              if_nz r13.w
                mov r45.y, r46.x
                mad_sat r35.xy, |r21.xyxx|, r45.zwzz, r45.xyxx
                mul r35.zw, r35.xxxy, r35.xxxy
                mad r35.xy, r35.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
                mul r35.xy, r35.xyxx, r35.zwzz
                mul r13.w, r35.y, r35.x
              else 
                mov r44.w, r45.y
                mul_sat r35.xyzw, |r21.yyxx|, r44.xyzw
                log r35.xyzw, r35.xyzw
                mul r35.xyzw, r35.xyzw, r45.xxxx
                exp r35.xyzw, r35.xyzw
                add r35.xy, r35.zwzz, r35.xyxx
                log r35.xy, r35.xyxx
                mul r35.xy, r35.xyxx, r46.xxxx
                exp r35.xy, r35.xyxx
                mul r19.x, r35.x, r45.z
                mad r21.w, r45.w, r35.y, l(-1.000000)
                mad r19.x, r45.w, r35.y, -r19.x
                div_sat r19.x, r21.w, r19.x
                mul r21.w, r19.x, r19.x
                mad r19.x, r19.x, l(-2.000000), l(3.000000)
                mul r13.w, r19.x, r21.w
              endif 
              mul r15.z, r13.w, r16.w
              and r13.w, r15.w, l(255)
              if_nz r13.w
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyz, r10.w, l(220), t12.xyzx
                dp3 r15.w, r46.yzwy, r21.xyzx
                dp3 r16.w, r35.xyzx, r21.xyzx
                frc r35.x, r15.w
                frc r35.y, r16.w
                iadd r13.w, r13.w, l(-1)
                utof r35.z, r13.w
                sample_l_indexable(texture2darray)(float,float,float,float) r43.xyz, r35.xyzx, t20.xyzw, s2, l(0.000000)
              else 
                mov r43.xyz, l(1.000000,1.000000,1.000000,0)
              endif 
            endif 
            mov r33.yz, r34.yyzy
            mul r21.xyw, r43.xyxz, r33.xyxz
            lt r13.w, l(0.000000), r15.z
            if_nz r13.w
              ubfe r13.w, l(3), l(27), r34.w
              ine r13.w, r13.w, l(1)
              if_nz r13.w
                mad r13.w, |r12.w|, l(-0.200000), l(0.400000)
                lt r15.w, r12.w, l(0.000000)
                movc r13.w, r15.w, -r13.w, r13.w
                mad r22.xyz, r1.xyzx, r13.wwww, v6.xyzx
                mov r40.xyz, r39.xyzx
                dp4 r13.w, r40.xyzw, r22.xyzw
                dp4 r15.w, r42.xyzw, r22.xyzw
                ge r16.w, r15.w, r13.w
                if_nz r16.w
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.y, r10.w, l(144), t12.xxxx
                  mov r37.w, r38.x
                  dp4 r33.x, r37.xyzw, r22.xyzw
                  mov r39.xyz, r38.yzwy
                  dp4 r33.y, r39.xyzw, r22.xyzw
                  div r22.xy, r33.xyxx, r15.wwww
                  mad_sat r22.xy, r22.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  mad r22.xy, r22.xyxx, r41.zwzz, r41.xyxx
                  div r10.w, r13.w, r15.w
                  max r10.w, r10.w, l(0.00006104)
                  and r13.w, r34.w, l(0x0000ffff)
                  if_nz r6.w
                    utof r33.z, r13.w
                    mov r15.w, l(0)
                    mov r16.w, l(0)
                    loop 
                      ige r19.x, r16.w, l(8)
                      breakc_nz r19.x
                      dp2 r35.x, icb[r16.w + 0].xyxx, r25.xyxx
                      dp2 r35.y, icb[r16.w + 0].yxyy, r25.xzxx
                      mad r33.xy, r35.xyxx, r36.yyyy, r22.xyxx
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.x, r33.xyzx, t9.xxxx, s13, r10.w
                      mad r15.w, r19.x, l(0.125000), r15.w
                      iadd r16.w, r16.w, l(1)
                    endloop 
                  else 
                    utof r22.z, r13.w
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r15.w, r22.xyzx, t9.xxxx, s13, r10.w
                  endif 
                  mul r10.w, r15.w, r15.w
                  mul r10.w, r15.w, r10.w
                else 
                  mov r10.w, l(1.000000)
                endif 
              else 
                mov r10.w, l(1.000000)
              endif 
              mul r10.w, r10.w, r15.z
              lt r13.w, l(0.000000), r10.w
              if_nz r13.w
                mul r13.w, r3.w, r34.x
                mul r13.w, r13.w, l(0.250000)
                ubfe r15.z, l(4), l(16), r34.w
                ult r16.w, l(0), r15.z
                and r16.w, r3.z, r16.w
                if_nz r16.w
                  iadd r15.z, r15.z, cb2[0].x
                  iadd r15.z, r15.z, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.w, r15.z, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r15.z, l(68), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r15.z, l(84), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r15.z, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r15.z, l(116), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r15.z, l(132), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r15.z, l(148), t12.xyzw
                  mad r19.x, |r12.w|, l(-0.200000), l(0.400000)
                  lt r22.x, r12.w, l(0.000000)
                  movc r19.x, r22.x, -r19.x, r19.x
                  mad r23.xyz, r1.xyzx, r19.xxxx, v6.xyzx
                  dp4 r22.x, r33.xyzw, r23.xyzw
                  dp4 r22.y, r35.xyzw, r23.xyzw
                  dp4 r19.x, r36.xyzw, r23.xyzw
                  dp4 r22.z, r37.xyzw, r23.xyzw
                  lt r23.x, r22.z, r19.x
                  div r22.xy, r22.xyxx, r22.zzzz
                  mad r22.xy, r22.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r22.xy, r39.zwzz, r22.xyxx
                  mul r22.xy, r39.xyxx, r22.xyxx
                  div r23.yz, r16.wwww, r38.xxzx
                  add r33.xy, -r23.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
                  ge r33.xy, r22.xyxx, r33.xyxx
                  ge r23.yz, r23.yyzy, r22.xxyx
                  or r23.yz, r23.yyzy, r33.xxyx
                  or r23.y, r23.z, r23.y
                  or r23.x, r23.x, r23.y
                  if_z r23.x
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.x, r15.z, l(28), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.yz, r15.z, l(164), t12.xxyx
                    mov_sat r22.xy, r22.xyxx
                    mad r33.xy, r22.xyxx, r38.xzxx, r38.ywyy
                    mul r15.z, r22.z, r23.z
                    mad r19.x, r23.y, r22.z, r19.x
                    div r15.z, r19.x, r15.z
                    max r15.z, r15.z, l(0.00006104)
                    and r19.x, r23.x, l(0x0000ffff)
                    if_nz r6.w
                      utof r22.z, r19.x
                      mov r23.xy, l(0,0,0,0)
                      loop 
                        ige r23.z, r23.y, l(8)
                        breakc_nz r23.z
                        dp2 r34.x, icb[r23.y + 0].xyxx, r26.xyxx
                        dp2 r34.y, icb[r23.y + 0].yxyy, r26.xzxx
                        mad r22.xy, r34.xyxx, r16.wwww, r33.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.x, r22.xyzx, t9.xxxx, s13, r15.z
                        mad r23.x, r22.x, l(0.125000), r23.x
                        iadd r23.y, r23.y, l(1)
                      endloop 
                    else 
                      utof r33.z, r19.x
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.x, r33.xyzx, t9.xxxx, s13, r15.z
                    endif 
                    mul r15.z, r23.x, r23.x
                    mul r15.z, r23.x, r15.z
                  else 
                    mov r15.z, l(1.000000)
                  endif 
                  mul r10.w, r10.w, r15.z
                else 
                  ubfe r15.z, l(4), l(20), r34.w
                  ult r16.w, l(0), r15.z
                  and r16.w, r2.w, r16.w
                  if_nz r16.w
                    iadd r15.z, r15.z, cb2[0].x
                    iadd r15.z, r15.z, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.w, r15.z, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r15.z, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r15.z, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r15.z, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r15.z, l(116), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r15.z, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r15.z, l(148), t12.xyzw
                    mad r19.x, |r12.w|, l(-0.200000), l(0.400000)
                    lt r22.x, r12.w, l(0.000000)
                    movc r19.x, r22.x, -r19.x, r19.x
                    mad r24.xyz, r1.xyzx, r19.xxxx, v6.xyzx
                    dp4 r22.x, r33.xyzw, r24.xyzw
                    dp4 r22.y, r34.xyzw, r24.xyzw
                    dp4 r19.x, r35.xyzw, r24.xyzw
                    dp4 r22.z, r36.xyzw, r24.xyzw
                    lt r23.y, r22.z, r19.x
                    div r22.xy, r22.xyxx, r22.zzzz
                    mad r22.xy, r22.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r22.xy, r38.zwzz, r22.xyxx
                    mul r22.xy, r38.xyxx, r22.xyxx
                    div r24.xy, r16.wwww, r37.xzxx
                    add r33.xy, -r24.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                    ge r33.xy, r22.xyxx, r33.xyxx
                    ge r24.xy, r24.xyxx, r22.xyxx
                    or r24.xy, r24.xyxx, r33.xyxx
                    or r23.z, r24.y, r24.x
                    or r23.y, r23.y, r23.z
                    if_z r23.y
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.y, r15.z, l(28), t12.xxxx
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r24.xy, r15.z, l(164), t12.xyxx
                      mov_sat r22.xy, r22.xyxx
                      mad r33.xy, r22.xyxx, r37.xzxx, r37.ywyy
                      mul r15.z, r22.z, r24.y
                      mad r19.x, r24.x, r22.z, r19.x
                      div r15.z, r19.x, r15.z
                      max r15.z, r15.z, l(0.00006104)
                      and r19.x, r23.y, l(0x0000ffff)
                      if_nz r6.w
                        utof r22.z, r19.x
                        mov r23.yz, l(0,0,0,0)
                        loop 
                          ige r24.x, r23.z, l(8)
                          breakc_nz r24.x
                          dp2 r24.x, icb[r23.z + 0].xyxx, r27.xyxx
                          dp2 r24.y, icb[r23.z + 0].yxyy, r27.xzxx
                          mad r22.xy, r24.xyxx, r16.wwww, r33.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.x, r22.xyzx, t9.xxxx, s13, r15.z
                          mad r23.y, r22.x, l(0.125000), r23.y
                          iadd r23.z, r23.z, l(1)
                        endloop 
                      else 
                        utof r33.z, r19.x
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.y, r33.xyzx, t9.xxxx, s13, r15.z
                      endif 
                      mul r15.z, r23.y, r23.y
                      mul r15.z, r23.y, r15.z
                    else 
                      mov r15.z, l(1.000000)
                    endif 
                    mul r10.w, r10.w, r15.z
                  endif 
                endif 
                mad r15.z, -|r12.w|, r3.x, l(1.000000)
                mul r15.z, r15.z, r15.z
                mad r15.z, -r15.z, l(0.620000), l(0.620000)
                add r15.z, -|r12.w|, r15.z
                mad r15.z, r4.w, r15.z, |r12.w|
                mul r15.z, r10.w, r15.z
                lt r16.w, l(0.000000), r12.w
                mad r22.xyz, r15.zzzz, r21.xywx, r17.xyzx
                mov_sat r12.w, r12.w
                mad r20.xyz, r20.xyzx, r11.wwww, r4.xyzx
                dp3 r11.w, r20.xyzx, r20.xyzx
                rsq r11.w, r11.w
                mul r20.xyz, r11.wwww, r20.xyzx
                dp3 r11.w, r20.xyzx, r4.xyzx
                dp3 r19.x, r1.xyzx, r20.xyzx
                mad r20.x, |r19.x|, r3.w, -|r19.x|
                mad r19.x, |r19.x|, r20.x, l(1.000000)
                mad r20.x, r12.w, r0.w, r1.w
                mul r19.x, r19.x, r19.x
                mul r19.x, r20.x, r19.x
                rcp r19.x, r19.x
                mul r12.w, r13.w, r12.w
                mul r12.w, r12.w, r19.x
                mul r10.w, r10.w, r12.w
                mad r20.xyz, r10.wwww, r21.xywx, r32.xyzx
                add_sat r11.w, -r11.w, l(1.000000)
                mul r12.w, r11.w, r11.w
                mul r12.w, r12.w, r12.w
                mul r11.w, r11.w, r12.w
                mul r10.w, r10.w, r11.w
                mad r24.xyz, r10.wwww, r21.xywx, r31.xyzx
                mad r21.xyw, r15.zzzz, r21.xyxw, r30.xyxz
                movc r17.xyz, r16.wwww, r22.xyzx, r17.xyzx
                movc r30.xyz, r16.wwww, r30.xyzx, r21.xywx
                movc r31.xyz, r16.wwww, r24.xyzx, r31.xyzx
                movc r32.xyz, r16.wwww, r20.xyzx, r32.xyzx
              endif 
            endif 
          endif 
          break 
          default 
          break 
        endswitch 
      endif 
    endif 
  endloop 
  mov r8.yzw, r17.xxyz
  mov r28.xyz, r30.xyzx
  mov r29.xyz, r31.xyzx
  mov r9.yzw, r32.xxyz
  iadd r5.x, r5.x, l(32)
endloop 
mul r1.xyz, r2.xyzx, r28.xyzx
mad r0.xyz, r8.yzwy, r0.xyzx, r1.xyzx
mul r1.xyz, r29.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
mad r1.xyz, r9.yzwy, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
add r0.xyz, r0.xyzx, r1.xyzx
lt r0.w, l(0.000000), cb2[9].z
if_nz r0.w
  dp3 r0.w, v6.xyzx, v6.xyzx
  rsq r1.x, r0.w
  mul r1.xyz, r1.xxxx, v6.xyzx
  sqrt r0.w, r0.w
  lt r1.w, l(0.000000), cb2[13].w
  if_nz r1.w
    mad r2.xy, r0.wwww, cb2[15].xyxx, cb2[14].zwzz
    mul r2.xy, r2.xyxx, cb2[16].xyxx
    lt r1.w, l(0.010000), |v6.z|
    mul r2.zw, v6.zzzz, cb2[15].zzzw
    mul r3.xy, r2.zwzz, l(-1.442695, -1.442695, 0.000000, 0.000000)
    exp r3.xy, r3.xyxx
    add r3.xy, -r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    div r2.zw, r3.xxxy, r2.zzzw
    mul r2.zw, r2.zzzw, r2.xxxy
    movc r2.xy, r1.wwww, r2.zwzz, r2.xyxx
    mul r2.xzw, r2.xxxx, cb2[12].xxyz
    exp r2.xzw, r2.xxzw
    mul r3.xyz, r2.yyyy, cb2[12].xyzx
    exp r3.xyz, r3.xyzx
    add r3.xyz, -r2.xzwx, r3.xyzx
    mad r2.xyz, cb2[13].wwww, r3.xyzx, r2.xzwx
  else 
    mad r1.w, r0.w, cb2[15].x, cb2[14].z
    mul r1.w, r1.w, cb2[16].x
    lt r2.w, l(0.010000), |v6.z|
    mul r3.x, v6.z, cb2[15].z
    mul r3.y, r3.x, l(-1.442695)
    exp r3.y, r3.y
    add r3.y, -r3.y, l(1.000000)
    div r3.x, r3.y, r3.x
    mul r3.x, r1.w, r3.x
    movc r1.w, r2.w, r3.x, r1.w
    mul r3.xyz, r1.wwww, cb2[12].xyzx
    exp r2.xyz, r3.xyzx
  endif 
  mad r2.xyz, r2.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r2.xyz, r2.xyzx, -cb2[9].zzzz
  dp3 r1.x, cb2[7].yzwy, -r1.xyzx
  mad r1.y, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r1.z, cb2[8].w, -r1.x, l(1.000000)
  mul r1.z, r1.z, r1.z
  mul r1.z, r1.z, l(12.566371)
  div r1.y, r1.y, r1.z
  add r0.w, r0.w, -cb2[10].w
  mul_sat r0.w, r0.w, cb2[11].w
  mul r0.w, r0.w, r1.y
  mov_sat r1.x, r1.x
  mad r1.x, r1.x, r1.x, l(1.000000)
  mad r1.x, r1.x, l(0.05968310), l(-1.000000)
  mad r1.x, cb2[8].z, r1.x, l(1.000000)
  mul r1.yzw, r0.wwww, cb2[11].xxyz
  mad r1.xyz, r1.xxxx, cb2[10].xyzx, r1.yzwy
  mul r1.xyz, r1.xyzx, cb2[9].wwww
  add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r1.xyz, r1.xyzx, r3.xyzx
  mad r1.xyz, r0.xyzx, r2.xyzx, r1.xyzx
else 
  mul r0.w, v6.z, cb2[6].x
  mad r1.w, cb2[6].x, v6.z, cb2[5].x
  lt r2.x, |r0.w|, l(0.000100)
  min r2.y, r1.w, l(64.000000)
  mul r2.y, r2.y, l(1.442695)
  exp r2.y, r2.y
  mov_sat r2.z, cb2[6].z
  lt r2.w, r1.w, l(0.000000)
  add r1.w, r1.w, l(1.000000)
  movc r1.w, r2.w, r2.y, r1.w
  add r1.w, r1.w, -cb2[6].z
  movc r0.w, r2.x, l(1.000000), r0.w
  div r0.w, r1.w, r0.w
  movc r0.w, r2.x, r2.z, r0.w
  mul r0.w, r0.w, cb2[5].z
  dp3 r1.w, v6.xyzx, v6.xyzx
  sqrt r2.x, r1.w
  mad r0.w, r0.w, r2.x, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  rsq r1.w, r1.w
  mul r2.xyz, r1.wwww, v6.xyzx
  dp3 r1.w, cb2[7].yzwy, r2.xyzx
  mad_sat r1.w, cb2[8].y, r1.w, cb2[8].x
  add r2.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r2.xyzw, r1.wwww, r2.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r2.w
  add r2.xyz, -r0.xyzx, r2.xyzx
  mad r1.xyz, r0.wwww, r2.xyzx, r0.xyzx
endif 
mul r0.xyz, r1.xyzx, cb1[85].yyyy
ge r1.xyz, r0.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.xyz, r0.xyzx, r1.xyzx
min o0.xyz, r0.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
ret 
// Approximately 1927 instruction slots used
