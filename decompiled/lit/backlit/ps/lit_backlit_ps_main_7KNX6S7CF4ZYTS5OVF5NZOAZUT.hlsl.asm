//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:32:07 2021
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float3 colorTint;                  // Offset:  160 Size:    12
//   float3 specColorTint;              // Offset:  176 Size:    12
//   float baseNormalHeight;            // Offset:  188 Size:     4
//   float2 glossRange;                 // Offset:  192 Size:     8
//   float3 backlightScatterColor;      // Offset:  208 Size:    12
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16 [unused]
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16
//   float4 debugNormalOverride;        // Offset:  960 Size:    16
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16
//   float4 debugGlossOverride;         // Offset:  992 Size:    16
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// colorSampler                      sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// specColorSampler                  sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// normalSampler                     sampler      NA          NA             s5      1 
// aoSampler                         sampler      NA          NA             s6      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// colorMap                          texture  float4          2d             t0      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// tintMask                          texture  float4          2d            t21      1 
// specColorMap                      texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// normalMap                         texture  float4          2d            t24      1 
// glossMap                          texture  float4          2d            t25      1 
// aoMap                             texture  float4          2d            t26      1 
// thicknessMap                      texture  float4          2d            t29      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyz 
// COLOR                    0   xyz         1     NONE   float   xyz 
// COLOR                    1      w        1     NONE   float      w
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xyz         3     NONE   float   xyz 
// TEXCOORD                 2   xyz         4     NONE   float   xyz 
// TEXCOORD                 3   xyz         5     NONE   float   xyz 
// OFFPOSITION              0   xyz         6     NONE   float   xyz 
// SV_IsFrontFace           0   x           7    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[14], immediateIndexed
dcl_constantbuffer CB1[93], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2d (float,float,float,float) t26
dcl_resource_texture2d (float,float,float,float) t29
dcl_resource_texture2darray (float,float,float,float) t31
dcl_input_ps_siv linear noperspective v0.xyz, position
dcl_input_ps linear v1.xyz
dcl_input_ps linear v1.w
dcl_input_ps linear v2.xy
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps_sgv constant v7.x, is_front_face
dcl_output o0.xyzw
dcl_temps 49
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v2.xyxx, t0.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r1.x, v2.xyxx, t21.xyzw, s1
add r1.yzw, cb0[10].xxyz, l(0.000000, -1.000000, -1.000000, -1.000000)
mad r1.xyz, r1.xxxx, r1.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r0.xyz, r0.xyzx, r1.xyzx
mul r0.xyz, r0.xyzx, v1.xyzx
mul r1.x, r0.w, v1.w
sample_indexable(texture2d)(float,float,float,float) r1.y, v2.xyxx, t22.yxzw, s3
add r2.xyz, cb0[11].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r2.xyz, r1.yyyy, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
add_sat r1.y, -r1.y, l(1.000000)
mul r0.xyz, r0.xyzx, r1.yyyy
sample_indexable(texture2d)(float,float,float,float) r1.y, v2.xyxx, t26.yxzw, s6
sample_indexable(texture2d)(float,float,float,float) r1.z, v2.xyxx, t25.yzxw, s3
add r1.w, -cb0[12].x, cb0[12].y
mad r1.z, r1.z, r1.w, cb0[12].x
mul_sat r1.z, r1.z, l(0.05882353)
sample_indexable(texture2d)(float,float,float,float) r3.xyz, v2.xyxx, t24.xyzw, s5
add r3.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.000000, 0.000000)
mad r3.xyz, cb0[11].wwww, r3.xyzx, l(0.500000, 0.500000, 0.000000, 0.000000)
mad r3.xy, r3.xyxx, l(1.99218750, 1.99218750, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r2.w, r3.xyxx, r3.xyxx
add r2.w, -r2.w, l(1.000000)
max r2.w, r2.w, l(0.000000)
sqrt r2.w, r2.w
mul r3.z, r3.z, r3.z
mul r3.z, r3.z, l(0.33333334)
min r3.z, r3.z, l(1.000000)
movc r3.w, v7.x, l(1.000000), l(-1.000000)
dp3 r4.x, v3.xyzx, v3.xyzx
rsq r4.x, r4.x
mul r4.xyz, r4.xxxx, v3.xyzx
mul r4.xyz, r3.wwww, r4.xyzx
dp3 r4.w, v4.xyzx, v4.xyzx
rsq r4.w, r4.w
mul r5.xyz, r4.wwww, v4.xyzx
mul r5.xyz, r3.wwww, r5.xyzx
dp3 r4.w, v5.xyzx, v5.xyzx
rsq r4.w, r4.w
mul r6.xyz, r4.wwww, v5.xyzx
mul r6.xyz, r3.wwww, r6.xyzx
mul r1.z, r1.z, l(-17.000000)
exp r1.z, r1.z
add r1.z, r1.z, r3.z
log r1.z, r1.z
mul r1.z, r1.z, l(-0.05882353)
mul r6.xyz, r3.yyyy, r6.xyzx
mad r3.xyw, r5.xyxz, r3.xxxx, r6.xyxz
mad r3.xyw, r4.xyxz, r2.wwww, r3.xyxw
dp3 r2.w, r3.xywx, r3.xywx
rsq r2.w, r2.w
mul r3.xyw, r2.wwww, r3.xyxw
mad r1.w, cb1[62].x, r1.w, cb0[12].x
mul_sat r1.w, r1.w, l(0.05882353)
mul r1.w, r1.w, l(-17.000000)
exp r1.w, r1.w
add r1.w, r1.w, r3.z
log r1.w, r1.w
mul r1.w, r1.w, l(-0.05882353)
max r1.zw, r1.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r2.w, l(0.000000), cb1[64].w
if_nz r2.w
  ftoi r2.w, cb1[64].w
  lod r3.z, v2.xyxx, t0.y, s1
  lod r4.x, v2.xyxx, t0.x, s1
  lt r3.z, r3.z, r4.x
  lt r4.x, l(0.000000), r4.x
  and r4.yzw, r2.wwww, l(0, 1, 2, 4)
  movc r5.xyz, r4.yyyy, l(1.000000,0,1.000000,0), r0.xyzx
  movc r6.xyz, r4.zzzz, l(0,1.000000,1.000000,0), r0.xyzx
  movc r4.xyz, r4.xxxx, r5.xyzx, r6.xyzx
  movc r5.xyz, r4.wwww, l(0,1.000000,0,0), r0.xyzx
  movc r0.xyz, r3.zzzz, r4.xyzx, r5.xyzx
endif 
add r4.xyz, -r0.xyzx, cb1[58].xyzx
mad r0.xyz, cb1[58].wwww, r4.xyzx, r0.xyzx
mad r0.w, -r0.w, v1.w, cb1[59].x
mad o0.w, cb1[59].w, r0.w, r1.x
add r4.xyz, -r2.xyzx, cb1[61].xyzx
mad r2.xyz, cb1[61].wwww, r4.xyzx, r2.xyzx
add r0.w, -r1.z, r1.w
mad r4.y, cb1[62].w, r0.w, r1.z
add r0.w, -r1.y, cb1[63].x
mad r0.w, cb1[63].w, r0.w, r1.y
movc r1.xyz, v7.xxxx, v3.xyzx, -v3.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mad r1.xyz, r1.xyzx, r1.wwww, -r3.xywx
mad r1.xyz, cb1[60].wwww, r1.xyzx, r3.xywx
sample_indexable(texture2d)(float,float,float,float) r2.w, v2.xyxx, t29.yzwx, s1
add r2.w, -r2.w, l(1.000000)
mul r3.xyz, r2.wwww, cb0[13].xyzx
mul r3.xyz, r0.xyzx, r3.xyzx
ftou r4.zw, v0.xxxy
ge r2.w, v0.z, l(0.984375)
mul r3.w, v0.z, l(1.01587307)
mad r5.x, v0.z, l(64.000000), l(-63.000000)
movc r2.w, r2.w, r5.x, r3.w
max r2.w, r2.w, l(0.00000001)
rcp r2.w, r2.w
dp3 r3.w, -v6.xyzx, -v6.xyzx
rsq r3.w, r3.w
mul r5.xyz, r3.wwww, -v6.xyzx
ine r5.w, cb1[92].x, l(0)
utof r6.xy, r4.wzww
dp2 r6.z, r6.yxyy, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r6.z, r6.z
mul r6.z, r6.z, l(52.982918)
frc r6.z, r6.z
mad r6.z, r6.z, l(6.28318548), cb1[70].w
sincos r7.x, r8.x, r6.z
dp2 r6.x, r6.xyxx, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r6.x, r6.x
mul r6.x, r6.x, l(52.982918)
frc r6.x, r6.x
mad r6.x, r6.x, l(6.28318548), cb1[70].w
sincos r6.x, r9.x, r6.x
dp3_sat r4.x, r1.xyzx, r5.xyzx
dp3 r6.y, -r5.xyzx, r1.xyzx
add r6.y, r6.y, r6.y
mad r10.xyz, r1.xyzx, -r6.yyyy, -r5.xyzx
mul r6.y, r4.y, l(17.000000)
exp r6.y, r6.y
add r6.y, r6.y, l(2.000000)
div r6.y, l(2.000000), r6.y
sqrt r6.z, r6.y
add r6.w, -r4.y, l(1.000000)
mul r7.z, r6.w, l(5.000000)
mad r7.w, r6.w, l(5.000000), l(-2.500000)
mul_sat r7.w, r7.w, l(0.400000)
mul r7.w, r7.w, l(100.000000)
mad r9.yz, -r6.wwww, l(0.000000, 10.000000, 5.000000, 0.000000), l(0.000000, 6.857410, 7.085000, 0.000000)
exp r8.w, r9.y
mul r8.w, r4.x, r8.w
mul r8.w, r8.w, l(9.136810)
mul r9.y, r6.w, r7.z
mad r9.y, -r9.y, l(2.015905), r9.z
exp r9.y, r9.y
mul r9.y, r4.x, r9.y
mul r9.y, r9.y, l(9.708090)
max r8.w, r8.w, r9.y
max r8.w, r8.w, l(1.268160)
mul r2.w, r2.w, l(0.00781250)
min r2.w, r2.w, l(15.000000)
ftou r2.w, r2.w
ushr r11.xy, r4.zwzz, l(6, 6, 0, 0)
ishl r11.z, r2.w, l(4)
mov r12.xy, l(0,0,0,0)
mov r13.w, l(0)
mov r14.yz, l(0,0,1.000000,0)
mov r15.xy, l(0,0,0,0)
mov r16.xy, l(0,0,0,0)
mov r17.xy, l(0,0,0,0)
mov r18.x, l(1.000000)
mov r19.xyzw, l(0,0,0,0)
mov r20.yzw, l(0,0,0,0)
mov r2.w, l(0)
mov r4.z, l(0)
loop 
  uge r4.w, r4.z, cb2[0].y
  breakc_nz r4.w
  ushr r12.z, r4.z, l(5)
  iadd r13.xyz, r11.xyzx, r12.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r4.w, r13.xyzw, t7.yzwx
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r21.xyzw, r4.z, l(0), t15.wxyz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r22.xyzw, r4.z, l(16), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r23.xyzw, r4.z, l(32), t15.yxwz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r4.z, l(48), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r4.z, l(64), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r4.z, l(80), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r9.yz, r4.z, l(96), t15.xxyx
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r4.z, l(116), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r4.z, l(132), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r4.z, l(148), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r4.z, l(164), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r4.z, l(180), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r4.z, l(196), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xy, r4.z, l(212), t15.xyxx
  add r13.xyz, -r21.yzwy, v6.xyzx
  dp3 r9.w, r13.xyzx, r13.xyzx
  sqrt r9.w, r9.w
  ge r9.w, cb2[54].y, r9.w
  and r11.w, r27.y, l(0x0000ffff)
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r11.w, l(0), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r11.w, l(16), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r11.w, l(32), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r11.w, l(48), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r38.xyzw, r11.w, l(64), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r39.xyzw, r11.w, l(80), t16.xyzw
  dp3 r12.z, r34.xyzx, r13.xyzx
  add_sat r12.z, r34.w, r12.z
  dp3 r12.w, r35.xyzx, r13.xyzx
  add_sat r12.w, r35.w, r12.w
  mul r12.z, r12.w, r12.z
  dp3 r12.w, r36.xyzx, r13.xyzx
  add_sat r12.w, r36.w, r12.w
  mul r12.z, r12.w, r12.z
  dp3 r12.w, r37.xyzx, r13.xyzx
  add_sat r12.w, r37.w, r12.w
  mul r12.z, r12.w, r12.z
  dp3 r12.w, r38.xyzx, r13.xyzx
  add_sat r12.w, r38.w, r12.w
  mul r12.z, r12.w, r12.z
  dp3 r12.w, r39.xyzx, r13.xyzx
  add_sat r12.w, r39.w, r12.w
  mul r14.x, r12.w, r12.z
  and r12.z, r9.y, l(1)
  movc r12.zw, r12.zzzz, r14.xxxy, r14.zzzx
  mov r34.xy, r27.zwzz
  mov r34.z, r28.z
  dp3 r14.x, r10.xyzx, r34.xyzx
  dp3 r14.w, r13.xyzx, r34.xyzx
  add r14.w, -r28.w, r14.w
  ge r15.w, r14.w, l(0.000000)
  max r14.w, r7.w, |r14.w|
  movc r14.w, r15.w, r14.w, -r14.w
  max r14.x, -r14.x, l(0.00000010)
  div r14.x, r14.w, r14.x
  min r14.x, |r14.x|, l(131072.000000)
  mov r28.z, r29.z
  dp3 r14.w, r10.xyzx, r28.xyzx
  dp3 r15.w, r13.xyzx, r28.xyzx
  add r15.w, -r29.w, r15.w
  ge r16.w, r15.w, l(0.000000)
  max r15.w, r7.w, |r15.w|
  movc r15.w, r16.w, r15.w, -r15.w
  max r14.w, -r14.w, l(0.00000010)
  div r14.w, r15.w, r14.w
  min r14.x, |r14.w|, r14.x
  mov r29.z, r30.z
  dp3 r14.w, r10.xyzx, r29.xyzx
  dp3 r15.w, r13.xyzx, r29.xyzx
  add r15.w, -r30.w, r15.w
  ge r16.w, r15.w, l(0.000000)
  max r15.w, r7.w, |r15.w|
  movc r15.w, r16.w, r15.w, -r15.w
  max r14.w, -r14.w, l(0.00000010)
  div r14.w, r15.w, r14.w
  min r14.x, |r14.w|, r14.x
  mov r30.z, r31.z
  dp3 r14.w, r10.xyzx, r30.xyzx
  dp3 r15.w, r13.xyzx, r30.xyzx
  add r15.w, -r31.w, r15.w
  ge r16.w, r15.w, l(0.000000)
  max r15.w, r7.w, |r15.w|
  movc r15.w, r16.w, r15.w, -r15.w
  max r14.w, -r14.w, l(0.00000010)
  div r14.w, r15.w, r14.w
  min r14.x, |r14.w|, r14.x
  mov r31.z, r32.x
  dp3 r14.w, r10.xyzx, r31.xyzx
  dp3 r15.w, r13.xyzx, r31.xyzx
  add r15.w, -r32.y, r15.w
  ge r16.w, r15.w, l(0.000000)
  max r15.w, r7.w, |r15.w|
  movc r15.w, r16.w, r15.w, -r15.w
  max r14.w, -r14.w, l(0.00000010)
  div r14.w, r15.w, r14.w
  min r14.x, |r14.w|, r14.x
  mov r33.zw, r32.zzzw
  dp3 r14.w, r10.zxyz, r33.xzwx
  dp3 r15.w, r13.zxyz, r33.xzwx
  add r15.w, -r33.y, r15.w
  ge r16.w, r15.w, l(0.000000)
  max r15.w, r7.w, |r15.w|
  movc r15.w, r16.w, r15.w, -r15.w
  max r14.w, -r14.w, l(0.00000010)
  div r14.w, r15.w, r14.w
  min r14.x, |r14.w|, r14.x
  mov r28.x, r24.w
  mov r28.yz, r25.zzwz
  add r28.xyz, r13.xyzx, r28.xyzx
  mad r28.xyz, r10.xyzx, r14.xxxx, r28.xyzx
  dp3 r14.w, r28.xyzx, r28.xyzx
  sqrt r14.w, r14.w
  div r14.x, r14.x, r14.w
  add r14.x, r14.x, r14.x
  sqrt r14.x, r14.x
  mad r14.x, r6.w, l(5.000000), r14.x
  add r14.x, r14.x, l(-0.844800)
  mov r21.y, r22.z
  mov r21.z, r23.x
  dp3 r29.x, r28.xyzx, r21.xyzx
  mov r30.xy, r22.xwxx
  mov r30.z, r23.w
  dp3 r29.y, r28.xyzx, r30.xyzx
  mov r23.x, r22.y
  dp3 r29.z, r28.xyzx, r23.xyzx
  ubfe r18.zw, l(0, 0, 6, 9), l(0, 0, 25, 16), r27.yyyy
  utof r29.w, r18.w
  sample_l_indexable(texturecubearray)(float,float,float,float) r22.xyz, r29.xyzw, t8.xyzw, s2, r14.x
  and r27.yzw, r22.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
  ieq r27.yzw, r27.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
  or r14.x, r27.z, r27.y
  or r14.x, r27.w, r14.x
  movc r22.xyz, r14.xxxx, l(1.000000,1.000000,0,0), r22.xyzx
  dp3 r28.x, r13.xyzx, r21.xyzx
  dp3 r28.y, r13.xyzx, r30.xyzx
  dp3 r28.z, r13.xyzx, r23.xyzx
  mad_sat r24.xyz, r28.xyzx, r24.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mov r25.z, r26.x
  mad r24.xyz, r24.xyzx, r25.xyzx, r26.yzwy
  dp3 r29.x, r1.xyzx, r21.xyzx
  dp3 r29.y, r1.xyzx, r30.xyzx
  dp3 r29.z, r1.xyzx, r23.xyzx
  lt r21.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r29.xyzx
  movc r15.z, r21.x, l(0), l(0.500000)
  add r23.xyz, r15.xyzx, r24.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r23.xyz, r23.xyzx, t17.xyzw, s4, l(0.000000)
  movc r16.z, r21.y, l(0), l(0.500000)
  add r21.xyw, r16.xyxz, r24.xyxz
  sample_l_indexable(texture3d)(float,float,float,float) r21.xyw, r21.xywx, t18.xywz, s4, l(0.000000)
  movc r17.z, r21.z, l(0), l(0.500000)
  add r24.xyz, r17.xyzx, r24.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r24.xyz, r24.xyzx, t19.xyzw, s4, l(0.000000)
  mul r25.xyz, r29.xyzx, r29.xyzx
  sample_l_indexable(texturecubearray)(float,float,float,float) r26.xyz, r29.xyzw, t8.xyzw, s2, l(6.000000)
  and r27.yzw, r26.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
  ieq r27.yzw, r27.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
  or r14.x, r27.z, r27.y
  or r14.x, r27.w, r14.x
  movc r26.xyz, r14.xxxx, l(1.000000,1.000000,0,0), r26.xyzx
  mov r28.xyzw, r19.xyzw
  mov r27.yzw, r20.yyzw
  mov r14.x, r2.w
  mov r14.w, r4.w
  loop 
    breakc_z r14.w
    firstbit_lo r15.z, r14.w
    ishl r15.z, l(1), r15.z
    and r15.w, r14.w, r15.z
    if_nz r15.w
      not r15.z, r15.z
      and r14.w, r14.w, r15.z
      if_nz r9.w
        mov r15.z, r9.y
        mov r29.xy, r12.zwzz
        mov r15.w, l(1)
        loop 
          ige r16.z, r15.w, r18.z
          breakc_nz r16.z
          iadd r16.z, r11.w, r15.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r16.z, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r16.z, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r16.z, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r16.z, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r16.z, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r16.z, l(80), t16.xyzw
          dp3 r16.z, r30.xyzx, r13.xyzx
          add_sat r16.z, r30.w, r16.z
          mul r16.z, r16.z, r29.x
          dp3 r16.w, r31.xyzx, r13.xyzx
          add_sat r16.w, r31.w, r16.w
          mul r16.z, r16.w, r16.z
          dp3 r16.w, r32.xyzx, r13.xyzx
          add_sat r16.w, r32.w, r16.w
          mul r16.z, r16.w, r16.z
          dp3 r16.w, r33.xyzx, r13.xyzx
          add_sat r16.w, r33.w, r16.w
          mul r16.z, r16.w, r16.z
          dp3 r16.w, r34.xyzx, r13.xyzx
          add_sat r16.w, r34.w, r16.w
          mul r16.z, r16.w, r16.z
          dp3 r16.w, r35.xyzx, r13.xyzx
          add_sat r16.w, r35.w, r16.w
          mul r29.x, r16.w, r16.z
          ushr r17.z, r15.z, l(2)
          ubfe r17.w, l(1), l(2), r15.z
          and r18.w, r17.z, l(2)
          max r21.z, r29.x, r29.y
          mad r16.z, -r16.z, r16.w, l(1.000000)
          mul r16.z, r16.z, r29.y
          movc r18.y, r18.w, r16.z, r21.z
          movc r29.xy, r17.wwww, r29.xyxx, r18.xyxx
          iadd r15.w, r15.w, l(1)
          mov r15.z, r17.z
        endloop 
        mov_sat r29.y, r29.y
        mul r15.z, r9.z, r29.y
        lt r15.w, l(0.000000), r15.z
        if_nz r15.w
          mad r30.z, r29.y, r9.z, r27.w
          mul r15.z, r27.x, r15.z
          mul r29.xzw, r15.zzzz, r25.xxyz
          mul r31.xyz, r21.xywx, r29.zzzz
          mad r31.xyz, r23.xyzx, r29.xxxx, r31.xyzx
          mad r29.xzw, r24.xxyz, r29.wwww, r31.xxyz
          mul r31.xyz, r26.xyzx, r29.xzwx
          dp3 r15.w, r31.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r31.xyz, r29.xzwx, r26.xyzx, r28.xyzx
          mul r16.z, r8.w, r15.w
          mul r29.xzw, r15.zzzz, r22.xxyz
          dp3 r15.z, r29.xzwx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r15.z, r8.w, r15.w, r15.z
          div r15.z, r16.z, r15.z
          mov r32.x, r28.w
          mov r32.yz, r27.yyzy
          mad r30.xyw, r29.zwzx, r15.zzzz, r32.yzyx
          mov r31.w, r30.w
        else 
          mov r31.xyzw, r28.xyzw
          mov r30.xyz, r27.yzwy
        endif 
        mov r14.x, l(-1)
        mov r28.xyzw, r31.xyzw
        mov r27.yzw, r30.xxyz
        break 
      endif 
    endif 
  endloop 
  if_nz r14.x
    mov r19.xyzw, r28.xyzw
    mov r20.yzw, r27.yyzw
    mov r2.w, l(-1)
    break 
  endif 
  iadd r4.z, r4.z, l(32)
  mov r19.xyzw, r28.xyzw
  mov r20.yzw, r27.yyzw
  mov r2.w, r14.x
endloop 
if_z r2.w
  iadd r2.w, cb2[0].y, -cb2[58].x
  and r4.z, r2.w, l(-32)
  iadd r4.w, r2.w, -r4.z
  and r9.y, cb2[0].y, l(-32)
  iadd r9.z, -r9.y, cb2[0].y
  mov r12.xy, l(0,0,0,0)
  mov r13.w, l(0)
  mov r14.yz, l(0,0,1.000000,0)
  mov r15.xy, l(0,0,0,0)
  mov r16.x, l(1.000000)
  mov r17.xy, l(0,0,0,0)
  mov r18.xy, l(0,0,0,0)
  mov r21.xyzw, r19.xyzw
  mov r22.yzw, r20.yyzw
  mov r9.w, r4.z
  loop 
    uge r11.w, r9.w, cb2[0].y
    breakc_nz r11.w
    ushr r12.z, r9.w, l(5)
    iadd r13.xyz, r11.xyzx, r12.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r11.w, r13.xyzw, t7.yzwx
    ieq r12.z, r4.z, r9.w
    bfi r12.w, r4.w, l(0), l(0), r11.w
    movc r11.w, r12.z, r12.w, r11.w
    ieq r12.z, r9.y, r9.w
    ubfe r12.w, r9.z, l(0), r11.w
    movc r11.w, r12.z, r12.w, r11.w
    iadd r12.z, r9.w, cb2[0].x
    mov r23.xyzw, r21.xyzw
    mov r24.xyz, r22.yzwy
    mov r12.w, r11.w
    loop 
      breakc_z r12.w
      firstbit_lo r13.x, r12.w
      ishl r13.y, l(1), r13.x
      and r13.z, r12.w, r13.y
      if_nz r13.z
        xor r12.w, r12.w, r13.y
        iadd r13.y, r12.z, r13.x
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r25.xyzw, r13.y, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r26.xy, r13.y, l(16), t11.xyxx
        add r25.xyz, r25.xyzx, -v6.xyzx
        mov r26.z, r25.w
        lt r25.xyz, |r25.xyzx|, r26.zxyz
        and r13.y, r25.y, r25.x
        and r13.y, r25.z, r13.y
        if_nz r13.y
          iadd r13.x, r9.w, r13.x
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r13.x, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r13.yz, r13.x, l(96), t15.xxyx
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r13.x, l(116), t15.zwxy
          add r27.xyz, -r25.yzwy, v6.xyzx
          and r14.w, r26.w, l(0x0000ffff)
          ubfe r15.w, l(6), l(25), r26.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r14.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r14.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r14.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r14.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r14.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r14.w, l(80), t16.xyzw
          dp3 r16.z, r28.xyzx, r27.xyzx
          add_sat r16.z, r28.w, r16.z
          dp3 r16.w, r29.xyzx, r27.xyzx
          add_sat r16.w, r29.w, r16.w
          mul r16.z, r16.w, r16.z
          dp3 r16.w, r30.xyzx, r27.xyzx
          add_sat r16.w, r30.w, r16.w
          mul r16.z, r16.w, r16.z
          dp3 r16.w, r31.xyzx, r27.xyzx
          add_sat r16.w, r31.w, r16.w
          mul r16.z, r16.w, r16.z
          dp3 r16.w, r32.xyzx, r27.xyzx
          add_sat r16.w, r32.w, r16.w
          mul r16.z, r16.w, r16.z
          dp3 r16.w, r33.xyzx, r27.xyzx
          add_sat r16.w, r33.w, r16.w
          mul r14.x, r16.w, r16.z
          and r16.z, r13.y, l(1)
          movc r16.zw, r16.zzzz, r14.xxxy, r14.zzzx
          mov r14.x, r13.y
          mov r28.xy, r16.zwzz
          mov r17.w, l(1)
          loop 
            ige r18.w, r17.w, r15.w
            breakc_nz r18.w
            iadd r18.w, r14.w, r17.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r18.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r18.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r18.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r18.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r18.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r18.w, l(80), t16.xyzw
            dp3 r18.w, r29.xyzx, r27.xyzx
            add_sat r18.w, r29.w, r18.w
            mul r18.w, r18.w, r28.x
            dp3 r25.w, r30.xyzx, r27.xyzx
            add_sat r25.w, r30.w, r25.w
            mul r18.w, r18.w, r25.w
            dp3 r25.w, r31.xyzx, r27.xyzx
            add_sat r25.w, r31.w, r25.w
            mul r18.w, r18.w, r25.w
            dp3 r25.w, r32.xyzx, r27.xyzx
            add_sat r25.w, r32.w, r25.w
            mul r18.w, r18.w, r25.w
            dp3 r25.w, r33.xyzx, r27.xyzx
            add_sat r25.w, r33.w, r25.w
            mul r18.w, r18.w, r25.w
            dp3 r25.w, r34.xyzx, r27.xyzx
            add_sat r25.w, r34.w, r25.w
            mul r28.x, r18.w, r25.w
            ushr r27.w, r14.x, l(2)
            ubfe r28.z, l(1), l(2), r14.x
            and r28.w, r27.w, l(2)
            max r29.x, r28.x, r28.y
            mad r18.w, -r18.w, r25.w, l(1.000000)
            mul r18.w, r18.w, r28.y
            movc r16.y, r28.w, r18.w, r29.x
            movc r28.xy, r28.zzzz, r28.xyxx, r16.xyxx
            iadd r17.w, r17.w, l(1)
            mov r14.x, r27.w
          endloop 
          mov_sat r28.y, r28.y
          mul r13.y, r13.z, r28.y
          lt r14.x, l(0.000000), r13.y
          if_nz r14.x
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r13.x, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r13.x, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r13.x, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r13.x, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r13.x, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r13.x, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r13.x, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r13.x, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r13.x, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r13.x, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xy, r13.x, l(212), t15.xyxx
            mad r24.z, r28.y, r13.z, r24.z
            mul r13.x, r26.z, r13.y
            mov r26.z, r34.z
            dp3 r13.y, r10.xyzx, r26.xyzx
            dp3 r13.z, r27.xyzx, r26.xyzx
            add r13.z, -r34.w, r13.z
            ge r14.x, r13.z, l(0.000000)
            max r13.z, r7.w, |r13.z|
            movc r13.z, r14.x, r13.z, -r13.z
            max r13.y, -r13.y, l(0.00000010)
            div r13.y, r13.z, r13.y
            min r13.y, |r13.y|, l(131072.000000)
            mov r34.z, r35.z
            dp3 r13.z, r10.xyzx, r34.xyzx
            dp3 r14.x, r27.xyzx, r34.xyzx
            add r14.x, -r35.w, r14.x
            ge r14.w, r14.x, l(0.000000)
            max r14.x, r7.w, |r14.x|
            movc r14.x, r14.w, r14.x, -r14.x
            max r13.z, -r13.z, l(0.00000010)
            div r13.z, r14.x, r13.z
            min r13.y, |r13.z|, r13.y
            mov r35.z, r36.z
            dp3 r13.z, r10.xyzx, r35.xyzx
            dp3 r14.x, r27.xyzx, r35.xyzx
            add r14.x, -r36.w, r14.x
            ge r14.w, r14.x, l(0.000000)
            max r14.x, r7.w, |r14.x|
            movc r14.x, r14.w, r14.x, -r14.x
            max r13.z, -r13.z, l(0.00000010)
            div r13.z, r14.x, r13.z
            min r13.y, |r13.z|, r13.y
            mov r36.z, r37.z
            dp3 r13.z, r10.xyzx, r36.xyzx
            dp3 r14.x, r27.xyzx, r36.xyzx
            add r14.x, -r37.w, r14.x
            ge r14.w, r14.x, l(0.000000)
            max r14.x, r7.w, |r14.x|
            movc r14.x, r14.w, r14.x, -r14.x
            max r13.z, -r13.z, l(0.00000010)
            div r13.z, r14.x, r13.z
            min r13.y, |r13.z|, r13.y
            mov r37.z, r38.x
            dp3 r13.z, r10.xyzx, r37.xyzx
            dp3 r14.x, r27.xyzx, r37.xyzx
            add r14.x, -r38.y, r14.x
            ge r14.w, r14.x, l(0.000000)
            max r14.x, r7.w, |r14.x|
            movc r14.x, r14.w, r14.x, -r14.x
            max r13.z, -r13.z, l(0.00000010)
            div r13.z, r14.x, r13.z
            min r13.y, |r13.z|, r13.y
            mov r39.zw, r38.zzzw
            dp3 r13.z, r10.zxyz, r39.xzwx
            dp3 r14.x, r27.zxyz, r39.xzwx
            add r14.x, -r39.y, r14.x
            ge r14.w, r14.x, l(0.000000)
            max r14.x, r7.w, |r14.x|
            movc r14.x, r14.w, r14.x, -r14.x
            max r13.z, -r13.z, l(0.00000010)
            div r13.z, r14.x, r13.z
            min r13.y, |r13.z|, r13.y
            mov r26.x, r31.w
            mov r26.yz, r32.zzwz
            add r16.yzw, r27.xxyz, r26.xxyz
            mad r16.yzw, r10.xxyz, r13.yyyy, r16.yyzw
            dp3 r13.z, r16.yzwy, r16.yzwy
            sqrt r13.z, r13.z
            div r13.y, r13.y, r13.z
            add r13.y, r13.y, r13.y
            sqrt r13.y, r13.y
            mad r13.y, r6.w, l(5.000000), r13.y
            add r13.y, r13.y, l(-0.844800)
            mov r25.y, r29.z
            mov r25.z, r30.x
            dp3 r34.x, r16.yzwy, r25.xyzx
            mov r26.xy, r29.xwxx
            mov r26.z, r30.w
            dp3 r34.y, r16.yzwy, r26.xyzx
            mov r30.x, r29.y
            dp3 r34.z, r16.yzwy, r30.xyzx
            ubfe r13.z, l(9), l(16), r26.w
            utof r34.w, r13.z
            sample_l_indexable(texturecubearray)(float,float,float,float) r16.yzw, r34.xyzw, t8.wxyz, s2, r13.y
            and r28.xzw, r16.yyzw, l(0x7fffffff, 0, 0x7fffffff, 0x7fffffff)
            ieq r28.xzw, r28.xxzw, l(0x7f800000, 0, 0x7f800000, 0x7f800000)
            or r13.y, r28.z, r28.x
            or r13.y, r28.w, r13.y
            movc r16.yzw, r13.yyyy, l(0,1.000000,1.000000,0), r16.yyzw
            dp3 r29.x, r27.xyzx, r25.xyzx
            dp3 r29.y, r27.xyzx, r26.xyzx
            dp3 r29.z, r27.xyzx, r30.xyzx
            mad_sat r27.xyz, r29.xyzx, r31.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
            mov r32.z, r33.x
            mad r27.xyz, r27.xyzx, r32.xyzx, r33.yzwy
            dp3 r34.x, r1.xyzx, r25.xyzx
            dp3 r34.y, r1.xyzx, r26.xyzx
            dp3 r34.z, r1.xyzx, r30.xyzx
            lt r25.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r34.xyzx
            movc r15.z, r25.x, l(0), l(0.500000)
            add r26.xyz, r15.xyzx, r27.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r26.xyz, r26.xyzx, t17.xyzw, s4, l(0.000000)
            mul r28.xzw, r34.xxyz, r34.xxyz
            mul r28.xzw, r13.xxxx, r28.xxzw
            movc r17.z, r25.y, l(0), l(0.500000)
            add r25.xyw, r17.xyxz, r27.xyxz
            sample_l_indexable(texture3d)(float,float,float,float) r25.xyw, r25.xywx, t18.xywz, s4, l(0.000000)
            mul r25.xyw, r28.zzzz, r25.xyxw
            mad r25.xyw, r26.xyxz, r28.xxxx, r25.xyxw
            movc r18.z, r25.z, l(0), l(0.500000)
            add r26.xyz, r18.xyzx, r27.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r26.xyz, r26.xyzx, t19.xyzw, s4, l(0.000000)
            mad r25.xyz, r26.xyzx, r28.wwww, r25.xywx
            sample_l_indexable(texturecubearray)(float,float,float,float) r26.xyz, r34.xyzw, t8.xyzw, s2, l(6.000000)
            and r27.xyz, r26.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
            ieq r27.xyz, r27.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
            or r13.y, r27.y, r27.x
            or r13.y, r27.z, r13.y
            movc r26.xyz, r13.yyyy, l(1.000000,1.000000,0,0), r26.xyzx
            mul r27.xyz, r25.xyzx, r26.xyzx
            dp3 r13.y, r27.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r23.xyz, r25.xyzx, r26.xyzx, r23.xyzx
            mul r13.z, r8.w, r13.y
            mul r16.yzw, r13.xxxx, r16.yyzw
            dp3 r13.x, r16.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r13.x, r8.w, r13.y, r13.x
            div r13.x, r13.z, r13.x
            mov r25.x, r23.w
            mov r25.yz, r24.xxyx
            mad r24.xyw, r16.zwzy, r13.xxxx, r25.yzyx
            mov r23.w, r24.w
          endif 
        endif 
      endif 
    endloop 
    mov r21.xyzw, r23.xyzw
    mov r22.yzw, r24.xxyz
    iadd r9.w, r9.w, l(32)
  endloop 
  lt r9.y, r22.w, l(1.000000)
  if_nz r9.y
    mov r12.xy, l(0,0,0,0)
    mov r13.w, l(0)
    mov r14.yz, l(0,0,1.000000,0)
    mov r15.xy, l(0,0,0,0)
    mov r16.x, l(1.000000)
    mov r17.xy, l(0,0,0,0)
    mov r18.xy, l(0,0,0,0)
    mov r23.x, r21.w
    mov r23.yzw, r22.yyzw
    mov r9.yzw, r21.xxyz
    mov r11.w, r22.w
    mov r12.w, l(0)
    loop 
      uge r14.w, r12.w, r2.w
      breakc_nz r14.w
      ushr r12.z, r12.w, l(5)
      iadd r13.xyz, r11.xyzx, r12.xyzx
      ld_indexable(texture2darray)(uint,uint,uint,uint) r12.z, r13.xyzw, t7.yzxw
      ieq r13.x, r4.z, r12.w
      ubfe r13.y, r4.w, l(0), r12.z
      movc r12.z, r13.x, r13.y, r12.z
      iadd r13.x, r12.w, cb2[0].x
      mov r24.xyzw, r23.xyzw
      mov r25.xyz, r9.yzwy
      mov r13.y, r11.w
      mov r13.z, r12.z
      loop 
        breakc_z r13.z
        firstbit_lo r14.w, r13.z
        ishl r15.w, l(1), r14.w
        and r16.z, r13.z, r15.w
        if_nz r16.z
          xor r13.z, r13.z, r15.w
          iadd r15.w, r13.x, r14.w
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r26.xyzw, r15.w, l(0), t11.xyzw
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r27.xy, r15.w, l(16), t11.xyxx
          add r26.xyz, r26.xyzx, -v6.xyzx
          mov r27.z, r26.w
          lt r26.xyz, |r26.xyzx|, r27.zxyz
          and r15.w, r26.y, r26.x
          and r15.w, r26.z, r15.w
          if_nz r15.w
            iadd r14.w, r12.w, r14.w
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r14.w, l(0), t15.wxyz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r16.zw, r14.w, l(96), t15.xxxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r14.w, l(116), t15.zwxy
            add r28.xyz, -r26.yzwy, v6.xyzx
            and r15.w, r27.w, l(0x0000ffff)
            ubfe r17.w, l(6), l(25), r27.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r15.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r15.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r15.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r15.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r15.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r15.w, l(80), t16.xyzw
            dp3 r18.w, r29.xyzx, r28.xyzx
            add_sat r18.w, r29.w, r18.w
            dp3 r20.w, r30.xyzx, r28.xyzx
            add_sat r20.w, r30.w, r20.w
            mul r18.w, r18.w, r20.w
            dp3 r20.w, r31.xyzx, r28.xyzx
            add_sat r20.w, r31.w, r20.w
            mul r18.w, r18.w, r20.w
            dp3 r20.w, r32.xyzx, r28.xyzx
            add_sat r20.w, r32.w, r20.w
            mul r18.w, r18.w, r20.w
            dp3 r20.w, r33.xyzx, r28.xyzx
            add_sat r20.w, r33.w, r20.w
            mul r18.w, r18.w, r20.w
            dp3 r20.w, r34.xyzx, r28.xyzx
            add_sat r20.w, r34.w, r20.w
            mul r14.x, r18.w, r20.w
            and r18.w, r16.z, l(1)
            movc r29.xy, r18.wwww, r14.xyxx, r14.zxzz
            mov r14.x, r16.z
            mov r30.xy, r29.xyxx
            mov r18.w, l(1)
            loop 
              ige r20.w, r18.w, r17.w
              breakc_nz r20.w
              iadd r20.w, r15.w, r18.w
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r20.w, l(0), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r20.w, l(16), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r20.w, l(32), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r20.w, l(48), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r20.w, l(64), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r20.w, l(80), t16.xyzw
              dp3 r20.w, r31.xyzx, r28.xyzx
              add_sat r20.w, r31.w, r20.w
              mul r20.w, r20.w, r30.x
              dp3 r25.w, r32.xyzx, r28.xyzx
              add_sat r25.w, r32.w, r25.w
              mul r20.w, r20.w, r25.w
              dp3 r25.w, r33.xyzx, r28.xyzx
              add_sat r25.w, r33.w, r25.w
              mul r20.w, r20.w, r25.w
              dp3 r25.w, r34.xyzx, r28.xyzx
              add_sat r25.w, r34.w, r25.w
              mul r20.w, r20.w, r25.w
              dp3 r25.w, r35.xyzx, r28.xyzx
              add_sat r25.w, r35.w, r25.w
              mul r20.w, r20.w, r25.w
              dp3 r25.w, r36.xyzx, r28.xyzx
              add_sat r25.w, r36.w, r25.w
              mul r30.x, r20.w, r25.w
              ushr r26.w, r14.x, l(2)
              ubfe r28.w, l(1), l(2), r14.x
              and r29.z, r26.w, l(2)
              max r29.w, r30.x, r30.y
              mad r20.w, -r20.w, r25.w, l(1.000000)
              mul r20.w, r20.w, r30.y
              movc r16.y, r29.z, r20.w, r29.w
              movc r30.xy, r28.wwww, r30.xyxx, r16.xyxx
              iadd r18.w, r18.w, l(1)
              mov r14.x, r26.w
            endloop 
            add_sat r14.x, -r13.y, r30.y
            mul r15.w, r16.w, r14.x
            lt r16.y, l(0.000000), r15.w
            if_nz r16.y
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r14.w, l(16), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r14.w, l(32), t15.yxwz
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r14.w, l(48), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r14.w, l(64), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r14.w, l(80), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r14.w, l(132), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r14.w, l(148), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r14.w, l(164), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r14.w, l(180), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xyzw, r14.w, l(196), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r40.xy, r14.w, l(212), t15.xyxx
              mad r24.w, r14.x, r16.w, r24.w
              mul r14.x, r27.z, r15.w
              mov r27.z, r35.z
              dp3 r14.w, r10.xyzx, r27.xyzx
              dp3 r15.w, r28.xyzx, r27.xyzx
              add r15.w, -r35.w, r15.w
              ge r16.y, r15.w, l(0.000000)
              max r15.w, r7.w, |r15.w|
              movc r15.w, r16.y, r15.w, -r15.w
              max r14.w, -r14.w, l(0.00000010)
              div r14.w, r15.w, r14.w
              min r14.w, |r14.w|, l(131072.000000)
              mov r35.z, r36.z
              dp3 r15.w, r10.xyzx, r35.xyzx
              dp3 r16.y, r28.xyzx, r35.xyzx
              add r16.y, -r36.w, r16.y
              ge r16.z, r16.y, l(0.000000)
              max r16.y, r7.w, |r16.y|
              movc r16.y, r16.z, r16.y, -r16.y
              max r15.w, -r15.w, l(0.00000010)
              div r15.w, r16.y, r15.w
              min r14.w, r14.w, |r15.w|
              mov r36.z, r37.z
              dp3 r15.w, r10.xyzx, r36.xyzx
              dp3 r16.y, r28.xyzx, r36.xyzx
              add r16.y, -r37.w, r16.y
              ge r16.z, r16.y, l(0.000000)
              max r16.y, r7.w, |r16.y|
              movc r16.y, r16.z, r16.y, -r16.y
              max r15.w, -r15.w, l(0.00000010)
              div r15.w, r16.y, r15.w
              min r14.w, r14.w, |r15.w|
              mov r37.z, r38.z
              dp3 r15.w, r10.xyzx, r37.xyzx
              dp3 r16.y, r28.xyzx, r37.xyzx
              add r16.y, -r38.w, r16.y
              ge r16.z, r16.y, l(0.000000)
              max r16.y, r7.w, |r16.y|
              movc r16.y, r16.z, r16.y, -r16.y
              max r15.w, -r15.w, l(0.00000010)
              div r15.w, r16.y, r15.w
              min r14.w, r14.w, |r15.w|
              mov r38.z, r39.x
              dp3 r15.w, r10.xyzx, r38.xyzx
              dp3 r16.y, r28.xyzx, r38.xyzx
              add r16.y, -r39.y, r16.y
              ge r16.z, r16.y, l(0.000000)
              max r16.y, r7.w, |r16.y|
              movc r16.y, r16.z, r16.y, -r16.y
              max r15.w, -r15.w, l(0.00000010)
              div r15.w, r16.y, r15.w
              min r14.w, r14.w, |r15.w|
              mov r40.zw, r39.zzzw
              dp3 r15.w, r10.zxyz, r40.xzwx
              dp3 r16.y, r28.zxyz, r40.xzwx
              add r16.y, -r40.y, r16.y
              ge r16.z, r16.y, l(0.000000)
              max r16.y, r7.w, |r16.y|
              movc r16.y, r16.z, r16.y, -r16.y
              max r15.w, -r15.w, l(0.00000010)
              div r15.w, r16.y, r15.w
              min r14.w, r14.w, |r15.w|
              mov r27.x, r32.w
              mov r27.yz, r33.zzwz
              add r16.yzw, r28.xxyz, r27.xxyz
              mad r16.yzw, r10.xxyz, r14.wwww, r16.yyzw
              dp3 r15.w, r16.yzwy, r16.yzwy
              sqrt r15.w, r15.w
              div r14.w, r14.w, r15.w
              add r14.w, r14.w, r14.w
              sqrt r14.w, r14.w
              mad r14.w, r6.w, l(5.000000), r14.w
              add r14.w, r14.w, l(-0.844800)
              mov r26.y, r29.z
              mov r26.z, r31.x
              dp3 r35.x, r16.yzwy, r26.xyzx
              mov r27.xy, r29.xwxx
              mov r27.z, r31.w
              dp3 r35.y, r16.yzwy, r27.xyzx
              mov r31.x, r29.y
              dp3 r35.z, r16.yzwy, r31.xyzx
              ubfe r15.w, l(9), l(16), r27.w
              utof r35.w, r15.w
              sample_l_indexable(texturecubearray)(float,float,float,float) r16.yzw, r35.xyzw, t8.wxyz, s2, r14.w
              and r29.xyz, r16.yzwy, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
              ieq r29.xyz, r29.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
              or r14.w, r29.y, r29.x
              or r14.w, r29.z, r14.w
              movc r16.yzw, r14.wwww, l(0,1.000000,1.000000,0), r16.yyzw
              dp3 r29.x, r28.xyzx, r26.xyzx
              dp3 r29.y, r28.xyzx, r27.xyzx
              dp3 r29.z, r28.xyzx, r31.xyzx
              mad_sat r28.xyz, r29.xyzx, r32.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
              mov r33.z, r34.x
              mad r28.xyz, r28.xyzx, r33.xyzx, r34.yzwy
              dp3 r35.x, r1.xyzx, r26.xyzx
              dp3 r35.y, r1.xyzx, r27.xyzx
              dp3 r35.z, r1.xyzx, r31.xyzx
              lt r26.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r35.xyzx
              movc r15.z, r26.x, l(0), l(0.500000)
              add r27.xyz, r15.xyzx, r28.xyzx
              sample_l_indexable(texture3d)(float,float,float,float) r27.xyz, r27.xyzx, t17.xyzw, s4, l(0.000000)
              mul r29.xyz, r35.xyzx, r35.xyzx
              mul r29.xyz, r14.xxxx, r29.xyzx
              movc r17.z, r26.y, l(0), l(0.500000)
              add r26.xyw, r17.xyxz, r28.xyxz
              sample_l_indexable(texture3d)(float,float,float,float) r26.xyw, r26.xywx, t18.xywz, s4, l(0.000000)
              mul r26.xyw, r29.yyyy, r26.xyxw
              mad r26.xyw, r27.xyxz, r29.xxxx, r26.xyxw
              movc r18.z, r26.z, l(0), l(0.500000)
              add r27.xyz, r18.xyzx, r28.xyzx
              sample_l_indexable(texture3d)(float,float,float,float) r27.xyz, r27.xyzx, t19.xyzw, s4, l(0.000000)
              mad r26.xyz, r27.xyzx, r29.zzzz, r26.xywx
              sample_l_indexable(texturecubearray)(float,float,float,float) r27.xyz, r35.xyzw, t8.xyzw, s2, l(6.000000)
              and r28.xyz, r27.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
              ieq r28.xyz, r28.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
              or r14.w, r28.y, r28.x
              or r14.w, r28.z, r14.w
              movc r27.xyz, r14.wwww, l(1.000000,1.000000,0,0), r27.xyzx
              mul r28.xyz, r26.xyzx, r27.xyzx
              dp3 r14.w, r28.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
              mad r25.xyz, r26.xyzx, r27.xyzx, r25.xyzx
              mul r15.z, r8.w, r14.w
              mul r16.yzw, r14.xxxx, r16.yyzw
              dp3 r14.x, r16.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
              mad r14.x, r8.w, r14.w, r14.x
              div r14.x, r15.z, r14.x
              mad r24.xyz, r16.yzwy, r14.xxxx, r24.xyzx
            endif 
          endif 
        endif 
      endloop 
      mov r23.xyzw, r24.xyzw
      mov r9.yzw, r25.xxyz
      iadd r12.w, r12.w, l(32)
    endloop 
    mov r22.xyzw, r23.zxyw
    mov r21.xyz, r9.yzwy
    mov r22.xyzw, r22.yzxw
  else 
    mov r22.x, r21.w
  endif 
  max r2.w, r22.w, l(1.000000)
  rcp r2.w, r2.w
  mov_sat r22.w, r22.w
  mul r19.xyz, r2.wwww, r21.xyzx
  mul r20.xyz, r2.wwww, r22.xyzx
  lt r4.z, r22.w, l(0.990000)
  if_nz r4.z
    add r4.z, -r22.w, l(1.000000)
    mul r4.w, r4.z, cb2[19].x
    add r9.yzw, v6.xxyz, -cb2[35].xxyz
    mul r12.x, r9.y, cb2[35].w
    mul r12.yz, r9.zzwz, cb2[36].xxyx
    add_sat r9.yzw, r12.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
    mul r12.xy, r9.yzyy, cb2[36].zwzz
    mul r12.z, r9.w, cb2[37].x
    add r9.yzw, r12.xxyz, cb2[37].yyzw
    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r1.xyzx
    movc r12.xyz, r12.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
    mov r12.w, l(0)
    add r13.xyz, r9.yzwy, r12.wwxw
    sample_l_indexable(texture3d)(float,float,float,float) r13.xyz, r13.xyzx, t17.xyzw, s4, l(0.000000)
    mul r14.xyz, r1.xyzx, r1.xyzx
    mul r14.xyz, r4.wwww, r14.xyzx
    add r15.xyz, r9.yzwy, r12.wwyw
    sample_l_indexable(texture3d)(float,float,float,float) r15.xyz, r15.xyzx, t18.xyzw, s4, l(0.000000)
    mul r15.xyz, r14.yyyy, r15.xyzx
    mad r13.xyz, r13.xyzx, r14.xxxx, r15.xyzx
    add r9.yzw, r9.yyzw, r12.wwwz
    sample_l_indexable(texture3d)(float,float,float,float) r9.yzw, r9.yzwy, t19.wxyz, s4, l(0.000000)
    mad r9.yzw, r9.yyzw, r14.zzzz, r13.xxyz
    mov r1.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r12.xyz, r1.xyzw, t8.xyzw, s2, l(6.000000)
    mul r9.yzw, r9.yyzw, r12.xxyz
    dp3 r1.w, r9.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
    mad r19.xyz, r21.xyzx, r2.wwww, r9.yzwy
    mov r10.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r9.yzw, r10.xyzw, t8.wxyz, s2, r7.z
    mad r2.w, cb2[19].x, r4.z, -r1.w
    mad r1.w, r4.y, r2.w, r1.w
    mad r20.xyz, r9.yzwy, r1.wwww, r20.xyzx
  endif 
else 
  mov r20.x, r19.w
endif 
add r1.w, r0.w, r4.x
log r1.w, |r1.w|
mul r1.w, r1.w, r6.z
exp r1.w, r1.w
add r1.w, r0.w, r1.w
add_sat r1.w, r1.w, l(-1.000000)
mul r12.xyz, r0.wwww, r19.yzxy
mad r4.yz, r4.xxyx, l(0.000000, 0.984375, 0.984375, 0.000000), l(0.000000, 0.00781250, 0.00781250, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r4.yz, r4.yzyy, t5.zxyw, s2, l(0.000000)
mul r9.yzw, r1.wwww, r20.xxyz
mul r13.xyz, r4.yyyy, r9.yzwy
mul r14.xyz, r4.zzzz, r9.yzwy
sqrt r0.w, r6.z
mad r0.w, r0.w, l(0.500000), l(0.500000)
mul r0.w, r0.w, r0.w
mul r1.w, r0.w, l(0.500000)
mad r0.w, -r0.w, l(0.500000), l(1.000000)
mad r2.w, r4.x, r0.w, r1.w
mul r0.w, r0.w, r2.w
mul r1.w, r1.w, r2.w
dp3 r2.w, r1.xyzx, cb2[17].xyzx
ge r4.y, l(0.000000), |r2.w|
if_nz r4.y
  mov r4.z, l(0)
endif 
if_z r4.y
  mul r9.yzw, v6.yyyy, cb2[29].xxyz
  mad r9.yzw, v6.xxxx, cb2[28].xxyz, r9.yyzw
  mad r9.yzw, v6.zzzz, cb2[30].xxyz, r9.yyzw
  add r9.yzw, r9.yyzw, cb2[31].xxyz
  add r4.y, r9.w, -cb2[17].w
  mad r4.y, -r4.y, l(0.00006104), l(1.000000)
  mov_sat r4.w, r4.y
  eq r4.w, r4.y, r4.w
  if_nz r4.w
    mov r4.w, l(0)
    mov r6.w, l(0)
    loop 
      ge r7.z, r4.w, l(3.000000)
      breakc_nz r7.z
      ftou r7.z, r4.w
      add r15.xy, r9.yzyy, -cb2[r7.z + 20].xyxx
      max r7.w, |r15.y|, |r15.x|
      mul r6.w, r7.w, cb2[r7.z + 20].z
      lt r7.z, r6.w, l(1.000000)
      if_nz r7.z
        break 
      endif 
      add r4.w, r4.w, l(1.000000)
      mov r6.w, l(0)
    endloop 
  else 
    mov r4.w, l(3.000000)
    mov r6.w, l(0)
  endif 
  ge r7.z, r4.w, l(3.000000)
  if_nz r7.z
    mul r15.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
    rcp r16.xz, r15.xxxx
    mov r16.y, -r16.z
    mad r15.xyz, r9.yzyy, r16.xyzx, r15.yzyy
    add r16.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r15.xyz, r15.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r15.xyz, r16.xyzx, r15.xyzx
    mul r16.xy, r15.zyzz, cb2[32].xxxx
    round_ni r16.xy, r16.xyxx
    mul r7.w, r16.y, cb2[27].x
    mad r7.w, r7.w, cb2[32].x, r16.x
    ftou r7.w, r7.w
    iadd r7.w, r7.w, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r8.w, r7.w, l(0), t23.xxxx
    and r10.w, r8.w, l(0x40000000)
    ishl r11.w, r8.w, l(2)
    if_z r10.w
      and r10.w, r8.w, l(0x01ffffff)
      iadd r16.x, r7.w, r10.w
      ushr r7.w, r8.w, l(25)
      utof r7.w, r7.w
      mul r15.xyz, r7.wwww, r15.xyzx
      frc r15.xyz, r15.xyzx
      mul r15.xyz, r15.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
      ftou r15.xyz, r15.xyzx
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.z, r16.x, l(0), t23.xxxx
      ushr r17.xy, r15.zyzz, l(6, 6, 0, 0)
      and r7.w, r16.z, l(0xc0000000)
      iadd r8.w, r16.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r8.w, r8.w, l(0), t23.xxxx
      movc r8.w, r17.y, r16.z, r8.w
      ushr r10.w, r8.w, l(13)
      movc r8.w, r17.x, r10.w, r8.w
      and r8.w, r8.w, l(8191)
      iadd r17.x, r8.w, r16.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.z, r17.x, l(0), t23.xxxx
      mov r16.y, l(0)
      mov r17.y, l(1)
      movc r17.xyz, r7.wwww, r16.xyzx, r17.xyzx
      movc r18.yz, r7.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r19.xy, r15.zyzz, r18.yyyy
      and r19.xy, r19.xyxx, l(1, 1, 0, 0)
      and r8.w, r17.z, l(0xc0000000)
      iadd r10.w, r17.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r10.w, r10.w, l(0), t23.xxxx
      movc r10.w, r19.y, r17.z, r10.w
      ushr r13.w, r10.w, l(13)
      movc r10.w, r19.x, r13.w, r10.w
      and r10.w, r10.w, l(8191)
      iadd r18.x, r10.w, r17.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.w, r18.x, l(0), t23.xxxx
      movc r17.xyz, r8.wwww, r17.xyzx, r18.xzwx
      movc r16.xyz, r7.wwww, r16.xyzx, r17.xyzx
      and r7.w, r16.z, l(0xc0000000)
      if_z r7.w
        iadd r7.w, -r16.y, l(6)
        ushr r17.xy, r15.zyzz, r7.wwww
        or r7.w, r16.z, l(0x40000000)
        bfi r8.w, l(1), l(1), r17.y, l(0)
        bfi r8.w, l(1), l(0), r17.x, r8.w
        imul null, r8.w, r8.w, l(10)
        ushr r7.w, r7.w, r8.w
        and r7.w, r7.w, l(1023)
        iadd r17.x, r7.w, r16.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.w, r17.x, l(0), t23.xxxx
        iadd r17.yz, r16.yyyy, l(0, 1, 2, 0)
        iadd r7.w, -r17.y, l(6)
        ushr r16.yw, r15.zzzy, r7.wwww
        and r7.w, r17.w, l(0xc0000000)
        or r8.w, r17.w, l(0x40000000)
        bfi r10.w, l(1), l(1), r16.w, l(0)
        bfi r10.w, l(1), l(0), r16.y, r10.w
        imul null, r10.w, r10.w, l(10)
        ushr r8.w, r8.w, r10.w
        and r8.w, r8.w, l(1023)
        iadd r18.x, r8.w, r17.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.x, l(0), t23.xxxx
        mov r18.y, r17.z
        movc r18.xyz, r7.wwww, r17.xywx, r18.xyzx
        iadd r8.w, -r18.y, l(6)
        ushr r16.yw, r15.zzzy, r8.wwww
        and r8.w, r18.z, l(0xc0000000)
        or r10.w, r18.z, l(0x40000000)
        bfi r13.w, l(1), l(1), r16.w, l(0)
        bfi r13.w, l(1), l(0), r16.y, r13.w
        imul null, r13.w, r13.w, l(10)
        ushr r10.w, r10.w, r13.w
        and r10.w, r10.w, l(1023)
        iadd r19.x, r10.w, r18.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.y, r19.x, l(0), t23.xxxx
        movc r16.yw, r8.wwww, r18.xxxz, r19.xxxy
        movc r16.xz, r7.wwww, r17.xxwx, r16.yywy
      endif 
      and r7.w, r16.z, l(0xc0000000)
      if_z r7.w
        ubfe r8.w, l(14), l(15), r16.z
        utof r8.w, r8.w
        mul r8.w, r8.w, cb2[27].w
        mul r8.w, r8.w, l(0.00006104)
        and r16.yw, r16.zzzz, l(0, 0x00007fff, 0, 0x20000000)
        utof r10.w, r16.y
        mul r10.w, r10.w, cb2[27].w
        mul r10.w, r10.w, l(0.00003052)
        and r13.w, r15.y, l(3)
        iadd r13.w, r13.w, r16.x
        iadd r13.w, r13.w, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r13.w, r13.w, l(0), t23.xxxx
        bfi r15.xyw, l(2, 2, 0, 1), l(3, 1, 0, 4), r15.xyxz, l(0, 0, 0, 0)
        ushr r13.w, r13.w, r15.x
        and r13.w, r13.w, l(255)
        utof r13.w, r13.w
        mul r13.w, r10.w, r13.w
        mad r13.w, r13.w, l(0.00392157), r8.w
        iadd r15.x, r15.y, l(1)
        ubfe r15.y, l(1), l(1), r15.z
        iadd r15.x, r15.y, r15.x
        iadd r15.x, r15.x, r16.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.x, r15.x, l(0), t23.xxxx
        ushr r15.x, r15.x, r15.w
        and r15.x, r15.x, l(0x0000ffff)
        utof r15.x, r15.x
        mul r10.w, r10.w, r15.x
        mad r8.w, r10.w, l(0.00001526), r8.w
        movc r11.w, r16.w, r13.w, r8.w
      else 
        and r8.w, r16.z, l(0x80000000)
        iadd r10.w, r16.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r10.w, r10.w, l(0), t23.xxxx
        movc r8.w, r8.w, r10.w, l(0)
        ishl r10.w, r16.z, l(2)
        ushr r13.w, r8.w, l(16)
        f16tof32 r13.w, r13.w
        and r8.w, r8.w, l(0x0000ffff)
        f16tof32 r8.w, r8.w
        mad r10.w, r9.y, r13.w, r10.w
        mad r8.w, r9.z, r8.w, r10.w
        movc r11.w, r7.w, r8.w, r11.w
      endif 
    endif 
    mad r7.w, -cb2[27].z, l(2.000000), r9.w
    lt r7.w, r11.w, r7.w
    movc r4.z, r7.w, l(0), l(1.000000)
  endif 
  if_z r7.z
    if_z cb2[58].y
      ftou r7.z, r4.w
      add r15.xy, r9.yzyy, -cb2[r7.z + 20].xyxx
      mul r7.zw, r15.xxxy, cb2[r7.z + 20].zzzz
      mad r15.xy, r7.zwzz, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r7.z, cb2[26].y
      add r15.z, r4.w, r7.z
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r7.z, r15.xyzx, t13.xxxx, s13, r4.y
      sample_l_indexable(texture2darray)(float,float,float,float) r7.w, r15.xyzx, t31.yzwx, s0, l(0.000000)
      add r7.z, r7.w, r7.z
      add_sat r7.z, r7.z, l(-1.000000)
      mul r7.w, r7.z, r7.z
      mul r4.z, r7.z, r7.w
    endif 
    if_nz cb2[58].y
      mov r15.x, -r7.x
      ftou r7.z, r4.w
      add r4.w, r4.w, l(1.000000)
      min r4.w, r4.w, l(2.000000)
      ftou r4.w, r4.w
      add r6.w, -r6.w, l(1.000000)
      mul r6.w, r6.w, l(28.000000)
      ftou r6.w, r6.w
      add r16.xy, r9.yzyy, -cb2[r7.z + 20].xyxx
      mul r16.xy, r16.xyxx, cb2[r7.z + 20].zzzz
      mad r16.xy, r16.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      add r9.yz, r9.yyzy, -cb2[r4.w + 20].xxyx
      mul r9.yz, r9.yyzy, cb2[r4.w + 20].zzzz
      mad r9.yz, r9.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      mov r15.y, r8.x
      mov r15.z, r7.x
      mov r7.w, l(0)
      mov r8.w, l(0)
      loop 
        uge r9.w, r8.w, l(8)
        breakc_nz r9.w
        ult r9.w, r6.w, r8.w
        movc r16.zw, r9.wwww, r9.yyyz, r16.xxxy
        movc r10.w, r9.w, cb2[r4.w + 20].w, cb2[r7.z + 20].w
        movc r9.w, r9.w, r4.w, r7.z
        dp2 r17.x, icb[r8.w + 0].yxyy, r15.xyxx
        dp2 r17.y, icb[r8.w + 0].yxyy, r15.yzyy
        mad r17.xy, r17.xyxx, r10.wwww, r16.zwzz
        iadd r9.w, r9.w, cb2[26].y
        utof r17.z, r9.w
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r9.w, r17.xyzx, t13.xxxx, s13, r4.y
        sample_l_indexable(texture2darray)(float,float,float,float) r10.w, r17.xyzx, t31.yzwx, s0, l(0.000000)
        add r9.w, r9.w, r10.w
        add_sat r9.w, r9.w, l(-1.000000)
        mad r7.w, r9.w, l(0.125000), r7.w
        iadd r8.w, r8.w, l(1)
      endloop 
      mul r4.y, r7.w, r7.w
      mul r4.z, r7.w, r4.y
    endif 
  endif 
endif 
lt r4.y, l(0.000000), |r2.w|
if_nz r4.y
  lt r4.y, l(0.000000), r4.z
  if_nz r4.y
    mul r4.y, r6.y, cb2[18].w
    mul r4.y, r4.y, l(0.250000)
    if_nz cb2[23].x
      add r15.xyz, v6.xyzx, cb1[24].xyzx
      mov r15.w, l(1.000000)
      dp4 r4.w, cb2[24].xyzw, r15.xyzw
      dp4 r6.w, cb2[25].xyzw, r15.xyzw
      frc r15.x, r4.w
      frc r15.y, r6.w
      iadd r4.w, l(-1), cb2[23].x
      utof r15.z, r4.w
      sample_l_indexable(texture2darray)(float,float,float,float) r9.yzw, r15.xyzx, t20.wxyz, s2, l(0.000000)
      add r9.yzw, r9.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
      mad r9.yzw, cb2[23].yyyy, r9.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
      mul r9.yzw, r9.yyzw, cb2[18].xxyz
    else 
      mov r9.yzw, cb2[18].xxyz
    endif 
    ushr r4.w, cb2[53].x, l(16)
    ult r6.w, l(0), r4.w
    and r6.w, r5.w, r6.w
    if_nz r6.w
      iadd r4.w, r4.w, cb2[0].x
      iadd r4.w, r4.w, l(-1)
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r6.w, r4.w, l(52), t12.xxxx
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r4.w, l(68), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r4.w, l(84), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r4.w, l(132), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r4.w, l(148), t12.xyzw
      mad r7.z, |r2.w|, l(-0.200000), l(0.400000)
      lt r7.w, r2.w, l(0.000000)
      movc r7.z, r7.w, -r7.z, r7.z
      mad r19.xyz, r1.xyzx, r7.zzzz, v6.xyzx
      mov r19.w, l(1.000000)
      dp4 r15.x, r15.xyzw, r19.xyzw
      dp4 r15.y, r16.xyzw, r19.xyzw
      mad r7.zw, r15.xxxy, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
      add r7.zw, r18.zzzw, r7.zzzw
      mul r7.zw, r18.xxxy, r7.zzzw
      div r15.xy, r6.wwww, r17.xzxx
      add r15.zw, -r15.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
      ge r15.zw, r7.zzzw, r15.zzzw
      ge r15.xy, r15.xyxx, r7.zwzz
      or r15.xy, r15.xyxx, r15.zwzz
      or r8.w, r15.y, r15.x
      if_z r8.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r8.w, r4.w, l(28), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r4.w, l(100), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xy, r4.w, l(164), t12.xyxx
        dp4 r4.w, r15.xyzw, r19.xyzw
        mov_sat r7.zw, r7.zzzw
        mad r15.xy, r7.zwzz, r17.xzxx, r17.ywyy
        add r4.w, r16.x, r4.w
        div r4.w, r4.w, r16.y
        max r4.w, r4.w, l(0.00006104)
        and r7.z, r8.w, l(0x0000ffff)
        if_nz cb2[58].y
          mov r16.x, -r7.x
          utof r17.z, r7.z
          mov r16.y, r8.x
          mov r16.z, r7.x
          mov r7.w, l(0)
          mov r8.w, l(0)
          loop 
            ige r10.w, r8.w, l(8)
            breakc_nz r10.w
            dp2 r18.x, icb[r8.w + 0].yxyy, r16.xyxx
            dp2 r18.y, icb[r8.w + 0].yxyy, r16.yzyy
            mad r17.xy, r18.xyxx, r6.wwww, r15.xyxx
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.w, r17.xyzx, t9.xxxx, s13, r4.w
            mad r7.w, r10.w, l(0.125000), r7.w
            iadd r8.w, r8.w, l(1)
          endloop 
        else 
          utof r15.z, r7.z
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r7.w, r15.xyzx, t9.xxxx, s13, r4.w
        endif 
        mul r4.w, r7.w, r7.w
        mul r4.w, r7.w, r4.w
      else 
        mov r4.w, l(1.000000)
      endif 
      mul r4.z, r4.w, r4.z
    else 
      and r4.w, cb2[53].x, l(0x0000ffff)
      ult r6.w, l(0), r4.w
      not r7.z, r5.w
      and r6.w, r6.w, r7.z
      if_nz r6.w
        iadd r4.w, r4.w, cb2[0].x
        iadd r4.w, r4.w, l(-1)
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r6.w, r4.w, l(52), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r4.w, l(68), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r4.w, l(84), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r4.w, l(132), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r4.w, l(148), t12.xyzw
        mad r7.z, |r2.w|, l(-0.200000), l(0.400000)
        lt r7.w, r2.w, l(0.000000)
        movc r7.z, r7.w, -r7.z, r7.z
        mad r19.xyz, r1.xyzx, r7.zzzz, v6.xyzx
        mov r19.w, l(1.000000)
        dp4 r15.x, r15.xyzw, r19.xyzw
        dp4 r15.y, r16.xyzw, r19.xyzw
        mad r7.zw, r15.xxxy, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
        add r7.zw, r18.zzzw, r7.zzzw
        mul r7.zw, r18.xxxy, r7.zzzw
        div r15.xy, r6.wwww, r17.xzxx
        add r15.zw, -r15.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
        ge r15.zw, r7.zzzw, r15.zzzw
        ge r15.xy, r15.xyxx, r7.zwzz
        or r15.xy, r15.xyxx, r15.zwzz
        or r8.w, r15.y, r15.x
        if_z r8.w
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r8.w, r4.w, l(28), t12.xxxx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r4.w, l(100), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xy, r4.w, l(164), t12.xyxx
          dp4 r4.w, r15.xyzw, r19.xyzw
          mov_sat r7.zw, r7.zzzw
          mad r15.xy, r7.zwzz, r17.xzxx, r17.ywyy
          add r4.w, r16.x, r4.w
          div r4.w, r4.w, r16.y
          max r4.w, r4.w, l(0.00006104)
          and r7.z, r8.w, l(0x0000ffff)
          if_nz cb2[58].y
            mov r16.x, -r7.x
            utof r17.z, r7.z
            mov r16.y, r8.x
            mov r16.z, r7.x
            mov r7.w, l(0)
            mov r8.w, l(0)
            loop 
              ige r10.w, r8.w, l(8)
              breakc_nz r10.w
              dp2 r18.x, icb[r8.w + 0].yxyy, r16.xyxx
              dp2 r18.y, icb[r8.w + 0].yxyy, r16.yzyy
              mad r17.xy, r18.xyxx, r6.wwww, r15.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.w, r17.xyzx, t9.xxxx, s13, r4.w
              mad r7.w, r10.w, l(0.125000), r7.w
              iadd r8.w, r8.w, l(1)
            endloop 
          else 
            utof r15.z, r7.z
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r7.w, r15.xyzx, t9.xxxx, s13, r4.w
          endif 
          mul r4.w, r7.w, r7.w
          mul r4.w, r7.w, r4.w
        else 
          mov r4.w, l(1.000000)
        endif 
        mul r4.z, r4.w, r4.z
      endif 
    endif 
    mad r4.w, -r4.x, l(0.500000), l(1.000000)
    mad r4.w, -|r2.w|, r4.w, l(1.000000)
    mul r4.w, r4.w, r4.w
    mad r4.w, -r4.w, l(0.620000), l(0.620000)
    add r4.w, -|r2.w|, r4.w
    mad r4.w, r6.z, r4.w, |r2.w|
    mul r4.w, r4.z, r4.w
    lt r6.w, l(0.000000), r2.w
    mad r15.xyz, r4.wwww, r9.zwyz, r12.xyzx
    mov_sat r2.w, r2.w
    mad r16.xyz, -v6.xyzx, r3.wwww, cb2[17].xyzx
    dp3 r3.w, r16.xyzx, r16.xyzx
    rsq r3.w, r3.w
    mul r16.xyz, r3.wwww, r16.xyzx
    dp3 r3.w, r16.xyzx, r5.xyzx
    dp3 r4.w, r1.xyzx, r16.xyzx
    mad r7.z, |r4.w|, r6.y, -|r4.w|
    mad r4.w, |r4.w|, r7.z, l(1.000000)
    mad r7.z, r2.w, r0.w, r1.w
    mul r4.w, r4.w, r4.w
    mul r4.w, r7.z, r4.w
    rcp r4.w, r4.w
    mul r2.w, r4.y, r2.w
    mul r2.w, r2.w, r4.w
    mul r2.w, r4.z, r2.w
    mad r16.yzw, r2.wwww, r9.yyzw, r14.xxyz
    add_sat r3.w, -r3.w, l(1.000000)
    mul r4.y, r3.w, r3.w
    mul r4.y, r4.y, r4.y
    mul r3.w, r3.w, r4.y
    mul r2.w, r2.w, r3.w
    mad r4.yzw, r2.wwww, r9.yyzw, r13.xxyz
    mov r15.w, r12.z
    mov r12.w, r15.z
    movc r17.xyzw, r6.wwww, r15.zxyw, r12.zxyw
    mov r12.zw, r4.yyyz
    mov r15.zw, r13.xxxy
    movc r15.xyzw, r6.wwww, r12.xyzw, r15.xyzw
    mov r16.x, r4.w
    mov r14.w, r13.z
    movc r14.xyzw, r6.wwww, r16.yzwx, r14.xyzw
    mov r12.z, r17.w
    mov r12.xy, r15.xyxx
    mov r13.xy, r15.zwzz
    mov r13.z, r14.w
  else 
    mov r17.xyz, r12.zxyz
  endif 
else 
  mov r17.xyz, r12.zxyz
endif 
mov r15.x, -r7.x
not r2.w, r5.w
mad r3.w, -r4.x, l(0.500000), l(1.000000)
mov r4.xy, l(0,0,0,0)
mov r16.w, l(0)
mov r18.xyz, v6.xyzx
mov r18.w, l(1.000000)
mov r19.w, l(1.000000)
mov r15.z, r7.x
mov r20.w, l(1.000000)
mov r21.z, l(1.000000)
mov r22.w, l(1.000000)
mov r15.yw, r8.xxxx
mov r7.y, r15.w
mov r23.w, l(1.000000)
mov r8.y, r15.x
mov r8.z, r7.x
mov r24.w, l(1.000000)
mov r25.x, r8.x
mov r25.y, r15.x
mov r25.z, r7.x
mov r26.x, r8.x
mov r26.y, r15.x
mov r26.z, r7.x
mov r27.x, r8.x
mov r27.y, r15.x
mov r27.z, r7.x
mov r9.yzw, r17.xxyz
mov r28.xyz, r12.zxyz
mov r29.xyz, r13.xyzx
mov r30.xyz, r14.xyzx
mov r4.w, cb2[58].y
mov r6.w, l(0)
loop 
  uge r7.z, r6.w, cb2[0].x
  breakc_nz r7.z
  ushr r4.z, r6.w, l(5)
  iadd r16.xyz, r4.xyzx, r11.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r4.z, r16.xyzw, t6.yzxw
  mov r16.xyz, r9.yzwy
  mov r31.xyz, r28.xyzx
  mov r32.xyz, r29.xyzx
  mov r33.xyz, r30.xyzx
  mov r7.z, r4.w
  mov r7.w, r4.z
  loop 
    breakc_z r7.w
    firstbit_lo r8.w, r7.w
    ishl r10.w, l(1), r8.w
    and r11.w, r7.w, r10.w
    if_nz r11.w
      xor r7.w, r7.w, r10.w
      iadd r8.w, r6.w, r8.w
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r34.xyzw, r8.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r35.xy, r8.w, l(16), t11.xyxx
      add r34.xyz, r34.xyzx, -v6.xyzx
      mov r35.z, r34.w
      lt r34.xyz, |r34.xyzx|, r35.zxyz
      and r10.w, r34.y, r34.x
      and r10.w, r34.z, r10.w
      if_nz r10.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r8.w, l(0), t12.wxyz
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r8.w, l(16), t12.zxyw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r8.w, l(32), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r8.w, l(48), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r8.w, l(64), t12.yzwx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r8.w, l(80), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r8.w, l(96), t12.yzwx
        ubfe r10.w, l(3), l(24), r35.w
        switch r10.w
          case l(4)
          lt r10.w, l(0.000000), r40.x
          mov r41.xy, r39.zwzz
          mov r41.z, r40.w
          mad r42.xyz, -r41.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r34.yzwy
          add r43.xyz, r42.xyzx, -v6.xyzx
          dp3 r11.w, r41.xyzx, r43.xyzx
          div_sat r12.w, -r11.w, r40.x
          mad r44.xyz, r12.wwww, r41.xyzx, r42.xyzx
          movc r44.xyz, r10.wwww, r44.xyzx, r34.yzwy
          add r44.xyz, r44.xyzx, -v6.xyzx
          dp3 r13.w, r44.xyzx, r44.xyzx
          rsq r14.w, r13.w
          mul r44.xyz, r14.wwww, r44.xyzx
          dp3 r14.w, r1.xyzx, r44.xyzx
          lt r17.w, l(0.000000), |r14.w|
          if_nz r17.w
            sqrt r17.w, r13.w
            mul r21.w, r37.x, r37.x
            div r13.w, r21.w, r13.w
            min r13.w, r13.w, l(1.000000)
            mad_sat r44.xy, r17.wwww, r36.xzxx, r36.ywyy
            mul r44.zw, r44.xxxy, r44.xxxy
            mad r44.xy, r44.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
            mul r44.xy, r44.xyxx, r44.zwzz
            mul r13.w, r13.w, r44.x
            mul r13.w, r44.y, r13.w
            lt r17.w, l(0.000000), r13.w
            if_nz r17.w
              ubfe r17.w, l(3), l(27), r35.w
              ine r17.w, r17.w, l(1)
              if_nz r17.w
                mad r17.w, |r14.w|, l(-0.200000), l(0.400000)
                lt r21.w, r14.w, l(0.000000)
                movc r17.w, r21.w, -r17.w, r17.w
                mad r44.xyz, r1.xyzx, r17.wwww, v6.xyzx
                add r44.xyz, -r38.xyzx, r44.xyzx
                max r17.w, |r44.z|, |r44.y|
                max r17.w, r17.w, |r44.x|
                div r17.w, r39.x, r17.w
                add r17.w, r39.y, r17.w
                dp3 r21.w, r44.xyzx, r44.xyzx
                rsq r21.w, r21.w
                max r17.w, r17.w, l(0.00006104)
                and r25.w, r35.w, l(0x0000ffff)
                utof r45.w, r25.w
                mov r25.w, l(0)
                mov r26.w, l(0)
                loop 
                  ige r27.w, r26.w, l(8)
                  breakc_nz r27.w
                  dp2 r46.y, icb[r26.w + 0].yxyy, r15.xyxx
                  dp2 r46.z, icb[r26.w + 0].yxyy, r15.yzyy
                  mul r46.yz, r37.yyyy, r46.yyzy
                  mul r46.x, r9.x, r46.y
                  mul r46.w, r6.x, r46.y
                  mad r45.xyz, r44.xyzx, r21.wwww, r46.xzwx
                  sample_c_lz_indexable(texturecubearray)(float,float,float,float) r27.w, r45.xyzw, t10.xxxx, s13, r17.w
                  mad r25.w, r27.w, l(0.125000), r25.w
                  iadd r26.w, r26.w, l(1)
                endloop 
              else 
                mov r25.w, l(1.000000)
              endif 
              mul r13.w, r13.w, r25.w
              lt r17.w, l(0.000000), r13.w
              if_nz r17.w
                mul r17.w, r6.y, r35.x
                mul r17.w, r17.w, l(0.250000)
                dp3 r21.w, r41.xyzx, r10.xyzx
                dp3 r26.w, r10.xyzx, r43.xyzx
                mad r27.w, -r21.w, r21.w, r40.x
                mad r11.w, r21.w, r26.w, -r11.w
                div_sat r11.w, r11.w, r27.w
                div r21.w, r27.w, r40.x
                mul r21.w, r21.w, l(10.000000)
                min r21.w, r21.w, l(1.000000)
                add r11.w, -r12.w, r11.w
                mad r11.w, r21.w, r11.w, r12.w
                mad r41.xyz, r11.wwww, r41.xyzx, r42.xyzx
                movc r41.xyz, r10.wwww, r41.xyzx, r34.yzwy
                add r41.xyz, r41.xyzx, -v6.xyzx
                dp3 r10.w, r41.xyzx, r41.xyzx
                rsq r10.w, r10.w
                mul r42.xyz, r10.wwww, r41.xyzx
                ubfe r11.w, l(4), l(16), r35.w
                ult r12.w, l(0), r11.w
                and r12.w, r5.w, r12.w
                if_nz r12.w
                  iadd r11.w, r11.w, cb2[0].x
                  iadd r11.w, r11.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.w, r11.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r11.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r11.w, l(116), t12.xyzw
                  mad r21.w, |r14.w|, l(-0.200000), l(0.400000)
                  lt r26.w, r14.w, l(0.000000)
                  movc r21.w, r26.w, -r21.w, r21.w
                  mad r19.xyz, r1.xyzx, r21.wwww, v6.xyzx
                  dp4 r21.w, r43.xyzw, r19.xyzw
                  dp4 r26.w, r44.xyzw, r19.xyzw
                  lt r27.w, r26.w, r21.w
                  if_z r27.w
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r11.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r11.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xyzw, r11.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r46.xyzw, r11.w, l(148), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r47.xy, r11.w, l(164), t12.xyxx
                    dp4 r43.x, r43.xyzw, r19.xyzw
                    dp4 r43.y, r44.xyzw, r19.xyzw
                    div r19.xy, r43.xyxx, r26.wwww
                    mad r19.xy, r19.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r19.xy, r46.zwzz, r19.xyxx
                    mul r19.xy, r46.xyxx, r19.xyxx
                    div r43.xy, r12.wwww, r45.xzxx
                    add r43.zw, -r43.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                    ge r43.zw, r19.xxxy, r43.zzzw
                    ge r43.xy, r43.xyxx, r19.xyxx
                    or r43.xy, r43.xyxx, r43.zwzz
                    or r19.z, r43.y, r43.x
                    mov_sat r19.xy, r19.xyxx
                    mad r43.xy, r19.xyxx, r45.xzxx, r45.ywyy
                    mul r19.x, r26.w, r47.y
                    mad r19.y, r47.x, r26.w, r21.w
                    div r19.x, r19.y, r19.x
                  else 
                    mov r19.z, l(-1)
                  endif 
                  or r19.y, r27.w, r19.z
                  if_z r19.y
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r11.w, r11.w, l(28), t12.xxxx
                    max r19.x, r19.x, l(0.00006104)
                    and r11.w, r11.w, l(0x0000ffff)
                    if_nz r7.z
                      utof r44.z, r11.w
                      mov r19.yz, l(0,0,0,0)
                      loop 
                        ige r21.w, r19.z, l(8)
                        breakc_nz r21.w
                        dp2 r45.x, icb[r19.z + 0].yxyy, r15.xwxx
                        dp2 r45.y, icb[r19.z + 0].xyxx, r7.xyxx
                        mad r44.xy, r45.xyxx, r12.wwww, r43.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.w, r44.xyzx, t9.xxxx, s13, r19.x
                        mad r19.y, r21.w, l(0.125000), r19.y
                        iadd r19.z, r19.z, l(1)
                      endloop 
                    else 
                      utof r43.z, r11.w
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.y, r43.xyzx, t9.xxxx, s13, r19.x
                    endif 
                    mul r11.w, r19.y, r19.y
                    mul r11.w, r19.y, r11.w
                  else 
                    mov r11.w, l(1.000000)
                  endif 
                  mul r13.w, r11.w, r13.w
                else 
                  ubfe r11.w, l(4), l(20), r35.w
                  ult r12.w, l(0), r11.w
                  and r12.w, r2.w, r12.w
                  if_nz r12.w
                    iadd r11.w, r11.w, cb2[0].x
                    iadd r11.w, r11.w, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.w, r11.w, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r11.w, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r11.w, l(116), t12.xyzw
                    mad r19.x, |r14.w|, l(-0.200000), l(0.400000)
                    lt r19.z, r14.w, l(0.000000)
                    movc r19.x, r19.z, -r19.x, r19.x
                    mad r20.xyz, r1.xyzx, r19.xxxx, v6.xyzx
                    dp4 r19.x, r43.xyzw, r20.xyzw
                    dp4 r19.z, r44.xyzw, r20.xyzw
                    lt r21.w, r19.z, r19.x
                    if_z r21.w
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r11.w, l(68), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r11.w, l(84), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xyzw, r11.w, l(132), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r46.xyzw, r11.w, l(148), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r47.xy, r11.w, l(164), t12.xyxx
                      dp4 r43.x, r43.xyzw, r20.xyzw
                      dp4 r43.y, r44.xyzw, r20.xyzw
                      div r20.xy, r43.xyxx, r19.zzzz
                      mad r20.xy, r20.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                      add r20.xy, r46.zwzz, r20.xyxx
                      mul r20.xy, r46.xyxx, r20.xyxx
                      div r43.xy, r12.wwww, r45.xzxx
                      add r43.zw, -r43.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                      ge r43.zw, r20.xxxy, r43.zzzw
                      ge r43.xy, r43.xyxx, r20.xyxx
                      or r43.xy, r43.xyxx, r43.zwzz
                      or r20.z, r43.y, r43.x
                      mov_sat r20.xy, r20.xyxx
                      mad r43.xy, r20.xyxx, r45.xzxx, r45.ywyy
                      mul r20.x, r19.z, r47.y
                      mad r19.x, r47.x, r19.z, r19.x
                      div r19.x, r19.x, r20.x
                    else 
                      mov r20.z, l(-1)
                    endif 
                    or r19.z, r21.w, r20.z
                    if_z r19.z
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r11.w, r11.w, l(28), t12.xxxx
                      max r19.x, r19.x, l(0.00006104)
                      and r11.w, r11.w, l(0x0000ffff)
                      if_nz r7.z
                        utof r20.z, r11.w
                        mov r19.z, l(0)
                        mov r21.w, l(0)
                        loop 
                          ige r26.w, r21.w, l(8)
                          breakc_nz r26.w
                          dp2 r44.x, icb[r21.w + 0].xyxx, r8.xyxx
                          dp2 r44.y, icb[r21.w + 0].yxyy, r8.xzxx
                          mad r20.xy, r44.xyxx, r12.wwww, r43.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r20.x, r20.xyzx, t9.xxxx, s13, r19.x
                          mad r19.z, r20.x, l(0.125000), r19.z
                          iadd r21.w, r21.w, l(1)
                        endloop 
                      else 
                        utof r43.z, r11.w
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.z, r43.xyzx, t9.xxxx, s13, r19.x
                      endif 
                      mul r11.w, r19.z, r19.z
                      mul r11.w, r19.z, r11.w
                    else 
                      mov r11.w, l(1.000000)
                    endif 
                    mul r13.w, r11.w, r13.w
                  endif 
                endif 
                mad r11.w, -|r14.w|, r3.w, l(1.000000)
                mul r11.w, r11.w, r11.w
                mad r11.w, -r11.w, l(0.620000), l(0.620000)
                add r11.w, -|r14.w|, r11.w
                mad r11.w, r6.z, r11.w, |r14.w|
                mul r11.w, r13.w, r11.w
                mov r35.x, r34.x
                lt r12.w, l(0.000000), r14.w
                mad r20.xyz, r11.wwww, r35.xyzx, r16.xyzx
                dp3_sat r14.w, r1.xyzx, r42.xyzx
                mad r41.xyz, r41.xyzx, r10.wwww, r5.xyzx
                dp3 r10.w, r41.xyzx, r41.xyzx
                rsq r10.w, r10.w
                mul r41.xyz, r10.wwww, r41.xyzx
                dp3 r10.w, r41.xyzx, r5.xyzx
                dp3 r19.x, r1.xyzx, r41.xyzx
                mad r21.w, |r19.x|, r6.y, -|r19.x|
                mad r19.x, |r19.x|, r21.w, l(1.000000)
                mad r21.w, r14.w, r0.w, r1.w
                mul r19.x, r19.x, r19.x
                mul r19.x, r21.w, r19.x
                rcp r19.x, r19.x
                mul r14.w, r17.w, r14.w
                mul r14.w, r14.w, r19.x
                mul r13.w, r13.w, r14.w
                mad r41.xyz, r13.wwww, r35.xyzx, r33.xyzx
                add_sat r10.w, -r10.w, l(1.000000)
                mul r14.w, r10.w, r10.w
                mul r14.w, r14.w, r14.w
                mul r10.w, r10.w, r14.w
                mul r10.w, r10.w, r13.w
                mad r42.xyz, r10.wwww, r35.xyzx, r32.xyzx
                mad r43.xyz, r11.wwww, r35.xyzx, r31.xyzx
                movc r16.xyz, r12.wwww, r20.xyzx, r16.xyzx
                movc r31.xyz, r12.wwww, r31.xyzx, r43.xyzx
                movc r32.xyz, r12.wwww, r42.xyzx, r32.xyzx
                movc r33.xyz, r12.wwww, r41.xyzx, r33.xyzx
              endif 
            endif 
          endif 
          break 
          case l(2)
          mov r20.xy, r37.zwzz
          mov r20.z, r38.w
          add r20.xyz, r20.xyzx, -v6.xyzx
          dp3 r10.w, r20.xyzx, r20.xyzx
          rsq r10.w, r10.w
          mul r41.xyz, r10.wwww, r20.xyzx
          dp3 r11.w, r1.xyzx, r41.xyzx
          lt r12.w, l(0.000000), |r11.w|
          if_nz r12.w
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r8.w, l(112), t12.yzwx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r8.w, l(128), t12.zxyw
            mov r43.xyz, r41.xyzx
            mov r43.w, r42.y
            dp4 r12.w, r43.xyzw, r18.xyzw
            lt r13.w, r12.w, l(1.000000)
            if_nz r13.w
              mov r44.xyz, l(1.000000,1.000000,1.000000,0)
              mov r13.w, l(0)
            else 
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xyzw, r8.w, l(172), t12.yzwx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r46.xyzw, r8.w, l(188), t12.wxyz
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r47.xyzw, r8.w, l(204), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.w, r8.w, l(236), t12.xxxx
              add r48.xyz, r34.yzwy, -v6.xyzx
              mul r17.w, r37.x, r37.x
              dp3 r19.x, r48.xyzx, r48.xyzx
              div r17.w, r17.w, r19.x
              min r17.w, r17.w, l(1.000000)
              mad_sat r36.xy, r12.wwww, r36.xzxx, r36.ywyy
              mul r36.zw, r36.xxxy, r36.xxxy
              mad r36.xy, r36.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
              mul r36.xy, r36.xyxx, r36.zwzz
              mul r17.w, r17.w, r36.x
              mul r17.w, r36.y, r17.w
              mov r38.w, r39.x
              dp4 r36.x, r38.xyzw, r18.xyzw
              mov r48.xyz, r39.yzwy
              mov r48.w, r40.w
              dp4 r36.y, r48.xyzw, r18.xyzw
              div r21.xy, r36.xyxx, r12.wwww
              lt r12.w, r45.w, l(0.00048828)
              if_nz r12.w
                mov r46.y, r47.x
                mad_sat r36.xy, |r21.xyxx|, r46.zwzz, r46.xyxx
                mul r36.zw, r36.xxxy, r36.xxxy
                mad r36.xy, r36.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
                mul r36.xy, r36.xyxx, r36.zwzz
                mul r12.w, r36.y, r36.x
              else 
                mov r45.w, r46.y
                mul_sat r36.xyzw, |r21.yyxx|, r45.xyzw
                log r36.xyzw, r36.xyzw
                mul r36.xyzw, r36.xyzw, r46.xxxx
                exp r36.xyzw, r36.xyzw
                add r36.xy, r36.zwzz, r36.xyxx
                log r36.xy, r36.xyxx
                mul r36.xy, r36.xyxx, r47.xxxx
                exp r36.xy, r36.xyxx
                mul r19.x, r36.x, r46.z
                mad r21.w, r46.w, r36.y, l(-1.000000)
                mad r19.x, r46.w, r36.y, -r19.x
                div_sat r19.x, r21.w, r19.x
                mul r21.w, r19.x, r19.x
                mad r19.x, r19.x, l(-2.000000), l(3.000000)
                mul r12.w, r19.x, r21.w
              endif 
              mul r13.w, r12.w, r17.w
              and r12.w, r14.w, l(255)
              if_nz r12.w
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyz, r8.w, l(220), t12.xyzx
                dp3 r14.w, r47.yzwy, r21.xyzx
                dp3 r17.w, r36.xyzx, r21.xyzx
                frc r36.x, r14.w
                frc r36.y, r17.w
                iadd r12.w, r12.w, l(-1)
                utof r36.z, r12.w
                sample_l_indexable(texture2darray)(float,float,float,float) r44.xyz, r36.xyzx, t20.xyzw, s2, l(0.000000)
              else 
                mov r44.xyz, l(1.000000,1.000000,1.000000,0)
              endif 
            endif 
            mov r34.yz, r35.yyzy
            mul r21.xyw, r44.xyxz, r34.xyxz
            lt r12.w, l(0.000000), r13.w
            if_nz r12.w
              ubfe r12.w, l(3), l(27), r35.w
              ine r12.w, r12.w, l(1)
              if_nz r12.w
                mad r12.w, |r11.w|, l(-0.200000), l(0.400000)
                lt r14.w, r11.w, l(0.000000)
                movc r12.w, r14.w, -r12.w, r12.w
                mad r22.xyz, r1.xyzx, r12.wwww, v6.xyzx
                mov r41.xyz, r40.xyzx
                dp4 r12.w, r41.xyzw, r22.xyzw
                dp4 r14.w, r43.xyzw, r22.xyzw
                ge r17.w, r14.w, r12.w
                if_nz r17.w
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.y, r8.w, l(144), t12.xxxx
                  mov r38.w, r39.x
                  dp4 r34.x, r38.xyzw, r22.xyzw
                  mov r40.xyz, r39.yzwy
                  dp4 r34.y, r40.xyzw, r22.xyzw
                  div r22.xy, r34.xyxx, r14.wwww
                  mad_sat r22.xy, r22.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  mad r22.xy, r22.xyxx, r42.zwzz, r42.xyxx
                  div r8.w, r12.w, r14.w
                  max r8.w, r8.w, l(0.00006104)
                  and r12.w, r35.w, l(0x0000ffff)
                  if_nz r7.z
                    utof r34.z, r12.w
                    mov r14.w, l(0)
                    mov r17.w, l(0)
                    loop 
                      ige r19.x, r17.w, l(8)
                      breakc_nz r19.x
                      dp2 r36.x, icb[r17.w + 0].xyxx, r25.xyxx
                      dp2 r36.y, icb[r17.w + 0].yxyy, r25.xzxx
                      mad r34.xy, r36.xyxx, r37.yyyy, r22.xyxx
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.x, r34.xyzx, t9.xxxx, s13, r8.w
                      mad r14.w, r19.x, l(0.125000), r14.w
                      iadd r17.w, r17.w, l(1)
                    endloop 
                  else 
                    utof r22.z, r12.w
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r14.w, r22.xyzx, t9.xxxx, s13, r8.w
                  endif 
                  mul r8.w, r14.w, r14.w
                  mul r8.w, r14.w, r8.w
                else 
                  mov r8.w, l(1.000000)
                endif 
              else 
                mov r8.w, l(1.000000)
              endif 
              mul r8.w, r8.w, r13.w
              lt r12.w, l(0.000000), r8.w
              if_nz r12.w
                mul r12.w, r6.y, r35.x
                mul r12.w, r12.w, l(0.250000)
                ubfe r13.w, l(4), l(16), r35.w
                ult r17.w, l(0), r13.w
                and r17.w, r5.w, r17.w
                if_nz r17.w
                  iadd r13.w, r13.w, cb2[0].x
                  iadd r13.w, r13.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.w, r13.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r13.w, l(68), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r13.w, l(84), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r13.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r13.w, l(116), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r13.w, l(132), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r13.w, l(148), t12.xyzw
                  mad r19.x, |r11.w|, l(-0.200000), l(0.400000)
                  lt r22.x, r11.w, l(0.000000)
                  movc r19.x, r22.x, -r19.x, r19.x
                  mad r23.xyz, r1.xyzx, r19.xxxx, v6.xyzx
                  dp4 r22.x, r34.xyzw, r23.xyzw
                  dp4 r22.y, r36.xyzw, r23.xyzw
                  dp4 r19.x, r37.xyzw, r23.xyzw
                  dp4 r22.z, r38.xyzw, r23.xyzw
                  lt r23.x, r22.z, r19.x
                  div r22.xy, r22.xyxx, r22.zzzz
                  mad r22.xy, r22.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r22.xy, r40.zwzz, r22.xyxx
                  mul r22.xy, r40.xyxx, r22.xyxx
                  div r23.yz, r17.wwww, r39.xxzx
                  add r34.xy, -r23.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
                  ge r34.xy, r22.xyxx, r34.xyxx
                  ge r23.yz, r23.yyzy, r22.xxyx
                  or r23.yz, r23.yyzy, r34.xxyx
                  or r23.y, r23.z, r23.y
                  or r23.x, r23.x, r23.y
                  if_z r23.x
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.x, r13.w, l(28), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.yz, r13.w, l(164), t12.xxyx
                    mov_sat r22.xy, r22.xyxx
                    mad r34.xy, r22.xyxx, r39.xzxx, r39.ywyy
                    mul r13.w, r22.z, r23.z
                    mad r19.x, r23.y, r22.z, r19.x
                    div r13.w, r19.x, r13.w
                    max r13.w, r13.w, l(0.00006104)
                    and r19.x, r23.x, l(0x0000ffff)
                    if_nz r7.z
                      utof r22.z, r19.x
                      mov r23.xy, l(0,0,0,0)
                      loop 
                        ige r23.z, r23.y, l(8)
                        breakc_nz r23.z
                        dp2 r35.x, icb[r23.y + 0].xyxx, r26.xyxx
                        dp2 r35.y, icb[r23.y + 0].yxyy, r26.xzxx
                        mad r22.xy, r35.xyxx, r17.wwww, r34.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.x, r22.xyzx, t9.xxxx, s13, r13.w
                        mad r23.x, r22.x, l(0.125000), r23.x
                        iadd r23.y, r23.y, l(1)
                      endloop 
                    else 
                      utof r34.z, r19.x
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.x, r34.xyzx, t9.xxxx, s13, r13.w
                    endif 
                    mul r13.w, r23.x, r23.x
                    mul r13.w, r23.x, r13.w
                  else 
                    mov r13.w, l(1.000000)
                  endif 
                  mul r8.w, r8.w, r13.w
                else 
                  ubfe r13.w, l(4), l(20), r35.w
                  ult r17.w, l(0), r13.w
                  and r17.w, r2.w, r17.w
                  if_nz r17.w
                    iadd r13.w, r13.w, cb2[0].x
                    iadd r13.w, r13.w, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.w, r13.w, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r13.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r13.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r13.w, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r13.w, l(116), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r13.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r13.w, l(148), t12.xyzw
                    mad r19.x, |r11.w|, l(-0.200000), l(0.400000)
                    lt r22.x, r11.w, l(0.000000)
                    movc r19.x, r22.x, -r19.x, r19.x
                    mad r24.xyz, r1.xyzx, r19.xxxx, v6.xyzx
                    dp4 r22.x, r34.xyzw, r24.xyzw
                    dp4 r22.y, r35.xyzw, r24.xyzw
                    dp4 r19.x, r36.xyzw, r24.xyzw
                    dp4 r22.z, r37.xyzw, r24.xyzw
                    lt r23.y, r22.z, r19.x
                    div r22.xy, r22.xyxx, r22.zzzz
                    mad r22.xy, r22.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r22.xy, r39.zwzz, r22.xyxx
                    mul r22.xy, r39.xyxx, r22.xyxx
                    div r24.xy, r17.wwww, r38.xzxx
                    add r34.xy, -r24.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                    ge r34.xy, r22.xyxx, r34.xyxx
                    ge r24.xy, r24.xyxx, r22.xyxx
                    or r24.xy, r24.xyxx, r34.xyxx
                    or r23.z, r24.y, r24.x
                    or r23.y, r23.y, r23.z
                    if_z r23.y
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.y, r13.w, l(28), t12.xxxx
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r24.xy, r13.w, l(164), t12.xyxx
                      mov_sat r22.xy, r22.xyxx
                      mad r34.xy, r22.xyxx, r38.xzxx, r38.ywyy
                      mul r13.w, r22.z, r24.y
                      mad r19.x, r24.x, r22.z, r19.x
                      div r13.w, r19.x, r13.w
                      max r13.w, r13.w, l(0.00006104)
                      and r19.x, r23.y, l(0x0000ffff)
                      if_nz r7.z
                        utof r22.z, r19.x
                        mov r23.yz, l(0,0,0,0)
                        loop 
                          ige r24.x, r23.z, l(8)
                          breakc_nz r24.x
                          dp2 r24.x, icb[r23.z + 0].xyxx, r27.xyxx
                          dp2 r24.y, icb[r23.z + 0].yxyy, r27.xzxx
                          mad r22.xy, r24.xyxx, r17.wwww, r34.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.x, r22.xyzx, t9.xxxx, s13, r13.w
                          mad r23.y, r22.x, l(0.125000), r23.y
                          iadd r23.z, r23.z, l(1)
                        endloop 
                      else 
                        utof r34.z, r19.x
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.y, r34.xyzx, t9.xxxx, s13, r13.w
                      endif 
                      mul r13.w, r23.y, r23.y
                      mul r13.w, r23.y, r13.w
                    else 
                      mov r13.w, l(1.000000)
                    endif 
                    mul r8.w, r8.w, r13.w
                  endif 
                endif 
                mad r13.w, -|r11.w|, r3.w, l(1.000000)
                mul r13.w, r13.w, r13.w
                mad r13.w, -r13.w, l(0.620000), l(0.620000)
                add r13.w, -|r11.w|, r13.w
                mad r13.w, r6.z, r13.w, |r11.w|
                mul r13.w, r8.w, r13.w
                lt r17.w, l(0.000000), r11.w
                mad r22.xyz, r13.wwww, r21.xywx, r16.xyzx
                mov_sat r11.w, r11.w
                mad r20.xyz, r20.xyzx, r10.wwww, r5.xyzx
                dp3 r10.w, r20.xyzx, r20.xyzx
                rsq r10.w, r10.w
                mul r20.xyz, r10.wwww, r20.xyzx
                dp3 r10.w, r20.xyzx, r5.xyzx
                dp3 r19.x, r1.xyzx, r20.xyzx
                mad r20.x, |r19.x|, r6.y, -|r19.x|
                mad r19.x, |r19.x|, r20.x, l(1.000000)
                mad r20.x, r11.w, r0.w, r1.w
                mul r19.x, r19.x, r19.x
                mul r19.x, r20.x, r19.x
                rcp r19.x, r19.x
                mul r11.w, r12.w, r11.w
                mul r11.w, r11.w, r19.x
                mul r8.w, r8.w, r11.w
                mad r20.xyz, r8.wwww, r21.xywx, r33.xyzx
                add_sat r10.w, -r10.w, l(1.000000)
                mul r11.w, r10.w, r10.w
                mul r11.w, r11.w, r11.w
                mul r10.w, r10.w, r11.w
                mul r8.w, r8.w, r10.w
                mad r24.xyz, r8.wwww, r21.xywx, r32.xyzx
                mad r21.xyw, r13.wwww, r21.xyxw, r31.xyxz
                movc r16.xyz, r17.wwww, r22.xyzx, r16.xyzx
                movc r31.xyz, r17.wwww, r31.xyzx, r21.xywx
                movc r32.xyz, r17.wwww, r24.xyzx, r32.xyzx
                movc r33.xyz, r17.wwww, r20.xyzx, r33.xyzx
              endif 
            endif 
          endif 
          break 
          default 
          break 
        endswitch 
      endif 
    endif 
  endloop 
  mov r9.yzw, r16.xxyz
  mov r28.xyz, r31.xyzx
  mov r29.xyz, r32.xyzx
  mov r30.xyz, r33.xyzx
  iadd r6.w, r6.w, l(32)
endloop 
mul r1.xyz, r3.xyzx, r28.xyzx
mad r0.xyz, r9.yzwy, r0.xyzx, r1.xyzx
add r1.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r1.xyz, r1.xyzx, r29.xyzx
mad r1.xyz, r30.xyzx, r2.xyzx, r1.xyzx
add r0.xyz, r0.xyzx, r1.xyzx
lt r0.w, l(0.000000), cb2[9].z
if_nz r0.w
  dp3 r0.w, v6.xyzx, v6.xyzx
  rsq r1.x, r0.w
  mul r1.xyz, r1.xxxx, v6.xyzx
  sqrt r0.w, r0.w
  lt r1.w, l(0.000000), cb2[13].w
  if_nz r1.w
    mad r2.xy, r0.wwww, cb2[15].xyxx, cb2[14].zwzz
    mul r2.xy, r2.xyxx, cb2[16].xyxx
    lt r1.w, l(0.010000), |v6.z|
    mul r2.zw, v6.zzzz, cb2[15].zzzw
    mul r3.xy, r2.zwzz, l(-1.442695, -1.442695, 0.000000, 0.000000)
    exp r3.xy, r3.xyxx
    add r3.xy, -r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    div r2.zw, r3.xxxy, r2.zzzw
    mul r2.zw, r2.zzzw, r2.xxxy
    movc r2.xy, r1.wwww, r2.zwzz, r2.xyxx
    mul r2.xzw, r2.xxxx, cb2[12].xxyz
    exp r2.xzw, r2.xxzw
    mul r3.xyz, r2.yyyy, cb2[12].xyzx
    exp r3.xyz, r3.xyzx
    add r3.xyz, -r2.xzwx, r3.xyzx
    mad r2.xyz, cb2[13].wwww, r3.xyzx, r2.xzwx
  else 
    mad r1.w, r0.w, cb2[15].x, cb2[14].z
    mul r1.w, r1.w, cb2[16].x
    lt r2.w, l(0.010000), |v6.z|
    mul r3.x, v6.z, cb2[15].z
    mul r3.y, r3.x, l(-1.442695)
    exp r3.y, r3.y
    add r3.y, -r3.y, l(1.000000)
    div r3.x, r3.y, r3.x
    mul r3.x, r1.w, r3.x
    movc r1.w, r2.w, r3.x, r1.w
    mul r3.xyz, r1.wwww, cb2[12].xyzx
    exp r2.xyz, r3.xyzx
  endif 
  mad r2.xyz, r2.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r2.xyz, r2.xyzx, -cb2[9].zzzz
  dp3 r1.x, cb2[7].yzwy, -r1.xyzx
  mad r1.y, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r1.z, cb2[8].w, -r1.x, l(1.000000)
  mul r1.z, r1.z, r1.z
  mul r1.z, r1.z, l(12.566371)
  div r1.y, r1.y, r1.z
  add r0.w, r0.w, -cb2[10].w
  mul_sat r0.w, r0.w, cb2[11].w
  mul r0.w, r0.w, r1.y
  mov_sat r1.x, r1.x
  mad r1.x, r1.x, r1.x, l(1.000000)
  mad r1.x, r1.x, l(0.05968310), l(-1.000000)
  mad r1.x, cb2[8].z, r1.x, l(1.000000)
  mul r1.yzw, r0.wwww, cb2[11].xxyz
  mad r1.xyz, r1.xxxx, cb2[10].xyzx, r1.yzwy
  mul r1.xyz, r1.xyzx, cb2[9].wwww
  add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r1.xyz, r1.xyzx, r3.xyzx
  mad r1.xyz, r0.xyzx, r2.xyzx, r1.xyzx
else 
  mul r0.w, v6.z, cb2[6].x
  mad r1.w, cb2[6].x, v6.z, cb2[5].x
  lt r2.x, |r0.w|, l(0.000100)
  min r2.y, r1.w, l(64.000000)
  mul r2.y, r2.y, l(1.442695)
  exp r2.y, r2.y
  mov_sat r2.z, cb2[6].z
  lt r2.w, r1.w, l(0.000000)
  add r1.w, r1.w, l(1.000000)
  movc r1.w, r2.w, r2.y, r1.w
  add r1.w, r1.w, -cb2[6].z
  movc r0.w, r2.x, l(1.000000), r0.w
  div r0.w, r1.w, r0.w
  movc r0.w, r2.x, r2.z, r0.w
  mul r0.w, r0.w, cb2[5].z
  dp3 r1.w, v6.xyzx, v6.xyzx
  sqrt r2.x, r1.w
  mad r0.w, r0.w, r2.x, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  rsq r1.w, r1.w
  mul r2.xyz, r1.wwww, v6.xyzx
  dp3 r1.w, cb2[7].yzwy, r2.xyzx
  mad_sat r1.w, cb2[8].y, r1.w, cb2[8].x
  add r2.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r2.xyzw, r1.wwww, r2.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r2.w
  add r2.xyz, -r0.xyzx, r2.xyzx
  mad r1.xyz, r0.wwww, r2.xyzx, r0.xyzx
endif 
mul r0.xyz, r1.xyzx, cb1[85].yyyy
ge r1.xyz, r0.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.xyz, r0.xyzx, r1.xyzx
min o0.xyz, r0.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
ret 
// Approximately 2250 instruction slots used
