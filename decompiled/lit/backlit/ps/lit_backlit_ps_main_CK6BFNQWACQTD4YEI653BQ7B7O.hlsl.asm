//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:32:09 2021
//
//
// Note: shader requires additional functionality:
//       Early depth-stencil
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float alphaRevealSoftEdge;         // Offset:  160 Size:     4
//   float alphaRevealRamp;             // Offset:  164 Size:     4
//   float2 revealScale;                // Offset:  168 Size:     8
//   float3 colorTint;                  // Offset:  176 Size:    12
//   float baseNormalHeight;            // Offset:  188 Size:     4
//   float2 glossRange;                 // Offset:  192 Size:     8
//   float3 backlightScatterColor;      // Offset:  208 Size:    12
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16 [unused]
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16
//   float4 debugNormalOverride;        // Offset:  960 Size:    16
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16
//   float4 debugGlossOverride;         // Offset:  992 Size:    16
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// revealSampler                     sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// colorSampler                      sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// normalSampler                     sampler      NA          NA             s5      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// revealMap                         texture  float4          2d             t0      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// colorMap                          texture  float4          2d            t21      1 
// tintMask                          texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// normalMap                         texture  float4          2d            t24      1 
// thicknessMap                      texture  float4          2d            t25      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// gOit_Pixels                           UAV    uint          2d             u6      1 
// gOit_Nodes                            UAV   uint2     2darray             u7      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyz 
// COLOR                    0   xyz         1     NONE   float   xyz 
// COLOR                    1      w        1     NONE   float      w
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xyz         3     NONE   float   xyz 
// TEXCOORD                 2   xyz         4     NONE   float   xyz 
// TEXCOORD                 3   xyz         5     NONE   float   xyz 
// OFFPOSITION              0   xyz         6     NONE   float   xyz 
// SV_IsFrontFace           0   x           7    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | forceEarlyDepthStencil
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[14], immediateIndexed
dcl_constantbuffer CB1[93], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2darray (float,float,float,float) t31
dcl_uav_typed_texture2d (uint,uint,uint,uint) u6
dcl_uav_typed_texture2darray (uint,uint,uint,uint) u7
dcl_input_ps_siv linear noperspective v0.xyz, position
dcl_input_ps linear v1.xyz
dcl_input_ps linear v1.w
dcl_input_ps linear v2.xy
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps_sgv constant v7.x, is_front_face
dcl_output o0.xyzw
dcl_temps 50
sample_indexable(texture2d)(float,float,float,float) r0.xyz, v2.xyxx, t21.xyzw, s3
sample_indexable(texture2d)(float,float,float,float) r0.w, v2.xyxx, t22.yzwx, s3
add r1.xyz, cb0[11].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r1.xyz, r0.wwww, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r0.xyz, r0.xyzx, r1.xyzx
mul r0.xyz, r0.xyzx, v1.xyzx
mul r1.xy, v2.xyxx, cb0[10].zwzz
sample_indexable(texture2d)(float,float,float,float) r0.w, r1.xyxx, t0.yzwx, s1
mad_sat r1.x, v1.w, l(0.998000), l(0.001000)
add r1.y, -r1.x, l(1.000000)
mov_sat r1.z, cb0[10].y
log r1.x, r1.x
mul r1.x, r1.x, r1.z
exp r1.x, r1.x
mov r2.x, -r1.x
log r1.x, r1.y
mul r1.x, r1.x, r1.z
exp r2.y, r1.x
mad_sat r1.xy, cb0[10].xxxx, r2.xyxx, r1.yyyy
add r0.w, r0.w, -r1.x
add r1.x, -r1.x, r1.y
div_sat r0.w, r0.w, r1.x
add r1.x, -cb0[12].x, cb0[12].y
mul_sat r1.y, cb0[12].y, l(0.05882353)
sample_indexable(texture2d)(float,float,float,float) r2.xyz, v2.xyxx, t24.xyzw, s5
add r2.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.000000, 0.000000)
mad r2.xyz, cb0[11].wwww, r2.xyzx, l(0.500000, 0.500000, 0.000000, 0.000000)
mad r1.zw, r2.xxxy, l(0.000000, 0.000000, 1.99218750, 1.99218750), l(0.000000, 0.000000, -1.000000, -1.000000)
dp2 r2.x, r1.zwzz, r1.zwzz
add r2.x, -r2.x, l(1.000000)
max r2.x, r2.x, l(0.000000)
sqrt r2.x, r2.x
mul r2.y, r2.z, r2.z
mul r2.y, r2.y, l(0.33333334)
min r2.y, r2.y, l(1.000000)
movc r2.z, v7.x, l(1.000000), l(-1.000000)
dp3 r2.w, v3.xyzx, v3.xyzx
rsq r2.w, r2.w
mul r3.xyz, r2.wwww, v3.xyzx
mul r3.xyz, r2.zzzz, r3.xyzx
dp3 r2.w, v4.xyzx, v4.xyzx
rsq r2.w, r2.w
mul r4.xyz, r2.wwww, v4.xyzx
mul r4.xyz, r2.zzzz, r4.xyzx
dp3 r2.w, v5.xyzx, v5.xyzx
rsq r2.w, r2.w
mul r5.xyz, r2.wwww, v5.xyzx
mul r5.xyz, r2.zzzz, r5.xyzx
mul r1.y, r1.y, l(-17.000000)
exp r1.y, r1.y
add r1.y, r1.y, r2.y
log r1.y, r1.y
mul r1.y, r1.y, l(-0.05882353)
mul r5.xyz, r1.wwww, r5.xyzx
mad r4.xyz, r4.xyzx, r1.zzzz, r5.xyzx
mad r2.xzw, r3.xxyz, r2.xxxx, r4.xxyz
dp3 r1.z, r2.xzwx, r2.xzwx
rsq r1.z, r1.z
mul r2.xzw, r1.zzzz, r2.xxzw
mad r1.x, cb1[62].x, r1.x, cb0[12].x
mul_sat r1.x, r1.x, l(0.05882353)
mul r1.x, r1.x, l(-17.000000)
exp r1.x, r1.x
add r1.x, r1.x, r2.y
log r1.x, r1.x
mul r1.x, r1.x, l(-0.05882353)
max r1.xy, r1.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r1.z, l(0.000000), cb1[64].w
if_nz r1.z
  ftoi r1.z, cb1[64].w
  lod r1.w, v2.xyxx, t21.y, s3
  lod r2.y, v2.xyxx, t21.x, s3
  lt r1.w, r1.w, r2.y
  lt r2.y, l(0.000000), r2.y
  and r3.xyz, r1.zzzz, l(1, 2, 4, 0)
  movc r4.xyz, r3.xxxx, l(1.000000,0,1.000000,0), r0.xyzx
  movc r3.xyw, r3.yyyy, l(0,1.000000,0,1.000000), r0.xyxz
  movc r3.xyw, r2.yyyy, r4.xyxz, r3.xyxw
  movc r4.xyz, r3.zzzz, l(0,1.000000,0,0), r0.xyzx
  movc r0.xyz, r1.wwww, r3.xywx, r4.xyzx
endif 
add r3.xyz, -r0.xyzx, cb1[58].xyzx
mad r0.xyz, cb1[58].wwww, r3.xyzx, r0.xyzx
add r1.z, -r0.w, cb1[59].x
mad r3.w, cb1[59].w, r1.z, r0.w
add r4.xyz, cb1[61].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r4.xyz, cb1[61].wwww, r4.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
add r0.w, -r1.y, r1.x
mad r1.y, cb1[62].w, r0.w, r1.y
add r0.w, cb1[63].x, l(-1.000000)
mad r0.w, cb1[63].w, r0.w, l(1.000000)
movc r5.xyz, v7.xxxx, v3.xyzx, -v3.xyzx
dp3 r1.z, r5.xyzx, r5.xyzx
rsq r1.z, r1.z
mad r5.xyz, r5.xyzx, r1.zzzz, -r2.xzwx
mad r2.xyz, cb1[60].wwww, r5.xyzx, r2.xzwx
sample_indexable(texture2d)(float,float,float,float) r1.z, v2.xyxx, t25.yzxw, s3
add r1.z, -r1.z, l(1.000000)
mul r5.xyz, r1.zzzz, cb0[13].xyzx
mul r5.xyz, r0.xyzx, r5.xyzx
ftou r1.zw, v0.xxxy
ge r4.w, v0.z, l(0.984375)
mul r5.w, v0.z, l(1.01587307)
mad r6.x, v0.z, l(64.000000), l(-63.000000)
movc r4.w, r4.w, r6.x, r5.w
max r4.w, r4.w, l(0.00000001)
rcp r4.w, r4.w
dp3 r5.w, -v6.xyzx, -v6.xyzx
rsq r5.w, r5.w
mul r6.xyz, r5.wwww, -v6.xyzx
ine r6.w, cb1[92].x, l(0)
utof r7.xy, r1.wzww
dp2 r7.z, r7.yxyy, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r7.z, r7.z
mul r7.z, r7.z, l(52.982918)
frc r7.z, r7.z
mad r7.z, r7.z, l(6.28318548), cb1[70].w
sincos r8.x, r9.x, r7.z
dp2 r7.x, r7.xyxx, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r7.x, r7.x
mul r7.x, r7.x, l(52.982918)
frc r7.x, r7.x
mad r7.x, r7.x, l(6.28318548), cb1[70].w
sincos r7.x, r10.x, r7.x
dp3_sat r1.x, r2.xyzx, r6.xyzx
dp3 r7.y, -r6.xyzx, r2.xyzx
add r7.y, r7.y, r7.y
mad r11.xyz, r2.xyzx, -r7.yyyy, -r6.xyzx
mul r7.y, r1.y, l(17.000000)
exp r7.y, r7.y
add r7.y, r7.y, l(2.000000)
div r7.y, l(2.000000), r7.y
sqrt r7.z, r7.y
add r7.w, -r1.y, l(1.000000)
mul r8.z, r7.w, l(5.000000)
mad r8.w, r7.w, l(5.000000), l(-2.500000)
mul_sat r8.w, r8.w, l(0.400000)
mul r8.w, r8.w, l(100.000000)
mad r10.yz, -r7.wwww, l(0.000000, 10.000000, 5.000000, 0.000000), l(0.000000, 6.857410, 7.085000, 0.000000)
exp r9.w, r10.y
mul r9.w, r1.x, r9.w
mul r9.w, r9.w, l(9.136810)
mul r10.y, r7.w, r8.z
mad r10.y, -r10.y, l(2.015905), r10.z
exp r10.y, r10.y
mul r10.y, r1.x, r10.y
mul r10.y, r10.y, l(9.708090)
max r9.w, r9.w, r10.y
max r9.w, r9.w, l(1.268160)
mul r4.w, r4.w, l(0.00781250)
min r4.w, r4.w, l(15.000000)
ftou r4.w, r4.w
ushr r12.xy, r1.zwzz, l(6, 6, 0, 0)
ishl r12.z, r4.w, l(4)
mov r13.xy, l(0,0,0,0)
mov r14.w, l(0)
mov r15.yz, l(0,0,1.000000,0)
mov r16.xy, l(0,0,0,0)
mov r17.xy, l(0,0,0,0)
mov r18.xy, l(0,0,0,0)
mov r19.x, l(1.000000)
mov r20.xyzw, l(0,0,0,0)
mov r21.yzw, l(0,0,0,0)
mov r1.zw, l(0,0,0,0)
loop 
  uge r4.w, r1.w, cb2[0].y
  breakc_nz r4.w
  ushr r13.z, r1.w, l(5)
  iadd r14.xyz, r12.xyzx, r13.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r4.w, r14.xyzw, t7.yzwx
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r22.xyzw, r1.w, l(0), t15.wxyz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r23.xyzw, r1.w, l(16), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r1.w, l(32), t15.yxwz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r1.w, l(48), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r1.w, l(64), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r1.w, l(80), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r10.yz, r1.w, l(96), t15.xxyx
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r1.w, l(116), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r1.w, l(132), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r1.w, l(148), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r1.w, l(164), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r1.w, l(180), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r1.w, l(196), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xy, r1.w, l(212), t15.xyxx
  add r14.xyz, -r22.yzwy, v6.xyzx
  dp3 r10.w, r14.xyzx, r14.xyzx
  sqrt r10.w, r10.w
  ge r10.w, cb2[54].y, r10.w
  and r12.w, r28.y, l(0x0000ffff)
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r12.w, l(0), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r12.w, l(16), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r12.w, l(32), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r38.xyzw, r12.w, l(48), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r39.xyzw, r12.w, l(64), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r40.xyzw, r12.w, l(80), t16.xyzw
  dp3 r13.z, r35.xyzx, r14.xyzx
  add_sat r13.z, r35.w, r13.z
  dp3 r13.w, r36.xyzx, r14.xyzx
  add_sat r13.w, r36.w, r13.w
  mul r13.z, r13.w, r13.z
  dp3 r13.w, r37.xyzx, r14.xyzx
  add_sat r13.w, r37.w, r13.w
  mul r13.z, r13.w, r13.z
  dp3 r13.w, r38.xyzx, r14.xyzx
  add_sat r13.w, r38.w, r13.w
  mul r13.z, r13.w, r13.z
  dp3 r13.w, r39.xyzx, r14.xyzx
  add_sat r13.w, r39.w, r13.w
  mul r13.z, r13.w, r13.z
  dp3 r13.w, r40.xyzx, r14.xyzx
  add_sat r13.w, r40.w, r13.w
  mul r15.x, r13.w, r13.z
  and r13.z, r10.y, l(1)
  movc r13.zw, r13.zzzz, r15.xxxy, r15.zzzx
  mov r35.xy, r28.zwzz
  mov r35.z, r29.z
  dp3 r15.x, r11.xyzx, r35.xyzx
  dp3 r15.w, r14.xyzx, r35.xyzx
  add r15.w, -r29.w, r15.w
  ge r16.w, r15.w, l(0.000000)
  max r15.w, r8.w, |r15.w|
  movc r15.w, r16.w, r15.w, -r15.w
  max r15.x, -r15.x, l(0.00000010)
  div r15.x, r15.w, r15.x
  min r15.x, |r15.x|, l(131072.000000)
  mov r29.z, r30.z
  dp3 r15.w, r11.xyzx, r29.xyzx
  dp3 r16.w, r14.xyzx, r29.xyzx
  add r16.w, -r30.w, r16.w
  ge r17.w, r16.w, l(0.000000)
  max r16.w, r8.w, |r16.w|
  movc r16.w, r17.w, r16.w, -r16.w
  max r15.w, -r15.w, l(0.00000010)
  div r15.w, r16.w, r15.w
  min r15.x, |r15.w|, r15.x
  mov r30.z, r31.z
  dp3 r15.w, r11.xyzx, r30.xyzx
  dp3 r16.w, r14.xyzx, r30.xyzx
  add r16.w, -r31.w, r16.w
  ge r17.w, r16.w, l(0.000000)
  max r16.w, r8.w, |r16.w|
  movc r16.w, r17.w, r16.w, -r16.w
  max r15.w, -r15.w, l(0.00000010)
  div r15.w, r16.w, r15.w
  min r15.x, |r15.w|, r15.x
  mov r31.z, r32.z
  dp3 r15.w, r11.xyzx, r31.xyzx
  dp3 r16.w, r14.xyzx, r31.xyzx
  add r16.w, -r32.w, r16.w
  ge r17.w, r16.w, l(0.000000)
  max r16.w, r8.w, |r16.w|
  movc r16.w, r17.w, r16.w, -r16.w
  max r15.w, -r15.w, l(0.00000010)
  div r15.w, r16.w, r15.w
  min r15.x, |r15.w|, r15.x
  mov r32.z, r33.x
  dp3 r15.w, r11.xyzx, r32.xyzx
  dp3 r16.w, r14.xyzx, r32.xyzx
  add r16.w, -r33.y, r16.w
  ge r17.w, r16.w, l(0.000000)
  max r16.w, r8.w, |r16.w|
  movc r16.w, r17.w, r16.w, -r16.w
  max r15.w, -r15.w, l(0.00000010)
  div r15.w, r16.w, r15.w
  min r15.x, |r15.w|, r15.x
  mov r34.zw, r33.zzzw
  dp3 r15.w, r11.zxyz, r34.xzwx
  dp3 r16.w, r14.zxyz, r34.xzwx
  add r16.w, -r34.y, r16.w
  ge r17.w, r16.w, l(0.000000)
  max r16.w, r8.w, |r16.w|
  movc r16.w, r17.w, r16.w, -r16.w
  max r15.w, -r15.w, l(0.00000010)
  div r15.w, r16.w, r15.w
  min r15.x, |r15.w|, r15.x
  mov r29.x, r25.w
  mov r29.yz, r26.zzwz
  add r29.xyz, r14.xyzx, r29.xyzx
  mad r29.xyz, r11.xyzx, r15.xxxx, r29.xyzx
  dp3 r15.w, r29.xyzx, r29.xyzx
  sqrt r15.w, r15.w
  div r15.x, r15.x, r15.w
  add r15.x, r15.x, r15.x
  sqrt r15.x, r15.x
  mad r15.x, r7.w, l(5.000000), r15.x
  add r15.x, r15.x, l(-0.844800)
  mov r22.y, r23.z
  mov r22.z, r24.x
  dp3 r30.x, r29.xyzx, r22.xyzx
  mov r31.xy, r23.xwxx
  mov r31.z, r24.w
  dp3 r30.y, r29.xyzx, r31.xyzx
  mov r24.x, r23.y
  dp3 r30.z, r29.xyzx, r24.xyzx
  ubfe r19.zw, l(0, 0, 6, 9), l(0, 0, 25, 16), r28.yyyy
  utof r30.w, r19.w
  sample_l_indexable(texturecubearray)(float,float,float,float) r23.xyz, r30.xyzw, t8.xyzw, s2, r15.x
  and r28.yzw, r23.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
  ieq r28.yzw, r28.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
  or r15.x, r28.z, r28.y
  or r15.x, r28.w, r15.x
  movc r23.xyz, r15.xxxx, l(1.000000,1.000000,0,0), r23.xyzx
  dp3 r29.x, r14.xyzx, r22.xyzx
  dp3 r29.y, r14.xyzx, r31.xyzx
  dp3 r29.z, r14.xyzx, r24.xyzx
  mad_sat r25.xyz, r29.xyzx, r25.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mov r26.z, r27.x
  mad r25.xyz, r25.xyzx, r26.xyzx, r27.yzwy
  dp3 r30.x, r2.xyzx, r22.xyzx
  dp3 r30.y, r2.xyzx, r31.xyzx
  dp3 r30.z, r2.xyzx, r24.xyzx
  lt r22.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r30.xyzx
  movc r16.z, r22.x, l(0), l(0.500000)
  add r24.xyz, r16.xyzx, r25.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r24.xyz, r24.xyzx, t17.xyzw, s4, l(0.000000)
  movc r17.z, r22.y, l(0), l(0.500000)
  add r22.xyw, r17.xyxz, r25.xyxz
  sample_l_indexable(texture3d)(float,float,float,float) r22.xyw, r22.xywx, t18.xywz, s4, l(0.000000)
  movc r18.z, r22.z, l(0), l(0.500000)
  add r25.xyz, r18.xyzx, r25.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r25.xyz, r25.xyzx, t19.xyzw, s4, l(0.000000)
  mul r26.xyz, r30.xyzx, r30.xyzx
  sample_l_indexable(texturecubearray)(float,float,float,float) r27.xyz, r30.xyzw, t8.xyzw, s2, l(6.000000)
  and r28.yzw, r27.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
  ieq r28.yzw, r28.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
  or r15.x, r28.z, r28.y
  or r15.x, r28.w, r15.x
  movc r27.xyz, r15.xxxx, l(1.000000,1.000000,0,0), r27.xyzx
  mov r29.xyzw, r20.xyzw
  mov r28.yzw, r21.yyzw
  mov r15.x, r1.z
  mov r15.w, r4.w
  loop 
    breakc_z r15.w
    firstbit_lo r16.z, r15.w
    ishl r16.z, l(1), r16.z
    and r16.w, r15.w, r16.z
    if_nz r16.w
      not r16.z, r16.z
      and r15.w, r15.w, r16.z
      if_nz r10.w
        mov r16.z, r10.y
        mov r30.xy, r13.zwzz
        mov r16.w, l(1)
        loop 
          ige r17.z, r16.w, r19.z
          breakc_nz r17.z
          iadd r17.z, r12.w, r16.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r17.z, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r17.z, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r17.z, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r17.z, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r17.z, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r17.z, l(80), t16.xyzw
          dp3 r17.z, r31.xyzx, r14.xyzx
          add_sat r17.z, r31.w, r17.z
          mul r17.z, r17.z, r30.x
          dp3 r17.w, r32.xyzx, r14.xyzx
          add_sat r17.w, r32.w, r17.w
          mul r17.z, r17.w, r17.z
          dp3 r17.w, r33.xyzx, r14.xyzx
          add_sat r17.w, r33.w, r17.w
          mul r17.z, r17.w, r17.z
          dp3 r17.w, r34.xyzx, r14.xyzx
          add_sat r17.w, r34.w, r17.w
          mul r17.z, r17.w, r17.z
          dp3 r17.w, r35.xyzx, r14.xyzx
          add_sat r17.w, r35.w, r17.w
          mul r17.z, r17.w, r17.z
          dp3 r17.w, r36.xyzx, r14.xyzx
          add_sat r17.w, r36.w, r17.w
          mul r30.x, r17.w, r17.z
          ushr r18.z, r16.z, l(2)
          ubfe r18.w, l(1), l(2), r16.z
          and r19.w, r18.z, l(2)
          max r22.z, r30.x, r30.y
          mad r17.z, -r17.z, r17.w, l(1.000000)
          mul r17.z, r17.z, r30.y
          movc r19.y, r19.w, r17.z, r22.z
          movc r30.xy, r18.wwww, r30.xyxx, r19.xyxx
          iadd r16.w, r16.w, l(1)
          mov r16.z, r18.z
        endloop 
        mov_sat r30.y, r30.y
        mul r16.z, r10.z, r30.y
        lt r16.w, l(0.000000), r16.z
        if_nz r16.w
          mad r31.z, r30.y, r10.z, r28.w
          mul r16.z, r28.x, r16.z
          mul r30.xzw, r16.zzzz, r26.xxyz
          mul r32.xyz, r22.xywx, r30.zzzz
          mad r32.xyz, r24.xyzx, r30.xxxx, r32.xyzx
          mad r30.xzw, r25.xxyz, r30.wwww, r32.xxyz
          mul r32.xyz, r27.xyzx, r30.xzwx
          dp3 r16.w, r32.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r32.xyz, r30.xzwx, r27.xyzx, r29.xyzx
          mul r17.z, r9.w, r16.w
          mul r30.xzw, r16.zzzz, r23.xxyz
          dp3 r16.z, r30.xzwx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r16.z, r9.w, r16.w, r16.z
          div r16.z, r17.z, r16.z
          mov r33.x, r29.w
          mov r33.yz, r28.yyzy
          mad r31.xyw, r30.zwzx, r16.zzzz, r33.yzyx
          mov r32.w, r31.w
        else 
          mov r32.xyzw, r29.xyzw
          mov r31.xyz, r28.yzwy
        endif 
        mov r15.x, l(-1)
        mov r29.xyzw, r32.xyzw
        mov r28.yzw, r31.xxyz
        break 
      endif 
    endif 
  endloop 
  if_nz r15.x
    mov r20.xyzw, r29.xyzw
    mov r21.yzw, r28.yyzw
    mov r1.z, l(-1)
    break 
  endif 
  iadd r1.w, r1.w, l(32)
  mov r20.xyzw, r29.xyzw
  mov r21.yzw, r28.yyzw
  mov r1.z, r15.x
endloop 
if_z r1.z
  iadd r1.z, cb2[0].y, -cb2[58].x
  and r1.w, r1.z, l(-32)
  iadd r4.w, -r1.w, r1.z
  and r10.y, cb2[0].y, l(-32)
  iadd r10.z, -r10.y, cb2[0].y
  mov r13.xy, l(0,0,0,0)
  mov r14.w, l(0)
  mov r15.yz, l(0,0,1.000000,0)
  mov r16.xy, l(0,0,0,0)
  mov r17.x, l(1.000000)
  mov r18.xy, l(0,0,0,0)
  mov r19.xy, l(0,0,0,0)
  mov r22.xyzw, r20.xyzw
  mov r23.yzw, r21.yyzw
  mov r10.w, r1.w
  loop 
    uge r12.w, r10.w, cb2[0].y
    breakc_nz r12.w
    ushr r13.z, r10.w, l(5)
    iadd r14.xyz, r12.xyzx, r13.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r12.w, r14.xyzw, t7.yzwx
    ieq r13.z, r1.w, r10.w
    bfi r13.w, r4.w, l(0), l(0), r12.w
    movc r12.w, r13.z, r13.w, r12.w
    ieq r13.z, r10.y, r10.w
    ubfe r13.w, r10.z, l(0), r12.w
    movc r12.w, r13.z, r13.w, r12.w
    iadd r13.z, r10.w, cb2[0].x
    mov r24.xyzw, r22.xyzw
    mov r25.xyz, r23.yzwy
    mov r13.w, r12.w
    loop 
      breakc_z r13.w
      firstbit_lo r14.x, r13.w
      ishl r14.y, l(1), r14.x
      and r14.z, r13.w, r14.y
      if_nz r14.z
        xor r13.w, r13.w, r14.y
        iadd r14.y, r13.z, r14.x
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r26.xyzw, r14.y, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r27.xy, r14.y, l(16), t11.xyxx
        add r26.xyz, r26.xyzx, -v6.xyzx
        mov r27.z, r26.w
        lt r26.xyz, |r26.xyzx|, r27.zxyz
        and r14.y, r26.y, r26.x
        and r14.y, r26.z, r14.y
        if_nz r14.y
          iadd r14.x, r10.w, r14.x
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r14.x, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r14.yz, r14.x, l(96), t15.xxyx
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r14.x, l(116), t15.zwxy
          add r28.xyz, -r26.yzwy, v6.xyzx
          and r15.w, r27.w, l(0x0000ffff)
          ubfe r16.w, l(6), l(25), r27.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r15.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r15.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r15.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r15.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r15.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r15.w, l(80), t16.xyzw
          dp3 r17.z, r29.xyzx, r28.xyzx
          add_sat r17.z, r29.w, r17.z
          dp3 r17.w, r30.xyzx, r28.xyzx
          add_sat r17.w, r30.w, r17.w
          mul r17.z, r17.w, r17.z
          dp3 r17.w, r31.xyzx, r28.xyzx
          add_sat r17.w, r31.w, r17.w
          mul r17.z, r17.w, r17.z
          dp3 r17.w, r32.xyzx, r28.xyzx
          add_sat r17.w, r32.w, r17.w
          mul r17.z, r17.w, r17.z
          dp3 r17.w, r33.xyzx, r28.xyzx
          add_sat r17.w, r33.w, r17.w
          mul r17.z, r17.w, r17.z
          dp3 r17.w, r34.xyzx, r28.xyzx
          add_sat r17.w, r34.w, r17.w
          mul r15.x, r17.w, r17.z
          and r17.z, r14.y, l(1)
          movc r17.zw, r17.zzzz, r15.xxxy, r15.zzzx
          mov r15.x, r14.y
          mov r29.xy, r17.zwzz
          mov r18.w, l(1)
          loop 
            ige r19.w, r18.w, r16.w
            breakc_nz r19.w
            iadd r19.w, r15.w, r18.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r19.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r19.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r19.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r19.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r19.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r19.w, l(80), t16.xyzw
            dp3 r19.w, r30.xyzx, r28.xyzx
            add_sat r19.w, r30.w, r19.w
            mul r19.w, r19.w, r29.x
            dp3 r26.w, r31.xyzx, r28.xyzx
            add_sat r26.w, r31.w, r26.w
            mul r19.w, r19.w, r26.w
            dp3 r26.w, r32.xyzx, r28.xyzx
            add_sat r26.w, r32.w, r26.w
            mul r19.w, r19.w, r26.w
            dp3 r26.w, r33.xyzx, r28.xyzx
            add_sat r26.w, r33.w, r26.w
            mul r19.w, r19.w, r26.w
            dp3 r26.w, r34.xyzx, r28.xyzx
            add_sat r26.w, r34.w, r26.w
            mul r19.w, r19.w, r26.w
            dp3 r26.w, r35.xyzx, r28.xyzx
            add_sat r26.w, r35.w, r26.w
            mul r29.x, r19.w, r26.w
            ushr r28.w, r15.x, l(2)
            ubfe r29.z, l(1), l(2), r15.x
            and r29.w, r28.w, l(2)
            max r30.x, r29.x, r29.y
            mad r19.w, -r19.w, r26.w, l(1.000000)
            mul r19.w, r19.w, r29.y
            movc r17.y, r29.w, r19.w, r30.x
            movc r29.xy, r29.zzzz, r29.xyxx, r17.xyxx
            iadd r18.w, r18.w, l(1)
            mov r15.x, r28.w
          endloop 
          mov_sat r29.y, r29.y
          mul r14.y, r14.z, r29.y
          lt r15.x, l(0.000000), r14.y
          if_nz r15.x
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r14.x, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r14.x, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r14.x, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r14.x, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r14.x, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r14.x, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r14.x, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r14.x, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r14.x, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xyzw, r14.x, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r40.xy, r14.x, l(212), t15.xyxx
            mad r25.z, r29.y, r14.z, r25.z
            mul r14.x, r27.z, r14.y
            mov r27.z, r35.z
            dp3 r14.y, r11.xyzx, r27.xyzx
            dp3 r14.z, r28.xyzx, r27.xyzx
            add r14.z, -r35.w, r14.z
            ge r15.x, r14.z, l(0.000000)
            max r14.z, r8.w, |r14.z|
            movc r14.z, r15.x, r14.z, -r14.z
            max r14.y, -r14.y, l(0.00000010)
            div r14.y, r14.z, r14.y
            min r14.y, |r14.y|, l(131072.000000)
            mov r35.z, r36.z
            dp3 r14.z, r11.xyzx, r35.xyzx
            dp3 r15.x, r28.xyzx, r35.xyzx
            add r15.x, -r36.w, r15.x
            ge r15.w, r15.x, l(0.000000)
            max r15.x, r8.w, |r15.x|
            movc r15.x, r15.w, r15.x, -r15.x
            max r14.z, -r14.z, l(0.00000010)
            div r14.z, r15.x, r14.z
            min r14.y, |r14.z|, r14.y
            mov r36.z, r37.z
            dp3 r14.z, r11.xyzx, r36.xyzx
            dp3 r15.x, r28.xyzx, r36.xyzx
            add r15.x, -r37.w, r15.x
            ge r15.w, r15.x, l(0.000000)
            max r15.x, r8.w, |r15.x|
            movc r15.x, r15.w, r15.x, -r15.x
            max r14.z, -r14.z, l(0.00000010)
            div r14.z, r15.x, r14.z
            min r14.y, |r14.z|, r14.y
            mov r37.z, r38.z
            dp3 r14.z, r11.xyzx, r37.xyzx
            dp3 r15.x, r28.xyzx, r37.xyzx
            add r15.x, -r38.w, r15.x
            ge r15.w, r15.x, l(0.000000)
            max r15.x, r8.w, |r15.x|
            movc r15.x, r15.w, r15.x, -r15.x
            max r14.z, -r14.z, l(0.00000010)
            div r14.z, r15.x, r14.z
            min r14.y, |r14.z|, r14.y
            mov r38.z, r39.x
            dp3 r14.z, r11.xyzx, r38.xyzx
            dp3 r15.x, r28.xyzx, r38.xyzx
            add r15.x, -r39.y, r15.x
            ge r15.w, r15.x, l(0.000000)
            max r15.x, r8.w, |r15.x|
            movc r15.x, r15.w, r15.x, -r15.x
            max r14.z, -r14.z, l(0.00000010)
            div r14.z, r15.x, r14.z
            min r14.y, |r14.z|, r14.y
            mov r40.zw, r39.zzzw
            dp3 r14.z, r11.zxyz, r40.xzwx
            dp3 r15.x, r28.zxyz, r40.xzwx
            add r15.x, -r40.y, r15.x
            ge r15.w, r15.x, l(0.000000)
            max r15.x, r8.w, |r15.x|
            movc r15.x, r15.w, r15.x, -r15.x
            max r14.z, -r14.z, l(0.00000010)
            div r14.z, r15.x, r14.z
            min r14.y, |r14.z|, r14.y
            mov r27.x, r32.w
            mov r27.yz, r33.zzwz
            add r17.yzw, r28.xxyz, r27.xxyz
            mad r17.yzw, r11.xxyz, r14.yyyy, r17.yyzw
            dp3 r14.z, r17.yzwy, r17.yzwy
            sqrt r14.z, r14.z
            div r14.y, r14.y, r14.z
            add r14.y, r14.y, r14.y
            sqrt r14.y, r14.y
            mad r14.y, r7.w, l(5.000000), r14.y
            add r14.y, r14.y, l(-0.844800)
            mov r26.y, r30.z
            mov r26.z, r31.x
            dp3 r35.x, r17.yzwy, r26.xyzx
            mov r27.xy, r30.xwxx
            mov r27.z, r31.w
            dp3 r35.y, r17.yzwy, r27.xyzx
            mov r31.x, r30.y
            dp3 r35.z, r17.yzwy, r31.xyzx
            ubfe r14.z, l(9), l(16), r27.w
            utof r35.w, r14.z
            sample_l_indexable(texturecubearray)(float,float,float,float) r17.yzw, r35.xyzw, t8.wxyz, s2, r14.y
            and r29.xzw, r17.yyzw, l(0x7fffffff, 0, 0x7fffffff, 0x7fffffff)
            ieq r29.xzw, r29.xxzw, l(0x7f800000, 0, 0x7f800000, 0x7f800000)
            or r14.y, r29.z, r29.x
            or r14.y, r29.w, r14.y
            movc r17.yzw, r14.yyyy, l(0,1.000000,1.000000,0), r17.yyzw
            dp3 r30.x, r28.xyzx, r26.xyzx
            dp3 r30.y, r28.xyzx, r27.xyzx
            dp3 r30.z, r28.xyzx, r31.xyzx
            mad_sat r28.xyz, r30.xyzx, r32.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
            mov r33.z, r34.x
            mad r28.xyz, r28.xyzx, r33.xyzx, r34.yzwy
            dp3 r35.x, r2.xyzx, r26.xyzx
            dp3 r35.y, r2.xyzx, r27.xyzx
            dp3 r35.z, r2.xyzx, r31.xyzx
            lt r26.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r35.xyzx
            movc r16.z, r26.x, l(0), l(0.500000)
            add r27.xyz, r16.xyzx, r28.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r27.xyz, r27.xyzx, t17.xyzw, s4, l(0.000000)
            mul r29.xzw, r35.xxyz, r35.xxyz
            mul r29.xzw, r14.xxxx, r29.xxzw
            movc r18.z, r26.y, l(0), l(0.500000)
            add r26.xyw, r18.xyxz, r28.xyxz
            sample_l_indexable(texture3d)(float,float,float,float) r26.xyw, r26.xywx, t18.xywz, s4, l(0.000000)
            mul r26.xyw, r29.zzzz, r26.xyxw
            mad r26.xyw, r27.xyxz, r29.xxxx, r26.xyxw
            movc r19.z, r26.z, l(0), l(0.500000)
            add r27.xyz, r19.xyzx, r28.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r27.xyz, r27.xyzx, t19.xyzw, s4, l(0.000000)
            mad r26.xyz, r27.xyzx, r29.wwww, r26.xywx
            sample_l_indexable(texturecubearray)(float,float,float,float) r27.xyz, r35.xyzw, t8.xyzw, s2, l(6.000000)
            and r28.xyz, r27.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
            ieq r28.xyz, r28.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
            or r14.y, r28.y, r28.x
            or r14.y, r28.z, r14.y
            movc r27.xyz, r14.yyyy, l(1.000000,1.000000,0,0), r27.xyzx
            mul r28.xyz, r26.xyzx, r27.xyzx
            dp3 r14.y, r28.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r24.xyz, r26.xyzx, r27.xyzx, r24.xyzx
            mul r14.z, r9.w, r14.y
            mul r17.yzw, r14.xxxx, r17.yyzw
            dp3 r14.x, r17.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r14.x, r9.w, r14.y, r14.x
            div r14.x, r14.z, r14.x
            mov r26.x, r24.w
            mov r26.yz, r25.xxyx
            mad r25.xyw, r17.zwzy, r14.xxxx, r26.yzyx
            mov r24.w, r25.w
          endif 
        endif 
      endif 
    endloop 
    mov r22.xyzw, r24.xyzw
    mov r23.yzw, r25.xxyz
    iadd r10.w, r10.w, l(32)
  endloop 
  lt r10.y, r23.w, l(1.000000)
  if_nz r10.y
    mov r13.xy, l(0,0,0,0)
    mov r14.w, l(0)
    mov r15.yz, l(0,0,1.000000,0)
    mov r16.xy, l(0,0,0,0)
    mov r17.x, l(1.000000)
    mov r18.xy, l(0,0,0,0)
    mov r19.xy, l(0,0,0,0)
    mov r24.x, r22.w
    mov r24.yzw, r23.yyzw
    mov r10.yzw, r22.xxyz
    mov r12.w, r23.w
    mov r13.w, l(0)
    loop 
      uge r15.w, r13.w, r1.z
      breakc_nz r15.w
      ushr r13.z, r13.w, l(5)
      iadd r14.xyz, r12.xyzx, r13.xyzx
      ld_indexable(texture2darray)(uint,uint,uint,uint) r13.z, r14.xyzw, t7.yzxw
      ieq r14.x, r1.w, r13.w
      ubfe r14.y, r4.w, l(0), r13.z
      movc r13.z, r14.x, r14.y, r13.z
      iadd r14.x, r13.w, cb2[0].x
      mov r25.xyzw, r24.xyzw
      mov r26.xyz, r10.yzwy
      mov r14.y, r12.w
      mov r14.z, r13.z
      loop 
        breakc_z r14.z
        firstbit_lo r15.w, r14.z
        ishl r16.w, l(1), r15.w
        and r17.z, r14.z, r16.w
        if_nz r17.z
          xor r14.z, r14.z, r16.w
          iadd r16.w, r14.x, r15.w
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r27.xyzw, r16.w, l(0), t11.xyzw
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r28.xy, r16.w, l(16), t11.xyxx
          add r27.xyz, r27.xyzx, -v6.xyzx
          mov r28.z, r27.w
          lt r27.xyz, |r27.xyzx|, r28.zxyz
          and r16.w, r27.y, r27.x
          and r16.w, r27.z, r16.w
          if_nz r16.w
            iadd r15.w, r13.w, r15.w
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r15.w, l(0), t15.wxyz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r17.zw, r15.w, l(96), t15.xxxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r15.w, l(116), t15.zwxy
            add r29.xyz, -r27.yzwy, v6.xyzx
            and r16.w, r28.w, l(0x0000ffff)
            ubfe r18.w, l(6), l(25), r28.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r16.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r16.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r16.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r16.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r16.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r16.w, l(80), t16.xyzw
            dp3 r19.w, r30.xyzx, r29.xyzx
            add_sat r19.w, r30.w, r19.w
            dp3 r21.w, r31.xyzx, r29.xyzx
            add_sat r21.w, r31.w, r21.w
            mul r19.w, r19.w, r21.w
            dp3 r21.w, r32.xyzx, r29.xyzx
            add_sat r21.w, r32.w, r21.w
            mul r19.w, r19.w, r21.w
            dp3 r21.w, r33.xyzx, r29.xyzx
            add_sat r21.w, r33.w, r21.w
            mul r19.w, r19.w, r21.w
            dp3 r21.w, r34.xyzx, r29.xyzx
            add_sat r21.w, r34.w, r21.w
            mul r19.w, r19.w, r21.w
            dp3 r21.w, r35.xyzx, r29.xyzx
            add_sat r21.w, r35.w, r21.w
            mul r15.x, r19.w, r21.w
            and r19.w, r17.z, l(1)
            movc r30.xy, r19.wwww, r15.xyxx, r15.zxzz
            mov r15.x, r17.z
            mov r31.xy, r30.xyxx
            mov r19.w, l(1)
            loop 
              ige r21.w, r19.w, r18.w
              breakc_nz r21.w
              iadd r21.w, r16.w, r19.w
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r21.w, l(0), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r21.w, l(16), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r21.w, l(32), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r21.w, l(48), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r21.w, l(64), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r21.w, l(80), t16.xyzw
              dp3 r21.w, r32.xyzx, r29.xyzx
              add_sat r21.w, r32.w, r21.w
              mul r21.w, r21.w, r31.x
              dp3 r26.w, r33.xyzx, r29.xyzx
              add_sat r26.w, r33.w, r26.w
              mul r21.w, r21.w, r26.w
              dp3 r26.w, r34.xyzx, r29.xyzx
              add_sat r26.w, r34.w, r26.w
              mul r21.w, r21.w, r26.w
              dp3 r26.w, r35.xyzx, r29.xyzx
              add_sat r26.w, r35.w, r26.w
              mul r21.w, r21.w, r26.w
              dp3 r26.w, r36.xyzx, r29.xyzx
              add_sat r26.w, r36.w, r26.w
              mul r21.w, r21.w, r26.w
              dp3 r26.w, r37.xyzx, r29.xyzx
              add_sat r26.w, r37.w, r26.w
              mul r31.x, r21.w, r26.w
              ushr r27.w, r15.x, l(2)
              ubfe r29.w, l(1), l(2), r15.x
              and r30.z, r27.w, l(2)
              max r30.w, r31.x, r31.y
              mad r21.w, -r21.w, r26.w, l(1.000000)
              mul r21.w, r21.w, r31.y
              movc r17.y, r30.z, r21.w, r30.w
              movc r31.xy, r29.wwww, r31.xyxx, r17.xyxx
              iadd r19.w, r19.w, l(1)
              mov r15.x, r27.w
            endloop 
            add_sat r15.x, -r14.y, r31.y
            mul r16.w, r17.w, r15.x
            lt r17.y, l(0.000000), r16.w
            if_nz r17.y
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r15.w, l(16), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r15.w, l(32), t15.yxwz
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r15.w, l(48), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r15.w, l(64), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r15.w, l(80), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r15.w, l(132), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r15.w, l(148), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r15.w, l(164), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xyzw, r15.w, l(180), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r40.xyzw, r15.w, l(196), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r41.xy, r15.w, l(212), t15.xyxx
              mad r25.w, r15.x, r17.w, r25.w
              mul r15.x, r28.z, r16.w
              mov r28.z, r36.z
              dp3 r15.w, r11.xyzx, r28.xyzx
              dp3 r16.w, r29.xyzx, r28.xyzx
              add r16.w, -r36.w, r16.w
              ge r17.y, r16.w, l(0.000000)
              max r16.w, r8.w, |r16.w|
              movc r16.w, r17.y, r16.w, -r16.w
              max r15.w, -r15.w, l(0.00000010)
              div r15.w, r16.w, r15.w
              min r15.w, |r15.w|, l(131072.000000)
              mov r36.z, r37.z
              dp3 r16.w, r11.xyzx, r36.xyzx
              dp3 r17.y, r29.xyzx, r36.xyzx
              add r17.y, -r37.w, r17.y
              ge r17.z, r17.y, l(0.000000)
              max r17.y, r8.w, |r17.y|
              movc r17.y, r17.z, r17.y, -r17.y
              max r16.w, -r16.w, l(0.00000010)
              div r16.w, r17.y, r16.w
              min r15.w, r15.w, |r16.w|
              mov r37.z, r38.z
              dp3 r16.w, r11.xyzx, r37.xyzx
              dp3 r17.y, r29.xyzx, r37.xyzx
              add r17.y, -r38.w, r17.y
              ge r17.z, r17.y, l(0.000000)
              max r17.y, r8.w, |r17.y|
              movc r17.y, r17.z, r17.y, -r17.y
              max r16.w, -r16.w, l(0.00000010)
              div r16.w, r17.y, r16.w
              min r15.w, r15.w, |r16.w|
              mov r38.z, r39.z
              dp3 r16.w, r11.xyzx, r38.xyzx
              dp3 r17.y, r29.xyzx, r38.xyzx
              add r17.y, -r39.w, r17.y
              ge r17.z, r17.y, l(0.000000)
              max r17.y, r8.w, |r17.y|
              movc r17.y, r17.z, r17.y, -r17.y
              max r16.w, -r16.w, l(0.00000010)
              div r16.w, r17.y, r16.w
              min r15.w, r15.w, |r16.w|
              mov r39.z, r40.x
              dp3 r16.w, r11.xyzx, r39.xyzx
              dp3 r17.y, r29.xyzx, r39.xyzx
              add r17.y, -r40.y, r17.y
              ge r17.z, r17.y, l(0.000000)
              max r17.y, r8.w, |r17.y|
              movc r17.y, r17.z, r17.y, -r17.y
              max r16.w, -r16.w, l(0.00000010)
              div r16.w, r17.y, r16.w
              min r15.w, r15.w, |r16.w|
              mov r41.zw, r40.zzzw
              dp3 r16.w, r11.zxyz, r41.xzwx
              dp3 r17.y, r29.zxyz, r41.xzwx
              add r17.y, -r41.y, r17.y
              ge r17.z, r17.y, l(0.000000)
              max r17.y, r8.w, |r17.y|
              movc r17.y, r17.z, r17.y, -r17.y
              max r16.w, -r16.w, l(0.00000010)
              div r16.w, r17.y, r16.w
              min r15.w, r15.w, |r16.w|
              mov r28.x, r33.w
              mov r28.yz, r34.zzwz
              add r17.yzw, r29.xxyz, r28.xxyz
              mad r17.yzw, r11.xxyz, r15.wwww, r17.yyzw
              dp3 r16.w, r17.yzwy, r17.yzwy
              sqrt r16.w, r16.w
              div r15.w, r15.w, r16.w
              add r15.w, r15.w, r15.w
              sqrt r15.w, r15.w
              mad r15.w, r7.w, l(5.000000), r15.w
              add r15.w, r15.w, l(-0.844800)
              mov r27.y, r30.z
              mov r27.z, r32.x
              dp3 r36.x, r17.yzwy, r27.xyzx
              mov r28.xy, r30.xwxx
              mov r28.z, r32.w
              dp3 r36.y, r17.yzwy, r28.xyzx
              mov r32.x, r30.y
              dp3 r36.z, r17.yzwy, r32.xyzx
              ubfe r16.w, l(9), l(16), r28.w
              utof r36.w, r16.w
              sample_l_indexable(texturecubearray)(float,float,float,float) r17.yzw, r36.xyzw, t8.wxyz, s2, r15.w
              and r30.xyz, r17.yzwy, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
              ieq r30.xyz, r30.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
              or r15.w, r30.y, r30.x
              or r15.w, r30.z, r15.w
              movc r17.yzw, r15.wwww, l(0,1.000000,1.000000,0), r17.yyzw
              dp3 r30.x, r29.xyzx, r27.xyzx
              dp3 r30.y, r29.xyzx, r28.xyzx
              dp3 r30.z, r29.xyzx, r32.xyzx
              mad_sat r29.xyz, r30.xyzx, r33.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
              mov r34.z, r35.x
              mad r29.xyz, r29.xyzx, r34.xyzx, r35.yzwy
              dp3 r36.x, r2.xyzx, r27.xyzx
              dp3 r36.y, r2.xyzx, r28.xyzx
              dp3 r36.z, r2.xyzx, r32.xyzx
              lt r27.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r36.xyzx
              movc r16.z, r27.x, l(0), l(0.500000)
              add r28.xyz, r16.xyzx, r29.xyzx
              sample_l_indexable(texture3d)(float,float,float,float) r28.xyz, r28.xyzx, t17.xyzw, s4, l(0.000000)
              mul r30.xyz, r36.xyzx, r36.xyzx
              mul r30.xyz, r15.xxxx, r30.xyzx
              movc r18.z, r27.y, l(0), l(0.500000)
              add r27.xyw, r18.xyxz, r29.xyxz
              sample_l_indexable(texture3d)(float,float,float,float) r27.xyw, r27.xywx, t18.xywz, s4, l(0.000000)
              mul r27.xyw, r30.yyyy, r27.xyxw
              mad r27.xyw, r28.xyxz, r30.xxxx, r27.xyxw
              movc r19.z, r27.z, l(0), l(0.500000)
              add r28.xyz, r19.xyzx, r29.xyzx
              sample_l_indexable(texture3d)(float,float,float,float) r28.xyz, r28.xyzx, t19.xyzw, s4, l(0.000000)
              mad r27.xyz, r28.xyzx, r30.zzzz, r27.xywx
              sample_l_indexable(texturecubearray)(float,float,float,float) r28.xyz, r36.xyzw, t8.xyzw, s2, l(6.000000)
              and r29.xyz, r28.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
              ieq r29.xyz, r29.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
              or r15.w, r29.y, r29.x
              or r15.w, r29.z, r15.w
              movc r28.xyz, r15.wwww, l(1.000000,1.000000,0,0), r28.xyzx
              mul r29.xyz, r27.xyzx, r28.xyzx
              dp3 r15.w, r29.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
              mad r26.xyz, r27.xyzx, r28.xyzx, r26.xyzx
              mul r16.z, r9.w, r15.w
              mul r17.yzw, r15.xxxx, r17.yyzw
              dp3 r15.x, r17.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
              mad r15.x, r9.w, r15.w, r15.x
              div r15.x, r16.z, r15.x
              mad r25.xyz, r17.yzwy, r15.xxxx, r25.xyzx
            endif 
          endif 
        endif 
      endloop 
      mov r24.xyzw, r25.xyzw
      mov r10.yzw, r26.xxyz
      iadd r13.w, r13.w, l(32)
    endloop 
    mov r23.xyzw, r24.zxyw
    mov r22.xyz, r10.yzwy
    mov r23.xyzw, r23.yzxw
  else 
    mov r23.x, r22.w
  endif 
  max r1.z, r23.w, l(1.000000)
  rcp r1.z, r1.z
  mov_sat r23.w, r23.w
  mul r20.xyz, r1.zzzz, r22.xyzx
  mul r21.xyz, r1.zzzz, r23.xyzx
  lt r1.w, r23.w, l(0.990000)
  if_nz r1.w
    add r1.w, -r23.w, l(1.000000)
    mul r4.w, r1.w, cb2[19].x
    add r10.yzw, v6.xxyz, -cb2[35].xxyz
    mul r13.x, r10.y, cb2[35].w
    mul r13.yz, r10.zzwz, cb2[36].xxyx
    add_sat r10.yzw, r13.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
    mul r13.xy, r10.yzyy, cb2[36].zwzz
    mul r13.z, r10.w, cb2[37].x
    add r10.yzw, r13.xxyz, cb2[37].yyzw
    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r2.xyzx
    movc r13.xyz, r13.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
    mov r13.w, l(0)
    add r14.xyz, r10.yzwy, r13.wwxw
    sample_l_indexable(texture3d)(float,float,float,float) r14.xyz, r14.xyzx, t17.xyzw, s4, l(0.000000)
    mul r15.xyz, r2.xyzx, r2.xyzx
    mul r15.xyz, r4.wwww, r15.xyzx
    add r16.xyz, r10.yzwy, r13.wwyw
    sample_l_indexable(texture3d)(float,float,float,float) r16.xyz, r16.xyzx, t18.xyzw, s4, l(0.000000)
    mul r16.xyz, r15.yyyy, r16.xyzx
    mad r14.xyz, r14.xyzx, r15.xxxx, r16.xyzx
    add r10.yzw, r10.yyzw, r13.wwwz
    sample_l_indexable(texture3d)(float,float,float,float) r10.yzw, r10.yzwy, t19.wxyz, s4, l(0.000000)
    mad r10.yzw, r10.yyzw, r15.zzzz, r14.xxyz
    mov r2.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r13.xyz, r2.xyzw, t8.xyzw, s2, l(6.000000)
    mul r10.yzw, r10.yyzw, r13.xxyz
    dp3 r2.w, r10.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
    mad r20.xyz, r22.xyzx, r1.zzzz, r10.yzwy
    mov r11.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r10.yzw, r11.xyzw, t8.wxyz, s2, r8.z
    mad r1.z, cb2[19].x, r1.w, -r2.w
    mad r1.z, r1.y, r1.z, r2.w
    mad r21.xyz, r10.yzwy, r1.zzzz, r21.xyzx
  endif 
else 
  mov r21.x, r20.w
endif 
add r1.z, r0.w, r1.x
log r1.z, |r1.z|
mul r1.z, r1.z, r7.z
exp r1.z, r1.z
add r1.z, r0.w, r1.z
add_sat r1.z, r1.z, l(-1.000000)
mul r13.xyz, r0.wwww, r20.yzxy
mad r1.yw, r1.xxxy, l(0.000000, 0.984375, 0.000000, 0.984375), l(0.000000, 0.00781250, 0.000000, 0.00781250)
sample_l_indexable(texture2d)(float,float,float,float) r1.yw, r1.ywyy, t5.zxwy, s2, l(0.000000)
mul r10.yzw, r1.zzzz, r21.xxyz
mul r14.xyz, r1.yyyy, r10.yzwy
mul r15.xyz, r1.wwww, r10.yzwy
sqrt r0.w, r7.z
mad r0.w, r0.w, l(0.500000), l(0.500000)
mul r0.w, r0.w, r0.w
mul r1.y, r0.w, l(0.500000)
mad r0.w, -r0.w, l(0.500000), l(1.000000)
mad r1.z, r1.x, r0.w, r1.y
mul r0.w, r0.w, r1.z
mul r1.y, r1.z, r1.y
dp3 r1.z, r2.xyzx, cb2[17].xyzx
ge r1.w, l(0.000000), |r1.z|
if_nz r1.w
  mov r2.w, l(0)
endif 
if_z r1.w
  mul r10.yzw, v6.yyyy, cb2[29].xxyz
  mad r10.yzw, v6.xxxx, cb2[28].xxyz, r10.yyzw
  mad r10.yzw, v6.zzzz, cb2[30].xxyz, r10.yyzw
  add r10.yzw, r10.yyzw, cb2[31].xxyz
  add r1.w, r10.w, -cb2[17].w
  mad r1.w, -r1.w, l(0.00006104), l(1.000000)
  mov_sat r4.w, r1.w
  eq r4.w, r1.w, r4.w
  if_nz r4.w
    mov r4.w, l(0)
    mov r7.w, l(0)
    loop 
      ge r8.z, r4.w, l(3.000000)
      breakc_nz r8.z
      ftou r8.z, r4.w
      add r16.xy, r10.yzyy, -cb2[r8.z + 20].xyxx
      max r8.w, |r16.y|, |r16.x|
      mul r7.w, r8.w, cb2[r8.z + 20].z
      lt r8.z, r7.w, l(1.000000)
      if_nz r8.z
        break 
      endif 
      add r4.w, r4.w, l(1.000000)
      mov r7.w, l(0)
    endloop 
  else 
    mov r4.w, l(3.000000)
    mov r7.w, l(0)
  endif 
  ge r8.z, r4.w, l(3.000000)
  if_nz r8.z
    mul r16.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
    rcp r17.xz, r16.xxxx
    mov r17.y, -r17.z
    mad r16.xyz, r10.yzyy, r17.xyzx, r16.yzyy
    add r17.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r16.xyz, r16.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r16.xyz, r17.xyzx, r16.xyzx
    mul r17.xy, r16.zyzz, cb2[32].xxxx
    round_ni r17.xy, r17.xyxx
    mul r8.w, r17.y, cb2[27].x
    mad r8.w, r8.w, cb2[32].x, r17.x
    ftou r8.w, r8.w
    iadd r8.w, r8.w, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r9.w, r8.w, l(0), t23.xxxx
    and r11.w, r9.w, l(0x40000000)
    ishl r12.w, r9.w, l(2)
    if_z r11.w
      and r11.w, r9.w, l(0x01ffffff)
      iadd r17.x, r8.w, r11.w
      ushr r8.w, r9.w, l(25)
      utof r8.w, r8.w
      mul r16.xyz, r8.wwww, r16.xyzx
      frc r16.xyz, r16.xyzx
      mul r16.xyz, r16.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
      ftou r16.xyz, r16.xyzx
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.z, r17.x, l(0), t23.xxxx
      ushr r18.xy, r16.zyzz, l(6, 6, 0, 0)
      and r8.w, r17.z, l(0xc0000000)
      iadd r9.w, r17.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r9.w, r9.w, l(0), t23.xxxx
      movc r9.w, r18.y, r17.z, r9.w
      ushr r11.w, r9.w, l(13)
      movc r9.w, r18.x, r11.w, r9.w
      and r9.w, r9.w, l(8191)
      iadd r18.x, r9.w, r17.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.x, l(0), t23.xxxx
      mov r17.y, l(0)
      mov r18.y, l(1)
      movc r18.xyz, r8.wwww, r17.xyzx, r18.xyzx
      movc r19.yz, r8.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r20.xy, r16.zyzz, r19.yyyy
      and r20.xy, r20.xyxx, l(1, 1, 0, 0)
      and r9.w, r18.z, l(0xc0000000)
      iadd r11.w, r18.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r11.w, r11.w, l(0), t23.xxxx
      movc r11.w, r20.y, r18.z, r11.w
      ushr r14.w, r11.w, l(13)
      movc r11.w, r20.x, r14.w, r11.w
      and r11.w, r11.w, l(8191)
      iadd r19.x, r11.w, r18.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.w, r19.x, l(0), t23.xxxx
      movc r18.xyz, r9.wwww, r18.xyzx, r19.xzwx
      movc r17.xyz, r8.wwww, r17.xyzx, r18.xyzx
      and r8.w, r17.z, l(0xc0000000)
      if_z r8.w
        iadd r8.w, -r17.y, l(6)
        ushr r18.xy, r16.zyzz, r8.wwww
        or r8.w, r17.z, l(0x40000000)
        bfi r9.w, l(1), l(1), r18.y, l(0)
        bfi r9.w, l(1), l(0), r18.x, r9.w
        imul null, r9.w, r9.w, l(10)
        ushr r8.w, r8.w, r9.w
        and r8.w, r8.w, l(1023)
        iadd r18.x, r8.w, r17.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.w, r18.x, l(0), t23.xxxx
        iadd r18.yz, r17.yyyy, l(0, 1, 2, 0)
        iadd r8.w, -r18.y, l(6)
        ushr r17.yw, r16.zzzy, r8.wwww
        and r8.w, r18.w, l(0xc0000000)
        or r9.w, r18.w, l(0x40000000)
        bfi r11.w, l(1), l(1), r17.w, l(0)
        bfi r11.w, l(1), l(0), r17.y, r11.w
        imul null, r11.w, r11.w, l(10)
        ushr r9.w, r9.w, r11.w
        and r9.w, r9.w, l(1023)
        iadd r19.x, r9.w, r18.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.z, r19.x, l(0), t23.xxxx
        mov r19.y, r18.z
        movc r19.xyz, r8.wwww, r18.xywx, r19.xyzx
        iadd r9.w, -r19.y, l(6)
        ushr r17.yw, r16.zzzy, r9.wwww
        and r9.w, r19.z, l(0xc0000000)
        or r11.w, r19.z, l(0x40000000)
        bfi r14.w, l(1), l(1), r17.w, l(0)
        bfi r14.w, l(1), l(0), r17.y, r14.w
        imul null, r14.w, r14.w, l(10)
        ushr r11.w, r11.w, r14.w
        and r11.w, r11.w, l(1023)
        iadd r20.x, r11.w, r19.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.y, r20.x, l(0), t23.xxxx
        movc r17.yw, r9.wwww, r19.xxxz, r20.xxxy
        movc r17.xz, r8.wwww, r18.xxwx, r17.yywy
      endif 
      and r8.w, r17.z, l(0xc0000000)
      if_z r8.w
        ubfe r9.w, l(14), l(15), r17.z
        utof r9.w, r9.w
        mul r9.w, r9.w, cb2[27].w
        mul r9.w, r9.w, l(0.00006104)
        and r17.yw, r17.zzzz, l(0, 0x00007fff, 0, 0x20000000)
        utof r11.w, r17.y
        mul r11.w, r11.w, cb2[27].w
        mul r11.w, r11.w, l(0.00003052)
        and r14.w, r16.y, l(3)
        iadd r14.w, r14.w, r17.x
        iadd r14.w, r14.w, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r14.w, r14.w, l(0), t23.xxxx
        bfi r16.xyw, l(2, 2, 0, 1), l(3, 1, 0, 4), r16.xyxz, l(0, 0, 0, 0)
        ushr r14.w, r14.w, r16.x
        and r14.w, r14.w, l(255)
        utof r14.w, r14.w
        mul r14.w, r11.w, r14.w
        mad r14.w, r14.w, l(0.00392157), r9.w
        iadd r16.x, r16.y, l(1)
        ubfe r16.y, l(1), l(1), r16.z
        iadd r16.x, r16.y, r16.x
        iadd r16.x, r16.x, r17.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.x, r16.x, l(0), t23.xxxx
        ushr r16.x, r16.x, r16.w
        and r16.x, r16.x, l(0x0000ffff)
        utof r16.x, r16.x
        mul r11.w, r11.w, r16.x
        mad r9.w, r11.w, l(0.00001526), r9.w
        movc r12.w, r17.w, r14.w, r9.w
      else 
        and r9.w, r17.z, l(0x80000000)
        iadd r11.w, r17.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r11.w, r11.w, l(0), t23.xxxx
        movc r9.w, r9.w, r11.w, l(0)
        ishl r11.w, r17.z, l(2)
        ushr r14.w, r9.w, l(16)
        f16tof32 r14.w, r14.w
        and r9.w, r9.w, l(0x0000ffff)
        f16tof32 r9.w, r9.w
        mad r11.w, r10.y, r14.w, r11.w
        mad r9.w, r10.z, r9.w, r11.w
        movc r12.w, r8.w, r9.w, r12.w
      endif 
    endif 
    mad r8.w, -cb2[27].z, l(2.000000), r10.w
    lt r8.w, r12.w, r8.w
    movc r2.w, r8.w, l(0), l(1.000000)
  endif 
  if_z r8.z
    if_z cb2[58].y
      ftou r8.z, r4.w
      add r16.xy, r10.yzyy, -cb2[r8.z + 20].xyxx
      mul r8.zw, r16.xxxy, cb2[r8.z + 20].zzzz
      mad r16.xy, r8.zwzz, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r8.z, cb2[26].y
      add r16.z, r4.w, r8.z
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r8.z, r16.xyzx, t13.xxxx, s13, r1.w
      sample_l_indexable(texture2darray)(float,float,float,float) r8.w, r16.xyzx, t31.yzwx, s0, l(0.000000)
      add r8.z, r8.w, r8.z
      add_sat r8.z, r8.z, l(-1.000000)
      mul r8.w, r8.z, r8.z
      mul r2.w, r8.z, r8.w
    endif 
    if_nz cb2[58].y
      mov r16.x, -r8.x
      ftou r8.z, r4.w
      add r4.w, r4.w, l(1.000000)
      min r4.w, r4.w, l(2.000000)
      ftou r4.w, r4.w
      add r7.w, -r7.w, l(1.000000)
      mul r7.w, r7.w, l(28.000000)
      ftou r7.w, r7.w
      add r17.xy, r10.yzyy, -cb2[r8.z + 20].xyxx
      mul r17.xy, r17.xyxx, cb2[r8.z + 20].zzzz
      mad r17.xy, r17.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      add r10.yz, r10.yyzy, -cb2[r4.w + 20].xxyx
      mul r10.yz, r10.yyzy, cb2[r4.w + 20].zzzz
      mad r10.yz, r10.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      mov r16.y, r9.x
      mov r16.z, r8.x
      mov r8.w, l(0)
      mov r9.w, l(0)
      loop 
        uge r10.w, r9.w, l(8)
        breakc_nz r10.w
        ult r10.w, r7.w, r9.w
        movc r17.zw, r10.wwww, r10.yyyz, r17.xxxy
        movc r11.w, r10.w, cb2[r4.w + 20].w, cb2[r8.z + 20].w
        movc r10.w, r10.w, r4.w, r8.z
        dp2 r18.x, icb[r9.w + 0].yxyy, r16.xyxx
        dp2 r18.y, icb[r9.w + 0].yxyy, r16.yzyy
        mad r18.xy, r18.xyxx, r11.wwww, r17.zwzz
        iadd r10.w, r10.w, cb2[26].y
        utof r18.z, r10.w
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.w, r18.xyzx, t13.xxxx, s13, r1.w
        sample_l_indexable(texture2darray)(float,float,float,float) r11.w, r18.xyzx, t31.yzwx, s0, l(0.000000)
        add r10.w, r10.w, r11.w
        add_sat r10.w, r10.w, l(-1.000000)
        mad r8.w, r10.w, l(0.125000), r8.w
        iadd r9.w, r9.w, l(1)
      endloop 
      mul r1.w, r8.w, r8.w
      mul r2.w, r8.w, r1.w
    endif 
  endif 
endif 
lt r1.w, l(0.000000), |r1.z|
if_nz r1.w
  lt r1.w, l(0.000000), r2.w
  if_nz r1.w
    mul r1.w, r7.y, cb2[18].w
    mul r1.w, r1.w, l(0.250000)
    if_nz cb2[23].x
      add r16.xyz, v6.xyzx, cb1[24].xyzx
      mov r16.w, l(1.000000)
      dp4 r4.w, cb2[24].xyzw, r16.xyzw
      dp4 r7.w, cb2[25].xyzw, r16.xyzw
      frc r16.x, r4.w
      frc r16.y, r7.w
      iadd r4.w, l(-1), cb2[23].x
      utof r16.z, r4.w
      sample_l_indexable(texture2darray)(float,float,float,float) r10.yzw, r16.xyzx, t20.wxyz, s2, l(0.000000)
      add r10.yzw, r10.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
      mad r10.yzw, cb2[23].yyyy, r10.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
      mul r10.yzw, r10.yyzw, cb2[18].xxyz
    else 
      mov r10.yzw, cb2[18].xxyz
    endif 
    ushr r4.w, cb2[53].x, l(16)
    ult r7.w, l(0), r4.w
    and r7.w, r6.w, r7.w
    if_nz r7.w
      iadd r4.w, r4.w, cb2[0].x
      iadd r4.w, r4.w, l(-1)
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r7.w, r4.w, l(52), t12.xxxx
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r4.w, l(68), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r4.w, l(84), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r4.w, l(132), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.xyzw, r4.w, l(148), t12.xyzw
      mad r8.z, |r1.z|, l(-0.200000), l(0.400000)
      lt r8.w, r1.z, l(0.000000)
      movc r8.z, r8.w, -r8.z, r8.z
      mad r20.xyz, r2.xyzx, r8.zzzz, v6.xyzx
      mov r20.w, l(1.000000)
      dp4 r16.x, r16.xyzw, r20.xyzw
      dp4 r16.y, r17.xyzw, r20.xyzw
      mad r8.zw, r16.xxxy, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
      add r8.zw, r19.zzzw, r8.zzzw
      mul r8.zw, r19.xxxy, r8.zzzw
      div r16.xy, r7.wwww, r18.xzxx
      add r16.zw, -r16.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
      ge r16.zw, r8.zzzw, r16.zzzw
      ge r16.xy, r16.xyxx, r8.zwzz
      or r16.xy, r16.xyxx, r16.zwzz
      or r9.w, r16.y, r16.x
      if_z r9.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r9.w, r4.w, l(28), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r4.w, l(100), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xy, r4.w, l(164), t12.xyxx
        dp4 r4.w, r16.xyzw, r20.xyzw
        mov_sat r8.zw, r8.zzzw
        mad r16.xy, r8.zwzz, r18.xzxx, r18.ywyy
        add r4.w, r17.x, r4.w
        div r4.w, r4.w, r17.y
        max r4.w, r4.w, l(0.00006104)
        and r8.z, r9.w, l(0x0000ffff)
        if_nz cb2[58].y
          mov r17.x, -r8.x
          utof r18.z, r8.z
          mov r17.y, r9.x
          mov r17.z, r8.x
          mov r8.w, l(0)
          mov r9.w, l(0)
          loop 
            ige r11.w, r9.w, l(8)
            breakc_nz r11.w
            dp2 r19.x, icb[r9.w + 0].yxyy, r17.xyxx
            dp2 r19.y, icb[r9.w + 0].yxyy, r17.yzyy
            mad r18.xy, r19.xyxx, r7.wwww, r16.xyxx
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r11.w, r18.xyzx, t9.xxxx, s13, r4.w
            mad r8.w, r11.w, l(0.125000), r8.w
            iadd r9.w, r9.w, l(1)
          endloop 
        else 
          utof r16.z, r8.z
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r8.w, r16.xyzx, t9.xxxx, s13, r4.w
        endif 
        mul r4.w, r8.w, r8.w
        mul r4.w, r8.w, r4.w
      else 
        mov r4.w, l(1.000000)
      endif 
      mul r2.w, r2.w, r4.w
    else 
      and r4.w, cb2[53].x, l(0x0000ffff)
      ult r7.w, l(0), r4.w
      not r8.z, r6.w
      and r7.w, r7.w, r8.z
      if_nz r7.w
        iadd r4.w, r4.w, cb2[0].x
        iadd r4.w, r4.w, l(-1)
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r7.w, r4.w, l(52), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r4.w, l(68), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r4.w, l(84), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r4.w, l(132), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.xyzw, r4.w, l(148), t12.xyzw
        mad r8.z, |r1.z|, l(-0.200000), l(0.400000)
        lt r8.w, r1.z, l(0.000000)
        movc r8.z, r8.w, -r8.z, r8.z
        mad r20.xyz, r2.xyzx, r8.zzzz, v6.xyzx
        mov r20.w, l(1.000000)
        dp4 r16.x, r16.xyzw, r20.xyzw
        dp4 r16.y, r17.xyzw, r20.xyzw
        mad r8.zw, r16.xxxy, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
        add r8.zw, r19.zzzw, r8.zzzw
        mul r8.zw, r19.xxxy, r8.zzzw
        div r16.xy, r7.wwww, r18.xzxx
        add r16.zw, -r16.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
        ge r16.zw, r8.zzzw, r16.zzzw
        ge r16.xy, r16.xyxx, r8.zwzz
        or r16.xy, r16.xyxx, r16.zwzz
        or r9.w, r16.y, r16.x
        if_z r9.w
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r9.w, r4.w, l(28), t12.xxxx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r4.w, l(100), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xy, r4.w, l(164), t12.xyxx
          dp4 r4.w, r16.xyzw, r20.xyzw
          mov_sat r8.zw, r8.zzzw
          mad r16.xy, r8.zwzz, r18.xzxx, r18.ywyy
          add r4.w, r17.x, r4.w
          div r4.w, r4.w, r17.y
          max r4.w, r4.w, l(0.00006104)
          and r8.z, r9.w, l(0x0000ffff)
          if_nz cb2[58].y
            mov r17.x, -r8.x
            utof r18.z, r8.z
            mov r17.y, r9.x
            mov r17.z, r8.x
            mov r8.w, l(0)
            mov r9.w, l(0)
            loop 
              ige r11.w, r9.w, l(8)
              breakc_nz r11.w
              dp2 r19.x, icb[r9.w + 0].yxyy, r17.xyxx
              dp2 r19.y, icb[r9.w + 0].yxyy, r17.yzyy
              mad r18.xy, r19.xyxx, r7.wwww, r16.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r11.w, r18.xyzx, t9.xxxx, s13, r4.w
              mad r8.w, r11.w, l(0.125000), r8.w
              iadd r9.w, r9.w, l(1)
            endloop 
          else 
            utof r16.z, r8.z
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r8.w, r16.xyzx, t9.xxxx, s13, r4.w
          endif 
          mul r4.w, r8.w, r8.w
          mul r4.w, r8.w, r4.w
        else 
          mov r4.w, l(1.000000)
        endif 
        mul r2.w, r2.w, r4.w
      endif 
    endif 
    mad r4.w, -r1.x, l(0.500000), l(1.000000)
    mad r4.w, -|r1.z|, r4.w, l(1.000000)
    mul r4.w, r4.w, r4.w
    mad r4.w, -r4.w, l(0.620000), l(0.620000)
    add r4.w, -|r1.z|, r4.w
    mad r4.w, r7.z, r4.w, |r1.z|
    mul r4.w, r2.w, r4.w
    lt r7.w, l(0.000000), r1.z
    mad r16.xyz, r4.wwww, r10.zwyz, r13.xyzx
    mov_sat r1.z, r1.z
    mad r17.xyz, -v6.xyzx, r5.wwww, cb2[17].xyzx
    dp3 r4.w, r17.xyzx, r17.xyzx
    rsq r4.w, r4.w
    mul r17.xyz, r4.wwww, r17.xyzx
    dp3 r4.w, r17.xyzx, r6.xyzx
    dp3 r5.w, r2.xyzx, r17.xyzx
    mad r8.z, |r5.w|, r7.y, -|r5.w|
    mad r5.w, |r5.w|, r8.z, l(1.000000)
    mad r8.z, r1.z, r0.w, r1.y
    mul r5.w, r5.w, r5.w
    mul r5.w, r8.z, r5.w
    rcp r5.w, r5.w
    mul r1.z, r1.w, r1.z
    mul r1.z, r1.z, r5.w
    mul r1.z, r2.w, r1.z
    mad r17.yzw, r1.zzzz, r10.yyzw, r15.xxyz
    add_sat r1.w, -r4.w, l(1.000000)
    mul r2.w, r1.w, r1.w
    mul r2.w, r2.w, r2.w
    mul r1.w, r1.w, r2.w
    mul r1.z, r1.w, r1.z
    mad r10.yzw, r1.zzzz, r10.yyzw, r14.xxyz
    mov r16.w, r13.z
    mov r13.w, r16.z
    movc r18.xyzw, r7.wwww, r16.zxyw, r13.zxyw
    mov r13.zw, r10.yyyz
    mov r16.zw, r14.xxxy
    movc r16.xyzw, r7.wwww, r13.xyzw, r16.xyzw
    mov r17.x, r10.w
    mov r15.w, r14.z
    movc r15.xyzw, r7.wwww, r17.yzwx, r15.xyzw
    mov r13.z, r18.w
    mov r13.xy, r16.xyxx
    mov r14.xy, r16.zwzz
    mov r14.z, r15.w
  else 
    mov r18.xyz, r13.zxyz
  endif 
else 
  mov r18.xyz, r13.zxyz
endif 
mov r16.x, -r8.x
not r1.z, r6.w
mad r1.x, -r1.x, l(0.500000), l(1.000000)
mov r17.xy, l(0,0,0,0)
mov r19.w, l(0)
mov r20.xyz, v6.xyzx
mov r20.w, l(1.000000)
mov r21.w, l(1.000000)
mov r16.z, r8.x
mov r22.w, l(1.000000)
mov r23.z, l(1.000000)
mov r24.w, l(1.000000)
mov r16.yw, r9.xxxx
mov r8.y, r16.w
mov r25.w, l(1.000000)
mov r9.y, r16.x
mov r9.z, r8.x
mov r26.w, l(1.000000)
mov r27.x, r9.x
mov r27.y, r16.x
mov r27.z, r8.x
mov r28.x, r9.x
mov r28.y, r16.x
mov r28.z, r8.x
mov r29.x, r9.x
mov r29.y, r16.x
mov r29.z, r8.x
mov r10.yzw, r18.xxyz
mov r30.xyz, r13.zxyz
mov r31.xyz, r14.xyzx
mov r32.xyz, r15.xyzx
mov r1.w, cb2[58].y
mov r2.w, l(0)
loop 
  uge r4.w, r2.w, cb2[0].x
  breakc_nz r4.w
  ushr r17.z, r2.w, l(5)
  iadd r19.xyz, r12.xyzx, r17.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r4.w, r19.xyzw, t6.yzwx
  mov r19.xyz, r10.yzwy
  mov r33.xyz, r30.xyzx
  mov r34.xyz, r31.xyzx
  mov r35.xyz, r32.xyzx
  mov r5.w, r1.w
  mov r7.w, r4.w
  loop 
    breakc_z r7.w
    firstbit_lo r8.z, r7.w
    ishl r8.w, l(1), r8.z
    and r9.w, r7.w, r8.w
    if_nz r9.w
      xor r7.w, r7.w, r8.w
      iadd r8.z, r2.w, r8.z
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r36.xyzw, r8.z, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r37.xy, r8.z, l(16), t11.xyxx
      add r36.xyz, r36.xyzx, -v6.xyzx
      mov r37.z, r36.w
      lt r36.xyz, |r36.xyzx|, r37.zxyz
      and r8.w, r36.y, r36.x
      and r8.w, r36.z, r8.w
      if_nz r8.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r8.z, l(0), t12.wxyz
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r8.z, l(16), t12.zxyw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r8.z, l(32), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r8.z, l(48), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r8.z, l(64), t12.yzwx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r8.z, l(80), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r8.z, l(96), t12.yzwx
        ubfe r8.w, l(3), l(24), r37.w
        switch r8.w
          case l(4)
          lt r8.w, l(0.000000), r42.x
          mov r43.xy, r41.zwzz
          mov r43.z, r42.w
          mad r44.xyz, -r43.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r36.yzwy
          add r45.xyz, r44.xyzx, -v6.xyzx
          dp3 r9.w, r43.xyzx, r45.xyzx
          div_sat r11.w, -r9.w, r42.x
          mad r46.xyz, r11.wwww, r43.xyzx, r44.xyzx
          movc r46.xyz, r8.wwww, r46.xyzx, r36.yzwy
          add r46.xyz, r46.xyzx, -v6.xyzx
          dp3 r12.w, r46.xyzx, r46.xyzx
          rsq r13.w, r12.w
          mul r46.xyz, r13.wwww, r46.xyzx
          dp3 r13.w, r2.xyzx, r46.xyzx
          lt r14.w, l(0.000000), |r13.w|
          if_nz r14.w
            sqrt r14.w, r12.w
            mul r15.w, r39.x, r39.x
            div r12.w, r15.w, r12.w
            min r12.w, r12.w, l(1.000000)
            mad_sat r17.zw, r14.wwww, r38.xxxz, r38.yyyw
            mul r46.xy, r17.zwzz, r17.zwzz
            mad r17.zw, r17.zzzw, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
            mul r17.zw, r17.zzzw, r46.xxxy
            mul r12.w, r12.w, r17.z
            mul r12.w, r17.w, r12.w
            lt r14.w, l(0.000000), r12.w
            if_nz r14.w
              ubfe r14.w, l(3), l(27), r37.w
              ine r14.w, r14.w, l(1)
              if_nz r14.w
                mad r14.w, |r13.w|, l(-0.200000), l(0.400000)
                lt r15.w, r13.w, l(0.000000)
                movc r14.w, r15.w, -r14.w, r14.w
                mad r46.xyz, r2.xyzx, r14.wwww, v6.xyzx
                add r46.xyz, -r40.xyzx, r46.xyzx
                max r14.w, |r46.z|, |r46.y|
                max r14.w, r14.w, |r46.x|
                div r14.w, r41.x, r14.w
                add r14.w, r41.y, r14.w
                dp3 r15.w, r46.xyzx, r46.xyzx
                rsq r15.w, r15.w
                max r14.w, r14.w, l(0.00006104)
                and r17.z, r37.w, l(0x0000ffff)
                utof r47.w, r17.z
                mov r17.zw, l(0,0,0,0)
                loop 
                  ige r18.w, r17.w, l(8)
                  breakc_nz r18.w
                  dp2 r48.y, icb[r17.w + 0].yxyy, r16.xyxx
                  dp2 r48.z, icb[r17.w + 0].yxyy, r16.yzyy
                  mul r48.yz, r39.yyyy, r48.yyzy
                  mul r48.x, r10.x, r48.y
                  mul r48.w, r7.x, r48.y
                  mad r47.xyz, r46.xyzx, r15.wwww, r48.xzwx
                  sample_c_lz_indexable(texturecubearray)(float,float,float,float) r18.w, r47.xyzw, t10.xxxx, s13, r14.w
                  mad r17.z, r18.w, l(0.125000), r17.z
                  iadd r17.w, r17.w, l(1)
                endloop 
              else 
                mov r17.z, l(1.000000)
              endif 
              mul r12.w, r12.w, r17.z
              lt r14.w, l(0.000000), r12.w
              if_nz r14.w
                mul r14.w, r7.y, r37.x
                mul r14.w, r14.w, l(0.250000)
                dp3 r15.w, r43.xyzx, r11.xyzx
                dp3 r17.w, r11.xyzx, r45.xyzx
                mad r18.w, -r15.w, r15.w, r42.x
                mad r9.w, r15.w, r17.w, -r9.w
                div_sat r9.w, r9.w, r18.w
                div r15.w, r18.w, r42.x
                mul r15.w, r15.w, l(10.000000)
                min r15.w, r15.w, l(1.000000)
                add r9.w, -r11.w, r9.w
                mad r9.w, r15.w, r9.w, r11.w
                mad r43.xyz, r9.wwww, r43.xyzx, r44.xyzx
                movc r43.xyz, r8.wwww, r43.xyzx, r36.yzwy
                add r43.xyz, r43.xyzx, -v6.xyzx
                dp3 r8.w, r43.xyzx, r43.xyzx
                rsq r8.w, r8.w
                mul r44.xyz, r8.wwww, r43.xyzx
                ubfe r9.w, l(4), l(16), r37.w
                ult r11.w, l(0), r9.w
                and r11.w, r6.w, r11.w
                if_nz r11.w
                  iadd r9.w, r9.w, cb2[0].x
                  iadd r9.w, r9.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r11.w, r9.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xyzw, r9.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r46.xyzw, r9.w, l(116), t12.xyzw
                  mad r15.w, |r13.w|, l(-0.200000), l(0.400000)
                  lt r17.w, r13.w, l(0.000000)
                  movc r15.w, r17.w, -r15.w, r15.w
                  mad r21.xyz, r2.xyzx, r15.wwww, v6.xyzx
                  dp4 r15.w, r45.xyzw, r21.xyzw
                  dp4 r17.w, r46.xyzw, r21.xyzw
                  lt r18.w, r17.w, r15.w
                  if_z r18.w
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xyzw, r9.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r46.xyzw, r9.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r47.xyzw, r9.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r48.xyzw, r9.w, l(148), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r49.xy, r9.w, l(164), t12.xyxx
                    dp4 r45.x, r45.xyzw, r21.xyzw
                    dp4 r45.y, r46.xyzw, r21.xyzw
                    div r21.xy, r45.xyxx, r17.wwww
                    mad r21.xy, r21.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r21.xy, r48.zwzz, r21.xyxx
                    mul r21.xy, r48.xyxx, r21.xyxx
                    div r45.xy, r11.wwww, r47.xzxx
                    add r45.zw, -r45.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                    ge r45.zw, r21.xxxy, r45.zzzw
                    ge r45.xy, r45.xyxx, r21.xyxx
                    or r45.xy, r45.xyxx, r45.zwzz
                    or r21.z, r45.y, r45.x
                    mov_sat r21.xy, r21.xyxx
                    mad r45.xy, r21.xyxx, r47.xzxx, r47.ywyy
                    mul r21.x, r17.w, r49.y
                    mad r15.w, r49.x, r17.w, r15.w
                    div r15.w, r15.w, r21.x
                  else 
                    mov r21.z, l(-1)
                  endif 
                  or r17.w, r18.w, r21.z
                  if_z r17.w
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r9.w, r9.w, l(28), t12.xxxx
                    max r15.w, r15.w, l(0.00006104)
                    and r9.w, r9.w, l(0x0000ffff)
                    if_nz r5.w
                      utof r21.z, r9.w
                      mov r17.w, l(0)
                      mov r18.w, l(0)
                      loop 
                        ige r23.w, r18.w, l(8)
                        breakc_nz r23.w
                        dp2 r46.x, icb[r18.w + 0].yxyy, r16.xwxx
                        dp2 r46.y, icb[r18.w + 0].xyxx, r8.xyxx
                        mad r21.xy, r46.xyxx, r11.wwww, r45.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.x, r21.xyzx, t9.xxxx, s13, r15.w
                        mad r17.w, r21.x, l(0.125000), r17.w
                        iadd r18.w, r18.w, l(1)
                      endloop 
                    else 
                      utof r45.z, r9.w
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r17.w, r45.xyzx, t9.xxxx, s13, r15.w
                    endif 
                    mul r9.w, r17.w, r17.w
                    mul r9.w, r17.w, r9.w
                  else 
                    mov r9.w, l(1.000000)
                  endif 
                  mul r12.w, r9.w, r12.w
                else 
                  ubfe r9.w, l(4), l(20), r37.w
                  ult r11.w, l(0), r9.w
                  and r11.w, r1.z, r11.w
                  if_nz r11.w
                    iadd r9.w, r9.w, cb2[0].x
                    iadd r9.w, r9.w, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r11.w, r9.w, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xyzw, r9.w, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r46.xyzw, r9.w, l(116), t12.xyzw
                    mad r15.w, |r13.w|, l(-0.200000), l(0.400000)
                    lt r18.w, r13.w, l(0.000000)
                    movc r15.w, r18.w, -r15.w, r15.w
                    mad r22.xyz, r2.xyzx, r15.wwww, v6.xyzx
                    dp4 r15.w, r45.xyzw, r22.xyzw
                    dp4 r18.w, r46.xyzw, r22.xyzw
                    lt r21.x, r18.w, r15.w
                    if_z r21.x
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xyzw, r9.w, l(68), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r46.xyzw, r9.w, l(84), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r47.xyzw, r9.w, l(132), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r48.xyzw, r9.w, l(148), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r21.yz, r9.w, l(164), t12.xxyx
                      dp4 r45.x, r45.xyzw, r22.xyzw
                      dp4 r45.y, r46.xyzw, r22.xyzw
                      div r22.xy, r45.xyxx, r18.wwww
                      mad r22.xy, r22.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                      add r22.xy, r48.zwzz, r22.xyxx
                      mul r22.xy, r48.xyxx, r22.xyxx
                      div r45.xy, r11.wwww, r47.xzxx
                      add r45.zw, -r45.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                      ge r45.zw, r22.xxxy, r45.zzzw
                      ge r45.xy, r45.xyxx, r22.xyxx
                      or r45.xy, r45.xyxx, r45.zwzz
                      or r22.z, r45.y, r45.x
                      mov_sat r22.xy, r22.xyxx
                      mad r45.xy, r22.xyxx, r47.xzxx, r47.ywyy
                      mul r21.z, r18.w, r21.z
                      mad r15.w, r21.y, r18.w, r15.w
                      div r15.w, r15.w, r21.z
                    else 
                      mov r22.z, l(-1)
                    endif 
                    or r18.w, r21.x, r22.z
                    if_z r18.w
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r9.w, r9.w, l(28), t12.xxxx
                      max r15.w, r15.w, l(0.00006104)
                      and r9.w, r9.w, l(0x0000ffff)
                      if_nz r5.w
                        utof r21.z, r9.w
                        mov r18.w, l(0)
                        mov r22.x, l(0)
                        loop 
                          ige r22.y, r22.x, l(8)
                          breakc_nz r22.y
                          dp2 r46.x, icb[r22.x + 0].xyxx, r9.xyxx
                          dp2 r46.y, icb[r22.x + 0].yxyy, r9.xzxx
                          mad r21.xy, r46.xyxx, r11.wwww, r45.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.x, r21.xyzx, t9.xxxx, s13, r15.w
                          mad r18.w, r21.x, l(0.125000), r18.w
                          iadd r22.x, r22.x, l(1)
                        endloop 
                      else 
                        utof r45.z, r9.w
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r18.w, r45.xyzx, t9.xxxx, s13, r15.w
                      endif 
                      mul r9.w, r18.w, r18.w
                      mul r9.w, r18.w, r9.w
                    else 
                      mov r9.w, l(1.000000)
                    endif 
                    mul r12.w, r9.w, r12.w
                  endif 
                endif 
                mad r9.w, -|r13.w|, r1.x, l(1.000000)
                mul r9.w, r9.w, r9.w
                mad r9.w, -r9.w, l(0.620000), l(0.620000)
                add r9.w, -|r13.w|, r9.w
                mad r9.w, r7.z, r9.w, |r13.w|
                mul r9.w, r12.w, r9.w
                mov r37.x, r36.x
                lt r11.w, l(0.000000), r13.w
                mad r21.xyz, r9.wwww, r37.xyzx, r19.xyzx
                dp3_sat r13.w, r2.xyzx, r44.xyzx
                mad r22.xyz, r43.xyzx, r8.wwww, r6.xyzx
                dp3 r8.w, r22.xyzx, r22.xyzx
                rsq r8.w, r8.w
                mul r22.xyz, r8.wwww, r22.xyzx
                dp3 r8.w, r22.xyzx, r6.xyzx
                dp3 r15.w, r2.xyzx, r22.xyzx
                mad r22.x, |r15.w|, r7.y, -|r15.w|
                mad r15.w, |r15.w|, r22.x, l(1.000000)
                mad r22.x, r13.w, r0.w, r1.y
                mul r15.w, r15.w, r15.w
                mul r15.w, r22.x, r15.w
                rcp r15.w, r15.w
                mul r13.w, r14.w, r13.w
                mul r13.w, r13.w, r15.w
                mul r12.w, r12.w, r13.w
                mad r22.xyz, r12.wwww, r37.xyzx, r35.xyzx
                add_sat r8.w, -r8.w, l(1.000000)
                mul r13.w, r8.w, r8.w
                mul r13.w, r13.w, r13.w
                mul r8.w, r8.w, r13.w
                mul r8.w, r8.w, r12.w
                mad r43.xyz, r8.wwww, r37.xyzx, r34.xyzx
                mad r44.xyz, r9.wwww, r37.xyzx, r33.xyzx
                movc r19.xyz, r11.wwww, r21.xyzx, r19.xyzx
                movc r33.xyz, r11.wwww, r33.xyzx, r44.xyzx
                movc r34.xyz, r11.wwww, r43.xyzx, r34.xyzx
                movc r35.xyz, r11.wwww, r22.xyzx, r35.xyzx
              endif 
            endif 
          endif 
          break 
          case l(2)
          mov r21.xy, r39.zwzz
          mov r21.z, r40.w
          add r21.xyz, r21.xyzx, -v6.xyzx
          dp3 r8.w, r21.xyzx, r21.xyzx
          rsq r8.w, r8.w
          mul r22.xyz, r8.wwww, r21.xyzx
          dp3 r9.w, r2.xyzx, r22.xyzx
          lt r11.w, l(0.000000), |r9.w|
          if_nz r11.w
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r8.z, l(112), t12.yzwx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r8.z, l(128), t12.zxyw
            mov r45.xyz, r43.xyzx
            mov r45.w, r44.y
            dp4 r11.w, r45.xyzw, r20.xyzw
            lt r12.w, r11.w, l(1.000000)
            if_nz r12.w
              mov r22.xyz, l(1.000000,1.000000,1.000000,0)
              mov r12.w, l(0)
            else 
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r46.xyzw, r8.z, l(172), t12.yzwx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r47.xyzw, r8.z, l(188), t12.wxyz
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r48.xyzw, r8.z, l(204), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.w, r8.z, l(236), t12.xxxx
              add r49.xyz, r36.yzwy, -v6.xyzx
              mul r14.w, r39.x, r39.x
              dp3 r15.w, r49.xyzx, r49.xyzx
              div r14.w, r14.w, r15.w
              min r14.w, r14.w, l(1.000000)
              mad_sat r38.xy, r11.wwww, r38.xzxx, r38.ywyy
              mul r38.zw, r38.xxxy, r38.xxxy
              mad r38.xy, r38.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
              mul r38.xy, r38.xyxx, r38.zwzz
              mul r14.w, r14.w, r38.x
              mul r14.w, r38.y, r14.w
              mov r40.w, r41.x
              dp4 r38.x, r40.xyzw, r20.xyzw
              mov r49.xyz, r41.yzwy
              mov r49.w, r42.w
              dp4 r38.y, r49.xyzw, r20.xyzw
              div r23.xy, r38.xyxx, r11.wwww
              lt r11.w, r46.w, l(0.00048828)
              if_nz r11.w
                mov r47.y, r48.x
                mad_sat r38.xy, |r23.xyxx|, r47.zwzz, r47.xyxx
                mul r38.zw, r38.xxxy, r38.xxxy
                mad r38.xy, r38.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
                mul r38.xy, r38.xyxx, r38.zwzz
                mul r11.w, r38.y, r38.x
              else 
                mov r46.w, r47.y
                mul_sat r38.xyzw, |r23.yyxx|, r46.xyzw
                log r38.xyzw, r38.xyzw
                mul r38.xyzw, r38.xyzw, r47.xxxx
                exp r38.xyzw, r38.xyzw
                add r38.xy, r38.zwzz, r38.xyxx
                log r38.xy, r38.xyxx
                mul r38.xy, r38.xyxx, r48.xxxx
                exp r38.xy, r38.xyxx
                mul r15.w, r38.x, r47.z
                mad r23.w, r47.w, r38.y, l(-1.000000)
                mad r15.w, r47.w, r38.y, -r15.w
                div_sat r15.w, r23.w, r15.w
                mul r23.w, r15.w, r15.w
                mad r15.w, r15.w, l(-2.000000), l(3.000000)
                mul r11.w, r15.w, r23.w
              endif 
              mul r12.w, r11.w, r14.w
              and r11.w, r13.w, l(255)
              if_nz r11.w
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyz, r8.z, l(220), t12.xyzx
                dp3 r13.w, r48.yzwy, r23.xyzx
                dp3 r14.w, r38.xyzx, r23.xyzx
                frc r38.x, r13.w
                frc r38.y, r14.w
                iadd r11.w, r11.w, l(-1)
                utof r38.z, r11.w
                sample_l_indexable(texture2darray)(float,float,float,float) r22.xyz, r38.xyzx, t20.xyzw, s2, l(0.000000)
              else 
                mov r22.xyz, l(1.000000,1.000000,1.000000,0)
              endif 
            endif 
            mov r36.yz, r37.yyzy
            mul r22.xyz, r22.xyzx, r36.xyzx
            lt r11.w, l(0.000000), r12.w
            if_nz r11.w
              ubfe r11.w, l(3), l(27), r37.w
              ine r11.w, r11.w, l(1)
              if_nz r11.w
                mad r11.w, |r9.w|, l(-0.200000), l(0.400000)
                lt r13.w, r9.w, l(0.000000)
                movc r11.w, r13.w, -r11.w, r11.w
                mad r24.xyz, r2.xyzx, r11.wwww, v6.xyzx
                mov r43.xyz, r42.xyzx
                dp4 r11.w, r43.xyzw, r24.xyzw
                dp4 r13.w, r45.xyzw, r24.xyzw
                ge r14.w, r13.w, r11.w
                if_nz r14.w
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.y, r8.z, l(144), t12.xxxx
                  mov r40.w, r41.x
                  dp4 r23.x, r40.xyzw, r24.xyzw
                  mov r42.xyz, r41.yzwy
                  dp4 r23.y, r42.xyzw, r24.xyzw
                  div r23.xy, r23.xyxx, r13.wwww
                  mad_sat r23.xy, r23.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  mad r24.xy, r23.xyxx, r44.zwzz, r44.xyxx
                  div r8.z, r11.w, r13.w
                  max r8.z, r8.z, l(0.00006104)
                  and r11.w, r37.w, l(0x0000ffff)
                  if_nz r5.w
                    utof r36.z, r11.w
                    mov r13.w, l(0)
                    mov r14.w, l(0)
                    loop 
                      ige r15.w, r14.w, l(8)
                      breakc_nz r15.w
                      dp2 r23.x, icb[r14.w + 0].xyxx, r27.xyxx
                      dp2 r23.y, icb[r14.w + 0].yxyy, r27.xzxx
                      mad r36.xy, r23.xyxx, r39.yyyy, r24.xyxx
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r15.w, r36.xyzx, t9.xxxx, s13, r8.z
                      mad r13.w, r15.w, l(0.125000), r13.w
                      iadd r14.w, r14.w, l(1)
                    endloop 
                  else 
                    utof r24.z, r11.w
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r13.w, r24.xyzx, t9.xxxx, s13, r8.z
                  endif 
                  mul r8.z, r13.w, r13.w
                  mul r8.z, r13.w, r8.z
                else 
                  mov r8.z, l(1.000000)
                endif 
              else 
                mov r8.z, l(1.000000)
              endif 
              mul r8.z, r8.z, r12.w
              lt r11.w, l(0.000000), r8.z
              if_nz r11.w
                mul r11.w, r7.y, r37.x
                mul r11.w, r11.w, l(0.250000)
                ubfe r12.w, l(4), l(16), r37.w
                ult r14.w, l(0), r12.w
                and r14.w, r6.w, r14.w
                if_nz r14.w
                  iadd r12.w, r12.w, cb2[0].x
                  iadd r12.w, r12.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.w, r12.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r12.w, l(68), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r12.w, l(84), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r12.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r12.w, l(116), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r12.w, l(132), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r12.w, l(148), t12.xyzw
                  mad r15.w, |r9.w|, l(-0.200000), l(0.400000)
                  lt r23.x, r9.w, l(0.000000)
                  movc r15.w, r23.x, -r15.w, r15.w
                  mad r25.xyz, r2.xyzx, r15.wwww, v6.xyzx
                  dp4 r23.x, r36.xyzw, r25.xyzw
                  dp4 r23.y, r38.xyzw, r25.xyzw
                  dp4 r15.w, r39.xyzw, r25.xyzw
                  dp4 r23.w, r40.xyzw, r25.xyzw
                  lt r24.x, r23.w, r15.w
                  div r23.xy, r23.xyxx, r23.wwww
                  mad r23.xy, r23.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r23.xy, r42.zwzz, r23.xyxx
                  mul r23.xy, r42.xyxx, r23.xyxx
                  div r24.yz, r14.wwww, r41.xxzx
                  add r25.xy, -r24.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
                  ge r25.xy, r23.xyxx, r25.xyxx
                  ge r24.yz, r24.yyzy, r23.xxyx
                  or r24.yz, r24.yyzy, r25.xxyx
                  or r24.y, r24.z, r24.y
                  or r24.x, r24.x, r24.y
                  if_z r24.x
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r24.x, r12.w, l(28), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r24.yz, r12.w, l(164), t12.xxyx
                    mov_sat r23.xy, r23.xyxx
                    mad r25.xy, r23.xyxx, r41.xzxx, r41.ywyy
                    mul r12.w, r23.w, r24.z
                    mad r15.w, r24.y, r23.w, r15.w
                    div r12.w, r15.w, r12.w
                    max r12.w, r12.w, l(0.00006104)
                    and r15.w, r24.x, l(0x0000ffff)
                    if_nz r5.w
                      utof r24.z, r15.w
                      mov r23.xy, l(0,0,0,0)
                      loop 
                        ige r23.w, r23.y, l(8)
                        breakc_nz r23.w
                        dp2 r36.x, icb[r23.y + 0].xyxx, r28.xyxx
                        dp2 r36.y, icb[r23.y + 0].yxyy, r28.xzxx
                        mad r24.xy, r36.xyxx, r14.wwww, r25.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.w, r24.xyzx, t9.xxxx, s13, r12.w
                        mad r23.x, r23.w, l(0.125000), r23.x
                        iadd r23.y, r23.y, l(1)
                      endloop 
                    else 
                      utof r25.z, r15.w
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.x, r25.xyzx, t9.xxxx, s13, r12.w
                    endif 
                    mul r12.w, r23.x, r23.x
                    mul r12.w, r23.x, r12.w
                  else 
                    mov r12.w, l(1.000000)
                  endif 
                  mul r8.z, r8.z, r12.w
                else 
                  ubfe r12.w, l(4), l(20), r37.w
                  ult r14.w, l(0), r12.w
                  and r14.w, r1.z, r14.w
                  if_nz r14.w
                    iadd r12.w, r12.w, cb2[0].x
                    iadd r12.w, r12.w, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.w, r12.w, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r12.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r12.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r12.w, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r12.w, l(116), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r12.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r12.w, l(148), t12.xyzw
                    mad r15.w, |r9.w|, l(-0.200000), l(0.400000)
                    lt r23.y, r9.w, l(0.000000)
                    movc r15.w, r23.y, -r15.w, r15.w
                    mad r26.xyz, r2.xyzx, r15.wwww, v6.xyzx
                    dp4 r24.x, r36.xyzw, r26.xyzw
                    dp4 r24.y, r37.xyzw, r26.xyzw
                    dp4 r15.w, r38.xyzw, r26.xyzw
                    dp4 r23.y, r39.xyzw, r26.xyzw
                    lt r23.w, r23.y, r15.w
                    div r24.xy, r24.xyxx, r23.yyyy
                    mad r24.xy, r24.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r24.xy, r41.zwzz, r24.xyxx
                    mul r24.xy, r41.xyxx, r24.xyxx
                    div r25.xy, r14.wwww, r40.xzxx
                    add r26.xy, -r25.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                    ge r26.xy, r24.xyxx, r26.xyxx
                    ge r25.xy, r25.xyxx, r24.xyxx
                    or r25.xy, r25.xyxx, r26.xyxx
                    or r24.z, r25.y, r25.x
                    or r23.w, r23.w, r24.z
                    if_z r23.w
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.w, r12.w, l(28), t12.xxxx
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r25.xy, r12.w, l(164), t12.xyxx
                      mov_sat r24.xy, r24.xyxx
                      mad r24.xy, r24.xyxx, r40.xzxx, r40.ywyy
                      mul r12.w, r23.y, r25.y
                      mad r15.w, r25.x, r23.y, r15.w
                      div r12.w, r15.w, r12.w
                      max r12.w, r12.w, l(0.00006104)
                      and r15.w, r23.w, l(0x0000ffff)
                      if_nz r5.w
                        utof r25.z, r15.w
                        mov r23.yw, l(0,0,0,0)
                        loop 
                          ige r26.x, r23.w, l(8)
                          breakc_nz r26.x
                          dp2 r26.x, icb[r23.w + 0].xyxx, r29.xyxx
                          dp2 r26.y, icb[r23.w + 0].yxyy, r29.xzxx
                          mad r25.xy, r26.xyxx, r14.wwww, r24.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r25.x, r25.xyzx, t9.xxxx, s13, r12.w
                          mad r23.y, r25.x, l(0.125000), r23.y
                          iadd r23.w, r23.w, l(1)
                        endloop 
                      else 
                        utof r24.z, r15.w
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.y, r24.xyzx, t9.xxxx, s13, r12.w
                      endif 
                      mul r12.w, r23.y, r23.y
                      mul r12.w, r23.y, r12.w
                    else 
                      mov r12.w, l(1.000000)
                    endif 
                    mul r8.z, r8.z, r12.w
                  endif 
                endif 
                mad r12.w, -|r9.w|, r1.x, l(1.000000)
                mul r12.w, r12.w, r12.w
                mad r12.w, -r12.w, l(0.620000), l(0.620000)
                add r12.w, -|r9.w|, r12.w
                mad r12.w, r7.z, r12.w, |r9.w|
                mul r12.w, r8.z, r12.w
                lt r14.w, l(0.000000), r9.w
                mad r24.xyz, r12.wwww, r22.xyzx, r19.xyzx
                mov_sat r9.w, r9.w
                mad r21.xyz, r21.xyzx, r8.wwww, r6.xyzx
                dp3 r8.w, r21.xyzx, r21.xyzx
                rsq r8.w, r8.w
                mul r21.xyz, r8.wwww, r21.xyzx
                dp3 r8.w, r21.xyzx, r6.xyzx
                dp3 r15.w, r2.xyzx, r21.xyzx
                mad r21.x, |r15.w|, r7.y, -|r15.w|
                mad r15.w, |r15.w|, r21.x, l(1.000000)
                mad r21.x, r9.w, r0.w, r1.y
                mul r15.w, r15.w, r15.w
                mul r15.w, r21.x, r15.w
                rcp r15.w, r15.w
                mul r9.w, r11.w, r9.w
                mul r9.w, r9.w, r15.w
                mul r8.z, r8.z, r9.w
                mad r21.xyz, r8.zzzz, r22.xyzx, r35.xyzx
                add_sat r8.w, -r8.w, l(1.000000)
                mul r9.w, r8.w, r8.w
                mul r9.w, r9.w, r9.w
                mul r8.w, r8.w, r9.w
                mul r8.z, r8.w, r8.z
                mad r25.xyz, r8.zzzz, r22.xyzx, r34.xyzx
                mad r22.xyz, r12.wwww, r22.xyzx, r33.xyzx
                movc r19.xyz, r14.wwww, r24.xyzx, r19.xyzx
                movc r33.xyz, r14.wwww, r33.xyzx, r22.xyzx
                movc r34.xyz, r14.wwww, r25.xyzx, r34.xyzx
                movc r35.xyz, r14.wwww, r21.xyzx, r35.xyzx
              endif 
            endif 
          endif 
          break 
          default 
          break 
        endswitch 
      endif 
    endif 
  endloop 
  mov r10.yzw, r19.xxyz
  mov r30.xyz, r33.xyzx
  mov r31.xyz, r34.xyzx
  mov r32.xyz, r35.xyzx
  iadd r2.w, r2.w, l(32)
endloop 
mul r1.xyz, r5.xyzx, r30.xyzx
mad r0.xyz, r10.yzwy, r0.xyzx, r1.xyzx
add r1.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r1.xyz, r1.xyzx, r31.xyzx
mad r1.xyz, r32.xyzx, r4.xyzx, r1.xyzx
add r0.xyz, r0.xyzx, r1.xyzx
lt r0.w, l(0.000000), cb2[9].z
if_nz r0.w
  dp3 r0.w, v6.xyzx, v6.xyzx
  rsq r1.x, r0.w
  mul r1.xyz, r1.xxxx, v6.xyzx
  sqrt r0.w, r0.w
  lt r1.w, l(0.000000), cb2[13].w
  if_nz r1.w
    mad r2.xy, r0.wwww, cb2[15].xyxx, cb2[14].zwzz
    mul r2.xy, r2.xyxx, cb2[16].xyxx
    lt r1.w, l(0.010000), |v6.z|
    mul r2.zw, v6.zzzz, cb2[15].zzzw
    mul r4.xy, r2.zwzz, l(-1.442695, -1.442695, 0.000000, 0.000000)
    exp r4.xy, r4.xyxx
    add r4.xy, -r4.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    div r2.zw, r4.xxxy, r2.zzzw
    mul r2.zw, r2.zzzw, r2.xxxy
    movc r2.xy, r1.wwww, r2.zwzz, r2.xyxx
    mul r2.xzw, r2.xxxx, cb2[12].xxyz
    exp r2.xzw, r2.xxzw
    mul r4.xyz, r2.yyyy, cb2[12].xyzx
    exp r4.xyz, r4.xyzx
    add r4.xyz, -r2.xzwx, r4.xyzx
    mad r2.xyz, cb2[13].wwww, r4.xyzx, r2.xzwx
  else 
    mad r1.w, r0.w, cb2[15].x, cb2[14].z
    mul r1.w, r1.w, cb2[16].x
    lt r2.w, l(0.010000), |v6.z|
    mul r4.x, v6.z, cb2[15].z
    mul r4.y, r4.x, l(-1.442695)
    exp r4.y, r4.y
    add r4.y, -r4.y, l(1.000000)
    div r4.x, r4.y, r4.x
    mul r4.x, r1.w, r4.x
    movc r1.w, r2.w, r4.x, r1.w
    mul r4.xyz, r1.wwww, cb2[12].xyzx
    exp r2.xyz, r4.xyzx
  endif 
  mad r2.xyz, r2.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r2.xyz, r2.xyzx, -cb2[9].zzzz
  dp3 r1.x, cb2[7].yzwy, -r1.xyzx
  mad r1.y, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r1.z, cb2[8].w, -r1.x, l(1.000000)
  mul r1.z, r1.z, r1.z
  mul r1.z, r1.z, l(12.566371)
  div r1.y, r1.y, r1.z
  add r0.w, r0.w, -cb2[10].w
  mul_sat r0.w, r0.w, cb2[11].w
  mul r0.w, r0.w, r1.y
  mov_sat r1.x, r1.x
  mad r1.x, r1.x, r1.x, l(1.000000)
  mad r1.x, r1.x, l(0.05968310), l(-1.000000)
  mad r1.x, cb2[8].z, r1.x, l(1.000000)
  mul r1.yzw, r0.wwww, cb2[11].xxyz
  mad r1.xyz, r1.xxxx, cb2[10].xyzx, r1.yzwy
  mul r1.xyz, r1.xyzx, cb2[9].wwww
  add r4.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r1.xyz, r1.xyzx, r4.xyzx
  mad r1.xyz, r0.xyzx, r2.xyzx, r1.xyzx
else 
  mul r0.w, v6.z, cb2[6].x
  mad r1.w, cb2[6].x, v6.z, cb2[5].x
  lt r2.x, |r0.w|, l(0.000100)
  min r2.y, r1.w, l(64.000000)
  mul r2.y, r2.y, l(1.442695)
  exp r2.y, r2.y
  mov_sat r2.z, cb2[6].z
  lt r2.w, r1.w, l(0.000000)
  add r1.w, r1.w, l(1.000000)
  movc r1.w, r2.w, r2.y, r1.w
  add r1.w, r1.w, -cb2[6].z
  movc r0.w, r2.x, l(1.000000), r0.w
  div r0.w, r1.w, r0.w
  movc r0.w, r2.x, r2.z, r0.w
  mul r0.w, r0.w, cb2[5].z
  dp3 r1.w, v6.xyzx, v6.xyzx
  sqrt r2.x, r1.w
  mad r0.w, r0.w, r2.x, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  rsq r1.w, r1.w
  mul r2.xyz, r1.wwww, v6.xyzx
  dp3 r1.w, cb2[7].yzwy, r2.xyzx
  mad_sat r1.w, cb2[8].y, r1.w, cb2[8].x
  add r2.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r2.xyzw, r1.wwww, r2.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r2.w
  add r2.xyz, -r0.xyzx, r2.xyzx
  mad r1.xyz, r0.wwww, r2.xyzx, r0.xyzx
endif 
mul r0.xyz, r1.xyzx, cb1[85].yyyy
ge r1.xyz, r0.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.xyz, r0.xyzx, r1.xyzx
min r0.xyz, r0.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
max r1.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r3.xyz, r3.wwww, r1.xyzx
and r0.w, r3.w, l(0x7f800000)
ieq r0.w, r0.w, l(0x7f800000)
eq r2.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
and r2.xy, r2.zwzz, r2.xyxx
and r1.w, r2.y, r2.x
or r0.w, r0.w, r1.w
if_z r0.w
  ftou r2.xy, v0.xyxx
  imm_atomic_iadd r2.z, u6, r2.xyxx, l(1)
  ult r0.w, r2.z, cb2[58].z
  if_nz r0.w
    max r0.w, r3.z, r3.y
    max r0.w, r0.w, r3.x
    mov r0.w, |r0.w|
    and r0.w, r0.w, l(0x7f800000)
    iadd r0.w, r0.w, l(0x00800000)
    mad r1.xyz, r1.xyzx, r3.wwww, r0.wwww
    ubfe r1.x, l(8), l(15), r1.x
    ushr r1.yz, r1.yyzy, l(0, 15, 15, 0)
    bfi r1.yz, l(0, 8, 8, 0), l(0, 8, 16, 0), r1.yyzy, l(0, 0, 0, 0)
    iadd r1.x, r1.y, r1.x
    iadd r1.x, r1.z, r1.x
    ishl r0.w, r0.w, l(1)
    iadd r1.xzw, r0.wwww, r1.xxxx
    mov_sat r0.w, r3.w
    mul r0.w, r0.w, l(2046.000000)
    ftou r0.w, r0.w
    ishl r2.w, v0.z, l(2)
    and r0.w, r0.w, l(2046)
    bfi r1.y, l(11), l(0), r0.w, r2.w
    store_uav_typed u7.xyzw, r2.xyzz, r1.xyzw
    mov r0.w, l(-1)
  else 
    mov r0.w, l(0)
  endif 
else 
  mov r0.w, l(-1)
endif 
mul r3.xyz, r3.wwww, r0.xyzx
movc o0.xyzw, r0.wwww, l(0,0,0,0), r3.xyzw
ret 
// Approximately 2298 instruction slots used
