//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:36:47 2021
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float baseNormalHeight;            // Offset:  160 Size:     4
//   float2 glossRange;                 // Offset:  164 Size:     8
//   float anisotropy;                  // Offset:  172 Size:     4
//   float3 secondColorTint;            // Offset:  176 Size:    12
//   bool useAlphaControls;             // Offset:  188 Size:     4
//   float zFeatherDistance;            // Offset:  192 Size:     4
//   float falloffBegin;                // Offset:  196 Size:     4
//   float falloffEnd;                  // Offset:  200 Size:     4
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4 [unused]
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// colorSampler                      sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// specColorSampler                  sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// normalSampler                     sampler      NA          NA             s5      1 
// aoSampler                         sampler      NA          NA             s6      1 
// LinearSampler                     sampler      NA          NA             s7      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// floatZSampler                     texture  float4          2d             t0      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// colorMap                          texture  float4          2d            t21      1 
// normalMap                         texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// glossMap                          texture  float4          2d            t24      1 
// aoMap                             texture  float4          2d            t25      1 
// flowMap                           texture  float4          2d            t26      1 
// cavityMap                         texture  float4          2d            t29      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyz 
// COLOR                    1   x           1     NONE   float   x   
// TEXCOORD                 0    yz         1     NONE   float    yz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// OFFPOSITION              0   xyz         5     NONE   float   xyz 
// SV_IsFrontFace           0   x           6    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[13], immediateIndexed
dcl_constantbuffer CB1[86], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2d (float,float,float,float) t26
dcl_resource_texture2d (float,float,float,float) t29
dcl_resource_texture2darray (float,float,float,float) t31
dcl_input_ps_siv linear noperspective v0.xyz, position
dcl_input_ps linear v1.x
dcl_input_ps linear v1.yz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps_sgv constant v6.x, is_front_face
dcl_output o0.xyzw
dcl_temps 60
dcl_indexableTemp x0[4], 4
dcl_indexableTemp x1[4], 4
dcl_indexableTemp x2[4], 4
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.yzyy, t21.xyzw, s1
mul r0.w, r0.w, v1.x
sample_indexable(texture2d)(float,float,float,float) r1.x, v1.yzyy, t25.xyzw, s6
sample_indexable(texture2d)(float,float,float,float) r1.y, v1.yzyy, t24.yxzw, s3
add r1.z, -cb0[10].y, cb0[10].z
mad r1.y, r1.y, r1.z, cb0[10].y
mul_sat r1.y, r1.y, l(0.05882353)
sample_indexable(texture2d)(float,float,float,float) r1.z, v1.yzyy, t22.xyzw, s5
mul r1.z, r1.z, cb0[10].x
mul r1.z, r1.z, r1.z
mul r1.z, r1.z, l(0.33333334)
min r1.z, r1.z, l(1.000000)
mul r1.y, r1.y, l(-17.000000)
exp r1.y, r1.y
add r1.y, r1.y, r1.z
log r1.y, r1.y
mul r1.y, r1.y, l(-0.05882353)
max r2.y, r1.y, l(0.000000)
mul r1.yzw, cb1[9].xxyw, -cb1[24].yyyy
mad r1.yzw, -cb1[24].xxxx, cb1[8].xxyw, r1.yyzw
mad r1.yzw, -cb1[24].zzzz, cb1[10].xxyw, r1.yyzw
add r1.yzw, r1.yyzw, cb1[11].xxyw
add r3.xyz, v5.xyzx, cb1[24].xyzx
sample_indexable(texture2d)(float,float,float,float) r2.z, v1.yzyy, t29.yzxw, s7
sample_indexable(texture2d)(float,float,float,float) r4.xyzw, v1.yzyy, t26.xyzw, s7
mul r2.w, r4.w, l(0.173648)
mad r4.xyz, r4.xyzx, l(1.99218750, 1.99218750, 1.99218750, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
movc r5.xyz, v6.xxxx, v2.xyzx, -v2.xyzx
dp3 r4.w, r5.xyzx, r5.xyzx
rsq r4.w, r4.w
mul r5.xyz, r4.wwww, r5.xyzx
movc r6.xyz, v6.xxxx, v3.xyzx, -v3.xyzx
dp3 r4.w, r6.xyzx, r6.xyzx
rsq r4.w, r4.w
mul r6.xyz, r4.wwww, r6.xyzx
movc r7.xyz, v6.xxxx, v4.xyzx, -v4.xyzx
dp3 r4.w, r7.xyzx, r7.xyzx
rsq r4.w, r4.w
mul r7.xyz, r4.wwww, r7.xyzx
mul r7.xyz, r4.yyyy, r7.xyzx
mad r4.xyw, r6.xyxz, r4.xxxx, r7.xyxz
mad r4.xyz, r5.xyzx, r4.zzzz, r4.xywx
dp3 r4.w, r4.xyzx, r4.xyzx
rsq r4.w, r4.w
mul r6.xyz, r4.wwww, r4.xyzx
mul r7.xyz, r5.zxyz, r6.yzxy
mad r7.xyz, r5.yzxy, r6.zxyz, -r7.xyzx
mul r8.xyz, r6.zxyz, r7.yzxy
mad r6.xyz, r6.yzxy, r7.zxyz, -r8.xyzx
ftou r8.xy, v0.xyxx
ge r5.w, v0.z, l(0.984375)
mul r7.w, v0.z, l(1.01587307)
mad r8.z, v0.z, l(64.000000), l(-63.000000)
movc r5.w, r5.w, r8.z, r7.w
max r5.w, r5.w, l(0.00000001)
rcp r5.w, r5.w
dp3 r7.w, -v5.xyzx, -v5.xyzx
rsq r7.w, r7.w
mul r9.xyz, r7.wwww, -v5.xyzx
utof r8.zw, r8.yyyx
dp2 r9.w, r8.wzww, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r9.w, r9.w
mul r9.w, r9.w, l(52.982918)
frc r9.w, r9.w
mad r9.w, r9.w, l(6.28318548), cb1[70].w
sincos r10.x, r11.x, r9.w
dp2 r8.z, r8.zwzz, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r8.z, r8.z
mul r8.z, r8.z, l(52.982918)
frc r8.z, r8.z
mad r8.z, r8.z, l(6.28318548), cb1[70].w
sincos r12.x, r13.x, r8.z
dp3_sat r2.x, r6.xyzx, r9.xyzx
mul r8.z, r2.y, l(17.000000)
exp r8.z, r8.z
add r8.z, r8.z, l(2.000000)
div r8.z, l(2.000000), r8.z
sqrt r8.w, r8.z
mul r12.yzw, r2.wwww, r6.xxyz
mad r13.yzw, r4.xxyz, r4.wwww, r12.yyzw
dp3 r2.w, r13.yzwy, r13.yzwy
rsq r2.w, r2.w
mul r14.xyz, r2.wwww, r13.yzwy
mul r15.xyz, r0.xyzx, cb0[11].xyzx
sqrt r2.w, r8.w
mad r2.w, r2.w, l(0.500000), l(0.500000)
mul r2.w, r2.w, r2.w
mul r8.w, r2.w, l(0.500000)
mad r2.w, -r2.w, l(0.500000), l(1.000000)
mad r9.w, r2.x, r2.w, r8.w
mul r2.w, r2.w, r9.w
mul r8.w, r8.w, r9.w
mad r4.xyz, r4.xyzx, r4.wwww, -r12.yzwy
mov_sat r4.w, cb0[10].w
add r4.w, -r4.w, l(1.000000)
mul r4.w, r2.y, r4.w
mul r4.w, r4.w, l(17.000000)
exp r4.w, r4.w
add r4.w, r4.w, l(2.000000)
div r4.w, l(2.000000), r4.w
mul r9.w, r4.w, r8.z
sqrt r9.w, r9.w
mul r12.yzw, v5.yyyy, cb2[29].xxyz
mad r12.yzw, v5.xxxx, cb2[28].xxyz, r12.yyzw
mad r12.yzw, v5.zzzz, cb2[30].xxyz, r12.yyzw
add r12.yzw, r12.yyzw, cb2[31].xxyz
add r10.z, r12.w, -cb2[17].w
mad r10.z, -r10.z, l(0.00006104), l(1.000000)
mov_sat r10.w, r10.z
eq r10.w, r10.z, r10.w
if_nz r10.w
  mov r10.w, l(0)
  mov r11.w, l(0)
  loop 
    ge r14.w, r10.w, l(3.000000)
    breakc_nz r14.w
    ftou r14.w, r10.w
    add r16.xy, r12.yzyy, -cb2[r14.w + 20].xyxx
    max r15.w, |r16.y|, |r16.x|
    mul r11.w, r15.w, cb2[r14.w + 20].z
    lt r14.w, r11.w, l(1.000000)
    if_nz r14.w
      break 
    endif 
    add r10.w, r10.w, l(1.000000)
    mov r11.w, l(0)
  endloop 
else 
  mov r10.w, l(3.000000)
  mov r11.w, l(0)
endif 
ge r14.w, r10.w, l(3.000000)
if_nz r14.w
  mul r16.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
  rcp r17.xz, r16.xxxx
  mov r17.y, -r17.z
  mad r16.xyz, r12.yzyy, r17.xyzx, r16.yzyy
  add r17.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
  max r16.xyz, r16.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  min r16.xyz, r17.xyzx, r16.xyzx
  mul r17.xy, r16.zyzz, cb2[32].xxxx
  round_ni r17.xy, r17.xyxx
  mul r15.w, r17.y, cb2[27].x
  mad r15.w, r15.w, cb2[32].x, r17.x
  ftou r15.w, r15.w
  iadd r15.w, r15.w, cb2[32].y
  ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.w, r15.w, l(0), t23.xxxx
  and r17.x, r16.w, l(0x40000000)
  ishl r17.y, r16.w, l(2)
  if_z r17.x
    and r17.x, r16.w, l(0x01ffffff)
    iadd r18.x, r15.w, r17.x
    ushr r15.w, r16.w, l(25)
    utof r15.w, r15.w
    mul r16.xyz, r15.wwww, r16.xyzx
    frc r16.xyz, r16.xyzx
    mul r16.xyz, r16.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
    ftou r16.xyz, r16.xyzx
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.x, l(0), t23.xxxx
    ushr r17.xz, r16.zzyz, l(6, 0, 6, 0)
    and r15.w, r18.z, l(0xc0000000)
    iadd r16.w, r18.x, l(1)
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.w, r16.w, l(0), t23.xxxx
    movc r16.w, r17.z, r18.z, r16.w
    ushr r17.z, r16.w, l(13)
    movc r16.w, r17.x, r17.z, r16.w
    and r16.w, r16.w, l(8191)
    iadd r19.x, r16.w, r18.x
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.z, r19.x, l(0), t23.xxxx
    mov r18.y, l(0)
    mov r19.y, l(1)
    movc r17.xzw, r15.wwww, r18.xxyz, r19.xxyz
    movc r19.yz, r15.wwww, l(0,6,1,0), l(0,5,2,0)
    ushr r20.xy, r16.zyzz, r19.yyyy
    and r20.xy, r20.xyxx, l(1, 1, 0, 0)
    and r16.w, r17.w, l(0xc0000000)
    iadd r18.w, r17.x, l(1)
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.w, r18.w, l(0), t23.xxxx
    movc r18.w, r20.y, r17.w, r18.w
    ushr r19.y, r18.w, l(13)
    movc r18.w, r20.x, r19.y, r18.w
    and r18.w, r18.w, l(8191)
    iadd r19.x, r17.x, r18.w
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.w, r19.x, l(0), t23.xxxx
    movc r17.xzw, r16.wwww, r17.xxzw, r19.xxzw
    movc r17.xzw, r15.wwww, r18.xxyz, r17.xxzw
    and r15.w, r17.w, l(0xc0000000)
    if_z r15.w
      iadd r15.w, -r17.z, l(6)
      ushr r18.xy, r16.zyzz, r15.wwww
      or r15.w, r17.w, l(0x40000000)
      bfi r16.w, l(1), l(1), r18.y, l(0)
      bfi r16.w, l(1), l(0), r18.x, r16.w
      imul null, r16.w, r16.w, l(10)
      ushr r15.w, r15.w, r16.w
      and r15.w, r15.w, l(1023)
      iadd r18.x, r15.w, r17.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.w, r18.x, l(0), t23.xxxx
      iadd r18.yz, r17.zzzz, l(0, 1, 2, 0)
      iadd r15.w, -r18.y, l(6)
      ushr r19.xy, r16.zyzz, r15.wwww
      and r15.w, r18.w, l(0xc0000000)
      or r16.w, r18.w, l(0x40000000)
      bfi r17.z, l(1), l(1), r19.y, l(0)
      bfi r17.z, l(1), l(0), r19.x, r17.z
      imul null, r17.z, r17.z, l(10)
      ushr r16.w, r16.w, r17.z
      and r16.w, r16.w, l(1023)
      iadd r19.x, r16.w, r18.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.z, r19.x, l(0), t23.xxxx
      mov r19.y, r18.z
      movc r19.xyz, r15.wwww, r18.xywx, r19.xyzx
      iadd r16.w, -r19.y, l(6)
      ushr r18.yz, r16.zzyz, r16.wwww
      and r16.w, r19.z, l(0xc0000000)
      or r17.z, r19.z, l(0x40000000)
      bfi r18.z, l(1), l(1), r18.z, l(0)
      bfi r18.y, l(1), l(0), r18.y, r18.z
      imul null, r18.y, r18.y, l(10)
      ushr r17.z, r17.z, r18.y
      and r17.z, r17.z, l(1023)
      iadd r20.x, r17.z, r19.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.y, r20.x, l(0), t23.xxxx
      movc r18.yz, r16.wwww, r19.xxzx, r20.xxyx
      movc r17.xw, r15.wwww, r18.xxxw, r18.yyyz
    endif 
    and r15.w, r17.w, l(0xc0000000)
    if_z r15.w
      ubfe r16.w, l(14), l(15), r17.w
      utof r16.w, r16.w
      mul r16.w, r16.w, cb2[27].w
      mul r16.w, r16.w, l(0.00006104)
      and r18.xy, r17.wwww, l(0x00007fff, 0x20000000, 0, 0)
      utof r17.z, r18.x
      mul r17.z, r17.z, cb2[27].w
      mul r17.z, r17.z, l(0.00003052)
      and r18.x, r16.y, l(3)
      iadd r18.x, r17.x, r18.x
      iadd r18.x, r18.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.x, r18.x, l(0), t23.xxxx
      bfi r19.xyz, l(2, 2, 1, 0), l(3, 1, 4, 0), r16.xyzx, l(0, 0, 0, 0)
      ushr r16.x, r18.x, r19.x
      and r16.x, r16.x, l(255)
      utof r16.x, r16.x
      mul r16.x, r17.z, r16.x
      mad r16.x, r16.x, l(0.00392157), r16.w
      iadd r16.y, r19.y, l(1)
      ubfe r16.z, l(1), l(1), r16.z
      iadd r16.y, r16.z, r16.y
      iadd r16.y, r16.y, r17.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.y, r16.y, l(0), t23.xxxx
      ushr r16.y, r16.y, r19.z
      and r16.y, r16.y, l(0x0000ffff)
      utof r16.y, r16.y
      mul r16.y, r17.z, r16.y
      mad r16.y, r16.y, l(0.00001526), r16.w
      movc r17.y, r18.y, r16.x, r16.y
    else 
      and r16.x, r17.w, l(0x80000000)
      iadd r16.y, r17.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.y, r16.y, l(0), t23.xxxx
      movc r16.x, r16.x, r16.y, l(0)
      ishl r16.y, r17.w, l(2)
      ushr r16.z, r16.x, l(16)
      and r16.x, r16.x, l(0x0000ffff)
      f16tof32 r16.xz, r16.xxzx
      mad r16.y, r12.y, r16.z, r16.y
      mad r16.x, r12.z, r16.x, r16.y
      movc r17.y, r15.w, r16.x, r17.y
    endif 
  endif 
  mad r12.w, -cb2[27].z, l(2.000000), r12.w
  lt r12.w, r17.y, r12.w
  movc r16.y, r12.w, l(0), l(1.000000)
endif 
if_z r14.w
  if_z cb2[58].y
    ftou r12.w, r10.w
    add r16.zw, r12.yyyz, -cb2[r12.w + 20].xxxy
    mul r16.zw, r16.zzzw, cb2[r12.w + 20].zzzz
    mad r17.xy, r16.zwzz, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    itof r12.w, cb2[26].y
    add r17.z, r10.w, r12.w
    sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.w, r17.xyzx, t13.xxxx, s13, r10.z
    sample_l_indexable(texture2darray)(float,float,float,float) r14.w, r17.xyzx, t31.yzwx, s0, l(0.000000)
    add r12.w, r12.w, r14.w
    add_sat r12.w, r12.w, l(-1.000000)
    mul r14.w, r12.w, r12.w
    mul r16.y, r12.w, r14.w
  endif 
  if_nz cb2[58].y
    mov r17.x, -r10.x
    ftou r12.w, r10.w
    add r10.w, r10.w, l(1.000000)
    min r10.w, r10.w, l(2.000000)
    ftou r10.w, r10.w
    add r11.w, -r11.w, l(1.000000)
    mul r11.w, r11.w, l(28.000000)
    ftou r11.w, r11.w
    add r16.zw, r12.yyyz, -cb2[r12.w + 20].xxxy
    mul r16.zw, r16.zzzw, cb2[r12.w + 20].zzzz
    mad r16.zw, r16.zzzw, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
    add r12.yz, r12.yyzy, -cb2[r10.w + 20].xxyx
    mul r12.yz, r12.yyzy, cb2[r10.w + 20].zzzz
    mad r12.yz, r12.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
    mov r17.y, r11.x
    mov r17.z, r10.x
    mov r14.w, l(0)
    mov r15.w, l(0)
    loop 
      uge r17.w, r15.w, l(8)
      breakc_nz r17.w
      ult r17.w, r11.w, r15.w
      movc r18.xy, r17.wwww, r12.yzyy, r16.zwzz
      movc r18.z, r17.w, cb2[r10.w + 20].w, cb2[r12.w + 20].w
      movc r17.w, r17.w, r10.w, r12.w
      dp2 r19.x, icb[r15.w + 0].yxyy, r17.xyxx
      dp2 r19.y, icb[r15.w + 0].yxyy, r17.yzyy
      mad r18.xy, r19.xyxx, r18.zzzz, r18.xyxx
      iadd r17.w, r17.w, cb2[26].y
      utof r18.z, r17.w
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r17.w, r18.xyzx, t13.xxxx, s13, r10.z
      sample_l_indexable(texture2darray)(float,float,float,float) r18.x, r18.xyzx, t31.xyzw, s0, l(0.000000)
      add r17.w, r17.w, r18.x
      add_sat r17.w, r17.w, l(-1.000000)
      mad r14.w, r17.w, l(0.125000), r14.w
      iadd r15.w, r15.w, l(1)
    endloop 
    mul r10.z, r14.w, r14.w
    mul r16.y, r14.w, r10.z
  endif 
endif 
and r10.z, cb2[53].x, l(0x0000ffff)
if_nz r10.z
  iadd r10.z, r10.z, cb2[0].x
  iadd r10.z, r10.z, l(-1)
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r10.w, r10.z, l(52), t12.xxxx
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r10.z, l(68), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r10.z, l(84), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.xyzw, r10.z, l(132), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r20.xyzw, r10.z, l(148), t12.xyzw
  dp3 r11.w, cb2[17].xyzx, r6.xyzx
  mad r11.w, |r11.w|, l(-0.200000), l(0.400000)
  mad r21.xyz, r6.xyzx, r11.wwww, v5.xyzx
  mov r21.w, l(1.000000)
  dp4 r17.x, r17.xyzw, r21.xyzw
  dp4 r17.y, r18.xyzw, r21.xyzw
  mad r12.yz, r17.xxyx, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
  add r12.yz, r20.zzwz, r12.yyzy
  mul r12.yz, r20.xxyx, r12.yyzy
  div r16.zw, r10.wwww, r19.xxxz
  add r17.xy, -r16.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
  ge r17.xy, r12.yzyy, r17.xyxx
  ge r16.zw, r16.zzzw, r12.yyyz
  or r16.zw, r16.zzzw, r17.xxxy
  or r11.w, r16.w, r16.z
  if_z r11.w
    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r11.w, r10.z, l(28), t12.xxxx
    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r10.z, l(100), t12.xyzw
    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.zw, r10.z, l(164), t12.xxxy
    dp4 r10.z, r17.xyzw, r21.xyzw
    mov_sat r12.yz, r12.yyzy
    mad r17.xy, r12.yzyy, r19.xzxx, r19.ywyy
    add r10.z, r16.z, r10.z
    div r10.z, r10.z, r16.w
    max r10.z, r10.z, l(0.00006104)
    and r11.w, r11.w, l(0x0000ffff)
    if_nz cb2[58].y
      mov r18.x, -r10.x
      utof r19.z, r11.w
      mov r18.y, r11.x
      mov r18.z, r10.x
      mov r12.yz, l(0,0,0,0)
      loop 
        ige r12.w, r12.z, l(8)
        breakc_nz r12.w
        dp2 r20.x, icb[r12.z + 0].yxyy, r18.xyxx
        dp2 r20.y, icb[r12.z + 0].yxyy, r18.yzyy
        mad r19.xy, r20.xyxx, r10.wwww, r17.xyxx
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.w, r19.xyzx, t9.xxxx, s13, r10.z
        mad r12.y, r12.w, l(0.125000), r12.y
        iadd r12.z, r12.z, l(1)
      endloop 
    else 
      utof r17.z, r11.w
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.y, r17.xyzx, t9.xxxx, s13, r10.z
    endif 
    mul r10.z, r12.y, r12.y
    mul r10.z, r12.y, r10.z
  else 
    mov r10.z, l(1.000000)
  endif 
  mul r16.y, r10.z, r16.y
endif 
lt r10.z, l(0.000000), r16.y
if_nz r10.z
  dp3_sat r10.z, r6.xyzx, cb2[17].xyzx
  if_nz cb2[23].x
    mov r3.w, l(1.000000)
    dp4 r10.w, cb2[24].xyzw, r3.xyzw
    dp4 r3.w, cb2[25].xyzw, r3.xyzw
    frc r17.x, r10.w
    frc r17.y, r3.w
    iadd r3.w, l(-1), cb2[23].x
    utof r17.z, r3.w
    sample_l_indexable(texture2darray)(float,float,float,float) r12.yzw, r17.xyzx, t20.wxyz, s2, l(0.000000)
    add r12.yzw, r12.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
    mad r12.yzw, cb2[23].yyyy, r12.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
    mul r12.yzw, r12.yyzw, cb2[18].xxyz
  else 
    mov r12.yzw, cb2[18].xxyz
  endif 
  dp3 r3.w, r4.xyzx, cb2[17].xyzx
  mad r3.w, -r3.w, r3.w, l(1.000000)
  sqrt r17.xyz, r3.wwww
  mad r18.xyz, -v5.xyzx, r7.wwww, cb2[17].xyzx
  dp3 r3.w, r18.xyzx, r18.xyzx
  rsq r3.w, r3.w
  mul r18.xyz, r3.wwww, r18.xyzx
  dp3 r3.w, r18.xyzx, r9.xyzx
  add_sat r3.w, -r3.w, l(1.000000)
  mul r7.w, r3.w, r3.w
  mul r7.w, r7.w, r7.w
  mul r3.w, r3.w, r7.w
  mad r7.w, r10.z, r2.w, r8.w
  dp3 r10.w, r6.xyzx, r18.xyzx
  dp3 r11.w, r18.xyzx, r7.xyzx
  dp3 r14.w, r18.xyzx, r4.xyzx
  mul r14.w, r14.w, r14.w
  div r14.w, r14.w, r8.z
  mul r11.w, r11.w, r11.w
  div r11.w, r11.w, r4.w
  add r14.w, r11.w, r14.w
  mad r14.w, |r10.w|, |r10.w|, r14.w
  mul r7.w, r7.w, r9.w
  mul r14.w, r14.w, r14.w
  mul r14.w, r7.w, r14.w
  rcp r14.w, r14.w
  mul r14.w, r10.z, r14.w
  mul r14.w, r14.w, l(0.250000)
  dp3 r15.w, r18.xyzx, r13.yzwy
  mul r15.w, r15.w, r15.w
  div r15.w, r15.w, r8.z
  add r11.w, r11.w, r15.w
  mad r10.w, |r10.w|, |r10.w|, r11.w
  mul r10.w, r10.w, r10.w
  mul r7.w, r7.w, r10.w
  rcp r7.w, r7.w
  mul r7.w, r10.z, r7.w
  mul r7.w, r7.w, l(0.250000)
  mul r18.xyz, r15.xyzx, r7.wwww
  mad r18.xyz, r18.xyzx, l(0.830000, 0.830000, 0.830000, 0.000000), r14.wwww
  mul r10.zw, r3.wwww, r14.wwww
  dp3 r3.w, r12.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
  mul r3.w, r3.w, r16.y
  mov r16.x, l(1.000000)
  mov r16.zw, cb2[17].xxxy
  mov r7.w, cb2[17].z
  mov r11.w, r10.w
else 
  mov r3.w, l(0)
  mov r12.yzw, l(0,0,0,0)
  mov r16.xyzw, l(0,0,0,0)
  mov r17.xyz, l(0,0,0,0)
  mov r7.w, l(0)
  mov r18.xyz, l(0,0,0,0)
  mov r11.w, l(0)
  mov r10.zw, l(0,0,0,0)
endif 
mul r14.w, r5.w, l(0.00781250)
min r14.w, r14.w, l(15.000000)
ftou r14.w, r14.w
ushr r19.xy, r8.xyxx, l(6, 6, 0, 0)
ishl r19.z, r14.w, l(4)
mov r20.x, -r10.x
mov r21.xy, l(0,0,0,0)
mov r22.w, l(0)
mov r23.xyz, v5.xyzx
mov r23.w, l(1.000000)
mov r24.w, l(1.000000)
mov r20.z, r10.x
mov r25.z, l(1.000000)
mov r26.w, l(1.000000)
mov r20.yw, r11.xxxx
mov r10.y, r20.w
mov r27.w, l(1.000000)
mov r11.y, r20.x
mov r11.z, r10.x
mov r28.x, r11.x
mov r28.y, r20.x
mov r28.z, r10.x
mov r29.xyz, l(0,0,0,0)
mov r30.xyz, l(0,0,0,0)
mov r31.xyz, l(0,0,0,0)
mov r32.xyz, r12.yzwy
mov r33.xy, r16.zwzz
mov r33.z, r7.w
mov r34.xyz, r17.xyzx
mov r35.xyz, r18.xyzx
mov r36.x, r11.w
mov r36.yz, r10.zzwz
mov r8.x, cb2[58].y
mov r8.y, r3.w
mov r37.xy, r16.xyxx
mov r14.w, l(0)
loop 
  uge r15.w, r14.w, cb2[0].x
  breakc_nz r15.w
  ushr r21.z, r14.w, l(5)
  iadd r22.xyz, r19.xyzx, r21.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r15.w, r22.xyzw, t6.yzwx
  mov r22.xyz, r29.xyzx
  mov r38.xyz, r30.xyzx
  mov r39.xyz, r31.xyzx
  mov r40.xyz, r32.xyzx
  mov r41.xyz, r33.xyzx
  mov r42.xyz, r34.xyzx
  mov r43.xyz, r35.xyzx
  mov r21.zw, r37.xxxy
  mov r17.w, r8.x
  mov r18.w, r8.y
  mov r44.xyz, r36.xyzx
  mov r19.w, r15.w
  loop 
    breakc_z r19.w
    firstbit_lo r25.w, r19.w
    ishl r28.w, l(1), r25.w
    and r29.w, r19.w, r28.w
    if_nz r29.w
      xor r19.w, r19.w, r28.w
      iadd r25.w, r14.w, r25.w
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xyzw, r25.w, l(0), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r46.xy, r25.w, l(16), t12.xyxx
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r47.xyzw, r25.w, l(28), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r48.xyzw, r25.w, l(44), t12.wxyz
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r49.xyzw, r25.w, l(60), t12.zwxy
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r50.xyzw, r25.w, l(76), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r51.xyzw, r25.w, l(92), t12.zwxy
      ubfe r28.w, l(3), l(24), r47.x
      switch r28.w
        case l(4)
        lt r28.w, l(0.000000), r51.x
        mov r52.x, r50.w
        mov r52.yz, r51.zzwz
        mad r53.xyz, -r52.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r45.xyzx
        add r54.xyz, r53.xyzx, -v5.xyzx
        dp3 r29.w, r52.xyzx, r54.xyzx
        div_sat r29.w, -r29.w, r51.x
        mad r52.xyz, r29.wwww, r52.xyzx, r53.xyzx
        movc r52.xyz, r28.wwww, r52.xyzx, r45.xyzx
        add r52.xyz, r52.xyzx, -v5.xyzx
        dp3 r28.w, r52.xyzx, r52.xyzx
        sqrt r29.w, r28.w
        mul r30.w, r48.z, r48.z
        div r30.w, r30.w, r28.w
        min r30.w, r30.w, l(1.000000)
        mad_sat r31.w, r29.w, r47.y, r47.z
        mad_sat r29.w, r29.w, r47.w, r48.y
        mul r32.w, r31.w, r31.w
        mad r31.w, r31.w, l(-2.000000), l(3.000000)
        mul r31.w, r31.w, r32.w
        mul r30.w, r30.w, r31.w
        mul r31.w, r29.w, r29.w
        mad r29.w, r29.w, l(-2.000000), l(3.000000)
        mul r29.w, r29.w, r31.w
        mul r29.w, r29.w, r30.w
        lt r30.w, l(0.000000), r29.w
        if_nz r30.w
          rsq r28.w, r28.w
          mul r53.xyz, r28.wwww, r52.xyzx
          dp3 r30.w, r6.xyzx, r53.xyzx
          ubfe r37.zw, l(0, 0, 3, 4), l(0, 0, 27, 20), r47.xxxx
          ine r31.w, r37.z, l(1)
          if_nz r31.w
            mad r31.w, |r30.w|, l(-0.200000), l(0.400000)
            mad r54.xyz, r6.xyzx, r31.wwww, v5.xyzx
            mov r49.z, r50.x
            add r54.xyz, -r49.xyzx, r54.xyzx
            max r31.w, |r54.z|, |r54.y|
            max r31.w, r31.w, |r54.x|
            div r31.w, r50.y, r31.w
            add r31.w, r50.z, r31.w
            dp3 r32.w, r54.xyzx, r54.xyzx
            rsq r32.w, r32.w
            max r31.w, r31.w, l(0.00006104)
            and r33.w, r47.x, l(0x0000ffff)
            utof r55.w, r33.w
            mov r33.w, l(0)
            mov r34.w, l(0)
            loop 
              ige r35.w, r34.w, l(8)
              breakc_nz r35.w
              dp2 r56.y, icb[r34.w + 0].yxyy, r20.xyxx
              dp2 r56.z, icb[r34.w + 0].yxyy, r20.yzyy
              mul r56.yz, r48.wwww, r56.yyzy
              mul r56.x, r13.x, r56.y
              mul r56.w, r12.x, r56.y
              mad r55.xyz, r54.xyzx, r32.wwww, r56.xzwx
              sample_c_lz_indexable(texturecubearray)(float,float,float,float) r35.w, r55.xyzw, t10.xxxx, s13, r31.w
              mad r33.w, r35.w, l(0.125000), r33.w
              iadd r34.w, r34.w, l(1)
            endloop 
          else 
            mov r33.w, l(1.000000)
          endif 
          if_nz r37.w
            iadd r31.w, r37.w, cb2[0].x
            iadd r31.w, r31.w, l(-1)
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.w, r31.w, l(52), t12.xxxx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r54.xyzw, r31.w, l(100), t12.xyzw
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r55.xyzw, r31.w, l(116), t12.xyzw
            mad r34.w, |r30.w|, l(-0.200000), l(0.400000)
            mad r24.xyz, r6.xyzx, r34.wwww, v5.xyzx
            dp4 r34.w, r54.xyzw, r24.xyzw
            dp4 r35.w, r55.xyzw, r24.xyzw
            lt r36.w, r35.w, r34.w
            if_z r36.w
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r54.xyzw, r31.w, l(68), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r55.xyzw, r31.w, l(84), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r56.xyzw, r31.w, l(132), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r57.xyzw, r31.w, l(148), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.zw, r31.w, l(164), t12.xxxy
              dp4 r54.x, r54.xyzw, r24.xyzw
              dp4 r54.y, r55.xyzw, r24.xyzw
              div r24.xy, r54.xyxx, r35.wwww
              mad r24.xy, r24.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
              add r24.xy, r57.zwzz, r24.xyxx
              mul r24.xy, r57.xyxx, r24.xyxx
              div r54.xy, r32.wwww, r56.xzxx
              add r54.zw, -r54.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
              ge r54.zw, r24.xxxy, r54.zzzw
              ge r54.xy, r54.xyxx, r24.xyxx
              or r54.xy, r54.xyxx, r54.zwzz
              or r24.z, r54.y, r54.x
              mov_sat r24.xy, r24.xyxx
              mad r54.xy, r24.xyxx, r56.xzxx, r56.ywyy
              mul r24.x, r35.w, r37.w
              mad r24.y, r37.z, r35.w, r34.w
              div r24.x, r24.y, r24.x
            else 
              mov r24.z, l(-1)
            endif 
            or r24.y, r36.w, r24.z
            if_z r24.y
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r24.y, r31.w, l(28), t12.xxxx
              max r24.x, r24.x, l(0.00006104)
              and r24.y, r24.y, l(0x0000ffff)
              if_nz r17.w
                utof r55.z, r24.y
                mov r24.z, l(0)
                mov r31.w, l(0)
                loop 
                  ige r34.w, r31.w, l(8)
                  breakc_nz r34.w
                  dp2 r56.x, icb[r31.w + 0].yxyy, r20.xwxx
                  dp2 r56.y, icb[r31.w + 0].xyxx, r10.xyxx
                  mad r55.xy, r56.xyxx, r32.wwww, r54.xyxx
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r34.w, r55.xyzx, t9.xxxx, s13, r24.x
                  mad r24.z, r34.w, l(0.125000), r24.z
                  iadd r31.w, r31.w, l(1)
                endloop 
              else 
                utof r54.z, r24.y
                sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.z, r54.xyzx, t9.xxxx, s13, r24.x
              endif 
              mul r24.x, r24.z, r24.z
              mul r24.x, r24.z, r24.x
            else 
              mov r24.x, l(1.000000)
            endif 
            mul r33.w, r24.x, r33.w
          endif 
          mul r24.x, r29.w, r33.w
          lt r24.y, l(0.000000), r24.x
          if_nz r24.y
            mov_sat r30.w, r30.w
            dp3 r24.y, r4.xyzx, r53.xyzx
            mad r24.y, -r24.y, r24.y, l(1.000000)
            sqrt r54.xyz, r24.yyyy
            mad r52.xyz, r52.xyzx, r28.wwww, r9.xyzx
            dp3 r24.y, r52.xyzx, r52.xyzx
            rsq r24.y, r24.y
            mul r52.xyz, r24.yyyy, r52.xyzx
            dp3 r24.y, r52.xyzx, r9.xyzx
            add_sat r24.y, -r24.y, l(1.000000)
            mul r28.w, r24.y, r24.y
            mul r28.w, r28.w, r28.w
            mul r24.y, r24.y, r28.w
            mad r28.w, r30.w, r2.w, r8.w
            dp3 r31.w, r6.xyzx, r52.xyzx
            dp3 r32.w, r52.xyzx, r7.xyzx
            dp3 r34.w, r52.xyzx, r4.xyzx
            mul r34.w, r34.w, r34.w
            div r34.w, r34.w, r8.z
            mul r32.w, r32.w, r32.w
            div r32.w, r32.w, r4.w
            add r34.w, r32.w, r34.w
            mad r34.w, |r31.w|, |r31.w|, r34.w
            mul r28.w, r9.w, r28.w
            mul r34.w, r34.w, r34.w
            mul r34.w, r28.w, r34.w
            rcp r34.w, r34.w
            mul r34.w, r30.w, r34.w
            mul r34.w, r34.w, l(0.250000)
            dp3 r35.w, r52.xyzx, r13.yzwy
            mul r35.w, r35.w, r35.w
            div r35.w, r35.w, r8.z
            add r32.w, r32.w, r35.w
            mad r31.w, |r31.w|, |r31.w|, r32.w
            mul r31.w, r31.w, r31.w
            mul r28.w, r28.w, r31.w
            rcp r28.w, r28.w
            mul r28.w, r30.w, r28.w
            mul r28.w, r28.w, l(0.250000)
            mul r52.xyz, r15.xyzx, r28.wwww
            mad r52.xyz, r52.xyzx, l(0.830000, 0.830000, 0.830000, 0.000000), r34.wwww
            mul r24.y, r24.y, r34.w
            mov r46.z, r45.w
            dp3 r28.w, r46.zxyz, l(0.212600, 0.715200, 0.072200, 0.000000)
            mul r28.w, r24.x, r28.w
            lt r30.w, r18.w, r28.w
            if_nz r30.w
              mul r30.w, r21.w, r21.z
              mul r55.xyz, r40.xyzx, r30.wwww
              mad r22.xyz, r55.xyzx, r42.xyzx, r22.xyzx
              mad r39.xyz, r55.xyzx, r43.xyzx, r39.xyzx
              mad r38.xyz, r55.xyzx, r44.xyzx, r38.xyzx
              mov r21.w, r33.w
              mov r44.xyz, r24.yyyy
              mov r40.xyz, r46.zxyz
              mov r41.xyz, r53.xyzx
              mov r42.xyz, r54.xyzx
              mov r43.xyz, r52.xyzx
              mov r18.w, r28.w
              mov r21.z, r29.w
            else 
              mul r53.xyz, r46.zxyz, r24.xxxx
              mad r22.xyz, r53.xyzx, r54.zzzz, r22.xyzx
              mad r39.xyz, r53.xyzx, r52.xyzx, r39.xyzx
              mad r38.xyz, r53.xyzx, r24.yyyy, r38.xyzx
            endif 
          endif 
        endif 
        break 
        case l(2)
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r52.xyzw, r25.w, l(108), t12.zwxy
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r53.xyzw, r25.w, l(124), t12.xyzw
        mov r54.xy, r52.xyxx
        mov r54.zw, r53.xxxy
        dp4 r24.x, r54.xyzw, r23.xyzw
        lt r24.y, r24.x, l(1.000000)
        if_nz r24.y
          mov r55.xyz, l(1.000000,1.000000,1.000000,0)
          mov r24.y, l(0)
        else 
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r56.xyzw, r25.w, l(172), t12.yzwx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r57.xyzw, r25.w, l(188), t12.wxyz
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r58.xyzw, r25.w, l(204), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r28.w, r25.w, l(236), t12.xxxx
          add r45.xyz, r45.xyzx, -v5.xyzx
          mul r29.w, r48.z, r48.z
          dp3 r30.w, r45.xyzx, r45.xyzx
          div r29.w, r29.w, r30.w
          min r29.w, r29.w, l(1.000000)
          mad_sat r30.w, r24.x, r47.y, r47.z
          mad_sat r31.w, r24.x, r47.w, r48.y
          mul r32.w, r30.w, r30.w
          mad r30.w, r30.w, l(-2.000000), l(3.000000)
          mul r30.w, r30.w, r32.w
          mul r29.w, r29.w, r30.w
          mul r30.w, r31.w, r31.w
          mad r31.w, r31.w, l(-2.000000), l(3.000000)
          mul r30.w, r30.w, r31.w
          mul r29.w, r29.w, r30.w
          mov r59.xy, r49.xyxx
          mov r59.zw, r50.xxxy
          dp4 r45.x, r59.xyzw, r23.xyzw
          mov r59.xy, r50.zwzz
          mov r59.zw, r51.zzzw
          dp4 r45.y, r59.xyzw, r23.xyzw
          div r25.xy, r45.xyxx, r24.xxxx
          lt r24.x, r56.w, l(0.00048828)
          if_nz r24.x
            mov r57.y, r58.x
            mad_sat r37.zw, |r25.xxxy|, r57.zzzw, r57.xxxy
            mul r45.xy, r37.zwzz, r37.zwzz
            mad r37.zw, r37.zzzw, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
            mul r37.zw, r37.zzzw, r45.xxxy
            mul r24.x, r37.w, r37.z
          else 
            mov r56.w, r57.y
            mul_sat r56.xyzw, |r25.yyxx|, r56.xyzw
            log r56.xyzw, r56.xyzw
            mul r56.xyzw, r56.xyzw, r57.xxxx
            exp r56.xyzw, r56.xyzw
            add r37.zw, r56.zzzw, r56.xxxy
            log r37.zw, r37.zzzw
            mul r37.zw, r37.zzzw, r58.xxxx
            exp r37.zw, r37.zzzw
            mul r30.w, r37.z, r57.z
            mad r31.w, r57.w, r37.w, l(-1.000000)
            mad r30.w, r57.w, r37.w, -r30.w
            div_sat r30.w, r31.w, r30.w
            mul r31.w, r30.w, r30.w
            mad r30.w, r30.w, l(-2.000000), l(3.000000)
            mul r24.x, r30.w, r31.w
          endif 
          mul r24.y, r24.x, r29.w
          and r24.x, r28.w, l(255)
          if_nz r24.x
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xyz, r25.w, l(220), t12.xyzx
            dp3 r28.w, r58.yzwy, r25.xyzx
            dp3 r25.x, r45.xyzx, r25.xyzx
            frc r45.x, r28.w
            frc r45.y, r25.x
            iadd r24.x, r24.x, l(-1)
            utof r45.z, r24.x
            sample_l_indexable(texture2darray)(float,float,float,float) r55.xyz, r45.xyzx, t20.xyzw, s2, l(0.000000)
          else 
            mov r55.xyz, l(1.000000,1.000000,1.000000,0)
          endif 
        endif 
        lt r24.x, l(0.000000), r24.y
        if_nz r24.x
          mov r48.yz, r49.zzwz
          add r45.xyz, r48.xyzx, -v5.xyzx
          dp3 r24.x, r45.xyzx, r45.xyzx
          rsq r24.x, r24.x
          mul r47.yzw, r24.xxxx, r45.xxyz
          dp3 r25.x, r6.xyzx, r47.yzwy
          ubfe r37.zw, l(0, 0, 3, 4), l(0, 0, 27, 20), r47.xxxx
          ine r25.y, r37.z, l(1)
          if_nz r25.y
            mad r25.y, |r25.x|, l(-0.200000), l(0.400000)
            mad r26.xyz, r6.xyzx, r25.yyyy, v5.xyzx
            mov r52.xy, r51.xyxx
            dp4 r25.y, r52.xyzw, r26.xyzw
            dp4 r28.w, r54.xyzw, r26.xyzw
            ge r29.w, r28.w, r25.y
            if_nz r29.w
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r53.xy, r25.w, l(140), t12.xyxx
              mov r49.zw, r50.xxxy
              dp4 r48.x, r49.xyzw, r26.xyzw
              mov r51.xy, r50.zwzz
              dp4 r48.y, r51.xyzw, r26.xyzw
              div r26.xy, r48.xyxx, r28.wwww
              mad_sat r26.xy, r26.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
              mad r26.xy, r26.xyxx, r53.zxzz, r53.wyww
              div r25.y, r25.y, r28.w
              max r25.y, r25.y, l(0.00006104)
              and r25.w, r47.x, l(0x0000ffff)
              if_nz r17.w
                utof r48.z, r25.w
                mov r28.w, l(0)
                mov r29.w, l(0)
                loop 
                  ige r30.w, r29.w, l(8)
                  breakc_nz r30.w
                  dp2 r49.x, icb[r29.w + 0].xyxx, r11.xyxx
                  dp2 r49.y, icb[r29.w + 0].yxyy, r11.xzxx
                  mad r48.xy, r49.xyxx, r48.wwww, r26.xyxx
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r30.w, r48.xyzx, t9.xxxx, s13, r25.y
                  mad r28.w, r30.w, l(0.125000), r28.w
                  iadd r29.w, r29.w, l(1)
                endloop 
              else 
                utof r26.z, r25.w
                sample_c_lz_indexable(texture2darray)(float,float,float,float) r28.w, r26.xyzx, t9.xxxx, s13, r25.y
              endif 
              mul r25.y, r28.w, r28.w
              mul r25.y, r28.w, r25.y
            else 
              mov r25.y, l(1.000000)
            endif 
          else 
            mov r25.y, l(1.000000)
          endif 
          if_nz r37.w
            iadd r25.w, r37.w, cb2[0].x
            iadd r25.w, r25.w, l(-1)
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r26.x, r25.w, l(52), t12.xxxx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r48.xyzw, r25.w, l(68), t12.xyzw
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r49.xyzw, r25.w, l(84), t12.xyzw
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r50.xyzw, r25.w, l(100), t12.xyzw
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r51.xyzw, r25.w, l(116), t12.xyzw
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r52.xyzw, r25.w, l(132), t12.xyzw
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r53.xyzw, r25.w, l(148), t12.xyzw
            mad r26.y, |r25.x|, l(-0.200000), l(0.400000)
            mad r27.xyz, r6.xyzx, r26.yyyy, v5.xyzx
            dp4 r48.x, r48.xyzw, r27.xyzw
            dp4 r48.y, r49.xyzw, r27.xyzw
            dp4 r26.y, r50.xyzw, r27.xyzw
            dp4 r26.z, r51.xyzw, r27.xyzw
            lt r27.x, r26.z, r26.y
            div r27.yz, r48.xxyx, r26.zzzz
            mad r27.yz, r27.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
            add r27.yz, r53.zzwz, r27.yyzy
            mul r27.yz, r53.xxyx, r27.yyzy
            div r37.zw, r26.xxxx, r52.xxxz
            add r48.xy, -r37.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
            ge r48.xy, r27.yzyy, r48.xyxx
            ge r37.zw, r37.zzzw, r27.yyyz
            or r37.zw, r37.zzzw, r48.xxxy
            or r29.w, r37.w, r37.z
            or r27.x, r27.x, r29.w
            if_z r27.x
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r27.x, r25.w, l(28), t12.xxxx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.zw, r25.w, l(164), t12.xxxy
              mov_sat r27.yz, r27.yyzy
              mad r48.xy, r27.yzyy, r52.xzxx, r52.ywyy
              mul r25.w, r26.z, r37.w
              mad r26.y, r37.z, r26.z, r26.y
              div r25.w, r26.y, r25.w
              max r25.w, r25.w, l(0.00006104)
              and r26.y, r27.x, l(0x0000ffff)
              if_nz r17.w
                utof r27.z, r26.y
                mov r26.z, l(0)
                mov r29.w, l(0)
                loop 
                  ige r30.w, r29.w, l(8)
                  breakc_nz r30.w
                  dp2 r49.x, icb[r29.w + 0].xyxx, r28.xyxx
                  dp2 r49.y, icb[r29.w + 0].yxyy, r28.xzxx
                  mad r27.xy, r49.xyxx, r26.xxxx, r48.xyxx
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r27.x, r27.xyzx, t9.xxxx, s13, r25.w
                  mad r26.z, r27.x, l(0.125000), r26.z
                  iadd r29.w, r29.w, l(1)
                endloop 
              else 
                utof r48.z, r26.y
                sample_c_lz_indexable(texture2darray)(float,float,float,float) r26.z, r48.xyzx, t9.xxxx, s13, r25.w
              endif 
              mul r25.w, r26.z, r26.z
              mul r25.w, r26.z, r25.w
            else 
              mov r25.w, l(1.000000)
            endif 
            mul r25.y, r25.w, r25.y
          endif 
          mul r25.w, r24.y, r25.y
          lt r26.x, l(0.000000), r25.w
          if_nz r26.x
            mov_sat r25.x, r25.x
            mov r46.w, r45.w
            mul r27.xyz, r46.wxyw, r55.xyzx
            dp3 r26.x, r4.xyzx, r47.yzwy
            mad r26.x, -r26.x, r26.x, l(1.000000)
            sqrt r46.xyz, r26.xxxx
            mad r45.xyz, r45.xyzx, r24.xxxx, r9.xyzx
            dp3 r24.x, r45.xyzx, r45.xyzx
            rsq r24.x, r24.x
            mul r45.xyz, r24.xxxx, r45.xyzx
            dp3 r24.x, r45.xyzx, r9.xyzx
            add_sat r24.x, -r24.x, l(1.000000)
            mul r26.x, r24.x, r24.x
            mul r26.x, r26.x, r26.x
            mul r24.x, r24.x, r26.x
            mad r26.x, r25.x, r2.w, r8.w
            dp3 r26.y, r6.xyzx, r45.xyzx
            dp3 r29.w, r45.xyzx, r7.xyzx
            dp3 r30.w, r45.xyzx, r4.xyzx
            mul r30.w, r30.w, r30.w
            div r30.w, r30.w, r8.z
            mul r29.w, r29.w, r29.w
            div r29.w, r29.w, r4.w
            add r30.w, r29.w, r30.w
            mad r30.w, |r26.y|, |r26.y|, r30.w
            mul r26.x, r9.w, r26.x
            mul r30.w, r30.w, r30.w
            mul r30.w, r26.x, r30.w
            rcp r30.w, r30.w
            mul r30.w, r25.x, r30.w
            mul r30.w, r30.w, l(0.250000)
            dp3 r31.w, r45.xyzx, r13.yzwy
            mul r31.w, r31.w, r31.w
            div r31.w, r31.w, r8.z
            add r29.w, r29.w, r31.w
            mad r26.y, |r26.y|, |r26.y|, r29.w
            mul r26.y, r26.y, r26.y
            mul r26.x, r26.x, r26.y
            rcp r26.x, r26.x
            mul r25.x, r25.x, r26.x
            mul r25.x, r25.x, l(0.250000)
            mul r45.xyz, r15.xyzx, r25.xxxx
            mad r45.xyz, r45.xyzx, l(0.830000, 0.830000, 0.830000, 0.000000), r30.wwww
            mul r24.x, r24.x, r30.w
            dp3 r25.x, r27.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mul r25.x, r25.x, r25.w
            lt r26.x, r18.w, r25.x
            if_nz r26.x
              mul r26.x, r21.w, r21.z
              mul r48.xyz, r40.xyzx, r26.xxxx
              mad r22.xyz, r48.xyzx, r42.xyzx, r22.xyzx
              mad r39.xyz, r48.xyzx, r43.xyzx, r39.xyzx
              mad r38.xyz, r48.xyzx, r44.xyzx, r38.xyzx
              mov r21.w, r25.y
              mov r44.xyz, r24.xxxx
              mov r40.xyz, r27.xyzx
              mov r41.xyz, r47.yzwy
              mov r42.xyz, r46.xyzx
              mov r43.xyz, r45.xyzx
              mov r18.w, r25.x
              mov r21.z, r24.y
            else 
              mul r25.xyw, r25.wwww, r27.xyxz
              mad r22.xyz, r25.xywx, r46.zzzz, r22.xyzx
              mad r39.xyz, r25.xywx, r45.xyzx, r39.xyzx
              mad r38.xyz, r25.xywx, r24.xxxx, r38.xyzx
            endif 
          endif 
        endif 
        break 
        default 
        break 
      endswitch 
    endif 
  endloop 
  mov r29.xyz, r22.xyzx
  mov r30.xyz, r38.xyzx
  mov r31.xyz, r39.xyzx
  mov r32.xyz, r40.xyzx
  mov r33.xyz, r41.xyzx
  mov r34.xyz, r42.xyzx
  mov r35.xyz, r43.xyzx
  mov r37.xy, r21.zwzz
  mov r8.y, r18.w
  mov r36.xyz, r44.xyzx
  iadd r14.w, r14.w, l(32)
endloop 
mov r4.z, l(0)
mul r4.xy, r33.yxyy, l(1.000000, -1.000000, 0.000000, 0.000000)
mul r7.xyz, r4.yzxy, r33.zxyz
mad r7.xyz, r33.yzxy, r4.zxyz, -r7.xyzx
mul r8.xyz, r3.yyyy, cb1[9].xywx
mad r8.xyz, r3.xxxx, cb1[8].xywx, r8.xyzx
mad r8.xyz, r3.zzzz, cb1[10].xywx, r8.xyzx
add r8.xyz, r1.yzwy, r8.xyzx
rcp r10.z, r8.z
mul r8.xy, r8.xyxx, r10.zzzz
mad r10.xy, r8.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
mad r3.xyz, r33.xyzx, l(2.400000, 2.400000, 2.400000, 0.000000), r3.xyzx
dp2 r2.w, v0.xyxx, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r2.w, r2.w
mul r2.w, r2.w, l(52.982918)
frc r2.w, r2.w
mul r3.w, r2.w, l(3.141600)
mad r3.w, cb1[70].w, l(0.500000), r3.w
sincos r8.x, r11.x, r3.w
mul r8.xyw, r7.xyxz, r8.xxxx
mad r8.xyw, r11.xxxx, r4.xyxz, r8.xyxw
mad r8.xyw, r8.xyxw, l(0.120000, 0.120000, 0.000000, 0.120000), r3.xyxz
mul r11.xyz, r8.yyyy, cb1[9].xywx
mad r11.xyz, r8.xxxx, cb1[8].xywx, r11.xyzx
mad r8.xyw, r8.wwww, cb1[10].xyxw, r11.xyxz
add r8.xyw, r1.yzyw, r8.xyxw
mul r8.xy, r8.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000)
rcp r11.z, r8.w
mad r11.xy, r8.xyxx, r11.zzzz, l(0.500000, 0.500000, 0.000000, 0.000000)
mov r12.xyz, -r10.xyzx
add r8.xyw, r11.xyxz, r12.xyxz
add r3.w, r3.w, l(3.141600)
sincos r11.x, r13.x, r3.w
mul r7.xyz, r7.xyzx, r11.xxxx
mad r4.xyz, r13.xxxx, r4.xyzx, r7.xyzx
mad r3.xyz, r4.xyzx, l(0.120000, 0.120000, 0.120000, 0.000000), r3.xyzx
mul r4.xyz, r3.yyyy, cb1[9].xywx
mad r3.xyw, r3.xxxx, cb1[8].xyxw, r4.xyxz
mad r3.xyz, r3.zzzz, cb1[10].xywx, r3.xywx
add r1.yzw, r1.yyzw, r3.xxyz
mul r1.yz, r1.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000)
rcp r3.z, r1.w
mad r3.xy, r1.yzyy, r3.zzzz, r12.xyxx
mov r12.w, l(0.500000)
add r1.yzw, r12.wwwz, r3.xxyz
dp2 r3.x, cb1[44].zwzz, cb1[44].zwzz
dp2 r3.y, r8.xyxx, r8.xyxx
sqrt r3.xy, r3.xyxx
rcp r3.y, r3.y
mul r3.x, r3.y, r3.x
mad r3.yz, r2.wwww, l(0.000000, 0.500000, 0.500000, 0.000000), l(0.000000, 0.33333334, 1.000000, 0.000000)
mul r3.yz, r3.yyzy, l(0.000000, 0.11764706, 0.11764706, 0.000000)
mul r3.yz, r3.yyzy, r3.yyzy
mov x1[0].x, r3.y
mad r4.xyz, r8.xywx, r3.yyyy, r10.xyzx
lt r7.xy, r3.xxxx, r3.yzyy
mul r4.xy, r4.xyxx, cb1[44].xyxx
ftoi r11.xy, r4.xyxx
mov r11.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r3.w, r11.xyzw, t0.yzwx
ge r4.x, r3.w, l(0.984375)
mul r4.y, r3.w, l(1.01587307)
mad r3.w, r3.w, l(64.000000), l(-63.000000)
movc r3.w, r4.x, r3.w, r4.y
max r3.w, r3.w, l(0.00000001)
rcp r3.w, r3.w
mov x2[0].x, r3.w
add r4.x, r3.w, l(0.042000)
mul r4.x, r4.x, r4.z
lt r4.x, l(1.000000), r4.x
and r4.x, r4.x, l(0x3f800000)
movc r4.x, r7.x, r4.x, l(1.000000)
mov x0[0].x, r4.x
mov x1[1].x, r3.z
mad r4.yzw, r1.yyzw, r3.zzzz, r10.xxyz
mul r4.yz, r4.yyzy, cb1[44].xxyx
ftoi r11.xy, r4.yzyy
mov r11.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r4.y, r11.xyzw, t0.yxzw
ge r4.z, r4.y, l(0.984375)
mul r7.x, r4.y, l(1.01587307)
mad r4.y, r4.y, l(64.000000), l(-63.000000)
movc r4.y, r4.z, r4.y, r7.x
max r4.y, r4.y, l(0.00000001)
rcp r4.y, r4.y
mov x2[1].x, r4.y
add r4.z, r4.y, l(0.042000)
mul r4.z, r4.z, r4.w
lt r4.z, l(1.000000), r4.z
and r4.z, r4.z, l(0x3f800000)
movc r4.z, r7.y, r4.z, l(1.000000)
mov x0[1].x, r4.z
add r4.w, r4.z, r4.x
ne r4.w, r4.w, l(0.000000)
if_nz r4.w
  mad r7.xy, r2.wwww, l(0.500000, 0.500000, 0.000000, 0.000000), l(1.33333337, 2.000000, 0.000000, 0.000000)
  mul r7.xy, r7.xyxx, l(0.11764706, 0.11764706, 0.000000, 0.000000)
  mad r7.xy, r7.xyxx, r7.xyxx, -r3.yzyy
  mad r3.y, r4.x, r7.x, r3.y
  mov x1[0].x, r3.y
  mad r7.xzw, r8.xxyw, r3.yyyy, r10.xxyz
  lt r3.y, r3.x, r3.y
  mul r7.xz, r7.xxzx, cb1[44].xxyx
  ftoi r11.xy, r7.xzxx
  mov r11.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.w, r11.xyzw, t0.yzwx
  ge r7.x, r4.w, l(0.984375)
  mul r7.z, r4.w, l(1.01587307)
  mad r4.w, r4.w, l(64.000000), l(-63.000000)
  movc r4.w, r7.x, r4.w, r7.z
  max r4.w, r4.w, l(0.00000001)
  rcp r4.w, r4.w
  movc r3.w, r3.y, r4.w, r3.w
  mov x2[0].x, r3.w
  add r3.w, r4.w, l(0.042000)
  mul r3.w, r3.w, r7.w
  lt r3.w, l(1.000000), r3.w
  and r3.w, r3.w, l(0x3f800000)
  mul r3.w, r3.w, r4.x
  movc r3.y, r3.y, r3.w, r4.x
  mov x0[0].x, r3.y
  mad r3.z, r4.z, r7.y, r3.z
  mov x1[1].x, r3.z
  mad r7.xyz, r1.yzwy, r3.zzzz, r10.xyzx
  lt r3.z, r3.x, r3.z
  mul r4.xw, r7.xxxy, cb1[44].xxxy
  ftoi r11.xy, r4.xwxx
  mov r11.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.w, r11.xyzw, t0.yzwx
  ge r4.x, r3.w, l(0.984375)
  mul r4.w, r3.w, l(1.01587307)
  mad r3.w, r3.w, l(64.000000), l(-63.000000)
  movc r3.w, r4.x, r3.w, r4.w
  max r3.w, r3.w, l(0.00000001)
  rcp r3.w, r3.w
  movc r4.x, r3.z, r3.w, r4.y
  mov x2[1].x, r4.x
  add r3.w, r3.w, l(0.042000)
  mul r3.w, r3.w, r7.z
  lt r3.w, l(1.000000), r3.w
  and r3.w, r3.w, l(0x3f800000)
  mul r3.w, r3.w, r4.z
  movc r3.z, r3.z, r3.w, r4.z
  mov x0[1].x, r3.z
  add r3.y, r3.z, r3.y
  eq r3.y, r3.y, l(0.000000)
else 
  mov r3.y, l(-1)
endif 
if_z r3.y
  mad r3.yz, r2.wwww, l(0.000000, 0.500000, 0.500000, 0.000000), l(0.000000, 2.33333325, 3.000000, 0.000000)
  mul r3.yz, r3.yyzy, l(0.000000, 0.11764706, 0.11764706, 0.000000)
  mov r3.w, x1[0].x
  mov r4.x, x0[0].x
  mad r3.y, r3.y, r3.y, -r3.w
  mad r3.y, r4.x, r3.y, r3.w
  mov x1[0].x, r3.y
  mad r4.yzw, r8.xxyw, r3.yyyy, r10.xxyz
  lt r3.y, r3.x, r3.y
  mul r4.yz, r4.yyzy, cb1[44].xxyx
  ftoi r7.xy, r4.yzyy
  mov r7.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.w, r7.xyzw, t0.yzwx
  ge r4.y, r3.w, l(0.984375)
  mul r4.z, r3.w, l(1.01587307)
  mad r3.w, r3.w, l(64.000000), l(-63.000000)
  movc r3.w, r4.y, r3.w, r4.z
  max r3.w, r3.w, l(0.00000001)
  rcp r3.w, r3.w
  mov r4.y, x2[0].x
  movc r4.y, r3.y, r3.w, r4.y
  mov x2[0].x, r4.y
  add r3.w, r3.w, l(0.042000)
  mul r3.w, r3.w, r4.w
  lt r3.w, l(1.000000), r3.w
  and r3.w, r3.w, l(0x3f800000)
  mul r3.w, r3.w, r4.x
  movc r3.y, r3.y, r3.w, r4.x
  mov x0[0].x, r3.y
  mov r3.w, x1[1].x
  mov r4.x, x0[1].x
  mad r3.z, r3.z, r3.z, -r3.w
  mad r3.z, r4.x, r3.z, r3.w
  mov x1[1].x, r3.z
  mad r4.yzw, r1.yyzw, r3.zzzz, r10.xxyz
  lt r3.z, r3.x, r3.z
  mul r4.yz, r4.yyzy, cb1[44].xxyx
  ftoi r7.xy, r4.yzyy
  mov r7.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.w, r7.xyzw, t0.yzwx
  ge r4.y, r3.w, l(0.984375)
  mul r4.z, r3.w, l(1.01587307)
  mad r3.w, r3.w, l(64.000000), l(-63.000000)
  movc r3.w, r4.y, r3.w, r4.z
  max r3.w, r3.w, l(0.00000001)
  rcp r3.w, r3.w
  mov r4.y, x2[1].x
  movc r4.y, r3.z, r3.w, r4.y
  mov x2[1].x, r4.y
  add r3.w, r3.w, l(0.042000)
  mul r3.w, r3.w, r4.w
  lt r3.w, l(1.000000), r3.w
  and r3.w, r3.w, l(0x3f800000)
  mul r3.w, r3.w, r4.x
  movc r3.z, r3.z, r3.w, r4.x
  mov x0[1].x, r3.z
  add r3.y, r3.z, r3.y
  eq r3.y, r3.y, l(0.000000)
else 
  mov r3.y, l(-1)
endif 
if_z r3.y
  mad r3.yz, r2.wwww, l(0.000000, 0.500000, 0.500000, 0.000000), l(0.000000, 3.33333325, 4.000000, 0.000000)
  mul r3.yz, r3.yyzy, l(0.000000, 0.11764706, 0.11764706, 0.000000)
  mov r3.w, x1[0].x
  mov r4.x, x0[0].x
  mad r3.y, r3.y, r3.y, -r3.w
  mad r3.y, r4.x, r3.y, r3.w
  mov x1[0].x, r3.y
  mad r4.yzw, r8.xxyw, r3.yyyy, r10.xxyz
  lt r3.y, r3.x, r3.y
  mul r4.yz, r4.yyzy, cb1[44].xxyx
  ftoi r7.xy, r4.yzyy
  mov r7.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.w, r7.xyzw, t0.yzwx
  ge r4.y, r3.w, l(0.984375)
  mul r4.z, r3.w, l(1.01587307)
  mad r3.w, r3.w, l(64.000000), l(-63.000000)
  movc r3.w, r4.y, r3.w, r4.z
  max r3.w, r3.w, l(0.00000001)
  rcp r3.w, r3.w
  mov r4.y, x2[0].x
  movc r4.y, r3.y, r3.w, r4.y
  mov x2[0].x, r4.y
  add r3.w, r3.w, l(0.042000)
  mul r3.w, r3.w, r4.w
  lt r3.w, l(1.000000), r3.w
  and r3.w, r3.w, l(0x3f800000)
  mul r3.w, r3.w, r4.x
  movc r3.y, r3.y, r3.w, r4.x
  mov x0[0].x, r3.y
  mov r3.w, x1[1].x
  mov r4.x, x0[1].x
  mad r3.z, r3.z, r3.z, -r3.w
  mad r3.z, r4.x, r3.z, r3.w
  mov x1[1].x, r3.z
  mad r4.yzw, r1.yyzw, r3.zzzz, r10.xxyz
  lt r3.z, r3.x, r3.z
  mul r4.yz, r4.yyzy, cb1[44].xxyx
  ftoi r7.xy, r4.yzyy
  mov r7.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.w, r7.xyzw, t0.yzwx
  ge r4.y, r3.w, l(0.984375)
  mul r4.z, r3.w, l(1.01587307)
  mad r3.w, r3.w, l(64.000000), l(-63.000000)
  movc r3.w, r4.y, r3.w, r4.z
  max r3.w, r3.w, l(0.00000001)
  rcp r3.w, r3.w
  mov r4.y, x2[1].x
  movc r4.y, r3.z, r3.w, r4.y
  mov x2[1].x, r4.y
  add r3.w, r3.w, l(0.042000)
  mul r3.w, r3.w, r4.w
  lt r3.w, l(1.000000), r3.w
  and r3.w, r3.w, l(0x3f800000)
  mul r3.w, r3.w, r4.x
  movc r3.z, r3.z, r3.w, r4.x
  mov x0[1].x, r3.z
  add r3.y, r3.z, r3.y
  eq r3.y, r3.y, l(0.000000)
else 
  mov r3.y, l(-1)
endif 
if_z r3.y
  mad r3.yz, r2.wwww, l(0.000000, 0.500000, 0.500000, 0.000000), l(0.000000, 4.33333349, 5.000000, 0.000000)
  mul r3.yz, r3.yyzy, l(0.000000, 0.11764706, 0.11764706, 0.000000)
  mov r3.w, x1[0].x
  mov r4.x, x0[0].x
  mad r3.y, r3.y, r3.y, -r3.w
  mad r3.y, r4.x, r3.y, r3.w
  mov x1[0].x, r3.y
  mad r4.yzw, r8.xxyw, r3.yyyy, r10.xxyz
  lt r3.y, r3.x, r3.y
  mul r4.yz, r4.yyzy, cb1[44].xxyx
  ftoi r7.xy, r4.yzyy
  mov r7.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.w, r7.xyzw, t0.yzwx
  ge r4.y, r3.w, l(0.984375)
  mul r4.z, r3.w, l(1.01587307)
  mad r3.w, r3.w, l(64.000000), l(-63.000000)
  movc r3.w, r4.y, r3.w, r4.z
  max r3.w, r3.w, l(0.00000001)
  rcp r3.w, r3.w
  mov r4.y, x2[0].x
  movc r4.y, r3.y, r3.w, r4.y
  mov x2[0].x, r4.y
  add r3.w, r3.w, l(0.042000)
  mul r3.w, r3.w, r4.w
  lt r3.w, l(1.000000), r3.w
  and r3.w, r3.w, l(0x3f800000)
  mul r3.w, r3.w, r4.x
  movc r3.y, r3.y, r3.w, r4.x
  mov x0[0].x, r3.y
  mov r3.w, x1[1].x
  mov r4.x, x0[1].x
  mad r3.z, r3.z, r3.z, -r3.w
  mad r3.z, r4.x, r3.z, r3.w
  mov x1[1].x, r3.z
  mad r4.yzw, r1.yyzw, r3.zzzz, r10.xxyz
  lt r3.z, r3.x, r3.z
  mul r4.yz, r4.yyzy, cb1[44].xxyx
  ftoi r7.xy, r4.yzyy
  mov r7.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.w, r7.xyzw, t0.yzwx
  ge r4.y, r3.w, l(0.984375)
  mul r4.z, r3.w, l(1.01587307)
  mad r3.w, r3.w, l(64.000000), l(-63.000000)
  movc r3.w, r4.y, r3.w, r4.z
  max r3.w, r3.w, l(0.00000001)
  rcp r3.w, r3.w
  mov r4.y, x2[1].x
  movc r4.y, r3.z, r3.w, r4.y
  mov x2[1].x, r4.y
  add r3.w, r3.w, l(0.042000)
  mul r3.w, r3.w, r4.w
  lt r3.w, l(1.000000), r3.w
  and r3.w, r3.w, l(0x3f800000)
  mul r3.w, r3.w, r4.x
  movc r3.z, r3.z, r3.w, r4.x
  mov x0[1].x, r3.z
  add r3.y, r3.z, r3.y
  eq r3.y, r3.y, l(0.000000)
else 
  mov r3.y, l(-1)
endif 
if_z r3.y
  mad r3.yz, r2.wwww, l(0.000000, 0.500000, 0.500000, 0.000000), l(0.000000, 5.33333349, 6.000000, 0.000000)
  mul r3.yz, r3.yyzy, l(0.000000, 0.11764706, 0.11764706, 0.000000)
  mov r3.w, x1[0].x
  mov r4.x, x0[0].x
  mad r3.y, r3.y, r3.y, -r3.w
  mad r3.y, r4.x, r3.y, r3.w
  mov x1[0].x, r3.y
  mad r4.yzw, r8.xxyw, r3.yyyy, r10.xxyz
  lt r3.y, r3.x, r3.y
  mul r4.yz, r4.yyzy, cb1[44].xxyx
  ftoi r7.xy, r4.yzyy
  mov r7.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.w, r7.xyzw, t0.yzwx
  ge r4.y, r3.w, l(0.984375)
  mul r4.z, r3.w, l(1.01587307)
  mad r3.w, r3.w, l(64.000000), l(-63.000000)
  movc r3.w, r4.y, r3.w, r4.z
  max r3.w, r3.w, l(0.00000001)
  rcp r3.w, r3.w
  mov r4.y, x2[0].x
  movc r4.y, r3.y, r3.w, r4.y
  mov x2[0].x, r4.y
  add r3.w, r3.w, l(0.042000)
  mul r3.w, r3.w, r4.w
  lt r3.w, l(1.000000), r3.w
  and r3.w, r3.w, l(0x3f800000)
  mul r3.w, r3.w, r4.x
  movc r3.y, r3.y, r3.w, r4.x
  mov x0[0].x, r3.y
  mov r3.w, x1[1].x
  mov r4.x, x0[1].x
  mad r3.z, r3.z, r3.z, -r3.w
  mad r3.z, r4.x, r3.z, r3.w
  mov x1[1].x, r3.z
  mad r4.yzw, r1.yyzw, r3.zzzz, r10.xxyz
  lt r3.z, r3.x, r3.z
  mul r4.yz, r4.yyzy, cb1[44].xxyx
  ftoi r7.xy, r4.yzyy
  mov r7.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.w, r7.xyzw, t0.yzwx
  ge r4.y, r3.w, l(0.984375)
  mul r4.z, r3.w, l(1.01587307)
  mad r3.w, r3.w, l(64.000000), l(-63.000000)
  movc r3.w, r4.y, r3.w, r4.z
  max r3.w, r3.w, l(0.00000001)
  rcp r3.w, r3.w
  mov r4.y, x2[1].x
  movc r4.y, r3.z, r3.w, r4.y
  mov x2[1].x, r4.y
  add r3.w, r3.w, l(0.042000)
  mul r3.w, r3.w, r4.w
  lt r3.w, l(1.000000), r3.w
  and r3.w, r3.w, l(0x3f800000)
  mul r3.w, r3.w, r4.x
  movc r3.z, r3.z, r3.w, r4.x
  mov x0[1].x, r3.z
  add r3.y, r3.z, r3.y
  eq r3.y, r3.y, l(0.000000)
else 
  mov r3.y, l(-1)
endif 
if_z r3.y
  mad r3.yz, r2.wwww, l(0.000000, 0.500000, 0.500000, 0.000000), l(0.000000, 6.33333349, 7.000000, 0.000000)
  mul r3.yz, r3.yyzy, l(0.000000, 0.11764706, 0.11764706, 0.000000)
  mov r3.w, x1[0].x
  mov r4.x, x0[0].x
  mad r3.y, r3.y, r3.y, -r3.w
  mad r3.y, r4.x, r3.y, r3.w
  mov x1[0].x, r3.y
  mad r4.yzw, r8.xxyw, r3.yyyy, r10.xxyz
  lt r3.y, r3.x, r3.y
  mul r4.yz, r4.yyzy, cb1[44].xxyx
  ftoi r7.xy, r4.yzyy
  mov r7.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.w, r7.xyzw, t0.yzwx
  ge r4.y, r3.w, l(0.984375)
  mul r4.z, r3.w, l(1.01587307)
  mad r3.w, r3.w, l(64.000000), l(-63.000000)
  movc r3.w, r4.y, r3.w, r4.z
  max r3.w, r3.w, l(0.00000001)
  rcp r3.w, r3.w
  mov r4.y, x2[0].x
  movc r4.y, r3.y, r3.w, r4.y
  mov x2[0].x, r4.y
  add r3.w, r3.w, l(0.042000)
  mul r3.w, r3.w, r4.w
  lt r3.w, l(1.000000), r3.w
  and r3.w, r3.w, l(0x3f800000)
  mul r3.w, r3.w, r4.x
  movc r3.y, r3.y, r3.w, r4.x
  mov x0[0].x, r3.y
  mov r3.w, x1[1].x
  mov r4.x, x0[1].x
  mad r3.z, r3.z, r3.z, -r3.w
  mad r3.z, r4.x, r3.z, r3.w
  mov x1[1].x, r3.z
  mad r4.yzw, r1.yyzw, r3.zzzz, r10.xxyz
  lt r3.z, r3.x, r3.z
  mul r4.yz, r4.yyzy, cb1[44].xxyx
  ftoi r7.xy, r4.yzyy
  mov r7.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.w, r7.xyzw, t0.yzwx
  ge r4.y, r3.w, l(0.984375)
  mul r4.z, r3.w, l(1.01587307)
  mad r3.w, r3.w, l(64.000000), l(-63.000000)
  movc r3.w, r4.y, r3.w, r4.z
  max r3.w, r3.w, l(0.00000001)
  rcp r3.w, r3.w
  mov r4.y, x2[1].x
  movc r4.y, r3.z, r3.w, r4.y
  mov x2[1].x, r4.y
  add r3.w, r3.w, l(0.042000)
  mul r3.w, r3.w, r4.w
  lt r3.w, l(1.000000), r3.w
  and r3.w, r3.w, l(0x3f800000)
  mul r3.w, r3.w, r4.x
  movc r3.z, r3.z, r3.w, r4.x
  mov x0[1].x, r3.z
  add r3.y, r3.z, r3.y
  eq r3.y, r3.y, l(0.000000)
else 
  mov r3.y, l(-1)
endif 
if_z r3.y
  mad r3.yz, r2.wwww, l(0.000000, 0.500000, 0.500000, 0.000000), l(0.000000, 7.33333349, 8.000000, 0.000000)
  mul r3.yz, r3.yyzy, l(0.000000, 0.11764706, 0.11764706, 0.000000)
  mov r2.w, x1[0].x
  mov r3.w, x0[0].x
  mad r3.y, r3.y, r3.y, -r2.w
  mad r2.w, r3.w, r3.y, r2.w
  mad r4.xyz, r8.xywx, r2.wwww, r10.xyzx
  lt r2.w, r3.x, r2.w
  mul r4.xy, r4.xyxx, cb1[44].xyxx
  ftoi r7.xy, r4.xyxx
  mov r7.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.y, r7.xyzw, t0.yxzw
  ge r4.x, r3.y, l(0.984375)
  mul r4.y, r3.y, l(1.01587307)
  mad r3.y, r3.y, l(64.000000), l(-63.000000)
  movc r3.y, r4.x, r3.y, r4.y
  max r3.y, r3.y, l(0.00000001)
  rcp r3.y, r3.y
  mov r4.x, x2[0].x
  movc r4.x, r2.w, r3.y, r4.x
  mov x2[0].x, r4.x
  add r3.y, r3.y, l(0.042000)
  mul r3.y, r3.y, r4.z
  lt r3.y, l(1.000000), r3.y
  and r3.y, r3.y, l(0x3f800000)
  mul r3.y, r3.y, r3.w
  movc r2.w, r2.w, r3.y, r3.w
  mov x0[0].x, r2.w
  mov r2.w, x1[1].x
  mov r3.y, x0[1].x
  mad r3.z, r3.z, r3.z, -r2.w
  mad r2.w, r3.y, r3.z, r2.w
  mad r1.yzw, r1.yyzw, r2.wwww, r10.xxyz
  lt r2.w, r3.x, r2.w
  mul r1.yz, r1.yyzy, cb1[44].xxyx
  ftoi r4.xy, r1.yzyy
  mov r4.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r1.y, r4.xyzw, t0.yxzw
  ge r1.z, r1.y, l(0.984375)
  mul r3.x, r1.y, l(1.01587307)
  mad r1.y, r1.y, l(64.000000), l(-63.000000)
  movc r1.y, r1.z, r1.y, r3.x
  max r1.y, r1.y, l(0.00000001)
  rcp r1.y, r1.y
  mov r1.z, x2[1].x
  movc r1.z, r2.w, r1.y, r1.z
  mov x2[1].x, r1.z
  add r1.y, r1.y, l(0.042000)
  mul r1.y, r1.y, r1.w
  lt r1.y, l(1.000000), r1.y
  and r1.y, r1.y, l(0x3f800000)
  mul r1.y, r1.y, r3.y
  movc r1.y, r2.w, r1.y, r3.y
  mov x0[1].x, r1.y
endif 
mov r1.y, x2[0].x
add r1.y, -r8.z, r1.y
lt r1.y, l(2.400000), |r1.y|
mov r1.z, x0[0].x
mad r1.z, -r1.z, l(0.500000), l(1.000000)
movc r1.y, r1.y, l(0.500000), r1.z
mov r1.z, x2[1].x
add r1.z, -r8.z, r1.z
lt r1.z, l(2.400000), |r1.z|
mov r1.w, x0[1].x
mul r1.w, r1.w, l(0.500000)
movc r1.z, r1.z, l(-0.500000), -r1.w
add r1.y, r1.z, r1.y
add_sat r1.y, -r1.y, l(1.000000)
mad r1.z, r1.y, l(-2.000000), l(3.000000)
mul r1.y, r1.y, r1.y
mul r1.y, r1.y, r1.z
min r1.y, r1.y, r37.y
mul r1.y, r1.y, r37.x
mul r1.yzw, r32.xxyz, r1.yyyy
mad r3.xyz, r1.yzwy, r34.xyzx, r29.xyzx
mad r4.xyz, r1.yzwy, r35.xyzx, r31.xyzx
mad r1.yzw, r1.yyzw, r36.xxyz, r30.xxyz
add r2.w, -r2.y, l(1.000000)
mul r3.w, r2.w, l(5.000000)
mad r4.w, r2.w, l(5.000000), l(-2.500000)
mul r4.w, r4.w, l(0.400000)
max r4.w, r4.w, l(0.000000)
mul r4.w, r4.w, l(100.000000)
mad r7.xy, -r2.wwww, l(10.000000, 5.000000, 0.000000, 0.000000), l(6.857410, 7.085000, 0.000000, 0.000000)
exp r7.x, r7.x
mul r7.x, r2.x, r7.x
mul r7.z, r2.w, r3.w
mad r7.y, -r7.z, l(2.015905), r7.y
exp r7.y, r7.y
mul r7.y, r2.x, r7.y
mul r7.xy, r7.xyxx, l(9.136810, 9.708090, 0.000000, 0.000000)
max r7.x, r7.y, r7.x
max r7.x, r7.x, l(1.268160)
mul r7.yzw, r9.xxyz, r14.zzxy
mad r7.yzw, r9.zzxy, r14.xxyz, -r7.yyzw
mul r8.xyz, r7.yzwy, r14.zxyz
mad r7.yzw, r14.yyzx, r7.zzwy, -r8.xxyz
add r7.yzw, -r6.xxyz, r7.yyzw
mad r7.yzw, cb0[10].wwww, r7.yyzw, r6.xxyz
dp3 r8.x, r7.yzwy, r7.yzwy
rsq r8.x, r8.x
mul r7.yzw, r7.yyzw, r8.xxxx
dp3 r8.x, -r9.xyzx, r7.yzwy
add r8.x, r8.x, r8.x
mad r8.xyz, r7.yzwy, -r8.xxxx, -r9.xyzx
iadd r7.y, cb2[0].y, -cb2[58].x
and r7.z, r7.y, l(-32)
iadd r7.w, -r7.z, r7.y
and r9.w, cb2[0].y, l(-32)
iadd r10.x, -r9.w, cb2[0].y
mul r10.yzw, r14.xxyz, r14.xxyz
mov r11.xy, l(0,0,0,0)
mov r12.w, l(0)
mov r13.yz, l(0,0,1.000000,0)
mov r14.x, l(1.000000)
mov r15.xyzw, l(0,0,0,0)
mov r16.yzw, l(0,0,0,0)
mov r11.w, r7.z
loop 
  uge r13.w, r11.w, cb2[0].y
  breakc_nz r13.w
  ushr r11.z, r11.w, l(5)
  iadd r12.xyz, r11.xyzx, r19.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r11.z, r12.xyzw, t7.yzxw
  ieq r12.x, r7.z, r11.w
  bfi r12.y, r7.w, l(0), l(0), r11.z
  movc r11.z, r12.x, r12.y, r11.z
  ieq r12.x, r9.w, r11.w
  ubfe r12.y, r10.x, l(0), r11.z
  movc r11.z, r12.x, r12.y, r11.z
  iadd r12.x, r11.w, cb2[0].x
  mov r17.xyzw, r15.xyzw
  mov r18.xyz, r16.yzwy
  mov r12.y, r11.z
  loop 
    breakc_z r12.y
    firstbit_lo r12.z, r12.y
    ishl r13.w, l(1), r12.z
    and r14.z, r12.y, r13.w
    if_nz r14.z
      xor r12.y, r12.y, r13.w
      iadd r13.w, r12.z, r12.x
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r20.xyzw, r13.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r21.xy, r13.w, l(16), t11.xyxx
      add r20.xyz, r20.xyzx, -v5.xyzx
      mov r21.z, r20.w
      lt r20.xyz, |r20.xyzx|, r21.zxyz
      and r13.w, r20.y, r20.x
      and r13.w, r20.z, r13.w
      if_nz r13.w
        iadd r12.z, r11.w, r12.z
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r20.xyzw, r12.z, l(0), t15.wxyz
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r14.zw, r12.z, l(96), t15.xxxy
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r21.xyzw, r12.z, l(116), t15.zwxy
        add r22.xyz, -r20.yzwy, v5.xyzx
        and r13.w, r21.w, l(0x0000ffff)
        ubfe r19.w, l(6), l(25), r21.w
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r23.xyzw, r13.w, l(0), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r24.xyzw, r13.w, l(16), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r25.xyzw, r13.w, l(32), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r26.xyzw, r13.w, l(48), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r13.w, l(64), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r13.w, l(80), t16.xyzw
        dp3 r20.w, r23.xyzx, r22.xyzx
        add_sat r20.w, r23.w, r20.w
        dp3 r22.w, r24.xyzx, r22.xyzx
        add_sat r22.w, r24.w, r22.w
        mul r20.w, r20.w, r22.w
        dp3 r22.w, r25.xyzx, r22.xyzx
        add_sat r22.w, r25.w, r22.w
        mul r20.w, r20.w, r22.w
        dp3 r22.w, r26.xyzx, r22.xyzx
        add_sat r22.w, r26.w, r22.w
        mul r20.w, r20.w, r22.w
        dp3 r22.w, r27.xyzx, r22.xyzx
        add_sat r22.w, r27.w, r22.w
        mul r20.w, r20.w, r22.w
        dp3 r22.w, r28.xyzx, r22.xyzx
        add_sat r22.w, r28.w, r22.w
        mul r13.x, r20.w, r22.w
        and r20.w, r14.z, l(1)
        movc r23.xy, r20.wwww, r13.xyxx, r13.zxzz
        mov r13.x, r14.z
        mov r24.xy, r23.xyxx
        mov r20.w, l(1)
        loop 
          ige r22.w, r20.w, r19.w
          breakc_nz r22.w
          iadd r22.w, r13.w, r20.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r25.xyzw, r22.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r26.xyzw, r22.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r22.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r22.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r22.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r22.w, l(80), t16.xyzw
          dp3 r22.w, r25.xyzx, r22.xyzx
          add_sat r22.w, r25.w, r22.w
          mul r22.w, r22.w, r24.x
          dp3 r23.z, r26.xyzx, r22.xyzx
          add_sat r23.z, r26.w, r23.z
          mul r22.w, r22.w, r23.z
          dp3 r23.z, r27.xyzx, r22.xyzx
          add_sat r23.z, r27.w, r23.z
          mul r22.w, r22.w, r23.z
          dp3 r23.z, r28.xyzx, r22.xyzx
          add_sat r23.z, r28.w, r23.z
          mul r22.w, r22.w, r23.z
          dp3 r23.z, r29.xyzx, r22.xyzx
          add_sat r23.z, r29.w, r23.z
          mul r22.w, r22.w, r23.z
          dp3 r23.z, r30.xyzx, r22.xyzx
          add_sat r23.z, r30.w, r23.z
          mul r24.x, r22.w, r23.z
          ushr r23.w, r13.x, l(2)
          ubfe r24.z, l(1), l(2), r13.x
          and r24.w, r23.w, l(2)
          max r25.x, r24.x, r24.y
          mad r22.w, -r22.w, r23.z, l(1.000000)
          mul r22.w, r22.w, r24.y
          movc r14.y, r24.w, r22.w, r25.x
          movc r24.xy, r24.zzzz, r24.xyxx, r14.xyxx
          iadd r20.w, r20.w, l(1)
          mov r13.x, r23.w
        endloop 
        mov_sat r24.y, r24.y
        mul r13.x, r14.w, r24.y
        lt r13.w, l(0.000000), r13.x
        if_nz r13.w
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r23.xyzw, r12.z, l(16), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r12.z, l(32), t15.yxwz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r12.z, l(48), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r12.z, l(64), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r12.z, l(80), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r12.z, l(132), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r12.z, l(148), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r12.z, l(164), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r12.z, l(180), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r12.z, l(196), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xy, r12.z, l(212), t15.xyxx
          mad r18.z, r24.y, r14.w, r18.z
          mul r12.z, r21.z, r13.x
          mov r21.z, r29.z
          dp3 r13.x, r8.xyzx, r21.xyzx
          dp3 r13.w, r22.xyzx, r21.xyzx
          add r13.w, -r29.w, r13.w
          ge r14.y, r13.w, l(0.000000)
          max r13.w, r4.w, |r13.w|
          movc r13.w, r14.y, r13.w, -r13.w
          max r13.x, -r13.x, l(0.00000010)
          div r13.x, r13.w, r13.x
          min r13.x, |r13.x|, l(131072.000000)
          mov r29.z, r30.z
          dp3 r13.w, r8.xyzx, r29.xyzx
          dp3 r14.y, r22.xyzx, r29.xyzx
          add r14.y, -r30.w, r14.y
          ge r14.z, r14.y, l(0.000000)
          max r14.y, r4.w, |r14.y|
          movc r14.y, r14.z, r14.y, -r14.y
          max r13.w, -r13.w, l(0.00000010)
          div r13.w, r14.y, r13.w
          min r13.x, |r13.w|, r13.x
          mov r30.z, r31.z
          dp3 r13.w, r8.xyzx, r30.xyzx
          dp3 r14.y, r22.xyzx, r30.xyzx
          add r14.y, -r31.w, r14.y
          ge r14.z, r14.y, l(0.000000)
          max r14.y, r4.w, |r14.y|
          movc r14.y, r14.z, r14.y, -r14.y
          max r13.w, -r13.w, l(0.00000010)
          div r13.w, r14.y, r13.w
          min r13.x, |r13.w|, r13.x
          mov r31.z, r32.z
          dp3 r13.w, r8.xyzx, r31.xyzx
          dp3 r14.y, r22.xyzx, r31.xyzx
          add r14.y, -r32.w, r14.y
          ge r14.z, r14.y, l(0.000000)
          max r14.y, r4.w, |r14.y|
          movc r14.y, r14.z, r14.y, -r14.y
          max r13.w, -r13.w, l(0.00000010)
          div r13.w, r14.y, r13.w
          min r13.x, |r13.w|, r13.x
          mov r32.z, r33.x
          dp3 r13.w, r8.xyzx, r32.xyzx
          dp3 r14.y, r22.xyzx, r32.xyzx
          add r14.y, -r33.y, r14.y
          ge r14.z, r14.y, l(0.000000)
          max r14.y, r4.w, |r14.y|
          movc r14.y, r14.z, r14.y, -r14.y
          max r13.w, -r13.w, l(0.00000010)
          div r13.w, r14.y, r13.w
          min r13.x, |r13.w|, r13.x
          mov r34.zw, r33.zzzw
          dp3 r13.w, r8.zxyz, r34.xzwx
          dp3 r14.y, r22.zxyz, r34.xzwx
          add r14.y, -r34.y, r14.y
          ge r14.z, r14.y, l(0.000000)
          max r14.y, r4.w, |r14.y|
          movc r14.y, r14.z, r14.y, -r14.y
          max r13.w, -r13.w, l(0.00000010)
          div r13.w, r14.y, r13.w
          min r13.x, |r13.w|, r13.x
          mov r21.x, r26.w
          mov r21.yz, r27.zzwz
          add r14.yzw, r22.xxyz, r21.xxyz
          mad r14.yzw, r8.xxyz, r13.xxxx, r14.yyzw
          dp3 r13.w, r14.yzwy, r14.yzwy
          sqrt r13.w, r13.w
          div r13.x, r13.x, r13.w
          add r13.x, r13.x, r13.x
          sqrt r13.x, r13.x
          mad r13.x, r2.w, l(5.000000), r13.x
          add r13.x, r13.x, l(-0.844800)
          mov r20.y, r23.z
          mov r20.z, r25.x
          dp3 r29.x, r14.yzwy, r20.xyzx
          mov r21.xy, r23.xwxx
          mov r21.z, r25.w
          dp3 r29.y, r14.yzwy, r21.xyzx
          mov r25.x, r23.y
          dp3 r29.z, r14.yzwy, r25.xyzx
          ubfe r13.w, l(9), l(16), r21.w
          utof r29.w, r13.w
          sample_l_indexable(texturecubearray)(float,float,float,float) r14.yzw, r29.xyzw, t8.wxyz, s2, r13.x
          dp3 r23.x, r22.xyzx, r20.xyzx
          dp3 r23.y, r22.xyzx, r21.xyzx
          dp3 r23.z, r22.xyzx, r25.xyzx
          mad_sat r22.xyz, r23.xyzx, r26.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
          mov r27.z, r28.x
          mad r22.xyz, r22.xyzx, r27.xyzx, r28.yzwy
          dp3 r29.x, r6.xyzx, r20.xyzx
          dp3 r29.y, r6.xyzx, r21.xyzx
          dp3 r29.z, r6.xyzx, r25.xyzx
          sample_l_indexable(texture3d)(float,float,float,float) r20.xyz, r22.xyzx, t17.xyzw, s4, l(0.000000)
          add r21.xyz, r22.xyzx, l(0.000000, 0.000000, 0.500000, 0.000000)
          sample_l_indexable(texture3d)(float,float,float,float) r23.xyz, r21.xyzx, t17.xyzw, s4, l(0.000000)
          sample_l_indexable(texture3d)(float,float,float,float) r24.xzw, r22.xyzx, t18.xwyz, s4, l(0.000000)
          sample_l_indexable(texture3d)(float,float,float,float) r25.xyz, r21.xyzx, t18.xyzw, s4, l(0.000000)
          sample_l_indexable(texture3d)(float,float,float,float) r22.xyz, r22.xyzx, t19.xyzw, s4, l(0.000000)
          sample_l_indexable(texture3d)(float,float,float,float) r21.xyz, r21.xyzx, t19.xyzw, s4, l(0.000000)
          add r26.xyz, r24.xzwx, r25.xyzx
          add r26.xyz, r22.xyzx, r26.xyzx
          add r26.xyz, r21.xyzx, r26.xyzx
          mul r26.xyz, r10.yyyy, r26.xyzx
          add r20.xyz, r20.xyzx, r23.xyzx
          add r22.xyz, r22.xyzx, r20.xyzx
          add r21.xyz, r21.xyzx, r22.xyzx
          mul r21.xyz, r10.zzzz, r21.xyzx
          add r20.xyz, r24.xzwx, r20.xyzx
          add r20.xyz, r25.xyzx, r20.xyzx
          mul r20.xyz, r10.wwww, r20.xyzx
          mul r21.xyz, r21.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000)
          mad r21.xyz, r26.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000), r21.xyzx
          mad r20.xyz, r20.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000), r21.xyzx
          mul r20.xyz, r12.zzzz, r20.xyzx
          sample_l_indexable(texturecubearray)(float,float,float,float) r21.xyz, r29.xyzw, t8.xyzw, s2, l(6.000000)
          mul r22.xyz, r20.xyzx, r21.xyzx
          dp3 r13.x, r22.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r17.xyz, r20.xyzx, r21.xyzx, r17.xyzx
          mul r13.w, r7.x, r13.x
          mul r14.yzw, r12.zzzz, r14.yyzw
          dp3 r12.z, r14.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r12.z, r7.x, r13.x, r12.z
          div r12.z, r13.w, r12.z
          mov r20.x, r17.w
          mov r20.yz, r18.xxyx
          mad r18.xyw, r14.zwzy, r12.zzzz, r20.yzyx
          mov r17.w, r18.w
        endif 
      endif 
    endif 
  endloop 
  mov r15.xyzw, r17.xyzw
  mov r16.yzw, r18.xxyz
  iadd r11.w, r11.w, l(32)
endloop 
lt r9.w, r16.w, l(1.000000)
if_nz r9.w
  mov r11.xy, l(0,0,0,0)
  mov r12.w, l(0)
  mov r13.yz, l(0,0,1.000000,0)
  mov r14.x, l(1.000000)
  mov r17.x, r15.w
  mov r17.yzw, r16.yyzw
  mov r18.xyz, r15.xyzx
  mov r9.w, r16.w
  mov r10.x, l(0)
  loop 
    uge r11.w, r10.x, r7.y
    breakc_nz r11.w
    ushr r11.z, r10.x, l(5)
    iadd r12.xyz, r11.xyzx, r19.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r11.z, r12.xyzw, t7.yzxw
    ieq r11.w, r7.z, r10.x
    ubfe r12.x, r7.w, l(0), r11.z
    movc r11.z, r11.w, r12.x, r11.z
    iadd r11.w, r10.x, cb2[0].x
    mov r20.xyzw, r17.xyzw
    mov r12.xyz, r18.xyzx
    mov r13.w, r9.w
    mov r14.z, r11.z
    loop 
      breakc_z r14.z
      firstbit_lo r14.w, r14.z
      ishl r18.w, l(1), r14.w
      and r19.w, r14.z, r18.w
      if_nz r19.w
        xor r14.z, r14.z, r18.w
        iadd r18.w, r11.w, r14.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r21.xyzw, r18.w, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r22.xy, r18.w, l(16), t11.xyxx
        add r21.xyz, r21.xyzx, -v5.xyzx
        mov r22.z, r21.w
        lt r21.xyz, |r21.xyzx|, r22.zxyz
        and r18.w, r21.y, r21.x
        and r18.w, r21.z, r18.w
        if_nz r18.w
          iadd r14.w, r10.x, r14.w
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r21.xyzw, r14.w, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r22.xy, r14.w, l(96), t15.xyxx
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r23.xyzw, r14.w, l(116), t15.zwxy
          add r24.xyz, -r21.yzwy, v5.xyzx
          and r18.w, r23.w, l(0x0000ffff)
          ubfe r19.w, l(6), l(25), r23.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r25.xyzw, r18.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r26.xyzw, r18.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r18.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r18.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r18.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r18.w, l(80), t16.xyzw
          dp3 r21.w, r25.xyzx, r24.xyzx
          add_sat r21.w, r25.w, r21.w
          dp3 r22.z, r26.xyzx, r24.xyzx
          add_sat r22.z, r26.w, r22.z
          mul r21.w, r21.w, r22.z
          dp3 r22.z, r27.xyzx, r24.xyzx
          add_sat r22.z, r27.w, r22.z
          mul r21.w, r21.w, r22.z
          dp3 r22.z, r28.xyzx, r24.xyzx
          add_sat r22.z, r28.w, r22.z
          mul r21.w, r21.w, r22.z
          dp3 r22.z, r29.xyzx, r24.xyzx
          add_sat r22.z, r29.w, r22.z
          mul r21.w, r21.w, r22.z
          dp3 r22.z, r30.xyzx, r24.xyzx
          add_sat r22.z, r30.w, r22.z
          mul r13.x, r21.w, r22.z
          and r21.w, r22.x, l(1)
          movc r22.zw, r21.wwww, r13.xxxy, r13.zzzx
          mov r13.x, r22.x
          mov r25.xy, r22.zwzz
          mov r21.w, l(1)
          loop 
            ige r24.w, r21.w, r19.w
            breakc_nz r24.w
            iadd r24.w, r18.w, r21.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r26.xyzw, r24.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r24.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r24.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r24.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r24.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r24.w, l(80), t16.xyzw
            dp3 r24.w, r26.xyzx, r24.xyzx
            add_sat r24.w, r26.w, r24.w
            mul r24.w, r24.w, r25.x
            dp3 r25.z, r27.xyzx, r24.xyzx
            add_sat r25.z, r27.w, r25.z
            mul r24.w, r24.w, r25.z
            dp3 r25.z, r28.xyzx, r24.xyzx
            add_sat r25.z, r28.w, r25.z
            mul r24.w, r24.w, r25.z
            dp3 r25.z, r29.xyzx, r24.xyzx
            add_sat r25.z, r29.w, r25.z
            mul r24.w, r24.w, r25.z
            dp3 r25.z, r30.xyzx, r24.xyzx
            add_sat r25.z, r30.w, r25.z
            mul r24.w, r24.w, r25.z
            dp3 r25.z, r31.xyzx, r24.xyzx
            add_sat r25.z, r31.w, r25.z
            mul r25.x, r24.w, r25.z
            ushr r25.w, r13.x, l(2)
            ubfe r26.x, l(1), l(2), r13.x
            and r26.y, r25.w, l(2)
            max r26.z, r25.x, r25.y
            mad r24.w, -r24.w, r25.z, l(1.000000)
            mul r24.w, r24.w, r25.y
            movc r14.y, r26.y, r24.w, r26.z
            movc r25.xy, r26.xxxx, r25.xyxx, r14.xyxx
            iadd r21.w, r21.w, l(1)
            mov r13.x, r25.w
          endloop 
          add_sat r13.x, -r13.w, r25.y
          mul r14.y, r22.y, r13.x
          lt r18.w, l(0.000000), r14.y
          if_nz r18.w
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r14.w, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r14.w, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r14.w, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r14.w, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r14.w, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r14.w, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r14.w, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r14.w, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r14.w, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r14.w, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xy, r14.w, l(212), t15.xyxx
            mad r20.w, r13.x, r22.y, r20.w
            mul r13.x, r23.z, r14.y
            mov r23.z, r31.z
            dp3 r14.y, r8.xyzx, r23.xyzx
            dp3 r14.w, r24.xyzx, r23.xyzx
            add r14.w, -r31.w, r14.w
            ge r18.w, r14.w, l(0.000000)
            max r14.w, r4.w, |r14.w|
            movc r14.w, r18.w, r14.w, -r14.w
            max r14.y, -r14.y, l(0.00000010)
            div r14.y, r14.w, r14.y
            min r14.y, |r14.y|, l(131072.000000)
            mov r31.z, r32.z
            dp3 r14.w, r8.xyzx, r31.xyzx
            dp3 r18.w, r24.xyzx, r31.xyzx
            add r18.w, -r32.w, r18.w
            ge r19.w, r18.w, l(0.000000)
            max r18.w, r4.w, |r18.w|
            movc r18.w, r19.w, r18.w, -r18.w
            max r14.w, -r14.w, l(0.00000010)
            div r14.w, r18.w, r14.w
            min r14.y, |r14.w|, r14.y
            mov r32.z, r33.z
            dp3 r14.w, r8.xyzx, r32.xyzx
            dp3 r18.w, r24.xyzx, r32.xyzx
            add r18.w, -r33.w, r18.w
            ge r19.w, r18.w, l(0.000000)
            max r18.w, r4.w, |r18.w|
            movc r18.w, r19.w, r18.w, -r18.w
            max r14.w, -r14.w, l(0.00000010)
            div r14.w, r18.w, r14.w
            min r14.y, |r14.w|, r14.y
            mov r33.z, r34.z
            dp3 r14.w, r8.xyzx, r33.xyzx
            dp3 r18.w, r24.xyzx, r33.xyzx
            add r18.w, -r34.w, r18.w
            ge r19.w, r18.w, l(0.000000)
            max r18.w, r4.w, |r18.w|
            movc r18.w, r19.w, r18.w, -r18.w
            max r14.w, -r14.w, l(0.00000010)
            div r14.w, r18.w, r14.w
            min r14.y, |r14.w|, r14.y
            mov r34.z, r35.x
            dp3 r14.w, r8.xyzx, r34.xyzx
            dp3 r18.w, r24.xyzx, r34.xyzx
            add r18.w, -r35.y, r18.w
            ge r19.w, r18.w, l(0.000000)
            max r18.w, r4.w, |r18.w|
            movc r18.w, r19.w, r18.w, -r18.w
            max r14.w, -r14.w, l(0.00000010)
            div r14.w, r18.w, r14.w
            min r14.y, |r14.w|, r14.y
            mov r36.zw, r35.zzzw
            dp3 r14.w, r8.zxyz, r36.xzwx
            dp3 r18.w, r24.zxyz, r36.xzwx
            add r18.w, -r36.y, r18.w
            ge r19.w, r18.w, l(0.000000)
            max r18.w, r4.w, |r18.w|
            movc r18.w, r19.w, r18.w, -r18.w
            max r14.w, -r14.w, l(0.00000010)
            div r14.w, r18.w, r14.w
            min r14.y, |r14.w|, r14.y
            mov r22.x, r28.w
            mov r22.yz, r29.zzwz
            add r22.xyz, r24.xyzx, r22.xyzx
            mad r22.xyz, r8.xyzx, r14.yyyy, r22.xyzx
            dp3 r14.w, r22.xyzx, r22.xyzx
            sqrt r14.w, r14.w
            div r14.y, r14.y, r14.w
            add r14.y, r14.y, r14.y
            sqrt r14.y, r14.y
            mad r14.y, r2.w, l(5.000000), r14.y
            add r14.y, r14.y, l(-0.844800)
            mov r21.y, r26.z
            mov r21.z, r27.x
            dp3 r31.x, r22.xyzx, r21.xyzx
            mov r23.xy, r26.xwxx
            mov r23.z, r27.w
            dp3 r31.y, r22.xyzx, r23.xyzx
            mov r27.x, r26.y
            dp3 r31.z, r22.xyzx, r27.xyzx
            ubfe r14.w, l(9), l(16), r23.w
            utof r31.w, r14.w
            sample_l_indexable(texturecubearray)(float,float,float,float) r22.xyz, r31.xyzw, t8.xyzw, s2, r14.y
            dp3 r26.x, r24.xyzx, r21.xyzx
            dp3 r26.y, r24.xyzx, r23.xyzx
            dp3 r26.z, r24.xyzx, r27.xyzx
            mad_sat r24.xyz, r26.xyzx, r28.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
            mov r29.z, r30.x
            mad r24.xyz, r24.xyzx, r29.xyzx, r30.yzwy
            dp3 r31.x, r6.xyzx, r21.xyzx
            dp3 r31.y, r6.xyzx, r23.xyzx
            dp3 r31.z, r6.xyzx, r27.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r21.xyz, r24.xyzx, t17.xyzw, s4, l(0.000000)
            add r23.xyz, r24.xyzx, l(0.000000, 0.000000, 0.500000, 0.000000)
            sample_l_indexable(texture3d)(float,float,float,float) r25.xzw, r23.xyzx, t17.xwyz, s4, l(0.000000)
            sample_l_indexable(texture3d)(float,float,float,float) r26.xyz, r24.xyzx, t18.xyzw, s4, l(0.000000)
            sample_l_indexable(texture3d)(float,float,float,float) r27.xyz, r23.xyzx, t18.xyzw, s4, l(0.000000)
            sample_l_indexable(texture3d)(float,float,float,float) r24.xyz, r24.xyzx, t19.xyzw, s4, l(0.000000)
            sample_l_indexable(texture3d)(float,float,float,float) r23.xyz, r23.xyzx, t19.xyzw, s4, l(0.000000)
            add r28.xyz, r26.xyzx, r27.xyzx
            add r28.xyz, r24.xyzx, r28.xyzx
            add r28.xyz, r23.xyzx, r28.xyzx
            mul r28.xyz, r10.yyyy, r28.xyzx
            add r21.xyz, r21.xyzx, r25.xzwx
            add r24.xyz, r24.xyzx, r21.xyzx
            add r23.xyz, r23.xyzx, r24.xyzx
            mul r23.xyz, r10.zzzz, r23.xyzx
            add r21.xyz, r26.xyzx, r21.xyzx
            add r21.xyz, r27.xyzx, r21.xyzx
            mul r21.xyz, r10.wwww, r21.xyzx
            mul r23.xyz, r23.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000)
            mad r23.xyz, r28.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000), r23.xyzx
            mad r21.xyz, r21.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000), r23.xyzx
            mul r21.xyz, r13.xxxx, r21.xyzx
            sample_l_indexable(texturecubearray)(float,float,float,float) r23.xyz, r31.xyzw, t8.xyzw, s2, l(6.000000)
            mul r24.xyz, r21.xyzx, r23.xyzx
            dp3 r14.y, r24.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r12.xyz, r21.xyzx, r23.xyzx, r12.xyzx
            mul r14.w, r7.x, r14.y
            mul r21.xyz, r13.xxxx, r22.xyzx
            dp3 r13.x, r21.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r13.x, r7.x, r14.y, r13.x
            div r13.x, r14.w, r13.x
            mad r20.xyz, r21.xyzx, r13.xxxx, r20.xyzx
          endif 
        endif 
      endif 
    endloop 
    mov r17.xyzw, r20.xyzw
    mov r18.xyz, r12.xyzx
    iadd r10.x, r10.x, l(32)
  endloop 
  mov r16.xyzw, r17.zxyw
  mov r15.xyz, r18.xyzx
  mov r16.xyzw, r16.yzxw
else 
  mov r16.x, r15.w
endif 
max r2.w, r16.w, l(1.000000)
rcp r2.w, r2.w
mov_sat r16.w, r16.w
mul r7.xyz, r2.wwww, r15.xyzx
mul r11.xyz, r2.wwww, r16.xyzx
lt r4.w, r16.w, l(0.990000)
if_nz r4.w
  add r4.w, -r16.w, l(1.000000)
  mul r7.w, r4.w, cb2[19].x
  add r12.xyz, v5.xyzx, -cb2[35].xyzx
  mul r13.x, r12.x, cb2[35].w
  mul r13.yz, r12.yyzy, cb2[36].xxyx
  add_sat r12.xyz, r13.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mul r13.xy, r12.xyxx, cb2[36].zwzz
  mul r13.z, r12.z, cb2[37].x
  add r12.xyz, r13.xyzx, cb2[37].yzwy
  sample_l_indexable(texture3d)(float,float,float,float) r13.xyz, r12.xyzx, t17.xyzw, s4, l(0.000000)
  add r14.xyz, r12.xyzx, l(0.000000, 0.000000, 0.500000, 0.000000)
  sample_l_indexable(texture3d)(float,float,float,float) r16.xyz, r14.xyzx, t17.xyzw, s4, l(0.000000)
  sample_l_indexable(texture3d)(float,float,float,float) r17.xyz, r12.xyzx, t18.xyzw, s4, l(0.000000)
  sample_l_indexable(texture3d)(float,float,float,float) r18.xyz, r14.xyzx, t18.xyzw, s4, l(0.000000)
  sample_l_indexable(texture3d)(float,float,float,float) r12.xyz, r12.xyzx, t19.xyzw, s4, l(0.000000)
  sample_l_indexable(texture3d)(float,float,float,float) r14.xyz, r14.xyzx, t19.xyzw, s4, l(0.000000)
  add r19.xyz, r17.xyzx, r18.xyzx
  add r19.xyz, r12.xyzx, r19.xyzx
  add r19.xyz, r14.xyzx, r19.xyzx
  mul r19.xyz, r10.yyyy, r19.xyzx
  add r13.xyz, r13.xyzx, r16.xyzx
  add r12.xyz, r12.xyzx, r13.xyzx
  add r12.xyz, r14.xyzx, r12.xyzx
  mul r10.xyz, r10.zzzz, r12.xyzx
  add r12.xyz, r17.xyzx, r13.xyzx
  add r12.xyz, r18.xyzx, r12.xyzx
  mul r12.xyz, r10.wwww, r12.xyzx
  mul r10.xyz, r10.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000)
  mad r10.xyz, r19.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000), r10.xyzx
  mad r10.xyz, r12.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000), r10.xyzx
  mul r10.xyz, r7.wwww, r10.xyzx
  mov r6.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r6.xyz, r6.xyzw, t8.xyzw, s2, l(6.000000)
  mul r6.xyz, r6.xyzx, r10.xyzx
  dp3 r6.w, r6.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  mad r7.xyz, r15.xyzx, r2.wwww, r6.xyzx
  mov r8.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r6.xyz, r8.xyzw, t8.xyzw, s2, r3.w
  mad r2.w, cb2[19].x, r4.w, -r6.w
  mad r2.w, r2.y, r2.w, r6.w
  mad r11.xyz, r6.xyzx, r2.wwww, r11.xyzx
endif 
mad r3.xyz, r7.xyzx, r1.xxxx, r3.xyzx
mad r2.xy, r2.xyxx, l(0.984375, 0.984375, 0.000000, 0.000000), l(0.00781250, 0.00781250, 0.000000, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r2.xy, r2.xyxx, t5.xyzw, s2, l(0.000000)
mul r6.xyz, r1.xxxx, r11.xyzx
mad r1.xyz, r6.xyzx, r2.xxxx, r1.yzwy
mad r2.xyw, r6.xyxz, r2.yyyy, r4.xyxz
mul r1.w, r2.z, l(0.040000)
mad r2.z, -r2.z, l(0.040000), l(1.000000)
mul r1.xyz, r1.xyzx, r2.zzzz
mad r1.xyz, r2.xywx, r1.wwww, r1.xyzx
mad r0.xyz, r3.xyzx, r0.xyzx, r1.xyzx
if_nz cb0[11].w
  dp3 r1.x, r5.xyzx, r9.xyzx
  eq r1.yzw, cb0[12].yyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  and r1.y, r1.z, r1.y
  mul r2.xy, cb0[12].yzyy, l(0.01745329, 0.01745329, 0.000000, 0.000000)
  sincos null, r2.xy, r2.xyxx
  mul r2.yz, r2.xxyx, r2.xxyx
  mad r1.z, r2.x, r2.x, -r2.z
  div r3.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.z
  mad r3.y, -r2.y, r3.x, l(1.000000)
  movc r1.yz, r1.yyyy, l(0,0,1.000000,0), r3.xxyx
  mul r1.x, |r1.x|, |r1.x|
  mad_sat r1.x, r1.x, r1.y, r1.z
  mul r1.x, r0.w, r1.x
  ftoi r2.xy, v0.xyxx
  mov r2.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r1.y, r2.xyzw, t0.yxzw
  ge r1.z, r1.y, l(0.984375)
  mul r2.x, r1.y, l(1.01587307)
  mad r1.y, r1.y, l(64.000000), l(-63.000000)
  movc r1.y, r1.z, r1.y, r2.x
  max r1.y, r1.y, l(0.00000001)
  rcp r1.y, r1.y
  div r1.z, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[12].x
  movc r1.z, r1.w, l(60000.000000), r1.z
  add r1.y, -r5.w, r1.y
  mul_sat r1.y, r1.z, r1.y
  mul o0.w, r1.y, r1.x
else 
  mov o0.w, r0.w
endif 
lt r0.w, l(0.000000), cb2[9].z
if_nz r0.w
  dp3 r0.w, v5.xyzx, v5.xyzx
  rsq r1.x, r0.w
  mul r1.xyz, r1.xxxx, v5.xyzx
  sqrt r0.w, r0.w
  lt r1.w, l(0.000000), cb2[13].w
  if_nz r1.w
    mad r2.xy, r0.wwww, cb2[15].xyxx, cb2[14].zwzz
    mul r2.xy, r2.xyxx, cb2[16].xyxx
    lt r1.w, l(0.010000), |v5.z|
    mul r2.zw, v5.zzzz, cb2[15].zzzw
    mul r3.xy, r2.zwzz, l(-1.442695, -1.442695, 0.000000, 0.000000)
    exp r3.xy, r3.xyxx
    add r3.xy, -r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    div r2.zw, r3.xxxy, r2.zzzw
    mul r2.zw, r2.zzzw, r2.xxxy
    movc r2.xy, r1.wwww, r2.zwzz, r2.xyxx
    mul r2.xzw, r2.xxxx, cb2[12].xxyz
    exp r2.xzw, r2.xxzw
    mul r3.xyz, r2.yyyy, cb2[12].xyzx
    exp r3.xyz, r3.xyzx
    add r3.xyz, -r2.xzwx, r3.xyzx
    mad r2.xyz, cb2[13].wwww, r3.xyzx, r2.xzwx
  else 
    mad r1.w, r0.w, cb2[15].x, cb2[14].z
    mul r1.w, r1.w, cb2[16].x
    lt r2.w, l(0.010000), |v5.z|
    mul r3.x, v5.z, cb2[15].z
    mul r3.y, r3.x, l(-1.442695)
    exp r3.y, r3.y
    add r3.y, -r3.y, l(1.000000)
    div r3.x, r3.y, r3.x
    mul r3.x, r1.w, r3.x
    movc r1.w, r2.w, r3.x, r1.w
    mul r3.xyz, r1.wwww, cb2[12].xyzx
    exp r2.xyz, r3.xyzx
  endif 
  mad r2.xyz, r2.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r2.xyz, r2.xyzx, -cb2[9].zzzz
  dp3 r1.x, cb2[7].yzwy, -r1.xyzx
  mad r1.y, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r1.z, cb2[8].w, -r1.x, l(1.000000)
  mul r1.z, r1.z, r1.z
  mul r1.z, r1.z, l(12.566371)
  div r1.y, r1.y, r1.z
  add r0.w, r0.w, -cb2[10].w
  mul_sat r0.w, r0.w, cb2[11].w
  mul r0.w, r0.w, r1.y
  mov_sat r1.x, r1.x
  mad r1.x, r1.x, r1.x, l(1.000000)
  mad r1.x, r1.x, l(0.05968310), l(-1.000000)
  mad r1.x, cb2[8].z, r1.x, l(1.000000)
  mul r1.yzw, r0.wwww, cb2[11].xxyz
  mad r1.xyz, r1.xxxx, cb2[10].xyzx, r1.yzwy
  mul r1.xyz, r1.xyzx, cb2[9].wwww
  add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r1.xyz, r1.xyzx, r3.xyzx
  mad r1.xyz, r0.xyzx, r2.xyzx, r1.xyzx
else 
  mul r0.w, v5.z, cb2[6].x
  mad r1.w, cb2[6].x, v5.z, cb2[5].x
  lt r2.x, |r0.w|, l(0.000100)
  min r2.y, r1.w, l(64.000000)
  mul r2.y, r2.y, l(1.442695)
  exp r2.y, r2.y
  mov_sat r2.z, cb2[6].z
  lt r2.w, r1.w, l(0.000000)
  add r1.w, r1.w, l(1.000000)
  movc r1.w, r2.w, r2.y, r1.w
  add r1.w, r1.w, -cb2[6].z
  movc r0.w, r2.x, l(1.000000), r0.w
  div r0.w, r1.w, r0.w
  movc r0.w, r2.x, r2.z, r0.w
  mul r0.w, r0.w, cb2[5].z
  dp3 r1.w, v5.xyzx, v5.xyzx
  sqrt r2.x, r1.w
  mad r0.w, r0.w, r2.x, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  rsq r1.w, r1.w
  mul r2.xyz, r1.wwww, v5.xyzx
  dp3 r1.w, cb2[7].yzwy, r2.xyzx
  mad_sat r1.w, cb2[8].y, r1.w, cb2[8].x
  add r2.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r2.xyzw, r1.wwww, r2.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r2.w
  add r2.xyz, -r0.xyzx, r2.xyzx
  mad r1.xyz, r0.wwww, r2.xyzx, r0.xyzx
endif 
mul r0.xyz, r1.xyzx, cb1[85].yyyy
ge r1.xyz, r0.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.xyz, r0.xyzx, r1.xyzx
min o0.xyz, r0.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
ret 
// Approximately 2322 instruction slots used
