//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:36:50 2021
//
//
// Note: shader requires additional functionality:
//       Early depth-stencil
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float baseNormalHeight;            // Offset:  160 Size:     4
//   float2 glossRange;                 // Offset:  164 Size:     8
//   float anisotropy;                  // Offset:  172 Size:     4
//   float3 secondColorTint;            // Offset:  176 Size:    12
//   bool useAlphaControls;             // Offset:  188 Size:     4
//   float zFeatherDistance;            // Offset:  192 Size:     4
//   float falloffBegin;                // Offset:  196 Size:     4
//   float falloffEnd;                  // Offset:  200 Size:     4
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4 [unused]
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// colorSampler                      sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// specColorSampler                  sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// normalSampler                     sampler      NA          NA             s5      1 
// aoSampler                         sampler      NA          NA             s6      1 
// LinearSampler                     sampler      NA          NA             s7      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// floatZSampler                     texture  float4          2d             t0      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// colorMap                          texture  float4          2d            t21      1 
// normalMap                         texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// glossMap                          texture  float4          2d            t24      1 
// aoMap                             texture  float4          2d            t25      1 
// flowMap                           texture  float4          2d            t26      1 
// cavityMap                         texture  float4          2d            t29      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// gOit_Pixels                           UAV    uint          2d             u6      1 
// gOit_Nodes                            UAV   uint2     2darray             u7      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyz 
// COLOR                    1   x           1     NONE   float   x   
// TEXCOORD                 0    yz         1     NONE   float    yz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// OFFPOSITION              0   xyz         5     NONE   float   xyz 
// SV_IsFrontFace           0   x           6    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | forceEarlyDepthStencil
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[13], immediateIndexed
dcl_constantbuffer CB1[86], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2d (float,float,float,float) t26
dcl_resource_texture2d (float,float,float,float) t29
dcl_resource_texture2darray (float,float,float,float) t31
dcl_uav_typed_texture2d (uint,uint,uint,uint) u6
dcl_uav_typed_texture2darray (uint,uint,uint,uint) u7
dcl_input_ps_siv linear noperspective v0.xyz, position
dcl_input_ps linear v1.x
dcl_input_ps linear v1.yz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps_sgv constant v6.x, is_front_face
dcl_output o0.xyzw
dcl_temps 61
dcl_indexableTemp x0[4], 4
dcl_indexableTemp x1[4], 4
dcl_indexableTemp x2[4], 4
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.yzyy, t21.xyzw, s1
mul r1.w, r0.w, v1.x
eq r0.w, r1.w, l(0.000000)
if_nz r0.w
  mov o0.xyzw, l(0,0,0,0)
  ret 
endif 
sample_indexable(texture2d)(float,float,float,float) r0.w, v1.yzyy, t24.yzwx, s3
sample_indexable(texture2d)(float,float,float,float) r2.x, v1.yzyy, t22.zxyw, s5
sample_indexable(texture2d)(float,float,float,float) r2.y, v1.yzyy, t25.yxzw, s6
add r2.z, -cb0[10].y, cb0[10].z
mad r0.w, r0.w, r2.z, cb0[10].y
mul_sat r0.w, r0.w, l(0.05882353)
mul r2.x, r2.x, cb0[10].x
mul r2.x, r2.x, r2.x
mul r2.x, r2.x, l(0.33333334)
min r2.x, r2.x, l(1.000000)
mul r0.w, r0.w, l(-17.000000)
exp r0.w, r0.w
add r0.w, r0.w, r2.x
log r0.w, r0.w
mul r0.w, r0.w, l(-0.05882353)
max r3.y, r0.w, l(0.000000)
mul r2.xzw, cb1[9].xxyw, -cb1[24].yyyy
mad r2.xzw, -cb1[24].xxxx, cb1[8].xxyw, r2.xxzw
mad r2.xzw, -cb1[24].zzzz, cb1[10].xxyw, r2.xxzw
add r2.xzw, r2.xxzw, cb1[11].xxyw
add r4.xyz, v5.xyzx, cb1[24].xyzx
sample_indexable(texture2d)(float,float,float,float) r0.w, v1.yzyy, t29.yzwx, s7
sample_indexable(texture2d)(float,float,float,float) r5.xyzw, v1.yzyy, t26.xyzw, s7
mul r3.z, r5.w, l(0.173648)
mad r5.xyz, r5.xyzx, l(1.99218750, 1.99218750, 1.99218750, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
movc r6.xyz, v6.xxxx, v2.xyzx, -v2.xyzx
dp3 r3.w, r6.xyzx, r6.xyzx
rsq r3.w, r3.w
mul r6.xyz, r3.wwww, r6.xyzx
movc r7.xyz, v6.xxxx, v3.xyzx, -v3.xyzx
dp3 r3.w, r7.xyzx, r7.xyzx
rsq r3.w, r3.w
mul r7.xyz, r3.wwww, r7.xyzx
movc r8.xyz, v6.xxxx, v4.xyzx, -v4.xyzx
dp3 r3.w, r8.xyzx, r8.xyzx
rsq r3.w, r3.w
mul r8.xyz, r3.wwww, r8.xyzx
mul r8.xyz, r5.yyyy, r8.xyzx
mad r5.xyw, r7.xyxz, r5.xxxx, r8.xyxz
mad r5.xyz, r6.xyzx, r5.zzzz, r5.xywx
dp3 r3.w, r5.xyzx, r5.xyzx
rsq r3.w, r3.w
mul r7.xyz, r3.wwww, r5.xyzx
mul r8.xyz, r6.zxyz, r7.yzxy
mad r8.xyz, r6.yzxy, r7.zxyz, -r8.xyzx
mul r9.xyz, r7.zxyz, r8.yzxy
mad r7.xyz, r7.yzxy, r8.zxyz, -r9.xyzx
ftou r9.xy, v0.xyxx
ge r5.w, v0.z, l(0.984375)
mul r6.w, v0.z, l(1.01587307)
mad r8.w, v0.z, l(64.000000), l(-63.000000)
movc r5.w, r5.w, r8.w, r6.w
max r5.w, r5.w, l(0.00000001)
rcp r5.w, r5.w
dp3 r6.w, -v5.xyzx, -v5.xyzx
rsq r6.w, r6.w
mul r10.xyz, r6.wwww, -v5.xyzx
utof r9.zw, r9.yyyx
dp2 r8.w, r9.wzww, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r8.w, r8.w
mul r8.w, r8.w, l(52.982918)
frc r8.w, r8.w
mad r8.w, r8.w, l(6.28318548), cb1[70].w
sincos r11.x, r12.x, r8.w
dp2 r8.w, r9.zwzz, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r8.w, r8.w
mul r8.w, r8.w, l(52.982918)
frc r8.w, r8.w
mad r8.w, r8.w, l(6.28318548), cb1[70].w
sincos r13.x, r14.x, r8.w
dp3_sat r3.x, r7.xyzx, r10.xyzx
mul r8.w, r3.y, l(17.000000)
exp r8.w, r8.w
add r8.w, r8.w, l(2.000000)
div r8.w, l(2.000000), r8.w
sqrt r9.z, r8.w
mul r13.yzw, r3.zzzz, r7.xxyz
mad r14.yzw, r5.xxyz, r3.wwww, r13.yyzw
dp3 r3.z, r14.yzwy, r14.yzwy
rsq r3.z, r3.z
mul r15.xyz, r3.zzzz, r14.yzwy
mul r16.xyz, r0.xyzx, cb0[11].xyzx
sqrt r3.z, r9.z
mad r3.z, r3.z, l(0.500000), l(0.500000)
mul r3.z, r3.z, r3.z
mul r9.z, r3.z, l(0.500000)
mad r3.z, -r3.z, l(0.500000), l(1.000000)
mad r9.w, r3.x, r3.z, r9.z
mul r3.z, r3.z, r9.w
mul r9.z, r9.w, r9.z
mad r5.xyz, r5.xyzx, r3.wwww, -r13.yzwy
mov_sat r3.w, cb0[10].w
add r3.w, -r3.w, l(1.000000)
mul r3.w, r3.y, r3.w
mul r3.w, r3.w, l(17.000000)
exp r3.w, r3.w
add r3.w, r3.w, l(2.000000)
div r3.w, l(2.000000), r3.w
mul r9.w, r3.w, r8.w
sqrt r9.w, r9.w
mul r13.yzw, v5.yyyy, cb2[29].xxyz
mad r13.yzw, v5.xxxx, cb2[28].xxyz, r13.yyzw
mad r13.yzw, v5.zzzz, cb2[30].xxyz, r13.yyzw
add r13.yzw, r13.yyzw, cb2[31].xxyz
add r10.w, r13.w, -cb2[17].w
mad r10.w, -r10.w, l(0.00006104), l(1.000000)
mov_sat r11.z, r10.w
eq r11.z, r10.w, r11.z
if_nz r11.z
  mov r11.zw, l(0,0,0,0)
  loop 
    ge r12.w, r11.z, l(3.000000)
    breakc_nz r12.w
    ftou r12.w, r11.z
    add r17.xy, r13.yzyy, -cb2[r12.w + 20].xyxx
    max r15.w, |r17.y|, |r17.x|
    mul r11.w, r15.w, cb2[r12.w + 20].z
    lt r12.w, r11.w, l(1.000000)
    if_nz r12.w
      break 
    endif 
    add r11.z, r11.z, l(1.000000)
    mov r11.w, l(0)
  endloop 
else 
  mov r11.zw, l(0,0,3.000000,0)
endif 
ge r12.w, r11.z, l(3.000000)
if_nz r12.w
  mul r17.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
  rcp r18.xz, r17.xxxx
  mov r18.y, -r18.z
  mad r17.xyz, r13.yzyy, r18.xyzx, r17.yzyy
  add r18.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
  max r17.xyz, r17.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  min r17.xyz, r18.xyzx, r17.xyzx
  mul r18.xy, r17.zyzz, cb2[32].xxxx
  round_ni r18.xy, r18.xyxx
  mul r15.w, r18.y, cb2[27].x
  mad r15.w, r15.w, cb2[32].x, r18.x
  ftou r15.w, r15.w
  iadd r15.w, r15.w, cb2[32].y
  ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.w, r15.w, l(0), t23.xxxx
  and r17.w, r16.w, l(0x40000000)
  ishl r18.x, r16.w, l(2)
  if_z r17.w
    and r17.w, r16.w, l(0x01ffffff)
    iadd r19.x, r15.w, r17.w
    ushr r15.w, r16.w, l(25)
    utof r15.w, r15.w
    mul r17.xyz, r15.wwww, r17.xyzx
    frc r17.xyz, r17.xyzx
    mul r17.xyz, r17.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
    ftou r17.xyz, r17.xyzx
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.z, r19.x, l(0), t23.xxxx
    ushr r18.yz, r17.zzyz, l(0, 6, 6, 0)
    and r15.w, r19.z, l(0xc0000000)
    iadd r16.w, r19.x, l(1)
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.w, r16.w, l(0), t23.xxxx
    movc r16.w, r18.z, r19.z, r16.w
    ushr r17.w, r16.w, l(13)
    movc r16.w, r18.y, r17.w, r16.w
    and r16.w, r16.w, l(8191)
    iadd r20.x, r16.w, r19.x
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.z, r20.x, l(0), t23.xxxx
    mov r19.y, l(0)
    mov r20.y, l(1)
    movc r18.yzw, r15.wwww, r19.xxyz, r20.xxyz
    movc r20.yz, r15.wwww, l(0,6,1,0), l(0,5,2,0)
    ushr r21.xy, r17.zyzz, r20.yyyy
    and r21.xy, r21.xyxx, l(1, 1, 0, 0)
    and r16.w, r18.w, l(0xc0000000)
    iadd r17.w, r18.y, l(1)
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.w, r17.w, l(0), t23.xxxx
    movc r17.w, r21.y, r18.w, r17.w
    ushr r19.w, r17.w, l(13)
    movc r17.w, r21.x, r19.w, r17.w
    and r17.w, r17.w, l(8191)
    iadd r20.x, r17.w, r18.y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.w, r20.x, l(0), t23.xxxx
    movc r18.yzw, r16.wwww, r18.yyzw, r20.xxzw
    movc r18.yzw, r15.wwww, r19.xxyz, r18.yyzw
    and r15.w, r18.w, l(0xc0000000)
    if_z r15.w
      iadd r15.w, -r18.z, l(6)
      ushr r19.xy, r17.zyzz, r15.wwww
      or r15.w, r18.w, l(0x40000000)
      bfi r16.w, l(1), l(1), r19.y, l(0)
      bfi r16.w, l(1), l(0), r19.x, r16.w
      imul null, r16.w, r16.w, l(10)
      ushr r15.w, r15.w, r16.w
      and r15.w, r15.w, l(1023)
      iadd r19.x, r15.w, r18.y
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.w, r19.x, l(0), t23.xxxx
      iadd r19.yz, r18.zzzz, l(0, 1, 2, 0)
      iadd r15.w, -r19.y, l(6)
      ushr r20.xy, r17.zyzz, r15.wwww
      and r15.w, r19.w, l(0xc0000000)
      or r16.w, r19.w, l(0x40000000)
      bfi r17.w, l(1), l(1), r20.y, l(0)
      bfi r17.w, l(1), l(0), r20.x, r17.w
      imul null, r17.w, r17.w, l(10)
      ushr r16.w, r16.w, r17.w
      and r16.w, r16.w, l(1023)
      iadd r20.x, r16.w, r19.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.z, r20.x, l(0), t23.xxxx
      mov r20.y, r19.z
      movc r20.xyz, r15.wwww, r19.xywx, r20.xyzx
      iadd r16.w, -r20.y, l(6)
      ushr r19.yz, r17.zzyz, r16.wwww
      and r16.w, r20.z, l(0xc0000000)
      or r17.w, r20.z, l(0x40000000)
      bfi r18.z, l(1), l(1), r19.z, l(0)
      bfi r18.z, l(1), l(0), r19.y, r18.z
      imul null, r18.z, r18.z, l(10)
      ushr r17.w, r17.w, r18.z
      and r17.w, r17.w, l(1023)
      iadd r21.x, r17.w, r20.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r21.y, r21.x, l(0), t23.xxxx
      movc r19.yz, r16.wwww, r20.xxzx, r21.xxyx
      movc r18.yw, r15.wwww, r19.xxxw, r19.yyyz
    endif 
    and r15.w, r18.w, l(0xc0000000)
    if_z r15.w
      ubfe r16.w, l(14), l(15), r18.w
      utof r16.w, r16.w
      mul r16.w, r16.w, cb2[27].w
      mul r16.w, r16.w, l(0.00006104)
      and r19.xy, r18.wwww, l(0x00007fff, 0x20000000, 0, 0)
      utof r17.w, r19.x
      mul r17.w, r17.w, cb2[27].w
      mul r17.w, r17.w, l(0.00003052)
      and r18.z, r17.y, l(3)
      iadd r18.z, r18.z, r18.y
      iadd r18.z, r18.z, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.z, l(0), t23.xxxx
      bfi r19.xzw, l(2, 0, 2, 1), l(3, 0, 1, 4), r17.xxyz, l(0, 0, 0, 0)
      ushr r17.x, r18.z, r19.x
      and r17.x, r17.x, l(255)
      utof r17.x, r17.x
      mul r17.x, r17.w, r17.x
      mad r17.x, r17.x, l(0.00392157), r16.w
      iadd r17.y, r19.z, l(1)
      ubfe r17.z, l(1), l(1), r17.z
      iadd r17.y, r17.z, r17.y
      iadd r17.y, r17.y, r18.y
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.y, r17.y, l(0), t23.xxxx
      ushr r17.y, r17.y, r19.w
      and r17.y, r17.y, l(0x0000ffff)
      utof r17.y, r17.y
      mul r17.y, r17.w, r17.y
      mad r16.w, r17.y, l(0.00001526), r16.w
      movc r18.x, r19.y, r17.x, r16.w
    else 
      and r16.w, r18.w, l(0x80000000)
      iadd r17.x, r18.y, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.x, r17.x, l(0), t23.xxxx
      movc r16.w, r16.w, r17.x, l(0)
      ishl r17.x, r18.w, l(2)
      ushr r17.y, r16.w, l(16)
      f16tof32 r17.y, r17.y
      and r16.w, r16.w, l(0x0000ffff)
      f16tof32 r16.w, r16.w
      mad r17.x, r13.y, r17.y, r17.x
      mad r16.w, r13.z, r16.w, r17.x
      movc r18.x, r15.w, r16.w, r18.x
    endif 
  endif 
  mad r13.w, -cb2[27].z, l(2.000000), r13.w
  lt r13.w, r18.x, r13.w
  movc r17.y, r13.w, l(0), l(1.000000)
endif 
if_z r12.w
  if_z cb2[58].y
    ftou r12.w, r11.z
    add r17.zw, r13.yyyz, -cb2[r12.w + 20].xxxy
    mul r17.zw, r17.zzzw, cb2[r12.w + 20].zzzz
    mad r18.xy, r17.zwzz, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    itof r12.w, cb2[26].y
    add r18.z, r11.z, r12.w
    sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.w, r18.xyzx, t13.xxxx, s13, r10.w
    sample_l_indexable(texture2darray)(float,float,float,float) r13.w, r18.xyzx, t31.yzwx, s0, l(0.000000)
    add r12.w, r12.w, r13.w
    add_sat r12.w, r12.w, l(-1.000000)
    mul r13.w, r12.w, r12.w
    mul r17.y, r12.w, r13.w
  endif 
  if_nz cb2[58].y
    mov r18.x, -r11.x
    ftou r12.w, r11.z
    add r11.z, r11.z, l(1.000000)
    min r11.z, r11.z, l(2.000000)
    add r11.w, -r11.w, l(1.000000)
    mul r11.w, r11.w, l(28.000000)
    ftou r11.zw, r11.zzzw
    add r17.zw, r13.yyyz, -cb2[r12.w + 20].xxxy
    mul r17.zw, r17.zzzw, cb2[r12.w + 20].zzzz
    mad r17.zw, r17.zzzw, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
    add r13.yz, r13.yyzy, -cb2[r11.z + 20].xxyx
    mul r13.yz, r13.yyzy, cb2[r11.z + 20].zzzz
    mad r13.yz, r13.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
    mov r18.y, r12.x
    mov r18.z, r11.x
    mov r13.w, l(0)
    mov r15.w, l(0)
    loop 
      uge r16.w, r15.w, l(8)
      breakc_nz r16.w
      ult r16.w, r11.w, r15.w
      movc r19.xy, r16.wwww, r13.yzyy, r17.zwzz
      movc r18.w, r16.w, cb2[r11.z + 20].w, cb2[r12.w + 20].w
      movc r16.w, r16.w, r11.z, r12.w
      dp2 r20.x, icb[r15.w + 0].yxyy, r18.xyxx
      dp2 r20.y, icb[r15.w + 0].yxyy, r18.yzyy
      mad r19.xy, r20.xyxx, r18.wwww, r19.xyxx
      iadd r16.w, r16.w, cb2[26].y
      utof r19.z, r16.w
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r16.w, r19.xyzx, t13.xxxx, s13, r10.w
      sample_l_indexable(texture2darray)(float,float,float,float) r18.w, r19.xyzx, t31.yzwx, s0, l(0.000000)
      add r16.w, r16.w, r18.w
      add_sat r16.w, r16.w, l(-1.000000)
      mad r13.w, r16.w, l(0.125000), r13.w
      iadd r15.w, r15.w, l(1)
    endloop 
    mul r10.w, r13.w, r13.w
    mul r17.y, r13.w, r10.w
  endif 
endif 
and r10.w, cb2[53].x, l(0x0000ffff)
if_nz r10.w
  iadd r10.w, r10.w, cb2[0].x
  iadd r10.w, r10.w, l(-1)
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r11.z, r10.w, l(52), t12.xxxx
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r10.w, l(68), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.xyzw, r10.w, l(84), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r20.xyzw, r10.w, l(132), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r21.xyzw, r10.w, l(148), t12.xyzw
  dp3 r11.w, cb2[17].xyzx, r7.xyzx
  mad r11.w, |r11.w|, l(-0.200000), l(0.400000)
  mad r22.xyz, r7.xyzx, r11.wwww, v5.xyzx
  mov r22.w, l(1.000000)
  dp4 r18.x, r18.xyzw, r22.xyzw
  dp4 r18.y, r19.xyzw, r22.xyzw
  mad r13.yz, r18.xxyx, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
  add r13.yz, r21.zzwz, r13.yyzy
  mul r13.yz, r21.xxyx, r13.yyzy
  div r17.zw, r11.zzzz, r20.xxxz
  add r18.xy, -r17.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
  ge r18.xy, r13.yzyy, r18.xyxx
  ge r17.zw, r17.zzzw, r13.yyyz
  or r17.zw, r17.zzzw, r18.xxxy
  or r11.w, r17.w, r17.z
  if_z r11.w
    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r11.w, r10.w, l(28), t12.xxxx
    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r10.w, l(100), t12.xyzw
    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.zw, r10.w, l(164), t12.xxxy
    dp4 r10.w, r18.xyzw, r22.xyzw
    mov_sat r13.yz, r13.yyzy
    mad r18.xy, r13.yzyy, r20.xzxx, r20.ywyy
    add r10.w, r17.z, r10.w
    div r10.w, r10.w, r17.w
    max r10.w, r10.w, l(0.00006104)
    and r11.w, r11.w, l(0x0000ffff)
    if_nz cb2[58].y
      mov r19.x, -r11.x
      utof r20.z, r11.w
      mov r19.y, r12.x
      mov r19.z, r11.x
      mov r12.w, l(0)
      mov r13.y, l(0)
      loop 
        ige r13.z, r13.y, l(8)
        breakc_nz r13.z
        dp2 r21.x, icb[r13.y + 0].yxyy, r19.xyxx
        dp2 r21.y, icb[r13.y + 0].yxyy, r19.yzyy
        mad r20.xy, r21.xyxx, r11.zzzz, r18.xyxx
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r13.z, r20.xyzx, t9.xxxx, s13, r10.w
        mad r12.w, r13.z, l(0.125000), r12.w
        iadd r13.y, r13.y, l(1)
      endloop 
    else 
      utof r18.z, r11.w
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.w, r18.xyzx, t9.xxxx, s13, r10.w
    endif 
    mul r10.w, r12.w, r12.w
    mul r10.w, r12.w, r10.w
  else 
    mov r10.w, l(1.000000)
  endif 
  mul r17.y, r10.w, r17.y
endif 
lt r10.w, l(0.000000), r17.y
if_nz r10.w
  dp3_sat r10.w, r7.xyzx, cb2[17].xyzx
  if_nz cb2[23].x
    mov r4.w, l(1.000000)
    dp4 r11.z, cb2[24].xyzw, r4.xyzw
    dp4 r4.w, cb2[25].xyzw, r4.xyzw
    frc r18.x, r11.z
    frc r18.y, r4.w
    iadd r4.w, l(-1), cb2[23].x
    utof r18.z, r4.w
    sample_l_indexable(texture2darray)(float,float,float,float) r13.yzw, r18.xyzx, t20.wxyz, s2, l(0.000000)
    add r13.yzw, r13.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
    mad r13.yzw, cb2[23].yyyy, r13.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
    mul r13.yzw, r13.yyzw, cb2[18].xxyz
  else 
    mov r13.yzw, cb2[18].xxyz
  endif 
  dp3 r4.w, r5.xyzx, cb2[17].xyzx
  mad r4.w, -r4.w, r4.w, l(1.000000)
  sqrt r18.xyz, r4.wwww
  mad r19.xyz, -v5.xyzx, r6.wwww, cb2[17].xyzx
  dp3 r4.w, r19.xyzx, r19.xyzx
  rsq r4.w, r4.w
  mul r19.xyz, r4.wwww, r19.xyzx
  dp3 r4.w, r19.xyzx, r10.xyzx
  add_sat r4.w, -r4.w, l(1.000000)
  mul r6.w, r4.w, r4.w
  mul r6.w, r6.w, r6.w
  mul r4.w, r4.w, r6.w
  mad r6.w, r10.w, r3.z, r9.z
  dp3 r11.z, r7.xyzx, r19.xyzx
  dp3 r11.w, r19.xyzx, r8.xyzx
  dp3 r12.w, r19.xyzx, r5.xyzx
  mul r12.w, r12.w, r12.w
  div r12.w, r12.w, r8.w
  mul r11.w, r11.w, r11.w
  div r11.w, r11.w, r3.w
  add r12.w, r11.w, r12.w
  mad r12.w, |r11.z|, |r11.z|, r12.w
  mul r6.w, r6.w, r9.w
  mul r12.w, r12.w, r12.w
  mul r12.w, r6.w, r12.w
  rcp r12.w, r12.w
  mul r12.w, r10.w, r12.w
  mul r12.w, r12.w, l(0.250000)
  dp3 r15.w, r19.xyzx, r14.yzwy
  mul r15.w, r15.w, r15.w
  div r15.w, r15.w, r8.w
  add r11.w, r11.w, r15.w
  mad r11.z, |r11.z|, |r11.z|, r11.w
  mul r11.z, r11.z, r11.z
  mul r6.w, r6.w, r11.z
  rcp r6.w, r6.w
  mul r6.w, r10.w, r6.w
  mul r6.w, r6.w, l(0.250000)
  mul r19.xyz, r16.xyzx, r6.wwww
  mad r19.xyz, r19.xyzx, l(0.830000, 0.830000, 0.830000, 0.000000), r12.wwww
  mul r11.zw, r4.wwww, r12.wwww
  dp3 r4.w, r13.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
  mul r4.w, r4.w, r17.y
  mov r17.x, l(1.000000)
  mov r17.zw, cb2[17].xxxy
  mov r6.w, cb2[17].z
  mov r10.w, r11.w
else 
  mov r4.w, l(0)
  mov r13.yzw, l(0,0,0,0)
  mov r17.xyzw, l(0,0,0,0)
  mov r18.xyz, l(0,0,0,0)
  mov r6.w, l(0)
  mov r19.xyz, l(0,0,0,0)
  mov r10.w, l(0)
  mov r11.zw, l(0,0,0,0)
endif 
mul r12.w, r5.w, l(0.00781250)
min r12.w, r12.w, l(15.000000)
ftou r12.w, r12.w
ushr r20.xy, r9.xyxx, l(6, 6, 0, 0)
ishl r20.z, r12.w, l(4)
mov r21.x, -r11.x
mov r22.xy, l(0,0,0,0)
mov r23.w, l(0)
mov r24.xyz, v5.xyzx
mov r24.w, l(1.000000)
mov r25.w, l(1.000000)
mov r21.z, r11.x
mov r26.z, l(1.000000)
mov r27.w, l(1.000000)
mov r21.yw, r12.xxxx
mov r11.y, r21.w
mov r28.w, l(1.000000)
mov r12.y, r21.x
mov r12.z, r11.x
mov r29.x, r12.x
mov r29.y, r21.x
mov r29.z, r11.x
mov r30.xyz, l(0,0,0,0)
mov r31.xyz, l(0,0,0,0)
mov r32.xyz, l(0,0,0,0)
mov r33.xyz, r13.yzwy
mov r34.xy, r17.zwzz
mov r34.z, r6.w
mov r35.xyz, r18.xyzx
mov r36.xyz, r19.xyzx
mov r37.x, r10.w
mov r37.yz, r11.zzwz
mov r9.x, cb2[58].y
mov r9.y, r4.w
mov r38.xy, r17.xyxx
mov r12.w, l(0)
loop 
  uge r15.w, r12.w, cb2[0].x
  breakc_nz r15.w
  ushr r22.z, r12.w, l(5)
  iadd r23.xyz, r20.xyzx, r22.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r15.w, r23.xyzw, t6.yzwx
  mov r23.xyz, r30.xyzx
  mov r39.xyz, r31.xyzx
  mov r40.xyz, r32.xyzx
  mov r41.xyz, r33.xyzx
  mov r42.xyz, r34.xyzx
  mov r43.xyz, r35.xyzx
  mov r44.xyz, r36.xyzx
  mov r22.zw, r38.xxxy
  mov r16.w, r9.x
  mov r18.w, r9.y
  mov r45.xyz, r37.xyzx
  mov r19.w, r15.w
  loop 
    breakc_z r19.w
    firstbit_lo r20.w, r19.w
    ishl r26.w, l(1), r20.w
    and r29.w, r19.w, r26.w
    if_nz r29.w
      xor r19.w, r19.w, r26.w
      iadd r20.w, r12.w, r20.w
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r46.xyzw, r20.w, l(0), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r47.xy, r20.w, l(16), t12.xyxx
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r48.xyzw, r20.w, l(28), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r49.xyzw, r20.w, l(44), t12.wxyz
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r50.xyzw, r20.w, l(60), t12.zwxy
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r51.xyzw, r20.w, l(76), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r52.xyzw, r20.w, l(92), t12.zwxy
      ubfe r26.w, l(3), l(24), r48.x
      switch r26.w
        case l(4)
        lt r26.w, l(0.000000), r52.x
        mov r53.x, r51.w
        mov r53.yz, r52.zzwz
        mad r54.xyz, -r53.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r46.xyzx
        add r55.xyz, r54.xyzx, -v5.xyzx
        dp3 r29.w, r53.xyzx, r55.xyzx
        div_sat r29.w, -r29.w, r52.x
        mad r53.xyz, r29.wwww, r53.xyzx, r54.xyzx
        movc r53.xyz, r26.wwww, r53.xyzx, r46.xyzx
        add r53.xyz, r53.xyzx, -v5.xyzx
        dp3 r26.w, r53.xyzx, r53.xyzx
        sqrt r29.w, r26.w
        mul r30.w, r49.z, r49.z
        div r30.w, r30.w, r26.w
        min r30.w, r30.w, l(1.000000)
        mad_sat r31.w, r29.w, r48.y, r48.z
        mad_sat r29.w, r29.w, r48.w, r49.y
        mul r32.w, r31.w, r31.w
        mad r31.w, r31.w, l(-2.000000), l(3.000000)
        mul r31.w, r31.w, r32.w
        mul r30.w, r30.w, r31.w
        mul r31.w, r29.w, r29.w
        mad r29.w, r29.w, l(-2.000000), l(3.000000)
        mul r29.w, r29.w, r31.w
        mul r29.w, r29.w, r30.w
        lt r30.w, l(0.000000), r29.w
        if_nz r30.w
          rsq r26.w, r26.w
          mul r54.xyz, r26.wwww, r53.xyzx
          dp3 r30.w, r7.xyzx, r54.xyzx
          ubfe r38.zw, l(0, 0, 3, 4), l(0, 0, 27, 20), r48.xxxx
          ine r31.w, r38.z, l(1)
          if_nz r31.w
            mad r31.w, |r30.w|, l(-0.200000), l(0.400000)
            mad r55.xyz, r7.xyzx, r31.wwww, v5.xyzx
            mov r50.z, r51.x
            add r55.xyz, -r50.xyzx, r55.xyzx
            max r31.w, |r55.z|, |r55.y|
            max r31.w, r31.w, |r55.x|
            div r31.w, r51.y, r31.w
            add r31.w, r51.z, r31.w
            dp3 r32.w, r55.xyzx, r55.xyzx
            rsq r32.w, r32.w
            max r31.w, r31.w, l(0.00006104)
            and r33.w, r48.x, l(0x0000ffff)
            utof r56.w, r33.w
            mov r33.w, l(0)
            mov r34.w, l(0)
            loop 
              ige r35.w, r34.w, l(8)
              breakc_nz r35.w
              dp2 r57.y, icb[r34.w + 0].yxyy, r21.xyxx
              dp2 r57.z, icb[r34.w + 0].yxyy, r21.yzyy
              mul r57.yz, r49.wwww, r57.yyzy
              mul r57.x, r14.x, r57.y
              mul r57.w, r13.x, r57.y
              mad r56.xyz, r55.xyzx, r32.wwww, r57.xzwx
              sample_c_lz_indexable(texturecubearray)(float,float,float,float) r35.w, r56.xyzw, t10.xxxx, s13, r31.w
              mad r33.w, r35.w, l(0.125000), r33.w
              iadd r34.w, r34.w, l(1)
            endloop 
          else 
            mov r33.w, l(1.000000)
          endif 
          if_nz r38.w
            iadd r31.w, r38.w, cb2[0].x
            iadd r31.w, r31.w, l(-1)
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.w, r31.w, l(52), t12.xxxx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r55.xyzw, r31.w, l(100), t12.xyzw
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r56.xyzw, r31.w, l(116), t12.xyzw
            mad r34.w, |r30.w|, l(-0.200000), l(0.400000)
            mad r25.xyz, r7.xyzx, r34.wwww, v5.xyzx
            dp4 r34.w, r55.xyzw, r25.xyzw
            dp4 r35.w, r56.xyzw, r25.xyzw
            lt r36.w, r35.w, r34.w
            if_z r36.w
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r55.xyzw, r31.w, l(68), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r56.xyzw, r31.w, l(84), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r57.xyzw, r31.w, l(132), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r58.xyzw, r31.w, l(148), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.zw, r31.w, l(164), t12.xxxy
              dp4 r55.x, r55.xyzw, r25.xyzw
              dp4 r55.y, r56.xyzw, r25.xyzw
              div r25.xy, r55.xyxx, r35.wwww
              mad r25.xy, r25.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
              add r25.xy, r58.zwzz, r25.xyxx
              mul r25.xy, r58.xyxx, r25.xyxx
              div r55.xy, r32.wwww, r57.xzxx
              add r55.zw, -r55.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
              ge r55.zw, r25.xxxy, r55.zzzw
              ge r55.xy, r55.xyxx, r25.xyxx
              or r55.xy, r55.xyxx, r55.zwzz
              or r25.z, r55.y, r55.x
              mov_sat r25.xy, r25.xyxx
              mad r55.xy, r25.xyxx, r57.xzxx, r57.ywyy
              mul r25.x, r35.w, r38.w
              mad r25.y, r38.z, r35.w, r34.w
              div r25.x, r25.y, r25.x
            else 
              mov r25.z, l(-1)
            endif 
            or r25.y, r36.w, r25.z
            if_z r25.y
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r25.y, r31.w, l(28), t12.xxxx
              max r25.x, r25.x, l(0.00006104)
              and r25.y, r25.y, l(0x0000ffff)
              if_nz r16.w
                utof r56.z, r25.y
                mov r25.z, l(0)
                mov r31.w, l(0)
                loop 
                  ige r34.w, r31.w, l(8)
                  breakc_nz r34.w
                  dp2 r57.x, icb[r31.w + 0].yxyy, r21.xwxx
                  dp2 r57.y, icb[r31.w + 0].xyxx, r11.xyxx
                  mad r56.xy, r57.xyxx, r32.wwww, r55.xyxx
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r34.w, r56.xyzx, t9.xxxx, s13, r25.x
                  mad r25.z, r34.w, l(0.125000), r25.z
                  iadd r31.w, r31.w, l(1)
                endloop 
              else 
                utof r55.z, r25.y
                sample_c_lz_indexable(texture2darray)(float,float,float,float) r25.z, r55.xyzx, t9.xxxx, s13, r25.x
              endif 
              mul r25.x, r25.z, r25.z
              mul r25.x, r25.z, r25.x
            else 
              mov r25.x, l(1.000000)
            endif 
            mul r33.w, r25.x, r33.w
          endif 
          mul r25.x, r29.w, r33.w
          lt r25.y, l(0.000000), r25.x
          if_nz r25.y
            mov_sat r30.w, r30.w
            dp3 r25.y, r5.xyzx, r54.xyzx
            mad r25.y, -r25.y, r25.y, l(1.000000)
            sqrt r55.xyz, r25.yyyy
            mad r53.xyz, r53.xyzx, r26.wwww, r10.xyzx
            dp3 r25.y, r53.xyzx, r53.xyzx
            rsq r25.y, r25.y
            mul r53.xyz, r25.yyyy, r53.xyzx
            dp3 r25.y, r53.xyzx, r10.xyzx
            add_sat r25.y, -r25.y, l(1.000000)
            mul r26.w, r25.y, r25.y
            mul r26.w, r26.w, r26.w
            mul r25.y, r25.y, r26.w
            mad r26.w, r30.w, r3.z, r9.z
            dp3 r31.w, r7.xyzx, r53.xyzx
            dp3 r32.w, r53.xyzx, r8.xyzx
            dp3 r34.w, r53.xyzx, r5.xyzx
            mul r34.w, r34.w, r34.w
            div r34.w, r34.w, r8.w
            mul r32.w, r32.w, r32.w
            div r32.w, r32.w, r3.w
            add r34.w, r32.w, r34.w
            mad r34.w, |r31.w|, |r31.w|, r34.w
            mul r26.w, r9.w, r26.w
            mul r34.w, r34.w, r34.w
            mul r34.w, r26.w, r34.w
            rcp r34.w, r34.w
            mul r34.w, r30.w, r34.w
            mul r34.w, r34.w, l(0.250000)
            dp3 r35.w, r53.xyzx, r14.yzwy
            mul r35.w, r35.w, r35.w
            div r35.w, r35.w, r8.w
            add r32.w, r32.w, r35.w
            mad r31.w, |r31.w|, |r31.w|, r32.w
            mul r31.w, r31.w, r31.w
            mul r26.w, r26.w, r31.w
            rcp r26.w, r26.w
            mul r26.w, r30.w, r26.w
            mul r26.w, r26.w, l(0.250000)
            mul r53.xyz, r16.xyzx, r26.wwww
            mad r53.xyz, r53.xyzx, l(0.830000, 0.830000, 0.830000, 0.000000), r34.wwww
            mul r25.y, r25.y, r34.w
            mov r47.z, r46.w
            dp3 r26.w, r47.zxyz, l(0.212600, 0.715200, 0.072200, 0.000000)
            mul r26.w, r25.x, r26.w
            lt r30.w, r18.w, r26.w
            if_nz r30.w
              mul r30.w, r22.w, r22.z
              mul r56.xyz, r41.xyzx, r30.wwww
              mad r23.xyz, r56.xyzx, r43.xyzx, r23.xyzx
              mad r40.xyz, r56.xyzx, r44.xyzx, r40.xyzx
              mad r39.xyz, r56.xyzx, r45.xyzx, r39.xyzx
              mov r22.w, r33.w
              mov r45.xyz, r25.yyyy
              mov r41.xyz, r47.zxyz
              mov r42.xyz, r54.xyzx
              mov r43.xyz, r55.xyzx
              mov r44.xyz, r53.xyzx
              mov r18.w, r26.w
              mov r22.z, r29.w
            else 
              mul r54.xyz, r47.zxyz, r25.xxxx
              mad r23.xyz, r54.xyzx, r55.zzzz, r23.xyzx
              mad r40.xyz, r54.xyzx, r53.xyzx, r40.xyzx
              mad r39.xyz, r54.xyzx, r25.yyyy, r39.xyzx
            endif 
          endif 
        endif 
        break 
        case l(2)
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r53.xyzw, r20.w, l(108), t12.zwxy
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r54.xyzw, r20.w, l(124), t12.xyzw
        mov r55.xy, r53.xyxx
        mov r55.zw, r54.xxxy
        dp4 r25.x, r55.xyzw, r24.xyzw
        lt r25.y, r25.x, l(1.000000)
        if_nz r25.y
          mov r56.xyz, l(1.000000,1.000000,1.000000,0)
          mov r25.y, l(0)
        else 
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r57.xyzw, r20.w, l(172), t12.yzwx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r58.xyzw, r20.w, l(188), t12.wxyz
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r59.xyzw, r20.w, l(204), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r26.w, r20.w, l(236), t12.xxxx
          add r46.xyz, r46.xyzx, -v5.xyzx
          mul r29.w, r49.z, r49.z
          dp3 r30.w, r46.xyzx, r46.xyzx
          div r29.w, r29.w, r30.w
          min r29.w, r29.w, l(1.000000)
          mad_sat r30.w, r25.x, r48.y, r48.z
          mad_sat r31.w, r25.x, r48.w, r49.y
          mul r32.w, r30.w, r30.w
          mad r30.w, r30.w, l(-2.000000), l(3.000000)
          mul r30.w, r30.w, r32.w
          mul r29.w, r29.w, r30.w
          mul r30.w, r31.w, r31.w
          mad r31.w, r31.w, l(-2.000000), l(3.000000)
          mul r30.w, r30.w, r31.w
          mul r29.w, r29.w, r30.w
          mov r60.xy, r50.xyxx
          mov r60.zw, r51.xxxy
          dp4 r46.x, r60.xyzw, r24.xyzw
          mov r60.xy, r51.zwzz
          mov r60.zw, r52.zzzw
          dp4 r46.y, r60.xyzw, r24.xyzw
          div r26.xy, r46.xyxx, r25.xxxx
          lt r25.x, r57.w, l(0.00048828)
          if_nz r25.x
            mov r58.y, r59.x
            mad_sat r38.zw, |r26.xxxy|, r58.zzzw, r58.xxxy
            mul r46.xy, r38.zwzz, r38.zwzz
            mad r38.zw, r38.zzzw, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
            mul r38.zw, r38.zzzw, r46.xxxy
            mul r25.x, r38.w, r38.z
          else 
            mov r57.w, r58.y
            mul_sat r57.xyzw, |r26.yyxx|, r57.xyzw
            log r57.xyzw, r57.xyzw
            mul r57.xyzw, r57.xyzw, r58.xxxx
            exp r57.xyzw, r57.xyzw
            add r38.zw, r57.zzzw, r57.xxxy
            log r38.zw, r38.zzzw
            mul r38.zw, r38.zzzw, r59.xxxx
            exp r38.zw, r38.zzzw
            mul r30.w, r38.z, r58.z
            mad r31.w, r58.w, r38.w, l(-1.000000)
            mad r30.w, r58.w, r38.w, -r30.w
            div_sat r30.w, r31.w, r30.w
            mul r31.w, r30.w, r30.w
            mad r30.w, r30.w, l(-2.000000), l(3.000000)
            mul r25.x, r30.w, r31.w
          endif 
          mul r25.y, r25.x, r29.w
          and r25.x, r26.w, l(255)
          if_nz r25.x
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r46.xyz, r20.w, l(220), t12.xyzx
            dp3 r26.w, r59.yzwy, r26.xyzx
            dp3 r26.x, r46.xyzx, r26.xyzx
            frc r46.xy, r26.wxww
            iadd r25.x, r25.x, l(-1)
            utof r46.z, r25.x
            sample_l_indexable(texture2darray)(float,float,float,float) r56.xyz, r46.xyzx, t20.xyzw, s2, l(0.000000)
          else 
            mov r56.xyz, l(1.000000,1.000000,1.000000,0)
          endif 
        endif 
        lt r25.x, l(0.000000), r25.y
        if_nz r25.x
          mov r49.yz, r50.zzwz
          add r26.xyw, r49.xyxz, -v5.xyxz
          dp3 r25.x, r26.xywx, r26.xywx
          rsq r25.x, r25.x
          mul r46.xyz, r25.xxxx, r26.xywx
          dp3 r29.w, r7.xyzx, r46.xyzx
          ubfe r38.zw, l(0, 0, 3, 4), l(0, 0, 27, 20), r48.xxxx
          ine r30.w, r38.z, l(1)
          if_nz r30.w
            mad r30.w, |r29.w|, l(-0.200000), l(0.400000)
            mad r27.xyz, r7.xyzx, r30.wwww, v5.xyzx
            mov r53.xy, r52.xyxx
            dp4 r30.w, r53.xyzw, r27.xyzw
            dp4 r31.w, r55.xyzw, r27.xyzw
            ge r32.w, r31.w, r30.w
            if_nz r32.w
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r54.xy, r20.w, l(140), t12.xyxx
              mov r50.zw, r51.xxxy
              dp4 r49.x, r50.xyzw, r27.xyzw
              mov r52.xy, r51.zwzz
              dp4 r49.y, r52.xyzw, r27.xyzw
              div r27.xy, r49.xyxx, r31.wwww
              mad_sat r27.xy, r27.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
              mad r27.xy, r27.xyxx, r54.zxzz, r54.wyww
              div r20.w, r30.w, r31.w
              max r20.w, r20.w, l(0.00006104)
              and r30.w, r48.x, l(0x0000ffff)
              if_nz r16.w
                utof r48.z, r30.w
                mov r31.w, l(0)
                mov r32.w, l(0)
                loop 
                  ige r34.w, r32.w, l(8)
                  breakc_nz r34.w
                  dp2 r49.x, icb[r32.w + 0].xyxx, r12.xyxx
                  dp2 r49.y, icb[r32.w + 0].yxyy, r12.xzxx
                  mad r48.xy, r49.xyxx, r49.wwww, r27.xyxx
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r34.w, r48.xyzx, t9.xxxx, s13, r20.w
                  mad r31.w, r34.w, l(0.125000), r31.w
                  iadd r32.w, r32.w, l(1)
                endloop 
              else 
                utof r27.z, r30.w
                sample_c_lz_indexable(texture2darray)(float,float,float,float) r31.w, r27.xyzx, t9.xxxx, s13, r20.w
              endif 
              mul r20.w, r31.w, r31.w
              mul r20.w, r31.w, r20.w
            else 
              mov r20.w, l(1.000000)
            endif 
          else 
            mov r20.w, l(1.000000)
          endif 
          if_nz r38.w
            iadd r27.x, r38.w, cb2[0].x
            iadd r27.x, r27.x, l(-1)
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r27.y, r27.x, l(52), t12.xxxx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r48.xyzw, r27.x, l(68), t12.xyzw
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r49.xyzw, r27.x, l(84), t12.xyzw
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r50.xyzw, r27.x, l(100), t12.xyzw
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r51.xyzw, r27.x, l(116), t12.xyzw
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r52.xyzw, r27.x, l(132), t12.xyzw
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r53.xyzw, r27.x, l(148), t12.xyzw
            mad r27.z, |r29.w|, l(-0.200000), l(0.400000)
            mad r28.xyz, r7.xyzx, r27.zzzz, v5.xyzx
            dp4 r48.x, r48.xyzw, r28.xyzw
            dp4 r48.y, r49.xyzw, r28.xyzw
            dp4 r27.z, r50.xyzw, r28.xyzw
            dp4 r28.x, r51.xyzw, r28.xyzw
            lt r28.y, r28.x, r27.z
            div r38.zw, r48.xxxy, r28.xxxx
            mad r38.zw, r38.zzzw, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
            add r38.zw, r53.zzzw, r38.zzzw
            mul r38.zw, r53.xxxy, r38.zzzw
            div r48.xy, r27.yyyy, r52.xzxx
            add r48.zw, -r48.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
            ge r48.zw, r38.zzzw, r48.zzzw
            ge r48.xy, r48.xyxx, r38.zwzz
            or r48.xy, r48.xyxx, r48.zwzz
            or r28.z, r48.y, r48.x
            or r28.y, r28.y, r28.z
            if_z r28.y
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r28.y, r27.x, l(28), t12.xxxx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r48.xy, r27.x, l(164), t12.xyxx
              mov_sat r38.zw, r38.zzzw
              mad r49.xy, r38.zwzz, r52.xzxx, r52.ywyy
              mul r27.x, r28.x, r48.y
              mad r27.z, r48.x, r28.x, r27.z
              div r27.x, r27.z, r27.x
              max r27.x, r27.x, l(0.00006104)
              and r27.z, r28.y, l(0x0000ffff)
              if_nz r16.w
                utof r28.z, r27.z
                mov r30.w, l(0)
                mov r32.w, l(0)
                loop 
                  ige r34.w, r32.w, l(8)
                  breakc_nz r34.w
                  dp2 r48.x, icb[r32.w + 0].xyxx, r29.xyxx
                  dp2 r48.y, icb[r32.w + 0].yxyy, r29.xzxx
                  mad r28.xy, r48.xyxx, r27.yyyy, r49.xyxx
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r28.x, r28.xyzx, t9.xxxx, s13, r27.x
                  mad r30.w, r28.x, l(0.125000), r30.w
                  iadd r32.w, r32.w, l(1)
                endloop 
              else 
                utof r49.z, r27.z
                sample_c_lz_indexable(texture2darray)(float,float,float,float) r30.w, r49.xyzx, t9.xxxx, s13, r27.x
              endif 
              mul r27.x, r30.w, r30.w
              mul r27.x, r30.w, r27.x
            else 
              mov r27.x, l(1.000000)
            endif 
            mul r20.w, r20.w, r27.x
          endif 
          mul r27.x, r20.w, r25.y
          lt r27.y, l(0.000000), r27.x
          if_nz r27.y
            mov_sat r29.w, r29.w
            mov r47.w, r46.w
            mul r28.xyz, r47.wxyw, r56.xyzx
            dp3 r27.y, r5.xyzx, r46.xyzx
            mad r27.y, -r27.y, r27.y, l(1.000000)
            sqrt r47.xyz, r27.yyyy
            mad r26.xyw, r26.xyxw, r25.xxxx, r10.xyxz
            dp3 r25.x, r26.xywx, r26.xywx
            rsq r25.x, r25.x
            mul r26.xyw, r25.xxxx, r26.xyxw
            dp3 r25.x, r26.xywx, r10.xyzx
            add_sat r25.x, -r25.x, l(1.000000)
            mul r27.y, r25.x, r25.x
            mul r27.y, r27.y, r27.y
            mul r25.x, r25.x, r27.y
            mad r27.y, r29.w, r3.z, r9.z
            dp3 r27.z, r7.xyzx, r26.xywx
            dp3 r32.w, r26.xywx, r8.xyzx
            dp3 r34.w, r26.xywx, r5.xyzx
            mul r34.w, r34.w, r34.w
            div r34.w, r34.w, r8.w
            mul r32.w, r32.w, r32.w
            div r32.w, r32.w, r3.w
            add r34.w, r32.w, r34.w
            mad r34.w, |r27.z|, |r27.z|, r34.w
            mul r27.y, r9.w, r27.y
            mul r34.w, r34.w, r34.w
            mul r34.w, r27.y, r34.w
            rcp r34.w, r34.w
            mul r34.w, r29.w, r34.w
            mul r34.w, r34.w, l(0.250000)
            dp3 r26.x, r26.xywx, r14.yzwy
            mul r26.x, r26.x, r26.x
            div r26.x, r26.x, r8.w
            add r26.x, r32.w, r26.x
            mad r26.x, |r27.z|, |r27.z|, r26.x
            mul r26.x, r26.x, r26.x
            mul r26.x, r27.y, r26.x
            rcp r26.x, r26.x
            mul r26.x, r29.w, r26.x
            mul r26.x, r26.x, l(0.250000)
            mul r26.xyw, r16.xyxz, r26.xxxx
            mad r26.xyw, r26.xyxw, l(0.830000, 0.830000, 0.000000, 0.830000), r34.wwww
            mul r25.x, r25.x, r34.w
            dp3 r27.y, r28.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mul r27.y, r27.y, r27.x
            lt r27.z, r18.w, r27.y
            if_nz r27.z
              mul r27.z, r22.w, r22.z
              mul r48.xyz, r41.xyzx, r27.zzzz
              mad r23.xyz, r48.xyzx, r43.xyzx, r23.xyzx
              mad r40.xyz, r48.xyzx, r44.xyzx, r40.xyzx
              mad r39.xyz, r48.xyzx, r45.xyzx, r39.xyzx
              mov r22.w, r20.w
              mov r45.xyz, r25.xxxx
              mov r41.xyz, r28.xyzx
              mov r42.xyz, r46.xyzx
              mov r43.xyz, r47.xyzx
              mov r44.xyz, r26.xywx
              mov r18.w, r27.y
              mov r22.z, r25.y
            else 
              mul r27.xyz, r27.xxxx, r28.xyzx
              mad r23.xyz, r27.xyzx, r47.zzzz, r23.xyzx
              mad r40.xyz, r27.xyzx, r26.xywx, r40.xyzx
              mad r39.xyz, r27.xyzx, r25.xxxx, r39.xyzx
            endif 
          endif 
        endif 
        break 
        default 
        break 
      endswitch 
    endif 
  endloop 
  mov r30.xyz, r23.xyzx
  mov r31.xyz, r39.xyzx
  mov r32.xyz, r40.xyzx
  mov r33.xyz, r41.xyzx
  mov r34.xyz, r42.xyzx
  mov r35.xyz, r43.xyzx
  mov r36.xyz, r44.xyzx
  mov r38.xy, r22.zwzz
  mov r9.y, r18.w
  mov r37.xyz, r45.xyzx
  iadd r12.w, r12.w, l(32)
endloop 
mov r5.z, l(0)
mul r5.xy, r34.yxyy, l(1.000000, -1.000000, 0.000000, 0.000000)
mul r8.xyz, r5.yzxy, r34.zxyz
mad r8.xyz, r34.yzxy, r5.zxyz, -r8.xyzx
mul r9.xyz, r4.yyyy, cb1[9].xywx
mad r9.xyz, r4.xxxx, cb1[8].xywx, r9.xyzx
mad r9.xyz, r4.zzzz, cb1[10].xywx, r9.xyzx
add r9.xyz, r2.xzwx, r9.xyzx
rcp r11.z, r9.z
mul r3.zw, r9.xxxy, r11.zzzz
mad r11.xy, r3.zwzz, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
mad r4.xyz, r34.xyzx, l(2.400000, 2.400000, 2.400000, 0.000000), r4.xyzx
dp2 r3.z, v0.xyxx, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r3.z, r3.z
mul r3.z, r3.z, l(52.982918)
frc r3.z, r3.z
mul r3.w, r3.z, l(3.141600)
sincos r9.x, r12.x, r3.w
mul r9.xyw, r8.xyxz, r9.xxxx
mad r9.xyw, r12.xxxx, r5.xyxz, r9.xyxw
mad r9.xyw, r9.xyxw, l(0.120000, 0.120000, 0.000000, 0.120000), r4.xyxz
mul r12.xyz, r9.yyyy, cb1[9].xywx
mad r12.xyz, r9.xxxx, cb1[8].xywx, r12.xyzx
mad r9.xyw, r9.wwww, cb1[10].xyxw, r12.xyxz
add r9.xyw, r2.xzxw, r9.xyxw
mul r9.xy, r9.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000)
rcp r12.z, r9.w
mad r12.xy, r9.xyxx, r12.zzzz, l(0.500000, 0.500000, 0.000000, 0.000000)
mov r13.xyz, -r11.xyzx
add r9.xyw, r12.xyxz, r13.xyxz
mad r12.xyz, r3.zzzz, l(3.141600, 0.500000, 0.500000, 0.000000), l(3.141600, 0.33333334, 1.000000, 0.000000)
sincos r12.x, r14.x, r12.x
mul r8.xyz, r8.xyzx, r12.xxxx
mad r5.xyz, r14.xxxx, r5.xyzx, r8.xyzx
mad r4.xyz, r5.xyzx, l(0.120000, 0.120000, 0.120000, 0.000000), r4.xyzx
mul r5.xyz, r4.yyyy, cb1[9].xywx
mad r4.xyw, r4.xxxx, cb1[8].xyxw, r5.xyxz
mad r4.xyz, r4.zzzz, cb1[10].xywx, r4.xywx
add r2.xzw, r2.xxzw, r4.xxyz
mul r2.xz, r2.xxzx, l(0.500000, 0.000000, -0.500000, 0.000000)
rcp r4.z, r2.w
mad r4.xy, r2.xzxx, r4.zzzz, r13.xyxx
mov r13.w, l(0.500000)
add r2.xzw, r13.wwwz, r4.xxyz
dp2 r3.w, cb1[44].zwzz, cb1[44].zwzz
sqrt r3.w, r3.w
dp2 r4.x, r9.xyxx, r9.xyxx
sqrt r4.x, r4.x
rcp r4.x, r4.x
mul r3.w, r3.w, r4.x
mul r4.xy, r12.yzyy, l(0.11764706, 0.11764706, 0.000000, 0.000000)
mul r4.xy, r4.xyxx, r4.xyxx
mov x1[0].x, r4.x
mad r5.xyz, r9.xywx, r4.xxxx, r11.xyzx
lt r4.zw, r3.wwww, r4.xxxy
mul r5.xy, r5.xyxx, cb1[44].xyxx
ftoi r8.xy, r5.xyxx
mov r8.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r5.x, r8.xyzw, t0.xyzw
ge r5.y, r5.x, l(0.984375)
mul r6.w, r5.x, l(1.01587307)
mad r5.x, r5.x, l(64.000000), l(-63.000000)
movc r5.x, r5.y, r5.x, r6.w
max r5.x, r5.x, l(0.00000001)
rcp r5.x, r5.x
mov x2[0].x, r5.x
add r5.y, r5.x, l(0.042000)
mul r5.y, r5.y, r5.z
lt r5.y, l(1.000000), r5.y
and r5.y, r5.y, l(0x3f800000)
movc r4.z, r4.z, r5.y, l(1.000000)
mov x0[0].x, r4.z
mov x1[1].x, r4.y
mad r8.xyz, r2.xzwx, r4.yyyy, r11.xyzx
mul r5.yz, r8.xxyx, cb1[44].xxyx
ftoi r12.xy, r5.yzyy
mov r12.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r5.y, r12.xyzw, t0.yxzw
ge r5.z, r5.y, l(0.984375)
mul r6.w, r5.y, l(1.01587307)
mad r5.y, r5.y, l(64.000000), l(-63.000000)
movc r5.y, r5.z, r5.y, r6.w
max r5.y, r5.y, l(0.00000001)
rcp r5.y, r5.y
mov x2[1].x, r5.y
add r5.z, r5.y, l(0.042000)
mul r5.z, r5.z, r8.z
lt r5.z, l(1.000000), r5.z
and r5.z, r5.z, l(0x3f800000)
movc r4.w, r4.w, r5.z, l(1.000000)
mov x0[1].x, r4.w
add r5.z, r4.w, r4.z
ne r5.z, r5.z, l(0.000000)
if_nz r5.z
  mad r8.xy, r3.zzzz, l(0.500000, 0.500000, 0.000000, 0.000000), l(1.33333337, 2.000000, 0.000000, 0.000000)
  mul r8.xy, r8.xyxx, l(0.11764706, 0.11764706, 0.000000, 0.000000)
  mad r8.xy, r8.xyxx, r8.xyxx, -r4.xyxx
  mad r4.x, r4.z, r8.x, r4.x
  mov x1[0].x, r4.x
  mad r8.xzw, r9.xxyw, r4.xxxx, r11.xxyz
  lt r4.x, r3.w, r4.x
  mul r8.xz, r8.xxzx, cb1[44].xxyx
  ftoi r12.xy, r8.xzxx
  mov r12.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r5.z, r12.xyzw, t0.yzxw
  ge r6.w, r5.z, l(0.984375)
  mul r8.x, r5.z, l(1.01587307)
  mad r5.z, r5.z, l(64.000000), l(-63.000000)
  movc r5.z, r6.w, r5.z, r8.x
  max r5.z, r5.z, l(0.00000001)
  rcp r5.z, r5.z
  movc r5.x, r4.x, r5.z, r5.x
  mov x2[0].x, r5.x
  add r5.x, r5.z, l(0.042000)
  mul r5.x, r5.x, r8.w
  lt r5.x, l(1.000000), r5.x
  and r5.x, r5.x, l(0x3f800000)
  mul r5.x, r4.z, r5.x
  movc r4.x, r4.x, r5.x, r4.z
  mov x0[0].x, r4.x
  mad r4.y, r4.w, r8.y, r4.y
  mov x1[1].x, r4.y
  mad r8.xyz, r2.xzwx, r4.yyyy, r11.xyzx
  lt r4.y, r3.w, r4.y
  mul r5.xz, r8.xxyx, cb1[44].xxyx
  ftoi r12.xy, r5.xzxx
  mov r12.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.z, r12.xyzw, t0.yzxw
  ge r5.x, r4.z, l(0.984375)
  mul r5.z, r4.z, l(1.01587307)
  mad r4.z, r4.z, l(64.000000), l(-63.000000)
  movc r4.z, r5.x, r4.z, r5.z
  max r4.z, r4.z, l(0.00000001)
  rcp r4.z, r4.z
  movc r5.x, r4.y, r4.z, r5.y
  mov x2[1].x, r5.x
  add r4.z, r4.z, l(0.042000)
  mul r4.z, r4.z, r8.z
  lt r4.z, l(1.000000), r4.z
  and r4.z, r4.z, l(0x3f800000)
  mul r4.z, r4.z, r4.w
  movc r4.y, r4.y, r4.z, r4.w
  mov x0[1].x, r4.y
  add r4.x, r4.y, r4.x
  eq r4.x, r4.x, l(0.000000)
else 
  mov r4.x, l(-1)
endif 
if_z r4.x
  mad r4.xy, r3.zzzz, l(0.500000, 0.500000, 0.000000, 0.000000), l(2.33333325, 3.000000, 0.000000, 0.000000)
  mul r4.xy, r4.xyxx, l(0.11764706, 0.11764706, 0.000000, 0.000000)
  mov r4.z, x1[0].x
  mov r4.w, x0[0].x
  mad r4.x, r4.x, r4.x, -r4.z
  mad r4.x, r4.w, r4.x, r4.z
  mov x1[0].x, r4.x
  mad r5.xyz, r9.xywx, r4.xxxx, r11.xyzx
  lt r4.x, r3.w, r4.x
  mul r5.xy, r5.xyxx, cb1[44].xyxx
  ftoi r8.xy, r5.xyxx
  mov r8.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.z, r8.xyzw, t0.yzxw
  ge r5.x, r4.z, l(0.984375)
  mul r5.y, r4.z, l(1.01587307)
  mad r4.z, r4.z, l(64.000000), l(-63.000000)
  movc r4.z, r5.x, r4.z, r5.y
  max r4.z, r4.z, l(0.00000001)
  rcp r4.z, r4.z
  mov r5.x, x2[0].x
  movc r5.x, r4.x, r4.z, r5.x
  mov x2[0].x, r5.x
  add r4.z, r4.z, l(0.042000)
  mul r4.z, r4.z, r5.z
  lt r4.z, l(1.000000), r4.z
  and r4.z, r4.z, l(0x3f800000)
  mul r4.z, r4.z, r4.w
  movc r4.x, r4.x, r4.z, r4.w
  mov x0[0].x, r4.x
  mov r4.z, x1[1].x
  mov r4.w, x0[1].x
  mad r4.y, r4.y, r4.y, -r4.z
  mad r4.y, r4.w, r4.y, r4.z
  mov x1[1].x, r4.y
  mad r5.xyz, r2.xzwx, r4.yyyy, r11.xyzx
  lt r4.y, r3.w, r4.y
  mul r5.xy, r5.xyxx, cb1[44].xyxx
  ftoi r8.xy, r5.xyxx
  mov r8.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.z, r8.xyzw, t0.yzxw
  ge r5.x, r4.z, l(0.984375)
  mul r5.y, r4.z, l(1.01587307)
  mad r4.z, r4.z, l(64.000000), l(-63.000000)
  movc r4.z, r5.x, r4.z, r5.y
  max r4.z, r4.z, l(0.00000001)
  rcp r4.z, r4.z
  mov r5.x, x2[1].x
  movc r5.x, r4.y, r4.z, r5.x
  mov x2[1].x, r5.x
  add r4.z, r4.z, l(0.042000)
  mul r4.z, r4.z, r5.z
  lt r4.z, l(1.000000), r4.z
  and r4.z, r4.z, l(0x3f800000)
  mul r4.z, r4.z, r4.w
  movc r4.y, r4.y, r4.z, r4.w
  mov x0[1].x, r4.y
  add r4.x, r4.y, r4.x
  eq r4.x, r4.x, l(0.000000)
else 
  mov r4.x, l(-1)
endif 
if_z r4.x
  mad r4.xy, r3.zzzz, l(0.500000, 0.500000, 0.000000, 0.000000), l(3.33333325, 4.000000, 0.000000, 0.000000)
  mul r4.xy, r4.xyxx, l(0.11764706, 0.11764706, 0.000000, 0.000000)
  mov r4.z, x1[0].x
  mov r4.w, x0[0].x
  mad r4.x, r4.x, r4.x, -r4.z
  mad r4.x, r4.w, r4.x, r4.z
  mov x1[0].x, r4.x
  mad r5.xyz, r9.xywx, r4.xxxx, r11.xyzx
  lt r4.x, r3.w, r4.x
  mul r5.xy, r5.xyxx, cb1[44].xyxx
  ftoi r8.xy, r5.xyxx
  mov r8.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.z, r8.xyzw, t0.yzxw
  ge r5.x, r4.z, l(0.984375)
  mul r5.y, r4.z, l(1.01587307)
  mad r4.z, r4.z, l(64.000000), l(-63.000000)
  movc r4.z, r5.x, r4.z, r5.y
  max r4.z, r4.z, l(0.00000001)
  rcp r4.z, r4.z
  mov r5.x, x2[0].x
  movc r5.x, r4.x, r4.z, r5.x
  mov x2[0].x, r5.x
  add r4.z, r4.z, l(0.042000)
  mul r4.z, r4.z, r5.z
  lt r4.z, l(1.000000), r4.z
  and r4.z, r4.z, l(0x3f800000)
  mul r4.z, r4.z, r4.w
  movc r4.x, r4.x, r4.z, r4.w
  mov x0[0].x, r4.x
  mov r4.z, x1[1].x
  mov r4.w, x0[1].x
  mad r4.y, r4.y, r4.y, -r4.z
  mad r4.y, r4.w, r4.y, r4.z
  mov x1[1].x, r4.y
  mad r5.xyz, r2.xzwx, r4.yyyy, r11.xyzx
  lt r4.y, r3.w, r4.y
  mul r5.xy, r5.xyxx, cb1[44].xyxx
  ftoi r8.xy, r5.xyxx
  mov r8.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.z, r8.xyzw, t0.yzxw
  ge r5.x, r4.z, l(0.984375)
  mul r5.y, r4.z, l(1.01587307)
  mad r4.z, r4.z, l(64.000000), l(-63.000000)
  movc r4.z, r5.x, r4.z, r5.y
  max r4.z, r4.z, l(0.00000001)
  rcp r4.z, r4.z
  mov r5.x, x2[1].x
  movc r5.x, r4.y, r4.z, r5.x
  mov x2[1].x, r5.x
  add r4.z, r4.z, l(0.042000)
  mul r4.z, r4.z, r5.z
  lt r4.z, l(1.000000), r4.z
  and r4.z, r4.z, l(0x3f800000)
  mul r4.z, r4.z, r4.w
  movc r4.y, r4.y, r4.z, r4.w
  mov x0[1].x, r4.y
  add r4.x, r4.y, r4.x
  eq r4.x, r4.x, l(0.000000)
else 
  mov r4.x, l(-1)
endif 
if_z r4.x
  mad r4.xy, r3.zzzz, l(0.500000, 0.500000, 0.000000, 0.000000), l(4.33333349, 5.000000, 0.000000, 0.000000)
  mul r4.xy, r4.xyxx, l(0.11764706, 0.11764706, 0.000000, 0.000000)
  mov r4.z, x1[0].x
  mov r4.w, x0[0].x
  mad r4.x, r4.x, r4.x, -r4.z
  mad r4.x, r4.w, r4.x, r4.z
  mov x1[0].x, r4.x
  mad r5.xyz, r9.xywx, r4.xxxx, r11.xyzx
  lt r4.x, r3.w, r4.x
  mul r5.xy, r5.xyxx, cb1[44].xyxx
  ftoi r8.xy, r5.xyxx
  mov r8.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.z, r8.xyzw, t0.yzxw
  ge r5.x, r4.z, l(0.984375)
  mul r5.y, r4.z, l(1.01587307)
  mad r4.z, r4.z, l(64.000000), l(-63.000000)
  movc r4.z, r5.x, r4.z, r5.y
  max r4.z, r4.z, l(0.00000001)
  rcp r4.z, r4.z
  mov r5.x, x2[0].x
  movc r5.x, r4.x, r4.z, r5.x
  mov x2[0].x, r5.x
  add r4.z, r4.z, l(0.042000)
  mul r4.z, r4.z, r5.z
  lt r4.z, l(1.000000), r4.z
  and r4.z, r4.z, l(0x3f800000)
  mul r4.z, r4.z, r4.w
  movc r4.x, r4.x, r4.z, r4.w
  mov x0[0].x, r4.x
  mov r4.z, x1[1].x
  mov r4.w, x0[1].x
  mad r4.y, r4.y, r4.y, -r4.z
  mad r4.y, r4.w, r4.y, r4.z
  mov x1[1].x, r4.y
  mad r5.xyz, r2.xzwx, r4.yyyy, r11.xyzx
  lt r4.y, r3.w, r4.y
  mul r5.xy, r5.xyxx, cb1[44].xyxx
  ftoi r8.xy, r5.xyxx
  mov r8.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.z, r8.xyzw, t0.yzxw
  ge r5.x, r4.z, l(0.984375)
  mul r5.y, r4.z, l(1.01587307)
  mad r4.z, r4.z, l(64.000000), l(-63.000000)
  movc r4.z, r5.x, r4.z, r5.y
  max r4.z, r4.z, l(0.00000001)
  rcp r4.z, r4.z
  mov r5.x, x2[1].x
  movc r5.x, r4.y, r4.z, r5.x
  mov x2[1].x, r5.x
  add r4.z, r4.z, l(0.042000)
  mul r4.z, r4.z, r5.z
  lt r4.z, l(1.000000), r4.z
  and r4.z, r4.z, l(0x3f800000)
  mul r4.z, r4.z, r4.w
  movc r4.y, r4.y, r4.z, r4.w
  mov x0[1].x, r4.y
  add r4.x, r4.y, r4.x
  eq r4.x, r4.x, l(0.000000)
else 
  mov r4.x, l(-1)
endif 
if_z r4.x
  mad r4.xy, r3.zzzz, l(0.500000, 0.500000, 0.000000, 0.000000), l(5.33333349, 6.000000, 0.000000, 0.000000)
  mul r4.xy, r4.xyxx, l(0.11764706, 0.11764706, 0.000000, 0.000000)
  mov r4.z, x1[0].x
  mov r4.w, x0[0].x
  mad r4.x, r4.x, r4.x, -r4.z
  mad r4.x, r4.w, r4.x, r4.z
  mov x1[0].x, r4.x
  mad r5.xyz, r9.xywx, r4.xxxx, r11.xyzx
  lt r4.x, r3.w, r4.x
  mul r5.xy, r5.xyxx, cb1[44].xyxx
  ftoi r8.xy, r5.xyxx
  mov r8.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.z, r8.xyzw, t0.yzxw
  ge r5.x, r4.z, l(0.984375)
  mul r5.y, r4.z, l(1.01587307)
  mad r4.z, r4.z, l(64.000000), l(-63.000000)
  movc r4.z, r5.x, r4.z, r5.y
  max r4.z, r4.z, l(0.00000001)
  rcp r4.z, r4.z
  mov r5.x, x2[0].x
  movc r5.x, r4.x, r4.z, r5.x
  mov x2[0].x, r5.x
  add r4.z, r4.z, l(0.042000)
  mul r4.z, r4.z, r5.z
  lt r4.z, l(1.000000), r4.z
  and r4.z, r4.z, l(0x3f800000)
  mul r4.z, r4.z, r4.w
  movc r4.x, r4.x, r4.z, r4.w
  mov x0[0].x, r4.x
  mov r4.z, x1[1].x
  mov r4.w, x0[1].x
  mad r4.y, r4.y, r4.y, -r4.z
  mad r4.y, r4.w, r4.y, r4.z
  mov x1[1].x, r4.y
  mad r5.xyz, r2.xzwx, r4.yyyy, r11.xyzx
  lt r4.y, r3.w, r4.y
  mul r5.xy, r5.xyxx, cb1[44].xyxx
  ftoi r8.xy, r5.xyxx
  mov r8.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.z, r8.xyzw, t0.yzxw
  ge r5.x, r4.z, l(0.984375)
  mul r5.y, r4.z, l(1.01587307)
  mad r4.z, r4.z, l(64.000000), l(-63.000000)
  movc r4.z, r5.x, r4.z, r5.y
  max r4.z, r4.z, l(0.00000001)
  rcp r4.z, r4.z
  mov r5.x, x2[1].x
  movc r5.x, r4.y, r4.z, r5.x
  mov x2[1].x, r5.x
  add r4.z, r4.z, l(0.042000)
  mul r4.z, r4.z, r5.z
  lt r4.z, l(1.000000), r4.z
  and r4.z, r4.z, l(0x3f800000)
  mul r4.z, r4.z, r4.w
  movc r4.y, r4.y, r4.z, r4.w
  mov x0[1].x, r4.y
  add r4.x, r4.y, r4.x
  eq r4.x, r4.x, l(0.000000)
else 
  mov r4.x, l(-1)
endif 
if_z r4.x
  mad r4.xy, r3.zzzz, l(0.500000, 0.500000, 0.000000, 0.000000), l(6.33333349, 7.000000, 0.000000, 0.000000)
  mul r4.xy, r4.xyxx, l(0.11764706, 0.11764706, 0.000000, 0.000000)
  mov r4.z, x1[0].x
  mov r4.w, x0[0].x
  mad r4.x, r4.x, r4.x, -r4.z
  mad r4.x, r4.w, r4.x, r4.z
  mov x1[0].x, r4.x
  mad r5.xyz, r9.xywx, r4.xxxx, r11.xyzx
  lt r4.x, r3.w, r4.x
  mul r5.xy, r5.xyxx, cb1[44].xyxx
  ftoi r8.xy, r5.xyxx
  mov r8.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.z, r8.xyzw, t0.yzxw
  ge r5.x, r4.z, l(0.984375)
  mul r5.y, r4.z, l(1.01587307)
  mad r4.z, r4.z, l(64.000000), l(-63.000000)
  movc r4.z, r5.x, r4.z, r5.y
  max r4.z, r4.z, l(0.00000001)
  rcp r4.z, r4.z
  mov r5.x, x2[0].x
  movc r5.x, r4.x, r4.z, r5.x
  mov x2[0].x, r5.x
  add r4.z, r4.z, l(0.042000)
  mul r4.z, r4.z, r5.z
  lt r4.z, l(1.000000), r4.z
  and r4.z, r4.z, l(0x3f800000)
  mul r4.z, r4.z, r4.w
  movc r4.x, r4.x, r4.z, r4.w
  mov x0[0].x, r4.x
  mov r4.z, x1[1].x
  mov r4.w, x0[1].x
  mad r4.y, r4.y, r4.y, -r4.z
  mad r4.y, r4.w, r4.y, r4.z
  mov x1[1].x, r4.y
  mad r5.xyz, r2.xzwx, r4.yyyy, r11.xyzx
  lt r4.y, r3.w, r4.y
  mul r5.xy, r5.xyxx, cb1[44].xyxx
  ftoi r8.xy, r5.xyxx
  mov r8.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.z, r8.xyzw, t0.yzxw
  ge r5.x, r4.z, l(0.984375)
  mul r5.y, r4.z, l(1.01587307)
  mad r4.z, r4.z, l(64.000000), l(-63.000000)
  movc r4.z, r5.x, r4.z, r5.y
  max r4.z, r4.z, l(0.00000001)
  rcp r4.z, r4.z
  mov r5.x, x2[1].x
  movc r5.x, r4.y, r4.z, r5.x
  mov x2[1].x, r5.x
  add r4.z, r4.z, l(0.042000)
  mul r4.z, r4.z, r5.z
  lt r4.z, l(1.000000), r4.z
  and r4.z, r4.z, l(0x3f800000)
  mul r4.z, r4.z, r4.w
  movc r4.y, r4.y, r4.z, r4.w
  mov x0[1].x, r4.y
  add r4.x, r4.y, r4.x
  eq r4.x, r4.x, l(0.000000)
else 
  mov r4.x, l(-1)
endif 
if_z r4.x
  mad r4.xy, r3.zzzz, l(0.500000, 0.500000, 0.000000, 0.000000), l(7.33333349, 8.000000, 0.000000, 0.000000)
  mul r4.xy, r4.xyxx, l(0.11764706, 0.11764706, 0.000000, 0.000000)
  mov r3.z, x1[0].x
  mov r4.z, x0[0].x
  mad r4.x, r4.x, r4.x, -r3.z
  mad r3.z, r4.z, r4.x, r3.z
  mad r5.xyz, r9.xywx, r3.zzzz, r11.xyzx
  lt r3.z, r3.w, r3.z
  mul r4.xw, r5.xxxy, cb1[44].xxxy
  ftoi r8.xy, r4.xwxx
  mov r8.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.x, r8.xyzw, t0.xyzw
  ge r4.w, r4.x, l(0.984375)
  mul r5.x, r4.x, l(1.01587307)
  mad r4.x, r4.x, l(64.000000), l(-63.000000)
  movc r4.x, r4.w, r4.x, r5.x
  max r4.x, r4.x, l(0.00000001)
  rcp r4.x, r4.x
  mov r4.w, x2[0].x
  movc r4.w, r3.z, r4.x, r4.w
  mov x2[0].x, r4.w
  add r4.x, r4.x, l(0.042000)
  mul r4.x, r4.x, r5.z
  lt r4.x, l(1.000000), r4.x
  and r4.x, r4.x, l(0x3f800000)
  mul r4.x, r4.x, r4.z
  movc r3.z, r3.z, r4.x, r4.z
  mov x0[0].x, r3.z
  mov r3.z, x1[1].x
  mov r4.x, x0[1].x
  mad r4.y, r4.y, r4.y, -r3.z
  mad r3.z, r4.x, r4.y, r3.z
  mad r2.xzw, r2.xxzw, r3.zzzz, r11.xxyz
  lt r3.z, r3.w, r3.z
  mul r2.xz, r2.xxzx, cb1[44].xxyx
  ftoi r8.xy, r2.xzxx
  mov r8.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r2.x, r8.xyzw, t0.xyzw
  ge r2.z, r2.x, l(0.984375)
  mul r3.w, r2.x, l(1.01587307)
  mad r2.x, r2.x, l(64.000000), l(-63.000000)
  movc r2.x, r2.z, r2.x, r3.w
  max r2.x, r2.x, l(0.00000001)
  rcp r2.x, r2.x
  mov r2.z, x2[1].x
  movc r2.z, r3.z, r2.x, r2.z
  mov x2[1].x, r2.z
  add r2.x, r2.x, l(0.042000)
  mul r2.x, r2.x, r2.w
  lt r2.x, l(1.000000), r2.x
  and r2.x, r2.x, l(0x3f800000)
  mul r2.x, r2.x, r4.x
  movc r2.x, r3.z, r2.x, r4.x
  mov x0[1].x, r2.x
endif 
mov r2.x, x2[0].x
add r2.x, -r9.z, r2.x
lt r2.x, l(2.400000), |r2.x|
mov r2.z, x0[0].x
mad r2.z, -r2.z, l(0.500000), l(1.000000)
movc r2.x, r2.x, l(0.500000), r2.z
mov r2.z, x2[1].x
add r2.z, -r9.z, r2.z
lt r2.z, l(2.400000), |r2.z|
mov r2.w, x0[1].x
mul r2.w, r2.w, l(0.500000)
movc r2.z, r2.z, l(-0.500000), -r2.w
add r2.x, r2.z, r2.x
add_sat r2.x, -r2.x, l(1.000000)
mad r2.z, r2.x, l(-2.000000), l(3.000000)
mul r2.x, r2.x, r2.x
mul r2.x, r2.x, r2.z
min r2.x, r2.x, r38.y
mul r2.x, r2.x, r38.x
mul r2.xzw, r33.xxyz, r2.xxxx
mad r4.xyz, r2.xzwx, r35.xyzx, r30.xyzx
mad r5.xyz, r2.xzwx, r36.xyzx, r32.xyzx
mad r2.xzw, r2.xxzw, r37.xxyz, r31.xxyz
add r3.z, -r3.y, l(1.000000)
mul r3.w, r3.z, l(5.000000)
mad r4.w, r3.z, l(5.000000), l(-2.500000)
mul r4.w, r4.w, l(0.400000)
max r4.w, r4.w, l(0.000000)
mul r4.w, r4.w, l(100.000000)
mad r8.xy, -r3.zzzz, l(10.000000, 5.000000, 0.000000, 0.000000), l(6.857410, 7.085000, 0.000000, 0.000000)
exp r6.w, r8.x
mul r6.w, r3.x, r6.w
mul r6.w, r6.w, l(9.136810)
mul r8.x, r3.z, r3.w
mad r8.x, -r8.x, l(2.015905), r8.y
exp r8.x, r8.x
mul r8.x, r3.x, r8.x
mul r8.x, r8.x, l(9.708090)
max r6.w, r6.w, r8.x
max r6.w, r6.w, l(1.268160)
mul r8.xyz, r10.xyzx, r15.zxyz
mad r8.xyz, r10.zxyz, r15.xyzx, -r8.xyzx
mul r9.xyz, r8.xyzx, r15.zxyz
mad r8.xyz, r15.yzxy, r8.yzxy, -r9.xyzx
add r8.xyz, -r7.xyzx, r8.xyzx
mad r8.xyz, cb0[10].wwww, r8.xyzx, r7.xyzx
dp3 r8.w, r8.xyzx, r8.xyzx
rsq r8.w, r8.w
mul r8.xyz, r8.wwww, r8.xyzx
dp3 r8.w, -r10.xyzx, r8.xyzx
add r8.w, r8.w, r8.w
mad r8.xyz, r8.xyzx, -r8.wwww, -r10.xyzx
iadd r9.x, cb2[0].y, -cb2[58].x
and r9.y, r9.x, l(-32)
iadd r9.z, -r9.y, r9.x
and r9.w, cb2[0].y, l(-32)
iadd r10.w, -r9.w, cb2[0].y
mul r11.xyz, r15.xyzx, r15.xyzx
mov r12.xy, l(0,0,0,0)
mov r13.w, l(0)
mov r14.yz, l(0,0,1.000000,0)
mov r15.x, l(1.000000)
mov r16.xyzw, l(0,0,0,0)
mov r17.yzw, l(0,0,0,0)
mov r11.w, r9.y
loop 
  uge r12.w, r11.w, cb2[0].y
  breakc_nz r12.w
  ushr r12.z, r11.w, l(5)
  iadd r13.xyz, r12.xyzx, r20.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r12.z, r13.xyzw, t7.yzxw
  ieq r12.w, r9.y, r11.w
  bfi r13.x, r9.z, l(0), l(0), r12.z
  movc r12.z, r12.w, r13.x, r12.z
  ieq r12.w, r9.w, r11.w
  ubfe r13.x, r10.w, l(0), r12.z
  movc r12.z, r12.w, r13.x, r12.z
  iadd r12.w, r11.w, cb2[0].x
  mov r18.xyzw, r16.xyzw
  mov r19.xyz, r17.yzwy
  mov r13.x, r12.z
  loop 
    breakc_z r13.x
    firstbit_lo r13.y, r13.x
    ishl r13.z, l(1), r13.y
    and r14.w, r13.z, r13.x
    if_nz r14.w
      xor r13.x, r13.z, r13.x
      iadd r13.z, r12.w, r13.y
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r21.xyzw, r13.z, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r22.xy, r13.z, l(16), t11.xyxx
      add r21.xyz, r21.xyzx, -v5.xyzx
      mov r22.z, r21.w
      lt r21.xyz, |r21.xyzx|, r22.zxyz
      and r13.z, r21.y, r21.x
      and r13.z, r21.z, r13.z
      if_nz r13.z
        iadd r13.y, r11.w, r13.y
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r21.xyzw, r13.y, l(0), t15.wxyz
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r15.zw, r13.y, l(96), t15.xxxy
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r22.xyzw, r13.y, l(116), t15.zwxy
        add r23.xyz, -r21.yzwy, v5.xyzx
        and r13.z, r22.w, l(0x0000ffff)
        ubfe r14.w, l(6), l(25), r22.w
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r24.xyzw, r13.z, l(0), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r25.xyzw, r13.z, l(16), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r26.xyzw, r13.z, l(32), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r13.z, l(48), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r13.z, l(64), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r13.z, l(80), t16.xyzw
        dp3 r20.w, r24.xyzx, r23.xyzx
        add_sat r20.w, r24.w, r20.w
        dp3 r21.w, r25.xyzx, r23.xyzx
        add_sat r21.w, r25.w, r21.w
        mul r20.w, r20.w, r21.w
        dp3 r21.w, r26.xyzx, r23.xyzx
        add_sat r21.w, r26.w, r21.w
        mul r20.w, r20.w, r21.w
        dp3 r21.w, r27.xyzx, r23.xyzx
        add_sat r21.w, r27.w, r21.w
        mul r20.w, r20.w, r21.w
        dp3 r21.w, r28.xyzx, r23.xyzx
        add_sat r21.w, r28.w, r21.w
        mul r20.w, r20.w, r21.w
        dp3 r21.w, r29.xyzx, r23.xyzx
        add_sat r21.w, r29.w, r21.w
        mul r14.x, r20.w, r21.w
        and r20.w, r15.z, l(1)
        movc r24.xy, r20.wwww, r14.xyxx, r14.zxzz
        mov r14.x, r15.z
        mov r25.xy, r24.xyxx
        mov r20.w, l(1)
        loop 
          ige r21.w, r20.w, r14.w
          breakc_nz r21.w
          iadd r21.w, r13.z, r20.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r26.xyzw, r21.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r21.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r21.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r21.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r21.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r21.w, l(80), t16.xyzw
          dp3 r21.w, r26.xyzx, r23.xyzx
          add_sat r21.w, r26.w, r21.w
          mul r21.w, r21.w, r25.x
          dp3 r23.w, r27.xyzx, r23.xyzx
          add_sat r23.w, r27.w, r23.w
          mul r21.w, r21.w, r23.w
          dp3 r23.w, r28.xyzx, r23.xyzx
          add_sat r23.w, r28.w, r23.w
          mul r21.w, r21.w, r23.w
          dp3 r23.w, r29.xyzx, r23.xyzx
          add_sat r23.w, r29.w, r23.w
          mul r21.w, r21.w, r23.w
          dp3 r23.w, r30.xyzx, r23.xyzx
          add_sat r23.w, r30.w, r23.w
          mul r21.w, r21.w, r23.w
          dp3 r23.w, r31.xyzx, r23.xyzx
          add_sat r23.w, r31.w, r23.w
          mul r25.x, r21.w, r23.w
          ushr r24.z, r14.x, l(2)
          ubfe r24.w, l(1), l(2), r14.x
          and r25.z, r24.z, l(2)
          max r25.w, r25.x, r25.y
          mad r21.w, -r21.w, r23.w, l(1.000000)
          mul r21.w, r21.w, r25.y
          movc r15.y, r25.z, r21.w, r25.w
          movc r25.xy, r24.wwww, r25.xyxx, r15.xyxx
          iadd r20.w, r20.w, l(1)
          mov r14.x, r24.z
        endloop 
        mov_sat r25.y, r25.y
        mul r13.z, r15.w, r25.y
        lt r14.x, l(0.000000), r13.z
        if_nz r14.x
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r13.y, l(16), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r13.y, l(32), t15.yxwz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r13.y, l(48), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r13.y, l(64), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r13.y, l(80), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r13.y, l(132), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r13.y, l(148), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r13.y, l(164), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r13.y, l(180), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r13.y, l(196), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xy, r13.y, l(212), t15.xyxx
          mad r19.z, r25.y, r15.w, r19.z
          mul r13.y, r22.z, r13.z
          mov r22.z, r30.z
          dp3 r13.z, r8.xyzx, r22.xyzx
          dp3 r14.x, r23.xyzx, r22.xyzx
          add r14.x, -r30.w, r14.x
          ge r14.w, r14.x, l(0.000000)
          max r14.x, r4.w, |r14.x|
          movc r14.x, r14.w, r14.x, -r14.x
          max r13.z, -r13.z, l(0.00000010)
          div r13.z, r14.x, r13.z
          min r13.z, |r13.z|, l(131072.000000)
          mov r30.z, r31.z
          dp3 r14.x, r8.xyzx, r30.xyzx
          dp3 r14.w, r23.xyzx, r30.xyzx
          add r14.w, -r31.w, r14.w
          ge r15.y, r14.w, l(0.000000)
          max r14.w, r4.w, |r14.w|
          movc r14.w, r15.y, r14.w, -r14.w
          max r14.x, -r14.x, l(0.00000010)
          div r14.x, r14.w, r14.x
          min r13.z, r13.z, |r14.x|
          mov r31.z, r32.z
          dp3 r14.x, r8.xyzx, r31.xyzx
          dp3 r14.w, r23.xyzx, r31.xyzx
          add r14.w, -r32.w, r14.w
          ge r15.y, r14.w, l(0.000000)
          max r14.w, r4.w, |r14.w|
          movc r14.w, r15.y, r14.w, -r14.w
          max r14.x, -r14.x, l(0.00000010)
          div r14.x, r14.w, r14.x
          min r13.z, r13.z, |r14.x|
          mov r32.z, r33.z
          dp3 r14.x, r8.xyzx, r32.xyzx
          dp3 r14.w, r23.xyzx, r32.xyzx
          add r14.w, -r33.w, r14.w
          ge r15.y, r14.w, l(0.000000)
          max r14.w, r4.w, |r14.w|
          movc r14.w, r15.y, r14.w, -r14.w
          max r14.x, -r14.x, l(0.00000010)
          div r14.x, r14.w, r14.x
          min r13.z, r13.z, |r14.x|
          mov r33.z, r34.x
          dp3 r14.x, r8.xyzx, r33.xyzx
          dp3 r14.w, r23.xyzx, r33.xyzx
          add r14.w, -r34.y, r14.w
          ge r15.y, r14.w, l(0.000000)
          max r14.w, r4.w, |r14.w|
          movc r14.w, r15.y, r14.w, -r14.w
          max r14.x, -r14.x, l(0.00000010)
          div r14.x, r14.w, r14.x
          min r13.z, r13.z, |r14.x|
          mov r35.zw, r34.zzzw
          dp3 r14.x, r8.zxyz, r35.xzwx
          dp3 r14.w, r23.zxyz, r35.xzwx
          add r14.w, -r35.y, r14.w
          ge r15.y, r14.w, l(0.000000)
          max r14.w, r4.w, |r14.w|
          movc r14.w, r15.y, r14.w, -r14.w
          max r14.x, -r14.x, l(0.00000010)
          div r14.x, r14.w, r14.x
          min r13.z, r13.z, |r14.x|
          mov r22.x, r27.w
          mov r22.yz, r28.zzwz
          add r15.yzw, r23.xxyz, r22.xxyz
          mad r15.yzw, r8.xxyz, r13.zzzz, r15.yyzw
          dp3 r14.x, r15.yzwy, r15.yzwy
          sqrt r14.x, r14.x
          div r13.z, r13.z, r14.x
          add r13.z, r13.z, r13.z
          sqrt r13.z, r13.z
          mad r13.z, r3.z, l(5.000000), r13.z
          add r13.z, r13.z, l(-0.844800)
          mov r21.y, r24.z
          mov r21.z, r26.x
          dp3 r30.x, r15.yzwy, r21.xyzx
          mov r22.xy, r24.xwxx
          mov r22.z, r26.w
          dp3 r30.y, r15.yzwy, r22.xyzx
          mov r26.x, r24.y
          dp3 r30.z, r15.yzwy, r26.xyzx
          ubfe r14.x, l(9), l(16), r22.w
          utof r30.w, r14.x
          sample_l_indexable(texturecubearray)(float,float,float,float) r15.yzw, r30.xyzw, t8.wxyz, s2, r13.z
          dp3 r24.x, r23.xyzx, r21.xyzx
          dp3 r24.y, r23.xyzx, r22.xyzx
          dp3 r24.z, r23.xyzx, r26.xyzx
          mad_sat r23.xyz, r24.xyzx, r27.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
          mov r28.z, r29.x
          mad r23.xyz, r23.xyzx, r28.xyzx, r29.yzwy
          dp3 r30.x, r7.xyzx, r21.xyzx
          dp3 r30.y, r7.xyzx, r22.xyzx
          dp3 r30.z, r7.xyzx, r26.xyzx
          sample_l_indexable(texture3d)(float,float,float,float) r21.xyz, r23.xyzx, t17.xyzw, s4, l(0.000000)
          add r22.xyz, r23.xyzx, l(0.000000, 0.000000, 0.500000, 0.000000)
          sample_l_indexable(texture3d)(float,float,float,float) r24.xyz, r22.xyzx, t17.xyzw, s4, l(0.000000)
          sample_l_indexable(texture3d)(float,float,float,float) r25.xzw, r23.xyzx, t18.xwyz, s4, l(0.000000)
          sample_l_indexable(texture3d)(float,float,float,float) r26.xyz, r22.xyzx, t18.xyzw, s4, l(0.000000)
          sample_l_indexable(texture3d)(float,float,float,float) r23.xyz, r23.xyzx, t19.xyzw, s4, l(0.000000)
          sample_l_indexable(texture3d)(float,float,float,float) r22.xyz, r22.xyzx, t19.xyzw, s4, l(0.000000)
          add r27.xyz, r25.xzwx, r26.xyzx
          add r27.xyz, r23.xyzx, r27.xyzx
          add r27.xyz, r22.xyzx, r27.xyzx
          mul r27.xyz, r11.xxxx, r27.xyzx
          add r21.xyz, r21.xyzx, r24.xyzx
          add r23.xyz, r23.xyzx, r21.xyzx
          add r22.xyz, r22.xyzx, r23.xyzx
          mul r22.xyz, r11.yyyy, r22.xyzx
          add r21.xyz, r25.xzwx, r21.xyzx
          add r21.xyz, r26.xyzx, r21.xyzx
          mul r21.xyz, r11.zzzz, r21.xyzx
          mul r22.xyz, r22.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000)
          mad r22.xyz, r27.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000), r22.xyzx
          mad r21.xyz, r21.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000), r22.xyzx
          mul r21.xyz, r13.yyyy, r21.xyzx
          sample_l_indexable(texturecubearray)(float,float,float,float) r22.xyz, r30.xyzw, t8.xyzw, s2, l(6.000000)
          mul r23.xyz, r21.xyzx, r22.xyzx
          dp3 r13.z, r23.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r18.xyz, r21.xyzx, r22.xyzx, r18.xyzx
          mul r14.x, r6.w, r13.z
          mul r15.yzw, r13.yyyy, r15.yyzw
          dp3 r13.y, r15.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r13.y, r6.w, r13.z, r13.y
          div r13.y, r14.x, r13.y
          mov r21.x, r18.w
          mov r21.yz, r19.xxyx
          mad r19.xyw, r15.zwzy, r13.yyyy, r21.yzyx
          mov r18.w, r19.w
        endif 
      endif 
    endif 
  endloop 
  mov r16.xyzw, r18.xyzw
  mov r17.yzw, r19.xxyz
  iadd r11.w, r11.w, l(32)
endloop 
lt r9.w, r17.w, l(1.000000)
if_nz r9.w
  mov r12.xy, l(0,0,0,0)
  mov r13.w, l(0)
  mov r14.yz, l(0,0,1.000000,0)
  mov r15.x, l(1.000000)
  mov r18.x, r16.w
  mov r18.yzw, r17.yyzw
  mov r19.xyz, r16.xyzx
  mov r9.w, r17.w
  mov r10.w, l(0)
  loop 
    uge r11.w, r10.w, r9.x
    breakc_nz r11.w
    ushr r12.z, r10.w, l(5)
    iadd r13.xyz, r12.xyzx, r20.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r11.w, r13.xyzw, t7.yzwx
    ieq r12.z, r9.y, r10.w
    ubfe r12.w, r9.z, l(0), r11.w
    movc r11.w, r12.z, r12.w, r11.w
    iadd r12.z, r10.w, cb2[0].x
    mov r21.xyzw, r18.xyzw
    mov r13.xyz, r19.xyzx
    mov r12.w, r9.w
    mov r14.w, r11.w
    loop 
      breakc_z r14.w
      firstbit_lo r15.z, r14.w
      ishl r15.w, l(1), r15.z
      and r19.w, r14.w, r15.w
      if_nz r19.w
        xor r14.w, r14.w, r15.w
        iadd r15.w, r12.z, r15.z
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r22.xyzw, r15.w, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r23.xy, r15.w, l(16), t11.xyxx
        add r22.xyz, r22.xyzx, -v5.xyzx
        mov r23.z, r22.w
        lt r22.xyz, |r22.xyzx|, r23.zxyz
        and r15.w, r22.y, r22.x
        and r15.w, r22.z, r15.w
        if_nz r15.w
          iadd r15.z, r10.w, r15.z
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r22.xyzw, r15.z, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r23.xy, r15.z, l(96), t15.xyxx
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r15.z, l(116), t15.zwxy
          add r25.xyz, -r22.yzwy, v5.xyzx
          and r15.w, r24.w, l(0x0000ffff)
          ubfe r19.w, l(6), l(25), r24.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r26.xyzw, r15.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r15.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r15.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r15.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r15.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r15.w, l(80), t16.xyzw
          dp3 r20.w, r26.xyzx, r25.xyzx
          add_sat r20.w, r26.w, r20.w
          dp3 r22.w, r27.xyzx, r25.xyzx
          add_sat r22.w, r27.w, r22.w
          mul r20.w, r20.w, r22.w
          dp3 r22.w, r28.xyzx, r25.xyzx
          add_sat r22.w, r28.w, r22.w
          mul r20.w, r20.w, r22.w
          dp3 r22.w, r29.xyzx, r25.xyzx
          add_sat r22.w, r29.w, r22.w
          mul r20.w, r20.w, r22.w
          dp3 r22.w, r30.xyzx, r25.xyzx
          add_sat r22.w, r30.w, r22.w
          mul r20.w, r20.w, r22.w
          dp3 r22.w, r31.xyzx, r25.xyzx
          add_sat r22.w, r31.w, r22.w
          mul r14.x, r20.w, r22.w
          and r20.w, r23.x, l(1)
          movc r23.zw, r20.wwww, r14.xxxy, r14.zzzx
          mov r14.x, r23.x
          mov r26.xy, r23.zwzz
          mov r20.w, l(1)
          loop 
            ige r22.w, r20.w, r19.w
            breakc_nz r22.w
            iadd r22.w, r15.w, r20.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r22.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r22.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r22.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r22.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r22.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r22.w, l(80), t16.xyzw
            dp3 r22.w, r27.xyzx, r25.xyzx
            add_sat r22.w, r27.w, r22.w
            mul r22.w, r22.w, r26.x
            dp3 r25.w, r28.xyzx, r25.xyzx
            add_sat r25.w, r28.w, r25.w
            mul r22.w, r22.w, r25.w
            dp3 r25.w, r29.xyzx, r25.xyzx
            add_sat r25.w, r29.w, r25.w
            mul r22.w, r22.w, r25.w
            dp3 r25.w, r30.xyzx, r25.xyzx
            add_sat r25.w, r30.w, r25.w
            mul r22.w, r22.w, r25.w
            dp3 r25.w, r31.xyzx, r25.xyzx
            add_sat r25.w, r31.w, r25.w
            mul r22.w, r22.w, r25.w
            dp3 r25.w, r32.xyzx, r25.xyzx
            add_sat r25.w, r32.w, r25.w
            mul r26.x, r22.w, r25.w
            ushr r26.z, r14.x, l(2)
            ubfe r26.w, l(1), l(2), r14.x
            and r27.x, r26.z, l(2)
            max r27.y, r26.x, r26.y
            mad r22.w, -r22.w, r25.w, l(1.000000)
            mul r22.w, r22.w, r26.y
            movc r15.y, r27.x, r22.w, r27.y
            movc r26.xy, r26.wwww, r26.xyxx, r15.xyxx
            iadd r20.w, r20.w, l(1)
            mov r14.x, r26.z
          endloop 
          add_sat r14.x, -r12.w, r26.y
          mul r15.y, r23.y, r14.x
          lt r15.w, l(0.000000), r15.y
          if_nz r15.w
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r15.z, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r15.z, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r15.z, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r15.z, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r15.z, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r15.z, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r15.z, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r15.z, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r15.z, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r15.z, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xy, r15.z, l(212), t15.xyxx
            mad r21.w, r14.x, r23.y, r21.w
            mul r14.x, r24.z, r15.y
            mov r24.z, r32.z
            dp3 r15.y, r8.xyzx, r24.xyzx
            dp3 r15.z, r25.xyzx, r24.xyzx
            add r15.z, -r32.w, r15.z
            ge r15.w, r15.z, l(0.000000)
            max r15.z, r4.w, |r15.z|
            movc r15.z, r15.w, r15.z, -r15.z
            max r15.y, -r15.y, l(0.00000010)
            div r15.y, r15.z, r15.y
            min r15.y, |r15.y|, l(131072.000000)
            mov r32.z, r33.z
            dp3 r15.z, r8.xyzx, r32.xyzx
            dp3 r15.w, r25.xyzx, r32.xyzx
            add r15.w, -r33.w, r15.w
            ge r19.w, r15.w, l(0.000000)
            max r15.w, r4.w, |r15.w|
            movc r15.w, r19.w, r15.w, -r15.w
            max r15.z, -r15.z, l(0.00000010)
            div r15.z, r15.w, r15.z
            min r15.y, |r15.z|, r15.y
            mov r33.z, r34.z
            dp3 r15.z, r8.xyzx, r33.xyzx
            dp3 r15.w, r25.xyzx, r33.xyzx
            add r15.w, -r34.w, r15.w
            ge r19.w, r15.w, l(0.000000)
            max r15.w, r4.w, |r15.w|
            movc r15.w, r19.w, r15.w, -r15.w
            max r15.z, -r15.z, l(0.00000010)
            div r15.z, r15.w, r15.z
            min r15.y, |r15.z|, r15.y
            mov r34.z, r35.z
            dp3 r15.z, r8.xyzx, r34.xyzx
            dp3 r15.w, r25.xyzx, r34.xyzx
            add r15.w, -r35.w, r15.w
            ge r19.w, r15.w, l(0.000000)
            max r15.w, r4.w, |r15.w|
            movc r15.w, r19.w, r15.w, -r15.w
            max r15.z, -r15.z, l(0.00000010)
            div r15.z, r15.w, r15.z
            min r15.y, |r15.z|, r15.y
            mov r35.z, r36.x
            dp3 r15.z, r8.xyzx, r35.xyzx
            dp3 r15.w, r25.xyzx, r35.xyzx
            add r15.w, -r36.y, r15.w
            ge r19.w, r15.w, l(0.000000)
            max r15.w, r4.w, |r15.w|
            movc r15.w, r19.w, r15.w, -r15.w
            max r15.z, -r15.z, l(0.00000010)
            div r15.z, r15.w, r15.z
            min r15.y, |r15.z|, r15.y
            mov r37.zw, r36.zzzw
            dp3 r15.z, r8.zxyz, r37.xzwx
            dp3 r15.w, r25.zxyz, r37.xzwx
            add r15.w, -r37.y, r15.w
            ge r19.w, r15.w, l(0.000000)
            max r15.w, r4.w, |r15.w|
            movc r15.w, r19.w, r15.w, -r15.w
            max r15.z, -r15.z, l(0.00000010)
            div r15.z, r15.w, r15.z
            min r15.y, |r15.z|, r15.y
            mov r23.x, r29.w
            mov r23.yz, r30.zzwz
            add r23.xyz, r25.xyzx, r23.xyzx
            mad r23.xyz, r8.xyzx, r15.yyyy, r23.xyzx
            dp3 r15.z, r23.xyzx, r23.xyzx
            sqrt r15.z, r15.z
            div r15.y, r15.y, r15.z
            add r15.y, r15.y, r15.y
            sqrt r15.y, r15.y
            mad r15.y, r3.z, l(5.000000), r15.y
            add r15.y, r15.y, l(-0.844800)
            mov r22.y, r27.z
            mov r22.z, r28.x
            dp3 r32.x, r23.xyzx, r22.xyzx
            mov r24.xy, r27.xwxx
            mov r24.z, r28.w
            dp3 r32.y, r23.xyzx, r24.xyzx
            mov r28.x, r27.y
            dp3 r32.z, r23.xyzx, r28.xyzx
            ubfe r15.z, l(9), l(16), r24.w
            utof r32.w, r15.z
            sample_l_indexable(texturecubearray)(float,float,float,float) r15.yzw, r32.xyzw, t8.wxyz, s2, r15.y
            dp3 r23.x, r25.xyzx, r22.xyzx
            dp3 r23.y, r25.xyzx, r24.xyzx
            dp3 r23.z, r25.xyzx, r28.xyzx
            mad_sat r23.xyz, r23.xyzx, r29.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
            mov r30.z, r31.x
            mad r23.xyz, r23.xyzx, r30.xyzx, r31.yzwy
            dp3 r32.x, r7.xyzx, r22.xyzx
            dp3 r32.y, r7.xyzx, r24.xyzx
            dp3 r32.z, r7.xyzx, r28.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r22.xyz, r23.xyzx, t17.xyzw, s4, l(0.000000)
            add r24.xyz, r23.xyzx, l(0.000000, 0.000000, 0.500000, 0.000000)
            sample_l_indexable(texture3d)(float,float,float,float) r25.xyz, r24.xyzx, t17.xyzw, s4, l(0.000000)
            sample_l_indexable(texture3d)(float,float,float,float) r26.xzw, r23.xyzx, t18.xwyz, s4, l(0.000000)
            sample_l_indexable(texture3d)(float,float,float,float) r27.xyz, r24.xyzx, t18.xyzw, s4, l(0.000000)
            sample_l_indexable(texture3d)(float,float,float,float) r23.xyz, r23.xyzx, t19.xyzw, s4, l(0.000000)
            sample_l_indexable(texture3d)(float,float,float,float) r24.xyz, r24.xyzx, t19.xyzw, s4, l(0.000000)
            add r28.xyz, r26.xzwx, r27.xyzx
            add r28.xyz, r23.xyzx, r28.xyzx
            add r28.xyz, r24.xyzx, r28.xyzx
            mul r28.xyz, r11.xxxx, r28.xyzx
            add r22.xyz, r22.xyzx, r25.xyzx
            add r23.xyz, r23.xyzx, r22.xyzx
            add r23.xyz, r24.xyzx, r23.xyzx
            mul r23.xyz, r11.yyyy, r23.xyzx
            add r22.xyz, r26.xzwx, r22.xyzx
            add r22.xyz, r27.xyzx, r22.xyzx
            mul r22.xyz, r11.zzzz, r22.xyzx
            mul r23.xyz, r23.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000)
            mad r23.xyz, r28.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000), r23.xyzx
            mad r22.xyz, r22.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000), r23.xyzx
            mul r22.xyz, r14.xxxx, r22.xyzx
            sample_l_indexable(texturecubearray)(float,float,float,float) r23.xyz, r32.xyzw, t8.xyzw, s2, l(6.000000)
            mul r24.xyz, r22.xyzx, r23.xyzx
            dp3 r19.w, r24.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r13.xyz, r22.xyzx, r23.xyzx, r13.xyzx
            mul r20.w, r6.w, r19.w
            mul r15.yzw, r14.xxxx, r15.yyzw
            dp3 r14.x, r15.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r14.x, r6.w, r19.w, r14.x
            div r14.x, r20.w, r14.x
            mad r21.xyz, r15.yzwy, r14.xxxx, r21.xyzx
          endif 
        endif 
      endif 
    endloop 
    mov r18.xyzw, r21.xyzw
    mov r19.xyz, r13.xyzx
    iadd r10.w, r10.w, l(32)
  endloop 
  mov r17.xyzw, r18.zxyw
  mov r16.xyz, r19.xyzx
  mov r17.xyzw, r17.yzxw
else 
  mov r17.x, r16.w
endif 
max r3.z, r17.w, l(1.000000)
rcp r3.z, r3.z
mov_sat r17.w, r17.w
mul r9.xyz, r3.zzzz, r16.xyzx
mul r12.xyz, r3.zzzz, r17.xyzx
lt r4.w, r17.w, l(0.990000)
if_nz r4.w
  add r4.w, -r17.w, l(1.000000)
  mul r6.w, r4.w, cb2[19].x
  add r13.xyz, v5.xyzx, -cb2[35].xyzx
  mul r14.x, r13.x, cb2[35].w
  mul r14.yz, r13.yyzy, cb2[36].xxyx
  add_sat r13.xyz, r14.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mul r14.xy, r13.xyxx, cb2[36].zwzz
  mul r14.z, r13.z, cb2[37].x
  add r13.xyz, r14.xyzx, cb2[37].yzwy
  sample_l_indexable(texture3d)(float,float,float,float) r14.xyz, r13.xyzx, t17.xyzw, s4, l(0.000000)
  add r15.xyz, r13.xyzx, l(0.000000, 0.000000, 0.500000, 0.000000)
  sample_l_indexable(texture3d)(float,float,float,float) r17.xyz, r15.xyzx, t17.xyzw, s4, l(0.000000)
  sample_l_indexable(texture3d)(float,float,float,float) r18.xyz, r13.xyzx, t18.xyzw, s4, l(0.000000)
  sample_l_indexable(texture3d)(float,float,float,float) r19.xyz, r15.xyzx, t18.xyzw, s4, l(0.000000)
  sample_l_indexable(texture3d)(float,float,float,float) r13.xyz, r13.xyzx, t19.xyzw, s4, l(0.000000)
  sample_l_indexable(texture3d)(float,float,float,float) r15.xyz, r15.xyzx, t19.xyzw, s4, l(0.000000)
  add r20.xyz, r18.xyzx, r19.xyzx
  add r20.xyz, r13.xyzx, r20.xyzx
  add r20.xyz, r15.xyzx, r20.xyzx
  mul r20.xyz, r11.xxxx, r20.xyzx
  add r14.xyz, r14.xyzx, r17.xyzx
  add r13.xyz, r13.xyzx, r14.xyzx
  add r13.xyz, r15.xyzx, r13.xyzx
  mul r11.xyw, r11.yyyy, r13.xyxz
  add r13.xyz, r18.xyzx, r14.xyzx
  add r13.xyz, r19.xyzx, r13.xyzx
  mul r13.xyz, r11.zzzz, r13.xyzx
  mul r11.xyz, r11.xywx, l(0.250000, 0.250000, 0.250000, 0.000000)
  mad r11.xyz, r20.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000), r11.xyzx
  mad r11.xyz, r13.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000), r11.xyzx
  mul r11.xyz, r6.wwww, r11.xyzx
  mov r7.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r7.xyz, r7.xyzw, t8.xyzw, s2, l(6.000000)
  mul r7.xyz, r7.xyzx, r11.xyzx
  dp3 r6.w, r7.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  mad r9.xyz, r16.xyzx, r3.zzzz, r7.xyzx
  mov r8.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r7.xyz, r8.xyzw, t8.xyzw, s2, r3.w
  mad r3.z, cb2[19].x, r4.w, -r6.w
  mad r3.z, r3.y, r3.z, r6.w
  mad r12.xyz, r7.xyzx, r3.zzzz, r12.xyzx
endif 
mad r4.xyz, r9.xyzx, r2.yyyy, r4.xyzx
mad r3.xy, r3.xyxx, l(0.984375, 0.984375, 0.000000, 0.000000), l(0.00781250, 0.00781250, 0.000000, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r3.xy, r3.xyxx, t5.xyzw, s2, l(0.000000)
mul r7.xyz, r2.yyyy, r12.xyzx
mad r2.xyz, r7.xyzx, r3.xxxx, r2.xzwx
mad r3.xyz, r7.xyzx, r3.yyyy, r5.xyzx
mul r2.w, r0.w, l(0.040000)
mad r0.w, -r0.w, l(0.040000), l(1.000000)
mul r2.xyz, r0.wwww, r2.xyzx
mad r2.xyz, r3.xyzx, r2.wwww, r2.xyzx
mad r0.xyz, r4.xyzx, r0.xyzx, r2.xyzx
if_nz cb0[11].w
  dp3 r0.w, r6.xyzx, r10.xyzx
  eq r2.xyz, cb0[12].yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  and r2.x, r2.y, r2.x
  mul r2.yw, cb0[12].yyyz, l(0.000000, 0.01745329, 0.000000, 0.01745329)
  sincos null, r2.yw, r2.yyyw
  mul r3.xy, r2.ywyy, r2.ywyy
  mad r2.y, r2.y, r2.y, -r3.y
  div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r2.y
  mad r4.y, -r3.x, r4.x, l(1.000000)
  movc r2.xy, r2.xxxx, l(0,1.000000,0,0), r4.xyxx
  mul r0.w, |r0.w|, |r0.w|
  mad_sat r0.w, r0.w, r2.x, r2.y
  mul r0.w, r0.w, r1.w
  ftoi r3.xy, v0.xyxx
  mov r3.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r2.x, r3.xyzw, t0.xyzw
  ge r2.y, r2.x, l(0.984375)
  mul r2.w, r2.x, l(1.01587307)
  mad r2.x, r2.x, l(64.000000), l(-63.000000)
  movc r2.x, r2.y, r2.x, r2.w
  max r2.x, r2.x, l(0.00000001)
  rcp r2.x, r2.x
  div r2.y, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[12].x
  movc r2.y, r2.z, l(60000.000000), r2.y
  add r2.x, -r5.w, r2.x
  mul_sat r2.x, r2.y, r2.x
  mul r1.w, r0.w, r2.x
endif 
lt r0.w, l(0.000000), cb2[9].z
if_nz r0.w
  dp3 r0.w, v5.xyzx, v5.xyzx
  rsq r2.x, r0.w
  mul r2.xyz, r2.xxxx, v5.xyzx
  sqrt r0.w, r0.w
  lt r2.w, l(0.000000), cb2[13].w
  if_nz r2.w
    mad r3.xy, r0.wwww, cb2[15].xyxx, cb2[14].zwzz
    mul r3.xy, r3.xyxx, cb2[16].xyxx
    lt r2.w, l(0.010000), |v5.z|
    mul r3.zw, v5.zzzz, cb2[15].zzzw
    mul r4.xy, r3.zwzz, l(-1.442695, -1.442695, 0.000000, 0.000000)
    exp r4.xy, r4.xyxx
    add r4.xy, -r4.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    div r3.zw, r4.xxxy, r3.zzzw
    mul r3.zw, r3.zzzw, r3.xxxy
    movc r3.xy, r2.wwww, r3.zwzz, r3.xyxx
    mul r3.xzw, r3.xxxx, cb2[12].xxyz
    exp r3.xzw, r3.xxzw
    mul r4.xyz, r3.yyyy, cb2[12].xyzx
    exp r4.xyz, r4.xyzx
    add r4.xyz, -r3.xzwx, r4.xyzx
    mad r3.xyz, cb2[13].wwww, r4.xyzx, r3.xzwx
  else 
    mad r2.w, r0.w, cb2[15].x, cb2[14].z
    mul r2.w, r2.w, cb2[16].x
    lt r3.w, l(0.010000), |v5.z|
    mul r4.x, v5.z, cb2[15].z
    mul r4.y, r4.x, l(-1.442695)
    exp r4.y, r4.y
    add r4.y, -r4.y, l(1.000000)
    div r4.x, r4.y, r4.x
    mul r4.x, r2.w, r4.x
    movc r2.w, r3.w, r4.x, r2.w
    mul r4.xyz, r2.wwww, cb2[12].xyzx
    exp r3.xyz, r4.xyzx
  endif 
  mad r3.xyz, r3.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r3.xyz, r3.xyzx, -cb2[9].zzzz
  dp3 r2.x, cb2[7].yzwy, -r2.xyzx
  mad r2.y, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r2.z, cb2[8].w, -r2.x, l(1.000000)
  mul r2.z, r2.z, r2.z
  mul r2.z, r2.z, l(12.566371)
  div r2.y, r2.y, r2.z
  add r0.w, r0.w, -cb2[10].w
  mul_sat r0.w, r0.w, cb2[11].w
  mul r0.w, r0.w, r2.y
  mov_sat r2.x, r2.x
  mad r2.x, r2.x, r2.x, l(1.000000)
  mad r2.x, r2.x, l(0.05968310), l(-1.000000)
  mad r2.x, cb2[8].z, r2.x, l(1.000000)
  mul r2.yzw, r0.wwww, cb2[11].xxyz
  mad r2.xyz, r2.xxxx, cb2[10].xyzx, r2.yzwy
  mul r2.xyz, r2.xyzx, cb2[9].wwww
  add r4.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r2.xyz, r2.xyzx, r4.xyzx
  mad r2.xyz, r0.xyzx, r3.xyzx, r2.xyzx
else 
  mul r0.w, v5.z, cb2[6].x
  mad r2.w, cb2[6].x, v5.z, cb2[5].x
  lt r3.x, |r0.w|, l(0.000100)
  min r3.y, r2.w, l(64.000000)
  mul r3.y, r3.y, l(1.442695)
  exp r3.y, r3.y
  mov_sat r3.z, cb2[6].z
  lt r3.w, r2.w, l(0.000000)
  add r2.w, r2.w, l(1.000000)
  movc r2.w, r3.w, r3.y, r2.w
  add r2.w, r2.w, -cb2[6].z
  movc r0.w, r3.x, l(1.000000), r0.w
  div r0.w, r2.w, r0.w
  movc r0.w, r3.x, r3.z, r0.w
  mul r0.w, r0.w, cb2[5].z
  dp3 r2.w, v5.xyzx, v5.xyzx
  sqrt r3.x, r2.w
  mad r0.w, r0.w, r3.x, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  rsq r2.w, r2.w
  mul r3.xyz, r2.wwww, v5.xyzx
  dp3 r2.w, cb2[7].yzwy, r3.xyzx
  mad_sat r2.w, cb2[8].y, r2.w, cb2[8].x
  add r3.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r3.xyzw, r2.wwww, r3.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r3.w
  add r3.xyz, -r0.xyzx, r3.xyzx
  mad r2.xyz, r0.wwww, r3.xyzx, r0.xyzx
endif 
mul r0.xyz, r2.xyzx, cb1[85].yyyy
ge r2.xyz, r0.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.xyz, r0.xyzx, r2.xyzx
min r0.xyz, r0.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
max r2.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r1.xyz, r1.wwww, r2.xyzx
and r0.w, r1.w, l(0x7f800000)
ieq r0.w, r0.w, l(0x7f800000)
eq r3.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
and r3.xy, r3.zwzz, r3.xyxx
and r2.w, r3.y, r3.x
or r0.w, r0.w, r2.w
if_z r0.w
  ftou r3.xy, v0.xyxx
  imm_atomic_iadd r4.x, u6, r3.xyxx, l(1)
  and r3.zw, r4.xxxx, l(0, 0, 0x0000ffff, 0x0000ffff)
  ult r0.w, r3.w, cb2[58].z
  if_nz r0.w
    max r0.w, r1.z, r1.y
    max r0.w, r0.w, r1.x
    mov r0.w, |r0.w|
    and r0.w, r0.w, l(0x7f800000)
    iadd r0.w, r0.w, l(0x00800000)
    mad r2.xyz, r2.xyzx, r1.wwww, r0.wwww
    ubfe r2.x, l(8), l(15), r2.x
    ushr r2.yz, r2.yyzy, l(0, 15, 15, 0)
    bfi r2.yz, l(0, 8, 8, 0), l(0, 8, 16, 0), r2.yyzy, l(0, 0, 0, 0)
    iadd r2.x, r2.y, r2.x
    iadd r2.x, r2.z, r2.x
    ishl r0.w, r0.w, l(1)
    iadd r2.xzw, r0.wwww, r2.xxxx
    mov_sat r0.w, r1.w
    mul r0.w, r0.w, l(2046.000000)
    ftou r0.w, r0.w
    ishl r4.x, v0.z, l(2)
    and r0.w, r0.w, l(2046)
    bfi r2.y, l(11), l(0), r0.w, r4.x
    store_uav_typed u7.xyzw, r3.xyzw, r2.xyzw
    mov r0.w, l(-1)
  else 
    mov r0.w, l(0)
  endif 
else 
  mov r0.w, l(-1)
endif 
mul r1.xyz, r1.wwww, r0.xyzx
movc o0.xyzw, r0.wwww, l(0,0,0,0), r1.xyzw
ret 
// Approximately 2366 instruction slots used
