//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:36:59 2021
//
//
// Note: shader requires additional functionality:
//       Early depth-stencil
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float baseNormalHeight;            // Offset:  160 Size:     4
//   float2 glossRange;                 // Offset:  164 Size:     8
//   float anisotropy;                  // Offset:  172 Size:     4
//   float3 specColorTint;              // Offset:  176 Size:    12
//   bool useAlphaControls;             // Offset:  188 Size:     4
//   float zFeatherDistance;            // Offset:  192 Size:     4
//   float falloffBegin;                // Offset:  196 Size:     4
//   float falloffEnd;                  // Offset:  200 Size:     4
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4 [unused]
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// colorSampler                      sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// specColorSampler                  sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// normalSampler                     sampler      NA          NA             s5      1 
// aoSampler                         sampler      NA          NA             s6      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// floatZSampler                     texture  float4          2d             t0      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// colorMap                          texture  float4          2d            t21      1 
// normalMap                         texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// glossMap                          texture  float4          2d            t24      1 
// aoMap                             texture  float4          2d            t25      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// gOit_Pixels                           UAV    uint          2d             u6      1 
// gOit_Nodes                            UAV   uint2     2darray             u7      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyz 
// COLOR                    0   xyz         1     NONE   float   xyz 
// COLOR                    1      w        1     NONE   float      w
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xyz         3     NONE   float   xyz 
// TEXCOORD                 2   xyz         4     NONE   float   xyz 
// TEXCOORD                 3   xyz         5     NONE   float   xyz 
// OFFPOSITION              0   xyz         6     NONE   float   xyz 
// SV_IsFrontFace           0   x           7    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | forceEarlyDepthStencil
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[13], immediateIndexed
dcl_constantbuffer CB1[86], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2darray (float,float,float,float) t31
dcl_uav_typed_texture2d (uint,uint,uint,uint) u6
dcl_uav_typed_texture2darray (uint,uint,uint,uint) u7
dcl_input_ps_siv linear noperspective v0.xyz, position
dcl_input_ps linear v1.xyz
dcl_input_ps linear v1.w
dcl_input_ps linear v2.xy
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps_sgv constant v7.x, is_front_face
dcl_output o0.xyzw
dcl_temps 68
dcl_indexableTemp x0[4], 4
dcl_indexableTemp x1[4], 4
dcl_indexableTemp x2[4], 4
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v2.xyxx, t21.xyzw, s1
mul r1.w, r0.w, v1.w
eq r0.w, r1.w, l(0.000000)
if_nz r0.w
  mov o0.xyzw, l(0,0,0,0)
  ret 
endif 
mul r0.xyz, r0.xyzx, v1.xyzx
sample_indexable(texture2d)(float,float,float,float) r0.w, v2.xyxx, t25.yzwx, s6
sample_indexable(texture2d)(float,float,float,float) r2.x, v2.xyxx, t24.xyzw, s3
add r2.y, -cb0[10].y, cb0[10].z
mul r2.z, r2.y, r2.x
mad r2.x, r2.x, r2.y, cb0[10].y
mad r2.y, r2.z, l(0.500000), cb0[10].y
mul_sat r2.xy, r2.xyxx, l(0.05882353, 0.05882353, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r3.xyz, v2.xyxx, t22.xyzw, s5
add r3.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.000000, 0.000000)
mad r3.xyz, cb0[10].xxxx, r3.xyzx, l(0.500000, 0.500000, 0.000000, 0.000000)
mad r2.zw, r3.xxxy, l(0.000000, 0.000000, 1.99218750, 1.99218750), l(0.000000, 0.000000, -1.000000, -1.000000)
dp2 r3.x, r2.zwzz, r2.zwzz
add r3.x, -r3.x, l(1.000000)
max r3.x, r3.x, l(0.000000)
sqrt r3.x, r3.x
mul r3.y, r3.z, r3.z
mul r3.y, r3.y, l(0.33333334)
min r3.y, r3.y, l(1.000000)
movc r3.z, v7.x, l(1.000000), l(-1.000000)
dp3 r3.w, v3.xyzx, v3.xyzx
rsq r3.w, r3.w
mul r4.xyz, r3.wwww, v3.xyzx
mul r4.xyz, r3.zzzz, r4.xyzx
dp3 r3.w, v4.xyzx, v4.xyzx
rsq r3.w, r3.w
mul r5.xyz, r3.wwww, v4.xyzx
mul r5.xyz, r3.zzzz, r5.xyzx
dp3 r3.w, v5.xyzx, v5.xyzx
rsq r3.w, r3.w
mul r6.xyz, r3.wwww, v5.xyzx
mul r6.xyz, r3.zzzz, r6.xyzx
mul r2.xy, r2.xyxx, l(-17.000000, -17.000000, 0.000000, 0.000000)
exp r2.x, r2.x
add r2.x, r2.x, r3.y
log r2.x, r2.x
exp r2.y, r2.y
add r2.y, r2.y, r3.y
log r2.y, r2.y
mul r2.xy, r2.xyxx, l(-0.05882353, -0.05882353, 0.000000, 0.000000)
max r2.xy, r2.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r3.yzw, r2.wwww, r6.xxyz
mad r3.yzw, r5.xxyz, r2.zzzz, r3.yyzw
mad r3.xyz, r4.xyzx, r3.xxxx, r3.yzwy
dp3 r2.z, r3.xyzx, r3.xyzx
rsq r2.z, r2.z
mul r3.xyz, r2.zzzz, r3.xyzx
ftou r2.zw, v0.xxxy
ge r4.w, v0.z, l(0.984375)
mul r5.w, v0.z, l(1.01587307)
mad r6.w, v0.z, l(64.000000), l(-63.000000)
movc r4.w, r4.w, r6.w, r5.w
max r4.w, r4.w, l(0.00000001)
rcp r4.w, r4.w
dp3 r5.w, -v6.xyzx, -v6.xyzx
rsq r5.w, r5.w
mul r7.xyz, r5.wwww, -v6.xyzx
utof r8.xy, r2.wzww
dp2 r6.w, r8.yxyy, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r6.w, r6.w
mul r6.w, r6.w, l(52.982918)
frc r6.w, r6.w
mad r6.w, r6.w, l(6.28318548), cb1[70].w
sincos r9.x, r10.x, r6.w
dp2 r6.w, r8.xyxx, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r6.w, r6.w
mul r6.w, r6.w, l(52.982918)
frc r6.w, r6.w
mad r6.w, r6.w, l(6.28318548), cb1[70].w
sincos r8.x, r11.x, r6.w
dp3_sat r6.w, r3.xyzx, r7.xyzx
dp3 r7.w, -r7.xyzx, r3.xyzx
add r7.w, r7.w, r7.w
mad r12.xyz, r3.xyzx, -r7.wwww, -r7.xyzx
mul r8.yzw, cb1[9].xxyw, -cb1[24].yyyy
mad r8.yzw, -cb1[24].xxxx, cb1[8].xxyw, r8.yyzw
mad r8.yzw, -cb1[24].zzzz, cb1[10].xxyw, r8.yyzw
add r8.yzw, r8.yyzw, cb1[11].xxyw
add r13.xyz, v6.xyzx, cb1[24].xyzx
mul r9.z, r6.w, l(0.984375)
mad r7.w, r6.w, l(0.54703742), l(0.45296258)
mul r11.yz, r7.wwww, l(0.000000, 0.54703742, 0.45296258, 0.000000)
min r7.w, |cb0[10].w|, l(1.000000)
add r2.y, -r2.x, r2.y
mad r2.x, r7.w, r2.y, r2.x
lt r2.y, cb0[10].w, l(0.000000)
mul r2.x, r2.x, l(17.000000)
exp r14.y, r2.x
mov r14.xz, l(1.000000,0,1.000000,0)
movc r2.xy, r2.yyyy, r14.xyxx, r14.yxyy
add r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000)
div r2.xy, l(2.000000, 2.000000, 0.000000, 0.000000), r2.xyxx
dp3 r7.w, r3.xyzx, cb2[17].xyzx
ge r10.w, l(0.000000), |r7.w|
if_nz r10.w
  mov r14.y, l(0)
endif 
if_z r10.w
  mul r15.xyz, v6.yyyy, cb2[29].xyzx
  mad r15.xyz, v6.xxxx, cb2[28].xyzx, r15.xyzx
  mad r15.xyz, v6.zzzz, cb2[30].xyzx, r15.xyzx
  add r15.xyz, r15.xyzx, cb2[31].xyzx
  add r10.w, r15.z, -cb2[17].w
  mad r10.w, -r10.w, l(0.00006104), l(1.000000)
  mov_sat r11.w, r10.w
  eq r11.w, r10.w, r11.w
  if_nz r11.w
    mov r11.w, l(0)
    mov r15.w, l(0)
    loop 
      ge r16.x, r11.w, l(3.000000)
      breakc_nz r16.x
      ftou r16.x, r11.w
      add r16.yz, r15.xxyx, -cb2[r16.x + 20].xxyx
      max r16.y, |r16.z|, |r16.y|
      mul r15.w, r16.y, cb2[r16.x + 20].z
      lt r16.x, r15.w, l(1.000000)
      if_nz r16.x
        break 
      endif 
      add r11.w, r11.w, l(1.000000)
      mov r15.w, l(0)
    endloop 
  else 
    mov r11.w, l(3.000000)
    mov r15.w, l(0)
  endif 
  ge r16.x, r11.w, l(3.000000)
  if_nz r16.x
    mul r16.yzw, l(0.000000, 128.000000, 0.500000, 0.500000), cb2[27].zzxy
    rcp r17.xz, r16.yyyy
    mov r17.y, -r17.z
    mad r16.yzw, r15.xxyx, r17.xxyz, r16.zzwz
    add r17.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r16.yzw, r16.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r16.yzw, r17.xxyz, r16.yyzw
    mul r17.xy, r16.wzww, cb2[32].xxxx
    round_ni r17.xy, r17.xyxx
    mul r17.y, r17.y, cb2[27].x
    mad r17.x, r17.y, cb2[32].x, r17.x
    ftou r17.x, r17.x
    iadd r17.x, r17.x, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.y, r17.x, l(0), t23.xxxx
    and r17.z, r17.y, l(0x40000000)
    ishl r17.w, r17.y, l(2)
    if_z r17.z
      and r17.z, r17.y, l(0x01ffffff)
      iadd r18.x, r17.z, r17.x
      ushr r17.x, r17.y, l(25)
      utof r17.x, r17.x
      mul r16.yzw, r16.yyzw, r17.xxxx
      frc r16.yzw, r16.yyzw
      mul r16.yzw, r16.yyzw, l(0.000000, 128.000000, 128.000000, 128.000000)
      ftou r16.yzw, r16.yyzw
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.x, l(0), t23.xxxx
      ushr r17.xy, r16.wzww, l(6, 6, 0, 0)
      and r17.z, r18.z, l(0xc0000000)
      iadd r18.w, r18.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.w, r18.w, l(0), t23.xxxx
      movc r17.y, r17.y, r18.z, r18.w
      ushr r18.w, r17.y, l(13)
      movc r17.x, r17.x, r18.w, r17.y
      and r17.x, r17.x, l(8191)
      iadd r19.x, r17.x, r18.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.z, r19.x, l(0), t23.xxxx
      mov r18.y, l(0)
      mov r19.y, l(1)
      movc r19.xyz, r17.zzzz, r18.xyzx, r19.xyzx
      movc r20.yz, r17.zzzz, l(0,6,1,0), l(0,5,2,0)
      ushr r17.xy, r16.wzww, r20.yyyy
      and r17.xy, r17.xyxx, l(1, 1, 0, 0)
      and r18.w, r19.z, l(0xc0000000)
      iadd r19.w, r19.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.w, r19.w, l(0), t23.xxxx
      movc r17.y, r17.y, r19.z, r19.w
      ushr r19.w, r17.y, l(13)
      movc r17.x, r17.x, r19.w, r17.y
      and r17.x, r17.x, l(8191)
      iadd r20.x, r17.x, r19.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.w, r20.x, l(0), t23.xxxx
      movc r19.xyz, r18.wwww, r19.xyzx, r20.xzwx
      movc r17.xyz, r17.zzzz, r18.xyzx, r19.xyzx
      and r18.x, r17.z, l(0xc0000000)
      if_z r18.x
        iadd r18.x, -r17.y, l(6)
        ushr r18.xy, r16.wzww, r18.xxxx
        or r18.z, r17.z, l(0x40000000)
        bfi r18.y, l(1), l(1), r18.y, l(0)
        bfi r18.x, l(1), l(0), r18.x, r18.y
        imul null, r18.x, r18.x, l(10)
        ushr r18.x, r18.z, r18.x
        and r18.x, r18.x, l(1023)
        iadd r18.x, r17.x, r18.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.w, r18.x, l(0), t23.xxxx
        iadd r18.yz, r17.yyyy, l(0, 1, 2, 0)
        iadd r17.y, -r18.y, l(6)
        ushr r19.xy, r16.wzww, r17.yyyy
        and r17.y, r18.w, l(0xc0000000)
        or r19.z, r18.w, l(0x40000000)
        bfi r19.y, l(1), l(1), r19.y, l(0)
        bfi r19.x, l(1), l(0), r19.x, r19.y
        imul null, r19.x, r19.x, l(10)
        ushr r19.x, r19.z, r19.x
        and r19.x, r19.x, l(1023)
        iadd r19.x, r18.x, r19.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.z, r19.x, l(0), t23.xxxx
        mov r19.y, r18.z
        movc r19.xyz, r17.yyyy, r18.xywx, r19.xyzx
        iadd r18.y, -r19.y, l(6)
        ushr r18.yz, r16.wwzw, r18.yyyy
        and r19.y, r19.z, l(0xc0000000)
        or r19.w, r19.z, l(0x40000000)
        bfi r18.z, l(1), l(1), r18.z, l(0)
        bfi r18.y, l(1), l(0), r18.y, r18.z
        imul null, r18.y, r18.y, l(10)
        ushr r18.y, r19.w, r18.y
        and r18.y, r18.y, l(1023)
        iadd r20.x, r18.y, r19.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.y, r20.x, l(0), t23.xxxx
        movc r18.yz, r19.yyyy, r19.xxzx, r20.xxyx
        movc r17.xz, r17.yyyy, r18.xxwx, r18.yyzy
      endif 
      and r17.y, r17.z, l(0xc0000000)
      if_z r17.y
        ubfe r18.x, l(14), l(15), r17.z
        utof r18.x, r18.x
        mul r18.x, r18.x, cb2[27].w
        and r18.yz, r17.zzzz, l(0, 0x00007fff, 0x20000000, 0)
        utof r18.y, r18.y
        mul r18.y, r18.y, cb2[27].w
        mul r18.xy, r18.xyxx, l(0.00006104, 0.00003052, 0.000000, 0.000000)
        and r18.w, r16.z, l(3)
        iadd r18.w, r17.x, r18.w
        iadd r18.w, r18.w, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.w, r18.w, l(0), t23.xxxx
        bfi r19.xyz, l(2, 2, 1, 0), l(3, 1, 4, 0), r16.yzwy, l(0, 0, 0, 0)
        ushr r16.y, r18.w, r19.x
        and r16.y, r16.y, l(255)
        utof r16.y, r16.y
        mul r16.y, r18.y, r16.y
        mad r16.y, r16.y, l(0.00392157), r18.x
        iadd r16.z, r19.y, l(1)
        ubfe r16.w, l(1), l(1), r16.w
        iadd r16.z, r16.w, r16.z
        iadd r16.z, r16.z, r17.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.z, r16.z, l(0), t23.xxxx
        ushr r16.z, r16.z, r19.z
        and r16.z, r16.z, l(0x0000ffff)
        utof r16.z, r16.z
        mul r16.z, r18.y, r16.z
        mad r16.z, r16.z, l(0.00001526), r18.x
        movc r17.w, r18.z, r16.y, r16.z
      else 
        and r16.y, r17.z, l(0x80000000)
        iadd r16.z, r17.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.z, r16.z, l(0), t23.xxxx
        movc r16.y, r16.y, r16.z, l(0)
        ishl r16.z, r17.z, l(2)
        ushr r16.w, r16.y, l(16)
        and r16.y, r16.y, l(0x0000ffff)
        f16tof32 r16.yw, r16.yyyw
        mad r16.z, r15.x, r16.w, r16.z
        mad r16.y, r15.y, r16.y, r16.z
        movc r17.w, r17.y, r16.y, r17.w
      endif 
    endif 
    mad r15.z, -cb2[27].z, l(2.000000), r15.z
    lt r15.z, r17.w, r15.z
    movc r14.y, r15.z, l(0), l(1.000000)
  endif 
  if_z r16.x
    if_z cb2[58].y
      ftou r15.z, r11.w
      add r16.xy, r15.xyxx, -cb2[r15.z + 20].xyxx
      mul r16.xy, r16.xyxx, cb2[r15.z + 20].zzzz
      mad r16.xy, r16.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r15.z, cb2[26].y
      add r16.z, r11.w, r15.z
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r15.z, r16.xyzx, t13.xxxx, s13, r10.w
      sample_l_indexable(texture2darray)(float,float,float,float) r16.x, r16.xyzx, t31.xyzw, s0, l(0.000000)
      add r15.z, r15.z, r16.x
      add_sat r15.z, r15.z, l(-1.000000)
      mul r16.x, r15.z, r15.z
      mul r14.y, r15.z, r16.x
    endif 
    if_nz cb2[58].y
      mov r16.x, -r9.x
      ftou r15.z, r11.w
      add r11.w, r11.w, l(1.000000)
      min r11.w, r11.w, l(2.000000)
      ftou r11.w, r11.w
      add r15.w, -r15.w, l(1.000000)
      mul r15.w, r15.w, l(28.000000)
      ftou r15.w, r15.w
      add r17.xy, r15.xyxx, -cb2[r15.z + 20].xyxx
      mul r17.xy, r17.xyxx, cb2[r15.z + 20].zzzz
      mad r17.xy, r17.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      add r15.xy, r15.xyxx, -cb2[r11.w + 20].xyxx
      mul r15.xy, r15.xyxx, cb2[r11.w + 20].zzzz
      mad r15.xy, r15.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      mov r16.y, r10.x
      mov r16.z, r9.x
      mov r16.w, l(0)
      mov r17.z, l(0)
      loop 
        uge r17.w, r17.z, l(8)
        breakc_nz r17.w
        ult r17.w, r15.w, r17.z
        movc r18.xy, r17.wwww, r15.xyxx, r17.xyxx
        movc r18.z, r17.w, cb2[r11.w + 20].w, cb2[r15.z + 20].w
        movc r17.w, r17.w, r11.w, r15.z
        dp2 r19.x, icb[r17.z + 0].yxyy, r16.xyxx
        dp2 r19.y, icb[r17.z + 0].yxyy, r16.yzyy
        mad r18.xy, r19.xyxx, r18.zzzz, r18.xyxx
        iadd r17.w, r17.w, cb2[26].y
        utof r18.z, r17.w
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r17.w, r18.xyzx, t13.xxxx, s13, r10.w
        sample_l_indexable(texture2darray)(float,float,float,float) r18.x, r18.xyzx, t31.xyzw, s0, l(0.000000)
        add r17.w, r17.w, r18.x
        add_sat r17.w, r17.w, l(-1.000000)
        mad r16.w, r17.w, l(0.125000), r16.w
        iadd r17.z, r17.z, l(1)
      endloop 
      mul r10.w, r16.w, r16.w
      mul r14.y, r16.w, r10.w
    endif 
  endif 
endif 
and r10.w, cb2[53].x, l(0x0000ffff)
if_nz r10.w
  iadd r10.w, r10.w, cb2[0].x
  iadd r10.w, r10.w, l(-1)
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r11.w, r10.w, l(52), t12.xxxx
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r10.w, l(68), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r10.w, l(84), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r10.w, l(132), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r10.w, l(148), t12.xyzw
  mad r19.x, |r7.w|, l(-0.200000), l(0.400000)
  lt r19.y, r7.w, l(0.000000)
  movc r19.x, r19.y, -r19.x, r19.x
  mad r19.xyz, r3.xyzx, r19.xxxx, v6.xyzx
  mov r19.w, l(1.000000)
  dp4 r15.x, r15.xyzw, r19.xyzw
  dp4 r15.y, r16.xyzw, r19.xyzw
  mad r15.xy, r15.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  add r15.xy, r18.zwzz, r15.xyxx
  mul r15.xy, r18.xyxx, r15.xyxx
  div r15.zw, r11.wwww, r17.xxxz
  add r16.xy, -r15.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
  ge r16.xy, r15.xyxx, r16.xyxx
  ge r15.zw, r15.zzzw, r15.xxxy
  or r15.zw, r15.zzzw, r16.xxxy
  or r15.z, r15.w, r15.z
  if_z r15.z
    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.z, r10.w, l(28), t12.xxxx
    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r10.w, l(100), t12.xyzw
    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xy, r10.w, l(164), t12.xyxx
    dp4 r10.w, r16.xyzw, r19.xyzw
    mov_sat r15.xy, r15.xyxx
    mad r16.xy, r15.xyxx, r17.xzxx, r17.ywyy
    add r10.w, r18.x, r10.w
    div r10.w, r10.w, r18.y
    max r10.w, r10.w, l(0.00006104)
    and r15.x, r15.z, l(0x0000ffff)
    if_nz cb2[58].y
      mov r17.x, -r9.x
      utof r18.z, r15.x
      mov r17.y, r10.x
      mov r17.z, r9.x
      mov r15.yz, l(0,0,0,0)
      loop 
        ige r15.w, r15.z, l(8)
        breakc_nz r15.w
        dp2 r19.x, icb[r15.z + 0].yxyy, r17.xyxx
        dp2 r19.y, icb[r15.z + 0].yxyy, r17.yzyy
        mad r18.xy, r19.xyxx, r11.wwww, r16.xyxx
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r15.w, r18.xyzx, t9.xxxx, s13, r10.w
        mad r15.y, r15.w, l(0.125000), r15.y
        iadd r15.z, r15.z, l(1)
      endloop 
    else 
      utof r16.z, r15.x
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r15.y, r16.xyzx, t9.xxxx, s13, r10.w
    endif 
    mul r10.w, r15.y, r15.y
    mul r10.w, r15.y, r10.w
  else 
    mov r10.w, l(1.000000)
  endif 
  mul r14.y, r10.w, r14.y
endif 
lt r10.w, l(0.000000), |r7.w|
if_nz r10.w
  lt r10.w, l(0.000000), r14.y
  if_nz r10.w
    mul r10.w, l(0.16666667), cb2[18].w
    if_nz cb2[23].x
      mov r13.w, l(1.000000)
      dp4 r11.w, cb2[24].xyzw, r13.xyzw
      dp4 r13.w, cb2[25].xyzw, r13.xyzw
      frc r15.x, r11.w
      frc r15.y, r13.w
      iadd r11.w, l(-1), cb2[23].x
      utof r15.z, r11.w
      sample_l_indexable(texture2darray)(float,float,float,float) r15.xyz, r15.xyzx, t20.xyzw, s2, l(0.000000)
      add r15.xyz, r15.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
      mad r15.xyz, cb2[23].yyyy, r15.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      mul r15.xyz, r15.xyzx, cb2[18].xyzx
    else 
      mov r15.xyz, cb2[18].xyzx
    endif 
    mad r11.w, -r6.w, l(0.500000), l(1.000000)
    mad r11.w, -|r7.w|, r11.w, l(1.000000)
    mul r11.w, r11.w, r11.w
    mad r11.w, -r11.w, l(0.620000), l(0.620000)
    add r11.w, -|r7.w|, r11.w
    mad r11.w, r11.w, l(0.81649661), |r7.w|
    lt r13.w, l(0.000000), r7.w
    mov_sat r7.w, r7.w
    mad r16.xyz, -v6.xyzx, r5.wwww, cb2[17].xyzx
    dp3 r5.w, r16.xyzx, r16.xyzx
    rsq r5.w, r5.w
    mul r16.xyz, r5.wwww, r16.xyzx
    dp3 r5.w, r3.xyzx, r16.xyzx
    dp3 r15.w, r16.xyzx, r7.xyzx
    mul r16.w, r2.y, r2.x
    sqrt r16.w, r16.w
    dp3 r17.x, r16.xyzx, r5.xyzx
    dp3 r16.x, r16.xyzx, r6.xyzx
    mul r16.y, r17.x, r17.x
    mul r16.x, r16.x, r16.x
    div r16.xy, r16.xyxx, r2.yxyy
    add r16.x, r16.x, r16.y
    mad r5.w, |r5.w|, |r5.w|, r16.x
    mad r16.x, r7.w, r11.y, r11.z
    mul r5.w, r5.w, r5.w
    mul r5.w, r16.w, r5.w
    mul r5.w, r16.x, r5.w
    rcp r5.w, r5.w
    mul r7.w, r10.w, r7.w
    mul r5.w, r5.w, r7.w
    add_sat r7.w, -r15.w, l(1.000000)
    mul r10.w, r7.w, r7.w
    mul r10.w, r10.w, r10.w
    mul r7.w, r7.w, r10.w
    mul r7.w, r5.w, r7.w
    and r10.w, r11.w, r13.w
    movc r16.xyz, r13.wwww, l(0,0,0,0), r11.wwww
    and r17.xy, r7.wwww, r13.wwww
    and r18.xyz, r5.wwww, r13.wwww
    dp3 r5.w, r15.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
    mul r5.w, r5.w, r14.y
    mov r14.x, l(1.000000)
    mov r7.w, cb2[17].x
    mov r17.zw, cb2[17].yyyz
    mov r19.xy, r10.wwww
    mov r11.w, r17.y
  else 
    mov r14.xy, l(0,0,0,0)
    mov r5.w, l(0)
    mov r15.xyz, l(0,0,0,0)
    mov r7.w, l(0)
    mov r19.xy, l(0,0,0,0)
    mov r16.xyz, l(0,0,0,0)
    mov r10.w, l(0)
    mov r18.xyz, l(0,0,0,0)
    mov r11.w, l(0)
    mov r17.xyzw, l(0,0,0,0)
  endif 
else 
  mov r14.xy, l(0,0,0,0)
  mov r5.w, l(0)
  mov r15.xyz, l(0,0,0,0)
  mov r7.w, l(0)
  mov r19.xy, l(0,0,0,0)
  mov r16.xyz, l(0,0,0,0)
  mov r10.w, l(0)
  mov r18.xyz, l(0,0,0,0)
  mov r11.w, l(0)
  mov r17.xyzw, l(0,0,0,0)
endif 
mul r13.w, r4.w, l(0.00781250)
min r13.w, r13.w, l(15.000000)
ftou r13.w, r13.w
ushr r20.xy, r2.zwzz, l(6, 6, 0, 0)
ishl r20.z, r13.w, l(4)
mov r21.x, -r9.x
mad r2.z, -r6.w, l(0.500000), l(1.000000)
mul r2.w, r2.y, r2.x
sqrt r2.w, r2.w
mov r22.xy, l(0,0,0,0)
mov r23.w, l(0)
mov r24.xyz, v6.xyzx
mov r24.w, l(1.000000)
mov r25.w, l(1.000000)
mov r21.z, r9.x
mov r26.z, l(1.000000)
mov r27.w, l(1.000000)
mov r21.yw, r10.xxxx
mov r9.y, r21.w
mov r28.w, l(1.000000)
mov r10.y, r21.x
mov r10.z, r9.x
mov r29.x, r10.x
mov r29.y, r21.x
mov r29.z, r9.x
mov r30.xyz, l(0,0,0,0)
mov r31.xyz, l(0,0,0,0)
mov r32.xyz, l(0,0,0,0)
mov r33.xyz, l(0,0,0,0)
mov r34.xyz, r15.xyzx
mov r35.x, r7.w
mov r35.yz, r17.zzwz
mov r36.xy, r19.xyxx
mov r36.z, r10.w
mov r37.xyz, r16.xyzx
mov r38.xyz, r18.xyzx
mov r39.x, r11.w
mov r39.yz, r17.xxyx
mov r40.x, cb2[58].y
mov r40.y, r5.w
mov r19.zw, r14.xxxy
mov r6.w, l(0)
loop 
  uge r13.w, r6.w, cb2[0].x
  breakc_nz r13.w
  ushr r22.z, r6.w, l(5)
  iadd r23.xyz, r20.xyzx, r22.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r13.w, r23.xyzw, t6.yzwx
  mov r23.xyz, r30.xyzx
  mov r41.xyz, r31.xyzx
  mov r42.xyz, r32.xyzx
  mov r43.xyz, r33.xyzx
  mov r44.xyz, r34.xyzx
  mov r45.xyz, r35.xyzx
  mov r46.xyz, r36.xyzx
  mov r47.xyz, r38.xyzx
  mov r48.xyz, r39.xyzx
  mov r22.zw, r19.zzzw
  mov r15.w, r40.x
  mov r16.w, r40.y
  mov r49.xyz, r37.xyzx
  mov r18.w, r13.w
  loop 
    breakc_z r18.w
    firstbit_lo r20.w, r18.w
    ishl r26.w, l(1), r20.w
    and r29.w, r18.w, r26.w
    if_nz r29.w
      xor r18.w, r18.w, r26.w
      iadd r20.w, r6.w, r20.w
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r50.xyzw, r20.w, l(0), t12.wxyz
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r51.xyzw, r20.w, l(16), t12.zxyw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r52.xyzw, r20.w, l(32), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r53.xyzw, r20.w, l(48), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r54.xyzw, r20.w, l(64), t12.yzwx
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r55.xyzw, r20.w, l(80), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r56.xyzw, r20.w, l(96), t12.yzwx
      ubfe r26.w, l(3), l(24), r51.w
      switch r26.w
        case l(4)
        lt r26.w, l(0.000000), r56.x
        mov r57.xy, r55.zwzz
        mov r57.z, r56.w
        mad r58.xyz, -r57.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r50.yzwy
        add r59.xyz, r58.xyzx, -v6.xyzx
        dp3 r29.w, r57.xyzx, r59.xyzx
        div_sat r30.w, -r29.w, r56.x
        mad r60.xyz, r30.wwww, r57.xyzx, r58.xyzx
        movc r60.xyz, r26.wwww, r60.xyzx, r50.yzwy
        add r60.xyz, r60.xyzx, -v6.xyzx
        dp3 r31.w, r60.xyzx, r60.xyzx
        rsq r32.w, r31.w
        mul r60.xyz, r32.wwww, r60.xyzx
        dp3 r32.w, r3.xyzx, r60.xyzx
        lt r33.w, l(0.000000), |r32.w|
        if_nz r33.w
          sqrt r33.w, r31.w
          mul r34.w, r53.x, r53.x
          div r31.w, r34.w, r31.w
          min r31.w, r31.w, l(1.000000)
          mad_sat r40.zw, r33.wwww, r52.xxxz, r52.yyyw
          mul r61.xy, r40.zwzz, r40.zwzz
          mad r40.zw, r40.zzzw, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
          mul r40.zw, r40.zzzw, r61.xxxy
          mul r31.w, r31.w, r40.z
          mul r61.x, r40.w, r31.w
          lt r31.w, l(0.000000), r61.x
          if_nz r31.w
            ubfe r40.zw, l(0, 0, 3, 4), l(0, 0, 27, 20), r51.wwww
            ine r31.w, r40.z, l(1)
            if_nz r31.w
              mad r31.w, |r32.w|, l(-0.200000), l(0.400000)
              lt r33.w, r32.w, l(0.000000)
              movc r31.w, r33.w, -r31.w, r31.w
              mad r62.xyz, r3.xyzx, r31.wwww, v6.xyzx
              add r62.xyz, -r54.xyzx, r62.xyzx
              max r31.w, |r62.z|, |r62.y|
              max r31.w, r31.w, |r62.x|
              div r31.w, r55.x, r31.w
              add r31.w, r55.y, r31.w
              dp3 r33.w, r62.xyzx, r62.xyzx
              rsq r33.w, r33.w
              max r31.w, r31.w, l(0.00006104)
              and r34.w, r51.w, l(0x0000ffff)
              utof r63.w, r34.w
              mov r61.y, l(0)
              mov r34.w, l(0)
              loop 
                ige r35.w, r34.w, l(8)
                breakc_nz r35.w
                dp2 r64.y, icb[r34.w + 0].yxyy, r21.xyxx
                dp2 r64.z, icb[r34.w + 0].yxyy, r21.yzyy
                mul r64.yz, r53.yyyy, r64.yyzy
                mul r64.x, r11.x, r64.y
                mul r64.w, r8.x, r64.y
                mad r63.xyz, r62.xyzx, r33.wwww, r64.xzwx
                sample_c_lz_indexable(texturecubearray)(float,float,float,float) r35.w, r63.xyzw, t10.xxxx, s13, r31.w
                mad r61.y, r35.w, l(0.125000), r61.y
                iadd r34.w, r34.w, l(1)
              endloop 
            else 
              mov r61.y, l(1.000000)
            endif 
            if_nz r40.w
              iadd r31.w, r40.w, cb2[0].x
              iadd r31.w, r31.w, l(-1)
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.w, r31.w, l(52), t12.xxxx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r62.xyzw, r31.w, l(100), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r63.xyzw, r31.w, l(116), t12.xyzw
              mad r34.w, |r32.w|, l(-0.200000), l(0.400000)
              lt r35.w, r32.w, l(0.000000)
              movc r34.w, r35.w, -r34.w, r34.w
              mad r25.xyz, r3.xyzx, r34.wwww, v6.xyzx
              dp4 r34.w, r62.xyzw, r25.xyzw
              dp4 r35.w, r63.xyzw, r25.xyzw
              lt r36.w, r35.w, r34.w
              if_z r36.w
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r62.xyzw, r31.w, l(68), t12.xyzw
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r63.xyzw, r31.w, l(84), t12.xyzw
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r64.xyzw, r31.w, l(132), t12.xyzw
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r65.xyzw, r31.w, l(148), t12.xyzw
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.zw, r31.w, l(164), t12.xxxy
                dp4 r62.x, r62.xyzw, r25.xyzw
                dp4 r62.y, r63.xyzw, r25.xyzw
                div r25.xy, r62.xyxx, r35.wwww
                mad r25.xy, r25.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                add r25.xy, r65.zwzz, r25.xyxx
                mul r25.xy, r65.xyxx, r25.xyxx
                div r61.zw, r33.wwww, r64.xxxz
                add r62.xy, -r61.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
                ge r62.xy, r25.xyxx, r62.xyxx
                ge r61.zw, r61.zzzw, r25.xxxy
                or r61.zw, r61.zzzw, r62.xxxy
                or r25.z, r61.w, r61.z
                mov_sat r25.xy, r25.xyxx
                mad r62.xy, r25.xyxx, r64.xzxx, r64.ywyy
                mul r25.x, r35.w, r40.w
                mad r25.y, r40.z, r35.w, r34.w
                div r25.x, r25.y, r25.x
              else 
                mov r25.z, l(-1)
              endif 
              or r25.y, r36.w, r25.z
              if_z r25.y
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r25.y, r31.w, l(28), t12.xxxx
                max r25.x, r25.x, l(0.00006104)
                and r25.y, r25.y, l(0x0000ffff)
                if_nz r15.w
                  utof r63.z, r25.y
                  mov r25.z, l(0)
                  mov r31.w, l(0)
                  loop 
                    ige r34.w, r31.w, l(8)
                    breakc_nz r34.w
                    dp2 r64.x, icb[r31.w + 0].yxyy, r21.xwxx
                    dp2 r64.y, icb[r31.w + 0].xyxx, r9.xyxx
                    mad r63.xy, r64.xyxx, r33.wwww, r62.xyxx
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r34.w, r63.xyzx, t9.xxxx, s13, r25.x
                    mad r25.z, r34.w, l(0.125000), r25.z
                    iadd r31.w, r31.w, l(1)
                  endloop 
                else 
                  utof r62.z, r25.y
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r25.z, r62.xyzx, t9.xxxx, s13, r25.x
                endif 
                mul r25.x, r25.z, r25.z
                mul r25.x, r25.z, r25.x
              else 
                mov r25.x, l(1.000000)
              endif 
              mul r61.y, r25.x, r61.y
            endif 
            mul r25.x, r61.y, r61.x
            lt r25.y, l(0.000000), r25.x
            if_nz r25.y
              mul r25.y, r51.x, l(0.16666667)
              dp3 r31.w, r57.xyzx, r12.xyzx
              dp3 r33.w, r12.xyzx, r59.xyzx
              mad r34.w, -r31.w, r31.w, r56.x
              mad r29.w, r31.w, r33.w, -r29.w
              div_sat r29.w, r29.w, r34.w
              div r31.w, r34.w, r56.x
              mul r31.w, r31.w, l(10.000000)
              min r31.w, r31.w, l(1.000000)
              add r29.w, -r30.w, r29.w
              mad r29.w, r31.w, r29.w, r30.w
              mad r57.xyz, r29.wwww, r57.xyzx, r58.xyzx
              movc r57.xyz, r26.wwww, r57.xyzx, r50.yzwy
              add r57.xyz, r57.xyzx, -v6.xyzx
              dp3 r26.w, r57.xyzx, r57.xyzx
              rsq r26.w, r26.w
              mul r58.xyz, r26.wwww, r57.xyzx
              mad r29.w, -|r32.w|, r2.z, l(1.000000)
              mul r29.w, r29.w, r29.w
              mad r29.w, -r29.w, l(0.620000), l(0.620000)
              add r29.w, -|r32.w|, r29.w
              mad r29.w, r29.w, l(0.81649661), |r32.w|
              lt r30.w, l(0.000000), r32.w
              dp3_sat r31.w, r3.xyzx, r58.xyzx
              mad r57.xyz, r57.xyzx, r26.wwww, r7.xyzx
              dp3 r26.w, r57.xyzx, r57.xyzx
              rsq r26.w, r26.w
              mul r57.xyz, r26.wwww, r57.xyzx
              dp3 r26.w, r3.xyzx, r57.xyzx
              dp3 r32.w, r57.xyzx, r7.xyzx
              dp3 r33.w, r57.xyzx, r5.xyzx
              dp3 r34.w, r57.xyzx, r6.xyzx
              mul r33.w, r33.w, r33.w
              div r33.w, r33.w, r2.x
              mul r34.w, r34.w, r34.w
              div r34.w, r34.w, r2.y
              add r33.w, r33.w, r34.w
              mad r26.w, |r26.w|, |r26.w|, r33.w
              mad r33.w, r31.w, r11.y, r11.z
              mul r26.w, r26.w, r26.w
              mul r26.w, r2.w, r26.w
              mul r26.w, r33.w, r26.w
              rcp r26.w, r26.w
              mul r25.y, r25.y, r31.w
              mul r25.y, r25.y, r26.w
              add_sat r26.w, -r32.w, l(1.000000)
              mul r31.w, r26.w, r26.w
              mul r31.w, r31.w, r31.w
              mul r26.w, r26.w, r31.w
              mul r26.w, r25.y, r26.w
              and r57.xyz, r29.wwww, r30.wwww
              movc r29.w, r30.w, l(0), r29.w
              and r58.xyz, r26.wwww, r30.wwww
              and r25.y, r25.y, r30.w
              mov r51.x, r50.x
              dp3 r26.w, r51.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
              mul r26.w, r25.x, r26.w
              lt r30.w, r16.w, r26.w
              if_nz r30.w
                mul r30.w, r22.w, r22.z
                mul r59.xyz, r44.xyzx, r30.wwww
                mad r23.xyz, r59.xyzx, r46.xyzx, r23.xyzx
                mad r41.xyz, r59.xyzx, r49.xyzx, r41.xyzx
                mad r43.xyz, r59.xyzx, r47.xyzx, r43.xyzx
                mad r42.xyz, r59.xyzx, r48.xyzx, r42.xyzx
                mov r47.xyz, r25.yyyy
                mov r16.w, r26.w
                mov r49.xyz, r29.wwww
                mov r44.xyz, r51.xyzx
                mov r45.xyz, r60.xyzx
                mov r46.xyz, r57.xyzx
                mov r48.xyz, r58.xyzx
                mov r22.zw, r61.xxxy
              else 
                mul r57.xyw, r25.xxxx, r51.xyxz
                mad r23.xyz, r57.xywx, r57.zzzz, r23.xyzx
                mad r41.xyz, r57.xywx, r29.wwww, r41.xyzx
                mad r43.xyz, r57.xywx, r25.yyyy, r43.xyzx
                mad r42.xyz, r57.xywx, r58.xyzx, r42.xyzx
              endif 
            endif 
          endif 
        endif 
        break 
        case l(2)
        mov r57.xy, r53.zwzz
        mov r57.z, r54.w
        add r57.xyz, r57.xyzx, -v6.xyzx
        dp3 r25.x, r57.xyzx, r57.xyzx
        rsq r25.x, r25.x
        mul r58.xyz, r25.xxxx, r57.xyzx
        dp3 r25.y, r3.xyzx, r58.xyzx
        lt r26.w, l(0.000000), |r25.y|
        if_nz r26.w
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r59.xyzw, r20.w, l(112), t12.yzwx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r60.xyzw, r20.w, l(128), t12.zxyw
          mov r62.xyz, r59.xyzx
          mov r62.w, r60.y
          dp4 r26.w, r62.xyzw, r24.xyzw
          lt r29.w, r26.w, l(1.000000)
          if_nz r29.w
            mov r61.xzw, l(1.000000,0,1.000000,1.000000)
            mov r63.x, l(0)
          else 
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r64.xyzw, r20.w, l(172), t12.yzwx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r65.xyzw, r20.w, l(188), t12.wxyz
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r66.xyzw, r20.w, l(204), t12.xyzw
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r29.w, r20.w, l(236), t12.xxxx
            add r67.xyz, r50.yzwy, -v6.xyzx
            mul r30.w, r53.x, r53.x
            dp3 r31.w, r67.xyzx, r67.xyzx
            div r30.w, r30.w, r31.w
            min r30.w, r30.w, l(1.000000)
            mad_sat r40.zw, r26.wwww, r52.xxxz, r52.yyyw
            mul r52.xy, r40.zwzz, r40.zwzz
            mad r40.zw, r40.zzzw, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
            mul r40.zw, r40.zzzw, r52.xxxy
            mul r30.w, r30.w, r40.z
            mul r30.w, r40.w, r30.w
            mov r54.w, r55.x
            dp4 r52.x, r54.xyzw, r24.xyzw
            mov r67.xyz, r55.yzwy
            mov r67.w, r56.w
            dp4 r52.y, r67.xyzw, r24.xyzw
            div r26.xy, r52.xyxx, r26.wwww
            lt r26.w, r64.w, l(0.00048828)
            if_nz r26.w
              mov r65.y, r66.x
              mad_sat r40.zw, |r26.xxxy|, r65.zzzw, r65.xxxy
              mul r52.xy, r40.zwzz, r40.zwzz
              mad r40.zw, r40.zzzw, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
              mul r40.zw, r40.zzzw, r52.xxxy
              mul r26.w, r40.w, r40.z
            else 
              mov r64.w, r65.y
              mul_sat r52.xyzw, |r26.yyxx|, r64.xyzw
              log r52.xyzw, r52.xyzw
              mul r52.xyzw, r52.xyzw, r65.xxxx
              exp r52.xyzw, r52.xyzw
              add r40.zw, r52.zzzw, r52.xxxy
              log r40.zw, r40.zzzw
              mul r40.zw, r40.zzzw, r66.xxxx
              exp r40.zw, r40.zzzw
              mul r31.w, r40.z, r65.z
              mad r32.w, r65.w, r40.w, l(-1.000000)
              mad r31.w, r65.w, r40.w, -r31.w
              div_sat r31.w, r32.w, r31.w
              mul r32.w, r31.w, r31.w
              mad r31.w, r31.w, l(-2.000000), l(3.000000)
              mul r26.w, r31.w, r32.w
            endif 
            mul r63.x, r26.w, r30.w
            and r26.w, r29.w, l(255)
            if_nz r26.w
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r52.xyz, r20.w, l(220), t12.xyzx
              dp3 r29.w, r66.yzwy, r26.xyzx
              dp3 r26.x, r52.xyzx, r26.xyzx
              frc r52.x, r29.w
              frc r52.y, r26.x
              iadd r26.x, r26.w, l(-1)
              utof r52.z, r26.x
              sample_l_indexable(texture2darray)(float,float,float,float) r61.xzw, r52.xyzx, t20.xwyz, s2, l(0.000000)
            else 
              mov r61.xzw, l(1.000000,0,1.000000,1.000000)
            endif 
          endif 
          mov r50.yz, r51.yyzy
          mul r26.xyw, r61.xzxw, r50.xyxz
          lt r29.w, l(0.000000), r63.x
          if_nz r29.w
            ubfe r40.zw, l(0, 0, 3, 4), l(0, 0, 27, 20), r51.wwww
            ine r29.w, r40.z, l(1)
            if_nz r29.w
              mad r29.w, |r25.y|, l(-0.200000), l(0.400000)
              lt r30.w, r25.y, l(0.000000)
              movc r29.w, r30.w, -r29.w, r29.w
              mad r27.xyz, r3.xyzx, r29.wwww, v6.xyzx
              mov r59.xyz, r56.xyzx
              dp4 r29.w, r59.xyzw, r27.xyzw
              dp4 r30.w, r62.xyzw, r27.xyzw
              ge r31.w, r30.w, r29.w
              if_nz r31.w
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r60.y, r20.w, l(144), t12.xxxx
                mov r54.w, r55.x
                dp4 r50.x, r54.xyzw, r27.xyzw
                mov r56.xyz, r55.yzwy
                dp4 r50.y, r56.xyzw, r27.xyzw
                div r27.xy, r50.xyxx, r30.wwww
                mad_sat r27.xy, r27.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                mad r27.xy, r27.xyxx, r60.zwzz, r60.xyxx
                div r20.w, r29.w, r30.w
                max r20.w, r20.w, l(0.00006104)
                and r29.w, r51.w, l(0x0000ffff)
                if_nz r15.w
                  utof r50.z, r29.w
                  mov r30.w, l(0)
                  mov r31.w, l(0)
                  loop 
                    ige r32.w, r31.w, l(8)
                    breakc_nz r32.w
                    dp2 r52.x, icb[r31.w + 0].xyxx, r10.xyxx
                    dp2 r52.y, icb[r31.w + 0].yxyy, r10.xzxx
                    mad r50.xy, r52.xyxx, r53.yyyy, r27.xyxx
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r32.w, r50.xyzx, t9.xxxx, s13, r20.w
                    mad r30.w, r32.w, l(0.125000), r30.w
                    iadd r31.w, r31.w, l(1)
                  endloop 
                else 
                  utof r27.z, r29.w
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r30.w, r27.xyzx, t9.xxxx, s13, r20.w
                endif 
                mul r20.w, r30.w, r30.w
                mul r63.y, r30.w, r20.w
              else 
                mov r63.y, l(1.000000)
              endif 
            else 
              mov r63.y, l(1.000000)
            endif 
            if_nz r40.w
              iadd r20.w, r40.w, cb2[0].x
              iadd r20.w, r20.w, l(-1)
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r27.x, r20.w, l(52), t12.xxxx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r50.xyzw, r20.w, l(68), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r52.xyzw, r20.w, l(84), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r53.xyzw, r20.w, l(100), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r54.xyzw, r20.w, l(116), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r55.xyzw, r20.w, l(132), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r56.xyzw, r20.w, l(148), t12.xyzw
              mad r27.y, |r25.y|, l(-0.200000), l(0.400000)
              lt r27.z, r25.y, l(0.000000)
              movc r27.y, r27.z, -r27.y, r27.y
              mad r28.xyz, r3.xyzx, r27.yyyy, v6.xyzx
              dp4 r50.x, r50.xyzw, r28.xyzw
              dp4 r50.y, r52.xyzw, r28.xyzw
              dp4 r27.y, r53.xyzw, r28.xyzw
              dp4 r27.z, r54.xyzw, r28.xyzw
              lt r28.x, r27.z, r27.y
              div r28.yz, r50.xxyx, r27.zzzz
              mad r28.yz, r28.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
              add r28.yz, r56.zzwz, r28.yyzy
              mul r28.yz, r56.xxyx, r28.yyzy
              div r40.zw, r27.xxxx, r55.xxxz
              add r50.xy, -r40.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
              ge r50.xy, r28.yzyy, r50.xyxx
              ge r40.zw, r40.zzzw, r28.yyyz
              or r40.zw, r40.zzzw, r50.xxxy
              or r29.w, r40.w, r40.z
              or r28.x, r28.x, r29.w
              if_z r28.x
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r28.x, r20.w, l(28), t12.xxxx
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.zw, r20.w, l(164), t12.xxxy
                mov_sat r28.yz, r28.yyzy
                mad r50.xy, r28.yzyy, r55.xzxx, r55.ywyy
                mul r20.w, r27.z, r40.w
                mad r27.y, r40.z, r27.z, r27.y
                div r20.w, r27.y, r20.w
                max r20.w, r20.w, l(0.00006104)
                and r27.y, r28.x, l(0x0000ffff)
                if_nz r15.w
                  utof r28.z, r27.y
                  mov r27.z, l(0)
                  mov r29.w, l(0)
                  loop 
                    ige r31.w, r29.w, l(8)
                    breakc_nz r31.w
                    dp2 r52.x, icb[r29.w + 0].xyxx, r29.xyxx
                    dp2 r52.y, icb[r29.w + 0].yxyy, r29.xzxx
                    mad r28.xy, r52.xyxx, r27.xxxx, r50.xyxx
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r28.x, r28.xyzx, t9.xxxx, s13, r20.w
                    mad r27.z, r28.x, l(0.125000), r27.z
                    iadd r29.w, r29.w, l(1)
                  endloop 
                else 
                  utof r50.z, r27.y
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r27.z, r50.xyzx, t9.xxxx, s13, r20.w
                endif 
                mul r20.w, r27.z, r27.z
                mul r20.w, r27.z, r20.w
              else 
                mov r20.w, l(1.000000)
              endif 
              mul r63.y, r20.w, r63.y
            endif 
            mul r20.w, r63.y, r63.x
            lt r27.x, l(0.000000), r20.w
            if_nz r27.x
              mul r27.x, r51.x, l(0.16666667)
              mad r27.y, -|r25.y|, r2.z, l(1.000000)
              mul r27.y, r27.y, r27.y
              mad r27.y, -r27.y, l(0.620000), l(0.620000)
              add r27.y, -|r25.y|, r27.y
              mad r27.y, r27.y, l(0.81649661), |r25.y|
              lt r28.x, l(0.000000), r25.y
              mov_sat r25.y, r25.y
              mad r50.xyz, r57.xyzx, r25.xxxx, r7.xyzx
              dp3 r25.x, r50.xyzx, r50.xyzx
              rsq r25.x, r25.x
              mul r50.xyz, r25.xxxx, r50.xyzx
              dp3 r25.x, r3.xyzx, r50.xyzx
              dp3 r28.y, r50.xyzx, r7.xyzx
              dp3 r28.z, r50.xyzx, r5.xyzx
              dp3 r29.w, r50.xyzx, r6.xyzx
              mul r28.z, r28.z, r28.z
              div r28.z, r28.z, r2.x
              mul r29.w, r29.w, r29.w
              div r29.w, r29.w, r2.y
              add r28.z, r28.z, r29.w
              mad r25.x, |r25.x|, |r25.x|, r28.z
              mad r28.z, r25.y, r11.y, r11.z
              mul r25.x, r25.x, r25.x
              mul r25.x, r2.w, r25.x
              mul r25.x, r28.z, r25.x
              rcp r25.x, r25.x
              mul r25.y, r27.x, r25.y
              mul r25.x, r25.y, r25.x
              add_sat r25.y, -r28.y, l(1.000000)
              mul r27.x, r25.y, r25.y
              mul r27.x, r27.x, r27.x
              mul r25.y, r25.y, r27.x
              mul r25.y, r25.y, r25.x
              and r50.xyz, r27.yyyy, r28.xxxx
              movc r27.x, r28.x, l(0), r27.y
              and r51.xyz, r25.yyyy, r28.xxxx
              and r25.x, r25.x, r28.x
              dp3 r25.y, r26.xywx, l(0.212600, 0.715200, 0.072200, 0.000000)
              mul r25.y, r20.w, r25.y
              lt r27.y, r16.w, r25.y
              if_nz r27.y
                mul r27.y, r22.w, r22.z
                mul r28.xyz, r44.xyzx, r27.yyyy
                mad r23.xyz, r28.xyzx, r46.xyzx, r23.xyzx
                mad r41.xyz, r28.xyzx, r49.xyzx, r41.xyzx
                mad r43.xyz, r28.xyzx, r47.xyzx, r43.xyzx
                mad r42.xyz, r28.xyzx, r48.xyzx, r42.xyzx
                mov r47.xyz, r25.xxxx
                mov r16.w, r25.y
                mov r49.xyz, r27.xxxx
                mov r44.xyz, r26.xywx
                mov r45.xyz, r58.xyzx
                mov r46.xyz, r50.xyzx
                mov r48.xyz, r51.xyzx
                mov r22.zw, r63.xxxy
              else 
                mul r26.xyw, r26.xyxw, r20.wwww
                mad r23.xyz, r26.xywx, r50.zzzz, r23.xyzx
                mad r41.xyz, r26.xywx, r27.xxxx, r41.xyzx
                mad r43.xyz, r26.xywx, r25.xxxx, r43.xyzx
                mad r42.xyz, r26.xywx, r51.xyzx, r42.xyzx
              endif 
            endif 
          endif 
        endif 
        break 
        default 
        break 
      endswitch 
    endif 
  endloop 
  mov r30.xyz, r23.xyzx
  mov r31.xyz, r41.xyzx
  mov r32.xyz, r42.xyzx
  mov r33.xyz, r43.xyzx
  mov r34.xyz, r44.xyzx
  mov r35.xyz, r45.xyzx
  mov r36.xyz, r46.xyzx
  mov r38.xyz, r47.xyzx
  mov r39.xyz, r48.xyzx
  mov r19.zw, r22.zzzw
  mov r40.y, r16.w
  mov r37.xyz, r49.xyzx
  iadd r6.w, r6.w, l(32)
endloop 
mov r2.z, l(0)
mul r2.xy, r35.yxyy, l(1.000000, -1.000000, 0.000000, 0.000000)
mul r5.xyz, r2.yzxy, r35.zxyz
mad r5.xyz, r35.yzxy, r2.zxyz, -r5.xyzx
mul r6.xyz, r13.yyyy, cb1[9].xywx
mad r6.xyz, r13.xxxx, cb1[8].xywx, r6.xyzx
mad r6.xyz, r13.zzzz, cb1[10].xywx, r6.xyzx
add r6.xyz, r8.yzwy, r6.xyzx
rcp r10.z, r6.z
mul r6.xy, r6.xyxx, r10.zzzz
mad r10.xy, r6.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
mad r6.xyw, r35.xyxz, l(2.400000, 2.400000, 0.000000, 2.400000), r13.xyxz
dp2 r2.w, v0.xyxx, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r2.w, r2.w
mul r2.w, r2.w, l(52.982918)
frc r2.w, r2.w
mul r5.w, r2.w, l(3.141600)
sincos r8.x, r9.x, r5.w
mul r11.xyz, r5.xyzx, r8.xxxx
mad r11.xyz, r9.xxxx, r2.xyzx, r11.xyzx
mad r11.xyz, r11.xyzx, l(0.120000, 0.120000, 0.120000, 0.000000), r6.xywx
mul r13.xyz, r11.yyyy, cb1[9].xywx
mad r11.xyw, r11.xxxx, cb1[8].xyxw, r13.xyxz
mad r11.xyz, r11.zzzz, cb1[10].xywx, r11.xywx
add r11.xyz, r8.yzwy, r11.xyzx
mul r9.xy, r11.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000)
rcp r11.z, r11.z
mad r11.xy, r9.xyxx, r11.zzzz, l(0.500000, 0.500000, 0.000000, 0.000000)
mov r13.xyz, -r10.xyzx
add r11.xyz, r11.xyzx, r13.xyzx
mad r15.xyz, r2.wwww, l(3.141600, 0.500000, 0.500000, 0.000000), l(3.141600, 0.33333334, 1.000000, 0.000000)
sincos r8.x, r9.x, r15.x
mul r5.xyz, r5.xyzx, r8.xxxx
mad r2.xyz, r9.xxxx, r2.xyzx, r5.xyzx
mad r2.xyz, r2.xyzx, l(0.120000, 0.120000, 0.120000, 0.000000), r6.xywx
mul r5.xyz, r2.yyyy, cb1[9].xywx
mad r5.xyz, r2.xxxx, cb1[8].xywx, r5.xyzx
mad r2.xyz, r2.zzzz, cb1[10].xywx, r5.xyzx
add r2.xyz, r8.yzwy, r2.xyzx
mul r2.xy, r2.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000)
rcp r5.z, r2.z
mad r5.xy, r2.xyxx, r5.zzzz, r13.xyxx
mov r13.w, l(0.500000)
add r2.xyz, r13.wwzw, r5.xyzx
dp2 r5.x, cb1[44].zwzz, cb1[44].zwzz
dp2 r5.y, r11.xyxx, r11.xyxx
sqrt r5.xy, r5.xyxx
rcp r5.y, r5.y
mul r5.x, r5.y, r5.x
mul r5.yz, r15.yyzy, l(0.000000, 0.11764706, 0.11764706, 0.000000)
mul r5.yz, r5.yyzy, r5.yyzy
mov x1[0].x, r5.y
mad r6.xyw, r11.xyxz, r5.yyyy, r10.xyxz
lt r8.xy, r5.xxxx, r5.yzyy
mul r6.xy, r6.xyxx, cb1[44].xyxx
ftoi r13.xy, r6.xyxx
mov r13.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r5.w, r13.xyzw, t0.yzwx
ge r6.x, r5.w, l(0.984375)
mul r6.y, r5.w, l(1.01587307)
mad r5.w, r5.w, l(64.000000), l(-63.000000)
movc r5.w, r6.x, r5.w, r6.y
max r5.w, r5.w, l(0.00000001)
rcp r5.w, r5.w
mov x2[0].x, r5.w
add r6.x, r5.w, l(0.042000)
mul r6.x, r6.x, r6.w
lt r6.x, l(1.000000), r6.x
and r6.x, r6.x, l(0x3f800000)
movc r6.x, r8.x, r6.x, l(1.000000)
mov x0[0].x, r6.x
mov x1[1].x, r5.z
mad r8.xzw, r2.xxyz, r5.zzzz, r10.xxyz
mul r6.yw, r8.xxxz, cb1[44].xxxy
ftoi r13.xy, r6.ywyy
mov r13.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r6.y, r13.xyzw, t0.yxzw
ge r6.w, r6.y, l(0.984375)
mul r7.w, r6.y, l(1.01587307)
mad r6.y, r6.y, l(64.000000), l(-63.000000)
movc r6.y, r6.w, r6.y, r7.w
max r6.y, r6.y, l(0.00000001)
rcp r6.y, r6.y
mov x2[1].x, r6.y
add r6.w, r6.y, l(0.042000)
mul r6.w, r6.w, r8.w
lt r6.w, l(1.000000), r6.w
and r6.w, r6.w, l(0x3f800000)
movc r6.w, r8.y, r6.w, l(1.000000)
mov x0[1].x, r6.w
add r7.w, r6.w, r6.x
ne r7.w, r7.w, l(0.000000)
if_nz r7.w
  mad r8.xy, r2.wwww, l(0.500000, 0.500000, 0.000000, 0.000000), l(1.33333337, 2.000000, 0.000000, 0.000000)
  mul r8.xy, r8.xyxx, l(0.11764706, 0.11764706, 0.000000, 0.000000)
  mad r8.xy, r8.xyxx, r8.xyxx, -r5.yzyy
  mad r5.y, r6.x, r8.x, r5.y
  mov x1[0].x, r5.y
  mad r8.xzw, r11.xxyz, r5.yyyy, r10.xxyz
  lt r5.y, r5.x, r5.y
  mul r8.xz, r8.xxzx, cb1[44].xxyx
  ftoi r13.xy, r8.xzxx
  mov r13.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r7.w, r13.xyzw, t0.yzwx
  ge r8.x, r7.w, l(0.984375)
  mul r8.z, r7.w, l(1.01587307)
  mad r7.w, r7.w, l(64.000000), l(-63.000000)
  movc r7.w, r8.x, r7.w, r8.z
  max r7.w, r7.w, l(0.00000001)
  rcp r7.w, r7.w
  movc r5.w, r5.y, r7.w, r5.w
  mov x2[0].x, r5.w
  add r5.w, r7.w, l(0.042000)
  mul r5.w, r5.w, r8.w
  lt r5.w, l(1.000000), r5.w
  and r5.w, r5.w, l(0x3f800000)
  mul r5.w, r5.w, r6.x
  movc r5.y, r5.y, r5.w, r6.x
  mov x0[0].x, r5.y
  mad r5.z, r6.w, r8.y, r5.z
  mov x1[1].x, r5.z
  mad r8.xyz, r2.xyzx, r5.zzzz, r10.xyzx
  lt r5.z, r5.x, r5.z
  mul r8.xy, r8.xyxx, cb1[44].xyxx
  ftoi r13.xy, r8.xyxx
  mov r13.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r5.w, r13.xyzw, t0.yzwx
  ge r6.x, r5.w, l(0.984375)
  mul r7.w, r5.w, l(1.01587307)
  mad r5.w, r5.w, l(64.000000), l(-63.000000)
  movc r5.w, r6.x, r5.w, r7.w
  max r5.w, r5.w, l(0.00000001)
  rcp r5.w, r5.w
  movc r6.x, r5.z, r5.w, r6.y
  mov x2[1].x, r6.x
  add r5.w, r5.w, l(0.042000)
  mul r5.w, r5.w, r8.z
  lt r5.w, l(1.000000), r5.w
  and r5.w, r5.w, l(0x3f800000)
  mul r5.w, r5.w, r6.w
  movc r5.z, r5.z, r5.w, r6.w
  mov x0[1].x, r5.z
  add r5.y, r5.z, r5.y
  eq r5.y, r5.y, l(0.000000)
else 
  mov r5.y, l(-1)
endif 
if_z r5.y
  mad r5.yz, r2.wwww, l(0.000000, 0.500000, 0.500000, 0.000000), l(0.000000, 2.33333325, 3.000000, 0.000000)
  mul r5.yz, r5.yyzy, l(0.000000, 0.11764706, 0.11764706, 0.000000)
  mov r5.w, x1[0].x
  mov r6.x, x0[0].x
  mad r5.y, r5.y, r5.y, -r5.w
  mad r5.y, r6.x, r5.y, r5.w
  mov x1[0].x, r5.y
  mad r8.xyz, r11.xyzx, r5.yyyy, r10.xyzx
  lt r5.y, r5.x, r5.y
  mul r6.yw, r8.xxxy, cb1[44].xxxy
  ftoi r13.xy, r6.ywyy
  mov r13.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r5.w, r13.xyzw, t0.yzwx
  ge r6.y, r5.w, l(0.984375)
  mul r6.w, r5.w, l(1.01587307)
  mad r5.w, r5.w, l(64.000000), l(-63.000000)
  movc r5.w, r6.y, r5.w, r6.w
  max r5.w, r5.w, l(0.00000001)
  rcp r5.w, r5.w
  mov r6.y, x2[0].x
  movc r6.y, r5.y, r5.w, r6.y
  mov x2[0].x, r6.y
  add r5.w, r5.w, l(0.042000)
  mul r5.w, r5.w, r8.z
  lt r5.w, l(1.000000), r5.w
  and r5.w, r5.w, l(0x3f800000)
  mul r5.w, r5.w, r6.x
  movc r5.y, r5.y, r5.w, r6.x
  mov x0[0].x, r5.y
  mov r5.w, x1[1].x
  mov r6.x, x0[1].x
  mad r5.z, r5.z, r5.z, -r5.w
  mad r5.z, r6.x, r5.z, r5.w
  mov x1[1].x, r5.z
  mad r8.xyz, r2.xyzx, r5.zzzz, r10.xyzx
  lt r5.z, r5.x, r5.z
  mul r6.yw, r8.xxxy, cb1[44].xxxy
  ftoi r13.xy, r6.ywyy
  mov r13.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r5.w, r13.xyzw, t0.yzwx
  ge r6.y, r5.w, l(0.984375)
  mul r6.w, r5.w, l(1.01587307)
  mad r5.w, r5.w, l(64.000000), l(-63.000000)
  movc r5.w, r6.y, r5.w, r6.w
  max r5.w, r5.w, l(0.00000001)
  rcp r5.w, r5.w
  mov r6.y, x2[1].x
  movc r6.y, r5.z, r5.w, r6.y
  mov x2[1].x, r6.y
  add r5.w, r5.w, l(0.042000)
  mul r5.w, r5.w, r8.z
  lt r5.w, l(1.000000), r5.w
  and r5.w, r5.w, l(0x3f800000)
  mul r5.w, r5.w, r6.x
  movc r5.z, r5.z, r5.w, r6.x
  mov x0[1].x, r5.z
  add r5.y, r5.z, r5.y
  eq r5.y, r5.y, l(0.000000)
else 
  mov r5.y, l(-1)
endif 
if_z r5.y
  mad r5.yz, r2.wwww, l(0.000000, 0.500000, 0.500000, 0.000000), l(0.000000, 3.33333325, 4.000000, 0.000000)
  mul r5.yz, r5.yyzy, l(0.000000, 0.11764706, 0.11764706, 0.000000)
  mov r5.w, x1[0].x
  mov r6.x, x0[0].x
  mad r5.y, r5.y, r5.y, -r5.w
  mad r5.y, r6.x, r5.y, r5.w
  mov x1[0].x, r5.y
  mad r8.xyz, r11.xyzx, r5.yyyy, r10.xyzx
  lt r5.y, r5.x, r5.y
  mul r6.yw, r8.xxxy, cb1[44].xxxy
  ftoi r13.xy, r6.ywyy
  mov r13.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r5.w, r13.xyzw, t0.yzwx
  ge r6.y, r5.w, l(0.984375)
  mul r6.w, r5.w, l(1.01587307)
  mad r5.w, r5.w, l(64.000000), l(-63.000000)
  movc r5.w, r6.y, r5.w, r6.w
  max r5.w, r5.w, l(0.00000001)
  rcp r5.w, r5.w
  mov r6.y, x2[0].x
  movc r6.y, r5.y, r5.w, r6.y
  mov x2[0].x, r6.y
  add r5.w, r5.w, l(0.042000)
  mul r5.w, r5.w, r8.z
  lt r5.w, l(1.000000), r5.w
  and r5.w, r5.w, l(0x3f800000)
  mul r5.w, r5.w, r6.x
  movc r5.y, r5.y, r5.w, r6.x
  mov x0[0].x, r5.y
  mov r5.w, x1[1].x
  mov r6.x, x0[1].x
  mad r5.z, r5.z, r5.z, -r5.w
  mad r5.z, r6.x, r5.z, r5.w
  mov x1[1].x, r5.z
  mad r8.xyz, r2.xyzx, r5.zzzz, r10.xyzx
  lt r5.z, r5.x, r5.z
  mul r6.yw, r8.xxxy, cb1[44].xxxy
  ftoi r13.xy, r6.ywyy
  mov r13.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r5.w, r13.xyzw, t0.yzwx
  ge r6.y, r5.w, l(0.984375)
  mul r6.w, r5.w, l(1.01587307)
  mad r5.w, r5.w, l(64.000000), l(-63.000000)
  movc r5.w, r6.y, r5.w, r6.w
  max r5.w, r5.w, l(0.00000001)
  rcp r5.w, r5.w
  mov r6.y, x2[1].x
  movc r6.y, r5.z, r5.w, r6.y
  mov x2[1].x, r6.y
  add r5.w, r5.w, l(0.042000)
  mul r5.w, r5.w, r8.z
  lt r5.w, l(1.000000), r5.w
  and r5.w, r5.w, l(0x3f800000)
  mul r5.w, r5.w, r6.x
  movc r5.z, r5.z, r5.w, r6.x
  mov x0[1].x, r5.z
  add r5.y, r5.z, r5.y
  eq r5.y, r5.y, l(0.000000)
else 
  mov r5.y, l(-1)
endif 
if_z r5.y
  mad r5.yz, r2.wwww, l(0.000000, 0.500000, 0.500000, 0.000000), l(0.000000, 4.33333349, 5.000000, 0.000000)
  mul r5.yz, r5.yyzy, l(0.000000, 0.11764706, 0.11764706, 0.000000)
  mov r5.w, x1[0].x
  mov r6.x, x0[0].x
  mad r5.y, r5.y, r5.y, -r5.w
  mad r5.y, r6.x, r5.y, r5.w
  mov x1[0].x, r5.y
  mad r8.xyz, r11.xyzx, r5.yyyy, r10.xyzx
  lt r5.y, r5.x, r5.y
  mul r6.yw, r8.xxxy, cb1[44].xxxy
  ftoi r13.xy, r6.ywyy
  mov r13.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r5.w, r13.xyzw, t0.yzwx
  ge r6.y, r5.w, l(0.984375)
  mul r6.w, r5.w, l(1.01587307)
  mad r5.w, r5.w, l(64.000000), l(-63.000000)
  movc r5.w, r6.y, r5.w, r6.w
  max r5.w, r5.w, l(0.00000001)
  rcp r5.w, r5.w
  mov r6.y, x2[0].x
  movc r6.y, r5.y, r5.w, r6.y
  mov x2[0].x, r6.y
  add r5.w, r5.w, l(0.042000)
  mul r5.w, r5.w, r8.z
  lt r5.w, l(1.000000), r5.w
  and r5.w, r5.w, l(0x3f800000)
  mul r5.w, r5.w, r6.x
  movc r5.y, r5.y, r5.w, r6.x
  mov x0[0].x, r5.y
  mov r5.w, x1[1].x
  mov r6.x, x0[1].x
  mad r5.z, r5.z, r5.z, -r5.w
  mad r5.z, r6.x, r5.z, r5.w
  mov x1[1].x, r5.z
  mad r8.xyz, r2.xyzx, r5.zzzz, r10.xyzx
  lt r5.z, r5.x, r5.z
  mul r6.yw, r8.xxxy, cb1[44].xxxy
  ftoi r13.xy, r6.ywyy
  mov r13.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r5.w, r13.xyzw, t0.yzwx
  ge r6.y, r5.w, l(0.984375)
  mul r6.w, r5.w, l(1.01587307)
  mad r5.w, r5.w, l(64.000000), l(-63.000000)
  movc r5.w, r6.y, r5.w, r6.w
  max r5.w, r5.w, l(0.00000001)
  rcp r5.w, r5.w
  mov r6.y, x2[1].x
  movc r6.y, r5.z, r5.w, r6.y
  mov x2[1].x, r6.y
  add r5.w, r5.w, l(0.042000)
  mul r5.w, r5.w, r8.z
  lt r5.w, l(1.000000), r5.w
  and r5.w, r5.w, l(0x3f800000)
  mul r5.w, r5.w, r6.x
  movc r5.z, r5.z, r5.w, r6.x
  mov x0[1].x, r5.z
  add r5.y, r5.z, r5.y
  eq r5.y, r5.y, l(0.000000)
else 
  mov r5.y, l(-1)
endif 
if_z r5.y
  mad r5.yz, r2.wwww, l(0.000000, 0.500000, 0.500000, 0.000000), l(0.000000, 5.33333349, 6.000000, 0.000000)
  mul r5.yz, r5.yyzy, l(0.000000, 0.11764706, 0.11764706, 0.000000)
  mov r5.w, x1[0].x
  mov r6.x, x0[0].x
  mad r5.y, r5.y, r5.y, -r5.w
  mad r5.y, r6.x, r5.y, r5.w
  mov x1[0].x, r5.y
  mad r8.xyz, r11.xyzx, r5.yyyy, r10.xyzx
  lt r5.y, r5.x, r5.y
  mul r6.yw, r8.xxxy, cb1[44].xxxy
  ftoi r13.xy, r6.ywyy
  mov r13.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r5.w, r13.xyzw, t0.yzwx
  ge r6.y, r5.w, l(0.984375)
  mul r6.w, r5.w, l(1.01587307)
  mad r5.w, r5.w, l(64.000000), l(-63.000000)
  movc r5.w, r6.y, r5.w, r6.w
  max r5.w, r5.w, l(0.00000001)
  rcp r5.w, r5.w
  mov r6.y, x2[0].x
  movc r6.y, r5.y, r5.w, r6.y
  mov x2[0].x, r6.y
  add r5.w, r5.w, l(0.042000)
  mul r5.w, r5.w, r8.z
  lt r5.w, l(1.000000), r5.w
  and r5.w, r5.w, l(0x3f800000)
  mul r5.w, r5.w, r6.x
  movc r5.y, r5.y, r5.w, r6.x
  mov x0[0].x, r5.y
  mov r5.w, x1[1].x
  mov r6.x, x0[1].x
  mad r5.z, r5.z, r5.z, -r5.w
  mad r5.z, r6.x, r5.z, r5.w
  mov x1[1].x, r5.z
  mad r8.xyz, r2.xyzx, r5.zzzz, r10.xyzx
  lt r5.z, r5.x, r5.z
  mul r6.yw, r8.xxxy, cb1[44].xxxy
  ftoi r13.xy, r6.ywyy
  mov r13.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r5.w, r13.xyzw, t0.yzwx
  ge r6.y, r5.w, l(0.984375)
  mul r6.w, r5.w, l(1.01587307)
  mad r5.w, r5.w, l(64.000000), l(-63.000000)
  movc r5.w, r6.y, r5.w, r6.w
  max r5.w, r5.w, l(0.00000001)
  rcp r5.w, r5.w
  mov r6.y, x2[1].x
  movc r6.y, r5.z, r5.w, r6.y
  mov x2[1].x, r6.y
  add r5.w, r5.w, l(0.042000)
  mul r5.w, r5.w, r8.z
  lt r5.w, l(1.000000), r5.w
  and r5.w, r5.w, l(0x3f800000)
  mul r5.w, r5.w, r6.x
  movc r5.z, r5.z, r5.w, r6.x
  mov x0[1].x, r5.z
  add r5.y, r5.z, r5.y
  eq r5.y, r5.y, l(0.000000)
else 
  mov r5.y, l(-1)
endif 
if_z r5.y
  mad r5.yz, r2.wwww, l(0.000000, 0.500000, 0.500000, 0.000000), l(0.000000, 6.33333349, 7.000000, 0.000000)
  mul r5.yz, r5.yyzy, l(0.000000, 0.11764706, 0.11764706, 0.000000)
  mov r5.w, x1[0].x
  mov r6.x, x0[0].x
  mad r5.y, r5.y, r5.y, -r5.w
  mad r5.y, r6.x, r5.y, r5.w
  mov x1[0].x, r5.y
  mad r8.xyz, r11.xyzx, r5.yyyy, r10.xyzx
  lt r5.y, r5.x, r5.y
  mul r6.yw, r8.xxxy, cb1[44].xxxy
  ftoi r13.xy, r6.ywyy
  mov r13.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r5.w, r13.xyzw, t0.yzwx
  ge r6.y, r5.w, l(0.984375)
  mul r6.w, r5.w, l(1.01587307)
  mad r5.w, r5.w, l(64.000000), l(-63.000000)
  movc r5.w, r6.y, r5.w, r6.w
  max r5.w, r5.w, l(0.00000001)
  rcp r5.w, r5.w
  mov r6.y, x2[0].x
  movc r6.y, r5.y, r5.w, r6.y
  mov x2[0].x, r6.y
  add r5.w, r5.w, l(0.042000)
  mul r5.w, r5.w, r8.z
  lt r5.w, l(1.000000), r5.w
  and r5.w, r5.w, l(0x3f800000)
  mul r5.w, r5.w, r6.x
  movc r5.y, r5.y, r5.w, r6.x
  mov x0[0].x, r5.y
  mov r5.w, x1[1].x
  mov r6.x, x0[1].x
  mad r5.z, r5.z, r5.z, -r5.w
  mad r5.z, r6.x, r5.z, r5.w
  mov x1[1].x, r5.z
  mad r8.xyz, r2.xyzx, r5.zzzz, r10.xyzx
  lt r5.z, r5.x, r5.z
  mul r6.yw, r8.xxxy, cb1[44].xxxy
  ftoi r13.xy, r6.ywyy
  mov r13.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r5.w, r13.xyzw, t0.yzwx
  ge r6.y, r5.w, l(0.984375)
  mul r6.w, r5.w, l(1.01587307)
  mad r5.w, r5.w, l(64.000000), l(-63.000000)
  movc r5.w, r6.y, r5.w, r6.w
  max r5.w, r5.w, l(0.00000001)
  rcp r5.w, r5.w
  mov r6.y, x2[1].x
  movc r6.y, r5.z, r5.w, r6.y
  mov x2[1].x, r6.y
  add r5.w, r5.w, l(0.042000)
  mul r5.w, r5.w, r8.z
  lt r5.w, l(1.000000), r5.w
  and r5.w, r5.w, l(0x3f800000)
  mul r5.w, r5.w, r6.x
  movc r5.z, r5.z, r5.w, r6.x
  mov x0[1].x, r5.z
  add r5.y, r5.z, r5.y
  eq r5.y, r5.y, l(0.000000)
else 
  mov r5.y, l(-1)
endif 
if_z r5.y
  mad r5.yz, r2.wwww, l(0.000000, 0.500000, 0.500000, 0.000000), l(0.000000, 7.33333349, 8.000000, 0.000000)
  mul r5.yz, r5.yyzy, l(0.000000, 0.11764706, 0.11764706, 0.000000)
  mov r2.w, x1[0].x
  mov r5.w, x0[0].x
  mad r5.y, r5.y, r5.y, -r2.w
  mad r2.w, r5.w, r5.y, r2.w
  mad r6.xyw, r11.xyxz, r2.wwww, r10.xyxz
  lt r2.w, r5.x, r2.w
  mul r6.xy, r6.xyxx, cb1[44].xyxx
  ftoi r8.xy, r6.xyxx
  mov r8.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r5.y, r8.xyzw, t0.yxzw
  ge r6.x, r5.y, l(0.984375)
  mul r6.y, r5.y, l(1.01587307)
  mad r5.y, r5.y, l(64.000000), l(-63.000000)
  movc r5.y, r6.x, r5.y, r6.y
  max r5.y, r5.y, l(0.00000001)
  rcp r5.y, r5.y
  mov r6.x, x2[0].x
  movc r6.x, r2.w, r5.y, r6.x
  mov x2[0].x, r6.x
  add r5.y, r5.y, l(0.042000)
  mul r5.y, r5.y, r6.w
  lt r5.y, l(1.000000), r5.y
  and r5.y, r5.y, l(0x3f800000)
  mul r5.y, r5.y, r5.w
  movc r2.w, r2.w, r5.y, r5.w
  mov x0[0].x, r2.w
  mov r2.w, x1[1].x
  mov r5.y, x0[1].x
  mad r5.z, r5.z, r5.z, -r2.w
  mad r2.w, r5.y, r5.z, r2.w
  mad r2.xyz, r2.xyzx, r2.wwww, r10.xyzx
  lt r2.w, r5.x, r2.w
  mul r2.xy, r2.xyxx, cb1[44].xyxx
  ftoi r8.xy, r2.xyxx
  mov r8.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r2.x, r8.xyzw, t0.xyzw
  ge r2.y, r2.x, l(0.984375)
  mul r5.x, r2.x, l(1.01587307)
  mad r2.x, r2.x, l(64.000000), l(-63.000000)
  movc r2.x, r2.y, r2.x, r5.x
  max r2.x, r2.x, l(0.00000001)
  rcp r2.x, r2.x
  mov r2.y, x2[1].x
  movc r2.y, r2.w, r2.x, r2.y
  mov x2[1].x, r2.y
  add r2.x, r2.x, l(0.042000)
  mul r2.x, r2.x, r2.z
  lt r2.x, l(1.000000), r2.x
  and r2.x, r2.x, l(0x3f800000)
  mul r2.x, r2.x, r5.y
  movc r2.x, r2.w, r2.x, r5.y
  mov x0[1].x, r2.x
endif 
mov r2.x, x2[0].x
add r2.x, -r6.z, r2.x
lt r2.x, l(2.400000), |r2.x|
mov r2.y, x0[0].x
mad r2.y, -r2.y, l(0.500000), l(1.000000)
movc r2.x, r2.x, l(0.500000), r2.y
mov r2.y, x2[1].x
add r2.y, -r6.z, r2.y
lt r2.y, l(2.400000), |r2.y|
mov r2.z, x0[1].x
mul r2.z, r2.z, l(0.500000)
movc r2.y, r2.y, l(-0.500000), -r2.z
add r2.x, r2.y, r2.x
add_sat r2.x, -r2.x, l(1.000000)
mad r2.y, r2.x, l(-2.000000), l(3.000000)
mul r2.x, r2.x, r2.x
mul r2.x, r2.x, r2.y
min r2.x, r2.x, r19.w
mul r2.x, r2.x, r19.z
mul r2.xyz, r34.xyzx, r2.xxxx
mad r5.xyz, r2.xyzx, r36.xyzx, r30.xyzx
mad r6.xyz, r2.xyzx, r37.xyzx, r31.xyzx
mad r8.xyz, r2.xyzx, r38.xyzx, r33.xyzx
mad r2.xyz, r2.xyzx, r39.xyzx, r32.xyzx
iadd r2.w, cb2[0].y, -cb2[58].x
and r5.w, r2.w, l(-32)
iadd r6.w, r2.w, -r5.w
and r7.w, cb2[0].y, l(-32)
iadd r8.w, -r7.w, cb2[0].y
mov r10.xy, l(0,0,0,0)
mov r11.w, l(0)
mov r13.yz, l(0,0,1.000000,0)
mov r15.xy, l(0,0,0,0)
mov r16.xy, l(0,0,0,0)
mov r17.xy, l(0,0,0,0)
mov r18.xyzw, l(0,0,0,0)
mov r19.yzw, l(0,0,0,0)
mov r9.x, r5.w
loop 
  uge r9.y, r9.x, cb2[0].y
  breakc_nz r9.y
  ushr r10.z, r9.x, l(5)
  iadd r11.xyz, r10.xyzx, r20.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r9.y, r11.xyzw, t7.yxzw
  ieq r10.z, r5.w, r9.x
  bfi r10.w, r6.w, l(0), l(0), r9.y
  movc r9.y, r10.z, r10.w, r9.y
  ieq r10.z, r7.w, r9.x
  ubfe r10.w, r8.w, l(0), r9.y
  movc r9.y, r10.z, r10.w, r9.y
  iadd r10.z, r9.x, cb2[0].x
  mov r21.xyzw, r18.xyzw
  mov r22.xyz, r19.yzwy
  mov r10.w, r9.y
  loop 
    breakc_z r10.w
    firstbit_lo r11.x, r10.w
    ishl r11.y, l(1), r11.x
    and r11.z, r10.w, r11.y
    if_nz r11.z
      xor r10.w, r10.w, r11.y
      iadd r11.y, r10.z, r11.x
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r23.xyzw, r11.y, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r24.xy, r11.y, l(16), t11.xyxx
      add r23.xyz, r23.xyzx, -v6.xyzx
      mov r24.z, r23.w
      lt r23.xyz, |r23.xyzx|, r24.zxyz
      and r11.y, r23.y, r23.x
      and r11.y, r23.z, r11.y
      if_nz r11.y
        iadd r11.x, r9.x, r11.x
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r23.xyzw, r11.x, l(0), t15.wxyz
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r11.yz, r11.x, l(96), t15.xxyx
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r11.x, l(116), t15.zwxy
        add r25.xyz, -r23.yzwy, v6.xyzx
        and r13.w, r24.w, l(0x0000ffff)
        ubfe r14.x, l(6), l(25), r24.w
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r26.xyzw, r13.w, l(0), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r13.w, l(16), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r13.w, l(32), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r13.w, l(48), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r13.w, l(64), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r13.w, l(80), t16.xyzw
        dp3 r14.y, r26.xyzx, r25.xyzx
        add_sat r14.y, r26.w, r14.y
        dp3 r15.w, r27.xyzx, r25.xyzx
        add_sat r15.w, r27.w, r15.w
        mul r14.y, r14.y, r15.w
        dp3 r15.w, r28.xyzx, r25.xyzx
        add_sat r15.w, r28.w, r15.w
        mul r14.y, r14.y, r15.w
        dp3 r15.w, r29.xyzx, r25.xyzx
        add_sat r15.w, r29.w, r15.w
        mul r14.y, r14.y, r15.w
        dp3 r15.w, r30.xyzx, r25.xyzx
        add_sat r15.w, r30.w, r15.w
        mul r14.y, r14.y, r15.w
        dp3 r15.w, r31.xyzx, r25.xyzx
        add_sat r15.w, r31.w, r15.w
        mul r13.x, r14.y, r15.w
        and r14.y, r11.y, l(1)
        movc r26.xy, r14.yyyy, r13.xyxx, r13.zxzz
        mov r13.x, r11.y
        mov r27.xy, r26.xyxx
        mov r14.y, l(1)
        loop 
          ige r15.w, r14.y, r14.x
          breakc_nz r15.w
          iadd r15.w, r13.w, r14.y
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r15.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r15.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r15.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r15.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r15.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r15.w, l(80), t16.xyzw
          dp3 r15.w, r28.xyzx, r25.xyzx
          add_sat r15.w, r28.w, r15.w
          mul r15.w, r15.w, r27.x
          dp3 r16.w, r29.xyzx, r25.xyzx
          add_sat r16.w, r29.w, r16.w
          mul r15.w, r15.w, r16.w
          dp3 r16.w, r30.xyzx, r25.xyzx
          add_sat r16.w, r30.w, r16.w
          mul r15.w, r15.w, r16.w
          dp3 r16.w, r31.xyzx, r25.xyzx
          add_sat r16.w, r31.w, r16.w
          mul r15.w, r15.w, r16.w
          dp3 r16.w, r32.xyzx, r25.xyzx
          add_sat r16.w, r32.w, r16.w
          mul r15.w, r15.w, r16.w
          dp3 r16.w, r33.xyzx, r25.xyzx
          add_sat r16.w, r33.w, r16.w
          mul r27.x, r15.w, r16.w
          ushr r17.w, r13.x, l(2)
          ubfe r20.w, l(1), l(2), r13.x
          and r23.w, r17.w, l(2)
          max r25.w, r27.x, r27.y
          mad r15.w, -r15.w, r16.w, l(1.000000)
          mul r15.w, r15.w, r27.y
          movc r14.w, r23.w, r15.w, r25.w
          movc r27.xy, r20.wwww, r27.xyxx, r14.zwzz
          iadd r14.y, r14.y, l(1)
          mov r13.x, r17.w
        endloop 
        mov_sat r27.y, r27.y
        mul r11.y, r11.z, r27.y
        lt r13.x, l(0.000000), r11.y
        if_nz r13.x
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r11.x, l(16), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r11.x, l(32), t15.yxwz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r11.x, l(48), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r11.x, l(64), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r11.x, l(80), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r11.x, l(132), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r11.x, l(148), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r11.x, l(164), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r11.x, l(180), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r11.x, l(196), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xy, r11.x, l(212), t15.xyxx
          mad r22.z, r27.y, r11.z, r22.z
          mul r11.x, r24.z, r11.y
          mov r24.z, r32.z
          dp3 r11.y, r12.xyzx, r24.xyzx
          dp3 r11.z, r25.xyzx, r24.xyzx
          add r11.z, -r32.w, r11.z
          ge r13.x, r11.z, l(0.000000)
          max r11.z, |r11.z|, l(100.000000)
          movc r11.z, r13.x, r11.z, -r11.z
          max r11.y, -r11.y, l(0.00000010)
          div r11.y, r11.z, r11.y
          min r11.y, |r11.y|, l(131072.000000)
          mov r32.z, r33.z
          dp3 r11.z, r12.xyzx, r32.xyzx
          dp3 r13.x, r25.xyzx, r32.xyzx
          add r13.x, -r33.w, r13.x
          ge r13.w, r13.x, l(0.000000)
          max r13.x, |r13.x|, l(100.000000)
          movc r13.x, r13.w, r13.x, -r13.x
          max r11.z, -r11.z, l(0.00000010)
          div r11.z, r13.x, r11.z
          min r11.y, |r11.z|, r11.y
          mov r33.z, r34.z
          dp3 r11.z, r12.xyzx, r33.xyzx
          dp3 r13.x, r25.xyzx, r33.xyzx
          add r13.x, -r34.w, r13.x
          ge r13.w, r13.x, l(0.000000)
          max r13.x, |r13.x|, l(100.000000)
          movc r13.x, r13.w, r13.x, -r13.x
          max r11.z, -r11.z, l(0.00000010)
          div r11.z, r13.x, r11.z
          min r11.y, |r11.z|, r11.y
          mov r34.z, r35.z
          dp3 r11.z, r12.xyzx, r34.xyzx
          dp3 r13.x, r25.xyzx, r34.xyzx
          add r13.x, -r35.w, r13.x
          ge r13.w, r13.x, l(0.000000)
          max r13.x, |r13.x|, l(100.000000)
          movc r13.x, r13.w, r13.x, -r13.x
          max r11.z, -r11.z, l(0.00000010)
          div r11.z, r13.x, r11.z
          min r11.y, |r11.z|, r11.y
          mov r35.z, r36.x
          dp3 r11.z, r12.xyzx, r35.xyzx
          dp3 r13.x, r25.xyzx, r35.xyzx
          add r13.x, -r36.y, r13.x
          ge r13.w, r13.x, l(0.000000)
          max r13.x, |r13.x|, l(100.000000)
          movc r13.x, r13.w, r13.x, -r13.x
          max r11.z, -r11.z, l(0.00000010)
          div r11.z, r13.x, r11.z
          min r11.y, |r11.z|, r11.y
          mov r37.zw, r36.zzzw
          dp3 r11.z, r12.zxyz, r37.xzwx
          dp3 r13.x, r25.zxyz, r37.xzwx
          add r13.x, -r37.y, r13.x
          ge r13.w, r13.x, l(0.000000)
          max r13.x, |r13.x|, l(100.000000)
          movc r13.x, r13.w, r13.x, -r13.x
          max r11.z, -r11.z, l(0.00000010)
          div r11.z, r13.x, r11.z
          min r11.y, |r11.z|, r11.y
          mov r24.x, r29.w
          mov r24.yz, r30.zzwz
          add r14.xyw, r25.xyxz, r24.xyxz
          mad r14.xyw, r12.xyxz, r11.yyyy, r14.xyxw
          dp3 r11.z, r14.xywx, r14.xywx
          sqrt r11.z, r11.z
          div r11.y, r11.y, r11.z
          add r11.y, r11.y, r11.y
          sqrt r11.y, r11.y
          add r11.y, r11.y, l(4.155200)
          mov r23.y, r26.z
          mov r23.z, r28.x
          dp3 r32.x, r14.xywx, r23.xyzx
          mov r24.xy, r26.xwxx
          mov r24.z, r28.w
          dp3 r32.y, r14.xywx, r24.xyzx
          mov r28.x, r26.y
          dp3 r32.z, r14.xywx, r28.xyzx
          ubfe r11.z, l(9), l(16), r24.w
          utof r32.w, r11.z
          sample_l_indexable(texturecubearray)(float,float,float,float) r14.xyw, r32.xyzw, t8.xywz, s2, r11.y
          dp3 r26.x, r25.xyzx, r23.xyzx
          dp3 r26.y, r25.xyzx, r24.xyzx
          dp3 r26.z, r25.xyzx, r28.xyzx
          mad_sat r25.xyz, r26.xyzx, r29.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
          mov r30.z, r31.x
          mad r25.xyz, r25.xyzx, r30.xyzx, r31.yzwy
          dp3 r32.x, r3.xyzx, r23.xyzx
          dp3 r32.y, r3.xyzx, r24.xyzx
          dp3 r32.z, r3.xyzx, r28.xyzx
          lt r23.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r32.xyzx
          movc r15.z, r23.x, l(0), l(0.500000)
          add r24.xyz, r15.xyzx, r25.xyzx
          sample_l_indexable(texture3d)(float,float,float,float) r24.xyz, r24.xyzx, t17.xyzw, s4, l(0.000000)
          mul r26.xyz, r32.xyzx, r32.xyzx
          mul r26.xyz, r11.xxxx, r26.xyzx
          movc r16.z, r23.y, l(0), l(0.500000)
          add r23.xyw, r16.xyxz, r25.xyxz
          sample_l_indexable(texture3d)(float,float,float,float) r23.xyw, r23.xywx, t18.xywz, s4, l(0.000000)
          mul r23.xyw, r26.yyyy, r23.xyxw
          mad r23.xyw, r24.xyxz, r26.xxxx, r23.xyxw
          movc r17.z, r23.z, l(0), l(0.500000)
          add r24.xyz, r17.xyzx, r25.xyzx
          sample_l_indexable(texture3d)(float,float,float,float) r24.xyz, r24.xyzx, t19.xyzw, s4, l(0.000000)
          mad r23.xyz, r24.xyzx, r26.zzzz, r23.xywx
          sample_l_indexable(texturecubearray)(float,float,float,float) r24.xyz, r32.xyzw, t8.xyzw, s2, l(6.000000)
          mul r25.xyz, r23.xyzx, r24.xyzx
          dp3 r11.y, r25.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r21.xyz, r23.xyzx, r24.xyzx, r21.xyzx
          mul r11.z, r11.y, l(1.268160)
          mul r14.xyw, r11.xxxx, r14.xyxw
          dp3 r11.x, r14.xywx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r11.x, r11.y, l(1.268160), r11.x
          div r11.x, r11.z, r11.x
          mov r23.x, r21.w
          mov r23.yz, r22.xxyx
          mad r22.xyw, r14.ywyx, r11.xxxx, r23.yzyx
          mov r21.w, r22.w
        endif 
      endif 
    endif 
  endloop 
  mov r18.xyzw, r21.xyzw
  mov r19.yzw, r22.xxyz
  iadd r9.x, r9.x, l(32)
endloop 
lt r7.w, r19.w, l(1.000000)
if_nz r7.w
  mov r10.xy, l(0,0,0,0)
  mov r11.w, l(0)
  mov r13.yz, l(0,0,1.000000,0)
  mov r14.xy, l(0,0,0,0)
  mov r9.x, l(1.000000)
  mov r15.xy, l(0,0,0,0)
  mov r16.xy, l(0,0,0,0)
  mov r17.x, r18.w
  mov r17.yzw, r19.yyzw
  mov r21.xyz, r18.xyzx
  mov r7.w, r19.w
  mov r8.w, l(0)
  loop 
    uge r10.w, r8.w, r2.w
    breakc_nz r10.w
    ushr r10.z, r8.w, l(5)
    iadd r11.xyz, r10.xyzx, r20.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r10.z, r11.xyzw, t7.yzxw
    ieq r10.w, r5.w, r8.w
    ubfe r11.x, r6.w, l(0), r10.z
    movc r10.z, r10.w, r11.x, r10.z
    iadd r10.w, r8.w, cb2[0].x
    mov r22.xyzw, r17.xyzw
    mov r11.xyz, r21.xyzx
    mov r13.w, r7.w
    mov r14.w, r10.z
    loop 
      breakc_z r14.w
      firstbit_lo r15.w, r14.w
      ishl r16.w, l(1), r15.w
      and r20.w, r14.w, r16.w
      if_nz r20.w
        xor r14.w, r14.w, r16.w
        iadd r16.w, r10.w, r15.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r23.xyzw, r16.w, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r24.xy, r16.w, l(16), t11.xyxx
        add r23.xyz, r23.xyzx, -v6.xyzx
        mov r24.z, r23.w
        lt r23.xyz, |r23.xyzx|, r24.zxyz
        and r16.w, r23.y, r23.x
        and r16.w, r23.z, r16.w
        if_nz r16.w
          iadd r15.w, r8.w, r15.w
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r23.xyzw, r15.w, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xy, r15.w, l(96), t15.xyxx
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r15.w, l(116), t15.zwxy
          add r26.xyz, -r23.yzwy, v6.xyzx
          and r16.w, r25.w, l(0x0000ffff)
          ubfe r20.w, l(6), l(25), r25.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r16.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r16.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r16.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r16.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r16.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r16.w, l(80), t16.xyzw
          dp3 r21.w, r27.xyzx, r26.xyzx
          add_sat r21.w, r27.w, r21.w
          dp3 r23.w, r28.xyzx, r26.xyzx
          add_sat r23.w, r28.w, r23.w
          mul r21.w, r21.w, r23.w
          dp3 r23.w, r29.xyzx, r26.xyzx
          add_sat r23.w, r29.w, r23.w
          mul r21.w, r21.w, r23.w
          dp3 r23.w, r30.xyzx, r26.xyzx
          add_sat r23.w, r30.w, r23.w
          mul r21.w, r21.w, r23.w
          dp3 r23.w, r31.xyzx, r26.xyzx
          add_sat r23.w, r31.w, r23.w
          mul r21.w, r21.w, r23.w
          dp3 r23.w, r32.xyzx, r26.xyzx
          add_sat r23.w, r32.w, r23.w
          mul r13.x, r21.w, r23.w
          and r21.w, r24.x, l(1)
          movc r24.zw, r21.wwww, r13.xxxy, r13.zzzx
          mov r13.x, r24.x
          mov r27.xy, r24.zwzz
          mov r21.w, l(1)
          loop 
            ige r23.w, r21.w, r20.w
            breakc_nz r23.w
            iadd r23.w, r16.w, r21.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r23.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r23.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r23.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r23.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r23.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r23.w, l(80), t16.xyzw
            dp3 r23.w, r28.xyzx, r26.xyzx
            add_sat r23.w, r28.w, r23.w
            mul r23.w, r23.w, r27.x
            dp3 r26.w, r29.xyzx, r26.xyzx
            add_sat r26.w, r29.w, r26.w
            mul r23.w, r23.w, r26.w
            dp3 r26.w, r30.xyzx, r26.xyzx
            add_sat r26.w, r30.w, r26.w
            mul r23.w, r23.w, r26.w
            dp3 r26.w, r31.xyzx, r26.xyzx
            add_sat r26.w, r31.w, r26.w
            mul r23.w, r23.w, r26.w
            dp3 r26.w, r32.xyzx, r26.xyzx
            add_sat r26.w, r32.w, r26.w
            mul r23.w, r23.w, r26.w
            dp3 r26.w, r33.xyzx, r26.xyzx
            add_sat r26.w, r33.w, r26.w
            mul r27.x, r23.w, r26.w
            ushr r27.z, r13.x, l(2)
            ubfe r27.w, l(1), l(2), r13.x
            and r28.x, r27.z, l(2)
            max r28.y, r27.x, r27.y
            mad r23.w, -r23.w, r26.w, l(1.000000)
            mul r23.w, r23.w, r27.y
            movc r9.y, r28.x, r23.w, r28.y
            movc r27.xy, r27.wwww, r27.xyxx, r9.xyxx
            iadd r21.w, r21.w, l(1)
            mov r13.x, r27.z
          endloop 
          add_sat r9.y, -r13.w, r27.y
          mul r13.x, r24.y, r9.y
          lt r16.w, l(0.000000), r13.x
          if_nz r16.w
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r15.w, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r15.w, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r15.w, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r15.w, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r15.w, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r15.w, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r15.w, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r15.w, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r15.w, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r15.w, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xy, r15.w, l(212), t15.xyxx
            mad r22.w, r9.y, r24.y, r22.w
            mul r9.y, r25.z, r13.x
            mov r25.z, r33.z
            dp3 r13.x, r12.xyzx, r25.xyzx
            dp3 r15.w, r26.xyzx, r25.xyzx
            add r15.w, -r33.w, r15.w
            ge r16.w, r15.w, l(0.000000)
            max r15.w, |r15.w|, l(100.000000)
            movc r15.w, r16.w, r15.w, -r15.w
            max r13.x, -r13.x, l(0.00000010)
            div r13.x, r15.w, r13.x
            min r13.x, |r13.x|, l(131072.000000)
            mov r33.z, r34.z
            dp3 r15.w, r12.xyzx, r33.xyzx
            dp3 r16.w, r26.xyzx, r33.xyzx
            add r16.w, -r34.w, r16.w
            ge r20.w, r16.w, l(0.000000)
            max r16.w, |r16.w|, l(100.000000)
            movc r16.w, r20.w, r16.w, -r16.w
            max r15.w, -r15.w, l(0.00000010)
            div r15.w, r16.w, r15.w
            min r13.x, r13.x, |r15.w|
            mov r34.z, r35.z
            dp3 r15.w, r12.xyzx, r34.xyzx
            dp3 r16.w, r26.xyzx, r34.xyzx
            add r16.w, -r35.w, r16.w
            ge r20.w, r16.w, l(0.000000)
            max r16.w, |r16.w|, l(100.000000)
            movc r16.w, r20.w, r16.w, -r16.w
            max r15.w, -r15.w, l(0.00000010)
            div r15.w, r16.w, r15.w
            min r13.x, r13.x, |r15.w|
            mov r35.z, r36.z
            dp3 r15.w, r12.xyzx, r35.xyzx
            dp3 r16.w, r26.xyzx, r35.xyzx
            add r16.w, -r36.w, r16.w
            ge r20.w, r16.w, l(0.000000)
            max r16.w, |r16.w|, l(100.000000)
            movc r16.w, r20.w, r16.w, -r16.w
            max r15.w, -r15.w, l(0.00000010)
            div r15.w, r16.w, r15.w
            min r13.x, r13.x, |r15.w|
            mov r36.z, r37.x
            dp3 r15.w, r12.xyzx, r36.xyzx
            dp3 r16.w, r26.xyzx, r36.xyzx
            add r16.w, -r37.y, r16.w
            ge r20.w, r16.w, l(0.000000)
            max r16.w, |r16.w|, l(100.000000)
            movc r16.w, r20.w, r16.w, -r16.w
            max r15.w, -r15.w, l(0.00000010)
            div r15.w, r16.w, r15.w
            min r13.x, r13.x, |r15.w|
            mov r38.zw, r37.zzzw
            dp3 r15.w, r12.zxyz, r38.xzwx
            dp3 r16.w, r26.zxyz, r38.xzwx
            add r16.w, -r38.y, r16.w
            ge r20.w, r16.w, l(0.000000)
            max r16.w, |r16.w|, l(100.000000)
            movc r16.w, r20.w, r16.w, -r16.w
            max r15.w, -r15.w, l(0.00000010)
            div r15.w, r16.w, r15.w
            min r13.x, r13.x, |r15.w|
            mov r24.x, r30.w
            mov r24.yz, r31.zzwz
            add r24.xyz, r26.xyzx, r24.xyzx
            mad r24.xyz, r12.xyzx, r13.xxxx, r24.xyzx
            dp3 r15.w, r24.xyzx, r24.xyzx
            sqrt r15.w, r15.w
            div r13.x, r13.x, r15.w
            add r13.x, r13.x, r13.x
            sqrt r13.x, r13.x
            add r13.x, r13.x, l(4.155200)
            mov r23.y, r28.z
            mov r23.z, r29.x
            dp3 r33.x, r24.xyzx, r23.xyzx
            mov r25.xy, r28.xwxx
            mov r25.z, r29.w
            dp3 r33.y, r24.xyzx, r25.xyzx
            mov r29.x, r28.y
            dp3 r33.z, r24.xyzx, r29.xyzx
            ubfe r15.w, l(9), l(16), r25.w
            utof r33.w, r15.w
            sample_l_indexable(texturecubearray)(float,float,float,float) r24.xyz, r33.xyzw, t8.xyzw, s2, r13.x
            dp3 r28.x, r26.xyzx, r23.xyzx
            dp3 r28.y, r26.xyzx, r25.xyzx
            dp3 r28.z, r26.xyzx, r29.xyzx
            mad_sat r26.xyz, r28.xyzx, r30.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
            mov r31.z, r32.x
            mad r26.xyz, r26.xyzx, r31.xyzx, r32.yzwy
            dp3 r33.x, r3.xyzx, r23.xyzx
            dp3 r33.y, r3.xyzx, r25.xyzx
            dp3 r33.z, r3.xyzx, r29.xyzx
            lt r23.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r33.xyzx
            movc r14.z, r23.x, l(0), l(0.500000)
            add r25.xyz, r14.xyzx, r26.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r25.xyz, r25.xyzx, t17.xyzw, s4, l(0.000000)
            mul r27.xzw, r33.xxyz, r33.xxyz
            mul r27.xzw, r9.yyyy, r27.xxzw
            movc r15.z, r23.y, l(0), l(0.500000)
            add r23.xyw, r15.xyxz, r26.xyxz
            sample_l_indexable(texture3d)(float,float,float,float) r23.xyw, r23.xywx, t18.xywz, s4, l(0.000000)
            mul r23.xyw, r27.zzzz, r23.xyxw
            mad r23.xyw, r25.xyxz, r27.xxxx, r23.xyxw
            movc r16.z, r23.z, l(0), l(0.500000)
            add r25.xyz, r16.xyzx, r26.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r25.xyz, r25.xyzx, t19.xyzw, s4, l(0.000000)
            mad r23.xyz, r25.xyzx, r27.wwww, r23.xywx
            sample_l_indexable(texturecubearray)(float,float,float,float) r25.xyz, r33.xyzw, t8.xyzw, s2, l(6.000000)
            mul r26.xyz, r23.xyzx, r25.xyzx
            dp3 r13.x, r26.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r11.xyz, r23.xyzx, r25.xyzx, r11.xyzx
            mul r14.z, r13.x, l(1.268160)
            mul r23.xyz, r9.yyyy, r24.xyzx
            dp3 r9.y, r23.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r9.y, r13.x, l(1.268160), r9.y
            div r9.y, r14.z, r9.y
            mad r22.xyz, r23.xyzx, r9.yyyy, r22.xyzx
          endif 
        endif 
      endif 
    endloop 
    mov r17.xyzw, r22.xyzw
    mov r21.xyz, r11.xyzx
    iadd r8.w, r8.w, l(32)
  endloop 
  mov r19.xyzw, r17.zxyw
  mov r18.xyz, r21.xyzx
  mov r19.xyzw, r19.yzxw
else 
  mov r19.x, r18.w
endif 
max r2.w, r19.w, l(1.000000)
rcp r2.w, r2.w
mov_sat r19.w, r19.w
mul r10.xyz, r2.wwww, r18.xyzx
mul r11.xyz, r2.wwww, r19.xyzx
lt r5.w, r19.w, l(0.990000)
if_nz r5.w
  add r5.w, -r19.w, l(1.000000)
  mul r5.w, r5.w, cb2[19].x
  add r13.xyz, v6.xyzx, -cb2[35].xyzx
  mul r14.x, r13.x, cb2[35].w
  mul r14.yz, r13.yyzy, cb2[36].xxyx
  add_sat r13.xyz, r14.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mul r14.xy, r13.xyxx, cb2[36].zwzz
  mul r14.z, r13.z, cb2[37].x
  add r13.xyz, r14.xyzx, cb2[37].yzwy
  lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r3.xyzx
  movc r14.xyz, r14.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
  mov r14.w, l(0)
  add r15.xyz, r13.xyzx, r14.wwxw
  sample_l_indexable(texture3d)(float,float,float,float) r15.xyz, r15.xyzx, t17.xyzw, s4, l(0.000000)
  mul r16.xyz, r3.xyzx, r3.xyzx
  mul r16.xyz, r5.wwww, r16.xyzx
  add r17.xyz, r13.xyzx, r14.wwyw
  sample_l_indexable(texture3d)(float,float,float,float) r17.xyz, r17.xyzx, t18.xyzw, s4, l(0.000000)
  mul r17.xyz, r16.yyyy, r17.xyzx
  mad r15.xyz, r15.xyzx, r16.xxxx, r17.xyzx
  add r13.xyz, r13.xyzx, r14.wwzw
  sample_l_indexable(texture3d)(float,float,float,float) r13.xyz, r13.xyzx, t19.xyzw, s4, l(0.000000)
  mad r13.xyz, r13.xyzx, r16.zzzz, r15.xyzx
  mov r3.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r3.xyz, r3.xyzw, t8.xyzw, s2, l(6.000000)
  mul r3.xyz, r3.xyzx, r13.xyzx
  dp3 r3.w, r3.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  mad r10.xyz, r18.xyzx, r2.wwww, r3.xyzx
  mov r12.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r3.xyz, r12.xyzw, t8.xyzw, s2, l(5.000000)
  mad r11.xyz, r3.xyzx, r3.wwww, r11.xyzx
endif 
mad r3.xyz, r10.xyzx, r0.wwww, r5.xyzx
mad r5.xyz, r10.xyzx, r0.wwww, r6.xyzx
mov r9.w, l(0)
add r6.xy, r9.zwzz, l(0.00781250, 0.00781250, 0.000000, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r6.xy, r6.xyxx, t5.xyzw, s2, l(0.000000)
mul r9.xyz, r0.wwww, r11.xyzx
mad r2.xyz, r9.xyzx, r6.xxxx, r2.xyzx
mad r6.xyz, r9.xyzx, r6.yyyy, r8.xyzx
dp3 r0.w, r4.xyzx, r7.xyzx
add r2.w, -|r0.w|, l(1.000000)
mul r2.w, r2.w, r2.w
mad r2.w, r2.w, l(0.600000), l(0.400000)
min r2.w, r2.w, l(1.000000)
mad_sat r4.xyz, r0.xyzx, l(0.020000, 0.020000, 0.020000, 0.000000), l(0.040000, 0.040000, 0.040000, 0.000000)
mul r7.xyz, r4.xyzx, cb0[11].xyzx
mul r8.xyz, r0.xyzx, r2.wwww
mul r5.xyz, r5.xyzx, r8.xyzx
mad r0.xyz, r3.xyzx, r0.xyzx, r5.xyzx
mad r3.xyz, -r4.xyzx, cb0[11].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r2.xyz, r2.xyzx, r3.xyzx
mad r2.xyz, r6.xyzx, r7.xyzx, r2.xyzx
add r0.xyz, r0.xyzx, r2.xyzx
if_nz cb0[11].w
  eq r2.xyz, cb0[12].yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  and r2.x, r2.y, r2.x
  mul r2.yw, cb0[12].yyyz, l(0.000000, 0.01745329, 0.000000, 0.01745329)
  sincos null, r2.yw, r2.yyyw
  mul r3.xy, r2.ywyy, r2.ywyy
  mad r2.y, r2.y, r2.y, -r3.y
  div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r2.y
  mad r4.y, -r3.x, r4.x, l(1.000000)
  movc r2.xy, r2.xxxx, l(0,1.000000,0,0), r4.xyxx
  mul r0.w, |r0.w|, |r0.w|
  mad_sat r0.w, r0.w, r2.x, r2.y
  mul r0.w, r0.w, r1.w
  ftoi r3.xy, v0.xyxx
  mov r3.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r2.x, r3.xyzw, t0.xyzw
  ge r2.y, r2.x, l(0.984375)
  mul r2.w, r2.x, l(1.01587307)
  mad r2.x, r2.x, l(64.000000), l(-63.000000)
  movc r2.x, r2.y, r2.x, r2.w
  max r2.x, r2.x, l(0.00000001)
  rcp r2.x, r2.x
  div r2.y, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[12].x
  movc r2.y, r2.z, l(60000.000000), r2.y
  add r2.x, -r4.w, r2.x
  mul_sat r2.x, r2.y, r2.x
  mul r1.w, r0.w, r2.x
endif 
lt r0.w, l(0.000000), cb2[9].z
if_nz r0.w
  dp3 r0.w, v6.xyzx, v6.xyzx
  rsq r2.x, r0.w
  mul r2.xyz, r2.xxxx, v6.xyzx
  sqrt r0.w, r0.w
  lt r2.w, l(0.000000), cb2[13].w
  if_nz r2.w
    mad r3.xy, r0.wwww, cb2[15].xyxx, cb2[14].zwzz
    mul r3.xy, r3.xyxx, cb2[16].xyxx
    lt r2.w, l(0.010000), |v6.z|
    mul r3.zw, v6.zzzz, cb2[15].zzzw
    mul r4.xy, r3.zwzz, l(-1.442695, -1.442695, 0.000000, 0.000000)
    exp r4.xy, r4.xyxx
    add r4.xy, -r4.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    div r3.zw, r4.xxxy, r3.zzzw
    mul r3.zw, r3.zzzw, r3.xxxy
    movc r3.xy, r2.wwww, r3.zwzz, r3.xyxx
    mul r3.xzw, r3.xxxx, cb2[12].xxyz
    exp r3.xzw, r3.xxzw
    mul r4.xyz, r3.yyyy, cb2[12].xyzx
    exp r4.xyz, r4.xyzx
    add r4.xyz, -r3.xzwx, r4.xyzx
    mad r3.xyz, cb2[13].wwww, r4.xyzx, r3.xzwx
  else 
    mad r2.w, r0.w, cb2[15].x, cb2[14].z
    mul r2.w, r2.w, cb2[16].x
    lt r3.w, l(0.010000), |v6.z|
    mul r4.x, v6.z, cb2[15].z
    mul r4.y, r4.x, l(-1.442695)
    exp r4.y, r4.y
    add r4.y, -r4.y, l(1.000000)
    div r4.x, r4.y, r4.x
    mul r4.x, r2.w, r4.x
    movc r2.w, r3.w, r4.x, r2.w
    mul r4.xyz, r2.wwww, cb2[12].xyzx
    exp r3.xyz, r4.xyzx
  endif 
  mad r3.xyz, r3.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r3.xyz, r3.xyzx, -cb2[9].zzzz
  dp3 r2.x, cb2[7].yzwy, -r2.xyzx
  mad r2.y, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r2.z, cb2[8].w, -r2.x, l(1.000000)
  mul r2.z, r2.z, r2.z
  mul r2.z, r2.z, l(12.566371)
  div r2.y, r2.y, r2.z
  add r0.w, r0.w, -cb2[10].w
  mul_sat r0.w, r0.w, cb2[11].w
  mul r0.w, r0.w, r2.y
  mov_sat r2.x, r2.x
  mad r2.x, r2.x, r2.x, l(1.000000)
  mad r2.x, r2.x, l(0.05968310), l(-1.000000)
  mad r2.x, cb2[8].z, r2.x, l(1.000000)
  mul r2.yzw, r0.wwww, cb2[11].xxyz
  mad r2.xyz, r2.xxxx, cb2[10].xyzx, r2.yzwy
  mul r2.xyz, r2.xyzx, cb2[9].wwww
  add r4.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r2.xyz, r2.xyzx, r4.xyzx
  mad r2.xyz, r0.xyzx, r3.xyzx, r2.xyzx
else 
  mul r0.w, v6.z, cb2[6].x
  mad r2.w, cb2[6].x, v6.z, cb2[5].x
  lt r3.x, |r0.w|, l(0.000100)
  min r3.y, r2.w, l(64.000000)
  mul r3.y, r3.y, l(1.442695)
  exp r3.y, r3.y
  mov_sat r3.z, cb2[6].z
  lt r3.w, r2.w, l(0.000000)
  add r2.w, r2.w, l(1.000000)
  movc r2.w, r3.w, r3.y, r2.w
  add r2.w, r2.w, -cb2[6].z
  movc r0.w, r3.x, l(1.000000), r0.w
  div r0.w, r2.w, r0.w
  movc r0.w, r3.x, r3.z, r0.w
  mul r0.w, r0.w, cb2[5].z
  dp3 r2.w, v6.xyzx, v6.xyzx
  sqrt r3.x, r2.w
  mad r0.w, r0.w, r3.x, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  rsq r2.w, r2.w
  mul r3.xyz, r2.wwww, v6.xyzx
  dp3 r2.w, cb2[7].yzwy, r3.xyzx
  mad_sat r2.w, cb2[8].y, r2.w, cb2[8].x
  add r3.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r3.xyzw, r2.wwww, r3.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r3.w
  add r3.xyz, -r0.xyzx, r3.xyzx
  mad r2.xyz, r0.wwww, r3.xyzx, r0.xyzx
endif 
mul r0.xyz, r2.xyzx, cb1[85].yyyy
ge r2.xyz, r0.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.xyz, r0.xyzx, r2.xyzx
min r0.xyz, r0.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
max r2.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r1.xyz, r1.wwww, r2.xyzx
and r0.w, r1.w, l(0x7f800000)
ieq r0.w, r0.w, l(0x7f800000)
eq r3.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
and r3.xy, r3.zwzz, r3.xyxx
and r2.w, r3.y, r3.x
or r0.w, r0.w, r2.w
if_z r0.w
  ftou r3.xy, v0.xyxx
  imm_atomic_iadd r4.x, u6, r3.xyxx, l(1)
  and r3.zw, r4.xxxx, l(0, 0, 0x0000ffff, 0x0000ffff)
  ult r0.w, r3.w, cb2[58].z
  if_nz r0.w
    max r0.w, r1.z, r1.y
    max r0.w, r0.w, r1.x
    mov r0.w, |r0.w|
    and r0.w, r0.w, l(0x7f800000)
    iadd r0.w, r0.w, l(0x00800000)
    mad r2.xyz, r2.xyzx, r1.wwww, r0.wwww
    ubfe r2.x, l(8), l(15), r2.x
    ushr r2.yz, r2.yyzy, l(0, 15, 15, 0)
    bfi r2.yz, l(0, 8, 8, 0), l(0, 8, 16, 0), r2.yyzy, l(0, 0, 0, 0)
    iadd r2.x, r2.y, r2.x
    iadd r2.x, r2.z, r2.x
    ishl r0.w, r0.w, l(1)
    iadd r2.xzw, r0.wwww, r2.xxxx
    mov_sat r0.w, r1.w
    mul r0.w, r0.w, l(2046.000000)
    ftou r0.w, r0.w
    ishl r4.x, v0.z, l(2)
    and r0.w, r0.w, l(2046)
    bfi r2.y, l(11), l(0), r0.w, r4.x
    store_uav_typed u7.xyzw, r3.xyzw, r2.xyzw
    mov r0.w, l(-1)
  else 
    mov r0.w, l(0)
  endif 
else 
  mov r0.w, l(-1)
endif 
mul r1.xyz, r1.wwww, r0.xyzx
movc o0.xyzw, r0.wwww, l(0,0,0,0), r1.xyzw
ret 
// Approximately 2368 instruction slots used
