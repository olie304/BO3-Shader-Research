//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:37:03 2021
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float baseNormalHeight;            // Offset:  160 Size:     4
//   float2 glossRange;                 // Offset:  164 Size:     8
//   float anisotropy;                  // Offset:  172 Size:     4
//   float3 specColorTint;              // Offset:  176 Size:    12
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16
//   float4 debugNormalOverride;        // Offset:  960 Size:    16
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// colorSampler                      sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// specColorSampler                  sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// normalSampler                     sampler      NA          NA             s5      1 
// aoSampler                         sampler      NA          NA             s6      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// floatZSampler                     texture  float4          2d             t0      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// colorMap                          texture  float4          2d            t21      1 
// normalMap                         texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// glossMap                          texture  float4          2d            t24      1 
// aoMap                             texture  float4          2d            t25      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyz 
// COLOR                    0   xyz         1     NONE   float   xyz 
// COLOR                    1      w        1     NONE   float      w
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xyz         3     NONE   float   xyz 
// TEXCOORD                 2   xyz         4     NONE   float   xyz 
// TEXCOORD                 3   xyz         5     NONE   float   xyz 
// OFFPOSITION              0   xyz         6     NONE   float   xyz 
// SV_IsFrontFace           0   x           7    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[12], immediateIndexed
dcl_constantbuffer CB1[86], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2darray (float,float,float,float) t31
dcl_input_ps_siv linear noperspective v0.xyz, position
dcl_input_ps linear v1.xyz
dcl_input_ps linear v1.w
dcl_input_ps linear v2.xy
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps_sgv constant v7.x, is_front_face
dcl_output o0.xyzw
dcl_temps 67
dcl_indexableTemp x0[4], 4
dcl_indexableTemp x1[4], 4
dcl_indexableTemp x2[4], 4
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v2.xyxx, t21.xyzw, s1
mul r1.xyzw, r0.xyzw, v1.xyzw
sample_indexable(texture2d)(float,float,float,float) r0.x, v2.xyxx, t25.xyzw, s6
sample_indexable(texture2d)(float,float,float,float) r0.y, v2.xyxx, t24.yxzw, s3
add r0.z, -cb0[10].y, cb0[10].z
mul r2.x, r0.z, r0.y
mad r0.y, r0.y, r0.z, cb0[10].y
mul_sat r0.y, r0.y, l(0.05882353)
mad r2.x, r2.x, l(0.500000), cb0[10].y
mul_sat r2.x, r2.x, l(0.05882353)
sample_indexable(texture2d)(float,float,float,float) r2.yzw, v2.xyxx, t22.wxyz, s5
add r2.yzw, r2.yyzw, l(0.000000, -0.500000, -0.500000, -0.000000)
mad r2.yzw, cb0[10].xxxx, r2.yyzw, l(0.000000, 0.500000, 0.500000, 0.000000)
mad r2.yz, r2.yyzy, l(0.000000, 1.99218750, 1.99218750, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
dp2 r3.x, r2.yzyy, r2.yzyy
add r3.x, -r3.x, l(1.000000)
max r3.x, r3.x, l(0.000000)
sqrt r3.x, r3.x
mul r2.w, r2.w, r2.w
mul r2.w, r2.w, l(0.33333334)
min r2.w, r2.w, l(1.000000)
movc r3.y, v7.x, l(1.000000), l(-1.000000)
dp3 r3.z, v3.xyzx, v3.xyzx
rsq r3.z, r3.z
mul r4.xyz, r3.zzzz, v3.xyzx
mul r4.xyz, r3.yyyy, r4.xyzx
dp3 r3.z, v4.xyzx, v4.xyzx
rsq r3.z, r3.z
mul r5.xyz, r3.zzzz, v4.xyzx
mul r5.xyz, r3.yyyy, r5.xyzx
dp3 r3.z, v5.xyzx, v5.xyzx
rsq r3.z, r3.z
mul r6.xyz, r3.zzzz, v5.xyzx
mul r3.yzw, r3.yyyy, r6.xxyz
mul r0.y, r0.y, l(-17.000000)
exp r0.y, r0.y
add r0.y, r0.y, r2.w
log r0.y, r0.y
mul r0.y, r0.y, l(-0.05882353)
mul r2.x, r2.x, l(-17.000000)
exp r2.x, r2.x
add r2.x, r2.x, r2.w
log r2.x, r2.x
mul r2.x, r2.x, l(-0.05882353)
max r2.x, r2.x, l(0.000000)
mul r6.xyz, r2.zzzz, r3.yzwy
mad r6.xyz, r5.xyzx, r2.yyyy, r6.xyzx
mad r6.xyz, r4.xyzx, r3.xxxx, r6.xyzx
dp3 r2.y, r6.xyzx, r6.xyzx
rsq r2.y, r2.y
mul r6.xyz, r2.yyyy, r6.xyzx
mad r0.z, cb1[62].x, r0.z, cb0[10].y
mul_sat r0.z, r0.z, l(0.05882353)
mul r0.z, r0.z, l(-17.000000)
exp r0.z, r0.z
add r0.z, r0.z, r2.w
log r0.z, r0.z
mul r0.z, r0.z, l(-0.05882353)
max r0.yz, r0.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r2.y, l(0.000000), cb1[64].w
if_nz r2.y
  ftoi r2.y, cb1[64].w
  lod r2.z, v2.xyxx, t21.y, s1
  lod r2.w, v2.xyxx, t21.x, s1
  lt r2.z, r2.z, r2.w
  lt r2.w, l(0.000000), r2.w
  and r7.xyz, r2.yyyy, l(1, 2, 4, 0)
  movc r8.xyz, r7.xxxx, l(1.000000,0,1.000000,0), r1.xyzx
  movc r7.xyw, r7.yyyy, l(0,1.000000,0,1.000000), r1.xyxz
  movc r7.xyw, r2.wwww, r8.xyxz, r7.xyxw
  movc r8.xyz, r7.zzzz, l(0,1.000000,0,0), r1.xyzx
  movc r1.xyz, r2.zzzz, r7.xywx, r8.xyzx
endif 
add r2.yzw, -r1.xxyz, cb1[58].xxyz
mad r1.xyz, cb1[58].wwww, r2.yzwy, r1.xyzx
mad r0.w, -r0.w, v1.w, cb1[59].x
mad o0.w, cb1[59].w, r0.w, r1.w
mul r7.y, r0.z, cb1[62].w
add r0.w, -r0.x, cb1[63].x
mad r0.x, cb1[63].w, r0.w, r0.x
movc r2.yzw, v7.xxxx, r4.xxyz, -r4.xxyz
dp3 r0.w, r2.yzwy, r2.yzwy
rsq r0.w, r0.w
mad r2.yzw, r2.yyzw, r0.wwww, -r6.xxyz
mad r6.xyz, cb1[60].wwww, r2.yzwy, r6.xyzx
ftou r2.yz, v0.xxyx
ge r0.w, v0.z, l(0.984375)
mul r1.w, v0.z, l(1.01587307)
mad r2.w, v0.z, l(64.000000), l(-63.000000)
movc r0.w, r0.w, r2.w, r1.w
max r0.w, r0.w, l(0.00000001)
rcp r0.w, r0.w
dp3 r1.w, -v6.xyzx, -v6.xyzx
rsq r1.w, r1.w
mul r8.xyz, r1.wwww, -v6.xyzx
utof r7.zw, r2.zzzy
dp2 r2.w, r7.wzww, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r2.w, r2.w
mul r2.w, r2.w, l(52.982918)
frc r2.w, r2.w
mad r2.w, r2.w, l(6.28318548), cb1[70].w
sincos r9.x, r10.x, r2.w
dp2 r2.w, r7.zwzz, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r2.w, r2.w
mul r2.w, r2.w, l(52.982918)
frc r2.w, r2.w
mad r2.w, r2.w, l(6.28318548), cb1[70].w
sincos r3.x, r11.x, r2.w
dp3_sat r7.x, r6.xyzx, r8.xyzx
dp3 r2.w, -r8.xyzx, r6.xyzx
add r2.w, r2.w, r2.w
mad r12.xyz, r6.xyzx, -r2.wwww, -r8.xyzx
mul r2.w, r7.y, l(17.000000)
exp r13.x, r2.w
add r2.w, r13.x, l(2.000000)
div r2.w, l(2.000000), r2.w
sqrt r4.w, r2.w
mul r11.yzw, cb1[9].xxyw, -cb1[24].yyyy
mad r11.yzw, -cb1[24].xxxx, cb1[8].xxyw, r11.yyzw
mad r11.yzw, -cb1[24].zzzz, cb1[10].xxyw, r11.yyzw
add r11.yzw, r11.yyzw, cb1[11].xxyw
add r14.xyz, v6.xyzx, cb1[24].xyzx
sqrt r5.w, r4.w
mad r5.w, r5.w, l(0.500000), l(0.500000)
mul r5.w, r5.w, r5.w
mul r7.z, r5.w, l(0.500000)
mad r5.w, -r5.w, l(0.500000), l(1.000000)
mad r7.w, r7.x, r5.w, r7.z
mul r5.w, r5.w, r7.w
mul r7.z, r7.w, r7.z
min r7.w, |cb0[10].w|, l(1.000000)
add r2.x, -r0.y, r2.x
mad r0.y, r7.w, r2.x, r0.y
lt r2.x, cb0[10].w, l(0.000000)
mul r0.yw, r0.yyyw, l(0.000000, 17.000000, 0.000000, 0.00781250)
exp r13.y, r0.y
movc r9.zw, r2.xxxx, r13.xxxy, r13.yyyx
add r9.zw, r9.zzzw, l(0.000000, 0.000000, 2.000000, 2.000000)
div r9.zw, l(0.000000, 0.000000, 2.000000, 2.000000), r9.zzzw
dp3 r0.y, r6.xyzx, cb2[17].xyzx
ge r2.x, l(0.000000), |r0.y|
if_nz r2.x
  mov r13.y, l(0)
endif 
if_z r2.x
  mul r15.xyz, v6.yyyy, cb2[29].xyzx
  mad r15.xyz, v6.xxxx, cb2[28].xyzx, r15.xyzx
  mad r15.xyz, v6.zzzz, cb2[30].xyzx, r15.xyzx
  add r15.xyz, r15.xyzx, cb2[31].xyzx
  add r2.x, r15.z, -cb2[17].w
  mad r2.x, -r2.x, l(0.00006104), l(1.000000)
  mov_sat r7.w, r2.x
  eq r7.w, r2.x, r7.w
  if_nz r7.w
    mov r7.w, l(0)
    mov r8.w, l(0)
    loop 
      ge r10.w, r7.w, l(3.000000)
      breakc_nz r10.w
      ftou r10.w, r7.w
      add r13.zw, r15.xxxy, -cb2[r10.w + 20].xxxy
      max r13.z, |r13.w|, |r13.z|
      mul r8.w, r13.z, cb2[r10.w + 20].z
      lt r10.w, r8.w, l(1.000000)
      if_nz r10.w
        break 
      endif 
      add r7.w, r7.w, l(1.000000)
      mov r8.w, l(0)
    endloop 
  else 
    mov r7.w, l(3.000000)
    mov r8.w, l(0)
  endif 
  ge r10.w, r7.w, l(3.000000)
  if_nz r10.w
    mul r16.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
    rcp r17.xz, r16.xxxx
    mov r17.y, -r17.z
    mad r16.xyz, r15.xyxx, r17.xyzx, r16.yzyy
    add r17.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r16.xyz, r16.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r16.xyz, r17.xyzx, r16.xyzx
    mul r13.zw, r16.zzzy, cb2[32].xxxx
    round_ni r13.zw, r13.zzzw
    mul r13.w, r13.w, cb2[27].x
    mad r13.z, r13.w, cb2[32].x, r13.z
    ftou r13.z, r13.z
    iadd r13.z, r13.z, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r13.w, r13.z, l(0), t23.xxxx
    and r15.w, r13.w, l(0x40000000)
    ishl r16.w, r13.w, l(2)
    if_z r15.w
      and r15.w, r13.w, l(0x01ffffff)
      iadd r17.x, r13.z, r15.w
      ushr r13.z, r13.w, l(25)
      utof r13.z, r13.z
      mul r16.xyz, r13.zzzz, r16.xyzx
      frc r16.xyz, r16.xyzx
      mul r16.xyz, r16.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
      ftou r16.xyz, r16.xyzx
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.z, r17.x, l(0), t23.xxxx
      ushr r13.zw, r16.zzzy, l(0, 0, 6, 6)
      and r15.w, r17.z, l(0xc0000000)
      iadd r17.w, r17.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.w, r17.w, l(0), t23.xxxx
      movc r13.w, r13.w, r17.z, r17.w
      ushr r17.w, r13.w, l(13)
      movc r13.z, r13.z, r17.w, r13.w
      and r13.z, r13.z, l(8191)
      iadd r18.x, r13.z, r17.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.x, l(0), t23.xxxx
      mov r17.y, l(0)
      mov r18.y, l(1)
      movc r18.xyz, r15.wwww, r17.xyzx, r18.xyzx
      movc r19.yz, r15.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r13.zw, r16.zzzy, r19.yyyy
      and r13.zw, r13.zzzw, l(0, 0, 1, 1)
      and r17.w, r18.z, l(0xc0000000)
      iadd r18.w, r18.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.w, r18.w, l(0), t23.xxxx
      movc r13.w, r13.w, r18.z, r18.w
      ushr r18.w, r13.w, l(13)
      movc r13.z, r13.z, r18.w, r13.w
      and r13.z, r13.z, l(8191)
      iadd r19.x, r13.z, r18.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.w, r19.x, l(0), t23.xxxx
      movc r18.xyz, r17.wwww, r18.xyzx, r19.xzwx
      movc r17.xyz, r15.wwww, r17.xyzx, r18.xyzx
      and r13.z, r17.z, l(0xc0000000)
      if_z r13.z
        iadd r13.z, -r17.y, l(6)
        ushr r13.zw, r16.zzzy, r13.zzzz
        or r15.w, r17.z, l(0x40000000)
        bfi r13.w, l(1), l(1), r13.w, l(0)
        bfi r13.z, l(1), l(0), r13.z, r13.w
        imul null, r13.z, r13.z, l(10)
        ushr r13.z, r15.w, r13.z
        and r13.z, r13.z, l(1023)
        iadd r18.x, r13.z, r17.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.w, r18.x, l(0), t23.xxxx
        iadd r18.yz, r17.yyyy, l(0, 1, 2, 0)
        iadd r13.z, -r18.y, l(6)
        ushr r13.zw, r16.zzzy, r13.zzzz
        and r15.w, r18.w, l(0xc0000000)
        or r17.y, r18.w, l(0x40000000)
        bfi r13.w, l(1), l(1), r13.w, l(0)
        bfi r13.z, l(1), l(0), r13.z, r13.w
        imul null, r13.z, r13.z, l(10)
        ushr r13.z, r17.y, r13.z
        and r13.z, r13.z, l(1023)
        iadd r19.x, r13.z, r18.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.z, r19.x, l(0), t23.xxxx
        mov r19.y, r18.z
        movc r19.xyz, r15.wwww, r18.xywx, r19.xyzx
        iadd r13.z, -r19.y, l(6)
        ushr r13.zw, r16.zzzy, r13.zzzz
        and r17.y, r19.z, l(0xc0000000)
        or r17.w, r19.z, l(0x40000000)
        bfi r13.w, l(1), l(1), r13.w, l(0)
        bfi r13.z, l(1), l(0), r13.z, r13.w
        imul null, r13.z, r13.z, l(10)
        ushr r13.z, r17.w, r13.z
        and r13.z, r13.z, l(1023)
        iadd r20.x, r13.z, r19.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.y, r20.x, l(0), t23.xxxx
        movc r13.zw, r17.yyyy, r19.xxxz, r20.xxxy
        movc r17.xz, r15.wwww, r18.xxwx, r13.zzwz
      endif 
      and r13.z, r17.z, l(0xc0000000)
      if_z r13.z
        ubfe r13.w, l(14), l(15), r17.z
        utof r13.w, r13.w
        mul r13.w, r13.w, cb2[27].w
        mul r13.w, r13.w, l(0.00006104)
        and r17.yw, r17.zzzz, l(0, 0x00007fff, 0, 0x20000000)
        utof r15.w, r17.y
        mul r15.w, r15.w, cb2[27].w
        mul r15.w, r15.w, l(0.00003052)
        and r17.y, r16.y, l(3)
        iadd r17.y, r17.y, r17.x
        iadd r17.y, r17.y, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.y, r17.y, l(0), t23.xxxx
        bfi r18.xyz, l(2, 2, 1, 0), l(3, 1, 4, 0), r16.xyzx, l(0, 0, 0, 0)
        ushr r16.x, r17.y, r18.x
        and r16.x, r16.x, l(255)
        utof r16.x, r16.x
        mul r16.x, r15.w, r16.x
        mad r16.x, r16.x, l(0.00392157), r13.w
        iadd r16.y, r18.y, l(1)
        ubfe r16.z, l(1), l(1), r16.z
        iadd r16.y, r16.z, r16.y
        iadd r16.y, r16.y, r17.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.y, r16.y, l(0), t23.xxxx
        ushr r16.y, r16.y, r18.z
        and r16.y, r16.y, l(0x0000ffff)
        utof r16.y, r16.y
        mul r15.w, r15.w, r16.y
        mad r13.w, r15.w, l(0.00001526), r13.w
        movc r16.w, r17.w, r16.x, r13.w
      else 
        and r13.w, r17.z, l(0x80000000)
        iadd r15.w, r17.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.w, r15.w, l(0), t23.xxxx
        movc r13.w, r13.w, r15.w, l(0)
        ishl r15.w, r17.z, l(2)
        ushr r16.x, r13.w, l(16)
        f16tof32 r16.x, r16.x
        and r13.w, r13.w, l(0x0000ffff)
        f16tof32 r13.w, r13.w
        mad r15.w, r15.x, r16.x, r15.w
        mad r13.w, r15.y, r13.w, r15.w
        movc r16.w, r13.z, r13.w, r16.w
      endif 
    endif 
    mad r13.z, -cb2[27].z, l(2.000000), r15.z
    lt r13.z, r16.w, r13.z
    movc r13.y, r13.z, l(0), l(1.000000)
  endif 
  if_z r10.w
    if_z cb2[58].y
      ftou r10.w, r7.w
      add r13.zw, r15.xxxy, -cb2[r10.w + 20].xxxy
      mul r13.zw, r13.zzzw, cb2[r10.w + 20].zzzz
      mad r16.xy, r13.zwzz, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r10.w, cb2[26].y
      add r16.z, r7.w, r10.w
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.w, r16.xyzx, t13.xxxx, s13, r2.x
      sample_l_indexable(texture2darray)(float,float,float,float) r13.z, r16.xyzx, t31.yzxw, s0, l(0.000000)
      add r10.w, r10.w, r13.z
      add_sat r10.w, r10.w, l(-1.000000)
      mul r13.z, r10.w, r10.w
      mul r13.y, r10.w, r13.z
    endif 
    if_nz cb2[58].y
      mov r16.x, -r9.x
      ftou r10.w, r7.w
      add r7.w, r7.w, l(1.000000)
      min r7.w, r7.w, l(2.000000)
      ftou r7.w, r7.w
      add r8.w, -r8.w, l(1.000000)
      mul r8.w, r8.w, l(28.000000)
      ftou r8.w, r8.w
      add r13.zw, r15.xxxy, -cb2[r10.w + 20].xxxy
      mul r13.zw, r13.zzzw, cb2[r10.w + 20].zzzz
      mad r13.zw, r13.zzzw, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
      add r15.xy, r15.xyxx, -cb2[r7.w + 20].xyxx
      mul r15.xy, r15.xyxx, cb2[r7.w + 20].zzzz
      mad r15.xy, r15.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      mov r16.y, r10.x
      mov r16.z, r9.x
      mov r15.zw, l(0,0,0,0)
      loop 
        uge r16.w, r15.w, l(8)
        breakc_nz r16.w
        ult r16.w, r8.w, r15.w
        movc r17.xy, r16.wwww, r15.xyxx, r13.zwzz
        movc r17.z, r16.w, cb2[r7.w + 20].w, cb2[r10.w + 20].w
        movc r16.w, r16.w, r7.w, r10.w
        dp2 r18.x, icb[r15.w + 0].yxyy, r16.xyxx
        dp2 r18.y, icb[r15.w + 0].yxyy, r16.yzyy
        mad r17.xy, r18.xyxx, r17.zzzz, r17.xyxx
        iadd r16.w, r16.w, cb2[26].y
        utof r17.z, r16.w
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r16.w, r17.xyzx, t13.xxxx, s13, r2.x
        sample_l_indexable(texture2darray)(float,float,float,float) r17.x, r17.xyzx, t31.xyzw, s0, l(0.000000)
        add r16.w, r16.w, r17.x
        add_sat r16.w, r16.w, l(-1.000000)
        mad r15.z, r16.w, l(0.125000), r15.z
        iadd r15.w, r15.w, l(1)
      endloop 
      mul r2.x, r15.z, r15.z
      mul r13.y, r15.z, r2.x
    endif 
  endif 
endif 
and r2.x, cb2[53].x, l(0x0000ffff)
if_nz r2.x
  iadd r2.x, r2.x, cb2[0].x
  iadd r2.x, r2.x, l(-1)
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r7.w, r2.x, l(52), t12.xxxx
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r2.x, l(68), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r2.x, l(84), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r2.x, l(132), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r2.x, l(148), t12.xyzw
  mad r8.w, |r0.y|, l(-0.200000), l(0.400000)
  lt r10.w, r0.y, l(0.000000)
  movc r8.w, r10.w, -r8.w, r8.w
  mad r19.xyz, r6.xyzx, r8.wwww, v6.xyzx
  mov r19.w, l(1.000000)
  dp4 r15.x, r15.xyzw, r19.xyzw
  dp4 r15.y, r16.xyzw, r19.xyzw
  mad r13.zw, r15.xxxy, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
  add r13.zw, r18.zzzw, r13.zzzw
  mul r13.zw, r18.xxxy, r13.zzzw
  div r15.xy, r7.wwww, r17.xzxx
  add r15.zw, -r15.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
  ge r15.zw, r13.zzzw, r15.zzzw
  ge r15.xy, r15.xyxx, r13.zwzz
  or r15.xy, r15.xyxx, r15.zwzz
  or r8.w, r15.y, r15.x
  if_z r8.w
    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r8.w, r2.x, l(28), t12.xxxx
    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r2.x, l(100), t12.xyzw
    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xy, r2.x, l(164), t12.xyxx
    dp4 r2.x, r15.xyzw, r19.xyzw
    mov_sat r13.zw, r13.zzzw
    mad r15.xy, r13.zwzz, r17.xzxx, r17.ywyy
    add r2.x, r16.x, r2.x
    div r2.x, r2.x, r16.y
    max r2.x, r2.x, l(0.00006104)
    and r8.w, r8.w, l(0x0000ffff)
    if_nz cb2[58].y
      mov r16.x, -r9.x
      utof r17.z, r8.w
      mov r16.y, r10.x
      mov r16.z, r9.x
      mov r10.w, l(0)
      mov r13.z, l(0)
      loop 
        ige r13.w, r13.z, l(8)
        breakc_nz r13.w
        dp2 r18.x, icb[r13.z + 0].yxyy, r16.xyxx
        dp2 r18.y, icb[r13.z + 0].yxyy, r16.yzyy
        mad r17.xy, r18.xyxx, r7.wwww, r15.xyxx
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r13.w, r17.xyzx, t9.xxxx, s13, r2.x
        mad r10.w, r13.w, l(0.125000), r10.w
        iadd r13.z, r13.z, l(1)
      endloop 
    else 
      utof r15.z, r8.w
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.w, r15.xyzx, t9.xxxx, s13, r2.x
    endif 
    mul r2.x, r10.w, r10.w
    mul r2.x, r10.w, r2.x
  else 
    mov r2.x, l(1.000000)
  endif 
  mul r13.y, r2.x, r13.y
endif 
lt r2.x, l(0.000000), |r0.y|
if_nz r2.x
  lt r2.x, l(0.000000), r13.y
  if_nz r2.x
    mul r2.x, r2.w, cb2[18].w
    mul r2.x, r2.x, l(0.250000)
    if_nz cb2[23].x
      mov r14.w, l(1.000000)
      dp4 r7.w, cb2[24].xyzw, r14.xyzw
      dp4 r8.w, cb2[25].xyzw, r14.xyzw
      frc r15.x, r7.w
      frc r15.y, r8.w
      iadd r7.w, l(-1), cb2[23].x
      utof r15.z, r7.w
      sample_l_indexable(texture2darray)(float,float,float,float) r15.xyz, r15.xyzx, t20.xyzw, s2, l(0.000000)
      add r15.xyz, r15.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
      mad r15.xyz, cb2[23].yyyy, r15.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      mul r15.xyz, r15.xyzx, cb2[18].xyzx
    else 
      mov r15.xyz, cb2[18].xyzx
    endif 
    mad r7.w, -r7.x, l(0.500000), l(1.000000)
    mad r7.w, -|r0.y|, r7.w, l(1.000000)
    mul r7.w, r7.w, r7.w
    mad r7.w, -r7.w, l(0.620000), l(0.620000)
    add r7.w, -|r0.y|, r7.w
    mad r7.w, r4.w, r7.w, |r0.y|
    lt r8.w, l(0.000000), r0.y
    mov_sat r0.y, r0.y
    mad r16.xyz, -v6.xyzx, r1.wwww, cb2[17].xyzx
    dp3 r1.w, r16.xyzx, r16.xyzx
    rsq r1.w, r1.w
    mul r16.xyz, r1.wwww, r16.xyzx
    dp3 r1.w, r6.xyzx, r16.xyzx
    dp3 r10.w, r16.xyzx, r8.xyzx
    mul r13.z, r9.w, r9.z
    sqrt r13.z, r13.z
    dp3 r13.w, r16.xyzx, r5.xyzx
    dp3 r14.w, r16.xyzx, r3.yzwy
    mul r13.w, r13.w, r13.w
    div r13.w, r13.w, r9.z
    mul r14.w, r14.w, r14.w
    div r14.w, r14.w, r9.w
    add r13.w, r13.w, r14.w
    mad r1.w, |r1.w|, |r1.w|, r13.w
    mad r13.w, r0.y, r5.w, r7.z
    mul r1.w, r1.w, r1.w
    mul r1.w, r13.z, r1.w
    mul r1.w, r13.w, r1.w
    rcp r1.w, r1.w
    mul r0.y, r2.x, r0.y
    mul r0.y, r0.y, r1.w
    add_sat r1.w, -r10.w, l(1.000000)
    mul r2.x, r1.w, r1.w
    mul r2.x, r2.x, r2.x
    mul r1.w, r1.w, r2.x
    mul r1.w, r0.y, r1.w
    and r2.x, r7.w, r8.w
    movc r16.xyz, r8.wwww, l(0,0,0,0), r7.wwww
    and r13.zw, r1.wwww, r8.wwww
    and r17.xyz, r0.yyyy, r8.wwww
    dp3 r0.y, r15.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
    mul r0.y, r0.y, r13.y
    mov r13.x, l(1.000000)
    mov r1.w, cb2[17].x
    mov r18.xy, cb2[17].yzyy
    mov r18.zw, r2.xxxx
    mov r7.w, r13.w
  else 
    mov r0.y, l(0)
    mov r15.xyz, l(0,0,0,0)
    mov r1.w, l(0)
    mov r18.xyzw, l(0,0,0,0)
    mov r16.xyz, l(0,0,0,0)
    mov r2.x, l(0)
    mov r17.xyz, l(0,0,0,0)
    mov r7.w, l(0)
    mov r13.xyzw, l(0,0,0,0)
  endif 
else 
  mov r0.y, l(0)
  mov r15.xyz, l(0,0,0,0)
  mov r1.w, l(0)
  mov r18.xyzw, l(0,0,0,0)
  mov r16.xyz, l(0,0,0,0)
  mov r2.x, l(0)
  mov r17.xyz, l(0,0,0,0)
  mov r7.w, l(0)
  mov r13.xyzw, l(0,0,0,0)
endif 
min r0.w, r0.w, l(15.000000)
ftou r0.w, r0.w
ushr r19.xy, r2.yzyy, l(6, 6, 0, 0)
ishl r19.z, r0.w, l(4)
mov r20.x, -r9.x
mad r0.w, -r7.x, l(0.500000), l(1.000000)
mul r2.y, r9.w, r9.z
sqrt r2.y, r2.y
mov r21.xy, l(0,0,0,0)
mov r22.w, l(0)
mov r23.xyz, v6.xyzx
mov r23.w, l(1.000000)
mov r24.w, l(1.000000)
mov r20.z, r9.x
mov r25.z, l(1.000000)
mov r26.w, l(1.000000)
mov r20.yw, r10.xxxx
mov r9.y, r20.w
mov r27.w, l(1.000000)
mov r10.y, r20.x
mov r10.z, r9.x
mov r28.x, r10.x
mov r28.y, r20.x
mov r28.z, r9.x
mov r29.xyz, l(0,0,0,0)
mov r30.xyz, l(0,0,0,0)
mov r31.xyz, l(0,0,0,0)
mov r32.xyz, l(0,0,0,0)
mov r33.xyz, r15.xyzx
mov r34.x, r1.w
mov r34.yz, r18.xxyx
mov r35.xy, r18.zwzz
mov r35.z, r2.x
mov r36.xyz, r16.xyzx
mov r37.xyz, r17.xyzx
mov r38.x, r7.w
mov r38.yz, r13.zzwz
mov r39.x, cb2[58].y
mov r39.y, r0.y
mov r39.zw, r13.xxxy
mov r2.z, l(0)
loop 
  uge r8.w, r2.z, cb2[0].x
  breakc_nz r8.w
  ushr r21.z, r2.z, l(5)
  iadd r22.xyz, r19.xyzx, r21.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r8.w, r22.xyzw, t6.yzwx
  mov r22.xyz, r29.xyzx
  mov r40.xyz, r30.xyzx
  mov r41.xyz, r31.xyzx
  mov r42.xyz, r32.xyzx
  mov r43.xyz, r33.xyzx
  mov r44.xyz, r34.xyzx
  mov r45.xyz, r35.xyzx
  mov r46.xyz, r37.xyzx
  mov r47.xyz, r38.xyzx
  mov r21.zw, r39.zzzw
  mov r10.w, r39.x
  mov r14.w, r39.y
  mov r48.xyz, r36.xyzx
  mov r15.w, r8.w
  loop 
    breakc_z r15.w
    firstbit_lo r16.w, r15.w
    ishl r17.w, l(1), r16.w
    and r19.w, r15.w, r17.w
    if_nz r19.w
      xor r15.w, r15.w, r17.w
      iadd r16.w, r2.z, r16.w
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r49.xyzw, r16.w, l(0), t12.wxyz
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r50.xyzw, r16.w, l(16), t12.zxyw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r51.xyzw, r16.w, l(32), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r52.xyzw, r16.w, l(48), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r53.xyzw, r16.w, l(64), t12.yzwx
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r54.xyzw, r16.w, l(80), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r55.xyzw, r16.w, l(96), t12.yzwx
      ubfe r17.w, l(3), l(24), r50.w
      switch r17.w
        case l(4)
        lt r17.w, l(0.000000), r55.x
        mov r56.xy, r54.zwzz
        mov r56.z, r55.w
        mad r57.xyz, -r56.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r49.yzwy
        add r58.xyz, r57.xyzx, -v6.xyzx
        dp3 r19.w, r56.xyzx, r58.xyzx
        div_sat r25.w, -r19.w, r55.x
        mad r59.xyz, r25.wwww, r56.xyzx, r57.xyzx
        movc r59.xyz, r17.wwww, r59.xyzx, r49.yzwy
        add r59.xyz, r59.xyzx, -v6.xyzx
        dp3 r28.w, r59.xyzx, r59.xyzx
        rsq r29.w, r28.w
        mul r59.xyz, r29.wwww, r59.xyzx
        dp3 r29.w, r6.xyzx, r59.xyzx
        lt r30.w, l(0.000000), |r29.w|
        if_nz r30.w
          sqrt r30.w, r28.w
          mul r31.w, r52.x, r52.x
          div r28.w, r31.w, r28.w
          min r28.w, r28.w, l(1.000000)
          mad_sat r60.xy, r30.wwww, r51.xzxx, r51.ywyy
          mul r60.zw, r60.xxxy, r60.xxxy
          mad r60.xy, r60.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
          mul r60.xy, r60.xyxx, r60.zwzz
          mul r28.w, r28.w, r60.x
          mul r60.x, r60.y, r28.w
          lt r28.w, l(0.000000), r60.x
          if_nz r28.w
            ubfe r60.zw, l(0, 0, 3, 4), l(0, 0, 27, 20), r50.wwww
            ine r28.w, r60.z, l(1)
            if_nz r28.w
              mad r28.w, |r29.w|, l(-0.200000), l(0.400000)
              lt r30.w, r29.w, l(0.000000)
              movc r28.w, r30.w, -r28.w, r28.w
              mad r61.xyz, r6.xyzx, r28.wwww, v6.xyzx
              add r61.xyz, -r53.xyzx, r61.xyzx
              max r28.w, |r61.z|, |r61.y|
              max r28.w, r28.w, |r61.x|
              div r28.w, r54.x, r28.w
              add r28.w, r54.y, r28.w
              dp3 r30.w, r61.xyzx, r61.xyzx
              rsq r30.w, r30.w
              max r28.w, r28.w, l(0.00006104)
              and r31.w, r50.w, l(0x0000ffff)
              utof r62.w, r31.w
              mov r60.y, l(0)
              mov r31.w, l(0)
              loop 
                ige r32.w, r31.w, l(8)
                breakc_nz r32.w
                dp2 r63.y, icb[r31.w + 0].yxyy, r20.xyxx
                dp2 r63.z, icb[r31.w + 0].yxyy, r20.yzyy
                mul r63.yz, r52.yyyy, r63.yyzy
                mul r63.x, r11.x, r63.y
                mul r63.w, r3.x, r63.y
                mad r62.xyz, r61.xyzx, r30.wwww, r63.xzwx
                sample_c_lz_indexable(texturecubearray)(float,float,float,float) r32.w, r62.xyzw, t10.xxxx, s13, r28.w
                mad r60.y, r32.w, l(0.125000), r60.y
                iadd r31.w, r31.w, l(1)
              endloop 
            else 
              mov r60.y, l(1.000000)
            endif 
            if_nz r60.w
              iadd r28.w, r60.w, cb2[0].x
              iadd r28.w, r28.w, l(-1)
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r30.w, r28.w, l(52), t12.xxxx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r61.xyzw, r28.w, l(100), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r62.xyzw, r28.w, l(116), t12.xyzw
              mad r31.w, |r29.w|, l(-0.200000), l(0.400000)
              lt r32.w, r29.w, l(0.000000)
              movc r31.w, r32.w, -r31.w, r31.w
              mad r24.xyz, r6.xyzx, r31.wwww, v6.xyzx
              dp4 r31.w, r61.xyzw, r24.xyzw
              dp4 r32.w, r62.xyzw, r24.xyzw
              lt r33.w, r32.w, r31.w
              if_z r33.w
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r61.xyzw, r28.w, l(68), t12.xyzw
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r62.xyzw, r28.w, l(84), t12.xyzw
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r63.xyzw, r28.w, l(132), t12.xyzw
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r64.xyzw, r28.w, l(148), t12.xyzw
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r60.zw, r28.w, l(164), t12.xxxy
                dp4 r61.x, r61.xyzw, r24.xyzw
                dp4 r61.y, r62.xyzw, r24.xyzw
                div r24.xy, r61.xyxx, r32.wwww
                mad r24.xy, r24.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                add r24.xy, r64.zwzz, r24.xyxx
                mul r24.xy, r64.xyxx, r24.xyxx
                div r61.xy, r30.wwww, r63.xzxx
                add r61.zw, -r61.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                ge r61.zw, r24.xxxy, r61.zzzw
                ge r61.xy, r61.xyxx, r24.xyxx
                or r61.xy, r61.xyxx, r61.zwzz
                or r24.z, r61.y, r61.x
                mov_sat r24.xy, r24.xyxx
                mad r61.xy, r24.xyxx, r63.xzxx, r63.ywyy
                mul r24.x, r32.w, r60.w
                mad r24.y, r60.z, r32.w, r31.w
                div r24.x, r24.y, r24.x
              else 
                mov r24.z, l(-1)
              endif 
              or r24.y, r33.w, r24.z
              if_z r24.y
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r24.y, r28.w, l(28), t12.xxxx
                max r24.x, r24.x, l(0.00006104)
                and r24.y, r24.y, l(0x0000ffff)
                if_nz r10.w
                  utof r62.z, r24.y
                  mov r24.z, l(0)
                  mov r28.w, l(0)
                  loop 
                    ige r31.w, r28.w, l(8)
                    breakc_nz r31.w
                    dp2 r63.x, icb[r28.w + 0].yxyy, r20.xwxx
                    dp2 r63.y, icb[r28.w + 0].xyxx, r9.xyxx
                    mad r62.xy, r63.xyxx, r30.wwww, r61.xyxx
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r31.w, r62.xyzx, t9.xxxx, s13, r24.x
                    mad r24.z, r31.w, l(0.125000), r24.z
                    iadd r28.w, r28.w, l(1)
                  endloop 
                else 
                  utof r61.z, r24.y
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.z, r61.xyzx, t9.xxxx, s13, r24.x
                endif 
                mul r24.x, r24.z, r24.z
                mul r24.x, r24.z, r24.x
              else 
                mov r24.x, l(1.000000)
              endif 
              mul r60.y, r24.x, r60.y
            endif 
            mul r24.x, r60.y, r60.x
            lt r24.y, l(0.000000), r24.x
            if_nz r24.y
              mul r24.y, r2.w, r50.x
              mul r24.y, r24.y, l(0.250000)
              dp3 r28.w, r56.xyzx, r12.xyzx
              dp3 r30.w, r12.xyzx, r58.xyzx
              mad r31.w, -r28.w, r28.w, r55.x
              mad r19.w, r28.w, r30.w, -r19.w
              div_sat r19.w, r19.w, r31.w
              div r28.w, r31.w, r55.x
              mul r28.w, r28.w, l(10.000000)
              min r28.w, r28.w, l(1.000000)
              add r19.w, -r25.w, r19.w
              mad r19.w, r28.w, r19.w, r25.w
              mad r56.xyz, r19.wwww, r56.xyzx, r57.xyzx
              movc r56.xyz, r17.wwww, r56.xyzx, r49.yzwy
              add r56.xyz, r56.xyzx, -v6.xyzx
              dp3 r17.w, r56.xyzx, r56.xyzx
              rsq r17.w, r17.w
              mul r57.xyz, r17.wwww, r56.xyzx
              mad r19.w, -|r29.w|, r0.w, l(1.000000)
              mul r19.w, r19.w, r19.w
              mad r19.w, -r19.w, l(0.620000), l(0.620000)
              add r19.w, -|r29.w|, r19.w
              mad r19.w, r4.w, r19.w, |r29.w|
              lt r25.w, l(0.000000), r29.w
              dp3_sat r28.w, r6.xyzx, r57.xyzx
              mad r56.xyz, r56.xyzx, r17.wwww, r8.xyzx
              dp3 r17.w, r56.xyzx, r56.xyzx
              rsq r17.w, r17.w
              mul r56.xyz, r17.wwww, r56.xyzx
              dp3 r17.w, r6.xyzx, r56.xyzx
              dp3 r29.w, r56.xyzx, r8.xyzx
              dp3 r30.w, r56.xyzx, r5.xyzx
              dp3 r31.w, r56.xyzx, r3.yzwy
              mul r30.w, r30.w, r30.w
              div r30.w, r30.w, r9.z
              mul r31.w, r31.w, r31.w
              div r31.w, r31.w, r9.w
              add r30.w, r30.w, r31.w
              mad r17.w, |r17.w|, |r17.w|, r30.w
              mad r30.w, r28.w, r5.w, r7.z
              mul r17.w, r17.w, r17.w
              mul r17.w, r2.y, r17.w
              mul r17.w, r30.w, r17.w
              rcp r17.w, r17.w
              mul r24.y, r24.y, r28.w
              mul r17.w, r17.w, r24.y
              add_sat r24.y, -r29.w, l(1.000000)
              mul r28.w, r24.y, r24.y
              mul r28.w, r28.w, r28.w
              mul r24.y, r24.y, r28.w
              mul r24.y, r17.w, r24.y
              and r56.xyz, r19.wwww, r25.wwww
              movc r19.w, r25.w, l(0), r19.w
              and r57.xyz, r24.yyyy, r25.wwww
              and r17.w, r17.w, r25.w
              mov r50.x, r49.x
              dp3 r24.y, r50.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
              mul r24.y, r24.y, r24.x
              lt r25.w, r14.w, r24.y
              if_nz r25.w
                mul r25.w, r21.w, r21.z
                mul r58.xyz, r43.xyzx, r25.wwww
                mad r22.xyz, r58.xyzx, r45.xyzx, r22.xyzx
                mad r40.xyz, r58.xyzx, r48.xyzx, r40.xyzx
                mad r42.xyz, r58.xyzx, r46.xyzx, r42.xyzx
                mad r41.xyz, r58.xyzx, r47.xyzx, r41.xyzx
                mov r46.xyz, r17.wwww
                mov r14.w, r24.y
                mov r48.xyz, r19.wwww
                mov r43.xyz, r50.xyzx
                mov r44.xyz, r59.xyzx
                mov r45.xyz, r56.xyzx
                mov r47.xyz, r57.xyzx
                mov r21.zw, r60.xxxy
              else 
                mul r56.xyw, r24.xxxx, r50.xyxz
                mad r22.xyz, r56.xywx, r56.zzzz, r22.xyzx
                mad r40.xyz, r56.xywx, r19.wwww, r40.xyzx
                mad r42.xyz, r56.xywx, r17.wwww, r42.xyzx
                mad r41.xyz, r56.xywx, r57.xyzx, r41.xyzx
              endif 
            endif 
          endif 
        endif 
        break 
        case l(2)
        mov r56.xy, r52.zwzz
        mov r56.z, r53.w
        add r56.xyz, r56.xyzx, -v6.xyzx
        dp3 r17.w, r56.xyzx, r56.xyzx
        rsq r17.w, r17.w
        mul r57.xyz, r17.wwww, r56.xyzx
        dp3 r19.w, r6.xyzx, r57.xyzx
        lt r24.x, l(0.000000), |r19.w|
        if_nz r24.x
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r58.xyzw, r16.w, l(112), t12.yzwx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r59.xyzw, r16.w, l(128), t12.zxyw
          mov r61.xyz, r58.xyzx
          mov r61.w, r59.y
          dp4 r24.x, r61.xyzw, r23.xyzw
          lt r24.y, r24.x, l(1.000000)
          if_nz r24.y
            mov r60.xzw, l(1.000000,0,1.000000,1.000000)
            mov r62.x, l(0)
          else 
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r63.xyzw, r16.w, l(172), t12.yzwx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r64.xyzw, r16.w, l(188), t12.wxyz
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r65.xyzw, r16.w, l(204), t12.xyzw
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r24.y, r16.w, l(236), t12.xxxx
            add r66.xyz, r49.yzwy, -v6.xyzx
            mul r25.w, r52.x, r52.x
            dp3 r28.w, r66.xyzx, r66.xyzx
            div r25.w, r25.w, r28.w
            min r25.w, r25.w, l(1.000000)
            mad_sat r51.xy, r24.xxxx, r51.xzxx, r51.ywyy
            mul r51.zw, r51.xxxy, r51.xxxy
            mad r51.xy, r51.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
            mul r51.xy, r51.xyxx, r51.zwzz
            mul r25.w, r25.w, r51.x
            mul r25.w, r51.y, r25.w
            mov r53.w, r54.x
            dp4 r51.x, r53.xyzw, r23.xyzw
            mov r66.xyz, r54.yzwy
            mov r66.w, r55.w
            dp4 r51.y, r66.xyzw, r23.xyzw
            div r25.xy, r51.xyxx, r24.xxxx
            lt r24.x, r63.w, l(0.00048828)
            if_nz r24.x
              mov r64.y, r65.x
              mad_sat r51.xy, |r25.xyxx|, r64.zwzz, r64.xyxx
              mul r51.zw, r51.xxxy, r51.xxxy
              mad r51.xy, r51.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
              mul r51.xy, r51.xyxx, r51.zwzz
              mul r24.x, r51.y, r51.x
            else 
              mov r63.w, r64.y
              mul_sat r51.xyzw, |r25.yyxx|, r63.xyzw
              log r51.xyzw, r51.xyzw
              mul r51.xyzw, r51.xyzw, r64.xxxx
              exp r51.xyzw, r51.xyzw
              add r51.xy, r51.zwzz, r51.xyxx
              log r51.xy, r51.xyxx
              mul r51.xy, r51.xyxx, r65.xxxx
              exp r51.xy, r51.xyxx
              mul r28.w, r51.x, r64.z
              mad r29.w, r64.w, r51.y, l(-1.000000)
              mad r28.w, r64.w, r51.y, -r28.w
              div_sat r28.w, r29.w, r28.w
              mul r29.w, r28.w, r28.w
              mad r28.w, r28.w, l(-2.000000), l(3.000000)
              mul r24.x, r28.w, r29.w
            endif 
            mul r62.x, r24.x, r25.w
            and r24.x, r24.y, l(255)
            if_nz r24.x
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r51.xyz, r16.w, l(220), t12.xyzx
              dp3 r24.y, r65.yzwy, r25.xyzx
              dp3 r25.x, r51.xyzx, r25.xyzx
              frc r51.x, r24.y
              frc r51.y, r25.x
              iadd r24.x, r24.x, l(-1)
              utof r51.z, r24.x
              sample_l_indexable(texture2darray)(float,float,float,float) r60.xzw, r51.xyzx, t20.xwyz, s2, l(0.000000)
            else 
              mov r60.xzw, l(1.000000,0,1.000000,1.000000)
            endif 
          endif 
          mov r49.yz, r50.yyzy
          mul r25.xyw, r60.xzxw, r49.xyxz
          lt r24.x, l(0.000000), r62.x
          if_nz r24.x
            ubfe r24.xy, l(3, 4, 0, 0), l(27, 20, 0, 0), r50.wwww
            ine r24.x, r24.x, l(1)
            if_nz r24.x
              mad r24.x, |r19.w|, l(-0.200000), l(0.400000)
              lt r28.w, r19.w, l(0.000000)
              movc r24.x, r28.w, -r24.x, r24.x
              mad r26.xyz, r6.xyzx, r24.xxxx, v6.xyzx
              mov r58.xyz, r55.xyzx
              dp4 r24.x, r58.xyzw, r26.xyzw
              dp4 r28.w, r61.xyzw, r26.xyzw
              ge r29.w, r28.w, r24.x
              if_nz r29.w
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r59.y, r16.w, l(144), t12.xxxx
                mov r53.w, r54.x
                dp4 r49.x, r53.xyzw, r26.xyzw
                mov r55.xyz, r54.yzwy
                dp4 r49.y, r55.xyzw, r26.xyzw
                div r26.xy, r49.xyxx, r28.wwww
                mad_sat r26.xy, r26.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                mad r26.xy, r26.xyxx, r59.zwzz, r59.xyxx
                div r16.w, r24.x, r28.w
                max r16.w, r16.w, l(0.00006104)
                and r24.x, r50.w, l(0x0000ffff)
                if_nz r10.w
                  utof r49.z, r24.x
                  mov r28.w, l(0)
                  mov r29.w, l(0)
                  loop 
                    ige r30.w, r29.w, l(8)
                    breakc_nz r30.w
                    dp2 r51.x, icb[r29.w + 0].xyxx, r10.xyxx
                    dp2 r51.y, icb[r29.w + 0].yxyy, r10.xzxx
                    mad r49.xy, r51.xyxx, r52.yyyy, r26.xyxx
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r30.w, r49.xyzx, t9.xxxx, s13, r16.w
                    mad r28.w, r30.w, l(0.125000), r28.w
                    iadd r29.w, r29.w, l(1)
                  endloop 
                else 
                  utof r26.z, r24.x
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r28.w, r26.xyzx, t9.xxxx, s13, r16.w
                endif 
                mul r16.w, r28.w, r28.w
                mul r62.y, r28.w, r16.w
              else 
                mov r62.y, l(1.000000)
              endif 
            else 
              mov r62.y, l(1.000000)
            endif 
            if_nz r24.y
              iadd r16.w, r24.y, cb2[0].x
              iadd r16.w, r16.w, l(-1)
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r24.x, r16.w, l(52), t12.xxxx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r49.xyzw, r16.w, l(68), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r51.xyzw, r16.w, l(84), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r52.xyzw, r16.w, l(100), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r53.xyzw, r16.w, l(116), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r54.xyzw, r16.w, l(132), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r55.xyzw, r16.w, l(148), t12.xyzw
              mad r24.y, |r19.w|, l(-0.200000), l(0.400000)
              lt r26.x, r19.w, l(0.000000)
              movc r24.y, r26.x, -r24.y, r24.y
              mad r27.xyz, r6.xyzx, r24.yyyy, v6.xyzx
              dp4 r26.x, r49.xyzw, r27.xyzw
              dp4 r26.y, r51.xyzw, r27.xyzw
              dp4 r24.y, r52.xyzw, r27.xyzw
              dp4 r26.z, r53.xyzw, r27.xyzw
              lt r27.x, r26.z, r24.y
              div r26.xy, r26.xyxx, r26.zzzz
              mad r26.xy, r26.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
              add r26.xy, r55.zwzz, r26.xyxx
              mul r26.xy, r55.xyxx, r26.xyxx
              div r27.yz, r24.xxxx, r54.xxzx
              add r49.xy, -r27.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
              ge r49.xy, r26.xyxx, r49.xyxx
              ge r27.yz, r27.yyzy, r26.xxyx
              or r27.yz, r27.yyzy, r49.xxyx
              or r27.y, r27.z, r27.y
              or r27.x, r27.x, r27.y
              if_z r27.x
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r27.x, r16.w, l(28), t12.xxxx
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r27.yz, r16.w, l(164), t12.xxyx
                mov_sat r26.xy, r26.xyxx
                mad r49.xy, r26.xyxx, r54.xzxx, r54.ywyy
                mul r16.w, r26.z, r27.z
                mad r24.y, r27.y, r26.z, r24.y
                div r16.w, r24.y, r16.w
                max r16.w, r16.w, l(0.00006104)
                and r24.y, r27.x, l(0x0000ffff)
                if_nz r10.w
                  utof r26.z, r24.y
                  mov r27.xy, l(0,0,0,0)
                  loop 
                    ige r27.z, r27.y, l(8)
                    breakc_nz r27.z
                    dp2 r51.x, icb[r27.y + 0].xyxx, r28.xyxx
                    dp2 r51.y, icb[r27.y + 0].yxyy, r28.xzxx
                    mad r26.xy, r51.xyxx, r24.xxxx, r49.xyxx
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r26.x, r26.xyzx, t9.xxxx, s13, r16.w
                    mad r27.x, r26.x, l(0.125000), r27.x
                    iadd r27.y, r27.y, l(1)
                  endloop 
                else 
                  utof r49.z, r24.y
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r27.x, r49.xyzx, t9.xxxx, s13, r16.w
                endif 
                mul r16.w, r27.x, r27.x
                mul r16.w, r27.x, r16.w
              else 
                mov r16.w, l(1.000000)
              endif 
              mul r62.y, r16.w, r62.y
            endif 
            mul r16.w, r62.y, r62.x
            lt r24.x, l(0.000000), r16.w
            if_nz r24.x
              mul r24.x, r2.w, r50.x
              mul r24.x, r24.x, l(0.250000)
              mad r24.y, -|r19.w|, r0.w, l(1.000000)
              mul r24.y, r24.y, r24.y
              mad r24.y, -r24.y, l(0.620000), l(0.620000)
              add r24.y, -|r19.w|, r24.y
              mad r24.y, r4.w, r24.y, |r19.w|
              lt r26.x, l(0.000000), r19.w
              mov_sat r19.w, r19.w
              mad r49.xyz, r56.xyzx, r17.wwww, r8.xyzx
              dp3 r17.w, r49.xyzx, r49.xyzx
              rsq r17.w, r17.w
              mul r49.xyz, r17.wwww, r49.xyzx
              dp3 r17.w, r6.xyzx, r49.xyzx
              dp3 r26.y, r49.xyzx, r8.xyzx
              dp3 r26.z, r49.xyzx, r5.xyzx
              dp3 r27.y, r49.xyzx, r3.yzwy
              mul r26.z, r26.z, r26.z
              div r26.z, r26.z, r9.z
              mul r27.y, r27.y, r27.y
              div r27.y, r27.y, r9.w
              add r26.z, r26.z, r27.y
              mad r17.w, |r17.w|, |r17.w|, r26.z
              mad r26.z, r19.w, r5.w, r7.z
              mul r17.w, r17.w, r17.w
              mul r17.w, r2.y, r17.w
              mul r17.w, r26.z, r17.w
              rcp r17.w, r17.w
              mul r19.w, r24.x, r19.w
              mul r17.w, r17.w, r19.w
              add_sat r19.w, -r26.y, l(1.000000)
              mul r24.x, r19.w, r19.w
              mul r24.x, r24.x, r24.x
              mul r19.w, r19.w, r24.x
              mul r19.w, r17.w, r19.w
              and r49.xyz, r24.yyyy, r26.xxxx
              movc r24.x, r26.x, l(0), r24.y
              and r50.xyz, r19.wwww, r26.xxxx
              and r17.w, r17.w, r26.x
              dp3 r19.w, r25.xywx, l(0.212600, 0.715200, 0.072200, 0.000000)
              mul r19.w, r16.w, r19.w
              lt r24.y, r14.w, r19.w
              if_nz r24.y
                mul r24.y, r21.w, r21.z
                mul r26.xyz, r43.xyzx, r24.yyyy
                mad r22.xyz, r26.xyzx, r45.xyzx, r22.xyzx
                mad r40.xyz, r26.xyzx, r48.xyzx, r40.xyzx
                mad r42.xyz, r26.xyzx, r46.xyzx, r42.xyzx
                mad r41.xyz, r26.xyzx, r47.xyzx, r41.xyzx
                mov r46.xyz, r17.wwww
                mov r14.w, r19.w
                mov r48.xyz, r24.xxxx
                mov r43.xyz, r25.xywx
                mov r44.xyz, r57.xyzx
                mov r45.xyz, r49.xyzx
                mov r47.xyz, r50.xyzx
                mov r21.zw, r62.xxxy
              else 
                mul r25.xyw, r25.xyxw, r16.wwww
                mad r22.xyz, r25.xywx, r49.zzzz, r22.xyzx
                mad r40.xyz, r25.xywx, r24.xxxx, r40.xyzx
                mad r42.xyz, r25.xywx, r17.wwww, r42.xyzx
                mad r41.xyz, r25.xywx, r50.xyzx, r41.xyzx
              endif 
            endif 
          endif 
        endif 
        break 
        default 
        break 
      endswitch 
    endif 
  endloop 
  mov r29.xyz, r22.xyzx
  mov r30.xyz, r40.xyzx
  mov r31.xyz, r41.xyzx
  mov r32.xyz, r42.xyzx
  mov r33.xyz, r43.xyzx
  mov r34.xyz, r44.xyzx
  mov r35.xyz, r45.xyzx
  mov r37.xyz, r46.xyzx
  mov r38.xyz, r47.xyzx
  mov r39.zw, r21.zzzw
  mov r39.y, r14.w
  mov r36.xyz, r48.xyzx
  iadd r2.z, r2.z, l(32)
endloop 
mov r2.z, l(0)
mul r2.xy, r34.yxyy, l(1.000000, -1.000000, 0.000000, 0.000000)
mul r3.xyz, r2.yzxy, r34.zxyz
mad r3.xyz, r34.yzxy, r2.zxyz, -r3.xyzx
mul r5.xyz, r14.yyyy, cb1[9].xywx
mad r5.xyz, r14.xxxx, cb1[8].xywx, r5.xyzx
mad r5.xyz, r14.zzzz, cb1[10].xywx, r5.xyzx
add r5.xyz, r11.yzwy, r5.xyzx
rcp r9.z, r5.z
mul r0.yw, r5.xxxy, r9.zzzz
mad r9.xy, r0.ywyy, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
mad r5.xyw, r34.xyxz, l(2.400000, 2.400000, 0.000000, 2.400000), r14.xyxz
dp2 r0.y, v0.xyxx, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r0.y, r0.y
mul r0.y, r0.y, l(52.982918)
frc r0.y, r0.y
mul r0.w, r0.y, l(3.141600)
mad r0.w, cb1[70].w, l(0.500000), r0.w
sincos r10.x, r11.x, r0.w
mul r10.xyz, r3.xyzx, r10.xxxx
mad r10.xyz, r11.xxxx, r2.xyzx, r10.xyzx
mad r10.xyz, r10.xyzx, l(0.120000, 0.120000, 0.120000, 0.000000), r5.xywx
mul r13.xyz, r10.yyyy, cb1[9].xywx
mad r10.xyw, r10.xxxx, cb1[8].xyxw, r13.xyxz
mad r10.xyz, r10.zzzz, cb1[10].xywx, r10.xywx
add r10.xyz, r11.yzwy, r10.xyzx
mul r7.zw, r10.xxxy, l(0.000000, 0.000000, 0.500000, -0.500000)
rcp r10.z, r10.z
mad r10.xy, r7.zwzz, r10.zzzz, l(0.500000, 0.500000, 0.000000, 0.000000)
mov r13.xyz, -r9.xyzx
add r10.xyz, r10.xyzx, r13.xyzx
add r0.w, r0.w, l(3.141600)
sincos r11.x, r14.x, r0.w
mul r3.xyz, r3.xyzx, r11.xxxx
mad r2.xyz, r14.xxxx, r2.xyzx, r3.xyzx
mad r2.xyz, r2.xyzx, l(0.120000, 0.120000, 0.120000, 0.000000), r5.xywx
mul r3.xyz, r2.yyyy, cb1[9].xywx
mad r2.xyw, r2.xxxx, cb1[8].xyxw, r3.xyxz
mad r2.xyz, r2.zzzz, cb1[10].xywx, r2.xywx
add r2.xyz, r11.yzwy, r2.xyzx
mul r2.xy, r2.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000)
rcp r3.z, r2.z
mad r3.xy, r2.xyxx, r3.zzzz, r13.xyxx
mov r13.w, l(0.500000)
add r2.xyz, r13.wwzw, r3.xyzx
dp2 r0.w, cb1[44].zwzz, cb1[44].zwzz
sqrt r0.w, r0.w
dp2 r1.w, r10.xyxx, r10.xyxx
sqrt r1.w, r1.w
rcp r1.w, r1.w
mul r0.w, r0.w, r1.w
mad r3.xy, r0.yyyy, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.33333334, 1.000000, 0.000000, 0.000000)
mul r3.xy, r3.xyxx, l(0.11764706, 0.11764706, 0.000000, 0.000000)
mul r3.xy, r3.xyxx, r3.xyxx
mov x1[0].x, r3.x
mad r5.xyw, r10.xyxz, r3.xxxx, r9.xyxz
lt r3.zw, r0.wwww, r3.xxxy
mul r5.xy, r5.xyxx, cb1[44].xyxx
ftoi r11.xy, r5.xyxx
mov r11.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r1.w, r11.xyzw, t0.yzwx
ge r2.w, r1.w, l(0.984375)
mul r4.w, r1.w, l(1.01587307)
mad r1.w, r1.w, l(64.000000), l(-63.000000)
movc r1.w, r2.w, r1.w, r4.w
max r1.w, r1.w, l(0.00000001)
rcp r1.w, r1.w
mov x2[0].x, r1.w
add r2.w, r1.w, l(0.042000)
mul r2.w, r2.w, r5.w
lt r2.w, l(1.000000), r2.w
and r2.w, r2.w, l(0x3f800000)
movc r2.w, r3.z, r2.w, l(1.000000)
mov x0[0].x, r2.w
mov x1[1].x, r3.y
mad r5.xyw, r2.xyxz, r3.yyyy, r9.xyxz
mul r5.xy, r5.xyxx, cb1[44].xyxx
ftoi r11.xy, r5.xyxx
mov r11.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r3.z, r11.xyzw, t0.yzxw
ge r4.w, r3.z, l(0.984375)
mul r5.x, r3.z, l(1.01587307)
mad r3.z, r3.z, l(64.000000), l(-63.000000)
movc r3.z, r4.w, r3.z, r5.x
max r3.z, r3.z, l(0.00000001)
rcp r3.z, r3.z
mov x2[1].x, r3.z
add r4.w, r3.z, l(0.042000)
mul r4.w, r4.w, r5.w
lt r4.w, l(1.000000), r4.w
and r4.w, r4.w, l(0x3f800000)
movc r3.w, r3.w, r4.w, l(1.000000)
mov x0[1].x, r3.w
add r4.w, r2.w, r3.w
ne r4.w, r4.w, l(0.000000)
if_nz r4.w
  mad r5.xy, r0.yyyy, l(0.500000, 0.500000, 0.000000, 0.000000), l(1.33333337, 2.000000, 0.000000, 0.000000)
  mul r5.xy, r5.xyxx, l(0.11764706, 0.11764706, 0.000000, 0.000000)
  mad r5.xy, r5.xyxx, r5.xyxx, -r3.xyxx
  mad r3.x, r2.w, r5.x, r3.x
  mov x1[0].x, r3.x
  mad r11.xyz, r10.xyzx, r3.xxxx, r9.xyzx
  lt r3.x, r0.w, r3.x
  mul r5.xw, r11.xxxy, cb1[44].xxxy
  ftoi r13.xy, r5.xwxx
  mov r13.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.w, r13.xyzw, t0.yzwx
  ge r5.x, r4.w, l(0.984375)
  mul r5.w, r4.w, l(1.01587307)
  mad r4.w, r4.w, l(64.000000), l(-63.000000)
  movc r4.w, r5.x, r4.w, r5.w
  max r4.w, r4.w, l(0.00000001)
  rcp r4.w, r4.w
  movc r1.w, r3.x, r4.w, r1.w
  mov x2[0].x, r1.w
  add r1.w, r4.w, l(0.042000)
  mul r1.w, r1.w, r11.z
  lt r1.w, l(1.000000), r1.w
  and r1.w, r1.w, l(0x3f800000)
  mul r1.w, r1.w, r2.w
  movc r1.w, r3.x, r1.w, r2.w
  mov x0[0].x, r1.w
  mad r2.w, r3.w, r5.y, r3.y
  mov x1[1].x, r2.w
  mad r5.xyw, r2.xyxz, r2.wwww, r9.xyxz
  lt r2.w, r0.w, r2.w
  mul r3.xy, r5.xyxx, cb1[44].xyxx
  ftoi r11.xy, r3.xyxx
  mov r11.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.x, r11.xyzw, t0.xyzw
  ge r3.y, r3.x, l(0.984375)
  mul r4.w, r3.x, l(1.01587307)
  mad r3.x, r3.x, l(64.000000), l(-63.000000)
  movc r3.x, r3.y, r3.x, r4.w
  max r3.x, r3.x, l(0.00000001)
  rcp r3.x, r3.x
  movc r3.y, r2.w, r3.x, r3.z
  mov x2[1].x, r3.y
  add r3.x, r3.x, l(0.042000)
  mul r3.x, r3.x, r5.w
  lt r3.x, l(1.000000), r3.x
  and r3.x, r3.x, l(0x3f800000)
  mul r3.x, r3.x, r3.w
  movc r2.w, r2.w, r3.x, r3.w
  mov x0[1].x, r2.w
  add r1.w, r1.w, r2.w
  eq r1.w, r1.w, l(0.000000)
else 
  mov r1.w, l(-1)
endif 
if_z r1.w
  mad r3.xy, r0.yyyy, l(0.500000, 0.500000, 0.000000, 0.000000), l(2.33333325, 3.000000, 0.000000, 0.000000)
  mul r3.xy, r3.xyxx, l(0.11764706, 0.11764706, 0.000000, 0.000000)
  mov r1.w, x1[0].x
  mov r2.w, x0[0].x
  mad r3.x, r3.x, r3.x, -r1.w
  mad r1.w, r2.w, r3.x, r1.w
  mov x1[0].x, r1.w
  mad r3.xzw, r10.xxyz, r1.wwww, r9.xxyz
  lt r1.w, r0.w, r1.w
  mul r3.xz, r3.xxzx, cb1[44].xxyx
  ftoi r11.xy, r3.xzxx
  mov r11.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.x, r11.xyzw, t0.xyzw
  ge r3.z, r3.x, l(0.984375)
  mul r4.w, r3.x, l(1.01587307)
  mad r3.x, r3.x, l(64.000000), l(-63.000000)
  movc r3.x, r3.z, r3.x, r4.w
  max r3.x, r3.x, l(0.00000001)
  rcp r3.x, r3.x
  mov r3.z, x2[0].x
  movc r3.z, r1.w, r3.x, r3.z
  mov x2[0].x, r3.z
  add r3.x, r3.x, l(0.042000)
  mul r3.x, r3.x, r3.w
  lt r3.x, l(1.000000), r3.x
  and r3.x, r3.x, l(0x3f800000)
  mul r3.x, r2.w, r3.x
  movc r1.w, r1.w, r3.x, r2.w
  mov x0[0].x, r1.w
  mov r2.w, x1[1].x
  mov r3.x, x0[1].x
  mad r3.y, r3.y, r3.y, -r2.w
  mad r2.w, r3.x, r3.y, r2.w
  mov x1[1].x, r2.w
  mad r3.yzw, r2.xxyz, r2.wwww, r9.xxyz
  lt r2.w, r0.w, r2.w
  mul r3.yz, r3.yyzy, cb1[44].xxyx
  ftoi r11.xy, r3.yzyy
  mov r11.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.y, r11.xyzw, t0.yxzw
  ge r3.z, r3.y, l(0.984375)
  mul r4.w, r3.y, l(1.01587307)
  mad r3.y, r3.y, l(64.000000), l(-63.000000)
  movc r3.y, r3.z, r3.y, r4.w
  max r3.y, r3.y, l(0.00000001)
  rcp r3.y, r3.y
  mov r3.z, x2[1].x
  movc r3.z, r2.w, r3.y, r3.z
  mov x2[1].x, r3.z
  add r3.y, r3.y, l(0.042000)
  mul r3.y, r3.y, r3.w
  lt r3.y, l(1.000000), r3.y
  and r3.y, r3.y, l(0x3f800000)
  mul r3.y, r3.y, r3.x
  movc r2.w, r2.w, r3.y, r3.x
  mov x0[1].x, r2.w
  add r1.w, r1.w, r2.w
  eq r1.w, r1.w, l(0.000000)
else 
  mov r1.w, l(-1)
endif 
if_z r1.w
  mad r3.xy, r0.yyyy, l(0.500000, 0.500000, 0.000000, 0.000000), l(3.33333325, 4.000000, 0.000000, 0.000000)
  mul r3.xy, r3.xyxx, l(0.11764706, 0.11764706, 0.000000, 0.000000)
  mov r1.w, x1[0].x
  mov r2.w, x0[0].x
  mad r3.x, r3.x, r3.x, -r1.w
  mad r1.w, r2.w, r3.x, r1.w
  mov x1[0].x, r1.w
  mad r3.xzw, r10.xxyz, r1.wwww, r9.xxyz
  lt r1.w, r0.w, r1.w
  mul r3.xz, r3.xxzx, cb1[44].xxyx
  ftoi r11.xy, r3.xzxx
  mov r11.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.x, r11.xyzw, t0.xyzw
  ge r3.z, r3.x, l(0.984375)
  mul r4.w, r3.x, l(1.01587307)
  mad r3.x, r3.x, l(64.000000), l(-63.000000)
  movc r3.x, r3.z, r3.x, r4.w
  max r3.x, r3.x, l(0.00000001)
  rcp r3.x, r3.x
  mov r3.z, x2[0].x
  movc r3.z, r1.w, r3.x, r3.z
  mov x2[0].x, r3.z
  add r3.x, r3.x, l(0.042000)
  mul r3.x, r3.x, r3.w
  lt r3.x, l(1.000000), r3.x
  and r3.x, r3.x, l(0x3f800000)
  mul r3.x, r2.w, r3.x
  movc r1.w, r1.w, r3.x, r2.w
  mov x0[0].x, r1.w
  mov r2.w, x1[1].x
  mov r3.x, x0[1].x
  mad r3.y, r3.y, r3.y, -r2.w
  mad r2.w, r3.x, r3.y, r2.w
  mov x1[1].x, r2.w
  mad r3.yzw, r2.xxyz, r2.wwww, r9.xxyz
  lt r2.w, r0.w, r2.w
  mul r3.yz, r3.yyzy, cb1[44].xxyx
  ftoi r11.xy, r3.yzyy
  mov r11.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.y, r11.xyzw, t0.yxzw
  ge r3.z, r3.y, l(0.984375)
  mul r4.w, r3.y, l(1.01587307)
  mad r3.y, r3.y, l(64.000000), l(-63.000000)
  movc r3.y, r3.z, r3.y, r4.w
  max r3.y, r3.y, l(0.00000001)
  rcp r3.y, r3.y
  mov r3.z, x2[1].x
  movc r3.z, r2.w, r3.y, r3.z
  mov x2[1].x, r3.z
  add r3.y, r3.y, l(0.042000)
  mul r3.y, r3.y, r3.w
  lt r3.y, l(1.000000), r3.y
  and r3.y, r3.y, l(0x3f800000)
  mul r3.y, r3.y, r3.x
  movc r2.w, r2.w, r3.y, r3.x
  mov x0[1].x, r2.w
  add r1.w, r1.w, r2.w
  eq r1.w, r1.w, l(0.000000)
else 
  mov r1.w, l(-1)
endif 
if_z r1.w
  mad r3.xy, r0.yyyy, l(0.500000, 0.500000, 0.000000, 0.000000), l(4.33333349, 5.000000, 0.000000, 0.000000)
  mul r3.xy, r3.xyxx, l(0.11764706, 0.11764706, 0.000000, 0.000000)
  mov r1.w, x1[0].x
  mov r2.w, x0[0].x
  mad r3.x, r3.x, r3.x, -r1.w
  mad r1.w, r2.w, r3.x, r1.w
  mov x1[0].x, r1.w
  mad r3.xzw, r10.xxyz, r1.wwww, r9.xxyz
  lt r1.w, r0.w, r1.w
  mul r3.xz, r3.xxzx, cb1[44].xxyx
  ftoi r11.xy, r3.xzxx
  mov r11.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.x, r11.xyzw, t0.xyzw
  ge r3.z, r3.x, l(0.984375)
  mul r4.w, r3.x, l(1.01587307)
  mad r3.x, r3.x, l(64.000000), l(-63.000000)
  movc r3.x, r3.z, r3.x, r4.w
  max r3.x, r3.x, l(0.00000001)
  rcp r3.x, r3.x
  mov r3.z, x2[0].x
  movc r3.z, r1.w, r3.x, r3.z
  mov x2[0].x, r3.z
  add r3.x, r3.x, l(0.042000)
  mul r3.x, r3.x, r3.w
  lt r3.x, l(1.000000), r3.x
  and r3.x, r3.x, l(0x3f800000)
  mul r3.x, r2.w, r3.x
  movc r1.w, r1.w, r3.x, r2.w
  mov x0[0].x, r1.w
  mov r2.w, x1[1].x
  mov r3.x, x0[1].x
  mad r3.y, r3.y, r3.y, -r2.w
  mad r2.w, r3.x, r3.y, r2.w
  mov x1[1].x, r2.w
  mad r3.yzw, r2.xxyz, r2.wwww, r9.xxyz
  lt r2.w, r0.w, r2.w
  mul r3.yz, r3.yyzy, cb1[44].xxyx
  ftoi r11.xy, r3.yzyy
  mov r11.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.y, r11.xyzw, t0.yxzw
  ge r3.z, r3.y, l(0.984375)
  mul r4.w, r3.y, l(1.01587307)
  mad r3.y, r3.y, l(64.000000), l(-63.000000)
  movc r3.y, r3.z, r3.y, r4.w
  max r3.y, r3.y, l(0.00000001)
  rcp r3.y, r3.y
  mov r3.z, x2[1].x
  movc r3.z, r2.w, r3.y, r3.z
  mov x2[1].x, r3.z
  add r3.y, r3.y, l(0.042000)
  mul r3.y, r3.y, r3.w
  lt r3.y, l(1.000000), r3.y
  and r3.y, r3.y, l(0x3f800000)
  mul r3.y, r3.y, r3.x
  movc r2.w, r2.w, r3.y, r3.x
  mov x0[1].x, r2.w
  add r1.w, r1.w, r2.w
  eq r1.w, r1.w, l(0.000000)
else 
  mov r1.w, l(-1)
endif 
if_z r1.w
  mad r3.xy, r0.yyyy, l(0.500000, 0.500000, 0.000000, 0.000000), l(5.33333349, 6.000000, 0.000000, 0.000000)
  mul r3.xy, r3.xyxx, l(0.11764706, 0.11764706, 0.000000, 0.000000)
  mov r1.w, x1[0].x
  mov r2.w, x0[0].x
  mad r3.x, r3.x, r3.x, -r1.w
  mad r1.w, r2.w, r3.x, r1.w
  mov x1[0].x, r1.w
  mad r3.xzw, r10.xxyz, r1.wwww, r9.xxyz
  lt r1.w, r0.w, r1.w
  mul r3.xz, r3.xxzx, cb1[44].xxyx
  ftoi r11.xy, r3.xzxx
  mov r11.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.x, r11.xyzw, t0.xyzw
  ge r3.z, r3.x, l(0.984375)
  mul r4.w, r3.x, l(1.01587307)
  mad r3.x, r3.x, l(64.000000), l(-63.000000)
  movc r3.x, r3.z, r3.x, r4.w
  max r3.x, r3.x, l(0.00000001)
  rcp r3.x, r3.x
  mov r3.z, x2[0].x
  movc r3.z, r1.w, r3.x, r3.z
  mov x2[0].x, r3.z
  add r3.x, r3.x, l(0.042000)
  mul r3.x, r3.x, r3.w
  lt r3.x, l(1.000000), r3.x
  and r3.x, r3.x, l(0x3f800000)
  mul r3.x, r2.w, r3.x
  movc r1.w, r1.w, r3.x, r2.w
  mov x0[0].x, r1.w
  mov r2.w, x1[1].x
  mov r3.x, x0[1].x
  mad r3.y, r3.y, r3.y, -r2.w
  mad r2.w, r3.x, r3.y, r2.w
  mov x1[1].x, r2.w
  mad r3.yzw, r2.xxyz, r2.wwww, r9.xxyz
  lt r2.w, r0.w, r2.w
  mul r3.yz, r3.yyzy, cb1[44].xxyx
  ftoi r11.xy, r3.yzyy
  mov r11.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.y, r11.xyzw, t0.yxzw
  ge r3.z, r3.y, l(0.984375)
  mul r4.w, r3.y, l(1.01587307)
  mad r3.y, r3.y, l(64.000000), l(-63.000000)
  movc r3.y, r3.z, r3.y, r4.w
  max r3.y, r3.y, l(0.00000001)
  rcp r3.y, r3.y
  mov r3.z, x2[1].x
  movc r3.z, r2.w, r3.y, r3.z
  mov x2[1].x, r3.z
  add r3.y, r3.y, l(0.042000)
  mul r3.y, r3.y, r3.w
  lt r3.y, l(1.000000), r3.y
  and r3.y, r3.y, l(0x3f800000)
  mul r3.y, r3.y, r3.x
  movc r2.w, r2.w, r3.y, r3.x
  mov x0[1].x, r2.w
  add r1.w, r1.w, r2.w
  eq r1.w, r1.w, l(0.000000)
else 
  mov r1.w, l(-1)
endif 
if_z r1.w
  mad r3.xy, r0.yyyy, l(0.500000, 0.500000, 0.000000, 0.000000), l(6.33333349, 7.000000, 0.000000, 0.000000)
  mul r3.xy, r3.xyxx, l(0.11764706, 0.11764706, 0.000000, 0.000000)
  mov r1.w, x1[0].x
  mov r2.w, x0[0].x
  mad r3.x, r3.x, r3.x, -r1.w
  mad r1.w, r2.w, r3.x, r1.w
  mov x1[0].x, r1.w
  mad r3.xzw, r10.xxyz, r1.wwww, r9.xxyz
  lt r1.w, r0.w, r1.w
  mul r3.xz, r3.xxzx, cb1[44].xxyx
  ftoi r11.xy, r3.xzxx
  mov r11.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.x, r11.xyzw, t0.xyzw
  ge r3.z, r3.x, l(0.984375)
  mul r4.w, r3.x, l(1.01587307)
  mad r3.x, r3.x, l(64.000000), l(-63.000000)
  movc r3.x, r3.z, r3.x, r4.w
  max r3.x, r3.x, l(0.00000001)
  rcp r3.x, r3.x
  mov r3.z, x2[0].x
  movc r3.z, r1.w, r3.x, r3.z
  mov x2[0].x, r3.z
  add r3.x, r3.x, l(0.042000)
  mul r3.x, r3.x, r3.w
  lt r3.x, l(1.000000), r3.x
  and r3.x, r3.x, l(0x3f800000)
  mul r3.x, r2.w, r3.x
  movc r1.w, r1.w, r3.x, r2.w
  mov x0[0].x, r1.w
  mov r2.w, x1[1].x
  mov r3.x, x0[1].x
  mad r3.y, r3.y, r3.y, -r2.w
  mad r2.w, r3.x, r3.y, r2.w
  mov x1[1].x, r2.w
  mad r3.yzw, r2.xxyz, r2.wwww, r9.xxyz
  lt r2.w, r0.w, r2.w
  mul r3.yz, r3.yyzy, cb1[44].xxyx
  ftoi r11.xy, r3.yzyy
  mov r11.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.y, r11.xyzw, t0.yxzw
  ge r3.z, r3.y, l(0.984375)
  mul r4.w, r3.y, l(1.01587307)
  mad r3.y, r3.y, l(64.000000), l(-63.000000)
  movc r3.y, r3.z, r3.y, r4.w
  max r3.y, r3.y, l(0.00000001)
  rcp r3.y, r3.y
  mov r3.z, x2[1].x
  movc r3.z, r2.w, r3.y, r3.z
  mov x2[1].x, r3.z
  add r3.y, r3.y, l(0.042000)
  mul r3.y, r3.y, r3.w
  lt r3.y, l(1.000000), r3.y
  and r3.y, r3.y, l(0x3f800000)
  mul r3.y, r3.y, r3.x
  movc r2.w, r2.w, r3.y, r3.x
  mov x0[1].x, r2.w
  add r1.w, r1.w, r2.w
  eq r1.w, r1.w, l(0.000000)
else 
  mov r1.w, l(-1)
endif 
if_z r1.w
  mad r3.xy, r0.yyyy, l(0.500000, 0.500000, 0.000000, 0.000000), l(7.33333349, 8.000000, 0.000000, 0.000000)
  mul r3.xy, r3.xyxx, l(0.11764706, 0.11764706, 0.000000, 0.000000)
  mov r0.y, x1[0].x
  mov r1.w, x0[0].x
  mad r2.w, r3.x, r3.x, -r0.y
  mad r0.y, r1.w, r2.w, r0.y
  mad r3.xzw, r10.xxyz, r0.yyyy, r9.xxyz
  lt r0.y, r0.w, r0.y
  mul r3.xz, r3.xxzx, cb1[44].xxyx
  ftoi r10.xy, r3.xzxx
  mov r10.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r2.w, r10.xyzw, t0.yzwx
  ge r3.x, r2.w, l(0.984375)
  mul r3.z, r2.w, l(1.01587307)
  mad r2.w, r2.w, l(64.000000), l(-63.000000)
  movc r2.w, r3.x, r2.w, r3.z
  max r2.w, r2.w, l(0.00000001)
  rcp r2.w, r2.w
  mov r3.x, x2[0].x
  movc r3.x, r0.y, r2.w, r3.x
  mov x2[0].x, r3.x
  add r2.w, r2.w, l(0.042000)
  mul r2.w, r2.w, r3.w
  lt r2.w, l(1.000000), r2.w
  and r2.w, r2.w, l(0x3f800000)
  mul r2.w, r1.w, r2.w
  movc r0.y, r0.y, r2.w, r1.w
  mov x0[0].x, r0.y
  mov r0.y, x1[1].x
  mov r1.w, x0[1].x
  mad r2.w, r3.y, r3.y, -r0.y
  mad r0.y, r1.w, r2.w, r0.y
  mad r2.xyz, r2.xyzx, r0.yyyy, r9.xyzx
  lt r0.y, r0.w, r0.y
  mul r2.xy, r2.xyxx, cb1[44].xyxx
  ftoi r3.xy, r2.xyxx
  mov r3.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r0.w, r3.xyzw, t0.yzwx
  ge r2.x, r0.w, l(0.984375)
  mul r2.y, r0.w, l(1.01587307)
  mad r0.w, r0.w, l(64.000000), l(-63.000000)
  movc r0.w, r2.x, r0.w, r2.y
  max r0.w, r0.w, l(0.00000001)
  rcp r0.w, r0.w
  mov r2.x, x2[1].x
  movc r2.x, r0.y, r0.w, r2.x
  mov x2[1].x, r2.x
  add r0.w, r0.w, l(0.042000)
  mul r0.w, r0.w, r2.z
  lt r0.w, l(1.000000), r0.w
  and r0.w, r0.w, l(0x3f800000)
  mul r0.w, r0.w, r1.w
  movc r0.y, r0.y, r0.w, r1.w
  mov x0[1].x, r0.y
endif 
mov r0.y, x2[0].x
add r0.y, -r5.z, r0.y
lt r0.y, l(2.400000), |r0.y|
mov r0.w, x0[0].x
mad r0.w, -r0.w, l(0.500000), l(1.000000)
movc r0.y, r0.y, l(0.500000), r0.w
mov r0.w, x2[1].x
add r0.w, -r5.z, r0.w
lt r0.w, l(2.400000), |r0.w|
mov r1.w, x0[1].x
mul r1.w, r1.w, l(0.500000)
movc r0.w, r0.w, l(-0.500000), -r1.w
add r0.y, r0.w, r0.y
add_sat r0.y, -r0.y, l(1.000000)
mad r0.w, r0.y, l(-2.000000), l(3.000000)
mul r0.y, r0.y, r0.y
mul r0.y, r0.y, r0.w
min r0.y, r0.y, r39.w
mul r0.y, r0.y, r39.z
mul r2.xyz, r33.xyzx, r0.yyyy
mad r3.xyz, r2.xyzx, r35.xyzx, r29.xyzx
mad r5.xyz, r2.xyzx, r36.xyzx, r30.xyzx
mad r9.xyz, r2.xyzx, r37.xyzx, r32.xyzx
mad r2.xyz, r2.xyzx, r38.xyzx, r31.xyzx
mad r0.y, -cb1[62].w, r0.z, l(1.000000)
mul r0.z, r0.y, l(5.000000)
mad r0.w, r0.y, l(5.000000), l(-2.500000)
mul_sat r0.w, r0.w, l(0.400000)
mul r0.w, r0.w, l(100.000000)
mad r7.zw, -r0.yyyy, l(0.000000, 0.000000, 10.000000, 5.000000), l(0.000000, 0.000000, 6.857410, 7.085000)
exp r1.w, r7.z
mul r1.w, r1.w, r7.x
mul r1.w, r1.w, l(9.136810)
mul r2.w, r0.y, r0.z
mad r2.w, -r2.w, l(2.015905), r7.w
exp r2.w, r2.w
mul r2.w, r2.w, r7.x
mul r2.w, r2.w, l(9.708090)
max r1.w, r1.w, r2.w
max r1.w, r1.w, l(1.268160)
mov r10.xy, l(0,0,0,0)
mov r11.w, l(0)
mov r13.yz, l(0,0,1.000000,0)
mov r14.xy, l(0,0,0,0)
mov r15.xy, l(0,0,0,0)
mov r16.xy, l(0,0,0,0)
mov r17.x, l(1.000000)
mov r18.xyzw, l(0,0,0,0)
mov r20.yzw, l(0,0,0,0)
mov r2.w, l(0)
mov r3.w, l(0)
loop 
  uge r4.w, r3.w, cb2[0].y
  breakc_nz r4.w
  ushr r10.z, r3.w, l(5)
  iadd r11.xyz, r10.xyzx, r19.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r4.w, r11.xyzw, t7.yzwx
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r21.xyzw, r3.w, l(0), t15.wxyz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r22.xyzw, r3.w, l(16), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r23.xyzw, r3.w, l(32), t15.yxwz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r3.w, l(48), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r3.w, l(64), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r3.w, l(80), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r7.zw, r3.w, l(96), t15.xxxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r3.w, l(116), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r3.w, l(132), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r3.w, l(148), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r3.w, l(164), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r3.w, l(180), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r3.w, l(196), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xy, r3.w, l(212), t15.xyxx
  add r11.xyz, -r21.yzwy, v6.xyzx
  dp3 r5.w, r11.xyzx, r11.xyzx
  sqrt r5.w, r5.w
  ge r5.w, cb2[54].y, r5.w
  and r8.w, r27.y, l(0x0000ffff)
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r8.w, l(0), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r8.w, l(16), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r8.w, l(32), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r8.w, l(48), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r38.xyzw, r8.w, l(64), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r39.xyzw, r8.w, l(80), t16.xyzw
  dp3 r9.w, r34.xyzx, r11.xyzx
  add_sat r9.w, r34.w, r9.w
  dp3 r10.z, r35.xyzx, r11.xyzx
  add_sat r10.z, r35.w, r10.z
  mul r9.w, r9.w, r10.z
  dp3 r10.z, r36.xyzx, r11.xyzx
  add_sat r10.z, r36.w, r10.z
  mul r9.w, r9.w, r10.z
  dp3 r10.z, r37.xyzx, r11.xyzx
  add_sat r10.z, r37.w, r10.z
  mul r9.w, r9.w, r10.z
  dp3 r10.z, r38.xyzx, r11.xyzx
  add_sat r10.z, r38.w, r10.z
  mul r9.w, r9.w, r10.z
  dp3 r10.z, r39.xyzx, r11.xyzx
  add_sat r10.z, r39.w, r10.z
  mul r13.x, r9.w, r10.z
  and r9.w, r7.z, l(1)
  movc r10.zw, r9.wwww, r13.xxxy, r13.zzzx
  mov r34.xy, r27.zwzz
  mov r34.z, r28.z
  dp3 r9.w, r12.xyzx, r34.xyzx
  dp3 r13.x, r11.xyzx, r34.xyzx
  add r13.x, -r28.w, r13.x
  ge r13.w, r13.x, l(0.000000)
  max r13.x, r0.w, |r13.x|
  movc r13.x, r13.w, r13.x, -r13.x
  max r9.w, -r9.w, l(0.00000010)
  div r9.w, r13.x, r9.w
  min r9.w, |r9.w|, l(131072.000000)
  mov r28.z, r29.z
  dp3 r13.x, r12.xyzx, r28.xyzx
  dp3 r13.w, r11.xyzx, r28.xyzx
  add r13.w, -r29.w, r13.w
  ge r14.w, r13.w, l(0.000000)
  max r13.w, r0.w, |r13.w|
  movc r13.w, r14.w, r13.w, -r13.w
  max r13.x, -r13.x, l(0.00000010)
  div r13.x, r13.w, r13.x
  min r9.w, r9.w, |r13.x|
  mov r29.z, r30.z
  dp3 r13.x, r12.xyzx, r29.xyzx
  dp3 r13.w, r11.xyzx, r29.xyzx
  add r13.w, -r30.w, r13.w
  ge r14.w, r13.w, l(0.000000)
  max r13.w, r0.w, |r13.w|
  movc r13.w, r14.w, r13.w, -r13.w
  max r13.x, -r13.x, l(0.00000010)
  div r13.x, r13.w, r13.x
  min r9.w, r9.w, |r13.x|
  mov r30.z, r31.z
  dp3 r13.x, r12.xyzx, r30.xyzx
  dp3 r13.w, r11.xyzx, r30.xyzx
  add r13.w, -r31.w, r13.w
  ge r14.w, r13.w, l(0.000000)
  max r13.w, r0.w, |r13.w|
  movc r13.w, r14.w, r13.w, -r13.w
  max r13.x, -r13.x, l(0.00000010)
  div r13.x, r13.w, r13.x
  min r9.w, r9.w, |r13.x|
  mov r31.z, r32.x
  dp3 r13.x, r12.xyzx, r31.xyzx
  dp3 r13.w, r11.xyzx, r31.xyzx
  add r13.w, -r32.y, r13.w
  ge r14.w, r13.w, l(0.000000)
  max r13.w, r0.w, |r13.w|
  movc r13.w, r14.w, r13.w, -r13.w
  max r13.x, -r13.x, l(0.00000010)
  div r13.x, r13.w, r13.x
  min r9.w, r9.w, |r13.x|
  mov r33.zw, r32.zzzw
  dp3 r13.x, r12.zxyz, r33.xzwx
  dp3 r13.w, r11.zxyz, r33.xzwx
  add r13.w, -r33.y, r13.w
  ge r14.w, r13.w, l(0.000000)
  max r13.w, r0.w, |r13.w|
  movc r13.w, r14.w, r13.w, -r13.w
  max r13.x, -r13.x, l(0.00000010)
  div r13.x, r13.w, r13.x
  min r9.w, r9.w, |r13.x|
  mov r28.x, r24.w
  mov r28.yz, r25.zzwz
  add r28.xyz, r11.xyzx, r28.xyzx
  mad r28.xyz, r12.xyzx, r9.wwww, r28.xyzx
  dp3 r13.x, r28.xyzx, r28.xyzx
  sqrt r13.x, r13.x
  div r9.w, r9.w, r13.x
  add r9.w, r9.w, r9.w
  sqrt r9.w, r9.w
  mad r9.w, r0.y, l(5.000000), r9.w
  add r9.w, r9.w, l(-0.844800)
  mov r21.y, r22.z
  mov r21.z, r23.x
  dp3 r29.x, r28.xyzx, r21.xyzx
  mov r30.xy, r22.xwxx
  mov r30.z, r23.w
  dp3 r29.y, r28.xyzx, r30.xyzx
  mov r23.x, r22.y
  dp3 r29.z, r28.xyzx, r23.xyzx
  ubfe r13.xw, l(6, 0, 0, 9), l(25, 0, 0, 16), r27.yyyy
  utof r29.w, r13.w
  sample_l_indexable(texturecubearray)(float,float,float,float) r22.xyz, r29.xyzw, t8.xyzw, s2, r9.w
  and r27.yzw, r22.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
  ieq r27.yzw, r27.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
  or r9.w, r27.z, r27.y
  or r9.w, r27.w, r9.w
  movc r22.xyz, r9.wwww, l(1.000000,1.000000,0,0), r22.xyzx
  dp3 r28.x, r11.xyzx, r21.xyzx
  dp3 r28.y, r11.xyzx, r30.xyzx
  dp3 r28.z, r11.xyzx, r23.xyzx
  mad_sat r24.xyz, r28.xyzx, r24.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mov r25.z, r26.x
  mad r24.xyz, r24.xyzx, r25.xyzx, r26.yzwy
  dp3 r29.x, r6.xyzx, r21.xyzx
  dp3 r29.y, r6.xyzx, r30.xyzx
  dp3 r29.z, r6.xyzx, r23.xyzx
  lt r21.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r29.xyzx
  movc r14.z, r21.x, l(0), l(0.500000)
  add r23.xyz, r14.xyzx, r24.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r23.xyz, r23.xyzx, t17.xyzw, s4, l(0.000000)
  movc r15.z, r21.y, l(0), l(0.500000)
  add r21.xyw, r15.xyxz, r24.xyxz
  sample_l_indexable(texture3d)(float,float,float,float) r21.xyw, r21.xywx, t18.xywz, s4, l(0.000000)
  movc r16.z, r21.z, l(0), l(0.500000)
  add r24.xyz, r16.xyzx, r24.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r24.xyz, r24.xyzx, t19.xyzw, s4, l(0.000000)
  mul r25.xyz, r29.xyzx, r29.xyzx
  sample_l_indexable(texturecubearray)(float,float,float,float) r26.xyz, r29.xyzw, t8.xyzw, s2, l(6.000000)
  and r27.yzw, r26.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
  ieq r27.yzw, r27.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
  or r9.w, r27.z, r27.y
  or r9.w, r27.w, r9.w
  movc r26.xyz, r9.wwww, l(1.000000,1.000000,0,0), r26.xyzx
  mov r28.xyzw, r18.xyzw
  mov r27.yzw, r20.yyzw
  mov r9.w, r2.w
  mov r13.w, r4.w
  loop 
    breakc_z r13.w
    firstbit_lo r14.z, r13.w
    ishl r14.z, l(1), r14.z
    and r14.w, r13.w, r14.z
    if_nz r14.w
      not r14.z, r14.z
      and r13.w, r13.w, r14.z
      if_nz r5.w
        mov r14.z, r7.z
        mov r29.xy, r10.zwzz
        mov r14.w, l(1)
        loop 
          ige r15.z, r14.w, r13.x
          breakc_nz r15.z
          iadd r15.z, r8.w, r14.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r15.z, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r15.z, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r15.z, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r15.z, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r15.z, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r15.z, l(80), t16.xyzw
          dp3 r15.z, r30.xyzx, r11.xyzx
          add_sat r15.z, r30.w, r15.z
          mul r15.z, r15.z, r29.x
          dp3 r15.w, r31.xyzx, r11.xyzx
          add_sat r15.w, r31.w, r15.w
          mul r15.z, r15.w, r15.z
          dp3 r15.w, r32.xyzx, r11.xyzx
          add_sat r15.w, r32.w, r15.w
          mul r15.z, r15.w, r15.z
          dp3 r15.w, r33.xyzx, r11.xyzx
          add_sat r15.w, r33.w, r15.w
          mul r15.z, r15.w, r15.z
          dp3 r15.w, r34.xyzx, r11.xyzx
          add_sat r15.w, r34.w, r15.w
          mul r15.z, r15.w, r15.z
          dp3 r15.w, r35.xyzx, r11.xyzx
          add_sat r15.w, r35.w, r15.w
          mul r29.x, r15.w, r15.z
          ushr r16.z, r14.z, l(2)
          ubfe r16.w, l(1), l(2), r14.z
          and r17.z, r16.z, l(2)
          max r17.w, r29.x, r29.y
          mad r15.z, -r15.z, r15.w, l(1.000000)
          mul r15.z, r15.z, r29.y
          movc r17.y, r17.z, r15.z, r17.w
          movc r29.xy, r16.wwww, r29.xyxx, r17.xyxx
          iadd r14.w, r14.w, l(1)
          mov r14.z, r16.z
        endloop 
        mov_sat r29.y, r29.y
        mul r14.z, r7.w, r29.y
        lt r14.w, l(0.000000), r14.z
        if_nz r14.w
          mad r30.z, r29.y, r7.w, r27.w
          mul r14.z, r27.x, r14.z
          mul r17.yzw, r14.zzzz, r25.xxyz
          mul r29.xzw, r17.zzzz, r21.xxyw
          mad r29.xzw, r23.xxyz, r17.yyyy, r29.xxzw
          mad r17.yzw, r24.xxyz, r17.wwww, r29.xxzw
          mul r29.xzw, r26.xxyz, r17.yyzw
          dp3 r14.w, r29.xzwx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r31.xyz, r17.yzwy, r26.xyzx, r28.xyzx
          mul r15.z, r1.w, r14.w
          mul r17.yzw, r14.zzzz, r22.xxyz
          dp3 r14.z, r17.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r14.z, r1.w, r14.w, r14.z
          div r14.z, r15.z, r14.z
          mov r32.x, r28.w
          mov r32.yz, r27.yyzy
          mad r30.xyw, r17.zwzy, r14.zzzz, r32.yzyx
          mov r31.w, r30.w
        else 
          mov r31.xyzw, r28.xyzw
          mov r30.xyz, r27.yzwy
        endif 
        mov r9.w, l(-1)
        mov r28.xyzw, r31.xyzw
        mov r27.yzw, r30.xxyz
        break 
      endif 
    endif 
  endloop 
  if_nz r9.w
    mov r18.xyzw, r28.xyzw
    mov r20.yzw, r27.yyzw
    mov r2.w, l(-1)
    break 
  endif 
  iadd r3.w, r3.w, l(32)
  mov r18.xyzw, r28.xyzw
  mov r20.yzw, r27.yyzw
  mov r2.w, r9.w
endloop 
if_z r2.w
  iadd r2.w, cb2[0].y, -cb2[58].x
  and r3.w, r2.w, l(-32)
  iadd r4.w, r2.w, -r3.w
  and r5.w, cb2[0].y, l(-32)
  iadd r7.z, -r5.w, cb2[0].y
  mov r10.xy, l(0,0,0,0)
  mov r11.w, l(0)
  mov r13.yz, l(0,0,1.000000,0)
  mov r14.xy, l(0,0,0,0)
  mov r15.x, l(1.000000)
  mov r16.xy, l(0,0,0,0)
  mov r17.xy, l(0,0,0,0)
  mov r21.xyzw, r18.xyzw
  mov r22.yzw, r20.yyzw
  mov r7.w, r3.w
  loop 
    uge r8.w, r7.w, cb2[0].y
    breakc_nz r8.w
    ushr r10.z, r7.w, l(5)
    iadd r11.xyz, r10.xyzx, r19.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r8.w, r11.xyzw, t7.yzwx
    ieq r9.w, r3.w, r7.w
    bfi r10.z, r4.w, l(0), l(0), r8.w
    movc r8.w, r9.w, r10.z, r8.w
    ieq r9.w, r5.w, r7.w
    ubfe r10.z, r7.z, l(0), r8.w
    movc r8.w, r9.w, r10.z, r8.w
    iadd r9.w, r7.w, cb2[0].x
    mov r23.xyzw, r21.xyzw
    mov r24.xyz, r22.yzwy
    mov r10.z, r8.w
    loop 
      breakc_z r10.z
      firstbit_lo r10.w, r10.z
      ishl r11.x, l(1), r10.w
      and r11.y, r10.z, r11.x
      if_nz r11.y
        xor r10.z, r10.z, r11.x
        iadd r11.x, r9.w, r10.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r25.xyzw, r11.x, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r11.xy, r11.x, l(16), t11.xyxx
        add r25.xyz, r25.xyzx, -v6.xyzx
        mov r11.z, r25.w
        lt r11.xyz, |r25.xyzx|, r11.zxyz
        and r11.x, r11.y, r11.x
        and r11.x, r11.z, r11.x
        if_nz r11.x
          iadd r10.w, r7.w, r10.w
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r10.w, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r11.xy, r10.w, l(96), t15.xyxx
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r10.w, l(116), t15.zwxy
          add r27.xyz, -r25.yzwy, v6.xyzx
          and r11.z, r26.w, l(0x0000ffff)
          ubfe r13.w, l(6), l(25), r26.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r11.z, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r11.z, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r11.z, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r11.z, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r11.z, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r11.z, l(80), t16.xyzw
          dp3 r14.w, r28.xyzx, r27.xyzx
          add_sat r14.w, r28.w, r14.w
          dp3 r15.z, r29.xyzx, r27.xyzx
          add_sat r15.z, r29.w, r15.z
          mul r14.w, r14.w, r15.z
          dp3 r15.z, r30.xyzx, r27.xyzx
          add_sat r15.z, r30.w, r15.z
          mul r14.w, r14.w, r15.z
          dp3 r15.z, r31.xyzx, r27.xyzx
          add_sat r15.z, r31.w, r15.z
          mul r14.w, r14.w, r15.z
          dp3 r15.z, r32.xyzx, r27.xyzx
          add_sat r15.z, r32.w, r15.z
          mul r14.w, r14.w, r15.z
          dp3 r15.z, r33.xyzx, r27.xyzx
          add_sat r15.z, r33.w, r15.z
          mul r13.x, r14.w, r15.z
          and r14.w, r11.x, l(1)
          movc r15.zw, r14.wwww, r13.xxxy, r13.zzzx
          mov r13.x, r11.x
          mov r28.xy, r15.zwzz
          mov r14.w, l(1)
          loop 
            ige r16.w, r14.w, r13.w
            breakc_nz r16.w
            iadd r16.w, r11.z, r14.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r16.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r16.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r16.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r16.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r16.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r16.w, l(80), t16.xyzw
            dp3 r16.w, r29.xyzx, r27.xyzx
            add_sat r16.w, r29.w, r16.w
            mul r16.w, r16.w, r28.x
            dp3 r17.w, r30.xyzx, r27.xyzx
            add_sat r17.w, r30.w, r17.w
            mul r16.w, r16.w, r17.w
            dp3 r17.w, r31.xyzx, r27.xyzx
            add_sat r17.w, r31.w, r17.w
            mul r16.w, r16.w, r17.w
            dp3 r17.w, r32.xyzx, r27.xyzx
            add_sat r17.w, r32.w, r17.w
            mul r16.w, r16.w, r17.w
            dp3 r17.w, r33.xyzx, r27.xyzx
            add_sat r17.w, r33.w, r17.w
            mul r16.w, r16.w, r17.w
            dp3 r17.w, r34.xyzx, r27.xyzx
            add_sat r17.w, r34.w, r17.w
            mul r28.x, r16.w, r17.w
            ushr r19.w, r13.x, l(2)
            ubfe r25.w, l(1), l(2), r13.x
            and r27.w, r19.w, l(2)
            max r28.z, r28.x, r28.y
            mad r16.w, -r16.w, r17.w, l(1.000000)
            mul r16.w, r16.w, r28.y
            movc r15.y, r27.w, r16.w, r28.z
            movc r28.xy, r25.wwww, r28.xyxx, r15.xyxx
            iadd r14.w, r14.w, l(1)
            mov r13.x, r19.w
          endloop 
          mov_sat r28.y, r28.y
          mul r11.x, r11.y, r28.y
          lt r11.z, l(0.000000), r11.x
          if_nz r11.z
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r10.w, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r10.w, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r10.w, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r10.w, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r10.w, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r10.w, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r10.w, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r10.w, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r10.w, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r10.w, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xy, r10.w, l(212), t15.xyxx
            mad r24.z, r28.y, r11.y, r24.z
            mul r10.w, r26.z, r11.x
            mov r26.z, r34.z
            dp3 r11.x, r12.xyzx, r26.xyzx
            dp3 r11.y, r27.xyzx, r26.xyzx
            add r11.y, -r34.w, r11.y
            ge r11.z, r11.y, l(0.000000)
            max r11.y, r0.w, |r11.y|
            movc r11.y, r11.z, r11.y, -r11.y
            max r11.x, -r11.x, l(0.00000010)
            div r11.x, r11.y, r11.x
            min r11.x, |r11.x|, l(131072.000000)
            mov r34.z, r35.z
            dp3 r11.y, r12.xyzx, r34.xyzx
            dp3 r11.z, r27.xyzx, r34.xyzx
            add r11.z, -r35.w, r11.z
            ge r13.x, r11.z, l(0.000000)
            max r11.z, r0.w, |r11.z|
            movc r11.z, r13.x, r11.z, -r11.z
            max r11.y, -r11.y, l(0.00000010)
            div r11.y, r11.z, r11.y
            min r11.x, |r11.y|, r11.x
            mov r35.z, r36.z
            dp3 r11.y, r12.xyzx, r35.xyzx
            dp3 r11.z, r27.xyzx, r35.xyzx
            add r11.z, -r36.w, r11.z
            ge r13.x, r11.z, l(0.000000)
            max r11.z, r0.w, |r11.z|
            movc r11.z, r13.x, r11.z, -r11.z
            max r11.y, -r11.y, l(0.00000010)
            div r11.y, r11.z, r11.y
            min r11.x, |r11.y|, r11.x
            mov r36.z, r37.z
            dp3 r11.y, r12.xyzx, r36.xyzx
            dp3 r11.z, r27.xyzx, r36.xyzx
            add r11.z, -r37.w, r11.z
            ge r13.x, r11.z, l(0.000000)
            max r11.z, r0.w, |r11.z|
            movc r11.z, r13.x, r11.z, -r11.z
            max r11.y, -r11.y, l(0.00000010)
            div r11.y, r11.z, r11.y
            min r11.x, |r11.y|, r11.x
            mov r37.z, r38.x
            dp3 r11.y, r12.xyzx, r37.xyzx
            dp3 r11.z, r27.xyzx, r37.xyzx
            add r11.z, -r38.y, r11.z
            ge r13.x, r11.z, l(0.000000)
            max r11.z, r0.w, |r11.z|
            movc r11.z, r13.x, r11.z, -r11.z
            max r11.y, -r11.y, l(0.00000010)
            div r11.y, r11.z, r11.y
            min r11.x, |r11.y|, r11.x
            mov r39.zw, r38.zzzw
            dp3 r11.y, r12.zxyz, r39.xzwx
            dp3 r11.z, r27.zxyz, r39.xzwx
            add r11.z, -r39.y, r11.z
            ge r13.x, r11.z, l(0.000000)
            max r11.z, r0.w, |r11.z|
            movc r11.z, r13.x, r11.z, -r11.z
            max r11.y, -r11.y, l(0.00000010)
            div r11.y, r11.z, r11.y
            min r11.x, |r11.y|, r11.x
            mov r26.x, r31.w
            mov r26.yz, r32.zzwz
            add r15.yzw, r27.xxyz, r26.xxyz
            mad r15.yzw, r12.xxyz, r11.xxxx, r15.yyzw
            dp3 r11.y, r15.yzwy, r15.yzwy
            sqrt r11.y, r11.y
            div r11.x, r11.x, r11.y
            add r11.x, r11.x, r11.x
            sqrt r11.x, r11.x
            mad r11.x, r0.y, l(5.000000), r11.x
            add r11.x, r11.x, l(-0.844800)
            mov r25.y, r29.z
            mov r25.z, r30.x
            dp3 r34.x, r15.yzwy, r25.xyzx
            mov r26.xy, r29.xwxx
            mov r26.z, r30.w
            dp3 r34.y, r15.yzwy, r26.xyzx
            mov r30.x, r29.y
            dp3 r34.z, r15.yzwy, r30.xyzx
            ubfe r11.y, l(9), l(16), r26.w
            utof r34.w, r11.y
            sample_l_indexable(texturecubearray)(float,float,float,float) r11.xyz, r34.xyzw, t8.xyzw, s2, r11.x
            and r15.yzw, r11.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
            ieq r15.yzw, r15.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
            or r13.x, r15.z, r15.y
            or r13.x, r15.w, r13.x
            movc r11.xyz, r13.xxxx, l(1.000000,1.000000,0,0), r11.xyzx
            dp3 r29.x, r27.xyzx, r25.xyzx
            dp3 r29.y, r27.xyzx, r26.xyzx
            dp3 r29.z, r27.xyzx, r30.xyzx
            mad_sat r15.yzw, r29.xxyz, r31.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
            mov r32.z, r33.x
            mad r15.yzw, r15.yyzw, r32.xxyz, r33.yyzw
            dp3 r34.x, r6.xyzx, r25.xyzx
            dp3 r34.y, r6.xyzx, r26.xyzx
            dp3 r34.z, r6.xyzx, r30.xyzx
            lt r25.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r34.xyzx
            movc r14.z, r25.x, l(0), l(0.500000)
            add r26.xyz, r14.xyzx, r15.yzwy
            sample_l_indexable(texture3d)(float,float,float,float) r26.xyz, r26.xyzx, t17.xyzw, s4, l(0.000000)
            mul r27.xyz, r34.xyzx, r34.xyzx
            mul r27.xyz, r10.wwww, r27.xyzx
            movc r16.z, r25.y, l(0), l(0.500000)
            add r25.xyw, r15.yzyw, r16.xyxz
            sample_l_indexable(texture3d)(float,float,float,float) r25.xyw, r25.xywx, t18.xywz, s4, l(0.000000)
            mul r25.xyw, r27.yyyy, r25.xyxw
            mad r25.xyw, r26.xyxz, r27.xxxx, r25.xyxw
            movc r17.z, r25.z, l(0), l(0.500000)
            add r15.yzw, r15.yyzw, r17.xxyz
            sample_l_indexable(texture3d)(float,float,float,float) r15.yzw, r15.yzwy, t19.wxyz, s4, l(0.000000)
            mad r15.yzw, r15.yyzw, r27.zzzz, r25.xxyw
            sample_l_indexable(texturecubearray)(float,float,float,float) r25.xyz, r34.xyzw, t8.xyzw, s2, l(6.000000)
            and r26.xyz, r25.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
            ieq r26.xyz, r26.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
            or r13.x, r26.y, r26.x
            or r13.x, r26.z, r13.x
            movc r25.xyz, r13.xxxx, l(1.000000,1.000000,0,0), r25.xyzx
            mul r26.xyz, r15.yzwy, r25.xyzx
            dp3 r13.x, r26.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r23.xyz, r15.yzwy, r25.xyzx, r23.xyzx
            mul r13.w, r1.w, r13.x
            mul r11.xyz, r10.wwww, r11.xyzx
            dp3 r10.w, r11.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r10.w, r1.w, r13.x, r10.w
            div r10.w, r13.w, r10.w
            mov r25.x, r23.w
            mov r25.yz, r24.xxyx
            mad r24.xyw, r11.yzyx, r10.wwww, r25.yzyx
            mov r23.w, r24.w
          endif 
        endif 
      endif 
    endloop 
    mov r21.xyzw, r23.xyzw
    mov r22.yzw, r24.xxyz
    iadd r7.w, r7.w, l(32)
  endloop 
  lt r5.w, r22.w, l(1.000000)
  if_nz r5.w
    mov r10.xy, l(0,0,0,0)
    mov r11.w, l(0)
    mov r13.yz, l(0,0,1.000000,0)
    mov r14.xy, l(0,0,0,0)
    mov r15.x, l(1.000000)
    mov r16.xy, l(0,0,0,0)
    mov r17.xy, l(0,0,0,0)
    mov r23.x, r21.w
    mov r23.yzw, r22.yyzw
    mov r24.xyz, r21.xyzx
    mov r5.w, r22.w
    mov r7.z, l(0)
    loop 
      uge r7.w, r7.z, r2.w
      breakc_nz r7.w
      ushr r10.z, r7.z, l(5)
      iadd r11.xyz, r10.xyzx, r19.xyzx
      ld_indexable(texture2darray)(uint,uint,uint,uint) r7.w, r11.xyzw, t7.yzwx
      ieq r8.w, r3.w, r7.z
      ubfe r9.w, r4.w, l(0), r7.w
      movc r7.w, r8.w, r9.w, r7.w
      iadd r8.w, r7.z, cb2[0].x
      mov r25.xyzw, r23.xyzw
      mov r11.xyz, r24.xyzx
      mov r9.w, r5.w
      mov r10.z, r7.w
      loop 
        breakc_z r10.z
        firstbit_lo r10.w, r10.z
        ishl r13.w, l(1), r10.w
        and r14.w, r10.z, r13.w
        if_nz r14.w
          xor r10.z, r10.z, r13.w
          iadd r13.w, r8.w, r10.w
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r26.xyzw, r13.w, l(0), t11.xyzw
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r27.xy, r13.w, l(16), t11.xyxx
          add r26.xyz, r26.xyzx, -v6.xyzx
          mov r27.z, r26.w
          lt r26.xyz, |r26.xyzx|, r27.zxyz
          and r13.w, r26.y, r26.x
          and r13.w, r26.z, r13.w
          if_nz r13.w
            iadd r10.w, r7.z, r10.w
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r10.w, l(0), t15.wxyz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r15.zw, r10.w, l(96), t15.xxxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r10.w, l(116), t15.zwxy
            add r28.xyz, -r26.yzwy, v6.xyzx
            and r13.w, r27.w, l(0x0000ffff)
            ubfe r14.w, l(6), l(25), r27.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r13.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r13.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r13.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r13.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r13.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r13.w, l(80), t16.xyzw
            dp3 r16.w, r29.xyzx, r28.xyzx
            add_sat r16.w, r29.w, r16.w
            dp3 r17.w, r30.xyzx, r28.xyzx
            add_sat r17.w, r30.w, r17.w
            mul r16.w, r16.w, r17.w
            dp3 r17.w, r31.xyzx, r28.xyzx
            add_sat r17.w, r31.w, r17.w
            mul r16.w, r16.w, r17.w
            dp3 r17.w, r32.xyzx, r28.xyzx
            add_sat r17.w, r32.w, r17.w
            mul r16.w, r16.w, r17.w
            dp3 r17.w, r33.xyzx, r28.xyzx
            add_sat r17.w, r33.w, r17.w
            mul r16.w, r16.w, r17.w
            dp3 r17.w, r34.xyzx, r28.xyzx
            add_sat r17.w, r34.w, r17.w
            mul r13.x, r16.w, r17.w
            and r16.w, r15.z, l(1)
            movc r29.xy, r16.wwww, r13.xyxx, r13.zxzz
            mov r13.x, r15.z
            mov r30.xy, r29.xyxx
            mov r16.w, l(1)
            loop 
              ige r17.w, r16.w, r14.w
              breakc_nz r17.w
              iadd r17.w, r13.w, r16.w
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r17.w, l(0), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r17.w, l(16), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r17.w, l(32), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r17.w, l(48), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r17.w, l(64), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r17.w, l(80), t16.xyzw
              dp3 r17.w, r31.xyzx, r28.xyzx
              add_sat r17.w, r31.w, r17.w
              mul r17.w, r17.w, r30.x
              dp3 r19.w, r32.xyzx, r28.xyzx
              add_sat r19.w, r32.w, r19.w
              mul r17.w, r17.w, r19.w
              dp3 r19.w, r33.xyzx, r28.xyzx
              add_sat r19.w, r33.w, r19.w
              mul r17.w, r17.w, r19.w
              dp3 r19.w, r34.xyzx, r28.xyzx
              add_sat r19.w, r34.w, r19.w
              mul r17.w, r17.w, r19.w
              dp3 r19.w, r35.xyzx, r28.xyzx
              add_sat r19.w, r35.w, r19.w
              mul r17.w, r17.w, r19.w
              dp3 r19.w, r36.xyzx, r28.xyzx
              add_sat r19.w, r36.w, r19.w
              mul r30.x, r17.w, r19.w
              ushr r20.w, r13.x, l(2)
              ubfe r24.w, l(1), l(2), r13.x
              and r26.w, r20.w, l(2)
              max r28.w, r30.x, r30.y
              mad r17.w, -r17.w, r19.w, l(1.000000)
              mul r17.w, r17.w, r30.y
              movc r15.y, r26.w, r17.w, r28.w
              movc r30.xy, r24.wwww, r30.xyxx, r15.xyxx
              iadd r16.w, r16.w, l(1)
              mov r13.x, r20.w
            endloop 
            add_sat r13.x, -r9.w, r30.y
            mul r13.w, r15.w, r13.x
            lt r14.w, l(0.000000), r13.w
            if_nz r14.w
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r10.w, l(16), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r10.w, l(32), t15.yxwz
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r10.w, l(48), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r10.w, l(64), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r10.w, l(80), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r10.w, l(132), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r10.w, l(148), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r10.w, l(164), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r10.w, l(180), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xyzw, r10.w, l(196), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r40.xy, r10.w, l(212), t15.xyxx
              mad r25.w, r13.x, r15.w, r25.w
              mul r10.w, r27.z, r13.w
              mov r27.z, r35.z
              dp3 r13.x, r12.xyzx, r27.xyzx
              dp3 r13.w, r28.xyzx, r27.xyzx
              add r13.w, -r35.w, r13.w
              ge r14.w, r13.w, l(0.000000)
              max r13.w, r0.w, |r13.w|
              movc r13.w, r14.w, r13.w, -r13.w
              max r13.x, -r13.x, l(0.00000010)
              div r13.x, r13.w, r13.x
              min r13.x, |r13.x|, l(131072.000000)
              mov r35.z, r36.z
              dp3 r13.w, r12.xyzx, r35.xyzx
              dp3 r14.w, r28.xyzx, r35.xyzx
              add r14.w, -r36.w, r14.w
              ge r15.y, r14.w, l(0.000000)
              max r14.w, r0.w, |r14.w|
              movc r14.w, r15.y, r14.w, -r14.w
              max r13.w, -r13.w, l(0.00000010)
              div r13.w, r14.w, r13.w
              min r13.x, |r13.w|, r13.x
              mov r36.z, r37.z
              dp3 r13.w, r12.xyzx, r36.xyzx
              dp3 r14.w, r28.xyzx, r36.xyzx
              add r14.w, -r37.w, r14.w
              ge r15.y, r14.w, l(0.000000)
              max r14.w, r0.w, |r14.w|
              movc r14.w, r15.y, r14.w, -r14.w
              max r13.w, -r13.w, l(0.00000010)
              div r13.w, r14.w, r13.w
              min r13.x, |r13.w|, r13.x
              mov r37.z, r38.z
              dp3 r13.w, r12.xyzx, r37.xyzx
              dp3 r14.w, r28.xyzx, r37.xyzx
              add r14.w, -r38.w, r14.w
              ge r15.y, r14.w, l(0.000000)
              max r14.w, r0.w, |r14.w|
              movc r14.w, r15.y, r14.w, -r14.w
              max r13.w, -r13.w, l(0.00000010)
              div r13.w, r14.w, r13.w
              min r13.x, |r13.w|, r13.x
              mov r38.z, r39.x
              dp3 r13.w, r12.xyzx, r38.xyzx
              dp3 r14.w, r28.xyzx, r38.xyzx
              add r14.w, -r39.y, r14.w
              ge r15.y, r14.w, l(0.000000)
              max r14.w, r0.w, |r14.w|
              movc r14.w, r15.y, r14.w, -r14.w
              max r13.w, -r13.w, l(0.00000010)
              div r13.w, r14.w, r13.w
              min r13.x, |r13.w|, r13.x
              mov r40.zw, r39.zzzw
              dp3 r13.w, r12.zxyz, r40.xzwx
              dp3 r14.w, r28.zxyz, r40.xzwx
              add r14.w, -r40.y, r14.w
              ge r15.y, r14.w, l(0.000000)
              max r14.w, r0.w, |r14.w|
              movc r14.w, r15.y, r14.w, -r14.w
              max r13.w, -r13.w, l(0.00000010)
              div r13.w, r14.w, r13.w
              min r13.x, |r13.w|, r13.x
              mov r27.x, r32.w
              mov r27.yz, r33.zzwz
              add r15.yzw, r28.xxyz, r27.xxyz
              mad r15.yzw, r12.xxyz, r13.xxxx, r15.yyzw
              dp3 r13.w, r15.yzwy, r15.yzwy
              sqrt r13.w, r13.w
              div r13.x, r13.x, r13.w
              add r13.x, r13.x, r13.x
              sqrt r13.x, r13.x
              mad r13.x, r0.y, l(5.000000), r13.x
              add r13.x, r13.x, l(-0.844800)
              mov r26.y, r29.z
              mov r26.z, r31.x
              dp3 r35.x, r15.yzwy, r26.xyzx
              mov r27.xy, r29.xwxx
              mov r27.z, r31.w
              dp3 r35.y, r15.yzwy, r27.xyzx
              mov r31.x, r29.y
              dp3 r35.z, r15.yzwy, r31.xyzx
              ubfe r13.w, l(9), l(16), r27.w
              utof r35.w, r13.w
              sample_l_indexable(texturecubearray)(float,float,float,float) r15.yzw, r35.xyzw, t8.wxyz, s2, r13.x
              and r29.xyz, r15.yzwy, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
              ieq r29.xyz, r29.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
              or r13.x, r29.y, r29.x
              or r13.x, r29.z, r13.x
              movc r15.yzw, r13.xxxx, l(0,1.000000,1.000000,0), r15.yyzw
              dp3 r29.x, r28.xyzx, r26.xyzx
              dp3 r29.y, r28.xyzx, r27.xyzx
              dp3 r29.z, r28.xyzx, r31.xyzx
              mad_sat r28.xyz, r29.xyzx, r32.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
              mov r33.z, r34.x
              mad r28.xyz, r28.xyzx, r33.xyzx, r34.yzwy
              dp3 r35.x, r6.xyzx, r26.xyzx
              dp3 r35.y, r6.xyzx, r27.xyzx
              dp3 r35.z, r6.xyzx, r31.xyzx
              lt r26.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r35.xyzx
              movc r14.z, r26.x, l(0), l(0.500000)
              add r27.xyz, r14.xyzx, r28.xyzx
              sample_l_indexable(texture3d)(float,float,float,float) r27.xyz, r27.xyzx, t17.xyzw, s4, l(0.000000)
              mul r29.xyz, r35.xyzx, r35.xyzx
              mul r29.xyz, r10.wwww, r29.xyzx
              movc r16.z, r26.y, l(0), l(0.500000)
              add r26.xyw, r16.xyxz, r28.xyxz
              sample_l_indexable(texture3d)(float,float,float,float) r26.xyw, r26.xywx, t18.xywz, s4, l(0.000000)
              mul r26.xyw, r29.yyyy, r26.xyxw
              mad r26.xyw, r27.xyxz, r29.xxxx, r26.xyxw
              movc r17.z, r26.z, l(0), l(0.500000)
              add r27.xyz, r17.xyzx, r28.xyzx
              sample_l_indexable(texture3d)(float,float,float,float) r27.xyz, r27.xyzx, t19.xyzw, s4, l(0.000000)
              mad r26.xyz, r27.xyzx, r29.zzzz, r26.xywx
              sample_l_indexable(texturecubearray)(float,float,float,float) r27.xyz, r35.xyzw, t8.xyzw, s2, l(6.000000)
              and r28.xyz, r27.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
              ieq r28.xyz, r28.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
              or r13.x, r28.y, r28.x
              or r13.x, r28.z, r13.x
              movc r27.xyz, r13.xxxx, l(1.000000,1.000000,0,0), r27.xyzx
              mul r28.xyz, r26.xyzx, r27.xyzx
              dp3 r13.x, r28.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
              mad r11.xyz, r26.xyzx, r27.xyzx, r11.xyzx
              mul r13.w, r1.w, r13.x
              mul r15.yzw, r10.wwww, r15.yyzw
              dp3 r10.w, r15.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
              mad r10.w, r1.w, r13.x, r10.w
              div r10.w, r13.w, r10.w
              mad r25.xyz, r15.yzwy, r10.wwww, r25.xyzx
            endif 
          endif 
        endif 
      endloop 
      mov r23.xyzw, r25.xyzw
      mov r24.xyz, r11.xyzx
      iadd r7.z, r7.z, l(32)
    endloop 
    mov r22.xyzw, r23.zxyw
    mov r21.xyz, r24.xyzx
    mov r22.xyzw, r22.yzxw
  else 
    mov r22.x, r21.w
  endif 
  max r0.y, r22.w, l(1.000000)
  rcp r0.y, r0.y
  mov_sat r22.w, r22.w
  mul r18.xyz, r0.yyyy, r21.xyzx
  mul r20.xyz, r0.yyyy, r22.xyzx
  lt r0.w, r22.w, l(0.990000)
  if_nz r0.w
    add r0.w, -r22.w, l(1.000000)
    mul r1.w, r0.w, cb2[19].x
    add r10.xyz, v6.xyzx, -cb2[35].xyzx
    mul r11.x, r10.x, cb2[35].w
    mul r11.yz, r10.yyzy, cb2[36].xxyx
    add_sat r10.xyz, r11.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    mul r11.xy, r10.xyxx, cb2[36].zwzz
    mul r11.z, r10.z, cb2[37].x
    add r10.xyz, r11.xyzx, cb2[37].yzwy
    lt r11.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
    movc r11.xyz, r11.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
    mov r11.w, l(0)
    add r13.xyz, r10.xyzx, r11.wwxw
    sample_l_indexable(texture3d)(float,float,float,float) r13.xyz, r13.xyzx, t17.xyzw, s4, l(0.000000)
    mul r14.xyz, r6.xyzx, r6.xyzx
    mul r14.xyz, r1.wwww, r14.xyzx
    add r15.xyz, r10.xyzx, r11.wwyw
    sample_l_indexable(texture3d)(float,float,float,float) r15.xyz, r15.xyzx, t18.xyzw, s4, l(0.000000)
    mul r15.xyz, r14.yyyy, r15.xyzx
    mad r13.xyz, r13.xyzx, r14.xxxx, r15.xyzx
    add r10.xyz, r10.xyzx, r11.wwzw
    sample_l_indexable(texture3d)(float,float,float,float) r10.xyz, r10.xyzx, t19.xyzw, s4, l(0.000000)
    mad r10.xyz, r10.xyzx, r14.zzzz, r13.xyzx
    mov r6.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r6.xyz, r6.xyzw, t8.xyzw, s2, l(6.000000)
    mul r6.xyz, r6.xyzx, r10.xyzx
    dp3 r1.w, r6.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
    mad r18.xyz, r21.xyzx, r0.yyyy, r6.xyzx
    mov r12.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r6.xyz, r12.xyzw, t8.xyzw, s2, r0.z
    mad r0.y, cb2[19].x, r0.w, -r1.w
    mad r0.y, r7.y, r0.y, r1.w
    mad r20.xyz, r6.xyzx, r0.yyyy, r20.xyzx
  endif 
else 
  mov r20.x, r18.w
endif 
mad r0.yzw, r18.xxyz, r0.xxxx, r3.xxyz
mad r3.xyz, r18.xyzx, r0.xxxx, r5.xyzx
mad r5.xy, r7.xyxx, l(0.984375, 0.984375, 0.000000, 0.000000), l(0.00781250, 0.00781250, 0.000000, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r5.xy, r5.xyxx, t5.xyzw, s2, l(0.000000)
mul r6.xyz, r0.xxxx, r20.xyzx
mad r2.xyz, r6.xyzx, r5.xxxx, r2.xyzx
mad r5.xyz, r6.xyzx, r5.yyyy, r9.xyzx
dp3 r0.x, r4.xyzx, r8.xyzx
add r0.x, -|r0.x|, l(1.000000)
mul r0.x, r0.x, r0.x
mad r0.x, r0.x, l(0.600000), l(0.400000)
min r0.x, r0.x, l(1.000000)
mad_sat r4.xyz, r1.xyzx, l(0.020000, 0.020000, 0.020000, 0.000000), l(0.040000, 0.040000, 0.040000, 0.000000)
mul r6.xyz, r4.xyzx, cb0[11].xyzx
mul r7.xyz, r0.xxxx, r1.xyzx
mul r3.xyz, r3.xyzx, r7.xyzx
mad r0.xyz, r0.yzwy, r1.xyzx, r3.xyzx
mad r1.xyz, -r4.xyzx, cb0[11].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r1.xyz, r1.xyzx, r2.xyzx
mad r1.xyz, r5.xyzx, r6.xyzx, r1.xyzx
add r0.xyz, r0.xyzx, r1.xyzx
lt r0.w, l(0.000000), cb2[9].z
if_nz r0.w
  dp3 r0.w, v6.xyzx, v6.xyzx
  rsq r1.x, r0.w
  mul r1.xyz, r1.xxxx, v6.xyzx
  sqrt r0.w, r0.w
  lt r1.w, l(0.000000), cb2[13].w
  if_nz r1.w
    mad r2.xy, r0.wwww, cb2[15].xyxx, cb2[14].zwzz
    mul r2.xy, r2.xyxx, cb2[16].xyxx
    lt r1.w, l(0.010000), |v6.z|
    mul r2.zw, v6.zzzz, cb2[15].zzzw
    mul r3.xy, r2.zwzz, l(-1.442695, -1.442695, 0.000000, 0.000000)
    exp r3.xy, r3.xyxx
    add r3.xy, -r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    div r2.zw, r3.xxxy, r2.zzzw
    mul r2.zw, r2.zzzw, r2.xxxy
    movc r2.xy, r1.wwww, r2.zwzz, r2.xyxx
    mul r2.xzw, r2.xxxx, cb2[12].xxyz
    exp r2.xzw, r2.xxzw
    mul r3.xyz, r2.yyyy, cb2[12].xyzx
    exp r3.xyz, r3.xyzx
    add r3.xyz, -r2.xzwx, r3.xyzx
    mad r2.xyz, cb2[13].wwww, r3.xyzx, r2.xzwx
  else 
    mad r1.w, r0.w, cb2[15].x, cb2[14].z
    mul r1.w, r1.w, cb2[16].x
    lt r2.w, l(0.010000), |v6.z|
    mul r3.x, v6.z, cb2[15].z
    mul r3.y, r3.x, l(-1.442695)
    exp r3.y, r3.y
    add r3.y, -r3.y, l(1.000000)
    div r3.x, r3.y, r3.x
    mul r3.x, r1.w, r3.x
    movc r1.w, r2.w, r3.x, r1.w
    mul r3.xyz, r1.wwww, cb2[12].xyzx
    exp r2.xyz, r3.xyzx
  endif 
  mad r2.xyz, r2.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r2.xyz, r2.xyzx, -cb2[9].zzzz
  dp3 r1.x, cb2[7].yzwy, -r1.xyzx
  mad r1.y, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r1.z, cb2[8].w, -r1.x, l(1.000000)
  mul r1.z, r1.z, r1.z
  mul r1.z, r1.z, l(12.566371)
  div r1.y, r1.y, r1.z
  add r0.w, r0.w, -cb2[10].w
  mul_sat r0.w, r0.w, cb2[11].w
  mul r0.w, r0.w, r1.y
  mov_sat r1.x, r1.x
  mad r1.x, r1.x, r1.x, l(1.000000)
  mad r1.x, r1.x, l(0.05968310), l(-1.000000)
  mad r1.x, cb2[8].z, r1.x, l(1.000000)
  mul r1.yzw, r0.wwww, cb2[11].xxyz
  mad r1.xyz, r1.xxxx, cb2[10].xyzx, r1.yzwy
  mul r1.xyz, r1.xyzx, cb2[9].wwww
  add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r1.xyz, r1.xyzx, r3.xyzx
  mad r1.xyz, r0.xyzx, r2.xyzx, r1.xyzx
else 
  mul r0.w, v6.z, cb2[6].x
  mad r1.w, cb2[6].x, v6.z, cb2[5].x
  lt r2.x, |r0.w|, l(0.000100)
  min r2.y, r1.w, l(64.000000)
  mul r2.y, r2.y, l(1.442695)
  exp r2.y, r2.y
  mov_sat r2.z, cb2[6].z
  lt r2.w, r1.w, l(0.000000)
  add r1.w, r1.w, l(1.000000)
  movc r1.w, r2.w, r2.y, r1.w
  add r1.w, r1.w, -cb2[6].z
  movc r0.w, r2.x, l(1.000000), r0.w
  div r0.w, r1.w, r0.w
  movc r0.w, r2.x, r2.z, r0.w
  mul r0.w, r0.w, cb2[5].z
  dp3 r1.w, v6.xyzx, v6.xyzx
  sqrt r2.x, r1.w
  mad r0.w, r0.w, r2.x, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  rsq r1.w, r1.w
  mul r2.xyz, r1.wwww, v6.xyzx
  dp3 r1.w, cb2[7].yzwy, r2.xyzx
  mad_sat r1.w, cb2[8].y, r1.w, cb2[8].x
  add r2.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r2.xyzw, r1.wwww, r2.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r2.w
  add r2.xyz, -r0.xyzx, r2.xyzx
  mad r1.xyz, r0.wwww, r2.xyzx, r0.xyzx
endif 
mul r0.xyz, r1.xyzx, cb1[85].yyyy
ge r1.xyz, r0.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.xyz, r0.xyzx, r1.xyzx
min o0.xyz, r0.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
ret 
// Approximately 2660 instruction slots used
