//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:37:25 2021
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16
//   float4 detailScale2;               // Offset:   96 Size:    16
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float baseNormalHeight;            // Offset:  160 Size:     4
//   float2 glossRange;                 // Offset:  164 Size:     8
//   float2 mixScale;                   // Offset:  176 Size:     8
//   float detailScaleHeight1;          // Offset:  184 Size:     4
//   float detailScaleHeight2;          // Offset:  188 Size:     4
//   float4 colorTint;                  // Offset:  192 Size:    16
//   float4 colorTint1;                 // Offset:  208 Size:    16
//   float2 glossRange2;                // Offset:  224 Size:     8
//   float rotateUVs1;                  // Offset:  232 Size:     4
//   float rotateUVs2;                  // Offset:  236 Size:     4
//   bool useUVOffsets1;                // Offset:  240 Size:     4
//   bool useUVOffsets2;                // Offset:  244 Size:     4
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16 [unused]
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4 [unused]
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// colorSampler                      sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// normalSampler                     sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// mixSampler                        sampler      NA          NA             s5      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// colorMap                          texture  float4          2d             t0      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// normalMap                         texture  float4          2d            t21      1 
// detailMap1                        texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// detailMap2                        texture  float4          2d            t24      1 
// colorMapDetail2                   texture  float4          2d            t25      1 
// mixMap                            texture  float4          2d            t26      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyz 
// COLOR                    1   x           1     NONE   float       
// TEXCOORD                 0    yz         1     NONE   float    yz 
// UVOFFSETS                0   xyz         2     NONE   float   xyz 
// TEXCOORD                 1   xyz         3     NONE   float   xyz 
// TEXCOORD                 2   xyz         4     NONE   float   xyz 
// TEXCOORD                 3   xyz         5     NONE   float   xyz 
// OFFPOSITION              0   xyz         6     NONE   float   xyz 
// SV_IsFrontFace           0   x           7    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[16], immediateIndexed
dcl_constantbuffer CB1[93], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2d (float,float,float,float) t26
dcl_resource_texture2darray (float,float,float,float) t31
dcl_input_ps_siv linear noperspective v0.xyz, position
dcl_input_ps linear v1.yz
dcl_input_ps constant v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps_sgv constant v7.x, is_front_face
dcl_output o0.xyzw
dcl_temps 44
mul r0.xy, v1.yzyy, cb0[11].xyxx
sample_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t26.xyzw, s5
sample_indexable(texture2d)(float,float,float,float) r0.yzw, v1.yzyy, t21.wxyz, s3
add r0.yzw, r0.yyzw, l(0.000000, -0.500000, -0.500000, -0.000000)
mad r0.yzw, cb0[10].xxxx, r0.yyzw, l(0.000000, 0.500000, 0.500000, 0.000000)
mad r0.yz, r0.yyzy, l(0.000000, 1.99218750, 1.99218750, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
dp2 r1.x, r0.yzyy, r0.yzyy
add r1.x, -r1.x, l(1.000000)
max r1.x, r1.x, l(0.000000)
sqrt r1.z, r1.x
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, l(0.33333334)
min r0.w, r0.w, l(1.000000)
sincos r2.x, r3.x, cb0[14].z
mov r4.x, -r2.x
add r2.yz, v1.yyzy, l(0.000000, -0.500000, -0.500000, 0.000000)
mov r4.y, r3.x
mov r4.z, r2.x
dp2 r3.x, r2.yzyy, r4.yzyy
dp2 r3.y, r2.yzyy, r4.xyxx
add r2.xw, r3.xxxy, v2.yyyx
add r1.w, v2.z, l(0.500000)
add r2.xw, r1.wwww, r2.xxxw
mul r2.xw, r2.xxxw, cb0[5].xxxy
add r3.xy, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
mul r3.xy, r3.xyxx, cb0[5].xyxx
movc r2.xw, cb0[15].xxxx, r2.xxxw, r3.xxxy
sample_indexable(texture2d)(float,float,float,float) r3.xyzw, r2.xwxx, t0.xyzw, s1
add r4.xyz, cb0[12].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r4.xyz, r3.wwww, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r3.xyz, r3.xyzx, r4.xyzx
sample_indexable(texture2d)(float,float,float,float) r4.xyz, r2.xwxx, t22.xyzw, s3
mad r2.xw, r4.xxxy, l(1.99218750, 0.000000, 0.000000, 1.99218750), l(-1.000000, 0.000000, 0.000000, -1.000000)
mul r4.x, r4.z, r4.z
mul r4.x, r4.x, l(0.33333334)
min r4.x, r4.x, l(1.000000)
sincos r5.x, r6.x, cb0[14].w
mov r7.x, -r5.x
mov r7.y, r6.x
mov r7.z, r5.x
dp2 r5.x, r2.yzyy, r7.yzyy
dp2 r5.y, r2.yzyy, r7.xyxx
add r2.yz, r5.xxyx, v2.yyxy
add r2.yz, r1.wwww, r2.yyzy
mul r2.yz, r2.yyzy, cb0[6].xxyx
add r4.yz, r5.xxyx, l(0.000000, 0.500000, 0.500000, 0.000000)
mul r4.yz, r4.yyzy, cb0[6].xxyx
movc r2.yz, cb0[15].yyyy, r2.yyzy, r4.yyzy
sample_indexable(texture2d)(float,float,float,float) r5.xyzw, r2.yzyy, t25.xyzw, s1
add r4.yzw, cb0[13].xxyz, l(0.000000, -1.000000, -1.000000, -1.000000)
mad r4.yzw, r5.wwww, r4.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
mul r5.xyz, r4.yzwy, r5.xyzx
sample_indexable(texture2d)(float,float,float,float) r4.yzw, r2.yzyy, t24.wxyz, s3
add r5.xyzw, -r3.xyzw, r5.xyzw
mad r3.xyzw, r0.xxxx, r5.xyzw, r3.xyzw
mul_sat r1.w, cb0[10].z, l(0.05882353)
mul_sat r2.y, cb0[14].y, l(0.05882353)
add r2.y, -r1.w, r2.y
mad r1.w, r0.x, r2.y, r1.w
mad r2.yz, r4.yyzy, l(0.000000, 1.99218750, 1.99218750, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
mul r4.y, r4.w, r4.w
mul r4.y, r4.y, l(0.33333334)
min r4.y, r4.y, l(1.000000)
mad r1.xy, r2.xwxx, cb0[11].zzzz, r0.yzyy
dp3 r2.x, r1.xyzx, r1.xyzx
rsq r2.x, r2.x
mul r5.xyz, r1.xyzx, r2.xxxx
mad r5.w, r4.x, cb0[11].z, r0.w
mad r1.xy, r2.yzyy, cb0[11].wwww, r0.yzyy
dp3 r0.y, r1.xyzx, r1.xyzx
rsq r0.y, r0.y
mul r2.xyz, r0.yyyy, r1.xyzx
mad r2.w, r4.y, cb0[11].w, r0.w
add r2.xyzw, -r5.xyzw, r2.xyzw
mad r0.xyzw, r0.xxxx, r2.xyzw, r5.xyzw
movc r1.x, v7.x, l(1.000000), l(-1.000000)
dp3 r1.y, v3.xyzx, v3.xyzx
rsq r1.y, r1.y
mul r2.xyz, r1.yyyy, v3.xyzx
mul r2.xyz, r1.xxxx, r2.xyzx
dp3 r1.y, v4.xyzx, v4.xyzx
rsq r1.y, r1.y
mul r4.xyz, r1.yyyy, v4.xyzx
mul r4.xyz, r1.xxxx, r4.xyzx
dp3 r1.y, v5.xyzx, v5.xyzx
rsq r1.y, r1.y
mul r5.xyz, r1.yyyy, v5.xyzx
mul r1.xyz, r1.xxxx, r5.xyzx
mul r1.w, r1.w, l(-17.000000)
exp r1.w, r1.w
add r0.w, r0.w, r1.w
log r0.w, r0.w
mul_sat r5.y, r0.w, l(-0.05882353)
mul r1.xyz, r0.yyyy, r1.xyzx
mad r0.xyw, r4.xyxz, r0.xxxx, r1.xyxz
mad r0.xyz, r2.xyzx, r0.zzzz, r0.xywx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
ftou r1.xy, v0.xyxx
ge r1.z, v0.z, l(0.984375)
mul r1.w, v0.z, l(1.01587307)
mad r2.x, v0.z, l(64.000000), l(-63.000000)
movc r1.z, r1.z, r2.x, r1.w
max r1.z, r1.z, l(0.00000001)
rcp r1.z, r1.z
dp3 r1.w, -v6.xyzx, -v6.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, -v6.xyzx
ine r2.w, cb1[92].x, l(0)
utof r4.xy, r1.yxyy
dp2 r4.z, r4.yxyy, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r4.z, r4.z
mul r4.z, r4.z, l(52.982918)
frc r4.z, r4.z
mad r4.z, r4.z, l(6.28318548), cb1[70].w
sincos r6.x, r7.x, r4.z
dp2 r4.x, r4.xyxx, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r4.x, r4.x
mul r4.x, r4.x, l(52.982918)
frc r4.x, r4.x
mad r4.x, r4.x, l(6.28318548), cb1[70].w
sincos r4.x, r8.x, r4.x
dp3_sat r5.x, r0.xyzx, r2.xyzx
dp3 r4.y, -r2.xyzx, r0.xyzx
add r4.y, r4.y, r4.y
mad r9.xyz, r0.xyzx, -r4.yyyy, -r2.xyzx
mul r4.y, r5.y, l(17.000000)
exp r4.y, r4.y
add r4.y, r4.y, l(2.000000)
div r4.y, l(2.000000), r4.y
sqrt r4.z, r4.y
add r4.w, -r5.y, l(1.000000)
mul r5.z, r4.w, l(5.000000)
mad r5.w, r4.w, l(5.000000), l(-2.500000)
mul r5.w, r5.w, l(0.400000)
max r5.w, r5.w, l(0.000000)
mul r5.w, r5.w, l(100.000000)
mad r6.zw, -r4.wwww, l(0.000000, 0.000000, 10.000000, 5.000000), l(0.000000, 0.000000, 6.857410, 7.085000)
exp r6.z, r6.z
mul r6.z, r5.x, r6.z
mul r7.w, r4.w, r5.z
mad r6.w, -r7.w, l(2.015905), r6.w
exp r6.w, r6.w
mul r6.w, r5.x, r6.w
mul r6.zw, r6.zzzw, l(0.000000, 0.000000, 9.136810, 9.708090)
max r6.z, r6.w, r6.z
max r6.z, r6.z, l(1.268160)
iadd r6.w, cb2[0].y, -cb2[58].x
mul r1.z, r1.z, l(0.00781250)
min r1.z, r1.z, l(15.000000)
ftou r1.z, r1.z
ushr r10.xy, r1.xyxx, l(6, 6, 0, 0)
ishl r10.z, r1.z, l(4)
and r1.x, r6.w, l(-32)
iadd r1.y, -r1.x, r6.w
and r1.z, cb2[0].y, l(-32)
iadd r7.w, -r1.z, cb2[0].y
mov r11.xy, l(0,0,0,0)
mov r12.w, l(0)
mov r13.yz, l(0,0,1.000000,0)
mov r14.xy, l(0,0,0,0)
mov r15.x, l(1.000000)
mov r16.xy, l(0,0,0,0)
mov r17.xy, l(0,0,0,0)
mov r18.xyzw, l(0,0,0,0)
mov r19.yzw, l(0,0,0,0)
mov r8.y, r1.x
loop 
  uge r8.z, r8.y, cb2[0].y
  breakc_nz r8.z
  ushr r11.z, r8.y, l(5)
  iadd r12.xyz, r10.xyzx, r11.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r8.z, r12.xyzw, t7.yzxw
  ieq r8.w, r1.x, r8.y
  bfi r10.w, r1.y, l(0), l(0), r8.z
  movc r8.z, r8.w, r10.w, r8.z
  ieq r8.w, r1.z, r8.y
  ubfe r10.w, r7.w, l(0), r8.z
  movc r8.z, r8.w, r10.w, r8.z
  iadd r8.w, r8.y, cb2[0].x
  mov r20.xyzw, r18.xyzw
  mov r21.xyz, r19.yzwy
  mov r10.w, r8.z
  loop 
    breakc_z r10.w
    firstbit_lo r11.z, r10.w
    ishl r11.w, l(1), r11.z
    and r12.x, r10.w, r11.w
    if_nz r12.x
      xor r10.w, r10.w, r11.w
      iadd r11.w, r8.w, r11.z
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r22.xyzw, r11.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r12.xy, r11.w, l(16), t11.xyxx
      add r22.xyz, r22.xyzx, -v6.xyzx
      mov r12.z, r22.w
      lt r12.xyz, |r22.xyzx|, r12.zxyz
      and r11.w, r12.y, r12.x
      and r11.w, r12.z, r11.w
      if_nz r11.w
        iadd r11.z, r8.y, r11.z
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r22.xyzw, r11.z, l(0), t15.wxyz
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r12.xy, r11.z, l(96), t15.xyxx
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r23.xyzw, r11.z, l(116), t15.zwxy
        add r24.xyz, -r22.yzwy, v6.xyzx
        and r11.w, r23.w, l(0x0000ffff)
        ubfe r12.z, l(6), l(25), r23.w
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r25.xyzw, r11.w, l(0), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r26.xyzw, r11.w, l(16), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r11.w, l(32), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r11.w, l(48), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r11.w, l(64), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r11.w, l(80), t16.xyzw
        dp3 r13.w, r25.xyzx, r24.xyzx
        add_sat r13.w, r25.w, r13.w
        dp3 r14.w, r26.xyzx, r24.xyzx
        add_sat r14.w, r26.w, r14.w
        mul r13.w, r13.w, r14.w
        dp3 r14.w, r27.xyzx, r24.xyzx
        add_sat r14.w, r27.w, r14.w
        mul r13.w, r13.w, r14.w
        dp3 r14.w, r28.xyzx, r24.xyzx
        add_sat r14.w, r28.w, r14.w
        mul r13.w, r13.w, r14.w
        dp3 r14.w, r29.xyzx, r24.xyzx
        add_sat r14.w, r29.w, r14.w
        mul r13.w, r13.w, r14.w
        dp3 r14.w, r30.xyzx, r24.xyzx
        add_sat r14.w, r30.w, r14.w
        mul r13.x, r13.w, r14.w
        and r13.w, r12.x, l(1)
        movc r13.xw, r13.wwww, r13.xxxy, r13.zzzx
        mov r14.w, r12.x
        mov r25.xy, r13.xwxx
        mov r15.z, l(1)
        loop 
          ige r15.w, r15.z, r12.z
          breakc_nz r15.w
          iadd r15.w, r11.w, r15.z
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r26.xyzw, r15.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r15.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r15.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r15.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r15.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r15.w, l(80), t16.xyzw
          dp3 r15.w, r26.xyzx, r24.xyzx
          add_sat r15.w, r26.w, r15.w
          mul r15.w, r15.w, r25.x
          dp3 r16.w, r27.xyzx, r24.xyzx
          add_sat r16.w, r27.w, r16.w
          mul r15.w, r15.w, r16.w
          dp3 r16.w, r28.xyzx, r24.xyzx
          add_sat r16.w, r28.w, r16.w
          mul r15.w, r15.w, r16.w
          dp3 r16.w, r29.xyzx, r24.xyzx
          add_sat r16.w, r29.w, r16.w
          mul r15.w, r15.w, r16.w
          dp3 r16.w, r30.xyzx, r24.xyzx
          add_sat r16.w, r30.w, r16.w
          mul r15.w, r15.w, r16.w
          dp3 r16.w, r31.xyzx, r24.xyzx
          add_sat r16.w, r31.w, r16.w
          mul r25.x, r15.w, r16.w
          ushr r17.w, r14.w, l(2)
          ubfe r22.w, l(1), l(2), r14.w
          and r24.w, r17.w, l(2)
          max r25.z, r25.x, r25.y
          mad r15.w, -r15.w, r16.w, l(1.000000)
          mul r15.w, r15.w, r25.y
          movc r15.y, r24.w, r15.w, r25.z
          movc r25.xy, r22.wwww, r25.xyxx, r15.xyxx
          iadd r15.z, r15.z, l(1)
          mov r14.w, r17.w
        endloop 
        mov_sat r25.y, r25.y
        mul r11.w, r12.y, r25.y
        lt r12.x, l(0.000000), r11.w
        if_nz r12.x
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r11.z, l(16), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r11.z, l(32), t15.yxwz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r11.z, l(48), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r11.z, l(64), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r11.z, l(80), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r11.z, l(132), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r11.z, l(148), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r11.z, l(164), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r11.z, l(180), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r11.z, l(196), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xy, r11.z, l(212), t15.xyxx
          mad r21.z, r25.y, r12.y, r21.z
          mul r11.z, r23.z, r11.w
          mov r23.z, r31.z
          dp3 r11.w, r9.xyzx, r23.xyzx
          dp3 r12.x, r24.xyzx, r23.xyzx
          add r12.x, -r31.w, r12.x
          ge r12.y, r12.x, l(0.000000)
          max r12.x, r5.w, |r12.x|
          movc r12.x, r12.y, r12.x, -r12.x
          max r11.w, -r11.w, l(0.00000010)
          div r11.w, r12.x, r11.w
          min r11.w, |r11.w|, l(131072.000000)
          mov r31.z, r32.z
          dp3 r12.x, r9.xyzx, r31.xyzx
          dp3 r12.y, r24.xyzx, r31.xyzx
          add r12.y, -r32.w, r12.y
          ge r12.z, r12.y, l(0.000000)
          max r12.y, r5.w, |r12.y|
          movc r12.y, r12.z, r12.y, -r12.y
          max r12.x, -r12.x, l(0.00000010)
          div r12.x, r12.y, r12.x
          min r11.w, r11.w, |r12.x|
          mov r32.z, r33.z
          dp3 r12.x, r9.xyzx, r32.xyzx
          dp3 r12.y, r24.xyzx, r32.xyzx
          add r12.y, -r33.w, r12.y
          ge r12.z, r12.y, l(0.000000)
          max r12.y, r5.w, |r12.y|
          movc r12.y, r12.z, r12.y, -r12.y
          max r12.x, -r12.x, l(0.00000010)
          div r12.x, r12.y, r12.x
          min r11.w, r11.w, |r12.x|
          mov r33.z, r34.z
          dp3 r12.x, r9.xyzx, r33.xyzx
          dp3 r12.y, r24.xyzx, r33.xyzx
          add r12.y, -r34.w, r12.y
          ge r12.z, r12.y, l(0.000000)
          max r12.y, r5.w, |r12.y|
          movc r12.y, r12.z, r12.y, -r12.y
          max r12.x, -r12.x, l(0.00000010)
          div r12.x, r12.y, r12.x
          min r11.w, r11.w, |r12.x|
          mov r34.z, r35.x
          dp3 r12.x, r9.xyzx, r34.xyzx
          dp3 r12.y, r24.xyzx, r34.xyzx
          add r12.y, -r35.y, r12.y
          ge r12.z, r12.y, l(0.000000)
          max r12.y, r5.w, |r12.y|
          movc r12.y, r12.z, r12.y, -r12.y
          max r12.x, -r12.x, l(0.00000010)
          div r12.x, r12.y, r12.x
          min r11.w, r11.w, |r12.x|
          mov r36.zw, r35.zzzw
          dp3 r12.x, r9.zxyz, r36.xzwx
          dp3 r12.y, r24.zxyz, r36.xzwx
          add r12.y, -r36.y, r12.y
          ge r12.z, r12.y, l(0.000000)
          max r12.y, r5.w, |r12.y|
          movc r12.y, r12.z, r12.y, -r12.y
          max r12.x, -r12.x, l(0.00000010)
          div r12.x, r12.y, r12.x
          min r11.w, r11.w, |r12.x|
          mov r12.x, r28.w
          mov r12.yz, r29.zzwz
          add r12.xyz, r24.xyzx, r12.xyzx
          mad r12.xyz, r9.xyzx, r11.wwww, r12.xyzx
          dp3 r13.x, r12.xyzx, r12.xyzx
          sqrt r13.x, r13.x
          div r11.w, r11.w, r13.x
          add r11.w, r11.w, r11.w
          sqrt r11.w, r11.w
          mad r11.w, r4.w, l(5.000000), r11.w
          add r11.w, r11.w, l(-0.844800)
          mov r22.y, r26.z
          mov r22.z, r27.x
          dp3 r31.x, r12.xyzx, r22.xyzx
          mov r23.xy, r26.xwxx
          mov r23.z, r27.w
          dp3 r31.y, r12.xyzx, r23.xyzx
          mov r27.x, r26.y
          dp3 r31.z, r12.xyzx, r27.xyzx
          ubfe r12.x, l(9), l(16), r23.w
          utof r31.w, r12.x
          sample_l_indexable(texturecubearray)(float,float,float,float) r12.xyz, r31.xyzw, t8.xyzw, s2, r11.w
          dp3 r26.x, r24.xyzx, r22.xyzx
          dp3 r26.y, r24.xyzx, r23.xyzx
          dp3 r26.z, r24.xyzx, r27.xyzx
          mad_sat r15.yzw, r26.xxyz, r28.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
          mov r29.z, r30.x
          mad r15.yzw, r15.yyzw, r29.xxyz, r30.yyzw
          dp3 r31.x, r0.xyzx, r22.xyzx
          dp3 r31.y, r0.xyzx, r23.xyzx
          dp3 r31.z, r0.xyzx, r27.xyzx
          lt r22.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r31.xyzx
          movc r14.z, r22.x, l(0), l(0.500000)
          add r23.xyz, r14.xyzx, r15.yzwy
          sample_l_indexable(texture3d)(float,float,float,float) r23.xyz, r23.xyzx, t17.xyzw, s4, l(0.000000)
          mul r24.xyz, r31.xyzx, r31.xyzx
          mul r24.xyz, r11.zzzz, r24.xyzx
          movc r16.z, r22.y, l(0), l(0.500000)
          add r22.xyw, r15.yzyw, r16.xyxz
          sample_l_indexable(texture3d)(float,float,float,float) r22.xyw, r22.xywx, t18.xywz, s4, l(0.000000)
          mul r22.xyw, r24.yyyy, r22.xyxw
          mad r22.xyw, r23.xyxz, r24.xxxx, r22.xyxw
          movc r17.z, r22.z, l(0), l(0.500000)
          add r15.yzw, r15.yyzw, r17.xxyz
          sample_l_indexable(texture3d)(float,float,float,float) r15.yzw, r15.yzwy, t19.wxyz, s4, l(0.000000)
          mad r15.yzw, r15.yyzw, r24.zzzz, r22.xxyw
          sample_l_indexable(texturecubearray)(float,float,float,float) r22.xyz, r31.xyzw, t8.xyzw, s2, l(6.000000)
          mul r23.xyz, r15.yzwy, r22.xyzx
          dp3 r11.w, r23.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r20.xyz, r15.yzwy, r22.xyzx, r20.xyzx
          mul r13.x, r6.z, r11.w
          mul r12.xyz, r11.zzzz, r12.xyzx
          dp3 r11.z, r12.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r11.z, r6.z, r11.w, r11.z
          div r11.z, r13.x, r11.z
          mov r22.x, r20.w
          mov r22.yz, r21.xxyx
          mad r21.xyw, r12.yzyx, r11.zzzz, r22.yzyx
          mov r20.w, r21.w
        endif 
      endif 
    endif 
  endloop 
  mov r18.xyzw, r20.xyzw
  mov r19.yzw, r21.xxyz
  iadd r8.y, r8.y, l(32)
endloop 
lt r1.z, r19.w, l(1.000000)
if_nz r1.z
  mov r11.xy, l(0,0,0,0)
  mov r12.w, l(0)
  mov r13.yz, l(0,0,1.000000,0)
  mov r14.xy, l(0,0,0,0)
  mov r15.x, l(1.000000)
  mov r16.xy, l(0,0,0,0)
  mov r17.xy, l(0,0,0,0)
  mov r20.x, r18.w
  mov r20.yzw, r19.yyzw
  mov r8.yzw, r18.xxyz
  mov r1.z, r19.w
  mov r7.w, l(0)
  loop 
    uge r10.w, r7.w, r6.w
    breakc_nz r10.w
    ushr r11.z, r7.w, l(5)
    iadd r12.xyz, r10.xyzx, r11.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r10.w, r12.xyzw, t7.yzwx
    ieq r11.z, r1.x, r7.w
    ubfe r11.w, r1.y, l(0), r10.w
    movc r10.w, r11.z, r11.w, r10.w
    iadd r11.z, r7.w, cb2[0].x
    mov r21.xyzw, r20.xyzw
    mov r12.xyz, r8.yzwy
    mov r11.w, r1.z
    mov r13.w, r10.w
    loop 
      breakc_z r13.w
      firstbit_lo r14.w, r13.w
      ishl r15.z, l(1), r14.w
      and r15.w, r13.w, r15.z
      if_nz r15.w
        xor r13.w, r13.w, r15.z
        iadd r15.z, r11.z, r14.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r22.xyzw, r15.z, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r23.xy, r15.z, l(16), t11.xyxx
        add r22.xyz, r22.xyzx, -v6.xyzx
        mov r23.z, r22.w
        lt r22.xyz, |r22.xyzx|, r23.zxyz
        and r15.z, r22.y, r22.x
        and r15.z, r22.z, r15.z
        if_nz r15.z
          iadd r14.w, r7.w, r14.w
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r22.xyzw, r14.w, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r15.zw, r14.w, l(96), t15.xxxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r23.xyzw, r14.w, l(116), t15.zwxy
          add r24.xyz, -r22.yzwy, v6.xyzx
          and r16.w, r23.w, l(0x0000ffff)
          ubfe r17.w, l(6), l(25), r23.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r25.xyzw, r16.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r26.xyzw, r16.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r16.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r16.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r16.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r16.w, l(80), t16.xyzw
          dp3 r22.w, r25.xyzx, r24.xyzx
          add_sat r22.w, r25.w, r22.w
          dp3 r24.w, r26.xyzx, r24.xyzx
          add_sat r24.w, r26.w, r24.w
          mul r22.w, r22.w, r24.w
          dp3 r24.w, r27.xyzx, r24.xyzx
          add_sat r24.w, r27.w, r24.w
          mul r22.w, r22.w, r24.w
          dp3 r24.w, r28.xyzx, r24.xyzx
          add_sat r24.w, r28.w, r24.w
          mul r22.w, r22.w, r24.w
          dp3 r24.w, r29.xyzx, r24.xyzx
          add_sat r24.w, r29.w, r24.w
          mul r22.w, r22.w, r24.w
          dp3 r24.w, r30.xyzx, r24.xyzx
          add_sat r24.w, r30.w, r24.w
          mul r13.x, r22.w, r24.w
          and r22.w, r15.z, l(1)
          movc r25.xy, r22.wwww, r13.xyxx, r13.zxzz
          mov r13.x, r15.z
          mov r26.xy, r25.xyxx
          mov r22.w, l(1)
          loop 
            ige r24.w, r22.w, r17.w
            breakc_nz r24.w
            iadd r24.w, r16.w, r22.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r24.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r24.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r24.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r24.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r24.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r24.w, l(80), t16.xyzw
            dp3 r24.w, r27.xyzx, r24.xyzx
            add_sat r24.w, r27.w, r24.w
            mul r24.w, r24.w, r26.x
            dp3 r25.z, r28.xyzx, r24.xyzx
            add_sat r25.z, r28.w, r25.z
            mul r24.w, r24.w, r25.z
            dp3 r25.z, r29.xyzx, r24.xyzx
            add_sat r25.z, r29.w, r25.z
            mul r24.w, r24.w, r25.z
            dp3 r25.z, r30.xyzx, r24.xyzx
            add_sat r25.z, r30.w, r25.z
            mul r24.w, r24.w, r25.z
            dp3 r25.z, r31.xyzx, r24.xyzx
            add_sat r25.z, r31.w, r25.z
            mul r24.w, r24.w, r25.z
            dp3 r25.z, r32.xyzx, r24.xyzx
            add_sat r25.z, r32.w, r25.z
            mul r26.x, r24.w, r25.z
            ushr r25.w, r13.x, l(2)
            ubfe r26.z, l(1), l(2), r13.x
            and r26.w, r25.w, l(2)
            max r27.x, r26.x, r26.y
            mad r24.w, -r24.w, r25.z, l(1.000000)
            mul r24.w, r24.w, r26.y
            movc r15.y, r26.w, r24.w, r27.x
            movc r26.xy, r26.zzzz, r26.xyxx, r15.xyxx
            iadd r22.w, r22.w, l(1)
            mov r13.x, r25.w
          endloop 
          add_sat r13.x, -r11.w, r26.y
          mul r15.y, r15.w, r13.x
          lt r15.z, l(0.000000), r15.y
          if_nz r15.z
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r14.w, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r14.w, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r14.w, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r14.w, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r14.w, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r14.w, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r14.w, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r14.w, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r14.w, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r14.w, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xy, r14.w, l(212), t15.xyxx
            mad r21.w, r13.x, r15.w, r21.w
            mul r13.x, r23.z, r15.y
            mov r23.z, r31.z
            dp3 r14.w, r9.xyzx, r23.xyzx
            dp3 r15.y, r24.xyzx, r23.xyzx
            add r15.y, -r31.w, r15.y
            ge r15.z, r15.y, l(0.000000)
            max r15.y, r5.w, |r15.y|
            movc r15.y, r15.z, r15.y, -r15.y
            max r14.w, -r14.w, l(0.00000010)
            div r14.w, r15.y, r14.w
            min r14.w, |r14.w|, l(131072.000000)
            mov r31.z, r32.z
            dp3 r15.y, r9.xyzx, r31.xyzx
            dp3 r15.z, r24.xyzx, r31.xyzx
            add r15.z, -r32.w, r15.z
            ge r15.w, r15.z, l(0.000000)
            max r15.z, r5.w, |r15.z|
            movc r15.z, r15.w, r15.z, -r15.z
            max r15.y, -r15.y, l(0.00000010)
            div r15.y, r15.z, r15.y
            min r14.w, r14.w, |r15.y|
            mov r32.z, r33.z
            dp3 r15.y, r9.xyzx, r32.xyzx
            dp3 r15.z, r24.xyzx, r32.xyzx
            add r15.z, -r33.w, r15.z
            ge r15.w, r15.z, l(0.000000)
            max r15.z, r5.w, |r15.z|
            movc r15.z, r15.w, r15.z, -r15.z
            max r15.y, -r15.y, l(0.00000010)
            div r15.y, r15.z, r15.y
            min r14.w, r14.w, |r15.y|
            mov r33.z, r34.z
            dp3 r15.y, r9.xyzx, r33.xyzx
            dp3 r15.z, r24.xyzx, r33.xyzx
            add r15.z, -r34.w, r15.z
            ge r15.w, r15.z, l(0.000000)
            max r15.z, r5.w, |r15.z|
            movc r15.z, r15.w, r15.z, -r15.z
            max r15.y, -r15.y, l(0.00000010)
            div r15.y, r15.z, r15.y
            min r14.w, r14.w, |r15.y|
            mov r34.z, r35.x
            dp3 r15.y, r9.xyzx, r34.xyzx
            dp3 r15.z, r24.xyzx, r34.xyzx
            add r15.z, -r35.y, r15.z
            ge r15.w, r15.z, l(0.000000)
            max r15.z, r5.w, |r15.z|
            movc r15.z, r15.w, r15.z, -r15.z
            max r15.y, -r15.y, l(0.00000010)
            div r15.y, r15.z, r15.y
            min r14.w, r14.w, |r15.y|
            mov r36.zw, r35.zzzw
            dp3 r15.y, r9.zxyz, r36.xzwx
            dp3 r15.z, r24.zxyz, r36.xzwx
            add r15.z, -r36.y, r15.z
            ge r15.w, r15.z, l(0.000000)
            max r15.z, r5.w, |r15.z|
            movc r15.z, r15.w, r15.z, -r15.z
            max r15.y, -r15.y, l(0.00000010)
            div r15.y, r15.z, r15.y
            min r14.w, r14.w, |r15.y|
            mov r23.x, r28.w
            mov r23.yz, r29.zzwz
            add r15.yzw, r24.xxyz, r23.xxyz
            mad r15.yzw, r9.xxyz, r14.wwww, r15.yyzw
            dp3 r16.w, r15.yzwy, r15.yzwy
            sqrt r16.w, r16.w
            div r14.w, r14.w, r16.w
            add r14.w, r14.w, r14.w
            sqrt r14.w, r14.w
            mad r14.w, r4.w, l(5.000000), r14.w
            add r14.w, r14.w, l(-0.844800)
            mov r22.y, r25.z
            mov r22.z, r27.x
            dp3 r31.x, r15.yzwy, r22.xyzx
            mov r23.xy, r25.xwxx
            mov r23.z, r27.w
            dp3 r31.y, r15.yzwy, r23.xyzx
            mov r27.x, r25.y
            dp3 r31.z, r15.yzwy, r27.xyzx
            ubfe r15.y, l(9), l(16), r23.w
            utof r31.w, r15.y
            sample_l_indexable(texturecubearray)(float,float,float,float) r15.yzw, r31.xyzw, t8.wxyz, s2, r14.w
            dp3 r25.x, r24.xyzx, r22.xyzx
            dp3 r25.y, r24.xyzx, r23.xyzx
            dp3 r25.z, r24.xyzx, r27.xyzx
            mad_sat r24.xyz, r25.xyzx, r28.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
            mov r29.z, r30.x
            mad r24.xyz, r24.xyzx, r29.xyzx, r30.yzwy
            dp3 r31.x, r0.xyzx, r22.xyzx
            dp3 r31.y, r0.xyzx, r23.xyzx
            dp3 r31.z, r0.xyzx, r27.xyzx
            lt r22.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r31.xyzx
            movc r14.z, r22.x, l(0), l(0.500000)
            add r23.xyz, r14.xyzx, r24.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r23.xyz, r23.xyzx, t17.xyzw, s4, l(0.000000)
            mul r25.xyz, r31.xyzx, r31.xyzx
            mul r25.xyz, r13.xxxx, r25.xyzx
            movc r16.z, r22.y, l(0), l(0.500000)
            add r22.xyw, r16.xyxz, r24.xyxz
            sample_l_indexable(texture3d)(float,float,float,float) r22.xyw, r22.xywx, t18.xywz, s4, l(0.000000)
            mul r22.xyw, r25.yyyy, r22.xyxw
            mad r22.xyw, r23.xyxz, r25.xxxx, r22.xyxw
            movc r17.z, r22.z, l(0), l(0.500000)
            add r23.xyz, r17.xyzx, r24.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r23.xyz, r23.xyzx, t19.xyzw, s4, l(0.000000)
            mad r22.xyz, r23.xyzx, r25.zzzz, r22.xywx
            sample_l_indexable(texturecubearray)(float,float,float,float) r23.xyz, r31.xyzw, t8.xyzw, s2, l(6.000000)
            mul r24.xyz, r22.xyzx, r23.xyzx
            dp3 r14.z, r24.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r12.xyz, r22.xyzx, r23.xyzx, r12.xyzx
            mul r14.w, r6.z, r14.z
            mul r15.yzw, r13.xxxx, r15.yyzw
            dp3 r13.x, r15.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r13.x, r6.z, r14.z, r13.x
            div r13.x, r14.w, r13.x
            mad r21.xyz, r15.yzwy, r13.xxxx, r21.xyzx
          endif 
        endif 
      endif 
    endloop 
    mov r20.xyzw, r21.xyzw
    mov r8.yzw, r12.xxyz
    iadd r7.w, r7.w, l(32)
  endloop 
  mov r19.xyzw, r20.zxyw
  mov r18.xyz, r8.yzwy
  mov r19.xyzw, r19.yzxw
else 
  mov r19.x, r18.w
endif 
max r1.x, r19.w, l(1.000000)
rcp r1.x, r1.x
mov_sat r19.w, r19.w
mul r11.xyz, r1.xxxx, r18.xyzx
mul r8.yzw, r1.xxxx, r19.xxyz
lt r1.y, r19.w, l(0.990000)
if_nz r1.y
  add r1.y, -r19.w, l(1.000000)
  mul r1.z, r1.y, cb2[19].x
  add r12.xyz, v6.xyzx, -cb2[35].xyzx
  mul r13.x, r12.x, cb2[35].w
  mul r13.yz, r12.yyzy, cb2[36].xxyx
  add_sat r12.xyz, r13.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mul r13.xy, r12.xyxx, cb2[36].zwzz
  mul r13.z, r12.z, cb2[37].x
  add r12.xyz, r13.xyzx, cb2[37].yzwy
  lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r0.xyzx
  movc r13.xyz, r13.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
  mov r13.w, l(0)
  add r14.xyz, r12.xyzx, r13.wwxw
  sample_l_indexable(texture3d)(float,float,float,float) r14.xyz, r14.xyzx, t17.xyzw, s4, l(0.000000)
  mul r15.xyz, r0.xyzx, r0.xyzx
  mul r15.xyz, r1.zzzz, r15.xyzx
  add r16.xyz, r12.xyzx, r13.wwyw
  sample_l_indexable(texture3d)(float,float,float,float) r16.xyz, r16.xyzx, t18.xyzw, s4, l(0.000000)
  mul r16.xyz, r15.yyyy, r16.xyzx
  mad r14.xyz, r14.xyzx, r15.xxxx, r16.xyzx
  add r12.xyz, r12.xyzx, r13.wwzw
  sample_l_indexable(texture3d)(float,float,float,float) r12.xyz, r12.xyzx, t19.xyzw, s4, l(0.000000)
  mad r12.xyz, r12.xyzx, r15.zzzz, r14.xyzx
  mov r0.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r13.xyz, r0.xyzw, t8.xyzw, s2, l(6.000000)
  mul r12.xyz, r12.xyzx, r13.xyzx
  dp3 r0.w, r12.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  mad r11.xyz, r18.xyzx, r1.xxxx, r12.xyzx
  mov r9.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r12.xyz, r9.xyzw, t8.xyzw, s2, r5.z
  mad r1.x, cb2[19].x, r1.y, -r0.w
  mad r0.w, r5.y, r1.x, r0.w
  mad r8.yzw, r12.xxyz, r0.wwww, r8.yyzw
endif 
mad r1.xy, r5.xyxx, l(0.984375, 0.984375, 0.000000, 0.000000), l(0.00781250, 0.00781250, 0.000000, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r1.xy, r1.xyxx, t5.xyzw, s2, l(0.000000)
mul r12.xyz, r1.xxxx, r8.zwyz
mul r1.xyz, r1.yyyy, r8.yzwy
sqrt r0.w, r4.z
mad r0.w, r0.w, l(0.500000), l(0.500000)
mul r0.w, r0.w, r0.w
mul r4.w, r0.w, l(0.500000)
mad r0.w, -r0.w, l(0.500000), l(1.000000)
mad r5.y, r5.x, r0.w, r4.w
mul r0.w, r0.w, r5.y
mul r4.w, r4.w, r5.y
dp3 r5.y, r0.xyzx, cb2[17].xyzx
mov_sat r5.z, r5.y
ge r5.w, l(0.000000), r5.z
if_nz r5.w
  mov r6.z, l(0)
endif 
if_z r5.w
  mul r8.yzw, v6.yyyy, cb2[29].xxyz
  mad r8.yzw, v6.xxxx, cb2[28].xxyz, r8.yyzw
  mad r8.yzw, v6.zzzz, cb2[30].xxyz, r8.yyzw
  add r8.yzw, r8.yyzw, cb2[31].xxyz
  add r5.w, r8.w, -cb2[17].w
  mad r5.w, -r5.w, l(0.00006104), l(1.000000)
  mov_sat r6.w, r5.w
  eq r6.w, r5.w, r6.w
  if_nz r6.w
    mov r6.w, l(0)
    mov r7.w, l(0)
    loop 
      ge r9.w, r6.w, l(3.000000)
      breakc_nz r9.w
      ftou r9.w, r6.w
      add r13.xy, r8.yzyy, -cb2[r9.w + 20].xyxx
      max r10.w, |r13.y|, |r13.x|
      mul r7.w, r10.w, cb2[r9.w + 20].z
      lt r9.w, r7.w, l(1.000000)
      if_nz r9.w
        break 
      endif 
      add r6.w, r6.w, l(1.000000)
      mov r7.w, l(0)
    endloop 
  else 
    mov r6.w, l(3.000000)
    mov r7.w, l(0)
  endif 
  ge r9.w, r6.w, l(3.000000)
  if_nz r9.w
    mul r13.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
    rcp r14.xz, r13.xxxx
    mov r14.y, -r14.z
    mad r13.xyz, r8.yzyy, r14.xyzx, r13.yzyy
    add r14.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r13.xyz, r13.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r13.xyz, r14.xyzx, r13.xyzx
    mul r14.xy, r13.zyzz, cb2[32].xxxx
    round_ni r14.xy, r14.xyxx
    mul r10.w, r14.y, cb2[27].x
    mad r10.w, r10.w, cb2[32].x, r14.x
    ftou r10.w, r10.w
    iadd r10.w, r10.w, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r13.w, r10.w, l(0), t23.xxxx
    and r14.x, r13.w, l(0x40000000)
    ishl r14.y, r13.w, l(2)
    if_z r14.x
      and r14.x, r13.w, l(0x01ffffff)
      iadd r15.x, r10.w, r14.x
      ushr r10.w, r13.w, l(25)
      utof r10.w, r10.w
      mul r13.xyz, r10.wwww, r13.xyzx
      frc r13.xyz, r13.xyzx
      mul r13.xyz, r13.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
      ftou r13.xyz, r13.xyzx
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.z, r15.x, l(0), t23.xxxx
      ushr r14.xz, r13.zzyz, l(6, 0, 6, 0)
      and r10.w, r15.z, l(0xc0000000)
      iadd r13.w, r15.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r13.w, r13.w, l(0), t23.xxxx
      movc r13.w, r14.z, r15.z, r13.w
      ushr r14.z, r13.w, l(13)
      movc r13.w, r14.x, r14.z, r13.w
      and r13.w, r13.w, l(8191)
      iadd r16.x, r13.w, r15.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.z, r16.x, l(0), t23.xxxx
      mov r15.y, l(0)
      mov r16.y, l(1)
      movc r14.xzw, r10.wwww, r15.xxyz, r16.xxyz
      movc r16.yz, r10.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r17.xy, r13.zyzz, r16.yyyy
      and r17.xy, r17.xyxx, l(1, 1, 0, 0)
      and r13.w, r14.w, l(0xc0000000)
      iadd r15.w, r14.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.w, r15.w, l(0), t23.xxxx
      movc r15.w, r17.y, r14.w, r15.w
      ushr r16.y, r15.w, l(13)
      movc r15.w, r17.x, r16.y, r15.w
      and r15.w, r15.w, l(8191)
      iadd r16.x, r14.x, r15.w
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.w, r16.x, l(0), t23.xxxx
      movc r14.xzw, r13.wwww, r14.xxzw, r16.xxzw
      movc r14.xzw, r10.wwww, r15.xxyz, r14.xxzw
      and r10.w, r14.w, l(0xc0000000)
      if_z r10.w
        iadd r10.w, -r14.z, l(6)
        ushr r15.xy, r13.zyzz, r10.wwww
        or r10.w, r14.w, l(0x40000000)
        bfi r13.w, l(1), l(1), r15.y, l(0)
        bfi r13.w, l(1), l(0), r15.x, r13.w
        imul null, r13.w, r13.w, l(10)
        ushr r10.w, r10.w, r13.w
        and r10.w, r10.w, l(1023)
        iadd r15.x, r10.w, r14.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.w, r15.x, l(0), t23.xxxx
        iadd r15.yz, r14.zzzz, l(0, 1, 2, 0)
        iadd r10.w, -r15.y, l(6)
        ushr r16.xy, r13.zyzz, r10.wwww
        and r10.w, r15.w, l(0xc0000000)
        or r13.w, r15.w, l(0x40000000)
        bfi r14.z, l(1), l(1), r16.y, l(0)
        bfi r14.z, l(1), l(0), r16.x, r14.z
        imul null, r14.z, r14.z, l(10)
        ushr r13.w, r13.w, r14.z
        and r13.w, r13.w, l(1023)
        iadd r16.x, r13.w, r15.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.z, r16.x, l(0), t23.xxxx
        mov r16.y, r15.z
        movc r16.xyz, r10.wwww, r15.xywx, r16.xyzx
        iadd r13.w, -r16.y, l(6)
        ushr r15.yz, r13.zzyz, r13.wwww
        and r13.w, r16.z, l(0xc0000000)
        or r14.z, r16.z, l(0x40000000)
        bfi r15.z, l(1), l(1), r15.z, l(0)
        bfi r15.y, l(1), l(0), r15.y, r15.z
        imul null, r15.y, r15.y, l(10)
        ushr r14.z, r14.z, r15.y
        and r14.z, r14.z, l(1023)
        iadd r17.x, r14.z, r16.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.y, r17.x, l(0), t23.xxxx
        movc r15.yz, r13.wwww, r16.xxzx, r17.xxyx
        movc r14.xw, r10.wwww, r15.xxxw, r15.yyyz
      endif 
      and r10.w, r14.w, l(0xc0000000)
      if_z r10.w
        ubfe r13.w, l(14), l(15), r14.w
        utof r13.w, r13.w
        mul r13.w, r13.w, cb2[27].w
        mul r13.w, r13.w, l(0.00006104)
        and r15.xy, r14.wwww, l(0x00007fff, 0x20000000, 0, 0)
        utof r14.z, r15.x
        mul r14.z, r14.z, cb2[27].w
        mul r14.z, r14.z, l(0.00003052)
        and r15.x, r13.y, l(3)
        iadd r15.x, r14.x, r15.x
        iadd r15.x, r15.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.x, r15.x, l(0), t23.xxxx
        bfi r16.xyz, l(2, 2, 1, 0), l(3, 1, 4, 0), r13.xyzx, l(0, 0, 0, 0)
        ushr r13.x, r15.x, r16.x
        and r13.x, r13.x, l(255)
        utof r13.x, r13.x
        mul r13.x, r14.z, r13.x
        mad r13.x, r13.x, l(0.00392157), r13.w
        iadd r13.y, r16.y, l(1)
        ubfe r13.z, l(1), l(1), r13.z
        iadd r13.y, r13.z, r13.y
        iadd r13.y, r13.y, r14.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r13.y, r13.y, l(0), t23.xxxx
        ushr r13.y, r13.y, r16.z
        and r13.y, r13.y, l(0x0000ffff)
        utof r13.y, r13.y
        mul r13.y, r14.z, r13.y
        mad r13.y, r13.y, l(0.00001526), r13.w
        movc r14.y, r15.y, r13.x, r13.y
      else 
        and r13.x, r14.w, l(0x80000000)
        iadd r13.y, r14.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r13.y, r13.y, l(0), t23.xxxx
        movc r13.x, r13.x, r13.y, l(0)
        ishl r13.y, r14.w, l(2)
        ushr r13.z, r13.x, l(16)
        and r13.x, r13.x, l(0x0000ffff)
        f16tof32 r13.xz, r13.xxzx
        mad r13.y, r8.y, r13.z, r13.y
        mad r13.x, r8.z, r13.x, r13.y
        movc r14.y, r10.w, r13.x, r14.y
      endif 
    endif 
    mad r8.w, -cb2[27].z, l(2.000000), r8.w
    lt r8.w, r14.y, r8.w
    movc r6.z, r8.w, l(0), l(1.000000)
  endif 
  if_z r9.w
    if_z cb2[58].y
      ftou r8.w, r6.w
      add r13.xy, r8.yzyy, -cb2[r8.w + 20].xyxx
      mul r13.xy, r13.xyxx, cb2[r8.w + 20].zzzz
      mad r13.xy, r13.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r8.w, cb2[26].y
      add r13.z, r6.w, r8.w
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r8.w, r13.xyzx, t13.xxxx, s13, r5.w
      sample_l_indexable(texture2darray)(float,float,float,float) r9.w, r13.xyzx, t31.yzwx, s0, l(0.000000)
      add r8.w, r8.w, r9.w
      add_sat r8.w, r8.w, l(-1.000000)
      mul r9.w, r8.w, r8.w
      mul r6.z, r8.w, r9.w
    endif 
    if_nz cb2[58].y
      mov r13.x, -r6.x
      ftou r8.w, r6.w
      add r6.w, r6.w, l(1.000000)
      min r6.w, r6.w, l(2.000000)
      ftou r6.w, r6.w
      add r7.w, -r7.w, l(1.000000)
      mul r7.w, r7.w, l(28.000000)
      ftou r7.w, r7.w
      add r14.xy, r8.yzyy, -cb2[r8.w + 20].xyxx
      mul r14.xy, r14.xyxx, cb2[r8.w + 20].zzzz
      mad r14.xy, r14.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      add r8.yz, r8.yyzy, -cb2[r6.w + 20].xxyx
      mul r8.yz, r8.yyzy, cb2[r6.w + 20].zzzz
      mad r8.yz, r8.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      mov r13.y, r7.x
      mov r13.z, r6.x
      mov r9.w, l(0)
      mov r10.w, l(0)
      loop 
        uge r13.w, r10.w, l(8)
        breakc_nz r13.w
        ult r13.w, r7.w, r10.w
        movc r14.zw, r13.wwww, r8.yyyz, r14.xxxy
        movc r15.x, r13.w, cb2[r6.w + 20].w, cb2[r8.w + 20].w
        movc r13.w, r13.w, r6.w, r8.w
        dp2 r16.x, icb[r10.w + 0].yxyy, r13.xyxx
        dp2 r16.y, icb[r10.w + 0].yxyy, r13.yzyy
        mad r15.xy, r16.xyxx, r15.xxxx, r14.zwzz
        iadd r13.w, r13.w, cb2[26].y
        utof r15.z, r13.w
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r13.w, r15.xyzx, t13.xxxx, s13, r5.w
        sample_l_indexable(texture2darray)(float,float,float,float) r14.z, r15.xyzx, t31.yzxw, s0, l(0.000000)
        add r13.w, r13.w, r14.z
        add_sat r13.w, r13.w, l(-1.000000)
        mad r9.w, r13.w, l(0.125000), r9.w
        iadd r10.w, r10.w, l(1)
      endloop 
      mul r5.w, r9.w, r9.w
      mul r6.z, r9.w, r5.w
    endif 
  endif 
endif 
lt r5.w, l(0.000000), r5.z
if_nz r5.w
  lt r5.w, l(0.000000), r6.z
  if_nz r5.w
    mul r5.w, r4.y, cb2[18].w
    mul r5.w, r5.z, r5.w
    if_nz cb2[23].x
      add r13.xyz, v6.xyzx, cb1[24].xyzx
      mov r13.w, l(1.000000)
      dp4 r6.w, cb2[24].xyzw, r13.xyzw
      dp4 r7.w, cb2[25].xyzw, r13.xyzw
      frc r13.x, r6.w
      frc r13.y, r7.w
      iadd r6.w, l(-1), cb2[23].x
      utof r13.z, r6.w
      sample_l_indexable(texture2darray)(float,float,float,float) r8.yzw, r13.xyzx, t20.wxyz, s2, l(0.000000)
      add r8.yzw, r8.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
      mad r8.yzw, cb2[23].yyyy, r8.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
      mul r8.yzw, r8.yyzw, cb2[18].xxyz
    else 
      mov r8.yzw, cb2[18].xxyz
    endif 
    ushr r6.w, cb2[53].x, l(16)
    ult r7.w, l(0), r6.w
    and r7.w, r2.w, r7.w
    if_nz r7.w
      iadd r6.w, r6.w, cb2[0].x
      iadd r6.w, r6.w, l(-1)
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r7.w, r6.w, l(52), t12.xxxx
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.xyzw, r6.w, l(68), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.xyzw, r6.w, l(84), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r6.w, l(132), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r6.w, l(148), t12.xyzw
      mad r9.w, |r5.y|, l(-0.200000), l(0.400000)
      mad r17.xyz, r0.xyzx, r9.wwww, v6.xyzx
      mov r17.w, l(1.000000)
      dp4 r13.x, r13.xyzw, r17.xyzw
      dp4 r13.y, r14.xyzw, r17.xyzw
      mad r13.xy, r13.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      add r13.xy, r16.zwzz, r13.xyxx
      mul r13.xy, r16.xyxx, r13.xyxx
      div r13.zw, r7.wwww, r15.xxxz
      add r14.xy, -r13.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
      ge r14.xy, r13.xyxx, r14.xyxx
      ge r13.zw, r13.zzzw, r13.xxxy
      or r13.zw, r13.zzzw, r14.xxxy
      or r9.w, r13.w, r13.z
      if_z r9.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r9.w, r6.w, l(28), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.xyzw, r6.w, l(100), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.zw, r6.w, l(164), t12.xxxy
        dp4 r6.w, r14.xyzw, r17.xyzw
        mov_sat r13.xy, r13.xyxx
        mad r14.xy, r13.xyxx, r15.xzxx, r15.ywyy
        add r6.w, r13.z, r6.w
        div r6.w, r6.w, r13.w
        max r6.w, r6.w, l(0.00006104)
        and r9.w, r9.w, l(0x0000ffff)
        if_nz cb2[58].y
          mov r13.x, -r6.x
          utof r15.z, r9.w
          mov r13.y, r7.x
          mov r13.z, r6.x
          mov r10.w, l(0)
          mov r13.w, l(0)
          loop 
            ige r14.w, r13.w, l(8)
            breakc_nz r14.w
            dp2 r16.x, icb[r13.w + 0].yxyy, r13.xyxx
            dp2 r16.y, icb[r13.w + 0].yxyy, r13.yzyy
            mad r15.xy, r16.xyxx, r7.wwww, r14.xyxx
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r14.w, r15.xyzx, t9.xxxx, s13, r6.w
            mad r10.w, r14.w, l(0.125000), r10.w
            iadd r13.w, r13.w, l(1)
          endloop 
        else 
          utof r14.z, r9.w
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.w, r14.xyzx, t9.xxxx, s13, r6.w
        endif 
        mul r6.w, r10.w, r10.w
        mul r6.w, r10.w, r6.w
      else 
        mov r6.w, l(1.000000)
      endif 
      mul r6.z, r6.w, r6.z
    else 
      and r6.w, cb2[53].x, l(0x0000ffff)
      ult r7.w, l(0), r6.w
      not r9.w, r2.w
      and r7.w, r7.w, r9.w
      if_nz r7.w
        iadd r6.w, r6.w, cb2[0].x
        iadd r6.w, r6.w, l(-1)
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r7.w, r6.w, l(52), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.xyzw, r6.w, l(68), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.xyzw, r6.w, l(84), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r6.w, l(132), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r6.w, l(148), t12.xyzw
        mad r9.w, |r5.y|, l(-0.200000), l(0.400000)
        mad r17.xyz, r0.xyzx, r9.wwww, v6.xyzx
        mov r17.w, l(1.000000)
        dp4 r13.x, r13.xyzw, r17.xyzw
        dp4 r13.y, r14.xyzw, r17.xyzw
        mad r13.xy, r13.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
        add r13.xy, r16.zwzz, r13.xyxx
        mul r13.xy, r16.xyxx, r13.xyxx
        div r13.zw, r7.wwww, r15.xxxz
        add r14.xy, -r13.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
        ge r14.xy, r13.xyxx, r14.xyxx
        ge r13.zw, r13.zzzw, r13.xxxy
        or r13.zw, r13.zzzw, r14.xxxy
        or r9.w, r13.w, r13.z
        if_z r9.w
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r9.w, r6.w, l(28), t12.xxxx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.xyzw, r6.w, l(100), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.zw, r6.w, l(164), t12.xxxy
          dp4 r6.w, r14.xyzw, r17.xyzw
          mov_sat r13.xy, r13.xyxx
          mad r14.xy, r13.xyxx, r15.xzxx, r15.ywyy
          add r6.w, r13.z, r6.w
          div r6.w, r6.w, r13.w
          max r6.w, r6.w, l(0.00006104)
          and r9.w, r9.w, l(0x0000ffff)
          if_nz cb2[58].y
            mov r13.x, -r6.x
            utof r15.z, r9.w
            mov r13.y, r7.x
            mov r13.z, r6.x
            mov r10.w, l(0)
            mov r13.w, l(0)
            loop 
              ige r14.w, r13.w, l(8)
              breakc_nz r14.w
              dp2 r16.x, icb[r13.w + 0].yxyy, r13.xyxx
              dp2 r16.y, icb[r13.w + 0].yxyy, r13.yzyy
              mad r15.xy, r16.xyxx, r7.wwww, r14.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r14.w, r15.xyzx, t9.xxxx, s13, r6.w
              mad r10.w, r14.w, l(0.125000), r10.w
              iadd r13.w, r13.w, l(1)
            endloop 
          else 
            utof r14.z, r9.w
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.w, r14.xyzx, t9.xxxx, s13, r6.w
          endif 
          mul r6.w, r10.w, r10.w
          mul r6.w, r10.w, r6.w
        else 
          mov r6.w, l(1.000000)
        endif 
        mul r6.z, r6.w, r6.z
      endif 
    endif 
    mad r6.w, -r5.x, l(0.500000), l(1.000000)
    mad r6.w, -r5.z, r6.w, l(1.000000)
    mul r6.w, r6.w, r6.w
    mad r6.w, -r6.w, l(0.620000), l(0.620000)
    add r6.w, -r5.z, r6.w
    mad r6.w, r4.z, r6.w, r5.z
    mul r6.w, r6.z, r6.w
    lt r5.y, l(0.000000), r5.y
    mad r13.xyz, r6.wwww, r8.yzwy, r11.xyzx
    mad r14.xyz, -v6.xyzx, r1.wwww, cb2[17].xyzx
    dp3 r1.w, r14.xyzx, r14.xyzx
    rsq r1.w, r1.w
    mul r14.xyz, r1.wwww, r14.xyzx
    dp3 r1.w, r14.xyzx, r2.xyzx
    dp3 r6.w, r0.xyzx, r14.xyzx
    mad r7.w, |r6.w|, r4.y, -|r6.w|
    mad r6.w, |r6.w|, r7.w, l(1.000000)
    mad r5.z, r5.z, r0.w, r4.w
    mul r6.w, r6.w, r6.w
    mul r5.z, r5.z, r6.w
    rcp r5.z, r5.z
    mul r5.z, r5.w, r5.z
    mul r5.z, r5.z, r6.z
    mul r5.z, r5.z, l(0.250000)
    mad r14.xyz, r5.zzzz, r8.yzwy, r1.xyzx
    add_sat r1.w, -r1.w, l(1.000000)
    mul r5.w, r1.w, r1.w
    mul r5.w, r5.w, r5.w
    mul r1.w, r1.w, r5.w
    mul r1.w, r1.w, r5.z
    mad r15.xyz, r1.wwww, r8.zwyz, r12.xyzx
    mov r13.w, r15.z
    mov r11.w, r12.z
    movc r11.xyzw, r5.yyyy, r13.xyzw, r11.xyzw
    mov r15.zw, r14.xxxy
    mov r12.zw, r1.xxxy
    movc r13.xyzw, r5.yyyy, r15.xyzw, r12.xyzw
    movc r1.z, r5.y, r14.z, r1.z
    mov r12.z, r11.w
    mov r12.xy, r13.xyxx
    mov r1.xy, r13.zwzz
  endif 
endif 
mov r13.x, -r6.x
not r1.w, r2.w
mad r5.x, -r5.x, l(0.500000), l(1.000000)
mov r14.xy, l(0,0,0,0)
mov r15.w, l(0)
mov r16.xyz, v6.xyzx
mov r16.w, l(1.000000)
mov r17.w, l(1.000000)
mov r13.z, r6.x
mov r18.w, l(1.000000)
mov r19.z, l(1.000000)
mov r20.w, l(1.000000)
mov r13.yw, r7.xxxx
mov r6.y, r13.w
mov r21.w, l(1.000000)
mov r7.y, r13.x
mov r7.z, r6.x
mov r22.w, l(1.000000)
mov r23.x, r7.x
mov r23.y, r13.x
mov r23.z, r6.x
mov r24.x, r7.x
mov r24.y, r13.x
mov r24.z, r6.x
mov r25.x, r7.x
mov r25.y, r13.x
mov r25.z, r6.x
mov r5.yzw, r11.xxyz
mov r26.xyz, r12.zxyz
mov r27.xyz, r1.xyzx
mov r6.z, cb2[58].y
mov r6.w, l(0)
loop 
  uge r7.w, r6.w, cb2[0].x
  breakc_nz r7.w
  ushr r14.z, r6.w, l(5)
  iadd r15.xyz, r10.xyzx, r14.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r7.w, r15.xyzw, t6.yzwx
  mov r8.yzw, r5.yyzw
  mov r15.xyz, r26.xyzx
  mov r28.xyz, r27.xyzx
  mov r9.w, r6.z
  mov r10.w, r7.w
  loop 
    breakc_z r10.w
    firstbit_lo r11.w, r10.w
    ishl r12.w, l(1), r11.w
    and r14.z, r10.w, r12.w
    if_nz r14.z
      xor r10.w, r10.w, r12.w
      iadd r11.w, r6.w, r11.w
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r29.xyzw, r11.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r30.xy, r11.w, l(16), t11.xyxx
      add r29.xyz, r29.xyzx, -v6.xyzx
      mov r30.z, r29.w
      lt r29.xyz, |r29.xyzx|, r30.zxyz
      and r12.w, r29.y, r29.x
      and r12.w, r29.z, r12.w
      if_nz r12.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r29.xyzw, r11.w, l(0), t12.wxyz
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r30.xyzw, r11.w, l(16), t12.zxyw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r11.w, l(32), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r11.w, l(48), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r11.w, l(64), t12.yzwx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r11.w, l(80), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r11.w, l(96), t12.yzwx
        ubfe r12.w, l(3), l(24), r30.w
        switch r12.w
          case l(4)
          lt r12.w, l(0.000000), r35.x
          mov r36.xy, r34.zwzz
          mov r36.z, r35.w
          mad r37.xyz, -r36.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r29.yzwy
          add r38.xyz, r37.xyzx, -v6.xyzx
          dp3 r14.z, r36.xyzx, r38.xyzx
          div_sat r14.w, -r14.z, r35.x
          mad r39.xyz, r14.wwww, r36.xyzx, r37.xyzx
          movc r39.xyz, r12.wwww, r39.xyzx, r29.yzwy
          add r39.xyz, r39.xyzx, -v6.xyzx
          dp3 r19.w, r39.xyzx, r39.xyzx
          rsq r23.w, r19.w
          mul r39.xyz, r23.wwww, r39.xyzx
          dp3 r23.w, r0.xyzx, r39.xyzx
          mov_sat r24.w, r23.w
          lt r25.w, l(0.000000), r24.w
          if_nz r25.w
            sqrt r25.w, r19.w
            mul r26.w, r32.x, r32.x
            div r19.w, r26.w, r19.w
            min r19.w, r19.w, l(1.000000)
            mad_sat r39.xy, r25.wwww, r31.xzxx, r31.ywyy
            mul r39.zw, r39.xxxy, r39.xxxy
            mad r39.xy, r39.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
            mul r39.xy, r39.xyxx, r39.zwzz
            mul r19.w, r19.w, r39.x
            mul r19.w, r39.y, r19.w
            lt r25.w, l(0.000000), r19.w
            if_nz r25.w
              ubfe r25.w, l(3), l(27), r30.w
              ine r25.w, r25.w, l(1)
              if_nz r25.w
                mad r25.w, |r23.w|, l(-0.200000), l(0.400000)
                mad r39.xyz, r0.xyzx, r25.wwww, v6.xyzx
                add r39.xyz, -r33.xyzx, r39.xyzx
                max r25.w, |r39.z|, |r39.y|
                max r25.w, r25.w, |r39.x|
                div r25.w, r34.x, r25.w
                add r25.w, r34.y, r25.w
                dp3 r26.w, r39.xyzx, r39.xyzx
                rsq r26.w, r26.w
                max r25.w, r25.w, l(0.00006104)
                and r27.w, r30.w, l(0x0000ffff)
                utof r40.w, r27.w
                mov r27.w, l(0)
                mov r28.w, l(0)
                loop 
                  ige r36.w, r28.w, l(8)
                  breakc_nz r36.w
                  dp2 r41.y, icb[r28.w + 0].yxyy, r13.xyxx
                  dp2 r41.z, icb[r28.w + 0].yxyy, r13.yzyy
                  mul r41.yz, r32.yyyy, r41.yyzy
                  mul r41.x, r8.x, r41.y
                  mul r41.w, r4.x, r41.y
                  mad r40.xyz, r39.xyzx, r26.wwww, r41.xzwx
                  sample_c_lz_indexable(texturecubearray)(float,float,float,float) r36.w, r40.xyzw, t10.xxxx, s13, r25.w
                  mad r27.w, r36.w, l(0.125000), r27.w
                  iadd r28.w, r28.w, l(1)
                endloop 
              else 
                mov r27.w, l(1.000000)
              endif 
              mul r19.w, r19.w, r27.w
              lt r25.w, l(0.000000), r19.w
              if_nz r25.w
                mul r25.w, r4.y, r30.x
                mul r25.w, r25.w, l(0.250000)
                dp3 r26.w, r36.xyzx, r9.xyzx
                dp3 r28.w, r9.xyzx, r38.xyzx
                mad r36.w, -r26.w, r26.w, r35.x
                mad r14.z, r26.w, r28.w, -r14.z
                div_sat r14.z, r14.z, r36.w
                div r26.w, r36.w, r35.x
                mul r26.w, r26.w, l(10.000000)
                min r26.w, r26.w, l(1.000000)
                add r14.z, -r14.w, r14.z
                mad r14.z, r26.w, r14.z, r14.w
                mad r36.xyz, r14.zzzz, r36.xyzx, r37.xyzx
                movc r36.xyz, r12.wwww, r36.xyzx, r29.yzwy
                add r36.xyz, r36.xyzx, -v6.xyzx
                dp3 r12.w, r36.xyzx, r36.xyzx
                rsq r12.w, r12.w
                mul r37.xyz, r12.wwww, r36.xyzx
                ubfe r14.z, l(4), l(16), r30.w
                ult r14.w, l(0), r14.z
                and r14.w, r2.w, r14.w
                if_nz r14.w
                  iadd r14.z, r14.z, cb2[0].x
                  iadd r14.z, r14.z, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.w, r14.z, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r14.z, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r14.z, l(116), t12.xyzw
                  mad r26.w, |r23.w|, l(-0.200000), l(0.400000)
                  mad r17.xyz, r0.xyzx, r26.wwww, v6.xyzx
                  dp4 r26.w, r38.xyzw, r17.xyzw
                  dp4 r28.w, r39.xyzw, r17.xyzw
                  lt r36.w, r28.w, r26.w
                  if_z r36.w
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r14.z, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r14.z, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r14.z, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r14.z, l(148), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xy, r14.z, l(164), t12.xyxx
                    dp4 r38.x, r38.xyzw, r17.xyzw
                    dp4 r38.y, r39.xyzw, r17.xyzw
                    div r17.xy, r38.xyxx, r28.wwww
                    mad r17.xy, r17.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r17.xy, r41.zwzz, r17.xyxx
                    mul r17.xy, r41.xyxx, r17.xyxx
                    div r38.xy, r14.wwww, r40.xzxx
                    add r38.zw, -r38.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                    ge r38.zw, r17.xxxy, r38.zzzw
                    ge r38.xy, r38.xyxx, r17.xyxx
                    or r38.xy, r38.xyxx, r38.zwzz
                    or r17.z, r38.y, r38.x
                    mov_sat r17.xy, r17.xyxx
                    mad r38.xy, r17.xyxx, r40.xzxx, r40.ywyy
                    mul r17.x, r28.w, r42.y
                    mad r17.y, r42.x, r28.w, r26.w
                    div r17.x, r17.y, r17.x
                  else 
                    mov r17.z, l(-1)
                  endif 
                  or r17.y, r36.w, r17.z
                  if_z r17.y
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.z, r14.z, l(28), t12.xxxx
                    max r17.x, r17.x, l(0.00006104)
                    and r14.z, r14.z, l(0x0000ffff)
                    if_nz r9.w
                      utof r39.z, r14.z
                      mov r17.yz, l(0,0,0,0)
                      loop 
                        ige r26.w, r17.z, l(8)
                        breakc_nz r26.w
                        dp2 r40.x, icb[r17.z + 0].yxyy, r13.xwxx
                        dp2 r40.y, icb[r17.z + 0].xyxx, r6.xyxx
                        mad r39.xy, r40.xyxx, r14.wwww, r38.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r26.w, r39.xyzx, t9.xxxx, s13, r17.x
                        mad r17.y, r26.w, l(0.125000), r17.y
                        iadd r17.z, r17.z, l(1)
                      endloop 
                    else 
                      utof r38.z, r14.z
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r17.y, r38.xyzx, t9.xxxx, s13, r17.x
                    endif 
                    mul r14.z, r17.y, r17.y
                    mul r14.z, r17.y, r14.z
                  else 
                    mov r14.z, l(1.000000)
                  endif 
                  mul r19.w, r14.z, r19.w
                else 
                  ubfe r14.z, l(4), l(20), r30.w
                  ult r14.w, l(0), r14.z
                  and r14.w, r1.w, r14.w
                  if_nz r14.w
                    iadd r14.z, r14.z, cb2[0].x
                    iadd r14.z, r14.z, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.w, r14.z, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r14.z, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r14.z, l(116), t12.xyzw
                    mad r17.x, |r23.w|, l(-0.200000), l(0.400000)
                    mad r18.xyz, r0.xyzx, r17.xxxx, v6.xyzx
                    dp4 r17.x, r38.xyzw, r18.xyzw
                    dp4 r17.z, r39.xyzw, r18.xyzw
                    lt r26.w, r17.z, r17.x
                    if_z r26.w
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r14.z, l(68), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r14.z, l(84), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r14.z, l(132), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r14.z, l(148), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xy, r14.z, l(164), t12.xyxx
                      dp4 r38.x, r38.xyzw, r18.xyzw
                      dp4 r38.y, r39.xyzw, r18.xyzw
                      div r18.xy, r38.xyxx, r17.zzzz
                      mad r18.xy, r18.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                      add r18.xy, r41.zwzz, r18.xyxx
                      mul r18.xy, r41.xyxx, r18.xyxx
                      div r38.xy, r14.wwww, r40.xzxx
                      add r38.zw, -r38.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                      ge r38.zw, r18.xxxy, r38.zzzw
                      ge r38.xy, r38.xyxx, r18.xyxx
                      or r38.xy, r38.xyxx, r38.zwzz
                      or r18.z, r38.y, r38.x
                      mov_sat r18.xy, r18.xyxx
                      mad r38.xy, r18.xyxx, r40.xzxx, r40.ywyy
                      mul r18.x, r17.z, r42.y
                      mad r17.x, r42.x, r17.z, r17.x
                      div r17.x, r17.x, r18.x
                    else 
                      mov r18.z, l(-1)
                    endif 
                    or r17.z, r26.w, r18.z
                    if_z r17.z
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.z, r14.z, l(28), t12.xxxx
                      max r17.x, r17.x, l(0.00006104)
                      and r14.z, r14.z, l(0x0000ffff)
                      if_nz r9.w
                        utof r18.z, r14.z
                        mov r17.z, l(0)
                        mov r26.w, l(0)
                        loop 
                          ige r28.w, r26.w, l(8)
                          breakc_nz r28.w
                          dp2 r39.x, icb[r26.w + 0].xyxx, r7.xyxx
                          dp2 r39.y, icb[r26.w + 0].yxyy, r7.xzxx
                          mad r18.xy, r39.xyxx, r14.wwww, r38.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r18.x, r18.xyzx, t9.xxxx, s13, r17.x
                          mad r17.z, r18.x, l(0.125000), r17.z
                          iadd r26.w, r26.w, l(1)
                        endloop 
                      else 
                        utof r38.z, r14.z
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r17.z, r38.xyzx, t9.xxxx, s13, r17.x
                      endif 
                      mul r14.z, r17.z, r17.z
                      mul r14.z, r17.z, r14.z
                    else 
                      mov r14.z, l(1.000000)
                    endif 
                    mul r19.w, r14.z, r19.w
                  endif 
                endif 
                mad r14.z, -r24.w, r5.x, l(1.000000)
                mul r14.z, r14.z, r14.z
                mad r14.z, -r14.z, l(0.620000), l(0.620000)
                add r14.z, -r24.w, r14.z
                mad r14.z, r4.z, r14.z, r24.w
                mul r14.z, r19.w, r14.z
                mov r30.x, r29.x
                lt r14.w, l(0.000000), r23.w
                mad r18.xyz, r14.zzzz, r30.xyzx, r8.yzwy
                dp3_sat r14.z, r0.xyzx, r37.xyzx
                mad r36.xyz, r36.xyzx, r12.wwww, r2.xyzx
                dp3 r12.w, r36.xyzx, r36.xyzx
                rsq r12.w, r12.w
                mul r36.xyz, r12.wwww, r36.xyzx
                dp3 r12.w, r36.xyzx, r2.xyzx
                dp3 r17.x, r0.xyzx, r36.xyzx
                mad r23.w, |r17.x|, r4.y, -|r17.x|
                mad r17.x, |r17.x|, r23.w, l(1.000000)
                mad r23.w, r14.z, r0.w, r4.w
                mul r17.x, r17.x, r17.x
                mul r17.x, r23.w, r17.x
                rcp r17.x, r17.x
                mul r14.z, r25.w, r14.z
                mul r14.z, r14.z, r17.x
                mul r14.z, r19.w, r14.z
                mad r36.xyz, r14.zzzz, r30.xyzx, r28.xyzx
                add_sat r12.w, -r12.w, l(1.000000)
                mul r17.x, r12.w, r12.w
                mul r17.x, r17.x, r17.x
                mul r12.w, r12.w, r17.x
                mul r12.w, r12.w, r14.z
                mad r37.xyz, r12.wwww, r30.xyzx, r15.xyzx
                movc r8.yzw, r14.wwww, r18.xxyz, r8.yyzw
                movc r15.xyz, r14.wwww, r37.xyzx, r15.xyzx
                movc r28.xyz, r14.wwww, r36.xyzx, r28.xyzx
              endif 
            endif 
          endif 
          break 
          case l(2)
          mov r18.xy, r32.zwzz
          mov r18.z, r33.w
          add r18.xyz, r18.xyzx, -v6.xyzx
          dp3 r12.w, r18.xyzx, r18.xyzx
          rsq r12.w, r12.w
          mul r36.xyz, r12.wwww, r18.xyzx
          dp3 r14.z, r0.xyzx, r36.xyzx
          mov_sat r14.w, r14.z
          lt r17.x, l(0.000000), r14.w
          if_nz r17.x
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r11.w, l(112), t12.yzwx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r11.w, l(128), t12.zxyw
            mov r38.xyz, r36.xyzx
            mov r38.w, r37.y
            dp4 r17.x, r38.xyzw, r16.xyzw
            lt r19.w, r17.x, l(1.000000)
            if_nz r19.w
              mov r39.xyz, l(1.000000,1.000000,1.000000,0)
              mov r19.w, l(0)
            else 
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r11.w, l(172), t12.yzwx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r11.w, l(188), t12.wxyz
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r11.w, l(204), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.w, r11.w, l(236), t12.xxxx
              add r43.xyz, r29.yzwy, -v6.xyzx
              mul r24.w, r32.x, r32.x
              dp3 r25.w, r43.xyzx, r43.xyzx
              div r24.w, r24.w, r25.w
              min r24.w, r24.w, l(1.000000)
              mad_sat r31.xy, r17.xxxx, r31.xzxx, r31.ywyy
              mul r31.zw, r31.xxxy, r31.xxxy
              mad r31.xy, r31.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
              mul r31.xy, r31.xyxx, r31.zwzz
              mul r24.w, r24.w, r31.x
              mul r24.w, r31.y, r24.w
              mov r33.w, r34.x
              dp4 r31.x, r33.xyzw, r16.xyzw
              mov r43.xyz, r34.yzwy
              mov r43.w, r35.w
              dp4 r31.y, r43.xyzw, r16.xyzw
              div r19.xy, r31.xyxx, r17.xxxx
              lt r17.x, r40.w, l(0.00048828)
              if_nz r17.x
                mov r41.y, r42.x
                mad_sat r31.xy, |r19.xyxx|, r41.zwzz, r41.xyxx
                mul r31.zw, r31.xxxy, r31.xxxy
                mad r31.xy, r31.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
                mul r31.xy, r31.xyxx, r31.zwzz
                mul r17.x, r31.y, r31.x
              else 
                mov r40.w, r41.y
                mul_sat r31.xyzw, |r19.yyxx|, r40.xyzw
                log r31.xyzw, r31.xyzw
                mul r31.xyzw, r31.xyzw, r41.xxxx
                exp r31.xyzw, r31.xyzw
                add r31.xy, r31.zwzz, r31.xyxx
                log r31.xy, r31.xyxx
                mul r31.xy, r31.xyxx, r42.xxxx
                exp r31.xy, r31.xyxx
                mul r25.w, r31.x, r41.z
                mad r26.w, r41.w, r31.y, l(-1.000000)
                mad r25.w, r41.w, r31.y, -r25.w
                div_sat r25.w, r26.w, r25.w
                mul r26.w, r25.w, r25.w
                mad r25.w, r25.w, l(-2.000000), l(3.000000)
                mul r17.x, r25.w, r26.w
              endif 
              mul r19.w, r17.x, r24.w
              and r17.x, r23.w, l(255)
              if_nz r17.x
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyz, r11.w, l(220), t12.xyzx
                dp3 r23.w, r42.yzwy, r19.xyzx
                dp3 r19.x, r31.xyzx, r19.xyzx
                frc r31.x, r23.w
                frc r31.y, r19.x
                iadd r17.x, r17.x, l(-1)
                utof r31.z, r17.x
                sample_l_indexable(texture2darray)(float,float,float,float) r39.xyz, r31.xyzx, t20.xyzw, s2, l(0.000000)
              else 
                mov r39.xyz, l(1.000000,1.000000,1.000000,0)
              endif 
            endif 
            mov r29.yz, r30.yyzy
            mul r29.xyz, r39.xyzx, r29.xyzx
            lt r17.x, l(0.000000), r19.w
            if_nz r17.x
              ubfe r17.x, l(3), l(27), r30.w
              ine r17.x, r17.x, l(1)
              if_nz r17.x
                mad r17.x, |r14.z|, l(-0.200000), l(0.400000)
                mad r20.xyz, r0.xyzx, r17.xxxx, v6.xyzx
                mov r36.xyz, r35.xyzx
                dp4 r17.x, r36.xyzw, r20.xyzw
                dp4 r19.x, r38.xyzw, r20.xyzw
                ge r19.y, r19.x, r17.x
                if_nz r19.y
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.y, r11.w, l(144), t12.xxxx
                  mov r33.w, r34.x
                  dp4 r31.x, r33.xyzw, r20.xyzw
                  mov r35.xyz, r34.yzwy
                  dp4 r31.y, r35.xyzw, r20.xyzw
                  div r20.xy, r31.xyxx, r19.xxxx
                  mad_sat r20.xy, r20.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  mad r20.xy, r20.xyxx, r37.zwzz, r37.xyxx
                  div r11.w, r17.x, r19.x
                  max r11.w, r11.w, l(0.00006104)
                  and r17.x, r30.w, l(0x0000ffff)
                  if_nz r9.w
                    utof r31.z, r17.x
                    mov r19.xy, l(0,0,0,0)
                    loop 
                      ige r23.w, r19.y, l(8)
                      breakc_nz r23.w
                      dp2 r33.x, icb[r19.y + 0].xyxx, r23.xyxx
                      dp2 r33.y, icb[r19.y + 0].yxyy, r23.xzxx
                      mad r31.xy, r33.xyxx, r32.yyyy, r20.xyxx
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.w, r31.xyzx, t9.xxxx, s13, r11.w
                      mad r19.x, r23.w, l(0.125000), r19.x
                      iadd r19.y, r19.y, l(1)
                    endloop 
                  else 
                    utof r20.z, r17.x
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.x, r20.xyzx, t9.xxxx, s13, r11.w
                  endif 
                  mul r11.w, r19.x, r19.x
                  mul r11.w, r19.x, r11.w
                else 
                  mov r11.w, l(1.000000)
                endif 
              else 
                mov r11.w, l(1.000000)
              endif 
              mul r11.w, r11.w, r19.w
              lt r17.x, l(0.000000), r11.w
              if_nz r17.x
                mul r17.x, r4.y, r30.x
                mul r17.x, r14.w, r17.x
                ubfe r19.y, l(4), l(16), r30.w
                ult r19.w, l(0), r19.y
                and r19.w, r2.w, r19.w
                if_nz r19.w
                  iadd r19.y, r19.y, cb2[0].x
                  iadd r19.y, r19.y, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.w, r19.y, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r19.y, l(68), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r19.y, l(84), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r19.y, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r19.y, l(116), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r19.y, l(132), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r19.y, l(148), t12.xyzw
                  mad r20.x, |r14.z|, l(-0.200000), l(0.400000)
                  mad r21.xyz, r0.xyzx, r20.xxxx, v6.xyzx
                  dp4 r20.x, r31.xyzw, r21.xyzw
                  dp4 r20.y, r32.xyzw, r21.xyzw
                  dp4 r20.z, r33.xyzw, r21.xyzw
                  dp4 r21.x, r34.xyzw, r21.xyzw
                  lt r21.y, r21.x, r20.z
                  div r20.xy, r20.xyxx, r21.xxxx
                  mad r20.xy, r20.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r20.xy, r36.zwzz, r20.xyxx
                  mul r20.xy, r36.xyxx, r20.xyxx
                  div r30.xy, r19.wwww, r35.xzxx
                  add r31.xy, -r30.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                  ge r31.xy, r20.xyxx, r31.xyxx
                  ge r30.xy, r30.xyxx, r20.xyxx
                  or r30.xy, r30.xyxx, r31.xyxx
                  or r21.z, r30.y, r30.x
                  or r21.y, r21.y, r21.z
                  if_z r21.y
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r21.y, r19.y, l(28), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r30.xy, r19.y, l(164), t12.xyxx
                    mov_sat r20.xy, r20.xyxx
                    mad r31.xy, r20.xyxx, r35.xzxx, r35.ywyy
                    mul r19.y, r21.x, r30.y
                    mad r20.x, r30.x, r21.x, r20.z
                    div r19.y, r20.x, r19.y
                    max r19.y, r19.y, l(0.00006104)
                    and r20.x, r21.y, l(0x0000ffff)
                    if_nz r9.w
                      utof r21.z, r20.x
                      mov r20.yz, l(0,0,0,0)
                      loop 
                        ige r23.w, r20.z, l(8)
                        breakc_nz r23.w
                        dp2 r30.x, icb[r20.z + 0].xyxx, r24.xyxx
                        dp2 r30.y, icb[r20.z + 0].yxyy, r24.xzxx
                        mad r21.xy, r30.xyxx, r19.wwww, r31.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.x, r21.xyzx, t9.xxxx, s13, r19.y
                        mad r20.y, r21.x, l(0.125000), r20.y
                        iadd r20.z, r20.z, l(1)
                      endloop 
                    else 
                      utof r31.z, r20.x
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r20.y, r31.xyzx, t9.xxxx, s13, r19.y
                    endif 
                    mul r19.y, r20.y, r20.y
                    mul r19.y, r20.y, r19.y
                  else 
                    mov r19.y, l(1.000000)
                  endif 
                  mul r11.w, r11.w, r19.y
                else 
                  ubfe r19.y, l(4), l(20), r30.w
                  ult r19.w, l(0), r19.y
                  and r19.w, r1.w, r19.w
                  if_nz r19.w
                    iadd r19.y, r19.y, cb2[0].x
                    iadd r19.y, r19.y, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.w, r19.y, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r30.xyzw, r19.y, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r19.y, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r19.y, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r19.y, l(116), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r19.y, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r19.y, l(148), t12.xyzw
                    mad r20.x, |r14.z|, l(-0.200000), l(0.400000)
                    mad r22.xyz, r0.xyzx, r20.xxxx, v6.xyzx
                    dp4 r21.x, r30.xyzw, r22.xyzw
                    dp4 r21.y, r31.xyzw, r22.xyzw
                    dp4 r20.x, r32.xyzw, r22.xyzw
                    dp4 r20.z, r33.xyzw, r22.xyzw
                    lt r21.z, r20.z, r20.x
                    div r21.xy, r21.xyxx, r20.zzzz
                    mad r21.xy, r21.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r21.xy, r35.zwzz, r21.xyxx
                    mul r21.xy, r35.xyxx, r21.xyxx
                    div r22.xy, r19.wwww, r34.xzxx
                    add r30.xy, -r22.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                    ge r30.xy, r21.xyxx, r30.xyxx
                    ge r22.xy, r22.xyxx, r21.xyxx
                    or r22.xy, r22.xyxx, r30.xyxx
                    or r22.x, r22.y, r22.x
                    or r21.z, r21.z, r22.x
                    if_z r21.z
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r21.z, r19.y, l(28), t12.xxxx
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r22.xy, r19.y, l(164), t12.xyxx
                      mov_sat r21.xy, r21.xyxx
                      mad r30.xy, r21.xyxx, r34.xzxx, r34.ywyy
                      mul r19.y, r20.z, r22.y
                      mad r20.x, r22.x, r20.z, r20.x
                      div r19.y, r20.x, r19.y
                      max r19.y, r19.y, l(0.00006104)
                      and r20.x, r21.z, l(0x0000ffff)
                      if_nz r9.w
                        utof r21.z, r20.x
                        mov r20.z, l(0)
                        mov r22.x, l(0)
                        loop 
                          ige r22.y, r22.x, l(8)
                          breakc_nz r22.y
                          dp2 r31.x, icb[r22.x + 0].xyxx, r25.xyxx
                          dp2 r31.y, icb[r22.x + 0].yxyy, r25.xzxx
                          mad r21.xy, r31.xyxx, r19.wwww, r30.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.x, r21.xyzx, t9.xxxx, s13, r19.y
                          mad r20.z, r21.x, l(0.125000), r20.z
                          iadd r22.x, r22.x, l(1)
                        endloop 
                      else 
                        utof r30.z, r20.x
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r20.z, r30.xyzx, t9.xxxx, s13, r19.y
                      endif 
                      mul r19.y, r20.z, r20.z
                      mul r19.y, r20.z, r19.y
                    else 
                      mov r19.y, l(1.000000)
                    endif 
                    mul r11.w, r11.w, r19.y
                  endif 
                endif 
                mad r19.y, -r14.w, r5.x, l(1.000000)
                mul r19.y, r19.y, r19.y
                mad r19.y, -r19.y, l(0.620000), l(0.620000)
                add r19.y, -r14.w, r19.y
                mad r19.y, r4.z, r19.y, r14.w
                mul r19.y, r11.w, r19.y
                lt r14.z, l(0.000000), r14.z
                mad r21.xyz, r19.yyyy, r29.xyzx, r8.yzwy
                mad r18.xyz, r18.xyzx, r12.wwww, r2.xyzx
                dp3 r12.w, r18.xyzx, r18.xyzx
                rsq r12.w, r12.w
                mul r18.xyz, r12.wwww, r18.xyzx
                dp3 r12.w, r18.xyzx, r2.xyzx
                dp3 r18.x, r0.xyzx, r18.xyzx
                mad r18.y, |r18.x|, r4.y, -|r18.x|
                mad r18.x, |r18.x|, r18.y, l(1.000000)
                mad r14.w, r14.w, r0.w, r4.w
                mul r18.x, r18.x, r18.x
                mul r14.w, r14.w, r18.x
                rcp r14.w, r14.w
                mul r14.w, r17.x, r14.w
                mul r11.w, r11.w, r14.w
                mul r11.w, r11.w, l(0.250000)
                mad r18.xyz, r11.wwww, r29.xyzx, r28.xyzx
                add_sat r12.w, -r12.w, l(1.000000)
                mul r14.w, r12.w, r12.w
                mul r14.w, r14.w, r14.w
                mul r12.w, r12.w, r14.w
                mul r11.w, r11.w, r12.w
                mad r22.xyz, r11.wwww, r29.xyzx, r15.xyzx
                movc r8.yzw, r14.zzzz, r21.xxyz, r8.yyzw
                movc r15.xyz, r14.zzzz, r22.xyzx, r15.xyzx
                movc r28.xyz, r14.zzzz, r18.xyzx, r28.xyzx
              endif 
            endif 
          endif 
          break 
          default 
          break 
        endswitch 
      endif 
    endif 
  endloop 
  mov r5.yzw, r8.yyzw
  mov r26.xyz, r15.xyzx
  mov r27.xyz, r28.xyzx
  iadd r6.w, r6.w, l(32)
endloop 
mul r0.xyz, r26.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
mad r0.xyz, r27.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000), r0.xyzx
mad r0.xyz, r5.yzwy, r3.xyzx, r0.xyzx
lt r0.w, l(0.000000), cb2[9].z
if_nz r0.w
  dp3 r0.w, v6.xyzx, v6.xyzx
  rsq r1.x, r0.w
  mul r1.xyz, r1.xxxx, v6.xyzx
  sqrt r0.w, r0.w
  lt r1.w, l(0.000000), cb2[13].w
  if_nz r1.w
    mad r2.xy, r0.wwww, cb2[15].xyxx, cb2[14].zwzz
    mul r2.xy, r2.xyxx, cb2[16].xyxx
    lt r1.w, l(0.010000), |v6.z|
    mul r2.zw, v6.zzzz, cb2[15].zzzw
    mul r3.xy, r2.zwzz, l(-1.442695, -1.442695, 0.000000, 0.000000)
    exp r3.xy, r3.xyxx
    add r3.xy, -r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    div r2.zw, r3.xxxy, r2.zzzw
    mul r2.zw, r2.zzzw, r2.xxxy
    movc r2.xy, r1.wwww, r2.zwzz, r2.xyxx
    mul r2.xzw, r2.xxxx, cb2[12].xxyz
    exp r2.xzw, r2.xxzw
    mul r3.xyz, r2.yyyy, cb2[12].xyzx
    exp r3.xyz, r3.xyzx
    add r3.xyz, -r2.xzwx, r3.xyzx
    mad r2.xyz, cb2[13].wwww, r3.xyzx, r2.xzwx
  else 
    mad r1.w, r0.w, cb2[15].x, cb2[14].z
    mul r1.w, r1.w, cb2[16].x
    lt r2.w, l(0.010000), |v6.z|
    mul r3.x, v6.z, cb2[15].z
    mul r3.y, r3.x, l(-1.442695)
    exp r3.y, r3.y
    add r3.y, -r3.y, l(1.000000)
    div r3.x, r3.y, r3.x
    mul r3.x, r1.w, r3.x
    movc r1.w, r2.w, r3.x, r1.w
    mul r3.xyz, r1.wwww, cb2[12].xyzx
    exp r2.xyz, r3.xyzx
  endif 
  mad r2.xyz, r2.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r2.xyz, r2.xyzx, -cb2[9].zzzz
  dp3 r1.x, cb2[7].yzwy, -r1.xyzx
  mad r1.y, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r1.z, cb2[8].w, -r1.x, l(1.000000)
  mul r1.z, r1.z, r1.z
  mul r1.z, r1.z, l(12.566371)
  div r1.y, r1.y, r1.z
  add r0.w, r0.w, -cb2[10].w
  mul_sat r0.w, r0.w, cb2[11].w
  mul r0.w, r0.w, r1.y
  mov_sat r1.x, r1.x
  mad r1.x, r1.x, r1.x, l(1.000000)
  mad r1.x, r1.x, l(0.05968310), l(-1.000000)
  mad r1.x, cb2[8].z, r1.x, l(1.000000)
  mul r1.yzw, r0.wwww, cb2[11].xxyz
  mad r1.xyz, r1.xxxx, cb2[10].xyzx, r1.yzwy
  mul r1.xyz, r1.xyzx, cb2[9].wwww
  add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r1.xyz, r1.xyzx, r3.xyzx
  mad r1.xyz, r0.xyzx, r2.xyzx, r1.xyzx
else 
  mul r0.w, v6.z, cb2[6].x
  mad r1.w, cb2[6].x, v6.z, cb2[5].x
  lt r2.x, |r0.w|, l(0.000100)
  min r2.y, r1.w, l(64.000000)
  mul r2.y, r2.y, l(1.442695)
  exp r2.y, r2.y
  mov_sat r2.z, cb2[6].z
  lt r2.w, r1.w, l(0.000000)
  add r1.w, r1.w, l(1.000000)
  movc r1.w, r2.w, r2.y, r1.w
  add r1.w, r1.w, -cb2[6].z
  movc r0.w, r2.x, l(1.000000), r0.w
  div r0.w, r1.w, r0.w
  movc r0.w, r2.x, r2.z, r0.w
  mul r0.w, r0.w, cb2[5].z
  dp3 r1.w, v6.xyzx, v6.xyzx
  sqrt r2.x, r1.w
  mad r0.w, r0.w, r2.x, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  rsq r1.w, r1.w
  mul r2.xyz, r1.wwww, v6.xyzx
  dp3 r1.w, cb2[7].yzwy, r2.xyzx
  mad_sat r1.w, cb2[8].y, r1.w, cb2[8].x
  add r2.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r2.xyzw, r1.wwww, r2.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r2.w
  add r2.xyz, -r0.xyzx, r2.xyzx
  mad r1.xyz, r0.wwww, r2.xyzx, r0.xyzx
endif 
mul r0.xyz, r1.xyzx, cb1[85].yyyy
ge r1.xyz, r0.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.xyz, r0.xyzx, r1.xyzx
min o0.xyz, r0.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
mov o0.w, r3.w
ret 
// Approximately 1918 instruction slots used
