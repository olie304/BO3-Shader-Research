//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:33:16 2021
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float3 colorTint;                  // Offset:  160 Size:    12
//   float3 specColorTint;              // Offset:  176 Size:    12
//   float baseNormalHeight;            // Offset:  188 Size:     4
//   float2 glossRange;                 // Offset:  192 Size:     8
//   float rowCount;                    // Offset:  200 Size:     4
//   float columnCount;                 // Offset:  204 Size:     4
//   float imageTime;                   // Offset:  208 Size:     4
//   float2 rotateUVs;                  // Offset:  212 Size:     8
//   float2 scrollUVs;                  // Offset:  224 Size:     8
//   float2 scaleUVs;                   // Offset:  232 Size:     8
//   float2 offsetUVs;                  // Offset:  240 Size:     8
//   float2 zoomUVs;                    // Offset:  248 Size:     8
//   float zoomRate;                    // Offset:  256 Size:     4
//   float layerDepth;                  // Offset:  260 Size:     4
//   bool clampU;                       // Offset:  264 Size:     4
//   bool clampV;                       // Offset:  268 Size:     4
//   float2 flickerSeed;                // Offset:  272 Size:     8
//   float flickerSpeed;                // Offset:  280 Size:     4
//   float2 flickerRange;               // Offset:  288 Size:     8
//   float flickerPower;                // Offset:  296 Size:     4
//   bool useAsCamo;                    // Offset:  300 Size:     4
//   float3 emissiveTint1;              // Offset:  304 Size:    12
//   float hdrScale;                    // Offset:  316 Size:     4
//   float uvMotionToggle1;             // Offset:  320 Size:     4
//   bool relativeHDR;                  // Offset:  324 Size:     4
//   float3 emissiveTint2;              // Offset:  336 Size:    12
//   float rowCount2;                   // Offset:  348 Size:     4
//   float columnCount2;                // Offset:  352 Size:     4
//   float imageTime2;                  // Offset:  356 Size:     4
//   float2 rotateUVs2;                 // Offset:  360 Size:     8
//   float2 scrollUVs2;                 // Offset:  368 Size:     8
//   float2 scaleUVs2;                  // Offset:  376 Size:     8
//   float2 offsetUVs2;                 // Offset:  384 Size:     8
//   float2 zoomUVs2;                   // Offset:  392 Size:     8
//   float zoomRate2;                   // Offset:  400 Size:     4
//   float layer2Depth;                 // Offset:  404 Size:     4
//   float uvMotionToggle2;             // Offset:  408 Size:     4
//   bool clampU2;                      // Offset:  412 Size:     4
//   bool clampV2;                      // Offset:  416 Size:     4
//   float2 flickerSeed2;               // Offset:  420 Size:     8
//   float flickerSpeed2;               // Offset:  428 Size:     4
//   float2 flickerRange2;              // Offset:  432 Size:     8
//   float flickerPower2;               // Offset:  440 Size:     4
//   float3 emissiveTint3;              // Offset:  448 Size:    12
//   float rowCount3;                   // Offset:  460 Size:     4
//   float columnCount3;                // Offset:  464 Size:     4
//   float imageTime3;                  // Offset:  468 Size:     4
//   float2 rotateUVs3;                 // Offset:  472 Size:     8
//   float2 scrollUVs3;                 // Offset:  480 Size:     8
//   float2 scaleUVs3;                  // Offset:  488 Size:     8
//   float2 offsetUVs3;                 // Offset:  496 Size:     8
//   float2 zoomUVs3;                   // Offset:  504 Size:     8
//   float zoomRate3;                   // Offset:  512 Size:     4
//   float layer3Depth;                 // Offset:  516 Size:     4
//   float uvMotionToggle3;             // Offset:  520 Size:     4
//   bool clampU3;                      // Offset:  524 Size:     4
//   bool clampV3;                      // Offset:  528 Size:     4
//   float2 flickerSeed3;               // Offset:  532 Size:     8
//   float flickerSpeed3;               // Offset:  540 Size:     4
//   float2 flickerRange3;              // Offset:  544 Size:     8
//   float flickerPower3;               // Offset:  552 Size:     4
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16 [unused]
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16
//   float4 debugNormalOverride;        // Offset:  960 Size:    16
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16
//   float4 debugGlossOverride;         // Offset:  992 Size:    16
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for shaderConstantSetBuffer
// {
//
//   struct GpuShaderConstantSet
//   {
//       
//       float4 scriptVector0;          // Offset:    0
//       float4 scriptVector1;          // Offset:   16
//       float4 scriptVector2;          // Offset:   32
//       float4 scriptVector3;          // Offset:   48
//       float4 scriptVector4;          // Offset:   64
//       float4 scriptVector5;          // Offset:   80
//       float4 scriptVector6;          // Offset:   96
//       float4 scriptVector7;          // Offset:  112
//       float4 weaponParam0;           // Offset:  128
//       float4 weaponParam1;           // Offset:  144
//       float4 weaponParam2;           // Offset:  160
//       float4 weaponParam3;           // Offset:  176
//       float4 weaponParam4;           // Offset:  192
//       float4 weaponParam5;           // Offset:  208
//       float4 weaponParam6;           // Offset:  224
//       float4 weaponParam7;           // Offset:  240
//       float4 characterParam0;        // Offset:  256
//       float4 characterParam1;        // Offset:  272
//       float4 characterParam2;        // Offset:  288
//       float4 characterParam3;        // Offset:  304
//       float4 characterParam4;        // Offset:  320
//       float4 characterParam5;        // Offset:  336
//       float4 characterParam6;        // Offset:  352
//       float4 characterParam7;        // Offset:  368
//
//   } $Element;                        // Offset:    0 Size:   384
//
// }
//
// Resource bind info for modelInstanceBuffer
// {
//
//   struct ModelInstanceData
//   {
//       
//       uint boneArrayIndex;           // Offset:    0
//       uint shaderConstantSet;        // Offset:    4
//       uint flagsAndPrevFrameIndex;   // Offset:    8
//       uint worldMatrix;              // Offset:   12
//       uint siegeAnimStateOffset;     // Offset:   16
//       uint prevFrameSiegeAnimStateOffset;// Offset:   20
//
//   } $Element;                        // Offset:    0 Size:    24
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for forwardDecalConstants
// {
//
//   struct CoreDecalConstantsPack
//   {
//       
//       uint4 data[8];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   128
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// colorSampler                      sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// specColorSampler                  sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// normalSampler                     sampler      NA          NA             s5      1 
// aoSampler                         sampler      NA          NA             s6      1 
// lookupSampler                     sampler      NA          NA             s7      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// shaderConstantSetBuffer           texture  struct         r/o             t0      1 
// modelInstanceBuffer               texture  struct         r/o             t4      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// colorMap                          texture  float4          2d            t21      1 
// tintMask                          texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// specColorMap                      texture  float4          2d            t24      1 
// normalMap                         texture  float4          2d            t25      1 
// glossMap                          texture  float4          2d            t26      1 
// aoMap                             texture  float4          2d            t29      1 
// flickerLookupMap                  texture  float4          2d            t30      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// visibleDecals                     texture    uint     2darray            t35      1 
// forwardDecalConstants             texture  struct         r/o            t36      1 
// camoMaskMap                       texture  float4          2d            t37      1 
// emissiveMap1                      texture  float4          2d            t38      1 
// materialTexBC7                    texture  float4     2darray            t42      1 
// materialTexBC3                    texture  float4     2darray            t43      1 
// materialTexBC7linear              texture  float4     2darray            t44      1 
// materialTexMask                   texture  float4     2darray            t45      1 
// emissiveMap2                      texture  float4          2d            t46      1 
// emissiveMap3                      texture  float4          2d            t47      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyz 
// COLOR                    0   xyz         1     NONE   float   xyz 
// COLOR                    1      w        1     NONE   float      w
// TEXCOORD                 0   xy          2     NONE   float   xy  
// UVOFFSETS                0   xyz         3     NONE   float   xyz 
// TEXCOORD                 4      w        3     NONE    uint      w
// TEXCOORD                 1   xyz         4     NONE   float   xyz 
// TEXCOORD                 2   xyz         5     NONE   float   xyz 
// TEXCOORD                 3   xyz         6     NONE   float   xyz 
// OFFPOSITION              0   xyz         7     NONE   float   xyz 
// SV_IsFrontFace           0   x           8    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[35], immediateIndexed
dcl_constantbuffer CB1[93], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_structured t0, 384
dcl_resource_structured t4, 24
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2d (float,float,float,float) t26
dcl_resource_texture2d (float,float,float,float) t29
dcl_resource_texture2d (float,float,float,float) t30
dcl_resource_texture2darray (float,float,float,float) t31
dcl_resource_texture2darray (uint,uint,uint,uint) t35
dcl_resource_structured t36, 128
dcl_resource_texture2d (float,float,float,float) t37
dcl_resource_texture2d (float,float,float,float) t38
dcl_resource_texture2darray (float,float,float,float) t42
dcl_resource_texture2darray (float,float,float,float) t43
dcl_resource_texture2darray (float,float,float,float) t44
dcl_resource_texture2darray (float,float,float,float) t45
dcl_resource_texture2d (float,float,float,float) t46
dcl_resource_texture2d (float,float,float,float) t47
dcl_input_ps_siv linear noperspective v0.xyz, position
dcl_input_ps linear v1.xyz
dcl_input_ps linear v1.w
dcl_input_ps linear v2.xy
dcl_input_ps constant v3.xyz
dcl_input_ps constant v3.w
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyz
dcl_input_ps_sgv constant v8.x, is_front_face
dcl_output o0.xyzw
dcl_temps 47
if_nz cb0[18].w
  ld_structured_indexable(structured_buffer, stride=24)(mixed,mixed,mixed,mixed) r0.x, v3.w, l(4), t4.xxxx
  ld_structured_indexable(structured_buffer, stride=384)(mixed,mixed,mixed,mixed) r0.yzw, r0.x, l(208), t0.xxyz
  ld_structured_indexable(structured_buffer, stride=384)(mixed,mixed,mixed,mixed) r1.xyz, r0.x, l(224), t0.xyzx
  ld_structured_indexable(structured_buffer, stride=384)(mixed,mixed,mixed,mixed) r2.xyz, r0.x, l(240), t0.xyzx
  sample_indexable(texture2d)(float,float,float,float) r3.xyz, v2.xyxx, t37.xyzw, s1
  dp3_sat r0.x, r3.xyzx, r0.yzwy
  mov r3.xy, v2.xyxx
  mov r3.z, l(1.000000)
  dp3 r1.x, r1.xyzx, r3.xyzx
  dp3 r1.y, r2.xyzx, r3.xyzx
  mov r0.yz, r1.xxyx
else 
  mov r0.yz, v2.xxyx
  mov r1.xy, v2.xyxx
  mov r0.x, l(1.000000)
endif 
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r0.yzyy, t21.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r0.w, r0.yzyy, t22.yzwx, s1
add r3.xyz, cb0[10].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r3.xyz, r0.wwww, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r2.xyz, r2.xyzx, r3.xyzx
mul r2.xyz, r2.xyzx, v1.xyzx
mul r0.w, r2.w, v1.w
sample_indexable(texture2d)(float,float,float,float) r1.z, r0.yzyy, t24.yzxw, s3
add r3.xyz, cb0[11].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r3.xyz, r1.zzzz, r3.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
add_sat r1.z, -r1.z, l(1.000000)
mul r2.xyz, r1.zzzz, r2.xyzx
sample_indexable(texture2d)(float,float,float,float) r1.z, r0.yzyy, t29.yzxw, s6
sample_indexable(texture2d)(float,float,float,float) r1.w, r0.yzyy, t26.yzwx, s3
add r3.w, -cb0[12].x, cb0[12].y
mad r1.w, r1.w, r3.w, cb0[12].x
mul_sat r1.w, r1.w, l(0.05882353)
sample_indexable(texture2d)(float,float,float,float) r4.xyz, r0.yzyy, t25.xyzw, s5
add r4.xyz, r4.xyzx, l(-0.500000, -0.500000, -0.000000, 0.000000)
mad r4.xyz, cb0[11].wwww, r4.xyzx, l(0.500000, 0.500000, 0.000000, 0.000000)
mad r4.xy, r4.xyxx, l(1.99218750, 1.99218750, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r4.w, r4.xyxx, r4.xyxx
add r4.w, -r4.w, l(1.000000)
max r4.w, r4.w, l(0.000000)
sqrt r4.w, r4.w
mul r4.z, r4.z, r4.z
mul r4.z, r4.z, l(0.33333334)
min r4.z, r4.z, l(1.000000)
movc r5.x, v8.x, l(1.000000), l(-1.000000)
dp3 r5.y, v4.xyzx, v4.xyzx
rsq r5.y, r5.y
mul r5.yzw, r5.yyyy, v4.xxyz
mul r5.yzw, r5.xxxx, r5.yyzw
dp3 r6.x, v5.xyzx, v5.xyzx
rsq r6.x, r6.x
mul r6.xyz, r6.xxxx, v5.xyzx
mul r6.xyz, r5.xxxx, r6.xyzx
dp3 r6.w, v6.xyzx, v6.xyzx
rsq r6.w, r6.w
mul r7.xyz, r6.wwww, v6.xyzx
mul r7.xyz, r5.xxxx, r7.xyzx
mul r1.w, r1.w, l(-17.000000)
exp r1.w, r1.w
add r1.w, r1.w, r4.z
log r1.w, r1.w
mul r1.w, r1.w, l(-0.05882353)
max r1.w, r1.w, l(0.000000)
mul r8.xyz, r4.yyyy, r7.xyzx
mad r8.xyz, r6.xyzx, r4.xxxx, r8.xyzx
mad r4.xyw, r5.yzyw, r4.wwww, r8.xyxz
dp3 r6.w, r4.xywx, r4.xywx
rsq r6.w, r6.w
mul r4.xyw, r4.xyxw, r6.wwww
mad r3.w, cb1[62].x, r3.w, cb0[12].x
mul_sat r3.w, r3.w, l(0.05882353)
mul r3.w, r3.w, l(-17.000000)
exp r3.w, r3.w
add r3.w, r3.w, r4.z
log r3.w, r3.w
mul r3.w, r3.w, l(-0.05882353)
max r3.w, r3.w, l(0.000000)
lt r4.z, l(0.000000), cb1[64].w
if_nz r4.z
  ftoi r4.z, cb1[64].w
  lod r6.w, r0.yzyy, t21.y, s1
  lod r0.y, r0.yzyy, t21.x, s1
  lt r0.z, r6.w, r0.y
  lt r0.y, l(0.000000), r0.y
  and r8.xyz, r4.zzzz, l(1, 2, 4, 0)
  movc r9.xyz, r8.xxxx, l(1.000000,0,1.000000,0), r2.xyzx
  movc r8.xyw, r8.yyyy, l(0,1.000000,0,1.000000), r2.xyxz
  movc r8.xyw, r0.yyyy, r9.xyxz, r8.xyxw
  movc r9.xyz, r8.zzzz, l(0,1.000000,0,0), r2.xyzx
  movc r2.xyz, r0.zzzz, r8.xywx, r9.xyzx
endif 
add r8.xyz, -r2.xyzx, cb1[58].xyzx
mad r2.xyz, cb1[58].wwww, r8.xyzx, r2.xyzx
mad r0.y, -r2.w, v1.w, cb1[59].x
mad r0.y, cb1[59].w, r0.y, r0.w
add r8.xyz, -r3.xyzx, cb1[61].xyzx
mad r3.xyz, cb1[61].wwww, r8.xyzx, r3.xyzx
add r0.z, -r1.w, r3.w
mad r0.z, cb1[62].w, r0.z, r1.w
add r0.w, -r1.z, cb1[63].x
mad r0.w, cb1[63].w, r0.w, r1.z
movc r8.xyz, v8.xxxx, v4.xyzx, -v4.xyzx
dp3 r1.z, r8.xyzx, r8.xyzx
rsq r1.z, r1.z
mad r8.xyz, r8.xyzx, r1.zzzz, -r4.xywx
mad r4.xyz, cb1[60].wwww, r8.xyzx, r4.xywx
ge r1.z, v0.z, l(0.984375)
mul r1.w, v0.z, l(1.01587307)
mad r2.w, v0.z, l(64.000000), l(-63.000000)
movc r1.z, r1.z, r2.w, r1.w
max r1.z, r1.z, l(0.00000001)
rcp r1.z, r1.z
ftou r8.xy, v0.yxyy
deriv_rtx_coarse r9.xyz, v7.xyzx
deriv_rty_coarse r10.xyz, v7.xyzx
iadd r1.w, cb2[0].y, cb2[0].x
add r11.xyz, v7.xyzx, cb1[24].xyzx
mul r1.z, r1.z, l(0.00781250)
min r1.z, r1.z, l(15.000000)
ftou r1.z, r1.z
ushr r12.xy, r8.yxyy, l(6, 6, 0, 0)
ishl r12.z, r1.z, l(4)
and r1.z, cb2[57].z, l(-32)
iadd r2.w, -r1.z, cb2[57].z
mov r13.xy, l(0,0,0,0)
mov r14.w, l(0)
mov r11.w, l(1.000000)
mov r15.xyz, l(0,0,0,0)
mov r16.xyz, l(0,0,0,0)
mov r17.xyz, l(0,0,0,0)
mov r3.w, l(0)
mov r4.w, l(0)
mov r6.w, l(0)
loop 
  uge r7.w, r6.w, cb2[57].z
  breakc_nz r7.w
  ushr r13.z, r6.w, l(5)
  iadd r14.xyz, r12.xyzx, r13.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r7.w, r14.xyzw, t35.yzwx
  ieq r8.z, r1.z, r6.w
  ubfe r8.w, r2.w, l(0), r7.w
  movc r7.w, r8.z, r8.w, r7.w
  iadd r8.z, r1.w, r6.w
  mov r14.xyz, r15.xyzx
  mov r18.xyz, r16.xyzx
  mov r19.xyz, r17.xyzx
  mov r8.w, r3.w
  mov r9.w, r4.w
  mov r10.w, r7.w
  loop 
    breakc_z r10.w
    firstbit_lo r12.w, r10.w
    ishl r13.z, l(1), r12.w
    and r13.w, r10.w, r13.z
    if_nz r13.w
      xor r10.w, r10.w, r13.z
      iadd r13.z, r8.z, r12.w
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r20.xyzw, r13.z, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r21.xy, r13.z, l(16), t11.xyxx
      add r20.xyz, r20.xyzx, -v7.xyzx
      mov r21.z, r20.w
      lt r20.xyz, |r20.xyzx|, r21.zxyz
      and r13.z, r20.y, r20.x
      and r13.z, r20.z, r13.z
      if_nz r13.z
        iadd r12.w, r6.w, r12.w
        ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r20.xyz, r12.w, l(0), t36.xyzx
        ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r21.xyz, r12.w, l(16), t36.xyzx
        ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r22.xyz, r12.w, l(32), t36.xyzx
        mov r23.x, r20.x
        mov r23.y, r21.x
        mov r23.z, r22.x
        dp3 r13.z, r23.xyzx, r23.xyzx
        rsq r13.z, r13.z
        mul r24.xyz, r13.zzzz, r23.xyzx
        dp3 r13.z, r24.xyzx, r5.yzwy
        ge r13.z, r13.z, l(0.500000)
        if_nz r13.z
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r25.xyw, r12.w, l(48), t36.xyxz
          mov r23.w, r25.x
          dp4 r23.x, r11.xyzw, r23.xyzw
          mov r26.x, r20.y
          mov r26.y, r21.y
          mov r26.z, r22.y
          mov r26.w, r25.y
          dp4 r23.y, r11.xyzw, r26.xyzw
          mov r25.x, r20.z
          mov r25.y, r21.z
          mov r25.z, r22.z
          dp4 r23.z, r11.xyzw, r25.xyzw
          lt r20.xyz, |r23.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
          and r13.z, r20.y, r20.x
          and r13.z, r20.z, r13.z
          if_nz r13.z
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r20.xyzw, r12.w, l(64), t36.xyzw
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r21.xyzw, r12.w, l(80), t36.xyzw
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r22.xyzw, r12.w, l(96), t36.xyzw
            dp3 r27.x, r9.xyzx, r26.xyzx
            dp3 r27.y, r9.xyzx, r25.xyzx
            dp3 r28.x, r10.xyzx, r26.xyzx
            dp3 r28.y, r10.xyzx, r25.xyzx
            mad r13.zw, r23.yyyz, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
            mul r23.xyz, r27.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
            mul r27.xyz, r28.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
            and r28.xy, r21.yzyy, l(0x0000ffff, 0x0000ffff, 0, 0)
            if_nz r28.x
              ubfe r15.w, l(4), l(24), r21.w
              ishl r15.w, l(1), r15.w
              ushr r16.w, r21.w, l(28)
              ishl r16.w, l(1), r16.w
              ieq r17.w, r28.x, l(4)
              if_nz r17.w
                and r17.w, r21.w, l(4095)
                ubfe r18.w, l(12), l(12), r21.w
                and r19.w, r22.w, l(1023)
                utof r29.xz, r15.wwww
                utof r29.y, r16.w
                mad r28.zw, r13.zzzw, r29.zzzy, l(0.000000, 0.000000, 0.500000, 0.500000)
                add r30.xy, r29.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                min r28.zw, r28.zzzw, r30.xxxy
                utof r30.x, r17.w
                utof r30.y, r18.w
                add r28.zw, r28.zzzw, r30.xxxy
                mul r30.xy, r28.zwzz, cb1[83].xyxx
                utof r30.z, r19.w
                mul r31.xyz, r23.zyzz, cb1[83].xyxx
                mul r31.xyz, r29.xyzx, r31.xyzx
                mul r32.xyz, r27.zyzz, cb1[83].xyxx
                mul r29.xyz, r29.xyzx, r32.xyzx
                sample_d_indexable(texture2darray)(float,float,float,float) r29.xyzw, r30.xyzx, t42.xyzw, s4, r31.xyzx, r29.xyzx
              else 
                ieq r17.w, r28.x, l(1)
                if_nz r17.w
                  and r17.w, r21.w, l(4095)
                  ubfe r18.w, l(12), l(12), r21.w
                  and r19.w, r22.w, l(1023)
                  utof r30.xz, r15.wwww
                  utof r30.y, r16.w
                  mad r28.xz, r13.zzwz, r30.zzyz, l(0.500000, 0.000000, 0.500000, 0.000000)
                  add r31.xy, r30.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r28.xz, r28.xxzx, r31.xxyx
                  utof r31.x, r17.w
                  utof r31.y, r18.w
                  add r28.xz, r28.xxzx, r31.xxyx
                  mul r31.xy, r28.xzxx, cb1[83].zwzz
                  utof r31.z, r19.w
                  mul r28.xzw, r23.zzyz, cb1[83].zzwz
                  mul r28.xzw, r30.xxyz, r28.xxzw
                  mul r32.xyz, r27.zyzz, cb1[83].zwzz
                  mul r30.xyz, r30.xyzx, r32.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r29.xyzw, r31.xyzx, t43.xyzw, s4, r28.xzwx, r30.xyzx
                else 
                  mov r29.xyzw, l(1.000000,1.000000,1.000000,1.000000)
                endif 
              endif 
              mul r20.xyz, r20.xyzx, r29.xyzx
              mul r15.w, r20.w, r29.w
            else 
              mov r20.xyz, l(0,0,0,0)
              mov r15.w, l(0)
            endif 
            ne r16.w, r21.x, l(1.000000)
            add r17.w, r20.w, r15.w
            mad_sat r17.w, r17.w, r21.x, -r21.x
            movc r15.w, r16.w, r17.w, r15.w
            if_nz r28.y
              ubfe r16.w, l(4), l(24), r22.y
              ishl r16.w, l(1), r16.w
              ushr r17.w, r22.y, l(28)
              ishl r17.w, l(1), r17.w
              ieq r18.w, r28.y, l(2)
              if_nz r18.w
                and r18.w, r22.y, l(4095)
                ubfe r21.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r22.yyyw
                utof r29.xz, r16.wwww
                utof r29.y, r17.w
                mad r28.xz, r13.zzwz, r29.zzyz, l(0.500000, 0.000000, 0.500000, 0.000000)
                add r30.xy, r29.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                min r28.xz, r28.xxzx, r30.xxyx
                utof r30.x, r18.w
                utof r30.yz, r21.xxwx
                add r28.xz, r28.xxzx, r30.xxyx
                mul r30.xy, r28.xzxx, cb1[84].xyxx
                mul r28.xzw, r23.zzyz, cb1[84].xxyx
                mul r28.xzw, r29.xxyz, r28.xxzw
                mul r31.xyz, r27.zyzz, cb1[84].xyxx
                mul r29.xyz, r29.xyzx, r31.xyzx
                sample_d_indexable(texture2darray)(float,float,float,float) r18.w, r30.xyzx, t45.yzwx, s4, r28.xzwx, r29.xyzx
              else 
                ieq r19.w, r28.y, l(4)
                if_nz r19.w
                  and r19.w, r22.y, l(4095)
                  ubfe r21.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r22.yyyw
                  utof r28.xz, r16.wwww
                  utof r28.y, r17.w
                  mad r29.xy, r13.zwzz, r28.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r29.zw, r28.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r29.xy, r29.zwzz, r29.xyxx
                  utof r30.x, r19.w
                  utof r30.y, r21.x
                  add r29.xy, r29.xyxx, r30.xyxx
                  mul r29.xy, r29.xyxx, cb1[83].xyxx
                  utof r29.z, r21.w
                  mul r30.xyz, r23.zyzz, cb1[83].xyxx
                  mul r30.xyz, r28.xyzx, r30.xyzx
                  mul r31.xyz, r27.zyzz, cb1[83].xyxx
                  mul r28.xyz, r28.xyzx, r31.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r18.w, r29.xyzx, t42.yzwx, s4, r30.xyzx, r28.xyzx
                else 
                  and r19.w, r22.y, l(4095)
                  ubfe r21.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r22.yyyw
                  utof r28.xz, r16.wwww
                  utof r28.y, r17.w
                  mad r29.xy, r13.zwzz, r28.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r29.zw, r28.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r29.xy, r29.zwzz, r29.xyxx
                  utof r30.x, r19.w
                  utof r30.y, r21.x
                  add r29.xy, r29.xyxx, r30.xyxx
                  mul r29.xy, r29.xyxx, cb1[83].zwzz
                  utof r29.z, r21.w
                  mul r30.xyz, r23.zyzz, cb1[83].zwzz
                  mul r30.xyz, r28.xyzx, r30.xyzx
                  mul r31.xyz, r27.zyzz, cb1[83].zwzz
                  mul r28.xyz, r28.xyzx, r31.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r18.w, r29.xyzx, t43.yzwx, s4, r30.xyzx, r28.xyzx
                endif 
              endif 
              mad r28.xyz, r18.wwww, l(0.960000, 0.960000, 0.960000, 0.000000), l(0.040000, 0.040000, 0.040000, 0.000000)
              add_sat r16.w, -r18.w, l(1.000000)
              mul r20.xyz, r16.wwww, r20.xyzx
            else 
              mov r28.xyz, l(0.040000,0.040000,0.040000,0)
            endif 
            ushr r21.xy, r21.zyzz, l(16, 16, 0, 0)
            if_nz r21.x
              ieq r16.w, r21.x, l(2)
              if_nz r16.w
                ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r12.w, r12.w, l(112), t36.xxxx
                ubfe r21.zw, l(0, 0, 4, 12), l(0, 0, 24, 12), r22.zzzz
                ishl r16.w, l(1), r21.z
                ushr r17.w, r22.z, l(28)
                ishl r17.w, l(1), r17.w
                and r18.w, r22.z, l(4095)
                and r12.w, r12.w, l(1023)
                utof r29.xz, r16.wwww
                utof r29.y, r17.w
                mad r22.yz, r13.zzwz, r29.zzyz, l(0.000000, 0.500000, 0.500000, 0.000000)
                add r30.xy, r29.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                min r22.yz, r22.yyzy, r30.xxyx
                utof r30.x, r18.w
                utof r30.y, r21.w
                add r21.zw, r22.yyyz, r30.xxxy
                mul r30.xy, r21.zwzz, cb1[84].xyxx
                utof r30.z, r12.w
                mul r31.xyz, r23.zyzz, cb1[84].xyxx
                mul r31.xyz, r29.xyzx, r31.xyzx
                mul r32.xyz, r27.zyzz, cb1[84].xyxx
                mul r29.xyz, r29.xyzx, r32.xyzx
                sample_d_indexable(texture2darray)(float,float,float,float) r12.w, r30.xyzx, t45.yzwx, s4, r31.xyzx, r29.xyzx
              else 
                ieq r16.w, r21.x, l(6)
                movc r12.w, r16.w, l(0), l(1.000000)
              endif 
            else 
              mov r12.w, l(1.000000)
            endif 
            mul_sat r12.w, r12.w, l(0.76470590)
            if_nz r21.y
              ieq r16.w, r21.y, l(3)
              if_nz r16.w
                ubfe r21.xyz, l(4, 12, 10, 0), l(24, 12, 10, 0), r22.xxwx
                ishl r16.w, l(1), r21.x
                ushr r17.w, r22.x, l(28)
                ishl r17.w, l(1), r17.w
                and r18.w, r22.x, l(4095)
                utof r22.xz, r16.wwww
                utof r22.y, r17.w
                mad r13.zw, r13.zzzw, r22.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
                add r21.xw, r22.zzzy, l(-0.500000, 0.000000, 0.000000, -0.500000)
                min r13.zw, r13.zzzw, r21.xxxw
                utof r29.x, r18.w
                utof r29.yz, r21.yyzy
                add r13.zw, r13.zzzw, r29.xxxy
                mul r29.xy, r13.zwzz, cb1[84].zwzz
                mul r21.xyz, r23.xyzx, cb1[84].zwzz
                mul r21.xyz, r22.xyzx, r21.xyzx
                mul r23.xyz, r27.xyzx, cb1[84].zwzz
                mul r22.xyz, r22.xyzx, r23.xyzx
                sample_d_indexable(texture2darray)(float,float,float,float) r21.xyz, r29.xyzx, t44.xyzw, s4, r21.xyzx, r22.xyzx
              else 
                mov r21.xyz, l(0.500000,0.500000,1.000000,0)
              endif 
              mad r13.zw, r21.xxxy, l(0.000000, 0.000000, 1.99218750, 1.99218750), l(0.000000, 0.000000, -1.000000, -1.000000)
              dp2 r16.w, r13.zwzz, r13.zwzz
              add r16.w, -r16.w, l(1.000000)
              max r16.w, r16.w, l(0.000000)
              sqrt r16.w, r16.w
              mul r17.w, r21.z, r21.z
              mul r17.w, r17.w, l(0.33333334)
              min r17.w, r17.w, l(1.000000)
              dp3 r18.w, r26.xyzx, r26.xyzx
              rsq r18.w, r18.w
              mul r21.xyz, r18.wwww, r26.xyzx
              dp3 r18.w, -r25.xyzx, -r25.xyzx
              rsq r18.w, r18.w
              mul r22.xyz, r18.wwww, -r25.xyzx
              mul r23.xyz, r5.xxxx, r24.xyzx
              mul r21.xyz, r5.xxxx, r21.xyzx
              mul r22.xyz, r5.xxxx, r22.xyzx
              mul r18.w, r12.w, l(-17.000000)
              exp r18.w, r18.w
              add r17.w, r17.w, r18.w
              log r17.w, r17.w
              mul r17.w, r17.w, l(-0.05882353)
              max r12.w, r17.w, l(0.000000)
              mul r22.xyz, r13.wwww, r22.xyzx
              mad r21.xyz, r21.xyzx, r13.zzzz, r22.xyzx
              mad r21.xyz, r23.xyzx, r16.wwww, r21.xyzx
              dp3 r13.z, r21.xyzx, r21.xyzx
              rsq r13.z, r13.z
              mul r21.xyz, r13.zzzz, r21.xyzx
              add r13.z, -r15.w, l(1.000000)
              mul r22.xyz, r13.zzzz, r18.xyzx
              mad r18.xyz, r21.xyzx, r15.wwww, r22.xyzx
            endif 
            add r13.z, -r15.w, l(1.000000)
            mul r21.xyz, r13.zzzz, r14.xyzx
            mad r14.xyz, r20.xyzx, r15.wwww, r21.xyzx
            mul r20.xyz, r13.zzzz, r19.xyzx
            mad r19.xyz, r28.xyzx, r15.wwww, r20.xyzx
            mad r8.w, r8.w, r13.z, r15.w
            mul r13.z, r9.w, r13.z
            mad r9.w, r12.w, r15.w, r13.z
          endif 
        endif 
      endif 
    endif 
  endloop 
  mov r15.xyz, r14.xyzx
  mov r16.xyz, r18.xyzx
  mov r17.xyz, r19.xyzx
  mov r3.w, r8.w
  mov r4.w, r9.w
  iadd r6.w, r6.w, l(32)
endloop 
mov_sat r3.w, r3.w
add r1.z, -r3.w, l(1.000000)
mad r2.xyz, r2.xyzx, r1.zzzz, r15.xyzx
mad r0.y, r0.y, r1.z, r3.w
mad r4.xyz, r4.xyzx, r1.zzzz, r16.xyzx
dp3 r1.w, r4.xyzx, r4.xyzx
rsq r1.w, r1.w
mul r9.xyz, r1.wwww, r4.xyzx
mad r4.y, r0.z, r1.z, r4.w
mad r3.xyz, r3.xyzx, r1.zzzz, r17.xyzx
lt r0.z, l(0.500000), cb0[20].x
if_nz r0.z
  mul r0.z, cb0[12].w, cb0[12].z
  mul r1.w, r0.z, cb0[13].x
  mul r2.w, r1.w, cb1[69].w
  ge r2.w, r2.w, -r2.w
  movc r2.w, r2.w, r1.w, -r1.w
  div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
  mul r3.w, r3.w, cb1[69].w
  frc r3.w, r3.w
  mul r2.w, r2.w, r3.w
  div r1.w, r2.w, r1.w
  mul r0.z, r0.z, r1.w
  round_ne r0.z, r0.z
  div r1.w, r0.z, cb0[12].w
  mul r2.w, r0.z, cb0[12].w
  ge r2.w, r2.w, -r2.w
  movc r2.w, r2.w, cb0[12].w, -cb0[12].w
  div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
  mul r0.z, r0.z, r3.w
  frc r0.z, r0.z
  mul r0.z, r0.z, r2.w
  round_z r0.z, r0.z
  add r0.z, r0.z, r1.x
  div r10.x, r0.z, cb0[12].w
  round_z r0.z, r1.w
  add r0.z, r0.z, r1.y
  div r10.y, r0.z, cb0[12].z
else 
  dp3 r0.z, -v7.xyzx, -v7.xyzx
  rsq r0.z, r0.z
  mul r13.xyz, r0.zzzz, -v7.xyzx
  dp3 r14.x, r13.xyzx, r6.xyzx
  dp3 r14.y, r13.xyzx, r7.xyzx
  dp3 r0.z, r13.xyzx, r5.yzwy
  lt r1.w, l(0.000000), r0.z
  div r4.zw, -r14.xxxy, r0.zzzz
  and r4.zw, r1.wwww, r4.zzzw
  add r8.zw, r1.xxxy, l(0.000000, 0.000000, -0.500000, -0.500000)
  add r0.z, cb0[16].y, l(0.000010)
  mul r4.zw, r0.zzzz, r4.zzzw
  mul r4.zw, r4.zzzw, cb0[14].zzzw
  mad r4.zw, r8.zzzw, cb0[14].zzzw, r4.zzzw
  mad r4.zw, cb0[15].xxxy, cb0[14].zzzw, r4.zzzw
  mad r0.z, cb0[13].z, cb1[69].w, l(1.000000)
  mul r0.z, r0.z, cb0[13].y
  mul r0.z, r0.z, l(0.01745329)
  sincos r5.x, r13.x, r0.z
  mov r13.y, r13.x
  mov r13.z, r5.x
  dp2 r14.x, r13.yzyy, r4.zwzz
  mov r13.x, -r5.x
  dp2 r14.y, r13.xyxx, r4.zwzz
  mul r4.zw, cb0[14].xxxy, cb1[69].wwww
  mad r4.zw, r4.zzzw, cb0[14].zzzw, r14.xxxy
  mul r0.z, cb0[16].x, cb1[69].w
  sincos null, r0.z, r0.z
  mad r0.z, r0.z, l(0.500000), l(0.500000)
  add r0.z, -r0.z, l(1.000000)
  add r1.w, -cb0[15].z, cb0[15].w
  mad r0.z, r0.z, r1.w, cb0[15].z
  div r4.zw, r4.zzzw, r0.zzzz
  add r4.zw, r4.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
  mov_sat r8.zw, r4.zzzw
  movc r10.xy, cb0[16].zwzz, r8.zwzz, r4.zwzz
endif 
sample_indexable(texture2d)(float,float,float,float) r10.xyzw, r10.xyxx, t38.xyzw, s1
mul r10.xyzw, r10.xyzw, cb0[19].xyzw
mul r10.xyz, r10.wwww, r10.xyzx
add r0.z, v3.y, v3.x
add r0.z, r0.z, v3.z
add r1.w, r0.z, cb0[17].y
frc r1.w, r1.w
mad r13.y, cb1[69].w, cb0[17].z, r1.w
mov r13.x, cb0[17].x
sample_l_indexable(texture2d)(float,float,float,float) r1.w, r13.xyxx, t30.yzwx, s7, l(0.000000)
log r1.w, |r1.w|
mul r1.w, r1.w, cb0[18].z
exp r1.w, r1.w
add r2.w, -cb0[18].x, cb0[18].y
mad r1.w, r1.w, r2.w, cb0[18].x
mul r10.xyz, r1.wwww, r10.xyzx
lt r1.w, l(0.500000), cb0[25].z
if_nz r1.w
  mul r1.w, cb0[21].w, cb0[22].x
  mul r2.w, r1.w, cb0[22].y
  mul r3.w, r2.w, cb1[69].w
  ge r3.w, r3.w, -r3.w
  movc r3.w, r3.w, r2.w, -r2.w
  div r4.z, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  mul r4.z, r4.z, cb1[69].w
  frc r4.z, r4.z
  mul r3.w, r3.w, r4.z
  div r2.w, r3.w, r2.w
  mul r1.w, r1.w, r2.w
  round_ne r1.w, r1.w
  div r2.w, r1.w, cb0[22].x
  mul r3.w, r1.w, cb0[22].x
  ge r3.w, r3.w, -r3.w
  movc r3.w, r3.w, cb0[22].x, -cb0[22].x
  div r4.z, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  mul r1.w, r1.w, r4.z
  frc r1.w, r1.w
  mul r1.w, r1.w, r3.w
  round_z r1.w, r1.w
  add r1.w, r1.w, r1.x
  div r13.x, r1.w, cb0[22].x
  round_z r1.w, r2.w
  add r1.w, r1.w, r1.y
  div r13.y, r1.w, cb0[21].w
else 
  dp3 r1.w, -v7.xyzx, -v7.xyzx
  rsq r1.w, r1.w
  mul r14.xyz, r1.wwww, -v7.xyzx
  dp3 r15.x, r14.xyzx, r6.xyzx
  dp3 r15.y, r14.xyzx, r7.xyzx
  dp3 r1.w, r14.xyzx, r5.yzwy
  lt r2.w, l(0.000000), r1.w
  div r4.zw, -r15.xxxy, r1.wwww
  and r4.zw, r2.wwww, r4.zzzw
  add r8.zw, r1.xxxy, l(0.000000, 0.000000, -0.500000, -0.500000)
  add r1.w, cb0[25].y, l(0.000010)
  mul r4.zw, r1.wwww, r4.zzzw
  mul r4.zw, r4.zzzw, cb0[23].zzzw
  mad r4.zw, r8.zzzw, cb0[23].zzzw, r4.zzzw
  mad r4.zw, cb0[24].xxxy, cb0[23].zzzw, r4.zzzw
  mad r1.w, cb0[22].w, cb1[69].w, l(1.000000)
  mul r1.w, r1.w, cb0[22].z
  mul r1.w, r1.w, l(0.01745329)
  sincos r5.x, r14.x, r1.w
  mov r14.y, r14.x
  mov r14.z, r5.x
  dp2 r15.x, r14.yzyy, r4.zwzz
  mov r14.x, -r5.x
  dp2 r15.y, r14.xyxx, r4.zwzz
  mul r4.zw, cb0[23].xxxy, cb1[69].wwww
  mad r4.zw, r4.zzzw, cb0[23].zzzw, r15.xxxy
  mul r1.w, cb0[25].x, cb1[69].w
  sincos null, r1.w, r1.w
  mad r1.w, r1.w, l(0.500000), l(0.500000)
  add r1.w, -r1.w, l(1.000000)
  add r2.w, -cb0[24].z, cb0[24].w
  mad r1.w, r1.w, r2.w, cb0[24].z
  div r4.zw, r4.zzzw, r1.wwww
  add r4.zw, r4.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
  mov_sat r8.zw, r4.zzzw
  movc r13.x, cb0[25].w, r8.z, r4.z
  movc r13.y, cb0[26].x, r8.w, r4.w
endif 
sample_indexable(texture2d)(float,float,float,float) r13.xyzw, r13.xyxx, t46.xyzw, s1
mul r13.xyz, r13.xyzx, cb0[21].xyzx
mul r1.w, r13.w, cb0[19].w
mul r13.xyz, r1.wwww, r13.xyzx
add r1.w, r0.z, cb0[26].z
frc r1.w, r1.w
mad r14.y, cb1[69].w, cb0[26].w, r1.w
mov r14.x, cb0[26].y
sample_l_indexable(texture2d)(float,float,float,float) r1.w, r14.xyxx, t30.yzwx, s7, l(0.000000)
log r1.w, |r1.w|
mul r1.w, r1.w, cb0[27].z
exp r1.w, r1.w
add r2.w, -cb0[27].x, cb0[27].y
mad r1.w, r1.w, r2.w, cb0[27].x
mul r13.xyz, r1.wwww, r13.xyzx
add r1.w, -r13.w, l(1.000000)
mad r10.xyz, r10.xyzx, r1.wwww, r13.xyzx
lt r1.w, l(0.500000), cb0[32].z
if_nz r1.w
  mul r1.w, cb0[28].w, cb0[29].x
  mul r2.w, r1.w, cb0[29].y
  mul r3.w, r2.w, cb1[69].w
  ge r3.w, r3.w, -r3.w
  movc r3.w, r3.w, r2.w, -r2.w
  div r4.z, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  mul r4.z, r4.z, cb1[69].w
  frc r4.z, r4.z
  mul r3.w, r3.w, r4.z
  div r2.w, r3.w, r2.w
  mul r1.w, r1.w, r2.w
  round_ne r1.w, r1.w
  div r2.w, r1.w, cb0[29].x
  mul r3.w, r1.w, cb0[29].x
  ge r3.w, r3.w, -r3.w
  movc r3.w, r3.w, cb0[29].x, -cb0[29].x
  div r4.z, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  mul r1.w, r1.w, r4.z
  frc r1.w, r1.w
  mul r1.w, r1.w, r3.w
  round_z r1.w, r1.w
  add r1.w, r1.w, r1.x
  div r13.x, r1.w, cb0[29].x
  round_z r1.w, r2.w
  add r1.w, r1.w, r1.y
  div r13.y, r1.w, cb0[28].w
else 
  dp3 r1.w, -v7.xyzx, -v7.xyzx
  rsq r1.w, r1.w
  mul r14.xyz, r1.wwww, -v7.xyzx
  dp3 r6.x, r14.xyzx, r6.xyzx
  dp3 r6.y, r14.xyzx, r7.xyzx
  dp3 r1.w, r14.xyzx, r5.yzwy
  lt r2.w, l(0.000000), r1.w
  div r4.zw, -r6.xxxy, r1.wwww
  and r4.zw, r2.wwww, r4.zzzw
  add r1.xy, r1.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
  add r1.w, cb0[32].y, l(0.000010)
  mul r4.zw, r1.wwww, r4.zzzw
  mul r4.zw, r4.zzzw, cb0[30].zzzw
  mad r1.xy, r1.xyxx, cb0[30].zwzz, r4.zwzz
  mad r1.xy, cb0[31].xyxx, cb0[30].zwzz, r1.xyxx
  mad r1.w, cb0[29].w, cb1[69].w, l(1.000000)
  mul r1.w, r1.w, cb0[29].z
  mul r1.w, r1.w, l(0.01745329)
  sincos r5.x, r6.x, r1.w
  mov r6.y, r6.x
  mov r6.z, r5.x
  dp2 r7.x, r6.yzyy, r1.xyxx
  mov r6.x, -r5.x
  dp2 r7.y, r6.xyxx, r1.xyxx
  mul r1.xy, cb0[30].xyxx, cb1[69].wwww
  mad r1.xy, r1.xyxx, cb0[30].zwzz, r7.xyxx
  mul r1.w, cb0[32].x, cb1[69].w
  sincos null, r1.w, r1.w
  mad r1.w, r1.w, l(0.500000), l(0.500000)
  add r1.w, -r1.w, l(1.000000)
  add r2.w, -cb0[31].z, cb0[31].w
  mad r1.w, r1.w, r2.w, cb0[31].z
  div r1.xy, r1.xyxx, r1.wwww
  add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  mov_sat r4.zw, r1.xxxy
  movc r13.x, cb0[32].w, r4.z, r1.x
  movc r13.y, cb0[33].x, r4.w, r1.y
endif 
sample_indexable(texture2d)(float,float,float,float) r5.xyzw, r13.xyxx, t47.xyzw, s1
mul r1.xyw, r5.xyxz, cb0[28].xyxz
mul r2.w, r5.w, cb0[19].w
mul r1.xyw, r1.xyxw, r2.wwww
add r0.z, r0.z, cb0[33].z
frc r0.z, r0.z
mad r5.y, cb1[69].w, cb0[33].w, r0.z
mov r5.x, cb0[33].y
sample_l_indexable(texture2d)(float,float,float,float) r0.z, r5.xyxx, t30.yzxw, s7, l(0.000000)
log r0.z, |r0.z|
mul r0.z, r0.z, cb0[34].z
exp r0.z, r0.z
add r2.w, -cb0[34].x, cb0[34].y
mad r0.z, r0.z, r2.w, cb0[34].x
mul r1.xyw, r0.zzzz, r1.xyxw
add r0.z, -r5.w, l(1.000000)
mad r1.xyw, r10.xyxz, r0.zzzz, r1.xyxw
mul r1.xyz, r1.zzzz, r1.xywx
dp3 r0.z, -v7.xyzx, -v7.xyzx
rsq r0.z, r0.z
mul r5.xyz, r0.zzzz, -v7.xyzx
ine r2.w, cb1[92].x, l(0)
utof r4.zw, r8.xxxy
dp2 r3.w, r4.wzww, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r3.w, r3.w
mul r3.w, r3.w, l(52.982918)
frc r3.w, r3.w
mad r3.w, r3.w, l(6.28318548), cb1[70].w
sincos r6.x, r7.x, r3.w
dp2 r3.w, r4.zwzz, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r3.w, r3.w
mul r3.w, r3.w, l(52.982918)
frc r3.w, r3.w
mad r3.w, r3.w, l(6.28318548), cb1[70].w
sincos r8.x, r10.x, r3.w
dp3_sat r4.x, r9.xyzx, r5.xyzx
dp3 r3.w, -r5.xyzx, r9.xyzx
add r3.w, r3.w, r3.w
mad r13.xyz, r9.xyzx, -r3.wwww, -r5.xyzx
mul r3.w, r4.y, l(17.000000)
exp r3.w, r3.w
add r3.w, r3.w, l(2.000000)
div r3.w, l(2.000000), r3.w
sqrt r4.z, r3.w
add r4.w, -r4.y, l(1.000000)
mul r5.w, r4.w, l(5.000000)
mad r6.z, r4.w, l(5.000000), l(-2.500000)
mul_sat r6.z, r6.z, l(0.400000)
mul r6.z, r6.z, l(100.000000)
mad r8.yz, -r4.wwww, l(0.000000, 10.000000, 5.000000, 0.000000), l(0.000000, 6.857410, 7.085000, 0.000000)
exp r6.w, r8.y
mul r6.w, r4.x, r6.w
mul r6.w, r6.w, l(9.136810)
mul r7.w, r4.w, r5.w
mad r7.w, -r7.w, l(2.015905), r8.z
exp r7.w, r7.w
mul r7.w, r4.x, r7.w
mul r7.w, r7.w, l(9.708090)
max r6.w, r6.w, r7.w
max r6.w, r6.w, l(1.268160)
mov r14.xy, l(0,0,0,0)
mov r15.w, l(0)
mov r16.yz, l(0,0,1.000000,0)
mov r17.xy, l(0,0,0,0)
mov r18.xy, l(0,0,0,0)
mov r19.xy, l(0,0,0,0)
mov r20.x, l(1.000000)
mov r21.xyzw, l(0,0,0,0)
mov r22.yzw, l(0,0,0,0)
mov r7.w, l(0)
mov r8.y, l(0)
loop 
  uge r8.z, r8.y, cb2[0].y
  breakc_nz r8.z
  ushr r14.z, r8.y, l(5)
  iadd r15.xyz, r12.xyzx, r14.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r8.z, r15.xyzw, t7.yzxw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r23.xyzw, r8.y, l(0), t15.wxyz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r8.y, l(16), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r8.y, l(32), t15.yxwz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r8.y, l(48), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r8.y, l(64), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r8.y, l(80), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r10.yz, r8.y, l(96), t15.xxyx
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r8.y, l(116), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r8.y, l(132), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r8.y, l(148), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r8.y, l(164), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r8.y, l(180), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r8.y, l(196), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xy, r8.y, l(212), t15.xyxx
  add r15.xyz, -r23.yzwy, v7.xyzx
  dp3 r8.w, r15.xyzx, r15.xyzx
  sqrt r8.w, r8.w
  ge r8.w, cb2[54].y, r8.w
  and r10.w, r29.y, l(0x0000ffff)
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r10.w, l(0), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r10.w, l(16), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r38.xyzw, r10.w, l(32), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r39.xyzw, r10.w, l(48), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r40.xyzw, r10.w, l(64), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r41.xyzw, r10.w, l(80), t16.xyzw
  dp3 r12.w, r36.xyzx, r15.xyzx
  add_sat r12.w, r36.w, r12.w
  dp3 r14.z, r37.xyzx, r15.xyzx
  add_sat r14.z, r37.w, r14.z
  mul r12.w, r12.w, r14.z
  dp3 r14.z, r38.xyzx, r15.xyzx
  add_sat r14.z, r38.w, r14.z
  mul r12.w, r12.w, r14.z
  dp3 r14.z, r39.xyzx, r15.xyzx
  add_sat r14.z, r39.w, r14.z
  mul r12.w, r12.w, r14.z
  dp3 r14.z, r40.xyzx, r15.xyzx
  add_sat r14.z, r40.w, r14.z
  mul r12.w, r12.w, r14.z
  dp3 r14.z, r41.xyzx, r15.xyzx
  add_sat r14.z, r41.w, r14.z
  mul r16.x, r12.w, r14.z
  and r12.w, r10.y, l(1)
  movc r14.zw, r12.wwww, r16.xxxy, r16.zzzx
  mov r36.xy, r29.zwzz
  mov r36.z, r30.z
  dp3 r12.w, r13.xyzx, r36.xyzx
  dp3 r16.x, r15.xyzx, r36.xyzx
  add r16.x, -r30.w, r16.x
  ge r16.w, r16.x, l(0.000000)
  max r16.x, r6.z, |r16.x|
  movc r16.x, r16.w, r16.x, -r16.x
  max r12.w, -r12.w, l(0.00000010)
  div r12.w, r16.x, r12.w
  min r12.w, |r12.w|, l(131072.000000)
  mov r30.z, r31.z
  dp3 r16.x, r13.xyzx, r30.xyzx
  dp3 r16.w, r15.xyzx, r30.xyzx
  add r16.w, -r31.w, r16.w
  ge r17.w, r16.w, l(0.000000)
  max r16.w, r6.z, |r16.w|
  movc r16.w, r17.w, r16.w, -r16.w
  max r16.x, -r16.x, l(0.00000010)
  div r16.x, r16.w, r16.x
  min r12.w, r12.w, |r16.x|
  mov r31.z, r32.z
  dp3 r16.x, r13.xyzx, r31.xyzx
  dp3 r16.w, r15.xyzx, r31.xyzx
  add r16.w, -r32.w, r16.w
  ge r17.w, r16.w, l(0.000000)
  max r16.w, r6.z, |r16.w|
  movc r16.w, r17.w, r16.w, -r16.w
  max r16.x, -r16.x, l(0.00000010)
  div r16.x, r16.w, r16.x
  min r12.w, r12.w, |r16.x|
  mov r32.z, r33.z
  dp3 r16.x, r13.xyzx, r32.xyzx
  dp3 r16.w, r15.xyzx, r32.xyzx
  add r16.w, -r33.w, r16.w
  ge r17.w, r16.w, l(0.000000)
  max r16.w, r6.z, |r16.w|
  movc r16.w, r17.w, r16.w, -r16.w
  max r16.x, -r16.x, l(0.00000010)
  div r16.x, r16.w, r16.x
  min r12.w, r12.w, |r16.x|
  mov r33.z, r34.x
  dp3 r16.x, r13.xyzx, r33.xyzx
  dp3 r16.w, r15.xyzx, r33.xyzx
  add r16.w, -r34.y, r16.w
  ge r17.w, r16.w, l(0.000000)
  max r16.w, r6.z, |r16.w|
  movc r16.w, r17.w, r16.w, -r16.w
  max r16.x, -r16.x, l(0.00000010)
  div r16.x, r16.w, r16.x
  min r12.w, r12.w, |r16.x|
  mov r35.zw, r34.zzzw
  dp3 r16.x, r13.zxyz, r35.xzwx
  dp3 r16.w, r15.zxyz, r35.xzwx
  add r16.w, -r35.y, r16.w
  ge r17.w, r16.w, l(0.000000)
  max r16.w, r6.z, |r16.w|
  movc r16.w, r17.w, r16.w, -r16.w
  max r16.x, -r16.x, l(0.00000010)
  div r16.x, r16.w, r16.x
  min r12.w, r12.w, |r16.x|
  mov r30.x, r26.w
  mov r30.yz, r27.zzwz
  add r30.xyz, r15.xyzx, r30.xyzx
  mad r30.xyz, r13.xyzx, r12.wwww, r30.xyzx
  dp3 r16.x, r30.xyzx, r30.xyzx
  sqrt r16.x, r16.x
  div r12.w, r12.w, r16.x
  add r12.w, r12.w, r12.w
  sqrt r12.w, r12.w
  mad r12.w, r4.w, l(5.000000), r12.w
  add r12.w, r12.w, l(-0.844800)
  mov r23.y, r24.z
  mov r23.z, r25.x
  dp3 r31.x, r30.xyzx, r23.xyzx
  mov r32.xy, r24.xwxx
  mov r32.z, r25.w
  dp3 r31.y, r30.xyzx, r32.xyzx
  mov r25.x, r24.y
  dp3 r31.z, r30.xyzx, r25.xyzx
  ubfe r16.xw, l(6, 0, 0, 9), l(25, 0, 0, 16), r29.yyyy
  utof r31.w, r16.w
  sample_l_indexable(texturecubearray)(float,float,float,float) r24.xyz, r31.xyzw, t8.xyzw, s2, r12.w
  and r29.yzw, r24.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
  ieq r29.yzw, r29.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
  or r12.w, r29.z, r29.y
  or r12.w, r29.w, r12.w
  movc r24.xyz, r12.wwww, l(1.000000,1.000000,0,0), r24.xyzx
  dp3 r30.x, r15.xyzx, r23.xyzx
  dp3 r30.y, r15.xyzx, r32.xyzx
  dp3 r30.z, r15.xyzx, r25.xyzx
  mad_sat r26.xyz, r30.xyzx, r26.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mov r27.z, r28.x
  mad r26.xyz, r26.xyzx, r27.xyzx, r28.yzwy
  dp3 r31.x, r9.xyzx, r23.xyzx
  dp3 r31.y, r9.xyzx, r32.xyzx
  dp3 r31.z, r9.xyzx, r25.xyzx
  lt r23.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r31.xyzx
  movc r17.z, r23.x, l(0), l(0.500000)
  add r25.xyz, r17.xyzx, r26.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r25.xyz, r25.xyzx, t17.xyzw, s4, l(0.000000)
  movc r18.z, r23.y, l(0), l(0.500000)
  add r23.xyw, r18.xyxz, r26.xyxz
  sample_l_indexable(texture3d)(float,float,float,float) r23.xyw, r23.xywx, t18.xywz, s4, l(0.000000)
  movc r19.z, r23.z, l(0), l(0.500000)
  add r26.xyz, r19.xyzx, r26.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r26.xyz, r26.xyzx, t19.xyzw, s4, l(0.000000)
  mul r27.xyz, r31.xyzx, r31.xyzx
  sample_l_indexable(texturecubearray)(float,float,float,float) r28.xyz, r31.xyzw, t8.xyzw, s2, l(6.000000)
  and r29.yzw, r28.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
  ieq r29.yzw, r29.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
  or r12.w, r29.z, r29.y
  or r12.w, r29.w, r12.w
  movc r28.xyz, r12.wwww, l(1.000000,1.000000,0,0), r28.xyzx
  mov r30.xyzw, r21.xyzw
  mov r29.yzw, r22.yyzw
  mov r12.w, r7.w
  mov r16.w, r8.z
  loop 
    breakc_z r16.w
    firstbit_lo r17.z, r16.w
    ishl r17.z, l(1), r17.z
    and r17.w, r16.w, r17.z
    if_nz r17.w
      not r17.z, r17.z
      and r16.w, r16.w, r17.z
      if_nz r8.w
        mov r17.z, r10.y
        mov r31.xy, r14.zwzz
        mov r17.w, l(1)
        loop 
          ige r18.z, r17.w, r16.x
          breakc_nz r18.z
          iadd r18.z, r10.w, r17.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r18.z, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r18.z, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r18.z, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r18.z, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r18.z, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r18.z, l(80), t16.xyzw
          dp3 r18.z, r32.xyzx, r15.xyzx
          add_sat r18.z, r32.w, r18.z
          mul r18.z, r18.z, r31.x
          dp3 r18.w, r33.xyzx, r15.xyzx
          add_sat r18.w, r33.w, r18.w
          mul r18.z, r18.w, r18.z
          dp3 r18.w, r34.xyzx, r15.xyzx
          add_sat r18.w, r34.w, r18.w
          mul r18.z, r18.w, r18.z
          dp3 r18.w, r35.xyzx, r15.xyzx
          add_sat r18.w, r35.w, r18.w
          mul r18.z, r18.w, r18.z
          dp3 r18.w, r36.xyzx, r15.xyzx
          add_sat r18.w, r36.w, r18.w
          mul r18.z, r18.w, r18.z
          dp3 r18.w, r37.xyzx, r15.xyzx
          add_sat r18.w, r37.w, r18.w
          mul r31.x, r18.w, r18.z
          ushr r19.z, r17.z, l(2)
          ubfe r19.w, l(1), l(2), r17.z
          and r20.z, r19.z, l(2)
          max r20.w, r31.x, r31.y
          mad r18.z, -r18.z, r18.w, l(1.000000)
          mul r18.z, r18.z, r31.y
          movc r20.y, r20.z, r18.z, r20.w
          movc r31.xy, r19.wwww, r31.xyxx, r20.xyxx
          iadd r17.w, r17.w, l(1)
          mov r17.z, r19.z
        endloop 
        mov_sat r31.y, r31.y
        mul r17.z, r10.z, r31.y
        lt r17.w, l(0.000000), r17.z
        if_nz r17.w
          mad r32.z, r31.y, r10.z, r29.w
          mul r17.z, r29.x, r17.z
          mul r20.yzw, r17.zzzz, r27.xxyz
          mul r31.xzw, r20.zzzz, r23.xxyw
          mad r31.xzw, r25.xxyz, r20.yyyy, r31.xxzw
          mad r20.yzw, r26.xxyz, r20.wwww, r31.xxzw
          mul r31.xzw, r28.xxyz, r20.yyzw
          dp3 r17.w, r31.xzwx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r33.xyz, r20.yzwy, r28.xyzx, r30.xyzx
          mul r18.z, r6.w, r17.w
          mul r20.yzw, r17.zzzz, r24.xxyz
          dp3 r17.z, r20.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r17.z, r6.w, r17.w, r17.z
          div r17.z, r18.z, r17.z
          mov r34.x, r30.w
          mov r34.yz, r29.yyzy
          mad r32.xyw, r20.zwzy, r17.zzzz, r34.yzyx
          mov r33.w, r32.w
        else 
          mov r33.xyzw, r30.xyzw
          mov r32.xyz, r29.yzwy
        endif 
        mov r12.w, l(-1)
        mov r30.xyzw, r33.xyzw
        mov r29.yzw, r32.xxyz
        break 
      endif 
    endif 
  endloop 
  if_nz r12.w
    mov r21.xyzw, r30.xyzw
    mov r22.yzw, r29.yyzw
    mov r7.w, l(-1)
    break 
  endif 
  iadd r8.y, r8.y, l(32)
  mov r21.xyzw, r30.xyzw
  mov r22.yzw, r29.yyzw
  mov r7.w, r12.w
endloop 
if_z r7.w
  iadd r7.w, cb2[0].y, -cb2[58].x
  and r8.y, r7.w, l(-32)
  iadd r8.z, r7.w, -r8.y
  and r8.w, cb2[0].y, l(-32)
  iadd r10.y, -r8.w, cb2[0].y
  mov r14.xy, l(0,0,0,0)
  mov r15.w, l(0)
  mov r16.yz, l(0,0,1.000000,0)
  mov r17.xy, l(0,0,0,0)
  mov r18.x, l(1.000000)
  mov r19.xy, l(0,0,0,0)
  mov r20.xy, l(0,0,0,0)
  mov r23.xyzw, r21.xyzw
  mov r24.yzw, r22.yyzw
  mov r10.z, r8.y
  loop 
    uge r10.w, r10.z, cb2[0].y
    breakc_nz r10.w
    ushr r14.z, r10.z, l(5)
    iadd r15.xyz, r12.xyzx, r14.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r10.w, r15.xyzw, t7.yzwx
    ieq r12.w, r8.y, r10.z
    bfi r14.z, r8.z, l(0), l(0), r10.w
    movc r10.w, r12.w, r14.z, r10.w
    ieq r12.w, r8.w, r10.z
    ubfe r14.z, r10.y, l(0), r10.w
    movc r10.w, r12.w, r14.z, r10.w
    iadd r12.w, r10.z, cb2[0].x
    mov r25.xyzw, r23.xyzw
    mov r26.xyz, r24.yzwy
    mov r14.z, r10.w
    loop 
      breakc_z r14.z
      firstbit_lo r14.w, r14.z
      ishl r15.x, l(1), r14.w
      and r15.y, r14.z, r15.x
      if_nz r15.y
        xor r14.z, r14.z, r15.x
        iadd r15.x, r12.w, r14.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r27.xyzw, r15.x, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r15.xy, r15.x, l(16), t11.xyxx
        add r27.xyz, r27.xyzx, -v7.xyzx
        mov r15.z, r27.w
        lt r15.xyz, |r27.xyzx|, r15.zxyz
        and r15.x, r15.y, r15.x
        and r15.x, r15.z, r15.x
        if_nz r15.x
          iadd r14.w, r10.z, r14.w
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r14.w, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r15.xy, r14.w, l(96), t15.xyxx
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r14.w, l(116), t15.zwxy
          add r29.xyz, -r27.yzwy, v7.xyzx
          and r15.z, r28.w, l(0x0000ffff)
          ubfe r16.w, l(6), l(25), r28.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r15.z, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r15.z, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r15.z, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r15.z, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r15.z, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r15.z, l(80), t16.xyzw
          dp3 r17.w, r30.xyzx, r29.xyzx
          add_sat r17.w, r30.w, r17.w
          dp3 r18.z, r31.xyzx, r29.xyzx
          add_sat r18.z, r31.w, r18.z
          mul r17.w, r17.w, r18.z
          dp3 r18.z, r32.xyzx, r29.xyzx
          add_sat r18.z, r32.w, r18.z
          mul r17.w, r17.w, r18.z
          dp3 r18.z, r33.xyzx, r29.xyzx
          add_sat r18.z, r33.w, r18.z
          mul r17.w, r17.w, r18.z
          dp3 r18.z, r34.xyzx, r29.xyzx
          add_sat r18.z, r34.w, r18.z
          mul r17.w, r17.w, r18.z
          dp3 r18.z, r35.xyzx, r29.xyzx
          add_sat r18.z, r35.w, r18.z
          mul r16.x, r17.w, r18.z
          and r17.w, r15.x, l(1)
          movc r18.zw, r17.wwww, r16.xxxy, r16.zzzx
          mov r16.x, r15.x
          mov r30.xy, r18.zwzz
          mov r17.w, l(1)
          loop 
            ige r19.w, r17.w, r16.w
            breakc_nz r19.w
            iadd r19.w, r15.z, r17.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r19.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r19.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r19.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r19.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r19.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r19.w, l(80), t16.xyzw
            dp3 r19.w, r31.xyzx, r29.xyzx
            add_sat r19.w, r31.w, r19.w
            mul r19.w, r19.w, r30.x
            dp3 r20.w, r32.xyzx, r29.xyzx
            add_sat r20.w, r32.w, r20.w
            mul r19.w, r19.w, r20.w
            dp3 r20.w, r33.xyzx, r29.xyzx
            add_sat r20.w, r33.w, r20.w
            mul r19.w, r19.w, r20.w
            dp3 r20.w, r34.xyzx, r29.xyzx
            add_sat r20.w, r34.w, r20.w
            mul r19.w, r19.w, r20.w
            dp3 r20.w, r35.xyzx, r29.xyzx
            add_sat r20.w, r35.w, r20.w
            mul r19.w, r19.w, r20.w
            dp3 r20.w, r36.xyzx, r29.xyzx
            add_sat r20.w, r36.w, r20.w
            mul r30.x, r19.w, r20.w
            ushr r27.w, r16.x, l(2)
            ubfe r29.w, l(1), l(2), r16.x
            and r30.z, r27.w, l(2)
            max r30.w, r30.x, r30.y
            mad r19.w, -r19.w, r20.w, l(1.000000)
            mul r19.w, r19.w, r30.y
            movc r18.y, r30.z, r19.w, r30.w
            movc r30.xy, r29.wwww, r30.xyxx, r18.xyxx
            iadd r17.w, r17.w, l(1)
            mov r16.x, r27.w
          endloop 
          mov_sat r30.y, r30.y
          mul r15.x, r15.y, r30.y
          lt r15.z, l(0.000000), r15.x
          if_nz r15.z
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r14.w, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r14.w, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r14.w, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r14.w, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r14.w, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r14.w, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r14.w, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r14.w, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xyzw, r14.w, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r40.xyzw, r14.w, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r41.xy, r14.w, l(212), t15.xyxx
            mad r26.z, r30.y, r15.y, r26.z
            mul r14.w, r28.z, r15.x
            mov r28.z, r36.z
            dp3 r15.x, r13.xyzx, r28.xyzx
            dp3 r15.y, r29.xyzx, r28.xyzx
            add r15.y, -r36.w, r15.y
            ge r15.z, r15.y, l(0.000000)
            max r15.y, r6.z, |r15.y|
            movc r15.y, r15.z, r15.y, -r15.y
            max r15.x, -r15.x, l(0.00000010)
            div r15.x, r15.y, r15.x
            min r15.x, |r15.x|, l(131072.000000)
            mov r36.z, r37.z
            dp3 r15.y, r13.xyzx, r36.xyzx
            dp3 r15.z, r29.xyzx, r36.xyzx
            add r15.z, -r37.w, r15.z
            ge r16.x, r15.z, l(0.000000)
            max r15.z, r6.z, |r15.z|
            movc r15.z, r16.x, r15.z, -r15.z
            max r15.y, -r15.y, l(0.00000010)
            div r15.y, r15.z, r15.y
            min r15.x, |r15.y|, r15.x
            mov r37.z, r38.z
            dp3 r15.y, r13.xyzx, r37.xyzx
            dp3 r15.z, r29.xyzx, r37.xyzx
            add r15.z, -r38.w, r15.z
            ge r16.x, r15.z, l(0.000000)
            max r15.z, r6.z, |r15.z|
            movc r15.z, r16.x, r15.z, -r15.z
            max r15.y, -r15.y, l(0.00000010)
            div r15.y, r15.z, r15.y
            min r15.x, |r15.y|, r15.x
            mov r38.z, r39.z
            dp3 r15.y, r13.xyzx, r38.xyzx
            dp3 r15.z, r29.xyzx, r38.xyzx
            add r15.z, -r39.w, r15.z
            ge r16.x, r15.z, l(0.000000)
            max r15.z, r6.z, |r15.z|
            movc r15.z, r16.x, r15.z, -r15.z
            max r15.y, -r15.y, l(0.00000010)
            div r15.y, r15.z, r15.y
            min r15.x, |r15.y|, r15.x
            mov r39.z, r40.x
            dp3 r15.y, r13.xyzx, r39.xyzx
            dp3 r15.z, r29.xyzx, r39.xyzx
            add r15.z, -r40.y, r15.z
            ge r16.x, r15.z, l(0.000000)
            max r15.z, r6.z, |r15.z|
            movc r15.z, r16.x, r15.z, -r15.z
            max r15.y, -r15.y, l(0.00000010)
            div r15.y, r15.z, r15.y
            min r15.x, |r15.y|, r15.x
            mov r41.zw, r40.zzzw
            dp3 r15.y, r13.zxyz, r41.xzwx
            dp3 r15.z, r29.zxyz, r41.xzwx
            add r15.z, -r41.y, r15.z
            ge r16.x, r15.z, l(0.000000)
            max r15.z, r6.z, |r15.z|
            movc r15.z, r16.x, r15.z, -r15.z
            max r15.y, -r15.y, l(0.00000010)
            div r15.y, r15.z, r15.y
            min r15.x, |r15.y|, r15.x
            mov r28.x, r33.w
            mov r28.yz, r34.zzwz
            add r18.yzw, r29.xxyz, r28.xxyz
            mad r18.yzw, r13.xxyz, r15.xxxx, r18.yyzw
            dp3 r15.y, r18.yzwy, r18.yzwy
            sqrt r15.y, r15.y
            div r15.x, r15.x, r15.y
            add r15.x, r15.x, r15.x
            sqrt r15.x, r15.x
            mad r15.x, r4.w, l(5.000000), r15.x
            add r15.x, r15.x, l(-0.844800)
            mov r27.y, r31.z
            mov r27.z, r32.x
            dp3 r36.x, r18.yzwy, r27.xyzx
            mov r28.xy, r31.xwxx
            mov r28.z, r32.w
            dp3 r36.y, r18.yzwy, r28.xyzx
            mov r32.x, r31.y
            dp3 r36.z, r18.yzwy, r32.xyzx
            ubfe r15.y, l(9), l(16), r28.w
            utof r36.w, r15.y
            sample_l_indexable(texturecubearray)(float,float,float,float) r15.xyz, r36.xyzw, t8.xyzw, s2, r15.x
            and r18.yzw, r15.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
            ieq r18.yzw, r18.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
            or r16.x, r18.z, r18.y
            or r16.x, r18.w, r16.x
            movc r15.xyz, r16.xxxx, l(1.000000,1.000000,0,0), r15.xyzx
            dp3 r31.x, r29.xyzx, r27.xyzx
            dp3 r31.y, r29.xyzx, r28.xyzx
            dp3 r31.z, r29.xyzx, r32.xyzx
            mad_sat r18.yzw, r31.xxyz, r33.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
            mov r34.z, r35.x
            mad r18.yzw, r18.yyzw, r34.xxyz, r35.yyzw
            dp3 r36.x, r9.xyzx, r27.xyzx
            dp3 r36.y, r9.xyzx, r28.xyzx
            dp3 r36.z, r9.xyzx, r32.xyzx
            lt r27.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r36.xyzx
            movc r17.z, r27.x, l(0), l(0.500000)
            add r28.xyz, r17.xyzx, r18.yzwy
            sample_l_indexable(texture3d)(float,float,float,float) r28.xyz, r28.xyzx, t17.xyzw, s4, l(0.000000)
            mul r29.xyz, r36.xyzx, r36.xyzx
            mul r29.xyz, r14.wwww, r29.xyzx
            movc r19.z, r27.y, l(0), l(0.500000)
            add r27.xyw, r18.yzyw, r19.xyxz
            sample_l_indexable(texture3d)(float,float,float,float) r27.xyw, r27.xywx, t18.xywz, s4, l(0.000000)
            mul r27.xyw, r29.yyyy, r27.xyxw
            mad r27.xyw, r28.xyxz, r29.xxxx, r27.xyxw
            movc r20.z, r27.z, l(0), l(0.500000)
            add r18.yzw, r18.yyzw, r20.xxyz
            sample_l_indexable(texture3d)(float,float,float,float) r18.yzw, r18.yzwy, t19.wxyz, s4, l(0.000000)
            mad r18.yzw, r18.yyzw, r29.zzzz, r27.xxyw
            sample_l_indexable(texturecubearray)(float,float,float,float) r27.xyz, r36.xyzw, t8.xyzw, s2, l(6.000000)
            and r28.xyz, r27.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
            ieq r28.xyz, r28.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
            or r16.x, r28.y, r28.x
            or r16.x, r28.z, r16.x
            movc r27.xyz, r16.xxxx, l(1.000000,1.000000,0,0), r27.xyzx
            mul r28.xyz, r18.yzwy, r27.xyzx
            dp3 r16.x, r28.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r25.xyz, r18.yzwy, r27.xyzx, r25.xyzx
            mul r16.w, r6.w, r16.x
            mul r15.xyz, r14.wwww, r15.xyzx
            dp3 r14.w, r15.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r14.w, r6.w, r16.x, r14.w
            div r14.w, r16.w, r14.w
            mov r27.x, r25.w
            mov r27.yz, r26.xxyx
            mad r26.xyw, r15.yzyx, r14.wwww, r27.yzyx
            mov r25.w, r26.w
          endif 
        endif 
      endif 
    endloop 
    mov r23.xyzw, r25.xyzw
    mov r24.yzw, r26.xxyz
    iadd r10.z, r10.z, l(32)
  endloop 
  lt r8.w, r24.w, l(1.000000)
  if_nz r8.w
    mov r14.xy, l(0,0,0,0)
    mov r15.w, l(0)
    mov r16.yz, l(0,0,1.000000,0)
    mov r17.xy, l(0,0,0,0)
    mov r18.x, l(1.000000)
    mov r19.xy, l(0,0,0,0)
    mov r20.xy, l(0,0,0,0)
    mov r25.x, r23.w
    mov r25.yzw, r24.yyzw
    mov r10.yzw, r23.xxyz
    mov r8.w, r24.w
    mov r12.w, l(0)
    loop 
      uge r14.w, r12.w, r7.w
      breakc_nz r14.w
      ushr r14.z, r12.w, l(5)
      iadd r15.xyz, r12.xyzx, r14.xyzx
      ld_indexable(texture2darray)(uint,uint,uint,uint) r14.z, r15.xyzw, t7.yzxw
      ieq r14.w, r8.y, r12.w
      ubfe r15.x, r8.z, l(0), r14.z
      movc r14.z, r14.w, r15.x, r14.z
      iadd r14.w, r12.w, cb2[0].x
      mov r26.xyzw, r25.xyzw
      mov r15.xyz, r10.yzwy
      mov r16.w, r8.w
      mov r17.w, r14.z
      loop 
        breakc_z r17.w
        firstbit_lo r18.z, r17.w
        ishl r18.w, l(1), r18.z
        and r19.w, r17.w, r18.w
        if_nz r19.w
          xor r17.w, r17.w, r18.w
          iadd r18.w, r14.w, r18.z
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r27.xyzw, r18.w, l(0), t11.xyzw
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r28.xy, r18.w, l(16), t11.xyxx
          add r27.xyz, r27.xyzx, -v7.xyzx
          mov r28.z, r27.w
          lt r27.xyz, |r27.xyzx|, r28.zxyz
          and r18.w, r27.y, r27.x
          and r18.w, r27.z, r18.w
          if_nz r18.w
            iadd r18.z, r12.w, r18.z
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r18.z, l(0), t15.wxyz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xy, r18.z, l(96), t15.xyxx
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r18.z, l(116), t15.zwxy
            add r30.xyz, -r27.yzwy, v7.xyzx
            and r18.w, r29.w, l(0x0000ffff)
            ubfe r19.w, l(6), l(25), r29.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r18.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r18.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r18.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r18.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r18.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r18.w, l(80), t16.xyzw
            dp3 r20.w, r31.xyzx, r30.xyzx
            add_sat r20.w, r31.w, r20.w
            dp3 r22.w, r32.xyzx, r30.xyzx
            add_sat r22.w, r32.w, r22.w
            mul r20.w, r20.w, r22.w
            dp3 r22.w, r33.xyzx, r30.xyzx
            add_sat r22.w, r33.w, r22.w
            mul r20.w, r20.w, r22.w
            dp3 r22.w, r34.xyzx, r30.xyzx
            add_sat r22.w, r34.w, r22.w
            mul r20.w, r20.w, r22.w
            dp3 r22.w, r35.xyzx, r30.xyzx
            add_sat r22.w, r35.w, r22.w
            mul r20.w, r20.w, r22.w
            dp3 r22.w, r36.xyzx, r30.xyzx
            add_sat r22.w, r36.w, r22.w
            mul r16.x, r20.w, r22.w
            and r20.w, r28.x, l(1)
            movc r28.zw, r20.wwww, r16.xxxy, r16.zzzx
            mov r16.x, r28.x
            mov r31.xy, r28.zwzz
            mov r20.w, l(1)
            loop 
              ige r22.w, r20.w, r19.w
              breakc_nz r22.w
              iadd r22.w, r18.w, r20.w
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r22.w, l(0), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r22.w, l(16), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r22.w, l(32), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r22.w, l(48), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r22.w, l(64), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r22.w, l(80), t16.xyzw
              dp3 r22.w, r32.xyzx, r30.xyzx
              add_sat r22.w, r32.w, r22.w
              mul r22.w, r22.w, r31.x
              dp3 r27.w, r33.xyzx, r30.xyzx
              add_sat r27.w, r33.w, r27.w
              mul r22.w, r22.w, r27.w
              dp3 r27.w, r34.xyzx, r30.xyzx
              add_sat r27.w, r34.w, r27.w
              mul r22.w, r22.w, r27.w
              dp3 r27.w, r35.xyzx, r30.xyzx
              add_sat r27.w, r35.w, r27.w
              mul r22.w, r22.w, r27.w
              dp3 r27.w, r36.xyzx, r30.xyzx
              add_sat r27.w, r36.w, r27.w
              mul r22.w, r22.w, r27.w
              dp3 r27.w, r37.xyzx, r30.xyzx
              add_sat r27.w, r37.w, r27.w
              mul r31.x, r22.w, r27.w
              ushr r30.w, r16.x, l(2)
              ubfe r31.z, l(1), l(2), r16.x
              and r31.w, r30.w, l(2)
              max r32.x, r31.x, r31.y
              mad r22.w, -r22.w, r27.w, l(1.000000)
              mul r22.w, r22.w, r31.y
              movc r18.y, r31.w, r22.w, r32.x
              movc r31.xy, r31.zzzz, r31.xyxx, r18.xyxx
              iadd r20.w, r20.w, l(1)
              mov r16.x, r30.w
            endloop 
            add_sat r16.x, -r16.w, r31.y
            mul r18.y, r28.y, r16.x
            lt r18.w, l(0.000000), r18.y
            if_nz r18.w
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r18.z, l(16), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r18.z, l(32), t15.yxwz
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r18.z, l(48), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r18.z, l(64), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r18.z, l(80), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r18.z, l(132), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r18.z, l(148), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xyzw, r18.z, l(164), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r40.xyzw, r18.z, l(180), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r41.xyzw, r18.z, l(196), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r42.xy, r18.z, l(212), t15.xyxx
              mad r26.w, r16.x, r28.y, r26.w
              mul r16.x, r29.z, r18.y
              mov r29.z, r37.z
              dp3 r18.y, r13.xyzx, r29.xyzx
              dp3 r18.z, r30.xyzx, r29.xyzx
              add r18.z, -r37.w, r18.z
              ge r18.w, r18.z, l(0.000000)
              max r18.z, r6.z, |r18.z|
              movc r18.z, r18.w, r18.z, -r18.z
              max r18.y, -r18.y, l(0.00000010)
              div r18.y, r18.z, r18.y
              min r18.y, |r18.y|, l(131072.000000)
              mov r37.z, r38.z
              dp3 r18.z, r13.xyzx, r37.xyzx
              dp3 r18.w, r30.xyzx, r37.xyzx
              add r18.w, -r38.w, r18.w
              ge r19.w, r18.w, l(0.000000)
              max r18.w, r6.z, |r18.w|
              movc r18.w, r19.w, r18.w, -r18.w
              max r18.z, -r18.z, l(0.00000010)
              div r18.z, r18.w, r18.z
              min r18.y, |r18.z|, r18.y
              mov r38.z, r39.z
              dp3 r18.z, r13.xyzx, r38.xyzx
              dp3 r18.w, r30.xyzx, r38.xyzx
              add r18.w, -r39.w, r18.w
              ge r19.w, r18.w, l(0.000000)
              max r18.w, r6.z, |r18.w|
              movc r18.w, r19.w, r18.w, -r18.w
              max r18.z, -r18.z, l(0.00000010)
              div r18.z, r18.w, r18.z
              min r18.y, |r18.z|, r18.y
              mov r39.z, r40.z
              dp3 r18.z, r13.xyzx, r39.xyzx
              dp3 r18.w, r30.xyzx, r39.xyzx
              add r18.w, -r40.w, r18.w
              ge r19.w, r18.w, l(0.000000)
              max r18.w, r6.z, |r18.w|
              movc r18.w, r19.w, r18.w, -r18.w
              max r18.z, -r18.z, l(0.00000010)
              div r18.z, r18.w, r18.z
              min r18.y, |r18.z|, r18.y
              mov r40.z, r41.x
              dp3 r18.z, r13.xyzx, r40.xyzx
              dp3 r18.w, r30.xyzx, r40.xyzx
              add r18.w, -r41.y, r18.w
              ge r19.w, r18.w, l(0.000000)
              max r18.w, r6.z, |r18.w|
              movc r18.w, r19.w, r18.w, -r18.w
              max r18.z, -r18.z, l(0.00000010)
              div r18.z, r18.w, r18.z
              min r18.y, |r18.z|, r18.y
              mov r42.zw, r41.zzzw
              dp3 r18.z, r13.zxyz, r42.xzwx
              dp3 r18.w, r30.zxyz, r42.xzwx
              add r18.w, -r42.y, r18.w
              ge r19.w, r18.w, l(0.000000)
              max r18.w, r6.z, |r18.w|
              movc r18.w, r19.w, r18.w, -r18.w
              max r18.z, -r18.z, l(0.00000010)
              div r18.z, r18.w, r18.z
              min r18.y, |r18.z|, r18.y
              mov r28.x, r34.w
              mov r28.yz, r35.zzwz
              add r28.xyz, r30.xyzx, r28.xyzx
              mad r28.xyz, r13.xyzx, r18.yyyy, r28.xyzx
              dp3 r18.z, r28.xyzx, r28.xyzx
              sqrt r18.z, r18.z
              div r18.y, r18.y, r18.z
              add r18.y, r18.y, r18.y
              sqrt r18.y, r18.y
              mad r18.y, r4.w, l(5.000000), r18.y
              add r18.y, r18.y, l(-0.844800)
              mov r27.y, r32.z
              mov r27.z, r33.x
              dp3 r37.x, r28.xyzx, r27.xyzx
              mov r29.xy, r32.xwxx
              mov r29.z, r33.w
              dp3 r37.y, r28.xyzx, r29.xyzx
              mov r33.x, r32.y
              dp3 r37.z, r28.xyzx, r33.xyzx
              ubfe r18.z, l(9), l(16), r29.w
              utof r37.w, r18.z
              sample_l_indexable(texturecubearray)(float,float,float,float) r18.yzw, r37.xyzw, t8.wxyz, s2, r18.y
              and r28.xyz, r18.yzwy, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
              ieq r28.xyz, r28.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
              or r19.w, r28.y, r28.x
              or r19.w, r28.z, r19.w
              movc r18.yzw, r19.wwww, l(0,1.000000,1.000000,0), r18.yyzw
              dp3 r28.x, r30.xyzx, r27.xyzx
              dp3 r28.y, r30.xyzx, r29.xyzx
              dp3 r28.z, r30.xyzx, r33.xyzx
              mad_sat r28.xyz, r28.xyzx, r34.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
              mov r35.z, r36.x
              mad r28.xyz, r28.xyzx, r35.xyzx, r36.yzwy
              dp3 r37.x, r9.xyzx, r27.xyzx
              dp3 r37.y, r9.xyzx, r29.xyzx
              dp3 r37.z, r9.xyzx, r33.xyzx
              lt r27.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r37.xyzx
              movc r17.z, r27.x, l(0), l(0.500000)
              add r29.xyz, r17.xyzx, r28.xyzx
              sample_l_indexable(texture3d)(float,float,float,float) r29.xyz, r29.xyzx, t17.xyzw, s4, l(0.000000)
              mul r30.xyz, r37.xyzx, r37.xyzx
              mul r30.xyz, r16.xxxx, r30.xyzx
              movc r19.z, r27.y, l(0), l(0.500000)
              add r27.xyw, r19.xyxz, r28.xyxz
              sample_l_indexable(texture3d)(float,float,float,float) r27.xyw, r27.xywx, t18.xywz, s4, l(0.000000)
              mul r27.xyw, r30.yyyy, r27.xyxw
              mad r27.xyw, r29.xyxz, r30.xxxx, r27.xyxw
              movc r20.z, r27.z, l(0), l(0.500000)
              add r28.xyz, r20.xyzx, r28.xyzx
              sample_l_indexable(texture3d)(float,float,float,float) r28.xyz, r28.xyzx, t19.xyzw, s4, l(0.000000)
              mad r27.xyz, r28.xyzx, r30.zzzz, r27.xywx
              sample_l_indexable(texturecubearray)(float,float,float,float) r28.xyz, r37.xyzw, t8.xyzw, s2, l(6.000000)
              and r29.xyz, r28.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
              ieq r29.xyz, r29.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
              or r17.z, r29.y, r29.x
              or r17.z, r29.z, r17.z
              movc r28.xyz, r17.zzzz, l(1.000000,1.000000,0,0), r28.xyzx
              mul r29.xyz, r27.xyzx, r28.xyzx
              dp3 r17.z, r29.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
              mad r15.xyz, r27.xyzx, r28.xyzx, r15.xyzx
              mul r19.z, r6.w, r17.z
              mul r18.yzw, r16.xxxx, r18.yyzw
              dp3 r16.x, r18.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
              mad r16.x, r6.w, r17.z, r16.x
              div r16.x, r19.z, r16.x
              mad r26.xyz, r18.yzwy, r16.xxxx, r26.xyzx
            endif 
          endif 
        endif 
      endloop 
      mov r25.xyzw, r26.xyzw
      mov r10.yzw, r15.xxyz
      iadd r12.w, r12.w, l(32)
    endloop 
    mov r24.xyzw, r25.zxyw
    mov r23.xyz, r10.yzwy
    mov r24.xyzw, r24.yzxw
  else 
    mov r24.x, r23.w
  endif 
  max r4.w, r24.w, l(1.000000)
  rcp r4.w, r4.w
  mov_sat r24.w, r24.w
  mul r21.xyz, r4.wwww, r23.xyzx
  mul r22.xyz, r4.wwww, r24.xyzx
  lt r6.z, r24.w, l(0.990000)
  if_nz r6.z
    add r6.z, -r24.w, l(1.000000)
    mul r6.w, r6.z, cb2[19].x
    add r8.yzw, v7.xxyz, -cb2[35].xxyz
    mul r14.x, r8.y, cb2[35].w
    mul r14.yz, r8.zzwz, cb2[36].xxyx
    add_sat r8.yzw, r14.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
    mul r14.xy, r8.yzyy, cb2[36].zwzz
    mul r14.z, r8.w, cb2[37].x
    add r8.yzw, r14.xxyz, cb2[37].yyzw
    lt r10.yzw, l(0.000000, 0.000000, 0.000000, 0.000000), r9.xxyz
    movc r14.xyz, r10.yzwy, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
    mov r14.w, l(0)
    add r10.yzw, r8.yyzw, r14.wwwx
    sample_l_indexable(texture3d)(float,float,float,float) r10.yzw, r10.yzwy, t17.wxyz, s4, l(0.000000)
    mul r15.xyz, r9.xyzx, r9.xyzx
    mul r15.xyz, r6.wwww, r15.xyzx
    add r16.xyz, r8.yzwy, r14.wwyw
    sample_l_indexable(texture3d)(float,float,float,float) r16.xyz, r16.xyzx, t18.xyzw, s4, l(0.000000)
    mul r16.xyz, r15.yyyy, r16.xyzx
    mad r10.yzw, r10.yyzw, r15.xxxx, r16.xxyz
    add r8.yzw, r8.yyzw, r14.wwwz
    sample_l_indexable(texture3d)(float,float,float,float) r8.yzw, r8.yzwy, t19.wxyz, s4, l(0.000000)
    mad r8.yzw, r8.yyzw, r15.zzzz, r10.yyzw
    mov r9.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r10.yzw, r9.xyzw, t8.wxyz, s2, l(6.000000)
    mul r8.yzw, r8.yyzw, r10.yyzw
    dp3 r6.w, r8.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
    mad r21.xyz, r23.xyzx, r4.wwww, r8.yzwy
    mov r13.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r8.yzw, r13.xyzw, t8.wxyz, s2, r5.w
    mad r4.w, cb2[19].x, r6.z, -r6.w
    mad r4.w, r4.y, r4.w, r6.w
    mad r22.xyz, r8.yzwy, r4.wwww, r22.xyzx
  endif 
else 
  mov r22.x, r21.w
endif 
add r4.w, r0.w, r4.x
log r4.w, |r4.w|
mul r4.w, r4.w, r4.z
exp r4.w, r4.w
add r4.w, r0.w, r4.w
add_sat r4.w, r4.w, l(-1.000000)
mul r14.xyz, r0.wwww, r21.xyzx
mad r6.zw, r4.xxxy, l(0.000000, 0.000000, 0.984375, 0.984375), l(0.000000, 0.000000, 0.00781250, 0.00781250)
sample_l_indexable(texture2d)(float,float,float,float) r6.zw, r6.zwzz, t5.zwxy, s2, l(0.000000)
mul r8.yzw, r4.wwww, r22.xxyz
mul r15.xyz, r6.zzzz, r8.zwyz
mul r8.yzw, r6.wwww, r8.yyzw
sqrt r0.w, r4.z
mad r0.w, r0.w, l(0.500000), l(0.500000)
mul r0.w, r0.w, r0.w
mul r4.y, r0.w, l(0.500000)
mad r0.w, -r0.w, l(0.500000), l(1.000000)
mad r4.w, r4.x, r0.w, r4.y
mul r0.w, r0.w, r4.w
mul r4.y, r4.w, r4.y
dp3 r4.w, r9.xyzx, cb2[17].xyzx
mov_sat r5.w, r4.w
ge r6.z, l(0.000000), r5.w
if_nz r6.z
  mov r6.w, l(0)
endif 
if_z r6.z
  mul r10.yzw, v7.yyyy, cb2[29].xxyz
  mad r10.yzw, v7.xxxx, cb2[28].xxyz, r10.yyzw
  mad r10.yzw, v7.zzzz, cb2[30].xxyz, r10.yyzw
  add r10.yzw, r10.yyzw, cb2[31].xxyz
  add r6.z, r10.w, -cb2[17].w
  mad r6.z, -r6.z, l(0.00006104), l(1.000000)
  mov_sat r7.w, r6.z
  eq r7.w, r6.z, r7.w
  if_nz r7.w
    mov r7.w, l(0)
    mov r9.w, l(0)
    loop 
      ge r12.w, r7.w, l(3.000000)
      breakc_nz r12.w
      ftou r12.w, r7.w
      add r16.xy, r10.yzyy, -cb2[r12.w + 20].xyxx
      max r13.w, |r16.y|, |r16.x|
      mul r9.w, r13.w, cb2[r12.w + 20].z
      lt r12.w, r9.w, l(1.000000)
      if_nz r12.w
        break 
      endif 
      add r7.w, r7.w, l(1.000000)
      mov r9.w, l(0)
    endloop 
  else 
    mov r7.w, l(3.000000)
    mov r9.w, l(0)
  endif 
  ge r12.w, r7.w, l(3.000000)
  if_nz r12.w
    mul r16.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
    rcp r17.xz, r16.xxxx
    mov r17.y, -r17.z
    mad r16.xyz, r10.yzyy, r17.xyzx, r16.yzyy
    add r17.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r16.xyz, r16.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r16.xyz, r17.xyzx, r16.xyzx
    mul r17.xy, r16.zyzz, cb2[32].xxxx
    round_ni r17.xy, r17.xyxx
    mul r13.w, r17.y, cb2[27].x
    mad r13.w, r13.w, cb2[32].x, r17.x
    ftou r13.w, r13.w
    iadd r13.w, r13.w, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.w, r13.w, l(0), t23.xxxx
    and r17.x, r16.w, l(0x40000000)
    ishl r17.y, r16.w, l(2)
    if_z r17.x
      and r17.x, r16.w, l(0x01ffffff)
      iadd r18.x, r13.w, r17.x
      ushr r13.w, r16.w, l(25)
      utof r13.w, r13.w
      mul r16.xyz, r13.wwww, r16.xyzx
      frc r16.xyz, r16.xyzx
      mul r16.xyz, r16.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
      ftou r16.xyz, r16.xyzx
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.x, l(0), t23.xxxx
      ushr r17.xz, r16.zzyz, l(6, 0, 6, 0)
      and r13.w, r18.z, l(0xc0000000)
      iadd r16.w, r18.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.w, r16.w, l(0), t23.xxxx
      movc r16.w, r17.z, r18.z, r16.w
      ushr r17.z, r16.w, l(13)
      movc r16.w, r17.x, r17.z, r16.w
      and r16.w, r16.w, l(8191)
      iadd r19.x, r16.w, r18.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.z, r19.x, l(0), t23.xxxx
      mov r18.y, l(0)
      mov r19.y, l(1)
      movc r17.xzw, r13.wwww, r18.xxyz, r19.xxyz
      movc r19.yz, r13.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r20.xy, r16.zyzz, r19.yyyy
      and r20.xy, r20.xyxx, l(1, 1, 0, 0)
      and r16.w, r17.w, l(0xc0000000)
      iadd r18.w, r17.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.w, r18.w, l(0), t23.xxxx
      movc r18.w, r20.y, r17.w, r18.w
      ushr r19.y, r18.w, l(13)
      movc r18.w, r20.x, r19.y, r18.w
      and r18.w, r18.w, l(8191)
      iadd r19.x, r17.x, r18.w
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.w, r19.x, l(0), t23.xxxx
      movc r17.xzw, r16.wwww, r17.xxzw, r19.xxzw
      movc r17.xzw, r13.wwww, r18.xxyz, r17.xxzw
      and r13.w, r17.w, l(0xc0000000)
      if_z r13.w
        iadd r13.w, -r17.z, l(6)
        ushr r18.xy, r16.zyzz, r13.wwww
        or r13.w, r17.w, l(0x40000000)
        bfi r16.w, l(1), l(1), r18.y, l(0)
        bfi r16.w, l(1), l(0), r18.x, r16.w
        imul null, r16.w, r16.w, l(10)
        ushr r13.w, r13.w, r16.w
        and r13.w, r13.w, l(1023)
        iadd r18.x, r13.w, r17.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.w, r18.x, l(0), t23.xxxx
        iadd r18.yz, r17.zzzz, l(0, 1, 2, 0)
        iadd r13.w, -r18.y, l(6)
        ushr r19.xy, r16.zyzz, r13.wwww
        and r13.w, r18.w, l(0xc0000000)
        or r16.w, r18.w, l(0x40000000)
        bfi r17.z, l(1), l(1), r19.y, l(0)
        bfi r17.z, l(1), l(0), r19.x, r17.z
        imul null, r17.z, r17.z, l(10)
        ushr r16.w, r16.w, r17.z
        and r16.w, r16.w, l(1023)
        iadd r19.x, r16.w, r18.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.z, r19.x, l(0), t23.xxxx
        mov r19.y, r18.z
        movc r19.xyz, r13.wwww, r18.xywx, r19.xyzx
        iadd r16.w, -r19.y, l(6)
        ushr r18.yz, r16.zzyz, r16.wwww
        and r16.w, r19.z, l(0xc0000000)
        or r17.z, r19.z, l(0x40000000)
        bfi r18.z, l(1), l(1), r18.z, l(0)
        bfi r18.y, l(1), l(0), r18.y, r18.z
        imul null, r18.y, r18.y, l(10)
        ushr r17.z, r17.z, r18.y
        and r17.z, r17.z, l(1023)
        iadd r20.x, r17.z, r19.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.y, r20.x, l(0), t23.xxxx
        movc r18.yz, r16.wwww, r19.xxzx, r20.xxyx
        movc r17.xw, r13.wwww, r18.xxxw, r18.yyyz
      endif 
      and r13.w, r17.w, l(0xc0000000)
      if_z r13.w
        ubfe r16.w, l(14), l(15), r17.w
        utof r16.w, r16.w
        mul r16.w, r16.w, cb2[27].w
        mul r16.w, r16.w, l(0.00006104)
        and r18.xy, r17.wwww, l(0x00007fff, 0x20000000, 0, 0)
        utof r17.z, r18.x
        mul r17.z, r17.z, cb2[27].w
        mul r17.z, r17.z, l(0.00003052)
        and r18.x, r16.y, l(3)
        iadd r18.x, r17.x, r18.x
        iadd r18.x, r18.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.x, r18.x, l(0), t23.xxxx
        bfi r19.xyz, l(2, 2, 1, 0), l(3, 1, 4, 0), r16.xyzx, l(0, 0, 0, 0)
        ushr r16.x, r18.x, r19.x
        and r16.x, r16.x, l(255)
        utof r16.x, r16.x
        mul r16.x, r17.z, r16.x
        mad r16.x, r16.x, l(0.00392157), r16.w
        iadd r16.y, r19.y, l(1)
        ubfe r16.z, l(1), l(1), r16.z
        iadd r16.y, r16.z, r16.y
        iadd r16.y, r16.y, r17.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.y, r16.y, l(0), t23.xxxx
        ushr r16.y, r16.y, r19.z
        and r16.y, r16.y, l(0x0000ffff)
        utof r16.y, r16.y
        mul r16.y, r17.z, r16.y
        mad r16.y, r16.y, l(0.00001526), r16.w
        movc r17.y, r18.y, r16.x, r16.y
      else 
        and r16.x, r17.w, l(0x80000000)
        iadd r16.y, r17.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.y, r16.y, l(0), t23.xxxx
        movc r16.x, r16.x, r16.y, l(0)
        ishl r16.y, r17.w, l(2)
        ushr r16.z, r16.x, l(16)
        and r16.x, r16.x, l(0x0000ffff)
        f16tof32 r16.xz, r16.xxzx
        mad r16.y, r10.y, r16.z, r16.y
        mad r16.x, r10.z, r16.x, r16.y
        movc r17.y, r13.w, r16.x, r17.y
      endif 
    endif 
    mad r10.w, -cb2[27].z, l(2.000000), r10.w
    lt r10.w, r17.y, r10.w
    movc r6.w, r10.w, l(0), l(1.000000)
  endif 
  if_z r12.w
    if_z cb2[58].y
      ftou r10.w, r7.w
      add r16.xy, r10.yzyy, -cb2[r10.w + 20].xyxx
      mul r16.xy, r16.xyxx, cb2[r10.w + 20].zzzz
      mad r16.xy, r16.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r10.w, cb2[26].y
      add r16.z, r7.w, r10.w
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.w, r16.xyzx, t13.xxxx, s13, r6.z
      sample_l_indexable(texture2darray)(float,float,float,float) r12.w, r16.xyzx, t31.yzwx, s0, l(0.000000)
      add r10.w, r10.w, r12.w
      add_sat r10.w, r10.w, l(-1.000000)
      mul r12.w, r10.w, r10.w
      mul r6.w, r10.w, r12.w
    endif 
    if_nz cb2[58].y
      mov r16.x, -r6.x
      ftou r10.w, r7.w
      add r7.w, r7.w, l(1.000000)
      min r7.w, r7.w, l(2.000000)
      ftou r7.w, r7.w
      add r9.w, -r9.w, l(1.000000)
      mul r9.w, r9.w, l(28.000000)
      ftou r9.w, r9.w
      add r17.xy, r10.yzyy, -cb2[r10.w + 20].xyxx
      mul r17.xy, r17.xyxx, cb2[r10.w + 20].zzzz
      mad r17.xy, r17.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      add r10.yz, r10.yyzy, -cb2[r7.w + 20].xxyx
      mul r10.yz, r10.yyzy, cb2[r7.w + 20].zzzz
      mad r10.yz, r10.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      mov r16.y, r7.x
      mov r16.z, r6.x
      mov r12.w, l(0)
      mov r13.w, l(0)
      loop 
        uge r16.w, r13.w, l(8)
        breakc_nz r16.w
        ult r16.w, r9.w, r13.w
        movc r17.zw, r16.wwww, r10.yyyz, r17.xxxy
        movc r18.x, r16.w, cb2[r7.w + 20].w, cb2[r10.w + 20].w
        movc r16.w, r16.w, r7.w, r10.w
        dp2 r19.x, icb[r13.w + 0].yxyy, r16.xyxx
        dp2 r19.y, icb[r13.w + 0].yxyy, r16.yzyy
        mad r18.xy, r19.xyxx, r18.xxxx, r17.zwzz
        iadd r16.w, r16.w, cb2[26].y
        utof r18.z, r16.w
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r16.w, r18.xyzx, t13.xxxx, s13, r6.z
        sample_l_indexable(texture2darray)(float,float,float,float) r17.z, r18.xyzx, t31.yzxw, s0, l(0.000000)
        add r16.w, r16.w, r17.z
        add_sat r16.w, r16.w, l(-1.000000)
        mad r12.w, r16.w, l(0.125000), r12.w
        iadd r13.w, r13.w, l(1)
      endloop 
      mul r6.z, r12.w, r12.w
      mul r6.w, r12.w, r6.z
    endif 
  endif 
endif 
lt r6.z, l(0.000000), r5.w
if_nz r6.z
  lt r6.z, l(0.000000), r6.w
  if_nz r6.z
    mul r6.z, r3.w, cb2[18].w
    mul r6.z, r5.w, r6.z
    if_nz cb2[23].x
      mov r11.w, l(1.000000)
      dp4 r7.w, cb2[24].xyzw, r11.xyzw
      dp4 r9.w, cb2[25].xyzw, r11.xyzw
      frc r11.x, r7.w
      frc r11.y, r9.w
      iadd r7.w, l(-1), cb2[23].x
      utof r11.z, r7.w
      sample_l_indexable(texture2darray)(float,float,float,float) r10.yzw, r11.xyzx, t20.wxyz, s2, l(0.000000)
      add r10.yzw, r10.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
      mad r10.yzw, cb2[23].yyyy, r10.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
      mul r10.yzw, r10.yyzw, cb2[18].xxyz
    else 
      mov r10.yzw, cb2[18].xxyz
    endif 
    ushr r7.w, cb2[53].x, l(16)
    ult r9.w, l(0), r7.w
    and r9.w, r2.w, r9.w
    if_nz r9.w
      iadd r7.w, r7.w, cb2[0].x
      iadd r7.w, r7.w, l(-1)
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r9.w, r7.w, l(52), t12.xxxx
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r11.xyzw, r7.w, l(68), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r7.w, l(84), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r7.w, l(132), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r7.w, l(148), t12.xyzw
      mad r12.w, |r4.w|, l(-0.200000), l(0.400000)
      mad r19.xyz, r9.xyzx, r12.wwww, v7.xyzx
      mov r19.w, l(1.000000)
      dp4 r11.x, r11.xyzw, r19.xyzw
      dp4 r11.y, r16.xyzw, r19.xyzw
      mad r11.xy, r11.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      add r11.xy, r18.zwzz, r11.xyxx
      mul r11.xy, r18.xyxx, r11.xyxx
      div r11.zw, r9.wwww, r17.xxxz
      add r16.xy, -r11.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
      ge r16.xy, r11.xyxx, r16.xyxx
      ge r11.zw, r11.zzzw, r11.xxxy
      or r11.zw, r11.zzzw, r16.xxxy
      or r11.z, r11.w, r11.z
      if_z r11.z
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r11.z, r7.w, l(28), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r7.w, l(100), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xy, r7.w, l(164), t12.xyxx
        dp4 r7.w, r16.xyzw, r19.xyzw
        mov_sat r11.xy, r11.xyxx
        mad r16.xy, r11.xyxx, r17.xzxx, r17.ywyy
        add r7.w, r18.x, r7.w
        div r7.w, r7.w, r18.y
        max r7.w, r7.w, l(0.00006104)
        and r11.x, r11.z, l(0x0000ffff)
        if_nz cb2[58].y
          mov r17.x, -r6.x
          utof r18.z, r11.x
          mov r17.y, r7.x
          mov r17.z, r6.x
          mov r11.yz, l(0,0,0,0)
          loop 
            ige r11.w, r11.z, l(8)
            breakc_nz r11.w
            dp2 r19.x, icb[r11.z + 0].yxyy, r17.xyxx
            dp2 r19.y, icb[r11.z + 0].yxyy, r17.yzyy
            mad r18.xy, r19.xyxx, r9.wwww, r16.xyxx
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r11.w, r18.xyzx, t9.xxxx, s13, r7.w
            mad r11.y, r11.w, l(0.125000), r11.y
            iadd r11.z, r11.z, l(1)
          endloop 
        else 
          utof r16.z, r11.x
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r11.y, r16.xyzx, t9.xxxx, s13, r7.w
        endif 
        mul r7.w, r11.y, r11.y
        mul r7.w, r11.y, r7.w
      else 
        mov r7.w, l(1.000000)
      endif 
      mul r6.w, r6.w, r7.w
    else 
      and r7.w, cb2[53].x, l(0x0000ffff)
      ult r9.w, l(0), r7.w
      not r11.x, r2.w
      and r9.w, r9.w, r11.x
      if_nz r9.w
        iadd r7.w, r7.w, cb2[0].x
        iadd r7.w, r7.w, l(-1)
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r9.w, r7.w, l(52), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r11.xyzw, r7.w, l(68), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r7.w, l(84), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r7.w, l(132), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r7.w, l(148), t12.xyzw
        mad r12.w, |r4.w|, l(-0.200000), l(0.400000)
        mad r19.xyz, r9.xyzx, r12.wwww, v7.xyzx
        mov r19.w, l(1.000000)
        dp4 r11.x, r11.xyzw, r19.xyzw
        dp4 r11.y, r16.xyzw, r19.xyzw
        mad r11.xy, r11.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
        add r11.xy, r18.zwzz, r11.xyxx
        mul r11.xy, r18.xyxx, r11.xyxx
        div r11.zw, r9.wwww, r17.xxxz
        add r16.xy, -r11.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
        ge r16.xy, r11.xyxx, r16.xyxx
        ge r11.zw, r11.zzzw, r11.xxxy
        or r11.zw, r11.zzzw, r16.xxxy
        or r11.z, r11.w, r11.z
        if_z r11.z
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r11.z, r7.w, l(28), t12.xxxx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r7.w, l(100), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xy, r7.w, l(164), t12.xyxx
          dp4 r7.w, r16.xyzw, r19.xyzw
          mov_sat r11.xy, r11.xyxx
          mad r16.xy, r11.xyxx, r17.xzxx, r17.ywyy
          add r7.w, r18.x, r7.w
          div r7.w, r7.w, r18.y
          max r7.w, r7.w, l(0.00006104)
          and r11.x, r11.z, l(0x0000ffff)
          if_nz cb2[58].y
            mov r17.x, -r6.x
            utof r18.z, r11.x
            mov r17.y, r7.x
            mov r17.z, r6.x
            mov r11.yz, l(0,0,0,0)
            loop 
              ige r11.w, r11.z, l(8)
              breakc_nz r11.w
              dp2 r19.x, icb[r11.z + 0].yxyy, r17.xyxx
              dp2 r19.y, icb[r11.z + 0].yxyy, r17.yzyy
              mad r18.xy, r19.xyxx, r9.wwww, r16.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r11.w, r18.xyzx, t9.xxxx, s13, r7.w
              mad r11.y, r11.w, l(0.125000), r11.y
              iadd r11.z, r11.z, l(1)
            endloop 
          else 
            utof r16.z, r11.x
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r11.y, r16.xyzx, t9.xxxx, s13, r7.w
          endif 
          mul r7.w, r11.y, r11.y
          mul r7.w, r11.y, r7.w
        else 
          mov r7.w, l(1.000000)
        endif 
        mul r6.w, r6.w, r7.w
      endif 
    endif 
    mad r7.w, -r4.x, l(0.500000), l(1.000000)
    mad r7.w, -r5.w, r7.w, l(1.000000)
    mul r7.w, r7.w, r7.w
    mad r7.w, -r7.w, l(0.620000), l(0.620000)
    add r7.w, -r5.w, r7.w
    mad r7.w, r4.z, r7.w, r5.w
    mul r7.w, r6.w, r7.w
    lt r4.w, l(0.000000), r4.w
    mad r11.xyz, r7.wwww, r10.yzwy, r14.xyzx
    mad r16.xyz, -v7.xyzx, r0.zzzz, cb2[17].xyzx
    dp3 r0.z, r16.xyzx, r16.xyzx
    rsq r0.z, r0.z
    mul r16.xyz, r0.zzzz, r16.xyzx
    dp3 r0.z, r16.xyzx, r5.xyzx
    dp3 r7.w, r9.xyzx, r16.xyzx
    mad r9.w, |r7.w|, r3.w, -|r7.w|
    mad r7.w, |r7.w|, r9.w, l(1.000000)
    mad r5.w, r5.w, r0.w, r4.y
    mul r7.w, r7.w, r7.w
    mul r5.w, r5.w, r7.w
    rcp r5.w, r5.w
    mul r5.w, r6.z, r5.w
    mul r5.w, r5.w, r6.w
    mul r5.w, r5.w, l(0.250000)
    mad r16.xyz, r5.wwww, r10.yzwy, r8.yzwy
    add_sat r0.z, -r0.z, l(1.000000)
    mul r6.z, r0.z, r0.z
    mul r6.z, r6.z, r6.z
    mul r0.z, r0.z, r6.z
    mul r0.z, r0.z, r5.w
    mad r17.xyz, r0.zzzz, r10.zwyz, r15.xyzx
    mov r11.w, r17.z
    mov r14.w, r15.z
    movc r14.xyzw, r4.wwww, r11.xyzw, r14.xyzw
    mov r17.zw, r16.xxxy
    mov r15.zw, r8.yyyz
    movc r11.xyzw, r4.wwww, r17.xyzw, r15.xyzw
    movc r8.w, r4.w, r16.z, r8.w
    mov r15.z, r14.w
    mov r15.xy, r11.xyxx
    mov r8.yz, r11.zzwz
  endif 
endif 
mov r11.x, -r6.x
not r0.z, r2.w
mad r4.x, -r4.x, l(0.500000), l(1.000000)
mov r16.xy, l(0,0,0,0)
mov r17.w, l(0)
mov r18.xyz, v7.xyzx
mov r18.w, l(1.000000)
mov r19.w, l(1.000000)
mov r11.z, r6.x
mov r20.w, l(1.000000)
mov r21.z, l(1.000000)
mov r22.w, l(1.000000)
mov r11.yw, r7.xxxx
mov r6.y, r11.w
mov r23.w, l(1.000000)
mov r7.y, r11.x
mov r7.z, r6.x
mov r24.w, l(1.000000)
mov r25.x, r7.x
mov r25.y, r11.x
mov r25.z, r6.x
mov r26.x, r7.x
mov r26.y, r11.x
mov r26.z, r6.x
mov r27.x, r7.x
mov r27.y, r11.x
mov r27.z, r6.x
mov r10.yzw, r14.xxyz
mov r28.xyz, r15.zxyz
mov r29.xyz, r8.yzwy
mov r4.w, cb2[58].y
mov r5.w, l(0)
loop 
  uge r6.z, r5.w, cb2[0].x
  breakc_nz r6.z
  ushr r16.z, r5.w, l(5)
  iadd r17.xyz, r12.xyzx, r16.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r6.z, r17.xyzw, t6.yzxw
  mov r17.xyz, r10.yzwy
  mov r30.xyz, r28.xyzx
  mov r31.xyz, r29.xyzx
  mov r6.w, r4.w
  mov r7.w, r6.z
  loop 
    breakc_z r7.w
    firstbit_lo r9.w, r7.w
    ishl r12.w, l(1), r9.w
    and r13.w, r7.w, r12.w
    if_nz r13.w
      xor r7.w, r7.w, r12.w
      iadd r9.w, r5.w, r9.w
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r32.xyzw, r9.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r33.xy, r9.w, l(16), t11.xyxx
      add r32.xyz, r32.xyzx, -v7.xyzx
      mov r33.z, r32.w
      lt r32.xyz, |r32.xyzx|, r33.zxyz
      and r12.w, r32.y, r32.x
      and r12.w, r32.z, r12.w
      if_nz r12.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r9.w, l(0), t12.wxyz
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r9.w, l(16), t12.zxyw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r9.w, l(32), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r9.w, l(48), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r9.w, l(64), t12.yzwx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r9.w, l(80), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r9.w, l(96), t12.yzwx
        ubfe r12.w, l(3), l(24), r33.w
        switch r12.w
          case l(4)
          lt r12.w, l(0.000000), r38.x
          mov r39.xy, r37.zwzz
          mov r39.z, r38.w
          mad r40.xyz, -r39.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r32.yzwy
          add r41.xyz, r40.xyzx, -v7.xyzx
          dp3 r13.w, r39.xyzx, r41.xyzx
          div_sat r14.w, -r13.w, r38.x
          mad r42.xyz, r14.wwww, r39.xyzx, r40.xyzx
          movc r42.xyz, r12.wwww, r42.xyzx, r32.yzwy
          add r42.xyz, r42.xyzx, -v7.xyzx
          dp3 r15.w, r42.xyzx, r42.xyzx
          rsq r16.z, r15.w
          mul r42.xyz, r16.zzzz, r42.xyzx
          dp3 r16.z, r9.xyzx, r42.xyzx
          mov_sat r16.w, r16.z
          lt r21.w, l(0.000000), r16.w
          if_nz r21.w
            sqrt r21.w, r15.w
            mul r25.w, r35.x, r35.x
            div r15.w, r25.w, r15.w
            min r15.w, r15.w, l(1.000000)
            mad_sat r42.xy, r21.wwww, r34.xzxx, r34.ywyy
            mul r42.zw, r42.xxxy, r42.xxxy
            mad r42.xy, r42.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
            mul r42.xy, r42.xyxx, r42.zwzz
            mul r15.w, r15.w, r42.x
            mul r15.w, r42.y, r15.w
            lt r21.w, l(0.000000), r15.w
            if_nz r21.w
              ubfe r21.w, l(3), l(27), r33.w
              ine r21.w, r21.w, l(1)
              if_nz r21.w
                mad r21.w, |r16.z|, l(-0.200000), l(0.400000)
                mad r42.xyz, r9.xyzx, r21.wwww, v7.xyzx
                add r42.xyz, -r36.xyzx, r42.xyzx
                max r21.w, |r42.z|, |r42.y|
                max r21.w, r21.w, |r42.x|
                div r21.w, r37.x, r21.w
                add r21.w, r37.y, r21.w
                dp3 r25.w, r42.xyzx, r42.xyzx
                rsq r25.w, r25.w
                max r21.w, r21.w, l(0.00006104)
                and r26.w, r33.w, l(0x0000ffff)
                utof r43.w, r26.w
                mov r26.w, l(0)
                mov r27.w, l(0)
                loop 
                  ige r28.w, r27.w, l(8)
                  breakc_nz r28.w
                  dp2 r44.y, icb[r27.w + 0].yxyy, r11.xyxx
                  dp2 r44.z, icb[r27.w + 0].yxyy, r11.yzyy
                  mul r44.yz, r35.yyyy, r44.yyzy
                  mul r44.x, r10.x, r44.y
                  mul r44.w, r8.x, r44.y
                  mad r43.xyz, r42.xyzx, r25.wwww, r44.xzwx
                  sample_c_lz_indexable(texturecubearray)(float,float,float,float) r28.w, r43.xyzw, t10.xxxx, s13, r21.w
                  mad r26.w, r28.w, l(0.125000), r26.w
                  iadd r27.w, r27.w, l(1)
                endloop 
              else 
                mov r26.w, l(1.000000)
              endif 
              mul r15.w, r15.w, r26.w
              lt r21.w, l(0.000000), r15.w
              if_nz r21.w
                mul r21.w, r3.w, r33.x
                mul r21.w, r21.w, l(0.250000)
                dp3 r25.w, r39.xyzx, r13.xyzx
                dp3 r27.w, r13.xyzx, r41.xyzx
                mad r28.w, -r25.w, r25.w, r38.x
                mad r13.w, r25.w, r27.w, -r13.w
                div_sat r13.w, r13.w, r28.w
                div r25.w, r28.w, r38.x
                mul r25.w, r25.w, l(10.000000)
                min r25.w, r25.w, l(1.000000)
                add r13.w, -r14.w, r13.w
                mad r13.w, r25.w, r13.w, r14.w
                mad r39.xyz, r13.wwww, r39.xyzx, r40.xyzx
                movc r39.xyz, r12.wwww, r39.xyzx, r32.yzwy
                add r39.xyz, r39.xyzx, -v7.xyzx
                dp3 r12.w, r39.xyzx, r39.xyzx
                rsq r12.w, r12.w
                mul r40.xyz, r12.wwww, r39.xyzx
                ubfe r13.w, l(4), l(16), r33.w
                ult r14.w, l(0), r13.w
                and r14.w, r2.w, r14.w
                if_nz r14.w
                  iadd r13.w, r13.w, cb2[0].x
                  iadd r13.w, r13.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.w, r13.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r13.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r13.w, l(116), t12.xyzw
                  mad r25.w, |r16.z|, l(-0.200000), l(0.400000)
                  mad r19.xyz, r9.xyzx, r25.wwww, v7.xyzx
                  dp4 r25.w, r41.xyzw, r19.xyzw
                  dp4 r27.w, r42.xyzw, r19.xyzw
                  lt r28.w, r27.w, r25.w
                  if_z r28.w
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r13.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r13.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r13.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r13.w, l(148), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xy, r13.w, l(164), t12.xyxx
                    dp4 r41.x, r41.xyzw, r19.xyzw
                    dp4 r41.y, r42.xyzw, r19.xyzw
                    div r19.xy, r41.xyxx, r27.wwww
                    mad r19.xy, r19.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r19.xy, r44.zwzz, r19.xyxx
                    mul r19.xy, r44.xyxx, r19.xyxx
                    div r41.xy, r14.wwww, r43.xzxx
                    add r41.zw, -r41.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                    ge r41.zw, r19.xxxy, r41.zzzw
                    ge r41.xy, r41.xyxx, r19.xyxx
                    or r41.xy, r41.xyxx, r41.zwzz
                    or r19.z, r41.y, r41.x
                    mov_sat r19.xy, r19.xyxx
                    mad r41.xy, r19.xyxx, r43.xzxx, r43.ywyy
                    mul r19.x, r27.w, r45.y
                    mad r19.y, r45.x, r27.w, r25.w
                    div r19.x, r19.y, r19.x
                  else 
                    mov r19.z, l(-1)
                  endif 
                  or r19.y, r28.w, r19.z
                  if_z r19.y
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.w, r13.w, l(28), t12.xxxx
                    max r19.x, r19.x, l(0.00006104)
                    and r13.w, r13.w, l(0x0000ffff)
                    if_nz r6.w
                      utof r42.z, r13.w
                      mov r19.yz, l(0,0,0,0)
                      loop 
                        ige r25.w, r19.z, l(8)
                        breakc_nz r25.w
                        dp2 r43.x, icb[r19.z + 0].yxyy, r11.xwxx
                        dp2 r43.y, icb[r19.z + 0].xyxx, r6.xyxx
                        mad r42.xy, r43.xyxx, r14.wwww, r41.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r25.w, r42.xyzx, t9.xxxx, s13, r19.x
                        mad r19.y, r25.w, l(0.125000), r19.y
                        iadd r19.z, r19.z, l(1)
                      endloop 
                    else 
                      utof r41.z, r13.w
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.y, r41.xyzx, t9.xxxx, s13, r19.x
                    endif 
                    mul r13.w, r19.y, r19.y
                    mul r13.w, r19.y, r13.w
                  else 
                    mov r13.w, l(1.000000)
                  endif 
                  mul r15.w, r13.w, r15.w
                else 
                  ubfe r13.w, l(4), l(20), r33.w
                  ult r14.w, l(0), r13.w
                  and r14.w, r0.z, r14.w
                  if_nz r14.w
                    iadd r13.w, r13.w, cb2[0].x
                    iadd r13.w, r13.w, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.w, r13.w, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r13.w, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r13.w, l(116), t12.xyzw
                    mad r19.x, |r16.z|, l(-0.200000), l(0.400000)
                    mad r20.xyz, r9.xyzx, r19.xxxx, v7.xyzx
                    dp4 r19.x, r41.xyzw, r20.xyzw
                    dp4 r19.z, r42.xyzw, r20.xyzw
                    lt r25.w, r19.z, r19.x
                    if_z r25.w
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r13.w, l(68), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r13.w, l(84), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r13.w, l(132), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r13.w, l(148), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xy, r13.w, l(164), t12.xyxx
                      dp4 r41.x, r41.xyzw, r20.xyzw
                      dp4 r41.y, r42.xyzw, r20.xyzw
                      div r20.xy, r41.xyxx, r19.zzzz
                      mad r20.xy, r20.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                      add r20.xy, r44.zwzz, r20.xyxx
                      mul r20.xy, r44.xyxx, r20.xyxx
                      div r41.xy, r14.wwww, r43.xzxx
                      add r41.zw, -r41.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                      ge r41.zw, r20.xxxy, r41.zzzw
                      ge r41.xy, r41.xyxx, r20.xyxx
                      or r41.xy, r41.xyxx, r41.zwzz
                      or r20.z, r41.y, r41.x
                      mov_sat r20.xy, r20.xyxx
                      mad r41.xy, r20.xyxx, r43.xzxx, r43.ywyy
                      mul r20.x, r19.z, r45.y
                      mad r19.x, r45.x, r19.z, r19.x
                      div r19.x, r19.x, r20.x
                    else 
                      mov r20.z, l(-1)
                    endif 
                    or r19.z, r25.w, r20.z
                    if_z r19.z
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.w, r13.w, l(28), t12.xxxx
                      max r19.x, r19.x, l(0.00006104)
                      and r13.w, r13.w, l(0x0000ffff)
                      if_nz r6.w
                        utof r20.z, r13.w
                        mov r19.z, l(0)
                        mov r25.w, l(0)
                        loop 
                          ige r27.w, r25.w, l(8)
                          breakc_nz r27.w
                          dp2 r42.x, icb[r25.w + 0].xyxx, r7.xyxx
                          dp2 r42.y, icb[r25.w + 0].yxyy, r7.xzxx
                          mad r20.xy, r42.xyxx, r14.wwww, r41.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r20.x, r20.xyzx, t9.xxxx, s13, r19.x
                          mad r19.z, r20.x, l(0.125000), r19.z
                          iadd r25.w, r25.w, l(1)
                        endloop 
                      else 
                        utof r41.z, r13.w
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.z, r41.xyzx, t9.xxxx, s13, r19.x
                      endif 
                      mul r13.w, r19.z, r19.z
                      mul r13.w, r19.z, r13.w
                    else 
                      mov r13.w, l(1.000000)
                    endif 
                    mul r15.w, r13.w, r15.w
                  endif 
                endif 
                mad r13.w, -r16.w, r4.x, l(1.000000)
                mul r13.w, r13.w, r13.w
                mad r13.w, -r13.w, l(0.620000), l(0.620000)
                add r13.w, -r16.w, r13.w
                mad r13.w, r4.z, r13.w, r16.w
                mul r13.w, r15.w, r13.w
                mov r33.x, r32.x
                lt r14.w, l(0.000000), r16.z
                mad r20.xyz, r13.wwww, r33.xyzx, r17.xyzx
                dp3_sat r13.w, r9.xyzx, r40.xyzx
                mad r39.xyz, r39.xyzx, r12.wwww, r5.xyzx
                dp3 r12.w, r39.xyzx, r39.xyzx
                rsq r12.w, r12.w
                mul r39.xyz, r12.wwww, r39.xyzx
                dp3 r12.w, r39.xyzx, r5.xyzx
                dp3 r16.z, r9.xyzx, r39.xyzx
                mad r16.w, |r16.z|, r3.w, -|r16.z|
                mad r16.z, |r16.z|, r16.w, l(1.000000)
                mad r16.w, r13.w, r0.w, r4.y
                mul r16.z, r16.z, r16.z
                mul r16.z, r16.w, r16.z
                rcp r16.z, r16.z
                mul r13.w, r21.w, r13.w
                mul r13.w, r13.w, r16.z
                mul r13.w, r15.w, r13.w
                mad r39.xyz, r13.wwww, r33.xyzx, r31.xyzx
                add_sat r12.w, -r12.w, l(1.000000)
                mul r15.w, r12.w, r12.w
                mul r15.w, r15.w, r15.w
                mul r12.w, r12.w, r15.w
                mul r12.w, r12.w, r13.w
                mad r40.xyz, r12.wwww, r33.xyzx, r30.xyzx
                movc r17.xyz, r14.wwww, r20.xyzx, r17.xyzx
                movc r30.xyz, r14.wwww, r40.xyzx, r30.xyzx
                movc r31.xyz, r14.wwww, r39.xyzx, r31.xyzx
              endif 
            endif 
          endif 
          break 
          case l(2)
          mov r20.xy, r35.zwzz
          mov r20.z, r36.w
          add r20.xyz, r20.xyzx, -v7.xyzx
          dp3 r12.w, r20.xyzx, r20.xyzx
          rsq r12.w, r12.w
          mul r39.xyz, r12.wwww, r20.xyzx
          dp3 r13.w, r9.xyzx, r39.xyzx
          mov_sat r14.w, r13.w
          lt r15.w, l(0.000000), r14.w
          if_nz r15.w
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r9.w, l(112), t12.yzwx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r9.w, l(128), t12.zxyw
            mov r41.xyz, r39.xyzx
            mov r41.w, r40.y
            dp4 r15.w, r41.xyzw, r18.xyzw
            lt r16.z, r15.w, l(1.000000)
            if_nz r16.z
              mov r42.xyz, l(1.000000,1.000000,1.000000,0)
              mov r16.z, l(0)
            else 
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r9.w, l(172), t12.yzwx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r9.w, l(188), t12.wxyz
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xyzw, r9.w, l(204), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.w, r9.w, l(236), t12.xxxx
              add r46.xyz, r32.yzwy, -v7.xyzx
              mul r19.x, r35.x, r35.x
              dp3 r21.w, r46.xyzx, r46.xyzx
              div r19.x, r19.x, r21.w
              min r19.x, r19.x, l(1.000000)
              mad_sat r34.xy, r15.wwww, r34.xzxx, r34.ywyy
              mul r34.zw, r34.xxxy, r34.xxxy
              mad r34.xy, r34.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
              mul r34.xy, r34.xyxx, r34.zwzz
              mul r19.x, r19.x, r34.x
              mul r19.x, r34.y, r19.x
              mov r36.w, r37.x
              dp4 r34.x, r36.xyzw, r18.xyzw
              mov r46.xyz, r37.yzwy
              mov r46.w, r38.w
              dp4 r34.y, r46.xyzw, r18.xyzw
              div r21.xy, r34.xyxx, r15.wwww
              lt r15.w, r43.w, l(0.00048828)
              if_nz r15.w
                mov r44.y, r45.x
                mad_sat r34.xy, |r21.xyxx|, r44.zwzz, r44.xyxx
                mul r34.zw, r34.xxxy, r34.xxxy
                mad r34.xy, r34.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
                mul r34.xy, r34.xyxx, r34.zwzz
                mul r15.w, r34.y, r34.x
              else 
                mov r43.w, r44.y
                mul_sat r34.xyzw, |r21.yyxx|, r43.xyzw
                log r34.xyzw, r34.xyzw
                mul r34.xyzw, r34.xyzw, r44.xxxx
                exp r34.xyzw, r34.xyzw
                add r34.xy, r34.zwzz, r34.xyxx
                log r34.xy, r34.xyxx
                mul r34.xy, r34.xyxx, r45.xxxx
                exp r34.xy, r34.xyxx
                mul r21.w, r34.x, r44.z
                mad r25.w, r44.w, r34.y, l(-1.000000)
                mad r21.w, r44.w, r34.y, -r21.w
                div_sat r21.w, r25.w, r21.w
                mul r25.w, r21.w, r21.w
                mad r21.w, r21.w, l(-2.000000), l(3.000000)
                mul r15.w, r21.w, r25.w
              endif 
              mul r16.z, r15.w, r19.x
              and r15.w, r16.w, l(255)
              if_nz r15.w
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyz, r9.w, l(220), t12.xyzx
                dp3 r16.w, r45.yzwy, r21.xyzx
                dp3 r19.x, r34.xyzx, r21.xyzx
                frc r34.x, r16.w
                frc r34.y, r19.x
                iadd r15.w, r15.w, l(-1)
                utof r34.z, r15.w
                sample_l_indexable(texture2darray)(float,float,float,float) r42.xyz, r34.xyzx, t20.xyzw, s2, l(0.000000)
              else 
                mov r42.xyz, l(1.000000,1.000000,1.000000,0)
              endif 
            endif 
            mov r32.yz, r33.yyzy
            mul r21.xyw, r42.xyxz, r32.xyxz
            lt r15.w, l(0.000000), r16.z
            if_nz r15.w
              ubfe r15.w, l(3), l(27), r33.w
              ine r15.w, r15.w, l(1)
              if_nz r15.w
                mad r15.w, |r13.w|, l(-0.200000), l(0.400000)
                mad r22.xyz, r9.xyzx, r15.wwww, v7.xyzx
                mov r39.xyz, r38.xyzx
                dp4 r15.w, r39.xyzw, r22.xyzw
                dp4 r16.w, r41.xyzw, r22.xyzw
                ge r19.x, r16.w, r15.w
                if_nz r19.x
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.y, r9.w, l(144), t12.xxxx
                  mov r36.w, r37.x
                  dp4 r32.x, r36.xyzw, r22.xyzw
                  mov r38.xyz, r37.yzwy
                  dp4 r32.y, r38.xyzw, r22.xyzw
                  div r22.xy, r32.xyxx, r16.wwww
                  mad_sat r22.xy, r22.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  mad r22.xy, r22.xyxx, r40.zwzz, r40.xyxx
                  div r9.w, r15.w, r16.w
                  max r9.w, r9.w, l(0.00006104)
                  and r15.w, r33.w, l(0x0000ffff)
                  if_nz r6.w
                    utof r32.z, r15.w
                    mov r16.w, l(0)
                    mov r19.x, l(0)
                    loop 
                      ige r25.w, r19.x, l(8)
                      breakc_nz r25.w
                      dp2 r34.x, icb[r19.x + 0].xyxx, r25.xyxx
                      dp2 r34.y, icb[r19.x + 0].yxyy, r25.xzxx
                      mad r32.xy, r34.xyxx, r35.yyyy, r22.xyxx
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r25.w, r32.xyzx, t9.xxxx, s13, r9.w
                      mad r16.w, r25.w, l(0.125000), r16.w
                      iadd r19.x, r19.x, l(1)
                    endloop 
                  else 
                    utof r22.z, r15.w
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r16.w, r22.xyzx, t9.xxxx, s13, r9.w
                  endif 
                  mul r9.w, r16.w, r16.w
                  mul r9.w, r16.w, r9.w
                else 
                  mov r9.w, l(1.000000)
                endif 
              else 
                mov r9.w, l(1.000000)
              endif 
              mul r9.w, r9.w, r16.z
              lt r15.w, l(0.000000), r9.w
              if_nz r15.w
                mul r15.w, r3.w, r33.x
                mul r15.w, r14.w, r15.w
                ubfe r16.z, l(4), l(16), r33.w
                ult r19.x, l(0), r16.z
                and r19.x, r2.w, r19.x
                if_nz r19.x
                  iadd r16.z, r16.z, cb2[0].x
                  iadd r16.z, r16.z, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.x, r16.z, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r16.z, l(68), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r16.z, l(84), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r16.z, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r16.z, l(116), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r16.z, l(132), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r16.z, l(148), t12.xyzw
                  mad r22.x, |r13.w|, l(-0.200000), l(0.400000)
                  mad r23.xyz, r9.xyzx, r22.xxxx, v7.xyzx
                  dp4 r22.x, r32.xyzw, r23.xyzw
                  dp4 r22.y, r34.xyzw, r23.xyzw
                  dp4 r22.z, r35.xyzw, r23.xyzw
                  dp4 r23.x, r36.xyzw, r23.xyzw
                  lt r23.y, r23.x, r22.z
                  div r22.xy, r22.xyxx, r23.xxxx
                  mad r22.xy, r22.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r22.xy, r38.zwzz, r22.xyxx
                  mul r22.xy, r38.xyxx, r22.xyxx
                  div r32.xy, r19.xxxx, r37.xzxx
                  add r32.zw, -r32.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                  ge r32.zw, r22.xxxy, r32.zzzw
                  ge r32.xy, r32.xyxx, r22.xyxx
                  or r32.xy, r32.xyxx, r32.zwzz
                  or r23.z, r32.y, r32.x
                  or r23.y, r23.y, r23.z
                  if_z r23.y
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.y, r16.z, l(28), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xy, r16.z, l(164), t12.xyxx
                    mov_sat r22.xy, r22.xyxx
                    mad r33.xy, r22.xyxx, r37.xzxx, r37.ywyy
                    mul r16.z, r23.x, r32.y
                    mad r22.x, r32.x, r23.x, r22.z
                    div r16.z, r22.x, r16.z
                    max r16.z, r16.z, l(0.00006104)
                    and r22.x, r23.y, l(0x0000ffff)
                    if_nz r6.w
                      utof r23.z, r22.x
                      mov r22.yz, l(0,0,0,0)
                      loop 
                        ige r25.w, r22.z, l(8)
                        breakc_nz r25.w
                        dp2 r32.x, icb[r22.z + 0].xyxx, r26.xyxx
                        dp2 r32.y, icb[r22.z + 0].yxyy, r26.xzxx
                        mad r23.xy, r32.xyxx, r19.xxxx, r33.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.x, r23.xyzx, t9.xxxx, s13, r16.z
                        mad r22.y, r23.x, l(0.125000), r22.y
                        iadd r22.z, r22.z, l(1)
                      endloop 
                    else 
                      utof r33.z, r22.x
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.y, r33.xyzx, t9.xxxx, s13, r16.z
                    endif 
                    mul r16.z, r22.y, r22.y
                    mul r16.z, r22.y, r16.z
                  else 
                    mov r16.z, l(1.000000)
                  endif 
                  mul r9.w, r9.w, r16.z
                else 
                  ubfe r16.z, l(4), l(20), r33.w
                  ult r19.x, l(0), r16.z
                  and r19.x, r0.z, r19.x
                  if_nz r19.x
                    iadd r16.z, r16.z, cb2[0].x
                    iadd r16.z, r16.z, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.x, r16.z, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r16.z, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r16.z, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r16.z, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r16.z, l(116), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r16.z, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r16.z, l(148), t12.xyzw
                    mad r22.x, |r13.w|, l(-0.200000), l(0.400000)
                    mad r24.xyz, r9.xyzx, r22.xxxx, v7.xyzx
                    dp4 r23.x, r32.xyzw, r24.xyzw
                    dp4 r23.y, r33.xyzw, r24.xyzw
                    dp4 r22.x, r34.xyzw, r24.xyzw
                    dp4 r22.z, r35.xyzw, r24.xyzw
                    lt r23.z, r22.z, r22.x
                    div r23.xy, r23.xyxx, r22.zzzz
                    mad r23.xy, r23.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r23.xy, r37.zwzz, r23.xyxx
                    mul r23.xy, r37.xyxx, r23.xyxx
                    div r24.xy, r19.xxxx, r36.xzxx
                    add r32.xy, -r24.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                    ge r32.xy, r23.xyxx, r32.xyxx
                    ge r24.xy, r24.xyxx, r23.xyxx
                    or r24.xy, r24.xyxx, r32.xyxx
                    or r24.x, r24.y, r24.x
                    or r23.z, r23.z, r24.x
                    if_z r23.z
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.z, r16.z, l(28), t12.xxxx
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r24.xy, r16.z, l(164), t12.xyxx
                      mov_sat r23.xy, r23.xyxx
                      mad r32.xy, r23.xyxx, r36.xzxx, r36.ywyy
                      mul r16.z, r22.z, r24.y
                      mad r22.x, r24.x, r22.z, r22.x
                      div r16.z, r22.x, r16.z
                      max r16.z, r16.z, l(0.00006104)
                      and r22.x, r23.z, l(0x0000ffff)
                      if_nz r6.w
                        utof r23.z, r22.x
                        mov r22.z, l(0)
                        mov r24.x, l(0)
                        loop 
                          ige r24.y, r24.x, l(8)
                          breakc_nz r24.y
                          dp2 r33.x, icb[r24.x + 0].xyxx, r27.xyxx
                          dp2 r33.y, icb[r24.x + 0].yxyy, r27.xzxx
                          mad r23.xy, r33.xyxx, r19.xxxx, r32.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.x, r23.xyzx, t9.xxxx, s13, r16.z
                          mad r22.z, r23.x, l(0.125000), r22.z
                          iadd r24.x, r24.x, l(1)
                        endloop 
                      else 
                        utof r32.z, r22.x
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.z, r32.xyzx, t9.xxxx, s13, r16.z
                      endif 
                      mul r16.z, r22.z, r22.z
                      mul r16.z, r22.z, r16.z
                    else 
                      mov r16.z, l(1.000000)
                    endif 
                    mul r9.w, r9.w, r16.z
                  endif 
                endif 
                mad r16.z, -r14.w, r4.x, l(1.000000)
                mul r16.z, r16.z, r16.z
                mad r16.z, -r16.z, l(0.620000), l(0.620000)
                add r16.z, -r14.w, r16.z
                mad r16.z, r4.z, r16.z, r14.w
                mul r16.z, r9.w, r16.z
                lt r13.w, l(0.000000), r13.w
                mad r23.xyz, r16.zzzz, r21.xywx, r17.xyzx
                mad r20.xyz, r20.xyzx, r12.wwww, r5.xyzx
                dp3 r12.w, r20.xyzx, r20.xyzx
                rsq r12.w, r12.w
                mul r20.xyz, r12.wwww, r20.xyzx
                dp3 r12.w, r20.xyzx, r5.xyzx
                dp3 r16.z, r9.xyzx, r20.xyzx
                mad r19.x, |r16.z|, r3.w, -|r16.z|
                mad r16.z, |r16.z|, r19.x, l(1.000000)
                mad r14.w, r14.w, r0.w, r4.y
                mul r16.z, r16.z, r16.z
                mul r14.w, r14.w, r16.z
                rcp r14.w, r14.w
                mul r14.w, r15.w, r14.w
                mul r9.w, r9.w, r14.w
                mul r9.w, r9.w, l(0.250000)
                mad r20.xyz, r9.wwww, r21.xywx, r31.xyzx
                add_sat r12.w, -r12.w, l(1.000000)
                mul r14.w, r12.w, r12.w
                mul r14.w, r14.w, r14.w
                mul r12.w, r12.w, r14.w
                mul r9.w, r9.w, r12.w
                mad r21.xyw, r9.wwww, r21.xyxw, r30.xyxz
                movc r17.xyz, r13.wwww, r23.xyzx, r17.xyzx
                movc r30.xyz, r13.wwww, r21.xywx, r30.xyzx
                movc r31.xyz, r13.wwww, r20.xyzx, r31.xyzx
              endif 
            endif 
          endif 
          break 
          default 
          break 
        endswitch 
      endif 
    endif 
  endloop 
  mov r10.yzw, r17.xxyz
  mov r28.xyz, r30.xyzx
  mov r29.xyz, r31.xyzx
  iadd r5.w, r5.w, l(32)
endloop 
add r4.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r4.xyz, r4.xyzx, r28.xyzx
mad r3.xyz, r29.xyzx, r3.xyzx, r4.xyzx
mad r2.xyz, r10.yzwy, r2.xyzx, r3.xyzx
dp3 r0.z, r2.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
max r0.z, r0.z, l(0.000100)
max r3.w, r0.z, cb1[85].x
mul r3.xyz, r1.xyzx, r3.wwww
mov r1.w, l(1.000000)
movc r1.xyzw, cb0[20].yyyy, r3.xyzw, r1.xyzw
add r2.xyz, r1.xyzx, r2.xyzx
mul r0.z, r1.w, cb0[19].w
max r0.z, r0.z, l(1.000000)
div r1.xyz, r1.xyzx, r0.zzzz
dp3_sat r0.z, r1.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
add r0.y, r0.z, r0.y
mul o0.w, r0.x, r0.y
lt r0.x, l(0.000000), cb2[9].z
if_nz r0.x
  dp3 r0.x, v7.xyzx, v7.xyzx
  rsq r0.y, r0.x
  mul r0.yzw, r0.yyyy, v7.xxyz
  sqrt r0.x, r0.x
  lt r1.x, l(0.000000), cb2[13].w
  if_nz r1.x
    mad r1.xy, r0.xxxx, cb2[15].xyxx, cb2[14].zwzz
    mul r1.xy, r1.xyxx, cb2[16].xyxx
    lt r1.z, l(0.010000), |v7.z|
    mul r3.xy, v7.zzzz, cb2[15].zwzz
    mul r3.zw, r3.xxxy, l(0.000000, 0.000000, -1.442695, -1.442695)
    exp r3.zw, r3.zzzw
    add r3.zw, -r3.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    div r3.xy, r3.zwzz, r3.xyxx
    mul r3.xy, r1.xyxx, r3.xyxx
    movc r1.xy, r1.zzzz, r3.xyxx, r1.xyxx
    mul r1.xzw, r1.xxxx, cb2[12].xxyz
    exp r1.xzw, r1.xxzw
    mul r3.xyz, r1.yyyy, cb2[12].xyzx
    exp r3.xyz, r3.xyzx
    add r3.xyz, -r1.xzwx, r3.xyzx
    mad r1.xyz, cb2[13].wwww, r3.xyzx, r1.xzwx
  else 
    mad r1.w, r0.x, cb2[15].x, cb2[14].z
    mul r1.w, r1.w, cb2[16].x
    lt r2.w, l(0.010000), |v7.z|
    mul r3.x, v7.z, cb2[15].z
    mul r3.y, r3.x, l(-1.442695)
    exp r3.y, r3.y
    add r3.y, -r3.y, l(1.000000)
    div r3.x, r3.y, r3.x
    mul r3.x, r1.w, r3.x
    movc r1.w, r2.w, r3.x, r1.w
    mul r3.xyz, r1.wwww, cb2[12].xyzx
    exp r1.xyz, r3.xyzx
  endif 
  mad r1.xyz, r1.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r1.xyz, r1.xyzx, -cb2[9].zzzz
  dp3 r0.y, cb2[7].yzwy, -r0.yzwy
  mad r0.z, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r0.w, cb2[8].w, -r0.y, l(1.000000)
  mul r0.w, r0.w, r0.w
  mul r0.w, r0.w, l(12.566371)
  div r0.z, r0.z, r0.w
  add r0.x, r0.x, -cb2[10].w
  mul_sat r0.x, r0.x, cb2[11].w
  mul r0.x, r0.x, r0.z
  mov_sat r0.y, r0.y
  mad r0.y, r0.y, r0.y, l(1.000000)
  mad r0.y, r0.y, l(0.05968310), l(-1.000000)
  mad r0.y, cb2[8].z, r0.y, l(1.000000)
  mul r0.xzw, r0.xxxx, cb2[11].xxyz
  mad r0.xyz, r0.yyyy, cb2[10].xyzx, r0.xzwx
  mul r0.xyz, r0.xyzx, cb2[9].wwww
  add r3.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r0.xyz, r0.xyzx, r3.xyzx
  mad r0.xyz, r2.xyzx, r1.xyzx, r0.xyzx
else 
  mul r0.w, v7.z, cb2[6].x
  mad r1.x, cb2[6].x, v7.z, cb2[5].x
  lt r1.y, |r0.w|, l(0.000100)
  min r1.z, r1.x, l(64.000000)
  mul r1.z, r1.z, l(1.442695)
  exp r1.z, r1.z
  mov_sat r1.w, cb2[6].z
  lt r2.w, r1.x, l(0.000000)
  add r1.x, r1.x, l(1.000000)
  movc r1.x, r2.w, r1.z, r1.x
  add r1.x, r1.x, -cb2[6].z
  movc r0.w, r1.y, l(1.000000), r0.w
  div r0.w, r1.x, r0.w
  movc r0.w, r1.y, r1.w, r0.w
  mul r0.w, r0.w, cb2[5].z
  dp3 r1.x, v7.xyzx, v7.xyzx
  sqrt r1.y, r1.x
  mad r0.w, r0.w, r1.y, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  rsq r1.x, r1.x
  mul r1.xyz, r1.xxxx, v7.xyzx
  dp3 r1.x, cb2[7].yzwy, r1.xyzx
  mad_sat r1.x, cb2[8].y, r1.x, cb2[8].x
  add r3.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r1.xyzw, r1.xxxx, r3.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r1.w
  add r1.xyz, -r2.xyzx, r1.xyzx
  mad r0.xyz, r0.wwww, r1.xyzx, r2.xyzx
endif 
mul r0.xyz, r0.xyzx, cb1[85].yyyy
ge r1.xyz, r0.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.xyz, r0.xyzx, r1.xyzx
min o0.xyz, r0.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
ret 
// Approximately 2832 instruction slots used
