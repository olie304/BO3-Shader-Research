//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:34:38 2021
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float3 colorTint;                  // Offset:  160 Size:    12
//   float baseNormalHeight;            // Offset:  172 Size:     4
//   float2 glossRange;                 // Offset:  176 Size:     8
//   uint zFeatherComputeSprites;       // Offset:  184 Size:     4 [unused]
//   float hdrScale;                    // Offset:  188 Size:     4
//   float emissiveFalloffPower;        // Offset:  192 Size:     4
//   float3 emissiveTint1;              // Offset:  196 Size:    12
//   bool relativeHDR;                  // Offset:  208 Size:     4
//   bool invertFalloff;                // Offset:  212 Size:     4
//   float layerDepth;                  // Offset:  216 Size:     4
//   float uvMotionToggle1;             // Offset:  220 Size:     4 [unused]
//      = 0x00000000 
//   float2 scriptControl;              // Offset:  224 Size:     8 [unused]
//   float3 tint1;                      // Offset:  240 Size:    12
//   float3 tint2;                      // Offset:  256 Size:    12
//   float3 tint3;                      // Offset:  272 Size:    12
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16 [unused]
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16
//   float4 debugNormalOverride;        // Offset:  960 Size:    16
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16
//   float4 debugGlossOverride;         // Offset:  992 Size:    16
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4
//   uint numDynamicDecals;             // Offset:  924 Size:     4
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for shaderConstantSetBuffer
// {
//
//   struct GpuShaderConstantSet
//   {
//       
//       float4 scriptVector0;          // Offset:    0
//       float4 scriptVector1;          // Offset:   16
//       float4 scriptVector2;          // Offset:   32
//       float4 scriptVector3;          // Offset:   48
//       float4 scriptVector4;          // Offset:   64
//       float4 scriptVector5;          // Offset:   80
//       float4 scriptVector6;          // Offset:   96
//       float4 scriptVector7;          // Offset:  112
//       float4 weaponParam0;           // Offset:  128
//       float4 weaponParam1;           // Offset:  144
//       float4 weaponParam2;           // Offset:  160
//       float4 weaponParam3;           // Offset:  176
//       float4 weaponParam4;           // Offset:  192
//       float4 weaponParam5;           // Offset:  208
//       float4 weaponParam6;           // Offset:  224
//       float4 weaponParam7;           // Offset:  240
//       float4 characterParam0;        // Offset:  256
//       float4 characterParam1;        // Offset:  272
//       float4 characterParam2;        // Offset:  288
//       float4 characterParam3;        // Offset:  304
//       float4 characterParam4;        // Offset:  320
//       float4 characterParam5;        // Offset:  336
//       float4 characterParam6;        // Offset:  352
//       float4 characterParam7;        // Offset:  368
//
//   } $Element;                        // Offset:    0 Size:   384
//
// }
//
// Resource bind info for modelInstanceBuffer
// {
//
//   struct ModelInstanceData
//   {
//       
//       uint boneArrayIndex;           // Offset:    0
//       uint shaderConstantSet;        // Offset:    4
//       uint flagsAndPrevFrameIndex;   // Offset:    8
//       uint worldMatrix;              // Offset:   12
//       uint siegeAnimStateOffset;     // Offset:   16
//       uint prevFrameSiegeAnimStateOffset;// Offset:   20
//
//   } $Element;                        // Offset:    0 Size:    24
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for forwardDecalConstants
// {
//
//   struct CoreDecalConstantsPack
//   {
//       
//       uint4 data[8];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   128
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// colorSampler                      sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// normalSampler                     sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// shaderConstantSetBuffer           texture  struct         r/o             t0      1 
// modelInstanceBuffer               texture  struct         r/o             t4      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// colorMap                          texture  float4          2d            t21      1 
// normalMap                         texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// emissiveMap                       texture  float4          2d            t24      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// visibleDecals                     texture    uint     2darray            t35      1 
// forwardDecalConstants             texture  struct         r/o            t36      1 
// materialTexBC7                    texture  float4     2darray            t42      1 
// materialTexBC3                    texture  float4     2darray            t43      1 
// materialTexBC7linear              texture  float4     2darray            t44      1 
// materialTexMask                   texture  float4     2darray            t45      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyz 
// COLOR                    1   x           1     NONE   float   x   
// TEXCOORD                 0    yz         1     NONE   float    yz 
// TEXCOORD                 4   x           2     NONE    uint   x   
// TEXCOORD                 1   xyz         3     NONE   float   xyz 
// TEXCOORD                 2   xyz         4     NONE   float   xyz 
// TEXCOORD                 3   xyz         5     NONE   float   xyz 
// OFFPOSITION              0   xyz         6     NONE   float   xyz 
// SV_IsFrontFace           0   x           7    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[18], immediateIndexed
dcl_constantbuffer CB1[93], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_structured t0, 384
dcl_resource_structured t4, 24
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2darray (float,float,float,float) t31
dcl_resource_texture2darray (uint,uint,uint,uint) t35
dcl_resource_structured t36, 128
dcl_resource_texture2darray (float,float,float,float) t42
dcl_resource_texture2darray (float,float,float,float) t43
dcl_resource_texture2darray (float,float,float,float) t44
dcl_resource_texture2darray (float,float,float,float) t45
dcl_input_ps_siv linear noperspective v0.xyz, position
dcl_input_ps linear v1.x
dcl_input_ps linear v1.yz
dcl_input_ps constant v2.x
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps_sgv constant v7.x, is_front_face
dcl_output o0.xyzw
dcl_temps 46
ld_structured_indexable(structured_buffer, stride=24)(mixed,mixed,mixed,mixed) r0.xy, v2.x, l(4), t4.xyxx
ld_structured_indexable(structured_buffer, stride=384)(mixed,mixed,mixed,mixed) r0.xz, r0.x, l(36), t0.xxyx
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.yzyy, t21.xyzw, s1
add r2.xyz, cb0[10].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r2.xyz, r1.wwww, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r1.xyz, r1.xyzx, r2.xyzx
mul r0.w, r1.w, v1.x
add r2.x, -cb0[11].x, cb0[11].y
mul_sat r2.y, cb0[11].y, l(0.05882353)
sample_indexable(texture2d)(float,float,float,float) r3.xyz, v1.yzyy, t22.xyzw, s3
add r3.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.000000, 0.000000)
mad r3.xyz, cb0[10].wwww, r3.xyzx, l(0.500000, 0.500000, 0.000000, 0.000000)
mad r2.zw, r3.xxxy, l(0.000000, 0.000000, 1.99218750, 1.99218750), l(0.000000, 0.000000, -1.000000, -1.000000)
dp2 r3.x, r2.zwzz, r2.zwzz
add r3.x, -r3.x, l(1.000000)
max r3.x, r3.x, l(0.000000)
sqrt r3.x, r3.x
mul r3.y, r3.z, r3.z
mul r3.y, r3.y, l(0.33333334)
min r3.y, r3.y, l(1.000000)
movc r3.z, v7.x, l(1.000000), l(-1.000000)
dp3 r3.w, v3.xyzx, v3.xyzx
rsq r3.w, r3.w
mul r4.xyz, r3.wwww, v3.xyzx
mul r4.xyz, r3.zzzz, r4.xyzx
dp3 r3.w, v4.xyzx, v4.xyzx
rsq r3.w, r3.w
mul r5.xyz, r3.wwww, v4.xyzx
mul r5.xyz, r3.zzzz, r5.xyzx
dp3 r3.w, v5.xyzx, v5.xyzx
rsq r3.w, r3.w
mul r6.xyz, r3.wwww, v5.xyzx
mul r6.xyz, r3.zzzz, r6.xyzx
mul r2.y, r2.y, l(-17.000000)
exp r2.y, r2.y
add r2.y, r2.y, r3.y
log r2.y, r2.y
mul r2.y, r2.y, l(-0.05882353)
mul r7.xyz, r2.wwww, r6.xyzx
mad r7.xyz, r5.xyzx, r2.zzzz, r7.xyzx
mad r7.xyz, r4.xyzx, r3.xxxx, r7.xyzx
dp3 r2.z, r7.xyzx, r7.xyzx
rsq r2.z, r2.z
mul r7.xyz, r2.zzzz, r7.xyzx
mad r2.x, cb1[62].x, r2.x, cb0[11].x
mul_sat r2.x, r2.x, l(0.05882353)
mul r2.x, r2.x, l(-17.000000)
exp r2.x, r2.x
add r2.x, r2.x, r3.y
log r2.x, r2.x
mul r2.x, r2.x, l(-0.05882353)
max r2.xy, r2.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r2.z, l(0.000000), cb1[64].w
if_nz r2.z
  ftoi r2.z, cb1[64].w
  lod r2.w, v1.yzyy, t21.y, s1
  lod r3.x, v1.yzyy, t21.x, s1
  lt r2.w, r2.w, r3.x
  lt r3.x, l(0.000000), r3.x
  and r8.xyz, r2.zzzz, l(1, 2, 4, 0)
  movc r9.xyz, r8.xxxx, l(1.000000,0,1.000000,0), r1.xyzx
  movc r8.xyw, r8.yyyy, l(0,1.000000,0,1.000000), r1.xyxz
  movc r3.xyw, r3.xxxx, r9.xyxz, r8.xyxw
  movc r8.xyz, r8.zzzz, l(0,1.000000,0,0), r1.xyzx
  movc r1.xyz, r2.wwww, r3.xywx, r8.xyzx
endif 
add r3.xyw, -r1.xyxz, cb1[58].xyxz
mad r1.xyz, cb1[58].wwww, r3.xywx, r1.xyzx
mad r1.w, -r1.w, v1.x, cb1[59].x
mad r0.w, cb1[59].w, r1.w, r0.w
add r3.xyw, cb1[61].xyxz, l(-0.040000, -0.040000, 0.000000, -0.040000)
mad r3.xyw, cb1[61].wwww, r3.xyxw, l(0.040000, 0.040000, 0.000000, 0.040000)
add r1.w, -r2.y, r2.x
mad r1.w, cb1[62].w, r1.w, r2.y
add r2.x, cb1[63].x, l(-1.000000)
mad r2.x, cb1[63].w, r2.x, l(1.000000)
movc r2.yzw, v7.xxxx, v3.xxyz, -v3.xxyz
dp3 r4.w, r2.yzwy, r2.yzwy
rsq r4.w, r4.w
mad r2.yzw, r2.yyzw, r4.wwww, -r7.xxyz
mad r2.yzw, cb1[60].wwww, r2.yyzw, r7.xxyz
ge r4.w, v0.z, l(0.984375)
mul r5.w, v0.z, l(1.01587307)
mad r6.w, v0.z, l(64.000000), l(-63.000000)
movc r4.w, r4.w, r6.w, r5.w
max r4.w, r4.w, l(0.00000001)
rcp r4.w, r4.w
ftou r7.xy, v0.xyxx
deriv_rtx_coarse r8.xyz, v6.xyzx
deriv_rty_coarse r9.xyz, v6.xyzx
iadd r5.w, cb2[0].y, cb2[0].x
and r7.zw, r0.yyyy, l(0, 0, 0x10000000, 0x20000000)
if_nz r7.z
  add r10.xyz, v6.xyzx, cb1[24].xyzx
  mul r0.y, r4.w, l(0.00781250)
  min r0.y, r0.y, l(15.000000)
  ftou r0.y, r0.y
  ushr r11.xy, r7.xyxx, l(6, 6, 0, 0)
  ishl r11.z, r0.y, l(4)
  and r0.y, cb2[57].z, l(-32)
  iadd r6.w, -r0.y, cb2[57].z
  mov r12.xy, l(0,0,0,0)
  mov r13.w, l(0)
  mov r10.w, l(1.000000)
  mov r14.xyzw, l(0,0,0,0)
  mov r15.xyz, l(0,0,0,0)
  mov r16.yz, l(0,0,0,0)
  mov r17.xy, l(0,0,0,0)
  mov r7.z, l(0)
  loop 
    uge r8.w, r7.z, cb2[57].z
    breakc_nz r8.w
    ushr r12.z, r7.z, l(5)
    iadd r13.xyz, r11.xyzx, r12.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r8.w, r13.xyzw, t35.yzwx
    ieq r9.w, r0.y, r7.z
    ubfe r11.w, r6.w, l(0), r8.w
    movc r8.w, r9.w, r11.w, r8.w
    iadd r9.w, r5.w, r7.z
    mov r18.xyzw, r14.xzwy
    mov r13.xyz, r15.xyzx
    mov r19.yz, r16.yyzy
    mov r20.xy, r17.xyxx
    mov r11.w, r8.w
    loop 
      breakc_z r11.w
      firstbit_lo r12.z, r11.w
      ishl r12.w, l(1), r12.z
      and r15.w, r11.w, r12.w
      if_nz r15.w
        xor r11.w, r11.w, r12.w
        iadd r12.w, r9.w, r12.z
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r21.xyzw, r12.w, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r22.xy, r12.w, l(16), t11.xyxx
        add r21.xyz, r21.xyzx, -v6.xyzx
        mov r22.z, r21.w
        lt r21.xyz, |r21.xyzx|, r22.zxyz
        and r12.w, r21.y, r21.x
        and r12.w, r21.z, r12.w
        if_nz r12.w
          iadd r12.z, r7.z, r12.z
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r21.xyz, r12.z, l(0), t36.xyzx
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r22.xyz, r12.z, l(16), t36.xyzx
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r23.xyz, r12.z, l(32), t36.xyzx
          mov r24.x, r21.x
          mov r24.y, r22.x
          mov r24.z, r23.x
          dp3 r12.w, r24.xyzx, r24.xyzx
          rsq r12.w, r12.w
          mul r25.xyz, r12.wwww, r24.xyzx
          dp3 r12.w, r25.xyzx, v3.xyzx
          ge r12.w, r12.w, l(0.500000)
          if_nz r12.w
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r26.xyw, r12.z, l(48), t36.xyxz
            mov r24.w, r26.x
            dp4 r24.x, r10.xyzw, r24.xyzw
            mov r27.x, r21.y
            mov r27.y, r22.y
            mov r27.z, r23.y
            mov r27.w, r26.y
            dp4 r24.y, r10.xyzw, r27.xyzw
            mov r26.x, r21.z
            mov r26.y, r22.z
            mov r26.z, r23.z
            dp4 r24.z, r10.xyzw, r26.xyzw
            lt r21.xyz, |r24.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
            and r12.w, r21.y, r21.x
            and r12.w, r21.z, r12.w
            if_nz r12.w
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r21.xyzw, r12.z, l(64), t36.xyzw
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r22.xyzw, r12.z, l(80), t36.xyzw
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r23.xyzw, r12.z, l(96), t36.xyzw
              dp3 r28.x, r8.xyzx, r27.xyzx
              dp3 r28.y, r8.xyzx, r26.xyzx
              dp3 r29.x, r9.xyzx, r27.xyzx
              dp3 r29.y, r9.xyzx, r26.xyzx
              mad r24.xy, r24.yzyy, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
              mul r28.xyz, r28.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
              mul r29.xyz, r29.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
              and r24.zw, r22.yyyz, l(0, 0, 0x0000ffff, 0x0000ffff)
              if_nz r24.z
                ubfe r12.w, l(4), l(24), r22.w
                ishl r12.w, l(1), r12.w
                ushr r15.w, r22.w, l(28)
                ishl r15.w, l(1), r15.w
                ieq r16.w, r24.z, l(4)
                if_nz r16.w
                  and r16.w, r22.w, l(4095)
                  ubfe r17.w, l(12), l(12), r22.w
                  and r19.w, r23.w, l(1023)
                  utof r30.xz, r12.wwww
                  utof r30.y, r15.w
                  mad r31.xy, r24.xyxx, r30.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r31.zw, r30.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r31.xy, r31.zwzz, r31.xyxx
                  utof r32.x, r16.w
                  utof r32.y, r17.w
                  add r31.xy, r31.xyxx, r32.xyxx
                  mul r31.xy, r31.xyxx, cb1[83].xyxx
                  utof r31.z, r19.w
                  mul r32.xyz, r28.zyzz, cb1[83].xyxx
                  mul r32.xyz, r30.xyzx, r32.xyzx
                  mul r33.xyz, r29.zyzz, cb1[83].xyxx
                  mul r30.xyz, r30.xyzx, r33.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r30.xyzw, r31.xyzx, t42.xyzw, s4, r32.xyzx, r30.xyzx
                else 
                  ieq r16.w, r24.z, l(1)
                  if_nz r16.w
                    and r16.w, r22.w, l(4095)
                    ubfe r17.w, l(12), l(12), r22.w
                    and r19.w, r23.w, l(1023)
                    utof r31.xz, r12.wwww
                    utof r31.y, r15.w
                    mad r32.xy, r24.xyxx, r31.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r32.zw, r31.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                    min r32.xy, r32.zwzz, r32.xyxx
                    utof r33.x, r16.w
                    utof r33.y, r17.w
                    add r32.xy, r32.xyxx, r33.xyxx
                    mul r32.xy, r32.xyxx, cb1[83].zwzz
                    utof r32.z, r19.w
                    mul r33.xyz, r28.zyzz, cb1[83].zwzz
                    mul r33.xyz, r31.xyzx, r33.xyzx
                    mul r34.xyz, r29.zyzz, cb1[83].zwzz
                    mul r31.xyz, r31.xyzx, r34.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r30.xyzw, r32.xyzx, t43.xyzw, s4, r33.xyzx, r31.xyzx
                  else 
                    mov r30.xyzw, l(1.000000,1.000000,1.000000,1.000000)
                  endif 
                endif 
                mul r21.xyz, r21.xyzx, r30.xyzx
                mul r12.w, r21.w, r30.w
              else 
                mov r21.xyz, l(0,0,0,0)
                mov r12.w, l(0)
              endif 
              ne r15.w, r22.x, l(1.000000)
              add r16.w, r21.w, r12.w
              mad_sat r16.w, r16.w, r22.x, -r22.x
              movc r12.w, r15.w, r16.w, r12.w
              if_nz r24.w
                ubfe r15.w, l(4), l(24), r23.y
                ishl r15.w, l(1), r15.w
                ushr r16.w, r23.y, l(28)
                ishl r16.w, l(1), r16.w
                ieq r17.w, r24.w, l(2)
                if_nz r17.w
                  and r17.w, r23.y, l(4095)
                  ubfe r22.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r23.yyyw
                  utof r30.xz, r15.wwww
                  utof r30.y, r16.w
                  mad r31.xy, r24.xyxx, r30.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r31.zw, r30.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r31.xy, r31.zwzz, r31.xyxx
                  utof r32.x, r17.w
                  utof r32.y, r22.x
                  add r31.xy, r31.xyxx, r32.xyxx
                  mul r31.xy, r31.xyxx, cb1[84].xyxx
                  utof r31.z, r22.w
                  mul r32.xyz, r28.zyzz, cb1[84].xyxx
                  mul r32.xyz, r30.xyzx, r32.xyzx
                  mul r33.xyz, r29.zyzz, cb1[84].xyxx
                  mul r30.xyz, r30.xyzx, r33.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r17.w, r31.xyzx, t45.yzwx, s4, r32.xyzx, r30.xyzx
                else 
                  ieq r19.w, r24.w, l(4)
                  if_nz r19.w
                    and r19.w, r23.y, l(4095)
                    ubfe r22.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r23.yyyw
                    utof r30.xz, r15.wwww
                    utof r30.y, r16.w
                    mad r24.zw, r24.xxxy, r30.zzzy, l(0.000000, 0.000000, 0.500000, 0.500000)
                    add r31.xy, r30.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                    min r24.zw, r24.zzzw, r31.xxxy
                    utof r31.x, r19.w
                    utof r31.yz, r22.xxwx
                    add r24.zw, r24.zzzw, r31.xxxy
                    mul r31.xy, r24.zwzz, cb1[83].xyxx
                    mul r32.xyz, r28.zyzz, cb1[83].xyxx
                    mul r32.xyz, r30.xyzx, r32.xyzx
                    mul r33.xyz, r29.zyzz, cb1[83].xyxx
                    mul r30.xyz, r30.xyzx, r33.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r17.w, r31.xyzx, t42.yzwx, s4, r32.xyzx, r30.xyzx
                  else 
                    and r19.w, r23.y, l(4095)
                    ubfe r22.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r23.yyyw
                    utof r30.xz, r15.wwww
                    utof r30.y, r16.w
                    mad r24.zw, r24.xxxy, r30.zzzy, l(0.000000, 0.000000, 0.500000, 0.500000)
                    add r31.xy, r30.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                    min r24.zw, r24.zzzw, r31.xxxy
                    utof r31.x, r19.w
                    utof r31.yz, r22.xxwx
                    add r24.zw, r24.zzzw, r31.xxxy
                    mul r31.xy, r24.zwzz, cb1[83].zwzz
                    mul r32.xyz, r28.zyzz, cb1[83].zwzz
                    mul r32.xyz, r30.xyzx, r32.xyzx
                    mul r33.xyz, r29.zyzz, cb1[83].zwzz
                    mul r30.xyz, r30.xyzx, r33.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r17.w, r31.xyzx, t43.yzwx, s4, r32.xyzx, r30.xyzx
                  endif 
                endif 
                mad r30.xyz, r17.wwww, l(0.960000, 0.960000, 0.960000, 0.000000), l(0.040000, 0.040000, 0.040000, 0.000000)
                add_sat r15.w, -r17.w, l(1.000000)
                mul r21.xyz, r15.wwww, r21.xyzx
              else 
                mov r30.xyz, l(0.040000,0.040000,0.040000,0)
              endif 
              ushr r22.xy, r22.zyzz, l(16, 16, 0, 0)
              if_nz r22.x
                ieq r15.w, r22.x, l(2)
                if_nz r15.w
                  ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r12.z, r12.z, l(112), t36.xxxx
                  ubfe r22.zw, l(0, 0, 4, 12), l(0, 0, 24, 12), r23.zzzz
                  ishl r15.w, l(1), r22.z
                  ushr r16.w, r23.z, l(28)
                  ishl r16.w, l(1), r16.w
                  and r17.w, r23.z, l(4095)
                  and r12.z, r12.z, l(1023)
                  utof r31.xz, r15.wwww
                  utof r31.y, r16.w
                  mad r23.yz, r24.xxyx, r31.zzyz, l(0.000000, 0.500000, 0.500000, 0.000000)
                  add r24.zw, r31.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r23.yz, r23.yyzy, r24.zzwz
                  utof r32.x, r17.w
                  utof r32.y, r22.w
                  add r22.zw, r23.yyyz, r32.xxxy
                  mul r32.xy, r22.zwzz, cb1[84].xyxx
                  utof r32.z, r12.z
                  mul r33.xyz, r28.zyzz, cb1[84].xyxx
                  mul r33.xyz, r31.xyzx, r33.xyzx
                  mul r34.xyz, r29.zyzz, cb1[84].xyxx
                  mul r31.xyz, r31.xyzx, r34.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r12.z, r32.xyzx, t45.yzxw, s4, r33.xyzx, r31.xyzx
                else 
                  ieq r15.w, r22.x, l(6)
                  movc r12.z, r15.w, l(0), l(1.000000)
                endif 
              else 
                mov r12.z, l(1.000000)
              endif 
              mul_sat r12.z, r12.z, l(0.76470590)
              if_nz r22.y
                ieq r15.w, r22.y, l(3)
                if_nz r15.w
                  ubfe r22.xyz, l(4, 12, 10, 0), l(24, 12, 10, 0), r23.xxwx
                  ishl r15.w, l(1), r22.x
                  ushr r16.w, r23.x, l(28)
                  ishl r16.w, l(1), r16.w
                  and r17.w, r23.x, l(4095)
                  utof r23.xz, r15.wwww
                  utof r23.y, r16.w
                  mad r22.xw, r24.xxxy, r23.xxxy, l(0.500000, 0.000000, 0.000000, 0.500000)
                  add r24.xy, r23.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r22.xw, r22.xxxw, r24.xxxy
                  utof r24.x, r17.w
                  utof r24.yz, r22.yyzy
                  add r22.xy, r22.xwxx, r24.xyxx
                  mul r24.xy, r22.xyxx, cb1[84].zwzz
                  mul r22.xyz, r28.xyzx, cb1[84].zwzz
                  mul r22.xyz, r23.xyzx, r22.xyzx
                  mul r28.xyz, r29.xyzx, cb1[84].zwzz
                  mul r23.xyz, r23.xyzx, r28.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r22.xyz, r24.xyzx, t44.xyzw, s4, r22.xyzx, r23.xyzx
                else 
                  mov r22.xyz, l(0.500000,0.500000,1.000000,0)
                endif 
                mad r22.xy, r22.xyxx, l(1.99218750, 1.99218750, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
                dp2 r15.w, r22.xyxx, r22.xyxx
                add r15.w, -r15.w, l(1.000000)
                max r15.w, r15.w, l(0.000000)
                sqrt r15.w, r15.w
                mul r16.w, r22.z, r22.z
                mul r16.w, r16.w, l(0.33333334)
                min r16.w, r16.w, l(1.000000)
                dp3 r17.w, r27.xyzx, r27.xyzx
                rsq r17.w, r17.w
                mul r23.xyz, r17.wwww, r27.xyzx
                dp3 r17.w, -r26.xyzx, -r26.xyzx
                rsq r17.w, r17.w
                mul r24.xyz, r17.wwww, -r26.xyzx
                mul r25.xyz, r3.zzzz, r25.xyzx
                mul r23.xyz, r3.zzzz, r23.xyzx
                mul r24.xyz, r3.zzzz, r24.xyzx
                mul r17.w, r12.z, l(-17.000000)
                exp r17.w, r17.w
                add r16.w, r16.w, r17.w
                log r16.w, r16.w
                mul r16.w, r16.w, l(-0.05882353)
                max r12.z, r16.w, l(0.000000)
                mul r22.yzw, r22.yyyy, r24.xxyz
                mad r22.xyz, r23.xyzx, r22.xxxx, r22.yzwy
                mad r22.xyz, r25.xyzx, r15.wwww, r22.xyzx
                dp3 r15.w, r22.xyzx, r22.xyzx
                rsq r15.w, r15.w
                mul r22.xyz, r15.wwww, r22.xyzx
                add r15.w, -r12.w, l(1.000000)
                mov r19.x, r18.x
                mul r23.xyz, r15.wwww, r19.xyzx
                mad r19.xyz, r22.xyzx, r12.wwww, r23.xyzx
                mov r18.x, r19.x
              endif 
              add r15.w, -r12.w, l(1.000000)
              mul r22.xyz, r13.xyzx, r15.wwww
              mad r13.xyz, r21.xyzx, r12.wwww, r22.xyzx
              mov r20.z, r18.y
              mul r21.xyz, r15.wwww, r20.xyzx
              mad r20.xyz, r30.xyzx, r12.wwww, r21.xyzx
              mul r16.w, r15.w, r18.w
              mad r18.z, r18.z, r15.w, r12.w
              mad r18.w, r12.z, r12.w, r16.w
              mov r18.y, r20.z
            endif 
          endif 
        endif 
      endif 
    endloop 
    mov r14.xyzw, r18.xwyz
    mov r15.xyz, r13.xyzx
    mov r16.yz, r19.yyzy
    mov r17.xy, r20.xyxx
    iadd r7.z, r7.z, l(32)
  endloop 
  mov r16.x, r14.x
  mov r17.z, r14.z
  mov r14.xy, r14.wyww
else 
  mov r15.xyz, l(0,0,0,0)
  mov r16.xyz, l(0,0,0,0)
  mov r17.xyz, l(0,0,0,0)
  mov r14.xy, l(0,0,0,0)
endif 
if_nz r7.w
  add r10.xyz, v6.xyzx, cb1[24].xyzx
  iadd r0.y, cb2[57].w, cb2[57].z
  mul r6.w, r4.w, l(0.00781250)
  min r6.w, r6.w, l(15.000000)
  ftou r6.w, r6.w
  ushr r11.xy, r7.xyxx, l(6, 6, 0, 0)
  ishl r11.z, r6.w, l(4)
  and r6.w, cb2[57].z, l(-32)
  iadd r7.z, -r6.w, cb2[57].z
  and r7.w, r0.y, l(-32)
  iadd r8.w, r0.y, -r7.w
  mov r12.xy, l(0,0,0,0)
  mov r13.w, l(0)
  mov r10.w, l(1.000000)
  mov r18.xyz, r15.xyzx
  mov r19.xyz, r16.xyzx
  mov r20.xyz, r17.xyzx
  mov r21.xy, r14.xyxx
  mov r9.w, r6.w
  loop 
    uge r11.w, r9.w, r0.y
    breakc_nz r11.w
    ushr r12.z, r9.w, l(5)
    iadd r13.xyz, r11.xyzx, r12.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r11.w, r13.xyzw, t35.yzwx
    ieq r12.z, r6.w, r9.w
    bfi r12.w, r7.z, l(0), l(0), r11.w
    movc r11.w, r12.z, r12.w, r11.w
    ieq r12.z, r7.w, r9.w
    ubfe r12.w, r8.w, l(0), r11.w
    movc r11.w, r12.z, r12.w, r11.w
    iadd r12.z, r5.w, r9.w
    mov r13.xyz, r18.xyzx
    mov r22.xyz, r19.xyzx
    mov r23.xyz, r20.xyzx
    mov r14.zw, r21.xxxy
    mov r12.w, r11.w
    loop 
      breakc_z r12.w
      firstbit_lo r15.w, r12.w
      ishl r16.w, l(1), r15.w
      and r17.w, r12.w, r16.w
      if_nz r17.w
        xor r12.w, r12.w, r16.w
        iadd r16.w, r12.z, r15.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r24.xyzw, r16.w, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r25.xy, r16.w, l(16), t11.xyxx
        add r24.xyz, r24.xyzx, -v6.xyzx
        mov r25.z, r24.w
        lt r24.xyz, |r24.xyzx|, r25.zxyz
        and r16.w, r24.y, r24.x
        and r16.w, r24.z, r16.w
        if_nz r16.w
          iadd r15.w, r9.w, r15.w
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r24.xyz, r15.w, l(0), t36.xyzx
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r25.xyz, r15.w, l(16), t36.xyzx
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r26.xyz, r15.w, l(32), t36.xyzx
          mov r27.x, r24.x
          mov r27.y, r25.x
          mov r27.z, r26.x
          dp3 r16.w, r27.xyzx, r27.xyzx
          rsq r16.w, r16.w
          mul r28.xyz, r16.wwww, r27.xyzx
          dp3 r16.w, r28.xyzx, v3.xyzx
          ge r16.w, r16.w, l(0.500000)
          if_nz r16.w
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r29.xyw, r15.w, l(48), t36.xyxz
            mov r27.w, r29.x
            dp4 r27.x, r10.xyzw, r27.xyzw
            mov r30.x, r24.y
            mov r30.y, r25.y
            mov r30.z, r26.y
            mov r30.w, r29.y
            dp4 r27.y, r10.xyzw, r30.xyzw
            mov r29.x, r24.z
            mov r29.y, r25.z
            mov r29.z, r26.z
            dp4 r27.z, r10.xyzw, r29.xyzw
            lt r24.xyz, |r27.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
            and r16.w, r24.y, r24.x
            and r16.w, r24.z, r16.w
            if_nz r16.w
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r24.xyzw, r15.w, l(64), t36.xyzw
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r25.xyzw, r15.w, l(80), t36.xyzw
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r26.xyzw, r15.w, l(96), t36.xyzw
              dp3 r31.x, r8.xyzx, r30.xyzx
              dp3 r31.y, r8.xyzx, r29.xyzx
              dp3 r32.x, r9.xyzx, r30.xyzx
              dp3 r32.y, r9.xyzx, r29.xyzx
              mad r21.zw, r27.yyyz, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
              mul r27.xyz, r31.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
              mul r31.xyz, r32.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
              and r32.xy, r25.yzyy, l(0x0000ffff, 0x0000ffff, 0, 0)
              if_nz r32.x
                ubfe r16.w, l(4), l(24), r25.w
                ishl r16.w, l(1), r16.w
                ushr r17.w, r25.w, l(28)
                ishl r17.w, l(1), r17.w
                ieq r18.w, r32.x, l(4)
                if_nz r18.w
                  and r18.w, r25.w, l(4095)
                  ubfe r19.w, l(12), l(12), r25.w
                  and r20.w, r26.w, l(1023)
                  utof r33.xz, r16.wwww
                  utof r33.y, r17.w
                  mad r32.zw, r21.zzzw, r33.zzzy, l(0.000000, 0.000000, 0.500000, 0.500000)
                  add r34.xy, r33.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r32.zw, r32.zzzw, r34.xxxy
                  utof r34.x, r18.w
                  utof r34.y, r19.w
                  add r32.zw, r32.zzzw, r34.xxxy
                  mul r34.xy, r32.zwzz, cb1[83].xyxx
                  utof r34.z, r20.w
                  mul r35.xyz, r27.zyzz, cb1[83].xyxx
                  mul r35.xyz, r33.xyzx, r35.xyzx
                  mul r36.xyz, r31.zyzz, cb1[83].xyxx
                  mul r33.xyz, r33.xyzx, r36.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r33.xyzw, r34.xyzx, t42.xyzw, s4, r35.xyzx, r33.xyzx
                else 
                  ieq r18.w, r32.x, l(1)
                  if_nz r18.w
                    and r18.w, r25.w, l(4095)
                    ubfe r19.w, l(12), l(12), r25.w
                    and r20.w, r26.w, l(1023)
                    utof r34.xz, r16.wwww
                    utof r34.y, r17.w
                    mad r32.xz, r21.zzwz, r34.zzyz, l(0.500000, 0.000000, 0.500000, 0.000000)
                    add r35.xy, r34.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                    min r32.xz, r32.xxzx, r35.xxyx
                    utof r35.x, r18.w
                    utof r35.y, r19.w
                    add r32.xz, r32.xxzx, r35.xxyx
                    mul r35.xy, r32.xzxx, cb1[83].zwzz
                    utof r35.z, r20.w
                    mul r32.xzw, r27.zzyz, cb1[83].zzwz
                    mul r32.xzw, r34.xxyz, r32.xxzw
                    mul r36.xyz, r31.zyzz, cb1[83].zwzz
                    mul r34.xyz, r34.xyzx, r36.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r33.xyzw, r35.xyzx, t43.xyzw, s4, r32.xzwx, r34.xyzx
                  else 
                    mov r33.xyzw, l(1.000000,1.000000,1.000000,1.000000)
                  endif 
                endif 
                mul r24.xyz, r24.xyzx, r33.xyzx
                mul r16.w, r24.w, r33.w
              else 
                mov r24.xyz, l(0,0,0,0)
                mov r16.w, l(0)
              endif 
              ne r17.w, r25.x, l(1.000000)
              add r18.w, r24.w, r16.w
              mad_sat r18.w, r18.w, r25.x, -r25.x
              movc r16.w, r17.w, r18.w, r16.w
              if_nz r32.y
                ubfe r17.w, l(4), l(24), r26.y
                ishl r17.w, l(1), r17.w
                ushr r18.w, r26.y, l(28)
                ishl r18.w, l(1), r18.w
                ieq r19.w, r32.y, l(2)
                if_nz r19.w
                  and r19.w, r26.y, l(4095)
                  ubfe r25.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r26.yyyw
                  utof r33.xz, r17.wwww
                  utof r33.y, r18.w
                  mad r32.xz, r21.zzwz, r33.zzyz, l(0.500000, 0.000000, 0.500000, 0.000000)
                  add r34.xy, r33.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r32.xz, r32.xxzx, r34.xxyx
                  utof r34.x, r19.w
                  utof r34.yz, r25.xxwx
                  add r32.xz, r32.xxzx, r34.xxyx
                  mul r34.xy, r32.xzxx, cb1[84].xyxx
                  mul r32.xzw, r27.zzyz, cb1[84].xxyx
                  mul r32.xzw, r33.xxyz, r32.xxzw
                  mul r35.xyz, r31.zyzz, cb1[84].xyxx
                  mul r33.xyz, r33.xyzx, r35.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r19.w, r34.xyzx, t45.yzwx, s4, r32.xzwx, r33.xyzx
                else 
                  ieq r20.w, r32.y, l(4)
                  if_nz r20.w
                    and r20.w, r26.y, l(4095)
                    ubfe r25.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r26.yyyw
                    utof r32.xz, r17.wwww
                    utof r32.y, r18.w
                    mad r33.xy, r21.zwzz, r32.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r33.zw, r32.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                    min r33.xy, r33.zwzz, r33.xyxx
                    utof r34.x, r20.w
                    utof r34.y, r25.x
                    add r33.xy, r33.xyxx, r34.xyxx
                    mul r33.xy, r33.xyxx, cb1[83].xyxx
                    utof r33.z, r25.w
                    mul r34.xyz, r27.zyzz, cb1[83].xyxx
                    mul r34.xyz, r32.xyzx, r34.xyzx
                    mul r35.xyz, r31.zyzz, cb1[83].xyxx
                    mul r32.xyz, r32.xyzx, r35.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r19.w, r33.xyzx, t42.yzwx, s4, r34.xyzx, r32.xyzx
                  else 
                    and r20.w, r26.y, l(4095)
                    ubfe r25.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r26.yyyw
                    utof r32.xz, r17.wwww
                    utof r32.y, r18.w
                    mad r33.xy, r21.zwzz, r32.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r33.zw, r32.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                    min r33.xy, r33.zwzz, r33.xyxx
                    utof r34.x, r20.w
                    utof r34.y, r25.x
                    add r33.xy, r33.xyxx, r34.xyxx
                    mul r33.xy, r33.xyxx, cb1[83].zwzz
                    utof r33.z, r25.w
                    mul r34.xyz, r27.zyzz, cb1[83].zwzz
                    mul r34.xyz, r32.xyzx, r34.xyzx
                    mul r35.xyz, r31.zyzz, cb1[83].zwzz
                    mul r32.xyz, r32.xyzx, r35.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r19.w, r33.xyzx, t43.yzwx, s4, r34.xyzx, r32.xyzx
                  endif 
                endif 
                mad r32.xyz, r19.wwww, l(0.960000, 0.960000, 0.960000, 0.000000), l(0.040000, 0.040000, 0.040000, 0.000000)
                add_sat r17.w, -r19.w, l(1.000000)
                mul r24.xyz, r17.wwww, r24.xyzx
              else 
                mov r32.xyz, l(0.040000,0.040000,0.040000,0)
              endif 
              ushr r25.xy, r25.zyzz, l(16, 16, 0, 0)
              if_nz r25.x
                ieq r17.w, r25.x, l(2)
                if_nz r17.w
                  ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r15.w, r15.w, l(112), t36.xxxx
                  ubfe r25.zw, l(0, 0, 4, 12), l(0, 0, 24, 12), r26.zzzz
                  ishl r17.w, l(1), r25.z
                  ushr r18.w, r26.z, l(28)
                  ishl r18.w, l(1), r18.w
                  and r19.w, r26.z, l(4095)
                  and r15.w, r15.w, l(1023)
                  utof r33.xz, r17.wwww
                  utof r33.y, r18.w
                  mad r26.yz, r21.zzwz, r33.zzyz, l(0.000000, 0.500000, 0.500000, 0.000000)
                  add r34.xy, r33.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r26.yz, r26.yyzy, r34.xxyx
                  utof r34.x, r19.w
                  utof r34.y, r25.w
                  add r25.zw, r26.yyyz, r34.xxxy
                  mul r34.xy, r25.zwzz, cb1[84].xyxx
                  utof r34.z, r15.w
                  mul r35.xyz, r27.zyzz, cb1[84].xyxx
                  mul r35.xyz, r33.xyzx, r35.xyzx
                  mul r36.xyz, r31.zyzz, cb1[84].xyxx
                  mul r33.xyz, r33.xyzx, r36.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r15.w, r34.xyzx, t45.yzwx, s4, r35.xyzx, r33.xyzx
                else 
                  ieq r17.w, r25.x, l(6)
                  movc r15.w, r17.w, l(0), l(1.000000)
                endif 
              else 
                mov r15.w, l(1.000000)
              endif 
              mul_sat r15.w, r15.w, l(0.76470590)
              if_nz r25.y
                ieq r17.w, r25.y, l(3)
                if_nz r17.w
                  ubfe r25.xyz, l(4, 12, 10, 0), l(24, 12, 10, 0), r26.xxwx
                  ishl r17.w, l(1), r25.x
                  ushr r18.w, r26.x, l(28)
                  ishl r18.w, l(1), r18.w
                  and r19.w, r26.x, l(4095)
                  utof r26.xz, r17.wwww
                  utof r26.y, r18.w
                  mad r21.zw, r21.zzzw, r26.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
                  add r25.xw, r26.zzzy, l(-0.500000, 0.000000, 0.000000, -0.500000)
                  min r21.zw, r21.zzzw, r25.xxxw
                  utof r33.x, r19.w
                  utof r33.yz, r25.yyzy
                  add r21.zw, r21.zzzw, r33.xxxy
                  mul r33.xy, r21.zwzz, cb1[84].zwzz
                  mul r25.xyz, r27.xyzx, cb1[84].zwzz
                  mul r25.xyz, r26.xyzx, r25.xyzx
                  mul r27.xyz, r31.xyzx, cb1[84].zwzz
                  mul r26.xyz, r26.xyzx, r27.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r25.xyz, r33.xyzx, t44.xyzw, s4, r25.xyzx, r26.xyzx
                else 
                  mov r25.xyz, l(0.500000,0.500000,1.000000,0)
                endif 
                mad r21.zw, r25.xxxy, l(0.000000, 0.000000, 1.99218750, 1.99218750), l(0.000000, 0.000000, -1.000000, -1.000000)
                dp2 r17.w, r21.zwzz, r21.zwzz
                add r17.w, -r17.w, l(1.000000)
                max r17.w, r17.w, l(0.000000)
                sqrt r17.w, r17.w
                mul r18.w, r25.z, r25.z
                mul r18.w, r18.w, l(0.33333334)
                min r18.w, r18.w, l(1.000000)
                dp3 r19.w, r30.xyzx, r30.xyzx
                rsq r19.w, r19.w
                mul r25.xyz, r19.wwww, r30.xyzx
                dp3 r19.w, -r29.xyzx, -r29.xyzx
                rsq r19.w, r19.w
                mul r26.xyz, r19.wwww, -r29.xyzx
                mul r27.xyz, r3.zzzz, r28.xyzx
                mul r25.xyz, r3.zzzz, r25.xyzx
                mul r26.xyz, r3.zzzz, r26.xyzx
                mul r19.w, r15.w, l(-17.000000)
                exp r19.w, r19.w
                add r18.w, r18.w, r19.w
                log r18.w, r18.w
                mul r18.w, r18.w, l(-0.05882353)
                max r15.w, r18.w, l(0.000000)
                mul r26.xyz, r21.wwww, r26.xyzx
                mad r25.xyz, r25.xyzx, r21.zzzz, r26.xyzx
                mad r25.xyz, r27.xyzx, r17.wwww, r25.xyzx
                dp3 r17.w, r25.xyzx, r25.xyzx
                rsq r17.w, r17.w
                mul r25.xyz, r17.wwww, r25.xyzx
                add r17.w, -r16.w, l(1.000000)
                mul r26.xyz, r17.wwww, r22.xyzx
                mad r22.xyz, r25.xyzx, r16.wwww, r26.xyzx
              endif 
              add r17.w, -r16.w, l(1.000000)
              mul r25.xyz, r13.xyzx, r17.wwww
              mad r13.xyz, r24.xyzx, r16.wwww, r25.xyzx
              mul r24.xyz, r17.wwww, r23.xyzx
              mad r23.xyz, r32.xyzx, r16.wwww, r24.xyzx
              mul r18.w, r14.w, r17.w
              mad r14.z, r14.z, r17.w, r16.w
              mad r14.w, r15.w, r16.w, r18.w
            endif 
          endif 
        endif 
      endif 
    endloop 
    mov r18.xyz, r13.xyzx
    mov r19.xyz, r22.xyzx
    mov r20.xyz, r23.xyzx
    mov r21.xy, r14.zwzz
    iadd r9.w, r9.w, l(32)
  endloop 
  mov r15.xyz, r18.xyzx
  mov r16.xyz, r19.xyzx
  mov r17.xyz, r20.xyzx
  mov r14.xy, r21.xyxx
endif 
mov_sat r14.x, r14.x
add r0.y, -r14.x, l(1.000000)
mad r1.xyz, r1.xyzx, r0.yyyy, r15.xyzx
mad r0.w, r0.w, r0.y, r14.x
mad r2.yzw, r2.yyzw, r0.yyyy, r16.xxyz
dp3 r3.z, r2.yzwy, r2.yzwy
rsq r3.z, r3.z
mul r8.xyz, r2.yzwy, r3.zzzz
mad r9.y, r1.w, r0.y, r14.y
mad r2.yzw, r3.xxyw, r0.yyyy, r17.xxyz
mov_sat r0.x, r0.x
mul r0.x, r0.x, cb0[11].w
eq r3.xyz, r0.zzzz, l(3.000000, 2.000000, 1.000000, 0.000000)
movc r10.xyz, r3.zzzz, cb0[15].xyzx, cb0[12].yzwy
movc r3.yzw, r3.yyyy, cb0[16].xxyz, r10.xxyz
movc r3.xyz, r3.xxxx, cb0[17].xyzx, r3.yzwy
dp3 r0.z, -v6.xyzx, -v6.xyzx
rsq r0.z, r0.z
mul r10.xyz, r0.zzzz, -v6.xyzx
dp3 r1.w, r10.xyzx, r4.xyzx
dp3 r4.x, r10.xyzx, r5.xyzx
dp3 r4.y, r10.xyzx, r6.xyzx
lt r3.w, l(0.000000), r1.w
div r4.xy, -r4.xyxx, r1.wwww
and r4.xy, r3.wwww, r4.xyxx
add r3.w, cb0[13].z, l(0.000010)
mad r4.xy, r4.xyxx, r3.wwww, v1.yzyy
sample_indexable(texture2d)(float,float,float,float) r5.xyzw, r4.xyxx, t24.xyzw, s1
mul r3.xyz, r3.xyzx, r5.xyzx
mov_sat r1.w, r1.w
log r3.w, r1.w
mul r3.w, r3.w, cb0[12].x
exp r3.w, r3.w
add r1.w, -r1.w, l(1.000000)
log r1.w, r1.w
mul r1.w, r1.w, cb0[12].x
exp r1.w, r1.w
movc r1.w, cb0[13].y, r1.w, r3.w
eq r3.w, cb0[12].x, l(0.000000)
movc r1.w, r3.w, l(1.000000), r1.w
mul r0.x, r0.x, r5.w
mul r0.x, r1.w, r0.x
mul r0.x, r0.y, r0.x
mul r3.xyz, r0.xxxx, r3.xyzx
ine r0.x, cb1[92].x, l(0)
utof r4.xy, r7.yxyy
dp2 r0.y, r4.yxyy, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r0.y, r0.y
mul r0.y, r0.y, l(52.982918)
frc r0.y, r0.y
mad r0.y, r0.y, l(6.28318548), cb1[70].w
sincos r5.x, r6.x, r0.y
dp2 r0.y, r4.xyxx, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r0.y, r0.y
mul r0.y, r0.y, l(52.982918)
frc r0.y, r0.y
mad r0.y, r0.y, l(6.28318548), cb1[70].w
sincos r4.x, r11.x, r0.y
dp3_sat r9.x, r8.xyzx, r10.xyzx
dp3 r0.y, -r10.xyzx, r8.xyzx
add r0.y, r0.y, r0.y
mad r12.xyz, r8.xyzx, -r0.yyyy, -r10.xyzx
mul r0.y, r9.y, l(17.000000)
exp r0.y, r0.y
add r0.y, r0.y, l(2.000000)
div r0.y, l(2.000000), r0.y
sqrt r1.w, r0.y
add r4.y, -r9.y, l(1.000000)
mul r4.zw, r4.yyyw, l(0.000000, 0.000000, 5.000000, 0.00781250)
mad r5.z, r4.y, l(5.000000), l(-2.500000)
mul_sat r5.z, r5.z, l(0.400000)
mul r5.z, r5.z, l(100.000000)
mad r7.zw, -r4.yyyy, l(0.000000, 0.000000, 10.000000, 5.000000), l(0.000000, 0.000000, 6.857410, 7.085000)
exp r5.w, r7.z
mul r5.w, r5.w, r9.x
mul r5.w, r5.w, l(9.136810)
mul r6.w, r4.y, r4.z
mad r6.w, -r6.w, l(2.015905), r7.w
exp r6.w, r6.w
mul r6.w, r6.w, r9.x
mul r6.w, r6.w, l(9.708090)
max r5.w, r5.w, r6.w
max r5.w, r5.w, l(1.268160)
min r4.w, r4.w, l(15.000000)
ftou r4.w, r4.w
ushr r7.xy, r7.xyxx, l(6, 6, 0, 0)
ishl r7.z, r4.w, l(4)
mov r13.xy, l(0,0,0,0)
mov r14.w, l(0)
mov r15.yz, l(0,0,1.000000,0)
mov r16.xy, l(0,0,0,0)
mov r17.xy, l(0,0,0,0)
mov r18.xy, l(0,0,0,0)
mov r19.x, l(1.000000)
mov r20.xyzw, l(0,0,0,0)
mov r21.yzw, l(0,0,0,0)
mov r4.w, l(0)
mov r6.w, l(0)
loop 
  uge r7.w, r6.w, cb2[0].y
  breakc_nz r7.w
  ushr r13.z, r6.w, l(5)
  iadd r14.xyz, r7.xyzx, r13.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r7.w, r14.xyzw, t7.yzwx
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r22.xyzw, r6.w, l(0), t15.wxyz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r23.xyzw, r6.w, l(16), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r6.w, l(32), t15.yxwz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r6.w, l(48), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r6.w, l(64), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r6.w, l(80), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r9.zw, r6.w, l(96), t15.xxxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r6.w, l(116), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r6.w, l(132), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r6.w, l(148), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r6.w, l(164), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r6.w, l(180), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r6.w, l(196), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xy, r6.w, l(212), t15.xyxx
  add r11.yzw, -r22.yyzw, v6.xxyz
  dp3 r10.w, r11.yzwy, r11.yzwy
  sqrt r10.w, r10.w
  ge r10.w, cb2[54].y, r10.w
  and r13.z, r28.y, l(0x0000ffff)
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r13.z, l(0), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r13.z, l(16), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r13.z, l(32), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r38.xyzw, r13.z, l(48), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r39.xyzw, r13.z, l(64), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r40.xyzw, r13.z, l(80), t16.xyzw
  dp3 r13.w, r35.xyzx, r11.yzwy
  add_sat r13.w, r35.w, r13.w
  dp3 r14.x, r36.xyzx, r11.yzwy
  add_sat r14.x, r36.w, r14.x
  mul r13.w, r13.w, r14.x
  dp3 r14.x, r37.xyzx, r11.yzwy
  add_sat r14.x, r37.w, r14.x
  mul r13.w, r13.w, r14.x
  dp3 r14.x, r38.xyzx, r11.yzwy
  add_sat r14.x, r38.w, r14.x
  mul r13.w, r13.w, r14.x
  dp3 r14.x, r39.xyzx, r11.yzwy
  add_sat r14.x, r39.w, r14.x
  mul r13.w, r13.w, r14.x
  dp3 r14.x, r40.xyzx, r11.yzwy
  add_sat r14.x, r40.w, r14.x
  mul r15.x, r13.w, r14.x
  and r13.w, r9.z, l(1)
  movc r14.xy, r13.wwww, r15.xyxx, r15.zxzz
  mov r35.xy, r28.zwzz
  mov r35.z, r29.z
  dp3 r13.w, r12.xyzx, r35.xyzx
  dp3 r14.z, r11.yzwy, r35.xyzx
  add r14.z, -r29.w, r14.z
  ge r15.x, r14.z, l(0.000000)
  max r14.z, r5.z, |r14.z|
  movc r14.z, r15.x, r14.z, -r14.z
  max r13.w, -r13.w, l(0.00000010)
  div r13.w, r14.z, r13.w
  min r13.w, |r13.w|, l(131072.000000)
  mov r29.z, r30.z
  dp3 r14.z, r12.xyzx, r29.xyzx
  dp3 r15.x, r11.yzwy, r29.xyzx
  add r15.x, -r30.w, r15.x
  ge r15.w, r15.x, l(0.000000)
  max r15.x, r5.z, |r15.x|
  movc r15.x, r15.w, r15.x, -r15.x
  max r14.z, -r14.z, l(0.00000010)
  div r14.z, r15.x, r14.z
  min r13.w, r13.w, |r14.z|
  mov r30.z, r31.z
  dp3 r14.z, r12.xyzx, r30.xyzx
  dp3 r15.x, r11.yzwy, r30.xyzx
  add r15.x, -r31.w, r15.x
  ge r15.w, r15.x, l(0.000000)
  max r15.x, r5.z, |r15.x|
  movc r15.x, r15.w, r15.x, -r15.x
  max r14.z, -r14.z, l(0.00000010)
  div r14.z, r15.x, r14.z
  min r13.w, r13.w, |r14.z|
  mov r31.z, r32.z
  dp3 r14.z, r12.xyzx, r31.xyzx
  dp3 r15.x, r11.yzwy, r31.xyzx
  add r15.x, -r32.w, r15.x
  ge r15.w, r15.x, l(0.000000)
  max r15.x, r5.z, |r15.x|
  movc r15.x, r15.w, r15.x, -r15.x
  max r14.z, -r14.z, l(0.00000010)
  div r14.z, r15.x, r14.z
  min r13.w, r13.w, |r14.z|
  mov r32.z, r33.x
  dp3 r14.z, r12.xyzx, r32.xyzx
  dp3 r15.x, r11.yzwy, r32.xyzx
  add r15.x, -r33.y, r15.x
  ge r15.w, r15.x, l(0.000000)
  max r15.x, r5.z, |r15.x|
  movc r15.x, r15.w, r15.x, -r15.x
  max r14.z, -r14.z, l(0.00000010)
  div r14.z, r15.x, r14.z
  min r13.w, r13.w, |r14.z|
  mov r34.zw, r33.zzzw
  dp3 r14.z, r12.zxyz, r34.xzwx
  dp3 r15.x, r11.wyzw, r34.xzwx
  add r15.x, -r34.y, r15.x
  ge r15.w, r15.x, l(0.000000)
  max r15.x, r5.z, |r15.x|
  movc r15.x, r15.w, r15.x, -r15.x
  max r14.z, -r14.z, l(0.00000010)
  div r14.z, r15.x, r14.z
  min r13.w, r13.w, |r14.z|
  mov r29.x, r25.w
  mov r29.yz, r26.zzwz
  add r29.xyz, r11.yzwy, r29.xyzx
  mad r29.xyz, r12.xyzx, r13.wwww, r29.xyzx
  dp3 r14.z, r29.xyzx, r29.xyzx
  sqrt r14.z, r14.z
  div r13.w, r13.w, r14.z
  add r13.w, r13.w, r13.w
  sqrt r13.w, r13.w
  mad r13.w, r4.y, l(5.000000), r13.w
  add r13.w, r13.w, l(-0.844800)
  mov r22.y, r23.z
  mov r22.z, r24.x
  dp3 r30.x, r29.xyzx, r22.xyzx
  mov r31.xy, r23.xwxx
  mov r31.z, r24.w
  dp3 r30.y, r29.xyzx, r31.xyzx
  mov r24.x, r23.y
  dp3 r30.z, r29.xyzx, r24.xyzx
  ubfe r15.xw, l(6, 0, 0, 9), l(25, 0, 0, 16), r28.yyyy
  utof r30.w, r15.w
  sample_l_indexable(texturecubearray)(float,float,float,float) r23.xyz, r30.xyzw, t8.xyzw, s2, r13.w
  and r28.yzw, r23.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
  ieq r28.yzw, r28.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
  or r13.w, r28.z, r28.y
  or r13.w, r28.w, r13.w
  movc r23.xyz, r13.wwww, l(1.000000,1.000000,0,0), r23.xyzx
  dp3 r29.x, r11.yzwy, r22.xyzx
  dp3 r29.y, r11.yzwy, r31.xyzx
  dp3 r29.z, r11.yzwy, r24.xyzx
  mad_sat r25.xyz, r29.xyzx, r25.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mov r26.z, r27.x
  mad r25.xyz, r25.xyzx, r26.xyzx, r27.yzwy
  dp3 r30.x, r8.xyzx, r22.xyzx
  dp3 r30.y, r8.xyzx, r31.xyzx
  dp3 r30.z, r8.xyzx, r24.xyzx
  lt r22.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r30.xyzx
  movc r16.z, r22.x, l(0), l(0.500000)
  add r24.xyz, r16.xyzx, r25.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r24.xyz, r24.xyzx, t17.xyzw, s4, l(0.000000)
  movc r17.z, r22.y, l(0), l(0.500000)
  add r22.xyw, r17.xyxz, r25.xyxz
  sample_l_indexable(texture3d)(float,float,float,float) r22.xyw, r22.xywx, t18.xywz, s4, l(0.000000)
  movc r18.z, r22.z, l(0), l(0.500000)
  add r25.xyz, r18.xyzx, r25.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r25.xyz, r25.xyzx, t19.xyzw, s4, l(0.000000)
  mul r26.xyz, r30.xyzx, r30.xyzx
  sample_l_indexable(texturecubearray)(float,float,float,float) r27.xyz, r30.xyzw, t8.xyzw, s2, l(6.000000)
  and r28.yzw, r27.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
  ieq r28.yzw, r28.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
  or r13.w, r28.z, r28.y
  or r13.w, r28.w, r13.w
  movc r27.xyz, r13.wwww, l(1.000000,1.000000,0,0), r27.xyzx
  mov r29.xyzw, r20.xyzw
  mov r28.yzw, r21.yyzw
  mov r13.w, r4.w
  mov r14.z, r7.w
  loop 
    breakc_z r14.z
    firstbit_lo r15.w, r14.z
    ishl r15.w, l(1), r15.w
    and r16.z, r14.z, r15.w
    if_nz r16.z
      not r15.w, r15.w
      and r14.z, r14.z, r15.w
      if_nz r10.w
        mov r15.w, r9.z
        mov r30.xy, r14.xyxx
        mov r16.z, l(1)
        loop 
          ige r16.w, r16.z, r15.x
          breakc_nz r16.w
          iadd r16.w, r13.z, r16.z
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r16.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r16.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r16.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r16.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r16.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r16.w, l(80), t16.xyzw
          dp3 r16.w, r31.xyzx, r11.yzwy
          add_sat r16.w, r31.w, r16.w
          mul r16.w, r16.w, r30.x
          dp3 r17.z, r32.xyzx, r11.yzwy
          add_sat r17.z, r32.w, r17.z
          mul r16.w, r16.w, r17.z
          dp3 r17.z, r33.xyzx, r11.yzwy
          add_sat r17.z, r33.w, r17.z
          mul r16.w, r16.w, r17.z
          dp3 r17.z, r34.xyzx, r11.yzwy
          add_sat r17.z, r34.w, r17.z
          mul r16.w, r16.w, r17.z
          dp3 r17.z, r35.xyzx, r11.yzwy
          add_sat r17.z, r35.w, r17.z
          mul r16.w, r16.w, r17.z
          dp3 r17.z, r36.xyzx, r11.yzwy
          add_sat r17.z, r36.w, r17.z
          mul r30.x, r16.w, r17.z
          ushr r17.w, r15.w, l(2)
          ubfe r18.z, l(1), l(2), r15.w
          and r18.w, r17.w, l(2)
          max r19.z, r30.x, r30.y
          mad r16.w, -r16.w, r17.z, l(1.000000)
          mul r16.w, r16.w, r30.y
          movc r19.y, r18.w, r16.w, r19.z
          movc r30.xy, r18.zzzz, r30.xyxx, r19.xyxx
          iadd r16.z, r16.z, l(1)
          mov r15.w, r17.w
        endloop 
        mov_sat r30.y, r30.y
        mul r15.w, r9.w, r30.y
        lt r16.z, l(0.000000), r15.w
        if_nz r16.z
          mad r31.z, r30.y, r9.w, r28.w
          mul r15.w, r28.x, r15.w
          mul r19.yzw, r15.wwww, r26.xxyz
          mul r30.xzw, r19.zzzz, r22.xxyw
          mad r30.xzw, r24.xxyz, r19.yyyy, r30.xxzw
          mad r19.yzw, r25.xxyz, r19.wwww, r30.xxzw
          mul r30.xzw, r27.xxyz, r19.yyzw
          dp3 r16.z, r30.xzwx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r32.xyz, r19.yzwy, r27.xyzx, r29.xyzx
          mul r16.w, r5.w, r16.z
          mul r19.yzw, r15.wwww, r23.xxyz
          dp3 r15.w, r19.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r15.w, r5.w, r16.z, r15.w
          div r15.w, r16.w, r15.w
          mov r33.x, r29.w
          mov r33.yz, r28.yyzy
          mad r31.xyw, r19.zwzy, r15.wwww, r33.yzyx
          mov r32.w, r31.w
        else 
          mov r32.xyzw, r29.xyzw
          mov r31.xyz, r28.yzwy
        endif 
        mov r13.w, l(-1)
        mov r29.xyzw, r32.xyzw
        mov r28.yzw, r31.xxyz
        break 
      endif 
    endif 
  endloop 
  if_nz r13.w
    mov r20.xyzw, r29.xyzw
    mov r21.yzw, r28.yyzw
    mov r4.w, l(-1)
    break 
  endif 
  iadd r6.w, r6.w, l(32)
  mov r20.xyzw, r29.xyzw
  mov r21.yzw, r28.yyzw
  mov r4.w, r13.w
endloop 
if_z r4.w
  iadd r4.w, cb2[0].y, -cb2[58].x
  and r6.w, r4.w, l(-32)
  iadd r7.w, r4.w, -r6.w
  and r9.z, cb2[0].y, l(-32)
  iadd r9.w, -r9.z, cb2[0].y
  mov r13.xy, l(0,0,0,0)
  mov r14.w, l(0)
  mov r15.yz, l(0,0,1.000000,0)
  mov r16.xy, l(0,0,0,0)
  mov r17.x, l(1.000000)
  mov r18.xy, l(0,0,0,0)
  mov r19.xy, l(0,0,0,0)
  mov r22.xyzw, r20.xyzw
  mov r23.yzw, r21.yyzw
  mov r10.w, r6.w
  loop 
    uge r11.y, r10.w, cb2[0].y
    breakc_nz r11.y
    ushr r13.z, r10.w, l(5)
    iadd r14.xyz, r7.xyzx, r13.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r11.y, r14.xyzw, t7.yxzw
    ieq r11.z, r6.w, r10.w
    bfi r11.w, r7.w, l(0), l(0), r11.y
    movc r11.y, r11.z, r11.w, r11.y
    ieq r11.z, r9.z, r10.w
    ubfe r11.w, r9.w, l(0), r11.y
    movc r11.y, r11.z, r11.w, r11.y
    iadd r11.z, r10.w, cb2[0].x
    mov r24.xyzw, r22.xyzw
    mov r25.xyz, r23.yzwy
    mov r11.w, r11.y
    loop 
      breakc_z r11.w
      firstbit_lo r13.z, r11.w
      ishl r13.w, l(1), r13.z
      and r14.x, r11.w, r13.w
      if_nz r14.x
        xor r11.w, r11.w, r13.w
        iadd r13.w, r11.z, r13.z
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r26.xyzw, r13.w, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r14.xy, r13.w, l(16), t11.xyxx
        add r26.xyz, r26.xyzx, -v6.xyzx
        mov r14.z, r26.w
        lt r14.xyz, |r26.xyzx|, r14.zxyz
        and r13.w, r14.y, r14.x
        and r13.w, r14.z, r13.w
        if_nz r13.w
          iadd r13.z, r10.w, r13.z
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r13.z, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r14.xy, r13.z, l(96), t15.xyxx
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r13.z, l(116), t15.zwxy
          add r28.xyz, -r26.yzwy, v6.xyzx
          and r13.w, r27.w, l(0x0000ffff)
          ubfe r14.z, l(6), l(25), r27.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r13.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r13.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r13.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r13.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r13.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r13.w, l(80), t16.xyzw
          dp3 r15.w, r29.xyzx, r28.xyzx
          add_sat r15.w, r29.w, r15.w
          dp3 r16.w, r30.xyzx, r28.xyzx
          add_sat r16.w, r30.w, r16.w
          mul r15.w, r15.w, r16.w
          dp3 r16.w, r31.xyzx, r28.xyzx
          add_sat r16.w, r31.w, r16.w
          mul r15.w, r15.w, r16.w
          dp3 r16.w, r32.xyzx, r28.xyzx
          add_sat r16.w, r32.w, r16.w
          mul r15.w, r15.w, r16.w
          dp3 r16.w, r33.xyzx, r28.xyzx
          add_sat r16.w, r33.w, r16.w
          mul r15.w, r15.w, r16.w
          dp3 r16.w, r34.xyzx, r28.xyzx
          add_sat r16.w, r34.w, r16.w
          mul r15.x, r15.w, r16.w
          and r15.w, r14.x, l(1)
          movc r15.xw, r15.wwww, r15.xxxy, r15.zzzx
          mov r16.w, r14.x
          mov r29.xy, r15.xwxx
          mov r17.z, l(1)
          loop 
            ige r17.w, r17.z, r14.z
            breakc_nz r17.w
            iadd r17.w, r13.w, r17.z
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r17.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r17.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r17.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r17.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r17.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r17.w, l(80), t16.xyzw
            dp3 r17.w, r30.xyzx, r28.xyzx
            add_sat r17.w, r30.w, r17.w
            mul r17.w, r17.w, r29.x
            dp3 r18.w, r31.xyzx, r28.xyzx
            add_sat r18.w, r31.w, r18.w
            mul r17.w, r17.w, r18.w
            dp3 r18.w, r32.xyzx, r28.xyzx
            add_sat r18.w, r32.w, r18.w
            mul r17.w, r17.w, r18.w
            dp3 r18.w, r33.xyzx, r28.xyzx
            add_sat r18.w, r33.w, r18.w
            mul r17.w, r17.w, r18.w
            dp3 r18.w, r34.xyzx, r28.xyzx
            add_sat r18.w, r34.w, r18.w
            mul r17.w, r17.w, r18.w
            dp3 r18.w, r35.xyzx, r28.xyzx
            add_sat r18.w, r35.w, r18.w
            mul r29.x, r17.w, r18.w
            ushr r19.w, r16.w, l(2)
            ubfe r26.w, l(1), l(2), r16.w
            and r28.w, r19.w, l(2)
            max r29.z, r29.x, r29.y
            mad r17.w, -r17.w, r18.w, l(1.000000)
            mul r17.w, r17.w, r29.y
            movc r17.y, r28.w, r17.w, r29.z
            movc r29.xy, r26.wwww, r29.xyxx, r17.xyxx
            iadd r17.z, r17.z, l(1)
            mov r16.w, r19.w
          endloop 
          mov_sat r29.y, r29.y
          mul r13.w, r14.y, r29.y
          lt r14.x, l(0.000000), r13.w
          if_nz r14.x
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r13.z, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r13.z, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r13.z, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r13.z, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r13.z, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r13.z, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r13.z, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r13.z, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r13.z, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xyzw, r13.z, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r40.xy, r13.z, l(212), t15.xyxx
            mad r25.z, r29.y, r14.y, r25.z
            mul r13.z, r27.z, r13.w
            mov r27.z, r35.z
            dp3 r13.w, r12.xyzx, r27.xyzx
            dp3 r14.x, r28.xyzx, r27.xyzx
            add r14.x, -r35.w, r14.x
            ge r14.y, r14.x, l(0.000000)
            max r14.x, r5.z, |r14.x|
            movc r14.x, r14.y, r14.x, -r14.x
            max r13.w, -r13.w, l(0.00000010)
            div r13.w, r14.x, r13.w
            min r13.w, |r13.w|, l(131072.000000)
            mov r35.z, r36.z
            dp3 r14.x, r12.xyzx, r35.xyzx
            dp3 r14.y, r28.xyzx, r35.xyzx
            add r14.y, -r36.w, r14.y
            ge r14.z, r14.y, l(0.000000)
            max r14.y, r5.z, |r14.y|
            movc r14.y, r14.z, r14.y, -r14.y
            max r14.x, -r14.x, l(0.00000010)
            div r14.x, r14.y, r14.x
            min r13.w, r13.w, |r14.x|
            mov r36.z, r37.z
            dp3 r14.x, r12.xyzx, r36.xyzx
            dp3 r14.y, r28.xyzx, r36.xyzx
            add r14.y, -r37.w, r14.y
            ge r14.z, r14.y, l(0.000000)
            max r14.y, r5.z, |r14.y|
            movc r14.y, r14.z, r14.y, -r14.y
            max r14.x, -r14.x, l(0.00000010)
            div r14.x, r14.y, r14.x
            min r13.w, r13.w, |r14.x|
            mov r37.z, r38.z
            dp3 r14.x, r12.xyzx, r37.xyzx
            dp3 r14.y, r28.xyzx, r37.xyzx
            add r14.y, -r38.w, r14.y
            ge r14.z, r14.y, l(0.000000)
            max r14.y, r5.z, |r14.y|
            movc r14.y, r14.z, r14.y, -r14.y
            max r14.x, -r14.x, l(0.00000010)
            div r14.x, r14.y, r14.x
            min r13.w, r13.w, |r14.x|
            mov r38.z, r39.x
            dp3 r14.x, r12.xyzx, r38.xyzx
            dp3 r14.y, r28.xyzx, r38.xyzx
            add r14.y, -r39.y, r14.y
            ge r14.z, r14.y, l(0.000000)
            max r14.y, r5.z, |r14.y|
            movc r14.y, r14.z, r14.y, -r14.y
            max r14.x, -r14.x, l(0.00000010)
            div r14.x, r14.y, r14.x
            min r13.w, r13.w, |r14.x|
            mov r40.zw, r39.zzzw
            dp3 r14.x, r12.zxyz, r40.xzwx
            dp3 r14.y, r28.zxyz, r40.xzwx
            add r14.y, -r40.y, r14.y
            ge r14.z, r14.y, l(0.000000)
            max r14.y, r5.z, |r14.y|
            movc r14.y, r14.z, r14.y, -r14.y
            max r14.x, -r14.x, l(0.00000010)
            div r14.x, r14.y, r14.x
            min r13.w, r13.w, |r14.x|
            mov r14.x, r32.w
            mov r14.yz, r33.zzwz
            add r14.xyz, r28.xyzx, r14.xyzx
            mad r14.xyz, r12.xyzx, r13.wwww, r14.xyzx
            dp3 r15.x, r14.xyzx, r14.xyzx
            sqrt r15.x, r15.x
            div r13.w, r13.w, r15.x
            add r13.w, r13.w, r13.w
            sqrt r13.w, r13.w
            mad r13.w, r4.y, l(5.000000), r13.w
            add r13.w, r13.w, l(-0.844800)
            mov r26.y, r30.z
            mov r26.z, r31.x
            dp3 r35.x, r14.xyzx, r26.xyzx
            mov r27.xy, r30.xwxx
            mov r27.z, r31.w
            dp3 r35.y, r14.xyzx, r27.xyzx
            mov r31.x, r30.y
            dp3 r35.z, r14.xyzx, r31.xyzx
            ubfe r14.x, l(9), l(16), r27.w
            utof r35.w, r14.x
            sample_l_indexable(texturecubearray)(float,float,float,float) r14.xyz, r35.xyzw, t8.xyzw, s2, r13.w
            and r17.yzw, r14.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
            ieq r17.yzw, r17.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
            or r13.w, r17.z, r17.y
            or r13.w, r17.w, r13.w
            movc r14.xyz, r13.wwww, l(1.000000,1.000000,0,0), r14.xyzx
            dp3 r30.x, r28.xyzx, r26.xyzx
            dp3 r30.y, r28.xyzx, r27.xyzx
            dp3 r30.z, r28.xyzx, r31.xyzx
            mad_sat r17.yzw, r30.xxyz, r32.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
            mov r33.z, r34.x
            mad r17.yzw, r17.yyzw, r33.xxyz, r34.yyzw
            dp3 r35.x, r8.xyzx, r26.xyzx
            dp3 r35.y, r8.xyzx, r27.xyzx
            dp3 r35.z, r8.xyzx, r31.xyzx
            lt r26.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r35.xyzx
            movc r16.z, r26.x, l(0), l(0.500000)
            add r27.xyz, r16.xyzx, r17.yzwy
            sample_l_indexable(texture3d)(float,float,float,float) r27.xyz, r27.xyzx, t17.xyzw, s4, l(0.000000)
            mul r28.xyz, r35.xyzx, r35.xyzx
            mul r28.xyz, r13.zzzz, r28.xyzx
            movc r18.z, r26.y, l(0), l(0.500000)
            add r26.xyw, r17.yzyw, r18.xyxz
            sample_l_indexable(texture3d)(float,float,float,float) r26.xyw, r26.xywx, t18.xywz, s4, l(0.000000)
            mul r26.xyw, r28.yyyy, r26.xyxw
            mad r26.xyw, r27.xyxz, r28.xxxx, r26.xyxw
            movc r19.z, r26.z, l(0), l(0.500000)
            add r17.yzw, r17.yyzw, r19.xxyz
            sample_l_indexable(texture3d)(float,float,float,float) r17.yzw, r17.yzwy, t19.wxyz, s4, l(0.000000)
            mad r17.yzw, r17.yyzw, r28.zzzz, r26.xxyw
            sample_l_indexable(texturecubearray)(float,float,float,float) r26.xyz, r35.xyzw, t8.xyzw, s2, l(6.000000)
            and r27.xyz, r26.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
            ieq r27.xyz, r27.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
            or r13.w, r27.y, r27.x
            or r13.w, r27.z, r13.w
            movc r26.xyz, r13.wwww, l(1.000000,1.000000,0,0), r26.xyzx
            mul r27.xyz, r17.yzwy, r26.xyzx
            dp3 r13.w, r27.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r24.xyz, r17.yzwy, r26.xyzx, r24.xyzx
            mul r15.x, r5.w, r13.w
            mul r14.xyz, r13.zzzz, r14.xyzx
            dp3 r13.z, r14.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r13.z, r5.w, r13.w, r13.z
            div r13.z, r15.x, r13.z
            mov r26.x, r24.w
            mov r26.yz, r25.xxyx
            mad r25.xyw, r14.yzyx, r13.zzzz, r26.yzyx
            mov r24.w, r25.w
          endif 
        endif 
      endif 
    endloop 
    mov r22.xyzw, r24.xyzw
    mov r23.yzw, r25.xxyz
    iadd r10.w, r10.w, l(32)
  endloop 
  lt r9.z, r23.w, l(1.000000)
  if_nz r9.z
    mov r13.xy, l(0,0,0,0)
    mov r14.w, l(0)
    mov r15.yz, l(0,0,1.000000,0)
    mov r16.xy, l(0,0,0,0)
    mov r17.x, l(1.000000)
    mov r18.xy, l(0,0,0,0)
    mov r19.xy, l(0,0,0,0)
    mov r24.x, r22.w
    mov r24.yzw, r23.yyzw
    mov r11.yzw, r22.xxyz
    mov r9.z, r23.w
    mov r9.w, l(0)
    loop 
      uge r10.w, r9.w, r4.w
      breakc_nz r10.w
      ushr r13.z, r9.w, l(5)
      iadd r14.xyz, r7.xyzx, r13.xyzx
      ld_indexable(texture2darray)(uint,uint,uint,uint) r10.w, r14.xyzw, t7.yzwx
      ieq r13.z, r6.w, r9.w
      ubfe r13.w, r7.w, l(0), r10.w
      movc r10.w, r13.z, r13.w, r10.w
      iadd r13.z, r9.w, cb2[0].x
      mov r25.xyzw, r24.xyzw
      mov r14.xyz, r11.yzwy
      mov r13.w, r9.z
      mov r15.w, r10.w
      loop 
        breakc_z r15.w
        firstbit_lo r16.w, r15.w
        ishl r17.z, l(1), r16.w
        and r17.w, r15.w, r17.z
        if_nz r17.w
          xor r15.w, r15.w, r17.z
          iadd r17.z, r13.z, r16.w
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r26.xyzw, r17.z, l(0), t11.xyzw
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r27.xy, r17.z, l(16), t11.xyxx
          add r26.xyz, r26.xyzx, -v6.xyzx
          mov r27.z, r26.w
          lt r26.xyz, |r26.xyzx|, r27.zxyz
          and r17.z, r26.y, r26.x
          and r17.z, r26.z, r17.z
          if_nz r17.z
            iadd r16.w, r9.w, r16.w
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r16.w, l(0), t15.wxyz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r17.zw, r16.w, l(96), t15.xxxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r16.w, l(116), t15.zwxy
            add r28.xyz, -r26.yzwy, v6.xyzx
            and r18.w, r27.w, l(0x0000ffff)
            ubfe r19.w, l(6), l(25), r27.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r18.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r18.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r18.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r18.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r18.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r18.w, l(80), t16.xyzw
            dp3 r21.w, r29.xyzx, r28.xyzx
            add_sat r21.w, r29.w, r21.w
            dp3 r26.w, r30.xyzx, r28.xyzx
            add_sat r26.w, r30.w, r26.w
            mul r21.w, r21.w, r26.w
            dp3 r26.w, r31.xyzx, r28.xyzx
            add_sat r26.w, r31.w, r26.w
            mul r21.w, r21.w, r26.w
            dp3 r26.w, r32.xyzx, r28.xyzx
            add_sat r26.w, r32.w, r26.w
            mul r21.w, r21.w, r26.w
            dp3 r26.w, r33.xyzx, r28.xyzx
            add_sat r26.w, r33.w, r26.w
            mul r21.w, r21.w, r26.w
            dp3 r26.w, r34.xyzx, r28.xyzx
            add_sat r26.w, r34.w, r26.w
            mul r15.x, r21.w, r26.w
            and r21.w, r17.z, l(1)
            movc r29.xy, r21.wwww, r15.xyxx, r15.zxzz
            mov r15.x, r17.z
            mov r30.xy, r29.xyxx
            mov r21.w, l(1)
            loop 
              ige r26.w, r21.w, r19.w
              breakc_nz r26.w
              iadd r26.w, r18.w, r21.w
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r26.w, l(0), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r26.w, l(16), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r26.w, l(32), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r26.w, l(48), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r26.w, l(64), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r26.w, l(80), t16.xyzw
              dp3 r26.w, r31.xyzx, r28.xyzx
              add_sat r26.w, r31.w, r26.w
              mul r26.w, r26.w, r30.x
              dp3 r28.w, r32.xyzx, r28.xyzx
              add_sat r28.w, r32.w, r28.w
              mul r26.w, r26.w, r28.w
              dp3 r28.w, r33.xyzx, r28.xyzx
              add_sat r28.w, r33.w, r28.w
              mul r26.w, r26.w, r28.w
              dp3 r28.w, r34.xyzx, r28.xyzx
              add_sat r28.w, r34.w, r28.w
              mul r26.w, r26.w, r28.w
              dp3 r28.w, r35.xyzx, r28.xyzx
              add_sat r28.w, r35.w, r28.w
              mul r26.w, r26.w, r28.w
              dp3 r28.w, r36.xyzx, r28.xyzx
              add_sat r28.w, r36.w, r28.w
              mul r30.x, r26.w, r28.w
              ushr r29.z, r15.x, l(2)
              ubfe r29.w, l(1), l(2), r15.x
              and r30.z, r29.z, l(2)
              max r30.w, r30.x, r30.y
              mad r26.w, -r26.w, r28.w, l(1.000000)
              mul r26.w, r26.w, r30.y
              movc r17.y, r30.z, r26.w, r30.w
              movc r30.xy, r29.wwww, r30.xyxx, r17.xyxx
              iadd r21.w, r21.w, l(1)
              mov r15.x, r29.z
            endloop 
            add_sat r15.x, -r13.w, r30.y
            mul r17.y, r17.w, r15.x
            lt r17.z, l(0.000000), r17.y
            if_nz r17.z
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r16.w, l(16), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r16.w, l(32), t15.yxwz
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r16.w, l(48), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r16.w, l(64), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r16.w, l(80), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r16.w, l(132), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r16.w, l(148), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r16.w, l(164), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r16.w, l(180), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xyzw, r16.w, l(196), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r40.xy, r16.w, l(212), t15.xyxx
              mad r25.w, r15.x, r17.w, r25.w
              mul r15.x, r27.z, r17.y
              mov r27.z, r35.z
              dp3 r16.w, r12.xyzx, r27.xyzx
              dp3 r17.y, r28.xyzx, r27.xyzx
              add r17.y, -r35.w, r17.y
              ge r17.z, r17.y, l(0.000000)
              max r17.y, r5.z, |r17.y|
              movc r17.y, r17.z, r17.y, -r17.y
              max r16.w, -r16.w, l(0.00000010)
              div r16.w, r17.y, r16.w
              min r16.w, |r16.w|, l(131072.000000)
              mov r35.z, r36.z
              dp3 r17.y, r12.xyzx, r35.xyzx
              dp3 r17.z, r28.xyzx, r35.xyzx
              add r17.z, -r36.w, r17.z
              ge r17.w, r17.z, l(0.000000)
              max r17.z, r5.z, |r17.z|
              movc r17.z, r17.w, r17.z, -r17.z
              max r17.y, -r17.y, l(0.00000010)
              div r17.y, r17.z, r17.y
              min r16.w, r16.w, |r17.y|
              mov r36.z, r37.z
              dp3 r17.y, r12.xyzx, r36.xyzx
              dp3 r17.z, r28.xyzx, r36.xyzx
              add r17.z, -r37.w, r17.z
              ge r17.w, r17.z, l(0.000000)
              max r17.z, r5.z, |r17.z|
              movc r17.z, r17.w, r17.z, -r17.z
              max r17.y, -r17.y, l(0.00000010)
              div r17.y, r17.z, r17.y
              min r16.w, r16.w, |r17.y|
              mov r37.z, r38.z
              dp3 r17.y, r12.xyzx, r37.xyzx
              dp3 r17.z, r28.xyzx, r37.xyzx
              add r17.z, -r38.w, r17.z
              ge r17.w, r17.z, l(0.000000)
              max r17.z, r5.z, |r17.z|
              movc r17.z, r17.w, r17.z, -r17.z
              max r17.y, -r17.y, l(0.00000010)
              div r17.y, r17.z, r17.y
              min r16.w, r16.w, |r17.y|
              mov r38.z, r39.x
              dp3 r17.y, r12.xyzx, r38.xyzx
              dp3 r17.z, r28.xyzx, r38.xyzx
              add r17.z, -r39.y, r17.z
              ge r17.w, r17.z, l(0.000000)
              max r17.z, r5.z, |r17.z|
              movc r17.z, r17.w, r17.z, -r17.z
              max r17.y, -r17.y, l(0.00000010)
              div r17.y, r17.z, r17.y
              min r16.w, r16.w, |r17.y|
              mov r40.zw, r39.zzzw
              dp3 r17.y, r12.zxyz, r40.xzwx
              dp3 r17.z, r28.zxyz, r40.xzwx
              add r17.z, -r40.y, r17.z
              ge r17.w, r17.z, l(0.000000)
              max r17.z, r5.z, |r17.z|
              movc r17.z, r17.w, r17.z, -r17.z
              max r17.y, -r17.y, l(0.00000010)
              div r17.y, r17.z, r17.y
              min r16.w, r16.w, |r17.y|
              mov r27.x, r32.w
              mov r27.yz, r33.zzwz
              add r17.yzw, r28.xxyz, r27.xxyz
              mad r17.yzw, r12.xxyz, r16.wwww, r17.yyzw
              dp3 r18.w, r17.yzwy, r17.yzwy
              sqrt r18.w, r18.w
              div r16.w, r16.w, r18.w
              add r16.w, r16.w, r16.w
              sqrt r16.w, r16.w
              mad r16.w, r4.y, l(5.000000), r16.w
              add r16.w, r16.w, l(-0.844800)
              mov r26.y, r29.z
              mov r26.z, r31.x
              dp3 r35.x, r17.yzwy, r26.xyzx
              mov r27.xy, r29.xwxx
              mov r27.z, r31.w
              dp3 r35.y, r17.yzwy, r27.xyzx
              mov r31.x, r29.y
              dp3 r35.z, r17.yzwy, r31.xyzx
              ubfe r17.y, l(9), l(16), r27.w
              utof r35.w, r17.y
              sample_l_indexable(texturecubearray)(float,float,float,float) r17.yzw, r35.xyzw, t8.wxyz, s2, r16.w
              and r29.xyz, r17.yzwy, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
              ieq r29.xyz, r29.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
              or r16.w, r29.y, r29.x
              or r16.w, r29.z, r16.w
              movc r17.yzw, r16.wwww, l(0,1.000000,1.000000,0), r17.yyzw
              dp3 r29.x, r28.xyzx, r26.xyzx
              dp3 r29.y, r28.xyzx, r27.xyzx
              dp3 r29.z, r28.xyzx, r31.xyzx
              mad_sat r28.xyz, r29.xyzx, r32.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
              mov r33.z, r34.x
              mad r28.xyz, r28.xyzx, r33.xyzx, r34.yzwy
              dp3 r35.x, r8.xyzx, r26.xyzx
              dp3 r35.y, r8.xyzx, r27.xyzx
              dp3 r35.z, r8.xyzx, r31.xyzx
              lt r26.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r35.xyzx
              movc r16.z, r26.x, l(0), l(0.500000)
              add r27.xyz, r16.xyzx, r28.xyzx
              sample_l_indexable(texture3d)(float,float,float,float) r27.xyz, r27.xyzx, t17.xyzw, s4, l(0.000000)
              mul r29.xyz, r35.xyzx, r35.xyzx
              mul r29.xyz, r15.xxxx, r29.xyzx
              movc r18.z, r26.y, l(0), l(0.500000)
              add r26.xyw, r18.xyxz, r28.xyxz
              sample_l_indexable(texture3d)(float,float,float,float) r26.xyw, r26.xywx, t18.xywz, s4, l(0.000000)
              mul r26.xyw, r29.yyyy, r26.xyxw
              mad r26.xyw, r27.xyxz, r29.xxxx, r26.xyxw
              movc r19.z, r26.z, l(0), l(0.500000)
              add r27.xyz, r19.xyzx, r28.xyzx
              sample_l_indexable(texture3d)(float,float,float,float) r27.xyz, r27.xyzx, t19.xyzw, s4, l(0.000000)
              mad r26.xyz, r27.xyzx, r29.zzzz, r26.xywx
              sample_l_indexable(texturecubearray)(float,float,float,float) r27.xyz, r35.xyzw, t8.xyzw, s2, l(6.000000)
              and r28.xyz, r27.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
              ieq r28.xyz, r28.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
              or r16.z, r28.y, r28.x
              or r16.z, r28.z, r16.z
              movc r27.xyz, r16.zzzz, l(1.000000,1.000000,0,0), r27.xyzx
              mul r28.xyz, r26.xyzx, r27.xyzx
              dp3 r16.z, r28.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
              mad r14.xyz, r26.xyzx, r27.xyzx, r14.xyzx
              mul r16.w, r5.w, r16.z
              mul r17.yzw, r15.xxxx, r17.yyzw
              dp3 r15.x, r17.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
              mad r15.x, r5.w, r16.z, r15.x
              div r15.x, r16.w, r15.x
              mad r25.xyz, r17.yzwy, r15.xxxx, r25.xyzx
            endif 
          endif 
        endif 
      endloop 
      mov r24.xyzw, r25.xyzw
      mov r11.yzw, r14.xxyz
      iadd r9.w, r9.w, l(32)
    endloop 
    mov r23.xyzw, r24.zxyw
    mov r22.xyz, r11.yzwy
    mov r23.xyzw, r23.yzxw
  else 
    mov r23.x, r22.w
  endif 
  max r4.y, r23.w, l(1.000000)
  rcp r4.y, r4.y
  mov_sat r23.w, r23.w
  mul r20.xyz, r4.yyyy, r22.xyzx
  mul r21.xyz, r4.yyyy, r23.xyzx
  lt r4.w, r23.w, l(0.990000)
  if_nz r4.w
    add r4.w, -r23.w, l(1.000000)
    mul r5.z, r4.w, cb2[19].x
    add r11.yzw, v6.xxyz, -cb2[35].xxyz
    mul r13.x, r11.y, cb2[35].w
    mul r13.yz, r11.zzwz, cb2[36].xxyx
    add_sat r11.yzw, r13.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
    mul r13.xy, r11.yzyy, cb2[36].zwzz
    mul r13.z, r11.w, cb2[37].x
    add r11.yzw, r13.xxyz, cb2[37].yyzw
    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
    movc r13.xyz, r13.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
    mov r13.w, l(0)
    add r14.xyz, r11.yzwy, r13.wwxw
    sample_l_indexable(texture3d)(float,float,float,float) r14.xyz, r14.xyzx, t17.xyzw, s4, l(0.000000)
    mul r15.xyz, r8.xyzx, r8.xyzx
    mul r15.xyz, r5.zzzz, r15.xyzx
    add r16.xyz, r11.yzwy, r13.wwyw
    sample_l_indexable(texture3d)(float,float,float,float) r16.xyz, r16.xyzx, t18.xyzw, s4, l(0.000000)
    mul r16.xyz, r15.yyyy, r16.xyzx
    mad r14.xyz, r14.xyzx, r15.xxxx, r16.xyzx
    add r11.yzw, r11.yyzw, r13.wwwz
    sample_l_indexable(texture3d)(float,float,float,float) r11.yzw, r11.yzwy, t19.wxyz, s4, l(0.000000)
    mad r11.yzw, r11.yyzw, r15.zzzz, r14.xxyz
    mov r8.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r13.xyz, r8.xyzw, t8.xyzw, s2, l(6.000000)
    mul r11.yzw, r11.yyzw, r13.xxyz
    dp3 r5.z, r11.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
    mad r20.xyz, r22.xyzx, r4.yyyy, r11.yzwy
    mov r12.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r11.yzw, r12.xyzw, t8.wxyz, s2, r4.z
    mad r4.y, cb2[19].x, r4.w, -r5.z
    mad r4.y, r9.y, r4.y, r5.z
    mad r21.xyz, r11.yzwy, r4.yyyy, r21.xyzx
  endif 
else 
  mov r21.x, r20.w
endif 
add r4.y, r2.x, r9.x
log r4.y, |r4.y|
mul r4.y, r1.w, r4.y
exp r4.y, r4.y
add r4.y, r2.x, r4.y
add_sat r4.y, r4.y, l(-1.000000)
mul r13.xyz, r2.xxxx, r20.xyzx
mad r4.zw, r9.xxxy, l(0.000000, 0.000000, 0.984375, 0.984375), l(0.000000, 0.000000, 0.00781250, 0.00781250)
sample_l_indexable(texture2d)(float,float,float,float) r4.zw, r4.zwzz, t5.zwxy, s2, l(0.000000)
mul r9.yzw, r4.yyyy, r21.xxyz
mul r14.xyz, r4.zzzz, r9.zwyz
mul r4.yzw, r4.wwww, r9.yyzw
sqrt r2.x, r1.w
mad r2.x, r2.x, l(0.500000), l(0.500000)
mul r2.x, r2.x, r2.x
mul r5.z, r2.x, l(0.500000)
mad r2.x, -r2.x, l(0.500000), l(1.000000)
mad r5.w, r9.x, r2.x, r5.z
mul r2.x, r2.x, r5.w
mul r5.z, r5.w, r5.z
dp3 r5.w, r8.xyzx, cb2[17].xyzx
mov_sat r6.w, r5.w
ge r7.w, l(0.000000), r6.w
if_nz r7.w
  mov r8.w, l(0)
endif 
if_z r7.w
  mul r9.yzw, v6.yyyy, cb2[29].xxyz
  mad r9.yzw, v6.xxxx, cb2[28].xxyz, r9.yyzw
  mad r9.yzw, v6.zzzz, cb2[30].xxyz, r9.yyzw
  add r9.yzw, r9.yyzw, cb2[31].xxyz
  add r7.w, r9.w, -cb2[17].w
  mad r7.w, -r7.w, l(0.00006104), l(1.000000)
  mov_sat r10.w, r7.w
  eq r10.w, r7.w, r10.w
  if_nz r10.w
    mov r10.w, l(0)
    mov r11.y, l(0)
    loop 
      ge r11.z, r10.w, l(3.000000)
      breakc_nz r11.z
      ftou r11.z, r10.w
      add r15.xy, r9.yzyy, -cb2[r11.z + 20].xyxx
      max r11.w, |r15.y|, |r15.x|
      mul r11.y, r11.w, cb2[r11.z + 20].z
      lt r11.z, r11.y, l(1.000000)
      if_nz r11.z
        break 
      endif 
      add r10.w, r10.w, l(1.000000)
      mov r11.y, l(0)
    endloop 
  else 
    mov r10.w, l(3.000000)
    mov r11.y, l(0)
  endif 
  ge r11.z, r10.w, l(3.000000)
  if_nz r11.z
    mul r15.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
    rcp r16.xz, r15.xxxx
    mov r16.y, -r16.z
    mad r15.xyz, r9.yzyy, r16.xyzx, r15.yzyy
    add r16.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r15.xyz, r15.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r15.xyz, r16.xyzx, r15.xyzx
    mul r16.xy, r15.zyzz, cb2[32].xxxx
    round_ni r16.xy, r16.xyxx
    mul r11.w, r16.y, cb2[27].x
    mad r11.w, r11.w, cb2[32].x, r16.x
    ftou r11.w, r11.w
    iadd r11.w, r11.w, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r12.w, r11.w, l(0), t23.xxxx
    and r15.w, r12.w, l(0x40000000)
    ishl r16.x, r12.w, l(2)
    if_z r15.w
      and r15.w, r12.w, l(0x01ffffff)
      iadd r17.x, r11.w, r15.w
      ushr r11.w, r12.w, l(25)
      utof r11.w, r11.w
      mul r15.xyz, r11.wwww, r15.xyzx
      frc r15.xyz, r15.xyzx
      mul r15.xyz, r15.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
      ftou r15.xyz, r15.xyzx
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.z, r17.x, l(0), t23.xxxx
      ushr r16.yz, r15.zzyz, l(0, 6, 6, 0)
      and r11.w, r17.z, l(0xc0000000)
      iadd r12.w, r17.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r12.w, r12.w, l(0), t23.xxxx
      movc r12.w, r16.z, r17.z, r12.w
      ushr r15.w, r12.w, l(13)
      movc r12.w, r16.y, r15.w, r12.w
      and r12.w, r12.w, l(8191)
      iadd r18.x, r12.w, r17.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.x, l(0), t23.xxxx
      mov r17.y, l(0)
      mov r18.y, l(1)
      movc r16.yzw, r11.wwww, r17.xxyz, r18.xxyz
      movc r18.yz, r11.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r19.xy, r15.zyzz, r18.yyyy
      and r19.xy, r19.xyxx, l(1, 1, 0, 0)
      and r12.w, r16.w, l(0xc0000000)
      iadd r15.w, r16.y, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.w, r15.w, l(0), t23.xxxx
      movc r15.w, r19.y, r16.w, r15.w
      ushr r17.w, r15.w, l(13)
      movc r15.w, r19.x, r17.w, r15.w
      and r15.w, r15.w, l(8191)
      iadd r18.x, r15.w, r16.y
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.w, r18.x, l(0), t23.xxxx
      movc r16.yzw, r12.wwww, r16.yyzw, r18.xxzw
      movc r16.yzw, r11.wwww, r17.xxyz, r16.yyzw
      and r11.w, r16.w, l(0xc0000000)
      if_z r11.w
        iadd r11.w, -r16.z, l(6)
        ushr r17.xy, r15.zyzz, r11.wwww
        or r11.w, r16.w, l(0x40000000)
        bfi r12.w, l(1), l(1), r17.y, l(0)
        bfi r12.w, l(1), l(0), r17.x, r12.w
        imul null, r12.w, r12.w, l(10)
        ushr r11.w, r11.w, r12.w
        and r11.w, r11.w, l(1023)
        iadd r17.x, r11.w, r16.y
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.w, r17.x, l(0), t23.xxxx
        iadd r17.yz, r16.zzzz, l(0, 1, 2, 0)
        iadd r11.w, -r17.y, l(6)
        ushr r18.xy, r15.zyzz, r11.wwww
        and r11.w, r17.w, l(0xc0000000)
        or r12.w, r17.w, l(0x40000000)
        bfi r15.w, l(1), l(1), r18.y, l(0)
        bfi r15.w, l(1), l(0), r18.x, r15.w
        imul null, r15.w, r15.w, l(10)
        ushr r12.w, r12.w, r15.w
        and r12.w, r12.w, l(1023)
        iadd r18.x, r12.w, r17.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.x, l(0), t23.xxxx
        mov r18.y, r17.z
        movc r18.xyz, r11.wwww, r17.xywx, r18.xyzx
        iadd r12.w, -r18.y, l(6)
        ushr r17.yz, r15.zzyz, r12.wwww
        and r12.w, r18.z, l(0xc0000000)
        or r15.w, r18.z, l(0x40000000)
        bfi r16.z, l(1), l(1), r17.z, l(0)
        bfi r16.z, l(1), l(0), r17.y, r16.z
        imul null, r16.z, r16.z, l(10)
        ushr r15.w, r15.w, r16.z
        and r15.w, r15.w, l(1023)
        iadd r19.x, r15.w, r18.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.y, r19.x, l(0), t23.xxxx
        movc r17.yz, r12.wwww, r18.xxzx, r19.xxyx
        movc r16.yw, r11.wwww, r17.xxxw, r17.yyyz
      endif 
      and r11.w, r16.w, l(0xc0000000)
      if_z r11.w
        ubfe r12.w, l(14), l(15), r16.w
        utof r12.w, r12.w
        mul r12.w, r12.w, cb2[27].w
        mul r12.w, r12.w, l(0.00006104)
        and r17.xy, r16.wwww, l(0x00007fff, 0x20000000, 0, 0)
        utof r15.w, r17.x
        mul r15.w, r15.w, cb2[27].w
        mul r15.w, r15.w, l(0.00003052)
        and r16.z, r15.y, l(3)
        iadd r16.z, r16.z, r16.y
        iadd r16.z, r16.z, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.z, r16.z, l(0), t23.xxxx
        bfi r17.xzw, l(2, 0, 2, 1), l(3, 0, 1, 4), r15.xxyz, l(0, 0, 0, 0)
        ushr r15.x, r16.z, r17.x
        and r15.x, r15.x, l(255)
        utof r15.x, r15.x
        mul r15.x, r15.w, r15.x
        mad r15.x, r15.x, l(0.00392157), r12.w
        iadd r15.y, r17.z, l(1)
        ubfe r15.z, l(1), l(1), r15.z
        iadd r15.y, r15.z, r15.y
        iadd r15.y, r15.y, r16.y
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.y, r15.y, l(0), t23.xxxx
        ushr r15.y, r15.y, r17.w
        and r15.y, r15.y, l(0x0000ffff)
        utof r15.y, r15.y
        mul r15.y, r15.w, r15.y
        mad r12.w, r15.y, l(0.00001526), r12.w
        movc r16.x, r17.y, r15.x, r12.w
      else 
        and r12.w, r16.w, l(0x80000000)
        iadd r15.x, r16.y, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.x, r15.x, l(0), t23.xxxx
        movc r12.w, r12.w, r15.x, l(0)
        ishl r15.x, r16.w, l(2)
        ushr r15.y, r12.w, l(16)
        f16tof32 r15.y, r15.y
        and r12.w, r12.w, l(0x0000ffff)
        f16tof32 r12.w, r12.w
        mad r15.x, r9.y, r15.y, r15.x
        mad r12.w, r9.z, r12.w, r15.x
        movc r16.x, r11.w, r12.w, r16.x
      endif 
    endif 
    mad r9.w, -cb2[27].z, l(2.000000), r9.w
    lt r9.w, r16.x, r9.w
    movc r8.w, r9.w, l(0), l(1.000000)
  endif 
  if_z r11.z
    if_z cb2[58].y
      ftou r9.w, r10.w
      add r11.zw, r9.yyyz, -cb2[r9.w + 20].xxxy
      mul r11.zw, r11.zzzw, cb2[r9.w + 20].zzzz
      mad r15.xy, r11.zwzz, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r9.w, cb2[26].y
      add r15.z, r9.w, r10.w
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r9.w, r15.xyzx, t13.xxxx, s13, r7.w
      sample_l_indexable(texture2darray)(float,float,float,float) r11.z, r15.xyzx, t31.yzxw, s0, l(0.000000)
      add r9.w, r9.w, r11.z
      add_sat r9.w, r9.w, l(-1.000000)
      mul r11.z, r9.w, r9.w
      mul r8.w, r9.w, r11.z
    endif 
    if_nz cb2[58].y
      mov r15.x, -r5.x
      ftou r9.w, r10.w
      add r10.w, r10.w, l(1.000000)
      min r10.w, r10.w, l(2.000000)
      ftou r10.w, r10.w
      add r11.y, -r11.y, l(1.000000)
      mul r11.y, r11.y, l(28.000000)
      ftou r11.y, r11.y
      add r11.zw, r9.yyyz, -cb2[r9.w + 20].xxxy
      mul r11.zw, r11.zzzw, cb2[r9.w + 20].zzzz
      mad r11.zw, r11.zzzw, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
      add r9.yz, r9.yyzy, -cb2[r10.w + 20].xxyx
      mul r9.yz, r9.yyzy, cb2[r10.w + 20].zzzz
      mad r9.yz, r9.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      mov r15.y, r6.x
      mov r15.z, r5.x
      mov r12.w, l(0)
      mov r15.w, l(0)
      loop 
        uge r16.x, r15.w, l(8)
        breakc_nz r16.x
        ult r16.x, r11.y, r15.w
        movc r16.yz, r16.xxxx, r9.yyzy, r11.zzwz
        movc r16.w, r16.x, cb2[r10.w + 20].w, cb2[r9.w + 20].w
        movc r16.x, r16.x, r10.w, r9.w
        dp2 r17.x, icb[r15.w + 0].yxyy, r15.xyxx
        dp2 r17.y, icb[r15.w + 0].yxyy, r15.yzyy
        mad r17.xy, r17.xyxx, r16.wwww, r16.yzyy
        iadd r16.x, r16.x, cb2[26].y
        utof r17.z, r16.x
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r16.x, r17.xyzx, t13.xxxx, s13, r7.w
        sample_l_indexable(texture2darray)(float,float,float,float) r16.y, r17.xyzx, t31.yxzw, s0, l(0.000000)
        add r16.x, r16.y, r16.x
        add_sat r16.x, r16.x, l(-1.000000)
        mad r12.w, r16.x, l(0.125000), r12.w
        iadd r15.w, r15.w, l(1)
      endloop 
      mul r7.w, r12.w, r12.w
      mul r8.w, r12.w, r7.w
    endif 
  endif 
endif 
lt r7.w, l(0.000000), r6.w
if_nz r7.w
  lt r7.w, l(0.000000), r8.w
  if_nz r7.w
    mul r7.w, r0.y, cb2[18].w
    mul r7.w, r6.w, r7.w
    if_nz cb2[23].x
      add r15.xyz, v6.xyzx, cb1[24].xyzx
      mov r15.w, l(1.000000)
      dp4 r9.y, cb2[24].xyzw, r15.xyzw
      dp4 r9.z, cb2[25].xyzw, r15.xyzw
      frc r15.xy, r9.yzyy
      iadd r9.y, l(-1), cb2[23].x
      utof r15.z, r9.y
      sample_l_indexable(texture2darray)(float,float,float,float) r9.yzw, r15.xyzx, t20.wxyz, s2, l(0.000000)
      add r9.yzw, r9.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
      mad r9.yzw, cb2[23].yyyy, r9.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
      mul r9.yzw, r9.yyzw, cb2[18].xxyz
    else 
      mov r9.yzw, cb2[18].xxyz
    endif 
    ushr r10.w, cb2[53].x, l(16)
    ult r11.y, l(0), r10.w
    and r11.y, r0.x, r11.y
    if_nz r11.y
      iadd r10.w, r10.w, cb2[0].x
      iadd r10.w, r10.w, l(-1)
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r11.y, r10.w, l(52), t12.xxxx
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r10.w, l(68), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r10.w, l(84), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r10.w, l(132), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r10.w, l(148), t12.xyzw
      mad r11.z, |r5.w|, l(-0.200000), l(0.400000)
      mad r19.xyz, r8.xyzx, r11.zzzz, v6.xyzx
      mov r19.w, l(1.000000)
      dp4 r15.x, r15.xyzw, r19.xyzw
      dp4 r15.y, r16.xyzw, r19.xyzw
      mad r11.zw, r15.xxxy, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
      add r11.zw, r18.zzzw, r11.zzzw
      mul r11.zw, r18.xxxy, r11.zzzw
      div r15.xy, r11.yyyy, r17.xzxx
      add r15.zw, -r15.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
      ge r15.zw, r11.zzzw, r15.zzzw
      ge r15.xy, r15.xyxx, r11.zwzz
      or r15.xy, r15.xyxx, r15.zwzz
      or r12.w, r15.y, r15.x
      if_z r12.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.w, r10.w, l(28), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r10.w, l(100), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xy, r10.w, l(164), t12.xyxx
        dp4 r10.w, r15.xyzw, r19.xyzw
        mov_sat r11.zw, r11.zzzw
        mad r15.xy, r11.zwzz, r17.xzxx, r17.ywyy
        add r10.w, r16.x, r10.w
        div r10.w, r10.w, r16.y
        max r10.w, r10.w, l(0.00006104)
        and r11.z, r12.w, l(0x0000ffff)
        if_nz cb2[58].y
          mov r16.x, -r5.x
          utof r17.z, r11.z
          mov r16.y, r6.x
          mov r16.z, r5.x
          mov r11.w, l(0)
          mov r12.w, l(0)
          loop 
            ige r15.w, r12.w, l(8)
            breakc_nz r15.w
            dp2 r18.x, icb[r12.w + 0].yxyy, r16.xyxx
            dp2 r18.y, icb[r12.w + 0].yxyy, r16.yzyy
            mad r17.xy, r18.xyxx, r11.yyyy, r15.xyxx
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r15.w, r17.xyzx, t9.xxxx, s13, r10.w
            mad r11.w, r15.w, l(0.125000), r11.w
            iadd r12.w, r12.w, l(1)
          endloop 
        else 
          utof r15.z, r11.z
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r11.w, r15.xyzx, t9.xxxx, s13, r10.w
        endif 
        mul r10.w, r11.w, r11.w
        mul r10.w, r11.w, r10.w
      else 
        mov r10.w, l(1.000000)
      endif 
      mul r8.w, r8.w, r10.w
    else 
      and r10.w, cb2[53].x, l(0x0000ffff)
      ult r11.y, l(0), r10.w
      not r11.z, r0.x
      and r11.y, r11.z, r11.y
      if_nz r11.y
        iadd r10.w, r10.w, cb2[0].x
        iadd r10.w, r10.w, l(-1)
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r11.y, r10.w, l(52), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r10.w, l(68), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r10.w, l(84), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r10.w, l(132), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r10.w, l(148), t12.xyzw
        mad r11.z, |r5.w|, l(-0.200000), l(0.400000)
        mad r19.xyz, r8.xyzx, r11.zzzz, v6.xyzx
        mov r19.w, l(1.000000)
        dp4 r15.x, r15.xyzw, r19.xyzw
        dp4 r15.y, r16.xyzw, r19.xyzw
        mad r11.zw, r15.xxxy, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
        add r11.zw, r18.zzzw, r11.zzzw
        mul r11.zw, r18.xxxy, r11.zzzw
        div r15.xy, r11.yyyy, r17.xzxx
        add r15.zw, -r15.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
        ge r15.zw, r11.zzzw, r15.zzzw
        ge r15.xy, r15.xyxx, r11.zwzz
        or r15.xy, r15.xyxx, r15.zwzz
        or r12.w, r15.y, r15.x
        if_z r12.w
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.w, r10.w, l(28), t12.xxxx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r10.w, l(100), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xy, r10.w, l(164), t12.xyxx
          dp4 r10.w, r15.xyzw, r19.xyzw
          mov_sat r11.zw, r11.zzzw
          mad r15.xy, r11.zwzz, r17.xzxx, r17.ywyy
          add r10.w, r16.x, r10.w
          div r10.w, r10.w, r16.y
          max r10.w, r10.w, l(0.00006104)
          and r11.z, r12.w, l(0x0000ffff)
          if_nz cb2[58].y
            mov r16.x, -r5.x
            utof r17.z, r11.z
            mov r16.y, r6.x
            mov r16.z, r5.x
            mov r11.w, l(0)
            mov r12.w, l(0)
            loop 
              ige r15.w, r12.w, l(8)
              breakc_nz r15.w
              dp2 r18.x, icb[r12.w + 0].yxyy, r16.xyxx
              dp2 r18.y, icb[r12.w + 0].yxyy, r16.yzyy
              mad r17.xy, r18.xyxx, r11.yyyy, r15.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r15.w, r17.xyzx, t9.xxxx, s13, r10.w
              mad r11.w, r15.w, l(0.125000), r11.w
              iadd r12.w, r12.w, l(1)
            endloop 
          else 
            utof r15.z, r11.z
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r11.w, r15.xyzx, t9.xxxx, s13, r10.w
          endif 
          mul r10.w, r11.w, r11.w
          mul r10.w, r11.w, r10.w
        else 
          mov r10.w, l(1.000000)
        endif 
        mul r8.w, r8.w, r10.w
      endif 
    endif 
    mad r10.w, -r9.x, l(0.500000), l(1.000000)
    mad r10.w, -r6.w, r10.w, l(1.000000)
    mul r10.w, r10.w, r10.w
    mad r10.w, -r10.w, l(0.620000), l(0.620000)
    add r10.w, -r6.w, r10.w
    mad r10.w, r1.w, r10.w, r6.w
    mul r10.w, r8.w, r10.w
    lt r5.w, l(0.000000), r5.w
    mad r15.xyz, r10.wwww, r9.yzwy, r13.xyzx
    mad r11.yzw, -v6.xxyz, r0.zzzz, cb2[17].xxyz
    dp3 r0.z, r11.yzwy, r11.yzwy
    rsq r0.z, r0.z
    mul r11.yzw, r0.zzzz, r11.yyzw
    dp3 r0.z, r11.yzwy, r10.xyzx
    dp3 r10.w, r8.xyzx, r11.yzwy
    mad r11.y, |r10.w|, r0.y, -|r10.w|
    mad r10.w, |r10.w|, r11.y, l(1.000000)
    mad r6.w, r6.w, r2.x, r5.z
    mul r10.w, r10.w, r10.w
    mul r6.w, r6.w, r10.w
    rcp r6.w, r6.w
    mul r6.w, r7.w, r6.w
    mul r6.w, r6.w, r8.w
    mul r6.w, r6.w, l(0.250000)
    mad r11.yzw, r6.wwww, r9.yyzw, r4.yyzw
    add_sat r0.z, -r0.z, l(1.000000)
    mul r7.w, r0.z, r0.z
    mul r7.w, r7.w, r7.w
    mul r0.z, r0.z, r7.w
    mul r0.z, r0.z, r6.w
    mad r16.xyz, r0.zzzz, r9.zwyz, r14.xyzx
    mov r15.w, r16.z
    mov r13.w, r14.z
    movc r13.xyzw, r5.wwww, r15.xyzw, r13.xyzw
    mov r16.zw, r11.yyyz
    mov r14.zw, r4.yyyz
    movc r15.xyzw, r5.wwww, r16.xyzw, r14.xyzw
    movc r4.w, r5.w, r11.w, r4.w
    mov r14.z, r13.w
    mov r14.xy, r15.xyxx
    mov r4.yz, r15.zzwz
  endif 
endif 
mov r15.x, -r5.x
not r0.z, r0.x
mad r5.w, -r9.x, l(0.500000), l(1.000000)
mov r9.xy, l(0,0,0,0)
mov r16.w, l(0)
mov r17.xyz, v6.xyzx
mov r17.w, l(1.000000)
mov r18.w, l(1.000000)
mov r15.z, r5.x
mov r19.w, l(1.000000)
mov r20.z, l(1.000000)
mov r21.w, l(1.000000)
mov r15.yw, r6.xxxx
mov r5.y, r15.w
mov r22.w, l(1.000000)
mov r6.y, r15.x
mov r6.z, r5.x
mov r23.w, l(1.000000)
mov r24.x, r6.x
mov r24.y, r15.x
mov r24.z, r5.x
mov r25.x, r6.x
mov r25.y, r15.x
mov r25.z, r5.x
mov r26.x, r6.x
mov r26.y, r15.x
mov r26.z, r5.x
mov r11.yzw, r13.xxyz
mov r27.xyz, r14.zxyz
mov r28.xyz, r4.yzwy
mov r6.w, cb2[58].y
mov r7.w, l(0)
loop 
  uge r8.w, r7.w, cb2[0].x
  breakc_nz r8.w
  ushr r9.z, r7.w, l(5)
  iadd r16.xyz, r7.xyzx, r9.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r8.w, r16.xyzw, t6.yzwx
  mov r16.xyz, r11.yzwy
  mov r29.xyz, r27.xyzx
  mov r30.xyz, r28.xyzx
  mov r9.z, r6.w
  mov r9.w, r8.w
  loop 
    breakc_z r9.w
    firstbit_lo r10.w, r9.w
    ishl r12.w, l(1), r10.w
    and r13.w, r9.w, r12.w
    if_nz r13.w
      xor r9.w, r9.w, r12.w
      iadd r10.w, r7.w, r10.w
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r31.xyzw, r10.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r32.xy, r10.w, l(16), t11.xyxx
      add r31.xyz, r31.xyzx, -v6.xyzx
      mov r32.z, r31.w
      lt r31.xyz, |r31.xyzx|, r32.zxyz
      and r12.w, r31.y, r31.x
      and r12.w, r31.z, r12.w
      if_nz r12.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r10.w, l(0), t12.wxyz
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r10.w, l(16), t12.zxyw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r10.w, l(32), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r10.w, l(48), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r10.w, l(64), t12.yzwx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r10.w, l(80), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r10.w, l(96), t12.yzwx
        ubfe r12.w, l(3), l(24), r32.w
        switch r12.w
          case l(4)
          lt r12.w, l(0.000000), r37.x
          mov r38.xy, r36.zwzz
          mov r38.z, r37.w
          mad r39.xyz, -r38.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r31.yzwy
          add r40.xyz, r39.xyzx, -v6.xyzx
          dp3 r13.w, r38.xyzx, r40.xyzx
          div_sat r14.w, -r13.w, r37.x
          mad r41.xyz, r14.wwww, r38.xyzx, r39.xyzx
          movc r41.xyz, r12.wwww, r41.xyzx, r31.yzwy
          add r41.xyz, r41.xyzx, -v6.xyzx
          dp3 r20.w, r41.xyzx, r41.xyzx
          rsq r24.w, r20.w
          mul r41.xyz, r24.wwww, r41.xyzx
          dp3 r24.w, r8.xyzx, r41.xyzx
          mov_sat r25.w, r24.w
          lt r26.w, l(0.000000), r25.w
          if_nz r26.w
            sqrt r26.w, r20.w
            mul r27.w, r34.x, r34.x
            div r20.w, r27.w, r20.w
            min r20.w, r20.w, l(1.000000)
            mad_sat r41.xy, r26.wwww, r33.xzxx, r33.ywyy
            mul r41.zw, r41.xxxy, r41.xxxy
            mad r41.xy, r41.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
            mul r41.xy, r41.xyxx, r41.zwzz
            mul r20.w, r20.w, r41.x
            mul r20.w, r41.y, r20.w
            lt r26.w, l(0.000000), r20.w
            if_nz r26.w
              ubfe r26.w, l(3), l(27), r32.w
              ine r26.w, r26.w, l(1)
              if_nz r26.w
                mad r26.w, |r24.w|, l(-0.200000), l(0.400000)
                mad r41.xyz, r8.xyzx, r26.wwww, v6.xyzx
                add r41.xyz, -r35.xyzx, r41.xyzx
                max r26.w, |r41.z|, |r41.y|
                max r26.w, r26.w, |r41.x|
                div r26.w, r36.x, r26.w
                add r26.w, r36.y, r26.w
                dp3 r27.w, r41.xyzx, r41.xyzx
                rsq r27.w, r27.w
                max r26.w, r26.w, l(0.00006104)
                and r28.w, r32.w, l(0x0000ffff)
                utof r42.w, r28.w
                mov r28.w, l(0)
                mov r29.w, l(0)
                loop 
                  ige r30.w, r29.w, l(8)
                  breakc_nz r30.w
                  dp2 r43.y, icb[r29.w + 0].yxyy, r15.xyxx
                  dp2 r43.z, icb[r29.w + 0].yxyy, r15.yzyy
                  mul r43.yz, r34.yyyy, r43.yyzy
                  mul r43.x, r11.x, r43.y
                  mul r43.w, r4.x, r43.y
                  mad r42.xyz, r41.xyzx, r27.wwww, r43.xzwx
                  sample_c_lz_indexable(texturecubearray)(float,float,float,float) r30.w, r42.xyzw, t10.xxxx, s13, r26.w
                  mad r28.w, r30.w, l(0.125000), r28.w
                  iadd r29.w, r29.w, l(1)
                endloop 
              else 
                mov r28.w, l(1.000000)
              endif 
              mul r20.w, r20.w, r28.w
              lt r26.w, l(0.000000), r20.w
              if_nz r26.w
                mul r26.w, r0.y, r32.x
                mul r26.w, r26.w, l(0.250000)
                dp3 r27.w, r38.xyzx, r12.xyzx
                dp3 r29.w, r12.xyzx, r40.xyzx
                mad r30.w, -r27.w, r27.w, r37.x
                mad r13.w, r27.w, r29.w, -r13.w
                div_sat r13.w, r13.w, r30.w
                div r27.w, r30.w, r37.x
                mul r27.w, r27.w, l(10.000000)
                min r27.w, r27.w, l(1.000000)
                add r13.w, -r14.w, r13.w
                mad r13.w, r27.w, r13.w, r14.w
                mad r38.xyz, r13.wwww, r38.xyzx, r39.xyzx
                movc r38.xyz, r12.wwww, r38.xyzx, r31.yzwy
                add r38.xyz, r38.xyzx, -v6.xyzx
                dp3 r12.w, r38.xyzx, r38.xyzx
                rsq r12.w, r12.w
                mul r39.xyz, r12.wwww, r38.xyzx
                ubfe r13.w, l(4), l(16), r32.w
                ult r14.w, l(0), r13.w
                and r14.w, r0.x, r14.w
                if_nz r14.w
                  iadd r13.w, r13.w, cb2[0].x
                  iadd r13.w, r13.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.w, r13.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r13.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r13.w, l(116), t12.xyzw
                  mad r27.w, |r24.w|, l(-0.200000), l(0.400000)
                  mad r18.xyz, r8.xyzx, r27.wwww, v6.xyzx
                  dp4 r27.w, r40.xyzw, r18.xyzw
                  dp4 r29.w, r41.xyzw, r18.xyzw
                  lt r30.w, r29.w, r27.w
                  if_z r30.w
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r13.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r13.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r13.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r13.w, l(148), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xy, r13.w, l(164), t12.xyxx
                    dp4 r40.x, r40.xyzw, r18.xyzw
                    dp4 r40.y, r41.xyzw, r18.xyzw
                    div r18.xy, r40.xyxx, r29.wwww
                    mad r18.xy, r18.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r18.xy, r43.zwzz, r18.xyxx
                    mul r18.xy, r43.xyxx, r18.xyxx
                    div r40.xy, r14.wwww, r42.xzxx
                    add r40.zw, -r40.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                    ge r40.zw, r18.xxxy, r40.zzzw
                    ge r40.xy, r40.xyxx, r18.xyxx
                    or r40.xy, r40.xyxx, r40.zwzz
                    or r18.z, r40.y, r40.x
                    mov_sat r18.xy, r18.xyxx
                    mad r40.xy, r18.xyxx, r42.xzxx, r42.ywyy
                    mul r18.x, r29.w, r44.y
                    mad r18.y, r44.x, r29.w, r27.w
                    div r18.x, r18.y, r18.x
                  else 
                    mov r18.z, l(-1)
                  endif 
                  or r18.y, r30.w, r18.z
                  if_z r18.y
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.w, r13.w, l(28), t12.xxxx
                    max r18.x, r18.x, l(0.00006104)
                    and r13.w, r13.w, l(0x0000ffff)
                    if_nz r9.z
                      utof r41.z, r13.w
                      mov r18.yz, l(0,0,0,0)
                      loop 
                        ige r27.w, r18.z, l(8)
                        breakc_nz r27.w
                        dp2 r42.x, icb[r18.z + 0].yxyy, r15.xwxx
                        dp2 r42.y, icb[r18.z + 0].xyxx, r5.xyxx
                        mad r41.xy, r42.xyxx, r14.wwww, r40.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r27.w, r41.xyzx, t9.xxxx, s13, r18.x
                        mad r18.y, r27.w, l(0.125000), r18.y
                        iadd r18.z, r18.z, l(1)
                      endloop 
                    else 
                      utof r40.z, r13.w
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r18.y, r40.xyzx, t9.xxxx, s13, r18.x
                    endif 
                    mul r13.w, r18.y, r18.y
                    mul r13.w, r18.y, r13.w
                  else 
                    mov r13.w, l(1.000000)
                  endif 
                  mul r20.w, r13.w, r20.w
                else 
                  ubfe r13.w, l(4), l(20), r32.w
                  ult r14.w, l(0), r13.w
                  and r14.w, r0.z, r14.w
                  if_nz r14.w
                    iadd r13.w, r13.w, cb2[0].x
                    iadd r13.w, r13.w, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.w, r13.w, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r13.w, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r13.w, l(116), t12.xyzw
                    mad r18.x, |r24.w|, l(-0.200000), l(0.400000)
                    mad r19.xyz, r8.xyzx, r18.xxxx, v6.xyzx
                    dp4 r18.x, r40.xyzw, r19.xyzw
                    dp4 r18.z, r41.xyzw, r19.xyzw
                    lt r27.w, r18.z, r18.x
                    if_z r27.w
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r13.w, l(68), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r13.w, l(84), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r13.w, l(132), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r13.w, l(148), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xy, r13.w, l(164), t12.xyxx
                      dp4 r40.x, r40.xyzw, r19.xyzw
                      dp4 r40.y, r41.xyzw, r19.xyzw
                      div r19.xy, r40.xyxx, r18.zzzz
                      mad r19.xy, r19.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                      add r19.xy, r43.zwzz, r19.xyxx
                      mul r19.xy, r43.xyxx, r19.xyxx
                      div r40.xy, r14.wwww, r42.xzxx
                      add r40.zw, -r40.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                      ge r40.zw, r19.xxxy, r40.zzzw
                      ge r40.xy, r40.xyxx, r19.xyxx
                      or r40.xy, r40.xyxx, r40.zwzz
                      or r19.z, r40.y, r40.x
                      mov_sat r19.xy, r19.xyxx
                      mad r40.xy, r19.xyxx, r42.xzxx, r42.ywyy
                      mul r19.x, r18.z, r44.y
                      mad r18.x, r44.x, r18.z, r18.x
                      div r18.x, r18.x, r19.x
                    else 
                      mov r19.z, l(-1)
                    endif 
                    or r18.z, r27.w, r19.z
                    if_z r18.z
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.w, r13.w, l(28), t12.xxxx
                      max r18.x, r18.x, l(0.00006104)
                      and r13.w, r13.w, l(0x0000ffff)
                      if_nz r9.z
                        utof r19.z, r13.w
                        mov r18.z, l(0)
                        mov r27.w, l(0)
                        loop 
                          ige r29.w, r27.w, l(8)
                          breakc_nz r29.w
                          dp2 r41.x, icb[r27.w + 0].xyxx, r6.xyxx
                          dp2 r41.y, icb[r27.w + 0].yxyy, r6.xzxx
                          mad r19.xy, r41.xyxx, r14.wwww, r40.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.x, r19.xyzx, t9.xxxx, s13, r18.x
                          mad r18.z, r19.x, l(0.125000), r18.z
                          iadd r27.w, r27.w, l(1)
                        endloop 
                      else 
                        utof r40.z, r13.w
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r18.z, r40.xyzx, t9.xxxx, s13, r18.x
                      endif 
                      mul r13.w, r18.z, r18.z
                      mul r13.w, r18.z, r13.w
                    else 
                      mov r13.w, l(1.000000)
                    endif 
                    mul r20.w, r13.w, r20.w
                  endif 
                endif 
                mad r13.w, -r25.w, r5.w, l(1.000000)
                mul r13.w, r13.w, r13.w
                mad r13.w, -r13.w, l(0.620000), l(0.620000)
                add r13.w, -r25.w, r13.w
                mad r13.w, r1.w, r13.w, r25.w
                mul r13.w, r20.w, r13.w
                mov r32.x, r31.x
                lt r14.w, l(0.000000), r24.w
                mad r19.xyz, r13.wwww, r32.xyzx, r16.xyzx
                dp3_sat r13.w, r8.xyzx, r39.xyzx
                mad r38.xyz, r38.xyzx, r12.wwww, r10.xyzx
                dp3 r12.w, r38.xyzx, r38.xyzx
                rsq r12.w, r12.w
                mul r38.xyz, r12.wwww, r38.xyzx
                dp3 r12.w, r38.xyzx, r10.xyzx
                dp3 r18.x, r8.xyzx, r38.xyzx
                mad r24.w, |r18.x|, r0.y, -|r18.x|
                mad r18.x, |r18.x|, r24.w, l(1.000000)
                mad r24.w, r13.w, r2.x, r5.z
                mul r18.x, r18.x, r18.x
                mul r18.x, r24.w, r18.x
                rcp r18.x, r18.x
                mul r13.w, r26.w, r13.w
                mul r13.w, r13.w, r18.x
                mul r13.w, r20.w, r13.w
                mad r38.xyz, r13.wwww, r32.xyzx, r30.xyzx
                add_sat r12.w, -r12.w, l(1.000000)
                mul r18.x, r12.w, r12.w
                mul r18.x, r18.x, r18.x
                mul r12.w, r12.w, r18.x
                mul r12.w, r12.w, r13.w
                mad r39.xyz, r12.wwww, r32.xyzx, r29.xyzx
                movc r16.xyz, r14.wwww, r19.xyzx, r16.xyzx
                movc r29.xyz, r14.wwww, r39.xyzx, r29.xyzx
                movc r30.xyz, r14.wwww, r38.xyzx, r30.xyzx
              endif 
            endif 
          endif 
          break 
          case l(2)
          mov r19.xy, r34.zwzz
          mov r19.z, r35.w
          add r19.xyz, r19.xyzx, -v6.xyzx
          dp3 r12.w, r19.xyzx, r19.xyzx
          rsq r12.w, r12.w
          mul r38.xyz, r12.wwww, r19.xyzx
          dp3 r13.w, r8.xyzx, r38.xyzx
          mov_sat r14.w, r13.w
          lt r18.x, l(0.000000), r14.w
          if_nz r18.x
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r10.w, l(112), t12.yzwx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r10.w, l(128), t12.zxyw
            mov r40.xyz, r38.xyzx
            mov r40.w, r39.y
            dp4 r18.x, r40.xyzw, r17.xyzw
            lt r20.w, r18.x, l(1.000000)
            if_nz r20.w
              mov r41.xyz, l(1.000000,1.000000,1.000000,0)
              mov r20.w, l(0)
            else 
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r10.w, l(172), t12.yzwx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r10.w, l(188), t12.wxyz
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r10.w, l(204), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r24.w, r10.w, l(236), t12.xxxx
              add r45.xyz, r31.yzwy, -v6.xyzx
              mul r25.w, r34.x, r34.x
              dp3 r26.w, r45.xyzx, r45.xyzx
              div r25.w, r25.w, r26.w
              min r25.w, r25.w, l(1.000000)
              mad_sat r33.xy, r18.xxxx, r33.xzxx, r33.ywyy
              mul r33.zw, r33.xxxy, r33.xxxy
              mad r33.xy, r33.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
              mul r33.xy, r33.xyxx, r33.zwzz
              mul r25.w, r25.w, r33.x
              mul r25.w, r33.y, r25.w
              mov r35.w, r36.x
              dp4 r33.x, r35.xyzw, r17.xyzw
              mov r45.xyz, r36.yzwy
              mov r45.w, r37.w
              dp4 r33.y, r45.xyzw, r17.xyzw
              div r20.xy, r33.xyxx, r18.xxxx
              lt r18.x, r42.w, l(0.00048828)
              if_nz r18.x
                mov r43.y, r44.x
                mad_sat r33.xy, |r20.xyxx|, r43.zwzz, r43.xyxx
                mul r33.zw, r33.xxxy, r33.xxxy
                mad r33.xy, r33.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
                mul r33.xy, r33.xyxx, r33.zwzz
                mul r18.x, r33.y, r33.x
              else 
                mov r42.w, r43.y
                mul_sat r33.xyzw, |r20.yyxx|, r42.xyzw
                log r33.xyzw, r33.xyzw
                mul r33.xyzw, r33.xyzw, r43.xxxx
                exp r33.xyzw, r33.xyzw
                add r33.xy, r33.zwzz, r33.xyxx
                log r33.xy, r33.xyxx
                mul r33.xy, r33.xyxx, r44.xxxx
                exp r33.xy, r33.xyxx
                mul r26.w, r33.x, r43.z
                mad r27.w, r43.w, r33.y, l(-1.000000)
                mad r26.w, r43.w, r33.y, -r26.w
                div_sat r26.w, r27.w, r26.w
                mul r27.w, r26.w, r26.w
                mad r26.w, r26.w, l(-2.000000), l(3.000000)
                mul r18.x, r26.w, r27.w
              endif 
              mul r20.w, r18.x, r25.w
              and r18.x, r24.w, l(255)
              if_nz r18.x
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyz, r10.w, l(220), t12.xyzx
                dp3 r24.w, r44.yzwy, r20.xyzx
                dp3 r20.x, r33.xyzx, r20.xyzx
                frc r33.x, r24.w
                frc r33.y, r20.x
                iadd r18.x, r18.x, l(-1)
                utof r33.z, r18.x
                sample_l_indexable(texture2darray)(float,float,float,float) r41.xyz, r33.xyzx, t20.xyzw, s2, l(0.000000)
              else 
                mov r41.xyz, l(1.000000,1.000000,1.000000,0)
              endif 
            endif 
            mov r31.yz, r32.yyzy
            mul r31.xyz, r41.xyzx, r31.xyzx
            lt r18.x, l(0.000000), r20.w
            if_nz r18.x
              ubfe r18.x, l(3), l(27), r32.w
              ine r18.x, r18.x, l(1)
              if_nz r18.x
                mad r18.x, |r13.w|, l(-0.200000), l(0.400000)
                mad r21.xyz, r8.xyzx, r18.xxxx, v6.xyzx
                mov r38.xyz, r37.xyzx
                dp4 r18.x, r38.xyzw, r21.xyzw
                dp4 r20.x, r40.xyzw, r21.xyzw
                ge r20.y, r20.x, r18.x
                if_nz r20.y
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.y, r10.w, l(144), t12.xxxx
                  mov r35.w, r36.x
                  dp4 r33.x, r35.xyzw, r21.xyzw
                  mov r37.xyz, r36.yzwy
                  dp4 r33.y, r37.xyzw, r21.xyzw
                  div r21.xy, r33.xyxx, r20.xxxx
                  mad_sat r21.xy, r21.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  mad r21.xy, r21.xyxx, r39.zwzz, r39.xyxx
                  div r10.w, r18.x, r20.x
                  max r10.w, r10.w, l(0.00006104)
                  and r18.x, r32.w, l(0x0000ffff)
                  if_nz r9.z
                    utof r33.z, r18.x
                    mov r20.xy, l(0,0,0,0)
                    loop 
                      ige r24.w, r20.y, l(8)
                      breakc_nz r24.w
                      dp2 r35.x, icb[r20.y + 0].xyxx, r24.xyxx
                      dp2 r35.y, icb[r20.y + 0].yxyy, r24.xzxx
                      mad r33.xy, r35.xyxx, r34.yyyy, r21.xyxx
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.w, r33.xyzx, t9.xxxx, s13, r10.w
                      mad r20.x, r24.w, l(0.125000), r20.x
                      iadd r20.y, r20.y, l(1)
                    endloop 
                  else 
                    utof r21.z, r18.x
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r20.x, r21.xyzx, t9.xxxx, s13, r10.w
                  endif 
                  mul r10.w, r20.x, r20.x
                  mul r10.w, r20.x, r10.w
                else 
                  mov r10.w, l(1.000000)
                endif 
              else 
                mov r10.w, l(1.000000)
              endif 
              mul r10.w, r10.w, r20.w
              lt r18.x, l(0.000000), r10.w
              if_nz r18.x
                mul r18.x, r0.y, r32.x
                mul r18.x, r14.w, r18.x
                ubfe r20.y, l(4), l(16), r32.w
                ult r20.w, l(0), r20.y
                and r20.w, r0.x, r20.w
                if_nz r20.w
                  iadd r20.y, r20.y, cb2[0].x
                  iadd r20.y, r20.y, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r20.w, r20.y, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r20.y, l(68), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r20.y, l(84), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r20.y, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r20.y, l(116), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r20.y, l(132), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r20.y, l(148), t12.xyzw
                  mad r21.x, |r13.w|, l(-0.200000), l(0.400000)
                  mad r22.xyz, r8.xyzx, r21.xxxx, v6.xyzx
                  dp4 r21.x, r33.xyzw, r22.xyzw
                  dp4 r21.y, r34.xyzw, r22.xyzw
                  dp4 r21.z, r35.xyzw, r22.xyzw
                  dp4 r22.x, r36.xyzw, r22.xyzw
                  lt r22.y, r22.x, r21.z
                  div r21.xy, r21.xyxx, r22.xxxx
                  mad r21.xy, r21.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r21.xy, r38.zwzz, r21.xyxx
                  mul r21.xy, r38.xyxx, r21.xyxx
                  div r32.xy, r20.wwww, r37.xzxx
                  add r33.xy, -r32.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                  ge r33.xy, r21.xyxx, r33.xyxx
                  ge r32.xy, r32.xyxx, r21.xyxx
                  or r32.xy, r32.xyxx, r33.xyxx
                  or r22.z, r32.y, r32.x
                  or r22.y, r22.y, r22.z
                  if_z r22.y
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r22.y, r20.y, l(28), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xy, r20.y, l(164), t12.xyxx
                    mov_sat r21.xy, r21.xyxx
                    mad r33.xy, r21.xyxx, r37.xzxx, r37.ywyy
                    mul r20.y, r22.x, r32.y
                    mad r21.x, r32.x, r22.x, r21.z
                    div r20.y, r21.x, r20.y
                    max r20.y, r20.y, l(0.00006104)
                    and r21.x, r22.y, l(0x0000ffff)
                    if_nz r9.z
                      utof r22.z, r21.x
                      mov r21.yz, l(0,0,0,0)
                      loop 
                        ige r24.w, r21.z, l(8)
                        breakc_nz r24.w
                        dp2 r32.x, icb[r21.z + 0].xyxx, r25.xyxx
                        dp2 r32.y, icb[r21.z + 0].yxyy, r25.xzxx
                        mad r22.xy, r32.xyxx, r20.wwww, r33.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.x, r22.xyzx, t9.xxxx, s13, r20.y
                        mad r21.y, r22.x, l(0.125000), r21.y
                        iadd r21.z, r21.z, l(1)
                      endloop 
                    else 
                      utof r33.z, r21.x
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.y, r33.xyzx, t9.xxxx, s13, r20.y
                    endif 
                    mul r20.y, r21.y, r21.y
                    mul r20.y, r21.y, r20.y
                  else 
                    mov r20.y, l(1.000000)
                  endif 
                  mul r10.w, r10.w, r20.y
                else 
                  ubfe r20.y, l(4), l(20), r32.w
                  ult r20.w, l(0), r20.y
                  and r20.w, r0.z, r20.w
                  if_nz r20.w
                    iadd r20.y, r20.y, cb2[0].x
                    iadd r20.y, r20.y, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r20.w, r20.y, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r20.y, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r20.y, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r20.y, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r20.y, l(116), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r20.y, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r20.y, l(148), t12.xyzw
                    mad r21.x, |r13.w|, l(-0.200000), l(0.400000)
                    mad r23.xyz, r8.xyzx, r21.xxxx, v6.xyzx
                    dp4 r22.x, r32.xyzw, r23.xyzw
                    dp4 r22.y, r33.xyzw, r23.xyzw
                    dp4 r21.x, r34.xyzw, r23.xyzw
                    dp4 r21.z, r35.xyzw, r23.xyzw
                    lt r22.z, r21.z, r21.x
                    div r22.xy, r22.xyxx, r21.zzzz
                    mad r22.xy, r22.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r22.xy, r37.zwzz, r22.xyxx
                    mul r22.xy, r37.xyxx, r22.xyxx
                    div r23.xy, r20.wwww, r36.xzxx
                    add r32.xy, -r23.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                    ge r32.xy, r22.xyxx, r32.xyxx
                    ge r23.xy, r23.xyxx, r22.xyxx
                    or r23.xy, r23.xyxx, r32.xyxx
                    or r23.x, r23.y, r23.x
                    or r22.z, r22.z, r23.x
                    if_z r22.z
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r22.z, r20.y, l(28), t12.xxxx
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.xy, r20.y, l(164), t12.xyxx
                      mov_sat r22.xy, r22.xyxx
                      mad r32.xy, r22.xyxx, r36.xzxx, r36.ywyy
                      mul r20.y, r21.z, r23.y
                      mad r21.x, r23.x, r21.z, r21.x
                      div r20.y, r21.x, r20.y
                      max r20.y, r20.y, l(0.00006104)
                      and r21.x, r22.z, l(0x0000ffff)
                      if_nz r9.z
                        utof r22.z, r21.x
                        mov r21.z, l(0)
                        mov r23.x, l(0)
                        loop 
                          ige r23.y, r23.x, l(8)
                          breakc_nz r23.y
                          dp2 r33.x, icb[r23.x + 0].xyxx, r26.xyxx
                          dp2 r33.y, icb[r23.x + 0].yxyy, r26.xzxx
                          mad r22.xy, r33.xyxx, r20.wwww, r32.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.x, r22.xyzx, t9.xxxx, s13, r20.y
                          mad r21.z, r22.x, l(0.125000), r21.z
                          iadd r23.x, r23.x, l(1)
                        endloop 
                      else 
                        utof r32.z, r21.x
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.z, r32.xyzx, t9.xxxx, s13, r20.y
                      endif 
                      mul r20.y, r21.z, r21.z
                      mul r20.y, r21.z, r20.y
                    else 
                      mov r20.y, l(1.000000)
                    endif 
                    mul r10.w, r10.w, r20.y
                  endif 
                endif 
                mad r20.y, -r14.w, r5.w, l(1.000000)
                mul r20.y, r20.y, r20.y
                mad r20.y, -r20.y, l(0.620000), l(0.620000)
                add r20.y, -r14.w, r20.y
                mad r20.y, r1.w, r20.y, r14.w
                mul r20.y, r10.w, r20.y
                lt r13.w, l(0.000000), r13.w
                mad r22.xyz, r20.yyyy, r31.xyzx, r16.xyzx
                mad r19.xyz, r19.xyzx, r12.wwww, r10.xyzx
                dp3 r12.w, r19.xyzx, r19.xyzx
                rsq r12.w, r12.w
                mul r19.xyz, r12.wwww, r19.xyzx
                dp3 r12.w, r19.xyzx, r10.xyzx
                dp3 r19.x, r8.xyzx, r19.xyzx
                mad r19.y, |r19.x|, r0.y, -|r19.x|
                mad r19.x, |r19.x|, r19.y, l(1.000000)
                mad r14.w, r14.w, r2.x, r5.z
                mul r19.x, r19.x, r19.x
                mul r14.w, r14.w, r19.x
                rcp r14.w, r14.w
                mul r14.w, r18.x, r14.w
                mul r10.w, r10.w, r14.w
                mul r10.w, r10.w, l(0.250000)
                mad r19.xyz, r10.wwww, r31.xyzx, r30.xyzx
                add_sat r12.w, -r12.w, l(1.000000)
                mul r14.w, r12.w, r12.w
                mul r14.w, r14.w, r14.w
                mul r12.w, r12.w, r14.w
                mul r10.w, r10.w, r12.w
                mad r23.xyz, r10.wwww, r31.xyzx, r29.xyzx
                movc r16.xyz, r13.wwww, r22.xyzx, r16.xyzx
                movc r29.xyz, r13.wwww, r23.xyzx, r29.xyzx
                movc r30.xyz, r13.wwww, r19.xyzx, r30.xyzx
              endif 
            endif 
          endif 
          break 
          default 
          break 
        endswitch 
      endif 
    endif 
  endloop 
  mov r11.yzw, r16.xxyz
  mov r27.xyz, r29.xyzx
  mov r28.xyz, r30.xyzx
  iadd r7.w, r7.w, l(32)
endloop 
add r0.xyz, -r2.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r0.xyz, r0.xyzx, r27.xyzx
mad r0.xyz, r28.xyzx, r2.yzwy, r0.xyzx
mad r0.xyz, r11.yzwy, r1.xyzx, r0.xyzx
dp3 r1.x, r0.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
max r1.x, r1.x, l(0.000100)
max r1.w, r1.x, cb1[85].x
mul r1.xyz, r1.wwww, r3.xyzx
mov r3.w, l(1.000000)
movc r1.xyzw, cb0[13].xxxx, r1.xyzw, r3.xyzw
add r0.xyz, r0.xyzx, r1.xyzx
mul r1.w, r1.w, cb0[11].w
max r1.w, r1.w, l(1.000000)
div r1.xyz, r1.xyzx, r1.wwww
dp3_sat r1.x, r1.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
add o0.w, r0.w, r1.x
lt r0.w, l(0.000000), cb2[9].z
if_nz r0.w
  dp3 r0.w, v6.xyzx, v6.xyzx
  rsq r1.x, r0.w
  mul r1.xyz, r1.xxxx, v6.xyzx
  sqrt r0.w, r0.w
  lt r1.w, l(0.000000), cb2[13].w
  if_nz r1.w
    mad r2.xy, r0.wwww, cb2[15].xyxx, cb2[14].zwzz
    mul r2.xy, r2.xyxx, cb2[16].xyxx
    lt r1.w, l(0.010000), |v6.z|
    mul r2.zw, v6.zzzz, cb2[15].zzzw
    mul r3.xy, r2.zwzz, l(-1.442695, -1.442695, 0.000000, 0.000000)
    exp r3.xy, r3.xyxx
    add r3.xy, -r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    div r2.zw, r3.xxxy, r2.zzzw
    mul r2.zw, r2.zzzw, r2.xxxy
    movc r2.xy, r1.wwww, r2.zwzz, r2.xyxx
    mul r2.xzw, r2.xxxx, cb2[12].xxyz
    exp r2.xzw, r2.xxzw
    mul r3.xyz, r2.yyyy, cb2[12].xyzx
    exp r3.xyz, r3.xyzx
    add r3.xyz, -r2.xzwx, r3.xyzx
    mad r2.xyz, cb2[13].wwww, r3.xyzx, r2.xzwx
  else 
    mad r1.w, r0.w, cb2[15].x, cb2[14].z
    mul r1.w, r1.w, cb2[16].x
    lt r2.w, l(0.010000), |v6.z|
    mul r3.x, v6.z, cb2[15].z
    mul r3.y, r3.x, l(-1.442695)
    exp r3.y, r3.y
    add r3.y, -r3.y, l(1.000000)
    div r3.x, r3.y, r3.x
    mul r3.x, r1.w, r3.x
    movc r1.w, r2.w, r3.x, r1.w
    mul r3.xyz, r1.wwww, cb2[12].xyzx
    exp r2.xyz, r3.xyzx
  endif 
  mad r2.xyz, r2.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r2.xyz, r2.xyzx, -cb2[9].zzzz
  dp3 r1.x, cb2[7].yzwy, -r1.xyzx
  mad r1.y, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r1.z, cb2[8].w, -r1.x, l(1.000000)
  mul r1.z, r1.z, r1.z
  mul r1.z, r1.z, l(12.566371)
  div r1.y, r1.y, r1.z
  add r0.w, r0.w, -cb2[10].w
  mul_sat r0.w, r0.w, cb2[11].w
  mul r0.w, r0.w, r1.y
  mov_sat r1.x, r1.x
  mad r1.x, r1.x, r1.x, l(1.000000)
  mad r1.x, r1.x, l(0.05968310), l(-1.000000)
  mad r1.x, cb2[8].z, r1.x, l(1.000000)
  mul r1.yzw, r0.wwww, cb2[11].xxyz
  mad r1.xyz, r1.xxxx, cb2[10].xyzx, r1.yzwy
  mul r1.xyz, r1.xyzx, cb2[9].wwww
  add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r1.xyz, r1.xyzx, r3.xyzx
  mad r1.xyz, r0.xyzx, r2.xyzx, r1.xyzx
else 
  mul r0.w, v6.z, cb2[6].x
  mad r1.w, cb2[6].x, v6.z, cb2[5].x
  lt r2.x, |r0.w|, l(0.000100)
  min r2.y, r1.w, l(64.000000)
  mul r2.y, r2.y, l(1.442695)
  exp r2.y, r2.y
  mov_sat r2.z, cb2[6].z
  lt r2.w, r1.w, l(0.000000)
  add r1.w, r1.w, l(1.000000)
  movc r1.w, r2.w, r2.y, r1.w
  add r1.w, r1.w, -cb2[6].z
  movc r0.w, r2.x, l(1.000000), r0.w
  div r0.w, r1.w, r0.w
  movc r0.w, r2.x, r2.z, r0.w
  mul r0.w, r0.w, cb2[5].z
  dp3 r1.w, v6.xyzx, v6.xyzx
  sqrt r2.x, r1.w
  mad r0.w, r0.w, r2.x, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  rsq r1.w, r1.w
  mul r2.xyz, r1.wwww, v6.xyzx
  dp3 r1.w, cb2[7].yzwy, r2.xyzx
  mad_sat r1.w, cb2[8].y, r1.w, cb2[8].x
  add r2.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r2.xyzw, r1.wwww, r2.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r2.w
  add r2.xyz, -r0.xyzx, r2.xyzx
  mad r1.xyz, r0.wwww, r2.xyzx, r0.xyzx
endif 
mul r0.xyz, r1.xyzx, cb1[85].yyyy
ge r1.xyz, r0.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.xyz, r0.xyzx, r1.xyzx
min o0.xyz, r0.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
ret 
// Approximately 2941 instruction slots used
