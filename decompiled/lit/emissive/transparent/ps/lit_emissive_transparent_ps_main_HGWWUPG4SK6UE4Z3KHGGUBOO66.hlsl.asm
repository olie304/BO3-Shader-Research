//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:34:18 2021
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float3 colorTint;                  // Offset:  160 Size:    12
//   float baseNormalHeight;            // Offset:  172 Size:     4
//   float2 glossRange;                 // Offset:  176 Size:     8
//   uint zFeatherComputeSprites;       // Offset:  184 Size:     4 [unused]
//   float hdrScale;                    // Offset:  188 Size:     4
//   float emissiveFalloffPower;        // Offset:  192 Size:     4
//   float3 emissiveTint1;              // Offset:  196 Size:    12
//   bool relativeHDR;                  // Offset:  208 Size:     4
//   bool invertFalloff;                // Offset:  212 Size:     4
//   float layerDepth;                  // Offset:  216 Size:     4
//   float uvMotionToggle1;             // Offset:  220 Size:     4 [unused]
//      = 0x00000000 
//   float2 scriptControl;              // Offset:  224 Size:     8 [unused]
//   float3 tint1;                      // Offset:  240 Size:    12
//   float3 tint2;                      // Offset:  256 Size:    12
//   float3 tint3;                      // Offset:  272 Size:    12
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16 [unused]
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4 [unused]
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4
//   uint numDynamicDecals;             // Offset:  924 Size:     4
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for shaderConstantSetBuffer
// {
//
//   struct GpuShaderConstantSet
//   {
//       
//       float4 scriptVector0;          // Offset:    0
//       float4 scriptVector1;          // Offset:   16
//       float4 scriptVector2;          // Offset:   32
//       float4 scriptVector3;          // Offset:   48
//       float4 scriptVector4;          // Offset:   64
//       float4 scriptVector5;          // Offset:   80
//       float4 scriptVector6;          // Offset:   96
//       float4 scriptVector7;          // Offset:  112
//       float4 weaponParam0;           // Offset:  128
//       float4 weaponParam1;           // Offset:  144
//       float4 weaponParam2;           // Offset:  160
//       float4 weaponParam3;           // Offset:  176
//       float4 weaponParam4;           // Offset:  192
//       float4 weaponParam5;           // Offset:  208
//       float4 weaponParam6;           // Offset:  224
//       float4 weaponParam7;           // Offset:  240
//       float4 characterParam0;        // Offset:  256
//       float4 characterParam1;        // Offset:  272
//       float4 characterParam2;        // Offset:  288
//       float4 characterParam3;        // Offset:  304
//       float4 characterParam4;        // Offset:  320
//       float4 characterParam5;        // Offset:  336
//       float4 characterParam6;        // Offset:  352
//       float4 characterParam7;        // Offset:  368
//
//   } $Element;                        // Offset:    0 Size:   384
//
// }
//
// Resource bind info for modelInstanceBuffer
// {
//
//   struct ModelInstanceData
//   {
//       
//       uint boneArrayIndex;           // Offset:    0
//       uint shaderConstantSet;        // Offset:    4
//       uint flagsAndPrevFrameIndex;   // Offset:    8
//       uint worldMatrix;              // Offset:   12
//       uint siegeAnimStateOffset;     // Offset:   16
//       uint prevFrameSiegeAnimStateOffset;// Offset:   20
//
//   } $Element;                        // Offset:    0 Size:    24
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for forwardDecalConstants
// {
//
//   struct CoreDecalConstantsPack
//   {
//       
//       uint4 data[8];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   128
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// colorSampler                      sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// specColorSampler                  sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// normalSampler                     sampler      NA          NA             s5      1 
// aoSampler                         sampler      NA          NA             s6      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// shaderConstantSetBuffer           texture  struct         r/o             t0      1 
// modelInstanceBuffer               texture  struct         r/o             t4      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// colorMap                          texture  float4          2d            t21      1 
// normalMap                         texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// glossMap                          texture  float4          2d            t24      1 
// aoMap                             texture  float4          2d            t25      1 
// emissiveMap                       texture  float4          2d            t26      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// visibleDecals                     texture    uint     2darray            t35      1 
// forwardDecalConstants             texture  struct         r/o            t36      1 
// materialTexBC7                    texture  float4     2darray            t42      1 
// materialTexBC3                    texture  float4     2darray            t43      1 
// materialTexBC7linear              texture  float4     2darray            t44      1 
// materialTexMask                   texture  float4     2darray            t45      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyz 
// COLOR                    1   x           1     NONE   float   x   
// TEXCOORD                 0    yz         1     NONE   float    yz 
// TEXCOORD                 4   x           2     NONE    uint   x   
// TEXCOORD                 1   xyz         3     NONE   float   xyz 
// TEXCOORD                 2   xyz         4     NONE   float   xyz 
// TEXCOORD                 3   xyz         5     NONE   float   xyz 
// OFFPOSITION              0   xyz         6     NONE   float   xyz 
// SV_IsFrontFace           0   x           7    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[18], immediateIndexed
dcl_constantbuffer CB1[93], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_structured t0, 384
dcl_resource_structured t4, 24
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2d (float,float,float,float) t26
dcl_resource_texture2darray (float,float,float,float) t31
dcl_resource_texture2darray (uint,uint,uint,uint) t35
dcl_resource_structured t36, 128
dcl_resource_texture2darray (float,float,float,float) t42
dcl_resource_texture2darray (float,float,float,float) t43
dcl_resource_texture2darray (float,float,float,float) t44
dcl_resource_texture2darray (float,float,float,float) t45
dcl_input_ps_siv linear noperspective v0.xyz, position
dcl_input_ps linear v1.x
dcl_input_ps linear v1.yz
dcl_input_ps constant v2.x
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps_sgv constant v7.x, is_front_face
dcl_output o0.xyzw
dcl_temps 47
ld_structured_indexable(structured_buffer, stride=24)(mixed,mixed,mixed,mixed) r0.xy, v2.x, l(4), t4.xyxx
ld_structured_indexable(structured_buffer, stride=384)(mixed,mixed,mixed,mixed) r0.xz, r0.x, l(36), t0.xxyx
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.yzyy, t21.xyzw, s1
add r2.xyz, cb0[10].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r2.xyz, r1.wwww, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r1.xyz, r1.xyzx, r2.xyzx
mul r0.w, r1.w, v1.x
sample_indexable(texture2d)(float,float,float,float) r1.w, v1.yzyy, t25.yzwx, s6
sample_indexable(texture2d)(float,float,float,float) r2.x, v1.yzyy, t24.xyzw, s3
add r2.y, -cb0[11].x, cb0[11].y
mad r2.x, r2.x, r2.y, cb0[11].x
mul_sat r2.x, r2.x, l(0.05882353)
sample_indexable(texture2d)(float,float,float,float) r2.yzw, v1.yzyy, t22.wxyz, s5
add r2.yzw, r2.yyzw, l(0.000000, -0.500000, -0.500000, -0.000000)
mad r2.yzw, cb0[10].wwww, r2.yyzw, l(0.000000, 0.500000, 0.500000, 0.000000)
mad r2.yz, r2.yyzy, l(0.000000, 1.99218750, 1.99218750, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
dp2 r3.x, r2.yzyy, r2.yzyy
add r3.x, -r3.x, l(1.000000)
max r3.x, r3.x, l(0.000000)
sqrt r3.x, r3.x
mul r2.w, r2.w, r2.w
mul r2.w, r2.w, l(0.33333334)
min r2.w, r2.w, l(1.000000)
movc r3.y, v7.x, l(1.000000), l(-1.000000)
dp3 r3.z, v3.xyzx, v3.xyzx
rsq r3.z, r3.z
mul r4.xyz, r3.zzzz, v3.xyzx
mul r4.xyz, r3.yyyy, r4.xyzx
dp3 r3.z, v4.xyzx, v4.xyzx
rsq r3.z, r3.z
mul r5.xyz, r3.zzzz, v4.xyzx
mul r5.xyz, r3.yyyy, r5.xyzx
dp3 r3.z, v5.xyzx, v5.xyzx
rsq r3.z, r3.z
mul r6.xyz, r3.zzzz, v5.xyzx
mul r6.xyz, r3.yyyy, r6.xyzx
mul r2.x, r2.x, l(-17.000000)
exp r2.x, r2.x
add r2.x, r2.x, r2.w
log r2.x, r2.x
mul r2.x, r2.x, l(-0.05882353)
max r2.x, r2.x, l(0.000000)
mul r7.xyz, r2.zzzz, r6.xyzx
mad r2.yzw, r5.xxyz, r2.yyyy, r7.xxyz
mad r2.yzw, r4.xxyz, r3.xxxx, r2.yyzw
dp3 r3.x, r2.yzwy, r2.yzwy
rsq r3.x, r3.x
mul r2.yzw, r2.yyzw, r3.xxxx
ge r3.x, v0.z, l(0.984375)
mul r3.z, v0.z, l(1.01587307)
mad r3.w, v0.z, l(64.000000), l(-63.000000)
movc r3.x, r3.x, r3.w, r3.z
max r3.x, r3.x, l(0.00000001)
rcp r3.x, r3.x
ftou r3.zw, v0.xxxy
deriv_rtx_coarse r7.xyz, v6.xyzx
deriv_rty_coarse r8.xyz, v6.xyzx
iadd r4.w, cb2[0].y, cb2[0].x
and r9.xy, r0.yyyy, l(0x10000000, 0x20000000, 0, 0)
if_nz r9.x
  add r10.xyz, v6.xyzx, cb1[24].xyzx
  mul r0.y, r3.x, l(0.00781250)
  min r0.y, r0.y, l(15.000000)
  ftou r0.y, r0.y
  ushr r11.xy, r3.zwzz, l(6, 6, 0, 0)
  ishl r11.z, r0.y, l(4)
  and r0.y, cb2[57].z, l(-32)
  iadd r5.w, -r0.y, cb2[57].z
  mov r12.xy, l(0,0,0,0)
  mov r13.w, l(0)
  mov r10.w, l(1.000000)
  mov r14.xyzw, l(0,0,0,0)
  mov r9.xzw, l(0,0,0,0)
  mov r15.yz, l(0,0,0,0)
  mov r16.xy, l(0,0,0,0)
  mov r6.w, l(0)
  loop 
    uge r7.w, r6.w, cb2[57].z
    breakc_nz r7.w
    ushr r12.z, r6.w, l(5)
    iadd r13.xyz, r11.xyzx, r12.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r7.w, r13.xyzw, t35.yzwx
    ieq r8.w, r0.y, r6.w
    ubfe r11.w, r5.w, l(0), r7.w
    movc r7.w, r8.w, r11.w, r7.w
    iadd r8.w, r4.w, r6.w
    mov r17.xyzw, r14.xzwy
    mov r13.xyz, r9.xzwx
    mov r18.yz, r15.yyzy
    mov r19.xy, r16.xyxx
    mov r11.w, r7.w
    loop 
      breakc_z r11.w
      firstbit_lo r12.z, r11.w
      ishl r12.w, l(1), r12.z
      and r15.w, r11.w, r12.w
      if_nz r15.w
        xor r11.w, r11.w, r12.w
        iadd r12.w, r8.w, r12.z
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r20.xyzw, r12.w, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r21.xy, r12.w, l(16), t11.xyxx
        add r20.xyz, r20.xyzx, -v6.xyzx
        mov r21.z, r20.w
        lt r20.xyz, |r20.xyzx|, r21.zxyz
        and r12.w, r20.y, r20.x
        and r12.w, r20.z, r12.w
        if_nz r12.w
          iadd r12.z, r6.w, r12.z
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r20.xyz, r12.z, l(0), t36.xyzx
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r21.xyz, r12.z, l(16), t36.xyzx
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r22.xyz, r12.z, l(32), t36.xyzx
          mov r23.x, r20.x
          mov r23.y, r21.x
          mov r23.z, r22.x
          dp3 r12.w, r23.xyzx, r23.xyzx
          rsq r12.w, r12.w
          mul r24.xyz, r12.wwww, r23.xyzx
          dp3 r12.w, r24.xyzx, v3.xyzx
          ge r12.w, r12.w, l(0.500000)
          if_nz r12.w
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r25.xyw, r12.z, l(48), t36.xyxz
            mov r23.w, r25.x
            dp4 r23.x, r10.xyzw, r23.xyzw
            mov r26.x, r20.y
            mov r26.y, r21.y
            mov r26.z, r22.y
            mov r26.w, r25.y
            dp4 r23.y, r10.xyzw, r26.xyzw
            mov r25.x, r20.z
            mov r25.y, r21.z
            mov r25.z, r22.z
            dp4 r23.z, r10.xyzw, r25.xyzw
            lt r20.xyz, |r23.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
            and r12.w, r20.y, r20.x
            and r12.w, r20.z, r12.w
            if_nz r12.w
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r20.xyzw, r12.z, l(64), t36.xyzw
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r21.xyzw, r12.z, l(80), t36.xyzw
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r22.xyzw, r12.z, l(96), t36.xyzw
              dp3 r27.x, r7.xyzx, r26.xyzx
              dp3 r27.y, r7.xyzx, r25.xyzx
              dp3 r28.x, r8.xyzx, r26.xyzx
              dp3 r28.y, r8.xyzx, r25.xyzx
              mad r23.xy, r23.yzyy, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
              mul r27.xyz, r27.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
              mul r28.xyz, r28.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
              and r23.zw, r21.yyyz, l(0, 0, 0x0000ffff, 0x0000ffff)
              if_nz r23.z
                ubfe r12.w, l(4), l(24), r21.w
                ishl r12.w, l(1), r12.w
                ushr r15.w, r21.w, l(28)
                ishl r15.w, l(1), r15.w
                ieq r16.w, r23.z, l(4)
                if_nz r16.w
                  and r16.w, r21.w, l(4095)
                  ubfe r18.w, l(12), l(12), r21.w
                  and r19.w, r22.w, l(1023)
                  utof r29.xz, r12.wwww
                  utof r29.y, r15.w
                  mad r30.xy, r23.xyxx, r29.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r30.zw, r29.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r30.xy, r30.zwzz, r30.xyxx
                  utof r31.x, r16.w
                  utof r31.y, r18.w
                  add r30.xy, r30.xyxx, r31.xyxx
                  mul r30.xy, r30.xyxx, cb1[83].xyxx
                  utof r30.z, r19.w
                  mul r31.xyz, r27.zyzz, cb1[83].xyxx
                  mul r31.xyz, r29.xyzx, r31.xyzx
                  mul r32.xyz, r28.zyzz, cb1[83].xyxx
                  mul r29.xyz, r29.xyzx, r32.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r29.xyzw, r30.xyzx, t42.xyzw, s4, r31.xyzx, r29.xyzx
                else 
                  ieq r16.w, r23.z, l(1)
                  if_nz r16.w
                    and r16.w, r21.w, l(4095)
                    ubfe r18.w, l(12), l(12), r21.w
                    and r19.w, r22.w, l(1023)
                    utof r30.xz, r12.wwww
                    utof r30.y, r15.w
                    mad r31.xy, r23.xyxx, r30.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r31.zw, r30.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                    min r31.xy, r31.zwzz, r31.xyxx
                    utof r32.x, r16.w
                    utof r32.y, r18.w
                    add r31.xy, r31.xyxx, r32.xyxx
                    mul r31.xy, r31.xyxx, cb1[83].zwzz
                    utof r31.z, r19.w
                    mul r32.xyz, r27.zyzz, cb1[83].zwzz
                    mul r32.xyz, r30.xyzx, r32.xyzx
                    mul r33.xyz, r28.zyzz, cb1[83].zwzz
                    mul r30.xyz, r30.xyzx, r33.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r29.xyzw, r31.xyzx, t43.xyzw, s4, r32.xyzx, r30.xyzx
                  else 
                    mov r29.xyzw, l(1.000000,1.000000,1.000000,1.000000)
                  endif 
                endif 
                mul r20.xyz, r20.xyzx, r29.xyzx
                mul r12.w, r20.w, r29.w
              else 
                mov r20.xyz, l(0,0,0,0)
                mov r12.w, l(0)
              endif 
              ne r15.w, r21.x, l(1.000000)
              add r16.w, r20.w, r12.w
              mad_sat r16.w, r16.w, r21.x, -r21.x
              movc r12.w, r15.w, r16.w, r12.w
              if_nz r23.w
                ubfe r15.w, l(4), l(24), r22.y
                ishl r15.w, l(1), r15.w
                ushr r16.w, r22.y, l(28)
                ishl r16.w, l(1), r16.w
                ieq r18.w, r23.w, l(2)
                if_nz r18.w
                  and r18.w, r22.y, l(4095)
                  ubfe r21.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r22.yyyw
                  utof r29.xz, r15.wwww
                  utof r29.y, r16.w
                  mad r30.xy, r23.xyxx, r29.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r30.zw, r29.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r30.xy, r30.zwzz, r30.xyxx
                  utof r31.x, r18.w
                  utof r31.y, r21.x
                  add r30.xy, r30.xyxx, r31.xyxx
                  mul r30.xy, r30.xyxx, cb1[84].xyxx
                  utof r30.z, r21.w
                  mul r31.xyz, r27.zyzz, cb1[84].xyxx
                  mul r31.xyz, r29.xyzx, r31.xyzx
                  mul r32.xyz, r28.zyzz, cb1[84].xyxx
                  mul r29.xyz, r29.xyzx, r32.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r18.w, r30.xyzx, t45.yzwx, s4, r31.xyzx, r29.xyzx
                else 
                  ieq r19.w, r23.w, l(4)
                  if_nz r19.w
                    and r19.w, r22.y, l(4095)
                    ubfe r21.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r22.yyyw
                    utof r29.xz, r15.wwww
                    utof r29.y, r16.w
                    mad r23.zw, r23.xxxy, r29.zzzy, l(0.000000, 0.000000, 0.500000, 0.500000)
                    add r30.xy, r29.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                    min r23.zw, r23.zzzw, r30.xxxy
                    utof r30.x, r19.w
                    utof r30.yz, r21.xxwx
                    add r23.zw, r23.zzzw, r30.xxxy
                    mul r30.xy, r23.zwzz, cb1[83].xyxx
                    mul r31.xyz, r27.zyzz, cb1[83].xyxx
                    mul r31.xyz, r29.xyzx, r31.xyzx
                    mul r32.xyz, r28.zyzz, cb1[83].xyxx
                    mul r29.xyz, r29.xyzx, r32.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r18.w, r30.xyzx, t42.yzwx, s4, r31.xyzx, r29.xyzx
                  else 
                    and r19.w, r22.y, l(4095)
                    ubfe r21.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r22.yyyw
                    utof r29.xz, r15.wwww
                    utof r29.y, r16.w
                    mad r23.zw, r23.xxxy, r29.zzzy, l(0.000000, 0.000000, 0.500000, 0.500000)
                    add r30.xy, r29.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                    min r23.zw, r23.zzzw, r30.xxxy
                    utof r30.x, r19.w
                    utof r30.yz, r21.xxwx
                    add r23.zw, r23.zzzw, r30.xxxy
                    mul r30.xy, r23.zwzz, cb1[83].zwzz
                    mul r31.xyz, r27.zyzz, cb1[83].zwzz
                    mul r31.xyz, r29.xyzx, r31.xyzx
                    mul r32.xyz, r28.zyzz, cb1[83].zwzz
                    mul r29.xyz, r29.xyzx, r32.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r18.w, r30.xyzx, t43.yzwx, s4, r31.xyzx, r29.xyzx
                  endif 
                endif 
                mad r29.xyz, r18.wwww, l(0.960000, 0.960000, 0.960000, 0.000000), l(0.040000, 0.040000, 0.040000, 0.000000)
                add_sat r15.w, -r18.w, l(1.000000)
                mul r20.xyz, r15.wwww, r20.xyzx
              else 
                mov r29.xyz, l(0.040000,0.040000,0.040000,0)
              endif 
              ushr r21.xy, r21.zyzz, l(16, 16, 0, 0)
              if_nz r21.x
                ieq r15.w, r21.x, l(2)
                if_nz r15.w
                  ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r12.z, r12.z, l(112), t36.xxxx
                  ubfe r21.zw, l(0, 0, 4, 12), l(0, 0, 24, 12), r22.zzzz
                  ishl r15.w, l(1), r21.z
                  ushr r16.w, r22.z, l(28)
                  ishl r16.w, l(1), r16.w
                  and r18.w, r22.z, l(4095)
                  and r12.z, r12.z, l(1023)
                  utof r30.xz, r15.wwww
                  utof r30.y, r16.w
                  mad r22.yz, r23.xxyx, r30.zzyz, l(0.000000, 0.500000, 0.500000, 0.000000)
                  add r23.zw, r30.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r22.yz, r22.yyzy, r23.zzwz
                  utof r31.x, r18.w
                  utof r31.y, r21.w
                  add r21.zw, r22.yyyz, r31.xxxy
                  mul r31.xy, r21.zwzz, cb1[84].xyxx
                  utof r31.z, r12.z
                  mul r32.xyz, r27.zyzz, cb1[84].xyxx
                  mul r32.xyz, r30.xyzx, r32.xyzx
                  mul r33.xyz, r28.zyzz, cb1[84].xyxx
                  mul r30.xyz, r30.xyzx, r33.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r12.z, r31.xyzx, t45.yzxw, s4, r32.xyzx, r30.xyzx
                else 
                  ieq r15.w, r21.x, l(6)
                  movc r12.z, r15.w, l(0), l(1.000000)
                endif 
              else 
                mov r12.z, l(1.000000)
              endif 
              mul_sat r12.z, r12.z, l(0.76470590)
              if_nz r21.y
                ieq r15.w, r21.y, l(3)
                if_nz r15.w
                  ubfe r21.xyz, l(4, 12, 10, 0), l(24, 12, 10, 0), r22.xxwx
                  ishl r15.w, l(1), r21.x
                  ushr r16.w, r22.x, l(28)
                  ishl r16.w, l(1), r16.w
                  and r18.w, r22.x, l(4095)
                  utof r22.xz, r15.wwww
                  utof r22.y, r16.w
                  mad r21.xw, r23.xxxy, r22.xxxy, l(0.500000, 0.000000, 0.000000, 0.500000)
                  add r23.xy, r22.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r21.xw, r21.xxxw, r23.xxxy
                  utof r23.x, r18.w
                  utof r23.yz, r21.yyzy
                  add r21.xy, r21.xwxx, r23.xyxx
                  mul r23.xy, r21.xyxx, cb1[84].zwzz
                  mul r21.xyz, r27.xyzx, cb1[84].zwzz
                  mul r21.xyz, r22.xyzx, r21.xyzx
                  mul r27.xyz, r28.xyzx, cb1[84].zwzz
                  mul r22.xyz, r22.xyzx, r27.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r21.xyz, r23.xyzx, t44.xyzw, s4, r21.xyzx, r22.xyzx
                else 
                  mov r21.xyz, l(0.500000,0.500000,1.000000,0)
                endif 
                mad r21.xy, r21.xyxx, l(1.99218750, 1.99218750, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
                dp2 r15.w, r21.xyxx, r21.xyxx
                add r15.w, -r15.w, l(1.000000)
                max r15.w, r15.w, l(0.000000)
                sqrt r15.w, r15.w
                mul r16.w, r21.z, r21.z
                mul r16.w, r16.w, l(0.33333334)
                min r16.w, r16.w, l(1.000000)
                dp3 r18.w, r26.xyzx, r26.xyzx
                rsq r18.w, r18.w
                mul r22.xyz, r18.wwww, r26.xyzx
                dp3 r18.w, -r25.xyzx, -r25.xyzx
                rsq r18.w, r18.w
                mul r23.xyz, r18.wwww, -r25.xyzx
                mul r24.xyz, r3.yyyy, r24.xyzx
                mul r22.xyz, r3.yyyy, r22.xyzx
                mul r23.xyz, r3.yyyy, r23.xyzx
                mul r18.w, r12.z, l(-17.000000)
                exp r18.w, r18.w
                add r16.w, r16.w, r18.w
                log r16.w, r16.w
                mul r16.w, r16.w, l(-0.05882353)
                max r12.z, r16.w, l(0.000000)
                mul r21.yzw, r21.yyyy, r23.xxyz
                mad r21.xyz, r22.xyzx, r21.xxxx, r21.yzwy
                mad r21.xyz, r24.xyzx, r15.wwww, r21.xyzx
                dp3 r15.w, r21.xyzx, r21.xyzx
                rsq r15.w, r15.w
                mul r21.xyz, r15.wwww, r21.xyzx
                add r15.w, -r12.w, l(1.000000)
                mov r18.x, r17.x
                mul r22.xyz, r15.wwww, r18.xyzx
                mad r18.xyz, r21.xyzx, r12.wwww, r22.xyzx
                mov r17.x, r18.x
              endif 
              add r15.w, -r12.w, l(1.000000)
              mul r21.xyz, r13.xyzx, r15.wwww
              mad r13.xyz, r20.xyzx, r12.wwww, r21.xyzx
              mov r19.z, r17.y
              mul r20.xyz, r15.wwww, r19.xyzx
              mad r19.xyz, r29.xyzx, r12.wwww, r20.xyzx
              mul r16.w, r15.w, r17.w
              mad r17.z, r17.z, r15.w, r12.w
              mad r17.w, r12.z, r12.w, r16.w
              mov r17.y, r19.z
            endif 
          endif 
        endif 
      endif 
    endloop 
    mov r14.xyzw, r17.xwyz
    mov r9.xzw, r13.xxyz
    mov r15.yz, r18.yyzy
    mov r16.xy, r19.xyxx
    iadd r6.w, r6.w, l(32)
  endloop 
  mov r15.x, r14.x
  mov r16.z, r14.z
  mov r14.xy, r14.wyww
else 
  mov r9.xzw, l(0,0,0,0)
  mov r15.xyz, l(0,0,0,0)
  mov r16.xyz, l(0,0,0,0)
  mov r14.xy, l(0,0,0,0)
endif 
if_nz r9.y
  add r10.xyz, v6.xyzx, cb1[24].xyzx
  iadd r0.y, cb2[57].w, cb2[57].z
  mul r5.w, r3.x, l(0.00781250)
  min r5.w, r5.w, l(15.000000)
  ftou r5.w, r5.w
  ushr r11.xy, r3.zwzz, l(6, 6, 0, 0)
  ishl r11.z, r5.w, l(4)
  and r5.w, cb2[57].z, l(-32)
  iadd r6.w, -r5.w, cb2[57].z
  and r7.w, r0.y, l(-32)
  iadd r8.w, r0.y, -r7.w
  mov r12.xy, l(0,0,0,0)
  mov r13.w, l(0)
  mov r10.w, l(1.000000)
  mov r17.xyz, r9.xzwx
  mov r18.xyz, r15.xyzx
  mov r19.xyz, r16.xyzx
  mov r20.xy, r14.xyxx
  mov r9.y, r5.w
  loop 
    uge r11.w, r9.y, r0.y
    breakc_nz r11.w
    ushr r12.z, r9.y, l(5)
    iadd r13.xyz, r11.xyzx, r12.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r11.w, r13.xyzw, t35.yzwx
    ieq r12.z, r5.w, r9.y
    bfi r12.w, r6.w, l(0), l(0), r11.w
    movc r11.w, r12.z, r12.w, r11.w
    ieq r12.z, r7.w, r9.y
    ubfe r12.w, r8.w, l(0), r11.w
    movc r11.w, r12.z, r12.w, r11.w
    iadd r12.z, r4.w, r9.y
    mov r13.xyz, r17.xyzx
    mov r21.xyz, r18.xyzx
    mov r22.xyz, r19.xyzx
    mov r14.zw, r20.xxxy
    mov r12.w, r11.w
    loop 
      breakc_z r12.w
      firstbit_lo r15.w, r12.w
      ishl r16.w, l(1), r15.w
      and r17.w, r12.w, r16.w
      if_nz r17.w
        xor r12.w, r12.w, r16.w
        iadd r16.w, r12.z, r15.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r23.xyzw, r16.w, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r24.xy, r16.w, l(16), t11.xyxx
        add r23.xyz, r23.xyzx, -v6.xyzx
        mov r24.z, r23.w
        lt r23.xyz, |r23.xyzx|, r24.zxyz
        and r16.w, r23.y, r23.x
        and r16.w, r23.z, r16.w
        if_nz r16.w
          iadd r15.w, r9.y, r15.w
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r23.xyz, r15.w, l(0), t36.xyzx
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r24.xyz, r15.w, l(16), t36.xyzx
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r25.xyz, r15.w, l(32), t36.xyzx
          mov r26.x, r23.x
          mov r26.y, r24.x
          mov r26.z, r25.x
          dp3 r16.w, r26.xyzx, r26.xyzx
          rsq r16.w, r16.w
          mul r27.xyz, r16.wwww, r26.xyzx
          dp3 r16.w, r27.xyzx, v3.xyzx
          ge r16.w, r16.w, l(0.500000)
          if_nz r16.w
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r28.xyw, r15.w, l(48), t36.xyxz
            mov r26.w, r28.x
            dp4 r26.x, r10.xyzw, r26.xyzw
            mov r29.x, r23.y
            mov r29.y, r24.y
            mov r29.z, r25.y
            mov r29.w, r28.y
            dp4 r26.y, r10.xyzw, r29.xyzw
            mov r28.x, r23.z
            mov r28.y, r24.z
            mov r28.z, r25.z
            dp4 r26.z, r10.xyzw, r28.xyzw
            lt r23.xyz, |r26.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
            and r16.w, r23.y, r23.x
            and r16.w, r23.z, r16.w
            if_nz r16.w
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r23.xyzw, r15.w, l(64), t36.xyzw
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r24.xyzw, r15.w, l(80), t36.xyzw
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r25.xyzw, r15.w, l(96), t36.xyzw
              dp3 r30.x, r7.xyzx, r29.xyzx
              dp3 r30.y, r7.xyzx, r28.xyzx
              dp3 r31.x, r8.xyzx, r29.xyzx
              dp3 r31.y, r8.xyzx, r28.xyzx
              mad r20.zw, r26.yyyz, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
              mul r26.xyz, r30.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
              mul r30.xyz, r31.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
              and r31.xy, r24.yzyy, l(0x0000ffff, 0x0000ffff, 0, 0)
              if_nz r31.x
                ubfe r16.w, l(4), l(24), r24.w
                ishl r16.w, l(1), r16.w
                ushr r17.w, r24.w, l(28)
                ishl r17.w, l(1), r17.w
                ieq r18.w, r31.x, l(4)
                if_nz r18.w
                  and r18.w, r24.w, l(4095)
                  ubfe r19.w, l(12), l(12), r24.w
                  and r21.w, r25.w, l(1023)
                  utof r32.xz, r16.wwww
                  utof r32.y, r17.w
                  mad r31.zw, r20.zzzw, r32.zzzy, l(0.000000, 0.000000, 0.500000, 0.500000)
                  add r33.xy, r32.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r31.zw, r31.zzzw, r33.xxxy
                  utof r33.x, r18.w
                  utof r33.y, r19.w
                  add r31.zw, r31.zzzw, r33.xxxy
                  mul r33.xy, r31.zwzz, cb1[83].xyxx
                  utof r33.z, r21.w
                  mul r34.xyz, r26.zyzz, cb1[83].xyxx
                  mul r34.xyz, r32.xyzx, r34.xyzx
                  mul r35.xyz, r30.zyzz, cb1[83].xyxx
                  mul r32.xyz, r32.xyzx, r35.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r32.xyzw, r33.xyzx, t42.xyzw, s4, r34.xyzx, r32.xyzx
                else 
                  ieq r18.w, r31.x, l(1)
                  if_nz r18.w
                    and r18.w, r24.w, l(4095)
                    ubfe r19.w, l(12), l(12), r24.w
                    and r21.w, r25.w, l(1023)
                    utof r33.xz, r16.wwww
                    utof r33.y, r17.w
                    mad r31.xz, r20.zzwz, r33.zzyz, l(0.500000, 0.000000, 0.500000, 0.000000)
                    add r34.xy, r33.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                    min r31.xz, r31.xxzx, r34.xxyx
                    utof r34.x, r18.w
                    utof r34.y, r19.w
                    add r31.xz, r31.xxzx, r34.xxyx
                    mul r34.xy, r31.xzxx, cb1[83].zwzz
                    utof r34.z, r21.w
                    mul r31.xzw, r26.zzyz, cb1[83].zzwz
                    mul r31.xzw, r33.xxyz, r31.xxzw
                    mul r35.xyz, r30.zyzz, cb1[83].zwzz
                    mul r33.xyz, r33.xyzx, r35.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r32.xyzw, r34.xyzx, t43.xyzw, s4, r31.xzwx, r33.xyzx
                  else 
                    mov r32.xyzw, l(1.000000,1.000000,1.000000,1.000000)
                  endif 
                endif 
                mul r23.xyz, r23.xyzx, r32.xyzx
                mul r16.w, r23.w, r32.w
              else 
                mov r23.xyz, l(0,0,0,0)
                mov r16.w, l(0)
              endif 
              ne r17.w, r24.x, l(1.000000)
              add r18.w, r23.w, r16.w
              mad_sat r18.w, r18.w, r24.x, -r24.x
              movc r16.w, r17.w, r18.w, r16.w
              if_nz r31.y
                ubfe r17.w, l(4), l(24), r25.y
                ishl r17.w, l(1), r17.w
                ushr r18.w, r25.y, l(28)
                ishl r18.w, l(1), r18.w
                ieq r19.w, r31.y, l(2)
                if_nz r19.w
                  and r19.w, r25.y, l(4095)
                  ubfe r24.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r25.yyyw
                  utof r32.xz, r17.wwww
                  utof r32.y, r18.w
                  mad r31.xz, r20.zzwz, r32.zzyz, l(0.500000, 0.000000, 0.500000, 0.000000)
                  add r33.xy, r32.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r31.xz, r31.xxzx, r33.xxyx
                  utof r33.x, r19.w
                  utof r33.yz, r24.xxwx
                  add r31.xz, r31.xxzx, r33.xxyx
                  mul r33.xy, r31.xzxx, cb1[84].xyxx
                  mul r31.xzw, r26.zzyz, cb1[84].xxyx
                  mul r31.xzw, r32.xxyz, r31.xxzw
                  mul r34.xyz, r30.zyzz, cb1[84].xyxx
                  mul r32.xyz, r32.xyzx, r34.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r19.w, r33.xyzx, t45.yzwx, s4, r31.xzwx, r32.xyzx
                else 
                  ieq r21.w, r31.y, l(4)
                  if_nz r21.w
                    and r21.w, r25.y, l(4095)
                    ubfe r24.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r25.yyyw
                    utof r31.xz, r17.wwww
                    utof r31.y, r18.w
                    mad r32.xy, r20.zwzz, r31.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r32.zw, r31.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                    min r32.xy, r32.zwzz, r32.xyxx
                    utof r33.x, r21.w
                    utof r33.y, r24.x
                    add r32.xy, r32.xyxx, r33.xyxx
                    mul r32.xy, r32.xyxx, cb1[83].xyxx
                    utof r32.z, r24.w
                    mul r33.xyz, r26.zyzz, cb1[83].xyxx
                    mul r33.xyz, r31.xyzx, r33.xyzx
                    mul r34.xyz, r30.zyzz, cb1[83].xyxx
                    mul r31.xyz, r31.xyzx, r34.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r19.w, r32.xyzx, t42.yzwx, s4, r33.xyzx, r31.xyzx
                  else 
                    and r21.w, r25.y, l(4095)
                    ubfe r24.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r25.yyyw
                    utof r31.xz, r17.wwww
                    utof r31.y, r18.w
                    mad r32.xy, r20.zwzz, r31.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r32.zw, r31.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                    min r32.xy, r32.zwzz, r32.xyxx
                    utof r33.x, r21.w
                    utof r33.y, r24.x
                    add r32.xy, r32.xyxx, r33.xyxx
                    mul r32.xy, r32.xyxx, cb1[83].zwzz
                    utof r32.z, r24.w
                    mul r33.xyz, r26.zyzz, cb1[83].zwzz
                    mul r33.xyz, r31.xyzx, r33.xyzx
                    mul r34.xyz, r30.zyzz, cb1[83].zwzz
                    mul r31.xyz, r31.xyzx, r34.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r19.w, r32.xyzx, t43.yzwx, s4, r33.xyzx, r31.xyzx
                  endif 
                endif 
                mad r31.xyz, r19.wwww, l(0.960000, 0.960000, 0.960000, 0.000000), l(0.040000, 0.040000, 0.040000, 0.000000)
                add_sat r17.w, -r19.w, l(1.000000)
                mul r23.xyz, r17.wwww, r23.xyzx
              else 
                mov r31.xyz, l(0.040000,0.040000,0.040000,0)
              endif 
              ushr r24.xy, r24.zyzz, l(16, 16, 0, 0)
              if_nz r24.x
                ieq r17.w, r24.x, l(2)
                if_nz r17.w
                  ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r15.w, r15.w, l(112), t36.xxxx
                  ubfe r24.zw, l(0, 0, 4, 12), l(0, 0, 24, 12), r25.zzzz
                  ishl r17.w, l(1), r24.z
                  ushr r18.w, r25.z, l(28)
                  ishl r18.w, l(1), r18.w
                  and r19.w, r25.z, l(4095)
                  and r15.w, r15.w, l(1023)
                  utof r32.xz, r17.wwww
                  utof r32.y, r18.w
                  mad r25.yz, r20.zzwz, r32.zzyz, l(0.000000, 0.500000, 0.500000, 0.000000)
                  add r33.xy, r32.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r25.yz, r25.yyzy, r33.xxyx
                  utof r33.x, r19.w
                  utof r33.y, r24.w
                  add r24.zw, r25.yyyz, r33.xxxy
                  mul r33.xy, r24.zwzz, cb1[84].xyxx
                  utof r33.z, r15.w
                  mul r34.xyz, r26.zyzz, cb1[84].xyxx
                  mul r34.xyz, r32.xyzx, r34.xyzx
                  mul r35.xyz, r30.zyzz, cb1[84].xyxx
                  mul r32.xyz, r32.xyzx, r35.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r15.w, r33.xyzx, t45.yzwx, s4, r34.xyzx, r32.xyzx
                else 
                  ieq r17.w, r24.x, l(6)
                  movc r15.w, r17.w, l(0), l(1.000000)
                endif 
              else 
                mov r15.w, l(1.000000)
              endif 
              mul_sat r15.w, r15.w, l(0.76470590)
              if_nz r24.y
                ieq r17.w, r24.y, l(3)
                if_nz r17.w
                  ubfe r24.xyz, l(4, 12, 10, 0), l(24, 12, 10, 0), r25.xxwx
                  ishl r17.w, l(1), r24.x
                  ushr r18.w, r25.x, l(28)
                  ishl r18.w, l(1), r18.w
                  and r19.w, r25.x, l(4095)
                  utof r25.xz, r17.wwww
                  utof r25.y, r18.w
                  mad r20.zw, r20.zzzw, r25.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
                  add r24.xw, r25.zzzy, l(-0.500000, 0.000000, 0.000000, -0.500000)
                  min r20.zw, r20.zzzw, r24.xxxw
                  utof r32.x, r19.w
                  utof r32.yz, r24.yyzy
                  add r20.zw, r20.zzzw, r32.xxxy
                  mul r32.xy, r20.zwzz, cb1[84].zwzz
                  mul r24.xyz, r26.xyzx, cb1[84].zwzz
                  mul r24.xyz, r25.xyzx, r24.xyzx
                  mul r26.xyz, r30.xyzx, cb1[84].zwzz
                  mul r25.xyz, r25.xyzx, r26.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r24.xyz, r32.xyzx, t44.xyzw, s4, r24.xyzx, r25.xyzx
                else 
                  mov r24.xyz, l(0.500000,0.500000,1.000000,0)
                endif 
                mad r20.zw, r24.xxxy, l(0.000000, 0.000000, 1.99218750, 1.99218750), l(0.000000, 0.000000, -1.000000, -1.000000)
                dp2 r17.w, r20.zwzz, r20.zwzz
                add r17.w, -r17.w, l(1.000000)
                max r17.w, r17.w, l(0.000000)
                sqrt r17.w, r17.w
                mul r18.w, r24.z, r24.z
                mul r18.w, r18.w, l(0.33333334)
                min r18.w, r18.w, l(1.000000)
                dp3 r19.w, r29.xyzx, r29.xyzx
                rsq r19.w, r19.w
                mul r24.xyz, r19.wwww, r29.xyzx
                dp3 r19.w, -r28.xyzx, -r28.xyzx
                rsq r19.w, r19.w
                mul r25.xyz, r19.wwww, -r28.xyzx
                mul r26.xyz, r3.yyyy, r27.xyzx
                mul r24.xyz, r3.yyyy, r24.xyzx
                mul r25.xyz, r3.yyyy, r25.xyzx
                mul r19.w, r15.w, l(-17.000000)
                exp r19.w, r19.w
                add r18.w, r18.w, r19.w
                log r18.w, r18.w
                mul r18.w, r18.w, l(-0.05882353)
                max r15.w, r18.w, l(0.000000)
                mul r25.xyz, r20.wwww, r25.xyzx
                mad r24.xyz, r24.xyzx, r20.zzzz, r25.xyzx
                mad r24.xyz, r26.xyzx, r17.wwww, r24.xyzx
                dp3 r17.w, r24.xyzx, r24.xyzx
                rsq r17.w, r17.w
                mul r24.xyz, r17.wwww, r24.xyzx
                add r17.w, -r16.w, l(1.000000)
                mul r25.xyz, r17.wwww, r21.xyzx
                mad r21.xyz, r24.xyzx, r16.wwww, r25.xyzx
              endif 
              add r17.w, -r16.w, l(1.000000)
              mul r24.xyz, r13.xyzx, r17.wwww
              mad r13.xyz, r23.xyzx, r16.wwww, r24.xyzx
              mul r23.xyz, r17.wwww, r22.xyzx
              mad r22.xyz, r31.xyzx, r16.wwww, r23.xyzx
              mul r18.w, r14.w, r17.w
              mad r14.z, r14.z, r17.w, r16.w
              mad r14.w, r15.w, r16.w, r18.w
            endif 
          endif 
        endif 
      endif 
    endloop 
    mov r17.xyz, r13.xyzx
    mov r18.xyz, r21.xyzx
    mov r19.xyz, r22.xyzx
    mov r20.xy, r14.zwzz
    iadd r9.y, r9.y, l(32)
  endloop 
  mov r9.xzw, r17.xxyz
  mov r15.xyz, r18.xyzx
  mov r16.xyz, r19.xyzx
  mov r14.xy, r20.xyxx
endif 
mov_sat r14.x, r14.x
add r0.y, -r14.x, l(1.000000)
mad r1.xyz, r1.xyzx, r0.yyyy, r9.xzwx
mad r0.w, r0.w, r0.y, r14.x
mad r2.yzw, r2.yyzw, r0.yyyy, r15.xxyz
dp3 r3.y, r2.yzwy, r2.yzwy
rsq r3.y, r3.y
mul r7.xyz, r2.yzwy, r3.yyyy
mad r2.y, r2.x, r0.y, r14.y
mad r8.xyz, r0.yyyy, l(0.040000, 0.040000, 0.040000, 0.000000), r16.xyzx
mov_sat r0.x, r0.x
mul r0.x, r0.x, cb0[11].w
eq r9.xyz, r0.zzzz, l(3.000000, 2.000000, 1.000000, 0.000000)
movc r10.xyz, r9.zzzz, cb0[15].xyzx, cb0[12].yzwy
movc r9.yzw, r9.yyyy, cb0[16].xxyz, r10.xxyz
movc r9.xyz, r9.xxxx, cb0[17].xyzx, r9.yzwy
dp3 r0.z, -v6.xyzx, -v6.xyzx
rsq r0.z, r0.z
mul r10.xyz, r0.zzzz, -v6.xyzx
dp3 r2.z, r10.xyzx, r4.xyzx
dp3 r4.x, r10.xyzx, r5.xyzx
dp3 r4.y, r10.xyzx, r6.xyzx
lt r2.w, l(0.000000), r2.z
div r4.xy, -r4.xyxx, r2.zzzz
and r4.xy, r2.wwww, r4.xyxx
add r2.w, cb0[13].z, l(0.000010)
mad r4.xy, r4.xyxx, r2.wwww, v1.yzyy
sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r4.xyxx, t26.xyzw, s1
mul r4.xyz, r9.xyzx, r4.xyzx
mov_sat r2.z, r2.z
log r2.w, r2.z
mul r2.w, r2.w, cb0[12].x
exp r2.w, r2.w
add r2.z, -r2.z, l(1.000000)
log r2.z, r2.z
mul r2.z, r2.z, cb0[12].x
exp r2.z, r2.z
movc r2.z, cb0[13].y, r2.z, r2.w
eq r2.w, cb0[12].x, l(0.000000)
movc r2.z, r2.w, l(1.000000), r2.z
mul r0.x, r0.x, r4.w
mul r0.x, r2.z, r0.x
mul r0.x, r0.y, r0.x
mul r4.xyz, r0.xxxx, r4.xyzx
ine r0.x, cb1[92].x, l(0)
utof r2.zw, r3.wwwz
dp2 r0.y, r2.wzww, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r0.y, r0.y
mul r0.y, r0.y, l(52.982918)
frc r0.y, r0.y
mad r0.y, r0.y, l(6.28318548), cb1[70].w
sincos r5.x, r6.x, r0.y
dp2 r0.y, r2.zwzz, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r0.y, r0.y
mul r0.y, r0.y, l(52.982918)
frc r0.y, r0.y
mad r0.y, r0.y, l(6.28318548), cb1[70].w
sincos r9.x, r11.x, r0.y
dp3_sat r2.x, r7.xyzx, r10.xyzx
dp3 r0.y, -r10.xyzx, r7.xyzx
add r0.y, r0.y, r0.y
mad r12.xyz, r7.xyzx, -r0.yyyy, -r10.xyzx
mul r0.y, r2.y, l(17.000000)
exp r0.y, r0.y
add r0.y, r0.y, l(2.000000)
div r0.y, l(2.000000), r0.y
sqrt r2.z, r0.y
add r2.w, -r2.y, l(1.000000)
mul r3.y, r2.w, l(5.000000)
mad r5.z, r2.w, l(5.000000), l(-2.500000)
mul_sat r5.z, r5.z, l(0.400000)
mul r5.z, r5.z, l(100.000000)
mad r9.yz, -r2.wwww, l(0.000000, 10.000000, 5.000000, 0.000000), l(0.000000, 6.857410, 7.085000, 0.000000)
exp r5.w, r9.y
mul r5.w, r2.x, r5.w
mul r5.w, r5.w, l(9.136810)
mul r6.w, r2.w, r3.y
mad r6.w, -r6.w, l(2.015905), r9.z
exp r6.w, r6.w
mul r6.w, r2.x, r6.w
mul r6.w, r6.w, l(9.708090)
max r5.w, r5.w, r6.w
max r5.w, r5.w, l(1.268160)
iadd r6.w, cb2[0].y, -cb2[58].x
mul r3.x, r3.x, l(0.00781250)
min r3.x, r3.x, l(15.000000)
ftou r3.x, r3.x
ushr r13.xy, r3.zwzz, l(6, 6, 0, 0)
ishl r13.z, r3.x, l(4)
and r3.x, r6.w, l(-32)
iadd r3.z, -r3.x, r6.w
and r3.w, cb2[0].y, l(-32)
iadd r8.w, -r3.w, cb2[0].y
mov r14.xy, l(0,0,0,0)
mov r15.w, l(0)
mov r16.yz, l(0,0,1.000000,0)
mov r17.xy, l(0,0,0,0)
mov r18.x, l(1.000000)
mov r19.xy, l(0,0,0,0)
mov r20.xy, l(0,0,0,0)
mov r21.xyzw, l(0,0,0,0)
mov r22.yzw, l(0,0,0,0)
mov r9.y, r3.x
loop 
  uge r9.z, r9.y, cb2[0].y
  breakc_nz r9.z
  ushr r14.z, r9.y, l(5)
  iadd r15.xyz, r13.xyzx, r14.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r9.z, r15.xyzw, t7.yzxw
  ieq r9.w, r3.x, r9.y
  bfi r10.w, r3.z, l(0), l(0), r9.z
  movc r9.z, r9.w, r10.w, r9.z
  ieq r9.w, r3.w, r9.y
  ubfe r10.w, r8.w, l(0), r9.z
  movc r9.z, r9.w, r10.w, r9.z
  iadd r9.w, r9.y, cb2[0].x
  mov r23.xyzw, r21.xyzw
  mov r24.xyz, r22.yzwy
  mov r10.w, r9.z
  loop 
    breakc_z r10.w
    firstbit_lo r11.y, r10.w
    ishl r11.z, l(1), r11.y
    and r11.w, r10.w, r11.z
    if_nz r11.w
      xor r10.w, r10.w, r11.z
      iadd r11.z, r9.w, r11.y
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r25.xyzw, r11.z, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r15.xy, r11.z, l(16), t11.xyxx
      add r25.xyz, r25.xyzx, -v6.xyzx
      mov r15.z, r25.w
      lt r15.xyz, |r25.xyzx|, r15.zxyz
      and r11.z, r15.y, r15.x
      and r11.z, r15.z, r11.z
      if_nz r11.z
        iadd r11.y, r9.y, r11.y
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r11.y, l(0), t15.wxyz
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r11.zw, r11.y, l(96), t15.xxxy
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r11.y, l(116), t15.zwxy
        add r15.xyz, -r25.yzwy, v6.xyzx
        and r13.w, r26.w, l(0x0000ffff)
        ubfe r14.z, l(6), l(25), r26.w
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r13.w, l(0), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r13.w, l(16), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r13.w, l(32), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r13.w, l(48), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r13.w, l(64), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r13.w, l(80), t16.xyzw
        dp3 r14.w, r27.xyzx, r15.xyzx
        add_sat r14.w, r27.w, r14.w
        dp3 r16.w, r28.xyzx, r15.xyzx
        add_sat r16.w, r28.w, r16.w
        mul r14.w, r14.w, r16.w
        dp3 r16.w, r29.xyzx, r15.xyzx
        add_sat r16.w, r29.w, r16.w
        mul r14.w, r14.w, r16.w
        dp3 r16.w, r30.xyzx, r15.xyzx
        add_sat r16.w, r30.w, r16.w
        mul r14.w, r14.w, r16.w
        dp3 r16.w, r31.xyzx, r15.xyzx
        add_sat r16.w, r31.w, r16.w
        mul r14.w, r14.w, r16.w
        dp3 r16.w, r32.xyzx, r15.xyzx
        add_sat r16.w, r32.w, r16.w
        mul r16.x, r14.w, r16.w
        and r14.w, r11.z, l(1)
        movc r16.xw, r14.wwww, r16.xxxy, r16.zzzx
        mov r14.w, r11.z
        mov r27.xy, r16.xwxx
        mov r17.w, l(1)
        loop 
          ige r18.z, r17.w, r14.z
          breakc_nz r18.z
          iadd r18.z, r13.w, r17.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r18.z, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r18.z, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r18.z, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r18.z, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r18.z, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r18.z, l(80), t16.xyzw
          dp3 r18.z, r28.xyzx, r15.xyzx
          add_sat r18.z, r28.w, r18.z
          mul r18.z, r18.z, r27.x
          dp3 r18.w, r29.xyzx, r15.xyzx
          add_sat r18.w, r29.w, r18.w
          mul r18.z, r18.w, r18.z
          dp3 r18.w, r30.xyzx, r15.xyzx
          add_sat r18.w, r30.w, r18.w
          mul r18.z, r18.w, r18.z
          dp3 r18.w, r31.xyzx, r15.xyzx
          add_sat r18.w, r31.w, r18.w
          mul r18.z, r18.w, r18.z
          dp3 r18.w, r32.xyzx, r15.xyzx
          add_sat r18.w, r32.w, r18.w
          mul r18.z, r18.w, r18.z
          dp3 r18.w, r33.xyzx, r15.xyzx
          add_sat r18.w, r33.w, r18.w
          mul r27.x, r18.w, r18.z
          ushr r19.w, r14.w, l(2)
          ubfe r20.w, l(1), l(2), r14.w
          and r25.w, r19.w, l(2)
          max r27.z, r27.x, r27.y
          mad r18.z, -r18.z, r18.w, l(1.000000)
          mul r18.z, r18.z, r27.y
          movc r18.y, r25.w, r18.z, r27.z
          movc r27.xy, r20.wwww, r27.xyxx, r18.xyxx
          iadd r17.w, r17.w, l(1)
          mov r14.w, r19.w
        endloop 
        mov_sat r27.y, r27.y
        mul r11.z, r11.w, r27.y
        lt r13.w, l(0.000000), r11.z
        if_nz r13.w
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r11.y, l(16), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r11.y, l(32), t15.yxwz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r11.y, l(48), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r11.y, l(64), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r11.y, l(80), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r11.y, l(132), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r11.y, l(148), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r11.y, l(164), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r11.y, l(180), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r11.y, l(196), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xy, r11.y, l(212), t15.xyxx
          mad r24.z, r27.y, r11.w, r24.z
          mul r11.y, r26.z, r11.z
          mov r26.z, r33.z
          dp3 r11.z, r12.xyzx, r26.xyzx
          dp3 r11.w, r15.xyzx, r26.xyzx
          add r11.w, -r33.w, r11.w
          ge r13.w, r11.w, l(0.000000)
          max r11.w, r5.z, |r11.w|
          movc r11.w, r13.w, r11.w, -r11.w
          max r11.z, -r11.z, l(0.00000010)
          div r11.z, r11.w, r11.z
          min r11.z, |r11.z|, l(131072.000000)
          mov r33.z, r34.z
          dp3 r11.w, r12.xyzx, r33.xyzx
          dp3 r13.w, r15.xyzx, r33.xyzx
          add r13.w, -r34.w, r13.w
          ge r14.z, r13.w, l(0.000000)
          max r13.w, r5.z, |r13.w|
          movc r13.w, r14.z, r13.w, -r13.w
          max r11.w, -r11.w, l(0.00000010)
          div r11.w, r13.w, r11.w
          min r11.z, |r11.w|, r11.z
          mov r34.z, r35.z
          dp3 r11.w, r12.xyzx, r34.xyzx
          dp3 r13.w, r15.xyzx, r34.xyzx
          add r13.w, -r35.w, r13.w
          ge r14.z, r13.w, l(0.000000)
          max r13.w, r5.z, |r13.w|
          movc r13.w, r14.z, r13.w, -r13.w
          max r11.w, -r11.w, l(0.00000010)
          div r11.w, r13.w, r11.w
          min r11.z, |r11.w|, r11.z
          mov r35.z, r36.z
          dp3 r11.w, r12.xyzx, r35.xyzx
          dp3 r13.w, r15.xyzx, r35.xyzx
          add r13.w, -r36.w, r13.w
          ge r14.z, r13.w, l(0.000000)
          max r13.w, r5.z, |r13.w|
          movc r13.w, r14.z, r13.w, -r13.w
          max r11.w, -r11.w, l(0.00000010)
          div r11.w, r13.w, r11.w
          min r11.z, |r11.w|, r11.z
          mov r36.z, r37.x
          dp3 r11.w, r12.xyzx, r36.xyzx
          dp3 r13.w, r15.xyzx, r36.xyzx
          add r13.w, -r37.y, r13.w
          ge r14.z, r13.w, l(0.000000)
          max r13.w, r5.z, |r13.w|
          movc r13.w, r14.z, r13.w, -r13.w
          max r11.w, -r11.w, l(0.00000010)
          div r11.w, r13.w, r11.w
          min r11.z, |r11.w|, r11.z
          mov r38.zw, r37.zzzw
          dp3 r11.w, r12.zxyz, r38.xzwx
          dp3 r13.w, r15.zxyz, r38.xzwx
          add r13.w, -r38.y, r13.w
          ge r14.z, r13.w, l(0.000000)
          max r13.w, r5.z, |r13.w|
          movc r13.w, r14.z, r13.w, -r13.w
          max r11.w, -r11.w, l(0.00000010)
          div r11.w, r13.w, r11.w
          min r11.z, |r11.w|, r11.z
          mov r26.x, r30.w
          mov r26.yz, r31.zzwz
          add r18.yzw, r15.xxyz, r26.xxyz
          mad r18.yzw, r12.xxyz, r11.zzzz, r18.yyzw
          dp3 r11.w, r18.yzwy, r18.yzwy
          sqrt r11.w, r11.w
          div r11.z, r11.z, r11.w
          add r11.z, r11.z, r11.z
          sqrt r11.z, r11.z
          mad r11.z, r2.w, l(5.000000), r11.z
          add r11.z, r11.z, l(-0.844800)
          mov r25.y, r28.z
          mov r25.z, r29.x
          dp3 r33.x, r18.yzwy, r25.xyzx
          mov r26.xy, r28.xwxx
          mov r26.z, r29.w
          dp3 r33.y, r18.yzwy, r26.xyzx
          mov r29.x, r28.y
          dp3 r33.z, r18.yzwy, r29.xyzx
          ubfe r11.w, l(9), l(16), r26.w
          utof r33.w, r11.w
          sample_l_indexable(texturecubearray)(float,float,float,float) r18.yzw, r33.xyzw, t8.wxyz, s2, r11.z
          dp3 r28.x, r15.xyzx, r25.xyzx
          dp3 r28.y, r15.xyzx, r26.xyzx
          dp3 r28.z, r15.xyzx, r29.xyzx
          mad_sat r15.xyz, r28.xyzx, r30.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
          mov r31.z, r32.x
          mad r15.xyz, r15.xyzx, r31.xyzx, r32.yzwy
          dp3 r33.x, r7.xyzx, r25.xyzx
          dp3 r33.y, r7.xyzx, r26.xyzx
          dp3 r33.z, r7.xyzx, r29.xyzx
          lt r25.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r33.xyzx
          movc r17.z, r25.x, l(0), l(0.500000)
          add r26.xyz, r15.xyzx, r17.xyzx
          sample_l_indexable(texture3d)(float,float,float,float) r26.xyz, r26.xyzx, t17.xyzw, s4, l(0.000000)
          mul r27.xzw, r33.xxyz, r33.xxyz
          mul r27.xzw, r11.yyyy, r27.xxzw
          movc r19.z, r25.y, l(0), l(0.500000)
          add r25.xyw, r15.xyxz, r19.xyxz
          sample_l_indexable(texture3d)(float,float,float,float) r25.xyw, r25.xywx, t18.xywz, s4, l(0.000000)
          mul r25.xyw, r27.zzzz, r25.xyxw
          mad r25.xyw, r26.xyxz, r27.xxxx, r25.xyxw
          movc r20.z, r25.z, l(0), l(0.500000)
          add r15.xyz, r15.xyzx, r20.xyzx
          sample_l_indexable(texture3d)(float,float,float,float) r15.xyz, r15.xyzx, t19.xyzw, s4, l(0.000000)
          mad r15.xyz, r15.xyzx, r27.wwww, r25.xywx
          sample_l_indexable(texturecubearray)(float,float,float,float) r25.xyz, r33.xyzw, t8.xyzw, s2, l(6.000000)
          mul r26.xyz, r15.xyzx, r25.xyzx
          dp3 r11.z, r26.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r23.xyz, r15.xyzx, r25.xyzx, r23.xyzx
          mul r11.w, r5.w, r11.z
          mul r15.xyz, r11.yyyy, r18.yzwy
          dp3 r11.y, r15.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r11.y, r5.w, r11.z, r11.y
          div r11.y, r11.w, r11.y
          mov r25.x, r23.w
          mov r25.yz, r24.xxyx
          mad r24.xyw, r15.yzyx, r11.yyyy, r25.yzyx
          mov r23.w, r24.w
        endif 
      endif 
    endif 
  endloop 
  mov r21.xyzw, r23.xyzw
  mov r22.yzw, r24.xxyz
  iadd r9.y, r9.y, l(32)
endloop 
lt r3.w, r22.w, l(1.000000)
if_nz r3.w
  mov r14.xy, l(0,0,0,0)
  mov r15.w, l(0)
  mov r16.yz, l(0,0,1.000000,0)
  mov r17.xy, l(0,0,0,0)
  mov r18.x, l(1.000000)
  mov r19.xy, l(0,0,0,0)
  mov r20.xy, l(0,0,0,0)
  mov r23.x, r21.w
  mov r23.yzw, r22.yyzw
  mov r9.yzw, r21.xxyz
  mov r3.w, r22.w
  mov r8.w, l(0)
  loop 
    uge r10.w, r8.w, r6.w
    breakc_nz r10.w
    ushr r14.z, r8.w, l(5)
    iadd r15.xyz, r13.xyzx, r14.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r10.w, r15.xyzw, t7.yzwx
    ieq r11.y, r3.x, r8.w
    ubfe r11.z, r3.z, l(0), r10.w
    movc r10.w, r11.y, r11.z, r10.w
    iadd r11.y, r8.w, cb2[0].x
    mov r24.xyzw, r23.xyzw
    mov r15.xyz, r9.yzwy
    mov r11.z, r3.w
    mov r11.w, r10.w
    loop 
      breakc_z r11.w
      firstbit_lo r13.w, r11.w
      ishl r14.z, l(1), r13.w
      and r14.w, r11.w, r14.z
      if_nz r14.w
        xor r11.w, r11.w, r14.z
        iadd r14.z, r11.y, r13.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r25.xyzw, r14.z, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r26.xy, r14.z, l(16), t11.xyxx
        add r25.xyz, r25.xyzx, -v6.xyzx
        mov r26.z, r25.w
        lt r25.xyz, |r25.xyzx|, r26.zxyz
        and r14.z, r25.y, r25.x
        and r14.z, r25.z, r14.z
        if_nz r14.z
          iadd r13.w, r8.w, r13.w
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r13.w, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r14.zw, r13.w, l(96), t15.xxxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r13.w, l(116), t15.zwxy
          add r27.xyz, -r25.yzwy, v6.xyzx
          and r16.w, r26.w, l(0x0000ffff)
          ubfe r17.w, l(6), l(25), r26.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r16.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r16.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r16.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r16.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r16.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r16.w, l(80), t16.xyzw
          dp3 r18.z, r28.xyzx, r27.xyzx
          add_sat r18.z, r28.w, r18.z
          dp3 r18.w, r29.xyzx, r27.xyzx
          add_sat r18.w, r29.w, r18.w
          mul r18.z, r18.w, r18.z
          dp3 r18.w, r30.xyzx, r27.xyzx
          add_sat r18.w, r30.w, r18.w
          mul r18.z, r18.w, r18.z
          dp3 r18.w, r31.xyzx, r27.xyzx
          add_sat r18.w, r31.w, r18.w
          mul r18.z, r18.w, r18.z
          dp3 r18.w, r32.xyzx, r27.xyzx
          add_sat r18.w, r32.w, r18.w
          mul r18.z, r18.w, r18.z
          dp3 r18.w, r33.xyzx, r27.xyzx
          add_sat r18.w, r33.w, r18.w
          mul r16.x, r18.w, r18.z
          and r18.z, r14.z, l(1)
          movc r18.zw, r18.zzzz, r16.xxxy, r16.zzzx
          mov r16.x, r14.z
          mov r28.xy, r18.zwzz
          mov r19.w, l(1)
          loop 
            ige r20.w, r19.w, r17.w
            breakc_nz r20.w
            iadd r20.w, r16.w, r19.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r20.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r20.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r20.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r20.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r20.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r20.w, l(80), t16.xyzw
            dp3 r20.w, r29.xyzx, r27.xyzx
            add_sat r20.w, r29.w, r20.w
            mul r20.w, r20.w, r28.x
            dp3 r25.w, r30.xyzx, r27.xyzx
            add_sat r25.w, r30.w, r25.w
            mul r20.w, r20.w, r25.w
            dp3 r25.w, r31.xyzx, r27.xyzx
            add_sat r25.w, r31.w, r25.w
            mul r20.w, r20.w, r25.w
            dp3 r25.w, r32.xyzx, r27.xyzx
            add_sat r25.w, r32.w, r25.w
            mul r20.w, r20.w, r25.w
            dp3 r25.w, r33.xyzx, r27.xyzx
            add_sat r25.w, r33.w, r25.w
            mul r20.w, r20.w, r25.w
            dp3 r25.w, r34.xyzx, r27.xyzx
            add_sat r25.w, r34.w, r25.w
            mul r28.x, r20.w, r25.w
            ushr r27.w, r16.x, l(2)
            ubfe r28.z, l(1), l(2), r16.x
            and r28.w, r27.w, l(2)
            max r29.x, r28.x, r28.y
            mad r20.w, -r20.w, r25.w, l(1.000000)
            mul r20.w, r20.w, r28.y
            movc r18.y, r28.w, r20.w, r29.x
            movc r28.xy, r28.zzzz, r28.xyxx, r18.xyxx
            iadd r19.w, r19.w, l(1)
            mov r16.x, r27.w
          endloop 
          add_sat r14.z, -r11.z, r28.y
          mul r16.x, r14.w, r14.z
          lt r16.w, l(0.000000), r16.x
          if_nz r16.w
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r13.w, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r13.w, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r13.w, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r13.w, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r13.w, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r13.w, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r13.w, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r13.w, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r13.w, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r13.w, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xy, r13.w, l(212), t15.xyxx
            mad r24.w, r14.z, r14.w, r24.w
            mul r13.w, r26.z, r16.x
            mov r26.z, r34.z
            dp3 r14.z, r12.xyzx, r26.xyzx
            dp3 r14.w, r27.xyzx, r26.xyzx
            add r14.w, -r34.w, r14.w
            ge r16.x, r14.w, l(0.000000)
            max r14.w, r5.z, |r14.w|
            movc r14.w, r16.x, r14.w, -r14.w
            max r14.z, -r14.z, l(0.00000010)
            div r14.z, r14.w, r14.z
            min r14.z, |r14.z|, l(131072.000000)
            mov r34.z, r35.z
            dp3 r14.w, r12.xyzx, r34.xyzx
            dp3 r16.x, r27.xyzx, r34.xyzx
            add r16.x, -r35.w, r16.x
            ge r16.w, r16.x, l(0.000000)
            max r16.x, r5.z, |r16.x|
            movc r16.x, r16.w, r16.x, -r16.x
            max r14.w, -r14.w, l(0.00000010)
            div r14.w, r16.x, r14.w
            min r14.z, |r14.w|, r14.z
            mov r35.z, r36.z
            dp3 r14.w, r12.xyzx, r35.xyzx
            dp3 r16.x, r27.xyzx, r35.xyzx
            add r16.x, -r36.w, r16.x
            ge r16.w, r16.x, l(0.000000)
            max r16.x, r5.z, |r16.x|
            movc r16.x, r16.w, r16.x, -r16.x
            max r14.w, -r14.w, l(0.00000010)
            div r14.w, r16.x, r14.w
            min r14.z, |r14.w|, r14.z
            mov r36.z, r37.z
            dp3 r14.w, r12.xyzx, r36.xyzx
            dp3 r16.x, r27.xyzx, r36.xyzx
            add r16.x, -r37.w, r16.x
            ge r16.w, r16.x, l(0.000000)
            max r16.x, r5.z, |r16.x|
            movc r16.x, r16.w, r16.x, -r16.x
            max r14.w, -r14.w, l(0.00000010)
            div r14.w, r16.x, r14.w
            min r14.z, |r14.w|, r14.z
            mov r37.z, r38.x
            dp3 r14.w, r12.xyzx, r37.xyzx
            dp3 r16.x, r27.xyzx, r37.xyzx
            add r16.x, -r38.y, r16.x
            ge r16.w, r16.x, l(0.000000)
            max r16.x, r5.z, |r16.x|
            movc r16.x, r16.w, r16.x, -r16.x
            max r14.w, -r14.w, l(0.00000010)
            div r14.w, r16.x, r14.w
            min r14.z, |r14.w|, r14.z
            mov r39.zw, r38.zzzw
            dp3 r14.w, r12.zxyz, r39.xzwx
            dp3 r16.x, r27.zxyz, r39.xzwx
            add r16.x, -r39.y, r16.x
            ge r16.w, r16.x, l(0.000000)
            max r16.x, r5.z, |r16.x|
            movc r16.x, r16.w, r16.x, -r16.x
            max r14.w, -r14.w, l(0.00000010)
            div r14.w, r16.x, r14.w
            min r14.z, |r14.w|, r14.z
            mov r26.x, r31.w
            mov r26.yz, r32.zzwz
            add r18.yzw, r27.xxyz, r26.xxyz
            mad r18.yzw, r12.xxyz, r14.zzzz, r18.yyzw
            dp3 r14.w, r18.yzwy, r18.yzwy
            sqrt r14.w, r14.w
            div r14.z, r14.z, r14.w
            add r14.z, r14.z, r14.z
            sqrt r14.z, r14.z
            mad r14.z, r2.w, l(5.000000), r14.z
            add r14.z, r14.z, l(-0.844800)
            mov r25.y, r29.z
            mov r25.z, r30.x
            dp3 r34.x, r18.yzwy, r25.xyzx
            mov r26.xy, r29.xwxx
            mov r26.z, r30.w
            dp3 r34.y, r18.yzwy, r26.xyzx
            mov r30.x, r29.y
            dp3 r34.z, r18.yzwy, r30.xyzx
            ubfe r14.w, l(9), l(16), r26.w
            utof r34.w, r14.w
            sample_l_indexable(texturecubearray)(float,float,float,float) r18.yzw, r34.xyzw, t8.wxyz, s2, r14.z
            dp3 r29.x, r27.xyzx, r25.xyzx
            dp3 r29.y, r27.xyzx, r26.xyzx
            dp3 r29.z, r27.xyzx, r30.xyzx
            mad_sat r27.xyz, r29.xyzx, r31.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
            mov r32.z, r33.x
            mad r27.xyz, r27.xyzx, r32.xyzx, r33.yzwy
            dp3 r34.x, r7.xyzx, r25.xyzx
            dp3 r34.y, r7.xyzx, r26.xyzx
            dp3 r34.z, r7.xyzx, r30.xyzx
            lt r25.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r34.xyzx
            movc r17.z, r25.x, l(0), l(0.500000)
            add r26.xyz, r17.xyzx, r27.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r26.xyz, r26.xyzx, t17.xyzw, s4, l(0.000000)
            mul r28.xzw, r34.xxyz, r34.xxyz
            mul r28.xzw, r13.wwww, r28.xxzw
            movc r19.z, r25.y, l(0), l(0.500000)
            add r25.xyw, r19.xyxz, r27.xyxz
            sample_l_indexable(texture3d)(float,float,float,float) r25.xyw, r25.xywx, t18.xywz, s4, l(0.000000)
            mul r25.xyw, r28.zzzz, r25.xyxw
            mad r25.xyw, r26.xyxz, r28.xxxx, r25.xyxw
            movc r20.z, r25.z, l(0), l(0.500000)
            add r26.xyz, r20.xyzx, r27.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r26.xyz, r26.xyzx, t19.xyzw, s4, l(0.000000)
            mad r25.xyz, r26.xyzx, r28.wwww, r25.xywx
            sample_l_indexable(texturecubearray)(float,float,float,float) r26.xyz, r34.xyzw, t8.xyzw, s2, l(6.000000)
            mul r27.xyz, r25.xyzx, r26.xyzx
            dp3 r14.z, r27.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r15.xyz, r25.xyzx, r26.xyzx, r15.xyzx
            mul r14.w, r5.w, r14.z
            mul r18.yzw, r13.wwww, r18.yyzw
            dp3 r13.w, r18.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r13.w, r5.w, r14.z, r13.w
            div r13.w, r14.w, r13.w
            mad r24.xyz, r18.yzwy, r13.wwww, r24.xyzx
          endif 
        endif 
      endif 
    endloop 
    mov r23.xyzw, r24.xyzw
    mov r9.yzw, r15.xxyz
    iadd r8.w, r8.w, l(32)
  endloop 
  mov r22.xyzw, r23.zxyw
  mov r21.xyz, r9.yzwy
  mov r22.xyzw, r22.yzxw
else 
  mov r22.x, r21.w
endif 
max r2.w, r22.w, l(1.000000)
rcp r2.w, r2.w
mov_sat r22.w, r22.w
mul r3.xzw, r2.wwww, r21.xxyz
mul r9.yzw, r2.wwww, r22.xxyz
lt r5.z, r22.w, l(0.990000)
if_nz r5.z
  add r5.z, -r22.w, l(1.000000)
  mul r5.w, r5.z, cb2[19].x
  add r11.yzw, v6.xxyz, -cb2[35].xxyz
  mul r14.x, r11.y, cb2[35].w
  mul r14.yz, r11.zzwz, cb2[36].xxyx
  add_sat r11.yzw, r14.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
  mul r14.xy, r11.yzyy, cb2[36].zwzz
  mul r14.z, r11.w, cb2[37].x
  add r11.yzw, r14.xxyz, cb2[37].yyzw
  lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  movc r14.xyz, r14.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
  mov r14.w, l(0)
  add r15.xyz, r11.yzwy, r14.wwxw
  sample_l_indexable(texture3d)(float,float,float,float) r15.xyz, r15.xyzx, t17.xyzw, s4, l(0.000000)
  mul r16.xyz, r7.xyzx, r7.xyzx
  mul r16.xyz, r5.wwww, r16.xyzx
  add r17.xyz, r11.yzwy, r14.wwyw
  sample_l_indexable(texture3d)(float,float,float,float) r17.xyz, r17.xyzx, t18.xyzw, s4, l(0.000000)
  mul r17.xyz, r16.yyyy, r17.xyzx
  mad r15.xyz, r15.xyzx, r16.xxxx, r17.xyzx
  add r11.yzw, r11.yyzw, r14.wwwz
  sample_l_indexable(texture3d)(float,float,float,float) r11.yzw, r11.yzwy, t19.wxyz, s4, l(0.000000)
  mad r11.yzw, r11.yyzw, r16.zzzz, r15.xxyz
  mov r7.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r14.xyz, r7.xyzw, t8.xyzw, s2, l(6.000000)
  mul r11.yzw, r11.yyzw, r14.xxyz
  dp3 r5.w, r11.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
  mad r3.xzw, r21.xxyz, r2.wwww, r11.yyzw
  mov r12.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r11.yzw, r12.xyzw, t8.wxyz, s2, r3.y
  mad r2.w, cb2[19].x, r5.z, -r5.w
  mad r2.w, r2.y, r2.w, r5.w
  mad r9.yzw, r11.yyzw, r2.wwww, r9.yyzw
endif 
add r2.w, r1.w, r2.x
log r2.w, |r2.w|
mul r2.w, r2.w, r2.z
exp r2.w, r2.w
add r2.w, r1.w, r2.w
add_sat r2.w, r2.w, l(-1.000000)
mul r3.xyz, r1.wwww, r3.xzwx
mad r5.zw, r2.xxxy, l(0.000000, 0.000000, 0.984375, 0.984375), l(0.000000, 0.000000, 0.00781250, 0.00781250)
sample_l_indexable(texture2d)(float,float,float,float) r5.zw, r5.zwzz, t5.zwxy, s2, l(0.000000)
mul r9.yzw, r2.wwww, r9.yyzw
mul r14.xyz, r5.zzzz, r9.zwyz
mul r9.yzw, r5.wwww, r9.yyzw
sqrt r1.w, r2.z
mad r1.w, r1.w, l(0.500000), l(0.500000)
mul r1.w, r1.w, r1.w
mul r2.y, r1.w, l(0.500000)
mad r1.w, -r1.w, l(0.500000), l(1.000000)
mad r2.w, r2.x, r1.w, r2.y
mul r1.w, r1.w, r2.w
mul r2.y, r2.w, r2.y
dp3 r2.w, r7.xyzx, cb2[17].xyzx
mov_sat r5.z, r2.w
ge r5.w, l(0.000000), r5.z
if_nz r5.w
  mov r6.w, l(0)
endif 
if_z r5.w
  mul r11.yzw, v6.yyyy, cb2[29].xxyz
  mad r11.yzw, v6.xxxx, cb2[28].xxyz, r11.yyzw
  mad r11.yzw, v6.zzzz, cb2[30].xxyz, r11.yyzw
  add r11.yzw, r11.yyzw, cb2[31].xxyz
  add r5.w, r11.w, -cb2[17].w
  mad r5.w, -r5.w, l(0.00006104), l(1.000000)
  mov_sat r7.w, r5.w
  eq r7.w, r5.w, r7.w
  if_nz r7.w
    mov r7.w, l(0)
    mov r8.w, l(0)
    loop 
      ge r10.w, r7.w, l(3.000000)
      breakc_nz r10.w
      ftou r10.w, r7.w
      add r15.xy, r11.yzyy, -cb2[r10.w + 20].xyxx
      max r12.w, |r15.y|, |r15.x|
      mul r8.w, r12.w, cb2[r10.w + 20].z
      lt r10.w, r8.w, l(1.000000)
      if_nz r10.w
        break 
      endif 
      add r7.w, r7.w, l(1.000000)
      mov r8.w, l(0)
    endloop 
  else 
    mov r7.w, l(3.000000)
    mov r8.w, l(0)
  endif 
  ge r10.w, r7.w, l(3.000000)
  if_nz r10.w
    mul r15.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
    rcp r16.xz, r15.xxxx
    mov r16.y, -r16.z
    mad r15.xyz, r11.yzyy, r16.xyzx, r15.yzyy
    add r16.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r15.xyz, r15.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r15.xyz, r16.xyzx, r15.xyzx
    mul r16.xy, r15.zyzz, cb2[32].xxxx
    round_ni r16.xy, r16.xyxx
    mul r12.w, r16.y, cb2[27].x
    mad r12.w, r12.w, cb2[32].x, r16.x
    ftou r12.w, r12.w
    iadd r12.w, r12.w, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r13.w, r12.w, l(0), t23.xxxx
    and r15.w, r13.w, l(0x40000000)
    ishl r16.x, r13.w, l(2)
    if_z r15.w
      and r15.w, r13.w, l(0x01ffffff)
      iadd r17.x, r12.w, r15.w
      ushr r12.w, r13.w, l(25)
      utof r12.w, r12.w
      mul r15.xyz, r12.wwww, r15.xyzx
      frc r15.xyz, r15.xyzx
      mul r15.xyz, r15.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
      ftou r15.xyz, r15.xyzx
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.z, r17.x, l(0), t23.xxxx
      ushr r16.yz, r15.zzyz, l(0, 6, 6, 0)
      and r12.w, r17.z, l(0xc0000000)
      iadd r13.w, r17.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r13.w, r13.w, l(0), t23.xxxx
      movc r13.w, r16.z, r17.z, r13.w
      ushr r15.w, r13.w, l(13)
      movc r13.w, r16.y, r15.w, r13.w
      and r13.w, r13.w, l(8191)
      iadd r18.x, r13.w, r17.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.x, l(0), t23.xxxx
      mov r17.y, l(0)
      mov r18.y, l(1)
      movc r16.yzw, r12.wwww, r17.xxyz, r18.xxyz
      movc r18.yz, r12.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r19.xy, r15.zyzz, r18.yyyy
      and r19.xy, r19.xyxx, l(1, 1, 0, 0)
      and r13.w, r16.w, l(0xc0000000)
      iadd r15.w, r16.y, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.w, r15.w, l(0), t23.xxxx
      movc r15.w, r19.y, r16.w, r15.w
      ushr r17.w, r15.w, l(13)
      movc r15.w, r19.x, r17.w, r15.w
      and r15.w, r15.w, l(8191)
      iadd r18.x, r15.w, r16.y
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.w, r18.x, l(0), t23.xxxx
      movc r16.yzw, r13.wwww, r16.yyzw, r18.xxzw
      movc r16.yzw, r12.wwww, r17.xxyz, r16.yyzw
      and r12.w, r16.w, l(0xc0000000)
      if_z r12.w
        iadd r12.w, -r16.z, l(6)
        ushr r17.xy, r15.zyzz, r12.wwww
        or r12.w, r16.w, l(0x40000000)
        bfi r13.w, l(1), l(1), r17.y, l(0)
        bfi r13.w, l(1), l(0), r17.x, r13.w
        imul null, r13.w, r13.w, l(10)
        ushr r12.w, r12.w, r13.w
        and r12.w, r12.w, l(1023)
        iadd r17.x, r12.w, r16.y
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.w, r17.x, l(0), t23.xxxx
        iadd r17.yz, r16.zzzz, l(0, 1, 2, 0)
        iadd r12.w, -r17.y, l(6)
        ushr r18.xy, r15.zyzz, r12.wwww
        and r12.w, r17.w, l(0xc0000000)
        or r13.w, r17.w, l(0x40000000)
        bfi r15.w, l(1), l(1), r18.y, l(0)
        bfi r15.w, l(1), l(0), r18.x, r15.w
        imul null, r15.w, r15.w, l(10)
        ushr r13.w, r13.w, r15.w
        and r13.w, r13.w, l(1023)
        iadd r18.x, r13.w, r17.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.x, l(0), t23.xxxx
        mov r18.y, r17.z
        movc r18.xyz, r12.wwww, r17.xywx, r18.xyzx
        iadd r13.w, -r18.y, l(6)
        ushr r17.yz, r15.zzyz, r13.wwww
        and r13.w, r18.z, l(0xc0000000)
        or r15.w, r18.z, l(0x40000000)
        bfi r16.z, l(1), l(1), r17.z, l(0)
        bfi r16.z, l(1), l(0), r17.y, r16.z
        imul null, r16.z, r16.z, l(10)
        ushr r15.w, r15.w, r16.z
        and r15.w, r15.w, l(1023)
        iadd r19.x, r15.w, r18.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.y, r19.x, l(0), t23.xxxx
        movc r17.yz, r13.wwww, r18.xxzx, r19.xxyx
        movc r16.yw, r12.wwww, r17.xxxw, r17.yyyz
      endif 
      and r12.w, r16.w, l(0xc0000000)
      if_z r12.w
        ubfe r13.w, l(14), l(15), r16.w
        utof r13.w, r13.w
        mul r13.w, r13.w, cb2[27].w
        mul r13.w, r13.w, l(0.00006104)
        and r17.xy, r16.wwww, l(0x00007fff, 0x20000000, 0, 0)
        utof r15.w, r17.x
        mul r15.w, r15.w, cb2[27].w
        mul r15.w, r15.w, l(0.00003052)
        and r16.z, r15.y, l(3)
        iadd r16.z, r16.z, r16.y
        iadd r16.z, r16.z, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.z, r16.z, l(0), t23.xxxx
        bfi r17.xzw, l(2, 0, 2, 1), l(3, 0, 1, 4), r15.xxyz, l(0, 0, 0, 0)
        ushr r15.x, r16.z, r17.x
        and r15.x, r15.x, l(255)
        utof r15.x, r15.x
        mul r15.x, r15.w, r15.x
        mad r15.x, r15.x, l(0.00392157), r13.w
        iadd r15.y, r17.z, l(1)
        ubfe r15.z, l(1), l(1), r15.z
        iadd r15.y, r15.z, r15.y
        iadd r15.y, r15.y, r16.y
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.y, r15.y, l(0), t23.xxxx
        ushr r15.y, r15.y, r17.w
        and r15.y, r15.y, l(0x0000ffff)
        utof r15.y, r15.y
        mul r15.y, r15.w, r15.y
        mad r13.w, r15.y, l(0.00001526), r13.w
        movc r16.x, r17.y, r15.x, r13.w
      else 
        and r13.w, r16.w, l(0x80000000)
        iadd r15.x, r16.y, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.x, r15.x, l(0), t23.xxxx
        movc r13.w, r13.w, r15.x, l(0)
        ishl r15.x, r16.w, l(2)
        ushr r15.y, r13.w, l(16)
        f16tof32 r15.y, r15.y
        and r13.w, r13.w, l(0x0000ffff)
        f16tof32 r13.w, r13.w
        mad r15.x, r11.y, r15.y, r15.x
        mad r13.w, r11.z, r13.w, r15.x
        movc r16.x, r12.w, r13.w, r16.x
      endif 
    endif 
    mad r11.w, -cb2[27].z, l(2.000000), r11.w
    lt r11.w, r16.x, r11.w
    movc r6.w, r11.w, l(0), l(1.000000)
  endif 
  if_z r10.w
    if_z cb2[58].y
      ftou r10.w, r7.w
      add r15.xy, r11.yzyy, -cb2[r10.w + 20].xyxx
      mul r15.xy, r15.xyxx, cb2[r10.w + 20].zzzz
      mad r15.xy, r15.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r10.w, cb2[26].y
      add r15.z, r7.w, r10.w
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.w, r15.xyzx, t13.xxxx, s13, r5.w
      sample_l_indexable(texture2darray)(float,float,float,float) r11.w, r15.xyzx, t31.yzwx, s0, l(0.000000)
      add r10.w, r10.w, r11.w
      add_sat r10.w, r10.w, l(-1.000000)
      mul r11.w, r10.w, r10.w
      mul r6.w, r10.w, r11.w
    endif 
    if_nz cb2[58].y
      mov r15.x, -r5.x
      ftou r10.w, r7.w
      add r7.w, r7.w, l(1.000000)
      min r7.w, r7.w, l(2.000000)
      ftou r7.w, r7.w
      add r8.w, -r8.w, l(1.000000)
      mul r8.w, r8.w, l(28.000000)
      ftou r8.w, r8.w
      add r16.xy, r11.yzyy, -cb2[r10.w + 20].xyxx
      mul r16.xy, r16.xyxx, cb2[r10.w + 20].zzzz
      mad r16.xy, r16.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      add r11.yz, r11.yyzy, -cb2[r7.w + 20].xxyx
      mul r11.yz, r11.yyzy, cb2[r7.w + 20].zzzz
      mad r11.yz, r11.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      mov r15.y, r6.x
      mov r15.z, r5.x
      mov r11.w, l(0)
      mov r12.w, l(0)
      loop 
        uge r13.w, r12.w, l(8)
        breakc_nz r13.w
        ult r13.w, r8.w, r12.w
        movc r16.zw, r13.wwww, r11.yyyz, r16.xxxy
        movc r15.w, r13.w, cb2[r7.w + 20].w, cb2[r10.w + 20].w
        movc r13.w, r13.w, r7.w, r10.w
        dp2 r17.x, icb[r12.w + 0].yxyy, r15.xyxx
        dp2 r17.y, icb[r12.w + 0].yxyy, r15.yzyy
        mad r17.xy, r17.xyxx, r15.wwww, r16.zwzz
        iadd r13.w, r13.w, cb2[26].y
        utof r17.z, r13.w
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r13.w, r17.xyzx, t13.xxxx, s13, r5.w
        sample_l_indexable(texture2darray)(float,float,float,float) r15.w, r17.xyzx, t31.yzwx, s0, l(0.000000)
        add r13.w, r13.w, r15.w
        add_sat r13.w, r13.w, l(-1.000000)
        mad r11.w, r13.w, l(0.125000), r11.w
        iadd r12.w, r12.w, l(1)
      endloop 
      mul r5.w, r11.w, r11.w
      mul r6.w, r11.w, r5.w
    endif 
  endif 
endif 
lt r5.w, l(0.000000), r5.z
if_nz r5.w
  lt r5.w, l(0.000000), r6.w
  if_nz r5.w
    mul r5.w, r0.y, cb2[18].w
    mul r5.w, r5.z, r5.w
    if_nz cb2[23].x
      add r15.xyz, v6.xyzx, cb1[24].xyzx
      mov r15.w, l(1.000000)
      dp4 r7.w, cb2[24].xyzw, r15.xyzw
      dp4 r8.w, cb2[25].xyzw, r15.xyzw
      frc r15.x, r7.w
      frc r15.y, r8.w
      iadd r7.w, l(-1), cb2[23].x
      utof r15.z, r7.w
      sample_l_indexable(texture2darray)(float,float,float,float) r11.yzw, r15.xyzx, t20.wxyz, s2, l(0.000000)
      add r11.yzw, r11.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
      mad r11.yzw, cb2[23].yyyy, r11.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
      mul r11.yzw, r11.yyzw, cb2[18].xxyz
    else 
      mov r11.yzw, cb2[18].xxyz
    endif 
    ushr r7.w, cb2[53].x, l(16)
    ult r8.w, l(0), r7.w
    and r8.w, r0.x, r8.w
    if_nz r8.w
      iadd r7.w, r7.w, cb2[0].x
      iadd r7.w, r7.w, l(-1)
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r8.w, r7.w, l(52), t12.xxxx
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r7.w, l(68), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r7.w, l(84), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r7.w, l(132), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r7.w, l(148), t12.xyzw
      mad r10.w, |r2.w|, l(-0.200000), l(0.400000)
      mad r19.xyz, r7.xyzx, r10.wwww, v6.xyzx
      mov r19.w, l(1.000000)
      dp4 r15.x, r15.xyzw, r19.xyzw
      dp4 r15.y, r16.xyzw, r19.xyzw
      mad r15.xy, r15.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      add r15.xy, r18.zwzz, r15.xyxx
      mul r15.xy, r18.xyxx, r15.xyxx
      div r15.zw, r8.wwww, r17.xxxz
      add r16.xy, -r15.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
      ge r16.xy, r15.xyxx, r16.xyxx
      ge r15.zw, r15.zzzw, r15.xxxy
      or r15.zw, r15.zzzw, r16.xxxy
      or r10.w, r15.w, r15.z
      if_z r10.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r10.w, r7.w, l(28), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r7.w, l(100), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.zw, r7.w, l(164), t12.xxxy
        dp4 r7.w, r16.xyzw, r19.xyzw
        mov_sat r15.xy, r15.xyxx
        mad r16.xy, r15.xyxx, r17.xzxx, r17.ywyy
        add r7.w, r15.z, r7.w
        div r7.w, r7.w, r15.w
        max r7.w, r7.w, l(0.00006104)
        and r10.w, r10.w, l(0x0000ffff)
        if_nz cb2[58].y
          mov r15.x, -r5.x
          utof r17.z, r10.w
          mov r15.y, r6.x
          mov r15.z, r5.x
          mov r12.w, l(0)
          mov r13.w, l(0)
          loop 
            ige r15.w, r13.w, l(8)
            breakc_nz r15.w
            dp2 r18.x, icb[r13.w + 0].yxyy, r15.xyxx
            dp2 r18.y, icb[r13.w + 0].yxyy, r15.yzyy
            mad r17.xy, r18.xyxx, r8.wwww, r16.xyxx
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r15.w, r17.xyzx, t9.xxxx, s13, r7.w
            mad r12.w, r15.w, l(0.125000), r12.w
            iadd r13.w, r13.w, l(1)
          endloop 
        else 
          utof r16.z, r10.w
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.w, r16.xyzx, t9.xxxx, s13, r7.w
        endif 
        mul r7.w, r12.w, r12.w
        mul r7.w, r12.w, r7.w
      else 
        mov r7.w, l(1.000000)
      endif 
      mul r6.w, r6.w, r7.w
    else 
      and r7.w, cb2[53].x, l(0x0000ffff)
      ult r8.w, l(0), r7.w
      not r10.w, r0.x
      and r8.w, r8.w, r10.w
      if_nz r8.w
        iadd r7.w, r7.w, cb2[0].x
        iadd r7.w, r7.w, l(-1)
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r8.w, r7.w, l(52), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r7.w, l(68), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r7.w, l(84), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r7.w, l(132), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r7.w, l(148), t12.xyzw
        mad r10.w, |r2.w|, l(-0.200000), l(0.400000)
        mad r19.xyz, r7.xyzx, r10.wwww, v6.xyzx
        mov r19.w, l(1.000000)
        dp4 r15.x, r15.xyzw, r19.xyzw
        dp4 r15.y, r16.xyzw, r19.xyzw
        mad r15.xy, r15.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
        add r15.xy, r18.zwzz, r15.xyxx
        mul r15.xy, r18.xyxx, r15.xyxx
        div r15.zw, r8.wwww, r17.xxxz
        add r16.xy, -r15.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
        ge r16.xy, r15.xyxx, r16.xyxx
        ge r15.zw, r15.zzzw, r15.xxxy
        or r15.zw, r15.zzzw, r16.xxxy
        or r10.w, r15.w, r15.z
        if_z r10.w
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r10.w, r7.w, l(28), t12.xxxx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r7.w, l(100), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.zw, r7.w, l(164), t12.xxxy
          dp4 r7.w, r16.xyzw, r19.xyzw
          mov_sat r15.xy, r15.xyxx
          mad r16.xy, r15.xyxx, r17.xzxx, r17.ywyy
          add r7.w, r15.z, r7.w
          div r7.w, r7.w, r15.w
          max r7.w, r7.w, l(0.00006104)
          and r10.w, r10.w, l(0x0000ffff)
          if_nz cb2[58].y
            mov r15.x, -r5.x
            utof r17.z, r10.w
            mov r15.y, r6.x
            mov r15.z, r5.x
            mov r12.w, l(0)
            mov r13.w, l(0)
            loop 
              ige r15.w, r13.w, l(8)
              breakc_nz r15.w
              dp2 r18.x, icb[r13.w + 0].yxyy, r15.xyxx
              dp2 r18.y, icb[r13.w + 0].yxyy, r15.yzyy
              mad r17.xy, r18.xyxx, r8.wwww, r16.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r15.w, r17.xyzx, t9.xxxx, s13, r7.w
              mad r12.w, r15.w, l(0.125000), r12.w
              iadd r13.w, r13.w, l(1)
            endloop 
          else 
            utof r16.z, r10.w
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.w, r16.xyzx, t9.xxxx, s13, r7.w
          endif 
          mul r7.w, r12.w, r12.w
          mul r7.w, r12.w, r7.w
        else 
          mov r7.w, l(1.000000)
        endif 
        mul r6.w, r6.w, r7.w
      endif 
    endif 
    mad r7.w, -r2.x, l(0.500000), l(1.000000)
    mad r7.w, -r5.z, r7.w, l(1.000000)
    mul r7.w, r7.w, r7.w
    mad r7.w, -r7.w, l(0.620000), l(0.620000)
    add r7.w, -r5.z, r7.w
    mad r7.w, r2.z, r7.w, r5.z
    mul r7.w, r6.w, r7.w
    lt r2.w, l(0.000000), r2.w
    mad r15.xyz, r7.wwww, r11.yzwy, r3.xyzx
    mad r16.xyz, -v6.xyzx, r0.zzzz, cb2[17].xyzx
    dp3 r0.z, r16.xyzx, r16.xyzx
    rsq r0.z, r0.z
    mul r16.xyz, r0.zzzz, r16.xyzx
    dp3 r0.z, r16.xyzx, r10.xyzx
    dp3 r7.w, r7.xyzx, r16.xyzx
    mad r8.w, |r7.w|, r0.y, -|r7.w|
    mad r7.w, |r7.w|, r8.w, l(1.000000)
    mad r5.z, r5.z, r1.w, r2.y
    mul r7.w, r7.w, r7.w
    mul r5.z, r5.z, r7.w
    rcp r5.z, r5.z
    mul r5.z, r5.w, r5.z
    mul r5.z, r5.z, r6.w
    mul r5.z, r5.z, l(0.250000)
    mad r16.xyz, r5.zzzz, r11.yzwy, r9.yzwy
    add_sat r0.z, -r0.z, l(1.000000)
    mul r5.w, r0.z, r0.z
    mul r5.w, r5.w, r5.w
    mul r0.z, r0.z, r5.w
    mul r0.z, r0.z, r5.z
    mad r17.xyz, r0.zzzz, r11.zwyz, r14.xyzx
    mov r15.w, r17.z
    mov r3.w, r14.z
    movc r3.xyzw, r2.wwww, r15.xyzw, r3.xyzw
    mov r17.zw, r16.xxxy
    mov r14.zw, r9.yyyz
    movc r15.xyzw, r2.wwww, r17.xyzw, r14.xyzw
    movc r9.w, r2.w, r16.z, r9.w
    mov r14.z, r3.w
    mov r14.xy, r15.xyxx
    mov r9.yz, r15.zzwz
  endif 
endif 
mov r15.x, -r5.x
not r0.z, r0.x
mad r2.x, -r2.x, l(0.500000), l(1.000000)
mov r16.xy, l(0,0,0,0)
mov r17.w, l(0)
mov r18.xyz, v6.xyzx
mov r18.w, l(1.000000)
mov r19.w, l(1.000000)
mov r15.z, r5.x
mov r20.w, l(1.000000)
mov r21.z, l(1.000000)
mov r22.w, l(1.000000)
mov r15.yw, r6.xxxx
mov r5.y, r15.w
mov r23.w, l(1.000000)
mov r6.y, r15.x
mov r6.z, r5.x
mov r24.w, l(1.000000)
mov r25.x, r6.x
mov r25.y, r15.x
mov r25.z, r5.x
mov r26.x, r6.x
mov r26.y, r15.x
mov r26.z, r5.x
mov r27.x, r6.x
mov r27.y, r15.x
mov r27.z, r5.x
mov r11.yzw, r3.xxyz
mov r28.xyz, r14.zxyz
mov r29.xyz, r9.yzwy
mov r2.w, cb2[58].y
mov r3.w, l(0)
loop 
  uge r5.z, r3.w, cb2[0].x
  breakc_nz r5.z
  ushr r16.z, r3.w, l(5)
  iadd r17.xyz, r13.xyzx, r16.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r5.z, r17.xyzw, t6.yzxw
  mov r17.xyz, r11.yzwy
  mov r30.xyz, r28.xyzx
  mov r31.xyz, r29.xyzx
  mov r5.w, r2.w
  mov r6.w, r5.z
  loop 
    breakc_z r6.w
    firstbit_lo r7.w, r6.w
    ishl r8.w, l(1), r7.w
    and r10.w, r6.w, r8.w
    if_nz r10.w
      xor r6.w, r6.w, r8.w
      iadd r7.w, r3.w, r7.w
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r32.xyzw, r7.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r33.xy, r7.w, l(16), t11.xyxx
      add r32.xyz, r32.xyzx, -v6.xyzx
      mov r33.z, r32.w
      lt r32.xyz, |r32.xyzx|, r33.zxyz
      and r8.w, r32.y, r32.x
      and r8.w, r32.z, r8.w
      if_nz r8.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r7.w, l(0), t12.wxyz
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r7.w, l(16), t12.zxyw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r7.w, l(32), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r7.w, l(48), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r7.w, l(64), t12.yzwx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r7.w, l(80), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r7.w, l(96), t12.yzwx
        ubfe r8.w, l(3), l(24), r33.w
        switch r8.w
          case l(4)
          lt r8.w, l(0.000000), r38.x
          mov r39.xy, r37.zwzz
          mov r39.z, r38.w
          mad r40.xyz, -r39.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r32.yzwy
          add r41.xyz, r40.xyzx, -v6.xyzx
          dp3 r10.w, r39.xyzx, r41.xyzx
          div_sat r12.w, -r10.w, r38.x
          mad r42.xyz, r12.wwww, r39.xyzx, r40.xyzx
          movc r42.xyz, r8.wwww, r42.xyzx, r32.yzwy
          add r42.xyz, r42.xyzx, -v6.xyzx
          dp3 r13.w, r42.xyzx, r42.xyzx
          rsq r14.w, r13.w
          mul r42.xyz, r14.wwww, r42.xyzx
          dp3 r14.w, r7.xyzx, r42.xyzx
          mov_sat r16.z, r14.w
          lt r16.w, l(0.000000), r16.z
          if_nz r16.w
            sqrt r16.w, r13.w
            mul r21.w, r35.x, r35.x
            div r13.w, r21.w, r13.w
            min r13.w, r13.w, l(1.000000)
            mad_sat r42.xy, r16.wwww, r34.xzxx, r34.ywyy
            mul r42.zw, r42.xxxy, r42.xxxy
            mad r42.xy, r42.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
            mul r42.xy, r42.xyxx, r42.zwzz
            mul r13.w, r13.w, r42.x
            mul r13.w, r42.y, r13.w
            lt r16.w, l(0.000000), r13.w
            if_nz r16.w
              ubfe r16.w, l(3), l(27), r33.w
              ine r16.w, r16.w, l(1)
              if_nz r16.w
                mad r16.w, |r14.w|, l(-0.200000), l(0.400000)
                mad r42.xyz, r7.xyzx, r16.wwww, v6.xyzx
                add r42.xyz, -r36.xyzx, r42.xyzx
                max r16.w, |r42.z|, |r42.y|
                max r16.w, r16.w, |r42.x|
                div r16.w, r37.x, r16.w
                add r16.w, r37.y, r16.w
                dp3 r21.w, r42.xyzx, r42.xyzx
                rsq r21.w, r21.w
                max r16.w, r16.w, l(0.00006104)
                and r25.w, r33.w, l(0x0000ffff)
                utof r43.w, r25.w
                mov r25.w, l(0)
                mov r26.w, l(0)
                loop 
                  ige r27.w, r26.w, l(8)
                  breakc_nz r27.w
                  dp2 r44.y, icb[r26.w + 0].yxyy, r15.xyxx
                  dp2 r44.z, icb[r26.w + 0].yxyy, r15.yzyy
                  mul r44.yz, r35.yyyy, r44.yyzy
                  mul r44.x, r11.x, r44.y
                  mul r44.w, r9.x, r44.y
                  mad r43.xyz, r42.xyzx, r21.wwww, r44.xzwx
                  sample_c_lz_indexable(texturecubearray)(float,float,float,float) r27.w, r43.xyzw, t10.xxxx, s13, r16.w
                  mad r25.w, r27.w, l(0.125000), r25.w
                  iadd r26.w, r26.w, l(1)
                endloop 
              else 
                mov r25.w, l(1.000000)
              endif 
              mul r13.w, r13.w, r25.w
              lt r16.w, l(0.000000), r13.w
              if_nz r16.w
                mul r16.w, r0.y, r33.x
                mul r16.w, r16.w, l(0.250000)
                dp3 r21.w, r39.xyzx, r12.xyzx
                dp3 r26.w, r12.xyzx, r41.xyzx
                mad r27.w, -r21.w, r21.w, r38.x
                mad r10.w, r21.w, r26.w, -r10.w
                div_sat r10.w, r10.w, r27.w
                div r21.w, r27.w, r38.x
                mul r21.w, r21.w, l(10.000000)
                min r21.w, r21.w, l(1.000000)
                add r10.w, -r12.w, r10.w
                mad r10.w, r21.w, r10.w, r12.w
                mad r39.xyz, r10.wwww, r39.xyzx, r40.xyzx
                movc r39.xyz, r8.wwww, r39.xyzx, r32.yzwy
                add r39.xyz, r39.xyzx, -v6.xyzx
                dp3 r8.w, r39.xyzx, r39.xyzx
                rsq r8.w, r8.w
                mul r40.xyz, r8.wwww, r39.xyzx
                ubfe r10.w, l(4), l(16), r33.w
                ult r12.w, l(0), r10.w
                and r12.w, r0.x, r12.w
                if_nz r12.w
                  iadd r10.w, r10.w, cb2[0].x
                  iadd r10.w, r10.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.w, r10.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r10.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r10.w, l(116), t12.xyzw
                  mad r21.w, |r14.w|, l(-0.200000), l(0.400000)
                  mad r19.xyz, r7.xyzx, r21.wwww, v6.xyzx
                  dp4 r21.w, r41.xyzw, r19.xyzw
                  dp4 r26.w, r42.xyzw, r19.xyzw
                  lt r27.w, r26.w, r21.w
                  if_z r27.w
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r10.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r10.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r10.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r10.w, l(148), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xy, r10.w, l(164), t12.xyxx
                    dp4 r41.x, r41.xyzw, r19.xyzw
                    dp4 r41.y, r42.xyzw, r19.xyzw
                    div r19.xy, r41.xyxx, r26.wwww
                    mad r19.xy, r19.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r19.xy, r44.zwzz, r19.xyxx
                    mul r19.xy, r44.xyxx, r19.xyxx
                    div r41.xy, r12.wwww, r43.xzxx
                    add r41.zw, -r41.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                    ge r41.zw, r19.xxxy, r41.zzzw
                    ge r41.xy, r41.xyxx, r19.xyxx
                    or r41.xy, r41.xyxx, r41.zwzz
                    or r19.z, r41.y, r41.x
                    mov_sat r19.xy, r19.xyxx
                    mad r41.xy, r19.xyxx, r43.xzxx, r43.ywyy
                    mul r19.x, r26.w, r45.y
                    mad r19.y, r45.x, r26.w, r21.w
                    div r19.x, r19.y, r19.x
                  else 
                    mov r19.z, l(-1)
                  endif 
                  or r19.y, r27.w, r19.z
                  if_z r19.y
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r10.w, r10.w, l(28), t12.xxxx
                    max r19.x, r19.x, l(0.00006104)
                    and r10.w, r10.w, l(0x0000ffff)
                    if_nz r5.w
                      utof r42.z, r10.w
                      mov r19.yz, l(0,0,0,0)
                      loop 
                        ige r21.w, r19.z, l(8)
                        breakc_nz r21.w
                        dp2 r43.x, icb[r19.z + 0].yxyy, r15.xwxx
                        dp2 r43.y, icb[r19.z + 0].xyxx, r5.xyxx
                        mad r42.xy, r43.xyxx, r12.wwww, r41.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.w, r42.xyzx, t9.xxxx, s13, r19.x
                        mad r19.y, r21.w, l(0.125000), r19.y
                        iadd r19.z, r19.z, l(1)
                      endloop 
                    else 
                      utof r41.z, r10.w
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.y, r41.xyzx, t9.xxxx, s13, r19.x
                    endif 
                    mul r10.w, r19.y, r19.y
                    mul r10.w, r19.y, r10.w
                  else 
                    mov r10.w, l(1.000000)
                  endif 
                  mul r13.w, r10.w, r13.w
                else 
                  ubfe r10.w, l(4), l(20), r33.w
                  ult r12.w, l(0), r10.w
                  and r12.w, r0.z, r12.w
                  if_nz r12.w
                    iadd r10.w, r10.w, cb2[0].x
                    iadd r10.w, r10.w, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.w, r10.w, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r10.w, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r10.w, l(116), t12.xyzw
                    mad r19.x, |r14.w|, l(-0.200000), l(0.400000)
                    mad r20.xyz, r7.xyzx, r19.xxxx, v6.xyzx
                    dp4 r19.x, r41.xyzw, r20.xyzw
                    dp4 r19.z, r42.xyzw, r20.xyzw
                    lt r21.w, r19.z, r19.x
                    if_z r21.w
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r10.w, l(68), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r10.w, l(84), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r10.w, l(132), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r10.w, l(148), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xy, r10.w, l(164), t12.xyxx
                      dp4 r41.x, r41.xyzw, r20.xyzw
                      dp4 r41.y, r42.xyzw, r20.xyzw
                      div r20.xy, r41.xyxx, r19.zzzz
                      mad r20.xy, r20.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                      add r20.xy, r44.zwzz, r20.xyxx
                      mul r20.xy, r44.xyxx, r20.xyxx
                      div r41.xy, r12.wwww, r43.xzxx
                      add r41.zw, -r41.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                      ge r41.zw, r20.xxxy, r41.zzzw
                      ge r41.xy, r41.xyxx, r20.xyxx
                      or r41.xy, r41.xyxx, r41.zwzz
                      or r20.z, r41.y, r41.x
                      mov_sat r20.xy, r20.xyxx
                      mad r41.xy, r20.xyxx, r43.xzxx, r43.ywyy
                      mul r20.x, r19.z, r45.y
                      mad r19.x, r45.x, r19.z, r19.x
                      div r19.x, r19.x, r20.x
                    else 
                      mov r20.z, l(-1)
                    endif 
                    or r19.z, r21.w, r20.z
                    if_z r19.z
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r10.w, r10.w, l(28), t12.xxxx
                      max r19.x, r19.x, l(0.00006104)
                      and r10.w, r10.w, l(0x0000ffff)
                      if_nz r5.w
                        utof r20.z, r10.w
                        mov r19.z, l(0)
                        mov r21.w, l(0)
                        loop 
                          ige r26.w, r21.w, l(8)
                          breakc_nz r26.w
                          dp2 r42.x, icb[r21.w + 0].xyxx, r6.xyxx
                          dp2 r42.y, icb[r21.w + 0].yxyy, r6.xzxx
                          mad r20.xy, r42.xyxx, r12.wwww, r41.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r20.x, r20.xyzx, t9.xxxx, s13, r19.x
                          mad r19.z, r20.x, l(0.125000), r19.z
                          iadd r21.w, r21.w, l(1)
                        endloop 
                      else 
                        utof r41.z, r10.w
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.z, r41.xyzx, t9.xxxx, s13, r19.x
                      endif 
                      mul r10.w, r19.z, r19.z
                      mul r10.w, r19.z, r10.w
                    else 
                      mov r10.w, l(1.000000)
                    endif 
                    mul r13.w, r10.w, r13.w
                  endif 
                endif 
                mad r10.w, -r16.z, r2.x, l(1.000000)
                mul r10.w, r10.w, r10.w
                mad r10.w, -r10.w, l(0.620000), l(0.620000)
                add r10.w, -r16.z, r10.w
                mad r10.w, r2.z, r10.w, r16.z
                mul r10.w, r13.w, r10.w
                mov r33.x, r32.x
                lt r12.w, l(0.000000), r14.w
                mad r20.xyz, r10.wwww, r33.xyzx, r17.xyzx
                dp3_sat r10.w, r7.xyzx, r40.xyzx
                mad r39.xyz, r39.xyzx, r8.wwww, r10.xyzx
                dp3 r8.w, r39.xyzx, r39.xyzx
                rsq r8.w, r8.w
                mul r39.xyz, r8.wwww, r39.xyzx
                dp3 r8.w, r39.xyzx, r10.xyzx
                dp3 r14.w, r7.xyzx, r39.xyzx
                mad r16.z, |r14.w|, r0.y, -|r14.w|
                mad r14.w, |r14.w|, r16.z, l(1.000000)
                mad r16.z, r10.w, r1.w, r2.y
                mul r14.w, r14.w, r14.w
                mul r14.w, r16.z, r14.w
                rcp r14.w, r14.w
                mul r10.w, r16.w, r10.w
                mul r10.w, r10.w, r14.w
                mul r10.w, r13.w, r10.w
                mad r39.xyz, r10.wwww, r33.xyzx, r31.xyzx
                add_sat r8.w, -r8.w, l(1.000000)
                mul r13.w, r8.w, r8.w
                mul r13.w, r13.w, r13.w
                mul r8.w, r8.w, r13.w
                mul r8.w, r8.w, r10.w
                mad r40.xyz, r8.wwww, r33.xyzx, r30.xyzx
                movc r17.xyz, r12.wwww, r20.xyzx, r17.xyzx
                movc r30.xyz, r12.wwww, r40.xyzx, r30.xyzx
                movc r31.xyz, r12.wwww, r39.xyzx, r31.xyzx
              endif 
            endif 
          endif 
          break 
          case l(2)
          mov r20.xy, r35.zwzz
          mov r20.z, r36.w
          add r20.xyz, r20.xyzx, -v6.xyzx
          dp3 r8.w, r20.xyzx, r20.xyzx
          rsq r8.w, r8.w
          mul r39.xyz, r8.wwww, r20.xyzx
          dp3 r10.w, r7.xyzx, r39.xyzx
          mov_sat r12.w, r10.w
          lt r13.w, l(0.000000), r12.w
          if_nz r13.w
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r7.w, l(112), t12.yzwx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r7.w, l(128), t12.zxyw
            mov r41.xyz, r39.xyzx
            mov r41.w, r40.y
            dp4 r13.w, r41.xyzw, r18.xyzw
            lt r14.w, r13.w, l(1.000000)
            if_nz r14.w
              mov r42.xyz, l(1.000000,1.000000,1.000000,0)
              mov r14.w, l(0)
            else 
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r7.w, l(172), t12.yzwx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r7.w, l(188), t12.wxyz
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xyzw, r7.w, l(204), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.z, r7.w, l(236), t12.xxxx
              add r46.xyz, r32.yzwy, -v6.xyzx
              mul r16.w, r35.x, r35.x
              dp3 r19.x, r46.xyzx, r46.xyzx
              div r16.w, r16.w, r19.x
              min r16.w, r16.w, l(1.000000)
              mad_sat r34.xy, r13.wwww, r34.xzxx, r34.ywyy
              mul r34.zw, r34.xxxy, r34.xxxy
              mad r34.xy, r34.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
              mul r34.xy, r34.xyxx, r34.zwzz
              mul r16.w, r16.w, r34.x
              mul r16.w, r34.y, r16.w
              mov r36.w, r37.x
              dp4 r34.x, r36.xyzw, r18.xyzw
              mov r46.xyz, r37.yzwy
              mov r46.w, r38.w
              dp4 r34.y, r46.xyzw, r18.xyzw
              div r21.xy, r34.xyxx, r13.wwww
              lt r13.w, r43.w, l(0.00048828)
              if_nz r13.w
                mov r44.y, r45.x
                mad_sat r34.xy, |r21.xyxx|, r44.zwzz, r44.xyxx
                mul r34.zw, r34.xxxy, r34.xxxy
                mad r34.xy, r34.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
                mul r34.xy, r34.xyxx, r34.zwzz
                mul r13.w, r34.y, r34.x
              else 
                mov r43.w, r44.y
                mul_sat r34.xyzw, |r21.yyxx|, r43.xyzw
                log r34.xyzw, r34.xyzw
                mul r34.xyzw, r34.xyzw, r44.xxxx
                exp r34.xyzw, r34.xyzw
                add r34.xy, r34.zwzz, r34.xyxx
                log r34.xy, r34.xyxx
                mul r34.xy, r34.xyxx, r45.xxxx
                exp r34.xy, r34.xyxx
                mul r19.x, r34.x, r44.z
                mad r21.w, r44.w, r34.y, l(-1.000000)
                mad r19.x, r44.w, r34.y, -r19.x
                div_sat r19.x, r21.w, r19.x
                mul r21.w, r19.x, r19.x
                mad r19.x, r19.x, l(-2.000000), l(3.000000)
                mul r13.w, r19.x, r21.w
              endif 
              mul r14.w, r13.w, r16.w
              and r13.w, r16.z, l(255)
              if_nz r13.w
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyz, r7.w, l(220), t12.xyzx
                dp3 r16.z, r45.yzwy, r21.xyzx
                dp3 r16.w, r34.xyzx, r21.xyzx
                frc r34.xy, r16.zwzz
                iadd r13.w, r13.w, l(-1)
                utof r34.z, r13.w
                sample_l_indexable(texture2darray)(float,float,float,float) r42.xyz, r34.xyzx, t20.xyzw, s2, l(0.000000)
              else 
                mov r42.xyz, l(1.000000,1.000000,1.000000,0)
              endif 
            endif 
            mov r32.yz, r33.yyzy
            mul r21.xyw, r42.xyxz, r32.xyxz
            lt r13.w, l(0.000000), r14.w
            if_nz r13.w
              ubfe r13.w, l(3), l(27), r33.w
              ine r13.w, r13.w, l(1)
              if_nz r13.w
                mad r13.w, |r10.w|, l(-0.200000), l(0.400000)
                mad r22.xyz, r7.xyzx, r13.wwww, v6.xyzx
                mov r39.xyz, r38.xyzx
                dp4 r13.w, r39.xyzw, r22.xyzw
                dp4 r16.z, r41.xyzw, r22.xyzw
                ge r16.w, r16.z, r13.w
                if_nz r16.w
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.y, r7.w, l(144), t12.xxxx
                  mov r36.w, r37.x
                  dp4 r32.x, r36.xyzw, r22.xyzw
                  mov r38.xyz, r37.yzwy
                  dp4 r32.y, r38.xyzw, r22.xyzw
                  div r22.xy, r32.xyxx, r16.zzzz
                  mad_sat r22.xy, r22.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  mad r22.xy, r22.xyxx, r40.zwzz, r40.xyxx
                  div r7.w, r13.w, r16.z
                  max r7.w, r7.w, l(0.00006104)
                  and r13.w, r33.w, l(0x0000ffff)
                  if_nz r5.w
                    utof r32.z, r13.w
                    mov r16.zw, l(0,0,0,0)
                    loop 
                      ige r19.x, r16.w, l(8)
                      breakc_nz r19.x
                      dp2 r34.x, icb[r16.w + 0].xyxx, r25.xyxx
                      dp2 r34.y, icb[r16.w + 0].yxyy, r25.xzxx
                      mad r32.xy, r34.xyxx, r35.yyyy, r22.xyxx
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.x, r32.xyzx, t9.xxxx, s13, r7.w
                      mad r16.z, r19.x, l(0.125000), r16.z
                      iadd r16.w, r16.w, l(1)
                    endloop 
                  else 
                    utof r22.z, r13.w
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r16.z, r22.xyzx, t9.xxxx, s13, r7.w
                  endif 
                  mul r7.w, r16.z, r16.z
                  mul r7.w, r16.z, r7.w
                else 
                  mov r7.w, l(1.000000)
                endif 
              else 
                mov r7.w, l(1.000000)
              endif 
              mul r7.w, r7.w, r14.w
              lt r13.w, l(0.000000), r7.w
              if_nz r13.w
                mul r13.w, r0.y, r33.x
                mul r13.w, r12.w, r13.w
                ubfe r14.w, l(4), l(16), r33.w
                ult r16.w, l(0), r14.w
                and r16.w, r0.x, r16.w
                if_nz r16.w
                  iadd r14.w, r14.w, cb2[0].x
                  iadd r14.w, r14.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.w, r14.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r14.w, l(68), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r14.w, l(84), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r14.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r14.w, l(116), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r14.w, l(132), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r14.w, l(148), t12.xyzw
                  mad r19.x, |r10.w|, l(-0.200000), l(0.400000)
                  mad r23.xyz, r7.xyzx, r19.xxxx, v6.xyzx
                  dp4 r22.x, r32.xyzw, r23.xyzw
                  dp4 r22.y, r34.xyzw, r23.xyzw
                  dp4 r19.x, r35.xyzw, r23.xyzw
                  dp4 r22.z, r36.xyzw, r23.xyzw
                  lt r23.x, r22.z, r19.x
                  div r22.xy, r22.xyxx, r22.zzzz
                  mad r22.xy, r22.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r22.xy, r38.zwzz, r22.xyxx
                  mul r22.xy, r38.xyxx, r22.xyxx
                  div r23.yz, r16.wwww, r37.xxzx
                  add r32.xy, -r23.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
                  ge r32.xy, r22.xyxx, r32.xyxx
                  ge r23.yz, r23.yyzy, r22.xxyx
                  or r23.yz, r23.yyzy, r32.xxyx
                  or r23.y, r23.z, r23.y
                  or r23.x, r23.x, r23.y
                  if_z r23.x
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.x, r14.w, l(28), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.yz, r14.w, l(164), t12.xxyx
                    mov_sat r22.xy, r22.xyxx
                    mad r32.xy, r22.xyxx, r37.xzxx, r37.ywyy
                    mul r14.w, r22.z, r23.z
                    mad r19.x, r23.y, r22.z, r19.x
                    div r14.w, r19.x, r14.w
                    max r14.w, r14.w, l(0.00006104)
                    and r19.x, r23.x, l(0x0000ffff)
                    if_nz r5.w
                      utof r22.z, r19.x
                      mov r23.xy, l(0,0,0,0)
                      loop 
                        ige r23.z, r23.y, l(8)
                        breakc_nz r23.z
                        dp2 r33.x, icb[r23.y + 0].xyxx, r26.xyxx
                        dp2 r33.y, icb[r23.y + 0].yxyy, r26.xzxx
                        mad r22.xy, r33.xyxx, r16.wwww, r32.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.x, r22.xyzx, t9.xxxx, s13, r14.w
                        mad r23.x, r22.x, l(0.125000), r23.x
                        iadd r23.y, r23.y, l(1)
                      endloop 
                    else 
                      utof r32.z, r19.x
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.x, r32.xyzx, t9.xxxx, s13, r14.w
                    endif 
                    mul r14.w, r23.x, r23.x
                    mul r14.w, r23.x, r14.w
                  else 
                    mov r14.w, l(1.000000)
                  endif 
                  mul r7.w, r7.w, r14.w
                else 
                  ubfe r14.w, l(4), l(20), r33.w
                  ult r16.w, l(0), r14.w
                  and r16.w, r0.z, r16.w
                  if_nz r16.w
                    iadd r14.w, r14.w, cb2[0].x
                    iadd r14.w, r14.w, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.w, r14.w, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r14.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r14.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r14.w, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r14.w, l(116), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r14.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r14.w, l(148), t12.xyzw
                    mad r19.x, |r10.w|, l(-0.200000), l(0.400000)
                    mad r24.xyz, r7.xyzx, r19.xxxx, v6.xyzx
                    dp4 r22.x, r32.xyzw, r24.xyzw
                    dp4 r22.y, r33.xyzw, r24.xyzw
                    dp4 r19.x, r34.xyzw, r24.xyzw
                    dp4 r22.z, r35.xyzw, r24.xyzw
                    lt r23.y, r22.z, r19.x
                    div r22.xy, r22.xyxx, r22.zzzz
                    mad r22.xy, r22.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r22.xy, r37.zwzz, r22.xyxx
                    mul r22.xy, r37.xyxx, r22.xyxx
                    div r24.xy, r16.wwww, r36.xzxx
                    add r32.xy, -r24.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                    ge r32.xy, r22.xyxx, r32.xyxx
                    ge r24.xy, r24.xyxx, r22.xyxx
                    or r24.xy, r24.xyxx, r32.xyxx
                    or r23.z, r24.y, r24.x
                    or r23.y, r23.y, r23.z
                    if_z r23.y
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.y, r14.w, l(28), t12.xxxx
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r24.xy, r14.w, l(164), t12.xyxx
                      mov_sat r22.xy, r22.xyxx
                      mad r32.xy, r22.xyxx, r36.xzxx, r36.ywyy
                      mul r14.w, r22.z, r24.y
                      mad r19.x, r24.x, r22.z, r19.x
                      div r14.w, r19.x, r14.w
                      max r14.w, r14.w, l(0.00006104)
                      and r19.x, r23.y, l(0x0000ffff)
                      if_nz r5.w
                        utof r22.z, r19.x
                        mov r23.yz, l(0,0,0,0)
                        loop 
                          ige r24.x, r23.z, l(8)
                          breakc_nz r24.x
                          dp2 r24.x, icb[r23.z + 0].xyxx, r27.xyxx
                          dp2 r24.y, icb[r23.z + 0].yxyy, r27.xzxx
                          mad r22.xy, r24.xyxx, r16.wwww, r32.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.x, r22.xyzx, t9.xxxx, s13, r14.w
                          mad r23.y, r22.x, l(0.125000), r23.y
                          iadd r23.z, r23.z, l(1)
                        endloop 
                      else 
                        utof r32.z, r19.x
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.y, r32.xyzx, t9.xxxx, s13, r14.w
                      endif 
                      mul r14.w, r23.y, r23.y
                      mul r14.w, r23.y, r14.w
                    else 
                      mov r14.w, l(1.000000)
                    endif 
                    mul r7.w, r7.w, r14.w
                  endif 
                endif 
                mad r14.w, -r12.w, r2.x, l(1.000000)
                mul r14.w, r14.w, r14.w
                mad r14.w, -r14.w, l(0.620000), l(0.620000)
                add r14.w, -r12.w, r14.w
                mad r14.w, r2.z, r14.w, r12.w
                mul r14.w, r7.w, r14.w
                lt r10.w, l(0.000000), r10.w
                mad r22.xyz, r14.wwww, r21.xywx, r17.xyzx
                mad r20.xyz, r20.xyzx, r8.wwww, r10.xyzx
                dp3 r8.w, r20.xyzx, r20.xyzx
                rsq r8.w, r8.w
                mul r20.xyz, r8.wwww, r20.xyzx
                dp3 r8.w, r20.xyzx, r10.xyzx
                dp3 r14.w, r7.xyzx, r20.xyzx
                mad r16.w, |r14.w|, r0.y, -|r14.w|
                mad r14.w, |r14.w|, r16.w, l(1.000000)
                mad r12.w, r12.w, r1.w, r2.y
                mul r14.w, r14.w, r14.w
                mul r12.w, r12.w, r14.w
                rcp r12.w, r12.w
                mul r12.w, r13.w, r12.w
                mul r7.w, r7.w, r12.w
                mul r7.w, r7.w, l(0.250000)
                mad r20.xyz, r7.wwww, r21.xywx, r31.xyzx
                add_sat r8.w, -r8.w, l(1.000000)
                mul r12.w, r8.w, r8.w
                mul r12.w, r12.w, r12.w
                mul r8.w, r8.w, r12.w
                mul r7.w, r7.w, r8.w
                mad r21.xyw, r7.wwww, r21.xyxw, r30.xyxz
                movc r17.xyz, r10.wwww, r22.xyzx, r17.xyzx
                movc r30.xyz, r10.wwww, r21.xywx, r30.xyzx
                movc r31.xyz, r10.wwww, r20.xyzx, r31.xyzx
              endif 
            endif 
          endif 
          break 
          default 
          break 
        endswitch 
      endif 
    endif 
  endloop 
  mov r11.yzw, r17.xxyz
  mov r28.xyz, r30.xyzx
  mov r29.xyz, r31.xyzx
  iadd r3.w, r3.w, l(32)
endloop 
add r0.xyz, -r8.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r0.xyz, r0.xyzx, r28.xyzx
mad r0.xyz, r29.xyzx, r8.xyzx, r0.xyzx
mad r0.xyz, r11.yzwy, r1.xyzx, r0.xyzx
dp3 r1.x, r0.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
max r1.x, r1.x, l(0.000100)
max r1.w, r1.x, cb1[85].x
mul r1.xyz, r1.wwww, r4.xyzx
mov r4.w, l(1.000000)
movc r1.xyzw, cb0[13].xxxx, r1.xyzw, r4.xyzw
add r0.xyz, r0.xyzx, r1.xyzx
mul r1.w, r1.w, cb0[11].w
max r1.w, r1.w, l(1.000000)
div r1.xyz, r1.xyzx, r1.wwww
dp3_sat r1.x, r1.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
add o0.w, r0.w, r1.x
lt r0.w, l(0.000000), cb2[9].z
if_nz r0.w
  dp3 r0.w, v6.xyzx, v6.xyzx
  rsq r1.x, r0.w
  mul r1.xyz, r1.xxxx, v6.xyzx
  sqrt r0.w, r0.w
  lt r1.w, l(0.000000), cb2[13].w
  if_nz r1.w
    mad r2.xy, r0.wwww, cb2[15].xyxx, cb2[14].zwzz
    mul r2.xy, r2.xyxx, cb2[16].xyxx
    lt r1.w, l(0.010000), |v6.z|
    mul r2.zw, v6.zzzz, cb2[15].zzzw
    mul r3.xy, r2.zwzz, l(-1.442695, -1.442695, 0.000000, 0.000000)
    exp r3.xy, r3.xyxx
    add r3.xy, -r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    div r2.zw, r3.xxxy, r2.zzzw
    mul r2.zw, r2.zzzw, r2.xxxy
    movc r2.xy, r1.wwww, r2.zwzz, r2.xyxx
    mul r2.xzw, r2.xxxx, cb2[12].xxyz
    exp r2.xzw, r2.xxzw
    mul r3.xyz, r2.yyyy, cb2[12].xyzx
    exp r3.xyz, r3.xyzx
    add r3.xyz, -r2.xzwx, r3.xyzx
    mad r2.xyz, cb2[13].wwww, r3.xyzx, r2.xzwx
  else 
    mad r1.w, r0.w, cb2[15].x, cb2[14].z
    mul r1.w, r1.w, cb2[16].x
    lt r2.w, l(0.010000), |v6.z|
    mul r3.x, v6.z, cb2[15].z
    mul r3.y, r3.x, l(-1.442695)
    exp r3.y, r3.y
    add r3.y, -r3.y, l(1.000000)
    div r3.x, r3.y, r3.x
    mul r3.x, r1.w, r3.x
    movc r1.w, r2.w, r3.x, r1.w
    mul r3.xyz, r1.wwww, cb2[12].xyzx
    exp r2.xyz, r3.xyzx
  endif 
  mad r2.xyz, r2.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r2.xyz, r2.xyzx, -cb2[9].zzzz
  dp3 r1.x, cb2[7].yzwy, -r1.xyzx
  mad r1.y, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r1.z, cb2[8].w, -r1.x, l(1.000000)
  mul r1.z, r1.z, r1.z
  mul r1.z, r1.z, l(12.566371)
  div r1.y, r1.y, r1.z
  add r0.w, r0.w, -cb2[10].w
  mul_sat r0.w, r0.w, cb2[11].w
  mul r0.w, r0.w, r1.y
  mov_sat r1.x, r1.x
  mad r1.x, r1.x, r1.x, l(1.000000)
  mad r1.x, r1.x, l(0.05968310), l(-1.000000)
  mad r1.x, cb2[8].z, r1.x, l(1.000000)
  mul r1.yzw, r0.wwww, cb2[11].xxyz
  mad r1.xyz, r1.xxxx, cb2[10].xyzx, r1.yzwy
  mul r1.xyz, r1.xyzx, cb2[9].wwww
  add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r1.xyz, r1.xyzx, r3.xyzx
  mad r1.xyz, r0.xyzx, r2.xyzx, r1.xyzx
else 
  mul r0.w, v6.z, cb2[6].x
  mad r1.w, cb2[6].x, v6.z, cb2[5].x
  lt r2.x, |r0.w|, l(0.000100)
  min r2.y, r1.w, l(64.000000)
  mul r2.y, r2.y, l(1.442695)
  exp r2.y, r2.y
  mov_sat r2.z, cb2[6].z
  lt r2.w, r1.w, l(0.000000)
  add r1.w, r1.w, l(1.000000)
  movc r1.w, r2.w, r2.y, r1.w
  add r1.w, r1.w, -cb2[6].z
  movc r0.w, r2.x, l(1.000000), r0.w
  div r0.w, r1.w, r0.w
  movc r0.w, r2.x, r2.z, r0.w
  mul r0.w, r0.w, cb2[5].z
  dp3 r1.w, v6.xyzx, v6.xyzx
  sqrt r2.x, r1.w
  mad r0.w, r0.w, r2.x, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  rsq r1.w, r1.w
  mul r2.xyz, r1.wwww, v6.xyzx
  dp3 r1.w, cb2[7].yzwy, r2.xyzx
  mad_sat r1.w, cb2[8].y, r1.w, cb2[8].x
  add r2.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r2.xyzw, r1.wwww, r2.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r2.w
  add r2.xyz, -r0.xyzx, r2.xyzx
  mad r1.xyz, r0.wwww, r2.xyzx, r0.xyzx
endif 
mul r0.xyz, r1.xyzx, cb1[85].yyyy
ge r1.xyz, r0.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.xyz, r0.xyzx, r1.xyzx
min o0.xyz, r0.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
ret 
// Approximately 2610 instruction slots used
