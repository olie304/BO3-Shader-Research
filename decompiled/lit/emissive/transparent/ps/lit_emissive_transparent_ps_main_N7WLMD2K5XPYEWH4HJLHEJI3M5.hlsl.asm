//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:34:32 2021
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float3 colorTint;                  // Offset:  160 Size:    12
//   float baseNormalHeight;            // Offset:  172 Size:     4
//   float2 glossRange;                 // Offset:  176 Size:     8
//   uint zFeatherComputeSprites;       // Offset:  184 Size:     4 [unused]
//   float hdrScale;                    // Offset:  188 Size:     4
//   float emissiveFalloffPower;        // Offset:  192 Size:     4
//   float3 emissiveTint1;              // Offset:  196 Size:    12
//   bool relativeHDR;                  // Offset:  208 Size:     4
//   bool invertFalloff;                // Offset:  212 Size:     4
//   float layerDepth;                  // Offset:  216 Size:     4
//   float uvMotionToggle1;             // Offset:  220 Size:     4 [unused]
//      = 0x00000000 
//   float2 scriptControl;              // Offset:  224 Size:     8 [unused]
//   float3 tint1;                      // Offset:  240 Size:    12
//   float3 tint2;                      // Offset:  256 Size:    12
//   float3 tint3;                      // Offset:  272 Size:    12
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16 [unused]
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16
//   float4 debugNormalOverride;        // Offset:  960 Size:    16
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16
//   float4 debugGlossOverride;         // Offset:  992 Size:    16
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for shaderConstantSetBuffer
// {
//
//   struct GpuShaderConstantSet
//   {
//       
//       float4 scriptVector0;          // Offset:    0
//       float4 scriptVector1;          // Offset:   16
//       float4 scriptVector2;          // Offset:   32
//       float4 scriptVector3;          // Offset:   48
//       float4 scriptVector4;          // Offset:   64
//       float4 scriptVector5;          // Offset:   80
//       float4 scriptVector6;          // Offset:   96
//       float4 scriptVector7;          // Offset:  112
//       float4 weaponParam0;           // Offset:  128
//       float4 weaponParam1;           // Offset:  144
//       float4 weaponParam2;           // Offset:  160
//       float4 weaponParam3;           // Offset:  176
//       float4 weaponParam4;           // Offset:  192
//       float4 weaponParam5;           // Offset:  208
//       float4 weaponParam6;           // Offset:  224
//       float4 weaponParam7;           // Offset:  240
//       float4 characterParam0;        // Offset:  256
//       float4 characterParam1;        // Offset:  272
//       float4 characterParam2;        // Offset:  288
//       float4 characterParam3;        // Offset:  304
//       float4 characterParam4;        // Offset:  320
//       float4 characterParam5;        // Offset:  336
//       float4 characterParam6;        // Offset:  352
//       float4 characterParam7;        // Offset:  368
//
//   } $Element;                        // Offset:    0 Size:   384
//
// }
//
// Resource bind info for modelInstanceBuffer
// {
//
//   struct ModelInstanceData
//   {
//       
//       uint boneArrayIndex;           // Offset:    0
//       uint shaderConstantSet;        // Offset:    4
//       uint flagsAndPrevFrameIndex;   // Offset:    8
//       uint worldMatrix;              // Offset:   12
//       uint siegeAnimStateOffset;     // Offset:   16
//       uint prevFrameSiegeAnimStateOffset;// Offset:   20
//
//   } $Element;                        // Offset:    0 Size:    24
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for forwardDecalConstants
// {
//
//   struct CoreDecalConstantsPack
//   {
//       
//       uint4 data[8];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   128
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// colorSampler                      sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// normalSampler                     sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// shaderConstantSetBuffer           texture  struct         r/o             t0      1 
// modelInstanceBuffer               texture  struct         r/o             t4      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// colorMap                          texture  float4          2d            t21      1 
// normalMap                         texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// emissiveMap                       texture  float4          2d            t24      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// visibleDecals                     texture    uint     2darray            t35      1 
// forwardDecalConstants             texture  struct         r/o            t36      1 
// materialTexBC7                    texture  float4     2darray            t42      1 
// materialTexBC3                    texture  float4     2darray            t43      1 
// materialTexBC7linear              texture  float4     2darray            t44      1 
// materialTexMask                   texture  float4     2darray            t45      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyz 
// COLOR                    0   xyz         1     NONE   float   xyz 
// COLOR                    1      w        1     NONE   float      w
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 4   x           3     NONE    uint   x   
// TEXCOORD                 1   xyz         4     NONE   float   xyz 
// TEXCOORD                 2   xyz         5     NONE   float   xyz 
// TEXCOORD                 3   xyz         6     NONE   float   xyz 
// OFFPOSITION              0   xyz         7     NONE   float   xyz 
// SV_IsFrontFace           0   x           8    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[18], immediateIndexed
dcl_constantbuffer CB1[93], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_structured t0, 384
dcl_resource_structured t4, 24
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2darray (float,float,float,float) t31
dcl_resource_texture2darray (uint,uint,uint,uint) t35
dcl_resource_structured t36, 128
dcl_resource_texture2darray (float,float,float,float) t42
dcl_resource_texture2darray (float,float,float,float) t43
dcl_resource_texture2darray (float,float,float,float) t44
dcl_resource_texture2darray (float,float,float,float) t45
dcl_input_ps_siv linear noperspective v0.xyz, position
dcl_input_ps linear v1.xyz
dcl_input_ps linear v1.w
dcl_input_ps linear v2.xy
dcl_input_ps constant v3.x
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyz
dcl_input_ps_sgv constant v8.x, is_front_face
dcl_output o0.xyzw
dcl_temps 47
ld_structured_indexable(structured_buffer, stride=24)(mixed,mixed,mixed,mixed) r0.x, v3.x, l(4), t4.xxxx
ld_structured_indexable(structured_buffer, stride=384)(mixed,mixed,mixed,mixed) r0.xy, r0.x, l(36), t0.xyxx
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v2.xyxx, t21.xyzw, s1
add r2.xyz, cb0[10].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r2.xyz, r1.wwww, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r1.xyz, r1.xyzx, r2.xyzx
mul r1.xyz, r1.xyzx, v1.xyzx
mul r0.z, r1.w, v1.w
add r0.w, -cb0[11].x, cb0[11].y
mul_sat r2.x, cb0[11].y, l(0.05882353)
sample_indexable(texture2d)(float,float,float,float) r2.yzw, v2.xyxx, t22.wxyz, s3
add r2.yzw, r2.yyzw, l(0.000000, -0.500000, -0.500000, -0.000000)
mad r2.yzw, cb0[10].wwww, r2.yyzw, l(0.000000, 0.500000, 0.500000, 0.000000)
mad r2.yz, r2.yyzy, l(0.000000, 1.99218750, 1.99218750, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
dp2 r3.x, r2.yzyy, r2.yzyy
add r3.x, -r3.x, l(1.000000)
max r3.x, r3.x, l(0.000000)
sqrt r3.x, r3.x
mul r2.w, r2.w, r2.w
mul r2.w, r2.w, l(0.33333334)
min r2.w, r2.w, l(1.000000)
movc r3.y, v8.x, l(1.000000), l(-1.000000)
dp3 r3.z, v4.xyzx, v4.xyzx
rsq r3.z, r3.z
mul r4.xyz, r3.zzzz, v4.xyzx
mul r4.xyz, r3.yyyy, r4.xyzx
dp3 r3.z, v5.xyzx, v5.xyzx
rsq r3.z, r3.z
mul r5.xyz, r3.zzzz, v5.xyzx
mul r5.xyz, r3.yyyy, r5.xyzx
dp3 r3.z, v6.xyzx, v6.xyzx
rsq r3.z, r3.z
mul r6.xyz, r3.zzzz, v6.xyzx
mul r6.xyz, r3.yyyy, r6.xyzx
mul r2.x, r2.x, l(-17.000000)
exp r2.x, r2.x
add r2.x, r2.x, r2.w
log r2.x, r2.x
mul r2.x, r2.x, l(-0.05882353)
max r2.x, r2.x, l(0.000000)
mul r7.xyz, r2.zzzz, r6.xyzx
mad r7.xyz, r5.xyzx, r2.yyyy, r7.xyzx
mad r3.xzw, r4.xxyz, r3.xxxx, r7.xxyz
dp3 r2.y, r3.xzwx, r3.xzwx
rsq r2.y, r2.y
mul r3.xzw, r2.yyyy, r3.xxzw
mad r0.w, cb1[62].x, r0.w, cb0[11].x
mul_sat r0.w, r0.w, l(0.05882353)
mul r0.w, r0.w, l(-17.000000)
exp r0.w, r0.w
add r0.w, r0.w, r2.w
log r0.w, r0.w
mul r0.w, r0.w, l(-0.05882353)
max r0.w, r0.w, l(0.000000)
lt r2.y, l(0.000000), cb1[64].w
if_nz r2.y
  ftoi r2.y, cb1[64].w
  lod r2.z, v2.xyxx, t21.y, s1
  lod r2.w, v2.xyxx, t21.x, s1
  lt r2.z, r2.z, r2.w
  lt r2.w, l(0.000000), r2.w
  and r7.xyz, r2.yyyy, l(1, 2, 4, 0)
  movc r8.xyz, r7.xxxx, l(1.000000,0,1.000000,0), r1.xyzx
  movc r7.xyw, r7.yyyy, l(0,1.000000,0,1.000000), r1.xyxz
  movc r7.xyw, r2.wwww, r8.xyxz, r7.xyxw
  movc r8.xyz, r7.zzzz, l(0,1.000000,0,0), r1.xyzx
  movc r1.xyz, r2.zzzz, r7.xywx, r8.xyzx
endif 
add r2.yzw, -r1.xxyz, cb1[58].xxyz
mad r1.xyz, cb1[58].wwww, r2.yzwy, r1.xyzx
mad r1.w, -r1.w, v1.w, cb1[59].x
mad r0.z, cb1[59].w, r1.w, r0.z
add r2.yzw, cb1[61].xxyz, l(0.000000, -0.040000, -0.040000, -0.040000)
mad r2.yzw, cb1[61].wwww, r2.yyzw, l(0.000000, 0.040000, 0.040000, 0.040000)
add r0.w, -r2.x, r0.w
mad r0.w, cb1[62].w, r0.w, r2.x
add r1.w, cb1[63].x, l(-1.000000)
mad r1.w, cb1[63].w, r1.w, l(1.000000)
movc r7.xyz, v8.xxxx, v4.xyzx, -v4.xyzx
dp3 r2.x, r7.xyzx, r7.xyzx
rsq r2.x, r2.x
mad r7.xyz, r7.xyzx, r2.xxxx, -r3.xzwx
mad r3.xzw, cb1[60].wwww, r7.xxyz, r3.xxzw
ge r2.x, v0.z, l(0.984375)
mul r4.w, v0.z, l(1.01587307)
mad r5.w, v0.z, l(64.000000), l(-63.000000)
movc r2.x, r2.x, r5.w, r4.w
max r2.x, r2.x, l(0.00000001)
rcp r2.x, r2.x
ftou r7.xy, v0.yxyy
deriv_rtx_coarse r8.xyz, v7.xyzx
deriv_rty_coarse r9.xyz, v7.xyzx
iadd r4.w, cb2[0].y, cb2[0].x
add r10.xyz, v7.xyzx, cb1[24].xyzx
mul r2.x, r2.x, l(0.00781250)
min r2.x, r2.x, l(15.000000)
ftou r2.x, r2.x
ushr r11.xy, r7.yxyy, l(6, 6, 0, 0)
ishl r11.z, r2.x, l(4)
and r2.x, cb2[57].z, l(-32)
iadd r5.w, -r2.x, cb2[57].z
mov r12.xy, l(0,0,0,0)
mov r13.w, l(0)
mov r10.w, l(1.000000)
mov r14.xyz, l(0,0,0,0)
mov r15.xyz, l(0,0,0,0)
mov r16.xyz, l(0,0,0,0)
mov r6.w, l(0)
mov r7.zw, l(0,0,0,0)
loop 
  uge r8.w, r7.w, cb2[57].z
  breakc_nz r8.w
  ushr r12.z, r7.w, l(5)
  iadd r13.xyz, r11.xyzx, r12.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r8.w, r13.xyzw, t35.yzwx
  ieq r9.w, r2.x, r7.w
  ubfe r11.w, r5.w, l(0), r8.w
  movc r8.w, r9.w, r11.w, r8.w
  iadd r9.w, r4.w, r7.w
  mov r13.xyz, r14.xyzx
  mov r17.xyz, r15.xyzx
  mov r18.xyz, r16.xyzx
  mov r11.w, r6.w
  mov r12.z, r7.z
  mov r12.w, r8.w
  loop 
    breakc_z r12.w
    firstbit_lo r14.w, r12.w
    ishl r15.w, l(1), r14.w
    and r16.w, r12.w, r15.w
    if_nz r16.w
      xor r12.w, r12.w, r15.w
      iadd r15.w, r9.w, r14.w
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r19.xyzw, r15.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r20.xy, r15.w, l(16), t11.xyxx
      add r19.xyz, r19.xyzx, -v7.xyzx
      mov r20.z, r19.w
      lt r19.xyz, |r19.xyzx|, r20.zxyz
      and r15.w, r19.y, r19.x
      and r15.w, r19.z, r15.w
      if_nz r15.w
        iadd r14.w, r7.w, r14.w
        ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r19.xyz, r14.w, l(0), t36.xyzx
        ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r20.xyz, r14.w, l(16), t36.xyzx
        ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r21.xyz, r14.w, l(32), t36.xyzx
        mov r22.x, r19.x
        mov r22.y, r20.x
        mov r22.z, r21.x
        dp3 r15.w, r22.xyzx, r22.xyzx
        rsq r15.w, r15.w
        mul r23.xyz, r15.wwww, r22.xyzx
        dp3 r15.w, r23.xyzx, v4.xyzx
        ge r15.w, r15.w, l(0.500000)
        if_nz r15.w
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r24.xyw, r14.w, l(48), t36.xyxz
          mov r22.w, r24.x
          dp4 r22.x, r10.xyzw, r22.xyzw
          mov r25.x, r19.y
          mov r25.y, r20.y
          mov r25.z, r21.y
          mov r25.w, r24.y
          dp4 r22.y, r10.xyzw, r25.xyzw
          mov r24.x, r19.z
          mov r24.y, r20.z
          mov r24.z, r21.z
          dp4 r22.z, r10.xyzw, r24.xyzw
          lt r19.xyz, |r22.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
          and r15.w, r19.y, r19.x
          and r15.w, r19.z, r15.w
          if_nz r15.w
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r19.xyzw, r14.w, l(64), t36.xyzw
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r20.xyzw, r14.w, l(80), t36.xyzw
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r21.xyzw, r14.w, l(96), t36.xyzw
            dp3 r26.x, r8.xyzx, r25.xyzx
            dp3 r26.y, r8.xyzx, r24.xyzx
            dp3 r27.x, r9.xyzx, r25.xyzx
            dp3 r27.y, r9.xyzx, r24.xyzx
            mad r22.xy, r22.yzyy, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
            mul r26.xyz, r26.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
            mul r27.xyz, r27.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
            and r22.zw, r20.yyyz, l(0, 0, 0x0000ffff, 0x0000ffff)
            if_nz r22.z
              ubfe r15.w, l(4), l(24), r20.w
              ishl r15.w, l(1), r15.w
              ushr r16.w, r20.w, l(28)
              ishl r16.w, l(1), r16.w
              ieq r17.w, r22.z, l(4)
              if_nz r17.w
                and r17.w, r20.w, l(4095)
                ubfe r18.w, l(12), l(12), r20.w
                and r23.w, r21.w, l(1023)
                utof r28.xz, r15.wwww
                utof r28.y, r16.w
                mad r29.xy, r22.xyxx, r28.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                add r29.zw, r28.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                min r29.xy, r29.zwzz, r29.xyxx
                utof r30.x, r17.w
                utof r30.y, r18.w
                add r29.xy, r29.xyxx, r30.xyxx
                mul r29.xy, r29.xyxx, cb1[83].xyxx
                utof r29.z, r23.w
                mul r30.xyz, r26.zyzz, cb1[83].xyxx
                mul r30.xyz, r28.xyzx, r30.xyzx
                mul r31.xyz, r27.zyzz, cb1[83].xyxx
                mul r28.xyz, r28.xyzx, r31.xyzx
                sample_d_indexable(texture2darray)(float,float,float,float) r28.xyzw, r29.xyzx, t42.xyzw, s4, r30.xyzx, r28.xyzx
              else 
                ieq r17.w, r22.z, l(1)
                if_nz r17.w
                  and r17.w, r20.w, l(4095)
                  ubfe r18.w, l(12), l(12), r20.w
                  and r20.w, r21.w, l(1023)
                  utof r29.xz, r15.wwww
                  utof r29.y, r16.w
                  mad r30.xy, r22.xyxx, r29.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r30.zw, r29.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r30.xy, r30.zwzz, r30.xyxx
                  utof r31.x, r17.w
                  utof r31.y, r18.w
                  add r30.xy, r30.xyxx, r31.xyxx
                  mul r30.xy, r30.xyxx, cb1[83].zwzz
                  utof r30.z, r20.w
                  mul r31.xyz, r26.zyzz, cb1[83].zwzz
                  mul r31.xyz, r29.xyzx, r31.xyzx
                  mul r32.xyz, r27.zyzz, cb1[83].zwzz
                  mul r29.xyz, r29.xyzx, r32.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r28.xyzw, r30.xyzx, t43.xyzw, s4, r31.xyzx, r29.xyzx
                else 
                  mov r28.xyzw, l(1.000000,1.000000,1.000000,1.000000)
                endif 
              endif 
              mul r19.xyz, r19.xyzx, r28.xyzx
              mul r15.w, r19.w, r28.w
            else 
              mov r19.xyz, l(0,0,0,0)
              mov r15.w, l(0)
            endif 
            ne r16.w, r20.x, l(1.000000)
            add r17.w, r19.w, r15.w
            mad_sat r17.w, r17.w, r20.x, -r20.x
            movc r15.w, r16.w, r17.w, r15.w
            if_nz r22.w
              ubfe r16.w, l(4), l(24), r21.y
              ishl r16.w, l(1), r16.w
              ushr r17.w, r21.y, l(28)
              ishl r17.w, l(1), r17.w
              ieq r18.w, r22.w, l(2)
              if_nz r18.w
                and r18.w, r21.y, l(4095)
                ubfe r20.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r21.yyyw
                utof r28.xz, r16.wwww
                utof r28.y, r17.w
                mad r29.xy, r22.xyxx, r28.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                add r29.zw, r28.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                min r29.xy, r29.zwzz, r29.xyxx
                utof r30.x, r18.w
                utof r30.y, r20.x
                add r29.xy, r29.xyxx, r30.xyxx
                mul r29.xy, r29.xyxx, cb1[84].xyxx
                utof r29.z, r20.w
                mul r30.xyz, r26.zyzz, cb1[84].xyxx
                mul r30.xyz, r28.xyzx, r30.xyzx
                mul r31.xyz, r27.zyzz, cb1[84].xyxx
                mul r28.xyz, r28.xyzx, r31.xyzx
                sample_d_indexable(texture2darray)(float,float,float,float) r18.w, r29.xyzx, t45.yzwx, s4, r30.xyzx, r28.xyzx
              else 
                ieq r19.w, r22.w, l(4)
                if_nz r19.w
                  and r19.w, r21.y, l(4095)
                  ubfe r20.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r21.yyyw
                  utof r28.xz, r16.wwww
                  utof r28.y, r17.w
                  mad r22.zw, r22.xxxy, r28.zzzy, l(0.000000, 0.000000, 0.500000, 0.500000)
                  add r29.xy, r28.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r22.zw, r22.zzzw, r29.xxxy
                  utof r29.x, r19.w
                  utof r29.yz, r20.xxwx
                  add r22.zw, r22.zzzw, r29.xxxy
                  mul r29.xy, r22.zwzz, cb1[83].xyxx
                  mul r30.xyz, r26.zyzz, cb1[83].xyxx
                  mul r30.xyz, r28.xyzx, r30.xyzx
                  mul r31.xyz, r27.zyzz, cb1[83].xyxx
                  mul r28.xyz, r28.xyzx, r31.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r18.w, r29.xyzx, t42.yzwx, s4, r30.xyzx, r28.xyzx
                else 
                  and r19.w, r21.y, l(4095)
                  ubfe r20.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r21.yyyw
                  utof r28.xz, r16.wwww
                  utof r28.y, r17.w
                  mad r22.zw, r22.xxxy, r28.zzzy, l(0.000000, 0.000000, 0.500000, 0.500000)
                  add r29.xy, r28.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r22.zw, r22.zzzw, r29.xxxy
                  utof r29.x, r19.w
                  utof r29.yz, r20.xxwx
                  add r22.zw, r22.zzzw, r29.xxxy
                  mul r29.xy, r22.zwzz, cb1[83].zwzz
                  mul r30.xyz, r26.zyzz, cb1[83].zwzz
                  mul r30.xyz, r28.xyzx, r30.xyzx
                  mul r31.xyz, r27.zyzz, cb1[83].zwzz
                  mul r28.xyz, r28.xyzx, r31.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r18.w, r29.xyzx, t43.yzwx, s4, r30.xyzx, r28.xyzx
                endif 
              endif 
              mad r28.xyz, r18.wwww, l(0.960000, 0.960000, 0.960000, 0.000000), l(0.040000, 0.040000, 0.040000, 0.000000)
              add_sat r16.w, -r18.w, l(1.000000)
              mul r19.xyz, r16.wwww, r19.xyzx
            else 
              mov r28.xyz, l(0.040000,0.040000,0.040000,0)
            endif 
            ushr r20.xy, r20.zyzz, l(16, 16, 0, 0)
            if_nz r20.x
              ieq r16.w, r20.x, l(2)
              if_nz r16.w
                ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r14.w, r14.w, l(112), t36.xxxx
                ubfe r20.zw, l(0, 0, 4, 12), l(0, 0, 24, 12), r21.zzzz
                ishl r16.w, l(1), r20.z
                ushr r17.w, r21.z, l(28)
                ishl r17.w, l(1), r17.w
                and r18.w, r21.z, l(4095)
                and r14.w, r14.w, l(1023)
                utof r29.xz, r16.wwww
                utof r29.y, r17.w
                mad r21.yz, r22.xxyx, r29.zzyz, l(0.000000, 0.500000, 0.500000, 0.000000)
                add r22.zw, r29.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                min r21.yz, r21.yyzy, r22.zzwz
                utof r30.x, r18.w
                utof r30.y, r20.w
                add r20.zw, r21.yyyz, r30.xxxy
                mul r30.xy, r20.zwzz, cb1[84].xyxx
                utof r30.z, r14.w
                mul r31.xyz, r26.zyzz, cb1[84].xyxx
                mul r31.xyz, r29.xyzx, r31.xyzx
                mul r32.xyz, r27.zyzz, cb1[84].xyxx
                mul r29.xyz, r29.xyzx, r32.xyzx
                sample_d_indexable(texture2darray)(float,float,float,float) r14.w, r30.xyzx, t45.yzwx, s4, r31.xyzx, r29.xyzx
              else 
                ieq r16.w, r20.x, l(6)
                movc r14.w, r16.w, l(0), l(1.000000)
              endif 
            else 
              mov r14.w, l(1.000000)
            endif 
            mul_sat r14.w, r14.w, l(0.76470590)
            if_nz r20.y
              ieq r16.w, r20.y, l(3)
              if_nz r16.w
                ubfe r20.xyz, l(4, 12, 10, 0), l(24, 12, 10, 0), r21.xxwx
                ishl r16.w, l(1), r20.x
                ushr r17.w, r21.x, l(28)
                ishl r17.w, l(1), r17.w
                and r18.w, r21.x, l(4095)
                utof r21.xz, r16.wwww
                utof r21.y, r17.w
                mad r20.xw, r22.xxxy, r21.xxxy, l(0.500000, 0.000000, 0.000000, 0.500000)
                add r22.xy, r21.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                min r20.xw, r20.xxxw, r22.xxxy
                utof r22.x, r18.w
                utof r22.yz, r20.yyzy
                add r20.xy, r20.xwxx, r22.xyxx
                mul r22.xy, r20.xyxx, cb1[84].zwzz
                mul r20.xyz, r26.xyzx, cb1[84].zwzz
                mul r20.xyz, r21.xyzx, r20.xyzx
                mul r26.xyz, r27.xyzx, cb1[84].zwzz
                mul r21.xyz, r21.xyzx, r26.xyzx
                sample_d_indexable(texture2darray)(float,float,float,float) r20.xyz, r22.xyzx, t44.xyzw, s4, r20.xyzx, r21.xyzx
              else 
                mov r20.xyz, l(0.500000,0.500000,1.000000,0)
              endif 
              mad r20.xy, r20.xyxx, l(1.99218750, 1.99218750, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
              dp2 r16.w, r20.xyxx, r20.xyxx
              add r16.w, -r16.w, l(1.000000)
              max r16.w, r16.w, l(0.000000)
              sqrt r16.w, r16.w
              mul r17.w, r20.z, r20.z
              mul r17.w, r17.w, l(0.33333334)
              min r17.w, r17.w, l(1.000000)
              dp3 r18.w, r25.xyzx, r25.xyzx
              rsq r18.w, r18.w
              mul r21.xyz, r18.wwww, r25.xyzx
              dp3 r18.w, -r24.xyzx, -r24.xyzx
              rsq r18.w, r18.w
              mul r22.xyz, r18.wwww, -r24.xyzx
              mul r23.xyz, r3.yyyy, r23.xyzx
              mul r21.xyz, r3.yyyy, r21.xyzx
              mul r22.xyz, r3.yyyy, r22.xyzx
              mul r18.w, r14.w, l(-17.000000)
              exp r18.w, r18.w
              add r17.w, r17.w, r18.w
              log r17.w, r17.w
              mul r17.w, r17.w, l(-0.05882353)
              max r14.w, r17.w, l(0.000000)
              mul r20.yzw, r20.yyyy, r22.xxyz
              mad r20.xyz, r21.xyzx, r20.xxxx, r20.yzwy
              mad r20.xyz, r23.xyzx, r16.wwww, r20.xyzx
              dp3 r16.w, r20.xyzx, r20.xyzx
              rsq r16.w, r16.w
              mul r20.xyz, r16.wwww, r20.xyzx
              add r16.w, -r15.w, l(1.000000)
              mul r21.xyz, r16.wwww, r17.xyzx
              mad r17.xyz, r20.xyzx, r15.wwww, r21.xyzx
            endif 
            add r16.w, -r15.w, l(1.000000)
            mul r20.xyz, r13.xyzx, r16.wwww
            mad r13.xyz, r19.xyzx, r15.wwww, r20.xyzx
            mul r19.xyz, r16.wwww, r18.xyzx
            mad r18.xyz, r28.xyzx, r15.wwww, r19.xyzx
            mad r11.w, r11.w, r16.w, r15.w
            mul r16.w, r12.z, r16.w
            mad r12.z, r14.w, r15.w, r16.w
          endif 
        endif 
      endif 
    endif 
  endloop 
  mov r14.xyz, r13.xyzx
  mov r15.xyz, r17.xyzx
  mov r16.xyz, r18.xyzx
  mov r6.w, r11.w
  mov r7.z, r12.z
  iadd r7.w, r7.w, l(32)
endloop 
mov_sat r6.w, r6.w
add r2.x, -r6.w, l(1.000000)
mad r1.xyz, r1.xyzx, r2.xxxx, r14.xyzx
mad r0.z, r0.z, r2.x, r6.w
mad r3.xyz, r3.xzwx, r2.xxxx, r15.xyzx
dp3 r3.w, r3.xyzx, r3.xyzx
rsq r3.w, r3.w
mul r3.xyz, r3.wwww, r3.xyzx
mad r8.y, r0.w, r2.x, r7.z
mad r2.yzw, r2.yyzw, r2.xxxx, r16.xxyz
mov_sat r0.x, r0.x
mul r0.x, r0.x, cb0[11].w
eq r9.xyz, r0.yyyy, l(3.000000, 2.000000, 1.000000, 0.000000)
lt r0.y, r0.y, l(0.000000)
movc r12.xyz, r0.yyyy, l(1.000000,1.000000,1.000000,0), cb0[12].yzwy
movc r12.xyz, r9.zzzz, cb0[15].xyzx, r12.xyzx
movc r9.yzw, r9.yyyy, cb0[16].xxyz, r12.xxyz
movc r9.xyz, r9.xxxx, cb0[17].xyzx, r9.yzwy
dp3 r0.y, -v7.xyzx, -v7.xyzx
rsq r0.y, r0.y
mul r12.xyz, r0.yyyy, -v7.xyzx
dp3 r0.w, r12.xyzx, r4.xyzx
dp3 r4.x, r12.xyzx, r5.xyzx
dp3 r4.y, r12.xyzx, r6.xyzx
lt r4.z, l(0.000000), r0.w
div r4.xy, -r4.xyxx, r0.wwww
and r4.xy, r4.xyxx, r4.zzzz
add r4.z, cb0[13].z, l(0.000010)
mad r4.xy, r4.xyxx, r4.zzzz, v2.xyxx
sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r4.xyxx, t24.xyzw, s1
mul r4.xyz, r9.xyzx, r4.xyzx
mov_sat r0.w, r0.w
log r5.x, r0.w
mul r5.x, r5.x, cb0[12].x
exp r5.x, r5.x
add r0.w, -r0.w, l(1.000000)
log r0.w, r0.w
mul r0.w, r0.w, cb0[12].x
exp r0.w, r0.w
movc r0.w, cb0[13].y, r0.w, r5.x
eq r5.x, cb0[12].x, l(0.000000)
movc r0.w, r5.x, l(1.000000), r0.w
mul r0.x, r0.x, r4.w
mul r0.x, r0.w, r0.x
mul r0.x, r2.x, r0.x
mul r4.xyz, r0.xxxx, r4.xyzx
ine r0.x, cb1[92].x, l(0)
utof r5.xy, r7.xyxx
dp2 r0.w, r5.yxyy, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r0.w, r0.w
mul r0.w, r0.w, l(52.982918)
frc r0.w, r0.w
mad r0.w, r0.w, l(6.28318548), cb1[70].w
sincos r6.x, r7.x, r0.w
dp2 r0.w, r5.xyxx, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r0.w, r0.w
mul r0.w, r0.w, l(52.982918)
frc r0.w, r0.w
mad r0.w, r0.w, l(6.28318548), cb1[70].w
sincos r2.x, r5.x, r0.w
dp3_sat r8.x, r3.xyzx, r12.xyzx
dp3 r0.w, -r12.xyzx, r3.xyzx
add r0.w, r0.w, r0.w
mad r9.xyz, r3.xyzx, -r0.wwww, -r12.xyzx
mul r0.w, r8.y, l(17.000000)
exp r0.w, r0.w
add r0.w, r0.w, l(2.000000)
div r0.w, l(2.000000), r0.w
sqrt r5.y, r0.w
add r5.z, -r8.y, l(1.000000)
mul r5.w, r5.z, l(5.000000)
mad r6.z, r5.z, l(5.000000), l(-2.500000)
mul_sat r6.z, r6.z, l(0.400000)
mul r6.z, r6.z, l(100.000000)
mad r8.zw, -r5.zzzz, l(0.000000, 0.000000, 10.000000, 5.000000), l(0.000000, 0.000000, 6.857410, 7.085000)
exp r6.w, r8.z
mul r6.w, r6.w, r8.x
mul r6.w, r6.w, l(9.136810)
mul r7.w, r5.z, r5.w
mad r7.w, -r7.w, l(2.015905), r8.w
exp r7.w, r7.w
mul r7.w, r7.w, r8.x
mul r7.w, r7.w, l(9.708090)
max r6.w, r6.w, r7.w
max r6.w, r6.w, l(1.268160)
mov r13.xy, l(0,0,0,0)
mov r14.w, l(0)
mov r15.yz, l(0,0,1.000000,0)
mov r16.xy, l(0,0,0,0)
mov r17.xy, l(0,0,0,0)
mov r18.xy, l(0,0,0,0)
mov r19.x, l(1.000000)
mov r20.xyzw, l(0,0,0,0)
mov r21.yzw, l(0,0,0,0)
mov r7.w, l(0)
mov r8.z, l(0)
loop 
  uge r8.w, r8.z, cb2[0].y
  breakc_nz r8.w
  ushr r13.z, r8.z, l(5)
  iadd r14.xyz, r11.xyzx, r13.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r8.w, r14.xyzw, t7.yzwx
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r22.xyzw, r8.z, l(0), t15.wxyz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r23.xyzw, r8.z, l(16), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r8.z, l(32), t15.yxwz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r8.z, l(48), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r8.z, l(64), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r8.z, l(80), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r13.zw, r8.z, l(96), t15.xxxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r8.z, l(116), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r8.z, l(132), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r8.z, l(148), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r8.z, l(164), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r8.z, l(180), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r8.z, l(196), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xy, r8.z, l(212), t15.xyxx
  add r14.xyz, -r22.yzwy, v7.xyzx
  dp3 r11.w, r14.xyzx, r14.xyzx
  sqrt r11.w, r11.w
  ge r11.w, cb2[54].y, r11.w
  and r12.w, r28.y, l(0x0000ffff)
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r12.w, l(0), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r12.w, l(16), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r12.w, l(32), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r38.xyzw, r12.w, l(48), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r39.xyzw, r12.w, l(64), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r40.xyzw, r12.w, l(80), t16.xyzw
  dp3 r15.w, r35.xyzx, r14.xyzx
  add_sat r15.w, r35.w, r15.w
  dp3 r16.w, r36.xyzx, r14.xyzx
  add_sat r16.w, r36.w, r16.w
  mul r15.w, r15.w, r16.w
  dp3 r16.w, r37.xyzx, r14.xyzx
  add_sat r16.w, r37.w, r16.w
  mul r15.w, r15.w, r16.w
  dp3 r16.w, r38.xyzx, r14.xyzx
  add_sat r16.w, r38.w, r16.w
  mul r15.w, r15.w, r16.w
  dp3 r16.w, r39.xyzx, r14.xyzx
  add_sat r16.w, r39.w, r16.w
  mul r15.w, r15.w, r16.w
  dp3 r16.w, r40.xyzx, r14.xyzx
  add_sat r16.w, r40.w, r16.w
  mul r15.x, r15.w, r16.w
  and r15.w, r13.z, l(1)
  movc r15.xw, r15.wwww, r15.xxxy, r15.zzzx
  mov r35.xy, r28.zwzz
  mov r35.z, r29.z
  dp3 r16.w, r9.xyzx, r35.xyzx
  dp3 r17.w, r14.xyzx, r35.xyzx
  add r17.w, -r29.w, r17.w
  ge r18.w, r17.w, l(0.000000)
  max r17.w, r6.z, |r17.w|
  movc r17.w, r18.w, r17.w, -r17.w
  max r16.w, -r16.w, l(0.00000010)
  div r16.w, r17.w, r16.w
  min r16.w, |r16.w|, l(131072.000000)
  mov r29.z, r30.z
  dp3 r17.w, r9.xyzx, r29.xyzx
  dp3 r18.w, r14.xyzx, r29.xyzx
  add r18.w, -r30.w, r18.w
  ge r19.z, r18.w, l(0.000000)
  max r18.w, r6.z, |r18.w|
  movc r18.w, r19.z, r18.w, -r18.w
  max r17.w, -r17.w, l(0.00000010)
  div r17.w, r18.w, r17.w
  min r16.w, r16.w, |r17.w|
  mov r30.z, r31.z
  dp3 r17.w, r9.xyzx, r30.xyzx
  dp3 r18.w, r14.xyzx, r30.xyzx
  add r18.w, -r31.w, r18.w
  ge r19.z, r18.w, l(0.000000)
  max r18.w, r6.z, |r18.w|
  movc r18.w, r19.z, r18.w, -r18.w
  max r17.w, -r17.w, l(0.00000010)
  div r17.w, r18.w, r17.w
  min r16.w, r16.w, |r17.w|
  mov r31.z, r32.z
  dp3 r17.w, r9.xyzx, r31.xyzx
  dp3 r18.w, r14.xyzx, r31.xyzx
  add r18.w, -r32.w, r18.w
  ge r19.z, r18.w, l(0.000000)
  max r18.w, r6.z, |r18.w|
  movc r18.w, r19.z, r18.w, -r18.w
  max r17.w, -r17.w, l(0.00000010)
  div r17.w, r18.w, r17.w
  min r16.w, r16.w, |r17.w|
  mov r32.z, r33.x
  dp3 r17.w, r9.xyzx, r32.xyzx
  dp3 r18.w, r14.xyzx, r32.xyzx
  add r18.w, -r33.y, r18.w
  ge r19.z, r18.w, l(0.000000)
  max r18.w, r6.z, |r18.w|
  movc r18.w, r19.z, r18.w, -r18.w
  max r17.w, -r17.w, l(0.00000010)
  div r17.w, r18.w, r17.w
  min r16.w, r16.w, |r17.w|
  mov r34.zw, r33.zzzw
  dp3 r17.w, r9.zxyz, r34.xzwx
  dp3 r18.w, r14.zxyz, r34.xzwx
  add r18.w, -r34.y, r18.w
  ge r19.z, r18.w, l(0.000000)
  max r18.w, r6.z, |r18.w|
  movc r18.w, r19.z, r18.w, -r18.w
  max r17.w, -r17.w, l(0.00000010)
  div r17.w, r18.w, r17.w
  min r16.w, r16.w, |r17.w|
  mov r29.x, r25.w
  mov r29.yz, r26.zzwz
  add r29.xyz, r14.xyzx, r29.xyzx
  mad r29.xyz, r9.xyzx, r16.wwww, r29.xyzx
  dp3 r17.w, r29.xyzx, r29.xyzx
  sqrt r17.w, r17.w
  div r16.w, r16.w, r17.w
  add r16.w, r16.w, r16.w
  sqrt r16.w, r16.w
  mad r16.w, r5.z, l(5.000000), r16.w
  add r16.w, r16.w, l(-0.844800)
  mov r22.y, r23.z
  mov r22.z, r24.x
  dp3 r30.x, r29.xyzx, r22.xyzx
  mov r31.xy, r23.xwxx
  mov r31.z, r24.w
  dp3 r30.y, r29.xyzx, r31.xyzx
  mov r24.x, r23.y
  dp3 r30.z, r29.xyzx, r24.xyzx
  ubfe r19.zw, l(0, 0, 6, 9), l(0, 0, 25, 16), r28.yyyy
  utof r30.w, r19.w
  sample_l_indexable(texturecubearray)(float,float,float,float) r23.xyz, r30.xyzw, t8.xyzw, s2, r16.w
  and r28.yzw, r23.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
  ieq r28.yzw, r28.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
  or r16.w, r28.z, r28.y
  or r16.w, r28.w, r16.w
  movc r23.xyz, r16.wwww, l(1.000000,1.000000,0,0), r23.xyzx
  dp3 r29.x, r14.xyzx, r22.xyzx
  dp3 r29.y, r14.xyzx, r31.xyzx
  dp3 r29.z, r14.xyzx, r24.xyzx
  mad_sat r25.xyz, r29.xyzx, r25.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mov r26.z, r27.x
  mad r25.xyz, r25.xyzx, r26.xyzx, r27.yzwy
  dp3 r30.x, r3.xyzx, r22.xyzx
  dp3 r30.y, r3.xyzx, r31.xyzx
  dp3 r30.z, r3.xyzx, r24.xyzx
  lt r22.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r30.xyzx
  movc r16.z, r22.x, l(0), l(0.500000)
  add r24.xyz, r16.xyzx, r25.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r24.xyz, r24.xyzx, t17.xyzw, s4, l(0.000000)
  movc r17.z, r22.y, l(0), l(0.500000)
  add r22.xyw, r17.xyxz, r25.xyxz
  sample_l_indexable(texture3d)(float,float,float,float) r22.xyw, r22.xywx, t18.xywz, s4, l(0.000000)
  movc r18.z, r22.z, l(0), l(0.500000)
  add r25.xyz, r18.xyzx, r25.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r25.xyz, r25.xyzx, t19.xyzw, s4, l(0.000000)
  mul r26.xyz, r30.xyzx, r30.xyzx
  sample_l_indexable(texturecubearray)(float,float,float,float) r27.xyz, r30.xyzw, t8.xyzw, s2, l(6.000000)
  and r28.yzw, r27.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
  ieq r28.yzw, r28.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
  or r16.z, r28.z, r28.y
  or r16.z, r28.w, r16.z
  movc r27.xyz, r16.zzzz, l(1.000000,1.000000,0,0), r27.xyzx
  mov r29.xyzw, r20.xyzw
  mov r28.yzw, r21.yyzw
  mov r16.z, r7.w
  mov r16.w, r8.w
  loop 
    breakc_z r16.w
    firstbit_lo r17.z, r16.w
    ishl r17.z, l(1), r17.z
    and r17.w, r16.w, r17.z
    if_nz r17.w
      not r17.z, r17.z
      and r16.w, r16.w, r17.z
      if_nz r11.w
        mov r17.z, r13.z
        mov r30.xy, r15.xwxx
        mov r17.w, l(1)
        loop 
          ige r18.z, r17.w, r19.z
          breakc_nz r18.z
          iadd r18.z, r12.w, r17.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r18.z, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r18.z, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r18.z, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r18.z, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r18.z, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r18.z, l(80), t16.xyzw
          dp3 r18.z, r31.xyzx, r14.xyzx
          add_sat r18.z, r31.w, r18.z
          mul r18.z, r18.z, r30.x
          dp3 r18.w, r32.xyzx, r14.xyzx
          add_sat r18.w, r32.w, r18.w
          mul r18.z, r18.w, r18.z
          dp3 r18.w, r33.xyzx, r14.xyzx
          add_sat r18.w, r33.w, r18.w
          mul r18.z, r18.w, r18.z
          dp3 r18.w, r34.xyzx, r14.xyzx
          add_sat r18.w, r34.w, r18.w
          mul r18.z, r18.w, r18.z
          dp3 r18.w, r35.xyzx, r14.xyzx
          add_sat r18.w, r35.w, r18.w
          mul r18.z, r18.w, r18.z
          dp3 r18.w, r36.xyzx, r14.xyzx
          add_sat r18.w, r36.w, r18.w
          mul r30.x, r18.w, r18.z
          ushr r19.w, r17.z, l(2)
          ubfe r22.z, l(1), l(2), r17.z
          and r23.w, r19.w, l(2)
          max r24.w, r30.x, r30.y
          mad r18.z, -r18.z, r18.w, l(1.000000)
          mul r18.z, r18.z, r30.y
          movc r19.y, r23.w, r18.z, r24.w
          movc r30.xy, r22.zzzz, r30.xyxx, r19.xyxx
          iadd r17.w, r17.w, l(1)
          mov r17.z, r19.w
        endloop 
        mov_sat r30.y, r30.y
        mul r17.z, r13.w, r30.y
        lt r17.w, l(0.000000), r17.z
        if_nz r17.w
          mad r31.z, r30.y, r13.w, r28.w
          mul r17.z, r28.x, r17.z
          mul r30.xzw, r17.zzzz, r26.xxyz
          mul r32.xyz, r22.xywx, r30.zzzz
          mad r32.xyz, r24.xyzx, r30.xxxx, r32.xyzx
          mad r30.xzw, r25.xxyz, r30.wwww, r32.xxyz
          mul r32.xyz, r27.xyzx, r30.xzwx
          dp3 r17.w, r32.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r32.xyz, r30.xzwx, r27.xyzx, r29.xyzx
          mul r18.z, r6.w, r17.w
          mul r30.xzw, r17.zzzz, r23.xxyz
          dp3 r17.z, r30.xzwx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r17.z, r6.w, r17.w, r17.z
          div r17.z, r18.z, r17.z
          mov r33.x, r29.w
          mov r33.yz, r28.yyzy
          mad r31.xyw, r30.zwzx, r17.zzzz, r33.yzyx
          mov r32.w, r31.w
        else 
          mov r32.xyzw, r29.xyzw
          mov r31.xyz, r28.yzwy
        endif 
        mov r16.z, l(-1)
        mov r29.xyzw, r32.xyzw
        mov r28.yzw, r31.xxyz
        break 
      endif 
    endif 
  endloop 
  if_nz r16.z
    mov r20.xyzw, r29.xyzw
    mov r21.yzw, r28.yyzw
    mov r7.w, l(-1)
    break 
  endif 
  iadd r8.z, r8.z, l(32)
  mov r20.xyzw, r29.xyzw
  mov r21.yzw, r28.yyzw
  mov r7.w, r16.z
endloop 
if_z r7.w
  iadd r7.w, cb2[0].y, -cb2[58].x
  and r8.z, r7.w, l(-32)
  iadd r8.w, r7.w, -r8.z
  and r11.w, cb2[0].y, l(-32)
  iadd r12.w, -r11.w, cb2[0].y
  mov r13.xy, l(0,0,0,0)
  mov r14.w, l(0)
  mov r15.yz, l(0,0,1.000000,0)
  mov r16.xy, l(0,0,0,0)
  mov r17.x, l(1.000000)
  mov r18.xy, l(0,0,0,0)
  mov r19.xy, l(0,0,0,0)
  mov r22.xyzw, r20.xyzw
  mov r23.yzw, r21.yyzw
  mov r13.w, r8.z
  loop 
    uge r15.w, r13.w, cb2[0].y
    breakc_nz r15.w
    ushr r13.z, r13.w, l(5)
    iadd r14.xyz, r11.xyzx, r13.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r13.z, r14.xyzw, t7.yzxw
    ieq r14.x, r8.z, r13.w
    bfi r14.y, r8.w, l(0), l(0), r13.z
    movc r13.z, r14.x, r14.y, r13.z
    ieq r14.x, r11.w, r13.w
    ubfe r14.y, r12.w, l(0), r13.z
    movc r13.z, r14.x, r14.y, r13.z
    iadd r14.x, r13.w, cb2[0].x
    mov r24.xyzw, r22.xyzw
    mov r25.xyz, r23.yzwy
    mov r14.y, r13.z
    loop 
      breakc_z r14.y
      firstbit_lo r14.z, r14.y
      ishl r15.w, l(1), r14.z
      and r16.w, r14.y, r15.w
      if_nz r16.w
        xor r14.y, r14.y, r15.w
        iadd r15.w, r14.z, r14.x
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r26.xyzw, r15.w, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r27.xy, r15.w, l(16), t11.xyxx
        add r26.xyz, r26.xyzx, -v7.xyzx
        mov r27.z, r26.w
        lt r26.xyz, |r26.xyzx|, r27.zxyz
        and r15.w, r26.y, r26.x
        and r15.w, r26.z, r15.w
        if_nz r15.w
          iadd r14.z, r13.w, r14.z
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r14.z, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r17.zw, r14.z, l(96), t15.xxxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r14.z, l(116), t15.zwxy
          add r28.xyz, -r26.yzwy, v7.xyzx
          and r15.w, r27.w, l(0x0000ffff)
          ubfe r16.w, l(6), l(25), r27.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r15.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r15.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r15.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r15.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r15.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r15.w, l(80), t16.xyzw
          dp3 r18.w, r29.xyzx, r28.xyzx
          add_sat r18.w, r29.w, r18.w
          dp3 r19.w, r30.xyzx, r28.xyzx
          add_sat r19.w, r30.w, r19.w
          mul r18.w, r18.w, r19.w
          dp3 r19.w, r31.xyzx, r28.xyzx
          add_sat r19.w, r31.w, r19.w
          mul r18.w, r18.w, r19.w
          dp3 r19.w, r32.xyzx, r28.xyzx
          add_sat r19.w, r32.w, r19.w
          mul r18.w, r18.w, r19.w
          dp3 r19.w, r33.xyzx, r28.xyzx
          add_sat r19.w, r33.w, r19.w
          mul r18.w, r18.w, r19.w
          dp3 r19.w, r34.xyzx, r28.xyzx
          add_sat r19.w, r34.w, r19.w
          mul r15.x, r18.w, r19.w
          and r18.w, r17.z, l(1)
          movc r29.xy, r18.wwww, r15.xyxx, r15.zxzz
          mov r15.x, r17.z
          mov r30.xy, r29.xyxx
          mov r18.w, l(1)
          loop 
            ige r19.w, r18.w, r16.w
            breakc_nz r19.w
            iadd r19.w, r15.w, r18.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r19.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r19.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r19.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r19.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r19.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r19.w, l(80), t16.xyzw
            dp3 r19.w, r31.xyzx, r28.xyzx
            add_sat r19.w, r31.w, r19.w
            mul r19.w, r19.w, r30.x
            dp3 r26.w, r32.xyzx, r28.xyzx
            add_sat r26.w, r32.w, r26.w
            mul r19.w, r19.w, r26.w
            dp3 r26.w, r33.xyzx, r28.xyzx
            add_sat r26.w, r33.w, r26.w
            mul r19.w, r19.w, r26.w
            dp3 r26.w, r34.xyzx, r28.xyzx
            add_sat r26.w, r34.w, r26.w
            mul r19.w, r19.w, r26.w
            dp3 r26.w, r35.xyzx, r28.xyzx
            add_sat r26.w, r35.w, r26.w
            mul r19.w, r19.w, r26.w
            dp3 r26.w, r36.xyzx, r28.xyzx
            add_sat r26.w, r36.w, r26.w
            mul r30.x, r19.w, r26.w
            ushr r28.w, r15.x, l(2)
            ubfe r29.z, l(1), l(2), r15.x
            and r29.w, r28.w, l(2)
            max r30.z, r30.x, r30.y
            mad r19.w, -r19.w, r26.w, l(1.000000)
            mul r19.w, r19.w, r30.y
            movc r17.y, r29.w, r19.w, r30.z
            movc r30.xy, r29.zzzz, r30.xyxx, r17.xyxx
            iadd r18.w, r18.w, l(1)
            mov r15.x, r28.w
          endloop 
          mov_sat r30.y, r30.y
          mul r15.x, r17.w, r30.y
          lt r15.w, l(0.000000), r15.x
          if_nz r15.w
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r14.z, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r14.z, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r14.z, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r14.z, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r14.z, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r14.z, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r14.z, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r14.z, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r14.z, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xyzw, r14.z, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r40.xy, r14.z, l(212), t15.xyxx
            mad r25.z, r30.y, r17.w, r25.z
            mul r14.z, r27.z, r15.x
            mov r27.z, r35.z
            dp3 r15.x, r9.xyzx, r27.xyzx
            dp3 r15.w, r28.xyzx, r27.xyzx
            add r15.w, -r35.w, r15.w
            ge r16.w, r15.w, l(0.000000)
            max r15.w, r6.z, |r15.w|
            movc r15.w, r16.w, r15.w, -r15.w
            max r15.x, -r15.x, l(0.00000010)
            div r15.x, r15.w, r15.x
            min r15.x, |r15.x|, l(131072.000000)
            mov r35.z, r36.z
            dp3 r15.w, r9.xyzx, r35.xyzx
            dp3 r16.w, r28.xyzx, r35.xyzx
            add r16.w, -r36.w, r16.w
            ge r17.y, r16.w, l(0.000000)
            max r16.w, r6.z, |r16.w|
            movc r16.w, r17.y, r16.w, -r16.w
            max r15.w, -r15.w, l(0.00000010)
            div r15.w, r16.w, r15.w
            min r15.x, |r15.w|, r15.x
            mov r36.z, r37.z
            dp3 r15.w, r9.xyzx, r36.xyzx
            dp3 r16.w, r28.xyzx, r36.xyzx
            add r16.w, -r37.w, r16.w
            ge r17.y, r16.w, l(0.000000)
            max r16.w, r6.z, |r16.w|
            movc r16.w, r17.y, r16.w, -r16.w
            max r15.w, -r15.w, l(0.00000010)
            div r15.w, r16.w, r15.w
            min r15.x, |r15.w|, r15.x
            mov r37.z, r38.z
            dp3 r15.w, r9.xyzx, r37.xyzx
            dp3 r16.w, r28.xyzx, r37.xyzx
            add r16.w, -r38.w, r16.w
            ge r17.y, r16.w, l(0.000000)
            max r16.w, r6.z, |r16.w|
            movc r16.w, r17.y, r16.w, -r16.w
            max r15.w, -r15.w, l(0.00000010)
            div r15.w, r16.w, r15.w
            min r15.x, |r15.w|, r15.x
            mov r38.z, r39.x
            dp3 r15.w, r9.xyzx, r38.xyzx
            dp3 r16.w, r28.xyzx, r38.xyzx
            add r16.w, -r39.y, r16.w
            ge r17.y, r16.w, l(0.000000)
            max r16.w, r6.z, |r16.w|
            movc r16.w, r17.y, r16.w, -r16.w
            max r15.w, -r15.w, l(0.00000010)
            div r15.w, r16.w, r15.w
            min r15.x, |r15.w|, r15.x
            mov r40.zw, r39.zzzw
            dp3 r15.w, r9.zxyz, r40.xzwx
            dp3 r16.w, r28.zxyz, r40.xzwx
            add r16.w, -r40.y, r16.w
            ge r17.y, r16.w, l(0.000000)
            max r16.w, r6.z, |r16.w|
            movc r16.w, r17.y, r16.w, -r16.w
            max r15.w, -r15.w, l(0.00000010)
            div r15.w, r16.w, r15.w
            min r15.x, |r15.w|, r15.x
            mov r27.x, r32.w
            mov r27.yz, r33.zzwz
            add r17.yzw, r28.xxyz, r27.xxyz
            mad r17.yzw, r9.xxyz, r15.xxxx, r17.yyzw
            dp3 r15.w, r17.yzwy, r17.yzwy
            sqrt r15.w, r15.w
            div r15.x, r15.x, r15.w
            add r15.x, r15.x, r15.x
            sqrt r15.x, r15.x
            mad r15.x, r5.z, l(5.000000), r15.x
            add r15.x, r15.x, l(-0.844800)
            mov r26.y, r29.z
            mov r26.z, r31.x
            dp3 r35.x, r17.yzwy, r26.xyzx
            mov r27.xy, r29.xwxx
            mov r27.z, r31.w
            dp3 r35.y, r17.yzwy, r27.xyzx
            mov r31.x, r29.y
            dp3 r35.z, r17.yzwy, r31.xyzx
            ubfe r15.w, l(9), l(16), r27.w
            utof r35.w, r15.w
            sample_l_indexable(texturecubearray)(float,float,float,float) r17.yzw, r35.xyzw, t8.wxyz, s2, r15.x
            and r29.xyz, r17.yzwy, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
            ieq r29.xyz, r29.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
            or r15.x, r29.y, r29.x
            or r15.x, r29.z, r15.x
            movc r17.yzw, r15.xxxx, l(0,1.000000,1.000000,0), r17.yyzw
            dp3 r29.x, r28.xyzx, r26.xyzx
            dp3 r29.y, r28.xyzx, r27.xyzx
            dp3 r29.z, r28.xyzx, r31.xyzx
            mad_sat r28.xyz, r29.xyzx, r32.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
            mov r33.z, r34.x
            mad r28.xyz, r28.xyzx, r33.xyzx, r34.yzwy
            dp3 r35.x, r3.xyzx, r26.xyzx
            dp3 r35.y, r3.xyzx, r27.xyzx
            dp3 r35.z, r3.xyzx, r31.xyzx
            lt r26.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r35.xyzx
            movc r16.z, r26.x, l(0), l(0.500000)
            add r27.xyz, r16.xyzx, r28.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r27.xyz, r27.xyzx, t17.xyzw, s4, l(0.000000)
            mul r29.xyz, r35.xyzx, r35.xyzx
            mul r29.xyz, r14.zzzz, r29.xyzx
            movc r18.z, r26.y, l(0), l(0.500000)
            add r26.xyw, r18.xyxz, r28.xyxz
            sample_l_indexable(texture3d)(float,float,float,float) r26.xyw, r26.xywx, t18.xywz, s4, l(0.000000)
            mul r26.xyw, r29.yyyy, r26.xyxw
            mad r26.xyw, r27.xyxz, r29.xxxx, r26.xyxw
            movc r19.z, r26.z, l(0), l(0.500000)
            add r27.xyz, r19.xyzx, r28.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r27.xyz, r27.xyzx, t19.xyzw, s4, l(0.000000)
            mad r26.xyz, r27.xyzx, r29.zzzz, r26.xywx
            sample_l_indexable(texturecubearray)(float,float,float,float) r27.xyz, r35.xyzw, t8.xyzw, s2, l(6.000000)
            and r28.xyz, r27.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
            ieq r28.xyz, r28.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
            or r15.x, r28.y, r28.x
            or r15.x, r28.z, r15.x
            movc r27.xyz, r15.xxxx, l(1.000000,1.000000,0,0), r27.xyzx
            mul r28.xyz, r26.xyzx, r27.xyzx
            dp3 r15.x, r28.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r24.xyz, r26.xyzx, r27.xyzx, r24.xyzx
            mul r15.w, r6.w, r15.x
            mul r17.yzw, r14.zzzz, r17.yyzw
            dp3 r14.z, r17.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r14.z, r6.w, r15.x, r14.z
            div r14.z, r15.w, r14.z
            mov r26.x, r24.w
            mov r26.yz, r25.xxyx
            mad r25.xyw, r17.zwzy, r14.zzzz, r26.yzyx
            mov r24.w, r25.w
          endif 
        endif 
      endif 
    endloop 
    mov r22.xyzw, r24.xyzw
    mov r23.yzw, r25.xxyz
    iadd r13.w, r13.w, l(32)
  endloop 
  lt r11.w, r23.w, l(1.000000)
  if_nz r11.w
    mov r13.xy, l(0,0,0,0)
    mov r14.w, l(0)
    mov r15.yz, l(0,0,1.000000,0)
    mov r16.xy, l(0,0,0,0)
    mov r17.x, l(1.000000)
    mov r18.xy, l(0,0,0,0)
    mov r19.xy, l(0,0,0,0)
    mov r24.x, r22.w
    mov r24.yzw, r23.yyzw
    mov r25.xyz, r22.xyzx
    mov r11.w, r23.w
    mov r12.w, l(0)
    loop 
      uge r13.w, r12.w, r7.w
      breakc_nz r13.w
      ushr r13.z, r12.w, l(5)
      iadd r14.xyz, r11.xyzx, r13.xyzx
      ld_indexable(texture2darray)(uint,uint,uint,uint) r13.z, r14.xyzw, t7.yzxw
      ieq r13.w, r8.z, r12.w
      ubfe r14.x, r8.w, l(0), r13.z
      movc r13.z, r13.w, r14.x, r13.z
      iadd r13.w, r12.w, cb2[0].x
      mov r26.xyzw, r24.xyzw
      mov r14.xyz, r25.xyzx
      mov r15.w, r11.w
      mov r16.w, r13.z
      loop 
        breakc_z r16.w
        firstbit_lo r17.z, r16.w
        ishl r17.w, l(1), r17.z
        and r18.w, r16.w, r17.w
        if_nz r18.w
          xor r16.w, r16.w, r17.w
          iadd r17.w, r13.w, r17.z
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r27.xyzw, r17.w, l(0), t11.xyzw
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r28.xy, r17.w, l(16), t11.xyxx
          add r27.xyz, r27.xyzx, -v7.xyzx
          mov r28.z, r27.w
          lt r27.xyz, |r27.xyzx|, r28.zxyz
          and r17.w, r27.y, r27.x
          and r17.w, r27.z, r17.w
          if_nz r17.w
            iadd r17.z, r12.w, r17.z
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r17.z, l(0), t15.wxyz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xy, r17.z, l(96), t15.xyxx
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r17.z, l(116), t15.zwxy
            add r30.xyz, -r27.yzwy, v7.xyzx
            and r17.w, r29.w, l(0x0000ffff)
            ubfe r18.w, l(6), l(25), r29.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r17.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r17.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r17.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r17.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r17.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r17.w, l(80), t16.xyzw
            dp3 r19.w, r31.xyzx, r30.xyzx
            add_sat r19.w, r31.w, r19.w
            dp3 r21.w, r32.xyzx, r30.xyzx
            add_sat r21.w, r32.w, r21.w
            mul r19.w, r19.w, r21.w
            dp3 r21.w, r33.xyzx, r30.xyzx
            add_sat r21.w, r33.w, r21.w
            mul r19.w, r19.w, r21.w
            dp3 r21.w, r34.xyzx, r30.xyzx
            add_sat r21.w, r34.w, r21.w
            mul r19.w, r19.w, r21.w
            dp3 r21.w, r35.xyzx, r30.xyzx
            add_sat r21.w, r35.w, r21.w
            mul r19.w, r19.w, r21.w
            dp3 r21.w, r36.xyzx, r30.xyzx
            add_sat r21.w, r36.w, r21.w
            mul r15.x, r19.w, r21.w
            and r19.w, r28.x, l(1)
            movc r28.zw, r19.wwww, r15.xxxy, r15.zzzx
            mov r15.x, r28.x
            mov r31.xy, r28.zwzz
            mov r19.w, l(1)
            loop 
              ige r21.w, r19.w, r18.w
              breakc_nz r21.w
              iadd r21.w, r17.w, r19.w
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r21.w, l(0), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r21.w, l(16), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r21.w, l(32), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r21.w, l(48), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r21.w, l(64), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r21.w, l(80), t16.xyzw
              dp3 r21.w, r32.xyzx, r30.xyzx
              add_sat r21.w, r32.w, r21.w
              mul r21.w, r21.w, r31.x
              dp3 r25.w, r33.xyzx, r30.xyzx
              add_sat r25.w, r33.w, r25.w
              mul r21.w, r21.w, r25.w
              dp3 r25.w, r34.xyzx, r30.xyzx
              add_sat r25.w, r34.w, r25.w
              mul r21.w, r21.w, r25.w
              dp3 r25.w, r35.xyzx, r30.xyzx
              add_sat r25.w, r35.w, r25.w
              mul r21.w, r21.w, r25.w
              dp3 r25.w, r36.xyzx, r30.xyzx
              add_sat r25.w, r36.w, r25.w
              mul r21.w, r21.w, r25.w
              dp3 r25.w, r37.xyzx, r30.xyzx
              add_sat r25.w, r37.w, r25.w
              mul r31.x, r21.w, r25.w
              ushr r27.w, r15.x, l(2)
              ubfe r30.w, l(1), l(2), r15.x
              and r31.z, r27.w, l(2)
              max r31.w, r31.x, r31.y
              mad r21.w, -r21.w, r25.w, l(1.000000)
              mul r21.w, r21.w, r31.y
              movc r17.y, r31.z, r21.w, r31.w
              movc r31.xy, r30.wwww, r31.xyxx, r17.xyxx
              iadd r19.w, r19.w, l(1)
              mov r15.x, r27.w
            endloop 
            add_sat r15.x, -r15.w, r31.y
            mul r17.y, r28.y, r15.x
            lt r17.w, l(0.000000), r17.y
            if_nz r17.w
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r17.z, l(16), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r17.z, l(32), t15.yxwz
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r17.z, l(48), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r17.z, l(64), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r17.z, l(80), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r17.z, l(132), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r17.z, l(148), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xyzw, r17.z, l(164), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r40.xyzw, r17.z, l(180), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r41.xyzw, r17.z, l(196), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r42.xy, r17.z, l(212), t15.xyxx
              mad r26.w, r15.x, r28.y, r26.w
              mul r15.x, r29.z, r17.y
              mov r29.z, r37.z
              dp3 r17.y, r9.xyzx, r29.xyzx
              dp3 r17.z, r30.xyzx, r29.xyzx
              add r17.z, -r37.w, r17.z
              ge r17.w, r17.z, l(0.000000)
              max r17.z, r6.z, |r17.z|
              movc r17.z, r17.w, r17.z, -r17.z
              max r17.y, -r17.y, l(0.00000010)
              div r17.y, r17.z, r17.y
              min r17.y, |r17.y|, l(131072.000000)
              mov r37.z, r38.z
              dp3 r17.z, r9.xyzx, r37.xyzx
              dp3 r17.w, r30.xyzx, r37.xyzx
              add r17.w, -r38.w, r17.w
              ge r18.w, r17.w, l(0.000000)
              max r17.w, r6.z, |r17.w|
              movc r17.w, r18.w, r17.w, -r17.w
              max r17.z, -r17.z, l(0.00000010)
              div r17.z, r17.w, r17.z
              min r17.y, |r17.z|, r17.y
              mov r38.z, r39.z
              dp3 r17.z, r9.xyzx, r38.xyzx
              dp3 r17.w, r30.xyzx, r38.xyzx
              add r17.w, -r39.w, r17.w
              ge r18.w, r17.w, l(0.000000)
              max r17.w, r6.z, |r17.w|
              movc r17.w, r18.w, r17.w, -r17.w
              max r17.z, -r17.z, l(0.00000010)
              div r17.z, r17.w, r17.z
              min r17.y, |r17.z|, r17.y
              mov r39.z, r40.z
              dp3 r17.z, r9.xyzx, r39.xyzx
              dp3 r17.w, r30.xyzx, r39.xyzx
              add r17.w, -r40.w, r17.w
              ge r18.w, r17.w, l(0.000000)
              max r17.w, r6.z, |r17.w|
              movc r17.w, r18.w, r17.w, -r17.w
              max r17.z, -r17.z, l(0.00000010)
              div r17.z, r17.w, r17.z
              min r17.y, |r17.z|, r17.y
              mov r40.z, r41.x
              dp3 r17.z, r9.xyzx, r40.xyzx
              dp3 r17.w, r30.xyzx, r40.xyzx
              add r17.w, -r41.y, r17.w
              ge r18.w, r17.w, l(0.000000)
              max r17.w, r6.z, |r17.w|
              movc r17.w, r18.w, r17.w, -r17.w
              max r17.z, -r17.z, l(0.00000010)
              div r17.z, r17.w, r17.z
              min r17.y, |r17.z|, r17.y
              mov r42.zw, r41.zzzw
              dp3 r17.z, r9.zxyz, r42.xzwx
              dp3 r17.w, r30.zxyz, r42.xzwx
              add r17.w, -r42.y, r17.w
              ge r18.w, r17.w, l(0.000000)
              max r17.w, r6.z, |r17.w|
              movc r17.w, r18.w, r17.w, -r17.w
              max r17.z, -r17.z, l(0.00000010)
              div r17.z, r17.w, r17.z
              min r17.y, |r17.z|, r17.y
              mov r28.x, r34.w
              mov r28.yz, r35.zzwz
              add r28.xyz, r30.xyzx, r28.xyzx
              mad r28.xyz, r9.xyzx, r17.yyyy, r28.xyzx
              dp3 r17.z, r28.xyzx, r28.xyzx
              sqrt r17.z, r17.z
              div r17.y, r17.y, r17.z
              add r17.y, r17.y, r17.y
              sqrt r17.y, r17.y
              mad r17.y, r5.z, l(5.000000), r17.y
              add r17.y, r17.y, l(-0.844800)
              mov r27.y, r32.z
              mov r27.z, r33.x
              dp3 r37.x, r28.xyzx, r27.xyzx
              mov r29.xy, r32.xwxx
              mov r29.z, r33.w
              dp3 r37.y, r28.xyzx, r29.xyzx
              mov r33.x, r32.y
              dp3 r37.z, r28.xyzx, r33.xyzx
              ubfe r17.z, l(9), l(16), r29.w
              utof r37.w, r17.z
              sample_l_indexable(texturecubearray)(float,float,float,float) r17.yzw, r37.xyzw, t8.wxyz, s2, r17.y
              and r28.xyz, r17.yzwy, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
              ieq r28.xyz, r28.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
              or r18.w, r28.y, r28.x
              or r18.w, r28.z, r18.w
              movc r17.yzw, r18.wwww, l(0,1.000000,1.000000,0), r17.yyzw
              dp3 r28.x, r30.xyzx, r27.xyzx
              dp3 r28.y, r30.xyzx, r29.xyzx
              dp3 r28.z, r30.xyzx, r33.xyzx
              mad_sat r28.xyz, r28.xyzx, r34.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
              mov r35.z, r36.x
              mad r28.xyz, r28.xyzx, r35.xyzx, r36.yzwy
              dp3 r37.x, r3.xyzx, r27.xyzx
              dp3 r37.y, r3.xyzx, r29.xyzx
              dp3 r37.z, r3.xyzx, r33.xyzx
              lt r27.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r37.xyzx
              movc r16.z, r27.x, l(0), l(0.500000)
              add r29.xyz, r16.xyzx, r28.xyzx
              sample_l_indexable(texture3d)(float,float,float,float) r29.xyz, r29.xyzx, t17.xyzw, s4, l(0.000000)
              mul r30.xyz, r37.xyzx, r37.xyzx
              mul r30.xyz, r15.xxxx, r30.xyzx
              movc r18.z, r27.y, l(0), l(0.500000)
              add r27.xyw, r18.xyxz, r28.xyxz
              sample_l_indexable(texture3d)(float,float,float,float) r27.xyw, r27.xywx, t18.xywz, s4, l(0.000000)
              mul r27.xyw, r30.yyyy, r27.xyxw
              mad r27.xyw, r29.xyxz, r30.xxxx, r27.xyxw
              movc r19.z, r27.z, l(0), l(0.500000)
              add r28.xyz, r19.xyzx, r28.xyzx
              sample_l_indexable(texture3d)(float,float,float,float) r28.xyz, r28.xyzx, t19.xyzw, s4, l(0.000000)
              mad r27.xyz, r28.xyzx, r30.zzzz, r27.xywx
              sample_l_indexable(texturecubearray)(float,float,float,float) r28.xyz, r37.xyzw, t8.xyzw, s2, l(6.000000)
              and r29.xyz, r28.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
              ieq r29.xyz, r29.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
              or r16.z, r29.y, r29.x
              or r16.z, r29.z, r16.z
              movc r28.xyz, r16.zzzz, l(1.000000,1.000000,0,0), r28.xyzx
              mul r29.xyz, r27.xyzx, r28.xyzx
              dp3 r16.z, r29.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
              mad r14.xyz, r27.xyzx, r28.xyzx, r14.xyzx
              mul r18.z, r6.w, r16.z
              mul r17.yzw, r15.xxxx, r17.yyzw
              dp3 r15.x, r17.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
              mad r15.x, r6.w, r16.z, r15.x
              div r15.x, r18.z, r15.x
              mad r26.xyz, r17.yzwy, r15.xxxx, r26.xyzx
            endif 
          endif 
        endif 
      endloop 
      mov r24.xyzw, r26.xyzw
      mov r25.xyz, r14.xyzx
      iadd r12.w, r12.w, l(32)
    endloop 
    mov r23.xyzw, r24.zxyw
    mov r22.xyz, r25.xyzx
    mov r23.xyzw, r23.yzxw
  else 
    mov r23.x, r22.w
  endif 
  max r5.z, r23.w, l(1.000000)
  rcp r5.z, r5.z
  mov_sat r23.w, r23.w
  mul r20.xyz, r5.zzzz, r22.xyzx
  mul r21.xyz, r5.zzzz, r23.xyzx
  lt r6.z, r23.w, l(0.990000)
  if_nz r6.z
    add r6.z, -r23.w, l(1.000000)
    mul r6.w, r6.z, cb2[19].x
    add r13.xyz, v7.xyzx, -cb2[35].xyzx
    mul r14.x, r13.x, cb2[35].w
    mul r14.yz, r13.yyzy, cb2[36].xxyx
    add_sat r13.xyz, r14.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    mul r14.xy, r13.xyxx, cb2[36].zwzz
    mul r14.z, r13.z, cb2[37].x
    add r13.xyz, r14.xyzx, cb2[37].yzwy
    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r3.xyzx
    movc r14.xyz, r14.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
    mov r14.w, l(0)
    add r15.xyz, r13.xyzx, r14.wwxw
    sample_l_indexable(texture3d)(float,float,float,float) r15.xyz, r15.xyzx, t17.xyzw, s4, l(0.000000)
    mul r16.xyz, r3.xyzx, r3.xyzx
    mul r16.xyz, r6.wwww, r16.xyzx
    add r17.xyz, r13.xyzx, r14.wwyw
    sample_l_indexable(texture3d)(float,float,float,float) r17.xyz, r17.xyzx, t18.xyzw, s4, l(0.000000)
    mul r17.xyz, r16.yyyy, r17.xyzx
    mad r15.xyz, r15.xyzx, r16.xxxx, r17.xyzx
    add r13.xyz, r13.xyzx, r14.wwzw
    sample_l_indexable(texture3d)(float,float,float,float) r13.xyz, r13.xyzx, t19.xyzw, s4, l(0.000000)
    mad r13.xyz, r13.xyzx, r16.zzzz, r15.xyzx
    mov r3.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r14.xyz, r3.xyzw, t8.xyzw, s2, l(6.000000)
    mul r13.xyz, r13.xyzx, r14.xyzx
    dp3 r3.w, r13.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
    mad r20.xyz, r22.xyzx, r5.zzzz, r13.xyzx
    mov r9.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r13.xyz, r9.xyzw, t8.xyzw, s2, r5.w
    mad r5.z, cb2[19].x, r6.z, -r3.w
    mad r3.w, r8.y, r5.z, r3.w
    mad r21.xyz, r13.xyzx, r3.wwww, r21.xyzx
  endif 
else 
  mov r21.x, r20.w
endif 
add r3.w, r1.w, r8.x
log r3.w, |r3.w|
mul r3.w, r3.w, r5.y
exp r3.w, r3.w
add r3.w, r1.w, r3.w
add_sat r3.w, r3.w, l(-1.000000)
mul r13.xyz, r1.wwww, r20.xyzx
mad r5.zw, r8.xxxy, l(0.000000, 0.000000, 0.984375, 0.984375), l(0.000000, 0.000000, 0.00781250, 0.00781250)
sample_l_indexable(texture2d)(float,float,float,float) r5.zw, r5.zwzz, t5.zwxy, s2, l(0.000000)
mul r8.yzw, r3.wwww, r21.xxyz
mul r14.xyz, r5.zzzz, r8.zwyz
mul r8.yzw, r5.wwww, r8.yyzw
sqrt r1.w, r5.y
mad r1.w, r1.w, l(0.500000), l(0.500000)
mul r1.w, r1.w, r1.w
mul r3.w, r1.w, l(0.500000)
mad r1.w, -r1.w, l(0.500000), l(1.000000)
mad r5.z, r8.x, r1.w, r3.w
mul r1.w, r1.w, r5.z
mul r3.w, r3.w, r5.z
dp3 r5.z, r3.xyzx, cb2[17].xyzx
mov_sat r5.w, r5.z
ge r6.z, l(0.000000), r5.w
if_nz r6.z
  mov r6.w, l(0)
endif 
if_z r6.z
  mul r15.xyz, v7.yyyy, cb2[29].xyzx
  mad r15.xyz, v7.xxxx, cb2[28].xyzx, r15.xyzx
  mad r15.xyz, v7.zzzz, cb2[30].xyzx, r15.xyzx
  add r15.xyz, r15.xyzx, cb2[31].xyzx
  add r6.z, r15.z, -cb2[17].w
  mad r6.z, -r6.z, l(0.00006104), l(1.000000)
  mov_sat r7.w, r6.z
  eq r7.w, r6.z, r7.w
  if_nz r7.w
    mov r7.w, l(0)
    mov r9.w, l(0)
    loop 
      ge r11.w, r7.w, l(3.000000)
      breakc_nz r11.w
      ftou r11.w, r7.w
      add r16.xy, r15.xyxx, -cb2[r11.w + 20].xyxx
      max r12.w, |r16.y|, |r16.x|
      mul r9.w, r12.w, cb2[r11.w + 20].z
      lt r11.w, r9.w, l(1.000000)
      if_nz r11.w
        break 
      endif 
      add r7.w, r7.w, l(1.000000)
      mov r9.w, l(0)
    endloop 
  else 
    mov r7.w, l(3.000000)
    mov r9.w, l(0)
  endif 
  ge r11.w, r7.w, l(3.000000)
  if_nz r11.w
    mul r16.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
    rcp r17.xz, r16.xxxx
    mov r17.y, -r17.z
    mad r16.xyz, r15.xyxx, r17.xyzx, r16.yzyy
    add r17.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r16.xyz, r16.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r16.xyz, r17.xyzx, r16.xyzx
    mul r17.xy, r16.zyzz, cb2[32].xxxx
    round_ni r17.xy, r17.xyxx
    mul r12.w, r17.y, cb2[27].x
    mad r12.w, r12.w, cb2[32].x, r17.x
    ftou r12.w, r12.w
    iadd r12.w, r12.w, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.w, r12.w, l(0), t23.xxxx
    and r16.w, r15.w, l(0x40000000)
    ishl r17.x, r15.w, l(2)
    if_z r16.w
      and r16.w, r15.w, l(0x01ffffff)
      iadd r18.x, r12.w, r16.w
      ushr r12.w, r15.w, l(25)
      utof r12.w, r12.w
      mul r16.xyz, r12.wwww, r16.xyzx
      frc r16.xyz, r16.xyzx
      mul r16.xyz, r16.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
      ftou r16.xyz, r16.xyzx
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.x, l(0), t23.xxxx
      ushr r17.yz, r16.zzyz, l(0, 6, 6, 0)
      and r12.w, r18.z, l(0xc0000000)
      iadd r15.w, r18.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.w, r15.w, l(0), t23.xxxx
      movc r15.w, r17.z, r18.z, r15.w
      ushr r16.w, r15.w, l(13)
      movc r15.w, r17.y, r16.w, r15.w
      and r15.w, r15.w, l(8191)
      iadd r19.x, r15.w, r18.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.z, r19.x, l(0), t23.xxxx
      mov r18.y, l(0)
      mov r19.y, l(1)
      movc r17.yzw, r12.wwww, r18.xxyz, r19.xxyz
      movc r19.yz, r12.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r20.xy, r16.zyzz, r19.yyyy
      and r20.xy, r20.xyxx, l(1, 1, 0, 0)
      and r15.w, r17.w, l(0xc0000000)
      iadd r16.w, r17.y, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.w, r16.w, l(0), t23.xxxx
      movc r16.w, r20.y, r17.w, r16.w
      ushr r18.w, r16.w, l(13)
      movc r16.w, r20.x, r18.w, r16.w
      and r16.w, r16.w, l(8191)
      iadd r19.x, r16.w, r17.y
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.w, r19.x, l(0), t23.xxxx
      movc r17.yzw, r15.wwww, r17.yyzw, r19.xxzw
      movc r17.yzw, r12.wwww, r18.xxyz, r17.yyzw
      and r12.w, r17.w, l(0xc0000000)
      if_z r12.w
        iadd r12.w, -r17.z, l(6)
        ushr r18.xy, r16.zyzz, r12.wwww
        or r12.w, r17.w, l(0x40000000)
        bfi r15.w, l(1), l(1), r18.y, l(0)
        bfi r15.w, l(1), l(0), r18.x, r15.w
        imul null, r15.w, r15.w, l(10)
        ushr r12.w, r12.w, r15.w
        and r12.w, r12.w, l(1023)
        iadd r18.x, r12.w, r17.y
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.w, r18.x, l(0), t23.xxxx
        iadd r18.yz, r17.zzzz, l(0, 1, 2, 0)
        iadd r12.w, -r18.y, l(6)
        ushr r19.xy, r16.zyzz, r12.wwww
        and r12.w, r18.w, l(0xc0000000)
        or r15.w, r18.w, l(0x40000000)
        bfi r16.w, l(1), l(1), r19.y, l(0)
        bfi r16.w, l(1), l(0), r19.x, r16.w
        imul null, r16.w, r16.w, l(10)
        ushr r15.w, r15.w, r16.w
        and r15.w, r15.w, l(1023)
        iadd r19.x, r15.w, r18.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.z, r19.x, l(0), t23.xxxx
        mov r19.y, r18.z
        movc r19.xyz, r12.wwww, r18.xywx, r19.xyzx
        iadd r15.w, -r19.y, l(6)
        ushr r18.yz, r16.zzyz, r15.wwww
        and r15.w, r19.z, l(0xc0000000)
        or r16.w, r19.z, l(0x40000000)
        bfi r17.z, l(1), l(1), r18.z, l(0)
        bfi r17.z, l(1), l(0), r18.y, r17.z
        imul null, r17.z, r17.z, l(10)
        ushr r16.w, r16.w, r17.z
        and r16.w, r16.w, l(1023)
        iadd r20.x, r16.w, r19.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.y, r20.x, l(0), t23.xxxx
        movc r18.yz, r15.wwww, r19.xxzx, r20.xxyx
        movc r17.yw, r12.wwww, r18.xxxw, r18.yyyz
      endif 
      and r12.w, r17.w, l(0xc0000000)
      if_z r12.w
        ubfe r15.w, l(14), l(15), r17.w
        utof r15.w, r15.w
        mul r15.w, r15.w, cb2[27].w
        mul r15.w, r15.w, l(0.00006104)
        and r18.xy, r17.wwww, l(0x00007fff, 0x20000000, 0, 0)
        utof r16.w, r18.x
        mul r16.w, r16.w, cb2[27].w
        mul r16.w, r16.w, l(0.00003052)
        and r17.z, r16.y, l(3)
        iadd r17.z, r17.z, r17.y
        iadd r17.z, r17.z, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.z, r17.z, l(0), t23.xxxx
        bfi r18.xzw, l(2, 0, 2, 1), l(3, 0, 1, 4), r16.xxyz, l(0, 0, 0, 0)
        ushr r16.x, r17.z, r18.x
        and r16.x, r16.x, l(255)
        utof r16.x, r16.x
        mul r16.x, r16.w, r16.x
        mad r16.x, r16.x, l(0.00392157), r15.w
        iadd r16.y, r18.z, l(1)
        ubfe r16.z, l(1), l(1), r16.z
        iadd r16.y, r16.z, r16.y
        iadd r16.y, r16.y, r17.y
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.y, r16.y, l(0), t23.xxxx
        ushr r16.y, r16.y, r18.w
        and r16.y, r16.y, l(0x0000ffff)
        utof r16.y, r16.y
        mul r16.y, r16.w, r16.y
        mad r15.w, r16.y, l(0.00001526), r15.w
        movc r17.x, r18.y, r16.x, r15.w
      else 
        and r15.w, r17.w, l(0x80000000)
        iadd r16.x, r17.y, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.x, r16.x, l(0), t23.xxxx
        movc r15.w, r15.w, r16.x, l(0)
        ishl r16.x, r17.w, l(2)
        ushr r16.y, r15.w, l(16)
        f16tof32 r16.y, r16.y
        and r15.w, r15.w, l(0x0000ffff)
        f16tof32 r15.w, r15.w
        mad r16.x, r15.x, r16.y, r16.x
        mad r15.w, r15.y, r15.w, r16.x
        movc r17.x, r12.w, r15.w, r17.x
      endif 
    endif 
    mad r12.w, -cb2[27].z, l(2.000000), r15.z
    lt r12.w, r17.x, r12.w
    movc r6.w, r12.w, l(0), l(1.000000)
  endif 
  if_z r11.w
    if_z cb2[58].y
      ftou r11.w, r7.w
      add r15.zw, r15.xxxy, -cb2[r11.w + 20].xxxy
      mul r15.zw, r15.zzzw, cb2[r11.w + 20].zzzz
      mad r16.xy, r15.zwzz, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r11.w, cb2[26].y
      add r16.z, r7.w, r11.w
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r11.w, r16.xyzx, t13.xxxx, s13, r6.z
      sample_l_indexable(texture2darray)(float,float,float,float) r12.w, r16.xyzx, t31.yzwx, s0, l(0.000000)
      add r11.w, r11.w, r12.w
      add_sat r11.w, r11.w, l(-1.000000)
      mul r12.w, r11.w, r11.w
      mul r6.w, r11.w, r12.w
    endif 
    if_nz cb2[58].y
      mov r16.x, -r6.x
      ftou r11.w, r7.w
      add r7.w, r7.w, l(1.000000)
      min r7.w, r7.w, l(2.000000)
      ftou r7.w, r7.w
      add r9.w, -r9.w, l(1.000000)
      mul r9.w, r9.w, l(28.000000)
      ftou r9.w, r9.w
      add r15.zw, r15.xxxy, -cb2[r11.w + 20].xxxy
      mul r15.zw, r15.zzzw, cb2[r11.w + 20].zzzz
      mad r15.zw, r15.zzzw, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
      add r15.xy, r15.xyxx, -cb2[r7.w + 20].xyxx
      mul r15.xy, r15.xyxx, cb2[r7.w + 20].zzzz
      mad r15.xy, r15.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      mov r16.y, r7.x
      mov r16.z, r6.x
      mov r12.w, l(0)
      mov r16.w, l(0)
      loop 
        uge r17.x, r16.w, l(8)
        breakc_nz r17.x
        ult r17.x, r9.w, r16.w
        movc r17.yz, r17.xxxx, r15.xxyx, r15.zzwz
        movc r17.w, r17.x, cb2[r7.w + 20].w, cb2[r11.w + 20].w
        movc r17.x, r17.x, r7.w, r11.w
        dp2 r18.x, icb[r16.w + 0].yxyy, r16.xyxx
        dp2 r18.y, icb[r16.w + 0].yxyy, r16.yzyy
        mad r18.xy, r18.xyxx, r17.wwww, r17.yzyy
        iadd r17.x, r17.x, cb2[26].y
        utof r18.z, r17.x
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r17.x, r18.xyzx, t13.xxxx, s13, r6.z
        sample_l_indexable(texture2darray)(float,float,float,float) r17.y, r18.xyzx, t31.yxzw, s0, l(0.000000)
        add r17.x, r17.y, r17.x
        add_sat r17.x, r17.x, l(-1.000000)
        mad r12.w, r17.x, l(0.125000), r12.w
        iadd r16.w, r16.w, l(1)
      endloop 
      mul r6.z, r12.w, r12.w
      mul r6.w, r12.w, r6.z
    endif 
  endif 
endif 
lt r6.z, l(0.000000), r5.w
if_nz r6.z
  lt r6.z, l(0.000000), r6.w
  if_nz r6.z
    mul r6.z, r0.w, cb2[18].w
    mul r6.z, r5.w, r6.z
    if_nz cb2[23].x
      mov r10.w, l(1.000000)
      dp4 r7.w, cb2[24].xyzw, r10.xyzw
      dp4 r9.w, cb2[25].xyzw, r10.xyzw
      frc r10.x, r7.w
      frc r10.y, r9.w
      iadd r7.w, l(-1), cb2[23].x
      utof r10.z, r7.w
      sample_l_indexable(texture2darray)(float,float,float,float) r10.xyz, r10.xyzx, t20.xyzw, s2, l(0.000000)
      add r10.xyz, r10.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
      mad r10.xyz, cb2[23].yyyy, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      mul r10.xyz, r10.xyzx, cb2[18].xyzx
    else 
      mov r10.xyz, cb2[18].xyzx
    endif 
    ushr r7.w, cb2[53].x, l(16)
    ult r9.w, l(0), r7.w
    and r9.w, r0.x, r9.w
    if_nz r9.w
      iadd r7.w, r7.w, cb2[0].x
      iadd r7.w, r7.w, l(-1)
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r9.w, r7.w, l(52), t12.xxxx
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r7.w, l(68), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r7.w, l(84), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r7.w, l(132), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r7.w, l(148), t12.xyzw
      mad r10.w, |r5.z|, l(-0.200000), l(0.400000)
      mad r19.xyz, r3.xyzx, r10.wwww, v7.xyzx
      mov r19.w, l(1.000000)
      dp4 r15.x, r15.xyzw, r19.xyzw
      dp4 r15.y, r16.xyzw, r19.xyzw
      mad r15.xy, r15.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      add r15.xy, r18.zwzz, r15.xyxx
      mul r15.xy, r18.xyxx, r15.xyxx
      div r15.zw, r9.wwww, r17.xxxz
      add r16.xy, -r15.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
      ge r16.xy, r15.xyxx, r16.xyxx
      ge r15.zw, r15.zzzw, r15.xxxy
      or r15.zw, r15.zzzw, r16.xxxy
      or r10.w, r15.w, r15.z
      if_z r10.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r10.w, r7.w, l(28), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r7.w, l(100), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.zw, r7.w, l(164), t12.xxxy
        dp4 r7.w, r16.xyzw, r19.xyzw
        mov_sat r15.xy, r15.xyxx
        mad r16.xy, r15.xyxx, r17.xzxx, r17.ywyy
        add r7.w, r15.z, r7.w
        div r7.w, r7.w, r15.w
        max r7.w, r7.w, l(0.00006104)
        and r10.w, r10.w, l(0x0000ffff)
        if_nz cb2[58].y
          mov r15.x, -r6.x
          utof r17.z, r10.w
          mov r15.y, r7.x
          mov r15.z, r6.x
          mov r11.w, l(0)
          mov r12.w, l(0)
          loop 
            ige r15.w, r12.w, l(8)
            breakc_nz r15.w
            dp2 r18.x, icb[r12.w + 0].yxyy, r15.xyxx
            dp2 r18.y, icb[r12.w + 0].yxyy, r15.yzyy
            mad r17.xy, r18.xyxx, r9.wwww, r16.xyxx
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r15.w, r17.xyzx, t9.xxxx, s13, r7.w
            mad r11.w, r15.w, l(0.125000), r11.w
            iadd r12.w, r12.w, l(1)
          endloop 
        else 
          utof r16.z, r10.w
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r11.w, r16.xyzx, t9.xxxx, s13, r7.w
        endif 
        mul r7.w, r11.w, r11.w
        mul r7.w, r11.w, r7.w
      else 
        mov r7.w, l(1.000000)
      endif 
      mul r6.w, r6.w, r7.w
    else 
      and r7.w, cb2[53].x, l(0x0000ffff)
      ult r9.w, l(0), r7.w
      not r10.w, r0.x
      and r9.w, r9.w, r10.w
      if_nz r9.w
        iadd r7.w, r7.w, cb2[0].x
        iadd r7.w, r7.w, l(-1)
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r9.w, r7.w, l(52), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r7.w, l(68), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r7.w, l(84), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r7.w, l(132), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r7.w, l(148), t12.xyzw
        mad r10.w, |r5.z|, l(-0.200000), l(0.400000)
        mad r19.xyz, r3.xyzx, r10.wwww, v7.xyzx
        mov r19.w, l(1.000000)
        dp4 r15.x, r15.xyzw, r19.xyzw
        dp4 r15.y, r16.xyzw, r19.xyzw
        mad r15.xy, r15.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
        add r15.xy, r18.zwzz, r15.xyxx
        mul r15.xy, r18.xyxx, r15.xyxx
        div r15.zw, r9.wwww, r17.xxxz
        add r16.xy, -r15.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
        ge r16.xy, r15.xyxx, r16.xyxx
        ge r15.zw, r15.zzzw, r15.xxxy
        or r15.zw, r15.zzzw, r16.xxxy
        or r10.w, r15.w, r15.z
        if_z r10.w
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r10.w, r7.w, l(28), t12.xxxx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r7.w, l(100), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.zw, r7.w, l(164), t12.xxxy
          dp4 r7.w, r16.xyzw, r19.xyzw
          mov_sat r15.xy, r15.xyxx
          mad r16.xy, r15.xyxx, r17.xzxx, r17.ywyy
          add r7.w, r15.z, r7.w
          div r7.w, r7.w, r15.w
          max r7.w, r7.w, l(0.00006104)
          and r10.w, r10.w, l(0x0000ffff)
          if_nz cb2[58].y
            mov r15.x, -r6.x
            utof r17.z, r10.w
            mov r15.y, r7.x
            mov r15.z, r6.x
            mov r11.w, l(0)
            mov r12.w, l(0)
            loop 
              ige r15.w, r12.w, l(8)
              breakc_nz r15.w
              dp2 r18.x, icb[r12.w + 0].yxyy, r15.xyxx
              dp2 r18.y, icb[r12.w + 0].yxyy, r15.yzyy
              mad r17.xy, r18.xyxx, r9.wwww, r16.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r15.w, r17.xyzx, t9.xxxx, s13, r7.w
              mad r11.w, r15.w, l(0.125000), r11.w
              iadd r12.w, r12.w, l(1)
            endloop 
          else 
            utof r16.z, r10.w
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r11.w, r16.xyzx, t9.xxxx, s13, r7.w
          endif 
          mul r7.w, r11.w, r11.w
          mul r7.w, r11.w, r7.w
        else 
          mov r7.w, l(1.000000)
        endif 
        mul r6.w, r6.w, r7.w
      endif 
    endif 
    mad r7.w, -r8.x, l(0.500000), l(1.000000)
    mad r7.w, -r5.w, r7.w, l(1.000000)
    mul r7.w, r7.w, r7.w
    mad r7.w, -r7.w, l(0.620000), l(0.620000)
    add r7.w, -r5.w, r7.w
    mad r7.w, r5.y, r7.w, r5.w
    mul r7.w, r6.w, r7.w
    lt r5.z, l(0.000000), r5.z
    mad r15.xyz, r7.wwww, r10.xyzx, r13.xyzx
    mad r16.xyz, -v7.xyzx, r0.yyyy, cb2[17].xyzx
    dp3 r0.y, r16.xyzx, r16.xyzx
    rsq r0.y, r0.y
    mul r16.xyz, r0.yyyy, r16.xyzx
    dp3 r0.y, r16.xyzx, r12.xyzx
    dp3 r7.w, r3.xyzx, r16.xyzx
    mad r9.w, |r7.w|, r0.w, -|r7.w|
    mad r7.w, |r7.w|, r9.w, l(1.000000)
    mad r5.w, r5.w, r1.w, r3.w
    mul r7.w, r7.w, r7.w
    mul r5.w, r5.w, r7.w
    rcp r5.w, r5.w
    mul r5.w, r6.z, r5.w
    mul r5.w, r5.w, r6.w
    mul r5.w, r5.w, l(0.250000)
    mad r16.xyz, r5.wwww, r10.xyzx, r8.yzwy
    add_sat r0.y, -r0.y, l(1.000000)
    mul r6.z, r0.y, r0.y
    mul r6.z, r6.z, r6.z
    mul r0.y, r0.y, r6.z
    mul r0.y, r0.y, r5.w
    mad r10.xyz, r0.yyyy, r10.yzxy, r14.xyzx
    mov r15.w, r10.z
    mov r13.w, r14.z
    movc r13.xyzw, r5.zzzz, r15.xyzw, r13.xyzw
    mov r10.zw, r16.xxxy
    mov r14.zw, r8.yyyz
    movc r10.xyzw, r5.zzzz, r10.xyzw, r14.xyzw
    movc r8.w, r5.z, r16.z, r8.w
    mov r14.z, r13.w
    mov r14.xy, r10.xyxx
    mov r8.yz, r10.zzwz
  endif 
endif 
mov r10.x, -r6.x
not r0.y, r0.x
mad r5.z, -r8.x, l(0.500000), l(1.000000)
mov r15.xy, l(0,0,0,0)
mov r16.w, l(0)
mov r17.xyz, v7.xyzx
mov r17.w, l(1.000000)
mov r18.w, l(1.000000)
mov r10.z, r6.x
mov r19.w, l(1.000000)
mov r20.z, l(1.000000)
mov r21.w, l(1.000000)
mov r10.yw, r7.xxxx
mov r6.y, r10.w
mov r22.w, l(1.000000)
mov r7.y, r10.x
mov r7.z, r6.x
mov r23.w, l(1.000000)
mov r24.x, r7.x
mov r24.y, r10.x
mov r24.z, r6.x
mov r25.x, r7.x
mov r25.y, r10.x
mov r25.z, r6.x
mov r26.x, r7.x
mov r26.y, r10.x
mov r26.z, r6.x
mov r27.xyz, r13.xyzx
mov r28.xyz, r14.zxyz
mov r29.xyz, r8.yzwy
mov r5.w, cb2[58].y
mov r6.z, l(0)
loop 
  uge r6.w, r6.z, cb2[0].x
  breakc_nz r6.w
  ushr r15.z, r6.z, l(5)
  iadd r16.xyz, r11.xyzx, r15.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r6.w, r16.xyzw, t6.yzwx
  mov r16.xyz, r27.xyzx
  mov r30.xyz, r28.xyzx
  mov r31.xyz, r29.xyzx
  mov r7.w, r5.w
  mov r8.x, r6.w
  loop 
    breakc_z r8.x
    firstbit_lo r9.w, r8.x
    ishl r11.w, l(1), r9.w
    and r12.w, r8.x, r11.w
    if_nz r12.w
      xor r8.x, r8.x, r11.w
      iadd r9.w, r6.z, r9.w
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r32.xyzw, r9.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r33.xy, r9.w, l(16), t11.xyxx
      add r32.xyz, r32.xyzx, -v7.xyzx
      mov r33.z, r32.w
      lt r32.xyz, |r32.xyzx|, r33.zxyz
      and r11.w, r32.y, r32.x
      and r11.w, r32.z, r11.w
      if_nz r11.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r9.w, l(0), t12.wxyz
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r9.w, l(16), t12.zxyw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r9.w, l(32), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r9.w, l(48), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r9.w, l(64), t12.yzwx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r9.w, l(80), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r9.w, l(96), t12.yzwx
        ubfe r11.w, l(3), l(24), r33.w
        switch r11.w
          case l(4)
          lt r11.w, l(0.000000), r38.x
          mov r39.xy, r37.zwzz
          mov r39.z, r38.w
          mad r40.xyz, -r39.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r32.yzwy
          add r41.xyz, r40.xyzx, -v7.xyzx
          dp3 r12.w, r39.xyzx, r41.xyzx
          div_sat r13.w, -r12.w, r38.x
          mad r42.xyz, r13.wwww, r39.xyzx, r40.xyzx
          movc r42.xyz, r11.wwww, r42.xyzx, r32.yzwy
          add r42.xyz, r42.xyzx, -v7.xyzx
          dp3 r14.w, r42.xyzx, r42.xyzx
          rsq r15.z, r14.w
          mul r42.xyz, r15.zzzz, r42.xyzx
          dp3 r15.z, r3.xyzx, r42.xyzx
          mov_sat r15.w, r15.z
          lt r20.w, l(0.000000), r15.w
          if_nz r20.w
            sqrt r20.w, r14.w
            mul r24.w, r35.x, r35.x
            div r14.w, r24.w, r14.w
            min r14.w, r14.w, l(1.000000)
            mad_sat r42.xy, r20.wwww, r34.xzxx, r34.ywyy
            mul r42.zw, r42.xxxy, r42.xxxy
            mad r42.xy, r42.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
            mul r42.xy, r42.xyxx, r42.zwzz
            mul r14.w, r14.w, r42.x
            mul r14.w, r42.y, r14.w
            lt r20.w, l(0.000000), r14.w
            if_nz r20.w
              ubfe r20.w, l(3), l(27), r33.w
              ine r20.w, r20.w, l(1)
              if_nz r20.w
                mad r20.w, |r15.z|, l(-0.200000), l(0.400000)
                mad r42.xyz, r3.xyzx, r20.wwww, v7.xyzx
                add r42.xyz, -r36.xyzx, r42.xyzx
                max r20.w, |r42.z|, |r42.y|
                max r20.w, r20.w, |r42.x|
                div r20.w, r37.x, r20.w
                add r20.w, r37.y, r20.w
                dp3 r24.w, r42.xyzx, r42.xyzx
                rsq r24.w, r24.w
                max r20.w, r20.w, l(0.00006104)
                and r25.w, r33.w, l(0x0000ffff)
                utof r43.w, r25.w
                mov r25.w, l(0)
                mov r26.w, l(0)
                loop 
                  ige r27.w, r26.w, l(8)
                  breakc_nz r27.w
                  dp2 r44.y, icb[r26.w + 0].yxyy, r10.xyxx
                  dp2 r44.z, icb[r26.w + 0].yxyy, r10.yzyy
                  mul r44.yz, r35.yyyy, r44.yyzy
                  mul r44.x, r5.x, r44.y
                  mul r44.w, r2.x, r44.y
                  mad r43.xyz, r42.xyzx, r24.wwww, r44.xzwx
                  sample_c_lz_indexable(texturecubearray)(float,float,float,float) r27.w, r43.xyzw, t10.xxxx, s13, r20.w
                  mad r25.w, r27.w, l(0.125000), r25.w
                  iadd r26.w, r26.w, l(1)
                endloop 
              else 
                mov r25.w, l(1.000000)
              endif 
              mul r14.w, r14.w, r25.w
              lt r20.w, l(0.000000), r14.w
              if_nz r20.w
                mul r20.w, r0.w, r33.x
                mul r20.w, r20.w, l(0.250000)
                dp3 r24.w, r39.xyzx, r9.xyzx
                dp3 r26.w, r9.xyzx, r41.xyzx
                mad r27.w, -r24.w, r24.w, r38.x
                mad r12.w, r24.w, r26.w, -r12.w
                div_sat r12.w, r12.w, r27.w
                div r24.w, r27.w, r38.x
                mul r24.w, r24.w, l(10.000000)
                min r24.w, r24.w, l(1.000000)
                add r12.w, -r13.w, r12.w
                mad r12.w, r24.w, r12.w, r13.w
                mad r39.xyz, r12.wwww, r39.xyzx, r40.xyzx
                movc r39.xyz, r11.wwww, r39.xyzx, r32.yzwy
                add r39.xyz, r39.xyzx, -v7.xyzx
                dp3 r11.w, r39.xyzx, r39.xyzx
                rsq r11.w, r11.w
                mul r40.xyz, r11.wwww, r39.xyzx
                ubfe r12.w, l(4), l(16), r33.w
                ult r13.w, l(0), r12.w
                and r13.w, r0.x, r13.w
                if_nz r13.w
                  iadd r12.w, r12.w, cb2[0].x
                  iadd r12.w, r12.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.w, r12.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r12.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r12.w, l(116), t12.xyzw
                  mad r24.w, |r15.z|, l(-0.200000), l(0.400000)
                  mad r18.xyz, r3.xyzx, r24.wwww, v7.xyzx
                  dp4 r24.w, r41.xyzw, r18.xyzw
                  dp4 r26.w, r42.xyzw, r18.xyzw
                  lt r27.w, r26.w, r24.w
                  if_z r27.w
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r12.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r12.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r12.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r12.w, l(148), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xy, r12.w, l(164), t12.xyxx
                    dp4 r41.x, r41.xyzw, r18.xyzw
                    dp4 r41.y, r42.xyzw, r18.xyzw
                    div r18.xy, r41.xyxx, r26.wwww
                    mad r18.xy, r18.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r18.xy, r44.zwzz, r18.xyxx
                    mul r18.xy, r44.xyxx, r18.xyxx
                    div r41.xy, r13.wwww, r43.xzxx
                    add r41.zw, -r41.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                    ge r41.zw, r18.xxxy, r41.zzzw
                    ge r41.xy, r41.xyxx, r18.xyxx
                    or r41.xy, r41.xyxx, r41.zwzz
                    or r18.z, r41.y, r41.x
                    mov_sat r18.xy, r18.xyxx
                    mad r41.xy, r18.xyxx, r43.xzxx, r43.ywyy
                    mul r18.x, r26.w, r45.y
                    mad r18.y, r45.x, r26.w, r24.w
                    div r18.x, r18.y, r18.x
                  else 
                    mov r18.z, l(-1)
                  endif 
                  or r18.y, r27.w, r18.z
                  if_z r18.y
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.w, r12.w, l(28), t12.xxxx
                    max r18.x, r18.x, l(0.00006104)
                    and r12.w, r12.w, l(0x0000ffff)
                    if_nz r7.w
                      utof r42.z, r12.w
                      mov r18.yz, l(0,0,0,0)
                      loop 
                        ige r24.w, r18.z, l(8)
                        breakc_nz r24.w
                        dp2 r43.x, icb[r18.z + 0].yxyy, r10.xwxx
                        dp2 r43.y, icb[r18.z + 0].xyxx, r6.xyxx
                        mad r42.xy, r43.xyxx, r13.wwww, r41.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.w, r42.xyzx, t9.xxxx, s13, r18.x
                        mad r18.y, r24.w, l(0.125000), r18.y
                        iadd r18.z, r18.z, l(1)
                      endloop 
                    else 
                      utof r41.z, r12.w
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r18.y, r41.xyzx, t9.xxxx, s13, r18.x
                    endif 
                    mul r12.w, r18.y, r18.y
                    mul r12.w, r18.y, r12.w
                  else 
                    mov r12.w, l(1.000000)
                  endif 
                  mul r14.w, r12.w, r14.w
                else 
                  ubfe r12.w, l(4), l(20), r33.w
                  ult r13.w, l(0), r12.w
                  and r13.w, r0.y, r13.w
                  if_nz r13.w
                    iadd r12.w, r12.w, cb2[0].x
                    iadd r12.w, r12.w, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.w, r12.w, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r12.w, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r12.w, l(116), t12.xyzw
                    mad r18.x, |r15.z|, l(-0.200000), l(0.400000)
                    mad r19.xyz, r3.xyzx, r18.xxxx, v7.xyzx
                    dp4 r18.x, r41.xyzw, r19.xyzw
                    dp4 r18.z, r42.xyzw, r19.xyzw
                    lt r24.w, r18.z, r18.x
                    if_z r24.w
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r12.w, l(68), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r12.w, l(84), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r12.w, l(132), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r12.w, l(148), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xy, r12.w, l(164), t12.xyxx
                      dp4 r41.x, r41.xyzw, r19.xyzw
                      dp4 r41.y, r42.xyzw, r19.xyzw
                      div r19.xy, r41.xyxx, r18.zzzz
                      mad r19.xy, r19.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                      add r19.xy, r44.zwzz, r19.xyxx
                      mul r19.xy, r44.xyxx, r19.xyxx
                      div r41.xy, r13.wwww, r43.xzxx
                      add r41.zw, -r41.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                      ge r41.zw, r19.xxxy, r41.zzzw
                      ge r41.xy, r41.xyxx, r19.xyxx
                      or r41.xy, r41.xyxx, r41.zwzz
                      or r19.z, r41.y, r41.x
                      mov_sat r19.xy, r19.xyxx
                      mad r41.xy, r19.xyxx, r43.xzxx, r43.ywyy
                      mul r19.x, r18.z, r45.y
                      mad r18.x, r45.x, r18.z, r18.x
                      div r18.x, r18.x, r19.x
                    else 
                      mov r19.z, l(-1)
                    endif 
                    or r18.z, r24.w, r19.z
                    if_z r18.z
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.w, r12.w, l(28), t12.xxxx
                      max r18.x, r18.x, l(0.00006104)
                      and r12.w, r12.w, l(0x0000ffff)
                      if_nz r7.w
                        utof r19.z, r12.w
                        mov r18.z, l(0)
                        mov r24.w, l(0)
                        loop 
                          ige r26.w, r24.w, l(8)
                          breakc_nz r26.w
                          dp2 r42.x, icb[r24.w + 0].xyxx, r7.xyxx
                          dp2 r42.y, icb[r24.w + 0].yxyy, r7.xzxx
                          mad r19.xy, r42.xyxx, r13.wwww, r41.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.x, r19.xyzx, t9.xxxx, s13, r18.x
                          mad r18.z, r19.x, l(0.125000), r18.z
                          iadd r24.w, r24.w, l(1)
                        endloop 
                      else 
                        utof r41.z, r12.w
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r18.z, r41.xyzx, t9.xxxx, s13, r18.x
                      endif 
                      mul r12.w, r18.z, r18.z
                      mul r12.w, r18.z, r12.w
                    else 
                      mov r12.w, l(1.000000)
                    endif 
                    mul r14.w, r12.w, r14.w
                  endif 
                endif 
                mad r12.w, -r15.w, r5.z, l(1.000000)
                mul r12.w, r12.w, r12.w
                mad r12.w, -r12.w, l(0.620000), l(0.620000)
                add r12.w, -r15.w, r12.w
                mad r12.w, r5.y, r12.w, r15.w
                mul r12.w, r14.w, r12.w
                mov r33.x, r32.x
                lt r13.w, l(0.000000), r15.z
                mad r19.xyz, r12.wwww, r33.xyzx, r16.xyzx
                dp3_sat r12.w, r3.xyzx, r40.xyzx
                mad r39.xyz, r39.xyzx, r11.wwww, r12.xyzx
                dp3 r11.w, r39.xyzx, r39.xyzx
                rsq r11.w, r11.w
                mul r39.xyz, r11.wwww, r39.xyzx
                dp3 r11.w, r39.xyzx, r12.xyzx
                dp3 r15.z, r3.xyzx, r39.xyzx
                mad r15.w, |r15.z|, r0.w, -|r15.z|
                mad r15.z, |r15.z|, r15.w, l(1.000000)
                mad r15.w, r12.w, r1.w, r3.w
                mul r15.z, r15.z, r15.z
                mul r15.z, r15.w, r15.z
                rcp r15.z, r15.z
                mul r12.w, r20.w, r12.w
                mul r12.w, r12.w, r15.z
                mul r12.w, r14.w, r12.w
                mad r39.xyz, r12.wwww, r33.xyzx, r31.xyzx
                add_sat r11.w, -r11.w, l(1.000000)
                mul r14.w, r11.w, r11.w
                mul r14.w, r14.w, r14.w
                mul r11.w, r11.w, r14.w
                mul r11.w, r11.w, r12.w
                mad r40.xyz, r11.wwww, r33.xyzx, r30.xyzx
                movc r16.xyz, r13.wwww, r19.xyzx, r16.xyzx
                movc r30.xyz, r13.wwww, r40.xyzx, r30.xyzx
                movc r31.xyz, r13.wwww, r39.xyzx, r31.xyzx
              endif 
            endif 
          endif 
          break 
          case l(2)
          mov r19.xy, r35.zwzz
          mov r19.z, r36.w
          add r19.xyz, r19.xyzx, -v7.xyzx
          dp3 r11.w, r19.xyzx, r19.xyzx
          rsq r11.w, r11.w
          mul r39.xyz, r11.wwww, r19.xyzx
          dp3 r12.w, r3.xyzx, r39.xyzx
          mov_sat r13.w, r12.w
          lt r14.w, l(0.000000), r13.w
          if_nz r14.w
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r9.w, l(112), t12.yzwx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r9.w, l(128), t12.zxyw
            mov r41.xyz, r39.xyzx
            mov r41.w, r40.y
            dp4 r14.w, r41.xyzw, r17.xyzw
            lt r15.z, r14.w, l(1.000000)
            if_nz r15.z
              mov r42.xyz, l(1.000000,1.000000,1.000000,0)
              mov r15.z, l(0)
            else 
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r9.w, l(172), t12.yzwx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r9.w, l(188), t12.wxyz
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xyzw, r9.w, l(204), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.w, r9.w, l(236), t12.xxxx
              add r46.xyz, r32.yzwy, -v7.xyzx
              mul r18.x, r35.x, r35.x
              dp3 r20.w, r46.xyzx, r46.xyzx
              div r18.x, r18.x, r20.w
              min r18.x, r18.x, l(1.000000)
              mad_sat r34.xy, r14.wwww, r34.xzxx, r34.ywyy
              mul r34.zw, r34.xxxy, r34.xxxy
              mad r34.xy, r34.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
              mul r34.xy, r34.xyxx, r34.zwzz
              mul r18.x, r18.x, r34.x
              mul r18.x, r34.y, r18.x
              mov r36.w, r37.x
              dp4 r34.x, r36.xyzw, r17.xyzw
              mov r46.xyz, r37.yzwy
              mov r46.w, r38.w
              dp4 r34.y, r46.xyzw, r17.xyzw
              div r20.xy, r34.xyxx, r14.wwww
              lt r14.w, r43.w, l(0.00048828)
              if_nz r14.w
                mov r44.y, r45.x
                mad_sat r34.xy, |r20.xyxx|, r44.zwzz, r44.xyxx
                mul r34.zw, r34.xxxy, r34.xxxy
                mad r34.xy, r34.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
                mul r34.xy, r34.xyxx, r34.zwzz
                mul r14.w, r34.y, r34.x
              else 
                mov r43.w, r44.y
                mul_sat r34.xyzw, |r20.yyxx|, r43.xyzw
                log r34.xyzw, r34.xyzw
                mul r34.xyzw, r34.xyzw, r44.xxxx
                exp r34.xyzw, r34.xyzw
                add r34.xy, r34.zwzz, r34.xyxx
                log r34.xy, r34.xyxx
                mul r34.xy, r34.xyxx, r45.xxxx
                exp r34.xy, r34.xyxx
                mul r20.w, r34.x, r44.z
                mad r24.w, r44.w, r34.y, l(-1.000000)
                mad r20.w, r44.w, r34.y, -r20.w
                div_sat r20.w, r24.w, r20.w
                mul r24.w, r20.w, r20.w
                mad r20.w, r20.w, l(-2.000000), l(3.000000)
                mul r14.w, r20.w, r24.w
              endif 
              mul r15.z, r14.w, r18.x
              and r14.w, r15.w, l(255)
              if_nz r14.w
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyz, r9.w, l(220), t12.xyzx
                dp3 r15.w, r45.yzwy, r20.xyzx
                dp3 r18.x, r34.xyzx, r20.xyzx
                frc r34.x, r15.w
                frc r34.y, r18.x
                iadd r14.w, r14.w, l(-1)
                utof r34.z, r14.w
                sample_l_indexable(texture2darray)(float,float,float,float) r42.xyz, r34.xyzx, t20.xyzw, s2, l(0.000000)
              else 
                mov r42.xyz, l(1.000000,1.000000,1.000000,0)
              endif 
            endif 
            mov r32.yz, r33.yyzy
            mul r20.xyw, r42.xyxz, r32.xyxz
            lt r14.w, l(0.000000), r15.z
            if_nz r14.w
              ubfe r14.w, l(3), l(27), r33.w
              ine r14.w, r14.w, l(1)
              if_nz r14.w
                mad r14.w, |r12.w|, l(-0.200000), l(0.400000)
                mad r21.xyz, r3.xyzx, r14.wwww, v7.xyzx
                mov r39.xyz, r38.xyzx
                dp4 r14.w, r39.xyzw, r21.xyzw
                dp4 r15.w, r41.xyzw, r21.xyzw
                ge r18.x, r15.w, r14.w
                if_nz r18.x
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.y, r9.w, l(144), t12.xxxx
                  mov r36.w, r37.x
                  dp4 r32.x, r36.xyzw, r21.xyzw
                  mov r38.xyz, r37.yzwy
                  dp4 r32.y, r38.xyzw, r21.xyzw
                  div r21.xy, r32.xyxx, r15.wwww
                  mad_sat r21.xy, r21.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  mad r21.xy, r21.xyxx, r40.zwzz, r40.xyxx
                  div r9.w, r14.w, r15.w
                  max r9.w, r9.w, l(0.00006104)
                  and r14.w, r33.w, l(0x0000ffff)
                  if_nz r7.w
                    utof r32.z, r14.w
                    mov r15.w, l(0)
                    mov r18.x, l(0)
                    loop 
                      ige r24.w, r18.x, l(8)
                      breakc_nz r24.w
                      dp2 r34.x, icb[r18.x + 0].xyxx, r24.xyxx
                      dp2 r34.y, icb[r18.x + 0].yxyy, r24.xzxx
                      mad r32.xy, r34.xyxx, r35.yyyy, r21.xyxx
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.w, r32.xyzx, t9.xxxx, s13, r9.w
                      mad r15.w, r24.w, l(0.125000), r15.w
                      iadd r18.x, r18.x, l(1)
                    endloop 
                  else 
                    utof r21.z, r14.w
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r15.w, r21.xyzx, t9.xxxx, s13, r9.w
                  endif 
                  mul r9.w, r15.w, r15.w
                  mul r9.w, r15.w, r9.w
                else 
                  mov r9.w, l(1.000000)
                endif 
              else 
                mov r9.w, l(1.000000)
              endif 
              mul r9.w, r9.w, r15.z
              lt r14.w, l(0.000000), r9.w
              if_nz r14.w
                mul r14.w, r0.w, r33.x
                mul r14.w, r13.w, r14.w
                ubfe r15.z, l(4), l(16), r33.w
                ult r18.x, l(0), r15.z
                and r18.x, r0.x, r18.x
                if_nz r18.x
                  iadd r15.z, r15.z, cb2[0].x
                  iadd r15.z, r15.z, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.x, r15.z, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r15.z, l(68), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r15.z, l(84), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r15.z, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r15.z, l(116), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r15.z, l(132), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r15.z, l(148), t12.xyzw
                  mad r21.x, |r12.w|, l(-0.200000), l(0.400000)
                  mad r22.xyz, r3.xyzx, r21.xxxx, v7.xyzx
                  dp4 r21.x, r32.xyzw, r22.xyzw
                  dp4 r21.y, r34.xyzw, r22.xyzw
                  dp4 r21.z, r35.xyzw, r22.xyzw
                  dp4 r22.x, r36.xyzw, r22.xyzw
                  lt r22.y, r22.x, r21.z
                  div r21.xy, r21.xyxx, r22.xxxx
                  mad r21.xy, r21.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r21.xy, r38.zwzz, r21.xyxx
                  mul r21.xy, r38.xyxx, r21.xyxx
                  div r32.xy, r18.xxxx, r37.xzxx
                  add r32.zw, -r32.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                  ge r32.zw, r21.xxxy, r32.zzzw
                  ge r32.xy, r32.xyxx, r21.xyxx
                  or r32.xy, r32.xyxx, r32.zwzz
                  or r22.z, r32.y, r32.x
                  or r22.y, r22.y, r22.z
                  if_z r22.y
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r22.y, r15.z, l(28), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xy, r15.z, l(164), t12.xyxx
                    mov_sat r21.xy, r21.xyxx
                    mad r33.xy, r21.xyxx, r37.xzxx, r37.ywyy
                    mul r15.z, r22.x, r32.y
                    mad r21.x, r32.x, r22.x, r21.z
                    div r15.z, r21.x, r15.z
                    max r15.z, r15.z, l(0.00006104)
                    and r21.x, r22.y, l(0x0000ffff)
                    if_nz r7.w
                      utof r22.z, r21.x
                      mov r21.yz, l(0,0,0,0)
                      loop 
                        ige r24.w, r21.z, l(8)
                        breakc_nz r24.w
                        dp2 r32.x, icb[r21.z + 0].xyxx, r25.xyxx
                        dp2 r32.y, icb[r21.z + 0].yxyy, r25.xzxx
                        mad r22.xy, r32.xyxx, r18.xxxx, r33.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.x, r22.xyzx, t9.xxxx, s13, r15.z
                        mad r21.y, r22.x, l(0.125000), r21.y
                        iadd r21.z, r21.z, l(1)
                      endloop 
                    else 
                      utof r33.z, r21.x
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.y, r33.xyzx, t9.xxxx, s13, r15.z
                    endif 
                    mul r15.z, r21.y, r21.y
                    mul r15.z, r21.y, r15.z
                  else 
                    mov r15.z, l(1.000000)
                  endif 
                  mul r9.w, r9.w, r15.z
                else 
                  ubfe r15.z, l(4), l(20), r33.w
                  ult r18.x, l(0), r15.z
                  and r18.x, r0.y, r18.x
                  if_nz r18.x
                    iadd r15.z, r15.z, cb2[0].x
                    iadd r15.z, r15.z, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.x, r15.z, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r15.z, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r15.z, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r15.z, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r15.z, l(116), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r15.z, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r15.z, l(148), t12.xyzw
                    mad r21.x, |r12.w|, l(-0.200000), l(0.400000)
                    mad r23.xyz, r3.xyzx, r21.xxxx, v7.xyzx
                    dp4 r22.x, r32.xyzw, r23.xyzw
                    dp4 r22.y, r33.xyzw, r23.xyzw
                    dp4 r21.x, r34.xyzw, r23.xyzw
                    dp4 r21.z, r35.xyzw, r23.xyzw
                    lt r22.z, r21.z, r21.x
                    div r22.xy, r22.xyxx, r21.zzzz
                    mad r22.xy, r22.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r22.xy, r37.zwzz, r22.xyxx
                    mul r22.xy, r37.xyxx, r22.xyxx
                    div r23.xy, r18.xxxx, r36.xzxx
                    add r32.xy, -r23.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                    ge r32.xy, r22.xyxx, r32.xyxx
                    ge r23.xy, r23.xyxx, r22.xyxx
                    or r23.xy, r23.xyxx, r32.xyxx
                    or r23.x, r23.y, r23.x
                    or r22.z, r22.z, r23.x
                    if_z r22.z
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r22.z, r15.z, l(28), t12.xxxx
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.xy, r15.z, l(164), t12.xyxx
                      mov_sat r22.xy, r22.xyxx
                      mad r32.xy, r22.xyxx, r36.xzxx, r36.ywyy
                      mul r15.z, r21.z, r23.y
                      mad r21.x, r23.x, r21.z, r21.x
                      div r15.z, r21.x, r15.z
                      max r15.z, r15.z, l(0.00006104)
                      and r21.x, r22.z, l(0x0000ffff)
                      if_nz r7.w
                        utof r22.z, r21.x
                        mov r21.z, l(0)
                        mov r23.x, l(0)
                        loop 
                          ige r23.y, r23.x, l(8)
                          breakc_nz r23.y
                          dp2 r33.x, icb[r23.x + 0].xyxx, r26.xyxx
                          dp2 r33.y, icb[r23.x + 0].yxyy, r26.xzxx
                          mad r22.xy, r33.xyxx, r18.xxxx, r32.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.x, r22.xyzx, t9.xxxx, s13, r15.z
                          mad r21.z, r22.x, l(0.125000), r21.z
                          iadd r23.x, r23.x, l(1)
                        endloop 
                      else 
                        utof r32.z, r21.x
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.z, r32.xyzx, t9.xxxx, s13, r15.z
                      endif 
                      mul r15.z, r21.z, r21.z
                      mul r15.z, r21.z, r15.z
                    else 
                      mov r15.z, l(1.000000)
                    endif 
                    mul r9.w, r9.w, r15.z
                  endif 
                endif 
                mad r15.z, -r13.w, r5.z, l(1.000000)
                mul r15.z, r15.z, r15.z
                mad r15.z, -r15.z, l(0.620000), l(0.620000)
                add r15.z, -r13.w, r15.z
                mad r15.z, r5.y, r15.z, r13.w
                mul r15.z, r9.w, r15.z
                lt r12.w, l(0.000000), r12.w
                mad r22.xyz, r15.zzzz, r20.xywx, r16.xyzx
                mad r19.xyz, r19.xyzx, r11.wwww, r12.xyzx
                dp3 r11.w, r19.xyzx, r19.xyzx
                rsq r11.w, r11.w
                mul r19.xyz, r11.wwww, r19.xyzx
                dp3 r11.w, r19.xyzx, r12.xyzx
                dp3 r15.z, r3.xyzx, r19.xyzx
                mad r18.x, |r15.z|, r0.w, -|r15.z|
                mad r15.z, |r15.z|, r18.x, l(1.000000)
                mad r13.w, r13.w, r1.w, r3.w
                mul r15.z, r15.z, r15.z
                mul r13.w, r13.w, r15.z
                rcp r13.w, r13.w
                mul r13.w, r14.w, r13.w
                mul r9.w, r9.w, r13.w
                mul r9.w, r9.w, l(0.250000)
                mad r19.xyz, r9.wwww, r20.xywx, r31.xyzx
                add_sat r11.w, -r11.w, l(1.000000)
                mul r13.w, r11.w, r11.w
                mul r13.w, r13.w, r13.w
                mul r11.w, r11.w, r13.w
                mul r9.w, r9.w, r11.w
                mad r20.xyw, r9.wwww, r20.xyxw, r30.xyxz
                movc r16.xyz, r12.wwww, r22.xyzx, r16.xyzx
                movc r30.xyz, r12.wwww, r20.xywx, r30.xyzx
                movc r31.xyz, r12.wwww, r19.xyzx, r31.xyzx
              endif 
            endif 
          endif 
          break 
          default 
          break 
        endswitch 
      endif 
    endif 
  endloop 
  mov r27.xyz, r16.xyzx
  mov r28.xyz, r30.xyzx
  mov r29.xyz, r31.xyzx
  iadd r6.z, r6.z, l(32)
endloop 
add r0.xyw, -r2.yzyw, l(1.000000, 1.000000, 0.000000, 1.000000)
mul r0.xyw, r0.xyxw, r28.xyxz
mad r0.xyw, r29.xyxz, r2.yzyw, r0.xyxw
mad r0.xyw, r27.xyxz, r1.xyxz, r0.xyxw
dp3 r1.x, r0.xywx, l(0.299000, 0.587000, 0.114000, 0.000000)
max r1.x, r1.x, l(0.000100)
max r1.w, r1.x, cb1[85].x
mul r1.xyz, r1.wwww, r4.xyzx
mov r4.w, l(1.000000)
movc r1.xyzw, cb0[13].xxxx, r1.xyzw, r4.xyzw
add r0.xyw, r0.xyxw, r1.xyxz
mul r1.w, r1.w, cb0[11].w
max r1.w, r1.w, l(1.000000)
div r1.xyz, r1.xyzx, r1.wwww
dp3_sat r1.x, r1.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
add o0.w, r0.z, r1.x
lt r0.z, l(0.000000), cb2[9].z
if_nz r0.z
  dp3 r0.z, v7.xyzx, v7.xyzx
  rsq r1.x, r0.z
  mul r1.xyz, r1.xxxx, v7.xyzx
  sqrt r0.z, r0.z
  lt r1.w, l(0.000000), cb2[13].w
  if_nz r1.w
    mad r2.xy, r0.zzzz, cb2[15].xyxx, cb2[14].zwzz
    mul r2.xy, r2.xyxx, cb2[16].xyxx
    lt r1.w, l(0.010000), |v7.z|
    mul r2.zw, v7.zzzz, cb2[15].zzzw
    mul r3.xy, r2.zwzz, l(-1.442695, -1.442695, 0.000000, 0.000000)
    exp r3.xy, r3.xyxx
    add r3.xy, -r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    div r2.zw, r3.xxxy, r2.zzzw
    mul r2.zw, r2.zzzw, r2.xxxy
    movc r2.xy, r1.wwww, r2.zwzz, r2.xyxx
    mul r2.xzw, r2.xxxx, cb2[12].xxyz
    exp r2.xzw, r2.xxzw
    mul r3.xyz, r2.yyyy, cb2[12].xyzx
    exp r3.xyz, r3.xyzx
    add r3.xyz, -r2.xzwx, r3.xyzx
    mad r2.xyz, cb2[13].wwww, r3.xyzx, r2.xzwx
  else 
    mad r1.w, r0.z, cb2[15].x, cb2[14].z
    mul r1.w, r1.w, cb2[16].x
    lt r2.w, l(0.010000), |v7.z|
    mul r3.x, v7.z, cb2[15].z
    mul r3.y, r3.x, l(-1.442695)
    exp r3.y, r3.y
    add r3.y, -r3.y, l(1.000000)
    div r3.x, r3.y, r3.x
    mul r3.x, r1.w, r3.x
    movc r1.w, r2.w, r3.x, r1.w
    mul r3.xyz, r1.wwww, cb2[12].xyzx
    exp r2.xyz, r3.xyzx
  endif 
  mad r2.xyz, r2.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r2.xyz, r2.xyzx, -cb2[9].zzzz
  dp3 r1.x, cb2[7].yzwy, -r1.xyzx
  mad r1.y, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r1.z, cb2[8].w, -r1.x, l(1.000000)
  mul r1.z, r1.z, r1.z
  mul r1.z, r1.z, l(12.566371)
  div r1.y, r1.y, r1.z
  add r0.z, r0.z, -cb2[10].w
  mul_sat r0.z, r0.z, cb2[11].w
  mul r0.z, r0.z, r1.y
  mov_sat r1.x, r1.x
  mad r1.x, r1.x, r1.x, l(1.000000)
  mad r1.x, r1.x, l(0.05968310), l(-1.000000)
  mad r1.x, cb2[8].z, r1.x, l(1.000000)
  mul r1.yzw, r0.zzzz, cb2[11].xxyz
  mad r1.xyz, r1.xxxx, cb2[10].xyzx, r1.yzwy
  mul r1.xyz, r1.xyzx, cb2[9].wwww
  add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r1.xyz, r1.xyzx, r3.xyzx
  mad r1.xyz, r0.xywx, r2.xyzx, r1.xyzx
else 
  mul r0.z, v7.z, cb2[6].x
  mad r1.w, cb2[6].x, v7.z, cb2[5].x
  lt r2.x, |r0.z|, l(0.000100)
  min r2.y, r1.w, l(64.000000)
  mul r2.y, r2.y, l(1.442695)
  exp r2.y, r2.y
  mov_sat r2.z, cb2[6].z
  lt r2.w, r1.w, l(0.000000)
  add r1.w, r1.w, l(1.000000)
  movc r1.w, r2.w, r2.y, r1.w
  add r1.w, r1.w, -cb2[6].z
  movc r0.z, r2.x, l(1.000000), r0.z
  div r0.z, r1.w, r0.z
  movc r0.z, r2.x, r2.z, r0.z
  mul r0.z, r0.z, cb2[5].z
  dp3 r1.w, v7.xyzx, v7.xyzx
  sqrt r2.x, r1.w
  mad r0.z, r0.z, r2.x, cb2[5].w
  exp r0.z, r0.z
  min r0.z, r0.z, l(1.000000)
  add r0.z, -r0.z, l(1.000000)
  rsq r1.w, r1.w
  mul r2.xyz, r1.wwww, v7.xyzx
  dp3 r1.w, cb2[7].yzwy, r2.xyzx
  mad_sat r1.w, cb2[8].y, r1.w, cb2[8].x
  add r2.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r2.xyzw, r1.wwww, r2.xyzw, cb2[4].xyzw
  mul r0.z, r0.z, r2.w
  add r2.xyz, -r0.xywx, r2.xyzx
  mad r1.xyz, r0.zzzz, r2.xyzx, r0.xywx
endif 
mul r0.xyz, r1.xyzx, cb1[85].yyyy
ge r1.xyz, r0.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.xyz, r0.xyzx, r1.xyzx
min o0.xyz, r0.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
ret 
// Approximately 2590 instruction slots used
