//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:35:48 2021
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float3 specColorTint;              // Offset:  160 Size:    12 [unused]
//   float baseNormalHeight;            // Offset:  172 Size:     4 [unused]
//   float2 glossRange;                 // Offset:  176 Size:     8
//   float detailScaleHeight;           // Offset:  184 Size:     4 [unused]
//   float eyeIrisScale;                // Offset:  188 Size:     4
//   float eyeLimbusScale;              // Offset:  192 Size:     4
//   float eyeRedness;                  // Offset:  196 Size:     4
//   float eyePupilDilation;            // Offset:  200 Size:     4 [unused]
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16
//   float4 debugGlossOverride;         // Offset:  992 Size:    16
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for shaderConstantSetBuffer
// {
//
//   struct GpuShaderConstantSet
//   {
//       
//       float4 scriptVector0;          // Offset:    0
//       float4 scriptVector1;          // Offset:   16
//       float4 scriptVector2;          // Offset:   32
//       float4 scriptVector3;          // Offset:   48
//       float4 scriptVector4;          // Offset:   64
//       float4 scriptVector5;          // Offset:   80
//       float4 scriptVector6;          // Offset:   96
//       float4 scriptVector7;          // Offset:  112
//       float4 weaponParam0;           // Offset:  128
//       float4 weaponParam1;           // Offset:  144
//       float4 weaponParam2;           // Offset:  160
//       float4 weaponParam3;           // Offset:  176
//       float4 weaponParam4;           // Offset:  192
//       float4 weaponParam5;           // Offset:  208
//       float4 weaponParam6;           // Offset:  224
//       float4 weaponParam7;           // Offset:  240
//       float4 characterParam0;        // Offset:  256
//       float4 characterParam1;        // Offset:  272
//       float4 characterParam2;        // Offset:  288
//       float4 characterParam3;        // Offset:  304
//       float4 characterParam4;        // Offset:  320
//       float4 characterParam5;        // Offset:  336
//       float4 characterParam6;        // Offset:  352
//       float4 characterParam7;        // Offset:  368
//
//   } $Element;                        // Offset:    0 Size:   384
//
// }
//
// Resource bind info for modelInstanceBuffer
// {
//
//   struct ModelInstanceData
//   {
//       
//       uint boneArrayIndex;           // Offset:    0
//       uint shaderConstantSet;        // Offset:    4
//       uint flagsAndPrevFrameIndex;   // Offset:    8
//       uint worldMatrix;              // Offset:   12
//       uint siegeAnimStateOffset;     // Offset:   16
//       uint prevFrameSiegeAnimStateOffset;// Offset:   20
//
//   } $Element;                        // Offset:    0 Size:    24
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// colorSampler                      sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// normalSampler                     sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// LinearSampler                     sampler      NA          NA             s5      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// shaderConstantSetBuffer           texture  struct         r/o             t0      1 
// modelInstanceBuffer               texture  struct         r/o             t4      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// floatZSampler                     texture  float4          2d            t21      1 
// colorMap                          texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// detailMap                         texture  float4          2d            t24      1 
// causticMap                        texture  float4          2d            t25      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyz         1     NONE   float       
// COLOR                    1      w        1     NONE   float       
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 4   x           3     NONE    uint   x   
// TEXCOORD                 9    yzw        3     NONE   float    yzw
// TEXCOORD                 1   xyz         4     NONE   float   xyz 
// TEXCOORD                 2   xyz         5     NONE   float   xyz 
// TEXCOORD                 3   xyz         6     NONE   float   xyz 
// OFFPOSITION              0   xyz         7     NONE   float   xyz 
// TEXCOORD                10   xyz         8     NONE   float   xyz 
// TEXCOORD                11   xyz         9     NONE   float   xyz 
// SV_IsFrontFace           0   x          10    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyz         0   TARGET   float   xyz 
// SV_TARGET                1   xyz         1   TARGET   float   xyz 
// SV_TARGET                2   xyzw        2   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[13], immediateIndexed
dcl_constantbuffer CB1[93], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_structured t0, 384
dcl_resource_structured t4, 24
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2darray (float,float,float,float) t31
dcl_input_ps_siv linear noperspective v0.xyzw, position
dcl_input_ps linear v2.xy
dcl_input_ps constant v3.x
dcl_input_ps constant v3.yzw
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyz
dcl_input_ps constant v8.xyz
dcl_input_ps constant v9.xyz
dcl_input_ps_sgv constant v10.x, is_front_face
dcl_output o0.xyz
dcl_output o1.xyz
dcl_output o2.xyzw
dcl_temps 61
dcl_indexableTemp x0[4], 4
dcl_indexableTemp x1[4], 4
dcl_indexableTemp x2[4], 4
dcl_indexableTemp x3[4], 4
dcl_indexableTemp x4[4], 4
dcl_indexableTemp x5[4], 4
dp3 r0.x, v4.xyzx, v4.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, v4.xyzx
dp3 r0.w, v5.xyzx, v5.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, v5.xyzx
dp3 r0.w, -v7.xyzx, -v7.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, -v7.xyzx
dp3 r0.w, v6.xyzx, v6.xyzx
rsq r0.w, r0.w
mul r3.xyz, r0.wwww, v6.xyzx
rcp r0.w, cb0[11].w
add r4.xy, v2.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
dp2 r1.w, r4.xyxx, r4.xyxx
sqrt r1.w, r1.w
max r2.w, r1.w, l(0.000010)
rcp r2.w, r2.w
mul r4.xy, r2.wwww, r4.xyxx
mul r0.w, r0.w, r1.w
mad r1.w, -cb0[11].w, l(0.500000), r1.w
mad r2.w, -cb0[11].w, l(0.500000), l(0.500000)
div r1.w, r1.w, r2.w
lt r2.w, r1.w, l(0.000000)
mul r0.w, r0.w, l(0.440000)
mad r1.w, r1.w, l(0.280000), l(0.220000)
movc r0.w, r2.w, r0.w, r1.w
mad r4.zw, r4.xxxy, r0.wwww, l(0.000000, 0.000000, 0.500000, 0.500000)
mad r1.w, cb0[12].x, l(0.050000), l(0.020000)
add r2.w, r0.w, r1.w
add r2.w, r2.w, l(-0.200000)
div r2.w, r2.w, r1.w
mad r2.w, -r2.w, l(10.000000), l(5.000000)
mul r2.w, r2.w, l(1.442695)
exp r2.w, r2.w
add r2.w, r2.w, l(1.000000)
div r2.w, l(1.013580), r2.w
add_sat r2.w, r2.w, l(-0.006700)
add r5.x, -r2.w, l(1.000000)
dp3 r2.w, v3.yzwy, v3.yzwy
rsq r2.w, r2.w
mul r6.xyz, r2.wwww, v3.yzwy
mul r3.w, r0.w, r0.w
mad_sat r3.w, -r3.w, l(18.400000), l(1.000000)
mul r3.w, r3.w, l(0.101000)
dp3 r5.w, r0.xyzx, r2.xyzx
mad r7.xy, r5.wwww, l(0.72695714, 0.72695714, 0.000000, 0.000000), l(-0.72695714, 0.72695714, 0.000000, 0.000000)
mad r6.w, r7.x, r7.y, l(1.000000)
sqrt r6.w, r6.w
mad r5.w, r5.w, l(0.72695714), -r6.w
mul r7.xyz, r2.xyzx, l(0.72695714, 0.72695714, 0.72695714, 0.000000)
mad r7.xyz, r5.wwww, r0.xyzx, -r7.xyzx
dp3 r5.w, r6.xyzx, -r7.xyzx
div r5.w, r3.w, r5.w
mul r7.xyz, r7.xyzx, r5.wwww
dp3 r8.x, r7.xyzx, v8.xyzx
dp3 r8.y, r7.xyzx, v9.xyzx
mov r5.y, l(0.74183977)
mul r7.xy, r5.xyxx, r8.xyxx
mov r5.z, -r5.x
mad r5.yz, r5.yyzy, r7.xxyx, r4.zzwz
ld_structured_indexable(structured_buffer, stride=24)(mixed,mixed,mixed,mixed) r5.w, v3.x, l(4), t4.xxxx
ld_structured_indexable(structured_buffer, stride=384)(mixed,mixed,mixed,mixed) r5.w, r5.w, l(0), t0.xxxx
mov_sat r5.w, r5.w
mad r5.w, r5.w, l(0.499000), l(0.001000)
rcp r6.w, r5.w
add r7.xy, r5.yzyy, l(-0.500000, -0.500000, 0.000000, 0.000000)
dp2 r7.z, r7.xyxx, r7.xyxx
sqrt r7.z, r7.z
max r7.w, r7.z, l(0.000010)
rcp r7.w, r7.w
mul r7.xy, r7.wwww, r7.xyxx
mul r6.w, r6.w, r7.z
mad r7.z, -r5.w, l(0.220000), r7.z
mad r5.w, -r5.w, l(0.220000), l(0.220000)
div r5.w, r7.z, r5.w
lt r7.z, r5.w, l(0.000000)
mul r6.w, r6.w, l(0.18181817)
mad r5.w, r5.w, l(0.180000), l(0.040000)
movc r5.w, r7.z, r6.w, r5.w
mad r7.xy, r7.xyxx, r5.wwww, l(0.500000, 0.500000, 0.000000, 0.000000)
mad r4.xy, r1.wwww, r4.xyxx, r4.zwzz
sample_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xyxx, t22.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r8.xyz, r7.xyxx, t22.xyzw, s1
mul r0.w, r0.w, cb0[12].y
mul r7.zw, r0.wwww, l(0.000000, 0.000000, 1.220000, 3.33333325)
mul r9.xyz, r4.xyzx, r7.zzzz
mad r4.xyw, r9.xyxz, l(0.29999995, -0.950000, 0.000000, -0.950000), r4.xyxz
mul r9.xyz, r7.wwww, r4.xywx
mul r9.xyz, r9.xyzx, l(-0.300000, -0.700000, -0.700000, 0.000000)
mad_sat r0.w, -r4.z, l(2.000000), l(1.000000)
mad_sat r4.xyz, r0.wwww, r9.xyzx, r4.xywx
add r8.xyz, -r4.xyzx, r8.xyzx
mad o2.xyz, r5.xxxx, r8.xyzx, r4.xyzx
mad o2.w, r5.x, l(-0.300000), l(0.500000)
mul r4.xy, v2.xyxx, cb0[4].xyxx
sample_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xyxx, t24.xyzw, s3
mad r8.xy, r4.xyxx, l(1.99218750, 1.99218750, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.w, r8.xyxx, r8.xyxx
add r0.w, -r0.w, l(1.000000)
max r0.w, r0.w, l(0.000000)
sqrt r8.z, r0.w
mul r0.w, r4.z, r4.z
mul r0.w, r0.w, l(0.33333334)
min r8.w, r0.w, l(1.000000)
add r4.xyzw, -r8.xyzw, l(0.000000, 0.000000, 1.000000, 0.000000)
mad r4.xyzw, r5.xxxx, r4.xyzw, r8.xyzw
dp4 r0.w, r4.xyzw, r4.xyzw
rsq r0.w, r0.w
mul r4.xyz, r0.wwww, r4.xyzx
mul r3.xyz, r3.xyzx, r4.yyyy
mad r1.xyz, r4.xxxx, r1.xyzx, r3.xyzx
mad r1.xyz, r4.zzzz, r0.xyzx, r1.xyzx
mad r0.w, r4.w, r0.w, l(0.00047165)
log r0.w, r0.w
mul_sat r0.w, r0.w, l(-0.05882353)
mul r3.xyz, r0.yyyy, cb1[5].xyzx
mad r3.xyz, r0.xxxx, cb1[4].xyzx, r3.xyzx
mad r3.xyz, r0.zzzz, cb1[6].xyzx, r3.xyzx
dp3 r1.w, r3.xyzx, r3.xyzx
rsq r1.w, r1.w
mul r3.xyz, r1.wwww, r3.xyzx
mul r4.xyzw, v0.xyxy, cb1[44].zwzw
mad r7.zw, cb1[73].xxxy, r4.zzzw, -cb1[73].zzzw
mul r8.xy, r7.zwzz, v0.wwww
dp2 r1.w, v0.xyxx, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r1.w, r1.w
mul r1.w, r1.w, l(52.982918)
frc r1.w, r1.w
mul r5.w, r1.w, l(3.141600)
mad r5.w, cb1[70].w, l(0.500000), r5.w
sincos r9.x, r10.x, r5.w
mul r11.xyzw, cb1[44].zwzw, l(4.166667, 4.166667, 16.666668, 16.666668)
mov r10.y, r9.x
mad r12.xyzw, r11.xyzw, r10.xyxy, r4.zwzw
mul r13.xyzw, r12.xyzw, cb1[44].xyxy
ftoi r14.xy, r13.xyxx
mov r14.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r6.w, r14.xyzw, t21.yzwx
ge r7.z, r6.w, l(0.984375)
mul r7.w, r6.w, l(1.01587307)
mad r6.w, r6.w, l(64.000000), l(-63.000000)
movc r6.w, r7.z, r6.w, r7.w
max r6.w, r6.w, l(0.00000001)
rcp r14.z, r6.w
mad r12.xyzw, cb1[73].xyxy, r12.xyzw, -cb1[73].zwzw
mul r14.xy, r12.xyxx, r14.zzzz
mov r8.z, v0.w
add r9.yzw, -r8.xxyz, r14.xxyz
dp3 r6.w, r9.yzwy, r9.yzwy
rsq r6.w, r6.w
mul r6.w, r6.w, -r9.w
max r6.w, r6.w, l(-1.000000)
ftoi r13.xy, r13.zwzz
mov r13.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r7.z, r13.xyzw, t21.yzxw
ge r7.w, r7.z, l(0.984375)
mul r8.w, r7.z, l(1.01587307)
mad r7.z, r7.z, l(64.000000), l(-63.000000)
movc r7.z, r7.w, r7.z, r8.w
max r7.z, r7.z, l(0.00000001)
rcp r13.z, r7.z
mul r13.xy, r12.zwzz, r13.zzzz
add r9.yzw, -r8.xxyz, r13.xxyz
dp3 r7.z, r9.yzwy, r9.yzwy
rsq r7.z, r7.z
mul r7.z, r7.z, -r9.w
max r6.w, r6.w, r7.z
mul r12.xyzw, cb1[44].zwzw, l(37.500000, 37.500000, 66.666672, 66.666672)
mad r13.xyzw, r12.xyzw, r10.xyxy, r4.zwzw
mul r14.xyzw, r13.xyzw, cb1[44].xyxy
ftoi r15.xy, r14.xyxx
mov r15.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r7.z, r15.xyzw, t21.yzxw
ge r7.w, r7.z, l(0.984375)
mul r8.w, r7.z, l(1.01587307)
mad r7.z, r7.z, l(64.000000), l(-63.000000)
movc r7.z, r7.w, r7.z, r8.w
max r7.z, r7.z, l(0.00000001)
rcp r15.z, r7.z
mad r13.xyzw, cb1[73].xyxy, r13.xyzw, -cb1[73].zwzw
mul r15.xy, r13.xyxx, r15.zzzz
add r9.yzw, -r8.xxyz, r15.xxyz
dp3 r7.z, r9.yzwy, r9.yzwy
rsq r7.z, r7.z
mul r7.z, r7.z, -r9.w
max r6.w, r6.w, r7.z
ftoi r14.xy, r14.zwzz
mov r14.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r7.z, r14.xyzw, t21.yzxw
ge r7.w, r7.z, l(0.984375)
mul r8.w, r7.z, l(1.01587307)
mad r7.z, r7.z, l(64.000000), l(-63.000000)
movc r7.z, r7.w, r7.z, r8.w
max r7.z, r7.z, l(0.00000001)
rcp r14.z, r7.z
mul r14.xy, r13.zwzz, r14.zzzz
add r9.yzw, -r8.xxyz, r14.xxyz
dp3 r7.z, r9.yzwy, r9.yzwy
rsq r7.z, r7.z
mul r7.z, r7.z, -r9.w
max r6.w, r6.w, r7.z
mul r13.xyzw, cb1[44].zwzw, l(104.166664, 104.166664, 150.000000, 150.000000)
mad r14.xyzw, r13.xyzw, r10.xyxy, r4.zwzw
mul r15.xyzw, r14.xyzw, cb1[44].xyxy
ftoi r16.xy, r15.xyxx
mov r16.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r7.z, r16.xyzw, t21.yzxw
ge r7.w, r7.z, l(0.984375)
mul r8.w, r7.z, l(1.01587307)
mad r7.z, r7.z, l(64.000000), l(-63.000000)
movc r7.z, r7.w, r7.z, r8.w
max r7.z, r7.z, l(0.00000001)
rcp r16.z, r7.z
mad r14.xyzw, cb1[73].xyxy, r14.xyzw, -cb1[73].zwzw
mul r16.xy, r14.xyxx, r16.zzzz
add r9.yzw, -r8.xxyz, r16.xxyz
dp3 r7.z, r9.yzwy, r9.yzwy
rsq r7.z, r7.z
mul r7.z, r7.z, -r9.w
max r6.w, r6.w, r7.z
ftoi r15.xy, r15.zwzz
mov r15.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r7.z, r15.xyzw, t21.yzxw
ge r7.w, r7.z, l(0.984375)
mul r8.w, r7.z, l(1.01587307)
mad r7.z, r7.z, l(64.000000), l(-63.000000)
movc r7.z, r7.w, r7.z, r8.w
max r7.z, r7.z, l(0.00000001)
rcp r15.z, r7.z
mul r15.xy, r14.zwzz, r15.zzzz
add r9.yzw, -r8.xxyz, r15.xxyz
dp3 r7.z, r9.yzwy, r9.yzwy
rsq r7.z, r7.z
mul r7.z, r7.z, -r9.w
max r6.w, r6.w, r7.z
mad r11.xyzw, r11.xyzw, -r10.xyxy, r4.zwzw
mul r14.xyzw, r11.xyzw, cb1[44].xyxy
ftoi r14.xyzw, r14.zwxy
mov r15.xy, r14.zwzz
mov r15.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r7.z, r15.xyzw, t21.yzxw
ge r7.w, r7.z, l(0.984375)
mul r8.w, r7.z, l(1.01587307)
mad r7.z, r7.z, l(64.000000), l(-63.000000)
movc r7.z, r7.w, r7.z, r8.w
max r7.z, r7.z, l(0.00000001)
rcp r15.z, r7.z
mad r11.xyzw, cb1[73].xyxy, r11.xyzw, -cb1[73].zwzw
mul r15.xy, r11.xyxx, r15.zzzz
add r9.yzw, -r8.xxyz, r15.xxyz
dp3 r7.z, r9.yzwy, r9.yzwy
rsq r7.z, r7.z
mul r7.z, r7.z, -r9.w
max r7.z, r7.z, l(-1.000000)
mov r14.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r7.w, r14.xyzw, t21.yzwx
ge r8.w, r7.w, l(0.984375)
mul r9.y, r7.w, l(1.01587307)
mad r7.w, r7.w, l(64.000000), l(-63.000000)
movc r7.w, r8.w, r7.w, r9.y
max r7.w, r7.w, l(0.00000001)
rcp r14.z, r7.w
mul r14.xy, r11.zwzz, r14.zzzz
add r9.yzw, -r8.xxyz, r14.xxyz
dp3 r7.w, r9.yzwy, r9.yzwy
rsq r7.w, r7.w
mul r7.w, r7.w, -r9.w
max r7.z, r7.w, r7.z
mad r11.xyzw, r12.xyzw, -r10.xyxy, r4.zwzw
mul r12.xyzw, r11.xyzw, cb1[44].xyxy
ftoi r12.xyzw, r12.zwxy
mov r14.xy, r12.zwzz
mov r14.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r7.w, r14.xyzw, t21.yzwx
ge r8.w, r7.w, l(0.984375)
mul r9.y, r7.w, l(1.01587307)
mad r7.w, r7.w, l(64.000000), l(-63.000000)
movc r7.w, r8.w, r7.w, r9.y
max r7.w, r7.w, l(0.00000001)
rcp r14.z, r7.w
mad r11.xyzw, cb1[73].xyxy, r11.xyzw, -cb1[73].zwzw
mul r14.xy, r11.xyxx, r14.zzzz
add r9.yzw, -r8.xxyz, r14.xxyz
dp3 r7.w, r9.yzwy, r9.yzwy
rsq r7.w, r7.w
mul r7.w, r7.w, -r9.w
max r7.z, r7.w, r7.z
mov r12.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r7.w, r12.xyzw, t21.yzwx
ge r8.w, r7.w, l(0.984375)
mul r9.y, r7.w, l(1.01587307)
mad r7.w, r7.w, l(64.000000), l(-63.000000)
movc r7.w, r8.w, r7.w, r9.y
max r7.w, r7.w, l(0.00000001)
rcp r12.z, r7.w
mul r12.xy, r11.zwzz, r12.zzzz
add r9.yzw, -r8.xxyz, r12.xxyz
dp3 r7.w, r9.yzwy, r9.yzwy
rsq r7.w, r7.w
mul r7.w, r7.w, -r9.w
max r7.z, r7.w, r7.z
mad r4.xyzw, r13.xyzw, -r10.xyxy, r4.xyzw
mul r11.xyzw, r4.xyzw, cb1[44].xyxy
ftoi r11.xyzw, r11.zwxy
mov r12.xy, r11.zwzz
mov r12.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r7.w, r12.xyzw, t21.yzwx
ge r8.w, r7.w, l(0.984375)
mul r9.y, r7.w, l(1.01587307)
mad r7.w, r7.w, l(64.000000), l(-63.000000)
movc r7.w, r8.w, r7.w, r9.y
max r7.w, r7.w, l(0.00000001)
rcp r12.z, r7.w
mad r4.xyzw, cb1[73].xyxy, r4.xyzw, -cb1[73].zwzw
mul r12.xy, r4.xyxx, r12.zzzz
add r9.yzw, -r8.xxyz, r12.xxyz
dp3 r4.x, r9.yzwy, r9.yzwy
rsq r4.x, r4.x
mul r4.x, r4.x, -r9.w
max r4.x, r4.x, r7.z
mov r11.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r4.y, r11.xyzw, t21.yxzw
ge r7.z, r4.y, l(0.984375)
mul r7.w, r4.y, l(1.01587307)
mad r4.y, r4.y, l(64.000000), l(-63.000000)
movc r4.y, r7.z, r4.y, r7.w
max r4.y, r4.y, l(0.00000001)
rcp r11.z, r4.y
mul r11.xy, r4.zwzz, r11.zzzz
add r4.yzw, -r8.xxyz, r11.xxyz
dp3 r4.y, r4.yzwy, r4.yzwy
rsq r4.y, r4.y
mul r4.y, r4.y, -r4.w
max r4.x, r4.y, r4.x
mul r4.yz, r10.xxyx, cb1[73].xxyx
dp2 r4.w, r4.yzyy, r4.yzyy
rsq r4.w, r4.w
mul r8.xy, r4.wwww, r4.yzyy
mov r8.zw, -r8.yyyy
dp2 r4.y, r3.yxyy, r8.xzxx
mad r3.xy, -r8.wxww, r4.yyyy, r3.xyxx
dp3 r4.y, r3.xyzx, r3.xyzx
rsq r4.y, r4.y
mul r3.xyz, r3.zxyz, r4.yyyy
dp2 r3.y, r8.xyxx, r3.yzyy
ge r3.y, r3.y, l(0.000000)
movc r3.y, r3.y, l(-1.000000), l(1.000000)
mov_sat r3.x, -r3.x
add r3.z, -r3.x, l(1.000000)
sqrt r3.z, r3.z
mad r4.y, r3.x, l(-0.01872930), l(0.074261)
mad r4.y, r4.y, r3.x, l(-0.21211439)
mad r3.x, r4.y, r3.x, l(1.57072878)
mul r3.x, r3.z, r3.x
mul r3.z, r3.x, r3.y
add r4.y, -|r6.w|, l(1.000000)
sqrt r4.y, r4.y
mad r4.z, |r6.w|, l(-0.01872930), l(0.074261)
mad r4.z, r4.z, |r6.w|, l(-0.21211439)
mad r4.z, r4.z, |r6.w|, l(1.57072878)
mul r4.w, r4.y, r4.z
mad r4.w, r4.w, l(-2.000000), l(3.14159274)
lt r6.w, r6.w, -r6.w
and r4.w, r4.w, r6.w
mad r4.y, r4.z, r4.y, r4.w
add r4.z, -|r4.x|, l(1.000000)
sqrt r4.z, r4.z
mad r4.w, |r4.x|, l(-0.01872930), l(0.074261)
mad r4.w, r4.w, |r4.x|, l(-0.21211439)
mad r4.w, r4.w, |r4.x|, l(1.57072878)
mul r6.w, r4.z, r4.w
mad r6.w, r6.w, l(-2.000000), l(3.14159274)
lt r4.x, r4.x, -r4.x
and r4.x, r4.x, r6.w
mad r4.x, r4.w, r4.z, r4.x
mad r4.y, -r3.y, r3.x, -r4.y
max r4.y, r4.y, l(-1.570800)
mad r4.y, r3.y, r3.x, r4.y
mad r4.x, -r3.y, r3.x, r4.x
min r4.x, r4.x, l(1.570800)
mad r4.x, r3.y, r3.x, r4.x
sincos r8.x, r11.x, r3.z
add r4.xy, r4.xyxx, r4.xyxx
mad r4.z, r4.y, r8.x, r11.x
mad r4.y, -r3.y, r3.x, r4.y
sincos null, r4.y, r4.y
add r4.y, -r4.y, r4.z
mad r4.z, r4.x, r8.x, r11.x
mad r3.x, -r3.y, r3.x, r4.x
sincos null, r3.x, r3.x
add r3.x, -r3.x, r4.z
mul r3.x, r3.x, l(0.250000)
mad r3.x, r4.y, l(0.250000), r3.x
mad r3.y, r3.z, r8.x, r11.x
div r3.x, r3.x, r3.y
log r3.x, |r3.x|
mul r3.xyz, r3.xxxx, l(0.600000, 0.850000, 0.870000, 0.000000)
exp r3.xyz, r3.xyzx
add r4.xy, r5.yzyy, r7.xyxx
mul r7.xyz, cb1[9].xywx, -cb1[24].yyyy
mad r7.xyz, -cb1[24].xxxx, cb1[8].xywx, r7.xyzx
mad r7.xyz, -cb1[24].zzzz, cb1[10].xywx, r7.xyzx
add r7.xyz, r7.xyzx, cb1[11].xywx
add r8.xyz, v7.xyzx, cb1[24].xyzx
dp3 r4.z, -r2.xyzx, r0.xyzx
add r4.z, r4.z, r4.z
mad r2.xyz, r0.xyzx, -r4.zzzz, -r2.xyzx
dp3 r4.z, r2.xyzx, r2.xyzx
rsq r4.z, r4.z
mul r2.xyz, r2.xyzx, r4.zzzz
mul r9.yzw, r8.yyyy, cb1[9].xxyw
mad r9.yzw, r8.xxxx, cb1[8].xxyw, r9.yyzw
mad r9.yzw, r8.zzzz, cb1[10].xxyw, r9.yyzw
add r9.yzw, r7.xxyz, r9.yyzw
rcp r11.z, r9.w
mul r4.zw, r9.yyyz, r11.zzzz
mad r11.xy, r4.zwzz, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
mad r2.xyz, r2.xyzx, l(2.400000, 2.400000, 2.400000, 0.000000), r8.xyzx
mul r8.xyz, r2.yyyy, cb1[9].xywx
mad r8.xyz, r2.xxxx, cb1[8].xywx, r8.xyzx
mad r2.xyz, r2.zzzz, cb1[10].xywx, r8.xyzx
add r2.xyz, r7.xyzx, r2.xyzx
mul r2.xy, r2.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000)
rcp r8.z, r2.z
mad r8.xy, r2.xyxx, r8.zzzz, l(0.500000, 0.500000, 0.000000, 0.000000)
add r2.xyz, -r11.xyzx, r8.xyzx
deriv_rtx_coarse r4.z, r11.z
deriv_rty_coarse r4.w, r11.z
mul r8.xy, r4.wwww, l(-0.250000, 0.250000, 0.000000, 0.000000)
mad r4.zw, r4.zzzz, l(0.000000, 0.000000, -0.250000, 0.250000), r8.xxxy
deriv_rtx_coarse r8.xyz, r2.xyzx
deriv_rty_coarse r10.yzw, r2.xxyz
mul r12.xyz, r10.yzwy, l(-0.250000, -0.250000, -0.250000, 0.000000)
mad r12.xyz, r8.xyzx, l(-0.250000, -0.250000, -0.250000, 0.000000), r12.xyzx
add r12.xyz, r2.xyzx, r12.xyzx
mad r13.xyzw, cb1[44].zwzw, l(0.250000, 0.250000, -0.250000, -0.250000), r11.xyxy
add r11.xy, r4.zwzz, r11.zzzz
mul r10.yzw, r10.yyzw, l(0.000000, 0.250000, 0.250000, 0.250000)
mad r8.xyz, r8.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000), r10.yzwy
add r2.xyz, r2.xyzx, r8.xyzx
dp2 r4.z, cb1[44].zwzz, cb1[44].zwzz
dp2 r4.w, r12.xyxx, r12.xyxx
sqrt r4.zw, r4.zzzw
rcp r4.w, r4.w
mul r4.w, r4.w, r4.z
mov x1[0].x, l(0.00173611)
mov r11.zw, r13.zzzw
mad r8.xyz, r12.xyzx, l(0.00173611, 0.00173611, 0.00173611, 0.000000), r11.zwxz
lt r9.yz, r4.wwww, l(0.000000, 0.00173611, 0.015625, 0.000000)
mul r8.xy, r8.xyxx, cb1[44].xyxx
ftoi r14.xy, r8.xyxx
mov r14.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r6.w, r14.xyzw, t21.yzwx
ge r7.w, r6.w, l(0.984375)
mul r8.x, r6.w, l(1.01587307)
mad r6.w, r6.w, l(64.000000), l(-63.000000)
movc r6.w, r7.w, r6.w, r8.x
max r6.w, r6.w, l(0.00000001)
rcp r6.w, r6.w
mov x2[0].x, r6.w
mul r7.w, r6.w, r8.z
lt r7.w, l(1.000000), r7.w
and r7.w, r7.w, l(0x3f800000)
movc r7.w, r9.y, r7.w, l(1.000000)
mov x0[0].x, r7.w
mov x1[1].x, l(0.015625)
mov r13.z, r11.y
mad r8.xyz, r2.xyzx, l(0.015625, 0.015625, 0.015625, 0.000000), r13.xyzx
mul r8.xy, r8.xyxx, cb1[44].xyxx
ftoi r14.xy, r8.xyxx
mov r14.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r8.x, r14.xyzw, t21.xyzw
ge r8.y, r8.x, l(0.984375)
mul r8.w, r8.x, l(1.01587307)
mad r8.x, r8.x, l(64.000000), l(-63.000000)
movc r8.x, r8.y, r8.x, r8.w
max r8.x, r8.x, l(0.00000001)
rcp r8.x, r8.x
mov x2[1].x, r8.x
mul r8.y, r8.x, r8.z
lt r8.y, l(1.000000), r8.y
and r8.y, r8.y, l(0x3f800000)
movc r8.y, r9.z, r8.y, l(1.000000)
mov x0[1].x, r8.y
add r8.z, r7.w, r8.y
ne r8.z, r8.z, l(0.000000)
if_nz r8.z
  mad r8.z, r7.w, l(0.02604167), l(0.00173611)
  mov x1[0].x, r8.z
  mad r10.yzw, r12.xxyz, r8.zzzz, r11.zzwx
  lt r8.z, r4.w, r8.z
  mul r9.yz, r10.yyzy, cb1[44].xxyx
  ftoi r14.xy, r9.yzyy
  mov r14.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r8.w, r14.xyzw, t21.yzwx
  ge r9.y, r8.w, l(0.984375)
  mul r9.z, r8.w, l(1.01587307)
  mad r8.w, r8.w, l(64.000000), l(-63.000000)
  movc r8.w, r9.y, r8.w, r9.z
  max r8.w, r8.w, l(0.00000001)
  rcp r8.w, r8.w
  movc r6.w, r8.z, r8.w, r6.w
  mov x2[0].x, r6.w
  mul r6.w, r8.w, r10.w
  lt r6.w, l(1.000000), r6.w
  and r6.w, r6.w, l(0x3f800000)
  mul r6.w, r6.w, r7.w
  movc r6.w, r8.z, r6.w, r7.w
  mov x0[0].x, r6.w
  mad r7.w, r8.y, l(0.046875), l(0.015625)
  mov x1[1].x, r7.w
  mad r10.yzw, r2.xxyz, r7.wwww, r13.xxyz
  lt r7.w, r4.w, r7.w
  mul r8.zw, r10.yyyz, cb1[44].xxxy
  ftoi r14.xy, r8.zwzz
  mov r14.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r8.z, r14.xyzw, t21.yzxw
  ge r8.w, r8.z, l(0.984375)
  mul r9.y, r8.z, l(1.01587307)
  mad r8.z, r8.z, l(64.000000), l(-63.000000)
  movc r8.z, r8.w, r8.z, r9.y
  max r8.z, r8.z, l(0.00000001)
  rcp r8.z, r8.z
  movc r8.x, r7.w, r8.z, r8.x
  mov x2[1].x, r8.x
  mul r8.x, r8.z, r10.w
  lt r8.x, l(1.000000), r8.x
  and r8.x, r8.x, l(0x3f800000)
  mul r8.x, r8.x, r8.y
  movc r7.w, r7.w, r8.x, r8.y
  mov x0[1].x, r7.w
  add r6.w, r6.w, r7.w
  eq r6.w, r6.w, l(0.000000)
else 
  mov r6.w, l(-1)
endif 
if_z r6.w
  mov r6.w, x1[0].x
  mov r7.w, x0[0].x
  add r8.x, -r6.w, l(0.08506944)
  mad r6.w, r7.w, r8.x, r6.w
  mov x1[0].x, r6.w
  mad r8.xyz, r12.xyzx, r6.wwww, r11.zwxz
  lt r6.w, r4.w, r6.w
  mul r8.xy, r8.xyxx, cb1[44].xyxx
  ftoi r14.xy, r8.xyxx
  mov r14.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r8.x, r14.xyzw, t21.xyzw
  ge r8.y, r8.x, l(0.984375)
  mul r8.w, r8.x, l(1.01587307)
  mad r8.x, r8.x, l(64.000000), l(-63.000000)
  movc r8.x, r8.y, r8.x, r8.w
  max r8.x, r8.x, l(0.00000001)
  rcp r8.x, r8.x
  mov r8.y, x2[0].x
  movc r8.y, r6.w, r8.x, r8.y
  mov x2[0].x, r8.y
  mul r8.x, r8.x, r8.z
  lt r8.x, l(1.000000), r8.x
  and r8.x, r8.x, l(0x3f800000)
  mul r8.x, r7.w, r8.x
  movc r6.w, r6.w, r8.x, r7.w
  mov x0[0].x, r6.w
  mov r7.w, x1[1].x
  mov r8.x, x0[1].x
  add r8.y, -r7.w, l(0.140625)
  mad r7.w, r8.x, r8.y, r7.w
  mov x1[1].x, r7.w
  mad r8.yzw, r2.xxyz, r7.wwww, r13.xxyz
  lt r7.w, r4.w, r7.w
  mul r8.yz, r8.yyzy, cb1[44].xxyx
  ftoi r14.xy, r8.yzyy
  mov r14.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r8.y, r14.xyzw, t21.yxzw
  ge r8.z, r8.y, l(0.984375)
  mul r9.y, r8.y, l(1.01587307)
  mad r8.y, r8.y, l(64.000000), l(-63.000000)
  movc r8.y, r8.z, r8.y, r9.y
  max r8.y, r8.y, l(0.00000001)
  rcp r8.y, r8.y
  mov r8.z, x2[1].x
  movc r8.z, r7.w, r8.y, r8.z
  mov x2[1].x, r8.z
  mul r8.y, r8.y, r8.w
  lt r8.y, l(1.000000), r8.y
  and r8.y, r8.y, l(0x3f800000)
  mul r8.y, r8.y, r8.x
  movc r7.w, r7.w, r8.y, r8.x
  mov x0[1].x, r7.w
  add r6.w, r6.w, r7.w
  eq r6.w, r6.w, l(0.000000)
else 
  mov r6.w, l(-1)
endif 
if_z r6.w
  mov r6.w, x1[0].x
  mov r7.w, x0[0].x
  add r8.x, -r6.w, l(0.17361110)
  mad r6.w, r7.w, r8.x, r6.w
  mov x1[0].x, r6.w
  mad r8.xyz, r12.xyzx, r6.wwww, r11.zwxz
  lt r6.w, r4.w, r6.w
  mul r8.xy, r8.xyxx, cb1[44].xyxx
  ftoi r14.xy, r8.xyxx
  mov r14.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r8.x, r14.xyzw, t21.xyzw
  ge r8.y, r8.x, l(0.984375)
  mul r8.w, r8.x, l(1.01587307)
  mad r8.x, r8.x, l(64.000000), l(-63.000000)
  movc r8.x, r8.y, r8.x, r8.w
  max r8.x, r8.x, l(0.00000001)
  rcp r8.x, r8.x
  mov r8.y, x2[0].x
  movc r8.y, r6.w, r8.x, r8.y
  mov x2[0].x, r8.y
  mul r8.x, r8.x, r8.z
  lt r8.x, l(1.000000), r8.x
  and r8.x, r8.x, l(0x3f800000)
  mul r8.x, r7.w, r8.x
  movc r6.w, r6.w, r8.x, r7.w
  mov x0[0].x, r6.w
  mov r7.w, x1[1].x
  mov r8.x, x0[1].x
  add r8.y, -r7.w, l(0.250000)
  mad r7.w, r8.x, r8.y, r7.w
  mov x1[1].x, r7.w
  mad r8.yzw, r2.xxyz, r7.wwww, r13.xxyz
  lt r7.w, r4.w, r7.w
  mul r8.yz, r8.yyzy, cb1[44].xxyx
  ftoi r14.xy, r8.yzyy
  mov r14.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r8.y, r14.xyzw, t21.yxzw
  ge r8.z, r8.y, l(0.984375)
  mul r9.y, r8.y, l(1.01587307)
  mad r8.y, r8.y, l(64.000000), l(-63.000000)
  movc r8.y, r8.z, r8.y, r9.y
  max r8.y, r8.y, l(0.00000001)
  rcp r8.y, r8.y
  mov r8.z, x2[1].x
  movc r8.z, r7.w, r8.y, r8.z
  mov x2[1].x, r8.z
  mul r8.y, r8.y, r8.w
  lt r8.y, l(1.000000), r8.y
  and r8.y, r8.y, l(0x3f800000)
  mul r8.y, r8.y, r8.x
  movc r7.w, r7.w, r8.y, r8.x
  mov x0[1].x, r7.w
  add r6.w, r6.w, r7.w
  eq r6.w, r6.w, l(0.000000)
else 
  mov r6.w, l(-1)
endif 
if_z r6.w
  mov r6.w, x1[0].x
  mov r7.w, x0[0].x
  add r8.x, -r6.w, l(0.29340279)
  mad r6.w, r7.w, r8.x, r6.w
  mov x1[0].x, r6.w
  mad r8.xyz, r12.xyzx, r6.wwww, r11.zwxz
  lt r6.w, r4.w, r6.w
  mul r8.xy, r8.xyxx, cb1[44].xyxx
  ftoi r14.xy, r8.xyxx
  mov r14.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r8.x, r14.xyzw, t21.xyzw
  ge r8.y, r8.x, l(0.984375)
  mul r8.w, r8.x, l(1.01587307)
  mad r8.x, r8.x, l(64.000000), l(-63.000000)
  movc r8.x, r8.y, r8.x, r8.w
  max r8.x, r8.x, l(0.00000001)
  rcp r8.x, r8.x
  mov r8.y, x2[0].x
  movc r8.y, r6.w, r8.x, r8.y
  mov x2[0].x, r8.y
  mul r8.x, r8.x, r8.z
  lt r8.x, l(1.000000), r8.x
  and r8.x, r8.x, l(0x3f800000)
  mul r8.x, r7.w, r8.x
  movc r6.w, r6.w, r8.x, r7.w
  mov x0[0].x, r6.w
  mov r7.w, x1[1].x
  mov r8.x, x0[1].x
  add r8.y, -r7.w, l(0.390625)
  mad r7.w, r8.x, r8.y, r7.w
  mov x1[1].x, r7.w
  mad r8.yzw, r2.xxyz, r7.wwww, r13.xxyz
  lt r7.w, r4.w, r7.w
  mul r8.yz, r8.yyzy, cb1[44].xxyx
  ftoi r14.xy, r8.yzyy
  mov r14.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r8.y, r14.xyzw, t21.yxzw
  ge r8.z, r8.y, l(0.984375)
  mul r9.y, r8.y, l(1.01587307)
  mad r8.y, r8.y, l(64.000000), l(-63.000000)
  movc r8.y, r8.z, r8.y, r9.y
  max r8.y, r8.y, l(0.00000001)
  rcp r8.y, r8.y
  mov r8.z, x2[1].x
  movc r8.z, r7.w, r8.y, r8.z
  mov x2[1].x, r8.z
  mul r8.y, r8.y, r8.w
  lt r8.y, l(1.000000), r8.y
  and r8.y, r8.y, l(0x3f800000)
  mul r8.y, r8.y, r8.x
  movc r7.w, r7.w, r8.y, r8.x
  mov x0[1].x, r7.w
  add r6.w, r6.w, r7.w
  eq r6.w, r6.w, l(0.000000)
else 
  mov r6.w, l(-1)
endif 
if_z r6.w
  mov r6.w, x1[0].x
  mov r7.w, x0[0].x
  add r8.x, -r6.w, l(0.44444448)
  mad r6.w, r7.w, r8.x, r6.w
  mov x1[0].x, r6.w
  mad r8.xyz, r12.xyzx, r6.wwww, r11.zwxz
  lt r6.w, r4.w, r6.w
  mul r8.xy, r8.xyxx, cb1[44].xyxx
  ftoi r14.xy, r8.xyxx
  mov r14.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r8.x, r14.xyzw, t21.xyzw
  ge r8.y, r8.x, l(0.984375)
  mul r8.w, r8.x, l(1.01587307)
  mad r8.x, r8.x, l(64.000000), l(-63.000000)
  movc r8.x, r8.y, r8.x, r8.w
  max r8.x, r8.x, l(0.00000001)
  rcp r8.x, r8.x
  mov r8.y, x2[0].x
  movc r8.y, r6.w, r8.x, r8.y
  mov x2[0].x, r8.y
  mul r8.x, r8.x, r8.z
  lt r8.x, l(1.000000), r8.x
  and r8.x, r8.x, l(0x3f800000)
  mul r8.x, r7.w, r8.x
  movc r6.w, r6.w, r8.x, r7.w
  mov x0[0].x, r6.w
  mov r7.w, x1[1].x
  mov r8.x, x0[1].x
  add r8.y, -r7.w, l(0.562500)
  mad r7.w, r8.x, r8.y, r7.w
  mov x1[1].x, r7.w
  mad r8.yzw, r2.xxyz, r7.wwww, r13.xxyz
  lt r7.w, r4.w, r7.w
  mul r8.yz, r8.yyzy, cb1[44].xxyx
  ftoi r14.xy, r8.yzyy
  mov r14.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r8.y, r14.xyzw, t21.yxzw
  ge r8.z, r8.y, l(0.984375)
  mul r9.y, r8.y, l(1.01587307)
  mad r8.y, r8.y, l(64.000000), l(-63.000000)
  movc r8.y, r8.z, r8.y, r9.y
  max r8.y, r8.y, l(0.00000001)
  rcp r8.y, r8.y
  mov r8.z, x2[1].x
  movc r8.z, r7.w, r8.y, r8.z
  mov x2[1].x, r8.z
  mul r8.y, r8.y, r8.w
  lt r8.y, l(1.000000), r8.y
  and r8.y, r8.y, l(0x3f800000)
  mul r8.y, r8.y, r8.x
  movc r7.w, r7.w, r8.y, r8.x
  mov x0[1].x, r7.w
  add r6.w, r6.w, r7.w
  eq r6.w, r6.w, l(0.000000)
else 
  mov r6.w, l(-1)
endif 
if_z r6.w
  mov r6.w, x1[0].x
  mov r7.w, x0[0].x
  add r8.x, -r6.w, l(0.62673616)
  mad r6.w, r7.w, r8.x, r6.w
  mov x1[0].x, r6.w
  mad r8.xyz, r12.xyzx, r6.wwww, r11.zwxz
  lt r6.w, r4.w, r6.w
  mul r8.xy, r8.xyxx, cb1[44].xyxx
  ftoi r14.xy, r8.xyxx
  mov r14.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r8.x, r14.xyzw, t21.xyzw
  ge r8.y, r8.x, l(0.984375)
  mul r8.w, r8.x, l(1.01587307)
  mad r8.x, r8.x, l(64.000000), l(-63.000000)
  movc r8.x, r8.y, r8.x, r8.w
  max r8.x, r8.x, l(0.00000001)
  rcp r8.x, r8.x
  mov r8.y, x2[0].x
  movc r8.y, r6.w, r8.x, r8.y
  mov x2[0].x, r8.y
  mul r8.x, r8.x, r8.z
  lt r8.x, l(1.000000), r8.x
  and r8.x, r8.x, l(0x3f800000)
  mul r8.x, r7.w, r8.x
  movc r6.w, r6.w, r8.x, r7.w
  mov x0[0].x, r6.w
  mov r7.w, x1[1].x
  mov r8.x, x0[1].x
  add r8.y, -r7.w, l(0.765625)
  mad r7.w, r8.x, r8.y, r7.w
  mov x1[1].x, r7.w
  mad r8.yzw, r2.xxyz, r7.wwww, r13.xxyz
  lt r7.w, r4.w, r7.w
  mul r8.yz, r8.yyzy, cb1[44].xxyx
  ftoi r14.xy, r8.yzyy
  mov r14.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r8.y, r14.xyzw, t21.yxzw
  ge r8.z, r8.y, l(0.984375)
  mul r9.y, r8.y, l(1.01587307)
  mad r8.y, r8.y, l(64.000000), l(-63.000000)
  movc r8.y, r8.z, r8.y, r9.y
  max r8.y, r8.y, l(0.00000001)
  rcp r8.y, r8.y
  mov r8.z, x2[1].x
  movc r8.z, r7.w, r8.y, r8.z
  mov x2[1].x, r8.z
  mul r8.y, r8.y, r8.w
  lt r8.y, l(1.000000), r8.y
  and r8.y, r8.y, l(0x3f800000)
  mul r8.y, r8.y, r8.x
  movc r7.w, r7.w, r8.y, r8.x
  mov x0[1].x, r7.w
  add r6.w, r6.w, r7.w
  eq r6.w, r6.w, l(0.000000)
else 
  mov r6.w, l(-1)
endif 
if_z r6.w
  mov r6.w, x1[0].x
  mov r7.w, x0[0].x
  add r8.x, -r6.w, l(0.84027779)
  mad r6.w, r7.w, r8.x, r6.w
  mad r8.xyz, r12.xyzx, r6.wwww, r11.zwxz
  lt r6.w, r4.w, r6.w
  mul r8.xy, r8.xyxx, cb1[44].xyxx
  ftoi r11.xy, r8.xyxx
  mov r11.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r8.x, r11.xyzw, t21.xyzw
  ge r8.y, r8.x, l(0.984375)
  mul r8.w, r8.x, l(1.01587307)
  mad r8.x, r8.x, l(64.000000), l(-63.000000)
  movc r8.x, r8.y, r8.x, r8.w
  max r8.x, r8.x, l(0.00000001)
  rcp r8.x, r8.x
  mov r8.y, x2[0].x
  movc r8.y, r6.w, r8.x, r8.y
  mov x2[0].x, r8.y
  mul r8.x, r8.x, r8.z
  lt r8.x, l(1.000000), r8.x
  and r8.x, r8.x, l(0x3f800000)
  mul r8.x, r7.w, r8.x
  movc r6.w, r6.w, r8.x, r7.w
  mov x0[0].x, r6.w
  mov r6.w, x1[1].x
  mov r7.w, x0[1].x
  add r8.x, -r6.w, l(1.000000)
  mad r6.w, r7.w, r8.x, r6.w
  mad r2.xyz, r2.xyzx, r6.wwww, r13.xyzx
  lt r4.w, r4.w, r6.w
  mul r2.xy, r2.xyxx, cb1[44].xyxx
  ftoi r8.xy, r2.xyxx
  mov r8.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r2.x, r8.xyzw, t21.xyzw
  ge r2.y, r2.x, l(0.984375)
  mul r6.w, r2.x, l(1.01587307)
  mad r2.x, r2.x, l(64.000000), l(-63.000000)
  movc r2.x, r2.y, r2.x, r6.w
  max r2.x, r2.x, l(0.00000001)
  rcp r2.x, r2.x
  mov r2.y, x2[1].x
  movc r2.y, r4.w, r2.x, r2.y
  mov x2[1].x, r2.y
  mul r2.x, r2.x, r2.z
  lt r2.x, l(1.000000), r2.x
  and r2.x, r2.x, l(0x3f800000)
  mul r2.x, r2.x, r7.w
  movc r2.x, r4.w, r2.x, r7.w
  mov x0[1].x, r2.x
endif 
mov r2.x, x2[0].x
add r2.x, -r9.w, r2.x
lt r2.x, l(2.400000), |r2.x|
mov r2.y, x0[0].x
mad r2.y, -r2.y, l(0.500000), l(1.000000)
movc r2.x, r2.x, l(0.500000), r2.y
mov r2.y, x2[1].x
add r2.y, -r9.w, r2.y
lt r2.y, l(2.400000), |r2.y|
mov r2.z, x0[1].x
mul r2.z, r2.z, l(0.500000)
movc r2.y, r2.y, l(-0.500000), -r2.z
add r2.x, r2.y, r2.x
add r2.x, -r2.x, l(1.000000)
mad r2.yzw, v3.yyzw, r2.wwww, -r0.xxyz
mad r2.yzw, r5.xxxx, r2.yyzw, r0.xxyz
dp3 r4.w, r2.yzwy, r2.yzwy
rsq r4.w, r4.w
mul r2.yzw, r2.yyzw, r4.wwww
add r4.w, -cb0[11].x, cb0[11].y
mad r4.w, cb1[62].x, r4.w, cb0[11].x
mul_sat r4.w, r4.w, l(0.05882353)
add r8.xyz, cb1[61].xyzx, l(-0.032000, -0.032000, -0.032000, 0.000000)
mad r8.xyz, cb1[61].wwww, r8.xyzx, l(0.032000, 0.032000, 0.032000, 0.000000)
add r4.w, -r0.w, r4.w
mad r4.w, cb1[62].w, r4.w, r0.w
movc r9.yzw, v10.xxxx, v4.xxyz, -v4.xxyz
dp3 r6.w, r9.yzwy, r9.yzwy
rsq r6.w, r6.w
mad r9.yzw, r9.yyzw, r6.wwww, -r2.yyzw
mad r11.xyz, cb1[60].wwww, r9.yzwy, r2.yzwy
sqrt r2.yzw, r3.xxyz
mul r9.yzw, r6.xxyz, r3.wwww
mul r9.yzw, r5.xxxx, r9.yyzw
mad r12.xyz, -r9.yzwy, l(0.500000, 0.500000, 0.500000, 0.000000), v7.xyzx
ftou r9.yz, v0.xxyx
ge r3.w, v0.z, l(0.984375)
mul r6.w, v0.z, l(1.01587307)
mad r7.w, v0.z, l(64.000000), l(-63.000000)
movc r3.w, r3.w, r7.w, r6.w
max r3.w, r3.w, l(0.00000001)
rcp r3.w, r3.w
ine r6.w, cb1[92].x, l(0)
utof r10.yz, r9.zzyz
dp2 r7.w, r10.zyzz, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r7.w, r7.w
mul r7.w, r7.w, l(52.982918)
frc r7.w, r7.w
mad r7.w, r7.w, l(6.28318548), cb1[70].w
sincos r13.x, r14.x, r7.w
dp2 r7.w, r10.yzyy, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r7.w, r7.w
mul r7.w, r7.w, l(52.982918)
frc r7.w, r7.w
mad r7.w, r7.w, l(6.28318548), cb1[70].w
sincos r15.x, r16.x, r7.w
mul r4.w, r4.w, l(17.000000)
exp r4.w, r4.w
add r7.w, r4.w, l(2.000000)
div r7.w, l(2.000000), r7.w
dp3 r8.w, -r12.xyzx, -r12.xyzx
rsq r8.w, r8.w
mul r10.yzw, r8.wwww, -r12.xxyz
add r17.xyz, r12.xyzx, cb1[24].xyzx
mul r15.yzw, r12.yyyy, cb2[29].xxyz
mad r15.yzw, r12.xxxx, cb2[28].xxyz, r15.yyzw
mad r15.yzw, r12.zzzz, cb2[30].xxyz, r15.yyzw
add r15.yzw, r15.yyzw, cb2[31].xxyz
add r9.w, r15.w, -cb2[17].w
mad r9.w, -r9.w, l(0.00006104), l(1.000000)
mov_sat r13.z, r9.w
eq r13.z, r9.w, r13.z
if_nz r13.z
  mov r13.zw, l(0,0,0,0)
  loop 
    ge r14.w, r13.z, l(3.000000)
    breakc_nz r14.w
    ftou r14.w, r13.z
    add r16.yz, r15.yyzy, -cb2[r14.w + 20].xxyx
    max r16.y, |r16.z|, |r16.y|
    mul r13.w, r16.y, cb2[r14.w + 20].z
    lt r14.w, r13.w, l(1.000000)
    if_nz r14.w
      break 
    endif 
    add r13.z, r13.z, l(1.000000)
    mov r13.w, l(0)
  endloop 
else 
  mov r13.zw, l(0,0,3.000000,0)
endif 
ge r14.w, r13.z, l(3.000000)
if_nz r14.w
  mul r16.yzw, l(0.000000, 128.000000, 0.500000, 0.500000), cb2[27].zzxy
  rcp r18.xz, r16.yyyy
  mov r18.y, -r18.z
  mad r16.yzw, r15.yyzy, r18.xxyz, r16.zzwz
  add r18.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
  max r16.yzw, r16.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  min r16.yzw, r18.xxyz, r16.yyzw
  mul r18.xy, r16.wzww, cb2[32].xxxx
  round_ni r18.xy, r18.xyxx
  mul r18.y, r18.y, cb2[27].x
  mad r18.x, r18.y, cb2[32].x, r18.x
  ftou r18.x, r18.x
  iadd r18.x, r18.x, cb2[32].y
  ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.y, r18.x, l(0), t23.xxxx
  and r18.z, r18.y, l(0x40000000)
  ishl r18.w, r18.y, l(2)
  if_z r18.z
    and r18.z, r18.y, l(0x01ffffff)
    iadd r19.x, r18.z, r18.x
    ushr r18.x, r18.y, l(25)
    utof r18.x, r18.x
    mul r16.yzw, r16.yyzw, r18.xxxx
    frc r16.yzw, r16.yyzw
    mul r16.yzw, r16.yyzw, l(0.000000, 128.000000, 128.000000, 128.000000)
    ftou r16.yzw, r16.yyzw
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.z, r19.x, l(0), t23.xxxx
    ushr r18.xy, r16.wzww, l(6, 6, 0, 0)
    and r18.z, r19.z, l(0xc0000000)
    iadd r19.w, r19.x, l(1)
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.w, r19.w, l(0), t23.xxxx
    movc r18.y, r18.y, r19.z, r19.w
    ushr r19.w, r18.y, l(13)
    movc r18.x, r18.x, r19.w, r18.y
    and r18.x, r18.x, l(8191)
    iadd r20.x, r18.x, r19.x
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.z, r20.x, l(0), t23.xxxx
    mov r19.y, l(0)
    mov r20.y, l(1)
    movc r20.xyz, r18.zzzz, r19.xyzx, r20.xyzx
    movc r21.yz, r18.zzzz, l(0,6,1,0), l(0,5,2,0)
    ushr r18.xy, r16.wzww, r21.yyyy
    and r18.xy, r18.xyxx, l(1, 1, 0, 0)
    and r19.w, r20.z, l(0xc0000000)
    iadd r20.w, r20.x, l(1)
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.w, r20.w, l(0), t23.xxxx
    movc r18.y, r18.y, r20.z, r20.w
    ushr r20.w, r18.y, l(13)
    movc r18.x, r18.x, r20.w, r18.y
    and r18.x, r18.x, l(8191)
    iadd r21.x, r18.x, r20.x
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r21.w, r21.x, l(0), t23.xxxx
    movc r20.xyz, r19.wwww, r20.xyzx, r21.xzwx
    movc r18.xyz, r18.zzzz, r19.xyzx, r20.xyzx
    and r19.x, r18.z, l(0xc0000000)
    if_z r19.x
      iadd r19.x, -r18.y, l(6)
      ushr r19.xy, r16.wzww, r19.xxxx
      or r19.z, r18.z, l(0x40000000)
      bfi r19.y, l(1), l(1), r19.y, l(0)
      bfi r19.x, l(1), l(0), r19.x, r19.y
      imul null, r19.x, r19.x, l(10)
      ushr r19.x, r19.z, r19.x
      and r19.x, r19.x, l(1023)
      iadd r19.x, r18.x, r19.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.w, r19.x, l(0), t23.xxxx
      iadd r19.yz, r18.yyyy, l(0, 1, 2, 0)
      iadd r18.y, -r19.y, l(6)
      ushr r20.xy, r16.wzww, r18.yyyy
      and r18.y, r19.w, l(0xc0000000)
      or r20.z, r19.w, l(0x40000000)
      bfi r20.y, l(1), l(1), r20.y, l(0)
      bfi r20.x, l(1), l(0), r20.x, r20.y
      imul null, r20.x, r20.x, l(10)
      ushr r20.x, r20.z, r20.x
      and r20.x, r20.x, l(1023)
      iadd r20.x, r19.x, r20.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.z, r20.x, l(0), t23.xxxx
      mov r20.y, r19.z
      movc r20.xyz, r18.yyyy, r19.xywx, r20.xyzx
      iadd r19.y, -r20.y, l(6)
      ushr r19.yz, r16.wwzw, r19.yyyy
      and r20.y, r20.z, l(0xc0000000)
      or r20.w, r20.z, l(0x40000000)
      bfi r19.z, l(1), l(1), r19.z, l(0)
      bfi r19.y, l(1), l(0), r19.y, r19.z
      imul null, r19.y, r19.y, l(10)
      ushr r19.y, r20.w, r19.y
      and r19.y, r19.y, l(1023)
      iadd r21.x, r19.y, r20.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r21.y, r21.x, l(0), t23.xxxx
      movc r19.yz, r20.yyyy, r20.xxzx, r21.xxyx
      movc r18.xz, r18.yyyy, r19.xxwx, r19.yyzy
    endif 
    and r18.y, r18.z, l(0xc0000000)
    if_z r18.y
      ubfe r19.x, l(14), l(15), r18.z
      utof r19.x, r19.x
      mul r19.x, r19.x, cb2[27].w
      and r19.yz, r18.zzzz, l(0, 0x00007fff, 0x20000000, 0)
      utof r19.y, r19.y
      mul r19.y, r19.y, cb2[27].w
      mul r19.xy, r19.xyxx, l(0.00006104, 0.00003052, 0.000000, 0.000000)
      and r19.w, r16.z, l(3)
      iadd r19.w, r18.x, r19.w
      iadd r19.w, r19.w, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.w, r19.w, l(0), t23.xxxx
      bfi r20.xyz, l(2, 2, 1, 0), l(3, 1, 4, 0), r16.yzwy, l(0, 0, 0, 0)
      ushr r16.y, r19.w, r20.x
      and r16.y, r16.y, l(255)
      utof r16.y, r16.y
      mul r16.y, r19.y, r16.y
      mad r16.y, r16.y, l(0.00392157), r19.x
      iadd r16.z, r20.y, l(1)
      ubfe r16.w, l(1), l(1), r16.w
      iadd r16.z, r16.w, r16.z
      iadd r16.z, r16.z, r18.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.z, r16.z, l(0), t23.xxxx
      ushr r16.z, r16.z, r20.z
      and r16.z, r16.z, l(0x0000ffff)
      utof r16.z, r16.z
      mul r16.z, r19.y, r16.z
      mad r16.z, r16.z, l(0.00001526), r19.x
      movc r18.w, r19.z, r16.y, r16.z
    else 
      and r16.y, r18.z, l(0x80000000)
      iadd r16.z, r18.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.z, r16.z, l(0), t23.xxxx
      movc r16.y, r16.y, r16.z, l(0)
      ishl r16.z, r18.z, l(2)
      ushr r16.w, r16.y, l(16)
      and r16.y, r16.y, l(0x0000ffff)
      f16tof32 r16.yw, r16.yyyw
      mad r16.z, r15.y, r16.w, r16.z
      mad r16.y, r15.z, r16.y, r16.z
      movc r18.w, r18.y, r16.y, r18.w
    endif 
  endif 
  mad r15.w, -cb2[27].z, l(2.000000), r15.w
  lt r15.w, r18.w, r15.w
  movc r18.y, r15.w, l(0), l(1.000000)
endif 
if_z r14.w
  if_z cb2[58].y
    ftou r14.w, r13.z
    add r16.yz, r15.yyzy, -cb2[r14.w + 20].xxyx
    mul r16.yz, r16.yyzy, cb2[r14.w + 20].zzzz
    mad r19.xy, r16.yzyy, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    itof r14.w, cb2[26].y
    add r19.z, r13.z, r14.w
    sample_c_lz_indexable(texture2darray)(float,float,float,float) r14.w, r19.xyzx, t13.xxxx, s13, r9.w
    sample_l_indexable(texture2darray)(float,float,float,float) r15.w, r19.xyzx, t31.yzwx, s0, l(0.000000)
    add r14.w, r14.w, r15.w
    add_sat r14.w, r14.w, l(-1.000000)
    mul r15.w, r14.w, r14.w
    mul r18.y, r14.w, r15.w
  endif 
  if_nz cb2[58].y
    mov r19.x, -r13.x
    ftou r14.w, r13.z
    add r13.z, r13.z, l(1.000000)
    min r13.z, r13.z, l(2.000000)
    add r13.w, -r13.w, l(1.000000)
    mul r13.w, r13.w, l(28.000000)
    ftou r13.zw, r13.zzzw
    add r16.yz, r15.yyzy, -cb2[r14.w + 20].xxyx
    mul r16.yz, r16.yyzy, cb2[r14.w + 20].zzzz
    mad r16.yz, r16.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
    add r15.yz, r15.yyzy, -cb2[r13.z + 20].xxyx
    mul r15.yz, r15.yyzy, cb2[r13.z + 20].zzzz
    mad r15.yz, r15.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
    mov r19.y, r14.x
    mov r19.z, r13.x
    mov r15.w, l(0)
    mov r16.w, l(0)
    loop 
      uge r18.z, r16.w, l(8)
      breakc_nz r18.z
      ult r18.z, r13.w, r16.w
      movc r20.xy, r18.zzzz, r15.yzyy, r16.yzyy
      movc r18.w, r18.z, cb2[r13.z + 20].w, cb2[r14.w + 20].w
      movc r18.z, r18.z, r13.z, r14.w
      dp2 r21.x, icb[r16.w + 0].yxyy, r19.xyxx
      dp2 r21.y, icb[r16.w + 0].yxyy, r19.yzyy
      mad r20.xy, r21.xyxx, r18.wwww, r20.xyxx
      iadd r18.z, r18.z, cb2[26].y
      utof r20.z, r18.z
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r18.z, r20.xyzx, t13.xxxx, s13, r9.w
      sample_l_indexable(texture2darray)(float,float,float,float) r18.w, r20.xyzx, t31.yzwx, s0, l(0.000000)
      add r18.z, r18.w, r18.z
      add_sat r18.z, r18.z, l(-1.000000)
      mad r15.w, r18.z, l(0.125000), r15.w
      iadd r16.w, r16.w, l(1)
    endloop 
    mul r9.w, r15.w, r15.w
    mul r18.y, r15.w, r9.w
  endif 
endif 
ushr r9.w, cb2[53].x, l(16)
ult r13.z, l(0), r9.w
and r13.z, r6.w, r13.z
if_nz r13.z
  iadd r9.w, r9.w, cb2[0].x
  iadd r9.w, r9.w, l(-1)
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.z, r9.w, l(52), t12.xxxx
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.xyzw, r9.w, l(68), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r20.xyzw, r9.w, l(84), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r21.xyzw, r9.w, l(132), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r22.xyzw, r9.w, l(148), t12.xyzw
  dp3 r13.w, cb2[17].xyzx, r6.xyzx
  mad r13.w, |r13.w|, l(-0.200000), l(0.400000)
  mad r23.xyz, r6.xyzx, r13.wwww, r12.xyzx
  mov r23.w, l(1.000000)
  dp4 r19.x, r19.xyzw, r23.xyzw
  dp4 r19.y, r20.xyzw, r23.xyzw
  mad r15.yz, r19.xxyx, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
  add r15.yz, r22.zzwz, r15.yyzy
  mul r15.yz, r22.xxyx, r15.yyzy
  div r16.yz, r13.zzzz, r21.xxzx
  add r18.zw, -r16.yyyz, l(0.000000, 0.000000, 1.000000, 1.000000)
  ge r18.zw, r15.yyyz, r18.zzzw
  ge r16.yz, r16.yyzy, r15.yyzy
  or r16.yz, r16.yyzy, r18.zzwz
  or r13.w, r16.z, r16.y
  if_z r13.w
    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.w, r9.w, l(28), t12.xxxx
    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.xyzw, r9.w, l(100), t12.xyzw
    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.yz, r9.w, l(164), t12.xxyx
    dp4 r9.w, r19.xyzw, r23.xyzw
    mov_sat r15.yz, r15.yyzy
    mad r19.xy, r15.yzyy, r21.xzxx, r21.ywyy
    add r9.w, r16.y, r9.w
    div r9.w, r9.w, r16.z
    max r9.w, r9.w, l(0.00006104)
    and r13.w, r13.w, l(0x0000ffff)
    if_nz cb2[58].y
      mov r20.x, -r13.x
      utof r21.z, r13.w
      mov r20.y, r14.x
      mov r20.z, r13.x
      mov r14.w, l(0)
      mov r15.y, l(0)
      loop 
        ige r15.z, r15.y, l(8)
        breakc_nz r15.z
        dp2 r22.x, icb[r15.y + 0].yxyy, r20.xyxx
        dp2 r22.y, icb[r15.y + 0].yxyy, r20.yzyy
        mad r21.xy, r22.xyxx, r13.zzzz, r19.xyxx
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r15.z, r21.xyzx, t9.xxxx, s13, r9.w
        mad r14.w, r15.z, l(0.125000), r14.w
        iadd r15.y, r15.y, l(1)
      endloop 
    else 
      utof r19.z, r13.w
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r14.w, r19.xyzx, t9.xxxx, s13, r9.w
    endif 
    mul r9.w, r14.w, r14.w
    mul r9.w, r14.w, r9.w
  else 
    mov r9.w, l(1.000000)
  endif 
  mul r18.y, r9.w, r18.y
else 
  and r9.w, cb2[53].x, l(0x0000ffff)
  ult r13.z, l(0), r9.w
  not r13.w, r6.w
  and r13.z, r13.w, r13.z
  if_nz r13.z
    iadd r9.w, r9.w, cb2[0].x
    iadd r9.w, r9.w, l(-1)
    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.z, r9.w, l(52), t12.xxxx
    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.xyzw, r9.w, l(68), t12.xyzw
    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r20.xyzw, r9.w, l(84), t12.xyzw
    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r21.xyzw, r9.w, l(132), t12.xyzw
    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r22.xyzw, r9.w, l(148), t12.xyzw
    dp3 r13.w, cb2[17].xyzx, r6.xyzx
    mad r13.w, |r13.w|, l(-0.200000), l(0.400000)
    mad r23.xyz, r6.xyzx, r13.wwww, r12.xyzx
    mov r23.w, l(1.000000)
    dp4 r19.x, r19.xyzw, r23.xyzw
    dp4 r19.y, r20.xyzw, r23.xyzw
    mad r15.yz, r19.xxyx, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
    add r15.yz, r22.zzwz, r15.yyzy
    mul r15.yz, r22.xxyx, r15.yyzy
    div r16.yz, r13.zzzz, r21.xxzx
    add r18.zw, -r16.yyyz, l(0.000000, 0.000000, 1.000000, 1.000000)
    ge r18.zw, r15.yyyz, r18.zzzw
    ge r16.yz, r16.yyzy, r15.yyzy
    or r16.yz, r16.yyzy, r18.zzwz
    or r13.w, r16.z, r16.y
    if_z r13.w
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.w, r9.w, l(28), t12.xxxx
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.xyzw, r9.w, l(100), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.yz, r9.w, l(164), t12.xxyx
      dp4 r9.w, r19.xyzw, r23.xyzw
      mov_sat r15.yz, r15.yyzy
      mad r19.xy, r15.yzyy, r21.xzxx, r21.ywyy
      add r9.w, r16.y, r9.w
      div r9.w, r9.w, r16.z
      max r9.w, r9.w, l(0.00006104)
      and r13.w, r13.w, l(0x0000ffff)
      if_nz cb2[58].y
        mov r20.x, -r13.x
        utof r21.z, r13.w
        mov r20.y, r14.x
        mov r20.z, r13.x
        mov r14.w, l(0)
        mov r15.y, l(0)
        loop 
          ige r15.z, r15.y, l(8)
          breakc_nz r15.z
          dp2 r22.x, icb[r15.y + 0].yxyy, r20.xyxx
          dp2 r22.y, icb[r15.y + 0].yxyy, r20.yzyy
          mad r21.xy, r22.xyxx, r13.zzzz, r19.xyxx
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r15.z, r21.xyzx, t9.xxxx, s13, r9.w
          mad r14.w, r15.z, l(0.125000), r14.w
          iadd r15.y, r15.y, l(1)
        endloop 
      else 
        utof r19.z, r13.w
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r14.w, r19.xyzx, t9.xxxx, s13, r9.w
      endif 
      mul r9.w, r14.w, r14.w
      mul r9.w, r14.w, r9.w
    else 
      mov r9.w, l(1.000000)
    endif 
    mul r18.y, r9.w, r18.y
  endif 
endif 
lt r9.w, l(0.000000), r18.y
if_nz r9.w
  mul r15.yzw, r2.yyzw, cb2[18].xxyz
  dp3_sat r9.w, r1.xyzx, cb2[17].xyzx
  if_nz cb2[23].x
    mov r17.w, l(1.000000)
    dp4 r13.z, cb2[24].xyzw, r17.xyzw
    dp4 r13.w, cb2[25].xyzw, r17.xyzw
    frc r19.xy, r13.zwzz
    iadd r13.z, l(-1), cb2[23].x
    utof r19.z, r13.z
    sample_l_indexable(texture2darray)(float,float,float,float) r16.yzw, r19.xyzx, t20.wxyz, s2, l(0.000000)
    add r16.yzw, r16.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
    mad r16.yzw, cb2[23].yyyy, r16.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
    mul r15.yzw, r15.yyzw, r16.yyzw
  endif 
  dp3 r13.z, cb2[17].xyzx, r0.xyzx
  add r13.z, r13.z, l(0.200000)
  mul_sat r13.z, r13.z, l(0.83333331)
  mul r13.z, r13.z, r13.z
  mul r13.w, r13.z, l(1.250000)
  mad r16.yz, r4.xxyx, l(0.000000, 0.79545456, 0.79545456, 0.000000), l(0.000000, -0.79545456, -0.79545456, 0.000000)
  dp3 r19.x, cb2[17].xyzx, v8.xyzx
  dp3 r19.y, cb2[17].xyzx, v9.xyzx
  dp2 r14.w, r19.xyxx, r19.xyxx
  rsq r14.w, r14.w
  mul r19.xy, r14.wwww, r19.xyxx
  mov r19.z, -r19.x
  dp2 r20.x, r16.zyzz, r19.yzyy
  dp2 r20.y, r16.zyzz, -r19.xyxx
  mad r19.xy, r20.xyxx, l(1.000000, 2.000000, 0.000000, 0.000000), l(0.500000, 1.000000, 0.000000, 0.000000)
  dp3 r14.w, cb2[17].xyzx, r6.xyzx
  mad r14.w, r14.w, l(0.68965513), l(0.31034479)
  lt r16.y, l(1.000000), r19.y
  add r16.z, -r19.y, l(2.000000)
  movc r19.z, r16.y, r16.z, r19.y
  mul r16.y, r14.w, l(126.500000)
  round_ni r16.z, r16.y
  round_pi r16.y, r16.y
  mul r18.zw, r19.xxxz, l(0.000000, 0.000000, 0.00781250, 1.000000)
  mad r19.xy, r16.zzzz, l(0.00781250, 0.000000, 0.000000, 0.000000), r18.zwzz
  sample_l_indexable(texture2d)(float,float,float,float) r16.w, r19.xyxx, t25.yzwx, s5, l(0.000000)
  mad r18.zw, r16.yyyy, l(0.000000, 0.000000, 0.00781250, 0.000000), r18.zzzw
  sample_l_indexable(texture2d)(float,float,float,float) r16.y, r18.zwzz, t25.yxzw, s5, l(0.000000)
  mad r14.w, r14.w, l(126.500000), -r16.z
  add r16.y, -r16.w, r16.y
  mad r14.w, r14.w, r16.y, r16.w
  mad r13.z, -r13.z, l(1.250000), r14.w
  mad r16.yzw, r5.xxxx, r13.zzzz, r13.wwww
  lt r13.z, l(0.000000), r9.w
  if_nz r13.z
    mul r13.z, r7.w, cb2[18].w
    mul r13.z, r13.z, l(0.250000)
    mad r19.xyz, -r12.xyzx, r8.wwww, cb2[17].xyzx
    dp3 r13.w, r19.xyzx, r19.xyzx
    rsq r13.w, r13.w
    mul r19.xyz, r13.wwww, r19.xyzx
    dp3 r13.w, r1.xyzx, r19.xyzx
    mad r14.w, r4.w, l(0.125000), l(0.250000)
    log r13.w, |r13.w|
    mul r13.w, r4.w, r13.w
    exp r13.w, r13.w
    mul r13.w, r13.w, r14.w
    mul r9.w, r9.w, r13.w
    mul r9.w, r13.z, r9.w
    mul r13.z, r7.w, l(0.250000)
    div r20.xyz, r9.wwww, r13.zzzz
    dp3 r9.w, r19.xyzx, cb2[17].xyzx
    add_sat r9.w, -r9.w, l(1.000000)
    mul r13.z, r9.w, r9.w
    mul r13.z, r13.z, r13.z
    mul r9.w, r9.w, r13.z
    mul r9.w, r9.w, r20.z
    mov r13.zw, r9.wwww
  else 
    mov r13.zw, l(0,0,0,0)
    mov r9.w, l(0)
    mov r20.xyz, l(0,0,0,0)
  endif 
  dp3 r14.w, r15.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
  mul r14.w, r14.w, r18.y
  mov r18.x, l(1.000000)
  mov r18.zw, cb2[17].xxxy
  mov r17.w, cb2[17].z
else 
  mov r14.w, l(0)
  mov r15.yzw, l(0,0,0,0)
  mov r18.xyzw, l(0,0,0,0)
  mov r16.yzw, l(0,0,0,0)
  mov r17.w, l(0)
  mov r20.xyz, l(0,0,0,0)
  mov r9.w, l(0)
  mov r13.zw, l(0,0,0,0)
endif 
mul r3.w, r3.w, l(0.00781250)
min r3.w, r3.w, l(15.000000)
ftou r3.w, r3.w
ushr r19.xy, r9.yzyy, l(6, 6, 0, 0)
ishl r19.z, r3.w, l(4)
not r3.w, r6.w
mov r21.x, -r13.x
mad r4.xy, r4.xyxx, l(0.79545456, 0.79545456, 0.000000, 0.000000), l(-0.79545456, -0.79545456, 0.000000, 0.000000)
mad r9.y, r4.w, l(0.125000), l(0.250000)
mul r9.z, r7.w, l(0.250000)
mov r22.xy, l(0,0,0,0)
mov r23.w, l(0)
mov r12.w, l(1.000000)
mov r24.w, l(1.000000)
mov r25.w, l(1.000000)
mov r26.z, l(1.000000)
mov r27.w, l(1.000000)
mov r21.z, r13.x
mov r21.yw, r14.xxxx
mov r13.y, r21.w
mov r14.y, r21.x
mov r14.z, r13.x
mov r28.x, r14.x
mov r28.y, r21.x
mov r28.z, r13.x
mov r29.xyz, r15.yzwy
mov r30.xy, r18.zwzz
mov r30.z, r17.w
mov r31.xyz, r16.yzwy
mov r32.xyz, r20.xyzx
mov r33.x, r9.w
mov r33.yz, r13.zzwz
mov r34.xyz, l(0,0,0,0)
mov r35.xyz, l(0,0,0,0)
mov r36.xyz, l(0,0,0,0)
mov r37.x, cb2[58].y
mov r37.y, r14.w
mov r37.zw, r18.xxxy
mov r19.w, l(0)
loop 
  uge r20.w, r19.w, cb2[0].x
  breakc_nz r20.w
  ushr r22.z, r19.w, l(5)
  iadd r23.xyz, r19.xyzx, r22.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r20.w, r23.xyzw, t6.yzwx
  mov r23.xyz, r29.xyzx
  mov r38.xyz, r30.xyzx
  mov r39.xyz, r31.xyzx
  mov r40.xyz, r32.xyzx
  mov r41.xyz, r33.xyzx
  mov r42.xyz, r34.xyzx
  mov r43.xyz, r35.xyzx
  mov r22.zw, r37.zzzw
  mov r26.w, r37.x
  mov r28.w, r37.y
  mov r44.xyz, r36.xyzx
  mov r29.w, r20.w
  loop 
    breakc_z r29.w
    firstbit_lo r30.w, r29.w
    ishl r31.w, l(1), r30.w
    and r32.w, r29.w, r31.w
    if_nz r32.w
      xor r29.w, r29.w, r31.w
      iadd r30.w, r19.w, r30.w
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r45.xyzw, r30.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r46.xy, r30.w, l(16), t11.xyxx
      add r45.xyz, -r12.xyzx, r45.xyzx
      mov r46.z, r45.w
      lt r45.xyz, |r45.xyzx|, r46.zxyz
      and r31.w, r45.y, r45.x
      and r31.w, r45.z, r31.w
      if_nz r31.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xyzw, r30.w, l(0), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r46.xyzw, r30.w, l(16), t12.zxyw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r47.xyzw, r30.w, l(32), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r48.xyzw, r30.w, l(48), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r49.xyzw, r30.w, l(64), t12.yzwx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r50.xyzw, r30.w, l(80), t12.yzwx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r51.xyzw, r30.w, l(96), t12.yzwx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r52.xyzw, r30.w, l(112), t12.yzwx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r53.xyzw, r30.w, l(128), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r54.xyzw, r30.w, l(172), t12.yzwx
        ubfe r31.w, l(3), l(24), r46.w
        ieq r32.w, r31.w, l(4)
        if_nz r32.w
          mul r33.w, r7.w, r46.x
          mul r33.w, r33.w, l(0.250000)
          lt r34.w, l(0.000000), r51.x
          mov r55.xy, r50.yzyy
          mov r55.z, r51.w
          mad r56.xyz, -r55.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r45.xyzx
          add r57.xyz, -r12.xyzx, r56.xyzx
          dp3 r35.w, r55.xyzx, r57.xyzx
          div_sat r35.w, -r35.w, r51.x
          mad r55.xyz, r35.wwww, r55.xyzx, r56.xyzx
          movc r55.xyz, r34.wwww, r55.xyzx, r45.xyzx
          add r56.xyz, -r12.xyzx, r55.xyzx
          dp3 r34.w, r56.xyzx, r56.xyzx
          rsq r34.w, r34.w
          mul r56.xyz, r34.wwww, r56.xyzx
        else 
          ieq r34.w, r31.w, l(1)
          mov r57.xy, r48.zwzz
          mov r57.z, r49.w
          add r57.xyz, -r12.xyzx, r57.xyzx
          dp3 r35.w, r57.xyzx, r57.xyzx
          rsq r35.w, r35.w
          mul r57.xyz, r35.wwww, r57.xyzx
          movc r56.xyz, r34.wwww, r54.wxyw, r57.xyzx
          mul r34.w, r7.w, r46.x
          mul r33.w, r34.w, l(0.250000)
          mov r55.xyz, r45.xyzx
        endif 
        switch r31.w
          case l(2)
          mov r58.xyz, r52.xyzx
          mov r58.w, r53.x
          dp4 r36.w, r58.xyzw, r12.xyzw
          lt r38.w, r36.w, l(1.000000)
          if_nz r38.w
            mov r57.xyz, l(1.000000,1.000000,1.000000,0)
            mov r34.w, l(0)
            mov r35.w, l(-1)
            break 
          else 
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r58.xyzw, r30.w, l(188), t12.wxyz
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r59.xyzw, r30.w, l(204), t12.xyzw
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.w, r30.w, l(236), t12.xxxx
            add r45.xyz, -r12.xyzx, r45.xyzx
            mul r39.w, r48.x, r48.x
            dp3 r40.w, r45.xyzx, r45.xyzx
            div r39.w, r39.w, r40.w
            min r39.w, r39.w, l(1.000000)
            mad_sat r45.xy, r36.wwww, r47.xzxx, r47.ywyy
            mul r48.zw, r45.xxxy, r45.xxxy
            mad r45.xy, r45.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
            mul r45.xy, r45.xyxx, r48.zwzz
            mul r39.w, r39.w, r45.x
            mul r39.w, r45.y, r39.w
            mov r49.w, r50.w
            dp4 r45.x, r49.xyzw, r12.xyzw
            mov r60.xyz, r50.xyzx
            mov r60.w, r51.w
            dp4 r45.y, r60.xyzw, r12.xyzw
            div r26.xy, r45.xyxx, r36.wwww
            lt r36.w, r54.w, l(0.00048828)
            if_nz r36.w
              mov r58.y, r59.x
              mad_sat r45.xy, |r26.xyxx|, r58.zwzz, r58.xyxx
              mul r48.zw, r45.xxxy, r45.xxxy
              mad r45.xy, r45.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
              mul r45.xy, r45.xyxx, r48.zwzz
              mul r36.w, r45.y, r45.x
            else 
              mov r54.w, r58.y
              mul_sat r54.xyzw, |r26.yyxx|, r54.xyzw
              log r54.xyzw, r54.xyzw
              mul r54.xyzw, r54.xyzw, r58.xxxx
              exp r54.xyzw, r54.xyzw
              add r45.xy, r54.zwzz, r54.xyxx
              log r45.xy, r45.xyxx
              mul r45.xy, r45.xyxx, r59.xxxx
              exp r45.xy, r45.xyxx
              mul r40.w, r45.x, r58.z
              mad r41.w, r58.w, r45.y, l(-1.000000)
              mad r40.w, r58.w, r45.y, -r40.w
              div_sat r40.w, r41.w, r40.w
              mul r41.w, r40.w, r40.w
              mad r40.w, r40.w, l(-2.000000), l(3.000000)
              mul r36.w, r40.w, r41.w
            endif 
            mul r34.w, r36.w, r39.w
            and r36.w, r38.w, l(255)
            if_nz r36.w
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xyz, r30.w, l(220), t12.xyzx
              dp3 r38.w, r59.yzwy, r26.xyzx
              dp3 r26.x, r45.xyzx, r26.xyzx
              frc r45.x, r38.w
              frc r45.y, r26.x
              iadd r26.x, r36.w, l(-1)
              utof r45.z, r26.x
              sample_l_indexable(texture2darray)(float,float,float,float) r57.xyz, r45.xyzx, t20.xyzw, s2, l(0.000000)
            else 
              mov r57.xyz, l(1.000000,1.000000,1.000000,0)
            endif 
            mov r35.w, l(-1)
            break 
          endif 
          case l(4)
          add r45.xyz, -r12.xyzx, r55.xyzx
          dp3 r26.x, r45.xyzx, r45.xyzx
          sqrt r26.y, r26.x
          mul r36.w, r48.x, r48.x
          div r26.x, r36.w, r26.x
          min r26.x, r26.x, l(1.000000)
          mad_sat r45.xy, r26.yyyy, r47.xzxx, r47.ywyy
          mul r47.xy, r45.xyxx, r45.xyxx
          mad r45.xy, r45.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
          mul r45.xy, r45.xyxx, r47.xyxx
          mul r26.x, r26.x, r45.x
          mul r34.w, r45.y, r26.x
          mov r57.xyz, l(1.000000,1.000000,1.000000,0)
          mov r35.w, l(-1)
          break 
          default 
          mov r57.xyz, l(1.000000,1.000000,1.000000,0)
          mov r35.w, l(0)
          break 
        endswitch 
        movc r26.x, r35.w, r34.w, l(1.000000)
        lt r26.y, l(0.000000), r26.x
        if_nz r26.y
          ubfe r45.xy, l(3, 4, 0, 0), l(27, 16, 0, 0), r46.wwww
          ine r26.y, r45.x, l(1)
          if_nz r26.y
            dp3 r26.y, r56.xyzx, r6.xyzx
            mad r26.y, |r26.y|, l(-0.200000), l(0.400000)
            mad r25.xyz, r6.xyzx, r26.yyyy, r12.xyzx
            ine r26.y, r31.w, l(4)
            if_nz r26.y
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r47.y, r30.w, l(144), t12.xxxx
              mov r49.w, r50.w
              dp4 r54.x, r49.xyzw, r25.xyzw
              mov r50.w, r51.w
              dp4 r54.y, r50.xyzw, r25.xyzw
              mov r51.w, r52.w
              dp4 r26.y, r51.xyzw, r25.xyzw
              mov r52.w, r53.x
              dp4 r30.w, r52.xyzw, r25.xyzw
              lt r31.w, r30.w, r26.y
              div r45.xz, r54.xxyx, r30.wwww
              mad_sat r45.xz, r45.xxzx, l(0.500000, 0.000000, -0.500000, 0.000000), l(0.500000, 0.000000, 0.500000, 0.000000)
              mov r47.x, r53.z
              mad r47.xy, r45.xzxx, r53.ywyy, r47.xyxx
              div r26.y, r26.y, r30.w
            else 
              add r25.xyz, -r49.xyzx, r25.xyzx
              max r30.w, |r25.z|, |r25.y|
              max r30.w, |r25.x|, r30.w
              div r30.w, r50.w, r30.w
              add r26.y, r50.x, r30.w
              dp3 r30.w, r25.xyzx, r25.xyzx
              rsq r30.w, r30.w
              mul r47.xyz, r25.xyzx, r30.wwww
              mov r31.w, l(0)
            endif 
            if_z r31.w
              max r25.x, r26.y, l(0.00006104)
              if_nz r32.w
                and r25.y, r46.w, l(0x0000ffff)
                utof r49.w, r25.y
                mov r25.yz, l(0,0,0,0)
                loop 
                  ige r26.y, r25.z, l(8)
                  breakc_nz r26.y
                  dp2 r50.y, icb[r25.z + 0].yxyy, r21.xyxx
                  dp2 r50.z, icb[r25.z + 0].yxyy, r21.yzyy
                  mul r50.yz, r48.yyyy, r50.yyzy
                  mul r50.x, r16.x, r50.y
                  mul r50.w, r15.x, r50.y
                  add r49.xyz, r47.xyzx, r50.xzwx
                  sample_c_lz_indexable(texturecubearray)(float,float,float,float) r26.y, r49.xyzw, t10.xxxx, s13, r25.x
                  mad r25.y, r26.y, l(0.125000), r25.y
                  iadd r25.z, r25.z, l(1)
                endloop 
              else 
                and r25.z, r46.w, l(0x0000ffff)
                if_nz r26.w
                  utof r49.z, r25.z
                  mov r26.y, l(0)
                  mov r30.w, l(0)
                  loop 
                    ige r31.w, r30.w, l(8)
                    breakc_nz r31.w
                    dp2 r50.x, icb[r30.w + 0].yxyy, r21.xwxx
                    dp2 r50.y, icb[r30.w + 0].xyxx, r13.xyxx
                    mad r49.xy, r50.xyxx, r48.yyyy, r47.xyxx
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r31.w, r49.xyzx, t9.xxxx, s13, r25.x
                    mad r26.y, r31.w, l(0.125000), r26.y
                    iadd r30.w, r30.w, l(1)
                  endloop 
                else 
                  utof r47.w, r25.z
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r26.y, r47.xywx, t9.xxxx, s13, r25.x
                endif 
                mul r25.x, r26.y, r26.y
                mul r25.y, r26.y, r25.x
              endif 
            else 
              mov r25.y, l(1.000000)
            endif 
          else 
            mov r25.y, l(1.000000)
          endif 
          ult r25.x, l(0), r45.y
          and r25.x, r6.w, r25.x
          if_nz r25.x
            iadd r25.x, r45.y, cb2[0].x
            iadd r25.x, r25.x, l(-1)
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r25.z, r25.x, l(52), t12.xxxx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r47.xyzw, r25.x, l(68), t12.xyzw
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r48.xyzw, r25.x, l(84), t12.xyzw
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r49.xyzw, r25.x, l(100), t12.xyzw
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r50.xyzw, r25.x, l(116), t12.xyzw
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r51.xyzw, r25.x, l(132), t12.xyzw
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r52.xyzw, r25.x, l(148), t12.xyzw
            dp3 r30.w, r56.xyzx, r6.xyzx
            mad r30.w, |r30.w|, l(-0.200000), l(0.400000)
            mad r24.xyz, r6.xyzx, r30.wwww, r12.xyzx
            dp4 r45.x, r47.xyzw, r24.xyzw
            dp4 r45.y, r48.xyzw, r24.xyzw
            dp4 r30.w, r49.xyzw, r24.xyzw
            dp4 r24.x, r50.xyzw, r24.xyzw
            lt r24.y, r24.x, r30.w
            div r45.xy, r45.xyxx, r24.xxxx
            mad r45.xy, r45.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
            add r45.xy, r52.zwzz, r45.xyxx
            mul r45.xy, r52.xyxx, r45.xyxx
            div r47.xy, r25.zzzz, r51.xzxx
            add r47.zw, -r47.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
            ge r47.zw, r45.xxxy, r47.zzzw
            ge r47.xy, r47.xyxx, r45.xyxx
            or r47.xy, r47.xyxx, r47.zwzz
            or r24.z, r47.y, r47.x
            or r24.y, r24.y, r24.z
            if_z r24.y
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r24.y, r25.x, l(28), t12.xxxx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r47.xy, r25.x, l(164), t12.xyxx
              mov_sat r45.xy, r45.xyxx
              mad r45.xy, r45.xyxx, r51.xzxx, r51.ywyy
              mul r24.z, r24.x, r47.y
              mad r24.x, r47.x, r24.x, r30.w
              div r24.x, r24.x, r24.z
              max r24.x, r24.x, l(0.00006104)
              and r24.y, r24.y, l(0x0000ffff)
              if_nz r26.w
                utof r47.z, r24.y
                mov r24.z, l(0)
                mov r25.x, l(0)
                loop 
                  ige r30.w, r25.x, l(8)
                  breakc_nz r30.w
                  dp2 r48.x, icb[r25.x + 0].xyxx, r14.xyxx
                  dp2 r48.y, icb[r25.x + 0].yxyy, r14.xzxx
                  mad r47.xy, r48.xyxx, r25.zzzz, r45.xyxx
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r30.w, r47.xyzx, t9.xxxx, s13, r24.x
                  mad r24.z, r30.w, l(0.125000), r24.z
                  iadd r25.x, r25.x, l(1)
                endloop 
              else 
                utof r45.z, r24.y
                sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.z, r45.xyzx, t9.xxxx, s13, r24.x
              endif 
              mul r24.x, r24.z, r24.z
              mul r24.x, r24.z, r24.x
            else 
              mov r24.x, l(1.000000)
            endif 
            mul r25.y, r24.x, r25.y
          else 
            ubfe r24.x, l(4), l(20), r46.w
            ult r24.y, l(0), r24.x
            and r24.y, r3.w, r24.y
            if_nz r24.y
              iadd r24.x, r24.x, cb2[0].x
              iadd r24.x, r24.x, l(-1)
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r24.y, r24.x, l(52), t12.xxxx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r47.xyzw, r24.x, l(68), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r48.xyzw, r24.x, l(84), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r49.xyzw, r24.x, l(100), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r50.xyzw, r24.x, l(116), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r51.xyzw, r24.x, l(132), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r52.xyzw, r24.x, l(148), t12.xyzw
              dp3 r25.x, r56.xyzx, r6.xyzx
              mad r25.x, |r25.x|, l(-0.200000), l(0.400000)
              mad r27.xyz, r6.xyzx, r25.xxxx, r12.xyzx
              dp4 r45.x, r47.xyzw, r27.xyzw
              dp4 r45.y, r48.xyzw, r27.xyzw
              dp4 r25.x, r49.xyzw, r27.xyzw
              dp4 r25.z, r50.xyzw, r27.xyzw
              lt r27.x, r25.z, r25.x
              div r27.yz, r45.xxyx, r25.zzzz
              mad r27.yz, r27.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
              add r27.yz, r52.zzwz, r27.yyzy
              mul r27.yz, r52.xxyx, r27.yyzy
              div r45.xy, r24.yyyy, r51.xzxx
              add r47.xy, -r45.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
              ge r47.xy, r27.yzyy, r47.xyxx
              ge r45.xy, r45.xyxx, r27.yzyy
              or r45.xy, r45.xyxx, r47.xyxx
              or r30.w, r45.y, r45.x
              or r27.x, r27.x, r30.w
              if_z r27.x
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r27.x, r24.x, l(28), t12.xxxx
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xy, r24.x, l(164), t12.xyxx
                mov_sat r27.yz, r27.yyzy
                mad r47.xy, r27.yzyy, r51.xzxx, r51.ywyy
                mul r24.x, r25.z, r45.y
                mad r25.x, r45.x, r25.z, r25.x
                div r24.x, r25.x, r24.x
                max r24.x, r24.x, l(0.00006104)
                and r25.x, r27.x, l(0x0000ffff)
                if_nz r26.w
                  utof r27.z, r25.x
                  mov r25.z, l(0)
                  mov r30.w, l(0)
                  loop 
                    ige r31.w, r30.w, l(8)
                    breakc_nz r31.w
                    dp2 r45.x, icb[r30.w + 0].xyxx, r28.xyxx
                    dp2 r45.y, icb[r30.w + 0].yxyy, r28.xzxx
                    mad r27.xy, r45.xyxx, r24.yyyy, r47.xyxx
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r27.x, r27.xyzx, t9.xxxx, s13, r24.x
                    mad r25.z, r27.x, l(0.125000), r25.z
                    iadd r30.w, r30.w, l(1)
                  endloop 
                else 
                  utof r47.z, r25.x
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r25.z, r47.xyzx, t9.xxxx, s13, r24.x
                endif 
                mul r24.x, r25.z, r25.z
                mul r24.x, r25.z, r24.x
              else 
                mov r24.x, l(1.000000)
              endif 
              mul r25.y, r24.x, r25.y
            endif 
          endif 
          mul r24.x, r25.y, r26.x
          lt r24.y, l(0.000000), r24.x
          if_nz r24.y
            mov r46.x, r45.w
            mul r27.xyz, r2.yzwy, r46.xyzx
            dp3_sat r24.y, r1.xyzx, r56.xyzx
            mul r27.xyz, r57.xyzx, r27.xyzx
            dp3 r25.x, r56.xyzx, r0.xyzx
            add r25.x, r25.x, l(0.200000)
            mul_sat r25.x, r25.x, l(0.83333331)
            mul r25.x, r25.x, r25.x
            mul r30.w, r25.x, l(1.250000)
            dp3 r45.x, r56.xyzx, v8.xyzx
            dp3 r45.y, r56.xyzx, v9.xyzx
            dp2 r31.w, r45.xyxx, r45.xyxx
            rsq r31.w, r31.w
            mul r45.xy, r31.wwww, r45.xyxx
            mov r45.z, -r45.x
            dp2 r46.x, r4.yxyy, r45.yzyy
            dp2 r46.y, r4.yxyy, -r45.xyxx
            mad r45.xy, r46.xyxx, l(1.000000, 2.000000, 0.000000, 0.000000), l(0.500000, 1.000000, 0.000000, 0.000000)
            dp3 r31.w, r56.xyzx, r6.xyzx
            mad r31.w, r31.w, l(0.68965513), l(0.31034479)
            lt r32.w, l(1.000000), r45.y
            add r34.w, -r45.y, l(2.000000)
            movc r45.z, r32.w, r34.w, r45.y
            mul r32.w, r31.w, l(126.500000)
            round_ni r34.w, r32.w
            round_pi r32.w, r32.w
            mul r45.xy, r45.xzxx, l(0.00781250, 1.000000, 0.000000, 0.000000)
            mad r45.zw, r34.wwww, l(0.000000, 0.000000, 0.00781250, 0.000000), r45.xxxy
            sample_l_indexable(texture2d)(float,float,float,float) r35.w, r45.zwzz, t25.yzwx, s5, l(0.000000)
            mad r45.xy, r32.wwww, l(0.00781250, 0.000000, 0.000000, 0.000000), r45.xyxx
            sample_l_indexable(texture2d)(float,float,float,float) r32.w, r45.xyxx, t25.yzwx, s5, l(0.000000)
            mad r31.w, r31.w, l(126.500000), -r34.w
            add r32.w, -r35.w, r32.w
            mad r31.w, r31.w, r32.w, r35.w
            mad r25.x, -r25.x, l(1.250000), r31.w
            mad r45.xyz, r5.xxxx, r25.xxxx, r30.wwww
            lt r25.x, l(0.000000), r24.y
            if_nz r25.x
              mad r46.xyz, -r12.xyzx, r8.wwww, r56.xyzx
              dp3 r25.x, r46.xyzx, r46.xyzx
              rsq r25.x, r25.x
              mul r46.xyz, r25.xxxx, r46.xyzx
              dp3 r25.x, r1.xyzx, r46.xyzx
              log r25.x, |r25.x|
              mul r25.x, r4.w, r25.x
              exp r25.x, r25.x
              mul r25.x, r9.y, r25.x
              mul r24.y, r24.y, r25.x
              mul r24.y, r33.w, r24.y
              div r47.xyz, r24.yyyy, r9.zzzz
              dp3 r24.y, r46.xyzx, r56.xyzx
              add_sat r24.y, -r24.y, l(1.000000)
              mul r25.x, r24.y, r24.y
              mul r25.x, r25.x, r25.x
              mul r24.y, r24.y, r25.x
              mul r46.xyz, r24.yyyy, r47.zzzz
            else 
              mov r46.xyz, l(0,0,0,0)
              mov r47.xyz, l(0,0,0,0)
            endif 
            dp3 r24.y, r27.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mul r24.y, r24.y, r24.x
            lt r25.x, r28.w, r24.y
            if_nz r25.x
              mul r25.x, r22.w, r22.z
              mul r48.xyz, r23.xyzx, r25.xxxx
              mad r42.xyz, r48.xyzx, r39.xyzx, r42.xyzx
              mad r44.xyz, r48.xyzx, r40.xyzx, r44.xyzx
              mad r43.xyz, r48.xyzx, r41.xyzx, r43.xyzx
              mov r23.xyz, r27.xyzx
              mov r38.xyz, r56.xyzx
              mov r39.xyz, r45.xyzx
              mov r40.xyz, r47.xyzx
              mov r41.xyz, r46.xyzx
              mov r28.w, r24.y
              mov r22.z, r26.x
              mov r22.w, r25.y
            else 
              mul r27.xyz, r24.xxxx, r27.xyzx
              mad r42.xyz, r27.xyzx, r45.zzzz, r42.xyzx
              mad r44.xyz, r27.xyzx, r47.xyzx, r44.xyzx
              mad r43.xyz, r27.xyzx, r46.xyzx, r43.xyzx
            endif 
          endif 
        endif 
      endif 
    endif 
  endloop 
  mov r29.xyz, r23.xyzx
  mov r30.xyz, r38.xyzx
  mov r31.xyz, r39.xyzx
  mov r32.xyz, r40.xyzx
  mov r33.xyz, r41.xyzx
  mov r34.xyz, r42.xyzx
  mov r35.xyz, r43.xyzx
  mov r37.zw, r22.zzzw
  mov r37.y, r28.w
  mov r36.xyz, r44.xyzx
  iadd r19.w, r19.w, l(32)
endloop 
mov r0.z, l(0)
mul r0.xy, r30.yxyy, l(1.000000, -1.000000, 0.000000, 0.000000)
mul r2.yzw, r0.yyzx, r30.zzxy
mad r2.yzw, r30.yyzx, r0.zzxy, -r2.yyzw
mul r4.xyw, r17.yyyy, cb1[9].xyxw
mad r4.xyw, r17.xxxx, cb1[8].xyxw, r4.xyxw
mad r4.xyw, r17.zzzz, cb1[10].xyxw, r4.xyxw
add r4.xyw, r7.xyxz, r4.xyxw
rcp r6.z, r4.w
mul r4.xy, r4.xyxx, r6.zzzz
mad r6.xy, r4.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
mad r9.yzw, r30.xxyz, l(0.000000, 2.400000, 2.400000, 2.400000), r17.xxyz
mul r13.xyz, r2.yzwy, r9.xxxx
mad r13.xyz, r10.xxxx, r0.xyzx, r13.xyzx
mad r13.xyz, r13.xyzx, l(0.120000, 0.120000, 0.120000, 0.000000), r9.yzwy
mul r14.xyz, r13.yyyy, cb1[9].xywx
mad r13.xyw, r13.xxxx, cb1[8].xyxw, r14.xyxz
mad r13.xyz, r13.zzzz, cb1[10].xywx, r13.xywx
add r13.xyz, r7.xyzx, r13.xyzx
mul r4.xy, r13.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000)
rcp r13.z, r13.z
mad r13.xy, r4.xyxx, r13.zzzz, l(0.500000, 0.500000, 0.000000, 0.000000)
mov r14.xyz, -r6.xyzx
add r13.xyz, r13.xyzx, r14.xyzx
add r3.w, r5.w, l(3.141600)
sincos r4.x, r9.x, r3.w
mul r2.yzw, r2.yyzw, r4.xxxx
mad r0.xyz, r9.xxxx, r0.xyzx, r2.yzwy
mad r0.xyz, r0.xyzx, l(0.120000, 0.120000, 0.120000, 0.000000), r9.yzwy
mul r2.yzw, r0.yyyy, cb1[9].xxyw
mad r2.yzw, r0.xxxx, cb1[8].xxyw, r2.yyzw
mad r0.xyz, r0.zzzz, cb1[10].xywx, r2.yzwy
add r0.xyz, r7.xyzx, r0.xyzx
mul r0.xy, r0.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000)
rcp r7.z, r0.z
mad r7.xy, r0.xyxx, r7.zzzz, r14.xyxx
mov r14.w, l(0.500000)
add r0.xyz, r14.wwzw, r7.xyzx
dp2 r2.y, r13.xyxx, r13.xyxx
sqrt r2.y, r2.y
rcp r2.y, r2.y
mul r2.y, r2.y, r4.z
mad r2.zw, r1.wwww, l(0.000000, 0.000000, 0.500000, 0.500000), l(0.000000, 0.000000, 0.33333334, 1.000000)
mul r2.zw, r2.zzzw, l(0.000000, 0.000000, 0.11764706, 0.11764706)
mul r2.zw, r2.zzzw, r2.zzzw
mov x4[0].x, r2.z
mad r4.xyz, r13.xyzx, r2.zzzz, r6.xyzx
lt r7.xy, r2.yyyy, r2.zwzz
mul r4.xy, r4.xyxx, cb1[44].xyxx
ftoi r9.xy, r4.xyxx
mov r9.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r3.w, r9.xyzw, t21.yzwx
ge r4.x, r3.w, l(0.984375)
mul r4.y, r3.w, l(1.01587307)
mad r3.w, r3.w, l(64.000000), l(-63.000000)
movc r3.w, r4.x, r3.w, r4.y
max r3.w, r3.w, l(0.00000001)
rcp r3.w, r3.w
mov x5[0].x, r3.w
add r4.x, r3.w, l(0.042000)
mul r4.x, r4.x, r4.z
lt r4.x, l(1.000000), r4.x
and r4.x, r4.x, l(0x3f800000)
movc r4.x, r7.x, r4.x, l(1.000000)
mov x3[0].x, r4.x
mov x4[1].x, r2.w
mad r7.xzw, r0.xxyz, r2.wwww, r6.xxyz
mul r4.yz, r7.xxzx, cb1[44].xxyx
ftoi r9.xy, r4.yzyy
mov r9.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r4.y, r9.xyzw, t21.yxzw
ge r4.z, r4.y, l(0.984375)
mul r5.w, r4.y, l(1.01587307)
mad r4.y, r4.y, l(64.000000), l(-63.000000)
movc r4.y, r4.z, r4.y, r5.w
max r4.y, r4.y, l(0.00000001)
rcp r4.y, r4.y
mov x5[1].x, r4.y
add r4.z, r4.y, l(0.042000)
mul r4.z, r4.z, r7.w
lt r4.z, l(1.000000), r4.z
and r4.z, r4.z, l(0x3f800000)
movc r4.z, r7.y, r4.z, l(1.000000)
mov x3[1].x, r4.z
add r5.w, r4.z, r4.x
ne r5.w, r5.w, l(0.000000)
if_nz r5.w
  mad r7.xy, r1.wwww, l(0.500000, 0.500000, 0.000000, 0.000000), l(1.33333337, 2.000000, 0.000000, 0.000000)
  mul r7.xy, r7.xyxx, l(0.11764706, 0.11764706, 0.000000, 0.000000)
  mad r7.xy, r7.xyxx, r7.xyxx, -r2.zwzz
  mad r2.z, r4.x, r7.x, r2.z
  mov x4[0].x, r2.z
  mad r7.xzw, r13.xxyz, r2.zzzz, r6.xxyz
  lt r2.z, r2.y, r2.z
  mul r7.xz, r7.xxzx, cb1[44].xxyx
  ftoi r9.xy, r7.xzxx
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r5.w, r9.xyzw, t21.yzwx
  ge r6.w, r5.w, l(0.984375)
  mul r7.x, r5.w, l(1.01587307)
  mad r5.w, r5.w, l(64.000000), l(-63.000000)
  movc r5.w, r6.w, r5.w, r7.x
  max r5.w, r5.w, l(0.00000001)
  rcp r5.w, r5.w
  movc r3.w, r2.z, r5.w, r3.w
  mov x5[0].x, r3.w
  add r3.w, r5.w, l(0.042000)
  mul r3.w, r3.w, r7.w
  lt r3.w, l(1.000000), r3.w
  and r3.w, r3.w, l(0x3f800000)
  mul r3.w, r3.w, r4.x
  movc r2.z, r2.z, r3.w, r4.x
  mov x3[0].x, r2.z
  mad r2.w, r4.z, r7.y, r2.w
  mov x4[1].x, r2.w
  mad r7.xyz, r0.xyzx, r2.wwww, r6.xyzx
  lt r2.w, r2.y, r2.w
  mul r7.xy, r7.xyxx, cb1[44].xyxx
  ftoi r9.xy, r7.xyxx
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.w, r9.xyzw, t21.yzwx
  ge r4.x, r3.w, l(0.984375)
  mul r5.w, r3.w, l(1.01587307)
  mad r3.w, r3.w, l(64.000000), l(-63.000000)
  movc r3.w, r4.x, r3.w, r5.w
  max r3.w, r3.w, l(0.00000001)
  rcp r3.w, r3.w
  movc r4.x, r2.w, r3.w, r4.y
  mov x5[1].x, r4.x
  add r3.w, r3.w, l(0.042000)
  mul r3.w, r3.w, r7.z
  lt r3.w, l(1.000000), r3.w
  and r3.w, r3.w, l(0x3f800000)
  mul r3.w, r3.w, r4.z
  movc r2.w, r2.w, r3.w, r4.z
  mov x3[1].x, r2.w
  add r2.z, r2.w, r2.z
  eq r2.z, r2.z, l(0.000000)
else 
  mov r2.z, l(-1)
endif 
if_z r2.z
  mad r2.zw, r1.wwww, l(0.000000, 0.000000, 0.500000, 0.500000), l(0.000000, 0.000000, 2.33333325, 3.000000)
  mul r2.zw, r2.zzzw, l(0.000000, 0.000000, 0.11764706, 0.11764706)
  mov r3.w, x4[0].x
  mov r4.x, x3[0].x
  mad r2.z, r2.z, r2.z, -r3.w
  mad r2.z, r4.x, r2.z, r3.w
  mov x4[0].x, r2.z
  mad r7.xyz, r13.xyzx, r2.zzzz, r6.xyzx
  lt r2.z, r2.y, r2.z
  mul r4.yz, r7.xxyx, cb1[44].xxyx
  ftoi r9.xy, r4.yzyy
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.w, r9.xyzw, t21.yzwx
  ge r4.y, r3.w, l(0.984375)
  mul r4.z, r3.w, l(1.01587307)
  mad r3.w, r3.w, l(64.000000), l(-63.000000)
  movc r3.w, r4.y, r3.w, r4.z
  max r3.w, r3.w, l(0.00000001)
  rcp r3.w, r3.w
  mov r4.y, x5[0].x
  movc r4.y, r2.z, r3.w, r4.y
  mov x5[0].x, r4.y
  add r3.w, r3.w, l(0.042000)
  mul r3.w, r3.w, r7.z
  lt r3.w, l(1.000000), r3.w
  and r3.w, r3.w, l(0x3f800000)
  mul r3.w, r3.w, r4.x
  movc r2.z, r2.z, r3.w, r4.x
  mov x3[0].x, r2.z
  mov r3.w, x4[1].x
  mov r4.x, x3[1].x
  mad r2.w, r2.w, r2.w, -r3.w
  mad r2.w, r4.x, r2.w, r3.w
  mov x4[1].x, r2.w
  mad r7.xyz, r0.xyzx, r2.wwww, r6.xyzx
  lt r2.w, r2.y, r2.w
  mul r4.yz, r7.xxyx, cb1[44].xxyx
  ftoi r9.xy, r4.yzyy
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.w, r9.xyzw, t21.yzwx
  ge r4.y, r3.w, l(0.984375)
  mul r4.z, r3.w, l(1.01587307)
  mad r3.w, r3.w, l(64.000000), l(-63.000000)
  movc r3.w, r4.y, r3.w, r4.z
  max r3.w, r3.w, l(0.00000001)
  rcp r3.w, r3.w
  mov r4.y, x5[1].x
  movc r4.y, r2.w, r3.w, r4.y
  mov x5[1].x, r4.y
  add r3.w, r3.w, l(0.042000)
  mul r3.w, r3.w, r7.z
  lt r3.w, l(1.000000), r3.w
  and r3.w, r3.w, l(0x3f800000)
  mul r3.w, r3.w, r4.x
  movc r2.w, r2.w, r3.w, r4.x
  mov x3[1].x, r2.w
  add r2.z, r2.w, r2.z
  eq r2.z, r2.z, l(0.000000)
else 
  mov r2.z, l(-1)
endif 
if_z r2.z
  mad r2.zw, r1.wwww, l(0.000000, 0.000000, 0.500000, 0.500000), l(0.000000, 0.000000, 3.33333325, 4.000000)
  mul r2.zw, r2.zzzw, l(0.000000, 0.000000, 0.11764706, 0.11764706)
  mov r3.w, x4[0].x
  mov r4.x, x3[0].x
  mad r2.z, r2.z, r2.z, -r3.w
  mad r2.z, r4.x, r2.z, r3.w
  mov x4[0].x, r2.z
  mad r7.xyz, r13.xyzx, r2.zzzz, r6.xyzx
  lt r2.z, r2.y, r2.z
  mul r4.yz, r7.xxyx, cb1[44].xxyx
  ftoi r9.xy, r4.yzyy
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.w, r9.xyzw, t21.yzwx
  ge r4.y, r3.w, l(0.984375)
  mul r4.z, r3.w, l(1.01587307)
  mad r3.w, r3.w, l(64.000000), l(-63.000000)
  movc r3.w, r4.y, r3.w, r4.z
  max r3.w, r3.w, l(0.00000001)
  rcp r3.w, r3.w
  mov r4.y, x5[0].x
  movc r4.y, r2.z, r3.w, r4.y
  mov x5[0].x, r4.y
  add r3.w, r3.w, l(0.042000)
  mul r3.w, r3.w, r7.z
  lt r3.w, l(1.000000), r3.w
  and r3.w, r3.w, l(0x3f800000)
  mul r3.w, r3.w, r4.x
  movc r2.z, r2.z, r3.w, r4.x
  mov x3[0].x, r2.z
  mov r3.w, x4[1].x
  mov r4.x, x3[1].x
  mad r2.w, r2.w, r2.w, -r3.w
  mad r2.w, r4.x, r2.w, r3.w
  mov x4[1].x, r2.w
  mad r7.xyz, r0.xyzx, r2.wwww, r6.xyzx
  lt r2.w, r2.y, r2.w
  mul r4.yz, r7.xxyx, cb1[44].xxyx
  ftoi r9.xy, r4.yzyy
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.w, r9.xyzw, t21.yzwx
  ge r4.y, r3.w, l(0.984375)
  mul r4.z, r3.w, l(1.01587307)
  mad r3.w, r3.w, l(64.000000), l(-63.000000)
  movc r3.w, r4.y, r3.w, r4.z
  max r3.w, r3.w, l(0.00000001)
  rcp r3.w, r3.w
  mov r4.y, x5[1].x
  movc r4.y, r2.w, r3.w, r4.y
  mov x5[1].x, r4.y
  add r3.w, r3.w, l(0.042000)
  mul r3.w, r3.w, r7.z
  lt r3.w, l(1.000000), r3.w
  and r3.w, r3.w, l(0x3f800000)
  mul r3.w, r3.w, r4.x
  movc r2.w, r2.w, r3.w, r4.x
  mov x3[1].x, r2.w
  add r2.z, r2.w, r2.z
  eq r2.z, r2.z, l(0.000000)
else 
  mov r2.z, l(-1)
endif 
if_z r2.z
  mad r2.zw, r1.wwww, l(0.000000, 0.000000, 0.500000, 0.500000), l(0.000000, 0.000000, 4.33333349, 5.000000)
  mul r2.zw, r2.zzzw, l(0.000000, 0.000000, 0.11764706, 0.11764706)
  mov r3.w, x4[0].x
  mov r4.x, x3[0].x
  mad r2.z, r2.z, r2.z, -r3.w
  mad r2.z, r4.x, r2.z, r3.w
  mov x4[0].x, r2.z
  mad r7.xyz, r13.xyzx, r2.zzzz, r6.xyzx
  lt r2.z, r2.y, r2.z
  mul r4.yz, r7.xxyx, cb1[44].xxyx
  ftoi r9.xy, r4.yzyy
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.w, r9.xyzw, t21.yzwx
  ge r4.y, r3.w, l(0.984375)
  mul r4.z, r3.w, l(1.01587307)
  mad r3.w, r3.w, l(64.000000), l(-63.000000)
  movc r3.w, r4.y, r3.w, r4.z
  max r3.w, r3.w, l(0.00000001)
  rcp r3.w, r3.w
  mov r4.y, x5[0].x
  movc r4.y, r2.z, r3.w, r4.y
  mov x5[0].x, r4.y
  add r3.w, r3.w, l(0.042000)
  mul r3.w, r3.w, r7.z
  lt r3.w, l(1.000000), r3.w
  and r3.w, r3.w, l(0x3f800000)
  mul r3.w, r3.w, r4.x
  movc r2.z, r2.z, r3.w, r4.x
  mov x3[0].x, r2.z
  mov r3.w, x4[1].x
  mov r4.x, x3[1].x
  mad r2.w, r2.w, r2.w, -r3.w
  mad r2.w, r4.x, r2.w, r3.w
  mov x4[1].x, r2.w
  mad r7.xyz, r0.xyzx, r2.wwww, r6.xyzx
  lt r2.w, r2.y, r2.w
  mul r4.yz, r7.xxyx, cb1[44].xxyx
  ftoi r9.xy, r4.yzyy
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.w, r9.xyzw, t21.yzwx
  ge r4.y, r3.w, l(0.984375)
  mul r4.z, r3.w, l(1.01587307)
  mad r3.w, r3.w, l(64.000000), l(-63.000000)
  movc r3.w, r4.y, r3.w, r4.z
  max r3.w, r3.w, l(0.00000001)
  rcp r3.w, r3.w
  mov r4.y, x5[1].x
  movc r4.y, r2.w, r3.w, r4.y
  mov x5[1].x, r4.y
  add r3.w, r3.w, l(0.042000)
  mul r3.w, r3.w, r7.z
  lt r3.w, l(1.000000), r3.w
  and r3.w, r3.w, l(0x3f800000)
  mul r3.w, r3.w, r4.x
  movc r2.w, r2.w, r3.w, r4.x
  mov x3[1].x, r2.w
  add r2.z, r2.w, r2.z
  eq r2.z, r2.z, l(0.000000)
else 
  mov r2.z, l(-1)
endif 
if_z r2.z
  mad r2.zw, r1.wwww, l(0.000000, 0.000000, 0.500000, 0.500000), l(0.000000, 0.000000, 5.33333349, 6.000000)
  mul r2.zw, r2.zzzw, l(0.000000, 0.000000, 0.11764706, 0.11764706)
  mov r3.w, x4[0].x
  mov r4.x, x3[0].x
  mad r2.z, r2.z, r2.z, -r3.w
  mad r2.z, r4.x, r2.z, r3.w
  mov x4[0].x, r2.z
  mad r7.xyz, r13.xyzx, r2.zzzz, r6.xyzx
  lt r2.z, r2.y, r2.z
  mul r4.yz, r7.xxyx, cb1[44].xxyx
  ftoi r9.xy, r4.yzyy
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.w, r9.xyzw, t21.yzwx
  ge r4.y, r3.w, l(0.984375)
  mul r4.z, r3.w, l(1.01587307)
  mad r3.w, r3.w, l(64.000000), l(-63.000000)
  movc r3.w, r4.y, r3.w, r4.z
  max r3.w, r3.w, l(0.00000001)
  rcp r3.w, r3.w
  mov r4.y, x5[0].x
  movc r4.y, r2.z, r3.w, r4.y
  mov x5[0].x, r4.y
  add r3.w, r3.w, l(0.042000)
  mul r3.w, r3.w, r7.z
  lt r3.w, l(1.000000), r3.w
  and r3.w, r3.w, l(0x3f800000)
  mul r3.w, r3.w, r4.x
  movc r2.z, r2.z, r3.w, r4.x
  mov x3[0].x, r2.z
  mov r3.w, x4[1].x
  mov r4.x, x3[1].x
  mad r2.w, r2.w, r2.w, -r3.w
  mad r2.w, r4.x, r2.w, r3.w
  mov x4[1].x, r2.w
  mad r7.xyz, r0.xyzx, r2.wwww, r6.xyzx
  lt r2.w, r2.y, r2.w
  mul r4.yz, r7.xxyx, cb1[44].xxyx
  ftoi r9.xy, r4.yzyy
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.w, r9.xyzw, t21.yzwx
  ge r4.y, r3.w, l(0.984375)
  mul r4.z, r3.w, l(1.01587307)
  mad r3.w, r3.w, l(64.000000), l(-63.000000)
  movc r3.w, r4.y, r3.w, r4.z
  max r3.w, r3.w, l(0.00000001)
  rcp r3.w, r3.w
  mov r4.y, x5[1].x
  movc r4.y, r2.w, r3.w, r4.y
  mov x5[1].x, r4.y
  add r3.w, r3.w, l(0.042000)
  mul r3.w, r3.w, r7.z
  lt r3.w, l(1.000000), r3.w
  and r3.w, r3.w, l(0x3f800000)
  mul r3.w, r3.w, r4.x
  movc r2.w, r2.w, r3.w, r4.x
  mov x3[1].x, r2.w
  add r2.z, r2.w, r2.z
  eq r2.z, r2.z, l(0.000000)
else 
  mov r2.z, l(-1)
endif 
if_z r2.z
  mad r2.zw, r1.wwww, l(0.000000, 0.000000, 0.500000, 0.500000), l(0.000000, 0.000000, 6.33333349, 7.000000)
  mul r2.zw, r2.zzzw, l(0.000000, 0.000000, 0.11764706, 0.11764706)
  mov r3.w, x4[0].x
  mov r4.x, x3[0].x
  mad r2.z, r2.z, r2.z, -r3.w
  mad r2.z, r4.x, r2.z, r3.w
  mov x4[0].x, r2.z
  mad r7.xyz, r13.xyzx, r2.zzzz, r6.xyzx
  lt r2.z, r2.y, r2.z
  mul r4.yz, r7.xxyx, cb1[44].xxyx
  ftoi r9.xy, r4.yzyy
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.w, r9.xyzw, t21.yzwx
  ge r4.y, r3.w, l(0.984375)
  mul r4.z, r3.w, l(1.01587307)
  mad r3.w, r3.w, l(64.000000), l(-63.000000)
  movc r3.w, r4.y, r3.w, r4.z
  max r3.w, r3.w, l(0.00000001)
  rcp r3.w, r3.w
  mov r4.y, x5[0].x
  movc r4.y, r2.z, r3.w, r4.y
  mov x5[0].x, r4.y
  add r3.w, r3.w, l(0.042000)
  mul r3.w, r3.w, r7.z
  lt r3.w, l(1.000000), r3.w
  and r3.w, r3.w, l(0x3f800000)
  mul r3.w, r3.w, r4.x
  movc r2.z, r2.z, r3.w, r4.x
  mov x3[0].x, r2.z
  mov r3.w, x4[1].x
  mov r4.x, x3[1].x
  mad r2.w, r2.w, r2.w, -r3.w
  mad r2.w, r4.x, r2.w, r3.w
  mov x4[1].x, r2.w
  mad r7.xyz, r0.xyzx, r2.wwww, r6.xyzx
  lt r2.w, r2.y, r2.w
  mul r4.yz, r7.xxyx, cb1[44].xxyx
  ftoi r9.xy, r4.yzyy
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r3.w, r9.xyzw, t21.yzwx
  ge r4.y, r3.w, l(0.984375)
  mul r4.z, r3.w, l(1.01587307)
  mad r3.w, r3.w, l(64.000000), l(-63.000000)
  movc r3.w, r4.y, r3.w, r4.z
  max r3.w, r3.w, l(0.00000001)
  rcp r3.w, r3.w
  mov r4.y, x5[1].x
  movc r4.y, r2.w, r3.w, r4.y
  mov x5[1].x, r4.y
  add r3.w, r3.w, l(0.042000)
  mul r3.w, r3.w, r7.z
  lt r3.w, l(1.000000), r3.w
  and r3.w, r3.w, l(0x3f800000)
  mul r3.w, r3.w, r4.x
  movc r2.w, r2.w, r3.w, r4.x
  mov x3[1].x, r2.w
  add r2.z, r2.w, r2.z
  eq r2.z, r2.z, l(0.000000)
else 
  mov r2.z, l(-1)
endif 
if_z r2.z
  mad r2.zw, r1.wwww, l(0.000000, 0.000000, 0.500000, 0.500000), l(0.000000, 0.000000, 7.33333349, 8.000000)
  mul r2.zw, r2.zzzw, l(0.000000, 0.000000, 0.11764706, 0.11764706)
  mov r1.w, x4[0].x
  mov r3.w, x3[0].x
  mad r2.z, r2.z, r2.z, -r1.w
  mad r1.w, r3.w, r2.z, r1.w
  mad r4.xyz, r13.xyzx, r1.wwww, r6.xyzx
  lt r1.w, r2.y, r1.w
  mul r4.xy, r4.xyxx, cb1[44].xyxx
  ftoi r7.xy, r4.xyxx
  mov r7.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r2.z, r7.xyzw, t21.yzxw
  ge r4.x, r2.z, l(0.984375)
  mul r4.y, r2.z, l(1.01587307)
  mad r2.z, r2.z, l(64.000000), l(-63.000000)
  movc r2.z, r4.x, r2.z, r4.y
  max r2.z, r2.z, l(0.00000001)
  rcp r2.z, r2.z
  mov r4.x, x5[0].x
  movc r4.x, r1.w, r2.z, r4.x
  mov x5[0].x, r4.x
  add r2.z, r2.z, l(0.042000)
  mul r2.z, r2.z, r4.z
  lt r2.z, l(1.000000), r2.z
  and r2.z, r2.z, l(0x3f800000)
  mul r2.z, r2.z, r3.w
  movc r1.w, r1.w, r2.z, r3.w
  mov x3[0].x, r1.w
  mov r1.w, x4[1].x
  mov r2.z, x3[1].x
  mad r2.w, r2.w, r2.w, -r1.w
  mad r1.w, r2.z, r2.w, r1.w
  mad r0.xyz, r0.xyzx, r1.wwww, r6.xyzx
  lt r1.w, r2.y, r1.w
  mul r0.xy, r0.xyxx, cb1[44].xyxx
  ftoi r6.xy, r0.xyxx
  mov r6.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r0.x, r6.xyzw, t21.xyzw
  ge r0.y, r0.x, l(0.984375)
  mul r2.y, r0.x, l(1.01587307)
  mad r0.x, r0.x, l(64.000000), l(-63.000000)
  movc r0.x, r0.y, r0.x, r2.y
  max r0.x, r0.x, l(0.00000001)
  rcp r0.x, r0.x
  mov r0.y, x5[1].x
  movc r0.y, r1.w, r0.x, r0.y
  mov x5[1].x, r0.y
  add r0.x, r0.x, l(0.042000)
  mul r0.x, r0.x, r0.z
  lt r0.x, l(1.000000), r0.x
  and r0.x, r0.x, l(0x3f800000)
  mul r0.x, r0.x, r2.z
  movc r0.x, r1.w, r0.x, r2.z
  mov x3[1].x, r0.x
endif 
mov r0.x, x5[0].x
add r0.x, -r4.w, r0.x
lt r0.x, l(2.400000), |r0.x|
mov r0.y, x3[0].x
mad r0.y, -r0.y, l(0.500000), l(1.000000)
movc r0.x, r0.x, l(0.500000), r0.y
mov r0.y, x5[1].x
add r0.y, -r4.w, r0.y
lt r0.y, l(2.400000), |r0.y|
mov r0.z, x3[1].x
mul r0.z, r0.z, l(0.500000)
movc r0.y, r0.y, l(-0.500000), -r0.z
add r0.x, r0.y, r0.x
add_sat r0.x, -r0.x, l(1.000000)
mad r0.y, r0.x, l(-2.000000), l(3.000000)
mul r0.x, r0.x, r0.x
mul r0.x, r0.x, r0.y
min r0.x, r0.x, r37.w
mul r0.x, r0.x, r37.z
mul r0.xyz, r29.xyzx, r0.xxxx
mad r2.yzw, r0.xxyz, r31.xxyz, r34.xxyz
mad r4.xyz, r0.xyzx, r32.xyzx, r36.xyzx
mad r0.xyz, r0.xyzx, r33.xyzx, r35.xyzx
dp3_sat r1.w, r11.xyzx, r10.yzwy
add r6.y, r0.w, l(0.150000)
add r0.w, -r6.y, l(1.000000)
mul r3.w, r0.w, l(5.000000)
mad r4.w, r0.w, l(5.000000), l(-2.500000)
mul r4.w, r4.w, l(0.400000)
max r4.w, r4.w, l(0.000000)
mul r4.w, r4.w, l(100.000000)
mad r6.zw, -r0.wwww, l(0.000000, 0.000000, 10.000000, 5.000000), l(0.000000, 0.000000, 6.857410, 7.085000)
exp r5.w, r6.z
mul r5.w, r1.w, r5.w
mul r5.w, r5.w, l(9.136810)
mul r6.z, r0.w, r3.w
mad r6.z, -r6.z, l(2.015905), r6.w
exp r6.z, r6.z
mul r1.w, r1.w, r6.z
mul r1.w, r1.w, l(9.708090)
max r1.w, r1.w, r5.w
max r1.w, r1.w, l(1.268160)
dp3 r5.w, -r10.yzwy, r1.xyzx
add r5.w, r5.w, r5.w
mad r7.xyz, r1.xyzx, -r5.wwww, -r10.yzwy
mov r9.xy, l(0,0,0,0)
mov r13.w, l(0)
mov r14.yz, l(0,0,1.000000,0)
mov r15.xy, l(0,0,0,0)
mov r16.xy, l(0,0,0,0)
mov r17.xy, l(0,0,0,0)
mov r18.x, l(1.000000)
mov r20.xyzw, l(0,0,0,0)
mov r21.yzw, l(0,0,0,0)
mov r5.w, l(0)
mov r6.z, l(0)
loop 
  uge r6.w, r6.z, cb2[0].y
  breakc_nz r6.w
  ushr r9.z, r6.z, l(5)
  iadd r13.xyz, r9.xyzx, r19.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r6.w, r13.xyzw, t7.yzwx
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r22.xyzw, r6.z, l(0), t15.wxyz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r23.xyzw, r6.z, l(16), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r6.z, l(32), t15.yxwz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r6.z, l(48), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r6.z, l(64), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r6.z, l(80), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r9.zw, r6.z, l(96), t15.xxxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r6.z, l(116), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r6.z, l(132), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r6.z, l(148), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r6.z, l(164), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r6.z, l(180), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r6.z, l(196), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xy, r6.z, l(212), t15.xyxx
  add r13.xyz, r12.xyzx, -r22.yzwy
  dp3 r8.w, r13.xyzx, r13.xyzx
  sqrt r8.w, r8.w
  ge r8.w, cb2[54].y, r8.w
  and r10.x, r28.y, l(0x0000ffff)
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r10.x, l(0), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r10.x, l(16), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r10.x, l(32), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r38.xyzw, r10.x, l(48), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r39.xyzw, r10.x, l(64), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r40.xyzw, r10.x, l(80), t16.xyzw
  dp3 r12.w, r35.xyzx, r13.xyzx
  add_sat r12.w, r35.w, r12.w
  dp3 r14.w, r36.xyzx, r13.xyzx
  add_sat r14.w, r36.w, r14.w
  mul r12.w, r12.w, r14.w
  dp3 r14.w, r37.xyzx, r13.xyzx
  add_sat r14.w, r37.w, r14.w
  mul r12.w, r12.w, r14.w
  dp3 r14.w, r38.xyzx, r13.xyzx
  add_sat r14.w, r38.w, r14.w
  mul r12.w, r12.w, r14.w
  dp3 r14.w, r39.xyzx, r13.xyzx
  add_sat r14.w, r39.w, r14.w
  mul r12.w, r12.w, r14.w
  dp3 r14.w, r40.xyzx, r13.xyzx
  add_sat r14.w, r40.w, r14.w
  mul r14.x, r12.w, r14.w
  and r12.w, r9.z, l(1)
  movc r14.xw, r12.wwww, r14.xxxy, r14.zzzx
  mov r35.xy, r28.zwzz
  mov r35.z, r29.z
  dp3 r12.w, r7.xyzx, r35.xyzx
  dp3 r15.w, r13.xyzx, r35.xyzx
  add r15.w, -r29.w, r15.w
  ge r16.w, r15.w, l(0.000000)
  max r15.w, r4.w, |r15.w|
  movc r15.w, r16.w, r15.w, -r15.w
  max r12.w, -r12.w, l(0.00000010)
  div r12.w, r15.w, r12.w
  min r12.w, |r12.w|, l(131072.000000)
  mov r29.z, r30.z
  dp3 r15.w, r7.xyzx, r29.xyzx
  dp3 r16.w, r13.xyzx, r29.xyzx
  add r16.w, -r30.w, r16.w
  ge r17.w, r16.w, l(0.000000)
  max r16.w, r4.w, |r16.w|
  movc r16.w, r17.w, r16.w, -r16.w
  max r15.w, -r15.w, l(0.00000010)
  div r15.w, r16.w, r15.w
  min r12.w, r12.w, |r15.w|
  mov r30.z, r31.z
  dp3 r15.w, r7.xyzx, r30.xyzx
  dp3 r16.w, r13.xyzx, r30.xyzx
  add r16.w, -r31.w, r16.w
  ge r17.w, r16.w, l(0.000000)
  max r16.w, r4.w, |r16.w|
  movc r16.w, r17.w, r16.w, -r16.w
  max r15.w, -r15.w, l(0.00000010)
  div r15.w, r16.w, r15.w
  min r12.w, r12.w, |r15.w|
  mov r31.z, r32.z
  dp3 r15.w, r7.xyzx, r31.xyzx
  dp3 r16.w, r13.xyzx, r31.xyzx
  add r16.w, -r32.w, r16.w
  ge r17.w, r16.w, l(0.000000)
  max r16.w, r4.w, |r16.w|
  movc r16.w, r17.w, r16.w, -r16.w
  max r15.w, -r15.w, l(0.00000010)
  div r15.w, r16.w, r15.w
  min r12.w, r12.w, |r15.w|
  mov r32.z, r33.x
  dp3 r15.w, r7.xyzx, r32.xyzx
  dp3 r16.w, r13.xyzx, r32.xyzx
  add r16.w, -r33.y, r16.w
  ge r17.w, r16.w, l(0.000000)
  max r16.w, r4.w, |r16.w|
  movc r16.w, r17.w, r16.w, -r16.w
  max r15.w, -r15.w, l(0.00000010)
  div r15.w, r16.w, r15.w
  min r12.w, r12.w, |r15.w|
  mov r34.zw, r33.zzzw
  dp3 r15.w, r7.zxyz, r34.xzwx
  dp3 r16.w, r13.zxyz, r34.xzwx
  add r16.w, -r34.y, r16.w
  ge r17.w, r16.w, l(0.000000)
  max r16.w, r4.w, |r16.w|
  movc r16.w, r17.w, r16.w, -r16.w
  max r15.w, -r15.w, l(0.00000010)
  div r15.w, r16.w, r15.w
  min r12.w, r12.w, |r15.w|
  mov r29.x, r25.w
  mov r29.yz, r26.zzwz
  add r29.xyz, r13.xyzx, r29.xyzx
  mad r29.xyz, r7.xyzx, r12.wwww, r29.xyzx
  dp3 r15.w, r29.xyzx, r29.xyzx
  sqrt r15.w, r15.w
  div r12.w, r12.w, r15.w
  add r12.w, r12.w, r12.w
  sqrt r12.w, r12.w
  mad r12.w, r0.w, l(5.000000), r12.w
  add r12.w, r12.w, l(-0.844800)
  mov r22.y, r23.z
  mov r22.z, r24.x
  dp3 r30.x, r29.xyzx, r22.xyzx
  mov r31.xy, r23.xwxx
  mov r31.z, r24.w
  dp3 r30.y, r29.xyzx, r31.xyzx
  mov r24.x, r23.y
  dp3 r30.z, r29.xyzx, r24.xyzx
  ubfe r18.zw, l(0, 0, 6, 9), l(0, 0, 25, 16), r28.yyyy
  utof r30.w, r18.w
  sample_l_indexable(texturecubearray)(float,float,float,float) r23.xyz, r30.xyzw, t8.xyzw, s2, r12.w
  and r28.yzw, r23.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
  ieq r28.yzw, r28.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
  or r12.w, r28.z, r28.y
  or r12.w, r28.w, r12.w
  movc r23.xyz, r12.wwww, l(1.000000,1.000000,0,0), r23.xyzx
  dp3 r29.x, r13.xyzx, r22.xyzx
  dp3 r29.y, r13.xyzx, r31.xyzx
  dp3 r29.z, r13.xyzx, r24.xyzx
  mad_sat r25.xyz, r29.xyzx, r25.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mov r26.z, r27.x
  mad r25.xyz, r25.xyzx, r26.xyzx, r27.yzwy
  dp3 r30.x, r11.xyzx, r22.xyzx
  dp3 r30.y, r11.xyzx, r31.xyzx
  dp3 r30.z, r11.xyzx, r24.xyzx
  lt r22.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r30.xyzx
  movc r15.z, r22.x, l(0), l(0.500000)
  add r24.xyz, r15.xyzx, r25.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r24.xyz, r24.xyzx, t17.xyzw, s4, l(0.000000)
  movc r16.z, r22.y, l(0), l(0.500000)
  add r22.xyw, r16.xyxz, r25.xyxz
  sample_l_indexable(texture3d)(float,float,float,float) r22.xyw, r22.xywx, t18.xywz, s4, l(0.000000)
  movc r17.z, r22.z, l(0), l(0.500000)
  add r25.xyz, r17.xyzx, r25.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r25.xyz, r25.xyzx, t19.xyzw, s4, l(0.000000)
  mul r26.xyz, r30.xyzx, r30.xyzx
  sample_l_indexable(texturecubearray)(float,float,float,float) r27.xyz, r30.xyzw, t8.xyzw, s2, l(6.000000)
  and r28.yzw, r27.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
  ieq r28.yzw, r28.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
  or r12.w, r28.z, r28.y
  or r12.w, r28.w, r12.w
  movc r27.xyz, r12.wwww, l(1.000000,1.000000,0,0), r27.xyzx
  mov r29.xyzw, r20.xyzw
  mov r28.yzw, r21.yyzw
  mov r12.w, r5.w
  mov r15.z, r6.w
  loop 
    breakc_z r15.z
    firstbit_lo r15.w, r15.z
    ishl r15.w, l(1), r15.w
    and r16.z, r15.w, r15.z
    if_nz r16.z
      not r15.w, r15.w
      and r15.z, r15.w, r15.z
      if_nz r8.w
        mov r15.w, r9.z
        mov r30.xy, r14.xwxx
        mov r16.z, l(1)
        loop 
          ige r16.w, r16.z, r18.z
          breakc_nz r16.w
          iadd r16.w, r10.x, r16.z
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r16.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r16.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r16.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r16.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r16.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r16.w, l(80), t16.xyzw
          dp3 r16.w, r31.xyzx, r13.xyzx
          add_sat r16.w, r31.w, r16.w
          mul r16.w, r16.w, r30.x
          dp3 r17.z, r32.xyzx, r13.xyzx
          add_sat r17.z, r32.w, r17.z
          mul r16.w, r16.w, r17.z
          dp3 r17.z, r33.xyzx, r13.xyzx
          add_sat r17.z, r33.w, r17.z
          mul r16.w, r16.w, r17.z
          dp3 r17.z, r34.xyzx, r13.xyzx
          add_sat r17.z, r34.w, r17.z
          mul r16.w, r16.w, r17.z
          dp3 r17.z, r35.xyzx, r13.xyzx
          add_sat r17.z, r35.w, r17.z
          mul r16.w, r16.w, r17.z
          dp3 r17.z, r36.xyzx, r13.xyzx
          add_sat r17.z, r36.w, r17.z
          mul r30.x, r16.w, r17.z
          ushr r17.w, r15.w, l(2)
          ubfe r18.w, l(1), l(2), r15.w
          and r19.w, r17.w, l(2)
          max r22.z, r30.x, r30.y
          mad r16.w, -r16.w, r17.z, l(1.000000)
          mul r16.w, r16.w, r30.y
          movc r18.y, r19.w, r16.w, r22.z
          movc r30.xy, r18.wwww, r30.xyxx, r18.xyxx
          iadd r16.z, r16.z, l(1)
          mov r15.w, r17.w
        endloop 
        mov_sat r30.y, r30.y
        mul r15.w, r9.w, r30.y
        lt r16.z, l(0.000000), r15.w
        if_nz r16.z
          mad r31.z, r30.y, r9.w, r28.w
          mul r15.w, r28.x, r15.w
          mul r30.xzw, r15.wwww, r26.xxyz
          mul r32.xyz, r22.xywx, r30.zzzz
          mad r32.xyz, r24.xyzx, r30.xxxx, r32.xyzx
          mad r30.xzw, r25.xxyz, r30.wwww, r32.xxyz
          mul r32.xyz, r27.xyzx, r30.xzwx
          dp3 r16.z, r32.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r32.xyz, r30.xzwx, r27.xyzx, r29.xyzx
          mul r16.w, r1.w, r16.z
          mul r30.xzw, r15.wwww, r23.xxyz
          dp3 r15.w, r30.xzwx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r15.w, r1.w, r16.z, r15.w
          div r15.w, r16.w, r15.w
          mov r33.x, r29.w
          mov r33.yz, r28.yyzy
          mad r31.xyw, r30.zwzx, r15.wwww, r33.yzyx
          mov r32.w, r31.w
        else 
          mov r32.xyzw, r29.xyzw
          mov r31.xyz, r28.yzwy
        endif 
        mov r12.w, l(-1)
        mov r29.xyzw, r32.xyzw
        mov r28.yzw, r31.xxyz
        break 
      endif 
    endif 
  endloop 
  if_nz r12.w
    mov r20.xyzw, r29.xyzw
    mov r21.yzw, r28.yyzw
    mov r5.w, l(-1)
    break 
  endif 
  iadd r6.z, r6.z, l(32)
  mov r20.xyzw, r29.xyzw
  mov r21.yzw, r28.yyzw
  mov r5.w, r12.w
endloop 
if_z r5.w
  iadd r5.w, cb2[0].y, -cb2[58].x
  and r6.z, r5.w, l(-32)
  iadd r6.w, r5.w, -r6.z
  and r8.w, cb2[0].y, l(-32)
  iadd r9.x, -r8.w, cb2[0].y
  mov r13.xy, l(0,0,0,0)
  mov r14.w, l(0)
  mov r15.yz, l(0,0,1.000000,0)
  mov r16.xy, l(0,0,0,0)
  mov r17.x, l(1.000000)
  mov r18.xy, l(0,0,0,0)
  mov r22.xy, l(0,0,0,0)
  mov r23.xyzw, r20.xyzw
  mov r24.yzw, r21.yyzw
  mov r9.y, r6.z
  loop 
    uge r9.z, r9.y, cb2[0].y
    breakc_nz r9.z
    ushr r13.z, r9.y, l(5)
    iadd r14.xyz, r13.xyzx, r19.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r9.z, r14.xyzw, t7.yzxw
    ieq r9.w, r6.z, r9.y
    bfi r10.x, r6.w, l(0), l(0), r9.z
    movc r9.z, r9.w, r10.x, r9.z
    ieq r9.w, r8.w, r9.y
    ubfe r10.x, r9.x, l(0), r9.z
    movc r9.z, r9.w, r10.x, r9.z
    iadd r9.w, r9.y, cb2[0].x
    mov r25.xyzw, r23.xyzw
    mov r26.xyz, r24.yzwy
    mov r10.x, r9.z
    loop 
      breakc_z r10.x
      firstbit_lo r12.w, r10.x
      ishl r13.z, l(1), r12.w
      and r13.w, r10.x, r13.z
      if_nz r13.w
        xor r10.x, r10.x, r13.z
        iadd r13.z, r9.w, r12.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r27.xyzw, r13.z, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r14.xy, r13.z, l(16), t11.xyxx
        add r27.xyz, -r12.xyzx, r27.xyzx
        mov r14.z, r27.w
        lt r14.xyz, |r27.xyzx|, r14.zxyz
        and r13.z, r14.y, r14.x
        and r13.z, r14.z, r13.z
        if_nz r13.z
          iadd r12.w, r9.y, r12.w
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r12.w, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r13.zw, r12.w, l(96), t15.xxxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r12.w, l(116), t15.zwxy
          add r14.xyz, r12.xyzx, -r27.yzwy
          and r15.w, r28.w, l(0x0000ffff)
          ubfe r16.w, l(6), l(25), r28.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r15.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r15.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r15.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r15.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r15.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r15.w, l(80), t16.xyzw
          dp3 r17.z, r29.xyzx, r14.xyzx
          add_sat r17.z, r29.w, r17.z
          dp3 r17.w, r30.xyzx, r14.xyzx
          add_sat r17.w, r30.w, r17.w
          mul r17.z, r17.w, r17.z
          dp3 r17.w, r31.xyzx, r14.xyzx
          add_sat r17.w, r31.w, r17.w
          mul r17.z, r17.w, r17.z
          dp3 r17.w, r32.xyzx, r14.xyzx
          add_sat r17.w, r32.w, r17.w
          mul r17.z, r17.w, r17.z
          dp3 r17.w, r33.xyzx, r14.xyzx
          add_sat r17.w, r33.w, r17.w
          mul r17.z, r17.w, r17.z
          dp3 r17.w, r34.xyzx, r14.xyzx
          add_sat r17.w, r34.w, r17.w
          mul r15.x, r17.w, r17.z
          and r17.z, r13.z, l(1)
          movc r17.zw, r17.zzzz, r15.xxxy, r15.zzzx
          mov r15.x, r13.z
          mov r29.xy, r17.zwzz
          mov r18.w, l(1)
          loop 
            ige r19.w, r18.w, r16.w
            breakc_nz r19.w
            iadd r19.w, r15.w, r18.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r19.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r19.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r19.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r19.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r19.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r19.w, l(80), t16.xyzw
            dp3 r19.w, r30.xyzx, r14.xyzx
            add_sat r19.w, r30.w, r19.w
            mul r19.w, r19.w, r29.x
            dp3 r22.w, r31.xyzx, r14.xyzx
            add_sat r22.w, r31.w, r22.w
            mul r19.w, r19.w, r22.w
            dp3 r22.w, r32.xyzx, r14.xyzx
            add_sat r22.w, r32.w, r22.w
            mul r19.w, r19.w, r22.w
            dp3 r22.w, r33.xyzx, r14.xyzx
            add_sat r22.w, r33.w, r22.w
            mul r19.w, r19.w, r22.w
            dp3 r22.w, r34.xyzx, r14.xyzx
            add_sat r22.w, r34.w, r22.w
            mul r19.w, r19.w, r22.w
            dp3 r22.w, r35.xyzx, r14.xyzx
            add_sat r22.w, r35.w, r22.w
            mul r29.x, r19.w, r22.w
            ushr r27.w, r15.x, l(2)
            ubfe r29.z, l(1), l(2), r15.x
            and r29.w, r27.w, l(2)
            max r30.x, r29.x, r29.y
            mad r19.w, -r19.w, r22.w, l(1.000000)
            mul r19.w, r19.w, r29.y
            movc r17.y, r29.w, r19.w, r30.x
            movc r29.xy, r29.zzzz, r29.xyxx, r17.xyxx
            iadd r18.w, r18.w, l(1)
            mov r15.x, r27.w
          endloop 
          mov_sat r29.y, r29.y
          mul r13.z, r13.w, r29.y
          lt r15.x, l(0.000000), r13.z
          if_nz r15.x
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r12.w, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r12.w, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r12.w, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r12.w, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r12.w, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r12.w, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r12.w, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r12.w, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r12.w, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xyzw, r12.w, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r40.xy, r12.w, l(212), t15.xyxx
            mad r26.z, r29.y, r13.w, r26.z
            mul r12.w, r28.z, r13.z
            mov r28.z, r35.z
            dp3 r13.z, r7.xyzx, r28.xyzx
            dp3 r13.w, r14.xyzx, r28.xyzx
            add r13.w, -r35.w, r13.w
            ge r15.x, r13.w, l(0.000000)
            max r13.w, r4.w, |r13.w|
            movc r13.w, r15.x, r13.w, -r13.w
            max r13.z, -r13.z, l(0.00000010)
            div r13.z, r13.w, r13.z
            min r13.z, |r13.z|, l(131072.000000)
            mov r35.z, r36.z
            dp3 r13.w, r7.xyzx, r35.xyzx
            dp3 r15.x, r14.xyzx, r35.xyzx
            add r15.x, -r36.w, r15.x
            ge r15.w, r15.x, l(0.000000)
            max r15.x, r4.w, |r15.x|
            movc r15.x, r15.w, r15.x, -r15.x
            max r13.w, -r13.w, l(0.00000010)
            div r13.w, r15.x, r13.w
            min r13.z, |r13.w|, r13.z
            mov r36.z, r37.z
            dp3 r13.w, r7.xyzx, r36.xyzx
            dp3 r15.x, r14.xyzx, r36.xyzx
            add r15.x, -r37.w, r15.x
            ge r15.w, r15.x, l(0.000000)
            max r15.x, r4.w, |r15.x|
            movc r15.x, r15.w, r15.x, -r15.x
            max r13.w, -r13.w, l(0.00000010)
            div r13.w, r15.x, r13.w
            min r13.z, |r13.w|, r13.z
            mov r37.z, r38.z
            dp3 r13.w, r7.xyzx, r37.xyzx
            dp3 r15.x, r14.xyzx, r37.xyzx
            add r15.x, -r38.w, r15.x
            ge r15.w, r15.x, l(0.000000)
            max r15.x, r4.w, |r15.x|
            movc r15.x, r15.w, r15.x, -r15.x
            max r13.w, -r13.w, l(0.00000010)
            div r13.w, r15.x, r13.w
            min r13.z, |r13.w|, r13.z
            mov r38.z, r39.x
            dp3 r13.w, r7.xyzx, r38.xyzx
            dp3 r15.x, r14.xyzx, r38.xyzx
            add r15.x, -r39.y, r15.x
            ge r15.w, r15.x, l(0.000000)
            max r15.x, r4.w, |r15.x|
            movc r15.x, r15.w, r15.x, -r15.x
            max r13.w, -r13.w, l(0.00000010)
            div r13.w, r15.x, r13.w
            min r13.z, |r13.w|, r13.z
            mov r40.zw, r39.zzzw
            dp3 r13.w, r7.zxyz, r40.xzwx
            dp3 r15.x, r14.zxyz, r40.xzwx
            add r15.x, -r40.y, r15.x
            ge r15.w, r15.x, l(0.000000)
            max r15.x, r4.w, |r15.x|
            movc r15.x, r15.w, r15.x, -r15.x
            max r13.w, -r13.w, l(0.00000010)
            div r13.w, r15.x, r13.w
            min r13.z, |r13.w|, r13.z
            mov r28.x, r32.w
            mov r28.yz, r33.zzwz
            add r17.yzw, r14.xxyz, r28.xxyz
            mad r17.yzw, r7.xxyz, r13.zzzz, r17.yyzw
            dp3 r13.w, r17.yzwy, r17.yzwy
            sqrt r13.w, r13.w
            div r13.z, r13.z, r13.w
            add r13.z, r13.z, r13.z
            sqrt r13.z, r13.z
            mad r13.z, r0.w, l(5.000000), r13.z
            add r13.z, r13.z, l(-0.844800)
            mov r27.y, r30.z
            mov r27.z, r31.x
            dp3 r35.x, r17.yzwy, r27.xyzx
            mov r28.xy, r30.xwxx
            mov r28.z, r31.w
            dp3 r35.y, r17.yzwy, r28.xyzx
            mov r31.x, r30.y
            dp3 r35.z, r17.yzwy, r31.xyzx
            ubfe r13.w, l(9), l(16), r28.w
            utof r35.w, r13.w
            sample_l_indexable(texturecubearray)(float,float,float,float) r17.yzw, r35.xyzw, t8.wxyz, s2, r13.z
            and r29.xzw, r17.yyzw, l(0x7fffffff, 0, 0x7fffffff, 0x7fffffff)
            ieq r29.xzw, r29.xxzw, l(0x7f800000, 0, 0x7f800000, 0x7f800000)
            or r13.z, r29.z, r29.x
            or r13.z, r29.w, r13.z
            movc r17.yzw, r13.zzzz, l(0,1.000000,1.000000,0), r17.yyzw
            dp3 r30.x, r14.xyzx, r27.xyzx
            dp3 r30.y, r14.xyzx, r28.xyzx
            dp3 r30.z, r14.xyzx, r31.xyzx
            mad_sat r14.xyz, r30.xyzx, r32.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
            mov r33.z, r34.x
            mad r14.xyz, r14.xyzx, r33.xyzx, r34.yzwy
            dp3 r35.x, r11.xyzx, r27.xyzx
            dp3 r35.y, r11.xyzx, r28.xyzx
            dp3 r35.z, r11.xyzx, r31.xyzx
            lt r27.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r35.xyzx
            movc r16.z, r27.x, l(0), l(0.500000)
            add r28.xyz, r14.xyzx, r16.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r28.xyz, r28.xyzx, t17.xyzw, s4, l(0.000000)
            mul r29.xzw, r35.xxyz, r35.xxyz
            mul r29.xzw, r12.wwww, r29.xxzw
            movc r18.z, r27.y, l(0), l(0.500000)
            add r27.xyw, r14.xyxz, r18.xyxz
            sample_l_indexable(texture3d)(float,float,float,float) r27.xyw, r27.xywx, t18.xywz, s4, l(0.000000)
            mul r27.xyw, r29.zzzz, r27.xyxw
            mad r27.xyw, r28.xyxz, r29.xxxx, r27.xyxw
            movc r22.z, r27.z, l(0), l(0.500000)
            add r14.xyz, r14.xyzx, r22.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r14.xyz, r14.xyzx, t19.xyzw, s4, l(0.000000)
            mad r14.xyz, r14.xyzx, r29.wwww, r27.xywx
            sample_l_indexable(texturecubearray)(float,float,float,float) r27.xyz, r35.xyzw, t8.xyzw, s2, l(6.000000)
            and r28.xyz, r27.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
            ieq r28.xyz, r28.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
            or r13.z, r28.y, r28.x
            or r13.z, r28.z, r13.z
            movc r27.xyz, r13.zzzz, l(1.000000,1.000000,0,0), r27.xyzx
            mul r28.xyz, r14.xyzx, r27.xyzx
            dp3 r13.z, r28.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r25.xyz, r14.xyzx, r27.xyzx, r25.xyzx
            mul r13.w, r1.w, r13.z
            mul r14.xyz, r12.wwww, r17.yzwy
            dp3 r12.w, r14.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r12.w, r1.w, r13.z, r12.w
            div r12.w, r13.w, r12.w
            mov r27.x, r25.w
            mov r27.yz, r26.xxyx
            mad r26.xyw, r14.yzyx, r12.wwww, r27.yzyx
            mov r25.w, r26.w
          endif 
        endif 
      endif 
    endloop 
    mov r23.xyzw, r25.xyzw
    mov r24.yzw, r26.xxyz
    iadd r9.y, r9.y, l(32)
  endloop 
  lt r8.w, r24.w, l(1.000000)
  if_nz r8.w
    mov r9.xy, l(0,0,0,0)
    mov r13.w, l(0)
    mov r14.yz, l(0,0,1.000000,0)
    mov r15.xy, l(0,0,0,0)
    mov r16.x, l(1.000000)
    mov r17.xy, l(0,0,0,0)
    mov r18.xy, l(0,0,0,0)
    mov r22.x, r23.w
    mov r22.yzw, r24.yyzw
    mov r25.xyz, r23.xyzx
    mov r8.w, r24.w
    mov r9.w, l(0)
    loop 
      uge r10.x, r9.w, r5.w
      breakc_nz r10.x
      ushr r9.z, r9.w, l(5)
      iadd r13.xyz, r9.xyzx, r19.xyzx
      ld_indexable(texture2darray)(uint,uint,uint,uint) r9.z, r13.xyzw, t7.yzxw
      ieq r10.x, r6.z, r9.w
      ubfe r12.w, r6.w, l(0), r9.z
      movc r9.z, r10.x, r12.w, r9.z
      iadd r10.x, r9.w, cb2[0].x
      mov r26.xyzw, r22.xyzw
      mov r13.xyz, r25.xyzx
      mov r12.w, r8.w
      mov r14.w, r9.z
      loop 
        breakc_z r14.w
        firstbit_lo r15.w, r14.w
        ishl r16.z, l(1), r15.w
        and r16.w, r14.w, r16.z
        if_nz r16.w
          xor r14.w, r14.w, r16.z
          iadd r16.z, r10.x, r15.w
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r27.xyzw, r16.z, l(0), t11.xyzw
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r28.xy, r16.z, l(16), t11.xyxx
          add r27.xyz, -r12.xyzx, r27.xyzx
          mov r28.z, r27.w
          lt r27.xyz, |r27.xyzx|, r28.zxyz
          and r16.z, r27.y, r27.x
          and r16.z, r27.z, r16.z
          if_nz r16.z
            iadd r15.w, r9.w, r15.w
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r15.w, l(0), t15.wxyz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r16.zw, r15.w, l(96), t15.xxxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r15.w, l(116), t15.zwxy
            add r29.xyz, r12.xyzx, -r27.yzwy
            and r17.w, r28.w, l(0x0000ffff)
            ubfe r18.w, l(6), l(25), r28.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r17.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r17.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r17.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r17.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r17.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r17.w, l(80), t16.xyzw
            dp3 r19.w, r30.xyzx, r29.xyzx
            add_sat r19.w, r30.w, r19.w
            dp3 r21.w, r31.xyzx, r29.xyzx
            add_sat r21.w, r31.w, r21.w
            mul r19.w, r19.w, r21.w
            dp3 r21.w, r32.xyzx, r29.xyzx
            add_sat r21.w, r32.w, r21.w
            mul r19.w, r19.w, r21.w
            dp3 r21.w, r33.xyzx, r29.xyzx
            add_sat r21.w, r33.w, r21.w
            mul r19.w, r19.w, r21.w
            dp3 r21.w, r34.xyzx, r29.xyzx
            add_sat r21.w, r34.w, r21.w
            mul r19.w, r19.w, r21.w
            dp3 r21.w, r35.xyzx, r29.xyzx
            add_sat r21.w, r35.w, r21.w
            mul r14.x, r19.w, r21.w
            and r19.w, r16.z, l(1)
            movc r30.xy, r19.wwww, r14.xyxx, r14.zxzz
            mov r14.x, r16.z
            mov r31.xy, r30.xyxx
            mov r19.w, l(1)
            loop 
              ige r21.w, r19.w, r18.w
              breakc_nz r21.w
              iadd r21.w, r17.w, r19.w
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r21.w, l(0), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r21.w, l(16), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r21.w, l(32), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r21.w, l(48), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r21.w, l(64), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r21.w, l(80), t16.xyzw
              dp3 r21.w, r32.xyzx, r29.xyzx
              add_sat r21.w, r32.w, r21.w
              mul r21.w, r21.w, r31.x
              dp3 r25.w, r33.xyzx, r29.xyzx
              add_sat r25.w, r33.w, r25.w
              mul r21.w, r21.w, r25.w
              dp3 r25.w, r34.xyzx, r29.xyzx
              add_sat r25.w, r34.w, r25.w
              mul r21.w, r21.w, r25.w
              dp3 r25.w, r35.xyzx, r29.xyzx
              add_sat r25.w, r35.w, r25.w
              mul r21.w, r21.w, r25.w
              dp3 r25.w, r36.xyzx, r29.xyzx
              add_sat r25.w, r36.w, r25.w
              mul r21.w, r21.w, r25.w
              dp3 r25.w, r37.xyzx, r29.xyzx
              add_sat r25.w, r37.w, r25.w
              mul r31.x, r21.w, r25.w
              ushr r27.w, r14.x, l(2)
              ubfe r29.w, l(1), l(2), r14.x
              and r30.z, r27.w, l(2)
              max r30.w, r31.x, r31.y
              mad r21.w, -r21.w, r25.w, l(1.000000)
              mul r21.w, r21.w, r31.y
              movc r16.y, r30.z, r21.w, r30.w
              movc r31.xy, r29.wwww, r31.xyxx, r16.xyxx
              iadd r19.w, r19.w, l(1)
              mov r14.x, r27.w
            endloop 
            add_sat r14.x, -r12.w, r31.y
            mul r16.y, r16.w, r14.x
            lt r16.z, l(0.000000), r16.y
            if_nz r16.z
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r15.w, l(16), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r15.w, l(32), t15.yxwz
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r15.w, l(48), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r15.w, l(64), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r15.w, l(80), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r15.w, l(132), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r15.w, l(148), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r15.w, l(164), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xyzw, r15.w, l(180), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r40.xyzw, r15.w, l(196), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r41.xy, r15.w, l(212), t15.xyxx
              mad r26.w, r14.x, r16.w, r26.w
              mul r14.x, r28.z, r16.y
              mov r28.z, r36.z
              dp3 r15.w, r7.xyzx, r28.xyzx
              dp3 r16.y, r29.xyzx, r28.xyzx
              add r16.y, -r36.w, r16.y
              ge r16.z, r16.y, l(0.000000)
              max r16.y, r4.w, |r16.y|
              movc r16.y, r16.z, r16.y, -r16.y
              max r15.w, -r15.w, l(0.00000010)
              div r15.w, r16.y, r15.w
              min r15.w, |r15.w|, l(131072.000000)
              mov r36.z, r37.z
              dp3 r16.y, r7.xyzx, r36.xyzx
              dp3 r16.z, r29.xyzx, r36.xyzx
              add r16.z, -r37.w, r16.z
              ge r16.w, r16.z, l(0.000000)
              max r16.z, r4.w, |r16.z|
              movc r16.z, r16.w, r16.z, -r16.z
              max r16.y, -r16.y, l(0.00000010)
              div r16.y, r16.z, r16.y
              min r15.w, r15.w, |r16.y|
              mov r37.z, r38.z
              dp3 r16.y, r7.xyzx, r37.xyzx
              dp3 r16.z, r29.xyzx, r37.xyzx
              add r16.z, -r38.w, r16.z
              ge r16.w, r16.z, l(0.000000)
              max r16.z, r4.w, |r16.z|
              movc r16.z, r16.w, r16.z, -r16.z
              max r16.y, -r16.y, l(0.00000010)
              div r16.y, r16.z, r16.y
              min r15.w, r15.w, |r16.y|
              mov r38.z, r39.z
              dp3 r16.y, r7.xyzx, r38.xyzx
              dp3 r16.z, r29.xyzx, r38.xyzx
              add r16.z, -r39.w, r16.z
              ge r16.w, r16.z, l(0.000000)
              max r16.z, r4.w, |r16.z|
              movc r16.z, r16.w, r16.z, -r16.z
              max r16.y, -r16.y, l(0.00000010)
              div r16.y, r16.z, r16.y
              min r15.w, r15.w, |r16.y|
              mov r39.z, r40.x
              dp3 r16.y, r7.xyzx, r39.xyzx
              dp3 r16.z, r29.xyzx, r39.xyzx
              add r16.z, -r40.y, r16.z
              ge r16.w, r16.z, l(0.000000)
              max r16.z, r4.w, |r16.z|
              movc r16.z, r16.w, r16.z, -r16.z
              max r16.y, -r16.y, l(0.00000010)
              div r16.y, r16.z, r16.y
              min r15.w, r15.w, |r16.y|
              mov r41.zw, r40.zzzw
              dp3 r16.y, r7.zxyz, r41.xzwx
              dp3 r16.z, r29.zxyz, r41.xzwx
              add r16.z, -r41.y, r16.z
              ge r16.w, r16.z, l(0.000000)
              max r16.z, r4.w, |r16.z|
              movc r16.z, r16.w, r16.z, -r16.z
              max r16.y, -r16.y, l(0.00000010)
              div r16.y, r16.z, r16.y
              min r15.w, r15.w, |r16.y|
              mov r28.x, r33.w
              mov r28.yz, r34.zzwz
              add r16.yzw, r29.xxyz, r28.xxyz
              mad r16.yzw, r7.xxyz, r15.wwww, r16.yyzw
              dp3 r17.w, r16.yzwy, r16.yzwy
              sqrt r17.w, r17.w
              div r15.w, r15.w, r17.w
              add r15.w, r15.w, r15.w
              sqrt r15.w, r15.w
              mad r15.w, r0.w, l(5.000000), r15.w
              add r15.w, r15.w, l(-0.844800)
              mov r27.y, r30.z
              mov r27.z, r32.x
              dp3 r36.x, r16.yzwy, r27.xyzx
              mov r28.xy, r30.xwxx
              mov r28.z, r32.w
              dp3 r36.y, r16.yzwy, r28.xyzx
              mov r32.x, r30.y
              dp3 r36.z, r16.yzwy, r32.xyzx
              ubfe r16.y, l(9), l(16), r28.w
              utof r36.w, r16.y
              sample_l_indexable(texturecubearray)(float,float,float,float) r16.yzw, r36.xyzw, t8.wxyz, s2, r15.w
              and r30.xyz, r16.yzwy, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
              ieq r30.xyz, r30.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
              or r15.w, r30.y, r30.x
              or r15.w, r30.z, r15.w
              movc r16.yzw, r15.wwww, l(0,1.000000,1.000000,0), r16.yyzw
              dp3 r30.x, r29.xyzx, r27.xyzx
              dp3 r30.y, r29.xyzx, r28.xyzx
              dp3 r30.z, r29.xyzx, r32.xyzx
              mad_sat r29.xyz, r30.xyzx, r33.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
              mov r34.z, r35.x
              mad r29.xyz, r29.xyzx, r34.xyzx, r35.yzwy
              dp3 r36.x, r11.xyzx, r27.xyzx
              dp3 r36.y, r11.xyzx, r28.xyzx
              dp3 r36.z, r11.xyzx, r32.xyzx
              lt r27.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r36.xyzx
              movc r15.z, r27.x, l(0), l(0.500000)
              add r28.xyz, r15.xyzx, r29.xyzx
              sample_l_indexable(texture3d)(float,float,float,float) r28.xyz, r28.xyzx, t17.xyzw, s4, l(0.000000)
              mul r30.xyz, r36.xyzx, r36.xyzx
              mul r30.xyz, r14.xxxx, r30.xyzx
              movc r17.z, r27.y, l(0), l(0.500000)
              add r27.xyw, r17.xyxz, r29.xyxz
              sample_l_indexable(texture3d)(float,float,float,float) r27.xyw, r27.xywx, t18.xywz, s4, l(0.000000)
              mul r27.xyw, r30.yyyy, r27.xyxw
              mad r27.xyw, r28.xyxz, r30.xxxx, r27.xyxw
              movc r18.z, r27.z, l(0), l(0.500000)
              add r28.xyz, r18.xyzx, r29.xyzx
              sample_l_indexable(texture3d)(float,float,float,float) r28.xyz, r28.xyzx, t19.xyzw, s4, l(0.000000)
              mad r27.xyz, r28.xyzx, r30.zzzz, r27.xywx
              sample_l_indexable(texturecubearray)(float,float,float,float) r28.xyz, r36.xyzw, t8.xyzw, s2, l(6.000000)
              and r29.xyz, r28.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
              ieq r29.xyz, r29.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
              or r15.z, r29.y, r29.x
              or r15.z, r29.z, r15.z
              movc r28.xyz, r15.zzzz, l(1.000000,1.000000,0,0), r28.xyzx
              mul r29.xyz, r27.xyzx, r28.xyzx
              dp3 r15.z, r29.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
              mad r13.xyz, r27.xyzx, r28.xyzx, r13.xyzx
              mul r15.w, r1.w, r15.z
              mul r16.yzw, r14.xxxx, r16.yyzw
              dp3 r14.x, r16.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
              mad r14.x, r1.w, r15.z, r14.x
              div r14.x, r15.w, r14.x
              mad r26.xyz, r16.yzwy, r14.xxxx, r26.xyzx
            endif 
          endif 
        endif 
      endloop 
      mov r22.xyzw, r26.xyzw
      mov r25.xyz, r13.xyzx
      iadd r9.w, r9.w, l(32)
    endloop 
    mov r24.xyzw, r22.zxyw
    mov r23.xyz, r25.xyzx
    mov r24.xyzw, r24.yzxw
  else 
    mov r24.x, r23.w
  endif 
  max r0.w, r24.w, l(1.000000)
  rcp r0.w, r0.w
  mov_sat r24.w, r24.w
  mul r20.xyz, r0.wwww, r23.xyzx
  mul r21.xyz, r0.wwww, r24.xyzx
  lt r1.w, r24.w, l(0.990000)
  if_nz r1.w
    add r1.w, -r24.w, l(1.000000)
    mul r4.w, r1.w, cb2[19].x
    add r9.xyz, r12.xyzx, -cb2[35].xyzx
    mul r12.x, r9.x, cb2[35].w
    mul r12.yz, r9.yyzy, cb2[36].xxyx
    add_sat r9.xyz, r12.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    mul r12.xy, r9.xyxx, cb2[36].zwzz
    mul r12.z, r9.z, cb2[37].x
    add r9.xyz, r12.xyzx, cb2[37].yzwy
    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
    movc r12.xyz, r12.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
    mov r12.w, l(0)
    add r13.xyz, r9.xyzx, r12.wwxw
    sample_l_indexable(texture3d)(float,float,float,float) r13.xyz, r13.xyzx, t17.xyzw, s4, l(0.000000)
    mul r14.xyz, r11.xyzx, r11.xyzx
    mul r14.xyz, r4.wwww, r14.xyzx
    add r15.xyz, r9.xyzx, r12.wwyw
    sample_l_indexable(texture3d)(float,float,float,float) r15.xyz, r15.xyzx, t18.xyzw, s4, l(0.000000)
    mul r15.xyz, r14.yyyy, r15.xyzx
    mad r13.xyz, r13.xyzx, r14.xxxx, r15.xyzx
    add r9.xyz, r9.xyzx, r12.wwzw
    sample_l_indexable(texture3d)(float,float,float,float) r9.xyz, r9.xyzx, t19.xyzw, s4, l(0.000000)
    mad r9.xyz, r9.xyzx, r14.zzzz, r13.xyzx
    mov r11.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r11.xyz, r11.xyzw, t8.xyzw, s2, l(6.000000)
    mul r9.xyz, r9.xyzx, r11.xyzx
    dp3 r4.w, r9.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
    mad r20.xyz, r23.xyzx, r0.wwww, r9.xyzx
    mov r7.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r7.xyz, r7.xyzw, t8.xyzw, s2, r3.w
    mad r0.w, cb2[19].x, r1.w, -r4.w
    mad r0.w, r6.y, r0.w, r4.w
    mad r21.xyz, r7.xyzx, r0.wwww, r21.xyzx
  endif 
else 
  mov r21.x, r20.w
endif 
mad r5.yz, r5.yyzy, l(0.000000, 1.59090912, 1.59090912, 0.000000), l(0.000000, -0.79545456, -0.79545456, 0.000000)
mad r7.xy, r5.yzyy, l(1.000000, 2.000000, 0.000000, 0.000000), l(0.500000, 1.000000, 0.000000, 0.000000)
lt r0.w, l(1.000000), r7.y
add r1.w, -r7.y, l(2.000000)
movc r7.z, r0.w, r1.w, r7.y
mad r5.yz, r7.xxzx, l(0.000000, 0.00781250, 1.000000, 0.000000), l(0.000000, 0.99218750, 0.000000, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r0.w, r5.yzyy, t25.yzwx, s5, l(0.000000)
add r0.w, r0.w, l(-1.000000)
mad r0.w, r5.x, r0.w, l(1.000000)
mul r5.xyz, r0.wwww, r20.xyzx
dp3_sat r6.x, r1.xyzx, r10.yzwy
mad r1.xyz, r5.xyzx, r3.xyzx, r2.yzwy
mad r2.yz, r6.xxyx, l(0.000000, 0.984375, 0.984375, 0.000000), l(0.000000, 0.00781250, 0.00781250, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r2.yz, r2.yzyy, t5.zxyw, s2, l(0.000000)
mul r3.xyz, r2.xxxx, r21.xyzx
mad r0.xyz, r3.xyzx, r2.yyyy, r0.xyzx
mad r2.xyz, r3.xyzx, r2.zzzz, r4.xyzx
add r3.xyz, -r8.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r0.xyz, r0.xyzx, r3.xyzx
mad r0.xyz, r2.xyzx, r8.xyzx, r0.xyzx
lt r0.w, l(0.000000), cb2[9].z
if_nz r0.w
  dp3 r1.w, v7.xyzx, v7.xyzx
  sqrt r1.w, r1.w
  lt r2.x, l(0.000000), cb2[13].w
  if_nz r2.x
    mad r2.xy, r1.wwww, cb2[15].xyxx, cb2[14].zwzz
    mul r2.xy, r2.xyxx, cb2[16].xyxx
    lt r2.z, l(0.010000), |v7.z|
    mul r3.xy, v7.zzzz, cb2[15].zwzz
    mul r3.zw, r3.xxxy, l(0.000000, 0.000000, -1.442695, -1.442695)
    exp r3.zw, r3.zzzw
    add r3.zw, -r3.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    div r3.xy, r3.zwzz, r3.xyxx
    mul r3.xy, r2.xyxx, r3.xyxx
    movc r2.xy, r2.zzzz, r3.xyxx, r2.xyxx
    mul r2.xzw, r2.xxxx, cb2[12].xxyz
    exp r2.xzw, r2.xxzw
    mul r3.xyz, r2.yyyy, cb2[12].xyzx
    exp r3.xyz, r3.xyzx
    add r3.xyz, -r2.xzwx, r3.xyzx
    mad r2.xyz, cb2[13].wwww, r3.xyzx, r2.xzwx
  else 
    mad r1.w, r1.w, cb2[15].x, cb2[14].z
    mul r1.w, r1.w, cb2[16].x
    lt r2.w, l(0.010000), |v7.z|
    mul r3.x, v7.z, cb2[15].z
    mul r3.y, r3.x, l(-1.442695)
    exp r3.y, r3.y
    add r3.y, -r3.y, l(1.000000)
    div r3.x, r3.y, r3.x
    mul r3.x, r1.w, r3.x
    movc r1.w, r2.w, r3.x, r1.w
    mul r3.xyz, r1.wwww, cb2[12].xyzx
    exp r2.xyz, r3.xyzx
  endif 
  mad r2.xyz, r2.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r2.xyz, r2.xyzx, -cb2[9].zzzz
  mul r2.xyz, r1.xyzx, r2.xyzx
else 
  mul r1.w, v7.z, cb2[6].x
  mad r2.w, cb2[6].x, v7.z, cb2[5].x
  lt r3.x, |r1.w|, l(0.000100)
  min r3.y, r2.w, l(64.000000)
  mul r3.y, r3.y, l(1.442695)
  exp r3.y, r3.y
  mov_sat r3.z, cb2[6].z
  lt r3.w, r2.w, l(0.000000)
  add r2.w, r2.w, l(1.000000)
  movc r2.w, r3.w, r3.y, r2.w
  add r2.w, r2.w, -cb2[6].z
  movc r1.w, r3.x, l(1.000000), r1.w
  div r1.w, r2.w, r1.w
  movc r1.w, r3.x, r3.z, r1.w
  mul r1.w, r1.w, cb2[5].z
  dp3 r2.w, v7.xyzx, v7.xyzx
  sqrt r3.x, r2.w
  mad r1.w, r1.w, r3.x, cb2[5].w
  exp r1.w, r1.w
  min r1.w, r1.w, l(1.000000)
  add r1.w, -r1.w, l(1.000000)
  rsq r2.w, r2.w
  mul r3.xyz, r2.wwww, v7.xyzx
  dp3 r2.w, cb2[7].yzwy, r3.xyzx
  mad_sat r2.w, cb2[8].y, r2.w, cb2[8].x
  add r3.x, cb2[3].w, -cb2[4].w
  mad r2.w, r2.w, r3.x, cb2[4].w
  mul r1.w, r1.w, r2.w
  mad r2.xyz, r1.wwww, -r1.xyzx, r1.xyzx
endif 
mul r1.xyz, r2.xyzx, cb1[85].yyyy
ge r2.xyz, r1.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r1.xyz, r1.xyzx, r2.xyzx
min o1.xyz, r1.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
if_nz r0.w
  dp3 r0.w, v7.xyzx, v7.xyzx
  rsq r1.x, r0.w
  mul r1.xyz, r1.xxxx, v7.xyzx
  sqrt r0.w, r0.w
  lt r1.w, l(0.000000), cb2[13].w
  if_nz r1.w
    mad r2.xy, r0.wwww, cb2[15].xyxx, cb2[14].zwzz
    mul r2.xy, r2.xyxx, cb2[16].xyxx
    lt r1.w, l(0.010000), |v7.z|
    mul r2.zw, v7.zzzz, cb2[15].zzzw
    mul r3.xy, r2.zwzz, l(-1.442695, -1.442695, 0.000000, 0.000000)
    exp r3.xy, r3.xyxx
    add r3.xy, -r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    div r2.zw, r3.xxxy, r2.zzzw
    mul r2.zw, r2.zzzw, r2.xxxy
    movc r2.xy, r1.wwww, r2.zwzz, r2.xyxx
    mul r2.xzw, r2.xxxx, cb2[12].xxyz
    exp r2.xzw, r2.xxzw
    mul r3.xyz, r2.yyyy, cb2[12].xyzx
    exp r3.xyz, r3.xyzx
    add r3.xyz, -r2.xzwx, r3.xyzx
    mad r2.xyz, cb2[13].wwww, r3.xyzx, r2.xzwx
  else 
    mad r1.w, r0.w, cb2[15].x, cb2[14].z
    mul r1.w, r1.w, cb2[16].x
    lt r2.w, l(0.010000), |v7.z|
    mul r3.x, v7.z, cb2[15].z
    mul r3.y, r3.x, l(-1.442695)
    exp r3.y, r3.y
    add r3.y, -r3.y, l(1.000000)
    div r3.x, r3.y, r3.x
    mul r3.x, r1.w, r3.x
    movc r1.w, r2.w, r3.x, r1.w
    mul r3.xyz, r1.wwww, cb2[12].xyzx
    exp r2.xyz, r3.xyzx
  endif 
  mad r2.xyz, r2.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r2.xyz, r2.xyzx, -cb2[9].zzzz
  dp3 r1.x, cb2[7].yzwy, -r1.xyzx
  mad r1.y, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r1.z, cb2[8].w, -r1.x, l(1.000000)
  mul r1.z, r1.z, r1.z
  mul r1.z, r1.z, l(12.566371)
  div r1.y, r1.y, r1.z
  add r0.w, r0.w, -cb2[10].w
  mul_sat r0.w, r0.w, cb2[11].w
  mul r0.w, r0.w, r1.y
  mov_sat r1.x, r1.x
  mad r1.x, r1.x, r1.x, l(1.000000)
  mad r1.x, r1.x, l(0.05968310), l(-1.000000)
  mad r1.x, cb2[8].z, r1.x, l(1.000000)
  mul r1.yzw, r0.wwww, cb2[11].xxyz
  mad r1.xyz, r1.xxxx, cb2[10].xyzx, r1.yzwy
  mul r1.xyz, r1.xyzx, cb2[9].wwww
  add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r1.xyz, r1.xyzx, r3.xyzx
  mad r1.xyz, r0.xyzx, r2.xyzx, r1.xyzx
else 
  mul r0.w, v7.z, cb2[6].x
  mad r1.w, cb2[6].x, v7.z, cb2[5].x
  lt r2.x, |r0.w|, l(0.000100)
  min r2.y, r1.w, l(64.000000)
  mul r2.y, r2.y, l(1.442695)
  exp r2.y, r2.y
  mov_sat r2.z, cb2[6].z
  lt r2.w, r1.w, l(0.000000)
  add r1.w, r1.w, l(1.000000)
  movc r1.w, r2.w, r2.y, r1.w
  add r1.w, r1.w, -cb2[6].z
  movc r0.w, r2.x, l(1.000000), r0.w
  div r0.w, r1.w, r0.w
  movc r0.w, r2.x, r2.z, r0.w
  mul r0.w, r0.w, cb2[5].z
  dp3 r1.w, v7.xyzx, v7.xyzx
  sqrt r2.x, r1.w
  mad r0.w, r0.w, r2.x, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  rsq r1.w, r1.w
  mul r2.xyz, r1.wwww, v7.xyzx
  dp3 r1.w, cb2[7].yzwy, r2.xyzx
  mad_sat r1.w, cb2[8].y, r1.w, cb2[8].x
  add r2.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r2.xyzw, r1.wwww, r2.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r2.w
  add r2.xyz, -r0.xyzx, r2.xyzx
  mad r1.xyz, r0.wwww, r2.xyzx, r0.xyzx
endif 
mul r0.xyz, r1.xyzx, cb1[85].yyyy
ge r1.xyz, r0.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.xyz, r0.xyzx, r1.xyzx
min o0.xyz, r0.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
ret 
// Approximately 3537 instruction slots used
