//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:32:34 2021
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float3 colorTint;                  // Offset:  160 Size:    12 [unused]
//   float baseNormalHeight;            // Offset:  172 Size:     4
//   float2 glossRange;                 // Offset:  176 Size:     8 [unused]
//   bool useUVOffsets;                 // Offset:  184 Size:     4 [unused]
//   float2 sparkleTile;                // Offset:  192 Size:     8
//   float3 specColorTint;              // Offset:  208 Size:    12
//   float2 normalTile;                 // Offset:  224 Size:     8
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16 [unused]
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48 [unused]
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4 [unused]
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// normalSampler                     sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// sparkleDataSampler                sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// normalMap                         texture  float4          2d             t0      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// maskMap                           texture  float4          2d            t21      1 
// sparkleDataMap                    texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyz 
// COLOR                    1   x           1     NONE   float       
// TEXCOORD                 0    yz         1     NONE   float    yz 
// UVOFFSETS                0   xyz         2     NONE   float       
// TEXCOORD                 1   xyz         3     NONE   float   xyz 
// TEXCOORD                 2   xyz         4     NONE   float   xyz 
// TEXCOORD                 3   xyz         5     NONE   float   xyz 
// OFFPOSITION              0   xyz         6     NONE   float   xyz 
// TEXCOORD                 9   xy          7     NONE   float   xy  
// SV_IsFrontFace           0   x           8    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[15], immediateIndexed
dcl_constantbuffer CB1[86], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2darray (float,float,float,float) t31
dcl_input_ps_siv linear noperspective v0.xyz, position
dcl_input_ps linear v1.yz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xy
dcl_input_ps_sgv constant v8.x, is_front_face
dcl_output o0.xyzw
dcl_temps 34
sample_indexable(texture2d)(float,float,float,float) r0.x, v7.xyxx, t21.xyzw, s3
ge r0.y, l(0.000000), r0.x
mul r0.zw, v1.yyyz, cb0[14].xxxy
sample_indexable(texture2d)(float,float,float,float) r1.xyz, r0.zwzz, t0.xyzw, s1
mul r0.zw, v1.yyyz, cb0[12].xxxy
sample_indexable(texture2d)(float,float,float,float) r0.zw, r0.zwzz, t22.zwxy, s3
if_nz r0.y
  lt r0.y, l(0.000000), cb2[9].z
  if_nz r0.y
    dp3 r0.y, v6.xyzx, v6.xyzx
    rsq r1.w, r0.y
    mul r2.xyz, r1.wwww, v6.xyzx
    sqrt r0.y, r0.y
    lt r1.w, l(0.000000), cb2[13].w
    if_nz r1.w
      mad r3.xy, r0.yyyy, cb2[15].xyxx, cb2[14].zwzz
      mul r3.xy, r3.xyxx, cb2[16].xyxx
      lt r1.w, l(0.010000), |v6.z|
      mul r3.zw, v6.zzzz, cb2[15].zzzw
      mul r4.xy, r3.zwzz, l(-1.442695, -1.442695, 0.000000, 0.000000)
      exp r4.xy, r4.xyxx
      add r4.xy, -r4.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
      div r3.zw, r4.xxxy, r3.zzzw
      mul r3.zw, r3.zzzw, r3.xxxy
      movc r3.xy, r1.wwww, r3.zwzz, r3.xyxx
      mul r3.xzw, r3.xxxx, cb2[12].xxyz
      exp r3.xzw, r3.xxzw
      mul r4.xyz, r3.yyyy, cb2[12].xyzx
      exp r4.xyz, r4.xyzx
      add r4.xyz, -r3.xzwx, r4.xyzx
      mad r3.xyz, cb2[13].wwww, r4.xyzx, r3.xzwx
    else 
      mad r1.w, r0.y, cb2[15].x, cb2[14].z
      mul r1.w, r1.w, cb2[16].x
      lt r2.w, l(0.010000), |v6.z|
      mul r3.w, v6.z, cb2[15].z
      mul r4.x, r3.w, l(-1.442695)
      exp r4.x, r4.x
      add r4.x, -r4.x, l(1.000000)
      div r3.w, r4.x, r3.w
      mul r3.w, r1.w, r3.w
      movc r1.w, r2.w, r3.w, r1.w
      mul r4.xyz, r1.wwww, cb2[12].xyzx
      exp r3.xyz, r4.xyzx
    endif 
    mad r3.xyz, r3.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
    add_sat r3.xyz, r3.xyzx, -cb2[9].zzzz
    dp3 r1.w, cb2[7].yzwy, -r2.xyzx
    mad r2.x, -cb2[8].w, cb2[8].w, l(1.000000)
    mad r2.y, cb2[8].w, -r1.w, l(1.000000)
    mul r2.y, r2.y, r2.y
    mul r2.y, r2.y, l(12.566371)
    div r2.x, r2.x, r2.y
    add r0.y, r0.y, -cb2[10].w
    mul_sat r0.y, r0.y, cb2[11].w
    mul r0.y, r0.y, r2.x
    mov_sat r1.w, r1.w
    mad r1.w, r1.w, r1.w, l(1.000000)
    mad r1.w, r1.w, l(0.05968310), l(-1.000000)
    mad r1.w, cb2[8].z, r1.w, l(1.000000)
    mul r2.xyz, r0.yyyy, cb2[11].xyzx
    mad r2.xyz, r1.wwww, cb2[10].xyzx, r2.xyzx
    mul r2.xyz, r2.xyzx, cb2[9].wwww
    add r3.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mul r2.xyz, r2.xyzx, r3.xyzx
  else 
    mul r0.y, v6.z, cb2[6].x
    mad r1.w, cb2[6].x, v6.z, cb2[5].x
    lt r2.w, |r0.y|, l(0.000100)
    min r3.x, r1.w, l(64.000000)
    mul r3.x, r3.x, l(1.442695)
    exp r3.x, r3.x
    mov_sat r3.y, cb2[6].z
    lt r3.z, r1.w, l(0.000000)
    add r1.w, r1.w, l(1.000000)
    movc r1.w, r3.z, r3.x, r1.w
    add r1.w, r1.w, -cb2[6].z
    movc r0.y, r2.w, l(1.000000), r0.y
    div r0.y, r1.w, r0.y
    movc r0.y, r2.w, r3.y, r0.y
    mul r0.y, r0.y, cb2[5].z
    dp3 r1.w, v6.xyzx, v6.xyzx
    sqrt r2.w, r1.w
    mad r0.y, r0.y, r2.w, cb2[5].w
    exp r0.y, r0.y
    min r0.y, r0.y, l(1.000000)
    add r0.y, -r0.y, l(1.000000)
    rsq r1.w, r1.w
    mul r3.xyz, r1.wwww, v6.xyzx
    dp3 r1.w, cb2[7].yzwy, r3.xyzx
    mad_sat r1.w, cb2[8].y, r1.w, cb2[8].x
    add r3.xyzw, cb2[3].xyzw, -cb2[4].xyzw
    mad r3.xyzw, r1.wwww, r3.xyzw, cb2[4].xyzw
    mul r0.y, r0.y, r3.w
    mul r2.xyz, r3.xyzx, r0.yyyy
  endif 
  mul r2.xyz, r2.xyzx, cb1[85].yyyy
  ge r3.xyz, r2.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
  and r2.xyz, r2.xyzx, r3.xyzx
  min o0.xyz, r2.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
  mov o0.w, l(1.000000)
  ret 
endif 
add r1.xyz, r1.xyzx, l(-0.500000, -0.500000, -0.000000, 0.000000)
mad r1.xyz, cb0[10].wwww, r1.xyzx, l(0.500000, 0.500000, 0.000000, 0.000000)
mad r1.xy, r1.xyxx, l(1.99218750, 1.99218750, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.y, r1.xyxx, r1.xyxx
add r0.y, -r0.y, l(1.000000)
max r0.y, r0.y, l(0.000000)
sqrt r0.y, r0.y
mul r1.z, r1.z, r1.z
mul r1.z, r1.z, l(0.33333334)
min r1.z, r1.z, l(1.000000)
movc r1.w, v8.x, l(1.000000), l(-1.000000)
dp3 r2.x, v3.xyzx, v3.xyzx
rsq r2.x, r2.x
mul r2.xyz, r2.xxxx, v3.xyzx
mul r2.xyz, r1.wwww, r2.xyzx
dp3 r2.w, v4.xyzx, v4.xyzx
rsq r2.w, r2.w
mul r3.xyz, r2.wwww, v4.xyzx
mul r3.xyz, r1.wwww, r3.xyzx
dp3 r2.w, v5.xyzx, v5.xyzx
rsq r2.w, r2.w
mul r4.xyz, r2.wwww, v5.xyzx
mul r4.xyz, r1.wwww, r4.xyzx
add r1.z, r1.z, l(0.00000763)
log r1.z, r1.z
mul r1.z, r1.z, l(-0.05882353)
max r5.y, r1.z, l(0.000000)
mul r1.yzw, r1.yyyy, r4.xxyz
mad r1.xyz, r3.xyzx, r1.xxxx, r1.yzwy
mad r1.xyz, r2.xyzx, r0.yyyy, r1.xyzx
dp3 r0.y, r1.xyzx, r1.xyzx
rsq r0.y, r0.y
mul r1.xyz, r0.yyyy, r1.xyzx
mul r0.x, r0.x, r0.z
ftou r0.yz, v0.xxyx
ge r1.w, v0.z, l(0.984375)
mul r2.x, v0.z, l(1.01587307)
mad r2.y, v0.z, l(64.000000), l(-63.000000)
movc r1.w, r1.w, r2.y, r2.x
max r1.w, r1.w, l(0.00000001)
rcp r1.w, r1.w
dp3 r2.x, -v6.xyzx, -v6.xyzx
rsq r2.x, r2.x
mul r2.xyz, r2.xxxx, -v6.xyzx
dp3 r2.w, r1.xyzx, r2.xyzx
mov_sat r5.x, r2.w
dp3 r3.x, -r2.xyzx, r1.xyzx
add r3.x, r3.x, r3.x
mad r3.xyz, r1.xyzx, -r3.xxxx, -r2.xyzx
mul r4.x, r5.y, l(17.000000)
exp r4.x, r4.x
add r4.x, r4.x, l(2.000000)
div r4.x, l(2.000000), r4.x
add r4.y, -r5.y, l(1.000000)
mad r4.w, r4.y, l(5.000000), l(-2.500000)
mul r4.zw, r4.yyyw, l(0.000000, 0.000000, 5.000000, 0.400000)
max r4.w, r4.w, l(0.000000)
mul r4.w, r4.w, l(100.000000)
mad r5.zw, -r4.yyyy, l(0.000000, 0.000000, 10.000000, 5.000000), l(0.000000, 0.000000, 6.857410, 7.085000)
exp r5.z, r5.z
mul r5.z, r5.z, r5.x
mul r6.x, r4.y, r4.z
mad r5.w, -r6.x, l(2.015905), r5.w
exp r5.w, r5.w
mul r5.w, r5.w, r5.x
mul r5.zw, r5.zzzw, l(0.000000, 0.000000, 9.136810, 9.708090)
max r5.z, r5.w, r5.z
max r5.z, r5.z, l(1.268160)
mul r1.w, r1.w, l(0.00781250)
min r1.w, r1.w, l(15.000000)
ftou r1.w, r1.w
ushr r6.xy, r0.yzyy, l(6, 6, 0, 0)
ishl r6.z, r1.w, l(4)
mov r7.xy, l(0,0,0,0)
mov r8.w, l(0)
mov r9.yz, l(0,0,1.000000,0)
mov r10.xy, l(0,0,0,0)
mov r11.xy, l(0,0,0,0)
mov r12.xy, l(0,0,0,0)
mov r13.x, l(1.000000)
mov r14.xyzw, l(0,0,0,0)
mov r1.w, l(0)
mov r5.w, l(0)
loop 
  uge r6.w, r5.w, cb2[0].y
  breakc_nz r6.w
  ushr r7.z, r5.w, l(5)
  iadd r8.xyz, r6.xyzx, r7.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r6.w, r8.xyzw, t7.yzwx
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r15.xyzw, r5.w, l(0), t15.wxyz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r16.xyzw, r5.w, l(16), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r17.xyzw, r5.w, l(32), t15.yxwz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r18.xyzw, r5.w, l(48), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r19.xyzw, r5.w, l(64), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r20.xyzw, r5.w, l(80), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r7.zw, r5.w, l(96), t15.xxxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r21.xyzw, r5.w, l(116), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r22.xyzw, r5.w, l(132), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r23.xyzw, r5.w, l(148), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r5.w, l(164), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r5.w, l(180), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r5.w, l(196), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xy, r5.w, l(212), t15.xyxx
  add r8.xyz, -r15.yzwy, v6.xyzx
  dp3 r9.w, r8.xyzx, r8.xyzx
  sqrt r9.w, r9.w
  ge r9.w, cb2[54].y, r9.w
  and r10.w, r21.y, l(0x0000ffff)
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r10.w, l(0), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r10.w, l(16), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r10.w, l(32), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r10.w, l(48), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r10.w, l(64), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r10.w, l(80), t16.xyzw
  dp3 r11.w, r28.xyzx, r8.xyzx
  add_sat r11.w, r28.w, r11.w
  dp3 r12.w, r29.xyzx, r8.xyzx
  add_sat r12.w, r29.w, r12.w
  mul r11.w, r11.w, r12.w
  dp3 r12.w, r30.xyzx, r8.xyzx
  add_sat r12.w, r30.w, r12.w
  mul r11.w, r11.w, r12.w
  dp3 r12.w, r31.xyzx, r8.xyzx
  add_sat r12.w, r31.w, r12.w
  mul r11.w, r11.w, r12.w
  dp3 r12.w, r32.xyzx, r8.xyzx
  add_sat r12.w, r32.w, r12.w
  mul r11.w, r11.w, r12.w
  dp3 r12.w, r33.xyzx, r8.xyzx
  add_sat r12.w, r33.w, r12.w
  mul r9.x, r11.w, r12.w
  and r11.w, r7.z, l(1)
  movc r13.zw, r11.wwww, r9.xxxy, r9.zzzx
  mov r28.xy, r21.zwzz
  mov r28.z, r22.z
  dp3 r9.x, r3.xyzx, r28.xyzx
  dp3 r11.w, r8.xyzx, r28.xyzx
  add r11.w, -r22.w, r11.w
  ge r12.w, r11.w, l(0.000000)
  max r11.w, r4.w, |r11.w|
  movc r11.w, r12.w, r11.w, -r11.w
  max r9.x, -r9.x, l(0.00000010)
  div r9.x, r11.w, r9.x
  min r9.x, |r9.x|, l(131072.000000)
  mov r22.z, r23.z
  dp3 r11.w, r3.xyzx, r22.xyzx
  dp3 r12.w, r8.xyzx, r22.xyzx
  add r12.w, -r23.w, r12.w
  ge r15.w, r12.w, l(0.000000)
  max r12.w, r4.w, |r12.w|
  movc r12.w, r15.w, r12.w, -r12.w
  max r11.w, -r11.w, l(0.00000010)
  div r11.w, r12.w, r11.w
  min r9.x, r9.x, |r11.w|
  mov r23.z, r24.z
  dp3 r11.w, r3.xyzx, r23.xyzx
  dp3 r12.w, r8.xyzx, r23.xyzx
  add r12.w, -r24.w, r12.w
  ge r15.w, r12.w, l(0.000000)
  max r12.w, r4.w, |r12.w|
  movc r12.w, r15.w, r12.w, -r12.w
  max r11.w, -r11.w, l(0.00000010)
  div r11.w, r12.w, r11.w
  min r9.x, r9.x, |r11.w|
  mov r24.z, r25.z
  dp3 r11.w, r3.xyzx, r24.xyzx
  dp3 r12.w, r8.xyzx, r24.xyzx
  add r12.w, -r25.w, r12.w
  ge r15.w, r12.w, l(0.000000)
  max r12.w, r4.w, |r12.w|
  movc r12.w, r15.w, r12.w, -r12.w
  max r11.w, -r11.w, l(0.00000010)
  div r11.w, r12.w, r11.w
  min r9.x, r9.x, |r11.w|
  mov r25.z, r26.x
  dp3 r11.w, r3.xyzx, r25.xyzx
  dp3 r12.w, r8.xyzx, r25.xyzx
  add r12.w, -r26.y, r12.w
  ge r15.w, r12.w, l(0.000000)
  max r12.w, r4.w, |r12.w|
  movc r12.w, r15.w, r12.w, -r12.w
  max r11.w, -r11.w, l(0.00000010)
  div r11.w, r12.w, r11.w
  min r9.x, r9.x, |r11.w|
  mov r27.zw, r26.zzzw
  dp3 r11.w, r3.zxyz, r27.xzwx
  dp3 r12.w, r8.zxyz, r27.xzwx
  add r12.w, -r27.y, r12.w
  ge r15.w, r12.w, l(0.000000)
  max r12.w, r4.w, |r12.w|
  movc r12.w, r15.w, r12.w, -r12.w
  max r11.w, -r11.w, l(0.00000010)
  div r11.w, r12.w, r11.w
  min r9.x, r9.x, |r11.w|
  mov r22.x, r18.w
  mov r22.yz, r19.zzwz
  add r22.xyz, r8.xyzx, r22.xyzx
  mad r22.xyz, r3.xyzx, r9.xxxx, r22.xyzx
  dp3 r11.w, r22.xyzx, r22.xyzx
  sqrt r11.w, r11.w
  div r9.x, r9.x, r11.w
  add r9.x, r9.x, r9.x
  sqrt r9.x, r9.x
  mad r9.x, r4.y, l(5.000000), r9.x
  add r9.x, r9.x, l(-0.844800)
  mov r15.y, r16.z
  mov r15.z, r17.x
  dp3 r23.x, r22.xyzx, r15.xyzx
  mov r24.xy, r16.xwxx
  mov r24.z, r17.w
  dp3 r23.y, r22.xyzx, r24.xyzx
  mov r17.x, r16.y
  dp3 r23.z, r22.xyzx, r17.xyzx
  ubfe r16.xy, l(6, 9, 0, 0), l(25, 16, 0, 0), r21.yyyy
  utof r23.w, r16.y
  sample_l_indexable(texturecubearray)(float,float,float,float) r16.yzw, r23.xyzw, t8.wxyz, s2, r9.x
  and r21.yzw, r16.yyzw, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
  ieq r21.yzw, r21.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
  or r9.x, r21.z, r21.y
  or r9.x, r21.w, r9.x
  movc r16.yzw, r9.xxxx, l(0,1.000000,1.000000,0), r16.yyzw
  dp3 r22.x, r8.xyzx, r15.xyzx
  dp3 r22.y, r8.xyzx, r24.xyzx
  dp3 r22.z, r8.xyzx, r17.xyzx
  mad_sat r18.xyz, r22.xyzx, r18.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mov r19.z, r20.x
  mad r18.xyz, r18.xyzx, r19.xyzx, r20.yzwy
  dp3 r23.x, r1.xyzx, r15.xyzx
  dp3 r23.y, r1.xyzx, r24.xyzx
  dp3 r23.z, r1.xyzx, r17.xyzx
  lt r15.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r23.xyzx
  movc r10.z, r15.x, l(0), l(0.500000)
  add r17.xyz, r10.xyzx, r18.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r17.xyz, r17.xyzx, t17.xyzw, s4, l(0.000000)
  movc r11.z, r15.y, l(0), l(0.500000)
  add r15.xyw, r11.xyxz, r18.xyxz
  sample_l_indexable(texture3d)(float,float,float,float) r15.xyw, r15.xywx, t18.xywz, s4, l(0.000000)
  movc r12.z, r15.z, l(0), l(0.500000)
  add r18.xyz, r12.xyzx, r18.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r18.xyz, r18.xyzx, t19.xyzw, s4, l(0.000000)
  mul r19.xyz, r23.xyzx, r23.xyzx
  sample_l_indexable(texturecubearray)(float,float,float,float) r20.xyz, r23.xyzw, t8.xyzw, s2, l(6.000000)
  and r21.yzw, r20.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
  ieq r21.yzw, r21.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
  or r9.x, r21.z, r21.y
  or r9.x, r21.w, r9.x
  movc r20.xyz, r9.xxxx, l(1.000000,1.000000,0,0), r20.xyzx
  mov r22.xyzw, r14.xyzw
  mov r9.x, r1.w
  mov r10.z, r6.w
  loop 
    breakc_z r10.z
    firstbit_lo r11.z, r10.z
    ishl r11.z, l(1), r11.z
    and r11.w, r10.z, r11.z
    if_nz r11.w
      not r11.z, r11.z
      and r10.z, r10.z, r11.z
      if_nz r9.w
        mov r11.z, r7.z
        mov r23.xy, r13.zwzz
        mov r11.w, l(1)
        loop 
          ige r12.z, r11.w, r16.x
          breakc_nz r12.z
          iadd r12.z, r10.w, r11.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r24.xyzw, r12.z, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r25.xyzw, r12.z, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r26.xyzw, r12.z, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r12.z, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r12.z, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r12.z, l(80), t16.xyzw
          dp3 r12.z, r24.xyzx, r8.xyzx
          add_sat r12.z, r24.w, r12.z
          mul r12.z, r12.z, r23.x
          dp3 r12.w, r25.xyzx, r8.xyzx
          add_sat r12.w, r25.w, r12.w
          mul r12.z, r12.w, r12.z
          dp3 r12.w, r26.xyzx, r8.xyzx
          add_sat r12.w, r26.w, r12.w
          mul r12.z, r12.w, r12.z
          dp3 r12.w, r27.xyzx, r8.xyzx
          add_sat r12.w, r27.w, r12.w
          mul r12.z, r12.w, r12.z
          dp3 r12.w, r28.xyzx, r8.xyzx
          add_sat r12.w, r28.w, r12.w
          mul r12.z, r12.w, r12.z
          dp3 r12.w, r29.xyzx, r8.xyzx
          add_sat r12.w, r29.w, r12.w
          mul r23.x, r12.w, r12.z
          ushr r15.z, r11.z, l(2)
          ubfe r17.w, l(1), l(2), r11.z
          and r18.w, r15.z, l(2)
          max r19.w, r23.x, r23.y
          mad r12.z, -r12.z, r12.w, l(1.000000)
          mul r12.z, r12.z, r23.y
          movc r13.y, r18.w, r12.z, r19.w
          movc r23.xy, r17.wwww, r23.xyxx, r13.xyxx
          iadd r11.w, r11.w, l(1)
          mov r11.z, r15.z
        endloop 
        mov_sat r23.y, r23.y
        mul r11.z, r7.w, r23.y
        lt r11.w, l(0.000000), r11.z
        if_nz r11.w
          mad r24.w, r23.y, r7.w, r22.w
          mul r11.z, r21.x, r11.z
          mul r21.yzw, r11.zzzz, r19.xxyz
          mul r23.xzw, r15.xxyw, r21.zzzz
          mad r23.xzw, r17.xxyz, r21.yyyy, r23.xxzw
          mad r21.yzw, r18.xxyz, r21.wwww, r23.xxzw
          mul r21.yzw, r20.xxyz, r21.yyzw
          dp3 r11.w, r21.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
          mul r12.z, r5.z, r11.w
          mul r21.yzw, r11.zzzz, r16.yyzw
          dp3 r11.z, r21.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r11.z, r5.z, r11.w, r11.z
          div r11.z, r12.z, r11.z
          mad r24.xyz, r21.yzwy, r11.zzzz, r22.xyzx
        else 
          mov r24.xyzw, r22.xyzw
        endif 
        mov r9.x, l(-1)
        mov r22.xyzw, r24.xyzw
        break 
      endif 
    endif 
  endloop 
  if_nz r9.x
    mov r14.xyzw, r22.xyzw
    mov r1.w, l(-1)
    break 
  endif 
  iadd r5.w, r5.w, l(32)
  mov r14.xyzw, r22.xyzw
  mov r1.w, r9.x
endloop 
if_z r1.w
  iadd r1.w, cb2[0].y, -cb2[58].x
  and r4.y, r1.w, l(-32)
  iadd r4.w, r1.w, -r4.y
  and r5.z, cb2[0].y, l(-32)
  iadd r5.w, -r5.z, cb2[0].y
  mov r7.xy, l(0,0,0,0)
  mov r8.w, l(0)
  mov r9.yz, l(0,0,1.000000,0)
  mov r10.x, l(1.000000)
  mov r11.x, r14.w
  mov r6.w, r4.y
  loop 
    uge r7.w, r6.w, cb2[0].y
    breakc_nz r7.w
    ushr r7.z, r6.w, l(5)
    iadd r8.xyz, r6.xyzx, r7.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r7.z, r8.xyzw, t7.yzxw
    ieq r7.w, r4.y, r6.w
    bfi r8.x, r4.w, l(0), l(0), r7.z
    movc r7.z, r7.w, r8.x, r7.z
    ieq r7.w, r5.z, r6.w
    ubfe r8.x, r5.w, l(0), r7.z
    movc r7.z, r7.w, r8.x, r7.z
    iadd r7.w, r6.w, cb2[0].x
    mov r8.x, r11.x
    mov r8.y, r7.z
    loop 
      breakc_z r8.y
      firstbit_lo r8.z, r8.y
      ishl r9.w, l(1), r8.z
      and r10.z, r8.y, r9.w
      if_nz r10.z
        xor r8.y, r8.y, r9.w
        iadd r9.w, r7.w, r8.z
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r12.xyzw, r9.w, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r13.xy, r9.w, l(16), t11.xyxx
        add r11.yzw, r12.xxyz, -v6.xxyz
        mov r13.z, r12.w
        lt r11.yzw, |r11.yyzw|, r13.zzxy
        and r9.w, r11.z, r11.y
        and r9.w, r11.w, r9.w
        if_nz r9.w
          iadd r8.z, r6.w, r8.z
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r11.yzw, r8.z, l(0), t15.xxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r10.zw, r8.z, l(96), t15.xxxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r8.z, r8.z, l(120), t15.xxxx
          add r11.yzw, -r11.yyzw, v6.xxyz
          and r9.w, r8.z, l(0x0000ffff)
          ubfe r8.z, l(6), l(25), r8.z
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r12.xyzw, r9.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r13.xyzw, r9.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r15.xyzw, r9.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r16.xyzw, r9.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r17.xyzw, r9.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r18.xyzw, r9.w, l(80), t16.xyzw
          dp3 r12.x, r12.xyzx, r11.yzwy
          add_sat r12.x, r12.w, r12.x
          dp3 r12.y, r13.xyzx, r11.yzwy
          add_sat r12.y, r13.w, r12.y
          mul r12.x, r12.y, r12.x
          dp3 r12.y, r15.xyzx, r11.yzwy
          add_sat r12.y, r15.w, r12.y
          mul r12.x, r12.y, r12.x
          dp3 r12.y, r16.xyzx, r11.yzwy
          add_sat r12.y, r16.w, r12.y
          mul r12.x, r12.y, r12.x
          dp3 r12.y, r17.xyzx, r11.yzwy
          add_sat r12.y, r17.w, r12.y
          mul r12.x, r12.y, r12.x
          dp3 r12.y, r18.xyzx, r11.yzwy
          add_sat r12.y, r18.w, r12.y
          mul r9.x, r12.y, r12.x
          and r12.x, r10.z, l(1)
          movc r12.xy, r12.xxxx, r9.xyxx, r9.zxzz
          mov r9.x, r10.z
          mov r13.xy, r12.xyxx
          mov r12.z, l(1)
          loop 
            ige r12.w, r12.z, r8.z
            breakc_nz r12.w
            iadd r12.w, r9.w, r12.z
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r15.xyzw, r12.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r16.xyzw, r12.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r17.xyzw, r12.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r18.xyzw, r12.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r19.xyzw, r12.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r20.xyzw, r12.w, l(80), t16.xyzw
            dp3 r12.w, r15.xyzx, r11.yzwy
            add_sat r12.w, r15.w, r12.w
            mul r12.w, r12.w, r13.x
            dp3 r13.z, r16.xyzx, r11.yzwy
            add_sat r13.z, r16.w, r13.z
            mul r12.w, r12.w, r13.z
            dp3 r13.z, r17.xyzx, r11.yzwy
            add_sat r13.z, r17.w, r13.z
            mul r12.w, r12.w, r13.z
            dp3 r13.z, r18.xyzx, r11.yzwy
            add_sat r13.z, r18.w, r13.z
            mul r12.w, r12.w, r13.z
            dp3 r13.z, r19.xyzx, r11.yzwy
            add_sat r13.z, r19.w, r13.z
            mul r12.w, r12.w, r13.z
            dp3 r13.z, r20.xyzx, r11.yzwy
            add_sat r13.z, r20.w, r13.z
            mul r13.x, r12.w, r13.z
            ushr r13.w, r9.x, l(2)
            ubfe r15.x, l(1), l(2), r9.x
            and r15.y, r13.w, l(2)
            max r15.z, r13.x, r13.y
            mad r12.w, -r12.w, r13.z, l(1.000000)
            mul r12.w, r12.w, r13.y
            movc r10.y, r15.y, r12.w, r15.z
            movc r13.xy, r15.xxxx, r13.xyxx, r10.xyxx
            iadd r12.z, r12.z, l(1)
            mov r9.x, r13.w
          endloop 
          mov_sat r13.y, r13.y
          mul r8.z, r10.w, r13.y
          lt r8.z, l(0.000000), r8.z
          if_nz r8.z
            mad r8.x, r13.y, r10.w, r8.x
          endif 
        endif 
      endif 
    endloop 
    mov r11.x, r8.x
    iadd r6.w, r6.w, l(32)
  endloop 
  lt r5.z, r11.x, l(1.000000)
  if_nz r5.z
    mov r7.xy, l(0,0,0,0)
    mov r8.w, l(0)
    mov r9.yz, l(0,0,1.000000,0)
    mov r10.x, l(1.000000)
    mov r5.zw, r11.xxxx
    mov r6.w, l(0)
    loop 
      uge r7.w, r6.w, r1.w
      breakc_nz r7.w
      ushr r7.z, r6.w, l(5)
      iadd r8.xyz, r6.xyzx, r7.xyzx
      ld_indexable(texture2darray)(uint,uint,uint,uint) r7.z, r8.xyzw, t7.yzxw
      ieq r7.w, r4.y, r6.w
      ubfe r8.x, r4.w, l(0), r7.z
      movc r7.z, r7.w, r8.x, r7.z
      iadd r7.w, r6.w, cb2[0].x
      mov r8.xy, r5.zwzz
      mov r8.z, r7.z
      loop 
        breakc_z r8.z
        firstbit_lo r9.w, r8.z
        ishl r10.z, l(1), r9.w
        and r10.w, r8.z, r10.z
        if_nz r10.w
          xor r8.z, r8.z, r10.z
          iadd r10.z, r7.w, r9.w
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r12.xyzw, r10.z, l(0), t11.xyzw
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r13.xy, r10.z, l(16), t11.xyxx
          add r11.yzw, r12.xxyz, -v6.xxyz
          mov r13.z, r12.w
          lt r11.yzw, |r11.yyzw|, r13.zzxy
          and r10.z, r11.z, r11.y
          and r10.z, r11.w, r10.z
          if_nz r10.z
            iadd r9.w, r6.w, r9.w
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r11.yzw, r9.w, l(0), t15.xxyz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r10.zw, r9.w, l(96), t15.xxxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r9.w, r9.w, l(120), t15.xxxx
            add r11.yzw, -r11.yyzw, v6.xxyz
            and r12.x, r9.w, l(0x0000ffff)
            ubfe r9.w, l(6), l(25), r9.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r13.xyzw, r12.x, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r15.xyzw, r12.x, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r16.xyzw, r12.x, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r17.xyzw, r12.x, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r18.xyzw, r12.x, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r19.xyzw, r12.x, l(80), t16.xyzw
            dp3 r12.y, r13.xyzx, r11.yzwy
            add_sat r12.y, r13.w, r12.y
            dp3 r12.z, r15.xyzx, r11.yzwy
            add_sat r12.z, r15.w, r12.z
            mul r12.y, r12.z, r12.y
            dp3 r12.z, r16.xyzx, r11.yzwy
            add_sat r12.z, r16.w, r12.z
            mul r12.y, r12.z, r12.y
            dp3 r12.z, r17.xyzx, r11.yzwy
            add_sat r12.z, r17.w, r12.z
            mul r12.y, r12.z, r12.y
            dp3 r12.z, r18.xyzx, r11.yzwy
            add_sat r12.z, r18.w, r12.z
            mul r12.y, r12.z, r12.y
            dp3 r12.z, r19.xyzx, r11.yzwy
            add_sat r12.z, r19.w, r12.z
            mul r9.x, r12.z, r12.y
            and r12.y, r10.z, l(1)
            movc r12.yz, r12.yyyy, r9.xxyx, r9.zzxz
            mov r9.x, r10.z
            mov r13.xy, r12.yzyy
            mov r12.w, l(1)
            loop 
              ige r13.z, r12.w, r9.w
              breakc_nz r13.z
              iadd r13.z, r12.w, r12.x
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r15.xyzw, r13.z, l(0), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r16.xyzw, r13.z, l(16), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r17.xyzw, r13.z, l(32), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r18.xyzw, r13.z, l(48), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r19.xyzw, r13.z, l(64), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r20.xyzw, r13.z, l(80), t16.xyzw
              dp3 r13.z, r15.xyzx, r11.yzwy
              add_sat r13.z, r15.w, r13.z
              mul r13.z, r13.z, r13.x
              dp3 r13.w, r16.xyzx, r11.yzwy
              add_sat r13.w, r16.w, r13.w
              mul r13.z, r13.w, r13.z
              dp3 r13.w, r17.xyzx, r11.yzwy
              add_sat r13.w, r17.w, r13.w
              mul r13.z, r13.w, r13.z
              dp3 r13.w, r18.xyzx, r11.yzwy
              add_sat r13.w, r18.w, r13.w
              mul r13.z, r13.w, r13.z
              dp3 r13.w, r19.xyzx, r11.yzwy
              add_sat r13.w, r19.w, r13.w
              mul r13.z, r13.w, r13.z
              dp3 r13.w, r20.xyzx, r11.yzwy
              add_sat r13.w, r20.w, r13.w
              mul r13.x, r13.w, r13.z
              ushr r14.w, r9.x, l(2)
              ubfe r15.x, l(1), l(2), r9.x
              and r15.y, r14.w, l(2)
              max r15.z, r13.x, r13.y
              mad r13.z, -r13.z, r13.w, l(1.000000)
              mul r13.z, r13.z, r13.y
              movc r10.y, r15.y, r13.z, r15.z
              movc r13.xy, r15.xxxx, r13.xyxx, r10.xyxx
              iadd r12.w, r12.w, l(1)
              mov r9.x, r14.w
            endloop 
            add_sat r9.x, -r8.y, r13.y
            mul r9.w, r10.w, r9.x
            lt r9.w, l(0.000000), r9.w
            if_nz r9.w
              mad r8.x, r9.x, r10.w, r8.x
            endif 
          endif 
        endif 
      endloop 
      mov r5.z, r8.x
      iadd r6.w, r6.w, l(32)
    endloop 
    mov r11.x, r5.z
  endif 
  max r1.w, r11.x, l(1.000000)
  rcp r1.w, r1.w
  mov_sat r11.x, r11.x
  mul r14.xyz, r1.wwww, r14.xyzx
  lt r1.w, r11.x, l(0.990000)
  if_nz r1.w
    add r1.w, -r11.x, l(1.000000)
    mul r1.w, r1.w, cb2[19].x
    dp3 r4.y, v6.xyzx, v6.xyzx
    rsq r4.y, r4.y
    mul r7.xyz, r4.yyyy, v6.xyzx
    dp3 r4.y, r3.xyzx, -r7.xyzx
    add r4.w, -r0.w, r4.y
    min r4.w, |r4.w|, l(1.000000)
    mul r4.w, r4.w, l(10.000000)
    min r4.w, r4.w, l(1.000000)
    mad r5.z, r4.w, l(-2.000000), l(3.000000)
    mul r4.w, r4.w, r4.w
    mad r4.w, -r5.z, r4.w, l(1.000000)
    mul r5.z, r4.w, r4.w
    mul r5.z, r5.z, r5.z
    mul r4.w, r4.w, r5.z
    mul r4.w, r0.x, r4.w
    mul r4.w, r4.w, cb2[19].x
    mul r4.w, r4.w, l(20.000000)
    add r4.y, r4.y, l(0.500000)
    mul_sat r4.y, r4.y, l(4.000000)
    mad r5.z, r4.y, l(-2.000000), l(3.000000)
    mul r4.y, r4.y, r4.y
    mul r4.y, r4.y, r5.z
    mul r4.y, r4.y, r4.w
    mov r3.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r7.xyz, r3.xyzw, t8.xyzw, s2, r4.z
    mul r4.yzw, r4.yyyy, r7.xxyz
    mul r1.w, r1.w, r5.y
    mad r14.xyz, r4.yzwy, r1.wwww, r14.xyzx
  endif 
endif 
mad r4.yz, r5.xxyx, l(0.000000, 0.984375, 0.984375, 0.000000), l(0.000000, 0.00781250, 0.00781250, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r4.yz, r4.yzyy, t5.zxyw, s2, l(0.000000)
mul r5.xyz, r4.yyyy, r14.xyzx
mul r4.yzw, r4.zzzz, r14.xxyz
dp3 r1.w, r1.xyzx, cb2[17].xyzx
ge r3.w, l(0.000000), |r1.w|
if_nz r3.w
  mov r6.w, l(0)
endif 
if_z r3.w
  mul r7.xyz, v6.yyyy, cb2[29].xyzx
  mad r7.xyz, v6.xxxx, cb2[28].xyzx, r7.xyzx
  mad r7.xyz, v6.zzzz, cb2[30].xyzx, r7.xyzx
  add r7.xyz, r7.xyzx, cb2[31].xyzx
  add r3.w, r7.z, -cb2[17].w
  mad r3.w, -r3.w, l(0.00006104), l(1.000000)
  mov_sat r7.w, r3.w
  eq r7.w, r3.w, r7.w
  if_nz r7.w
    mov r7.w, l(0)
    mov r8.x, l(0)
    loop 
      ge r8.y, r7.w, l(3.000000)
      breakc_nz r8.y
      ftou r8.y, r7.w
      add r8.zw, r7.xxxy, -cb2[r8.y + 20].xxxy
      max r8.z, |r8.w|, |r8.z|
      mul r8.x, r8.z, cb2[r8.y + 20].z
      lt r8.y, r8.x, l(1.000000)
      if_nz r8.y
        break 
      endif 
      add r7.w, r7.w, l(1.000000)
      mov r8.x, l(0)
    endloop 
  else 
    mov r7.w, l(3.000000)
    mov r8.x, l(0)
  endif 
  ge r8.y, r7.w, l(3.000000)
  if_nz r8.y
    mul r9.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
    rcp r10.xz, r9.xxxx
    mov r10.y, -r10.z
    mad r9.xyz, r7.xyxx, r10.xyzx, r9.yzyy
    add r10.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r9.xyz, r9.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r9.xyz, r10.xyzx, r9.xyzx
    mul r8.zw, r9.zzzy, cb2[32].xxxx
    round_ni r8.zw, r8.zzzw
    mul r8.w, r8.w, cb2[27].x
    mad r8.z, r8.w, cb2[32].x, r8.z
    ftou r8.z, r8.z
    iadd r8.z, r8.z, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r8.w, r8.z, l(0), t23.xxxx
    and r9.w, r8.w, l(0x40000000)
    ishl r10.x, r8.w, l(2)
    if_z r9.w
      and r9.w, r8.w, l(0x01ffffff)
      iadd r11.x, r8.z, r9.w
      ushr r8.z, r8.w, l(25)
      utof r8.z, r8.z
      mul r9.xyz, r8.zzzz, r9.xyzx
      frc r9.xyz, r9.xyzx
      mul r9.xyz, r9.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
      ftou r9.xyz, r9.xyzx
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r11.z, r11.x, l(0), t23.xxxx
      ushr r8.zw, r9.zzzy, l(0, 0, 6, 6)
      and r9.w, r11.z, l(0xc0000000)
      iadd r10.y, r11.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r10.y, r10.y, l(0), t23.xxxx
      movc r8.w, r8.w, r11.z, r10.y
      ushr r10.y, r8.w, l(13)
      movc r8.z, r8.z, r10.y, r8.w
      and r8.z, r8.z, l(8191)
      iadd r12.x, r8.z, r11.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r12.z, r12.x, l(0), t23.xxxx
      mov r11.y, l(0)
      mov r12.y, l(1)
      movc r10.yzw, r9.wwww, r11.xxyz, r12.xxyz
      movc r12.yz, r9.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r8.zw, r9.zzzy, r12.yyyy
      and r8.zw, r8.zzzw, l(0, 0, 1, 1)
      and r11.w, r10.w, l(0xc0000000)
      iadd r12.y, r10.y, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r12.y, r12.y, l(0), t23.xxxx
      movc r8.w, r8.w, r10.w, r12.y
      ushr r12.y, r8.w, l(13)
      movc r8.z, r8.z, r12.y, r8.w
      and r8.z, r8.z, l(8191)
      iadd r12.x, r8.z, r10.y
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r12.w, r12.x, l(0), t23.xxxx
      movc r10.yzw, r11.wwww, r10.yyzw, r12.xxzw
      movc r10.yzw, r9.wwww, r11.xxyz, r10.yyzw
      and r8.z, r10.w, l(0xc0000000)
      if_z r8.z
        iadd r8.z, -r10.z, l(6)
        ushr r8.zw, r9.zzzy, r8.zzzz
        or r9.w, r10.w, l(0x40000000)
        bfi r8.w, l(1), l(1), r8.w, l(0)
        bfi r8.z, l(1), l(0), r8.z, r8.w
        imul null, r8.z, r8.z, l(10)
        ushr r8.z, r9.w, r8.z
        and r8.z, r8.z, l(1023)
        iadd r11.x, r8.z, r10.y
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r11.w, r11.x, l(0), t23.xxxx
        iadd r11.yz, r10.zzzz, l(0, 1, 2, 0)
        iadd r8.z, -r11.y, l(6)
        ushr r8.zw, r9.zzzy, r8.zzzz
        and r9.w, r11.w, l(0xc0000000)
        or r10.z, r11.w, l(0x40000000)
        bfi r8.w, l(1), l(1), r8.w, l(0)
        bfi r8.z, l(1), l(0), r8.z, r8.w
        imul null, r8.z, r8.z, l(10)
        ushr r8.z, r10.z, r8.z
        and r8.z, r8.z, l(1023)
        iadd r12.x, r8.z, r11.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r12.z, r12.x, l(0), t23.xxxx
        mov r12.y, r11.z
        movc r12.xyz, r9.wwww, r11.xywx, r12.xyzx
        iadd r8.z, -r12.y, l(6)
        ushr r8.zw, r9.zzzy, r8.zzzz
        and r10.z, r12.z, l(0xc0000000)
        or r11.y, r12.z, l(0x40000000)
        bfi r8.w, l(1), l(1), r8.w, l(0)
        bfi r8.z, l(1), l(0), r8.z, r8.w
        imul null, r8.z, r8.z, l(10)
        ushr r8.z, r11.y, r8.z
        and r8.z, r8.z, l(1023)
        iadd r13.x, r8.z, r12.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r13.y, r13.x, l(0), t23.xxxx
        movc r8.zw, r10.zzzz, r12.xxxz, r13.xxxy
        movc r10.yw, r9.wwww, r11.xxxw, r8.zzzw
      endif 
      and r8.z, r10.w, l(0xc0000000)
      if_z r8.z
        ubfe r8.w, l(14), l(15), r10.w
        utof r8.w, r8.w
        mul r8.w, r8.w, cb2[27].w
        mul r8.w, r8.w, l(0.00006104)
        and r11.xy, r10.wwww, l(0x00007fff, 0x20000000, 0, 0)
        utof r9.w, r11.x
        mul r9.w, r9.w, cb2[27].w
        mul r9.w, r9.w, l(0.00003052)
        and r10.z, r9.y, l(3)
        iadd r10.z, r10.z, r10.y
        iadd r10.z, r10.z, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r10.z, r10.z, l(0), t23.xxxx
        bfi r11.xzw, l(2, 0, 2, 1), l(3, 0, 1, 4), r9.xxyz, l(0, 0, 0, 0)
        ushr r9.x, r10.z, r11.x
        and r9.x, r9.x, l(255)
        utof r9.x, r9.x
        mul r9.x, r9.w, r9.x
        mad r9.x, r9.x, l(0.00392157), r8.w
        iadd r9.y, r11.z, l(1)
        ubfe r9.z, l(1), l(1), r9.z
        iadd r9.y, r9.z, r9.y
        iadd r9.y, r9.y, r10.y
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r9.y, r9.y, l(0), t23.xxxx
        ushr r9.y, r9.y, r11.w
        and r9.y, r9.y, l(0x0000ffff)
        utof r9.y, r9.y
        mul r9.y, r9.w, r9.y
        mad r8.w, r9.y, l(0.00001526), r8.w
        movc r10.x, r11.y, r9.x, r8.w
      else 
        and r8.w, r10.w, l(0x80000000)
        iadd r9.x, r10.y, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r9.x, r9.x, l(0), t23.xxxx
        movc r8.w, r8.w, r9.x, l(0)
        ishl r9.x, r10.w, l(2)
        ushr r9.y, r8.w, l(16)
        f16tof32 r9.y, r9.y
        and r8.w, r8.w, l(0x0000ffff)
        f16tof32 r8.w, r8.w
        mad r9.x, r7.x, r9.y, r9.x
        mad r8.w, r7.y, r8.w, r9.x
        movc r10.x, r8.z, r8.w, r10.x
      endif 
    endif 
    mad r7.z, -cb2[27].z, l(2.000000), r7.z
    lt r7.z, r10.x, r7.z
    movc r6.w, r7.z, l(0), l(1.000000)
  endif 
  if_z r8.y
    if_z cb2[58].y
      ftou r7.z, r7.w
      add r8.yz, r7.xxyx, -cb2[r7.z + 20].xxyx
      mul r8.yz, r8.yyzy, cb2[r7.z + 20].zzzz
      mad r9.xy, r8.yzyy, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r7.z, cb2[26].y
      add r9.z, r7.z, r7.w
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r7.z, r9.xyzx, t13.xxxx, s13, r3.w
      sample_l_indexable(texture2darray)(float,float,float,float) r8.y, r9.xyzx, t31.yxzw, s0, l(0.000000)
      add r7.z, r7.z, r8.y
      add_sat r7.z, r7.z, l(-1.000000)
      mul r8.y, r7.z, r7.z
      mul r6.w, r7.z, r8.y
    endif 
    if_nz cb2[58].y
      utof r0.yz, r0.yyzy
      dp2 r0.y, r0.yzyy, l(0.06711056, 0.00583715, 0.000000, 0.000000)
      frc r0.y, r0.y
      mul r0.y, r0.y, l(52.982918)
      frc r0.y, r0.y
      mad r0.y, r0.y, l(6.28318548), cb1[70].w
      sincos r9.x, r10.x, r0.y
      mov r11.x, -r9.x
      ftou r0.y, r7.w
      add r0.z, r7.w, l(1.000000)
      min r0.z, r0.z, l(2.000000)
      ftou r0.z, r0.z
      add r7.z, -r8.x, l(1.000000)
      mul r7.z, r7.z, l(28.000000)
      ftou r7.z, r7.z
      add r8.xy, r7.xyxx, -cb2[r0.y + 20].xyxx
      mul r8.xy, r8.xyxx, cb2[r0.y + 20].zzzz
      mad r8.xy, r8.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      add r7.xy, r7.xyxx, -cb2[r0.z + 20].xyxx
      mul r7.xy, r7.xyxx, cb2[r0.z + 20].zzzz
      mad r7.xy, r7.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      mov r11.y, r10.x
      mov r11.z, r9.x
      mov r7.w, l(0)
      mov r8.z, l(0)
      loop 
        uge r8.w, r8.z, l(8)
        breakc_nz r8.w
        ult r8.w, r7.z, r8.z
        movc r9.xy, r8.wwww, r7.xyxx, r8.xyxx
        movc r9.z, r8.w, cb2[r0.z + 20].w, cb2[r0.y + 20].w
        movc r8.w, r8.w, r0.z, r0.y
        dp2 r10.x, icb[r8.z + 0].yxyy, r11.xyxx
        dp2 r10.y, icb[r8.z + 0].yxyy, r11.yzyy
        mad r9.xy, r10.xyxx, r9.zzzz, r9.xyxx
        iadd r8.w, r8.w, cb2[26].y
        utof r9.z, r8.w
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r8.w, r9.xyzx, t13.xxxx, s13, r3.w
        sample_l_indexable(texture2darray)(float,float,float,float) r9.x, r9.xyzx, t31.xyzw, s0, l(0.000000)
        add r8.w, r8.w, r9.x
        add_sat r8.w, r8.w, l(-1.000000)
        mad r7.w, r8.w, l(0.125000), r7.w
        iadd r8.z, r8.z, l(1)
      endloop 
      mul r0.y, r7.w, r7.w
      mul r6.w, r7.w, r0.y
    endif 
  endif 
endif 
lt r0.y, l(0.000000), |r1.w|
if_nz r0.y
  lt r0.y, l(0.000000), r6.w
  if_nz r0.y
    mul r0.y, r4.x, cb2[18].w
    mul r0.y, r0.y, l(0.250000)
    if_nz cb2[23].x
      add r7.xyz, v6.xyzx, cb1[24].xyzx
      mov r7.w, l(1.000000)
      dp4 r0.z, cb2[24].xyzw, r7.xyzw
      dp4 r3.w, cb2[25].xyzw, r7.xyzw
      frc r7.x, r0.z
      frc r7.y, r3.w
      iadd r0.z, l(-1), cb2[23].x
      utof r7.z, r0.z
      sample_l_indexable(texture2darray)(float,float,float,float) r7.xyz, r7.xyzx, t20.xyzw, s2, l(0.000000)
      add r7.xyz, r7.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
      mad r7.xyz, cb2[23].yyyy, r7.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      mul r7.xyz, r7.xyzx, cb2[18].xyzx
    else 
      mov r7.xyz, cb2[18].xyzx
    endif 
    lt r0.z, l(0.000000), r1.w
    add r1.w, r2.w, r2.w
    mad r8.xyz, r1.xyzx, -r1.wwww, r2.xyzx
    dp3 r1.w, r8.xyzx, -cb2[17].xyzx
    add r3.w, -r0.w, r1.w
    min r3.w, |r3.w|, l(1.000000)
    mul r3.w, r3.w, l(10.000000)
    min r3.w, r3.w, l(1.000000)
    mad r6.w, r3.w, l(-2.000000), l(3.000000)
    mul r3.w, r3.w, r3.w
    mad r3.w, -r6.w, r3.w, l(1.000000)
    mul r6.w, r3.w, r3.w
    mul r6.w, r6.w, r6.w
    mul r3.w, r3.w, r6.w
    mul r3.w, r0.x, r3.w
    mul r3.w, r3.w, l(20.000000)
    add r1.w, r1.w, l(0.500000)
    mul_sat r1.w, r1.w, l(4.000000)
    mad r6.w, r1.w, l(-2.000000), l(3.000000)
    mul r1.w, r1.w, r1.w
    mul r1.w, r1.w, r6.w
    mul r6.w, r1.w, r3.w
    mul r8.xyz, r7.xyzx, r6.wwww
    mad r8.xyz, r8.xyzx, r0.yyyy, r4.yzwy
    mad_sat r0.y, -r3.w, r1.w, l(1.000000)
    mul r1.w, r0.y, r0.y
    mul r1.w, r1.w, r1.w
    mul r0.y, r0.y, r1.w
    mul r0.y, r0.y, r6.w
    mad r7.xyz, r0.yyyy, r7.xyzx, r5.xyzx
    mov r7.w, r8.x
    mov r5.w, r4.y
    movc r5.xyzw, r0.zzzz, r7.xyzw, r5.xyzw
    movc r4.zw, r0.zzzz, r8.yyyz, r4.zzzw
    mov r4.y, r5.w
  endif 
endif 
add r0.y, r2.w, r2.w
mad r2.xyz, r1.xyzx, -r0.yyyy, r2.xyzx
mov r7.xy, l(0,0,0,0)
mov r8.w, l(0)
mov r9.xyz, v6.xyzx
mov r9.w, l(1.000000)
mov r10.z, l(1.000000)
mov r11.xyz, r5.xyzx
mov r12.xyz, r4.yzwy
mov r0.y, l(0)
loop 
  uge r0.z, r0.y, cb2[0].x
  breakc_nz r0.z
  ushr r7.z, r0.y, l(5)
  iadd r8.xyz, r6.xyzx, r7.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r0.z, r8.xyzw, t6.yzxw
  mov r8.xyz, r11.xyzx
  mov r13.xyz, r12.xyzx
  mov r1.w, r0.z
  loop 
    breakc_z r1.w
    firstbit_lo r2.w, r1.w
    ishl r3.w, l(1), r2.w
    and r5.w, r1.w, r3.w
    if_nz r5.w
      xor r1.w, r1.w, r3.w
      iadd r2.w, r0.y, r2.w
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r14.xyzw, r2.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r15.xy, r2.w, l(16), t11.xyxx
      add r14.xyz, r14.xyzx, -v6.xyzx
      mov r15.z, r14.w
      lt r14.xyz, |r14.xyzx|, r15.zxyz
      and r3.w, r14.y, r14.x
      and r3.w, r14.z, r3.w
      if_nz r3.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.xyzw, r2.w, l(0), t12.wxyz
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r2.w, l(16), t12.zxyw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r2.w, l(32), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r3.w, r2.w, l(48), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r2.w, l(88), t12.wxyz
        ubfe r5.w, l(3), l(24), r15.w
        switch r5.w
          case l(4)
          lt r5.w, l(0.000000), r17.x
          mad r18.xyz, -r17.yzwy, l(0.500000, 0.500000, 0.500000, 0.000000), r14.yzwy
          add r19.xyz, r18.xyzx, -v6.xyzx
          dp3 r6.w, r17.yzwy, r19.xyzx
          div_sat r7.z, -r6.w, r17.x
          mad r20.xyz, r7.zzzz, r17.yzwy, r18.xyzx
          movc r20.xyz, r5.wwww, r20.xyzx, r14.yzwy
          add r20.xyz, r20.xyzx, -v6.xyzx
          dp3 r7.w, r20.xyzx, r20.xyzx
          rsq r10.w, r7.w
          mul r20.xyz, r10.wwww, r20.xyzx
          dp3 r10.w, r1.xyzx, r20.xyzx
          lt r11.w, l(0.000000), |r10.w|
          if_nz r11.w
            sqrt r11.w, r7.w
            mul r12.w, r3.w, r3.w
            div r7.w, r12.w, r7.w
            min r7.w, r7.w, l(1.000000)
            mad_sat r20.xy, r11.wwww, r16.xzxx, r16.ywyy
            mul r20.zw, r20.xxxy, r20.xxxy
            mad r20.xy, r20.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
            mul r20.xy, r20.xyxx, r20.zwzz
            mul r7.w, r7.w, r20.x
            mul r7.w, r20.y, r7.w
            lt r7.w, l(0.000000), r7.w
            if_nz r7.w
              mul r7.w, r4.x, r15.x
              dp3 r11.w, r17.yzwy, r3.xyzx
              dp3 r12.w, r3.xyzx, r19.xyzx
              mad r13.w, -r11.w, r11.w, r17.x
              mad r6.w, r11.w, r12.w, -r6.w
              div_sat r6.w, r6.w, r13.w
              div r11.w, r13.w, r17.x
              mul r11.w, r11.w, l(10.000000)
              min r11.w, r11.w, l(1.000000)
              add r6.w, -r7.z, r6.w
              mad r6.w, r11.w, r6.w, r7.z
              mad r18.xyz, r6.wwww, r17.yzwy, r18.xyzx
              movc r18.xyz, r5.wwww, r18.xyzx, r14.yzwy
              add r18.xyz, r18.xyzx, -v6.xyzx
              dp3 r5.w, r18.xyzx, r18.xyzx
              rsq r5.w, r5.w
              mul r18.xyz, r5.wwww, r18.xyzx
              lt r5.w, l(0.000000), r10.w
              dp3 r6.w, r2.xyzx, -r18.xyzx
              add r7.z, -r0.w, r6.w
              min r7.z, |r7.z|, l(1.000000)
              mul r7.zw, r7.zzzw, l(0.000000, 0.000000, 10.000000, 0.250000)
              min r7.z, r7.z, l(1.000000)
              mad r10.w, r7.z, l(-2.000000), l(3.000000)
              mul r7.z, r7.z, r7.z
              mad r7.z, -r10.w, r7.z, l(1.000000)
              mul r10.w, r7.z, r7.z
              mul r10.w, r10.w, r10.w
              mul r7.z, r7.z, r10.w
              mul r7.z, r0.x, r7.z
              mul r7.z, r7.z, l(20.000000)
              add r6.w, r6.w, l(0.500000)
              mul_sat r6.w, r6.w, l(4.000000)
              mad r10.w, r6.w, l(-2.000000), l(3.000000)
              mul r6.w, r6.w, r6.w
              mul r6.w, r6.w, r10.w
              mul r10.w, r6.w, r7.z
              mov r15.x, r14.x
              mul r18.xyz, r10.wwww, r15.xyzx
              mad r18.xyz, r18.xyzx, r7.wwww, r13.xyzx
              mad_sat r6.w, -r7.z, r6.w, l(1.000000)
              mul r7.z, r6.w, r6.w
              mul r7.z, r7.z, r7.z
              mul r6.w, r6.w, r7.z
              mul r6.w, r6.w, r10.w
              mad r19.xyz, r6.wwww, r15.xyzx, r8.xyzx
              movc r8.xyz, r5.wwww, r19.xyzx, r8.xyzx
              movc r13.xyz, r5.wwww, r18.xyzx, r13.xyzx
            endif 
          endif 
          break 
          case l(2)
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r2.w, l(56), t12.wxyz
          add r19.xyz, r18.yzwy, -v6.xyzx
          dp3 r5.w, r19.xyzx, r19.xyzx
          rsq r5.w, r5.w
          mul r19.xyz, r5.wwww, r19.xyzx
          dp3 r5.w, r1.xyzx, r19.xyzx
          lt r6.w, l(0.000000), |r5.w|
          if_nz r6.w
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r20.xyzw, r2.w, l(116), t12.xyzw
            dp4 r6.w, r20.xyzw, r9.xyzw
            lt r7.z, r6.w, l(1.000000)
            if_nz r7.z
              mov r20.xyz, l(1.000000,1.000000,1.000000,0)
              mov r7.z, l(0)
            else 
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r21.xyzw, r2.w, l(72), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r22.xyzw, r2.w, l(172), t12.yzwx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.xyzw, r2.w, l(188), t12.wxyz
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r24.xyzw, r2.w, l(204), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r7.w, r2.w, l(236), t12.xxxx
              add r25.xyz, r14.yzwy, -v6.xyzx
              mul r3.w, r3.w, r3.w
              dp3 r10.w, r25.xyzx, r25.xyzx
              div r3.w, r3.w, r10.w
              min r3.w, r3.w, l(1.000000)
              mad_sat r16.xy, r6.wwww, r16.xzxx, r16.ywyy
              mul r16.zw, r16.xxxy, r16.xxxy
              mad r16.xy, r16.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
              mul r16.xy, r16.xyxx, r16.zwzz
              mul r3.w, r3.w, r16.x
              mul r3.w, r16.y, r3.w
              mov r18.yzw, r21.xxyz
              dp4 r16.x, r18.xyzw, r9.xyzw
              mov r17.x, r21.w
              dp4 r16.y, r17.xyzw, r9.xyzw
              div r10.xy, r16.xyxx, r6.wwww
              lt r6.w, r22.w, l(0.00048828)
              if_nz r6.w
                mov r23.y, r24.x
                mad_sat r16.xy, |r10.xyxx|, r23.zwzz, r23.xyxx
                mul r16.zw, r16.xxxy, r16.xxxy
                mad r16.xy, r16.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
                mul r16.xy, r16.xyxx, r16.zwzz
                mul r6.w, r16.y, r16.x
              else 
                mov r22.w, r23.y
                mul_sat r16.xyzw, |r10.yyxx|, r22.xyzw
                log r16.xyzw, r16.xyzw
                mul r16.xyzw, r16.xyzw, r23.xxxx
                exp r16.xyzw, r16.xyzw
                add r16.xy, r16.zwzz, r16.xyxx
                log r16.xy, r16.xyxx
                mul r16.xy, r16.xyxx, r24.xxxx
                exp r16.xy, r16.xyxx
                mul r10.w, r16.x, r23.z
                mad r11.w, r23.w, r16.y, l(-1.000000)
                mad r10.w, r23.w, r16.y, -r10.w
                div_sat r10.w, r11.w, r10.w
                mul r11.w, r10.w, r10.w
                mad r10.w, r10.w, l(-2.000000), l(3.000000)
                mul r6.w, r10.w, r11.w
              endif 
              mul r7.z, r3.w, r6.w
              and r3.w, r7.w, l(255)
              if_nz r3.w
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyz, r2.w, l(220), t12.xyzx
                dp3 r2.w, r24.yzwy, r10.xyzx
                dp3 r6.w, r16.xyzx, r10.xyzx
                frc r16.x, r2.w
                frc r16.y, r6.w
                iadd r2.w, r3.w, l(-1)
                utof r16.z, r2.w
                sample_l_indexable(texture2darray)(float,float,float,float) r20.xyz, r16.xyzx, t20.xyzw, s2, l(0.000000)
              else 
                mov r20.xyz, l(1.000000,1.000000,1.000000,0)
              endif 
            endif 
            mov r14.yz, r15.yyzy
            mul r10.xyw, r20.xyxz, r14.xyxz
            lt r2.w, l(0.000000), r7.z
            if_nz r2.w
              mul r2.w, r4.x, r15.x
              mul r2.w, r2.w, l(0.250000)
              lt r3.w, l(0.000000), r5.w
              dp3 r5.w, r2.xyzx, -r19.xyzx
              add r6.w, -r0.w, r5.w
              min r6.w, |r6.w|, l(1.000000)
              mul r6.w, r6.w, l(10.000000)
              min r6.w, r6.w, l(1.000000)
              mad r7.z, r6.w, l(-2.000000), l(3.000000)
              mul r6.w, r6.w, r6.w
              mad r6.w, -r7.z, r6.w, l(1.000000)
              mul r7.z, r6.w, r6.w
              mul r7.z, r7.z, r7.z
              mul r6.w, r6.w, r7.z
              mul r6.w, r0.x, r6.w
              mul r6.w, r6.w, l(20.000000)
              add r5.w, r5.w, l(0.500000)
              mul_sat r5.w, r5.w, l(4.000000)
              mad r7.z, r5.w, l(-2.000000), l(3.000000)
              mul r5.w, r5.w, r5.w
              mul r5.w, r5.w, r7.z
              mul r7.z, r5.w, r6.w
              mul r14.xyz, r10.xywx, r7.zzzz
              mad r14.xyz, r14.xyzx, r2.wwww, r13.xyzx
              mad_sat r2.w, -r6.w, r5.w, l(1.000000)
              mul r5.w, r2.w, r2.w
              mul r5.w, r5.w, r5.w
              mul r2.w, r2.w, r5.w
              mul r2.w, r2.w, r7.z
              mad r10.xyw, r2.wwww, r10.xyxw, r8.xyxz
              movc r8.xyz, r3.wwww, r10.xywx, r8.xyzx
              movc r13.xyz, r3.wwww, r14.xyzx, r13.xyzx
            endif 
          endif 
          break 
          default 
          break 
        endswitch 
      endif 
    endif 
  endloop 
  mov r11.xyz, r8.xyzx
  mov r12.xyz, r13.xyzx
  iadd r0.y, r0.y, l(32)
endloop 
add r0.xyz, -cb0[13].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r0.xyz, r0.xyzx, r11.xyzx
mad r0.xyz, r12.xyzx, cb0[13].xyzx, r0.xyzx
lt r0.w, l(0.000000), cb2[9].z
if_nz r0.w
  dp3 r0.w, v6.xyzx, v6.xyzx
  rsq r1.x, r0.w
  mul r1.xyz, r1.xxxx, v6.xyzx
  sqrt r0.w, r0.w
  lt r1.w, l(0.000000), cb2[13].w
  if_nz r1.w
    mad r2.xy, r0.wwww, cb2[15].xyxx, cb2[14].zwzz
    mul r2.xy, r2.xyxx, cb2[16].xyxx
    lt r1.w, l(0.010000), |v6.z|
    mul r2.zw, v6.zzzz, cb2[15].zzzw
    mul r3.xy, r2.zwzz, l(-1.442695, -1.442695, 0.000000, 0.000000)
    exp r3.xy, r3.xyxx
    add r3.xy, -r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    div r2.zw, r3.xxxy, r2.zzzw
    mul r2.zw, r2.zzzw, r2.xxxy
    movc r2.xy, r1.wwww, r2.zwzz, r2.xyxx
    mul r2.xzw, r2.xxxx, cb2[12].xxyz
    exp r2.xzw, r2.xxzw
    mul r3.xyz, r2.yyyy, cb2[12].xyzx
    exp r3.xyz, r3.xyzx
    add r3.xyz, -r2.xzwx, r3.xyzx
    mad r2.xyz, cb2[13].wwww, r3.xyzx, r2.xzwx
  else 
    mad r1.w, r0.w, cb2[15].x, cb2[14].z
    mul r1.w, r1.w, cb2[16].x
    lt r2.w, l(0.010000), |v6.z|
    mul r3.x, v6.z, cb2[15].z
    mul r3.y, r3.x, l(-1.442695)
    exp r3.y, r3.y
    add r3.y, -r3.y, l(1.000000)
    div r3.x, r3.y, r3.x
    mul r3.x, r1.w, r3.x
    movc r1.w, r2.w, r3.x, r1.w
    mul r3.xyz, r1.wwww, cb2[12].xyzx
    exp r2.xyz, r3.xyzx
  endif 
  mad r2.xyz, r2.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r2.xyz, r2.xyzx, -cb2[9].zzzz
  dp3 r1.x, cb2[7].yzwy, -r1.xyzx
  mad r1.y, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r1.z, cb2[8].w, -r1.x, l(1.000000)
  mul r1.z, r1.z, r1.z
  mul r1.z, r1.z, l(12.566371)
  div r1.y, r1.y, r1.z
  add r0.w, r0.w, -cb2[10].w
  mul_sat r0.w, r0.w, cb2[11].w
  mul r0.w, r0.w, r1.y
  mov_sat r1.x, r1.x
  mad r1.x, r1.x, r1.x, l(1.000000)
  mad r1.x, r1.x, l(0.05968310), l(-1.000000)
  mad r1.x, cb2[8].z, r1.x, l(1.000000)
  mul r1.yzw, r0.wwww, cb2[11].xxyz
  mad r1.xyz, r1.xxxx, cb2[10].xyzx, r1.yzwy
  mul r1.xyz, r1.xyzx, cb2[9].wwww
  add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r1.xyz, r1.xyzx, r3.xyzx
  mad r1.xyz, r0.xyzx, r2.xyzx, r1.xyzx
else 
  mul r0.w, v6.z, cb2[6].x
  mad r1.w, cb2[6].x, v6.z, cb2[5].x
  lt r2.x, |r0.w|, l(0.000100)
  min r2.y, r1.w, l(64.000000)
  mul r2.y, r2.y, l(1.442695)
  exp r2.y, r2.y
  mov_sat r2.z, cb2[6].z
  lt r2.w, r1.w, l(0.000000)
  add r1.w, r1.w, l(1.000000)
  movc r1.w, r2.w, r2.y, r1.w
  add r1.w, r1.w, -cb2[6].z
  movc r0.w, r2.x, l(1.000000), r0.w
  div r0.w, r1.w, r0.w
  movc r0.w, r2.x, r2.z, r0.w
  mul r0.w, r0.w, cb2[5].z
  dp3 r1.w, v6.xyzx, v6.xyzx
  sqrt r2.x, r1.w
  mad r0.w, r0.w, r2.x, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  rsq r1.w, r1.w
  mul r2.xyz, r1.wwww, v6.xyzx
  dp3 r1.w, cb2[7].yzwy, r2.xyzx
  mad_sat r1.w, cb2[8].y, r1.w, cb2[8].x
  add r2.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r2.xyzw, r1.wwww, r2.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r2.w
  add r2.xyz, -r0.xyzx, r2.xyzx
  mad r1.xyz, r0.wwww, r2.xyzx, r0.xyzx
endif 
mul r0.xyz, r1.xyzx, cb1[85].yyyy
ge r1.xyz, r0.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.xyz, r0.xyzx, r1.xyzx
min o0.xyz, r0.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
mov o0.w, l(1.000000)
ret 
// Approximately 1386 instruction slots used
