//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:38:51 2021
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16
//   float4 detailScale1;               // Offset:   80 Size:    16
//   float4 detailScale2;               // Offset:   96 Size:    16
//   float4 detailScale3;               // Offset:  112 Size:    16
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float3 colorTint;                  // Offset:  160 Size:    12
//   float3 specColorTint;              // Offset:  176 Size:    12 [unused]
//   float baseNormalHeight;            // Offset:  188 Size:     4
//   float2 glossRange;                 // Offset:  192 Size:     8
//   float detailScaleHeight;           // Offset:  200 Size:     4
//   float detailScaleHeight1;          // Offset:  204 Size:     4
//   float detailScaleHeight2;          // Offset:  208 Size:     4
//   float detailScaleHeight3;          // Offset:  212 Size:     4
//   float metalFlakeNormalScale;       // Offset:  216 Size:     4
//   float metalFlakeMaskScale;         // Offset:  220 Size:     4
//   float flakeScaleHeight;            // Offset:  224 Size:     4 [unused]
//   float metalFlakeGloss;             // Offset:  228 Size:     4
//   float4 metalFlakeSpec;             // Offset:  240 Size:    16
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16 [unused]
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16
//   float4 debugNormalOverride;        // Offset:  960 Size:    16
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16
//   float4 debugGlossOverride;         // Offset:  992 Size:    16
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// colorSampler                      sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// specColorSampler                  sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// normalSampler                     sampler      NA          NA             s5      1 
// aoSampler                         sampler      NA          NA             s6      1 
// detailMaskSampler                 sampler      NA          NA             s7      1 
// metalFlakeSampler                 sampler      NA          NA             s8      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// metalFlakeNormalMap               texture  float4          2d             t0      1 
// metalFlakeMaskMap                 texture  float4          2d             t1      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// colorMap                          texture  float4          2d            t21      1 
// specColorMap                      texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// normalMap                         texture  float4          2d            t24      1 
// glossMap                          texture  float4          2d            t25      1 
// aoMap                             texture  float4          2d            t26      1 
// detailNormal1                     texture  float4          2d            t29      1 
// detailNormal2                     texture  float4          2d            t30      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// detailNormal3                     texture  float4          2d            t37      1 
// detailNormal4                     texture  float4          2d            t38      1 
// detailNormalMask                  texture  float4          2d            t46      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyz 
// COLOR                    1   x           1     NONE   float   x   
// TEXCOORD                 0    yz         1     NONE   float    yz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// OFFPOSITION              0   xyz         5     NONE   float   xyz 
// SV_IsFrontFace           0   x           6    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[16], immediateIndexed
dcl_constantbuffer CB1[93], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s8, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2d (float,float,float,float) t26
dcl_resource_texture2d (float,float,float,float) t29
dcl_resource_texture2d (float,float,float,float) t30
dcl_resource_texture2darray (float,float,float,float) t31
dcl_resource_texture2d (float,float,float,float) t37
dcl_resource_texture2d (float,float,float,float) t38
dcl_resource_texture2d (float,float,float,float) t46
dcl_input_ps_siv linear noperspective v0.xyz, position
dcl_input_ps linear v1.x
dcl_input_ps linear v1.yz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps_sgv constant v6.x, is_front_face
dcl_output o0.xyzw
dcl_temps 46
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.yzyy, t21.xyzw, s1
add r1.xyz, cb0[10].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r1.xyz, r0.wwww, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r0.xyz, r0.xyzx, r1.xyzx
mul r1.x, r0.w, v1.x
sample_indexable(texture2d)(float,float,float,float) r1.yzw, v1.yzyy, t22.wxyz, s3
sample_indexable(texture2d)(float,float,float,float) r2.x, v1.yzyy, t26.xyzw, s6
sample_indexable(texture2d)(float,float,float,float) r2.y, v1.yzyy, t25.yxzw, s3
add r2.z, -cb0[12].x, cb0[12].y
mad r2.y, r2.y, r2.z, cb0[12].x
mul_sat r2.y, r2.y, l(0.05882353)
sample_indexable(texture2d)(float,float,float,float) r3.xyz, v1.yzyy, t24.xyzw, s5
add r3.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.000000, 0.000000)
mad r3.xyz, cb0[11].wwww, r3.xyzx, l(0.500000, 0.500000, 0.000000, 0.000000)
mad r3.xy, r3.xyxx, l(1.99218750, 1.99218750, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r2.w, r3.xyxx, r3.xyxx
add r2.w, -r2.w, l(1.000000)
max r2.w, r2.w, l(0.000000)
sqrt r4.z, r2.w
mul r2.w, r3.z, r3.z
mul r2.w, r2.w, l(0.33333334)
min r2.w, r2.w, l(1.000000)
sample_indexable(texture2d)(float,float,float,float) r5.xyzw, v1.yzyy, t46.xyzw, s7
lt r3.z, l(0.000000), r5.x
mul r6.xy, v1.yzyy, cb0[7].xyxx
sample_indexable(texture2d)(float,float,float,float) r6.xyz, r6.xyxx, t29.xyzw, s5
mul r7.xy, v1.yzyy, cb0[6].xyxx
sample_indexable(texture2d)(float,float,float,float) r7.xyz, r7.xyxx, t30.xyzw, s5
mul r8.xy, v1.yzyy, cb0[5].xyxx
sample_indexable(texture2d)(float,float,float,float) r8.xyz, r8.xyxx, t37.xyzw, s5
mul r9.xy, v1.yzyy, cb0[4].xyxx
sample_indexable(texture2d)(float,float,float,float) r9.xyz, r9.xyxx, t38.xyzw, s5
if_nz r3.z
  mul r3.z, r5.x, cb0[13].y
  mov r9.xyz, r6.xyzx
else 
  lt r3.w, l(0.000000), r5.y
  if_nz r3.w
    mul r3.z, r5.y, cb0[13].x
    mov r9.xyz, r7.xyzx
  else 
    lt r3.w, l(0.000000), r5.z
    if_nz r3.w
      mul r3.z, r5.z, cb0[12].w
      mov r9.xyz, r8.xyzx
    else 
      lt r3.w, l(0.000000), r5.w
      if_nz r3.w
        mul r3.z, r5.w, cb0[12].z
      else 
        mov r9.xyz, l(0,0,0,0)
        mov r3.z, l(0)
      endif 
    endif 
  endif 
endif 
mad r5.xy, r9.xyxx, l(1.99218750, 1.99218750, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r3.w, r9.z, r9.z
mul r3.w, r3.w, l(0.33333334)
min r3.w, r3.w, l(1.000000)
mad r4.xy, r5.xyxx, r3.zzzz, r3.xyxx
dp3 r3.x, r4.xyzx, r4.xyzx
rsq r3.x, r3.x
mul r4.xyz, r3.xxxx, r4.xyzx
mad r2.w, r3.w, r3.z, r2.w
movc r3.x, v6.x, l(1.000000), l(-1.000000)
dp3 r3.y, v2.xyzx, v2.xyzx
rsq r3.y, r3.y
mul r3.yzw, r3.yyyy, v2.xxyz
mul r3.yzw, r3.xxxx, r3.yyzw
dp3 r4.w, v3.xyzx, v3.xyzx
rsq r4.w, r4.w
mul r5.xyz, r4.wwww, v3.xyzx
mul r5.xyz, r3.xxxx, r5.xyzx
dp3 r4.w, v4.xyzx, v4.xyzx
rsq r4.w, r4.w
mul r6.xyz, r4.wwww, v4.xyzx
mul r6.xyz, r3.xxxx, r6.xyzx
mul r2.y, r2.y, l(-17.000000)
exp r2.y, r2.y
add r2.y, r2.y, r2.w
log r2.y, r2.y
mul r7.xyz, r4.yyyy, r6.xyzx
mad r7.xyz, r5.xyzx, r4.xxxx, r7.xyzx
mad r7.xyz, r3.yzwy, r4.zzzz, r7.xyzx
dp3 r3.x, r7.xyzx, r7.xyzx
rsq r3.x, r3.x
mul r7.xyz, r3.xxxx, r7.xyzx
mad r2.z, cb1[62].x, r2.z, cb0[12].x
mul_sat r2.yz, r2.yyzy, l(0.000000, -0.05882353, 0.05882353, 0.000000)
mul r2.z, r2.z, l(-17.000000)
exp r2.z, r2.z
add r2.z, r2.z, r2.w
log r2.z, r2.z
mul_sat r2.z, r2.z, l(-0.05882353)
lt r3.x, l(0.000000), cb1[64].w
if_nz r3.x
  ftoi r3.x, cb1[64].w
  lod r4.w, v1.yzyy, t21.y, s1
  lod r5.w, v1.yzyy, t21.x, s1
  lt r4.w, r4.w, r5.w
  lt r5.w, l(0.000000), r5.w
  and r8.xyz, r3.xxxx, l(1, 2, 4, 0)
  movc r9.xyz, r8.xxxx, l(1.000000,0,1.000000,0), r0.xyzx
  movc r8.xyw, r8.yyyy, l(0,1.000000,0,1.000000), r0.xyxz
  movc r8.xyw, r5.wwww, r9.xyxz, r8.xyxw
  movc r9.xyz, r8.zzzz, l(0,1.000000,0,0), r0.xyzx
  movc r0.xyz, r4.wwww, r8.xywx, r9.xyzx
endif 
add r8.xyz, -r0.xyzx, cb1[58].xyzx
mad r0.xyz, cb1[58].wwww, r8.xyzx, r0.xyzx
mad r0.w, -r0.w, v1.x, cb1[59].x
mad r0.w, cb1[59].w, r0.w, r1.x
add r8.xyz, -r1.yzwy, cb1[61].xyzx
mad r1.xyz, cb1[61].wwww, r8.xyzx, r1.yzwy
add r1.w, -r2.y, r2.z
mad r8.y, cb1[62].w, r1.w, r2.y
add r1.w, -r2.x, cb1[63].x
mad r1.w, cb1[63].w, r1.w, r2.x
movc r2.xyz, v6.xxxx, v2.xyzx, -v2.xyzx
dp3 r3.x, r2.xyzx, r2.xyzx
rsq r3.x, r3.x
mad r2.xyz, r2.xyzx, r3.xxxx, -r7.xyzx
mad r7.xyz, cb1[60].wwww, r2.xyzx, r7.xyzx
ftou r2.xy, v0.xyxx
ge r2.z, v0.z, l(0.984375)
mul r3.x, v0.z, l(1.01587307)
mad r4.w, v0.z, l(64.000000), l(-63.000000)
movc r2.z, r2.z, r4.w, r3.x
max r2.z, r2.z, l(0.00000001)
rcp r2.z, r2.z
dp3 r3.x, -v5.xyzx, -v5.xyzx
rsq r3.x, r3.x
mul r9.xyz, r3.xxxx, -v5.xyzx
ine r4.w, cb1[92].x, l(0)
utof r8.zw, r2.yyyx
dp2 r5.w, r8.wzww, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r5.w, r5.w
mul r5.w, r5.w, l(52.982918)
frc r5.w, r5.w
mad r5.w, r5.w, l(6.28318548), cb1[70].w
sincos r10.x, r11.x, r5.w
dp2 r5.w, r8.zwzz, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r5.w, r5.w
mul r5.w, r5.w, l(52.982918)
frc r5.w, r5.w
mad r5.w, r5.w, l(6.28318548), cb1[70].w
sincos r12.x, r13.x, r5.w
dp3_sat r8.x, r7.xyzx, r9.xyzx
dp3 r5.w, -r9.xyzx, r7.xyzx
add r5.w, r5.w, r5.w
mad r14.xyz, r7.xyzx, -r5.wwww, -r9.xyzx
mul r5.w, r8.y, l(17.000000)
exp r5.w, r5.w
add r5.w, r5.w, l(2.000000)
div r5.w, l(2.000000), r5.w
sqrt r5.w, r5.w
dp3 r6.w, r7.xyzx, cb2[17].xyzx
mov_sat r8.z, r6.w
ge r8.w, l(0.000000), r8.z
if_nz r8.w
  mov r9.w, l(0)
endif 
if_z r8.w
  mul r10.yzw, v5.yyyy, cb2[29].xxyz
  mad r10.yzw, v5.xxxx, cb2[28].xxyz, r10.yyzw
  mad r10.yzw, v5.zzzz, cb2[30].xxyz, r10.yyzw
  add r10.yzw, r10.yyzw, cb2[31].xxyz
  add r8.w, r10.w, -cb2[17].w
  mad r8.w, -r8.w, l(0.00006104), l(1.000000)
  mov_sat r11.w, r8.w
  eq r11.w, r8.w, r11.w
  if_nz r11.w
    mov r11.w, l(0)
    mov r12.y, l(0)
    loop 
      ge r12.z, r11.w, l(3.000000)
      breakc_nz r12.z
      ftou r12.z, r11.w
      add r13.yz, r10.yyzy, -cb2[r12.z + 20].xxyx
      max r12.w, |r13.z|, |r13.y|
      mul r12.y, r12.w, cb2[r12.z + 20].z
      lt r12.z, r12.y, l(1.000000)
      if_nz r12.z
        break 
      endif 
      add r11.w, r11.w, l(1.000000)
      mov r12.y, l(0)
    endloop 
  else 
    mov r11.w, l(3.000000)
    mov r12.y, l(0)
  endif 
  ge r12.z, r11.w, l(3.000000)
  if_nz r12.z
    mul r13.yzw, l(0.000000, 128.000000, 0.500000, 0.500000), cb2[27].zzxy
    rcp r15.xz, r13.yyyy
    mov r15.y, -r15.z
    mad r13.yzw, r10.yyzy, r15.xxyz, r13.zzwz
    add r15.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r13.yzw, r13.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r13.yzw, r15.xxyz, r13.yyzw
    mul r15.xy, r13.wzww, cb2[32].xxxx
    round_ni r15.xy, r15.xyxx
    mul r12.w, r15.y, cb2[27].x
    mad r12.w, r12.w, cb2[32].x, r15.x
    ftou r12.w, r12.w
    iadd r12.w, r12.w, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.x, r12.w, l(0), t23.xxxx
    and r15.y, r15.x, l(0x40000000)
    ishl r15.z, r15.x, l(2)
    if_z r15.y
      and r15.y, r15.x, l(0x01ffffff)
      iadd r16.x, r12.w, r15.y
      ushr r12.w, r15.x, l(25)
      utof r12.w, r12.w
      mul r13.yzw, r12.wwww, r13.yyzw
      frc r13.yzw, r13.yyzw
      mul r13.yzw, r13.yyzw, l(0.000000, 128.000000, 128.000000, 128.000000)
      ftou r13.yzw, r13.yyzw
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.z, r16.x, l(0), t23.xxxx
      ushr r15.xy, r13.wzww, l(6, 6, 0, 0)
      and r12.w, r16.z, l(0xc0000000)
      iadd r15.w, r16.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.w, r15.w, l(0), t23.xxxx
      movc r15.y, r15.y, r16.z, r15.w
      ushr r15.w, r15.y, l(13)
      movc r15.x, r15.x, r15.w, r15.y
      and r15.x, r15.x, l(8191)
      iadd r17.x, r15.x, r16.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.z, r17.x, l(0), t23.xxxx
      mov r16.y, l(0)
      mov r17.y, l(1)
      movc r15.xyw, r12.wwww, r16.xyxz, r17.xyxz
      movc r17.yz, r12.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r18.xy, r13.wzww, r17.yyyy
      and r18.xy, r18.xyxx, l(1, 1, 0, 0)
      and r16.w, r15.w, l(0xc0000000)
      iadd r17.y, r15.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.y, r17.y, l(0), t23.xxxx
      movc r17.y, r18.y, r15.w, r17.y
      ushr r18.y, r17.y, l(13)
      movc r17.y, r18.x, r18.y, r17.y
      and r17.y, r17.y, l(8191)
      iadd r17.x, r15.x, r17.y
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.w, r17.x, l(0), t23.xxxx
      movc r15.xyw, r16.wwww, r15.xyxw, r17.xzxw
      movc r15.xyw, r12.wwww, r16.xyxz, r15.xyxw
      and r12.w, r15.w, l(0xc0000000)
      if_z r12.w
        iadd r12.w, -r15.y, l(6)
        ushr r16.xy, r13.wzww, r12.wwww
        or r12.w, r15.w, l(0x40000000)
        bfi r16.y, l(1), l(1), r16.y, l(0)
        bfi r16.x, l(1), l(0), r16.x, r16.y
        imul null, r16.x, r16.x, l(10)
        ushr r12.w, r12.w, r16.x
        and r12.w, r12.w, l(1023)
        iadd r16.x, r12.w, r15.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.w, r16.x, l(0), t23.xxxx
        iadd r16.yz, r15.yyyy, l(0, 1, 2, 0)
        iadd r12.w, -r16.y, l(6)
        ushr r17.xy, r13.wzww, r12.wwww
        and r12.w, r16.w, l(0xc0000000)
        or r15.y, r16.w, l(0x40000000)
        bfi r17.y, l(1), l(1), r17.y, l(0)
        bfi r17.x, l(1), l(0), r17.x, r17.y
        imul null, r17.x, r17.x, l(10)
        ushr r15.y, r15.y, r17.x
        and r15.y, r15.y, l(1023)
        iadd r17.x, r15.y, r16.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.z, r17.x, l(0), t23.xxxx
        mov r17.y, r16.z
        movc r17.xyz, r12.wwww, r16.xywx, r17.xyzx
        iadd r15.y, -r17.y, l(6)
        ushr r16.yz, r13.wwzw, r15.yyyy
        and r15.y, r17.z, l(0xc0000000)
        or r17.y, r17.z, l(0x40000000)
        bfi r16.z, l(1), l(1), r16.z, l(0)
        bfi r16.y, l(1), l(0), r16.y, r16.z
        imul null, r16.y, r16.y, l(10)
        ushr r16.y, r17.y, r16.y
        and r16.y, r16.y, l(1023)
        iadd r18.x, r16.y, r17.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.y, r18.x, l(0), t23.xxxx
        movc r16.yz, r15.yyyy, r17.xxzx, r18.xxyx
        movc r15.xw, r12.wwww, r16.xxxw, r16.yyyz
      endif 
      and r12.w, r15.w, l(0xc0000000)
      if_z r12.w
        ubfe r15.y, l(14), l(15), r15.w
        utof r15.y, r15.y
        mul r15.y, r15.y, cb2[27].w
        mul r15.y, r15.y, l(0.00006104)
        and r16.xy, r15.wwww, l(0x00007fff, 0x20000000, 0, 0)
        utof r16.x, r16.x
        mul r16.x, r16.x, cb2[27].w
        mul r16.x, r16.x, l(0.00003052)
        and r16.z, r13.z, l(3)
        iadd r16.z, r15.x, r16.z
        iadd r16.z, r16.z, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.z, r16.z, l(0), t23.xxxx
        bfi r17.xyz, l(2, 2, 1, 0), l(3, 1, 4, 0), r13.yzwy, l(0, 0, 0, 0)
        ushr r13.y, r16.z, r17.x
        and r13.y, r13.y, l(255)
        utof r13.y, r13.y
        mul r13.y, r16.x, r13.y
        mad r13.y, r13.y, l(0.00392157), r15.y
        iadd r13.z, r17.y, l(1)
        ubfe r13.w, l(1), l(1), r13.w
        iadd r13.z, r13.w, r13.z
        iadd r13.z, r13.z, r15.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r13.z, r13.z, l(0), t23.xxxx
        ushr r13.z, r13.z, r17.z
        and r13.z, r13.z, l(0x0000ffff)
        utof r13.z, r13.z
        mul r13.z, r16.x, r13.z
        mad r13.z, r13.z, l(0.00001526), r15.y
        movc r15.z, r16.y, r13.y, r13.z
      else 
        and r13.y, r15.w, l(0x80000000)
        iadd r13.z, r15.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r13.z, r13.z, l(0), t23.xxxx
        movc r13.y, r13.y, r13.z, l(0)
        ishl r13.z, r15.w, l(2)
        ushr r13.w, r13.y, l(16)
        and r13.y, r13.y, l(0x0000ffff)
        f16tof32 r13.yw, r13.yyyw
        mad r13.z, r10.y, r13.w, r13.z
        mad r13.y, r10.z, r13.y, r13.z
        movc r15.z, r12.w, r13.y, r15.z
      endif 
    endif 
    mad r10.w, -cb2[27].z, l(2.000000), r10.w
    lt r10.w, r15.z, r10.w
    movc r9.w, r10.w, l(0), l(1.000000)
  endif 
  if_z r12.z
    if_z cb2[58].y
      ftou r10.w, r11.w
      add r12.zw, r10.yyyz, -cb2[r10.w + 20].xxxy
      mul r12.zw, r12.zzzw, cb2[r10.w + 20].zzzz
      mad r15.xy, r12.zwzz, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r10.w, cb2[26].y
      add r15.z, r10.w, r11.w
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.w, r15.xyzx, t13.xxxx, s13, r8.w
      sample_l_indexable(texture2darray)(float,float,float,float) r12.z, r15.xyzx, t31.yzxw, s0, l(0.000000)
      add r10.w, r10.w, r12.z
      add_sat r10.w, r10.w, l(-1.000000)
      mul r12.z, r10.w, r10.w
      mul r9.w, r10.w, r12.z
    endif 
    if_nz cb2[58].y
      mov r15.x, -r10.x
      ftou r10.w, r11.w
      add r11.w, r11.w, l(1.000000)
      min r11.w, r11.w, l(2.000000)
      ftou r11.w, r11.w
      add r12.y, -r12.y, l(1.000000)
      mul r12.y, r12.y, l(28.000000)
      ftou r12.y, r12.y
      add r12.zw, r10.yyyz, -cb2[r10.w + 20].xxxy
      mul r12.zw, r12.zzzw, cb2[r10.w + 20].zzzz
      mad r12.zw, r12.zzzw, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
      add r10.yz, r10.yyzy, -cb2[r11.w + 20].xxyx
      mul r10.yz, r10.yyzy, cb2[r11.w + 20].zzzz
      mad r10.yz, r10.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      mov r15.y, r11.x
      mov r15.z, r10.x
      mov r13.yz, l(0,0,0,0)
      loop 
        uge r13.w, r13.z, l(8)
        breakc_nz r13.w
        ult r13.w, r12.y, r13.z
        movc r16.xy, r13.wwww, r10.yzyy, r12.zwzz
        movc r15.w, r13.w, cb2[r11.w + 20].w, cb2[r10.w + 20].w
        movc r13.w, r13.w, r11.w, r10.w
        dp2 r17.x, icb[r13.z + 0].yxyy, r15.xyxx
        dp2 r17.y, icb[r13.z + 0].yxyy, r15.yzyy
        mad r16.xy, r17.xyxx, r15.wwww, r16.xyxx
        iadd r13.w, r13.w, cb2[26].y
        utof r16.z, r13.w
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r13.w, r16.xyzx, t13.xxxx, s13, r8.w
        sample_l_indexable(texture2darray)(float,float,float,float) r15.w, r16.xyzx, t31.yzwx, s0, l(0.000000)
        add r13.w, r13.w, r15.w
        add_sat r13.w, r13.w, l(-1.000000)
        mad r13.y, r13.w, l(0.125000), r13.y
        iadd r13.z, r13.z, l(1)
      endloop 
      mul r8.w, r13.y, r13.y
      mul r9.w, r13.y, r8.w
    endif 
  endif 
endif 
lt r8.w, l(0.000000), r8.z
if_nz r8.w
  lt r8.w, l(0.000000), r9.w
  if_nz r8.w
    if_nz cb2[23].x
      add r15.xyz, v5.xyzx, cb1[24].xyzx
      mov r15.w, l(1.000000)
      dp4 r8.w, cb2[24].xyzw, r15.xyzw
      dp4 r10.y, cb2[25].xyzw, r15.xyzw
      frc r15.x, r8.w
      frc r15.y, r10.y
      iadd r8.w, l(-1), cb2[23].x
      utof r15.z, r8.w
      sample_l_indexable(texture2darray)(float,float,float,float) r10.yzw, r15.xyzx, t20.wxyz, s2, l(0.000000)
      add r10.yzw, r10.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
      mad r10.yzw, cb2[23].yyyy, r10.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
      mul r10.yzw, r10.yyzw, cb2[18].xxyz
    else 
      mov r10.yzw, cb2[18].xxyz
    endif 
    ushr r8.w, cb2[53].x, l(16)
    ult r11.w, l(0), r8.w
    and r11.w, r4.w, r11.w
    if_nz r11.w
      iadd r8.w, r8.w, cb2[0].x
      iadd r8.w, r8.w, l(-1)
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r11.w, r8.w, l(52), t12.xxxx
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r8.w, l(68), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r8.w, l(84), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r8.w, l(132), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r8.w, l(148), t12.xyzw
      mad r12.y, |r6.w|, l(-0.200000), l(0.400000)
      mad r19.xyz, r7.xyzx, r12.yyyy, v5.xyzx
      mov r19.w, l(1.000000)
      dp4 r15.x, r15.xyzw, r19.xyzw
      dp4 r15.y, r16.xyzw, r19.xyzw
      mad r12.yz, r15.xxyx, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      add r12.yz, r18.zzwz, r12.yyzy
      mul r12.yz, r18.xxyx, r12.yyzy
      div r13.yz, r11.wwww, r17.xxzx
      add r15.xy, -r13.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
      ge r15.xy, r12.yzyy, r15.xyxx
      ge r13.yz, r13.yyzy, r12.yyzy
      or r13.yz, r13.yyzy, r15.xxyx
      or r12.w, r13.z, r13.y
      if_z r12.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.w, r8.w, l(28), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r8.w, l(100), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.yz, r8.w, l(164), t12.xxyx
        dp4 r8.w, r15.xyzw, r19.xyzw
        mov_sat r12.yz, r12.yyzy
        mad r15.xy, r12.yzyy, r17.xzxx, r17.ywyy
        add r8.w, r13.y, r8.w
        div r8.w, r8.w, r13.z
        max r8.w, r8.w, l(0.00006104)
        and r12.y, r12.w, l(0x0000ffff)
        if_nz cb2[58].y
          mov r16.x, -r10.x
          utof r17.z, r12.y
          mov r16.y, r11.x
          mov r16.z, r10.x
          mov r12.zw, l(0,0,0,0)
          loop 
            ige r13.y, r12.w, l(8)
            breakc_nz r13.y
            dp2 r18.x, icb[r12.w + 0].yxyy, r16.xyxx
            dp2 r18.y, icb[r12.w + 0].yxyy, r16.yzyy
            mad r17.xy, r18.xyxx, r11.wwww, r15.xyxx
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r13.y, r17.xyzx, t9.xxxx, s13, r8.w
            mad r12.z, r13.y, l(0.125000), r12.z
            iadd r12.w, r12.w, l(1)
          endloop 
        else 
          utof r15.z, r12.y
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.z, r15.xyzx, t9.xxxx, s13, r8.w
        endif 
        mul r8.w, r12.z, r12.z
        mul r8.w, r12.z, r8.w
      else 
        mov r8.w, l(1.000000)
      endif 
      mul r9.w, r8.w, r9.w
    else 
      and r8.w, cb2[53].x, l(0x0000ffff)
      ult r11.w, l(0), r8.w
      not r12.y, r4.w
      and r11.w, r11.w, r12.y
      if_nz r11.w
        iadd r8.w, r8.w, cb2[0].x
        iadd r8.w, r8.w, l(-1)
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r11.w, r8.w, l(52), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r8.w, l(68), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r8.w, l(84), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r8.w, l(132), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r8.w, l(148), t12.xyzw
        mad r12.y, |r6.w|, l(-0.200000), l(0.400000)
        mad r19.xyz, r7.xyzx, r12.yyyy, v5.xyzx
        mov r19.w, l(1.000000)
        dp4 r15.x, r15.xyzw, r19.xyzw
        dp4 r15.y, r16.xyzw, r19.xyzw
        mad r12.yz, r15.xxyx, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
        add r12.yz, r18.zzwz, r12.yyzy
        mul r12.yz, r18.xxyx, r12.yyzy
        div r13.yz, r11.wwww, r17.xxzx
        add r15.xy, -r13.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
        ge r15.xy, r12.yzyy, r15.xyxx
        ge r13.yz, r13.yyzy, r12.yyzy
        or r13.yz, r13.yyzy, r15.xxyx
        or r12.w, r13.z, r13.y
        if_z r12.w
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.w, r8.w, l(28), t12.xxxx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r8.w, l(100), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.yz, r8.w, l(164), t12.xxyx
          dp4 r8.w, r15.xyzw, r19.xyzw
          mov_sat r12.yz, r12.yyzy
          mad r15.xy, r12.yzyy, r17.xzxx, r17.ywyy
          add r8.w, r13.y, r8.w
          div r8.w, r8.w, r13.z
          max r8.w, r8.w, l(0.00006104)
          and r12.y, r12.w, l(0x0000ffff)
          if_nz cb2[58].y
            mov r16.x, -r10.x
            utof r17.z, r12.y
            mov r16.y, r11.x
            mov r16.z, r10.x
            mov r12.zw, l(0,0,0,0)
            loop 
              ige r13.y, r12.w, l(8)
              breakc_nz r13.y
              dp2 r18.x, icb[r12.w + 0].yxyy, r16.xyxx
              dp2 r18.y, icb[r12.w + 0].yxyy, r16.yzyy
              mad r17.xy, r18.xyxx, r11.wwww, r15.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r13.y, r17.xyzx, t9.xxxx, s13, r8.w
              mad r12.z, r13.y, l(0.125000), r12.z
              iadd r12.w, r12.w, l(1)
            endloop 
          else 
            utof r15.z, r12.y
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.z, r15.xyzx, t9.xxxx, s13, r8.w
          endif 
          mul r8.w, r12.z, r12.z
          mul r8.w, r12.z, r8.w
        else 
          mov r8.w, l(1.000000)
        endif 
        mul r9.w, r8.w, r9.w
      endif 
    endif 
    mad r8.w, -r8.x, l(0.500000), l(1.000000)
    mad r8.w, -r8.z, r8.w, l(1.000000)
    mul r8.w, r8.w, r8.w
    mad r8.w, -r8.w, l(0.620000), l(0.620000)
    add r8.w, -r8.z, r8.w
    mad r8.z, r5.w, r8.w, r8.z
    mul r8.z, r9.w, r8.z
    mul r10.yzw, r10.yyzw, r8.zzzz
    lt r6.w, l(0.000000), r6.w
    and r10.yzw, r10.yyzw, r6.wwww
  else 
    mov r10.yzw, l(0,0,0,0)
  endif 
else 
  mov r10.yzw, l(0,0,0,0)
endif 
mul r2.z, r2.z, l(0.00781250)
min r2.z, r2.z, l(15.000000)
ftou r2.z, r2.z
ushr r15.xy, r2.xyxx, l(6, 6, 0, 0)
ishl r15.z, r2.z, l(4)
mov r16.y, -r10.x
not r2.x, r4.w
mad r2.y, -r8.x, l(0.500000), l(1.000000)
mov r17.xy, l(0,0,0,0)
mov r18.w, l(0)
mov r19.xyz, v5.xyzx
mov r19.w, l(1.000000)
mov r20.w, l(1.000000)
mov r16.z, r10.x
mov r21.w, l(1.000000)
mov r22.z, l(1.000000)
mov r23.w, l(1.000000)
mov r16.xw, r11.xxxx
mov r24.z, r10.x
mov r24.x, r16.w
mov r25.w, l(1.000000)
mov r11.y, r16.y
mov r11.z, r24.z
mov r26.w, l(1.000000)
mov r27.x, r11.x
mov r27.y, r16.y
mov r27.z, r24.z
mov r28.x, r11.x
mov r28.y, r16.y
mov r28.z, r24.z
mov r29.x, r11.x
mov r29.y, r16.y
mov r29.z, r24.z
mov r12.yzw, r10.yyzw
mov r2.z, cb2[58].y
mov r6.w, l(0)
loop 
  uge r8.z, r6.w, cb2[0].x
  breakc_nz r8.z
  ushr r17.z, r6.w, l(5)
  iadd r18.xyz, r15.xyzx, r17.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r8.z, r18.xyzw, t6.yzxw
  mov r13.yzw, r12.yyzw
  mov r8.w, r2.z
  mov r9.w, r8.z
  loop 
    breakc_z r9.w
    firstbit_lo r10.x, r9.w
    ishl r11.w, l(1), r10.x
    and r15.w, r9.w, r11.w
    if_nz r15.w
      xor r9.w, r9.w, r11.w
      iadd r10.x, r6.w, r10.x
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r30.xyzw, r10.x, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r18.xy, r10.x, l(16), t11.xyxx
      add r30.xyz, r30.xyzx, -v5.xyzx
      mov r18.z, r30.w
      lt r18.xyz, |r30.xyzx|, r18.zxyz
      and r11.w, r18.y, r18.x
      and r11.w, r18.z, r11.w
      if_nz r11.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r30.xyzw, r10.x, l(0), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xy, r10.x, l(16), t12.xyxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r10.x, l(28), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r10.x, l(44), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r10.x, l(60), t12.zwxy
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r10.x, l(76), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r10.x, l(92), t12.zwxy
        ubfe r11.w, l(3), l(24), r32.x
        switch r11.w
          case l(4)
          lt r11.w, l(0.000000), r36.x
          mov r18.x, r35.w
          mov r18.yz, r36.zzwz
          mad r37.xyz, -r18.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r30.xyzx
          add r38.xyz, r37.xyzx, -v5.xyzx
          dp3 r15.w, r18.xyzx, r38.xyzx
          div_sat r15.w, -r15.w, r36.x
          mad r18.xyz, r15.wwww, r18.xyzx, r37.xyzx
          movc r18.xyz, r11.wwww, r18.xyzx, r30.xyzx
          add r18.xyz, r18.xyzx, -v5.xyzx
          dp3 r11.w, r18.xyzx, r18.xyzx
          rsq r15.w, r11.w
          mul r18.xyz, r15.wwww, r18.xyzx
          dp3 r15.w, r7.xyzx, r18.xyzx
          mov_sat r17.z, r15.w
          lt r17.w, l(0.000000), r17.z
          if_nz r17.w
            sqrt r17.w, r11.w
            mul r18.x, r33.y, r33.y
            div r11.w, r18.x, r11.w
            min r11.w, r11.w, l(1.000000)
            mad_sat r18.x, r17.w, r32.y, r32.z
            mad_sat r17.w, r17.w, r32.w, r33.x
            mul r18.y, r18.x, r18.x
            mad r18.x, r18.x, l(-2.000000), l(3.000000)
            mul r18.x, r18.x, r18.y
            mul r11.w, r11.w, r18.x
            mul r18.x, r17.w, r17.w
            mad r17.w, r17.w, l(-2.000000), l(3.000000)
            mul r17.w, r17.w, r18.x
            mul r11.w, r11.w, r17.w
            lt r17.w, l(0.000000), r11.w
            if_nz r17.w
              ubfe r17.w, l(3), l(27), r32.x
              ine r17.w, r17.w, l(1)
              if_nz r17.w
                mad r17.w, |r15.w|, l(-0.200000), l(0.400000)
                mad r18.xyz, r7.xyzx, r17.wwww, v5.xyzx
                mov r34.z, r35.x
                add r18.xyz, r18.xyzx, -r34.xyzx
                max r17.w, |r18.z|, |r18.y|
                max r17.w, r17.w, |r18.x|
                div r17.w, r35.y, r17.w
                add r17.w, r35.z, r17.w
                dp3 r22.w, r18.xyzx, r18.xyzx
                rsq r22.w, r22.w
                max r17.w, r17.w, l(0.00006104)
                and r24.w, r32.x, l(0x0000ffff)
                utof r37.w, r24.w
                mov r24.w, l(0)
                mov r27.w, l(0)
                loop 
                  ige r28.w, r27.w, l(8)
                  breakc_nz r28.w
                  dp2 r38.y, icb[r27.w + 0].xyxx, r16.xyxx
                  dp2 r38.z, icb[r27.w + 0].yxyy, r16.xzxx
                  mul r38.yz, r33.zzzz, r38.yyzy
                  mul r38.x, r13.x, r38.y
                  mul r38.w, r12.x, r38.y
                  mad r37.xyz, r18.xyzx, r22.wwww, r38.xzwx
                  sample_c_lz_indexable(texturecubearray)(float,float,float,float) r28.w, r37.xyzw, t10.xxxx, s13, r17.w
                  mad r24.w, r28.w, l(0.125000), r24.w
                  iadd r27.w, r27.w, l(1)
                endloop 
              else 
                mov r24.w, l(1.000000)
              endif 
              mul r11.w, r11.w, r24.w
              lt r17.w, l(0.000000), r11.w
              if_nz r17.w
                ubfe r17.w, l(4), l(16), r32.x
                ult r18.x, l(0), r17.w
                and r18.x, r4.w, r18.x
                if_nz r18.x
                  iadd r17.w, r17.w, cb2[0].x
                  iadd r17.w, r17.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.x, r17.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r17.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r17.w, l(116), t12.xyzw
                  mad r18.y, |r15.w|, l(-0.200000), l(0.400000)
                  mad r20.xyz, r7.xyzx, r18.yyyy, v5.xyzx
                  dp4 r18.y, r37.xyzw, r20.xyzw
                  dp4 r18.z, r38.xyzw, r20.xyzw
                  lt r22.w, r18.z, r18.y
                  if_z r22.w
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r17.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r17.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r17.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r17.w, l(148), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xy, r17.w, l(164), t12.xyxx
                    dp4 r37.x, r37.xyzw, r20.xyzw
                    dp4 r37.y, r38.xyzw, r20.xyzw
                    div r20.xy, r37.xyxx, r18.zzzz
                    mad r20.xy, r20.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r20.xy, r40.zwzz, r20.xyxx
                    mul r20.xy, r40.xyxx, r20.xyxx
                    div r37.xy, r18.xxxx, r39.xzxx
                    add r37.zw, -r37.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                    ge r37.zw, r20.xxxy, r37.zzzw
                    ge r37.xy, r37.xyxx, r20.xyxx
                    or r37.xy, r37.xyxx, r37.zwzz
                    or r20.z, r37.y, r37.x
                    mov_sat r20.xy, r20.xyxx
                    mad r37.xy, r20.xyxx, r39.xzxx, r39.ywyy
                    mul r20.x, r18.z, r41.y
                    mad r18.y, r41.x, r18.z, r18.y
                    div r18.y, r18.y, r20.x
                  else 
                    mov r20.z, l(-1)
                  endif 
                  or r18.z, r22.w, r20.z
                  if_z r18.z
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.w, r17.w, l(28), t12.xxxx
                    max r18.y, r18.y, l(0.00006104)
                    and r17.w, r17.w, l(0x0000ffff)
                    if_nz r8.w
                      utof r20.z, r17.w
                      mov r18.z, l(0)
                      mov r22.w, l(0)
                      loop 
                        ige r27.w, r22.w, l(8)
                        breakc_nz r27.w
                        dp2 r38.x, icb[r22.w + 0].yxyy, r16.ywyy
                        dp2 r38.y, icb[r22.w + 0].yxyy, r24.xzxx
                        mad r20.xy, r38.xyxx, r18.xxxx, r37.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r20.x, r20.xyzx, t9.xxxx, s13, r18.y
                        mad r18.z, r20.x, l(0.125000), r18.z
                        iadd r22.w, r22.w, l(1)
                      endloop 
                    else 
                      utof r37.z, r17.w
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r18.z, r37.xyzx, t9.xxxx, s13, r18.y
                    endif 
                    mul r17.w, r18.z, r18.z
                    mul r17.w, r18.z, r17.w
                  else 
                    mov r17.w, l(1.000000)
                  endif 
                  mul r11.w, r11.w, r17.w
                else 
                  ubfe r17.w, l(4), l(20), r32.x
                  ult r18.x, l(0), r17.w
                  and r18.x, r2.x, r18.x
                  if_nz r18.x
                    iadd r17.w, r17.w, cb2[0].x
                    iadd r17.w, r17.w, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.x, r17.w, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r17.w, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r17.w, l(116), t12.xyzw
                    mad r18.y, |r15.w|, l(-0.200000), l(0.400000)
                    mad r21.xyz, r7.xyzx, r18.yyyy, v5.xyzx
                    dp4 r18.y, r37.xyzw, r21.xyzw
                    dp4 r20.x, r38.xyzw, r21.xyzw
                    lt r20.y, r20.x, r18.y
                    if_z r20.y
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r17.w, l(68), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r17.w, l(84), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r17.w, l(132), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r17.w, l(148), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xy, r17.w, l(164), t12.xyxx
                      dp4 r37.x, r37.xyzw, r21.xyzw
                      dp4 r37.y, r38.xyzw, r21.xyzw
                      div r21.xy, r37.xyxx, r20.xxxx
                      mad r21.xy, r21.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                      add r21.xy, r40.zwzz, r21.xyxx
                      mul r21.xy, r40.xyxx, r21.xyxx
                      div r37.xy, r18.xxxx, r39.xzxx
                      add r37.zw, -r37.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                      ge r37.zw, r21.xxxy, r37.zzzw
                      ge r37.xy, r37.xyxx, r21.xyxx
                      or r37.xy, r37.xyxx, r37.zwzz
                      or r20.z, r37.y, r37.x
                      mov_sat r21.xy, r21.xyxx
                      mad r21.xy, r21.xyxx, r39.xzxx, r39.ywyy
                      mul r22.w, r20.x, r41.y
                      mad r18.y, r41.x, r20.x, r18.y
                      div r18.y, r18.y, r22.w
                    else 
                      mov r20.z, l(-1)
                    endif 
                    or r20.x, r20.y, r20.z
                    if_z r20.x
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.w, r17.w, l(28), t12.xxxx
                      max r18.y, r18.y, l(0.00006104)
                      and r17.w, r17.w, l(0x0000ffff)
                      if_nz r8.w
                        utof r20.z, r17.w
                        mov r22.w, l(0)
                        mov r27.w, l(0)
                        loop 
                          ige r28.w, r27.w, l(8)
                          breakc_nz r28.w
                          dp2 r37.x, icb[r27.w + 0].xyxx, r11.xyxx
                          dp2 r37.y, icb[r27.w + 0].yxyy, r11.xzxx
                          mad r20.xy, r37.xyxx, r18.xxxx, r21.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r20.x, r20.xyzx, t9.xxxx, s13, r18.y
                          mad r22.w, r20.x, l(0.125000), r22.w
                          iadd r27.w, r27.w, l(1)
                        endloop 
                      else 
                        utof r21.z, r17.w
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.w, r21.xyzx, t9.xxxx, s13, r18.y
                      endif 
                      mul r17.w, r22.w, r22.w
                      mul r17.w, r22.w, r17.w
                    else 
                      mov r17.w, l(1.000000)
                    endif 
                    mul r11.w, r11.w, r17.w
                  endif 
                endif 
                mad r17.w, -r17.z, r2.y, l(1.000000)
                mul r17.w, r17.w, r17.w
                mad r17.w, -r17.w, l(0.620000), l(0.620000)
                add r17.w, -r17.z, r17.w
                mad r17.z, r5.w, r17.w, r17.z
                mul r11.w, r11.w, r17.z
                mov r31.z, r30.w
                lt r15.w, l(0.000000), r15.w
                mad r20.xyz, r11.wwww, r31.zxyz, r13.yzwy
                movc r13.yzw, r15.wwww, r20.xxyz, r13.yyzw
              endif 
            endif 
          endif 
          break 
          case l(2)
          mov r20.x, r33.w
          mov r20.yz, r34.zzwz
          add r20.xyz, r20.xyzx, -v5.xyzx
          dp3 r11.w, r20.xyzx, r20.xyzx
          rsq r11.w, r11.w
          mul r20.xyz, r11.wwww, r20.xyzx
          dp3 r11.w, r7.xyzx, r20.xyzx
          mov_sat r15.w, r11.w
          lt r17.z, l(0.000000), r15.w
          if_nz r17.z
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r10.x, l(108), t12.zwxy
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r10.x, l(124), t12.xyzw
            mov r39.xy, r37.xyxx
            mov r39.zw, r38.xxxy
            dp4 r17.z, r39.xyzw, r19.xyzw
            lt r17.w, r17.z, l(1.000000)
            if_nz r17.w
              mov r20.xyz, l(1.000000,1.000000,1.000000,0)
              mov r17.w, l(0)
            else 
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r10.x, l(172), t12.yzwx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r10.x, l(188), t12.wxyz
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r10.x, l(204), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.x, r10.x, l(236), t12.xxxx
              add r21.xyz, r30.xyzx, -v5.xyzx
              mul r18.y, r33.y, r33.y
              dp3 r21.x, r21.xyzx, r21.xyzx
              div r18.y, r18.y, r21.x
              min r18.y, r18.y, l(1.000000)
              mad_sat r21.x, r17.z, r32.y, r32.z
              mad_sat r21.y, r17.z, r32.w, r33.x
              mul r21.z, r21.x, r21.x
              mad r21.x, r21.x, l(-2.000000), l(3.000000)
              mul r21.x, r21.x, r21.z
              mul r18.y, r18.y, r21.x
              mul r21.x, r21.y, r21.y
              mad r21.y, r21.y, l(-2.000000), l(3.000000)
              mul r21.x, r21.y, r21.x
              mul r18.y, r18.y, r21.x
              mov r34.zw, r35.xxxy
              dp4 r21.x, r34.xyzw, r19.xyzw
              mov r43.xy, r35.zwzz
              mov r43.zw, r36.zzzw
              dp4 r21.y, r43.xyzw, r19.xyzw
              div r22.xy, r21.xyxx, r17.zzzz
              lt r17.z, r40.w, l(0.00048828)
              if_nz r17.z
                mov r41.y, r42.x
                mad_sat r21.xy, |r22.xyxx|, r41.zwzz, r41.xyxx
                mul r30.xy, r21.xyxx, r21.xyxx
                mad r21.xy, r21.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
                mul r21.xy, r21.xyxx, r30.xyxx
                mul r17.z, r21.y, r21.x
              else 
                mov r40.w, r41.y
                mul_sat r40.xyzw, |r22.yyxx|, r40.xyzw
                log r40.xyzw, r40.xyzw
                mul r40.xyzw, r40.xyzw, r41.xxxx
                exp r40.xyzw, r40.xyzw
                add r21.xy, r40.zwzz, r40.xyxx
                log r21.xy, r21.xyxx
                mul r21.xy, r21.xyxx, r42.xxxx
                exp r21.xy, r21.xyxx
                mul r21.x, r21.x, r41.z
                mad r21.z, r41.w, r21.y, l(-1.000000)
                mad r21.x, r41.w, r21.y, -r21.x
                div_sat r21.x, r21.z, r21.x
                mul r21.y, r21.x, r21.x
                mad r21.x, r21.x, l(-2.000000), l(3.000000)
                mul r17.z, r21.x, r21.y
              endif 
              mul r17.w, r17.z, r18.y
              and r17.z, r18.x, l(255)
              if_nz r17.z
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r21.xyz, r10.x, l(220), t12.xyzx
                dp3 r18.x, r42.yzwy, r22.xyzx
                dp3 r18.y, r21.xyzx, r22.xyzx
                frc r21.xy, r18.xyxx
                iadd r17.z, r17.z, l(-1)
                utof r21.z, r17.z
                sample_l_indexable(texture2darray)(float,float,float,float) r20.xyz, r21.xyzx, t20.xyzw, s2, l(0.000000)
              else 
                mov r20.xyz, l(1.000000,1.000000,1.000000,0)
              endif 
            endif 
            mov r31.w, r30.w
            mul r20.xyz, r20.xyzx, r31.wxyw
            lt r17.z, l(0.000000), r17.w
            if_nz r17.z
              ubfe r17.z, l(3), l(27), r32.x
              ine r17.z, r17.z, l(1)
              if_nz r17.z
                mad r17.z, |r11.w|, l(-0.200000), l(0.400000)
                mad r23.xyz, r7.xyzx, r17.zzzz, v5.xyzx
                mov r37.xy, r36.xyxx
                dp4 r17.z, r37.xyzw, r23.xyzw
                dp4 r18.x, r39.xyzw, r23.xyzw
                ge r18.y, r18.x, r17.z
                if_nz r18.y
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xy, r10.x, l(140), t12.xyxx
                  mov r34.zw, r35.xxxy
                  dp4 r21.x, r34.xyzw, r23.xyzw
                  mov r36.xy, r35.zwzz
                  dp4 r21.y, r36.xyzw, r23.xyzw
                  div r21.xy, r21.xyxx, r18.xxxx
                  mad_sat r21.xy, r21.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  mad r21.xy, r21.xyxx, r38.zxzz, r38.wyww
                  div r10.x, r17.z, r18.x
                  max r10.x, r10.x, l(0.00006104)
                  and r17.z, r32.x, l(0x0000ffff)
                  if_nz r8.w
                    utof r23.z, r17.z
                    mov r18.xy, l(0,0,0,0)
                    loop 
                      ige r22.x, r18.y, l(8)
                      breakc_nz r22.x
                      dp2 r22.x, icb[r18.y + 0].xyxx, r27.xyxx
                      dp2 r22.y, icb[r18.y + 0].yxyy, r27.xzxx
                      mad r23.xy, r22.xyxx, r33.zzzz, r21.xyxx
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.x, r23.xyzx, t9.xxxx, s13, r10.x
                      mad r18.x, r22.x, l(0.125000), r18.x
                      iadd r18.y, r18.y, l(1)
                    endloop 
                  else 
                    utof r21.z, r17.z
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r18.x, r21.xyzx, t9.xxxx, s13, r10.x
                  endif 
                  mul r10.x, r18.x, r18.x
                  mul r10.x, r18.x, r10.x
                else 
                  mov r10.x, l(1.000000)
                endif 
              else 
                mov r10.x, l(1.000000)
              endif 
              mul r10.x, r10.x, r17.w
              lt r17.z, l(0.000000), r10.x
              if_nz r17.z
                ubfe r17.z, l(4), l(16), r32.x
                ult r17.w, l(0), r17.z
                and r17.w, r4.w, r17.w
                if_nz r17.w
                  iadd r17.z, r17.z, cb2[0].x
                  iadd r17.z, r17.z, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.w, r17.z, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r30.xyzw, r17.z, l(68), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r17.z, l(84), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r17.z, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r17.z, l(116), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r17.z, l(132), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r17.z, l(148), t12.xyzw
                  mad r18.y, |r11.w|, l(-0.200000), l(0.400000)
                  mad r25.xyz, r7.xyzx, r18.yyyy, v5.xyzx
                  dp4 r21.x, r30.xyzw, r25.xyzw
                  dp4 r21.y, r31.xyzw, r25.xyzw
                  dp4 r18.y, r33.xyzw, r25.xyzw
                  dp4 r21.z, r34.xyzw, r25.xyzw
                  lt r22.x, r21.z, r18.y
                  div r21.xy, r21.xyxx, r21.zzzz
                  mad r21.xy, r21.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r21.xy, r36.zwzz, r21.xyxx
                  mul r21.xy, r36.xyxx, r21.xyxx
                  div r23.xy, r17.wwww, r35.xzxx
                  add r25.xy, -r23.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                  ge r25.xy, r21.xyxx, r25.xyxx
                  ge r23.xy, r23.xyxx, r21.xyxx
                  or r23.xy, r23.xyxx, r25.xyxx
                  or r22.y, r23.y, r23.x
                  or r22.x, r22.x, r22.y
                  if_z r22.x
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r22.x, r17.z, l(28), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.xy, r17.z, l(164), t12.xyxx
                    mov_sat r21.xy, r21.xyxx
                    mad r25.xy, r21.xyxx, r35.xzxx, r35.ywyy
                    mul r17.z, r21.z, r23.y
                    mad r18.y, r23.x, r21.z, r18.y
                    div r17.z, r18.y, r17.z
                    max r17.z, r17.z, l(0.00006104)
                    and r18.y, r22.x, l(0x0000ffff)
                    if_nz r8.w
                      utof r21.z, r18.y
                      mov r22.xy, l(0,0,0,0)
                      loop 
                        ige r23.x, r22.y, l(8)
                        breakc_nz r23.x
                        dp2 r23.x, icb[r22.y + 0].xyxx, r28.xyxx
                        dp2 r23.y, icb[r22.y + 0].yxyy, r28.xzxx
                        mad r21.xy, r23.xyxx, r17.wwww, r25.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.x, r21.xyzx, t9.xxxx, s13, r17.z
                        mad r22.x, r21.x, l(0.125000), r22.x
                        iadd r22.y, r22.y, l(1)
                      endloop 
                    else 
                      utof r25.z, r18.y
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.x, r25.xyzx, t9.xxxx, s13, r17.z
                    endif 
                    mul r17.z, r22.x, r22.x
                    mul r17.z, r22.x, r17.z
                  else 
                    mov r17.z, l(1.000000)
                  endif 
                  mul r10.x, r10.x, r17.z
                else 
                  ubfe r17.z, l(4), l(20), r32.x
                  ult r17.w, l(0), r17.z
                  and r17.w, r2.x, r17.w
                  if_nz r17.w
                    iadd r17.z, r17.z, cb2[0].x
                    iadd r17.z, r17.z, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.w, r17.z, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r30.xyzw, r17.z, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r17.z, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r17.z, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r17.z, l(116), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r17.z, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r17.z, l(148), t12.xyzw
                    mad r18.y, |r11.w|, l(-0.200000), l(0.400000)
                    mad r26.xyz, r7.xyzx, r18.yyyy, v5.xyzx
                    dp4 r21.x, r30.xyzw, r26.xyzw
                    dp4 r21.y, r31.xyzw, r26.xyzw
                    dp4 r18.y, r32.xyzw, r26.xyzw
                    dp4 r21.z, r33.xyzw, r26.xyzw
                    lt r22.y, r21.z, r18.y
                    div r21.xy, r21.xyxx, r21.zzzz
                    mad r21.xy, r21.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r21.xy, r35.zwzz, r21.xyxx
                    mul r21.xy, r35.xyxx, r21.xyxx
                    div r23.xy, r17.wwww, r34.xzxx
                    add r25.xy, -r23.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                    ge r25.xy, r21.xyxx, r25.xyxx
                    ge r23.xy, r23.xyxx, r21.xyxx
                    or r23.xy, r23.xyxx, r25.xyxx
                    or r23.x, r23.y, r23.x
                    or r22.y, r22.y, r23.x
                    if_z r22.y
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r22.y, r17.z, l(28), t12.xxxx
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.xy, r17.z, l(164), t12.xyxx
                      mov_sat r21.xy, r21.xyxx
                      mad r25.xy, r21.xyxx, r34.xzxx, r34.ywyy
                      mul r17.z, r21.z, r23.y
                      mad r18.y, r23.x, r21.z, r18.y
                      div r17.z, r18.y, r17.z
                      max r17.z, r17.z, l(0.00006104)
                      and r18.y, r22.y, l(0x0000ffff)
                      if_nz r8.w
                        utof r21.z, r18.y
                        mov r22.y, l(0)
                        mov r23.x, l(0)
                        loop 
                          ige r23.y, r23.x, l(8)
                          breakc_nz r23.y
                          dp2 r26.x, icb[r23.x + 0].xyxx, r29.xyxx
                          dp2 r26.y, icb[r23.x + 0].yxyy, r29.xzxx
                          mad r21.xy, r26.xyxx, r17.wwww, r25.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.x, r21.xyzx, t9.xxxx, s13, r17.z
                          mad r22.y, r21.x, l(0.125000), r22.y
                          iadd r23.x, r23.x, l(1)
                        endloop 
                      else 
                        utof r25.z, r18.y
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.y, r25.xyzx, t9.xxxx, s13, r17.z
                      endif 
                      mul r17.z, r22.y, r22.y
                      mul r17.z, r22.y, r17.z
                    else 
                      mov r17.z, l(1.000000)
                    endif 
                    mul r10.x, r10.x, r17.z
                  endif 
                endif 
                mad r17.z, -r15.w, r2.y, l(1.000000)
                mul r17.z, r17.z, r17.z
                mad r17.z, -r17.z, l(0.620000), l(0.620000)
                add r17.z, -r15.w, r17.z
                mad r15.w, r5.w, r17.z, r15.w
                mul r10.x, r10.x, r15.w
                lt r11.w, l(0.000000), r11.w
                mad r20.xyz, r10.xxxx, r20.xyzx, r13.yzwy
                movc r13.yzw, r11.wwww, r20.xxyz, r13.yyzw
              endif 
            endif 
          endif 
          break 
          default 
          break 
        endswitch 
      endif 
    endif 
  endloop 
  mov r12.yzw, r13.yyzw
  iadd r6.w, r6.w, l(32)
endloop 
mul r10.xyzw, v1.yzyz, cb0[13].wwzz
mul r10.xyzw, r10.xyzw, l(4.000000, 4.000000, 4.000000, 4.000000)
sample_indexable(texture2d)(float,float,float,float) r2.y, r10.xyxx, t1.yxzw, s8
add r17.xyzw, v1.yzyz, l(0.500000, 0.500000, 0.500000, 0.500000)
mul r17.xyzw, r17.xyzw, cb0[13].wwzz
mul r17.xyzw, r17.xyzw, l(4.000000, 4.000000, 4.000000, 4.000000)
sample_indexable(texture2d)(float,float,float,float) r2.z, r17.xyxx, t1.yzxw, s8
sample_indexable(texture2d)(float,float,float,float) r10.xyz, r10.zwzz, t0.xyzw, s8
mad r8.zw, r10.xxxy, l(0.000000, 0.000000, 1.99218750, 1.99218750), l(0.000000, 0.000000, -1.000000, -1.000000)
mul r5.w, r10.z, r10.z
mul r5.w, r5.w, l(0.33333334)
min r5.w, r5.w, l(1.000000)
sample_indexable(texture2d)(float,float,float,float) r10.xyz, r17.zwzz, t0.xyzw, s8
mad r10.xy, r10.xyxx, l(1.99218750, 1.99218750, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r6.w, r10.z, r10.z
mul r6.w, r6.w, l(0.33333334)
min r6.w, r6.w, l(1.000000)
mad r4.xy, r8.zwzz, r2.yyyy, r4.xyxx
dp3 r8.z, r4.xyzx, r4.xyzx
rsq r8.z, r8.z
mul r4.xyz, r4.xyzx, r8.zzzz
mad r2.w, r5.w, r2.y, r2.w
mad r4.xy, r10.xyxx, r2.zzzz, r4.xyxx
dp3 r5.w, r4.xyzx, r4.xyzx
rsq r5.w, r5.w
mul r4.xyz, r4.xyzx, r5.wwww
mad r2.w, r6.w, r2.z, r2.w
mul r5.w, cb0[14].y, l(-17.000000)
exp r5.w, r5.w
add r2.w, r2.w, r5.w
log r2.w, r2.w
mul_sat r2.w, r2.w, l(-0.05882353)
mul r6.xyz, r4.yyyy, r6.xyzx
mad r5.xyz, r5.xyzx, r4.xxxx, r6.xyzx
mad r3.yzw, r3.yyzw, r4.zzzz, r5.xxyz
dp3 r4.x, r3.yzwy, r3.yzwy
rsq r4.x, r4.x
mul r2.y, r0.w, r2.y
add r5.xyz, -r1.xyzx, cb0[15].xyzx
mad r1.xyz, r2.yyyy, r5.xyzx, r1.xyzx
mul r2.y, r0.w, r2.z
add r5.xyz, -r1.xyzx, cb0[15].xyzx
mad r1.xyz, r2.yyyy, r5.xyzx, r1.xyzx
mad r3.yzw, r3.yyzw, r4.xxxx, -r7.xxyz
mad r3.yzw, r0.wwww, r3.yyzw, r7.xxyz
dp3 r2.y, r3.yzwy, r3.yzwy
rsq r2.y, r2.y
mul r3.yzw, r2.yyyy, r3.yyzw
mad r2.y, r2.w, r8.y, -r8.y
mad r2.y, r0.w, r2.y, r8.y
dp3_sat r2.z, r3.yzwy, r9.xyzx
dp3 r2.w, -r9.xyzx, r3.yzwy
add r2.w, r2.w, r2.w
mad r4.xyz, r3.yzwy, -r2.wwww, -r9.xyzx
mul r2.y, r2.y, l(17.000000)
exp r2.y, r2.y
add r2.y, r2.y, l(2.000000)
div r2.y, l(2.000000), r2.y
sqrt r2.w, r2.y
sqrt r2.w, r2.w
mad r2.w, r2.w, l(0.500000), l(0.500000)
mul r2.w, r2.w, r2.w
mul r5.x, r2.w, l(0.500000)
mad r2.w, -r2.w, l(0.500000), l(1.000000)
mad r2.z, r2.z, r2.w, r5.x
mul r2.w, r2.z, r2.w
mul r2.z, r2.z, r5.x
dp3 r5.x, r3.yzwy, cb2[17].xyzx
mov_sat r5.y, r5.x
ge r5.z, l(0.000000), r5.y
if_nz r5.z
  mov r5.w, l(0)
endif 
if_z r5.z
  mul r6.xyz, v5.yyyy, cb2[29].xyzx
  mad r6.xyz, v5.xxxx, cb2[28].xyzx, r6.xyzx
  mad r6.xyz, v5.zzzz, cb2[30].xyzx, r6.xyzx
  add r6.xyz, r6.xyzx, cb2[31].xyzx
  add r5.z, r6.z, -cb2[17].w
  mad r5.z, -r5.z, l(0.00006104), l(1.000000)
  mov_sat r6.w, r5.z
  eq r6.w, r5.z, r6.w
  if_nz r6.w
    mov r6.w, l(0)
    mov r8.z, l(0)
    loop 
      ge r8.w, r6.w, l(3.000000)
      breakc_nz r8.w
      ftou r8.w, r6.w
      add r10.xy, r6.xyxx, -cb2[r8.w + 20].xyxx
      max r9.w, |r10.y|, |r10.x|
      mul r8.z, r9.w, cb2[r8.w + 20].z
      lt r8.w, r8.z, l(1.000000)
      if_nz r8.w
        break 
      endif 
      add r6.w, r6.w, l(1.000000)
      mov r8.z, l(0)
    endloop 
  else 
    mov r6.w, l(3.000000)
    mov r8.z, l(0)
  endif 
  ge r8.w, r6.w, l(3.000000)
  if_nz r8.w
    mul r10.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
    rcp r17.xz, r10.xxxx
    mov r17.y, -r17.z
    mad r10.xyz, r6.xyxx, r17.xyzx, r10.yzyy
    add r13.yzw, l(0.000000, -0.00781250, -0.00781250, -0.00781250), cb2[27].xxyx
    max r10.xyz, r10.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r10.xyz, r13.yzwy, r10.xyzx
    mul r13.yz, r10.zzyz, cb2[32].xxxx
    round_ni r13.yz, r13.yyzy
    mul r9.w, r13.z, cb2[27].x
    mad r9.w, r9.w, cb2[32].x, r13.y
    ftou r9.w, r9.w
    iadd r9.w, r9.w, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r10.w, r9.w, l(0), t23.xxxx
    and r11.w, r10.w, l(0x40000000)
    ishl r13.y, r10.w, l(2)
    if_z r11.w
      and r11.w, r10.w, l(0x01ffffff)
      iadd r17.x, r9.w, r11.w
      ushr r9.w, r10.w, l(25)
      utof r9.w, r9.w
      mul r10.xyz, r9.wwww, r10.xyzx
      frc r10.xyz, r10.xyzx
      mul r10.xyz, r10.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
      ftou r10.xyz, r10.xyzx
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.z, r17.x, l(0), t23.xxxx
      ushr r13.zw, r10.zzzy, l(0, 0, 6, 6)
      and r9.w, r17.z, l(0xc0000000)
      iadd r10.w, r17.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r10.w, r10.w, l(0), t23.xxxx
      movc r10.w, r13.w, r17.z, r10.w
      ushr r11.w, r10.w, l(13)
      movc r10.w, r13.z, r11.w, r10.w
      and r10.w, r10.w, l(8191)
      iadd r18.x, r10.w, r17.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.x, l(0), t23.xxxx
      mov r17.y, l(0)
      mov r18.y, l(1)
      movc r18.xyz, r9.wwww, r17.xyzx, r18.xyzx
      movc r19.yz, r9.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r13.zw, r10.zzzy, r19.yyyy
      and r13.zw, r13.zzzw, l(0, 0, 1, 1)
      and r10.w, r18.z, l(0xc0000000)
      iadd r11.w, r18.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r11.w, r11.w, l(0), t23.xxxx
      movc r11.w, r13.w, r18.z, r11.w
      ushr r13.w, r11.w, l(13)
      movc r11.w, r13.z, r13.w, r11.w
      and r11.w, r11.w, l(8191)
      iadd r19.x, r11.w, r18.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.w, r19.x, l(0), t23.xxxx
      movc r18.xyz, r10.wwww, r18.xyzx, r19.xzwx
      movc r17.xyz, r9.wwww, r17.xyzx, r18.xyzx
      and r9.w, r17.z, l(0xc0000000)
      if_z r9.w
        iadd r9.w, -r17.y, l(6)
        ushr r13.zw, r10.zzzy, r9.wwww
        or r9.w, r17.z, l(0x40000000)
        bfi r10.w, l(1), l(1), r13.w, l(0)
        bfi r10.w, l(1), l(0), r13.z, r10.w
        imul null, r10.w, r10.w, l(10)
        ushr r9.w, r9.w, r10.w
        and r9.w, r9.w, l(1023)
        iadd r18.x, r9.w, r17.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.w, r18.x, l(0), t23.xxxx
        iadd r18.yz, r17.yyyy, l(0, 1, 2, 0)
        iadd r9.w, -r18.y, l(6)
        ushr r13.zw, r10.zzzy, r9.wwww
        and r9.w, r18.w, l(0xc0000000)
        or r10.w, r18.w, l(0x40000000)
        bfi r11.w, l(1), l(1), r13.w, l(0)
        bfi r11.w, l(1), l(0), r13.z, r11.w
        imul null, r11.w, r11.w, l(10)
        ushr r10.w, r10.w, r11.w
        and r10.w, r10.w, l(1023)
        iadd r19.x, r10.w, r18.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.z, r19.x, l(0), t23.xxxx
        mov r19.y, r18.z
        movc r19.xyz, r9.wwww, r18.xywx, r19.xyzx
        iadd r10.w, -r19.y, l(6)
        ushr r13.zw, r10.zzzy, r10.wwww
        and r10.w, r19.z, l(0xc0000000)
        or r11.w, r19.z, l(0x40000000)
        bfi r13.w, l(1), l(1), r13.w, l(0)
        bfi r13.z, l(1), l(0), r13.z, r13.w
        imul null, r13.z, r13.z, l(10)
        ushr r11.w, r11.w, r13.z
        and r11.w, r11.w, l(1023)
        iadd r20.x, r11.w, r19.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.y, r20.x, l(0), t23.xxxx
        movc r13.zw, r10.wwww, r19.xxxz, r20.xxxy
        movc r17.xz, r9.wwww, r18.xxwx, r13.zzwz
      endif 
      and r9.w, r17.z, l(0xc0000000)
      if_z r9.w
        ubfe r10.w, l(14), l(15), r17.z
        utof r10.w, r10.w
        mul r10.w, r10.w, cb2[27].w
        mul r10.w, r10.w, l(0.00006104)
        and r13.zw, r17.zzzz, l(0, 0, 0x00007fff, 0x20000000)
        utof r11.w, r13.z
        mul r11.w, r11.w, cb2[27].w
        mul r11.w, r11.w, l(0.00003052)
        and r13.z, r10.y, l(3)
        iadd r13.z, r13.z, r17.x
        iadd r13.z, r13.z, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r13.z, r13.z, l(0), t23.xxxx
        bfi r18.xyz, l(2, 2, 1, 0), l(3, 1, 4, 0), r10.xyzx, l(0, 0, 0, 0)
        ushr r10.x, r13.z, r18.x
        and r10.x, r10.x, l(255)
        utof r10.x, r10.x
        mul r10.x, r11.w, r10.x
        mad r10.x, r10.x, l(0.00392157), r10.w
        iadd r10.y, r18.y, l(1)
        ubfe r10.z, l(1), l(1), r10.z
        iadd r10.y, r10.z, r10.y
        iadd r10.y, r10.y, r17.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r10.y, r10.y, l(0), t23.xxxx
        ushr r10.y, r10.y, r18.z
        and r10.y, r10.y, l(0x0000ffff)
        utof r10.y, r10.y
        mul r10.y, r11.w, r10.y
        mad r10.y, r10.y, l(0.00001526), r10.w
        movc r13.y, r13.w, r10.x, r10.y
      else 
        and r10.x, r17.z, l(0x80000000)
        iadd r10.y, r17.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r10.y, r10.y, l(0), t23.xxxx
        movc r10.x, r10.x, r10.y, l(0)
        ishl r10.y, r17.z, l(2)
        ushr r10.z, r10.x, l(16)
        and r10.x, r10.x, l(0x0000ffff)
        f16tof32 r10.xz, r10.xxzx
        mad r10.y, r6.x, r10.z, r10.y
        mad r10.x, r6.y, r10.x, r10.y
        movc r13.y, r9.w, r10.x, r13.y
      endif 
    endif 
    mad r6.z, -cb2[27].z, l(2.000000), r6.z
    lt r6.z, r13.y, r6.z
    movc r5.w, r6.z, l(0), l(1.000000)
  endif 
  if_z r8.w
    if_z cb2[58].y
      ftou r6.z, r6.w
      add r10.xy, r6.xyxx, -cb2[r6.z + 20].xyxx
      mul r10.xy, r10.xyxx, cb2[r6.z + 20].zzzz
      mad r10.xy, r10.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r6.z, cb2[26].y
      add r10.z, r6.z, r6.w
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r6.z, r10.xyzx, t13.xxxx, s13, r5.z
      sample_l_indexable(texture2darray)(float,float,float,float) r8.w, r10.xyzx, t31.yzwx, s0, l(0.000000)
      add r6.z, r6.z, r8.w
      add_sat r6.z, r6.z, l(-1.000000)
      mul r8.w, r6.z, r6.z
      mul r5.w, r6.z, r8.w
    endif 
    if_nz cb2[58].y
      ftou r6.z, r6.w
      add r6.w, r6.w, l(1.000000)
      min r6.w, r6.w, l(2.000000)
      ftou r6.w, r6.w
      add r8.z, -r8.z, l(1.000000)
      mul r8.z, r8.z, l(28.000000)
      ftou r8.z, r8.z
      add r10.xy, r6.xyxx, -cb2[r6.z + 20].xyxx
      mul r10.xy, r10.xyxx, cb2[r6.z + 20].zzzz
      mad r10.xy, r10.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      add r6.xy, r6.xyxx, -cb2[r6.w + 20].xyxx
      mul r6.xy, r6.xyxx, cb2[r6.w + 20].zzzz
      mad r6.xy, r6.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      mov r24.x, r11.x
      mov r24.y, r16.y
      mov r8.w, l(0)
      mov r9.w, l(0)
      loop 
        uge r10.z, r9.w, l(8)
        breakc_nz r10.z
        ult r10.z, r8.z, r9.w
        movc r13.yz, r10.zzzz, r6.xxyx, r10.xxyx
        movc r10.w, r10.z, cb2[r6.w + 20].w, cb2[r6.z + 20].w
        movc r10.z, r10.z, r6.w, r6.z
        dp2 r17.x, icb[r9.w + 0].xyxx, r24.xyxx
        dp2 r17.y, icb[r9.w + 0].yxyy, r24.xzxx
        mad r17.xy, r17.xyxx, r10.wwww, r13.yzyy
        iadd r10.z, r10.z, cb2[26].y
        utof r17.z, r10.z
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.z, r17.xyzx, t13.xxxx, s13, r5.z
        sample_l_indexable(texture2darray)(float,float,float,float) r10.w, r17.xyzx, t31.yzwx, s0, l(0.000000)
        add r10.z, r10.w, r10.z
        add_sat r10.z, r10.z, l(-1.000000)
        mad r8.w, r10.z, l(0.125000), r8.w
        iadd r9.w, r9.w, l(1)
      endloop 
      mul r5.z, r8.w, r8.w
      mul r5.w, r8.w, r5.z
    endif 
  endif 
endif 
lt r5.z, l(0.000000), r5.y
if_nz r5.z
  lt r5.z, l(0.000000), r5.w
  if_nz r5.z
    mul r5.z, r2.y, cb2[18].w
    mul r5.z, r5.y, r5.z
    if_nz cb2[23].x
      add r6.xyz, v5.xyzx, cb1[24].xyzx
      mov r6.w, l(1.000000)
      dp4 r8.z, cb2[24].xyzw, r6.xyzw
      dp4 r6.x, cb2[25].xyzw, r6.xyzw
      frc r10.x, r8.z
      frc r10.y, r6.x
      iadd r6.x, l(-1), cb2[23].x
      utof r10.z, r6.x
      sample_l_indexable(texture2darray)(float,float,float,float) r6.xyz, r10.xyzx, t20.xyzw, s2, l(0.000000)
      add r6.xyz, r6.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
      mad r6.xyz, cb2[23].yyyy, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      mul r6.xyz, r6.xyzx, cb2[18].xyzx
    else 
      mov r6.xyz, cb2[18].xyzx
    endif 
    ushr r6.w, cb2[53].x, l(16)
    ult r8.z, l(0), r6.w
    and r8.z, r4.w, r8.z
    if_nz r8.z
      iadd r6.w, r6.w, cb2[0].x
      iadd r6.w, r6.w, l(-1)
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r8.z, r6.w, l(52), t12.xxxx
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r10.xyzw, r6.w, l(68), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r6.w, l(84), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r6.w, l(132), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.xyzw, r6.w, l(148), t12.xyzw
      mad r8.w, |r5.x|, l(-0.200000), l(0.400000)
      mad r20.xyz, r3.yzwy, r8.wwww, v5.xyzx
      mov r20.w, l(1.000000)
      dp4 r10.x, r10.xyzw, r20.xyzw
      dp4 r10.y, r17.xyzw, r20.xyzw
      mad r10.xy, r10.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      add r10.xy, r19.zwzz, r10.xyxx
      mul r10.xy, r19.xyxx, r10.xyxx
      div r10.zw, r8.zzzz, r18.xxxz
      add r13.yz, -r10.zzwz, l(0.000000, 1.000000, 1.000000, 0.000000)
      ge r13.yz, r10.xxyx, r13.yyzy
      ge r10.zw, r10.zzzw, r10.xxxy
      or r10.zw, r10.zzzw, r13.yyyz
      or r8.w, r10.w, r10.z
      if_z r8.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r8.w, r6.w, l(28), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r6.w, l(100), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r10.zw, r6.w, l(164), t12.xxxy
        dp4 r6.w, r17.xyzw, r20.xyzw
        mov_sat r10.xy, r10.xyxx
        mad r17.xy, r10.xyxx, r18.xzxx, r18.ywyy
        add r6.w, r10.z, r6.w
        div r6.w, r6.w, r10.w
        max r6.w, r6.w, l(0.00006104)
        and r8.w, r8.w, l(0x0000ffff)
        if_nz cb2[58].y
          utof r10.z, r8.w
          mov r24.x, r11.x
          mov r24.y, r16.y
          mov r9.w, l(0)
          mov r10.w, l(0)
          loop 
            ige r11.w, r10.w, l(8)
            breakc_nz r11.w
            dp2 r18.x, icb[r10.w + 0].xyxx, r24.xyxx
            dp2 r18.y, icb[r10.w + 0].yxyy, r24.xzxx
            mad r10.xy, r18.xyxx, r8.zzzz, r17.xyxx
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.x, r10.xyzx, t9.xxxx, s13, r6.w
            mad r9.w, r10.x, l(0.125000), r9.w
            iadd r10.w, r10.w, l(1)
          endloop 
        else 
          utof r17.z, r8.w
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r9.w, r17.xyzx, t9.xxxx, s13, r6.w
        endif 
        mul r6.w, r9.w, r9.w
        mul r6.w, r9.w, r6.w
      else 
        mov r6.w, l(1.000000)
      endif 
      mul r5.w, r5.w, r6.w
    else 
      and r6.w, cb2[53].x, l(0x0000ffff)
      ult r8.z, l(0), r6.w
      and r8.z, r2.x, r8.z
      if_nz r8.z
        iadd r6.w, r6.w, cb2[0].x
        iadd r6.w, r6.w, l(-1)
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r8.z, r6.w, l(52), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r10.xyzw, r6.w, l(68), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r6.w, l(84), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r6.w, l(132), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.xyzw, r6.w, l(148), t12.xyzw
        mad r8.w, |r5.x|, l(-0.200000), l(0.400000)
        mad r20.xyz, r3.yzwy, r8.wwww, v5.xyzx
        mov r20.w, l(1.000000)
        dp4 r10.x, r10.xyzw, r20.xyzw
        dp4 r10.y, r17.xyzw, r20.xyzw
        mad r10.xy, r10.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
        add r10.xy, r19.zwzz, r10.xyxx
        mul r10.xy, r19.xyxx, r10.xyxx
        div r10.zw, r8.zzzz, r18.xxxz
        add r13.yz, -r10.zzwz, l(0.000000, 1.000000, 1.000000, 0.000000)
        ge r13.yz, r10.xxyx, r13.yyzy
        ge r10.zw, r10.zzzw, r10.xxxy
        or r10.zw, r10.zzzw, r13.yyyz
        or r8.w, r10.w, r10.z
        if_z r8.w
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r8.w, r6.w, l(28), t12.xxxx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r6.w, l(100), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r10.zw, r6.w, l(164), t12.xxxy
          dp4 r6.w, r17.xyzw, r20.xyzw
          mov_sat r10.xy, r10.xyxx
          mad r17.xy, r10.xyxx, r18.xzxx, r18.ywyy
          add r6.w, r10.z, r6.w
          div r6.w, r6.w, r10.w
          max r6.w, r6.w, l(0.00006104)
          and r8.w, r8.w, l(0x0000ffff)
          if_nz cb2[58].y
            utof r10.z, r8.w
            mov r24.x, r11.x
            mov r24.y, r16.y
            mov r9.w, l(0)
            mov r10.w, l(0)
            loop 
              ige r11.w, r10.w, l(8)
              breakc_nz r11.w
              dp2 r18.x, icb[r10.w + 0].xyxx, r24.xyxx
              dp2 r18.y, icb[r10.w + 0].yxyy, r24.xzxx
              mad r10.xy, r18.xyxx, r8.zzzz, r17.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.x, r10.xyzx, t9.xxxx, s13, r6.w
              mad r9.w, r10.x, l(0.125000), r9.w
              iadd r10.w, r10.w, l(1)
            endloop 
          else 
            utof r17.z, r8.w
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r9.w, r17.xyzx, t9.xxxx, s13, r6.w
          endif 
          mul r6.w, r9.w, r9.w
          mul r6.w, r9.w, r6.w
        else 
          mov r6.w, l(1.000000)
        endif 
        mul r5.w, r5.w, r6.w
      endif 
    endif 
    lt r5.x, l(0.000000), r5.x
    mad r10.xyz, -v5.xyzx, r3.xxxx, cb2[17].xyzx
    dp3 r3.x, r10.xyzx, r10.xyzx
    rsq r3.x, r3.x
    mul r10.xyz, r3.xxxx, r10.xyzx
    dp3 r3.x, r10.xyzx, r9.xyzx
    dp3 r6.w, r3.yzwy, r10.xyzx
    mad r8.z, |r6.w|, r2.y, -|r6.w|
    mad r6.w, |r6.w|, r8.z, l(1.000000)
    mad r5.y, r5.y, r2.w, r2.z
    mul r6.w, r6.w, r6.w
    mul r5.y, r5.y, r6.w
    rcp r5.y, r5.y
    mul r5.y, r5.z, r5.y
    mul r5.y, r5.y, r5.w
    mul r5.y, r5.y, l(0.250000)
    mul r10.xyz, r6.xyzx, r5.yyyy
    add_sat r3.x, -r3.x, l(1.000000)
    mul r5.z, r3.x, r3.x
    mul r5.z, r5.z, r5.z
    mul r3.x, r3.x, r5.z
    mul r3.x, r3.x, r5.y
    mul r6.xyz, r6.xyzx, r3.xxxx
    mov r6.w, r10.x
    and r6.xyzw, r5.xxxx, r6.xyzw
    and r5.xy, r5.xxxx, r10.yzyy
  else 
    mov r6.xyzw, l(0,0,0,0)
    mov r5.xy, l(0,0,0,0)
  endif 
else 
  mov r6.xyzw, l(0,0,0,0)
  mov r5.xy, l(0,0,0,0)
endif 
mov r10.xy, l(0,0,0,0)
mov r17.w, l(0)
mov r18.xyz, v5.xyzx
mov r18.w, l(1.000000)
mov r19.w, l(1.000000)
mov r20.x, r11.x
mov r20.y, r16.y
mov r20.z, r24.z
mov r21.w, l(1.000000)
mov r22.z, l(1.000000)
mov r23.w, l(1.000000)
mov r25.x, r11.x
mov r25.y, r16.y
mov r25.z, r24.z
mov r26.w, l(1.000000)
mov r27.x, r11.x
mov r27.y, r16.y
mov r27.z, r24.z
mov r28.w, l(1.000000)
mov r11.y, r16.y
mov r11.z, r24.z
mov r16.x, r11.x
mov r16.z, r24.z
mov r24.x, r11.x
mov r24.y, r16.y
mov r13.yzw, r6.xxyz
mov r29.x, r6.w
mov r29.yz, r5.xxyx
mov r3.x, cb2[58].y
mov r5.z, l(0)
loop 
  uge r5.w, r5.z, cb2[0].x
  breakc_nz r5.w
  ushr r10.z, r5.z, l(5)
  iadd r17.xyz, r10.xyzx, r15.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r5.w, r17.xyzw, t6.yzwx
  mov r17.xyz, r13.yzwy
  mov r30.xyz, r29.xyzx
  mov r8.z, r3.x
  mov r8.w, r5.w
  loop 
    breakc_z r8.w
    firstbit_lo r9.w, r8.w
    ishl r10.z, l(1), r9.w
    and r10.w, r8.w, r10.z
    if_nz r10.w
      xor r8.w, r8.w, r10.z
      iadd r9.w, r5.z, r9.w
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r31.xyzw, r9.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r32.xy, r9.w, l(16), t11.xyxx
      add r31.xyz, r31.xyzx, -v5.xyzx
      mov r32.z, r31.w
      lt r31.xyz, |r31.xyzx|, r32.zxyz
      and r10.z, r31.y, r31.x
      and r10.z, r31.z, r10.z
      if_nz r10.z
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r9.w, l(0), t12.wxyz
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r9.w, l(16), t12.zxyw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r9.w, l(32), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r9.w, l(48), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r9.w, l(64), t12.yzwx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r9.w, l(80), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r9.w, l(96), t12.yzwx
        ubfe r10.z, l(3), l(24), r32.w
        switch r10.z
          case l(4)
          lt r10.z, l(0.000000), r37.x
          mov r38.xy, r36.zwzz
          mov r38.z, r37.w
          mad r39.xyz, -r38.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r31.yzwy
          add r40.xyz, r39.xyzx, -v5.xyzx
          dp3 r10.w, r38.xyzx, r40.xyzx
          div_sat r11.w, -r10.w, r37.x
          mad r41.xyz, r11.wwww, r38.xyzx, r39.xyzx
          movc r41.xyz, r10.zzzz, r41.xyzx, r31.yzwy
          add r41.xyz, r41.xyzx, -v5.xyzx
          dp3 r15.w, r41.xyzx, r41.xyzx
          rsq r16.w, r15.w
          mul r41.xyz, r16.wwww, r41.xyzx
          dp3 r16.w, r3.yzwy, r41.xyzx
          mov_sat r20.w, r16.w
          lt r20.w, l(0.000000), r20.w
          if_nz r20.w
            sqrt r20.w, r15.w
            mul r22.w, r34.x, r34.x
            div r15.w, r22.w, r15.w
            min r15.w, r15.w, l(1.000000)
            mad_sat r41.xy, r20.wwww, r33.xzxx, r33.ywyy
            mul r41.zw, r41.xxxy, r41.xxxy
            mad r41.xy, r41.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
            mul r41.xy, r41.xyxx, r41.zwzz
            mul r15.w, r15.w, r41.x
            mul r15.w, r41.y, r15.w
            lt r20.w, l(0.000000), r15.w
            if_nz r20.w
              ubfe r20.w, l(3), l(27), r32.w
              ine r20.w, r20.w, l(1)
              if_nz r20.w
                mad r20.w, |r16.w|, l(-0.200000), l(0.400000)
                mad r41.xyz, r3.yzwy, r20.wwww, v5.xyzx
                add r41.xyz, -r35.xyzx, r41.xyzx
                max r20.w, |r41.z|, |r41.y|
                max r20.w, r20.w, |r41.x|
                div r20.w, r36.x, r20.w
                add r20.w, r36.y, r20.w
                dp3 r22.w, r41.xyzx, r41.xyzx
                rsq r22.w, r22.w
                max r20.w, r20.w, l(0.00006104)
                and r24.w, r32.w, l(0x0000ffff)
                utof r42.w, r24.w
                mov r24.w, l(0)
                mov r25.w, l(0)
                loop 
                  ige r27.w, r25.w, l(8)
                  breakc_nz r27.w
                  dp2 r43.y, icb[r25.w + 0].xyxx, r20.xyxx
                  dp2 r43.z, icb[r25.w + 0].yxyy, r20.xzxx
                  mul r43.yz, r34.yyyy, r43.yyzy
                  mul r43.x, r13.x, r43.y
                  mul r43.w, r12.x, r43.y
                  mad r42.xyz, r41.xyzx, r22.wwww, r43.xzwx
                  sample_c_lz_indexable(texturecubearray)(float,float,float,float) r27.w, r42.xyzw, t10.xxxx, s13, r20.w
                  mad r24.w, r27.w, l(0.125000), r24.w
                  iadd r25.w, r25.w, l(1)
                endloop 
              else 
                mov r24.w, l(1.000000)
              endif 
              mul r15.w, r15.w, r24.w
              lt r20.w, l(0.000000), r15.w
              if_nz r20.w
                mul r20.w, r2.y, r32.x
                mul r20.w, r20.w, l(0.250000)
                dp3 r22.w, r38.xyzx, r4.xyzx
                dp3 r25.w, r4.xyzx, r40.xyzx
                mad r27.w, -r22.w, r22.w, r37.x
                mad r10.w, r22.w, r25.w, -r10.w
                div_sat r10.w, r10.w, r27.w
                div r22.w, r27.w, r37.x
                mul r22.w, r22.w, l(10.000000)
                min r22.w, r22.w, l(1.000000)
                add r10.w, -r11.w, r10.w
                mad r10.w, r22.w, r10.w, r11.w
                mad r38.xyz, r10.wwww, r38.xyzx, r39.xyzx
                movc r38.xyz, r10.zzzz, r38.xyzx, r31.yzwy
                add r38.xyz, r38.xyzx, -v5.xyzx
                dp3 r10.z, r38.xyzx, r38.xyzx
                rsq r10.z, r10.z
                mul r39.xyz, r10.zzzz, r38.xyzx
                ubfe r10.w, l(4), l(16), r32.w
                ult r11.w, l(0), r10.w
                and r11.w, r4.w, r11.w
                if_nz r11.w
                  iadd r10.w, r10.w, cb2[0].x
                  iadd r10.w, r10.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r11.w, r10.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r10.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r10.w, l(116), t12.xyzw
                  mad r22.w, |r16.w|, l(-0.200000), l(0.400000)
                  mad r19.xyz, r3.yzwy, r22.wwww, v5.xyzx
                  dp4 r22.w, r40.xyzw, r19.xyzw
                  dp4 r25.w, r41.xyzw, r19.xyzw
                  lt r27.w, r25.w, r22.w
                  if_z r27.w
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r10.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r10.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r10.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r10.w, l(148), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xy, r10.w, l(164), t12.xyxx
                    dp4 r40.x, r40.xyzw, r19.xyzw
                    dp4 r40.y, r41.xyzw, r19.xyzw
                    div r19.xy, r40.xyxx, r25.wwww
                    mad r19.xy, r19.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r19.xy, r43.zwzz, r19.xyxx
                    mul r19.xy, r43.xyxx, r19.xyxx
                    div r40.xy, r11.wwww, r42.xzxx
                    add r40.zw, -r40.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                    ge r40.zw, r19.xxxy, r40.zzzw
                    ge r40.xy, r40.xyxx, r19.xyxx
                    or r40.xy, r40.xyxx, r40.zwzz
                    or r19.z, r40.y, r40.x
                    mov_sat r19.xy, r19.xyxx
                    mad r40.xy, r19.xyxx, r42.xzxx, r42.ywyy
                    mul r19.x, r25.w, r44.y
                    mad r19.y, r44.x, r25.w, r22.w
                    div r19.x, r19.y, r19.x
                  else 
                    mov r19.z, l(-1)
                  endif 
                  or r19.y, r27.w, r19.z
                  if_z r19.y
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r10.w, r10.w, l(28), t12.xxxx
                    max r19.x, r19.x, l(0.00006104)
                    and r10.w, r10.w, l(0x0000ffff)
                    if_nz r8.z
                      utof r41.z, r10.w
                      mov r19.yz, l(0,0,0,0)
                      loop 
                        ige r22.w, r19.z, l(8)
                        breakc_nz r22.w
                        dp2 r42.x, icb[r19.z + 0].xyxx, r25.xyxx
                        dp2 r42.y, icb[r19.z + 0].yxyy, r25.xzxx
                        mad r41.xy, r42.xyxx, r11.wwww, r40.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.w, r41.xyzx, t9.xxxx, s13, r19.x
                        mad r19.y, r22.w, l(0.125000), r19.y
                        iadd r19.z, r19.z, l(1)
                      endloop 
                    else 
                      utof r40.z, r10.w
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.y, r40.xyzx, t9.xxxx, s13, r19.x
                    endif 
                    mul r10.w, r19.y, r19.y
                    mul r10.w, r19.y, r10.w
                  else 
                    mov r10.w, l(1.000000)
                  endif 
                  mul r15.w, r10.w, r15.w
                else 
                  ubfe r10.w, l(4), l(20), r32.w
                  ult r11.w, l(0), r10.w
                  and r11.w, r2.x, r11.w
                  if_nz r11.w
                    iadd r10.w, r10.w, cb2[0].x
                    iadd r10.w, r10.w, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r11.w, r10.w, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r10.w, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r10.w, l(116), t12.xyzw
                    mad r19.x, |r16.w|, l(-0.200000), l(0.400000)
                    mad r21.xyz, r3.yzwy, r19.xxxx, v5.xyzx
                    dp4 r19.x, r40.xyzw, r21.xyzw
                    dp4 r19.z, r41.xyzw, r21.xyzw
                    lt r22.w, r19.z, r19.x
                    if_z r22.w
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r10.w, l(68), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r10.w, l(84), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r10.w, l(132), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r10.w, l(148), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xy, r10.w, l(164), t12.xyxx
                      dp4 r40.x, r40.xyzw, r21.xyzw
                      dp4 r40.y, r41.xyzw, r21.xyzw
                      div r21.xy, r40.xyxx, r19.zzzz
                      mad r21.xy, r21.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                      add r21.xy, r43.zwzz, r21.xyxx
                      mul r21.xy, r43.xyxx, r21.xyxx
                      div r40.xy, r11.wwww, r42.xzxx
                      add r40.zw, -r40.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                      ge r40.zw, r21.xxxy, r40.zzzw
                      ge r40.xy, r40.xyxx, r21.xyxx
                      or r40.xy, r40.xyxx, r40.zwzz
                      or r21.z, r40.y, r40.x
                      mov_sat r21.xy, r21.xyxx
                      mad r40.xy, r21.xyxx, r42.xzxx, r42.ywyy
                      mul r21.x, r19.z, r44.y
                      mad r19.x, r44.x, r19.z, r19.x
                      div r19.x, r19.x, r21.x
                    else 
                      mov r21.z, l(-1)
                    endif 
                    or r19.z, r22.w, r21.z
                    if_z r19.z
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r10.w, r10.w, l(28), t12.xxxx
                      max r19.x, r19.x, l(0.00006104)
                      and r10.w, r10.w, l(0x0000ffff)
                      if_nz r8.z
                        utof r21.z, r10.w
                        mov r19.z, l(0)
                        mov r22.w, l(0)
                        loop 
                          ige r25.w, r22.w, l(8)
                          breakc_nz r25.w
                          dp2 r41.x, icb[r22.w + 0].xyxx, r27.xyxx
                          dp2 r41.y, icb[r22.w + 0].yxyy, r27.xzxx
                          mad r21.xy, r41.xyxx, r11.wwww, r40.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.x, r21.xyzx, t9.xxxx, s13, r19.x
                          mad r19.z, r21.x, l(0.125000), r19.z
                          iadd r22.w, r22.w, l(1)
                        endloop 
                      else 
                        utof r40.z, r10.w
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.z, r40.xyzx, t9.xxxx, s13, r19.x
                      endif 
                      mul r10.w, r19.z, r19.z
                      mul r10.w, r19.z, r10.w
                    else 
                      mov r10.w, l(1.000000)
                    endif 
                    mul r15.w, r10.w, r15.w
                  endif 
                endif 
                lt r10.w, l(0.000000), r16.w
                dp3_sat r11.w, r3.yzwy, r39.xyzx
                mad r21.xyz, r38.xyzx, r10.zzzz, r9.xyzx
                dp3 r10.z, r21.xyzx, r21.xyzx
                rsq r10.z, r10.z
                mul r21.xyz, r10.zzzz, r21.xyzx
                dp3 r10.z, r21.xyzx, r9.xyzx
                dp3 r16.w, r3.yzwy, r21.xyzx
                mad r19.x, |r16.w|, r2.y, -|r16.w|
                mad r16.w, |r16.w|, r19.x, l(1.000000)
                mad r19.x, r11.w, r2.w, r2.z
                mul r16.w, r16.w, r16.w
                mul r16.w, r19.x, r16.w
                rcp r16.w, r16.w
                mul r11.w, r20.w, r11.w
                mul r11.w, r11.w, r16.w
                mul r11.w, r15.w, r11.w
                mov r32.x, r31.x
                mad r21.xyz, r11.wwww, r32.xyzx, r30.xyzx
                add_sat r10.z, -r10.z, l(1.000000)
                mul r15.w, r10.z, r10.z
                mul r15.w, r15.w, r15.w
                mul r10.z, r10.z, r15.w
                mul r10.z, r10.z, r11.w
                mad r38.xyz, r10.zzzz, r32.xyzx, r17.xyzx
                movc r17.xyz, r10.wwww, r38.xyzx, r17.xyzx
                movc r30.xyz, r10.wwww, r21.xyzx, r30.xyzx
              endif 
            endif 
          endif 
          break 
          case l(2)
          mov r21.xy, r34.zwzz
          mov r21.z, r35.w
          add r21.xyz, r21.xyzx, -v5.xyzx
          dp3 r10.z, r21.xyzx, r21.xyzx
          rsq r10.z, r10.z
          mul r38.xyz, r10.zzzz, r21.xyzx
          dp3 r10.w, r3.yzwy, r38.xyzx
          mov_sat r11.w, r10.w
          lt r15.w, l(0.000000), r11.w
          if_nz r15.w
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r9.w, l(112), t12.yzwx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r9.w, l(128), t12.zxyw
            mov r40.xyz, r38.xyzx
            mov r40.w, r39.y
            dp4 r15.w, r40.xyzw, r18.xyzw
            lt r16.w, r15.w, l(1.000000)
            if_nz r16.w
              mov r41.xyz, l(1.000000,1.000000,1.000000,0)
              mov r16.w, l(0)
            else 
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r9.w, l(172), t12.yzwx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r9.w, l(188), t12.wxyz
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r9.w, l(204), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.x, r9.w, l(236), t12.xxxx
              add r45.xyz, r31.yzwy, -v5.xyzx
              mul r20.w, r34.x, r34.x
              dp3 r22.w, r45.xyzx, r45.xyzx
              div r20.w, r20.w, r22.w
              min r20.w, r20.w, l(1.000000)
              mad_sat r33.xy, r15.wwww, r33.xzxx, r33.ywyy
              mul r33.zw, r33.xxxy, r33.xxxy
              mad r33.xy, r33.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
              mul r33.xy, r33.xyxx, r33.zwzz
              mul r20.w, r20.w, r33.x
              mul r20.w, r33.y, r20.w
              mov r35.w, r36.x
              dp4 r33.x, r35.xyzw, r18.xyzw
              mov r45.xyz, r36.yzwy
              mov r45.w, r37.w
              dp4 r33.y, r45.xyzw, r18.xyzw
              div r22.xy, r33.xyxx, r15.wwww
              lt r15.w, r42.w, l(0.00048828)
              if_nz r15.w
                mov r43.y, r44.x
                mad_sat r33.xy, |r22.xyxx|, r43.zwzz, r43.xyxx
                mul r33.zw, r33.xxxy, r33.xxxy
                mad r33.xy, r33.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
                mul r33.xy, r33.xyxx, r33.zwzz
                mul r15.w, r33.y, r33.x
              else 
                mov r42.w, r43.y
                mul_sat r33.xyzw, |r22.yyxx|, r42.xyzw
                log r33.xyzw, r33.xyzw
                mul r33.xyzw, r33.xyzw, r43.xxxx
                exp r33.xyzw, r33.xyzw
                add r33.xy, r33.zwzz, r33.xyxx
                log r33.xy, r33.xyxx
                mul r33.xy, r33.xyxx, r44.xxxx
                exp r33.xy, r33.xyxx
                mul r22.w, r33.x, r43.z
                mad r25.w, r43.w, r33.y, l(-1.000000)
                mad r22.w, r43.w, r33.y, -r22.w
                div_sat r22.w, r25.w, r22.w
                mul r25.w, r22.w, r22.w
                mad r22.w, r22.w, l(-2.000000), l(3.000000)
                mul r15.w, r22.w, r25.w
              endif 
              mul r16.w, r15.w, r20.w
              and r15.w, r19.x, l(255)
              if_nz r15.w
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyz, r9.w, l(220), t12.xyzx
                dp3 r19.x, r44.yzwy, r22.xyzx
                dp3 r20.w, r33.xyzx, r22.xyzx
                frc r33.x, r19.x
                frc r33.y, r20.w
                iadd r15.w, r15.w, l(-1)
                utof r33.z, r15.w
                sample_l_indexable(texture2darray)(float,float,float,float) r41.xyz, r33.xyzx, t20.xyzw, s2, l(0.000000)
              else 
                mov r41.xyz, l(1.000000,1.000000,1.000000,0)
              endif 
            endif 
            mov r31.yz, r32.yyzy
            mul r22.xyw, r41.xyxz, r31.xyxz
            lt r15.w, l(0.000000), r16.w
            if_nz r15.w
              ubfe r15.w, l(3), l(27), r32.w
              ine r15.w, r15.w, l(1)
              if_nz r15.w
                mad r15.w, |r10.w|, l(-0.200000), l(0.400000)
                mad r23.xyz, r3.yzwy, r15.wwww, v5.xyzx
                mov r38.xyz, r37.xyzx
                dp4 r15.w, r38.xyzw, r23.xyzw
                dp4 r19.x, r40.xyzw, r23.xyzw
                ge r20.w, r19.x, r15.w
                if_nz r20.w
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.y, r9.w, l(144), t12.xxxx
                  mov r35.w, r36.x
                  dp4 r31.x, r35.xyzw, r23.xyzw
                  mov r37.xyz, r36.yzwy
                  dp4 r31.y, r37.xyzw, r23.xyzw
                  div r23.xy, r31.xyxx, r19.xxxx
                  mad_sat r23.xy, r23.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  mad r23.xy, r23.xyxx, r39.zwzz, r39.xyxx
                  div r9.w, r15.w, r19.x
                  max r9.w, r9.w, l(0.00006104)
                  and r15.w, r32.w, l(0x0000ffff)
                  if_nz r8.z
                    utof r31.z, r15.w
                    mov r19.x, l(0)
                    mov r20.w, l(0)
                    loop 
                      ige r25.w, r20.w, l(8)
                      breakc_nz r25.w
                      dp2 r33.x, icb[r20.w + 0].xyxx, r11.xyxx
                      dp2 r33.y, icb[r20.w + 0].yxyy, r11.xzxx
                      mad r31.xy, r33.xyxx, r34.yyyy, r23.xyxx
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r25.w, r31.xyzx, t9.xxxx, s13, r9.w
                      mad r19.x, r25.w, l(0.125000), r19.x
                      iadd r20.w, r20.w, l(1)
                    endloop 
                  else 
                    utof r23.z, r15.w
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.x, r23.xyzx, t9.xxxx, s13, r9.w
                  endif 
                  mul r9.w, r19.x, r19.x
                  mul r9.w, r19.x, r9.w
                else 
                  mov r9.w, l(1.000000)
                endif 
              else 
                mov r9.w, l(1.000000)
              endif 
              mul r9.w, r9.w, r16.w
              lt r15.w, l(0.000000), r9.w
              if_nz r15.w
                mul r15.w, r2.y, r32.x
                mul r15.w, r11.w, r15.w
                ubfe r16.w, l(4), l(16), r32.w
                ult r20.w, l(0), r16.w
                and r20.w, r4.w, r20.w
                if_nz r20.w
                  iadd r16.w, r16.w, cb2[0].x
                  iadd r16.w, r16.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r20.w, r16.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r16.w, l(68), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r16.w, l(84), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r16.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r16.w, l(116), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r16.w, l(132), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r16.w, l(148), t12.xyzw
                  mad r23.x, |r10.w|, l(-0.200000), l(0.400000)
                  mad r26.xyz, r3.yzwy, r23.xxxx, v5.xyzx
                  dp4 r23.x, r31.xyzw, r26.xyzw
                  dp4 r23.y, r33.xyzw, r26.xyzw
                  dp4 r23.z, r34.xyzw, r26.xyzw
                  dp4 r25.w, r35.xyzw, r26.xyzw
                  lt r26.x, r25.w, r23.z
                  div r23.xy, r23.xyxx, r25.wwww
                  mad r23.xy, r23.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r23.xy, r37.zwzz, r23.xyxx
                  mul r23.xy, r37.xyxx, r23.xyxx
                  div r26.yz, r20.wwww, r36.xxzx
                  add r31.xy, -r26.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
                  ge r31.xy, r23.xyxx, r31.xyxx
                  ge r26.yz, r26.yyzy, r23.xxyx
                  or r26.yz, r26.yyzy, r31.xxyx
                  or r26.y, r26.z, r26.y
                  or r26.x, r26.x, r26.y
                  if_z r26.x
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r26.x, r16.w, l(28), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r26.yz, r16.w, l(164), t12.xxyx
                    mov_sat r23.xy, r23.xyxx
                    mad r31.xy, r23.xyxx, r36.xzxx, r36.ywyy
                    mul r16.w, r25.w, r26.z
                    mad r23.x, r26.y, r25.w, r23.z
                    div r16.w, r23.x, r16.w
                    max r16.w, r16.w, l(0.00006104)
                    and r23.x, r26.x, l(0x0000ffff)
                    if_nz r8.z
                      utof r26.z, r23.x
                      mov r23.yz, l(0,0,0,0)
                      loop 
                        ige r25.w, r23.z, l(8)
                        breakc_nz r25.w
                        dp2 r32.x, icb[r23.z + 0].xyxx, r16.xyxx
                        dp2 r32.y, icb[r23.z + 0].yxyy, r16.xzxx
                        mad r26.xy, r32.xyxx, r20.wwww, r31.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r25.w, r26.xyzx, t9.xxxx, s13, r16.w
                        mad r23.y, r25.w, l(0.125000), r23.y
                        iadd r23.z, r23.z, l(1)
                      endloop 
                    else 
                      utof r31.z, r23.x
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.y, r31.xyzx, t9.xxxx, s13, r16.w
                    endif 
                    mul r16.w, r23.y, r23.y
                    mul r16.w, r23.y, r16.w
                  else 
                    mov r16.w, l(1.000000)
                  endif 
                  mul r9.w, r9.w, r16.w
                else 
                  ubfe r16.w, l(4), l(20), r32.w
                  ult r20.w, l(0), r16.w
                  and r20.w, r2.x, r20.w
                  if_nz r20.w
                    iadd r16.w, r16.w, cb2[0].x
                    iadd r16.w, r16.w, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r20.w, r16.w, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r16.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r16.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r16.w, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r16.w, l(116), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r16.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r16.w, l(148), t12.xyzw
                    mad r23.x, |r10.w|, l(-0.200000), l(0.400000)
                    mad r28.xyz, r3.yzwy, r23.xxxx, v5.xyzx
                    dp4 r26.x, r31.xyzw, r28.xyzw
                    dp4 r26.y, r32.xyzw, r28.xyzw
                    dp4 r23.x, r33.xyzw, r28.xyzw
                    dp4 r23.z, r34.xyzw, r28.xyzw
                    lt r25.w, r23.z, r23.x
                    div r26.xy, r26.xyxx, r23.zzzz
                    mad r26.xy, r26.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r26.xy, r36.zwzz, r26.xyxx
                    mul r26.xy, r36.xyxx, r26.xyxx
                    div r28.xy, r20.wwww, r35.xzxx
                    add r31.xy, -r28.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                    ge r31.xy, r26.xyxx, r31.xyxx
                    ge r28.xy, r28.xyxx, r26.xyxx
                    or r28.xy, r28.xyxx, r31.xyxx
                    or r26.z, r28.y, r28.x
                    or r25.w, r25.w, r26.z
                    if_z r25.w
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r25.w, r16.w, l(28), t12.xxxx
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r28.xy, r16.w, l(164), t12.xyxx
                      mov_sat r26.xy, r26.xyxx
                      mad r26.xy, r26.xyxx, r35.xzxx, r35.ywyy
                      mul r16.w, r23.z, r28.y
                      mad r23.x, r28.x, r23.z, r23.x
                      div r16.w, r23.x, r16.w
                      max r16.w, r16.w, l(0.00006104)
                      and r23.x, r25.w, l(0x0000ffff)
                      if_nz r8.z
                        utof r28.z, r23.x
                        mov r23.z, l(0)
                        mov r25.w, l(0)
                        loop 
                          ige r27.w, r25.w, l(8)
                          breakc_nz r27.w
                          dp2 r31.x, icb[r25.w + 0].xyxx, r24.xyxx
                          dp2 r31.y, icb[r25.w + 0].yxyy, r24.xzxx
                          mad r28.xy, r31.xyxx, r20.wwww, r26.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r27.w, r28.xyzx, t9.xxxx, s13, r16.w
                          mad r23.z, r27.w, l(0.125000), r23.z
                          iadd r25.w, r25.w, l(1)
                        endloop 
                      else 
                        utof r26.z, r23.x
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.z, r26.xyzx, t9.xxxx, s13, r16.w
                      endif 
                      mul r16.w, r23.z, r23.z
                      mul r16.w, r23.z, r16.w
                    else 
                      mov r16.w, l(1.000000)
                    endif 
                    mul r9.w, r9.w, r16.w
                  endif 
                endif 
                lt r10.w, l(0.000000), r10.w
                mad r21.xyz, r21.xyzx, r10.zzzz, r9.xyzx
                dp3 r10.z, r21.xyzx, r21.xyzx
                rsq r10.z, r10.z
                mul r21.xyz, r10.zzzz, r21.xyzx
                dp3 r10.z, r21.xyzx, r9.xyzx
                dp3 r16.w, r3.yzwy, r21.xyzx
                mad r20.w, |r16.w|, r2.y, -|r16.w|
                mad r16.w, |r16.w|, r20.w, l(1.000000)
                mad r11.w, r11.w, r2.w, r2.z
                mul r16.w, r16.w, r16.w
                mul r11.w, r11.w, r16.w
                rcp r11.w, r11.w
                mul r11.w, r15.w, r11.w
                mul r9.w, r9.w, r11.w
                mul r9.w, r9.w, l(0.250000)
                mad r21.xyz, r9.wwww, r22.xywx, r30.xyzx
                add_sat r10.z, -r10.z, l(1.000000)
                mul r11.w, r10.z, r10.z
                mul r11.w, r11.w, r11.w
                mul r10.z, r10.z, r11.w
                mul r9.w, r9.w, r10.z
                mad r22.xyw, r9.wwww, r22.xyxw, r17.xyxz
                movc r17.xyz, r10.wwww, r22.xywx, r17.xyzx
                movc r30.xyz, r10.wwww, r21.xyzx, r30.xyzx
              endif 
            endif 
          endif 
          break 
          default 
          break 
        endswitch 
      endif 
    endif 
  endloop 
  mov r13.yzw, r17.xxyz
  mov r29.xyz, r30.xyzx
  iadd r5.z, r5.z, l(32)
endloop 
add r2.x, -r8.y, l(1.000000)
mad r2.z, r2.x, l(5.000000), l(-2.500000)
mul_sat r2.z, r2.z, l(0.400000)
mul r2.z, r2.z, l(100.000000)
mad r3.xy, -r2.xxxx, l(10.000000, 5.000000, 0.000000, 0.000000), l(6.857410, 7.085000, 0.000000, 0.000000)
exp r2.w, r3.x
mul r2.w, r2.w, r8.x
mul r2.yw, r2.xxxw, l(0.000000, 5.000000, 0.000000, 9.136810)
mul r3.x, r2.x, r2.y
mad r3.x, -r3.x, l(2.015905), r3.y
exp r3.x, r3.x
mul r3.x, r3.x, r8.x
mul r3.x, r3.x, l(9.708090)
max r2.w, r2.w, r3.x
max r2.w, r2.w, l(1.268160)
mov r3.xy, l(0,0,0,0)
mov r4.w, l(0)
mov r5.yz, l(0,0,1.000000,0)
mov r6.xy, l(0,0,0,0)
mov r9.xy, l(0,0,0,0)
mov r10.xy, l(0,0,0,0)
mov r11.x, l(1.000000)
mov r16.xyzw, l(0,0,0,0)
mov r17.yzw, l(0,0,0,0)
mov r3.w, l(0)
mov r5.w, l(0)
loop 
  uge r6.w, r5.w, cb2[0].y
  breakc_nz r6.w
  ushr r3.z, r5.w, l(5)
  iadd r4.xyz, r3.xyzx, r15.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r3.z, r4.xyzw, t7.yzxw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r18.xyzw, r5.w, l(0), t15.wxyz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r19.xyzw, r5.w, l(16), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r20.xyzw, r5.w, l(32), t15.yxwz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r21.xyzw, r5.w, l(48), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r22.xyzw, r5.w, l(64), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r23.xyzw, r5.w, l(80), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r4.xy, r5.w, l(96), t15.xyxx
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r5.w, l(116), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r5.w, l(132), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r5.w, l(148), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r5.w, l(164), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r5.w, l(180), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r5.w, l(196), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xy, r5.w, l(212), t15.xyxx
  add r32.xyz, -r18.yzwy, v5.xyzx
  dp3 r4.z, r32.xyzx, r32.xyzx
  sqrt r4.z, r4.z
  ge r4.z, cb2[54].y, r4.z
  and r6.w, r24.y, l(0x0000ffff)
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r6.w, l(0), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r6.w, l(16), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r6.w, l(32), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r6.w, l(48), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r6.w, l(64), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r38.xyzw, r6.w, l(80), t16.xyzw
  dp3 r8.z, r33.xyzx, r32.xyzx
  add_sat r8.z, r33.w, r8.z
  dp3 r8.w, r34.xyzx, r32.xyzx
  add_sat r8.w, r34.w, r8.w
  mul r8.z, r8.w, r8.z
  dp3 r8.w, r35.xyzx, r32.xyzx
  add_sat r8.w, r35.w, r8.w
  mul r8.z, r8.w, r8.z
  dp3 r8.w, r36.xyzx, r32.xyzx
  add_sat r8.w, r36.w, r8.w
  mul r8.z, r8.w, r8.z
  dp3 r8.w, r37.xyzx, r32.xyzx
  add_sat r8.w, r37.w, r8.w
  mul r8.z, r8.w, r8.z
  dp3 r8.w, r38.xyzx, r32.xyzx
  add_sat r8.w, r38.w, r8.w
  mul r5.x, r8.w, r8.z
  and r8.z, r4.x, l(1)
  movc r8.zw, r8.zzzz, r5.xxxy, r5.zzzx
  mov r33.xy, r24.zwzz
  mov r33.z, r25.z
  dp3 r5.x, r14.xyzx, r33.xyzx
  dp3 r9.w, r32.xyzx, r33.xyzx
  add r9.w, -r25.w, r9.w
  ge r10.w, r9.w, l(0.000000)
  max r9.w, r2.z, |r9.w|
  movc r9.w, r10.w, r9.w, -r9.w
  max r5.x, -r5.x, l(0.00000010)
  div r5.x, r9.w, r5.x
  min r5.x, |r5.x|, l(131072.000000)
  mov r25.z, r26.z
  dp3 r9.w, r14.xyzx, r25.xyzx
  dp3 r10.w, r32.xyzx, r25.xyzx
  add r10.w, -r26.w, r10.w
  ge r11.z, r10.w, l(0.000000)
  max r10.w, r2.z, |r10.w|
  movc r10.w, r11.z, r10.w, -r10.w
  max r9.w, -r9.w, l(0.00000010)
  div r9.w, r10.w, r9.w
  min r5.x, r5.x, |r9.w|
  mov r26.z, r27.z
  dp3 r9.w, r14.xyzx, r26.xyzx
  dp3 r10.w, r32.xyzx, r26.xyzx
  add r10.w, -r27.w, r10.w
  ge r11.z, r10.w, l(0.000000)
  max r10.w, r2.z, |r10.w|
  movc r10.w, r11.z, r10.w, -r10.w
  max r9.w, -r9.w, l(0.00000010)
  div r9.w, r10.w, r9.w
  min r5.x, r5.x, |r9.w|
  mov r27.z, r28.z
  dp3 r9.w, r14.xyzx, r27.xyzx
  dp3 r10.w, r32.xyzx, r27.xyzx
  add r10.w, -r28.w, r10.w
  ge r11.z, r10.w, l(0.000000)
  max r10.w, r2.z, |r10.w|
  movc r10.w, r11.z, r10.w, -r10.w
  max r9.w, -r9.w, l(0.00000010)
  div r9.w, r10.w, r9.w
  min r5.x, r5.x, |r9.w|
  mov r28.z, r30.x
  dp3 r9.w, r14.xyzx, r28.xyzx
  dp3 r10.w, r32.xyzx, r28.xyzx
  add r10.w, -r30.y, r10.w
  ge r11.z, r10.w, l(0.000000)
  max r10.w, r2.z, |r10.w|
  movc r10.w, r11.z, r10.w, -r10.w
  max r9.w, -r9.w, l(0.00000010)
  div r9.w, r10.w, r9.w
  min r5.x, r5.x, |r9.w|
  mov r31.zw, r30.zzzw
  dp3 r9.w, r14.zxyz, r31.xzwx
  dp3 r10.w, r32.zxyz, r31.xzwx
  add r10.w, -r31.y, r10.w
  ge r11.z, r10.w, l(0.000000)
  max r10.w, r2.z, |r10.w|
  movc r10.w, r11.z, r10.w, -r10.w
  max r9.w, -r9.w, l(0.00000010)
  div r9.w, r10.w, r9.w
  min r5.x, r5.x, |r9.w|
  mov r25.x, r21.w
  mov r25.yz, r22.zzwz
  add r25.xyz, r32.xyzx, r25.xyzx
  mad r25.xyz, r14.xyzx, r5.xxxx, r25.xyzx
  dp3 r9.w, r25.xyzx, r25.xyzx
  sqrt r9.w, r9.w
  div r5.x, r5.x, r9.w
  add r5.x, r5.x, r5.x
  sqrt r5.x, r5.x
  mad r5.x, r2.x, l(5.000000), r5.x
  add r5.x, r5.x, l(-0.844800)
  mov r18.y, r19.z
  mov r18.z, r20.x
  dp3 r26.x, r25.xyzx, r18.xyzx
  mov r27.xy, r19.xwxx
  mov r27.z, r20.w
  dp3 r26.y, r25.xyzx, r27.xyzx
  mov r20.x, r19.y
  dp3 r26.z, r25.xyzx, r20.xyzx
  ubfe r11.zw, l(0, 0, 6, 9), l(0, 0, 25, 16), r24.yyyy
  utof r26.w, r11.w
  sample_l_indexable(texturecubearray)(float,float,float,float) r19.xyz, r26.xyzw, t8.xyzw, s2, r5.x
  and r24.yzw, r19.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
  ieq r24.yzw, r24.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
  or r5.x, r24.z, r24.y
  or r5.x, r24.w, r5.x
  movc r19.xyz, r5.xxxx, l(1.000000,1.000000,0,0), r19.xyzx
  dp3 r25.x, r32.xyzx, r18.xyzx
  dp3 r25.y, r32.xyzx, r27.xyzx
  dp3 r25.z, r32.xyzx, r20.xyzx
  mad_sat r21.xyz, r25.xyzx, r21.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mov r22.z, r23.x
  mad r21.xyz, r21.xyzx, r22.xyzx, r23.yzwy
  dp3 r26.x, r7.xyzx, r18.xyzx
  dp3 r26.y, r7.xyzx, r27.xyzx
  dp3 r26.z, r7.xyzx, r20.xyzx
  lt r18.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r26.xyzx
  movc r6.z, r18.x, l(0), l(0.500000)
  add r20.xyz, r6.xyzx, r21.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r20.xyz, r20.xyzx, t17.xyzw, s4, l(0.000000)
  movc r9.z, r18.y, l(0), l(0.500000)
  add r18.xyw, r9.xyxz, r21.xyxz
  sample_l_indexable(texture3d)(float,float,float,float) r18.xyw, r18.xywx, t18.xywz, s4, l(0.000000)
  movc r10.z, r18.z, l(0), l(0.500000)
  add r21.xyz, r10.xyzx, r21.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r21.xyz, r21.xyzx, t19.xyzw, s4, l(0.000000)
  mul r22.xyz, r26.xyzx, r26.xyzx
  sample_l_indexable(texturecubearray)(float,float,float,float) r23.xyz, r26.xyzw, t8.xyzw, s2, l(6.000000)
  and r24.yzw, r23.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
  ieq r24.yzw, r24.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
  or r5.x, r24.z, r24.y
  or r5.x, r24.w, r5.x
  movc r23.xyz, r5.xxxx, l(1.000000,1.000000,0,0), r23.xyzx
  mov r25.xyzw, r16.xyzw
  mov r24.yzw, r17.yyzw
  mov r5.x, r3.w
  mov r6.z, r3.z
  loop 
    breakc_z r6.z
    firstbit_lo r9.z, r6.z
    ishl r9.z, l(1), r9.z
    and r9.w, r6.z, r9.z
    if_nz r9.w
      not r9.z, r9.z
      and r6.z, r6.z, r9.z
      if_nz r4.z
        mov r9.z, r4.x
        mov r26.xy, r8.zwzz
        mov r9.w, l(1)
        loop 
          ige r10.z, r9.w, r11.z
          breakc_nz r10.z
          iadd r10.z, r6.w, r9.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r10.z, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r10.z, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r10.z, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r10.z, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r10.z, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r10.z, l(80), t16.xyzw
          dp3 r10.z, r27.xyzx, r32.xyzx
          add_sat r10.z, r27.w, r10.z
          mul r10.z, r10.z, r26.x
          dp3 r10.w, r28.xyzx, r32.xyzx
          add_sat r10.w, r28.w, r10.w
          mul r10.z, r10.w, r10.z
          dp3 r10.w, r30.xyzx, r32.xyzx
          add_sat r10.w, r30.w, r10.w
          mul r10.z, r10.w, r10.z
          dp3 r10.w, r31.xyzx, r32.xyzx
          add_sat r10.w, r31.w, r10.w
          mul r10.z, r10.w, r10.z
          dp3 r10.w, r33.xyzx, r32.xyzx
          add_sat r10.w, r33.w, r10.w
          mul r10.z, r10.w, r10.z
          dp3 r10.w, r34.xyzx, r32.xyzx
          add_sat r10.w, r34.w, r10.w
          mul r26.x, r10.w, r10.z
          ushr r11.w, r9.z, l(2)
          ubfe r12.x, l(1), l(2), r9.z
          and r13.x, r11.w, l(2)
          max r15.w, r26.x, r26.y
          mad r10.z, -r10.z, r10.w, l(1.000000)
          mul r10.z, r10.z, r26.y
          movc r11.y, r13.x, r10.z, r15.w
          movc r26.xy, r12.xxxx, r26.xyxx, r11.xyxx
          iadd r9.w, r9.w, l(1)
          mov r9.z, r11.w
        endloop 
        mov_sat r26.y, r26.y
        mul r9.z, r4.y, r26.y
        lt r9.w, l(0.000000), r9.z
        if_nz r9.w
          mad r27.z, r26.y, r4.y, r24.w
          mul r9.z, r24.x, r9.z
          mul r26.xzw, r9.zzzz, r22.xxyz
          mul r28.xyz, r18.xywx, r26.zzzz
          mad r28.xyz, r20.xyzx, r26.xxxx, r28.xyzx
          mad r26.xzw, r21.xxyz, r26.wwww, r28.xxyz
          mul r28.xyz, r23.xyzx, r26.xzwx
          dp3 r9.w, r28.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r28.xyz, r26.xzwx, r23.xyzx, r25.xyzx
          mul r10.z, r2.w, r9.w
          mul r26.xzw, r9.zzzz, r19.xxyz
          dp3 r9.z, r26.xzwx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r9.z, r2.w, r9.w, r9.z
          div r9.z, r10.z, r9.z
          mov r30.x, r25.w
          mov r30.yz, r24.yyzy
          mad r27.xyw, r26.zwzx, r9.zzzz, r30.yzyx
          mov r28.w, r27.w
        else 
          mov r28.xyzw, r25.xyzw
          mov r27.xyz, r24.yzwy
        endif 
        mov r5.x, l(-1)
        mov r25.xyzw, r28.xyzw
        mov r24.yzw, r27.xxyz
        break 
      endif 
    endif 
  endloop 
  if_nz r5.x
    mov r16.xyzw, r25.xyzw
    mov r17.yzw, r24.yyzw
    mov r3.w, l(-1)
    break 
  endif 
  iadd r5.w, r5.w, l(32)
  mov r16.xyzw, r25.xyzw
  mov r17.yzw, r24.yyzw
  mov r3.w, r5.x
endloop 
if_z r3.w
  iadd r3.x, cb2[0].y, -cb2[58].x
  and r3.y, r3.x, l(-32)
  iadd r3.z, -r3.y, r3.x
  and r3.w, cb2[0].y, l(-32)
  iadd r4.x, -r3.w, cb2[0].y
  mov r5.xy, l(0,0,0,0)
  mov r6.w, l(0)
  mov r9.yz, l(0,0,1.000000,0)
  mov r10.xy, l(0,0,0,0)
  mov r11.x, l(1.000000)
  mov r18.xy, l(0,0,0,0)
  mov r19.xy, l(0,0,0,0)
  mov r20.xyzw, r16.xyzw
  mov r21.yzw, r17.yyzw
  mov r4.y, r3.y
  loop 
    uge r4.z, r4.y, cb2[0].y
    breakc_nz r4.z
    ushr r5.z, r4.y, l(5)
    iadd r6.xyz, r5.xyzx, r15.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r4.z, r6.xyzw, t7.yzxw
    ieq r4.w, r3.y, r4.y
    bfi r5.z, r3.z, l(0), l(0), r4.z
    movc r4.z, r4.w, r5.z, r4.z
    ieq r4.w, r3.w, r4.y
    ubfe r5.z, r4.x, l(0), r4.z
    movc r4.z, r4.w, r5.z, r4.z
    iadd r4.w, r4.y, cb2[0].x
    mov r22.xyzw, r20.xyzw
    mov r23.xyz, r21.yzwy
    mov r5.z, r4.z
    loop 
      breakc_z r5.z
      firstbit_lo r5.w, r5.z
      ishl r6.x, l(1), r5.w
      and r6.y, r5.z, r6.x
      if_nz r6.y
        xor r5.z, r5.z, r6.x
        iadd r6.x, r4.w, r5.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r24.xyzw, r6.x, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r6.xy, r6.x, l(16), t11.xyxx
        add r24.xyz, r24.xyzx, -v5.xyzx
        mov r6.z, r24.w
        lt r6.xyz, |r24.xyzx|, r6.zxyz
        and r6.x, r6.y, r6.x
        and r6.x, r6.z, r6.x
        if_nz r6.x
          iadd r5.w, r4.y, r5.w
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r5.w, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r6.xy, r5.w, l(96), t15.xyxx
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r5.w, l(116), t15.zwxy
          add r26.xyz, -r24.yzwy, v5.xyzx
          and r6.z, r25.w, l(0x0000ffff)
          ubfe r8.z, l(6), l(25), r25.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r6.z, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r6.z, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r6.z, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r6.z, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r6.z, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r6.z, l(80), t16.xyzw
          dp3 r8.w, r27.xyzx, r26.xyzx
          add_sat r8.w, r27.w, r8.w
          dp3 r9.w, r28.xyzx, r26.xyzx
          add_sat r9.w, r28.w, r9.w
          mul r8.w, r8.w, r9.w
          dp3 r9.w, r30.xyzx, r26.xyzx
          add_sat r9.w, r30.w, r9.w
          mul r8.w, r8.w, r9.w
          dp3 r9.w, r31.xyzx, r26.xyzx
          add_sat r9.w, r31.w, r9.w
          mul r8.w, r8.w, r9.w
          dp3 r9.w, r32.xyzx, r26.xyzx
          add_sat r9.w, r32.w, r9.w
          mul r8.w, r8.w, r9.w
          dp3 r9.w, r33.xyzx, r26.xyzx
          add_sat r9.w, r33.w, r9.w
          mul r9.x, r8.w, r9.w
          and r8.w, r6.x, l(1)
          movc r9.xw, r8.wwww, r9.xxxy, r9.zzzx
          mov r8.w, r6.x
          mov r27.xy, r9.xwxx
          mov r10.w, l(1)
          loop 
            ige r11.z, r10.w, r8.z
            breakc_nz r11.z
            iadd r11.z, r6.z, r10.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r11.z, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r11.z, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r11.z, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r11.z, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r11.z, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r11.z, l(80), t16.xyzw
            dp3 r11.z, r28.xyzx, r26.xyzx
            add_sat r11.z, r28.w, r11.z
            mul r11.z, r11.z, r27.x
            dp3 r11.w, r30.xyzx, r26.xyzx
            add_sat r11.w, r30.w, r11.w
            mul r11.z, r11.w, r11.z
            dp3 r11.w, r31.xyzx, r26.xyzx
            add_sat r11.w, r31.w, r11.w
            mul r11.z, r11.w, r11.z
            dp3 r11.w, r32.xyzx, r26.xyzx
            add_sat r11.w, r32.w, r11.w
            mul r11.z, r11.w, r11.z
            dp3 r11.w, r33.xyzx, r26.xyzx
            add_sat r11.w, r33.w, r11.w
            mul r11.z, r11.w, r11.z
            dp3 r11.w, r34.xyzx, r26.xyzx
            add_sat r11.w, r34.w, r11.w
            mul r27.x, r11.w, r11.z
            ushr r12.x, r8.w, l(2)
            ubfe r13.x, l(1), l(2), r8.w
            and r15.w, r12.x, l(2)
            max r18.w, r27.x, r27.y
            mad r11.z, -r11.z, r11.w, l(1.000000)
            mul r11.z, r11.z, r27.y
            movc r11.y, r15.w, r11.z, r18.w
            movc r27.xy, r13.xxxx, r27.xyxx, r11.xyxx
            iadd r10.w, r10.w, l(1)
            mov r8.w, r12.x
          endloop 
          mov_sat r27.y, r27.y
          mul r6.x, r6.y, r27.y
          lt r6.z, l(0.000000), r6.x
          if_nz r6.z
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r5.w, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r5.w, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r5.w, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r5.w, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r5.w, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r5.w, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r5.w, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r5.w, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r5.w, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r5.w, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xy, r5.w, l(212), t15.xyxx
            mad r23.z, r27.y, r6.y, r23.z
            mul r5.w, r25.z, r6.x
            mov r25.z, r34.z
            dp3 r6.x, r14.xyzx, r25.xyzx
            dp3 r6.y, r26.xyzx, r25.xyzx
            add r6.y, -r34.w, r6.y
            ge r6.z, r6.y, l(0.000000)
            max r6.y, r2.z, |r6.y|
            movc r6.y, r6.z, r6.y, -r6.y
            max r6.x, -r6.x, l(0.00000010)
            div r6.x, r6.y, r6.x
            min r6.x, |r6.x|, l(131072.000000)
            mov r34.z, r35.z
            dp3 r6.y, r14.xyzx, r34.xyzx
            dp3 r6.z, r26.xyzx, r34.xyzx
            add r6.z, -r35.w, r6.z
            ge r8.z, r6.z, l(0.000000)
            max r6.z, r2.z, |r6.z|
            movc r6.z, r8.z, r6.z, -r6.z
            max r6.y, -r6.y, l(0.00000010)
            div r6.y, r6.z, r6.y
            min r6.x, |r6.y|, r6.x
            mov r35.z, r36.z
            dp3 r6.y, r14.xyzx, r35.xyzx
            dp3 r6.z, r26.xyzx, r35.xyzx
            add r6.z, -r36.w, r6.z
            ge r8.z, r6.z, l(0.000000)
            max r6.z, r2.z, |r6.z|
            movc r6.z, r8.z, r6.z, -r6.z
            max r6.y, -r6.y, l(0.00000010)
            div r6.y, r6.z, r6.y
            min r6.x, |r6.y|, r6.x
            mov r36.z, r37.z
            dp3 r6.y, r14.xyzx, r36.xyzx
            dp3 r6.z, r26.xyzx, r36.xyzx
            add r6.z, -r37.w, r6.z
            ge r8.z, r6.z, l(0.000000)
            max r6.z, r2.z, |r6.z|
            movc r6.z, r8.z, r6.z, -r6.z
            max r6.y, -r6.y, l(0.00000010)
            div r6.y, r6.z, r6.y
            min r6.x, |r6.y|, r6.x
            mov r37.z, r38.x
            dp3 r6.y, r14.xyzx, r37.xyzx
            dp3 r6.z, r26.xyzx, r37.xyzx
            add r6.z, -r38.y, r6.z
            ge r8.z, r6.z, l(0.000000)
            max r6.z, r2.z, |r6.z|
            movc r6.z, r8.z, r6.z, -r6.z
            max r6.y, -r6.y, l(0.00000010)
            div r6.y, r6.z, r6.y
            min r6.x, |r6.y|, r6.x
            mov r39.zw, r38.zzzw
            dp3 r6.y, r14.zxyz, r39.xzwx
            dp3 r6.z, r26.zxyz, r39.xzwx
            add r6.z, -r39.y, r6.z
            ge r8.z, r6.z, l(0.000000)
            max r6.z, r2.z, |r6.z|
            movc r6.z, r8.z, r6.z, -r6.z
            max r6.y, -r6.y, l(0.00000010)
            div r6.y, r6.z, r6.y
            min r6.x, |r6.y|, r6.x
            mov r25.x, r31.w
            mov r25.yz, r32.zzwz
            add r11.yzw, r26.xxyz, r25.xxyz
            mad r11.yzw, r14.xxyz, r6.xxxx, r11.yyzw
            dp3 r6.y, r11.yzwy, r11.yzwy
            sqrt r6.y, r6.y
            div r6.x, r6.x, r6.y
            add r6.x, r6.x, r6.x
            sqrt r6.x, r6.x
            mad r6.x, r2.x, l(5.000000), r6.x
            add r6.x, r6.x, l(-0.844800)
            mov r24.y, r28.z
            mov r24.z, r30.x
            dp3 r34.x, r11.yzwy, r24.xyzx
            mov r25.xy, r28.xwxx
            mov r25.z, r30.w
            dp3 r34.y, r11.yzwy, r25.xyzx
            mov r30.x, r28.y
            dp3 r34.z, r11.yzwy, r30.xyzx
            ubfe r6.y, l(9), l(16), r25.w
            utof r34.w, r6.y
            sample_l_indexable(texturecubearray)(float,float,float,float) r6.xyz, r34.xyzw, t8.xyzw, s2, r6.x
            and r11.yzw, r6.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
            ieq r11.yzw, r11.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
            or r8.z, r11.z, r11.y
            or r8.z, r11.w, r8.z
            movc r6.xyz, r8.zzzz, l(1.000000,1.000000,0,0), r6.xyzx
            dp3 r28.x, r26.xyzx, r24.xyzx
            dp3 r28.y, r26.xyzx, r25.xyzx
            dp3 r28.z, r26.xyzx, r30.xyzx
            mad_sat r11.yzw, r28.xxyz, r31.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
            mov r32.z, r33.x
            mad r11.yzw, r11.yyzw, r32.xxyz, r33.yyzw
            dp3 r34.x, r7.xyzx, r24.xyzx
            dp3 r34.y, r7.xyzx, r25.xyzx
            dp3 r34.z, r7.xyzx, r30.xyzx
            lt r24.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r34.xyzx
            movc r10.z, r24.x, l(0), l(0.500000)
            add r25.xyz, r10.xyzx, r11.yzwy
            sample_l_indexable(texture3d)(float,float,float,float) r25.xyz, r25.xyzx, t17.xyzw, s4, l(0.000000)
            mul r26.xyz, r34.xyzx, r34.xyzx
            mul r26.xyz, r5.wwww, r26.xyzx
            movc r18.z, r24.y, l(0), l(0.500000)
            add r24.xyw, r11.yzyw, r18.xyxz
            sample_l_indexable(texture3d)(float,float,float,float) r24.xyw, r24.xywx, t18.xywz, s4, l(0.000000)
            mul r24.xyw, r26.yyyy, r24.xyxw
            mad r24.xyw, r25.xyxz, r26.xxxx, r24.xyxw
            movc r19.z, r24.z, l(0), l(0.500000)
            add r11.yzw, r11.yyzw, r19.xxyz
            sample_l_indexable(texture3d)(float,float,float,float) r11.yzw, r11.yzwy, t19.wxyz, s4, l(0.000000)
            mad r11.yzw, r11.yyzw, r26.zzzz, r24.xxyw
            sample_l_indexable(texturecubearray)(float,float,float,float) r24.xyz, r34.xyzw, t8.xyzw, s2, l(6.000000)
            and r25.xyz, r24.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
            ieq r25.xyz, r25.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
            or r8.z, r25.y, r25.x
            or r8.z, r25.z, r8.z
            movc r24.xyz, r8.zzzz, l(1.000000,1.000000,0,0), r24.xyzx
            mul r25.xyz, r11.yzwy, r24.xyzx
            dp3 r8.z, r25.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r22.xyz, r11.yzwy, r24.xyzx, r22.xyzx
            mul r8.w, r2.w, r8.z
            mul r6.xyz, r5.wwww, r6.xyzx
            dp3 r5.w, r6.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r5.w, r2.w, r8.z, r5.w
            div r5.w, r8.w, r5.w
            mov r24.x, r22.w
            mov r24.yz, r23.xxyx
            mad r23.xyw, r6.yzyx, r5.wwww, r24.yzyx
            mov r22.w, r23.w
          endif 
        endif 
      endif 
    endloop 
    mov r20.xyzw, r22.xyzw
    mov r21.yzw, r23.xxyz
    iadd r4.y, r4.y, l(32)
  endloop 
  lt r3.w, r21.w, l(1.000000)
  if_nz r3.w
    mov r4.xy, l(0,0,0,0)
    mov r5.w, l(0)
    mov r6.yz, l(0,0,1.000000,0)
    mov r9.xy, l(0,0,0,0)
    mov r10.x, l(1.000000)
    mov r11.xy, l(0,0,0,0)
    mov r18.xy, l(0,0,0,0)
    mov r19.x, r20.w
    mov r19.yzw, r21.yyzw
    mov r22.xyz, r20.xyzx
    mov r3.w, r21.w
    mov r4.w, l(0)
    loop 
      uge r6.w, r4.w, r3.x
      breakc_nz r6.w
      ushr r4.z, r4.w, l(5)
      iadd r5.xyz, r4.xyzx, r15.xyzx
      ld_indexable(texture2darray)(uint,uint,uint,uint) r4.z, r5.xyzw, t7.yzxw
      ieq r5.x, r3.y, r4.w
      ubfe r5.y, r3.z, l(0), r4.z
      movc r4.z, r5.x, r5.y, r4.z
      iadd r5.x, r4.w, cb2[0].x
      mov r23.xyzw, r19.xyzw
      mov r24.xyz, r22.xyzx
      mov r5.y, r3.w
      mov r5.z, r4.z
      loop 
        breakc_z r5.z
        firstbit_lo r6.w, r5.z
        ishl r8.z, l(1), r6.w
        and r8.w, r5.z, r8.z
        if_nz r8.w
          xor r5.z, r5.z, r8.z
          iadd r8.z, r5.x, r6.w
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r25.xyzw, r8.z, l(0), t11.xyzw
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r26.xy, r8.z, l(16), t11.xyxx
          add r25.xyz, r25.xyzx, -v5.xyzx
          mov r26.z, r25.w
          lt r25.xyz, |r25.xyzx|, r26.zxyz
          and r8.z, r25.y, r25.x
          and r8.z, r25.z, r8.z
          if_nz r8.z
            iadd r6.w, r4.w, r6.w
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r6.w, l(0), t15.wxyz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r8.zw, r6.w, l(96), t15.xxxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r6.w, l(116), t15.zwxy
            add r27.xyz, -r25.yzwy, v5.xyzx
            and r9.w, r26.w, l(0x0000ffff)
            ubfe r10.z, l(6), l(25), r26.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r9.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r9.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r9.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r9.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r9.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r9.w, l(80), t16.xyzw
            dp3 r10.w, r28.xyzx, r27.xyzx
            add_sat r10.w, r28.w, r10.w
            dp3 r11.w, r30.xyzx, r27.xyzx
            add_sat r11.w, r30.w, r11.w
            mul r10.w, r10.w, r11.w
            dp3 r11.w, r31.xyzx, r27.xyzx
            add_sat r11.w, r31.w, r11.w
            mul r10.w, r10.w, r11.w
            dp3 r11.w, r32.xyzx, r27.xyzx
            add_sat r11.w, r32.w, r11.w
            mul r10.w, r10.w, r11.w
            dp3 r11.w, r33.xyzx, r27.xyzx
            add_sat r11.w, r33.w, r11.w
            mul r10.w, r10.w, r11.w
            dp3 r11.w, r34.xyzx, r27.xyzx
            add_sat r11.w, r34.w, r11.w
            mul r6.x, r10.w, r11.w
            and r10.w, r8.z, l(1)
            movc r28.xy, r10.wwww, r6.xyxx, r6.zxzz
            mov r6.x, r8.z
            mov r30.xy, r28.xyxx
            mov r10.w, l(1)
            loop 
              ige r11.w, r10.w, r10.z
              breakc_nz r11.w
              iadd r11.w, r9.w, r10.w
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r11.w, l(0), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r11.w, l(16), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r11.w, l(32), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r11.w, l(48), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r11.w, l(64), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r11.w, l(80), t16.xyzw
              dp3 r11.w, r31.xyzx, r27.xyzx
              add_sat r11.w, r31.w, r11.w
              mul r11.w, r11.w, r30.x
              dp3 r12.x, r32.xyzx, r27.xyzx
              add_sat r12.x, r32.w, r12.x
              mul r11.w, r11.w, r12.x
              dp3 r12.x, r33.xyzx, r27.xyzx
              add_sat r12.x, r33.w, r12.x
              mul r11.w, r11.w, r12.x
              dp3 r12.x, r34.xyzx, r27.xyzx
              add_sat r12.x, r34.w, r12.x
              mul r11.w, r11.w, r12.x
              dp3 r12.x, r35.xyzx, r27.xyzx
              add_sat r12.x, r35.w, r12.x
              mul r11.w, r11.w, r12.x
              dp3 r12.x, r36.xyzx, r27.xyzx
              add_sat r12.x, r36.w, r12.x
              mul r30.x, r11.w, r12.x
              ushr r13.x, r6.x, l(2)
              ubfe r15.w, l(1), l(2), r6.x
              and r17.w, r13.x, l(2)
              max r18.w, r30.x, r30.y
              mad r11.w, -r11.w, r12.x, l(1.000000)
              mul r11.w, r11.w, r30.y
              movc r10.y, r17.w, r11.w, r18.w
              movc r30.xy, r15.wwww, r30.xyxx, r10.xyxx
              iadd r10.w, r10.w, l(1)
              mov r6.x, r13.x
            endloop 
            add_sat r6.x, -r5.y, r30.y
            mul r8.z, r8.w, r6.x
            lt r9.w, l(0.000000), r8.z
            if_nz r9.w
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r6.w, l(16), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r6.w, l(32), t15.yxwz
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r6.w, l(48), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r6.w, l(64), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r6.w, l(80), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r6.w, l(132), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r6.w, l(148), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r6.w, l(164), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r6.w, l(180), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xyzw, r6.w, l(196), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r40.xy, r6.w, l(212), t15.xyxx
              mad r23.w, r6.x, r8.w, r23.w
              mul r6.x, r26.z, r8.z
              mov r26.z, r35.z
              dp3 r6.w, r14.xyzx, r26.xyzx
              dp3 r8.z, r27.xyzx, r26.xyzx
              add r8.z, -r35.w, r8.z
              ge r8.w, r8.z, l(0.000000)
              max r8.z, r2.z, |r8.z|
              movc r8.z, r8.w, r8.z, -r8.z
              max r6.w, -r6.w, l(0.00000010)
              div r6.w, r8.z, r6.w
              min r6.w, |r6.w|, l(131072.000000)
              mov r35.z, r36.z
              dp3 r8.z, r14.xyzx, r35.xyzx
              dp3 r8.w, r27.xyzx, r35.xyzx
              add r8.w, -r36.w, r8.w
              ge r9.w, r8.w, l(0.000000)
              max r8.w, r2.z, |r8.w|
              movc r8.w, r9.w, r8.w, -r8.w
              max r8.z, -r8.z, l(0.00000010)
              div r8.z, r8.w, r8.z
              min r6.w, r6.w, |r8.z|
              mov r36.z, r37.z
              dp3 r8.z, r14.xyzx, r36.xyzx
              dp3 r8.w, r27.xyzx, r36.xyzx
              add r8.w, -r37.w, r8.w
              ge r9.w, r8.w, l(0.000000)
              max r8.w, r2.z, |r8.w|
              movc r8.w, r9.w, r8.w, -r8.w
              max r8.z, -r8.z, l(0.00000010)
              div r8.z, r8.w, r8.z
              min r6.w, r6.w, |r8.z|
              mov r37.z, r38.z
              dp3 r8.z, r14.xyzx, r37.xyzx
              dp3 r8.w, r27.xyzx, r37.xyzx
              add r8.w, -r38.w, r8.w
              ge r9.w, r8.w, l(0.000000)
              max r8.w, r2.z, |r8.w|
              movc r8.w, r9.w, r8.w, -r8.w
              max r8.z, -r8.z, l(0.00000010)
              div r8.z, r8.w, r8.z
              min r6.w, r6.w, |r8.z|
              mov r38.z, r39.x
              dp3 r8.z, r14.xyzx, r38.xyzx
              dp3 r8.w, r27.xyzx, r38.xyzx
              add r8.w, -r39.y, r8.w
              ge r9.w, r8.w, l(0.000000)
              max r8.w, r2.z, |r8.w|
              movc r8.w, r9.w, r8.w, -r8.w
              max r8.z, -r8.z, l(0.00000010)
              div r8.z, r8.w, r8.z
              min r6.w, r6.w, |r8.z|
              mov r40.zw, r39.zzzw
              dp3 r8.z, r14.zxyz, r40.xzwx
              dp3 r8.w, r27.zxyz, r40.xzwx
              add r8.w, -r40.y, r8.w
              ge r9.w, r8.w, l(0.000000)
              max r8.w, r2.z, |r8.w|
              movc r8.w, r9.w, r8.w, -r8.w
              max r8.z, -r8.z, l(0.00000010)
              div r8.z, r8.w, r8.z
              min r6.w, r6.w, |r8.z|
              mov r26.x, r32.w
              mov r26.yz, r33.zzwz
              add r10.yzw, r27.xxyz, r26.xxyz
              mad r10.yzw, r14.xxyz, r6.wwww, r10.yyzw
              dp3 r8.z, r10.yzwy, r10.yzwy
              sqrt r8.z, r8.z
              div r6.w, r6.w, r8.z
              add r6.w, r6.w, r6.w
              sqrt r6.w, r6.w
              mad r6.w, r2.x, l(5.000000), r6.w
              add r6.w, r6.w, l(-0.844800)
              mov r25.y, r28.z
              mov r25.z, r31.x
              dp3 r35.x, r10.yzwy, r25.xyzx
              mov r26.xy, r28.xwxx
              mov r26.z, r31.w
              dp3 r35.y, r10.yzwy, r26.xyzx
              mov r31.x, r28.y
              dp3 r35.z, r10.yzwy, r31.xyzx
              ubfe r8.z, l(9), l(16), r26.w
              utof r35.w, r8.z
              sample_l_indexable(texturecubearray)(float,float,float,float) r10.yzw, r35.xyzw, t8.wxyz, s2, r6.w
              and r28.xyz, r10.yzwy, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
              ieq r28.xyz, r28.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
              or r6.w, r28.y, r28.x
              or r6.w, r28.z, r6.w
              movc r10.yzw, r6.wwww, l(0,1.000000,1.000000,0), r10.yyzw
              dp3 r28.x, r27.xyzx, r25.xyzx
              dp3 r28.y, r27.xyzx, r26.xyzx
              dp3 r28.z, r27.xyzx, r31.xyzx
              mad_sat r27.xyz, r28.xyzx, r32.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
              mov r33.z, r34.x
              mad r27.xyz, r27.xyzx, r33.xyzx, r34.yzwy
              dp3 r35.x, r7.xyzx, r25.xyzx
              dp3 r35.y, r7.xyzx, r26.xyzx
              dp3 r35.z, r7.xyzx, r31.xyzx
              lt r25.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r35.xyzx
              movc r9.z, r25.x, l(0), l(0.500000)
              add r26.xyz, r9.xyzx, r27.xyzx
              sample_l_indexable(texture3d)(float,float,float,float) r26.xyz, r26.xyzx, t17.xyzw, s4, l(0.000000)
              mul r28.xyz, r35.xyzx, r35.xyzx
              mul r28.xyz, r6.xxxx, r28.xyzx
              movc r11.z, r25.y, l(0), l(0.500000)
              add r25.xyw, r11.xyxz, r27.xyxz
              sample_l_indexable(texture3d)(float,float,float,float) r25.xyw, r25.xywx, t18.xywz, s4, l(0.000000)
              mul r25.xyw, r28.yyyy, r25.xyxw
              mad r25.xyw, r26.xyxz, r28.xxxx, r25.xyxw
              movc r18.z, r25.z, l(0), l(0.500000)
              add r26.xyz, r18.xyzx, r27.xyzx
              sample_l_indexable(texture3d)(float,float,float,float) r26.xyz, r26.xyzx, t19.xyzw, s4, l(0.000000)
              mad r25.xyz, r26.xyzx, r28.zzzz, r25.xywx
              sample_l_indexable(texturecubearray)(float,float,float,float) r26.xyz, r35.xyzw, t8.xyzw, s2, l(6.000000)
              and r27.xyz, r26.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
              ieq r27.xyz, r27.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
              or r6.w, r27.y, r27.x
              or r6.w, r27.z, r6.w
              movc r26.xyz, r6.wwww, l(1.000000,1.000000,0,0), r26.xyzx
              mul r27.xyz, r25.xyzx, r26.xyzx
              dp3 r6.w, r27.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
              mad r24.xyz, r25.xyzx, r26.xyzx, r24.xyzx
              mul r8.z, r2.w, r6.w
              mul r10.yzw, r6.xxxx, r10.yyzw
              dp3 r6.x, r10.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
              mad r6.x, r2.w, r6.w, r6.x
              div r6.x, r8.z, r6.x
              mad r23.xyz, r10.yzwy, r6.xxxx, r23.xyzx
            endif 
          endif 
        endif 
      endloop 
      mov r19.xyzw, r23.xyzw
      mov r22.xyz, r24.xyzx
      iadd r4.w, r4.w, l(32)
    endloop 
    mov r21.xyzw, r19.zxyw
    mov r20.xyz, r22.xyzx
    mov r21.xyzw, r21.yzxw
  else 
    mov r21.x, r20.w
  endif 
  max r2.x, r21.w, l(1.000000)
  rcp r2.x, r2.x
  mov_sat r21.w, r21.w
  mul r16.xyz, r2.xxxx, r20.xyzx
  mul r17.xyz, r2.xxxx, r21.xyzx
  lt r2.z, r21.w, l(0.990000)
  if_nz r2.z
    add r2.z, -r21.w, l(1.000000)
    mul r2.w, r2.z, cb2[19].x
    add r3.xyz, v5.xyzx, -cb2[35].xyzx
    mul r4.x, r3.x, cb2[35].w
    mul r4.yz, r3.yyzy, cb2[36].xxyx
    add_sat r3.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    mul r4.xy, r3.xyxx, cb2[36].zwzz
    mul r4.z, r3.z, cb2[37].x
    add r3.xyz, r4.xyzx, cb2[37].yzwy
    lt r4.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
    movc r4.xyz, r4.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
    mov r4.w, l(0)
    add r5.xyz, r3.xyzx, r4.wwxw
    sample_l_indexable(texture3d)(float,float,float,float) r5.xyz, r5.xyzx, t17.xyzw, s4, l(0.000000)
    mul r6.xyz, r7.xyzx, r7.xyzx
    mul r6.xyz, r2.wwww, r6.xyzx
    add r9.xyz, r3.xyzx, r4.wwyw
    sample_l_indexable(texture3d)(float,float,float,float) r9.xyz, r9.xyzx, t18.xyzw, s4, l(0.000000)
    mul r9.xyz, r6.yyyy, r9.xyzx
    mad r5.xyz, r5.xyzx, r6.xxxx, r9.xyzx
    add r3.xyz, r3.xyzx, r4.wwzw
    sample_l_indexable(texture3d)(float,float,float,float) r3.xyz, r3.xyzx, t19.xyzw, s4, l(0.000000)
    mad r3.xyz, r3.xyzx, r6.zzzz, r5.xyzx
    mov r7.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r4.xyz, r7.xyzw, t8.xyzw, s2, l(6.000000)
    mul r3.xyz, r3.xyzx, r4.xyzx
    dp3 r2.w, r3.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
    mad r16.xyz, r20.xyzx, r2.xxxx, r3.xyzx
    mov r14.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r3.xyz, r14.xyzw, t8.xyzw, s2, r2.y
    mad r2.x, cb2[19].x, r2.z, -r2.w
    mad r2.x, r8.y, r2.x, r2.w
    mad r17.xyz, r3.xyzx, r2.xxxx, r17.xyzx
  endif 
else 
  mov r17.x, r16.w
endif 
mad r2.xyz, r16.xyzx, r1.wwww, r12.yzwy
add r3.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r3.xyz, r3.xyzx, r13.yzwy
mad r1.xyz, r29.xyzx, r1.xyzx, r3.xyzx
mad r0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
mad r1.xy, r8.xyxx, l(0.984375, 0.984375, 0.000000, 0.000000), l(0.00781250, 0.00781250, 0.000000, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r1.xy, r1.xyxx, t5.xyzw, s2, l(0.000000)
mul r2.xyz, r1.wwww, r17.xyzx
mul r1.yzw, r1.yyyy, r2.xxyz
mul r2.xyz, r1.xxxx, r2.xyzx
mul r2.xyz, r2.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
mad r1.xyz, r1.yzwy, l(0.040000, 0.040000, 0.040000, 0.000000), r2.xyzx
add r0.xyz, r0.xyzx, r1.xyzx
lt r1.x, l(0.000000), cb2[9].z
if_nz r1.x
  dp3 r1.x, v5.xyzx, v5.xyzx
  rsq r1.y, r1.x
  mul r1.yzw, r1.yyyy, v5.xxyz
  sqrt r1.x, r1.x
  lt r2.x, l(0.000000), cb2[13].w
  if_nz r2.x
    mad r2.xy, r1.xxxx, cb2[15].xyxx, cb2[14].zwzz
    mul r2.xy, r2.xyxx, cb2[16].xyxx
    lt r2.z, l(0.010000), |v5.z|
    mul r3.xy, v5.zzzz, cb2[15].zwzz
    mul r3.zw, r3.xxxy, l(0.000000, 0.000000, -1.442695, -1.442695)
    exp r3.zw, r3.zzzw
    add r3.zw, -r3.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    div r3.xy, r3.zwzz, r3.xyxx
    mul r3.xy, r2.xyxx, r3.xyxx
    movc r2.xy, r2.zzzz, r3.xyxx, r2.xyxx
    mul r2.xzw, r2.xxxx, cb2[12].xxyz
    exp r2.xzw, r2.xxzw
    mul r3.xyz, r2.yyyy, cb2[12].xyzx
    exp r3.xyz, r3.xyzx
    add r3.xyz, -r2.xzwx, r3.xyzx
    mad r2.xyz, cb2[13].wwww, r3.xyzx, r2.xzwx
  else 
    mad r2.w, r1.x, cb2[15].x, cb2[14].z
    mul r2.w, r2.w, cb2[16].x
    lt r3.x, l(0.010000), |v5.z|
    mul r3.y, v5.z, cb2[15].z
    mul r3.z, r3.y, l(-1.442695)
    exp r3.z, r3.z
    add r3.z, -r3.z, l(1.000000)
    div r3.y, r3.z, r3.y
    mul r3.y, r2.w, r3.y
    movc r2.w, r3.x, r3.y, r2.w
    mul r3.xyz, r2.wwww, cb2[12].xyzx
    exp r2.xyz, r3.xyzx
  endif 
  mad r2.xyz, r2.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r2.xyz, r2.xyzx, -cb2[9].zzzz
  dp3 r1.y, cb2[7].yzwy, -r1.yzwy
  mad r1.z, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r1.w, cb2[8].w, -r1.y, l(1.000000)
  mul r1.w, r1.w, r1.w
  mul r1.w, r1.w, l(12.566371)
  div r1.z, r1.z, r1.w
  add r1.x, r1.x, -cb2[10].w
  mul_sat r1.x, r1.x, cb2[11].w
  mul r1.x, r1.x, r1.z
  mov_sat r1.y, r1.y
  mad r1.y, r1.y, r1.y, l(1.000000)
  mad r1.y, r1.y, l(0.05968310), l(-1.000000)
  mad r1.y, cb2[8].z, r1.y, l(1.000000)
  mul r1.xzw, r1.xxxx, cb2[11].xxyz
  mad r1.xyz, r1.yyyy, cb2[10].xyzx, r1.xzwx
  mul r1.xyz, r1.xyzx, cb2[9].wwww
  add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r1.xyz, r1.xyzx, r3.xyzx
  mad r1.xyz, r0.xyzx, r2.xyzx, r1.xyzx
else 
  mul r1.w, v5.z, cb2[6].x
  mad r2.x, cb2[6].x, v5.z, cb2[5].x
  lt r2.y, |r1.w|, l(0.000100)
  min r2.z, r2.x, l(64.000000)
  mul r2.z, r2.z, l(1.442695)
  exp r2.z, r2.z
  mov_sat r2.w, cb2[6].z
  lt r3.x, r2.x, l(0.000000)
  add r2.x, r2.x, l(1.000000)
  movc r2.x, r3.x, r2.z, r2.x
  add r2.x, r2.x, -cb2[6].z
  movc r1.w, r2.y, l(1.000000), r1.w
  div r1.w, r2.x, r1.w
  movc r1.w, r2.y, r2.w, r1.w
  mul r1.w, r1.w, cb2[5].z
  dp3 r2.x, v5.xyzx, v5.xyzx
  sqrt r2.y, r2.x
  mad r1.w, r1.w, r2.y, cb2[5].w
  exp r1.w, r1.w
  min r1.w, r1.w, l(1.000000)
  add r1.w, -r1.w, l(1.000000)
  rsq r2.x, r2.x
  mul r2.xyz, r2.xxxx, v5.xyzx
  dp3 r2.x, cb2[7].yzwy, r2.xyzx
  mad_sat r2.x, cb2[8].y, r2.x, cb2[8].x
  add r3.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r2.xyzw, r2.xxxx, r3.xyzw, cb2[4].xyzw
  mul r1.w, r1.w, r2.w
  add r2.xyz, -r0.xyzx, r2.xyzx
  mad r1.xyz, r1.wwww, r2.xyzx, r0.xyzx
endif 
mul r0.xyz, r1.xyzx, cb1[85].yyyy
ge r1.xyz, r0.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.xyz, r0.xyzx, r1.xyzx
min o0.xyz, r0.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
mov o0.w, r0.w
ret 
// Approximately 3258 instruction slots used
