//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:23:51 2021
//
//
// Buffer Definitions: 
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16 [unused]
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4 [unused]
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4 [unused]
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// cbuffer LightingPackCBuffer
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } lightConstantsCB[273];           // Offset:    0 Size: 65520
//
// }
//
// cbuffer RefProbePackCBuffer
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } refProbeConstantsCB[273];        // Offset:    0 Size: 61152
//
// }
//
// cbuffer RefProbeBlendPackCBuffer
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } refProbeAttenuationConstantsCB[682];// Offset:    0 Size: 65472
//
// }
//
// Resource bind info for gPermutedTilingBuffer
// {
//
//   struct PermutedTilingBuffer
//   {
//       
//       uint2 data;                    // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:     8
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samplerPointClamp                 sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// GBufferDiffuseColor               texture  float4          2d             t0      1 
// GBufferNormalAndGloss             texture  float4          2d             t1      1 
// GBufferSpecularColorAndOcclusion    texture  float4          2d             t2      1 
// GBufferDepth                      texture   float          2d             t4      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// gDownsampledScene                 texture  float4          2d            t21      1 
// gMotionVectors                    texture  float4          2d            t22      1 
// gPermutedTilingBuffer             texture  struct         r/o            t25      1 
// gSSAOTexture                      texture   float          2d            t27      1 
// gSSAODepthTexture                 texture   float          2d            t28      1 
// litBuffer                             UAV  float3          2d             u0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
// LightingPackCBuffer               cbuffer      NA          NA            cb9      1 
// RefProbePackCBuffer               cbuffer      NA          NA           cb10      1 
// RefProbeBlendPackCBuffer          cbuffer      NA          NA           cb11      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB1[86], immediateIndexed
dcl_constantbuffer CB2[59], immediateIndexed
dcl_constantbuffer CB9[4095], dynamicIndexed
dcl_constantbuffer CB10[3584], dynamicIndexed
dcl_constantbuffer CB11[4092], dynamicIndexed
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s4, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t25, 8
dcl_resource_texture2d (float,float,float,float) t27
dcl_resource_texture2d (float,float,float,float) t28
dcl_uav_typed_texture2d (float,float,float,float) u0
dcl_input vThreadGroupID.x
dcl_input vThreadIDInGroup.xy
dcl_temps 39
dcl_thread_group 8, 8, 1
imad r0.x, cb2[57].x, l(27), vThreadGroupID.x
ld_structured_indexable(structured_buffer, stride=8)(mixed,mixed,mixed,mixed) r0.xy, r0.x, l(0), t25.xyxx
and r0.zw, r0.xxxy, l(0, 0, 4095, 4095)
imad r1.xy, r0.zwzz, l(8, 8, 0, 0), vThreadIDInGroup.xyxx
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.xyww, t1.xyzw
ftou r0.zw, cb1[44].xxxy
ult r0.zw, r1.xxxy, r0.zzzw
and r0.z, r0.w, r0.z
lt r0.w, l(0.000000), r2.z
and r0.z, r0.w, r0.z
if_z r0.z
  ret 
endif 
ge r0.w, r2.z, l(0.500000)
ld_indexable(texture2d)(float,float,float,float) r3.x, r1.xyww, t4.xyzw
ld_indexable(texture2d)(float,float,float,float) r3.yzw, r1.xyww, t0.wxyz
ld_indexable(texture2d)(float,float,float,float) r4.xyzw, r1.xyww, t2.xyzw
ld_aoffimmi_indexable(-1,0,0)(texture2d)(float,float,float,float) r5.xyz, r1.xyww, t2.xywz
ld_aoffimmi_indexable(0,-1,0)(texture2d)(float,float,float,float) r6.xyz, r1.xyww, t2.xywz
ld_aoffimmi_indexable(1,0,0)(texture2d)(float,float,float,float) r7.xyz, r1.xyww, t2.xywz
ld_aoffimmi_indexable(0,1,0)(texture2d)(float,float,float,float) r8.xyz, r1.xyzw, t2.xywz
utof r1.zw, r1.yyyx
add r9.xy, r1.wzww, l(0.500000, 0.500000, 0.000000, 0.000000)
ge r10.x, r3.x, l(0.984375)
mul r5.w, r3.x, l(1.01587307)
mad r3.x, r3.x, l(64.000000), l(-63.000000)
movc r3.x, r10.x, r3.x, r5.w
max r3.x, r3.x, l(0.00000001)
rcp r10.y, r3.x
and r9.zw, r0.zzzz, r10.xxxy
add r10.xy, r9.xyxx, -cb1[71].xyxx
mul r10.xy, r10.xyxx, cb1[44].zwzz
mad r10.xy, r10.xyxx, l(2.000000, -2.000000, 0.000000, 0.000000), l(-1.000000, 1.000000, 0.000000, 0.000000)
mul r11.x, r10.x, cb1[12].x
mul r11.y, r10.y, cb1[13].y
mov r11.z, l(1.000000)
mul r10.xyz, r9.wwww, r11.xyzx
mul r11.xyz, r10.yyyy, cb1[17].xyzx
mad r10.xyw, r10.xxxx, cb1[16].xyxz, r11.xyxz
mad r10.xyz, r10.zzzz, cb1[18].xyzx, r10.xywx
mad r0.z, r2.w, l(3.000000), l(0.500000)
ftou r0.z, r0.z
mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r2.xy, r2.xyxx, l(0.850000, 0.850000, 0.000000, 0.000000)
dp2 r2.w, r2.xyxx, r2.xyxx
add r11.zw, -r2.wwww, l(0.000000, 0.000000, 2.000000, 1.000000)
sqrt r2.w, r11.z
mul r11.xy, r2.wwww, r2.xyxx
and r12.xyzw, r0.zzzz, l(2, 1, 2, 1)
movc r12.xyzw, r12.zwxy, l(-1.000000,-1.000000,1,1), l(1.000000,1.000000,0,0)
xor r0.z, r12.w, r12.z
movc r12.z, r0.z, l(-1.000000), l(1.000000)
mul r2.xyw, r12.xyxz, l(-1.000000, 0.000000, 0.000000, 1.000000)
mul r13.xyz, r12.xyzx, l(1.000000, -2.000000, 1.000000, 0.000000)
mul r11.xyz, r11.xywx, l(0.40824831, 0.70710677, 0.57735026, 0.000000)
mul r2.xyw, r2.xyxw, r11.yyyy
mad r2.xyw, r13.xyxz, r11.xxxx, r2.xyxw
mad r11.xyz, r12.xyzx, r11.zzzz, r2.xywx
movc r0.z, r0.w, l(-0.500000), l(-0.00146628)
add r0.z, r0.z, r2.z
mul_sat r2.y, r0.z, l(2.00982332)
dp3 r0.z, -r10.xyzx, -r10.xyzx
rsq r0.z, r0.z
mul r12.xyz, r0.zzzz, -r10.xyzx
dp2 r0.z, r1.wzww, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r0.z, r0.z
mul r0.z, r0.z, l(52.982918)
frc r0.z, r0.z
mad r0.z, r0.z, l(6.28318548), cb1[70].w
sincos r13.x, r14.x, r0.z
dp2 r0.z, r1.zwzz, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r0.z, r0.z
mul r0.z, r0.z, l(52.982918)
frc r0.z, r0.z
mad r0.z, r0.z, l(6.28318548), cb1[70].w
sincos r3.x, r15.x, r0.z
dp3_sat r2.x, r11.xyzx, r12.xyzx
dp3 r0.z, -r12.xyzx, r11.xyzx
add r0.z, r0.z, r0.z
mad r16.xyz, r11.xyzx, -r0.zzzz, -r12.xyzx
mul r0.z, r2.y, l(17.000000)
exp r0.z, r0.z
add r0.z, r0.z, l(2.000000)
div r0.z, l(2.000000), r0.z
sqrt r1.z, r0.z
mul r2.zw, r9.xxxy, cb1[44].zzzw
sample_l_indexable(texture2d)(float,float,float,float) r1.w, r2.zwzz, t27.yzwx, s4, l(0.000000)
mul r2.z, r1.w, r4.z
lt r2.w, l(0.83333331), r2.y
lt r5.w, l(60.000000), r9.w
and r2.w, r2.w, r5.w
if_nz r2.w
  mul r15.yzw, r10.yyyy, cb1[9].xxyw
  mad r15.yzw, r10.xxxx, cb1[8].xxyw, r15.yyzw
  mad r15.yzw, r10.zzzz, cb1[10].xxyw, r15.yyzw
  add r15.yzw, r15.yyzw, cb1[11].xxyw
  mad r17.xyz, r16.xyzx, l(2000.000000, 2000.000000, 2000.000000, 0.000000), r10.xyzx
  mul r18.xyz, r17.yyyy, cb1[9].xywx
  mad r17.xyw, r17.xxxx, cb1[8].xyxw, r18.xyxz
  mad r17.xyz, r17.zzzz, cb1[10].xywx, r17.xywx
  add r17.xyz, r17.xyzx, cb1[11].xywx
  ge r2.w, r17.z, r15.w
  if_nz r2.w
    mul r9.xy, cb1[44].xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
    rcp r18.z, r15.w
    mul r18.xy, r15.yzyy, r18.zzzz
    rcp r19.z, r17.z
    mul r19.xy, r17.xyxx, r19.zzzz
    lt r13.zw, l(0.000000, 0.000000, 1.000000, 1.000000), r19.xxxy
    mad r20.xyzw, r17.xxyy, r19.zzzz, l(-1.000000, 1.000000, -1.000000, 1.000000)
    mad r21.xyzw, r17.xxyy, r19.zzzz, -r18.xxyy
    lt r15.yz, r19.xxyx, l(0.000000, -1.000000, -1.000000, 0.000000)
    div r20.xyzw, r20.xyzw, r21.xyzw
    and r15.yz, r15.yyzy, r20.yywy
    movc r13.zw, r13.zzzw, r20.xxxz, r15.yyyz
    max r2.w, r13.w, r13.z
    add r17.xyw, r18.xyxz, -r19.xyxz
    mad r17.xyw, r2.wwww, r17.xyxw, r19.xyxz
    mad r13.zw, r18.xxxy, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
    mad r15.yz, r17.xxyx, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
    add r13.zw, r13.zzzw, -r15.yyyz
    mul r13.zw, r9.xxxy, |r13.zzzw|
    max r2.w, r13.w, r13.z
    max r2.w, r2.w, l(1.000000)
    rcp r2.w, r2.w
    mad r18.xyz, r18.xyzx, l(0.500000, -0.500000, 1.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    mad r19.xyw, r17.xyxw, l(0.500000, -0.500000, 0.000000, 1.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    add r20.xyz, -r18.xyzx, r19.xywx
    mad r18.xyz, r2.wwww, r20.xyzx, r18.xyzx
    add r19.xyw, -r18.xyxz, r19.xyxw
    mul r20.xyz, r19.xywx, l(0.031250, 0.031250, 0.031250, 0.000000)
    mul r9.xy, r9.xyxx, |r20.xyxx|
    max r2.w, r9.y, r9.x
    log r2.w, r2.w
    round_pi r2.w, r2.w
    max r2.w, r2.w, l(0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r5.w, r18.xyxx, t28.yzwx, s1, r2.w
    mad r21.xyz, r19.xywx, l(0.031250, 0.031250, 0.031250, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r2.w
    min r5.w, |r5.w|, |r6.w|
    mul r5.w, r21.z, r5.w
    lt r5.w, r5.w, l(1.000000)
    and r7.w, r5.w, l(1)
    mad r21.xyz, r19.xywx, l(0.062500, 0.062500, 0.062500, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r2.w
    min r6.w, |r6.w|, |r8.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    bfi r5.w, l(1), l(0), r5.w, l(2)
    movc r5.w, r6.w, r5.w, r7.w
    mad r21.xyz, r19.xywx, l(0.093750, 0.093750, 0.093750, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r2.w
    min r7.w, |r8.w|, |r6.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r8.w, r5.w, l(4)
    movc r5.w, r7.w, r8.w, r5.w
    mad r21.xyz, r19.xywx, l(0.125000, 0.125000, 0.125000, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r2.w
    min r6.w, |r6.w|, |r7.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r8.w, r5.w, l(8)
    movc r5.w, r6.w, r8.w, r5.w
    mad r21.xyz, r19.xywx, l(0.156250, 0.156250, 0.156250, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r2.w
    min r7.w, |r7.w|, |r6.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r8.w, r5.w, l(16)
    movc r5.w, r7.w, r8.w, r5.w
    mad r21.xyz, r19.xywx, l(0.187500, 0.187500, 0.187500, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r2.w
    min r6.w, |r6.w|, |r7.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r8.w, r5.w, l(32)
    movc r5.w, r6.w, r8.w, r5.w
    mad r21.xyz, r19.xywx, l(0.218750, 0.218750, 0.218750, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r2.w
    min r7.w, |r7.w|, |r6.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r8.w, r5.w, l(64)
    movc r5.w, r7.w, r8.w, r5.w
    mad r21.xyz, r19.xywx, l(0.250000, 0.250000, 0.250000, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r2.w
    min r6.w, |r6.w|, |r7.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r8.w, r5.w, l(128)
    movc r5.w, r6.w, r8.w, r5.w
    mad r21.xyz, r19.xywx, l(0.281250, 0.281250, 0.281250, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r2.w
    min r7.w, |r7.w|, |r6.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r8.w, r5.w, l(256)
    movc r5.w, r7.w, r8.w, r5.w
    mad r21.xyz, r19.xywx, l(0.312500, 0.312500, 0.312500, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r2.w
    min r6.w, |r6.w|, |r7.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r8.w, r5.w, l(512)
    movc r5.w, r6.w, r8.w, r5.w
    mad r21.xyz, r19.xywx, l(0.343750, 0.343750, 0.343750, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r2.w
    min r7.w, |r7.w|, |r6.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r8.w, r5.w, l(1024)
    movc r5.w, r7.w, r8.w, r5.w
    mad r21.xyz, r19.xywx, l(0.375000, 0.375000, 0.375000, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r2.w
    min r6.w, |r6.w|, |r7.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r8.w, r5.w, l(2048)
    movc r5.w, r6.w, r8.w, r5.w
    mad r21.xyz, r19.xywx, l(0.406250, 0.406250, 0.406250, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r2.w
    min r7.w, |r7.w|, |r6.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r8.w, r5.w, l(4096)
    movc r5.w, r7.w, r8.w, r5.w
    mad r21.xyz, r19.xywx, l(0.437500, 0.437500, 0.437500, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r2.w
    min r6.w, |r6.w|, |r7.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r8.w, r5.w, l(8192)
    movc r5.w, r6.w, r8.w, r5.w
    mad r21.xyz, r19.xywx, l(0.468750, 0.468750, 0.468750, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r2.w
    min r7.w, |r7.w|, |r6.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r8.w, r5.w, l(0x00004000)
    movc r5.w, r7.w, r8.w, r5.w
    mad r21.xyz, r19.xywx, l(0.500000, 0.500000, 0.500000, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r2.w
    min r6.w, |r6.w|, |r7.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r8.w, r5.w, l(0x00008000)
    movc r5.w, r6.w, r8.w, r5.w
    mad r21.xyz, r19.xywx, l(0.531250, 0.531250, 0.531250, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r2.w
    min r7.w, |r7.w|, |r6.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r8.w, r5.w, l(0x00010000)
    movc r5.w, r7.w, r8.w, r5.w
    mad r21.xyz, r19.xywx, l(0.562500, 0.562500, 0.562500, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r2.w
    min r6.w, |r6.w|, |r7.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r8.w, r5.w, l(0x00020000)
    movc r5.w, r6.w, r8.w, r5.w
    mad r21.xyz, r19.xywx, l(0.593750, 0.593750, 0.593750, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r2.w
    min r7.w, |r7.w|, |r6.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r8.w, r5.w, l(0x00040000)
    movc r5.w, r7.w, r8.w, r5.w
    mad r21.xyz, r19.xywx, l(0.625000, 0.625000, 0.625000, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r2.w
    min r6.w, |r6.w|, |r7.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r8.w, r5.w, l(0x00080000)
    movc r5.w, r6.w, r8.w, r5.w
    mad r21.xyz, r19.xywx, l(0.656250, 0.656250, 0.656250, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r2.w
    min r7.w, |r7.w|, |r6.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r8.w, r5.w, l(0x00100000)
    movc r5.w, r7.w, r8.w, r5.w
    mad r21.xyz, r19.xywx, l(0.687500, 0.687500, 0.687500, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r2.w
    min r6.w, |r6.w|, |r7.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r8.w, r5.w, l(0x00200000)
    movc r5.w, r6.w, r8.w, r5.w
    mad r21.xyz, r19.xywx, l(0.718750, 0.718750, 0.718750, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r2.w
    min r7.w, |r7.w|, |r6.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r8.w, r5.w, l(0x00400000)
    movc r5.w, r7.w, r8.w, r5.w
    mad r21.xyz, r19.xywx, l(0.750000, 0.750000, 0.750000, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r2.w
    min r6.w, |r6.w|, |r7.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r8.w, r5.w, l(0x00800000)
    movc r5.w, r6.w, r8.w, r5.w
    mad r21.xyz, r19.xywx, l(0.781250, 0.781250, 0.781250, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r2.w
    min r7.w, |r7.w|, |r6.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r8.w, r5.w, l(0x01000000)
    movc r5.w, r7.w, r8.w, r5.w
    mad r21.xyz, r19.xywx, l(0.812500, 0.812500, 0.812500, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r2.w
    min r6.w, |r6.w|, |r7.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r8.w, r5.w, l(0x02000000)
    movc r5.w, r6.w, r8.w, r5.w
    mad r21.xyz, r19.xywx, l(0.843750, 0.843750, 0.843750, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r2.w
    min r7.w, |r7.w|, |r6.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r8.w, r5.w, l(0x04000000)
    movc r5.w, r7.w, r8.w, r5.w
    mad r21.xyz, r19.xywx, l(0.875000, 0.875000, 0.875000, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r2.w
    min r6.w, |r6.w|, |r7.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r8.w, r5.w, l(0x08000000)
    movc r5.w, r6.w, r8.w, r5.w
    mad r21.xyz, r19.xywx, l(0.906250, 0.906250, 0.906250, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r2.w
    min r7.w, |r7.w|, |r6.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r8.w, r5.w, l(0x10000000)
    movc r5.w, r7.w, r8.w, r5.w
    mad r21.xyz, r19.xywx, l(0.937500, 0.937500, 0.937500, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r2.w
    min r6.w, |r6.w|, |r7.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r8.w, r5.w, l(0x20000000)
    movc r5.w, r6.w, r8.w, r5.w
    mad r21.xyz, r19.xywx, l(0.968750, 0.968750, 0.968750, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r2.w
    min r7.w, |r7.w|, |r6.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r8.w, r5.w, l(0x40000000)
    movc r5.w, r7.w, r8.w, r5.w
    sample_l_indexable(texture2d)(float,float,float,float) r2.w, r15.yzyy, t28.yzwx, s1, r2.w
    min r2.w, |r6.w|, |r2.w|
    mul r2.w, r17.w, r2.w
    lt r2.w, r2.w, l(1.000000)
    iadd r6.w, r5.w, l(0x80000000)
    movc r2.w, r2.w, r6.w, r5.w
    mov r21.w, l(-1)
    mov r22.z, l(-1)
    mov r9.xy, l(0,0,0,0)
    mov r5.w, l(0)
    mov r6.w, r2.w
    mov r7.w, r19.z
    mov r23.yz, l(0,0,0,0)
    mov r21.z, l(0)
    mov r8.w, l(0)
    loop 
      breakc_z r6.w
      firstbit_lo r21.y, r6.w
      ishl r12.w, l(1), r21.y
      xor r21.x, r6.w, r12.w
      utof r13.z, r21.y
      mul r13.z, r13.z, l(0.031250)
      mad r17.xyw, r19.xyxw, r13.zzzz, r18.xyxz
      sample_l_indexable(texture2d)(float,float,float,float) r13.z, r17.xyxx, t28.yzxw, s1, l(0.000000)
      mul r13.w, r17.w, |r13.z|
      lt r13.w, r13.w, l(1.000000)
      if_nz r13.w
        if_nz r21.z
          lt r13.w, r15.w, |r13.z|
          lt r14.w, r7.w, r17.w
          and r13.w, r13.w, r14.w
          movc r15.yz, r13.wwww, r17.xxyx, r9.xxyx
          mov r21.z, r17.w
          mov r23.x, r7.w
          movc r24.xyz, r13.wwww, r21.zxyz, r23.xyzx
          mov r6.w, r21.x
          mov r21.z, l(-1)
          mov r9.xy, r15.yzyy
          mov r7.w, r24.x
          mov r23.yz, r24.yyzy
          continue 
        endif 
        mov r13.w, r23.y
        mov r14.w, l(0)
      else 
        not r12.w, r12.w
        and r13.w, r12.w, r23.y
        mov r14.w, r21.z
      endif 
      if_nz r8.w
        mov r6.w, r21.x
        mov r23.y, r13.w
        mov r21.z, r14.w
        mov r8.w, l(-1)
        continue 
      endif 
      mov r15.yz, r9.xxyx
      mov r12.w, r5.w
      mov r18.w, r7.w
      mov r23.y, r13.w
      mov r23.x, r23.z
      mov r21.z, r14.w
      mov r22.w, r8.w
      mov r20.w, r17.w
      mov r23.w, |r13.z|
      mov r24.x, l(0)
      loop 
        ige r24.y, r24.x, l(4)
        breakc_nz r24.y
        itof r24.y, r24.x
        add r24.y, r24.y, l(1.000000)
        mul r24.y, r24.y, l(0.250000)
        mad r24.yzw, r20.xxyz, r24.yyyy, r17.xxyw
        sample_l_indexable(texture2d)(float,float,float,float) r25.x, r24.yzyy, t28.xyzw, s1, l(0.000000)
        mul r25.y, r24.w, |r25.x|
        lt r25.y, r25.y, l(1.000000)
        if_nz r25.y
          lt r25.y, r15.w, |r25.x|
          add r25.z, -r20.w, r24.w
          add r25.w, -r23.w, |r25.x|
          mul r26.x, r20.w, r24.w
          mul r25.w, |r25.w|, r26.x
          lt r25.z, r25.w, |r25.z|
          and r25.w, r25.z, r25.y
          lt r26.x, r18.w, r24.w
          and r26.y, r25.y, r26.x
          movc r22.xy, r26.yyyy, r21.xyxx, r23.yxyy
          or r25.z, r25.z, r26.x
          and r25.y, r25.y, r25.z
          movc r24.yz, r25.yyyy, r24.yyzy, r15.yyzy
          movc r25.z, r25.w, l(1.000000), r12.w
          movc r25.y, r25.y, r24.w, r18.w
          movc r26.xyzw, r25.wwww, r21.xyzw, r22.xyzw
          mov r12.w, r25.z
          mov r15.yz, r24.yyzy
          mov r18.w, r25.y
          mov r23.xy, r26.yxyy
          mov r21.z, r26.z
          mov r22.w, r26.w
          break 
        endif 
        mov r20.w, r24.w
        mov r23.w, |r25.x|
        iadd r24.x, r24.x, l(1)
      endloop 
      mov r9.xy, r15.yzyy
      mov r5.w, r12.w
      mov r7.w, r18.w
      mov r23.yz, r23.yyxy
      mov r8.w, r22.w
      mov r6.w, r21.x
    endloop 
    rcp r2.w, r7.w
    add r2.w, -r15.w, r2.w
    add r6.w, -r15.w, r17.z
    div r2.w, |r2.w|, |r6.w|
    min r17.x, r2.w, l(1.000000)
    countbits r2.w, r23.y
    utof r2.w, r2.w
    add r2.w, r2.w, l(1.000000)
    iadd r6.w, -r23.z, l(32)
    utof r6.w, r6.w
    div r2.w, r2.w, r6.w
    min r17.y, r2.w, l(1.000000)
  else 
    mov r17.xy, l(1.000000,0,0,0)
    mov r5.w, l(0)
  endif 
  add r2.w, r2.y, l(-0.83333331)
  mul r2.w, r2.w, l(5.99999952)
  max r2.w, r2.w, l(0.000000)
  mad r6.w, r2.w, l(-2.000000), l(3.000000)
  mul r2.w, r2.w, r2.w
  mul r2.w, r2.w, r6.w
  add r6.w, r9.w, l(-60.000000)
  mul_sat r6.w, r6.w, l(0.01666667)
  mad r7.w, r6.w, l(-2.000000), l(3.000000)
  mul r6.w, r6.w, r6.w
  mul r6.w, r6.w, r7.w
  mul r2.w, r2.w, r6.w
  mul r2.w, r17.y, r2.w
  mad r13.zw, r9.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
  add r13.zw, |r13.zzzw|, l(0.000000, 0.000000, -0.500000, -0.500000)
  add_sat r13.zw, r13.zzzw, r13.zzzw
  mad r15.yz, r13.zzwz, l(0.000000, -2.000000, -2.000000, 0.000000), l(0.000000, 3.000000, 3.000000, 0.000000)
  mul r13.zw, r13.zzzw, r13.zzzw
  mad r13.zw, -r15.yyyz, r13.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  mul r6.w, r13.w, r13.z
  mul r2.w, r2.w, r6.w
  mul r6.w, r17.x, l(10.000000)
  min r6.w, r6.w, l(1.000000)
  add r7.w, -r5.w, l(1.000000)
  mul r7.w, r2.w, r7.w
  add r6.w, r6.w, l(-1.000000)
  mad r6.w, r7.w, r6.w, l(1.000000)
  mul r2.w, r5.w, r2.w
  lt r5.w, l(0.000000), r2.w
  if_nz r5.w
    sample_l_indexable(texture2d)(float,float,float,float) r13.zw, r9.xyxx, t22.zwxy, s4, l(0.000000)
    add r15.yz, |r13.zzwz|, l(0.000000, -0.500000, -0.500000, 0.000000)
    add_sat r15.yz, r15.yyzy, r15.yyzy
    add r17.xy, |r13.zwzz|, |r13.zwzz|
    min r17.xy, r17.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    mul r17.xy, r17.xyxx, l(10.000000, 10.000000, 0.000000, 0.000000)
    mad r15.yz, r15.yyzy, l(0.000000, 30.000000, 30.000000, 0.000000), r17.xxyx
    ge r13.zw, r13.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
    movc r13.zw, r13.zzzw, r15.yyyz, -r15.yyyz
    mad r9.xy, -r13.zwzz, cb1[44].zwzz, r9.xyxx
    sample_l_indexable(texture2d)(float,float,float,float) r9.xyw, r9.xyxx, t21.xywz, s4, l(0.000000)
    mul r9.xyw, r9.xyxw, cb1[85].xxxx
    mul r9.xyw, r2.wwww, r9.xyxw
  else 
    mov r9.xyw, l(0,0,0,0)
    mov r2.w, l(0)
  endif 
else 
  mov r9.xyw, l(0,0,0,0)
  mov r6.w, l(1.000000)
  mov r2.w, l(0)
endif 
add r5.w, -r2.y, l(1.000000)
mul r7.w, r5.w, l(5.000000)
mad r8.w, r5.w, l(5.000000), l(-2.500000)
mul r8.w, r8.w, l(0.400000)
max r8.w, r8.w, l(0.000000)
mul r8.w, r8.w, l(100.000000)
mad r13.zw, -r5.wwww, l(0.000000, 0.000000, 10.000000, 5.000000), l(0.000000, 0.000000, 6.857410, 7.085000)
exp r12.w, r13.z
mul r12.w, r2.x, r12.w
mul r12.w, r12.w, l(9.136810)
mul r13.z, r5.w, r7.w
mad r13.z, -r13.z, l(2.015905), r13.w
exp r13.z, r13.z
mul r13.z, r2.x, r13.z
mul r13.z, r13.z, l(9.708090)
max r12.w, r12.w, r13.z
max r12.w, r12.w, l(1.268160)
iadd r13.z, cb2[0].y, -cb2[58].x
ushr r15.yz, r0.yyxy, l(0, 24, 24, 0)
uge r0.y, r15.y, r13.z
ult r13.w, r15.y, cb2[0].y
and r0.y, r0.y, r13.w
if_nz r0.y
  imul null, r0.y, r15.y, l(14)
  add r17.xyz, r10.xyzx, -cb10[r0.y + 0].xyzx
  and r13.w, l(0x0000ffff), cb10[r0.y + 7].z
  ubfe r14.w, l(6), l(25), cb10[r0.y + 7].z
  imul null, r15.w, r13.w, l(6)
  dp3 r17.w, cb11[r15.w + 0].xyzx, r17.xyzx
  add_sat r17.w, r17.w, cb11[r15.w + 0].w
  dp3 r18.x, cb11[r15.w + 1].xyzx, r17.xyzx
  add_sat r18.x, r18.x, cb11[r15.w + 1].w
  mul r17.w, r17.w, r18.x
  dp3 r18.x, cb11[r15.w + 2].xyzx, r17.xyzx
  add_sat r18.x, r18.x, cb11[r15.w + 2].w
  mul r17.w, r17.w, r18.x
  dp3 r18.x, cb11[r15.w + 3].xyzx, r17.xyzx
  add_sat r18.x, r18.x, cb11[r15.w + 3].w
  mul r17.w, r17.w, r18.x
  dp3 r18.x, cb11[r15.w + 4].xyzx, r17.xyzx
  add_sat r18.x, r18.x, cb11[r15.w + 4].w
  mul r17.w, r17.w, r18.x
  dp3 r18.x, cb11[r15.w + 5].xyzx, r17.xyzx
  add_sat r15.w, r18.x, cb11[r15.w + 5].w
  mul r18.x, r15.w, r17.w
  and r15.w, l(1), cb10[r0.y + 6].x
  mov r18.yz, l(0,0,1.000000,0)
  movc r18.xy, r15.wwww, r18.xyxx, r18.zxzz
  mov r19.x, l(1.000000)
  mov r15.w, cb10[r0.y + 6].x
  mov r20.xy, r18.xyxx
  mov r17.w, l(1)
  loop 
    ige r18.z, r17.w, r14.w
    breakc_nz r18.z
    iadd r18.z, r13.w, r17.w
    imul null, r18.z, r18.z, l(6)
    dp3 r18.w, cb11[r18.z + 0].xyzx, r17.xyzx
    add_sat r18.w, r18.w, cb11[r18.z + 0].w
    mul r18.w, r18.w, r20.x
    dp3 r19.z, cb11[r18.z + 1].xyzx, r17.xyzx
    add_sat r19.z, r19.z, cb11[r18.z + 1].w
    mul r18.w, r18.w, r19.z
    dp3 r19.z, cb11[r18.z + 2].xyzx, r17.xyzx
    add_sat r19.z, r19.z, cb11[r18.z + 2].w
    mul r18.w, r18.w, r19.z
    dp3 r19.z, cb11[r18.z + 3].xyzx, r17.xyzx
    add_sat r19.z, r19.z, cb11[r18.z + 3].w
    mul r18.w, r18.w, r19.z
    dp3 r19.z, cb11[r18.z + 4].xyzx, r17.xyzx
    add_sat r19.z, r19.z, cb11[r18.z + 4].w
    mul r18.w, r18.w, r19.z
    dp3 r19.z, cb11[r18.z + 5].xyzx, r17.xyzx
    add_sat r18.z, r19.z, cb11[r18.z + 5].w
    mul r20.x, r18.z, r18.w
    ushr r19.z, r15.w, l(2)
    ubfe r19.w, l(1), l(2), r15.w
    and r20.z, r19.z, l(2)
    max r20.w, r20.x, r20.y
    mad r18.z, -r18.w, r18.z, l(1.000000)
    mul r18.z, r18.z, r20.y
    movc r19.y, r20.z, r18.z, r20.w
    movc r20.xy, r19.wwww, r20.xyxx, r19.xyxx
    iadd r17.w, r17.w, l(1)
    mov r15.w, r19.z
  endloop 
  mov_sat r20.y, r20.y
  mul r13.w, r20.y, cb10[r0.y + 6].y
  lt r14.w, l(0.000000), r13.w
  if_nz r14.w
    mul r14.w, r13.w, cb10[r0.y + 7].y
    mov r18.x, cb10[r0.y + 7].w
    mov r18.yz, cb10[r0.y + 8].xxyx
    dp3 r15.w, r16.xyzx, r18.xyzx
    dp3 r17.w, r17.xyzx, r18.xyzx
    add r17.w, r17.w, -cb10[r0.y + 8].z
    ge r18.x, r17.w, l(0.000000)
    max r17.w, r8.w, |r17.w|
    movc r17.w, r18.x, r17.w, -r17.w
    max r15.w, -r15.w, l(0.00000010)
    div r15.w, r17.w, r15.w
    min r15.w, |r15.w|, l(131072.000000)
    mov r18.x, cb10[r0.y + 8].w
    mov r18.yz, cb10[r0.y + 9].xxyx
    dp3 r17.w, r16.xyzx, r18.xyzx
    dp3 r18.x, r17.xyzx, r18.xyzx
    add r18.x, r18.x, -cb10[r0.y + 9].z
    ge r18.y, r18.x, l(0.000000)
    max r18.x, r8.w, |r18.x|
    movc r18.x, r18.y, r18.x, -r18.x
    max r17.w, -r17.w, l(0.00000010)
    div r17.w, r18.x, r17.w
    min r15.w, r15.w, |r17.w|
    mov r18.x, cb10[r0.y + 9].w
    mov r18.yz, cb10[r0.y + 10].xxyx
    dp3 r17.w, r16.xyzx, r18.xyzx
    dp3 r18.x, r17.xyzx, r18.xyzx
    add r18.x, r18.x, -cb10[r0.y + 10].z
    ge r18.y, r18.x, l(0.000000)
    max r18.x, r8.w, |r18.x|
    movc r18.x, r18.y, r18.x, -r18.x
    max r17.w, -r17.w, l(0.00000010)
    div r17.w, r18.x, r17.w
    min r15.w, r15.w, |r17.w|
    mov r18.x, cb10[r0.y + 10].w
    mov r18.yz, cb10[r0.y + 11].xxyx
    dp3 r17.w, r16.xyzx, r18.xyzx
    dp3 r18.x, r17.xyzx, r18.xyzx
    add r18.x, r18.x, -cb10[r0.y + 11].z
    ge r18.y, r18.x, l(0.000000)
    max r18.x, r8.w, |r18.x|
    movc r18.x, r18.y, r18.x, -r18.x
    max r17.w, -r17.w, l(0.00000010)
    div r17.w, r18.x, r17.w
    min r15.w, r15.w, |r17.w|
    mov r18.x, cb10[r0.y + 11].w
    mov r18.yz, cb10[r0.y + 12].xxyx
    dp3 r17.w, r16.xyzx, r18.xyzx
    dp3 r18.x, r17.xyzx, r18.xyzx
    add r18.x, r18.x, -cb10[r0.y + 12].z
    ge r18.y, r18.x, l(0.000000)
    max r18.x, r8.w, |r18.x|
    movc r18.x, r18.y, r18.x, -r18.x
    max r17.w, -r17.w, l(0.00000010)
    div r17.w, r18.x, r17.w
    min r15.w, r15.w, |r17.w|
    mov r18.x, cb10[r0.y + 12].w
    mov r18.yz, cb10[r0.y + 13].xxyx
    dp3 r17.w, r16.xyzx, r18.xyzx
    dp3 r18.x, r17.xyzx, r18.xyzx
    add r18.x, r18.x, -cb10[r0.y + 13].z
    ge r18.y, r18.x, l(0.000000)
    max r18.x, r8.w, |r18.x|
    movc r18.x, r18.y, r18.x, -r18.x
    max r17.w, -r17.w, l(0.00000010)
    div r17.w, r18.x, r17.w
    min r15.w, r15.w, |r17.w|
    add r18.x, r17.x, cb10[r0.y + 3].w
    add r18.yz, r17.yyzy, cb10[r0.y + 4].xxyx
    mad r18.xyz, r16.xyzx, r15.wwww, r18.xyzx
    dp3 r17.w, r18.xyzx, r18.xyzx
    sqrt r17.w, r17.w
    div r15.w, r15.w, r17.w
    add r15.w, r15.w, r15.w
    sqrt r15.w, r15.w
    mad r15.w, r5.w, l(5.000000), r15.w
    add r15.w, r15.w, l(-0.844800)
    mov r19.x, cb10[r0.y + 0].w
    mov r19.y, cb10[r0.y + 1].z
    mov r19.z, cb10[r0.y + 2].y
    dp3 r20.x, r18.xyzx, r19.xyzx
    mov r21.xy, cb10[r0.y + 1].xwxx
    mov r21.z, cb10[r0.y + 2].z
    dp3 r20.y, r18.xyzx, r21.xyzx
    mov r22.x, cb10[r0.y + 1].y
    mov r22.yz, cb10[r0.y + 2].xxwx
    dp3 r20.z, r18.xyzx, r22.xyzx
    ubfe r17.w, l(9), l(16), cb10[r0.y + 7].z
    utof r20.w, r17.w
    sample_l_indexable(texturecubearray)(float,float,float,float) r18.xyz, r20.xyzw, t8.xyzw, s2, r15.w
    dp3 r23.x, r17.xyzx, r19.xyzx
    dp3 r23.y, r17.xyzx, r21.xyzx
    dp3 r23.z, r17.xyzx, r22.xyzx
    mad_sat r17.xyz, r23.xyzx, cb10[r0.y + 3].xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    mul r23.xy, r17.xyxx, cb10[r0.y + 4].zwzz
    mul r23.z, r17.z, cb10[r0.y + 5].x
    add r17.xyz, r23.xyzx, cb10[r0.y + 5].yzwy
    dp3 r20.x, r11.xyzx, r19.xyzx
    dp3 r20.y, r11.xyzx, r21.xyzx
    dp3 r20.z, r11.xyzx, r22.xyzx
    lt r19.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r20.xyzx
    movc r21.z, r19.x, l(0), l(0.500000)
    mov r21.xy, l(0,0,0,0)
    add r21.xyz, r17.xyzx, r21.xyzx
    sample_l_indexable(texture3d)(float,float,float,float) r21.xyz, r21.xyzx, t17.xyzw, s4, l(0.000000)
    mul r22.xyz, r20.xyzx, r20.xyzx
    mul r22.xyz, r14.wwww, r22.xyzx
    movc r23.z, r19.y, l(0), l(0.500000)
    mov r23.xy, l(0,0,0,0)
    add r19.xyw, r17.xyxz, r23.xyxz
    sample_l_indexable(texture3d)(float,float,float,float) r19.xyw, r19.xywx, t18.xywz, s4, l(0.000000)
    mul r19.xyw, r22.yyyy, r19.xyxw
    mad r19.xyw, r21.xyxz, r22.xxxx, r19.xyxw
    movc r21.z, r19.z, l(0), l(0.500000)
    mov r21.xy, l(0,0,0,0)
    add r17.xyz, r17.xyzx, r21.xyzx
    sample_l_indexable(texture3d)(float,float,float,float) r17.xyz, r17.xyzx, t19.xyzw, s4, l(0.000000)
    mad r17.xyz, r17.xyzx, r22.zzzz, r19.xywx
    sample_l_indexable(texturecubearray)(float,float,float,float) r19.xyz, r20.xyzw, t8.xyzw, s2, l(6.000000)
    mul r17.xyz, r17.xyzx, r19.xyzx
    dp3 r0.y, r17.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
    mul r15.w, r0.y, r12.w
    mul r18.xyz, r14.wwww, r18.xyzx
    dp3 r14.w, r18.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
    mad r0.y, r12.w, r0.y, r14.w
    div r0.y, r15.w, r0.y
    mul r18.xyz, r0.yyyy, r18.xyzx
  else 
    mov r18.xyz, l(0,0,0,0)
    mov r13.w, l(0)
    mov r17.xyz, l(0,0,0,0)
  endif 
else 
  mov r18.xyz, l(0,0,0,0)
  mov r13.w, l(0)
  mov r17.xyz, l(0,0,0,0)
endif 
lt r0.y, r13.w, l(1.000000)
if_nz r0.y
  ult r0.y, r15.y, r13.z
  if_nz r0.y
    imul null, r0.y, r15.y, l(14)
    add r19.xyz, r10.xyzx, -cb10[r0.y + 0].xyzx
    and r13.z, l(0x0000ffff), cb10[r0.y + 7].z
    ubfe r14.w, l(6), l(25), cb10[r0.y + 7].z
    imul null, r15.y, r13.z, l(6)
    dp3 r15.w, cb11[r15.y + 0].xyzx, r19.xyzx
    add_sat r15.w, r15.w, cb11[r15.y + 0].w
    dp3 r17.w, cb11[r15.y + 1].xyzx, r19.xyzx
    add_sat r17.w, r17.w, cb11[r15.y + 1].w
    mul r15.w, r15.w, r17.w
    dp3 r17.w, cb11[r15.y + 2].xyzx, r19.xyzx
    add_sat r17.w, r17.w, cb11[r15.y + 2].w
    mul r15.w, r15.w, r17.w
    dp3 r17.w, cb11[r15.y + 3].xyzx, r19.xyzx
    add_sat r17.w, r17.w, cb11[r15.y + 3].w
    mul r15.w, r15.w, r17.w
    dp3 r17.w, cb11[r15.y + 4].xyzx, r19.xyzx
    add_sat r17.w, r17.w, cb11[r15.y + 4].w
    mul r15.w, r15.w, r17.w
    dp3 r17.w, cb11[r15.y + 5].xyzx, r19.xyzx
    add_sat r15.y, r17.w, cb11[r15.y + 5].w
    mul r20.x, r15.y, r15.w
    and r15.y, l(1), cb10[r0.y + 6].x
    mov r20.yz, l(0,0,1.000000,0)
    movc r15.yw, r15.yyyy, r20.xxxy, r20.zzzx
    mov r20.x, l(1.000000)
    mov r17.w, cb10[r0.y + 6].x
    mov r21.xy, r15.ywyy
    mov r18.w, l(1)
    loop 
      ige r19.w, r18.w, r14.w
      breakc_nz r19.w
      iadd r19.w, r13.z, r18.w
      imul null, r19.w, r19.w, l(6)
      dp3 r20.z, cb11[r19.w + 0].xyzx, r19.xyzx
      add_sat r20.z, r20.z, cb11[r19.w + 0].w
      mul r20.z, r20.z, r21.x
      dp3 r20.w, cb11[r19.w + 1].xyzx, r19.xyzx
      add_sat r20.w, r20.w, cb11[r19.w + 1].w
      mul r20.z, r20.w, r20.z
      dp3 r20.w, cb11[r19.w + 2].xyzx, r19.xyzx
      add_sat r20.w, r20.w, cb11[r19.w + 2].w
      mul r20.z, r20.w, r20.z
      dp3 r20.w, cb11[r19.w + 3].xyzx, r19.xyzx
      add_sat r20.w, r20.w, cb11[r19.w + 3].w
      mul r20.z, r20.w, r20.z
      dp3 r20.w, cb11[r19.w + 4].xyzx, r19.xyzx
      add_sat r20.w, r20.w, cb11[r19.w + 4].w
      mul r20.z, r20.w, r20.z
      dp3 r20.w, cb11[r19.w + 5].xyzx, r19.xyzx
      add_sat r19.w, r20.w, cb11[r19.w + 5].w
      mul r21.x, r19.w, r20.z
      ushr r20.w, r17.w, l(2)
      ubfe r21.z, l(1), l(2), r17.w
      and r21.w, r20.w, l(2)
      max r22.x, r21.x, r21.y
      mad r19.w, -r20.z, r19.w, l(1.000000)
      mul r19.w, r19.w, r21.y
      movc r20.y, r21.w, r19.w, r22.x
      movc r21.xy, r21.zzzz, r21.xyxx, r20.xyxx
      iadd r18.w, r18.w, l(1)
      mov r17.w, r20.w
    endloop 
    add_sat r13.z, -r13.w, r21.y
    mul r14.w, r13.z, cb10[r0.y + 6].y
    lt r15.y, l(0.000000), r14.w
    if_nz r15.y
      mad r13.w, r13.z, cb10[r0.y + 6].y, r13.w
      mul r13.z, r14.w, cb10[r0.y + 7].y
      mov r20.x, cb10[r0.y + 7].w
      mov r20.yz, cb10[r0.y + 8].xxyx
      dp3 r14.w, r16.xyzx, r20.xyzx
      dp3 r15.y, r19.xyzx, r20.xyzx
      add r15.y, r15.y, -cb10[r0.y + 8].z
      ge r15.w, r15.y, l(0.000000)
      max r15.y, r8.w, |r15.y|
      movc r15.y, r15.w, r15.y, -r15.y
      max r14.w, -r14.w, l(0.00000010)
      div r14.w, r15.y, r14.w
      min r14.w, |r14.w|, l(131072.000000)
      mov r20.x, cb10[r0.y + 8].w
      mov r20.yz, cb10[r0.y + 9].xxyx
      dp3 r15.y, r16.xyzx, r20.xyzx
      dp3 r15.w, r19.xyzx, r20.xyzx
      add r15.w, r15.w, -cb10[r0.y + 9].z
      ge r17.w, r15.w, l(0.000000)
      max r15.w, r8.w, |r15.w|
      movc r15.w, r17.w, r15.w, -r15.w
      max r15.y, -r15.y, l(0.00000010)
      div r15.y, r15.w, r15.y
      min r14.w, r14.w, |r15.y|
      mov r20.x, cb10[r0.y + 9].w
      mov r20.yz, cb10[r0.y + 10].xxyx
      dp3 r15.y, r16.xyzx, r20.xyzx
      dp3 r15.w, r19.xyzx, r20.xyzx
      add r15.w, r15.w, -cb10[r0.y + 10].z
      ge r17.w, r15.w, l(0.000000)
      max r15.w, r8.w, |r15.w|
      movc r15.w, r17.w, r15.w, -r15.w
      max r15.y, -r15.y, l(0.00000010)
      div r15.y, r15.w, r15.y
      min r14.w, r14.w, |r15.y|
      mov r20.x, cb10[r0.y + 10].w
      mov r20.yz, cb10[r0.y + 11].xxyx
      dp3 r15.y, r16.xyzx, r20.xyzx
      dp3 r15.w, r19.xyzx, r20.xyzx
      add r15.w, r15.w, -cb10[r0.y + 11].z
      ge r17.w, r15.w, l(0.000000)
      max r15.w, r8.w, |r15.w|
      movc r15.w, r17.w, r15.w, -r15.w
      max r15.y, -r15.y, l(0.00000010)
      div r15.y, r15.w, r15.y
      min r14.w, r14.w, |r15.y|
      mov r20.x, cb10[r0.y + 11].w
      mov r20.yz, cb10[r0.y + 12].xxyx
      dp3 r15.y, r16.xyzx, r20.xyzx
      dp3 r15.w, r19.xyzx, r20.xyzx
      add r15.w, r15.w, -cb10[r0.y + 12].z
      ge r17.w, r15.w, l(0.000000)
      max r15.w, r8.w, |r15.w|
      movc r15.w, r17.w, r15.w, -r15.w
      max r15.y, -r15.y, l(0.00000010)
      div r15.y, r15.w, r15.y
      min r14.w, r14.w, |r15.y|
      mov r20.x, cb10[r0.y + 12].w
      mov r20.yz, cb10[r0.y + 13].xxyx
      dp3 r15.y, r16.xyzx, r20.xyzx
      dp3 r15.w, r19.xyzx, r20.xyzx
      add r15.w, r15.w, -cb10[r0.y + 13].z
      ge r17.w, r15.w, l(0.000000)
      max r8.w, r8.w, |r15.w|
      movc r8.w, r17.w, r8.w, -r8.w
      max r15.y, -r15.y, l(0.00000010)
      div r8.w, r8.w, r15.y
      min r8.w, |r8.w|, r14.w
      add r20.x, r19.x, cb10[r0.y + 3].w
      add r20.yz, r19.yyzy, cb10[r0.y + 4].xxyx
      mad r20.xyz, r16.xyzx, r8.wwww, r20.xyzx
      dp3 r14.w, r20.xyzx, r20.xyzx
      sqrt r14.w, r14.w
      div r8.w, r8.w, r14.w
      add r8.w, r8.w, r8.w
      sqrt r8.w, r8.w
      mad r5.w, r5.w, l(5.000000), r8.w
      add r5.w, r5.w, l(-0.844800)
      mov r21.x, cb10[r0.y + 0].w
      mov r21.y, cb10[r0.y + 1].z
      mov r21.z, cb10[r0.y + 2].y
      dp3 r22.x, r20.xyzx, r21.xyzx
      mov r23.xy, cb10[r0.y + 1].xwxx
      mov r23.z, cb10[r0.y + 2].z
      dp3 r22.y, r20.xyzx, r23.xyzx
      mov r24.x, cb10[r0.y + 1].y
      mov r24.yz, cb10[r0.y + 2].xxwx
      dp3 r22.z, r20.xyzx, r24.xyzx
      ubfe r8.w, l(9), l(16), cb10[r0.y + 7].z
      utof r22.w, r8.w
      sample_l_indexable(texturecubearray)(float,float,float,float) r20.xyz, r22.xyzw, t8.xyzw, s2, r5.w
      dp3 r25.x, r19.xyzx, r21.xyzx
      dp3 r25.y, r19.xyzx, r23.xyzx
      dp3 r25.z, r19.xyzx, r24.xyzx
      mad_sat r19.xyz, r25.xyzx, cb10[r0.y + 3].xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
      mul r25.xy, r19.xyxx, cb10[r0.y + 4].zwzz
      mul r25.z, r19.z, cb10[r0.y + 5].x
      add r19.xyz, r25.xyzx, cb10[r0.y + 5].yzwy
      dp3 r22.x, r11.xyzx, r21.xyzx
      dp3 r22.y, r11.xyzx, r23.xyzx
      dp3 r22.z, r11.xyzx, r24.xyzx
      lt r21.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r22.xyzx
      movc r23.z, r21.x, l(0), l(0.500000)
      mov r23.xy, l(0,0,0,0)
      add r23.xyz, r19.xyzx, r23.xyzx
      sample_l_indexable(texture3d)(float,float,float,float) r23.xyz, r23.xyzx, t17.xyzw, s4, l(0.000000)
      mul r24.xyz, r22.xyzx, r22.xyzx
      mul r24.xyz, r13.zzzz, r24.xyzx
      movc r25.z, r21.y, l(0), l(0.500000)
      mov r25.xy, l(0,0,0,0)
      add r21.xyw, r19.xyxz, r25.xyxz
      sample_l_indexable(texture3d)(float,float,float,float) r21.xyw, r21.xywx, t18.xywz, s4, l(0.000000)
      mul r21.xyw, r24.yyyy, r21.xyxw
      mad r21.xyw, r23.xyxz, r24.xxxx, r21.xyxw
      movc r23.z, r21.z, l(0), l(0.500000)
      mov r23.xy, l(0,0,0,0)
      add r19.xyz, r19.xyzx, r23.xyzx
      sample_l_indexable(texture3d)(float,float,float,float) r19.xyz, r19.xyzx, t19.xyzw, s4, l(0.000000)
      mad r19.xyz, r19.xyzx, r24.zzzz, r21.xywx
      sample_l_indexable(texturecubearray)(float,float,float,float) r21.xyz, r22.xyzw, t8.xyzw, s2, l(6.000000)
      mul r22.xyz, r19.xyzx, r21.xyzx
      dp3 r0.y, r22.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
      mad r17.xyz, r19.xyzx, r21.xyzx, r17.xyzx
      mul r5.w, r0.y, r12.w
      mul r19.xyz, r13.zzzz, r20.xyzx
      dp3 r8.w, r19.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
      mad r0.y, r12.w, r0.y, r8.w
      div r0.y, r5.w, r0.y
      mad r18.xyz, r19.xyzx, r0.yyyy, r18.xyzx
    endif 
  endif 
endif 
max r0.y, r13.w, l(1.000000)
rcp r0.y, r0.y
mov_sat r13.w, r13.w
mul r19.xyz, r0.yyyy, r17.xyzx
mul r18.xyz, r0.yyyy, r18.xyzx
lt r5.w, r13.w, l(0.990000)
if_nz r5.w
  add r5.w, -r13.w, l(1.000000)
  mul r8.w, r5.w, cb2[19].x
  add r20.xyz, r10.xyzx, -cb2[35].xyzx
  mul r21.x, r20.x, cb2[35].w
  mul r21.yz, r20.yyzy, cb2[36].xxyx
  add_sat r20.xyz, r21.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mul r21.xy, r20.xyxx, cb2[36].zwzz
  mul r21.z, r20.z, cb2[37].x
  add r20.xyz, r21.xyzx, cb2[37].yzwy
  lt r21.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
  movc r21.xyz, r21.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
  mov r21.w, l(0)
  add r22.xyz, r20.xyzx, r21.wwxw
  sample_l_indexable(texture3d)(float,float,float,float) r22.xyz, r22.xyzx, t17.xyzw, s4, l(0.000000)
  mul r23.xyz, r11.xyzx, r11.xyzx
  mul r23.xyz, r8.wwww, r23.xyzx
  add r24.xyz, r20.xyzx, r21.wwyw
  sample_l_indexable(texture3d)(float,float,float,float) r24.xyz, r24.xyzx, t18.xyzw, s4, l(0.000000)
  mul r24.xyz, r23.yyyy, r24.xyzx
  mad r22.xyz, r22.xyzx, r23.xxxx, r24.xyzx
  add r20.xyz, r20.xyzx, r21.wwzw
  sample_l_indexable(texture3d)(float,float,float,float) r20.xyz, r20.xyzx, t19.xyzw, s4, l(0.000000)
  mad r20.xyz, r20.xyzx, r23.zzzz, r22.xyzx
  mov r11.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r21.xyz, r11.xyzw, t8.xyzw, s2, l(6.000000)
  mul r20.xyz, r20.xyzx, r21.xyzx
  dp3 r8.w, r20.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  mad r19.xyz, r17.xyzx, r0.yyyy, r20.xyzx
  mov r16.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r17.xyz, r16.xyzw, t8.xyzw, s2, r7.w
  mad r0.y, cb2[19].x, r5.w, -r8.w
  mad r0.y, r2.y, r0.y, r8.w
  mad r18.xyz, r17.xyzx, r0.yyyy, r18.xyzx
endif 
add r0.y, -r2.w, l(1.000000)
mad r9.xyw, r18.xyxz, r0.yyyy, r9.xyxw
mad r0.y, r4.z, r1.w, r2.x
log r0.y, |r0.y|
mul r0.y, r0.y, r1.z
exp r0.y, r0.y
mad r0.y, r4.z, r1.w, r0.y
add_sat r0.y, r0.y, l(-1.000000)
mul r0.y, r6.w, r0.y
mul r17.xyz, r2.zzzz, r19.xyzx
and r18.xyz, r0.wwww, r17.xyzx
mad r2.yz, r2.xxyx, l(0.000000, 0.984375, 0.984375, 0.000000), l(0.000000, 0.00781250, 0.00781250, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r2.yz, r2.yzyy, t5.zxyw, s2, l(0.000000)
mul r9.xyw, r0.yyyy, r9.xyxw
mul r19.xyz, r2.yyyy, r9.xywx
mul r2.yzw, r2.zzzz, r9.xxyw
sqrt r0.y, r1.z
mad r0.y, r0.y, l(0.500000), l(0.500000)
mul r0.y, r0.y, r0.y
mul r1.w, r0.y, l(0.500000)
mad r0.y, -r0.y, l(0.500000), l(1.000000)
mad r4.z, r2.x, r0.y, r1.w
mul r0.y, r0.y, r4.z
mul r1.w, r1.w, r4.z
ubfe r0.x, l(10), l(12), r0.x
mov r20.x, -r13.x
not r4.z, r9.z
mad r2.x, -r2.x, l(0.500000), l(1.000000)
mov r10.w, l(1.000000)
mov r21.w, l(1.000000)
mov r20.z, r13.x
mov r22.z, l(1.000000)
mov r23.w, l(1.000000)
mov r24.w, l(1.000000)
mov r20.yw, r14.xxxx
mov r13.y, r20.w
mov r25.w, l(1.000000)
mov r14.y, r20.x
mov r14.z, r13.x
mov r26.w, l(1.000000)
mov r27.x, r14.x
mov r27.y, r20.x
mov r27.z, r13.x
mov r28.x, r14.x
mov r28.y, r20.x
mov r28.z, r13.x
mov r29.x, r14.x
mov r29.y, r20.x
mov r29.z, r13.x
mov r9.xyw, r17.xyxz
mov r30.xyz, r18.xyzx
mov r31.xyz, r19.xyzx
mov r32.xyz, r2.yzwy
mov r5.w, l(0)
loop 
  ieq r6.w, r5.w, l(2)
  breakc_nz r6.w
  movc r6.w, r5.w, r0.x, r15.z
  imul null, r6.w, r6.w, l(15)
  ubfe r7.w, l(3), l(24), cb9[r6.w + 1].w
  switch r7.w
    case l(4)
    lt r7.w, l(0.000000), cb9[r6.w + 6].y
    mov r33.xy, cb9[r6.w + 5].zwzz
    mov r33.z, cb9[r6.w + 6].x
    mad r34.xyz, -r33.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), cb9[r6.w + 0].xyzx
    add r35.xyz, -r10.xyzx, r34.xyzx
    dp3 r8.w, r33.xyzx, r35.xyzx
    div_sat r11.w, -r8.w, cb9[r6.w + 6].y
    mad r36.xyz, r11.wwww, r33.xyzx, r34.xyzx
    movc r36.xyz, r7.wwww, r36.xyzx, cb9[r6.w + 0].xyzx
    add r36.xyz, -r10.xyzx, r36.xyzx
    dp3 r12.w, r36.xyzx, r36.xyzx
    rsq r13.z, r12.w
    mul r36.xyz, r13.zzzz, r36.xyzx
    dp3 r13.z, r11.xyzx, r36.xyzx
    mov_sat r13.w, r13.z
    movc r13.w, r0.w, |r13.z|, r13.w
    lt r14.w, l(0.000000), r13.w
    if_nz r14.w
      sqrt r14.w, r12.w
      mul r15.y, cb9[r6.w + 3].x, cb9[r6.w + 3].x
      div r12.w, r15.y, r12.w
      min r12.w, r12.w, l(1.000000)
      mad_sat r15.yw, r14.wwww, cb9[r6.w + 2].xxxz, cb9[r6.w + 2].yyyw
      mul r36.xy, r15.ywyy, r15.ywyy
      mad r15.yw, r15.yyyw, l(0.000000, -2.000000, 0.000000, -2.000000), l(0.000000, 3.000000, 0.000000, 3.000000)
      mul r15.yw, r15.yyyw, r36.xxxy
      mul r12.w, r12.w, r15.y
      mul r12.w, r15.w, r12.w
      lt r14.w, l(0.000000), r12.w
      if_nz r14.w
        ubfe r14.w, l(3), l(27), cb9[r6.w + 1].w
        ine r14.w, r14.w, l(1)
        if_nz r14.w
          mad r14.w, |r13.z|, l(-0.200000), l(0.400000)
          lt r15.y, r13.z, l(0.000000)
          and r15.y, r0.w, r15.y
          movc r14.w, r15.y, -r14.w, r14.w
          mad r36.xyz, r11.xyzx, r14.wwww, r10.xyzx
          add r36.xyz, r36.xyzx, -cb9[r6.w + 4].yzwy
          max r14.w, |r36.z|, |r36.y|
          max r14.w, r14.w, |r36.x|
          div r14.w, cb9[r6.w + 5].x, r14.w
          add r14.w, r14.w, cb9[r6.w + 5].y
          dp3 r15.y, r36.xyzx, r36.xyzx
          rsq r15.y, r15.y
          max r14.w, r14.w, l(0.00006104)
          and r15.w, l(0x0000ffff), cb9[r6.w + 1].w
          utof r37.w, r15.w
          mov r15.w, l(0)
          mov r16.w, l(0)
          loop 
            ige r17.w, r16.w, l(8)
            breakc_nz r17.w
            dp2 r38.y, icb[r16.w + 0].yxyy, r20.xyxx
            dp2 r38.z, icb[r16.w + 0].yxyy, r20.yzyy
            mul r38.yz, r38.yyzy, cb9[r6.w + 3].yyyy
            mul r38.x, r15.x, r38.y
            mul r38.w, r3.x, r38.y
            mad r37.xyz, r36.xyzx, r15.yyyy, r38.xzwx
            sample_c_lz_indexable(texturecubearray)(float,float,float,float) r17.w, r37.xyzw, t10.xxxx, s13, r14.w
            mad r15.w, r17.w, l(0.125000), r15.w
            iadd r16.w, r16.w, l(1)
          endloop 
        else 
          mov r15.w, l(1.000000)
        endif 
        mul r12.w, r12.w, r15.w
        lt r14.w, l(0.000000), r12.w
        if_nz r14.w
          mul r14.w, r0.z, cb9[r6.w + 1].z
          mul r14.w, r14.w, l(0.250000)
          dp3 r15.y, r33.xyzx, r16.xyzx
          dp3 r16.w, r16.xyzx, r35.xyzx
          mad r17.w, -r15.y, r15.y, cb9[r6.w + 6].y
          mad r8.w, r15.y, r16.w, -r8.w
          div_sat r8.w, r8.w, r17.w
          div r15.y, r17.w, cb9[r6.w + 6].y
          mul r15.y, r15.y, l(10.000000)
          min r15.y, r15.y, l(1.000000)
          add r8.w, -r11.w, r8.w
          mad r8.w, r15.y, r8.w, r11.w
          mad r33.xyz, r8.wwww, r33.xyzx, r34.xyzx
          movc r33.xyz, r7.wwww, r33.xyzx, cb9[r6.w + 0].xyzx
          add r33.xyz, -r10.xyzx, r33.xyzx
          dp3 r7.w, r33.xyzx, r33.xyzx
          rsq r7.w, r7.w
          mul r34.xyz, r7.wwww, r33.xyzx
          ubfe r8.w, l(4), l(16), cb9[r6.w + 1].w
          ult r11.w, l(0), r8.w
          and r11.w, r9.z, r11.w
          if_nz r11.w
            iadd r8.w, r8.w, cb2[0].x
            imad r8.w, r8.w, l(15), l(-15)
            mad r11.w, |r13.z|, l(-0.200000), l(0.400000)
            lt r15.y, r13.z, l(0.000000)
            and r15.y, r0.w, r15.y
            movc r11.w, r15.y, -r11.w, r11.w
            mad r21.xyz, r11.xyzx, r11.wwww, r10.xyzx
            mov r35.xyz, cb9[r8.w + 6].yzwy
            mov r35.w, cb9[r8.w + 7].x
            dp4 r11.w, r35.xyzw, r21.xyzw
            mov r35.xyz, cb9[r8.w + 7].yzwy
            mov r35.w, cb9[r8.w + 8].x
            dp4 r15.y, r35.xyzw, r21.xyzw
            lt r16.w, r15.y, r11.w
            if_z r16.w
              mov r35.xyz, cb9[r8.w + 4].yzwy
              mov r35.w, cb9[r8.w + 5].x
              dp4 r35.x, r35.xyzw, r21.xyzw
              mov r36.xyz, cb9[r8.w + 5].yzwy
              mov r36.w, cb9[r8.w + 6].x
              dp4 r35.y, r36.xyzw, r21.xyzw
              div r21.xy, r35.xyxx, r15.yyyy
              mad r21.xy, r21.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
              add r35.x, r21.x, cb9[r8.w + 9].w
              add r35.y, r21.y, cb9[r8.w + 10].x
              mul r21.xy, r35.xyxx, cb9[r8.w + 9].yzyy
              div r35.xy, cb9[r8.w + 3].yyyy, cb9[r8.w + 8].ywyy
              add r35.zw, -r35.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
              ge r35.zw, r21.xxxy, r35.zzzw
              ge r35.xy, r35.xyxx, r21.xyxx
              or r35.xy, r35.xyxx, r35.zwzz
              or r17.w, r35.y, r35.x
              if_z r17.w
                mov_sat r21.xy, r21.xyxx
                mad r35.x, r21.x, cb9[r8.w + 8].y, cb9[r8.w + 8].z
                mad r35.y, r21.y, cb9[r8.w + 8].w, cb9[r8.w + 9].x
                mul r18.w, r15.y, cb9[r8.w + 10].z
                mad r11.w, cb9[r8.w + 10].y, r15.y, r11.w
                div r11.w, r11.w, r18.w
              endif 
            else 
              mov r17.w, l(-1)
            endif 
            or r15.y, r16.w, r17.w
            if_z r15.y
              max r11.w, r11.w, l(0.00006104)
              and r15.y, l(0x0000ffff), cb9[r8.w + 1].w
              if_nz cb2[58].y
                utof r21.z, r15.y
                mov r16.w, l(0)
                mov r17.w, l(0)
                loop 
                  ige r18.w, r17.w, l(8)
                  breakc_nz r18.w
                  dp2 r36.x, icb[r17.w + 0].yxyy, r20.xwxx
                  dp2 r36.y, icb[r17.w + 0].xyxx, r13.xyxx
                  mad r21.xy, r36.xyxx, cb9[r8.w + 3].yyyy, r35.xyxx
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r18.w, r21.xyzx, t9.xxxx, s13, r11.w
                  mad r16.w, r18.w, l(0.125000), r16.w
                  iadd r17.w, r17.w, l(1)
                endloop 
              else 
                utof r35.z, r15.y
                sample_c_lz_indexable(texture2darray)(float,float,float,float) r16.w, r35.xyzx, t9.xxxx, s13, r11.w
              endif 
              mul r8.w, r16.w, r16.w
              mul r8.w, r16.w, r8.w
            else 
              mov r8.w, l(1.000000)
            endif 
            mul r12.w, r8.w, r12.w
          else 
            ubfe r8.w, l(4), l(20), cb9[r6.w + 1].w
            ult r11.w, l(0), r8.w
            and r11.w, r4.z, r11.w
            if_nz r11.w
              iadd r8.w, r8.w, cb2[0].x
              imad r8.w, r8.w, l(15), l(-15)
              mad r11.w, |r13.z|, l(-0.200000), l(0.400000)
              lt r15.y, r13.z, l(0.000000)
              and r15.y, r0.w, r15.y
              movc r11.w, r15.y, -r11.w, r11.w
              mad r23.xyz, r11.xyzx, r11.wwww, r10.xyzx
              mov r35.xyz, cb9[r8.w + 6].yzwy
              mov r35.w, cb9[r8.w + 7].x
              dp4 r11.w, r35.xyzw, r23.xyzw
              mov r35.xyz, cb9[r8.w + 7].yzwy
              mov r35.w, cb9[r8.w + 8].x
              dp4 r15.y, r35.xyzw, r23.xyzw
              lt r17.w, r15.y, r11.w
              if_z r17.w
                mov r35.xyz, cb9[r8.w + 4].yzwy
                mov r35.w, cb9[r8.w + 5].x
                dp4 r21.x, r35.xyzw, r23.xyzw
                mov r35.xyz, cb9[r8.w + 5].yzwy
                mov r35.w, cb9[r8.w + 6].x
                dp4 r21.y, r35.xyzw, r23.xyzw
                div r21.xy, r21.xyxx, r15.yyyy
                mad r21.xy, r21.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                add r23.x, r21.x, cb9[r8.w + 9].w
                add r23.y, r21.y, cb9[r8.w + 10].x
                mul r21.xy, r23.xyxx, cb9[r8.w + 9].yzyy
                div r23.xy, cb9[r8.w + 3].yyyy, cb9[r8.w + 8].ywyy
                add r35.xy, -r23.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                ge r35.xy, r21.xyxx, r35.xyxx
                ge r23.xy, r23.xyxx, r21.xyxx
                or r23.xy, r23.xyxx, r35.xyxx
                or r18.w, r23.y, r23.x
                if_z r18.w
                  mov_sat r21.xy, r21.xyxx
                  mad r23.x, r21.x, cb9[r8.w + 8].y, cb9[r8.w + 8].z
                  mad r23.y, r21.y, cb9[r8.w + 8].w, cb9[r8.w + 9].x
                  mul r19.w, r15.y, cb9[r8.w + 10].z
                  mad r11.w, cb9[r8.w + 10].y, r15.y, r11.w
                  div r11.w, r11.w, r19.w
                endif 
              else 
                mov r18.w, l(-1)
              endif 
              or r15.y, r17.w, r18.w
              if_z r15.y
                max r11.w, r11.w, l(0.00006104)
                and r15.y, l(0x0000ffff), cb9[r8.w + 1].w
                if_nz cb2[58].y
                  utof r21.z, r15.y
                  mov r17.w, l(0)
                  mov r18.w, l(0)
                  loop 
                    ige r19.w, r18.w, l(8)
                    breakc_nz r19.w
                    dp2 r35.x, icb[r18.w + 0].xyxx, r14.xyxx
                    dp2 r35.y, icb[r18.w + 0].yxyy, r14.xzxx
                    mad r21.xy, r35.xyxx, cb9[r8.w + 3].yyyy, r23.xyxx
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.w, r21.xyzx, t9.xxxx, s13, r11.w
                    mad r17.w, r19.w, l(0.125000), r17.w
                    iadd r18.w, r18.w, l(1)
                  endloop 
                else 
                  utof r23.z, r15.y
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r17.w, r23.xyzx, t9.xxxx, s13, r11.w
                endif 
                mul r8.w, r17.w, r17.w
                mul r8.w, r17.w, r8.w
              else 
                mov r8.w, l(1.000000)
              endif 
              mul r12.w, r8.w, r12.w
            endif 
          endif 
          mad r8.w, -r13.w, r2.x, l(1.000000)
          mul r8.w, r8.w, r8.w
          mad r8.w, -r8.w, l(0.620000), l(0.620000)
          add r8.w, -r13.w, r8.w
          mad r8.w, r1.z, r8.w, r13.w
          mul r8.w, r12.w, r8.w
          mov r21.x, cb9[r6.w + 0].w
          mov r21.yz, cb9[r6.w + 1].xxyx
          lt r11.w, l(0.000000), r13.z
          mad r23.xyz, r8.wwww, r21.xyzx, r9.xywx
          dp3_sat r13.z, r11.xyzx, r34.xyzx
          mad r33.xyz, r33.xyzx, r7.wwww, r12.xyzx
          dp3 r7.w, r33.xyzx, r33.xyzx
          rsq r7.w, r7.w
          mul r33.xyz, r7.wwww, r33.xyzx
          dp3 r7.w, r33.xyzx, r12.xyzx
          dp3 r13.w, r11.xyzx, r33.xyzx
          mad r15.y, |r13.w|, r0.z, -|r13.w|
          mad r13.w, |r13.w|, r15.y, l(1.000000)
          mad r15.y, r13.z, r0.y, r1.w
          mul r13.w, r13.w, r13.w
          mul r13.w, r15.y, r13.w
          rcp r13.w, r13.w
          mul r13.z, r14.w, r13.z
          mul r13.z, r13.z, r13.w
          mul r12.w, r12.w, r13.z
          mad r33.xyz, r12.wwww, r21.xyzx, r32.xyzx
          add_sat r7.w, -r7.w, l(1.000000)
          mul r13.z, r7.w, r7.w
          mul r13.z, r13.z, r13.z
          mul r7.w, r7.w, r13.z
          mul r7.w, r7.w, r12.w
          mad r34.xyz, r7.wwww, r21.xyzx, r31.xyzx
          mad r21.xyz, r8.wwww, r21.xyzx, r30.xyzx
          movc r21.xyz, r0.wwww, r21.xyzx, r30.xyzx
          movc r9.xyw, r11.wwww, r23.xyxz, r9.xyxw
          movc r30.xyz, r11.wwww, r30.xyzx, r21.xyzx
          movc r31.xyz, r11.wwww, r34.xyzx, r31.xyzx
          movc r32.xyz, r11.wwww, r33.xyzx, r32.xyzx
        endif 
      endif 
    endif 
    break 
    case l(2)
    add r21.xy, -r10.xyxx, cb9[r6.w + 3].zwzz
    add r21.z, -r10.z, cb9[r6.w + 4].x
    dp3 r7.w, r21.xyzx, r21.xyzx
    rsq r7.w, r7.w
    mul r23.xyz, r7.wwww, r21.xyzx
    dp3 r8.w, r11.xyzx, r23.xyzx
    mov_sat r11.w, r8.w
    movc r12.w, r0.w, |r8.w|, r11.w
    lt r13.z, l(0.000000), r12.w
    if_nz r13.z
      mov r33.xyz, cb9[r6.w + 7].yzwy
      mov r33.w, cb9[r6.w + 8].x
      dp4 r13.z, r33.xyzw, r10.xyzw
      lt r13.w, r13.z, l(1.000000)
      if_nz r13.w
        mov r23.xyz, l(1.000000,1.000000,1.000000,0)
        mov r13.w, l(0)
      else 
        add r34.xyz, -r10.xyzx, cb9[r6.w + 0].xyzx
        mul r14.w, cb9[r6.w + 3].x, cb9[r6.w + 3].x
        dp3 r15.y, r34.xyzx, r34.xyzx
        div r14.w, r14.w, r15.y
        min r14.w, r14.w, l(1.000000)
        mad_sat r34.xy, r13.zzzz, cb9[r6.w + 2].xzxx, cb9[r6.w + 2].ywyy
        mul r34.zw, r34.xxxy, r34.xxxy
        mad r34.xy, r34.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
        mul r34.xy, r34.xyxx, r34.zwzz
        mul r14.w, r14.w, r34.x
        mul r14.w, r34.y, r14.w
        mov r34.xyz, cb9[r6.w + 4].yzwy
        mov r34.w, cb9[r6.w + 5].x
        dp4 r34.x, r34.xyzw, r10.xyzw
        mov r35.xyz, cb9[r6.w + 5].yzwy
        mov r35.w, cb9[r6.w + 6].x
        dp4 r34.y, r35.xyzw, r10.xyzw
        div r22.xy, r34.xyxx, r13.zzzz
        lt r13.z, cb9[r6.w + 10].w, l(0.00048828)
        if_nz r13.z
          mad_sat r34.xy, |r22.xyxx|, cb9[r6.w + 12].xyxx, cb9[r6.w + 12].zwzz
          mul r34.zw, r34.xxxy, r34.xxxy
          mad r34.xy, r34.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
          mul r34.xy, r34.xyxx, r34.zwzz
          mul r13.z, r34.y, r34.x
        else 
          mul_sat r34.xyzw, |r22.yyxx|, cb9[r6.w + 11].xyzw
          log r34.xyzw, r34.xyzw
          mul r34.xyzw, r34.xyzw, cb9[r6.w + 12].zzzz
          exp r34.xyzw, r34.xyzw
          add r34.xy, r34.zwzz, r34.xyxx
          log r34.xy, r34.xyxx
          mul r34.xy, r34.xyxx, cb9[r6.w + 12].wwww
          exp r34.xy, r34.xyxx
          mul r15.y, r34.x, cb9[r6.w + 12].x
          mad r18.w, cb9[r6.w + 12].y, r34.y, l(-1.000000)
          mad r15.y, cb9[r6.w + 12].y, r34.y, -r15.y
          div_sat r15.y, r18.w, r15.y
          mul r18.w, r15.y, r15.y
          mad r15.y, r15.y, l(-2.000000), l(3.000000)
          mul r13.z, r15.y, r18.w
        endif 
        mul r13.w, r13.z, r14.w
        and r13.z, l(255), cb9[r6.w + 14].w
        if_nz r13.z
          dp3 r14.w, cb9[r6.w + 13].xyzx, r22.xyzx
          mov r34.x, cb9[r6.w + 13].w
          mov r34.yz, cb9[r6.w + 14].xxyx
          dp3 r15.y, r34.xyzx, r22.xyzx
          frc r34.x, r14.w
          frc r34.y, r15.y
          iadd r13.z, r13.z, l(-1)
          utof r34.z, r13.z
          sample_l_indexable(texture2darray)(float,float,float,float) r23.xyz, r34.xyzx, t20.xyzw, s2, l(0.000000)
        else 
          mov r23.xyz, l(1.000000,1.000000,1.000000,0)
        endif 
      endif 
      mov r34.x, cb9[r6.w + 0].w
      mov r34.yz, cb9[r6.w + 1].xxyx
      mul r22.xyw, r23.xyxz, r34.xyxz
      lt r13.z, l(0.000000), r13.w
      if_nz r13.z
        ubfe r13.z, l(3), l(27), cb9[r6.w + 1].w
        ine r13.z, r13.z, l(1)
        if_nz r13.z
          mad r13.z, |r8.w|, l(-0.200000), l(0.400000)
          lt r14.w, r8.w, l(0.000000)
          and r14.w, r0.w, r14.w
          movc r13.z, r14.w, -r13.z, r13.z
          mad r24.xyz, r11.xyzx, r13.zzzz, r10.xyzx
          mov r34.xyz, cb9[r6.w + 6].yzwy
          mov r34.w, cb9[r6.w + 7].x
          dp4 r13.z, r34.xyzw, r24.xyzw
          dp4 r14.w, r33.xyzw, r24.xyzw
          ge r15.y, r14.w, r13.z
          if_nz r15.y
            mov r33.xyz, cb9[r6.w + 4].yzwy
            mov r33.w, cb9[r6.w + 5].x
            dp4 r23.x, r33.xyzw, r24.xyzw
            mov r33.xyz, cb9[r6.w + 5].yzwy
            mov r33.w, cb9[r6.w + 6].x
            dp4 r23.y, r33.xyzw, r24.xyzw
            div r23.xy, r23.xyxx, r14.wwww
            mad_sat r23.xy, r23.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
            mad r24.x, r23.x, cb9[r6.w + 8].y, cb9[r6.w + 8].z
            mad r24.y, r23.y, cb9[r6.w + 8].w, cb9[r6.w + 9].x
            div r13.z, r13.z, r14.w
            max r13.z, r13.z, l(0.00006104)
            and r14.w, l(0x0000ffff), cb9[r6.w + 1].w
            if_nz cb2[58].y
              utof r23.z, r14.w
              mov r15.y, l(0)
              mov r18.w, l(0)
              loop 
                ige r19.w, r18.w, l(8)
                breakc_nz r19.w
                dp2 r33.x, icb[r18.w + 0].xyxx, r27.xyxx
                dp2 r33.y, icb[r18.w + 0].yxyy, r27.xzxx
                mad r23.xy, r33.xyxx, cb9[r6.w + 3].yyyy, r24.xyxx
                sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.w, r23.xyzx, t9.xxxx, s13, r13.z
                mad r15.y, r19.w, l(0.125000), r15.y
                iadd r18.w, r18.w, l(1)
              endloop 
            else 
              utof r24.z, r14.w
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r15.y, r24.xyzx, t9.xxxx, s13, r13.z
            endif 
            mul r13.z, r15.y, r15.y
            mul r13.z, r15.y, r13.z
          else 
            mov r13.z, l(1.000000)
          endif 
        else 
          mov r13.z, l(1.000000)
        endif 
        mul r13.z, r13.z, r13.w
        lt r13.w, l(0.000000), r13.z
        if_nz r13.w
          mul r13.w, r0.z, cb9[r6.w + 1].z
          mul r13.w, r11.w, r13.w
          ubfe r14.w, l(4), l(16), cb9[r6.w + 1].w
          ult r18.w, l(0), r14.w
          and r18.w, r9.z, r18.w
          if_nz r18.w
            iadd r14.w, r14.w, cb2[0].x
            imad r14.w, r14.w, l(15), l(-15)
            mad r18.w, |r8.w|, l(-0.200000), l(0.400000)
            lt r19.w, r8.w, l(0.000000)
            and r19.w, r0.w, r19.w
            movc r18.w, r19.w, -r18.w, r18.w
            mad r25.xyz, r11.xyzx, r18.wwww, r10.xyzx
            mov r33.xyz, cb9[r14.w + 6].yzwy
            mov r33.w, cb9[r14.w + 7].x
            dp4 r18.w, r33.xyzw, r25.xyzw
            mov r33.xyz, cb9[r14.w + 7].yzwy
            mov r33.w, cb9[r14.w + 8].x
            dp4 r19.w, r33.xyzw, r25.xyzw
            lt r23.x, r19.w, r18.w
            if_z r23.x
              mov r33.xyz, cb9[r14.w + 4].yzwy
              mov r33.w, cb9[r14.w + 5].x
              dp4 r24.x, r33.xyzw, r25.xyzw
              mov r33.xyz, cb9[r14.w + 5].yzwy
              mov r33.w, cb9[r14.w + 6].x
              dp4 r24.y, r33.xyzw, r25.xyzw
              div r23.yz, r24.xxyx, r19.wwww
              mad r23.yz, r23.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
              add r24.x, r23.y, cb9[r14.w + 9].w
              add r24.y, r23.z, cb9[r14.w + 10].x
              mul r23.yz, r24.xxyx, cb9[r14.w + 9].yyzy
              div r24.xy, cb9[r14.w + 3].yyyy, cb9[r14.w + 8].ywyy
              add r25.xy, -r24.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
              ge r25.xy, r23.yzyy, r25.xyxx
              ge r24.xy, r24.xyxx, r23.yzyy
              or r24.xy, r24.xyxx, r25.xyxx
              or r24.x, r24.y, r24.x
              if_z r24.x
                mov_sat r23.yz, r23.yyzy
                mad r25.x, r23.y, cb9[r14.w + 8].y, cb9[r14.w + 8].z
                mad r25.y, r23.z, cb9[r14.w + 8].w, cb9[r14.w + 9].x
                mul r23.y, r19.w, cb9[r14.w + 10].z
                mad r18.w, cb9[r14.w + 10].y, r19.w, r18.w
                div r18.w, r18.w, r23.y
              endif 
            else 
              mov r24.x, l(-1)
            endif 
            or r19.w, r23.x, r24.x
            if_z r19.w
              max r18.w, r18.w, l(0.00006104)
              and r19.w, l(0x0000ffff), cb9[r14.w + 1].w
              if_nz cb2[58].y
                utof r23.z, r19.w
                mov r24.xy, l(0,0,0,0)
                loop 
                  ige r24.z, r24.y, l(8)
                  breakc_nz r24.z
                  dp2 r33.x, icb[r24.y + 0].xyxx, r28.xyxx
                  dp2 r33.y, icb[r24.y + 0].yxyy, r28.xzxx
                  mad r23.xy, r33.xyxx, cb9[r14.w + 3].yyyy, r25.xyxx
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.x, r23.xyzx, t9.xxxx, s13, r18.w
                  mad r24.x, r23.x, l(0.125000), r24.x
                  iadd r24.y, r24.y, l(1)
                endloop 
              else 
                utof r25.z, r19.w
                sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.x, r25.xyzx, t9.xxxx, s13, r18.w
              endif 
              mul r14.w, r24.x, r24.x
              mul r14.w, r24.x, r14.w
            else 
              mov r14.w, l(1.000000)
            endif 
            mul r13.z, r13.z, r14.w
          else 
            ubfe r6.w, l(4), l(20), cb9[r6.w + 1].w
            ult r14.w, l(0), r6.w
            and r14.w, r4.z, r14.w
            if_nz r14.w
              iadd r6.w, r6.w, cb2[0].x
              imad r6.w, r6.w, l(15), l(-15)
              mad r14.w, |r8.w|, l(-0.200000), l(0.400000)
              lt r18.w, r8.w, l(0.000000)
              and r18.w, r0.w, r18.w
              movc r14.w, r18.w, -r14.w, r14.w
              mad r26.xyz, r11.xyzx, r14.wwww, r10.xyzx
              mov r33.xyz, cb9[r6.w + 6].yzwy
              mov r33.w, cb9[r6.w + 7].x
              dp4 r14.w, r33.xyzw, r26.xyzw
              mov r33.xyz, cb9[r6.w + 7].yzwy
              mov r33.w, cb9[r6.w + 8].x
              dp4 r18.w, r33.xyzw, r26.xyzw
              lt r19.w, r18.w, r14.w
              if_z r19.w
                mov r33.xyz, cb9[r6.w + 4].yzwy
                mov r33.w, cb9[r6.w + 5].x
                dp4 r23.x, r33.xyzw, r26.xyzw
                mov r33.xyz, cb9[r6.w + 5].yzwy
                mov r33.w, cb9[r6.w + 6].x
                dp4 r23.y, r33.xyzw, r26.xyzw
                div r23.xy, r23.xyxx, r18.wwww
                mad r23.xy, r23.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                add r25.x, r23.x, cb9[r6.w + 9].w
                add r25.y, r23.y, cb9[r6.w + 10].x
                mul r23.xy, r25.xyxx, cb9[r6.w + 9].yzyy
                div r24.yz, cb9[r6.w + 3].yyyy, cb9[r6.w + 8].yywy
                add r25.xy, -r24.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
                ge r25.xy, r23.xyxx, r25.xyxx
                ge r24.yz, r24.yyzy, r23.xxyx
                or r24.yz, r24.yyzy, r25.xxyx
                or r23.z, r24.z, r24.y
                if_z r23.z
                  mov_sat r23.xy, r23.xyxx
                  mad r25.x, r23.x, cb9[r6.w + 8].y, cb9[r6.w + 8].z
                  mad r25.y, r23.y, cb9[r6.w + 8].w, cb9[r6.w + 9].x
                  mul r23.x, r18.w, cb9[r6.w + 10].z
                  mad r14.w, cb9[r6.w + 10].y, r18.w, r14.w
                  div r14.w, r14.w, r23.x
                endif 
              else 
                mov r23.z, l(-1)
              endif 
              or r18.w, r19.w, r23.z
              if_z r18.w
                max r14.w, r14.w, l(0.00006104)
                and r18.w, l(0x0000ffff), cb9[r6.w + 1].w
                if_nz cb2[58].y
                  utof r23.z, r18.w
                  mov r19.w, l(0)
                  mov r24.y, l(0)
                  loop 
                    ige r24.z, r24.y, l(8)
                    breakc_nz r24.z
                    dp2 r26.x, icb[r24.y + 0].xyxx, r29.xyxx
                    dp2 r26.y, icb[r24.y + 0].yxyy, r29.xzxx
                    mad r23.xy, r26.xyxx, cb9[r6.w + 3].yyyy, r25.xyxx
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.x, r23.xyzx, t9.xxxx, s13, r14.w
                    mad r19.w, r23.x, l(0.125000), r19.w
                    iadd r24.y, r24.y, l(1)
                  endloop 
                else 
                  utof r25.z, r18.w
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.w, r25.xyzx, t9.xxxx, s13, r14.w
                endif 
                mul r6.w, r19.w, r19.w
                mul r6.w, r19.w, r6.w
              else 
                mov r6.w, l(1.000000)
              endif 
              mul r13.z, r6.w, r13.z
            endif 
          endif 
          mad r6.w, -r12.w, r2.x, l(1.000000)
          mul r6.w, r6.w, r6.w
          mad r6.w, -r6.w, l(0.620000), l(0.620000)
          add r6.w, -r12.w, r6.w
          mad r6.w, r1.z, r6.w, r12.w
          mul r6.w, r13.z, r6.w
          lt r8.w, l(0.000000), r8.w
          mad r23.xyz, r6.wwww, r22.xywx, r9.xywx
          mad r21.xyz, r21.xyzx, r7.wwww, r12.xyzx
          dp3 r7.w, r21.xyzx, r21.xyzx
          rsq r7.w, r7.w
          mul r21.xyz, r7.wwww, r21.xyzx
          dp3 r7.w, r21.xyzx, r12.xyzx
          dp3 r12.w, r11.xyzx, r21.xyzx
          mad r14.w, |r12.w|, r0.z, -|r12.w|
          mad r12.w, |r12.w|, r14.w, l(1.000000)
          mad r11.w, r11.w, r0.y, r1.w
          mul r12.w, r12.w, r12.w
          mul r11.w, r11.w, r12.w
          rcp r11.w, r11.w
          mul r11.w, r13.w, r11.w
          mul r11.w, r11.w, r13.z
          mul r11.w, r11.w, l(0.250000)
          mad r21.xyz, r11.wwww, r22.xywx, r32.xyzx
          add_sat r7.w, -r7.w, l(1.000000)
          mul r12.w, r7.w, r7.w
          mul r12.w, r12.w, r12.w
          mul r7.w, r7.w, r12.w
          mul r7.w, r7.w, r11.w
          mad r25.xyz, r7.wwww, r22.xywx, r31.xyzx
          mad r22.xyw, r6.wwww, r22.xyxw, r30.xyxz
          movc r22.xyw, r0.wwww, r22.xyxw, r30.xyxz
          movc r9.xyw, r8.wwww, r23.xyxz, r9.xyxw
          movc r30.xyz, r8.wwww, r30.xyzx, r22.xywx
          movc r31.xyz, r8.wwww, r25.xyzx, r31.xyzx
          movc r32.xyz, r8.wwww, r21.xyzx, r32.xyzx
        endif 
      endif 
    endif 
    break 
    default 
    break 
  endswitch 
  iadd r5.w, r5.w, l(1)
endloop 
mad r2.xyz, r4.xwyx, l(1.000000, 3.000000, 2.000000, 0.000000), l(0.000000, 0.500000, -1.000000, 0.000000)
ftou r0.x, r2.y
mad r4.xyz, r5.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r0.y, r4.x
ieq r0.y, r0.x, r0.y
movc r0.yz, r0.yyyy, r4.yyzy, l(0,-1.000000,0,0)
mad r4.xyz, r6.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r1.z, r4.x
ieq r1.z, r0.x, r1.z
movc r1.zw, r1.zzzz, r4.yyyz, l(0,0,-1.000000,0)
mad r4.xyz, r7.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r3.x, r4.x
ieq r3.x, r0.x, r3.x
movc r4.xy, r3.xxxx, r4.yzyy, l(-1.000000,0,0,0)
mad r5.xyz, r8.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r3.x, r5.x
ieq r0.x, r0.x, r3.x
movc r4.zw, r0.xxxx, r5.yyyz, l(0,0,-1.000000,0)
mov r5.x, r0.y
mov r5.y, r1.z
mov r5.zw, r4.xxxz
add r5.xyzw, -r2.xxxx, r5.xyzw
ge r5.xyzw, |r5.xyzw|, l(0.00902149, 0.00902149, 0.00902149, 0.00902149)
movc r5.xyzw, r5.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
add r0.x, r5.y, r5.x
add r0.x, r5.z, r0.x
add r0.x, r5.w, r0.x
mul r0.y, r1.w, r5.y
mad r0.y, r5.x, r0.z, r0.y
mad r0.y, r5.z, r4.y, r0.y
mad r0.y, r5.w, r4.w, r0.y
div r2.w, r0.y, r0.x
ge r0.x, l(0.000000), r0.x
movc r2.yz, r0.xxxx, l(0,0,0,0), r2.zzwz
and r0.xy, r1.xyxx, l(1, 1, 0, 0)
ieq r0.x, r0.y, r0.x
movc r0.xyz, r0.xxxx, r2.xyzx, r2.xzyx
mad r0.x, -r0.z, l(0.500000), r0.x
add r2.y, r0.x, r0.z
mad r2.z, -r0.y, l(0.500000), r0.x
add r2.x, r0.y, r2.z
mul r0.xyz, r3.yzwy, r9.xywx
mad r0.xyz, r30.xyzx, r2.xyzx, r0.xyzx
mul r4.xyz, r31.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
mad r4.xyz, r32.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
add r0.xyz, r0.xyzx, r4.xyzx
add r4.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r4.xyz, r4.xyzx, r31.xyzx
mad r2.xyz, r32.xyzx, r2.xyzx, r4.xyzx
mad r2.xyz, r9.xywx, r3.yzwy, r2.xyzx
movc r0.xyz, r0.wwww, r0.xyzx, r2.xyzx
lt r0.w, l(0.000000), cb2[9].z
if_nz r0.w
  dp3 r0.w, r10.xyzx, r10.xyzx
  rsq r1.z, r0.w
  mul r2.xyz, r1.zzzz, r10.xyzx
  sqrt r0.w, r0.w
  lt r1.z, l(0.000000), cb2[13].w
  if_nz r1.z
    mad r1.zw, r0.wwww, cb2[15].xxxy, cb2[14].zzzw
    mul r1.zw, r1.zzzw, cb2[16].xxxy
    lt r2.w, l(0.010000), |r10.z|
    mul r3.xy, r10.zzzz, cb2[15].zwzz
    mul r3.zw, r3.xxxy, l(0.000000, 0.000000, -1.442695, -1.442695)
    exp r3.zw, r3.zzzw
    add r3.zw, -r3.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    div r3.xy, r3.zwzz, r3.xyxx
    mul r3.xy, r1.zwzz, r3.xyxx
    movc r1.zw, r2.wwww, r3.xxxy, r1.zzzw
    mul r3.xyz, r1.zzzz, cb2[12].xyzx
    exp r3.xyz, r3.xyzx
    mul r4.xyz, r1.wwww, cb2[12].xyzx
    exp r4.xyz, r4.xyzx
    add r4.xyz, -r3.xyzx, r4.xyzx
    mad r3.xyz, cb2[13].wwww, r4.xyzx, r3.xyzx
  else 
    mad r1.z, r0.w, cb2[15].x, cb2[14].z
    mul r1.z, r1.z, cb2[16].x
    lt r1.w, l(0.010000), |r10.z|
    mul r2.w, r10.z, cb2[15].z
    mul r3.w, r2.w, l(-1.442695)
    exp r3.w, r3.w
    add r3.w, -r3.w, l(1.000000)
    div r2.w, r3.w, r2.w
    mul r2.w, r1.z, r2.w
    movc r1.z, r1.w, r2.w, r1.z
    mul r4.xyz, r1.zzzz, cb2[12].xyzx
    exp r3.xyz, r4.xyzx
  endif 
  mad r3.xyz, r3.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r3.xyz, r3.xyzx, -cb2[9].zzzz
  dp3 r1.z, cb2[7].yzwy, -r2.xyzx
  mad r1.w, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r2.x, cb2[8].w, -r1.z, l(1.000000)
  mul r2.x, r2.x, r2.x
  mul r2.x, r2.x, l(12.566371)
  div r1.w, r1.w, r2.x
  add r0.w, r0.w, -cb2[10].w
  mul_sat r0.w, r0.w, cb2[11].w
  mul r0.w, r0.w, r1.w
  mov_sat r1.z, r1.z
  mad r1.z, r1.z, r1.z, l(1.000000)
  mad r1.z, r1.z, l(0.05968310), l(-1.000000)
  mad r1.z, cb2[8].z, r1.z, l(1.000000)
  mul r2.xyz, r0.wwww, cb2[11].xyzx
  mad r2.xyz, r1.zzzz, cb2[10].xyzx, r2.xyzx
  mul r2.xyz, r2.xyzx, cb2[9].wwww
  add r4.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r2.xyz, r2.xyzx, r4.xyzx
  mad r2.xyz, r0.xyzx, r3.xyzx, r2.xyzx
else 
  mul r0.w, r10.z, cb2[6].x
  mad r1.z, cb2[6].x, r10.z, cb2[5].x
  lt r1.w, |r0.w|, l(0.000100)
  min r2.w, r1.z, l(64.000000)
  mul r2.w, r2.w, l(1.442695)
  exp r2.w, r2.w
  mov_sat r3.x, cb2[6].z
  lt r3.y, r1.z, l(0.000000)
  add r1.z, r1.z, l(1.000000)
  movc r1.z, r3.y, r2.w, r1.z
  add r1.z, r1.z, -cb2[6].z
  movc r0.w, r1.w, l(1.000000), r0.w
  div r0.w, r1.z, r0.w
  movc r0.w, r1.w, r3.x, r0.w
  mul r0.w, r0.w, cb2[5].z
  dp3 r1.z, r10.xyzx, r10.xyzx
  sqrt r1.w, r1.z
  mad r0.w, r0.w, r1.w, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  rsq r1.z, r1.z
  mul r3.xyz, r1.zzzz, r10.xyzx
  dp3 r1.z, cb2[7].yzwy, r3.xyzx
  mad_sat r1.z, cb2[8].y, r1.z, cb2[8].x
  add r3.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r3.xyzw, r1.zzzz, r3.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r3.w
  add r3.xyz, -r0.xyzx, r3.xyzx
  mad r2.xyz, r0.wwww, r3.xyzx, r0.xyzx
endif 
mul r0.xyzw, r2.xyzx, cb1[85].yyyy
ge r2.xyzw, r0.wyzw, l(0.00006104, 0.00006104, 0.00006104, 0.00006104)
and r0.xyzw, r0.xyzw, r2.xyzw
min r0.xyzw, r0.xyzw, l(65024.000000, 65024.000000, 64512.000000, 65024.000000)
store_uav_typed u0.xyzw, r1.xyyy, r0.xyzw
ret 
// Approximately 1835 instruction slots used
