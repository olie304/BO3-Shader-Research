//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:24:20 2021
//
//
// Buffer Definitions: 
//
// cbuffer DrawSST
// {
//
//   struct SSTDecompressTreeConstants
//   {
//       
//       float2 pinCoordStart;          // Offset:    0
//       float2 pinPosStart;            // Offset:    8
//       float spanInInches;            // Offset:   16
//       float pinCoordRate;            // Offset:   20
//       float pinPosRate;              // Offset:   24
//       float treeWidth;               // Offset:   28
//       float pinToSplitOffset;        // Offset:   32
//       uint rootOffset;               // Offset:   36
//       float coordScale;              // Offset:   40
//       int splitArrayOffset;          // Offset:   44
//
//   } sstDecompressConstants[3];       // Offset:    0 Size:   144
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for gDispatchIDs
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// gSunShadowTree                    texture  struct         r/o             t0      1 
// gDispatchIDs                      texture  struct         r/o             t1      1 
// dest                                  UAV   float          2d             u0      1 
// DrawSST                           cbuffer      NA          NA            cb4      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB4[9], dynamicIndexed
dcl_resource_structured t0, 4
dcl_resource_structured t1, 4
dcl_uav_typed_texture2d (float,float,float,float) u0
dcl_input vThreadGroupID.x
dcl_input vThreadIDInGroup.xy
dcl_temps 7
dcl_thread_group 8, 8, 1
ushr r0.x, vThreadGroupID.x, l(4)
ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r0.x, r0.x, l(0), t1.xxxx
and r0.y, r0.x, l(3)
ubfe r1.xyzw, l(5, 5, 5, 5), l(2, 16, 16, 16), r0.xxxx
and r0.x, vThreadGroupID.x, l(15)
ubfe r2.yzw, l(0, 2, 2, 2), l(0, 2, 2, 2), vThreadGroupID.xxxx
ishl r0.z, r2.w, l(2)
iadd r2.x, -r0.z, r0.x
ishl r1.xyzw, r1.xyzw, l(5, 5, 5, 5)
ishl r2.xyzw, r2.xyzw, l(3, 3, 3, 3)
iadd r1.xyzw, r1.xyzw, r2.xyzw
iadd r1.xyzw, r1.xyzw, vThreadIDInGroup.xyyy
imul null, r0.x, r0.y, l(3)
utof r0.yz, r1.xxwx
add r0.yz, r0.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
mad r2.xyz, r0.yzyy, cb4[r0.x + 1].yyyy, cb4[r0.x + 0].xyxx
mul r3.xy, r2.zyzz, cb4[r0.x + 2].zzzz
round_ni r3.xy, r3.xyxx
bufinfo_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r0.w, t0.yzwx
mad r2.w, r3.y, cb4[r0.x + 1].w, r3.x
ftou r2.w, r2.w
umin r0.w, r0.w, r2.w
iadd r0.w, r0.w, cb4[r0.x + 2].y
ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r2.w, r0.w, l(0), t0.xxxx
and r3.x, r2.w, l(0x40000000)
ishl r3.y, r2.w, l(2)
if_z r3.x
  and r3.x, r2.w, l(0x01ffffff)
  iadd r4.x, r0.w, r3.x
  ushr r0.w, r2.w, l(25)
  utof r0.w, r0.w
  mul r2.xyz, r0.wwww, r2.xyzx
  frc r2.xyz, r2.xyzx
  mul r2.xyz, r2.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
  ftou r2.xyz, r2.xyzx
  ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r4.z, r4.x, l(0), t0.xxxx
  ushr r3.xz, r2.zzyz, l(6, 0, 6, 0)
  and r0.w, r4.z, l(0xc0000000)
  iadd r2.w, r4.x, l(1)
  ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r2.w, r2.w, l(0), t0.xxxx
  movc r2.w, r3.z, r4.z, r2.w
  ushr r3.z, r2.w, l(13)
  movc r2.w, r3.x, r3.z, r2.w
  and r2.w, r2.w, l(8191)
  iadd r5.x, r2.w, r4.x
  ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r5.z, r5.x, l(0), t0.xxxx
  mov r4.y, l(0)
  mov r5.y, l(1)
  movc r3.xzw, r0.wwww, r4.xxyz, r5.xxyz
  movc r5.yz, r0.wwww, l(0,6,1,0), l(0,5,2,0)
  ushr r6.xy, r2.zyzz, r5.yyyy
  and r6.xy, r6.xyxx, l(1, 1, 0, 0)
  and r2.w, r3.w, l(0xc0000000)
  iadd r4.w, r3.x, l(1)
  ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r4.w, r4.w, l(0), t0.xxxx
  movc r4.w, r6.y, r3.w, r4.w
  ushr r5.y, r4.w, l(13)
  movc r4.w, r6.x, r5.y, r4.w
  and r4.w, r4.w, l(8191)
  iadd r5.x, r3.x, r4.w
  ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r5.w, r5.x, l(0), t0.xxxx
  movc r3.xzw, r2.wwww, r3.xxzw, r5.xxzw
  movc r3.xzw, r0.wwww, r4.xxyz, r3.xxzw
  and r0.w, r3.w, l(0xc0000000)
  if_z r0.w
    iadd r0.w, -r3.z, l(6)
    ushr r4.xy, r2.zyzz, r0.wwww
    or r0.w, r3.w, l(0x40000000)
    bfi r2.w, l(1), l(1), r4.y, l(0)
    bfi r2.w, l(1), l(0), r4.x, r2.w
    imul null, r2.w, r2.w, l(10)
    ushr r0.w, r0.w, r2.w
    and r0.w, r0.w, l(1023)
    iadd r4.x, r0.w, r3.x
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r4.w, r4.x, l(0), t0.xxxx
    iadd r4.yz, r3.zzzz, l(0, 1, 2, 0)
    iadd r0.w, -r4.y, l(6)
    ushr r5.xy, r2.zyzz, r0.wwww
    and r0.w, r4.w, l(0xc0000000)
    or r2.w, r4.w, l(0x40000000)
    bfi r3.z, l(1), l(1), r5.y, l(0)
    bfi r3.z, l(1), l(0), r5.x, r3.z
    imul null, r3.z, r3.z, l(10)
    ushr r2.w, r2.w, r3.z
    and r2.w, r2.w, l(1023)
    iadd r5.x, r2.w, r4.x
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r5.z, r5.x, l(0), t0.xxxx
    mov r5.y, r4.z
    movc r5.xyz, r0.wwww, r4.xywx, r5.xyzx
    iadd r2.w, -r5.y, l(6)
    ushr r4.yz, r2.zzyz, r2.wwww
    and r2.w, r5.z, l(0xc0000000)
    or r3.z, r5.z, l(0x40000000)
    bfi r4.z, l(1), l(1), r4.z, l(0)
    bfi r4.y, l(1), l(0), r4.y, r4.z
    imul null, r4.y, r4.y, l(10)
    ushr r3.z, r3.z, r4.y
    and r3.z, r3.z, l(1023)
    iadd r6.x, r3.z, r5.x
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r6.y, r6.x, l(0), t0.xxxx
    movc r4.yz, r2.wwww, r5.xxzx, r6.xxyx
    movc r3.xw, r0.wwww, r4.xxxw, r4.yyyz
  endif 
  and r0.w, r3.w, l(0xc0000000)
  if_z r0.w
    ubfe r2.w, l(14), l(15), r3.w
    utof r2.w, r2.w
    mul r2.w, r2.w, l(0.00006104)
    mul r2.w, r2.w, cb4[r0.x + 1].x
    and r4.xy, r3.wwww, l(0x00007fff, 0x20000000, 0, 0)
    utof r3.z, r4.x
    mul r3.z, r3.z, l(0.00003052)
    mul r3.z, r3.z, cb4[r0.x + 1].x
    and r4.x, r2.y, l(3)
    iadd r4.x, r3.x, r4.x
    iadd r4.x, r4.x, l(1)
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r4.x, r4.x, l(0), t0.xxxx
    bfi r5.xyz, l(2, 2, 1, 0), l(3, 1, 4, 0), r2.xyzx, l(0, 0, 0, 0)
    ushr r2.x, r4.x, r5.x
    and r2.x, r2.x, l(255)
    utof r2.x, r2.x
    mul r2.x, r3.z, r2.x
    mad r2.x, r2.x, l(0.00392157), r2.w
    iadd r2.y, r5.y, l(1)
    ubfe r2.z, l(1), l(1), r2.z
    iadd r2.y, r2.z, r2.y
    iadd r2.y, r2.y, r3.x
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r2.y, r2.y, l(0), t0.xxxx
    ushr r2.y, r2.y, r5.z
    and r2.y, r2.y, l(0x0000ffff)
    utof r2.y, r2.y
    mul r2.y, r3.z, r2.y
    mad r2.y, r2.y, l(0.00001526), r2.w
    movc r3.y, r4.y, r2.x, r2.y
  else 
    mul r2.xy, l(1.000000, -1.000000, 0.000000, 0.000000), cb4[r0.x + 1].zzzz
    mad r0.yz, r0.yyzy, r2.xxyx, cb4[r0.x + 0].zzwz
    and r2.x, r3.w, l(0x80000000)
    iadd r2.y, r3.x, l(1)
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r2.y, r2.y, l(0), t0.xxxx
    movc r2.x, r2.x, r2.y, l(0)
    ishl r2.y, r3.w, l(2)
    ushr r2.z, r2.x, l(16)
    and r2.x, r2.x, l(0x0000ffff)
    f16tof32 r2.xz, r2.xxzx
    mad r0.y, r0.y, r2.z, r2.y
    mad r0.y, r0.z, r2.x, r0.y
    movc r3.y, r0.w, r0.y, r3.y
  endif 
endif 
mad_sat r0.x, -r3.y, l(0.00006104), cb4[r0.x + 2].x
store_uav_typed u0.xyzw, r1.xyzw, r0.xxxx
ret 
// Approximately 153 instruction slots used
