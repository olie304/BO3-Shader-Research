//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:23:58 2021
//
//
// Buffer Definitions: 
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16 [unused]
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16 [unused]
//   float4 subpixelOffset;             // Offset: 1136 Size:    16
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4 [unused]
//   uint numRefProbes;                 // Offset:    4 Size:     4 [unused]
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4 [unused]
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4 [unused]
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4 [unused]
//   uint enableDitheredShadow;         // Offset:  932 Size:     4 [unused]
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for gPermutedTilingBuffer
// {
//
//   struct PermutedTilingBuffer
//   {
//       
//       uint2 data;                    // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:     8
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samplerLinear                     sampler      NA          NA             s2      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// GBufferDiffuseColor               texture  float4          2d             t0      1 
// GBufferNormalAndGloss             texture  float4          2d             t1      1 
// GBufferSpecularColorAndOcclusion    texture  float4          2d             t2      1 
// GBufferDepth                      texture   float          2d             t4      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gPermutedTilingBuffer             texture  struct         r/o            t25      1 
// gSSAOTexture                      texture   float          2d            t27      1 
// gSSAODepthTexture                 texture   float          2d            t28      1 
// litBuffer                             UAV  float3          2d             u0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB1[86], immediateIndexed
dcl_constantbuffer CB2[58], immediateIndexed
dcl_sampler s2, mode_default
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_structured t25, 8
dcl_resource_texture2d (float,float,float,float) t27
dcl_resource_texture2d (float,float,float,float) t28
dcl_uav_typed_texture2d (float,float,float,float) u0
dcl_input vThreadGroupID.x
dcl_input vThreadIDInGroup.xy
dcl_temps 16
dcl_thread_group 8, 8, 1
imad r0.x, cb2[57].x, l(21), vThreadGroupID.x
ld_structured_indexable(structured_buffer, stride=8)(mixed,mixed,mixed,mixed) r0.xy, r0.x, l(0), t25.xyxx
and r0.xy, r0.xyxx, l(4095, 4095, 0, 0)
imad r0.xy, r0.xyxx, l(8, 8, 0, 0), vThreadIDInGroup.xyxx
mov r0.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r1.xyzw, r0.xyww, t1.xyzw
ftou r2.xy, cb1[44].xyxx
ult r2.xy, r0.xyxx, r2.xyxx
and r2.x, r2.y, r2.x
lt r2.y, l(0.000000), r1.z
and r2.x, r2.y, r2.x
if_z r2.x
  ret 
endif 
ge r2.y, r1.z, l(0.500000)
ld_indexable(texture2d)(float,float,float,float) r2.z, r0.xyww, t4.yzxw
ld_indexable(texture2d)(float,float,float,float) r3.xyz, r0.xyww, t0.xyzw
ld_indexable(texture2d)(float,float,float,float) r4.xyzw, r0.xyww, t2.xyzw
ld_aoffimmi_indexable(-1,0,0)(texture2d)(float,float,float,float) r5.xyz, r0.xyww, t2.xywz
ld_aoffimmi_indexable(0,-1,0)(texture2d)(float,float,float,float) r6.xyz, r0.xyww, t2.xywz
ld_aoffimmi_indexable(1,0,0)(texture2d)(float,float,float,float) r7.xyz, r0.xyww, t2.xywz
ld_aoffimmi_indexable(0,1,0)(texture2d)(float,float,float,float) r8.xyz, r0.xyzw, t2.xywz
utof r0.zw, r0.xxxy
add r0.zw, r0.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
ge r2.w, r2.z, l(0.984375)
mul r3.w, r2.z, l(1.01587307)
mad r2.z, r2.z, l(64.000000), l(-63.000000)
movc r2.z, r2.w, r2.z, r3.w
max r2.z, r2.z, l(0.00000001)
rcp r2.z, r2.z
and r2.x, r2.z, r2.x
add r2.zw, r0.zzzw, -cb1[71].xxxy
mul r2.zw, r2.zzzw, cb1[44].zzzw
mad r2.zw, r2.zzzw, l(0.000000, 0.000000, 2.000000, -2.000000), l(0.000000, 0.000000, -1.000000, 1.000000)
mul r9.x, r2.z, cb1[12].x
mul r9.y, r2.w, cb1[13].y
mov r9.z, l(1.000000)
mul r9.xyz, r2.xxxx, r9.xyzx
mul r10.xyz, r9.yyyy, cb1[17].xyzx
mad r9.xyw, r9.xxxx, cb1[16].xyxz, r10.xyxz
mad r9.xyz, r9.zzzz, cb1[18].xyzx, r9.xywx
mad r1.w, r1.w, l(3.000000), l(0.500000)
ftou r1.w, r1.w
mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r1.xy, r1.xyxx, l(0.850000, 0.850000, 0.000000, 0.000000)
dp2 r2.z, r1.xyxx, r1.xyxx
add r10.zw, -r2.zzzz, l(0.000000, 0.000000, 2.000000, 1.000000)
sqrt r2.z, r10.z
mul r10.xy, r1.xyxx, r2.zzzz
and r11.xyzw, r1.wwww, l(2, 1, 2, 1)
movc r11.xyzw, r11.zwxy, l(-1.000000,-1.000000,1,1), l(1.000000,1.000000,0,0)
xor r1.x, r11.w, r11.z
movc r11.z, r1.x, l(-1.000000), l(1.000000)
mul r1.xyw, r11.xyxz, l(-1.000000, 0.000000, 0.000000, 1.000000)
mul r12.xyz, r11.xyzx, l(1.000000, -2.000000, 1.000000, 0.000000)
mul r10.xyz, r10.xywx, l(0.40824831, 0.70710677, 0.57735026, 0.000000)
mul r1.xyw, r1.xyxw, r10.yyyy
mad r1.xyw, r12.xyxz, r10.xxxx, r1.xyxw
mad r10.xyz, r11.xyzx, r10.zzzz, r1.xywx
movc r1.x, r2.y, l(-0.500000), l(-0.00146628)
add r1.x, r1.x, r1.z
mul_sat r1.y, r1.x, l(2.00982332)
dp3 r1.z, -r9.xyzx, -r9.xyzx
rsq r1.z, r1.z
mul r11.xyz, r1.zzzz, -r9.xyzx
dp3_sat r1.x, r10.xyzx, r11.xyzx
dp3 r1.z, -r11.xyzx, r10.xyzx
add r1.z, r1.z, r1.z
mad r11.xyz, r10.xyzx, -r1.zzzz, -r11.xyzx
mul r1.z, r1.y, l(17.000000)
exp r1.z, r1.z
add r1.z, r1.z, l(2.000000)
div r1.z, l(2.000000), r1.z
sqrt r1.z, r1.z
mul r2.zw, r0.zzzw, cb1[44].zzzw
gather4_indexable(texture2d)(float,float,float,float) r12.xyzw, r2.zwzz, t27.xyzw, s4.x
gather4_indexable(texture2d)(float,float,float,float) r13.xyzw, r2.zwzz, t28.xyzw, s4.x
mul r0.zw, r0.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
frc r0.zw, r0.zzzw
add r2.zw, -r0.wwwz, l(0.000000, 0.000000, 1.000000, 1.000000)
mul r14.y, r2.z, r2.w
mul r14.xz, r0.zzwz, r2.zzwz
mul r14.w, r0.w, r0.z
dp4 r0.z, r12.xyzw, r14.xyzw
add r13.xyzw, -r2.xxxx, r13.xyzw
min r0.w, |r13.w|, |r13.z|
min r0.w, r0.w, |r13.y|
min r0.w, r0.w, |r13.x|
max r1.w, |r13.w|, |r13.z|
max r1.w, r1.w, |r13.y|
max r1.w, r1.w, |r13.x|
eq r13.xyz, r0.wwww, |r13.yzwy|
movc r0.w, r13.x, r12.y, r12.x
movc r0.w, r13.y, r12.z, r0.w
movc r0.w, r13.z, r12.w, r0.w
mul r2.x, r2.x, l(0.010000)
lt r1.w, r2.x, r1.w
movc r0.z, r1.w, r0.w, r0.z
mul r0.w, r0.z, r4.z
add r1.w, -r1.y, l(1.000000)
mul r1.w, r1.w, l(5.000000)
add r2.xzw, r9.xxyz, -cb2[35].xxyz
mul r12.x, r2.x, cb2[35].w
mul r12.yz, r2.zzwz, cb2[36].xxyx
add_sat r2.xzw, r12.xxyz, l(0.500000, 0.000000, 0.500000, 0.500000)
mul r12.xy, r2.xzxx, cb2[36].zwzz
mul r12.z, r2.w, cb2[37].x
add r2.xzw, r12.xxyz, cb2[37].yyzw
lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r10.xyzx
movc r12.xyz, r12.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
mov r12.w, l(0)
add r13.xyz, r2.xzwx, r12.wwxw
sample_l_indexable(texture3d)(float,float,float,float) r13.xyz, r13.xyzx, t17.xyzw, s4, l(0.000000)
mul r14.xyz, r10.xyzx, r10.xyzx
mul r14.xyz, r14.xyzx, cb2[19].xxxx
add r15.xyz, r2.xzwx, r12.wwyw
sample_l_indexable(texture3d)(float,float,float,float) r15.xyz, r15.xyzx, t18.xyzw, s4, l(0.000000)
mul r15.xyz, r14.yyyy, r15.xyzx
mad r13.xyz, r13.xyzx, r14.xxxx, r15.xyzx
add r2.xzw, r2.xxzw, r12.wwwz
sample_l_indexable(texture3d)(float,float,float,float) r2.xzw, r2.xzwx, t19.xwyz, s4, l(0.000000)
mad r2.xzw, r2.xxzw, r14.zzzz, r13.xxyz
mov r10.w, l(0)
sample_l_indexable(texturecubearray)(float,float,float,float) r10.xyz, r10.xyzw, t8.xyzw, s2, l(6.000000)
mul r2.xzw, r2.xxzw, r10.xxyz
dp3 r3.w, r2.xzwx, l(0.212600, 0.715200, 0.072200, 0.000000)
mov r11.w, l(0)
sample_l_indexable(texturecubearray)(float,float,float,float) r10.xyz, r11.xyzw, t8.xyzw, s2, r1.w
add r1.w, -r3.w, cb2[19].x
mad r1.w, r1.y, r1.w, r3.w
mul r10.xyz, r1.wwww, r10.xyzx
mad r1.w, r4.z, r0.z, r1.x
log r1.w, |r1.w|
mul r1.z, r1.w, r1.z
exp r1.z, r1.z
mad r0.z, r4.z, r0.z, r1.z
add_sat r0.z, r0.z, l(-1.000000)
mul r2.xzw, r0.wwww, r2.xxzw
and r11.xyz, r2.xzwx, r2.yyyy
mad r1.xy, r1.xyxx, l(0.984375, 0.984375, 0.000000, 0.000000), l(0.00781250, 0.00781250, 0.000000, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r1.xy, r1.xyxx, t5.xyzw, s2, l(0.000000)
mul r10.xyz, r0.zzzz, r10.xyzx
mul r1.xzw, r1.xxxx, r10.xxyz
mul r10.xyz, r1.yyyy, r10.xyzx
mad r4.xyz, r4.xwyx, l(1.000000, 3.000000, 2.000000, 0.000000), l(0.000000, 0.500000, -1.000000, 0.000000)
ftou r0.z, r4.y
mad r5.xyz, r5.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r0.w, r5.x
ieq r0.w, r0.z, r0.w
movc r5.xy, r0.wwww, r5.yzyy, l(-1.000000,0,0,0)
mad r6.xyz, r6.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r0.w, r6.x
ieq r0.w, r0.z, r0.w
movc r5.zw, r0.wwww, r6.yyyz, l(0,0,-1.000000,0)
mad r6.xyz, r7.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r0.w, r6.x
ieq r0.w, r0.z, r0.w
movc r6.xy, r0.wwww, r6.yzyy, l(-1.000000,0,0,0)
mad r7.xyz, r8.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r0.w, r7.x
ieq r0.z, r0.z, r0.w
movc r0.zw, r0.zzzz, r7.yyyz, l(0,0,-1.000000,0)
mov r7.xy, r5.xzxx
mov r7.z, r6.x
mov r7.w, r0.z
add r7.xyzw, -r4.xxxx, r7.xyzw
ge r7.xyzw, |r7.xyzw|, l(0.00902149, 0.00902149, 0.00902149, 0.00902149)
movc r7.xyzw, r7.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
add r0.z, r7.y, r7.x
add r0.z, r7.z, r0.z
add r0.z, r7.w, r0.z
mul r1.y, r5.w, r7.y
mad r1.y, r7.x, r5.y, r1.y
mad r1.y, r7.z, r6.y, r1.y
mad r0.w, r7.w, r0.w, r1.y
div r4.w, r0.w, r0.z
ge r0.z, l(0.000000), r0.z
movc r4.yz, r0.zzzz, l(0,0,0,0), r4.zzwz
and r0.zw, r0.xxxy, l(0, 0, 1, 1)
ieq r0.z, r0.w, r0.z
movc r4.xyz, r0.zzzz, r4.xyzx, r4.xzyx
mad r0.z, -r4.z, l(0.500000), r4.x
add r5.y, r0.z, r4.z
mad r5.z, -r4.y, l(0.500000), r0.z
add r5.x, r4.y, r5.z
mul r4.xyz, r3.xyzx, r2.xzwx
mad r4.xyz, r11.xyzx, r5.xyzx, r4.xyzx
mul r6.xyz, r1.xzwx, l(0.960000, 0.960000, 0.960000, 0.000000)
mad r6.xyz, r10.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000), r6.xyzx
add r4.xyz, r4.xyzx, r6.xyzx
add r6.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r1.xyz, r1.xzwx, r6.xyzx
mad r1.xyz, r10.xyzx, r5.xyzx, r1.xyzx
mad r1.xyz, r2.xzwx, r3.xyzx, r1.xyzx
movc r1.xyz, r2.yyyy, r4.xyzx, r1.xyzx
lt r0.z, l(0.000000), cb2[9].z
if_nz r0.z
  dp3 r0.z, r9.xyzx, r9.xyzx
  rsq r0.w, r0.z
  mul r2.xyz, r0.wwww, r9.xyzx
  sqrt r0.z, r0.z
  lt r0.w, l(0.000000), cb2[13].w
  if_nz r0.w
    mad r3.xy, r0.zzzz, cb2[15].xyxx, cb2[14].zwzz
    mul r3.xy, r3.xyxx, cb2[16].xyxx
    lt r0.w, l(0.010000), |r9.z|
    mul r3.zw, r9.zzzz, cb2[15].zzzw
    mul r4.xy, r3.zwzz, l(-1.442695, -1.442695, 0.000000, 0.000000)
    exp r4.xy, r4.xyxx
    add r4.xy, -r4.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    div r3.zw, r4.xxxy, r3.zzzw
    mul r3.zw, r3.zzzw, r3.xxxy
    movc r3.xy, r0.wwww, r3.zwzz, r3.xyxx
    mul r3.xzw, r3.xxxx, cb2[12].xxyz
    exp r3.xzw, r3.xxzw
    mul r4.xyz, r3.yyyy, cb2[12].xyzx
    exp r4.xyz, r4.xyzx
    add r4.xyz, -r3.xzwx, r4.xyzx
    mad r3.xyz, cb2[13].wwww, r4.xyzx, r3.xzwx
  else 
    mad r0.w, r0.z, cb2[15].x, cb2[14].z
    mul r0.w, r0.w, cb2[16].x
    lt r1.w, l(0.010000), |r9.z|
    mul r2.w, r9.z, cb2[15].z
    mul r3.w, r2.w, l(-1.442695)
    exp r3.w, r3.w
    add r3.w, -r3.w, l(1.000000)
    div r2.w, r3.w, r2.w
    mul r2.w, r0.w, r2.w
    movc r0.w, r1.w, r2.w, r0.w
    mul r4.xyz, r0.wwww, cb2[12].xyzx
    exp r3.xyz, r4.xyzx
  endif 
  mad r3.xyz, r3.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r3.xyz, r3.xyzx, -cb2[9].zzzz
  dp3 r0.w, cb2[7].yzwy, -r2.xyzx
  mad r1.w, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r2.x, cb2[8].w, -r0.w, l(1.000000)
  mul r2.x, r2.x, r2.x
  mul r2.x, r2.x, l(12.566371)
  div r1.w, r1.w, r2.x
  add r0.z, r0.z, -cb2[10].w
  mul_sat r0.z, r0.z, cb2[11].w
  mul r0.z, r0.z, r1.w
  mov_sat r0.w, r0.w
  mad r0.w, r0.w, r0.w, l(1.000000)
  mad r0.w, r0.w, l(0.05968310), l(-1.000000)
  mad r0.w, cb2[8].z, r0.w, l(1.000000)
  mul r2.xyz, r0.zzzz, cb2[11].xyzx
  mad r2.xyz, r0.wwww, cb2[10].xyzx, r2.xyzx
  mul r2.xyz, r2.xyzx, cb2[9].wwww
  add r4.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r2.xyz, r2.xyzx, r4.xyzx
  mad r2.xyz, r1.xyzx, r3.xyzx, r2.xyzx
else 
  mul r0.z, r9.z, cb2[6].x
  mad r0.w, cb2[6].x, r9.z, cb2[5].x
  lt r1.w, |r0.z|, l(0.000100)
  min r2.w, r0.w, l(64.000000)
  mul r2.w, r2.w, l(1.442695)
  exp r2.w, r2.w
  mov_sat r3.x, cb2[6].z
  lt r3.y, r0.w, l(0.000000)
  add r0.w, r0.w, l(1.000000)
  movc r0.w, r3.y, r2.w, r0.w
  add r0.w, r0.w, -cb2[6].z
  movc r0.z, r1.w, l(1.000000), r0.z
  div r0.z, r0.w, r0.z
  movc r0.z, r1.w, r3.x, r0.z
  mul r0.z, r0.z, cb2[5].z
  dp3 r0.w, r9.xyzx, r9.xyzx
  sqrt r1.w, r0.w
  mad r0.z, r0.z, r1.w, cb2[5].w
  exp r0.z, r0.z
  min r0.z, r0.z, l(1.000000)
  add r0.z, -r0.z, l(1.000000)
  rsq r0.w, r0.w
  mul r3.xyz, r0.wwww, r9.xyzx
  dp3 r0.w, cb2[7].yzwy, r3.xyzx
  mad_sat r0.w, cb2[8].y, r0.w, cb2[8].x
  add r3.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r3.xyzw, r0.wwww, r3.xyzw, cb2[4].xyzw
  mul r0.z, r0.z, r3.w
  add r3.xyz, -r1.xyzx, r3.xyzx
  mad r2.xyz, r0.zzzz, r3.xyzx, r1.xyzx
endif 
mul r1.xyzw, r2.xyzx, cb1[85].yyyy
ge r2.xyzw, r1.wyzw, l(0.00006104, 0.00006104, 0.00006104, 0.00006104)
and r1.xyzw, r1.xyzw, r2.xyzw
min r1.xyzw, r1.xyzw, l(65024.000000, 65024.000000, 64512.000000, 65024.000000)
store_uav_typed u0.xyzw, r0.xyyy, r1.xyzw
ret 
// Approximately 292 instruction slots used
