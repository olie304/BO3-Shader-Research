//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:32:00 2021
//
//
// Buffer Definitions: 
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16 [unused]
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16 [unused]
//   float4 subpixelOffset;             // Offset: 1136 Size:    16
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16 [unused]
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4 [unused]
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224 [unused]
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256 [unused]
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48 [unused]
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4 [unused]
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4 [unused]
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4 [unused]
//   uint enableDitheredShadow;         // Offset:  932 Size:     4 [unused]
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// gCullConstants                    texture  struct         r/o            t11      1 
// visibleLights                         UAV    uint     2darray             u6      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB1[72], immediateIndexed
dcl_constantbuffer CB2[1], immediateIndexed
dcl_resource_structured t11, 80
dcl_uav_typed_texture2darray (uint,uint,uint,uint) u6
dcl_input vThreadID.xyz
dcl_temps 18
dcl_thread_group 8, 8, 1
and r0.x, vThreadID.z, l(15)
iadd r0.y, r0.x, l(1)
ushr r0.z, vThreadID.z, l(4)
ishl r1.xy, vThreadID.xyxx, l(6, 6, 0, 0)
utof r0.w, r0.x
mul r0.w, r0.w, l(128.000000)
movc r0.x, r0.x, r0.w, l(1.000000)
ult r0.w, r0.y, l(16)
utof r1.z, r0.y
mul r1.z, r1.z, l(128.000000)
movc r0.w, r0.w, r1.z, l(131072.000000)
rcp r2.x, cb1[0].x
rcp r2.y, cb1[1].y
utof r3.xyw, r1.xyxy
add r1.zw, r3.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
add r1.zw, r1.zzzw, -cb1[71].xxxy
mul r1.zw, r1.zzzw, cb1[44].zzzw
mad r1.zw, r1.zzzw, l(0.000000, 0.000000, 2.000000, -2.000000), l(0.000000, 0.000000, -1.000000, 1.000000)
mul r4.xy, r2.xyxx, r1.zwzz
mov r4.z, l(1.000000)
mul r5.xyz, r0.xxxx, r4.xyzx
mul r6.xyz, r5.yyyy, cb1[17].xyzx
mad r5.xyw, r5.xxxx, cb1[16].xyxz, r6.xyxz
mad r5.xyz, r5.zzzz, cb1[18].xyzx, r5.xywx
iadd r1.yz, r1.xxyx, l(0, 64, 64, 0)
utof r3.z, r1.y
add r2.zw, r3.zzzw, -cb1[71].xxxy
add r2.zw, r2.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
mul r2.zw, r2.zzzw, cb1[44].zzzw
mad r2.zw, r2.zzzw, l(0.000000, 0.000000, 2.000000, -2.000000), l(0.000000, 0.000000, -1.000000, 1.000000)
mul r3.xy, r2.xyxx, r2.zwzz
mov r3.z, l(1.000000)
mul r6.xyz, r0.xxxx, r3.xyzx
mul r7.xyz, r6.yyyy, cb1[17].xyzx
mad r6.xyw, r6.xxxx, cb1[16].xyxz, r7.xyxz
mad r6.xyz, r6.zzzz, cb1[18].xyzx, r6.xywx
utof r7.xyzw, r1.yzxz
add r1.yz, r7.xxyx, -cb1[71].xxyx
add r1.yz, r1.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
mul r1.yz, r1.yyzy, cb1[44].zzwz
mad r1.yz, r1.yyzy, l(0.000000, 2.000000, -2.000000, 0.000000), l(0.000000, -1.000000, 1.000000, 0.000000)
mul r8.xy, r2.xyxx, r1.yzyy
mov r8.z, l(1.000000)
mul r1.yzw, r0.xxxx, r8.xxyz
mul r9.xyz, r1.zzzz, cb1[17].xyzx
mad r9.xyz, r1.yyyy, cb1[16].xyzx, r9.xyzx
mad r1.yzw, r1.wwww, cb1[18].xxyz, r9.xxyz
add r2.zw, r7.zzzw, -cb1[71].xxxy
add r2.zw, r2.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
mul r2.zw, r2.zzzw, cb1[44].zzzw
mad r2.zw, r2.zzzw, l(0.000000, 0.000000, 2.000000, -2.000000), l(0.000000, 0.000000, -1.000000, 1.000000)
mul r2.xy, r2.xyxx, r2.zwzz
mov r2.z, l(1.000000)
mul r7.xyz, r0.xxxx, r2.xyzx
mul r9.xyz, r7.yyyy, cb1[17].xyzx
mad r7.xyw, r7.xxxx, cb1[16].xyxz, r9.xyxz
mad r7.xyz, r7.zzzz, cb1[18].xyzx, r7.xywx
mul r4.xyz, r0.wwww, r4.xyzx
mul r9.xyz, r4.yyyy, cb1[17].xyzx
mad r4.xyw, r4.xxxx, cb1[16].xyxz, r9.xyxz
mad r4.xyz, r4.zzzz, cb1[18].xyzx, r4.xywx
mul r3.xyz, r0.wwww, r3.xyzx
mul r9.xyz, r3.yyyy, cb1[17].xyzx
mad r3.xyw, r3.xxxx, cb1[16].xyxz, r9.xyxz
mad r3.xyz, r3.zzzz, cb1[18].xyzx, r3.xywx
mul r8.xyz, r0.wwww, r8.xyzx
mul r9.xyz, r8.yyyy, cb1[17].xyzx
mad r8.xyw, r8.xxxx, cb1[16].xyxz, r9.xyxz
mad r8.xyz, r8.zzzz, cb1[18].xyzx, r8.xywx
mul r2.xyz, r0.wwww, r2.xyzx
mul r9.xyz, r2.yyyy, cb1[17].xyzx
mad r2.xyw, r2.xxxx, cb1[16].xyxz, r9.xyxz
mad r2.xyz, r2.zzzz, cb1[18].xyzx, r2.xywx
uge r0.x, r0.y, l(16)
ishl r0.y, r0.z, l(5)
iadd r0.w, -r0.y, cb2[0].x
umin r0.w, r0.w, l(32)
if_nz r0.x
  add r9.xyz, -r5.zxyz, r4.zxyz
  add r10.xyz, -r5.zxyz, r6.zxyz
  mul r11.xyz, r9.xyzx, r10.zxyz
  mad r9.xyz, r9.zxyz, r10.xyzx, -r11.xyzx
  dp3 r0.x, r9.xyzx, r9.xyzx
  rsq r0.x, r0.x
  mul r9.xyz, r0.xxxx, r9.xyzx
  dp3 r0.x, r9.xyzx, r5.xyzx
  add r11.xyz, -r6.zxyz, r3.zxyz
  add r12.xyz, -r6.yzxy, r1.zwyz
  mul r13.xyz, r11.xyzx, r12.xyzx
  mad r11.xyz, r11.zxyz, r12.yzxy, -r13.xyzx
  dp3 r1.x, r11.xyzx, r11.xyzx
  rsq r1.x, r1.x
  mul r11.xyz, r1.xxxx, r11.xyzx
  dp3 r1.x, r11.xyzx, r6.xyzx
  add r12.xyz, -r1.wyzw, r8.zxyz
  add r13.xyz, -r1.zwyz, r7.yzxy
  mul r14.xyz, r12.xyzx, r13.xyzx
  mad r12.xyz, r12.zxyz, r13.yzxy, -r14.xyzx
  dp3 r2.w, r12.xyzx, r12.xyzx
  rsq r2.w, r2.w
  mul r12.xyz, r2.wwww, r12.xyzx
  dp3 r2.w, r12.xyzx, r1.yzwy
  add r13.xyz, -r7.zxyz, r2.zxyz
  add r14.xyz, r5.yzxy, -r7.yzxy
  mul r15.xyz, r13.xyzx, r14.xyzx
  mad r13.xyz, r13.zxyz, r14.yzxy, -r15.xyzx
  dp3 r3.w, r13.xyzx, r13.xyzx
  rsq r3.w, r3.w
  mul r13.xyz, r3.wwww, r13.xyzx
  dp3 r3.w, r13.xyzx, r7.xyzx
  add r14.xyz, -r5.yzxy, r1.zwyz
  mul r15.xyz, r10.xyzx, r14.xyzx
  mad r10.xyz, r10.zxyz, r14.yzxy, -r15.xyzx
  dp3 r4.w, r10.xyzx, r10.xyzx
  rsq r4.w, r4.w
  mul r10.xyz, r4.wwww, r10.xyzx
  dp3 r4.w, r10.xyzx, r5.xyzx
  add r14.xyz, r3.zxyz, -r8.zxyz
  add r15.xyz, r4.yzxy, -r8.yzxy
  mul r16.xyz, r14.xyzx, r15.xyzx
  mad r14.xyz, r14.zxyz, r15.yzxy, -r16.xyzx
  dp3 r5.w, r14.xyzx, r14.xyzx
  rsq r5.w, r5.w
  mul r14.xyz, r5.wwww, r14.xyzx
  dp3 r5.w, r14.xyzx, r8.xyzx
  mov r15.x, r0.y
  mov r15.yzw, l(0,0,0,1)
  loop 
    uge r6.w, r15.y, r0.w
    breakc_nz r6.w
    ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r16.xyzw, r15.x, l(0), t11.xyzw
    ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r17.xy, r15.x, l(16), t11.xyxx
    dp3 r6.w, r16.xyzx, r9.xyzx
    mov r17.z, r16.w
    dp3 r7.w, r17.zxyz, |r9.xyzx|
    add r6.w, r6.w, r7.w
    lt r6.w, r6.w, r0.x
    not r7.w, r6.w
    dp3 r8.w, r16.xyzx, r11.xyzx
    dp3 r9.w, r17.zxyz, |r11.xyzx|
    add r8.w, r8.w, r9.w
    lt r8.w, r8.w, r1.x
    or r8.w, r6.w, r8.w
    and r7.w, r7.w, r8.w
    or r6.w, r6.w, r7.w
    dp3 r7.w, r16.xyzx, r12.xyzx
    dp3 r8.w, r17.zxyz, |r12.xyzx|
    add r7.w, r7.w, r8.w
    lt r7.w, r7.w, r2.w
    or r6.w, r6.w, r7.w
    dp3 r7.w, r16.xyzx, r13.xyzx
    dp3 r8.w, r17.zxyz, |r13.xyzx|
    add r7.w, r7.w, r8.w
    lt r7.w, r7.w, r3.w
    or r6.w, r6.w, r7.w
    dp3 r7.w, r16.xyzx, r10.xyzx
    dp3 r8.w, r17.zxyz, |r10.xyzx|
    add r7.w, r7.w, r8.w
    lt r7.w, r7.w, r4.w
    or r6.w, r6.w, r7.w
    dp3 r7.w, r16.xyzx, r14.xyzx
    dp3 r8.w, r17.zxyz, |r14.xyzx|
    add r7.w, r7.w, r8.w
    lt r7.w, r7.w, r5.w
    or r6.w, r6.w, r7.w
    or r7.w, r15.w, r15.z
    movc r15.z, r6.w, r15.z, r7.w
    iadd r15.xy, r15.xyxx, l(1, 1, 0, 0)
    ishl r15.w, r15.w, l(1)
  endloop 
else 
  mul r9.xyz, r6.xyzx, l(0.125000, 0.125000, 0.125000, 0.000000)
  mad r9.xyz, r5.xyzx, l(0.125000, 0.125000, 0.125000, 0.000000), r9.xyzx
  mad r9.xyz, r1.yzwy, l(0.125000, 0.125000, 0.125000, 0.000000), r9.xyzx
  mad r9.xyz, r7.xyzx, l(0.125000, 0.125000, 0.125000, 0.000000), r9.xyzx
  mad r9.xyz, r4.xyzx, l(0.125000, 0.125000, 0.125000, 0.000000), r9.xyzx
  mad r9.xyz, r3.xyzx, l(0.125000, 0.125000, 0.125000, 0.000000), r9.xyzx
  mad r9.xyz, r8.xyzx, l(0.125000, 0.125000, 0.125000, 0.000000), r9.xyzx
  mad r9.xyz, r2.xyzx, l(0.125000, 0.125000, 0.125000, 0.000000), r9.xyzx
  add r5.xyz, r5.xyzx, -r9.xyzx
  add r6.xyz, r6.xyzx, -r9.xyzx
  max r5.xyz, |r5.xyzx|, |r6.xyzx|
  add r1.xyz, r1.yzwy, -r9.xyzx
  max r1.xyz, |r1.xyzx|, r5.xyzx
  add r5.xyz, r7.xyzx, -r9.xyzx
  max r1.xyz, r1.xyzx, |r5.xyzx|
  add r4.xyz, r4.xyzx, -r9.xyzx
  max r1.xyz, r1.xyzx, |r4.xyzx|
  add r3.xyz, r3.xyzx, -r9.xyzx
  max r1.xyz, r1.xyzx, |r3.xyzx|
  add r3.xyz, r8.xyzx, -r9.xyzx
  max r1.xyz, r1.xyzx, |r3.xyzx|
  add r2.xyz, r2.xyzx, -r9.xyzx
  max r1.xyz, r1.xyzx, |r2.xyzx|
  dp3 r0.x, r1.xyzx, r1.xyzx
  sqrt r0.x, r0.x
  add r2.xyz, -r1.xyzx, r9.xyzx
  add r3.xyz, r1.xyzx, r9.xyzx
  mov r4.x, r0.y
  mov r4.y, l(0)
  mov r15.zw, l(0,0,0,1)
  loop 
    uge r1.w, r4.y, r0.w
    breakc_nz r1.w
    ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r5.xyzw, r4.x, l(0), t11.wxyz
    ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r6.xyzw, r4.x, l(16), t11.zwxy
    add r7.xyz, -r9.xyzx, r5.yzwy
    mov r5.yz, r6.zzwz
    add r5.xyz, r1.xyzx, r5.xyzx
    lt r5.xyz, r5.xyzx, |r7.xyzx|
    or r1.w, r5.y, r5.x
    or r1.w, r5.z, r1.w
    if_z r1.w
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r5.xyzw, r4.x, l(32), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r4.zw, r4.x, l(48), t11.xxxy
      lt r1.w, l(0.000000), r4.z
      mov r6.z, r5.x
      add r6.xyz, -r6.xyzx, r9.xyzx
      dp3 r2.w, r6.xyzx, r5.yzwy
      ge r3.w, r2.w, r0.x
      mad r6.xyz, -r5.yzwy, r2.wwww, r6.xyzx
      dp3 r5.x, r6.xyzx, r6.xyzx
      mul r4.z, r4.z, r4.z
      mad r2.w, r4.w, r2.w, -r0.x
      mul r4.w, r4.z, r5.x
      mul r2.w, r2.w, r2.w
      ge r2.w, r4.w, r2.w
      or r2.w, r3.w, r2.w
      max r6.xyz, r2.xyzx, r5.yzwy
      min r6.xyz, r3.xyzx, r6.xyzx
      add r5.xyz, r5.yzwy, -r6.xyzx
      dp3 r3.w, r5.xyzx, r5.xyzx
      lt r3.w, r4.z, r3.w
      or r3.w, r1.w, r3.w
      movc r1.w, r1.w, r2.w, l(-1)
      and r1.w, r3.w, r1.w
    else 
      mov r1.w, l(-1)
    endif 
    or r2.w, r15.w, r15.z
    movc r15.z, r1.w, r15.z, r2.w
    iadd r4.xy, r4.xyxx, l(1, 1, 0, 0)
    ishl r15.w, r15.w, l(1)
  endloop 
endif 
bfi r0.x, l(4), l(4), vThreadID.z, l(0)
iadd r0.zw, r0.zzzz, r0.xxxx
mov r0.xy, vThreadID.xyxx
store_uav_typed u6.xyzw, r0.xyzw, r15.zzzz
ret 
// Approximately 250 instruction slots used
