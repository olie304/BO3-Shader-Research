//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:23:22 2021
//
//
// Buffer Definitions: 
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4
//   uint enableCountDebug;             // Offset:  836 Size:     4
//   uint centerGroupIDx;               // Offset:  840 Size:     4
//   uint centerGroupIDy;               // Offset:  844 Size:     4
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4
//   float drawNumLighstScale;          // Offset:  856 Size:     4
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4
//   uint probeDebug;                   // Offset:  864 Size:     4
//   float probeDebugRadius;            // Offset:  868 Size:     4
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4
//   uint showAO;                       // Offset:  880 Size:     4
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// cbuffer LightingPackCBuffer
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } lightConstantsCB[273];           // Offset:    0 Size: 65520
//
// }
//
// cbuffer RefProbePackCBuffer
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } refProbeConstantsCB[273];        // Offset:    0 Size: 61152
//
// }
//
// cbuffer RefProbeBlendPackCBuffer
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } refProbeAttenuationConstantsCB[682];// Offset:    0 Size: 65472
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for gPermutedTilingBuffer
// {
//
//   struct PermutedTilingBuffer
//   {
//       
//       uint2 data;                    // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:     8
//
// }
//
// Resource bind info for gDeferredCullBits
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for lightingDebug
// {
//
//   struct LightingDebug
//   {
//       
//       struct LightingDebugCounts
//       {
//           
//           uint visibleLights;        // Offset:    0
//           uint activeLights;         // Offset:    4
//           uint litLights;            // Offset:    8
//           uint visibleProbes;        // Offset:   12
//           uint activeProbes;         // Offset:   16
//
//       } maxCounts;                   // Offset:    0
//       
//       struct LightingDebugCounts
//       {
//           
//           uint visibleLights;        // Offset:   20
//           uint activeLights;         // Offset:   24
//           uint litLights;            // Offset:   28
//           uint visibleProbes;        // Offset:   32
//           uint activeProbes;         // Offset:   36
//
//       } centerCounts;                // Offset:   20
//       
//       struct LightingDebugCounts
//       {
//           
//           uint visibleLights;        // Offset:   40
//           uint activeLights;         // Offset:   44
//           uint litLights;            // Offset:   48
//           uint visibleProbes;        // Offset:   52
//           uint activeProbes;         // Offset:   56
//
//       } sumDeferredCounts;           // Offset:   40
//       
//       struct LightingDebugCounts
//       {
//           
//           uint visibleLights;        // Offset:   60
//           uint activeLights;         // Offset:   64
//           uint litLights;            // Offset:   68
//           uint visibleProbes;        // Offset:   72
//           uint activeProbes;         // Offset:   76
//
//       } sumForwardCounts;            // Offset:   60
//       float3 cameraWorldPos;         // Offset:   80
//       float3 pickedWldPos;           // Offset:   92
//       uint numPickedLights;          // Offset:  104
//       uint numPickedProbes;          // Offset:  108
//       
//       struct LightingDebugLight
//       {
//           
//           uint flags;                // Offset:  112
//           float3 wldOrigin;          // Offset:  116
//           float activeAttenuation;   // Offset:  128
//           float litAttenuation;      // Offset:  132
//
//       } pickedLights[32];            // Offset:  112
//       
//       struct LightingDebugProbe
//       {
//           
//           uint flags;                // Offset:  880
//           float3 wldOrigin;          // Offset:  884
//           float weight;              // Offset:  896
//
//       } pickedProbes[32];            // Offset:  880
//       uint overdrawHistogram[64];    // Offset: 1520
//       uint overdrawSum;              // Offset: 1776
//       uint overdrawMax;              // Offset: 1780
//       float padding0;                // Offset: 1784
//       float padding1;                // Offset: 1788
//
//   } $Element;                        // Offset:    0 Size:  1792
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// samplerPointClamp                 sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// GBufferDiffuseColor               texture  float4          2d             t0      1 
// GBufferNormalAndGloss             texture  float4          2d             t1      1 
// GBufferSpecularColorAndOcclusion    texture  float4          2d             t2      1 
// GBufferDepth                      texture   float          2d             t4      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// gDownsampledScene                 texture  float4          2d            t21      1 
// gMotionVectors                    texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// gPermutedTilingBuffer             texture  struct         r/o            t25      1 
// gDeferredCullBits                 texture  struct         r/o            t26      1 
// gSSAOTexture                      texture   float          2d            t27      1 
// gSSAODepthTexture                 texture   float          2d            t28      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// litBuffer                             UAV  float3          2d             u0      1 
// lightingDebug                         UAV  struct         r/w             u2      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
// LightingPackCBuffer               cbuffer      NA          NA            cb9      1 
// RefProbePackCBuffer               cbuffer      NA          NA           cb10      1 
// RefProbeBlendPackCBuffer          cbuffer      NA          NA           cb11      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB1[86], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_constantbuffer CB9[4095], dynamicIndexed
dcl_constantbuffer CB10[3822], dynamicIndexed
dcl_constantbuffer CB11[4092], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s4, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_structured t25, 8
dcl_resource_structured t26, 4
dcl_resource_texture2d (float,float,float,float) t27
dcl_resource_texture2d (float,float,float,float) t28
dcl_resource_texture2darray (float,float,float,float) t31
dcl_uav_typed_texture2d (float,float,float,float) u0
dcl_uav_structured u2, 1792
dcl_input vThreadIDInGroupFlattened
dcl_input vThreadGroupID.x
dcl_input vThreadIDInGroup.xy
dcl_temps 44
dcl_tgsm_raw g0, 4
dcl_tgsm_raw g1, 20
dcl_tgsm_raw g2, 20
dcl_thread_group 8, 8, 1
if_z vThreadIDInGroupFlattened.x
  store_raw g0.x, l(0), l(0)
  store_raw g1.xyzw, l(0), l(0,0,0,0)
  store_raw g1.x, l(16), l(0)
  store_raw g2.xyzw, l(0), l(0,0,0,0)
  store_raw g2.x, l(16), l(0)
endif 
sync_g_t
imad r0.x, cb2[57].x, l(33), vThreadGroupID.x
ld_structured_indexable(structured_buffer, stride=8)(mixed,mixed,mixed,mixed) r0.xy, r0.x, l(0), t25.xyxx
and r0.xy, r0.xyxx, l(4095, 4095, 0, 0)
imad r1.xy, r0.xyxx, l(8, 8, 0, 0), vThreadIDInGroup.xyxx
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.xyww, t1.xyzw
ftou r0.zw, cb1[44].xxxy
ult r0.zw, r1.xxxy, r0.zzzw
and r0.z, r0.w, r0.z
lt r0.w, l(0.000000), r2.z
and r0.z, r0.w, r0.z
if_z r0.z
  ret 
endif 
ld_indexable(texture2d)(float,float,float,float) r3.xyzw, r1.xyww, t2.xyzw
utof r4.xy, r1.xyxx
add r4.zw, r4.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
mul r5.xy, r4.zwzz, cb1[44].zwzz
sample_l_indexable(texture2d)(float,float,float,float) r0.w, r5.xyxx, t27.yzwx, s4, l(0.000000)
mul r0.w, r0.w, r3.z
if_nz cb2[55].x
  mul r3.z, r0.w, l(0.750000)
  store_uav_typed u0.xyzw, r1.xyyy, r3.zzzz
  ret 
else 
  movc r3.z, cb2[54].w, r0.w, l(1.000000)
endif 
ge r0.w, r2.z, l(0.500000)
ld_indexable(texture2d)(float,float,float,float) r5.x, r1.xyww, t4.xyzw
ld_indexable(texture2d)(float,float,float,float) r5.yzw, r1.xyww, t0.wxyz
ld_aoffimmi_indexable(-1,0,0)(texture2d)(float,float,float,float) r6.xyz, r1.xyww, t2.xywz
ld_aoffimmi_indexable(0,-1,0)(texture2d)(float,float,float,float) r7.xyz, r1.xyww, t2.xywz
ld_aoffimmi_indexable(1,0,0)(texture2d)(float,float,float,float) r8.xyz, r1.xyww, t2.xywz
ld_aoffimmi_indexable(0,1,0)(texture2d)(float,float,float,float) r9.xyz, r1.xyzw, t2.xywz
ge r10.x, r5.x, l(0.984375)
mul r1.z, r5.x, l(1.01587307)
mad r1.w, r5.x, l(64.000000), l(-63.000000)
movc r1.z, r10.x, r1.w, r1.z
max r1.z, r1.z, l(0.00000001)
rcp r10.y, r1.z
and r1.zw, r0.zzzz, r10.xxxy
add r4.zw, r4.zzzw, -cb1[71].xxxy
mul r4.zw, r4.zzzw, cb1[44].zzzw
mad r4.zw, r4.zzzw, l(0.000000, 0.000000, 2.000000, -2.000000), l(0.000000, 0.000000, -1.000000, 1.000000)
mul r10.x, r4.z, cb1[12].x
mul r10.y, r4.w, cb1[13].y
mov r10.z, l(1.000000)
mul r10.xyz, r1.wwww, r10.xyzx
mul r11.xyz, r10.yyyy, cb1[17].xyzx
mad r10.xyw, r10.xxxx, cb1[16].xyxz, r11.xyxz
mad r10.xyz, r10.zzzz, cb1[18].xyzx, r10.xywx
mad r0.z, r2.w, l(3.000000), l(0.500000)
ftou r0.z, r0.z
mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r2.xy, r2.xyxx, l(0.850000, 0.850000, 0.000000, 0.000000)
dp2 r2.w, r2.xyxx, r2.xyxx
add r11.zw, -r2.wwww, l(0.000000, 0.000000, 2.000000, 1.000000)
sqrt r2.w, r11.z
mul r11.xy, r2.wwww, r2.xyxx
and r12.xyzw, r0.zzzz, l(2, 1, 2, 1)
movc r12.xyzw, r12.zwxy, l(-1.000000,-1.000000,1,1), l(1.000000,1.000000,0,0)
xor r0.z, r12.w, r12.z
movc r12.z, r0.z, l(-1.000000), l(1.000000)
mul r2.xyw, r12.xyxz, l(-1.000000, 0.000000, 0.000000, 1.000000)
mul r13.xyz, r12.xyzx, l(1.000000, -2.000000, 1.000000, 0.000000)
mul r11.xyz, r11.xywx, l(0.40824831, 0.70710677, 0.57735026, 0.000000)
mul r2.xyw, r2.xyxw, r11.yyyy
mad r2.xyw, r13.xyxz, r11.xxxx, r2.xyxw
mad r11.xyz, r12.xyzx, r11.zzzz, r2.xywx
movc r0.z, r0.w, l(-0.500000), l(-0.00146628)
add r0.z, r0.z, r2.z
mul_sat r2.y, r0.z, l(2.00982332)
dp3 r0.z, -r10.xyzx, -r10.xyzx
rsq r0.z, r0.z
mul r12.xyz, r0.zzzz, -r10.xyzx
dp2 r0.w, r4.xyxx, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r0.w, r0.w
mul r0.w, r0.w, l(52.982918)
frc r0.w, r0.w
mad r0.w, r0.w, l(6.28318548), cb1[70].w
sincos r4.x, r5.x, r0.w
dp3_sat r2.x, r11.xyzx, r12.xyzx
dp3 r0.w, -r12.xyzx, r11.xyzx
add r0.w, r0.w, r0.w
mad r13.xyz, r11.xyzx, -r0.wwww, -r12.xyzx
mul r0.w, r2.y, l(17.000000)
exp r0.w, r0.w
add r0.w, r0.w, l(2.000000)
div r0.w, l(2.000000), r0.w
sqrt r2.z, r0.w
mul r4.yz, cb1[44].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000)
ftou r14.xy, r4.yzyy
ieq r14.xy, r1.xyxx, r14.xyxx
and r2.w, r14.y, r14.x
lt r4.w, l(0.83333331), r2.y
lt r6.w, l(60.000000), r1.w
and r4.w, r4.w, r6.w
if_nz r4.w
  mul r14.xyz, r10.yyyy, cb1[9].xywx
  mad r14.xyz, r10.xxxx, cb1[8].xywx, r14.xyzx
  mad r14.xyz, r10.zzzz, cb1[10].xywx, r14.xyzx
  add r14.xyz, r14.xyzx, cb1[11].xywx
  mad r15.xyz, r13.xyzx, l(2000.000000, 2000.000000, 2000.000000, 0.000000), r10.xyzx
  mul r16.xyz, r15.yyyy, cb1[9].xywx
  mad r15.xyw, r15.xxxx, cb1[8].xyxw, r16.xyxz
  mad r15.xyz, r15.zzzz, cb1[10].xywx, r15.xywx
  add r15.xyz, r15.xyzx, cb1[11].xywx
  ge r4.w, r15.z, r14.z
  if_nz r4.w
    rcp r16.z, r14.z
    mul r16.xy, r14.xyxx, r16.zzzz
    rcp r17.z, r15.z
    mul r17.xy, r15.xyxx, r17.zzzz
    lt r14.xy, l(1.000000, 1.000000, 0.000000, 0.000000), r17.xyxx
    mad r18.xyzw, r15.xxyy, r17.zzzz, l(-1.000000, 1.000000, -1.000000, 1.000000)
    mad r19.xyzw, r15.xxyy, r17.zzzz, -r16.xxyy
    lt r15.xy, r17.xyxx, l(-1.000000, -1.000000, 0.000000, 0.000000)
    div r18.xyzw, r18.xyzw, r19.xyzw
    and r15.xy, r15.xyxx, r18.ywyy
    movc r14.xy, r14.xyxx, r18.xzxx, r15.xyxx
    max r4.w, r14.y, r14.x
    add r14.xyw, r16.xyxz, -r17.xyxz
    mad r14.xyw, r4.wwww, r14.xyxw, r17.xyxz
    mad r15.xy, r16.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    mad r17.xy, r14.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    add r15.xy, r15.xyxx, -r17.xyxx
    mul r15.xy, r4.yzyy, |r15.xyxx|
    max r4.w, r15.y, r15.x
    max r4.w, r4.w, l(1.000000)
    rcp r4.w, r4.w
    mad r15.xyw, r16.xyxz, l(0.500000, -0.500000, 0.000000, 1.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    mad r16.xyz, r14.xywx, l(0.500000, -0.500000, 1.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    add r18.xyz, -r15.xywx, r16.xyzx
    mad r15.xyw, r4.wwww, r18.xyxz, r15.xyxw
    add r16.xyz, -r15.xywx, r16.xyzx
    mul r18.xyz, r16.xyzx, l(0.031250, 0.031250, 0.031250, 0.000000)
    mul r4.yz, r4.yyzy, |r18.xxyx|
    max r4.y, r4.z, r4.y
    log r4.y, r4.y
    round_pi r4.y, r4.y
    max r4.y, r4.y, l(0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r4.z, r15.xyxx, t28.yzxw, s1, r4.y
    mad r19.xyz, r16.xyzx, l(0.031250, 0.031250, 0.031250, 0.000000), r15.xywx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r19.xyxx, t28.yzwx, s1, r4.y
    min r4.z, |r4.z|, |r4.w|
    mul r4.z, r19.z, r4.z
    lt r4.z, r4.z, l(1.000000)
    and r6.w, r4.z, l(1)
    mad r19.xyz, r16.xyzx, l(0.062500, 0.062500, 0.062500, 0.000000), r15.xywx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r19.xyxx, t28.yzwx, s1, r4.y
    min r4.w, |r4.w|, |r7.w|
    mul r4.w, r19.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    bfi r4.z, l(1), l(0), r4.z, l(2)
    movc r4.z, r4.w, r4.z, r6.w
    mad r19.xyz, r16.xyzx, l(0.093750, 0.093750, 0.093750, 0.000000), r15.xywx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r19.xyxx, t28.yzwx, s1, r4.y
    min r6.w, |r7.w|, |r4.w|
    mul r6.w, r19.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r4.z, l(4)
    movc r4.z, r6.w, r7.w, r4.z
    mad r19.xyz, r16.xyzx, l(0.125000, 0.125000, 0.125000, 0.000000), r15.xywx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r19.xyxx, t28.yzwx, s1, r4.y
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r19.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    iadd r7.w, r4.z, l(8)
    movc r4.z, r4.w, r7.w, r4.z
    mad r19.xyz, r16.xyzx, l(0.156250, 0.156250, 0.156250, 0.000000), r15.xywx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r19.xyxx, t28.yzwx, s1, r4.y
    min r6.w, |r6.w|, |r4.w|
    mul r6.w, r19.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r4.z, l(16)
    movc r4.z, r6.w, r7.w, r4.z
    mad r19.xyz, r16.xyzx, l(0.187500, 0.187500, 0.187500, 0.000000), r15.xywx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r19.xyxx, t28.yzwx, s1, r4.y
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r19.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    iadd r7.w, r4.z, l(32)
    movc r4.z, r4.w, r7.w, r4.z
    mad r19.xyz, r16.xyzx, l(0.218750, 0.218750, 0.218750, 0.000000), r15.xywx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r19.xyxx, t28.yzwx, s1, r4.y
    min r6.w, |r6.w|, |r4.w|
    mul r6.w, r19.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r4.z, l(64)
    movc r4.z, r6.w, r7.w, r4.z
    mad r19.xyz, r16.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000), r15.xywx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r19.xyxx, t28.yzwx, s1, r4.y
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r19.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    iadd r7.w, r4.z, l(128)
    movc r4.z, r4.w, r7.w, r4.z
    mad r19.xyz, r16.xyzx, l(0.281250, 0.281250, 0.281250, 0.000000), r15.xywx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r19.xyxx, t28.yzwx, s1, r4.y
    min r6.w, |r6.w|, |r4.w|
    mul r6.w, r19.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r4.z, l(256)
    movc r4.z, r6.w, r7.w, r4.z
    mad r19.xyz, r16.xyzx, l(0.312500, 0.312500, 0.312500, 0.000000), r15.xywx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r19.xyxx, t28.yzwx, s1, r4.y
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r19.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    iadd r7.w, r4.z, l(512)
    movc r4.z, r4.w, r7.w, r4.z
    mad r19.xyz, r16.xyzx, l(0.343750, 0.343750, 0.343750, 0.000000), r15.xywx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r19.xyxx, t28.yzwx, s1, r4.y
    min r6.w, |r6.w|, |r4.w|
    mul r6.w, r19.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r4.z, l(1024)
    movc r4.z, r6.w, r7.w, r4.z
    mad r19.xyz, r16.xyzx, l(0.375000, 0.375000, 0.375000, 0.000000), r15.xywx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r19.xyxx, t28.yzwx, s1, r4.y
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r19.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    iadd r7.w, r4.z, l(2048)
    movc r4.z, r4.w, r7.w, r4.z
    mad r19.xyz, r16.xyzx, l(0.406250, 0.406250, 0.406250, 0.000000), r15.xywx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r19.xyxx, t28.yzwx, s1, r4.y
    min r6.w, |r6.w|, |r4.w|
    mul r6.w, r19.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r4.z, l(4096)
    movc r4.z, r6.w, r7.w, r4.z
    mad r19.xyz, r16.xyzx, l(0.437500, 0.437500, 0.437500, 0.000000), r15.xywx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r19.xyxx, t28.yzwx, s1, r4.y
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r19.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    iadd r7.w, r4.z, l(8192)
    movc r4.z, r4.w, r7.w, r4.z
    mad r19.xyz, r16.xyzx, l(0.468750, 0.468750, 0.468750, 0.000000), r15.xywx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r19.xyxx, t28.yzwx, s1, r4.y
    min r6.w, |r6.w|, |r4.w|
    mul r6.w, r19.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r4.z, l(0x00004000)
    movc r4.z, r6.w, r7.w, r4.z
    mad r19.xyz, r16.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r15.xywx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r19.xyxx, t28.yzwx, s1, r4.y
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r19.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    iadd r7.w, r4.z, l(0x00008000)
    movc r4.z, r4.w, r7.w, r4.z
    mad r19.xyz, r16.xyzx, l(0.531250, 0.531250, 0.531250, 0.000000), r15.xywx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r19.xyxx, t28.yzwx, s1, r4.y
    min r6.w, |r6.w|, |r4.w|
    mul r6.w, r19.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r4.z, l(0x00010000)
    movc r4.z, r6.w, r7.w, r4.z
    mad r19.xyz, r16.xyzx, l(0.562500, 0.562500, 0.562500, 0.000000), r15.xywx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r19.xyxx, t28.yzwx, s1, r4.y
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r19.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    iadd r7.w, r4.z, l(0x00020000)
    movc r4.z, r4.w, r7.w, r4.z
    mad r19.xyz, r16.xyzx, l(0.593750, 0.593750, 0.593750, 0.000000), r15.xywx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r19.xyxx, t28.yzwx, s1, r4.y
    min r6.w, |r6.w|, |r4.w|
    mul r6.w, r19.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r4.z, l(0x00040000)
    movc r4.z, r6.w, r7.w, r4.z
    mad r19.xyz, r16.xyzx, l(0.625000, 0.625000, 0.625000, 0.000000), r15.xywx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r19.xyxx, t28.yzwx, s1, r4.y
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r19.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    iadd r7.w, r4.z, l(0x00080000)
    movc r4.z, r4.w, r7.w, r4.z
    mad r19.xyz, r16.xyzx, l(0.656250, 0.656250, 0.656250, 0.000000), r15.xywx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r19.xyxx, t28.yzwx, s1, r4.y
    min r6.w, |r6.w|, |r4.w|
    mul r6.w, r19.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r4.z, l(0x00100000)
    movc r4.z, r6.w, r7.w, r4.z
    mad r19.xyz, r16.xyzx, l(0.687500, 0.687500, 0.687500, 0.000000), r15.xywx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r19.xyxx, t28.yzwx, s1, r4.y
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r19.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    iadd r7.w, r4.z, l(0x00200000)
    movc r4.z, r4.w, r7.w, r4.z
    mad r19.xyz, r16.xyzx, l(0.718750, 0.718750, 0.718750, 0.000000), r15.xywx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r19.xyxx, t28.yzwx, s1, r4.y
    min r6.w, |r6.w|, |r4.w|
    mul r6.w, r19.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r4.z, l(0x00400000)
    movc r4.z, r6.w, r7.w, r4.z
    mad r19.xyz, r16.xyzx, l(0.750000, 0.750000, 0.750000, 0.000000), r15.xywx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r19.xyxx, t28.yzwx, s1, r4.y
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r19.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    iadd r7.w, r4.z, l(0x00800000)
    movc r4.z, r4.w, r7.w, r4.z
    mad r19.xyz, r16.xyzx, l(0.781250, 0.781250, 0.781250, 0.000000), r15.xywx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r19.xyxx, t28.yzwx, s1, r4.y
    min r6.w, |r6.w|, |r4.w|
    mul r6.w, r19.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r4.z, l(0x01000000)
    movc r4.z, r6.w, r7.w, r4.z
    mad r19.xyz, r16.xyzx, l(0.812500, 0.812500, 0.812500, 0.000000), r15.xywx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r19.xyxx, t28.yzwx, s1, r4.y
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r19.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    iadd r7.w, r4.z, l(0x02000000)
    movc r4.z, r4.w, r7.w, r4.z
    mad r19.xyz, r16.xyzx, l(0.843750, 0.843750, 0.843750, 0.000000), r15.xywx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r19.xyxx, t28.yzwx, s1, r4.y
    min r6.w, |r6.w|, |r4.w|
    mul r6.w, r19.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r4.z, l(0x04000000)
    movc r4.z, r6.w, r7.w, r4.z
    mad r19.xyz, r16.xyzx, l(0.875000, 0.875000, 0.875000, 0.000000), r15.xywx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r19.xyxx, t28.yzwx, s1, r4.y
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r19.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    iadd r7.w, r4.z, l(0x08000000)
    movc r4.z, r4.w, r7.w, r4.z
    mad r19.xyz, r16.xyzx, l(0.906250, 0.906250, 0.906250, 0.000000), r15.xywx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r19.xyxx, t28.yzwx, s1, r4.y
    min r6.w, |r6.w|, |r4.w|
    mul r6.w, r19.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r4.z, l(0x10000000)
    movc r4.z, r6.w, r7.w, r4.z
    mad r19.xyz, r16.xyzx, l(0.937500, 0.937500, 0.937500, 0.000000), r15.xywx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r19.xyxx, t28.yzwx, s1, r4.y
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r19.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    iadd r7.w, r4.z, l(0x20000000)
    movc r4.z, r4.w, r7.w, r4.z
    mad r19.xyz, r16.xyzx, l(0.968750, 0.968750, 0.968750, 0.000000), r15.xywx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r19.xyxx, t28.yzwx, s1, r4.y
    min r6.w, |r6.w|, |r4.w|
    mul r6.w, r19.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r4.z, l(0x40000000)
    movc r4.z, r6.w, r7.w, r4.z
    sample_l_indexable(texture2d)(float,float,float,float) r4.y, r17.xyxx, t28.yxzw, s1, r4.y
    min r4.y, |r4.w|, |r4.y|
    mul r4.y, r14.w, r4.y
    lt r4.y, r4.y, l(1.000000)
    iadd r4.w, r4.z, l(0x80000000)
    movc r4.y, r4.y, r4.w, r4.z
    mov r19.w, l(-1)
    mov r20.z, l(-1)
    mov r4.zw, l(0,0,0,0)
    mov r6.w, l(0)
    mov r7.w, r4.y
    mov r8.w, r17.z
    mov r21.yz, l(0,0,0,0)
    mov r19.z, l(0)
    mov r9.w, l(0)
    loop 
      breakc_z r7.w
      firstbit_lo r19.y, r7.w
      ishl r10.w, l(1), r19.y
      xor r19.x, r7.w, r10.w
      utof r12.w, r19.y
      mul r12.w, r12.w, l(0.031250)
      mad r14.xyw, r16.xyxz, r12.wwww, r15.xyxw
      sample_l_indexable(texture2d)(float,float,float,float) r12.w, r14.xyxx, t28.yzwx, s1, l(0.000000)
      mul r16.w, r14.w, |r12.w|
      lt r16.w, r16.w, l(1.000000)
      if_nz r16.w
        if_nz r19.z
          lt r16.w, r14.z, |r12.w|
          lt r17.x, r8.w, r14.w
          and r16.w, r16.w, r17.x
          movc r17.xy, r16.wwww, r14.xyxx, r4.zwzz
          mov r19.z, r14.w
          mov r21.x, r8.w
          movc r22.xyz, r16.wwww, r19.zxyz, r21.xyzx
          mov r7.w, r19.x
          mov r19.z, l(-1)
          mov r4.zw, r17.xxxy
          mov r8.w, r22.x
          mov r21.yz, r22.yyzy
          continue 
        endif 
        mov r16.w, r21.y
        mov r17.x, l(0)
      else 
        not r10.w, r10.w
        and r16.w, r10.w, r21.y
        mov r17.x, r19.z
      endif 
      if_nz r9.w
        mov r7.w, r19.x
        mov r21.y, r16.w
        mov r19.z, r17.x
        mov r9.w, l(-1)
        continue 
      endif 
      mov r17.yw, r4.zzzw
      mov r10.w, r6.w
      mov r18.w, r8.w
      mov r21.y, r16.w
      mov r21.x, r21.z
      mov r19.z, r17.x
      mov r20.w, r9.w
      mov r21.w, r14.w
      mov r22.x, |r12.w|
      mov r22.y, l(0)
      loop 
        ige r22.z, r22.y, l(4)
        breakc_nz r22.z
        itof r22.z, r22.y
        add r22.z, r22.z, l(1.000000)
        mul r22.z, r22.z, l(0.250000)
        mad r23.xyz, r18.xyzx, r22.zzzz, r14.xywx
        sample_l_indexable(texture2d)(float,float,float,float) r22.z, r23.xyxx, t28.yzxw, s1, l(0.000000)
        mul r22.w, r23.z, |r22.z|
        lt r22.w, r22.w, l(1.000000)
        if_nz r22.w
          lt r22.w, r14.z, |r22.z|
          add r23.w, -r21.w, r23.z
          add r24.x, -r22.x, |r22.z|
          mul r24.y, r21.w, r23.z
          mul r24.x, r24.y, |r24.x|
          lt r23.w, r24.x, |r23.w|
          and r24.x, r22.w, r23.w
          lt r24.y, r18.w, r23.z
          and r24.z, r22.w, r24.y
          movc r20.xy, r24.zzzz, r19.xyxx, r21.yxyy
          or r23.w, r23.w, r24.y
          and r22.w, r22.w, r23.w
          movc r23.xy, r22.wwww, r23.xyxx, r17.ywyy
          movc r23.w, r24.x, l(1.000000), r10.w
          movc r22.w, r22.w, r23.z, r18.w
          movc r24.xyzw, r24.xxxx, r19.xyzw, r20.xyzw
          mov r10.w, r23.w
          mov r17.yw, r23.xxxy
          mov r18.w, r22.w
          mov r21.xy, r24.yxyy
          mov r19.z, r24.z
          mov r20.w, r24.w
          break 
        endif 
        mov r21.w, r23.z
        mov r22.x, |r22.z|
        iadd r22.y, r22.y, l(1)
      endloop 
      mov r4.zw, r17.yyyw
      mov r6.w, r10.w
      mov r8.w, r18.w
      mov r21.yz, r21.yyxy
      mov r9.w, r20.w
      mov r7.w, r19.x
    endloop 
    rcp r4.y, r8.w
    add r4.y, -r14.z, r4.y
    add r7.w, -r14.z, r15.z
    div r4.y, |r4.y|, |r7.w|
    min r14.x, r4.y, l(1.000000)
    countbits r4.y, r21.y
    utof r4.y, r4.y
    add r4.y, r4.y, l(1.000000)
    iadd r7.w, -r21.z, l(32)
    utof r7.w, r7.w
    div r4.y, r4.y, r7.w
    min r14.y, r4.y, l(1.000000)
  else 
    mov r14.xy, l(1.000000,0,0,0)
    mov r6.w, l(0)
  endif 
  add r4.y, r2.y, l(-0.83333331)
  mul r4.y, r4.y, l(5.99999952)
  max r4.y, r4.y, l(0.000000)
  mad r7.w, r4.y, l(-2.000000), l(3.000000)
  mul r4.y, r4.y, r4.y
  mul r4.y, r4.y, r7.w
  add r1.w, r1.w, l(-60.000000)
  mul_sat r1.w, r1.w, l(0.01666667)
  mad r7.w, r1.w, l(-2.000000), l(3.000000)
  mul r1.w, r1.w, r1.w
  mul r1.w, r1.w, r7.w
  mul r1.w, r1.w, r4.y
  mul r1.w, r14.y, r1.w
  mad r14.yz, r4.zzwz, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
  add r14.yz, |r14.yyzy|, l(0.000000, -0.500000, -0.500000, 0.000000)
  add_sat r14.yz, r14.yyzy, r14.yyzy
  mad r15.xy, r14.yzyy, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
  mul r14.yz, r14.yyzy, r14.yyzy
  mad r14.yz, -r15.xxyx, r14.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
  mul r4.y, r14.z, r14.y
  mul r1.w, r1.w, r4.y
  mul r4.y, r14.x, l(10.000000)
  min r4.y, r4.y, l(1.000000)
  add r7.w, -r6.w, l(1.000000)
  mul r7.w, r1.w, r7.w
  add r4.y, r4.y, l(-1.000000)
  mad r4.y, r7.w, r4.y, l(1.000000)
  mul r1.w, r6.w, r1.w
  lt r6.w, l(0.000000), r1.w
  if_nz r6.w
    sample_l_indexable(texture2d)(float,float,float,float) r14.xy, r4.zwzz, t22.xyzw, s4, l(0.000000)
    add r14.zw, |r14.xxxy|, l(0.000000, 0.000000, -0.500000, -0.500000)
    add_sat r14.zw, r14.zzzw, r14.zzzw
    add r15.xy, |r14.xyxx|, |r14.xyxx|
    min r15.xy, r15.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    mul r15.xy, r15.xyxx, l(10.000000, 10.000000, 0.000000, 0.000000)
    mad r14.zw, r14.zzzw, l(0.000000, 0.000000, 30.000000, 30.000000), r15.xxxy
    ge r14.xy, r14.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
    movc r14.xy, r14.xyxx, r14.zwzz, -r14.zwzz
    mad r4.zw, -r14.xxxy, cb1[44].zzzw, r4.zzzw
    sample_l_indexable(texture2d)(float,float,float,float) r14.xyz, r4.zwzz, t21.xyzw, s4, l(0.000000)
    mul r14.xyz, r14.xyzx, cb1[85].xxxx
    mul r14.xyz, r1.wwww, r14.xyzx
  else 
    mov r14.xyz, l(0,0,0,0)
    mov r1.w, l(0)
  endif 
else 
  mov r14.xyz, l(0,0,0,0)
  mov r4.y, l(1.000000)
  mov r1.w, l(0)
endif 
dp3 r4.z, r11.xyzx, cb2[17].xyzx
mov_sat r4.w, r4.z
ge r6.w, l(0.000000), r4.w
if_nz r6.w
  mov r7.w, l(0)
endif 
if_z r6.w
  mul r15.xyz, r10.yyyy, cb2[29].xyzx
  mad r15.xyz, r10.xxxx, cb2[28].xyzx, r15.xyzx
  mad r15.xyz, r10.zzzz, cb2[30].xyzx, r15.xyzx
  add r15.xyz, r15.xyzx, cb2[31].xyzx
  add r6.w, r15.z, -cb2[17].w
  mad r6.w, -r6.w, l(0.00006104), l(1.000000)
  mov_sat r8.w, r6.w
  eq r8.w, r6.w, r8.w
  if_nz r8.w
    mov r8.w, l(0)
    mov r9.w, l(0)
    loop 
      ge r10.w, r8.w, l(3.000000)
      breakc_nz r10.w
      ftou r10.w, r8.w
      add r16.xy, r15.xyxx, -cb2[r10.w + 20].xyxx
      max r12.w, |r16.y|, |r16.x|
      mul r9.w, r12.w, cb2[r10.w + 20].z
      lt r10.w, r9.w, l(1.000000)
      if_nz r10.w
        break 
      endif 
      add r8.w, r8.w, l(1.000000)
      mov r9.w, l(0)
    endloop 
  else 
    mov r8.w, l(3.000000)
    mov r9.w, l(0)
  endif 
  ge r10.w, r8.w, l(3.000000)
  if_nz r10.w
    mul r16.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
    rcp r17.xz, r16.xxxx
    mov r17.y, -r17.z
    mad r16.xyz, r15.xyxx, r17.xyzx, r16.yzyy
    add r17.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r16.xyz, r16.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r16.xyz, r17.xyzx, r16.xyzx
    mul r17.xy, r16.zyzz, cb2[32].xxxx
    round_ni r17.xy, r17.xyxx
    mul r12.w, r17.y, cb2[27].x
    mad r12.w, r12.w, cb2[32].x, r17.x
    ftou r12.w, r12.w
    iadd r12.w, r12.w, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r14.w, r12.w, l(0), t23.xxxx
    and r15.w, r14.w, l(0x40000000)
    ishl r16.w, r14.w, l(2)
    if_z r15.w
      and r15.w, r14.w, l(0x01ffffff)
      iadd r17.x, r12.w, r15.w
      ushr r12.w, r14.w, l(25)
      utof r12.w, r12.w
      mul r16.xyz, r12.wwww, r16.xyzx
      frc r16.xyz, r16.xyzx
      mul r16.xyz, r16.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
      ftou r16.xyz, r16.xyzx
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.z, r17.x, l(0), t23.xxxx
      ushr r18.xy, r16.zyzz, l(6, 6, 0, 0)
      and r12.w, r17.z, l(0xc0000000)
      iadd r14.w, r17.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r14.w, r14.w, l(0), t23.xxxx
      movc r14.w, r18.y, r17.z, r14.w
      ushr r15.w, r14.w, l(13)
      movc r14.w, r18.x, r15.w, r14.w
      and r14.w, r14.w, l(8191)
      iadd r18.x, r14.w, r17.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.x, l(0), t23.xxxx
      mov r17.y, l(0)
      mov r18.y, l(1)
      movc r18.xyz, r12.wwww, r17.xyzx, r18.xyzx
      movc r19.yz, r12.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r20.xy, r16.zyzz, r19.yyyy
      and r20.xy, r20.xyxx, l(1, 1, 0, 0)
      and r14.w, r18.z, l(0xc0000000)
      iadd r15.w, r18.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.w, r15.w, l(0), t23.xxxx
      movc r15.w, r20.y, r18.z, r15.w
      ushr r17.w, r15.w, l(13)
      movc r15.w, r20.x, r17.w, r15.w
      and r15.w, r15.w, l(8191)
      iadd r19.x, r15.w, r18.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.w, r19.x, l(0), t23.xxxx
      movc r18.xyz, r14.wwww, r18.xyzx, r19.xzwx
      movc r17.xyz, r12.wwww, r17.xyzx, r18.xyzx
      and r12.w, r17.z, l(0xc0000000)
      if_z r12.w
        iadd r12.w, -r17.y, l(6)
        ushr r18.xy, r16.zyzz, r12.wwww
        or r12.w, r17.z, l(0x40000000)
        bfi r14.w, l(1), l(1), r18.y, l(0)
        bfi r14.w, l(1), l(0), r18.x, r14.w
        imul null, r14.w, r14.w, l(10)
        ushr r12.w, r12.w, r14.w
        and r12.w, r12.w, l(1023)
        iadd r18.x, r12.w, r17.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.w, r18.x, l(0), t23.xxxx
        iadd r18.yz, r17.yyyy, l(0, 1, 2, 0)
        iadd r12.w, -r18.y, l(6)
        ushr r17.yw, r16.zzzy, r12.wwww
        and r12.w, r18.w, l(0xc0000000)
        or r14.w, r18.w, l(0x40000000)
        bfi r15.w, l(1), l(1), r17.w, l(0)
        bfi r15.w, l(1), l(0), r17.y, r15.w
        imul null, r15.w, r15.w, l(10)
        ushr r14.w, r14.w, r15.w
        and r14.w, r14.w, l(1023)
        iadd r19.x, r14.w, r18.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.z, r19.x, l(0), t23.xxxx
        mov r19.y, r18.z
        movc r19.xyz, r12.wwww, r18.xywx, r19.xyzx
        iadd r14.w, -r19.y, l(6)
        ushr r17.yw, r16.zzzy, r14.wwww
        and r14.w, r19.z, l(0xc0000000)
        or r15.w, r19.z, l(0x40000000)
        bfi r17.w, l(1), l(1), r17.w, l(0)
        bfi r17.y, l(1), l(0), r17.y, r17.w
        imul null, r17.y, r17.y, l(10)
        ushr r15.w, r15.w, r17.y
        and r15.w, r15.w, l(1023)
        iadd r20.x, r15.w, r19.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.y, r20.x, l(0), t23.xxxx
        movc r17.yw, r14.wwww, r19.xxxz, r20.xxxy
        movc r17.xz, r12.wwww, r18.xxwx, r17.yywy
      endif 
      and r12.w, r17.z, l(0xc0000000)
      if_z r12.w
        ubfe r14.w, l(14), l(15), r17.z
        utof r14.w, r14.w
        mul r14.w, r14.w, cb2[27].w
        mul r14.w, r14.w, l(0.00006104)
        and r17.yw, r17.zzzz, l(0, 0x00007fff, 0, 0x20000000)
        utof r15.w, r17.y
        mul r15.w, r15.w, cb2[27].w
        mul r15.w, r15.w, l(0.00003052)
        and r17.y, r16.y, l(3)
        iadd r17.y, r17.y, r17.x
        iadd r17.y, r17.y, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.y, r17.y, l(0), t23.xxxx
        bfi r18.xyz, l(2, 2, 1, 0), l(3, 1, 4, 0), r16.xyzx, l(0, 0, 0, 0)
        ushr r16.x, r17.y, r18.x
        and r16.x, r16.x, l(255)
        utof r16.x, r16.x
        mul r16.x, r15.w, r16.x
        mad r16.x, r16.x, l(0.00392157), r14.w
        iadd r16.y, r18.y, l(1)
        ubfe r16.z, l(1), l(1), r16.z
        iadd r16.y, r16.z, r16.y
        iadd r16.y, r16.y, r17.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.y, r16.y, l(0), t23.xxxx
        ushr r16.y, r16.y, r18.z
        and r16.y, r16.y, l(0x0000ffff)
        utof r16.y, r16.y
        mul r15.w, r15.w, r16.y
        mad r14.w, r15.w, l(0.00001526), r14.w
        movc r16.w, r17.w, r16.x, r14.w
      else 
        and r14.w, r17.z, l(0x80000000)
        iadd r15.w, r17.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.w, r15.w, l(0), t23.xxxx
        movc r14.w, r14.w, r15.w, l(0)
        ishl r15.w, r17.z, l(2)
        ushr r16.x, r14.w, l(16)
        f16tof32 r16.x, r16.x
        and r14.w, r14.w, l(0x0000ffff)
        f16tof32 r14.w, r14.w
        mad r15.w, r15.x, r16.x, r15.w
        mad r14.w, r15.y, r14.w, r15.w
        movc r16.w, r12.w, r14.w, r16.w
      endif 
    endif 
    mad r12.w, -cb2[27].z, l(2.000000), r15.z
    lt r12.w, r16.w, r12.w
    movc r7.w, r12.w, l(0), l(1.000000)
  endif 
  if_z r10.w
    if_z cb2[58].y
      ftou r10.w, r8.w
      add r15.zw, r15.xxxy, -cb2[r10.w + 20].xxxy
      mul r15.zw, r15.zzzw, cb2[r10.w + 20].zzzz
      mad r16.xy, r15.zwzz, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r10.w, cb2[26].y
      add r16.z, r8.w, r10.w
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.w, r16.xyzx, t13.xxxx, s13, r6.w
      sample_l_indexable(texture2darray)(float,float,float,float) r12.w, r16.xyzx, t31.yzwx, s0, l(0.000000)
      add r10.w, r10.w, r12.w
      add_sat r10.w, r10.w, l(-1.000000)
      mul r12.w, r10.w, r10.w
      mul r7.w, r10.w, r12.w
    endif 
    if_nz cb2[58].y
      mov r16.x, -r4.x
      ftou r10.w, r8.w
      add r8.w, r8.w, l(1.000000)
      min r8.w, r8.w, l(2.000000)
      ftou r8.w, r8.w
      add r9.w, -r9.w, l(1.000000)
      mul r9.w, r9.w, l(28.000000)
      ftou r9.w, r9.w
      add r15.zw, r15.xxxy, -cb2[r10.w + 20].xxxy
      mul r15.zw, r15.zzzw, cb2[r10.w + 20].zzzz
      mad r15.zw, r15.zzzw, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
      add r15.xy, r15.xyxx, -cb2[r8.w + 20].xyxx
      mul r15.xy, r15.xyxx, cb2[r8.w + 20].zzzz
      mad r15.xy, r15.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      mov r16.y, r5.x
      mov r16.z, r4.x
      mov r12.w, l(0)
      mov r14.w, l(0)
      loop 
        uge r16.w, r14.w, l(8)
        breakc_nz r16.w
        ult r16.w, r9.w, r14.w
        movc r17.xy, r16.wwww, r15.xyxx, r15.zwzz
        movc r17.z, r16.w, cb2[r8.w + 20].w, cb2[r10.w + 20].w
        movc r16.w, r16.w, r8.w, r10.w
        dp2 r18.x, icb[r14.w + 0].yxyy, r16.xyxx
        dp2 r18.y, icb[r14.w + 0].yxyy, r16.yzyy
        mad r17.xy, r18.xyxx, r17.zzzz, r17.xyxx
        iadd r16.w, r16.w, cb2[26].y
        utof r17.z, r16.w
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r16.w, r17.xyzx, t13.xxxx, s13, r6.w
        sample_l_indexable(texture2darray)(float,float,float,float) r17.x, r17.xyzx, t31.xyzw, s0, l(0.000000)
        add r16.w, r16.w, r17.x
        add_sat r16.w, r16.w, l(-1.000000)
        mad r12.w, r16.w, l(0.125000), r12.w
        iadd r14.w, r14.w, l(1)
      endloop 
      mul r6.w, r12.w, r12.w
      mul r7.w, r12.w, r6.w
    endif 
  endif 
endif 
add r6.w, -r2.y, l(1.000000)
mul r8.w, r6.w, l(5.000000)
mad r9.w, r6.w, l(5.000000), l(-2.500000)
mul r9.w, r9.w, l(0.400000)
max r9.w, r9.w, l(0.000000)
mul r9.w, r9.w, l(100.000000)
mad r15.xy, -r6.wwww, l(10.000000, 5.000000, 0.000000, 0.000000), l(6.857410, 7.085000, 0.000000, 0.000000)
exp r10.w, r15.x
mul r10.w, r2.x, r10.w
mul r10.w, r10.w, l(9.136810)
mul r12.w, r6.w, r8.w
mad r12.w, -r12.w, l(2.015905), r15.y
exp r12.w, r12.w
mul r12.w, r2.x, r12.w
mul r12.w, r12.w, l(9.708090)
max r10.w, r10.w, r12.w
max r10.w, r10.w, l(1.268160)
if_nz cb2[54].x
  ftou r12.w, cb1[44].x
  iadd r12.w, r12.w, l(7)
  ushr r12.w, r12.w, l(3)
  imad r12.w, r0.y, r12.w, r0.x
  bfi r12.w, l(27), l(5), r12.w, l(16)
  mov r15.xyzw, l(0,0,0,0)
  mov r16.xyzw, l(0,0,0,0)
  mov r17.xyzw, l(0,0,0,0)
  mov r18.xyzw, l(0,0,0,0)
  mov r19.xyzw, l(0,0,0,0)
  mov r20.xyzw, l(0,0,0,0)
  mov r21.xyzw, l(0,0,0,0)
  mov r22.xyzw, l(0,0,0,0)
  mov r23.xyzw, l(0,0,0,0)
  mov r24.xyzw, l(0,0,0,0)
  mov r25.xyzw, l(0,0,0,0)
  mov r14.w, l(0)
  mov r28.z, l(0)
  mov r29.z, l(0)
  mov r26.xyzw, l(0,0,0,0)
  mov r27.xyz, l(0,0,0,0)
  loop 
    uge r27.w, r27.z, cb2[0].y
    breakc_nz r27.w
    ushr r27.w, r27.z, l(5)
    iadd r27.w, r12.w, r27.w
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r27.w, r27.w, l(0), t26.xxxx
    mov r30.xyzw, r15.yxzw
    mov r31.xyzw, r16.xyzw
    mov r32.xyzw, r17.yzwx
    mov r33.xyzw, r18.xyzw
    mov r34.xyzw, r19.xyzw
    mov r35.xyzw, r20.zwxy
    mov r36.xyzw, r21.zwxy
    mov r37.xyzw, r23.zwxy
    mov r38.xyzw, r24.zwxy
    mov r39.xyz, r26.xyzx
    mov r40.xy, r27.yxyy
    mov r28.w, r14.w
    mov r29.w, r28.z
    mov r39.w, r29.z
    mov r40.z, r26.w
    mov r41.xyzw, r22.zwxy
    mov r42.xyzw, r25.zwxy
    mov r40.w, r27.w
    loop 
      breakc_z r40.w
      firstbit_lo r43.x, r40.w
      ishl r43.y, l(1), r43.x
      not r43.y, r43.y
      and r40.w, r40.w, r43.y
      iadd r43.x, r27.z, r43.x
      imul null, r43.x, r43.x, l(14)
      add r43.yzw, r10.xxyz, -cb10[r43.x + 0].xxyz
      dp3 r43.y, r43.yzwy, r43.yzwy
      sqrt r43.y, r43.y
      ge r43.y, cb2[54].y, r43.y
      if_nz r43.y
        mov r30.yzw, cb10[r43.x + 1].xxyz
        mov r30.x, cb10[r43.x + 0].w
        mov r31.yzw, cb10[r43.x + 2].xxyz
        mov r31.x, cb10[r43.x + 1].w
        mov r32.xyz, cb10[r43.x + 3].xyzx
        mov r32.w, cb10[r43.x + 4].z
        mov r33.yz, cb10[r43.x + 4].xxyx
        mov r33.x, cb10[r43.x + 3].w
        mov r33.w, cb10[r43.x + 6].x
        mov r34.yzw, cb10[r43.x + 5].xxyz
        mov r34.x, cb10[r43.x + 4].w
        mov r35.yz, cb10[r43.x + 7].yywy
        mov r35.x, cb10[r43.x + 6].y
        mov r35.w, cb10[r43.x + 8].x
        mov r36.xyz, cb10[r43.x + 8].yzwy
        mov r36.w, cb10[r43.x + 9].x
        mov r37.xyz, cb10[r43.x + 10].yzwy
        mov r37.w, cb10[r43.x + 11].x
        mov r38.xyz, cb10[r43.x + 11].yzwy
        mov r38.w, cb10[r43.x + 12].x
        mov r39.xyz, cb10[r43.x + 0].xyzx
        mov r43.yz, cb10[r43.x + 13].yyzy
        mov r28.w, l(-1)
        mov r29.w, cb10[r43.x + 2].w
        mov r39.w, cb10[r43.x + 5].w
        mov r40.z, cb10[r43.x + 7].z
        mov r41.xyz, cb10[r43.x + 9].yzwy
        mov r41.w, cb10[r43.x + 10].x
        mov r42.xyz, cb10[r43.x + 12].yzwy
        mov r42.w, cb10[r43.x + 13].x
        mov r40.xy, r43.yzyy
        break 
      endif 
    endloop 
    if_nz r28.w
      mov r15.xyzw, r30.yxzw
      mov r16.xyzw, r31.xyzw
      mov r17.xyzw, r32.wxyz
      mov r18.xyzw, r33.xyzw
      mov r19.xyzw, r34.xyzw
      mov r20.xyzw, r35.zwxy
      mov r21.xyzw, r36.zwxy
      mov r22.xyzw, r41.zwxy
      mov r23.xyzw, r37.zwxy
      mov r24.xyzw, r38.zwxy
      mov r25.xyzw, r42.zwxy
      mov r26.xyz, r39.xyzx
      mov r27.xy, r40.yxyy
      mov r14.w, l(-1)
      mov r28.z, r29.w
      mov r29.z, r39.w
      mov r26.w, r40.z
      break 
    endif 
    iadd r27.z, r27.z, l(32)
    mov r15.xyzw, r30.yxzw
    mov r16.xyzw, r31.xyzw
    mov r17.xyzw, r32.wxyz
    mov r18.xyzw, r33.xyzw
    mov r19.xyzw, r34.xyzw
    mov r20.xyzw, r35.zwxy
    mov r21.xyzw, r36.zwxy
    mov r23.xyzw, r37.zwxy
    mov r24.xyzw, r38.zwxy
    mov r26.xyz, r39.xyzx
    mov r27.xy, r40.yxyy
    mov r14.w, r28.w
    mov r28.z, r29.w
    mov r29.z, r39.w
    mov r26.w, r40.z
    mov r22.xyzw, r41.zwxy
    mov r25.xyzw, r42.zwxy
  endloop 
  mov r30.xy, r15.ywyy
  mov r28.x, r15.z
  mov r15.yz, r16.xxwx
  mov r28.y, r16.y
  mov r30.z, r16.z
  mov r16.xyz, r17.yzwy
  mov r17.yz, r19.xxyx
  mov r29.xy, r19.zwzz
  mov r19.xy, r20.zwzz
  mov r20.z, r21.z
  mov r21.z, r22.z
  mov r22.z, r23.z
  mov r23.z, r24.z
  mov r24.z, r25.z
  mov r25.z, r27.y
else 
  mov r14.w, l(0)
endif 
if_nz r14.w
  if_nz r2.w
    add r31.yzw, r26.xxyz, cb1[24].xxyz
    mov r31.x, l(16)
    store_structured u2.xyzw, cb2[52].x, l(880), r31.xyzw
  endif 
  add r26.xyz, r10.xyzx, -r26.xyzx
  and r12.w, r26.w, l(0x0000ffff)
  ubfe r15.w, l(6), l(25), r26.w
  imul null, r16.w, r12.w, l(6)
  dp3 r17.w, cb11[r16.w + 0].xyzx, r26.xyzx
  add_sat r17.w, r17.w, cb11[r16.w + 0].w
  dp3 r19.z, cb11[r16.w + 1].xyzx, r26.xyzx
  add_sat r19.z, r19.z, cb11[r16.w + 1].w
  mul r17.w, r17.w, r19.z
  dp3 r19.z, cb11[r16.w + 2].xyzx, r26.xyzx
  add_sat r19.z, r19.z, cb11[r16.w + 2].w
  mul r17.w, r17.w, r19.z
  dp3 r19.z, cb11[r16.w + 3].xyzx, r26.xyzx
  add_sat r19.z, r19.z, cb11[r16.w + 3].w
  mul r17.w, r17.w, r19.z
  dp3 r19.z, cb11[r16.w + 4].xyzx, r26.xyzx
  add_sat r19.z, r19.z, cb11[r16.w + 4].w
  mul r17.w, r17.w, r19.z
  dp3 r19.z, cb11[r16.w + 5].xyzx, r26.xyzx
  add_sat r16.w, r19.z, cb11[r16.w + 5].w
  mul r31.x, r16.w, r17.w
  and r16.w, r18.w, l(1)
  mov r31.yz, l(0,0,1.000000,0)
  movc r19.zw, r16.wwww, r31.xxxy, r31.zzzx
  mov r31.x, l(1.000000)
  mov r16.w, r18.w
  mov r32.xy, r19.zwzz
  mov r17.w, l(1)
  loop 
    ige r20.w, r17.w, r15.w
    breakc_nz r20.w
    iadd r20.w, r12.w, r17.w
    imul null, r20.w, r20.w, l(6)
    dp3 r27.y, cb11[r20.w + 0].xyzx, r26.xyzx
    add_sat r27.y, r27.y, cb11[r20.w + 0].w
    mul r27.y, r27.y, r32.x
    dp3 r27.z, cb11[r20.w + 1].xyzx, r26.xyzx
    add_sat r27.z, r27.z, cb11[r20.w + 1].w
    mul r27.y, r27.z, r27.y
    dp3 r27.z, cb11[r20.w + 2].xyzx, r26.xyzx
    add_sat r27.z, r27.z, cb11[r20.w + 2].w
    mul r27.y, r27.z, r27.y
    dp3 r27.z, cb11[r20.w + 3].xyzx, r26.xyzx
    add_sat r27.z, r27.z, cb11[r20.w + 3].w
    mul r27.y, r27.z, r27.y
    dp3 r27.z, cb11[r20.w + 4].xyzx, r26.xyzx
    add_sat r27.z, r27.z, cb11[r20.w + 4].w
    mul r27.y, r27.z, r27.y
    dp3 r27.z, cb11[r20.w + 5].xyzx, r26.xyzx
    add_sat r20.w, r27.z, cb11[r20.w + 5].w
    mul r32.x, r20.w, r27.y
    ushr r27.z, r16.w, l(2)
    ubfe r27.w, l(1), l(2), r16.w
    and r28.w, r27.z, l(2)
    max r29.w, r32.x, r32.y
    mad r20.w, -r27.y, r20.w, l(1.000000)
    mul r20.w, r20.w, r32.y
    movc r31.y, r28.w, r20.w, r29.w
    movc r32.xy, r27.wwww, r32.xyxx, r31.xyxx
    iadd r17.w, r17.w, l(1)
    mov r16.w, r27.z
  endloop 
  mov_sat r32.y, r32.y
  mul r31.w, r19.x, r32.y
  lt r12.w, l(0.000000), r31.w
  if_nz r12.w
    if_nz r2.w
      ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r12.w, cb2[52].x, l(880), u2.xxxx
      or r12.w, r12.w, l(32)
      store_structured u2.x, cb2[52].x, l(880), r12.w
      store_structured u2.x, cb2[52].x, l(896), r31.w
    endif 
    mul r12.w, r19.y, r31.w
    dp3 r15.w, r13.xyzx, r20.xyzx
    dp3 r16.w, r26.xyzx, r20.xyzx
    add r16.w, -r21.w, r16.w
    ge r17.w, r16.w, l(0.000000)
    max r16.w, r9.w, |r16.w|
    movc r16.w, r17.w, r16.w, -r16.w
    max r15.w, -r15.w, l(0.00000010)
    div r15.w, r16.w, r15.w
    min r15.w, |r15.w|, l(131072.000000)
    dp3 r16.w, r13.xyzx, r21.xyzx
    dp3 r17.w, r26.xyzx, r21.xyzx
    add r17.w, -r22.w, r17.w
    ge r18.w, r17.w, l(0.000000)
    max r17.w, r9.w, |r17.w|
    movc r17.w, r18.w, r17.w, -r17.w
    max r16.w, -r16.w, l(0.00000010)
    div r16.w, r17.w, r16.w
    min r15.w, r15.w, |r16.w|
    dp3 r16.w, r13.xyzx, r22.xyzx
    dp3 r17.w, r26.xyzx, r22.xyzx
    add r17.w, -r23.w, r17.w
    ge r18.w, r17.w, l(0.000000)
    max r17.w, r9.w, |r17.w|
    movc r17.w, r18.w, r17.w, -r17.w
    max r16.w, -r16.w, l(0.00000010)
    div r16.w, r17.w, r16.w
    min r15.w, r15.w, |r16.w|
    dp3 r16.w, r13.xyzx, r23.xyzx
    dp3 r17.w, r26.xyzx, r23.xyzx
    add r17.w, -r24.w, r17.w
    ge r18.w, r17.w, l(0.000000)
    max r17.w, r9.w, |r17.w|
    movc r17.w, r18.w, r17.w, -r17.w
    max r16.w, -r16.w, l(0.00000010)
    div r16.w, r17.w, r16.w
    min r15.w, r15.w, |r16.w|
    dp3 r16.w, r13.xyzx, r24.xyzx
    dp3 r17.w, r26.xyzx, r24.xyzx
    add r17.w, -r25.w, r17.w
    ge r18.w, r17.w, l(0.000000)
    max r17.w, r9.w, |r17.w|
    movc r17.w, r18.w, r17.w, -r17.w
    max r16.w, -r16.w, l(0.00000010)
    div r16.w, r17.w, r16.w
    min r15.w, r15.w, |r16.w|
    dp3 r16.w, r13.xyzx, r25.xyzx
    dp3 r17.w, r26.xyzx, r25.xyzx
    add r17.w, -r27.x, r17.w
    ge r18.w, r17.w, l(0.000000)
    max r17.w, r9.w, |r17.w|
    movc r17.w, r18.w, r17.w, -r17.w
    max r16.w, -r16.w, l(0.00000010)
    div r16.w, r17.w, r16.w
    min r15.w, r15.w, |r16.w|
    add r18.xyz, r18.xyzx, r26.xyzx
    mad r18.xyz, r13.xyzx, r15.wwww, r18.xyzx
    dp3 r16.w, r18.xyzx, r18.xyzx
    sqrt r16.w, r16.w
    div r15.w, r15.w, r16.w
    add r15.w, r15.w, r15.w
    sqrt r15.w, r15.w
    mad r15.w, r6.w, l(5.000000), r15.w
    add r15.w, r15.w, l(-0.844800)
    dp3 r19.x, r18.xyzx, r30.xyzx
    dp3 r19.y, r18.xyzx, r15.xyzx
    dp3 r19.z, r18.xyzx, r28.xyzx
    ubfe r16.w, l(9), l(16), r26.w
    utof r19.w, r16.w
    sample_l_indexable(texturecubearray)(float,float,float,float) r18.xyz, r19.xyzw, t8.xyzw, s2, r15.w
    and r20.xyz, r18.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
    ieq r20.xyz, r20.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
    or r15.w, r20.y, r20.x
    or r15.w, r20.z, r15.w
    movc r18.xyz, r15.wwww, l(1.000000,1.000000,0,0), r18.xyzx
    dp3 r20.x, r26.xyzx, r30.xyzx
    dp3 r20.y, r26.xyzx, r15.xyzx
    dp3 r20.z, r26.xyzx, r28.xyzx
    mad_sat r16.xyz, r20.xyzx, r16.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    mad r16.xyz, r16.xyzx, r17.xyzx, r29.xyzx
    dp3 r19.x, r11.xyzx, r30.xyzx
    dp3 r19.y, r11.xyzx, r15.xyzx
    dp3 r19.z, r11.xyzx, r28.xyzx
    lt r15.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r19.xyzx
    movc r17.z, r15.x, l(0), l(0.500000)
    mov r17.xy, l(0,0,0,0)
    add r17.xyz, r16.xyzx, r17.xyzx
    sample_l_indexable(texture3d)(float,float,float,float) r17.xyz, r17.xyzx, t17.xyzw, s4, l(0.000000)
    mul r20.xyz, r19.xyzx, r19.xyzx
    mul r20.xyz, r12.wwww, r20.xyzx
    movc r21.z, r15.y, l(0), l(0.500000)
    mov r21.xy, l(0,0,0,0)
    add r15.xyw, r16.xyxz, r21.xyxz
    sample_l_indexable(texture3d)(float,float,float,float) r15.xyw, r15.xywx, t18.xywz, s4, l(0.000000)
    mul r15.xyw, r20.yyyy, r15.xyxw
    mad r15.xyw, r17.xyxz, r20.xxxx, r15.xyxw
    movc r17.z, r15.z, l(0), l(0.500000)
    mov r17.xy, l(0,0,0,0)
    add r16.xyz, r16.xyzx, r17.xyzx
    sample_l_indexable(texture3d)(float,float,float,float) r16.xyz, r16.xyzx, t19.xyzw, s4, l(0.000000)
    mad r15.xyz, r16.xyzx, r20.zzzz, r15.xywx
    sample_l_indexable(texturecubearray)(float,float,float,float) r16.xyz, r19.xyzw, t8.xyzw, s2, l(6.000000)
    and r17.xyz, r16.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
    ieq r17.xyz, r17.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
    or r15.w, r17.y, r17.x
    or r15.w, r17.z, r15.w
    movc r16.xyz, r15.wwww, l(1.000000,1.000000,0,0), r16.xyzx
    mul r15.xyz, r15.xyzx, r16.xyzx
    dp3 r15.x, r15.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
    mul r15.y, r10.w, r15.x
    mul r16.xyz, r12.wwww, r18.xyzx
    dp3 r12.w, r16.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
    mad r12.w, r10.w, r15.x, r12.w
    div r12.w, r15.y, r12.w
    mul r31.xyz, r12.wwww, r16.xyzx
    mov r12.w, l(257)
  else 
    mov r31.xyzw, l(0,0,0,0)
    mov r12.w, l(1)
  endif 
  mov r15.x, l(-1)
else 
  mov r31.xyzw, l(0,0,0,0)
  mov r12.w, l(0)
endif 
and r14.w, r14.w, r15.x
if_z r14.w
  iadd r14.w, cb2[0].y, -cb2[58].x
  ftou r15.x, cb1[44].x
  iadd r15.x, r15.x, l(7)
  ushr r15.x, r15.x, l(3)
  imad r15.x, r0.y, r15.x, r0.x
  bfi r15.x, l(27), l(5), r15.x, l(16)
  and r15.y, r14.w, l(-32)
  iadd r15.z, r14.w, -r15.y
  and r15.w, cb2[0].y, l(-32)
  iadd r16.x, -r15.w, cb2[0].y
  mov r17.x, l(16)
  mov r18.yz, l(0,0,1.000000,0)
  mov r19.xy, l(0,0,0,0)
  mov r20.xz, l(1.000000,0,1.000000,0)
  mov r21.xy, l(0,0,0,0)
  mov r22.xy, l(0,0,0,0)
  mov r23.xyz, l(0,0,0,0)
  mov r23.w, r31.x
  mov r24.xyz, r31.yzwy
  mov r24.w, r12.w
  mov r16.y, r15.y
  loop 
    uge r16.z, r16.y, cb2[0].y
    breakc_nz r16.z
    ushr r16.z, r16.y, l(5)
    iadd r16.z, r15.x, r16.z
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.z, r16.z, l(0), t26.xxxx
    ieq r16.w, r15.y, r16.y
    bfi r18.w, r15.z, l(0), l(0), r16.z
    movc r16.z, r16.w, r18.w, r16.z
    ieq r16.w, r15.w, r16.y
    ubfe r18.w, r16.x, l(0), r16.z
    movc r16.z, r16.w, r18.w, r16.z
    mov r25.xyzw, r23.xyzw
    mov r26.xyzw, r24.xyzw
    mov r16.w, r16.z
    loop 
      breakc_z r16.w
      firstbit_lo r18.w, r16.w
      ishl r19.w, l(1), r18.w
      not r19.w, r19.w
      and r16.w, r16.w, r19.w
      iadd r18.w, r16.y, r18.w
      imul null, r18.w, r18.w, l(14)
      and r19.w, r26.w, l(255)
      ult r21.w, r19.w, l(32)
      and r21.w, r2.w, r21.w
      if_nz r21.w
        imad r19.w, r19.w, l(20), l(880)
        add r17.yzw, cb1[24].xxyz, cb10[r18.w + 0].xxyz
        store_structured u2.xyzw, cb2[52].x, r19.w, r17.xyzw
      endif 
      iadd r27.w, r26.w, l(1)
      add r17.yzw, r10.xxyz, -cb10[r18.w + 0].xxyz
      and r19.w, l(0x0000ffff), cb10[r18.w + 7].z
      ubfe r21.w, l(6), l(25), cb10[r18.w + 7].z
      imul null, r22.w, r19.w, l(6)
      dp3 r28.x, cb11[r22.w + 0].xyzx, r17.yzwy
      add_sat r28.x, r28.x, cb11[r22.w + 0].w
      dp3 r28.y, cb11[r22.w + 1].xyzx, r17.yzwy
      add_sat r28.y, r28.y, cb11[r22.w + 1].w
      mul r28.x, r28.y, r28.x
      dp3 r28.y, cb11[r22.w + 2].xyzx, r17.yzwy
      add_sat r28.y, r28.y, cb11[r22.w + 2].w
      mul r28.x, r28.y, r28.x
      dp3 r28.y, cb11[r22.w + 3].xyzx, r17.yzwy
      add_sat r28.y, r28.y, cb11[r22.w + 3].w
      mul r28.x, r28.y, r28.x
      dp3 r28.y, cb11[r22.w + 4].xyzx, r17.yzwy
      add_sat r28.y, r28.y, cb11[r22.w + 4].w
      mul r28.x, r28.y, r28.x
      dp3 r28.y, cb11[r22.w + 5].xyzx, r17.yzwy
      add_sat r22.w, r28.y, cb11[r22.w + 5].w
      mul r18.x, r22.w, r28.x
      and r22.w, l(1), cb10[r18.w + 6].x
      movc r28.xy, r22.wwww, r18.xyxx, r18.zxzz
      mov r18.x, cb10[r18.w + 6].x
      mov r29.xy, r28.xyxx
      mov r22.w, l(1)
      loop 
        ige r28.z, r22.w, r21.w
        breakc_nz r28.z
        iadd r28.z, r19.w, r22.w
        imul null, r28.z, r28.z, l(6)
        dp3 r28.w, cb11[r28.z + 0].xyzx, r17.yzwy
        add_sat r28.w, r28.w, cb11[r28.z + 0].w
        mul r28.w, r28.w, r29.x
        dp3 r29.z, cb11[r28.z + 1].xyzx, r17.yzwy
        add_sat r29.z, r29.z, cb11[r28.z + 1].w
        mul r28.w, r28.w, r29.z
        dp3 r29.z, cb11[r28.z + 2].xyzx, r17.yzwy
        add_sat r29.z, r29.z, cb11[r28.z + 2].w
        mul r28.w, r28.w, r29.z
        dp3 r29.z, cb11[r28.z + 3].xyzx, r17.yzwy
        add_sat r29.z, r29.z, cb11[r28.z + 3].w
        mul r28.w, r28.w, r29.z
        dp3 r29.z, cb11[r28.z + 4].xyzx, r17.yzwy
        add_sat r29.z, r29.z, cb11[r28.z + 4].w
        mul r28.w, r28.w, r29.z
        dp3 r29.z, cb11[r28.z + 5].xyzx, r17.yzwy
        add_sat r28.z, r29.z, cb11[r28.z + 5].w
        mul r29.x, r28.z, r28.w
        ushr r29.z, r18.x, l(2)
        ubfe r29.w, l(1), l(2), r18.x
        and r30.x, r29.z, l(2)
        max r30.y, r29.x, r29.y
        mad r28.z, -r28.w, r28.z, l(1.000000)
        mul r28.z, r28.z, r29.y
        movc r20.y, r30.x, r28.z, r30.y
        movc r29.xy, r29.wwww, r29.xyxx, r20.xyxx
        iadd r22.w, r22.w, l(1)
        mov r18.x, r29.z
      endloop 
      mov_sat r29.y, r29.y
      mul r18.x, r29.y, cb10[r18.w + 6].y
      lt r19.w, l(0.000000), r18.x
      if_nz r19.w
        and r19.w, r27.w, l(255)
        iadd r20.y, r19.w, l(-1)
        ult r20.y, r20.y, l(32)
        and r20.y, r2.w, r20.y
        if_nz r20.y
          imad r28.xy, r19.wwww, l(20, 20, 0, 0), l(860, 876, 0, 0)
          ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r19.w, cb2[52].x, r28.x, u2.xxxx
          or r19.w, r19.w, l(32)
          store_structured u2.x, cb2[52].x, r28.x, r19.w
          store_structured u2.x, cb2[52].x, r28.y, r18.x
        endif 
        iadd r26.w, r26.w, l(257)
        mad r26.z, r29.y, cb10[r18.w + 6].y, r26.z
        mul r18.x, r18.x, cb10[r18.w + 7].y
        mov r28.x, cb10[r18.w + 7].w
        mov r28.yz, cb10[r18.w + 8].xxyx
        dp3 r19.w, r13.xyzx, r28.xyzx
        dp3 r20.y, r17.yzwy, r28.xyzx
        add r20.y, r20.y, -cb10[r18.w + 8].z
        ge r21.w, r20.y, l(0.000000)
        max r20.y, r9.w, |r20.y|
        movc r20.y, r21.w, r20.y, -r20.y
        max r19.w, -r19.w, l(0.00000010)
        div r19.w, r20.y, r19.w
        min r19.w, |r19.w|, l(131072.000000)
        mov r28.x, cb10[r18.w + 8].w
        mov r28.yz, cb10[r18.w + 9].xxyx
        dp3 r20.y, r13.xyzx, r28.xyzx
        dp3 r21.w, r17.yzwy, r28.xyzx
        add r21.w, r21.w, -cb10[r18.w + 9].z
        ge r22.w, r21.w, l(0.000000)
        max r21.w, r9.w, |r21.w|
        movc r21.w, r22.w, r21.w, -r21.w
        max r20.y, -r20.y, l(0.00000010)
        div r20.y, r21.w, r20.y
        min r19.w, r19.w, |r20.y|
        mov r28.x, cb10[r18.w + 9].w
        mov r28.yz, cb10[r18.w + 10].xxyx
        dp3 r20.y, r13.xyzx, r28.xyzx
        dp3 r21.w, r17.yzwy, r28.xyzx
        add r21.w, r21.w, -cb10[r18.w + 10].z
        ge r22.w, r21.w, l(0.000000)
        max r21.w, r9.w, |r21.w|
        movc r21.w, r22.w, r21.w, -r21.w
        max r20.y, -r20.y, l(0.00000010)
        div r20.y, r21.w, r20.y
        min r19.w, r19.w, |r20.y|
        mov r28.x, cb10[r18.w + 10].w
        mov r28.yz, cb10[r18.w + 11].xxyx
        dp3 r20.y, r13.xyzx, r28.xyzx
        dp3 r21.w, r17.yzwy, r28.xyzx
        add r21.w, r21.w, -cb10[r18.w + 11].z
        ge r22.w, r21.w, l(0.000000)
        max r21.w, r9.w, |r21.w|
        movc r21.w, r22.w, r21.w, -r21.w
        max r20.y, -r20.y, l(0.00000010)
        div r20.y, r21.w, r20.y
        min r19.w, r19.w, |r20.y|
        mov r28.x, cb10[r18.w + 11].w
        mov r28.yz, cb10[r18.w + 12].xxyx
        dp3 r20.y, r13.xyzx, r28.xyzx
        dp3 r21.w, r17.yzwy, r28.xyzx
        add r21.w, r21.w, -cb10[r18.w + 12].z
        ge r22.w, r21.w, l(0.000000)
        max r21.w, r9.w, |r21.w|
        movc r21.w, r22.w, r21.w, -r21.w
        max r20.y, -r20.y, l(0.00000010)
        div r20.y, r21.w, r20.y
        min r19.w, r19.w, |r20.y|
        mov r28.x, cb10[r18.w + 12].w
        mov r28.yz, cb10[r18.w + 13].xxyx
        dp3 r20.y, r13.xyzx, r28.xyzx
        dp3 r21.w, r17.yzwy, r28.xyzx
        add r21.w, r21.w, -cb10[r18.w + 13].z
        ge r22.w, r21.w, l(0.000000)
        max r21.w, r9.w, |r21.w|
        movc r21.w, r22.w, r21.w, -r21.w
        max r20.y, -r20.y, l(0.00000010)
        div r20.y, r21.w, r20.y
        min r19.w, r19.w, |r20.y|
        add r28.x, r17.y, cb10[r18.w + 3].w
        add r28.yz, r17.zzwz, cb10[r18.w + 4].xxyx
        mad r28.xyz, r13.xyzx, r19.wwww, r28.xyzx
        dp3 r20.y, r28.xyzx, r28.xyzx
        sqrt r20.y, r20.y
        div r19.w, r19.w, r20.y
        add r19.w, r19.w, r19.w
        sqrt r19.w, r19.w
        mad r19.w, r6.w, l(5.000000), r19.w
        add r19.w, r19.w, l(-0.844800)
        mov r30.x, cb10[r18.w + 0].w
        mov r30.y, cb10[r18.w + 1].z
        mov r30.z, cb10[r18.w + 2].y
        dp3 r32.x, r28.xyzx, r30.xyzx
        mov r33.xy, cb10[r18.w + 1].xwxx
        mov r33.z, cb10[r18.w + 2].z
        dp3 r32.y, r28.xyzx, r33.xyzx
        mov r34.x, cb10[r18.w + 1].y
        mov r34.yz, cb10[r18.w + 2].xxwx
        dp3 r32.z, r28.xyzx, r34.xyzx
        ubfe r20.y, l(9), l(16), cb10[r18.w + 7].z
        utof r32.w, r20.y
        sample_l_indexable(texturecubearray)(float,float,float,float) r28.xyz, r32.xyzw, t8.xyzw, s2, r19.w
        and r29.xzw, r28.xxyz, l(0x7fffffff, 0, 0x7fffffff, 0x7fffffff)
        ieq r29.xzw, r29.xxzw, l(0x7f800000, 0, 0x7f800000, 0x7f800000)
        or r19.w, r29.z, r29.x
        or r19.w, r29.w, r19.w
        movc r28.xyz, r19.wwww, l(1.000000,1.000000,0,0), r28.xyzx
        dp3 r35.x, r17.yzwy, r30.xyzx
        dp3 r35.y, r17.yzwy, r33.xyzx
        dp3 r35.z, r17.yzwy, r34.xyzx
        mad_sat r17.yzw, r35.xxyz, cb10[r18.w + 3].xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
        mul r35.xy, r17.yzyy, cb10[r18.w + 4].zwzz
        mul r35.z, r17.w, cb10[r18.w + 5].x
        add r17.yzw, r35.xxyz, cb10[r18.w + 5].yyzw
        dp3 r32.x, r11.xyzx, r30.xyzx
        dp3 r32.y, r11.xyzx, r33.xyzx
        dp3 r32.z, r11.xyzx, r34.xyzx
        lt r29.xzw, l(0.000000, 0.000000, 0.000000, 0.000000), r32.xxyz
        movc r19.z, r29.x, l(0), l(0.500000)
        add r30.xyz, r17.yzwy, r19.xyzx
        sample_l_indexable(texture3d)(float,float,float,float) r30.xyz, r30.xyzx, t17.xyzw, s4, l(0.000000)
        mul r33.xyz, r32.xyzx, r32.xyzx
        mul r33.xyz, r18.xxxx, r33.xyzx
        movc r21.z, r29.z, l(0), l(0.500000)
        add r34.xyz, r17.yzwy, r21.xyzx
        sample_l_indexable(texture3d)(float,float,float,float) r34.xyz, r34.xyzx, t18.xyzw, s4, l(0.000000)
        mul r34.xyz, r33.yyyy, r34.xyzx
        mad r30.xyz, r30.xyzx, r33.xxxx, r34.xyzx
        movc r22.z, r29.w, l(0), l(0.500000)
        add r17.yzw, r17.yyzw, r22.xxyz
        sample_l_indexable(texture3d)(float,float,float,float) r17.yzw, r17.yzwy, t19.wxyz, s4, l(0.000000)
        mad r17.yzw, r17.yyzw, r33.zzzz, r30.xxyz
        sample_l_indexable(texturecubearray)(float,float,float,float) r29.xzw, r32.xyzw, t8.xwyz, s2, l(6.000000)
        and r30.xyz, r29.xzwx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
        ieq r30.xyz, r30.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
        or r18.w, r30.y, r30.x
        or r18.w, r30.z, r18.w
        movc r29.xzw, r18.wwww, l(1.000000,0,1.000000,0), r29.xxzw
        mul r30.xyz, r17.yzwy, r29.xzwx
        dp3 r18.w, r30.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
        mad r25.xyz, r17.yzwy, r29.xzwx, r25.xyzx
        mul r17.y, r10.w, r18.w
        mul r28.xyz, r18.xxxx, r28.xyzx
        dp3 r17.z, r28.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
        mad r17.z, r10.w, r18.w, r17.z
        div r17.y, r17.y, r17.z
        mov r30.x, r25.w
        mov r30.yz, r26.xxyx
        mad r17.yzw, r28.xxyz, r17.yyyy, r30.xxyz
        mov r25.w, r17.y
        mov r26.xy, r17.zwzz
      else 
        mov r27.xyz, r26.xyzx
        mov r26.xyzw, r27.xyzw
      endif 
    endloop 
    mov r23.xyzw, r25.xyzw
    mov r24.xyzw, r26.xyzw
    iadd r16.y, r16.y, l(32)
  endloop 
  mov r16.x, l(16)
  mov r17.yz, l(0,0,1.000000,0)
  mov r18.xy, l(0,0,0,0)
  mov r19.xy, l(0,0,0,0)
  mov r21.xy, l(0,0,0,0)
  mov r22.xyz, r23.xyzx
  mov r25.x, r23.w
  mov r25.yz, r24.xxyx
  mov r26.xyz, r24.zwzz
  mov r15.w, l(0)
  loop 
    uge r17.w, r15.w, r14.w
    breakc_nz r17.w
    ushr r17.w, r15.w, l(5)
    iadd r17.w, r15.x, r17.w
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.w, r17.w, l(0), t26.xxxx
    ieq r18.w, r15.y, r15.w
    ubfe r19.w, r15.z, l(0), r17.w
    movc r17.w, r18.w, r19.w, r17.w
    mov r27.xyz, r22.xyzx
    mov r28.xyz, r25.xyzx
    mov r29.xyz, r26.xzyx
    mov r18.w, r17.w
    loop 
      breakc_z r18.w
      firstbit_lo r19.w, r18.w
      ishl r20.x, l(1), r19.w
      not r20.x, r20.x
      and r18.w, r18.w, r20.x
      iadd r19.w, r15.w, r19.w
      imul null, r19.w, r19.w, l(14)
      and r20.x, r29.z, l(255)
      ult r20.y, r20.x, l(32)
      and r20.y, r2.w, r20.y
      if_nz r20.y
        imad r20.x, r20.x, l(20), l(880)
        add r16.yzw, cb1[24].xxyz, cb10[r19.w + 0].xxyz
        store_structured u2.xyzw, cb2[52].x, r20.x, r16.xyzw
      endif 
      iadd r20.y, r29.z, l(1)
      add r16.yzw, r10.xxyz, -cb10[r19.w + 0].xxyz
      and r21.w, l(0x0000ffff), cb10[r19.w + 7].z
      ubfe r22.w, l(6), l(25), cb10[r19.w + 7].z
      imul null, r25.w, r21.w, l(6)
      dp3 r26.w, cb11[r25.w + 0].xyzx, r16.yzwy
      add_sat r26.w, r26.w, cb11[r25.w + 0].w
      dp3 r27.w, cb11[r25.w + 1].xyzx, r16.yzwy
      add_sat r27.w, r27.w, cb11[r25.w + 1].w
      mul r26.w, r26.w, r27.w
      dp3 r27.w, cb11[r25.w + 2].xyzx, r16.yzwy
      add_sat r27.w, r27.w, cb11[r25.w + 2].w
      mul r26.w, r26.w, r27.w
      dp3 r27.w, cb11[r25.w + 3].xyzx, r16.yzwy
      add_sat r27.w, r27.w, cb11[r25.w + 3].w
      mul r26.w, r26.w, r27.w
      dp3 r27.w, cb11[r25.w + 4].xyzx, r16.yzwy
      add_sat r27.w, r27.w, cb11[r25.w + 4].w
      mul r26.w, r26.w, r27.w
      dp3 r27.w, cb11[r25.w + 5].xyzx, r16.yzwy
      add_sat r25.w, r27.w, cb11[r25.w + 5].w
      mul r17.x, r25.w, r26.w
      and r25.w, l(1), cb10[r19.w + 6].x
      movc r30.xy, r25.wwww, r17.xyxx, r17.zxzz
      mov r17.x, cb10[r19.w + 6].x
      mov r32.xy, r30.xyxx
      mov r25.w, l(1)
      loop 
        ige r26.w, r25.w, r22.w
        breakc_nz r26.w
        iadd r26.w, r21.w, r25.w
        imul null, r26.w, r26.w, l(6)
        dp3 r27.w, cb11[r26.w + 0].xyzx, r16.yzwy
        add_sat r27.w, r27.w, cb11[r26.w + 0].w
        mul r27.w, r27.w, r32.x
        dp3 r28.w, cb11[r26.w + 1].xyzx, r16.yzwy
        add_sat r28.w, r28.w, cb11[r26.w + 1].w
        mul r27.w, r27.w, r28.w
        dp3 r28.w, cb11[r26.w + 2].xyzx, r16.yzwy
        add_sat r28.w, r28.w, cb11[r26.w + 2].w
        mul r27.w, r27.w, r28.w
        dp3 r28.w, cb11[r26.w + 3].xyzx, r16.yzwy
        add_sat r28.w, r28.w, cb11[r26.w + 3].w
        mul r27.w, r27.w, r28.w
        dp3 r28.w, cb11[r26.w + 4].xyzx, r16.yzwy
        add_sat r28.w, r28.w, cb11[r26.w + 4].w
        mul r27.w, r27.w, r28.w
        dp3 r28.w, cb11[r26.w + 5].xyzx, r16.yzwy
        add_sat r26.w, r28.w, cb11[r26.w + 5].w
        mul r32.x, r26.w, r27.w
        ushr r28.w, r17.x, l(2)
        ubfe r29.w, l(1), l(2), r17.x
        and r30.z, r28.w, l(2)
        max r30.w, r32.x, r32.y
        mad r26.w, -r27.w, r26.w, l(1.000000)
        mul r26.w, r26.w, r32.y
        movc r20.w, r30.z, r26.w, r30.w
        movc r32.xy, r29.wwww, r32.xyxx, r20.zwzz
        iadd r25.w, r25.w, l(1)
        mov r17.x, r28.w
      endloop 
      add_sat r17.x, -r29.y, r32.y
      mul r20.w, r17.x, cb10[r19.w + 6].y
      lt r21.w, l(0.000000), r20.w
      if_nz r21.w
        and r21.w, r20.y, l(255)
        iadd r22.w, r21.w, l(-1)
        ult r22.w, r22.w, l(32)
        and r22.w, r2.w, r22.w
        if_nz r22.w
          imad r30.xy, r21.wwww, l(20, 20, 0, 0), l(860, 876, 0, 0)
          ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r21.w, cb2[52].x, r30.x, u2.xxxx
          or r21.w, r21.w, l(32)
          store_structured u2.x, cb2[52].x, r30.x, r21.w
          store_structured u2.x, cb2[52].x, r30.y, r20.w
        endif 
        iadd r29.z, r29.z, l(257)
        mad r29.x, r17.x, cb10[r19.w + 6].y, r29.x
        mul r17.x, r20.w, cb10[r19.w + 7].y
        mov r30.x, cb10[r19.w + 7].w
        mov r30.yz, cb10[r19.w + 8].xxyx
        dp3 r20.w, r13.xyzx, r30.xyzx
        dp3 r21.w, r16.yzwy, r30.xyzx
        add r21.w, r21.w, -cb10[r19.w + 8].z
        ge r22.w, r21.w, l(0.000000)
        max r21.w, r9.w, |r21.w|
        movc r21.w, r22.w, r21.w, -r21.w
        max r20.w, -r20.w, l(0.00000010)
        div r20.w, r21.w, r20.w
        min r20.w, |r20.w|, l(131072.000000)
        mov r30.x, cb10[r19.w + 8].w
        mov r30.yz, cb10[r19.w + 9].xxyx
        dp3 r21.w, r13.xyzx, r30.xyzx
        dp3 r22.w, r16.yzwy, r30.xyzx
        add r22.w, r22.w, -cb10[r19.w + 9].z
        ge r25.w, r22.w, l(0.000000)
        max r22.w, r9.w, |r22.w|
        movc r22.w, r25.w, r22.w, -r22.w
        max r21.w, -r21.w, l(0.00000010)
        div r21.w, r22.w, r21.w
        min r20.w, r20.w, |r21.w|
        mov r30.x, cb10[r19.w + 9].w
        mov r30.yz, cb10[r19.w + 10].xxyx
        dp3 r21.w, r13.xyzx, r30.xyzx
        dp3 r22.w, r16.yzwy, r30.xyzx
        add r22.w, r22.w, -cb10[r19.w + 10].z
        ge r25.w, r22.w, l(0.000000)
        max r22.w, r9.w, |r22.w|
        movc r22.w, r25.w, r22.w, -r22.w
        max r21.w, -r21.w, l(0.00000010)
        div r21.w, r22.w, r21.w
        min r20.w, r20.w, |r21.w|
        mov r30.x, cb10[r19.w + 10].w
        mov r30.yz, cb10[r19.w + 11].xxyx
        dp3 r21.w, r13.xyzx, r30.xyzx
        dp3 r22.w, r16.yzwy, r30.xyzx
        add r22.w, r22.w, -cb10[r19.w + 11].z
        ge r25.w, r22.w, l(0.000000)
        max r22.w, r9.w, |r22.w|
        movc r22.w, r25.w, r22.w, -r22.w
        max r21.w, -r21.w, l(0.00000010)
        div r21.w, r22.w, r21.w
        min r20.w, r20.w, |r21.w|
        mov r30.x, cb10[r19.w + 11].w
        mov r30.yz, cb10[r19.w + 12].xxyx
        dp3 r21.w, r13.xyzx, r30.xyzx
        dp3 r22.w, r16.yzwy, r30.xyzx
        add r22.w, r22.w, -cb10[r19.w + 12].z
        ge r25.w, r22.w, l(0.000000)
        max r22.w, r9.w, |r22.w|
        movc r22.w, r25.w, r22.w, -r22.w
        max r21.w, -r21.w, l(0.00000010)
        div r21.w, r22.w, r21.w
        min r20.w, r20.w, |r21.w|
        mov r30.x, cb10[r19.w + 12].w
        mov r30.yz, cb10[r19.w + 13].xxyx
        dp3 r21.w, r13.xyzx, r30.xyzx
        dp3 r22.w, r16.yzwy, r30.xyzx
        add r22.w, r22.w, -cb10[r19.w + 13].z
        ge r25.w, r22.w, l(0.000000)
        max r22.w, r9.w, |r22.w|
        movc r22.w, r25.w, r22.w, -r22.w
        max r21.w, -r21.w, l(0.00000010)
        div r21.w, r22.w, r21.w
        min r20.w, r20.w, |r21.w|
        add r30.x, r16.y, cb10[r19.w + 3].w
        add r30.yz, r16.zzwz, cb10[r19.w + 4].xxyx
        mad r30.xyz, r13.xyzx, r20.wwww, r30.xyzx
        dp3 r21.w, r30.xyzx, r30.xyzx
        sqrt r21.w, r21.w
        div r20.w, r20.w, r21.w
        add r20.w, r20.w, r20.w
        sqrt r20.w, r20.w
        mad r20.w, r6.w, l(5.000000), r20.w
        add r20.w, r20.w, l(-0.844800)
        mov r33.x, cb10[r19.w + 0].w
        mov r33.y, cb10[r19.w + 1].z
        mov r33.z, cb10[r19.w + 2].y
        dp3 r34.x, r30.xyzx, r33.xyzx
        mov r35.xy, cb10[r19.w + 1].xwxx
        mov r35.z, cb10[r19.w + 2].z
        dp3 r34.y, r30.xyzx, r35.xyzx
        mov r36.x, cb10[r19.w + 1].y
        mov r36.yz, cb10[r19.w + 2].xxwx
        dp3 r34.z, r30.xyzx, r36.xyzx
        ubfe r21.w, l(9), l(16), cb10[r19.w + 7].z
        utof r34.w, r21.w
        sample_l_indexable(texturecubearray)(float,float,float,float) r30.xyz, r34.xyzw, t8.xyzw, s2, r20.w
        and r32.xzw, r30.xxyz, l(0x7fffffff, 0, 0x7fffffff, 0x7fffffff)
        ieq r32.xzw, r32.xxzw, l(0x7f800000, 0, 0x7f800000, 0x7f800000)
        or r20.w, r32.z, r32.x
        or r20.w, r32.w, r20.w
        movc r30.xyz, r20.wwww, l(1.000000,1.000000,0,0), r30.xyzx
        dp3 r37.x, r16.yzwy, r33.xyzx
        dp3 r37.y, r16.yzwy, r35.xyzx
        dp3 r37.z, r16.yzwy, r36.xyzx
        mad_sat r16.yzw, r37.xxyz, cb10[r19.w + 3].xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
        mul r37.xy, r16.yzyy, cb10[r19.w + 4].zwzz
        mul r37.z, r16.w, cb10[r19.w + 5].x
        add r16.yzw, r37.xxyz, cb10[r19.w + 5].yyzw
        dp3 r34.x, r11.xyzx, r33.xyzx
        dp3 r34.y, r11.xyzx, r35.xyzx
        dp3 r34.z, r11.xyzx, r36.xyzx
        lt r32.xzw, l(0.000000, 0.000000, 0.000000, 0.000000), r34.xxyz
        movc r18.z, r32.x, l(0), l(0.500000)
        add r33.xyz, r16.yzwy, r18.xyzx
        sample_l_indexable(texture3d)(float,float,float,float) r33.xyz, r33.xyzx, t17.xyzw, s4, l(0.000000)
        mul r35.xyz, r34.xyzx, r34.xyzx
        mul r35.xyz, r17.xxxx, r35.xyzx
        movc r19.z, r32.z, l(0), l(0.500000)
        add r36.xyz, r16.yzwy, r19.xyzx
        sample_l_indexable(texture3d)(float,float,float,float) r36.xyz, r36.xyzx, t18.xyzw, s4, l(0.000000)
        mul r36.xyz, r35.yyyy, r36.xyzx
        mad r33.xyz, r33.xyzx, r35.xxxx, r36.xyzx
        movc r21.z, r32.w, l(0), l(0.500000)
        add r16.yzw, r16.yyzw, r21.xxyz
        sample_l_indexable(texture3d)(float,float,float,float) r16.yzw, r16.yzwy, t19.wxyz, s4, l(0.000000)
        mad r16.yzw, r16.yyzw, r35.zzzz, r33.xxyz
        sample_l_indexable(texturecubearray)(float,float,float,float) r32.xzw, r34.xyzw, t8.xwyz, s2, l(6.000000)
        and r33.xyz, r32.xzwx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
        ieq r33.xyz, r33.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
        or r18.z, r33.y, r33.x
        or r18.z, r33.z, r18.z
        movc r32.xzw, r18.zzzz, l(1.000000,0,1.000000,0), r32.xxzw
        mul r33.xyz, r16.yzwy, r32.xzwx
        dp3 r18.z, r33.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
        mad r27.xyz, r16.yzwy, r32.xzwx, r27.xyzx
        mul r16.y, r10.w, r18.z
        mul r30.xyz, r17.xxxx, r30.xyzx
        dp3 r16.z, r30.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
        mad r16.z, r10.w, r18.z, r16.z
        div r16.y, r16.y, r16.z
        mad r28.xyz, r30.xyzx, r16.yyyy, r28.xyzx
      else 
        mov r20.x, r29.x
        mov r29.xz, r20.xxyx
      endif 
    endloop 
    mov r22.xyz, r27.xyzx
    mov r25.xyz, r28.xyzx
    mov r26.xy, r29.xzxx
    iadd r15.w, r15.w, l(32)
  endloop 
  ge r6.w, r24.z, l(1.000000)
  and r9.w, r24.w, l(0x0000ff00)
  bfi r9.w, l(8), l(0), r26.y, r9.w
  movc r12.w, r6.w, r9.w, r26.y
  max r6.w, r26.x, l(1.000000)
  rcp r6.w, r6.w
  mov_sat r26.x, r26.x
  mul r15.xyz, r6.wwww, r22.xyzx
  mul r31.xyz, r6.wwww, r25.xyzx
  lt r9.w, r26.x, l(0.990000)
  if_nz r9.w
    iadd r12.w, r12.w, l(256)
    add r9.w, -r26.x, l(1.000000)
    mul r10.w, r9.w, cb2[19].x
    add r16.xyz, r10.xyzx, -cb2[35].xyzx
    mul r17.x, r16.x, cb2[35].w
    mul r17.yz, r16.yyzy, cb2[36].xxyx
    add_sat r16.xyz, r17.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    mul r17.xy, r16.xyxx, cb2[36].zwzz
    mul r17.z, r16.z, cb2[37].x
    add r16.xyz, r17.xyzx, cb2[37].yzwy
    lt r17.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
    movc r17.xyz, r17.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
    mov r17.w, l(0)
    add r18.xyz, r16.xyzx, r17.wwxw
    sample_l_indexable(texture3d)(float,float,float,float) r18.xyz, r18.xyzx, t17.xyzw, s4, l(0.000000)
    mul r19.xyz, r11.xyzx, r11.xyzx
    mul r19.xyz, r10.wwww, r19.xyzx
    add r20.xyz, r16.xyzx, r17.wwyw
    sample_l_indexable(texture3d)(float,float,float,float) r20.xyz, r20.xyzx, t18.xyzw, s4, l(0.000000)
    mul r20.xyz, r19.yyyy, r20.xyzx
    mad r18.xyz, r18.xyzx, r19.xxxx, r20.xyzx
    add r16.xyz, r16.xyzx, r17.wwzw
    sample_l_indexable(texture3d)(float,float,float,float) r16.xyz, r16.xyzx, t19.xyzw, s4, l(0.000000)
    mad r16.xyz, r16.xyzx, r19.zzzz, r18.xyzx
    mov r11.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r17.xyz, r11.xyzw, t8.xyzw, s2, l(6.000000)
    mul r16.xyz, r16.xyzx, r17.xyzx
    dp3 r10.w, r16.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
    mad r15.xyz, r22.xyzx, r6.wwww, r16.xyzx
    mov r13.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r13.xyz, r13.xyzw, t8.xyzw, s2, r8.w
    mad r6.w, cb2[19].x, r9.w, -r10.w
    mad r6.w, r2.y, r6.w, r10.w
    mad r31.xyz, r13.xyzx, r6.wwww, r31.xyzx
  endif 
else 
  mov r15.xyz, l(0,0,0,0)
endif 
add r1.w, -r1.w, l(1.000000)
mad r13.xyz, r31.xyzx, r1.wwww, r14.xyzx
add r1.w, r3.z, r2.x
log r1.w, |r1.w|
mul r1.w, r1.w, r2.z
exp r1.w, r1.w
add r1.w, r3.z, r1.w
add_sat r1.w, r1.w, l(-1.000000)
mul r1.w, r4.y, r1.w
mul r14.xyz, r3.zzzz, r15.xyzx
mad r15.xy, r2.xyxx, l(0.984375, 0.984375, 0.000000, 0.000000), l(0.00781250, 0.00781250, 0.000000, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r15.xy, r15.xyxx, t5.xyzw, s2, l(0.000000)
mul r13.xyz, r1.wwww, r13.xyzx
mul r15.xzw, r15.xxxx, r13.xxyz
mul r13.xyz, r15.yyyy, r13.xyzx
if_nz r2.w
  mov r16.x, l(3)
  mov r16.yzw, cb1[24].xxyz
  store_structured u2.xyzw, cb2[52].x, l(112), r16.xyzw
endif 
lt r1.w, l(0.000000), r4.w
if_nz r1.w
  if_nz r2.w
    ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r1.w, cb2[52].x, l(112), u2.xxxx
    or r1.w, r1.w, l(4)
    store_structured u2.x, cb2[52].x, l(112), r1.w
    store_structured u2.x, cb2[52].x, l(128), r7.w
  endif 
  lt r1.w, l(0.000000), r7.w
  if_nz r1.w
    sqrt r1.w, r2.z
    mad r1.w, r1.w, l(0.500000), l(0.500000)
    mul r1.w, r1.w, r1.w
    mul r2.y, r1.w, l(0.500000)
    mad r1.w, -r1.w, l(0.500000), l(1.000000)
    mad r3.z, r2.x, r1.w, r2.y
    mul r1.w, r1.w, r3.z
    mul r2.y, r2.y, r3.z
    mul r3.z, r0.w, cb2[18].w
    mul r3.z, r4.w, r3.z
    if_nz cb2[23].x
      add r16.xyz, r10.xyzx, cb1[24].xyzx
      mov r16.w, l(1.000000)
      dp4 r4.y, cb2[24].xyzw, r16.xyzw
      dp4 r6.w, cb2[25].xyzw, r16.xyzw
      frc r16.x, r4.y
      frc r16.y, r6.w
      iadd r4.y, l(-1), cb2[23].x
      utof r16.z, r4.y
      sample_l_indexable(texture2darray)(float,float,float,float) r16.xyz, r16.xyzx, t20.xyzw, s2, l(0.000000)
      add r16.xyz, r16.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
      mad r16.xyz, cb2[23].yyyy, r16.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      mul r16.xyz, r16.xyzx, cb2[18].xyzx
    else 
      mov r16.xyz, cb2[18].xyzx
    endif 
    ushr r4.y, cb2[53].x, l(16)
    ult r6.w, l(0), r4.y
    and r6.w, r1.z, r6.w
    if_nz r6.w
      iadd r4.y, r4.y, cb2[0].x
      imad r4.y, r4.y, l(15), l(-15)
      mad r6.w, |r4.z|, l(-0.200000), l(0.400000)
      mad r17.xyz, r11.xyzx, r6.wwww, r10.xyzx
      mov r18.xyz, cb9[r4.y + 4].yzwy
      mov r18.w, cb9[r4.y + 5].x
      mov r17.w, l(1.000000)
      dp4 r18.x, r18.xyzw, r17.xyzw
      mov r19.xyz, cb9[r4.y + 5].yzwy
      mov r19.w, cb9[r4.y + 6].x
      dp4 r18.y, r19.xyzw, r17.xyzw
      mad r18.xy, r18.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      add r19.x, r18.x, cb9[r4.y + 9].w
      add r19.y, r18.y, cb9[r4.y + 10].x
      mul r18.xy, r19.xyxx, cb9[r4.y + 9].yzyy
      div r18.zw, cb9[r4.y + 3].yyyy, cb9[r4.y + 8].yyyw
      add r19.xy, -r18.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
      ge r19.xy, r18.xyxx, r19.xyxx
      ge r18.zw, r18.zzzw, r18.xxxy
      or r18.zw, r18.zzzw, r19.xxxy
      or r6.w, r18.w, r18.z
      if_z r6.w
        mov r19.xyz, cb9[r4.y + 6].yzwy
        mov r19.w, cb9[r4.y + 7].x
        dp4 r6.w, r19.xyzw, r17.xyzw
        mov_sat r18.xy, r18.xyxx
        mad r17.x, r18.x, cb9[r4.y + 8].y, cb9[r4.y + 8].z
        mad r17.y, r18.y, cb9[r4.y + 8].w, cb9[r4.y + 9].x
        add r6.w, r6.w, cb9[r4.y + 10].y
        div r6.w, r6.w, cb9[r4.y + 10].z
        max r6.w, r6.w, l(0.00006104)
        and r8.w, l(0x0000ffff), cb9[r4.y + 1].w
        if_nz cb2[58].y
          mov r18.x, -r4.x
          utof r19.z, r8.w
          mov r18.y, r5.x
          mov r18.z, r4.x
          mov r9.w, l(0)
          mov r10.w, l(0)
          loop 
            ige r11.w, r10.w, l(8)
            breakc_nz r11.w
            dp2 r20.x, icb[r10.w + 0].yxyy, r18.xyxx
            dp2 r20.y, icb[r10.w + 0].yxyy, r18.yzyy
            mad r19.xy, r20.xyxx, cb9[r4.y + 3].yyyy, r17.xyxx
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r11.w, r19.xyzx, t9.xxxx, s13, r6.w
            mad r9.w, r11.w, l(0.125000), r9.w
            iadd r10.w, r10.w, l(1)
          endloop 
        else 
          utof r17.z, r8.w
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r9.w, r17.xyzx, t9.xxxx, s13, r6.w
        endif 
        mul r4.y, r9.w, r9.w
        mul r4.y, r9.w, r4.y
      else 
        mov r4.y, l(1.000000)
      endif 
      mul r7.w, r4.y, r7.w
    else 
      and r4.y, cb2[53].x, l(0x0000ffff)
      ult r6.w, l(0), r4.y
      not r1.z, r1.z
      and r1.z, r1.z, r6.w
      if_nz r1.z
        iadd r1.z, r4.y, cb2[0].x
        imad r1.z, r1.z, l(15), l(-15)
        mad r4.y, |r4.z|, l(-0.200000), l(0.400000)
        mad r17.xyz, r11.xyzx, r4.yyyy, r10.xyzx
        mov r18.xyz, cb9[r1.z + 4].yzwy
        mov r18.w, cb9[r1.z + 5].x
        mov r17.w, l(1.000000)
        dp4 r18.x, r18.xyzw, r17.xyzw
        mov r19.xyz, cb9[r1.z + 5].yzwy
        mov r19.w, cb9[r1.z + 6].x
        dp4 r18.y, r19.xyzw, r17.xyzw
        mad r18.xy, r18.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
        add r19.x, r18.x, cb9[r1.z + 9].w
        add r19.y, r18.y, cb9[r1.z + 10].x
        mul r18.xy, r19.xyxx, cb9[r1.z + 9].yzyy
        div r18.zw, cb9[r1.z + 3].yyyy, cb9[r1.z + 8].yyyw
        add r19.xy, -r18.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
        ge r19.xy, r18.xyxx, r19.xyxx
        ge r18.zw, r18.zzzw, r18.xxxy
        or r18.zw, r18.zzzw, r19.xxxy
        or r4.y, r18.w, r18.z
        if_z r4.y
          mov r19.xyz, cb9[r1.z + 6].yzwy
          mov r19.w, cb9[r1.z + 7].x
          dp4 r4.y, r19.xyzw, r17.xyzw
          mov_sat r18.xy, r18.xyxx
          mad r17.x, r18.x, cb9[r1.z + 8].y, cb9[r1.z + 8].z
          mad r17.y, r18.y, cb9[r1.z + 8].w, cb9[r1.z + 9].x
          add r4.y, r4.y, cb9[r1.z + 10].y
          div r4.y, r4.y, cb9[r1.z + 10].z
          max r4.y, r4.y, l(0.00006104)
          and r6.w, l(0x0000ffff), cb9[r1.z + 1].w
          if_nz cb2[58].y
            mov r18.x, -r4.x
            utof r19.z, r6.w
            mov r18.y, r5.x
            mov r18.z, r4.x
            mov r4.x, l(0)
            mov r5.x, l(0)
            loop 
              ige r8.w, r5.x, l(8)
              breakc_nz r8.w
              dp2 r20.x, icb[r5.x + 0].yxyy, r18.xyxx
              dp2 r20.y, icb[r5.x + 0].yxyy, r18.yzyy
              mad r19.xy, r20.xyxx, cb9[r1.z + 3].yyyy, r17.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r8.w, r19.xyzx, t9.xxxx, s13, r4.y
              mad r4.x, r8.w, l(0.125000), r4.x
              iadd r5.x, r5.x, l(1)
            endloop 
          else 
            utof r17.z, r6.w
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r4.x, r17.xyzx, t9.xxxx, s13, r4.y
          endif 
          mul r1.z, r4.x, r4.x
          mul r1.z, r4.x, r1.z
        else 
          mov r1.z, l(1.000000)
        endif 
        mul r7.w, r1.z, r7.w
      endif 
    endif 
    mad r1.z, -r2.x, l(0.500000), l(1.000000)
    mad r1.z, -r4.w, r1.z, l(1.000000)
    mul r1.z, r1.z, r1.z
    mad r1.z, -r1.z, l(0.620000), l(0.620000)
    add r1.z, -r4.w, r1.z
    mad r1.z, r2.z, r1.z, r4.w
    mul r1.z, r7.w, r1.z
    lt r2.x, l(0.000000), r4.z
    mad r4.xyz, r1.zzzz, r16.xyzx, r14.xyzx
    mad r17.xyz, -r10.xyzx, r0.zzzz, cb2[17].xyzx
    dp3 r0.z, r17.xyzx, r17.xyzx
    rsq r0.z, r0.z
    mul r17.xyz, r0.zzzz, r17.xyzx
    dp3 r0.z, r17.xyzx, r12.xyzx
    dp3 r1.z, r11.xyzx, r17.xyzx
    mad r0.w, |r1.z|, r0.w, -|r1.z|
    mad r0.w, |r1.z|, r0.w, l(1.000000)
    mad r1.z, r4.w, r1.w, r2.y
    mul r0.w, r0.w, r0.w
    mul r0.w, r1.z, r0.w
    rcp r0.w, r0.w
    mul r0.w, r3.z, r0.w
    mul r0.w, r0.w, r7.w
    mul r0.w, r0.w, l(0.250000)
    mad r11.xyz, r0.wwww, r16.xyzx, r13.xyzx
    add_sat r0.z, -r0.z, l(1.000000)
    mul r1.z, r0.z, r0.z
    mul r1.z, r1.z, r1.z
    mul r0.z, r0.z, r1.z
    mul r0.z, r0.z, r0.w
    mad r12.xyz, r0.zzzz, r16.xyzx, r15.xzwx
    movc r14.xyz, r2.xxxx, r4.xyzx, r14.xyzx
    movc r15.xzw, r2.xxxx, r12.xxyz, r15.xxzw
    movc r13.xyz, r2.xxxx, r11.xyzx, r13.xyzx
    if_nz r2.w
      ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r0.z, cb2[52].x, l(112), u2.xxxx
      or r0.z, r0.z, l(8)
      store_structured u2.x, cb2[52].x, l(112), r0.z
      store_structured u2.x, cb2[52].x, l(132), r7.w
    endif 
    mov r0.z, l(0x00010101)
  else 
    mov r0.z, l(257)
  endif 
else 
  mov r0.z, l(1)
endif 
mad r3.xyz, r3.xwyx, l(1.000000, 3.000000, 2.000000, 0.000000), l(0.000000, 0.500000, -1.000000, 0.000000)
ftou r0.w, r3.y
mad r2.xyz, r6.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r1.z, r2.x
ieq r1.z, r0.w, r1.z
movc r1.zw, r1.zzzz, r2.yyyz, l(0,0,-1.000000,0)
mad r2.xyz, r7.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r2.x, r2.x
ieq r2.x, r0.w, r2.x
movc r2.xy, r2.xxxx, r2.yzyy, l(-1.000000,0,0,0)
mad r4.xyz, r8.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r2.z, r4.x
ieq r2.z, r0.w, r2.z
movc r4.xy, r2.zzzz, r4.yzyy, l(-1.000000,0,0,0)
mad r6.xyz, r9.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r2.z, r6.x
ieq r0.w, r0.w, r2.z
movc r4.zw, r0.wwww, r6.yyyz, l(0,0,-1.000000,0)
mov r6.x, r1.z
mov r6.y, r2.x
mov r6.zw, r4.xxxz
add r6.xyzw, -r3.xxxx, r6.xyzw
ge r6.xyzw, |r6.xyzw|, l(0.00902149, 0.00902149, 0.00902149, 0.00902149)
movc r6.xyzw, r6.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
add r0.w, r6.y, r6.x
add r0.w, r6.z, r0.w
add r0.w, r6.w, r0.w
mul r1.z, r2.y, r6.y
mad r1.z, r6.x, r1.w, r1.z
mad r1.z, r6.z, r4.y, r1.z
mad r1.z, r6.w, r4.w, r1.z
div r3.w, r1.z, r0.w
ge r0.w, l(0.000000), r0.w
movc r3.yz, r0.wwww, l(0,0,0,0), r3.zzwz
and r1.zw, r1.xxxy, l(0, 0, 1, 1)
ieq r0.w, r1.w, r1.z
movc r2.xyz, r0.wwww, r3.xyzx, r3.xzyx
mad r0.w, -r2.z, l(0.500000), r2.x
add r3.y, r0.w, r2.z
mad r3.z, -r2.y, l(0.500000), r0.w
add r3.x, r2.y, r3.z
add r2.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r2.xyz, r2.xyzx, r15.xzwx
mad r2.xyz, r13.xyzx, r3.xyzx, r2.xyzx
mad r2.xyz, r14.xyzx, r5.yzwy, r2.xyzx
lt r0.w, l(0.000000), cb2[9].z
if_nz r0.w
  dp3 r0.w, r10.xyzx, r10.xyzx
  rsq r1.z, r0.w
  mul r3.xyz, r1.zzzz, r10.xyzx
  sqrt r0.w, r0.w
  lt r1.z, l(0.000000), cb2[13].w
  if_nz r1.z
    mad r1.zw, r0.wwww, cb2[15].xxxy, cb2[14].zzzw
    mul r1.zw, r1.zzzw, cb2[16].xxxy
    lt r3.w, l(0.010000), |r10.z|
    mul r4.xy, r10.zzzz, cb2[15].zwzz
    mul r4.zw, r4.xxxy, l(0.000000, 0.000000, -1.442695, -1.442695)
    exp r4.zw, r4.zzzw
    add r4.zw, -r4.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    div r4.xy, r4.zwzz, r4.xyxx
    mul r4.xy, r1.zwzz, r4.xyxx
    movc r1.zw, r3.wwww, r4.xxxy, r1.zzzw
    mul r4.xyz, r1.zzzz, cb2[12].xyzx
    exp r4.xyz, r4.xyzx
    mul r5.xyz, r1.wwww, cb2[12].xyzx
    exp r5.xyz, r5.xyzx
    add r5.xyz, -r4.xyzx, r5.xyzx
    mad r4.xyz, cb2[13].wwww, r5.xyzx, r4.xyzx
  else 
    mad r1.z, r0.w, cb2[15].x, cb2[14].z
    mul r1.z, r1.z, cb2[16].x
    lt r1.w, l(0.010000), |r10.z|
    mul r3.w, r10.z, cb2[15].z
    mul r4.w, r3.w, l(-1.442695)
    exp r4.w, r4.w
    add r4.w, -r4.w, l(1.000000)
    div r3.w, r4.w, r3.w
    mul r3.w, r1.z, r3.w
    movc r1.z, r1.w, r3.w, r1.z
    mul r5.xyz, r1.zzzz, cb2[12].xyzx
    exp r4.xyz, r5.xyzx
  endif 
  mad r4.xyz, r4.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r4.xyz, r4.xyzx, -cb2[9].zzzz
  dp3 r1.z, cb2[7].yzwy, -r3.xyzx
  mad r1.w, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r3.x, cb2[8].w, -r1.z, l(1.000000)
  mul r3.x, r3.x, r3.x
  mul r3.x, r3.x, l(12.566371)
  div r1.w, r1.w, r3.x
  add r0.w, r0.w, -cb2[10].w
  mul_sat r0.w, r0.w, cb2[11].w
  mul r0.w, r0.w, r1.w
  mov_sat r1.z, r1.z
  mad r1.z, r1.z, r1.z, l(1.000000)
  mad r1.z, r1.z, l(0.05968310), l(-1.000000)
  mad r1.z, cb2[8].z, r1.z, l(1.000000)
  mul r3.xyz, r0.wwww, cb2[11].xyzx
  mad r3.xyz, r1.zzzz, cb2[10].xyzx, r3.xyzx
  mul r3.xyz, r3.xyzx, cb2[9].wwww
  add r5.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r3.xyz, r3.xyzx, r5.xyzx
  mad r3.xyz, r2.xyzx, r4.xyzx, r3.xyzx
else 
  mul r0.w, r10.z, cb2[6].x
  mad r1.z, cb2[6].x, r10.z, cb2[5].x
  lt r1.w, |r0.w|, l(0.000100)
  min r3.w, r1.z, l(64.000000)
  mul r3.w, r3.w, l(1.442695)
  exp r3.w, r3.w
  mov_sat r4.x, cb2[6].z
  lt r4.y, r1.z, l(0.000000)
  add r1.z, r1.z, l(1.000000)
  movc r1.z, r4.y, r3.w, r1.z
  add r1.z, r1.z, -cb2[6].z
  movc r0.w, r1.w, l(1.000000), r0.w
  div r0.w, r1.z, r0.w
  movc r0.w, r1.w, r4.x, r0.w
  mul r0.w, r0.w, cb2[5].z
  dp3 r1.z, r10.xyzx, r10.xyzx
  sqrt r1.w, r1.z
  mad r0.w, r0.w, r1.w, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  rsq r1.z, r1.z
  mul r4.xyz, r1.zzzz, r10.xyzx
  dp3 r1.z, cb2[7].yzwy, r4.xyzx
  mad_sat r1.z, cb2[8].y, r1.z, cb2[8].x
  add r4.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r4.xyzw, r1.zzzz, r4.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r4.w
  add r4.xyz, -r2.xyzx, r4.xyzx
  mad r3.xyz, r0.wwww, r4.xyzx, r2.xyzx
endif 
mul r2.xyz, r3.xyzx, cb1[85].yyyy
ge r3.xyz, r2.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r2.xyz, r2.xyzx, r3.xyzx
min r2.xyz, r2.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
ilt r0.w, l(0), cb2[55].w
and r3.xyzw, cb2[55].wwww, l(32, 3, 64, 12)
ine r1.zw, r3.xxxz, l(0, 0, 0, 0)
ieq r3.xy, r3.ywyy, l(1, 0, 0, 0)
and r1.zw, r1.zzzw, r3.xxxy
and r3.xy, r1.zwzz, l(0x3e4ccccd, 0x3e4ccccd, 0, 0)
and r1.z, cb2[55].w, l(16)
ine r1.w, r1.z, l(0)
ieq r1.z, r1.z, l(0)
and r1.z, r1.z, r1.w
and r3.z, r1.z, l(0x3e4ccccd)
mad r3.xyz, r3.xyzx, cb1[85].xxxx, -r2.xyzx
mad r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r2.xyzx
movc r2.xyz, r0.wwww, r3.xyzx, r2.xyzx
if_nz cb2[52].y
  if_nz cb2[53].y
    switch cb2[53].y
      case l(1)
      mov r0.w, l(1)
      break 
      case l(2)
      ubfe r0.w, l(1), l(8), r0.z
      break 
      case l(3)
      ushr r0.w, r0.z, l(16)
      break 
      case l(4)
      and r0.w, r12.w, l(255)
      break 
      case l(5)
      ubfe r0.w, l(8), l(8), r12.w
      break 
      default 
      mov r0.w, l(0)
      break 
    endswitch 
    utof r0.w, r0.w
    mul r0.w, r0.w, cb2[53].z
    mad r3.xyz, r0.wwww, l(0.500000, 0.500000, 0.500000, 0.000000), -r2.xyzx
    mad r2.xyz, cb2[53].wwww, r3.xyzx, r2.xyzx
  endif 
endif 
store_uav_typed u0.xyzw, r1.xyyy, r2.xyzx
if_nz r2.w
  add r1.xyz, r10.xyzx, cb1[24].xyzx
  mov r1.w, l(1)
  store_structured u2.xyzw, cb2[52].x, l(92), r1.xyzw
  and r0.w, r12.w, l(255)
  store_structured u2.x, cb2[52].x, l(108), r0.w
endif 
if_nz cb2[52].y
  atomic_iadd g1, l(0), l(1)
  ubfe r0.w, l(1), l(8), r0.z
  atomic_iadd g1, l(4), r0.w
  ushr r0.z, r0.z, l(16)
  atomic_iadd g1, l(8), r0.z
  and r1.x, r12.w, l(255)
  atomic_iadd g1, l(12), r1.x
  ubfe r1.y, l(8), l(8), r12.w
  atomic_iadd g1, l(16), r1.y
  atomic_umax g2, l(0), l(1)
  atomic_umax g2, l(4), r0.w
  atomic_umax g2, l(8), r0.z
  atomic_umax g2, l(12), r1.x
  atomic_umax g2, l(16), r1.y
  imm_atomic_iadd r1.x, g0, l(0), l(1)
  ieq r0.z, r1.x, l(63)
  if_nz r0.z
    ld_raw r1.xyzw, l(0), g1.xyzw
    mov r2.xz, cb2[52].xxxx
    mov r2.yw, l(0,40,0,44)
    atomic_iadd u2, r2.xyxx, r1.x
    atomic_iadd u2, r2.zwzz, r1.y
    mov r2.xz, cb2[52].xxxx
    mov r2.yw, l(0,48,0,52)
    atomic_iadd u2, r2.xyxx, r1.z
    atomic_iadd u2, r2.zwzz, r1.w
    ld_raw r0.z, l(16), g1.xxxx
    mov r1.xz, cb2[52].xxxx
    mov r1.yw, l(0,56,0,0)
    atomic_iadd u2, r1.xyxx, r0.z
    ld_raw r2.xyzw, l(0), g2.xyzw
    atomic_umax u2, r1.zwzz, r2.x
    mov r1.xz, cb2[52].xxxx
    mov r1.yw, l(0,4,0,8)
    atomic_umax u2, r1.xyxx, r2.y
    atomic_umax u2, r1.zwzz, r2.z
    mov r1.xz, cb2[52].xxxx
    mov r1.yw, l(0,12,0,16)
    atomic_umax u2, r1.xyxx, r2.w
    ld_raw r0.z, l(16), g2.xxxx
    atomic_umax u2, r1.zwzz, r0.z
    ieq r0.xy, r0.xyxx, cb2[52].zwzz
    and r0.x, r0.y, r0.x
    if_nz r0.x
      store_structured u2.xyzw, cb2[52].x, l(20), r2.xyzw
      store_structured u2.x, cb2[52].x, l(36), r0.z
    endif 
  endif 
endif 
ret 
// Approximately 2220 instruction slots used
