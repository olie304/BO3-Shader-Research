//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:23:31 2021
//
//
// Buffer Definitions: 
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4 [unused]
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4 [unused]
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4 [unused]
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// cbuffer LightingPackCBuffer
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } lightConstantsCB[273];           // Offset:    0 Size: 65520
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for gPermutedTilingBuffer
// {
//
//   struct PermutedTilingBuffer
//   {
//       
//       uint2 data;                    // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:     8
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// samplerPointClamp                 sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// GBufferDiffuseColor               texture  float4          2d             t0      1 
// GBufferNormalAndGloss             texture  float4          2d             t1      1 
// GBufferSpecularColorAndOcclusion    texture  float4          2d             t2      1 
// GBufferDepth                      texture   float          2d             t4      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// gDownsampledScene                 texture  float4          2d            t21      1 
// gMotionVectors                    texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// gPermutedTilingBuffer             texture  struct         r/o            t25      1 
// gSSAOTexture                      texture   float          2d            t27      1 
// gSSAODepthTexture                 texture   float          2d            t28      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// litBuffer                             UAV  float3          2d             u0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
// LightingPackCBuffer               cbuffer      NA          NA            cb9      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB1[86], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_constantbuffer CB9[4095], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s4, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_structured t25, 8
dcl_resource_texture2d (float,float,float,float) t27
dcl_resource_texture2d (float,float,float,float) t28
dcl_resource_texture2darray (float,float,float,float) t31
dcl_uav_typed_texture2d (float,float,float,float) u0
dcl_input vThreadGroupID.x
dcl_input vThreadIDInGroup.xy
dcl_temps 25
dcl_thread_group 8, 8, 1
imad r0.x, cb2[57].x, l(37), vThreadGroupID.x
ld_structured_indexable(structured_buffer, stride=8)(mixed,mixed,mixed,mixed) r0.xy, r0.x, l(0), t25.xyxx
and r0.xy, r0.xyxx, l(4095, 4095, 0, 0)
imad r0.xy, r0.xyxx, l(8, 8, 0, 0), vThreadIDInGroup.xyxx
mov r0.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r1.xyzw, r0.xyww, t1.xyzw
ftou r2.xy, cb1[44].xyxx
ult r2.xy, r0.xyxx, r2.xyxx
and r2.x, r2.y, r2.x
lt r2.y, l(0.000000), r1.z
and r2.x, r2.y, r2.x
if_z r2.x
  ret 
endif 
ge r2.y, r1.z, l(0.500000)
ld_indexable(texture2d)(float,float,float,float) r2.z, r0.xyww, t4.yzxw
ld_indexable(texture2d)(float,float,float,float) r3.xyz, r0.xyww, t0.xyzw
ld_indexable(texture2d)(float,float,float,float) r4.xyzw, r0.xyww, t2.xyzw
ld_aoffimmi_indexable(-1,0,0)(texture2d)(float,float,float,float) r5.xyz, r0.xyww, t2.xywz
ld_aoffimmi_indexable(0,-1,0)(texture2d)(float,float,float,float) r6.xyz, r0.xyww, t2.xywz
ld_aoffimmi_indexable(1,0,0)(texture2d)(float,float,float,float) r7.xyz, r0.xyww, t2.xywz
ld_aoffimmi_indexable(0,1,0)(texture2d)(float,float,float,float) r8.xyz, r0.xyzw, t2.xywz
utof r0.zw, r0.xxxy
add r9.xy, r0.zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
ge r10.x, r2.z, l(0.984375)
mul r2.w, r2.z, l(1.01587307)
mad r2.z, r2.z, l(64.000000), l(-63.000000)
movc r2.z, r10.x, r2.z, r2.w
max r2.z, r2.z, l(0.00000001)
rcp r10.y, r2.z
and r2.xz, r2.xxxx, r10.xxyx
add r9.zw, r9.xxxy, -cb1[71].xxxy
mul r9.zw, r9.zzzw, cb1[44].zzzw
mad r9.zw, r9.zzzw, l(0.000000, 0.000000, 2.000000, -2.000000), l(0.000000, 0.000000, -1.000000, 1.000000)
mul r10.x, r9.z, cb1[12].x
mul r10.y, r9.w, cb1[13].y
mov r10.z, l(1.000000)
mul r10.xyz, r2.zzzz, r10.xyzx
mul r11.xyz, r10.yyyy, cb1[17].xyzx
mad r10.xyw, r10.xxxx, cb1[16].xyxz, r11.xyxz
mad r10.xyz, r10.zzzz, cb1[18].xyzx, r10.xywx
mad r1.w, r1.w, l(3.000000), l(0.500000)
ftou r1.w, r1.w
mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r1.xy, r1.xyxx, l(0.850000, 0.850000, 0.000000, 0.000000)
dp2 r2.w, r1.xyxx, r1.xyxx
add r11.zw, -r2.wwww, l(0.000000, 0.000000, 2.000000, 1.000000)
sqrt r2.w, r11.z
mul r11.xy, r1.xyxx, r2.wwww
and r12.xyzw, r1.wwww, l(2, 1, 2, 1)
movc r12.xyzw, r12.zwxy, l(-1.000000,-1.000000,1,1), l(1.000000,1.000000,0,0)
xor r1.x, r12.w, r12.z
movc r12.z, r1.x, l(-1.000000), l(1.000000)
mul r1.xyw, r12.xyxz, l(-1.000000, 0.000000, 0.000000, 1.000000)
mul r13.xyz, r12.xyzx, l(1.000000, -2.000000, 1.000000, 0.000000)
mul r11.xyz, r11.xywx, l(0.40824831, 0.70710677, 0.57735026, 0.000000)
mul r1.xyw, r1.xyxw, r11.yyyy
mad r1.xyw, r13.xyxz, r11.xxxx, r1.xyxw
mad r11.xyz, r12.xyzx, r11.zzzz, r1.xywx
movc r1.x, r2.y, l(-0.500000), l(-0.00146628)
add r1.x, r1.x, r1.z
mul_sat r1.y, r1.x, l(2.00982332)
dp3 r1.z, -r10.xyzx, -r10.xyzx
rsq r1.z, r1.z
mul r12.xyz, r1.zzzz, -r10.xyzx
dp2 r0.z, r0.zwzz, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r0.z, r0.z
mul r0.z, r0.z, l(52.982918)
frc r0.z, r0.z
mad r0.z, r0.z, l(6.28318548), cb1[70].w
sincos r13.x, r14.x, r0.z
dp3_sat r1.x, r11.xyzx, r12.xyzx
dp3 r0.z, -r12.xyzx, r11.xyzx
add r0.z, r0.z, r0.z
mad r15.xyz, r11.xyzx, -r0.zzzz, -r12.xyzx
mul r0.z, r1.y, l(17.000000)
exp r0.z, r0.z
add r0.z, r0.z, l(2.000000)
div r0.z, l(2.000000), r0.z
sqrt r0.w, r0.z
mul r2.yw, r9.xxxy, cb1[44].zzzw
sample_l_indexable(texture2d)(float,float,float,float) r1.w, r2.ywyy, t27.yzwx, s4, l(0.000000)
mul r2.y, r1.w, r4.z
lt r2.w, l(0.83333331), r1.y
lt r3.w, l(60.000000), r2.z
and r2.w, r2.w, r3.w
if_nz r2.w
  mul r9.xyz, r10.yyyy, cb1[9].xywx
  mad r9.xyz, r10.xxxx, cb1[8].xywx, r9.xyzx
  mad r9.xyz, r10.zzzz, cb1[10].xywx, r9.xyzx
  add r9.xyz, r9.xyzx, cb1[11].xywx
  mad r13.yzw, r15.xxyz, l(0.000000, 2000.000000, 2000.000000, 2000.000000), r10.xxyz
  mul r14.yzw, r13.zzzz, cb1[9].xxyw
  mad r14.yzw, r13.yyyy, cb1[8].xxyw, r14.yyzw
  mad r13.yzw, r13.wwww, cb1[10].xxyw, r14.yyzw
  add r13.yzw, r13.yyzw, cb1[11].xxyw
  ge r2.w, r13.w, r9.z
  if_nz r2.w
    mul r14.yz, cb1[44].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000)
    rcp r16.z, r9.z
    mul r16.xy, r9.xyxx, r16.zzzz
    rcp r17.z, r13.w
    mul r17.xy, r13.yzyy, r17.zzzz
    lt r9.xy, l(1.000000, 1.000000, 0.000000, 0.000000), r17.xyxx
    mad r18.xyzw, r13.yyzz, r17.zzzz, l(-1.000000, 1.000000, -1.000000, 1.000000)
    mad r19.xyzw, r13.yyzz, r17.zzzz, -r16.xxyy
    lt r13.yz, r17.xxyx, l(0.000000, -1.000000, -1.000000, 0.000000)
    div r18.xyzw, r18.xyzw, r19.xyzw
    and r13.yz, r13.yyzy, r18.yywy
    movc r9.xy, r9.xyxx, r18.xzxx, r13.yzyy
    max r2.w, r9.y, r9.x
    add r9.xyw, r16.xyxz, -r17.xyxz
    mad r9.xyw, r2.wwww, r9.xyxw, r17.xyxz
    mad r13.yz, r16.xxyx, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
    mad r17.xy, r9.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    add r13.yz, r13.yyzy, -r17.xxyx
    mul r13.yz, |r13.yyzy|, r14.yyzy
    max r2.w, r13.z, r13.y
    max r2.w, r2.w, l(1.000000)
    rcp r2.w, r2.w
    mad r16.xyz, r16.xyzx, l(0.500000, -0.500000, 1.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    mad r18.xyz, r9.xywx, l(0.500000, -0.500000, 1.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    add r19.xyz, -r16.xyzx, r18.xyzx
    mad r16.xyz, r2.wwww, r19.xyzx, r16.xyzx
    add r18.xyz, -r16.xyzx, r18.xyzx
    mul r19.xyz, r18.xyzx, l(0.031250, 0.031250, 0.031250, 0.000000)
    mul r9.xy, r14.yzyy, |r19.xyxx|
    max r2.w, r9.y, r9.x
    log r2.w, r2.w
    round_pi r2.w, r2.w
    max r2.w, r2.w, l(0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r3.w, r16.xyxx, t28.yzwx, s1, r2.w
    mad r14.yzw, r18.xxyz, l(0.000000, 0.031250, 0.031250, 0.031250), r16.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r5.w, r14.yzyy, t28.yzwx, s1, r2.w
    min r3.w, |r3.w|, |r5.w|
    mul r3.w, r14.w, r3.w
    lt r3.w, r3.w, l(1.000000)
    and r6.w, r3.w, l(1)
    mad r14.yzw, r18.xxyz, l(0.000000, 0.062500, 0.062500, 0.062500), r16.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r14.yzyy, t28.yzwx, s1, r2.w
    min r5.w, |r5.w|, |r7.w|
    mul r5.w, r14.w, r5.w
    lt r5.w, r5.w, l(1.000000)
    bfi r3.w, l(1), l(0), r3.w, l(2)
    movc r3.w, r5.w, r3.w, r6.w
    mad r14.yzw, r18.xxyz, l(0.000000, 0.093750, 0.093750, 0.093750), r16.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r5.w, r14.yzyy, t28.yzwx, s1, r2.w
    min r6.w, |r7.w|, |r5.w|
    mul r6.w, r14.w, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r3.w, l(4)
    movc r3.w, r6.w, r7.w, r3.w
    mad r14.yzw, r18.xxyz, l(0.000000, 0.125000, 0.125000, 0.125000), r16.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r14.yzyy, t28.yzwx, s1, r2.w
    min r5.w, |r5.w|, |r6.w|
    mul r5.w, r14.w, r5.w
    lt r5.w, r5.w, l(1.000000)
    iadd r7.w, r3.w, l(8)
    movc r3.w, r5.w, r7.w, r3.w
    mad r14.yzw, r18.xxyz, l(0.000000, 0.156250, 0.156250, 0.156250), r16.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r5.w, r14.yzyy, t28.yzwx, s1, r2.w
    min r6.w, |r6.w|, |r5.w|
    mul r6.w, r14.w, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r3.w, l(16)
    movc r3.w, r6.w, r7.w, r3.w
    mad r14.yzw, r18.xxyz, l(0.000000, 0.187500, 0.187500, 0.187500), r16.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r14.yzyy, t28.yzwx, s1, r2.w
    min r5.w, |r5.w|, |r6.w|
    mul r5.w, r14.w, r5.w
    lt r5.w, r5.w, l(1.000000)
    iadd r7.w, r3.w, l(32)
    movc r3.w, r5.w, r7.w, r3.w
    mad r14.yzw, r18.xxyz, l(0.000000, 0.218750, 0.218750, 0.218750), r16.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r5.w, r14.yzyy, t28.yzwx, s1, r2.w
    min r6.w, |r6.w|, |r5.w|
    mul r6.w, r14.w, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r3.w, l(64)
    movc r3.w, r6.w, r7.w, r3.w
    mad r14.yzw, r18.xxyz, l(0.000000, 0.250000, 0.250000, 0.250000), r16.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r14.yzyy, t28.yzwx, s1, r2.w
    min r5.w, |r5.w|, |r6.w|
    mul r5.w, r14.w, r5.w
    lt r5.w, r5.w, l(1.000000)
    iadd r7.w, r3.w, l(128)
    movc r3.w, r5.w, r7.w, r3.w
    mad r14.yzw, r18.xxyz, l(0.000000, 0.281250, 0.281250, 0.281250), r16.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r5.w, r14.yzyy, t28.yzwx, s1, r2.w
    min r6.w, |r6.w|, |r5.w|
    mul r6.w, r14.w, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r3.w, l(256)
    movc r3.w, r6.w, r7.w, r3.w
    mad r14.yzw, r18.xxyz, l(0.000000, 0.312500, 0.312500, 0.312500), r16.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r14.yzyy, t28.yzwx, s1, r2.w
    min r5.w, |r5.w|, |r6.w|
    mul r5.w, r14.w, r5.w
    lt r5.w, r5.w, l(1.000000)
    iadd r7.w, r3.w, l(512)
    movc r3.w, r5.w, r7.w, r3.w
    mad r14.yzw, r18.xxyz, l(0.000000, 0.343750, 0.343750, 0.343750), r16.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r5.w, r14.yzyy, t28.yzwx, s1, r2.w
    min r6.w, |r6.w|, |r5.w|
    mul r6.w, r14.w, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r3.w, l(1024)
    movc r3.w, r6.w, r7.w, r3.w
    mad r14.yzw, r18.xxyz, l(0.000000, 0.375000, 0.375000, 0.375000), r16.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r14.yzyy, t28.yzwx, s1, r2.w
    min r5.w, |r5.w|, |r6.w|
    mul r5.w, r14.w, r5.w
    lt r5.w, r5.w, l(1.000000)
    iadd r7.w, r3.w, l(2048)
    movc r3.w, r5.w, r7.w, r3.w
    mad r14.yzw, r18.xxyz, l(0.000000, 0.406250, 0.406250, 0.406250), r16.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r5.w, r14.yzyy, t28.yzwx, s1, r2.w
    min r6.w, |r6.w|, |r5.w|
    mul r6.w, r14.w, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r3.w, l(4096)
    movc r3.w, r6.w, r7.w, r3.w
    mad r14.yzw, r18.xxyz, l(0.000000, 0.437500, 0.437500, 0.437500), r16.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r14.yzyy, t28.yzwx, s1, r2.w
    min r5.w, |r5.w|, |r6.w|
    mul r5.w, r14.w, r5.w
    lt r5.w, r5.w, l(1.000000)
    iadd r7.w, r3.w, l(8192)
    movc r3.w, r5.w, r7.w, r3.w
    mad r14.yzw, r18.xxyz, l(0.000000, 0.468750, 0.468750, 0.468750), r16.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r5.w, r14.yzyy, t28.yzwx, s1, r2.w
    min r6.w, |r6.w|, |r5.w|
    mul r6.w, r14.w, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r3.w, l(0x00004000)
    movc r3.w, r6.w, r7.w, r3.w
    mad r14.yzw, r18.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000), r16.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r14.yzyy, t28.yzwx, s1, r2.w
    min r5.w, |r5.w|, |r6.w|
    mul r5.w, r14.w, r5.w
    lt r5.w, r5.w, l(1.000000)
    iadd r7.w, r3.w, l(0x00008000)
    movc r3.w, r5.w, r7.w, r3.w
    mad r14.yzw, r18.xxyz, l(0.000000, 0.531250, 0.531250, 0.531250), r16.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r5.w, r14.yzyy, t28.yzwx, s1, r2.w
    min r6.w, |r6.w|, |r5.w|
    mul r6.w, r14.w, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r3.w, l(0x00010000)
    movc r3.w, r6.w, r7.w, r3.w
    mad r14.yzw, r18.xxyz, l(0.000000, 0.562500, 0.562500, 0.562500), r16.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r14.yzyy, t28.yzwx, s1, r2.w
    min r5.w, |r5.w|, |r6.w|
    mul r5.w, r14.w, r5.w
    lt r5.w, r5.w, l(1.000000)
    iadd r7.w, r3.w, l(0x00020000)
    movc r3.w, r5.w, r7.w, r3.w
    mad r14.yzw, r18.xxyz, l(0.000000, 0.593750, 0.593750, 0.593750), r16.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r5.w, r14.yzyy, t28.yzwx, s1, r2.w
    min r6.w, |r6.w|, |r5.w|
    mul r6.w, r14.w, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r3.w, l(0x00040000)
    movc r3.w, r6.w, r7.w, r3.w
    mad r14.yzw, r18.xxyz, l(0.000000, 0.625000, 0.625000, 0.625000), r16.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r14.yzyy, t28.yzwx, s1, r2.w
    min r5.w, |r5.w|, |r6.w|
    mul r5.w, r14.w, r5.w
    lt r5.w, r5.w, l(1.000000)
    iadd r7.w, r3.w, l(0x00080000)
    movc r3.w, r5.w, r7.w, r3.w
    mad r14.yzw, r18.xxyz, l(0.000000, 0.656250, 0.656250, 0.656250), r16.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r5.w, r14.yzyy, t28.yzwx, s1, r2.w
    min r6.w, |r6.w|, |r5.w|
    mul r6.w, r14.w, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r3.w, l(0x00100000)
    movc r3.w, r6.w, r7.w, r3.w
    mad r14.yzw, r18.xxyz, l(0.000000, 0.687500, 0.687500, 0.687500), r16.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r14.yzyy, t28.yzwx, s1, r2.w
    min r5.w, |r5.w|, |r6.w|
    mul r5.w, r14.w, r5.w
    lt r5.w, r5.w, l(1.000000)
    iadd r7.w, r3.w, l(0x00200000)
    movc r3.w, r5.w, r7.w, r3.w
    mad r14.yzw, r18.xxyz, l(0.000000, 0.718750, 0.718750, 0.718750), r16.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r5.w, r14.yzyy, t28.yzwx, s1, r2.w
    min r6.w, |r6.w|, |r5.w|
    mul r6.w, r14.w, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r3.w, l(0x00400000)
    movc r3.w, r6.w, r7.w, r3.w
    mad r14.yzw, r18.xxyz, l(0.000000, 0.750000, 0.750000, 0.750000), r16.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r14.yzyy, t28.yzwx, s1, r2.w
    min r5.w, |r5.w|, |r6.w|
    mul r5.w, r14.w, r5.w
    lt r5.w, r5.w, l(1.000000)
    iadd r7.w, r3.w, l(0x00800000)
    movc r3.w, r5.w, r7.w, r3.w
    mad r14.yzw, r18.xxyz, l(0.000000, 0.781250, 0.781250, 0.781250), r16.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r5.w, r14.yzyy, t28.yzwx, s1, r2.w
    min r6.w, |r6.w|, |r5.w|
    mul r6.w, r14.w, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r3.w, l(0x01000000)
    movc r3.w, r6.w, r7.w, r3.w
    mad r14.yzw, r18.xxyz, l(0.000000, 0.812500, 0.812500, 0.812500), r16.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r14.yzyy, t28.yzwx, s1, r2.w
    min r5.w, |r5.w|, |r6.w|
    mul r5.w, r14.w, r5.w
    lt r5.w, r5.w, l(1.000000)
    iadd r7.w, r3.w, l(0x02000000)
    movc r3.w, r5.w, r7.w, r3.w
    mad r14.yzw, r18.xxyz, l(0.000000, 0.843750, 0.843750, 0.843750), r16.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r5.w, r14.yzyy, t28.yzwx, s1, r2.w
    min r6.w, |r6.w|, |r5.w|
    mul r6.w, r14.w, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r3.w, l(0x04000000)
    movc r3.w, r6.w, r7.w, r3.w
    mad r14.yzw, r18.xxyz, l(0.000000, 0.875000, 0.875000, 0.875000), r16.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r14.yzyy, t28.yzwx, s1, r2.w
    min r5.w, |r5.w|, |r6.w|
    mul r5.w, r14.w, r5.w
    lt r5.w, r5.w, l(1.000000)
    iadd r7.w, r3.w, l(0x08000000)
    movc r3.w, r5.w, r7.w, r3.w
    mad r14.yzw, r18.xxyz, l(0.000000, 0.906250, 0.906250, 0.906250), r16.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r5.w, r14.yzyy, t28.yzwx, s1, r2.w
    min r6.w, |r6.w|, |r5.w|
    mul r6.w, r14.w, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r3.w, l(0x10000000)
    movc r3.w, r6.w, r7.w, r3.w
    mad r14.yzw, r18.xxyz, l(0.000000, 0.937500, 0.937500, 0.937500), r16.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r14.yzyy, t28.yzwx, s1, r2.w
    min r5.w, |r5.w|, |r6.w|
    mul r5.w, r14.w, r5.w
    lt r5.w, r5.w, l(1.000000)
    iadd r7.w, r3.w, l(0x20000000)
    movc r3.w, r5.w, r7.w, r3.w
    mad r14.yzw, r18.xxyz, l(0.000000, 0.968750, 0.968750, 0.968750), r16.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r5.w, r14.yzyy, t28.yzwx, s1, r2.w
    min r6.w, |r6.w|, |r5.w|
    mul r6.w, r14.w, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r3.w, l(0x40000000)
    movc r3.w, r6.w, r7.w, r3.w
    sample_l_indexable(texture2d)(float,float,float,float) r2.w, r17.xyxx, t28.yzwx, s1, r2.w
    min r2.w, |r5.w|, |r2.w|
    mul r2.w, r9.w, r2.w
    lt r2.w, r2.w, l(1.000000)
    iadd r5.w, r3.w, l(0x80000000)
    movc r2.w, r2.w, r5.w, r3.w
    mov r20.w, l(-1)
    mov r21.z, l(-1)
    mov r9.xy, l(0,0,0,0)
    mov r3.w, l(0)
    mov r5.w, r2.w
    mov r6.w, r17.z
    mov r22.yz, l(0,0,0,0)
    mov r20.z, l(0)
    mov r7.w, l(0)
    loop 
      breakc_z r5.w
      firstbit_lo r20.y, r5.w
      ishl r8.w, l(1), r20.y
      xor r20.x, r5.w, r8.w
      utof r9.w, r20.y
      mul r9.w, r9.w, l(0.031250)
      mad r14.yzw, r18.xxyz, r9.wwww, r16.xxyz
      sample_l_indexable(texture2d)(float,float,float,float) r9.w, r14.yzyy, t28.yzwx, s1, l(0.000000)
      mul r10.w, r14.w, |r9.w|
      lt r10.w, r10.w, l(1.000000)
      if_nz r10.w
        if_nz r20.z
          lt r10.w, r9.z, |r9.w|
          lt r12.w, r6.w, r14.w
          and r10.w, r10.w, r12.w
          movc r13.yz, r10.wwww, r14.yyzy, r9.xxyx
          mov r20.z, r14.w
          mov r22.x, r6.w
          movc r17.xyw, r10.wwww, r20.zxzy, r22.xyxz
          mov r5.w, r20.x
          mov r20.z, l(-1)
          mov r9.xy, r13.yzyy
          mov r6.w, r17.x
          mov r22.yz, r17.yywy
          continue 
        endif 
        mov r10.w, r22.y
        mov r12.w, l(0)
      else 
        not r8.w, r8.w
        and r10.w, r8.w, r22.y
        mov r12.w, r20.z
      endif 
      if_nz r7.w
        mov r5.w, r20.x
        mov r22.y, r10.w
        mov r20.z, r12.w
        mov r7.w, l(-1)
        continue 
      endif 
      mov r13.yz, r9.xxyx
      mov r8.w, r3.w
      mov r16.w, r6.w
      mov r22.y, r10.w
      mov r22.x, r22.z
      mov r20.z, r12.w
      mov r21.w, r7.w
      mov r17.x, r14.w
      mov r17.y, |r9.w|
      mov r17.w, l(0)
      loop 
        ige r18.w, r17.w, l(4)
        breakc_nz r18.w
        itof r18.w, r17.w
        add r18.w, r18.w, l(1.000000)
        mul r18.w, r18.w, l(0.250000)
        mad r23.xyz, r19.xyzx, r18.wwww, r14.yzwy
        sample_l_indexable(texture2d)(float,float,float,float) r18.w, r23.xyxx, t28.yzwx, s1, l(0.000000)
        mul r19.w, r23.z, |r18.w|
        lt r19.w, r19.w, l(1.000000)
        if_nz r19.w
          lt r19.w, r9.z, |r18.w|
          add r22.w, -r17.x, r23.z
          add r23.w, -r17.y, |r18.w|
          mul r24.x, r17.x, r23.z
          mul r23.w, |r23.w|, r24.x
          lt r22.w, r23.w, |r22.w|
          and r23.w, r19.w, r22.w
          lt r24.x, r16.w, r23.z
          and r24.y, r19.w, r24.x
          movc r21.xy, r24.yyyy, r20.xyxx, r22.yxyy
          or r22.w, r22.w, r24.x
          and r19.w, r19.w, r22.w
          movc r23.xy, r19.wwww, r23.xyxx, r13.yzyy
          movc r22.w, r23.w, l(1.000000), r8.w
          movc r19.w, r19.w, r23.z, r16.w
          movc r24.xyzw, r23.wwww, r20.xyzw, r21.xyzw
          mov r8.w, r22.w
          mov r13.yz, r23.xxyx
          mov r16.w, r19.w
          mov r22.xy, r24.yxyy
          mov r20.z, r24.z
          mov r21.w, r24.w
          break 
        endif 
        mov r17.x, r23.z
        mov r17.y, |r18.w|
        iadd r17.w, r17.w, l(1)
      endloop 
      mov r9.xy, r13.yzyy
      mov r3.w, r8.w
      mov r6.w, r16.w
      mov r22.yz, r22.yyxy
      mov r7.w, r21.w
      mov r5.w, r20.x
    endloop 
    rcp r2.w, r6.w
    add r2.w, -r9.z, r2.w
    add r5.w, -r9.z, r13.w
    div r2.w, |r2.w|, |r5.w|
    min r16.x, r2.w, l(1.000000)
    countbits r2.w, r22.y
    utof r2.w, r2.w
    add r2.w, r2.w, l(1.000000)
    iadd r5.w, -r22.z, l(32)
    utof r5.w, r5.w
    div r2.w, r2.w, r5.w
    min r16.y, r2.w, l(1.000000)
  else 
    mov r16.xy, l(1.000000,0,0,0)
    mov r3.w, l(0)
  endif 
  add r2.w, r1.y, l(-0.83333331)
  mul r2.w, r2.w, l(5.99999952)
  max r2.w, r2.w, l(0.000000)
  mad r5.w, r2.w, l(-2.000000), l(3.000000)
  mul r2.w, r2.w, r2.w
  mul r2.w, r2.w, r5.w
  add r2.z, r2.z, l(-60.000000)
  mul_sat r2.z, r2.z, l(0.01666667)
  mad r5.w, r2.z, l(-2.000000), l(3.000000)
  mul r2.z, r2.z, r2.z
  mul r2.z, r2.z, r5.w
  mul r2.z, r2.z, r2.w
  mul r2.z, r16.y, r2.z
  mad r9.zw, r9.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
  add r9.zw, |r9.zzzw|, l(0.000000, 0.000000, -0.500000, -0.500000)
  add_sat r9.zw, r9.zzzw, r9.zzzw
  mad r13.yz, r9.zzwz, l(0.000000, -2.000000, -2.000000, 0.000000), l(0.000000, 3.000000, 3.000000, 0.000000)
  mul r9.zw, r9.zzzw, r9.zzzw
  mad r9.zw, -r13.yyyz, r9.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  mul r2.w, r9.w, r9.z
  mul r2.z, r2.w, r2.z
  mul r2.w, r16.x, l(10.000000)
  min r2.w, r2.w, l(1.000000)
  add r5.w, -r3.w, l(1.000000)
  mul r5.w, r2.z, r5.w
  add r2.w, r2.w, l(-1.000000)
  mad r2.w, r5.w, r2.w, l(1.000000)
  mul r2.z, r3.w, r2.z
  lt r3.w, l(0.000000), r2.z
  if_nz r3.w
    sample_l_indexable(texture2d)(float,float,float,float) r9.zw, r9.xyxx, t22.zwxy, s4, l(0.000000)
    add r13.yz, |r9.zzwz|, l(0.000000, -0.500000, -0.500000, 0.000000)
    add_sat r13.yz, r13.yyzy, r13.yyzy
    add r14.yz, |r9.zzwz|, |r9.zzwz|
    min r14.yz, r14.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
    mul r14.yz, r14.yyzy, l(0.000000, 10.000000, 10.000000, 0.000000)
    mad r13.yz, r13.yyzy, l(0.000000, 30.000000, 30.000000, 0.000000), r14.yyzy
    ge r9.zw, r9.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
    movc r9.zw, r9.zzzw, r13.yyyz, -r13.yyyz
    mad r9.xy, -r9.zwzz, cb1[44].zwzz, r9.xyxx
    sample_l_indexable(texture2d)(float,float,float,float) r9.xyz, r9.xyxx, t21.xyzw, s4, l(0.000000)
    mul r9.xyz, r9.xyzx, cb1[85].xxxx
    mul r9.xyz, r2.zzzz, r9.xyzx
  else 
    mov r9.xyz, l(0,0,0,0)
    mov r2.z, l(0)
  endif 
else 
  mov r9.xyz, l(0,0,0,0)
  mov r2.zw, l(0,0,0,1.000000)
endif 
dp3 r3.w, r11.xyzx, cb2[17].xyzx
mov_sat r5.w, r3.w
ge r6.w, l(0.000000), r5.w
if_nz r6.w
  mov r7.w, l(0)
endif 
if_z r6.w
  mul r13.yzw, r10.yyyy, cb2[29].xxyz
  mad r13.yzw, r10.xxxx, cb2[28].xxyz, r13.yyzw
  mad r13.yzw, r10.zzzz, cb2[30].xxyz, r13.yyzw
  add r13.yzw, r13.yyzw, cb2[31].xxyz
  add r6.w, r13.w, -cb2[17].w
  mad r6.w, -r6.w, l(0.00006104), l(1.000000)
  mov_sat r8.w, r6.w
  eq r8.w, r6.w, r8.w
  if_nz r8.w
    mov r8.w, l(0)
    mov r9.w, l(0)
    loop 
      ge r10.w, r8.w, l(3.000000)
      breakc_nz r10.w
      ftou r10.w, r8.w
      add r14.yz, r13.yyzy, -cb2[r10.w + 20].xxyx
      max r12.w, |r14.z|, |r14.y|
      mul r9.w, r12.w, cb2[r10.w + 20].z
      lt r10.w, r9.w, l(1.000000)
      if_nz r10.w
        break 
      endif 
      add r8.w, r8.w, l(1.000000)
      mov r9.w, l(0)
    endloop 
  else 
    mov r8.w, l(3.000000)
    mov r9.w, l(0)
  endif 
  ge r10.w, r8.w, l(3.000000)
  if_nz r10.w
    mul r14.yzw, l(0.000000, 128.000000, 0.500000, 0.500000), cb2[27].zzxy
    rcp r16.xz, r14.yyyy
    mov r16.y, -r16.z
    mad r14.yzw, r13.yyzy, r16.xxyz, r14.zzwz
    add r16.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r14.yzw, r14.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r14.yzw, r16.xxyz, r14.yyzw
    mul r16.xy, r14.wzww, cb2[32].xxxx
    round_ni r16.xy, r16.xyxx
    mul r12.w, r16.y, cb2[27].x
    mad r12.w, r12.w, cb2[32].x, r16.x
    ftou r12.w, r12.w
    iadd r12.w, r12.w, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.x, r12.w, l(0), t23.xxxx
    and r16.y, r16.x, l(0x40000000)
    ishl r16.z, r16.x, l(2)
    if_z r16.y
      and r16.y, r16.x, l(0x01ffffff)
      iadd r17.x, r12.w, r16.y
      ushr r12.w, r16.x, l(25)
      utof r12.w, r12.w
      mul r14.yzw, r12.wwww, r14.yyzw
      frc r14.yzw, r14.yyzw
      mul r14.yzw, r14.yyzw, l(0.000000, 128.000000, 128.000000, 128.000000)
      ftou r14.yzw, r14.yyzw
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.z, r17.x, l(0), t23.xxxx
      ushr r16.xy, r14.wzww, l(6, 6, 0, 0)
      and r12.w, r17.z, l(0xc0000000)
      iadd r16.w, r17.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.w, r16.w, l(0), t23.xxxx
      movc r16.y, r16.y, r17.z, r16.w
      ushr r16.w, r16.y, l(13)
      movc r16.x, r16.x, r16.w, r16.y
      and r16.x, r16.x, l(8191)
      iadd r18.x, r16.x, r17.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.x, l(0), t23.xxxx
      mov r17.y, l(0)
      mov r18.y, l(1)
      movc r16.xyw, r12.wwww, r17.xyxz, r18.xyxz
      movc r18.yz, r12.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r19.xy, r14.wzww, r18.yyyy
      and r19.xy, r19.xyxx, l(1, 1, 0, 0)
      and r17.w, r16.w, l(0xc0000000)
      iadd r18.y, r16.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.y, r18.y, l(0), t23.xxxx
      movc r18.y, r19.y, r16.w, r18.y
      ushr r19.y, r18.y, l(13)
      movc r18.y, r19.x, r19.y, r18.y
      and r18.y, r18.y, l(8191)
      iadd r18.x, r16.x, r18.y
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.w, r18.x, l(0), t23.xxxx
      movc r16.xyw, r17.wwww, r16.xyxw, r18.xzxw
      movc r16.xyw, r12.wwww, r17.xyxz, r16.xyxw
      and r12.w, r16.w, l(0xc0000000)
      if_z r12.w
        iadd r12.w, -r16.y, l(6)
        ushr r17.xy, r14.wzww, r12.wwww
        or r12.w, r16.w, l(0x40000000)
        bfi r17.y, l(1), l(1), r17.y, l(0)
        bfi r17.x, l(1), l(0), r17.x, r17.y
        imul null, r17.x, r17.x, l(10)
        ushr r12.w, r12.w, r17.x
        and r12.w, r12.w, l(1023)
        iadd r17.x, r12.w, r16.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.w, r17.x, l(0), t23.xxxx
        iadd r17.yz, r16.yyyy, l(0, 1, 2, 0)
        iadd r12.w, -r17.y, l(6)
        ushr r18.xy, r14.wzww, r12.wwww
        and r12.w, r17.w, l(0xc0000000)
        or r16.y, r17.w, l(0x40000000)
        bfi r18.y, l(1), l(1), r18.y, l(0)
        bfi r18.x, l(1), l(0), r18.x, r18.y
        imul null, r18.x, r18.x, l(10)
        ushr r16.y, r16.y, r18.x
        and r16.y, r16.y, l(1023)
        iadd r18.x, r16.y, r17.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.x, l(0), t23.xxxx
        mov r18.y, r17.z
        movc r18.xyz, r12.wwww, r17.xywx, r18.xyzx
        iadd r16.y, -r18.y, l(6)
        ushr r17.yz, r14.wwzw, r16.yyyy
        and r16.y, r18.z, l(0xc0000000)
        or r18.y, r18.z, l(0x40000000)
        bfi r17.z, l(1), l(1), r17.z, l(0)
        bfi r17.y, l(1), l(0), r17.y, r17.z
        imul null, r17.y, r17.y, l(10)
        ushr r17.y, r18.y, r17.y
        and r17.y, r17.y, l(1023)
        iadd r19.x, r17.y, r18.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.y, r19.x, l(0), t23.xxxx
        movc r17.yz, r16.yyyy, r18.xxzx, r19.xxyx
        movc r16.xw, r12.wwww, r17.xxxw, r17.yyyz
      endif 
      and r12.w, r16.w, l(0xc0000000)
      if_z r12.w
        ubfe r16.y, l(14), l(15), r16.w
        utof r16.y, r16.y
        mul r16.y, r16.y, cb2[27].w
        mul r16.y, r16.y, l(0.00006104)
        and r17.xy, r16.wwww, l(0x00007fff, 0x20000000, 0, 0)
        utof r17.x, r17.x
        mul r17.x, r17.x, cb2[27].w
        mul r17.x, r17.x, l(0.00003052)
        and r17.z, r14.z, l(3)
        iadd r17.z, r16.x, r17.z
        iadd r17.z, r17.z, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.z, r17.z, l(0), t23.xxxx
        bfi r18.xyz, l(2, 2, 1, 0), l(3, 1, 4, 0), r14.yzwy, l(0, 0, 0, 0)
        ushr r14.y, r17.z, r18.x
        and r14.y, r14.y, l(255)
        utof r14.y, r14.y
        mul r14.y, r17.x, r14.y
        mad r14.y, r14.y, l(0.00392157), r16.y
        iadd r14.z, r18.y, l(1)
        ubfe r14.w, l(1), l(1), r14.w
        iadd r14.z, r14.w, r14.z
        iadd r14.z, r14.z, r16.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r14.z, r14.z, l(0), t23.xxxx
        ushr r14.z, r14.z, r18.z
        and r14.z, r14.z, l(0x0000ffff)
        utof r14.z, r14.z
        mul r14.z, r17.x, r14.z
        mad r14.z, r14.z, l(0.00001526), r16.y
        movc r16.z, r17.y, r14.y, r14.z
      else 
        and r14.y, r16.w, l(0x80000000)
        iadd r14.z, r16.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r14.z, r14.z, l(0), t23.xxxx
        movc r14.y, r14.y, r14.z, l(0)
        ishl r14.z, r16.w, l(2)
        ushr r14.w, r14.y, l(16)
        and r14.y, r14.y, l(0x0000ffff)
        f16tof32 r14.yw, r14.yyyw
        mad r14.z, r13.y, r14.w, r14.z
        mad r14.y, r13.z, r14.y, r14.z
        movc r16.z, r12.w, r14.y, r16.z
      endif 
    endif 
    mad r12.w, -cb2[27].z, l(2.000000), r13.w
    lt r12.w, r16.z, r12.w
    movc r7.w, r12.w, l(0), l(1.000000)
  endif 
  if_z r10.w
    if_z cb2[58].y
      ftou r10.w, r8.w
      add r14.yz, r13.yyzy, -cb2[r10.w + 20].xxyx
      mul r14.yz, r14.yyzy, cb2[r10.w + 20].zzzz
      mad r16.xy, r14.yzyy, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r10.w, cb2[26].y
      add r16.z, r8.w, r10.w
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.w, r16.xyzx, t13.xxxx, s13, r6.w
      sample_l_indexable(texture2darray)(float,float,float,float) r12.w, r16.xyzx, t31.yzwx, s0, l(0.000000)
      add r10.w, r10.w, r12.w
      add_sat r10.w, r10.w, l(-1.000000)
      mul r12.w, r10.w, r10.w
      mul r7.w, r10.w, r12.w
    endif 
    if_nz cb2[58].y
      mov r16.x, -r13.x
      ftou r10.w, r8.w
      add r8.w, r8.w, l(1.000000)
      min r8.w, r8.w, l(2.000000)
      ftou r8.w, r8.w
      add r9.w, -r9.w, l(1.000000)
      mul r9.w, r9.w, l(28.000000)
      ftou r9.w, r9.w
      add r14.yz, r13.yyzy, -cb2[r10.w + 20].xxyx
      mul r14.yz, r14.yyzy, cb2[r10.w + 20].zzzz
      mad r14.yz, r14.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      add r13.yz, r13.yyzy, -cb2[r8.w + 20].xxyx
      mul r13.yz, r13.yyzy, cb2[r8.w + 20].zzzz
      mad r13.yz, r13.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      mov r16.y, r14.x
      mov r16.z, r13.x
      mov r12.w, l(0)
      mov r13.w, l(0)
      loop 
        uge r14.w, r13.w, l(8)
        breakc_nz r14.w
        ult r14.w, r9.w, r13.w
        movc r17.xy, r14.wwww, r13.yzyy, r14.yzyy
        movc r16.w, r14.w, cb2[r8.w + 20].w, cb2[r10.w + 20].w
        movc r14.w, r14.w, r8.w, r10.w
        dp2 r18.x, icb[r13.w + 0].yxyy, r16.xyxx
        dp2 r18.y, icb[r13.w + 0].yxyy, r16.yzyy
        mad r17.xy, r18.xyxx, r16.wwww, r17.xyxx
        iadd r14.w, r14.w, cb2[26].y
        utof r17.z, r14.w
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r14.w, r17.xyzx, t13.xxxx, s13, r6.w
        sample_l_indexable(texture2darray)(float,float,float,float) r16.w, r17.xyzx, t31.yzwx, s0, l(0.000000)
        add r14.w, r14.w, r16.w
        add_sat r14.w, r14.w, l(-1.000000)
        mad r12.w, r14.w, l(0.125000), r12.w
        iadd r13.w, r13.w, l(1)
      endloop 
      mul r6.w, r12.w, r12.w
      mul r7.w, r12.w, r6.w
    endif 
  endif 
endif 
add r6.w, -r1.y, l(1.000000)
mul r6.w, r6.w, l(5.000000)
add r13.yzw, r10.xxyz, -cb2[35].xxyz
mul r16.x, r13.y, cb2[35].w
mul r16.yz, r13.zzwz, cb2[36].xxyx
add_sat r13.yzw, r16.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
mul r16.xy, r13.yzyy, cb2[36].zwzz
mul r16.z, r13.w, cb2[37].x
add r13.yzw, r16.xxyz, cb2[37].yyzw
lt r14.yzw, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xxyz
movc r16.xyz, r14.yzwy, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
mov r16.w, l(0)
add r14.yzw, r13.yyzw, r16.wwwx
sample_l_indexable(texture3d)(float,float,float,float) r14.yzw, r14.yzwy, t17.wxyz, s4, l(0.000000)
mul r17.xyz, r11.xyzx, r11.xyzx
mul r17.xyz, r17.xyzx, cb2[19].xxxx
add r18.xyz, r13.yzwy, r16.wwyw
sample_l_indexable(texture3d)(float,float,float,float) r18.xyz, r18.xyzx, t18.xyzw, s4, l(0.000000)
mul r18.xyz, r17.yyyy, r18.xyzx
mad r14.yzw, r14.yyzw, r17.xxxx, r18.xxyz
add r13.yzw, r13.yyzw, r16.wwwz
sample_l_indexable(texture3d)(float,float,float,float) r13.yzw, r13.yzwy, t19.wxyz, s4, l(0.000000)
mad r13.yzw, r13.yyzw, r17.zzzz, r14.yyzw
mov r11.w, l(0)
sample_l_indexable(texturecubearray)(float,float,float,float) r14.yzw, r11.xyzw, t8.wxyz, s2, l(6.000000)
mul r13.yzw, r13.yyzw, r14.yyzw
dp3 r8.w, r13.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
mov r15.w, l(0)
sample_l_indexable(texturecubearray)(float,float,float,float) r14.yzw, r15.xyzw, t8.wxyz, s2, r6.w
add r6.w, -r8.w, cb2[19].x
mad r6.w, r1.y, r6.w, r8.w
mul r14.yzw, r6.wwww, r14.yyzw
add r2.z, -r2.z, l(1.000000)
mad r9.xyz, r14.yzwy, r2.zzzz, r9.xyzx
mad r2.z, r4.z, r1.w, r1.x
log r2.z, |r2.z|
mul r2.z, r0.w, r2.z
exp r2.z, r2.z
mad r1.w, r4.z, r1.w, r2.z
add_sat r1.w, r1.w, l(-1.000000)
mul r1.w, r2.w, r1.w
mul r2.yzw, r2.yyyy, r13.yyzw
mad r13.yz, r1.xxyx, l(0.000000, 0.984375, 0.984375, 0.000000), l(0.000000, 0.00781250, 0.00781250, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r13.yz, r13.yzyy, t5.zxyw, s2, l(0.000000)
mul r9.xyz, r1.wwww, r9.xyzx
mul r14.yzw, r13.yyyy, r9.xxyz
mul r9.xyz, r13.zzzz, r9.xyzx
lt r1.y, l(0.000000), r5.w
if_nz r1.y
  lt r1.y, l(0.000000), r7.w
  if_nz r1.y
    sqrt r1.y, r0.w
    mad r1.y, r1.y, l(0.500000), l(0.500000)
    mul r1.y, r1.y, r1.y
    mul r1.w, r1.y, l(0.500000)
    mad r1.y, -r1.y, l(0.500000), l(1.000000)
    mad r4.z, r1.x, r1.y, r1.w
    mul r1.yw, r1.yyyw, r4.zzzz
    mul r4.z, r0.z, cb2[18].w
    mul r4.z, r5.w, r4.z
    if_nz cb2[23].x
      add r15.xyz, r10.xyzx, cb1[24].xyzx
      mov r15.w, l(1.000000)
      dp4 r6.w, cb2[24].xyzw, r15.xyzw
      dp4 r8.w, cb2[25].xyzw, r15.xyzw
      frc r15.x, r6.w
      frc r15.y, r8.w
      iadd r6.w, l(-1), cb2[23].x
      utof r15.z, r6.w
      sample_l_indexable(texture2darray)(float,float,float,float) r13.yzw, r15.xyzx, t20.wxyz, s2, l(0.000000)
      add r13.yzw, r13.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
      mad r13.yzw, cb2[23].yyyy, r13.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
      mul r13.yzw, r13.yyzw, cb2[18].xxyz
    else 
      mov r13.yzw, cb2[18].xxyz
    endif 
    ushr r6.w, cb2[53].x, l(16)
    ult r8.w, l(0), r6.w
    and r8.w, r2.x, r8.w
    if_nz r8.w
      iadd r6.w, r6.w, cb2[0].x
      imad r6.w, r6.w, l(15), l(-15)
      mad r8.w, |r3.w|, l(-0.200000), l(0.400000)
      mad r15.xyz, r11.xyzx, r8.wwww, r10.xyzx
      mov r16.xyz, cb9[r6.w + 4].yzwy
      mov r16.w, cb9[r6.w + 5].x
      mov r15.w, l(1.000000)
      dp4 r16.x, r16.xyzw, r15.xyzw
      mov r17.xyz, cb9[r6.w + 5].yzwy
      mov r17.w, cb9[r6.w + 6].x
      dp4 r16.y, r17.xyzw, r15.xyzw
      mad r16.xy, r16.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      add r17.x, r16.x, cb9[r6.w + 9].w
      add r17.y, r16.y, cb9[r6.w + 10].x
      mul r16.xy, r17.xyxx, cb9[r6.w + 9].yzyy
      div r16.zw, cb9[r6.w + 3].yyyy, cb9[r6.w + 8].yyyw
      add r17.xy, -r16.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
      ge r17.xy, r16.xyxx, r17.xyxx
      ge r16.zw, r16.zzzw, r16.xxxy
      or r16.zw, r16.zzzw, r17.xxxy
      or r8.w, r16.w, r16.z
      if_z r8.w
        mov r17.xyz, cb9[r6.w + 6].yzwy
        mov r17.w, cb9[r6.w + 7].x
        dp4 r8.w, r17.xyzw, r15.xyzw
        mov_sat r16.xy, r16.xyxx
        mad r15.x, r16.x, cb9[r6.w + 8].y, cb9[r6.w + 8].z
        mad r15.y, r16.y, cb9[r6.w + 8].w, cb9[r6.w + 9].x
        add r8.w, r8.w, cb9[r6.w + 10].y
        div r8.w, r8.w, cb9[r6.w + 10].z
        max r8.w, r8.w, l(0.00006104)
        and r9.w, l(0x0000ffff), cb9[r6.w + 1].w
        if_nz cb2[58].y
          mov r16.x, -r13.x
          utof r17.z, r9.w
          mov r16.y, r14.x
          mov r16.z, r13.x
          mov r10.w, l(0)
          mov r11.w, l(0)
          loop 
            ige r12.w, r11.w, l(8)
            breakc_nz r12.w
            dp2 r18.x, icb[r11.w + 0].yxyy, r16.xyxx
            dp2 r18.y, icb[r11.w + 0].yxyy, r16.yzyy
            mad r17.xy, r18.xyxx, cb9[r6.w + 3].yyyy, r15.xyxx
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.w, r17.xyzx, t9.xxxx, s13, r8.w
            mad r10.w, r12.w, l(0.125000), r10.w
            iadd r11.w, r11.w, l(1)
          endloop 
        else 
          utof r15.z, r9.w
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.w, r15.xyzx, t9.xxxx, s13, r8.w
        endif 
        mul r6.w, r10.w, r10.w
        mul r6.w, r10.w, r6.w
      else 
        mov r6.w, l(1.000000)
      endif 
      mul r7.w, r6.w, r7.w
    else 
      and r6.w, cb2[53].x, l(0x0000ffff)
      ult r8.w, l(0), r6.w
      not r2.x, r2.x
      and r2.x, r2.x, r8.w
      if_nz r2.x
        iadd r2.x, r6.w, cb2[0].x
        imad r2.x, r2.x, l(15), l(-15)
        mad r6.w, |r3.w|, l(-0.200000), l(0.400000)
        mad r15.xyz, r11.xyzx, r6.wwww, r10.xyzx
        mov r16.xyz, cb9[r2.x + 4].yzwy
        mov r16.w, cb9[r2.x + 5].x
        mov r15.w, l(1.000000)
        dp4 r16.x, r16.xyzw, r15.xyzw
        mov r17.xyz, cb9[r2.x + 5].yzwy
        mov r17.w, cb9[r2.x + 6].x
        dp4 r16.y, r17.xyzw, r15.xyzw
        mad r16.xy, r16.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
        add r17.x, r16.x, cb9[r2.x + 9].w
        add r17.y, r16.y, cb9[r2.x + 10].x
        mul r16.xy, r17.xyxx, cb9[r2.x + 9].yzyy
        div r16.zw, cb9[r2.x + 3].yyyy, cb9[r2.x + 8].yyyw
        add r17.xy, -r16.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
        ge r17.xy, r16.xyxx, r17.xyxx
        ge r16.zw, r16.zzzw, r16.xxxy
        or r16.zw, r16.zzzw, r17.xxxy
        or r6.w, r16.w, r16.z
        if_z r6.w
          mov r17.xyz, cb9[r2.x + 6].yzwy
          mov r17.w, cb9[r2.x + 7].x
          dp4 r6.w, r17.xyzw, r15.xyzw
          mov_sat r16.xy, r16.xyxx
          mad r15.x, r16.x, cb9[r2.x + 8].y, cb9[r2.x + 8].z
          mad r15.y, r16.y, cb9[r2.x + 8].w, cb9[r2.x + 9].x
          add r6.w, r6.w, cb9[r2.x + 10].y
          div r6.w, r6.w, cb9[r2.x + 10].z
          max r6.w, r6.w, l(0.00006104)
          and r8.w, l(0x0000ffff), cb9[r2.x + 1].w
          if_nz cb2[58].y
            mov r16.x, -r13.x
            utof r17.z, r8.w
            mov r16.y, r14.x
            mov r16.z, r13.x
            mov r9.w, l(0)
            mov r10.w, l(0)
            loop 
              ige r11.w, r10.w, l(8)
              breakc_nz r11.w
              dp2 r18.x, icb[r10.w + 0].yxyy, r16.xyxx
              dp2 r18.y, icb[r10.w + 0].yxyy, r16.yzyy
              mad r17.xy, r18.xyxx, cb9[r2.x + 3].yyyy, r15.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r11.w, r17.xyzx, t9.xxxx, s13, r6.w
              mad r9.w, r11.w, l(0.125000), r9.w
              iadd r10.w, r10.w, l(1)
            endloop 
          else 
            utof r15.z, r8.w
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r9.w, r15.xyzx, t9.xxxx, s13, r6.w
          endif 
          mul r2.x, r9.w, r9.w
          mul r2.x, r9.w, r2.x
        else 
          mov r2.x, l(1.000000)
        endif 
        mul r7.w, r2.x, r7.w
      endif 
    endif 
    mad r1.x, -r1.x, l(0.500000), l(1.000000)
    mad r1.x, -r5.w, r1.x, l(1.000000)
    mul r1.x, r1.x, r1.x
    mad r1.x, -r1.x, l(0.620000), l(0.620000)
    add r1.x, -r5.w, r1.x
    mad r0.w, r0.w, r1.x, r5.w
    mul r0.w, r7.w, r0.w
    lt r1.x, l(0.000000), r3.w
    mad r15.xyz, r0.wwww, r13.yzwy, r2.yzwy
    mad r16.xyz, -r10.xyzx, r1.zzzz, cb2[17].xyzx
    dp3 r0.w, r16.xyzx, r16.xyzx
    rsq r0.w, r0.w
    mul r16.xyz, r0.wwww, r16.xyzx
    dp3 r0.w, r16.xyzx, r12.xyzx
    dp3 r1.z, r11.xyzx, r16.xyzx
    mad r0.z, |r1.z|, r0.z, -|r1.z|
    mad r0.z, |r1.z|, r0.z, l(1.000000)
    mad r1.y, r5.w, r1.y, r1.w
    mul r0.z, r0.z, r0.z
    mul r0.z, r1.y, r0.z
    rcp r0.z, r0.z
    mul r0.z, r4.z, r0.z
    mul r0.z, r0.z, r7.w
    mul r0.z, r0.z, l(0.250000)
    mad r1.yzw, r0.zzzz, r13.yyzw, r9.xxyz
    add_sat r0.w, -r0.w, l(1.000000)
    mul r2.x, r0.w, r0.w
    mul r2.x, r2.x, r2.x
    mul r0.w, r0.w, r2.x
    mul r0.z, r0.w, r0.z
    mad r11.xyz, r0.zzzz, r13.yzwy, r14.yzwy
    movc r2.yzw, r1.xxxx, r15.xxyz, r2.yyzw
    movc r14.yzw, r1.xxxx, r11.xxyz, r14.yyzw
    movc r9.xyz, r1.xxxx, r1.yzwy, r9.xyzx
  endif 
endif 
mad r1.xyz, r4.xwyx, l(1.000000, 3.000000, 2.000000, 0.000000), l(0.000000, 0.500000, -1.000000, 0.000000)
ftou r0.z, r1.y
mad r4.xyz, r5.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r0.w, r4.x
ieq r0.w, r0.z, r0.w
movc r4.xy, r0.wwww, r4.yzyy, l(-1.000000,0,0,0)
mad r5.xyz, r6.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r0.w, r5.x
ieq r0.w, r0.z, r0.w
movc r4.zw, r0.wwww, r5.yyyz, l(0,0,-1.000000,0)
mad r5.xyz, r7.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r0.w, r5.x
ieq r0.w, r0.z, r0.w
movc r5.xy, r0.wwww, r5.yzyy, l(-1.000000,0,0,0)
mad r6.xyz, r8.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r0.w, r6.x
ieq r0.z, r0.z, r0.w
movc r0.zw, r0.zzzz, r6.yyyz, l(0,0,-1.000000,0)
mov r6.xy, r4.xzxx
mov r6.z, r5.x
mov r6.w, r0.z
add r6.xyzw, -r1.xxxx, r6.xyzw
ge r6.xyzw, |r6.xyzw|, l(0.00902149, 0.00902149, 0.00902149, 0.00902149)
movc r6.xyzw, r6.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
add r0.z, r6.y, r6.x
add r0.z, r6.z, r0.z
add r0.z, r6.w, r0.z
mul r2.x, r4.w, r6.y
mad r2.x, r6.x, r4.y, r2.x
mad r2.x, r6.z, r5.y, r2.x
mad r0.w, r6.w, r0.w, r2.x
div r1.w, r0.w, r0.z
ge r0.z, l(0.000000), r0.z
movc r1.yz, r0.zzzz, l(0,0,0,0), r1.zzwz
and r0.zw, r0.xxxy, l(0, 0, 1, 1)
ieq r0.z, r0.w, r0.z
movc r1.xyz, r0.zzzz, r1.xyzx, r1.xzyx
mad r0.z, -r1.z, l(0.500000), r1.x
add r4.y, r0.z, r1.z
mad r4.z, -r1.y, l(0.500000), r0.z
add r4.x, r1.y, r4.z
add r1.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r1.xyz, r1.xyzx, r14.yzwy
mad r1.xyz, r9.xyzx, r4.xyzx, r1.xyzx
mad r1.xyz, r2.yzwy, r3.xyzx, r1.xyzx
lt r0.z, l(0.000000), cb2[9].z
if_nz r0.z
  dp3 r0.z, r10.xyzx, r10.xyzx
  rsq r0.w, r0.z
  mul r2.xyz, r0.wwww, r10.xyzx
  sqrt r0.z, r0.z
  lt r0.w, l(0.000000), cb2[13].w
  if_nz r0.w
    mad r3.xy, r0.zzzz, cb2[15].xyxx, cb2[14].zwzz
    mul r3.xy, r3.xyxx, cb2[16].xyxx
    lt r0.w, l(0.010000), |r10.z|
    mul r3.zw, r10.zzzz, cb2[15].zzzw
    mul r4.xy, r3.zwzz, l(-1.442695, -1.442695, 0.000000, 0.000000)
    exp r4.xy, r4.xyxx
    add r4.xy, -r4.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    div r3.zw, r4.xxxy, r3.zzzw
    mul r3.zw, r3.zzzw, r3.xxxy
    movc r3.xy, r0.wwww, r3.zwzz, r3.xyxx
    mul r3.xzw, r3.xxxx, cb2[12].xxyz
    exp r3.xzw, r3.xxzw
    mul r4.xyz, r3.yyyy, cb2[12].xyzx
    exp r4.xyz, r4.xyzx
    add r4.xyz, -r3.xzwx, r4.xyzx
    mad r3.xyz, cb2[13].wwww, r4.xyzx, r3.xzwx
  else 
    mad r0.w, r0.z, cb2[15].x, cb2[14].z
    mul r0.w, r0.w, cb2[16].x
    lt r1.w, l(0.010000), |r10.z|
    mul r2.w, r10.z, cb2[15].z
    mul r3.w, r2.w, l(-1.442695)
    exp r3.w, r3.w
    add r3.w, -r3.w, l(1.000000)
    div r2.w, r3.w, r2.w
    mul r2.w, r0.w, r2.w
    movc r0.w, r1.w, r2.w, r0.w
    mul r4.xyz, r0.wwww, cb2[12].xyzx
    exp r3.xyz, r4.xyzx
  endif 
  mad r3.xyz, r3.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r3.xyz, r3.xyzx, -cb2[9].zzzz
  dp3 r0.w, cb2[7].yzwy, -r2.xyzx
  mad r1.w, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r2.x, cb2[8].w, -r0.w, l(1.000000)
  mul r2.x, r2.x, r2.x
  mul r2.x, r2.x, l(12.566371)
  div r1.w, r1.w, r2.x
  add r0.z, r0.z, -cb2[10].w
  mul_sat r0.z, r0.z, cb2[11].w
  mul r0.z, r0.z, r1.w
  mov_sat r0.w, r0.w
  mad r0.w, r0.w, r0.w, l(1.000000)
  mad r0.w, r0.w, l(0.05968310), l(-1.000000)
  mad r0.w, cb2[8].z, r0.w, l(1.000000)
  mul r2.xyz, r0.zzzz, cb2[11].xyzx
  mad r2.xyz, r0.wwww, cb2[10].xyzx, r2.xyzx
  mul r2.xyz, r2.xyzx, cb2[9].wwww
  add r4.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r2.xyz, r2.xyzx, r4.xyzx
  mad r2.xyz, r1.xyzx, r3.xyzx, r2.xyzx
else 
  mul r0.z, r10.z, cb2[6].x
  mad r0.w, cb2[6].x, r10.z, cb2[5].x
  lt r1.w, |r0.z|, l(0.000100)
  min r2.w, r0.w, l(64.000000)
  mul r2.w, r2.w, l(1.442695)
  exp r2.w, r2.w
  mov_sat r3.x, cb2[6].z
  lt r3.y, r0.w, l(0.000000)
  add r0.w, r0.w, l(1.000000)
  movc r0.w, r3.y, r2.w, r0.w
  add r0.w, r0.w, -cb2[6].z
  movc r0.z, r1.w, l(1.000000), r0.z
  div r0.z, r0.w, r0.z
  movc r0.z, r1.w, r3.x, r0.z
  mul r0.z, r0.z, cb2[5].z
  dp3 r0.w, r10.xyzx, r10.xyzx
  sqrt r1.w, r0.w
  mad r0.z, r0.z, r1.w, cb2[5].w
  exp r0.z, r0.z
  min r0.z, r0.z, l(1.000000)
  add r0.z, -r0.z, l(1.000000)
  rsq r0.w, r0.w
  mul r3.xyz, r0.wwww, r10.xyzx
  dp3 r0.w, cb2[7].yzwy, r3.xyzx
  mad_sat r0.w, cb2[8].y, r0.w, cb2[8].x
  add r3.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r3.xyzw, r0.wwww, r3.xyzw, cb2[4].xyzw
  mul r0.z, r0.z, r3.w
  add r3.xyz, -r1.xyzx, r3.xyzx
  mad r2.xyz, r0.zzzz, r3.xyzx, r1.xyzx
endif 
mul r1.xyzw, r2.xyzx, cb1[85].yyyy
ge r2.xyzw, r1.wyzw, l(0.00006104, 0.00006104, 0.00006104, 0.00006104)
and r1.xyzw, r1.xyzw, r2.xyzw
min r1.xyzw, r1.xyzw, l(65024.000000, 65024.000000, 64512.000000, 65024.000000)
store_uav_typed u0.xyzw, r0.xyyy, r1.xyzw
ret 
// Approximately 1149 instruction slots used
