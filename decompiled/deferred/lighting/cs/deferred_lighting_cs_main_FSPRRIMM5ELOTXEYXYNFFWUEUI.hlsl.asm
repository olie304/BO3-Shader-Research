//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:23:21 2021
//
//
// Buffer Definitions: 
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4 [unused]
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// cbuffer LightingPackCBuffer
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } lightConstantsCB[273];           // Offset:    0 Size: 65520
//
// }
//
// cbuffer RefProbePackCBuffer
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } refProbeConstantsCB[273];        // Offset:    0 Size: 61152
//
// }
//
// cbuffer RefProbeBlendPackCBuffer
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } refProbeAttenuationConstantsCB[682];// Offset:    0 Size: 65472
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for gPermutedTilingBuffer
// {
//
//   struct PermutedTilingBuffer
//   {
//       
//       uint2 data;                    // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:     8
//
// }
//
// Resource bind info for gDeferredCullBits
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// samplerPointClamp                 sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// GBufferDiffuseColor               texture  float4          2d             t0      1 
// GBufferNormalAndGloss             texture  float4          2d             t1      1 
// GBufferSpecularColorAndOcclusion    texture  float4          2d             t2      1 
// GBufferDepth                      texture   float          2d             t4      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// gDownsampledScene                 texture  float4          2d            t21      1 
// gMotionVectors                    texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// gPermutedTilingBuffer             texture  struct         r/o            t25      1 
// gDeferredCullBits                 texture  struct         r/o            t26      1 
// gSSAOTexture                      texture   float          2d            t27      1 
// gSSAODepthTexture                 texture   float          2d            t28      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// litBuffer                             UAV  float3          2d             u0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
// LightingPackCBuffer               cbuffer      NA          NA            cb9      1 
// RefProbePackCBuffer               cbuffer      NA          NA           cb10      1 
// RefProbeBlendPackCBuffer          cbuffer      NA          NA           cb11      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB1[86], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_constantbuffer CB9[4095], dynamicIndexed
dcl_constantbuffer CB10[3822], dynamicIndexed
dcl_constantbuffer CB11[4092], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s4, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_structured t25, 8
dcl_resource_structured t26, 4
dcl_resource_texture2d (float,float,float,float) t27
dcl_resource_texture2d (float,float,float,float) t28
dcl_resource_texture2darray (float,float,float,float) t31
dcl_uav_typed_texture2d (float,float,float,float) u0
dcl_input vThreadGroupID.x
dcl_input vThreadIDInGroup.xy
dcl_temps 41
dcl_thread_group 8, 8, 1
imad r0.x, cb2[57].x, l(12), vThreadGroupID.x
ld_structured_indexable(structured_buffer, stride=8)(mixed,mixed,mixed,mixed) r0.xy, r0.x, l(0), t25.xyxx
and r0.xz, r0.xxyx, l(4095, 0, 4095, 0)
imad r1.xy, r0.xzxx, l(8, 8, 0, 0), vThreadIDInGroup.xyxx
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.xyww, t1.xyzw
ftou r3.xy, cb1[44].xyxx
ult r3.xy, r1.xyxx, r3.xyxx
and r0.w, r3.y, r3.x
lt r3.x, l(0.000000), r2.z
and r0.w, r0.w, r3.x
if_z r0.w
  ret 
endif 
ge r3.x, r2.z, l(0.500000)
ld_indexable(texture2d)(float,float,float,float) r3.y, r1.xyww, t4.yxzw
ld_indexable(texture2d)(float,float,float,float) r4.xyz, r1.xyww, t0.xyzw
ld_indexable(texture2d)(float,float,float,float) r5.xyzw, r1.xyww, t2.xyzw
ld_aoffimmi_indexable(-1,0,0)(texture2d)(float,float,float,float) r6.xyz, r1.xyww, t2.xywz
ld_aoffimmi_indexable(0,-1,0)(texture2d)(float,float,float,float) r7.xyz, r1.xyww, t2.xywz
ld_aoffimmi_indexable(1,0,0)(texture2d)(float,float,float,float) r8.xyz, r1.xyww, t2.xywz
ld_aoffimmi_indexable(0,1,0)(texture2d)(float,float,float,float) r9.xyz, r1.xyzw, t2.xywz
utof r1.zw, r1.yyyx
add r3.zw, r1.wwwz, l(0.000000, 0.000000, 0.500000, 0.500000)
ge r10.x, r3.y, l(0.984375)
mul r4.w, r3.y, l(1.01587307)
mad r3.y, r3.y, l(64.000000), l(-63.000000)
movc r3.y, r10.x, r3.y, r4.w
max r3.y, r3.y, l(0.00000001)
rcp r10.y, r3.y
and r10.xy, r0.wwww, r10.xyxx
add r10.zw, r3.zzzw, -cb1[71].xxxy
mul r10.zw, r10.zzzw, cb1[44].zzzw
mad r10.zw, r10.zzzw, l(0.000000, 0.000000, 2.000000, -2.000000), l(0.000000, 0.000000, -1.000000, 1.000000)
mul r11.x, r10.z, cb1[12].x
mul r11.y, r10.w, cb1[13].y
mov r11.z, l(1.000000)
mul r11.xyz, r10.yyyy, r11.xyzx
mul r12.xyz, r11.yyyy, cb1[17].xyzx
mad r11.xyw, r11.xxxx, cb1[16].xyxz, r12.xyxz
mad r11.xyz, r11.zzzz, cb1[18].xyzx, r11.xywx
mad r0.w, r2.w, l(3.000000), l(0.500000)
ftou r0.w, r0.w
mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r2.xy, r2.xyxx, l(0.850000, 0.850000, 0.000000, 0.000000)
dp2 r2.w, r2.xyxx, r2.xyxx
add r12.zw, -r2.wwww, l(0.000000, 0.000000, 2.000000, 1.000000)
sqrt r2.w, r12.z
mul r12.xy, r2.wwww, r2.xyxx
and r13.xyzw, r0.wwww, l(2, 1, 2, 1)
movc r13.xyzw, r13.zwxy, l(-1.000000,-1.000000,1,1), l(1.000000,1.000000,0,0)
xor r0.w, r13.w, r13.z
movc r13.z, r0.w, l(-1.000000), l(1.000000)
mul r2.xyw, r13.xyxz, l(-1.000000, 0.000000, 0.000000, 1.000000)
mul r14.xyz, r13.xyzx, l(1.000000, -2.000000, 1.000000, 0.000000)
mul r12.xyz, r12.xywx, l(0.40824831, 0.70710677, 0.57735026, 0.000000)
mul r2.xyw, r2.xyxw, r12.yyyy
mad r2.xyw, r14.xyxz, r12.xxxx, r2.xyxw
mad r12.xyz, r13.xyzx, r12.zzzz, r2.xywx
movc r0.w, r3.x, l(-0.500000), l(-0.00146628)
add r0.w, r0.w, r2.z
mul_sat r2.y, r0.w, l(2.00982332)
dp3 r0.w, -r11.xyzx, -r11.xyzx
rsq r0.w, r0.w
mul r13.xyz, r0.wwww, -r11.xyzx
dp2 r2.z, r1.wzww, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r2.z, r2.z
mul r2.z, r2.z, l(52.982918)
frc r2.z, r2.z
mad r2.z, r2.z, l(6.28318548), cb1[70].w
sincos r14.x, r15.x, r2.z
dp2 r1.z, r1.zwzz, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r1.z, r1.z
mul r1.z, r1.z, l(52.982918)
frc r1.z, r1.z
mad r1.z, r1.z, l(6.28318548), cb1[70].w
sincos r16.x, r17.x, r1.z
dp3_sat r2.x, r12.xyzx, r13.xyzx
dp3 r1.z, -r13.xyzx, r12.xyzx
add r1.z, r1.z, r1.z
mad r18.xyz, r12.xyzx, -r1.zzzz, -r13.xyzx
mul r1.z, r2.y, l(17.000000)
exp r1.z, r1.z
add r1.z, r1.z, l(2.000000)
div r1.z, l(2.000000), r1.z
sqrt r1.w, r1.z
mul r2.zw, r3.zzzw, cb1[44].zzzw
sample_l_indexable(texture2d)(float,float,float,float) r2.z, r2.zwzz, t27.yzxw, s4, l(0.000000)
mul r2.w, r2.z, r5.z
lt r3.y, l(0.83333331), r2.y
lt r3.z, l(60.000000), r10.y
and r3.y, r3.z, r3.y
if_nz r3.y
  mul r3.yzw, r11.yyyy, cb1[9].xxyw
  mad r3.yzw, r11.xxxx, cb1[8].xxyw, r3.yyzw
  mad r3.yzw, r11.zzzz, cb1[10].xxyw, r3.yyzw
  add r3.yzw, r3.yyzw, cb1[11].xxyw
  mad r16.yzw, r18.xxyz, l(0.000000, 2000.000000, 2000.000000, 2000.000000), r11.xxyz
  mul r17.yzw, r16.zzzz, cb1[9].xxyw
  mad r17.yzw, r16.yyyy, cb1[8].xxyw, r17.yyzw
  mad r16.yzw, r16.wwww, cb1[10].xxyw, r17.yyzw
  add r16.yzw, r16.yyzw, cb1[11].xxyw
  ge r4.w, r16.w, r3.w
  if_nz r4.w
    mul r10.zw, cb1[44].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
    rcp r19.z, r3.w
    mul r19.xy, r3.yzyy, r19.zzzz
    rcp r20.z, r16.w
    mul r20.xy, r16.yzyy, r20.zzzz
    lt r3.yz, l(0.000000, 1.000000, 1.000000, 0.000000), r20.xxyx
    mad r21.xyzw, r16.yyzz, r20.zzzz, l(-1.000000, 1.000000, -1.000000, 1.000000)
    mad r22.xyzw, r16.yyzz, r20.zzzz, -r19.xxyy
    lt r14.zw, r20.xxxy, l(0.000000, 0.000000, -1.000000, -1.000000)
    div r21.xyzw, r21.xyzw, r22.xyzw
    and r14.zw, r14.zzzw, r21.yyyw
    movc r3.yz, r3.yyzy, r21.xxzx, r14.zzwz
    max r3.y, r3.z, r3.y
    add r17.yzw, r19.xxyz, -r20.xxyz
    mad r17.yzw, r3.yyyy, r17.yyzw, r20.xxyz
    mad r3.yz, r19.xxyx, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
    mad r14.zw, r17.yyyz, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
    add r3.yz, r3.yyzy, -r14.zzwz
    mul r3.yz, |r3.yyzy|, r10.zzwz
    max r3.y, r3.z, r3.y
    max r3.y, r3.y, l(1.000000)
    rcp r3.y, r3.y
    mad r19.xyz, r19.xyzx, l(0.500000, -0.500000, 1.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    mad r20.xyw, r17.yzyw, l(0.500000, -0.500000, 0.000000, 1.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    add r21.xyz, -r19.xyzx, r20.xywx
    mad r19.xyz, r3.yyyy, r21.xyzx, r19.xyzx
    add r20.xyw, -r19.xyxz, r20.xyxw
    mul r21.xyz, r20.xywx, l(0.031250, 0.031250, 0.031250, 0.000000)
    mul r3.yz, r10.zzwz, |r21.xxyx|
    max r3.y, r3.z, r3.y
    log r3.y, r3.y
    round_pi r3.y, r3.y
    max r3.y, r3.y, l(0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r3.z, r19.xyxx, t28.yzxw, s1, r3.y
    mad r22.xyz, r20.xywx, l(0.031250, 0.031250, 0.031250, 0.000000), r19.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r22.xyxx, t28.yzwx, s1, r3.y
    min r3.z, |r3.z|, |r4.w|
    mul r3.z, r22.z, r3.z
    lt r3.z, r3.z, l(1.000000)
    and r6.w, r3.z, l(1)
    mad r22.xyz, r20.xywx, l(0.062500, 0.062500, 0.062500, 0.000000), r19.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r22.xyxx, t28.yzwx, s1, r3.y
    min r4.w, |r4.w|, |r7.w|
    mul r4.w, r22.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    bfi r3.z, l(1), l(0), r3.z, l(2)
    movc r3.z, r4.w, r3.z, r6.w
    mad r22.xyz, r20.xywx, l(0.093750, 0.093750, 0.093750, 0.000000), r19.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r22.xyxx, t28.yzwx, s1, r3.y
    min r6.w, |r7.w|, |r4.w|
    mul r6.w, r22.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r3.z, l(4)
    movc r3.z, r6.w, r7.w, r3.z
    mad r22.xyz, r20.xywx, l(0.125000, 0.125000, 0.125000, 0.000000), r19.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r22.xyxx, t28.yzwx, s1, r3.y
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r22.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    iadd r7.w, r3.z, l(8)
    movc r3.z, r4.w, r7.w, r3.z
    mad r22.xyz, r20.xywx, l(0.156250, 0.156250, 0.156250, 0.000000), r19.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r22.xyxx, t28.yzwx, s1, r3.y
    min r6.w, |r6.w|, |r4.w|
    mul r6.w, r22.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r3.z, l(16)
    movc r3.z, r6.w, r7.w, r3.z
    mad r22.xyz, r20.xywx, l(0.187500, 0.187500, 0.187500, 0.000000), r19.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r22.xyxx, t28.yzwx, s1, r3.y
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r22.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    iadd r7.w, r3.z, l(32)
    movc r3.z, r4.w, r7.w, r3.z
    mad r22.xyz, r20.xywx, l(0.218750, 0.218750, 0.218750, 0.000000), r19.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r22.xyxx, t28.yzwx, s1, r3.y
    min r6.w, |r6.w|, |r4.w|
    mul r6.w, r22.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r3.z, l(64)
    movc r3.z, r6.w, r7.w, r3.z
    mad r22.xyz, r20.xywx, l(0.250000, 0.250000, 0.250000, 0.000000), r19.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r22.xyxx, t28.yzwx, s1, r3.y
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r22.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    iadd r7.w, r3.z, l(128)
    movc r3.z, r4.w, r7.w, r3.z
    mad r22.xyz, r20.xywx, l(0.281250, 0.281250, 0.281250, 0.000000), r19.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r22.xyxx, t28.yzwx, s1, r3.y
    min r6.w, |r6.w|, |r4.w|
    mul r6.w, r22.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r3.z, l(256)
    movc r3.z, r6.w, r7.w, r3.z
    mad r22.xyz, r20.xywx, l(0.312500, 0.312500, 0.312500, 0.000000), r19.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r22.xyxx, t28.yzwx, s1, r3.y
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r22.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    iadd r7.w, r3.z, l(512)
    movc r3.z, r4.w, r7.w, r3.z
    mad r22.xyz, r20.xywx, l(0.343750, 0.343750, 0.343750, 0.000000), r19.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r22.xyxx, t28.yzwx, s1, r3.y
    min r6.w, |r6.w|, |r4.w|
    mul r6.w, r22.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r3.z, l(1024)
    movc r3.z, r6.w, r7.w, r3.z
    mad r22.xyz, r20.xywx, l(0.375000, 0.375000, 0.375000, 0.000000), r19.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r22.xyxx, t28.yzwx, s1, r3.y
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r22.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    iadd r7.w, r3.z, l(2048)
    movc r3.z, r4.w, r7.w, r3.z
    mad r22.xyz, r20.xywx, l(0.406250, 0.406250, 0.406250, 0.000000), r19.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r22.xyxx, t28.yzwx, s1, r3.y
    min r6.w, |r6.w|, |r4.w|
    mul r6.w, r22.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r3.z, l(4096)
    movc r3.z, r6.w, r7.w, r3.z
    mad r22.xyz, r20.xywx, l(0.437500, 0.437500, 0.437500, 0.000000), r19.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r22.xyxx, t28.yzwx, s1, r3.y
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r22.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    iadd r7.w, r3.z, l(8192)
    movc r3.z, r4.w, r7.w, r3.z
    mad r22.xyz, r20.xywx, l(0.468750, 0.468750, 0.468750, 0.000000), r19.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r22.xyxx, t28.yzwx, s1, r3.y
    min r6.w, |r6.w|, |r4.w|
    mul r6.w, r22.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r3.z, l(0x00004000)
    movc r3.z, r6.w, r7.w, r3.z
    mad r22.xyz, r20.xywx, l(0.500000, 0.500000, 0.500000, 0.000000), r19.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r22.xyxx, t28.yzwx, s1, r3.y
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r22.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    iadd r7.w, r3.z, l(0x00008000)
    movc r3.z, r4.w, r7.w, r3.z
    mad r22.xyz, r20.xywx, l(0.531250, 0.531250, 0.531250, 0.000000), r19.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r22.xyxx, t28.yzwx, s1, r3.y
    min r6.w, |r6.w|, |r4.w|
    mul r6.w, r22.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r3.z, l(0x00010000)
    movc r3.z, r6.w, r7.w, r3.z
    mad r22.xyz, r20.xywx, l(0.562500, 0.562500, 0.562500, 0.000000), r19.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r22.xyxx, t28.yzwx, s1, r3.y
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r22.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    iadd r7.w, r3.z, l(0x00020000)
    movc r3.z, r4.w, r7.w, r3.z
    mad r22.xyz, r20.xywx, l(0.593750, 0.593750, 0.593750, 0.000000), r19.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r22.xyxx, t28.yzwx, s1, r3.y
    min r6.w, |r6.w|, |r4.w|
    mul r6.w, r22.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r3.z, l(0x00040000)
    movc r3.z, r6.w, r7.w, r3.z
    mad r22.xyz, r20.xywx, l(0.625000, 0.625000, 0.625000, 0.000000), r19.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r22.xyxx, t28.yzwx, s1, r3.y
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r22.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    iadd r7.w, r3.z, l(0x00080000)
    movc r3.z, r4.w, r7.w, r3.z
    mad r22.xyz, r20.xywx, l(0.656250, 0.656250, 0.656250, 0.000000), r19.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r22.xyxx, t28.yzwx, s1, r3.y
    min r6.w, |r6.w|, |r4.w|
    mul r6.w, r22.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r3.z, l(0x00100000)
    movc r3.z, r6.w, r7.w, r3.z
    mad r22.xyz, r20.xywx, l(0.687500, 0.687500, 0.687500, 0.000000), r19.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r22.xyxx, t28.yzwx, s1, r3.y
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r22.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    iadd r7.w, r3.z, l(0x00200000)
    movc r3.z, r4.w, r7.w, r3.z
    mad r22.xyz, r20.xywx, l(0.718750, 0.718750, 0.718750, 0.000000), r19.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r22.xyxx, t28.yzwx, s1, r3.y
    min r6.w, |r6.w|, |r4.w|
    mul r6.w, r22.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r3.z, l(0x00400000)
    movc r3.z, r6.w, r7.w, r3.z
    mad r22.xyz, r20.xywx, l(0.750000, 0.750000, 0.750000, 0.000000), r19.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r22.xyxx, t28.yzwx, s1, r3.y
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r22.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    iadd r7.w, r3.z, l(0x00800000)
    movc r3.z, r4.w, r7.w, r3.z
    mad r22.xyz, r20.xywx, l(0.781250, 0.781250, 0.781250, 0.000000), r19.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r22.xyxx, t28.yzwx, s1, r3.y
    min r6.w, |r6.w|, |r4.w|
    mul r6.w, r22.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r3.z, l(0x01000000)
    movc r3.z, r6.w, r7.w, r3.z
    mad r22.xyz, r20.xywx, l(0.812500, 0.812500, 0.812500, 0.000000), r19.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r22.xyxx, t28.yzwx, s1, r3.y
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r22.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    iadd r7.w, r3.z, l(0x02000000)
    movc r3.z, r4.w, r7.w, r3.z
    mad r22.xyz, r20.xywx, l(0.843750, 0.843750, 0.843750, 0.000000), r19.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r22.xyxx, t28.yzwx, s1, r3.y
    min r6.w, |r6.w|, |r4.w|
    mul r6.w, r22.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r3.z, l(0x04000000)
    movc r3.z, r6.w, r7.w, r3.z
    mad r22.xyz, r20.xywx, l(0.875000, 0.875000, 0.875000, 0.000000), r19.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r22.xyxx, t28.yzwx, s1, r3.y
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r22.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    iadd r7.w, r3.z, l(0x08000000)
    movc r3.z, r4.w, r7.w, r3.z
    mad r22.xyz, r20.xywx, l(0.906250, 0.906250, 0.906250, 0.000000), r19.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r22.xyxx, t28.yzwx, s1, r3.y
    min r6.w, |r6.w|, |r4.w|
    mul r6.w, r22.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r3.z, l(0x10000000)
    movc r3.z, r6.w, r7.w, r3.z
    mad r22.xyz, r20.xywx, l(0.937500, 0.937500, 0.937500, 0.000000), r19.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r22.xyxx, t28.yzwx, s1, r3.y
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r22.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    iadd r7.w, r3.z, l(0x20000000)
    movc r3.z, r4.w, r7.w, r3.z
    mad r22.xyz, r20.xywx, l(0.968750, 0.968750, 0.968750, 0.000000), r19.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r22.xyxx, t28.yzwx, s1, r3.y
    min r6.w, |r6.w|, |r4.w|
    mul r6.w, r22.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r3.z, l(0x40000000)
    movc r3.z, r6.w, r7.w, r3.z
    sample_l_indexable(texture2d)(float,float,float,float) r3.y, r14.zwzz, t28.yxzw, s1, r3.y
    min r3.y, |r4.w|, |r3.y|
    mul r3.y, r17.w, r3.y
    lt r3.y, r3.y, l(1.000000)
    iadd r4.w, r3.z, l(0x80000000)
    movc r3.y, r3.y, r4.w, r3.z
    mov r22.w, l(-1)
    mov r23.z, l(-1)
    mov r10.zw, l(0,0,0,0)
    mov r3.z, l(0)
    mov r4.w, r3.y
    mov r6.w, r20.z
    mov r24.yz, l(0,0,0,0)
    mov r22.z, l(0)
    mov r7.w, l(0)
    loop 
      breakc_z r4.w
      firstbit_lo r22.y, r4.w
      ishl r8.w, l(1), r22.y
      xor r22.x, r4.w, r8.w
      utof r9.w, r22.y
      mul r9.w, r9.w, l(0.031250)
      mad r17.yzw, r20.xxyw, r9.wwww, r19.xxyz
      sample_l_indexable(texture2d)(float,float,float,float) r9.w, r17.yzyy, t28.yzwx, s1, l(0.000000)
      mul r13.w, r17.w, |r9.w|
      lt r13.w, r13.w, l(1.000000)
      if_nz r13.w
        if_nz r22.z
          lt r13.w, r3.w, |r9.w|
          lt r14.z, r6.w, r17.w
          and r13.w, r13.w, r14.z
          movc r14.zw, r13.wwww, r17.yyyz, r10.zzzw
          mov r22.z, r17.w
          mov r24.x, r6.w
          movc r25.xyz, r13.wwww, r22.zxyz, r24.xyzx
          mov r4.w, r22.x
          mov r22.z, l(-1)
          mov r10.zw, r14.zzzw
          mov r6.w, r25.x
          mov r24.yz, r25.yyzy
          continue 
        endif 
        mov r13.w, r24.y
        mov r14.z, l(0)
      else 
        not r8.w, r8.w
        and r13.w, r8.w, r24.y
        mov r14.z, r22.z
      endif 
      if_nz r7.w
        mov r4.w, r22.x
        mov r24.y, r13.w
        mov r22.z, r14.z
        mov r7.w, l(-1)
        continue 
      endif 
      mov r16.yz, r10.zzwz
      mov r8.w, r3.z
      mov r14.w, r6.w
      mov r24.y, r13.w
      mov r24.x, r24.z
      mov r22.z, r14.z
      mov r23.w, r7.w
      mov r15.w, r17.w
      mov r19.w, |r9.w|
      mov r21.w, l(0)
      loop 
        ige r24.w, r21.w, l(4)
        breakc_nz r24.w
        itof r24.w, r21.w
        add r24.w, r24.w, l(1.000000)
        mul r24.w, r24.w, l(0.250000)
        mad r25.xyz, r21.xyzx, r24.wwww, r17.yzwy
        sample_l_indexable(texture2d)(float,float,float,float) r24.w, r25.xyxx, t28.yzwx, s1, l(0.000000)
        mul r25.w, r25.z, |r24.w|
        lt r25.w, r25.w, l(1.000000)
        if_nz r25.w
          lt r25.w, r3.w, |r24.w|
          add r26.x, -r15.w, r25.z
          add r26.y, -r19.w, |r24.w|
          mul r26.z, r15.w, r25.z
          mul r26.y, r26.z, |r26.y|
          lt r26.x, r26.y, |r26.x|
          lt r26.z, r14.w, r25.z
          and r26.yw, r25.wwww, r26.xxxz
          movc r23.xy, r26.wwww, r22.xyxx, r24.yxyy
          or r26.x, r26.x, r26.z
          and r25.w, r25.w, r26.x
          movc r25.xy, r25.wwww, r25.xyxx, r16.yzyy
          movc r26.x, r26.y, l(1.000000), r8.w
          movc r25.w, r25.w, r25.z, r14.w
          movc r27.xyzw, r26.yyyy, r22.xyzw, r23.xyzw
          mov r8.w, r26.x
          mov r16.yz, r25.xxyx
          mov r14.w, r25.w
          mov r24.xy, r27.yxyy
          mov r22.z, r27.z
          mov r23.w, r27.w
          break 
        endif 
        mov r15.w, r25.z
        mov r19.w, |r24.w|
        iadd r21.w, r21.w, l(1)
      endloop 
      mov r10.zw, r16.yyyz
      mov r3.z, r8.w
      mov r6.w, r14.w
      mov r24.yz, r24.yyxy
      mov r7.w, r23.w
      mov r4.w, r22.x
    endloop 
    rcp r3.y, r6.w
    add r3.y, -r3.w, r3.y
    add r3.w, -r3.w, r16.w
    div r3.y, |r3.y|, |r3.w|
    min r19.x, r3.y, l(1.000000)
    countbits r3.y, r24.y
    utof r3.y, r3.y
    add r3.y, r3.y, l(1.000000)
    iadd r3.w, -r24.z, l(32)
    utof r3.w, r3.w
    div r3.y, r3.y, r3.w
    min r19.y, r3.y, l(1.000000)
  else 
    mov r19.xy, l(1.000000,0,0,0)
    mov r3.z, l(0)
  endif 
  add r3.y, r2.y, l(-0.83333331)
  mul r3.y, r3.y, l(5.99999952)
  max r3.y, r3.y, l(0.000000)
  mad r3.w, r3.y, l(-2.000000), l(3.000000)
  mul r3.y, r3.y, r3.y
  mul r3.y, r3.y, r3.w
  add r3.w, r10.y, l(-60.000000)
  mul_sat r3.w, r3.w, l(0.01666667)
  mad r4.w, r3.w, l(-2.000000), l(3.000000)
  mul r3.w, r3.w, r3.w
  mul r3.w, r3.w, r4.w
  mul r3.y, r3.w, r3.y
  mul r3.y, r19.y, r3.y
  mad r14.zw, r10.zzzw, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
  add r14.zw, |r14.zzzw|, l(0.000000, 0.000000, -0.500000, -0.500000)
  add_sat r14.zw, r14.zzzw, r14.zzzw
  mad r16.yz, r14.zzwz, l(0.000000, -2.000000, -2.000000, 0.000000), l(0.000000, 3.000000, 3.000000, 0.000000)
  mul r14.zw, r14.zzzw, r14.zzzw
  mad r14.zw, -r16.yyyz, r14.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  mul r3.w, r14.w, r14.z
  mul r3.y, r3.w, r3.y
  mul r3.w, r19.x, l(10.000000)
  min r3.w, r3.w, l(1.000000)
  add r4.w, -r3.z, l(1.000000)
  mul r4.w, r3.y, r4.w
  add r3.w, r3.w, l(-1.000000)
  mad r3.w, r4.w, r3.w, l(1.000000)
  mul r3.y, r3.z, r3.y
  lt r3.z, l(0.000000), r3.y
  if_nz r3.z
    sample_l_indexable(texture2d)(float,float,float,float) r14.zw, r10.zwzz, t22.zwxy, s4, l(0.000000)
    add r16.yz, |r14.zzwz|, l(0.000000, -0.500000, -0.500000, 0.000000)
    add_sat r16.yz, r16.yyzy, r16.yyzy
    add r17.yz, |r14.zzwz|, |r14.zzwz|
    min r17.yz, r17.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
    mul r17.yz, r17.yyzy, l(0.000000, 10.000000, 10.000000, 0.000000)
    mad r16.yz, r16.yyzy, l(0.000000, 30.000000, 30.000000, 0.000000), r17.yyzy
    ge r14.zw, r14.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
    movc r14.zw, r14.zzzw, r16.yyyz, -r16.yyyz
    mad r10.yz, -r14.zzwz, cb1[44].zzwz, r10.zzwz
    sample_l_indexable(texture2d)(float,float,float,float) r10.yzw, r10.yzyy, t21.wxyz, s4, l(0.000000)
    mul r10.yzw, r10.yyzw, cb1[85].xxxx
    mul r10.yzw, r3.yyyy, r10.yyzw
  else 
    mov r10.yzw, l(0,0,0,0)
    mov r3.y, l(0)
  endif 
else 
  mov r10.yzw, l(0,0,0,0)
  mov r3.yw, l(0,0,0,1.000000)
endif 
dp3 r3.z, r12.xyzx, cb2[17].xyzx
mov_sat r4.w, r3.z
movc r6.w, r3.x, |r3.z|, r4.w
ge r7.w, l(0.000000), r6.w
if_nz r7.w
  mov r8.w, l(0)
endif 
if_z r7.w
  mul r16.yzw, r11.yyyy, cb2[29].xxyz
  mad r16.yzw, r11.xxxx, cb2[28].xxyz, r16.yyzw
  mad r16.yzw, r11.zzzz, cb2[30].xxyz, r16.yyzw
  add r16.yzw, r16.yyzw, cb2[31].xxyz
  add r7.w, r16.w, -cb2[17].w
  mad r7.w, -r7.w, l(0.00006104), l(1.000000)
  mov_sat r9.w, r7.w
  eq r9.w, r7.w, r9.w
  if_nz r9.w
    mov r9.w, l(0)
    mov r13.w, l(0)
    loop 
      ge r14.z, r9.w, l(3.000000)
      breakc_nz r14.z
      ftou r14.z, r9.w
      add r17.yz, r16.yyzy, -cb2[r14.z + 20].xxyx
      max r14.w, |r17.z|, |r17.y|
      mul r13.w, r14.w, cb2[r14.z + 20].z
      lt r14.z, r13.w, l(1.000000)
      if_nz r14.z
        break 
      endif 
      add r9.w, r9.w, l(1.000000)
      mov r13.w, l(0)
    endloop 
  else 
    mov r9.w, l(3.000000)
    mov r13.w, l(0)
  endif 
  ge r14.z, r9.w, l(3.000000)
  if_nz r14.z
    mul r17.yzw, l(0.000000, 128.000000, 0.500000, 0.500000), cb2[27].zzxy
    rcp r19.xz, r17.yyyy
    mov r19.y, -r19.z
    mad r17.yzw, r16.yyzy, r19.xxyz, r17.zzwz
    add r19.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r17.yzw, r17.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r17.yzw, r19.xxyz, r17.yyzw
    mul r19.xy, r17.wzww, cb2[32].xxxx
    round_ni r19.xy, r19.xyxx
    mul r14.w, r19.y, cb2[27].x
    mad r14.w, r14.w, cb2[32].x, r19.x
    ftou r14.w, r14.w
    iadd r14.w, r14.w, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.w, r14.w, l(0), t23.xxxx
    and r19.x, r15.w, l(0x40000000)
    ishl r19.y, r15.w, l(2)
    if_z r19.x
      and r19.x, r15.w, l(0x01ffffff)
      iadd r20.x, r14.w, r19.x
      ushr r14.w, r15.w, l(25)
      utof r14.w, r14.w
      mul r17.yzw, r14.wwww, r17.yyzw
      frc r17.yzw, r17.yyzw
      mul r17.yzw, r17.yyzw, l(0.000000, 128.000000, 128.000000, 128.000000)
      ftou r17.yzw, r17.yyzw
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.z, r20.x, l(0), t23.xxxx
      ushr r19.xz, r17.wwzw, l(6, 0, 6, 0)
      and r14.w, r20.z, l(0xc0000000)
      iadd r15.w, r20.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.w, r15.w, l(0), t23.xxxx
      movc r15.w, r19.z, r20.z, r15.w
      ushr r19.z, r15.w, l(13)
      movc r15.w, r19.x, r19.z, r15.w
      and r15.w, r15.w, l(8191)
      iadd r21.x, r15.w, r20.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r21.z, r21.x, l(0), t23.xxxx
      mov r20.y, l(0)
      mov r21.y, l(1)
      movc r19.xzw, r14.wwww, r20.xxyz, r21.xxyz
      movc r21.yz, r14.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r22.xy, r17.wzww, r21.yyyy
      and r22.xy, r22.xyxx, l(1, 1, 0, 0)
      and r15.w, r19.w, l(0xc0000000)
      iadd r20.w, r19.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.w, r20.w, l(0), t23.xxxx
      movc r20.w, r22.y, r19.w, r20.w
      ushr r21.y, r20.w, l(13)
      movc r20.w, r22.x, r21.y, r20.w
      and r20.w, r20.w, l(8191)
      iadd r21.x, r19.x, r20.w
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r21.w, r21.x, l(0), t23.xxxx
      movc r19.xzw, r15.wwww, r19.xxzw, r21.xxzw
      movc r19.xzw, r14.wwww, r20.xxyz, r19.xxzw
      and r14.w, r19.w, l(0xc0000000)
      if_z r14.w
        iadd r14.w, -r19.z, l(6)
        ushr r20.xy, r17.wzww, r14.wwww
        or r14.w, r19.w, l(0x40000000)
        bfi r15.w, l(1), l(1), r20.y, l(0)
        bfi r15.w, l(1), l(0), r20.x, r15.w
        imul null, r15.w, r15.w, l(10)
        ushr r14.w, r14.w, r15.w
        and r14.w, r14.w, l(1023)
        iadd r20.x, r14.w, r19.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.w, r20.x, l(0), t23.xxxx
        iadd r20.yz, r19.zzzz, l(0, 1, 2, 0)
        iadd r14.w, -r20.y, l(6)
        ushr r21.xy, r17.wzww, r14.wwww
        and r14.w, r20.w, l(0xc0000000)
        or r15.w, r20.w, l(0x40000000)
        bfi r19.z, l(1), l(1), r21.y, l(0)
        bfi r19.z, l(1), l(0), r21.x, r19.z
        imul null, r19.z, r19.z, l(10)
        ushr r15.w, r15.w, r19.z
        and r15.w, r15.w, l(1023)
        iadd r21.x, r15.w, r20.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r21.z, r21.x, l(0), t23.xxxx
        mov r21.y, r20.z
        movc r21.xyz, r14.wwww, r20.xywx, r21.xyzx
        iadd r15.w, -r21.y, l(6)
        ushr r20.yz, r17.wwzw, r15.wwww
        and r15.w, r21.z, l(0xc0000000)
        or r19.z, r21.z, l(0x40000000)
        bfi r20.z, l(1), l(1), r20.z, l(0)
        bfi r20.y, l(1), l(0), r20.y, r20.z
        imul null, r20.y, r20.y, l(10)
        ushr r19.z, r19.z, r20.y
        and r19.z, r19.z, l(1023)
        iadd r22.x, r19.z, r21.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r22.y, r22.x, l(0), t23.xxxx
        movc r20.yz, r15.wwww, r21.xxzx, r22.xxyx
        movc r19.xw, r14.wwww, r20.xxxw, r20.yyyz
      endif 
      and r14.w, r19.w, l(0xc0000000)
      if_z r14.w
        ubfe r15.w, l(14), l(15), r19.w
        utof r15.w, r15.w
        mul r15.w, r15.w, cb2[27].w
        mul r15.w, r15.w, l(0.00006104)
        and r20.xy, r19.wwww, l(0x00007fff, 0x20000000, 0, 0)
        utof r19.z, r20.x
        mul r19.z, r19.z, cb2[27].w
        mul r19.z, r19.z, l(0.00003052)
        and r20.x, r17.z, l(3)
        iadd r20.x, r19.x, r20.x
        iadd r20.x, r20.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.x, r20.x, l(0), t23.xxxx
        bfi r21.xyz, l(2, 2, 1, 0), l(3, 1, 4, 0), r17.yzwy, l(0, 0, 0, 0)
        ushr r17.y, r20.x, r21.x
        and r17.y, r17.y, l(255)
        utof r17.y, r17.y
        mul r17.y, r19.z, r17.y
        mad r17.y, r17.y, l(0.00392157), r15.w
        iadd r17.z, r21.y, l(1)
        ubfe r17.w, l(1), l(1), r17.w
        iadd r17.z, r17.w, r17.z
        iadd r17.z, r17.z, r19.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.z, r17.z, l(0), t23.xxxx
        ushr r17.z, r17.z, r21.z
        and r17.z, r17.z, l(0x0000ffff)
        utof r17.z, r17.z
        mul r17.z, r19.z, r17.z
        mad r15.w, r17.z, l(0.00001526), r15.w
        movc r19.y, r20.y, r17.y, r15.w
      else 
        and r15.w, r19.w, l(0x80000000)
        iadd r17.y, r19.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.y, r17.y, l(0), t23.xxxx
        movc r15.w, r15.w, r17.y, l(0)
        ishl r17.y, r19.w, l(2)
        ushr r17.z, r15.w, l(16)
        f16tof32 r17.z, r17.z
        and r15.w, r15.w, l(0x0000ffff)
        f16tof32 r15.w, r15.w
        mad r17.y, r16.y, r17.z, r17.y
        mad r15.w, r16.z, r15.w, r17.y
        movc r19.y, r14.w, r15.w, r19.y
      endif 
    endif 
    mad r14.w, -cb2[27].z, l(2.000000), r16.w
    lt r14.w, r19.y, r14.w
    movc r8.w, r14.w, l(0), l(1.000000)
  endif 
  if_z r14.z
    if_z cb2[58].y
      ftou r14.z, r9.w
      add r17.yz, r16.yyzy, -cb2[r14.z + 20].xxyx
      mul r14.zw, r17.yyyz, cb2[r14.z + 20].zzzz
      mad r19.xy, r14.zwzz, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r14.z, cb2[26].y
      add r19.z, r9.w, r14.z
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r14.z, r19.xyzx, t13.xxxx, s13, r7.w
      sample_l_indexable(texture2darray)(float,float,float,float) r14.w, r19.xyzx, t31.yzwx, s0, l(0.000000)
      add r14.z, r14.w, r14.z
      add_sat r14.z, r14.z, l(-1.000000)
      mul r14.w, r14.z, r14.z
      mul r8.w, r14.z, r14.w
    endif 
    if_nz cb2[58].y
      mov r19.x, -r14.x
      ftou r14.z, r9.w
      add r9.w, r9.w, l(1.000000)
      min r9.w, r9.w, l(2.000000)
      ftou r9.w, r9.w
      add r13.w, -r13.w, l(1.000000)
      mul r13.w, r13.w, l(28.000000)
      ftou r13.w, r13.w
      add r17.yz, r16.yyzy, -cb2[r14.z + 20].xxyx
      mul r17.yz, r17.yyzy, cb2[r14.z + 20].zzzz
      mad r17.yz, r17.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      add r16.yz, r16.yyzy, -cb2[r9.w + 20].xxyx
      mul r16.yz, r16.yyzy, cb2[r9.w + 20].zzzz
      mad r16.yz, r16.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      mov r19.y, r15.x
      mov r19.z, r14.x
      mov r14.w, l(0)
      mov r15.w, l(0)
      loop 
        uge r16.w, r15.w, l(8)
        breakc_nz r16.w
        ult r16.w, r13.w, r15.w
        movc r20.xy, r16.wwww, r16.yzyy, r17.yzyy
        movc r17.w, r16.w, cb2[r9.w + 20].w, cb2[r14.z + 20].w
        movc r16.w, r16.w, r9.w, r14.z
        dp2 r21.x, icb[r15.w + 0].yxyy, r19.xyxx
        dp2 r21.y, icb[r15.w + 0].yxyy, r19.yzyy
        mad r20.xy, r21.xyxx, r17.wwww, r20.xyxx
        iadd r16.w, r16.w, cb2[26].y
        utof r20.z, r16.w
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r16.w, r20.xyzx, t13.xxxx, s13, r7.w
        sample_l_indexable(texture2darray)(float,float,float,float) r17.w, r20.xyzx, t31.yzwx, s0, l(0.000000)
        add r16.w, r16.w, r17.w
        add_sat r16.w, r16.w, l(-1.000000)
        mad r14.w, r16.w, l(0.125000), r14.w
        iadd r15.w, r15.w, l(1)
      endloop 
      mul r7.w, r14.w, r14.w
      mul r8.w, r14.w, r7.w
    endif 
  endif 
endif 
add r7.w, -r2.y, l(1.000000)
mul r9.w, r7.w, l(5.000000)
mad r13.w, r7.w, l(5.000000), l(-2.500000)
mul r13.w, r13.w, l(0.400000)
max r13.w, r13.w, l(0.000000)
mul r13.w, r13.w, l(100.000000)
mad r14.zw, -r7.wwww, l(0.000000, 0.000000, 10.000000, 5.000000), l(0.000000, 0.000000, 6.857410, 7.085000)
exp r14.z, r14.z
mul r14.z, r2.x, r14.z
mul r15.w, r7.w, r9.w
mad r14.w, -r15.w, l(2.015905), r14.w
exp r14.w, r14.w
mul r14.w, r2.x, r14.w
mul r14.zw, r14.zzzw, l(0.000000, 0.000000, 9.136810, 9.708090)
max r14.z, r14.w, r14.z
max r14.z, r14.z, l(1.268160)
iadd r14.w, cb2[0].y, -cb2[58].x
ushr r15.w, r0.y, l(24)
ubfe r0.y, l(10), l(12), r0.y
mov r19.yz, l(0,0,1.000000,0)
mov r20.xy, l(0,0,0,0)
mov r21.x, l(1.000000)
mov r22.xy, l(0,0,0,0)
mov r23.xy, l(0,0,0,0)
mov r24.xyzw, l(0,0,0,0)
mov r25.yzw, l(0,0,0,0)
mov r16.y, l(0)
loop 
  ieq r16.z, r16.y, l(2)
  breakc_nz r16.z
  movc r16.z, r16.y, r0.y, r15.w
  uge r16.w, r16.z, r14.w
  ult r17.y, r16.z, cb2[0].y
  and r16.w, r16.w, r17.y
  if_nz r16.w
    imul null, r16.z, r16.z, l(14)
    add r17.yzw, r11.xxyz, -cb10[r16.z + 0].xxyz
    and r16.w, l(0x0000ffff), cb10[r16.z + 7].z
    ubfe r19.w, l(6), l(25), cb10[r16.z + 7].z
    imul null, r20.w, r16.w, l(6)
    dp3 r21.z, cb11[r20.w + 0].xyzx, r17.yzwy
    add_sat r21.z, r21.z, cb11[r20.w + 0].w
    dp3 r21.w, cb11[r20.w + 1].xyzx, r17.yzwy
    add_sat r21.w, r21.w, cb11[r20.w + 1].w
    mul r21.z, r21.w, r21.z
    dp3 r21.w, cb11[r20.w + 2].xyzx, r17.yzwy
    add_sat r21.w, r21.w, cb11[r20.w + 2].w
    mul r21.z, r21.w, r21.z
    dp3 r21.w, cb11[r20.w + 3].xyzx, r17.yzwy
    add_sat r21.w, r21.w, cb11[r20.w + 3].w
    mul r21.z, r21.w, r21.z
    dp3 r21.w, cb11[r20.w + 4].xyzx, r17.yzwy
    add_sat r21.w, r21.w, cb11[r20.w + 4].w
    mul r21.z, r21.w, r21.z
    dp3 r21.w, cb11[r20.w + 5].xyzx, r17.yzwy
    add_sat r20.w, r21.w, cb11[r20.w + 5].w
    mul r19.x, r20.w, r21.z
    and r20.w, l(1), cb10[r16.z + 6].x
    movc r21.zw, r20.wwww, r19.xxxy, r19.zzzx
    mov r19.x, cb10[r16.z + 6].x
    mov r26.xy, r21.zwzz
    mov r20.w, l(1)
    loop 
      ige r22.w, r20.w, r19.w
      breakc_nz r22.w
      iadd r22.w, r16.w, r20.w
      imul null, r22.w, r22.w, l(6)
      dp3 r23.w, cb11[r22.w + 0].xyzx, r17.yzwy
      add_sat r23.w, r23.w, cb11[r22.w + 0].w
      mul r23.w, r23.w, r26.x
      dp3 r26.z, cb11[r22.w + 1].xyzx, r17.yzwy
      add_sat r26.z, r26.z, cb11[r22.w + 1].w
      mul r23.w, r23.w, r26.z
      dp3 r26.z, cb11[r22.w + 2].xyzx, r17.yzwy
      add_sat r26.z, r26.z, cb11[r22.w + 2].w
      mul r23.w, r23.w, r26.z
      dp3 r26.z, cb11[r22.w + 3].xyzx, r17.yzwy
      add_sat r26.z, r26.z, cb11[r22.w + 3].w
      mul r23.w, r23.w, r26.z
      dp3 r26.z, cb11[r22.w + 4].xyzx, r17.yzwy
      add_sat r26.z, r26.z, cb11[r22.w + 4].w
      mul r23.w, r23.w, r26.z
      dp3 r26.z, cb11[r22.w + 5].xyzx, r17.yzwy
      add_sat r22.w, r26.z, cb11[r22.w + 5].w
      mul r26.x, r22.w, r23.w
      ushr r26.z, r19.x, l(2)
      ubfe r26.w, l(1), l(2), r19.x
      and r27.x, r26.z, l(2)
      max r27.y, r26.x, r26.y
      mad r22.w, -r23.w, r22.w, l(1.000000)
      mul r22.w, r22.w, r26.y
      movc r21.y, r27.x, r22.w, r27.y
      movc r26.xy, r26.wwww, r26.xyxx, r21.xyxx
      iadd r20.w, r20.w, l(1)
      mov r19.x, r26.z
    endloop 
    mov_sat r26.y, r26.y
    mul r16.w, r26.y, cb10[r16.z + 6].y
    lt r19.x, l(0.000000), r16.w
    if_nz r19.x
      mad r25.w, r26.y, cb10[r16.z + 6].y, r25.w
      mul r16.w, r16.w, cb10[r16.z + 7].y
      mov r27.x, cb10[r16.z + 7].w
      mov r27.yz, cb10[r16.z + 8].xxyx
      dp3 r19.x, r18.xyzx, r27.xyzx
      dp3 r19.w, r17.yzwy, r27.xyzx
      add r19.w, r19.w, -cb10[r16.z + 8].z
      ge r20.w, r19.w, l(0.000000)
      max r19.w, r13.w, |r19.w|
      movc r19.w, r20.w, r19.w, -r19.w
      max r19.x, -r19.x, l(0.00000010)
      div r19.x, r19.w, r19.x
      min r19.x, |r19.x|, l(131072.000000)
      mov r27.x, cb10[r16.z + 8].w
      mov r27.yz, cb10[r16.z + 9].xxyx
      dp3 r19.w, r18.xyzx, r27.xyzx
      dp3 r20.w, r17.yzwy, r27.xyzx
      add r20.w, r20.w, -cb10[r16.z + 9].z
      ge r21.y, r20.w, l(0.000000)
      max r20.w, r13.w, |r20.w|
      movc r20.w, r21.y, r20.w, -r20.w
      max r19.w, -r19.w, l(0.00000010)
      div r19.w, r20.w, r19.w
      min r19.x, |r19.w|, r19.x
      mov r27.x, cb10[r16.z + 9].w
      mov r27.yz, cb10[r16.z + 10].xxyx
      dp3 r19.w, r18.xyzx, r27.xyzx
      dp3 r20.w, r17.yzwy, r27.xyzx
      add r20.w, r20.w, -cb10[r16.z + 10].z
      ge r21.y, r20.w, l(0.000000)
      max r20.w, r13.w, |r20.w|
      movc r20.w, r21.y, r20.w, -r20.w
      max r19.w, -r19.w, l(0.00000010)
      div r19.w, r20.w, r19.w
      min r19.x, |r19.w|, r19.x
      mov r27.x, cb10[r16.z + 10].w
      mov r27.yz, cb10[r16.z + 11].xxyx
      dp3 r19.w, r18.xyzx, r27.xyzx
      dp3 r20.w, r17.yzwy, r27.xyzx
      add r20.w, r20.w, -cb10[r16.z + 11].z
      ge r21.y, r20.w, l(0.000000)
      max r20.w, r13.w, |r20.w|
      movc r20.w, r21.y, r20.w, -r20.w
      max r19.w, -r19.w, l(0.00000010)
      div r19.w, r20.w, r19.w
      min r19.x, |r19.w|, r19.x
      mov r27.x, cb10[r16.z + 11].w
      mov r27.yz, cb10[r16.z + 12].xxyx
      dp3 r19.w, r18.xyzx, r27.xyzx
      dp3 r20.w, r17.yzwy, r27.xyzx
      add r20.w, r20.w, -cb10[r16.z + 12].z
      ge r21.y, r20.w, l(0.000000)
      max r20.w, r13.w, |r20.w|
      movc r20.w, r21.y, r20.w, -r20.w
      max r19.w, -r19.w, l(0.00000010)
      div r19.w, r20.w, r19.w
      min r19.x, |r19.w|, r19.x
      mov r27.x, cb10[r16.z + 12].w
      mov r27.yz, cb10[r16.z + 13].xxyx
      dp3 r19.w, r18.xyzx, r27.xyzx
      dp3 r20.w, r17.yzwy, r27.xyzx
      add r20.w, r20.w, -cb10[r16.z + 13].z
      ge r21.y, r20.w, l(0.000000)
      max r20.w, r13.w, |r20.w|
      movc r20.w, r21.y, r20.w, -r20.w
      max r19.w, -r19.w, l(0.00000010)
      div r19.w, r20.w, r19.w
      min r19.x, |r19.w|, r19.x
      add r27.x, r17.y, cb10[r16.z + 3].w
      add r27.yz, r17.zzwz, cb10[r16.z + 4].xxyx
      mad r21.yzw, r18.xxyz, r19.xxxx, r27.xxyz
      dp3 r19.w, r21.yzwy, r21.yzwy
      sqrt r19.w, r19.w
      div r19.x, r19.x, r19.w
      add r19.x, r19.x, r19.x
      sqrt r19.x, r19.x
      mad r19.x, r7.w, l(5.000000), r19.x
      add r19.x, r19.x, l(-0.844800)
      mov r27.x, cb10[r16.z + 0].w
      mov r27.y, cb10[r16.z + 1].z
      mov r27.z, cb10[r16.z + 2].y
      dp3 r28.x, r21.yzwy, r27.xyzx
      mov r29.xy, cb10[r16.z + 1].xwxx
      mov r29.z, cb10[r16.z + 2].z
      dp3 r28.y, r21.yzwy, r29.xyzx
      mov r30.x, cb10[r16.z + 1].y
      mov r30.yz, cb10[r16.z + 2].xxwx
      dp3 r28.z, r21.yzwy, r30.xyzx
      ubfe r19.w, l(9), l(16), cb10[r16.z + 7].z
      utof r28.w, r19.w
      sample_l_indexable(texturecubearray)(float,float,float,float) r21.yzw, r28.xyzw, t8.wxyz, s2, r19.x
      dp3 r31.x, r17.yzwy, r27.xyzx
      dp3 r31.y, r17.yzwy, r29.xyzx
      dp3 r31.z, r17.yzwy, r30.xyzx
      mad_sat r17.yzw, r31.xxyz, cb10[r16.z + 3].xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
      mul r31.xy, r17.yzyy, cb10[r16.z + 4].zwzz
      mul r31.z, r17.w, cb10[r16.z + 5].x
      add r17.yzw, r31.xxyz, cb10[r16.z + 5].yyzw
      dp3 r28.x, r12.xyzx, r27.xyzx
      dp3 r28.y, r12.xyzx, r29.xyzx
      dp3 r28.z, r12.xyzx, r30.xyzx
      lt r26.xzw, l(0.000000, 0.000000, 0.000000, 0.000000), r28.xxyz
      movc r20.z, r26.x, l(0), l(0.500000)
      add r27.xyz, r17.yzwy, r20.xyzx
      sample_l_indexable(texture3d)(float,float,float,float) r27.xyz, r27.xyzx, t17.xyzw, s4, l(0.000000)
      mul r29.xyz, r28.xyzx, r28.xyzx
      mul r29.xyz, r16.wwww, r29.xyzx
      movc r22.z, r26.z, l(0), l(0.500000)
      add r30.xyz, r17.yzwy, r22.xyzx
      sample_l_indexable(texture3d)(float,float,float,float) r30.xyz, r30.xyzx, t18.xyzw, s4, l(0.000000)
      mul r30.xyz, r29.yyyy, r30.xyzx
      mad r27.xyz, r27.xyzx, r29.xxxx, r30.xyzx
      movc r23.z, r26.w, l(0), l(0.500000)
      add r17.yzw, r17.yyzw, r23.xxyz
      sample_l_indexable(texture3d)(float,float,float,float) r17.yzw, r17.yzwy, t19.wxyz, s4, l(0.000000)
      mad r17.yzw, r17.yyzw, r29.zzzz, r27.xxyz
      sample_l_indexable(texturecubearray)(float,float,float,float) r26.xzw, r28.xyzw, t8.xwyz, s2, l(6.000000)
      mul r27.xyz, r17.yzwy, r26.xzwx
      dp3 r16.z, r27.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
      mad r24.xyz, r17.yzwy, r26.xzwx, r24.xyzx
      mul r17.y, r14.z, r16.z
      mul r21.yzw, r16.wwww, r21.yyzw
      dp3 r16.w, r21.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
      mad r16.z, r14.z, r16.z, r16.w
      div r16.z, r17.y, r16.z
      mov r27.x, r24.w
      mov r27.yz, r25.yyzy
      mad r25.xyz, r21.yzwy, r16.zzzz, r27.xyzx
      mov r24.w, r25.x
    endif 
  endif 
  iadd r16.y, r16.y, l(1)
endloop 
lt r16.y, r25.w, l(1.000000)
if_nz r16.y
  mov r19.yz, l(0,0,1.000000,0)
  mov r20.xy, l(0,0,0,0)
  mov r21.x, l(1.000000)
  mov r22.xy, l(0,0,0,0)
  mov r23.xy, l(0,0,0,0)
  mov r26.x, r24.w
  mov r26.yzw, r25.yyzw
  mov r16.yzw, r24.xxyz
  mov r17.y, l(0)
  loop 
    ieq r17.z, r17.y, l(2)
    breakc_nz r17.z
    movc r17.z, r17.y, r0.y, r15.w
    ult r17.w, r17.z, r14.w
    if_nz r17.w
      imul null, r17.z, r17.z, l(14)
      add r27.xyz, r11.xyzx, -cb10[r17.z + 0].xyzx
      and r17.w, l(0x0000ffff), cb10[r17.z + 7].z
      ubfe r19.w, l(6), l(25), cb10[r17.z + 7].z
      imul null, r20.w, r17.w, l(6)
      dp3 r21.z, cb11[r20.w + 0].xyzx, r27.xyzx
      add_sat r21.z, r21.z, cb11[r20.w + 0].w
      dp3 r21.w, cb11[r20.w + 1].xyzx, r27.xyzx
      add_sat r21.w, r21.w, cb11[r20.w + 1].w
      mul r21.z, r21.w, r21.z
      dp3 r21.w, cb11[r20.w + 2].xyzx, r27.xyzx
      add_sat r21.w, r21.w, cb11[r20.w + 2].w
      mul r21.z, r21.w, r21.z
      dp3 r21.w, cb11[r20.w + 3].xyzx, r27.xyzx
      add_sat r21.w, r21.w, cb11[r20.w + 3].w
      mul r21.z, r21.w, r21.z
      dp3 r21.w, cb11[r20.w + 4].xyzx, r27.xyzx
      add_sat r21.w, r21.w, cb11[r20.w + 4].w
      mul r21.z, r21.w, r21.z
      dp3 r21.w, cb11[r20.w + 5].xyzx, r27.xyzx
      add_sat r20.w, r21.w, cb11[r20.w + 5].w
      mul r19.x, r20.w, r21.z
      and r20.w, l(1), cb10[r17.z + 6].x
      movc r21.zw, r20.wwww, r19.xxxy, r19.zzzx
      mov r19.x, cb10[r17.z + 6].x
      mov r28.xy, r21.zwzz
      mov r20.w, l(1)
      loop 
        ige r22.w, r20.w, r19.w
        breakc_nz r22.w
        iadd r22.w, r17.w, r20.w
        imul null, r22.w, r22.w, l(6)
        dp3 r23.w, cb11[r22.w + 0].xyzx, r27.xyzx
        add_sat r23.w, r23.w, cb11[r22.w + 0].w
        mul r23.w, r23.w, r28.x
        dp3 r27.w, cb11[r22.w + 1].xyzx, r27.xyzx
        add_sat r27.w, r27.w, cb11[r22.w + 1].w
        mul r23.w, r23.w, r27.w
        dp3 r27.w, cb11[r22.w + 2].xyzx, r27.xyzx
        add_sat r27.w, r27.w, cb11[r22.w + 2].w
        mul r23.w, r23.w, r27.w
        dp3 r27.w, cb11[r22.w + 3].xyzx, r27.xyzx
        add_sat r27.w, r27.w, cb11[r22.w + 3].w
        mul r23.w, r23.w, r27.w
        dp3 r27.w, cb11[r22.w + 4].xyzx, r27.xyzx
        add_sat r27.w, r27.w, cb11[r22.w + 4].w
        mul r23.w, r23.w, r27.w
        dp3 r27.w, cb11[r22.w + 5].xyzx, r27.xyzx
        add_sat r22.w, r27.w, cb11[r22.w + 5].w
        mul r28.x, r22.w, r23.w
        ushr r27.w, r19.x, l(2)
        ubfe r28.z, l(1), l(2), r19.x
        and r28.w, r27.w, l(2)
        max r29.x, r28.x, r28.y
        mad r22.w, -r23.w, r22.w, l(1.000000)
        mul r22.w, r22.w, r28.y
        movc r21.y, r28.w, r22.w, r29.x
        movc r28.xy, r28.zzzz, r28.xyxx, r21.xyxx
        iadd r20.w, r20.w, l(1)
        mov r19.x, r27.w
      endloop 
      add_sat r17.w, -r25.w, r28.y
      mul r19.x, r17.w, cb10[r17.z + 6].y
      lt r19.w, l(0.000000), r19.x
      if_nz r19.w
        mad r26.w, r17.w, cb10[r17.z + 6].y, r26.w
        mul r17.w, r19.x, cb10[r17.z + 7].y
        mov r29.x, cb10[r17.z + 7].w
        mov r29.yz, cb10[r17.z + 8].xxyx
        dp3 r19.x, r18.xyzx, r29.xyzx
        dp3 r19.w, r27.xyzx, r29.xyzx
        add r19.w, r19.w, -cb10[r17.z + 8].z
        ge r20.w, r19.w, l(0.000000)
        max r19.w, r13.w, |r19.w|
        movc r19.w, r20.w, r19.w, -r19.w
        max r19.x, -r19.x, l(0.00000010)
        div r19.x, r19.w, r19.x
        min r19.x, |r19.x|, l(131072.000000)
        mov r29.x, cb10[r17.z + 8].w
        mov r29.yz, cb10[r17.z + 9].xxyx
        dp3 r19.w, r18.xyzx, r29.xyzx
        dp3 r20.w, r27.xyzx, r29.xyzx
        add r20.w, r20.w, -cb10[r17.z + 9].z
        ge r21.y, r20.w, l(0.000000)
        max r20.w, r13.w, |r20.w|
        movc r20.w, r21.y, r20.w, -r20.w
        max r19.w, -r19.w, l(0.00000010)
        div r19.w, r20.w, r19.w
        min r19.x, |r19.w|, r19.x
        mov r29.x, cb10[r17.z + 9].w
        mov r29.yz, cb10[r17.z + 10].xxyx
        dp3 r19.w, r18.xyzx, r29.xyzx
        dp3 r20.w, r27.xyzx, r29.xyzx
        add r20.w, r20.w, -cb10[r17.z + 10].z
        ge r21.y, r20.w, l(0.000000)
        max r20.w, r13.w, |r20.w|
        movc r20.w, r21.y, r20.w, -r20.w
        max r19.w, -r19.w, l(0.00000010)
        div r19.w, r20.w, r19.w
        min r19.x, |r19.w|, r19.x
        mov r29.x, cb10[r17.z + 10].w
        mov r29.yz, cb10[r17.z + 11].xxyx
        dp3 r19.w, r18.xyzx, r29.xyzx
        dp3 r20.w, r27.xyzx, r29.xyzx
        add r20.w, r20.w, -cb10[r17.z + 11].z
        ge r21.y, r20.w, l(0.000000)
        max r20.w, r13.w, |r20.w|
        movc r20.w, r21.y, r20.w, -r20.w
        max r19.w, -r19.w, l(0.00000010)
        div r19.w, r20.w, r19.w
        min r19.x, |r19.w|, r19.x
        mov r29.x, cb10[r17.z + 11].w
        mov r29.yz, cb10[r17.z + 12].xxyx
        dp3 r19.w, r18.xyzx, r29.xyzx
        dp3 r20.w, r27.xyzx, r29.xyzx
        add r20.w, r20.w, -cb10[r17.z + 12].z
        ge r21.y, r20.w, l(0.000000)
        max r20.w, r13.w, |r20.w|
        movc r20.w, r21.y, r20.w, -r20.w
        max r19.w, -r19.w, l(0.00000010)
        div r19.w, r20.w, r19.w
        min r19.x, |r19.w|, r19.x
        mov r29.x, cb10[r17.z + 12].w
        mov r29.yz, cb10[r17.z + 13].xxyx
        dp3 r19.w, r18.xyzx, r29.xyzx
        dp3 r20.w, r27.xyzx, r29.xyzx
        add r20.w, r20.w, -cb10[r17.z + 13].z
        ge r21.y, r20.w, l(0.000000)
        max r20.w, r13.w, |r20.w|
        movc r20.w, r21.y, r20.w, -r20.w
        max r19.w, -r19.w, l(0.00000010)
        div r19.w, r20.w, r19.w
        min r19.x, |r19.w|, r19.x
        add r29.x, r27.x, cb10[r17.z + 3].w
        add r29.yz, r27.yyzy, cb10[r17.z + 4].xxyx
        mad r21.yzw, r18.xxyz, r19.xxxx, r29.xxyz
        dp3 r19.w, r21.yzwy, r21.yzwy
        sqrt r19.w, r19.w
        div r19.x, r19.x, r19.w
        add r19.x, r19.x, r19.x
        sqrt r19.x, r19.x
        mad r19.x, r7.w, l(5.000000), r19.x
        add r19.x, r19.x, l(-0.844800)
        mov r29.x, cb10[r17.z + 0].w
        mov r29.y, cb10[r17.z + 1].z
        mov r29.z, cb10[r17.z + 2].y
        dp3 r30.x, r21.yzwy, r29.xyzx
        mov r31.xy, cb10[r17.z + 1].xwxx
        mov r31.z, cb10[r17.z + 2].z
        dp3 r30.y, r21.yzwy, r31.xyzx
        mov r32.x, cb10[r17.z + 1].y
        mov r32.yz, cb10[r17.z + 2].xxwx
        dp3 r30.z, r21.yzwy, r32.xyzx
        ubfe r19.w, l(9), l(16), cb10[r17.z + 7].z
        utof r30.w, r19.w
        sample_l_indexable(texturecubearray)(float,float,float,float) r21.yzw, r30.xyzw, t8.wxyz, s2, r19.x
        dp3 r33.x, r27.xyzx, r29.xyzx
        dp3 r33.y, r27.xyzx, r31.xyzx
        dp3 r33.z, r27.xyzx, r32.xyzx
        mad_sat r27.xyz, r33.xyzx, cb10[r17.z + 3].xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
        mul r33.xy, r27.xyxx, cb10[r17.z + 4].zwzz
        mul r33.z, r27.z, cb10[r17.z + 5].x
        add r27.xyz, r33.xyzx, cb10[r17.z + 5].yzwy
        dp3 r30.x, r12.xyzx, r29.xyzx
        dp3 r30.y, r12.xyzx, r31.xyzx
        dp3 r30.z, r12.xyzx, r32.xyzx
        lt r28.xzw, l(0.000000, 0.000000, 0.000000, 0.000000), r30.xxyz
        movc r20.z, r28.x, l(0), l(0.500000)
        add r29.xyz, r20.xyzx, r27.xyzx
        sample_l_indexable(texture3d)(float,float,float,float) r29.xyz, r29.xyzx, t17.xyzw, s4, l(0.000000)
        mul r31.xyz, r30.xyzx, r30.xyzx
        mul r31.xyz, r17.wwww, r31.xyzx
        movc r22.z, r28.z, l(0), l(0.500000)
        add r32.xyz, r22.xyzx, r27.xyzx
        sample_l_indexable(texture3d)(float,float,float,float) r32.xyz, r32.xyzx, t18.xyzw, s4, l(0.000000)
        mul r32.xyz, r31.yyyy, r32.xyzx
        mad r29.xyz, r29.xyzx, r31.xxxx, r32.xyzx
        movc r23.z, r28.w, l(0), l(0.500000)
        add r27.xyz, r23.xyzx, r27.xyzx
        sample_l_indexable(texture3d)(float,float,float,float) r27.xyz, r27.xyzx, t19.xyzw, s4, l(0.000000)
        mad r27.xyz, r27.xyzx, r31.zzzz, r29.xyzx
        sample_l_indexable(texturecubearray)(float,float,float,float) r28.xzw, r30.xyzw, t8.xwyz, s2, l(6.000000)
        mul r29.xyz, r27.xyzx, r28.xzwx
        dp3 r17.z, r29.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
        mad r16.yzw, r27.xxyz, r28.xxzw, r16.yyzw
        mul r19.x, r14.z, r17.z
        mul r21.yzw, r17.wwww, r21.yyzw
        dp3 r17.w, r21.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
        mad r17.z, r14.z, r17.z, r17.w
        div r17.z, r19.x, r17.z
        mad r26.xyz, r21.yzwy, r17.zzzz, r26.xyzx
      endif 
    endif 
    iadd r17.y, r17.y, l(1)
  endloop 
  mov r25.xyzw, r26.zxyw
  mov r24.xyz, r16.yzwy
  mov r25.xyzw, r25.yzxw
else 
  mov r25.x, r24.w
endif 
max r0.y, r25.w, l(1.000000)
rcp r0.y, r0.y
mov_sat r25.w, r25.w
mul r16.yzw, r0.yyyy, r24.xxyz
mul r17.yzw, r0.yyyy, r25.xxyz
lt r7.w, r25.w, l(0.990000)
if_nz r7.w
  add r7.w, -r25.w, l(1.000000)
  mul r13.w, r7.w, cb2[19].x
  add r19.xyz, r11.xyzx, -cb2[35].xyzx
  mul r20.x, r19.x, cb2[35].w
  mul r20.yz, r19.yyzy, cb2[36].xxyx
  add_sat r19.xyz, r20.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mul r20.xy, r19.xyxx, cb2[36].zwzz
  mul r20.z, r19.z, cb2[37].x
  add r19.xyz, r20.xyzx, cb2[37].yzwy
  lt r20.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r12.xyzx
  movc r20.xyz, r20.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
  mov r20.w, l(0)
  add r21.xyz, r19.xyzx, r20.wwxw
  sample_l_indexable(texture3d)(float,float,float,float) r21.xyz, r21.xyzx, t17.xyzw, s4, l(0.000000)
  mul r22.xyz, r12.xyzx, r12.xyzx
  mul r22.xyz, r13.wwww, r22.xyzx
  add r23.xyz, r19.xyzx, r20.wwyw
  sample_l_indexable(texture3d)(float,float,float,float) r23.xyz, r23.xyzx, t18.xyzw, s4, l(0.000000)
  mul r23.xyz, r22.yyyy, r23.xyzx
  mad r21.xyz, r21.xyzx, r22.xxxx, r23.xyzx
  add r19.xyz, r19.xyzx, r20.wwzw
  sample_l_indexable(texture3d)(float,float,float,float) r19.xyz, r19.xyzx, t19.xyzw, s4, l(0.000000)
  mad r19.xyz, r19.xyzx, r22.zzzz, r21.xyzx
  mov r12.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r20.xyz, r12.xyzw, t8.xyzw, s2, l(6.000000)
  mul r19.xyz, r19.xyzx, r20.xyzx
  dp3 r12.w, r19.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  mad r16.yzw, r24.xxyz, r0.yyyy, r19.xxyz
  mov r18.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r19.xyz, r18.xyzw, t8.xyzw, s2, r9.w
  mad r0.y, cb2[19].x, r7.w, -r12.w
  mad r0.y, r2.y, r0.y, r12.w
  mad r17.yzw, r19.xxyz, r0.yyyy, r17.yyzw
endif 
add r0.y, -r3.y, l(1.000000)
mad r10.yzw, r17.yyzw, r0.yyyy, r10.yyzw
mad r0.y, r5.z, r2.z, r2.x
log r0.y, |r0.y|
mul r0.y, r0.y, r1.w
exp r0.y, r0.y
mad r0.y, r5.z, r2.z, r0.y
add_sat r0.y, r0.y, l(-1.000000)
mul r0.y, r3.w, r0.y
mul r19.xyz, r2.wwww, r16.yzwy
and r20.xyz, r3.xxxx, r19.yzxy
mad r2.yz, r2.xxyx, l(0.000000, 0.984375, 0.984375, 0.000000), l(0.000000, 0.00781250, 0.00781250, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r2.yz, r2.yzyy, t5.zxyw, s2, l(0.000000)
mul r10.yzw, r0.yyyy, r10.yyzw
mul r17.yzw, r2.yyyy, r10.yyzw
mul r21.xyz, r2.zzzz, r10.yzwy
sqrt r0.y, r1.w
mad r0.y, r0.y, l(0.500000), l(0.500000)
mul r0.y, r0.y, r0.y
mul r2.y, r0.y, l(0.500000)
mad r0.y, -r0.y, l(0.500000), l(1.000000)
mad r2.z, r2.x, r0.y, r2.y
mul r0.y, r0.y, r2.z
mul r2.y, r2.z, r2.y
lt r2.z, l(0.000000), r6.w
if_nz r2.z
  lt r2.z, l(0.000000), r8.w
  if_nz r2.z
    mul r2.z, r1.z, cb2[18].w
    mul r2.z, r4.w, r2.z
    if_nz cb2[23].x
      add r22.xyz, r11.xyzx, cb1[24].xyzx
      mov r22.w, l(1.000000)
      dp4 r3.y, cb2[24].xyzw, r22.xyzw
      dp4 r3.w, cb2[25].xyzw, r22.xyzw
      frc r22.xy, r3.ywyy
      iadd r3.y, l(-1), cb2[23].x
      utof r22.z, r3.y
      sample_l_indexable(texture2darray)(float,float,float,float) r10.yzw, r22.xyzx, t20.wxyz, s2, l(0.000000)
      add r10.yzw, r10.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
      mad r10.yzw, cb2[23].yyyy, r10.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
      mul r10.yzw, r10.yyzw, cb2[18].xxyz
    else 
      mov r10.yzw, cb2[18].xxyz
    endif 
    ushr r3.y, cb2[53].x, l(16)
    ult r3.w, l(0), r3.y
    and r3.w, r10.x, r3.w
    if_nz r3.w
      iadd r3.y, r3.y, cb2[0].x
      imad r3.y, r3.y, l(15), l(-15)
      mad r3.w, |r3.z|, l(-0.200000), l(0.400000)
      lt r5.z, r3.z, l(0.000000)
      and r5.z, r3.x, r5.z
      movc r3.w, r5.z, -r3.w, r3.w
      mad r22.xyz, r12.xyzx, r3.wwww, r11.xyzx
      mov r23.xyz, cb9[r3.y + 4].yzwy
      mov r23.w, cb9[r3.y + 5].x
      mov r22.w, l(1.000000)
      dp4 r23.x, r23.xyzw, r22.xyzw
      mov r24.xyz, cb9[r3.y + 5].yzwy
      mov r24.w, cb9[r3.y + 6].x
      dp4 r23.y, r24.xyzw, r22.xyzw
      mad r14.zw, r23.xxxy, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
      add r23.x, r14.z, cb9[r3.y + 9].w
      add r23.y, r14.w, cb9[r3.y + 10].x
      mul r14.zw, r23.xxxy, cb9[r3.y + 9].yyyz
      div r23.xy, cb9[r3.y + 3].yyyy, cb9[r3.y + 8].ywyy
      add r23.zw, -r23.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
      ge r23.zw, r14.zzzw, r23.zzzw
      ge r23.xy, r23.xyxx, r14.zwzz
      or r23.xy, r23.xyxx, r23.zwzz
      or r3.w, r23.y, r23.x
      if_z r3.w
        mov r23.xyz, cb9[r3.y + 6].yzwy
        mov r23.w, cb9[r3.y + 7].x
        dp4 r3.w, r23.xyzw, r22.xyzw
        mov_sat r14.zw, r14.zzzw
        mad r22.x, r14.z, cb9[r3.y + 8].y, cb9[r3.y + 8].z
        mad r22.y, r14.w, cb9[r3.y + 8].w, cb9[r3.y + 9].x
        add r3.w, r3.w, cb9[r3.y + 10].y
        div r3.w, r3.w, cb9[r3.y + 10].z
        max r3.w, r3.w, l(0.00006104)
        and r5.z, l(0x0000ffff), cb9[r3.y + 1].w
        if_nz cb2[58].y
          mov r23.x, -r14.x
          utof r24.z, r5.z
          mov r23.y, r15.x
          mov r23.z, r14.x
          mov r7.w, l(0)
          mov r9.w, l(0)
          loop 
            ige r12.w, r9.w, l(8)
            breakc_nz r12.w
            dp2 r25.x, icb[r9.w + 0].yxyy, r23.xyxx
            dp2 r25.y, icb[r9.w + 0].yxyy, r23.yzyy
            mad r24.xy, r25.xyxx, cb9[r3.y + 3].yyyy, r22.xyxx
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.w, r24.xyzx, t9.xxxx, s13, r3.w
            mad r7.w, r12.w, l(0.125000), r7.w
            iadd r9.w, r9.w, l(1)
          endloop 
        else 
          utof r22.z, r5.z
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r7.w, r22.xyzx, t9.xxxx, s13, r3.w
        endif 
        mul r3.y, r7.w, r7.w
        mul r3.y, r7.w, r3.y
      else 
        mov r3.y, l(1.000000)
      endif 
      mul r8.w, r3.y, r8.w
    else 
      and r3.y, cb2[53].x, l(0x0000ffff)
      ult r3.w, l(0), r3.y
      not r5.z, r10.x
      and r3.w, r3.w, r5.z
      if_nz r3.w
        iadd r3.y, r3.y, cb2[0].x
        imad r3.y, r3.y, l(15), l(-15)
        mad r3.w, |r3.z|, l(-0.200000), l(0.400000)
        lt r5.z, r3.z, l(0.000000)
        and r5.z, r3.x, r5.z
        movc r3.w, r5.z, -r3.w, r3.w
        mad r22.xyz, r12.xyzx, r3.wwww, r11.xyzx
        mov r23.xyz, cb9[r3.y + 4].yzwy
        mov r23.w, cb9[r3.y + 5].x
        mov r22.w, l(1.000000)
        dp4 r23.x, r23.xyzw, r22.xyzw
        mov r24.xyz, cb9[r3.y + 5].yzwy
        mov r24.w, cb9[r3.y + 6].x
        dp4 r23.y, r24.xyzw, r22.xyzw
        mad r14.zw, r23.xxxy, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
        add r23.x, r14.z, cb9[r3.y + 9].w
        add r23.y, r14.w, cb9[r3.y + 10].x
        mul r14.zw, r23.xxxy, cb9[r3.y + 9].yyyz
        div r23.xy, cb9[r3.y + 3].yyyy, cb9[r3.y + 8].ywyy
        add r23.zw, -r23.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
        ge r23.zw, r14.zzzw, r23.zzzw
        ge r23.xy, r23.xyxx, r14.zwzz
        or r23.xy, r23.xyxx, r23.zwzz
        or r3.w, r23.y, r23.x
        if_z r3.w
          mov r23.xyz, cb9[r3.y + 6].yzwy
          mov r23.w, cb9[r3.y + 7].x
          dp4 r3.w, r23.xyzw, r22.xyzw
          mov_sat r14.zw, r14.zzzw
          mad r22.x, r14.z, cb9[r3.y + 8].y, cb9[r3.y + 8].z
          mad r22.y, r14.w, cb9[r3.y + 8].w, cb9[r3.y + 9].x
          add r3.w, r3.w, cb9[r3.y + 10].y
          div r3.w, r3.w, cb9[r3.y + 10].z
          max r3.w, r3.w, l(0.00006104)
          and r5.z, l(0x0000ffff), cb9[r3.y + 1].w
          if_nz cb2[58].y
            mov r23.x, -r14.x
            utof r24.z, r5.z
            mov r23.y, r15.x
            mov r23.z, r14.x
            mov r7.w, l(0)
            mov r9.w, l(0)
            loop 
              ige r12.w, r9.w, l(8)
              breakc_nz r12.w
              dp2 r25.x, icb[r9.w + 0].yxyy, r23.xyxx
              dp2 r25.y, icb[r9.w + 0].yxyy, r23.yzyy
              mad r24.xy, r25.xyxx, cb9[r3.y + 3].yyyy, r22.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.w, r24.xyzx, t9.xxxx, s13, r3.w
              mad r7.w, r12.w, l(0.125000), r7.w
              iadd r9.w, r9.w, l(1)
            endloop 
          else 
            utof r22.z, r5.z
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r7.w, r22.xyzx, t9.xxxx, s13, r3.w
          endif 
          mul r3.y, r7.w, r7.w
          mul r3.y, r7.w, r3.y
        else 
          mov r3.y, l(1.000000)
        endif 
        mul r8.w, r3.y, r8.w
      endif 
    endif 
    mad r3.y, -r2.x, l(0.500000), l(1.000000)
    mad r3.y, -r6.w, r3.y, l(1.000000)
    mul r3.y, r3.y, r3.y
    mad r3.y, -r3.y, l(0.620000), l(0.620000)
    add r3.y, -r6.w, r3.y
    mad r3.y, r1.w, r3.y, r6.w
    mul r3.y, r8.w, r3.y
    mul r22.xyz, r10.yzwy, r3.yyyy
    lt r3.z, l(0.000000), r3.z
    mad r22.xyz, r16.yzwy, r2.wwww, r22.xyzx
    mad r16.yzw, -r11.xxyz, r0.wwww, cb2[17].xxyz
    dp3 r0.w, r16.yzwy, r16.yzwy
    rsq r0.w, r0.w
    mul r16.yzw, r0.wwww, r16.yyzw
    dp3 r0.w, r16.yzwy, r13.xyzx
    dp3 r2.w, r12.xyzx, r16.yzwy
    mad r3.w, |r2.w|, r1.z, -|r2.w|
    mad r2.w, |r2.w|, r3.w, l(1.000000)
    mad r3.w, r4.w, r0.y, r2.y
    mul r2.w, r2.w, r2.w
    mul r2.w, r3.w, r2.w
    rcp r2.w, r2.w
    mul r2.z, r2.z, r2.w
    mul r2.z, r2.z, r8.w
    mul r2.z, r2.z, l(0.250000)
    mad r23.yzw, r2.zzzz, r10.yyzw, r21.xxyz
    add_sat r0.w, -r0.w, l(1.000000)
    mul r2.w, r0.w, r0.w
    mul r2.w, r2.w, r2.w
    mul r0.w, r0.w, r2.w
    mul r0.w, r0.w, r2.z
    mad r16.yzw, r0.wwww, r10.yyzw, r17.yyzw
    mad r10.yzw, r3.yyyy, r10.yyzw, r20.zzxy
    and r24.xyz, r3.xxxx, r10.zwyz
    mov r22.w, r20.z
    mov r19.w, r24.z
    movc r19.xyzw, r3.zzzz, r22.xyzw, r19.xyzw
    mov r20.zw, r16.yyyz
    mov r24.zw, r17.yyyz
    movc r22.xyzw, r3.zzzz, r20.xyzw, r24.xyzw
    mov r23.x, r16.w
    mov r21.w, r17.w
    movc r21.xyzw, r3.zzzz, r23.yzwx, r21.xyzw
    mov r20.z, r19.w
    mov r20.xy, r22.xyxx
    mov r17.yz, r22.zzwz
    mov r17.w, r21.w
  endif 
endif 
ftou r0.w, cb1[44].x
iadd r0.w, r0.w, l(7)
ushr r0.w, r0.w, l(3)
imad r0.x, r0.z, r0.w, r0.x
ishl r0.x, r0.x, l(5)
not r0.z, r10.x
mov r22.x, -r14.x
mad r0.w, -r2.x, l(0.500000), l(1.000000)
mov r11.w, l(1.000000)
mov r23.z, l(1.000000)
mov r24.w, l(1.000000)
mov r25.w, l(1.000000)
mov r26.w, l(1.000000)
mov r22.z, r14.x
mov r27.w, l(1.000000)
mov r22.yw, r15.xxxx
mov r14.y, r22.w
mov r15.y, r22.x
mov r15.z, r14.x
mov r28.x, r15.x
mov r28.y, r22.x
mov r28.z, r14.x
mov r29.w, l(1.000000)
mov r30.x, r15.x
mov r30.y, r22.x
mov r30.z, r14.x
mov r31.x, r15.x
mov r31.y, r22.x
mov r31.z, r14.x
mov r2.xzw, r19.xxyz
mov r32.xyz, r20.zxyz
mov r33.xyz, r17.yzwy
mov r3.yzw, r21.xxyz
mov r4.w, cb2[58].y
mov r5.z, l(0)
loop 
  uge r6.w, r5.z, cb2[0].x
  breakc_nz r6.w
  ushr r6.w, r5.z, l(5)
  iadd r6.w, r0.x, r6.w
  ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r6.w, r6.w, l(0), t26.xxxx
  mov r10.yzw, r2.xxzw
  mov r16.yzw, r32.xxyz
  mov r34.xyz, r33.xyzx
  mov r35.xyz, r3.yzwy
  mov r7.w, r4.w
  mov r8.w, r6.w
  loop 
    breakc_z r8.w
    firstbit_lo r9.w, r8.w
    ishl r12.w, l(1), r9.w
    not r12.w, r12.w
    and r8.w, r8.w, r12.w
    iadd r9.w, r5.z, r9.w
    imul null, r9.w, r9.w, l(15)
    ubfe r12.w, l(3), l(24), cb9[r9.w + 1].w
    ieq r13.w, r12.w, l(2)
    if_nz r13.w
      ubfe r13.w, l(3), l(27), cb9[r9.w + 1].w
      add r36.xy, -r11.xyxx, cb9[r9.w + 3].zwzz
      add r36.z, -r11.z, cb9[r9.w + 4].x
      dp3 r14.z, r36.xyzx, r36.xyzx
      rsq r14.z, r14.z
      mul r37.xyz, r14.zzzz, r36.xyzx
      mul r14.w, r1.z, cb9[r9.w + 1].z
      mul r14.w, r14.w, l(0.250000)
      dp3 r15.w, r12.xyzx, r37.xyzx
      mov_sat r18.w, r15.w
      movc r19.w, r3.x, |r15.w|, r18.w
      lt r20.w, l(0.000000), r19.w
      if_nz r20.w
        mov r37.xyz, cb9[r9.w + 7].yzwy
        mov r37.w, cb9[r9.w + 8].x
        dp4 r20.w, r37.xyzw, r11.xyzw
        lt r21.w, r20.w, l(1.000000)
        if_nz r21.w
          mov r38.xyz, l(1.000000,1.000000,1.000000,0)
          mov r21.w, l(0)
        else 
          add r39.xyz, -r11.xyzx, cb9[r9.w + 0].xyzx
          mul r23.w, cb9[r9.w + 3].x, cb9[r9.w + 3].x
          dp3 r28.w, r39.xyzx, r39.xyzx
          div r23.w, r23.w, r28.w
          min r23.w, r23.w, l(1.000000)
          mad_sat r39.xy, r20.wwww, cb9[r9.w + 2].xzxx, cb9[r9.w + 2].ywyy
          mul r39.zw, r39.xxxy, r39.xxxy
          mad r39.xy, r39.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
          mul r39.xy, r39.xyxx, r39.zwzz
          mul r23.w, r23.w, r39.x
          mul r23.w, r39.y, r23.w
          mov r39.xyz, cb9[r9.w + 4].yzwy
          mov r39.w, cb9[r9.w + 5].x
          dp4 r39.x, r39.xyzw, r11.xyzw
          mov r40.xyz, cb9[r9.w + 5].yzwy
          mov r40.w, cb9[r9.w + 6].x
          dp4 r39.y, r40.xyzw, r11.xyzw
          div r23.xy, r39.xyxx, r20.wwww
          lt r20.w, cb9[r9.w + 10].w, l(0.00048828)
          if_nz r20.w
            mad_sat r39.xy, |r23.xyxx|, cb9[r9.w + 12].xyxx, cb9[r9.w + 12].zwzz
            mul r39.zw, r39.xxxy, r39.xxxy
            mad r39.xy, r39.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
            mul r39.xy, r39.xyxx, r39.zwzz
            mul r20.w, r39.y, r39.x
          else 
            mul_sat r39.xyzw, |r23.yyxx|, cb9[r9.w + 11].xyzw
            log r39.xyzw, r39.xyzw
            mul r39.xyzw, r39.xyzw, cb9[r9.w + 12].zzzz
            exp r39.xyzw, r39.xyzw
            add r39.xy, r39.zwzz, r39.xyxx
            log r39.xy, r39.xyxx
            mul r39.xy, r39.xyxx, cb9[r9.w + 12].wwww
            exp r39.xy, r39.xyxx
            mul r28.w, r39.x, cb9[r9.w + 12].x
            mad r30.w, cb9[r9.w + 12].y, r39.y, l(-1.000000)
            mad r28.w, cb9[r9.w + 12].y, r39.y, -r28.w
            div_sat r28.w, r30.w, r28.w
            mul r30.w, r28.w, r28.w
            mad r28.w, r28.w, l(-2.000000), l(3.000000)
            mul r20.w, r28.w, r30.w
          endif 
          mul r21.w, r20.w, r23.w
          and r20.w, l(255), cb9[r9.w + 14].w
          if_nz r20.w
            dp3 r23.w, cb9[r9.w + 13].xyzx, r23.xyzx
            mov r39.x, cb9[r9.w + 13].w
            mov r39.yz, cb9[r9.w + 14].xxyx
            dp3 r23.x, r39.xyzx, r23.xyzx
            frc r39.xy, r23.wxww
            iadd r20.w, r20.w, l(-1)
            utof r39.z, r20.w
            sample_l_indexable(texture2darray)(float,float,float,float) r38.xyz, r39.xyzx, t20.xyzw, s2, l(0.000000)
          else 
            mov r38.xyz, l(1.000000,1.000000,1.000000,0)
          endif 
        endif 
        mov r39.x, cb9[r9.w + 0].w
        mov r39.yz, cb9[r9.w + 1].xxyx
        mul r23.xyw, r38.xyxz, r39.xyxz
        lt r20.w, l(0.000000), r21.w
        if_nz r20.w
          ine r13.w, r13.w, l(1)
          if_nz r13.w
            mad r13.w, |r15.w|, l(-0.200000), l(0.400000)
            lt r20.w, r15.w, l(0.000000)
            and r20.w, r3.x, r20.w
            movc r13.w, r20.w, -r13.w, r13.w
            mad r24.xyz, r12.xyzx, r13.wwww, r11.xyzx
            mov r38.xyz, cb9[r9.w + 6].yzwy
            mov r38.w, cb9[r9.w + 7].x
            dp4 r13.w, r38.xyzw, r24.xyzw
            dp4 r20.w, r37.xyzw, r24.xyzw
            ge r28.w, r20.w, r13.w
            if_nz r28.w
              mov r37.xyz, cb9[r9.w + 4].yzwy
              mov r37.w, cb9[r9.w + 5].x
              dp4 r37.x, r37.xyzw, r24.xyzw
              mov r38.xyz, cb9[r9.w + 5].yzwy
              mov r38.w, cb9[r9.w + 6].x
              dp4 r37.y, r38.xyzw, r24.xyzw
              div r24.xy, r37.xyxx, r20.wwww
              mad_sat r24.xy, r24.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
              mad r37.x, r24.x, cb9[r9.w + 8].y, cb9[r9.w + 8].z
              mad r37.y, r24.y, cb9[r9.w + 8].w, cb9[r9.w + 9].x
              div r13.w, r13.w, r20.w
              max r13.w, r13.w, l(0.00006104)
              and r20.w, l(0x0000ffff), cb9[r9.w + 1].w
              if_nz r7.w
                utof r24.z, r20.w
                mov r28.w, l(0)
                mov r30.w, l(0)
                loop 
                  ige r31.w, r30.w, l(8)
                  breakc_nz r31.w
                  dp2 r38.x, icb[r30.w + 0].yxyy, r22.xyxx
                  dp2 r38.y, icb[r30.w + 0].yxyy, r22.yzyy
                  mad r24.xy, r38.xyxx, cb9[r9.w + 3].yyyy, r37.xyxx
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.x, r24.xyzx, t9.xxxx, s13, r13.w
                  mad r28.w, r24.x, l(0.125000), r28.w
                  iadd r30.w, r30.w, l(1)
                endloop 
              else 
                utof r37.z, r20.w
                sample_c_lz_indexable(texture2darray)(float,float,float,float) r28.w, r37.xyzx, t9.xxxx, s13, r13.w
              endif 
              mul r13.w, r28.w, r28.w
              mul r13.w, r28.w, r13.w
            else 
              mov r13.w, l(1.000000)
            endif 
          else 
            mov r13.w, l(1.000000)
          endif 
          mul r13.w, r13.w, r21.w
          lt r20.w, l(0.000000), r13.w
          if_nz r20.w
            ubfe r20.w, l(4), l(16), cb9[r9.w + 1].w
            ult r21.w, l(0), r20.w
            and r21.w, r10.x, r21.w
            if_nz r21.w
              iadd r20.w, r20.w, cb2[0].x
              imad r20.w, r20.w, l(15), l(-15)
              mad r21.w, |r15.w|, l(-0.200000), l(0.400000)
              lt r24.x, r15.w, l(0.000000)
              and r24.x, r3.x, r24.x
              movc r21.w, r24.x, -r21.w, r21.w
              mad r25.xyz, r12.xyzx, r21.wwww, r11.xyzx
              mov r37.xyz, cb9[r20.w + 6].yzwy
              mov r37.w, cb9[r20.w + 7].x
              dp4 r21.w, r37.xyzw, r25.xyzw
              mov r37.xyz, cb9[r20.w + 7].yzwy
              mov r37.w, cb9[r20.w + 8].x
              dp4 r24.x, r37.xyzw, r25.xyzw
              lt r24.y, r24.x, r21.w
              if_z r24.y
                mov r37.xyz, cb9[r20.w + 4].yzwy
                mov r37.w, cb9[r20.w + 5].x
                dp4 r37.x, r37.xyzw, r25.xyzw
                mov r38.xyz, cb9[r20.w + 5].yzwy
                mov r38.w, cb9[r20.w + 6].x
                dp4 r37.y, r38.xyzw, r25.xyzw
                div r25.xy, r37.xyxx, r24.xxxx
                mad r25.xy, r25.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                add r37.x, r25.x, cb9[r20.w + 9].w
                add r37.y, r25.y, cb9[r20.w + 10].x
                mul r25.xy, r37.xyxx, cb9[r20.w + 9].yzyy
                div r37.xy, cb9[r20.w + 3].yyyy, cb9[r20.w + 8].ywyy
                add r37.zw, -r37.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                ge r37.zw, r25.xxxy, r37.zzzw
                ge r37.xy, r37.xyxx, r25.xyxx
                or r37.xy, r37.xyxx, r37.zwzz
                or r24.z, r37.y, r37.x
                if_z r24.z
                  mov_sat r25.xy, r25.xyxx
                  mad r37.x, r25.x, cb9[r20.w + 8].y, cb9[r20.w + 8].z
                  mad r37.y, r25.y, cb9[r20.w + 8].w, cb9[r20.w + 9].x
                  mul r25.x, r24.x, cb9[r20.w + 10].z
                  mad r21.w, cb9[r20.w + 10].y, r24.x, r21.w
                  div r21.w, r21.w, r25.x
                endif 
              else 
                mov r24.z, l(-1)
              endif 
              or r24.x, r24.y, r24.z
              if_z r24.x
                max r21.w, r21.w, l(0.00006104)
                and r24.x, l(0x0000ffff), cb9[r20.w + 1].w
                if_nz r7.w
                  utof r25.z, r24.x
                  mov r24.yz, l(0,0,0,0)
                  loop 
                    ige r30.w, r24.z, l(8)
                    breakc_nz r30.w
                    dp2 r38.x, icb[r24.z + 0].yxyy, r22.xwxx
                    dp2 r38.y, icb[r24.z + 0].xyxx, r14.xyxx
                    mad r25.xy, r38.xyxx, cb9[r20.w + 3].yyyy, r37.xyxx
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r25.x, r25.xyzx, t9.xxxx, s13, r21.w
                    mad r24.y, r25.x, l(0.125000), r24.y
                    iadd r24.z, r24.z, l(1)
                  endloop 
                else 
                  utof r37.z, r24.x
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.y, r37.xyzx, t9.xxxx, s13, r21.w
                endif 
                mul r20.w, r24.y, r24.y
                mul r20.w, r24.y, r20.w
              else 
                mov r20.w, l(1.000000)
              endif 
              mul r13.w, r13.w, r20.w
            else 
              ubfe r20.w, l(4), l(20), cb9[r9.w + 1].w
              ult r21.w, l(0), r20.w
              and r21.w, r0.z, r21.w
              if_nz r21.w
                iadd r20.w, r20.w, cb2[0].x
                imad r20.w, r20.w, l(15), l(-15)
                mad r21.w, |r15.w|, l(-0.200000), l(0.400000)
                lt r24.x, r15.w, l(0.000000)
                and r24.x, r3.x, r24.x
                movc r21.w, r24.x, -r21.w, r21.w
                mad r26.xyz, r12.xyzx, r21.wwww, r11.xyzx
                mov r37.xyz, cb9[r20.w + 6].yzwy
                mov r37.w, cb9[r20.w + 7].x
                dp4 r21.w, r37.xyzw, r26.xyzw
                mov r37.xyz, cb9[r20.w + 7].yzwy
                mov r37.w, cb9[r20.w + 8].x
                dp4 r24.x, r37.xyzw, r26.xyzw
                lt r24.z, r24.x, r21.w
                if_z r24.z
                  mov r37.xyz, cb9[r20.w + 4].yzwy
                  mov r37.w, cb9[r20.w + 5].x
                  dp4 r25.x, r37.xyzw, r26.xyzw
                  mov r37.xyz, cb9[r20.w + 5].yzwy
                  mov r37.w, cb9[r20.w + 6].x
                  dp4 r25.y, r37.xyzw, r26.xyzw
                  div r25.xy, r25.xyxx, r24.xxxx
                  mad r25.xy, r25.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r26.x, r25.x, cb9[r20.w + 9].w
                  add r26.y, r25.y, cb9[r20.w + 10].x
                  mul r25.xy, r26.xyxx, cb9[r20.w + 9].yzyy
                  div r26.xy, cb9[r20.w + 3].yyyy, cb9[r20.w + 8].ywyy
                  add r37.xy, -r26.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                  ge r37.xy, r25.xyxx, r37.xyxx
                  ge r26.xy, r26.xyxx, r25.xyxx
                  or r26.xy, r26.xyxx, r37.xyxx
                  or r25.z, r26.y, r26.x
                  if_z r25.z
                    mov_sat r25.xy, r25.xyxx
                    mad r26.x, r25.x, cb9[r20.w + 8].y, cb9[r20.w + 8].z
                    mad r26.y, r25.y, cb9[r20.w + 8].w, cb9[r20.w + 9].x
                    mul r25.x, r24.x, cb9[r20.w + 10].z
                    mad r21.w, cb9[r20.w + 10].y, r24.x, r21.w
                    div r21.w, r21.w, r25.x
                  endif 
                else 
                  mov r25.z, l(-1)
                endif 
                or r24.x, r24.z, r25.z
                if_z r24.x
                  max r21.w, r21.w, l(0.00006104)
                  and r24.x, l(0x0000ffff), cb9[r20.w + 1].w
                  if_nz r7.w
                    utof r25.z, r24.x
                    mov r24.z, l(0)
                    mov r30.w, l(0)
                    loop 
                      ige r31.w, r30.w, l(8)
                      breakc_nz r31.w
                      dp2 r37.x, icb[r30.w + 0].xyxx, r28.xyxx
                      dp2 r37.y, icb[r30.w + 0].yxyy, r28.xzxx
                      mad r25.xy, r37.xyxx, cb9[r20.w + 3].yyyy, r26.xyxx
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r25.x, r25.xyzx, t9.xxxx, s13, r21.w
                      mad r24.z, r25.x, l(0.125000), r24.z
                      iadd r30.w, r30.w, l(1)
                    endloop 
                  else 
                    utof r26.z, r24.x
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.z, r26.xyzx, t9.xxxx, s13, r21.w
                  endif 
                  mul r20.w, r24.z, r24.z
                  mul r20.w, r24.z, r20.w
                else 
                  mov r20.w, l(1.000000)
                endif 
                mul r13.w, r13.w, r20.w
              endif 
            endif 
            mad r20.w, -r19.w, r0.w, l(1.000000)
            mul r20.w, r20.w, r20.w
            mad r20.w, -r20.w, l(0.620000), l(0.620000)
            add r20.w, -r19.w, r20.w
            mad r19.w, r1.w, r20.w, r19.w
            mul r19.w, r13.w, r19.w
            lt r15.w, l(0.000000), r15.w
            mad r25.xyz, r19.wwww, r23.xywx, r10.yzwy
            mad r26.xyz, r36.xyzx, r14.zzzz, r13.xyzx
            dp3 r14.z, r26.xyzx, r26.xyzx
            rsq r14.z, r14.z
            mul r26.xyz, r14.zzzz, r26.xyzx
            dp3 r14.z, r26.xyzx, r13.xyzx
            dp3 r20.w, r12.xyzx, r26.xyzx
            mad r21.w, |r20.w|, r1.z, -|r20.w|
            mad r20.w, |r20.w|, r21.w, l(1.000000)
            mad r21.w, r18.w, r0.y, r2.y
            mul r20.w, r20.w, r20.w
            mul r20.w, r21.w, r20.w
            rcp r20.w, r20.w
            mul r14.w, r14.w, r18.w
            mul r14.w, r14.w, r20.w
            mul r13.w, r13.w, r14.w
            mad r26.xyz, r13.wwww, r23.xywx, r35.xyzx
            add_sat r14.z, -r14.z, l(1.000000)
            mul r14.w, r14.z, r14.z
            mul r14.w, r14.w, r14.w
            mul r14.z, r14.w, r14.z
            mul r13.w, r13.w, r14.z
            mad r36.xyz, r13.wwww, r23.xywx, r34.xyzx
            mad r23.xyw, r19.wwww, r23.xyxw, r16.yzyw
            movc r23.xyw, r3.xxxx, r23.xyxw, r16.yzyw
            movc r10.yzw, r15.wwww, r25.xxyz, r10.yyzw
            movc r16.yzw, r15.wwww, r16.yyzw, r23.xxyw
            movc r34.xyz, r15.wwww, r36.xyzx, r34.xyzx
            movc r35.xyz, r15.wwww, r26.xyzx, r35.xyzx
          endif 
        endif 
      endif 
    else 
      ieq r12.w, r12.w, l(4)
      if_nz r12.w
        ubfe r12.w, l(3), l(27), cb9[r9.w + 1].w
        mul r13.w, r1.z, cb9[r9.w + 1].z
        mul r13.w, r13.w, l(0.250000)
        lt r14.z, l(0.000000), cb9[r9.w + 6].y
        mov r25.xy, cb9[r9.w + 5].zwzz
        mov r25.z, cb9[r9.w + 6].x
        mad r23.xyw, -r25.xyxz, l(0.500000, 0.500000, 0.000000, 0.500000), cb9[r9.w + 0].xyxz
        add r26.xyz, -r11.xyzx, r23.xywx
        dp3 r14.w, r25.xyzx, r18.xyzx
        dp3 r15.w, r25.xyzx, r26.xyzx
        dp3 r18.w, r18.xyzx, r26.xyzx
        mad r19.w, -r14.w, r14.w, cb9[r9.w + 6].y
        mad r14.w, r14.w, r18.w, -r15.w
        div_sat r15.w, -r15.w, cb9[r9.w + 6].y
        div_sat r14.w, r14.w, r19.w
        div r18.w, r19.w, cb9[r9.w + 6].y
        mul r18.w, r18.w, l(10.000000)
        min r18.w, r18.w, l(1.000000)
        add r14.w, -r15.w, r14.w
        mad r14.w, r18.w, r14.w, r15.w
        mad r26.xyz, r14.wwww, r25.xyzx, r23.xywx
        mad r23.xyw, r15.wwww, r25.xyxz, r23.xyxw
        movc r23.xyw, r14.zzzz, r23.xyxw, cb9[r9.w + 0].xyxz
        movc r25.xyz, r14.zzzz, r26.xyzx, cb9[r9.w + 0].xyzx
        add r25.xyz, -r11.xyzx, r25.xyzx
        add r23.xyw, -r11.xyxz, r23.xyxw
        dp3 r14.z, r25.xyzx, r25.xyzx
        rsq r14.z, r14.z
        mul r26.xyz, r14.zzzz, r25.xyzx
        dp3 r14.w, r23.xywx, r23.xywx
        rsq r15.w, r14.w
        mul r23.xyw, r15.wwww, r23.xyxw
        dp3 r15.w, r12.xyzx, r23.xywx
        mov_sat r18.w, r15.w
        movc r18.w, r3.x, |r15.w|, r18.w
        lt r19.w, l(0.000000), r18.w
        if_nz r19.w
          sqrt r19.w, r14.w
          mul r20.w, cb9[r9.w + 3].x, cb9[r9.w + 3].x
          div r14.w, r20.w, r14.w
          min r14.w, r14.w, l(1.000000)
          mad_sat r23.xy, r19.wwww, cb9[r9.w + 2].xzxx, cb9[r9.w + 2].ywyy
          mul r36.xy, r23.xyxx, r23.xyxx
          mad r23.xy, r23.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
          mul r23.xy, r23.xyxx, r36.xyxx
          mul r14.w, r14.w, r23.x
          mul r14.w, r23.y, r14.w
          lt r19.w, l(0.000000), r14.w
          if_nz r19.w
            ine r12.w, r12.w, l(1)
            if_nz r12.w
              mad r12.w, |r15.w|, l(-0.200000), l(0.400000)
              lt r19.w, r15.w, l(0.000000)
              and r19.w, r3.x, r19.w
              movc r12.w, r19.w, -r12.w, r12.w
              mad r23.xyw, r12.xyxz, r12.wwww, r11.xyxz
              add r23.xyw, r23.xyxw, -cb9[r9.w + 4].yzyw
              max r12.w, |r23.w|, |r23.y|
              max r12.w, r12.w, |r23.x|
              div r12.w, cb9[r9.w + 5].x, r12.w
              add r12.w, r12.w, cb9[r9.w + 5].y
              dp3 r19.w, r23.xywx, r23.xywx
              rsq r19.w, r19.w
              max r12.w, r12.w, l(0.00006104)
              and r20.w, l(0x0000ffff), cb9[r9.w + 1].w
              utof r36.w, r20.w
              mov r20.w, l(0)
              mov r21.w, l(0)
              loop 
                ige r24.x, r21.w, l(8)
                breakc_nz r24.x
                dp2 r37.y, icb[r21.w + 0].xyxx, r15.xyxx
                dp2 r37.z, icb[r21.w + 0].yxyy, r15.xzxx
                mul r37.yz, r37.yyzy, cb9[r9.w + 3].yyyy
                mul r37.x, r17.x, r37.y
                mul r37.w, r16.x, r37.y
                mad r36.xyz, r23.xywx, r19.wwww, r37.xzwx
                sample_c_lz_indexable(texturecubearray)(float,float,float,float) r24.x, r36.xyzw, t10.xxxx, s13, r12.w
                mad r20.w, r24.x, l(0.125000), r20.w
                iadd r21.w, r21.w, l(1)
              endloop 
            else 
              mov r20.w, l(1.000000)
            endif 
            mul r12.w, r14.w, r20.w
            lt r14.w, l(0.000000), r12.w
            if_nz r14.w
              ubfe r14.w, l(4), l(16), cb9[r9.w + 1].w
              ult r19.w, l(0), r14.w
              and r19.w, r10.x, r19.w
              if_nz r19.w
                iadd r14.w, r14.w, cb2[0].x
                imad r14.w, r14.w, l(15), l(-15)
                mad r19.w, |r15.w|, l(-0.200000), l(0.400000)
                lt r21.w, r15.w, l(0.000000)
                and r21.w, r3.x, r21.w
                movc r19.w, r21.w, -r19.w, r19.w
                mad r27.xyz, r12.xyzx, r19.wwww, r11.xyzx
                mov r36.xyz, cb9[r14.w + 6].yzwy
                mov r36.w, cb9[r14.w + 7].x
                dp4 r19.w, r36.xyzw, r27.xyzw
                mov r36.xyz, cb9[r14.w + 7].yzwy
                mov r36.w, cb9[r14.w + 8].x
                dp4 r21.w, r36.xyzw, r27.xyzw
                lt r23.x, r21.w, r19.w
                if_z r23.x
                  mov r36.xyz, cb9[r14.w + 4].yzwy
                  mov r36.w, cb9[r14.w + 5].x
                  dp4 r36.x, r36.xyzw, r27.xyzw
                  mov r37.xyz, cb9[r14.w + 5].yzwy
                  mov r37.w, cb9[r14.w + 6].x
                  dp4 r36.y, r37.xyzw, r27.xyzw
                  div r23.yw, r36.xxxy, r21.wwww
                  mad r23.yw, r23.yyyw, l(0.000000, 0.500000, 0.000000, -0.500000), l(0.000000, 0.500000, 0.000000, 0.500000)
                  add r27.x, r23.y, cb9[r14.w + 9].w
                  add r27.y, r23.w, cb9[r14.w + 10].x
                  mul r23.yw, r27.xxxy, cb9[r14.w + 9].yyyz
                  div r27.xy, cb9[r14.w + 3].yyyy, cb9[r14.w + 8].ywyy
                  add r36.xy, -r27.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                  ge r36.xy, r23.ywyy, r36.xyxx
                  ge r27.xy, r27.xyxx, r23.ywyy
                  or r27.xy, r27.xyxx, r36.xyxx
                  or r24.x, r27.y, r27.x
                  if_z r24.x
                    mov_sat r23.yw, r23.yyyw
                    mad r27.x, r23.y, cb9[r14.w + 8].y, cb9[r14.w + 8].z
                    mad r27.y, r23.w, cb9[r14.w + 8].w, cb9[r14.w + 9].x
                    mul r23.y, r21.w, cb9[r14.w + 10].z
                    mad r19.w, cb9[r14.w + 10].y, r21.w, r19.w
                    div r19.w, r19.w, r23.y
                  endif 
                else 
                  mov r24.x, l(-1)
                endif 
                or r21.w, r23.x, r24.x
                if_z r21.w
                  max r19.w, r19.w, l(0.00006104)
                  and r21.w, l(0x0000ffff), cb9[r14.w + 1].w
                  if_nz r7.w
                    utof r36.z, r21.w
                    mov r23.xy, l(0,0,0,0)
                    loop 
                      ige r23.w, r23.y, l(8)
                      breakc_nz r23.w
                      dp2 r37.x, icb[r23.y + 0].xyxx, r30.xyxx
                      dp2 r37.y, icb[r23.y + 0].yxyy, r30.xzxx
                      mad r36.xy, r37.xyxx, cb9[r14.w + 3].yyyy, r27.xyxx
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.w, r36.xyzx, t9.xxxx, s13, r19.w
                      mad r23.x, r23.w, l(0.125000), r23.x
                      iadd r23.y, r23.y, l(1)
                    endloop 
                  else 
                    utof r27.z, r21.w
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.x, r27.xyzx, t9.xxxx, s13, r19.w
                  endif 
                  mul r14.w, r23.x, r23.x
                  mul r14.w, r23.x, r14.w
                else 
                  mov r14.w, l(1.000000)
                endif 
                mul r12.w, r12.w, r14.w
              else 
                ubfe r14.w, l(4), l(20), cb9[r9.w + 1].w
                ult r19.w, l(0), r14.w
                and r19.w, r0.z, r19.w
                if_nz r19.w
                  iadd r14.w, r14.w, cb2[0].x
                  imad r14.w, r14.w, l(15), l(-15)
                  mad r19.w, |r15.w|, l(-0.200000), l(0.400000)
                  lt r21.w, r15.w, l(0.000000)
                  and r21.w, r3.x, r21.w
                  movc r19.w, r21.w, -r19.w, r19.w
                  mad r29.xyz, r12.xyzx, r19.wwww, r11.xyzx
                  mov r36.xyz, cb9[r14.w + 6].yzwy
                  mov r36.w, cb9[r14.w + 7].x
                  dp4 r19.w, r36.xyzw, r29.xyzw
                  mov r36.xyz, cb9[r14.w + 7].yzwy
                  mov r36.w, cb9[r14.w + 8].x
                  dp4 r21.w, r36.xyzw, r29.xyzw
                  lt r23.y, r21.w, r19.w
                  if_z r23.y
                    mov r36.xyz, cb9[r14.w + 4].yzwy
                    mov r36.w, cb9[r14.w + 5].x
                    dp4 r27.x, r36.xyzw, r29.xyzw
                    mov r36.xyz, cb9[r14.w + 5].yzwy
                    mov r36.w, cb9[r14.w + 6].x
                    dp4 r27.y, r36.xyzw, r29.xyzw
                    div r27.xy, r27.xyxx, r21.wwww
                    mad r27.xy, r27.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r29.x, r27.x, cb9[r14.w + 9].w
                    add r29.y, r27.y, cb9[r14.w + 10].x
                    mul r27.xy, r29.xyxx, cb9[r14.w + 9].yzyy
                    div r29.xy, cb9[r14.w + 3].yyyy, cb9[r14.w + 8].ywyy
                    add r36.xy, -r29.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                    ge r36.xy, r27.xyxx, r36.xyxx
                    ge r29.xy, r29.xyxx, r27.xyxx
                    or r29.xy, r29.xyxx, r36.xyxx
                    or r23.w, r29.y, r29.x
                    if_z r23.w
                      mov_sat r27.xy, r27.xyxx
                      mad r29.x, r27.x, cb9[r14.w + 8].y, cb9[r14.w + 8].z
                      mad r29.y, r27.y, cb9[r14.w + 8].w, cb9[r14.w + 9].x
                      mul r24.x, r21.w, cb9[r14.w + 10].z
                      mad r19.w, cb9[r14.w + 10].y, r21.w, r19.w
                      div r19.w, r19.w, r24.x
                    endif 
                  else 
                    mov r23.w, l(-1)
                  endif 
                  or r21.w, r23.y, r23.w
                  if_z r21.w
                    max r19.w, r19.w, l(0.00006104)
                    and r21.w, l(0x0000ffff), cb9[r14.w + 1].w
                    if_nz r7.w
                      utof r27.z, r21.w
                      mov r23.yw, l(0,0,0,0)
                      loop 
                        ige r24.x, r23.w, l(8)
                        breakc_nz r24.x
                        dp2 r36.x, icb[r23.w + 0].xyxx, r31.xyxx
                        dp2 r36.y, icb[r23.w + 0].yxyy, r31.xzxx
                        mad r27.xy, r36.xyxx, cb9[r14.w + 3].yyyy, r29.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.x, r27.xyzx, t9.xxxx, s13, r19.w
                        mad r23.y, r24.x, l(0.125000), r23.y
                        iadd r23.w, r23.w, l(1)
                      endloop 
                    else 
                      utof r29.z, r21.w
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.y, r29.xyzx, t9.xxxx, s13, r19.w
                    endif 
                    mul r14.w, r23.y, r23.y
                    mul r14.w, r23.y, r14.w
                  else 
                    mov r14.w, l(1.000000)
                  endif 
                  mul r12.w, r12.w, r14.w
                endif 
              endif 
              mad r14.w, -r18.w, r0.w, l(1.000000)
              mul r14.w, r14.w, r14.w
              mad r14.w, -r14.w, l(0.620000), l(0.620000)
              add r14.w, -r18.w, r14.w
              mad r14.w, r1.w, r14.w, r18.w
              mul r14.w, r12.w, r14.w
              mov r27.x, cb9[r9.w + 0].w
              mov r27.yz, cb9[r9.w + 1].xxyx
              lt r9.w, l(0.000000), r15.w
              mad r29.xyz, r14.wwww, r27.xyzx, r10.yzwy
              dp3_sat r15.w, r12.xyzx, r26.xyzx
              mad r25.xyz, r25.xyzx, r14.zzzz, r13.xyzx
              dp3 r14.z, r25.xyzx, r25.xyzx
              rsq r14.z, r14.z
              mul r25.xyz, r14.zzzz, r25.xyzx
              dp3 r14.z, r25.xyzx, r13.xyzx
              dp3 r18.w, r12.xyzx, r25.xyzx
              mad r19.w, |r18.w|, r1.z, -|r18.w|
              mad r18.w, |r18.w|, r19.w, l(1.000000)
              mad r19.w, r15.w, r0.y, r2.y
              mul r18.w, r18.w, r18.w
              mul r18.w, r19.w, r18.w
              rcp r18.w, r18.w
              mul r13.w, r13.w, r15.w
              mul r13.w, r13.w, r18.w
              mul r12.w, r12.w, r13.w
              mad r25.xyz, r12.wwww, r27.xyzx, r35.xyzx
              add_sat r13.w, -r14.z, l(1.000000)
              mul r14.z, r13.w, r13.w
              mul r14.z, r14.z, r14.z
              mul r13.w, r13.w, r14.z
              mul r12.w, r12.w, r13.w
              mad r26.xyz, r12.wwww, r27.xyzx, r34.xyzx
              mad r27.xyz, r14.wwww, r27.xyzx, r16.yzwy
              movc r27.xyz, r3.xxxx, r27.xyzx, r16.yzwy
              movc r10.yzw, r9.wwww, r29.xxyz, r10.yyzw
              movc r16.yzw, r9.wwww, r16.yyzw, r27.xxyz
              movc r34.xyz, r9.wwww, r26.xyzx, r34.xyzx
              movc r35.xyz, r9.wwww, r25.xyzx, r35.xyzx
            endif 
          endif 
        endif 
      endif 
    endif 
  endloop 
  mov r2.xzw, r10.yyzw
  mov r32.xyz, r16.yzwy
  mov r33.xyz, r34.xyzx
  mov r3.yzw, r35.xxyz
  iadd r5.z, r5.z, l(32)
endloop 
mad r0.xyz, r5.xwyx, l(1.000000, 3.000000, 2.000000, 0.000000), l(0.000000, 0.500000, -1.000000, 0.000000)
ftou r1.z, r0.y
mad r5.xyz, r6.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r1.w, r5.x
ieq r1.w, r1.z, r1.w
movc r5.xy, r1.wwww, r5.yzyy, l(-1.000000,0,0,0)
mad r6.xyz, r7.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r1.w, r6.x
ieq r1.w, r1.z, r1.w
movc r5.zw, r1.wwww, r6.yyyz, l(0,0,-1.000000,0)
mad r6.xyz, r8.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r1.w, r6.x
ieq r1.w, r1.z, r1.w
movc r6.xy, r1.wwww, r6.yzyy, l(-1.000000,0,0,0)
mad r7.xyz, r9.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r1.w, r7.x
ieq r1.z, r1.z, r1.w
movc r1.zw, r1.zzzz, r7.yyyz, l(0,0,-1.000000,0)
mov r7.xy, r5.xzxx
mov r7.z, r6.x
mov r7.w, r1.z
add r7.xyzw, -r0.xxxx, r7.xyzw
ge r7.xyzw, |r7.xyzw|, l(0.00902149, 0.00902149, 0.00902149, 0.00902149)
movc r7.xyzw, r7.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
add r1.z, r7.y, r7.x
add r1.z, r7.z, r1.z
add r1.z, r7.w, r1.z
mul r2.y, r5.w, r7.y
mad r2.y, r7.x, r5.y, r2.y
mad r2.y, r7.z, r6.y, r2.y
mad r1.w, r7.w, r1.w, r2.y
div r0.w, r1.w, r1.z
ge r1.z, l(0.000000), r1.z
movc r0.yz, r1.zzzz, l(0,0,0,0), r0.zzwz
and r1.zw, r1.xxxy, l(0, 0, 1, 1)
ieq r0.w, r1.w, r1.z
movc r0.xyz, r0.wwww, r0.xyzx, r0.xzyx
mad r0.x, -r0.z, l(0.500000), r0.x
add r5.y, r0.x, r0.z
mad r5.z, -r0.y, l(0.500000), r0.x
add r5.x, r0.y, r5.z
mul r0.xyz, r4.xyzx, r2.xzwx
mad r0.xyz, r32.xyzx, r5.xyzx, r0.xyzx
mul r6.xyz, r33.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
mad r6.xyz, r3.yzwy, l(0.040000, 0.040000, 0.040000, 0.000000), r6.xyzx
add r0.xyz, r0.xyzx, r6.xyzx
add r6.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r6.xyz, r6.xyzx, r33.xyzx
mad r3.yzw, r3.yyzw, r5.xxyz, r6.xxyz
mad r2.xyz, r2.xzwx, r4.xyzx, r3.yzwy
movc r0.xyz, r3.xxxx, r0.xyzx, r2.xyzx
lt r0.w, l(0.000000), cb2[9].z
if_nz r0.w
  dp3 r0.w, r11.xyzx, r11.xyzx
  rsq r1.z, r0.w
  mul r2.xyz, r1.zzzz, r11.xyzx
  sqrt r0.w, r0.w
  lt r1.z, l(0.000000), cb2[13].w
  if_nz r1.z
    mad r1.zw, r0.wwww, cb2[15].xxxy, cb2[14].zzzw
    mul r1.zw, r1.zzzw, cb2[16].xxxy
    lt r2.w, l(0.010000), |r11.z|
    mul r3.xy, r11.zzzz, cb2[15].zwzz
    mul r3.zw, r3.xxxy, l(0.000000, 0.000000, -1.442695, -1.442695)
    exp r3.zw, r3.zzzw
    add r3.zw, -r3.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    div r3.xy, r3.zwzz, r3.xyxx
    mul r3.xy, r1.zwzz, r3.xyxx
    movc r1.zw, r2.wwww, r3.xxxy, r1.zzzw
    mul r3.xyz, r1.zzzz, cb2[12].xyzx
    exp r3.xyz, r3.xyzx
    mul r4.xyz, r1.wwww, cb2[12].xyzx
    exp r4.xyz, r4.xyzx
    add r4.xyz, -r3.xyzx, r4.xyzx
    mad r3.xyz, cb2[13].wwww, r4.xyzx, r3.xyzx
  else 
    mad r1.z, r0.w, cb2[15].x, cb2[14].z
    mul r1.z, r1.z, cb2[16].x
    lt r1.w, l(0.010000), |r11.z|
    mul r2.w, r11.z, cb2[15].z
    mul r3.w, r2.w, l(-1.442695)
    exp r3.w, r3.w
    add r3.w, -r3.w, l(1.000000)
    div r2.w, r3.w, r2.w
    mul r2.w, r1.z, r2.w
    movc r1.z, r1.w, r2.w, r1.z
    mul r4.xyz, r1.zzzz, cb2[12].xyzx
    exp r3.xyz, r4.xyzx
  endif 
  mad r3.xyz, r3.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r3.xyz, r3.xyzx, -cb2[9].zzzz
  dp3 r1.z, cb2[7].yzwy, -r2.xyzx
  mad r1.w, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r2.x, cb2[8].w, -r1.z, l(1.000000)
  mul r2.x, r2.x, r2.x
  mul r2.x, r2.x, l(12.566371)
  div r1.w, r1.w, r2.x
  add r0.w, r0.w, -cb2[10].w
  mul_sat r0.w, r0.w, cb2[11].w
  mul r0.w, r0.w, r1.w
  mov_sat r1.z, r1.z
  mad r1.z, r1.z, r1.z, l(1.000000)
  mad r1.z, r1.z, l(0.05968310), l(-1.000000)
  mad r1.z, cb2[8].z, r1.z, l(1.000000)
  mul r2.xyz, r0.wwww, cb2[11].xyzx
  mad r2.xyz, r1.zzzz, cb2[10].xyzx, r2.xyzx
  mul r2.xyz, r2.xyzx, cb2[9].wwww
  add r4.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r2.xyz, r2.xyzx, r4.xyzx
  mad r2.xyz, r0.xyzx, r3.xyzx, r2.xyzx
else 
  mul r0.w, r11.z, cb2[6].x
  mad r1.z, cb2[6].x, r11.z, cb2[5].x
  lt r1.w, |r0.w|, l(0.000100)
  min r2.w, r1.z, l(64.000000)
  mul r2.w, r2.w, l(1.442695)
  exp r2.w, r2.w
  mov_sat r3.x, cb2[6].z
  lt r3.y, r1.z, l(0.000000)
  add r1.z, r1.z, l(1.000000)
  movc r1.z, r3.y, r2.w, r1.z
  add r1.z, r1.z, -cb2[6].z
  movc r0.w, r1.w, l(1.000000), r0.w
  div r0.w, r1.z, r0.w
  movc r0.w, r1.w, r3.x, r0.w
  mul r0.w, r0.w, cb2[5].z
  dp3 r1.z, r11.xyzx, r11.xyzx
  sqrt r1.w, r1.z
  mad r0.w, r0.w, r1.w, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  rsq r1.z, r1.z
  mul r3.xyz, r1.zzzz, r11.xyzx
  dp3 r1.z, cb2[7].yzwy, r3.xyzx
  mad_sat r1.z, cb2[8].y, r1.z, cb2[8].x
  add r3.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r3.xyzw, r1.zzzz, r3.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r3.w
  add r3.xyz, -r0.xyzx, r3.xyzx
  mad r2.xyz, r0.wwww, r3.xyzx, r0.xyzx
endif 
mul r0.xyzw, r2.xyzx, cb1[85].yyyy
ge r2.xyzw, r0.wyzw, l(0.00006104, 0.00006104, 0.00006104, 0.00006104)
and r0.xyzw, r0.xyzw, r2.xyzw
min r0.xyzw, r0.xyzw, l(65024.000000, 65024.000000, 64512.000000, 65024.000000)
store_uav_typed u0.xyzw, r1.xyyy, r0.xyzw
ret 
// Approximately 2321 instruction slots used
