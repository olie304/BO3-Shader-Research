//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:23:02 2021
//
//
// Buffer Definitions: 
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4
//   uint enableCountDebug;             // Offset:  836 Size:     4
//   uint centerGroupIDx;               // Offset:  840 Size:     4
//   uint centerGroupIDy;               // Offset:  844 Size:     4
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4
//   float drawNumLighstScale;          // Offset:  856 Size:     4
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4 [unused]
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4
//   uint showAO;                       // Offset:  880 Size:     4
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// cbuffer LightingPackCBuffer
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } lightConstantsCB[273];           // Offset:    0 Size: 65520
//
// }
//
// cbuffer RefProbePackCBuffer
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } refProbeConstantsCB[273];        // Offset:    0 Size: 61152
//
// }
//
// cbuffer RefProbeBlendPackCBuffer
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } refProbeAttenuationConstantsCB[682];// Offset:    0 Size: 65472
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for gPermutedTilingBuffer
// {
//
//   struct PermutedTilingBuffer
//   {
//       
//       uint2 data;                    // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:     8
//
// }
//
// Resource bind info for lightingDebug
// {
//
//   struct LightingDebug
//   {
//       
//       struct LightingDebugCounts
//       {
//           
//           uint visibleLights;        // Offset:    0
//           uint activeLights;         // Offset:    4
//           uint litLights;            // Offset:    8
//           uint visibleProbes;        // Offset:   12
//           uint activeProbes;         // Offset:   16
//
//       } maxCounts;                   // Offset:    0
//       
//       struct LightingDebugCounts
//       {
//           
//           uint visibleLights;        // Offset:   20
//           uint activeLights;         // Offset:   24
//           uint litLights;            // Offset:   28
//           uint visibleProbes;        // Offset:   32
//           uint activeProbes;         // Offset:   36
//
//       } centerCounts;                // Offset:   20
//       
//       struct LightingDebugCounts
//       {
//           
//           uint visibleLights;        // Offset:   40
//           uint activeLights;         // Offset:   44
//           uint litLights;            // Offset:   48
//           uint visibleProbes;        // Offset:   52
//           uint activeProbes;         // Offset:   56
//
//       } sumDeferredCounts;           // Offset:   40
//       
//       struct LightingDebugCounts
//       {
//           
//           uint visibleLights;        // Offset:   60
//           uint activeLights;         // Offset:   64
//           uint litLights;            // Offset:   68
//           uint visibleProbes;        // Offset:   72
//           uint activeProbes;         // Offset:   76
//
//       } sumForwardCounts;            // Offset:   60
//       float3 cameraWorldPos;         // Offset:   80
//       float3 pickedWldPos;           // Offset:   92
//       uint numPickedLights;          // Offset:  104
//       uint numPickedProbes;          // Offset:  108
//       
//       struct LightingDebugLight
//       {
//           
//           uint flags;                // Offset:  112
//           float3 wldOrigin;          // Offset:  116
//           float activeAttenuation;   // Offset:  128
//           float litAttenuation;      // Offset:  132
//
//       } pickedLights[32];            // Offset:  112
//       
//       struct LightingDebugProbe
//       {
//           
//           uint flags;                // Offset:  880
//           float3 wldOrigin;          // Offset:  884
//           float weight;              // Offset:  896
//
//       } pickedProbes[32];            // Offset:  880
//       uint overdrawHistogram[64];    // Offset: 1520
//       uint overdrawSum;              // Offset: 1776
//       uint overdrawMax;              // Offset: 1780
//       float padding0;                // Offset: 1784
//       float padding1;                // Offset: 1788
//
//   } $Element;                        // Offset:    0 Size:  1792
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// samplerPointClamp                 sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// GBufferDiffuseColor               texture  float4          2d             t0      1 
// GBufferNormalAndGloss             texture  float4          2d             t1      1 
// GBufferSpecularColorAndOcclusion    texture  float4          2d             t2      1 
// GBufferDepth                      texture   float          2d             t4      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// gDownsampledScene                 texture  float4          2d            t21      1 
// gMotionVectors                    texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// gPermutedTilingBuffer             texture  struct         r/o            t25      1 
// gSSAOTexture                      texture   float          2d            t27      1 
// gSSAODepthTexture                 texture   float          2d            t28      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// litBuffer                             UAV  float3          2d             u0      1 
// lightingDebug                         UAV  struct         r/w             u2      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
// LightingPackCBuffer               cbuffer      NA          NA            cb9      1 
// RefProbePackCBuffer               cbuffer      NA          NA           cb10      1 
// RefProbeBlendPackCBuffer          cbuffer      NA          NA           cb11      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB1[86], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_constantbuffer CB9[4095], dynamicIndexed
dcl_constantbuffer CB10[3584], dynamicIndexed
dcl_constantbuffer CB11[4092], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s4, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_structured t25, 8
dcl_resource_texture2d (float,float,float,float) t27
dcl_resource_texture2d (float,float,float,float) t28
dcl_resource_texture2darray (float,float,float,float) t31
dcl_uav_typed_texture2d (float,float,float,float) u0
dcl_uav_structured u2, 1792
dcl_input vThreadIDInGroupFlattened
dcl_input vThreadGroupID.x
dcl_input vThreadIDInGroup.xy
dcl_temps 40
dcl_tgsm_raw g0, 4
dcl_tgsm_raw g1, 20
dcl_tgsm_raw g2, 20
dcl_thread_group 8, 8, 1
if_z vThreadIDInGroupFlattened.x
  store_raw g0.x, l(0), l(0)
  store_raw g1.xyzw, l(0), l(0,0,0,0)
  store_raw g1.x, l(16), l(0)
  store_raw g2.xyzw, l(0), l(0,0,0,0)
  store_raw g2.x, l(16), l(0)
endif 
sync_g_t
imad r0.x, cb2[57].x, l(11), vThreadGroupID.x
ld_structured_indexable(structured_buffer, stride=8)(mixed,mixed,mixed,mixed) r0.xy, r0.x, l(0), t25.xyxx
and r0.zw, r0.xxxy, l(0, 0, 4095, 4095)
imad r1.xy, r0.zwzz, l(8, 8, 0, 0), vThreadIDInGroup.xyxx
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.xyww, t1.xyzw
ftou r3.xy, cb1[44].xyxx
ult r3.xy, r1.xyxx, r3.xyxx
and r3.x, r3.y, r3.x
lt r3.y, l(0.000000), r2.z
and r3.x, r3.y, r3.x
if_z r3.x
  ret 
endif 
ld_indexable(texture2d)(float,float,float,float) r4.xyzw, r1.xyww, t2.xyzw
utof r3.yz, r1.xxyx
add r5.xy, r3.yzyy, l(0.500000, 0.500000, 0.000000, 0.000000)
mul r5.zw, r5.xxxy, cb1[44].zzzw
sample_l_indexable(texture2d)(float,float,float,float) r3.w, r5.zwzz, t27.yzwx, s4, l(0.000000)
mul r3.w, r3.w, r4.z
if_nz cb2[55].x
  mul r4.z, r3.w, l(0.750000)
  store_uav_typed u0.xyzw, r1.xyyy, r4.zzzz
  ret 
else 
  movc r4.z, cb2[54].w, r3.w, l(1.000000)
endif 
ge r3.w, r2.z, l(0.500000)
ld_indexable(texture2d)(float,float,float,float) r5.z, r1.xyww, t4.yzxw
ld_indexable(texture2d)(float,float,float,float) r6.xyz, r1.xyww, t0.xyzw
ld_aoffimmi_indexable(-1,0,0)(texture2d)(float,float,float,float) r7.xyz, r1.xyww, t2.xywz
ld_aoffimmi_indexable(0,-1,0)(texture2d)(float,float,float,float) r8.xyz, r1.xyww, t2.xywz
ld_aoffimmi_indexable(1,0,0)(texture2d)(float,float,float,float) r9.xyz, r1.xyww, t2.xywz
ld_aoffimmi_indexable(0,1,0)(texture2d)(float,float,float,float) r10.xyz, r1.xyzw, t2.xywz
ge r11.x, r5.z, l(0.984375)
mul r1.z, r5.z, l(1.01587307)
mad r1.w, r5.z, l(64.000000), l(-63.000000)
movc r1.z, r11.x, r1.w, r1.z
max r1.z, r1.z, l(0.00000001)
rcp r11.y, r1.z
and r1.zw, r3.xxxx, r11.xxxy
add r5.xy, r5.xyxx, -cb1[71].xyxx
mul r5.xy, r5.xyxx, cb1[44].zwzz
mad r5.xy, r5.xyxx, l(2.000000, -2.000000, 0.000000, 0.000000), l(-1.000000, 1.000000, 0.000000, 0.000000)
mul r11.x, r5.x, cb1[12].x
mul r11.y, r5.y, cb1[13].y
mov r11.z, l(1.000000)
mul r5.xyz, r1.wwww, r11.xyzx
mul r11.xyz, r5.yyyy, cb1[17].xyzx
mad r5.xyw, r5.xxxx, cb1[16].xyxz, r11.xyxz
mad r5.xyz, r5.zzzz, cb1[18].xyzx, r5.xywx
mad r2.w, r2.w, l(3.000000), l(0.500000)
ftou r2.w, r2.w
mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r2.xy, r2.xyxx, l(0.850000, 0.850000, 0.000000, 0.000000)
dp2 r3.x, r2.xyxx, r2.xyxx
add r11.zw, -r3.xxxx, l(0.000000, 0.000000, 2.000000, 1.000000)
sqrt r3.x, r11.z
mul r11.xy, r2.xyxx, r3.xxxx
and r12.xyzw, r2.wwww, l(2, 1, 2, 1)
movc r12.xyzw, r12.zwxy, l(-1.000000,-1.000000,1,1), l(1.000000,1.000000,0,0)
xor r2.x, r12.w, r12.z
movc r12.z, r2.x, l(-1.000000), l(1.000000)
mul r2.xyw, r12.xyxz, l(-1.000000, 0.000000, 0.000000, 1.000000)
mul r13.xyz, r12.xyzx, l(1.000000, -2.000000, 1.000000, 0.000000)
mul r11.xyz, r11.xywx, l(0.40824831, 0.70710677, 0.57735026, 0.000000)
mul r2.xyw, r2.xyxw, r11.yyyy
mad r2.xyw, r13.xyxz, r11.xxxx, r2.xyxw
mad r11.xyz, r12.xyzx, r11.zzzz, r2.xywx
movc r2.x, r3.w, l(-0.500000), l(-0.00146628)
add r2.x, r2.x, r2.z
mul_sat r2.y, r2.x, l(2.00982332)
dp3 r2.z, -r5.xyzx, -r5.xyzx
rsq r2.z, r2.z
mul r12.xyz, r2.zzzz, -r5.xyzx
dp2 r2.w, r3.yzyy, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r2.w, r2.w
mul r2.w, r2.w, l(52.982918)
frc r2.w, r2.w
mad r2.w, r2.w, l(6.28318548), cb1[70].w
sincos r3.x, r13.x, r2.w
utof r14.xy, r1.yxyy
dp2 r2.w, r14.xyxx, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r2.w, r2.w
mul r2.w, r2.w, l(52.982918)
frc r2.w, r2.w
mad r2.w, r2.w, l(6.28318548), cb1[70].w
sincos r14.x, r15.x, r2.w
dp3_sat r2.x, r11.xyzx, r12.xyzx
dp3 r2.w, -r12.xyzx, r11.xyzx
add r2.w, r2.w, r2.w
mad r16.xyz, r11.xyzx, -r2.wwww, -r12.xyzx
mul r2.w, r2.y, l(17.000000)
exp r2.w, r2.w
add r2.w, r2.w, l(2.000000)
div r2.w, l(2.000000), r2.w
sqrt r3.z, r2.w
mul r14.yz, cb1[44].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000)
ftou r15.yz, r14.yyzy
ieq r15.yz, r1.xxyx, r15.yyzy
and r6.w, r15.z, r15.y
lt r7.w, l(0.83333331), r2.y
lt r8.w, l(60.000000), r1.w
and r7.w, r7.w, r8.w
if_nz r7.w
  mul r15.yzw, r5.yyyy, cb1[9].xxyw
  mad r15.yzw, r5.xxxx, cb1[8].xxyw, r15.yyzw
  mad r15.yzw, r5.zzzz, cb1[10].xxyw, r15.yyzw
  add r15.yzw, r15.yyzw, cb1[11].xxyw
  mad r17.xyz, r16.xyzx, l(2000.000000, 2000.000000, 2000.000000, 0.000000), r5.xyzx
  mul r18.xyz, r17.yyyy, cb1[9].xywx
  mad r17.xyw, r17.xxxx, cb1[8].xyxw, r18.xyxz
  mad r17.xyz, r17.zzzz, cb1[10].xywx, r17.xywx
  add r17.xyz, r17.xyzx, cb1[11].xywx
  ge r7.w, r17.z, r15.w
  if_nz r7.w
    rcp r18.z, r15.w
    mul r18.xy, r15.yzyy, r18.zzzz
    rcp r19.z, r17.z
    mul r19.xy, r17.xyxx, r19.zzzz
    lt r15.yz, l(0.000000, 1.000000, 1.000000, 0.000000), r19.xxyx
    mad r20.xyzw, r17.xxyy, r19.zzzz, l(-1.000000, 1.000000, -1.000000, 1.000000)
    mad r21.xyzw, r17.xxyy, r19.zzzz, -r18.xxyy
    lt r17.xy, r19.xyxx, l(-1.000000, -1.000000, 0.000000, 0.000000)
    div r20.xyzw, r20.xyzw, r21.xyzw
    and r17.xy, r17.xyxx, r20.ywyy
    movc r15.yz, r15.yyzy, r20.xxzx, r17.xxyx
    max r7.w, r15.z, r15.y
    add r17.xyw, r18.xyxz, -r19.xyxz
    mad r17.xyw, r7.wwww, r17.xyxw, r19.xyxz
    mad r15.yz, r18.xxyx, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
    mad r19.xy, r17.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    add r15.yz, r15.yyzy, -r19.xxyx
    mul r15.yz, r14.yyzy, |r15.yyzy|
    max r7.w, r15.z, r15.y
    max r7.w, r7.w, l(1.000000)
    rcp r7.w, r7.w
    mad r18.xyz, r18.xyzx, l(0.500000, -0.500000, 1.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    mad r20.xyz, r17.xywx, l(0.500000, -0.500000, 1.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    add r21.xyz, -r18.xyzx, r20.xyzx
    mad r18.xyz, r7.wwww, r21.xyzx, r18.xyzx
    add r20.xyz, -r18.xyzx, r20.xyzx
    mul r21.xyz, r20.xyzx, l(0.031250, 0.031250, 0.031250, 0.000000)
    mul r14.yz, r14.yyzy, |r21.xxyx|
    max r7.w, r14.z, r14.y
    log r7.w, r7.w
    round_pi r7.w, r7.w
    max r7.w, r7.w, l(0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r18.xyxx, t28.yzwx, s1, r7.w
    mad r14.yzw, r20.xxyz, l(0.000000, 0.031250, 0.031250, 0.031250), r18.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r9.w, r14.yzyy, t28.yzwx, s1, r7.w
    min r8.w, |r8.w|, |r9.w|
    mul r8.w, r14.w, r8.w
    lt r8.w, r8.w, l(1.000000)
    and r10.w, r8.w, l(1)
    mad r14.yzw, r20.xxyz, l(0.000000, 0.062500, 0.062500, 0.062500), r18.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r12.w, r14.yzyy, t28.yzwx, s1, r7.w
    min r9.w, |r9.w|, |r12.w|
    mul r9.w, r14.w, r9.w
    lt r9.w, r9.w, l(1.000000)
    bfi r8.w, l(1), l(0), r8.w, l(2)
    movc r8.w, r9.w, r8.w, r10.w
    mad r14.yzw, r20.xxyz, l(0.000000, 0.093750, 0.093750, 0.093750), r18.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r9.w, r14.yzyy, t28.yzwx, s1, r7.w
    min r10.w, |r12.w|, |r9.w|
    mul r10.w, r14.w, r10.w
    lt r10.w, r10.w, l(1.000000)
    iadd r12.w, r8.w, l(4)
    movc r8.w, r10.w, r12.w, r8.w
    mad r14.yzw, r20.xxyz, l(0.000000, 0.125000, 0.125000, 0.125000), r18.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r10.w, r14.yzyy, t28.yzwx, s1, r7.w
    min r9.w, |r9.w|, |r10.w|
    mul r9.w, r14.w, r9.w
    lt r9.w, r9.w, l(1.000000)
    iadd r12.w, r8.w, l(8)
    movc r8.w, r9.w, r12.w, r8.w
    mad r14.yzw, r20.xxyz, l(0.000000, 0.156250, 0.156250, 0.156250), r18.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r9.w, r14.yzyy, t28.yzwx, s1, r7.w
    min r10.w, |r10.w|, |r9.w|
    mul r10.w, r14.w, r10.w
    lt r10.w, r10.w, l(1.000000)
    iadd r12.w, r8.w, l(16)
    movc r8.w, r10.w, r12.w, r8.w
    mad r14.yzw, r20.xxyz, l(0.000000, 0.187500, 0.187500, 0.187500), r18.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r10.w, r14.yzyy, t28.yzwx, s1, r7.w
    min r9.w, |r9.w|, |r10.w|
    mul r9.w, r14.w, r9.w
    lt r9.w, r9.w, l(1.000000)
    iadd r12.w, r8.w, l(32)
    movc r8.w, r9.w, r12.w, r8.w
    mad r14.yzw, r20.xxyz, l(0.000000, 0.218750, 0.218750, 0.218750), r18.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r9.w, r14.yzyy, t28.yzwx, s1, r7.w
    min r10.w, |r10.w|, |r9.w|
    mul r10.w, r14.w, r10.w
    lt r10.w, r10.w, l(1.000000)
    iadd r12.w, r8.w, l(64)
    movc r8.w, r10.w, r12.w, r8.w
    mad r14.yzw, r20.xxyz, l(0.000000, 0.250000, 0.250000, 0.250000), r18.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r10.w, r14.yzyy, t28.yzwx, s1, r7.w
    min r9.w, |r9.w|, |r10.w|
    mul r9.w, r14.w, r9.w
    lt r9.w, r9.w, l(1.000000)
    iadd r12.w, r8.w, l(128)
    movc r8.w, r9.w, r12.w, r8.w
    mad r14.yzw, r20.xxyz, l(0.000000, 0.281250, 0.281250, 0.281250), r18.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r9.w, r14.yzyy, t28.yzwx, s1, r7.w
    min r10.w, |r10.w|, |r9.w|
    mul r10.w, r14.w, r10.w
    lt r10.w, r10.w, l(1.000000)
    iadd r12.w, r8.w, l(256)
    movc r8.w, r10.w, r12.w, r8.w
    mad r14.yzw, r20.xxyz, l(0.000000, 0.312500, 0.312500, 0.312500), r18.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r10.w, r14.yzyy, t28.yzwx, s1, r7.w
    min r9.w, |r9.w|, |r10.w|
    mul r9.w, r14.w, r9.w
    lt r9.w, r9.w, l(1.000000)
    iadd r12.w, r8.w, l(512)
    movc r8.w, r9.w, r12.w, r8.w
    mad r14.yzw, r20.xxyz, l(0.000000, 0.343750, 0.343750, 0.343750), r18.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r9.w, r14.yzyy, t28.yzwx, s1, r7.w
    min r10.w, |r10.w|, |r9.w|
    mul r10.w, r14.w, r10.w
    lt r10.w, r10.w, l(1.000000)
    iadd r12.w, r8.w, l(1024)
    movc r8.w, r10.w, r12.w, r8.w
    mad r14.yzw, r20.xxyz, l(0.000000, 0.375000, 0.375000, 0.375000), r18.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r10.w, r14.yzyy, t28.yzwx, s1, r7.w
    min r9.w, |r9.w|, |r10.w|
    mul r9.w, r14.w, r9.w
    lt r9.w, r9.w, l(1.000000)
    iadd r12.w, r8.w, l(2048)
    movc r8.w, r9.w, r12.w, r8.w
    mad r14.yzw, r20.xxyz, l(0.000000, 0.406250, 0.406250, 0.406250), r18.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r9.w, r14.yzyy, t28.yzwx, s1, r7.w
    min r10.w, |r10.w|, |r9.w|
    mul r10.w, r14.w, r10.w
    lt r10.w, r10.w, l(1.000000)
    iadd r12.w, r8.w, l(4096)
    movc r8.w, r10.w, r12.w, r8.w
    mad r14.yzw, r20.xxyz, l(0.000000, 0.437500, 0.437500, 0.437500), r18.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r10.w, r14.yzyy, t28.yzwx, s1, r7.w
    min r9.w, |r9.w|, |r10.w|
    mul r9.w, r14.w, r9.w
    lt r9.w, r9.w, l(1.000000)
    iadd r12.w, r8.w, l(8192)
    movc r8.w, r9.w, r12.w, r8.w
    mad r14.yzw, r20.xxyz, l(0.000000, 0.468750, 0.468750, 0.468750), r18.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r9.w, r14.yzyy, t28.yzwx, s1, r7.w
    min r10.w, |r10.w|, |r9.w|
    mul r10.w, r14.w, r10.w
    lt r10.w, r10.w, l(1.000000)
    iadd r12.w, r8.w, l(0x00004000)
    movc r8.w, r10.w, r12.w, r8.w
    mad r14.yzw, r20.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000), r18.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r10.w, r14.yzyy, t28.yzwx, s1, r7.w
    min r9.w, |r9.w|, |r10.w|
    mul r9.w, r14.w, r9.w
    lt r9.w, r9.w, l(1.000000)
    iadd r12.w, r8.w, l(0x00008000)
    movc r8.w, r9.w, r12.w, r8.w
    mad r14.yzw, r20.xxyz, l(0.000000, 0.531250, 0.531250, 0.531250), r18.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r9.w, r14.yzyy, t28.yzwx, s1, r7.w
    min r10.w, |r10.w|, |r9.w|
    mul r10.w, r14.w, r10.w
    lt r10.w, r10.w, l(1.000000)
    iadd r12.w, r8.w, l(0x00010000)
    movc r8.w, r10.w, r12.w, r8.w
    mad r14.yzw, r20.xxyz, l(0.000000, 0.562500, 0.562500, 0.562500), r18.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r10.w, r14.yzyy, t28.yzwx, s1, r7.w
    min r9.w, |r9.w|, |r10.w|
    mul r9.w, r14.w, r9.w
    lt r9.w, r9.w, l(1.000000)
    iadd r12.w, r8.w, l(0x00020000)
    movc r8.w, r9.w, r12.w, r8.w
    mad r14.yzw, r20.xxyz, l(0.000000, 0.593750, 0.593750, 0.593750), r18.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r9.w, r14.yzyy, t28.yzwx, s1, r7.w
    min r10.w, |r10.w|, |r9.w|
    mul r10.w, r14.w, r10.w
    lt r10.w, r10.w, l(1.000000)
    iadd r12.w, r8.w, l(0x00040000)
    movc r8.w, r10.w, r12.w, r8.w
    mad r14.yzw, r20.xxyz, l(0.000000, 0.625000, 0.625000, 0.625000), r18.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r10.w, r14.yzyy, t28.yzwx, s1, r7.w
    min r9.w, |r9.w|, |r10.w|
    mul r9.w, r14.w, r9.w
    lt r9.w, r9.w, l(1.000000)
    iadd r12.w, r8.w, l(0x00080000)
    movc r8.w, r9.w, r12.w, r8.w
    mad r14.yzw, r20.xxyz, l(0.000000, 0.656250, 0.656250, 0.656250), r18.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r9.w, r14.yzyy, t28.yzwx, s1, r7.w
    min r10.w, |r10.w|, |r9.w|
    mul r10.w, r14.w, r10.w
    lt r10.w, r10.w, l(1.000000)
    iadd r12.w, r8.w, l(0x00100000)
    movc r8.w, r10.w, r12.w, r8.w
    mad r14.yzw, r20.xxyz, l(0.000000, 0.687500, 0.687500, 0.687500), r18.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r10.w, r14.yzyy, t28.yzwx, s1, r7.w
    min r9.w, |r9.w|, |r10.w|
    mul r9.w, r14.w, r9.w
    lt r9.w, r9.w, l(1.000000)
    iadd r12.w, r8.w, l(0x00200000)
    movc r8.w, r9.w, r12.w, r8.w
    mad r14.yzw, r20.xxyz, l(0.000000, 0.718750, 0.718750, 0.718750), r18.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r9.w, r14.yzyy, t28.yzwx, s1, r7.w
    min r10.w, |r10.w|, |r9.w|
    mul r10.w, r14.w, r10.w
    lt r10.w, r10.w, l(1.000000)
    iadd r12.w, r8.w, l(0x00400000)
    movc r8.w, r10.w, r12.w, r8.w
    mad r14.yzw, r20.xxyz, l(0.000000, 0.750000, 0.750000, 0.750000), r18.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r10.w, r14.yzyy, t28.yzwx, s1, r7.w
    min r9.w, |r9.w|, |r10.w|
    mul r9.w, r14.w, r9.w
    lt r9.w, r9.w, l(1.000000)
    iadd r12.w, r8.w, l(0x00800000)
    movc r8.w, r9.w, r12.w, r8.w
    mad r14.yzw, r20.xxyz, l(0.000000, 0.781250, 0.781250, 0.781250), r18.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r9.w, r14.yzyy, t28.yzwx, s1, r7.w
    min r10.w, |r10.w|, |r9.w|
    mul r10.w, r14.w, r10.w
    lt r10.w, r10.w, l(1.000000)
    iadd r12.w, r8.w, l(0x01000000)
    movc r8.w, r10.w, r12.w, r8.w
    mad r14.yzw, r20.xxyz, l(0.000000, 0.812500, 0.812500, 0.812500), r18.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r10.w, r14.yzyy, t28.yzwx, s1, r7.w
    min r9.w, |r9.w|, |r10.w|
    mul r9.w, r14.w, r9.w
    lt r9.w, r9.w, l(1.000000)
    iadd r12.w, r8.w, l(0x02000000)
    movc r8.w, r9.w, r12.w, r8.w
    mad r14.yzw, r20.xxyz, l(0.000000, 0.843750, 0.843750, 0.843750), r18.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r9.w, r14.yzyy, t28.yzwx, s1, r7.w
    min r10.w, |r10.w|, |r9.w|
    mul r10.w, r14.w, r10.w
    lt r10.w, r10.w, l(1.000000)
    iadd r12.w, r8.w, l(0x04000000)
    movc r8.w, r10.w, r12.w, r8.w
    mad r14.yzw, r20.xxyz, l(0.000000, 0.875000, 0.875000, 0.875000), r18.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r10.w, r14.yzyy, t28.yzwx, s1, r7.w
    min r9.w, |r9.w|, |r10.w|
    mul r9.w, r14.w, r9.w
    lt r9.w, r9.w, l(1.000000)
    iadd r12.w, r8.w, l(0x08000000)
    movc r8.w, r9.w, r12.w, r8.w
    mad r14.yzw, r20.xxyz, l(0.000000, 0.906250, 0.906250, 0.906250), r18.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r9.w, r14.yzyy, t28.yzwx, s1, r7.w
    min r10.w, |r10.w|, |r9.w|
    mul r10.w, r14.w, r10.w
    lt r10.w, r10.w, l(1.000000)
    iadd r12.w, r8.w, l(0x10000000)
    movc r8.w, r10.w, r12.w, r8.w
    mad r14.yzw, r20.xxyz, l(0.000000, 0.937500, 0.937500, 0.937500), r18.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r10.w, r14.yzyy, t28.yzwx, s1, r7.w
    min r9.w, |r9.w|, |r10.w|
    mul r9.w, r14.w, r9.w
    lt r9.w, r9.w, l(1.000000)
    iadd r12.w, r8.w, l(0x20000000)
    movc r8.w, r9.w, r12.w, r8.w
    mad r14.yzw, r20.xxyz, l(0.000000, 0.968750, 0.968750, 0.968750), r18.xxyz
    sample_l_indexable(texture2d)(float,float,float,float) r9.w, r14.yzyy, t28.yzwx, s1, r7.w
    min r10.w, |r10.w|, |r9.w|
    mul r10.w, r14.w, r10.w
    lt r10.w, r10.w, l(1.000000)
    iadd r12.w, r8.w, l(0x40000000)
    movc r8.w, r10.w, r12.w, r8.w
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r19.xyxx, t28.yzwx, s1, r7.w
    min r7.w, |r9.w|, |r7.w|
    mul r7.w, r17.w, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.w, r8.w, l(0x80000000)
    movc r7.w, r7.w, r9.w, r8.w
    mov r22.w, l(-1)
    mov r23.z, l(-1)
    mov r14.yz, l(0,0,0,0)
    mov r8.w, l(0)
    mov r9.w, r7.w
    mov r10.w, r19.z
    mov r24.yz, l(0,0,0,0)
    mov r22.z, l(0)
    mov r12.w, l(0)
    loop 
      breakc_z r9.w
      firstbit_lo r22.y, r9.w
      ishl r13.w, l(1), r22.y
      xor r22.x, r9.w, r13.w
      utof r14.w, r22.y
      mul r14.w, r14.w, l(0.031250)
      mad r17.xyw, r20.xyxz, r14.wwww, r18.xyxz
      sample_l_indexable(texture2d)(float,float,float,float) r14.w, r17.xyxx, t28.yzwx, s1, l(0.000000)
      mul r15.y, r17.w, |r14.w|
      lt r15.y, r15.y, l(1.000000)
      if_nz r15.y
        if_nz r22.z
          lt r15.y, r15.w, |r14.w|
          lt r15.z, r10.w, r17.w
          and r15.y, r15.z, r15.y
          movc r19.xy, r15.yyyy, r17.xyxx, r14.yzyy
          mov r22.z, r17.w
          mov r24.x, r10.w
          movc r25.xyz, r15.yyyy, r22.zxyz, r24.xyzx
          mov r9.w, r22.x
          mov r22.z, l(-1)
          mov r14.yz, r19.xxyx
          mov r10.w, r25.x
          mov r24.yz, r25.yyzy
          continue 
        endif 
        mov r15.y, r24.y
        mov r15.z, l(0)
      else 
        not r13.w, r13.w
        and r15.y, r13.w, r24.y
        mov r15.z, r22.z
      endif 
      if_nz r12.w
        mov r9.w, r22.x
        mov r24.y, r15.y
        mov r22.z, r15.z
        mov r12.w, l(-1)
        continue 
      endif 
      mov r19.xy, r14.yzyy
      mov r13.w, r8.w
      mov r18.w, r10.w
      mov r24.y, r15.y
      mov r24.x, r24.z
      mov r22.z, r15.z
      mov r23.w, r12.w
      mov r19.w, r17.w
      mov r20.w, |r14.w|
      mov r21.w, l(0)
      loop 
        ige r24.w, r21.w, l(4)
        breakc_nz r24.w
        itof r24.w, r21.w
        add r24.w, r24.w, l(1.000000)
        mul r24.w, r24.w, l(0.250000)
        mad r25.xyz, r21.xyzx, r24.wwww, r17.xywx
        sample_l_indexable(texture2d)(float,float,float,float) r24.w, r25.xyxx, t28.yzwx, s1, l(0.000000)
        mul r25.w, r25.z, |r24.w|
        lt r25.w, r25.w, l(1.000000)
        if_nz r25.w
          lt r25.w, r15.w, |r24.w|
          add r26.x, -r19.w, r25.z
          add r26.y, -r20.w, |r24.w|
          mul r26.z, r19.w, r25.z
          mul r26.y, r26.z, |r26.y|
          lt r26.x, r26.y, |r26.x|
          lt r26.z, r18.w, r25.z
          and r26.yw, r25.wwww, r26.xxxz
          movc r23.xy, r26.wwww, r22.xyxx, r24.yxyy
          or r26.x, r26.x, r26.z
          and r25.w, r25.w, r26.x
          movc r25.xy, r25.wwww, r25.xyxx, r19.xyxx
          movc r26.x, r26.y, l(1.000000), r13.w
          movc r25.w, r25.w, r25.z, r18.w
          movc r27.xyzw, r26.yyyy, r22.xyzw, r23.xyzw
          mov r13.w, r26.x
          mov r19.xy, r25.xyxx
          mov r18.w, r25.w
          mov r24.xy, r27.yxyy
          mov r22.z, r27.z
          mov r23.w, r27.w
          break 
        endif 
        mov r19.w, r25.z
        mov r20.w, |r24.w|
        iadd r21.w, r21.w, l(1)
      endloop 
      mov r14.yz, r19.xxyx
      mov r8.w, r13.w
      mov r10.w, r18.w
      mov r24.yz, r24.yyxy
      mov r12.w, r23.w
      mov r9.w, r22.x
    endloop 
    rcp r7.w, r10.w
    add r7.w, -r15.w, r7.w
    add r9.w, -r15.w, r17.z
    div r7.w, |r7.w|, |r9.w|
    min r17.x, r7.w, l(1.000000)
    countbits r7.w, r24.y
    utof r7.w, r7.w
    add r7.w, r7.w, l(1.000000)
    iadd r9.w, -r24.z, l(32)
    utof r9.w, r9.w
    div r7.w, r7.w, r9.w
    min r17.y, r7.w, l(1.000000)
  else 
    mov r17.xy, l(1.000000,0,0,0)
    mov r8.w, l(0)
  endif 
  add r7.w, r2.y, l(-0.83333331)
  mul r7.w, r7.w, l(5.99999952)
  max r7.w, r7.w, l(0.000000)
  mad r9.w, r7.w, l(-2.000000), l(3.000000)
  mul r7.w, r7.w, r7.w
  mul r7.w, r7.w, r9.w
  add r1.w, r1.w, l(-60.000000)
  mul_sat r1.w, r1.w, l(0.01666667)
  mad r9.w, r1.w, l(-2.000000), l(3.000000)
  mul r1.w, r1.w, r1.w
  mul r1.w, r1.w, r9.w
  mul r1.w, r1.w, r7.w
  mul r1.w, r17.y, r1.w
  mad r15.yz, r14.yyzy, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
  add r15.yz, |r15.yyzy|, l(0.000000, -0.500000, -0.500000, 0.000000)
  add_sat r15.yz, r15.yyzy, r15.yyzy
  mad r17.yz, r15.yyzy, l(0.000000, -2.000000, -2.000000, 0.000000), l(0.000000, 3.000000, 3.000000, 0.000000)
  mul r15.yz, r15.yyzy, r15.yyzy
  mad r15.yz, -r17.yyzy, r15.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
  mul r7.w, r15.z, r15.y
  mul r1.w, r1.w, r7.w
  mul r7.w, r17.x, l(10.000000)
  min r7.w, r7.w, l(1.000000)
  add r9.w, -r8.w, l(1.000000)
  mul r9.w, r1.w, r9.w
  add r7.w, r7.w, l(-1.000000)
  mad r7.w, r9.w, r7.w, l(1.000000)
  mul r1.w, r8.w, r1.w
  lt r8.w, l(0.000000), r1.w
  if_nz r8.w
    sample_l_indexable(texture2d)(float,float,float,float) r15.yz, r14.yzyy, t22.zxyw, s4, l(0.000000)
    add r17.xy, |r15.yzyy|, l(-0.500000, -0.500000, 0.000000, 0.000000)
    add_sat r17.xy, r17.xyxx, r17.xyxx
    add r17.zw, |r15.yyyz|, |r15.yyyz|
    min r17.zw, r17.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    mul r17.zw, r17.zzzw, l(0.000000, 0.000000, 10.000000, 10.000000)
    mad r17.xy, r17.xyxx, l(30.000000, 30.000000, 0.000000, 0.000000), r17.zwzz
    ge r15.yz, r15.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
    movc r15.yz, r15.yyzy, r17.xxyx, -r17.xxyx
    mad r14.yz, -r15.yyzy, cb1[44].zzwz, r14.yyzy
    sample_l_indexable(texture2d)(float,float,float,float) r14.yzw, r14.yzyy, t21.wxyz, s4, l(0.000000)
    mul r14.yzw, r14.yyzw, cb1[85].xxxx
    mul r14.yzw, r1.wwww, r14.yyzw
  else 
    mov r14.yzw, l(0,0,0,0)
    mov r1.w, l(0)
  endif 
else 
  mov r14.yzw, l(0,0,0,0)
  mov r7.w, l(1.000000)
  mov r1.w, l(0)
endif 
dp3 r8.w, r11.xyzx, cb2[17].xyzx
mov_sat r9.w, r8.w
movc r10.w, r3.w, |r8.w|, r9.w
ge r12.w, l(0.000000), r10.w
if_nz r12.w
  mov r13.w, l(0)
endif 
if_z r12.w
  mul r15.yzw, r5.yyyy, cb2[29].xxyz
  mad r15.yzw, r5.xxxx, cb2[28].xxyz, r15.yyzw
  mad r15.yzw, r5.zzzz, cb2[30].xxyz, r15.yyzw
  add r15.yzw, r15.yyzw, cb2[31].xxyz
  add r12.w, r15.w, -cb2[17].w
  mad r12.w, -r12.w, l(0.00006104), l(1.000000)
  mov_sat r17.x, r12.w
  eq r17.x, r12.w, r17.x
  if_nz r17.x
    mov r17.xy, l(0,0,0,0)
    loop 
      ge r17.z, r17.x, l(3.000000)
      breakc_nz r17.z
      ftou r17.z, r17.x
      add r18.xy, r15.yzyy, -cb2[r17.z + 20].xyxx
      max r17.w, |r18.y|, |r18.x|
      mul r17.y, r17.w, cb2[r17.z + 20].z
      lt r17.z, r17.y, l(1.000000)
      if_nz r17.z
        break 
      endif 
      add r17.x, r17.x, l(1.000000)
      mov r17.y, l(0)
    endloop 
  else 
    mov r17.xy, l(3.000000,0,0,0)
  endif 
  ge r17.z, r17.x, l(3.000000)
  if_nz r17.z
    mul r18.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
    rcp r19.xz, r18.xxxx
    mov r19.y, -r19.z
    mad r18.xyz, r15.yzyy, r19.xyzx, r18.yzyy
    add r19.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r18.xyz, r18.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r18.xyz, r19.xyzx, r18.xyzx
    mul r19.xy, r18.zyzz, cb2[32].xxxx
    round_ni r19.xy, r19.xyxx
    mul r17.w, r19.y, cb2[27].x
    mad r17.w, r17.w, cb2[32].x, r19.x
    ftou r17.w, r17.w
    iadd r17.w, r17.w, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.w, r17.w, l(0), t23.xxxx
    and r19.x, r18.w, l(0x40000000)
    ishl r19.y, r18.w, l(2)
    if_z r19.x
      and r19.x, r18.w, l(0x01ffffff)
      iadd r20.x, r17.w, r19.x
      ushr r17.w, r18.w, l(25)
      utof r17.w, r17.w
      mul r18.xyz, r17.wwww, r18.xyzx
      frc r18.xyz, r18.xyzx
      mul r18.xyz, r18.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
      ftou r18.xyz, r18.xyzx
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.z, r20.x, l(0), t23.xxxx
      ushr r19.xz, r18.zzyz, l(6, 0, 6, 0)
      and r17.w, r20.z, l(0xc0000000)
      iadd r18.w, r20.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.w, r18.w, l(0), t23.xxxx
      movc r18.w, r19.z, r20.z, r18.w
      ushr r19.z, r18.w, l(13)
      movc r18.w, r19.x, r19.z, r18.w
      and r18.w, r18.w, l(8191)
      iadd r21.x, r18.w, r20.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r21.z, r21.x, l(0), t23.xxxx
      mov r20.y, l(0)
      mov r21.y, l(1)
      movc r19.xzw, r17.wwww, r20.xxyz, r21.xxyz
      movc r21.yz, r17.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r22.xy, r18.zyzz, r21.yyyy
      and r22.xy, r22.xyxx, l(1, 1, 0, 0)
      and r18.w, r19.w, l(0xc0000000)
      iadd r20.w, r19.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.w, r20.w, l(0), t23.xxxx
      movc r20.w, r22.y, r19.w, r20.w
      ushr r21.y, r20.w, l(13)
      movc r20.w, r22.x, r21.y, r20.w
      and r20.w, r20.w, l(8191)
      iadd r21.x, r19.x, r20.w
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r21.w, r21.x, l(0), t23.xxxx
      movc r19.xzw, r18.wwww, r19.xxzw, r21.xxzw
      movc r19.xzw, r17.wwww, r20.xxyz, r19.xxzw
      and r17.w, r19.w, l(0xc0000000)
      if_z r17.w
        iadd r17.w, -r19.z, l(6)
        ushr r20.xy, r18.zyzz, r17.wwww
        or r17.w, r19.w, l(0x40000000)
        bfi r18.w, l(1), l(1), r20.y, l(0)
        bfi r18.w, l(1), l(0), r20.x, r18.w
        imul null, r18.w, r18.w, l(10)
        ushr r17.w, r17.w, r18.w
        and r17.w, r17.w, l(1023)
        iadd r20.x, r17.w, r19.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.w, r20.x, l(0), t23.xxxx
        iadd r20.yz, r19.zzzz, l(0, 1, 2, 0)
        iadd r17.w, -r20.y, l(6)
        ushr r21.xy, r18.zyzz, r17.wwww
        and r17.w, r20.w, l(0xc0000000)
        or r18.w, r20.w, l(0x40000000)
        bfi r19.z, l(1), l(1), r21.y, l(0)
        bfi r19.z, l(1), l(0), r21.x, r19.z
        imul null, r19.z, r19.z, l(10)
        ushr r18.w, r18.w, r19.z
        and r18.w, r18.w, l(1023)
        iadd r21.x, r18.w, r20.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r21.z, r21.x, l(0), t23.xxxx
        mov r21.y, r20.z
        movc r21.xyz, r17.wwww, r20.xywx, r21.xyzx
        iadd r18.w, -r21.y, l(6)
        ushr r20.yz, r18.zzyz, r18.wwww
        and r18.w, r21.z, l(0xc0000000)
        or r19.z, r21.z, l(0x40000000)
        bfi r20.z, l(1), l(1), r20.z, l(0)
        bfi r20.y, l(1), l(0), r20.y, r20.z
        imul null, r20.y, r20.y, l(10)
        ushr r19.z, r19.z, r20.y
        and r19.z, r19.z, l(1023)
        iadd r22.x, r19.z, r21.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r22.y, r22.x, l(0), t23.xxxx
        movc r20.yz, r18.wwww, r21.xxzx, r22.xxyx
        movc r19.xw, r17.wwww, r20.xxxw, r20.yyyz
      endif 
      and r17.w, r19.w, l(0xc0000000)
      if_z r17.w
        ubfe r18.w, l(14), l(15), r19.w
        utof r18.w, r18.w
        mul r18.w, r18.w, cb2[27].w
        mul r18.w, r18.w, l(0.00006104)
        and r20.xy, r19.wwww, l(0x00007fff, 0x20000000, 0, 0)
        utof r19.z, r20.x
        mul r19.z, r19.z, cb2[27].w
        mul r19.z, r19.z, l(0.00003052)
        and r20.x, r18.y, l(3)
        iadd r20.x, r19.x, r20.x
        iadd r20.x, r20.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.x, r20.x, l(0), t23.xxxx
        bfi r21.xyz, l(2, 2, 1, 0), l(3, 1, 4, 0), r18.xyzx, l(0, 0, 0, 0)
        ushr r18.x, r20.x, r21.x
        and r18.x, r18.x, l(255)
        utof r18.x, r18.x
        mul r18.x, r19.z, r18.x
        mad r18.x, r18.x, l(0.00392157), r18.w
        iadd r18.y, r21.y, l(1)
        ubfe r18.z, l(1), l(1), r18.z
        iadd r18.y, r18.z, r18.y
        iadd r18.y, r18.y, r19.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.y, r18.y, l(0), t23.xxxx
        ushr r18.y, r18.y, r21.z
        and r18.y, r18.y, l(0x0000ffff)
        utof r18.y, r18.y
        mul r18.y, r19.z, r18.y
        mad r18.y, r18.y, l(0.00001526), r18.w
        movc r19.y, r20.y, r18.x, r18.y
      else 
        and r18.x, r19.w, l(0x80000000)
        iadd r18.y, r19.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.y, r18.y, l(0), t23.xxxx
        movc r18.x, r18.x, r18.y, l(0)
        ishl r18.y, r19.w, l(2)
        ushr r18.z, r18.x, l(16)
        and r18.x, r18.x, l(0x0000ffff)
        f16tof32 r18.xz, r18.xxzx
        mad r18.y, r15.y, r18.z, r18.y
        mad r18.x, r15.z, r18.x, r18.y
        movc r19.y, r17.w, r18.x, r19.y
      endif 
    endif 
    mad r15.w, -cb2[27].z, l(2.000000), r15.w
    lt r15.w, r19.y, r15.w
    movc r13.w, r15.w, l(0), l(1.000000)
  endif 
  if_z r17.z
    if_z cb2[58].y
      ftou r15.w, r17.x
      add r17.zw, r15.yyyz, -cb2[r15.w + 20].xxxy
      mul r17.zw, r17.zzzw, cb2[r15.w + 20].zzzz
      mad r18.xy, r17.zwzz, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r15.w, cb2[26].y
      add r18.z, r15.w, r17.x
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r15.w, r18.xyzx, t13.xxxx, s13, r12.w
      sample_l_indexable(texture2darray)(float,float,float,float) r17.z, r18.xyzx, t31.yzxw, s0, l(0.000000)
      add r15.w, r15.w, r17.z
      add_sat r15.w, r15.w, l(-1.000000)
      mul r17.z, r15.w, r15.w
      mul r13.w, r15.w, r17.z
    endif 
    if_nz cb2[58].y
      mov r18.x, -r3.x
      ftou r15.w, r17.x
      add r17.x, r17.x, l(1.000000)
      min r17.x, r17.x, l(2.000000)
      add r17.y, -r17.y, l(1.000000)
      mul r17.y, r17.y, l(28.000000)
      ftou r17.xy, r17.xyxx
      add r17.zw, r15.yyyz, -cb2[r15.w + 20].xxxy
      mul r17.zw, r17.zzzw, cb2[r15.w + 20].zzzz
      mad r17.zw, r17.zzzw, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
      add r15.yz, r15.yyzy, -cb2[r17.x + 20].xxyx
      mul r15.yz, r15.yyzy, cb2[r17.x + 20].zzzz
      mad r15.yz, r15.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      mov r18.y, r13.x
      mov r18.z, r3.x
      mov r18.w, l(0)
      mov r19.x, l(0)
      loop 
        uge r19.y, r19.x, l(8)
        breakc_nz r19.y
        ult r19.y, r17.y, r19.x
        movc r19.zw, r19.yyyy, r15.yyyz, r17.zzzw
        movc r20.x, r19.y, cb2[r17.x + 20].w, cb2[r15.w + 20].w
        movc r19.y, r19.y, r17.x, r15.w
        dp2 r21.x, icb[r19.x + 0].yxyy, r18.xyxx
        dp2 r21.y, icb[r19.x + 0].yxyy, r18.yzyy
        mad r20.xy, r21.xyxx, r20.xxxx, r19.zwzz
        iadd r19.y, r19.y, cb2[26].y
        utof r20.z, r19.y
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.y, r20.xyzx, t13.xxxx, s13, r12.w
        sample_l_indexable(texture2darray)(float,float,float,float) r19.z, r20.xyzx, t31.yzxw, s0, l(0.000000)
        add r19.y, r19.z, r19.y
        add_sat r19.y, r19.y, l(-1.000000)
        mad r18.w, r19.y, l(0.125000), r18.w
        iadd r19.x, r19.x, l(1)
      endloop 
      mul r12.w, r18.w, r18.w
      mul r13.w, r18.w, r12.w
    endif 
  endif 
endif 
add r12.w, -r2.y, l(1.000000)
mul r15.y, r12.w, l(5.000000)
mad r15.z, r12.w, l(5.000000), l(-2.500000)
mul r15.z, r15.z, l(0.400000)
max r15.z, r15.z, l(0.000000)
mad r17.xy, -r12.wwww, l(10.000000, 5.000000, 0.000000, 0.000000), l(6.857410, 7.085000, 0.000000, 0.000000)
exp r15.w, r17.x
mul r15.w, r2.x, r15.w
mul r15.zw, r15.zzzw, l(0.000000, 0.000000, 100.000000, 9.136810)
mul r17.x, r12.w, r15.y
mad r17.x, -r17.x, l(2.015905), r17.y
exp r17.x, r17.x
mul r17.x, r2.x, r17.x
mul r17.x, r17.x, l(9.708090)
max r15.w, r15.w, r17.x
max r15.w, r15.w, l(1.268160)
iadd r17.x, cb2[0].y, -cb2[58].x
ushr r17.yz, r0.yyxy, l(0, 24, 24, 0)
uge r0.y, r17.y, r17.x
ult r17.w, r17.y, cb2[0].y
and r0.y, r0.y, r17.w
if_nz r0.y
  imul null, r0.y, r17.y, l(14)
  if_nz r6.w
    add r18.yzw, cb1[24].xxyz, cb10[r0.y + 0].xxyz
    mov r18.x, l(16)
    store_structured u2.xyzw, cb2[52].x, l(880), r18.xyzw
  endif 
  add r18.xyz, r5.xyzx, -cb10[r0.y + 0].xyzx
  and r17.w, l(0x0000ffff), cb10[r0.y + 7].z
  ubfe r18.w, l(6), l(25), cb10[r0.y + 7].z
  imul null, r19.x, r17.w, l(6)
  dp3 r19.y, cb11[r19.x + 0].xyzx, r18.xyzx
  add_sat r19.y, r19.y, cb11[r19.x + 0].w
  dp3 r19.z, cb11[r19.x + 1].xyzx, r18.xyzx
  add_sat r19.z, r19.z, cb11[r19.x + 1].w
  mul r19.y, r19.z, r19.y
  dp3 r19.z, cb11[r19.x + 2].xyzx, r18.xyzx
  add_sat r19.z, r19.z, cb11[r19.x + 2].w
  mul r19.y, r19.z, r19.y
  dp3 r19.z, cb11[r19.x + 3].xyzx, r18.xyzx
  add_sat r19.z, r19.z, cb11[r19.x + 3].w
  mul r19.y, r19.z, r19.y
  dp3 r19.z, cb11[r19.x + 4].xyzx, r18.xyzx
  add_sat r19.z, r19.z, cb11[r19.x + 4].w
  mul r19.y, r19.z, r19.y
  dp3 r19.z, cb11[r19.x + 5].xyzx, r18.xyzx
  add_sat r19.x, r19.z, cb11[r19.x + 5].w
  mul r19.x, r19.x, r19.y
  and r19.w, l(1), cb10[r0.y + 6].x
  mov r19.yz, l(0,0,1.000000,0)
  movc r19.xy, r19.wwww, r19.xyxx, r19.zxzz
  mov r20.x, l(1.000000)
  mov r19.z, cb10[r0.y + 6].x
  mov r21.xy, r19.xyxx
  mov r19.w, l(1)
  loop 
    ige r20.z, r19.w, r18.w
    breakc_nz r20.z
    iadd r20.z, r17.w, r19.w
    imul null, r20.z, r20.z, l(6)
    dp3 r20.w, cb11[r20.z + 0].xyzx, r18.xyzx
    add_sat r20.w, r20.w, cb11[r20.z + 0].w
    mul r20.w, r20.w, r21.x
    dp3 r21.z, cb11[r20.z + 1].xyzx, r18.xyzx
    add_sat r21.z, r21.z, cb11[r20.z + 1].w
    mul r20.w, r20.w, r21.z
    dp3 r21.z, cb11[r20.z + 2].xyzx, r18.xyzx
    add_sat r21.z, r21.z, cb11[r20.z + 2].w
    mul r20.w, r20.w, r21.z
    dp3 r21.z, cb11[r20.z + 3].xyzx, r18.xyzx
    add_sat r21.z, r21.z, cb11[r20.z + 3].w
    mul r20.w, r20.w, r21.z
    dp3 r21.z, cb11[r20.z + 4].xyzx, r18.xyzx
    add_sat r21.z, r21.z, cb11[r20.z + 4].w
    mul r20.w, r20.w, r21.z
    dp3 r21.z, cb11[r20.z + 5].xyzx, r18.xyzx
    add_sat r20.z, r21.z, cb11[r20.z + 5].w
    mul r21.x, r20.z, r20.w
    ushr r21.z, r19.z, l(2)
    ubfe r21.w, l(1), l(2), r19.z
    and r22.x, r21.z, l(2)
    max r22.y, r21.x, r21.y
    mad r20.z, -r20.w, r20.z, l(1.000000)
    mul r20.z, r20.z, r21.y
    movc r20.y, r22.x, r20.z, r22.y
    movc r21.xy, r21.wwww, r21.xyxx, r20.xyxx
    iadd r19.w, r19.w, l(1)
    mov r19.z, r21.z
  endloop 
  mov_sat r21.y, r21.y
  mul r17.w, r21.y, cb10[r0.y + 6].y
  lt r18.w, l(0.000000), r17.w
  if_nz r18.w
    if_nz r6.w
      ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r18.w, cb2[52].x, l(880), u2.xxxx
      or r18.w, r18.w, l(32)
      store_structured u2.x, cb2[52].x, l(880), r18.w
      store_structured u2.x, cb2[52].x, l(896), r17.w
    endif 
    mul r18.w, r17.w, cb10[r0.y + 7].y
    mov r19.x, cb10[r0.y + 7].w
    mov r19.yz, cb10[r0.y + 8].xxyx
    dp3 r19.w, r16.xyzx, r19.xyzx
    dp3 r19.x, r18.xyzx, r19.xyzx
    add r19.x, r19.x, -cb10[r0.y + 8].z
    ge r19.y, r19.x, l(0.000000)
    max r19.x, r15.z, |r19.x|
    movc r19.x, r19.y, r19.x, -r19.x
    max r19.y, -r19.w, l(0.00000010)
    div r19.x, r19.x, r19.y
    min r19.x, |r19.x|, l(131072.000000)
    mov r20.x, cb10[r0.y + 8].w
    mov r20.yz, cb10[r0.y + 9].xxyx
    dp3 r19.y, r16.xyzx, r20.xyzx
    dp3 r19.z, r18.xyzx, r20.xyzx
    add r19.z, r19.z, -cb10[r0.y + 9].z
    ge r19.w, r19.z, l(0.000000)
    max r19.z, r15.z, |r19.z|
    movc r19.z, r19.w, r19.z, -r19.z
    max r19.y, -r19.y, l(0.00000010)
    div r19.y, r19.z, r19.y
    min r19.x, |r19.y|, r19.x
    mov r20.x, cb10[r0.y + 9].w
    mov r20.yz, cb10[r0.y + 10].xxyx
    dp3 r19.y, r16.xyzx, r20.xyzx
    dp3 r19.z, r18.xyzx, r20.xyzx
    add r19.z, r19.z, -cb10[r0.y + 10].z
    ge r19.w, r19.z, l(0.000000)
    max r19.z, r15.z, |r19.z|
    movc r19.z, r19.w, r19.z, -r19.z
    max r19.y, -r19.y, l(0.00000010)
    div r19.y, r19.z, r19.y
    min r19.x, |r19.y|, r19.x
    mov r20.x, cb10[r0.y + 10].w
    mov r20.yz, cb10[r0.y + 11].xxyx
    dp3 r19.y, r16.xyzx, r20.xyzx
    dp3 r19.z, r18.xyzx, r20.xyzx
    add r19.z, r19.z, -cb10[r0.y + 11].z
    ge r19.w, r19.z, l(0.000000)
    max r19.z, r15.z, |r19.z|
    movc r19.z, r19.w, r19.z, -r19.z
    max r19.y, -r19.y, l(0.00000010)
    div r19.y, r19.z, r19.y
    min r19.x, |r19.y|, r19.x
    mov r20.x, cb10[r0.y + 11].w
    mov r20.yz, cb10[r0.y + 12].xxyx
    dp3 r19.y, r16.xyzx, r20.xyzx
    dp3 r19.z, r18.xyzx, r20.xyzx
    add r19.z, r19.z, -cb10[r0.y + 12].z
    ge r19.w, r19.z, l(0.000000)
    max r19.z, r15.z, |r19.z|
    movc r19.z, r19.w, r19.z, -r19.z
    max r19.y, -r19.y, l(0.00000010)
    div r19.y, r19.z, r19.y
    min r19.x, |r19.y|, r19.x
    mov r20.x, cb10[r0.y + 12].w
    mov r20.yz, cb10[r0.y + 13].xxyx
    dp3 r19.y, r16.xyzx, r20.xyzx
    dp3 r19.z, r18.xyzx, r20.xyzx
    add r19.z, r19.z, -cb10[r0.y + 13].z
    ge r19.w, r19.z, l(0.000000)
    max r19.z, r15.z, |r19.z|
    movc r19.z, r19.w, r19.z, -r19.z
    max r19.y, -r19.y, l(0.00000010)
    div r19.y, r19.z, r19.y
    min r19.x, |r19.y|, r19.x
    add r20.x, r18.x, cb10[r0.y + 3].w
    add r20.yz, r18.yyzy, cb10[r0.y + 4].xxyx
    mad r19.yzw, r16.xxyz, r19.xxxx, r20.xxyz
    dp3 r20.x, r19.yzwy, r19.yzwy
    sqrt r20.x, r20.x
    div r19.x, r19.x, r20.x
    add r19.x, r19.x, r19.x
    sqrt r19.x, r19.x
    mad r19.x, r12.w, l(5.000000), r19.x
    add r19.x, r19.x, l(-0.844800)
    mov r20.x, cb10[r0.y + 0].w
    mov r20.y, cb10[r0.y + 1].z
    mov r20.z, cb10[r0.y + 2].y
    dp3 r21.x, r19.yzwy, r20.xyzx
    mov r22.xy, cb10[r0.y + 1].xwxx
    mov r22.z, cb10[r0.y + 2].z
    dp3 r21.y, r19.yzwy, r22.xyzx
    mov r23.x, cb10[r0.y + 1].y
    mov r23.yz, cb10[r0.y + 2].xxwx
    dp3 r21.z, r19.yzwy, r23.xyzx
    ubfe r19.y, l(9), l(16), cb10[r0.y + 7].z
    utof r21.w, r19.y
    sample_l_indexable(texturecubearray)(float,float,float,float) r19.xyz, r21.xyzw, t8.xyzw, s2, r19.x
    and r24.xyz, r19.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
    ieq r24.xyz, r24.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
    or r19.w, r24.y, r24.x
    or r19.w, r24.z, r19.w
    movc r19.xyz, r19.wwww, l(1.000000,1.000000,0,0), r19.xyzx
    dp3 r24.x, r18.xyzx, r20.xyzx
    dp3 r24.y, r18.xyzx, r22.xyzx
    dp3 r24.z, r18.xyzx, r23.xyzx
    mad_sat r18.xyz, r24.xyzx, cb10[r0.y + 3].xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    mul r24.xy, r18.xyxx, cb10[r0.y + 4].zwzz
    mul r24.z, r18.z, cb10[r0.y + 5].x
    add r18.xyz, r24.xyzx, cb10[r0.y + 5].yzwy
    dp3 r21.x, r11.xyzx, r20.xyzx
    dp3 r21.y, r11.xyzx, r22.xyzx
    dp3 r21.z, r11.xyzx, r23.xyzx
    lt r20.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r21.xyzx
    movc r22.z, r20.x, l(0), l(0.500000)
    mov r22.xy, l(0,0,0,0)
    add r22.xyz, r18.xyzx, r22.xyzx
    sample_l_indexable(texture3d)(float,float,float,float) r22.xyz, r22.xyzx, t17.xyzw, s4, l(0.000000)
    mul r23.xyz, r21.xyzx, r21.xyzx
    mul r23.xyz, r18.wwww, r23.xyzx
    movc r24.z, r20.y, l(0), l(0.500000)
    mov r24.xy, l(0,0,0,0)
    add r20.xyw, r18.xyxz, r24.xyxz
    sample_l_indexable(texture3d)(float,float,float,float) r20.xyw, r20.xywx, t18.xywz, s4, l(0.000000)
    mul r20.xyw, r23.yyyy, r20.xyxw
    mad r20.xyw, r22.xyxz, r23.xxxx, r20.xyxw
    movc r22.z, r20.z, l(0), l(0.500000)
    mov r22.xy, l(0,0,0,0)
    add r18.xyz, r18.xyzx, r22.xyzx
    sample_l_indexable(texture3d)(float,float,float,float) r18.xyz, r18.xyzx, t19.xyzw, s4, l(0.000000)
    mad r18.xyz, r18.xyzx, r23.zzzz, r20.xywx
    sample_l_indexable(texturecubearray)(float,float,float,float) r20.xyz, r21.xyzw, t8.xyzw, s2, l(6.000000)
    and r21.xyz, r20.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
    ieq r21.xyz, r21.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
    or r0.y, r21.y, r21.x
    or r0.y, r21.z, r0.y
    movc r20.xyz, r0.yyyy, l(1.000000,1.000000,0,0), r20.xyzx
    mul r18.xyz, r18.xyzx, r20.xyzx
    dp3 r0.y, r18.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
    mul r19.w, r0.y, r15.w
    mul r19.xyz, r18.wwww, r19.xyzx
    dp3 r18.w, r19.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
    mad r0.y, r15.w, r0.y, r18.w
    div r0.y, r19.w, r0.y
    mul r19.xyz, r0.yyyy, r19.xyzx
    mov r0.y, l(257)
  else 
    mov r18.xyz, l(0,0,0,0)
    mov r19.xyz, l(0,0,0,0)
    mov r17.w, l(0)
    mov r0.y, l(1)
  endif 
else 
  mov r18.xyz, l(0,0,0,0)
  mov r19.xyz, l(0,0,0,0)
  mov r17.w, l(0)
  mov r0.y, l(0)
endif 
ult r17.x, r17.y, r17.x
if_nz r17.x
  imul null, r17.x, r17.y, l(14)
  if_nz r6.w
    and r17.y, r0.y, l(1)
    imad r17.y, r17.y, l(20), l(880)
    add r20.yzw, cb1[24].xxyz, cb10[r17.x + 0].xxyz
    mov r20.x, l(16)
    store_structured u2.xyzw, cb2[52].x, r17.y, r20.xyzw
  endif 
  iadd r17.y, r0.y, l(1)
  add r20.xyz, r5.xyzx, -cb10[r17.x + 0].xyzx
  and r18.w, l(0x0000ffff), cb10[r17.x + 7].z
  ubfe r19.w, l(6), l(25), cb10[r17.x + 7].z
  imul null, r20.w, r18.w, l(6)
  dp3 r21.x, cb11[r20.w + 0].xyzx, r20.xyzx
  add_sat r21.x, r21.x, cb11[r20.w + 0].w
  dp3 r21.y, cb11[r20.w + 1].xyzx, r20.xyzx
  add_sat r21.y, r21.y, cb11[r20.w + 1].w
  mul r21.x, r21.y, r21.x
  dp3 r21.y, cb11[r20.w + 2].xyzx, r20.xyzx
  add_sat r21.y, r21.y, cb11[r20.w + 2].w
  mul r21.x, r21.y, r21.x
  dp3 r21.y, cb11[r20.w + 3].xyzx, r20.xyzx
  add_sat r21.y, r21.y, cb11[r20.w + 3].w
  mul r21.x, r21.y, r21.x
  dp3 r21.y, cb11[r20.w + 4].xyzx, r20.xyzx
  add_sat r21.y, r21.y, cb11[r20.w + 4].w
  mul r21.x, r21.y, r21.x
  dp3 r21.y, cb11[r20.w + 5].xyzx, r20.xyzx
  add_sat r20.w, r21.y, cb11[r20.w + 5].w
  mul r21.x, r20.w, r21.x
  and r20.w, l(1), cb10[r17.x + 6].x
  mov r21.yz, l(0,0,1.000000,0)
  movc r21.xy, r20.wwww, r21.xyxx, r21.zxzz
  mov r22.x, l(1.000000)
  mov r20.w, cb10[r17.x + 6].x
  mov r23.xy, r21.xyxx
  mov r21.z, l(1)
  loop 
    ige r21.w, r21.z, r19.w
    breakc_nz r21.w
    iadd r21.w, r18.w, r21.z
    imul null, r21.w, r21.w, l(6)
    dp3 r22.z, cb11[r21.w + 0].xyzx, r20.xyzx
    add_sat r22.z, r22.z, cb11[r21.w + 0].w
    mul r22.z, r22.z, r23.x
    dp3 r22.w, cb11[r21.w + 1].xyzx, r20.xyzx
    add_sat r22.w, r22.w, cb11[r21.w + 1].w
    mul r22.z, r22.w, r22.z
    dp3 r22.w, cb11[r21.w + 2].xyzx, r20.xyzx
    add_sat r22.w, r22.w, cb11[r21.w + 2].w
    mul r22.z, r22.w, r22.z
    dp3 r22.w, cb11[r21.w + 3].xyzx, r20.xyzx
    add_sat r22.w, r22.w, cb11[r21.w + 3].w
    mul r22.z, r22.w, r22.z
    dp3 r22.w, cb11[r21.w + 4].xyzx, r20.xyzx
    add_sat r22.w, r22.w, cb11[r21.w + 4].w
    mul r22.z, r22.w, r22.z
    dp3 r22.w, cb11[r21.w + 5].xyzx, r20.xyzx
    add_sat r21.w, r22.w, cb11[r21.w + 5].w
    mul r23.x, r21.w, r22.z
    ushr r22.w, r20.w, l(2)
    ubfe r23.z, l(1), l(2), r20.w
    and r23.w, r22.w, l(2)
    max r24.x, r23.x, r23.y
    mad r21.w, -r22.z, r21.w, l(1.000000)
    mul r21.w, r21.w, r23.y
    movc r22.y, r23.w, r21.w, r24.x
    movc r23.xy, r23.zzzz, r23.xyxx, r22.xyxx
    iadd r21.z, r21.z, l(1)
    mov r20.w, r22.w
  endloop 
  add_sat r18.w, -r17.w, r23.y
  mul r19.w, r18.w, cb10[r17.x + 6].y
  lt r20.w, l(0.000000), r19.w
  if_nz r20.w
    and r20.w, r17.y, l(3)
    iadd r21.x, r20.w, l(-1)
    ult r21.x, r21.x, l(32)
    and r21.x, r6.w, r21.x
    if_nz r21.x
      imad r21.xy, r20.wwww, l(20, 20, 0, 0), l(860, 876, 0, 0)
      ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r20.w, cb2[52].x, r21.x, u2.xxxx
      or r20.w, r20.w, l(32)
      store_structured u2.x, cb2[52].x, r21.x, r20.w
      store_structured u2.x, cb2[52].x, r21.y, r19.w
    endif 
    iadd r17.y, r0.y, l(257)
    mad r18.w, r18.w, cb10[r17.x + 6].y, r17.w
    mul r19.w, r19.w, cb10[r17.x + 7].y
    mov r21.x, cb10[r17.x + 7].w
    mov r21.yz, cb10[r17.x + 8].xxyx
    dp3 r20.w, r16.xyzx, r21.xyzx
    dp3 r21.x, r20.xyzx, r21.xyzx
    add r21.x, r21.x, -cb10[r17.x + 8].z
    ge r21.y, r21.x, l(0.000000)
    max r21.x, r15.z, |r21.x|
    movc r21.x, r21.y, r21.x, -r21.x
    max r20.w, -r20.w, l(0.00000010)
    div r20.w, r21.x, r20.w
    min r20.w, |r20.w|, l(131072.000000)
    mov r21.x, cb10[r17.x + 8].w
    mov r21.yz, cb10[r17.x + 9].xxyx
    dp3 r21.w, r16.xyzx, r21.xyzx
    dp3 r21.x, r20.xyzx, r21.xyzx
    add r21.x, r21.x, -cb10[r17.x + 9].z
    ge r21.y, r21.x, l(0.000000)
    max r21.x, r15.z, |r21.x|
    movc r21.x, r21.y, r21.x, -r21.x
    max r21.y, -r21.w, l(0.00000010)
    div r21.x, r21.x, r21.y
    min r20.w, r20.w, |r21.x|
    mov r21.x, cb10[r17.x + 9].w
    mov r21.yz, cb10[r17.x + 10].xxyx
    dp3 r21.w, r16.xyzx, r21.xyzx
    dp3 r21.x, r20.xyzx, r21.xyzx
    add r21.x, r21.x, -cb10[r17.x + 10].z
    ge r21.y, r21.x, l(0.000000)
    max r21.x, r15.z, |r21.x|
    movc r21.x, r21.y, r21.x, -r21.x
    max r21.y, -r21.w, l(0.00000010)
    div r21.x, r21.x, r21.y
    min r20.w, r20.w, |r21.x|
    mov r21.x, cb10[r17.x + 10].w
    mov r21.yz, cb10[r17.x + 11].xxyx
    dp3 r21.w, r16.xyzx, r21.xyzx
    dp3 r21.x, r20.xyzx, r21.xyzx
    add r21.x, r21.x, -cb10[r17.x + 11].z
    ge r21.y, r21.x, l(0.000000)
    max r21.x, r15.z, |r21.x|
    movc r21.x, r21.y, r21.x, -r21.x
    max r21.y, -r21.w, l(0.00000010)
    div r21.x, r21.x, r21.y
    min r20.w, r20.w, |r21.x|
    mov r21.x, cb10[r17.x + 11].w
    mov r21.yz, cb10[r17.x + 12].xxyx
    dp3 r21.w, r16.xyzx, r21.xyzx
    dp3 r21.x, r20.xyzx, r21.xyzx
    add r21.x, r21.x, -cb10[r17.x + 12].z
    ge r21.y, r21.x, l(0.000000)
    max r21.x, r15.z, |r21.x|
    movc r21.x, r21.y, r21.x, -r21.x
    max r21.y, -r21.w, l(0.00000010)
    div r21.x, r21.x, r21.y
    min r20.w, r20.w, |r21.x|
    mov r21.x, cb10[r17.x + 12].w
    mov r21.yz, cb10[r17.x + 13].xxyx
    dp3 r21.w, r16.xyzx, r21.xyzx
    dp3 r21.x, r20.xyzx, r21.xyzx
    add r21.x, r21.x, -cb10[r17.x + 13].z
    ge r21.y, r21.x, l(0.000000)
    max r15.z, r15.z, |r21.x|
    movc r15.z, r21.y, r15.z, -r15.z
    max r21.x, -r21.w, l(0.00000010)
    div r15.z, r15.z, r21.x
    min r15.z, |r15.z|, r20.w
    add r21.x, r20.x, cb10[r17.x + 3].w
    add r21.yz, r20.yyzy, cb10[r17.x + 4].xxyx
    mad r21.xyz, r16.xyzx, r15.zzzz, r21.xyzx
    dp3 r20.w, r21.xyzx, r21.xyzx
    sqrt r20.w, r20.w
    div r15.z, r15.z, r20.w
    add r15.z, r15.z, r15.z
    sqrt r15.z, r15.z
    mad r12.w, r12.w, l(5.000000), r15.z
    add r12.w, r12.w, l(-0.844800)
    mov r22.x, cb10[r17.x + 0].w
    mov r22.y, cb10[r17.x + 1].z
    mov r22.z, cb10[r17.x + 2].y
    dp3 r23.x, r21.xyzx, r22.xyzx
    mov r24.xy, cb10[r17.x + 1].xwxx
    mov r24.z, cb10[r17.x + 2].z
    dp3 r23.y, r21.xyzx, r24.xyzx
    mov r25.x, cb10[r17.x + 1].y
    mov r25.yz, cb10[r17.x + 2].xxwx
    dp3 r23.z, r21.xyzx, r25.xyzx
    ubfe r15.z, l(9), l(16), cb10[r17.x + 7].z
    utof r23.w, r15.z
    sample_l_indexable(texturecubearray)(float,float,float,float) r21.xyz, r23.xyzw, t8.xyzw, s2, r12.w
    and r26.xyz, r21.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
    ieq r26.xyz, r26.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
    or r12.w, r26.y, r26.x
    or r12.w, r26.z, r12.w
    movc r21.xyz, r12.wwww, l(1.000000,1.000000,0,0), r21.xyzx
    dp3 r26.x, r20.xyzx, r22.xyzx
    dp3 r26.y, r20.xyzx, r24.xyzx
    dp3 r26.z, r20.xyzx, r25.xyzx
    mad_sat r20.xyz, r26.xyzx, cb10[r17.x + 3].xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    mul r26.xy, r20.xyxx, cb10[r17.x + 4].zwzz
    mul r26.z, r20.z, cb10[r17.x + 5].x
    add r20.xyz, r26.xyzx, cb10[r17.x + 5].yzwy
    dp3 r23.x, r11.xyzx, r22.xyzx
    dp3 r23.y, r11.xyzx, r24.xyzx
    dp3 r23.z, r11.xyzx, r25.xyzx
    lt r22.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r23.xyzx
    movc r24.z, r22.x, l(0), l(0.500000)
    mov r24.xy, l(0,0,0,0)
    add r24.xyz, r20.xyzx, r24.xyzx
    sample_l_indexable(texture3d)(float,float,float,float) r24.xyz, r24.xyzx, t17.xyzw, s4, l(0.000000)
    mul r25.xyz, r23.xyzx, r23.xyzx
    mul r25.xyz, r19.wwww, r25.xyzx
    movc r26.z, r22.y, l(0), l(0.500000)
    mov r26.xy, l(0,0,0,0)
    add r22.xyw, r20.xyxz, r26.xyxz
    sample_l_indexable(texture3d)(float,float,float,float) r22.xyw, r22.xywx, t18.xywz, s4, l(0.000000)
    mul r22.xyw, r25.yyyy, r22.xyxw
    mad r22.xyw, r24.xyxz, r25.xxxx, r22.xyxw
    movc r24.z, r22.z, l(0), l(0.500000)
    mov r24.xy, l(0,0,0,0)
    add r20.xyz, r20.xyzx, r24.xyzx
    sample_l_indexable(texture3d)(float,float,float,float) r20.xyz, r20.xyzx, t19.xyzw, s4, l(0.000000)
    mad r20.xyz, r20.xyzx, r25.zzzz, r22.xywx
    sample_l_indexable(texturecubearray)(float,float,float,float) r22.xyz, r23.xyzw, t8.xyzw, s2, l(6.000000)
    and r23.xyz, r22.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
    ieq r23.xyz, r23.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
    or r12.w, r23.y, r23.x
    or r12.w, r23.z, r12.w
    movc r22.xyz, r12.wwww, l(1.000000,1.000000,0,0), r22.xyzx
    mul r23.xyz, r20.xyzx, r22.xyzx
    dp3 r12.w, r23.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
    mad r18.xyz, r20.xyzx, r22.xyzx, r18.xyzx
    mul r15.z, r12.w, r15.w
    mul r20.xyz, r19.wwww, r21.xyzx
    dp3 r17.x, r20.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
    mad r12.w, r15.w, r12.w, r17.x
    div r12.w, r15.z, r12.w
    mad r19.xyz, r20.xyzx, r12.wwww, r19.xyzx
  else 
    mov r18.w, r17.w
  endif 
else 
  mov r18.w, r17.w
  mov r17.y, r0.y
endif 
ge r12.w, r17.w, l(1.000000)
bfi r0.y, l(8), l(0), r17.y, r0.y
movc r0.y, r12.w, r0.y, r17.y
max r12.w, r18.w, l(1.000000)
rcp r12.w, r12.w
mov_sat r18.w, r18.w
mul r17.xyw, r12.wwww, r18.xyxz
mul r19.xyz, r12.wwww, r19.xyzx
lt r15.z, r18.w, l(0.990000)
if_nz r15.z
  iadd r0.y, r0.y, l(256)
  add r15.z, -r18.w, l(1.000000)
  mul r15.w, r15.z, cb2[19].x
  add r20.xyz, r5.xyzx, -cb2[35].xyzx
  mul r21.x, r20.x, cb2[35].w
  mul r21.yz, r20.yyzy, cb2[36].xxyx
  add_sat r20.xyz, r21.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mul r21.xy, r20.xyxx, cb2[36].zwzz
  mul r21.z, r20.z, cb2[37].x
  add r20.xyz, r21.xyzx, cb2[37].yzwy
  lt r21.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
  movc r21.xyz, r21.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
  mov r21.w, l(0)
  add r22.xyz, r20.xyzx, r21.wwxw
  sample_l_indexable(texture3d)(float,float,float,float) r22.xyz, r22.xyzx, t17.xyzw, s4, l(0.000000)
  mul r23.xyz, r11.xyzx, r11.xyzx
  mul r23.xyz, r15.wwww, r23.xyzx
  add r24.xyz, r20.xyzx, r21.wwyw
  sample_l_indexable(texture3d)(float,float,float,float) r24.xyz, r24.xyzx, t18.xyzw, s4, l(0.000000)
  mul r24.xyz, r23.yyyy, r24.xyzx
  mad r22.xyz, r22.xyzx, r23.xxxx, r24.xyzx
  add r20.xyz, r20.xyzx, r21.wwzw
  sample_l_indexable(texture3d)(float,float,float,float) r20.xyz, r20.xyzx, t19.xyzw, s4, l(0.000000)
  mad r20.xyz, r20.xyzx, r23.zzzz, r22.xyzx
  mov r11.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r21.xyz, r11.xyzw, t8.xyzw, s2, l(6.000000)
  mul r20.xyz, r20.xyzx, r21.xyzx
  dp3 r11.w, r20.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  mad r17.xyw, r18.xyxz, r12.wwww, r20.xyxz
  mov r16.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r18.xyz, r16.xyzw, t8.xyzw, s2, r15.y
  mad r12.w, cb2[19].x, r15.z, -r11.w
  mad r11.w, r2.y, r12.w, r11.w
  mad r19.xyz, r18.xyzx, r11.wwww, r19.xyzx
endif 
add r1.w, -r1.w, l(1.000000)
mad r14.yzw, r19.xxyz, r1.wwww, r14.yyzw
add r1.w, r4.z, r2.x
log r1.w, |r1.w|
mul r1.w, r1.w, r3.z
exp r1.w, r1.w
add r1.w, r4.z, r1.w
add_sat r1.w, r1.w, l(-1.000000)
mul r1.w, r7.w, r1.w
mul r18.xyz, r4.zzzz, r17.xywx
and r19.xyz, r3.wwww, r18.yzxy
mad r15.yz, r2.xxyx, l(0.000000, 0.984375, 0.984375, 0.000000), l(0.000000, 0.00781250, 0.00781250, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r15.yz, r15.yzyy, t5.zxyw, s2, l(0.000000)
mul r14.yzw, r1.wwww, r14.yyzw
mul r20.xyz, r15.yyyy, r14.yzwy
mul r21.xyz, r15.zzzz, r14.yzwy
sqrt r1.w, r3.z
mad r1.w, r1.w, l(0.500000), l(0.500000)
mul r1.w, r1.w, r1.w
mul r2.y, r1.w, l(0.500000)
mad r1.w, -r1.w, l(0.500000), l(1.000000)
mad r7.w, r2.x, r1.w, r2.y
mul r1.w, r1.w, r7.w
mul r2.y, r2.y, r7.w
if_nz r6.w
  mov r22.x, l(3)
  mov r22.yzw, cb1[24].xxyz
  store_structured u2.xyzw, cb2[52].x, l(112), r22.xyzw
endif 
lt r7.w, l(0.000000), r10.w
if_nz r7.w
  if_nz r6.w
    ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r7.w, cb2[52].x, l(112), u2.xxxx
    or r7.w, r7.w, l(4)
    store_structured u2.x, cb2[52].x, l(112), r7.w
    store_structured u2.x, cb2[52].x, l(128), r13.w
  endif 
  lt r7.w, l(0.000000), r13.w
  if_nz r7.w
    mul r7.w, r2.w, cb2[18].w
    mul r7.w, r9.w, r7.w
    if_nz cb2[23].x
      add r22.xyz, r5.xyzx, cb1[24].xyzx
      mov r22.w, l(1.000000)
      dp4 r11.w, cb2[24].xyzw, r22.xyzw
      dp4 r12.w, cb2[25].xyzw, r22.xyzw
      frc r22.x, r11.w
      frc r22.y, r12.w
      iadd r11.w, l(-1), cb2[23].x
      utof r22.z, r11.w
      sample_l_indexable(texture2darray)(float,float,float,float) r14.yzw, r22.xyzx, t20.wxyz, s2, l(0.000000)
      add r14.yzw, r14.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
      mad r14.yzw, cb2[23].yyyy, r14.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
      mul r14.yzw, r14.yyzw, cb2[18].xxyz
    else 
      mov r14.yzw, cb2[18].xxyz
    endif 
    ushr r11.w, cb2[53].x, l(16)
    ult r12.w, l(0), r11.w
    and r12.w, r1.z, r12.w
    if_nz r12.w
      iadd r11.w, r11.w, cb2[0].x
      imad r11.w, r11.w, l(15), l(-15)
      mad r12.w, |r8.w|, l(-0.200000), l(0.400000)
      lt r15.y, r8.w, l(0.000000)
      and r15.y, r3.w, r15.y
      movc r12.w, r15.y, -r12.w, r12.w
      mad r22.xyz, r11.xyzx, r12.wwww, r5.xyzx
      mov r23.xyz, cb9[r11.w + 4].yzwy
      mov r23.w, cb9[r11.w + 5].x
      mov r22.w, l(1.000000)
      dp4 r23.x, r23.xyzw, r22.xyzw
      mov r24.xyz, cb9[r11.w + 5].yzwy
      mov r24.w, cb9[r11.w + 6].x
      dp4 r23.y, r24.xyzw, r22.xyzw
      mad r15.yz, r23.xxyx, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      add r23.x, r15.y, cb9[r11.w + 9].w
      add r23.y, r15.z, cb9[r11.w + 10].x
      mul r15.yz, r23.xxyx, cb9[r11.w + 9].yyzy
      div r23.xy, cb9[r11.w + 3].yyyy, cb9[r11.w + 8].ywyy
      add r23.zw, -r23.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
      ge r23.zw, r15.yyyz, r23.zzzw
      ge r23.xy, r23.xyxx, r15.yzyy
      or r23.xy, r23.xyxx, r23.zwzz
      or r12.w, r23.y, r23.x
      if_z r12.w
        mov r23.xyz, cb9[r11.w + 6].yzwy
        mov r23.w, cb9[r11.w + 7].x
        dp4 r12.w, r23.xyzw, r22.xyzw
        mov_sat r15.yz, r15.yyzy
        mad r22.x, r15.y, cb9[r11.w + 8].y, cb9[r11.w + 8].z
        mad r22.y, r15.z, cb9[r11.w + 8].w, cb9[r11.w + 9].x
        add r12.w, r12.w, cb9[r11.w + 10].y
        div r12.w, r12.w, cb9[r11.w + 10].z
        max r12.w, r12.w, l(0.00006104)
        and r15.y, l(0x0000ffff), cb9[r11.w + 1].w
        if_nz cb2[58].y
          mov r23.x, -r3.x
          utof r24.z, r15.y
          mov r23.y, r13.x
          mov r23.z, r3.x
          mov r15.zw, l(0,0,0,0)
          loop 
            ige r16.w, r15.w, l(8)
            breakc_nz r16.w
            dp2 r25.x, icb[r15.w + 0].yxyy, r23.xyxx
            dp2 r25.y, icb[r15.w + 0].yxyy, r23.yzyy
            mad r24.xy, r25.xyxx, cb9[r11.w + 3].yyyy, r22.xyxx
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r16.w, r24.xyzx, t9.xxxx, s13, r12.w
            mad r15.z, r16.w, l(0.125000), r15.z
            iadd r15.w, r15.w, l(1)
          endloop 
        else 
          utof r22.z, r15.y
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r15.z, r22.xyzx, t9.xxxx, s13, r12.w
        endif 
        mul r11.w, r15.z, r15.z
        mul r11.w, r15.z, r11.w
      else 
        mov r11.w, l(1.000000)
      endif 
      mul r13.w, r11.w, r13.w
    else 
      and r11.w, cb2[53].x, l(0x0000ffff)
      ult r12.w, l(0), r11.w
      not r15.y, r1.z
      and r12.w, r12.w, r15.y
      if_nz r12.w
        iadd r11.w, r11.w, cb2[0].x
        imad r11.w, r11.w, l(15), l(-15)
        mad r12.w, |r8.w|, l(-0.200000), l(0.400000)
        lt r15.y, r8.w, l(0.000000)
        and r15.y, r3.w, r15.y
        movc r12.w, r15.y, -r12.w, r12.w
        mad r22.xyz, r11.xyzx, r12.wwww, r5.xyzx
        mov r23.xyz, cb9[r11.w + 4].yzwy
        mov r23.w, cb9[r11.w + 5].x
        mov r22.w, l(1.000000)
        dp4 r23.x, r23.xyzw, r22.xyzw
        mov r24.xyz, cb9[r11.w + 5].yzwy
        mov r24.w, cb9[r11.w + 6].x
        dp4 r23.y, r24.xyzw, r22.xyzw
        mad r15.yz, r23.xxyx, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
        add r23.x, r15.y, cb9[r11.w + 9].w
        add r23.y, r15.z, cb9[r11.w + 10].x
        mul r15.yz, r23.xxyx, cb9[r11.w + 9].yyzy
        div r23.xy, cb9[r11.w + 3].yyyy, cb9[r11.w + 8].ywyy
        add r23.zw, -r23.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
        ge r23.zw, r15.yyyz, r23.zzzw
        ge r23.xy, r23.xyxx, r15.yzyy
        or r23.xy, r23.xyxx, r23.zwzz
        or r12.w, r23.y, r23.x
        if_z r12.w
          mov r23.xyz, cb9[r11.w + 6].yzwy
          mov r23.w, cb9[r11.w + 7].x
          dp4 r12.w, r23.xyzw, r22.xyzw
          mov_sat r15.yz, r15.yyzy
          mad r22.x, r15.y, cb9[r11.w + 8].y, cb9[r11.w + 8].z
          mad r22.y, r15.z, cb9[r11.w + 8].w, cb9[r11.w + 9].x
          add r12.w, r12.w, cb9[r11.w + 10].y
          div r12.w, r12.w, cb9[r11.w + 10].z
          max r12.w, r12.w, l(0.00006104)
          and r15.y, l(0x0000ffff), cb9[r11.w + 1].w
          if_nz cb2[58].y
            mov r23.x, -r3.x
            utof r24.z, r15.y
            mov r23.y, r13.x
            mov r23.z, r3.x
            mov r15.zw, l(0,0,0,0)
            loop 
              ige r16.w, r15.w, l(8)
              breakc_nz r16.w
              dp2 r25.x, icb[r15.w + 0].yxyy, r23.xyxx
              dp2 r25.y, icb[r15.w + 0].yxyy, r23.yzyy
              mad r24.xy, r25.xyxx, cb9[r11.w + 3].yyyy, r22.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r16.w, r24.xyzx, t9.xxxx, s13, r12.w
              mad r15.z, r16.w, l(0.125000), r15.z
              iadd r15.w, r15.w, l(1)
            endloop 
          else 
            utof r22.z, r15.y
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r15.z, r22.xyzx, t9.xxxx, s13, r12.w
          endif 
          mul r11.w, r15.z, r15.z
          mul r11.w, r15.z, r11.w
        else 
          mov r11.w, l(1.000000)
        endif 
        mul r13.w, r11.w, r13.w
      endif 
    endif 
    mad r11.w, -r2.x, l(0.500000), l(1.000000)
    mad r11.w, -r10.w, r11.w, l(1.000000)
    mul r11.w, r11.w, r11.w
    mad r11.w, -r11.w, l(0.620000), l(0.620000)
    add r11.w, -r10.w, r11.w
    mad r10.w, r3.z, r11.w, r10.w
    mul r10.w, r13.w, r10.w
    mul r15.yzw, r14.yyzw, r10.wwww
    lt r8.w, l(0.000000), r8.w
    mad r22.xyz, r17.xywx, r4.zzzz, r15.yzwy
    mad r15.yzw, -r5.xxyz, r2.zzzz, cb2[17].xxyz
    dp3 r2.z, r15.yzwy, r15.yzwy
    rsq r2.z, r2.z
    mul r15.yzw, r2.zzzz, r15.yyzw
    dp3 r2.z, r15.yzwy, r12.xyzx
    dp3 r4.z, r11.xyzx, r15.yzwy
    mad r11.w, |r4.z|, r2.w, -|r4.z|
    mad r4.z, |r4.z|, r11.w, l(1.000000)
    mad r9.w, r9.w, r1.w, r2.y
    mul r4.z, r4.z, r4.z
    mul r4.z, r9.w, r4.z
    rcp r4.z, r4.z
    mul r4.z, r7.w, r4.z
    mul r4.z, r4.z, r13.w
    mul r4.z, r4.z, l(0.250000)
    mad r23.yzw, r4.zzzz, r14.yyzw, r21.xxyz
    add_sat r2.z, -r2.z, l(1.000000)
    mul r7.w, r2.z, r2.z
    mul r7.w, r7.w, r7.w
    mul r2.z, r2.z, r7.w
    mul r2.z, r2.z, r4.z
    mad r15.yzw, r2.zzzz, r14.yyzw, r20.xxyz
    mad r14.yzw, r10.wwww, r14.yyzw, r19.zzxy
    and r24.xyz, r3.wwww, r14.zwyz
    mov r22.w, r19.z
    mov r18.w, r24.z
    movc r18.xyzw, r8.wwww, r22.xyzw, r18.xyzw
    mov r19.zw, r15.yyyz
    mov r24.zw, r20.xxxy
    movc r22.xyzw, r8.wwww, r19.xyzw, r24.xyzw
    mov r23.x, r15.w
    mov r21.w, r20.z
    movc r21.xyzw, r8.wwww, r23.yzwx, r21.xyzw
    if_nz r6.w
      ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r2.z, cb2[52].x, l(112), u2.xxxx
      or r2.z, r2.z, l(8)
      store_structured u2.x, cb2[52].x, l(112), r2.z
      store_structured u2.x, cb2[52].x, l(132), r13.w
    endif 
    mov r19.z, r18.w
    mov r19.xy, r22.xyxx
    mov r20.xy, r22.zwzz
    mov r20.z, r21.w
    mov r2.z, l(0x00010101)
  else 
    mov r2.z, l(257)
  endif 
else 
  mov r2.z, l(1)
endif 
ubfe r0.x, l(10), l(12), r0.x
mov r22.x, -r3.x
not r4.z, r1.z
mad r2.x, -r2.x, l(0.500000), l(1.000000)
mov r23.x, l(2)
mov r24.x, l(2)
mov r5.w, l(1.000000)
mov r25.w, l(1.000000)
mov r22.z, r3.x
mov r26.w, l(1.000000)
mov r27.z, l(1.000000)
mov r28.w, l(1.000000)
mov r22.yw, r13.xxxx
mov r3.y, r22.w
mov r29.w, l(1.000000)
mov r13.y, r22.x
mov r13.z, r3.x
mov r30.w, l(1.000000)
mov r31.x, r13.x
mov r31.y, r22.x
mov r31.z, r3.x
mov r32.x, r13.x
mov r32.y, r22.x
mov r32.z, r3.x
mov r33.x, r13.x
mov r33.y, r22.x
mov r33.z, r3.x
mov r14.yzw, r18.xxyz
mov r34.xyz, r19.zxyz
mov r35.xyz, r20.xyzx
mov r15.yzw, r21.xxyz
mov r7.w, r2.z
mov r8.w, l(0)
loop 
  ieq r9.w, r8.w, l(2)
  breakc_nz r9.w
  movc r9.w, r8.w, r0.x, r17.z
  imul null, r9.w, r9.w, l(15)
  ubfe r10.w, l(3), l(24), cb9[r9.w + 1].w
  switch r10.w
    case l(4)
    if_nz r6.w
      and r10.w, r7.w, l(7)
      imad r10.w, r10.w, l(24), l(112)
      add r23.yzw, cb1[24].xxyz, cb9[r9.w + 0].xxyz
      store_structured u2.xyzw, cb2[52].x, r10.w, r23.xyzw
    endif 
    iadd r10.w, r7.w, l(1)
    lt r11.w, l(0.000000), cb9[r9.w + 6].y
    mov r36.xy, cb9[r9.w + 5].zwzz
    mov r36.z, cb9[r9.w + 6].x
    mad r17.xyw, -r36.xyxz, l(0.500000, 0.500000, 0.000000, 0.500000), cb9[r9.w + 0].xyxz
    add r23.yzw, -r5.xxyz, r17.xxyw
    dp3 r12.w, r36.xyzx, r23.yzwy
    div_sat r13.w, -r12.w, cb9[r9.w + 6].y
    mad r37.xyz, r13.wwww, r36.xyzx, r17.xywx
    movc r37.xyz, r11.wwww, r37.xyzx, cb9[r9.w + 0].xyzx
    add r37.xyz, -r5.xyzx, r37.xyzx
    dp3 r16.w, r37.xyzx, r37.xyzx
    rsq r18.w, r16.w
    mul r37.xyz, r18.wwww, r37.xyzx
    dp3 r18.w, r11.xyzx, r37.xyzx
    mov_sat r19.w, r18.w
    movc r19.w, r3.w, |r18.w|, r19.w
    lt r20.w, l(0.000000), r19.w
    if_nz r20.w
      sqrt r20.w, r16.w
      mul r21.w, cb9[r9.w + 3].x, cb9[r9.w + 3].x
      div r16.w, r21.w, r16.w
      min r16.w, r16.w, l(1.000000)
      mad_sat r37.xy, r20.wwww, cb9[r9.w + 2].xzxx, cb9[r9.w + 2].ywyy
      mul r37.zw, r37.xxxy, r37.xxxy
      mad r37.xy, r37.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
      mul r37.xy, r37.xyxx, r37.zwzz
      mul r16.w, r16.w, r37.x
      mul r16.w, r37.y, r16.w
      lt r20.w, l(0.000000), r16.w
      if_nz r20.w
        ubfe r20.w, l(3), l(27), cb9[r9.w + 1].w
        and r21.w, r10.w, l(15)
        iadd r27.w, r21.w, l(-1)
        ult r27.w, r27.w, l(32)
        and r27.w, r6.w, r27.w
        if_nz r27.w
          imad r37.xy, r21.wwww, l(24, 24, 0, 0), l(88, 104, 0, 0)
          ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r21.w, cb2[52].x, r37.x, u2.xxxx
          or r21.w, r21.w, l(4)
          store_structured u2.x, cb2[52].x, r37.x, r21.w
          store_structured u2.x, cb2[52].x, r37.y, r16.w
        endif 
        iadd r21.w, r7.w, l(257)
        ine r20.w, r20.w, l(1)
        if_nz r20.w
          mad r20.w, |r18.w|, l(-0.200000), l(0.400000)
          lt r27.w, r18.w, l(0.000000)
          and r27.w, r3.w, r27.w
          movc r20.w, r27.w, -r20.w, r20.w
          mad r37.xyz, r11.xyzx, r20.wwww, r5.xyzx
          add r37.xyz, r37.xyzx, -cb9[r9.w + 4].yzwy
          max r20.w, |r37.z|, |r37.y|
          max r20.w, r20.w, |r37.x|
          div r20.w, cb9[r9.w + 5].x, r20.w
          add r20.w, r20.w, cb9[r9.w + 5].y
          dp3 r27.w, r37.xyzx, r37.xyzx
          rsq r27.w, r27.w
          max r20.w, r20.w, l(0.00006104)
          and r31.w, l(0x0000ffff), cb9[r9.w + 1].w
          utof r38.w, r31.w
          mov r31.w, l(0)
          mov r32.w, l(0)
          loop 
            ige r33.w, r32.w, l(8)
            breakc_nz r33.w
            dp2 r39.y, icb[r32.w + 0].yxyy, r22.xyxx
            dp2 r39.z, icb[r32.w + 0].yxyy, r22.yzyy
            mul r39.yz, r39.yyzy, cb9[r9.w + 3].yyyy
            mul r39.x, r15.x, r39.y
            mul r39.w, r14.x, r39.y
            mad r38.xyz, r37.xyzx, r27.wwww, r39.xzwx
            sample_c_lz_indexable(texturecubearray)(float,float,float,float) r33.w, r38.xyzw, t10.xxxx, s13, r20.w
            mad r31.w, r33.w, l(0.125000), r31.w
            iadd r32.w, r32.w, l(1)
          endloop 
        else 
          mov r31.w, l(1.000000)
        endif 
        mul r16.w, r16.w, r31.w
        lt r20.w, l(0.000000), r16.w
        if_nz r20.w
          mul r20.w, r2.w, cb9[r9.w + 1].z
          mul r20.w, r20.w, l(0.250000)
          dp3 r27.w, r36.xyzx, r16.xyzx
          dp3 r23.y, r16.xyzx, r23.yzwy
          mad r23.z, -r27.w, r27.w, cb9[r9.w + 6].y
          mad r12.w, r27.w, r23.y, -r12.w
          div_sat r12.w, r12.w, r23.z
          div r23.y, r23.z, cb9[r9.w + 6].y
          mul r23.y, r23.y, l(10.000000)
          min r23.y, r23.y, l(1.000000)
          add r12.w, -r13.w, r12.w
          mad r12.w, r23.y, r12.w, r13.w
          mad r17.xyw, r12.wwww, r36.xyxz, r17.xyxw
          movc r17.xyw, r11.wwww, r17.xyxw, cb9[r9.w + 0].xyxz
          add r17.xyw, -r5.xyxz, r17.xyxw
          dp3 r11.w, r17.xywx, r17.xywx
          rsq r11.w, r11.w
          mul r23.yzw, r11.wwww, r17.xxyw
          ubfe r12.w, l(4), l(16), cb9[r9.w + 1].w
          ult r13.w, l(0), r12.w
          and r13.w, r1.z, r13.w
          if_nz r13.w
            iadd r12.w, r12.w, cb2[0].x
            imad r12.w, r12.w, l(15), l(-15)
            mad r13.w, |r18.w|, l(-0.200000), l(0.400000)
            lt r27.w, r18.w, l(0.000000)
            and r27.w, r3.w, r27.w
            movc r13.w, r27.w, -r13.w, r13.w
            mad r25.xyz, r11.xyzx, r13.wwww, r5.xyzx
            mov r36.xyz, cb9[r12.w + 6].yzwy
            mov r36.w, cb9[r12.w + 7].x
            dp4 r13.w, r36.xyzw, r25.xyzw
            mov r36.xyz, cb9[r12.w + 7].yzwy
            mov r36.w, cb9[r12.w + 8].x
            dp4 r27.w, r36.xyzw, r25.xyzw
            lt r32.w, r27.w, r13.w
            if_z r32.w
              mov r36.xyz, cb9[r12.w + 4].yzwy
              mov r36.w, cb9[r12.w + 5].x
              dp4 r36.x, r36.xyzw, r25.xyzw
              mov r37.xyz, cb9[r12.w + 5].yzwy
              mov r37.w, cb9[r12.w + 6].x
              dp4 r36.y, r37.xyzw, r25.xyzw
              div r25.xy, r36.xyxx, r27.wwww
              mad r25.xy, r25.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
              add r36.x, r25.x, cb9[r12.w + 9].w
              add r36.y, r25.y, cb9[r12.w + 10].x
              mul r25.xy, r36.xyxx, cb9[r12.w + 9].yzyy
              div r36.xy, cb9[r12.w + 3].yyyy, cb9[r12.w + 8].ywyy
              add r36.zw, -r36.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
              ge r36.zw, r25.xxxy, r36.zzzw
              ge r36.xy, r36.xyxx, r25.xyxx
              or r36.xy, r36.xyxx, r36.zwzz
              or r25.z, r36.y, r36.x
              if_z r25.z
                mov_sat r25.xy, r25.xyxx
                mad r36.x, r25.x, cb9[r12.w + 8].y, cb9[r12.w + 8].z
                mad r36.y, r25.y, cb9[r12.w + 8].w, cb9[r12.w + 9].x
                mul r25.x, r27.w, cb9[r12.w + 10].z
                mad r13.w, cb9[r12.w + 10].y, r27.w, r13.w
                div r13.w, r13.w, r25.x
              endif 
            else 
              mov r25.z, l(-1)
            endif 
            or r25.x, r32.w, r25.z
            if_z r25.x
              max r13.w, r13.w, l(0.00006104)
              and r25.x, l(0x0000ffff), cb9[r12.w + 1].w
              if_nz cb2[58].y
                utof r37.z, r25.x
                mov r25.yz, l(0,0,0,0)
                loop 
                  ige r27.w, r25.z, l(8)
                  breakc_nz r27.w
                  dp2 r38.x, icb[r25.z + 0].yxyy, r22.xwxx
                  dp2 r38.y, icb[r25.z + 0].xyxx, r3.xyxx
                  mad r37.xy, r38.xyxx, cb9[r12.w + 3].yyyy, r36.xyxx
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r27.w, r37.xyzx, t9.xxxx, s13, r13.w
                  mad r25.y, r27.w, l(0.125000), r25.y
                  iadd r25.z, r25.z, l(1)
                endloop 
              else 
                utof r36.z, r25.x
                sample_c_lz_indexable(texture2darray)(float,float,float,float) r25.y, r36.xyzx, t9.xxxx, s13, r13.w
              endif 
              mul r12.w, r25.y, r25.y
              mul r12.w, r25.y, r12.w
            else 
              mov r12.w, l(1.000000)
            endif 
            mul r16.w, r12.w, r16.w
          else 
            ubfe r12.w, l(4), l(20), cb9[r9.w + 1].w
            ult r13.w, l(0), r12.w
            and r13.w, r4.z, r13.w
            if_nz r13.w
              iadd r12.w, r12.w, cb2[0].x
              imad r12.w, r12.w, l(15), l(-15)
              mad r13.w, |r18.w|, l(-0.200000), l(0.400000)
              lt r25.x, r18.w, l(0.000000)
              and r25.x, r3.w, r25.x
              movc r13.w, r25.x, -r13.w, r13.w
              mad r26.xyz, r11.xyzx, r13.wwww, r5.xyzx
              mov r36.xyz, cb9[r12.w + 6].yzwy
              mov r36.w, cb9[r12.w + 7].x
              dp4 r13.w, r36.xyzw, r26.xyzw
              mov r36.xyz, cb9[r12.w + 7].yzwy
              mov r36.w, cb9[r12.w + 8].x
              dp4 r25.x, r36.xyzw, r26.xyzw
              lt r25.z, r25.x, r13.w
              if_z r25.z
                mov r36.xyz, cb9[r12.w + 4].yzwy
                mov r36.w, cb9[r12.w + 5].x
                dp4 r36.x, r36.xyzw, r26.xyzw
                mov r37.xyz, cb9[r12.w + 5].yzwy
                mov r37.w, cb9[r12.w + 6].x
                dp4 r36.y, r37.xyzw, r26.xyzw
                div r26.xy, r36.xyxx, r25.xxxx
                mad r26.xy, r26.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                add r36.x, r26.x, cb9[r12.w + 9].w
                add r36.y, r26.y, cb9[r12.w + 10].x
                mul r26.xy, r36.xyxx, cb9[r12.w + 9].yzyy
                div r36.xy, cb9[r12.w + 3].yyyy, cb9[r12.w + 8].ywyy
                add r36.zw, -r36.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                ge r36.zw, r26.xxxy, r36.zzzw
                ge r36.xy, r36.xyxx, r26.xyxx
                or r36.xy, r36.xyxx, r36.zwzz
                or r26.z, r36.y, r36.x
                if_z r26.z
                  mov_sat r26.xy, r26.xyxx
                  mad r36.x, r26.x, cb9[r12.w + 8].y, cb9[r12.w + 8].z
                  mad r36.y, r26.y, cb9[r12.w + 8].w, cb9[r12.w + 9].x
                  mul r26.x, r25.x, cb9[r12.w + 10].z
                  mad r13.w, cb9[r12.w + 10].y, r25.x, r13.w
                  div r13.w, r13.w, r26.x
                endif 
              else 
                mov r26.z, l(-1)
              endif 
              or r25.x, r25.z, r26.z
              if_z r25.x
                max r13.w, r13.w, l(0.00006104)
                and r25.x, l(0x0000ffff), cb9[r12.w + 1].w
                if_nz cb2[58].y
                  utof r26.z, r25.x
                  mov r25.z, l(0)
                  mov r27.w, l(0)
                  loop 
                    ige r32.w, r27.w, l(8)
                    breakc_nz r32.w
                    dp2 r37.x, icb[r27.w + 0].xyxx, r13.xyxx
                    dp2 r37.y, icb[r27.w + 0].yxyy, r13.xzxx
                    mad r26.xy, r37.xyxx, cb9[r12.w + 3].yyyy, r36.xyxx
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r26.x, r26.xyzx, t9.xxxx, s13, r13.w
                    mad r25.z, r26.x, l(0.125000), r25.z
                    iadd r27.w, r27.w, l(1)
                  endloop 
                else 
                  utof r36.z, r25.x
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r25.z, r36.xyzx, t9.xxxx, s13, r13.w
                endif 
                mul r12.w, r25.z, r25.z
                mul r12.w, r25.z, r12.w
              else 
                mov r12.w, l(1.000000)
              endif 
              mul r16.w, r12.w, r16.w
            endif 
          endif 
          mad r12.w, -r19.w, r2.x, l(1.000000)
          mul r12.w, r12.w, r12.w
          mad r12.w, -r12.w, l(0.620000), l(0.620000)
          add r12.w, -r19.w, r12.w
          mad r12.w, r3.z, r12.w, r19.w
          mul r12.w, r16.w, r12.w
          mov r26.x, cb9[r9.w + 0].w
          mov r26.yz, cb9[r9.w + 1].xxyx
          lt r13.w, l(0.000000), r18.w
          mad r36.xyz, r12.wwww, r26.xyzx, r14.yzwy
          dp3_sat r18.w, r11.xyzx, r23.yzwy
          mad r17.xyw, r17.xyxw, r11.wwww, r12.xyxz
          dp3 r11.w, r17.xywx, r17.xywx
          rsq r11.w, r11.w
          mul r17.xyw, r11.wwww, r17.xyxw
          dp3 r11.w, r17.xywx, r12.xyzx
          dp3 r17.x, r11.xyzx, r17.xywx
          mad r17.y, |r17.x|, r2.w, -|r17.x|
          mad r17.x, |r17.x|, r17.y, l(1.000000)
          mad r17.y, r18.w, r1.w, r2.y
          mul r17.x, r17.x, r17.x
          mul r17.x, r17.y, r17.x
          rcp r17.x, r17.x
          mul r17.y, r20.w, r18.w
          mul r17.x, r17.y, r17.x
          mul r17.x, r16.w, r17.x
          mad r23.yzw, r17.xxxx, r26.xxyz, r15.yyzw
          add_sat r11.w, -r11.w, l(1.000000)
          mul r17.y, r11.w, r11.w
          mul r17.y, r17.y, r17.y
          mul r11.w, r11.w, r17.y
          mul r11.w, r11.w, r17.x
          mad r17.xyw, r11.wwww, r26.xyxz, r35.xyxz
          mad r26.xyz, r12.wwww, r26.xyzx, r34.xyzx
          movc r26.xyz, r3.wwww, r26.xyzx, r34.xyzx
          movc r14.yzw, r13.wwww, r36.xxyz, r14.yyzw
          movc r34.xyz, r13.wwww, r34.xyzx, r26.xyzx
          movc r35.xyz, r13.wwww, r17.xywx, r35.xyzx
          movc r15.yzw, r13.wwww, r23.yyzw, r15.yyzw
          and r11.w, r21.w, l(15)
          iadd r12.w, r11.w, l(-1)
          ult r12.w, r12.w, l(32)
          and r12.w, r6.w, r12.w
          if_nz r12.w
            imad r17.xy, r11.wwww, l(24, 24, 0, 0), l(88, 108, 0, 0)
            ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r11.w, cb2[52].x, r17.x, u2.xxxx
            or r11.w, r11.w, l(8)
            store_structured u2.x, cb2[52].x, r17.x, r11.w
            store_structured u2.x, cb2[52].x, r17.y, r16.w
          endif 
          iadd r7.w, r7.w, l(0x00010101)
        else 
          mov r7.w, r21.w
        endif 
      else 
        mov r7.w, r10.w
      endif 
    else 
      mov r7.w, r10.w
    endif 
    break 
    case l(2)
    if_nz r6.w
      and r10.w, r7.w, l(7)
      imad r10.w, r10.w, l(24), l(112)
      add r24.yzw, cb1[24].xxyz, cb9[r9.w + 0].xxyz
      store_structured u2.xyzw, cb2[52].x, r10.w, r24.xyzw
    endif 
    iadd r10.w, r7.w, l(1)
    add r26.xy, -r5.xyxx, cb9[r9.w + 3].zwzz
    add r26.z, -r5.z, cb9[r9.w + 4].x
    dp3 r11.w, r26.xyzx, r26.xyzx
    rsq r11.w, r11.w
    mul r17.xyw, r11.wwww, r26.xyxz
    dp3 r12.w, r11.xyzx, r17.xywx
    mov_sat r13.w, r12.w
    movc r16.w, r3.w, |r12.w|, r13.w
    lt r17.x, l(0.000000), r16.w
    if_nz r17.x
      mov r36.xyz, cb9[r9.w + 7].yzwy
      mov r36.w, cb9[r9.w + 8].x
      dp4 r17.x, r36.xyzw, r5.xyzw
      lt r17.y, r17.x, l(1.000000)
      if_nz r17.y
        mov r23.yzw, l(0,1.000000,1.000000,1.000000)
        mov r17.y, l(0)
      else 
        add r24.yzw, -r5.xxyz, cb9[r9.w + 0].xxyz
        mul r17.w, cb9[r9.w + 3].x, cb9[r9.w + 3].x
        dp3 r18.w, r24.yzwy, r24.yzwy
        div r17.w, r17.w, r18.w
        min r17.w, r17.w, l(1.000000)
        mad_sat r24.yz, r17.xxxx, cb9[r9.w + 2].xxzx, cb9[r9.w + 2].yywy
        mul r37.xy, r24.yzyy, r24.yzyy
        mad r24.yz, r24.yyzy, l(0.000000, -2.000000, -2.000000, 0.000000), l(0.000000, 3.000000, 3.000000, 0.000000)
        mul r24.yz, r24.yyzy, r37.xxyx
        mul r17.w, r17.w, r24.y
        mul r17.w, r24.z, r17.w
        mov r37.xyz, cb9[r9.w + 4].yzwy
        mov r37.w, cb9[r9.w + 5].x
        dp4 r37.x, r37.xyzw, r5.xyzw
        mov r38.xyz, cb9[r9.w + 5].yzwy
        mov r38.w, cb9[r9.w + 6].x
        dp4 r37.y, r38.xyzw, r5.xyzw
        div r27.xy, r37.xyxx, r17.xxxx
        lt r17.x, cb9[r9.w + 10].w, l(0.00048828)
        if_nz r17.x
          mad_sat r24.yz, |r27.xxyx|, cb9[r9.w + 12].xxyx, cb9[r9.w + 12].zzwz
          mul r37.xy, r24.yzyy, r24.yzyy
          mad r24.yz, r24.yyzy, l(0.000000, -2.000000, -2.000000, 0.000000), l(0.000000, 3.000000, 3.000000, 0.000000)
          mul r24.yz, r24.yyzy, r37.xxyx
          mul r17.x, r24.z, r24.y
        else 
          mul_sat r37.xyzw, |r27.yyxx|, cb9[r9.w + 11].xyzw
          log r37.xyzw, r37.xyzw
          mul r37.xyzw, r37.xyzw, cb9[r9.w + 12].zzzz
          exp r37.xyzw, r37.xyzw
          add r24.yz, r37.zzwz, r37.xxyx
          log r24.yz, r24.yyzy
          mul r24.yz, r24.yyzy, cb9[r9.w + 12].wwww
          exp r24.yz, r24.yyzy
          mul r18.w, r24.y, cb9[r9.w + 12].x
          mad r19.w, cb9[r9.w + 12].y, r24.z, l(-1.000000)
          mad r18.w, cb9[r9.w + 12].y, r24.z, -r18.w
          div_sat r18.w, r19.w, r18.w
          mul r19.w, r18.w, r18.w
          mad r18.w, r18.w, l(-2.000000), l(3.000000)
          mul r17.x, r18.w, r19.w
        endif 
        mul r17.y, r17.x, r17.w
        and r17.x, l(255), cb9[r9.w + 14].w
        if_nz r17.x
          dp3 r17.w, cb9[r9.w + 13].xyzx, r27.xyzx
          mov r37.x, cb9[r9.w + 13].w
          mov r37.yz, cb9[r9.w + 14].xxyx
          dp3 r18.w, r37.xyzx, r27.xyzx
          frc r37.x, r17.w
          frc r37.y, r18.w
          iadd r17.x, r17.x, l(-1)
          utof r37.z, r17.x
          sample_l_indexable(texture2darray)(float,float,float,float) r23.yzw, r37.xyzx, t20.wxyz, s2, l(0.000000)
        else 
          mov r23.yzw, l(0,1.000000,1.000000,1.000000)
        endif 
      endif 
      mov r37.x, cb9[r9.w + 0].w
      mov r37.yz, cb9[r9.w + 1].xxyx
      mul r23.yzw, r23.yyzw, r37.xxyz
      lt r17.x, l(0.000000), r17.y
      if_nz r17.x
        ubfe r17.x, l(3), l(27), cb9[r9.w + 1].w
        and r17.w, r10.w, l(15)
        iadd r18.w, r17.w, l(-1)
        ult r18.w, r18.w, l(32)
        and r18.w, r6.w, r18.w
        if_nz r18.w
          imad r24.yz, r17.wwww, l(0, 24, 24, 0), l(0, 88, 104, 0)
          ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r17.w, cb2[52].x, r24.y, u2.xxxx
          or r17.w, r17.w, l(4)
          store_structured u2.x, cb2[52].x, r24.y, r17.w
          store_structured u2.x, cb2[52].x, r24.z, r17.y
        endif 
        iadd r17.w, r7.w, l(257)
        ine r17.x, r17.x, l(1)
        if_nz r17.x
          mad r17.x, |r12.w|, l(-0.200000), l(0.400000)
          lt r18.w, r12.w, l(0.000000)
          and r18.w, r3.w, r18.w
          movc r17.x, r18.w, -r17.x, r17.x
          mad r28.xyz, r11.xyzx, r17.xxxx, r5.xyzx
          mov r37.xyz, cb9[r9.w + 6].yzwy
          mov r37.w, cb9[r9.w + 7].x
          dp4 r17.x, r37.xyzw, r28.xyzw
          dp4 r18.w, r36.xyzw, r28.xyzw
          ge r19.w, r18.w, r17.x
          if_nz r19.w
            mov r36.xyz, cb9[r9.w + 4].yzwy
            mov r36.w, cb9[r9.w + 5].x
            dp4 r27.x, r36.xyzw, r28.xyzw
            mov r36.xyz, cb9[r9.w + 5].yzwy
            mov r36.w, cb9[r9.w + 6].x
            dp4 r27.y, r36.xyzw, r28.xyzw
            div r24.yz, r27.xxyx, r18.wwww
            mad_sat r24.yz, r24.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
            mad r28.x, r24.y, cb9[r9.w + 8].y, cb9[r9.w + 8].z
            mad r28.y, r24.z, cb9[r9.w + 8].w, cb9[r9.w + 9].x
            div r17.x, r17.x, r18.w
            max r17.x, r17.x, l(0.00006104)
            and r18.w, l(0x0000ffff), cb9[r9.w + 1].w
            if_nz cb2[58].y
              utof r36.z, r18.w
              mov r19.w, l(0)
              mov r20.w, l(0)
              loop 
                ige r21.w, r20.w, l(8)
                breakc_nz r21.w
                dp2 r27.x, icb[r20.w + 0].xyxx, r31.xyxx
                dp2 r27.y, icb[r20.w + 0].yxyy, r31.xzxx
                mad r36.xy, r27.xyxx, cb9[r9.w + 3].yyyy, r28.xyxx
                sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.w, r36.xyzx, t9.xxxx, s13, r17.x
                mad r19.w, r21.w, l(0.125000), r19.w
                iadd r20.w, r20.w, l(1)
              endloop 
            else 
              utof r28.z, r18.w
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.w, r28.xyzx, t9.xxxx, s13, r17.x
            endif 
            mul r17.x, r19.w, r19.w
            mul r17.x, r19.w, r17.x
          else 
            mov r17.x, l(1.000000)
          endif 
        else 
          mov r17.x, l(1.000000)
        endif 
        mul r17.x, r17.x, r17.y
        lt r17.y, l(0.000000), r17.x
        if_nz r17.y
          mul r17.y, r2.w, cb9[r9.w + 1].z
          mul r17.y, r13.w, r17.y
          ubfe r18.w, l(4), l(16), cb9[r9.w + 1].w
          ult r20.w, l(0), r18.w
          and r20.w, r1.z, r20.w
          if_nz r20.w
            iadd r18.w, r18.w, cb2[0].x
            imad r18.w, r18.w, l(15), l(-15)
            mad r20.w, |r12.w|, l(-0.200000), l(0.400000)
            lt r21.w, r12.w, l(0.000000)
            and r21.w, r3.w, r21.w
            movc r20.w, r21.w, -r20.w, r20.w
            mad r29.xyz, r11.xyzx, r20.wwww, r5.xyzx
            mov r36.xyz, cb9[r18.w + 6].yzwy
            mov r36.w, cb9[r18.w + 7].x
            dp4 r20.w, r36.xyzw, r29.xyzw
            mov r36.xyz, cb9[r18.w + 7].yzwy
            mov r36.w, cb9[r18.w + 8].x
            dp4 r21.w, r36.xyzw, r29.xyzw
            lt r24.y, r21.w, r20.w
            if_z r24.y
              mov r36.xyz, cb9[r18.w + 4].yzwy
              mov r36.w, cb9[r18.w + 5].x
              dp4 r27.x, r36.xyzw, r29.xyzw
              mov r36.xyz, cb9[r18.w + 5].yzwy
              mov r36.w, cb9[r18.w + 6].x
              dp4 r27.y, r36.xyzw, r29.xyzw
              div r24.zw, r27.xxxy, r21.wwww
              mad r24.zw, r24.zzzw, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
              add r27.x, r24.z, cb9[r18.w + 9].w
              add r27.y, r24.w, cb9[r18.w + 10].x
              mul r24.zw, r27.xxxy, cb9[r18.w + 9].yyyz
              div r27.xy, cb9[r18.w + 3].yyyy, cb9[r18.w + 8].ywyy
              add r28.xy, -r27.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
              ge r28.xy, r24.zwzz, r28.xyxx
              ge r27.xy, r27.xyxx, r24.zwzz
              or r27.xy, r27.xyxx, r28.xyxx
              or r25.x, r27.y, r27.x
              if_z r25.x
                mov_sat r24.zw, r24.zzzw
                mad r28.x, r24.z, cb9[r18.w + 8].y, cb9[r18.w + 8].z
                mad r28.y, r24.w, cb9[r18.w + 8].w, cb9[r18.w + 9].x
                mul r24.z, r21.w, cb9[r18.w + 10].z
                mad r20.w, cb9[r18.w + 10].y, r21.w, r20.w
                div r20.w, r20.w, r24.z
              endif 
            else 
              mov r25.x, l(-1)
            endif 
            or r21.w, r24.y, r25.x
            if_z r21.w
              max r20.w, r20.w, l(0.00006104)
              and r21.w, l(0x0000ffff), cb9[r18.w + 1].w
              if_nz cb2[58].y
                utof r29.z, r21.w
                mov r24.yz, l(0,0,0,0)
                loop 
                  ige r24.w, r24.z, l(8)
                  breakc_nz r24.w
                  dp2 r27.x, icb[r24.z + 0].xyxx, r32.xyxx
                  dp2 r27.y, icb[r24.z + 0].yxyy, r32.xzxx
                  mad r29.xy, r27.xyxx, cb9[r18.w + 3].yyyy, r28.xyxx
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.w, r29.xyzx, t9.xxxx, s13, r20.w
                  mad r24.y, r24.w, l(0.125000), r24.y
                  iadd r24.z, r24.z, l(1)
                endloop 
              else 
                utof r28.z, r21.w
                sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.y, r28.xyzx, t9.xxxx, s13, r20.w
              endif 
              mul r18.w, r24.y, r24.y
              mul r18.w, r24.y, r18.w
            else 
              mov r18.w, l(1.000000)
            endif 
            mul r17.x, r17.x, r18.w
          else 
            ubfe r9.w, l(4), l(20), cb9[r9.w + 1].w
            ult r18.w, l(0), r9.w
            and r18.w, r4.z, r18.w
            if_nz r18.w
              iadd r9.w, r9.w, cb2[0].x
              imad r9.w, r9.w, l(15), l(-15)
              mad r18.w, |r12.w|, l(-0.200000), l(0.400000)
              lt r20.w, r12.w, l(0.000000)
              and r20.w, r3.w, r20.w
              movc r18.w, r20.w, -r18.w, r18.w
              mad r30.xyz, r11.xyzx, r18.wwww, r5.xyzx
              mov r36.xyz, cb9[r9.w + 6].yzwy
              mov r36.w, cb9[r9.w + 7].x
              dp4 r18.w, r36.xyzw, r30.xyzw
              mov r36.xyz, cb9[r9.w + 7].yzwy
              mov r36.w, cb9[r9.w + 8].x
              dp4 r20.w, r36.xyzw, r30.xyzw
              lt r21.w, r20.w, r18.w
              if_z r21.w
                mov r36.xyz, cb9[r9.w + 4].yzwy
                mov r36.w, cb9[r9.w + 5].x
                dp4 r27.x, r36.xyzw, r30.xyzw
                mov r36.xyz, cb9[r9.w + 5].yzwy
                mov r36.w, cb9[r9.w + 6].x
                dp4 r27.y, r36.xyzw, r30.xyzw
                div r24.zw, r27.xxxy, r20.wwww
                mad r24.zw, r24.zzzw, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
                add r27.x, r24.z, cb9[r9.w + 9].w
                add r27.y, r24.w, cb9[r9.w + 10].x
                mul r24.zw, r27.xxxy, cb9[r9.w + 9].yyyz
                div r27.xy, cb9[r9.w + 3].yyyy, cb9[r9.w + 8].ywyy
                add r28.xy, -r27.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                ge r28.xy, r24.zwzz, r28.xyxx
                ge r27.xy, r27.xyxx, r24.zwzz
                or r27.xy, r27.xyxx, r28.xyxx
                or r25.x, r27.y, r27.x
                if_z r25.x
                  mov_sat r24.zw, r24.zzzw
                  mad r28.x, r24.z, cb9[r9.w + 8].y, cb9[r9.w + 8].z
                  mad r28.y, r24.w, cb9[r9.w + 8].w, cb9[r9.w + 9].x
                  mul r24.z, r20.w, cb9[r9.w + 10].z
                  mad r18.w, cb9[r9.w + 10].y, r20.w, r18.w
                  div r18.w, r18.w, r24.z
                endif 
              else 
                mov r25.x, l(-1)
              endif 
              or r20.w, r21.w, r25.x
              if_z r20.w
                max r18.w, r18.w, l(0.00006104)
                and r20.w, l(0x0000ffff), cb9[r9.w + 1].w
                if_nz cb2[58].y
                  utof r29.z, r20.w
                  mov r21.w, l(0)
                  mov r24.z, l(0)
                  loop 
                    ige r24.w, r24.z, l(8)
                    breakc_nz r24.w
                    dp2 r27.x, icb[r24.z + 0].xyxx, r33.xyxx
                    dp2 r27.y, icb[r24.z + 0].yxyy, r33.xzxx
                    mad r29.xy, r27.xyxx, cb9[r9.w + 3].yyyy, r28.xyxx
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.w, r29.xyzx, t9.xxxx, s13, r18.w
                    mad r21.w, r24.w, l(0.125000), r21.w
                    iadd r24.z, r24.z, l(1)
                  endloop 
                else 
                  utof r28.z, r20.w
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.w, r28.xyzx, t9.xxxx, s13, r18.w
                endif 
                mul r9.w, r21.w, r21.w
                mul r9.w, r21.w, r9.w
              else 
                mov r9.w, l(1.000000)
              endif 
              mul r17.x, r9.w, r17.x
            endif 
          endif 
          mad r9.w, -r16.w, r2.x, l(1.000000)
          mul r9.w, r9.w, r9.w
          mad r9.w, -r9.w, l(0.620000), l(0.620000)
          add r9.w, -r16.w, r9.w
          mad r9.w, r3.z, r9.w, r16.w
          mul r9.w, r17.x, r9.w
          lt r12.w, l(0.000000), r12.w
          mad r27.xyw, r9.wwww, r23.yzyw, r14.yzyw
          mad r26.xyz, r26.xyzx, r11.wwww, r12.xyzx
          dp3 r11.w, r26.xyzx, r26.xyzx
          rsq r11.w, r11.w
          mul r26.xyz, r11.wwww, r26.xyzx
          dp3 r11.w, r26.xyzx, r12.xyzx
          dp3 r16.w, r11.xyzx, r26.xyzx
          mad r18.w, |r16.w|, r2.w, -|r16.w|
          mad r16.w, |r16.w|, r18.w, l(1.000000)
          mad r13.w, r13.w, r1.w, r2.y
          mul r16.w, r16.w, r16.w
          mul r13.w, r13.w, r16.w
          rcp r13.w, r13.w
          mul r13.w, r17.y, r13.w
          mul r13.w, r13.w, r17.x
          mul r13.w, r13.w, l(0.250000)
          mad r26.xyz, r13.wwww, r23.yzwy, r15.yzwy
          add_sat r11.w, -r11.w, l(1.000000)
          mul r16.w, r11.w, r11.w
          mul r16.w, r16.w, r16.w
          mul r11.w, r11.w, r16.w
          mul r11.w, r11.w, r13.w
          mad r28.xyz, r11.wwww, r23.yzwy, r35.xyzx
          mad r23.yzw, r9.wwww, r23.yyzw, r34.xxyz
          movc r23.yzw, r3.wwww, r23.yyzw, r34.xxyz
          movc r14.yzw, r12.wwww, r27.xxyw, r14.yyzw
          movc r34.xyz, r12.wwww, r34.xyzx, r23.yzwy
          movc r35.xyz, r12.wwww, r28.xyzx, r35.xyzx
          movc r15.yzw, r12.wwww, r26.xxyz, r15.yyzw
          and r9.w, r17.w, l(15)
          iadd r11.w, r9.w, l(-1)
          ult r11.w, r11.w, l(32)
          and r11.w, r6.w, r11.w
          if_nz r11.w
            imad r23.yz, r9.wwww, l(0, 24, 24, 0), l(0, 88, 108, 0)
            ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r9.w, cb2[52].x, r23.y, u2.xxxx
            or r9.w, r9.w, l(8)
            store_structured u2.x, cb2[52].x, r23.y, r9.w
            store_structured u2.x, cb2[52].x, r23.z, r17.x
          endif 
          iadd r7.w, r7.w, l(0x00010101)
        else 
          mov r7.w, r17.w
        endif 
      else 
        mov r7.w, r10.w
      endif 
    else 
      mov r7.w, r10.w
    endif 
    break 
    default 
    break 
  endswitch 
  iadd r8.w, r8.w, l(1)
endloop 
mad r2.xyz, r4.xwyx, l(1.000000, 3.000000, 2.000000, 0.000000), l(0.000000, 0.500000, -1.000000, 0.000000)
ftou r0.x, r2.y
mad r3.xyz, r7.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r1.z, r3.x
ieq r1.z, r0.x, r1.z
movc r1.zw, r1.zzzz, r3.yyyz, l(0,0,-1.000000,0)
mad r3.xyz, r8.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r3.x, r3.x
ieq r3.x, r0.x, r3.x
movc r3.xy, r3.xxxx, r3.yzyy, l(-1.000000,0,0,0)
mad r4.xyz, r9.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r3.z, r4.x
ieq r3.z, r0.x, r3.z
movc r4.xy, r3.zzzz, r4.yzyy, l(-1.000000,0,0,0)
mad r7.xyz, r10.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r3.z, r7.x
ieq r0.x, r0.x, r3.z
movc r4.zw, r0.xxxx, r7.yyyz, l(0,0,-1.000000,0)
mov r8.x, r1.z
mov r8.y, r3.x
mov r8.zw, r4.xxxz
add r8.xyzw, -r2.xxxx, r8.xyzw
ge r8.xyzw, |r8.xyzw|, l(0.00902149, 0.00902149, 0.00902149, 0.00902149)
movc r8.xyzw, r8.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
add r0.x, r8.y, r8.x
add r0.x, r8.z, r0.x
add r0.x, r8.w, r0.x
mul r1.z, r3.y, r8.y
mad r1.z, r8.x, r1.w, r1.z
mad r1.z, r8.z, r4.y, r1.z
mad r1.z, r8.w, r4.w, r1.z
div r2.w, r1.z, r0.x
ge r0.x, l(0.000000), r0.x
movc r2.yz, r0.xxxx, l(0,0,0,0), r2.zzwz
and r1.zw, r1.xxxy, l(0, 0, 1, 1)
ieq r0.x, r1.w, r1.z
movc r2.xyz, r0.xxxx, r2.xyzx, r2.xzyx
mad r0.x, -r2.z, l(0.500000), r2.x
add r3.y, r0.x, r2.z
mad r3.z, -r2.y, l(0.500000), r0.x
add r3.x, r2.y, r3.z
mul r2.xyz, r6.xyzx, r14.yzwy
mad r2.xyz, r34.xyzx, r3.xyzx, r2.xyzx
mul r4.xyz, r35.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
mad r4.xyz, r15.yzwy, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
add r2.xyz, r2.xyzx, r4.xyzx
add r4.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r4.xyz, r4.xyzx, r35.xyzx
mad r3.xyz, r15.yzwy, r3.xyzx, r4.xyzx
mad r3.xyz, r14.yzwy, r6.xyzx, r3.xyzx
movc r2.xyz, r3.wwww, r2.xyzx, r3.xyzx
lt r0.x, l(0.000000), cb2[9].z
if_nz r0.x
  dp3 r0.x, r5.xyzx, r5.xyzx
  rsq r1.z, r0.x
  mul r3.xyz, r1.zzzz, r5.xyzx
  sqrt r0.x, r0.x
  lt r1.z, l(0.000000), cb2[13].w
  if_nz r1.z
    mad r1.zw, r0.xxxx, cb2[15].xxxy, cb2[14].zzzw
    mul r1.zw, r1.zzzw, cb2[16].xxxy
    lt r2.w, l(0.010000), |r5.z|
    mul r4.xy, r5.zzzz, cb2[15].zwzz
    mul r4.zw, r4.xxxy, l(0.000000, 0.000000, -1.442695, -1.442695)
    exp r4.zw, r4.zzzw
    add r4.zw, -r4.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    div r4.xy, r4.zwzz, r4.xyxx
    mul r4.xy, r1.zwzz, r4.xyxx
    movc r1.zw, r2.wwww, r4.xxxy, r1.zzzw
    mul r4.xyz, r1.zzzz, cb2[12].xyzx
    exp r4.xyz, r4.xyzx
    mul r6.xyz, r1.wwww, cb2[12].xyzx
    exp r6.xyz, r6.xyzx
    add r6.xyz, -r4.xyzx, r6.xyzx
    mad r4.xyz, cb2[13].wwww, r6.xyzx, r4.xyzx
  else 
    mad r1.z, r0.x, cb2[15].x, cb2[14].z
    mul r1.z, r1.z, cb2[16].x
    lt r1.w, l(0.010000), |r5.z|
    mul r2.w, r5.z, cb2[15].z
    mul r3.w, r2.w, l(-1.442695)
    exp r3.w, r3.w
    add r3.w, -r3.w, l(1.000000)
    div r2.w, r3.w, r2.w
    mul r2.w, r1.z, r2.w
    movc r1.z, r1.w, r2.w, r1.z
    mul r6.xyz, r1.zzzz, cb2[12].xyzx
    exp r4.xyz, r6.xyzx
  endif 
  mad r4.xyz, r4.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r4.xyz, r4.xyzx, -cb2[9].zzzz
  dp3 r1.z, cb2[7].yzwy, -r3.xyzx
  mad r1.w, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r2.w, cb2[8].w, -r1.z, l(1.000000)
  mul r2.w, r2.w, r2.w
  mul r2.w, r2.w, l(12.566371)
  div r1.w, r1.w, r2.w
  add r0.x, r0.x, -cb2[10].w
  mul_sat r0.x, r0.x, cb2[11].w
  mul r0.x, r0.x, r1.w
  mov_sat r1.z, r1.z
  mad r1.z, r1.z, r1.z, l(1.000000)
  mad r1.z, r1.z, l(0.05968310), l(-1.000000)
  mad r1.z, cb2[8].z, r1.z, l(1.000000)
  mul r3.xyz, r0.xxxx, cb2[11].xyzx
  mad r3.xyz, r1.zzzz, cb2[10].xyzx, r3.xyzx
  mul r3.xyz, r3.xyzx, cb2[9].wwww
  add r6.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r3.xyz, r3.xyzx, r6.xyzx
  mad r3.xyz, r2.xyzx, r4.xyzx, r3.xyzx
else 
  mul r0.x, r5.z, cb2[6].x
  mad r1.z, cb2[6].x, r5.z, cb2[5].x
  lt r1.w, |r0.x|, l(0.000100)
  min r2.w, r1.z, l(64.000000)
  mul r2.w, r2.w, l(1.442695)
  exp r2.w, r2.w
  mov_sat r3.w, cb2[6].z
  lt r4.x, r1.z, l(0.000000)
  add r1.z, r1.z, l(1.000000)
  movc r1.z, r4.x, r2.w, r1.z
  add r1.z, r1.z, -cb2[6].z
  movc r0.x, r1.w, l(1.000000), r0.x
  div r0.x, r1.z, r0.x
  movc r0.x, r1.w, r3.w, r0.x
  mul r0.x, r0.x, cb2[5].z
  dp3 r1.z, r5.xyzx, r5.xyzx
  sqrt r1.w, r1.z
  mad r0.x, r0.x, r1.w, cb2[5].w
  exp r0.x, r0.x
  min r0.x, r0.x, l(1.000000)
  add r0.x, -r0.x, l(1.000000)
  rsq r1.z, r1.z
  mul r4.xyz, r1.zzzz, r5.xyzx
  dp3 r1.z, cb2[7].yzwy, r4.xyzx
  mad_sat r1.z, cb2[8].y, r1.z, cb2[8].x
  add r4.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r4.xyzw, r1.zzzz, r4.xyzw, cb2[4].xyzw
  mul r0.x, r0.x, r4.w
  add r4.xyz, -r2.xyzx, r4.xyzx
  mad r3.xyz, r0.xxxx, r4.xyzx, r2.xyzx
endif 
mul r2.xyz, r3.xyzx, cb1[85].yyyy
ge r3.xyz, r2.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r2.xyz, r2.xyzx, r3.xyzx
min r2.xyz, r2.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
ilt r0.x, l(0), cb2[55].w
and r3.xyzw, cb2[55].wwww, l(32, 3, 64, 12)
ine r1.zw, r3.xxxz, l(0, 0, 0, 0)
ieq r3.xy, r3.ywyy, l(3, 8, 0, 0)
and r1.zw, r1.zzzw, r3.xxxy
and r3.xy, r1.zwzz, l(0x3e4ccccd, 0x3e4ccccd, 0, 0)
and r1.z, cb2[55].w, l(16)
ine r1.w, r1.z, l(0)
ieq r1.z, r1.z, l(0)
and r1.z, r1.z, r1.w
and r3.z, r1.z, l(0x3e4ccccd)
mad r3.xyz, r3.xyzx, cb1[85].xxxx, -r2.xyzx
mad r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r2.xyzx
movc r2.xyz, r0.xxxx, r3.xyzx, r2.xyzx
if_nz cb2[52].y
  if_nz cb2[53].y
    switch cb2[53].y
      case l(1)
      and r0.x, r7.w, l(7)
      break 
      case l(2)
      ubfe r0.x, l(3), l(8), r7.w
      break 
      case l(3)
      ushr r0.x, r7.w, l(16)
      break 
      case l(4)
      and r0.x, r0.y, l(3)
      break 
      case l(5)
      ushr r0.x, r0.y, l(8)
      break 
      default 
      mov r0.x, l(0)
      break 
    endswitch 
    utof r0.x, r0.x
    mul r0.x, r0.x, cb2[53].z
    mad r3.xyz, r0.xxxx, l(0.500000, 0.500000, 0.500000, 0.000000), -r2.xyzx
    mad r2.xyz, cb2[53].wwww, r3.xyzx, r2.xyzx
  endif 
endif 
store_uav_typed u0.xyzw, r1.xyyy, r2.xyzx
if_nz r6.w
  add r1.xyz, r5.xyzx, cb1[24].xyzx
  and r1.w, r7.w, l(7)
  store_structured u2.xyzw, cb2[52].x, l(92), r1.xyzw
  and r0.x, r0.y, l(3)
  store_structured u2.x, cb2[52].x, l(108), r0.x
endif 
if_nz cb2[52].y
  and r0.x, r7.w, l(7)
  atomic_iadd g1, l(0), r0.x
  ubfe r1.x, l(3), l(8), r7.w
  atomic_iadd g1, l(4), r1.x
  ushr r1.y, r7.w, l(16)
  atomic_iadd g1, l(8), r1.y
  and r1.z, r0.y, l(3)
  atomic_iadd g1, l(12), r1.z
  ushr r0.y, r0.y, l(8)
  atomic_iadd g1, l(16), r0.y
  atomic_umax g2, l(0), r0.x
  atomic_umax g2, l(4), r1.x
  atomic_umax g2, l(8), r1.y
  atomic_umax g2, l(12), r1.z
  atomic_umax g2, l(16), r0.y
  imm_atomic_iadd r1.x, g0, l(0), l(1)
  ieq r0.x, r1.x, l(63)
  if_nz r0.x
    ld_raw r1.xyzw, l(0), g1.xyzw
    mov r2.xz, cb2[52].xxxx
    mov r2.yw, l(0,40,0,44)
    atomic_iadd u2, r2.xyxx, r1.x
    atomic_iadd u2, r2.zwzz, r1.y
    mov r2.xz, cb2[52].xxxx
    mov r2.yw, l(0,48,0,52)
    atomic_iadd u2, r2.xyxx, r1.z
    atomic_iadd u2, r2.zwzz, r1.w
    ld_raw r0.x, l(16), g1.xxxx
    mov r1.xz, cb2[52].xxxx
    mov r1.yw, l(0,56,0,0)
    atomic_iadd u2, r1.xyxx, r0.x
    ld_raw r2.xyzw, l(0), g2.xyzw
    atomic_umax u2, r1.zwzz, r2.x
    mov r1.xz, cb2[52].xxxx
    mov r1.yw, l(0,4,0,8)
    atomic_umax u2, r1.xyxx, r2.y
    atomic_umax u2, r1.zwzz, r2.z
    mov r1.xz, cb2[52].xxxx
    mov r1.yw, l(0,12,0,16)
    atomic_umax u2, r1.xyxx, r2.w
    ld_raw r0.x, l(16), g2.xxxx
    atomic_umax u2, r1.zwzz, r0.x
    ieq r0.yz, r0.zzwz, cb2[52].zzwz
    and r0.y, r0.z, r0.y
    if_nz r0.y
      store_structured u2.xyzw, cb2[52].x, l(20), r2.xyzw
      store_structured u2.x, cb2[52].x, l(36), r0.x
    endif 
  endif 
endif 
ret 
// Approximately 2551 instruction slots used
