//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:23:37 2021
//
//
// Buffer Definitions: 
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16 [unused]
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4 [unused]
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4 [unused]
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4 [unused]
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4 [unused]
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// cbuffer LightingPackCBuffer
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } lightConstantsCB[273];           // Offset:    0 Size: 65520
//
// }
//
// Resource bind info for gPermutedTilingBuffer
// {
//
//   struct PermutedTilingBuffer
//   {
//       
//       uint2 data;                    // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:     8
//
// }
//
// Resource bind info for gDeferredCullBits
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samplerPointClamp                 sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// GBufferDiffuseColor               texture  float4          2d             t0      1 
// GBufferNormalAndGloss             texture  float4          2d             t1      1 
// GBufferSpecularColorAndOcclusion    texture  float4          2d             t2      1 
// GBufferDepth                      texture   float          2d             t4      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// gDownsampledScene                 texture  float4          2d            t21      1 
// gMotionVectors                    texture  float4          2d            t22      1 
// gPermutedTilingBuffer             texture  struct         r/o            t25      1 
// gDeferredCullBits                 texture  struct         r/o            t26      1 
// gSSAOTexture                      texture   float          2d            t27      1 
// gSSAODepthTexture                 texture   float          2d            t28      1 
// litBuffer                             UAV  float3          2d             u0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
// LightingPackCBuffer               cbuffer      NA          NA            cb9      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB1[86], immediateIndexed
dcl_constantbuffer CB2[59], immediateIndexed
dcl_constantbuffer CB9[4095], dynamicIndexed
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s4, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t25, 8
dcl_resource_structured t26, 4
dcl_resource_texture2d (float,float,float,float) t27
dcl_resource_texture2d (float,float,float,float) t28
dcl_uav_typed_texture2d (float,float,float,float) u0
dcl_input vThreadGroupID.x
dcl_input vThreadIDInGroup.xy
dcl_temps 38
dcl_thread_group 8, 8, 1
imad r0.x, cb2[57].x, l(52), vThreadGroupID.x
ld_structured_indexable(structured_buffer, stride=8)(mixed,mixed,mixed,mixed) r0.xy, r0.x, l(0), t25.xyxx
and r0.xy, r0.xyxx, l(4095, 4095, 0, 0)
imad r1.xy, r0.xyxx, l(8, 8, 0, 0), vThreadIDInGroup.xyxx
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.xyww, t1.xyzw
ftou r0.zw, cb1[44].xxxy
ult r0.zw, r1.xxxy, r0.zzzw
and r0.z, r0.w, r0.z
lt r0.w, l(0.000000), r2.z
and r0.z, r0.w, r0.z
if_z r0.z
  ret 
endif 
ge r0.w, r2.z, l(0.500000)
ld_indexable(texture2d)(float,float,float,float) r3.x, r1.xyww, t4.xyzw
ld_indexable(texture2d)(float,float,float,float) r3.yzw, r1.xyww, t0.wxyz
ld_indexable(texture2d)(float,float,float,float) r4.xyzw, r1.xyww, t2.xyzw
ld_aoffimmi_indexable(-1,0,0)(texture2d)(float,float,float,float) r5.xyz, r1.xyww, t2.xywz
ld_aoffimmi_indexable(0,-1,0)(texture2d)(float,float,float,float) r6.xyz, r1.xyww, t2.xywz
ld_aoffimmi_indexable(1,0,0)(texture2d)(float,float,float,float) r7.xyz, r1.xyww, t2.xywz
ld_aoffimmi_indexable(0,1,0)(texture2d)(float,float,float,float) r8.xyz, r1.xyzw, t2.xywz
utof r1.zw, r1.yyyx
add r9.xy, r1.wzww, l(0.500000, 0.500000, 0.000000, 0.000000)
ge r10.x, r3.x, l(0.984375)
mul r5.w, r3.x, l(1.01587307)
mad r3.x, r3.x, l(64.000000), l(-63.000000)
movc r3.x, r10.x, r3.x, r5.w
max r3.x, r3.x, l(0.00000001)
rcp r10.y, r3.x
and r9.zw, r0.zzzz, r10.xxxy
add r10.xy, r9.xyxx, -cb1[71].xyxx
mul r10.xy, r10.xyxx, cb1[44].zwzz
mad r10.xy, r10.xyxx, l(2.000000, -2.000000, 0.000000, 0.000000), l(-1.000000, 1.000000, 0.000000, 0.000000)
mul r11.x, r10.x, cb1[12].x
mul r11.y, r10.y, cb1[13].y
mov r11.z, l(1.000000)
mul r10.xyz, r9.wwww, r11.xyzx
mul r11.xyz, r10.yyyy, cb1[17].xyzx
mad r10.xyw, r10.xxxx, cb1[16].xyxz, r11.xyxz
mad r10.xyz, r10.zzzz, cb1[18].xyzx, r10.xywx
mad r0.z, r2.w, l(3.000000), l(0.500000)
ftou r0.z, r0.z
mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r2.xy, r2.xyxx, l(0.850000, 0.850000, 0.000000, 0.000000)
dp2 r2.w, r2.xyxx, r2.xyxx
add r11.zw, -r2.wwww, l(0.000000, 0.000000, 2.000000, 1.000000)
sqrt r2.w, r11.z
mul r11.xy, r2.wwww, r2.xyxx
and r12.xyzw, r0.zzzz, l(2, 1, 2, 1)
movc r12.xyzw, r12.zwxy, l(-1.000000,-1.000000,1,1), l(1.000000,1.000000,0,0)
xor r0.z, r12.w, r12.z
movc r12.z, r0.z, l(-1.000000), l(1.000000)
mul r2.xyw, r12.xyxz, l(-1.000000, 0.000000, 0.000000, 1.000000)
mul r13.xyz, r12.xyzx, l(1.000000, -2.000000, 1.000000, 0.000000)
mul r11.xyz, r11.xywx, l(0.40824831, 0.70710677, 0.57735026, 0.000000)
mul r2.xyw, r2.xyxw, r11.yyyy
mad r2.xyw, r13.xyxz, r11.xxxx, r2.xyxw
mad r11.xyz, r12.xyzx, r11.zzzz, r2.xywx
movc r0.z, r0.w, l(-0.500000), l(-0.00146628)
add r0.z, r0.z, r2.z
mul_sat r2.y, r0.z, l(2.00982332)
dp3 r0.z, -r10.xyzx, -r10.xyzx
rsq r0.z, r0.z
mul r12.xyz, r0.zzzz, -r10.xyzx
dp2 r0.z, r1.wzww, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r0.z, r0.z
mul r0.z, r0.z, l(52.982918)
frc r0.z, r0.z
mad r0.z, r0.z, l(6.28318548), cb1[70].w
sincos r13.x, r14.x, r0.z
dp2 r0.z, r1.zwzz, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r0.z, r0.z
mul r0.z, r0.z, l(52.982918)
frc r0.z, r0.z
mad r0.z, r0.z, l(6.28318548), cb1[70].w
sincos r3.x, r15.x, r0.z
dp3_sat r2.x, r11.xyzx, r12.xyzx
dp3 r0.z, -r12.xyzx, r11.xyzx
add r0.z, r0.z, r0.z
mad r16.xyz, r11.xyzx, -r0.zzzz, -r12.xyzx
mul r0.z, r2.y, l(17.000000)
exp r0.z, r0.z
add r0.z, r0.z, l(2.000000)
div r0.z, l(2.000000), r0.z
sqrt r0.w, r0.z
mul r1.zw, r9.xxxy, cb1[44].zzzw
sample_l_indexable(texture2d)(float,float,float,float) r1.z, r1.zwzz, t27.yzxw, s4, l(0.000000)
mul r1.w, r1.z, r4.z
lt r2.z, l(0.83333331), r2.y
lt r2.w, l(60.000000), r9.w
and r2.z, r2.w, r2.z
if_nz r2.z
  mul r15.yzw, r10.yyyy, cb1[9].xxyw
  mad r15.yzw, r10.xxxx, cb1[8].xxyw, r15.yyzw
  mad r15.yzw, r10.zzzz, cb1[10].xxyw, r15.yyzw
  add r15.yzw, r15.yyzw, cb1[11].xxyw
  mad r17.xyz, r16.xyzx, l(2000.000000, 2000.000000, 2000.000000, 0.000000), r10.xyzx
  mul r18.xyz, r17.yyyy, cb1[9].xywx
  mad r17.xyw, r17.xxxx, cb1[8].xyxw, r18.xyxz
  mad r17.xyz, r17.zzzz, cb1[10].xywx, r17.xywx
  add r17.xyz, r17.xyzx, cb1[11].xywx
  ge r2.z, r17.z, r15.w
  if_nz r2.z
    mul r2.zw, cb1[44].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
    rcp r18.z, r15.w
    mul r18.xy, r15.yzyy, r18.zzzz
    rcp r19.z, r17.z
    mul r19.xy, r17.xyxx, r19.zzzz
    lt r9.xy, l(1.000000, 1.000000, 0.000000, 0.000000), r19.xyxx
    mad r20.xyzw, r17.xxyy, r19.zzzz, l(-1.000000, 1.000000, -1.000000, 1.000000)
    mad r21.xyzw, r17.xxyy, r19.zzzz, -r18.xxyy
    lt r13.zw, r19.xxxy, l(0.000000, 0.000000, -1.000000, -1.000000)
    div r20.xyzw, r20.xyzw, r21.xyzw
    and r13.zw, r13.zzzw, r20.yyyw
    movc r9.xy, r9.xyxx, r20.xzxx, r13.zwzz
    max r5.w, r9.y, r9.x
    add r17.xyw, r18.xyxz, -r19.xyxz
    mad r17.xyw, r5.wwww, r17.xyxw, r19.xyxz
    mad r9.xy, r18.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    mad r13.zw, r17.xxxy, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
    add r9.xy, r9.xyxx, -r13.zwzz
    mul r9.xy, r2.zwzz, |r9.xyxx|
    max r5.w, r9.y, r9.x
    max r5.w, r5.w, l(1.000000)
    rcp r5.w, r5.w
    mad r18.xyz, r18.xyzx, l(0.500000, -0.500000, 1.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    mad r19.xyw, r17.xyxw, l(0.500000, -0.500000, 0.000000, 1.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    add r20.xyz, -r18.xyzx, r19.xywx
    mad r18.xyz, r5.wwww, r20.xyzx, r18.xyzx
    add r19.xyw, -r18.xyxz, r19.xyxw
    mul r20.xyz, r19.xywx, l(0.031250, 0.031250, 0.031250, 0.000000)
    mul r2.zw, r2.zzzw, |r20.xxxy|
    max r2.z, r2.w, r2.z
    log r2.z, r2.z
    round_pi r2.z, r2.z
    max r2.z, r2.z, l(0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r2.w, r18.xyxx, t28.yzwx, s1, r2.z
    mad r21.xyz, r19.xywx, l(0.031250, 0.031250, 0.031250, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r5.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r2.w, |r2.w|, |r5.w|
    mul r2.w, r21.z, r2.w
    lt r2.w, r2.w, l(1.000000)
    and r6.w, r2.w, l(1)
    mad r21.xyz, r19.xywx, l(0.062500, 0.062500, 0.062500, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r5.w, |r5.w|, |r7.w|
    mul r5.w, r21.z, r5.w
    lt r5.w, r5.w, l(1.000000)
    bfi r2.w, l(1), l(0), r2.w, l(2)
    movc r2.w, r5.w, r2.w, r6.w
    mad r21.xyz, r19.xywx, l(0.093750, 0.093750, 0.093750, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r5.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r6.w, |r7.w|, |r5.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r2.w, l(4)
    movc r2.w, r6.w, r7.w, r2.w
    mad r21.xyz, r19.xywx, l(0.125000, 0.125000, 0.125000, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r5.w, |r5.w|, |r6.w|
    mul r5.w, r21.z, r5.w
    lt r5.w, r5.w, l(1.000000)
    iadd r7.w, r2.w, l(8)
    movc r2.w, r5.w, r7.w, r2.w
    mad r21.xyz, r19.xywx, l(0.156250, 0.156250, 0.156250, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r5.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r6.w, |r6.w|, |r5.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r2.w, l(16)
    movc r2.w, r6.w, r7.w, r2.w
    mad r21.xyz, r19.xywx, l(0.187500, 0.187500, 0.187500, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r5.w, |r5.w|, |r6.w|
    mul r5.w, r21.z, r5.w
    lt r5.w, r5.w, l(1.000000)
    iadd r7.w, r2.w, l(32)
    movc r2.w, r5.w, r7.w, r2.w
    mad r21.xyz, r19.xywx, l(0.218750, 0.218750, 0.218750, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r5.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r6.w, |r6.w|, |r5.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r2.w, l(64)
    movc r2.w, r6.w, r7.w, r2.w
    mad r21.xyz, r19.xywx, l(0.250000, 0.250000, 0.250000, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r5.w, |r5.w|, |r6.w|
    mul r5.w, r21.z, r5.w
    lt r5.w, r5.w, l(1.000000)
    iadd r7.w, r2.w, l(128)
    movc r2.w, r5.w, r7.w, r2.w
    mad r21.xyz, r19.xywx, l(0.281250, 0.281250, 0.281250, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r5.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r6.w, |r6.w|, |r5.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r2.w, l(256)
    movc r2.w, r6.w, r7.w, r2.w
    mad r21.xyz, r19.xywx, l(0.312500, 0.312500, 0.312500, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r5.w, |r5.w|, |r6.w|
    mul r5.w, r21.z, r5.w
    lt r5.w, r5.w, l(1.000000)
    iadd r7.w, r2.w, l(512)
    movc r2.w, r5.w, r7.w, r2.w
    mad r21.xyz, r19.xywx, l(0.343750, 0.343750, 0.343750, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r5.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r6.w, |r6.w|, |r5.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r2.w, l(1024)
    movc r2.w, r6.w, r7.w, r2.w
    mad r21.xyz, r19.xywx, l(0.375000, 0.375000, 0.375000, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r5.w, |r5.w|, |r6.w|
    mul r5.w, r21.z, r5.w
    lt r5.w, r5.w, l(1.000000)
    iadd r7.w, r2.w, l(2048)
    movc r2.w, r5.w, r7.w, r2.w
    mad r21.xyz, r19.xywx, l(0.406250, 0.406250, 0.406250, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r5.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r6.w, |r6.w|, |r5.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r2.w, l(4096)
    movc r2.w, r6.w, r7.w, r2.w
    mad r21.xyz, r19.xywx, l(0.437500, 0.437500, 0.437500, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r5.w, |r5.w|, |r6.w|
    mul r5.w, r21.z, r5.w
    lt r5.w, r5.w, l(1.000000)
    iadd r7.w, r2.w, l(8192)
    movc r2.w, r5.w, r7.w, r2.w
    mad r21.xyz, r19.xywx, l(0.468750, 0.468750, 0.468750, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r5.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r6.w, |r6.w|, |r5.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r2.w, l(0x00004000)
    movc r2.w, r6.w, r7.w, r2.w
    mad r21.xyz, r19.xywx, l(0.500000, 0.500000, 0.500000, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r5.w, |r5.w|, |r6.w|
    mul r5.w, r21.z, r5.w
    lt r5.w, r5.w, l(1.000000)
    iadd r7.w, r2.w, l(0x00008000)
    movc r2.w, r5.w, r7.w, r2.w
    mad r21.xyz, r19.xywx, l(0.531250, 0.531250, 0.531250, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r5.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r6.w, |r6.w|, |r5.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r2.w, l(0x00010000)
    movc r2.w, r6.w, r7.w, r2.w
    mad r21.xyz, r19.xywx, l(0.562500, 0.562500, 0.562500, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r5.w, |r5.w|, |r6.w|
    mul r5.w, r21.z, r5.w
    lt r5.w, r5.w, l(1.000000)
    iadd r7.w, r2.w, l(0x00020000)
    movc r2.w, r5.w, r7.w, r2.w
    mad r21.xyz, r19.xywx, l(0.593750, 0.593750, 0.593750, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r5.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r6.w, |r6.w|, |r5.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r2.w, l(0x00040000)
    movc r2.w, r6.w, r7.w, r2.w
    mad r21.xyz, r19.xywx, l(0.625000, 0.625000, 0.625000, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r5.w, |r5.w|, |r6.w|
    mul r5.w, r21.z, r5.w
    lt r5.w, r5.w, l(1.000000)
    iadd r7.w, r2.w, l(0x00080000)
    movc r2.w, r5.w, r7.w, r2.w
    mad r21.xyz, r19.xywx, l(0.656250, 0.656250, 0.656250, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r5.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r6.w, |r6.w|, |r5.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r2.w, l(0x00100000)
    movc r2.w, r6.w, r7.w, r2.w
    mad r21.xyz, r19.xywx, l(0.687500, 0.687500, 0.687500, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r5.w, |r5.w|, |r6.w|
    mul r5.w, r21.z, r5.w
    lt r5.w, r5.w, l(1.000000)
    iadd r7.w, r2.w, l(0x00200000)
    movc r2.w, r5.w, r7.w, r2.w
    mad r21.xyz, r19.xywx, l(0.718750, 0.718750, 0.718750, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r5.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r6.w, |r6.w|, |r5.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r2.w, l(0x00400000)
    movc r2.w, r6.w, r7.w, r2.w
    mad r21.xyz, r19.xywx, l(0.750000, 0.750000, 0.750000, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r5.w, |r5.w|, |r6.w|
    mul r5.w, r21.z, r5.w
    lt r5.w, r5.w, l(1.000000)
    iadd r7.w, r2.w, l(0x00800000)
    movc r2.w, r5.w, r7.w, r2.w
    mad r21.xyz, r19.xywx, l(0.781250, 0.781250, 0.781250, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r5.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r6.w, |r6.w|, |r5.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r2.w, l(0x01000000)
    movc r2.w, r6.w, r7.w, r2.w
    mad r21.xyz, r19.xywx, l(0.812500, 0.812500, 0.812500, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r5.w, |r5.w|, |r6.w|
    mul r5.w, r21.z, r5.w
    lt r5.w, r5.w, l(1.000000)
    iadd r7.w, r2.w, l(0x02000000)
    movc r2.w, r5.w, r7.w, r2.w
    mad r21.xyz, r19.xywx, l(0.843750, 0.843750, 0.843750, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r5.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r6.w, |r6.w|, |r5.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r2.w, l(0x04000000)
    movc r2.w, r6.w, r7.w, r2.w
    mad r21.xyz, r19.xywx, l(0.875000, 0.875000, 0.875000, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r5.w, |r5.w|, |r6.w|
    mul r5.w, r21.z, r5.w
    lt r5.w, r5.w, l(1.000000)
    iadd r7.w, r2.w, l(0x08000000)
    movc r2.w, r5.w, r7.w, r2.w
    mad r21.xyz, r19.xywx, l(0.906250, 0.906250, 0.906250, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r5.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r6.w, |r6.w|, |r5.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r2.w, l(0x10000000)
    movc r2.w, r6.w, r7.w, r2.w
    mad r21.xyz, r19.xywx, l(0.937500, 0.937500, 0.937500, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r5.w, |r5.w|, |r6.w|
    mul r5.w, r21.z, r5.w
    lt r5.w, r5.w, l(1.000000)
    iadd r7.w, r2.w, l(0x20000000)
    movc r2.w, r5.w, r7.w, r2.w
    mad r21.xyz, r19.xywx, l(0.968750, 0.968750, 0.968750, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r5.w, r21.xyxx, t28.yzwx, s1, r2.z
    min r6.w, |r6.w|, |r5.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r2.w, l(0x40000000)
    movc r2.w, r6.w, r7.w, r2.w
    sample_l_indexable(texture2d)(float,float,float,float) r2.z, r13.zwzz, t28.yzxw, s1, r2.z
    min r2.z, |r5.w|, |r2.z|
    mul r2.z, r17.w, r2.z
    lt r2.z, r2.z, l(1.000000)
    iadd r5.w, r2.w, l(0x80000000)
    movc r2.z, r2.z, r5.w, r2.w
    mov r21.w, l(-1)
    mov r22.z, l(-1)
    mov r9.xy, l(0,0,0,0)
    mov r2.w, l(0)
    mov r5.w, r2.z
    mov r6.w, r19.z
    mov r23.yz, l(0,0,0,0)
    mov r21.z, l(0)
    mov r7.w, l(0)
    loop 
      breakc_z r5.w
      firstbit_lo r21.y, r5.w
      ishl r8.w, l(1), r21.y
      xor r21.x, r5.w, r8.w
      utof r12.w, r21.y
      mul r12.w, r12.w, l(0.031250)
      mad r17.xyw, r19.xyxw, r12.wwww, r18.xyxz
      sample_l_indexable(texture2d)(float,float,float,float) r12.w, r17.xyxx, t28.yzwx, s1, l(0.000000)
      mul r13.z, r17.w, |r12.w|
      lt r13.z, r13.z, l(1.000000)
      if_nz r13.z
        if_nz r21.z
          lt r13.z, r15.w, |r12.w|
          lt r13.w, r6.w, r17.w
          and r13.z, r13.w, r13.z
          movc r15.yz, r13.zzzz, r17.xxyx, r9.xxyx
          mov r21.z, r17.w
          mov r23.x, r6.w
          movc r24.xyz, r13.zzzz, r21.zxyz, r23.xyzx
          mov r5.w, r21.x
          mov r21.z, l(-1)
          mov r9.xy, r15.yzyy
          mov r6.w, r24.x
          mov r23.yz, r24.yyzy
          continue 
        endif 
        mov r13.z, r23.y
        mov r13.w, l(0)
      else 
        not r8.w, r8.w
        and r13.z, r8.w, r23.y
        mov r13.w, r21.z
      endif 
      if_nz r7.w
        mov r5.w, r21.x
        mov r23.y, r13.z
        mov r21.z, r13.w
        mov r7.w, l(-1)
        continue 
      endif 
      mov r15.yz, r9.xxyx
      mov r8.w, r2.w
      mov r14.w, r6.w
      mov r23.y, r13.z
      mov r23.x, r23.z
      mov r21.z, r13.w
      mov r22.w, r7.w
      mov r18.w, r17.w
      mov r20.w, |r12.w|
      mov r23.w, l(0)
      loop 
        ige r24.x, r23.w, l(4)
        breakc_nz r24.x
        itof r24.x, r23.w
        add r24.x, r24.x, l(1.000000)
        mul r24.x, r24.x, l(0.250000)
        mad r24.xyz, r20.xyzx, r24.xxxx, r17.xywx
        sample_l_indexable(texture2d)(float,float,float,float) r24.w, r24.xyxx, t28.yzwx, s1, l(0.000000)
        mul r25.x, r24.z, |r24.w|
        lt r25.x, r25.x, l(1.000000)
        if_nz r25.x
          lt r25.x, r15.w, |r24.w|
          add r25.y, -r18.w, r24.z
          add r25.z, -r20.w, |r24.w|
          mul r25.w, r18.w, r24.z
          mul r25.z, r25.w, |r25.z|
          lt r25.y, r25.z, |r25.y|
          and r25.z, r25.y, r25.x
          lt r25.w, r14.w, r24.z
          and r26.x, r25.w, r25.x
          movc r22.xy, r26.xxxx, r21.xyxx, r23.yxyy
          or r25.y, r25.y, r25.w
          and r25.x, r25.x, r25.y
          movc r24.xy, r25.xxxx, r24.xyxx, r15.yzyy
          movc r25.y, r25.z, l(1.000000), r8.w
          movc r25.x, r25.x, r24.z, r14.w
          movc r26.xyzw, r25.zzzz, r21.xyzw, r22.xyzw
          mov r8.w, r25.y
          mov r15.yz, r24.xxyx
          mov r14.w, r25.x
          mov r23.xy, r26.yxyy
          mov r21.z, r26.z
          mov r22.w, r26.w
          break 
        endif 
        mov r18.w, r24.z
        mov r20.w, |r24.w|
        iadd r23.w, r23.w, l(1)
      endloop 
      mov r9.xy, r15.yzyy
      mov r2.w, r8.w
      mov r6.w, r14.w
      mov r23.yz, r23.yyxy
      mov r7.w, r22.w
      mov r5.w, r21.x
    endloop 
    rcp r2.z, r6.w
    add r2.z, -r15.w, r2.z
    add r5.w, -r15.w, r17.z
    div r2.z, |r2.z|, |r5.w|
    min r17.x, r2.z, l(1.000000)
    countbits r2.z, r23.y
    utof r2.z, r2.z
    add r2.z, r2.z, l(1.000000)
    iadd r5.w, -r23.z, l(32)
    utof r5.w, r5.w
    div r2.z, r2.z, r5.w
    min r17.y, r2.z, l(1.000000)
  else 
    mov r17.xy, l(1.000000,0,0,0)
    mov r2.w, l(0)
  endif 
  add r2.z, r2.y, l(-0.83333331)
  mul r2.z, r2.z, l(5.99999952)
  max r2.z, r2.z, l(0.000000)
  mad r5.w, r2.z, l(-2.000000), l(3.000000)
  mul r2.z, r2.z, r2.z
  mul r2.z, r2.z, r5.w
  add r5.w, r9.w, l(-60.000000)
  mul_sat r5.w, r5.w, l(0.01666667)
  mad r6.w, r5.w, l(-2.000000), l(3.000000)
  mul r5.w, r5.w, r5.w
  mul r5.w, r5.w, r6.w
  mul r2.z, r2.z, r5.w
  mul r2.z, r17.y, r2.z
  mad r13.zw, r9.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
  add r13.zw, |r13.zzzw|, l(0.000000, 0.000000, -0.500000, -0.500000)
  add_sat r13.zw, r13.zzzw, r13.zzzw
  mad r15.yz, r13.zzwz, l(0.000000, -2.000000, -2.000000, 0.000000), l(0.000000, 3.000000, 3.000000, 0.000000)
  mul r13.zw, r13.zzzw, r13.zzzw
  mad r13.zw, -r15.yyyz, r13.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  mul r5.w, r13.w, r13.z
  mul r2.z, r2.z, r5.w
  mul r5.w, r17.x, l(10.000000)
  min r5.w, r5.w, l(1.000000)
  add r6.w, -r2.w, l(1.000000)
  mul r6.w, r2.z, r6.w
  add r5.w, r5.w, l(-1.000000)
  mad r5.w, r6.w, r5.w, l(1.000000)
  mul r2.z, r2.w, r2.z
  lt r2.w, l(0.000000), r2.z
  if_nz r2.w
    sample_l_indexable(texture2d)(float,float,float,float) r13.zw, r9.xyxx, t22.zwxy, s4, l(0.000000)
    add r15.yz, |r13.zzwz|, l(0.000000, -0.500000, -0.500000, 0.000000)
    add_sat r15.yz, r15.yyzy, r15.yyzy
    add r17.xy, |r13.zwzz|, |r13.zwzz|
    min r17.xy, r17.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    mul r17.xy, r17.xyxx, l(10.000000, 10.000000, 0.000000, 0.000000)
    mad r15.yz, r15.yyzy, l(0.000000, 30.000000, 30.000000, 0.000000), r17.xxyx
    ge r13.zw, r13.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
    movc r13.zw, r13.zzzw, r15.yyyz, -r15.yyyz
    mad r9.xy, -r13.zwzz, cb1[44].zwzz, r9.xyxx
    sample_l_indexable(texture2d)(float,float,float,float) r9.xyw, r9.xyxx, t21.xywz, s4, l(0.000000)
    mul r9.xyw, r9.xyxw, cb1[85].xxxx
    mul r9.xyw, r2.zzzz, r9.xyxw
  else 
    mov r9.xyw, l(0,0,0,0)
    mov r2.z, l(0)
  endif 
else 
  mov r9.xyw, l(0,0,0,0)
  mov r5.w, l(1.000000)
  mov r2.z, l(0)
endif 
add r2.w, -r2.y, l(1.000000)
mul r2.w, r2.w, l(5.000000)
add r15.yzw, r10.xxyz, -cb2[35].xxyz
mul r17.x, r15.y, cb2[35].w
mul r17.yz, r15.zzwz, cb2[36].xxyx
add_sat r15.yzw, r17.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
mul r17.xy, r15.yzyy, cb2[36].zwzz
mul r17.z, r15.w, cb2[37].x
add r15.yzw, r17.xxyz, cb2[37].yyzw
lt r17.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
movc r17.xyz, r17.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
mov r17.w, l(0)
add r18.xyz, r15.yzwy, r17.wwxw
sample_l_indexable(texture3d)(float,float,float,float) r18.xyz, r18.xyzx, t17.xyzw, s4, l(0.000000)
mul r19.xyz, r11.xyzx, r11.xyzx
mul r19.xyz, r19.xyzx, cb2[19].xxxx
add r20.xyz, r15.yzwy, r17.wwyw
sample_l_indexable(texture3d)(float,float,float,float) r20.xyz, r20.xyzx, t18.xyzw, s4, l(0.000000)
mul r20.xyz, r19.yyyy, r20.xyzx
mad r18.xyz, r18.xyzx, r19.xxxx, r20.xyzx
add r15.yzw, r15.yyzw, r17.wwwz
sample_l_indexable(texture3d)(float,float,float,float) r15.yzw, r15.yzwy, t19.wxyz, s4, l(0.000000)
mad r15.yzw, r15.yyzw, r19.zzzz, r18.xxyz
mov r11.w, l(0)
sample_l_indexable(texturecubearray)(float,float,float,float) r17.xyz, r11.xyzw, t8.xyzw, s2, l(6.000000)
mul r15.yzw, r15.yyzw, r17.xxyz
dp3 r6.w, r15.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
mov r16.w, l(0)
sample_l_indexable(texturecubearray)(float,float,float,float) r17.xyz, r16.xyzw, t8.xyzw, s2, r2.w
add r2.w, -r6.w, cb2[19].x
mad r2.w, r2.y, r2.w, r6.w
mul r17.xyz, r2.wwww, r17.xyzx
add r2.z, -r2.z, l(1.000000)
mad r9.xyw, r17.xyxz, r2.zzzz, r9.xyxw
mad r2.z, r4.z, r1.z, r2.x
log r2.z, |r2.z|
mul r2.z, r0.w, r2.z
exp r2.z, r2.z
mad r1.z, r4.z, r1.z, r2.z
add_sat r1.z, r1.z, l(-1.000000)
mul r1.z, r5.w, r1.z
mul r15.yzw, r1.wwww, r15.yyzw
mad r2.yz, r2.xxyx, l(0.000000, 0.984375, 0.984375, 0.000000), l(0.000000, 0.00781250, 0.00781250, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r2.yz, r2.yzyy, t5.zxyw, s2, l(0.000000)
mul r9.xyw, r1.zzzz, r9.xyxw
mul r17.xyz, r2.yyyy, r9.xywx
mul r2.yzw, r2.zzzz, r9.xxyw
sqrt r1.z, r0.w
mad r1.z, r1.z, l(0.500000), l(0.500000)
mul r1.z, r1.z, r1.z
mul r1.w, r1.z, l(0.500000)
mad r1.z, -r1.z, l(0.500000), l(1.000000)
mad r4.z, r2.x, r1.z, r1.w
mul r1.zw, r1.zzzw, r4.zzzz
ftou r4.z, cb1[44].x
iadd r4.z, r4.z, l(7)
ushr r4.z, r4.z, l(3)
imad r0.x, r0.y, r4.z, r0.x
ishl r0.x, r0.x, l(5)
not r0.y, r9.z
mov r18.x, -r13.x
mad r2.x, -r2.x, l(0.500000), l(1.000000)
mov r10.w, l(1.000000)
mov r19.z, l(1.000000)
mov r20.w, l(1.000000)
mov r21.w, l(1.000000)
mov r22.w, l(1.000000)
mov r18.z, r13.x
mov r23.w, l(1.000000)
mov r18.yw, r14.xxxx
mov r13.y, r18.w
mov r14.y, r18.x
mov r14.z, r13.x
mov r24.x, r14.x
mov r24.y, r18.x
mov r24.z, r13.x
mov r25.w, l(1.000000)
mov r26.x, r14.x
mov r26.y, r18.x
mov r26.z, r13.x
mov r27.x, r14.x
mov r27.y, r18.x
mov r27.z, r13.x
mov r9.xyw, r15.yzyw
mov r28.xyz, r17.xyzx
mov r29.xyz, r2.yzwy
mov r4.z, cb2[58].y
mov r5.w, l(0)
loop 
  uge r6.w, r5.w, cb2[0].x
  breakc_nz r6.w
  ushr r6.w, r5.w, l(5)
  iadd r6.w, r0.x, r6.w
  ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r6.w, r6.w, l(0), t26.xxxx
  mov r30.xyz, r9.xywx
  mov r31.xyz, r28.xyzx
  mov r32.xyz, r29.xyzx
  mov r7.w, r4.z
  mov r8.w, r6.w
  loop 
    breakc_z r8.w
    firstbit_lo r11.w, r8.w
    ishl r12.w, l(1), r11.w
    not r12.w, r12.w
    and r8.w, r8.w, r12.w
    iadd r11.w, r5.w, r11.w
    imul null, r11.w, r11.w, l(15)
    ubfe r12.w, l(3), l(24), cb9[r11.w + 1].w
    ieq r13.z, r12.w, l(2)
    if_nz r13.z
      ubfe r13.z, l(3), l(27), cb9[r11.w + 1].w
      add r33.xy, -r10.xyxx, cb9[r11.w + 3].zwzz
      add r33.z, -r10.z, cb9[r11.w + 4].x
      dp3 r13.w, r33.xyzx, r33.xyzx
      rsq r13.w, r13.w
      mul r34.xyz, r13.wwww, r33.xyzx
      mul r14.w, r0.z, cb9[r11.w + 1].z
      mul r14.w, r14.w, l(0.250000)
      dp3 r16.w, r11.xyzx, r34.xyzx
      mov_sat r17.w, r16.w
      lt r19.w, l(0.000000), r17.w
      if_nz r19.w
        mov r34.xyz, cb9[r11.w + 7].yzwy
        mov r34.w, cb9[r11.w + 8].x
        dp4 r19.w, r34.xyzw, r10.xyzw
        lt r24.w, r19.w, l(1.000000)
        if_nz r24.w
          mov r35.xyz, l(1.000000,1.000000,1.000000,0)
          mov r24.w, l(0)
        else 
          add r36.xyz, -r10.xyzx, cb9[r11.w + 0].xyzx
          mul r26.w, cb9[r11.w + 3].x, cb9[r11.w + 3].x
          dp3 r27.w, r36.xyzx, r36.xyzx
          div r26.w, r26.w, r27.w
          min r26.w, r26.w, l(1.000000)
          mad_sat r36.xy, r19.wwww, cb9[r11.w + 2].xzxx, cb9[r11.w + 2].ywyy
          mul r36.zw, r36.xxxy, r36.xxxy
          mad r36.xy, r36.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
          mul r36.xy, r36.xyxx, r36.zwzz
          mul r26.w, r26.w, r36.x
          mul r26.w, r36.y, r26.w
          mov r36.xyz, cb9[r11.w + 4].yzwy
          mov r36.w, cb9[r11.w + 5].x
          dp4 r36.x, r36.xyzw, r10.xyzw
          mov r37.xyz, cb9[r11.w + 5].yzwy
          mov r37.w, cb9[r11.w + 6].x
          dp4 r36.y, r37.xyzw, r10.xyzw
          div r19.xy, r36.xyxx, r19.wwww
          lt r19.w, cb9[r11.w + 10].w, l(0.00048828)
          if_nz r19.w
            mad_sat r36.xy, |r19.xyxx|, cb9[r11.w + 12].xyxx, cb9[r11.w + 12].zwzz
            mul r36.zw, r36.xxxy, r36.xxxy
            mad r36.xy, r36.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
            mul r36.xy, r36.xyxx, r36.zwzz
            mul r19.w, r36.y, r36.x
          else 
            mul_sat r36.xyzw, |r19.yyxx|, cb9[r11.w + 11].xyzw
            log r36.xyzw, r36.xyzw
            mul r36.xyzw, r36.xyzw, cb9[r11.w + 12].zzzz
            exp r36.xyzw, r36.xyzw
            add r36.xy, r36.zwzz, r36.xyxx
            log r36.xy, r36.xyxx
            mul r36.xy, r36.xyxx, cb9[r11.w + 12].wwww
            exp r36.xy, r36.xyxx
            mul r27.w, r36.x, cb9[r11.w + 12].x
            mad r28.w, cb9[r11.w + 12].y, r36.y, l(-1.000000)
            mad r27.w, cb9[r11.w + 12].y, r36.y, -r27.w
            div_sat r27.w, r28.w, r27.w
            mul r28.w, r27.w, r27.w
            mad r27.w, r27.w, l(-2.000000), l(3.000000)
            mul r19.w, r27.w, r28.w
          endif 
          mul r24.w, r19.w, r26.w
          and r19.w, l(255), cb9[r11.w + 14].w
          if_nz r19.w
            dp3 r26.w, cb9[r11.w + 13].xyzx, r19.xyzx
            mov r36.x, cb9[r11.w + 13].w
            mov r36.yz, cb9[r11.w + 14].xxyx
            dp3 r19.x, r36.xyzx, r19.xyzx
            frc r36.x, r26.w
            frc r36.y, r19.x
            iadd r19.x, r19.w, l(-1)
            utof r36.z, r19.x
            sample_l_indexable(texture2darray)(float,float,float,float) r35.xyz, r36.xyzx, t20.xyzw, s2, l(0.000000)
          else 
            mov r35.xyz, l(1.000000,1.000000,1.000000,0)
          endif 
        endif 
        mov r36.x, cb9[r11.w + 0].w
        mov r36.yz, cb9[r11.w + 1].xxyx
        mul r19.xyw, r35.xyxz, r36.xyxz
        lt r26.w, l(0.000000), r24.w
        if_nz r26.w
          ine r13.z, r13.z, l(1)
          if_nz r13.z
            mad r13.z, |r16.w|, l(-0.200000), l(0.400000)
            mad r20.xyz, r11.xyzx, r13.zzzz, r10.xyzx
            mov r35.xyz, cb9[r11.w + 6].yzwy
            mov r35.w, cb9[r11.w + 7].x
            dp4 r13.z, r35.xyzw, r20.xyzw
            dp4 r26.w, r34.xyzw, r20.xyzw
            ge r27.w, r26.w, r13.z
            if_nz r27.w
              mov r34.xyz, cb9[r11.w + 4].yzwy
              mov r34.w, cb9[r11.w + 5].x
              dp4 r34.x, r34.xyzw, r20.xyzw
              mov r35.xyz, cb9[r11.w + 5].yzwy
              mov r35.w, cb9[r11.w + 6].x
              dp4 r34.y, r35.xyzw, r20.xyzw
              div r20.xy, r34.xyxx, r26.wwww
              mad_sat r20.xy, r20.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
              mad r34.x, r20.x, cb9[r11.w + 8].y, cb9[r11.w + 8].z
              mad r34.y, r20.y, cb9[r11.w + 8].w, cb9[r11.w + 9].x
              div r13.z, r13.z, r26.w
              max r13.z, r13.z, l(0.00006104)
              and r20.x, l(0x0000ffff), cb9[r11.w + 1].w
              if_nz r7.w
                utof r35.z, r20.x
                mov r20.yz, l(0,0,0,0)
                loop 
                  ige r26.w, r20.z, l(8)
                  breakc_nz r26.w
                  dp2 r36.x, icb[r20.z + 0].yxyy, r18.xyxx
                  dp2 r36.y, icb[r20.z + 0].yxyy, r18.yzyy
                  mad r35.xy, r36.xyxx, cb9[r11.w + 3].yyyy, r34.xyxx
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r26.w, r35.xyzx, t9.xxxx, s13, r13.z
                  mad r20.y, r26.w, l(0.125000), r20.y
                  iadd r20.z, r20.z, l(1)
                endloop 
              else 
                utof r34.z, r20.x
                sample_c_lz_indexable(texture2darray)(float,float,float,float) r20.y, r34.xyzx, t9.xxxx, s13, r13.z
              endif 
              mul r13.z, r20.y, r20.y
              mul r13.z, r20.y, r13.z
            else 
              mov r13.z, l(1.000000)
            endif 
          else 
            mov r13.z, l(1.000000)
          endif 
          mul r13.z, r13.z, r24.w
          lt r20.x, l(0.000000), r13.z
          if_nz r20.x
            ubfe r20.x, l(4), l(16), cb9[r11.w + 1].w
            ult r20.z, l(0), r20.x
            and r20.z, r9.z, r20.z
            if_nz r20.z
              iadd r20.x, r20.x, cb2[0].x
              imad r20.x, r20.x, l(15), l(-15)
              mad r20.z, |r16.w|, l(-0.200000), l(0.400000)
              mad r21.xyz, r11.xyzx, r20.zzzz, r10.xyzx
              mov r34.xyz, cb9[r20.x + 6].yzwy
              mov r34.w, cb9[r20.x + 7].x
              dp4 r20.z, r34.xyzw, r21.xyzw
              mov r34.xyz, cb9[r20.x + 7].yzwy
              mov r34.w, cb9[r20.x + 8].x
              dp4 r24.w, r34.xyzw, r21.xyzw
              lt r26.w, r24.w, r20.z
              if_z r26.w
                mov r34.xyz, cb9[r20.x + 4].yzwy
                mov r34.w, cb9[r20.x + 5].x
                dp4 r34.x, r34.xyzw, r21.xyzw
                mov r35.xyz, cb9[r20.x + 5].yzwy
                mov r35.w, cb9[r20.x + 6].x
                dp4 r34.y, r35.xyzw, r21.xyzw
                div r21.xy, r34.xyxx, r24.wwww
                mad r21.xy, r21.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                add r34.x, r21.x, cb9[r20.x + 9].w
                add r34.y, r21.y, cb9[r20.x + 10].x
                mul r21.xy, r34.xyxx, cb9[r20.x + 9].yzyy
                div r34.xy, cb9[r20.x + 3].yyyy, cb9[r20.x + 8].ywyy
                add r34.zw, -r34.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                ge r34.zw, r21.xxxy, r34.zzzw
                ge r34.xy, r34.xyxx, r21.xyxx
                or r34.xy, r34.xyxx, r34.zwzz
                or r21.z, r34.y, r34.x
                if_z r21.z
                  mov_sat r21.xy, r21.xyxx
                  mad r34.x, r21.x, cb9[r20.x + 8].y, cb9[r20.x + 8].z
                  mad r34.y, r21.y, cb9[r20.x + 8].w, cb9[r20.x + 9].x
                  mul r21.x, r24.w, cb9[r20.x + 10].z
                  mad r20.z, cb9[r20.x + 10].y, r24.w, r20.z
                  div r20.z, r20.z, r21.x
                endif 
              else 
                mov r21.z, l(-1)
              endif 
              or r21.x, r26.w, r21.z
              if_z r21.x
                max r20.z, r20.z, l(0.00006104)
                and r21.x, l(0x0000ffff), cb9[r20.x + 1].w
                if_nz r7.w
                  utof r35.z, r21.x
                  mov r21.yz, l(0,0,0,0)
                  loop 
                    ige r24.w, r21.z, l(8)
                    breakc_nz r24.w
                    dp2 r36.x, icb[r21.z + 0].yxyy, r18.xwxx
                    dp2 r36.y, icb[r21.z + 0].xyxx, r13.xyxx
                    mad r35.xy, r36.xyxx, cb9[r20.x + 3].yyyy, r34.xyxx
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.w, r35.xyzx, t9.xxxx, s13, r20.z
                    mad r21.y, r24.w, l(0.125000), r21.y
                    iadd r21.z, r21.z, l(1)
                  endloop 
                else 
                  utof r34.z, r21.x
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.y, r34.xyzx, t9.xxxx, s13, r20.z
                endif 
                mul r20.x, r21.y, r21.y
                mul r20.x, r21.y, r20.x
              else 
                mov r20.x, l(1.000000)
              endif 
              mul r13.z, r13.z, r20.x
            else 
              ubfe r20.x, l(4), l(20), cb9[r11.w + 1].w
              ult r20.z, l(0), r20.x
              and r20.z, r0.y, r20.z
              if_nz r20.z
                iadd r20.x, r20.x, cb2[0].x
                imad r20.x, r20.x, l(15), l(-15)
                mad r20.z, |r16.w|, l(-0.200000), l(0.400000)
                mad r22.xyz, r11.xyzx, r20.zzzz, r10.xyzx
                mov r34.xyz, cb9[r20.x + 6].yzwy
                mov r34.w, cb9[r20.x + 7].x
                dp4 r20.z, r34.xyzw, r22.xyzw
                mov r34.xyz, cb9[r20.x + 7].yzwy
                mov r34.w, cb9[r20.x + 8].x
                dp4 r21.x, r34.xyzw, r22.xyzw
                lt r21.z, r21.x, r20.z
                if_z r21.z
                  mov r34.xyz, cb9[r20.x + 4].yzwy
                  mov r34.w, cb9[r20.x + 5].x
                  dp4 r34.x, r34.xyzw, r22.xyzw
                  mov r35.xyz, cb9[r20.x + 5].yzwy
                  mov r35.w, cb9[r20.x + 6].x
                  dp4 r34.y, r35.xyzw, r22.xyzw
                  div r22.xy, r34.xyxx, r21.xxxx
                  mad r22.xy, r22.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r34.x, r22.x, cb9[r20.x + 9].w
                  add r34.y, r22.y, cb9[r20.x + 10].x
                  mul r22.xy, r34.xyxx, cb9[r20.x + 9].yzyy
                  div r34.xy, cb9[r20.x + 3].yyyy, cb9[r20.x + 8].ywyy
                  add r34.zw, -r34.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                  ge r34.zw, r22.xxxy, r34.zzzw
                  ge r34.xy, r34.xyxx, r22.xyxx
                  or r34.xy, r34.xyxx, r34.zwzz
                  or r22.z, r34.y, r34.x
                  if_z r22.z
                    mov_sat r22.xy, r22.xyxx
                    mad r34.x, r22.x, cb9[r20.x + 8].y, cb9[r20.x + 8].z
                    mad r34.y, r22.y, cb9[r20.x + 8].w, cb9[r20.x + 9].x
                    mul r22.x, r21.x, cb9[r20.x + 10].z
                    mad r20.z, cb9[r20.x + 10].y, r21.x, r20.z
                    div r20.z, r20.z, r22.x
                  endif 
                else 
                  mov r22.z, l(-1)
                endif 
                or r21.x, r21.z, r22.z
                if_z r21.x
                  max r20.z, r20.z, l(0.00006104)
                  and r21.x, l(0x0000ffff), cb9[r20.x + 1].w
                  if_nz r7.w
                    utof r22.z, r21.x
                    mov r21.z, l(0)
                    mov r24.w, l(0)
                    loop 
                      ige r26.w, r24.w, l(8)
                      breakc_nz r26.w
                      dp2 r35.x, icb[r24.w + 0].xyxx, r24.xyxx
                      dp2 r35.y, icb[r24.w + 0].yxyy, r24.xzxx
                      mad r22.xy, r35.xyxx, cb9[r20.x + 3].yyyy, r34.xyxx
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.x, r22.xyzx, t9.xxxx, s13, r20.z
                      mad r21.z, r22.x, l(0.125000), r21.z
                      iadd r24.w, r24.w, l(1)
                    endloop 
                  else 
                    utof r34.z, r21.x
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.z, r34.xyzx, t9.xxxx, s13, r20.z
                  endif 
                  mul r20.x, r21.z, r21.z
                  mul r20.x, r21.z, r20.x
                else 
                  mov r20.x, l(1.000000)
                endif 
                mul r13.z, r13.z, r20.x
              endif 
            endif 
            mad r20.x, -r17.w, r2.x, l(1.000000)
            mul r20.x, r20.x, r20.x
            mad r20.x, -r20.x, l(0.620000), l(0.620000)
            add r20.x, -r17.w, r20.x
            mad r20.x, r0.w, r20.x, r17.w
            mul r20.x, r13.z, r20.x
            lt r16.w, l(0.000000), r16.w
            mad r22.xyz, r20.xxxx, r19.xywx, r30.xyzx
            mad r33.xyz, r33.xyzx, r13.wwww, r12.xyzx
            dp3 r13.w, r33.xyzx, r33.xyzx
            rsq r13.w, r13.w
            mul r33.xyz, r13.wwww, r33.xyzx
            dp3 r13.w, r33.xyzx, r12.xyzx
            dp3 r20.x, r11.xyzx, r33.xyzx
            mad r20.z, |r20.x|, r0.z, -|r20.x|
            mad r20.x, |r20.x|, r20.z, l(1.000000)
            mad r20.z, r17.w, r1.z, r1.w
            mul r20.x, r20.x, r20.x
            mul r20.x, r20.z, r20.x
            rcp r20.x, r20.x
            mul r14.w, r14.w, r17.w
            mul r14.w, r14.w, r20.x
            mul r13.z, r13.z, r14.w
            mad r33.xyz, r13.zzzz, r19.xywx, r32.xyzx
            add_sat r13.w, -r13.w, l(1.000000)
            mul r14.w, r13.w, r13.w
            mul r14.w, r14.w, r14.w
            mul r13.w, r13.w, r14.w
            mul r13.z, r13.w, r13.z
            mad r19.xyw, r13.zzzz, r19.xyxw, r31.xyxz
            movc r30.xyz, r16.wwww, r22.xyzx, r30.xyzx
            movc r31.xyz, r16.wwww, r19.xywx, r31.xyzx
            movc r32.xyz, r16.wwww, r33.xyzx, r32.xyzx
          endif 
        endif 
      endif 
    else 
      ieq r12.w, r12.w, l(4)
      if_nz r12.w
        ubfe r12.w, l(3), l(27), cb9[r11.w + 1].w
        mul r13.z, r0.z, cb9[r11.w + 1].z
        mul r13.z, r13.z, l(0.250000)
        lt r13.w, l(0.000000), cb9[r11.w + 6].y
        mov r22.xy, cb9[r11.w + 5].zwzz
        mov r22.z, cb9[r11.w + 6].x
        mad r19.xyw, -r22.xyxz, l(0.500000, 0.500000, 0.000000, 0.500000), cb9[r11.w + 0].xyxz
        add r33.xyz, -r10.xyzx, r19.xywx
        dp3 r14.w, r22.xyzx, r16.xyzx
        dp3 r16.w, r22.xyzx, r33.xyzx
        dp3 r17.w, r16.xyzx, r33.xyzx
        mad r20.x, -r14.w, r14.w, cb9[r11.w + 6].y
        mad r14.w, r14.w, r17.w, -r16.w
        div_sat r16.w, -r16.w, cb9[r11.w + 6].y
        div_sat r14.w, r14.w, r20.x
        div r17.w, r20.x, cb9[r11.w + 6].y
        mul r17.w, r17.w, l(10.000000)
        min r17.w, r17.w, l(1.000000)
        add r14.w, -r16.w, r14.w
        mad r14.w, r17.w, r14.w, r16.w
        mad r33.xyz, r14.wwww, r22.xyzx, r19.xywx
        mad r19.xyw, r16.wwww, r22.xyxz, r19.xyxw
        movc r19.xyw, r13.wwww, r19.xyxw, cb9[r11.w + 0].xyxz
        movc r22.xyz, r13.wwww, r33.xyzx, cb9[r11.w + 0].xyzx
        add r22.xyz, -r10.xyzx, r22.xyzx
        add r19.xyw, -r10.xyxz, r19.xyxw
        dp3 r13.w, r22.xyzx, r22.xyzx
        rsq r13.w, r13.w
        mul r33.xyz, r13.wwww, r22.xyzx
        dp3 r14.w, r19.xywx, r19.xywx
        rsq r16.w, r14.w
        mul r19.xyw, r16.wwww, r19.xyxw
        dp3 r16.w, r11.xyzx, r19.xywx
        mov_sat r17.w, r16.w
        lt r19.x, l(0.000000), r17.w
        if_nz r19.x
          sqrt r19.x, r14.w
          mul r19.y, cb9[r11.w + 3].x, cb9[r11.w + 3].x
          div r14.w, r19.y, r14.w
          min r14.w, r14.w, l(1.000000)
          mad_sat r19.xy, r19.xxxx, cb9[r11.w + 2].xzxx, cb9[r11.w + 2].ywyy
          mul r20.xz, r19.xxyx, r19.xxyx
          mad r19.xy, r19.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
          mul r19.xy, r19.xyxx, r20.xzxx
          mul r14.w, r14.w, r19.x
          mul r14.w, r19.y, r14.w
          lt r19.x, l(0.000000), r14.w
          if_nz r19.x
            ine r12.w, r12.w, l(1)
            if_nz r12.w
              mad r12.w, |r16.w|, l(-0.200000), l(0.400000)
              mad r19.xyw, r11.xyxz, r12.wwww, r10.xyxz
              add r19.xyw, r19.xyxw, -cb9[r11.w + 4].yzyw
              max r12.w, |r19.w|, |r19.y|
              max r12.w, r12.w, |r19.x|
              div r12.w, cb9[r11.w + 5].x, r12.w
              add r12.w, r12.w, cb9[r11.w + 5].y
              dp3 r20.x, r19.xywx, r19.xywx
              rsq r20.x, r20.x
              max r12.w, r12.w, l(0.00006104)
              and r20.z, l(0x0000ffff), cb9[r11.w + 1].w
              utof r34.w, r20.z
              mov r20.z, l(0)
              mov r21.x, l(0)
              loop 
                ige r24.w, r21.x, l(8)
                breakc_nz r24.w
                dp2 r35.y, icb[r21.x + 0].xyxx, r14.xyxx
                dp2 r35.z, icb[r21.x + 0].yxyy, r14.xzxx
                mul r35.yz, r35.yyzy, cb9[r11.w + 3].yyyy
                mul r35.x, r15.x, r35.y
                mul r35.w, r3.x, r35.y
                mad r34.xyz, r19.xywx, r20.xxxx, r35.xzwx
                sample_c_lz_indexable(texturecubearray)(float,float,float,float) r24.w, r34.xyzw, t10.xxxx, s13, r12.w
                mad r20.z, r24.w, l(0.125000), r20.z
                iadd r21.x, r21.x, l(1)
              endloop 
            else 
              mov r20.z, l(1.000000)
            endif 
            mul r12.w, r14.w, r20.z
            lt r14.w, l(0.000000), r12.w
            if_nz r14.w
              ubfe r14.w, l(4), l(16), cb9[r11.w + 1].w
              ult r19.x, l(0), r14.w
              and r19.x, r9.z, r19.x
              if_nz r19.x
                iadd r14.w, r14.w, cb2[0].x
                imad r14.w, r14.w, l(15), l(-15)
                mad r19.x, |r16.w|, l(-0.200000), l(0.400000)
                mad r23.xyz, r11.xyzx, r19.xxxx, r10.xyzx
                mov r34.xyz, cb9[r14.w + 6].yzwy
                mov r34.w, cb9[r14.w + 7].x
                dp4 r19.x, r34.xyzw, r23.xyzw
                mov r34.xyz, cb9[r14.w + 7].yzwy
                mov r34.w, cb9[r14.w + 8].x
                dp4 r19.y, r34.xyzw, r23.xyzw
                lt r19.w, r19.y, r19.x
                if_z r19.w
                  mov r34.xyz, cb9[r14.w + 4].yzwy
                  mov r34.w, cb9[r14.w + 5].x
                  dp4 r34.x, r34.xyzw, r23.xyzw
                  mov r35.xyz, cb9[r14.w + 5].yzwy
                  mov r35.w, cb9[r14.w + 6].x
                  dp4 r34.y, r35.xyzw, r23.xyzw
                  div r23.xy, r34.xyxx, r19.yyyy
                  mad r23.xy, r23.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r34.x, r23.x, cb9[r14.w + 9].w
                  add r34.y, r23.y, cb9[r14.w + 10].x
                  mul r23.xy, r34.xyxx, cb9[r14.w + 9].yzyy
                  div r34.xy, cb9[r14.w + 3].yyyy, cb9[r14.w + 8].ywyy
                  add r34.zw, -r34.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                  ge r34.zw, r23.xxxy, r34.zzzw
                  ge r34.xy, r34.xyxx, r23.xyxx
                  or r34.xy, r34.xyxx, r34.zwzz
                  or r20.x, r34.y, r34.x
                  if_z r20.x
                    mov_sat r23.xy, r23.xyxx
                    mad r34.x, r23.x, cb9[r14.w + 8].y, cb9[r14.w + 8].z
                    mad r34.y, r23.y, cb9[r14.w + 8].w, cb9[r14.w + 9].x
                    mul r21.x, r19.y, cb9[r14.w + 10].z
                    mad r19.x, cb9[r14.w + 10].y, r19.y, r19.x
                    div r19.x, r19.x, r21.x
                  endif 
                else 
                  mov r20.x, l(-1)
                endif 
                or r19.y, r19.w, r20.x
                if_z r19.y
                  max r19.x, r19.x, l(0.00006104)
                  and r19.y, l(0x0000ffff), cb9[r14.w + 1].w
                  if_nz r7.w
                    utof r23.z, r19.y
                    mov r19.w, l(0)
                    mov r20.x, l(0)
                    loop 
                      ige r21.x, r20.x, l(8)
                      breakc_nz r21.x
                      dp2 r35.x, icb[r20.x + 0].xyxx, r26.xyxx
                      dp2 r35.y, icb[r20.x + 0].yxyy, r26.xzxx
                      mad r23.xy, r35.xyxx, cb9[r14.w + 3].yyyy, r34.xyxx
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.x, r23.xyzx, t9.xxxx, s13, r19.x
                      mad r19.w, r21.x, l(0.125000), r19.w
                      iadd r20.x, r20.x, l(1)
                    endloop 
                  else 
                    utof r34.z, r19.y
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.w, r34.xyzx, t9.xxxx, s13, r19.x
                  endif 
                  mul r14.w, r19.w, r19.w
                  mul r14.w, r19.w, r14.w
                else 
                  mov r14.w, l(1.000000)
                endif 
                mul r12.w, r12.w, r14.w
              else 
                ubfe r14.w, l(4), l(20), cb9[r11.w + 1].w
                ult r19.x, l(0), r14.w
                and r19.x, r0.y, r19.x
                if_nz r19.x
                  iadd r14.w, r14.w, cb2[0].x
                  imad r14.w, r14.w, l(15), l(-15)
                  mad r19.x, |r16.w|, l(-0.200000), l(0.400000)
                  mad r25.xyz, r11.xyzx, r19.xxxx, r10.xyzx
                  mov r34.xyz, cb9[r14.w + 6].yzwy
                  mov r34.w, cb9[r14.w + 7].x
                  dp4 r19.x, r34.xyzw, r25.xyzw
                  mov r34.xyz, cb9[r14.w + 7].yzwy
                  mov r34.w, cb9[r14.w + 8].x
                  dp4 r19.y, r34.xyzw, r25.xyzw
                  lt r20.x, r19.y, r19.x
                  if_z r20.x
                    mov r34.xyz, cb9[r14.w + 4].yzwy
                    mov r34.w, cb9[r14.w + 5].x
                    dp4 r23.x, r34.xyzw, r25.xyzw
                    mov r34.xyz, cb9[r14.w + 5].yzwy
                    mov r34.w, cb9[r14.w + 6].x
                    dp4 r23.y, r34.xyzw, r25.xyzw
                    div r23.xy, r23.xyxx, r19.yyyy
                    mad r23.xy, r23.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r25.x, r23.x, cb9[r14.w + 9].w
                    add r25.y, r23.y, cb9[r14.w + 10].x
                    mul r23.xy, r25.xyxx, cb9[r14.w + 9].yzyy
                    div r25.xy, cb9[r14.w + 3].yyyy, cb9[r14.w + 8].ywyy
                    add r34.xy, -r25.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                    ge r34.xy, r23.xyxx, r34.xyxx
                    ge r25.xy, r25.xyxx, r23.xyxx
                    or r25.xy, r25.xyxx, r34.xyxx
                    or r21.x, r25.y, r25.x
                    if_z r21.x
                      mov_sat r23.xy, r23.xyxx
                      mad r25.x, r23.x, cb9[r14.w + 8].y, cb9[r14.w + 8].z
                      mad r25.y, r23.y, cb9[r14.w + 8].w, cb9[r14.w + 9].x
                      mul r23.x, r19.y, cb9[r14.w + 10].z
                      mad r19.x, cb9[r14.w + 10].y, r19.y, r19.x
                      div r19.x, r19.x, r23.x
                    endif 
                  else 
                    mov r21.x, l(-1)
                  endif 
                  or r19.y, r20.x, r21.x
                  if_z r19.y
                    max r19.x, r19.x, l(0.00006104)
                    and r19.y, l(0x0000ffff), cb9[r14.w + 1].w
                    if_nz r7.w
                      utof r23.z, r19.y
                      mov r20.x, l(0)
                      mov r21.x, l(0)
                      loop 
                        ige r24.w, r21.x, l(8)
                        breakc_nz r24.w
                        dp2 r34.x, icb[r21.x + 0].xyxx, r27.xyxx
                        dp2 r34.y, icb[r21.x + 0].yxyy, r27.xzxx
                        mad r23.xy, r34.xyxx, cb9[r14.w + 3].yyyy, r25.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.x, r23.xyzx, t9.xxxx, s13, r19.x
                        mad r20.x, r23.x, l(0.125000), r20.x
                        iadd r21.x, r21.x, l(1)
                      endloop 
                    else 
                      utof r25.z, r19.y
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r20.x, r25.xyzx, t9.xxxx, s13, r19.x
                    endif 
                    mul r14.w, r20.x, r20.x
                    mul r14.w, r20.x, r14.w
                  else 
                    mov r14.w, l(1.000000)
                  endif 
                  mul r12.w, r12.w, r14.w
                endif 
              endif 
              mad r14.w, -r17.w, r2.x, l(1.000000)
              mul r14.w, r14.w, r14.w
              mad r14.w, -r14.w, l(0.620000), l(0.620000)
              add r14.w, -r17.w, r14.w
              mad r14.w, r0.w, r14.w, r17.w
              mul r14.w, r12.w, r14.w
              mov r23.x, cb9[r11.w + 0].w
              mov r23.yz, cb9[r11.w + 1].xxyx
              lt r11.w, l(0.000000), r16.w
              mad r25.xyz, r14.wwww, r23.xyzx, r30.xyzx
              dp3_sat r14.w, r11.xyzx, r33.xyzx
              mad r22.xyz, r22.xyzx, r13.wwww, r12.xyzx
              dp3 r13.w, r22.xyzx, r22.xyzx
              rsq r13.w, r13.w
              mul r22.xyz, r13.wwww, r22.xyzx
              dp3 r13.w, r22.xyzx, r12.xyzx
              dp3 r16.w, r11.xyzx, r22.xyzx
              mad r17.w, |r16.w|, r0.z, -|r16.w|
              mad r16.w, |r16.w|, r17.w, l(1.000000)
              mad r17.w, r14.w, r1.z, r1.w
              mul r16.w, r16.w, r16.w
              mul r16.w, r17.w, r16.w
              rcp r16.w, r16.w
              mul r13.z, r13.z, r14.w
              mul r13.z, r13.z, r16.w
              mul r12.w, r12.w, r13.z
              mad r22.xyz, r12.wwww, r23.xyzx, r32.xyzx
              add_sat r13.z, -r13.w, l(1.000000)
              mul r13.w, r13.z, r13.z
              mul r13.w, r13.w, r13.w
              mul r13.z, r13.w, r13.z
              mul r12.w, r12.w, r13.z
              mad r23.xyz, r12.wwww, r23.xyzx, r31.xyzx
              movc r30.xyz, r11.wwww, r25.xyzx, r30.xyzx
              movc r31.xyz, r11.wwww, r23.xyzx, r31.xyzx
              movc r32.xyz, r11.wwww, r22.xyzx, r32.xyzx
            endif 
          endif 
        endif 
      endif 
    endif 
  endloop 
  mov r9.xyw, r30.xyxz
  mov r28.xyz, r31.xyzx
  mov r29.xyz, r32.xyzx
  iadd r5.w, r5.w, l(32)
endloop 
mad r0.xyz, r4.xwyx, l(1.000000, 3.000000, 2.000000, 0.000000), l(0.000000, 0.500000, -1.000000, 0.000000)
ftou r1.z, r0.y
mad r2.xyz, r5.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r1.w, r2.x
ieq r1.w, r1.z, r1.w
movc r2.xy, r1.wwww, r2.yzyy, l(-1.000000,0,0,0)
mad r4.xyz, r6.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r1.w, r4.x
ieq r1.w, r1.z, r1.w
movc r2.zw, r1.wwww, r4.yyyz, l(0,0,-1.000000,0)
mad r4.xyz, r7.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r1.w, r4.x
ieq r1.w, r1.z, r1.w
movc r4.xy, r1.wwww, r4.yzyy, l(-1.000000,0,0,0)
mad r5.xyz, r8.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r1.w, r5.x
ieq r1.z, r1.z, r1.w
movc r1.zw, r1.zzzz, r5.yyyz, l(0,0,-1.000000,0)
mov r5.xy, r2.xzxx
mov r5.z, r4.x
mov r5.w, r1.z
add r5.xyzw, -r0.xxxx, r5.xyzw
ge r5.xyzw, |r5.xyzw|, l(0.00902149, 0.00902149, 0.00902149, 0.00902149)
movc r5.xyzw, r5.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
add r1.z, r5.y, r5.x
add r1.z, r5.z, r1.z
add r1.z, r5.w, r1.z
mul r2.x, r2.w, r5.y
mad r2.x, r5.x, r2.y, r2.x
mad r2.x, r5.z, r4.y, r2.x
mad r1.w, r5.w, r1.w, r2.x
div r0.w, r1.w, r1.z
ge r1.z, l(0.000000), r1.z
movc r0.yz, r1.zzzz, l(0,0,0,0), r0.zzwz
and r1.zw, r1.xxxy, l(0, 0, 1, 1)
ieq r0.w, r1.w, r1.z
movc r0.xyz, r0.wwww, r0.xyzx, r0.xzyx
mad r0.x, -r0.z, l(0.500000), r0.x
add r2.y, r0.x, r0.z
mad r2.z, -r0.y, l(0.500000), r0.x
add r2.x, r0.y, r2.z
add r0.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r0.xyz, r0.xyzx, r28.xyzx
mad r0.xyz, r29.xyzx, r2.xyzx, r0.xyzx
mad r0.xyz, r9.xywx, r3.yzwy, r0.xyzx
lt r0.w, l(0.000000), cb2[9].z
if_nz r0.w
  dp3 r0.w, r10.xyzx, r10.xyzx
  rsq r1.z, r0.w
  mul r2.xyz, r1.zzzz, r10.xyzx
  sqrt r0.w, r0.w
  lt r1.z, l(0.000000), cb2[13].w
  if_nz r1.z
    mad r1.zw, r0.wwww, cb2[15].xxxy, cb2[14].zzzw
    mul r1.zw, r1.zzzw, cb2[16].xxxy
    lt r2.w, l(0.010000), |r10.z|
    mul r3.xy, r10.zzzz, cb2[15].zwzz
    mul r3.zw, r3.xxxy, l(0.000000, 0.000000, -1.442695, -1.442695)
    exp r3.zw, r3.zzzw
    add r3.zw, -r3.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    div r3.xy, r3.zwzz, r3.xyxx
    mul r3.xy, r1.zwzz, r3.xyxx
    movc r1.zw, r2.wwww, r3.xxxy, r1.zzzw
    mul r3.xyz, r1.zzzz, cb2[12].xyzx
    exp r3.xyz, r3.xyzx
    mul r4.xyz, r1.wwww, cb2[12].xyzx
    exp r4.xyz, r4.xyzx
    add r4.xyz, -r3.xyzx, r4.xyzx
    mad r3.xyz, cb2[13].wwww, r4.xyzx, r3.xyzx
  else 
    mad r1.z, r0.w, cb2[15].x, cb2[14].z
    mul r1.z, r1.z, cb2[16].x
    lt r1.w, l(0.010000), |r10.z|
    mul r2.w, r10.z, cb2[15].z
    mul r3.w, r2.w, l(-1.442695)
    exp r3.w, r3.w
    add r3.w, -r3.w, l(1.000000)
    div r2.w, r3.w, r2.w
    mul r2.w, r1.z, r2.w
    movc r1.z, r1.w, r2.w, r1.z
    mul r4.xyz, r1.zzzz, cb2[12].xyzx
    exp r3.xyz, r4.xyzx
  endif 
  mad r3.xyz, r3.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r3.xyz, r3.xyzx, -cb2[9].zzzz
  dp3 r1.z, cb2[7].yzwy, -r2.xyzx
  mad r1.w, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r2.x, cb2[8].w, -r1.z, l(1.000000)
  mul r2.x, r2.x, r2.x
  mul r2.x, r2.x, l(12.566371)
  div r1.w, r1.w, r2.x
  add r0.w, r0.w, -cb2[10].w
  mul_sat r0.w, r0.w, cb2[11].w
  mul r0.w, r0.w, r1.w
  mov_sat r1.z, r1.z
  mad r1.z, r1.z, r1.z, l(1.000000)
  mad r1.z, r1.z, l(0.05968310), l(-1.000000)
  mad r1.z, cb2[8].z, r1.z, l(1.000000)
  mul r2.xyz, r0.wwww, cb2[11].xyzx
  mad r2.xyz, r1.zzzz, cb2[10].xyzx, r2.xyzx
  mul r2.xyz, r2.xyzx, cb2[9].wwww
  add r4.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r2.xyz, r2.xyzx, r4.xyzx
  mad r2.xyz, r0.xyzx, r3.xyzx, r2.xyzx
else 
  mul r0.w, r10.z, cb2[6].x
  mad r1.z, cb2[6].x, r10.z, cb2[5].x
  lt r1.w, |r0.w|, l(0.000100)
  min r2.w, r1.z, l(64.000000)
  mul r2.w, r2.w, l(1.442695)
  exp r2.w, r2.w
  mov_sat r3.x, cb2[6].z
  lt r3.y, r1.z, l(0.000000)
  add r1.z, r1.z, l(1.000000)
  movc r1.z, r3.y, r2.w, r1.z
  add r1.z, r1.z, -cb2[6].z
  movc r0.w, r1.w, l(1.000000), r0.w
  div r0.w, r1.z, r0.w
  movc r0.w, r1.w, r3.x, r0.w
  mul r0.w, r0.w, cb2[5].z
  dp3 r1.z, r10.xyzx, r10.xyzx
  sqrt r1.w, r1.z
  mad r0.w, r0.w, r1.w, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  rsq r1.z, r1.z
  mul r3.xyz, r1.zzzz, r10.xyzx
  dp3 r1.z, cb2[7].yzwy, r3.xyzx
  mad_sat r1.z, cb2[8].y, r1.z, cb2[8].x
  add r3.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r3.xyzw, r1.zzzz, r3.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r3.w
  add r3.xyz, -r0.xyzx, r3.xyzx
  mad r2.xyz, r0.wwww, r3.xyzx, r0.xyzx
endif 
mul r0.xyzw, r2.xyzx, cb1[85].yyyy
ge r2.xyzw, r0.wyzw, l(0.00006104, 0.00006104, 0.00006104, 0.00006104)
and r0.xyzw, r0.xyzw, r2.xyzw
min r0.xyzw, r0.xyzw, l(65024.000000, 65024.000000, 64512.000000, 65024.000000)
store_uav_typed u0.xyzw, r1.xyyy, r0.xyzw
ret 
// Approximately 1382 instruction slots used
