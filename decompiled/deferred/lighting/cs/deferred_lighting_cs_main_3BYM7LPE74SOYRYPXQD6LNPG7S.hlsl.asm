//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:22:56 2021
//
//
// Buffer Definitions: 
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16 [unused]
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4 [unused]
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4 [unused]
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4 [unused]
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4 [unused]
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// cbuffer LightingPackCBuffer
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } lightConstantsCB[273];           // Offset:    0 Size: 65520
//
// }
//
// Resource bind info for gPermutedTilingBuffer
// {
//
//   struct PermutedTilingBuffer
//   {
//       
//       uint2 data;                    // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:     8
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samplerPointClamp                 sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// GBufferDiffuseColor               texture  float4          2d             t0      1 
// GBufferNormalAndGloss             texture  float4          2d             t1      1 
// GBufferSpecularColorAndOcclusion    texture  float4          2d             t2      1 
// GBufferDepth                      texture   float          2d             t4      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// gDownsampledScene                 texture  float4          2d            t21      1 
// gMotionVectors                    texture  float4          2d            t22      1 
// gPermutedTilingBuffer             texture  struct         r/o            t25      1 
// gSSAOTexture                      texture   float          2d            t27      1 
// gSSAODepthTexture                 texture   float          2d            t28      1 
// litBuffer                             UAV  float3          2d             u0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
// LightingPackCBuffer               cbuffer      NA          NA            cb9      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB1[86], immediateIndexed
dcl_constantbuffer CB2[59], immediateIndexed
dcl_constantbuffer CB9[4095], dynamicIndexed
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s4, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t25, 8
dcl_resource_texture2d (float,float,float,float) t27
dcl_resource_texture2d (float,float,float,float) t28
dcl_uav_typed_texture2d (float,float,float,float) u0
dcl_input vThreadGroupID.x
dcl_input vThreadIDInGroup.xy
dcl_temps 38
dcl_thread_group 8, 8, 1
imad r0.x, cb2[57].x, l(23), vThreadGroupID.x
ld_structured_indexable(structured_buffer, stride=8)(mixed,mixed,mixed,mixed) r0.xy, r0.x, l(0), t25.xyxx
and r0.yz, r0.xxyx, l(0, 4095, 4095, 0)
imad r1.xy, r0.yzyy, l(8, 8, 0, 0), vThreadIDInGroup.xyxx
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.xyww, t1.xyzw
ftou r0.yz, cb1[44].xxyx
ult r0.yz, r1.xxyx, r0.yyzy
and r0.y, r0.z, r0.y
lt r0.z, l(0.000000), r2.z
and r0.y, r0.z, r0.y
if_z r0.y
  ret 
endif 
ge r0.z, r2.z, l(0.500000)
ld_indexable(texture2d)(float,float,float,float) r0.w, r1.xyww, t4.yzwx
ld_indexable(texture2d)(float,float,float,float) r3.xyz, r1.xyww, t0.xyzw
ld_indexable(texture2d)(float,float,float,float) r4.xyzw, r1.xyww, t2.xyzw
ld_aoffimmi_indexable(-1,0,0)(texture2d)(float,float,float,float) r5.xyz, r1.xyww, t2.xywz
ld_aoffimmi_indexable(0,-1,0)(texture2d)(float,float,float,float) r6.xyz, r1.xyww, t2.xywz
ld_aoffimmi_indexable(1,0,0)(texture2d)(float,float,float,float) r7.xyz, r1.xyww, t2.xywz
ld_aoffimmi_indexable(0,1,0)(texture2d)(float,float,float,float) r8.xyz, r1.xyzw, t2.xywz
utof r1.zw, r1.yyyx
add r9.xy, r1.wzww, l(0.500000, 0.500000, 0.000000, 0.000000)
ge r10.x, r0.w, l(0.984375)
mul r3.w, r0.w, l(1.01587307)
mad r0.w, r0.w, l(64.000000), l(-63.000000)
movc r0.w, r10.x, r0.w, r3.w
max r0.w, r0.w, l(0.00000001)
rcp r10.y, r0.w
and r0.yw, r0.yyyy, r10.xxxy
add r9.zw, r9.xxxy, -cb1[71].xxxy
mul r9.zw, r9.zzzw, cb1[44].zzzw
mad r9.zw, r9.zzzw, l(0.000000, 0.000000, 2.000000, -2.000000), l(0.000000, 0.000000, -1.000000, 1.000000)
mul r10.x, r9.z, cb1[12].x
mul r10.y, r9.w, cb1[13].y
mov r10.z, l(1.000000)
mul r10.xyz, r0.wwww, r10.xyzx
mul r11.xyz, r10.yyyy, cb1[17].xyzx
mad r10.xyw, r10.xxxx, cb1[16].xyxz, r11.xyxz
mad r10.xyz, r10.zzzz, cb1[18].xyzx, r10.xywx
mad r2.w, r2.w, l(3.000000), l(0.500000)
ftou r2.w, r2.w
mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r2.xy, r2.xyxx, l(0.850000, 0.850000, 0.000000, 0.000000)
dp2 r3.w, r2.xyxx, r2.xyxx
add r11.zw, -r3.wwww, l(0.000000, 0.000000, 2.000000, 1.000000)
sqrt r3.w, r11.z
mul r11.xy, r2.xyxx, r3.wwww
and r12.xyzw, r2.wwww, l(2, 1, 2, 1)
movc r12.xyzw, r12.zwxy, l(-1.000000,-1.000000,1,1), l(1.000000,1.000000,0,0)
xor r2.x, r12.w, r12.z
movc r12.z, r2.x, l(-1.000000), l(1.000000)
mul r2.xyw, r12.xyxz, l(-1.000000, 0.000000, 0.000000, 1.000000)
mul r13.xyz, r12.xyzx, l(1.000000, -2.000000, 1.000000, 0.000000)
mul r11.xyz, r11.xywx, l(0.40824831, 0.70710677, 0.57735026, 0.000000)
mul r2.xyw, r2.xyxw, r11.yyyy
mad r2.xyw, r13.xyxz, r11.xxxx, r2.xyxw
mad r11.xyz, r12.xyzx, r11.zzzz, r2.xywx
movc r2.x, r0.z, l(-0.500000), l(-0.00146628)
add r2.x, r2.x, r2.z
mul_sat r2.y, r2.x, l(2.00982332)
dp3 r2.z, -r10.xyzx, -r10.xyzx
rsq r2.z, r2.z
mul r12.xyz, r2.zzzz, -r10.xyzx
dp2 r2.z, r1.wzww, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r2.z, r2.z
mul r2.z, r2.z, l(52.982918)
frc r2.z, r2.z
mad r2.z, r2.z, l(6.28318548), cb1[70].w
sincos r13.x, r14.x, r2.z
dp2 r1.z, r1.zwzz, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r1.z, r1.z
mul r1.z, r1.z, l(52.982918)
frc r1.z, r1.z
mad r1.z, r1.z, l(6.28318548), cb1[70].w
sincos r15.x, r16.x, r1.z
dp3_sat r2.x, r11.xyzx, r12.xyzx
dp3 r1.z, -r12.xyzx, r11.xyzx
add r1.z, r1.z, r1.z
mad r17.xyz, r11.xyzx, -r1.zzzz, -r12.xyzx
mul r1.z, r2.y, l(17.000000)
exp r1.z, r1.z
add r1.z, r1.z, l(2.000000)
div r1.z, l(2.000000), r1.z
sqrt r1.w, r1.z
mul r2.zw, r9.xxxy, cb1[44].zzzw
sample_l_indexable(texture2d)(float,float,float,float) r2.z, r2.zwzz, t27.yzxw, s4, l(0.000000)
mul r2.w, r2.z, r4.z
lt r3.w, l(0.83333331), r2.y
lt r5.w, l(60.000000), r0.w
and r3.w, r3.w, r5.w
if_nz r3.w
  mul r9.xyz, r10.yyyy, cb1[9].xywx
  mad r9.xyz, r10.xxxx, cb1[8].xywx, r9.xyzx
  mad r9.xyz, r10.zzzz, cb1[10].xywx, r9.xyzx
  add r9.xyz, r9.xyzx, cb1[11].xywx
  mad r15.yzw, r17.xxyz, l(0.000000, 2000.000000, 2000.000000, 2000.000000), r10.xxyz
  mul r16.yzw, r15.zzzz, cb1[9].xxyw
  mad r16.yzw, r15.yyyy, cb1[8].xxyw, r16.yyzw
  mad r15.yzw, r15.wwww, cb1[10].xxyw, r16.yyzw
  add r15.yzw, r15.yyzw, cb1[11].xxyw
  ge r3.w, r15.w, r9.z
  if_nz r3.w
    mul r13.zw, cb1[44].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
    rcp r18.z, r9.z
    mul r18.xy, r9.xyxx, r18.zzzz
    rcp r19.z, r15.w
    mul r19.xy, r15.yzyy, r19.zzzz
    lt r9.xy, l(1.000000, 1.000000, 0.000000, 0.000000), r19.xyxx
    mad r20.xyzw, r15.yyzz, r19.zzzz, l(-1.000000, 1.000000, -1.000000, 1.000000)
    mad r21.xyzw, r15.yyzz, r19.zzzz, -r18.xxyy
    lt r15.yz, r19.xxyx, l(0.000000, -1.000000, -1.000000, 0.000000)
    div r20.xyzw, r20.xyzw, r21.xyzw
    and r15.yz, r15.yyzy, r20.yywy
    movc r9.xy, r9.xyxx, r20.xzxx, r15.yzyy
    max r3.w, r9.y, r9.x
    add r9.xyw, r18.xyxz, -r19.xyxz
    mad r9.xyw, r3.wwww, r9.xyxw, r19.xyxz
    mad r15.yz, r18.xxyx, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
    mad r16.yz, r9.xxyx, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
    add r15.yz, r15.yyzy, -r16.yyzy
    mul r15.yz, r13.zzwz, |r15.yyzy|
    max r3.w, r15.z, r15.y
    max r3.w, r3.w, l(1.000000)
    rcp r3.w, r3.w
    mad r18.xyz, r18.xyzx, l(0.500000, -0.500000, 1.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    mad r19.xyw, r9.xyxw, l(0.500000, -0.500000, 0.000000, 1.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    add r20.xyz, -r18.xyzx, r19.xywx
    mad r18.xyz, r3.wwww, r20.xyzx, r18.xyzx
    add r19.xyw, -r18.xyxz, r19.xyxw
    mul r20.xyz, r19.xywx, l(0.031250, 0.031250, 0.031250, 0.000000)
    mul r9.xy, r13.zwzz, |r20.xyxx|
    max r3.w, r9.y, r9.x
    log r3.w, r3.w
    round_pi r3.w, r3.w
    max r3.w, r3.w, l(0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r5.w, r18.xyxx, t28.yzwx, s1, r3.w
    mad r21.xyz, r19.xywx, l(0.031250, 0.031250, 0.031250, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r3.w
    min r5.w, |r5.w|, |r6.w|
    mul r5.w, r21.z, r5.w
    lt r5.w, r5.w, l(1.000000)
    and r7.w, r5.w, l(1)
    mad r21.xyz, r19.xywx, l(0.062500, 0.062500, 0.062500, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r3.w
    min r6.w, |r6.w|, |r8.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    bfi r5.w, l(1), l(0), r5.w, l(2)
    movc r5.w, r6.w, r5.w, r7.w
    mad r21.xyz, r19.xywx, l(0.093750, 0.093750, 0.093750, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r3.w
    min r7.w, |r8.w|, |r6.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r8.w, r5.w, l(4)
    movc r5.w, r7.w, r8.w, r5.w
    mad r21.xyz, r19.xywx, l(0.125000, 0.125000, 0.125000, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r3.w
    min r6.w, |r6.w|, |r7.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r8.w, r5.w, l(8)
    movc r5.w, r6.w, r8.w, r5.w
    mad r21.xyz, r19.xywx, l(0.156250, 0.156250, 0.156250, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r3.w
    min r7.w, |r7.w|, |r6.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r8.w, r5.w, l(16)
    movc r5.w, r7.w, r8.w, r5.w
    mad r21.xyz, r19.xywx, l(0.187500, 0.187500, 0.187500, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r3.w
    min r6.w, |r6.w|, |r7.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r8.w, r5.w, l(32)
    movc r5.w, r6.w, r8.w, r5.w
    mad r21.xyz, r19.xywx, l(0.218750, 0.218750, 0.218750, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r3.w
    min r7.w, |r7.w|, |r6.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r8.w, r5.w, l(64)
    movc r5.w, r7.w, r8.w, r5.w
    mad r21.xyz, r19.xywx, l(0.250000, 0.250000, 0.250000, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r3.w
    min r6.w, |r6.w|, |r7.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r8.w, r5.w, l(128)
    movc r5.w, r6.w, r8.w, r5.w
    mad r21.xyz, r19.xywx, l(0.281250, 0.281250, 0.281250, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r3.w
    min r7.w, |r7.w|, |r6.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r8.w, r5.w, l(256)
    movc r5.w, r7.w, r8.w, r5.w
    mad r21.xyz, r19.xywx, l(0.312500, 0.312500, 0.312500, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r3.w
    min r6.w, |r6.w|, |r7.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r8.w, r5.w, l(512)
    movc r5.w, r6.w, r8.w, r5.w
    mad r21.xyz, r19.xywx, l(0.343750, 0.343750, 0.343750, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r3.w
    min r7.w, |r7.w|, |r6.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r8.w, r5.w, l(1024)
    movc r5.w, r7.w, r8.w, r5.w
    mad r21.xyz, r19.xywx, l(0.375000, 0.375000, 0.375000, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r3.w
    min r6.w, |r6.w|, |r7.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r8.w, r5.w, l(2048)
    movc r5.w, r6.w, r8.w, r5.w
    mad r21.xyz, r19.xywx, l(0.406250, 0.406250, 0.406250, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r3.w
    min r7.w, |r7.w|, |r6.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r8.w, r5.w, l(4096)
    movc r5.w, r7.w, r8.w, r5.w
    mad r21.xyz, r19.xywx, l(0.437500, 0.437500, 0.437500, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r3.w
    min r6.w, |r6.w|, |r7.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r8.w, r5.w, l(8192)
    movc r5.w, r6.w, r8.w, r5.w
    mad r21.xyz, r19.xywx, l(0.468750, 0.468750, 0.468750, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r3.w
    min r7.w, |r7.w|, |r6.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r8.w, r5.w, l(0x00004000)
    movc r5.w, r7.w, r8.w, r5.w
    mad r21.xyz, r19.xywx, l(0.500000, 0.500000, 0.500000, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r3.w
    min r6.w, |r6.w|, |r7.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r8.w, r5.w, l(0x00008000)
    movc r5.w, r6.w, r8.w, r5.w
    mad r21.xyz, r19.xywx, l(0.531250, 0.531250, 0.531250, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r3.w
    min r7.w, |r7.w|, |r6.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r8.w, r5.w, l(0x00010000)
    movc r5.w, r7.w, r8.w, r5.w
    mad r21.xyz, r19.xywx, l(0.562500, 0.562500, 0.562500, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r3.w
    min r6.w, |r6.w|, |r7.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r8.w, r5.w, l(0x00020000)
    movc r5.w, r6.w, r8.w, r5.w
    mad r21.xyz, r19.xywx, l(0.593750, 0.593750, 0.593750, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r3.w
    min r7.w, |r7.w|, |r6.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r8.w, r5.w, l(0x00040000)
    movc r5.w, r7.w, r8.w, r5.w
    mad r21.xyz, r19.xywx, l(0.625000, 0.625000, 0.625000, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r3.w
    min r6.w, |r6.w|, |r7.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r8.w, r5.w, l(0x00080000)
    movc r5.w, r6.w, r8.w, r5.w
    mad r21.xyz, r19.xywx, l(0.656250, 0.656250, 0.656250, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r3.w
    min r7.w, |r7.w|, |r6.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r8.w, r5.w, l(0x00100000)
    movc r5.w, r7.w, r8.w, r5.w
    mad r21.xyz, r19.xywx, l(0.687500, 0.687500, 0.687500, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r3.w
    min r6.w, |r6.w|, |r7.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r8.w, r5.w, l(0x00200000)
    movc r5.w, r6.w, r8.w, r5.w
    mad r21.xyz, r19.xywx, l(0.718750, 0.718750, 0.718750, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r3.w
    min r7.w, |r7.w|, |r6.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r8.w, r5.w, l(0x00400000)
    movc r5.w, r7.w, r8.w, r5.w
    mad r21.xyz, r19.xywx, l(0.750000, 0.750000, 0.750000, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r3.w
    min r6.w, |r6.w|, |r7.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r8.w, r5.w, l(0x00800000)
    movc r5.w, r6.w, r8.w, r5.w
    mad r21.xyz, r19.xywx, l(0.781250, 0.781250, 0.781250, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r3.w
    min r7.w, |r7.w|, |r6.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r8.w, r5.w, l(0x01000000)
    movc r5.w, r7.w, r8.w, r5.w
    mad r21.xyz, r19.xywx, l(0.812500, 0.812500, 0.812500, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r3.w
    min r6.w, |r6.w|, |r7.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r8.w, r5.w, l(0x02000000)
    movc r5.w, r6.w, r8.w, r5.w
    mad r21.xyz, r19.xywx, l(0.843750, 0.843750, 0.843750, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r3.w
    min r7.w, |r7.w|, |r6.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r8.w, r5.w, l(0x04000000)
    movc r5.w, r7.w, r8.w, r5.w
    mad r21.xyz, r19.xywx, l(0.875000, 0.875000, 0.875000, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r3.w
    min r6.w, |r6.w|, |r7.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r8.w, r5.w, l(0x08000000)
    movc r5.w, r6.w, r8.w, r5.w
    mad r21.xyz, r19.xywx, l(0.906250, 0.906250, 0.906250, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r3.w
    min r7.w, |r7.w|, |r6.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r8.w, r5.w, l(0x10000000)
    movc r5.w, r7.w, r8.w, r5.w
    mad r21.xyz, r19.xywx, l(0.937500, 0.937500, 0.937500, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r3.w
    min r6.w, |r6.w|, |r7.w|
    mul r6.w, r21.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r8.w, r5.w, l(0x20000000)
    movc r5.w, r6.w, r8.w, r5.w
    mad r21.xyz, r19.xywx, l(0.968750, 0.968750, 0.968750, 0.000000), r18.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r21.xyxx, t28.yzwx, s1, r3.w
    min r7.w, |r7.w|, |r6.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r8.w, r5.w, l(0x40000000)
    movc r5.w, r7.w, r8.w, r5.w
    sample_l_indexable(texture2d)(float,float,float,float) r3.w, r16.yzyy, t28.yzwx, s1, r3.w
    min r3.w, |r6.w|, |r3.w|
    mul r3.w, r9.w, r3.w
    lt r3.w, r3.w, l(1.000000)
    iadd r6.w, r5.w, l(0x80000000)
    movc r3.w, r3.w, r6.w, r5.w
    mov r21.w, l(-1)
    mov r22.z, l(-1)
    mov r9.xy, l(0,0,0,0)
    mov r5.w, l(0)
    mov r6.w, r3.w
    mov r7.w, r19.z
    mov r23.yz, l(0,0,0,0)
    mov r21.z, l(0)
    mov r8.w, l(0)
    loop 
      breakc_z r6.w
      firstbit_lo r21.y, r6.w
      ishl r9.w, l(1), r21.y
      xor r21.x, r6.w, r9.w
      utof r12.w, r21.y
      mul r12.w, r12.w, l(0.031250)
      mad r16.yzw, r19.xxyw, r12.wwww, r18.xxyz
      sample_l_indexable(texture2d)(float,float,float,float) r12.w, r16.yzyy, t28.yzwx, s1, l(0.000000)
      mul r13.z, r16.w, |r12.w|
      lt r13.z, r13.z, l(1.000000)
      if_nz r13.z
        if_nz r21.z
          lt r13.z, r9.z, |r12.w|
          lt r13.w, r7.w, r16.w
          and r13.z, r13.w, r13.z
          movc r15.yz, r13.zzzz, r16.yyzy, r9.xxyx
          mov r21.z, r16.w
          mov r23.x, r7.w
          movc r24.xyz, r13.zzzz, r21.zxyz, r23.xyzx
          mov r6.w, r21.x
          mov r21.z, l(-1)
          mov r9.xy, r15.yzyy
          mov r7.w, r24.x
          mov r23.yz, r24.yyzy
          continue 
        endif 
        mov r13.z, r23.y
        mov r13.w, l(0)
      else 
        not r9.w, r9.w
        and r13.z, r9.w, r23.y
        mov r13.w, r21.z
      endif 
      if_nz r8.w
        mov r6.w, r21.x
        mov r23.y, r13.z
        mov r21.z, r13.w
        mov r8.w, l(-1)
        continue 
      endif 
      mov r15.yz, r9.xxyx
      mov r9.w, r5.w
      mov r14.w, r7.w
      mov r23.y, r13.z
      mov r23.x, r23.z
      mov r21.z, r13.w
      mov r22.w, r8.w
      mov r18.w, r16.w
      mov r20.w, |r12.w|
      mov r23.w, l(0)
      loop 
        ige r24.x, r23.w, l(4)
        breakc_nz r24.x
        itof r24.x, r23.w
        add r24.x, r24.x, l(1.000000)
        mul r24.x, r24.x, l(0.250000)
        mad r24.xyz, r20.xyzx, r24.xxxx, r16.yzwy
        sample_l_indexable(texture2d)(float,float,float,float) r24.w, r24.xyxx, t28.yzwx, s1, l(0.000000)
        mul r25.x, r24.z, |r24.w|
        lt r25.x, r25.x, l(1.000000)
        if_nz r25.x
          lt r25.x, r9.z, |r24.w|
          add r25.y, -r18.w, r24.z
          add r25.z, -r20.w, |r24.w|
          mul r25.w, r18.w, r24.z
          mul r25.z, r25.w, |r25.z|
          lt r25.y, r25.z, |r25.y|
          and r25.z, r25.y, r25.x
          lt r25.w, r14.w, r24.z
          and r26.x, r25.w, r25.x
          movc r22.xy, r26.xxxx, r21.xyxx, r23.yxyy
          or r25.y, r25.y, r25.w
          and r25.x, r25.x, r25.y
          movc r24.xy, r25.xxxx, r24.xyxx, r15.yzyy
          movc r25.y, r25.z, l(1.000000), r9.w
          movc r25.x, r25.x, r24.z, r14.w
          movc r26.xyzw, r25.zzzz, r21.xyzw, r22.xyzw
          mov r9.w, r25.y
          mov r15.yz, r24.xxyx
          mov r14.w, r25.x
          mov r23.xy, r26.yxyy
          mov r21.z, r26.z
          mov r22.w, r26.w
          break 
        endif 
        mov r18.w, r24.z
        mov r20.w, |r24.w|
        iadd r23.w, r23.w, l(1)
      endloop 
      mov r9.xy, r15.yzyy
      mov r5.w, r9.w
      mov r7.w, r14.w
      mov r23.yz, r23.yyxy
      mov r8.w, r22.w
      mov r6.w, r21.x
    endloop 
    rcp r3.w, r7.w
    add r3.w, -r9.z, r3.w
    add r6.w, -r9.z, r15.w
    div r3.w, |r3.w|, |r6.w|
    min r18.x, r3.w, l(1.000000)
    countbits r3.w, r23.y
    utof r3.w, r3.w
    add r3.w, r3.w, l(1.000000)
    iadd r6.w, -r23.z, l(32)
    utof r6.w, r6.w
    div r3.w, r3.w, r6.w
    min r18.y, r3.w, l(1.000000)
  else 
    mov r18.xy, l(1.000000,0,0,0)
    mov r5.w, l(0)
  endif 
  add r3.w, r2.y, l(-0.83333331)
  mul r3.w, r3.w, l(5.99999952)
  max r3.w, r3.w, l(0.000000)
  mad r6.w, r3.w, l(-2.000000), l(3.000000)
  mul r3.w, r3.w, r3.w
  mul r3.w, r3.w, r6.w
  add r0.w, r0.w, l(-60.000000)
  mul_sat r0.w, r0.w, l(0.01666667)
  mad r6.w, r0.w, l(-2.000000), l(3.000000)
  mul r0.w, r0.w, r0.w
  mul r0.w, r0.w, r6.w
  mul r0.w, r0.w, r3.w
  mul r0.w, r18.y, r0.w
  mad r9.zw, r9.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
  add r9.zw, |r9.zzzw|, l(0.000000, 0.000000, -0.500000, -0.500000)
  add_sat r9.zw, r9.zzzw, r9.zzzw
  mad r13.zw, r9.zzzw, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
  mul r9.zw, r9.zzzw, r9.zzzw
  mad r9.zw, -r13.zzzw, r9.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  mul r3.w, r9.w, r9.z
  mul r0.w, r0.w, r3.w
  mul r3.w, r18.x, l(10.000000)
  min r3.w, r3.w, l(1.000000)
  add r6.w, -r5.w, l(1.000000)
  mul r6.w, r0.w, r6.w
  add r3.w, r3.w, l(-1.000000)
  mad r3.w, r6.w, r3.w, l(1.000000)
  mul r0.w, r5.w, r0.w
  lt r5.w, l(0.000000), r0.w
  if_nz r5.w
    sample_l_indexable(texture2d)(float,float,float,float) r9.zw, r9.xyxx, t22.zwxy, s4, l(0.000000)
    add r13.zw, |r9.zzzw|, l(0.000000, 0.000000, -0.500000, -0.500000)
    add_sat r13.zw, r13.zzzw, r13.zzzw
    add r15.yz, |r9.zzwz|, |r9.zzwz|
    min r15.yz, r15.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
    mul r15.yz, r15.yyzy, l(0.000000, 10.000000, 10.000000, 0.000000)
    mad r13.zw, r13.zzzw, l(0.000000, 0.000000, 30.000000, 30.000000), r15.yyyz
    ge r9.zw, r9.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
    movc r9.zw, r9.zzzw, r13.zzzw, -r13.zzzw
    mad r9.xy, -r9.zwzz, cb1[44].zwzz, r9.xyxx
    sample_l_indexable(texture2d)(float,float,float,float) r9.xyz, r9.xyxx, t21.xyzw, s4, l(0.000000)
    mul r9.xyz, r9.xyzx, cb1[85].xxxx
    mul r9.xyz, r0.wwww, r9.xyzx
  else 
    mov r9.xyz, l(0,0,0,0)
    mov r0.w, l(0)
  endif 
else 
  mov r9.xyz, l(0,0,0,0)
  mov r3.w, l(1.000000)
  mov r0.w, l(0)
endif 
add r5.w, -r2.y, l(1.000000)
mul r5.w, r5.w, l(5.000000)
add r15.yzw, r10.xxyz, -cb2[35].xxyz
mul r18.x, r15.y, cb2[35].w
mul r18.yz, r15.zzwz, cb2[36].xxyx
add_sat r15.yzw, r18.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
mul r18.xy, r15.yzyy, cb2[36].zwzz
mul r18.z, r15.w, cb2[37].x
add r15.yzw, r18.xxyz, cb2[37].yyzw
lt r16.yzw, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xxyz
movc r18.xyz, r16.yzwy, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
mov r18.w, l(0)
add r16.yzw, r15.yyzw, r18.wwwx
sample_l_indexable(texture3d)(float,float,float,float) r16.yzw, r16.yzwy, t17.wxyz, s4, l(0.000000)
mul r19.xyz, r11.xyzx, r11.xyzx
mul r19.xyz, r19.xyzx, cb2[19].xxxx
add r20.xyz, r15.yzwy, r18.wwyw
sample_l_indexable(texture3d)(float,float,float,float) r20.xyz, r20.xyzx, t18.xyzw, s4, l(0.000000)
mul r20.xyz, r19.yyyy, r20.xyzx
mad r16.yzw, r16.yyzw, r19.xxxx, r20.xxyz
add r15.yzw, r15.yyzw, r18.wwwz
sample_l_indexable(texture3d)(float,float,float,float) r15.yzw, r15.yzwy, t19.wxyz, s4, l(0.000000)
mad r15.yzw, r15.yyzw, r19.zzzz, r16.yyzw
mov r11.w, l(0)
sample_l_indexable(texturecubearray)(float,float,float,float) r16.yzw, r11.xyzw, t8.wxyz, s2, l(6.000000)
mul r15.yzw, r15.yyzw, r16.yyzw
dp3 r6.w, r15.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
mov r17.w, l(0)
sample_l_indexable(texturecubearray)(float,float,float,float) r16.yzw, r17.xyzw, t8.wxyz, s2, r5.w
add r5.w, -r6.w, cb2[19].x
mad r5.w, r2.y, r5.w, r6.w
mul r16.yzw, r5.wwww, r16.yyzw
add r0.w, -r0.w, l(1.000000)
mad r9.xyz, r16.yzwy, r0.wwww, r9.xyzx
mad r0.w, r4.z, r2.z, r2.x
log r0.w, |r0.w|
mul r0.w, r0.w, r1.w
exp r0.w, r0.w
mad r0.w, r4.z, r2.z, r0.w
add_sat r0.w, r0.w, l(-1.000000)
mul r0.w, r3.w, r0.w
mul r15.yzw, r2.wwww, r15.yyzw
and r16.yzw, r0.zzzz, r15.yyzw
mad r2.yz, r2.xxyx, l(0.000000, 0.984375, 0.984375, 0.000000), l(0.000000, 0.00781250, 0.00781250, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r2.yz, r2.yzyy, t5.zxyw, s2, l(0.000000)
mul r9.xyz, r0.wwww, r9.xyzx
mul r18.xyz, r2.yyyy, r9.xyzx
mul r2.yzw, r2.zzzz, r9.xxyz
sqrt r0.w, r1.w
mad r0.w, r0.w, l(0.500000), l(0.500000)
mul r0.w, r0.w, r0.w
mul r3.w, r0.w, l(0.500000)
mad r0.w, -r0.w, l(0.500000), l(1.000000)
mad r4.z, r2.x, r0.w, r3.w
mul r0.w, r0.w, r4.z
mul r3.w, r3.w, r4.z
ushr r4.z, r0.x, l(24)
ubfe r0.x, l(10), l(12), r0.x
mov r9.x, -r13.x
not r5.w, r0.y
mad r2.x, -r2.x, l(0.500000), l(1.000000)
mov r10.w, l(1.000000)
mov r19.w, l(1.000000)
mov r9.z, r13.x
mov r20.z, l(1.000000)
mov r21.w, l(1.000000)
mov r22.w, l(1.000000)
mov r9.yw, r14.xxxx
mov r13.y, r9.w
mov r23.w, l(1.000000)
mov r14.y, r9.x
mov r14.z, r13.x
mov r24.w, l(1.000000)
mov r25.x, r14.x
mov r25.y, r9.x
mov r25.z, r13.x
mov r26.x, r14.x
mov r26.y, r9.x
mov r26.z, r13.x
mov r27.x, r14.x
mov r27.y, r9.x
mov r27.z, r13.x
mov r28.xyz, r15.yzwy
mov r29.xyz, r16.yzwy
mov r30.xyz, r18.xyzx
mov r31.xyz, r2.yzwy
mov r6.w, l(0)
loop 
  ieq r7.w, r6.w, l(2)
  breakc_nz r7.w
  movc r7.w, r6.w, r0.x, r4.z
  imul null, r7.w, r7.w, l(15)
  ubfe r8.w, l(3), l(24), cb9[r7.w + 1].w
  switch r8.w
    case l(4)
    lt r8.w, l(0.000000), cb9[r7.w + 6].y
    mov r32.xy, cb9[r7.w + 5].zwzz
    mov r32.z, cb9[r7.w + 6].x
    mad r33.xyz, -r32.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), cb9[r7.w + 0].xyzx
    add r34.xyz, -r10.xyzx, r33.xyzx
    dp3 r11.w, r32.xyzx, r34.xyzx
    div_sat r12.w, -r11.w, cb9[r7.w + 6].y
    mad r35.xyz, r12.wwww, r32.xyzx, r33.xyzx
    movc r35.xyz, r8.wwww, r35.xyzx, cb9[r7.w + 0].xyzx
    add r35.xyz, -r10.xyzx, r35.xyzx
    dp3 r13.z, r35.xyzx, r35.xyzx
    rsq r13.w, r13.z
    mul r35.xyz, r13.wwww, r35.xyzx
    dp3 r13.w, r11.xyzx, r35.xyzx
    mov_sat r14.w, r13.w
    movc r14.w, r0.z, |r13.w|, r14.w
    lt r17.w, l(0.000000), r14.w
    if_nz r17.w
      sqrt r17.w, r13.z
      mul r18.w, cb9[r7.w + 3].x, cb9[r7.w + 3].x
      div r13.z, r18.w, r13.z
      min r13.z, r13.z, l(1.000000)
      mad_sat r35.xy, r17.wwww, cb9[r7.w + 2].xzxx, cb9[r7.w + 2].ywyy
      mul r35.zw, r35.xxxy, r35.xxxy
      mad r35.xy, r35.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
      mul r35.xy, r35.xyxx, r35.zwzz
      mul r13.z, r13.z, r35.x
      mul r13.z, r35.y, r13.z
      lt r17.w, l(0.000000), r13.z
      if_nz r17.w
        ubfe r17.w, l(3), l(27), cb9[r7.w + 1].w
        ine r17.w, r17.w, l(1)
        if_nz r17.w
          mad r17.w, |r13.w|, l(-0.200000), l(0.400000)
          lt r18.w, r13.w, l(0.000000)
          and r18.w, r0.z, r18.w
          movc r17.w, r18.w, -r17.w, r17.w
          mad r35.xyz, r11.xyzx, r17.wwww, r10.xyzx
          add r35.xyz, r35.xyzx, -cb9[r7.w + 4].yzwy
          max r17.w, |r35.z|, |r35.y|
          max r17.w, r17.w, |r35.x|
          div r17.w, cb9[r7.w + 5].x, r17.w
          add r17.w, r17.w, cb9[r7.w + 5].y
          dp3 r18.w, r35.xyzx, r35.xyzx
          rsq r18.w, r18.w
          max r17.w, r17.w, l(0.00006104)
          and r20.w, l(0x0000ffff), cb9[r7.w + 1].w
          utof r36.w, r20.w
          mov r20.w, l(0)
          mov r25.w, l(0)
          loop 
            ige r26.w, r25.w, l(8)
            breakc_nz r26.w
            dp2 r37.y, icb[r25.w + 0].yxyy, r9.xyxx
            dp2 r37.z, icb[r25.w + 0].yxyy, r9.yzyy
            mul r37.yz, r37.yyzy, cb9[r7.w + 3].yyyy
            mul r37.x, r16.x, r37.y
            mul r37.w, r15.x, r37.y
            mad r36.xyz, r35.xyzx, r18.wwww, r37.xzwx
            sample_c_lz_indexable(texturecubearray)(float,float,float,float) r26.w, r36.xyzw, t10.xxxx, s13, r17.w
            mad r20.w, r26.w, l(0.125000), r20.w
            iadd r25.w, r25.w, l(1)
          endloop 
        else 
          mov r20.w, l(1.000000)
        endif 
        mul r13.z, r13.z, r20.w
        lt r17.w, l(0.000000), r13.z
        if_nz r17.w
          mul r17.w, r1.z, cb9[r7.w + 1].z
          mul r17.w, r17.w, l(0.250000)
          dp3 r18.w, r32.xyzx, r17.xyzx
          dp3 r25.w, r17.xyzx, r34.xyzx
          mad r26.w, -r18.w, r18.w, cb9[r7.w + 6].y
          mad r11.w, r18.w, r25.w, -r11.w
          div_sat r11.w, r11.w, r26.w
          div r18.w, r26.w, cb9[r7.w + 6].y
          mul r18.w, r18.w, l(10.000000)
          min r18.w, r18.w, l(1.000000)
          add r11.w, -r12.w, r11.w
          mad r11.w, r18.w, r11.w, r12.w
          mad r32.xyz, r11.wwww, r32.xyzx, r33.xyzx
          movc r32.xyz, r8.wwww, r32.xyzx, cb9[r7.w + 0].xyzx
          add r32.xyz, -r10.xyzx, r32.xyzx
          dp3 r8.w, r32.xyzx, r32.xyzx
          rsq r8.w, r8.w
          mul r33.xyz, r8.wwww, r32.xyzx
          ubfe r11.w, l(4), l(16), cb9[r7.w + 1].w
          ult r12.w, l(0), r11.w
          and r12.w, r0.y, r12.w
          if_nz r12.w
            iadd r11.w, r11.w, cb2[0].x
            imad r11.w, r11.w, l(15), l(-15)
            mad r12.w, |r13.w|, l(-0.200000), l(0.400000)
            lt r18.w, r13.w, l(0.000000)
            and r18.w, r0.z, r18.w
            movc r12.w, r18.w, -r12.w, r12.w
            mad r19.xyz, r11.xyzx, r12.wwww, r10.xyzx
            mov r34.xyz, cb9[r11.w + 6].yzwy
            mov r34.w, cb9[r11.w + 7].x
            dp4 r12.w, r34.xyzw, r19.xyzw
            mov r34.xyz, cb9[r11.w + 7].yzwy
            mov r34.w, cb9[r11.w + 8].x
            dp4 r18.w, r34.xyzw, r19.xyzw
            lt r25.w, r18.w, r12.w
            if_z r25.w
              mov r34.xyz, cb9[r11.w + 4].yzwy
              mov r34.w, cb9[r11.w + 5].x
              dp4 r34.x, r34.xyzw, r19.xyzw
              mov r35.xyz, cb9[r11.w + 5].yzwy
              mov r35.w, cb9[r11.w + 6].x
              dp4 r34.y, r35.xyzw, r19.xyzw
              div r19.xy, r34.xyxx, r18.wwww
              mad r19.xy, r19.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
              add r34.x, r19.x, cb9[r11.w + 9].w
              add r34.y, r19.y, cb9[r11.w + 10].x
              mul r19.xy, r34.xyxx, cb9[r11.w + 9].yzyy
              div r34.xy, cb9[r11.w + 3].yyyy, cb9[r11.w + 8].ywyy
              add r34.zw, -r34.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
              ge r34.zw, r19.xxxy, r34.zzzw
              ge r34.xy, r34.xyxx, r19.xyxx
              or r34.xy, r34.xyxx, r34.zwzz
              or r19.z, r34.y, r34.x
              if_z r19.z
                mov_sat r19.xy, r19.xyxx
                mad r34.x, r19.x, cb9[r11.w + 8].y, cb9[r11.w + 8].z
                mad r34.y, r19.y, cb9[r11.w + 8].w, cb9[r11.w + 9].x
                mul r19.x, r18.w, cb9[r11.w + 10].z
                mad r12.w, cb9[r11.w + 10].y, r18.w, r12.w
                div r12.w, r12.w, r19.x
              endif 
            else 
              mov r19.z, l(-1)
            endif 
            or r18.w, r25.w, r19.z
            if_z r18.w
              max r12.w, r12.w, l(0.00006104)
              and r18.w, l(0x0000ffff), cb9[r11.w + 1].w
              if_nz cb2[58].y
                utof r19.z, r18.w
                mov r25.w, l(0)
                mov r26.w, l(0)
                loop 
                  ige r27.w, r26.w, l(8)
                  breakc_nz r27.w
                  dp2 r35.x, icb[r26.w + 0].yxyy, r9.xwxx
                  dp2 r35.y, icb[r26.w + 0].xyxx, r13.xyxx
                  mad r19.xy, r35.xyxx, cb9[r11.w + 3].yyyy, r34.xyxx
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.x, r19.xyzx, t9.xxxx, s13, r12.w
                  mad r25.w, r19.x, l(0.125000), r25.w
                  iadd r26.w, r26.w, l(1)
                endloop 
              else 
                utof r34.z, r18.w
                sample_c_lz_indexable(texture2darray)(float,float,float,float) r25.w, r34.xyzx, t9.xxxx, s13, r12.w
              endif 
              mul r11.w, r25.w, r25.w
              mul r11.w, r25.w, r11.w
            else 
              mov r11.w, l(1.000000)
            endif 
            mul r13.z, r11.w, r13.z
          else 
            ubfe r11.w, l(4), l(20), cb9[r7.w + 1].w
            ult r12.w, l(0), r11.w
            and r12.w, r5.w, r12.w
            if_nz r12.w
              iadd r11.w, r11.w, cb2[0].x
              imad r11.w, r11.w, l(15), l(-15)
              mad r12.w, |r13.w|, l(-0.200000), l(0.400000)
              lt r18.w, r13.w, l(0.000000)
              and r18.w, r0.z, r18.w
              movc r12.w, r18.w, -r12.w, r12.w
              mad r21.xyz, r11.xyzx, r12.wwww, r10.xyzx
              mov r34.xyz, cb9[r11.w + 6].yzwy
              mov r34.w, cb9[r11.w + 7].x
              dp4 r12.w, r34.xyzw, r21.xyzw
              mov r34.xyz, cb9[r11.w + 7].yzwy
              mov r34.w, cb9[r11.w + 8].x
              dp4 r18.w, r34.xyzw, r21.xyzw
              lt r19.x, r18.w, r12.w
              if_z r19.x
                mov r34.xyz, cb9[r11.w + 4].yzwy
                mov r34.w, cb9[r11.w + 5].x
                dp4 r34.x, r34.xyzw, r21.xyzw
                mov r35.xyz, cb9[r11.w + 5].yzwy
                mov r35.w, cb9[r11.w + 6].x
                dp4 r34.y, r35.xyzw, r21.xyzw
                div r19.yz, r34.xxyx, r18.wwww
                mad r19.yz, r19.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
                add r21.x, r19.y, cb9[r11.w + 9].w
                add r21.y, r19.z, cb9[r11.w + 10].x
                mul r19.yz, r21.xxyx, cb9[r11.w + 9].yyzy
                div r21.xy, cb9[r11.w + 3].yyyy, cb9[r11.w + 8].ywyy
                add r34.xy, -r21.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                ge r34.xy, r19.yzyy, r34.xyxx
                ge r21.xy, r21.xyxx, r19.yzyy
                or r21.xy, r21.xyxx, r34.xyxx
                or r21.x, r21.y, r21.x
                if_z r21.x
                  mov_sat r19.yz, r19.yyzy
                  mad r34.x, r19.y, cb9[r11.w + 8].y, cb9[r11.w + 8].z
                  mad r34.y, r19.z, cb9[r11.w + 8].w, cb9[r11.w + 9].x
                  mul r19.y, r18.w, cb9[r11.w + 10].z
                  mad r12.w, cb9[r11.w + 10].y, r18.w, r12.w
                  div r12.w, r12.w, r19.y
                endif 
              else 
                mov r21.x, l(-1)
              endif 
              or r18.w, r19.x, r21.x
              if_z r18.w
                max r12.w, r12.w, l(0.00006104)
                and r18.w, l(0x0000ffff), cb9[r11.w + 1].w
                if_nz cb2[58].y
                  utof r19.z, r18.w
                  mov r21.xy, l(0,0,0,0)
                  loop 
                    ige r21.z, r21.y, l(8)
                    breakc_nz r21.z
                    dp2 r35.x, icb[r21.y + 0].xyxx, r14.xyxx
                    dp2 r35.y, icb[r21.y + 0].yxyy, r14.xzxx
                    mad r19.xy, r35.xyxx, cb9[r11.w + 3].yyyy, r34.xyxx
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.x, r19.xyzx, t9.xxxx, s13, r12.w
                    mad r21.x, r19.x, l(0.125000), r21.x
                    iadd r21.y, r21.y, l(1)
                  endloop 
                else 
                  utof r34.z, r18.w
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.x, r34.xyzx, t9.xxxx, s13, r12.w
                endif 
                mul r11.w, r21.x, r21.x
                mul r11.w, r21.x, r11.w
              else 
                mov r11.w, l(1.000000)
              endif 
              mul r13.z, r11.w, r13.z
            endif 
          endif 
          mad r11.w, -r14.w, r2.x, l(1.000000)
          mul r11.w, r11.w, r11.w
          mad r11.w, -r11.w, l(0.620000), l(0.620000)
          add r11.w, -r14.w, r11.w
          mad r11.w, r1.w, r11.w, r14.w
          mul r11.w, r13.z, r11.w
          mov r19.x, cb9[r7.w + 0].w
          mov r19.yz, cb9[r7.w + 1].xxyx
          lt r12.w, l(0.000000), r13.w
          mad r34.xyz, r11.wwww, r19.xyzx, r28.xyzx
          dp3_sat r13.w, r11.xyzx, r33.xyzx
          mad r32.xyz, r32.xyzx, r8.wwww, r12.xyzx
          dp3 r8.w, r32.xyzx, r32.xyzx
          rsq r8.w, r8.w
          mul r32.xyz, r8.wwww, r32.xyzx
          dp3 r8.w, r32.xyzx, r12.xyzx
          dp3 r14.w, r11.xyzx, r32.xyzx
          mad r18.w, |r14.w|, r1.z, -|r14.w|
          mad r14.w, |r14.w|, r18.w, l(1.000000)
          mad r18.w, r13.w, r0.w, r3.w
          mul r14.w, r14.w, r14.w
          mul r14.w, r18.w, r14.w
          rcp r14.w, r14.w
          mul r13.w, r17.w, r13.w
          mul r13.w, r13.w, r14.w
          mul r13.z, r13.z, r13.w
          mad r32.xyz, r13.zzzz, r19.xyzx, r31.xyzx
          add_sat r8.w, -r8.w, l(1.000000)
          mul r13.w, r8.w, r8.w
          mul r13.w, r13.w, r13.w
          mul r8.w, r8.w, r13.w
          mul r8.w, r8.w, r13.z
          mad r33.xyz, r8.wwww, r19.xyzx, r30.xyzx
          mad r19.xyz, r11.wwww, r19.xyzx, r29.xyzx
          movc r19.xyz, r0.zzzz, r19.xyzx, r29.xyzx
          movc r28.xyz, r12.wwww, r34.xyzx, r28.xyzx
          movc r29.xyz, r12.wwww, r29.xyzx, r19.xyzx
          movc r30.xyz, r12.wwww, r33.xyzx, r30.xyzx
          movc r31.xyz, r12.wwww, r32.xyzx, r31.xyzx
        endif 
      endif 
    endif 
    break 
    case l(2)
    add r19.xy, -r10.xyxx, cb9[r7.w + 3].zwzz
    add r19.z, -r10.z, cb9[r7.w + 4].x
    dp3 r8.w, r19.xyzx, r19.xyzx
    rsq r8.w, r8.w
    mul r32.xyz, r8.wwww, r19.xyzx
    dp3 r11.w, r11.xyzx, r32.xyzx
    mov_sat r12.w, r11.w
    movc r13.z, r0.z, |r11.w|, r12.w
    lt r13.w, l(0.000000), r13.z
    if_nz r13.w
      mov r32.xyz, cb9[r7.w + 7].yzwy
      mov r32.w, cb9[r7.w + 8].x
      dp4 r13.w, r32.xyzw, r10.xyzw
      lt r14.w, r13.w, l(1.000000)
      if_nz r14.w
        mov r33.xyz, l(1.000000,1.000000,1.000000,0)
        mov r14.w, l(0)
      else 
        add r34.xyz, -r10.xyzx, cb9[r7.w + 0].xyzx
        mul r17.w, cb9[r7.w + 3].x, cb9[r7.w + 3].x
        dp3 r18.w, r34.xyzx, r34.xyzx
        div r17.w, r17.w, r18.w
        min r17.w, r17.w, l(1.000000)
        mad_sat r21.yz, r13.wwww, cb9[r7.w + 2].xxzx, cb9[r7.w + 2].yywy
        mul r34.xy, r21.yzyy, r21.yzyy
        mad r21.yz, r21.yyzy, l(0.000000, -2.000000, -2.000000, 0.000000), l(0.000000, 3.000000, 3.000000, 0.000000)
        mul r21.yz, r21.yyzy, r34.xxyx
        mul r17.w, r17.w, r21.y
        mul r17.w, r21.z, r17.w
        mov r34.xyz, cb9[r7.w + 4].yzwy
        mov r34.w, cb9[r7.w + 5].x
        dp4 r34.x, r34.xyzw, r10.xyzw
        mov r35.xyz, cb9[r7.w + 5].yzwy
        mov r35.w, cb9[r7.w + 6].x
        dp4 r34.y, r35.xyzw, r10.xyzw
        div r20.xy, r34.xyxx, r13.wwww
        lt r13.w, cb9[r7.w + 10].w, l(0.00048828)
        if_nz r13.w
          mad_sat r21.yz, |r20.xxyx|, cb9[r7.w + 12].xxyx, cb9[r7.w + 12].zzwz
          mul r34.xy, r21.yzyy, r21.yzyy
          mad r21.yz, r21.yyzy, l(0.000000, -2.000000, -2.000000, 0.000000), l(0.000000, 3.000000, 3.000000, 0.000000)
          mul r21.yz, r21.yyzy, r34.xxyx
          mul r13.w, r21.z, r21.y
        else 
          mul_sat r34.xyzw, |r20.yyxx|, cb9[r7.w + 11].xyzw
          log r34.xyzw, r34.xyzw
          mul r34.xyzw, r34.xyzw, cb9[r7.w + 12].zzzz
          exp r34.xyzw, r34.xyzw
          add r21.yz, r34.zzwz, r34.xxyx
          log r21.yz, r21.yyzy
          mul r21.yz, r21.yyzy, cb9[r7.w + 12].wwww
          exp r21.yz, r21.yyzy
          mul r18.w, r21.y, cb9[r7.w + 12].x
          mad r21.y, cb9[r7.w + 12].y, r21.z, l(-1.000000)
          mad r18.w, cb9[r7.w + 12].y, r21.z, -r18.w
          div_sat r18.w, r21.y, r18.w
          mul r21.y, r18.w, r18.w
          mad r18.w, r18.w, l(-2.000000), l(3.000000)
          mul r13.w, r18.w, r21.y
        endif 
        mul r14.w, r13.w, r17.w
        and r13.w, l(255), cb9[r7.w + 14].w
        if_nz r13.w
          dp3 r17.w, cb9[r7.w + 13].xyzx, r20.xyzx
          mov r34.x, cb9[r7.w + 13].w
          mov r34.yz, cb9[r7.w + 14].xxyx
          dp3 r18.w, r34.xyzx, r20.xyzx
          frc r34.x, r17.w
          frc r34.y, r18.w
          iadd r13.w, r13.w, l(-1)
          utof r34.z, r13.w
          sample_l_indexable(texture2darray)(float,float,float,float) r33.xyz, r34.xyzx, t20.xyzw, s2, l(0.000000)
        else 
          mov r33.xyz, l(1.000000,1.000000,1.000000,0)
        endif 
      endif 
      mov r34.x, cb9[r7.w + 0].w
      mov r34.yz, cb9[r7.w + 1].xxyx
      mul r33.xyz, r33.xyzx, r34.xyzx
      lt r13.w, l(0.000000), r14.w
      if_nz r13.w
        ubfe r13.w, l(3), l(27), cb9[r7.w + 1].w
        ine r13.w, r13.w, l(1)
        if_nz r13.w
          mad r13.w, |r11.w|, l(-0.200000), l(0.400000)
          lt r17.w, r11.w, l(0.000000)
          and r17.w, r0.z, r17.w
          movc r13.w, r17.w, -r13.w, r13.w
          mad r22.xyz, r11.xyzx, r13.wwww, r10.xyzx
          mov r34.xyz, cb9[r7.w + 6].yzwy
          mov r34.w, cb9[r7.w + 7].x
          dp4 r13.w, r34.xyzw, r22.xyzw
          dp4 r17.w, r32.xyzw, r22.xyzw
          ge r18.w, r17.w, r13.w
          if_nz r18.w
            mov r32.xyz, cb9[r7.w + 4].yzwy
            mov r32.w, cb9[r7.w + 5].x
            dp4 r20.x, r32.xyzw, r22.xyzw
            mov r32.xyz, cb9[r7.w + 5].yzwy
            mov r32.w, cb9[r7.w + 6].x
            dp4 r20.y, r32.xyzw, r22.xyzw
            div r20.xy, r20.xyxx, r17.wwww
            mad_sat r20.xy, r20.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
            mad r22.x, r20.x, cb9[r7.w + 8].y, cb9[r7.w + 8].z
            mad r22.y, r20.y, cb9[r7.w + 8].w, cb9[r7.w + 9].x
            div r13.w, r13.w, r17.w
            max r13.w, r13.w, l(0.00006104)
            and r17.w, l(0x0000ffff), cb9[r7.w + 1].w
            if_nz cb2[58].y
              utof r32.z, r17.w
              mov r18.w, l(0)
              mov r20.x, l(0)
              loop 
                ige r20.y, r20.x, l(8)
                breakc_nz r20.y
                dp2 r34.x, icb[r20.x + 0].xyxx, r25.xyxx
                dp2 r34.y, icb[r20.x + 0].yxyy, r25.xzxx
                mad r32.xy, r34.xyxx, cb9[r7.w + 3].yyyy, r22.xyxx
                sample_c_lz_indexable(texture2darray)(float,float,float,float) r20.y, r32.xyzx, t9.xxxx, s13, r13.w
                mad r18.w, r20.y, l(0.125000), r18.w
                iadd r20.x, r20.x, l(1)
              endloop 
            else 
              utof r22.z, r17.w
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r18.w, r22.xyzx, t9.xxxx, s13, r13.w
            endif 
            mul r13.w, r18.w, r18.w
            mul r13.w, r18.w, r13.w
          else 
            mov r13.w, l(1.000000)
          endif 
        else 
          mov r13.w, l(1.000000)
        endif 
        mul r13.w, r13.w, r14.w
        lt r14.w, l(0.000000), r13.w
        if_nz r14.w
          mul r14.w, r1.z, cb9[r7.w + 1].z
          mul r14.w, r12.w, r14.w
          ubfe r17.w, l(4), l(16), cb9[r7.w + 1].w
          ult r20.x, l(0), r17.w
          and r20.x, r0.y, r20.x
          if_nz r20.x
            iadd r17.w, r17.w, cb2[0].x
            imad r17.w, r17.w, l(15), l(-15)
            mad r20.x, |r11.w|, l(-0.200000), l(0.400000)
            lt r20.y, r11.w, l(0.000000)
            and r20.y, r0.z, r20.y
            movc r20.x, r20.y, -r20.x, r20.x
            mad r23.xyz, r11.xyzx, r20.xxxx, r10.xyzx
            mov r32.xyz, cb9[r17.w + 6].yzwy
            mov r32.w, cb9[r17.w + 7].x
            dp4 r20.x, r32.xyzw, r23.xyzw
            mov r32.xyz, cb9[r17.w + 7].yzwy
            mov r32.w, cb9[r17.w + 8].x
            dp4 r20.y, r32.xyzw, r23.xyzw
            lt r21.y, r20.y, r20.x
            if_z r21.y
              mov r32.xyz, cb9[r17.w + 4].yzwy
              mov r32.w, cb9[r17.w + 5].x
              dp4 r22.x, r32.xyzw, r23.xyzw
              mov r32.xyz, cb9[r17.w + 5].yzwy
              mov r32.w, cb9[r17.w + 6].x
              dp4 r22.y, r32.xyzw, r23.xyzw
              div r22.xy, r22.xyxx, r20.yyyy
              mad r22.xy, r22.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
              add r23.x, r22.x, cb9[r17.w + 9].w
              add r23.y, r22.y, cb9[r17.w + 10].x
              mul r22.xy, r23.xyxx, cb9[r17.w + 9].yzyy
              div r23.xy, cb9[r17.w + 3].yyyy, cb9[r17.w + 8].ywyy
              add r32.xy, -r23.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
              ge r32.xy, r22.xyxx, r32.xyxx
              ge r23.xy, r23.xyxx, r22.xyxx
              or r23.xy, r23.xyxx, r32.xyxx
              or r21.z, r23.y, r23.x
              if_z r21.z
                mov_sat r22.xy, r22.xyxx
                mad r23.x, r22.x, cb9[r17.w + 8].y, cb9[r17.w + 8].z
                mad r23.y, r22.y, cb9[r17.w + 8].w, cb9[r17.w + 9].x
                mul r22.x, r20.y, cb9[r17.w + 10].z
                mad r20.x, cb9[r17.w + 10].y, r20.y, r20.x
                div r20.x, r20.x, r22.x
              endif 
            else 
              mov r21.z, l(-1)
            endif 
            or r20.y, r21.y, r21.z
            if_z r20.y
              max r20.x, r20.x, l(0.00006104)
              and r20.y, l(0x0000ffff), cb9[r17.w + 1].w
              if_nz cb2[58].y
                utof r22.z, r20.y
                mov r21.yz, l(0,0,0,0)
                loop 
                  ige r26.w, r21.z, l(8)
                  breakc_nz r26.w
                  dp2 r32.x, icb[r21.z + 0].xyxx, r26.xyxx
                  dp2 r32.y, icb[r21.z + 0].yxyy, r26.xzxx
                  mad r22.xy, r32.xyxx, cb9[r17.w + 3].yyyy, r23.xyxx
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.x, r22.xyzx, t9.xxxx, s13, r20.x
                  mad r21.y, r22.x, l(0.125000), r21.y
                  iadd r21.z, r21.z, l(1)
                endloop 
              else 
                utof r23.z, r20.y
                sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.y, r23.xyzx, t9.xxxx, s13, r20.x
              endif 
              mul r17.w, r21.y, r21.y
              mul r17.w, r21.y, r17.w
            else 
              mov r17.w, l(1.000000)
            endif 
            mul r13.w, r13.w, r17.w
          else 
            ubfe r7.w, l(4), l(20), cb9[r7.w + 1].w
            ult r17.w, l(0), r7.w
            and r17.w, r5.w, r17.w
            if_nz r17.w
              iadd r7.w, r7.w, cb2[0].x
              imad r7.w, r7.w, l(15), l(-15)
              mad r17.w, |r11.w|, l(-0.200000), l(0.400000)
              lt r20.x, r11.w, l(0.000000)
              and r20.x, r0.z, r20.x
              movc r17.w, r20.x, -r17.w, r17.w
              mad r24.xyz, r11.xyzx, r17.wwww, r10.xyzx
              mov r32.xyz, cb9[r7.w + 6].yzwy
              mov r32.w, cb9[r7.w + 7].x
              dp4 r17.w, r32.xyzw, r24.xyzw
              mov r32.xyz, cb9[r7.w + 7].yzwy
              mov r32.w, cb9[r7.w + 8].x
              dp4 r20.x, r32.xyzw, r24.xyzw
              lt r20.y, r20.x, r17.w
              if_z r20.y
                mov r32.xyz, cb9[r7.w + 4].yzwy
                mov r32.w, cb9[r7.w + 5].x
                dp4 r22.x, r32.xyzw, r24.xyzw
                mov r32.xyz, cb9[r7.w + 5].yzwy
                mov r32.w, cb9[r7.w + 6].x
                dp4 r22.y, r32.xyzw, r24.xyzw
                div r22.xy, r22.xyxx, r20.xxxx
                mad r22.xy, r22.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                add r23.x, r22.x, cb9[r7.w + 9].w
                add r23.y, r22.y, cb9[r7.w + 10].x
                mul r22.xy, r23.xyxx, cb9[r7.w + 9].yzyy
                div r23.xy, cb9[r7.w + 3].yyyy, cb9[r7.w + 8].ywyy
                add r24.xy, -r23.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                ge r24.xy, r22.xyxx, r24.xyxx
                ge r23.xy, r23.xyxx, r22.xyxx
                or r23.xy, r23.xyxx, r24.xyxx
                or r21.z, r23.y, r23.x
                if_z r21.z
                  mov_sat r22.xy, r22.xyxx
                  mad r23.x, r22.x, cb9[r7.w + 8].y, cb9[r7.w + 8].z
                  mad r23.y, r22.y, cb9[r7.w + 8].w, cb9[r7.w + 9].x
                  mul r22.x, r20.x, cb9[r7.w + 10].z
                  mad r17.w, cb9[r7.w + 10].y, r20.x, r17.w
                  div r17.w, r17.w, r22.x
                endif 
              else 
                mov r21.z, l(-1)
              endif 
              or r20.x, r20.y, r21.z
              if_z r20.x
                max r17.w, r17.w, l(0.00006104)
                and r20.x, l(0x0000ffff), cb9[r7.w + 1].w
                if_nz cb2[58].y
                  utof r22.z, r20.x
                  mov r20.y, l(0)
                  mov r21.z, l(0)
                  loop 
                    ige r24.x, r21.z, l(8)
                    breakc_nz r24.x
                    dp2 r24.x, icb[r21.z + 0].xyxx, r27.xyxx
                    dp2 r24.y, icb[r21.z + 0].yxyy, r27.xzxx
                    mad r22.xy, r24.xyxx, cb9[r7.w + 3].yyyy, r23.xyxx
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.x, r22.xyzx, t9.xxxx, s13, r17.w
                    mad r20.y, r22.x, l(0.125000), r20.y
                    iadd r21.z, r21.z, l(1)
                  endloop 
                else 
                  utof r23.z, r20.x
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r20.y, r23.xyzx, t9.xxxx, s13, r17.w
                endif 
                mul r7.w, r20.y, r20.y
                mul r7.w, r20.y, r7.w
              else 
                mov r7.w, l(1.000000)
              endif 
              mul r13.w, r7.w, r13.w
            endif 
          endif 
          mad r7.w, -r13.z, r2.x, l(1.000000)
          mul r7.w, r7.w, r7.w
          mad r7.w, -r7.w, l(0.620000), l(0.620000)
          add r7.w, -r13.z, r7.w
          mad r7.w, r1.w, r7.w, r13.z
          mul r7.w, r13.w, r7.w
          lt r11.w, l(0.000000), r11.w
          mad r22.xyz, r7.wwww, r33.xyzx, r28.xyzx
          mad r19.xyz, r19.xyzx, r8.wwww, r12.xyzx
          dp3 r8.w, r19.xyzx, r19.xyzx
          rsq r8.w, r8.w
          mul r19.xyz, r8.wwww, r19.xyzx
          dp3 r8.w, r19.xyzx, r12.xyzx
          dp3 r13.z, r11.xyzx, r19.xyzx
          mad r17.w, |r13.z|, r1.z, -|r13.z|
          mad r13.z, |r13.z|, r17.w, l(1.000000)
          mad r12.w, r12.w, r0.w, r3.w
          mul r13.z, r13.z, r13.z
          mul r12.w, r12.w, r13.z
          rcp r12.w, r12.w
          mul r12.w, r14.w, r12.w
          mul r12.w, r12.w, r13.w
          mul r12.w, r12.w, l(0.250000)
          mad r19.xyz, r12.wwww, r33.xyzx, r31.xyzx
          add_sat r8.w, -r8.w, l(1.000000)
          mul r13.z, r8.w, r8.w
          mul r13.z, r13.z, r13.z
          mul r8.w, r8.w, r13.z
          mul r8.w, r8.w, r12.w
          mad r23.xyz, r8.wwww, r33.xyzx, r30.xyzx
          mad r24.xyz, r7.wwww, r33.xyzx, r29.xyzx
          movc r24.xyz, r0.zzzz, r24.xyzx, r29.xyzx
          movc r28.xyz, r11.wwww, r22.xyzx, r28.xyzx
          movc r29.xyz, r11.wwww, r29.xyzx, r24.xyzx
          movc r30.xyz, r11.wwww, r23.xyzx, r30.xyzx
          movc r31.xyz, r11.wwww, r19.xyzx, r31.xyzx
        endif 
      endif 
    endif 
    break 
    default 
    break 
  endswitch 
  iadd r6.w, r6.w, l(1)
endloop 
mad r2.xyz, r4.xwyx, l(1.000000, 3.000000, 2.000000, 0.000000), l(0.000000, 0.500000, -1.000000, 0.000000)
ftou r0.x, r2.y
mad r4.xyz, r5.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r0.y, r4.x
ieq r0.y, r0.x, r0.y
movc r0.yw, r0.yyyy, r4.yyyz, l(0,-1.000000,0,0)
mad r4.xyz, r6.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r1.z, r4.x
ieq r1.z, r0.x, r1.z
movc r1.zw, r1.zzzz, r4.yyyz, l(0,0,-1.000000,0)
mad r4.xyz, r7.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r3.w, r4.x
ieq r3.w, r0.x, r3.w
movc r4.xy, r3.wwww, r4.yzyy, l(-1.000000,0,0,0)
mad r5.xyz, r8.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r3.w, r5.x
ieq r0.x, r0.x, r3.w
movc r4.zw, r0.xxxx, r5.yyyz, l(0,0,-1.000000,0)
mov r5.x, r0.y
mov r5.y, r1.z
mov r5.zw, r4.xxxz
add r5.xyzw, -r2.xxxx, r5.xyzw
ge r5.xyzw, |r5.xyzw|, l(0.00902149, 0.00902149, 0.00902149, 0.00902149)
movc r5.xyzw, r5.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
add r0.x, r5.y, r5.x
add r0.x, r5.z, r0.x
add r0.x, r5.w, r0.x
mul r0.y, r1.w, r5.y
mad r0.y, r5.x, r0.w, r0.y
mad r0.y, r5.z, r4.y, r0.y
mad r0.y, r5.w, r4.w, r0.y
div r2.w, r0.y, r0.x
ge r0.x, l(0.000000), r0.x
movc r2.yz, r0.xxxx, l(0,0,0,0), r2.zzwz
and r0.xy, r1.xyxx, l(1, 1, 0, 0)
ieq r0.x, r0.y, r0.x
movc r0.xyw, r0.xxxx, r2.xyxz, r2.xzxy
mad r0.x, -r0.w, l(0.500000), r0.x
add r2.y, r0.x, r0.w
mad r2.z, -r0.y, l(0.500000), r0.x
add r2.x, r0.y, r2.z
mul r0.xyw, r3.xyxz, r28.xyxz
mad r0.xyw, r29.xyxz, r2.xyxz, r0.xyxw
mul r4.xyz, r30.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
mad r4.xyz, r31.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
add r0.xyw, r0.xyxw, r4.xyxz
add r4.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r4.xyz, r4.xyzx, r30.xyzx
mad r2.xyz, r31.xyzx, r2.xyzx, r4.xyzx
mad r2.xyz, r28.xyzx, r3.xyzx, r2.xyzx
movc r0.xyz, r0.zzzz, r0.xywx, r2.xyzx
lt r0.w, l(0.000000), cb2[9].z
if_nz r0.w
  dp3 r0.w, r10.xyzx, r10.xyzx
  rsq r1.z, r0.w
  mul r2.xyz, r1.zzzz, r10.xyzx
  sqrt r0.w, r0.w
  lt r1.z, l(0.000000), cb2[13].w
  if_nz r1.z
    mad r1.zw, r0.wwww, cb2[15].xxxy, cb2[14].zzzw
    mul r1.zw, r1.zzzw, cb2[16].xxxy
    lt r2.w, l(0.010000), |r10.z|
    mul r3.xy, r10.zzzz, cb2[15].zwzz
    mul r3.zw, r3.xxxy, l(0.000000, 0.000000, -1.442695, -1.442695)
    exp r3.zw, r3.zzzw
    add r3.zw, -r3.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    div r3.xy, r3.zwzz, r3.xyxx
    mul r3.xy, r1.zwzz, r3.xyxx
    movc r1.zw, r2.wwww, r3.xxxy, r1.zzzw
    mul r3.xyz, r1.zzzz, cb2[12].xyzx
    exp r3.xyz, r3.xyzx
    mul r4.xyz, r1.wwww, cb2[12].xyzx
    exp r4.xyz, r4.xyzx
    add r4.xyz, -r3.xyzx, r4.xyzx
    mad r3.xyz, cb2[13].wwww, r4.xyzx, r3.xyzx
  else 
    mad r1.z, r0.w, cb2[15].x, cb2[14].z
    mul r1.z, r1.z, cb2[16].x
    lt r1.w, l(0.010000), |r10.z|
    mul r2.w, r10.z, cb2[15].z
    mul r3.w, r2.w, l(-1.442695)
    exp r3.w, r3.w
    add r3.w, -r3.w, l(1.000000)
    div r2.w, r3.w, r2.w
    mul r2.w, r1.z, r2.w
    movc r1.z, r1.w, r2.w, r1.z
    mul r4.xyz, r1.zzzz, cb2[12].xyzx
    exp r3.xyz, r4.xyzx
  endif 
  mad r3.xyz, r3.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r3.xyz, r3.xyzx, -cb2[9].zzzz
  dp3 r1.z, cb2[7].yzwy, -r2.xyzx
  mad r1.w, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r2.x, cb2[8].w, -r1.z, l(1.000000)
  mul r2.x, r2.x, r2.x
  mul r2.x, r2.x, l(12.566371)
  div r1.w, r1.w, r2.x
  add r0.w, r0.w, -cb2[10].w
  mul_sat r0.w, r0.w, cb2[11].w
  mul r0.w, r0.w, r1.w
  mov_sat r1.z, r1.z
  mad r1.z, r1.z, r1.z, l(1.000000)
  mad r1.z, r1.z, l(0.05968310), l(-1.000000)
  mad r1.z, cb2[8].z, r1.z, l(1.000000)
  mul r2.xyz, r0.wwww, cb2[11].xyzx
  mad r2.xyz, r1.zzzz, cb2[10].xyzx, r2.xyzx
  mul r2.xyz, r2.xyzx, cb2[9].wwww
  add r4.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r2.xyz, r2.xyzx, r4.xyzx
  mad r2.xyz, r0.xyzx, r3.xyzx, r2.xyzx
else 
  mul r0.w, r10.z, cb2[6].x
  mad r1.z, cb2[6].x, r10.z, cb2[5].x
  lt r1.w, |r0.w|, l(0.000100)
  min r2.w, r1.z, l(64.000000)
  mul r2.w, r2.w, l(1.442695)
  exp r2.w, r2.w
  mov_sat r3.x, cb2[6].z
  lt r3.y, r1.z, l(0.000000)
  add r1.z, r1.z, l(1.000000)
  movc r1.z, r3.y, r2.w, r1.z
  add r1.z, r1.z, -cb2[6].z
  movc r0.w, r1.w, l(1.000000), r0.w
  div r0.w, r1.z, r0.w
  movc r0.w, r1.w, r3.x, r0.w
  mul r0.w, r0.w, cb2[5].z
  dp3 r1.z, r10.xyzx, r10.xyzx
  sqrt r1.w, r1.z
  mad r0.w, r0.w, r1.w, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  rsq r1.z, r1.z
  mul r3.xyz, r1.zzzz, r10.xyzx
  dp3 r1.z, cb2[7].yzwy, r3.xyzx
  mad_sat r1.z, cb2[8].y, r1.z, cb2[8].x
  add r3.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r3.xyzw, r1.zzzz, r3.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r3.w
  add r3.xyz, -r0.xyzx, r3.xyzx
  mad r2.xyz, r0.wwww, r3.xyzx, r0.xyzx
endif 
mul r0.xyzw, r2.xyzx, cb1[85].yyyy
ge r2.xyzw, r0.wyzw, l(0.00006104, 0.00006104, 0.00006104, 0.00006104)
and r0.xyzw, r0.xyzw, r2.xyzw
min r0.xyzw, r0.xyzw, l(65024.000000, 65024.000000, 64512.000000, 65024.000000)
store_uav_typed u0.xyzw, r1.xyyy, r0.xyzw
ret 
// Approximately 1396 instruction slots used
