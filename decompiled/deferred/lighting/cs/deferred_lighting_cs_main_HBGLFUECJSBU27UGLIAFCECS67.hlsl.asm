//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:23:26 2021
//
//
// Buffer Definitions: 
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4
//   uint enableCountDebug;             // Offset:  836 Size:     4
//   uint centerGroupIDx;               // Offset:  840 Size:     4
//   uint centerGroupIDy;               // Offset:  844 Size:     4
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4
//   float drawNumLighstScale;          // Offset:  856 Size:     4
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4
//   uint probeDebug;                   // Offset:  864 Size:     4
//   float probeDebugRadius;            // Offset:  868 Size:     4
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4
//   uint showAO;                       // Offset:  880 Size:     4
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// cbuffer LightingPackCBuffer
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } lightConstantsCB[273];           // Offset:    0 Size: 65520
//
// }
//
// cbuffer RefProbePackCBuffer
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } refProbeConstantsCB[273];        // Offset:    0 Size: 61152
//
// }
//
// cbuffer RefProbeBlendPackCBuffer
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } refProbeAttenuationConstantsCB[682];// Offset:    0 Size: 65472
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for gPermutedTilingBuffer
// {
//
//   struct PermutedTilingBuffer
//   {
//       
//       uint2 data;                    // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:     8
//
// }
//
// Resource bind info for gDeferredCullBits
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for lightingDebug
// {
//
//   struct LightingDebug
//   {
//       
//       struct LightingDebugCounts
//       {
//           
//           uint visibleLights;        // Offset:    0
//           uint activeLights;         // Offset:    4
//           uint litLights;            // Offset:    8
//           uint visibleProbes;        // Offset:   12
//           uint activeProbes;         // Offset:   16
//
//       } maxCounts;                   // Offset:    0
//       
//       struct LightingDebugCounts
//       {
//           
//           uint visibleLights;        // Offset:   20
//           uint activeLights;         // Offset:   24
//           uint litLights;            // Offset:   28
//           uint visibleProbes;        // Offset:   32
//           uint activeProbes;         // Offset:   36
//
//       } centerCounts;                // Offset:   20
//       
//       struct LightingDebugCounts
//       {
//           
//           uint visibleLights;        // Offset:   40
//           uint activeLights;         // Offset:   44
//           uint litLights;            // Offset:   48
//           uint visibleProbes;        // Offset:   52
//           uint activeProbes;         // Offset:   56
//
//       } sumDeferredCounts;           // Offset:   40
//       
//       struct LightingDebugCounts
//       {
//           
//           uint visibleLights;        // Offset:   60
//           uint activeLights;         // Offset:   64
//           uint litLights;            // Offset:   68
//           uint visibleProbes;        // Offset:   72
//           uint activeProbes;         // Offset:   76
//
//       } sumForwardCounts;            // Offset:   60
//       float3 cameraWorldPos;         // Offset:   80
//       float3 pickedWldPos;           // Offset:   92
//       uint numPickedLights;          // Offset:  104
//       uint numPickedProbes;          // Offset:  108
//       
//       struct LightingDebugLight
//       {
//           
//           uint flags;                // Offset:  112
//           float3 wldOrigin;          // Offset:  116
//           float activeAttenuation;   // Offset:  128
//           float litAttenuation;      // Offset:  132
//
//       } pickedLights[32];            // Offset:  112
//       
//       struct LightingDebugProbe
//       {
//           
//           uint flags;                // Offset:  880
//           float3 wldOrigin;          // Offset:  884
//           float weight;              // Offset:  896
//
//       } pickedProbes[32];            // Offset:  880
//       uint overdrawHistogram[64];    // Offset: 1520
//       uint overdrawSum;              // Offset: 1776
//       uint overdrawMax;              // Offset: 1780
//       float padding0;                // Offset: 1784
//       float padding1;                // Offset: 1788
//
//   } $Element;                        // Offset:    0 Size:  1792
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// samplerPointClamp                 sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// GBufferDiffuseColor               texture  float4          2d             t0      1 
// GBufferNormalAndGloss             texture  float4          2d             t1      1 
// GBufferSpecularColorAndOcclusion    texture  float4          2d             t2      1 
// GBufferDepth                      texture   float          2d             t4      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// gDownsampledScene                 texture  float4          2d            t21      1 
// gMotionVectors                    texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// gPermutedTilingBuffer             texture  struct         r/o            t25      1 
// gDeferredCullBits                 texture  struct         r/o            t26      1 
// gSSAOTexture                      texture   float          2d            t27      1 
// gSSAODepthTexture                 texture   float          2d            t28      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// litBuffer                             UAV  float3          2d             u0      1 
// lightingDebug                         UAV  struct         r/w             u2      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
// LightingPackCBuffer               cbuffer      NA          NA            cb9      1 
// RefProbePackCBuffer               cbuffer      NA          NA           cb10      1 
// RefProbeBlendPackCBuffer          cbuffer      NA          NA           cb11      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB1[86], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_constantbuffer CB9[4095], dynamicIndexed
dcl_constantbuffer CB10[3822], dynamicIndexed
dcl_constantbuffer CB11[4092], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s4, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_structured t25, 8
dcl_resource_structured t26, 4
dcl_resource_texture2d (float,float,float,float) t27
dcl_resource_texture2d (float,float,float,float) t28
dcl_resource_texture2darray (float,float,float,float) t31
dcl_uav_typed_texture2d (float,float,float,float) u0
dcl_uav_structured u2, 1792
dcl_input vThreadIDInGroupFlattened
dcl_input vThreadGroupID.x
dcl_input vThreadIDInGroup.xy
dcl_temps 46
dcl_tgsm_raw g0, 4
dcl_tgsm_raw g1, 20
dcl_tgsm_raw g2, 20
dcl_thread_group 8, 8, 1
if_z vThreadIDInGroupFlattened.x
  store_raw g0.x, l(0), l(0)
  store_raw g1.xyzw, l(0), l(0,0,0,0)
  store_raw g1.x, l(16), l(0)
  store_raw g2.xyzw, l(0), l(0,0,0,0)
  store_raw g2.x, l(16), l(0)
endif 
sync_g_t
ld_structured_indexable(structured_buffer, stride=8)(mixed,mixed,mixed,mixed) r0.xy, vThreadGroupID.x, l(0), t25.xyxx
and r0.xy, r0.xyxx, l(4095, 4095, 0, 0)
imad r1.xy, r0.xyxx, l(8, 8, 0, 0), vThreadIDInGroup.xyxx
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.xyww, t1.xyzw
ftou r0.zw, cb1[44].xxxy
ult r0.zw, r1.xxxy, r0.zzzw
and r0.z, r0.w, r0.z
lt r0.w, l(0.000000), r2.z
and r0.z, r0.w, r0.z
if_z r0.z
  ret 
endif 
ld_indexable(texture2d)(float,float,float,float) r3.xyzw, r1.xyww, t2.xyzw
utof r4.xy, r1.xyxx
add r4.zw, r4.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
mul r5.xy, r4.zwzz, cb1[44].zwzz
sample_l_indexable(texture2d)(float,float,float,float) r0.w, r5.xyxx, t27.yzwx, s4, l(0.000000)
mul r0.w, r0.w, r3.z
if_nz cb2[55].x
  mul r3.z, r0.w, l(0.750000)
  store_uav_typed u0.xyzw, r1.xyyy, r3.zzzz
  ret 
else 
  movc r3.z, cb2[54].w, r0.w, l(1.000000)
endif 
ge r0.w, r2.z, l(0.500000)
ld_indexable(texture2d)(float,float,float,float) r5.x, r1.xyww, t4.xyzw
ld_indexable(texture2d)(float,float,float,float) r5.yzw, r1.xyww, t0.wxyz
ld_aoffimmi_indexable(-1,0,0)(texture2d)(float,float,float,float) r6.xyz, r1.xyww, t2.xywz
ld_aoffimmi_indexable(0,-1,0)(texture2d)(float,float,float,float) r7.xyz, r1.xyww, t2.xywz
ld_aoffimmi_indexable(1,0,0)(texture2d)(float,float,float,float) r8.xyz, r1.xyww, t2.xywz
ld_aoffimmi_indexable(0,1,0)(texture2d)(float,float,float,float) r9.xyz, r1.xyzw, t2.xywz
ge r10.x, r5.x, l(0.984375)
mul r1.z, r5.x, l(1.01587307)
mad r1.w, r5.x, l(64.000000), l(-63.000000)
movc r1.z, r10.x, r1.w, r1.z
max r1.z, r1.z, l(0.00000001)
rcp r10.y, r1.z
and r1.zw, r0.zzzz, r10.xxxy
add r4.zw, r4.zzzw, -cb1[71].xxxy
mul r4.zw, r4.zzzw, cb1[44].zzzw
mad r4.zw, r4.zzzw, l(0.000000, 0.000000, 2.000000, -2.000000), l(0.000000, 0.000000, -1.000000, 1.000000)
mul r10.x, r4.z, cb1[12].x
mul r10.y, r4.w, cb1[13].y
mov r10.z, l(1.000000)
mul r10.xyz, r1.wwww, r10.xyzx
mul r11.xyz, r10.yyyy, cb1[17].xyzx
mad r10.xyw, r10.xxxx, cb1[16].xyxz, r11.xyxz
mad r10.xyz, r10.zzzz, cb1[18].xyzx, r10.xywx
mad r0.z, r2.w, l(3.000000), l(0.500000)
ftou r0.z, r0.z
mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r2.xy, r2.xyxx, l(0.850000, 0.850000, 0.000000, 0.000000)
dp2 r2.w, r2.xyxx, r2.xyxx
add r11.zw, -r2.wwww, l(0.000000, 0.000000, 2.000000, 1.000000)
sqrt r2.w, r11.z
mul r11.xy, r2.wwww, r2.xyxx
and r12.xyzw, r0.zzzz, l(2, 1, 2, 1)
movc r12.xyzw, r12.zwxy, l(-1.000000,-1.000000,1,1), l(1.000000,1.000000,0,0)
xor r0.z, r12.w, r12.z
movc r12.z, r0.z, l(-1.000000), l(1.000000)
mul r2.xyw, r12.xyxz, l(-1.000000, 0.000000, 0.000000, 1.000000)
mul r13.xyz, r12.xyzx, l(1.000000, -2.000000, 1.000000, 0.000000)
mul r11.xyz, r11.xywx, l(0.40824831, 0.70710677, 0.57735026, 0.000000)
mul r2.xyw, r2.xyxw, r11.yyyy
mad r2.xyw, r13.xyxz, r11.xxxx, r2.xyxw
mad r11.xyz, r12.xyzx, r11.zzzz, r2.xywx
movc r0.z, r0.w, l(-0.500000), l(-0.00146628)
add r0.z, r0.z, r2.z
mul_sat r2.y, r0.z, l(2.00982332)
dp3 r0.z, -r10.xyzx, -r10.xyzx
rsq r0.z, r0.z
mul r12.xyz, r0.zzzz, -r10.xyzx
dp2 r2.z, r4.xyxx, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r2.z, r2.z
mul r2.z, r2.z, l(52.982918)
frc r2.z, r2.z
mad r2.z, r2.z, l(6.28318548), cb1[70].w
sincos r4.x, r13.x, r2.z
utof r2.zw, r1.yyyx
dp2 r2.z, r2.zwzz, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r2.z, r2.z
mul r2.z, r2.z, l(52.982918)
frc r2.z, r2.z
mad r2.z, r2.z, l(6.28318548), cb1[70].w
sincos r5.x, r14.x, r2.z
dp3_sat r2.x, r11.xyzx, r12.xyzx
dp3 r2.z, -r12.xyzx, r11.xyzx
add r2.z, r2.z, r2.z
mad r15.xyz, r11.xyzx, -r2.zzzz, -r12.xyzx
mul r2.z, r2.y, l(17.000000)
exp r2.z, r2.z
add r2.z, r2.z, l(2.000000)
div r2.z, l(2.000000), r2.z
sqrt r2.w, r2.z
mul r4.zw, cb1[44].xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
ftou r14.yz, r4.zzwz
ieq r14.yz, r1.xxyx, r14.yyzy
and r6.w, r14.z, r14.y
lt r7.w, l(0.83333331), r2.y
lt r8.w, l(60.000000), r1.w
and r7.w, r7.w, r8.w
if_nz r7.w
  mul r14.yzw, r10.yyyy, cb1[9].xxyw
  mad r14.yzw, r10.xxxx, cb1[8].xxyw, r14.yyzw
  mad r14.yzw, r10.zzzz, cb1[10].xxyw, r14.yyzw
  add r14.yzw, r14.yyzw, cb1[11].xxyw
  mad r16.xyz, r15.xyzx, l(2000.000000, 2000.000000, 2000.000000, 0.000000), r10.xyzx
  mul r17.xyz, r16.yyyy, cb1[9].xywx
  mad r16.xyw, r16.xxxx, cb1[8].xyxw, r17.xyxz
  mad r16.xyz, r16.zzzz, cb1[10].xywx, r16.xywx
  add r16.xyz, r16.xyzx, cb1[11].xywx
  ge r7.w, r16.z, r14.w
  if_nz r7.w
    rcp r17.z, r14.w
    mul r17.xy, r14.yzyy, r17.zzzz
    rcp r18.z, r16.z
    mul r18.xy, r16.xyxx, r18.zzzz
    lt r14.yz, l(0.000000, 1.000000, 1.000000, 0.000000), r18.xxyx
    mad r19.xyzw, r16.xxyy, r18.zzzz, l(-1.000000, 1.000000, -1.000000, 1.000000)
    mad r20.xyzw, r16.xxyy, r18.zzzz, -r17.xxyy
    lt r16.xy, r18.xyxx, l(-1.000000, -1.000000, 0.000000, 0.000000)
    div r19.xyzw, r19.xyzw, r20.xyzw
    and r16.xy, r16.xyxx, r19.ywyy
    movc r14.yz, r14.yyzy, r19.xxzx, r16.xxyx
    max r7.w, r14.z, r14.y
    add r16.xyw, r17.xyxz, -r18.xyxz
    mad r16.xyw, r7.wwww, r16.xyxw, r18.xyxz
    mad r14.yz, r17.xxyx, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
    mad r18.xy, r16.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    add r14.yz, r14.yyzy, -r18.xxyx
    mul r14.yz, r4.zzwz, |r14.yyzy|
    max r7.w, r14.z, r14.y
    max r7.w, r7.w, l(1.000000)
    rcp r7.w, r7.w
    mad r17.xyz, r17.xyzx, l(0.500000, -0.500000, 1.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    mad r19.xyz, r16.xywx, l(0.500000, -0.500000, 1.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    add r20.xyz, -r17.xyzx, r19.xyzx
    mad r17.xyz, r7.wwww, r20.xyzx, r17.xyzx
    add r19.xyz, -r17.xyzx, r19.xyzx
    mul r20.xyz, r19.xyzx, l(0.031250, 0.031250, 0.031250, 0.000000)
    mul r4.zw, r4.zzzw, |r20.xxxy|
    max r4.z, r4.w, r4.z
    log r4.z, r4.z
    round_pi r4.z, r4.z
    max r4.z, r4.z, l(0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r17.xyxx, t28.yzwx, s1, r4.z
    mad r21.xyz, r19.xyzx, l(0.031250, 0.031250, 0.031250, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r4.w, |r4.w|, |r7.w|
    mul r4.w, r21.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    and r8.w, r4.w, l(1)
    mad r21.xyz, r19.xyzx, l(0.062500, 0.062500, 0.062500, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r9.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r7.w, |r7.w|, |r9.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    bfi r4.w, l(1), l(0), r4.w, l(2)
    movc r4.w, r7.w, r4.w, r8.w
    mad r21.xyz, r19.xyzx, l(0.093750, 0.093750, 0.093750, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r8.w, |r9.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.w, r4.w, l(4)
    movc r4.w, r8.w, r9.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.125000, 0.125000, 0.125000, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.w, r4.w, l(8)
    movc r4.w, r7.w, r9.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.156250, 0.156250, 0.156250, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.w, r4.w, l(16)
    movc r4.w, r8.w, r9.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.187500, 0.187500, 0.187500, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.w, r4.w, l(32)
    movc r4.w, r7.w, r9.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.218750, 0.218750, 0.218750, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.w, r4.w, l(64)
    movc r4.w, r8.w, r9.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.w, r4.w, l(128)
    movc r4.w, r7.w, r9.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.281250, 0.281250, 0.281250, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.w, r4.w, l(256)
    movc r4.w, r8.w, r9.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.312500, 0.312500, 0.312500, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.w, r4.w, l(512)
    movc r4.w, r7.w, r9.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.343750, 0.343750, 0.343750, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.w, r4.w, l(1024)
    movc r4.w, r8.w, r9.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.375000, 0.375000, 0.375000, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.w, r4.w, l(2048)
    movc r4.w, r7.w, r9.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.406250, 0.406250, 0.406250, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.w, r4.w, l(4096)
    movc r4.w, r8.w, r9.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.437500, 0.437500, 0.437500, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.w, r4.w, l(8192)
    movc r4.w, r7.w, r9.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.468750, 0.468750, 0.468750, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.w, r4.w, l(0x00004000)
    movc r4.w, r8.w, r9.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.w, r4.w, l(0x00008000)
    movc r4.w, r7.w, r9.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.531250, 0.531250, 0.531250, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.w, r4.w, l(0x00010000)
    movc r4.w, r8.w, r9.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.562500, 0.562500, 0.562500, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.w, r4.w, l(0x00020000)
    movc r4.w, r7.w, r9.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.593750, 0.593750, 0.593750, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.w, r4.w, l(0x00040000)
    movc r4.w, r8.w, r9.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.625000, 0.625000, 0.625000, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.w, r4.w, l(0x00080000)
    movc r4.w, r7.w, r9.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.656250, 0.656250, 0.656250, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.w, r4.w, l(0x00100000)
    movc r4.w, r8.w, r9.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.687500, 0.687500, 0.687500, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.w, r4.w, l(0x00200000)
    movc r4.w, r7.w, r9.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.718750, 0.718750, 0.718750, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.w, r4.w, l(0x00400000)
    movc r4.w, r8.w, r9.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.750000, 0.750000, 0.750000, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.w, r4.w, l(0x00800000)
    movc r4.w, r7.w, r9.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.781250, 0.781250, 0.781250, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.w, r4.w, l(0x01000000)
    movc r4.w, r8.w, r9.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.812500, 0.812500, 0.812500, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.w, r4.w, l(0x02000000)
    movc r4.w, r7.w, r9.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.843750, 0.843750, 0.843750, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.w, r4.w, l(0x04000000)
    movc r4.w, r8.w, r9.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.875000, 0.875000, 0.875000, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.w, r4.w, l(0x08000000)
    movc r4.w, r7.w, r9.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.906250, 0.906250, 0.906250, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.w, r4.w, l(0x10000000)
    movc r4.w, r8.w, r9.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.937500, 0.937500, 0.937500, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r8.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r7.w, |r7.w|, |r8.w|
    mul r7.w, r21.z, r7.w
    lt r7.w, r7.w, l(1.000000)
    iadd r9.w, r4.w, l(0x20000000)
    movc r4.w, r7.w, r9.w, r4.w
    mad r21.xyz, r19.xyzx, l(0.968750, 0.968750, 0.968750, 0.000000), r17.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r21.xyxx, t28.yzwx, s1, r4.z
    min r8.w, |r8.w|, |r7.w|
    mul r8.w, r21.z, r8.w
    lt r8.w, r8.w, l(1.000000)
    iadd r9.w, r4.w, l(0x40000000)
    movc r4.w, r8.w, r9.w, r4.w
    sample_l_indexable(texture2d)(float,float,float,float) r4.z, r18.xyxx, t28.yzxw, s1, r4.z
    min r4.z, |r7.w|, |r4.z|
    mul r4.z, r16.w, r4.z
    lt r4.z, r4.z, l(1.000000)
    iadd r7.w, r4.w, l(0x80000000)
    movc r4.z, r4.z, r7.w, r4.w
    mov r21.w, l(-1)
    mov r22.z, l(-1)
    mov r14.yz, l(0,0,0,0)
    mov r4.w, l(0)
    mov r7.w, r4.z
    mov r8.w, r18.z
    mov r23.yz, l(0,0,0,0)
    mov r21.z, l(0)
    mov r9.w, l(0)
    loop 
      breakc_z r7.w
      firstbit_lo r21.y, r7.w
      ishl r12.w, l(1), r21.y
      xor r21.x, r7.w, r12.w
      utof r13.w, r21.y
      mul r13.w, r13.w, l(0.031250)
      mad r16.xyw, r19.xyxz, r13.wwww, r17.xyxz
      sample_l_indexable(texture2d)(float,float,float,float) r13.w, r16.xyxx, t28.yzwx, s1, l(0.000000)
      mul r17.w, r16.w, |r13.w|
      lt r17.w, r17.w, l(1.000000)
      if_nz r17.w
        if_nz r21.z
          lt r17.w, r14.w, |r13.w|
          lt r18.x, r8.w, r16.w
          and r17.w, r17.w, r18.x
          movc r18.xy, r17.wwww, r16.xyxx, r14.yzyy
          mov r21.z, r16.w
          mov r23.x, r8.w
          movc r24.xyz, r17.wwww, r21.zxyz, r23.xyzx
          mov r7.w, r21.x
          mov r21.z, l(-1)
          mov r14.yz, r18.xxyx
          mov r8.w, r24.x
          mov r23.yz, r24.yyzy
          continue 
        endif 
        mov r17.w, r23.y
        mov r18.x, l(0)
      else 
        not r12.w, r12.w
        and r17.w, r12.w, r23.y
        mov r18.x, r21.z
      endif 
      if_nz r9.w
        mov r7.w, r21.x
        mov r23.y, r17.w
        mov r21.z, r18.x
        mov r9.w, l(-1)
        continue 
      endif 
      mov r18.yw, r14.yyyz
      mov r12.w, r4.w
      mov r19.w, r8.w
      mov r23.y, r17.w
      mov r23.x, r23.z
      mov r21.z, r18.x
      mov r22.w, r9.w
      mov r20.w, r16.w
      mov r23.w, |r13.w|
      mov r24.x, l(0)
      loop 
        ige r24.y, r24.x, l(4)
        breakc_nz r24.y
        itof r24.y, r24.x
        add r24.y, r24.y, l(1.000000)
        mul r24.y, r24.y, l(0.250000)
        mad r24.yzw, r20.xxyz, r24.yyyy, r16.xxyw
        sample_l_indexable(texture2d)(float,float,float,float) r25.x, r24.yzyy, t28.xyzw, s1, l(0.000000)
        mul r25.y, r24.w, |r25.x|
        lt r25.y, r25.y, l(1.000000)
        if_nz r25.y
          lt r25.y, r14.w, |r25.x|
          add r25.z, -r20.w, r24.w
          add r25.w, -r23.w, |r25.x|
          mul r26.x, r20.w, r24.w
          mul r25.w, |r25.w|, r26.x
          lt r25.z, r25.w, |r25.z|
          and r25.w, r25.z, r25.y
          lt r26.x, r19.w, r24.w
          and r26.y, r25.y, r26.x
          movc r22.xy, r26.yyyy, r21.xyxx, r23.yxyy
          or r25.z, r25.z, r26.x
          and r25.y, r25.y, r25.z
          movc r24.yz, r25.yyyy, r24.yyzy, r18.yywy
          movc r25.z, r25.w, l(1.000000), r12.w
          movc r25.y, r25.y, r24.w, r19.w
          movc r26.xyzw, r25.wwww, r21.xyzw, r22.xyzw
          mov r12.w, r25.z
          mov r18.yw, r24.yyyz
          mov r19.w, r25.y
          mov r23.xy, r26.yxyy
          mov r21.z, r26.z
          mov r22.w, r26.w
          break 
        endif 
        mov r20.w, r24.w
        mov r23.w, |r25.x|
        iadd r24.x, r24.x, l(1)
      endloop 
      mov r14.yz, r18.yywy
      mov r4.w, r12.w
      mov r8.w, r19.w
      mov r23.yz, r23.yyxy
      mov r9.w, r22.w
      mov r7.w, r21.x
    endloop 
    rcp r4.z, r8.w
    add r4.z, -r14.w, r4.z
    add r7.w, -r14.w, r16.z
    div r4.z, |r4.z|, |r7.w|
    min r16.x, r4.z, l(1.000000)
    countbits r4.z, r23.y
    utof r4.z, r4.z
    add r4.z, r4.z, l(1.000000)
    iadd r7.w, -r23.z, l(32)
    utof r7.w, r7.w
    div r4.z, r4.z, r7.w
    min r16.y, r4.z, l(1.000000)
  else 
    mov r16.xy, l(1.000000,0,0,0)
    mov r4.w, l(0)
  endif 
  add r4.z, r2.y, l(-0.83333331)
  mul r4.z, r4.z, l(5.99999952)
  max r4.z, r4.z, l(0.000000)
  mad r7.w, r4.z, l(-2.000000), l(3.000000)
  mul r4.z, r4.z, r4.z
  mul r4.z, r4.z, r7.w
  add r1.w, r1.w, l(-60.000000)
  mul_sat r1.w, r1.w, l(0.01666667)
  mad r7.w, r1.w, l(-2.000000), l(3.000000)
  mul r1.w, r1.w, r1.w
  mul r1.w, r1.w, r7.w
  mul r1.w, r1.w, r4.z
  mul r1.w, r16.y, r1.w
  mad r16.yz, r14.yyzy, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
  add r16.yz, |r16.yyzy|, l(0.000000, -0.500000, -0.500000, 0.000000)
  add_sat r16.yz, r16.yyzy, r16.yyzy
  mad r17.xy, r16.yzyy, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
  mul r16.yz, r16.yyzy, r16.yyzy
  mad r16.yz, -r17.xxyx, r16.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
  mul r4.z, r16.z, r16.y
  mul r1.w, r1.w, r4.z
  mul r4.z, r16.x, l(10.000000)
  min r4.z, r4.z, l(1.000000)
  add r7.w, -r4.w, l(1.000000)
  mul r7.w, r1.w, r7.w
  add r4.z, r4.z, l(-1.000000)
  mad r4.z, r7.w, r4.z, l(1.000000)
  mul r1.w, r4.w, r1.w
  lt r4.w, l(0.000000), r1.w
  if_nz r4.w
    sample_l_indexable(texture2d)(float,float,float,float) r16.xy, r14.yzyy, t22.xyzw, s4, l(0.000000)
    add r16.zw, |r16.xxxy|, l(0.000000, 0.000000, -0.500000, -0.500000)
    add_sat r16.zw, r16.zzzw, r16.zzzw
    add r17.xy, |r16.xyxx|, |r16.xyxx|
    min r17.xy, r17.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    mul r17.xy, r17.xyxx, l(10.000000, 10.000000, 0.000000, 0.000000)
    mad r16.zw, r16.zzzw, l(0.000000, 0.000000, 30.000000, 30.000000), r17.xxxy
    ge r16.xy, r16.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
    movc r16.xy, r16.xyxx, r16.zwzz, -r16.zwzz
    mad r14.yz, -r16.xxyx, cb1[44].zzwz, r14.yyzy
    sample_l_indexable(texture2d)(float,float,float,float) r14.yzw, r14.yzyy, t21.wxyz, s4, l(0.000000)
    mul r14.yzw, r14.yyzw, cb1[85].xxxx
    mul r14.yzw, r1.wwww, r14.yyzw
  else 
    mov r14.yzw, l(0,0,0,0)
    mov r1.w, l(0)
  endif 
else 
  mov r14.yzw, l(0,0,0,0)
  mov r4.z, l(1.000000)
  mov r1.w, l(0)
endif 
dp3 r4.w, r11.xyzx, cb2[17].xyzx
mov_sat r7.w, r4.w
movc r8.w, r0.w, |r4.w|, r7.w
ge r9.w, l(0.000000), r8.w
if_nz r9.w
  mov r12.w, l(0)
endif 
if_z r9.w
  mul r16.xyz, r10.yyyy, cb2[29].xyzx
  mad r16.xyz, r10.xxxx, cb2[28].xyzx, r16.xyzx
  mad r16.xyz, r10.zzzz, cb2[30].xyzx, r16.xyzx
  add r16.xyz, r16.xyzx, cb2[31].xyzx
  add r9.w, r16.z, -cb2[17].w
  mad r9.w, -r9.w, l(0.00006104), l(1.000000)
  mov_sat r13.w, r9.w
  eq r13.w, r9.w, r13.w
  if_nz r13.w
    mov r13.w, l(0)
    mov r16.w, l(0)
    loop 
      ge r17.x, r13.w, l(3.000000)
      breakc_nz r17.x
      ftou r17.x, r13.w
      add r17.yz, r16.xxyx, -cb2[r17.x + 20].xxyx
      max r17.y, |r17.z|, |r17.y|
      mul r16.w, r17.y, cb2[r17.x + 20].z
      lt r17.x, r16.w, l(1.000000)
      if_nz r17.x
        break 
      endif 
      add r13.w, r13.w, l(1.000000)
      mov r16.w, l(0)
    endloop 
  else 
    mov r13.w, l(3.000000)
    mov r16.w, l(0)
  endif 
  ge r17.x, r13.w, l(3.000000)
  if_nz r17.x
    mul r17.yzw, l(0.000000, 128.000000, 0.500000, 0.500000), cb2[27].zzxy
    rcp r18.xz, r17.yyyy
    mov r18.y, -r18.z
    mad r17.yzw, r16.xxyx, r18.xxyz, r17.zzwz
    add r18.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r17.yzw, r17.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r17.yzw, r18.xxyz, r17.yyzw
    mul r18.xy, r17.wzww, cb2[32].xxxx
    round_ni r18.xy, r18.xyxx
    mul r18.y, r18.y, cb2[27].x
    mad r18.x, r18.y, cb2[32].x, r18.x
    ftou r18.x, r18.x
    iadd r18.x, r18.x, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.y, r18.x, l(0), t23.xxxx
    and r18.z, r18.y, l(0x40000000)
    ishl r18.w, r18.y, l(2)
    if_z r18.z
      and r18.z, r18.y, l(0x01ffffff)
      iadd r19.x, r18.z, r18.x
      ushr r18.x, r18.y, l(25)
      utof r18.x, r18.x
      mul r17.yzw, r17.yyzw, r18.xxxx
      frc r17.yzw, r17.yyzw
      mul r17.yzw, r17.yyzw, l(0.000000, 128.000000, 128.000000, 128.000000)
      ftou r17.yzw, r17.yyzw
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.z, r19.x, l(0), t23.xxxx
      ushr r18.xy, r17.wzww, l(6, 6, 0, 0)
      and r18.z, r19.z, l(0xc0000000)
      iadd r19.w, r19.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.w, r19.w, l(0), t23.xxxx
      movc r18.y, r18.y, r19.z, r19.w
      ushr r19.w, r18.y, l(13)
      movc r18.x, r18.x, r19.w, r18.y
      and r18.x, r18.x, l(8191)
      iadd r20.x, r18.x, r19.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.z, r20.x, l(0), t23.xxxx
      mov r19.y, l(0)
      mov r20.y, l(1)
      movc r20.xyz, r18.zzzz, r19.xyzx, r20.xyzx
      movc r21.yz, r18.zzzz, l(0,6,1,0), l(0,5,2,0)
      ushr r18.xy, r17.wzww, r21.yyyy
      and r18.xy, r18.xyxx, l(1, 1, 0, 0)
      and r19.w, r20.z, l(0xc0000000)
      iadd r20.w, r20.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.w, r20.w, l(0), t23.xxxx
      movc r18.y, r18.y, r20.z, r20.w
      ushr r20.w, r18.y, l(13)
      movc r18.x, r18.x, r20.w, r18.y
      and r18.x, r18.x, l(8191)
      iadd r21.x, r18.x, r20.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r21.w, r21.x, l(0), t23.xxxx
      movc r20.xyz, r19.wwww, r20.xyzx, r21.xzwx
      movc r18.xyz, r18.zzzz, r19.xyzx, r20.xyzx
      and r19.x, r18.z, l(0xc0000000)
      if_z r19.x
        iadd r19.x, -r18.y, l(6)
        ushr r19.xy, r17.wzww, r19.xxxx
        or r19.z, r18.z, l(0x40000000)
        bfi r19.y, l(1), l(1), r19.y, l(0)
        bfi r19.x, l(1), l(0), r19.x, r19.y
        imul null, r19.x, r19.x, l(10)
        ushr r19.x, r19.z, r19.x
        and r19.x, r19.x, l(1023)
        iadd r19.x, r18.x, r19.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.w, r19.x, l(0), t23.xxxx
        iadd r19.yz, r18.yyyy, l(0, 1, 2, 0)
        iadd r18.y, -r19.y, l(6)
        ushr r20.xy, r17.wzww, r18.yyyy
        and r18.y, r19.w, l(0xc0000000)
        or r20.z, r19.w, l(0x40000000)
        bfi r20.y, l(1), l(1), r20.y, l(0)
        bfi r20.x, l(1), l(0), r20.x, r20.y
        imul null, r20.x, r20.x, l(10)
        ushr r20.x, r20.z, r20.x
        and r20.x, r20.x, l(1023)
        iadd r20.x, r19.x, r20.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.z, r20.x, l(0), t23.xxxx
        mov r20.y, r19.z
        movc r20.xyz, r18.yyyy, r19.xywx, r20.xyzx
        iadd r19.y, -r20.y, l(6)
        ushr r19.yz, r17.wwzw, r19.yyyy
        and r20.y, r20.z, l(0xc0000000)
        or r20.w, r20.z, l(0x40000000)
        bfi r19.z, l(1), l(1), r19.z, l(0)
        bfi r19.y, l(1), l(0), r19.y, r19.z
        imul null, r19.y, r19.y, l(10)
        ushr r19.y, r20.w, r19.y
        and r19.y, r19.y, l(1023)
        iadd r21.x, r19.y, r20.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r21.y, r21.x, l(0), t23.xxxx
        movc r19.yz, r20.yyyy, r20.xxzx, r21.xxyx
        movc r18.xz, r18.yyyy, r19.xxwx, r19.yyzy
      endif 
      and r18.y, r18.z, l(0xc0000000)
      if_z r18.y
        ubfe r19.x, l(14), l(15), r18.z
        utof r19.x, r19.x
        mul r19.x, r19.x, cb2[27].w
        and r19.yz, r18.zzzz, l(0, 0x00007fff, 0x20000000, 0)
        utof r19.y, r19.y
        mul r19.y, r19.y, cb2[27].w
        mul r19.xy, r19.xyxx, l(0.00006104, 0.00003052, 0.000000, 0.000000)
        and r19.w, r17.z, l(3)
        iadd r19.w, r18.x, r19.w
        iadd r19.w, r19.w, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.w, r19.w, l(0), t23.xxxx
        bfi r20.xyz, l(2, 2, 1, 0), l(3, 1, 4, 0), r17.yzwy, l(0, 0, 0, 0)
        ushr r17.y, r19.w, r20.x
        and r17.y, r17.y, l(255)
        utof r17.y, r17.y
        mul r17.y, r19.y, r17.y
        mad r17.y, r17.y, l(0.00392157), r19.x
        iadd r17.z, r20.y, l(1)
        ubfe r17.w, l(1), l(1), r17.w
        iadd r17.z, r17.w, r17.z
        iadd r17.z, r17.z, r18.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.z, r17.z, l(0), t23.xxxx
        ushr r17.z, r17.z, r20.z
        and r17.z, r17.z, l(0x0000ffff)
        utof r17.z, r17.z
        mul r17.z, r19.y, r17.z
        mad r17.z, r17.z, l(0.00001526), r19.x
        movc r18.w, r19.z, r17.y, r17.z
      else 
        and r17.y, r18.z, l(0x80000000)
        iadd r17.z, r18.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.z, r17.z, l(0), t23.xxxx
        movc r17.y, r17.y, r17.z, l(0)
        ishl r17.z, r18.z, l(2)
        ushr r17.w, r17.y, l(16)
        and r17.y, r17.y, l(0x0000ffff)
        f16tof32 r17.yw, r17.yyyw
        mad r17.z, r16.x, r17.w, r17.z
        mad r17.y, r16.y, r17.y, r17.z
        movc r18.w, r18.y, r17.y, r18.w
      endif 
    endif 
    mad r16.z, -cb2[27].z, l(2.000000), r16.z
    lt r16.z, r18.w, r16.z
    movc r12.w, r16.z, l(0), l(1.000000)
  endif 
  if_z r17.x
    if_z cb2[58].y
      ftou r16.z, r13.w
      add r17.xy, r16.xyxx, -cb2[r16.z + 20].xyxx
      mul r17.xy, r17.xyxx, cb2[r16.z + 20].zzzz
      mad r17.xy, r17.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r16.z, cb2[26].y
      add r17.z, r13.w, r16.z
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r16.z, r17.xyzx, t13.xxxx, s13, r9.w
      sample_l_indexable(texture2darray)(float,float,float,float) r17.x, r17.xyzx, t31.xyzw, s0, l(0.000000)
      add r16.z, r16.z, r17.x
      add_sat r16.z, r16.z, l(-1.000000)
      mul r17.x, r16.z, r16.z
      mul r12.w, r16.z, r17.x
    endif 
    if_nz cb2[58].y
      mov r17.x, -r4.x
      ftou r16.z, r13.w
      add r13.w, r13.w, l(1.000000)
      min r13.w, r13.w, l(2.000000)
      ftou r13.w, r13.w
      add r16.w, -r16.w, l(1.000000)
      mul r16.w, r16.w, l(28.000000)
      ftou r16.w, r16.w
      add r18.xy, r16.xyxx, -cb2[r16.z + 20].xyxx
      mul r18.xy, r18.xyxx, cb2[r16.z + 20].zzzz
      mad r18.xy, r18.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      add r16.xy, r16.xyxx, -cb2[r13.w + 20].xyxx
      mul r16.xy, r16.xyxx, cb2[r13.w + 20].zzzz
      mad r16.xy, r16.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      mov r17.y, r13.x
      mov r17.z, r4.x
      mov r17.w, l(0)
      mov r18.z, l(0)
      loop 
        uge r18.w, r18.z, l(8)
        breakc_nz r18.w
        ult r18.w, r16.w, r18.z
        movc r19.xy, r18.wwww, r16.xyxx, r18.xyxx
        movc r19.z, r18.w, cb2[r13.w + 20].w, cb2[r16.z + 20].w
        movc r18.w, r18.w, r13.w, r16.z
        dp2 r20.x, icb[r18.z + 0].yxyy, r17.xyxx
        dp2 r20.y, icb[r18.z + 0].yxyy, r17.yzyy
        mad r19.xy, r20.xyxx, r19.zzzz, r19.xyxx
        iadd r18.w, r18.w, cb2[26].y
        utof r19.z, r18.w
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r18.w, r19.xyzx, t13.xxxx, s13, r9.w
        sample_l_indexable(texture2darray)(float,float,float,float) r19.x, r19.xyzx, t31.xyzw, s0, l(0.000000)
        add r18.w, r18.w, r19.x
        add_sat r18.w, r18.w, l(-1.000000)
        mad r17.w, r18.w, l(0.125000), r17.w
        iadd r18.z, r18.z, l(1)
      endloop 
      mul r9.w, r17.w, r17.w
      mul r12.w, r17.w, r9.w
    endif 
  endif 
endif 
add r9.w, -r2.y, l(1.000000)
mul r13.w, r9.w, l(5.000000)
mad r16.x, r9.w, l(5.000000), l(-2.500000)
mul r16.x, r16.x, l(0.400000)
max r16.x, r16.x, l(0.000000)
mad r16.yz, -r9.wwww, l(0.000000, 10.000000, 5.000000, 0.000000), l(0.000000, 6.857410, 7.085000, 0.000000)
exp r16.y, r16.y
mul r16.y, r2.x, r16.y
mul r16.w, r9.w, r13.w
mad r16.z, -r16.w, l(2.015905), r16.z
exp r16.z, r16.z
mul r16.z, r2.x, r16.z
mul r16.xyz, r16.xyzx, l(100.000000, 9.136810, 9.708090, 0.000000)
max r16.y, r16.z, r16.y
max r16.y, r16.y, l(1.268160)
if_nz cb2[54].x
  ftou r16.z, cb1[44].x
  iadd r16.z, r16.z, l(7)
  ushr r16.z, r16.z, l(3)
  imad r16.z, r0.y, r16.z, r0.x
  bfi r16.z, l(27), l(5), r16.z, l(16)
  mov r17.xyzw, l(0,0,0,0)
  mov r18.xyzw, l(0,0,0,0)
  mov r19.xyzw, l(0,0,0,0)
  mov r20.xyzw, l(0,0,0,0)
  mov r21.xyzw, l(0,0,0,0)
  mov r22.xyzw, l(0,0,0,0)
  mov r23.xyzw, l(0,0,0,0)
  mov r24.xyzw, l(0,0,0,0)
  mov r25.xyzw, l(0,0,0,0)
  mov r26.xyzw, l(0,0,0,0)
  mov r27.xyzw, l(0,0,0,0)
  mov r16.w, l(0)
  mov r30.z, l(0)
  mov r31.z, l(0)
  mov r28.xyzw, l(0,0,0,0)
  mov r29.xyz, l(0,0,0,0)
  loop 
    uge r29.w, r29.z, cb2[0].y
    breakc_nz r29.w
    ushr r29.w, r29.z, l(5)
    iadd r29.w, r16.z, r29.w
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r29.w, r29.w, l(0), t26.xxxx
    mov r32.xyzw, r17.yxzw
    mov r33.xyzw, r18.xyzw
    mov r34.xyzw, r19.yzwx
    mov r35.xyzw, r20.xyzw
    mov r36.xyzw, r21.xyzw
    mov r37.xyzw, r22.zwxy
    mov r38.xyzw, r23.zwxy
    mov r39.xyzw, r25.zwxy
    mov r40.xyzw, r26.zwxy
    mov r41.xyz, r28.xyzx
    mov r42.xy, r29.yxyy
    mov r30.w, r16.w
    mov r31.w, r30.z
    mov r41.w, r31.z
    mov r42.z, r28.w
    mov r43.xyzw, r24.zwxy
    mov r44.xyzw, r27.zwxy
    mov r42.w, r29.w
    loop 
      breakc_z r42.w
      firstbit_lo r45.x, r42.w
      ishl r45.y, l(1), r45.x
      not r45.y, r45.y
      and r42.w, r42.w, r45.y
      iadd r45.x, r29.z, r45.x
      imul null, r45.x, r45.x, l(14)
      add r45.yzw, r10.xxyz, -cb10[r45.x + 0].xxyz
      dp3 r45.y, r45.yzwy, r45.yzwy
      sqrt r45.y, r45.y
      ge r45.y, cb2[54].y, r45.y
      if_nz r45.y
        mov r32.yzw, cb10[r45.x + 1].xxyz
        mov r32.x, cb10[r45.x + 0].w
        mov r33.yzw, cb10[r45.x + 2].xxyz
        mov r33.x, cb10[r45.x + 1].w
        mov r34.xyz, cb10[r45.x + 3].xyzx
        mov r34.w, cb10[r45.x + 4].z
        mov r35.yz, cb10[r45.x + 4].xxyx
        mov r35.x, cb10[r45.x + 3].w
        mov r35.w, cb10[r45.x + 6].x
        mov r36.yzw, cb10[r45.x + 5].xxyz
        mov r36.x, cb10[r45.x + 4].w
        mov r37.yz, cb10[r45.x + 7].yywy
        mov r37.x, cb10[r45.x + 6].y
        mov r37.w, cb10[r45.x + 8].x
        mov r38.xyz, cb10[r45.x + 8].yzwy
        mov r38.w, cb10[r45.x + 9].x
        mov r39.xyz, cb10[r45.x + 10].yzwy
        mov r39.w, cb10[r45.x + 11].x
        mov r40.xyz, cb10[r45.x + 11].yzwy
        mov r40.w, cb10[r45.x + 12].x
        mov r41.xyz, cb10[r45.x + 0].xyzx
        mov r45.yz, cb10[r45.x + 13].yyzy
        mov r30.w, l(-1)
        mov r31.w, cb10[r45.x + 2].w
        mov r41.w, cb10[r45.x + 5].w
        mov r42.z, cb10[r45.x + 7].z
        mov r43.xyz, cb10[r45.x + 9].yzwy
        mov r43.w, cb10[r45.x + 10].x
        mov r44.xyz, cb10[r45.x + 12].yzwy
        mov r44.w, cb10[r45.x + 13].x
        mov r42.xy, r45.yzyy
        break 
      endif 
    endloop 
    if_nz r30.w
      mov r17.xyzw, r32.yxzw
      mov r18.xyzw, r33.xyzw
      mov r19.xyzw, r34.wxyz
      mov r20.xyzw, r35.xyzw
      mov r21.xyzw, r36.xyzw
      mov r22.xyzw, r37.zwxy
      mov r23.xyzw, r38.zwxy
      mov r24.xyzw, r43.zwxy
      mov r25.xyzw, r39.zwxy
      mov r26.xyzw, r40.zwxy
      mov r27.xyzw, r44.zwxy
      mov r28.xyz, r41.xyzx
      mov r29.xy, r42.yxyy
      mov r16.w, l(-1)
      mov r30.z, r31.w
      mov r31.z, r41.w
      mov r28.w, r42.z
      break 
    endif 
    iadd r29.z, r29.z, l(32)
    mov r17.xyzw, r32.yxzw
    mov r18.xyzw, r33.xyzw
    mov r19.xyzw, r34.wxyz
    mov r20.xyzw, r35.xyzw
    mov r21.xyzw, r36.xyzw
    mov r22.xyzw, r37.zwxy
    mov r23.xyzw, r38.zwxy
    mov r25.xyzw, r39.zwxy
    mov r26.xyzw, r40.zwxy
    mov r28.xyz, r41.xyzx
    mov r29.xy, r42.yxyy
    mov r16.w, r30.w
    mov r30.z, r31.w
    mov r31.z, r41.w
    mov r28.w, r42.z
    mov r24.xyzw, r43.zwxy
    mov r27.xyzw, r44.zwxy
  endloop 
  mov r32.xy, r17.ywyy
  mov r30.x, r17.z
  mov r17.yz, r18.xxwx
  mov r30.y, r18.y
  mov r32.z, r18.z
  mov r18.xyz, r19.yzwy
  mov r19.yz, r21.xxyx
  mov r31.xy, r21.zwzz
  mov r21.xy, r22.zwzz
  mov r22.z, r23.z
  mov r23.z, r24.z
  mov r24.z, r25.z
  mov r25.z, r26.z
  mov r26.z, r27.z
  mov r27.z, r29.y
else 
  mov r16.w, l(0)
endif 
if_nz r16.w
  if_nz r6.w
    add r33.yzw, r28.xxyz, cb1[24].xxyz
    mov r33.x, l(16)
    store_structured u2.xyzw, cb2[52].x, l(880), r33.xyzw
  endif 
  add r28.xyz, r10.xyzx, -r28.xyzx
  and r16.z, r28.w, l(0x0000ffff)
  ubfe r17.w, l(6), l(25), r28.w
  imul null, r18.w, r16.z, l(6)
  dp3 r19.w, cb11[r18.w + 0].xyzx, r28.xyzx
  add_sat r19.w, r19.w, cb11[r18.w + 0].w
  dp3 r21.z, cb11[r18.w + 1].xyzx, r28.xyzx
  add_sat r21.z, r21.z, cb11[r18.w + 1].w
  mul r19.w, r19.w, r21.z
  dp3 r21.z, cb11[r18.w + 2].xyzx, r28.xyzx
  add_sat r21.z, r21.z, cb11[r18.w + 2].w
  mul r19.w, r19.w, r21.z
  dp3 r21.z, cb11[r18.w + 3].xyzx, r28.xyzx
  add_sat r21.z, r21.z, cb11[r18.w + 3].w
  mul r19.w, r19.w, r21.z
  dp3 r21.z, cb11[r18.w + 4].xyzx, r28.xyzx
  add_sat r21.z, r21.z, cb11[r18.w + 4].w
  mul r19.w, r19.w, r21.z
  dp3 r21.z, cb11[r18.w + 5].xyzx, r28.xyzx
  add_sat r18.w, r21.z, cb11[r18.w + 5].w
  mul r33.x, r18.w, r19.w
  and r18.w, r20.w, l(1)
  mov r33.yz, l(0,0,1.000000,0)
  movc r21.zw, r18.wwww, r33.xxxy, r33.zzzx
  mov r33.x, l(1.000000)
  mov r18.w, r20.w
  mov r34.xy, r21.zwzz
  mov r19.w, l(1)
  loop 
    ige r22.w, r19.w, r17.w
    breakc_nz r22.w
    iadd r22.w, r16.z, r19.w
    imul null, r22.w, r22.w, l(6)
    dp3 r29.y, cb11[r22.w + 0].xyzx, r28.xyzx
    add_sat r29.y, r29.y, cb11[r22.w + 0].w
    mul r29.y, r29.y, r34.x
    dp3 r29.z, cb11[r22.w + 1].xyzx, r28.xyzx
    add_sat r29.z, r29.z, cb11[r22.w + 1].w
    mul r29.y, r29.z, r29.y
    dp3 r29.z, cb11[r22.w + 2].xyzx, r28.xyzx
    add_sat r29.z, r29.z, cb11[r22.w + 2].w
    mul r29.y, r29.z, r29.y
    dp3 r29.z, cb11[r22.w + 3].xyzx, r28.xyzx
    add_sat r29.z, r29.z, cb11[r22.w + 3].w
    mul r29.y, r29.z, r29.y
    dp3 r29.z, cb11[r22.w + 4].xyzx, r28.xyzx
    add_sat r29.z, r29.z, cb11[r22.w + 4].w
    mul r29.y, r29.z, r29.y
    dp3 r29.z, cb11[r22.w + 5].xyzx, r28.xyzx
    add_sat r22.w, r29.z, cb11[r22.w + 5].w
    mul r34.x, r22.w, r29.y
    ushr r29.z, r18.w, l(2)
    ubfe r29.w, l(1), l(2), r18.w
    and r30.w, r29.z, l(2)
    max r31.w, r34.x, r34.y
    mad r22.w, -r29.y, r22.w, l(1.000000)
    mul r22.w, r22.w, r34.y
    movc r33.y, r30.w, r22.w, r31.w
    movc r34.xy, r29.wwww, r34.xyxx, r33.xyxx
    iadd r19.w, r19.w, l(1)
    mov r18.w, r29.z
  endloop 
  mov_sat r34.y, r34.y
  mul r33.w, r21.x, r34.y
  lt r16.z, l(0.000000), r33.w
  if_nz r16.z
    if_nz r6.w
      ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r16.z, cb2[52].x, l(880), u2.xxxx
      or r16.z, r16.z, l(32)
      store_structured u2.x, cb2[52].x, l(880), r16.z
      store_structured u2.x, cb2[52].x, l(896), r33.w
    endif 
    mul r16.z, r21.y, r33.w
    dp3 r17.w, r15.xyzx, r22.xyzx
    dp3 r18.w, r28.xyzx, r22.xyzx
    add r18.w, -r23.w, r18.w
    ge r19.w, r18.w, l(0.000000)
    max r18.w, r16.x, |r18.w|
    movc r18.w, r19.w, r18.w, -r18.w
    max r17.w, -r17.w, l(0.00000010)
    div r17.w, r18.w, r17.w
    min r17.w, |r17.w|, l(131072.000000)
    dp3 r18.w, r15.xyzx, r23.xyzx
    dp3 r19.w, r28.xyzx, r23.xyzx
    add r19.w, -r24.w, r19.w
    ge r20.w, r19.w, l(0.000000)
    max r19.w, r16.x, |r19.w|
    movc r19.w, r20.w, r19.w, -r19.w
    max r18.w, -r18.w, l(0.00000010)
    div r18.w, r19.w, r18.w
    min r17.w, r17.w, |r18.w|
    dp3 r18.w, r15.xyzx, r24.xyzx
    dp3 r19.w, r28.xyzx, r24.xyzx
    add r19.w, -r25.w, r19.w
    ge r20.w, r19.w, l(0.000000)
    max r19.w, r16.x, |r19.w|
    movc r19.w, r20.w, r19.w, -r19.w
    max r18.w, -r18.w, l(0.00000010)
    div r18.w, r19.w, r18.w
    min r17.w, r17.w, |r18.w|
    dp3 r18.w, r15.xyzx, r25.xyzx
    dp3 r19.w, r28.xyzx, r25.xyzx
    add r19.w, -r26.w, r19.w
    ge r20.w, r19.w, l(0.000000)
    max r19.w, r16.x, |r19.w|
    movc r19.w, r20.w, r19.w, -r19.w
    max r18.w, -r18.w, l(0.00000010)
    div r18.w, r19.w, r18.w
    min r17.w, r17.w, |r18.w|
    dp3 r18.w, r15.xyzx, r26.xyzx
    dp3 r19.w, r28.xyzx, r26.xyzx
    add r19.w, -r27.w, r19.w
    ge r20.w, r19.w, l(0.000000)
    max r19.w, r16.x, |r19.w|
    movc r19.w, r20.w, r19.w, -r19.w
    max r18.w, -r18.w, l(0.00000010)
    div r18.w, r19.w, r18.w
    min r17.w, r17.w, |r18.w|
    dp3 r18.w, r15.xyzx, r27.xyzx
    dp3 r19.w, r28.xyzx, r27.xyzx
    add r19.w, -r29.x, r19.w
    ge r20.w, r19.w, l(0.000000)
    max r19.w, r16.x, |r19.w|
    movc r19.w, r20.w, r19.w, -r19.w
    max r18.w, -r18.w, l(0.00000010)
    div r18.w, r19.w, r18.w
    min r17.w, r17.w, |r18.w|
    add r20.xyz, r20.xyzx, r28.xyzx
    mad r20.xyz, r15.xyzx, r17.wwww, r20.xyzx
    dp3 r18.w, r20.xyzx, r20.xyzx
    sqrt r18.w, r18.w
    div r17.w, r17.w, r18.w
    add r17.w, r17.w, r17.w
    sqrt r17.w, r17.w
    mad r17.w, r9.w, l(5.000000), r17.w
    add r17.w, r17.w, l(-0.844800)
    dp3 r21.x, r20.xyzx, r32.xyzx
    dp3 r21.y, r20.xyzx, r17.xyzx
    dp3 r21.z, r20.xyzx, r30.xyzx
    ubfe r18.w, l(9), l(16), r28.w
    utof r21.w, r18.w
    sample_l_indexable(texturecubearray)(float,float,float,float) r20.xyz, r21.xyzw, t8.xyzw, s2, r17.w
    and r22.xyz, r20.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
    ieq r22.xyz, r22.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
    or r17.w, r22.y, r22.x
    or r17.w, r22.z, r17.w
    movc r20.xyz, r17.wwww, l(1.000000,1.000000,0,0), r20.xyzx
    dp3 r22.x, r28.xyzx, r32.xyzx
    dp3 r22.y, r28.xyzx, r17.xyzx
    dp3 r22.z, r28.xyzx, r30.xyzx
    mad_sat r18.xyz, r22.xyzx, r18.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    mad r18.xyz, r18.xyzx, r19.xyzx, r31.xyzx
    dp3 r21.x, r11.xyzx, r32.xyzx
    dp3 r21.y, r11.xyzx, r17.xyzx
    dp3 r21.z, r11.xyzx, r30.xyzx
    lt r17.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r21.xyzx
    movc r19.z, r17.x, l(0), l(0.500000)
    mov r19.xy, l(0,0,0,0)
    add r19.xyz, r18.xyzx, r19.xyzx
    sample_l_indexable(texture3d)(float,float,float,float) r19.xyz, r19.xyzx, t17.xyzw, s4, l(0.000000)
    mul r22.xyz, r21.xyzx, r21.xyzx
    mul r22.xyz, r16.zzzz, r22.xyzx
    movc r23.z, r17.y, l(0), l(0.500000)
    mov r23.xy, l(0,0,0,0)
    add r17.xyw, r18.xyxz, r23.xyxz
    sample_l_indexable(texture3d)(float,float,float,float) r17.xyw, r17.xywx, t18.xywz, s4, l(0.000000)
    mul r17.xyw, r22.yyyy, r17.xyxw
    mad r17.xyw, r19.xyxz, r22.xxxx, r17.xyxw
    movc r19.z, r17.z, l(0), l(0.500000)
    mov r19.xy, l(0,0,0,0)
    add r18.xyz, r18.xyzx, r19.xyzx
    sample_l_indexable(texture3d)(float,float,float,float) r18.xyz, r18.xyzx, t19.xyzw, s4, l(0.000000)
    mad r17.xyz, r18.xyzx, r22.zzzz, r17.xywx
    sample_l_indexable(texturecubearray)(float,float,float,float) r18.xyz, r21.xyzw, t8.xyzw, s2, l(6.000000)
    and r19.xyz, r18.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
    ieq r19.xyz, r19.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
    or r17.w, r19.y, r19.x
    or r17.w, r19.z, r17.w
    movc r18.xyz, r17.wwww, l(1.000000,1.000000,0,0), r18.xyzx
    mul r17.xyz, r17.xyzx, r18.xyzx
    dp3 r17.x, r17.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
    mul r17.y, r16.y, r17.x
    mul r18.xyz, r16.zzzz, r20.xyzx
    dp3 r16.z, r18.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
    mad r16.z, r16.y, r17.x, r16.z
    div r16.z, r17.y, r16.z
    mul r33.xyz, r16.zzzz, r18.xyzx
    mov r16.z, l(257)
  else 
    mov r33.xyzw, l(0,0,0,0)
    mov r16.z, l(1)
  endif 
  mov r17.x, l(-1)
else 
  mov r33.xyzw, l(0,0,0,0)
  mov r16.z, l(0)
endif 
and r16.w, r16.w, r17.x
if_z r16.w
  iadd r16.w, cb2[0].y, -cb2[58].x
  ftou r17.x, cb1[44].x
  iadd r17.x, r17.x, l(7)
  ushr r17.x, r17.x, l(3)
  imad r17.x, r0.y, r17.x, r0.x
  bfi r17.x, l(27), l(5), r17.x, l(16)
  and r17.y, r16.w, l(-32)
  iadd r17.z, r16.w, -r17.y
  and r17.w, cb2[0].y, l(-32)
  iadd r18.x, -r17.w, cb2[0].y
  mov r19.x, l(16)
  mov r20.yz, l(0,0,1.000000,0)
  mov r21.xy, l(0,0,0,0)
  mov r22.xz, l(1.000000,0,1.000000,0)
  mov r23.xy, l(0,0,0,0)
  mov r24.xy, l(0,0,0,0)
  mov r25.xyz, l(0,0,0,0)
  mov r25.w, r33.x
  mov r26.xyz, r33.yzwy
  mov r26.w, r16.z
  mov r18.y, r17.y
  loop 
    uge r18.z, r18.y, cb2[0].y
    breakc_nz r18.z
    ushr r18.z, r18.y, l(5)
    iadd r18.z, r17.x, r18.z
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.z, l(0), t26.xxxx
    ieq r18.w, r17.y, r18.y
    bfi r20.w, r17.z, l(0), l(0), r18.z
    movc r18.z, r18.w, r20.w, r18.z
    ieq r18.w, r17.w, r18.y
    ubfe r20.w, r18.x, l(0), r18.z
    movc r18.z, r18.w, r20.w, r18.z
    mov r27.xyzw, r25.xyzw
    mov r28.xyzw, r26.xyzw
    mov r18.w, r18.z
    loop 
      breakc_z r18.w
      firstbit_lo r20.w, r18.w
      ishl r21.w, l(1), r20.w
      not r21.w, r21.w
      and r18.w, r18.w, r21.w
      iadd r20.w, r18.y, r20.w
      imul null, r20.w, r20.w, l(14)
      and r21.w, r28.w, l(255)
      ult r23.w, r21.w, l(32)
      and r23.w, r6.w, r23.w
      if_nz r23.w
        imad r21.w, r21.w, l(20), l(880)
        add r19.yzw, cb1[24].xxyz, cb10[r20.w + 0].xxyz
        store_structured u2.xyzw, cb2[52].x, r21.w, r19.xyzw
      endif 
      iadd r29.w, r28.w, l(1)
      add r19.yzw, r10.xxyz, -cb10[r20.w + 0].xxyz
      and r21.w, l(0x0000ffff), cb10[r20.w + 7].z
      ubfe r23.w, l(6), l(25), cb10[r20.w + 7].z
      imul null, r24.w, r21.w, l(6)
      dp3 r30.x, cb11[r24.w + 0].xyzx, r19.yzwy
      add_sat r30.x, r30.x, cb11[r24.w + 0].w
      dp3 r30.y, cb11[r24.w + 1].xyzx, r19.yzwy
      add_sat r30.y, r30.y, cb11[r24.w + 1].w
      mul r30.x, r30.y, r30.x
      dp3 r30.y, cb11[r24.w + 2].xyzx, r19.yzwy
      add_sat r30.y, r30.y, cb11[r24.w + 2].w
      mul r30.x, r30.y, r30.x
      dp3 r30.y, cb11[r24.w + 3].xyzx, r19.yzwy
      add_sat r30.y, r30.y, cb11[r24.w + 3].w
      mul r30.x, r30.y, r30.x
      dp3 r30.y, cb11[r24.w + 4].xyzx, r19.yzwy
      add_sat r30.y, r30.y, cb11[r24.w + 4].w
      mul r30.x, r30.y, r30.x
      dp3 r30.y, cb11[r24.w + 5].xyzx, r19.yzwy
      add_sat r24.w, r30.y, cb11[r24.w + 5].w
      mul r20.x, r24.w, r30.x
      and r24.w, l(1), cb10[r20.w + 6].x
      movc r30.xy, r24.wwww, r20.xyxx, r20.zxzz
      mov r20.x, cb10[r20.w + 6].x
      mov r31.xy, r30.xyxx
      mov r24.w, l(1)
      loop 
        ige r30.z, r24.w, r23.w
        breakc_nz r30.z
        iadd r30.z, r21.w, r24.w
        imul null, r30.z, r30.z, l(6)
        dp3 r30.w, cb11[r30.z + 0].xyzx, r19.yzwy
        add_sat r30.w, r30.w, cb11[r30.z + 0].w
        mul r30.w, r30.w, r31.x
        dp3 r31.z, cb11[r30.z + 1].xyzx, r19.yzwy
        add_sat r31.z, r31.z, cb11[r30.z + 1].w
        mul r30.w, r30.w, r31.z
        dp3 r31.z, cb11[r30.z + 2].xyzx, r19.yzwy
        add_sat r31.z, r31.z, cb11[r30.z + 2].w
        mul r30.w, r30.w, r31.z
        dp3 r31.z, cb11[r30.z + 3].xyzx, r19.yzwy
        add_sat r31.z, r31.z, cb11[r30.z + 3].w
        mul r30.w, r30.w, r31.z
        dp3 r31.z, cb11[r30.z + 4].xyzx, r19.yzwy
        add_sat r31.z, r31.z, cb11[r30.z + 4].w
        mul r30.w, r30.w, r31.z
        dp3 r31.z, cb11[r30.z + 5].xyzx, r19.yzwy
        add_sat r30.z, r31.z, cb11[r30.z + 5].w
        mul r31.x, r30.z, r30.w
        ushr r31.z, r20.x, l(2)
        ubfe r31.w, l(1), l(2), r20.x
        and r32.x, r31.z, l(2)
        max r32.y, r31.x, r31.y
        mad r30.z, -r30.w, r30.z, l(1.000000)
        mul r30.z, r30.z, r31.y
        movc r22.y, r32.x, r30.z, r32.y
        movc r31.xy, r31.wwww, r31.xyxx, r22.xyxx
        iadd r24.w, r24.w, l(1)
        mov r20.x, r31.z
      endloop 
      mov_sat r31.y, r31.y
      mul r20.x, r31.y, cb10[r20.w + 6].y
      lt r21.w, l(0.000000), r20.x
      if_nz r21.w
        and r21.w, r29.w, l(255)
        iadd r22.y, r21.w, l(-1)
        ult r22.y, r22.y, l(32)
        and r22.y, r6.w, r22.y
        if_nz r22.y
          imad r30.xy, r21.wwww, l(20, 20, 0, 0), l(860, 876, 0, 0)
          ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r21.w, cb2[52].x, r30.x, u2.xxxx
          or r21.w, r21.w, l(32)
          store_structured u2.x, cb2[52].x, r30.x, r21.w
          store_structured u2.x, cb2[52].x, r30.y, r20.x
        endif 
        iadd r28.w, r28.w, l(257)
        mad r28.z, r31.y, cb10[r20.w + 6].y, r28.z
        mul r20.x, r20.x, cb10[r20.w + 7].y
        mov r30.x, cb10[r20.w + 7].w
        mov r30.yz, cb10[r20.w + 8].xxyx
        dp3 r21.w, r15.xyzx, r30.xyzx
        dp3 r22.y, r19.yzwy, r30.xyzx
        add r22.y, r22.y, -cb10[r20.w + 8].z
        ge r23.w, r22.y, l(0.000000)
        max r22.y, r16.x, |r22.y|
        movc r22.y, r23.w, r22.y, -r22.y
        max r21.w, -r21.w, l(0.00000010)
        div r21.w, r22.y, r21.w
        min r21.w, |r21.w|, l(131072.000000)
        mov r30.x, cb10[r20.w + 8].w
        mov r30.yz, cb10[r20.w + 9].xxyx
        dp3 r22.y, r15.xyzx, r30.xyzx
        dp3 r23.w, r19.yzwy, r30.xyzx
        add r23.w, r23.w, -cb10[r20.w + 9].z
        ge r24.w, r23.w, l(0.000000)
        max r23.w, r16.x, |r23.w|
        movc r23.w, r24.w, r23.w, -r23.w
        max r22.y, -r22.y, l(0.00000010)
        div r22.y, r23.w, r22.y
        min r21.w, r21.w, |r22.y|
        mov r30.x, cb10[r20.w + 9].w
        mov r30.yz, cb10[r20.w + 10].xxyx
        dp3 r22.y, r15.xyzx, r30.xyzx
        dp3 r23.w, r19.yzwy, r30.xyzx
        add r23.w, r23.w, -cb10[r20.w + 10].z
        ge r24.w, r23.w, l(0.000000)
        max r23.w, r16.x, |r23.w|
        movc r23.w, r24.w, r23.w, -r23.w
        max r22.y, -r22.y, l(0.00000010)
        div r22.y, r23.w, r22.y
        min r21.w, r21.w, |r22.y|
        mov r30.x, cb10[r20.w + 10].w
        mov r30.yz, cb10[r20.w + 11].xxyx
        dp3 r22.y, r15.xyzx, r30.xyzx
        dp3 r23.w, r19.yzwy, r30.xyzx
        add r23.w, r23.w, -cb10[r20.w + 11].z
        ge r24.w, r23.w, l(0.000000)
        max r23.w, r16.x, |r23.w|
        movc r23.w, r24.w, r23.w, -r23.w
        max r22.y, -r22.y, l(0.00000010)
        div r22.y, r23.w, r22.y
        min r21.w, r21.w, |r22.y|
        mov r30.x, cb10[r20.w + 11].w
        mov r30.yz, cb10[r20.w + 12].xxyx
        dp3 r22.y, r15.xyzx, r30.xyzx
        dp3 r23.w, r19.yzwy, r30.xyzx
        add r23.w, r23.w, -cb10[r20.w + 12].z
        ge r24.w, r23.w, l(0.000000)
        max r23.w, r16.x, |r23.w|
        movc r23.w, r24.w, r23.w, -r23.w
        max r22.y, -r22.y, l(0.00000010)
        div r22.y, r23.w, r22.y
        min r21.w, r21.w, |r22.y|
        mov r30.x, cb10[r20.w + 12].w
        mov r30.yz, cb10[r20.w + 13].xxyx
        dp3 r22.y, r15.xyzx, r30.xyzx
        dp3 r23.w, r19.yzwy, r30.xyzx
        add r23.w, r23.w, -cb10[r20.w + 13].z
        ge r24.w, r23.w, l(0.000000)
        max r23.w, r16.x, |r23.w|
        movc r23.w, r24.w, r23.w, -r23.w
        max r22.y, -r22.y, l(0.00000010)
        div r22.y, r23.w, r22.y
        min r21.w, r21.w, |r22.y|
        add r30.x, r19.y, cb10[r20.w + 3].w
        add r30.yz, r19.zzwz, cb10[r20.w + 4].xxyx
        mad r30.xyz, r15.xyzx, r21.wwww, r30.xyzx
        dp3 r22.y, r30.xyzx, r30.xyzx
        sqrt r22.y, r22.y
        div r21.w, r21.w, r22.y
        add r21.w, r21.w, r21.w
        sqrt r21.w, r21.w
        mad r21.w, r9.w, l(5.000000), r21.w
        add r21.w, r21.w, l(-0.844800)
        mov r32.x, cb10[r20.w + 0].w
        mov r32.y, cb10[r20.w + 1].z
        mov r32.z, cb10[r20.w + 2].y
        dp3 r34.x, r30.xyzx, r32.xyzx
        mov r35.xy, cb10[r20.w + 1].xwxx
        mov r35.z, cb10[r20.w + 2].z
        dp3 r34.y, r30.xyzx, r35.xyzx
        mov r36.x, cb10[r20.w + 1].y
        mov r36.yz, cb10[r20.w + 2].xxwx
        dp3 r34.z, r30.xyzx, r36.xyzx
        ubfe r22.y, l(9), l(16), cb10[r20.w + 7].z
        utof r34.w, r22.y
        sample_l_indexable(texturecubearray)(float,float,float,float) r30.xyz, r34.xyzw, t8.xyzw, s2, r21.w
        and r31.xzw, r30.xxyz, l(0x7fffffff, 0, 0x7fffffff, 0x7fffffff)
        ieq r31.xzw, r31.xxzw, l(0x7f800000, 0, 0x7f800000, 0x7f800000)
        or r21.w, r31.z, r31.x
        or r21.w, r31.w, r21.w
        movc r30.xyz, r21.wwww, l(1.000000,1.000000,0,0), r30.xyzx
        dp3 r37.x, r19.yzwy, r32.xyzx
        dp3 r37.y, r19.yzwy, r35.xyzx
        dp3 r37.z, r19.yzwy, r36.xyzx
        mad_sat r19.yzw, r37.xxyz, cb10[r20.w + 3].xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
        mul r37.xy, r19.yzyy, cb10[r20.w + 4].zwzz
        mul r37.z, r19.w, cb10[r20.w + 5].x
        add r19.yzw, r37.xxyz, cb10[r20.w + 5].yyzw
        dp3 r34.x, r11.xyzx, r32.xyzx
        dp3 r34.y, r11.xyzx, r35.xyzx
        dp3 r34.z, r11.xyzx, r36.xyzx
        lt r31.xzw, l(0.000000, 0.000000, 0.000000, 0.000000), r34.xxyz
        movc r21.z, r31.x, l(0), l(0.500000)
        add r32.xyz, r19.yzwy, r21.xyzx
        sample_l_indexable(texture3d)(float,float,float,float) r32.xyz, r32.xyzx, t17.xyzw, s4, l(0.000000)
        mul r35.xyz, r34.xyzx, r34.xyzx
        mul r35.xyz, r20.xxxx, r35.xyzx
        movc r23.z, r31.z, l(0), l(0.500000)
        add r36.xyz, r19.yzwy, r23.xyzx
        sample_l_indexable(texture3d)(float,float,float,float) r36.xyz, r36.xyzx, t18.xyzw, s4, l(0.000000)
        mul r36.xyz, r35.yyyy, r36.xyzx
        mad r32.xyz, r32.xyzx, r35.xxxx, r36.xyzx
        movc r24.z, r31.w, l(0), l(0.500000)
        add r19.yzw, r19.yyzw, r24.xxyz
        sample_l_indexable(texture3d)(float,float,float,float) r19.yzw, r19.yzwy, t19.wxyz, s4, l(0.000000)
        mad r19.yzw, r19.yyzw, r35.zzzz, r32.xxyz
        sample_l_indexable(texturecubearray)(float,float,float,float) r31.xzw, r34.xyzw, t8.xwyz, s2, l(6.000000)
        and r32.xyz, r31.xzwx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
        ieq r32.xyz, r32.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
        or r20.w, r32.y, r32.x
        or r20.w, r32.z, r20.w
        movc r31.xzw, r20.wwww, l(1.000000,0,1.000000,0), r31.xxzw
        mul r32.xyz, r19.yzwy, r31.xzwx
        dp3 r20.w, r32.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
        mad r27.xyz, r19.yzwy, r31.xzwx, r27.xyzx
        mul r19.y, r16.y, r20.w
        mul r30.xyz, r20.xxxx, r30.xyzx
        dp3 r19.z, r30.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
        mad r19.z, r16.y, r20.w, r19.z
        div r19.y, r19.y, r19.z
        mov r32.x, r27.w
        mov r32.yz, r28.xxyx
        mad r19.yzw, r30.xxyz, r19.yyyy, r32.xxyz
        mov r27.w, r19.y
        mov r28.xy, r19.zwzz
      else 
        mov r29.xyz, r28.xyzx
        mov r28.xyzw, r29.xyzw
      endif 
    endloop 
    mov r25.xyzw, r27.xyzw
    mov r26.xyzw, r28.xyzw
    iadd r18.y, r18.y, l(32)
  endloop 
  mov r18.x, l(16)
  mov r19.yz, l(0,0,1.000000,0)
  mov r20.xy, l(0,0,0,0)
  mov r21.xy, l(0,0,0,0)
  mov r23.xy, l(0,0,0,0)
  mov r24.xyz, r25.xyzx
  mov r27.x, r25.w
  mov r27.yz, r26.xxyx
  mov r28.xyz, r26.zwzz
  mov r17.w, l(0)
  loop 
    uge r19.w, r17.w, r16.w
    breakc_nz r19.w
    ushr r19.w, r17.w, l(5)
    iadd r19.w, r17.x, r19.w
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.w, r19.w, l(0), t26.xxxx
    ieq r20.w, r17.y, r17.w
    ubfe r21.w, r17.z, l(0), r19.w
    movc r19.w, r20.w, r21.w, r19.w
    mov r29.xyz, r24.xyzx
    mov r30.xyz, r27.xyzx
    mov r31.xyz, r28.xzyx
    mov r20.w, r19.w
    loop 
      breakc_z r20.w
      firstbit_lo r21.w, r20.w
      ishl r22.x, l(1), r21.w
      not r22.x, r22.x
      and r20.w, r20.w, r22.x
      iadd r21.w, r17.w, r21.w
      imul null, r21.w, r21.w, l(14)
      and r22.x, r31.z, l(255)
      ult r22.y, r22.x, l(32)
      and r22.y, r6.w, r22.y
      if_nz r22.y
        imad r22.x, r22.x, l(20), l(880)
        add r18.yzw, cb1[24].xxyz, cb10[r21.w + 0].xxyz
        store_structured u2.xyzw, cb2[52].x, r22.x, r18.xyzw
      endif 
      iadd r22.y, r31.z, l(1)
      add r18.yzw, r10.xxyz, -cb10[r21.w + 0].xxyz
      and r23.w, l(0x0000ffff), cb10[r21.w + 7].z
      ubfe r24.w, l(6), l(25), cb10[r21.w + 7].z
      imul null, r27.w, r23.w, l(6)
      dp3 r28.w, cb11[r27.w + 0].xyzx, r18.yzwy
      add_sat r28.w, r28.w, cb11[r27.w + 0].w
      dp3 r29.w, cb11[r27.w + 1].xyzx, r18.yzwy
      add_sat r29.w, r29.w, cb11[r27.w + 1].w
      mul r28.w, r28.w, r29.w
      dp3 r29.w, cb11[r27.w + 2].xyzx, r18.yzwy
      add_sat r29.w, r29.w, cb11[r27.w + 2].w
      mul r28.w, r28.w, r29.w
      dp3 r29.w, cb11[r27.w + 3].xyzx, r18.yzwy
      add_sat r29.w, r29.w, cb11[r27.w + 3].w
      mul r28.w, r28.w, r29.w
      dp3 r29.w, cb11[r27.w + 4].xyzx, r18.yzwy
      add_sat r29.w, r29.w, cb11[r27.w + 4].w
      mul r28.w, r28.w, r29.w
      dp3 r29.w, cb11[r27.w + 5].xyzx, r18.yzwy
      add_sat r27.w, r29.w, cb11[r27.w + 5].w
      mul r19.x, r27.w, r28.w
      and r27.w, l(1), cb10[r21.w + 6].x
      movc r32.xy, r27.wwww, r19.xyxx, r19.zxzz
      mov r19.x, cb10[r21.w + 6].x
      mov r34.xy, r32.xyxx
      mov r27.w, l(1)
      loop 
        ige r28.w, r27.w, r24.w
        breakc_nz r28.w
        iadd r28.w, r23.w, r27.w
        imul null, r28.w, r28.w, l(6)
        dp3 r29.w, cb11[r28.w + 0].xyzx, r18.yzwy
        add_sat r29.w, r29.w, cb11[r28.w + 0].w
        mul r29.w, r29.w, r34.x
        dp3 r30.w, cb11[r28.w + 1].xyzx, r18.yzwy
        add_sat r30.w, r30.w, cb11[r28.w + 1].w
        mul r29.w, r29.w, r30.w
        dp3 r30.w, cb11[r28.w + 2].xyzx, r18.yzwy
        add_sat r30.w, r30.w, cb11[r28.w + 2].w
        mul r29.w, r29.w, r30.w
        dp3 r30.w, cb11[r28.w + 3].xyzx, r18.yzwy
        add_sat r30.w, r30.w, cb11[r28.w + 3].w
        mul r29.w, r29.w, r30.w
        dp3 r30.w, cb11[r28.w + 4].xyzx, r18.yzwy
        add_sat r30.w, r30.w, cb11[r28.w + 4].w
        mul r29.w, r29.w, r30.w
        dp3 r30.w, cb11[r28.w + 5].xyzx, r18.yzwy
        add_sat r28.w, r30.w, cb11[r28.w + 5].w
        mul r34.x, r28.w, r29.w
        ushr r30.w, r19.x, l(2)
        ubfe r31.w, l(1), l(2), r19.x
        and r32.z, r30.w, l(2)
        max r32.w, r34.x, r34.y
        mad r28.w, -r29.w, r28.w, l(1.000000)
        mul r28.w, r28.w, r34.y
        movc r22.w, r32.z, r28.w, r32.w
        movc r34.xy, r31.wwww, r34.xyxx, r22.zwzz
        iadd r27.w, r27.w, l(1)
        mov r19.x, r30.w
      endloop 
      add_sat r19.x, -r31.y, r34.y
      mul r22.w, r19.x, cb10[r21.w + 6].y
      lt r23.w, l(0.000000), r22.w
      if_nz r23.w
        and r23.w, r22.y, l(255)
        iadd r24.w, r23.w, l(-1)
        ult r24.w, r24.w, l(32)
        and r24.w, r6.w, r24.w
        if_nz r24.w
          imad r32.xy, r23.wwww, l(20, 20, 0, 0), l(860, 876, 0, 0)
          ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r23.w, cb2[52].x, r32.x, u2.xxxx
          or r23.w, r23.w, l(32)
          store_structured u2.x, cb2[52].x, r32.x, r23.w
          store_structured u2.x, cb2[52].x, r32.y, r22.w
        endif 
        iadd r31.z, r31.z, l(257)
        mad r31.x, r19.x, cb10[r21.w + 6].y, r31.x
        mul r19.x, r22.w, cb10[r21.w + 7].y
        mov r32.x, cb10[r21.w + 7].w
        mov r32.yz, cb10[r21.w + 8].xxyx
        dp3 r22.w, r15.xyzx, r32.xyzx
        dp3 r23.w, r18.yzwy, r32.xyzx
        add r23.w, r23.w, -cb10[r21.w + 8].z
        ge r24.w, r23.w, l(0.000000)
        max r23.w, r16.x, |r23.w|
        movc r23.w, r24.w, r23.w, -r23.w
        max r22.w, -r22.w, l(0.00000010)
        div r22.w, r23.w, r22.w
        min r22.w, |r22.w|, l(131072.000000)
        mov r32.x, cb10[r21.w + 8].w
        mov r32.yz, cb10[r21.w + 9].xxyx
        dp3 r23.w, r15.xyzx, r32.xyzx
        dp3 r24.w, r18.yzwy, r32.xyzx
        add r24.w, r24.w, -cb10[r21.w + 9].z
        ge r27.w, r24.w, l(0.000000)
        max r24.w, r16.x, |r24.w|
        movc r24.w, r27.w, r24.w, -r24.w
        max r23.w, -r23.w, l(0.00000010)
        div r23.w, r24.w, r23.w
        min r22.w, r22.w, |r23.w|
        mov r32.x, cb10[r21.w + 9].w
        mov r32.yz, cb10[r21.w + 10].xxyx
        dp3 r23.w, r15.xyzx, r32.xyzx
        dp3 r24.w, r18.yzwy, r32.xyzx
        add r24.w, r24.w, -cb10[r21.w + 10].z
        ge r27.w, r24.w, l(0.000000)
        max r24.w, r16.x, |r24.w|
        movc r24.w, r27.w, r24.w, -r24.w
        max r23.w, -r23.w, l(0.00000010)
        div r23.w, r24.w, r23.w
        min r22.w, r22.w, |r23.w|
        mov r32.x, cb10[r21.w + 10].w
        mov r32.yz, cb10[r21.w + 11].xxyx
        dp3 r23.w, r15.xyzx, r32.xyzx
        dp3 r24.w, r18.yzwy, r32.xyzx
        add r24.w, r24.w, -cb10[r21.w + 11].z
        ge r27.w, r24.w, l(0.000000)
        max r24.w, r16.x, |r24.w|
        movc r24.w, r27.w, r24.w, -r24.w
        max r23.w, -r23.w, l(0.00000010)
        div r23.w, r24.w, r23.w
        min r22.w, r22.w, |r23.w|
        mov r32.x, cb10[r21.w + 11].w
        mov r32.yz, cb10[r21.w + 12].xxyx
        dp3 r23.w, r15.xyzx, r32.xyzx
        dp3 r24.w, r18.yzwy, r32.xyzx
        add r24.w, r24.w, -cb10[r21.w + 12].z
        ge r27.w, r24.w, l(0.000000)
        max r24.w, r16.x, |r24.w|
        movc r24.w, r27.w, r24.w, -r24.w
        max r23.w, -r23.w, l(0.00000010)
        div r23.w, r24.w, r23.w
        min r22.w, r22.w, |r23.w|
        mov r32.x, cb10[r21.w + 12].w
        mov r32.yz, cb10[r21.w + 13].xxyx
        dp3 r23.w, r15.xyzx, r32.xyzx
        dp3 r24.w, r18.yzwy, r32.xyzx
        add r24.w, r24.w, -cb10[r21.w + 13].z
        ge r27.w, r24.w, l(0.000000)
        max r24.w, r16.x, |r24.w|
        movc r24.w, r27.w, r24.w, -r24.w
        max r23.w, -r23.w, l(0.00000010)
        div r23.w, r24.w, r23.w
        min r22.w, r22.w, |r23.w|
        add r32.x, r18.y, cb10[r21.w + 3].w
        add r32.yz, r18.zzwz, cb10[r21.w + 4].xxyx
        mad r32.xyz, r15.xyzx, r22.wwww, r32.xyzx
        dp3 r23.w, r32.xyzx, r32.xyzx
        sqrt r23.w, r23.w
        div r22.w, r22.w, r23.w
        add r22.w, r22.w, r22.w
        sqrt r22.w, r22.w
        mad r22.w, r9.w, l(5.000000), r22.w
        add r22.w, r22.w, l(-0.844800)
        mov r35.x, cb10[r21.w + 0].w
        mov r35.y, cb10[r21.w + 1].z
        mov r35.z, cb10[r21.w + 2].y
        dp3 r36.x, r32.xyzx, r35.xyzx
        mov r37.xy, cb10[r21.w + 1].xwxx
        mov r37.z, cb10[r21.w + 2].z
        dp3 r36.y, r32.xyzx, r37.xyzx
        mov r38.x, cb10[r21.w + 1].y
        mov r38.yz, cb10[r21.w + 2].xxwx
        dp3 r36.z, r32.xyzx, r38.xyzx
        ubfe r23.w, l(9), l(16), cb10[r21.w + 7].z
        utof r36.w, r23.w
        sample_l_indexable(texturecubearray)(float,float,float,float) r32.xyz, r36.xyzw, t8.xyzw, s2, r22.w
        and r34.xzw, r32.xxyz, l(0x7fffffff, 0, 0x7fffffff, 0x7fffffff)
        ieq r34.xzw, r34.xxzw, l(0x7f800000, 0, 0x7f800000, 0x7f800000)
        or r22.w, r34.z, r34.x
        or r22.w, r34.w, r22.w
        movc r32.xyz, r22.wwww, l(1.000000,1.000000,0,0), r32.xyzx
        dp3 r39.x, r18.yzwy, r35.xyzx
        dp3 r39.y, r18.yzwy, r37.xyzx
        dp3 r39.z, r18.yzwy, r38.xyzx
        mad_sat r18.yzw, r39.xxyz, cb10[r21.w + 3].xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
        mul r39.xy, r18.yzyy, cb10[r21.w + 4].zwzz
        mul r39.z, r18.w, cb10[r21.w + 5].x
        add r18.yzw, r39.xxyz, cb10[r21.w + 5].yyzw
        dp3 r36.x, r11.xyzx, r35.xyzx
        dp3 r36.y, r11.xyzx, r37.xyzx
        dp3 r36.z, r11.xyzx, r38.xyzx
        lt r34.xzw, l(0.000000, 0.000000, 0.000000, 0.000000), r36.xxyz
        movc r20.z, r34.x, l(0), l(0.500000)
        add r35.xyz, r18.yzwy, r20.xyzx
        sample_l_indexable(texture3d)(float,float,float,float) r35.xyz, r35.xyzx, t17.xyzw, s4, l(0.000000)
        mul r37.xyz, r36.xyzx, r36.xyzx
        mul r37.xyz, r19.xxxx, r37.xyzx
        movc r21.z, r34.z, l(0), l(0.500000)
        add r38.xyz, r18.yzwy, r21.xyzx
        sample_l_indexable(texture3d)(float,float,float,float) r38.xyz, r38.xyzx, t18.xyzw, s4, l(0.000000)
        mul r38.xyz, r37.yyyy, r38.xyzx
        mad r35.xyz, r35.xyzx, r37.xxxx, r38.xyzx
        movc r23.z, r34.w, l(0), l(0.500000)
        add r18.yzw, r18.yyzw, r23.xxyz
        sample_l_indexable(texture3d)(float,float,float,float) r18.yzw, r18.yzwy, t19.wxyz, s4, l(0.000000)
        mad r18.yzw, r18.yyzw, r37.zzzz, r35.xxyz
        sample_l_indexable(texturecubearray)(float,float,float,float) r34.xzw, r36.xyzw, t8.xwyz, s2, l(6.000000)
        and r35.xyz, r34.xzwx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
        ieq r35.xyz, r35.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
        or r20.z, r35.y, r35.x
        or r20.z, r35.z, r20.z
        movc r34.xzw, r20.zzzz, l(1.000000,0,1.000000,0), r34.xxzw
        mul r35.xyz, r18.yzwy, r34.xzwx
        dp3 r20.z, r35.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
        mad r29.xyz, r18.yzwy, r34.xzwx, r29.xyzx
        mul r18.y, r16.y, r20.z
        mul r32.xyz, r19.xxxx, r32.xyzx
        dp3 r18.z, r32.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
        mad r18.z, r16.y, r20.z, r18.z
        div r18.y, r18.y, r18.z
        mad r30.xyz, r32.xyzx, r18.yyyy, r30.xyzx
      else 
        mov r22.x, r31.x
        mov r31.xz, r22.xxyx
      endif 
    endloop 
    mov r24.xyz, r29.xyzx
    mov r27.xyz, r30.xyzx
    mov r28.xy, r31.xzxx
    iadd r17.w, r17.w, l(32)
  endloop 
  ge r9.w, r26.z, l(1.000000)
  and r16.x, r26.w, l(0x0000ff00)
  bfi r16.x, l(8), l(0), r28.y, r16.x
  movc r16.z, r9.w, r16.x, r28.y
  max r9.w, r28.x, l(1.000000)
  rcp r9.w, r9.w
  mov_sat r28.x, r28.x
  mul r16.xyw, r9.wwww, r24.xyxz
  mul r33.xyz, r9.wwww, r27.xyzx
  lt r17.x, r28.x, l(0.990000)
  if_nz r17.x
    iadd r16.z, r16.z, l(256)
    add r17.x, -r28.x, l(1.000000)
    mul r17.y, r17.x, cb2[19].x
    add r18.xyz, r10.xyzx, -cb2[35].xyzx
    mul r19.x, r18.x, cb2[35].w
    mul r19.yz, r18.yyzy, cb2[36].xxyx
    add_sat r18.xyz, r19.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    mul r19.xy, r18.xyxx, cb2[36].zwzz
    mul r19.z, r18.z, cb2[37].x
    add r18.xyz, r19.xyzx, cb2[37].yzwy
    lt r19.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
    movc r19.xyz, r19.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
    mov r19.w, l(0)
    add r20.xyz, r18.xyzx, r19.wwxw
    sample_l_indexable(texture3d)(float,float,float,float) r20.xyz, r20.xyzx, t17.xyzw, s4, l(0.000000)
    mul r21.xyz, r11.xyzx, r11.xyzx
    mul r17.yzw, r17.yyyy, r21.xxyz
    add r21.xyz, r18.xyzx, r19.wwyw
    sample_l_indexable(texture3d)(float,float,float,float) r21.xyz, r21.xyzx, t18.xyzw, s4, l(0.000000)
    mul r21.xyz, r17.zzzz, r21.xyzx
    mad r20.xyz, r20.xyzx, r17.yyyy, r21.xyzx
    add r18.xyz, r18.xyzx, r19.wwzw
    sample_l_indexable(texture3d)(float,float,float,float) r18.xyz, r18.xyzx, t19.xyzw, s4, l(0.000000)
    mad r17.yzw, r18.xxyz, r17.wwww, r20.xxyz
    mov r11.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r18.xyz, r11.xyzw, t8.xyzw, s2, l(6.000000)
    mul r17.yzw, r17.yyzw, r18.xxyz
    dp3 r11.w, r17.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
    mad r16.xyw, r24.xyxz, r9.wwww, r17.yzyw
    mov r15.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r17.yzw, r15.xyzw, t8.wxyz, s2, r13.w
    mad r9.w, cb2[19].x, r17.x, -r11.w
    mad r9.w, r2.y, r9.w, r11.w
    mad r33.xyz, r17.yzwy, r9.wwww, r33.xyzx
  endif 
else 
  mov r16.xyw, l(0,0,0,0)
endif 
add r1.w, -r1.w, l(1.000000)
mad r14.yzw, r33.xxyz, r1.wwww, r14.yyzw
add r1.w, r3.z, r2.x
log r1.w, |r1.w|
mul r1.w, r1.w, r2.w
exp r1.w, r1.w
add r1.w, r3.z, r1.w
add_sat r1.w, r1.w, l(-1.000000)
mul r1.w, r4.z, r1.w
mul r17.xyz, r3.zzzz, r16.xywx
and r18.xyz, r0.wwww, r17.yzxy
mad r19.xy, r2.xyxx, l(0.984375, 0.984375, 0.000000, 0.000000), l(0.00781250, 0.00781250, 0.000000, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r19.xy, r19.xyxx, t5.xyzw, s2, l(0.000000)
mul r14.yzw, r1.wwww, r14.yyzw
mul r19.xzw, r19.xxxx, r14.yyzw
mul r20.xyz, r19.yyyy, r14.yzwy
sqrt r1.w, r2.w
mad r1.w, r1.w, l(0.500000), l(0.500000)
mul r1.w, r1.w, r1.w
mul r2.y, r1.w, l(0.500000)
mad r1.w, -r1.w, l(0.500000), l(1.000000)
mad r4.z, r2.x, r1.w, r2.y
mul r1.w, r1.w, r4.z
mul r2.y, r2.y, r4.z
if_nz r6.w
  mov r21.x, l(3)
  mov r21.yzw, cb1[24].xxyz
  store_structured u2.xyzw, cb2[52].x, l(112), r21.xyzw
endif 
lt r4.z, l(0.000000), r8.w
if_nz r4.z
  if_nz r6.w
    ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r4.z, cb2[52].x, l(112), u2.xxxx
    or r4.z, r4.z, l(4)
    store_structured u2.x, cb2[52].x, l(112), r4.z
    store_structured u2.x, cb2[52].x, l(128), r12.w
  endif 
  lt r4.z, l(0.000000), r12.w
  if_nz r4.z
    mul r4.z, r2.z, cb2[18].w
    mul r4.z, r7.w, r4.z
    if_nz cb2[23].x
      add r21.xyz, r10.xyzx, cb1[24].xyzx
      mov r21.w, l(1.000000)
      dp4 r9.w, cb2[24].xyzw, r21.xyzw
      dp4 r11.w, cb2[25].xyzw, r21.xyzw
      frc r21.x, r9.w
      frc r21.y, r11.w
      iadd r9.w, l(-1), cb2[23].x
      utof r21.z, r9.w
      sample_l_indexable(texture2darray)(float,float,float,float) r14.yzw, r21.xyzx, t20.wxyz, s2, l(0.000000)
      add r14.yzw, r14.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
      mad r14.yzw, cb2[23].yyyy, r14.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
      mul r14.yzw, r14.yyzw, cb2[18].xxyz
    else 
      mov r14.yzw, cb2[18].xxyz
    endif 
    ushr r9.w, cb2[53].x, l(16)
    ult r11.w, l(0), r9.w
    and r11.w, r1.z, r11.w
    if_nz r11.w
      iadd r9.w, r9.w, cb2[0].x
      imad r9.w, r9.w, l(15), l(-15)
      mad r11.w, |r4.w|, l(-0.200000), l(0.400000)
      lt r13.w, r4.w, l(0.000000)
      and r13.w, r0.w, r13.w
      movc r11.w, r13.w, -r11.w, r11.w
      mad r21.xyz, r11.xyzx, r11.wwww, r10.xyzx
      mov r22.xyz, cb9[r9.w + 4].yzwy
      mov r22.w, cb9[r9.w + 5].x
      mov r21.w, l(1.000000)
      dp4 r22.x, r22.xyzw, r21.xyzw
      mov r23.xyz, cb9[r9.w + 5].yzwy
      mov r23.w, cb9[r9.w + 6].x
      dp4 r22.y, r23.xyzw, r21.xyzw
      mad r22.xy, r22.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      add r23.x, r22.x, cb9[r9.w + 9].w
      add r23.y, r22.y, cb9[r9.w + 10].x
      mul r22.xy, r23.xyxx, cb9[r9.w + 9].yzyy
      div r22.zw, cb9[r9.w + 3].yyyy, cb9[r9.w + 8].yyyw
      add r23.xy, -r22.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
      ge r23.xy, r22.xyxx, r23.xyxx
      ge r22.zw, r22.zzzw, r22.xxxy
      or r22.zw, r22.zzzw, r23.xxxy
      or r11.w, r22.w, r22.z
      if_z r11.w
        mov r23.xyz, cb9[r9.w + 6].yzwy
        mov r23.w, cb9[r9.w + 7].x
        dp4 r11.w, r23.xyzw, r21.xyzw
        mov_sat r22.xy, r22.xyxx
        mad r21.x, r22.x, cb9[r9.w + 8].y, cb9[r9.w + 8].z
        mad r21.y, r22.y, cb9[r9.w + 8].w, cb9[r9.w + 9].x
        add r11.w, r11.w, cb9[r9.w + 10].y
        div r11.w, r11.w, cb9[r9.w + 10].z
        max r11.w, r11.w, l(0.00006104)
        and r13.w, l(0x0000ffff), cb9[r9.w + 1].w
        if_nz cb2[58].y
          mov r22.x, -r4.x
          utof r23.z, r13.w
          mov r22.y, r13.x
          mov r22.z, r4.x
          mov r15.w, l(0)
          mov r19.y, l(0)
          loop 
            ige r21.w, r19.y, l(8)
            breakc_nz r21.w
            dp2 r24.x, icb[r19.y + 0].yxyy, r22.xyxx
            dp2 r24.y, icb[r19.y + 0].yxyy, r22.yzyy
            mad r23.xy, r24.xyxx, cb9[r9.w + 3].yyyy, r21.xyxx
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.w, r23.xyzx, t9.xxxx, s13, r11.w
            mad r15.w, r21.w, l(0.125000), r15.w
            iadd r19.y, r19.y, l(1)
          endloop 
        else 
          utof r21.z, r13.w
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r15.w, r21.xyzx, t9.xxxx, s13, r11.w
        endif 
        mul r9.w, r15.w, r15.w
        mul r9.w, r15.w, r9.w
      else 
        mov r9.w, l(1.000000)
      endif 
      mul r12.w, r9.w, r12.w
    else 
      and r9.w, cb2[53].x, l(0x0000ffff)
      ult r11.w, l(0), r9.w
      not r13.w, r1.z
      and r11.w, r11.w, r13.w
      if_nz r11.w
        iadd r9.w, r9.w, cb2[0].x
        imad r9.w, r9.w, l(15), l(-15)
        mad r11.w, |r4.w|, l(-0.200000), l(0.400000)
        lt r13.w, r4.w, l(0.000000)
        and r13.w, r0.w, r13.w
        movc r11.w, r13.w, -r11.w, r11.w
        mad r21.xyz, r11.xyzx, r11.wwww, r10.xyzx
        mov r22.xyz, cb9[r9.w + 4].yzwy
        mov r22.w, cb9[r9.w + 5].x
        mov r21.w, l(1.000000)
        dp4 r22.x, r22.xyzw, r21.xyzw
        mov r23.xyz, cb9[r9.w + 5].yzwy
        mov r23.w, cb9[r9.w + 6].x
        dp4 r22.y, r23.xyzw, r21.xyzw
        mad r22.xy, r22.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
        add r23.x, r22.x, cb9[r9.w + 9].w
        add r23.y, r22.y, cb9[r9.w + 10].x
        mul r22.xy, r23.xyxx, cb9[r9.w + 9].yzyy
        div r22.zw, cb9[r9.w + 3].yyyy, cb9[r9.w + 8].yyyw
        add r23.xy, -r22.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
        ge r23.xy, r22.xyxx, r23.xyxx
        ge r22.zw, r22.zzzw, r22.xxxy
        or r22.zw, r22.zzzw, r23.xxxy
        or r11.w, r22.w, r22.z
        if_z r11.w
          mov r23.xyz, cb9[r9.w + 6].yzwy
          mov r23.w, cb9[r9.w + 7].x
          dp4 r11.w, r23.xyzw, r21.xyzw
          mov_sat r22.xy, r22.xyxx
          mad r21.x, r22.x, cb9[r9.w + 8].y, cb9[r9.w + 8].z
          mad r21.y, r22.y, cb9[r9.w + 8].w, cb9[r9.w + 9].x
          add r11.w, r11.w, cb9[r9.w + 10].y
          div r11.w, r11.w, cb9[r9.w + 10].z
          max r11.w, r11.w, l(0.00006104)
          and r13.w, l(0x0000ffff), cb9[r9.w + 1].w
          if_nz cb2[58].y
            mov r22.x, -r4.x
            utof r23.z, r13.w
            mov r22.y, r13.x
            mov r22.z, r4.x
            mov r15.w, l(0)
            mov r19.y, l(0)
            loop 
              ige r21.w, r19.y, l(8)
              breakc_nz r21.w
              dp2 r24.x, icb[r19.y + 0].yxyy, r22.xyxx
              dp2 r24.y, icb[r19.y + 0].yxyy, r22.yzyy
              mad r23.xy, r24.xyxx, cb9[r9.w + 3].yyyy, r21.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.w, r23.xyzx, t9.xxxx, s13, r11.w
              mad r15.w, r21.w, l(0.125000), r15.w
              iadd r19.y, r19.y, l(1)
            endloop 
          else 
            utof r21.z, r13.w
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r15.w, r21.xyzx, t9.xxxx, s13, r11.w
          endif 
          mul r9.w, r15.w, r15.w
          mul r9.w, r15.w, r9.w
        else 
          mov r9.w, l(1.000000)
        endif 
        mul r12.w, r9.w, r12.w
      endif 
    endif 
    mad r9.w, -r2.x, l(0.500000), l(1.000000)
    mad r9.w, -r8.w, r9.w, l(1.000000)
    mul r9.w, r9.w, r9.w
    mad r9.w, -r9.w, l(0.620000), l(0.620000)
    add r9.w, -r8.w, r9.w
    mad r8.w, r2.w, r9.w, r8.w
    mul r8.w, r12.w, r8.w
    mul r21.xyz, r14.yzwy, r8.wwww
    lt r4.w, l(0.000000), r4.w
    mad r21.xyz, r16.xywx, r3.zzzz, r21.xyzx
    mad r16.xyw, -r10.xyxz, r0.zzzz, cb2[17].xyxz
    dp3 r0.z, r16.xywx, r16.xywx
    rsq r0.z, r0.z
    mul r16.xyw, r0.zzzz, r16.xyxw
    dp3 r0.z, r16.xywx, r12.xyzx
    dp3 r3.z, r11.xyzx, r16.xywx
    mad r9.w, |r3.z|, r2.z, -|r3.z|
    mad r3.z, |r3.z|, r9.w, l(1.000000)
    mad r7.w, r7.w, r1.w, r2.y
    mul r3.z, r3.z, r3.z
    mul r3.z, r7.w, r3.z
    rcp r3.z, r3.z
    mul r3.z, r4.z, r3.z
    mul r3.z, r3.z, r12.w
    mul r3.z, r3.z, l(0.250000)
    mad r22.yzw, r3.zzzz, r14.yyzw, r20.xxyz
    add_sat r0.z, -r0.z, l(1.000000)
    mul r4.z, r0.z, r0.z
    mul r4.z, r4.z, r4.z
    mul r0.z, r0.z, r4.z
    mul r0.z, r0.z, r3.z
    mad r16.xyw, r0.zzzz, r14.yzyw, r19.xzxw
    mad r14.yzw, r8.wwww, r14.yyzw, r18.zzxy
    and r23.xyz, r0.wwww, r14.zwyz
    mov r21.w, r18.z
    mov r17.w, r23.z
    movc r17.xyzw, r4.wwww, r21.xyzw, r17.xyzw
    mov r18.zw, r16.xxxy
    mov r23.zw, r19.xxxz
    movc r21.xyzw, r4.wwww, r18.xyzw, r23.xyzw
    mov r22.x, r16.w
    mov r20.w, r19.w
    movc r20.xyzw, r4.wwww, r22.yzwx, r20.xyzw
    if_nz r6.w
      ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r0.z, cb2[52].x, l(112), u2.xxxx
      or r0.z, r0.z, l(8)
      store_structured u2.x, cb2[52].x, l(112), r0.z
      store_structured u2.x, cb2[52].x, l(132), r12.w
    endif 
    mov r18.z, r17.w
    mov r18.xy, r21.xyxx
    mov r19.xz, r21.zzwz
    mov r19.w, r20.w
    mov r0.z, l(0x00010101)
  else 
    mov r0.z, l(257)
  endif 
else 
  mov r0.z, l(1)
endif 
ftou r3.z, cb1[44].x
iadd r3.z, r3.z, l(7)
ushr r3.z, r3.z, l(3)
imad r3.z, r0.y, r3.z, r0.x
ishl r3.z, r3.z, l(5)
not r4.z, r1.z
mov r21.x, -r4.x
mad r2.x, -r2.x, l(0.500000), l(1.000000)
mov r22.x, l(2)
mov r10.w, l(1.000000)
mov r23.x, l(2)
mov r24.z, l(1.000000)
mov r25.w, l(1.000000)
mov r26.w, l(1.000000)
mov r27.w, l(1.000000)
mov r21.z, r4.x
mov r28.w, l(1.000000)
mov r21.yw, r13.xxxx
mov r4.y, r21.w
mov r13.y, r21.x
mov r29.x, r13.x
mov r29.y, r21.x
mov r29.z, r4.x
mov r13.z, r4.x
mov r30.w, l(1.000000)
mov r31.x, r13.x
mov r31.y, r21.x
mov r31.z, r4.x
mov r32.x, r13.x
mov r32.y, r21.x
mov r32.z, r4.x
mov r14.yzw, r17.xxyz
mov r33.xyz, r18.zxyz
mov r34.xyz, r19.xzwx
mov r16.xyw, r20.xyxz
mov r4.w, cb2[58].y
mov r7.w, r0.z
mov r8.w, l(0)
loop 
  uge r9.w, r8.w, cb2[0].x
  breakc_nz r9.w
  ushr r9.w, r8.w, l(5)
  iadd r9.w, r3.z, r9.w
  ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r9.w, r9.w, l(0), t26.xxxx
  mov r35.xyz, r14.yzwy
  mov r36.xyz, r33.xyzx
  mov r37.xyz, r34.xyzx
  mov r38.xyz, r16.xywx
  mov r11.w, r4.w
  mov r12.w, r7.w
  mov r13.w, r9.w
  loop 
    breakc_z r13.w
    firstbit_lo r15.w, r13.w
    ishl r17.w, l(1), r15.w
    not r17.w, r17.w
    and r13.w, r13.w, r17.w
    iadd r15.w, r8.w, r15.w
    imul null, r15.w, r15.w, l(15)
    ubfe r17.w, l(3), l(24), cb9[r15.w + 1].w
    ieq r18.w, r17.w, l(2)
    if_nz r18.w
      ubfe r18.w, l(3), l(27), cb9[r15.w + 1].w
      and r19.y, r12.w, l(255)
      ult r20.w, r19.y, l(32)
      and r20.w, r6.w, r20.w
      if_nz r20.w
        imad r19.y, r19.y, l(24), l(112)
        add r22.yzw, cb1[24].xxyz, cb9[r15.w + 0].xxyz
        store_structured u2.xyzw, cb2[52].x, r19.y, r22.xyzw
      endif 
      iadd r19.y, r12.w, l(1)
      add r39.xy, -r10.xyxx, cb9[r15.w + 3].zwzz
      add r39.z, -r10.z, cb9[r15.w + 4].x
      dp3 r20.w, r39.xyzx, r39.xyzx
      rsq r20.w, r20.w
      mul r22.yzw, r20.wwww, r39.xxyz
      mul r24.w, r2.z, cb9[r15.w + 1].z
      mul r24.w, r24.w, l(0.250000)
      dp3 r22.y, r11.xyzx, r22.yzwy
      mov_sat r22.z, r22.y
      movc r22.w, r0.w, |r22.y|, r22.z
      lt r29.w, l(0.000000), r22.w
      if_nz r29.w
        mov r40.xyz, cb9[r15.w + 7].yzwy
        mov r40.w, cb9[r15.w + 8].x
        dp4 r29.w, r40.xyzw, r10.xyzw
        lt r31.w, r29.w, l(1.000000)
        if_nz r31.w
          mov r41.xyz, l(1.000000,1.000000,1.000000,0)
          mov r31.w, l(0)
        else 
          add r42.xyz, -r10.xyzx, cb9[r15.w + 0].xyzx
          mul r32.w, cb9[r15.w + 3].x, cb9[r15.w + 3].x
          dp3 r33.w, r42.xyzx, r42.xyzx
          div r32.w, r32.w, r33.w
          min r32.w, r32.w, l(1.000000)
          mad_sat r42.xy, r29.wwww, cb9[r15.w + 2].xzxx, cb9[r15.w + 2].ywyy
          mul r42.zw, r42.xxxy, r42.xxxy
          mad r42.xy, r42.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
          mul r42.xy, r42.xyxx, r42.zwzz
          mul r32.w, r32.w, r42.x
          mul r32.w, r42.y, r32.w
          mov r42.xyz, cb9[r15.w + 4].yzwy
          mov r42.w, cb9[r15.w + 5].x
          dp4 r42.x, r42.xyzw, r10.xyzw
          mov r43.xyz, cb9[r15.w + 5].yzwy
          mov r43.w, cb9[r15.w + 6].x
          dp4 r42.y, r43.xyzw, r10.xyzw
          div r24.xy, r42.xyxx, r29.wwww
          lt r29.w, cb9[r15.w + 10].w, l(0.00048828)
          if_nz r29.w
            mad_sat r42.xy, |r24.xyxx|, cb9[r15.w + 12].xyxx, cb9[r15.w + 12].zwzz
            mul r42.zw, r42.xxxy, r42.xxxy
            mad r42.xy, r42.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
            mul r42.xy, r42.xyxx, r42.zwzz
            mul r29.w, r42.y, r42.x
          else 
            mul_sat r42.xyzw, |r24.yyxx|, cb9[r15.w + 11].xyzw
            log r42.xyzw, r42.xyzw
            mul r42.xyzw, r42.xyzw, cb9[r15.w + 12].zzzz
            exp r42.xyzw, r42.xyzw
            add r42.xy, r42.zwzz, r42.xyxx
            log r42.xy, r42.xyxx
            mul r42.xy, r42.xyxx, cb9[r15.w + 12].wwww
            exp r42.xy, r42.xyxx
            mul r33.w, r42.x, cb9[r15.w + 12].x
            mad r34.w, cb9[r15.w + 12].y, r42.y, l(-1.000000)
            mad r33.w, cb9[r15.w + 12].y, r42.y, -r33.w
            div_sat r33.w, r34.w, r33.w
            mul r34.w, r33.w, r33.w
            mad r33.w, r33.w, l(-2.000000), l(3.000000)
            mul r29.w, r33.w, r34.w
          endif 
          mul r31.w, r29.w, r32.w
          and r29.w, l(255), cb9[r15.w + 14].w
          if_nz r29.w
            dp3 r32.w, cb9[r15.w + 13].xyzx, r24.xyzx
            mov r42.x, cb9[r15.w + 13].w
            mov r42.yz, cb9[r15.w + 14].xxyx
            dp3 r24.x, r42.xyzx, r24.xyzx
            frc r42.x, r32.w
            frc r42.y, r24.x
            iadd r24.x, r29.w, l(-1)
            utof r42.z, r24.x
            sample_l_indexable(texture2darray)(float,float,float,float) r41.xyz, r42.xyzx, t20.xyzw, s2, l(0.000000)
          else 
            mov r41.xyz, l(1.000000,1.000000,1.000000,0)
          endif 
        endif 
        mov r42.x, cb9[r15.w + 0].w
        mov r42.yz, cb9[r15.w + 1].xxyx
        mul r41.xyz, r41.xyzx, r42.xyzx
        lt r24.x, l(0.000000), r31.w
        if_nz r24.x
          and r24.x, r19.y, l(255)
          iadd r24.y, r24.x, l(-1)
          ult r24.y, r24.y, l(32)
          and r24.y, r6.w, r24.y
          if_nz r24.y
            imad r24.xy, r24.xxxx, l(24, 24, 0, 0), l(88, 104, 0, 0)
            ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r29.w, cb2[52].x, r24.x, u2.xxxx
            or r29.w, r29.w, l(4)
            store_structured u2.x, cb2[52].x, r24.x, r29.w
            store_structured u2.x, cb2[52].x, r24.y, r31.w
          endif 
          iadd r24.x, r12.w, l(257)
          ine r18.w, r18.w, l(1)
          if_nz r18.w
            mad r18.w, |r22.y|, l(-0.200000), l(0.400000)
            lt r24.y, r22.y, l(0.000000)
            and r24.y, r0.w, r24.y
            movc r18.w, r24.y, -r18.w, r18.w
            mad r25.xyz, r11.xyzx, r18.wwww, r10.xyzx
            mov r42.xyz, cb9[r15.w + 6].yzwy
            mov r42.w, cb9[r15.w + 7].x
            dp4 r18.w, r42.xyzw, r25.xyzw
            dp4 r24.y, r40.xyzw, r25.xyzw
            ge r29.w, r24.y, r18.w
            if_nz r29.w
              mov r40.xyz, cb9[r15.w + 4].yzwy
              mov r40.w, cb9[r15.w + 5].x
              dp4 r40.x, r40.xyzw, r25.xyzw
              mov r42.xyz, cb9[r15.w + 5].yzwy
              mov r42.w, cb9[r15.w + 6].x
              dp4 r40.y, r42.xyzw, r25.xyzw
              div r25.xy, r40.xyxx, r24.yyyy
              mad_sat r25.xy, r25.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
              mad r40.x, r25.x, cb9[r15.w + 8].y, cb9[r15.w + 8].z
              mad r40.y, r25.y, cb9[r15.w + 8].w, cb9[r15.w + 9].x
              div r18.w, r18.w, r24.y
              max r18.w, r18.w, l(0.00006104)
              and r24.y, l(0x0000ffff), cb9[r15.w + 1].w
              if_nz r11.w
                utof r25.z, r24.y
                mov r29.w, l(0)
                mov r32.w, l(0)
                loop 
                  ige r33.w, r32.w, l(8)
                  breakc_nz r33.w
                  dp2 r42.x, icb[r32.w + 0].yxyy, r21.xyxx
                  dp2 r42.y, icb[r32.w + 0].yxyy, r21.yzyy
                  mad r25.xy, r42.xyxx, cb9[r15.w + 3].yyyy, r40.xyxx
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r25.x, r25.xyzx, t9.xxxx, s13, r18.w
                  mad r29.w, r25.x, l(0.125000), r29.w
                  iadd r32.w, r32.w, l(1)
                endloop 
              else 
                utof r40.z, r24.y
                sample_c_lz_indexable(texture2darray)(float,float,float,float) r29.w, r40.xyzx, t9.xxxx, s13, r18.w
              endif 
              mul r18.w, r29.w, r29.w
              mul r18.w, r29.w, r18.w
            else 
              mov r18.w, l(1.000000)
            endif 
          else 
            mov r18.w, l(1.000000)
          endif 
          mul r18.w, r18.w, r31.w
          lt r24.y, l(0.000000), r18.w
          if_nz r24.y
            ubfe r24.y, l(4), l(16), cb9[r15.w + 1].w
            ult r25.x, l(0), r24.y
            and r25.x, r1.z, r25.x
            if_nz r25.x
              iadd r24.y, r24.y, cb2[0].x
              imad r24.y, r24.y, l(15), l(-15)
              mad r25.x, |r22.y|, l(-0.200000), l(0.400000)
              lt r25.y, r22.y, l(0.000000)
              and r25.y, r0.w, r25.y
              movc r25.x, r25.y, -r25.x, r25.x
              mad r26.xyz, r11.xyzx, r25.xxxx, r10.xyzx
              mov r40.xyz, cb9[r24.y + 6].yzwy
              mov r40.w, cb9[r24.y + 7].x
              dp4 r25.x, r40.xyzw, r26.xyzw
              mov r40.xyz, cb9[r24.y + 7].yzwy
              mov r40.w, cb9[r24.y + 8].x
              dp4 r25.y, r40.xyzw, r26.xyzw
              lt r25.z, r25.y, r25.x
              if_z r25.z
                mov r40.xyz, cb9[r24.y + 4].yzwy
                mov r40.w, cb9[r24.y + 5].x
                dp4 r40.x, r40.xyzw, r26.xyzw
                mov r42.xyz, cb9[r24.y + 5].yzwy
                mov r42.w, cb9[r24.y + 6].x
                dp4 r40.y, r42.xyzw, r26.xyzw
                div r26.xy, r40.xyxx, r25.yyyy
                mad r26.xy, r26.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                add r40.x, r26.x, cb9[r24.y + 9].w
                add r40.y, r26.y, cb9[r24.y + 10].x
                mul r26.xy, r40.xyxx, cb9[r24.y + 9].yzyy
                div r40.xy, cb9[r24.y + 3].yyyy, cb9[r24.y + 8].ywyy
                add r40.zw, -r40.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                ge r40.zw, r26.xxxy, r40.zzzw
                ge r40.xy, r40.xyxx, r26.xyxx
                or r40.xy, r40.xyxx, r40.zwzz
                or r26.z, r40.y, r40.x
                if_z r26.z
                  mov_sat r26.xy, r26.xyxx
                  mad r40.x, r26.x, cb9[r24.y + 8].y, cb9[r24.y + 8].z
                  mad r40.y, r26.y, cb9[r24.y + 8].w, cb9[r24.y + 9].x
                  mul r26.x, r25.y, cb9[r24.y + 10].z
                  mad r25.x, cb9[r24.y + 10].y, r25.y, r25.x
                  div r25.x, r25.x, r26.x
                endif 
              else 
                mov r26.z, l(-1)
              endif 
              or r25.y, r25.z, r26.z
              if_z r25.y
                max r25.x, r25.x, l(0.00006104)
                and r25.y, l(0x0000ffff), cb9[r24.y + 1].w
                if_nz r11.w
                  utof r26.z, r25.y
                  mov r25.z, l(0)
                  mov r31.w, l(0)
                  loop 
                    ige r32.w, r31.w, l(8)
                    breakc_nz r32.w
                    dp2 r42.x, icb[r31.w + 0].yxyy, r21.xwxx
                    dp2 r42.y, icb[r31.w + 0].xyxx, r4.xyxx
                    mad r26.xy, r42.xyxx, cb9[r24.y + 3].yyyy, r40.xyxx
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r26.x, r26.xyzx, t9.xxxx, s13, r25.x
                    mad r25.z, r26.x, l(0.125000), r25.z
                    iadd r31.w, r31.w, l(1)
                  endloop 
                else 
                  utof r40.z, r25.y
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r25.z, r40.xyzx, t9.xxxx, s13, r25.x
                endif 
                mul r24.y, r25.z, r25.z
                mul r24.y, r25.z, r24.y
              else 
                mov r24.y, l(1.000000)
              endif 
              mul r18.w, r18.w, r24.y
            else 
              ubfe r24.y, l(4), l(20), cb9[r15.w + 1].w
              ult r25.x, l(0), r24.y
              and r25.x, r4.z, r25.x
              if_nz r25.x
                iadd r24.y, r24.y, cb2[0].x
                imad r24.y, r24.y, l(15), l(-15)
                mad r25.x, |r22.y|, l(-0.200000), l(0.400000)
                lt r25.y, r22.y, l(0.000000)
                and r25.y, r0.w, r25.y
                movc r25.x, r25.y, -r25.x, r25.x
                mad r27.xyz, r11.xyzx, r25.xxxx, r10.xyzx
                mov r40.xyz, cb9[r24.y + 6].yzwy
                mov r40.w, cb9[r24.y + 7].x
                dp4 r25.x, r40.xyzw, r27.xyzw
                mov r40.xyz, cb9[r24.y + 7].yzwy
                mov r40.w, cb9[r24.y + 8].x
                dp4 r25.y, r40.xyzw, r27.xyzw
                lt r26.x, r25.y, r25.x
                if_z r26.x
                  mov r40.xyz, cb9[r24.y + 4].yzwy
                  mov r40.w, cb9[r24.y + 5].x
                  dp4 r40.x, r40.xyzw, r27.xyzw
                  mov r42.xyz, cb9[r24.y + 5].yzwy
                  mov r42.w, cb9[r24.y + 6].x
                  dp4 r40.y, r42.xyzw, r27.xyzw
                  div r26.yz, r40.xxyx, r25.yyyy
                  mad r26.yz, r26.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
                  add r27.x, r26.y, cb9[r24.y + 9].w
                  add r27.y, r26.z, cb9[r24.y + 10].x
                  mul r26.yz, r27.xxyx, cb9[r24.y + 9].yyzy
                  div r27.xy, cb9[r24.y + 3].yyyy, cb9[r24.y + 8].ywyy
                  add r40.xy, -r27.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                  ge r40.xy, r26.yzyy, r40.xyxx
                  ge r27.xy, r27.xyxx, r26.yzyy
                  or r27.xy, r27.xyxx, r40.xyxx
                  or r27.x, r27.y, r27.x
                  if_z r27.x
                    mov_sat r26.yz, r26.yyzy
                    mad r40.x, r26.y, cb9[r24.y + 8].y, cb9[r24.y + 8].z
                    mad r40.y, r26.z, cb9[r24.y + 8].w, cb9[r24.y + 9].x
                    mul r26.y, r25.y, cb9[r24.y + 10].z
                    mad r25.x, cb9[r24.y + 10].y, r25.y, r25.x
                    div r25.x, r25.x, r26.y
                  endif 
                else 
                  mov r27.x, l(-1)
                endif 
                or r25.y, r26.x, r27.x
                if_z r25.y
                  max r25.x, r25.x, l(0.00006104)
                  and r25.y, l(0x0000ffff), cb9[r24.y + 1].w
                  if_nz r11.w
                    utof r26.z, r25.y
                    mov r27.xy, l(0,0,0,0)
                    loop 
                      ige r27.z, r27.y, l(8)
                      breakc_nz r27.z
                      dp2 r42.x, icb[r27.y + 0].xyxx, r29.xyxx
                      dp2 r42.y, icb[r27.y + 0].yxyy, r29.xzxx
                      mad r26.xy, r42.xyxx, cb9[r24.y + 3].yyyy, r40.xyxx
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r26.x, r26.xyzx, t9.xxxx, s13, r25.x
                      mad r27.x, r26.x, l(0.125000), r27.x
                      iadd r27.y, r27.y, l(1)
                    endloop 
                  else 
                    utof r40.z, r25.y
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r27.x, r40.xyzx, t9.xxxx, s13, r25.x
                  endif 
                  mul r24.y, r27.x, r27.x
                  mul r24.y, r27.x, r24.y
                else 
                  mov r24.y, l(1.000000)
                endif 
                mul r18.w, r18.w, r24.y
              endif 
            endif 
            mad r24.y, -r22.w, r2.x, l(1.000000)
            mul r24.y, r24.y, r24.y
            mad r24.y, -r24.y, l(0.620000), l(0.620000)
            add r24.y, -r22.w, r24.y
            mad r22.w, r2.w, r24.y, r22.w
            mul r22.w, r18.w, r22.w
            lt r22.y, l(0.000000), r22.y
            mad r26.xyz, r22.wwww, r41.xyzx, r35.xyzx
            mad r39.xyz, r39.xyzx, r20.wwww, r12.xyzx
            dp3 r20.w, r39.xyzx, r39.xyzx
            rsq r20.w, r20.w
            mul r39.xyz, r20.wwww, r39.xyzx
            dp3 r20.w, r39.xyzx, r12.xyzx
            dp3 r24.y, r11.xyzx, r39.xyzx
            mad r25.x, |r24.y|, r2.z, -|r24.y|
            mad r24.y, |r24.y|, r25.x, l(1.000000)
            mad r25.x, r22.z, r1.w, r2.y
            mul r24.y, r24.y, r24.y
            mul r24.y, r25.x, r24.y
            rcp r24.y, r24.y
            mul r22.z, r24.w, r22.z
            mul r22.z, r22.z, r24.y
            mul r22.z, r18.w, r22.z
            mad r39.xyz, r22.zzzz, r41.xyzx, r38.xyzx
            add_sat r20.w, -r20.w, l(1.000000)
            mul r24.y, r20.w, r20.w
            mul r24.y, r24.y, r24.y
            mul r20.w, r20.w, r24.y
            mul r20.w, r20.w, r22.z
            mad r40.xyz, r20.wwww, r41.xyzx, r37.xyzx
            mad r41.xyz, r22.wwww, r41.xyzx, r36.xyzx
            movc r41.xyz, r0.wwww, r41.xyzx, r36.xyzx
            movc r35.xyz, r22.yyyy, r26.xyzx, r35.xyzx
            movc r36.xyz, r22.yyyy, r36.xyzx, r41.xyzx
            movc r37.xyz, r22.yyyy, r40.xyzx, r37.xyzx
            movc r38.xyz, r22.yyyy, r39.xyzx, r38.xyzx
            and r20.w, r24.x, l(255)
            iadd r22.y, r20.w, l(-1)
            ult r22.y, r22.y, l(32)
            and r22.y, r6.w, r22.y
            if_nz r22.y
              imad r22.yz, r20.wwww, l(0, 24, 24, 0), l(0, 88, 108, 0)
              ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r20.w, cb2[52].x, r22.y, u2.xxxx
              or r20.w, r20.w, l(8)
              store_structured u2.x, cb2[52].x, r22.y, r20.w
              store_structured u2.x, cb2[52].x, r22.z, r18.w
            endif 
            iadd r12.w, r12.w, l(0x00010101)
          else 
            mov r12.w, r24.x
          endif 
        else 
          mov r12.w, r19.y
        endif 
      else 
        mov r12.w, r19.y
      endif 
    else 
      ieq r17.w, r17.w, l(4)
      if_nz r17.w
        ubfe r17.w, l(3), l(27), cb9[r15.w + 1].w
        and r18.w, r12.w, l(255)
        ult r19.y, r18.w, l(32)
        and r19.y, r6.w, r19.y
        if_nz r19.y
          imad r18.w, r18.w, l(24), l(112)
          add r23.yzw, cb1[24].xxyz, cb9[r15.w + 0].xxyz
          store_structured u2.xyzw, cb2[52].x, r18.w, r23.xyzw
        endif 
        iadd r18.w, r12.w, l(1)
        mul r19.y, r2.z, cb9[r15.w + 1].z
        mul r19.y, r19.y, l(0.250000)
        lt r20.w, l(0.000000), cb9[r15.w + 6].y
        mov r26.xy, cb9[r15.w + 5].zwzz
        mov r26.z, cb9[r15.w + 6].x
        mad r22.yzw, -r26.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000), cb9[r15.w + 0].xxyz
        add r23.yzw, -r10.xxyz, r22.yyzw
        dp3 r24.x, r26.xyzx, r15.xyzx
        dp3 r24.y, r26.xyzx, r23.yzwy
        dp3 r23.y, r15.xyzx, r23.yzwy
        mad r23.z, -r24.x, r24.x, cb9[r15.w + 6].y
        mad r23.y, r24.x, r23.y, -r24.y
        div_sat r23.w, -r24.y, cb9[r15.w + 6].y
        div_sat r23.y, r23.y, r23.z
        div r23.z, r23.z, cb9[r15.w + 6].y
        mul r23.z, r23.z, l(10.000000)
        min r23.z, r23.z, l(1.000000)
        add r23.y, -r23.w, r23.y
        mad r23.y, r23.z, r23.y, r23.w
        mad r24.xyw, r23.yyyy, r26.xyxz, r22.yzyw
        mad r22.yzw, r23.wwww, r26.xxyz, r22.yyzw
        movc r22.yzw, r20.wwww, r22.yyzw, cb9[r15.w + 0].xxyz
        movc r23.yzw, r20.wwww, r24.xxyw, cb9[r15.w + 0].xxyz
        add r23.yzw, -r10.xxyz, r23.yyzw
        add r22.yzw, -r10.xxyz, r22.yyzw
        dp3 r20.w, r23.yzwy, r23.yzwy
        rsq r20.w, r20.w
        mul r24.xyw, r20.wwww, r23.yzyw
        dp3 r25.x, r22.yzwy, r22.yzwy
        rsq r25.y, r25.x
        mul r22.yzw, r22.yyzw, r25.yyyy
        dp3 r22.y, r11.xyzx, r22.yzwy
        mov_sat r22.z, r22.y
        movc r22.z, r0.w, |r22.y|, r22.z
        lt r22.w, l(0.000000), r22.z
        if_nz r22.w
          sqrt r22.w, r25.x
          mul r25.y, cb9[r15.w + 3].x, cb9[r15.w + 3].x
          div r25.x, r25.y, r25.x
          min r25.x, r25.x, l(1.000000)
          mad_sat r26.xy, r22.wwww, cb9[r15.w + 2].xzxx, cb9[r15.w + 2].ywyy
          mul r27.yz, r26.xxyx, r26.xxyx
          mad r26.xy, r26.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
          mul r26.xy, r26.xyxx, r27.yzyy
          mul r22.w, r25.x, r26.x
          mul r22.w, r26.y, r22.w
          lt r25.x, l(0.000000), r22.w
          if_nz r25.x
            and r25.x, r18.w, l(255)
            iadd r25.y, r25.x, l(-1)
            ult r25.y, r25.y, l(32)
            and r25.y, r6.w, r25.y
            if_nz r25.y
              imad r25.xy, r25.xxxx, l(24, 24, 0, 0), l(88, 104, 0, 0)
              ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r26.x, cb2[52].x, r25.x, u2.xxxx
              or r26.x, r26.x, l(4)
              store_structured u2.x, cb2[52].x, r25.x, r26.x
              store_structured u2.x, cb2[52].x, r25.y, r22.w
            endif 
            iadd r25.x, r12.w, l(257)
            ine r17.w, r17.w, l(1)
            if_nz r17.w
              mad r17.w, |r22.y|, l(-0.200000), l(0.400000)
              lt r25.y, r22.y, l(0.000000)
              and r25.y, r0.w, r25.y
              movc r17.w, r25.y, -r17.w, r17.w
              mad r26.xyz, r11.xyzx, r17.wwww, r10.xyzx
              add r26.xyz, r26.xyzx, -cb9[r15.w + 4].yzwy
              max r17.w, |r26.z|, |r26.y|
              max r17.w, r17.w, |r26.x|
              div r17.w, cb9[r15.w + 5].x, r17.w
              add r17.w, r17.w, cb9[r15.w + 5].y
              dp3 r25.y, r26.xyzx, r26.xyzx
              rsq r25.y, r25.y
              max r17.w, r17.w, l(0.00006104)
              and r27.y, l(0x0000ffff), cb9[r15.w + 1].w
              utof r39.w, r27.y
              mov r27.yz, l(0,0,0,0)
              loop 
                ige r31.w, r27.z, l(8)
                breakc_nz r31.w
                dp2 r40.y, icb[r27.z + 0].xyxx, r13.xyxx
                dp2 r40.z, icb[r27.z + 0].yxyy, r13.xzxx
                mul r40.yz, r40.yyzy, cb9[r15.w + 3].yyyy
                mul r40.x, r14.x, r40.y
                mul r40.w, r5.x, r40.y
                mad r39.xyz, r26.xyzx, r25.yyyy, r40.xzwx
                sample_c_lz_indexable(texturecubearray)(float,float,float,float) r31.w, r39.xyzw, t10.xxxx, s13, r17.w
                mad r27.y, r31.w, l(0.125000), r27.y
                iadd r27.z, r27.z, l(1)
              endloop 
            else 
              mov r27.y, l(1.000000)
            endif 
            mul r17.w, r22.w, r27.y
            lt r22.w, l(0.000000), r17.w
            if_nz r22.w
              ubfe r22.w, l(4), l(16), cb9[r15.w + 1].w
              ult r25.y, l(0), r22.w
              and r25.y, r1.z, r25.y
              if_nz r25.y
                iadd r22.w, r22.w, cb2[0].x
                imad r22.w, r22.w, l(15), l(-15)
                mad r25.y, |r22.y|, l(-0.200000), l(0.400000)
                lt r26.x, r22.y, l(0.000000)
                and r26.x, r0.w, r26.x
                movc r25.y, r26.x, -r25.y, r25.y
                mad r28.xyz, r11.xyzx, r25.yyyy, r10.xyzx
                mov r39.xyz, cb9[r22.w + 6].yzwy
                mov r39.w, cb9[r22.w + 7].x
                dp4 r25.y, r39.xyzw, r28.xyzw
                mov r39.xyz, cb9[r22.w + 7].yzwy
                mov r39.w, cb9[r22.w + 8].x
                dp4 r26.x, r39.xyzw, r28.xyzw
                lt r26.y, r26.x, r25.y
                if_z r26.y
                  mov r39.xyz, cb9[r22.w + 4].yzwy
                  mov r39.w, cb9[r22.w + 5].x
                  dp4 r39.x, r39.xyzw, r28.xyzw
                  mov r40.xyz, cb9[r22.w + 5].yzwy
                  mov r40.w, cb9[r22.w + 6].x
                  dp4 r39.y, r40.xyzw, r28.xyzw
                  div r28.xy, r39.xyxx, r26.xxxx
                  mad r28.xy, r28.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r39.x, r28.x, cb9[r22.w + 9].w
                  add r39.y, r28.y, cb9[r22.w + 10].x
                  mul r28.xy, r39.xyxx, cb9[r22.w + 9].yzyy
                  div r39.xy, cb9[r22.w + 3].yyyy, cb9[r22.w + 8].ywyy
                  add r39.zw, -r39.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                  ge r39.zw, r28.xxxy, r39.zzzw
                  ge r39.xy, r39.xyxx, r28.xyxx
                  or r39.xy, r39.xyxx, r39.zwzz
                  or r26.z, r39.y, r39.x
                  if_z r26.z
                    mov_sat r28.xy, r28.xyxx
                    mad r39.x, r28.x, cb9[r22.w + 8].y, cb9[r22.w + 8].z
                    mad r39.y, r28.y, cb9[r22.w + 8].w, cb9[r22.w + 9].x
                    mul r27.z, r26.x, cb9[r22.w + 10].z
                    mad r25.y, cb9[r22.w + 10].y, r26.x, r25.y
                    div r25.y, r25.y, r27.z
                  endif 
                else 
                  mov r26.z, l(-1)
                endif 
                or r26.x, r26.y, r26.z
                if_z r26.x
                  max r25.y, r25.y, l(0.00006104)
                  and r26.x, l(0x0000ffff), cb9[r22.w + 1].w
                  if_nz r11.w
                    utof r28.z, r26.x
                    mov r26.yz, l(0,0,0,0)
                    loop 
                      ige r27.z, r26.z, l(8)
                      breakc_nz r27.z
                      dp2 r40.x, icb[r26.z + 0].xyxx, r31.xyxx
                      dp2 r40.y, icb[r26.z + 0].yxyy, r31.xzxx
                      mad r28.xy, r40.xyxx, cb9[r22.w + 3].yyyy, r39.xyxx
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r27.z, r28.xyzx, t9.xxxx, s13, r25.y
                      mad r26.y, r27.z, l(0.125000), r26.y
                      iadd r26.z, r26.z, l(1)
                    endloop 
                  else 
                    utof r39.z, r26.x
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r26.y, r39.xyzx, t9.xxxx, s13, r25.y
                  endif 
                  mul r22.w, r26.y, r26.y
                  mul r22.w, r26.y, r22.w
                else 
                  mov r22.w, l(1.000000)
                endif 
                mul r17.w, r17.w, r22.w
              else 
                ubfe r22.w, l(4), l(20), cb9[r15.w + 1].w
                ult r25.y, l(0), r22.w
                and r25.y, r4.z, r25.y
                if_nz r25.y
                  iadd r22.w, r22.w, cb2[0].x
                  imad r22.w, r22.w, l(15), l(-15)
                  mad r25.y, |r22.y|, l(-0.200000), l(0.400000)
                  lt r26.x, r22.y, l(0.000000)
                  and r26.x, r0.w, r26.x
                  movc r25.y, r26.x, -r25.y, r25.y
                  mad r30.xyz, r11.xyzx, r25.yyyy, r10.xyzx
                  mov r39.xyz, cb9[r22.w + 6].yzwy
                  mov r39.w, cb9[r22.w + 7].x
                  dp4 r25.y, r39.xyzw, r30.xyzw
                  mov r39.xyz, cb9[r22.w + 7].yzwy
                  mov r39.w, cb9[r22.w + 8].x
                  dp4 r26.x, r39.xyzw, r30.xyzw
                  lt r26.z, r26.x, r25.y
                  if_z r26.z
                    mov r39.xyz, cb9[r22.w + 4].yzwy
                    mov r39.w, cb9[r22.w + 5].x
                    dp4 r28.x, r39.xyzw, r30.xyzw
                    mov r39.xyz, cb9[r22.w + 5].yzwy
                    mov r39.w, cb9[r22.w + 6].x
                    dp4 r28.y, r39.xyzw, r30.xyzw
                    div r28.xy, r28.xyxx, r26.xxxx
                    mad r28.xy, r28.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r30.x, r28.x, cb9[r22.w + 9].w
                    add r30.y, r28.y, cb9[r22.w + 10].x
                    mul r28.xy, r30.xyxx, cb9[r22.w + 9].yzyy
                    div r30.xy, cb9[r22.w + 3].yyyy, cb9[r22.w + 8].ywyy
                    add r39.xy, -r30.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                    ge r39.xy, r28.xyxx, r39.xyxx
                    ge r30.xy, r30.xyxx, r28.xyxx
                    or r30.xy, r30.xyxx, r39.xyxx
                    or r27.z, r30.y, r30.x
                    if_z r27.z
                      mov_sat r28.xy, r28.xyxx
                      mad r30.x, r28.x, cb9[r22.w + 8].y, cb9[r22.w + 8].z
                      mad r30.y, r28.y, cb9[r22.w + 8].w, cb9[r22.w + 9].x
                      mul r28.x, r26.x, cb9[r22.w + 10].z
                      mad r25.y, cb9[r22.w + 10].y, r26.x, r25.y
                      div r25.y, r25.y, r28.x
                    endif 
                  else 
                    mov r27.z, l(-1)
                  endif 
                  or r26.x, r26.z, r27.z
                  if_z r26.x
                    max r25.y, r25.y, l(0.00006104)
                    and r26.x, l(0x0000ffff), cb9[r22.w + 1].w
                    if_nz r11.w
                      utof r28.z, r26.x
                      mov r26.z, l(0)
                      mov r27.z, l(0)
                      loop 
                        ige r31.w, r27.z, l(8)
                        breakc_nz r31.w
                        dp2 r39.x, icb[r27.z + 0].xyxx, r32.xyxx
                        dp2 r39.y, icb[r27.z + 0].yxyy, r32.xzxx
                        mad r28.xy, r39.xyxx, cb9[r22.w + 3].yyyy, r30.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r28.x, r28.xyzx, t9.xxxx, s13, r25.y
                        mad r26.z, r28.x, l(0.125000), r26.z
                        iadd r27.z, r27.z, l(1)
                      endloop 
                    else 
                      utof r30.z, r26.x
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r26.z, r30.xyzx, t9.xxxx, s13, r25.y
                    endif 
                    mul r22.w, r26.z, r26.z
                    mul r22.w, r26.z, r22.w
                  else 
                    mov r22.w, l(1.000000)
                  endif 
                  mul r17.w, r17.w, r22.w
                endif 
              endif 
              mad r22.w, -r22.z, r2.x, l(1.000000)
              mul r22.w, r22.w, r22.w
              mad r22.w, -r22.w, l(0.620000), l(0.620000)
              add r22.w, -r22.z, r22.w
              mad r22.z, r2.w, r22.w, r22.z
              mul r22.z, r17.w, r22.z
              mov r28.x, cb9[r15.w + 0].w
              mov r28.yz, cb9[r15.w + 1].xxyx
              lt r15.w, l(0.000000), r22.y
              mad r30.xyz, r22.zzzz, r28.xyzx, r35.xyzx
              dp3_sat r22.y, r11.xyzx, r24.xywx
              mad r23.yzw, r23.yyzw, r20.wwww, r12.xxyz
              dp3 r20.w, r23.yzwy, r23.yzwy
              rsq r20.w, r20.w
              mul r23.yzw, r20.wwww, r23.yyzw
              dp3 r20.w, r23.yzwy, r12.xyzx
              dp3 r22.w, r11.xyzx, r23.yzwy
              mad r23.y, |r22.w|, r2.z, -|r22.w|
              mad r22.w, |r22.w|, r23.y, l(1.000000)
              mad r23.y, r22.y, r1.w, r2.y
              mul r22.w, r22.w, r22.w
              mul r22.w, r23.y, r22.w
              rcp r22.w, r22.w
              mul r19.y, r19.y, r22.y
              mul r19.y, r19.y, r22.w
              mul r19.y, r17.w, r19.y
              mad r23.yzw, r19.yyyy, r28.xxyz, r38.xxyz
              add_sat r20.w, -r20.w, l(1.000000)
              mul r22.y, r20.w, r20.w
              mul r22.y, r22.y, r22.y
              mul r20.w, r20.w, r22.y
              mul r19.y, r19.y, r20.w
              mad r24.xyw, r19.yyyy, r28.xyxz, r37.xyxz
              mad r22.yzw, r22.zzzz, r28.xxyz, r36.xxyz
              movc r22.yzw, r0.wwww, r22.yyzw, r36.xxyz
              movc r35.xyz, r15.wwww, r30.xyzx, r35.xyzx
              movc r36.xyz, r15.wwww, r36.xyzx, r22.yzwy
              movc r37.xyz, r15.wwww, r24.xywx, r37.xyzx
              movc r38.xyz, r15.wwww, r23.yzwy, r38.xyzx
              and r15.w, r25.x, l(255)
              iadd r19.y, r15.w, l(-1)
              ult r19.y, r19.y, l(32)
              and r19.y, r6.w, r19.y
              if_nz r19.y
                imad r22.yz, r15.wwww, l(0, 24, 24, 0), l(0, 88, 108, 0)
                ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r15.w, cb2[52].x, r22.y, u2.xxxx
                or r15.w, r15.w, l(8)
                store_structured u2.x, cb2[52].x, r22.y, r15.w
                store_structured u2.x, cb2[52].x, r22.z, r17.w
              endif 
              iadd r12.w, r12.w, l(0x00010101)
            else 
              mov r12.w, r25.x
            endif 
          else 
            mov r12.w, r18.w
          endif 
        else 
          mov r12.w, r18.w
        endif 
      endif 
    endif 
  endloop 
  mov r14.yzw, r35.xxyz
  mov r33.xyz, r36.xyzx
  mov r34.xyz, r37.xyzx
  mov r16.xyw, r38.xyxz
  mov r7.w, r12.w
  iadd r8.w, r8.w, l(32)
endloop 
mad r2.xyz, r3.xwyx, l(1.000000, 3.000000, 2.000000, 0.000000), l(0.000000, 0.500000, -1.000000, 0.000000)
ftou r0.z, r2.y
mad r3.xyz, r6.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r1.z, r3.x
ieq r1.z, r0.z, r1.z
movc r1.zw, r1.zzzz, r3.yyyz, l(0,0,-1.000000,0)
mad r3.xyz, r7.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r3.x, r3.x
ieq r3.x, r0.z, r3.x
movc r3.xy, r3.xxxx, r3.yzyy, l(-1.000000,0,0,0)
mad r4.xyz, r8.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r3.z, r4.x
ieq r3.z, r0.z, r3.z
movc r3.zw, r3.zzzz, r4.yyyz, l(0,0,-1.000000,0)
mad r4.xyz, r9.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r4.x, r4.x
ieq r0.z, r0.z, r4.x
movc r4.xy, r0.zzzz, r4.yzyy, l(-1.000000,0,0,0)
mov r8.x, r1.z
mov r8.yz, r3.xxzx
mov r8.w, r4.x
add r8.xyzw, -r2.xxxx, r8.xyzw
ge r8.xyzw, |r8.xyzw|, l(0.00902149, 0.00902149, 0.00902149, 0.00902149)
movc r8.xyzw, r8.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
add r0.z, r8.y, r8.x
add r0.z, r8.z, r0.z
add r0.z, r8.w, r0.z
mul r1.z, r3.y, r8.y
mad r1.z, r8.x, r1.w, r1.z
mad r1.z, r8.z, r3.w, r1.z
mad r1.z, r8.w, r4.y, r1.z
div r2.w, r1.z, r0.z
ge r0.z, l(0.000000), r0.z
movc r2.yz, r0.zzzz, l(0,0,0,0), r2.zzwz
and r1.zw, r1.xxxy, l(0, 0, 1, 1)
ieq r0.z, r1.w, r1.z
movc r2.xyz, r0.zzzz, r2.xyzx, r2.xzyx
mad r0.z, -r2.z, l(0.500000), r2.x
add r3.y, r0.z, r2.z
mad r3.z, -r2.y, l(0.500000), r0.z
add r3.x, r2.y, r3.z
mul r2.xyz, r5.yzwy, r14.yzwy
mad r2.xyz, r33.xyzx, r3.xyzx, r2.xyzx
mul r4.xyz, r34.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
mad r4.xyz, r16.xywx, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
add r2.xyz, r2.xyzx, r4.xyzx
add r4.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r4.xyz, r4.xyzx, r34.xyzx
mad r3.xyz, r16.xywx, r3.xyzx, r4.xyzx
mad r3.xyz, r14.yzwy, r5.yzwy, r3.xyzx
movc r2.xyz, r0.wwww, r2.xyzx, r3.xyzx
lt r0.z, l(0.000000), cb2[9].z
if_nz r0.z
  dp3 r0.z, r10.xyzx, r10.xyzx
  rsq r0.w, r0.z
  mul r3.xyz, r0.wwww, r10.xyzx
  sqrt r0.z, r0.z
  lt r0.w, l(0.000000), cb2[13].w
  if_nz r0.w
    mad r1.zw, r0.zzzz, cb2[15].xxxy, cb2[14].zzzw
    mul r1.zw, r1.zzzw, cb2[16].xxxy
    lt r0.w, l(0.010000), |r10.z|
    mul r4.xy, r10.zzzz, cb2[15].zwzz
    mul r4.zw, r4.xxxy, l(0.000000, 0.000000, -1.442695, -1.442695)
    exp r4.zw, r4.zzzw
    add r4.zw, -r4.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    div r4.xy, r4.zwzz, r4.xyxx
    mul r4.xy, r1.zwzz, r4.xyxx
    movc r1.zw, r0.wwww, r4.xxxy, r1.zzzw
    mul r4.xyz, r1.zzzz, cb2[12].xyzx
    exp r4.xyz, r4.xyzx
    mul r5.xyz, r1.wwww, cb2[12].xyzx
    exp r5.xyz, r5.xyzx
    add r5.xyz, -r4.xyzx, r5.xyzx
    mad r4.xyz, cb2[13].wwww, r5.xyzx, r4.xyzx
  else 
    mad r0.w, r0.z, cb2[15].x, cb2[14].z
    mul r0.w, r0.w, cb2[16].x
    lt r1.z, l(0.010000), |r10.z|
    mul r1.w, r10.z, cb2[15].z
    mul r2.w, r1.w, l(-1.442695)
    exp r2.w, r2.w
    add r2.w, -r2.w, l(1.000000)
    div r1.w, r2.w, r1.w
    mul r1.w, r0.w, r1.w
    movc r0.w, r1.z, r1.w, r0.w
    mul r5.xyz, r0.wwww, cb2[12].xyzx
    exp r4.xyz, r5.xyzx
  endif 
  mad r4.xyz, r4.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r4.xyz, r4.xyzx, -cb2[9].zzzz
  dp3 r0.w, cb2[7].yzwy, -r3.xyzx
  mad r1.z, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r1.w, cb2[8].w, -r0.w, l(1.000000)
  mul r1.w, r1.w, r1.w
  mul r1.w, r1.w, l(12.566371)
  div r1.z, r1.z, r1.w
  add r0.z, r0.z, -cb2[10].w
  mul_sat r0.z, r0.z, cb2[11].w
  mul r0.z, r0.z, r1.z
  mov_sat r0.w, r0.w
  mad r0.w, r0.w, r0.w, l(1.000000)
  mad r0.w, r0.w, l(0.05968310), l(-1.000000)
  mad r0.w, cb2[8].z, r0.w, l(1.000000)
  mul r3.xyz, r0.zzzz, cb2[11].xyzx
  mad r3.xyz, r0.wwww, cb2[10].xyzx, r3.xyzx
  mul r3.xyz, r3.xyzx, cb2[9].wwww
  add r5.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r3.xyz, r3.xyzx, r5.xyzx
  mad r3.xyz, r2.xyzx, r4.xyzx, r3.xyzx
else 
  mul r0.z, r10.z, cb2[6].x
  mad r0.w, cb2[6].x, r10.z, cb2[5].x
  lt r1.z, |r0.z|, l(0.000100)
  min r1.w, r0.w, l(64.000000)
  mul r1.w, r1.w, l(1.442695)
  exp r1.w, r1.w
  mov_sat r2.w, cb2[6].z
  lt r3.w, r0.w, l(0.000000)
  add r0.w, r0.w, l(1.000000)
  movc r0.w, r3.w, r1.w, r0.w
  add r0.w, r0.w, -cb2[6].z
  movc r0.z, r1.z, l(1.000000), r0.z
  div r0.z, r0.w, r0.z
  movc r0.z, r1.z, r2.w, r0.z
  mul r0.z, r0.z, cb2[5].z
  dp3 r0.w, r10.xyzx, r10.xyzx
  sqrt r1.z, r0.w
  mad r0.z, r0.z, r1.z, cb2[5].w
  exp r0.z, r0.z
  min r0.z, r0.z, l(1.000000)
  add r0.z, -r0.z, l(1.000000)
  rsq r0.w, r0.w
  mul r4.xyz, r0.wwww, r10.xyzx
  dp3 r0.w, cb2[7].yzwy, r4.xyzx
  mad_sat r0.w, cb2[8].y, r0.w, cb2[8].x
  add r4.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r4.xyzw, r0.wwww, r4.xyzw, cb2[4].xyzw
  mul r0.z, r0.z, r4.w
  add r4.xyz, -r2.xyzx, r4.xyzx
  mad r3.xyz, r0.zzzz, r4.xyzx, r2.xyzx
endif 
mul r2.xyz, r3.xyzx, cb1[85].yyyy
ge r3.xyz, r2.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r2.xyz, r2.xyzx, r3.xyzx
min r2.xyz, r2.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
ilt r0.z, l(0), cb2[55].w
and r3.xyzw, cb2[55].wwww, l(32, 3, 64, 12)
ine r1.zw, r3.xxxz, l(0, 0, 0, 0)
ieq r3.xy, r3.ywyy, l(0, 0, 0, 0)
and r1.zw, r1.zzzw, r3.xxxy
and r3.xy, r1.zwzz, l(0x3e4ccccd, 0x3e4ccccd, 0, 0)
and r0.w, cb2[55].w, l(16)
ine r1.z, r0.w, l(0)
ieq r0.w, r0.w, l(0)
and r0.w, r0.w, r1.z
and r3.z, r0.w, l(0x3e4ccccd)
mad r3.xyz, r3.xyzx, cb1[85].xxxx, -r2.xyzx
mad r3.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r2.xyzx
movc r2.xyz, r0.zzzz, r3.xyzx, r2.xyzx
if_nz cb2[52].y
  if_nz cb2[53].y
    switch cb2[53].y
      case l(1)
      and r0.z, r7.w, l(255)
      break 
      case l(2)
      ubfe r0.z, l(8), l(8), r7.w
      break 
      case l(3)
      ubfe r0.z, l(8), l(16), r7.w
      break 
      case l(4)
      and r0.z, r16.z, l(255)
      break 
      case l(5)
      ubfe r0.z, l(8), l(8), r16.z
      break 
      default 
      mov r0.z, l(0)
      break 
    endswitch 
    utof r0.z, r0.z
    mul r0.z, r0.z, cb2[53].z
    mad r3.xyz, r0.zzzz, l(0.500000, 0.500000, 0.500000, 0.000000), -r2.xyzx
    mad r2.xyz, cb2[53].wwww, r3.xyzx, r2.xyzx
  endif 
endif 
store_uav_typed u0.xyzw, r1.xyyy, r2.xyzx
if_nz r6.w
  add r1.xyz, r10.xyzx, cb1[24].xyzx
  and r1.w, r7.w, l(255)
  store_structured u2.xyzw, cb2[52].x, l(92), r1.xyzw
  and r0.z, r16.z, l(255)
  store_structured u2.x, cb2[52].x, l(108), r0.z
endif 
if_nz cb2[52].y
  and r0.z, r7.w, l(255)
  atomic_iadd g1, l(0), r0.z
  ubfe r1.xy, l(8, 8, 0, 0), l(8, 16, 0, 0), r7.wwww
  atomic_iadd g1, l(4), r1.x
  atomic_iadd g1, l(8), r1.y
  and r0.w, r16.z, l(255)
  atomic_iadd g1, l(12), r0.w
  ubfe r1.z, l(8), l(8), r16.z
  atomic_iadd g1, l(16), r1.z
  atomic_umax g2, l(0), r0.z
  atomic_umax g2, l(4), r1.x
  atomic_umax g2, l(8), r1.y
  atomic_umax g2, l(12), r0.w
  atomic_umax g2, l(16), r1.z
  imm_atomic_iadd r1.x, g0, l(0), l(1)
  ieq r0.z, r1.x, l(63)
  if_nz r0.z
    ld_raw r1.xyzw, l(0), g1.xyzw
    mov r2.xz, cb2[52].xxxx
    mov r2.yw, l(0,40,0,44)
    atomic_iadd u2, r2.xyxx, r1.x
    atomic_iadd u2, r2.zwzz, r1.y
    mov r2.xz, cb2[52].xxxx
    mov r2.yw, l(0,48,0,52)
    atomic_iadd u2, r2.xyxx, r1.z
    atomic_iadd u2, r2.zwzz, r1.w
    ld_raw r0.z, l(16), g1.xxxx
    mov r1.xz, cb2[52].xxxx
    mov r1.yw, l(0,56,0,0)
    atomic_iadd u2, r1.xyxx, r0.z
    ld_raw r2.xyzw, l(0), g2.xyzw
    atomic_umax u2, r1.zwzz, r2.x
    mov r1.xz, cb2[52].xxxx
    mov r1.yw, l(0,4,0,8)
    atomic_umax u2, r1.xyxx, r2.y
    atomic_umax u2, r1.zwzz, r2.z
    mov r1.xz, cb2[52].xxxx
    mov r1.yw, l(0,12,0,16)
    atomic_umax u2, r1.xyxx, r2.w
    ld_raw r0.z, l(16), g2.xxxx
    atomic_umax u2, r1.zwzz, r0.z
    ieq r0.xy, r0.xyxx, cb2[52].zwzz
    and r0.x, r0.y, r0.x
    if_nz r0.x
      store_structured u2.xyzw, cb2[52].x, l(20), r2.xyzw
      store_structured u2.x, cb2[52].x, l(36), r0.z
    endif 
  endif 
endif 
ret 
// Approximately 3012 instruction slots used
