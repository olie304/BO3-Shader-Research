//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:40:47 2021
//
//
// Buffer Definitions: 
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16 [unused]
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16 [unused]
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16 [unused]
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// bilinearSampler                   sampler      NA          NA             s0      1 
// edgesTex                          texture  float4          2d             t0      1 
// blendTex                          texture  float4          2d             t6      1 
// smaaTex                           texture  float4          2d             t7      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB1[45], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 9
ftoi r0.xy, v0.xyxx
mov r0.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.xyzw, r0.xyzw, t6.xyzw
mul o0.xyz, r0.xyzx, l(32768.000000, 32768.000000, 32768.000000, 0.000000)
mad r0.x, r0.w, l(255.000000), l(0.500000)
ftoi r0.x, r0.x
and r0.xyz, r0.xxxx, l(240, 15, 15, 0)
ieq r1.xyz, r0.xyzx, l(16, 4, 1, 0)
add r2.xyz, v1.yxyy, cb1[44].wzww
movc r1.xyz, r1.xyzx, r2.xyzx, v1.yxyy
mov r1.w, v1.x
sample_l_indexable(texture2d)(float,float,float,float) r0.yw, r1.wxww, t0.zxwy, s0, l(0.000000)
mad r2.xyzw, cb1[44].zwzw, l(-1.000000, 0.000000, 1.000000, 0.000000), r1.wxwx
sample_l_indexable(texture2d)(float,float,float,float) r2.x, r2.xyxx, t0.yxzw, s0, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r2.yz, r2.zwzz, t0.zxyw, s0, l(0.000000)
min r2.z, r0.w, r2.z
min r2.x, r2.z, r2.x
lt r0.w, l(0.500000), r0.w
ge r2.x, l(0.500000), r2.x
and r0.w, r0.w, r2.x
if_nz r0.w
  mov r2.xz, r1.wwxw
  mov r3.xy, l(1.000000,1.000000,0,0)
  mov r4.y, l(-1.000000)
  mov r0.w, l(7.000000)
  loop 
    ge r2.w, r4.y, r0.w
    breakc_nz r2.w
    mad r2.xz, cb1[44].zzwz, l(1.000000, 0.000000, -1.000000, 0.000000), r2.xxzx
    sample_l_indexable(texture2d)(float,float,float,float) r3.xy, r2.xzxx, t0.xyzw, s0, l(0.000000)
    min r2.w, r3.y, r3.x
    lt r2.w, l(0.500000), r2.w
    movc r0.w, r2.w, r0.w, r4.y
    add r4.y, r4.y, l(1.000000)
  endloop 
  min r0.w, r3.y, r3.x
  ge r0.w, l(0.500000), r0.w
  lt r0.y, l(0.500000), r0.y
  if_nz r0.y
    mov r2.xz, r1.wwxw
    mov r0.y, l(-1.000000)
    mov r2.w, l(7.000000)
    mov r3.yz, l(0,1.000000,1.000000,0)
    loop 
      ge r3.w, r0.y, r2.w
      breakc_nz r3.w
      mad r2.xz, cb1[44].zzwz, l(-1.000000, 0.000000, 1.000000, 0.000000), r2.xxzx
      sample_l_indexable(texture2d)(float,float,float,float) r3.yz, r2.xzxx, t0.zxyw, s0, l(0.000000)
      min r3.w, r3.z, r3.y
      lt r3.w, l(0.500000), r3.w
      movc r2.w, r3.w, r2.w, r0.y
      add r0.y, r0.y, l(1.000000)
    endloop 
    lt r2.x, l(0.500000), r3.z
    add r2.z, r0.y, l(1.000000)
    movc r4.x, r2.x, r2.z, r0.y
    min r0.y, r3.z, r3.y
    ge r0.y, l(0.500000), r0.y
  else 
    mov r4.x, l(0)
    mov r2.x, l(-1)
    mov r0.y, l(-1)
  endif 
  add r2.z, r4.y, r4.x
  lt r2.z, l(0.000000), r2.z
  if_nz r2.z
    mad r5.xyzw, r4.yyyy, l(1.000000, -1.000000, 1.000000, -1.000000), l(1.000000, -2.000000, 1.000000, 0.000000)
    mad r5.xyzw, r5.xyzw, cb1[44].zwzw, r1.wxwx
    sample_l_indexable(texture2d)(float,float,float,float) r2.z, r5.xyxx, t0.yzxw, s0, l(0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r3.z, r5.zwzz, t0.zxyw, s0, l(0.000000)
    if_z r2.x
      mad r2.xw, r4.xxxx, l(-1.000000, 0.000000, 0.000000, 1.000000), l(0.000000, 0.000000, 0.000000, 1.000000)
      mad r2.xw, r2.xxxw, cb1[44].zzzw, r1.wwwx
      sample_l_indexable(texture2d)(float,float,float,float) r2.x, r2.xwxx, t0.xzwy, s0, l(0.000000)
      mov r3.y, l(0)
    else 
      mad r4.zw, r4.xxxx, l(0.000000, 0.000000, -1.000000, 1.000000), l(0.000000, 0.000000, -1.000000, 0.000000)
      mad r4.zw, r4.zzzw, cb1[44].zzzw, r1.wwwx
      sample_l_indexable(texture2d)(float,float,float,float) r3.y, r4.zwzz, t0.zyxw, s0, l(0.000000)
      mov r2.x, l(0)
    endif 
    mul r2.w, r3.x, r2.z
    mad r2.xz, r3.yyzy, l(2.000000, 0.000000, 2.000000, 0.000000), r2.xxwx
    and r3.xy, r0.ywyy, r2.xzxx
    min r0.yw, r4.xxxy, l(0.000000, 19.000000, 0.000000, 19.000000)
    mad r0.yw, r3.xxxy, l(0.000000, 20.000000, 0.000000, 20.000000), r0.yyyw
    mad r0.yw, r0.yyyw, l(0.000000, 0.012500, 0.000000, 0.00510204), l(0.000000, 0.006250, 0.000000, 0.59438777)
    sample_l_indexable(texture2d)(float,float,float,float) r0.yw, r0.ywyy, t7.zxwy, s0, l(0.000000)
  else 
    mov r0.yw, l(0,0,0,0)
  endif 
  mov r2.xz, r1.wwxw
  mov r3.xy, l(1.000000,1.000000,0,0)
  mov r4.x, l(-1.000000)
  mov r2.w, l(7.000000)
  loop 
    ge r3.z, r4.x, r2.w
    breakc_nz r3.z
    add r2.xz, r2.xxzx, -cb1[44].zzwz
    mad r3.zw, cb1[44].zzzw, l(0.000000, 0.000000, 0.250000, 0.000000), r2.xxxz
    sample_l_indexable(texture2d)(float,float,float,float) r3.zw, r3.zwzz, t0.zwxy, s0, l(0.000000)
    mad r4.z, r3.z, l(5.000000), l(-3.750000)
    mul r3.z, r3.z, |r4.z|
    round_ne r3.xy, r3.zwzz
    min r3.z, r3.y, r3.x
    lt r3.z, l(0.500000), r3.z
    movc r2.w, r3.z, r2.w, r4.x
    add r4.x, r4.x, l(1.000000)
  endloop 
  min r2.x, r3.y, r3.x
  ge r2.x, l(0.500000), r2.x
  lt r2.y, l(0.500000), r2.y
  if_nz r2.y
    mov r2.yz, r1.wwxw
    mov r2.w, l(-1.000000)
    mov r3.yzw, l(0,7.000000,1.000000,1.000000)
    loop 
      ge r4.z, r2.w, r3.y
      breakc_nz r4.z
      add r2.yz, r2.yyzy, cb1[44].zzwz
      mad r4.zw, cb1[44].zzzw, l(0.000000, 0.000000, 0.250000, 0.000000), r2.yyyz
      sample_l_indexable(texture2d)(float,float,float,float) r4.zw, r4.zwzz, t0.zwxy, s0, l(0.000000)
      mad r5.x, r4.z, l(5.000000), l(-3.750000)
      mul r4.z, r4.z, |r5.x|
      round_ne r3.zw, r4.zzzw
      min r4.z, r3.w, r3.z
      lt r4.z, l(0.500000), r4.z
      movc r3.y, r4.z, r3.y, r2.w
      add r2.w, r2.w, l(1.000000)
    endloop 
    lt r2.y, l(0.500000), r3.w
    add r2.z, r2.w, l(1.000000)
    movc r4.y, r2.y, r2.z, r2.w
    min r2.z, r3.w, r3.z
    ge r2.z, l(0.500000), r2.z
  else 
    mov r4.y, l(0)
    mov r2.yz, l(0,-1,-1,0)
  endif 
  add r2.w, r4.x, r4.y
  lt r2.w, l(0.000000), r2.w
  if_nz r2.w
    add r5.xyzw, -r4.xxxx, l(0.000000, -2.000000, -1.000000, 0.000000)
    mad r5.xyzw, r5.xyzw, cb1[44].zwzw, r1.wxwx
    sample_l_indexable(texture2d)(float,float,float,float) r2.w, r5.xyxx, t0.yzwx, s0, l(0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r3.z, r5.zwzz, t0.zxyw, s0, l(0.000000)
    if_z r2.y
      add r2.y, r4.y, l(1.000000)
      mad r4.zw, r2.yyyy, cb1[44].zzzw, r1.wwwx
      sample_l_indexable(texture2d)(float,float,float,float) r4.z, r4.zwzz, t0.zwxy, s0, l(0.000000)
      mov r3.y, l(0)
    else 
      add r5.xy, r4.yyyy, l(1.000000, 0.000000, 0.000000, 0.000000)
      mad r5.xy, r5.xyxx, cb1[44].zwzz, r1.wxww
      sample_l_indexable(texture2d)(float,float,float,float) r3.y, r5.xyxx, t0.zyxw, s0, l(0.000000)
      mov r4.z, l(0)
    endif 
    mul r4.w, r3.x, r2.w
    mad r2.yw, r3.yyyz, l(0.000000, 2.000000, 0.000000, 2.000000), r4.zzzw
    and r3.xy, r2.wyww, r2.xzxx
    min r2.xy, r4.xyxx, l(19.000000, 19.000000, 0.000000, 0.000000)
    mad r2.xy, r3.xyxx, l(20.000000, 20.000000, 0.000000, 0.000000), r2.xyxx
    mad r2.xy, r2.xyxx, l(0.012500, 0.00510204, 0.000000, 0.000000), l(0.006250, 0.59438777, 0.000000, 0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r2.xy, r2.xyxx, t7.yxzw, s0, l(0.000000)
  else 
    mov r2.xy, l(0,0,0,0)
  endif 
  add r1.w, r0.w, r0.y
  add r2.z, r2.y, r2.x
  lt r1.w, r2.z, r1.w
  movc r0.yw, r1.wwww, r0.yyyw, r2.xxxy
  ieq r0.x, r0.x, l(32)
  movc r0.xy, r0.xxxx, r0.ywyy, r0.wyww
  max r0.y, r0.y, r0.x
  eq r0.y, r0.y, l(0.000000)
  mov o0.w, r0.x
else 
  mov o0.w, l(0)
  mov r0.y, l(-1)
endif 
ige r0.x, l(2), r0.z
not r0.w, r0.x
and r0.x, r0.x, r0.y
if_nz r0.x
  mad r2.xy, cb1[44].zwzz, l(-0.250000, -0.125000, 0.000000, 0.000000), r1.yzyy
  mov r2.zw, l(0,0,0,1.000000)
  mov r3.xy, r2.xyxx
  mov r0.x, l(-3.000000)
  mov r1.w, l(61.000000)
  loop 
    ge r3.z, r0.x, r1.w
    breakc_nz r3.z
    sample_l_indexable(texture2d)(float,float,float,float) r2.zw, r3.xyxx, t0.zwxy, s0, l(0.000000)
    mad r3.xy, cb1[44].zwzz, l(-2.000000, -0.000000, 0.000000, 0.000000), r3.xyxx
    mad r3.z, -r2.z, l(32.000000), r2.w
    lt r3.z, l(0.828125), r3.z
    movc r1.w, r3.z, r1.w, r0.x
    add r0.x, r0.x, l(2.000000)
  endloop 
  mul r2.xy, r2.zwzz, l(32.000000, 32.000000, 0.000000, 0.000000)
  round_ne r2.xy, r2.xyxx
  ftoi r2.xy, r2.xyxx
  mov r2.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r2.xy, r2.xyzw, t7.xyzw
  mul r1.w, r2.y, l(3.000000)
  mad r0.x, r2.x, l(2.007874), r0.x
  round_ne r2.y, r0.x
  round_ne r3.x, r1.w
  mad r2.zw, cb1[44].zzzw, l(0.000000, 0.000000, 1.750000, -0.125000), r1.yyyz
  mov r3.zw, l(0,0,0,1.000000)
  mov r4.xy, r2.zwzz
  mov r0.x, l(-2.000000)
  mov r1.w, l(62.000000)
  loop 
    ge r4.z, r0.x, r1.w
    breakc_nz r4.z
    sample_l_indexable(texture2d)(float,float,float,float) r3.zw, r4.xyxx, t0.zwxy, s0, l(0.000000)
    mad r4.xy, cb1[44].zwzz, l(2.000000, 0.000000, 0.000000, 0.000000), r4.xyxx
    mad r4.z, -r3.z, l(32.000000), r3.w
    lt r4.z, l(0.828125), r4.z
    movc r1.w, r4.z, r1.w, r0.x
    add r0.x, r0.x, l(2.000000)
  endloop 
  mad r2.zw, r3.zzzw, l(0.000000, 0.000000, 32.000000, 32.000000), l(0.000000, 0.000000, 33.000000, 0.000000)
  round_ne r2.zw, r2.zzzw
  ftoi r4.xy, r2.zwzz
  mov r4.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r2.zw, r4.xyzw, t7.zwxy
  mul r1.w, r2.w, l(3.000000)
  mad r0.x, r2.z, l(2.007874), r0.x
  round_ne r2.x, r0.x
  round_ne r3.y, r1.w
  mov r2.zw, |r2.yyyx|
  ishr r2.zw, r2.zzzw, l(0, 0, 1, 1)
  iadd r2.zw, r2.zzzw, l(0, 0, 0x1fbd1df5, 0x1fbd1df5)
  min r2.zw, r2.zzzw, l(0.000000, 0.000000, 19.000000, 19.000000)
  mad r2.zw, r3.xxxy, l(0.000000, 0.000000, 20.000000, 20.000000), r2.zzzw
  mad r2.zw, r2.zzzw, l(0.000000, 0.000000, 0.012500, 0.00510204), l(0.000000, 0.000000, 0.006250, 0.18622449)
  sample_l_indexable(texture2d)(float,float,float,float) r2.zw, r2.zwzz, t7.zwxy, s0, l(0.000000)
  max r0.x, r2.w, r2.z
  lt r0.x, l(0.000000), r0.x
  if_nz r0.x
    mad r3.y, -cb1[44].z, r2.y, r1.y
    mad r3.x, cb1[44].z, r2.x, r1.y
    ge r4.xy, r2.xyxx, r2.yxyy
    and r4.zw, r4.xxxy, l(0, 0, 0x3f800000, 0x3f800000)
    eq r0.x, r4.w, r4.z
    or r4.xy, r0.xxxx, r4.xyxx
    and r4.xy, r4.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
    mov r3.z, r1.z
    mad r4.zw, cb1[44].zzzw, l(0.000000, 0.000000, 0.250000, 0.000000), r3.yyyz
    mad r4.zw, cb1[44].zzzw, l(0.000000, 0.000000, -1.000000, 1.000000), r4.zzzw
    sample_l_indexable(texture2d)(float,float,float,float) r4.zw, r4.zwzz, t0.zwxy, s0, l(0.000000)
    mad r0.x, r4.z, l(5.000000), l(-3.750000)
    mul r0.x, |r0.x|, r4.z
    round_ne r5.y, r0.x
    round_ne r5.x, r4.w
    mul r4.zw, r4.xxxx, r5.xxxy
    add r5.zw, r3.xxxz, cb1[44].zzzw
    sample_l_indexable(texture2d)(float,float,float,float) r5.zw, r5.zwzz, t0.zwxy, s0, l(0.000000)
    mul r6.xy, r4.yyyy, r5.wzww
    mad r7.xyzw, cb1[44].zwzw, l(0.000000, -2.000000, 0.000000, 0.250000), r3.yzxz
    sample_l_indexable(texture2d)(float,float,float,float) r3.w, r7.xyxx, t0.wyzx, s0, l(0.000000)
    add r3.yz, r3.yyzy, -cb1[44].zzwz
    sample_l_indexable(texture2d)(float,float,float,float) r3.x, r3.yzyy, t0.yxzw, s0, l(0.000000)
    mul r3.yz, r3.xxwx, r4.xxxx
    mad r6.zw, cb1[44].zzzw, l(0.000000, 0.000000, 1.000000, -2.000000), r7.zzzw
    sample_l_indexable(texture2d)(float,float,float,float) r6.zw, r6.zwzz, t0.zwxy, s0, l(0.000000)
    mad r0.x, r6.w, l(5.000000), l(-3.750000)
    mul r0.x, |r0.x|, r6.w
    round_ne r6.w, r6.z
    round_ne r6.z, r0.x
    mul r7.xy, r4.yyyy, r6.zwzz
    add r0.x, r2.x, r2.y
    lt r0.x, l(0.000000), r0.x
    mad_sat r8.xy, r4.xxxx, r5.xyxx, r6.xyxx
    mad_sat r8.zw, r4.xxxx, r3.xxxw, r7.xxxy
    add r1.w, r4.z, r4.w
    mad r1.w, r4.y, r5.z, r1.w
    mad_sat r1.w, r4.y, r5.w, r1.w
    add r2.x, r3.y, r3.z
    mad r2.x, r4.y, r6.w, r2.x
    mad_sat r2.x, r4.y, r6.z, r2.x
    mad r2.y, -r4.x, r5.y, l(2.000000)
    mad_sat r2.y, -r4.y, r5.z, r2.y
    mul r3.x, r1.w, r2.y
    mad r1.w, -r4.x, r3.w, l(2.000000)
    mad_sat r1.w, -r4.y, r6.w, r1.w
    mul r3.y, r1.w, r2.x
    movc r2.xy, r0.xxxx, r8.xzxx, r3.xyxx
    add r3.zw, -r8.yyyw, l(0.000000, 0.000000, 1.000000, 1.000000)
    mul r2.xy, r2.xyxx, r3.zwzz
    movc r2.xy, r0.xxxx, r2.xyxx, r3.xyxx
    mul r2.zw, r2.xxxy, r2.zzzw
  endif 
  ieq r0.x, r0.z, l(2)
  movc o0.w, r0.x, r2.z, r2.w
endif 
and r0.x, r0.w, r0.y
if_nz r0.x
  mad r0.xy, cb1[44].zwzz, l(-0.125000, -0.250000, 0.000000, 0.000000), r1.yzyy
  mov r2.xy, l(0,1.000000,0,0)
  mov r2.zw, r0.xxxy
  mov r0.w, l(-3.000000)
  mov r1.w, l(61.000000)
  loop 
    ge r3.x, r0.w, r1.w
    breakc_nz r3.x
    sample_l_indexable(texture2d)(float,float,float,float) r2.xy, r2.zwzz, t0.yxzw, s0, l(0.000000)
    mad r2.zw, cb1[44].zzzw, l(0.000000, 0.000000, -0.000000, -2.000000), r2.zzzw
    mad r3.x, -r2.x, l(32.000000), r2.y
    lt r3.x, l(0.828125), r3.x
    movc r1.w, r3.x, r1.w, r0.w
    add r0.w, r0.w, l(2.000000)
  endloop 
  mul r0.xy, r2.xyxx, l(32.000000, 32.000000, 0.000000, 0.000000)
  round_ne r0.xy, r0.xyxx
  ftoi r2.xy, r0.xyxx
  mov r2.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r0.xy, r2.xyzw, t7.xyzw
  mul r0.y, r0.y, l(3.000000)
  mad r0.x, r0.x, l(2.007874), r0.w
  round_ne r2.y, r0.x
  round_ne r0.x, r0.y
  mad r2.zw, cb1[44].zzzw, l(0.000000, 0.000000, -0.125000, 1.750000), r1.yyyz
  mov r3.xy, l(0,1.000000,0,0)
  mov r3.zw, r2.zzzw
  mov r0.w, l(-2.000000)
  mov r1.w, l(62.000000)
  loop 
    ge r4.x, r0.w, r1.w
    breakc_nz r4.x
    sample_l_indexable(texture2d)(float,float,float,float) r3.xy, r3.zwzz, t0.yxzw, s0, l(0.000000)
    mad r3.zw, cb1[44].zzzw, l(0.000000, 0.000000, 0.000000, 2.000000), r3.zzzw
    mad r4.x, -r3.x, l(32.000000), r3.y
    lt r4.x, l(0.828125), r4.x
    movc r1.w, r4.x, r1.w, r0.w
    add r0.w, r0.w, l(2.000000)
  endloop 
  mad r2.zw, r3.xxxy, l(0.000000, 0.000000, 32.000000, 32.000000), l(0.000000, 0.000000, 33.000000, 0.000000)
  round_ne r2.zw, r2.zzzw
  ftoi r3.xy, r2.zwzz
  mov r3.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r2.zw, r3.xyzw, t7.zwxy
  mul r1.w, r2.w, l(3.000000)
  mad r0.w, r2.z, l(2.007874), r0.w
  round_ne r2.x, r0.w
  round_ne r0.y, r1.w
  mov r2.zw, |r2.yyyx|
  ishr r2.zw, r2.zzzw, l(0, 0, 1, 1)
  iadd r2.zw, r2.zzzw, l(0, 0, 0x1fbd1df5, 0x1fbd1df5)
  min r2.zw, r2.zzzw, l(0.000000, 0.000000, 19.000000, 19.000000)
  mad r0.xy, r0.xyxx, l(20.000000, 20.000000, 0.000000, 0.000000), r2.zwzz
  mad r0.xy, r0.xyxx, l(0.012500, 0.00510204, 0.000000, 0.000000), l(0.006250, 0.18622449, 0.000000, 0.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r0.xy, r0.xyxx, t7.xyzw, s0, l(0.000000)
  max r0.w, r0.y, r0.x
  lt r0.w, l(0.000000), r0.w
  if_nz r0.w
    mad r1.x, -cb1[44].w, r2.y, r1.z
    mad r1.z, cb1[44].w, r2.x, r1.z
    ge r2.zw, r2.xxxy, r2.yyyx
    and r3.xy, r2.zwzz, l(0x3f800000, 0x3f800000, 0, 0)
    eq r0.w, r3.y, r3.x
    or r2.zw, r0.wwww, r2.zzzw
    and r2.zw, r2.zzzw, l(0, 0, 0x3f800000, 0x3f800000)
    mad r3.xy, cb1[44].zwzz, l(0.000000, 0.250000, 0.000000, 0.000000), r1.yxyy
    mad r3.xy, cb1[44].zwzz, l(1.000000, -1.000000, 0.000000, 0.000000), r3.xyxx
    sample_l_indexable(texture2d)(float,float,float,float) r3.xy, r3.xyxx, t0.xyzw, s0, l(0.000000)
    mad r0.w, r3.y, l(5.000000), l(-3.750000)
    mul r0.w, |r0.w|, r3.y
    round_ne r4.y, r0.w
    round_ne r4.x, r3.x
    mul r3.xy, r2.zzzz, r4.xyxx
    add r3.zw, r1.yyyz, cb1[44].zzzw
    sample_l_indexable(texture2d)(float,float,float,float) r3.zw, r3.zwzz, t0.zwxy, s0, l(0.000000)
    mul r4.zw, r2.wwww, r3.zzzw
    mad r5.xyzw, cb1[44].zwzw, l(-2.000000, 0.000000, 0.250000, 0.000000), r1.yxyz
    sample_l_indexable(texture2d)(float,float,float,float) r1.w, r5.xyxx, t0.xzwy, s0, l(0.000000)
    add r1.xy, r1.yxyy, -cb1[44].zwzz
    sample_l_indexable(texture2d)(float,float,float,float) r1.z, r1.xyxx, t0.yzxw, s0, l(0.000000)
    mul r1.xy, r1.zwzz, r2.zzzz
    mad r5.xy, cb1[44].zwzz, l(-2.000000, 1.000000, 0.000000, 0.000000), r5.zwzz
    sample_l_indexable(texture2d)(float,float,float,float) r5.xy, r5.xyxx, t0.xyzw, s0, l(0.000000)
    mad r0.w, r5.x, l(5.000000), l(-3.750000)
    mul r0.w, |r0.w|, r5.x
    round_ne r5.w, r5.y
    round_ne r5.z, r0.w
    mul r5.xy, r2.wwww, r5.zwzz
    add r0.w, r2.x, r2.y
    lt r0.w, l(0.000000), r0.w
    mad_sat r6.xy, r2.zzzz, r4.xyxx, r4.zwzz
    mad_sat r6.zw, r2.zzzz, r1.zzzw, r5.xxxy
    add r1.z, r3.x, r3.y
    mad r1.z, r2.w, r3.w, r1.z
    mad_sat r1.z, r2.w, r3.z, r1.z
    add r1.x, r1.x, r1.y
    mad r1.x, r2.w, r5.w, r1.x
    mad_sat r1.x, r2.w, r5.z, r1.x
    mad r1.y, -r2.z, r4.y, l(2.000000)
    mad_sat r1.y, -r2.w, r3.w, r1.y
    mul r2.x, r1.y, r1.z
    mad r1.y, -r2.z, r1.w, l(2.000000)
    mad_sat r1.y, -r2.w, r5.w, r1.y
    mul r2.y, r1.y, r1.x
    movc r1.xy, r0.wwww, r6.xzxx, r2.xyxx
    add r1.zw, -r6.yyyw, l(0.000000, 0.000000, 1.000000, 1.000000)
    mul r1.xy, r1.zwzz, r1.xyxx
    movc r1.xy, r0.wwww, r1.xyxx, r2.xyxx
    mul r0.xy, r0.xyxx, r1.xyxx
  endif 
  ieq r0.z, r0.z, l(8)
  movc o0.w, r0.z, r0.x, r0.y
endif 
ret 
// Approximately 414 instruction slots used
