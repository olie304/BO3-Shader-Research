//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:39:57 2021
//
//
// Buffer Definitions: 
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16 [unused]
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16 [unused]
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16
//   float4 triDensityParams;           // Offset: 1392 Size:    16
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// NORMAL                   0   xyz         1     NONE   float       
// TEXCOORD                 3      w        1     NONE   float       
// COLOR                    0   xyzw        2     NONE   float       
// TEXCOORD                 0   xyz         3     NONE   float   xyz 
// TEXCOORD                 1   xyzw        4     NONE   float   xyzw
// TEXCOORD                 2   x           5     NONE    uint   x   
// TEXCOORD                 4   xyzw        6     NONE   float       
// TEXCOORD                 5   xyzw        7     NONE    uint       
// TEXCOORD                 6   xyzw        8     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz 
// COLOR                    0   xyzw        2     NONE   float   xyzw
// TEXCOORD                 0   x           3     NONE    uint   x   
//
gs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB1[88], immediateIndexed
dcl_input_siv v[3][0].xyzw, position
dcl_input v[3][1].xyz
dcl_input v[3][1].w
dcl_input v[3][2].xyzw
dcl_input v[3][3].xyz
dcl_input v[3][4].xyzw
dcl_input v[3][5].x
dcl_input v[3][6].xyzw
dcl_input v[3][7].xyzw
dcl_input v[3][8].xyzw
dcl_temps 5
dcl_inputprimitive triangle 
dcl_stream m0
dcl_outputtopology trianglestrip 
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_output o2.xyzw
dcl_output o3.x
dcl_maxout 23
add r0.xyz, -v[0][3].zxyz, v[2][3].zxyz
add r1.xyz, -v[0][3].yzxy, v[1][3].yzxy
mul r2.xyz, r0.xyzx, r1.xyzx
mad r0.xyz, r0.zxyz, r1.yzxy, -r2.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
add r1.xyz, cb1[24].xyzx, -v[0][3].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.w, r0.xyzx, r1.xyzx
add r1.xyz, cb1[24].xyzx, -v[1][3].xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
dp3 r1.x, r0.xyzx, r1.xyzx
add r1.yzw, cb1[24].xxyz, -v[2][3].xxyz
dp3 r2.x, r1.yzwy, r1.yzwy
rsq r2.x, r2.x
mul r1.yzw, r1.yyzw, r2.xxxx
dp3 r1.y, r0.xyzx, r1.yzwy
and r2.xyz, cb1[86].xxxx, l(32, 1, 6, 0)
if_nz r2.x
  add r1.z, l(0.000100), v[0][0].z
  mov o0.xyw, v[0][0].xyxw
  mov o0.z, r1.z
  mov o1.xyz, r0.xyzx
  mov o2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  mov o3.x, l(1)
  emit_stream m0
  add r1.z, l(0.000100), v[1][0].z
  mov o0.xyw, v[1][0].xyxw
  mov o0.z, r1.z
  mov o1.xyz, r0.xyzx
  mov o2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  mov o3.x, l(1)
  emit_stream m0
  add r1.z, l(0.000100), v[2][0].z
  mov o0.xyw, v[2][0].xyxw
  mov o0.z, r1.z
  mov o1.xyz, r0.xyzx
  mov o2.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  mov o3.x, l(1)
  emit_stream m0
  cut_stream m0
endif 
if_nz r2.y
  and r0.xy, cb1[86].xxxx, l(8, 16, 0, 0)
  add r0.z, r0.w, l(-0.100000)
  mul_sat r0.z, r0.z, l(1.42857146)
  mad r1.z, r0.z, l(-2.000000), l(3.000000)
  mul r0.z, r0.z, r0.z
  mul r0.z, r0.z, r1.z
  movc r3.xy, r0.xyxx, r0.zzzz, l(1.000000,1.000000,0,0)
  mul r0.z, r3.x, cb1[87].y
  mov r4.xy, l(0,0,0,0)
  mov r4.z, cb1[87].z
  mov r3.z, l(1.000000)
  mul r2.xyw, r3.zzzy, r4.yyyz
  mad r3.xyzw, r0.zzzz, l(-0.500000, 0.500000, 0.000000, 0.000000), v[0][4].xyzw
  mul r1.zw, r3.xxxy, cb1[44].zzzw
  mad r1.zw, r1.zzzw, l(0.000000, 0.000000, 2.000000, -2.000000), l(0.000000, 0.000000, -1.000000, 1.000000)
  mul r1.zw, r3.wwww, r1.zzzw
  mov o0.xy, r1.zwzz
  mov o0.zw, r3.zzzw
  mov o1.xyz, l(0,0,0,0)
  mov o2.xzw, r2.yyyw
  mov o2.y, l(1.000000)
  mov o3.x, l(0)
  emit_stream m0
  mad r3.xyzw, r0.zzzz, l(-0.500000, -0.500000, 0.000000, 0.000000), v[0][4].xyzw
  mul r1.zw, r3.xxxy, cb1[44].zzzw
  mad r1.zw, r1.zzzw, l(0.000000, 0.000000, 2.000000, -2.000000), l(0.000000, 0.000000, -1.000000, 1.000000)
  mul r1.zw, r3.wwww, r1.zzzw
  mov o0.xy, r1.zwzz
  mov o0.zw, r3.zzzw
  mov o1.xyz, l(0,0,0,0)
  mov o2.xzw, r2.yyyw
  mov o2.y, l(1.000000)
  mov o3.x, l(0)
  emit_stream m0
  mad r3.xyzw, r0.zzzz, l(0.500000, 0.500000, 0.000000, 0.000000), v[0][4].xyzw
  mul r1.zw, r3.xxxy, cb1[44].zzzw
  mad r1.zw, r1.zzzw, l(0.000000, 0.000000, 2.000000, -2.000000), l(0.000000, 0.000000, -1.000000, 1.000000)
  mul r1.zw, r3.wwww, r1.zzzw
  mov o0.xy, r1.zwzz
  mov o0.zw, r3.zzzw
  mov o1.xyz, l(0,0,0,0)
  mov o2.xzw, r2.yyyw
  mov o2.y, l(1.000000)
  mov o3.x, l(0)
  emit_stream m0
  mad r3.xyzw, r0.zzzz, l(0.500000, -0.500000, 0.000000, 0.000000), v[0][4].xyzw
  mul r1.zw, r3.xxxy, cb1[44].zzzw
  mad r1.zw, r1.zzzw, l(0.000000, 0.000000, 2.000000, -2.000000), l(0.000000, 0.000000, -1.000000, 1.000000)
  mul r1.zw, r3.wwww, r1.zzzw
  mov o0.xy, r1.zwzz
  mov o0.zw, r3.zzzw
  mov o1.xyz, l(0,0,0,0)
  mov o2.xzw, r2.xxyw
  mov o2.y, l(1.000000)
  mov o3.x, l(0)
  emit_stream m0
  cut_stream m0
  add r0.z, r1.x, l(-0.100000)
  mul_sat r0.z, r0.z, l(1.42857146)
  mad r1.z, r0.z, l(-2.000000), l(3.000000)
  mul r0.z, r0.z, r0.z
  mul r0.z, r0.z, r1.z
  movc r3.xy, r0.xyxx, r0.zzzz, l(1.000000,1.000000,0,0)
  mul r0.z, r3.x, cb1[87].y
  mov r3.z, l(1.000000)
  mul r2.xyw, r3.zzzy, r4.yyyz
  mad r3.xyzw, r0.zzzz, l(-0.500000, 0.500000, 0.000000, 0.000000), v[1][4].xyzw
  mul r1.zw, r3.xxxy, cb1[44].zzzw
  mad r1.zw, r1.zzzw, l(0.000000, 0.000000, 2.000000, -2.000000), l(0.000000, 0.000000, -1.000000, 1.000000)
  mul r1.zw, r3.wwww, r1.zzzw
  mov o0.xy, r1.zwzz
  mov o0.zw, r3.zzzw
  mov o1.xyz, l(0,0,0,0)
  mov o2.xzw, r2.yyyw
  mov o2.y, l(1.000000)
  mov o3.x, l(0)
  emit_stream m0
  mad r3.xyzw, r0.zzzz, l(-0.500000, -0.500000, 0.000000, 0.000000), v[1][4].xyzw
  mul r1.zw, r3.xxxy, cb1[44].zzzw
  mad r1.zw, r1.zzzw, l(0.000000, 0.000000, 2.000000, -2.000000), l(0.000000, 0.000000, -1.000000, 1.000000)
  mul r1.zw, r3.wwww, r1.zzzw
  mov o0.xy, r1.zwzz
  mov o0.zw, r3.zzzw
  mov o1.xyz, l(0,0,0,0)
  mov o2.xzw, r2.yyyw
  mov o2.y, l(1.000000)
  mov o3.x, l(0)
  emit_stream m0
  mad r3.xyzw, r0.zzzz, l(0.500000, 0.500000, 0.000000, 0.000000), v[1][4].xyzw
  mul r1.zw, r3.xxxy, cb1[44].zzzw
  mad r1.zw, r1.zzzw, l(0.000000, 0.000000, 2.000000, -2.000000), l(0.000000, 0.000000, -1.000000, 1.000000)
  mul r1.zw, r3.wwww, r1.zzzw
  mov o0.xy, r1.zwzz
  mov o0.zw, r3.zzzw
  mov o1.xyz, l(0,0,0,0)
  mov o2.xzw, r2.yyyw
  mov o2.y, l(1.000000)
  mov o3.x, l(0)
  emit_stream m0
  mad r3.xyzw, r0.zzzz, l(0.500000, -0.500000, 0.000000, 0.000000), v[1][4].xyzw
  mul r1.zw, r3.xxxy, cb1[44].zzzw
  mad r1.zw, r1.zzzw, l(0.000000, 0.000000, 2.000000, -2.000000), l(0.000000, 0.000000, -1.000000, 1.000000)
  mul r1.zw, r3.wwww, r1.zzzw
  mov o0.xy, r1.zwzz
  mov o0.zw, r3.zzzw
  mov o1.xyz, l(0,0,0,0)
  mov o2.xzw, r2.xxyw
  mov o2.y, l(1.000000)
  mov o3.x, l(0)
  emit_stream m0
  cut_stream m0
  add r0.z, r1.y, l(-0.100000)
  mul_sat r0.z, r0.z, l(1.42857146)
  mad r1.z, r0.z, l(-2.000000), l(3.000000)
  mul r0.z, r0.z, r0.z
  mul r0.z, r0.z, r1.z
  movc r0.xy, r0.xyxx, r0.zzzz, l(1.000000,1.000000,0,0)
  mul r0.x, r0.x, cb1[87].y
  mov r0.z, l(1.000000)
  mul r2.xyw, r0.zzzy, r4.xyxz
  mad r3.xyzw, r0.xxxx, l(-0.500000, 0.500000, 0.000000, 0.000000), v[2][4].xyzw
  mul r0.yz, r3.xxyx, cb1[44].zzwz
  mad r0.yz, r0.yyzy, l(0.000000, 2.000000, -2.000000, 0.000000), l(0.000000, -1.000000, 1.000000, 0.000000)
  mul r0.yz, r3.wwww, r0.yyzy
  mov o0.xy, r0.yzyy
  mov o0.zw, r3.zzzw
  mov o1.xyz, l(0,0,0,0)
  mov o2.xzw, r2.yyyw
  mov o2.y, l(1.000000)
  mov o3.x, l(0)
  emit_stream m0
  mad r3.xyzw, r0.xxxx, l(-0.500000, -0.500000, 0.000000, 0.000000), v[2][4].xyzw
  mul r0.yz, r3.xxyx, cb1[44].zzwz
  mad r0.yz, r0.yyzy, l(0.000000, 2.000000, -2.000000, 0.000000), l(0.000000, -1.000000, 1.000000, 0.000000)
  mul r0.yz, r3.wwww, r0.yyzy
  mov o0.xy, r0.yzyy
  mov o0.zw, r3.zzzw
  mov o1.xyz, l(0,0,0,0)
  mov o2.xzw, r2.yyyw
  mov o2.y, l(1.000000)
  mov o3.x, l(0)
  emit_stream m0
  mad r3.xyzw, r0.xxxx, l(0.500000, 0.500000, 0.000000, 0.000000), v[2][4].xyzw
  mul r0.yz, r3.xxyx, cb1[44].zzwz
  mad r0.yz, r0.yyzy, l(0.000000, 2.000000, -2.000000, 0.000000), l(0.000000, -1.000000, 1.000000, 0.000000)
  mul r0.yz, r3.wwww, r0.yyzy
  mov o0.xy, r0.yzyy
  mov o0.zw, r3.zzzw
  mov o1.xyz, l(0,0,0,0)
  mov o2.xzw, r2.yyyw
  mov o2.y, l(1.000000)
  mov o3.x, l(0)
  emit_stream m0
  mad r3.xyzw, r0.xxxx, l(0.500000, -0.500000, 0.000000, 0.000000), v[2][4].xyzw
  mul r0.xy, r3.xyxx, cb1[44].zwzz
  mad r0.xy, r0.xyxx, l(2.000000, -2.000000, 0.000000, 0.000000), l(-1.000000, 1.000000, 0.000000, 0.000000)
  mul r0.xy, r3.wwww, r0.xyxx
  mov o0.xy, r0.xyxx
  mov o0.zw, r3.zzzw
  mov o1.xyz, l(0,0,0,0)
  mov o2.xzw, r2.xxyw
  mov o2.y, l(1.000000)
  mov o3.x, l(0)
  emit_stream m0
  cut_stream m0
endif 
or r0.x, v[1][5].x, v[0][5].x
or r0.x, r0.x, v[2][5].x
not r0.x, r0.x
lt r0.y, l(0.000000), r0.w
lt r0.z, l(0.000000), r1.x
or r0.y, r0.z, r0.y
lt r0.z, l(0.000000), r1.y
or r0.y, r0.z, r0.y
and r0.x, r0.y, r0.x
ine r0.y, r2.z, l(0)
and r0.x, r0.y, r0.x
if_nz r0.x
  add r0.x, r0.w, r1.x
  add r0.x, r1.y, r0.x
  add r0.yzw, v[1][4].xxyz, v[0][4].xxyz
  add r0.yzw, r0.yyzw, v[2][4].xxyz
  mul r1.xyz, r0.yzwy, l(0.33333334, 0.33333334, 0.33333334, 0.000000)
  min r0.y, v[1][4].w, v[0][4].w
  min r1.w, r0.y, v[2][4].w
  and r0.yz, cb1[86].xxxx, l(0, 4, 2, 0)
  if_nz r0.y
    and r0.yw, cb1[86].xxxx, l(0, 8, 0, 16)
    mad r2.x, r0.x, l(0.33333334), l(-0.100000)
    mul_sat r2.x, r2.x, l(1.42857146)
    mad r2.y, r2.x, l(-2.000000), l(3.000000)
    mul r2.x, r2.x, r2.x
    mul r2.x, r2.x, r2.y
    movc r2.xy, r0.ywyy, r2.xxxx, l(1.000000,1.000000,0,0)
    mul r0.y, r2.x, cb1[87].y
    mov r3.xy, l(0,0,0,0)
    mov r3.z, cb1[87].z
    mov r2.z, l(1.000000)
    mul r2.xyz, r2.zzyz, r3.xyzx
    mad r3.xyzw, r0.yyyy, l(-0.500000, 0.500000, 0.000000, 0.000000), r1.xyzw
    mul r3.xy, r3.xyxx, cb1[44].zwzz
    mad r3.xy, r3.xyxx, l(2.000000, -2.000000, 0.000000, 0.000000), l(-1.000000, 1.000000, 0.000000, 0.000000)
    mul r3.xy, r3.wwww, r3.xyxx
    mov o0.xy, r3.xyxx
    mov o0.zw, r3.zzzw
    mov o1.xyz, l(0,0,0,0)
    mov o2.xzw, r2.yyyz
    mov o2.y, l(1.000000)
    mov o3.x, l(0)
    emit_stream m0
    mad r3.xyzw, r0.yyyy, l(-0.500000, -0.500000, 0.000000, 0.000000), r1.xyzw
    mul r3.xy, r3.xyxx, cb1[44].zwzz
    mad r3.xy, r3.xyxx, l(2.000000, -2.000000, 0.000000, 0.000000), l(-1.000000, 1.000000, 0.000000, 0.000000)
    mul r3.xy, r3.wwww, r3.xyxx
    mov o0.xy, r3.xyxx
    mov o0.zw, r3.zzzw
    mov o1.xyz, l(0,0,0,0)
    mov o2.xzw, r2.yyyz
    mov o2.y, l(1.000000)
    mov o3.x, l(0)
    emit_stream m0
    mad r3.xyzw, r0.yyyy, l(0.500000, 0.500000, 0.000000, 0.000000), r1.xyzw
    mul r3.xy, r3.xyxx, cb1[44].zwzz
    mad r3.xy, r3.xyxx, l(2.000000, -2.000000, 0.000000, 0.000000), l(-1.000000, 1.000000, 0.000000, 0.000000)
    mul r3.xy, r3.wwww, r3.xyxx
    mov o0.xy, r3.xyxx
    mov o0.zw, r3.zzzw
    mov o1.xyz, l(0,0,0,0)
    mov o2.xzw, r2.yyyz
    mov o2.y, l(1.000000)
    mov o3.x, l(0)
    emit_stream m0
    mad r3.xyzw, r0.yyyy, l(0.500000, -0.500000, 0.000000, 0.000000), r1.xyzw
    mul r0.yw, r3.xxxy, cb1[44].zzzw
    mad r0.yw, r0.yyyw, l(0.000000, 2.000000, 0.000000, -2.000000), l(0.000000, -1.000000, 0.000000, 1.000000)
    mul r0.yw, r3.wwww, r0.yyyw
    mov o0.xy, r0.ywyy
    mov o0.zw, r3.zzzw
    mov o1.xyz, l(0,0,0,0)
    mov o2.xzw, r2.xxyz
    mov o2.y, l(1.000000)
    mov o3.x, l(0)
    emit_stream m0
    cut_stream m0
  endif 
  if_nz r0.z
    add r0.y, -v[0][4].x, v[1][4].x
    add r0.z, -v[0][4].y, v[2][4].y
    add r0.w, -v[2][4].x, v[0][4].x
    add r2.x, -v[1][4].y, v[0][4].y
    mul r0.w, r0.w, r2.x
    mad r0.y, r0.y, r0.z, -r0.w
    mul r0.z, r0.y, l(0.500000)
    ge r0.y, r0.y, l(0.000000)
    lt r0.z, r0.z, cb1[87].x
    and r0.y, r0.z, r0.y
    if_nz r0.y
      and r0.yz, cb1[86].xxxx, l(0, 8, 16, 0)
      mad r0.x, r0.x, l(0.33333334), l(-0.100000)
      mul_sat r0.x, r0.x, l(1.42857146)
      mad r0.w, r0.x, l(-2.000000), l(3.000000)
      mul r0.x, r0.x, r0.x
      mul r0.x, r0.x, r0.w
      movc r0.xy, r0.yzyy, r0.xxxx, l(1.000000,1.000000,0,0)
      mul r0.x, r0.x, cb1[87].y
      mov r2.xy, l(0,0,0,0)
      mov r2.z, cb1[87].z
      mov r0.z, l(1.000000)
      mul r0.yzw, r0.zzzy, r2.xxyz
      mad r2.xyzw, r0.xxxx, l(-0.500000, 0.500000, 0.000000, 0.000000), r1.xyzw
      mul r2.xy, r2.xyxx, cb1[44].zwzz
      mad r2.xy, r2.xyxx, l(2.000000, -2.000000, 0.000000, 0.000000), l(-1.000000, 1.000000, 0.000000, 0.000000)
      mul r2.xy, r2.wwww, r2.xyxx
      mov o0.xy, r2.xyxx
      mov o0.zw, r2.zzzw
      mov o1.xyz, l(0,0,0,0)
      mov o2.xzw, r0.zzzw
      mov o2.y, l(1.000000)
      mov o3.x, l(0)
      emit_stream m0
      mad r2.xyzw, r0.xxxx, l(-0.500000, -0.500000, 0.000000, 0.000000), r1.xyzw
      mul r2.xy, r2.xyxx, cb1[44].zwzz
      mad r2.xy, r2.xyxx, l(2.000000, -2.000000, 0.000000, 0.000000), l(-1.000000, 1.000000, 0.000000, 0.000000)
      mul r2.xy, r2.wwww, r2.xyxx
      mov o0.xy, r2.xyxx
      mov o0.zw, r2.zzzw
      mov o1.xyz, l(0,0,0,0)
      mov o2.xzw, r0.zzzw
      mov o2.y, l(1.000000)
      mov o3.x, l(0)
      emit_stream m0
      mad r2.xyzw, r0.xxxx, l(0.500000, 0.500000, 0.000000, 0.000000), r1.xyzw
      mul r2.xy, r2.xyxx, cb1[44].zwzz
      mad r2.xy, r2.xyxx, l(2.000000, -2.000000, 0.000000, 0.000000), l(-1.000000, 1.000000, 0.000000, 0.000000)
      mul r2.xy, r2.wwww, r2.xyxx
      mov o0.xy, r2.xyxx
      mov o0.zw, r2.zzzw
      mov o1.xyz, l(0,0,0,0)
      mov o2.xzw, r0.zzzw
      mov o2.y, l(1.000000)
      mov o3.x, l(0)
      emit_stream m0
      mad r1.xyzw, r0.xxxx, l(0.500000, -0.500000, 0.000000, 0.000000), r1.xyzw
      mul r1.xy, r1.xyxx, cb1[44].zwzz
      mad r1.xy, r1.xyxx, l(2.000000, -2.000000, 0.000000, 0.000000), l(-1.000000, 1.000000, 0.000000, 0.000000)
      mul r1.xy, r1.wwww, r1.xyxx
      mov o0.xy, r1.xyxx
      mov o0.zw, r1.zzzw
      mov o1.xyz, l(0,0,0,0)
      mov o2.xzw, r0.yyzw
      mov o2.y, l(1.000000)
      mov o3.x, l(0)
      emit_stream m0
      cut_stream m0
    endif 
  endif 
endif 
ret 
// Approximately 366 instruction slots used
