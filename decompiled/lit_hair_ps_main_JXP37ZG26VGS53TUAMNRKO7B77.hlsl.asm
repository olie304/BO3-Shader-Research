//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:37:01 2021
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float baseNormalHeight;            // Offset:  160 Size:     4
//   float2 glossRange;                 // Offset:  164 Size:     8
//   float anisotropy;                  // Offset:  172 Size:     4
//   float3 specColorTint;              // Offset:  176 Size:    12
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4 [unused]
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// colorSampler                      sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// specColorSampler                  sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// normalSampler                     sampler      NA          NA             s5      1 
// aoSampler                         sampler      NA          NA             s6      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// floatZSampler                     texture  float4          2d             t0      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// colorMap                          texture  float4          2d            t21      1 
// normalMap                         texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// glossMap                          texture  float4          2d            t24      1 
// aoMap                             texture  float4          2d            t25      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyz 
// COLOR                    1   x           1     NONE   float   x   
// TEXCOORD                 0    yz         1     NONE   float    yz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// OFFPOSITION              0   xyz         5     NONE   float   xyz 
// SV_IsFrontFace           0   x           6    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[12], immediateIndexed
dcl_constantbuffer CB1[86], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2darray (float,float,float,float) t31
dcl_input_ps_siv linear noperspective v0.xyz, position
dcl_input_ps linear v1.x
dcl_input_ps linear v1.yz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps_sgv constant v6.x, is_front_face
dcl_output o0.xyzw
dcl_temps 67
dcl_indexableTemp x0[4], 4
dcl_indexableTemp x1[4], 4
dcl_indexableTemp x2[4], 4
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.yzyy, t21.xyzw, s1
mul o0.w, r0.w, v1.x
sample_indexable(texture2d)(float,float,float,float) r0.w, v1.yzyy, t25.yzwx, s6
sample_indexable(texture2d)(float,float,float,float) r1.x, v1.yzyy, t24.xyzw, s3
add r1.y, -cb0[10].y, cb0[10].z
mul r1.z, r1.y, r1.x
mad r1.x, r1.x, r1.y, cb0[10].y
mad r1.y, r1.z, l(0.500000), cb0[10].y
mul_sat r1.xy, r1.xyxx, l(0.05882353, 0.05882353, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r2.xyz, v1.yzyy, t22.xyzw, s5
add r2.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.000000, 0.000000)
mad r2.xyz, cb0[10].xxxx, r2.xyzx, l(0.500000, 0.500000, 0.000000, 0.000000)
mad r1.zw, r2.xxxy, l(0.000000, 0.000000, 1.99218750, 1.99218750), l(0.000000, 0.000000, -1.000000, -1.000000)
dp2 r2.x, r1.zwzz, r1.zwzz
add r2.x, -r2.x, l(1.000000)
max r2.x, r2.x, l(0.000000)
sqrt r2.x, r2.x
mul r2.y, r2.z, r2.z
mul r2.y, r2.y, l(0.33333334)
min r2.y, r2.y, l(1.000000)
movc r2.z, v6.x, l(1.000000), l(-1.000000)
dp3 r2.w, v2.xyzx, v2.xyzx
rsq r2.w, r2.w
mul r3.xyz, r2.wwww, v2.xyzx
mul r3.xyz, r2.zzzz, r3.xyzx
dp3 r2.w, v3.xyzx, v3.xyzx
rsq r2.w, r2.w
mul r4.xyz, r2.wwww, v3.xyzx
mul r4.xyz, r2.zzzz, r4.xyzx
dp3 r2.w, v4.xyzx, v4.xyzx
rsq r2.w, r2.w
mul r5.xyz, r2.wwww, v4.xyzx
mul r5.xyz, r2.zzzz, r5.xyzx
mul r1.xy, r1.xyxx, l(-17.000000, -17.000000, 0.000000, 0.000000)
exp r1.x, r1.x
add r1.x, r1.x, r2.y
log r1.x, r1.x
exp r1.y, r1.y
add r1.y, r1.y, r2.y
log r1.y, r1.y
mul r1.xy, r1.xyxx, l(-0.05882353, -0.05882353, 0.000000, 0.000000)
max r1.xy, r1.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r2.yzw, r1.wwww, r5.xxyz
mad r2.yzw, r4.xxyz, r1.zzzz, r2.yyzw
mad r2.xyz, r3.xyzx, r2.xxxx, r2.yzwy
dp3 r1.z, r2.xyzx, r2.xyzx
rsq r1.z, r1.z
mul r2.xyz, r1.zzzz, r2.xyzx
ftou r1.zw, v0.xxxy
ge r3.w, v0.z, l(0.984375)
mul r4.w, v0.z, l(1.01587307)
mad r5.w, v0.z, l(64.000000), l(-63.000000)
movc r3.w, r3.w, r5.w, r4.w
max r3.w, r3.w, l(0.00000001)
rcp r3.w, r3.w
dp3 r4.w, -v5.xyzx, -v5.xyzx
rsq r4.w, r4.w
mul r6.xyz, r4.wwww, -v5.xyzx
utof r7.xy, r1.wzww
dp2 r5.w, r7.yxyy, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r5.w, r5.w
mul r5.w, r5.w, l(52.982918)
frc r5.w, r5.w
mad r5.w, r5.w, l(6.28318548), cb1[70].w
sincos r8.x, r9.x, r5.w
dp2 r5.w, r7.xyxx, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r5.w, r5.w
mul r5.w, r5.w, l(52.982918)
frc r5.w, r5.w
mad r5.w, r5.w, l(6.28318548), cb1[70].w
sincos r7.x, r10.x, r5.w
dp3_sat r5.w, r2.xyzx, r6.xyzx
dp3 r6.w, -r6.xyzx, r2.xyzx
add r6.w, r6.w, r6.w
mad r11.xyz, r2.xyzx, -r6.wwww, -r6.xyzx
mul r7.yzw, cb1[9].xxyw, -cb1[24].yyyy
mad r7.yzw, -cb1[24].xxxx, cb1[8].xxyw, r7.yyzw
mad r7.yzw, -cb1[24].zzzz, cb1[10].xxyw, r7.yyzw
add r7.yzw, r7.yyzw, cb1[11].xxyw
add r12.xyz, v5.xyzx, cb1[24].xyzx
mul r8.z, r5.w, l(0.984375)
mad r6.w, r5.w, l(0.54703742), l(0.45296258)
mul r10.yz, r6.wwww, l(0.000000, 0.54703742, 0.45296258, 0.000000)
min r6.w, |cb0[10].w|, l(1.000000)
add r1.y, -r1.x, r1.y
mad r1.x, r6.w, r1.y, r1.x
lt r1.y, cb0[10].w, l(0.000000)
mul r1.x, r1.x, l(17.000000)
exp r13.y, r1.x
mov r13.xz, l(1.000000,0,1.000000,0)
movc r1.xy, r1.yyyy, r13.xyxx, r13.yxyy
add r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000)
div r1.xy, l(2.000000, 2.000000, 0.000000, 0.000000), r1.xyxx
dp3 r6.w, r2.xyzx, cb2[17].xyzx
ge r9.w, l(0.000000), |r6.w|
if_nz r9.w
  mov r13.y, l(0)
endif 
if_z r9.w
  mul r14.xyz, v5.yyyy, cb2[29].xyzx
  mad r14.xyz, v5.xxxx, cb2[28].xyzx, r14.xyzx
  mad r14.xyz, v5.zzzz, cb2[30].xyzx, r14.xyzx
  add r14.xyz, r14.xyzx, cb2[31].xyzx
  add r9.w, r14.z, -cb2[17].w
  mad r9.w, -r9.w, l(0.00006104), l(1.000000)
  mov_sat r10.w, r9.w
  eq r10.w, r9.w, r10.w
  if_nz r10.w
    mov r10.w, l(0)
    mov r14.w, l(0)
    loop 
      ge r15.x, r10.w, l(3.000000)
      breakc_nz r15.x
      ftou r15.x, r10.w
      add r15.yz, r14.xxyx, -cb2[r15.x + 20].xxyx
      max r15.y, |r15.z|, |r15.y|
      mul r14.w, r15.y, cb2[r15.x + 20].z
      lt r15.x, r14.w, l(1.000000)
      if_nz r15.x
        break 
      endif 
      add r10.w, r10.w, l(1.000000)
      mov r14.w, l(0)
    endloop 
  else 
    mov r10.w, l(3.000000)
    mov r14.w, l(0)
  endif 
  ge r15.x, r10.w, l(3.000000)
  if_nz r15.x
    mul r15.yzw, l(0.000000, 128.000000, 0.500000, 0.500000), cb2[27].zzxy
    rcp r16.xz, r15.yyyy
    mov r16.y, -r16.z
    mad r15.yzw, r14.xxyx, r16.xxyz, r15.zzwz
    add r16.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r15.yzw, r15.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r15.yzw, r16.xxyz, r15.yyzw
    mul r16.xy, r15.wzww, cb2[32].xxxx
    round_ni r16.xy, r16.xyxx
    mul r16.y, r16.y, cb2[27].x
    mad r16.x, r16.y, cb2[32].x, r16.x
    ftou r16.x, r16.x
    iadd r16.x, r16.x, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.y, r16.x, l(0), t23.xxxx
    and r16.z, r16.y, l(0x40000000)
    ishl r16.w, r16.y, l(2)
    if_z r16.z
      and r16.z, r16.y, l(0x01ffffff)
      iadd r17.x, r16.z, r16.x
      ushr r16.x, r16.y, l(25)
      utof r16.x, r16.x
      mul r15.yzw, r15.yyzw, r16.xxxx
      frc r15.yzw, r15.yyzw
      mul r15.yzw, r15.yyzw, l(0.000000, 128.000000, 128.000000, 128.000000)
      ftou r15.yzw, r15.yyzw
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.z, r17.x, l(0), t23.xxxx
      ushr r16.xy, r15.wzww, l(6, 6, 0, 0)
      and r16.z, r17.z, l(0xc0000000)
      iadd r17.w, r17.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.w, r17.w, l(0), t23.xxxx
      movc r16.y, r16.y, r17.z, r17.w
      ushr r17.w, r16.y, l(13)
      movc r16.x, r16.x, r17.w, r16.y
      and r16.x, r16.x, l(8191)
      iadd r18.x, r16.x, r17.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.x, l(0), t23.xxxx
      mov r17.y, l(0)
      mov r18.y, l(1)
      movc r18.xyz, r16.zzzz, r17.xyzx, r18.xyzx
      movc r19.yz, r16.zzzz, l(0,6,1,0), l(0,5,2,0)
      ushr r16.xy, r15.wzww, r19.yyyy
      and r16.xy, r16.xyxx, l(1, 1, 0, 0)
      and r17.w, r18.z, l(0xc0000000)
      iadd r18.w, r18.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.w, r18.w, l(0), t23.xxxx
      movc r16.y, r16.y, r18.z, r18.w
      ushr r18.w, r16.y, l(13)
      movc r16.x, r16.x, r18.w, r16.y
      and r16.x, r16.x, l(8191)
      iadd r19.x, r16.x, r18.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.w, r19.x, l(0), t23.xxxx
      movc r18.xyz, r17.wwww, r18.xyzx, r19.xzwx
      movc r16.xyz, r16.zzzz, r17.xyzx, r18.xyzx
      and r17.x, r16.z, l(0xc0000000)
      if_z r17.x
        iadd r17.x, -r16.y, l(6)
        ushr r17.xy, r15.wzww, r17.xxxx
        or r17.z, r16.z, l(0x40000000)
        bfi r17.y, l(1), l(1), r17.y, l(0)
        bfi r17.x, l(1), l(0), r17.x, r17.y
        imul null, r17.x, r17.x, l(10)
        ushr r17.x, r17.z, r17.x
        and r17.x, r17.x, l(1023)
        iadd r17.x, r16.x, r17.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.w, r17.x, l(0), t23.xxxx
        iadd r17.yz, r16.yyyy, l(0, 1, 2, 0)
        iadd r16.y, -r17.y, l(6)
        ushr r18.xy, r15.wzww, r16.yyyy
        and r16.y, r17.w, l(0xc0000000)
        or r18.z, r17.w, l(0x40000000)
        bfi r18.y, l(1), l(1), r18.y, l(0)
        bfi r18.x, l(1), l(0), r18.x, r18.y
        imul null, r18.x, r18.x, l(10)
        ushr r18.x, r18.z, r18.x
        and r18.x, r18.x, l(1023)
        iadd r18.x, r17.x, r18.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.x, l(0), t23.xxxx
        mov r18.y, r17.z
        movc r18.xyz, r16.yyyy, r17.xywx, r18.xyzx
        iadd r17.y, -r18.y, l(6)
        ushr r17.yz, r15.wwzw, r17.yyyy
        and r18.y, r18.z, l(0xc0000000)
        or r18.w, r18.z, l(0x40000000)
        bfi r17.z, l(1), l(1), r17.z, l(0)
        bfi r17.y, l(1), l(0), r17.y, r17.z
        imul null, r17.y, r17.y, l(10)
        ushr r17.y, r18.w, r17.y
        and r17.y, r17.y, l(1023)
        iadd r19.x, r17.y, r18.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.y, r19.x, l(0), t23.xxxx
        movc r17.yz, r18.yyyy, r18.xxzx, r19.xxyx
        movc r16.xz, r16.yyyy, r17.xxwx, r17.yyzy
      endif 
      and r16.y, r16.z, l(0xc0000000)
      if_z r16.y
        ubfe r17.x, l(14), l(15), r16.z
        utof r17.x, r17.x
        mul r17.x, r17.x, cb2[27].w
        and r17.yz, r16.zzzz, l(0, 0x00007fff, 0x20000000, 0)
        utof r17.y, r17.y
        mul r17.y, r17.y, cb2[27].w
        mul r17.xy, r17.xyxx, l(0.00006104, 0.00003052, 0.000000, 0.000000)
        and r17.w, r15.z, l(3)
        iadd r17.w, r16.x, r17.w
        iadd r17.w, r17.w, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.w, r17.w, l(0), t23.xxxx
        bfi r18.xyz, l(2, 2, 1, 0), l(3, 1, 4, 0), r15.yzwy, l(0, 0, 0, 0)
        ushr r15.y, r17.w, r18.x
        and r15.y, r15.y, l(255)
        utof r15.y, r15.y
        mul r15.y, r17.y, r15.y
        mad r15.y, r15.y, l(0.00392157), r17.x
        iadd r15.z, r18.y, l(1)
        ubfe r15.w, l(1), l(1), r15.w
        iadd r15.z, r15.w, r15.z
        iadd r15.z, r15.z, r16.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.z, r15.z, l(0), t23.xxxx
        ushr r15.z, r15.z, r18.z
        and r15.z, r15.z, l(0x0000ffff)
        utof r15.z, r15.z
        mul r15.z, r17.y, r15.z
        mad r15.z, r15.z, l(0.00001526), r17.x
        movc r16.w, r17.z, r15.y, r15.z
      else 
        and r15.y, r16.z, l(0x80000000)
        iadd r15.z, r16.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.z, r15.z, l(0), t23.xxxx
        movc r15.y, r15.y, r15.z, l(0)
        ishl r15.z, r16.z, l(2)
        ushr r15.w, r15.y, l(16)
        and r15.y, r15.y, l(0x0000ffff)
        f16tof32 r15.yw, r15.yyyw
        mad r15.z, r14.x, r15.w, r15.z
        mad r15.y, r14.y, r15.y, r15.z
        movc r16.w, r16.y, r15.y, r16.w
      endif 
    endif 
    mad r14.z, -cb2[27].z, l(2.000000), r14.z
    lt r14.z, r16.w, r14.z
    movc r13.y, r14.z, l(0), l(1.000000)
  endif 
  if_z r15.x
    if_z cb2[58].y
      ftou r14.z, r10.w
      add r15.xy, r14.xyxx, -cb2[r14.z + 20].xyxx
      mul r15.xy, r15.xyxx, cb2[r14.z + 20].zzzz
      mad r15.xy, r15.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r14.z, cb2[26].y
      add r15.z, r10.w, r14.z
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r14.z, r15.xyzx, t13.xxxx, s13, r9.w
      sample_l_indexable(texture2darray)(float,float,float,float) r15.x, r15.xyzx, t31.xyzw, s0, l(0.000000)
      add r14.z, r14.z, r15.x
      add_sat r14.z, r14.z, l(-1.000000)
      mul r15.x, r14.z, r14.z
      mul r13.y, r14.z, r15.x
    endif 
    if_nz cb2[58].y
      mov r15.x, -r8.x
      ftou r14.z, r10.w
      add r10.w, r10.w, l(1.000000)
      min r10.w, r10.w, l(2.000000)
      ftou r10.w, r10.w
      add r14.w, -r14.w, l(1.000000)
      mul r14.w, r14.w, l(28.000000)
      ftou r14.w, r14.w
      add r16.xy, r14.xyxx, -cb2[r14.z + 20].xyxx
      mul r16.xy, r16.xyxx, cb2[r14.z + 20].zzzz
      mad r16.xy, r16.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      add r14.xy, r14.xyxx, -cb2[r10.w + 20].xyxx
      mul r14.xy, r14.xyxx, cb2[r10.w + 20].zzzz
      mad r14.xy, r14.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      mov r15.y, r9.x
      mov r15.z, r8.x
      mov r15.w, l(0)
      mov r16.z, l(0)
      loop 
        uge r16.w, r16.z, l(8)
        breakc_nz r16.w
        ult r16.w, r14.w, r16.z
        movc r17.xy, r16.wwww, r14.xyxx, r16.xyxx
        movc r17.z, r16.w, cb2[r10.w + 20].w, cb2[r14.z + 20].w
        movc r16.w, r16.w, r10.w, r14.z
        dp2 r18.x, icb[r16.z + 0].yxyy, r15.xyxx
        dp2 r18.y, icb[r16.z + 0].yxyy, r15.yzyy
        mad r17.xy, r18.xyxx, r17.zzzz, r17.xyxx
        iadd r16.w, r16.w, cb2[26].y
        utof r17.z, r16.w
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r16.w, r17.xyzx, t13.xxxx, s13, r9.w
        sample_l_indexable(texture2darray)(float,float,float,float) r17.x, r17.xyzx, t31.xyzw, s0, l(0.000000)
        add r16.w, r16.w, r17.x
        add_sat r16.w, r16.w, l(-1.000000)
        mad r15.w, r16.w, l(0.125000), r15.w
        iadd r16.z, r16.z, l(1)
      endloop 
      mul r9.w, r15.w, r15.w
      mul r13.y, r15.w, r9.w
    endif 
  endif 
endif 
and r9.w, cb2[53].x, l(0x0000ffff)
if_nz r9.w
  iadd r9.w, r9.w, cb2[0].x
  iadd r9.w, r9.w, l(-1)
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r10.w, r9.w, l(52), t12.xxxx
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.xyzw, r9.w, l(68), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r9.w, l(84), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r9.w, l(132), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r9.w, l(148), t12.xyzw
  mad r18.x, |r6.w|, l(-0.200000), l(0.400000)
  lt r18.y, r6.w, l(0.000000)
  movc r18.x, r18.y, -r18.x, r18.x
  mad r18.xyz, r2.xyzx, r18.xxxx, v5.xyzx
  mov r18.w, l(1.000000)
  dp4 r14.x, r14.xyzw, r18.xyzw
  dp4 r14.y, r15.xyzw, r18.xyzw
  mad r14.xy, r14.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  add r14.xy, r17.zwzz, r14.xyxx
  mul r14.xy, r17.xyxx, r14.xyxx
  div r14.zw, r10.wwww, r16.xxxz
  add r15.xy, -r14.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
  ge r15.xy, r14.xyxx, r15.xyxx
  ge r14.zw, r14.zzzw, r14.xxxy
  or r14.zw, r14.zzzw, r15.xxxy
  or r14.z, r14.w, r14.z
  if_z r14.z
    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.z, r9.w, l(28), t12.xxxx
    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r9.w, l(100), t12.xyzw
    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xy, r9.w, l(164), t12.xyxx
    dp4 r9.w, r15.xyzw, r18.xyzw
    mov_sat r14.xy, r14.xyxx
    mad r15.xy, r14.xyxx, r16.xzxx, r16.ywyy
    add r9.w, r17.x, r9.w
    div r9.w, r9.w, r17.y
    max r9.w, r9.w, l(0.00006104)
    and r14.x, r14.z, l(0x0000ffff)
    if_nz cb2[58].y
      mov r16.x, -r8.x
      utof r17.z, r14.x
      mov r16.y, r9.x
      mov r16.z, r8.x
      mov r14.yz, l(0,0,0,0)
      loop 
        ige r14.w, r14.z, l(8)
        breakc_nz r14.w
        dp2 r18.x, icb[r14.z + 0].yxyy, r16.xyxx
        dp2 r18.y, icb[r14.z + 0].yxyy, r16.yzyy
        mad r17.xy, r18.xyxx, r10.wwww, r15.xyxx
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r14.w, r17.xyzx, t9.xxxx, s13, r9.w
        mad r14.y, r14.w, l(0.125000), r14.y
        iadd r14.z, r14.z, l(1)
      endloop 
    else 
      utof r15.z, r14.x
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r14.y, r15.xyzx, t9.xxxx, s13, r9.w
    endif 
    mul r9.w, r14.y, r14.y
    mul r9.w, r14.y, r9.w
  else 
    mov r9.w, l(1.000000)
  endif 
  mul r13.y, r9.w, r13.y
endif 
lt r9.w, l(0.000000), |r6.w|
if_nz r9.w
  lt r9.w, l(0.000000), r13.y
  if_nz r9.w
    mul r9.w, l(0.16666667), cb2[18].w
    if_nz cb2[23].x
      mov r12.w, l(1.000000)
      dp4 r10.w, cb2[24].xyzw, r12.xyzw
      dp4 r12.w, cb2[25].xyzw, r12.xyzw
      frc r14.x, r10.w
      frc r14.y, r12.w
      iadd r10.w, l(-1), cb2[23].x
      utof r14.z, r10.w
      sample_l_indexable(texture2darray)(float,float,float,float) r14.xyz, r14.xyzx, t20.xyzw, s2, l(0.000000)
      add r14.xyz, r14.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
      mad r14.xyz, cb2[23].yyyy, r14.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      mul r14.xyz, r14.xyzx, cb2[18].xyzx
    else 
      mov r14.xyz, cb2[18].xyzx
    endif 
    mad r10.w, -r5.w, l(0.500000), l(1.000000)
    mad r10.w, -|r6.w|, r10.w, l(1.000000)
    mul r10.w, r10.w, r10.w
    mad r10.w, -r10.w, l(0.620000), l(0.620000)
    add r10.w, -|r6.w|, r10.w
    mad r10.w, r10.w, l(0.81649661), |r6.w|
    lt r12.w, l(0.000000), r6.w
    mov_sat r6.w, r6.w
    mad r15.xyz, -v5.xyzx, r4.wwww, cb2[17].xyzx
    dp3 r4.w, r15.xyzx, r15.xyzx
    rsq r4.w, r4.w
    mul r15.xyz, r4.wwww, r15.xyzx
    dp3 r4.w, r2.xyzx, r15.xyzx
    dp3 r14.w, r15.xyzx, r6.xyzx
    mul r15.w, r1.y, r1.x
    sqrt r15.w, r15.w
    dp3 r16.x, r15.xyzx, r4.xyzx
    dp3 r15.x, r15.xyzx, r5.xyzx
    mul r15.y, r16.x, r16.x
    mul r15.x, r15.x, r15.x
    div r15.xy, r15.xyxx, r1.yxyy
    add r15.x, r15.x, r15.y
    mad r4.w, |r4.w|, |r4.w|, r15.x
    mad r15.x, r6.w, r10.y, r10.z
    mul r4.w, r4.w, r4.w
    mul r4.w, r15.w, r4.w
    mul r4.w, r15.x, r4.w
    rcp r4.w, r4.w
    mul r6.w, r9.w, r6.w
    mul r4.w, r4.w, r6.w
    add_sat r6.w, -r14.w, l(1.000000)
    mul r9.w, r6.w, r6.w
    mul r9.w, r9.w, r9.w
    mul r6.w, r6.w, r9.w
    mul r6.w, r4.w, r6.w
    and r9.w, r10.w, r12.w
    movc r15.xyz, r12.wwww, l(0,0,0,0), r10.wwww
    and r16.xy, r6.wwww, r12.wwww
    and r17.xyz, r4.wwww, r12.wwww
    dp3 r4.w, r14.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
    mul r4.w, r4.w, r13.y
    mov r13.x, l(1.000000)
    mov r6.w, cb2[17].x
    mov r16.zw, cb2[17].yyyz
    mov r18.xy, r9.wwww
    mov r10.w, r16.y
  else 
    mov r13.xy, l(0,0,0,0)
    mov r4.w, l(0)
    mov r14.xyz, l(0,0,0,0)
    mov r6.w, l(0)
    mov r18.xy, l(0,0,0,0)
    mov r15.xyz, l(0,0,0,0)
    mov r9.w, l(0)
    mov r17.xyz, l(0,0,0,0)
    mov r10.w, l(0)
    mov r16.xyzw, l(0,0,0,0)
  endif 
else 
  mov r13.xy, l(0,0,0,0)
  mov r4.w, l(0)
  mov r14.xyz, l(0,0,0,0)
  mov r6.w, l(0)
  mov r18.xy, l(0,0,0,0)
  mov r15.xyz, l(0,0,0,0)
  mov r9.w, l(0)
  mov r17.xyz, l(0,0,0,0)
  mov r10.w, l(0)
  mov r16.xyzw, l(0,0,0,0)
endif 
mul r3.w, r3.w, l(0.00781250)
min r3.w, r3.w, l(15.000000)
ftou r3.w, r3.w
ushr r19.xy, r1.zwzz, l(6, 6, 0, 0)
ishl r19.z, r3.w, l(4)
mov r20.x, -r8.x
mad r1.z, -r5.w, l(0.500000), l(1.000000)
mul r1.w, r1.y, r1.x
sqrt r1.w, r1.w
mov r21.xy, l(0,0,0,0)
mov r22.w, l(0)
mov r23.xyz, v5.xyzx
mov r23.w, l(1.000000)
mov r24.w, l(1.000000)
mov r20.z, r8.x
mov r25.z, l(1.000000)
mov r26.w, l(1.000000)
mov r20.yw, r9.xxxx
mov r8.y, r20.w
mov r27.w, l(1.000000)
mov r9.y, r20.x
mov r9.z, r8.x
mov r28.x, r9.x
mov r28.y, r20.x
mov r28.z, r8.x
mov r29.xyz, l(0,0,0,0)
mov r30.xyz, l(0,0,0,0)
mov r31.xyz, l(0,0,0,0)
mov r32.xyz, l(0,0,0,0)
mov r33.xyz, r14.xyzx
mov r34.x, r6.w
mov r34.yz, r16.zzwz
mov r35.xy, r18.xyxx
mov r35.z, r9.w
mov r36.xyz, r15.xyzx
mov r37.xyz, r17.xyzx
mov r38.x, r10.w
mov r38.yz, r16.xxyx
mov r39.x, cb2[58].y
mov r39.y, r4.w
mov r18.zw, r13.xxxy
mov r3.w, l(0)
loop 
  uge r5.w, r3.w, cb2[0].x
  breakc_nz r5.w
  ushr r21.z, r3.w, l(5)
  iadd r22.xyz, r19.xyzx, r21.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r5.w, r22.xyzw, t6.yzwx
  mov r22.xyz, r29.xyzx
  mov r40.xyz, r30.xyzx
  mov r41.xyz, r31.xyzx
  mov r42.xyz, r32.xyzx
  mov r43.xyz, r33.xyzx
  mov r44.xyz, r34.xyzx
  mov r45.xyz, r35.xyzx
  mov r46.xyz, r37.xyzx
  mov r47.xyz, r38.xyzx
  mov r21.zw, r18.zzzw
  mov r12.w, r39.x
  mov r14.w, r39.y
  mov r48.xyz, r36.xyzx
  mov r15.w, r5.w
  loop 
    breakc_z r15.w
    firstbit_lo r17.w, r15.w
    ishl r19.w, l(1), r17.w
    and r25.w, r15.w, r19.w
    if_nz r25.w
      xor r15.w, r15.w, r19.w
      iadd r17.w, r3.w, r17.w
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r49.xyzw, r17.w, l(0), t12.wxyz
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r50.xyzw, r17.w, l(16), t12.zxyw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r51.xyzw, r17.w, l(32), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r52.xyzw, r17.w, l(48), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r53.xyzw, r17.w, l(64), t12.yzwx
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r54.xyzw, r17.w, l(80), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r55.xyzw, r17.w, l(96), t12.yzwx
      ubfe r19.w, l(3), l(24), r50.w
      switch r19.w
        case l(4)
        lt r19.w, l(0.000000), r55.x
        mov r56.xy, r54.zwzz
        mov r56.z, r55.w
        mad r57.xyz, -r56.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r49.yzwy
        add r58.xyz, r57.xyzx, -v5.xyzx
        dp3 r25.w, r56.xyzx, r58.xyzx
        div_sat r28.w, -r25.w, r55.x
        mad r59.xyz, r28.wwww, r56.xyzx, r57.xyzx
        movc r59.xyz, r19.wwww, r59.xyzx, r49.yzwy
        add r59.xyz, r59.xyzx, -v5.xyzx
        dp3 r29.w, r59.xyzx, r59.xyzx
        rsq r30.w, r29.w
        mul r59.xyz, r30.wwww, r59.xyzx
        dp3 r30.w, r2.xyzx, r59.xyzx
        lt r31.w, l(0.000000), |r30.w|
        if_nz r31.w
          sqrt r31.w, r29.w
          mul r32.w, r52.x, r52.x
          div r29.w, r32.w, r29.w
          min r29.w, r29.w, l(1.000000)
          mad_sat r39.zw, r31.wwww, r51.xxxz, r51.yyyw
          mul r60.xy, r39.zwzz, r39.zwzz
          mad r39.zw, r39.zzzw, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
          mul r39.zw, r39.zzzw, r60.xxxy
          mul r29.w, r29.w, r39.z
          mul r60.x, r39.w, r29.w
          lt r29.w, l(0.000000), r60.x
          if_nz r29.w
            ubfe r39.zw, l(0, 0, 3, 4), l(0, 0, 27, 20), r50.wwww
            ine r29.w, r39.z, l(1)
            if_nz r29.w
              mad r29.w, |r30.w|, l(-0.200000), l(0.400000)
              lt r31.w, r30.w, l(0.000000)
              movc r29.w, r31.w, -r29.w, r29.w
              mad r61.xyz, r2.xyzx, r29.wwww, v5.xyzx
              add r61.xyz, -r53.xyzx, r61.xyzx
              max r29.w, |r61.z|, |r61.y|
              max r29.w, r29.w, |r61.x|
              div r29.w, r54.x, r29.w
              add r29.w, r54.y, r29.w
              dp3 r31.w, r61.xyzx, r61.xyzx
              rsq r31.w, r31.w
              max r29.w, r29.w, l(0.00006104)
              and r32.w, r50.w, l(0x0000ffff)
              utof r62.w, r32.w
              mov r60.y, l(0)
              mov r32.w, l(0)
              loop 
                ige r33.w, r32.w, l(8)
                breakc_nz r33.w
                dp2 r63.y, icb[r32.w + 0].yxyy, r20.xyxx
                dp2 r63.z, icb[r32.w + 0].yxyy, r20.yzyy
                mul r63.yz, r52.yyyy, r63.yyzy
                mul r63.x, r10.x, r63.y
                mul r63.w, r7.x, r63.y
                mad r62.xyz, r61.xyzx, r31.wwww, r63.xzwx
                sample_c_lz_indexable(texturecubearray)(float,float,float,float) r33.w, r62.xyzw, t10.xxxx, s13, r29.w
                mad r60.y, r33.w, l(0.125000), r60.y
                iadd r32.w, r32.w, l(1)
              endloop 
            else 
              mov r60.y, l(1.000000)
            endif 
            if_nz r39.w
              iadd r29.w, r39.w, cb2[0].x
              iadd r29.w, r29.w, l(-1)
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.w, r29.w, l(52), t12.xxxx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r61.xyzw, r29.w, l(100), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r62.xyzw, r29.w, l(116), t12.xyzw
              mad r32.w, |r30.w|, l(-0.200000), l(0.400000)
              lt r33.w, r30.w, l(0.000000)
              movc r32.w, r33.w, -r32.w, r32.w
              mad r24.xyz, r2.xyzx, r32.wwww, v5.xyzx
              dp4 r32.w, r61.xyzw, r24.xyzw
              dp4 r33.w, r62.xyzw, r24.xyzw
              lt r34.w, r33.w, r32.w
              if_z r34.w
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r61.xyzw, r29.w, l(68), t12.xyzw
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r62.xyzw, r29.w, l(84), t12.xyzw
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r63.xyzw, r29.w, l(132), t12.xyzw
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r64.xyzw, r29.w, l(148), t12.xyzw
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.zw, r29.w, l(164), t12.xxxy
                dp4 r61.x, r61.xyzw, r24.xyzw
                dp4 r61.y, r62.xyzw, r24.xyzw
                div r24.xy, r61.xyxx, r33.wwww
                mad r24.xy, r24.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                add r24.xy, r64.zwzz, r24.xyxx
                mul r24.xy, r64.xyxx, r24.xyxx
                div r60.zw, r31.wwww, r63.xxxz
                add r61.xy, -r60.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
                ge r61.xy, r24.xyxx, r61.xyxx
                ge r60.zw, r60.zzzw, r24.xxxy
                or r60.zw, r60.zzzw, r61.xxxy
                or r24.z, r60.w, r60.z
                mov_sat r24.xy, r24.xyxx
                mad r61.xy, r24.xyxx, r63.xzxx, r63.ywyy
                mul r24.x, r33.w, r39.w
                mad r24.y, r39.z, r33.w, r32.w
                div r24.x, r24.y, r24.x
              else 
                mov r24.z, l(-1)
              endif 
              or r24.y, r34.w, r24.z
              if_z r24.y
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r24.y, r29.w, l(28), t12.xxxx
                max r24.x, r24.x, l(0.00006104)
                and r24.y, r24.y, l(0x0000ffff)
                if_nz r12.w
                  utof r62.z, r24.y
                  mov r24.z, l(0)
                  mov r29.w, l(0)
                  loop 
                    ige r32.w, r29.w, l(8)
                    breakc_nz r32.w
                    dp2 r63.x, icb[r29.w + 0].yxyy, r20.xwxx
                    dp2 r63.y, icb[r29.w + 0].xyxx, r8.xyxx
                    mad r62.xy, r63.xyxx, r31.wwww, r61.xyxx
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r32.w, r62.xyzx, t9.xxxx, s13, r24.x
                    mad r24.z, r32.w, l(0.125000), r24.z
                    iadd r29.w, r29.w, l(1)
                  endloop 
                else 
                  utof r61.z, r24.y
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.z, r61.xyzx, t9.xxxx, s13, r24.x
                endif 
                mul r24.x, r24.z, r24.z
                mul r24.x, r24.z, r24.x
              else 
                mov r24.x, l(1.000000)
              endif 
              mul r60.y, r24.x, r60.y
            endif 
            mul r24.x, r60.y, r60.x
            lt r24.y, l(0.000000), r24.x
            if_nz r24.y
              mul r24.y, r50.x, l(0.16666667)
              dp3 r29.w, r56.xyzx, r11.xyzx
              dp3 r31.w, r11.xyzx, r58.xyzx
              mad r32.w, -r29.w, r29.w, r55.x
              mad r25.w, r29.w, r31.w, -r25.w
              div_sat r25.w, r25.w, r32.w
              div r29.w, r32.w, r55.x
              mul r29.w, r29.w, l(10.000000)
              min r29.w, r29.w, l(1.000000)
              add r25.w, -r28.w, r25.w
              mad r25.w, r29.w, r25.w, r28.w
              mad r56.xyz, r25.wwww, r56.xyzx, r57.xyzx
              movc r56.xyz, r19.wwww, r56.xyzx, r49.yzwy
              add r56.xyz, r56.xyzx, -v5.xyzx
              dp3 r19.w, r56.xyzx, r56.xyzx
              rsq r19.w, r19.w
              mul r57.xyz, r19.wwww, r56.xyzx
              mad r25.w, -|r30.w|, r1.z, l(1.000000)
              mul r25.w, r25.w, r25.w
              mad r25.w, -r25.w, l(0.620000), l(0.620000)
              add r25.w, -|r30.w|, r25.w
              mad r25.w, r25.w, l(0.81649661), |r30.w|
              lt r28.w, l(0.000000), r30.w
              dp3_sat r29.w, r2.xyzx, r57.xyzx
              mad r56.xyz, r56.xyzx, r19.wwww, r6.xyzx
              dp3 r19.w, r56.xyzx, r56.xyzx
              rsq r19.w, r19.w
              mul r56.xyz, r19.wwww, r56.xyzx
              dp3 r19.w, r2.xyzx, r56.xyzx
              dp3 r30.w, r56.xyzx, r6.xyzx
              dp3 r31.w, r56.xyzx, r4.xyzx
              dp3 r32.w, r56.xyzx, r5.xyzx
              mul r31.w, r31.w, r31.w
              div r31.w, r31.w, r1.x
              mul r32.w, r32.w, r32.w
              div r32.w, r32.w, r1.y
              add r31.w, r31.w, r32.w
              mad r19.w, |r19.w|, |r19.w|, r31.w
              mad r31.w, r29.w, r10.y, r10.z
              mul r19.w, r19.w, r19.w
              mul r19.w, r1.w, r19.w
              mul r19.w, r31.w, r19.w
              rcp r19.w, r19.w
              mul r24.y, r24.y, r29.w
              mul r19.w, r19.w, r24.y
              add_sat r24.y, -r30.w, l(1.000000)
              mul r29.w, r24.y, r24.y
              mul r29.w, r29.w, r29.w
              mul r24.y, r24.y, r29.w
              mul r24.y, r19.w, r24.y
              and r56.xyz, r25.wwww, r28.wwww
              movc r25.w, r28.w, l(0), r25.w
              and r57.xyz, r24.yyyy, r28.wwww
              and r19.w, r19.w, r28.w
              mov r50.x, r49.x
              dp3 r24.y, r50.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
              mul r24.y, r24.y, r24.x
              lt r28.w, r14.w, r24.y
              if_nz r28.w
                mul r28.w, r21.w, r21.z
                mul r58.xyz, r43.xyzx, r28.wwww
                mad r22.xyz, r58.xyzx, r45.xyzx, r22.xyzx
                mad r40.xyz, r58.xyzx, r48.xyzx, r40.xyzx
                mad r42.xyz, r58.xyzx, r46.xyzx, r42.xyzx
                mad r41.xyz, r58.xyzx, r47.xyzx, r41.xyzx
                mov r46.xyz, r19.wwww
                mov r14.w, r24.y
                mov r48.xyz, r25.wwww
                mov r43.xyz, r50.xyzx
                mov r44.xyz, r59.xyzx
                mov r45.xyz, r56.xyzx
                mov r47.xyz, r57.xyzx
                mov r21.zw, r60.xxxy
              else 
                mul r56.xyw, r24.xxxx, r50.xyxz
                mad r22.xyz, r56.xywx, r56.zzzz, r22.xyzx
                mad r40.xyz, r56.xywx, r25.wwww, r40.xyzx
                mad r42.xyz, r56.xywx, r19.wwww, r42.xyzx
                mad r41.xyz, r56.xywx, r57.xyzx, r41.xyzx
              endif 
            endif 
          endif 
        endif 
        break 
        case l(2)
        mov r56.xy, r52.zwzz
        mov r56.z, r53.w
        add r56.xyz, r56.xyzx, -v5.xyzx
        dp3 r19.w, r56.xyzx, r56.xyzx
        rsq r19.w, r19.w
        mul r57.xyz, r19.wwww, r56.xyzx
        dp3 r24.x, r2.xyzx, r57.xyzx
        lt r24.y, l(0.000000), |r24.x|
        if_nz r24.y
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r58.xyzw, r17.w, l(112), t12.yzwx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r59.xyzw, r17.w, l(128), t12.zxyw
          mov r61.xyz, r58.xyzx
          mov r61.w, r59.y
          dp4 r24.y, r61.xyzw, r23.xyzw
          lt r25.w, r24.y, l(1.000000)
          if_nz r25.w
            mov r60.xzw, l(1.000000,0,1.000000,1.000000)
            mov r62.x, l(0)
          else 
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r63.xyzw, r17.w, l(172), t12.yzwx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r64.xyzw, r17.w, l(188), t12.wxyz
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r65.xyzw, r17.w, l(204), t12.xyzw
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r25.w, r17.w, l(236), t12.xxxx
            add r66.xyz, r49.yzwy, -v5.xyzx
            mul r28.w, r52.x, r52.x
            dp3 r29.w, r66.xyzx, r66.xyzx
            div r28.w, r28.w, r29.w
            min r28.w, r28.w, l(1.000000)
            mad_sat r39.zw, r24.yyyy, r51.xxxz, r51.yyyw
            mul r51.xy, r39.zwzz, r39.zwzz
            mad r39.zw, r39.zzzw, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
            mul r39.zw, r39.zzzw, r51.xxxy
            mul r28.w, r28.w, r39.z
            mul r28.w, r39.w, r28.w
            mov r53.w, r54.x
            dp4 r51.x, r53.xyzw, r23.xyzw
            mov r66.xyz, r54.yzwy
            mov r66.w, r55.w
            dp4 r51.y, r66.xyzw, r23.xyzw
            div r25.xy, r51.xyxx, r24.yyyy
            lt r24.y, r63.w, l(0.00048828)
            if_nz r24.y
              mov r64.y, r65.x
              mad_sat r39.zw, |r25.xxxy|, r64.zzzw, r64.xxxy
              mul r51.xy, r39.zwzz, r39.zwzz
              mad r39.zw, r39.zzzw, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
              mul r39.zw, r39.zzzw, r51.xxxy
              mul r24.y, r39.w, r39.z
            else 
              mov r63.w, r64.y
              mul_sat r51.xyzw, |r25.yyxx|, r63.xyzw
              log r51.xyzw, r51.xyzw
              mul r51.xyzw, r51.xyzw, r64.xxxx
              exp r51.xyzw, r51.xyzw
              add r39.zw, r51.zzzw, r51.xxxy
              log r39.zw, r39.zzzw
              mul r39.zw, r39.zzzw, r65.xxxx
              exp r39.zw, r39.zzzw
              mul r29.w, r39.z, r64.z
              mad r30.w, r64.w, r39.w, l(-1.000000)
              mad r29.w, r64.w, r39.w, -r29.w
              div_sat r29.w, r30.w, r29.w
              mul r30.w, r29.w, r29.w
              mad r29.w, r29.w, l(-2.000000), l(3.000000)
              mul r24.y, r29.w, r30.w
            endif 
            mul r62.x, r24.y, r28.w
            and r24.y, r25.w, l(255)
            if_nz r24.y
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r51.xyz, r17.w, l(220), t12.xyzx
              dp3 r25.w, r65.yzwy, r25.xyzx
              dp3 r25.x, r51.xyzx, r25.xyzx
              frc r51.xy, r25.wxww
              iadd r24.y, r24.y, l(-1)
              utof r51.z, r24.y
              sample_l_indexable(texture2darray)(float,float,float,float) r60.xzw, r51.xyzx, t20.xwyz, s2, l(0.000000)
            else 
              mov r60.xzw, l(1.000000,0,1.000000,1.000000)
            endif 
          endif 
          mov r49.yz, r50.yyzy
          mul r25.xyw, r60.xzxw, r49.xyxz
          lt r24.y, l(0.000000), r62.x
          if_nz r24.y
            ubfe r39.zw, l(0, 0, 3, 4), l(0, 0, 27, 20), r50.wwww
            ine r24.y, r39.z, l(1)
            if_nz r24.y
              mad r24.y, |r24.x|, l(-0.200000), l(0.400000)
              lt r28.w, r24.x, l(0.000000)
              movc r24.y, r28.w, -r24.y, r24.y
              mad r26.xyz, r2.xyzx, r24.yyyy, v5.xyzx
              mov r58.xyz, r55.xyzx
              dp4 r24.y, r58.xyzw, r26.xyzw
              dp4 r28.w, r61.xyzw, r26.xyzw
              ge r29.w, r28.w, r24.y
              if_nz r29.w
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r59.y, r17.w, l(144), t12.xxxx
                mov r53.w, r54.x
                dp4 r49.x, r53.xyzw, r26.xyzw
                mov r55.xyz, r54.yzwy
                dp4 r49.y, r55.xyzw, r26.xyzw
                div r26.xy, r49.xyxx, r28.wwww
                mad_sat r26.xy, r26.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                mad r26.xy, r26.xyxx, r59.zwzz, r59.xyxx
                div r17.w, r24.y, r28.w
                max r17.w, r17.w, l(0.00006104)
                and r24.y, r50.w, l(0x0000ffff)
                if_nz r12.w
                  utof r49.z, r24.y
                  mov r28.w, l(0)
                  mov r29.w, l(0)
                  loop 
                    ige r30.w, r29.w, l(8)
                    breakc_nz r30.w
                    dp2 r51.x, icb[r29.w + 0].xyxx, r9.xyxx
                    dp2 r51.y, icb[r29.w + 0].yxyy, r9.xzxx
                    mad r49.xy, r51.xyxx, r52.yyyy, r26.xyxx
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r30.w, r49.xyzx, t9.xxxx, s13, r17.w
                    mad r28.w, r30.w, l(0.125000), r28.w
                    iadd r29.w, r29.w, l(1)
                  endloop 
                else 
                  utof r26.z, r24.y
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r28.w, r26.xyzx, t9.xxxx, s13, r17.w
                endif 
                mul r17.w, r28.w, r28.w
                mul r62.y, r28.w, r17.w
              else 
                mov r62.y, l(1.000000)
              endif 
            else 
              mov r62.y, l(1.000000)
            endif 
            if_nz r39.w
              iadd r17.w, r39.w, cb2[0].x
              iadd r17.w, r17.w, l(-1)
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r24.y, r17.w, l(52), t12.xxxx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r49.xyzw, r17.w, l(68), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r51.xyzw, r17.w, l(84), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r52.xyzw, r17.w, l(100), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r53.xyzw, r17.w, l(116), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r54.xyzw, r17.w, l(132), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r55.xyzw, r17.w, l(148), t12.xyzw
              mad r26.x, |r24.x|, l(-0.200000), l(0.400000)
              lt r26.y, r24.x, l(0.000000)
              movc r26.x, r26.y, -r26.x, r26.x
              mad r27.xyz, r2.xyzx, r26.xxxx, v5.xyzx
              dp4 r26.x, r49.xyzw, r27.xyzw
              dp4 r26.y, r51.xyzw, r27.xyzw
              dp4 r26.z, r52.xyzw, r27.xyzw
              dp4 r27.x, r53.xyzw, r27.xyzw
              lt r27.y, r27.x, r26.z
              div r26.xy, r26.xyxx, r27.xxxx
              mad r26.xy, r26.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
              add r26.xy, r55.zwzz, r26.xyxx
              mul r26.xy, r55.xyxx, r26.xyxx
              div r39.zw, r24.yyyy, r54.xxxz
              add r49.xy, -r39.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
              ge r49.xy, r26.xyxx, r49.xyxx
              ge r39.zw, r39.zzzw, r26.xxxy
              or r39.zw, r39.zzzw, r49.xxxy
              or r27.z, r39.w, r39.z
              or r27.y, r27.y, r27.z
              if_z r27.y
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r27.y, r17.w, l(28), t12.xxxx
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.zw, r17.w, l(164), t12.xxxy
                mov_sat r26.xy, r26.xyxx
                mad r49.xy, r26.xyxx, r54.xzxx, r54.ywyy
                mul r17.w, r27.x, r39.w
                mad r26.x, r39.z, r27.x, r26.z
                div r17.w, r26.x, r17.w
                max r17.w, r17.w, l(0.00006104)
                and r26.x, r27.y, l(0x0000ffff)
                if_nz r12.w
                  utof r27.z, r26.x
                  mov r26.yz, l(0,0,0,0)
                  loop 
                    ige r29.w, r26.z, l(8)
                    breakc_nz r29.w
                    dp2 r51.x, icb[r26.z + 0].xyxx, r28.xyxx
                    dp2 r51.y, icb[r26.z + 0].yxyy, r28.xzxx
                    mad r27.xy, r51.xyxx, r24.yyyy, r49.xyxx
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r27.x, r27.xyzx, t9.xxxx, s13, r17.w
                    mad r26.y, r27.x, l(0.125000), r26.y
                    iadd r26.z, r26.z, l(1)
                  endloop 
                else 
                  utof r49.z, r26.x
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r26.y, r49.xyzx, t9.xxxx, s13, r17.w
                endif 
                mul r17.w, r26.y, r26.y
                mul r17.w, r26.y, r17.w
              else 
                mov r17.w, l(1.000000)
              endif 
              mul r62.y, r17.w, r62.y
            endif 
            mul r17.w, r62.y, r62.x
            lt r24.y, l(0.000000), r17.w
            if_nz r24.y
              mul r24.y, r50.x, l(0.16666667)
              mad r26.x, -|r24.x|, r1.z, l(1.000000)
              mul r26.x, r26.x, r26.x
              mad r26.x, -r26.x, l(0.620000), l(0.620000)
              add r26.x, -|r24.x|, r26.x
              mad r26.x, r26.x, l(0.81649661), |r24.x|
              lt r26.z, l(0.000000), r24.x
              mov_sat r24.x, r24.x
              mad r27.xyz, r56.xyzx, r19.wwww, r6.xyzx
              dp3 r19.w, r27.xyzx, r27.xyzx
              rsq r19.w, r19.w
              mul r27.xyz, r19.wwww, r27.xyzx
              dp3 r19.w, r2.xyzx, r27.xyzx
              dp3 r29.w, r27.xyzx, r6.xyzx
              dp3 r30.w, r27.xyzx, r4.xyzx
              dp3 r27.x, r27.xyzx, r5.xyzx
              mul r27.y, r30.w, r30.w
              mul r27.x, r27.x, r27.x
              div r27.xy, r27.xyxx, r1.yxyy
              add r27.x, r27.x, r27.y
              mad r19.w, |r19.w|, |r19.w|, r27.x
              mad r27.x, r24.x, r10.y, r10.z
              mul r19.w, r19.w, r19.w
              mul r19.w, r1.w, r19.w
              mul r19.w, r27.x, r19.w
              rcp r19.w, r19.w
              mul r24.x, r24.y, r24.x
              mul r19.w, r19.w, r24.x
              add_sat r24.x, -r29.w, l(1.000000)
              mul r24.y, r24.x, r24.x
              mul r24.y, r24.y, r24.y
              mul r24.x, r24.y, r24.x
              mul r24.x, r19.w, r24.x
              and r27.xyz, r26.xxxx, r26.zzzz
              movc r24.y, r26.z, l(0), r26.x
              and r49.xyz, r24.xxxx, r26.zzzz
              and r19.w, r19.w, r26.z
              dp3 r24.x, r25.xywx, l(0.212600, 0.715200, 0.072200, 0.000000)
              mul r24.x, r17.w, r24.x
              lt r26.x, r14.w, r24.x
              if_nz r26.x
                mul r26.x, r21.w, r21.z
                mul r50.xyz, r43.xyzx, r26.xxxx
                mad r22.xyz, r50.xyzx, r45.xyzx, r22.xyzx
                mad r40.xyz, r50.xyzx, r48.xyzx, r40.xyzx
                mad r42.xyz, r50.xyzx, r46.xyzx, r42.xyzx
                mad r41.xyz, r50.xyzx, r47.xyzx, r41.xyzx
                mov r46.xyz, r19.wwww
                mov r14.w, r24.x
                mov r48.xyz, r24.yyyy
                mov r43.xyz, r25.xywx
                mov r44.xyz, r57.xyzx
                mov r45.xyz, r27.xyzx
                mov r47.xyz, r49.xyzx
                mov r21.zw, r62.xxxy
              else 
                mul r25.xyw, r25.xyxw, r17.wwww
                mad r22.xyz, r25.xywx, r27.zzzz, r22.xyzx
                mad r40.xyz, r25.xywx, r24.yyyy, r40.xyzx
                mad r42.xyz, r25.xywx, r19.wwww, r42.xyzx
                mad r41.xyz, r25.xywx, r49.xyzx, r41.xyzx
              endif 
            endif 
          endif 
        endif 
        break 
        default 
        break 
      endswitch 
    endif 
  endloop 
  mov r29.xyz, r22.xyzx
  mov r30.xyz, r40.xyzx
  mov r31.xyz, r41.xyzx
  mov r32.xyz, r42.xyzx
  mov r33.xyz, r43.xyzx
  mov r34.xyz, r44.xyzx
  mov r35.xyz, r45.xyzx
  mov r37.xyz, r46.xyzx
  mov r38.xyz, r47.xyzx
  mov r18.zw, r21.zzzw
  mov r39.y, r14.w
  mov r36.xyz, r48.xyzx
  iadd r3.w, r3.w, l(32)
endloop 
mov r1.z, l(0)
mul r1.xy, r34.yxyy, l(1.000000, -1.000000, 0.000000, 0.000000)
mul r4.xyz, r1.yzxy, r34.zxyz
mad r4.xyz, r34.yzxy, r1.zxyz, -r4.xyzx
mul r5.xyz, r12.yyyy, cb1[9].xywx
mad r5.xyz, r12.xxxx, cb1[8].xywx, r5.xyzx
mad r5.xyz, r12.zzzz, cb1[10].xywx, r5.xyzx
add r5.xyz, r7.yzwy, r5.xyzx
rcp r9.z, r5.z
mul r5.xy, r5.xyxx, r9.zzzz
mad r9.xy, r5.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
mad r5.xyw, r34.xyxz, l(2.400000, 2.400000, 0.000000, 2.400000), r12.xyxz
dp2 r1.w, v0.xyxx, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r1.w, r1.w
mul r1.w, r1.w, l(52.982918)
frc r1.w, r1.w
mul r3.w, r1.w, l(3.141600)
mad r3.w, cb1[70].w, l(0.500000), r3.w
sincos r7.x, r8.x, r3.w
mul r10.xyz, r4.xyzx, r7.xxxx
mad r10.xyz, r8.xxxx, r1.xyzx, r10.xyzx
mad r10.xyz, r10.xyzx, l(0.120000, 0.120000, 0.120000, 0.000000), r5.xywx
mul r12.xyz, r10.yyyy, cb1[9].xywx
mad r10.xyw, r10.xxxx, cb1[8].xyxw, r12.xyxz
mad r10.xyz, r10.zzzz, cb1[10].xywx, r10.xywx
add r10.xyz, r7.yzwy, r10.xyzx
mul r8.xy, r10.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000)
rcp r10.z, r10.z
mad r10.xy, r8.xyxx, r10.zzzz, l(0.500000, 0.500000, 0.000000, 0.000000)
mov r12.xyz, -r9.xyzx
add r10.xyz, r10.xyzx, r12.xyzx
add r3.w, r3.w, l(3.141600)
sincos r7.x, r8.x, r3.w
mul r4.xyz, r4.xyzx, r7.xxxx
mad r1.xyz, r8.xxxx, r1.xyzx, r4.xyzx
mad r1.xyz, r1.xyzx, l(0.120000, 0.120000, 0.120000, 0.000000), r5.xywx
mul r4.xyz, r1.yyyy, cb1[9].xywx
mad r4.xyz, r1.xxxx, cb1[8].xywx, r4.xyzx
mad r1.xyz, r1.zzzz, cb1[10].xywx, r4.xyzx
add r1.xyz, r7.yzwy, r1.xyzx
mul r1.xy, r1.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000)
rcp r4.z, r1.z
mad r4.xy, r1.xyxx, r4.zzzz, r12.xyxx
mov r12.w, l(0.500000)
add r1.xyz, r12.wwzw, r4.xyzx
dp2 r3.w, cb1[44].zwzz, cb1[44].zwzz
sqrt r3.w, r3.w
dp2 r4.x, r10.xyxx, r10.xyxx
sqrt r4.x, r4.x
rcp r4.x, r4.x
mul r3.w, r3.w, r4.x
mad r4.xy, r1.wwww, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.33333334, 1.000000, 0.000000, 0.000000)
mul r4.xy, r4.xyxx, l(0.11764706, 0.11764706, 0.000000, 0.000000)
mul r4.xy, r4.xyxx, r4.xyxx
mov x1[0].x, r4.x
mad r5.xyw, r10.xyxz, r4.xxxx, r9.xyxz
lt r4.zw, r3.wwww, r4.xxxy
mul r5.xy, r5.xyxx, cb1[44].xyxx
ftoi r7.xy, r5.xyxx
mov r7.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r5.x, r7.xyzw, t0.xyzw
ge r5.y, r5.x, l(0.984375)
mul r6.w, r5.x, l(1.01587307)
mad r5.x, r5.x, l(64.000000), l(-63.000000)
movc r5.x, r5.y, r5.x, r6.w
max r5.x, r5.x, l(0.00000001)
rcp r5.x, r5.x
mov x2[0].x, r5.x
add r5.y, r5.x, l(0.042000)
mul r5.y, r5.y, r5.w
lt r5.y, l(1.000000), r5.y
and r5.y, r5.y, l(0x3f800000)
movc r4.z, r4.z, r5.y, l(1.000000)
mov x0[0].x, r4.z
mov x1[1].x, r4.y
mad r7.xyz, r1.xyzx, r4.yyyy, r9.xyzx
mul r5.yw, r7.xxxy, cb1[44].xxxy
ftoi r12.xy, r5.ywyy
mov r12.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r5.y, r12.xyzw, t0.yxzw
ge r5.w, r5.y, l(0.984375)
mul r6.w, r5.y, l(1.01587307)
mad r5.y, r5.y, l(64.000000), l(-63.000000)
movc r5.y, r5.w, r5.y, r6.w
max r5.y, r5.y, l(0.00000001)
rcp r5.y, r5.y
mov x2[1].x, r5.y
add r5.w, r5.y, l(0.042000)
mul r5.w, r5.w, r7.z
lt r5.w, l(1.000000), r5.w
and r5.w, r5.w, l(0x3f800000)
movc r4.w, r4.w, r5.w, l(1.000000)
mov x0[1].x, r4.w
add r5.w, r4.w, r4.z
ne r5.w, r5.w, l(0.000000)
if_nz r5.w
  mad r7.xy, r1.wwww, l(0.500000, 0.500000, 0.000000, 0.000000), l(1.33333337, 2.000000, 0.000000, 0.000000)
  mul r7.xy, r7.xyxx, l(0.11764706, 0.11764706, 0.000000, 0.000000)
  mad r7.xy, r7.xyxx, r7.xyxx, -r4.xyxx
  mad r4.x, r4.z, r7.x, r4.x
  mov x1[0].x, r4.x
  mad r7.xzw, r10.xxyz, r4.xxxx, r9.xxyz
  lt r4.x, r3.w, r4.x
  mul r7.xz, r7.xxzx, cb1[44].xxyx
  ftoi r12.xy, r7.xzxx
  mov r12.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r5.w, r12.xyzw, t0.yzwx
  ge r6.w, r5.w, l(0.984375)
  mul r7.x, r5.w, l(1.01587307)
  mad r5.w, r5.w, l(64.000000), l(-63.000000)
  movc r5.w, r6.w, r5.w, r7.x
  max r5.w, r5.w, l(0.00000001)
  rcp r5.w, r5.w
  movc r5.x, r4.x, r5.w, r5.x
  mov x2[0].x, r5.x
  add r5.x, r5.w, l(0.042000)
  mul r5.x, r5.x, r7.w
  lt r5.x, l(1.000000), r5.x
  and r5.x, r5.x, l(0x3f800000)
  mul r5.x, r4.z, r5.x
  movc r4.x, r4.x, r5.x, r4.z
  mov x0[0].x, r4.x
  mad r4.y, r4.w, r7.y, r4.y
  mov x1[1].x, r4.y
  mad r7.xyz, r1.xyzx, r4.yyyy, r9.xyzx
  lt r4.y, r3.w, r4.y
  mul r5.xw, r7.xxxy, cb1[44].xxxy
  ftoi r12.xy, r5.xwxx
  mov r12.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.z, r12.xyzw, t0.yzxw
  ge r5.x, r4.z, l(0.984375)
  mul r5.w, r4.z, l(1.01587307)
  mad r4.z, r4.z, l(64.000000), l(-63.000000)
  movc r4.z, r5.x, r4.z, r5.w
  max r4.z, r4.z, l(0.00000001)
  rcp r4.z, r4.z
  movc r5.x, r4.y, r4.z, r5.y
  mov x2[1].x, r5.x
  add r4.z, r4.z, l(0.042000)
  mul r4.z, r4.z, r7.z
  lt r4.z, l(1.000000), r4.z
  and r4.z, r4.z, l(0x3f800000)
  mul r4.z, r4.z, r4.w
  movc r4.y, r4.y, r4.z, r4.w
  mov x0[1].x, r4.y
  add r4.x, r4.y, r4.x
  eq r4.x, r4.x, l(0.000000)
else 
  mov r4.x, l(-1)
endif 
if_z r4.x
  mad r4.xy, r1.wwww, l(0.500000, 0.500000, 0.000000, 0.000000), l(2.33333325, 3.000000, 0.000000, 0.000000)
  mul r4.xy, r4.xyxx, l(0.11764706, 0.11764706, 0.000000, 0.000000)
  mov r4.z, x1[0].x
  mov r4.w, x0[0].x
  mad r4.x, r4.x, r4.x, -r4.z
  mad r4.x, r4.w, r4.x, r4.z
  mov x1[0].x, r4.x
  mad r5.xyw, r10.xyxz, r4.xxxx, r9.xyxz
  lt r4.x, r3.w, r4.x
  mul r5.xy, r5.xyxx, cb1[44].xyxx
  ftoi r7.xy, r5.xyxx
  mov r7.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.z, r7.xyzw, t0.yzxw
  ge r5.x, r4.z, l(0.984375)
  mul r5.y, r4.z, l(1.01587307)
  mad r4.z, r4.z, l(64.000000), l(-63.000000)
  movc r4.z, r5.x, r4.z, r5.y
  max r4.z, r4.z, l(0.00000001)
  rcp r4.z, r4.z
  mov r5.x, x2[0].x
  movc r5.x, r4.x, r4.z, r5.x
  mov x2[0].x, r5.x
  add r4.z, r4.z, l(0.042000)
  mul r4.z, r4.z, r5.w
  lt r4.z, l(1.000000), r4.z
  and r4.z, r4.z, l(0x3f800000)
  mul r4.z, r4.z, r4.w
  movc r4.x, r4.x, r4.z, r4.w
  mov x0[0].x, r4.x
  mov r4.z, x1[1].x
  mov r4.w, x0[1].x
  mad r4.y, r4.y, r4.y, -r4.z
  mad r4.y, r4.w, r4.y, r4.z
  mov x1[1].x, r4.y
  mad r5.xyw, r1.xyxz, r4.yyyy, r9.xyxz
  lt r4.y, r3.w, r4.y
  mul r5.xy, r5.xyxx, cb1[44].xyxx
  ftoi r7.xy, r5.xyxx
  mov r7.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.z, r7.xyzw, t0.yzxw
  ge r5.x, r4.z, l(0.984375)
  mul r5.y, r4.z, l(1.01587307)
  mad r4.z, r4.z, l(64.000000), l(-63.000000)
  movc r4.z, r5.x, r4.z, r5.y
  max r4.z, r4.z, l(0.00000001)
  rcp r4.z, r4.z
  mov r5.x, x2[1].x
  movc r5.x, r4.y, r4.z, r5.x
  mov x2[1].x, r5.x
  add r4.z, r4.z, l(0.042000)
  mul r4.z, r4.z, r5.w
  lt r4.z, l(1.000000), r4.z
  and r4.z, r4.z, l(0x3f800000)
  mul r4.z, r4.z, r4.w
  movc r4.y, r4.y, r4.z, r4.w
  mov x0[1].x, r4.y
  add r4.x, r4.y, r4.x
  eq r4.x, r4.x, l(0.000000)
else 
  mov r4.x, l(-1)
endif 
if_z r4.x
  mad r4.xy, r1.wwww, l(0.500000, 0.500000, 0.000000, 0.000000), l(3.33333325, 4.000000, 0.000000, 0.000000)
  mul r4.xy, r4.xyxx, l(0.11764706, 0.11764706, 0.000000, 0.000000)
  mov r4.z, x1[0].x
  mov r4.w, x0[0].x
  mad r4.x, r4.x, r4.x, -r4.z
  mad r4.x, r4.w, r4.x, r4.z
  mov x1[0].x, r4.x
  mad r5.xyw, r10.xyxz, r4.xxxx, r9.xyxz
  lt r4.x, r3.w, r4.x
  mul r5.xy, r5.xyxx, cb1[44].xyxx
  ftoi r7.xy, r5.xyxx
  mov r7.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.z, r7.xyzw, t0.yzxw
  ge r5.x, r4.z, l(0.984375)
  mul r5.y, r4.z, l(1.01587307)
  mad r4.z, r4.z, l(64.000000), l(-63.000000)
  movc r4.z, r5.x, r4.z, r5.y
  max r4.z, r4.z, l(0.00000001)
  rcp r4.z, r4.z
  mov r5.x, x2[0].x
  movc r5.x, r4.x, r4.z, r5.x
  mov x2[0].x, r5.x
  add r4.z, r4.z, l(0.042000)
  mul r4.z, r4.z, r5.w
  lt r4.z, l(1.000000), r4.z
  and r4.z, r4.z, l(0x3f800000)
  mul r4.z, r4.z, r4.w
  movc r4.x, r4.x, r4.z, r4.w
  mov x0[0].x, r4.x
  mov r4.z, x1[1].x
  mov r4.w, x0[1].x
  mad r4.y, r4.y, r4.y, -r4.z
  mad r4.y, r4.w, r4.y, r4.z
  mov x1[1].x, r4.y
  mad r5.xyw, r1.xyxz, r4.yyyy, r9.xyxz
  lt r4.y, r3.w, r4.y
  mul r5.xy, r5.xyxx, cb1[44].xyxx
  ftoi r7.xy, r5.xyxx
  mov r7.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.z, r7.xyzw, t0.yzxw
  ge r5.x, r4.z, l(0.984375)
  mul r5.y, r4.z, l(1.01587307)
  mad r4.z, r4.z, l(64.000000), l(-63.000000)
  movc r4.z, r5.x, r4.z, r5.y
  max r4.z, r4.z, l(0.00000001)
  rcp r4.z, r4.z
  mov r5.x, x2[1].x
  movc r5.x, r4.y, r4.z, r5.x
  mov x2[1].x, r5.x
  add r4.z, r4.z, l(0.042000)
  mul r4.z, r4.z, r5.w
  lt r4.z, l(1.000000), r4.z
  and r4.z, r4.z, l(0x3f800000)
  mul r4.z, r4.z, r4.w
  movc r4.y, r4.y, r4.z, r4.w
  mov x0[1].x, r4.y
  add r4.x, r4.y, r4.x
  eq r4.x, r4.x, l(0.000000)
else 
  mov r4.x, l(-1)
endif 
if_z r4.x
  mad r4.xy, r1.wwww, l(0.500000, 0.500000, 0.000000, 0.000000), l(4.33333349, 5.000000, 0.000000, 0.000000)
  mul r4.xy, r4.xyxx, l(0.11764706, 0.11764706, 0.000000, 0.000000)
  mov r4.z, x1[0].x
  mov r4.w, x0[0].x
  mad r4.x, r4.x, r4.x, -r4.z
  mad r4.x, r4.w, r4.x, r4.z
  mov x1[0].x, r4.x
  mad r5.xyw, r10.xyxz, r4.xxxx, r9.xyxz
  lt r4.x, r3.w, r4.x
  mul r5.xy, r5.xyxx, cb1[44].xyxx
  ftoi r7.xy, r5.xyxx
  mov r7.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.z, r7.xyzw, t0.yzxw
  ge r5.x, r4.z, l(0.984375)
  mul r5.y, r4.z, l(1.01587307)
  mad r4.z, r4.z, l(64.000000), l(-63.000000)
  movc r4.z, r5.x, r4.z, r5.y
  max r4.z, r4.z, l(0.00000001)
  rcp r4.z, r4.z
  mov r5.x, x2[0].x
  movc r5.x, r4.x, r4.z, r5.x
  mov x2[0].x, r5.x
  add r4.z, r4.z, l(0.042000)
  mul r4.z, r4.z, r5.w
  lt r4.z, l(1.000000), r4.z
  and r4.z, r4.z, l(0x3f800000)
  mul r4.z, r4.z, r4.w
  movc r4.x, r4.x, r4.z, r4.w
  mov x0[0].x, r4.x
  mov r4.z, x1[1].x
  mov r4.w, x0[1].x
  mad r4.y, r4.y, r4.y, -r4.z
  mad r4.y, r4.w, r4.y, r4.z
  mov x1[1].x, r4.y
  mad r5.xyw, r1.xyxz, r4.yyyy, r9.xyxz
  lt r4.y, r3.w, r4.y
  mul r5.xy, r5.xyxx, cb1[44].xyxx
  ftoi r7.xy, r5.xyxx
  mov r7.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.z, r7.xyzw, t0.yzxw
  ge r5.x, r4.z, l(0.984375)
  mul r5.y, r4.z, l(1.01587307)
  mad r4.z, r4.z, l(64.000000), l(-63.000000)
  movc r4.z, r5.x, r4.z, r5.y
  max r4.z, r4.z, l(0.00000001)
  rcp r4.z, r4.z
  mov r5.x, x2[1].x
  movc r5.x, r4.y, r4.z, r5.x
  mov x2[1].x, r5.x
  add r4.z, r4.z, l(0.042000)
  mul r4.z, r4.z, r5.w
  lt r4.z, l(1.000000), r4.z
  and r4.z, r4.z, l(0x3f800000)
  mul r4.z, r4.z, r4.w
  movc r4.y, r4.y, r4.z, r4.w
  mov x0[1].x, r4.y
  add r4.x, r4.y, r4.x
  eq r4.x, r4.x, l(0.000000)
else 
  mov r4.x, l(-1)
endif 
if_z r4.x
  mad r4.xy, r1.wwww, l(0.500000, 0.500000, 0.000000, 0.000000), l(5.33333349, 6.000000, 0.000000, 0.000000)
  mul r4.xy, r4.xyxx, l(0.11764706, 0.11764706, 0.000000, 0.000000)
  mov r4.z, x1[0].x
  mov r4.w, x0[0].x
  mad r4.x, r4.x, r4.x, -r4.z
  mad r4.x, r4.w, r4.x, r4.z
  mov x1[0].x, r4.x
  mad r5.xyw, r10.xyxz, r4.xxxx, r9.xyxz
  lt r4.x, r3.w, r4.x
  mul r5.xy, r5.xyxx, cb1[44].xyxx
  ftoi r7.xy, r5.xyxx
  mov r7.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.z, r7.xyzw, t0.yzxw
  ge r5.x, r4.z, l(0.984375)
  mul r5.y, r4.z, l(1.01587307)
  mad r4.z, r4.z, l(64.000000), l(-63.000000)
  movc r4.z, r5.x, r4.z, r5.y
  max r4.z, r4.z, l(0.00000001)
  rcp r4.z, r4.z
  mov r5.x, x2[0].x
  movc r5.x, r4.x, r4.z, r5.x
  mov x2[0].x, r5.x
  add r4.z, r4.z, l(0.042000)
  mul r4.z, r4.z, r5.w
  lt r4.z, l(1.000000), r4.z
  and r4.z, r4.z, l(0x3f800000)
  mul r4.z, r4.z, r4.w
  movc r4.x, r4.x, r4.z, r4.w
  mov x0[0].x, r4.x
  mov r4.z, x1[1].x
  mov r4.w, x0[1].x
  mad r4.y, r4.y, r4.y, -r4.z
  mad r4.y, r4.w, r4.y, r4.z
  mov x1[1].x, r4.y
  mad r5.xyw, r1.xyxz, r4.yyyy, r9.xyxz
  lt r4.y, r3.w, r4.y
  mul r5.xy, r5.xyxx, cb1[44].xyxx
  ftoi r7.xy, r5.xyxx
  mov r7.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.z, r7.xyzw, t0.yzxw
  ge r5.x, r4.z, l(0.984375)
  mul r5.y, r4.z, l(1.01587307)
  mad r4.z, r4.z, l(64.000000), l(-63.000000)
  movc r4.z, r5.x, r4.z, r5.y
  max r4.z, r4.z, l(0.00000001)
  rcp r4.z, r4.z
  mov r5.x, x2[1].x
  movc r5.x, r4.y, r4.z, r5.x
  mov x2[1].x, r5.x
  add r4.z, r4.z, l(0.042000)
  mul r4.z, r4.z, r5.w
  lt r4.z, l(1.000000), r4.z
  and r4.z, r4.z, l(0x3f800000)
  mul r4.z, r4.z, r4.w
  movc r4.y, r4.y, r4.z, r4.w
  mov x0[1].x, r4.y
  add r4.x, r4.y, r4.x
  eq r4.x, r4.x, l(0.000000)
else 
  mov r4.x, l(-1)
endif 
if_z r4.x
  mad r4.xy, r1.wwww, l(0.500000, 0.500000, 0.000000, 0.000000), l(6.33333349, 7.000000, 0.000000, 0.000000)
  mul r4.xy, r4.xyxx, l(0.11764706, 0.11764706, 0.000000, 0.000000)
  mov r4.z, x1[0].x
  mov r4.w, x0[0].x
  mad r4.x, r4.x, r4.x, -r4.z
  mad r4.x, r4.w, r4.x, r4.z
  mov x1[0].x, r4.x
  mad r5.xyw, r10.xyxz, r4.xxxx, r9.xyxz
  lt r4.x, r3.w, r4.x
  mul r5.xy, r5.xyxx, cb1[44].xyxx
  ftoi r7.xy, r5.xyxx
  mov r7.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.z, r7.xyzw, t0.yzxw
  ge r5.x, r4.z, l(0.984375)
  mul r5.y, r4.z, l(1.01587307)
  mad r4.z, r4.z, l(64.000000), l(-63.000000)
  movc r4.z, r5.x, r4.z, r5.y
  max r4.z, r4.z, l(0.00000001)
  rcp r4.z, r4.z
  mov r5.x, x2[0].x
  movc r5.x, r4.x, r4.z, r5.x
  mov x2[0].x, r5.x
  add r4.z, r4.z, l(0.042000)
  mul r4.z, r4.z, r5.w
  lt r4.z, l(1.000000), r4.z
  and r4.z, r4.z, l(0x3f800000)
  mul r4.z, r4.z, r4.w
  movc r4.x, r4.x, r4.z, r4.w
  mov x0[0].x, r4.x
  mov r4.z, x1[1].x
  mov r4.w, x0[1].x
  mad r4.y, r4.y, r4.y, -r4.z
  mad r4.y, r4.w, r4.y, r4.z
  mov x1[1].x, r4.y
  mad r5.xyw, r1.xyxz, r4.yyyy, r9.xyxz
  lt r4.y, r3.w, r4.y
  mul r5.xy, r5.xyxx, cb1[44].xyxx
  ftoi r7.xy, r5.xyxx
  mov r7.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.z, r7.xyzw, t0.yzxw
  ge r5.x, r4.z, l(0.984375)
  mul r5.y, r4.z, l(1.01587307)
  mad r4.z, r4.z, l(64.000000), l(-63.000000)
  movc r4.z, r5.x, r4.z, r5.y
  max r4.z, r4.z, l(0.00000001)
  rcp r4.z, r4.z
  mov r5.x, x2[1].x
  movc r5.x, r4.y, r4.z, r5.x
  mov x2[1].x, r5.x
  add r4.z, r4.z, l(0.042000)
  mul r4.z, r4.z, r5.w
  lt r4.z, l(1.000000), r4.z
  and r4.z, r4.z, l(0x3f800000)
  mul r4.z, r4.z, r4.w
  movc r4.y, r4.y, r4.z, r4.w
  mov x0[1].x, r4.y
  add r4.x, r4.y, r4.x
  eq r4.x, r4.x, l(0.000000)
else 
  mov r4.x, l(-1)
endif 
if_z r4.x
  mad r4.xy, r1.wwww, l(0.500000, 0.500000, 0.000000, 0.000000), l(7.33333349, 8.000000, 0.000000, 0.000000)
  mul r4.xy, r4.xyxx, l(0.11764706, 0.11764706, 0.000000, 0.000000)
  mov r1.w, x1[0].x
  mov r4.z, x0[0].x
  mad r4.x, r4.x, r4.x, -r1.w
  mad r1.w, r4.z, r4.x, r1.w
  mad r5.xyw, r10.xyxz, r1.wwww, r9.xyxz
  lt r1.w, r3.w, r1.w
  mul r4.xw, r5.xxxy, cb1[44].xxxy
  ftoi r7.xy, r4.xwxx
  mov r7.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.x, r7.xyzw, t0.xyzw
  ge r4.w, r4.x, l(0.984375)
  mul r5.x, r4.x, l(1.01587307)
  mad r4.x, r4.x, l(64.000000), l(-63.000000)
  movc r4.x, r4.w, r4.x, r5.x
  max r4.x, r4.x, l(0.00000001)
  rcp r4.x, r4.x
  mov r4.w, x2[0].x
  movc r4.w, r1.w, r4.x, r4.w
  mov x2[0].x, r4.w
  add r4.x, r4.x, l(0.042000)
  mul r4.x, r4.x, r5.w
  lt r4.x, l(1.000000), r4.x
  and r4.x, r4.x, l(0x3f800000)
  mul r4.x, r4.x, r4.z
  movc r1.w, r1.w, r4.x, r4.z
  mov x0[0].x, r1.w
  mov r1.w, x1[1].x
  mov r4.x, x0[1].x
  mad r4.y, r4.y, r4.y, -r1.w
  mad r1.w, r4.x, r4.y, r1.w
  mad r1.xyz, r1.xyzx, r1.wwww, r9.xyzx
  lt r1.w, r3.w, r1.w
  mul r1.xy, r1.xyxx, cb1[44].xyxx
  ftoi r7.xy, r1.xyxx
  mov r7.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r1.x, r7.xyzw, t0.xyzw
  ge r1.y, r1.x, l(0.984375)
  mul r3.w, r1.x, l(1.01587307)
  mad r1.x, r1.x, l(64.000000), l(-63.000000)
  movc r1.x, r1.y, r1.x, r3.w
  max r1.x, r1.x, l(0.00000001)
  rcp r1.x, r1.x
  mov r1.y, x2[1].x
  movc r1.y, r1.w, r1.x, r1.y
  mov x2[1].x, r1.y
  add r1.x, r1.x, l(0.042000)
  mul r1.x, r1.x, r1.z
  lt r1.x, l(1.000000), r1.x
  and r1.x, r1.x, l(0x3f800000)
  mul r1.x, r1.x, r4.x
  movc r1.x, r1.w, r1.x, r4.x
  mov x0[1].x, r1.x
endif 
mov r1.x, x2[0].x
add r1.x, -r5.z, r1.x
lt r1.x, l(2.400000), |r1.x|
mov r1.y, x0[0].x
mad r1.y, -r1.y, l(0.500000), l(1.000000)
movc r1.x, r1.x, l(0.500000), r1.y
mov r1.y, x2[1].x
add r1.y, -r5.z, r1.y
lt r1.y, l(2.400000), |r1.y|
mov r1.z, x0[1].x
mul r1.z, r1.z, l(0.500000)
movc r1.y, r1.y, l(-0.500000), -r1.z
add r1.x, r1.y, r1.x
add_sat r1.x, -r1.x, l(1.000000)
mad r1.y, r1.x, l(-2.000000), l(3.000000)
mul r1.x, r1.x, r1.x
mul r1.x, r1.x, r1.y
min r1.x, r1.x, r18.w
mul r1.x, r1.x, r18.z
mul r1.xyz, r33.xyzx, r1.xxxx
mad r4.xyz, r1.xyzx, r35.xyzx, r29.xyzx
mad r5.xyz, r1.xyzx, r36.xyzx, r30.xyzx
mad r7.xyz, r1.xyzx, r37.xyzx, r32.xyzx
mad r1.xyz, r1.xyzx, r38.xyzx, r31.xyzx
iadd r1.w, cb2[0].y, -cb2[58].x
and r3.w, r1.w, l(-32)
iadd r4.w, r1.w, -r3.w
and r5.w, cb2[0].y, l(-32)
iadd r6.w, -r5.w, cb2[0].y
mov r9.xy, l(0,0,0,0)
mov r10.w, l(0)
mov r12.yz, l(0,0,1.000000,0)
mov r14.xy, l(0,0,0,0)
mov r15.xy, l(0,0,0,0)
mov r16.xy, l(0,0,0,0)
mov r17.xyzw, l(0,0,0,0)
mov r18.yzw, l(0,0,0,0)
mov r7.w, r3.w
loop 
  uge r8.x, r7.w, cb2[0].y
  breakc_nz r8.x
  ushr r9.z, r7.w, l(5)
  iadd r10.xyz, r9.xyzx, r19.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r8.x, r10.xyzw, t7.xyzw
  ieq r8.y, r3.w, r7.w
  bfi r9.z, r4.w, l(0), l(0), r8.x
  movc r8.x, r8.y, r9.z, r8.x
  ieq r8.y, r5.w, r7.w
  ubfe r9.z, r6.w, l(0), r8.x
  movc r8.x, r8.y, r9.z, r8.x
  iadd r8.y, r7.w, cb2[0].x
  mov r20.xyzw, r17.xyzw
  mov r21.xyz, r18.yzwy
  mov r9.z, r8.x
  loop 
    breakc_z r9.z
    firstbit_lo r9.w, r9.z
    ishl r10.x, l(1), r9.w
    and r10.y, r9.z, r10.x
    if_nz r10.y
      xor r9.z, r9.z, r10.x
      iadd r10.x, r8.y, r9.w
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r22.xyzw, r10.x, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r10.xy, r10.x, l(16), t11.xyxx
      add r22.xyz, r22.xyzx, -v5.xyzx
      mov r10.z, r22.w
      lt r10.xyz, |r22.xyzx|, r10.zxyz
      and r10.x, r10.y, r10.x
      and r10.x, r10.z, r10.x
      if_nz r10.x
        iadd r9.w, r7.w, r9.w
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r22.xyzw, r9.w, l(0), t15.wxyz
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r10.xy, r9.w, l(96), t15.xyxx
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r23.xyzw, r9.w, l(116), t15.zwxy
        add r24.xyz, -r22.yzwy, v5.xyzx
        and r10.z, r23.w, l(0x0000ffff)
        ubfe r12.w, l(6), l(25), r23.w
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r25.xyzw, r10.z, l(0), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r26.xyzw, r10.z, l(16), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r10.z, l(32), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r10.z, l(48), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r10.z, l(64), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r10.z, l(80), t16.xyzw
        dp3 r13.x, r25.xyzx, r24.xyzx
        add_sat r13.x, r25.w, r13.x
        dp3 r13.y, r26.xyzx, r24.xyzx
        add_sat r13.y, r26.w, r13.y
        mul r13.x, r13.y, r13.x
        dp3 r13.y, r27.xyzx, r24.xyzx
        add_sat r13.y, r27.w, r13.y
        mul r13.x, r13.y, r13.x
        dp3 r13.y, r28.xyzx, r24.xyzx
        add_sat r13.y, r28.w, r13.y
        mul r13.x, r13.y, r13.x
        dp3 r13.y, r29.xyzx, r24.xyzx
        add_sat r13.y, r29.w, r13.y
        mul r13.x, r13.y, r13.x
        dp3 r13.y, r30.xyzx, r24.xyzx
        add_sat r13.y, r30.w, r13.y
        mul r12.x, r13.y, r13.x
        and r13.x, r10.x, l(1)
        movc r13.xy, r13.xxxx, r12.xyxx, r12.zxzz
        mov r12.x, r10.x
        mov r25.xy, r13.xyxx
        mov r14.w, l(1)
        loop 
          ige r15.w, r14.w, r12.w
          breakc_nz r15.w
          iadd r15.w, r10.z, r14.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r26.xyzw, r15.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r15.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r15.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r15.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r15.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r15.w, l(80), t16.xyzw
          dp3 r15.w, r26.xyzx, r24.xyzx
          add_sat r15.w, r26.w, r15.w
          mul r15.w, r15.w, r25.x
          dp3 r16.w, r27.xyzx, r24.xyzx
          add_sat r16.w, r27.w, r16.w
          mul r15.w, r15.w, r16.w
          dp3 r16.w, r28.xyzx, r24.xyzx
          add_sat r16.w, r28.w, r16.w
          mul r15.w, r15.w, r16.w
          dp3 r16.w, r29.xyzx, r24.xyzx
          add_sat r16.w, r29.w, r16.w
          mul r15.w, r15.w, r16.w
          dp3 r16.w, r30.xyzx, r24.xyzx
          add_sat r16.w, r30.w, r16.w
          mul r15.w, r15.w, r16.w
          dp3 r16.w, r31.xyzx, r24.xyzx
          add_sat r16.w, r31.w, r16.w
          mul r25.x, r15.w, r16.w
          ushr r19.w, r12.x, l(2)
          ubfe r22.w, l(1), l(2), r12.x
          and r24.w, r19.w, l(2)
          max r25.z, r25.x, r25.y
          mad r15.w, -r15.w, r16.w, l(1.000000)
          mul r15.w, r15.w, r25.y
          movc r13.w, r24.w, r15.w, r25.z
          movc r25.xy, r22.wwww, r25.xyxx, r13.zwzz
          iadd r14.w, r14.w, l(1)
          mov r12.x, r19.w
        endloop 
        mov_sat r25.y, r25.y
        mul r10.x, r10.y, r25.y
        lt r10.z, l(0.000000), r10.x
        if_nz r10.z
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r9.w, l(16), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r9.w, l(32), t15.yxwz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r9.w, l(48), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r9.w, l(64), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r9.w, l(80), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r9.w, l(132), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r9.w, l(148), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r9.w, l(164), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r9.w, l(180), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r9.w, l(196), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xy, r9.w, l(212), t15.xyxx
          mad r21.z, r25.y, r10.y, r21.z
          mul r9.w, r23.z, r10.x
          mov r23.z, r31.z
          dp3 r10.x, r11.xyzx, r23.xyzx
          dp3 r10.y, r24.xyzx, r23.xyzx
          add r10.y, -r31.w, r10.y
          ge r10.z, r10.y, l(0.000000)
          max r10.y, |r10.y|, l(100.000000)
          movc r10.y, r10.z, r10.y, -r10.y
          max r10.x, -r10.x, l(0.00000010)
          div r10.x, r10.y, r10.x
          min r10.x, |r10.x|, l(131072.000000)
          mov r31.z, r32.z
          dp3 r10.y, r11.xyzx, r31.xyzx
          dp3 r10.z, r24.xyzx, r31.xyzx
          add r10.z, -r32.w, r10.z
          ge r12.x, r10.z, l(0.000000)
          max r10.z, |r10.z|, l(100.000000)
          movc r10.z, r12.x, r10.z, -r10.z
          max r10.y, -r10.y, l(0.00000010)
          div r10.y, r10.z, r10.y
          min r10.x, |r10.y|, r10.x
          mov r32.z, r33.z
          dp3 r10.y, r11.xyzx, r32.xyzx
          dp3 r10.z, r24.xyzx, r32.xyzx
          add r10.z, -r33.w, r10.z
          ge r12.x, r10.z, l(0.000000)
          max r10.z, |r10.z|, l(100.000000)
          movc r10.z, r12.x, r10.z, -r10.z
          max r10.y, -r10.y, l(0.00000010)
          div r10.y, r10.z, r10.y
          min r10.x, |r10.y|, r10.x
          mov r33.z, r34.z
          dp3 r10.y, r11.xyzx, r33.xyzx
          dp3 r10.z, r24.xyzx, r33.xyzx
          add r10.z, -r34.w, r10.z
          ge r12.x, r10.z, l(0.000000)
          max r10.z, |r10.z|, l(100.000000)
          movc r10.z, r12.x, r10.z, -r10.z
          max r10.y, -r10.y, l(0.00000010)
          div r10.y, r10.z, r10.y
          min r10.x, |r10.y|, r10.x
          mov r34.z, r35.x
          dp3 r10.y, r11.xyzx, r34.xyzx
          dp3 r10.z, r24.xyzx, r34.xyzx
          add r10.z, -r35.y, r10.z
          ge r12.x, r10.z, l(0.000000)
          max r10.z, |r10.z|, l(100.000000)
          movc r10.z, r12.x, r10.z, -r10.z
          max r10.y, -r10.y, l(0.00000010)
          div r10.y, r10.z, r10.y
          min r10.x, |r10.y|, r10.x
          mov r36.zw, r35.zzzw
          dp3 r10.y, r11.zxyz, r36.xzwx
          dp3 r10.z, r24.zxyz, r36.xzwx
          add r10.z, -r36.y, r10.z
          ge r12.x, r10.z, l(0.000000)
          max r10.z, |r10.z|, l(100.000000)
          movc r10.z, r12.x, r10.z, -r10.z
          max r10.y, -r10.y, l(0.00000010)
          div r10.y, r10.z, r10.y
          min r10.x, |r10.y|, r10.x
          mov r23.x, r28.w
          mov r23.yz, r29.zzwz
          add r13.xyw, r24.xyxz, r23.xyxz
          mad r13.xyw, r11.xyxz, r10.xxxx, r13.xyxw
          dp3 r10.y, r13.xywx, r13.xywx
          sqrt r10.y, r10.y
          div r10.x, r10.x, r10.y
          add r10.x, r10.x, r10.x
          sqrt r10.x, r10.x
          add r10.x, r10.x, l(4.155200)
          mov r22.y, r26.z
          mov r22.z, r27.x
          dp3 r31.x, r13.xywx, r22.xyzx
          mov r23.xy, r26.xwxx
          mov r23.z, r27.w
          dp3 r31.y, r13.xywx, r23.xyzx
          mov r27.x, r26.y
          dp3 r31.z, r13.xywx, r27.xyzx
          ubfe r10.y, l(9), l(16), r23.w
          utof r31.w, r10.y
          sample_l_indexable(texturecubearray)(float,float,float,float) r10.xyz, r31.xyzw, t8.xyzw, s2, r10.x
          dp3 r26.x, r24.xyzx, r22.xyzx
          dp3 r26.y, r24.xyzx, r23.xyzx
          dp3 r26.z, r24.xyzx, r27.xyzx
          mad_sat r13.xyw, r26.xyxz, r28.xyxz, l(0.500000, 0.500000, 0.000000, 0.500000)
          mov r29.z, r30.x
          mad r13.xyw, r13.xyxw, r29.xyxz, r30.yzyw
          dp3 r31.x, r2.xyzx, r22.xyzx
          dp3 r31.y, r2.xyzx, r23.xyzx
          dp3 r31.z, r2.xyzx, r27.xyzx
          lt r22.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r31.xyzx
          movc r14.z, r22.x, l(0), l(0.500000)
          add r23.xyz, r13.xywx, r14.xyzx
          sample_l_indexable(texture3d)(float,float,float,float) r23.xyz, r23.xyzx, t17.xyzw, s4, l(0.000000)
          mul r24.xyz, r31.xyzx, r31.xyzx
          mul r24.xyz, r9.wwww, r24.xyzx
          movc r15.z, r22.y, l(0), l(0.500000)
          add r22.xyw, r13.xyxw, r15.xyxz
          sample_l_indexable(texture3d)(float,float,float,float) r22.xyw, r22.xywx, t18.xywz, s4, l(0.000000)
          mul r22.xyw, r24.yyyy, r22.xyxw
          mad r22.xyw, r23.xyxz, r24.xxxx, r22.xyxw
          movc r16.z, r22.z, l(0), l(0.500000)
          add r13.xyw, r13.xyxw, r16.xyxz
          sample_l_indexable(texture3d)(float,float,float,float) r13.xyw, r13.xywx, t19.xywz, s4, l(0.000000)
          mad r13.xyw, r13.xyxw, r24.zzzz, r22.xyxw
          sample_l_indexable(texturecubearray)(float,float,float,float) r22.xyz, r31.xyzw, t8.xyzw, s2, l(6.000000)
          mul r23.xyz, r13.xywx, r22.xyzx
          dp3 r12.x, r23.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r20.xyz, r13.xywx, r22.xyzx, r20.xyzx
          mul r12.w, r12.x, l(1.268160)
          mul r10.xyz, r9.wwww, r10.xyzx
          dp3 r9.w, r10.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r9.w, r12.x, l(1.268160), r9.w
          div r9.w, r12.w, r9.w
          mov r22.x, r20.w
          mov r22.yz, r21.xxyx
          mad r21.xyw, r10.yzyx, r9.wwww, r22.yzyx
          mov r20.w, r21.w
        endif 
      endif 
    endif 
  endloop 
  mov r17.xyzw, r20.xyzw
  mov r18.yzw, r21.xxyz
  iadd r7.w, r7.w, l(32)
endloop 
lt r5.w, r18.w, l(1.000000)
if_nz r5.w
  mov r9.xy, l(0,0,0,0)
  mov r10.w, l(0)
  mov r12.yz, l(0,0,1.000000,0)
  mov r13.xy, l(0,0,0,0)
  mov r8.x, l(1.000000)
  mov r14.xy, l(0,0,0,0)
  mov r15.xy, l(0,0,0,0)
  mov r16.x, r17.w
  mov r16.yzw, r18.yyzw
  mov r20.xyz, r17.xyzx
  mov r5.w, r18.w
  mov r6.w, l(0)
  loop 
    uge r7.w, r6.w, r1.w
    breakc_nz r7.w
    ushr r9.z, r6.w, l(5)
    iadd r10.xyz, r9.xyzx, r19.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r7.w, r10.xyzw, t7.yzwx
    ieq r9.z, r3.w, r6.w
    ubfe r9.w, r4.w, l(0), r7.w
    movc r7.w, r9.z, r9.w, r7.w
    iadd r9.z, r6.w, cb2[0].x
    mov r21.xyzw, r16.xyzw
    mov r10.xyz, r20.xyzx
    mov r9.w, r5.w
    mov r12.w, r7.w
    loop 
      breakc_z r12.w
      firstbit_lo r13.w, r12.w
      ishl r14.w, l(1), r13.w
      and r15.w, r12.w, r14.w
      if_nz r15.w
        xor r12.w, r12.w, r14.w
        iadd r14.w, r9.z, r13.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r22.xyzw, r14.w, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r23.xy, r14.w, l(16), t11.xyxx
        add r22.xyz, r22.xyzx, -v5.xyzx
        mov r23.z, r22.w
        lt r22.xyz, |r22.xyzx|, r23.zxyz
        and r14.w, r22.y, r22.x
        and r14.w, r22.z, r14.w
        if_nz r14.w
          iadd r13.w, r6.w, r13.w
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r22.xyzw, r13.w, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r23.xy, r13.w, l(96), t15.xyxx
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r13.w, l(116), t15.zwxy
          add r25.xyz, -r22.yzwy, v5.xyzx
          and r14.w, r24.w, l(0x0000ffff)
          ubfe r15.w, l(6), l(25), r24.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r26.xyzw, r14.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r14.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r14.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r14.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r14.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r14.w, l(80), t16.xyzw
          dp3 r19.w, r26.xyzx, r25.xyzx
          add_sat r19.w, r26.w, r19.w
          dp3 r20.w, r27.xyzx, r25.xyzx
          add_sat r20.w, r27.w, r20.w
          mul r19.w, r19.w, r20.w
          dp3 r20.w, r28.xyzx, r25.xyzx
          add_sat r20.w, r28.w, r20.w
          mul r19.w, r19.w, r20.w
          dp3 r20.w, r29.xyzx, r25.xyzx
          add_sat r20.w, r29.w, r20.w
          mul r19.w, r19.w, r20.w
          dp3 r20.w, r30.xyzx, r25.xyzx
          add_sat r20.w, r30.w, r20.w
          mul r19.w, r19.w, r20.w
          dp3 r20.w, r31.xyzx, r25.xyzx
          add_sat r20.w, r31.w, r20.w
          mul r12.x, r19.w, r20.w
          and r19.w, r23.x, l(1)
          movc r23.zw, r19.wwww, r12.xxxy, r12.zzzx
          mov r12.x, r23.x
          mov r26.xy, r23.zwzz
          mov r19.w, l(1)
          loop 
            ige r20.w, r19.w, r15.w
            breakc_nz r20.w
            iadd r20.w, r14.w, r19.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r20.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r20.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r20.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r20.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r20.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r20.w, l(80), t16.xyzw
            dp3 r20.w, r27.xyzx, r25.xyzx
            add_sat r20.w, r27.w, r20.w
            mul r20.w, r20.w, r26.x
            dp3 r22.w, r28.xyzx, r25.xyzx
            add_sat r22.w, r28.w, r22.w
            mul r20.w, r20.w, r22.w
            dp3 r22.w, r29.xyzx, r25.xyzx
            add_sat r22.w, r29.w, r22.w
            mul r20.w, r20.w, r22.w
            dp3 r22.w, r30.xyzx, r25.xyzx
            add_sat r22.w, r30.w, r22.w
            mul r20.w, r20.w, r22.w
            dp3 r22.w, r31.xyzx, r25.xyzx
            add_sat r22.w, r31.w, r22.w
            mul r20.w, r20.w, r22.w
            dp3 r22.w, r32.xyzx, r25.xyzx
            add_sat r22.w, r32.w, r22.w
            mul r26.x, r20.w, r22.w
            ushr r25.w, r12.x, l(2)
            ubfe r26.z, l(1), l(2), r12.x
            and r26.w, r25.w, l(2)
            max r27.x, r26.x, r26.y
            mad r20.w, -r20.w, r22.w, l(1.000000)
            mul r20.w, r20.w, r26.y
            movc r8.y, r26.w, r20.w, r27.x
            movc r26.xy, r26.zzzz, r26.xyxx, r8.xyxx
            iadd r19.w, r19.w, l(1)
            mov r12.x, r25.w
          endloop 
          add_sat r8.y, -r9.w, r26.y
          mul r12.x, r23.y, r8.y
          lt r14.w, l(0.000000), r12.x
          if_nz r14.w
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r13.w, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r13.w, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r13.w, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r13.w, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r13.w, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r13.w, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r13.w, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r13.w, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r13.w, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r13.w, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xy, r13.w, l(212), t15.xyxx
            mad r21.w, r8.y, r23.y, r21.w
            mul r8.y, r24.z, r12.x
            mov r24.z, r32.z
            dp3 r12.x, r11.xyzx, r24.xyzx
            dp3 r13.w, r25.xyzx, r24.xyzx
            add r13.w, -r32.w, r13.w
            ge r14.w, r13.w, l(0.000000)
            max r13.w, |r13.w|, l(100.000000)
            movc r13.w, r14.w, r13.w, -r13.w
            max r12.x, -r12.x, l(0.00000010)
            div r12.x, r13.w, r12.x
            min r12.x, |r12.x|, l(131072.000000)
            mov r32.z, r33.z
            dp3 r13.w, r11.xyzx, r32.xyzx
            dp3 r14.w, r25.xyzx, r32.xyzx
            add r14.w, -r33.w, r14.w
            ge r15.w, r14.w, l(0.000000)
            max r14.w, |r14.w|, l(100.000000)
            movc r14.w, r15.w, r14.w, -r14.w
            max r13.w, -r13.w, l(0.00000010)
            div r13.w, r14.w, r13.w
            min r12.x, r12.x, |r13.w|
            mov r33.z, r34.z
            dp3 r13.w, r11.xyzx, r33.xyzx
            dp3 r14.w, r25.xyzx, r33.xyzx
            add r14.w, -r34.w, r14.w
            ge r15.w, r14.w, l(0.000000)
            max r14.w, |r14.w|, l(100.000000)
            movc r14.w, r15.w, r14.w, -r14.w
            max r13.w, -r13.w, l(0.00000010)
            div r13.w, r14.w, r13.w
            min r12.x, r12.x, |r13.w|
            mov r34.z, r35.z
            dp3 r13.w, r11.xyzx, r34.xyzx
            dp3 r14.w, r25.xyzx, r34.xyzx
            add r14.w, -r35.w, r14.w
            ge r15.w, r14.w, l(0.000000)
            max r14.w, |r14.w|, l(100.000000)
            movc r14.w, r15.w, r14.w, -r14.w
            max r13.w, -r13.w, l(0.00000010)
            div r13.w, r14.w, r13.w
            min r12.x, r12.x, |r13.w|
            mov r35.z, r36.x
            dp3 r13.w, r11.xyzx, r35.xyzx
            dp3 r14.w, r25.xyzx, r35.xyzx
            add r14.w, -r36.y, r14.w
            ge r15.w, r14.w, l(0.000000)
            max r14.w, |r14.w|, l(100.000000)
            movc r14.w, r15.w, r14.w, -r14.w
            max r13.w, -r13.w, l(0.00000010)
            div r13.w, r14.w, r13.w
            min r12.x, r12.x, |r13.w|
            mov r37.zw, r36.zzzw
            dp3 r13.w, r11.zxyz, r37.xzwx
            dp3 r14.w, r25.zxyz, r37.xzwx
            add r14.w, -r37.y, r14.w
            ge r15.w, r14.w, l(0.000000)
            max r14.w, |r14.w|, l(100.000000)
            movc r14.w, r15.w, r14.w, -r14.w
            max r13.w, -r13.w, l(0.00000010)
            div r13.w, r14.w, r13.w
            min r12.x, r12.x, |r13.w|
            mov r23.x, r29.w
            mov r23.yz, r30.zzwz
            add r23.xyz, r25.xyzx, r23.xyzx
            mad r23.xyz, r11.xyzx, r12.xxxx, r23.xyzx
            dp3 r13.w, r23.xyzx, r23.xyzx
            sqrt r13.w, r13.w
            div r12.x, r12.x, r13.w
            add r12.x, r12.x, r12.x
            sqrt r12.x, r12.x
            add r12.x, r12.x, l(4.155200)
            mov r22.y, r27.z
            mov r22.z, r28.x
            dp3 r32.x, r23.xyzx, r22.xyzx
            mov r24.xy, r27.xwxx
            mov r24.z, r28.w
            dp3 r32.y, r23.xyzx, r24.xyzx
            mov r28.x, r27.y
            dp3 r32.z, r23.xyzx, r28.xyzx
            ubfe r13.w, l(9), l(16), r24.w
            utof r32.w, r13.w
            sample_l_indexable(texturecubearray)(float,float,float,float) r23.xyz, r32.xyzw, t8.xyzw, s2, r12.x
            dp3 r27.x, r25.xyzx, r22.xyzx
            dp3 r27.y, r25.xyzx, r24.xyzx
            dp3 r27.z, r25.xyzx, r28.xyzx
            mad_sat r25.xyz, r27.xyzx, r29.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
            mov r30.z, r31.x
            mad r25.xyz, r25.xyzx, r30.xyzx, r31.yzwy
            dp3 r32.x, r2.xyzx, r22.xyzx
            dp3 r32.y, r2.xyzx, r24.xyzx
            dp3 r32.z, r2.xyzx, r28.xyzx
            lt r22.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r32.xyzx
            movc r13.z, r22.x, l(0), l(0.500000)
            add r24.xyz, r13.xyzx, r25.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r24.xyz, r24.xyzx, t17.xyzw, s4, l(0.000000)
            mul r26.xzw, r32.xxyz, r32.xxyz
            mul r26.xzw, r8.yyyy, r26.xxzw
            movc r14.z, r22.y, l(0), l(0.500000)
            add r22.xyw, r14.xyxz, r25.xyxz
            sample_l_indexable(texture3d)(float,float,float,float) r22.xyw, r22.xywx, t18.xywz, s4, l(0.000000)
            mul r22.xyw, r26.zzzz, r22.xyxw
            mad r22.xyw, r24.xyxz, r26.xxxx, r22.xyxw
            movc r15.z, r22.z, l(0), l(0.500000)
            add r24.xyz, r15.xyzx, r25.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r24.xyz, r24.xyzx, t19.xyzw, s4, l(0.000000)
            mad r22.xyz, r24.xyzx, r26.wwww, r22.xywx
            sample_l_indexable(texturecubearray)(float,float,float,float) r24.xyz, r32.xyzw, t8.xyzw, s2, l(6.000000)
            mul r25.xyz, r22.xyzx, r24.xyzx
            dp3 r12.x, r25.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r10.xyz, r22.xyzx, r24.xyzx, r10.xyzx
            mul r13.z, r12.x, l(1.268160)
            mul r22.xyz, r8.yyyy, r23.xyzx
            dp3 r8.y, r22.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r8.y, r12.x, l(1.268160), r8.y
            div r8.y, r13.z, r8.y
            mad r21.xyz, r22.xyzx, r8.yyyy, r21.xyzx
          endif 
        endif 
      endif 
    endloop 
    mov r16.xyzw, r21.xyzw
    mov r20.xyz, r10.xyzx
    iadd r6.w, r6.w, l(32)
  endloop 
  mov r18.xyzw, r16.zxyw
  mov r17.xyz, r20.xyzx
  mov r18.xyzw, r18.yzxw
else 
  mov r18.x, r17.w
endif 
max r1.w, r18.w, l(1.000000)
rcp r1.w, r1.w
mov_sat r18.w, r18.w
mul r9.xyz, r1.wwww, r17.xyzx
mul r10.xyz, r1.wwww, r18.xyzx
lt r3.w, r18.w, l(0.990000)
if_nz r3.w
  add r3.w, -r18.w, l(1.000000)
  mul r3.w, r3.w, cb2[19].x
  add r12.xyz, v5.xyzx, -cb2[35].xyzx
  mul r13.x, r12.x, cb2[35].w
  mul r13.yz, r12.yyzy, cb2[36].xxyx
  add_sat r12.xyz, r13.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mul r13.xy, r12.xyxx, cb2[36].zwzz
  mul r13.z, r12.z, cb2[37].x
  add r12.xyz, r13.xyzx, cb2[37].yzwy
  lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r2.xyzx
  movc r13.xyz, r13.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
  mov r13.w, l(0)
  add r14.xyz, r12.xyzx, r13.wwxw
  sample_l_indexable(texture3d)(float,float,float,float) r14.xyz, r14.xyzx, t17.xyzw, s4, l(0.000000)
  mul r15.xyz, r2.xyzx, r2.xyzx
  mul r15.xyz, r3.wwww, r15.xyzx
  add r16.xyz, r12.xyzx, r13.wwyw
  sample_l_indexable(texture3d)(float,float,float,float) r16.xyz, r16.xyzx, t18.xyzw, s4, l(0.000000)
  mul r16.xyz, r15.yyyy, r16.xyzx
  mad r14.xyz, r14.xyzx, r15.xxxx, r16.xyzx
  add r12.xyz, r12.xyzx, r13.wwzw
  sample_l_indexable(texture3d)(float,float,float,float) r12.xyz, r12.xyzx, t19.xyzw, s4, l(0.000000)
  mad r12.xyz, r12.xyzx, r15.zzzz, r14.xyzx
  mov r2.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r2.xyz, r2.xyzw, t8.xyzw, s2, l(6.000000)
  mul r2.xyz, r2.xyzx, r12.xyzx
  dp3 r2.w, r2.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  mad r9.xyz, r17.xyzx, r1.wwww, r2.xyzx
  mov r11.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r2.xyz, r11.xyzw, t8.xyzw, s2, l(5.000000)
  mad r10.xyz, r2.xyzx, r2.wwww, r10.xyzx
endif 
mad r2.xyz, r9.xyzx, r0.wwww, r4.xyzx
mad r4.xyz, r9.xyzx, r0.wwww, r5.xyzx
mov r8.w, l(0)
add r5.xy, r8.zwzz, l(0.00781250, 0.00781250, 0.000000, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r5.xy, r5.xyxx, t5.xyzw, s2, l(0.000000)
mul r8.xyz, r0.wwww, r10.xyzx
mad r1.xyz, r8.xyzx, r5.xxxx, r1.xyzx
mad r5.xyz, r8.xyzx, r5.yyyy, r7.xyzx
dp3 r0.w, r3.xyzx, r6.xyzx
add r0.w, -|r0.w|, l(1.000000)
mul r0.w, r0.w, r0.w
mad r0.w, r0.w, l(0.600000), l(0.400000)
min r0.w, r0.w, l(1.000000)
mad_sat r3.xyz, r0.xyzx, l(0.020000, 0.020000, 0.020000, 0.000000), l(0.040000, 0.040000, 0.040000, 0.000000)
mul r6.xyz, r3.xyzx, cb0[11].xyzx
mul r7.xyz, r0.wwww, r0.xyzx
mul r4.xyz, r4.xyzx, r7.xyzx
mad r0.xyz, r2.xyzx, r0.xyzx, r4.xyzx
mad r2.xyz, -r3.xyzx, cb0[11].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r1.xyz, r1.xyzx, r2.xyzx
mad r1.xyz, r5.xyzx, r6.xyzx, r1.xyzx
add r0.xyz, r0.xyzx, r1.xyzx
lt r0.w, l(0.000000), cb2[9].z
if_nz r0.w
  dp3 r0.w, v5.xyzx, v5.xyzx
  rsq r1.x, r0.w
  mul r1.xyz, r1.xxxx, v5.xyzx
  sqrt r0.w, r0.w
  lt r1.w, l(0.000000), cb2[13].w
  if_nz r1.w
    mad r2.xy, r0.wwww, cb2[15].xyxx, cb2[14].zwzz
    mul r2.xy, r2.xyxx, cb2[16].xyxx
    lt r1.w, l(0.010000), |v5.z|
    mul r2.zw, v5.zzzz, cb2[15].zzzw
    mul r3.xy, r2.zwzz, l(-1.442695, -1.442695, 0.000000, 0.000000)
    exp r3.xy, r3.xyxx
    add r3.xy, -r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    div r2.zw, r3.xxxy, r2.zzzw
    mul r2.zw, r2.zzzw, r2.xxxy
    movc r2.xy, r1.wwww, r2.zwzz, r2.xyxx
    mul r2.xzw, r2.xxxx, cb2[12].xxyz
    exp r2.xzw, r2.xxzw
    mul r3.xyz, r2.yyyy, cb2[12].xyzx
    exp r3.xyz, r3.xyzx
    add r3.xyz, -r2.xzwx, r3.xyzx
    mad r2.xyz, cb2[13].wwww, r3.xyzx, r2.xzwx
  else 
    mad r1.w, r0.w, cb2[15].x, cb2[14].z
    mul r1.w, r1.w, cb2[16].x
    lt r2.w, l(0.010000), |v5.z|
    mul r3.x, v5.z, cb2[15].z
    mul r3.y, r3.x, l(-1.442695)
    exp r3.y, r3.y
    add r3.y, -r3.y, l(1.000000)
    div r3.x, r3.y, r3.x
    mul r3.x, r1.w, r3.x
    movc r1.w, r2.w, r3.x, r1.w
    mul r3.xyz, r1.wwww, cb2[12].xyzx
    exp r2.xyz, r3.xyzx
  endif 
  mad r2.xyz, r2.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r2.xyz, r2.xyzx, -cb2[9].zzzz
  dp3 r1.x, cb2[7].yzwy, -r1.xyzx
  mad r1.y, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r1.z, cb2[8].w, -r1.x, l(1.000000)
  mul r1.z, r1.z, r1.z
  mul r1.z, r1.z, l(12.566371)
  div r1.y, r1.y, r1.z
  add r0.w, r0.w, -cb2[10].w
  mul_sat r0.w, r0.w, cb2[11].w
  mul r0.w, r0.w, r1.y
  mov_sat r1.x, r1.x
  mad r1.x, r1.x, r1.x, l(1.000000)
  mad r1.x, r1.x, l(0.05968310), l(-1.000000)
  mad r1.x, cb2[8].z, r1.x, l(1.000000)
  mul r1.yzw, r0.wwww, cb2[11].xxyz
  mad r1.xyz, r1.xxxx, cb2[10].xyzx, r1.yzwy
  mul r1.xyz, r1.xyzx, cb2[9].wwww
  add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r1.xyz, r1.xyzx, r3.xyzx
  mad r1.xyz, r0.xyzx, r2.xyzx, r1.xyzx
else 
  mul r0.w, v5.z, cb2[6].x
  mad r1.w, cb2[6].x, v5.z, cb2[5].x
  lt r2.x, |r0.w|, l(0.000100)
  min r2.y, r1.w, l(64.000000)
  mul r2.y, r2.y, l(1.442695)
  exp r2.y, r2.y
  mov_sat r2.z, cb2[6].z
  lt r2.w, r1.w, l(0.000000)
  add r1.w, r1.w, l(1.000000)
  movc r1.w, r2.w, r2.y, r1.w
  add r1.w, r1.w, -cb2[6].z
  movc r0.w, r2.x, l(1.000000), r0.w
  div r0.w, r1.w, r0.w
  movc r0.w, r2.x, r2.z, r0.w
  mul r0.w, r0.w, cb2[5].z
  dp3 r1.w, v5.xyzx, v5.xyzx
  sqrt r2.x, r1.w
  mad r0.w, r0.w, r2.x, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  rsq r1.w, r1.w
  mul r2.xyz, r1.wwww, v5.xyzx
  dp3 r1.w, cb2[7].yzwy, r2.xyzx
  mad_sat r1.w, cb2[8].y, r1.w, cb2[8].x
  add r2.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r2.xyzw, r1.wwww, r2.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r2.w
  add r2.xyz, -r0.xyzx, r2.xyzx
  mad r1.xyz, r0.wwww, r2.xyzx, r0.xyzx
endif 
mul r0.xyz, r1.xyzx, cb1[85].yyyy
ge r1.xyz, r0.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.xyz, r0.xyzx, r1.xyzx
min o0.xyz, r0.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
ret 
// Approximately 2291 instruction slots used
