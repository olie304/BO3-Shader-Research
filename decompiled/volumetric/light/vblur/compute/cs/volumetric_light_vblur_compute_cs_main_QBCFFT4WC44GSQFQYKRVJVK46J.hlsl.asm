//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:43:57 2021
//
//
// Buffer Definitions: 
//
// cbuffer PostFxCBuffer
// {
//
//   float4 postFxControl0;             // Offset:    0 Size:    16 [unused]
//   float4 postFxControl1;             // Offset:   16 Size:    16 [unused]
//   float4 postFxControl2;             // Offset:   32 Size:    16 [unused]
//   float4 postFxControl3;             // Offset:   48 Size:    16 [unused]
//   float4 postFxControl4;             // Offset:   64 Size:    16 [unused]
//   float4 postFxControl5;             // Offset:   80 Size:    16 [unused]
//   float4 postFxControl6;             // Offset:   96 Size:    16 [unused]
//   float4 postFxControl7;             // Offset:  112 Size:    16 [unused]
//   float4 postFxControl8;             // Offset:  128 Size:    16 [unused]
//   float4 postFxControl9;             // Offset:  144 Size:    16 [unused]
//   float4 postFxControlA;             // Offset:  160 Size:    16
//   float4 postFxControlB;             // Offset:  176 Size:    16 [unused]
//   float4 postFxControlC;             // Offset:  192 Size:    16 [unused]
//   float4 postFxControlD;             // Offset:  208 Size:    16 [unused]
//   float4 postFxControlE;             // Offset:  224 Size:    16 [unused]
//   float4 postFxControlF;             // Offset:  240 Size:    16 [unused]
//   float4 postFxConst00;              // Offset:  256 Size:    16 [unused]
//   float4 postFxConst01;              // Offset:  272 Size:    16 [unused]
//   float4 postFxConst02;              // Offset:  288 Size:    16 [unused]
//   float4 postFxConst03;              // Offset:  304 Size:    16 [unused]
//   float4 postFxConst04;              // Offset:  320 Size:    16 [unused]
//   float4 postFxConst05;              // Offset:  336 Size:    16 [unused]
//   float4 postFxConst06;              // Offset:  352 Size:    16 [unused]
//   float4 postFxConst07;              // Offset:  368 Size:    16 [unused]
//   float4 postFxConst08;              // Offset:  384 Size:    16 [unused]
//   float4 postFxConst09;              // Offset:  400 Size:    16 [unused]
//   float4 postFxConst10;              // Offset:  416 Size:    16 [unused]
//   float4 postFxConst11;              // Offset:  432 Size:    16 [unused]
//   float4 postFxConst12;              // Offset:  448 Size:    16 [unused]
//   float4 postFxConst13;              // Offset:  464 Size:    16 [unused]
//   float4 postFxConst14;              // Offset:  480 Size:    16 [unused]
//   float4 postFxConst15;              // Offset:  496 Size:    16 [unused]
//   float4 postFxConst16;              // Offset:  512 Size:    16 [unused]
//   float4 postFxConst17;              // Offset:  528 Size:    16 [unused]
//   float4 postFxConst18;              // Offset:  544 Size:    16 [unused]
//   float4 postFxConst19;              // Offset:  560 Size:    16 [unused]
//   float4 postFxConst20;              // Offset:  576 Size:    16 [unused]
//   float4 postFxConst21;              // Offset:  592 Size:    16 [unused]
//   float4 postFxConst22;              // Offset:  608 Size:    16 [unused]
//   float4 postFxConst23;              // Offset:  624 Size:    16 [unused]
//   float4 postFxConst24;              // Offset:  640 Size:    16 [unused]
//   float4 postFxConst25;              // Offset:  656 Size:    16 [unused]
//   float4 postFxConst26;              // Offset:  672 Size:    16 [unused]
//   float4 postFxConst27;              // Offset:  688 Size:    16 [unused]
//   float4 postFxConst28;              // Offset:  704 Size:    16 [unused]
//   float4 postFxConst29;              // Offset:  720 Size:    16 [unused]
//   float4 postFxConst30;              // Offset:  736 Size:    16 [unused]
//   float4 postFxConst31;              // Offset:  752 Size:    16 [unused]
//   float4 postFxConst32;              // Offset:  768 Size:    16 [unused]
//   float4 postFxConst33;              // Offset:  784 Size:    16 [unused]
//   float4 postFxConst34;              // Offset:  800 Size:    16 [unused]
//   float4 postFxConst35;              // Offset:  816 Size:    16 [unused]
//   float4 postFxConst36;              // Offset:  832 Size:    16 [unused]
//   float4 postFxConst37;              // Offset:  848 Size:    16 [unused]
//   float4 postFxConst38;              // Offset:  864 Size:    16 [unused]
//   float4 postFxConst39;              // Offset:  880 Size:    16 [unused]
//   float4 postFxConst40;              // Offset:  896 Size:    16 [unused]
//   float4 postFxConst41;              // Offset:  912 Size:    16 [unused]
//   float4 postFxConst42;              // Offset:  928 Size:    16 [unused]
//   float4 postFxConst43;              // Offset:  944 Size:    16 [unused]
//   float4 postFxConst44;              // Offset:  960 Size:    16 [unused]
//   float4 postFxConst45;              // Offset:  976 Size:    16 [unused]
//   float4 postFxConst46;              // Offset:  992 Size:    16 [unused]
//   float4 postFxConst47;              // Offset: 1008 Size:    16 [unused]
//   float4 postFxConst48;              // Offset: 1024 Size:    16 [unused]
//   float4 postFxConst49;              // Offset: 1040 Size:    16 [unused]
//   float4 postFxConst50;              // Offset: 1056 Size:    16 [unused]
//   float4 postFxConst51;              // Offset: 1072 Size:    16 [unused]
//   float4 postFxConst52;              // Offset: 1088 Size:    16 [unused]
//   float4 postFxConst53;              // Offset: 1104 Size:    16 [unused]
//   float4 postFxConst54;              // Offset: 1120 Size:    16 [unused]
//   float4 postFxConst55;              // Offset: 1136 Size:    16 [unused]
//   float4 postFxConst56;              // Offset: 1152 Size:    16 [unused]
//   float4 postFxConst57;              // Offset: 1168 Size:    16 [unused]
//   float4 postFxConst58;              // Offset: 1184 Size:    16 [unused]
//   float4 postFxConst59;              // Offset: 1200 Size:    16 [unused]
//   float4 postFxConst60;              // Offset: 1216 Size:    16 [unused]
//   float4 postFxConst61;              // Offset: 1232 Size:    16 [unused]
//   float4 postFxConst62;              // Offset: 1248 Size:    16 [unused]
//   float4 postFxConst63;              // Offset: 1264 Size:    16 [unused]
//   float4 postFxBloom00;              // Offset: 1280 Size:    16 [unused]
//   float4 postFxBloom01;              // Offset: 1296 Size:    16 [unused]
//   float4 postFxBloom02;              // Offset: 1312 Size:    16 [unused]
//   float4 postFxBloom03;              // Offset: 1328 Size:    16 [unused]
//   float4 postFxBloom04;              // Offset: 1344 Size:    16 [unused]
//   float4 postFxBloom05;              // Offset: 1360 Size:    16 [unused]
//   float4 postFxBloom06;              // Offset: 1376 Size:    16 [unused]
//   float4 postFxBloom07;              // Offset: 1392 Size:    16 [unused]
//   float4 postFxBloom08;              // Offset: 1408 Size:    16 [unused]
//   float4 postFxBloom09;              // Offset: 1424 Size:    16 [unused]
//   float4 postFxBloom10;              // Offset: 1440 Size:    16 [unused]
//   float4 postFxBloom11;              // Offset: 1456 Size:    16 [unused]
//   float4 postFxBloom12;              // Offset: 1472 Size:    16 [unused]
//   float4 postFxBloom13;              // Offset: 1488 Size:    16 [unused]
//   float4 postFxBloom14;              // Offset: 1504 Size:    16 [unused]
//   float4 postFxBloom15;              // Offset: 1520 Size:    16 [unused]
//   float4 postFxBloom16;              // Offset: 1536 Size:    16 [unused]
//   float4 postFxBloom17;              // Offset: 1552 Size:    16 [unused]
//   float4 postFxBloom18;              // Offset: 1568 Size:    16 [unused]
//   float4 postFxBloom19;              // Offset: 1584 Size:    16 [unused]
//   float4 postFxBloom20;              // Offset: 1600 Size:    16 [unused]
//   float4 postFxBloom21;              // Offset: 1616 Size:    16 [unused]
//   float4 postFxBloom22;              // Offset: 1632 Size:    16 [unused]
//   float4 postFxBloom23;              // Offset: 1648 Size:    16 [unused]
//   float4 postFxBloom24;              // Offset: 1664 Size:    16 [unused]
//   float4 postFxBloom25;              // Offset: 1680 Size:    16 [unused]
//   float4 filterTap[8];               // Offset: 1696 Size:   128 [unused]
//   float4 postfxViewMatrix0;          // Offset: 1824 Size:    16 [unused]
//   float4 postfxViewMatrix1;          // Offset: 1840 Size:    16 [unused]
//   float4 postfxViewMatrix2;          // Offset: 1856 Size:    16 [unused]
//   float4 postfxViewMatrix3;          // Offset: 1872 Size:    16 [unused]
//   float4 postfxProjMatrix0;          // Offset: 1888 Size:    16 [unused]
//   float4 postfxProjMatrix1;          // Offset: 1904 Size:    16 [unused]
//   float4 postfxProjMatrix2;          // Offset: 1920 Size:    16 [unused]
//   float4 postfxProjMatrix3;          // Offset: 1936 Size:    16 [unused]
//   float4 postfxViewProjMatrix0;      // Offset: 1952 Size:    16 [unused]
//   float4 postfxViewProjMatrix1;      // Offset: 1968 Size:    16 [unused]
//   float4 postfxViewProjMatrix2;      // Offset: 1984 Size:    16 [unused]
//   float4 postfxViewProjMatrix3;      // Offset: 2000 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// postEffectSrc                     texture  float4          2d             t0      1 
// codeTexture0                      texture   float          2d             t2      1 
// postEffect0                           UAV  float4          2d             u0      1 
// PostFxCBuffer                     cbuffer      NA          NA            cb8      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB8[11], immediateIndexed
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t2
dcl_uav_typed_texture2d (float,float,float,float) u0
dcl_input vThreadIDInGroupFlattened
dcl_input vThreadID.xy
dcl_temps 5
dcl_tgsm_structured g0, 16, 74
dcl_tgsm_structured g1, 4, 74
dcl_thread_group 1, 64, 1
resinfo_indexable(texture2d)(float,float,float,float)_uint r0.xy, l(0), u0.xyzw
resinfo_indexable(texture2d)(float,float,float,float)_uint r0.zw, l(0), t0.zwxy
resinfo_indexable(texture2d)(float,float,float,float)_uint r1.xy, l(0), t2.xyzw
umin r0.xy, r0.xyxx, r1.xyxx
umin r0.xy, r0.xyxx, r0.zwzz
umin r1.xy, r0.xyxx, vThreadID.xyxx
iadd r0.z, vThreadIDInGroupFlattened.x, l(5)
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.xyww, t0.xyzw
ld_indexable(texture2d)(float,float,float,float) r0.w, r1.xyzw, t2.yzwx
max r0.w, r0.w, l(0.00000001)
store_structured g0.xyz, r0.z, l(0), r2.xyzx
store_structured g1.x, r0.z, l(0), r0.w
iadd r0.xy, r0.xyxx, l(-1, -1, 0, 0)
imax r0.xy, r0.xyxx, l(0, 0, 0, 0)
ult r1.z, vThreadIDInGroupFlattened.x, l(5)
if_nz r1.z
  iadd r3.xy, vThreadID.xyxx, l(0, -5, 0, 0)
  imax r3.z, r3.y, l(0)
  imin r3.xy, r0.xyxx, r3.xzxx
  mov r3.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.xyz, r3.xyww, t0.xyzw
  ld_indexable(texture2d)(float,float,float,float) r1.z, r3.xyzw, t2.yzxw
  max r1.z, r1.z, l(0.00000001)
  store_structured g0.xyz, vThreadIDInGroupFlattened.x, l(0), r4.xyzx
  store_structured g1.x, vThreadIDInGroupFlattened.x, l(0), r1.z
else 
  uge r1.z, vThreadIDInGroupFlattened.x, l(59)
  if_nz r1.z
    iadd r1.zw, vThreadID.xxxy, l(0, 0, 0, 5)
    imin r3.xy, r0.xyxx, r1.zwzz
    iadd r0.x, vThreadIDInGroupFlattened.x, l(10)
    mov r3.zw, l(0,0,0,0)
    ld_indexable(texture2d)(float,float,float,float) r4.xyz, r3.xyww, t0.xyzw
    ld_indexable(texture2d)(float,float,float,float) r0.y, r3.xyzw, t2.yxzw
    max r0.y, r0.y, l(0.00000001)
    store_structured g0.xyz, r0.x, l(0), r4.xyzx
    store_structured g1.x, r0.x, l(0), r0.y
  endif 
endif 
sync_g_t
ge r0.x, r0.w, l(0.984375)
if_nz r0.x
  store_uav_typed u0.xyzw, r1.xyyy, r2.xyzw
  ret 
endif 
ld_structured r2.xyz, vThreadIDInGroupFlattened.x, l(0), g0.xyzx
ld_structured r0.x, vThreadIDInGroupFlattened.x, l(0), g1.xxxx
lt r0.y, r0.x, l(0.984375)
add r0.x, -r0.w, r0.x
mul r0.x, |r0.x|, cb8[10].z
mul r0.x, r0.x, -r0.x
exp r0.x, r0.x
mul r3.w, r0.x, l(0.009300)
mul r3.xyz, r2.xyzx, r3.wwww
and r2.xyzw, r0.yyyy, r3.xyzw
iadd r3.xyzw, vThreadIDInGroupFlattened.xxxx, l(1, 2, 3, 4)
ld_structured r4.xyz, r3.x, l(0), g0.xyzx
ld_structured r0.x, r3.x, l(0), g1.xxxx
lt r0.y, r0.x, l(0.984375)
add r0.x, -r0.w, r0.x
mul r0.x, |r0.x|, cb8[10].z
mul r0.x, r0.x, -r0.x
exp r0.x, r0.x
mul r1.z, r0.x, l(0.028002)
mad r4.xyz, r4.xyzx, r1.zzzz, r2.xyzx
mad r4.w, r0.x, l(0.028002), r2.w
movc r2.xyzw, r0.yyyy, r4.xyzw, r2.xyzw
ld_structured r4.xyz, r3.y, l(0), g0.xyzx
ld_structured r0.x, r3.y, l(0), g1.xxxx
lt r0.y, r0.x, l(0.984375)
add r0.x, -r0.w, r0.x
mul r0.x, |r0.x|, cb8[10].z
mul r0.x, r0.x, -r0.x
exp r0.x, r0.x
mul r1.z, r0.x, l(0.065984)
mad r4.xyz, r4.xyzx, r1.zzzz, r2.xyzx
mad r4.w, r0.x, l(0.065984), r2.w
movc r2.xyzw, r0.yyyy, r4.xyzw, r2.xyzw
ld_structured r4.xyz, r3.z, l(0), g0.xyzx
ld_structured r0.x, r3.z, l(0), g1.xxxx
lt r0.y, r0.x, l(0.984375)
add r0.x, -r0.w, r0.x
mul r0.x, |r0.x|, cb8[10].z
mul r0.x, r0.x, -r0.x
exp r0.x, r0.x
mul r1.z, r0.x, l(0.121703)
mad r4.xyz, r4.xyzx, r1.zzzz, r2.xyzx
mad r4.w, r0.x, l(0.121703), r2.w
movc r2.xyzw, r0.yyyy, r4.xyzw, r2.xyzw
ld_structured r3.xyz, r3.w, l(0), g0.xyzx
ld_structured r0.x, r3.w, l(0), g1.xxxx
lt r0.y, r0.x, l(0.984375)
add r0.x, -r0.w, r0.x
mul r0.x, |r0.x|, cb8[10].z
mul r0.x, r0.x, -r0.x
exp r0.x, r0.x
mul r1.z, r0.x, l(0.175713)
mad r3.xyz, r3.xyzx, r1.zzzz, r2.xyzx
mad r3.w, r0.x, l(0.175713), r2.w
movc r2.xyzw, r0.yyyy, r3.xyzw, r2.xyzw
ld_structured r3.xyz, r0.z, l(0), g0.xyzx
ld_structured r0.x, r0.z, l(0), g1.xxxx
lt r0.y, r0.x, l(0.984375)
add r0.x, -r0.w, r0.x
mul r0.x, |r0.x|, cb8[10].z
mul r0.x, r0.x, -r0.x
exp r0.x, r0.x
mul r0.z, r0.x, l(0.198596)
mad r3.xyz, r3.xyzx, r0.zzzz, r2.xyzx
mad r3.w, r0.x, l(0.198596), r2.w
movc r2.xyzw, r0.yyyy, r3.xyzw, r2.xyzw
iadd r3.xyzw, vThreadIDInGroupFlattened.xxxx, l(6, 7, 8, 9)
ld_structured r0.xyz, r3.x, l(0), g0.xyzx
ld_structured r1.z, r3.x, l(0), g1.xxxx
lt r1.w, r1.z, l(0.984375)
add r1.z, -r0.w, r1.z
mul r1.z, |r1.z|, cb8[10].z
mul r1.z, r1.z, -r1.z
exp r1.z, r1.z
mul r3.x, r1.z, l(0.175713)
mad r4.xyz, r0.xyzx, r3.xxxx, r2.xyzx
mad r4.w, r1.z, l(0.175713), r2.w
movc r2.xyzw, r1.wwww, r4.xyzw, r2.xyzw
ld_structured r0.xyz, r3.y, l(0), g0.xyzx
ld_structured r1.z, r3.y, l(0), g1.xxxx
lt r1.w, r1.z, l(0.984375)
add r1.z, -r0.w, r1.z
mul r1.z, |r1.z|, cb8[10].z
mul r1.z, r1.z, -r1.z
exp r1.z, r1.z
mul r3.x, r1.z, l(0.121703)
mad r4.xyz, r0.xyzx, r3.xxxx, r2.xyzx
mad r4.w, r1.z, l(0.121703), r2.w
movc r2.xyzw, r1.wwww, r4.xyzw, r2.xyzw
ld_structured r0.xyz, r3.z, l(0), g0.xyzx
ld_structured r1.z, r3.z, l(0), g1.xxxx
lt r1.w, r1.z, l(0.984375)
add r1.z, -r0.w, r1.z
mul r1.z, |r1.z|, cb8[10].z
mul r1.z, r1.z, -r1.z
exp r1.z, r1.z
mul r3.x, r1.z, l(0.065984)
mad r4.xyz, r0.xyzx, r3.xxxx, r2.xyzx
mad r4.w, r1.z, l(0.065984), r2.w
movc r2.xyzw, r1.wwww, r4.xyzw, r2.xyzw
ld_structured r0.xyz, r3.w, l(0), g0.xyzx
ld_structured r1.z, r3.w, l(0), g1.xxxx
lt r1.w, r1.z, l(0.984375)
add r1.z, -r0.w, r1.z
mul r1.z, |r1.z|, cb8[10].z
mul r1.z, r1.z, -r1.z
exp r1.z, r1.z
mul r3.x, r1.z, l(0.028002)
mad r3.xyz, r0.xyzx, r3.xxxx, r2.xyzx
mad r3.w, r1.z, l(0.028002), r2.w
movc r2.xyzw, r1.wwww, r3.xyzw, r2.xyzw
iadd r0.x, vThreadIDInGroupFlattened.x, l(10)
ld_structured r3.xyz, r0.x, l(0), g0.xyzx
ld_structured r0.x, r0.x, l(0), g1.xxxx
lt r0.y, r0.x, l(0.984375)
add r0.x, -r0.w, r0.x
mul r0.x, |r0.x|, cb8[10].z
mul r0.x, r0.x, -r0.x
exp r0.x, r0.x
mul r0.z, r0.x, l(0.009300)
mad r3.xyz, r3.xyzx, r0.zzzz, r2.xyzx
mad r3.w, r0.x, l(0.009300), r2.w
movc r0.xyzw, r0.yyyy, r3.xyzw, r2.xyzw
div r0.xyz, r0.xyzx, r0.wwww
mov r0.w, l(0)
store_uav_typed u0.xyzw, r1.xyyy, r0.xyzw
ret 
// Approximately 173 instruction slots used
