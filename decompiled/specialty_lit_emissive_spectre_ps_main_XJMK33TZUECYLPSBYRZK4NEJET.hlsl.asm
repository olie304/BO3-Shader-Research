//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:42:17 2021
//
//
// Note: shader requires additional functionality:
//       Early depth-stencil
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float3 colorTint;                  // Offset:  160 Size:    12
//   float baseNormalHeight;            // Offset:  172 Size:     4
//   float2 glossRange;                 // Offset:  176 Size:     8
//   float2 rotateUVs;                  // Offset:  184 Size:     8
//   float2 scrollUVs;                  // Offset:  192 Size:     8
//   float2 scaleUVs;                   // Offset:  200 Size:     8
//   float2 offsetUVs;                  // Offset:  208 Size:     8
//   float2 zoomUVs;                    // Offset:  216 Size:     8
//   float zoomRate;                    // Offset:  224 Size:     4
//   float layerDepth;                  // Offset:  228 Size:     4
//   bool clampU;                       // Offset:  232 Size:     4
//   bool clampV;                       // Offset:  236 Size:     4
//   float2 flickerSeed;                // Offset:  240 Size:     8
//   float flickerSpeed;                // Offset:  248 Size:     4
//   float2 flickerRange;               // Offset:  256 Size:     8
//   float flickerPower;                // Offset:  264 Size:     4
//   bool useAsCamo;                    // Offset:  268 Size:     4
//   bool relativeHDR;                  // Offset:  272 Size:     4
//   bool invertFalloff;                // Offset:  276 Size:     4
//   float3 emissiveTint1;              // Offset:  288 Size:    12
//   float hdrScale;                    // Offset:  300 Size:     4
//   float emissiveFalloffPower;        // Offset:  304 Size:     4
//   float alphaCooling;                // Offset:  308 Size:     4
//   float coolingFactor;               // Offset:  312 Size:     4
//   float2 distortionRotateUVs;        // Offset:  320 Size:     8
//   float2 distortionScrollUVs;        // Offset:  328 Size:     8
//   float2 distortionScaleUVs;         // Offset:  336 Size:     8
//   float2 distortionOffsetUVs;        // Offset:  344 Size:     8
//   float2 distortionZoomUVs;          // Offset:  352 Size:     8
//   float distortionZoomRate;          // Offset:  360 Size:     4
//   float distortionAmount;            // Offset:  364 Size:     4
//   float2 maskRotateUVs;              // Offset:  368 Size:     8
//   float2 maskScrollUVs;              // Offset:  376 Size:     8
//   float2 maskScaleUVs;               // Offset:  384 Size:     8
//   float2 maskOffsetUVs;              // Offset:  392 Size:     8
//   float2 maskZoomUVs;                // Offset:  400 Size:     8
//   float maskZoomRate;                // Offset:  408 Size:     4
//   float2 maskFalloff;                // Offset:  416 Size:     8
//   float2 specularScroll;             // Offset:  424 Size:     8
//   float2 specularScale;              // Offset:  432 Size:     8
//   bool noReceiveShadow;              // Offset:  440 Size:     4
//   float scriptReplacement;           // Offset:  444 Size:     4 [unused]
//   float alphaRevealSoftEdge;         // Offset:  448 Size:     4
//   float alphaRevealRamp;             // Offset:  452 Size:     4
//   float scriptHDRReplacement;        // Offset:  456 Size:     4 [unused]
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4 [unused]
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for shaderConstantSetBuffer
// {
//
//   struct GpuShaderConstantSet
//   {
//       
//       float4 scriptVector0;          // Offset:    0
//       float4 scriptVector1;          // Offset:   16
//       float4 scriptVector2;          // Offset:   32
//       float4 scriptVector3;          // Offset:   48
//       float4 scriptVector4;          // Offset:   64
//       float4 scriptVector5;          // Offset:   80
//       float4 scriptVector6;          // Offset:   96
//       float4 scriptVector7;          // Offset:  112
//       float4 weaponParam0;           // Offset:  128
//       float4 weaponParam1;           // Offset:  144
//       float4 weaponParam2;           // Offset:  160
//       float4 weaponParam3;           // Offset:  176
//       float4 weaponParam4;           // Offset:  192
//       float4 weaponParam5;           // Offset:  208
//       float4 weaponParam6;           // Offset:  224
//       float4 weaponParam7;           // Offset:  240
//       float4 characterParam0;        // Offset:  256
//       float4 characterParam1;        // Offset:  272
//       float4 characterParam2;        // Offset:  288
//       float4 characterParam3;        // Offset:  304
//       float4 characterParam4;        // Offset:  320
//       float4 characterParam5;        // Offset:  336
//       float4 characterParam6;        // Offset:  352
//       float4 characterParam7;        // Offset:  368
//
//   } $Element;                        // Offset:    0 Size:   384
//
// }
//
// Resource bind info for modelInstanceBuffer
// {
//
//   struct ModelInstanceData
//   {
//       
//       uint boneArrayIndex;           // Offset:    0
//       uint shaderConstantSet;        // Offset:    4
//       uint flagsAndPrevFrameIndex;   // Offset:    8
//       uint worldMatrix;              // Offset:   12
//       uint siegeAnimStateOffset;     // Offset:   16
//       uint prevFrameSiegeAnimStateOffset;// Offset:   20
//
//   } $Element;                        // Offset:    0 Size:    24
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// colorSampler                      sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// normalSampler                     sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// lookupSampler                     sampler      NA          NA             s5      1 
// revealSampler                     sampler      NA          NA             s6      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// shaderConstantSetBuffer           texture  struct         r/o             t0      1 
// modelInstanceBuffer               texture  struct         r/o             t4      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// colorMap                          texture  float4          2d            t21      1 
// tintMask                          texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// normalMap                         texture  float4          2d            t24      1 
// flickerLookupMap                  texture  float4          2d            t25      1 
// camoMaskMap                       texture  float4          2d            t26      1 
// emissiveMap                       texture  float4          2d            t29      1 
// alphaMask                         texture  float4          2d            t30      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// distortionMap                     texture  float4          2d            t37      1 
// revealMap                         texture  float4          2d            t38      1 
// edgeFadeMap                       texture  float4          2d            t46      1 
// specularMask                      texture  float4          2d            t47      1 
// gOit_Pixels                           UAV    uint          2d             u6      1 
// gOit_Nodes                            UAV   uint2     2darray             u7      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyz 
// COLOR                    0   xyz         1     NONE   float   xyz 
// COLOR                    1      w        1     NONE   float      w
// TEXCOORD                 0   xy          2     NONE   float   xy  
// UVOFFSETS                0   xyz         3     NONE   float   xyz 
// TEXCOORD                 4      w        3     NONE    uint      w
// TEXCOORD                 1   xyz         4     NONE   float   xyz 
// TEXCOORD                 2   xyz         5     NONE   float   xyz 
// TEXCOORD                 3   xyz         6     NONE   float   xyz 
// OFFPOSITION              0   xyz         7     NONE   float   xyz 
// SV_IsFrontFace           0   x           8    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | forceEarlyDepthStencil
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[29], immediateIndexed
dcl_constantbuffer CB1[93], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_structured t0, 384
dcl_resource_structured t4, 24
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2d (float,float,float,float) t26
dcl_resource_texture2d (float,float,float,float) t29
dcl_resource_texture2d (float,float,float,float) t30
dcl_resource_texture2darray (float,float,float,float) t31
dcl_resource_texture2d (float,float,float,float) t37
dcl_resource_texture2d (float,float,float,float) t38
dcl_resource_texture2d (float,float,float,float) t46
dcl_resource_texture2d (float,float,float,float) t47
dcl_uav_typed_texture2d (uint,uint,uint,uint) u6
dcl_uav_typed_texture2darray (uint,uint,uint,uint) u7
dcl_input_ps_siv linear noperspective v0.xyz, position
dcl_input_ps linear v1.xyz
dcl_input_ps linear v1.w
dcl_input_ps linear v2.xy
dcl_input_ps constant v3.xyz
dcl_input_ps constant v3.w
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyz
dcl_input_ps_sgv constant v8.x, is_front_face
dcl_output o0.xyzw
dcl_temps 47
if_nz cb0[16].w
  ld_structured_indexable(structured_buffer, stride=24)(mixed,mixed,mixed,mixed) r0.x, v3.w, l(4), t4.xxxx
  ld_structured_indexable(structured_buffer, stride=384)(mixed,mixed,mixed,mixed) r0.yzw, r0.x, l(208), t0.xxyz
  ld_structured_indexable(structured_buffer, stride=384)(mixed,mixed,mixed,mixed) r1.xyz, r0.x, l(224), t0.xyzx
  ld_structured_indexable(structured_buffer, stride=384)(mixed,mixed,mixed,mixed) r2.xyz, r0.x, l(240), t0.xyzx
  sample_indexable(texture2d)(float,float,float,float) r3.xyz, v2.xyxx, t26.xyzw, s1
  dp3_sat r0.x, r3.xyzx, r0.yzwy
  mov r3.xy, v2.xyxx
  mov r3.z, l(1.000000)
  dp3 r1.x, r1.xyzx, r3.xyzx
  dp3 r1.y, r2.xyzx, r3.xyzx
else 
  mov r1.xy, v2.xyxx
  mov r0.x, l(1.000000)
endif 
dp3 r0.y, -v7.xyzx, -v7.xyzx
rsq r0.y, r0.y
mul r2.xyz, r0.yyyy, -v7.xyzx
dp3 r3.x, r2.xyzx, v5.xyzx
dp3 r3.y, r2.xyzx, v6.xyzx
dp3 r0.z, r2.xyzx, v4.xyzx
lt r0.w, l(0.000000), r0.z
div r1.zw, -r3.xxxy, r0.zzzz
and r1.zw, r0.wwww, r1.zzzw
add r3.xy, r1.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r3.zw, r1.zzzw, l(0.000000, 0.000000, 0.000010, 0.000010)
mul r4.xy, r3.zwzz, cb0[21].xyxx
mad r4.xy, r3.xyxx, cb0[21].xyxx, r4.xyxx
mad r4.xy, cb0[21].zwzz, cb0[21].xyxx, r4.xyxx
mul r4.zw, cb0[20].zzzw, cb1[69].wwww
mad r0.w, cb0[20].y, cb1[69].w, l(1.000000)
mul r0.w, r0.w, cb0[20].x
mul r0.w, r0.w, l(0.01745329)
sincos r5.x, r6.x, r0.w
mov r6.y, r6.x
mov r6.z, r5.x
dp2 r7.x, r6.yzyy, r4.xyxx
mov r6.x, -r5.x
dp2 r7.y, r6.xyxx, r4.xyxx
mad r4.xy, r4.zwzz, cb0[21].xyxx, r7.xyxx
mul r0.w, cb0[22].z, cb1[69].w
sincos null, r0.w, r0.w
mad r0.w, r0.w, l(0.500000), l(0.500000)
add r0.w, -r0.w, l(1.000000)
add r2.w, -cb0[22].x, cb0[22].y
mad r0.w, r0.w, r2.w, cb0[22].x
div r4.xy, r4.xyxx, r0.wwww
add r4.xy, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r4.xy, r4.xyxx, t37.xyzw, s3
mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r4.zw, cb0[22].wwww, cb1[44].zzzw
add r5.xy, v2.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r5.zw, r3.zzzw, cb0[12].zzzw
mad r5.xy, r5.xyxx, cb0[12].zwzz, r5.zwzz
mad r5.xy, cb0[13].xyxx, cb0[12].zwzz, r5.xyxx
mad r0.w, cb0[11].w, cb1[69].w, l(1.000000)
mul r0.w, r0.w, cb0[11].z
mul r0.w, r0.w, l(0.01745329)
sincos r6.x, r7.x, r0.w
mov r7.y, r7.x
mov r7.z, r6.x
dp2 r8.x, r7.yzyy, r5.xyxx
mov r7.x, -r6.x
dp2 r8.y, r7.xyxx, r5.xyxx
mul r5.xy, cb0[12].xyxx, cb1[69].wwww
mad r5.xy, r5.xyxx, cb0[12].zwzz, r8.xyxx
mul r0.w, cb0[14].x, cb1[69].w
sincos null, r0.w, r0.w
mad r0.w, r0.w, l(0.500000), l(0.500000)
add r0.w, -r0.w, l(1.000000)
add r2.w, -cb0[13].z, cb0[13].w
mad r0.w, r0.w, r2.w, cb0[13].z
div r5.xy, r5.xyxx, r0.wwww
add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
mov_sat r5.zw, r5.xxxy
movc r5.xy, cb0[14].zwzz, r5.zwzz, r5.xyxx
mad r5.xy, r4.xyxx, r4.zwzz, r5.xyxx
sample_indexable(texture2d)(float,float,float,float) r6.xyzw, r5.xyxx, t21.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r0.w, r5.xyxx, t22.yzwx, s1
add r7.xyz, cb0[10].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r7.xyz, r0.wwww, r7.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r6.xyz, r6.xyzx, r7.xyzx
mul r6.xyz, r6.xyzx, v1.xyzx
mul_sat r0.w, cb0[11].y, l(0.05882353)
sample_indexable(texture2d)(float,float,float,float) r7.xyz, r5.xyxx, t24.xyzw, s3
add r7.xyz, r7.xyzx, l(-0.500000, -0.500000, -0.000000, 0.000000)
mad r7.xyz, cb0[10].wwww, r7.xyzx, l(0.500000, 0.500000, 0.000000, 0.000000)
mad r5.zw, r7.xxxy, l(0.000000, 0.000000, 1.99218750, 1.99218750), l(0.000000, 0.000000, -1.000000, -1.000000)
dp2 r2.w, r5.zwzz, r5.zwzz
add r2.w, -r2.w, l(1.000000)
max r2.w, r2.w, l(0.000000)
sqrt r2.w, r2.w
mul r7.x, r7.z, r7.z
mul r7.x, r7.x, l(0.33333334)
min r7.x, r7.x, l(1.000000)
movc r7.y, v8.x, l(1.000000), l(-1.000000)
dp3 r7.z, v4.xyzx, v4.xyzx
rsq r7.z, r7.z
mul r8.xyz, r7.zzzz, v4.xyzx
mul r8.xyz, r7.yyyy, r8.xyzx
dp3 r7.z, v5.xyzx, v5.xyzx
rsq r7.z, r7.z
mul r9.xyz, r7.zzzz, v5.xyzx
mul r9.xyz, r7.yyyy, r9.xyzx
dp3 r7.z, v6.xyzx, v6.xyzx
rsq r7.z, r7.z
mul r10.xyz, r7.zzzz, v6.xyzx
mul r7.yzw, r7.yyyy, r10.xxyz
mul r0.w, r0.w, l(-17.000000)
exp r0.w, r0.w
add r0.w, r0.w, r7.x
log r0.w, r0.w
mul r0.w, r0.w, l(-0.05882353)
max r10.y, r0.w, l(0.000000)
mul r7.xyz, r5.wwww, r7.yzwy
mad r7.xyz, r9.xyzx, r5.zzzz, r7.xyzx
mad r7.xyz, r8.xyzx, r2.wwww, r7.xyzx
dp3 r0.w, r7.xyzx, r7.xyzx
rsq r0.w, r0.w
mul r7.xyz, r0.wwww, r7.xyzx
mul r5.zw, cb0[26].zzzw, cb1[69].wwww
mad r5.zw, r1.xxxy, cb0[27].xxxy, r5.zzzw
sample_indexable(texture2d)(float,float,float,float) r0.w, r5.zwzz, t47.yzwx, s6
add r2.w, cb0[14].y, l(0.000010)
mad r1.zw, r1.zzzw, r2.wwww, r3.xxxy
add r1.zw, r1.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
mov_sat r5.zw, r1.zzzw
movc r1.zw, cb0[14].zzzw, r5.zzzw, r1.zzzw
mad r1.zw, r4.xxxy, r4.zzzw, r1.zzzw
sample_indexable(texture2d)(float,float,float,float) r8.xyzw, r1.zwzz, t29.xyzw, s1
mul r8.xyzw, r8.xyzw, cb0[18].xyzw
mov_sat r9.xyz, r8.xyzx
log r9.xyz, r9.xyzx
mul r9.xyz, r9.xyzx, cb0[19].yyyy
exp r9.xyz, r9.xyzx
mov_sat r0.z, r0.z
log r1.z, r0.z
mul r1.w, r1.z, cb0[19].x
exp r1.w, r1.w
add r0.z, -r0.z, l(1.000000)
log r0.z, r0.z
mul r0.z, r0.z, cb0[19].x
exp r0.z, r0.z
movc r0.z, cb0[17].y, r0.z, r1.w
eq r1.w, cb0[19].x, l(0.000000)
movc r0.z, r1.w, l(1.000000), r0.z
ld_structured_indexable(structured_buffer, stride=24)(mixed,mixed,mixed,mixed) r1.w, v3.w, l(4), t4.xxxx
ld_structured_indexable(structured_buffer, stride=384)(mixed,mixed,mixed,mixed) r1.w, r1.w, l(52), t0.xxxx
mov_sat r1.w, r1.w
mul r8.xyz, r1.wwww, r8.xyzx
mul r9.xyz, r1.wwww, r9.xyzx
mul r0.z, r0.z, r8.w
mul r8.xyz, r0.zzzz, r8.xyzx
mul r9.xyz, r0.zzzz, r9.xyzx
add r0.z, v3.y, v3.x
add r0.z, r0.z, v3.z
add r0.z, r0.z, cb0[15].y
frc r0.z, r0.z
mad r11.y, cb1[69].w, cb0[15].z, r0.z
mov r11.x, cb0[15].x
sample_l_indexable(texture2d)(float,float,float,float) r0.z, r11.xyxx, t25.yzxw, s5, l(0.000000)
log r0.z, |r0.z|
mul r0.z, r0.z, cb0[16].z
exp r0.z, r0.z
add r1.w, -cb0[16].x, cb0[16].y
mad r0.z, r0.z, r1.w, cb0[16].x
mul r11.xyz, r0.zzzz, r8.xyzx
div r11.xyz, r11.xyzx, cb0[18].wwww
dp3_sat r1.w, r11.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
mad r1.w, r6.w, v1.w, r1.w
mul r3.zw, r3.zzzw, cb0[24].xxxy
mad r3.xy, r3.xyxx, cb0[24].xyxx, r3.zwzz
mad r3.xy, cb0[24].zwzz, cb0[24].xyxx, r3.xyxx
mul r3.zw, cb0[23].zzzw, cb1[69].wwww
mad r2.w, cb0[23].y, cb1[69].w, l(1.000000)
mul r2.w, r2.w, cb0[23].x
mul r2.w, r2.w, l(0.01745329)
sincos r11.x, r12.x, r2.w
mov r12.y, r12.x
mov r12.z, r11.x
dp2 r13.x, r12.yzyy, r3.xyxx
mov r12.x, -r11.x
dp2 r13.y, r12.xyxx, r3.xyxx
mad r3.xy, r3.zwzz, cb0[24].xyxx, r13.xyxx
mul r2.w, cb0[25].z, cb1[69].w
sincos null, r2.w, r2.w
mad r2.w, r2.w, l(0.500000), l(0.500000)
add r2.w, -r2.w, l(1.000000)
add r3.z, -cb0[25].x, cb0[25].y
mad r2.w, r2.w, r3.z, cb0[25].x
div r3.xy, r3.xyxx, r2.wwww
add r3.xy, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
mov_sat r3.zw, r3.xxxy
movc r3.xy, cb0[14].zwzz, r3.zwzz, r3.xyxx
mad r3.xy, r4.xyxx, r4.zwzz, r3.xyxx
sample_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t30.yzwx, s1
mul r1.z, r1.z, cb0[26].x
exp r1.z, r1.z
mul_sat r1.z, r1.z, cb0[26].y
sample_indexable(texture2d)(float,float,float,float) r1.x, r1.xyxx, t46.xyzw, s1
add r1.y, r2.w, r1.z
add r1.x, -r1.x, r1.y
add_sat r1.x, r1.x, l(1.000000)
mul r1.x, r1.x, r1.w
sample_indexable(texture2d)(float,float,float,float) r1.y, r5.xyxx, t38.yxzw, s6
mad_sat r1.z, v1.w, l(0.998000), l(0.001000)
add r1.w, -r1.z, l(1.000000)
mov_sat r2.w, cb0[28].y
log r1.z, r1.z
mul r1.z, r1.z, r2.w
exp r1.z, r1.z
mov r3.x, -r1.z
log r1.z, r1.w
mul r1.z, r1.z, r2.w
exp r3.y, r1.z
mad_sat r1.zw, cb0[28].xxxx, r3.xxxy, r1.wwww
add r1.y, -r1.z, r1.y
add r1.z, -r1.z, r1.w
div_sat r1.y, r1.y, r1.z
mul r1.x, r1.y, r1.x
ftou r1.yz, v0.xxyx
ge r1.w, v0.z, l(0.984375)
mul r2.w, v0.z, l(1.01587307)
mad r3.x, v0.z, l(64.000000), l(-63.000000)
movc r1.w, r1.w, r3.x, r2.w
max r1.w, r1.w, l(0.00000001)
rcp r1.w, r1.w
ine r2.w, cb1[92].x, l(0)
utof r3.xy, r1.zyzz
dp2 r3.z, r3.yxyy, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r3.z, r3.z
mul r3.z, r3.z, l(52.982918)
frc r3.z, r3.z
mad r3.z, r3.z, l(6.28318548), cb1[70].w
sincos r4.x, r5.x, r3.z
dp2 r3.x, r3.xyxx, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r3.x, r3.x
mul r3.x, r3.x, l(52.982918)
frc r3.x, r3.x
mad r3.x, r3.x, l(6.28318548), cb1[70].w
sincos r3.x, r11.x, r3.x
dp3_sat r10.x, r7.xyzx, r2.xyzx
dp3 r3.y, -r2.xyzx, r7.xyzx
add r3.y, r3.y, r3.y
mad r12.xyz, r7.xyzx, -r3.yyyy, -r2.xyzx
mul r3.y, r10.y, l(17.000000)
exp r3.y, r3.y
add r3.y, r3.y, l(2.000000)
div r3.y, l(2.000000), r3.y
sqrt r3.z, r3.y
add r3.w, -r10.y, l(1.000000)
mul r4.z, r3.w, l(5.000000)
mad r4.w, r3.w, l(5.000000), l(-2.500000)
mul r4.w, r4.w, l(0.400000)
max r4.w, r4.w, l(0.000000)
mul r4.w, r4.w, l(100.000000)
mad r10.zw, -r3.wwww, l(0.000000, 0.000000, 10.000000, 5.000000), l(0.000000, 0.000000, 6.857410, 7.085000)
exp r5.w, r10.z
mul r5.w, r5.w, r10.x
mul r5.w, r5.w, l(9.136810)
mul r6.w, r3.w, r4.z
mad r6.w, -r6.w, l(2.015905), r10.w
exp r6.w, r6.w
mul r6.w, r6.w, r10.x
mul r6.w, r6.w, l(9.708090)
max r5.w, r5.w, r6.w
max r5.w, r5.w, l(1.268160)
iadd r6.w, cb2[0].y, -cb2[58].x
mul r1.w, r1.w, l(0.00781250)
min r1.w, r1.w, l(15.000000)
ftou r1.w, r1.w
ushr r13.xy, r1.yzyy, l(6, 6, 0, 0)
ishl r13.z, r1.w, l(4)
and r1.y, r6.w, l(-32)
iadd r1.z, -r1.y, r6.w
and r1.w, cb2[0].y, l(-32)
iadd r8.w, -r1.w, cb2[0].y
mov r14.xy, l(0,0,0,0)
mov r15.w, l(0)
mov r16.yz, l(0,0,1.000000,0)
mov r17.xy, l(0,0,0,0)
mov r18.x, l(1.000000)
mov r19.xy, l(0,0,0,0)
mov r20.xy, l(0,0,0,0)
mov r21.xyzw, l(0,0,0,0)
mov r22.yzw, l(0,0,0,0)
mov r9.w, r1.y
loop 
  uge r10.z, r9.w, cb2[0].y
  breakc_nz r10.z
  ushr r14.z, r9.w, l(5)
  iadd r15.xyz, r13.xyzx, r14.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r10.z, r15.xyzw, t7.yzxw
  ieq r10.w, r1.y, r9.w
  bfi r11.y, r1.z, l(0), l(0), r10.z
  movc r10.z, r10.w, r11.y, r10.z
  ieq r10.w, r1.w, r9.w
  ubfe r11.y, r8.w, l(0), r10.z
  movc r10.z, r10.w, r11.y, r10.z
  iadd r10.w, r9.w, cb2[0].x
  mov r23.xyzw, r21.xyzw
  mov r24.xyz, r22.yzwy
  mov r11.y, r10.z
  loop 
    breakc_z r11.y
    firstbit_lo r11.z, r11.y
    ishl r11.w, l(1), r11.z
    and r13.w, r11.w, r11.y
    if_nz r13.w
      xor r11.y, r11.w, r11.y
      iadd r11.w, r10.w, r11.z
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r25.xyzw, r11.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r15.xy, r11.w, l(16), t11.xyxx
      add r25.xyz, r25.xyzx, -v7.xyzx
      mov r15.z, r25.w
      lt r15.xyz, |r25.xyzx|, r15.zxyz
      and r11.w, r15.y, r15.x
      and r11.w, r15.z, r11.w
      if_nz r11.w
        iadd r11.z, r9.w, r11.z
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r11.z, l(0), t15.wxyz
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r14.zw, r11.z, l(96), t15.xxxy
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r11.z, l(116), t15.zwxy
        add r15.xyz, -r25.yzwy, v7.xyzx
        and r11.w, r26.w, l(0x0000ffff)
        ubfe r13.w, l(6), l(25), r26.w
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r11.w, l(0), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r11.w, l(16), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r11.w, l(32), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r11.w, l(48), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r11.w, l(64), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r11.w, l(80), t16.xyzw
        dp3 r16.w, r27.xyzx, r15.xyzx
        add_sat r16.w, r27.w, r16.w
        dp3 r17.w, r28.xyzx, r15.xyzx
        add_sat r17.w, r28.w, r17.w
        mul r16.w, r16.w, r17.w
        dp3 r17.w, r29.xyzx, r15.xyzx
        add_sat r17.w, r29.w, r17.w
        mul r16.w, r16.w, r17.w
        dp3 r17.w, r30.xyzx, r15.xyzx
        add_sat r17.w, r30.w, r17.w
        mul r16.w, r16.w, r17.w
        dp3 r17.w, r31.xyzx, r15.xyzx
        add_sat r17.w, r31.w, r17.w
        mul r16.w, r16.w, r17.w
        dp3 r17.w, r32.xyzx, r15.xyzx
        add_sat r17.w, r32.w, r17.w
        mul r16.x, r16.w, r17.w
        and r16.w, r14.z, l(1)
        movc r16.xw, r16.wwww, r16.xxxy, r16.zzzx
        mov r17.w, r14.z
        mov r27.xy, r16.xwxx
        mov r18.z, l(1)
        loop 
          ige r18.w, r18.z, r13.w
          breakc_nz r18.w
          iadd r18.w, r11.w, r18.z
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r18.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r18.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r18.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r18.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r18.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r18.w, l(80), t16.xyzw
          dp3 r18.w, r28.xyzx, r15.xyzx
          add_sat r18.w, r28.w, r18.w
          mul r18.w, r18.w, r27.x
          dp3 r19.w, r29.xyzx, r15.xyzx
          add_sat r19.w, r29.w, r19.w
          mul r18.w, r18.w, r19.w
          dp3 r19.w, r30.xyzx, r15.xyzx
          add_sat r19.w, r30.w, r19.w
          mul r18.w, r18.w, r19.w
          dp3 r19.w, r31.xyzx, r15.xyzx
          add_sat r19.w, r31.w, r19.w
          mul r18.w, r18.w, r19.w
          dp3 r19.w, r32.xyzx, r15.xyzx
          add_sat r19.w, r32.w, r19.w
          mul r18.w, r18.w, r19.w
          dp3 r19.w, r33.xyzx, r15.xyzx
          add_sat r19.w, r33.w, r19.w
          mul r27.x, r18.w, r19.w
          ushr r20.w, r17.w, l(2)
          ubfe r25.w, l(1), l(2), r17.w
          and r27.z, r20.w, l(2)
          max r27.w, r27.x, r27.y
          mad r18.w, -r18.w, r19.w, l(1.000000)
          mul r18.w, r18.w, r27.y
          movc r18.y, r27.z, r18.w, r27.w
          movc r27.xy, r25.wwww, r27.xyxx, r18.xyxx
          iadd r18.z, r18.z, l(1)
          mov r17.w, r20.w
        endloop 
        mov_sat r27.y, r27.y
        mul r11.w, r14.w, r27.y
        lt r13.w, l(0.000000), r11.w
        if_nz r13.w
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r11.z, l(16), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r11.z, l(32), t15.yxwz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r11.z, l(48), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r11.z, l(64), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r11.z, l(80), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r11.z, l(132), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r11.z, l(148), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r11.z, l(164), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r11.z, l(180), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r11.z, l(196), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xy, r11.z, l(212), t15.xyxx
          mad r24.z, r27.y, r14.w, r24.z
          mul r11.z, r26.z, r11.w
          mov r26.z, r33.z
          dp3 r11.w, r12.xyzx, r26.xyzx
          dp3 r13.w, r15.xyzx, r26.xyzx
          add r13.w, -r33.w, r13.w
          ge r14.z, r13.w, l(0.000000)
          max r13.w, r4.w, |r13.w|
          movc r13.w, r14.z, r13.w, -r13.w
          max r11.w, -r11.w, l(0.00000010)
          div r11.w, r13.w, r11.w
          min r11.w, |r11.w|, l(131072.000000)
          mov r33.z, r34.z
          dp3 r13.w, r12.xyzx, r33.xyzx
          dp3 r14.z, r15.xyzx, r33.xyzx
          add r14.z, -r34.w, r14.z
          ge r14.w, r14.z, l(0.000000)
          max r14.z, r4.w, |r14.z|
          movc r14.z, r14.w, r14.z, -r14.z
          max r13.w, -r13.w, l(0.00000010)
          div r13.w, r14.z, r13.w
          min r11.w, r11.w, |r13.w|
          mov r34.z, r35.z
          dp3 r13.w, r12.xyzx, r34.xyzx
          dp3 r14.z, r15.xyzx, r34.xyzx
          add r14.z, -r35.w, r14.z
          ge r14.w, r14.z, l(0.000000)
          max r14.z, r4.w, |r14.z|
          movc r14.z, r14.w, r14.z, -r14.z
          max r13.w, -r13.w, l(0.00000010)
          div r13.w, r14.z, r13.w
          min r11.w, r11.w, |r13.w|
          mov r35.z, r36.z
          dp3 r13.w, r12.xyzx, r35.xyzx
          dp3 r14.z, r15.xyzx, r35.xyzx
          add r14.z, -r36.w, r14.z
          ge r14.w, r14.z, l(0.000000)
          max r14.z, r4.w, |r14.z|
          movc r14.z, r14.w, r14.z, -r14.z
          max r13.w, -r13.w, l(0.00000010)
          div r13.w, r14.z, r13.w
          min r11.w, r11.w, |r13.w|
          mov r36.z, r37.x
          dp3 r13.w, r12.xyzx, r36.xyzx
          dp3 r14.z, r15.xyzx, r36.xyzx
          add r14.z, -r37.y, r14.z
          ge r14.w, r14.z, l(0.000000)
          max r14.z, r4.w, |r14.z|
          movc r14.z, r14.w, r14.z, -r14.z
          max r13.w, -r13.w, l(0.00000010)
          div r13.w, r14.z, r13.w
          min r11.w, r11.w, |r13.w|
          mov r38.zw, r37.zzzw
          dp3 r13.w, r12.zxyz, r38.xzwx
          dp3 r14.z, r15.zxyz, r38.xzwx
          add r14.z, -r38.y, r14.z
          ge r14.w, r14.z, l(0.000000)
          max r14.z, r4.w, |r14.z|
          movc r14.z, r14.w, r14.z, -r14.z
          max r13.w, -r13.w, l(0.00000010)
          div r13.w, r14.z, r13.w
          min r11.w, r11.w, |r13.w|
          mov r26.x, r30.w
          mov r26.yz, r31.zzwz
          add r18.yzw, r15.xxyz, r26.xxyz
          mad r18.yzw, r12.xxyz, r11.wwww, r18.yyzw
          dp3 r13.w, r18.yzwy, r18.yzwy
          sqrt r13.w, r13.w
          div r11.w, r11.w, r13.w
          add r11.w, r11.w, r11.w
          sqrt r11.w, r11.w
          mad r11.w, r3.w, l(5.000000), r11.w
          add r11.w, r11.w, l(-0.844800)
          mov r25.y, r28.z
          mov r25.z, r29.x
          dp3 r33.x, r18.yzwy, r25.xyzx
          mov r26.xy, r28.xwxx
          mov r26.z, r29.w
          dp3 r33.y, r18.yzwy, r26.xyzx
          mov r29.x, r28.y
          dp3 r33.z, r18.yzwy, r29.xyzx
          ubfe r13.w, l(9), l(16), r26.w
          utof r33.w, r13.w
          sample_l_indexable(texturecubearray)(float,float,float,float) r18.yzw, r33.xyzw, t8.wxyz, s2, r11.w
          dp3 r28.x, r15.xyzx, r25.xyzx
          dp3 r28.y, r15.xyzx, r26.xyzx
          dp3 r28.z, r15.xyzx, r29.xyzx
          mad_sat r15.xyz, r28.xyzx, r30.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
          mov r31.z, r32.x
          mad r15.xyz, r15.xyzx, r31.xyzx, r32.yzwy
          dp3 r33.x, r7.xyzx, r25.xyzx
          dp3 r33.y, r7.xyzx, r26.xyzx
          dp3 r33.z, r7.xyzx, r29.xyzx
          lt r25.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r33.xyzx
          movc r17.z, r25.x, l(0), l(0.500000)
          add r26.xyz, r15.xyzx, r17.xyzx
          sample_l_indexable(texture3d)(float,float,float,float) r26.xyz, r26.xyzx, t17.xyzw, s4, l(0.000000)
          mul r27.xzw, r33.xxyz, r33.xxyz
          mul r27.xzw, r11.zzzz, r27.xxzw
          movc r19.z, r25.y, l(0), l(0.500000)
          add r25.xyw, r15.xyxz, r19.xyxz
          sample_l_indexable(texture3d)(float,float,float,float) r25.xyw, r25.xywx, t18.xywz, s4, l(0.000000)
          mul r25.xyw, r27.zzzz, r25.xyxw
          mad r25.xyw, r26.xyxz, r27.xxxx, r25.xyxw
          movc r20.z, r25.z, l(0), l(0.500000)
          add r15.xyz, r15.xyzx, r20.xyzx
          sample_l_indexable(texture3d)(float,float,float,float) r15.xyz, r15.xyzx, t19.xyzw, s4, l(0.000000)
          mad r15.xyz, r15.xyzx, r27.wwww, r25.xywx
          sample_l_indexable(texturecubearray)(float,float,float,float) r25.xyz, r33.xyzw, t8.xyzw, s2, l(6.000000)
          mul r26.xyz, r15.xyzx, r25.xyzx
          dp3 r11.w, r26.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r23.xyz, r15.xyzx, r25.xyzx, r23.xyzx
          mul r13.w, r5.w, r11.w
          mul r15.xyz, r11.zzzz, r18.yzwy
          dp3 r11.z, r15.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r11.z, r5.w, r11.w, r11.z
          div r11.z, r13.w, r11.z
          mov r25.x, r23.w
          mov r25.yz, r24.xxyx
          mad r24.xyw, r15.yzyx, r11.zzzz, r25.yzyx
          mov r23.w, r24.w
        endif 
      endif 
    endif 
  endloop 
  mov r21.xyzw, r23.xyzw
  mov r22.yzw, r24.xxyz
  iadd r9.w, r9.w, l(32)
endloop 
lt r1.w, r22.w, l(1.000000)
if_nz r1.w
  mov r14.xy, l(0,0,0,0)
  mov r15.w, l(0)
  mov r16.yz, l(0,0,1.000000,0)
  mov r17.xy, l(0,0,0,0)
  mov r18.x, l(1.000000)
  mov r19.xy, l(0,0,0,0)
  mov r20.xy, l(0,0,0,0)
  mov r23.x, r21.w
  mov r23.yzw, r22.yyzw
  mov r11.yzw, r21.xxyz
  mov r1.w, r22.w
  mov r8.w, l(0)
  loop 
    uge r9.w, r8.w, r6.w
    breakc_nz r9.w
    ushr r14.z, r8.w, l(5)
    iadd r15.xyz, r13.xyzx, r14.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r9.w, r15.xyzw, t7.yzwx
    ieq r10.z, r1.y, r8.w
    ubfe r10.w, r1.z, l(0), r9.w
    movc r9.w, r10.z, r10.w, r9.w
    iadd r10.z, r8.w, cb2[0].x
    mov r24.xyzw, r23.xyzw
    mov r15.xyz, r11.yzwy
    mov r10.w, r1.w
    mov r13.w, r9.w
    loop 
      breakc_z r13.w
      firstbit_lo r14.z, r13.w
      ishl r14.w, l(1), r14.z
      and r16.w, r13.w, r14.w
      if_nz r16.w
        xor r13.w, r13.w, r14.w
        iadd r14.w, r10.z, r14.z
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r25.xyzw, r14.w, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r26.xy, r14.w, l(16), t11.xyxx
        add r25.xyz, r25.xyzx, -v7.xyzx
        mov r26.z, r25.w
        lt r25.xyz, |r25.xyzx|, r26.zxyz
        and r14.w, r25.y, r25.x
        and r14.w, r25.z, r14.w
        if_nz r14.w
          iadd r14.z, r8.w, r14.z
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r14.z, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r18.zw, r14.z, l(96), t15.xxxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r14.z, l(116), t15.zwxy
          add r27.xyz, -r25.yzwy, v7.xyzx
          and r14.w, r26.w, l(0x0000ffff)
          ubfe r16.w, l(6), l(25), r26.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r14.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r14.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r14.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r14.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r14.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r14.w, l(80), t16.xyzw
          dp3 r17.w, r28.xyzx, r27.xyzx
          add_sat r17.w, r28.w, r17.w
          dp3 r19.w, r29.xyzx, r27.xyzx
          add_sat r19.w, r29.w, r19.w
          mul r17.w, r17.w, r19.w
          dp3 r19.w, r30.xyzx, r27.xyzx
          add_sat r19.w, r30.w, r19.w
          mul r17.w, r17.w, r19.w
          dp3 r19.w, r31.xyzx, r27.xyzx
          add_sat r19.w, r31.w, r19.w
          mul r17.w, r17.w, r19.w
          dp3 r19.w, r32.xyzx, r27.xyzx
          add_sat r19.w, r32.w, r19.w
          mul r17.w, r17.w, r19.w
          dp3 r19.w, r33.xyzx, r27.xyzx
          add_sat r19.w, r33.w, r19.w
          mul r16.x, r17.w, r19.w
          and r17.w, r18.z, l(1)
          movc r28.xy, r17.wwww, r16.xyxx, r16.zxzz
          mov r16.x, r18.z
          mov r29.xy, r28.xyxx
          mov r17.w, l(1)
          loop 
            ige r19.w, r17.w, r16.w
            breakc_nz r19.w
            iadd r19.w, r14.w, r17.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r19.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r19.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r19.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r19.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r19.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r19.w, l(80), t16.xyzw
            dp3 r19.w, r30.xyzx, r27.xyzx
            add_sat r19.w, r30.w, r19.w
            mul r19.w, r19.w, r29.x
            dp3 r20.w, r31.xyzx, r27.xyzx
            add_sat r20.w, r31.w, r20.w
            mul r19.w, r19.w, r20.w
            dp3 r20.w, r32.xyzx, r27.xyzx
            add_sat r20.w, r32.w, r20.w
            mul r19.w, r19.w, r20.w
            dp3 r20.w, r33.xyzx, r27.xyzx
            add_sat r20.w, r33.w, r20.w
            mul r19.w, r19.w, r20.w
            dp3 r20.w, r34.xyzx, r27.xyzx
            add_sat r20.w, r34.w, r20.w
            mul r19.w, r19.w, r20.w
            dp3 r20.w, r35.xyzx, r27.xyzx
            add_sat r20.w, r35.w, r20.w
            mul r29.x, r19.w, r20.w
            ushr r25.w, r16.x, l(2)
            ubfe r27.w, l(1), l(2), r16.x
            and r28.z, r25.w, l(2)
            max r28.w, r29.x, r29.y
            mad r19.w, -r19.w, r20.w, l(1.000000)
            mul r19.w, r19.w, r29.y
            movc r18.y, r28.z, r19.w, r28.w
            movc r29.xy, r27.wwww, r29.xyxx, r18.xyxx
            iadd r17.w, r17.w, l(1)
            mov r16.x, r25.w
          endloop 
          add_sat r14.w, -r10.w, r29.y
          mul r16.x, r18.w, r14.w
          lt r16.w, l(0.000000), r16.x
          if_nz r16.w
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r14.z, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r14.z, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r14.z, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r14.z, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r14.z, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r14.z, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r14.z, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r14.z, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r14.z, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r14.z, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xy, r14.z, l(212), t15.xyxx
            mad r24.w, r14.w, r18.w, r24.w
            mul r14.z, r26.z, r16.x
            mov r26.z, r34.z
            dp3 r14.w, r12.xyzx, r26.xyzx
            dp3 r16.x, r27.xyzx, r26.xyzx
            add r16.x, -r34.w, r16.x
            ge r16.w, r16.x, l(0.000000)
            max r16.x, r4.w, |r16.x|
            movc r16.x, r16.w, r16.x, -r16.x
            max r14.w, -r14.w, l(0.00000010)
            div r14.w, r16.x, r14.w
            min r14.w, |r14.w|, l(131072.000000)
            mov r34.z, r35.z
            dp3 r16.x, r12.xyzx, r34.xyzx
            dp3 r16.w, r27.xyzx, r34.xyzx
            add r16.w, -r35.w, r16.w
            ge r17.w, r16.w, l(0.000000)
            max r16.w, r4.w, |r16.w|
            movc r16.w, r17.w, r16.w, -r16.w
            max r16.x, -r16.x, l(0.00000010)
            div r16.x, r16.w, r16.x
            min r14.w, r14.w, |r16.x|
            mov r35.z, r36.z
            dp3 r16.x, r12.xyzx, r35.xyzx
            dp3 r16.w, r27.xyzx, r35.xyzx
            add r16.w, -r36.w, r16.w
            ge r17.w, r16.w, l(0.000000)
            max r16.w, r4.w, |r16.w|
            movc r16.w, r17.w, r16.w, -r16.w
            max r16.x, -r16.x, l(0.00000010)
            div r16.x, r16.w, r16.x
            min r14.w, r14.w, |r16.x|
            mov r36.z, r37.z
            dp3 r16.x, r12.xyzx, r36.xyzx
            dp3 r16.w, r27.xyzx, r36.xyzx
            add r16.w, -r37.w, r16.w
            ge r17.w, r16.w, l(0.000000)
            max r16.w, r4.w, |r16.w|
            movc r16.w, r17.w, r16.w, -r16.w
            max r16.x, -r16.x, l(0.00000010)
            div r16.x, r16.w, r16.x
            min r14.w, r14.w, |r16.x|
            mov r37.z, r38.x
            dp3 r16.x, r12.xyzx, r37.xyzx
            dp3 r16.w, r27.xyzx, r37.xyzx
            add r16.w, -r38.y, r16.w
            ge r17.w, r16.w, l(0.000000)
            max r16.w, r4.w, |r16.w|
            movc r16.w, r17.w, r16.w, -r16.w
            max r16.x, -r16.x, l(0.00000010)
            div r16.x, r16.w, r16.x
            min r14.w, r14.w, |r16.x|
            mov r39.zw, r38.zzzw
            dp3 r16.x, r12.zxyz, r39.xzwx
            dp3 r16.w, r27.zxyz, r39.xzwx
            add r16.w, -r39.y, r16.w
            ge r17.w, r16.w, l(0.000000)
            max r16.w, r4.w, |r16.w|
            movc r16.w, r17.w, r16.w, -r16.w
            max r16.x, -r16.x, l(0.00000010)
            div r16.x, r16.w, r16.x
            min r14.w, r14.w, |r16.x|
            mov r26.x, r31.w
            mov r26.yz, r32.zzwz
            add r18.yzw, r27.xxyz, r26.xxyz
            mad r18.yzw, r12.xxyz, r14.wwww, r18.yyzw
            dp3 r16.x, r18.yzwy, r18.yzwy
            sqrt r16.x, r16.x
            div r14.w, r14.w, r16.x
            add r14.w, r14.w, r14.w
            sqrt r14.w, r14.w
            mad r14.w, r3.w, l(5.000000), r14.w
            add r14.w, r14.w, l(-0.844800)
            mov r25.y, r28.z
            mov r25.z, r30.x
            dp3 r34.x, r18.yzwy, r25.xyzx
            mov r26.xy, r28.xwxx
            mov r26.z, r30.w
            dp3 r34.y, r18.yzwy, r26.xyzx
            mov r30.x, r28.y
            dp3 r34.z, r18.yzwy, r30.xyzx
            ubfe r16.x, l(9), l(16), r26.w
            utof r34.w, r16.x
            sample_l_indexable(texturecubearray)(float,float,float,float) r18.yzw, r34.xyzw, t8.wxyz, s2, r14.w
            dp3 r28.x, r27.xyzx, r25.xyzx
            dp3 r28.y, r27.xyzx, r26.xyzx
            dp3 r28.z, r27.xyzx, r30.xyzx
            mad_sat r27.xyz, r28.xyzx, r31.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
            mov r32.z, r33.x
            mad r27.xyz, r27.xyzx, r32.xyzx, r33.yzwy
            dp3 r34.x, r7.xyzx, r25.xyzx
            dp3 r34.y, r7.xyzx, r26.xyzx
            dp3 r34.z, r7.xyzx, r30.xyzx
            lt r25.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r34.xyzx
            movc r17.z, r25.x, l(0), l(0.500000)
            add r26.xyz, r17.xyzx, r27.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r26.xyz, r26.xyzx, t17.xyzw, s4, l(0.000000)
            mul r28.xyz, r34.xyzx, r34.xyzx
            mul r28.xyz, r14.zzzz, r28.xyzx
            movc r19.z, r25.y, l(0), l(0.500000)
            add r25.xyw, r19.xyxz, r27.xyxz
            sample_l_indexable(texture3d)(float,float,float,float) r25.xyw, r25.xywx, t18.xywz, s4, l(0.000000)
            mul r25.xyw, r28.yyyy, r25.xyxw
            mad r25.xyw, r26.xyxz, r28.xxxx, r25.xyxw
            movc r20.z, r25.z, l(0), l(0.500000)
            add r26.xyz, r20.xyzx, r27.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r26.xyz, r26.xyzx, t19.xyzw, s4, l(0.000000)
            mad r25.xyz, r26.xyzx, r28.zzzz, r25.xywx
            sample_l_indexable(texturecubearray)(float,float,float,float) r26.xyz, r34.xyzw, t8.xyzw, s2, l(6.000000)
            mul r27.xyz, r25.xyzx, r26.xyzx
            dp3 r14.w, r27.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r15.xyz, r25.xyzx, r26.xyzx, r15.xyzx
            mul r16.x, r5.w, r14.w
            mul r18.yzw, r14.zzzz, r18.yyzw
            dp3 r14.z, r18.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r14.z, r5.w, r14.w, r14.z
            div r14.z, r16.x, r14.z
            mad r24.xyz, r18.yzwy, r14.zzzz, r24.xyzx
          endif 
        endif 
      endif 
    endloop 
    mov r23.xyzw, r24.xyzw
    mov r11.yzw, r15.xxyz
    iadd r8.w, r8.w, l(32)
  endloop 
  mov r22.xyzw, r23.zxyw
  mov r21.xyz, r11.yzwy
  mov r22.xyzw, r22.yzxw
else 
  mov r22.x, r21.w
endif 
max r1.y, r22.w, l(1.000000)
rcp r1.y, r1.y
mov_sat r22.w, r22.w
mul r14.xyz, r1.yyyy, r21.xyzx
mul r11.yzw, r1.yyyy, r22.xxyz
lt r1.z, r22.w, l(0.990000)
if_nz r1.z
  add r1.z, -r22.w, l(1.000000)
  mul r1.w, r1.z, cb2[19].x
  add r15.xyz, v7.xyzx, -cb2[35].xyzx
  mul r16.x, r15.x, cb2[35].w
  mul r16.yz, r15.yyzy, cb2[36].xxyx
  add_sat r15.xyz, r16.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mul r16.xy, r15.xyxx, cb2[36].zwzz
  mul r16.z, r15.z, cb2[37].x
  add r15.xyz, r16.xyzx, cb2[37].yzwy
  lt r16.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
  movc r16.xyz, r16.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
  mov r16.w, l(0)
  add r17.xyz, r15.xyzx, r16.wwxw
  sample_l_indexable(texture3d)(float,float,float,float) r17.xyz, r17.xyzx, t17.xyzw, s4, l(0.000000)
  mul r18.xyz, r7.xyzx, r7.xyzx
  mul r18.xyz, r1.wwww, r18.xyzx
  add r19.xyz, r15.xyzx, r16.wwyw
  sample_l_indexable(texture3d)(float,float,float,float) r19.xyz, r19.xyzx, t18.xyzw, s4, l(0.000000)
  mul r19.xyz, r18.yyyy, r19.xyzx
  mad r17.xyz, r17.xyzx, r18.xxxx, r19.xyzx
  add r15.xyz, r15.xyzx, r16.wwzw
  sample_l_indexable(texture3d)(float,float,float,float) r15.xyz, r15.xyzx, t19.xyzw, s4, l(0.000000)
  mad r15.xyz, r15.xyzx, r18.zzzz, r17.xyzx
  mov r7.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r16.xyz, r7.xyzw, t8.xyzw, s2, l(6.000000)
  mul r15.xyz, r15.xyzx, r16.xyzx
  dp3 r1.w, r15.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  mad r14.xyz, r21.xyzx, r1.yyyy, r15.xyzx
  mov r12.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r15.xyz, r12.xyzw, t8.xyzw, s2, r4.z
  mad r1.y, cb2[19].x, r1.z, -r1.w
  mad r1.y, r10.y, r1.y, r1.w
  mad r11.yzw, r15.xxyz, r1.yyyy, r11.yyzw
endif 
mad r1.yz, r10.xxyx, l(0.000000, 0.984375, 0.984375, 0.000000), l(0.000000, 0.00781250, 0.00781250, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r1.yz, r1.yzyy, t5.zxyw, s2, l(0.000000)
mul r15.xyz, r1.yyyy, r11.zwyz
mul r1.yzw, r1.zzzz, r11.yyzw
sqrt r3.w, r3.z
mad r3.w, r3.w, l(0.500000), l(0.500000)
mul r3.w, r3.w, r3.w
mul r4.z, r3.w, l(0.500000)
mad r3.w, -r3.w, l(0.500000), l(1.000000)
mad r4.w, r10.x, r3.w, r4.z
mul r3.w, r3.w, r4.w
mul r4.z, r4.w, r4.z
if_z cb0[27].z
  dp3 r4.w, r7.xyzx, cb2[17].xyzx
  ge r4.w, l(0.000000), |r4.w|
  if_nz r4.w
    mov r5.w, l(0)
  endif 
  if_z r4.w
    mul r10.yzw, v7.yyyy, cb2[29].xxyz
    mad r10.yzw, v7.xxxx, cb2[28].xxyz, r10.yyzw
    mad r10.yzw, v7.zzzz, cb2[30].xxyz, r10.yyzw
    add r10.yzw, r10.yyzw, cb2[31].xxyz
    add r4.w, r10.w, -cb2[17].w
    mad r4.w, -r4.w, l(0.00006104), l(1.000000)
    mov_sat r6.w, r4.w
    eq r6.w, r4.w, r6.w
    if_nz r6.w
      mov r6.w, l(0)
      mov r7.w, l(0)
      loop 
        ge r8.w, r6.w, l(3.000000)
        breakc_nz r8.w
        ftou r8.w, r6.w
        add r11.yz, r10.yyzy, -cb2[r8.w + 20].xxyx
        max r9.w, |r11.z|, |r11.y|
        mul r7.w, r9.w, cb2[r8.w + 20].z
        lt r8.w, r7.w, l(1.000000)
        if_nz r8.w
          break 
        endif 
        add r6.w, r6.w, l(1.000000)
        mov r7.w, l(0)
      endloop 
    else 
      mov r6.w, l(3.000000)
      mov r7.w, l(0)
    endif 
    ge r8.w, r6.w, l(3.000000)
    if_nz r8.w
      mul r11.yzw, l(0.000000, 128.000000, 0.500000, 0.500000), cb2[27].zzxy
      rcp r16.xz, r11.yyyy
      mov r16.y, -r16.z
      mad r11.yzw, r10.yyzy, r16.xxyz, r11.zzwz
      add r16.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
      max r11.yzw, r11.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
      min r11.yzw, r16.xxyz, r11.yyzw
      mul r16.xy, r11.wzww, cb2[32].xxxx
      round_ni r16.xy, r16.xyxx
      mul r9.w, r16.y, cb2[27].x
      mad r9.w, r9.w, cb2[32].x, r16.x
      ftou r9.w, r9.w
      iadd r9.w, r9.w, cb2[32].y
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r12.w, r9.w, l(0), t23.xxxx
      and r13.w, r12.w, l(0x40000000)
      ishl r16.x, r12.w, l(2)
      if_z r13.w
        and r13.w, r12.w, l(0x01ffffff)
        iadd r17.x, r9.w, r13.w
        ushr r9.w, r12.w, l(25)
        utof r9.w, r9.w
        mul r11.yzw, r9.wwww, r11.yyzw
        frc r11.yzw, r11.yyzw
        mul r11.yzw, r11.yyzw, l(0.000000, 128.000000, 128.000000, 128.000000)
        ftou r11.yzw, r11.yyzw
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.z, r17.x, l(0), t23.xxxx
        ushr r16.yz, r11.wwzw, l(0, 6, 6, 0)
        and r9.w, r17.z, l(0xc0000000)
        iadd r12.w, r17.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r12.w, r12.w, l(0), t23.xxxx
        movc r12.w, r16.z, r17.z, r12.w
        ushr r13.w, r12.w, l(13)
        movc r12.w, r16.y, r13.w, r12.w
        and r12.w, r12.w, l(8191)
        iadd r18.x, r12.w, r17.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.x, l(0), t23.xxxx
        mov r17.y, l(0)
        mov r18.y, l(1)
        movc r16.yzw, r9.wwww, r17.xxyz, r18.xxyz
        movc r18.yz, r9.wwww, l(0,6,1,0), l(0,5,2,0)
        ushr r19.xy, r11.wzww, r18.yyyy
        and r19.xy, r19.xyxx, l(1, 1, 0, 0)
        and r12.w, r16.w, l(0xc0000000)
        iadd r13.w, r16.y, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r13.w, r13.w, l(0), t23.xxxx
        movc r13.w, r19.y, r16.w, r13.w
        ushr r17.w, r13.w, l(13)
        movc r13.w, r19.x, r17.w, r13.w
        and r13.w, r13.w, l(8191)
        iadd r18.x, r13.w, r16.y
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.w, r18.x, l(0), t23.xxxx
        movc r16.yzw, r12.wwww, r16.yyzw, r18.xxzw
        movc r16.yzw, r9.wwww, r17.xxyz, r16.yyzw
        and r9.w, r16.w, l(0xc0000000)
        if_z r9.w
          iadd r9.w, -r16.z, l(6)
          ushr r17.xy, r11.wzww, r9.wwww
          or r9.w, r16.w, l(0x40000000)
          bfi r12.w, l(1), l(1), r17.y, l(0)
          bfi r12.w, l(1), l(0), r17.x, r12.w
          imul null, r12.w, r12.w, l(10)
          ushr r9.w, r9.w, r12.w
          and r9.w, r9.w, l(1023)
          iadd r17.x, r9.w, r16.y
          ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.w, r17.x, l(0), t23.xxxx
          iadd r17.yz, r16.zzzz, l(0, 1, 2, 0)
          iadd r9.w, -r17.y, l(6)
          ushr r18.xy, r11.wzww, r9.wwww
          and r9.w, r17.w, l(0xc0000000)
          or r12.w, r17.w, l(0x40000000)
          bfi r13.w, l(1), l(1), r18.y, l(0)
          bfi r13.w, l(1), l(0), r18.x, r13.w
          imul null, r13.w, r13.w, l(10)
          ushr r12.w, r12.w, r13.w
          and r12.w, r12.w, l(1023)
          iadd r18.x, r12.w, r17.x
          ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.x, l(0), t23.xxxx
          mov r18.y, r17.z
          movc r18.xyz, r9.wwww, r17.xywx, r18.xyzx
          iadd r12.w, -r18.y, l(6)
          ushr r17.yz, r11.wwzw, r12.wwww
          and r12.w, r18.z, l(0xc0000000)
          or r13.w, r18.z, l(0x40000000)
          bfi r16.z, l(1), l(1), r17.z, l(0)
          bfi r16.z, l(1), l(0), r17.y, r16.z
          imul null, r16.z, r16.z, l(10)
          ushr r13.w, r13.w, r16.z
          and r13.w, r13.w, l(1023)
          iadd r19.x, r13.w, r18.x
          ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.y, r19.x, l(0), t23.xxxx
          movc r17.yz, r12.wwww, r18.xxzx, r19.xxyx
          movc r16.yw, r9.wwww, r17.xxxw, r17.yyyz
        endif 
        and r9.w, r16.w, l(0xc0000000)
        if_z r9.w
          ubfe r12.w, l(14), l(15), r16.w
          utof r12.w, r12.w
          mul r12.w, r12.w, cb2[27].w
          mul r12.w, r12.w, l(0.00006104)
          and r17.xy, r16.wwww, l(0x00007fff, 0x20000000, 0, 0)
          utof r13.w, r17.x
          mul r13.w, r13.w, cb2[27].w
          mul r13.w, r13.w, l(0.00003052)
          and r16.z, r11.z, l(3)
          iadd r16.z, r16.z, r16.y
          iadd r16.z, r16.z, l(1)
          ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.z, r16.z, l(0), t23.xxxx
          bfi r17.xzw, l(2, 0, 2, 1), l(3, 0, 1, 4), r11.yyzw, l(0, 0, 0, 0)
          ushr r11.y, r16.z, r17.x
          and r11.y, r11.y, l(255)
          utof r11.y, r11.y
          mul r11.y, r13.w, r11.y
          mad r11.y, r11.y, l(0.00392157), r12.w
          iadd r11.z, r17.z, l(1)
          ubfe r11.w, l(1), l(1), r11.w
          iadd r11.z, r11.w, r11.z
          iadd r11.z, r11.z, r16.y
          ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r11.z, r11.z, l(0), t23.xxxx
          ushr r11.z, r11.z, r17.w
          and r11.z, r11.z, l(0x0000ffff)
          utof r11.z, r11.z
          mul r11.z, r13.w, r11.z
          mad r11.z, r11.z, l(0.00001526), r12.w
          movc r16.x, r17.y, r11.y, r11.z
        else 
          and r11.y, r16.w, l(0x80000000)
          iadd r11.z, r16.y, l(1)
          ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r11.z, r11.z, l(0), t23.xxxx
          movc r11.y, r11.y, r11.z, l(0)
          ishl r11.z, r16.w, l(2)
          ushr r11.w, r11.y, l(16)
          and r11.y, r11.y, l(0x0000ffff)
          f16tof32 r11.yw, r11.yyyw
          mad r11.z, r10.y, r11.w, r11.z
          mad r11.y, r10.z, r11.y, r11.z
          movc r16.x, r9.w, r11.y, r16.x
        endif 
      endif 
      mad r9.w, -cb2[27].z, l(2.000000), r10.w
      lt r9.w, r16.x, r9.w
      movc r5.w, r9.w, l(0), l(1.000000)
    endif 
    if_z r8.w
      if_z cb2[58].y
        ftou r8.w, r6.w
        add r11.yz, r10.yyzy, -cb2[r8.w + 20].xxyx
        mul r11.yz, r11.yyzy, cb2[r8.w + 20].zzzz
        mad r16.xy, r11.yzyy, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
        itof r8.w, cb2[26].y
        add r16.z, r6.w, r8.w
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r8.w, r16.xyzx, t13.xxxx, s13, r4.w
        sample_l_indexable(texture2darray)(float,float,float,float) r9.w, r16.xyzx, t31.yzwx, s0, l(0.000000)
        add r8.w, r8.w, r9.w
        add_sat r8.w, r8.w, l(-1.000000)
        mul r9.w, r8.w, r8.w
        mul r5.w, r8.w, r9.w
      endif 
      if_nz cb2[58].y
        mov r16.x, -r4.x
        ftou r8.w, r6.w
        add r6.w, r6.w, l(1.000000)
        min r6.w, r6.w, l(2.000000)
        ftou r6.w, r6.w
        add r7.w, -r7.w, l(1.000000)
        mul r7.w, r7.w, l(28.000000)
        ftou r7.w, r7.w
        add r11.yz, r10.yyzy, -cb2[r8.w + 20].xxyx
        mul r11.yz, r11.yyzy, cb2[r8.w + 20].zzzz
        mad r11.yz, r11.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
        add r10.yz, r10.yyzy, -cb2[r6.w + 20].xxyx
        mul r10.yz, r10.yyzy, cb2[r6.w + 20].zzzz
        mad r10.yz, r10.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
        mov r16.y, r5.x
        mov r16.z, r4.x
        mov r9.w, l(0)
        mov r10.w, l(0)
        loop 
          uge r11.w, r10.w, l(8)
          breakc_nz r11.w
          ult r11.w, r7.w, r10.w
          movc r17.xy, r11.wwww, r10.yzyy, r11.yzyy
          movc r12.w, r11.w, cb2[r6.w + 20].w, cb2[r8.w + 20].w
          movc r11.w, r11.w, r6.w, r8.w
          dp2 r18.x, icb[r10.w + 0].yxyy, r16.xyxx
          dp2 r18.y, icb[r10.w + 0].yxyy, r16.yzyy
          mad r17.xy, r18.xyxx, r12.wwww, r17.xyxx
          iadd r11.w, r11.w, cb2[26].y
          utof r17.z, r11.w
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r11.w, r17.xyzx, t13.xxxx, s13, r4.w
          sample_l_indexable(texture2darray)(float,float,float,float) r12.w, r17.xyzx, t31.yzwx, s0, l(0.000000)
          add r11.w, r11.w, r12.w
          add_sat r11.w, r11.w, l(-1.000000)
          mad r9.w, r11.w, l(0.125000), r9.w
          iadd r10.w, r10.w, l(1)
        endloop 
        mul r4.w, r9.w, r9.w
        mul r5.w, r9.w, r4.w
      endif 
    endif 
  endif 
else 
  mov r5.w, l(1.000000)
endif 
dp3 r4.w, r7.xyzx, cb2[17].xyzx
lt r6.w, l(0.000000), |r4.w|
if_nz r6.w
  lt r6.w, l(0.000000), r5.w
  if_nz r6.w
    mul r6.w, r3.y, cb2[18].w
    mul r6.w, r6.w, l(0.250000)
    if_nz cb2[23].x
      add r16.xyz, v7.xyzx, cb1[24].xyzx
      mov r16.w, l(1.000000)
      dp4 r7.w, cb2[24].xyzw, r16.xyzw
      dp4 r8.w, cb2[25].xyzw, r16.xyzw
      frc r16.x, r7.w
      frc r16.y, r8.w
      iadd r7.w, l(-1), cb2[23].x
      utof r16.z, r7.w
      sample_l_indexable(texture2darray)(float,float,float,float) r10.yzw, r16.xyzx, t20.wxyz, s2, l(0.000000)
      add r10.yzw, r10.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
      mad r10.yzw, cb2[23].yyyy, r10.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
      mul r10.yzw, r10.yyzw, cb2[18].xxyz
    else 
      mov r10.yzw, cb2[18].xxyz
    endif 
    if_z cb0[27].z
      ushr r7.w, cb2[53].x, l(16)
      ult r8.w, l(0), r7.w
      and r8.w, r2.w, r8.w
      if_nz r8.w
        iadd r7.w, r7.w, cb2[0].x
        iadd r7.w, r7.w, l(-1)
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r8.w, r7.w, l(52), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r7.w, l(68), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r7.w, l(84), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r7.w, l(132), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.xyzw, r7.w, l(148), t12.xyzw
        mad r9.w, |r4.w|, l(-0.200000), l(0.400000)
        lt r11.y, r4.w, l(0.000000)
        movc r9.w, r11.y, -r9.w, r9.w
        mad r20.xyz, r7.xyzx, r9.wwww, v7.xyzx
        mov r20.w, l(1.000000)
        dp4 r16.x, r16.xyzw, r20.xyzw
        dp4 r16.y, r17.xyzw, r20.xyzw
        mad r11.yz, r16.xxyx, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
        add r11.yz, r19.zzwz, r11.yyzy
        mul r11.yz, r19.xxyx, r11.yyzy
        div r16.xy, r8.wwww, r18.xzxx
        add r16.zw, -r16.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
        ge r16.zw, r11.yyyz, r16.zzzw
        ge r16.xy, r16.xyxx, r11.yzyy
        or r16.xy, r16.xyxx, r16.zwzz
        or r9.w, r16.y, r16.x
        if_z r9.w
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r9.w, r7.w, l(28), t12.xxxx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r7.w, l(100), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xy, r7.w, l(164), t12.xyxx
          dp4 r7.w, r16.xyzw, r20.xyzw
          mov_sat r11.yz, r11.yyzy
          mad r16.xy, r11.yzyy, r18.xzxx, r18.ywyy
          add r7.w, r17.x, r7.w
          div r7.w, r7.w, r17.y
          max r7.w, r7.w, l(0.00006104)
          and r9.w, r9.w, l(0x0000ffff)
          if_nz cb2[58].y
            mov r17.x, -r4.x
            utof r18.z, r9.w
            mov r17.y, r5.x
            mov r17.z, r4.x
            mov r11.yz, l(0,0,0,0)
            loop 
              ige r11.w, r11.z, l(8)
              breakc_nz r11.w
              dp2 r19.x, icb[r11.z + 0].yxyy, r17.xyxx
              dp2 r19.y, icb[r11.z + 0].yxyy, r17.yzyy
              mad r18.xy, r19.xyxx, r8.wwww, r16.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r11.w, r18.xyzx, t9.xxxx, s13, r7.w
              mad r11.y, r11.w, l(0.125000), r11.y
              iadd r11.z, r11.z, l(1)
            endloop 
          else 
            utof r16.z, r9.w
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r11.y, r16.xyzx, t9.xxxx, s13, r7.w
          endif 
          mul r7.w, r11.y, r11.y
          mul r7.w, r11.y, r7.w
        else 
          mov r7.w, l(1.000000)
        endif 
        mul r5.w, r5.w, r7.w
      else 
        and r7.w, cb2[53].x, l(0x0000ffff)
        ult r8.w, l(0), r7.w
        not r9.w, r2.w
        and r8.w, r8.w, r9.w
        if_nz r8.w
          iadd r7.w, r7.w, cb2[0].x
          iadd r7.w, r7.w, l(-1)
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r8.w, r7.w, l(52), t12.xxxx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r7.w, l(68), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r7.w, l(84), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r7.w, l(132), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.xyzw, r7.w, l(148), t12.xyzw
          mad r9.w, |r4.w|, l(-0.200000), l(0.400000)
          lt r11.y, r4.w, l(0.000000)
          movc r9.w, r11.y, -r9.w, r9.w
          mad r20.xyz, r7.xyzx, r9.wwww, v7.xyzx
          mov r20.w, l(1.000000)
          dp4 r16.x, r16.xyzw, r20.xyzw
          dp4 r16.y, r17.xyzw, r20.xyzw
          mad r11.yz, r16.xxyx, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
          add r11.yz, r19.zzwz, r11.yyzy
          mul r11.yz, r19.xxyx, r11.yyzy
          div r16.xy, r8.wwww, r18.xzxx
          add r16.zw, -r16.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
          ge r16.zw, r11.yyyz, r16.zzzw
          ge r16.xy, r16.xyxx, r11.yzyy
          or r16.xy, r16.xyxx, r16.zwzz
          or r9.w, r16.y, r16.x
          if_z r9.w
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r9.w, r7.w, l(28), t12.xxxx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r7.w, l(100), t12.xyzw
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xy, r7.w, l(164), t12.xyxx
            dp4 r7.w, r16.xyzw, r20.xyzw
            mov_sat r11.yz, r11.yyzy
            mad r16.xy, r11.yzyy, r18.xzxx, r18.ywyy
            add r7.w, r17.x, r7.w
            div r7.w, r7.w, r17.y
            max r7.w, r7.w, l(0.00006104)
            and r9.w, r9.w, l(0x0000ffff)
            if_nz cb2[58].y
              mov r17.x, -r4.x
              utof r18.z, r9.w
              mov r17.y, r5.x
              mov r17.z, r4.x
              mov r11.yz, l(0,0,0,0)
              loop 
                ige r11.w, r11.z, l(8)
                breakc_nz r11.w
                dp2 r19.x, icb[r11.z + 0].yxyy, r17.xyxx
                dp2 r19.y, icb[r11.z + 0].yxyy, r17.yzyy
                mad r18.xy, r19.xyxx, r8.wwww, r16.xyxx
                sample_c_lz_indexable(texture2darray)(float,float,float,float) r11.w, r18.xyzx, t9.xxxx, s13, r7.w
                mad r11.y, r11.w, l(0.125000), r11.y
                iadd r11.z, r11.z, l(1)
              endloop 
            else 
              utof r16.z, r9.w
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r11.y, r16.xyzx, t9.xxxx, s13, r7.w
            endif 
            mul r7.w, r11.y, r11.y
            mul r7.w, r11.y, r7.w
          else 
            mov r7.w, l(1.000000)
          endif 
          mul r5.w, r5.w, r7.w
        endif 
      endif 
    endif 
    mad r7.w, -r10.x, l(0.500000), l(1.000000)
    mad r7.w, -|r4.w|, r7.w, l(1.000000)
    mul r7.w, r7.w, r7.w
    mad r7.w, -r7.w, l(0.620000), l(0.620000)
    add r7.w, -|r4.w|, r7.w
    mad r7.w, r3.z, r7.w, |r4.w|
    mul r7.w, r5.w, r7.w
    lt r8.w, l(0.000000), r4.w
    mad r16.xyz, r7.wwww, r10.yzwy, r14.xyzx
    mov_sat r4.w, r4.w
    mad r11.yzw, -v7.xxyz, r0.yyyy, cb2[17].xxyz
    dp3 r0.y, r11.yzwy, r11.yzwy
    rsq r0.y, r0.y
    mul r11.yzw, r0.yyyy, r11.yyzw
    dp3 r0.y, r11.yzwy, r2.xyzx
    dp3 r7.w, r7.xyzx, r11.yzwy
    mad r9.w, |r7.w|, r3.y, -|r7.w|
    mad r7.w, |r7.w|, r9.w, l(1.000000)
    mad r9.w, r4.w, r3.w, r4.z
    mul r7.w, r7.w, r7.w
    mul r7.w, r9.w, r7.w
    rcp r7.w, r7.w
    mul r4.w, r6.w, r4.w
    mul r4.w, r4.w, r7.w
    mul r4.w, r5.w, r4.w
    mad r11.yzw, r4.wwww, r10.yyzw, r1.yyzw
    add_sat r0.y, -r0.y, l(1.000000)
    mul r5.w, r0.y, r0.y
    mul r5.w, r5.w, r5.w
    mul r0.y, r0.y, r5.w
    mul r0.y, r0.y, r4.w
    mad r17.xyz, r0.yyyy, r10.zwyz, r15.xyzx
    mov r16.w, r17.z
    mov r14.w, r15.z
    movc r14.xyzw, r8.wwww, r16.xyzw, r14.xyzw
    mov r17.zw, r11.yyyz
    mov r15.zw, r1.yyyz
    movc r16.xyzw, r8.wwww, r17.xyzw, r15.xyzw
    movc r1.w, r8.w, r11.w, r1.w
    mov r15.z, r14.w
    mov r15.xy, r16.xyxx
    mov r1.yz, r16.zzwz
  endif 
endif 
mov r16.x, -r4.x
not r0.y, r2.w
mad r4.w, -r10.x, l(0.500000), l(1.000000)
mov r10.xy, l(0,0,0,0)
mov r17.w, l(0)
mov r18.xyz, v7.xyzx
mov r18.w, l(1.000000)
mov r19.w, l(1.000000)
mov r16.z, r4.x
mov r20.w, l(1.000000)
mov r21.z, l(1.000000)
mov r22.w, l(1.000000)
mov r16.yw, r5.xxxx
mov r4.y, r16.w
mov r23.w, l(1.000000)
mov r5.y, r16.x
mov r5.z, r4.x
mov r24.w, l(1.000000)
mov r25.x, r5.x
mov r25.y, r16.x
mov r25.z, r4.x
mov r26.x, r5.x
mov r26.y, r16.x
mov r26.z, r4.x
mov r27.x, r5.x
mov r27.y, r16.x
mov r27.z, r4.x
mov r11.yzw, r14.xxyz
mov r28.xyz, r15.zxyz
mov r29.xyz, r1.yzwy
mov r5.w, cb2[58].y
mov r6.w, l(0)
loop 
  uge r7.w, r6.w, cb2[0].x
  breakc_nz r7.w
  ushr r10.z, r6.w, l(5)
  iadd r17.xyz, r10.xyzx, r13.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r7.w, r17.xyzw, t6.yzwx
  mov r17.xyz, r11.yzwy
  mov r30.xyz, r28.xyzx
  mov r31.xyz, r29.xyzx
  mov r8.w, r5.w
  mov r9.w, r7.w
  loop 
    breakc_z r9.w
    firstbit_lo r10.z, r9.w
    ishl r10.w, l(1), r10.z
    and r12.w, r9.w, r10.w
    if_nz r12.w
      xor r9.w, r9.w, r10.w
      iadd r10.z, r6.w, r10.z
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r32.xyzw, r10.z, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r33.xy, r10.z, l(16), t11.xyxx
      add r32.xyz, r32.xyzx, -v7.xyzx
      mov r33.z, r32.w
      lt r32.xyz, |r32.xyzx|, r33.zxyz
      and r10.w, r32.y, r32.x
      and r10.w, r32.z, r10.w
      if_nz r10.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r10.z, l(0), t12.wxyz
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r10.z, l(16), t12.zxyw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r10.z, l(32), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r10.z, l(48), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r10.z, l(64), t12.yzwx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r10.z, l(80), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r10.z, l(96), t12.yzwx
        ubfe r10.w, l(3), l(24), r33.w
        switch r10.w
          case l(4)
          lt r10.w, l(0.000000), r38.x
          mov r39.xy, r37.zwzz
          mov r39.z, r38.w
          mad r40.xyz, -r39.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r32.yzwy
          add r41.xyz, r40.xyzx, -v7.xyzx
          dp3 r12.w, r39.xyzx, r41.xyzx
          div_sat r13.w, -r12.w, r38.x
          mad r42.xyz, r13.wwww, r39.xyzx, r40.xyzx
          movc r42.xyz, r10.wwww, r42.xyzx, r32.yzwy
          add r42.xyz, r42.xyzx, -v7.xyzx
          dp3 r14.w, r42.xyzx, r42.xyzx
          rsq r15.w, r14.w
          mul r42.xyz, r15.wwww, r42.xyzx
          dp3 r15.w, r7.xyzx, r42.xyzx
          lt r21.w, l(0.000000), |r15.w|
          if_nz r21.w
            sqrt r21.w, r14.w
            mul r25.w, r35.x, r35.x
            div r14.w, r25.w, r14.w
            min r14.w, r14.w, l(1.000000)
            mad_sat r42.xy, r21.wwww, r34.xzxx, r34.ywyy
            mul r42.zw, r42.xxxy, r42.xxxy
            mad r42.xy, r42.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
            mul r42.xy, r42.xyxx, r42.zwzz
            mul r14.w, r14.w, r42.x
            mul r14.w, r42.y, r14.w
            lt r21.w, l(0.000000), r14.w
            if_nz r21.w
              ubfe r21.w, l(3), l(27), r33.w
              ine r21.w, r21.w, l(1)
              if_nz r21.w
                mad r21.w, |r15.w|, l(-0.200000), l(0.400000)
                lt r25.w, r15.w, l(0.000000)
                movc r21.w, r25.w, -r21.w, r21.w
                mad r42.xyz, r7.xyzx, r21.wwww, v7.xyzx
                add r42.xyz, -r36.xyzx, r42.xyzx
                max r21.w, |r42.z|, |r42.y|
                max r21.w, r21.w, |r42.x|
                div r21.w, r37.x, r21.w
                add r21.w, r37.y, r21.w
                dp3 r25.w, r42.xyzx, r42.xyzx
                rsq r25.w, r25.w
                max r21.w, r21.w, l(0.00006104)
                and r26.w, r33.w, l(0x0000ffff)
                utof r43.w, r26.w
                mov r26.w, l(0)
                mov r27.w, l(0)
                loop 
                  ige r28.w, r27.w, l(8)
                  breakc_nz r28.w
                  dp2 r44.y, icb[r27.w + 0].yxyy, r16.xyxx
                  dp2 r44.z, icb[r27.w + 0].yxyy, r16.yzyy
                  mul r44.yz, r35.yyyy, r44.yyzy
                  mul r44.x, r11.x, r44.y
                  mul r44.w, r3.x, r44.y
                  mad r43.xyz, r42.xyzx, r25.wwww, r44.xzwx
                  sample_c_lz_indexable(texturecubearray)(float,float,float,float) r28.w, r43.xyzw, t10.xxxx, s13, r21.w
                  mad r26.w, r28.w, l(0.125000), r26.w
                  iadd r27.w, r27.w, l(1)
                endloop 
              else 
                mov r26.w, l(1.000000)
              endif 
              mul r14.w, r14.w, r26.w
              lt r21.w, l(0.000000), r14.w
              if_nz r21.w
                mul r21.w, r3.y, r33.x
                mul r21.w, r21.w, l(0.250000)
                dp3 r25.w, r39.xyzx, r12.xyzx
                dp3 r27.w, r12.xyzx, r41.xyzx
                mad r28.w, -r25.w, r25.w, r38.x
                mad r12.w, r25.w, r27.w, -r12.w
                div_sat r12.w, r12.w, r28.w
                div r25.w, r28.w, r38.x
                mul r25.w, r25.w, l(10.000000)
                min r25.w, r25.w, l(1.000000)
                add r12.w, -r13.w, r12.w
                mad r12.w, r25.w, r12.w, r13.w
                mad r39.xyz, r12.wwww, r39.xyzx, r40.xyzx
                movc r39.xyz, r10.wwww, r39.xyzx, r32.yzwy
                add r39.xyz, r39.xyzx, -v7.xyzx
                dp3 r10.w, r39.xyzx, r39.xyzx
                rsq r10.w, r10.w
                mul r40.xyz, r10.wwww, r39.xyzx
                ubfe r12.w, l(4), l(16), r33.w
                ult r13.w, l(0), r12.w
                and r13.w, r2.w, r13.w
                if_nz r13.w
                  iadd r12.w, r12.w, cb2[0].x
                  iadd r12.w, r12.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.w, r12.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r12.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r12.w, l(116), t12.xyzw
                  mad r25.w, |r15.w|, l(-0.200000), l(0.400000)
                  lt r27.w, r15.w, l(0.000000)
                  movc r25.w, r27.w, -r25.w, r25.w
                  mad r19.xyz, r7.xyzx, r25.wwww, v7.xyzx
                  dp4 r25.w, r41.xyzw, r19.xyzw
                  dp4 r27.w, r42.xyzw, r19.xyzw
                  lt r28.w, r27.w, r25.w
                  if_z r28.w
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r12.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r12.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r12.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r12.w, l(148), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xy, r12.w, l(164), t12.xyxx
                    dp4 r41.x, r41.xyzw, r19.xyzw
                    dp4 r41.y, r42.xyzw, r19.xyzw
                    div r19.xy, r41.xyxx, r27.wwww
                    mad r19.xy, r19.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r19.xy, r44.zwzz, r19.xyxx
                    mul r19.xy, r44.xyxx, r19.xyxx
                    div r41.xy, r13.wwww, r43.xzxx
                    add r41.zw, -r41.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                    ge r41.zw, r19.xxxy, r41.zzzw
                    ge r41.xy, r41.xyxx, r19.xyxx
                    or r41.xy, r41.xyxx, r41.zwzz
                    or r19.z, r41.y, r41.x
                    mov_sat r19.xy, r19.xyxx
                    mad r41.xy, r19.xyxx, r43.xzxx, r43.ywyy
                    mul r19.x, r27.w, r45.y
                    mad r19.y, r45.x, r27.w, r25.w
                    div r19.x, r19.y, r19.x
                  else 
                    mov r19.z, l(-1)
                  endif 
                  or r19.y, r28.w, r19.z
                  if_z r19.y
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.w, r12.w, l(28), t12.xxxx
                    max r19.x, r19.x, l(0.00006104)
                    and r12.w, r12.w, l(0x0000ffff)
                    if_nz r8.w
                      utof r42.z, r12.w
                      mov r19.yz, l(0,0,0,0)
                      loop 
                        ige r25.w, r19.z, l(8)
                        breakc_nz r25.w
                        dp2 r43.x, icb[r19.z + 0].yxyy, r16.xwxx
                        dp2 r43.y, icb[r19.z + 0].xyxx, r4.xyxx
                        mad r42.xy, r43.xyxx, r13.wwww, r41.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r25.w, r42.xyzx, t9.xxxx, s13, r19.x
                        mad r19.y, r25.w, l(0.125000), r19.y
                        iadd r19.z, r19.z, l(1)
                      endloop 
                    else 
                      utof r41.z, r12.w
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.y, r41.xyzx, t9.xxxx, s13, r19.x
                    endif 
                    mul r12.w, r19.y, r19.y
                    mul r12.w, r19.y, r12.w
                  else 
                    mov r12.w, l(1.000000)
                  endif 
                  mul r14.w, r12.w, r14.w
                else 
                  ubfe r12.w, l(4), l(20), r33.w
                  ult r13.w, l(0), r12.w
                  and r13.w, r0.y, r13.w
                  if_nz r13.w
                    iadd r12.w, r12.w, cb2[0].x
                    iadd r12.w, r12.w, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.w, r12.w, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r12.w, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r12.w, l(116), t12.xyzw
                    mad r19.x, |r15.w|, l(-0.200000), l(0.400000)
                    lt r19.z, r15.w, l(0.000000)
                    movc r19.x, r19.z, -r19.x, r19.x
                    mad r20.xyz, r7.xyzx, r19.xxxx, v7.xyzx
                    dp4 r19.x, r41.xyzw, r20.xyzw
                    dp4 r19.z, r42.xyzw, r20.xyzw
                    lt r25.w, r19.z, r19.x
                    if_z r25.w
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r12.w, l(68), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r12.w, l(84), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r12.w, l(132), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r12.w, l(148), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xy, r12.w, l(164), t12.xyxx
                      dp4 r41.x, r41.xyzw, r20.xyzw
                      dp4 r41.y, r42.xyzw, r20.xyzw
                      div r20.xy, r41.xyxx, r19.zzzz
                      mad r20.xy, r20.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                      add r20.xy, r44.zwzz, r20.xyxx
                      mul r20.xy, r44.xyxx, r20.xyxx
                      div r41.xy, r13.wwww, r43.xzxx
                      add r41.zw, -r41.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                      ge r41.zw, r20.xxxy, r41.zzzw
                      ge r41.xy, r41.xyxx, r20.xyxx
                      or r41.xy, r41.xyxx, r41.zwzz
                      or r20.z, r41.y, r41.x
                      mov_sat r20.xy, r20.xyxx
                      mad r41.xy, r20.xyxx, r43.xzxx, r43.ywyy
                      mul r20.x, r19.z, r45.y
                      mad r19.x, r45.x, r19.z, r19.x
                      div r19.x, r19.x, r20.x
                    else 
                      mov r20.z, l(-1)
                    endif 
                    or r19.z, r25.w, r20.z
                    if_z r19.z
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.w, r12.w, l(28), t12.xxxx
                      max r19.x, r19.x, l(0.00006104)
                      and r12.w, r12.w, l(0x0000ffff)
                      if_nz r8.w
                        utof r20.z, r12.w
                        mov r19.z, l(0)
                        mov r25.w, l(0)
                        loop 
                          ige r27.w, r25.w, l(8)
                          breakc_nz r27.w
                          dp2 r42.x, icb[r25.w + 0].xyxx, r5.xyxx
                          dp2 r42.y, icb[r25.w + 0].yxyy, r5.xzxx
                          mad r20.xy, r42.xyxx, r13.wwww, r41.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r20.x, r20.xyzx, t9.xxxx, s13, r19.x
                          mad r19.z, r20.x, l(0.125000), r19.z
                          iadd r25.w, r25.w, l(1)
                        endloop 
                      else 
                        utof r41.z, r12.w
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.z, r41.xyzx, t9.xxxx, s13, r19.x
                      endif 
                      mul r12.w, r19.z, r19.z
                      mul r12.w, r19.z, r12.w
                    else 
                      mov r12.w, l(1.000000)
                    endif 
                    mul r14.w, r12.w, r14.w
                  endif 
                endif 
                mad r12.w, -|r15.w|, r4.w, l(1.000000)
                mul r12.w, r12.w, r12.w
                mad r12.w, -r12.w, l(0.620000), l(0.620000)
                add r12.w, -|r15.w|, r12.w
                mad r12.w, r3.z, r12.w, |r15.w|
                mul r12.w, r14.w, r12.w
                mov r33.x, r32.x
                lt r13.w, l(0.000000), r15.w
                mad r20.xyz, r12.wwww, r33.xyzx, r17.xyzx
                dp3_sat r12.w, r7.xyzx, r40.xyzx
                mad r39.xyz, r39.xyzx, r10.wwww, r2.xyzx
                dp3 r10.w, r39.xyzx, r39.xyzx
                rsq r10.w, r10.w
                mul r39.xyz, r10.wwww, r39.xyzx
                dp3 r10.w, r39.xyzx, r2.xyzx
                dp3 r15.w, r7.xyzx, r39.xyzx
                mad r19.x, |r15.w|, r3.y, -|r15.w|
                mad r15.w, |r15.w|, r19.x, l(1.000000)
                mad r19.x, r12.w, r3.w, r4.z
                mul r15.w, r15.w, r15.w
                mul r15.w, r19.x, r15.w
                rcp r15.w, r15.w
                mul r12.w, r21.w, r12.w
                mul r12.w, r12.w, r15.w
                mul r12.w, r14.w, r12.w
                mad r39.xyz, r12.wwww, r33.xyzx, r31.xyzx
                add_sat r10.w, -r10.w, l(1.000000)
                mul r14.w, r10.w, r10.w
                mul r14.w, r14.w, r14.w
                mul r10.w, r10.w, r14.w
                mul r10.w, r10.w, r12.w
                mad r40.xyz, r10.wwww, r33.xyzx, r30.xyzx
                movc r17.xyz, r13.wwww, r20.xyzx, r17.xyzx
                movc r30.xyz, r13.wwww, r40.xyzx, r30.xyzx
                movc r31.xyz, r13.wwww, r39.xyzx, r31.xyzx
              endif 
            endif 
          endif 
          break 
          case l(2)
          mov r20.xy, r35.zwzz
          mov r20.z, r36.w
          add r20.xyz, r20.xyzx, -v7.xyzx
          dp3 r10.w, r20.xyzx, r20.xyzx
          rsq r10.w, r10.w
          mul r39.xyz, r10.wwww, r20.xyzx
          dp3 r12.w, r7.xyzx, r39.xyzx
          lt r13.w, l(0.000000), |r12.w|
          if_nz r13.w
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r10.z, l(112), t12.yzwx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r10.z, l(128), t12.zxyw
            mov r41.xyz, r39.xyzx
            mov r41.w, r40.y
            dp4 r13.w, r41.xyzw, r18.xyzw
            lt r14.w, r13.w, l(1.000000)
            if_nz r14.w
              mov r42.xyz, l(1.000000,1.000000,1.000000,0)
              mov r14.w, l(0)
            else 
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r10.z, l(172), t12.yzwx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r10.z, l(188), t12.wxyz
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xyzw, r10.z, l(204), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.w, r10.z, l(236), t12.xxxx
              add r46.xyz, r32.yzwy, -v7.xyzx
              mul r19.x, r35.x, r35.x
              dp3 r21.w, r46.xyzx, r46.xyzx
              div r19.x, r19.x, r21.w
              min r19.x, r19.x, l(1.000000)
              mad_sat r34.xy, r13.wwww, r34.xzxx, r34.ywyy
              mul r34.zw, r34.xxxy, r34.xxxy
              mad r34.xy, r34.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
              mul r34.xy, r34.xyxx, r34.zwzz
              mul r19.x, r19.x, r34.x
              mul r19.x, r34.y, r19.x
              mov r36.w, r37.x
              dp4 r34.x, r36.xyzw, r18.xyzw
              mov r46.xyz, r37.yzwy
              mov r46.w, r38.w
              dp4 r34.y, r46.xyzw, r18.xyzw
              div r21.xy, r34.xyxx, r13.wwww
              lt r13.w, r43.w, l(0.00048828)
              if_nz r13.w
                mov r44.y, r45.x
                mad_sat r34.xy, |r21.xyxx|, r44.zwzz, r44.xyxx
                mul r34.zw, r34.xxxy, r34.xxxy
                mad r34.xy, r34.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
                mul r34.xy, r34.xyxx, r34.zwzz
                mul r13.w, r34.y, r34.x
              else 
                mov r43.w, r44.y
                mul_sat r34.xyzw, |r21.yyxx|, r43.xyzw
                log r34.xyzw, r34.xyzw
                mul r34.xyzw, r34.xyzw, r44.xxxx
                exp r34.xyzw, r34.xyzw
                add r34.xy, r34.zwzz, r34.xyxx
                log r34.xy, r34.xyxx
                mul r34.xy, r34.xyxx, r45.xxxx
                exp r34.xy, r34.xyxx
                mul r21.w, r34.x, r44.z
                mad r25.w, r44.w, r34.y, l(-1.000000)
                mad r21.w, r44.w, r34.y, -r21.w
                div_sat r21.w, r25.w, r21.w
                mul r25.w, r21.w, r21.w
                mad r21.w, r21.w, l(-2.000000), l(3.000000)
                mul r13.w, r21.w, r25.w
              endif 
              mul r14.w, r13.w, r19.x
              and r13.w, r15.w, l(255)
              if_nz r13.w
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyz, r10.z, l(220), t12.xyzx
                dp3 r15.w, r45.yzwy, r21.xyzx
                dp3 r19.x, r34.xyzx, r21.xyzx
                frc r34.x, r15.w
                frc r34.y, r19.x
                iadd r13.w, r13.w, l(-1)
                utof r34.z, r13.w
                sample_l_indexable(texture2darray)(float,float,float,float) r42.xyz, r34.xyzx, t20.xyzw, s2, l(0.000000)
              else 
                mov r42.xyz, l(1.000000,1.000000,1.000000,0)
              endif 
            endif 
            mov r32.yz, r33.yyzy
            mul r21.xyw, r42.xyxz, r32.xyxz
            lt r13.w, l(0.000000), r14.w
            if_nz r13.w
              ubfe r13.w, l(3), l(27), r33.w
              ine r13.w, r13.w, l(1)
              if_nz r13.w
                mad r13.w, |r12.w|, l(-0.200000), l(0.400000)
                lt r15.w, r12.w, l(0.000000)
                movc r13.w, r15.w, -r13.w, r13.w
                mad r22.xyz, r7.xyzx, r13.wwww, v7.xyzx
                mov r39.xyz, r38.xyzx
                dp4 r13.w, r39.xyzw, r22.xyzw
                dp4 r15.w, r41.xyzw, r22.xyzw
                ge r19.x, r15.w, r13.w
                if_nz r19.x
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.y, r10.z, l(144), t12.xxxx
                  mov r36.w, r37.x
                  dp4 r32.x, r36.xyzw, r22.xyzw
                  mov r38.xyz, r37.yzwy
                  dp4 r32.y, r38.xyzw, r22.xyzw
                  div r22.xy, r32.xyxx, r15.wwww
                  mad_sat r22.xy, r22.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  mad r22.xy, r22.xyxx, r40.zwzz, r40.xyxx
                  div r10.z, r13.w, r15.w
                  max r10.z, r10.z, l(0.00006104)
                  and r13.w, r33.w, l(0x0000ffff)
                  if_nz r8.w
                    utof r32.z, r13.w
                    mov r15.w, l(0)
                    mov r19.x, l(0)
                    loop 
                      ige r25.w, r19.x, l(8)
                      breakc_nz r25.w
                      dp2 r34.x, icb[r19.x + 0].xyxx, r25.xyxx
                      dp2 r34.y, icb[r19.x + 0].yxyy, r25.xzxx
                      mad r32.xy, r34.xyxx, r35.yyyy, r22.xyxx
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r25.w, r32.xyzx, t9.xxxx, s13, r10.z
                      mad r15.w, r25.w, l(0.125000), r15.w
                      iadd r19.x, r19.x, l(1)
                    endloop 
                  else 
                    utof r22.z, r13.w
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r15.w, r22.xyzx, t9.xxxx, s13, r10.z
                  endif 
                  mul r10.z, r15.w, r15.w
                  mul r10.z, r15.w, r10.z
                else 
                  mov r10.z, l(1.000000)
                endif 
              else 
                mov r10.z, l(1.000000)
              endif 
              mul r10.z, r10.z, r14.w
              lt r13.w, l(0.000000), r10.z
              if_nz r13.w
                mul r13.w, r3.y, r33.x
                mul r13.w, r13.w, l(0.250000)
                ubfe r14.w, l(4), l(16), r33.w
                ult r19.x, l(0), r14.w
                and r19.x, r2.w, r19.x
                if_nz r19.x
                  iadd r14.w, r14.w, cb2[0].x
                  iadd r14.w, r14.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.x, r14.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r14.w, l(68), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r14.w, l(84), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r14.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r14.w, l(116), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r14.w, l(132), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r14.w, l(148), t12.xyzw
                  mad r22.x, |r12.w|, l(-0.200000), l(0.400000)
                  lt r22.y, r12.w, l(0.000000)
                  movc r22.x, r22.y, -r22.x, r22.x
                  mad r23.xyz, r7.xyzx, r22.xxxx, v7.xyzx
                  dp4 r22.x, r32.xyzw, r23.xyzw
                  dp4 r22.y, r34.xyzw, r23.xyzw
                  dp4 r22.z, r35.xyzw, r23.xyzw
                  dp4 r23.x, r36.xyzw, r23.xyzw
                  lt r23.y, r23.x, r22.z
                  div r22.xy, r22.xyxx, r23.xxxx
                  mad r22.xy, r22.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r22.xy, r38.zwzz, r22.xyxx
                  mul r22.xy, r38.xyxx, r22.xyxx
                  div r32.xy, r19.xxxx, r37.xzxx
                  add r32.zw, -r32.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                  ge r32.zw, r22.xxxy, r32.zzzw
                  ge r32.xy, r32.xyxx, r22.xyxx
                  or r32.xy, r32.xyxx, r32.zwzz
                  or r23.z, r32.y, r32.x
                  or r23.y, r23.y, r23.z
                  if_z r23.y
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.y, r14.w, l(28), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xy, r14.w, l(164), t12.xyxx
                    mov_sat r22.xy, r22.xyxx
                    mad r33.xy, r22.xyxx, r37.xzxx, r37.ywyy
                    mul r14.w, r23.x, r32.y
                    mad r22.x, r32.x, r23.x, r22.z
                    div r14.w, r22.x, r14.w
                    max r14.w, r14.w, l(0.00006104)
                    and r22.x, r23.y, l(0x0000ffff)
                    if_nz r8.w
                      utof r23.z, r22.x
                      mov r22.yz, l(0,0,0,0)
                      loop 
                        ige r25.w, r22.z, l(8)
                        breakc_nz r25.w
                        dp2 r32.x, icb[r22.z + 0].xyxx, r26.xyxx
                        dp2 r32.y, icb[r22.z + 0].yxyy, r26.xzxx
                        mad r23.xy, r32.xyxx, r19.xxxx, r33.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.x, r23.xyzx, t9.xxxx, s13, r14.w
                        mad r22.y, r23.x, l(0.125000), r22.y
                        iadd r22.z, r22.z, l(1)
                      endloop 
                    else 
                      utof r33.z, r22.x
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.y, r33.xyzx, t9.xxxx, s13, r14.w
                    endif 
                    mul r14.w, r22.y, r22.y
                    mul r14.w, r22.y, r14.w
                  else 
                    mov r14.w, l(1.000000)
                  endif 
                  mul r10.z, r10.z, r14.w
                else 
                  ubfe r14.w, l(4), l(20), r33.w
                  ult r19.x, l(0), r14.w
                  and r19.x, r0.y, r19.x
                  if_nz r19.x
                    iadd r14.w, r14.w, cb2[0].x
                    iadd r14.w, r14.w, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.x, r14.w, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r14.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r14.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r14.w, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r14.w, l(116), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r14.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r14.w, l(148), t12.xyzw
                    mad r22.x, |r12.w|, l(-0.200000), l(0.400000)
                    lt r22.z, r12.w, l(0.000000)
                    movc r22.x, r22.z, -r22.x, r22.x
                    mad r24.xyz, r7.xyzx, r22.xxxx, v7.xyzx
                    dp4 r23.x, r32.xyzw, r24.xyzw
                    dp4 r23.y, r33.xyzw, r24.xyzw
                    dp4 r22.x, r34.xyzw, r24.xyzw
                    dp4 r22.z, r35.xyzw, r24.xyzw
                    lt r23.z, r22.z, r22.x
                    div r23.xy, r23.xyxx, r22.zzzz
                    mad r23.xy, r23.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r23.xy, r37.zwzz, r23.xyxx
                    mul r23.xy, r37.xyxx, r23.xyxx
                    div r24.xy, r19.xxxx, r36.xzxx
                    add r32.xy, -r24.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                    ge r32.xy, r23.xyxx, r32.xyxx
                    ge r24.xy, r24.xyxx, r23.xyxx
                    or r24.xy, r24.xyxx, r32.xyxx
                    or r24.x, r24.y, r24.x
                    or r23.z, r23.z, r24.x
                    if_z r23.z
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.z, r14.w, l(28), t12.xxxx
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r24.xy, r14.w, l(164), t12.xyxx
                      mov_sat r23.xy, r23.xyxx
                      mad r32.xy, r23.xyxx, r36.xzxx, r36.ywyy
                      mul r14.w, r22.z, r24.y
                      mad r22.x, r24.x, r22.z, r22.x
                      div r14.w, r22.x, r14.w
                      max r14.w, r14.w, l(0.00006104)
                      and r22.x, r23.z, l(0x0000ffff)
                      if_nz r8.w
                        utof r23.z, r22.x
                        mov r22.z, l(0)
                        mov r24.x, l(0)
                        loop 
                          ige r24.y, r24.x, l(8)
                          breakc_nz r24.y
                          dp2 r33.x, icb[r24.x + 0].xyxx, r27.xyxx
                          dp2 r33.y, icb[r24.x + 0].yxyy, r27.xzxx
                          mad r23.xy, r33.xyxx, r19.xxxx, r32.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.x, r23.xyzx, t9.xxxx, s13, r14.w
                          mad r22.z, r23.x, l(0.125000), r22.z
                          iadd r24.x, r24.x, l(1)
                        endloop 
                      else 
                        utof r32.z, r22.x
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.z, r32.xyzx, t9.xxxx, s13, r14.w
                      endif 
                      mul r14.w, r22.z, r22.z
                      mul r14.w, r22.z, r14.w
                    else 
                      mov r14.w, l(1.000000)
                    endif 
                    mul r10.z, r10.z, r14.w
                  endif 
                endif 
                mad r14.w, -|r12.w|, r4.w, l(1.000000)
                mul r14.w, r14.w, r14.w
                mad r14.w, -r14.w, l(0.620000), l(0.620000)
                add r14.w, -|r12.w|, r14.w
                mad r14.w, r3.z, r14.w, |r12.w|
                mul r14.w, r10.z, r14.w
                lt r19.x, l(0.000000), r12.w
                mad r23.xyz, r14.wwww, r21.xywx, r17.xyzx
                mov_sat r12.w, r12.w
                mad r20.xyz, r20.xyzx, r10.wwww, r2.xyzx
                dp3 r10.w, r20.xyzx, r20.xyzx
                rsq r10.w, r10.w
                mul r20.xyz, r10.wwww, r20.xyzx
                dp3 r10.w, r20.xyzx, r2.xyzx
                dp3 r14.w, r7.xyzx, r20.xyzx
                mad r20.x, |r14.w|, r3.y, -|r14.w|
                mad r14.w, |r14.w|, r20.x, l(1.000000)
                mad r20.x, r12.w, r3.w, r4.z
                mul r14.w, r14.w, r14.w
                mul r14.w, r20.x, r14.w
                rcp r14.w, r14.w
                mul r12.w, r13.w, r12.w
                mul r12.w, r12.w, r14.w
                mul r10.z, r10.z, r12.w
                mad r20.xyz, r10.zzzz, r21.xywx, r31.xyzx
                add_sat r10.w, -r10.w, l(1.000000)
                mul r12.w, r10.w, r10.w
                mul r12.w, r12.w, r12.w
                mul r10.w, r10.w, r12.w
                mul r10.z, r10.w, r10.z
                mad r21.xyw, r10.zzzz, r21.xyxw, r30.xyxz
                movc r17.xyz, r19.xxxx, r23.xyzx, r17.xyzx
                movc r30.xyz, r19.xxxx, r21.xywx, r30.xyzx
                movc r31.xyz, r19.xxxx, r20.xyzx, r31.xyzx
              endif 
            endif 
          endif 
          break 
          default 
          break 
        endswitch 
      endif 
    endif 
  endloop 
  mov r11.yzw, r17.xxyz
  mov r28.xyz, r30.xyzx
  mov r29.xyz, r31.xyzx
  iadd r6.w, r6.w, l(32)
endloop 
mul r1.yzw, r0.wwww, r29.xxyz
mul r2.xyz, r0.wwww, r28.xyzx
mul r2.xyz, r2.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
mad r1.yzw, r1.yyzw, l(0.000000, 0.040000, 0.040000, 0.040000), r2.xxyz
mad r1.yzw, r11.yyzw, r6.xxyz, r1.yyzw
add r0.y, -cb0[19].z, l(1.000000)
mul r0.y, r0.y, r1.x
mad r2.xyz, r8.xyzx, r0.zzzz, -r9.xyzx
mad r0.yzw, r0.yyyy, r2.xxyz, r9.xxyz
mul r1.x, r1.x, v1.w
mul r2.w, r0.x, r1.x
dp3 r0.x, r1.yzwy, l(0.299000, 0.587000, 0.114000, 0.000000)
max r0.x, r0.x, l(0.000100)
max r0.x, r0.x, cb1[85].x
mul r3.xyz, r0.xxxx, r0.yzwy
movc r0.xyz, cb0[17].xxxx, r3.xyzx, r0.yzwy
add r0.xyz, r0.xyzx, r1.yzwy
lt r0.w, l(0.000000), cb2[9].z
if_nz r0.w
  dp3 r0.w, v7.xyzx, v7.xyzx
  rsq r1.x, r0.w
  mul r1.xyz, r1.xxxx, v7.xyzx
  sqrt r0.w, r0.w
  lt r1.w, l(0.000000), cb2[13].w
  if_nz r1.w
    mad r3.xy, r0.wwww, cb2[15].xyxx, cb2[14].zwzz
    mul r3.xy, r3.xyxx, cb2[16].xyxx
    lt r1.w, l(0.010000), |v7.z|
    mul r3.zw, v7.zzzz, cb2[15].zzzw
    mul r4.xy, r3.zwzz, l(-1.442695, -1.442695, 0.000000, 0.000000)
    exp r4.xy, r4.xyxx
    add r4.xy, -r4.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    div r3.zw, r4.xxxy, r3.zzzw
    mul r3.zw, r3.zzzw, r3.xxxy
    movc r3.xy, r1.wwww, r3.zwzz, r3.xyxx
    mul r3.xzw, r3.xxxx, cb2[12].xxyz
    exp r3.xzw, r3.xxzw
    mul r4.xyz, r3.yyyy, cb2[12].xyzx
    exp r4.xyz, r4.xyzx
    add r4.xyz, -r3.xzwx, r4.xyzx
    mad r3.xyz, cb2[13].wwww, r4.xyzx, r3.xzwx
  else 
    mad r1.w, r0.w, cb2[15].x, cb2[14].z
    mul r1.w, r1.w, cb2[16].x
    lt r3.w, l(0.010000), |v7.z|
    mul r4.x, v7.z, cb2[15].z
    mul r4.y, r4.x, l(-1.442695)
    exp r4.y, r4.y
    add r4.y, -r4.y, l(1.000000)
    div r4.x, r4.y, r4.x
    mul r4.x, r1.w, r4.x
    movc r1.w, r3.w, r4.x, r1.w
    mul r4.xyz, r1.wwww, cb2[12].xyzx
    exp r3.xyz, r4.xyzx
  endif 
  mad r3.xyz, r3.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r3.xyz, r3.xyzx, -cb2[9].zzzz
  dp3 r1.x, cb2[7].yzwy, -r1.xyzx
  mad r1.y, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r1.z, cb2[8].w, -r1.x, l(1.000000)
  mul r1.z, r1.z, r1.z
  mul r1.z, r1.z, l(12.566371)
  div r1.y, r1.y, r1.z
  add r0.w, r0.w, -cb2[10].w
  mul_sat r0.w, r0.w, cb2[11].w
  mul r0.w, r0.w, r1.y
  mov_sat r1.x, r1.x
  mad r1.x, r1.x, r1.x, l(1.000000)
  mad r1.x, r1.x, l(0.05968310), l(-1.000000)
  mad r1.x, cb2[8].z, r1.x, l(1.000000)
  mul r1.yzw, r0.wwww, cb2[11].xxyz
  mad r1.xyz, r1.xxxx, cb2[10].xyzx, r1.yzwy
  mul r1.xyz, r1.xyzx, cb2[9].wwww
  add r4.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r1.xyz, r1.xyzx, r4.xyzx
  mad r1.xyz, r0.xyzx, r3.xyzx, r1.xyzx
else 
  mul r0.w, v7.z, cb2[6].x
  mad r1.w, cb2[6].x, v7.z, cb2[5].x
  lt r3.x, |r0.w|, l(0.000100)
  min r3.y, r1.w, l(64.000000)
  mul r3.y, r3.y, l(1.442695)
  exp r3.y, r3.y
  mov_sat r3.z, cb2[6].z
  lt r3.w, r1.w, l(0.000000)
  add r1.w, r1.w, l(1.000000)
  movc r1.w, r3.w, r3.y, r1.w
  add r1.w, r1.w, -cb2[6].z
  movc r0.w, r3.x, l(1.000000), r0.w
  div r0.w, r1.w, r0.w
  movc r0.w, r3.x, r3.z, r0.w
  mul r0.w, r0.w, cb2[5].z
  dp3 r1.w, v7.xyzx, v7.xyzx
  sqrt r3.x, r1.w
  mad r0.w, r0.w, r3.x, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  rsq r1.w, r1.w
  mul r3.xyz, r1.wwww, v7.xyzx
  dp3 r1.w, cb2[7].yzwy, r3.xyzx
  mad_sat r1.w, cb2[8].y, r1.w, cb2[8].x
  add r3.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r3.xyzw, r1.wwww, r3.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r3.w
  add r3.xyz, -r0.xyzx, r3.xyzx
  mad r1.xyz, r0.wwww, r3.xyzx, r0.xyzx
endif 
mul r0.xyz, r1.xyzx, cb1[85].yyyy
ge r1.xyz, r0.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.xyz, r0.xyzx, r1.xyzx
min r0.xyz, r0.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
max r1.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r2.xyz, r2.wwww, r1.xyzx
and r0.w, r2.w, l(0x7f800000)
ieq r0.w, r0.w, l(0x7f800000)
eq r3.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
and r3.xy, r3.zwzz, r3.xyxx
and r1.w, r3.y, r3.x
or r0.w, r0.w, r1.w
if_z r0.w
  ftou r3.xy, v0.xyxx
  imm_atomic_iadd r3.z, u6, r3.xyxx, l(1)
  ult r0.w, r3.z, cb2[58].z
  if_nz r0.w
    max r0.w, r2.z, r2.y
    max r0.w, r0.w, r2.x
    mov r0.w, |r0.w|
    and r0.w, r0.w, l(0x7f800000)
    iadd r0.w, r0.w, l(0x00800000)
    mad r1.xyz, r1.xyzx, r2.wwww, r0.wwww
    ubfe r1.x, l(8), l(15), r1.x
    ushr r1.yz, r1.yyzy, l(0, 15, 15, 0)
    bfi r1.yz, l(0, 8, 8, 0), l(0, 8, 16, 0), r1.yyzy, l(0, 0, 0, 0)
    iadd r1.x, r1.y, r1.x
    iadd r1.x, r1.z, r1.x
    ishl r0.w, r0.w, l(1)
    iadd r1.xzw, r0.wwww, r1.xxxx
    mov_sat r0.w, r2.w
    mul r0.w, r0.w, l(2046.000000)
    ftou r0.w, r0.w
    ishl r3.w, v0.z, l(2)
    and r0.w, r0.w, l(2046)
    bfi r1.y, l(11), l(0), r0.w, r3.w
    store_uav_typed u7.xyzw, r3.xyzz, r1.xyzw
    mov r0.w, l(-1)
  else 
    mov r0.w, l(0)
  endif 
else 
  mov r0.w, l(-1)
endif 
mul r2.xyz, r2.wwww, r0.xyzx
movc o0.xyzw, r0.wwww, l(0,0,0,0), r2.xyzw
ret 
// Approximately 2113 instruction slots used
