//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:32:21 2021
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float3 colorTint;                  // Offset:  160 Size:    12
//   float3 specColorTint;              // Offset:  176 Size:    12 [unused]
//   float baseNormalHeight;            // Offset:  188 Size:     4
//   float2 glossRange;                 // Offset:  192 Size:     8
//   float3 backlightScatterColor;      // Offset:  208 Size:    12
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16 [unused]
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4 [unused]
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// colorSampler                      sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// specColorSampler                  sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// normalSampler                     sampler      NA          NA             s5      1 
// aoSampler                         sampler      NA          NA             s6      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// colorMap                          texture  float4          2d             t0      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// specColorMap                      texture  float4          2d            t21      1 
// normalMap                         texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// glossMap                          texture  float4          2d            t24      1 
// aoMap                             texture  float4          2d            t25      1 
// thicknessMap                      texture  float4          2d            t26      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyz 
// COLOR                    1   x           1     NONE   float   x   
// TEXCOORD                 0    yz         1     NONE   float    yz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// OFFPOSITION              0   xyz         5     NONE   float   xyz 
// SV_IsFrontFace           0   x           6    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[14], immediateIndexed
dcl_constantbuffer CB1[93], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2d (float,float,float,float) t26
dcl_resource_texture2darray (float,float,float,float) t31
dcl_input_ps_siv linear noperspective v0.xyz, position
dcl_input_ps linear v1.x
dcl_input_ps linear v1.yz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps_sgv constant v6.x, is_front_face
dcl_output o0.xyzw
dcl_temps 49
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.yzyy, t0.xyzw, s1
add r1.xyz, cb0[10].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r1.xyz, r0.wwww, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r0.xyz, r0.xyzx, r1.xyzx
mul o0.w, r0.w, v1.x
sample_indexable(texture2d)(float,float,float,float) r1.xyz, v1.yzyy, t21.xyzw, s3
sample_indexable(texture2d)(float,float,float,float) r0.w, v1.yzyy, t25.yzwx, s6
sample_indexable(texture2d)(float,float,float,float) r1.w, v1.yzyy, t24.yzwx, s3
add r2.x, -cb0[12].x, cb0[12].y
mad r1.w, r1.w, r2.x, cb0[12].x
mul_sat r1.w, r1.w, l(0.05882353)
sample_indexable(texture2d)(float,float,float,float) r2.xyz, v1.yzyy, t22.xyzw, s5
add r2.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.000000, 0.000000)
mad r2.xyz, cb0[11].wwww, r2.xyzx, l(0.500000, 0.500000, 0.000000, 0.000000)
mad r2.xy, r2.xyxx, l(1.99218750, 1.99218750, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r2.w, r2.xyxx, r2.xyxx
add r2.w, -r2.w, l(1.000000)
max r2.w, r2.w, l(0.000000)
sqrt r2.w, r2.w
mul r2.z, r2.z, r2.z
mul r2.z, r2.z, l(0.33333334)
min r2.z, r2.z, l(1.000000)
movc r3.x, v6.x, l(1.000000), l(-1.000000)
dp3 r3.y, v2.xyzx, v2.xyzx
rsq r3.y, r3.y
mul r3.yzw, r3.yyyy, v2.xxyz
mul r3.yzw, r3.xxxx, r3.yyzw
dp3 r4.x, v3.xyzx, v3.xyzx
rsq r4.x, r4.x
mul r4.xyz, r4.xxxx, v3.xyzx
mul r4.xyz, r3.xxxx, r4.xyzx
dp3 r4.w, v4.xyzx, v4.xyzx
rsq r4.w, r4.w
mul r5.xyz, r4.wwww, v4.xyzx
mul r5.xyz, r3.xxxx, r5.xyzx
mul r1.w, r1.w, l(-17.000000)
exp r1.w, r1.w
add r1.w, r1.w, r2.z
log r1.w, r1.w
mul r1.w, r1.w, l(-0.05882353)
max r6.y, r1.w, l(0.000000)
mul r5.xyz, r2.yyyy, r5.xyzx
mad r2.xyz, r4.xyzx, r2.xxxx, r5.xyzx
mad r2.xyz, r3.yzwy, r2.wwww, r2.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
sample_indexable(texture2d)(float,float,float,float) r1.w, v1.yzyy, t26.yzwx, s1
add r1.w, -r1.w, l(1.000000)
mul r3.xyz, r1.wwww, cb0[13].xyzx
mul r3.xyz, r1.xyzx, r3.xyzx
ftou r4.xy, v0.xyxx
ge r1.w, v0.z, l(0.984375)
mul r3.w, v0.z, l(1.01587307)
mad r4.z, v0.z, l(64.000000), l(-63.000000)
movc r1.w, r1.w, r4.z, r3.w
max r1.w, r1.w, l(0.00000001)
rcp r1.w, r1.w
dp3 r3.w, -v5.xyzx, -v5.xyzx
rsq r3.w, r3.w
mul r5.xyz, r3.wwww, -v5.xyzx
ine r4.z, cb1[92].x, l(0)
utof r6.zw, r4.yyyx
dp2 r4.w, r6.wzww, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r4.w, r4.w
mul r4.w, r4.w, l(52.982918)
frc r4.w, r4.w
mad r4.w, r4.w, l(6.28318548), cb1[70].w
sincos r7.x, r8.x, r4.w
dp2 r4.w, r6.zwzz, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r4.w, r4.w
mul r4.w, r4.w, l(52.982918)
frc r4.w, r4.w
mad r4.w, r4.w, l(6.28318548), cb1[70].w
sincos r9.x, r10.x, r4.w
dp3_sat r6.x, r2.xyzx, r5.xyzx
dp3 r4.w, -r5.xyzx, r2.xyzx
add r4.w, r4.w, r4.w
mad r11.xyz, r2.xyzx, -r4.wwww, -r5.xyzx
mul r4.w, r6.y, l(17.000000)
exp r4.w, r4.w
add r4.w, r4.w, l(2.000000)
div r4.w, l(2.000000), r4.w
sqrt r5.w, r4.w
add r6.z, -r6.y, l(1.000000)
mul r6.w, r6.z, l(5.000000)
mad r7.z, r6.z, l(5.000000), l(-2.500000)
mul r7.z, r7.z, l(0.400000)
max r7.z, r7.z, l(0.000000)
mad r9.yz, -r6.zzzz, l(0.000000, 10.000000, 5.000000, 0.000000), l(0.000000, 6.857410, 7.085000, 0.000000)
exp r7.w, r9.y
mul r7.w, r6.x, r7.w
mul r7.zw, r7.zzzw, l(0.000000, 0.000000, 100.000000, 9.136810)
mul r8.w, r6.z, r6.w
mad r8.w, -r8.w, l(2.015905), r9.z
exp r8.w, r8.w
mul r8.w, r6.x, r8.w
mul r8.w, r8.w, l(9.708090)
max r7.w, r7.w, r8.w
max r7.w, r7.w, l(1.268160)
iadd r8.w, cb2[0].y, -cb2[58].x
mul r1.w, r1.w, l(0.00781250)
min r1.w, r1.w, l(15.000000)
ftou r1.w, r1.w
ushr r12.xy, r4.xyxx, l(6, 6, 0, 0)
ishl r12.z, r1.w, l(4)
and r1.w, r8.w, l(-32)
iadd r4.x, -r1.w, r8.w
and r4.y, cb2[0].y, l(-32)
iadd r9.y, -r4.y, cb2[0].y
mov r13.xy, l(0,0,0,0)
mov r14.w, l(0)
mov r15.yz, l(0,0,1.000000,0)
mov r16.xy, l(0,0,0,0)
mov r17.x, l(1.000000)
mov r18.xy, l(0,0,0,0)
mov r19.xy, l(0,0,0,0)
mov r20.xyzw, l(0,0,0,0)
mov r21.yzw, l(0,0,0,0)
mov r9.z, r1.w
loop 
  uge r9.w, r9.z, cb2[0].y
  breakc_nz r9.w
  ushr r13.z, r9.z, l(5)
  iadd r14.xyz, r12.xyzx, r13.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r9.w, r14.xyzw, t7.yzwx
  ieq r10.y, r1.w, r9.z
  bfi r10.z, r4.x, l(0), l(0), r9.w
  movc r9.w, r10.y, r10.z, r9.w
  ieq r10.y, r4.y, r9.z
  ubfe r10.z, r9.y, l(0), r9.w
  movc r9.w, r10.y, r10.z, r9.w
  iadd r10.y, r9.z, cb2[0].x
  mov r22.xyzw, r20.xyzw
  mov r23.xyz, r21.yzwy
  mov r10.z, r9.w
  loop 
    breakc_z r10.z
    firstbit_lo r10.w, r10.z
    ishl r12.w, l(1), r10.w
    and r13.z, r10.z, r12.w
    if_nz r13.z
      xor r10.z, r10.z, r12.w
      iadd r12.w, r10.w, r10.y
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r24.xyzw, r12.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r14.xy, r12.w, l(16), t11.xyxx
      add r24.xyz, r24.xyzx, -v5.xyzx
      mov r14.z, r24.w
      lt r14.xyz, |r24.xyzx|, r14.zxyz
      and r12.w, r14.y, r14.x
      and r12.w, r14.z, r12.w
      if_nz r12.w
        iadd r10.w, r9.z, r10.w
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r10.w, l(0), t15.wxyz
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r13.zw, r10.w, l(96), t15.xxxy
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r10.w, l(116), t15.zwxy
        add r14.xyz, -r24.yzwy, v5.xyzx
        and r12.w, r25.w, l(0x0000ffff)
        ubfe r15.w, l(6), l(25), r25.w
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r26.xyzw, r12.w, l(0), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r12.w, l(16), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r12.w, l(32), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r12.w, l(48), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r12.w, l(64), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r12.w, l(80), t16.xyzw
        dp3 r16.w, r26.xyzx, r14.xyzx
        add_sat r16.w, r26.w, r16.w
        dp3 r17.z, r27.xyzx, r14.xyzx
        add_sat r17.z, r27.w, r17.z
        mul r16.w, r16.w, r17.z
        dp3 r17.z, r28.xyzx, r14.xyzx
        add_sat r17.z, r28.w, r17.z
        mul r16.w, r16.w, r17.z
        dp3 r17.z, r29.xyzx, r14.xyzx
        add_sat r17.z, r29.w, r17.z
        mul r16.w, r16.w, r17.z
        dp3 r17.z, r30.xyzx, r14.xyzx
        add_sat r17.z, r30.w, r17.z
        mul r16.w, r16.w, r17.z
        dp3 r17.z, r31.xyzx, r14.xyzx
        add_sat r17.z, r31.w, r17.z
        mul r15.x, r16.w, r17.z
        and r16.w, r13.z, l(1)
        movc r17.zw, r16.wwww, r15.xxxy, r15.zzzx
        mov r15.x, r13.z
        mov r26.xy, r17.zwzz
        mov r16.w, l(1)
        loop 
          ige r18.w, r16.w, r15.w
          breakc_nz r18.w
          iadd r18.w, r12.w, r16.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r18.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r18.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r18.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r18.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r18.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r18.w, l(80), t16.xyzw
          dp3 r18.w, r27.xyzx, r14.xyzx
          add_sat r18.w, r27.w, r18.w
          mul r18.w, r18.w, r26.x
          dp3 r19.w, r28.xyzx, r14.xyzx
          add_sat r19.w, r28.w, r19.w
          mul r18.w, r18.w, r19.w
          dp3 r19.w, r29.xyzx, r14.xyzx
          add_sat r19.w, r29.w, r19.w
          mul r18.w, r18.w, r19.w
          dp3 r19.w, r30.xyzx, r14.xyzx
          add_sat r19.w, r30.w, r19.w
          mul r18.w, r18.w, r19.w
          dp3 r19.w, r31.xyzx, r14.xyzx
          add_sat r19.w, r31.w, r19.w
          mul r18.w, r18.w, r19.w
          dp3 r19.w, r32.xyzx, r14.xyzx
          add_sat r19.w, r32.w, r19.w
          mul r26.x, r18.w, r19.w
          ushr r24.w, r15.x, l(2)
          ubfe r26.z, l(1), l(2), r15.x
          and r26.w, r24.w, l(2)
          max r27.x, r26.x, r26.y
          mad r18.w, -r18.w, r19.w, l(1.000000)
          mul r18.w, r18.w, r26.y
          movc r17.y, r26.w, r18.w, r27.x
          movc r26.xy, r26.zzzz, r26.xyxx, r17.xyxx
          iadd r16.w, r16.w, l(1)
          mov r15.x, r24.w
        endloop 
        mov_sat r26.y, r26.y
        mul r12.w, r13.w, r26.y
        lt r13.z, l(0.000000), r12.w
        if_nz r13.z
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r10.w, l(16), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r10.w, l(32), t15.yxwz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r10.w, l(48), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r10.w, l(64), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r10.w, l(80), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r10.w, l(132), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r10.w, l(148), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r10.w, l(164), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r10.w, l(180), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r10.w, l(196), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xy, r10.w, l(212), t15.xyxx
          mad r23.z, r26.y, r13.w, r23.z
          mul r10.w, r25.z, r12.w
          mov r25.z, r32.z
          dp3 r12.w, r11.xyzx, r25.xyzx
          dp3 r13.z, r14.xyzx, r25.xyzx
          add r13.z, -r32.w, r13.z
          ge r13.w, r13.z, l(0.000000)
          max r13.z, r7.z, |r13.z|
          movc r13.z, r13.w, r13.z, -r13.z
          max r12.w, -r12.w, l(0.00000010)
          div r12.w, r13.z, r12.w
          min r12.w, |r12.w|, l(131072.000000)
          mov r32.z, r33.z
          dp3 r13.z, r11.xyzx, r32.xyzx
          dp3 r13.w, r14.xyzx, r32.xyzx
          add r13.w, -r33.w, r13.w
          ge r15.x, r13.w, l(0.000000)
          max r13.w, r7.z, |r13.w|
          movc r13.w, r15.x, r13.w, -r13.w
          max r13.z, -r13.z, l(0.00000010)
          div r13.z, r13.w, r13.z
          min r12.w, r12.w, |r13.z|
          mov r33.z, r34.z
          dp3 r13.z, r11.xyzx, r33.xyzx
          dp3 r13.w, r14.xyzx, r33.xyzx
          add r13.w, -r34.w, r13.w
          ge r15.x, r13.w, l(0.000000)
          max r13.w, r7.z, |r13.w|
          movc r13.w, r15.x, r13.w, -r13.w
          max r13.z, -r13.z, l(0.00000010)
          div r13.z, r13.w, r13.z
          min r12.w, r12.w, |r13.z|
          mov r34.z, r35.z
          dp3 r13.z, r11.xyzx, r34.xyzx
          dp3 r13.w, r14.xyzx, r34.xyzx
          add r13.w, -r35.w, r13.w
          ge r15.x, r13.w, l(0.000000)
          max r13.w, r7.z, |r13.w|
          movc r13.w, r15.x, r13.w, -r13.w
          max r13.z, -r13.z, l(0.00000010)
          div r13.z, r13.w, r13.z
          min r12.w, r12.w, |r13.z|
          mov r35.z, r36.x
          dp3 r13.z, r11.xyzx, r35.xyzx
          dp3 r13.w, r14.xyzx, r35.xyzx
          add r13.w, -r36.y, r13.w
          ge r15.x, r13.w, l(0.000000)
          max r13.w, r7.z, |r13.w|
          movc r13.w, r15.x, r13.w, -r13.w
          max r13.z, -r13.z, l(0.00000010)
          div r13.z, r13.w, r13.z
          min r12.w, r12.w, |r13.z|
          mov r37.zw, r36.zzzw
          dp3 r13.z, r11.zxyz, r37.xzwx
          dp3 r13.w, r14.zxyz, r37.xzwx
          add r13.w, -r37.y, r13.w
          ge r15.x, r13.w, l(0.000000)
          max r13.w, r7.z, |r13.w|
          movc r13.w, r15.x, r13.w, -r13.w
          max r13.z, -r13.z, l(0.00000010)
          div r13.z, r13.w, r13.z
          min r12.w, r12.w, |r13.z|
          mov r25.x, r29.w
          mov r25.yz, r30.zzwz
          add r17.yzw, r14.xxyz, r25.xxyz
          mad r17.yzw, r11.xxyz, r12.wwww, r17.yyzw
          dp3 r13.z, r17.yzwy, r17.yzwy
          sqrt r13.z, r13.z
          div r12.w, r12.w, r13.z
          add r12.w, r12.w, r12.w
          sqrt r12.w, r12.w
          mad r12.w, r6.z, l(5.000000), r12.w
          add r12.w, r12.w, l(-0.844800)
          mov r24.y, r27.z
          mov r24.z, r28.x
          dp3 r32.x, r17.yzwy, r24.xyzx
          mov r25.xy, r27.xwxx
          mov r25.z, r28.w
          dp3 r32.y, r17.yzwy, r25.xyzx
          mov r28.x, r27.y
          dp3 r32.z, r17.yzwy, r28.xyzx
          ubfe r13.z, l(9), l(16), r25.w
          utof r32.w, r13.z
          sample_l_indexable(texturecubearray)(float,float,float,float) r17.yzw, r32.xyzw, t8.wxyz, s2, r12.w
          dp3 r27.x, r14.xyzx, r24.xyzx
          dp3 r27.y, r14.xyzx, r25.xyzx
          dp3 r27.z, r14.xyzx, r28.xyzx
          mad_sat r14.xyz, r27.xyzx, r29.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
          mov r30.z, r31.x
          mad r14.xyz, r14.xyzx, r30.xyzx, r31.yzwy
          dp3 r32.x, r2.xyzx, r24.xyzx
          dp3 r32.y, r2.xyzx, r25.xyzx
          dp3 r32.z, r2.xyzx, r28.xyzx
          lt r24.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r32.xyzx
          movc r16.z, r24.x, l(0), l(0.500000)
          add r25.xyz, r14.xyzx, r16.xyzx
          sample_l_indexable(texture3d)(float,float,float,float) r25.xyz, r25.xyzx, t17.xyzw, s4, l(0.000000)
          mul r26.xzw, r32.xxyz, r32.xxyz
          mul r26.xzw, r10.wwww, r26.xxzw
          movc r18.z, r24.y, l(0), l(0.500000)
          add r24.xyw, r14.xyxz, r18.xyxz
          sample_l_indexable(texture3d)(float,float,float,float) r24.xyw, r24.xywx, t18.xywz, s4, l(0.000000)
          mul r24.xyw, r26.zzzz, r24.xyxw
          mad r24.xyw, r25.xyxz, r26.xxxx, r24.xyxw
          movc r19.z, r24.z, l(0), l(0.500000)
          add r14.xyz, r14.xyzx, r19.xyzx
          sample_l_indexable(texture3d)(float,float,float,float) r14.xyz, r14.xyzx, t19.xyzw, s4, l(0.000000)
          mad r14.xyz, r14.xyzx, r26.wwww, r24.xywx
          sample_l_indexable(texturecubearray)(float,float,float,float) r24.xyz, r32.xyzw, t8.xyzw, s2, l(6.000000)
          mul r25.xyz, r14.xyzx, r24.xyzx
          dp3 r12.w, r25.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r22.xyz, r14.xyzx, r24.xyzx, r22.xyzx
          mul r13.z, r7.w, r12.w
          mul r14.xyz, r10.wwww, r17.yzwy
          dp3 r10.w, r14.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r10.w, r7.w, r12.w, r10.w
          div r10.w, r13.z, r10.w
          mov r24.x, r22.w
          mov r24.yz, r23.xxyx
          mad r23.xyw, r14.yzyx, r10.wwww, r24.yzyx
          mov r22.w, r23.w
        endif 
      endif 
    endif 
  endloop 
  mov r20.xyzw, r22.xyzw
  mov r21.yzw, r23.xxyz
  iadd r9.z, r9.z, l(32)
endloop 
lt r4.y, r21.w, l(1.000000)
if_nz r4.y
  mov r13.xy, l(0,0,0,0)
  mov r14.w, l(0)
  mov r15.yz, l(0,0,1.000000,0)
  mov r16.xy, l(0,0,0,0)
  mov r17.x, l(1.000000)
  mov r18.xy, l(0,0,0,0)
  mov r19.xy, l(0,0,0,0)
  mov r22.x, r20.w
  mov r22.yzw, r21.yyzw
  mov r9.yzw, r20.xxyz
  mov r4.y, r21.w
  mov r10.y, l(0)
  loop 
    uge r10.z, r10.y, r8.w
    breakc_nz r10.z
    ushr r13.z, r10.y, l(5)
    iadd r14.xyz, r12.xyzx, r13.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r10.z, r14.xyzw, t7.yzxw
    ieq r10.w, r1.w, r10.y
    ubfe r12.w, r4.x, l(0), r10.z
    movc r10.z, r10.w, r12.w, r10.z
    iadd r10.w, r10.y, cb2[0].x
    mov r23.xyzw, r22.xyzw
    mov r14.xyz, r9.yzwy
    mov r12.w, r4.y
    mov r13.z, r10.z
    loop 
      breakc_z r13.z
      firstbit_lo r13.w, r13.z
      ishl r15.w, l(1), r13.w
      and r16.w, r13.z, r15.w
      if_nz r16.w
        xor r13.z, r13.z, r15.w
        iadd r15.w, r10.w, r13.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r24.xyzw, r15.w, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r25.xy, r15.w, l(16), t11.xyxx
        add r24.xyz, r24.xyzx, -v5.xyzx
        mov r25.z, r24.w
        lt r24.xyz, |r24.xyzx|, r25.zxyz
        and r15.w, r24.y, r24.x
        and r15.w, r24.z, r15.w
        if_nz r15.w
          iadd r13.w, r10.y, r13.w
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r13.w, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r17.zw, r13.w, l(96), t15.xxxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r13.w, l(116), t15.zwxy
          add r26.xyz, -r24.yzwy, v5.xyzx
          and r15.w, r25.w, l(0x0000ffff)
          ubfe r16.w, l(6), l(25), r25.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r15.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r15.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r15.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r15.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r15.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r15.w, l(80), t16.xyzw
          dp3 r18.w, r27.xyzx, r26.xyzx
          add_sat r18.w, r27.w, r18.w
          dp3 r19.w, r28.xyzx, r26.xyzx
          add_sat r19.w, r28.w, r19.w
          mul r18.w, r18.w, r19.w
          dp3 r19.w, r29.xyzx, r26.xyzx
          add_sat r19.w, r29.w, r19.w
          mul r18.w, r18.w, r19.w
          dp3 r19.w, r30.xyzx, r26.xyzx
          add_sat r19.w, r30.w, r19.w
          mul r18.w, r18.w, r19.w
          dp3 r19.w, r31.xyzx, r26.xyzx
          add_sat r19.w, r31.w, r19.w
          mul r18.w, r18.w, r19.w
          dp3 r19.w, r32.xyzx, r26.xyzx
          add_sat r19.w, r32.w, r19.w
          mul r15.x, r18.w, r19.w
          and r18.w, r17.z, l(1)
          movc r27.xy, r18.wwww, r15.xyxx, r15.zxzz
          mov r15.x, r17.z
          mov r28.xy, r27.xyxx
          mov r18.w, l(1)
          loop 
            ige r19.w, r18.w, r16.w
            breakc_nz r19.w
            iadd r19.w, r15.w, r18.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r19.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r19.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r19.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r19.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r19.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r19.w, l(80), t16.xyzw
            dp3 r19.w, r29.xyzx, r26.xyzx
            add_sat r19.w, r29.w, r19.w
            mul r19.w, r19.w, r28.x
            dp3 r24.w, r30.xyzx, r26.xyzx
            add_sat r24.w, r30.w, r24.w
            mul r19.w, r19.w, r24.w
            dp3 r24.w, r31.xyzx, r26.xyzx
            add_sat r24.w, r31.w, r24.w
            mul r19.w, r19.w, r24.w
            dp3 r24.w, r32.xyzx, r26.xyzx
            add_sat r24.w, r32.w, r24.w
            mul r19.w, r19.w, r24.w
            dp3 r24.w, r33.xyzx, r26.xyzx
            add_sat r24.w, r33.w, r24.w
            mul r19.w, r19.w, r24.w
            dp3 r24.w, r34.xyzx, r26.xyzx
            add_sat r24.w, r34.w, r24.w
            mul r28.x, r19.w, r24.w
            ushr r26.w, r15.x, l(2)
            ubfe r27.z, l(1), l(2), r15.x
            and r27.w, r26.w, l(2)
            max r28.z, r28.x, r28.y
            mad r19.w, -r19.w, r24.w, l(1.000000)
            mul r19.w, r19.w, r28.y
            movc r17.y, r27.w, r19.w, r28.z
            movc r28.xy, r27.zzzz, r28.xyxx, r17.xyxx
            iadd r18.w, r18.w, l(1)
            mov r15.x, r26.w
          endloop 
          add_sat r15.x, -r12.w, r28.y
          mul r15.w, r17.w, r15.x
          lt r16.w, l(0.000000), r15.w
          if_nz r16.w
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r13.w, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r13.w, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r13.w, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r13.w, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r13.w, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r13.w, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r13.w, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r13.w, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r13.w, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r13.w, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xy, r13.w, l(212), t15.xyxx
            mad r23.w, r15.x, r17.w, r23.w
            mul r13.w, r25.z, r15.w
            mov r25.z, r33.z
            dp3 r15.x, r11.xyzx, r25.xyzx
            dp3 r15.w, r26.xyzx, r25.xyzx
            add r15.w, -r33.w, r15.w
            ge r16.w, r15.w, l(0.000000)
            max r15.w, r7.z, |r15.w|
            movc r15.w, r16.w, r15.w, -r15.w
            max r15.x, -r15.x, l(0.00000010)
            div r15.x, r15.w, r15.x
            min r15.x, |r15.x|, l(131072.000000)
            mov r33.z, r34.z
            dp3 r15.w, r11.xyzx, r33.xyzx
            dp3 r16.w, r26.xyzx, r33.xyzx
            add r16.w, -r34.w, r16.w
            ge r17.y, r16.w, l(0.000000)
            max r16.w, r7.z, |r16.w|
            movc r16.w, r17.y, r16.w, -r16.w
            max r15.w, -r15.w, l(0.00000010)
            div r15.w, r16.w, r15.w
            min r15.x, |r15.w|, r15.x
            mov r34.z, r35.z
            dp3 r15.w, r11.xyzx, r34.xyzx
            dp3 r16.w, r26.xyzx, r34.xyzx
            add r16.w, -r35.w, r16.w
            ge r17.y, r16.w, l(0.000000)
            max r16.w, r7.z, |r16.w|
            movc r16.w, r17.y, r16.w, -r16.w
            max r15.w, -r15.w, l(0.00000010)
            div r15.w, r16.w, r15.w
            min r15.x, |r15.w|, r15.x
            mov r35.z, r36.z
            dp3 r15.w, r11.xyzx, r35.xyzx
            dp3 r16.w, r26.xyzx, r35.xyzx
            add r16.w, -r36.w, r16.w
            ge r17.y, r16.w, l(0.000000)
            max r16.w, r7.z, |r16.w|
            movc r16.w, r17.y, r16.w, -r16.w
            max r15.w, -r15.w, l(0.00000010)
            div r15.w, r16.w, r15.w
            min r15.x, |r15.w|, r15.x
            mov r36.z, r37.x
            dp3 r15.w, r11.xyzx, r36.xyzx
            dp3 r16.w, r26.xyzx, r36.xyzx
            add r16.w, -r37.y, r16.w
            ge r17.y, r16.w, l(0.000000)
            max r16.w, r7.z, |r16.w|
            movc r16.w, r17.y, r16.w, -r16.w
            max r15.w, -r15.w, l(0.00000010)
            div r15.w, r16.w, r15.w
            min r15.x, |r15.w|, r15.x
            mov r38.zw, r37.zzzw
            dp3 r15.w, r11.zxyz, r38.xzwx
            dp3 r16.w, r26.zxyz, r38.xzwx
            add r16.w, -r38.y, r16.w
            ge r17.y, r16.w, l(0.000000)
            max r16.w, r7.z, |r16.w|
            movc r16.w, r17.y, r16.w, -r16.w
            max r15.w, -r15.w, l(0.00000010)
            div r15.w, r16.w, r15.w
            min r15.x, |r15.w|, r15.x
            mov r25.x, r30.w
            mov r25.yz, r31.zzwz
            add r17.yzw, r26.xxyz, r25.xxyz
            mad r17.yzw, r11.xxyz, r15.xxxx, r17.yyzw
            dp3 r15.w, r17.yzwy, r17.yzwy
            sqrt r15.w, r15.w
            div r15.x, r15.x, r15.w
            add r15.x, r15.x, r15.x
            sqrt r15.x, r15.x
            mad r15.x, r6.z, l(5.000000), r15.x
            add r15.x, r15.x, l(-0.844800)
            mov r24.y, r27.z
            mov r24.z, r29.x
            dp3 r33.x, r17.yzwy, r24.xyzx
            mov r25.xy, r27.xwxx
            mov r25.z, r29.w
            dp3 r33.y, r17.yzwy, r25.xyzx
            mov r29.x, r27.y
            dp3 r33.z, r17.yzwy, r29.xyzx
            ubfe r15.w, l(9), l(16), r25.w
            utof r33.w, r15.w
            sample_l_indexable(texturecubearray)(float,float,float,float) r17.yzw, r33.xyzw, t8.wxyz, s2, r15.x
            dp3 r27.x, r26.xyzx, r24.xyzx
            dp3 r27.y, r26.xyzx, r25.xyzx
            dp3 r27.z, r26.xyzx, r29.xyzx
            mad_sat r26.xyz, r27.xyzx, r30.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
            mov r31.z, r32.x
            mad r26.xyz, r26.xyzx, r31.xyzx, r32.yzwy
            dp3 r33.x, r2.xyzx, r24.xyzx
            dp3 r33.y, r2.xyzx, r25.xyzx
            dp3 r33.z, r2.xyzx, r29.xyzx
            lt r24.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r33.xyzx
            movc r16.z, r24.x, l(0), l(0.500000)
            add r25.xyz, r16.xyzx, r26.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r25.xyz, r25.xyzx, t17.xyzw, s4, l(0.000000)
            mul r27.xyz, r33.xyzx, r33.xyzx
            mul r27.xyz, r13.wwww, r27.xyzx
            movc r18.z, r24.y, l(0), l(0.500000)
            add r24.xyw, r18.xyxz, r26.xyxz
            sample_l_indexable(texture3d)(float,float,float,float) r24.xyw, r24.xywx, t18.xywz, s4, l(0.000000)
            mul r24.xyw, r27.yyyy, r24.xyxw
            mad r24.xyw, r25.xyxz, r27.xxxx, r24.xyxw
            movc r19.z, r24.z, l(0), l(0.500000)
            add r25.xyz, r19.xyzx, r26.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r25.xyz, r25.xyzx, t19.xyzw, s4, l(0.000000)
            mad r24.xyz, r25.xyzx, r27.zzzz, r24.xywx
            sample_l_indexable(texturecubearray)(float,float,float,float) r25.xyz, r33.xyzw, t8.xyzw, s2, l(6.000000)
            mul r26.xyz, r24.xyzx, r25.xyzx
            dp3 r15.x, r26.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r14.xyz, r24.xyzx, r25.xyzx, r14.xyzx
            mul r15.w, r7.w, r15.x
            mul r17.yzw, r13.wwww, r17.yyzw
            dp3 r13.w, r17.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r13.w, r7.w, r15.x, r13.w
            div r13.w, r15.w, r13.w
            mad r23.xyz, r17.yzwy, r13.wwww, r23.xyzx
          endif 
        endif 
      endif 
    endloop 
    mov r22.xyzw, r23.xyzw
    mov r9.yzw, r14.xxyz
    iadd r10.y, r10.y, l(32)
  endloop 
  mov r21.xyzw, r22.zxyw
  mov r20.xyz, r9.yzwy
  mov r21.xyzw, r21.yzxw
else 
  mov r21.x, r20.w
endif 
max r1.w, r21.w, l(1.000000)
rcp r1.w, r1.w
mov_sat r21.w, r21.w
mul r9.yzw, r1.wwww, r20.xxyz
mul r10.yzw, r1.wwww, r21.xxyz
lt r4.x, r21.w, l(0.990000)
if_nz r4.x
  add r4.x, -r21.w, l(1.000000)
  mul r4.y, r4.x, cb2[19].x
  add r13.xyz, v5.xyzx, -cb2[35].xyzx
  mul r14.x, r13.x, cb2[35].w
  mul r14.yz, r13.yyzy, cb2[36].xxyx
  add_sat r13.xyz, r14.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mul r14.xy, r13.xyxx, cb2[36].zwzz
  mul r14.z, r13.z, cb2[37].x
  add r13.xyz, r14.xyzx, cb2[37].yzwy
  lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r2.xyzx
  movc r14.xyz, r14.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
  mov r14.w, l(0)
  add r15.xyz, r13.xyzx, r14.wwxw
  sample_l_indexable(texture3d)(float,float,float,float) r15.xyz, r15.xyzx, t17.xyzw, s4, l(0.000000)
  mul r16.xyz, r2.xyzx, r2.xyzx
  mul r16.xyz, r4.yyyy, r16.xyzx
  add r17.xyz, r13.xyzx, r14.wwyw
  sample_l_indexable(texture3d)(float,float,float,float) r17.xyz, r17.xyzx, t18.xyzw, s4, l(0.000000)
  mul r17.xyz, r16.yyyy, r17.xyzx
  mad r15.xyz, r15.xyzx, r16.xxxx, r17.xyzx
  add r13.xyz, r13.xyzx, r14.wwzw
  sample_l_indexable(texture3d)(float,float,float,float) r13.xyz, r13.xyzx, t19.xyzw, s4, l(0.000000)
  mad r13.xyz, r13.xyzx, r16.zzzz, r15.xyzx
  mov r2.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r14.xyz, r2.xyzw, t8.xyzw, s2, l(6.000000)
  mul r13.xyz, r13.xyzx, r14.xyzx
  dp3 r2.w, r13.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  mad r9.yzw, r20.xxyz, r1.wwww, r13.xxyz
  mov r11.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r13.xyz, r11.xyzw, t8.xyzw, s2, r6.w
  mad r1.w, cb2[19].x, r4.x, -r2.w
  mad r1.w, r6.y, r1.w, r2.w
  mad r10.yzw, r13.xxyz, r1.wwww, r10.yyzw
endif 
add r1.w, r0.w, r6.x
log r1.w, |r1.w|
mul r1.w, r1.w, r5.w
exp r1.w, r1.w
add r1.w, r0.w, r1.w
add_sat r1.w, r1.w, l(-1.000000)
mul r13.xyz, r0.wwww, r9.zwyz
mad r4.xy, r6.xyxx, l(0.984375, 0.984375, 0.000000, 0.000000), l(0.00781250, 0.00781250, 0.000000, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r4.xy, r4.xyxx, t5.xyzw, s2, l(0.000000)
mul r6.yzw, r1.wwww, r10.yyzw
mul r9.yzw, r4.xxxx, r6.yyzw
mul r14.xyz, r4.yyyy, r6.yzwy
sqrt r0.w, r5.w
mad r0.w, r0.w, l(0.500000), l(0.500000)
mul r0.w, r0.w, r0.w
mul r1.w, r0.w, l(0.500000)
mad r0.w, -r0.w, l(0.500000), l(1.000000)
mad r2.w, r6.x, r0.w, r1.w
mul r0.w, r0.w, r2.w
mul r1.w, r1.w, r2.w
dp3 r2.w, r2.xyzx, cb2[17].xyzx
ge r4.x, l(0.000000), |r2.w|
if_nz r4.x
  mov r4.y, l(0)
endif 
if_z r4.x
  mul r6.yzw, v5.yyyy, cb2[29].xxyz
  mad r6.yzw, v5.xxxx, cb2[28].xxyz, r6.yyzw
  mad r6.yzw, v5.zzzz, cb2[30].xxyz, r6.yyzw
  add r6.yzw, r6.yyzw, cb2[31].xxyz
  add r4.x, r6.w, -cb2[17].w
  mad r4.x, -r4.x, l(0.00006104), l(1.000000)
  mov_sat r7.z, r4.x
  eq r7.z, r4.x, r7.z
  if_nz r7.z
    mov r7.zw, l(0,0,0,0)
    loop 
      ge r8.w, r7.z, l(3.000000)
      breakc_nz r8.w
      ftou r8.w, r7.z
      add r10.yz, r6.yyzy, -cb2[r8.w + 20].xxyx
      max r10.y, |r10.z|, |r10.y|
      mul r7.w, r10.y, cb2[r8.w + 20].z
      lt r8.w, r7.w, l(1.000000)
      if_nz r8.w
        break 
      endif 
      add r7.z, r7.z, l(1.000000)
      mov r7.w, l(0)
    endloop 
  else 
    mov r7.zw, l(0,0,3.000000,0)
  endif 
  ge r8.w, r7.z, l(3.000000)
  if_nz r8.w
    mul r10.yzw, l(0.000000, 128.000000, 0.500000, 0.500000), cb2[27].zzxy
    rcp r15.xz, r10.yyyy
    mov r15.y, -r15.z
    mad r10.yzw, r6.yyzy, r15.xxyz, r10.zzwz
    add r15.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r10.yzw, r10.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r10.yzw, r15.xxyz, r10.yyzw
    mul r15.xy, r10.wzww, cb2[32].xxxx
    round_ni r15.xy, r15.xyxx
    mul r11.w, r15.y, cb2[27].x
    mad r11.w, r11.w, cb2[32].x, r15.x
    ftou r11.w, r11.w
    iadd r11.w, r11.w, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r12.w, r11.w, l(0), t23.xxxx
    and r15.x, r12.w, l(0x40000000)
    ishl r15.y, r12.w, l(2)
    if_z r15.x
      and r15.x, r12.w, l(0x01ffffff)
      iadd r16.x, r11.w, r15.x
      ushr r11.w, r12.w, l(25)
      utof r11.w, r11.w
      mul r10.yzw, r10.yyzw, r11.wwww
      frc r10.yzw, r10.yyzw
      mul r10.yzw, r10.yyzw, l(0.000000, 128.000000, 128.000000, 128.000000)
      ftou r10.yzw, r10.yyzw
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.z, r16.x, l(0), t23.xxxx
      ushr r15.xz, r10.wwzw, l(6, 0, 6, 0)
      and r11.w, r16.z, l(0xc0000000)
      iadd r12.w, r16.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r12.w, r12.w, l(0), t23.xxxx
      movc r12.w, r15.z, r16.z, r12.w
      ushr r15.z, r12.w, l(13)
      movc r12.w, r15.x, r15.z, r12.w
      and r12.w, r12.w, l(8191)
      iadd r17.x, r12.w, r16.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.z, r17.x, l(0), t23.xxxx
      mov r16.y, l(0)
      mov r17.y, l(1)
      movc r15.xzw, r11.wwww, r16.xxyz, r17.xxyz
      movc r17.yz, r11.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r18.xy, r10.wzww, r17.yyyy
      and r18.xy, r18.xyxx, l(1, 1, 0, 0)
      and r12.w, r15.w, l(0xc0000000)
      iadd r16.w, r15.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.w, r16.w, l(0), t23.xxxx
      movc r16.w, r18.y, r15.w, r16.w
      ushr r17.y, r16.w, l(13)
      movc r16.w, r18.x, r17.y, r16.w
      and r16.w, r16.w, l(8191)
      iadd r17.x, r15.x, r16.w
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.w, r17.x, l(0), t23.xxxx
      movc r15.xzw, r12.wwww, r15.xxzw, r17.xxzw
      movc r15.xzw, r11.wwww, r16.xxyz, r15.xxzw
      and r11.w, r15.w, l(0xc0000000)
      if_z r11.w
        iadd r11.w, -r15.z, l(6)
        ushr r16.xy, r10.wzww, r11.wwww
        or r11.w, r15.w, l(0x40000000)
        bfi r12.w, l(1), l(1), r16.y, l(0)
        bfi r12.w, l(1), l(0), r16.x, r12.w
        imul null, r12.w, r12.w, l(10)
        ushr r11.w, r11.w, r12.w
        and r11.w, r11.w, l(1023)
        iadd r16.x, r11.w, r15.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.w, r16.x, l(0), t23.xxxx
        iadd r16.yz, r15.zzzz, l(0, 1, 2, 0)
        iadd r11.w, -r16.y, l(6)
        ushr r17.xy, r10.wzww, r11.wwww
        and r11.w, r16.w, l(0xc0000000)
        or r12.w, r16.w, l(0x40000000)
        bfi r15.z, l(1), l(1), r17.y, l(0)
        bfi r15.z, l(1), l(0), r17.x, r15.z
        imul null, r15.z, r15.z, l(10)
        ushr r12.w, r12.w, r15.z
        and r12.w, r12.w, l(1023)
        iadd r17.x, r12.w, r16.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.z, r17.x, l(0), t23.xxxx
        mov r17.y, r16.z
        movc r17.xyz, r11.wwww, r16.xywx, r17.xyzx
        iadd r12.w, -r17.y, l(6)
        ushr r16.yz, r10.wwzw, r12.wwww
        and r12.w, r17.z, l(0xc0000000)
        or r15.z, r17.z, l(0x40000000)
        bfi r16.z, l(1), l(1), r16.z, l(0)
        bfi r16.y, l(1), l(0), r16.y, r16.z
        imul null, r16.y, r16.y, l(10)
        ushr r15.z, r15.z, r16.y
        and r15.z, r15.z, l(1023)
        iadd r18.x, r15.z, r17.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.y, r18.x, l(0), t23.xxxx
        movc r16.yz, r12.wwww, r17.xxzx, r18.xxyx
        movc r15.xw, r11.wwww, r16.xxxw, r16.yyyz
      endif 
      and r11.w, r15.w, l(0xc0000000)
      if_z r11.w
        ubfe r12.w, l(14), l(15), r15.w
        utof r12.w, r12.w
        mul r12.w, r12.w, cb2[27].w
        mul r12.w, r12.w, l(0.00006104)
        and r16.xy, r15.wwww, l(0x00007fff, 0x20000000, 0, 0)
        utof r15.z, r16.x
        mul r15.z, r15.z, cb2[27].w
        mul r15.z, r15.z, l(0.00003052)
        and r16.x, r10.z, l(3)
        iadd r16.x, r15.x, r16.x
        iadd r16.x, r16.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.x, r16.x, l(0), t23.xxxx
        bfi r17.xyz, l(2, 2, 1, 0), l(3, 1, 4, 0), r10.yzwy, l(0, 0, 0, 0)
        ushr r10.y, r16.x, r17.x
        and r10.y, r10.y, l(255)
        utof r10.y, r10.y
        mul r10.y, r15.z, r10.y
        mad r10.y, r10.y, l(0.00392157), r12.w
        iadd r10.z, r17.y, l(1)
        ubfe r10.w, l(1), l(1), r10.w
        iadd r10.z, r10.w, r10.z
        iadd r10.z, r10.z, r15.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r10.z, r10.z, l(0), t23.xxxx
        ushr r10.z, r10.z, r17.z
        and r10.z, r10.z, l(0x0000ffff)
        utof r10.z, r10.z
        mul r10.z, r15.z, r10.z
        mad r10.z, r10.z, l(0.00001526), r12.w
        movc r15.y, r16.y, r10.y, r10.z
      else 
        and r10.y, r15.w, l(0x80000000)
        iadd r10.z, r15.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r10.z, r10.z, l(0), t23.xxxx
        movc r10.y, r10.y, r10.z, l(0)
        ishl r10.z, r15.w, l(2)
        ushr r10.w, r10.y, l(16)
        and r10.y, r10.y, l(0x0000ffff)
        f16tof32 r10.yw, r10.yyyw
        mad r10.z, r6.y, r10.w, r10.z
        mad r10.y, r6.z, r10.y, r10.z
        movc r15.y, r11.w, r10.y, r15.y
      endif 
    endif 
    mad r6.w, -cb2[27].z, l(2.000000), r6.w
    lt r6.w, r15.y, r6.w
    movc r4.y, r6.w, l(0), l(1.000000)
  endif 
  if_z r8.w
    if_z cb2[58].y
      ftou r6.w, r7.z
      add r10.yz, r6.yyzy, -cb2[r6.w + 20].xxyx
      mul r10.yz, r10.yyzy, cb2[r6.w + 20].zzzz
      mad r15.xy, r10.yzyy, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r6.w, cb2[26].y
      add r15.z, r6.w, r7.z
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r6.w, r15.xyzx, t13.xxxx, s13, r4.x
      sample_l_indexable(texture2darray)(float,float,float,float) r8.w, r15.xyzx, t31.yzwx, s0, l(0.000000)
      add r6.w, r6.w, r8.w
      add_sat r6.w, r6.w, l(-1.000000)
      mul r8.w, r6.w, r6.w
      mul r4.y, r6.w, r8.w
    endif 
    if_nz cb2[58].y
      mov r15.x, -r7.x
      ftou r6.w, r7.z
      add r7.z, r7.z, l(1.000000)
      min r7.z, r7.z, l(2.000000)
      add r7.w, -r7.w, l(1.000000)
      mul r7.w, r7.w, l(28.000000)
      ftou r7.zw, r7.zzzw
      add r10.yz, r6.yyzy, -cb2[r6.w + 20].xxyx
      mul r10.yz, r10.yyzy, cb2[r6.w + 20].zzzz
      mad r10.yz, r10.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      add r6.yz, r6.yyzy, -cb2[r7.z + 20].xxyx
      mul r6.yz, r6.yyzy, cb2[r7.z + 20].zzzz
      mad r6.yz, r6.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      mov r15.y, r8.x
      mov r15.z, r7.x
      mov r8.w, l(0)
      mov r10.w, l(0)
      loop 
        uge r11.w, r10.w, l(8)
        breakc_nz r11.w
        ult r11.w, r7.w, r10.w
        movc r16.xy, r11.wwww, r6.yzyy, r10.yzyy
        movc r12.w, r11.w, cb2[r7.z + 20].w, cb2[r6.w + 20].w
        movc r11.w, r11.w, r7.z, r6.w
        dp2 r17.x, icb[r10.w + 0].yxyy, r15.xyxx
        dp2 r17.y, icb[r10.w + 0].yxyy, r15.yzyy
        mad r16.xy, r17.xyxx, r12.wwww, r16.xyxx
        iadd r11.w, r11.w, cb2[26].y
        utof r16.z, r11.w
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r11.w, r16.xyzx, t13.xxxx, s13, r4.x
        sample_l_indexable(texture2darray)(float,float,float,float) r12.w, r16.xyzx, t31.yzwx, s0, l(0.000000)
        add r11.w, r11.w, r12.w
        add_sat r11.w, r11.w, l(-1.000000)
        mad r8.w, r11.w, l(0.125000), r8.w
        iadd r10.w, r10.w, l(1)
      endloop 
      mul r4.x, r8.w, r8.w
      mul r4.y, r8.w, r4.x
    endif 
  endif 
endif 
lt r4.x, l(0.000000), |r2.w|
if_nz r4.x
  lt r4.x, l(0.000000), r4.y
  if_nz r4.x
    mul r4.x, r4.w, cb2[18].w
    mul r4.x, r4.x, l(0.250000)
    if_nz cb2[23].x
      add r15.xyz, v5.xyzx, cb1[24].xyzx
      mov r15.w, l(1.000000)
      dp4 r6.y, cb2[24].xyzw, r15.xyzw
      dp4 r6.z, cb2[25].xyzw, r15.xyzw
      frc r15.xy, r6.yzyy
      iadd r6.y, l(-1), cb2[23].x
      utof r15.z, r6.y
      sample_l_indexable(texture2darray)(float,float,float,float) r6.yzw, r15.xyzx, t20.wxyz, s2, l(0.000000)
      add r6.yzw, r6.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
      mad r6.yzw, cb2[23].yyyy, r6.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
      mul r6.yzw, r6.yyzw, cb2[18].xxyz
    else 
      mov r6.yzw, cb2[18].xxyz
    endif 
    ushr r7.z, cb2[53].x, l(16)
    ult r7.w, l(0), r7.z
    and r7.w, r4.z, r7.w
    if_nz r7.w
      iadd r7.z, r7.z, cb2[0].x
      iadd r7.z, r7.z, l(-1)
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r7.w, r7.z, l(52), t12.xxxx
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r7.z, l(68), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r7.z, l(84), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r7.z, l(132), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r7.z, l(148), t12.xyzw
      mad r8.w, |r2.w|, l(-0.200000), l(0.400000)
      lt r10.y, r2.w, l(0.000000)
      movc r8.w, r10.y, -r8.w, r8.w
      mad r19.xyz, r2.xyzx, r8.wwww, v5.xyzx
      mov r19.w, l(1.000000)
      dp4 r15.x, r15.xyzw, r19.xyzw
      dp4 r15.y, r16.xyzw, r19.xyzw
      mad r10.yz, r15.xxyx, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      add r10.yz, r18.zzwz, r10.yyzy
      mul r10.yz, r18.xxyx, r10.yyzy
      div r15.xy, r7.wwww, r17.xzxx
      add r15.zw, -r15.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
      ge r15.zw, r10.yyyz, r15.zzzw
      ge r15.xy, r15.xyxx, r10.yzyy
      or r15.xy, r15.xyxx, r15.zwzz
      or r8.w, r15.y, r15.x
      if_z r8.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r8.w, r7.z, l(28), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r7.z, l(100), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xy, r7.z, l(164), t12.xyxx
        dp4 r7.z, r15.xyzw, r19.xyzw
        mov_sat r10.yz, r10.yyzy
        mad r15.xy, r10.yzyy, r17.xzxx, r17.ywyy
        add r7.z, r16.x, r7.z
        div r7.z, r7.z, r16.y
        max r7.z, r7.z, l(0.00006104)
        and r8.w, r8.w, l(0x0000ffff)
        if_nz cb2[58].y
          mov r16.x, -r7.x
          utof r17.z, r8.w
          mov r16.y, r8.x
          mov r16.z, r7.x
          mov r10.yz, l(0,0,0,0)
          loop 
            ige r10.w, r10.z, l(8)
            breakc_nz r10.w
            dp2 r18.x, icb[r10.z + 0].yxyy, r16.xyxx
            dp2 r18.y, icb[r10.z + 0].yxyy, r16.yzyy
            mad r17.xy, r18.xyxx, r7.wwww, r15.xyxx
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.w, r17.xyzx, t9.xxxx, s13, r7.z
            mad r10.y, r10.w, l(0.125000), r10.y
            iadd r10.z, r10.z, l(1)
          endloop 
        else 
          utof r15.z, r8.w
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.y, r15.xyzx, t9.xxxx, s13, r7.z
        endif 
        mul r7.z, r10.y, r10.y
        mul r7.z, r10.y, r7.z
      else 
        mov r7.z, l(1.000000)
      endif 
      mul r4.y, r4.y, r7.z
    else 
      and r7.z, cb2[53].x, l(0x0000ffff)
      ult r7.w, l(0), r7.z
      not r8.w, r4.z
      and r7.w, r7.w, r8.w
      if_nz r7.w
        iadd r7.z, r7.z, cb2[0].x
        iadd r7.z, r7.z, l(-1)
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r7.w, r7.z, l(52), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r7.z, l(68), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r7.z, l(84), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r7.z, l(132), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r7.z, l(148), t12.xyzw
        mad r8.w, |r2.w|, l(-0.200000), l(0.400000)
        lt r10.y, r2.w, l(0.000000)
        movc r8.w, r10.y, -r8.w, r8.w
        mad r19.xyz, r2.xyzx, r8.wwww, v5.xyzx
        mov r19.w, l(1.000000)
        dp4 r15.x, r15.xyzw, r19.xyzw
        dp4 r15.y, r16.xyzw, r19.xyzw
        mad r10.yz, r15.xxyx, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
        add r10.yz, r18.zzwz, r10.yyzy
        mul r10.yz, r18.xxyx, r10.yyzy
        div r15.xy, r7.wwww, r17.xzxx
        add r15.zw, -r15.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
        ge r15.zw, r10.yyyz, r15.zzzw
        ge r15.xy, r15.xyxx, r10.yzyy
        or r15.xy, r15.xyxx, r15.zwzz
        or r8.w, r15.y, r15.x
        if_z r8.w
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r8.w, r7.z, l(28), t12.xxxx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r7.z, l(100), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xy, r7.z, l(164), t12.xyxx
          dp4 r7.z, r15.xyzw, r19.xyzw
          mov_sat r10.yz, r10.yyzy
          mad r15.xy, r10.yzyy, r17.xzxx, r17.ywyy
          add r7.z, r16.x, r7.z
          div r7.z, r7.z, r16.y
          max r7.z, r7.z, l(0.00006104)
          and r8.w, r8.w, l(0x0000ffff)
          if_nz cb2[58].y
            mov r16.x, -r7.x
            utof r17.z, r8.w
            mov r16.y, r8.x
            mov r16.z, r7.x
            mov r10.yz, l(0,0,0,0)
            loop 
              ige r10.w, r10.z, l(8)
              breakc_nz r10.w
              dp2 r18.x, icb[r10.z + 0].yxyy, r16.xyxx
              dp2 r18.y, icb[r10.z + 0].yxyy, r16.yzyy
              mad r17.xy, r18.xyxx, r7.wwww, r15.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.w, r17.xyzx, t9.xxxx, s13, r7.z
              mad r10.y, r10.w, l(0.125000), r10.y
              iadd r10.z, r10.z, l(1)
            endloop 
          else 
            utof r15.z, r8.w
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.y, r15.xyzx, t9.xxxx, s13, r7.z
          endif 
          mul r7.z, r10.y, r10.y
          mul r7.z, r10.y, r7.z
        else 
          mov r7.z, l(1.000000)
        endif 
        mul r4.y, r4.y, r7.z
      endif 
    endif 
    mad r7.z, -r6.x, l(0.500000), l(1.000000)
    mad r7.z, -|r2.w|, r7.z, l(1.000000)
    mul r7.z, r7.z, r7.z
    mad r7.z, -r7.z, l(0.620000), l(0.620000)
    add r7.z, -|r2.w|, r7.z
    mad r7.z, r5.w, r7.z, |r2.w|
    mul r7.z, r4.y, r7.z
    lt r7.w, l(0.000000), r2.w
    mad r15.xyz, r7.zzzz, r6.zwyz, r13.xyzx
    mov_sat r2.w, r2.w
    mad r10.yzw, -v5.xxyz, r3.wwww, cb2[17].xxyz
    dp3 r3.w, r10.yzwy, r10.yzwy
    rsq r3.w, r3.w
    mul r10.yzw, r3.wwww, r10.yyzw
    dp3 r3.w, r10.yzwy, r5.xyzx
    dp3 r7.z, r2.xyzx, r10.yzwy
    mad r8.w, |r7.z|, r4.w, -|r7.z|
    mad r7.z, |r7.z|, r8.w, l(1.000000)
    mad r8.w, r2.w, r0.w, r1.w
    mul r7.z, r7.z, r7.z
    mul r7.z, r8.w, r7.z
    rcp r7.z, r7.z
    mul r2.w, r4.x, r2.w
    mul r2.w, r2.w, r7.z
    mul r2.w, r4.y, r2.w
    mad r16.yzw, r2.wwww, r6.yyzw, r14.xxyz
    add_sat r3.w, -r3.w, l(1.000000)
    mul r4.x, r3.w, r3.w
    mul r4.x, r4.x, r4.x
    mul r3.w, r3.w, r4.x
    mul r2.w, r2.w, r3.w
    mad r6.yzw, r2.wwww, r6.yyzw, r9.yyzw
    mov r15.w, r13.z
    mov r13.w, r15.z
    movc r17.xyzw, r7.wwww, r15.zxyw, r13.zxyw
    mov r13.zw, r6.yyyz
    mov r15.zw, r9.yyyz
    movc r15.xyzw, r7.wwww, r13.xyzw, r15.xyzw
    mov r16.x, r6.w
    mov r14.w, r9.w
    movc r14.xyzw, r7.wwww, r16.yzwx, r14.xyzw
    mov r13.z, r17.w
    mov r13.xy, r15.xyxx
    mov r9.yz, r15.zzwz
    mov r9.w, r14.w
  else 
    mov r17.xyz, r13.zxyz
  endif 
else 
  mov r17.xyz, r13.zxyz
endif 
mov r15.x, -r7.x
not r2.w, r4.z
mad r3.w, -r6.x, l(0.500000), l(1.000000)
mov r6.xy, l(0,0,0,0)
mov r16.w, l(0)
mov r18.xyz, v5.xyzx
mov r18.w, l(1.000000)
mov r19.w, l(1.000000)
mov r15.z, r7.x
mov r20.w, l(1.000000)
mov r21.z, l(1.000000)
mov r22.w, l(1.000000)
mov r15.yw, r8.xxxx
mov r7.y, r15.w
mov r23.w, l(1.000000)
mov r8.y, r15.x
mov r8.z, r7.x
mov r24.w, l(1.000000)
mov r25.x, r8.x
mov r25.y, r15.x
mov r25.z, r7.x
mov r26.x, r8.x
mov r26.y, r15.x
mov r26.z, r7.x
mov r27.x, r8.x
mov r27.y, r15.x
mov r27.z, r7.x
mov r10.yzw, r17.xxyz
mov r28.xyz, r13.zxyz
mov r29.xyz, r9.yzwy
mov r30.xyz, r14.xyzx
mov r4.x, cb2[58].y
mov r4.y, l(0)
loop 
  uge r6.w, r4.y, cb2[0].x
  breakc_nz r6.w
  ushr r6.z, r4.y, l(5)
  iadd r16.xyz, r6.xyzx, r12.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r6.z, r16.xyzw, t6.yzxw
  mov r16.xyz, r10.yzwy
  mov r31.xyz, r28.xyzx
  mov r32.xyz, r29.xyzx
  mov r33.xyz, r30.xyzx
  mov r6.w, r4.x
  mov r7.z, r6.z
  loop 
    breakc_z r7.z
    firstbit_lo r7.w, r7.z
    ishl r8.w, l(1), r7.w
    and r11.w, r7.z, r8.w
    if_nz r11.w
      xor r7.z, r7.z, r8.w
      iadd r7.w, r4.y, r7.w
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r34.xyzw, r7.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r35.xy, r7.w, l(16), t11.xyxx
      add r34.xyz, r34.xyzx, -v5.xyzx
      mov r35.z, r34.w
      lt r34.xyz, |r34.xyzx|, r35.zxyz
      and r8.w, r34.y, r34.x
      and r8.w, r34.z, r8.w
      if_nz r8.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r7.w, l(0), t12.wxyz
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r7.w, l(16), t12.zxyw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r7.w, l(32), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r7.w, l(48), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r7.w, l(64), t12.yzwx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r7.w, l(80), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r7.w, l(96), t12.yzwx
        ubfe r8.w, l(3), l(24), r35.w
        switch r8.w
          case l(4)
          lt r8.w, l(0.000000), r40.x
          mov r41.xy, r39.zwzz
          mov r41.z, r40.w
          mad r42.xyz, -r41.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r34.yzwy
          add r43.xyz, r42.xyzx, -v5.xyzx
          dp3 r11.w, r41.xyzx, r43.xyzx
          div_sat r12.w, -r11.w, r40.x
          mad r44.xyz, r12.wwww, r41.xyzx, r42.xyzx
          movc r44.xyz, r8.wwww, r44.xyzx, r34.yzwy
          add r44.xyz, r44.xyzx, -v5.xyzx
          dp3 r13.w, r44.xyzx, r44.xyzx
          rsq r14.w, r13.w
          mul r44.xyz, r14.wwww, r44.xyzx
          dp3 r14.w, r2.xyzx, r44.xyzx
          lt r17.w, l(0.000000), |r14.w|
          if_nz r17.w
            sqrt r17.w, r13.w
            mul r21.w, r37.x, r37.x
            div r13.w, r21.w, r13.w
            min r13.w, r13.w, l(1.000000)
            mad_sat r44.xy, r17.wwww, r36.xzxx, r36.ywyy
            mul r44.zw, r44.xxxy, r44.xxxy
            mad r44.xy, r44.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
            mul r44.xy, r44.xyxx, r44.zwzz
            mul r13.w, r13.w, r44.x
            mul r13.w, r44.y, r13.w
            lt r17.w, l(0.000000), r13.w
            if_nz r17.w
              ubfe r17.w, l(3), l(27), r35.w
              ine r17.w, r17.w, l(1)
              if_nz r17.w
                mad r17.w, |r14.w|, l(-0.200000), l(0.400000)
                lt r21.w, r14.w, l(0.000000)
                movc r17.w, r21.w, -r17.w, r17.w
                mad r44.xyz, r2.xyzx, r17.wwww, v5.xyzx
                add r44.xyz, -r38.xyzx, r44.xyzx
                max r17.w, |r44.z|, |r44.y|
                max r17.w, r17.w, |r44.x|
                div r17.w, r39.x, r17.w
                add r17.w, r39.y, r17.w
                dp3 r21.w, r44.xyzx, r44.xyzx
                rsq r21.w, r21.w
                max r17.w, r17.w, l(0.00006104)
                and r25.w, r35.w, l(0x0000ffff)
                utof r45.w, r25.w
                mov r25.w, l(0)
                mov r26.w, l(0)
                loop 
                  ige r27.w, r26.w, l(8)
                  breakc_nz r27.w
                  dp2 r46.y, icb[r26.w + 0].yxyy, r15.xyxx
                  dp2 r46.z, icb[r26.w + 0].yxyy, r15.yzyy
                  mul r46.yz, r37.yyyy, r46.yyzy
                  mul r46.x, r10.x, r46.y
                  mul r46.w, r9.x, r46.y
                  mad r45.xyz, r44.xyzx, r21.wwww, r46.xzwx
                  sample_c_lz_indexable(texturecubearray)(float,float,float,float) r27.w, r45.xyzw, t10.xxxx, s13, r17.w
                  mad r25.w, r27.w, l(0.125000), r25.w
                  iadd r26.w, r26.w, l(1)
                endloop 
              else 
                mov r25.w, l(1.000000)
              endif 
              mul r13.w, r13.w, r25.w
              lt r17.w, l(0.000000), r13.w
              if_nz r17.w
                mul r17.w, r4.w, r35.x
                mul r17.w, r17.w, l(0.250000)
                dp3 r21.w, r41.xyzx, r11.xyzx
                dp3 r26.w, r11.xyzx, r43.xyzx
                mad r27.w, -r21.w, r21.w, r40.x
                mad r11.w, r21.w, r26.w, -r11.w
                div_sat r11.w, r11.w, r27.w
                div r21.w, r27.w, r40.x
                mul r21.w, r21.w, l(10.000000)
                min r21.w, r21.w, l(1.000000)
                add r11.w, -r12.w, r11.w
                mad r11.w, r21.w, r11.w, r12.w
                mad r41.xyz, r11.wwww, r41.xyzx, r42.xyzx
                movc r41.xyz, r8.wwww, r41.xyzx, r34.yzwy
                add r41.xyz, r41.xyzx, -v5.xyzx
                dp3 r8.w, r41.xyzx, r41.xyzx
                rsq r8.w, r8.w
                mul r42.xyz, r8.wwww, r41.xyzx
                ubfe r11.w, l(4), l(16), r35.w
                ult r12.w, l(0), r11.w
                and r12.w, r4.z, r12.w
                if_nz r12.w
                  iadd r11.w, r11.w, cb2[0].x
                  iadd r11.w, r11.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.w, r11.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r11.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r11.w, l(116), t12.xyzw
                  mad r21.w, |r14.w|, l(-0.200000), l(0.400000)
                  lt r26.w, r14.w, l(0.000000)
                  movc r21.w, r26.w, -r21.w, r21.w
                  mad r19.xyz, r2.xyzx, r21.wwww, v5.xyzx
                  dp4 r21.w, r43.xyzw, r19.xyzw
                  dp4 r26.w, r44.xyzw, r19.xyzw
                  lt r27.w, r26.w, r21.w
                  if_z r27.w
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r11.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r11.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xyzw, r11.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r46.xyzw, r11.w, l(148), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r47.xy, r11.w, l(164), t12.xyxx
                    dp4 r43.x, r43.xyzw, r19.xyzw
                    dp4 r43.y, r44.xyzw, r19.xyzw
                    div r19.xy, r43.xyxx, r26.wwww
                    mad r19.xy, r19.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r19.xy, r46.zwzz, r19.xyxx
                    mul r19.xy, r46.xyxx, r19.xyxx
                    div r43.xy, r12.wwww, r45.xzxx
                    add r43.zw, -r43.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                    ge r43.zw, r19.xxxy, r43.zzzw
                    ge r43.xy, r43.xyxx, r19.xyxx
                    or r43.xy, r43.xyxx, r43.zwzz
                    or r19.z, r43.y, r43.x
                    mov_sat r19.xy, r19.xyxx
                    mad r43.xy, r19.xyxx, r45.xzxx, r45.ywyy
                    mul r19.x, r26.w, r47.y
                    mad r19.y, r47.x, r26.w, r21.w
                    div r19.x, r19.y, r19.x
                  else 
                    mov r19.z, l(-1)
                  endif 
                  or r19.y, r27.w, r19.z
                  if_z r19.y
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r11.w, r11.w, l(28), t12.xxxx
                    max r19.x, r19.x, l(0.00006104)
                    and r11.w, r11.w, l(0x0000ffff)
                    if_nz r6.w
                      utof r44.z, r11.w
                      mov r19.yz, l(0,0,0,0)
                      loop 
                        ige r21.w, r19.z, l(8)
                        breakc_nz r21.w
                        dp2 r45.x, icb[r19.z + 0].yxyy, r15.xwxx
                        dp2 r45.y, icb[r19.z + 0].xyxx, r7.xyxx
                        mad r44.xy, r45.xyxx, r12.wwww, r43.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.w, r44.xyzx, t9.xxxx, s13, r19.x
                        mad r19.y, r21.w, l(0.125000), r19.y
                        iadd r19.z, r19.z, l(1)
                      endloop 
                    else 
                      utof r43.z, r11.w
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.y, r43.xyzx, t9.xxxx, s13, r19.x
                    endif 
                    mul r11.w, r19.y, r19.y
                    mul r11.w, r19.y, r11.w
                  else 
                    mov r11.w, l(1.000000)
                  endif 
                  mul r13.w, r11.w, r13.w
                else 
                  ubfe r11.w, l(4), l(20), r35.w
                  ult r12.w, l(0), r11.w
                  and r12.w, r2.w, r12.w
                  if_nz r12.w
                    iadd r11.w, r11.w, cb2[0].x
                    iadd r11.w, r11.w, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.w, r11.w, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r11.w, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r11.w, l(116), t12.xyzw
                    mad r19.x, |r14.w|, l(-0.200000), l(0.400000)
                    lt r19.z, r14.w, l(0.000000)
                    movc r19.x, r19.z, -r19.x, r19.x
                    mad r20.xyz, r2.xyzx, r19.xxxx, v5.xyzx
                    dp4 r19.x, r43.xyzw, r20.xyzw
                    dp4 r19.z, r44.xyzw, r20.xyzw
                    lt r21.w, r19.z, r19.x
                    if_z r21.w
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r11.w, l(68), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r11.w, l(84), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xyzw, r11.w, l(132), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r46.xyzw, r11.w, l(148), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r47.xy, r11.w, l(164), t12.xyxx
                      dp4 r43.x, r43.xyzw, r20.xyzw
                      dp4 r43.y, r44.xyzw, r20.xyzw
                      div r20.xy, r43.xyxx, r19.zzzz
                      mad r20.xy, r20.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                      add r20.xy, r46.zwzz, r20.xyxx
                      mul r20.xy, r46.xyxx, r20.xyxx
                      div r43.xy, r12.wwww, r45.xzxx
                      add r43.zw, -r43.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                      ge r43.zw, r20.xxxy, r43.zzzw
                      ge r43.xy, r43.xyxx, r20.xyxx
                      or r43.xy, r43.xyxx, r43.zwzz
                      or r20.z, r43.y, r43.x
                      mov_sat r20.xy, r20.xyxx
                      mad r43.xy, r20.xyxx, r45.xzxx, r45.ywyy
                      mul r20.x, r19.z, r47.y
                      mad r19.x, r47.x, r19.z, r19.x
                      div r19.x, r19.x, r20.x
                    else 
                      mov r20.z, l(-1)
                    endif 
                    or r19.z, r21.w, r20.z
                    if_z r19.z
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r11.w, r11.w, l(28), t12.xxxx
                      max r19.x, r19.x, l(0.00006104)
                      and r11.w, r11.w, l(0x0000ffff)
                      if_nz r6.w
                        utof r20.z, r11.w
                        mov r19.z, l(0)
                        mov r21.w, l(0)
                        loop 
                          ige r26.w, r21.w, l(8)
                          breakc_nz r26.w
                          dp2 r44.x, icb[r21.w + 0].xyxx, r8.xyxx
                          dp2 r44.y, icb[r21.w + 0].yxyy, r8.xzxx
                          mad r20.xy, r44.xyxx, r12.wwww, r43.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r20.x, r20.xyzx, t9.xxxx, s13, r19.x
                          mad r19.z, r20.x, l(0.125000), r19.z
                          iadd r21.w, r21.w, l(1)
                        endloop 
                      else 
                        utof r43.z, r11.w
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.z, r43.xyzx, t9.xxxx, s13, r19.x
                      endif 
                      mul r11.w, r19.z, r19.z
                      mul r11.w, r19.z, r11.w
                    else 
                      mov r11.w, l(1.000000)
                    endif 
                    mul r13.w, r11.w, r13.w
                  endif 
                endif 
                mad r11.w, -|r14.w|, r3.w, l(1.000000)
                mul r11.w, r11.w, r11.w
                mad r11.w, -r11.w, l(0.620000), l(0.620000)
                add r11.w, -|r14.w|, r11.w
                mad r11.w, r5.w, r11.w, |r14.w|
                mul r11.w, r13.w, r11.w
                mov r35.x, r34.x
                lt r12.w, l(0.000000), r14.w
                mad r20.xyz, r11.wwww, r35.xyzx, r16.xyzx
                dp3_sat r14.w, r2.xyzx, r42.xyzx
                mad r41.xyz, r41.xyzx, r8.wwww, r5.xyzx
                dp3 r8.w, r41.xyzx, r41.xyzx
                rsq r8.w, r8.w
                mul r41.xyz, r8.wwww, r41.xyzx
                dp3 r8.w, r41.xyzx, r5.xyzx
                dp3 r19.x, r2.xyzx, r41.xyzx
                mad r21.w, |r19.x|, r4.w, -|r19.x|
                mad r19.x, |r19.x|, r21.w, l(1.000000)
                mad r21.w, r14.w, r0.w, r1.w
                mul r19.x, r19.x, r19.x
                mul r19.x, r21.w, r19.x
                rcp r19.x, r19.x
                mul r14.w, r17.w, r14.w
                mul r14.w, r14.w, r19.x
                mul r13.w, r13.w, r14.w
                mad r41.xyz, r13.wwww, r35.xyzx, r33.xyzx
                add_sat r8.w, -r8.w, l(1.000000)
                mul r14.w, r8.w, r8.w
                mul r14.w, r14.w, r14.w
                mul r8.w, r8.w, r14.w
                mul r8.w, r8.w, r13.w
                mad r42.xyz, r8.wwww, r35.xyzx, r32.xyzx
                mad r43.xyz, r11.wwww, r35.xyzx, r31.xyzx
                movc r16.xyz, r12.wwww, r20.xyzx, r16.xyzx
                movc r31.xyz, r12.wwww, r31.xyzx, r43.xyzx
                movc r32.xyz, r12.wwww, r42.xyzx, r32.xyzx
                movc r33.xyz, r12.wwww, r41.xyzx, r33.xyzx
              endif 
            endif 
          endif 
          break 
          case l(2)
          mov r20.xy, r37.zwzz
          mov r20.z, r38.w
          add r20.xyz, r20.xyzx, -v5.xyzx
          dp3 r8.w, r20.xyzx, r20.xyzx
          rsq r8.w, r8.w
          mul r41.xyz, r8.wwww, r20.xyzx
          dp3 r11.w, r2.xyzx, r41.xyzx
          lt r12.w, l(0.000000), |r11.w|
          if_nz r12.w
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r7.w, l(112), t12.yzwx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r7.w, l(128), t12.zxyw
            mov r43.xyz, r41.xyzx
            mov r43.w, r42.y
            dp4 r12.w, r43.xyzw, r18.xyzw
            lt r13.w, r12.w, l(1.000000)
            if_nz r13.w
              mov r44.xyz, l(1.000000,1.000000,1.000000,0)
              mov r13.w, l(0)
            else 
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xyzw, r7.w, l(172), t12.yzwx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r46.xyzw, r7.w, l(188), t12.wxyz
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r47.xyzw, r7.w, l(204), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.w, r7.w, l(236), t12.xxxx
              add r48.xyz, r34.yzwy, -v5.xyzx
              mul r17.w, r37.x, r37.x
              dp3 r19.x, r48.xyzx, r48.xyzx
              div r17.w, r17.w, r19.x
              min r17.w, r17.w, l(1.000000)
              mad_sat r36.xy, r12.wwww, r36.xzxx, r36.ywyy
              mul r36.zw, r36.xxxy, r36.xxxy
              mad r36.xy, r36.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
              mul r36.xy, r36.xyxx, r36.zwzz
              mul r17.w, r17.w, r36.x
              mul r17.w, r36.y, r17.w
              mov r38.w, r39.x
              dp4 r36.x, r38.xyzw, r18.xyzw
              mov r48.xyz, r39.yzwy
              mov r48.w, r40.w
              dp4 r36.y, r48.xyzw, r18.xyzw
              div r21.xy, r36.xyxx, r12.wwww
              lt r12.w, r45.w, l(0.00048828)
              if_nz r12.w
                mov r46.y, r47.x
                mad_sat r36.xy, |r21.xyxx|, r46.zwzz, r46.xyxx
                mul r36.zw, r36.xxxy, r36.xxxy
                mad r36.xy, r36.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
                mul r36.xy, r36.xyxx, r36.zwzz
                mul r12.w, r36.y, r36.x
              else 
                mov r45.w, r46.y
                mul_sat r36.xyzw, |r21.yyxx|, r45.xyzw
                log r36.xyzw, r36.xyzw
                mul r36.xyzw, r36.xyzw, r46.xxxx
                exp r36.xyzw, r36.xyzw
                add r36.xy, r36.zwzz, r36.xyxx
                log r36.xy, r36.xyxx
                mul r36.xy, r36.xyxx, r47.xxxx
                exp r36.xy, r36.xyxx
                mul r19.x, r36.x, r46.z
                mad r21.w, r46.w, r36.y, l(-1.000000)
                mad r19.x, r46.w, r36.y, -r19.x
                div_sat r19.x, r21.w, r19.x
                mul r21.w, r19.x, r19.x
                mad r19.x, r19.x, l(-2.000000), l(3.000000)
                mul r12.w, r19.x, r21.w
              endif 
              mul r13.w, r12.w, r17.w
              and r12.w, r14.w, l(255)
              if_nz r12.w
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyz, r7.w, l(220), t12.xyzx
                dp3 r14.w, r47.yzwy, r21.xyzx
                dp3 r17.w, r36.xyzx, r21.xyzx
                frc r36.x, r14.w
                frc r36.y, r17.w
                iadd r12.w, r12.w, l(-1)
                utof r36.z, r12.w
                sample_l_indexable(texture2darray)(float,float,float,float) r44.xyz, r36.xyzx, t20.xyzw, s2, l(0.000000)
              else 
                mov r44.xyz, l(1.000000,1.000000,1.000000,0)
              endif 
            endif 
            mov r34.yz, r35.yyzy
            mul r21.xyw, r44.xyxz, r34.xyxz
            lt r12.w, l(0.000000), r13.w
            if_nz r12.w
              ubfe r12.w, l(3), l(27), r35.w
              ine r12.w, r12.w, l(1)
              if_nz r12.w
                mad r12.w, |r11.w|, l(-0.200000), l(0.400000)
                lt r14.w, r11.w, l(0.000000)
                movc r12.w, r14.w, -r12.w, r12.w
                mad r22.xyz, r2.xyzx, r12.wwww, v5.xyzx
                mov r41.xyz, r40.xyzx
                dp4 r12.w, r41.xyzw, r22.xyzw
                dp4 r14.w, r43.xyzw, r22.xyzw
                ge r17.w, r14.w, r12.w
                if_nz r17.w
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.y, r7.w, l(144), t12.xxxx
                  mov r38.w, r39.x
                  dp4 r34.x, r38.xyzw, r22.xyzw
                  mov r40.xyz, r39.yzwy
                  dp4 r34.y, r40.xyzw, r22.xyzw
                  div r22.xy, r34.xyxx, r14.wwww
                  mad_sat r22.xy, r22.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  mad r22.xy, r22.xyxx, r42.zwzz, r42.xyxx
                  div r7.w, r12.w, r14.w
                  max r7.w, r7.w, l(0.00006104)
                  and r12.w, r35.w, l(0x0000ffff)
                  if_nz r6.w
                    utof r34.z, r12.w
                    mov r14.w, l(0)
                    mov r17.w, l(0)
                    loop 
                      ige r19.x, r17.w, l(8)
                      breakc_nz r19.x
                      dp2 r36.x, icb[r17.w + 0].xyxx, r25.xyxx
                      dp2 r36.y, icb[r17.w + 0].yxyy, r25.xzxx
                      mad r34.xy, r36.xyxx, r37.yyyy, r22.xyxx
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.x, r34.xyzx, t9.xxxx, s13, r7.w
                      mad r14.w, r19.x, l(0.125000), r14.w
                      iadd r17.w, r17.w, l(1)
                    endloop 
                  else 
                    utof r22.z, r12.w
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r14.w, r22.xyzx, t9.xxxx, s13, r7.w
                  endif 
                  mul r7.w, r14.w, r14.w
                  mul r7.w, r14.w, r7.w
                else 
                  mov r7.w, l(1.000000)
                endif 
              else 
                mov r7.w, l(1.000000)
              endif 
              mul r7.w, r7.w, r13.w
              lt r12.w, l(0.000000), r7.w
              if_nz r12.w
                mul r12.w, r4.w, r35.x
                mul r12.w, r12.w, l(0.250000)
                ubfe r13.w, l(4), l(16), r35.w
                ult r17.w, l(0), r13.w
                and r17.w, r4.z, r17.w
                if_nz r17.w
                  iadd r13.w, r13.w, cb2[0].x
                  iadd r13.w, r13.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.w, r13.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r13.w, l(68), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r13.w, l(84), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r13.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r13.w, l(116), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r13.w, l(132), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r13.w, l(148), t12.xyzw
                  mad r19.x, |r11.w|, l(-0.200000), l(0.400000)
                  lt r22.x, r11.w, l(0.000000)
                  movc r19.x, r22.x, -r19.x, r19.x
                  mad r23.xyz, r2.xyzx, r19.xxxx, v5.xyzx
                  dp4 r22.x, r34.xyzw, r23.xyzw
                  dp4 r22.y, r36.xyzw, r23.xyzw
                  dp4 r19.x, r37.xyzw, r23.xyzw
                  dp4 r22.z, r38.xyzw, r23.xyzw
                  lt r23.x, r22.z, r19.x
                  div r22.xy, r22.xyxx, r22.zzzz
                  mad r22.xy, r22.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r22.xy, r40.zwzz, r22.xyxx
                  mul r22.xy, r40.xyxx, r22.xyxx
                  div r23.yz, r17.wwww, r39.xxzx
                  add r34.xy, -r23.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
                  ge r34.xy, r22.xyxx, r34.xyxx
                  ge r23.yz, r23.yyzy, r22.xxyx
                  or r23.yz, r23.yyzy, r34.xxyx
                  or r23.y, r23.z, r23.y
                  or r23.x, r23.x, r23.y
                  if_z r23.x
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.x, r13.w, l(28), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.yz, r13.w, l(164), t12.xxyx
                    mov_sat r22.xy, r22.xyxx
                    mad r34.xy, r22.xyxx, r39.xzxx, r39.ywyy
                    mul r13.w, r22.z, r23.z
                    mad r19.x, r23.y, r22.z, r19.x
                    div r13.w, r19.x, r13.w
                    max r13.w, r13.w, l(0.00006104)
                    and r19.x, r23.x, l(0x0000ffff)
                    if_nz r6.w
                      utof r22.z, r19.x
                      mov r23.xy, l(0,0,0,0)
                      loop 
                        ige r23.z, r23.y, l(8)
                        breakc_nz r23.z
                        dp2 r35.x, icb[r23.y + 0].xyxx, r26.xyxx
                        dp2 r35.y, icb[r23.y + 0].yxyy, r26.xzxx
                        mad r22.xy, r35.xyxx, r17.wwww, r34.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.x, r22.xyzx, t9.xxxx, s13, r13.w
                        mad r23.x, r22.x, l(0.125000), r23.x
                        iadd r23.y, r23.y, l(1)
                      endloop 
                    else 
                      utof r34.z, r19.x
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.x, r34.xyzx, t9.xxxx, s13, r13.w
                    endif 
                    mul r13.w, r23.x, r23.x
                    mul r13.w, r23.x, r13.w
                  else 
                    mov r13.w, l(1.000000)
                  endif 
                  mul r7.w, r7.w, r13.w
                else 
                  ubfe r13.w, l(4), l(20), r35.w
                  ult r17.w, l(0), r13.w
                  and r17.w, r2.w, r17.w
                  if_nz r17.w
                    iadd r13.w, r13.w, cb2[0].x
                    iadd r13.w, r13.w, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.w, r13.w, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r13.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r13.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r13.w, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r13.w, l(116), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r13.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r13.w, l(148), t12.xyzw
                    mad r19.x, |r11.w|, l(-0.200000), l(0.400000)
                    lt r22.x, r11.w, l(0.000000)
                    movc r19.x, r22.x, -r19.x, r19.x
                    mad r24.xyz, r2.xyzx, r19.xxxx, v5.xyzx
                    dp4 r22.x, r34.xyzw, r24.xyzw
                    dp4 r22.y, r35.xyzw, r24.xyzw
                    dp4 r19.x, r36.xyzw, r24.xyzw
                    dp4 r22.z, r37.xyzw, r24.xyzw
                    lt r23.y, r22.z, r19.x
                    div r22.xy, r22.xyxx, r22.zzzz
                    mad r22.xy, r22.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r22.xy, r39.zwzz, r22.xyxx
                    mul r22.xy, r39.xyxx, r22.xyxx
                    div r24.xy, r17.wwww, r38.xzxx
                    add r34.xy, -r24.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                    ge r34.xy, r22.xyxx, r34.xyxx
                    ge r24.xy, r24.xyxx, r22.xyxx
                    or r24.xy, r24.xyxx, r34.xyxx
                    or r23.z, r24.y, r24.x
                    or r23.y, r23.y, r23.z
                    if_z r23.y
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.y, r13.w, l(28), t12.xxxx
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r24.xy, r13.w, l(164), t12.xyxx
                      mov_sat r22.xy, r22.xyxx
                      mad r34.xy, r22.xyxx, r38.xzxx, r38.ywyy
                      mul r13.w, r22.z, r24.y
                      mad r19.x, r24.x, r22.z, r19.x
                      div r13.w, r19.x, r13.w
                      max r13.w, r13.w, l(0.00006104)
                      and r19.x, r23.y, l(0x0000ffff)
                      if_nz r6.w
                        utof r22.z, r19.x
                        mov r23.yz, l(0,0,0,0)
                        loop 
                          ige r24.x, r23.z, l(8)
                          breakc_nz r24.x
                          dp2 r24.x, icb[r23.z + 0].xyxx, r27.xyxx
                          dp2 r24.y, icb[r23.z + 0].yxyy, r27.xzxx
                          mad r22.xy, r24.xyxx, r17.wwww, r34.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.x, r22.xyzx, t9.xxxx, s13, r13.w
                          mad r23.y, r22.x, l(0.125000), r23.y
                          iadd r23.z, r23.z, l(1)
                        endloop 
                      else 
                        utof r34.z, r19.x
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.y, r34.xyzx, t9.xxxx, s13, r13.w
                      endif 
                      mul r13.w, r23.y, r23.y
                      mul r13.w, r23.y, r13.w
                    else 
                      mov r13.w, l(1.000000)
                    endif 
                    mul r7.w, r7.w, r13.w
                  endif 
                endif 
                mad r13.w, -|r11.w|, r3.w, l(1.000000)
                mul r13.w, r13.w, r13.w
                mad r13.w, -r13.w, l(0.620000), l(0.620000)
                add r13.w, -|r11.w|, r13.w
                mad r13.w, r5.w, r13.w, |r11.w|
                mul r13.w, r7.w, r13.w
                lt r17.w, l(0.000000), r11.w
                mad r22.xyz, r13.wwww, r21.xywx, r16.xyzx
                mov_sat r11.w, r11.w
                mad r20.xyz, r20.xyzx, r8.wwww, r5.xyzx
                dp3 r8.w, r20.xyzx, r20.xyzx
                rsq r8.w, r8.w
                mul r20.xyz, r8.wwww, r20.xyzx
                dp3 r8.w, r20.xyzx, r5.xyzx
                dp3 r19.x, r2.xyzx, r20.xyzx
                mad r20.x, |r19.x|, r4.w, -|r19.x|
                mad r19.x, |r19.x|, r20.x, l(1.000000)
                mad r20.x, r11.w, r0.w, r1.w
                mul r19.x, r19.x, r19.x
                mul r19.x, r20.x, r19.x
                rcp r19.x, r19.x
                mul r11.w, r12.w, r11.w
                mul r11.w, r11.w, r19.x
                mul r7.w, r7.w, r11.w
                mad r20.xyz, r7.wwww, r21.xywx, r33.xyzx
                add_sat r8.w, -r8.w, l(1.000000)
                mul r11.w, r8.w, r8.w
                mul r11.w, r11.w, r11.w
                mul r8.w, r8.w, r11.w
                mul r7.w, r7.w, r8.w
                mad r24.xyz, r7.wwww, r21.xywx, r32.xyzx
                mad r21.xyw, r13.wwww, r21.xyxw, r31.xyxz
                movc r16.xyz, r17.wwww, r22.xyzx, r16.xyzx
                movc r31.xyz, r17.wwww, r31.xyzx, r21.xywx
                movc r32.xyz, r17.wwww, r24.xyzx, r32.xyzx
                movc r33.xyz, r17.wwww, r20.xyzx, r33.xyzx
              endif 
            endif 
          endif 
          break 
          default 
          break 
        endswitch 
      endif 
    endif 
  endloop 
  mov r10.yzw, r16.xxyz
  mov r28.xyz, r31.xyzx
  mov r29.xyz, r32.xyzx
  mov r30.xyz, r33.xyzx
  iadd r4.y, r4.y, l(32)
endloop 
mul r2.xyz, r3.xyzx, r28.xyzx
mad r0.xyz, r10.yzwy, r0.xyzx, r2.xyzx
add r2.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r2.xyz, r2.xyzx, r29.xyzx
mad r1.xyz, r30.xyzx, r1.xyzx, r2.xyzx
add r0.xyz, r0.xyzx, r1.xyzx
lt r0.w, l(0.000000), cb2[9].z
if_nz r0.w
  dp3 r0.w, v5.xyzx, v5.xyzx
  rsq r1.x, r0.w
  mul r1.xyz, r1.xxxx, v5.xyzx
  sqrt r0.w, r0.w
  lt r1.w, l(0.000000), cb2[13].w
  if_nz r1.w
    mad r2.xy, r0.wwww, cb2[15].xyxx, cb2[14].zwzz
    mul r2.xy, r2.xyxx, cb2[16].xyxx
    lt r1.w, l(0.010000), |v5.z|
    mul r2.zw, v5.zzzz, cb2[15].zzzw
    mul r3.xy, r2.zwzz, l(-1.442695, -1.442695, 0.000000, 0.000000)
    exp r3.xy, r3.xyxx
    add r3.xy, -r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    div r2.zw, r3.xxxy, r2.zzzw
    mul r2.zw, r2.zzzw, r2.xxxy
    movc r2.xy, r1.wwww, r2.zwzz, r2.xyxx
    mul r2.xzw, r2.xxxx, cb2[12].xxyz
    exp r2.xzw, r2.xxzw
    mul r3.xyz, r2.yyyy, cb2[12].xyzx
    exp r3.xyz, r3.xyzx
    add r3.xyz, -r2.xzwx, r3.xyzx
    mad r2.xyz, cb2[13].wwww, r3.xyzx, r2.xzwx
  else 
    mad r1.w, r0.w, cb2[15].x, cb2[14].z
    mul r1.w, r1.w, cb2[16].x
    lt r2.w, l(0.010000), |v5.z|
    mul r3.x, v5.z, cb2[15].z
    mul r3.y, r3.x, l(-1.442695)
    exp r3.y, r3.y
    add r3.y, -r3.y, l(1.000000)
    div r3.x, r3.y, r3.x
    mul r3.x, r1.w, r3.x
    movc r1.w, r2.w, r3.x, r1.w
    mul r3.xyz, r1.wwww, cb2[12].xyzx
    exp r2.xyz, r3.xyzx
  endif 
  mad r2.xyz, r2.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r2.xyz, r2.xyzx, -cb2[9].zzzz
  dp3 r1.x, cb2[7].yzwy, -r1.xyzx
  mad r1.y, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r1.z, cb2[8].w, -r1.x, l(1.000000)
  mul r1.z, r1.z, r1.z
  mul r1.z, r1.z, l(12.566371)
  div r1.y, r1.y, r1.z
  add r0.w, r0.w, -cb2[10].w
  mul_sat r0.w, r0.w, cb2[11].w
  mul r0.w, r0.w, r1.y
  mov_sat r1.x, r1.x
  mad r1.x, r1.x, r1.x, l(1.000000)
  mad r1.x, r1.x, l(0.05968310), l(-1.000000)
  mad r1.x, cb2[8].z, r1.x, l(1.000000)
  mul r1.yzw, r0.wwww, cb2[11].xxyz
  mad r1.xyz, r1.xxxx, cb2[10].xyzx, r1.yzwy
  mul r1.xyz, r1.xyzx, cb2[9].wwww
  add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r1.xyz, r1.xyzx, r3.xyzx
  mad r1.xyz, r0.xyzx, r2.xyzx, r1.xyzx
else 
  mul r0.w, v5.z, cb2[6].x
  mad r1.w, cb2[6].x, v5.z, cb2[5].x
  lt r2.x, |r0.w|, l(0.000100)
  min r2.y, r1.w, l(64.000000)
  mul r2.y, r2.y, l(1.442695)
  exp r2.y, r2.y
  mov_sat r2.z, cb2[6].z
  lt r2.w, r1.w, l(0.000000)
  add r1.w, r1.w, l(1.000000)
  movc r1.w, r2.w, r2.y, r1.w
  add r1.w, r1.w, -cb2[6].z
  movc r0.w, r2.x, l(1.000000), r0.w
  div r0.w, r1.w, r0.w
  movc r0.w, r2.x, r2.z, r0.w
  mul r0.w, r0.w, cb2[5].z
  dp3 r1.w, v5.xyzx, v5.xyzx
  sqrt r2.x, r1.w
  mad r0.w, r0.w, r2.x, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  rsq r1.w, r1.w
  mul r2.xyz, r1.wwww, v5.xyzx
  dp3 r1.w, cb2[7].yzwy, r2.xyzx
  mad_sat r1.w, cb2[8].y, r1.w, cb2[8].x
  add r2.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r2.xyzw, r1.wwww, r2.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r2.w
  add r2.xyz, -r0.xyzx, r2.xyzx
  mad r1.xyz, r0.wwww, r2.xyzx, r0.xyzx
endif 
mul r0.xyz, r1.xyzx, cb1[85].yyyy
ge r1.xyz, r0.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.xyz, r0.xyzx, r1.xyzx
min o0.xyz, r0.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
ret 
// Approximately 1903 instruction slots used
