//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:28:17 2021
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float baseNormalHeight;            // Offset:  160 Size:     4
//   float2 glossRange;                 // Offset:  164 Size:     8
//   float scriptProxy;                 // Offset:  172 Size:     4 [unused]
//
// }
//
// Resource bind info for shaderConstantSetBuffer
// {
//
//   struct GpuShaderConstantSet
//   {
//       
//       float4 scriptVector0;          // Offset:    0
//       float4 scriptVector1;          // Offset:   16
//       float4 scriptVector2;          // Offset:   32
//       float4 scriptVector3;          // Offset:   48
//       float4 scriptVector4;          // Offset:   64
//       float4 scriptVector5;          // Offset:   80
//       float4 scriptVector6;          // Offset:   96
//       float4 scriptVector7;          // Offset:  112
//       float4 weaponParam0;           // Offset:  128
//       float4 weaponParam1;           // Offset:  144
//       float4 weaponParam2;           // Offset:  160
//       float4 weaponParam3;           // Offset:  176
//       float4 weaponParam4;           // Offset:  192
//       float4 weaponParam5;           // Offset:  208
//       float4 weaponParam6;           // Offset:  224
//       float4 weaponParam7;           // Offset:  240
//       float4 characterParam0;        // Offset:  256
//       float4 characterParam1;        // Offset:  272
//       float4 characterParam2;        // Offset:  288
//       float4 characterParam3;        // Offset:  304
//       float4 characterParam4;        // Offset:  320
//       float4 characterParam5;        // Offset:  336
//       float4 characterParam6;        // Offset:  352
//       float4 characterParam7;        // Offset:  368
//
//   } $Element;                        // Offset:    0 Size:   384
//
// }
//
// Resource bind info for modelInstanceBuffer
// {
//
//   struct ModelInstanceData
//   {
//       
//       uint boneArrayIndex;           // Offset:    0
//       uint shaderConstantSet;        // Offset:    4
//       uint flagsAndPrevFrameIndex;   // Offset:    8
//       uint worldMatrix;              // Offset:   12
//       uint siegeAnimStateOffset;     // Offset:   16
//       uint prevFrameSiegeAnimStateOffset;// Offset:   20
//
//   } $Element;                        // Offset:    0 Size:    24
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// colorSampler                      sampler      NA          NA             s1      1 
// normalSampler                     sampler      NA          NA             s2      1 
// revealSampler                     sampler      NA          NA             s3      1 
// shaderConstantSetBuffer           texture  struct         r/o             t0      1 
// modelInstanceBuffer               texture  struct         r/o             t4      1 
// resolvedNormal                    texture  float4          2d             t6      1 
// colorMap                          texture  float4          2d             t7      1 
// normalMap                         texture  float4          2d             t9      1 
// revealMap                         texture  float4          2d            t10      1 
// transitionDiffuse                 texture  float4          2d            t11      1 
// transitionNormal                  texture  float4          2d            t12      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// COLOR                    0   xyz         1     NONE   float   xyz 
// COLOR                    1      w        1     NONE   float       
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 4   x           3     NONE    uint   x   
// TEXCOORD                 1   xyz         4     NONE   float   xyz 
// TEXCOORD                 2   xyz         5     NONE   float   xyz 
// TEXCOORD                 3   xyz         6     NONE   float   xyz 
// SV_IsFrontFace           0   x           7    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
// SV_TARGET                1   xyzw        1   TARGET   float   xyzw
// SV_TARGET                2   xyzw        2   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[11], immediateIndexed
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_structured t0, 384
dcl_resource_structured t4, 24
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t9
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t11
dcl_resource_texture2d (float,float,float,float) t12
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xy
dcl_input_ps constant v3.x
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps_sgv constant v7.x, is_front_face
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_temps 6
ld_structured_indexable(structured_buffer, stride=24)(mixed,mixed,mixed,mixed) r0.x, v3.x, l(4), t4.xxxx
ld_structured_indexable(structured_buffer, stride=384)(mixed,mixed,mixed,mixed) r0.x, r0.x, l(0), t0.xxxx
mad_sat r0.x, r0.x, l(0.998000), l(0.001000)
log r0.y, r0.x
add r0.x, -r0.x, l(1.000000)
mov_sat r0.z, cb0[8].y
mul r0.y, r0.y, r0.z
exp r0.y, r0.y
mov r1.x, -r0.y
log r0.y, r0.x
mul r0.y, r0.y, r0.z
exp r1.y, r0.y
mad_sat r0.xy, cb0[8].xxxx, r1.xyxx, r0.xxxx
sample_indexable(texture2d)(float,float,float,float) r0.z, v2.xyxx, t10.yzxw, s3
add r0.z, -r0.x, r0.z
add r0.x, -r0.x, r0.y
div_sat r0.x, r0.z, r0.x
ge r0.y, r0.x, l(0.990000)
and r0.y, r0.y, l(0x3f800000)
sample_indexable(texture2d)(float,float,float,float) r1.xyz, v2.xyxx, t7.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r2.xyz, v2.xyxx, t11.xyzw, s1
mul r2.xyz, r2.xyzx, v1.xyzx
mad r1.xyz, r1.xyzx, v1.xyzx, -r2.xyzx
mad r1.xyz, r0.yyyy, r1.xyzx, r2.xyzx
mul o0.xyz, r0.xxxx, r1.xyzx
mov o0.w, r0.x
dp3 r0.z, v6.xyzx, v6.xyzx
rsq r0.z, r0.z
mul r1.xyz, r0.zzzz, v6.xyzx
movc r0.z, v7.x, l(1.000000), l(-1.000000)
mul r1.xyz, r0.zzzz, r1.xyzx
sample_indexable(texture2d)(float,float,float,float) r2.xyz, v2.xyxx, t12.xyzw, s2
add r2.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.000000, 0.000000)
mad r2.xyz, cb0[10].xxxx, r2.xyzx, l(0.500000, 0.500000, 0.000000, 0.000000)
mad r2.xy, r2.xyxx, l(1.99218750, 1.99218750, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r0.w, r2.z, r2.z
mul r0.w, r0.w, l(0.33333334)
mul r3.xyz, r1.xyzx, r2.yyyy
dp3 r1.w, v5.xyzx, v5.xyzx
rsq r1.w, r1.w
mul r4.xyz, r1.wwww, v5.xyzx
mul r4.xyz, r0.zzzz, r4.xyzx
mad r3.xyz, r4.xyzx, r2.xxxx, r3.xyzx
dp2 r1.w, r2.xyxx, r2.xyxx
add r1.w, -r1.w, l(1.000000)
max r1.w, r1.w, l(0.000000)
sqrt r1.w, r1.w
dp3 r2.x, v4.xyzx, v4.xyzx
rsq r2.x, r2.x
mul r2.xyz, r2.xxxx, v4.xyzx
mul r2.xyz, r0.zzzz, r2.xyzx
mad r3.xyz, r2.xyzx, r1.wwww, r3.xyzx
dp3 r0.z, r3.xyzx, r3.xyzx
rsq r0.z, r0.z
mul r3.xyz, r0.zzzz, r3.xyzx
sample_indexable(texture2d)(float,float,float,float) r5.xyz, v2.xyxx, t9.xyzw, s2
add r5.xyz, r5.xyzx, l(-0.500000, -0.500000, -0.000000, 0.000000)
mad r5.xyz, cb0[10].xxxx, r5.xyzx, l(0.500000, 0.500000, 0.000000, 0.000000)
mad r5.xy, r5.xyxx, l(1.99218750, 1.99218750, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r0.z, r5.z, r5.z
mul r0.z, r0.z, l(0.33333334)
min r0.zw, r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
mul r1.xyz, r1.xyzx, r5.yyyy
mad r1.xyz, r4.xyzx, r5.xxxx, r1.xyzx
dp2 r1.w, r5.xyxx, r5.xyxx
add r1.w, -r1.w, l(1.000000)
max r1.w, r1.w, l(0.000000)
sqrt r1.w, r1.w
mad r1.xyz, r2.xyzx, r1.wwww, r1.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mad r1.xyz, r1.xyzx, r1.wwww, -r3.xyzx
mad r1.xyz, r0.yyyy, r1.xyzx, r3.xyzx
ftou r2.xy, v0.xyxx
mov r2.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r2.xy, r2.xyzw, t6.zwxy
mad r1.w, r2.y, l(3.000000), l(0.500000)
ftou r1.w, r1.w
and r3.xyzw, r1.wwww, l(2, 1, 2, 1)
movc r3.xyzw, r3.zwxy, l(-0.57735026,-0.57735026,1,1), l(0.57735026,0.57735026,0,0)
xor r1.w, r3.w, r3.z
movc r3.z, r1.w, l(-0.57735026), l(0.57735026)
dp3 r1.w, r1.xyzx, r3.xyzx
add r1.w, |r1.w|, l(1.000000)
rsq r1.w, r1.w
mul r2.yzw, r3.xxyz, l(0.000000, 0.70710677, -1.41421354, 0.70710677)
mul r3.xy, r3.xzxx, l(-1.22474492, 1.22474492, 0.000000, 0.000000)
dp2 r3.y, r1.xzxx, r3.xyxx
dp3 r3.x, r1.xyzx, r2.yzwy
mul r1.xy, r1.wwww, r3.xyxx
mad r1.xy, r1.xyxx, l(0.58823532, 0.58823532, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
mul_sat r1.w, cb0[10].z, l(0.05882353)
mul r1.w, r1.w, l(-17.000000)
exp r1.w, r1.w
add r0.zw, r0.zzzw, r1.wwww
log r0.w, r0.w
mul r0.w, r0.w, l(-0.05882353)
log r0.z, r0.z
mul r0.z, r0.z, l(-0.05882353)
max r0.zw, r0.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
add r0.z, -r0.w, r0.z
mad r0.y, r0.y, r0.z, r0.w
ge r0.z, r2.x, l(0.500000)
lt r0.w, l(0.000000), r2.x
movc r0.z, r0.z, l(0.500000), l(0.00146628)
mad r1.z, r0.y, l(0.49755621), r0.z
and r0.yzw, r0.wwww, r1.xxyz
mul o1.xyz, r0.xxxx, r0.yzwy
mov o1.w, r0.x
mul o2.xyzw, r0.xxxx, l(0.040000, 0.500000, 1.000000, 1.000000)
ret 
// Approximately 111 instruction slots used
