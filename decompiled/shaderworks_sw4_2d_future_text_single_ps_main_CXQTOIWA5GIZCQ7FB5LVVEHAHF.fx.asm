//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:40:36 2021
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float4 LightTextColor;             // Offset:  160 Size:    16
//   float4 LightGlowColor;             // Offset:  176 Size:    16
//   float4 LightRevealColor;           // Offset:  192 Size:    16
//   float LightGlowIntensity;          // Offset:  208 Size:     4
//   float Indent;                      // Offset:  212 Size:     4
//   float RevealScale;                 // Offset:  216 Size:     4
//   float4 Background;                 // Offset:  224 Size:    16
//   float4 DarkTextColor;              // Offset:  240 Size:    16
//   float4 DarkRevealColor;            // Offset:  256 Size:    16
//   float4 DarkGlowColor;              // Offset:  272 Size:    16
//   float DarkGlowIntensity;           // Offset:  288 Size:     4
//   float DarkOutlinePower;            // Offset:  292 Size:     4
//   float DebugTime;                   // Offset:  296 Size:     4
//   float LightOutlinePower;           // Offset:  300 Size:     4
//   float4 LightDisolveColor;          // Offset:  304 Size:    16
//   float4 DarkDisolveColor;           // Offset:  320 Size:    16
//   float RevealWidth;                 // Offset:  336 Size:     4
//   float RevealColorWidth;            // Offset:  340 Size:     4
//   float2 Disolve1Direction;          // Offset:  344 Size:     8
//   float2 Disolve1Scale;              // Offset:  352 Size:     8
//   float2 Disolve2Direction;          // Offset:  360 Size:     8
//   float2 Disolve2Scale;              // Offset:  368 Size:     8
//   float4 LightTextColorOuter;        // Offset:  384 Size:    16
//   float4 DarkTextColorOuter;         // Offset:  400 Size:    16
//   float2 RevealDirection;            // Offset:  416 Size:     8
//
// }
//
// cbuffer GenericsCBuffer
// {
//
//   float4 scriptVector0;              // Offset:    0 Size:    16
//   float4 scriptVector1;              // Offset:   16 Size:    16
//   float4 scriptVector2;              // Offset:   32 Size:    16
//   float4 scriptVector3;              // Offset:   48 Size:    16
//   float4 scriptVector4;              // Offset:   64 Size:    16 [unused]
//   float4 scriptVector5;              // Offset:   80 Size:    16 [unused]
//   float4 scriptVector6;              // Offset:   96 Size:    16 [unused]
//   float4 scriptVector7;              // Offset:  112 Size:    16 [unused]
//   float4 weaponParam0;               // Offset:  128 Size:    16 [unused]
//   float4 weaponParam1;               // Offset:  144 Size:    16 [unused]
//   float4 weaponParam2;               // Offset:  160 Size:    16 [unused]
//   float4 weaponParam3;               // Offset:  176 Size:    16 [unused]
//   float4 weaponParam4;               // Offset:  192 Size:    16 [unused]
//   float4 weaponParam5;               // Offset:  208 Size:    16 [unused]
//   float4 weaponParam6;               // Offset:  224 Size:    16 [unused]
//   float4 weaponParam7;               // Offset:  240 Size:    16 [unused]
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16 [unused]
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16
//   float4 gameTick;                   // Offset: 1120 Size:    16 [unused]
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16 [unused]
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// FutureMap_Sampler                 sampler      NA          NA             s1      1 
// ui3dSampler_C1_P0_sampler         sampler      NA          NA             s2      1 
// FutureMap                         texture  float4          2d             t0      1 
// ui3dSampler_C1_P0                 texture  float4          2d             t6      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// GenericsCBuffer                   cbuffer      NA          NA            cb3      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[27], immediateIndexed
dcl_constantbuffer CB3[4], immediateIndexed
dcl_constantbuffer CB1[79], immediateIndexed
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t6
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyzw
dcl_output o0.xyzw
dcl_temps 10
mul r0.x, cb0[18].z, l(0.100000)
frc r0.x, r0.x
mul r0.y, cb1[69].w, l(0.100000)
frc r0.y, r0.y
mul r0.xz, r0.xxyx, l(10.000000, 0.000000, 10.000000, 0.000000)
lt r0.w, l(0.000000), cb0[18].z
movc r0.x, r0.w, r0.x, r0.z
mul r0.z, r0.x, l(0.500000)
mul r1.x, cb3[2].x, l(4.000000)
movc r0.z, r0.w, r0.z, r1.x
mov_sat r1.x, r1.x
mul r2.xy, cb3[0].xyxx, l(0.00097656, 0.00195313, 0.000000, 0.000000)
mad r3.yz, cb3[0].wwzw, l(0.000000, 0.00195313, 0.00097656, 0.000000), -r2.yyxy
mad r2.y, r0.z, r3.z, r2.x
lt r0.z, l(0.990000), r0.z
mad r2.x, cb3[1].x, l(0.00097656), -r2.x
add r2.z, r2.y, -cb0[21].y
add r2.w, -r2.z, r2.y
div r3.zw, v0.xxxy, cb1[44].xxxy
add r2.z, -r2.z, r3.z
div_sat r2.z, r2.z, r2.w
mul r2.z, r2.z, r2.z
mul r2.z, r2.z, r2.z
add r2.w, -cb0[26].x, l(1.000000)
frc r4.xy, v2.zwzz
sample_d_indexable(texture2d)(float,float,float,float) r4.x, r4.xyxx, t0.yxzw, s1, l(0.000000, 0.000000, 0.000000, 0.000000), l(0.000000, 0.000000, 0.000000, 0.000000)
mov_sat r4.y, r4.x
add_sat r4.x, r4.x, l(0.200000)
mul r4.x, r4.x, r4.x
mul r2.w, r2.w, r4.y
mul r2.w, r2.z, r2.w
max r4.zw, r0.xxxx, l(0.000000, 0.000000, 4.000000, 7.000000)
min r0.x, r0.x, l(2.000000)
mul r5.x, r0.x, l(0.500000)
min r4.zw, r4.zzzw, l(0.000000, 0.000000, 5.000000, 8.000000)
add r5.zw, r4.zzzw, l(0.000000, 0.000000, -4.000000, -7.000000)
mul r6.xyz, cb3[2].yzwy, cb3[2].yzwy
mul r1.yzw, r6.xxyz, r6.xxyz
movc r1.xyzw, r0.wwww, r5.zwxz, r1.ywxz
add r0.x, -cb0[21].z, l(1.000000)
mul r0.x, r4.y, r0.x
mul r0.x, r1.x, r0.x
mov r3.x, l(1.000000)
mul r5.xz, r3.yyxy, v1.yyxy
mad r5.w, cb3[0].y, l(0.00195313), r5.x
mad r3.xy, r5.zwzz, cb1[78].xyxx, cb1[78].zwzz
mul r0.w, cb0[13].y, cb3[3].x
mul r4.z, r0.w, l(0.500000)
mov r4.w, l(0)
add r5.yw, r3.yyyx, -r4.wwwz
mad r0.x, r0.x, cb0[22].x, r5.w
mad r5.z, r2.w, cb0[13].z, r0.x
mov_sat r0.xw, r5.zzzy
sample_indexable(texture2d)(float,float,float,float) r0.x, r0.xwxx, t6.wxyz, s2
eq r0.w, cb3[1].z, l(0.000000)
movc r6.xyzw, r0.wwww, cb0[10].xyzw, cb0[15].xyzw
movc r7.xyz, r0.wwww, cb0[24].xyzx, cb0[25].xyzx
add r8.xyz, r6.xyzx, -r7.xyzx
mad r7.xyz, r0.xxxx, r8.xyzx, r7.xyzx
movc r8.xyz, r0.wwww, cb0[12].xyzx, cb0[16].xyzx
add r9.xyz, -r7.xyzx, r8.xyzx
mad r7.xyz, r2.zzzz, r9.xyzx, r7.xyzx
log r2.z, r2.z
mul r2.z, r2.z, l(0.100000)
exp r2.z, r2.z
dp2 r2.z, r2.zzzz, r4.xxxx
add r4.xzw, -r7.xxyz, r8.xxyz
mul r4.xzw, r4.xxzw, l(0.600000, 0.000000, 0.600000, 0.600000)
mad r4.xzw, r2.zzzz, r4.xxzw, r7.xxyz
movc r7.xyz, r0.wwww, cb0[19].xyzx, cb0[20].xyzx
add r8.xyz, -r4.xzwx, r7.xyzx
mul r2.z, r4.y, r4.y
mul r2.z, r2.z, r2.z
mul r2.w, r1.x, r2.z
mad r8.xyz, r2.wwww, r8.xyzx, r4.xzwx
movc r8.xyz, r0.zzzz, r8.xyzx, r4.xzwx
add r0.z, -r2.y, r3.z
add r0.y, r0.y, r3.w
frc r3.y, r0.y
div_sat r0.y, r0.z, cb0[21].x
add r0.y, -r0.y, l(1.000000)
mul r8.w, r0.y, r0.x
add r9.xyzw, -r8.xyzw, l(0.500000, 0.500000, 0.500000, 0.000000)
mad r8.xyzw, r1.xxxx, r9.xyzw, r8.xyzw
add r0.xy, -cb0[22].zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
mul r0.xy, r4.yyyy, r0.xyxx
mul r1.yz, r1.yyzy, l(0.000000, 4.000000, 10.000000, 0.000000)
min r1.yz, r1.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
mul r0.xy, r0.xyxx, r1.yyyy
min r0.z, r1.w, l(1.000000)
log r1.x, r1.x
mul r1.x, r1.x, l(0.250000)
exp r1.x, r1.x
mad r1.w, r0.z, l(-2.000000), l(3.000000)
mul r2.y, r0.z, r0.z
add r0.z, -r0.z, l(1.000000)
mul r1.w, r1.w, r2.y
mad r5.x, r1.w, r2.x, r5.w
mad_sat r0.xy, r0.xyxx, cb0[23].xyxx, r5.xyxx
mul r2.xy, cb3[1].xyxx, l(0.00097656, 0.00097656, 0.000000, 0.000000)
lt r1.w, r2.x, r0.x
lt r2.x, r0.x, r2.y
sample_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t6.wxyz, s2
mad r4.xyzw, r6.xyzw, r0.xxxx, l(-0.500000, -0.500000, -0.500000, -0.000000)
and r0.x, r1.w, r2.x
and r0.x, r0.x, l(0x3f800000)
mad r4.xyzw, r0.xxxx, r4.xyzw, l(0.500000, 0.500000, 0.500000, 0.000000)
add r2.xyw, -r4.xyxz, r7.xyxz
mad r2.xyz, r2.zzzz, r2.xywx, r4.xyzx
mov r2.w, l(0)
add r2.xyzw, -r4.xyzw, r2.xyzw
mad r2.xyzw, r1.yyyy, r2.xyzw, r4.xyzw
mad r0.x, r2.w, r1.x, r8.w
log r0.x, r0.x
mul r0.x, r0.x, l(0.200000)
exp r0.x, r0.x
mov r3.x, l(0.200000)
sample_d_indexable(texture2d)(float,float,float,float) r0.y, r3.xyxx, t0.xzyw, s1, l(0.000000, 0.000000, 0.000000, 0.000000), l(0.000000, 0.000000, 0.000000, 0.000000)
add r0.y, r0.y, l(-0.500000)
mad r5.x, r0.y, l(0.050000), r5.w
lt r3.xy, r5.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
or r0.y, r3.y, r3.x
lt r3.xy, l(1.000000, 1.000000, 0.000000, 0.000000), r5.xyxx
sample_indexable(texture2d)(float,float,float,float) r1.w, r5.xyxx, t6.xyzw, s2
or r0.y, r0.y, r3.x
or r0.y, r3.y, r0.y
add r3.xy, v2.xyxx, v2.xyxx
frc r3.xy, r3.xyxx
sample_d_indexable(texture2d)(float,float,float,float) r3.x, r3.xyxx, t0.yxzw, s1, l(0.000000, 0.000000, 0.000000, 0.000000), l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.z, r0.z, r3.x
movc r3.x, r0.w, cb0[13].x, cb0[18].x
mul_sat r0.z, r0.z, r3.x
add r1.y, -r1.y, l(1.000000)
mul r0.z, r0.z, r1.y
mul r0.z, r1.w, r0.z
movc r3.w, r0.y, l(0), r0.z
log r0.y, r3.w
mul r0.y, r0.y, l(0.300000)
exp r0.y, r0.y
movc r4.xyz, r0.wwww, cb0[11].xyzx, cb0[17].xyzx
movc r0.z, r0.w, cb0[18].w, cb0[18].y
add r4.xyz, r4.xyzx, -cb3[1].zzzz
mad r3.xyz, r0.yyyy, r4.xyzx, cb3[1].zzzz
mul r3.xyzw, r1.zzzz, r3.xyzw
mad r3.xyzw, r0.xxxx, -r3.xyzw, r3.xyzw
add r0.xyw, -r3.xyxz, r8.xyxz
log r1.y, r8.w
add_sat r1.z, r8.w, r3.w
mad_sat r4.w, r2.w, r1.x, r1.z
mul r1.x, r1.x, r2.w
log r1.x, r1.x
mul r1.x, r0.z, r1.x
mul r0.z, r0.z, r1.y
exp r0.z, r0.z
mad r0.xyz, r0.zzzz, r0.xywx, r3.xyzx
exp r0.w, r1.x
mov r1.xyz, l(1.000000,1.000000,1.000000,0)
mad r1.xyz, r2.xyzx, r1.xyzx, -r0.xyzx
mad r4.xyz, r0.wwww, r1.xyzx, r0.xyzx
add r0.xyz, r4.xyzx, -cb0[14].xyzx
mad r0.xyz, r4.wwww, r0.xyzx, cb0[14].xyzx
lt r1.x, l(0.800000), cb0[14].w
mov r0.w, l(1.000000)
movc r0.xyzw, r1.xxxx, r0.xyzw, r4.xyzw
mul o0.xyz, r0.wwww, r0.xyzx
mov o0.w, r0.w
ret 
// Approximately 167 instruction slots used
