//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:32:39 2021
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float3 colorTint;                  // Offset:  160 Size:    12
//   float baseNormalHeight;            // Offset:  172 Size:     4
//   float2 glossRange;                 // Offset:  176 Size:     8
//   float rowCount;                    // Offset:  184 Size:     4
//   float columnCount;                 // Offset:  188 Size:     4
//   float imageTime;                   // Offset:  192 Size:     4
//   float2 rotateUVs;                  // Offset:  196 Size:     8
//   float2 scrollUVs;                  // Offset:  208 Size:     8
//   float2 scaleUVs;                   // Offset:  216 Size:     8
//   float2 offsetUVs;                  // Offset:  224 Size:     8
//   float2 zoomUVs;                    // Offset:  232 Size:     8
//   float zoomRate;                    // Offset:  240 Size:     4
//   float layerDepth;                  // Offset:  244 Size:     4
//   bool clampU;                       // Offset:  248 Size:     4
//   bool clampV;                       // Offset:  252 Size:     4
//   float2 flickerSeed;                // Offset:  256 Size:     8
//   float flickerSpeed;                // Offset:  264 Size:     4
//   float2 flickerRange;               // Offset:  272 Size:     8
//   float flickerPower;                // Offset:  280 Size:     4
//   float3 emissiveTint1;              // Offset:  288 Size:    12
//   float hdrScale;                    // Offset:  300 Size:     4
//   float uvMotionToggle1;             // Offset:  304 Size:     4
//   bool relativeHDR;                  // Offset:  308 Size:     4
//   float3 emissiveTint2;              // Offset:  320 Size:    12
//   float rowCount2;                   // Offset:  332 Size:     4
//   float columnCount2;                // Offset:  336 Size:     4
//   float imageTime2;                  // Offset:  340 Size:     4
//   float2 rotateUVs2;                 // Offset:  344 Size:     8
//   float2 scrollUVs2;                 // Offset:  352 Size:     8
//   float2 scaleUVs2;                  // Offset:  360 Size:     8
//   float2 offsetUVs2;                 // Offset:  368 Size:     8
//   float2 zoomUVs2;                   // Offset:  376 Size:     8
//   float zoomRate2;                   // Offset:  384 Size:     4
//   float layer2Depth;                 // Offset:  388 Size:     4
//   float uvMotionToggle2;             // Offset:  392 Size:     4
//   bool clampU2;                      // Offset:  396 Size:     4
//   bool clampV2;                      // Offset:  400 Size:     4
//   float2 flickerSeed2;               // Offset:  404 Size:     8
//   float flickerSpeed2;               // Offset:  412 Size:     4
//   float2 flickerRange2;              // Offset:  416 Size:     8
//   float flickerPower2;               // Offset:  424 Size:     4
//   float3 emissiveTint3;              // Offset:  432 Size:    12
//   float rowCount3;                   // Offset:  444 Size:     4
//   float columnCount3;                // Offset:  448 Size:     4
//   float imageTime3;                  // Offset:  452 Size:     4
//   float2 rotateUVs3;                 // Offset:  456 Size:     8
//   float2 scrollUVs3;                 // Offset:  464 Size:     8
//   float2 scaleUVs3;                  // Offset:  472 Size:     8
//   float2 offsetUVs3;                 // Offset:  480 Size:     8
//   float2 zoomUVs3;                   // Offset:  488 Size:     8
//   float zoomRate3;                   // Offset:  496 Size:     4
//   float layer3Depth;                 // Offset:  500 Size:     4
//   float uvMotionToggle3;             // Offset:  504 Size:     4
//   bool clampU3;                      // Offset:  508 Size:     4
//   bool clampV3;                      // Offset:  512 Size:     4
//   float2 flickerSeed3;               // Offset:  516 Size:     8
//   float flickerSpeed3;               // Offset:  524 Size:     4
//   float2 flickerRange3;              // Offset:  528 Size:     8
//   float flickerPower3;               // Offset:  536 Size:     4
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16 [unused]
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16
//   float4 debugNormalOverride;        // Offset:  960 Size:    16
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16
//   float4 debugGlossOverride;         // Offset:  992 Size:    16
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for forwardDecalConstants
// {
//
//   struct CoreDecalConstantsPack
//   {
//       
//       uint4 data[8];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   128
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// colorSampler                      sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// normalSampler                     sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// lookupSampler                     sampler      NA          NA             s5      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// colorMap                          texture  float4          2d             t0      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// tintMask                          texture  float4          2d            t21      1 
// normalMap                         texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// flickerLookupMap                  texture  float4          2d            t24      1 
// emissiveMap1                      texture  float4          2d            t25      1 
// emissiveMap2                      texture  float4          2d            t26      1 
// emissiveMap3                      texture  float4          2d            t29      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// visibleDecals                     texture    uint     2darray            t35      1 
// forwardDecalConstants             texture  struct         r/o            t36      1 
// materialTexBC7                    texture  float4     2darray            t42      1 
// materialTexBC3                    texture  float4     2darray            t43      1 
// materialTexBC7linear              texture  float4     2darray            t44      1 
// materialTexMask                   texture  float4     2darray            t45      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyz 
// COLOR                    0   xyz         1     NONE   float   xyz 
// COLOR                    1      w        1     NONE   float      w
// TEXCOORD                 0   xy          2     NONE   float   xy  
// UVOFFSETS                0   xyz         3     NONE   float   xyz 
// TEXCOORD                 4      w        3     NONE    uint       
// TEXCOORD                 1   xyz         4     NONE   float   xyz 
// TEXCOORD                 2   xyz         5     NONE   float   xyz 
// TEXCOORD                 3   xyz         6     NONE   float   xyz 
// OFFPOSITION              0   xyz         7     NONE   float   xyz 
// SV_IsFrontFace           0   x           8    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[34], immediateIndexed
dcl_constantbuffer CB1[93], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2d (float,float,float,float) t26
dcl_resource_texture2d (float,float,float,float) t29
dcl_resource_texture2darray (float,float,float,float) t31
dcl_resource_texture2darray (uint,uint,uint,uint) t35
dcl_resource_structured t36, 128
dcl_resource_texture2darray (float,float,float,float) t42
dcl_resource_texture2darray (float,float,float,float) t43
dcl_resource_texture2darray (float,float,float,float) t44
dcl_resource_texture2darray (float,float,float,float) t45
dcl_input_ps_siv linear noperspective v0.xyz, position
dcl_input_ps linear v1.xyz
dcl_input_ps linear v1.w
dcl_input_ps linear v2.xy
dcl_input_ps constant v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyz
dcl_input_ps_sgv constant v8.x, is_front_face
dcl_output o0.xyzw
dcl_temps 46
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v2.xyxx, t0.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r1.x, v2.xyxx, t21.xyzw, s1
add r1.yzw, cb0[10].xxyz, l(0.000000, -1.000000, -1.000000, -1.000000)
mad r1.xyz, r1.xxxx, r1.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r0.xyz, r0.xyzx, r1.xyzx
mul r0.xyz, r0.xyzx, v1.xyzx
mul r1.x, r0.w, v1.w
add r1.y, -cb0[11].x, cb0[11].y
mul_sat r1.z, cb0[11].y, l(0.05882353)
sample_indexable(texture2d)(float,float,float,float) r2.xyz, v2.xyxx, t22.xyzw, s3
add r2.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.000000, 0.000000)
mad r2.xyz, cb0[10].wwww, r2.xyzx, l(0.500000, 0.500000, 0.000000, 0.000000)
mad r2.xy, r2.xyxx, l(1.99218750, 1.99218750, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r1.w, r2.xyxx, r2.xyxx
add r1.w, -r1.w, l(1.000000)
max r1.w, r1.w, l(0.000000)
sqrt r1.w, r1.w
mul r2.z, r2.z, r2.z
mul r2.z, r2.z, l(0.33333334)
min r2.z, r2.z, l(1.000000)
movc r2.w, v8.x, l(1.000000), l(-1.000000)
dp3 r3.x, v4.xyzx, v4.xyzx
rsq r3.x, r3.x
mul r3.xyz, r3.xxxx, v4.xyzx
mul r3.xyz, r2.wwww, r3.xyzx
dp3 r3.w, v5.xyzx, v5.xyzx
rsq r3.w, r3.w
mul r4.xyz, r3.wwww, v5.xyzx
mul r4.xyz, r2.wwww, r4.xyzx
dp3 r3.w, v6.xyzx, v6.xyzx
rsq r3.w, r3.w
mul r5.xyz, r3.wwww, v6.xyzx
mul r5.xyz, r2.wwww, r5.xyzx
mul r1.z, r1.z, l(-17.000000)
exp r1.z, r1.z
add r1.z, r1.z, r2.z
log r1.z, r1.z
mul r1.z, r1.z, l(-0.05882353)
mul r6.xyz, r2.yyyy, r5.xyzx
mad r6.xyz, r4.xyzx, r2.xxxx, r6.xyzx
mad r6.xyz, r3.xyzx, r1.wwww, r6.xyzx
dp3 r1.w, r6.xyzx, r6.xyzx
rsq r1.w, r1.w
mul r6.xyz, r1.wwww, r6.xyzx
mad r1.y, cb1[62].x, r1.y, cb0[11].x
mul_sat r1.y, r1.y, l(0.05882353)
mul r1.y, r1.y, l(-17.000000)
exp r1.y, r1.y
add r1.y, r1.y, r2.z
log r1.y, r1.y
mul r1.y, r1.y, l(-0.05882353)
max r1.yz, r1.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r1.w, l(0.000000), cb1[64].w
if_nz r1.w
  ftoi r1.w, cb1[64].w
  lod r2.x, v2.xyxx, t0.y, s1
  lod r2.y, v2.xyxx, t0.x, s1
  lt r2.x, r2.x, r2.y
  lt r2.y, l(0.000000), r2.y
  and r7.xyz, r1.wwww, l(1, 2, 4, 0)
  movc r8.xyz, r7.xxxx, l(1.000000,0,1.000000,0), r0.xyzx
  movc r7.xyw, r7.yyyy, l(0,1.000000,0,1.000000), r0.xyxz
  movc r7.xyw, r2.yyyy, r8.xyxz, r7.xyxw
  movc r8.xyz, r7.zzzz, l(0,1.000000,0,0), r0.xyzx
  movc r0.xyz, r2.xxxx, r7.xywx, r8.xyzx
endif 
add r2.xyz, -r0.xyzx, cb1[58].xyzx
mad r0.xyz, cb1[58].wwww, r2.xyzx, r0.xyzx
mad r0.w, -r0.w, v1.w, cb1[59].x
mad r0.w, cb1[59].w, r0.w, r1.x
add r2.xyz, cb1[61].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r2.xyz, cb1[61].wwww, r2.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
add r1.x, -r1.z, r1.y
mad r1.x, cb1[62].w, r1.x, r1.z
add r1.y, cb1[63].x, l(-1.000000)
mad r1.y, cb1[63].w, r1.y, l(1.000000)
movc r7.xyz, v8.xxxx, v4.xyzx, -v4.xyzx
dp3 r1.z, r7.xyzx, r7.xyzx
rsq r1.z, r1.z
mad r7.xyz, r7.xyzx, r1.zzzz, -r6.xyzx
mad r6.xyz, cb1[60].wwww, r7.xyzx, r6.xyzx
ge r1.z, v0.z, l(0.984375)
mul r1.w, v0.z, l(1.01587307)
mad r3.w, v0.z, l(64.000000), l(-63.000000)
movc r1.z, r1.z, r3.w, r1.w
max r1.z, r1.z, l(0.00000001)
rcp r1.z, r1.z
ftou r7.xy, v0.yxyy
deriv_rtx_coarse r8.xyz, v7.xyzx
deriv_rty_coarse r9.xyz, v7.xyzx
iadd r1.w, cb2[0].y, cb2[0].x
add r10.xyz, v7.xyzx, cb1[24].xyzx
mul r1.z, r1.z, l(0.00781250)
min r1.z, r1.z, l(15.000000)
ftou r1.z, r1.z
ushr r11.xy, r7.yxyy, l(6, 6, 0, 0)
ishl r11.z, r1.z, l(4)
and r1.z, cb2[57].z, l(-32)
iadd r3.w, -r1.z, cb2[57].z
mov r12.xy, l(0,0,0,0)
mov r13.w, l(0)
mov r10.w, l(1.000000)
mov r14.xyz, l(0,0,0,0)
mov r15.xyz, l(0,0,0,0)
mov r16.xyz, l(0,0,0,0)
mov r4.w, l(0)
mov r5.w, l(0)
mov r6.w, l(0)
loop 
  uge r7.z, r6.w, cb2[57].z
  breakc_nz r7.z
  ushr r12.z, r6.w, l(5)
  iadd r13.xyz, r11.xyzx, r12.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r7.z, r13.xyzw, t35.yzxw
  ieq r7.w, r1.z, r6.w
  ubfe r8.w, r3.w, l(0), r7.z
  movc r7.z, r7.w, r8.w, r7.z
  iadd r7.w, r1.w, r6.w
  mov r13.xyz, r14.xyzx
  mov r17.xyz, r15.xyzx
  mov r18.xyz, r16.xyzx
  mov r8.w, r4.w
  mov r9.w, r5.w
  mov r11.w, r7.z
  loop 
    breakc_z r11.w
    firstbit_lo r12.z, r11.w
    ishl r12.w, l(1), r12.z
    and r14.w, r11.w, r12.w
    if_nz r14.w
      xor r11.w, r11.w, r12.w
      iadd r12.w, r7.w, r12.z
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r19.xyzw, r12.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r20.xy, r12.w, l(16), t11.xyxx
      add r19.xyz, r19.xyzx, -v7.xyzx
      mov r20.z, r19.w
      lt r19.xyz, |r19.xyzx|, r20.zxyz
      and r12.w, r19.y, r19.x
      and r12.w, r19.z, r12.w
      if_nz r12.w
        iadd r12.z, r6.w, r12.z
        ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r19.xyz, r12.z, l(0), t36.xyzx
        ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r20.xyz, r12.z, l(16), t36.xyzx
        ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r21.xyz, r12.z, l(32), t36.xyzx
        mov r22.x, r19.x
        mov r22.y, r20.x
        mov r22.z, r21.x
        dp3 r12.w, r22.xyzx, r22.xyzx
        rsq r12.w, r12.w
        mul r23.xyz, r12.wwww, r22.xyzx
        dp3 r12.w, r23.xyzx, r3.xyzx
        ge r12.w, r12.w, l(0.500000)
        if_nz r12.w
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r24.xyw, r12.z, l(48), t36.xyxz
          mov r22.w, r24.x
          dp4 r22.x, r10.xyzw, r22.xyzw
          mov r25.x, r19.y
          mov r25.y, r20.y
          mov r25.z, r21.y
          mov r25.w, r24.y
          dp4 r22.y, r10.xyzw, r25.xyzw
          mov r24.x, r19.z
          mov r24.y, r20.z
          mov r24.z, r21.z
          dp4 r22.z, r10.xyzw, r24.xyzw
          lt r19.xyz, |r22.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
          and r12.w, r19.y, r19.x
          and r12.w, r19.z, r12.w
          if_nz r12.w
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r19.xyzw, r12.z, l(64), t36.xyzw
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r20.xyzw, r12.z, l(80), t36.xyzw
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r21.xyzw, r12.z, l(96), t36.xyzw
            dp3 r26.x, r8.xyzx, r25.xyzx
            dp3 r26.y, r8.xyzx, r24.xyzx
            dp3 r27.x, r9.xyzx, r25.xyzx
            dp3 r27.y, r9.xyzx, r24.xyzx
            mad r22.xy, r22.yzyy, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
            mul r26.xyz, r26.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
            mul r27.xyz, r27.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
            and r22.zw, r20.yyyz, l(0, 0, 0x0000ffff, 0x0000ffff)
            if_nz r22.z
              ubfe r12.w, l(4), l(24), r20.w
              ishl r12.w, l(1), r12.w
              ushr r14.w, r20.w, l(28)
              ishl r14.w, l(1), r14.w
              ieq r15.w, r22.z, l(4)
              if_nz r15.w
                and r15.w, r20.w, l(4095)
                ubfe r16.w, l(12), l(12), r20.w
                and r17.w, r21.w, l(1023)
                utof r28.xz, r12.wwww
                utof r28.y, r14.w
                mad r29.xy, r22.xyxx, r28.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                add r29.zw, r28.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                min r29.xy, r29.zwzz, r29.xyxx
                utof r30.x, r15.w
                utof r30.y, r16.w
                add r29.xy, r29.xyxx, r30.xyxx
                mul r29.xy, r29.xyxx, cb1[83].xyxx
                utof r29.z, r17.w
                mul r30.xyz, r26.zyzz, cb1[83].xyxx
                mul r30.xyz, r28.xyzx, r30.xyzx
                mul r31.xyz, r27.zyzz, cb1[83].xyxx
                mul r28.xyz, r28.xyzx, r31.xyzx
                sample_d_indexable(texture2darray)(float,float,float,float) r28.xyzw, r29.xyzx, t42.xyzw, s4, r30.xyzx, r28.xyzx
              else 
                ieq r15.w, r22.z, l(1)
                if_nz r15.w
                  and r15.w, r20.w, l(4095)
                  ubfe r16.w, l(12), l(12), r20.w
                  and r17.w, r21.w, l(1023)
                  utof r29.xz, r12.wwww
                  utof r29.y, r14.w
                  mad r30.xy, r22.xyxx, r29.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r30.zw, r29.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r30.xy, r30.zwzz, r30.xyxx
                  utof r31.x, r15.w
                  utof r31.y, r16.w
                  add r30.xy, r30.xyxx, r31.xyxx
                  mul r30.xy, r30.xyxx, cb1[83].zwzz
                  utof r30.z, r17.w
                  mul r31.xyz, r26.zyzz, cb1[83].zwzz
                  mul r31.xyz, r29.xyzx, r31.xyzx
                  mul r32.xyz, r27.zyzz, cb1[83].zwzz
                  mul r29.xyz, r29.xyzx, r32.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r28.xyzw, r30.xyzx, t43.xyzw, s4, r31.xyzx, r29.xyzx
                else 
                  mov r28.xyzw, l(1.000000,1.000000,1.000000,1.000000)
                endif 
              endif 
              mul r19.xyz, r19.xyzx, r28.xyzx
              mul r12.w, r19.w, r28.w
            else 
              mov r19.xyz, l(0,0,0,0)
              mov r12.w, l(0)
            endif 
            ne r14.w, r20.x, l(1.000000)
            add r15.w, r19.w, r12.w
            mad_sat r15.w, r15.w, r20.x, -r20.x
            movc r12.w, r14.w, r15.w, r12.w
            if_nz r22.w
              ubfe r14.w, l(4), l(24), r21.y
              ishl r14.w, l(1), r14.w
              ushr r15.w, r21.y, l(28)
              ishl r15.w, l(1), r15.w
              ieq r16.w, r22.w, l(2)
              if_nz r16.w
                and r16.w, r21.y, l(4095)
                ubfe r20.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r21.yyyw
                utof r28.xz, r14.wwww
                utof r28.y, r15.w
                mad r29.xy, r22.xyxx, r28.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                add r29.zw, r28.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                min r29.xy, r29.zwzz, r29.xyxx
                utof r30.x, r16.w
                utof r30.y, r20.x
                add r29.xy, r29.xyxx, r30.xyxx
                mul r29.xy, r29.xyxx, cb1[84].xyxx
                utof r29.z, r20.w
                mul r30.xyz, r26.zyzz, cb1[84].xyxx
                mul r30.xyz, r28.xyzx, r30.xyzx
                mul r31.xyz, r27.zyzz, cb1[84].xyxx
                mul r28.xyz, r28.xyzx, r31.xyzx
                sample_d_indexable(texture2darray)(float,float,float,float) r16.w, r29.xyzx, t45.yzwx, s4, r30.xyzx, r28.xyzx
              else 
                ieq r17.w, r22.w, l(4)
                if_nz r17.w
                  and r17.w, r21.y, l(4095)
                  ubfe r20.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r21.yyyw
                  utof r28.xz, r14.wwww
                  utof r28.y, r15.w
                  mad r22.zw, r22.xxxy, r28.zzzy, l(0.000000, 0.000000, 0.500000, 0.500000)
                  add r29.xy, r28.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r22.zw, r22.zzzw, r29.xxxy
                  utof r29.x, r17.w
                  utof r29.yz, r20.xxwx
                  add r22.zw, r22.zzzw, r29.xxxy
                  mul r29.xy, r22.zwzz, cb1[83].xyxx
                  mul r30.xyz, r26.zyzz, cb1[83].xyxx
                  mul r30.xyz, r28.xyzx, r30.xyzx
                  mul r31.xyz, r27.zyzz, cb1[83].xyxx
                  mul r28.xyz, r28.xyzx, r31.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r16.w, r29.xyzx, t42.yzwx, s4, r30.xyzx, r28.xyzx
                else 
                  and r17.w, r21.y, l(4095)
                  ubfe r20.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r21.yyyw
                  utof r28.xz, r14.wwww
                  utof r28.y, r15.w
                  mad r22.zw, r22.xxxy, r28.zzzy, l(0.000000, 0.000000, 0.500000, 0.500000)
                  add r29.xy, r28.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r22.zw, r22.zzzw, r29.xxxy
                  utof r29.x, r17.w
                  utof r29.yz, r20.xxwx
                  add r22.zw, r22.zzzw, r29.xxxy
                  mul r29.xy, r22.zwzz, cb1[83].zwzz
                  mul r30.xyz, r26.zyzz, cb1[83].zwzz
                  mul r30.xyz, r28.xyzx, r30.xyzx
                  mul r31.xyz, r27.zyzz, cb1[83].zwzz
                  mul r28.xyz, r28.xyzx, r31.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r16.w, r29.xyzx, t43.yzwx, s4, r30.xyzx, r28.xyzx
                endif 
              endif 
              mad r28.xyz, r16.wwww, l(0.960000, 0.960000, 0.960000, 0.000000), l(0.040000, 0.040000, 0.040000, 0.000000)
              add_sat r14.w, -r16.w, l(1.000000)
              mul r19.xyz, r14.wwww, r19.xyzx
            else 
              mov r28.xyz, l(0.040000,0.040000,0.040000,0)
            endif 
            ushr r20.xy, r20.zyzz, l(16, 16, 0, 0)
            if_nz r20.x
              ieq r14.w, r20.x, l(2)
              if_nz r14.w
                ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r12.z, r12.z, l(112), t36.xxxx
                ubfe r20.zw, l(0, 0, 4, 12), l(0, 0, 24, 12), r21.zzzz
                ishl r14.w, l(1), r20.z
                ushr r15.w, r21.z, l(28)
                ishl r15.w, l(1), r15.w
                and r16.w, r21.z, l(4095)
                and r12.z, r12.z, l(1023)
                utof r29.xz, r14.wwww
                utof r29.y, r15.w
                mad r21.yz, r22.xxyx, r29.zzyz, l(0.000000, 0.500000, 0.500000, 0.000000)
                add r22.zw, r29.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                min r21.yz, r21.yyzy, r22.zzwz
                utof r30.x, r16.w
                utof r30.y, r20.w
                add r20.zw, r21.yyyz, r30.xxxy
                mul r30.xy, r20.zwzz, cb1[84].xyxx
                utof r30.z, r12.z
                mul r31.xyz, r26.zyzz, cb1[84].xyxx
                mul r31.xyz, r29.xyzx, r31.xyzx
                mul r32.xyz, r27.zyzz, cb1[84].xyxx
                mul r29.xyz, r29.xyzx, r32.xyzx
                sample_d_indexable(texture2darray)(float,float,float,float) r12.z, r30.xyzx, t45.yzxw, s4, r31.xyzx, r29.xyzx
              else 
                ieq r14.w, r20.x, l(6)
                movc r12.z, r14.w, l(0), l(1.000000)
              endif 
            else 
              mov r12.z, l(1.000000)
            endif 
            mul_sat r12.z, r12.z, l(0.76470590)
            if_nz r20.y
              ieq r14.w, r20.y, l(3)
              if_nz r14.w
                ubfe r20.xyz, l(4, 12, 10, 0), l(24, 12, 10, 0), r21.xxwx
                ishl r14.w, l(1), r20.x
                ushr r15.w, r21.x, l(28)
                ishl r15.w, l(1), r15.w
                and r16.w, r21.x, l(4095)
                utof r21.xz, r14.wwww
                utof r21.y, r15.w
                mad r20.xw, r22.xxxy, r21.xxxy, l(0.500000, 0.000000, 0.000000, 0.500000)
                add r22.xy, r21.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                min r20.xw, r20.xxxw, r22.xxxy
                utof r22.x, r16.w
                utof r22.yz, r20.yyzy
                add r20.xy, r20.xwxx, r22.xyxx
                mul r22.xy, r20.xyxx, cb1[84].zwzz
                mul r20.xyz, r26.xyzx, cb1[84].zwzz
                mul r20.xyz, r21.xyzx, r20.xyzx
                mul r26.xyz, r27.xyzx, cb1[84].zwzz
                mul r21.xyz, r21.xyzx, r26.xyzx
                sample_d_indexable(texture2darray)(float,float,float,float) r20.xyz, r22.xyzx, t44.xyzw, s4, r20.xyzx, r21.xyzx
              else 
                mov r20.xyz, l(0.500000,0.500000,1.000000,0)
              endif 
              mad r20.xy, r20.xyxx, l(1.99218750, 1.99218750, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
              dp2 r14.w, r20.xyxx, r20.xyxx
              add r14.w, -r14.w, l(1.000000)
              max r14.w, r14.w, l(0.000000)
              sqrt r14.w, r14.w
              mul r15.w, r20.z, r20.z
              mul r15.w, r15.w, l(0.33333334)
              min r15.w, r15.w, l(1.000000)
              dp3 r16.w, r25.xyzx, r25.xyzx
              rsq r16.w, r16.w
              mul r21.xyz, r16.wwww, r25.xyzx
              dp3 r16.w, -r24.xyzx, -r24.xyzx
              rsq r16.w, r16.w
              mul r22.xyz, r16.wwww, -r24.xyzx
              mul r23.xyz, r2.wwww, r23.xyzx
              mul r21.xyz, r2.wwww, r21.xyzx
              mul r22.xyz, r2.wwww, r22.xyzx
              mul r16.w, r12.z, l(-17.000000)
              exp r16.w, r16.w
              add r15.w, r15.w, r16.w
              log r15.w, r15.w
              mul r15.w, r15.w, l(-0.05882353)
              max r12.z, r15.w, l(0.000000)
              mul r20.yzw, r20.yyyy, r22.xxyz
              mad r20.xyz, r21.xyzx, r20.xxxx, r20.yzwy
              mad r20.xyz, r23.xyzx, r14.wwww, r20.xyzx
              dp3 r14.w, r20.xyzx, r20.xyzx
              rsq r14.w, r14.w
              mul r20.xyz, r14.wwww, r20.xyzx
              add r14.w, -r12.w, l(1.000000)
              mul r21.xyz, r14.wwww, r17.xyzx
              mad r17.xyz, r20.xyzx, r12.wwww, r21.xyzx
            endif 
            add r14.w, -r12.w, l(1.000000)
            mul r20.xyz, r13.xyzx, r14.wwww
            mad r13.xyz, r19.xyzx, r12.wwww, r20.xyzx
            mul r19.xyz, r14.wwww, r18.xyzx
            mad r18.xyz, r28.xyzx, r12.wwww, r19.xyzx
            mad r8.w, r8.w, r14.w, r12.w
            mul r14.w, r9.w, r14.w
            mad r9.w, r12.z, r12.w, r14.w
          endif 
        endif 
      endif 
    endif 
  endloop 
  mov r14.xyz, r13.xyzx
  mov r15.xyz, r17.xyzx
  mov r16.xyz, r18.xyzx
  mov r4.w, r8.w
  mov r5.w, r9.w
  iadd r6.w, r6.w, l(32)
endloop 
mov_sat r4.w, r4.w
add r1.z, -r4.w, l(1.000000)
mad r0.xyz, r0.xyzx, r1.zzzz, r14.xyzx
mad r0.w, r0.w, r1.z, r4.w
mad r6.xyz, r6.xyzx, r1.zzzz, r15.xyzx
dp3 r1.w, r6.xyzx, r6.xyzx
rsq r1.w, r1.w
mul r6.xyz, r1.wwww, r6.xyzx
mad r8.y, r1.x, r1.z, r5.w
mad r2.xyz, r2.xyzx, r1.zzzz, r16.xyzx
lt r1.x, l(0.500000), cb0[19].x
if_nz r1.x
  mul r1.x, cb0[11].w, cb0[11].z
  mul r1.w, r1.x, cb0[12].x
  mul r2.w, r1.w, cb1[69].w
  ge r2.w, r2.w, -r2.w
  movc r2.w, r2.w, r1.w, -r1.w
  div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
  mul r3.w, r3.w, cb1[69].w
  frc r3.w, r3.w
  mul r2.w, r2.w, r3.w
  div r1.w, r2.w, r1.w
  mul r1.x, r1.x, r1.w
  round_ne r1.x, r1.x
  div r1.w, r1.x, cb0[11].w
  mul r2.w, r1.x, cb0[11].w
  ge r2.w, r2.w, -r2.w
  movc r2.w, r2.w, cb0[11].w, -cb0[11].w
  div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
  mul r1.x, r1.x, r3.w
  frc r1.x, r1.x
  mul r1.x, r1.x, r2.w
  round_z r1.x, r1.x
  add r1.x, r1.x, v2.x
  div r9.x, r1.x, cb0[11].w
  round_z r1.x, r1.w
  add r1.x, r1.x, v2.y
  div r9.y, r1.x, cb0[11].z
else 
  dp3 r1.x, -v7.xyzx, -v7.xyzx
  rsq r1.x, r1.x
  mul r12.xyz, r1.xxxx, -v7.xyzx
  dp3 r13.x, r12.xyzx, r4.xyzx
  dp3 r13.y, r12.xyzx, r5.xyzx
  dp3 r1.x, r12.xyzx, r3.xyzx
  lt r1.w, l(0.000000), r1.x
  div r7.zw, -r13.xxxy, r1.xxxx
  and r1.xw, r1.wwww, r7.zzzw
  add r7.zw, v2.xxxy, l(0.000000, 0.000000, -0.500000, -0.500000)
  add r2.w, cb0[15].y, l(0.000010)
  mul r1.xw, r1.xxxw, r2.wwww
  mul r1.xw, r1.xxxw, cb0[13].zzzw
  mad r1.xw, r7.zzzw, cb0[13].zzzw, r1.xxxw
  mad r1.xw, cb0[14].xxxy, cb0[13].zzzw, r1.xxxw
  mad r2.w, cb0[12].z, cb1[69].w, l(1.000000)
  mul r2.w, r2.w, cb0[12].y
  mul r2.w, r2.w, l(0.01745329)
  sincos r12.x, r13.x, r2.w
  mov r13.y, r13.x
  mov r13.z, r12.x
  dp2 r14.x, r13.yzyy, r1.xwxx
  mov r13.x, -r12.x
  dp2 r14.y, r13.xyxx, r1.xwxx
  mul r1.xw, cb0[13].xxxy, cb1[69].wwww
  mad r1.xw, r1.xxxw, cb0[13].zzzw, r14.xxxy
  mul r2.w, cb0[15].x, cb1[69].w
  sincos null, r2.w, r2.w
  mad r2.w, r2.w, l(0.500000), l(0.500000)
  add r2.w, -r2.w, l(1.000000)
  add r3.w, -cb0[14].z, cb0[14].w
  mad r2.w, r2.w, r3.w, cb0[14].z
  div r1.xw, r1.xxxw, r2.wwww
  add r1.xw, r1.xxxw, l(0.500000, 0.000000, 0.000000, 0.500000)
  mov_sat r7.zw, r1.xxxw
  movc r9.xy, cb0[15].zwzz, r7.zwzz, r1.xwxx
endif 
sample_indexable(texture2d)(float,float,float,float) r9.xyzw, r9.xyxx, t25.xyzw, s1
mul r9.xyzw, r9.xyzw, cb0[18].xyzw
mul r9.xyz, r9.wwww, r9.xyzx
add r1.x, v3.y, v3.x
add r1.x, r1.x, v3.z
add r1.w, r1.x, cb0[16].y
frc r1.w, r1.w
mad r12.y, cb1[69].w, cb0[16].z, r1.w
mov r12.x, cb0[16].x
sample_l_indexable(texture2d)(float,float,float,float) r1.w, r12.xyxx, t24.yzwx, s5, l(0.000000)
log r1.w, |r1.w|
mul r1.w, r1.w, cb0[17].z
exp r1.w, r1.w
add r2.w, -cb0[17].x, cb0[17].y
mad r1.w, r1.w, r2.w, cb0[17].x
mul r9.xyz, r1.wwww, r9.xyzx
lt r1.w, l(0.500000), cb0[24].z
if_nz r1.w
  mul r1.w, cb0[20].w, cb0[21].x
  mul r2.w, r1.w, cb0[21].y
  mul r3.w, r2.w, cb1[69].w
  ge r3.w, r3.w, -r3.w
  movc r3.w, r3.w, r2.w, -r2.w
  div r4.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  mul r4.w, r4.w, cb1[69].w
  frc r4.w, r4.w
  mul r3.w, r3.w, r4.w
  div r2.w, r3.w, r2.w
  mul r1.w, r1.w, r2.w
  round_ne r1.w, r1.w
  div r2.w, r1.w, cb0[21].x
  mul r3.w, r1.w, cb0[21].x
  ge r3.w, r3.w, -r3.w
  movc r3.w, r3.w, cb0[21].x, -cb0[21].x
  div r4.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  mul r1.w, r1.w, r4.w
  frc r1.w, r1.w
  mul r1.w, r1.w, r3.w
  round_z r1.w, r1.w
  add r1.w, r1.w, v2.x
  div r12.x, r1.w, cb0[21].x
  round_z r1.w, r2.w
  add r1.w, r1.w, v2.y
  div r12.y, r1.w, cb0[20].w
else 
  dp3 r1.w, -v7.xyzx, -v7.xyzx
  rsq r1.w, r1.w
  mul r13.xyz, r1.wwww, -v7.xyzx
  dp3 r14.x, r13.xyzx, r4.xyzx
  dp3 r14.y, r13.xyzx, r5.xyzx
  dp3 r1.w, r13.xyzx, r3.xyzx
  lt r2.w, l(0.000000), r1.w
  div r7.zw, -r14.xxxy, r1.wwww
  and r7.zw, r2.wwww, r7.zzzw
  add r8.zw, v2.xxxy, l(0.000000, 0.000000, -0.500000, -0.500000)
  add r1.w, cb0[24].y, l(0.000010)
  mul r7.zw, r1.wwww, r7.zzzw
  mul r7.zw, r7.zzzw, cb0[22].zzzw
  mad r7.zw, r8.zzzw, cb0[22].zzzw, r7.zzzw
  mad r7.zw, cb0[23].xxxy, cb0[22].zzzw, r7.zzzw
  mad r1.w, cb0[21].w, cb1[69].w, l(1.000000)
  mul r1.w, r1.w, cb0[21].z
  mul r1.w, r1.w, l(0.01745329)
  sincos r13.x, r14.x, r1.w
  mov r14.y, r14.x
  mov r14.z, r13.x
  dp2 r15.x, r14.yzyy, r7.zwzz
  mov r14.x, -r13.x
  dp2 r15.y, r14.xyxx, r7.zwzz
  mul r7.zw, cb0[22].xxxy, cb1[69].wwww
  mad r7.zw, r7.zzzw, cb0[22].zzzw, r15.xxxy
  mul r1.w, cb0[24].x, cb1[69].w
  sincos null, r1.w, r1.w
  mad r1.w, r1.w, l(0.500000), l(0.500000)
  add r1.w, -r1.w, l(1.000000)
  add r2.w, -cb0[23].z, cb0[23].w
  mad r1.w, r1.w, r2.w, cb0[23].z
  div r7.zw, r7.zzzw, r1.wwww
  add r7.zw, r7.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
  mov_sat r8.zw, r7.zzzw
  movc r12.x, cb0[24].w, r8.z, r7.z
  movc r12.y, cb0[25].x, r8.w, r7.w
endif 
sample_indexable(texture2d)(float,float,float,float) r12.xyzw, r12.xyxx, t26.xyzw, s1
mul r12.xyz, r12.xyzx, cb0[20].xyzx
mul r1.w, r12.w, cb0[18].w
mul r12.xyz, r1.wwww, r12.xyzx
add r1.w, r1.x, cb0[25].z
frc r1.w, r1.w
mad r13.y, cb1[69].w, cb0[25].w, r1.w
mov r13.x, cb0[25].y
sample_l_indexable(texture2d)(float,float,float,float) r1.w, r13.xyxx, t24.yzwx, s5, l(0.000000)
log r1.w, |r1.w|
mul r1.w, r1.w, cb0[26].z
exp r1.w, r1.w
add r2.w, -cb0[26].x, cb0[26].y
mad r1.w, r1.w, r2.w, cb0[26].x
mul r12.xyz, r1.wwww, r12.xyzx
add r1.w, -r12.w, l(1.000000)
mad r9.xyz, r9.xyzx, r1.wwww, r12.xyzx
lt r1.w, l(0.500000), cb0[31].z
if_nz r1.w
  mul r1.w, cb0[27].w, cb0[28].x
  mul r2.w, r1.w, cb0[28].y
  mul r3.w, r2.w, cb1[69].w
  ge r3.w, r3.w, -r3.w
  movc r3.w, r3.w, r2.w, -r2.w
  div r4.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  mul r4.w, r4.w, cb1[69].w
  frc r4.w, r4.w
  mul r3.w, r3.w, r4.w
  div r2.w, r3.w, r2.w
  mul r1.w, r1.w, r2.w
  round_ne r1.w, r1.w
  div r2.w, r1.w, cb0[28].x
  mul r3.w, r1.w, cb0[28].x
  ge r3.w, r3.w, -r3.w
  movc r3.w, r3.w, cb0[28].x, -cb0[28].x
  div r4.w, l(1.000000, 1.000000, 1.000000, 1.000000), r3.w
  mul r1.w, r1.w, r4.w
  frc r1.w, r1.w
  mul r1.w, r1.w, r3.w
  round_z r1.w, r1.w
  add r1.w, r1.w, v2.x
  div r12.x, r1.w, cb0[28].x
  round_z r1.w, r2.w
  add r1.w, r1.w, v2.y
  div r12.y, r1.w, cb0[27].w
else 
  dp3 r1.w, -v7.xyzx, -v7.xyzx
  rsq r1.w, r1.w
  mul r13.xyz, r1.wwww, -v7.xyzx
  dp3 r4.x, r13.xyzx, r4.xyzx
  dp3 r4.y, r13.xyzx, r5.xyzx
  dp3 r1.w, r13.xyzx, r3.xyzx
  lt r2.w, l(0.000000), r1.w
  div r3.xy, -r4.xyxx, r1.wwww
  and r3.xy, r2.wwww, r3.xyxx
  add r3.zw, v2.xxxy, l(0.000000, 0.000000, -0.500000, -0.500000)
  add r1.w, cb0[31].y, l(0.000010)
  mul r3.xy, r1.wwww, r3.xyxx
  mul r3.xy, r3.xyxx, cb0[29].zwzz
  mad r3.xy, r3.zwzz, cb0[29].zwzz, r3.xyxx
  mad r3.xy, cb0[30].xyxx, cb0[29].zwzz, r3.xyxx
  mad r1.w, cb0[28].w, cb1[69].w, l(1.000000)
  mul r1.w, r1.w, cb0[28].z
  mul r1.w, r1.w, l(0.01745329)
  sincos r4.x, r5.x, r1.w
  mov r5.y, r5.x
  mov r5.z, r4.x
  dp2 r13.x, r5.yzyy, r3.xyxx
  mov r5.x, -r4.x
  dp2 r13.y, r5.xyxx, r3.xyxx
  mul r3.xy, cb0[29].xyxx, cb1[69].wwww
  mad r3.xy, r3.xyxx, cb0[29].zwzz, r13.xyxx
  mul r1.w, cb0[31].x, cb1[69].w
  sincos null, r1.w, r1.w
  mad r1.w, r1.w, l(0.500000), l(0.500000)
  add r1.w, -r1.w, l(1.000000)
  add r2.w, -cb0[30].z, cb0[30].w
  mad r1.w, r1.w, r2.w, cb0[30].z
  div r3.xy, r3.xyxx, r1.wwww
  add r3.xy, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  mov_sat r3.zw, r3.xxxy
  movc r12.x, cb0[31].w, r3.z, r3.x
  movc r12.y, cb0[32].x, r3.w, r3.y
endif 
sample_indexable(texture2d)(float,float,float,float) r3.xyzw, r12.xyxx, t29.xyzw, s1
mul r3.xyz, r3.xyzx, cb0[27].xyzx
mul r1.w, r3.w, cb0[18].w
mul r3.xyz, r1.wwww, r3.xyzx
add r1.x, r1.x, cb0[32].z
frc r1.x, r1.x
mad r4.y, cb1[69].w, cb0[32].w, r1.x
mov r4.x, cb0[32].y
sample_l_indexable(texture2d)(float,float,float,float) r1.x, r4.xyxx, t24.xyzw, s5, l(0.000000)
log r1.x, |r1.x|
mul r1.x, r1.x, cb0[33].z
exp r1.x, r1.x
add r1.w, -cb0[33].x, cb0[33].y
mad r1.x, r1.x, r1.w, cb0[33].x
mul r3.xyz, r1.xxxx, r3.xyzx
add r1.x, -r3.w, l(1.000000)
mad r3.xyz, r9.xyzx, r1.xxxx, r3.xyzx
mul r3.xyz, r1.zzzz, r3.xyzx
dp3 r1.x, -v7.xyzx, -v7.xyzx
rsq r1.x, r1.x
mul r4.xyz, r1.xxxx, -v7.xyzx
ine r1.z, cb1[92].x, l(0)
utof r5.xy, r7.xyxx
dp2 r1.w, r5.yxyy, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r1.w, r1.w
mul r1.w, r1.w, l(52.982918)
frc r1.w, r1.w
mad r1.w, r1.w, l(6.28318548), cb1[70].w
sincos r7.x, r9.x, r1.w
dp2 r1.w, r5.xyxx, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r1.w, r1.w
mul r1.w, r1.w, l(52.982918)
frc r1.w, r1.w
mad r1.w, r1.w, l(6.28318548), cb1[70].w
sincos r5.x, r12.x, r1.w
dp3_sat r8.x, r6.xyzx, r4.xyzx
dp3 r1.w, -r4.xyzx, r6.xyzx
add r1.w, r1.w, r1.w
mad r13.xyz, r6.xyzx, -r1.wwww, -r4.xyzx
mul r1.w, r8.y, l(17.000000)
exp r1.w, r1.w
add r1.w, r1.w, l(2.000000)
div r1.w, l(2.000000), r1.w
sqrt r2.w, r1.w
add r4.w, -r8.y, l(1.000000)
mul r5.y, r4.w, l(5.000000)
mad r5.z, r4.w, l(5.000000), l(-2.500000)
mul_sat r5.z, r5.z, l(0.400000)
mul r5.z, r5.z, l(100.000000)
mad r7.zw, -r4.wwww, l(0.000000, 0.000000, 10.000000, 5.000000), l(0.000000, 0.000000, 6.857410, 7.085000)
exp r5.w, r7.z
mul r5.w, r5.w, r8.x
mul r5.w, r5.w, l(9.136810)
mul r7.z, r4.w, r5.y
mad r7.z, -r7.z, l(2.015905), r7.w
exp r7.z, r7.z
mul r7.z, r7.z, r8.x
mul r7.z, r7.z, l(9.708090)
max r5.w, r5.w, r7.z
max r5.w, r5.w, l(1.268160)
mov r14.xy, l(0,0,0,0)
mov r15.w, l(0)
mov r16.yz, l(0,0,1.000000,0)
mov r17.xy, l(0,0,0,0)
mov r18.xy, l(0,0,0,0)
mov r19.xy, l(0,0,0,0)
mov r20.x, l(1.000000)
mov r21.xyzw, l(0,0,0,0)
mov r22.yzw, l(0,0,0,0)
mov r7.zw, l(0,0,0,0)
loop 
  uge r8.z, r7.w, cb2[0].y
  breakc_nz r8.z
  ushr r14.z, r7.w, l(5)
  iadd r15.xyz, r11.xyzx, r14.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r8.z, r15.xyzw, t7.yzxw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r23.xyzw, r7.w, l(0), t15.wxyz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r7.w, l(16), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r7.w, l(32), t15.yxwz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r7.w, l(48), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r7.w, l(64), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r7.w, l(80), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r12.yz, r7.w, l(96), t15.xxyx
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r7.w, l(116), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r7.w, l(132), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r7.w, l(148), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r7.w, l(164), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r7.w, l(180), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r7.w, l(196), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xy, r7.w, l(212), t15.xyxx
  add r15.xyz, -r23.yzwy, v7.xyzx
  dp3 r8.w, r15.xyzx, r15.xyzx
  sqrt r8.w, r8.w
  ge r8.w, cb2[54].y, r8.w
  and r9.w, r29.y, l(0x0000ffff)
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r9.w, l(0), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r9.w, l(16), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r38.xyzw, r9.w, l(32), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r39.xyzw, r9.w, l(48), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r40.xyzw, r9.w, l(64), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r41.xyzw, r9.w, l(80), t16.xyzw
  dp3 r11.w, r36.xyzx, r15.xyzx
  add_sat r11.w, r36.w, r11.w
  dp3 r12.w, r37.xyzx, r15.xyzx
  add_sat r12.w, r37.w, r12.w
  mul r11.w, r11.w, r12.w
  dp3 r12.w, r38.xyzx, r15.xyzx
  add_sat r12.w, r38.w, r12.w
  mul r11.w, r11.w, r12.w
  dp3 r12.w, r39.xyzx, r15.xyzx
  add_sat r12.w, r39.w, r12.w
  mul r11.w, r11.w, r12.w
  dp3 r12.w, r40.xyzx, r15.xyzx
  add_sat r12.w, r40.w, r12.w
  mul r11.w, r11.w, r12.w
  dp3 r12.w, r41.xyzx, r15.xyzx
  add_sat r12.w, r41.w, r12.w
  mul r16.x, r11.w, r12.w
  and r11.w, r12.y, l(1)
  movc r14.zw, r11.wwww, r16.xxxy, r16.zzzx
  mov r36.xy, r29.zwzz
  mov r36.z, r30.z
  dp3 r11.w, r13.xyzx, r36.xyzx
  dp3 r12.w, r15.xyzx, r36.xyzx
  add r12.w, -r30.w, r12.w
  ge r16.x, r12.w, l(0.000000)
  max r12.w, r5.z, |r12.w|
  movc r12.w, r16.x, r12.w, -r12.w
  max r11.w, -r11.w, l(0.00000010)
  div r11.w, r12.w, r11.w
  min r11.w, |r11.w|, l(131072.000000)
  mov r30.z, r31.z
  dp3 r12.w, r13.xyzx, r30.xyzx
  dp3 r16.x, r15.xyzx, r30.xyzx
  add r16.x, -r31.w, r16.x
  ge r16.w, r16.x, l(0.000000)
  max r16.x, r5.z, |r16.x|
  movc r16.x, r16.w, r16.x, -r16.x
  max r12.w, -r12.w, l(0.00000010)
  div r12.w, r16.x, r12.w
  min r11.w, r11.w, |r12.w|
  mov r31.z, r32.z
  dp3 r12.w, r13.xyzx, r31.xyzx
  dp3 r16.x, r15.xyzx, r31.xyzx
  add r16.x, -r32.w, r16.x
  ge r16.w, r16.x, l(0.000000)
  max r16.x, r5.z, |r16.x|
  movc r16.x, r16.w, r16.x, -r16.x
  max r12.w, -r12.w, l(0.00000010)
  div r12.w, r16.x, r12.w
  min r11.w, r11.w, |r12.w|
  mov r32.z, r33.z
  dp3 r12.w, r13.xyzx, r32.xyzx
  dp3 r16.x, r15.xyzx, r32.xyzx
  add r16.x, -r33.w, r16.x
  ge r16.w, r16.x, l(0.000000)
  max r16.x, r5.z, |r16.x|
  movc r16.x, r16.w, r16.x, -r16.x
  max r12.w, -r12.w, l(0.00000010)
  div r12.w, r16.x, r12.w
  min r11.w, r11.w, |r12.w|
  mov r33.z, r34.x
  dp3 r12.w, r13.xyzx, r33.xyzx
  dp3 r16.x, r15.xyzx, r33.xyzx
  add r16.x, -r34.y, r16.x
  ge r16.w, r16.x, l(0.000000)
  max r16.x, r5.z, |r16.x|
  movc r16.x, r16.w, r16.x, -r16.x
  max r12.w, -r12.w, l(0.00000010)
  div r12.w, r16.x, r12.w
  min r11.w, r11.w, |r12.w|
  mov r35.zw, r34.zzzw
  dp3 r12.w, r13.zxyz, r35.xzwx
  dp3 r16.x, r15.zxyz, r35.xzwx
  add r16.x, -r35.y, r16.x
  ge r16.w, r16.x, l(0.000000)
  max r16.x, r5.z, |r16.x|
  movc r16.x, r16.w, r16.x, -r16.x
  max r12.w, -r12.w, l(0.00000010)
  div r12.w, r16.x, r12.w
  min r11.w, r11.w, |r12.w|
  mov r30.x, r26.w
  mov r30.yz, r27.zzwz
  add r30.xyz, r15.xyzx, r30.xyzx
  mad r30.xyz, r13.xyzx, r11.wwww, r30.xyzx
  dp3 r12.w, r30.xyzx, r30.xyzx
  sqrt r12.w, r12.w
  div r11.w, r11.w, r12.w
  add r11.w, r11.w, r11.w
  sqrt r11.w, r11.w
  mad r11.w, r4.w, l(5.000000), r11.w
  add r11.w, r11.w, l(-0.844800)
  mov r23.y, r24.z
  mov r23.z, r25.x
  dp3 r31.x, r30.xyzx, r23.xyzx
  mov r32.xy, r24.xwxx
  mov r32.z, r25.w
  dp3 r31.y, r30.xyzx, r32.xyzx
  mov r25.x, r24.y
  dp3 r31.z, r30.xyzx, r25.xyzx
  ubfe r16.xw, l(6, 0, 0, 9), l(25, 0, 0, 16), r29.yyyy
  utof r31.w, r16.w
  sample_l_indexable(texturecubearray)(float,float,float,float) r24.xyz, r31.xyzw, t8.xyzw, s2, r11.w
  and r29.yzw, r24.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
  ieq r29.yzw, r29.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
  or r11.w, r29.z, r29.y
  or r11.w, r29.w, r11.w
  movc r24.xyz, r11.wwww, l(1.000000,1.000000,0,0), r24.xyzx
  dp3 r30.x, r15.xyzx, r23.xyzx
  dp3 r30.y, r15.xyzx, r32.xyzx
  dp3 r30.z, r15.xyzx, r25.xyzx
  mad_sat r26.xyz, r30.xyzx, r26.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mov r27.z, r28.x
  mad r26.xyz, r26.xyzx, r27.xyzx, r28.yzwy
  dp3 r31.x, r6.xyzx, r23.xyzx
  dp3 r31.y, r6.xyzx, r32.xyzx
  dp3 r31.z, r6.xyzx, r25.xyzx
  lt r23.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r31.xyzx
  movc r17.z, r23.x, l(0), l(0.500000)
  add r25.xyz, r17.xyzx, r26.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r25.xyz, r25.xyzx, t17.xyzw, s4, l(0.000000)
  movc r18.z, r23.y, l(0), l(0.500000)
  add r23.xyw, r18.xyxz, r26.xyxz
  sample_l_indexable(texture3d)(float,float,float,float) r23.xyw, r23.xywx, t18.xywz, s4, l(0.000000)
  movc r19.z, r23.z, l(0), l(0.500000)
  add r26.xyz, r19.xyzx, r26.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r26.xyz, r26.xyzx, t19.xyzw, s4, l(0.000000)
  mul r27.xyz, r31.xyzx, r31.xyzx
  sample_l_indexable(texturecubearray)(float,float,float,float) r28.xyz, r31.xyzw, t8.xyzw, s2, l(6.000000)
  and r29.yzw, r28.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
  ieq r29.yzw, r29.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
  or r11.w, r29.z, r29.y
  or r11.w, r29.w, r11.w
  movc r28.xyz, r11.wwww, l(1.000000,1.000000,0,0), r28.xyzx
  mov r30.xyzw, r21.xyzw
  mov r29.yzw, r22.yyzw
  mov r11.w, r7.z
  mov r12.w, r8.z
  loop 
    breakc_z r12.w
    firstbit_lo r16.w, r12.w
    ishl r16.w, l(1), r16.w
    and r17.z, r12.w, r16.w
    if_nz r17.z
      not r16.w, r16.w
      and r12.w, r12.w, r16.w
      if_nz r8.w
        mov r16.w, r12.y
        mov r31.xy, r14.zwzz
        mov r17.z, l(1)
        loop 
          ige r17.w, r17.z, r16.x
          breakc_nz r17.w
          iadd r17.w, r9.w, r17.z
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r17.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r17.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r17.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r17.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r17.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r17.w, l(80), t16.xyzw
          dp3 r17.w, r32.xyzx, r15.xyzx
          add_sat r17.w, r32.w, r17.w
          mul r17.w, r17.w, r31.x
          dp3 r18.z, r33.xyzx, r15.xyzx
          add_sat r18.z, r33.w, r18.z
          mul r17.w, r17.w, r18.z
          dp3 r18.z, r34.xyzx, r15.xyzx
          add_sat r18.z, r34.w, r18.z
          mul r17.w, r17.w, r18.z
          dp3 r18.z, r35.xyzx, r15.xyzx
          add_sat r18.z, r35.w, r18.z
          mul r17.w, r17.w, r18.z
          dp3 r18.z, r36.xyzx, r15.xyzx
          add_sat r18.z, r36.w, r18.z
          mul r17.w, r17.w, r18.z
          dp3 r18.z, r37.xyzx, r15.xyzx
          add_sat r18.z, r37.w, r18.z
          mul r31.x, r17.w, r18.z
          ushr r18.w, r16.w, l(2)
          ubfe r19.z, l(1), l(2), r16.w
          and r19.w, r18.w, l(2)
          max r20.z, r31.x, r31.y
          mad r17.w, -r17.w, r18.z, l(1.000000)
          mul r17.w, r17.w, r31.y
          movc r20.y, r19.w, r17.w, r20.z
          movc r31.xy, r19.zzzz, r31.xyxx, r20.xyxx
          iadd r17.z, r17.z, l(1)
          mov r16.w, r18.w
        endloop 
        mov_sat r31.y, r31.y
        mul r16.w, r12.z, r31.y
        lt r17.z, l(0.000000), r16.w
        if_nz r17.z
          mad r32.z, r31.y, r12.z, r29.w
          mul r16.w, r29.x, r16.w
          mul r20.yzw, r16.wwww, r27.xxyz
          mul r31.xzw, r20.zzzz, r23.xxyw
          mad r31.xzw, r25.xxyz, r20.yyyy, r31.xxzw
          mad r20.yzw, r26.xxyz, r20.wwww, r31.xxzw
          mul r31.xzw, r28.xxyz, r20.yyzw
          dp3 r17.z, r31.xzwx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r33.xyz, r20.yzwy, r28.xyzx, r30.xyzx
          mul r17.w, r5.w, r17.z
          mul r20.yzw, r16.wwww, r24.xxyz
          dp3 r16.w, r20.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r16.w, r5.w, r17.z, r16.w
          div r16.w, r17.w, r16.w
          mov r34.x, r30.w
          mov r34.yz, r29.yyzy
          mad r32.xyw, r20.zwzy, r16.wwww, r34.yzyx
          mov r33.w, r32.w
        else 
          mov r33.xyzw, r30.xyzw
          mov r32.xyz, r29.yzwy
        endif 
        mov r11.w, l(-1)
        mov r30.xyzw, r33.xyzw
        mov r29.yzw, r32.xxyz
        break 
      endif 
    endif 
  endloop 
  if_nz r11.w
    mov r21.xyzw, r30.xyzw
    mov r22.yzw, r29.yyzw
    mov r7.z, l(-1)
    break 
  endif 
  iadd r7.w, r7.w, l(32)
  mov r21.xyzw, r30.xyzw
  mov r22.yzw, r29.yyzw
  mov r7.z, r11.w
endloop 
if_z r7.z
  iadd r7.z, cb2[0].y, -cb2[58].x
  and r7.w, r7.z, l(-32)
  iadd r8.z, -r7.w, r7.z
  and r8.w, cb2[0].y, l(-32)
  iadd r9.w, -r8.w, cb2[0].y
  mov r14.xy, l(0,0,0,0)
  mov r15.w, l(0)
  mov r16.yz, l(0,0,1.000000,0)
  mov r17.xy, l(0,0,0,0)
  mov r18.x, l(1.000000)
  mov r19.xy, l(0,0,0,0)
  mov r20.xy, l(0,0,0,0)
  mov r23.xyzw, r21.xyzw
  mov r24.yzw, r22.yyzw
  mov r11.w, r7.w
  loop 
    uge r12.y, r11.w, cb2[0].y
    breakc_nz r12.y
    ushr r14.z, r11.w, l(5)
    iadd r15.xyz, r11.xyzx, r14.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r12.y, r15.xyzw, t7.yxzw
    ieq r12.z, r7.w, r11.w
    bfi r12.w, r8.z, l(0), l(0), r12.y
    movc r12.y, r12.z, r12.w, r12.y
    ieq r12.z, r8.w, r11.w
    ubfe r12.w, r9.w, l(0), r12.y
    movc r12.y, r12.z, r12.w, r12.y
    iadd r12.z, r11.w, cb2[0].x
    mov r25.xyzw, r23.xyzw
    mov r26.xyz, r24.yzwy
    mov r12.w, r12.y
    loop 
      breakc_z r12.w
      firstbit_lo r14.z, r12.w
      ishl r14.w, l(1), r14.z
      and r15.x, r12.w, r14.w
      if_nz r15.x
        xor r12.w, r12.w, r14.w
        iadd r14.w, r12.z, r14.z
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r27.xyzw, r14.w, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r15.xy, r14.w, l(16), t11.xyxx
        add r27.xyz, r27.xyzx, -v7.xyzx
        mov r15.z, r27.w
        lt r15.xyz, |r27.xyzx|, r15.zxyz
        and r14.w, r15.y, r15.x
        and r14.w, r15.z, r14.w
        if_nz r14.w
          iadd r14.z, r11.w, r14.z
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r14.z, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r15.xy, r14.z, l(96), t15.xyxx
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r14.z, l(116), t15.zwxy
          add r29.xyz, -r27.yzwy, v7.xyzx
          and r14.w, r28.w, l(0x0000ffff)
          ubfe r15.z, l(6), l(25), r28.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r14.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r14.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r14.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r14.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r14.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r14.w, l(80), t16.xyzw
          dp3 r16.w, r30.xyzx, r29.xyzx
          add_sat r16.w, r30.w, r16.w
          dp3 r17.w, r31.xyzx, r29.xyzx
          add_sat r17.w, r31.w, r17.w
          mul r16.w, r16.w, r17.w
          dp3 r17.w, r32.xyzx, r29.xyzx
          add_sat r17.w, r32.w, r17.w
          mul r16.w, r16.w, r17.w
          dp3 r17.w, r33.xyzx, r29.xyzx
          add_sat r17.w, r33.w, r17.w
          mul r16.w, r16.w, r17.w
          dp3 r17.w, r34.xyzx, r29.xyzx
          add_sat r17.w, r34.w, r17.w
          mul r16.w, r16.w, r17.w
          dp3 r17.w, r35.xyzx, r29.xyzx
          add_sat r17.w, r35.w, r17.w
          mul r16.x, r16.w, r17.w
          and r16.w, r15.x, l(1)
          movc r16.xw, r16.wwww, r16.xxxy, r16.zzzx
          mov r17.w, r15.x
          mov r30.xy, r16.xwxx
          mov r18.z, l(1)
          loop 
            ige r18.w, r18.z, r15.z
            breakc_nz r18.w
            iadd r18.w, r14.w, r18.z
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r18.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r18.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r18.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r18.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r18.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r18.w, l(80), t16.xyzw
            dp3 r18.w, r31.xyzx, r29.xyzx
            add_sat r18.w, r31.w, r18.w
            mul r18.w, r18.w, r30.x
            dp3 r19.w, r32.xyzx, r29.xyzx
            add_sat r19.w, r32.w, r19.w
            mul r18.w, r18.w, r19.w
            dp3 r19.w, r33.xyzx, r29.xyzx
            add_sat r19.w, r33.w, r19.w
            mul r18.w, r18.w, r19.w
            dp3 r19.w, r34.xyzx, r29.xyzx
            add_sat r19.w, r34.w, r19.w
            mul r18.w, r18.w, r19.w
            dp3 r19.w, r35.xyzx, r29.xyzx
            add_sat r19.w, r35.w, r19.w
            mul r18.w, r18.w, r19.w
            dp3 r19.w, r36.xyzx, r29.xyzx
            add_sat r19.w, r36.w, r19.w
            mul r30.x, r18.w, r19.w
            ushr r20.w, r17.w, l(2)
            ubfe r27.w, l(1), l(2), r17.w
            and r29.w, r20.w, l(2)
            max r30.z, r30.x, r30.y
            mad r18.w, -r18.w, r19.w, l(1.000000)
            mul r18.w, r18.w, r30.y
            movc r18.y, r29.w, r18.w, r30.z
            movc r30.xy, r27.wwww, r30.xyxx, r18.xyxx
            iadd r18.z, r18.z, l(1)
            mov r17.w, r20.w
          endloop 
          mov_sat r30.y, r30.y
          mul r14.w, r15.y, r30.y
          lt r15.x, l(0.000000), r14.w
          if_nz r15.x
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r14.z, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r14.z, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r14.z, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r14.z, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r14.z, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r14.z, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r14.z, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r14.z, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xyzw, r14.z, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r40.xyzw, r14.z, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r41.xy, r14.z, l(212), t15.xyxx
            mad r26.z, r30.y, r15.y, r26.z
            mul r14.z, r28.z, r14.w
            mov r28.z, r36.z
            dp3 r14.w, r13.xyzx, r28.xyzx
            dp3 r15.x, r29.xyzx, r28.xyzx
            add r15.x, -r36.w, r15.x
            ge r15.y, r15.x, l(0.000000)
            max r15.x, r5.z, |r15.x|
            movc r15.x, r15.y, r15.x, -r15.x
            max r14.w, -r14.w, l(0.00000010)
            div r14.w, r15.x, r14.w
            min r14.w, |r14.w|, l(131072.000000)
            mov r36.z, r37.z
            dp3 r15.x, r13.xyzx, r36.xyzx
            dp3 r15.y, r29.xyzx, r36.xyzx
            add r15.y, -r37.w, r15.y
            ge r15.z, r15.y, l(0.000000)
            max r15.y, r5.z, |r15.y|
            movc r15.y, r15.z, r15.y, -r15.y
            max r15.x, -r15.x, l(0.00000010)
            div r15.x, r15.y, r15.x
            min r14.w, r14.w, |r15.x|
            mov r37.z, r38.z
            dp3 r15.x, r13.xyzx, r37.xyzx
            dp3 r15.y, r29.xyzx, r37.xyzx
            add r15.y, -r38.w, r15.y
            ge r15.z, r15.y, l(0.000000)
            max r15.y, r5.z, |r15.y|
            movc r15.y, r15.z, r15.y, -r15.y
            max r15.x, -r15.x, l(0.00000010)
            div r15.x, r15.y, r15.x
            min r14.w, r14.w, |r15.x|
            mov r38.z, r39.z
            dp3 r15.x, r13.xyzx, r38.xyzx
            dp3 r15.y, r29.xyzx, r38.xyzx
            add r15.y, -r39.w, r15.y
            ge r15.z, r15.y, l(0.000000)
            max r15.y, r5.z, |r15.y|
            movc r15.y, r15.z, r15.y, -r15.y
            max r15.x, -r15.x, l(0.00000010)
            div r15.x, r15.y, r15.x
            min r14.w, r14.w, |r15.x|
            mov r39.z, r40.x
            dp3 r15.x, r13.xyzx, r39.xyzx
            dp3 r15.y, r29.xyzx, r39.xyzx
            add r15.y, -r40.y, r15.y
            ge r15.z, r15.y, l(0.000000)
            max r15.y, r5.z, |r15.y|
            movc r15.y, r15.z, r15.y, -r15.y
            max r15.x, -r15.x, l(0.00000010)
            div r15.x, r15.y, r15.x
            min r14.w, r14.w, |r15.x|
            mov r41.zw, r40.zzzw
            dp3 r15.x, r13.zxyz, r41.xzwx
            dp3 r15.y, r29.zxyz, r41.xzwx
            add r15.y, -r41.y, r15.y
            ge r15.z, r15.y, l(0.000000)
            max r15.y, r5.z, |r15.y|
            movc r15.y, r15.z, r15.y, -r15.y
            max r15.x, -r15.x, l(0.00000010)
            div r15.x, r15.y, r15.x
            min r14.w, r14.w, |r15.x|
            mov r15.x, r33.w
            mov r15.yz, r34.zzwz
            add r15.xyz, r29.xyzx, r15.xyzx
            mad r15.xyz, r13.xyzx, r14.wwww, r15.xyzx
            dp3 r16.x, r15.xyzx, r15.xyzx
            sqrt r16.x, r16.x
            div r14.w, r14.w, r16.x
            add r14.w, r14.w, r14.w
            sqrt r14.w, r14.w
            mad r14.w, r4.w, l(5.000000), r14.w
            add r14.w, r14.w, l(-0.844800)
            mov r27.y, r31.z
            mov r27.z, r32.x
            dp3 r36.x, r15.xyzx, r27.xyzx
            mov r28.xy, r31.xwxx
            mov r28.z, r32.w
            dp3 r36.y, r15.xyzx, r28.xyzx
            mov r32.x, r31.y
            dp3 r36.z, r15.xyzx, r32.xyzx
            ubfe r15.x, l(9), l(16), r28.w
            utof r36.w, r15.x
            sample_l_indexable(texturecubearray)(float,float,float,float) r15.xyz, r36.xyzw, t8.xyzw, s2, r14.w
            and r18.yzw, r15.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
            ieq r18.yzw, r18.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
            or r14.w, r18.z, r18.y
            or r14.w, r18.w, r14.w
            movc r15.xyz, r14.wwww, l(1.000000,1.000000,0,0), r15.xyzx
            dp3 r31.x, r29.xyzx, r27.xyzx
            dp3 r31.y, r29.xyzx, r28.xyzx
            dp3 r31.z, r29.xyzx, r32.xyzx
            mad_sat r18.yzw, r31.xxyz, r33.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
            mov r34.z, r35.x
            mad r18.yzw, r18.yyzw, r34.xxyz, r35.yyzw
            dp3 r36.x, r6.xyzx, r27.xyzx
            dp3 r36.y, r6.xyzx, r28.xyzx
            dp3 r36.z, r6.xyzx, r32.xyzx
            lt r27.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r36.xyzx
            movc r17.z, r27.x, l(0), l(0.500000)
            add r28.xyz, r17.xyzx, r18.yzwy
            sample_l_indexable(texture3d)(float,float,float,float) r28.xyz, r28.xyzx, t17.xyzw, s4, l(0.000000)
            mul r29.xyz, r36.xyzx, r36.xyzx
            mul r29.xyz, r14.zzzz, r29.xyzx
            movc r19.z, r27.y, l(0), l(0.500000)
            add r27.xyw, r18.yzyw, r19.xyxz
            sample_l_indexable(texture3d)(float,float,float,float) r27.xyw, r27.xywx, t18.xywz, s4, l(0.000000)
            mul r27.xyw, r29.yyyy, r27.xyxw
            mad r27.xyw, r28.xyxz, r29.xxxx, r27.xyxw
            movc r20.z, r27.z, l(0), l(0.500000)
            add r18.yzw, r18.yyzw, r20.xxyz
            sample_l_indexable(texture3d)(float,float,float,float) r18.yzw, r18.yzwy, t19.wxyz, s4, l(0.000000)
            mad r18.yzw, r18.yyzw, r29.zzzz, r27.xxyw
            sample_l_indexable(texturecubearray)(float,float,float,float) r27.xyz, r36.xyzw, t8.xyzw, s2, l(6.000000)
            and r28.xyz, r27.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
            ieq r28.xyz, r28.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
            or r14.w, r28.y, r28.x
            or r14.w, r28.z, r14.w
            movc r27.xyz, r14.wwww, l(1.000000,1.000000,0,0), r27.xyzx
            mul r28.xyz, r18.yzwy, r27.xyzx
            dp3 r14.w, r28.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r25.xyz, r18.yzwy, r27.xyzx, r25.xyzx
            mul r16.x, r5.w, r14.w
            mul r15.xyz, r14.zzzz, r15.xyzx
            dp3 r14.z, r15.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r14.z, r5.w, r14.w, r14.z
            div r14.z, r16.x, r14.z
            mov r27.x, r25.w
            mov r27.yz, r26.xxyx
            mad r26.xyw, r15.yzyx, r14.zzzz, r27.yzyx
            mov r25.w, r26.w
          endif 
        endif 
      endif 
    endloop 
    mov r23.xyzw, r25.xyzw
    mov r24.yzw, r26.xxyz
    iadd r11.w, r11.w, l(32)
  endloop 
  lt r8.w, r24.w, l(1.000000)
  if_nz r8.w
    mov r14.xy, l(0,0,0,0)
    mov r15.w, l(0)
    mov r16.yz, l(0,0,1.000000,0)
    mov r17.xy, l(0,0,0,0)
    mov r18.x, l(1.000000)
    mov r19.xy, l(0,0,0,0)
    mov r20.xy, l(0,0,0,0)
    mov r25.x, r23.w
    mov r25.yzw, r24.yyzw
    mov r12.yzw, r23.xxyz
    mov r8.w, r24.w
    mov r9.w, l(0)
    loop 
      uge r11.w, r9.w, r7.z
      breakc_nz r11.w
      ushr r14.z, r9.w, l(5)
      iadd r15.xyz, r11.xyzx, r14.xyzx
      ld_indexable(texture2darray)(uint,uint,uint,uint) r11.w, r15.xyzw, t7.yzwx
      ieq r14.z, r7.w, r9.w
      ubfe r14.w, r8.z, l(0), r11.w
      movc r11.w, r14.z, r14.w, r11.w
      iadd r14.z, r9.w, cb2[0].x
      mov r26.xyzw, r25.xyzw
      mov r15.xyz, r12.yzwy
      mov r14.w, r8.w
      mov r16.w, r11.w
      loop 
        breakc_z r16.w
        firstbit_lo r17.w, r16.w
        ishl r18.z, l(1), r17.w
        and r18.w, r16.w, r18.z
        if_nz r18.w
          xor r16.w, r16.w, r18.z
          iadd r18.z, r14.z, r17.w
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r27.xyzw, r18.z, l(0), t11.xyzw
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r28.xy, r18.z, l(16), t11.xyxx
          add r27.xyz, r27.xyzx, -v7.xyzx
          mov r28.z, r27.w
          lt r27.xyz, |r27.xyzx|, r28.zxyz
          and r18.z, r27.y, r27.x
          and r18.z, r27.z, r18.z
          if_nz r18.z
            iadd r17.w, r9.w, r17.w
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r17.w, l(0), t15.wxyz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r18.zw, r17.w, l(96), t15.xxxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r17.w, l(116), t15.zwxy
            add r29.xyz, -r27.yzwy, v7.xyzx
            and r19.w, r28.w, l(0x0000ffff)
            ubfe r20.w, l(6), l(25), r28.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r19.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r19.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r19.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r19.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r19.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r19.w, l(80), t16.xyzw
            dp3 r22.w, r30.xyzx, r29.xyzx
            add_sat r22.w, r30.w, r22.w
            dp3 r27.w, r31.xyzx, r29.xyzx
            add_sat r27.w, r31.w, r27.w
            mul r22.w, r22.w, r27.w
            dp3 r27.w, r32.xyzx, r29.xyzx
            add_sat r27.w, r32.w, r27.w
            mul r22.w, r22.w, r27.w
            dp3 r27.w, r33.xyzx, r29.xyzx
            add_sat r27.w, r33.w, r27.w
            mul r22.w, r22.w, r27.w
            dp3 r27.w, r34.xyzx, r29.xyzx
            add_sat r27.w, r34.w, r27.w
            mul r22.w, r22.w, r27.w
            dp3 r27.w, r35.xyzx, r29.xyzx
            add_sat r27.w, r35.w, r27.w
            mul r16.x, r22.w, r27.w
            and r22.w, r18.z, l(1)
            movc r30.xy, r22.wwww, r16.xyxx, r16.zxzz
            mov r16.x, r18.z
            mov r31.xy, r30.xyxx
            mov r22.w, l(1)
            loop 
              ige r27.w, r22.w, r20.w
              breakc_nz r27.w
              iadd r27.w, r19.w, r22.w
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r27.w, l(0), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r27.w, l(16), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r27.w, l(32), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r27.w, l(48), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r27.w, l(64), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r27.w, l(80), t16.xyzw
              dp3 r27.w, r32.xyzx, r29.xyzx
              add_sat r27.w, r32.w, r27.w
              mul r27.w, r27.w, r31.x
              dp3 r29.w, r33.xyzx, r29.xyzx
              add_sat r29.w, r33.w, r29.w
              mul r27.w, r27.w, r29.w
              dp3 r29.w, r34.xyzx, r29.xyzx
              add_sat r29.w, r34.w, r29.w
              mul r27.w, r27.w, r29.w
              dp3 r29.w, r35.xyzx, r29.xyzx
              add_sat r29.w, r35.w, r29.w
              mul r27.w, r27.w, r29.w
              dp3 r29.w, r36.xyzx, r29.xyzx
              add_sat r29.w, r36.w, r29.w
              mul r27.w, r27.w, r29.w
              dp3 r29.w, r37.xyzx, r29.xyzx
              add_sat r29.w, r37.w, r29.w
              mul r31.x, r27.w, r29.w
              ushr r30.z, r16.x, l(2)
              ubfe r30.w, l(1), l(2), r16.x
              and r31.z, r30.z, l(2)
              max r31.w, r31.x, r31.y
              mad r27.w, -r27.w, r29.w, l(1.000000)
              mul r27.w, r27.w, r31.y
              movc r18.y, r31.z, r27.w, r31.w
              movc r31.xy, r30.wwww, r31.xyxx, r18.xyxx
              iadd r22.w, r22.w, l(1)
              mov r16.x, r30.z
            endloop 
            add_sat r16.x, -r14.w, r31.y
            mul r18.y, r18.w, r16.x
            lt r18.z, l(0.000000), r18.y
            if_nz r18.z
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r17.w, l(16), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r17.w, l(32), t15.yxwz
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r17.w, l(48), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r17.w, l(64), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r17.w, l(80), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r17.w, l(132), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r17.w, l(148), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r17.w, l(164), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xyzw, r17.w, l(180), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r40.xyzw, r17.w, l(196), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r41.xy, r17.w, l(212), t15.xyxx
              mad r26.w, r16.x, r18.w, r26.w
              mul r16.x, r28.z, r18.y
              mov r28.z, r36.z
              dp3 r17.w, r13.xyzx, r28.xyzx
              dp3 r18.y, r29.xyzx, r28.xyzx
              add r18.y, -r36.w, r18.y
              ge r18.z, r18.y, l(0.000000)
              max r18.y, r5.z, |r18.y|
              movc r18.y, r18.z, r18.y, -r18.y
              max r17.w, -r17.w, l(0.00000010)
              div r17.w, r18.y, r17.w
              min r17.w, |r17.w|, l(131072.000000)
              mov r36.z, r37.z
              dp3 r18.y, r13.xyzx, r36.xyzx
              dp3 r18.z, r29.xyzx, r36.xyzx
              add r18.z, -r37.w, r18.z
              ge r18.w, r18.z, l(0.000000)
              max r18.z, r5.z, |r18.z|
              movc r18.z, r18.w, r18.z, -r18.z
              max r18.y, -r18.y, l(0.00000010)
              div r18.y, r18.z, r18.y
              min r17.w, r17.w, |r18.y|
              mov r37.z, r38.z
              dp3 r18.y, r13.xyzx, r37.xyzx
              dp3 r18.z, r29.xyzx, r37.xyzx
              add r18.z, -r38.w, r18.z
              ge r18.w, r18.z, l(0.000000)
              max r18.z, r5.z, |r18.z|
              movc r18.z, r18.w, r18.z, -r18.z
              max r18.y, -r18.y, l(0.00000010)
              div r18.y, r18.z, r18.y
              min r17.w, r17.w, |r18.y|
              mov r38.z, r39.z
              dp3 r18.y, r13.xyzx, r38.xyzx
              dp3 r18.z, r29.xyzx, r38.xyzx
              add r18.z, -r39.w, r18.z
              ge r18.w, r18.z, l(0.000000)
              max r18.z, r5.z, |r18.z|
              movc r18.z, r18.w, r18.z, -r18.z
              max r18.y, -r18.y, l(0.00000010)
              div r18.y, r18.z, r18.y
              min r17.w, r17.w, |r18.y|
              mov r39.z, r40.x
              dp3 r18.y, r13.xyzx, r39.xyzx
              dp3 r18.z, r29.xyzx, r39.xyzx
              add r18.z, -r40.y, r18.z
              ge r18.w, r18.z, l(0.000000)
              max r18.z, r5.z, |r18.z|
              movc r18.z, r18.w, r18.z, -r18.z
              max r18.y, -r18.y, l(0.00000010)
              div r18.y, r18.z, r18.y
              min r17.w, r17.w, |r18.y|
              mov r41.zw, r40.zzzw
              dp3 r18.y, r13.zxyz, r41.xzwx
              dp3 r18.z, r29.zxyz, r41.xzwx
              add r18.z, -r41.y, r18.z
              ge r18.w, r18.z, l(0.000000)
              max r18.z, r5.z, |r18.z|
              movc r18.z, r18.w, r18.z, -r18.z
              max r18.y, -r18.y, l(0.00000010)
              div r18.y, r18.z, r18.y
              min r17.w, r17.w, |r18.y|
              mov r28.x, r33.w
              mov r28.yz, r34.zzwz
              add r18.yzw, r29.xxyz, r28.xxyz
              mad r18.yzw, r13.xxyz, r17.wwww, r18.yyzw
              dp3 r19.w, r18.yzwy, r18.yzwy
              sqrt r19.w, r19.w
              div r17.w, r17.w, r19.w
              add r17.w, r17.w, r17.w
              sqrt r17.w, r17.w
              mad r17.w, r4.w, l(5.000000), r17.w
              add r17.w, r17.w, l(-0.844800)
              mov r27.y, r30.z
              mov r27.z, r32.x
              dp3 r36.x, r18.yzwy, r27.xyzx
              mov r28.xy, r30.xwxx
              mov r28.z, r32.w
              dp3 r36.y, r18.yzwy, r28.xyzx
              mov r32.x, r30.y
              dp3 r36.z, r18.yzwy, r32.xyzx
              ubfe r18.y, l(9), l(16), r28.w
              utof r36.w, r18.y
              sample_l_indexable(texturecubearray)(float,float,float,float) r18.yzw, r36.xyzw, t8.wxyz, s2, r17.w
              and r30.xyz, r18.yzwy, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
              ieq r30.xyz, r30.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
              or r17.w, r30.y, r30.x
              or r17.w, r30.z, r17.w
              movc r18.yzw, r17.wwww, l(0,1.000000,1.000000,0), r18.yyzw
              dp3 r30.x, r29.xyzx, r27.xyzx
              dp3 r30.y, r29.xyzx, r28.xyzx
              dp3 r30.z, r29.xyzx, r32.xyzx
              mad_sat r29.xyz, r30.xyzx, r33.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
              mov r34.z, r35.x
              mad r29.xyz, r29.xyzx, r34.xyzx, r35.yzwy
              dp3 r36.x, r6.xyzx, r27.xyzx
              dp3 r36.y, r6.xyzx, r28.xyzx
              dp3 r36.z, r6.xyzx, r32.xyzx
              lt r27.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r36.xyzx
              movc r17.z, r27.x, l(0), l(0.500000)
              add r28.xyz, r17.xyzx, r29.xyzx
              sample_l_indexable(texture3d)(float,float,float,float) r28.xyz, r28.xyzx, t17.xyzw, s4, l(0.000000)
              mul r30.xyz, r36.xyzx, r36.xyzx
              mul r30.xyz, r16.xxxx, r30.xyzx
              movc r19.z, r27.y, l(0), l(0.500000)
              add r27.xyw, r19.xyxz, r29.xyxz
              sample_l_indexable(texture3d)(float,float,float,float) r27.xyw, r27.xywx, t18.xywz, s4, l(0.000000)
              mul r27.xyw, r30.yyyy, r27.xyxw
              mad r27.xyw, r28.xyxz, r30.xxxx, r27.xyxw
              movc r20.z, r27.z, l(0), l(0.500000)
              add r28.xyz, r20.xyzx, r29.xyzx
              sample_l_indexable(texture3d)(float,float,float,float) r28.xyz, r28.xyzx, t19.xyzw, s4, l(0.000000)
              mad r27.xyz, r28.xyzx, r30.zzzz, r27.xywx
              sample_l_indexable(texturecubearray)(float,float,float,float) r28.xyz, r36.xyzw, t8.xyzw, s2, l(6.000000)
              and r29.xyz, r28.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
              ieq r29.xyz, r29.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
              or r17.z, r29.y, r29.x
              or r17.z, r29.z, r17.z
              movc r28.xyz, r17.zzzz, l(1.000000,1.000000,0,0), r28.xyzx
              mul r29.xyz, r27.xyzx, r28.xyzx
              dp3 r17.z, r29.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
              mad r15.xyz, r27.xyzx, r28.xyzx, r15.xyzx
              mul r17.w, r5.w, r17.z
              mul r18.yzw, r16.xxxx, r18.yyzw
              dp3 r16.x, r18.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
              mad r16.x, r5.w, r17.z, r16.x
              div r16.x, r17.w, r16.x
              mad r26.xyz, r18.yzwy, r16.xxxx, r26.xyzx
            endif 
          endif 
        endif 
      endloop 
      mov r25.xyzw, r26.xyzw
      mov r12.yzw, r15.xxyz
      iadd r9.w, r9.w, l(32)
    endloop 
    mov r24.xyzw, r25.zxyw
    mov r23.xyz, r12.yzwy
    mov r24.xyzw, r24.yzxw
  else 
    mov r24.x, r23.w
  endif 
  max r4.w, r24.w, l(1.000000)
  rcp r4.w, r4.w
  mov_sat r24.w, r24.w
  mul r21.xyz, r4.wwww, r23.xyzx
  mul r22.xyz, r4.wwww, r24.xyzx
  lt r5.z, r24.w, l(0.990000)
  if_nz r5.z
    add r5.z, -r24.w, l(1.000000)
    mul r5.w, r5.z, cb2[19].x
    add r12.yzw, v7.xxyz, -cb2[35].xxyz
    mul r14.x, r12.y, cb2[35].w
    mul r14.yz, r12.zzwz, cb2[36].xxyx
    add_sat r12.yzw, r14.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
    mul r14.xy, r12.yzyy, cb2[36].zwzz
    mul r14.z, r12.w, cb2[37].x
    add r12.yzw, r14.xxyz, cb2[37].yyzw
    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
    movc r14.xyz, r14.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
    mov r14.w, l(0)
    add r15.xyz, r12.yzwy, r14.wwxw
    sample_l_indexable(texture3d)(float,float,float,float) r15.xyz, r15.xyzx, t17.xyzw, s4, l(0.000000)
    mul r16.xyz, r6.xyzx, r6.xyzx
    mul r16.xyz, r5.wwww, r16.xyzx
    add r17.xyz, r12.yzwy, r14.wwyw
    sample_l_indexable(texture3d)(float,float,float,float) r17.xyz, r17.xyzx, t18.xyzw, s4, l(0.000000)
    mul r17.xyz, r16.yyyy, r17.xyzx
    mad r15.xyz, r15.xyzx, r16.xxxx, r17.xyzx
    add r12.yzw, r12.yyzw, r14.wwwz
    sample_l_indexable(texture3d)(float,float,float,float) r12.yzw, r12.yzwy, t19.wxyz, s4, l(0.000000)
    mad r12.yzw, r12.yyzw, r16.zzzz, r15.xxyz
    mov r6.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r14.xyz, r6.xyzw, t8.xyzw, s2, l(6.000000)
    mul r12.yzw, r12.yyzw, r14.xxyz
    dp3 r5.w, r12.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
    mad r21.xyz, r23.xyzx, r4.wwww, r12.yzwy
    mov r13.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r12.yzw, r13.xyzw, t8.wxyz, s2, r5.y
    mad r4.w, cb2[19].x, r5.z, -r5.w
    mad r4.w, r8.y, r4.w, r5.w
    mad r22.xyz, r12.yzwy, r4.wwww, r22.xyzx
  endif 
else 
  mov r22.x, r21.w
endif 
add r4.w, r1.y, r8.x
log r4.w, |r4.w|
mul r4.w, r2.w, r4.w
exp r4.w, r4.w
add r4.w, r1.y, r4.w
add_sat r4.w, r4.w, l(-1.000000)
mul r14.xyz, r1.yyyy, r21.xyzx
mad r5.yz, r8.xxyx, l(0.000000, 0.984375, 0.984375, 0.000000), l(0.000000, 0.00781250, 0.00781250, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r5.yz, r5.yzyy, t5.zxyw, s2, l(0.000000)
mul r8.yzw, r4.wwww, r22.xxyz
mul r15.xyz, r5.yyyy, r8.zwyz
mul r5.yzw, r5.zzzz, r8.yyzw
sqrt r1.y, r2.w
mad r1.y, r1.y, l(0.500000), l(0.500000)
mul r1.y, r1.y, r1.y
mul r4.w, r1.y, l(0.500000)
mad r1.y, -r1.y, l(0.500000), l(1.000000)
mad r6.w, r8.x, r1.y, r4.w
mul r1.y, r1.y, r6.w
mul r4.w, r4.w, r6.w
dp3 r6.w, r6.xyzx, cb2[17].xyzx
mov_sat r7.z, r6.w
ge r7.w, l(0.000000), r7.z
if_nz r7.w
  mov r8.y, l(0)
endif 
if_z r7.w
  mul r12.yzw, v7.yyyy, cb2[29].xxyz
  mad r12.yzw, v7.xxxx, cb2[28].xxyz, r12.yyzw
  mad r12.yzw, v7.zzzz, cb2[30].xxyz, r12.yyzw
  add r12.yzw, r12.yyzw, cb2[31].xxyz
  add r7.w, r12.w, -cb2[17].w
  mad r7.w, -r7.w, l(0.00006104), l(1.000000)
  mov_sat r8.z, r7.w
  eq r8.z, r7.w, r8.z
  if_nz r8.z
    mov r8.zw, l(0,0,0,0)
    loop 
      ge r9.w, r8.z, l(3.000000)
      breakc_nz r9.w
      ftou r9.w, r8.z
      add r16.xy, r12.yzyy, -cb2[r9.w + 20].xyxx
      max r11.w, |r16.y|, |r16.x|
      mul r8.w, r11.w, cb2[r9.w + 20].z
      lt r9.w, r8.w, l(1.000000)
      if_nz r9.w
        break 
      endif 
      add r8.z, r8.z, l(1.000000)
      mov r8.w, l(0)
    endloop 
  else 
    mov r8.zw, l(0,0,3.000000,0)
  endif 
  ge r9.w, r8.z, l(3.000000)
  if_nz r9.w
    mul r16.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
    rcp r17.xz, r16.xxxx
    mov r17.y, -r17.z
    mad r16.xyz, r12.yzyy, r17.xyzx, r16.yzyy
    add r17.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r16.xyz, r16.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r16.xyz, r17.xyzx, r16.xyzx
    mul r17.xy, r16.zyzz, cb2[32].xxxx
    round_ni r17.xy, r17.xyxx
    mul r11.w, r17.y, cb2[27].x
    mad r11.w, r11.w, cb2[32].x, r17.x
    ftou r11.w, r11.w
    iadd r11.w, r11.w, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r13.w, r11.w, l(0), t23.xxxx
    and r16.w, r13.w, l(0x40000000)
    ishl r17.x, r13.w, l(2)
    if_z r16.w
      and r16.w, r13.w, l(0x01ffffff)
      iadd r18.x, r11.w, r16.w
      ushr r11.w, r13.w, l(25)
      utof r11.w, r11.w
      mul r16.xyz, r11.wwww, r16.xyzx
      frc r16.xyz, r16.xyzx
      mul r16.xyz, r16.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
      ftou r16.xyz, r16.xyzx
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.x, l(0), t23.xxxx
      ushr r17.yz, r16.zzyz, l(0, 6, 6, 0)
      and r11.w, r18.z, l(0xc0000000)
      iadd r13.w, r18.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r13.w, r13.w, l(0), t23.xxxx
      movc r13.w, r17.z, r18.z, r13.w
      ushr r16.w, r13.w, l(13)
      movc r13.w, r17.y, r16.w, r13.w
      and r13.w, r13.w, l(8191)
      iadd r19.x, r13.w, r18.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.z, r19.x, l(0), t23.xxxx
      mov r18.y, l(0)
      mov r19.y, l(1)
      movc r17.yzw, r11.wwww, r18.xxyz, r19.xxyz
      movc r19.yz, r11.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r20.xy, r16.zyzz, r19.yyyy
      and r20.xy, r20.xyxx, l(1, 1, 0, 0)
      and r13.w, r17.w, l(0xc0000000)
      iadd r16.w, r17.y, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.w, r16.w, l(0), t23.xxxx
      movc r16.w, r20.y, r17.w, r16.w
      ushr r18.w, r16.w, l(13)
      movc r16.w, r20.x, r18.w, r16.w
      and r16.w, r16.w, l(8191)
      iadd r19.x, r16.w, r17.y
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.w, r19.x, l(0), t23.xxxx
      movc r17.yzw, r13.wwww, r17.yyzw, r19.xxzw
      movc r17.yzw, r11.wwww, r18.xxyz, r17.yyzw
      and r11.w, r17.w, l(0xc0000000)
      if_z r11.w
        iadd r11.w, -r17.z, l(6)
        ushr r18.xy, r16.zyzz, r11.wwww
        or r11.w, r17.w, l(0x40000000)
        bfi r13.w, l(1), l(1), r18.y, l(0)
        bfi r13.w, l(1), l(0), r18.x, r13.w
        imul null, r13.w, r13.w, l(10)
        ushr r11.w, r11.w, r13.w
        and r11.w, r11.w, l(1023)
        iadd r18.x, r11.w, r17.y
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.w, r18.x, l(0), t23.xxxx
        iadd r18.yz, r17.zzzz, l(0, 1, 2, 0)
        iadd r11.w, -r18.y, l(6)
        ushr r19.xy, r16.zyzz, r11.wwww
        and r11.w, r18.w, l(0xc0000000)
        or r13.w, r18.w, l(0x40000000)
        bfi r16.w, l(1), l(1), r19.y, l(0)
        bfi r16.w, l(1), l(0), r19.x, r16.w
        imul null, r16.w, r16.w, l(10)
        ushr r13.w, r13.w, r16.w
        and r13.w, r13.w, l(1023)
        iadd r19.x, r13.w, r18.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.z, r19.x, l(0), t23.xxxx
        mov r19.y, r18.z
        movc r19.xyz, r11.wwww, r18.xywx, r19.xyzx
        iadd r13.w, -r19.y, l(6)
        ushr r18.yz, r16.zzyz, r13.wwww
        and r13.w, r19.z, l(0xc0000000)
        or r16.w, r19.z, l(0x40000000)
        bfi r17.z, l(1), l(1), r18.z, l(0)
        bfi r17.z, l(1), l(0), r18.y, r17.z
        imul null, r17.z, r17.z, l(10)
        ushr r16.w, r16.w, r17.z
        and r16.w, r16.w, l(1023)
        iadd r20.x, r16.w, r19.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.y, r20.x, l(0), t23.xxxx
        movc r18.yz, r13.wwww, r19.xxzx, r20.xxyx
        movc r17.yw, r11.wwww, r18.xxxw, r18.yyyz
      endif 
      and r11.w, r17.w, l(0xc0000000)
      if_z r11.w
        ubfe r13.w, l(14), l(15), r17.w
        utof r13.w, r13.w
        mul r13.w, r13.w, cb2[27].w
        mul r13.w, r13.w, l(0.00006104)
        and r18.xy, r17.wwww, l(0x00007fff, 0x20000000, 0, 0)
        utof r16.w, r18.x
        mul r16.w, r16.w, cb2[27].w
        mul r16.w, r16.w, l(0.00003052)
        and r17.z, r16.y, l(3)
        iadd r17.z, r17.z, r17.y
        iadd r17.z, r17.z, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.z, r17.z, l(0), t23.xxxx
        bfi r18.xzw, l(2, 0, 2, 1), l(3, 0, 1, 4), r16.xxyz, l(0, 0, 0, 0)
        ushr r16.x, r17.z, r18.x
        and r16.x, r16.x, l(255)
        utof r16.x, r16.x
        mul r16.x, r16.w, r16.x
        mad r16.x, r16.x, l(0.00392157), r13.w
        iadd r16.y, r18.z, l(1)
        ubfe r16.z, l(1), l(1), r16.z
        iadd r16.y, r16.z, r16.y
        iadd r16.y, r16.y, r17.y
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.y, r16.y, l(0), t23.xxxx
        ushr r16.y, r16.y, r18.w
        and r16.y, r16.y, l(0x0000ffff)
        utof r16.y, r16.y
        mul r16.y, r16.w, r16.y
        mad r13.w, r16.y, l(0.00001526), r13.w
        movc r17.x, r18.y, r16.x, r13.w
      else 
        and r13.w, r17.w, l(0x80000000)
        iadd r16.x, r17.y, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.x, r16.x, l(0), t23.xxxx
        movc r13.w, r13.w, r16.x, l(0)
        ishl r16.x, r17.w, l(2)
        ushr r16.y, r13.w, l(16)
        f16tof32 r16.y, r16.y
        and r13.w, r13.w, l(0x0000ffff)
        f16tof32 r13.w, r13.w
        mad r16.x, r12.y, r16.y, r16.x
        mad r13.w, r12.z, r13.w, r16.x
        movc r17.x, r11.w, r13.w, r17.x
      endif 
    endif 
    mad r11.w, -cb2[27].z, l(2.000000), r12.w
    lt r11.w, r17.x, r11.w
    movc r8.y, r11.w, l(0), l(1.000000)
  endif 
  if_z r9.w
    if_z cb2[58].y
      ftou r9.w, r8.z
      add r16.xy, r12.yzyy, -cb2[r9.w + 20].xyxx
      mul r16.xy, r16.xyxx, cb2[r9.w + 20].zzzz
      mad r16.xy, r16.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r9.w, cb2[26].y
      add r16.z, r8.z, r9.w
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r9.w, r16.xyzx, t13.xxxx, s13, r7.w
      sample_l_indexable(texture2darray)(float,float,float,float) r11.w, r16.xyzx, t31.yzwx, s0, l(0.000000)
      add r9.w, r9.w, r11.w
      add_sat r9.w, r9.w, l(-1.000000)
      mul r11.w, r9.w, r9.w
      mul r8.y, r9.w, r11.w
    endif 
    if_nz cb2[58].y
      mov r16.x, -r7.x
      ftou r9.w, r8.z
      add r8.z, r8.z, l(1.000000)
      min r8.z, r8.z, l(2.000000)
      add r8.w, -r8.w, l(1.000000)
      mul r8.w, r8.w, l(28.000000)
      ftou r8.zw, r8.zzzw
      add r17.xy, r12.yzyy, -cb2[r9.w + 20].xyxx
      mul r17.xy, r17.xyxx, cb2[r9.w + 20].zzzz
      mad r17.xy, r17.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      add r12.yz, r12.yyzy, -cb2[r8.z + 20].xxyx
      mul r12.yz, r12.yyzy, cb2[r8.z + 20].zzzz
      mad r12.yz, r12.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      mov r16.y, r9.x
      mov r16.z, r7.x
      mov r11.w, l(0)
      mov r12.w, l(0)
      loop 
        uge r13.w, r12.w, l(8)
        breakc_nz r13.w
        ult r13.w, r8.w, r12.w
        movc r17.zw, r13.wwww, r12.yyyz, r17.xxxy
        movc r16.w, r13.w, cb2[r8.z + 20].w, cb2[r9.w + 20].w
        movc r13.w, r13.w, r8.z, r9.w
        dp2 r18.x, icb[r12.w + 0].yxyy, r16.xyxx
        dp2 r18.y, icb[r12.w + 0].yxyy, r16.yzyy
        mad r18.xy, r18.xyxx, r16.wwww, r17.zwzz
        iadd r13.w, r13.w, cb2[26].y
        utof r18.z, r13.w
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r13.w, r18.xyzx, t13.xxxx, s13, r7.w
        sample_l_indexable(texture2darray)(float,float,float,float) r16.w, r18.xyzx, t31.yzwx, s0, l(0.000000)
        add r13.w, r13.w, r16.w
        add_sat r13.w, r13.w, l(-1.000000)
        mad r11.w, r13.w, l(0.125000), r11.w
        iadd r12.w, r12.w, l(1)
      endloop 
      mul r7.w, r11.w, r11.w
      mul r8.y, r11.w, r7.w
    endif 
  endif 
endif 
lt r7.w, l(0.000000), r7.z
if_nz r7.w
  lt r7.w, l(0.000000), r8.y
  if_nz r7.w
    mul r7.w, r1.w, cb2[18].w
    mul r7.w, r7.z, r7.w
    if_nz cb2[23].x
      mov r10.w, l(1.000000)
      dp4 r8.z, cb2[24].xyzw, r10.xyzw
      dp4 r8.w, cb2[25].xyzw, r10.xyzw
      frc r10.xy, r8.zwzz
      iadd r8.z, l(-1), cb2[23].x
      utof r10.z, r8.z
      sample_l_indexable(texture2darray)(float,float,float,float) r10.xyz, r10.xyzx, t20.xyzw, s2, l(0.000000)
      add r10.xyz, r10.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
      mad r10.xyz, cb2[23].yyyy, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      mul r10.xyz, r10.xyzx, cb2[18].xyzx
    else 
      mov r10.xyz, cb2[18].xyzx
    endif 
    ushr r8.z, cb2[53].x, l(16)
    ult r8.w, l(0), r8.z
    and r8.w, r1.z, r8.w
    if_nz r8.w
      iadd r8.z, r8.z, cb2[0].x
      iadd r8.z, r8.z, l(-1)
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r8.w, r8.z, l(52), t12.xxxx
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r8.z, l(68), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r8.z, l(84), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r8.z, l(132), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.xyzw, r8.z, l(148), t12.xyzw
      mad r9.w, |r6.w|, l(-0.200000), l(0.400000)
      mad r20.xyz, r6.xyzx, r9.wwww, v7.xyzx
      mov r20.w, l(1.000000)
      dp4 r16.x, r16.xyzw, r20.xyzw
      dp4 r16.y, r17.xyzw, r20.xyzw
      mad r12.yz, r16.xxyx, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      add r12.yz, r19.zzwz, r12.yyzy
      mul r12.yz, r19.xxyx, r12.yyzy
      div r16.xy, r8.wwww, r18.xzxx
      add r16.zw, -r16.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
      ge r16.zw, r12.yyyz, r16.zzzw
      ge r16.xy, r16.xyxx, r12.yzyy
      or r16.xy, r16.xyxx, r16.zwzz
      or r9.w, r16.y, r16.x
      if_z r9.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r9.w, r8.z, l(28), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r8.z, l(100), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xy, r8.z, l(164), t12.xyxx
        dp4 r8.z, r16.xyzw, r20.xyzw
        mov_sat r12.yz, r12.yyzy
        mad r16.xy, r12.yzyy, r18.xzxx, r18.ywyy
        add r8.z, r17.x, r8.z
        div r8.z, r8.z, r17.y
        max r8.z, r8.z, l(0.00006104)
        and r9.w, r9.w, l(0x0000ffff)
        if_nz cb2[58].y
          mov r17.x, -r7.x
          utof r18.z, r9.w
          mov r17.y, r9.x
          mov r17.z, r7.x
          mov r10.w, l(0)
          mov r11.w, l(0)
          loop 
            ige r12.y, r11.w, l(8)
            breakc_nz r12.y
            dp2 r19.x, icb[r11.w + 0].yxyy, r17.xyxx
            dp2 r19.y, icb[r11.w + 0].yxyy, r17.yzyy
            mad r18.xy, r19.xyxx, r8.wwww, r16.xyxx
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.y, r18.xyzx, t9.xxxx, s13, r8.z
            mad r10.w, r12.y, l(0.125000), r10.w
            iadd r11.w, r11.w, l(1)
          endloop 
        else 
          utof r16.z, r9.w
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.w, r16.xyzx, t9.xxxx, s13, r8.z
        endif 
        mul r8.z, r10.w, r10.w
        mul r8.z, r10.w, r8.z
      else 
        mov r8.z, l(1.000000)
      endif 
      mul r8.y, r8.z, r8.y
    else 
      and r8.z, cb2[53].x, l(0x0000ffff)
      ult r8.w, l(0), r8.z
      not r9.w, r1.z
      and r8.w, r8.w, r9.w
      if_nz r8.w
        iadd r8.z, r8.z, cb2[0].x
        iadd r8.z, r8.z, l(-1)
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r8.w, r8.z, l(52), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r8.z, l(68), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r8.z, l(84), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r8.z, l(132), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.xyzw, r8.z, l(148), t12.xyzw
        mad r9.w, |r6.w|, l(-0.200000), l(0.400000)
        mad r20.xyz, r6.xyzx, r9.wwww, v7.xyzx
        mov r20.w, l(1.000000)
        dp4 r16.x, r16.xyzw, r20.xyzw
        dp4 r16.y, r17.xyzw, r20.xyzw
        mad r12.yz, r16.xxyx, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
        add r12.yz, r19.zzwz, r12.yyzy
        mul r12.yz, r19.xxyx, r12.yyzy
        div r16.xy, r8.wwww, r18.xzxx
        add r16.zw, -r16.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
        ge r16.zw, r12.yyyz, r16.zzzw
        ge r16.xy, r16.xyxx, r12.yzyy
        or r16.xy, r16.xyxx, r16.zwzz
        or r9.w, r16.y, r16.x
        if_z r9.w
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r9.w, r8.z, l(28), t12.xxxx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r8.z, l(100), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xy, r8.z, l(164), t12.xyxx
          dp4 r8.z, r16.xyzw, r20.xyzw
          mov_sat r12.yz, r12.yyzy
          mad r16.xy, r12.yzyy, r18.xzxx, r18.ywyy
          add r8.z, r17.x, r8.z
          div r8.z, r8.z, r17.y
          max r8.z, r8.z, l(0.00006104)
          and r9.w, r9.w, l(0x0000ffff)
          if_nz cb2[58].y
            mov r17.x, -r7.x
            utof r18.z, r9.w
            mov r17.y, r9.x
            mov r17.z, r7.x
            mov r10.w, l(0)
            mov r11.w, l(0)
            loop 
              ige r12.y, r11.w, l(8)
              breakc_nz r12.y
              dp2 r19.x, icb[r11.w + 0].yxyy, r17.xyxx
              dp2 r19.y, icb[r11.w + 0].yxyy, r17.yzyy
              mad r18.xy, r19.xyxx, r8.wwww, r16.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.y, r18.xyzx, t9.xxxx, s13, r8.z
              mad r10.w, r12.y, l(0.125000), r10.w
              iadd r11.w, r11.w, l(1)
            endloop 
          else 
            utof r16.z, r9.w
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.w, r16.xyzx, t9.xxxx, s13, r8.z
          endif 
          mul r8.z, r10.w, r10.w
          mul r8.z, r10.w, r8.z
        else 
          mov r8.z, l(1.000000)
        endif 
        mul r8.y, r8.z, r8.y
      endif 
    endif 
    mad r8.z, -r8.x, l(0.500000), l(1.000000)
    mad r8.z, -r7.z, r8.z, l(1.000000)
    mul r8.z, r8.z, r8.z
    mad r8.z, -r8.z, l(0.620000), l(0.620000)
    add r8.z, -r7.z, r8.z
    mad r8.z, r2.w, r8.z, r7.z
    mul r8.z, r8.y, r8.z
    lt r6.w, l(0.000000), r6.w
    mad r16.xyz, r8.zzzz, r10.xyzx, r14.xyzx
    mad r12.yzw, -v7.xxyz, r1.xxxx, cb2[17].xxyz
    dp3 r1.x, r12.yzwy, r12.yzwy
    rsq r1.x, r1.x
    mul r12.yzw, r1.xxxx, r12.yyzw
    dp3 r1.x, r12.yzwy, r4.xyzx
    dp3 r8.z, r6.xyzx, r12.yzwy
    mad r8.w, |r8.z|, r1.w, -|r8.z|
    mad r8.z, |r8.z|, r8.w, l(1.000000)
    mad r7.z, r7.z, r1.y, r4.w
    mul r8.z, r8.z, r8.z
    mul r7.z, r7.z, r8.z
    rcp r7.z, r7.z
    mul r7.z, r7.w, r7.z
    mul r7.z, r7.z, r8.y
    mul r7.z, r7.z, l(0.250000)
    mad r8.yzw, r7.zzzz, r10.xxyz, r5.yyzw
    add_sat r1.x, -r1.x, l(1.000000)
    mul r7.w, r1.x, r1.x
    mul r7.w, r7.w, r7.w
    mul r1.x, r1.x, r7.w
    mul r1.x, r1.x, r7.z
    mad r10.xyz, r1.xxxx, r10.yzxy, r15.xyzx
    mov r16.w, r10.z
    mov r14.w, r15.z
    movc r14.xyzw, r6.wwww, r16.xyzw, r14.xyzw
    mov r10.zw, r8.yyyz
    mov r15.zw, r5.yyyz
    movc r10.xyzw, r6.wwww, r10.xyzw, r15.xyzw
    movc r5.w, r6.w, r8.w, r5.w
    mov r15.z, r14.w
    mov r15.xy, r10.xyxx
    mov r5.yz, r10.zzwz
  endif 
endif 
mov r10.x, -r7.x
not r1.x, r1.z
mad r6.w, -r8.x, l(0.500000), l(1.000000)
mov r8.xy, l(0,0,0,0)
mov r16.w, l(0)
mov r17.xyz, v7.xyzx
mov r17.w, l(1.000000)
mov r18.w, l(1.000000)
mov r10.z, r7.x
mov r19.w, l(1.000000)
mov r20.z, l(1.000000)
mov r21.w, l(1.000000)
mov r10.yw, r9.xxxx
mov r7.y, r10.w
mov r22.w, l(1.000000)
mov r9.y, r10.x
mov r9.z, r7.x
mov r23.w, l(1.000000)
mov r24.x, r9.x
mov r24.y, r10.x
mov r24.z, r7.x
mov r25.x, r9.x
mov r25.y, r10.x
mov r25.z, r7.x
mov r26.x, r9.x
mov r26.y, r10.x
mov r26.z, r7.x
mov r12.yzw, r14.xxyz
mov r27.xyz, r15.zxyz
mov r28.xyz, r5.yzwy
mov r7.z, cb2[58].y
mov r7.w, l(0)
loop 
  uge r8.w, r7.w, cb2[0].x
  breakc_nz r8.w
  ushr r8.z, r7.w, l(5)
  iadd r16.xyz, r8.xyzx, r11.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r8.z, r16.xyzw, t6.yzxw
  mov r16.xyz, r12.yzwy
  mov r29.xyz, r27.xyzx
  mov r30.xyz, r28.xyzx
  mov r8.w, r7.z
  mov r9.w, r8.z
  loop 
    breakc_z r9.w
    firstbit_lo r11.w, r9.w
    ishl r13.w, l(1), r11.w
    and r14.w, r9.w, r13.w
    if_nz r14.w
      xor r9.w, r9.w, r13.w
      iadd r11.w, r7.w, r11.w
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r31.xyzw, r11.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r32.xy, r11.w, l(16), t11.xyxx
      add r31.xyz, r31.xyzx, -v7.xyzx
      mov r32.z, r31.w
      lt r31.xyz, |r31.xyzx|, r32.zxyz
      and r13.w, r31.y, r31.x
      and r13.w, r31.z, r13.w
      if_nz r13.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r11.w, l(0), t12.wxyz
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r11.w, l(16), t12.zxyw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r11.w, l(32), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r11.w, l(48), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r11.w, l(64), t12.yzwx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r11.w, l(80), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r11.w, l(96), t12.yzwx
        ubfe r13.w, l(3), l(24), r32.w
        switch r13.w
          case l(4)
          lt r13.w, l(0.000000), r37.x
          mov r38.xy, r36.zwzz
          mov r38.z, r37.w
          mad r39.xyz, -r38.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r31.yzwy
          add r40.xyz, r39.xyzx, -v7.xyzx
          dp3 r14.w, r38.xyzx, r40.xyzx
          div_sat r15.w, -r14.w, r37.x
          mad r41.xyz, r15.wwww, r38.xyzx, r39.xyzx
          movc r41.xyz, r13.wwww, r41.xyzx, r31.yzwy
          add r41.xyz, r41.xyzx, -v7.xyzx
          dp3 r20.w, r41.xyzx, r41.xyzx
          rsq r24.w, r20.w
          mul r41.xyz, r24.wwww, r41.xyzx
          dp3 r24.w, r6.xyzx, r41.xyzx
          mov_sat r25.w, r24.w
          lt r26.w, l(0.000000), r25.w
          if_nz r26.w
            sqrt r26.w, r20.w
            mul r27.w, r34.x, r34.x
            div r20.w, r27.w, r20.w
            min r20.w, r20.w, l(1.000000)
            mad_sat r41.xy, r26.wwww, r33.xzxx, r33.ywyy
            mul r41.zw, r41.xxxy, r41.xxxy
            mad r41.xy, r41.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
            mul r41.xy, r41.xyxx, r41.zwzz
            mul r20.w, r20.w, r41.x
            mul r20.w, r41.y, r20.w
            lt r26.w, l(0.000000), r20.w
            if_nz r26.w
              ubfe r26.w, l(3), l(27), r32.w
              ine r26.w, r26.w, l(1)
              if_nz r26.w
                mad r26.w, |r24.w|, l(-0.200000), l(0.400000)
                mad r41.xyz, r6.xyzx, r26.wwww, v7.xyzx
                add r41.xyz, -r35.xyzx, r41.xyzx
                max r26.w, |r41.z|, |r41.y|
                max r26.w, r26.w, |r41.x|
                div r26.w, r36.x, r26.w
                add r26.w, r36.y, r26.w
                dp3 r27.w, r41.xyzx, r41.xyzx
                rsq r27.w, r27.w
                max r26.w, r26.w, l(0.00006104)
                and r28.w, r32.w, l(0x0000ffff)
                utof r42.w, r28.w
                mov r28.w, l(0)
                mov r29.w, l(0)
                loop 
                  ige r30.w, r29.w, l(8)
                  breakc_nz r30.w
                  dp2 r43.y, icb[r29.w + 0].yxyy, r10.xyxx
                  dp2 r43.z, icb[r29.w + 0].yxyy, r10.yzyy
                  mul r43.yz, r34.yyyy, r43.yyzy
                  mul r43.x, r12.x, r43.y
                  mul r43.w, r5.x, r43.y
                  mad r42.xyz, r41.xyzx, r27.wwww, r43.xzwx
                  sample_c_lz_indexable(texturecubearray)(float,float,float,float) r30.w, r42.xyzw, t10.xxxx, s13, r26.w
                  mad r28.w, r30.w, l(0.125000), r28.w
                  iadd r29.w, r29.w, l(1)
                endloop 
              else 
                mov r28.w, l(1.000000)
              endif 
              mul r20.w, r20.w, r28.w
              lt r26.w, l(0.000000), r20.w
              if_nz r26.w
                mul r26.w, r1.w, r32.x
                mul r26.w, r26.w, l(0.250000)
                dp3 r27.w, r38.xyzx, r13.xyzx
                dp3 r29.w, r13.xyzx, r40.xyzx
                mad r30.w, -r27.w, r27.w, r37.x
                mad r14.w, r27.w, r29.w, -r14.w
                div_sat r14.w, r14.w, r30.w
                div r27.w, r30.w, r37.x
                mul r27.w, r27.w, l(10.000000)
                min r27.w, r27.w, l(1.000000)
                add r14.w, -r15.w, r14.w
                mad r14.w, r27.w, r14.w, r15.w
                mad r38.xyz, r14.wwww, r38.xyzx, r39.xyzx
                movc r38.xyz, r13.wwww, r38.xyzx, r31.yzwy
                add r38.xyz, r38.xyzx, -v7.xyzx
                dp3 r13.w, r38.xyzx, r38.xyzx
                rsq r13.w, r13.w
                mul r39.xyz, r13.wwww, r38.xyzx
                ubfe r14.w, l(4), l(16), r32.w
                ult r15.w, l(0), r14.w
                and r15.w, r1.z, r15.w
                if_nz r15.w
                  iadd r14.w, r14.w, cb2[0].x
                  iadd r14.w, r14.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.w, r14.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r14.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r14.w, l(116), t12.xyzw
                  mad r27.w, |r24.w|, l(-0.200000), l(0.400000)
                  mad r18.xyz, r6.xyzx, r27.wwww, v7.xyzx
                  dp4 r27.w, r40.xyzw, r18.xyzw
                  dp4 r29.w, r41.xyzw, r18.xyzw
                  lt r30.w, r29.w, r27.w
                  if_z r30.w
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r14.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r14.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r14.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r14.w, l(148), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xy, r14.w, l(164), t12.xyxx
                    dp4 r40.x, r40.xyzw, r18.xyzw
                    dp4 r40.y, r41.xyzw, r18.xyzw
                    div r18.xy, r40.xyxx, r29.wwww
                    mad r18.xy, r18.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r18.xy, r43.zwzz, r18.xyxx
                    mul r18.xy, r43.xyxx, r18.xyxx
                    div r40.xy, r15.wwww, r42.xzxx
                    add r40.zw, -r40.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                    ge r40.zw, r18.xxxy, r40.zzzw
                    ge r40.xy, r40.xyxx, r18.xyxx
                    or r40.xy, r40.xyxx, r40.zwzz
                    or r18.z, r40.y, r40.x
                    mov_sat r18.xy, r18.xyxx
                    mad r40.xy, r18.xyxx, r42.xzxx, r42.ywyy
                    mul r18.x, r29.w, r44.y
                    mad r18.y, r44.x, r29.w, r27.w
                    div r18.x, r18.y, r18.x
                  else 
                    mov r18.z, l(-1)
                  endif 
                  or r18.y, r30.w, r18.z
                  if_z r18.y
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.w, r14.w, l(28), t12.xxxx
                    max r18.x, r18.x, l(0.00006104)
                    and r14.w, r14.w, l(0x0000ffff)
                    if_nz r8.w
                      utof r41.z, r14.w
                      mov r18.yz, l(0,0,0,0)
                      loop 
                        ige r27.w, r18.z, l(8)
                        breakc_nz r27.w
                        dp2 r42.x, icb[r18.z + 0].yxyy, r10.xwxx
                        dp2 r42.y, icb[r18.z + 0].xyxx, r7.xyxx
                        mad r41.xy, r42.xyxx, r15.wwww, r40.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r27.w, r41.xyzx, t9.xxxx, s13, r18.x
                        mad r18.y, r27.w, l(0.125000), r18.y
                        iadd r18.z, r18.z, l(1)
                      endloop 
                    else 
                      utof r40.z, r14.w
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r18.y, r40.xyzx, t9.xxxx, s13, r18.x
                    endif 
                    mul r14.w, r18.y, r18.y
                    mul r14.w, r18.y, r14.w
                  else 
                    mov r14.w, l(1.000000)
                  endif 
                  mul r20.w, r14.w, r20.w
                else 
                  ubfe r14.w, l(4), l(20), r32.w
                  ult r15.w, l(0), r14.w
                  and r15.w, r1.x, r15.w
                  if_nz r15.w
                    iadd r14.w, r14.w, cb2[0].x
                    iadd r14.w, r14.w, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.w, r14.w, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r14.w, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r14.w, l(116), t12.xyzw
                    mad r18.x, |r24.w|, l(-0.200000), l(0.400000)
                    mad r19.xyz, r6.xyzx, r18.xxxx, v7.xyzx
                    dp4 r18.x, r40.xyzw, r19.xyzw
                    dp4 r18.z, r41.xyzw, r19.xyzw
                    lt r27.w, r18.z, r18.x
                    if_z r27.w
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r14.w, l(68), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r14.w, l(84), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r14.w, l(132), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r14.w, l(148), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xy, r14.w, l(164), t12.xyxx
                      dp4 r40.x, r40.xyzw, r19.xyzw
                      dp4 r40.y, r41.xyzw, r19.xyzw
                      div r19.xy, r40.xyxx, r18.zzzz
                      mad r19.xy, r19.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                      add r19.xy, r43.zwzz, r19.xyxx
                      mul r19.xy, r43.xyxx, r19.xyxx
                      div r40.xy, r15.wwww, r42.xzxx
                      add r40.zw, -r40.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                      ge r40.zw, r19.xxxy, r40.zzzw
                      ge r40.xy, r40.xyxx, r19.xyxx
                      or r40.xy, r40.xyxx, r40.zwzz
                      or r19.z, r40.y, r40.x
                      mov_sat r19.xy, r19.xyxx
                      mad r40.xy, r19.xyxx, r42.xzxx, r42.ywyy
                      mul r19.x, r18.z, r44.y
                      mad r18.x, r44.x, r18.z, r18.x
                      div r18.x, r18.x, r19.x
                    else 
                      mov r19.z, l(-1)
                    endif 
                    or r18.z, r27.w, r19.z
                    if_z r18.z
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.w, r14.w, l(28), t12.xxxx
                      max r18.x, r18.x, l(0.00006104)
                      and r14.w, r14.w, l(0x0000ffff)
                      if_nz r8.w
                        utof r19.z, r14.w
                        mov r18.z, l(0)
                        mov r27.w, l(0)
                        loop 
                          ige r29.w, r27.w, l(8)
                          breakc_nz r29.w
                          dp2 r41.x, icb[r27.w + 0].xyxx, r9.xyxx
                          dp2 r41.y, icb[r27.w + 0].yxyy, r9.xzxx
                          mad r19.xy, r41.xyxx, r15.wwww, r40.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.x, r19.xyzx, t9.xxxx, s13, r18.x
                          mad r18.z, r19.x, l(0.125000), r18.z
                          iadd r27.w, r27.w, l(1)
                        endloop 
                      else 
                        utof r40.z, r14.w
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r18.z, r40.xyzx, t9.xxxx, s13, r18.x
                      endif 
                      mul r14.w, r18.z, r18.z
                      mul r14.w, r18.z, r14.w
                    else 
                      mov r14.w, l(1.000000)
                    endif 
                    mul r20.w, r14.w, r20.w
                  endif 
                endif 
                mad r14.w, -r25.w, r6.w, l(1.000000)
                mul r14.w, r14.w, r14.w
                mad r14.w, -r14.w, l(0.620000), l(0.620000)
                add r14.w, -r25.w, r14.w
                mad r14.w, r2.w, r14.w, r25.w
                mul r14.w, r20.w, r14.w
                mov r32.x, r31.x
                lt r15.w, l(0.000000), r24.w
                mad r19.xyz, r14.wwww, r32.xyzx, r16.xyzx
                dp3_sat r14.w, r6.xyzx, r39.xyzx
                mad r38.xyz, r38.xyzx, r13.wwww, r4.xyzx
                dp3 r13.w, r38.xyzx, r38.xyzx
                rsq r13.w, r13.w
                mul r38.xyz, r13.wwww, r38.xyzx
                dp3 r13.w, r38.xyzx, r4.xyzx
                dp3 r18.x, r6.xyzx, r38.xyzx
                mad r24.w, |r18.x|, r1.w, -|r18.x|
                mad r18.x, |r18.x|, r24.w, l(1.000000)
                mad r24.w, r14.w, r1.y, r4.w
                mul r18.x, r18.x, r18.x
                mul r18.x, r24.w, r18.x
                rcp r18.x, r18.x
                mul r14.w, r26.w, r14.w
                mul r14.w, r14.w, r18.x
                mul r14.w, r20.w, r14.w
                mad r38.xyz, r14.wwww, r32.xyzx, r30.xyzx
                add_sat r13.w, -r13.w, l(1.000000)
                mul r18.x, r13.w, r13.w
                mul r18.x, r18.x, r18.x
                mul r13.w, r13.w, r18.x
                mul r13.w, r13.w, r14.w
                mad r39.xyz, r13.wwww, r32.xyzx, r29.xyzx
                movc r16.xyz, r15.wwww, r19.xyzx, r16.xyzx
                movc r29.xyz, r15.wwww, r39.xyzx, r29.xyzx
                movc r30.xyz, r15.wwww, r38.xyzx, r30.xyzx
              endif 
            endif 
          endif 
          break 
          case l(2)
          mov r19.xy, r34.zwzz
          mov r19.z, r35.w
          add r19.xyz, r19.xyzx, -v7.xyzx
          dp3 r13.w, r19.xyzx, r19.xyzx
          rsq r13.w, r13.w
          mul r38.xyz, r13.wwww, r19.xyzx
          dp3 r14.w, r6.xyzx, r38.xyzx
          mov_sat r15.w, r14.w
          lt r18.x, l(0.000000), r15.w
          if_nz r18.x
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r11.w, l(112), t12.yzwx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r11.w, l(128), t12.zxyw
            mov r40.xyz, r38.xyzx
            mov r40.w, r39.y
            dp4 r18.x, r40.xyzw, r17.xyzw
            lt r20.w, r18.x, l(1.000000)
            if_nz r20.w
              mov r41.xyz, l(1.000000,1.000000,1.000000,0)
              mov r20.w, l(0)
            else 
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r11.w, l(172), t12.yzwx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r11.w, l(188), t12.wxyz
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r11.w, l(204), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r24.w, r11.w, l(236), t12.xxxx
              add r45.xyz, r31.yzwy, -v7.xyzx
              mul r25.w, r34.x, r34.x
              dp3 r26.w, r45.xyzx, r45.xyzx
              div r25.w, r25.w, r26.w
              min r25.w, r25.w, l(1.000000)
              mad_sat r33.xy, r18.xxxx, r33.xzxx, r33.ywyy
              mul r33.zw, r33.xxxy, r33.xxxy
              mad r33.xy, r33.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
              mul r33.xy, r33.xyxx, r33.zwzz
              mul r25.w, r25.w, r33.x
              mul r25.w, r33.y, r25.w
              mov r35.w, r36.x
              dp4 r33.x, r35.xyzw, r17.xyzw
              mov r45.xyz, r36.yzwy
              mov r45.w, r37.w
              dp4 r33.y, r45.xyzw, r17.xyzw
              div r20.xy, r33.xyxx, r18.xxxx
              lt r18.x, r42.w, l(0.00048828)
              if_nz r18.x
                mov r43.y, r44.x
                mad_sat r33.xy, |r20.xyxx|, r43.zwzz, r43.xyxx
                mul r33.zw, r33.xxxy, r33.xxxy
                mad r33.xy, r33.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
                mul r33.xy, r33.xyxx, r33.zwzz
                mul r18.x, r33.y, r33.x
              else 
                mov r42.w, r43.y
                mul_sat r33.xyzw, |r20.yyxx|, r42.xyzw
                log r33.xyzw, r33.xyzw
                mul r33.xyzw, r33.xyzw, r43.xxxx
                exp r33.xyzw, r33.xyzw
                add r33.xy, r33.zwzz, r33.xyxx
                log r33.xy, r33.xyxx
                mul r33.xy, r33.xyxx, r44.xxxx
                exp r33.xy, r33.xyxx
                mul r26.w, r33.x, r43.z
                mad r27.w, r43.w, r33.y, l(-1.000000)
                mad r26.w, r43.w, r33.y, -r26.w
                div_sat r26.w, r27.w, r26.w
                mul r27.w, r26.w, r26.w
                mad r26.w, r26.w, l(-2.000000), l(3.000000)
                mul r18.x, r26.w, r27.w
              endif 
              mul r20.w, r18.x, r25.w
              and r18.x, r24.w, l(255)
              if_nz r18.x
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyz, r11.w, l(220), t12.xyzx
                dp3 r24.w, r44.yzwy, r20.xyzx
                dp3 r20.x, r33.xyzx, r20.xyzx
                frc r33.x, r24.w
                frc r33.y, r20.x
                iadd r18.x, r18.x, l(-1)
                utof r33.z, r18.x
                sample_l_indexable(texture2darray)(float,float,float,float) r41.xyz, r33.xyzx, t20.xyzw, s2, l(0.000000)
              else 
                mov r41.xyz, l(1.000000,1.000000,1.000000,0)
              endif 
            endif 
            mov r31.yz, r32.yyzy
            mul r31.xyz, r41.xyzx, r31.xyzx
            lt r18.x, l(0.000000), r20.w
            if_nz r18.x
              ubfe r18.x, l(3), l(27), r32.w
              ine r18.x, r18.x, l(1)
              if_nz r18.x
                mad r18.x, |r14.w|, l(-0.200000), l(0.400000)
                mad r21.xyz, r6.xyzx, r18.xxxx, v7.xyzx
                mov r38.xyz, r37.xyzx
                dp4 r18.x, r38.xyzw, r21.xyzw
                dp4 r20.x, r40.xyzw, r21.xyzw
                ge r20.y, r20.x, r18.x
                if_nz r20.y
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.y, r11.w, l(144), t12.xxxx
                  mov r35.w, r36.x
                  dp4 r33.x, r35.xyzw, r21.xyzw
                  mov r37.xyz, r36.yzwy
                  dp4 r33.y, r37.xyzw, r21.xyzw
                  div r21.xy, r33.xyxx, r20.xxxx
                  mad_sat r21.xy, r21.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  mad r21.xy, r21.xyxx, r39.zwzz, r39.xyxx
                  div r11.w, r18.x, r20.x
                  max r11.w, r11.w, l(0.00006104)
                  and r18.x, r32.w, l(0x0000ffff)
                  if_nz r8.w
                    utof r33.z, r18.x
                    mov r20.xy, l(0,0,0,0)
                    loop 
                      ige r24.w, r20.y, l(8)
                      breakc_nz r24.w
                      dp2 r35.x, icb[r20.y + 0].xyxx, r24.xyxx
                      dp2 r35.y, icb[r20.y + 0].yxyy, r24.xzxx
                      mad r33.xy, r35.xyxx, r34.yyyy, r21.xyxx
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.w, r33.xyzx, t9.xxxx, s13, r11.w
                      mad r20.x, r24.w, l(0.125000), r20.x
                      iadd r20.y, r20.y, l(1)
                    endloop 
                  else 
                    utof r21.z, r18.x
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r20.x, r21.xyzx, t9.xxxx, s13, r11.w
                  endif 
                  mul r11.w, r20.x, r20.x
                  mul r11.w, r20.x, r11.w
                else 
                  mov r11.w, l(1.000000)
                endif 
              else 
                mov r11.w, l(1.000000)
              endif 
              mul r11.w, r11.w, r20.w
              lt r18.x, l(0.000000), r11.w
              if_nz r18.x
                mul r18.x, r1.w, r32.x
                mul r18.x, r15.w, r18.x
                ubfe r20.y, l(4), l(16), r32.w
                ult r20.w, l(0), r20.y
                and r20.w, r1.z, r20.w
                if_nz r20.w
                  iadd r20.y, r20.y, cb2[0].x
                  iadd r20.y, r20.y, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r20.w, r20.y, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r20.y, l(68), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r20.y, l(84), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r20.y, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r20.y, l(116), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r20.y, l(132), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r20.y, l(148), t12.xyzw
                  mad r21.x, |r14.w|, l(-0.200000), l(0.400000)
                  mad r22.xyz, r6.xyzx, r21.xxxx, v7.xyzx
                  dp4 r21.x, r33.xyzw, r22.xyzw
                  dp4 r21.y, r34.xyzw, r22.xyzw
                  dp4 r21.z, r35.xyzw, r22.xyzw
                  dp4 r22.x, r36.xyzw, r22.xyzw
                  lt r22.y, r22.x, r21.z
                  div r21.xy, r21.xyxx, r22.xxxx
                  mad r21.xy, r21.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r21.xy, r38.zwzz, r21.xyxx
                  mul r21.xy, r38.xyxx, r21.xyxx
                  div r32.xy, r20.wwww, r37.xzxx
                  add r33.xy, -r32.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                  ge r33.xy, r21.xyxx, r33.xyxx
                  ge r32.xy, r32.xyxx, r21.xyxx
                  or r32.xy, r32.xyxx, r33.xyxx
                  or r22.z, r32.y, r32.x
                  or r22.y, r22.y, r22.z
                  if_z r22.y
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r22.y, r20.y, l(28), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xy, r20.y, l(164), t12.xyxx
                    mov_sat r21.xy, r21.xyxx
                    mad r33.xy, r21.xyxx, r37.xzxx, r37.ywyy
                    mul r20.y, r22.x, r32.y
                    mad r21.x, r32.x, r22.x, r21.z
                    div r20.y, r21.x, r20.y
                    max r20.y, r20.y, l(0.00006104)
                    and r21.x, r22.y, l(0x0000ffff)
                    if_nz r8.w
                      utof r22.z, r21.x
                      mov r21.yz, l(0,0,0,0)
                      loop 
                        ige r24.w, r21.z, l(8)
                        breakc_nz r24.w
                        dp2 r32.x, icb[r21.z + 0].xyxx, r25.xyxx
                        dp2 r32.y, icb[r21.z + 0].yxyy, r25.xzxx
                        mad r22.xy, r32.xyxx, r20.wwww, r33.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.x, r22.xyzx, t9.xxxx, s13, r20.y
                        mad r21.y, r22.x, l(0.125000), r21.y
                        iadd r21.z, r21.z, l(1)
                      endloop 
                    else 
                      utof r33.z, r21.x
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.y, r33.xyzx, t9.xxxx, s13, r20.y
                    endif 
                    mul r20.y, r21.y, r21.y
                    mul r20.y, r21.y, r20.y
                  else 
                    mov r20.y, l(1.000000)
                  endif 
                  mul r11.w, r11.w, r20.y
                else 
                  ubfe r20.y, l(4), l(20), r32.w
                  ult r20.w, l(0), r20.y
                  and r20.w, r1.x, r20.w
                  if_nz r20.w
                    iadd r20.y, r20.y, cb2[0].x
                    iadd r20.y, r20.y, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r20.w, r20.y, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r20.y, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r20.y, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r20.y, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r20.y, l(116), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r20.y, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r20.y, l(148), t12.xyzw
                    mad r21.x, |r14.w|, l(-0.200000), l(0.400000)
                    mad r23.xyz, r6.xyzx, r21.xxxx, v7.xyzx
                    dp4 r22.x, r32.xyzw, r23.xyzw
                    dp4 r22.y, r33.xyzw, r23.xyzw
                    dp4 r21.x, r34.xyzw, r23.xyzw
                    dp4 r21.z, r35.xyzw, r23.xyzw
                    lt r22.z, r21.z, r21.x
                    div r22.xy, r22.xyxx, r21.zzzz
                    mad r22.xy, r22.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r22.xy, r37.zwzz, r22.xyxx
                    mul r22.xy, r37.xyxx, r22.xyxx
                    div r23.xy, r20.wwww, r36.xzxx
                    add r32.xy, -r23.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                    ge r32.xy, r22.xyxx, r32.xyxx
                    ge r23.xy, r23.xyxx, r22.xyxx
                    or r23.xy, r23.xyxx, r32.xyxx
                    or r23.x, r23.y, r23.x
                    or r22.z, r22.z, r23.x
                    if_z r22.z
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r22.z, r20.y, l(28), t12.xxxx
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.xy, r20.y, l(164), t12.xyxx
                      mov_sat r22.xy, r22.xyxx
                      mad r32.xy, r22.xyxx, r36.xzxx, r36.ywyy
                      mul r20.y, r21.z, r23.y
                      mad r21.x, r23.x, r21.z, r21.x
                      div r20.y, r21.x, r20.y
                      max r20.y, r20.y, l(0.00006104)
                      and r21.x, r22.z, l(0x0000ffff)
                      if_nz r8.w
                        utof r22.z, r21.x
                        mov r21.z, l(0)
                        mov r23.x, l(0)
                        loop 
                          ige r23.y, r23.x, l(8)
                          breakc_nz r23.y
                          dp2 r33.x, icb[r23.x + 0].xyxx, r26.xyxx
                          dp2 r33.y, icb[r23.x + 0].yxyy, r26.xzxx
                          mad r22.xy, r33.xyxx, r20.wwww, r32.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.x, r22.xyzx, t9.xxxx, s13, r20.y
                          mad r21.z, r22.x, l(0.125000), r21.z
                          iadd r23.x, r23.x, l(1)
                        endloop 
                      else 
                        utof r32.z, r21.x
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.z, r32.xyzx, t9.xxxx, s13, r20.y
                      endif 
                      mul r20.y, r21.z, r21.z
                      mul r20.y, r21.z, r20.y
                    else 
                      mov r20.y, l(1.000000)
                    endif 
                    mul r11.w, r11.w, r20.y
                  endif 
                endif 
                mad r20.y, -r15.w, r6.w, l(1.000000)
                mul r20.y, r20.y, r20.y
                mad r20.y, -r20.y, l(0.620000), l(0.620000)
                add r20.y, -r15.w, r20.y
                mad r20.y, r2.w, r20.y, r15.w
                mul r20.y, r11.w, r20.y
                lt r14.w, l(0.000000), r14.w
                mad r22.xyz, r20.yyyy, r31.xyzx, r16.xyzx
                mad r19.xyz, r19.xyzx, r13.wwww, r4.xyzx
                dp3 r13.w, r19.xyzx, r19.xyzx
                rsq r13.w, r13.w
                mul r19.xyz, r13.wwww, r19.xyzx
                dp3 r13.w, r19.xyzx, r4.xyzx
                dp3 r19.x, r6.xyzx, r19.xyzx
                mad r19.y, |r19.x|, r1.w, -|r19.x|
                mad r19.x, |r19.x|, r19.y, l(1.000000)
                mad r15.w, r15.w, r1.y, r4.w
                mul r19.x, r19.x, r19.x
                mul r15.w, r15.w, r19.x
                rcp r15.w, r15.w
                mul r15.w, r18.x, r15.w
                mul r11.w, r11.w, r15.w
                mul r11.w, r11.w, l(0.250000)
                mad r19.xyz, r11.wwww, r31.xyzx, r30.xyzx
                add_sat r13.w, -r13.w, l(1.000000)
                mul r15.w, r13.w, r13.w
                mul r15.w, r15.w, r15.w
                mul r13.w, r13.w, r15.w
                mul r11.w, r11.w, r13.w
                mad r23.xyz, r11.wwww, r31.xyzx, r29.xyzx
                movc r16.xyz, r14.wwww, r22.xyzx, r16.xyzx
                movc r29.xyz, r14.wwww, r23.xyzx, r29.xyzx
                movc r30.xyz, r14.wwww, r19.xyzx, r30.xyzx
              endif 
            endif 
          endif 
          break 
          default 
          break 
        endswitch 
      endif 
    endif 
  endloop 
  mov r12.yzw, r16.xxyz
  mov r27.xyz, r29.xyzx
  mov r28.xyz, r30.xyzx
  iadd r7.w, r7.w, l(32)
endloop 
add r1.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r1.xyz, r1.xyzx, r27.xyzx
mad r1.xyz, r28.xyzx, r2.xyzx, r1.xyzx
mad r0.xyz, r12.yzwy, r0.xyzx, r1.xyzx
dp3 r1.x, r0.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
max r1.x, r1.x, l(0.000100)
max r1.w, r1.x, cb1[85].x
mul r1.xyz, r1.wwww, r3.xyzx
mov r3.w, l(1.000000)
movc r1.xyzw, cb0[19].yyyy, r1.xyzw, r3.xyzw
add r0.xyz, r0.xyzx, r1.xyzx
mul r1.w, r1.w, cb0[18].w
max r1.w, r1.w, l(1.000000)
div r1.xyz, r1.xyzx, r1.wwww
dp3_sat r1.x, r1.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
add o0.w, r0.w, r1.x
lt r0.w, l(0.000000), cb2[9].z
if_nz r0.w
  dp3 r0.w, v7.xyzx, v7.xyzx
  rsq r1.x, r0.w
  mul r1.xyz, r1.xxxx, v7.xyzx
  sqrt r0.w, r0.w
  lt r1.w, l(0.000000), cb2[13].w
  if_nz r1.w
    mad r2.xy, r0.wwww, cb2[15].xyxx, cb2[14].zwzz
    mul r2.xy, r2.xyxx, cb2[16].xyxx
    lt r1.w, l(0.010000), |v7.z|
    mul r2.zw, v7.zzzz, cb2[15].zzzw
    mul r3.xy, r2.zwzz, l(-1.442695, -1.442695, 0.000000, 0.000000)
    exp r3.xy, r3.xyxx
    add r3.xy, -r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    div r2.zw, r3.xxxy, r2.zzzw
    mul r2.zw, r2.zzzw, r2.xxxy
    movc r2.xy, r1.wwww, r2.zwzz, r2.xyxx
    mul r2.xzw, r2.xxxx, cb2[12].xxyz
    exp r2.xzw, r2.xxzw
    mul r3.xyz, r2.yyyy, cb2[12].xyzx
    exp r3.xyz, r3.xyzx
    add r3.xyz, -r2.xzwx, r3.xyzx
    mad r2.xyz, cb2[13].wwww, r3.xyzx, r2.xzwx
  else 
    mad r1.w, r0.w, cb2[15].x, cb2[14].z
    mul r1.w, r1.w, cb2[16].x
    lt r2.w, l(0.010000), |v7.z|
    mul r3.x, v7.z, cb2[15].z
    mul r3.y, r3.x, l(-1.442695)
    exp r3.y, r3.y
    add r3.y, -r3.y, l(1.000000)
    div r3.x, r3.y, r3.x
    mul r3.x, r1.w, r3.x
    movc r1.w, r2.w, r3.x, r1.w
    mul r3.xyz, r1.wwww, cb2[12].xyzx
    exp r2.xyz, r3.xyzx
  endif 
  mad r2.xyz, r2.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r2.xyz, r2.xyzx, -cb2[9].zzzz
  dp3 r1.x, cb2[7].yzwy, -r1.xyzx
  mad r1.y, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r1.z, cb2[8].w, -r1.x, l(1.000000)
  mul r1.z, r1.z, r1.z
  mul r1.z, r1.z, l(12.566371)
  div r1.y, r1.y, r1.z
  add r0.w, r0.w, -cb2[10].w
  mul_sat r0.w, r0.w, cb2[11].w
  mul r0.w, r0.w, r1.y
  mov_sat r1.x, r1.x
  mad r1.x, r1.x, r1.x, l(1.000000)
  mad r1.x, r1.x, l(0.05968310), l(-1.000000)
  mad r1.x, cb2[8].z, r1.x, l(1.000000)
  mul r1.yzw, r0.wwww, cb2[11].xxyz
  mad r1.xyz, r1.xxxx, cb2[10].xyzx, r1.yzwy
  mul r1.xyz, r1.xyzx, cb2[9].wwww
  add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r1.xyz, r1.xyzx, r3.xyzx
  mad r1.xyz, r0.xyzx, r2.xyzx, r1.xyzx
else 
  mul r0.w, v7.z, cb2[6].x
  mad r1.w, cb2[6].x, v7.z, cb2[5].x
  lt r2.x, |r0.w|, l(0.000100)
  min r2.y, r1.w, l(64.000000)
  mul r2.y, r2.y, l(1.442695)
  exp r2.y, r2.y
  mov_sat r2.z, cb2[6].z
  lt r2.w, r1.w, l(0.000000)
  add r1.w, r1.w, l(1.000000)
  movc r1.w, r2.w, r2.y, r1.w
  add r1.w, r1.w, -cb2[6].z
  movc r0.w, r2.x, l(1.000000), r0.w
  div r0.w, r1.w, r0.w
  movc r0.w, r2.x, r2.z, r0.w
  mul r0.w, r0.w, cb2[5].z
  dp3 r1.w, v7.xyzx, v7.xyzx
  sqrt r2.x, r1.w
  mad r0.w, r0.w, r2.x, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  rsq r1.w, r1.w
  mul r2.xyz, r1.wwww, v7.xyzx
  dp3 r1.w, cb2[7].yzwy, r2.xyzx
  mad_sat r1.w, cb2[8].y, r1.w, cb2[8].x
  add r2.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r2.xyzw, r1.wwww, r2.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r2.w
  add r2.xyz, -r0.xyzx, r2.xyzx
  mad r1.xyz, r0.wwww, r2.xyzx, r0.xyzx
endif 
mul r0.xyz, r1.xyzx, cb1[85].yyyy
ge r1.xyz, r0.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.xyz, r0.xyzx, r1.xyzx
min o0.xyz, r0.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
ret 
// Approximately 2801 instruction slots used
