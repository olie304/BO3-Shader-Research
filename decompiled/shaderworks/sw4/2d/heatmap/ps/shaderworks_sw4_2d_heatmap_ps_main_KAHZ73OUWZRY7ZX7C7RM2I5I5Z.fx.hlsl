// ---- Created with 3Dmigoto v1.2.45 on Thu Jul 15 15:40:36 2021

cbuffer _Globals : register(b0)
{
  float4 flagParams : packoffset(c0);
  float4 colorObjMin : packoffset(c1);
  float4 colorObjMax : packoffset(c2);
  float colorObjMinBaseBlend : packoffset(c3);
  float colorObjMaxBaseBlend : packoffset(c3.y);
  float2 uvScroll : packoffset(c3.z);
  float4 detailScale : packoffset(c4);
  float4 detailScale1 : packoffset(c5);
  float4 detailScale2 : packoffset(c6);
  float4 detailScale3 : packoffset(c7);
  float4 alphaRevealParms : packoffset(c8);
  float4 colorDetailScale : packoffset(c9);
  float Power : packoffset(c10);
  float NoiseSpeed : packoffset(c10.y);
  float NoiseScale : packoffset(c10.z);
  float4 HeatmapColor : packoffset(c11);
  float4 HeatmapNightColor : packoffset(c12);
  float4 LineColor : packoffset(c13);
}

cbuffer GenericsCBuffer : register(b3)
{
  float4 scriptVector0 : packoffset(c0);
  float4 scriptVector1 : packoffset(c1);
  float4 scriptVector2 : packoffset(c2);
  float4 scriptVector3 : packoffset(c3);
  float4 scriptVector4 : packoffset(c4);
  float4 scriptVector5 : packoffset(c5);
  float4 scriptVector6 : packoffset(c6);
  float4 scriptVector7 : packoffset(c7);
  float4 weaponParam0 : packoffset(c8);
  float4 weaponParam1 : packoffset(c9);
  float4 weaponParam2 : packoffset(c10);
  float4 weaponParam3 : packoffset(c11);
  float4 weaponParam4 : packoffset(c12);
  float4 weaponParam5 : packoffset(c13);
  float4 weaponParam6 : packoffset(c14);
  float4 weaponParam7 : packoffset(c15);
}

SamplerState FadeMap_Sampler_s : register(s1);
SamplerState heatmapSampler_C3_P0_sampler_s : register(s2);
SamplerState C004_File_Sampler_s : register(s3);
Texture2D<float4> FadeMap : register(t0);
Texture2D<float4> heatmapSampler_C3_P0 : register(t6);
Texture2D<float4> C004_File : register(t7);


// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main( 
  float4 v0 : SV_POSITION0,
  float4 v1 : TEXCOORD0,
  float2 v2 : TEXCOORD1,
  out float4 o0 : SV_TARGET0)
{
  float4 r0,r1,r2,r3,r4,r5,r6;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xy = float2(8,8) * v2.xy;
  r0.x = r0.x + r0.y;
  r0.x = scriptVector0.x * NoiseSpeed + r0.x;
  r1.z = scriptVector0.x * NoiseSpeed;
  r1.xy = float2(8,8) * v2.xy;
  r0.xyz = r0.xxx * float3(0.333333343,0.333333343,0.333333343) + r1.zxy;
  r0.xyz = floor(r0.xyz);
  r0.w = r0.y + r0.z;
  r0.w = r0.w + r0.x;
  r2.xyz = -r0.www * float3(0.166666672,0.166666672,0.166666672) + r0.yzx;
  r1.xyz = -r2.xyz + r1.xyz;
  r2.xyz = cmp(r1.yzx >= r1.zxy);
  r3.xyz = r2.yzx ? float3(1,1,1) : 0;
  r2.xyz = r2.xyz ? float3(-1,-1,-1) : float3(-0,-0,-0);
  r2.xyz = r3.xyz + r2.xyz;
  r3.xyz = min(float3(0,0,0), r2.xyz);
  r2.xyz = max(float3(0,0,0), r2.xyz);
  r3.xyz = float3(1,1,1) + r3.xyz;
  r4.xyz = r3.xyz + r0.xyz;
  r3.xyz = -r3.yzx + r1.xyz;
  r3.xyz = float3(0.333333343,0.333333343,0.333333343) + r3.xyz;
  r4.xyz = float3(0.234938487,0.234938487,0.234938487) * r4.xyz;
  r4.xyz = frac(r4.xyz);
  r4.xyz = r4.xyz * r4.xyz;
  r5.xyz = float3(41.8130379,25.9578438,35.528923) * r4.zxy;
  r5.xyz = r4.yzx * float3(23.9401531,46.2553978,37.4595146) + r5.xyz;
  r4.xyz = r4.xyz * float3(31.3659344,33.5974617,29.6458817) + r5.xyz;
  r4.xyz = frac(r4.xyz);
  r4.xyz = float3(-0.5,-0.5,-0.5) + r4.xyz;
  r0.w = dot(r4.xyz, r4.xyz);
  r0.w = rsqrt(r0.w);
  r4.xyz = r4.xyz * r0.www;
  r4.z = dot(r3.xyz, r4.xyz);
  r3.z = dot(r3.xyz, r3.xyz);
  r5.xyz = r2.xyz + r0.xyz;
  r2.xyz = -r2.yzx + r1.xyz;
  r2.xyz = float3(0.166666672,0.166666672,0.166666672) + r2.xyz;
  r5.xyz = float3(0.234938487,0.234938487,0.234938487) * r5.xyz;
  r5.xyz = frac(r5.xyz);
  r5.xyz = r5.xyz * r5.xyz;
  r6.xyz = float3(41.8130379,25.9578438,35.528923) * r5.zxy;
  r6.xyz = r5.yzx * float3(23.9401531,46.2553978,37.4595146) + r6.xyz;
  r5.xyz = r5.xyz * float3(31.3659344,33.5974617,29.6458817) + r6.xyz;
  r5.xyz = frac(r5.xyz);
  r5.xyz = float3(-0.5,-0.5,-0.5) + r5.xyz;
  r0.w = dot(r5.xyz, r5.xyz);
  r0.w = rsqrt(r0.w);
  r5.xyz = r5.xyz * r0.www;
  r4.y = dot(r2.xyz, r5.xyz);
  r3.y = dot(r2.xyz, r2.xyz);
  r3.x = dot(r1.xyz, r1.xyz);
  r2.xyz = float3(-0.5,-0.5,-0.5) + r1.xyz;
  r3.w = dot(r2.xyz, r2.xyz);
  r3.xyzw = float4(0.600000024,0.600000024,0.600000024,0.600000024) + -r3.xyzw;
  r3.xyzw = max(float4(0,0,0,0), r3.xyzw);
  r3.xyzw = r3.xyzw * r3.xyzw;
  r3.xyzw = r3.xyzw * r3.xyzw;
  r5.xyz = float3(0.234938487,0.234938487,0.234938487) * r0.xyz;
  r0.xyz = float3(1,1,1) + r0.xyz;
  r0.xyz = float3(0.234938487,0.234938487,0.234938487) * r0.xyz;
  r0.xyz = frac(r0.xyz);
  r0.xyz = r0.xyz * r0.xyz;
  r5.xyz = frac(r5.xyz);
  r5.xyz = r5.xyz * r5.xyz;
  r6.xyz = float3(41.8130379,25.9578438,35.528923) * r5.zxy;
  r6.xyz = r5.yzx * float3(23.9401531,46.2553978,37.4595146) + r6.xyz;
  r5.xyz = r5.xyz * float3(31.3659344,33.5974617,29.6458817) + r6.xyz;
  r5.xyz = frac(r5.xyz);
  r5.xyz = float3(-0.5,-0.5,-0.5) + r5.xyz;
  r0.w = dot(r5.xyz, r5.xyz);
  r0.w = rsqrt(r0.w);
  r5.xyz = r5.xyz * r0.www;
  r4.x = dot(r1.xyz, r5.xyz);
  r1.xyz = float3(41.8130379,25.9578438,35.528923) * r0.zxy;
  r1.xyz = r0.yzx * float3(23.9401531,46.2553978,37.4595146) + r1.xyz;
  r0.xyz = r0.xyz * float3(31.3659344,33.5974617,29.6458817) + r1.xyz;
  r0.xyz = frac(r0.xyz);
  r0.xyz = float3(-0.5,-0.5,-0.5) + r0.xyz;
  r0.w = dot(r0.xyz, r0.xyz);
  r0.w = rsqrt(r0.w);
  r0.xyz = r0.xyz * r0.www;
  r4.w = dot(r2.xyz, r0.xyz);
  r0.x = dot(r3.xyzw, r4.xyzw);
  r0.x = -r0.x * 32 + 1;
  r0.x = r0.x * NoiseScale + -NoiseScale;
  r0.x = 1 + r0.x;
  r0.y = heatmapSampler_C3_P0.Sample(heatmapSampler_C3_P0_sampler_s, v2.xy).w;
  r0.z = -r0.y * r0.x + 1;
  r1.w = r0.y * r0.x;
  r0.x = 6.28318024 * scriptVector0.y;
  r0.y = 0.00400000019 + v2.x;
  r0.x = r0.y * 6.28318024 + -r0.x;
  r0.x = -2.96979022 + r0.x;
  r0.x = cos(r0.x);
  r0.y = cmp(0 < scriptVector0.z);
  r0.w = cmp(scriptVector0.z < 0);
  r0.y = (int)-r0.y + (int)r0.w;
  r0.y = (int)r0.y;
  r0.y = 0.100000001 * r0.y;
  r0.w = cmp(abs(scriptVector0.z) < 0.100000001);
  r0.y = r0.w ? r0.y : scriptVector0.z;
  sincos(r0.y, r2.x, r3.x);
  r0.w = r2.x / r3.x;
  r0.x = -r0.x / r0.w;
  r2.x = max(1, abs(r0.x));
  r2.x = 1 / r2.x;
  r2.y = min(1, abs(r0.x));
  r2.x = r2.y * r2.x;
  r2.y = r2.x * r2.x;
  r2.z = r2.y * 0.0208350997 + -0.0851330012;
  r2.z = r2.y * r2.z + 0.180141002;
  r2.z = r2.y * r2.z + -0.330299497;
  r2.y = r2.y * r2.z + 0.999866009;
  r2.z = r2.x * r2.y;
  r2.z = r2.z * -2 + 1.57079637;
  r2.w = cmp(1 < abs(r0.x));
  r0.x = min(1, r0.x);
  r0.x = cmp(r0.x < -r0.x);
  r2.z = r2.w ? r2.z : 0;
  r2.x = r2.x * r2.y + r2.z;
  r0.x = r0.x ? -r2.x : r2.x;
  r2.x = v2.x * 6.28318024 + -2.96979022;
  r2.x = -scriptVector0.y * 6.28318024 + r2.x;
  r2.x = cos(r2.x);
  r0.w = -r2.x / r0.w;
  r2.x = max(1, abs(r0.w));
  r2.x = 1 / r2.x;
  r2.y = min(1, abs(r0.w));
  r2.x = r2.y * r2.x;
  r2.y = r2.x * r2.x;
  r2.z = r2.y * 0.0208350997 + -0.0851330012;
  r2.z = r2.y * r2.z + 0.180141002;
  r2.z = r2.y * r2.z + -0.330299497;
  r2.y = r2.y * r2.z + 0.999866009;
  r2.z = r2.x * r2.y;
  r2.z = r2.z * -2 + 1.57079637;
  r2.w = cmp(1 < abs(r0.w));
  r0.w = min(1, r0.w);
  r0.w = cmp(r0.w < -r0.w);
  r2.z = r2.w ? r2.z : 0;
  r2.x = r2.x * r2.y + r2.z;
  r0.w = r0.w ? -r2.x : r2.x;
  r0.xw = float2(1.57079995,1.57079995) + r0.xw;
  r0.w = 0.318310142 * r0.w;
  r0.x = r0.x * 0.318310142 + -r0.w;
  r0.x = 249.999985 * r0.x;
  r0.w = r0.x * v2.x + -r0.w;
  r2.x = -r0.x * v2.x + v2.y;
  r0.x = r0.x * r0.x + 1;
  r0.x = sqrt(r0.x);
  r0.w = r2.x + r0.w;
  r0.x = r0.w / r0.x;
  r0.w = cmp(0 < r0.y);
  r0.y = cmp(r0.y < 0);
  r0.y = (int)-r0.w + (int)r0.y;
  r0.y = (int)r0.y;
  r0.y = -r0.x * r0.y;
  r0.x = -abs(r0.x) * 100 + 1;
  r0.x = max(0, r0.x);
  r0.y = saturate(1000 * r0.y);
  r0.w = r0.y * 0.5 + 0.5;
  r2.xyzw = C004_File.Sample(C004_File_Sampler_s, v2.xy).xyzw;
  r2.xyzw = r2.xyzw * r0.wwww;
  r2.xyzw = r2.xyzw * r0.zzzz;
  r0.z = Power * r1.w;
  r0.z = 1.44269502 * r0.z;
  r0.z = exp2(r0.z);
  r0.z = -1 + r0.z;
  r3.xyz = -HeatmapNightColor.xyz + HeatmapColor.xyz;
  r3.xyz = r0.yyy * r3.xyz + HeatmapNightColor.xyz;
  r0.y = 1 + -r0.y;
  r0.y = r0.y * 0.600000024 + 0.400000006;
  r1.xyz = r3.xyz * r0.zzz;
  r1.xyzw = r1.xyzw * r1.wwww + r2.xyzw;
  r2.xyz = r1.xyz;
  r0.z = 1 + -r1.w;
  r0.w = FadeMap.Sample(FadeMap_Sampler_s, v2.xy).x;
  r0.w = 1 + -r0.w;
  r1.x = 0.25 * r0.w;
  r3.w = r1.x * r0.y;
  r3.xyz = float3(0,0,0);
  r3.xyzw = r3.xyzw * r0.zzzz;
  r2.w = 1;
  r1.xyzw = r2.xyzw * r1.wwww + r3.xyzw;
  r0.y = r0.x * r0.w;
  r0.x = -r0.x * r0.w + 1;
  r2.xyzw = LineColor.xyzw * r0.yyyy;
  r0.xyzw = r1.xyzw * r0.xxxx + r2.xyzw;
  o0.xyzw = v1.xyzw * r0.xyzw;
  return;
}