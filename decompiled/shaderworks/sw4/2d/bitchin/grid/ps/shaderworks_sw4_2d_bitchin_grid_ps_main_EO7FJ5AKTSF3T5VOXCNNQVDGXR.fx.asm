//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:40:32 2021
//
//
// Buffer Definitions: 
//
// cbuffer GenericsCBuffer
// {
//
//   float4 scriptVector0;              // Offset:    0 Size:    16
//   float4 scriptVector1;              // Offset:   16 Size:    16 [unused]
//   float4 scriptVector2;              // Offset:   32 Size:    16 [unused]
//   float4 scriptVector3;              // Offset:   48 Size:    16 [unused]
//   float4 scriptVector4;              // Offset:   64 Size:    16 [unused]
//   float4 scriptVector5;              // Offset:   80 Size:    16 [unused]
//   float4 scriptVector6;              // Offset:   96 Size:    16 [unused]
//   float4 scriptVector7;              // Offset:  112 Size:    16 [unused]
//   float4 weaponParam0;               // Offset:  128 Size:    16 [unused]
//   float4 weaponParam1;               // Offset:  144 Size:    16 [unused]
//   float4 weaponParam2;               // Offset:  160 Size:    16 [unused]
//   float4 weaponParam3;               // Offset:  176 Size:    16 [unused]
//   float4 weaponParam4;               // Offset:  192 Size:    16 [unused]
//   float4 weaponParam5;               // Offset:  208 Size:    16 [unused]
//   float4 weaponParam6;               // Offset:  224 Size:    16 [unused]
//   float4 weaponParam7;               // Offset:  240 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// codeTexture0_C4_P0_sampler        sampler      NA          NA             s1      1 
// codeTexture0_C4_P0                texture  float4          2d             t0      1 
// GenericsCBuffer                   cbuffer      NA          NA            cb3      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB3[1], immediateIndexed
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xy
dcl_output o0.xyzw
dcl_temps 3
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v2.xyxx, t0.xyzw, s1
max r1.x, r0.y, r0.x
max r1.x, r0.z, r1.x
min r1.y, r0.y, r0.x
min r1.y, r0.z, r1.y
add r1.x, r1.y, r1.x
mul r1.y, r1.x, cb3[0].x
mad r1.x, r1.x, l(0.250000), l(0.500000)
mad r1.y, r1.y, l(0.330000), l(1.000000)
add r1.zw, v2.xxxy, l(0.000000, 0.000000, -0.500000, -0.500000)
div r1.yz, r1.zzwz, r1.yyyy
add r1.yz, r1.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
mul r1.yz, r1.yyzy, l(0.000000, 20.000000, 20.000000, 0.000000)
ge r2.xy, r1.yzyy, -r1.yzyy
frc r1.yz, |r1.yyzy|
movc r1.yz, r2.xxyx, r1.yyzy, -r1.yyzy
max r1.yz, r1.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
add r1.yz, r1.yyzy, l(0.000000, -0.500000, -0.500000, 0.000000)
mul r1.yz, |r1.yyzy|, l(0.000000, 4.000000, 4.000000, 0.000000)
min r1.yz, r1.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
add r1.yz, -r1.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
max r1.y, r1.z, r1.y
mul r1.y, r0.w, r1.y
mul r1.x, r1.x, r1.y
add_sat r1.y, cb3[0].x, cb3[0].x
add r1.y, r1.y, r1.y
min r1.y, r1.y, l(1.000000)
mul r1.w, r1.y, r1.x
mov r1.xyz, l(0.357143,1.000000,0.939732,0)
add r0.xyzw, r0.xyzw, -r1.xyzw
add r2.x, cb3[0].x, l(-0.500000)
add_sat r2.x, r2.x, r2.x
add r2.x, -r2.x, v2.y
add_sat r2.xy, r2.xxxx, l(0.010000, 0.500000, 0.000000, 0.000000)
mul r2.x, r2.x, l(40.000000)
add r2.y, r2.y, l(-0.500000)
mul r2.y, |r2.y|, l(54.630470)
min r2.xy, r2.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
add r2.xy, -r2.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
mad r0.xyzw, r2.xxxx, r0.xyzw, r1.xyzw
add r0.xyz, r2.yyyy, r0.xyzx
mul o0.xyzw, r0.xyzw, v1.xyzw
ret 
// Approximately 43 instruction slots used
