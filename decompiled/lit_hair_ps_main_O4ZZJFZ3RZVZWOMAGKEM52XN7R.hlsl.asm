//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:37:04 2021
//
//
// Note: shader requires additional functionality:
//       Early depth-stencil
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float baseNormalHeight;            // Offset:  160 Size:     4
//   float2 glossRange;                 // Offset:  164 Size:     8
//   float anisotropy;                  // Offset:  172 Size:     4
//   float3 specColorTint;              // Offset:  176 Size:    12
//   bool useAlphaControls;             // Offset:  188 Size:     4
//   float zFeatherDistance;            // Offset:  192 Size:     4
//   float falloffBegin;                // Offset:  196 Size:     4
//   float falloffEnd;                  // Offset:  200 Size:     4
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16
//   float4 debugNormalOverride;        // Offset:  960 Size:    16
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// colorSampler                      sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// specColorSampler                  sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// normalSampler                     sampler      NA          NA             s5      1 
// aoSampler                         sampler      NA          NA             s6      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// floatZSampler                     texture  float4          2d             t0      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// colorMap                          texture  float4          2d            t21      1 
// normalMap                         texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// glossMap                          texture  float4          2d            t24      1 
// aoMap                             texture  float4          2d            t25      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// gOit_Pixels                           UAV    uint          2d             u6      1 
// gOit_Nodes                            UAV   uint2     2darray             u7      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyz 
// COLOR                    1   x           1     NONE   float       
// TEXCOORD                 0    yz         1     NONE   float    yz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// OFFPOSITION              0   xyz         5     NONE   float   xyz 
// SV_IsFrontFace           0   x           6    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | forceEarlyDepthStencil
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[13], immediateIndexed
dcl_constantbuffer CB1[86], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2darray (float,float,float,float) t31
dcl_uav_typed_texture2d (uint,uint,uint,uint) u6
dcl_uav_typed_texture2darray (uint,uint,uint,uint) u7
dcl_input_ps_siv linear noperspective v0.xyz, position
dcl_input_ps linear v1.yz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps_sgv constant v6.x, is_front_face
dcl_output o0.xyzw
dcl_temps 67
dcl_indexableTemp x0[4], 4
dcl_indexableTemp x1[4], 4
dcl_indexableTemp x2[4], 4
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.yzyy, t21.xyzw, s1
lt r1.x, l(0.000000), cb1[64].w
if_nz r1.x
  ftoi r1.x, cb1[64].w
  lod r1.y, v1.yzyy, t21.y, s1
  lod r1.z, v1.yzyy, t21.x, s1
  lt r1.y, r1.y, r1.z
  lt r1.z, l(0.000000), r1.z
  and r2.xyz, r1.xxxx, l(1, 2, 4, 0)
  movc r3.xyz, r2.xxxx, l(1.000000,0,1.000000,0), r0.xyzx
  movc r2.xyw, r2.yyyy, l(0,1.000000,0,1.000000), r0.xyxz
  movc r1.xzw, r1.zzzz, r3.xxyz, r2.xxyw
  movc r2.xyz, r2.zzzz, l(0,1.000000,0,0), r0.xyzx
  movc r0.xyz, r1.yyyy, r1.xzwx, r2.xyzx
endif 
add r1.x, -r0.w, cb1[59].x
mad r1.w, cb1[59].w, r1.x, r0.w
eq r0.w, r1.w, l(0.000000)
if_nz r0.w
  mov o0.xyzw, l(0,0,0,0)
  ret 
endif 
sample_indexable(texture2d)(float,float,float,float) r0.w, v1.yzyy, t25.yzwx, s6
sample_indexable(texture2d)(float,float,float,float) r2.x, v1.yzyy, t24.xyzw, s3
add r2.y, -cb0[10].y, cb0[10].z
mul r2.z, r2.y, r2.x
mad r2.x, r2.x, r2.y, cb0[10].y
mad r2.z, r2.z, l(0.500000), cb0[10].y
mul_sat r2.xz, r2.xxzx, l(0.05882353, 0.000000, 0.05882353, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r3.xyz, v1.yzyy, t22.xyzw, s5
add r3.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.000000, 0.000000)
mad r3.xyz, cb0[10].xxxx, r3.xyzx, l(0.500000, 0.500000, 0.000000, 0.000000)
mad r3.xy, r3.xyxx, l(1.99218750, 1.99218750, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r2.w, r3.xyxx, r3.xyxx
add r2.w, -r2.w, l(1.000000)
max r2.w, r2.w, l(0.000000)
sqrt r2.w, r2.w
mul r3.z, r3.z, r3.z
mul r3.z, r3.z, l(0.33333334)
min r3.z, r3.z, l(1.000000)
movc r3.w, v6.x, l(1.000000), l(-1.000000)
dp3 r4.x, v2.xyzx, v2.xyzx
rsq r4.x, r4.x
mul r4.xyz, r4.xxxx, v2.xyzx
mul r4.xyz, r3.wwww, r4.xyzx
dp3 r4.w, v3.xyzx, v3.xyzx
rsq r4.w, r4.w
mul r5.xyz, r4.wwww, v3.xyzx
mul r5.xyz, r3.wwww, r5.xyzx
dp3 r4.w, v4.xyzx, v4.xyzx
rsq r4.w, r4.w
mul r6.xyz, r4.wwww, v4.xyzx
mul r6.xyz, r3.wwww, r6.xyzx
mul r2.xz, r2.xxzx, l(-17.000000, 0.000000, -17.000000, 0.000000)
exp r2.x, r2.x
add r2.x, r2.x, r3.z
log r2.x, r2.x
exp r2.z, r2.z
add r2.z, r2.z, r3.z
log r2.z, r2.z
mul r2.xz, r2.xxzx, l(-0.05882353, 0.000000, -0.05882353, 0.000000)
mul r7.xyz, r3.yyyy, r6.xyzx
mad r3.xyw, r5.xyxz, r3.xxxx, r7.xyxz
mad r3.xyw, r4.xyxz, r2.wwww, r3.xyxw
dp3 r2.w, r3.xywx, r3.xywx
rsq r2.w, r2.w
mul r3.xyw, r2.wwww, r3.xyxw
mad r2.y, cb1[62].x, r2.y, cb0[10].y
mul_sat r2.y, r2.y, l(0.05882353)
mul r2.y, r2.y, l(-17.000000)
exp r2.y, r2.y
add r2.y, r2.y, r3.z
log r2.y, r2.y
mul r2.y, r2.y, l(-0.05882353)
max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
add r7.xyz, -r0.xyzx, cb1[58].xyzx
mad r0.xyz, cb1[58].wwww, r7.xyzx, r0.xyzx
mul r7.y, r2.y, cb1[62].w
add r2.w, -r0.w, cb1[63].x
mad r0.w, cb1[63].w, r2.w, r0.w
movc r8.xyz, v6.xxxx, r4.xyzx, -r4.xyzx
dp3 r2.w, r8.xyzx, r8.xyzx
rsq r2.w, r2.w
mad r8.xyz, r8.xyzx, r2.wwww, -r3.xywx
mad r3.xyz, cb1[60].wwww, r8.xyzx, r3.xywx
ftou r7.zw, v0.xxxy
ge r2.w, v0.z, l(0.984375)
mul r4.w, v0.z, l(1.01587307)
mad r5.w, v0.z, l(64.000000), l(-63.000000)
movc r2.w, r2.w, r5.w, r4.w
max r2.w, r2.w, l(0.00000001)
rcp r2.w, r2.w
dp3 r4.w, -v5.xyzx, -v5.xyzx
rsq r4.w, r4.w
mul r8.xyz, r4.wwww, -v5.xyzx
utof r9.xy, r7.wzww
dp2 r5.w, r9.yxyy, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r5.w, r5.w
mul r5.w, r5.w, l(52.982918)
frc r5.w, r5.w
mad r5.w, r5.w, l(6.28318548), cb1[70].w
sincos r10.x, r11.x, r5.w
dp2 r5.w, r9.xyxx, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r5.w, r5.w
mul r5.w, r5.w, l(52.982918)
frc r5.w, r5.w
mad r5.w, r5.w, l(6.28318548), cb1[70].w
sincos r9.x, r12.x, r5.w
dp3_sat r7.x, r3.xyzx, r8.xyzx
dp3 r5.w, -r8.xyzx, r3.xyzx
add r5.w, r5.w, r5.w
mad r13.xyz, r3.xyzx, -r5.wwww, -r8.xyzx
mul r5.w, r7.y, l(17.000000)
exp r14.x, r5.w
add r5.w, r14.x, l(2.000000)
div r5.w, l(2.000000), r5.w
sqrt r6.w, r5.w
mul r9.yzw, cb1[9].xxyw, -cb1[24].yyyy
mad r9.yzw, -cb1[24].xxxx, cb1[8].xxyw, r9.yyzw
mad r9.yzw, -cb1[24].zzzz, cb1[10].xxyw, r9.yyzw
add r9.yzw, r9.yyzw, cb1[11].xxyw
add r15.xyz, v5.xyzx, cb1[24].xyzx
sqrt r8.w, r6.w
mad r8.w, r8.w, l(0.500000), l(0.500000)
mul r8.w, r8.w, r8.w
mul r10.z, r8.w, l(0.500000)
mad r8.w, -r8.w, l(0.500000), l(1.000000)
mad r10.w, r7.x, r8.w, r10.z
mul r8.w, r8.w, r10.w
mul r10.z, r10.w, r10.z
min r10.w, |cb0[10].w|, l(1.000000)
add r2.z, -r2.x, r2.z
mad r2.x, r10.w, r2.z, r2.x
lt r2.z, cb0[10].w, l(0.000000)
mul r2.x, r2.x, l(17.000000)
exp r14.y, r2.x
movc r2.xz, r2.zzzz, r14.xxyx, r14.yyxy
add r2.xz, r2.xxzx, l(2.000000, 0.000000, 2.000000, 0.000000)
div r2.xz, l(2.000000, 0.000000, 2.000000, 0.000000), r2.xxzx
dp3 r10.w, r3.xyzx, cb2[17].xyzx
ge r11.w, l(0.000000), |r10.w|
if_nz r11.w
  mov r14.y, l(0)
endif 
if_z r11.w
  mul r12.yzw, v5.yyyy, cb2[29].xxyz
  mad r12.yzw, v5.xxxx, cb2[28].xxyz, r12.yyzw
  mad r12.yzw, v5.zzzz, cb2[30].xxyz, r12.yyzw
  add r12.yzw, r12.yyzw, cb2[31].xxyz
  add r11.w, r12.w, -cb2[17].w
  mad r11.w, -r11.w, l(0.00006104), l(1.000000)
  mov_sat r14.z, r11.w
  eq r14.z, r11.w, r14.z
  if_nz r14.z
    mov r14.zw, l(0,0,0,0)
    loop 
      ge r16.x, r14.z, l(3.000000)
      breakc_nz r16.x
      ftou r16.x, r14.z
      add r16.yz, r12.yyzy, -cb2[r16.x + 20].xxyx
      max r16.y, |r16.z|, |r16.y|
      mul r14.w, r16.y, cb2[r16.x + 20].z
      lt r16.x, r14.w, l(1.000000)
      if_nz r16.x
        break 
      endif 
      add r14.z, r14.z, l(1.000000)
      mov r14.w, l(0)
    endloop 
  else 
    mov r14.zw, l(0,0,3.000000,0)
  endif 
  ge r16.x, r14.z, l(3.000000)
  if_nz r16.x
    mul r16.yzw, l(0.000000, 128.000000, 0.500000, 0.500000), cb2[27].zzxy
    rcp r17.xz, r16.yyyy
    mov r17.y, -r17.z
    mad r16.yzw, r12.yyzy, r17.xxyz, r16.zzwz
    add r17.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r16.yzw, r16.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r16.yzw, r17.xxyz, r16.yyzw
    mul r17.xy, r16.wzww, cb2[32].xxxx
    round_ni r17.xy, r17.xyxx
    mul r17.y, r17.y, cb2[27].x
    mad r17.x, r17.y, cb2[32].x, r17.x
    ftou r17.x, r17.x
    iadd r17.x, r17.x, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.y, r17.x, l(0), t23.xxxx
    and r17.z, r17.y, l(0x40000000)
    ishl r17.w, r17.y, l(2)
    if_z r17.z
      and r17.z, r17.y, l(0x01ffffff)
      iadd r18.x, r17.z, r17.x
      ushr r17.x, r17.y, l(25)
      utof r17.x, r17.x
      mul r16.yzw, r16.yyzw, r17.xxxx
      frc r16.yzw, r16.yyzw
      mul r16.yzw, r16.yyzw, l(0.000000, 128.000000, 128.000000, 128.000000)
      ftou r16.yzw, r16.yyzw
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.x, l(0), t23.xxxx
      ushr r17.xy, r16.wzww, l(6, 6, 0, 0)
      and r17.z, r18.z, l(0xc0000000)
      iadd r18.w, r18.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.w, r18.w, l(0), t23.xxxx
      movc r17.y, r17.y, r18.z, r18.w
      ushr r18.w, r17.y, l(13)
      movc r17.x, r17.x, r18.w, r17.y
      and r17.x, r17.x, l(8191)
      iadd r19.x, r17.x, r18.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.z, r19.x, l(0), t23.xxxx
      mov r18.y, l(0)
      mov r19.y, l(1)
      movc r19.xyz, r17.zzzz, r18.xyzx, r19.xyzx
      movc r20.yz, r17.zzzz, l(0,6,1,0), l(0,5,2,0)
      ushr r17.xy, r16.wzww, r20.yyyy
      and r17.xy, r17.xyxx, l(1, 1, 0, 0)
      and r18.w, r19.z, l(0xc0000000)
      iadd r19.w, r19.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.w, r19.w, l(0), t23.xxxx
      movc r17.y, r17.y, r19.z, r19.w
      ushr r19.w, r17.y, l(13)
      movc r17.x, r17.x, r19.w, r17.y
      and r17.x, r17.x, l(8191)
      iadd r20.x, r17.x, r19.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.w, r20.x, l(0), t23.xxxx
      movc r19.xyz, r18.wwww, r19.xyzx, r20.xzwx
      movc r17.xyz, r17.zzzz, r18.xyzx, r19.xyzx
      and r18.x, r17.z, l(0xc0000000)
      if_z r18.x
        iadd r18.x, -r17.y, l(6)
        ushr r18.xy, r16.wzww, r18.xxxx
        or r18.z, r17.z, l(0x40000000)
        bfi r18.y, l(1), l(1), r18.y, l(0)
        bfi r18.x, l(1), l(0), r18.x, r18.y
        imul null, r18.x, r18.x, l(10)
        ushr r18.x, r18.z, r18.x
        and r18.x, r18.x, l(1023)
        iadd r18.x, r17.x, r18.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.w, r18.x, l(0), t23.xxxx
        iadd r18.yz, r17.yyyy, l(0, 1, 2, 0)
        iadd r17.y, -r18.y, l(6)
        ushr r19.xy, r16.wzww, r17.yyyy
        and r17.y, r18.w, l(0xc0000000)
        or r19.z, r18.w, l(0x40000000)
        bfi r19.y, l(1), l(1), r19.y, l(0)
        bfi r19.x, l(1), l(0), r19.x, r19.y
        imul null, r19.x, r19.x, l(10)
        ushr r19.x, r19.z, r19.x
        and r19.x, r19.x, l(1023)
        iadd r19.x, r18.x, r19.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.z, r19.x, l(0), t23.xxxx
        mov r19.y, r18.z
        movc r19.xyz, r17.yyyy, r18.xywx, r19.xyzx
        iadd r18.y, -r19.y, l(6)
        ushr r18.yz, r16.wwzw, r18.yyyy
        and r19.y, r19.z, l(0xc0000000)
        or r19.w, r19.z, l(0x40000000)
        bfi r18.z, l(1), l(1), r18.z, l(0)
        bfi r18.y, l(1), l(0), r18.y, r18.z
        imul null, r18.y, r18.y, l(10)
        ushr r18.y, r19.w, r18.y
        and r18.y, r18.y, l(1023)
        iadd r20.x, r18.y, r19.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.y, r20.x, l(0), t23.xxxx
        movc r18.yz, r19.yyyy, r19.xxzx, r20.xxyx
        movc r17.xz, r17.yyyy, r18.xxwx, r18.yyzy
      endif 
      and r17.y, r17.z, l(0xc0000000)
      if_z r17.y
        ubfe r18.x, l(14), l(15), r17.z
        utof r18.x, r18.x
        mul r18.x, r18.x, cb2[27].w
        and r18.yz, r17.zzzz, l(0, 0x00007fff, 0x20000000, 0)
        utof r18.y, r18.y
        mul r18.y, r18.y, cb2[27].w
        mul r18.xy, r18.xyxx, l(0.00006104, 0.00003052, 0.000000, 0.000000)
        and r18.w, r16.z, l(3)
        iadd r18.w, r17.x, r18.w
        iadd r18.w, r18.w, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.w, r18.w, l(0), t23.xxxx
        bfi r19.xyz, l(2, 2, 1, 0), l(3, 1, 4, 0), r16.yzwy, l(0, 0, 0, 0)
        ushr r16.y, r18.w, r19.x
        and r16.y, r16.y, l(255)
        utof r16.y, r16.y
        mul r16.y, r18.y, r16.y
        mad r16.y, r16.y, l(0.00392157), r18.x
        iadd r16.z, r19.y, l(1)
        ubfe r16.w, l(1), l(1), r16.w
        iadd r16.z, r16.w, r16.z
        iadd r16.z, r16.z, r17.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.z, r16.z, l(0), t23.xxxx
        ushr r16.z, r16.z, r19.z
        and r16.z, r16.z, l(0x0000ffff)
        utof r16.z, r16.z
        mul r16.z, r18.y, r16.z
        mad r16.z, r16.z, l(0.00001526), r18.x
        movc r17.w, r18.z, r16.y, r16.z
      else 
        and r16.y, r17.z, l(0x80000000)
        iadd r16.z, r17.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.z, r16.z, l(0), t23.xxxx
        movc r16.y, r16.y, r16.z, l(0)
        ishl r16.z, r17.z, l(2)
        ushr r16.w, r16.y, l(16)
        and r16.y, r16.y, l(0x0000ffff)
        f16tof32 r16.yw, r16.yyyw
        mad r16.z, r12.y, r16.w, r16.z
        mad r16.y, r12.z, r16.y, r16.z
        movc r17.w, r17.y, r16.y, r17.w
      endif 
    endif 
    mad r12.w, -cb2[27].z, l(2.000000), r12.w
    lt r12.w, r17.w, r12.w
    movc r14.y, r12.w, l(0), l(1.000000)
  endif 
  if_z r16.x
    if_z cb2[58].y
      ftou r12.w, r14.z
      add r16.xy, r12.yzyy, -cb2[r12.w + 20].xyxx
      mul r16.xy, r16.xyxx, cb2[r12.w + 20].zzzz
      mad r16.xy, r16.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r12.w, cb2[26].y
      add r16.z, r12.w, r14.z
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.w, r16.xyzx, t13.xxxx, s13, r11.w
      sample_l_indexable(texture2darray)(float,float,float,float) r16.x, r16.xyzx, t31.xyzw, s0, l(0.000000)
      add r12.w, r12.w, r16.x
      add_sat r12.w, r12.w, l(-1.000000)
      mul r16.x, r12.w, r12.w
      mul r14.y, r12.w, r16.x
    endif 
    if_nz cb2[58].y
      mov r16.x, -r10.x
      ftou r12.w, r14.z
      add r14.z, r14.z, l(1.000000)
      min r14.z, r14.z, l(2.000000)
      add r14.w, -r14.w, l(1.000000)
      mul r14.w, r14.w, l(28.000000)
      ftou r14.zw, r14.zzzw
      add r17.xy, r12.yzyy, -cb2[r12.w + 20].xyxx
      mul r17.xy, r17.xyxx, cb2[r12.w + 20].zzzz
      mad r17.xy, r17.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      add r12.yz, r12.yyzy, -cb2[r14.z + 20].xxyx
      mul r12.yz, r12.yyzy, cb2[r14.z + 20].zzzz
      mad r12.yz, r12.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      mov r16.y, r11.x
      mov r16.z, r10.x
      mov r16.w, l(0)
      mov r17.z, l(0)
      loop 
        uge r17.w, r17.z, l(8)
        breakc_nz r17.w
        ult r17.w, r14.w, r17.z
        movc r18.xy, r17.wwww, r12.yzyy, r17.xyxx
        movc r18.z, r17.w, cb2[r14.z + 20].w, cb2[r12.w + 20].w
        movc r17.w, r17.w, r14.z, r12.w
        dp2 r19.x, icb[r17.z + 0].yxyy, r16.xyxx
        dp2 r19.y, icb[r17.z + 0].yxyy, r16.yzyy
        mad r18.xy, r19.xyxx, r18.zzzz, r18.xyxx
        iadd r17.w, r17.w, cb2[26].y
        utof r18.z, r17.w
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r17.w, r18.xyzx, t13.xxxx, s13, r11.w
        sample_l_indexable(texture2darray)(float,float,float,float) r18.x, r18.xyzx, t31.xyzw, s0, l(0.000000)
        add r17.w, r17.w, r18.x
        add_sat r17.w, r17.w, l(-1.000000)
        mad r16.w, r17.w, l(0.125000), r16.w
        iadd r17.z, r17.z, l(1)
      endloop 
      mul r11.w, r16.w, r16.w
      mul r14.y, r16.w, r11.w
    endif 
  endif 
endif 
and r11.w, cb2[53].x, l(0x0000ffff)
if_nz r11.w
  iadd r11.w, r11.w, cb2[0].x
  iadd r11.w, r11.w, l(-1)
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.y, r11.w, l(52), t12.xxxx
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r11.w, l(68), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r11.w, l(84), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r11.w, l(132), t12.xyzw
  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.xyzw, r11.w, l(148), t12.xyzw
  mad r12.z, |r10.w|, l(-0.200000), l(0.400000)
  lt r12.w, r10.w, l(0.000000)
  movc r12.z, r12.w, -r12.z, r12.z
  mad r20.xyz, r3.xyzx, r12.zzzz, v5.xyzx
  mov r20.w, l(1.000000)
  dp4 r16.x, r16.xyzw, r20.xyzw
  dp4 r16.y, r17.xyzw, r20.xyzw
  mad r12.zw, r16.xxxy, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
  add r12.zw, r19.zzzw, r12.zzzw
  mul r12.zw, r19.xxxy, r12.zzzw
  div r14.zw, r12.yyyy, r18.xxxz
  add r16.xy, -r14.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
  ge r16.xy, r12.zwzz, r16.xyxx
  ge r14.zw, r14.zzzw, r12.zzzw
  or r14.zw, r14.zzzw, r16.xxxy
  or r14.z, r14.w, r14.z
  if_z r14.z
    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.z, r11.w, l(28), t12.xxxx
    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r11.w, l(100), t12.xyzw
    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xy, r11.w, l(164), t12.xyxx
    dp4 r11.w, r16.xyzw, r20.xyzw
    mov_sat r12.zw, r12.zzzw
    mad r16.xy, r12.zwzz, r18.xzxx, r18.ywyy
    add r11.w, r17.x, r11.w
    div r11.w, r11.w, r17.y
    max r11.w, r11.w, l(0.00006104)
    and r12.z, r14.z, l(0x0000ffff)
    if_nz cb2[58].y
      mov r17.x, -r10.x
      utof r18.z, r12.z
      mov r17.y, r11.x
      mov r17.z, r10.x
      mov r12.w, l(0)
      mov r14.z, l(0)
      loop 
        ige r14.w, r14.z, l(8)
        breakc_nz r14.w
        dp2 r19.x, icb[r14.z + 0].yxyy, r17.xyxx
        dp2 r19.y, icb[r14.z + 0].yxyy, r17.yzyy
        mad r18.xy, r19.xyxx, r12.yyyy, r16.xyxx
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r14.w, r18.xyzx, t9.xxxx, s13, r11.w
        mad r12.w, r14.w, l(0.125000), r12.w
        iadd r14.z, r14.z, l(1)
      endloop 
    else 
      utof r16.z, r12.z
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.w, r16.xyzx, t9.xxxx, s13, r11.w
    endif 
    mul r11.w, r12.w, r12.w
    mul r11.w, r12.w, r11.w
  else 
    mov r11.w, l(1.000000)
  endif 
  mul r14.y, r11.w, r14.y
endif 
lt r11.w, l(0.000000), |r10.w|
if_nz r11.w
  lt r11.w, l(0.000000), r14.y
  if_nz r11.w
    mul r11.w, r5.w, cb2[18].w
    mul r11.w, r11.w, l(0.250000)
    if_nz cb2[23].x
      mov r15.w, l(1.000000)
      dp4 r12.y, cb2[24].xyzw, r15.xyzw
      dp4 r12.z, cb2[25].xyzw, r15.xyzw
      frc r16.xy, r12.yzyy
      iadd r12.y, l(-1), cb2[23].x
      utof r16.z, r12.y
      sample_l_indexable(texture2darray)(float,float,float,float) r12.yzw, r16.xyzx, t20.wxyz, s2, l(0.000000)
      add r12.yzw, r12.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
      mad r12.yzw, cb2[23].yyyy, r12.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
      mul r12.yzw, r12.yyzw, cb2[18].xxyz
    else 
      mov r12.yzw, cb2[18].xxyz
    endif 
    mad r14.z, -r7.x, l(0.500000), l(1.000000)
    mad r14.z, -|r10.w|, r14.z, l(1.000000)
    mul r14.z, r14.z, r14.z
    mad r14.z, -r14.z, l(0.620000), l(0.620000)
    add r14.z, -|r10.w|, r14.z
    mad r14.z, r6.w, r14.z, |r10.w|
    lt r14.w, l(0.000000), r10.w
    mov_sat r10.w, r10.w
    mad r16.xyz, -v5.xyzx, r4.wwww, cb2[17].xyzx
    dp3 r4.w, r16.xyzx, r16.xyzx
    rsq r4.w, r4.w
    mul r16.xyz, r4.wwww, r16.xyzx
    dp3 r4.w, r3.xyzx, r16.xyzx
    dp3 r15.w, r16.xyzx, r8.xyzx
    mul r16.w, r2.z, r2.x
    sqrt r16.w, r16.w
    dp3 r17.x, r16.xyzx, r5.xyzx
    dp3 r16.x, r16.xyzx, r6.xyzx
    mul r16.y, r17.x, r17.x
    mul r16.x, r16.x, r16.x
    div r16.xy, r16.xyxx, r2.zxzz
    add r16.x, r16.x, r16.y
    mad r4.w, |r4.w|, |r4.w|, r16.x
    mad r16.x, r10.w, r8.w, r10.z
    mul r4.w, r4.w, r4.w
    mul r4.w, r16.w, r4.w
    mul r4.w, r16.x, r4.w
    rcp r4.w, r4.w
    mul r10.w, r11.w, r10.w
    mul r4.w, r4.w, r10.w
    add_sat r10.w, -r15.w, l(1.000000)
    mul r11.w, r10.w, r10.w
    mul r11.w, r11.w, r11.w
    mul r10.w, r10.w, r11.w
    mul r10.w, r4.w, r10.w
    and r11.w, r14.z, r14.w
    movc r16.xyz, r14.wwww, l(0,0,0,0), r14.zzzz
    and r17.xy, r10.wwww, r14.wwww
    and r18.xyz, r4.wwww, r14.wwww
    dp3 r4.w, r12.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
    mul r4.w, r4.w, r14.y
    mov r14.x, l(1.000000)
    mov r10.w, cb2[17].x
    mov r14.zw, cb2[17].yyyz
    mov r17.zw, r11.wwww
    mov r15.w, r17.y
  else 
    mov r4.w, l(0)
    mov r12.yzw, l(0,0,0,0)
    mov r10.w, l(0)
    mov r14.xyzw, l(0,0,0,0)
    mov r16.xyz, l(0,0,0,0)
    mov r11.w, l(0)
    mov r18.xyz, l(0,0,0,0)
    mov r15.w, l(0)
    mov r17.xyzw, l(0,0,0,0)
  endif 
else 
  mov r4.w, l(0)
  mov r12.yzw, l(0,0,0,0)
  mov r10.w, l(0)
  mov r14.xyzw, l(0,0,0,0)
  mov r16.xyz, l(0,0,0,0)
  mov r11.w, l(0)
  mov r18.xyz, l(0,0,0,0)
  mov r15.w, l(0)
  mov r17.xyzw, l(0,0,0,0)
endif 
mul r16.w, r2.w, l(0.00781250)
min r16.w, r16.w, l(15.000000)
ftou r16.w, r16.w
ushr r19.xy, r7.zwzz, l(6, 6, 0, 0)
ishl r19.z, r16.w, l(4)
mov r20.x, -r10.x
mad r7.z, -r7.x, l(0.500000), l(1.000000)
mul r7.w, r2.z, r2.x
sqrt r7.w, r7.w
mov r21.xy, l(0,0,0,0)
mov r22.w, l(0)
mov r23.xyz, v5.xyzx
mov r23.w, l(1.000000)
mov r24.w, l(1.000000)
mov r20.z, r10.x
mov r25.z, l(1.000000)
mov r26.w, l(1.000000)
mov r20.yw, r11.xxxx
mov r10.y, r20.w
mov r27.w, l(1.000000)
mov r11.y, r20.x
mov r11.z, r10.x
mov r28.x, r11.x
mov r28.y, r20.x
mov r28.z, r10.x
mov r29.xyz, l(0,0,0,0)
mov r30.xyz, l(0,0,0,0)
mov r31.xyz, l(0,0,0,0)
mov r32.xyz, l(0,0,0,0)
mov r33.xyz, r12.yzwy
mov r34.x, r10.w
mov r34.yz, r14.zzwz
mov r35.xy, r17.zwzz
mov r35.z, r11.w
mov r36.xyz, r16.xyzx
mov r37.xyz, r18.xyzx
mov r38.x, r15.w
mov r38.yz, r17.xxyx
mov r39.x, cb2[58].y
mov r39.y, r4.w
mov r39.zw, r14.xxxy
mov r16.w, l(0)
loop 
  uge r18.w, r16.w, cb2[0].x
  breakc_nz r18.w
  ushr r21.z, r16.w, l(5)
  iadd r22.xyz, r19.xyzx, r21.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r18.w, r22.xyzw, t6.yzwx
  mov r22.xyz, r29.xyzx
  mov r40.xyz, r30.xyzx
  mov r41.xyz, r31.xyzx
  mov r42.xyz, r32.xyzx
  mov r43.xyz, r33.xyzx
  mov r44.xyz, r34.xyzx
  mov r45.xyz, r35.xyzx
  mov r46.xyz, r37.xyzx
  mov r47.xyz, r38.xyzx
  mov r21.zw, r39.zzzw
  mov r19.w, r39.x
  mov r25.w, r39.y
  mov r48.xyz, r36.xyzx
  mov r28.w, r18.w
  loop 
    breakc_z r28.w
    firstbit_lo r29.w, r28.w
    ishl r30.w, l(1), r29.w
    and r31.w, r28.w, r30.w
    if_nz r31.w
      xor r28.w, r28.w, r30.w
      iadd r29.w, r16.w, r29.w
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r49.xyzw, r29.w, l(0), t12.wxyz
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r50.xyzw, r29.w, l(16), t12.zxyw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r51.xyzw, r29.w, l(32), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r52.xyzw, r29.w, l(48), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r53.xyzw, r29.w, l(64), t12.yzwx
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r54.xyzw, r29.w, l(80), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r55.xyzw, r29.w, l(96), t12.yzwx
      ubfe r30.w, l(3), l(24), r50.w
      switch r30.w
        case l(4)
        lt r30.w, l(0.000000), r55.x
        mov r56.xy, r54.zwzz
        mov r56.z, r55.w
        mad r57.xyz, -r56.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r49.yzwy
        add r58.xyz, r57.xyzx, -v5.xyzx
        dp3 r31.w, r56.xyzx, r58.xyzx
        div_sat r32.w, -r31.w, r55.x
        mad r59.xyz, r32.wwww, r56.xyzx, r57.xyzx
        movc r59.xyz, r30.wwww, r59.xyzx, r49.yzwy
        add r59.xyz, r59.xyzx, -v5.xyzx
        dp3 r33.w, r59.xyzx, r59.xyzx
        rsq r34.w, r33.w
        mul r59.xyz, r34.wwww, r59.xyzx
        dp3 r34.w, r3.xyzx, r59.xyzx
        lt r35.w, l(0.000000), |r34.w|
        if_nz r35.w
          sqrt r35.w, r33.w
          mul r36.w, r52.x, r52.x
          div r33.w, r36.w, r33.w
          min r33.w, r33.w, l(1.000000)
          mad_sat r60.xy, r35.wwww, r51.xzxx, r51.ywyy
          mul r60.zw, r60.xxxy, r60.xxxy
          mad r60.xy, r60.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
          mul r60.xy, r60.xyxx, r60.zwzz
          mul r33.w, r33.w, r60.x
          mul r60.x, r60.y, r33.w
          lt r33.w, l(0.000000), r60.x
          if_nz r33.w
            ubfe r60.zw, l(0, 0, 3, 4), l(0, 0, 27, 20), r50.wwww
            ine r33.w, r60.z, l(1)
            if_nz r33.w
              mad r33.w, |r34.w|, l(-0.200000), l(0.400000)
              lt r35.w, r34.w, l(0.000000)
              movc r33.w, r35.w, -r33.w, r33.w
              mad r61.xyz, r3.xyzx, r33.wwww, v5.xyzx
              add r61.xyz, -r53.xyzx, r61.xyzx
              max r33.w, |r61.z|, |r61.y|
              max r33.w, r33.w, |r61.x|
              div r33.w, r54.x, r33.w
              add r33.w, r54.y, r33.w
              dp3 r35.w, r61.xyzx, r61.xyzx
              rsq r35.w, r35.w
              max r33.w, r33.w, l(0.00006104)
              and r36.w, r50.w, l(0x0000ffff)
              utof r62.w, r36.w
              mov r60.y, l(0)
              mov r36.w, l(0)
              loop 
                ige r37.w, r36.w, l(8)
                breakc_nz r37.w
                dp2 r63.y, icb[r36.w + 0].yxyy, r20.xyxx
                dp2 r63.z, icb[r36.w + 0].yxyy, r20.yzyy
                mul r63.yz, r52.yyyy, r63.yyzy
                mul r63.x, r12.x, r63.y
                mul r63.w, r9.x, r63.y
                mad r62.xyz, r61.xyzx, r35.wwww, r63.xzwx
                sample_c_lz_indexable(texturecubearray)(float,float,float,float) r37.w, r62.xyzw, t10.xxxx, s13, r33.w
                mad r60.y, r37.w, l(0.125000), r60.y
                iadd r36.w, r36.w, l(1)
              endloop 
            else 
              mov r60.y, l(1.000000)
            endif 
            if_nz r60.w
              iadd r33.w, r60.w, cb2[0].x
              iadd r33.w, r33.w, l(-1)
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.w, r33.w, l(52), t12.xxxx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r61.xyzw, r33.w, l(100), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r62.xyzw, r33.w, l(116), t12.xyzw
              mad r36.w, |r34.w|, l(-0.200000), l(0.400000)
              lt r37.w, r34.w, l(0.000000)
              movc r36.w, r37.w, -r36.w, r36.w
              mad r24.xyz, r3.xyzx, r36.wwww, v5.xyzx
              dp4 r36.w, r61.xyzw, r24.xyzw
              dp4 r37.w, r62.xyzw, r24.xyzw
              lt r38.w, r37.w, r36.w
              if_z r38.w
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r61.xyzw, r33.w, l(68), t12.xyzw
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r62.xyzw, r33.w, l(84), t12.xyzw
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r63.xyzw, r33.w, l(132), t12.xyzw
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r64.xyzw, r33.w, l(148), t12.xyzw
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r60.zw, r33.w, l(164), t12.xxxy
                dp4 r61.x, r61.xyzw, r24.xyzw
                dp4 r61.y, r62.xyzw, r24.xyzw
                div r24.xy, r61.xyxx, r37.wwww
                mad r24.xy, r24.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                add r24.xy, r64.zwzz, r24.xyxx
                mul r24.xy, r64.xyxx, r24.xyxx
                div r61.xy, r35.wwww, r63.xzxx
                add r61.zw, -r61.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                ge r61.zw, r24.xxxy, r61.zzzw
                ge r61.xy, r61.xyxx, r24.xyxx
                or r61.xy, r61.xyxx, r61.zwzz
                or r24.z, r61.y, r61.x
                mov_sat r24.xy, r24.xyxx
                mad r61.xy, r24.xyxx, r63.xzxx, r63.ywyy
                mul r24.x, r37.w, r60.w
                mad r24.y, r60.z, r37.w, r36.w
                div r24.x, r24.y, r24.x
              else 
                mov r24.z, l(-1)
              endif 
              or r24.y, r38.w, r24.z
              if_z r24.y
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r24.y, r33.w, l(28), t12.xxxx
                max r24.x, r24.x, l(0.00006104)
                and r24.y, r24.y, l(0x0000ffff)
                if_nz r19.w
                  utof r62.z, r24.y
                  mov r24.z, l(0)
                  mov r33.w, l(0)
                  loop 
                    ige r36.w, r33.w, l(8)
                    breakc_nz r36.w
                    dp2 r63.x, icb[r33.w + 0].yxyy, r20.xwxx
                    dp2 r63.y, icb[r33.w + 0].xyxx, r10.xyxx
                    mad r62.xy, r63.xyxx, r35.wwww, r61.xyxx
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r36.w, r62.xyzx, t9.xxxx, s13, r24.x
                    mad r24.z, r36.w, l(0.125000), r24.z
                    iadd r33.w, r33.w, l(1)
                  endloop 
                else 
                  utof r61.z, r24.y
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.z, r61.xyzx, t9.xxxx, s13, r24.x
                endif 
                mul r24.x, r24.z, r24.z
                mul r24.x, r24.z, r24.x
              else 
                mov r24.x, l(1.000000)
              endif 
              mul r60.y, r24.x, r60.y
            endif 
            mul r24.x, r60.y, r60.x
            lt r24.y, l(0.000000), r24.x
            if_nz r24.y
              mul r24.y, r5.w, r50.x
              mul r24.y, r24.y, l(0.250000)
              dp3 r33.w, r56.xyzx, r13.xyzx
              dp3 r35.w, r13.xyzx, r58.xyzx
              mad r36.w, -r33.w, r33.w, r55.x
              mad r31.w, r33.w, r35.w, -r31.w
              div_sat r31.w, r31.w, r36.w
              div r33.w, r36.w, r55.x
              mul r33.w, r33.w, l(10.000000)
              min r33.w, r33.w, l(1.000000)
              add r31.w, -r32.w, r31.w
              mad r31.w, r33.w, r31.w, r32.w
              mad r56.xyz, r31.wwww, r56.xyzx, r57.xyzx
              movc r56.xyz, r30.wwww, r56.xyzx, r49.yzwy
              add r56.xyz, r56.xyzx, -v5.xyzx
              dp3 r30.w, r56.xyzx, r56.xyzx
              rsq r30.w, r30.w
              mul r57.xyz, r30.wwww, r56.xyzx
              mad r31.w, -|r34.w|, r7.z, l(1.000000)
              mul r31.w, r31.w, r31.w
              mad r31.w, -r31.w, l(0.620000), l(0.620000)
              add r31.w, -|r34.w|, r31.w
              mad r31.w, r6.w, r31.w, |r34.w|
              lt r32.w, l(0.000000), r34.w
              dp3_sat r33.w, r3.xyzx, r57.xyzx
              mad r56.xyz, r56.xyzx, r30.wwww, r8.xyzx
              dp3 r30.w, r56.xyzx, r56.xyzx
              rsq r30.w, r30.w
              mul r56.xyz, r30.wwww, r56.xyzx
              dp3 r30.w, r3.xyzx, r56.xyzx
              dp3 r34.w, r56.xyzx, r8.xyzx
              dp3 r35.w, r56.xyzx, r5.xyzx
              dp3 r36.w, r56.xyzx, r6.xyzx
              mul r35.w, r35.w, r35.w
              div r35.w, r35.w, r2.x
              mul r36.w, r36.w, r36.w
              div r36.w, r36.w, r2.z
              add r35.w, r35.w, r36.w
              mad r30.w, |r30.w|, |r30.w|, r35.w
              mad r35.w, r33.w, r8.w, r10.z
              mul r30.w, r30.w, r30.w
              mul r30.w, r7.w, r30.w
              mul r30.w, r35.w, r30.w
              rcp r30.w, r30.w
              mul r24.y, r24.y, r33.w
              mul r24.y, r24.y, r30.w
              add_sat r30.w, -r34.w, l(1.000000)
              mul r33.w, r30.w, r30.w
              mul r33.w, r33.w, r33.w
              mul r30.w, r30.w, r33.w
              mul r30.w, r24.y, r30.w
              and r56.xyz, r31.wwww, r32.wwww
              movc r31.w, r32.w, l(0), r31.w
              and r57.xyz, r30.wwww, r32.wwww
              and r24.y, r24.y, r32.w
              mov r50.x, r49.x
              dp3 r30.w, r50.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
              mul r30.w, r24.x, r30.w
              lt r32.w, r25.w, r30.w
              if_nz r32.w
                mul r32.w, r21.w, r21.z
                mul r58.xyz, r43.xyzx, r32.wwww
                mad r22.xyz, r58.xyzx, r45.xyzx, r22.xyzx
                mad r40.xyz, r58.xyzx, r48.xyzx, r40.xyzx
                mad r42.xyz, r58.xyzx, r46.xyzx, r42.xyzx
                mad r41.xyz, r58.xyzx, r47.xyzx, r41.xyzx
                mov r46.xyz, r24.yyyy
                mov r25.w, r30.w
                mov r48.xyz, r31.wwww
                mov r43.xyz, r50.xyzx
                mov r44.xyz, r59.xyzx
                mov r45.xyz, r56.xyzx
                mov r47.xyz, r57.xyzx
                mov r21.zw, r60.xxxy
              else 
                mul r56.xyw, r24.xxxx, r50.xyxz
                mad r22.xyz, r56.xywx, r56.zzzz, r22.xyzx
                mad r40.xyz, r56.xywx, r31.wwww, r40.xyzx
                mad r42.xyz, r56.xywx, r24.yyyy, r42.xyzx
                mad r41.xyz, r56.xywx, r57.xyzx, r41.xyzx
              endif 
            endif 
          endif 
        endif 
        break 
        case l(2)
        mov r56.xy, r52.zwzz
        mov r56.z, r53.w
        add r56.xyz, r56.xyzx, -v5.xyzx
        dp3 r24.x, r56.xyzx, r56.xyzx
        rsq r24.x, r24.x
        mul r57.xyz, r24.xxxx, r56.xyzx
        dp3 r24.y, r3.xyzx, r57.xyzx
        lt r30.w, l(0.000000), |r24.y|
        if_nz r30.w
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r58.xyzw, r29.w, l(112), t12.yzwx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r59.xyzw, r29.w, l(128), t12.zxyw
          mov r61.xyz, r58.xyzx
          mov r61.w, r59.y
          dp4 r30.w, r61.xyzw, r23.xyzw
          lt r31.w, r30.w, l(1.000000)
          if_nz r31.w
            mov r60.xzw, l(1.000000,0,1.000000,1.000000)
            mov r62.x, l(0)
          else 
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r63.xyzw, r29.w, l(172), t12.yzwx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r64.xyzw, r29.w, l(188), t12.wxyz
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r65.xyzw, r29.w, l(204), t12.xyzw
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.w, r29.w, l(236), t12.xxxx
            add r66.xyz, r49.yzwy, -v5.xyzx
            mul r32.w, r52.x, r52.x
            dp3 r33.w, r66.xyzx, r66.xyzx
            div r32.w, r32.w, r33.w
            min r32.w, r32.w, l(1.000000)
            mad_sat r51.xy, r30.wwww, r51.xzxx, r51.ywyy
            mul r51.zw, r51.xxxy, r51.xxxy
            mad r51.xy, r51.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
            mul r51.xy, r51.xyxx, r51.zwzz
            mul r32.w, r32.w, r51.x
            mul r32.w, r51.y, r32.w
            mov r53.w, r54.x
            dp4 r51.x, r53.xyzw, r23.xyzw
            mov r66.xyz, r54.yzwy
            mov r66.w, r55.w
            dp4 r51.y, r66.xyzw, r23.xyzw
            div r25.xy, r51.xyxx, r30.wwww
            lt r30.w, r63.w, l(0.00048828)
            if_nz r30.w
              mov r64.y, r65.x
              mad_sat r51.xy, |r25.xyxx|, r64.zwzz, r64.xyxx
              mul r51.zw, r51.xxxy, r51.xxxy
              mad r51.xy, r51.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
              mul r51.xy, r51.xyxx, r51.zwzz
              mul r30.w, r51.y, r51.x
            else 
              mov r63.w, r64.y
              mul_sat r51.xyzw, |r25.yyxx|, r63.xyzw
              log r51.xyzw, r51.xyzw
              mul r51.xyzw, r51.xyzw, r64.xxxx
              exp r51.xyzw, r51.xyzw
              add r51.xy, r51.zwzz, r51.xyxx
              log r51.xy, r51.xyxx
              mul r51.xy, r51.xyxx, r65.xxxx
              exp r51.xy, r51.xyxx
              mul r33.w, r51.x, r64.z
              mad r34.w, r64.w, r51.y, l(-1.000000)
              mad r33.w, r64.w, r51.y, -r33.w
              div_sat r33.w, r34.w, r33.w
              mul r34.w, r33.w, r33.w
              mad r33.w, r33.w, l(-2.000000), l(3.000000)
              mul r30.w, r33.w, r34.w
            endif 
            mul r62.x, r30.w, r32.w
            and r30.w, r31.w, l(255)
            if_nz r30.w
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r51.xyz, r29.w, l(220), t12.xyzx
              dp3 r31.w, r65.yzwy, r25.xyzx
              dp3 r25.x, r51.xyzx, r25.xyzx
              frc r51.x, r31.w
              frc r51.y, r25.x
              iadd r25.x, r30.w, l(-1)
              utof r51.z, r25.x
              sample_l_indexable(texture2darray)(float,float,float,float) r60.xzw, r51.xyzx, t20.xwyz, s2, l(0.000000)
            else 
              mov r60.xzw, l(1.000000,0,1.000000,1.000000)
            endif 
          endif 
          mov r49.yz, r50.yyzy
          mul r49.xyz, r60.xzwx, r49.xyzx
          lt r25.x, l(0.000000), r62.x
          if_nz r25.x
            ubfe r25.xy, l(3, 4, 0, 0), l(27, 20, 0, 0), r50.wwww
            ine r25.x, r25.x, l(1)
            if_nz r25.x
              mad r25.x, |r24.y|, l(-0.200000), l(0.400000)
              lt r30.w, r24.y, l(0.000000)
              movc r25.x, r30.w, -r25.x, r25.x
              mad r26.xyz, r3.xyzx, r25.xxxx, v5.xyzx
              mov r58.xyz, r55.xyzx
              dp4 r25.x, r58.xyzw, r26.xyzw
              dp4 r30.w, r61.xyzw, r26.xyzw
              ge r31.w, r30.w, r25.x
              if_nz r31.w
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r59.y, r29.w, l(144), t12.xxxx
                mov r53.w, r54.x
                dp4 r51.x, r53.xyzw, r26.xyzw
                mov r55.xyz, r54.yzwy
                dp4 r51.y, r55.xyzw, r26.xyzw
                div r26.xy, r51.xyxx, r30.wwww
                mad_sat r26.xy, r26.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                mad r26.xy, r26.xyxx, r59.zwzz, r59.xyxx
                div r25.x, r25.x, r30.w
                max r25.x, r25.x, l(0.00006104)
                and r29.w, r50.w, l(0x0000ffff)
                if_nz r19.w
                  utof r51.z, r29.w
                  mov r30.w, l(0)
                  mov r31.w, l(0)
                  loop 
                    ige r32.w, r31.w, l(8)
                    breakc_nz r32.w
                    dp2 r53.x, icb[r31.w + 0].xyxx, r11.xyxx
                    dp2 r53.y, icb[r31.w + 0].yxyy, r11.xzxx
                    mad r51.xy, r53.xyxx, r52.yyyy, r26.xyxx
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r32.w, r51.xyzx, t9.xxxx, s13, r25.x
                    mad r30.w, r32.w, l(0.125000), r30.w
                    iadd r31.w, r31.w, l(1)
                  endloop 
                else 
                  utof r26.z, r29.w
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r30.w, r26.xyzx, t9.xxxx, s13, r25.x
                endif 
                mul r25.x, r30.w, r30.w
                mul r62.y, r30.w, r25.x
              else 
                mov r62.y, l(1.000000)
              endif 
            else 
              mov r62.y, l(1.000000)
            endif 
            if_nz r25.y
              iadd r25.x, r25.y, cb2[0].x
              iadd r25.x, r25.x, l(-1)
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r25.y, r25.x, l(52), t12.xxxx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r51.xyzw, r25.x, l(68), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r52.xyzw, r25.x, l(84), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r53.xyzw, r25.x, l(100), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r54.xyzw, r25.x, l(116), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r55.xyzw, r25.x, l(132), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r58.xyzw, r25.x, l(148), t12.xyzw
              mad r26.x, |r24.y|, l(-0.200000), l(0.400000)
              lt r26.y, r24.y, l(0.000000)
              movc r26.x, r26.y, -r26.x, r26.x
              mad r27.xyz, r3.xyzx, r26.xxxx, v5.xyzx
              dp4 r26.x, r51.xyzw, r27.xyzw
              dp4 r26.y, r52.xyzw, r27.xyzw
              dp4 r26.z, r53.xyzw, r27.xyzw
              dp4 r27.x, r54.xyzw, r27.xyzw
              lt r27.y, r27.x, r26.z
              div r26.xy, r26.xyxx, r27.xxxx
              mad r26.xy, r26.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
              add r26.xy, r58.zwzz, r26.xyxx
              mul r26.xy, r58.xyxx, r26.xyxx
              div r50.yz, r25.yyyy, r55.xxzx
              add r51.xy, -r50.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
              ge r51.xy, r26.xyxx, r51.xyxx
              ge r50.yz, r50.yyzy, r26.xxyx
              or r50.yz, r50.yyzy, r51.xxyx
              or r27.z, r50.z, r50.y
              or r27.y, r27.y, r27.z
              if_z r27.y
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r27.y, r25.x, l(28), t12.xxxx
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r50.yz, r25.x, l(164), t12.xxyx
                mov_sat r26.xy, r26.xyxx
                mad r51.xy, r26.xyxx, r55.xzxx, r55.ywyy
                mul r25.x, r27.x, r50.z
                mad r26.x, r50.y, r27.x, r26.z
                div r25.x, r26.x, r25.x
                max r25.x, r25.x, l(0.00006104)
                and r26.x, r27.y, l(0x0000ffff)
                if_nz r19.w
                  utof r27.z, r26.x
                  mov r26.yz, l(0,0,0,0)
                  loop 
                    ige r29.w, r26.z, l(8)
                    breakc_nz r29.w
                    dp2 r52.x, icb[r26.z + 0].xyxx, r28.xyxx
                    dp2 r52.y, icb[r26.z + 0].yxyy, r28.xzxx
                    mad r27.xy, r52.xyxx, r25.yyyy, r51.xyxx
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r27.x, r27.xyzx, t9.xxxx, s13, r25.x
                    mad r26.y, r27.x, l(0.125000), r26.y
                    iadd r26.z, r26.z, l(1)
                  endloop 
                else 
                  utof r51.z, r26.x
                  sample_c_lz_indexable(texture2darray)(float,float,float,float) r26.y, r51.xyzx, t9.xxxx, s13, r25.x
                endif 
                mul r25.x, r26.y, r26.y
                mul r25.x, r26.y, r25.x
              else 
                mov r25.x, l(1.000000)
              endif 
              mul r62.y, r25.x, r62.y
            endif 
            mul r25.x, r62.y, r62.x
            lt r25.y, l(0.000000), r25.x
            if_nz r25.y
              mul r25.y, r5.w, r50.x
              mul r25.y, r25.y, l(0.250000)
              mad r26.x, -|r24.y|, r7.z, l(1.000000)
              mul r26.x, r26.x, r26.x
              mad r26.x, -r26.x, l(0.620000), l(0.620000)
              add r26.x, -|r24.y|, r26.x
              mad r26.x, r6.w, r26.x, |r24.y|
              lt r26.z, l(0.000000), r24.y
              mov_sat r24.y, r24.y
              mad r27.xyz, r56.xyzx, r24.xxxx, r8.xyzx
              dp3 r24.x, r27.xyzx, r27.xyzx
              rsq r24.x, r24.x
              mul r27.xyz, r24.xxxx, r27.xyzx
              dp3 r24.x, r3.xyzx, r27.xyzx
              dp3 r29.w, r27.xyzx, r8.xyzx
              dp3 r31.w, r27.xyzx, r5.xyzx
              dp3 r27.x, r27.xyzx, r6.xyzx
              mul r27.y, r31.w, r31.w
              mul r27.x, r27.x, r27.x
              div r27.xy, r27.xyxx, r2.zxzz
              add r27.x, r27.x, r27.y
              mad r24.x, |r24.x|, |r24.x|, r27.x
              mad r27.x, r24.y, r8.w, r10.z
              mul r24.x, r24.x, r24.x
              mul r24.x, r7.w, r24.x
              mul r24.x, r27.x, r24.x
              rcp r24.x, r24.x
              mul r24.y, r25.y, r24.y
              mul r24.x, r24.y, r24.x
              add_sat r24.y, -r29.w, l(1.000000)
              mul r25.y, r24.y, r24.y
              mul r25.y, r25.y, r25.y
              mul r24.y, r24.y, r25.y
              mul r24.y, r24.y, r24.x
              and r27.xyz, r26.xxxx, r26.zzzz
              movc r25.y, r26.z, l(0), r26.x
              and r50.xyz, r24.yyyy, r26.zzzz
              and r24.x, r24.x, r26.z
              dp3 r24.y, r49.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
              mul r24.y, r24.y, r25.x
              lt r26.x, r25.w, r24.y
              if_nz r26.x
                mul r26.x, r21.w, r21.z
                mul r51.xyz, r43.xyzx, r26.xxxx
                mad r22.xyz, r51.xyzx, r45.xyzx, r22.xyzx
                mad r40.xyz, r51.xyzx, r48.xyzx, r40.xyzx
                mad r42.xyz, r51.xyzx, r46.xyzx, r42.xyzx
                mad r41.xyz, r51.xyzx, r47.xyzx, r41.xyzx
                mov r46.xyz, r24.xxxx
                mov r25.w, r24.y
                mov r48.xyz, r25.yyyy
                mov r43.xyz, r49.xyzx
                mov r44.xyz, r57.xyzx
                mov r45.xyz, r27.xyzx
                mov r47.xyz, r50.xyzx
                mov r21.zw, r62.xxxy
              else 
                mul r49.xyz, r49.xyzx, r25.xxxx
                mad r22.xyz, r49.xyzx, r27.zzzz, r22.xyzx
                mad r40.xyz, r49.xyzx, r25.yyyy, r40.xyzx
                mad r42.xyz, r49.xyzx, r24.xxxx, r42.xyzx
                mad r41.xyz, r49.xyzx, r50.xyzx, r41.xyzx
              endif 
            endif 
          endif 
        endif 
        break 
        default 
        break 
      endswitch 
    endif 
  endloop 
  mov r29.xyz, r22.xyzx
  mov r30.xyz, r40.xyzx
  mov r31.xyz, r41.xyzx
  mov r32.xyz, r42.xyzx
  mov r33.xyz, r43.xyzx
  mov r34.xyz, r44.xyzx
  mov r35.xyz, r45.xyzx
  mov r37.xyz, r46.xyzx
  mov r38.xyz, r47.xyzx
  mov r39.zw, r21.zzzw
  mov r39.y, r25.w
  mov r36.xyz, r48.xyzx
  iadd r16.w, r16.w, l(32)
endloop 
mov r5.z, l(0)
mul r5.xy, r34.yxyy, l(1.000000, -1.000000, 0.000000, 0.000000)
mul r6.xyz, r5.yzxy, r34.zxyz
mad r6.xyz, r34.yzxy, r5.zxyz, -r6.xyzx
mul r10.xyz, r15.yyyy, cb1[9].xywx
mad r10.xyz, r15.xxxx, cb1[8].xywx, r10.xyzx
mad r10.xyz, r15.zzzz, cb1[10].xywx, r10.xyzx
add r10.xyz, r9.yzwy, r10.xyzx
rcp r11.z, r10.z
mul r2.xz, r10.xxyx, r11.zzzz
mad r11.xy, r2.xzxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
mad r10.xyw, r34.xyxz, l(2.400000, 2.400000, 0.000000, 2.400000), r15.xyxz
dp2 r2.x, v0.xyxx, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r2.x, r2.x
mul r2.x, r2.x, l(52.982918)
frc r2.x, r2.x
mul r2.z, r2.x, l(3.141600)
sincos r9.x, r12.x, r2.z
mul r12.yzw, r6.xxyz, r9.xxxx
mad r12.xyz, r12.xxxx, r5.xyzx, r12.yzwy
mad r12.xyz, r12.xyzx, l(0.120000, 0.120000, 0.120000, 0.000000), r10.xywx
mul r14.xyz, r12.yyyy, cb1[9].xywx
mad r12.xyw, r12.xxxx, cb1[8].xyxw, r14.xyxz
mad r12.xyz, r12.zzzz, cb1[10].xywx, r12.xywx
add r12.xyz, r9.yzwy, r12.xyzx
mul r7.zw, r12.xxxy, l(0.000000, 0.000000, 0.500000, -0.500000)
rcp r12.z, r12.z
mad r12.xy, r7.zwzz, r12.zzzz, l(0.500000, 0.500000, 0.000000, 0.000000)
mov r14.xyz, -r11.xyzx
add r12.xyz, r12.xyzx, r14.xyzx
mad r15.xyz, r2.xxxx, l(3.141600, 0.500000, 0.500000, 0.000000), l(3.141600, 0.33333334, 1.000000, 0.000000)
sincos r9.x, r15.x, r15.x
mul r6.xyz, r6.xyzx, r9.xxxx
mad r5.xyz, r15.xxxx, r5.xyzx, r6.xyzx
mad r5.xyz, r5.xyzx, l(0.120000, 0.120000, 0.120000, 0.000000), r10.xywx
mul r6.xyz, r5.yyyy, cb1[9].xywx
mad r5.xyw, r5.xxxx, cb1[8].xyxw, r6.xyxz
mad r5.xyz, r5.zzzz, cb1[10].xywx, r5.xywx
add r5.xyz, r9.yzwy, r5.xyzx
mul r5.xy, r5.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000)
rcp r6.z, r5.z
mad r6.xy, r5.xyxx, r6.zzzz, r14.xyxx
mov r14.w, l(0.500000)
add r5.xyz, r14.wwzw, r6.xyzx
dp2 r2.z, cb1[44].zwzz, cb1[44].zwzz
sqrt r2.z, r2.z
dp2 r4.w, r12.xyxx, r12.xyxx
sqrt r4.w, r4.w
rcp r4.w, r4.w
mul r2.z, r2.z, r4.w
mul r6.xy, r15.yzyy, l(0.11764706, 0.11764706, 0.000000, 0.000000)
mul r6.xy, r6.xyxx, r6.xyxx
mov x1[0].x, r6.x
mad r9.xyz, r12.xyzx, r6.xxxx, r11.xyzx
lt r6.zw, r2.zzzz, r6.xxxy
mul r7.zw, r9.xxxy, cb1[44].xxxy
ftoi r14.xy, r7.zwzz
mov r14.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r4.w, r14.xyzw, t0.yzwx
ge r5.w, r4.w, l(0.984375)
mul r7.z, r4.w, l(1.01587307)
mad r4.w, r4.w, l(64.000000), l(-63.000000)
movc r4.w, r5.w, r4.w, r7.z
max r4.w, r4.w, l(0.00000001)
rcp r4.w, r4.w
mov x2[0].x, r4.w
add r5.w, r4.w, l(0.042000)
mul r5.w, r5.w, r9.z
lt r5.w, l(1.000000), r5.w
and r5.w, r5.w, l(0x3f800000)
movc r5.w, r6.z, r5.w, l(1.000000)
mov x0[0].x, r5.w
mov x1[1].x, r6.y
mad r9.xyz, r5.xyzx, r6.yyyy, r11.xyzx
mul r7.zw, r9.xxxy, cb1[44].xxxy
ftoi r14.xy, r7.zwzz
mov r14.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r6.z, r14.xyzw, t0.yzxw
ge r7.z, r6.z, l(0.984375)
mul r7.w, r6.z, l(1.01587307)
mad r6.z, r6.z, l(64.000000), l(-63.000000)
movc r6.z, r7.z, r6.z, r7.w
max r6.z, r6.z, l(0.00000001)
rcp r6.z, r6.z
mov x2[1].x, r6.z
add r7.z, r6.z, l(0.042000)
mul r7.z, r7.z, r9.z
lt r7.z, l(1.000000), r7.z
and r7.z, r7.z, l(0x3f800000)
movc r6.w, r6.w, r7.z, l(1.000000)
mov x0[1].x, r6.w
add r7.z, r5.w, r6.w
ne r7.z, r7.z, l(0.000000)
if_nz r7.z
  mad r7.zw, r2.xxxx, l(0.000000, 0.000000, 0.500000, 0.500000), l(0.000000, 0.000000, 1.33333337, 2.000000)
  mul r7.zw, r7.zzzw, l(0.000000, 0.000000, 0.11764706, 0.11764706)
  mad r7.zw, r7.zzzw, r7.zzzw, -r6.xxxy
  mad r6.x, r5.w, r7.z, r6.x
  mov x1[0].x, r6.x
  mad r9.xyz, r12.xyzx, r6.xxxx, r11.xyzx
  lt r6.x, r2.z, r6.x
  mul r9.xy, r9.xyxx, cb1[44].xyxx
  ftoi r14.xy, r9.xyxx
  mov r14.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r7.z, r14.xyzw, t0.yzxw
  ge r8.w, r7.z, l(0.984375)
  mul r9.x, r7.z, l(1.01587307)
  mad r7.z, r7.z, l(64.000000), l(-63.000000)
  movc r7.z, r8.w, r7.z, r9.x
  max r7.z, r7.z, l(0.00000001)
  rcp r7.z, r7.z
  movc r4.w, r6.x, r7.z, r4.w
  mov x2[0].x, r4.w
  add r4.w, r7.z, l(0.042000)
  mul r4.w, r4.w, r9.z
  lt r4.w, l(1.000000), r4.w
  and r4.w, r4.w, l(0x3f800000)
  mul r4.w, r4.w, r5.w
  movc r4.w, r6.x, r4.w, r5.w
  mov x0[0].x, r4.w
  mad r5.w, r6.w, r7.w, r6.y
  mov x1[1].x, r5.w
  mad r9.xyz, r5.xyzx, r5.wwww, r11.xyzx
  lt r5.w, r2.z, r5.w
  mul r6.xy, r9.xyxx, cb1[44].xyxx
  ftoi r14.xy, r6.xyxx
  mov r14.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r6.x, r14.xyzw, t0.xyzw
  ge r6.y, r6.x, l(0.984375)
  mul r7.z, r6.x, l(1.01587307)
  mad r6.x, r6.x, l(64.000000), l(-63.000000)
  movc r6.x, r6.y, r6.x, r7.z
  max r6.x, r6.x, l(0.00000001)
  rcp r6.x, r6.x
  movc r6.y, r5.w, r6.x, r6.z
  mov x2[1].x, r6.y
  add r6.x, r6.x, l(0.042000)
  mul r6.x, r6.x, r9.z
  lt r6.x, l(1.000000), r6.x
  and r6.x, r6.x, l(0x3f800000)
  mul r6.x, r6.x, r6.w
  movc r5.w, r5.w, r6.x, r6.w
  mov x0[1].x, r5.w
  add r4.w, r4.w, r5.w
  eq r4.w, r4.w, l(0.000000)
else 
  mov r4.w, l(-1)
endif 
if_z r4.w
  mad r6.xy, r2.xxxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(2.33333325, 3.000000, 0.000000, 0.000000)
  mul r6.xy, r6.xyxx, l(0.11764706, 0.11764706, 0.000000, 0.000000)
  mov r4.w, x1[0].x
  mov r5.w, x0[0].x
  mad r6.x, r6.x, r6.x, -r4.w
  mad r4.w, r5.w, r6.x, r4.w
  mov x1[0].x, r4.w
  mad r6.xzw, r12.xxyz, r4.wwww, r11.xxyz
  lt r4.w, r2.z, r4.w
  mul r6.xz, r6.xxzx, cb1[44].xxyx
  ftoi r9.xy, r6.xzxx
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r6.x, r9.xyzw, t0.xyzw
  ge r6.z, r6.x, l(0.984375)
  mul r7.z, r6.x, l(1.01587307)
  mad r6.x, r6.x, l(64.000000), l(-63.000000)
  movc r6.x, r6.z, r6.x, r7.z
  max r6.x, r6.x, l(0.00000001)
  rcp r6.x, r6.x
  mov r6.z, x2[0].x
  movc r6.z, r4.w, r6.x, r6.z
  mov x2[0].x, r6.z
  add r6.x, r6.x, l(0.042000)
  mul r6.x, r6.x, r6.w
  lt r6.x, l(1.000000), r6.x
  and r6.x, r6.x, l(0x3f800000)
  mul r6.x, r5.w, r6.x
  movc r4.w, r4.w, r6.x, r5.w
  mov x0[0].x, r4.w
  mov r5.w, x1[1].x
  mov r6.x, x0[1].x
  mad r6.y, r6.y, r6.y, -r5.w
  mad r5.w, r6.x, r6.y, r5.w
  mov x1[1].x, r5.w
  mad r6.yzw, r5.xxyz, r5.wwww, r11.xxyz
  lt r5.w, r2.z, r5.w
  mul r6.yz, r6.yyzy, cb1[44].xxyx
  ftoi r9.xy, r6.yzyy
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r6.y, r9.xyzw, t0.yxzw
  ge r6.z, r6.y, l(0.984375)
  mul r7.z, r6.y, l(1.01587307)
  mad r6.y, r6.y, l(64.000000), l(-63.000000)
  movc r6.y, r6.z, r6.y, r7.z
  max r6.y, r6.y, l(0.00000001)
  rcp r6.y, r6.y
  mov r6.z, x2[1].x
  movc r6.z, r5.w, r6.y, r6.z
  mov x2[1].x, r6.z
  add r6.y, r6.y, l(0.042000)
  mul r6.y, r6.y, r6.w
  lt r6.y, l(1.000000), r6.y
  and r6.y, r6.y, l(0x3f800000)
  mul r6.y, r6.y, r6.x
  movc r5.w, r5.w, r6.y, r6.x
  mov x0[1].x, r5.w
  add r4.w, r4.w, r5.w
  eq r4.w, r4.w, l(0.000000)
else 
  mov r4.w, l(-1)
endif 
if_z r4.w
  mad r6.xy, r2.xxxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(3.33333325, 4.000000, 0.000000, 0.000000)
  mul r6.xy, r6.xyxx, l(0.11764706, 0.11764706, 0.000000, 0.000000)
  mov r4.w, x1[0].x
  mov r5.w, x0[0].x
  mad r6.x, r6.x, r6.x, -r4.w
  mad r4.w, r5.w, r6.x, r4.w
  mov x1[0].x, r4.w
  mad r6.xzw, r12.xxyz, r4.wwww, r11.xxyz
  lt r4.w, r2.z, r4.w
  mul r6.xz, r6.xxzx, cb1[44].xxyx
  ftoi r9.xy, r6.xzxx
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r6.x, r9.xyzw, t0.xyzw
  ge r6.z, r6.x, l(0.984375)
  mul r7.z, r6.x, l(1.01587307)
  mad r6.x, r6.x, l(64.000000), l(-63.000000)
  movc r6.x, r6.z, r6.x, r7.z
  max r6.x, r6.x, l(0.00000001)
  rcp r6.x, r6.x
  mov r6.z, x2[0].x
  movc r6.z, r4.w, r6.x, r6.z
  mov x2[0].x, r6.z
  add r6.x, r6.x, l(0.042000)
  mul r6.x, r6.x, r6.w
  lt r6.x, l(1.000000), r6.x
  and r6.x, r6.x, l(0x3f800000)
  mul r6.x, r5.w, r6.x
  movc r4.w, r4.w, r6.x, r5.w
  mov x0[0].x, r4.w
  mov r5.w, x1[1].x
  mov r6.x, x0[1].x
  mad r6.y, r6.y, r6.y, -r5.w
  mad r5.w, r6.x, r6.y, r5.w
  mov x1[1].x, r5.w
  mad r6.yzw, r5.xxyz, r5.wwww, r11.xxyz
  lt r5.w, r2.z, r5.w
  mul r6.yz, r6.yyzy, cb1[44].xxyx
  ftoi r9.xy, r6.yzyy
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r6.y, r9.xyzw, t0.yxzw
  ge r6.z, r6.y, l(0.984375)
  mul r7.z, r6.y, l(1.01587307)
  mad r6.y, r6.y, l(64.000000), l(-63.000000)
  movc r6.y, r6.z, r6.y, r7.z
  max r6.y, r6.y, l(0.00000001)
  rcp r6.y, r6.y
  mov r6.z, x2[1].x
  movc r6.z, r5.w, r6.y, r6.z
  mov x2[1].x, r6.z
  add r6.y, r6.y, l(0.042000)
  mul r6.y, r6.y, r6.w
  lt r6.y, l(1.000000), r6.y
  and r6.y, r6.y, l(0x3f800000)
  mul r6.y, r6.y, r6.x
  movc r5.w, r5.w, r6.y, r6.x
  mov x0[1].x, r5.w
  add r4.w, r4.w, r5.w
  eq r4.w, r4.w, l(0.000000)
else 
  mov r4.w, l(-1)
endif 
if_z r4.w
  mad r6.xy, r2.xxxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(4.33333349, 5.000000, 0.000000, 0.000000)
  mul r6.xy, r6.xyxx, l(0.11764706, 0.11764706, 0.000000, 0.000000)
  mov r4.w, x1[0].x
  mov r5.w, x0[0].x
  mad r6.x, r6.x, r6.x, -r4.w
  mad r4.w, r5.w, r6.x, r4.w
  mov x1[0].x, r4.w
  mad r6.xzw, r12.xxyz, r4.wwww, r11.xxyz
  lt r4.w, r2.z, r4.w
  mul r6.xz, r6.xxzx, cb1[44].xxyx
  ftoi r9.xy, r6.xzxx
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r6.x, r9.xyzw, t0.xyzw
  ge r6.z, r6.x, l(0.984375)
  mul r7.z, r6.x, l(1.01587307)
  mad r6.x, r6.x, l(64.000000), l(-63.000000)
  movc r6.x, r6.z, r6.x, r7.z
  max r6.x, r6.x, l(0.00000001)
  rcp r6.x, r6.x
  mov r6.z, x2[0].x
  movc r6.z, r4.w, r6.x, r6.z
  mov x2[0].x, r6.z
  add r6.x, r6.x, l(0.042000)
  mul r6.x, r6.x, r6.w
  lt r6.x, l(1.000000), r6.x
  and r6.x, r6.x, l(0x3f800000)
  mul r6.x, r5.w, r6.x
  movc r4.w, r4.w, r6.x, r5.w
  mov x0[0].x, r4.w
  mov r5.w, x1[1].x
  mov r6.x, x0[1].x
  mad r6.y, r6.y, r6.y, -r5.w
  mad r5.w, r6.x, r6.y, r5.w
  mov x1[1].x, r5.w
  mad r6.yzw, r5.xxyz, r5.wwww, r11.xxyz
  lt r5.w, r2.z, r5.w
  mul r6.yz, r6.yyzy, cb1[44].xxyx
  ftoi r9.xy, r6.yzyy
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r6.y, r9.xyzw, t0.yxzw
  ge r6.z, r6.y, l(0.984375)
  mul r7.z, r6.y, l(1.01587307)
  mad r6.y, r6.y, l(64.000000), l(-63.000000)
  movc r6.y, r6.z, r6.y, r7.z
  max r6.y, r6.y, l(0.00000001)
  rcp r6.y, r6.y
  mov r6.z, x2[1].x
  movc r6.z, r5.w, r6.y, r6.z
  mov x2[1].x, r6.z
  add r6.y, r6.y, l(0.042000)
  mul r6.y, r6.y, r6.w
  lt r6.y, l(1.000000), r6.y
  and r6.y, r6.y, l(0x3f800000)
  mul r6.y, r6.y, r6.x
  movc r5.w, r5.w, r6.y, r6.x
  mov x0[1].x, r5.w
  add r4.w, r4.w, r5.w
  eq r4.w, r4.w, l(0.000000)
else 
  mov r4.w, l(-1)
endif 
if_z r4.w
  mad r6.xy, r2.xxxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(5.33333349, 6.000000, 0.000000, 0.000000)
  mul r6.xy, r6.xyxx, l(0.11764706, 0.11764706, 0.000000, 0.000000)
  mov r4.w, x1[0].x
  mov r5.w, x0[0].x
  mad r6.x, r6.x, r6.x, -r4.w
  mad r4.w, r5.w, r6.x, r4.w
  mov x1[0].x, r4.w
  mad r6.xzw, r12.xxyz, r4.wwww, r11.xxyz
  lt r4.w, r2.z, r4.w
  mul r6.xz, r6.xxzx, cb1[44].xxyx
  ftoi r9.xy, r6.xzxx
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r6.x, r9.xyzw, t0.xyzw
  ge r6.z, r6.x, l(0.984375)
  mul r7.z, r6.x, l(1.01587307)
  mad r6.x, r6.x, l(64.000000), l(-63.000000)
  movc r6.x, r6.z, r6.x, r7.z
  max r6.x, r6.x, l(0.00000001)
  rcp r6.x, r6.x
  mov r6.z, x2[0].x
  movc r6.z, r4.w, r6.x, r6.z
  mov x2[0].x, r6.z
  add r6.x, r6.x, l(0.042000)
  mul r6.x, r6.x, r6.w
  lt r6.x, l(1.000000), r6.x
  and r6.x, r6.x, l(0x3f800000)
  mul r6.x, r5.w, r6.x
  movc r4.w, r4.w, r6.x, r5.w
  mov x0[0].x, r4.w
  mov r5.w, x1[1].x
  mov r6.x, x0[1].x
  mad r6.y, r6.y, r6.y, -r5.w
  mad r5.w, r6.x, r6.y, r5.w
  mov x1[1].x, r5.w
  mad r6.yzw, r5.xxyz, r5.wwww, r11.xxyz
  lt r5.w, r2.z, r5.w
  mul r6.yz, r6.yyzy, cb1[44].xxyx
  ftoi r9.xy, r6.yzyy
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r6.y, r9.xyzw, t0.yxzw
  ge r6.z, r6.y, l(0.984375)
  mul r7.z, r6.y, l(1.01587307)
  mad r6.y, r6.y, l(64.000000), l(-63.000000)
  movc r6.y, r6.z, r6.y, r7.z
  max r6.y, r6.y, l(0.00000001)
  rcp r6.y, r6.y
  mov r6.z, x2[1].x
  movc r6.z, r5.w, r6.y, r6.z
  mov x2[1].x, r6.z
  add r6.y, r6.y, l(0.042000)
  mul r6.y, r6.y, r6.w
  lt r6.y, l(1.000000), r6.y
  and r6.y, r6.y, l(0x3f800000)
  mul r6.y, r6.y, r6.x
  movc r5.w, r5.w, r6.y, r6.x
  mov x0[1].x, r5.w
  add r4.w, r4.w, r5.w
  eq r4.w, r4.w, l(0.000000)
else 
  mov r4.w, l(-1)
endif 
if_z r4.w
  mad r6.xy, r2.xxxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(6.33333349, 7.000000, 0.000000, 0.000000)
  mul r6.xy, r6.xyxx, l(0.11764706, 0.11764706, 0.000000, 0.000000)
  mov r4.w, x1[0].x
  mov r5.w, x0[0].x
  mad r6.x, r6.x, r6.x, -r4.w
  mad r4.w, r5.w, r6.x, r4.w
  mov x1[0].x, r4.w
  mad r6.xzw, r12.xxyz, r4.wwww, r11.xxyz
  lt r4.w, r2.z, r4.w
  mul r6.xz, r6.xxzx, cb1[44].xxyx
  ftoi r9.xy, r6.xzxx
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r6.x, r9.xyzw, t0.xyzw
  ge r6.z, r6.x, l(0.984375)
  mul r7.z, r6.x, l(1.01587307)
  mad r6.x, r6.x, l(64.000000), l(-63.000000)
  movc r6.x, r6.z, r6.x, r7.z
  max r6.x, r6.x, l(0.00000001)
  rcp r6.x, r6.x
  mov r6.z, x2[0].x
  movc r6.z, r4.w, r6.x, r6.z
  mov x2[0].x, r6.z
  add r6.x, r6.x, l(0.042000)
  mul r6.x, r6.x, r6.w
  lt r6.x, l(1.000000), r6.x
  and r6.x, r6.x, l(0x3f800000)
  mul r6.x, r5.w, r6.x
  movc r4.w, r4.w, r6.x, r5.w
  mov x0[0].x, r4.w
  mov r5.w, x1[1].x
  mov r6.x, x0[1].x
  mad r6.y, r6.y, r6.y, -r5.w
  mad r5.w, r6.x, r6.y, r5.w
  mov x1[1].x, r5.w
  mad r6.yzw, r5.xxyz, r5.wwww, r11.xxyz
  lt r5.w, r2.z, r5.w
  mul r6.yz, r6.yyzy, cb1[44].xxyx
  ftoi r9.xy, r6.yzyy
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r6.y, r9.xyzw, t0.yxzw
  ge r6.z, r6.y, l(0.984375)
  mul r7.z, r6.y, l(1.01587307)
  mad r6.y, r6.y, l(64.000000), l(-63.000000)
  movc r6.y, r6.z, r6.y, r7.z
  max r6.y, r6.y, l(0.00000001)
  rcp r6.y, r6.y
  mov r6.z, x2[1].x
  movc r6.z, r5.w, r6.y, r6.z
  mov x2[1].x, r6.z
  add r6.y, r6.y, l(0.042000)
  mul r6.y, r6.y, r6.w
  lt r6.y, l(1.000000), r6.y
  and r6.y, r6.y, l(0x3f800000)
  mul r6.y, r6.y, r6.x
  movc r5.w, r5.w, r6.y, r6.x
  mov x0[1].x, r5.w
  add r4.w, r4.w, r5.w
  eq r4.w, r4.w, l(0.000000)
else 
  mov r4.w, l(-1)
endif 
if_z r4.w
  mad r6.xy, r2.xxxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(7.33333349, 8.000000, 0.000000, 0.000000)
  mul r6.xy, r6.xyxx, l(0.11764706, 0.11764706, 0.000000, 0.000000)
  mov r2.x, x1[0].x
  mov r4.w, x0[0].x
  mad r5.w, r6.x, r6.x, -r2.x
  mad r2.x, r4.w, r5.w, r2.x
  mad r6.xzw, r12.xxyz, r2.xxxx, r11.xxyz
  lt r2.x, r2.z, r2.x
  mul r6.xz, r6.xxzx, cb1[44].xxyx
  ftoi r9.xy, r6.xzxx
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r5.w, r9.xyzw, t0.yzwx
  ge r6.x, r5.w, l(0.984375)
  mul r6.z, r5.w, l(1.01587307)
  mad r5.w, r5.w, l(64.000000), l(-63.000000)
  movc r5.w, r6.x, r5.w, r6.z
  max r5.w, r5.w, l(0.00000001)
  rcp r5.w, r5.w
  mov r6.x, x2[0].x
  movc r6.x, r2.x, r5.w, r6.x
  mov x2[0].x, r6.x
  add r5.w, r5.w, l(0.042000)
  mul r5.w, r5.w, r6.w
  lt r5.w, l(1.000000), r5.w
  and r5.w, r5.w, l(0x3f800000)
  mul r5.w, r4.w, r5.w
  movc r2.x, r2.x, r5.w, r4.w
  mov x0[0].x, r2.x
  mov r2.x, x1[1].x
  mov r4.w, x0[1].x
  mad r5.w, r6.y, r6.y, -r2.x
  mad r2.x, r4.w, r5.w, r2.x
  mad r5.xyz, r5.xyzx, r2.xxxx, r11.xyzx
  lt r2.x, r2.z, r2.x
  mul r5.xy, r5.xyxx, cb1[44].xyxx
  ftoi r6.xy, r5.xyxx
  mov r6.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r2.z, r6.xyzw, t0.yzxw
  ge r5.x, r2.z, l(0.984375)
  mul r5.y, r2.z, l(1.01587307)
  mad r2.z, r2.z, l(64.000000), l(-63.000000)
  movc r2.z, r5.x, r2.z, r5.y
  max r2.z, r2.z, l(0.00000001)
  rcp r2.z, r2.z
  mov r5.x, x2[1].x
  movc r5.x, r2.x, r2.z, r5.x
  mov x2[1].x, r5.x
  add r2.z, r2.z, l(0.042000)
  mul r2.z, r2.z, r5.z
  lt r2.z, l(1.000000), r2.z
  and r2.z, r2.z, l(0x3f800000)
  mul r2.z, r2.z, r4.w
  movc r2.x, r2.x, r2.z, r4.w
  mov x0[1].x, r2.x
endif 
mov r2.x, x2[0].x
add r2.x, -r10.z, r2.x
lt r2.x, l(2.400000), |r2.x|
mov r2.z, x0[0].x
mad r2.z, -r2.z, l(0.500000), l(1.000000)
movc r2.x, r2.x, l(0.500000), r2.z
mov r2.z, x2[1].x
add r2.z, -r10.z, r2.z
lt r2.z, l(2.400000), |r2.z|
mov r4.w, x0[1].x
mul r4.w, r4.w, l(0.500000)
movc r2.z, r2.z, l(-0.500000), -r4.w
add r2.x, r2.z, r2.x
add_sat r2.x, -r2.x, l(1.000000)
mad r2.z, r2.x, l(-2.000000), l(3.000000)
mul r2.x, r2.x, r2.x
mul r2.x, r2.x, r2.z
min r2.x, r2.x, r39.w
mul r2.x, r2.x, r39.z
mul r5.xyz, r33.xyzx, r2.xxxx
mad r6.xyz, r5.xyzx, r35.xyzx, r29.xyzx
mad r9.xyz, r5.xyzx, r36.xyzx, r30.xyzx
mad r10.xyz, r5.xyzx, r37.xyzx, r32.xyzx
mad r5.xyz, r5.xyzx, r38.xyzx, r31.xyzx
mad r2.x, -cb1[62].w, r2.y, l(1.000000)
mul r2.y, r2.x, l(5.000000)
mad r2.z, r2.x, l(5.000000), l(-2.500000)
mul_sat r2.z, r2.z, l(0.400000)
mul r2.z, r2.z, l(100.000000)
mad r7.zw, -r2.xxxx, l(0.000000, 0.000000, 10.000000, 5.000000), l(0.000000, 0.000000, 6.857410, 7.085000)
exp r4.w, r7.z
mul r4.w, r4.w, r7.x
mul r4.w, r4.w, l(9.136810)
mul r5.w, r2.x, r2.y
mad r5.w, -r5.w, l(2.015905), r7.w
exp r5.w, r5.w
mul r5.w, r5.w, r7.x
mul r5.w, r5.w, l(9.708090)
max r4.w, r4.w, r5.w
max r4.w, r4.w, l(1.268160)
mov r11.xy, l(0,0,0,0)
mov r12.w, l(0)
mov r14.yz, l(0,0,1.000000,0)
mov r15.xy, l(0,0,0,0)
mov r16.xy, l(0,0,0,0)
mov r17.xy, l(0,0,0,0)
mov r18.x, l(1.000000)
mov r20.xyzw, l(0,0,0,0)
mov r21.yzw, l(0,0,0,0)
mov r5.w, l(0)
mov r6.w, l(0)
loop 
  uge r7.z, r6.w, cb2[0].y
  breakc_nz r7.z
  ushr r11.z, r6.w, l(5)
  iadd r12.xyz, r11.xyzx, r19.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r7.z, r12.xyzw, t7.yzxw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r22.xyzw, r6.w, l(0), t15.wxyz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r23.xyzw, r6.w, l(16), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r6.w, l(32), t15.yxwz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r6.w, l(48), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r6.w, l(64), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r6.w, l(80), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r11.zw, r6.w, l(96), t15.xxxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r6.w, l(116), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r6.w, l(132), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r6.w, l(148), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r6.w, l(164), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r6.w, l(180), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r6.w, l(196), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xy, r6.w, l(212), t15.xyxx
  add r12.xyz, -r22.yzwy, v5.xyzx
  dp3 r7.w, r12.xyzx, r12.xyzx
  sqrt r7.w, r7.w
  ge r7.w, cb2[54].y, r7.w
  and r8.w, r28.y, l(0x0000ffff)
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r8.w, l(0), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r8.w, l(16), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r8.w, l(32), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r38.xyzw, r8.w, l(48), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r39.xyzw, r8.w, l(64), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r40.xyzw, r8.w, l(80), t16.xyzw
  dp3 r9.w, r35.xyzx, r12.xyzx
  add_sat r9.w, r35.w, r9.w
  dp3 r10.w, r36.xyzx, r12.xyzx
  add_sat r10.w, r36.w, r10.w
  mul r9.w, r9.w, r10.w
  dp3 r10.w, r37.xyzx, r12.xyzx
  add_sat r10.w, r37.w, r10.w
  mul r9.w, r9.w, r10.w
  dp3 r10.w, r38.xyzx, r12.xyzx
  add_sat r10.w, r38.w, r10.w
  mul r9.w, r9.w, r10.w
  dp3 r10.w, r39.xyzx, r12.xyzx
  add_sat r10.w, r39.w, r10.w
  mul r9.w, r9.w, r10.w
  dp3 r10.w, r40.xyzx, r12.xyzx
  add_sat r10.w, r40.w, r10.w
  mul r14.x, r9.w, r10.w
  and r9.w, r11.z, l(1)
  movc r14.xw, r9.wwww, r14.xxxy, r14.zzzx
  mov r35.xy, r28.zwzz
  mov r35.z, r29.z
  dp3 r9.w, r13.xyzx, r35.xyzx
  dp3 r10.w, r12.xyzx, r35.xyzx
  add r10.w, -r29.w, r10.w
  ge r15.w, r10.w, l(0.000000)
  max r10.w, r2.z, |r10.w|
  movc r10.w, r15.w, r10.w, -r10.w
  max r9.w, -r9.w, l(0.00000010)
  div r9.w, r10.w, r9.w
  min r9.w, |r9.w|, l(131072.000000)
  mov r29.z, r30.z
  dp3 r10.w, r13.xyzx, r29.xyzx
  dp3 r15.w, r12.xyzx, r29.xyzx
  add r15.w, -r30.w, r15.w
  ge r16.w, r15.w, l(0.000000)
  max r15.w, r2.z, |r15.w|
  movc r15.w, r16.w, r15.w, -r15.w
  max r10.w, -r10.w, l(0.00000010)
  div r10.w, r15.w, r10.w
  min r9.w, r9.w, |r10.w|
  mov r30.z, r31.z
  dp3 r10.w, r13.xyzx, r30.xyzx
  dp3 r15.w, r12.xyzx, r30.xyzx
  add r15.w, -r31.w, r15.w
  ge r16.w, r15.w, l(0.000000)
  max r15.w, r2.z, |r15.w|
  movc r15.w, r16.w, r15.w, -r15.w
  max r10.w, -r10.w, l(0.00000010)
  div r10.w, r15.w, r10.w
  min r9.w, r9.w, |r10.w|
  mov r31.z, r32.z
  dp3 r10.w, r13.xyzx, r31.xyzx
  dp3 r15.w, r12.xyzx, r31.xyzx
  add r15.w, -r32.w, r15.w
  ge r16.w, r15.w, l(0.000000)
  max r15.w, r2.z, |r15.w|
  movc r15.w, r16.w, r15.w, -r15.w
  max r10.w, -r10.w, l(0.00000010)
  div r10.w, r15.w, r10.w
  min r9.w, r9.w, |r10.w|
  mov r32.z, r33.x
  dp3 r10.w, r13.xyzx, r32.xyzx
  dp3 r15.w, r12.xyzx, r32.xyzx
  add r15.w, -r33.y, r15.w
  ge r16.w, r15.w, l(0.000000)
  max r15.w, r2.z, |r15.w|
  movc r15.w, r16.w, r15.w, -r15.w
  max r10.w, -r10.w, l(0.00000010)
  div r10.w, r15.w, r10.w
  min r9.w, r9.w, |r10.w|
  mov r34.zw, r33.zzzw
  dp3 r10.w, r13.zxyz, r34.xzwx
  dp3 r15.w, r12.zxyz, r34.xzwx
  add r15.w, -r34.y, r15.w
  ge r16.w, r15.w, l(0.000000)
  max r15.w, r2.z, |r15.w|
  movc r15.w, r16.w, r15.w, -r15.w
  max r10.w, -r10.w, l(0.00000010)
  div r10.w, r15.w, r10.w
  min r9.w, r9.w, |r10.w|
  mov r29.x, r25.w
  mov r29.yz, r26.zzwz
  add r29.xyz, r12.xyzx, r29.xyzx
  mad r29.xyz, r13.xyzx, r9.wwww, r29.xyzx
  dp3 r10.w, r29.xyzx, r29.xyzx
  sqrt r10.w, r10.w
  div r9.w, r9.w, r10.w
  add r9.w, r9.w, r9.w
  sqrt r9.w, r9.w
  mad r9.w, r2.x, l(5.000000), r9.w
  add r9.w, r9.w, l(-0.844800)
  mov r22.y, r23.z
  mov r22.z, r24.x
  dp3 r30.x, r29.xyzx, r22.xyzx
  mov r31.xy, r23.xwxx
  mov r31.z, r24.w
  dp3 r30.y, r29.xyzx, r31.xyzx
  mov r24.x, r23.y
  dp3 r30.z, r29.xyzx, r24.xyzx
  ubfe r18.zw, l(0, 0, 6, 9), l(0, 0, 25, 16), r28.yyyy
  utof r30.w, r18.w
  sample_l_indexable(texturecubearray)(float,float,float,float) r23.xyz, r30.xyzw, t8.xyzw, s2, r9.w
  and r28.yzw, r23.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
  ieq r28.yzw, r28.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
  or r9.w, r28.z, r28.y
  or r9.w, r28.w, r9.w
  movc r23.xyz, r9.wwww, l(1.000000,1.000000,0,0), r23.xyzx
  dp3 r29.x, r12.xyzx, r22.xyzx
  dp3 r29.y, r12.xyzx, r31.xyzx
  dp3 r29.z, r12.xyzx, r24.xyzx
  mad_sat r25.xyz, r29.xyzx, r25.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mov r26.z, r27.x
  mad r25.xyz, r25.xyzx, r26.xyzx, r27.yzwy
  dp3 r30.x, r3.xyzx, r22.xyzx
  dp3 r30.y, r3.xyzx, r31.xyzx
  dp3 r30.z, r3.xyzx, r24.xyzx
  lt r22.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r30.xyzx
  movc r15.z, r22.x, l(0), l(0.500000)
  add r24.xyz, r15.xyzx, r25.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r24.xyz, r24.xyzx, t17.xyzw, s4, l(0.000000)
  movc r16.z, r22.y, l(0), l(0.500000)
  add r22.xyw, r16.xyxz, r25.xyxz
  sample_l_indexable(texture3d)(float,float,float,float) r22.xyw, r22.xywx, t18.xywz, s4, l(0.000000)
  movc r17.z, r22.z, l(0), l(0.500000)
  add r25.xyz, r17.xyzx, r25.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r25.xyz, r25.xyzx, t19.xyzw, s4, l(0.000000)
  mul r26.xyz, r30.xyzx, r30.xyzx
  sample_l_indexable(texturecubearray)(float,float,float,float) r27.xyz, r30.xyzw, t8.xyzw, s2, l(6.000000)
  and r28.yzw, r27.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
  ieq r28.yzw, r28.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
  or r9.w, r28.z, r28.y
  or r9.w, r28.w, r9.w
  movc r27.xyz, r9.wwww, l(1.000000,1.000000,0,0), r27.xyzx
  mov r29.xyzw, r20.xyzw
  mov r28.yzw, r21.yyzw
  mov r9.w, r5.w
  mov r10.w, r7.z
  loop 
    breakc_z r10.w
    firstbit_lo r15.z, r10.w
    ishl r15.z, l(1), r15.z
    and r15.w, r10.w, r15.z
    if_nz r15.w
      not r15.z, r15.z
      and r10.w, r10.w, r15.z
      if_nz r7.w
        mov r15.z, r11.z
        mov r30.xy, r14.xwxx
        mov r15.w, l(1)
        loop 
          ige r16.z, r15.w, r18.z
          breakc_nz r16.z
          iadd r16.z, r8.w, r15.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r16.z, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r16.z, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r16.z, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r16.z, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r16.z, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r16.z, l(80), t16.xyzw
          dp3 r16.z, r31.xyzx, r12.xyzx
          add_sat r16.z, r31.w, r16.z
          mul r16.z, r16.z, r30.x
          dp3 r16.w, r32.xyzx, r12.xyzx
          add_sat r16.w, r32.w, r16.w
          mul r16.z, r16.w, r16.z
          dp3 r16.w, r33.xyzx, r12.xyzx
          add_sat r16.w, r33.w, r16.w
          mul r16.z, r16.w, r16.z
          dp3 r16.w, r34.xyzx, r12.xyzx
          add_sat r16.w, r34.w, r16.w
          mul r16.z, r16.w, r16.z
          dp3 r16.w, r35.xyzx, r12.xyzx
          add_sat r16.w, r35.w, r16.w
          mul r16.z, r16.w, r16.z
          dp3 r16.w, r36.xyzx, r12.xyzx
          add_sat r16.w, r36.w, r16.w
          mul r30.x, r16.w, r16.z
          ushr r17.z, r15.z, l(2)
          ubfe r17.w, l(1), l(2), r15.z
          and r18.w, r17.z, l(2)
          max r19.w, r30.x, r30.y
          mad r16.z, -r16.z, r16.w, l(1.000000)
          mul r16.z, r16.z, r30.y
          movc r18.y, r18.w, r16.z, r19.w
          movc r30.xy, r17.wwww, r30.xyxx, r18.xyxx
          iadd r15.w, r15.w, l(1)
          mov r15.z, r17.z
        endloop 
        mov_sat r30.y, r30.y
        mul r15.z, r11.w, r30.y
        lt r15.w, l(0.000000), r15.z
        if_nz r15.w
          mad r31.z, r30.y, r11.w, r28.w
          mul r15.z, r28.x, r15.z
          mul r30.xzw, r15.zzzz, r26.xxyz
          mul r32.xyz, r22.xywx, r30.zzzz
          mad r32.xyz, r24.xyzx, r30.xxxx, r32.xyzx
          mad r30.xzw, r25.xxyz, r30.wwww, r32.xxyz
          mul r32.xyz, r27.xyzx, r30.xzwx
          dp3 r15.w, r32.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r32.xyz, r30.xzwx, r27.xyzx, r29.xyzx
          mul r16.z, r4.w, r15.w
          mul r30.xzw, r15.zzzz, r23.xxyz
          dp3 r15.z, r30.xzwx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r15.z, r4.w, r15.w, r15.z
          div r15.z, r16.z, r15.z
          mov r33.x, r29.w
          mov r33.yz, r28.yyzy
          mad r31.xyw, r30.zwzx, r15.zzzz, r33.yzyx
          mov r32.w, r31.w
        else 
          mov r32.xyzw, r29.xyzw
          mov r31.xyz, r28.yzwy
        endif 
        mov r9.w, l(-1)
        mov r29.xyzw, r32.xyzw
        mov r28.yzw, r31.xxyz
        break 
      endif 
    endif 
  endloop 
  if_nz r9.w
    mov r20.xyzw, r29.xyzw
    mov r21.yzw, r28.yyzw
    mov r5.w, l(-1)
    break 
  endif 
  iadd r6.w, r6.w, l(32)
  mov r20.xyzw, r29.xyzw
  mov r21.yzw, r28.yyzw
  mov r5.w, r9.w
endloop 
if_z r5.w
  iadd r5.w, cb2[0].y, -cb2[58].x
  and r6.w, r5.w, l(-32)
  iadd r7.z, r5.w, -r6.w
  and r7.w, cb2[0].y, l(-32)
  iadd r8.w, -r7.w, cb2[0].y
  mov r11.xy, l(0,0,0,0)
  mov r12.w, l(0)
  mov r14.yz, l(0,0,1.000000,0)
  mov r15.xy, l(0,0,0,0)
  mov r16.x, l(1.000000)
  mov r17.xy, l(0,0,0,0)
  mov r18.xy, l(0,0,0,0)
  mov r22.xyzw, r20.xyzw
  mov r23.yzw, r21.yyzw
  mov r9.w, r6.w
  loop 
    uge r10.w, r9.w, cb2[0].y
    breakc_nz r10.w
    ushr r11.z, r9.w, l(5)
    iadd r12.xyz, r11.xyzx, r19.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r10.w, r12.xyzw, t7.yzwx
    ieq r11.z, r6.w, r9.w
    bfi r11.w, r7.z, l(0), l(0), r10.w
    movc r10.w, r11.z, r11.w, r10.w
    ieq r11.z, r7.w, r9.w
    ubfe r11.w, r8.w, l(0), r10.w
    movc r10.w, r11.z, r11.w, r10.w
    iadd r11.z, r9.w, cb2[0].x
    mov r24.xyzw, r22.xyzw
    mov r25.xyz, r23.yzwy
    mov r11.w, r10.w
    loop 
      breakc_z r11.w
      firstbit_lo r12.x, r11.w
      ishl r12.y, l(1), r12.x
      and r12.z, r11.w, r12.y
      if_nz r12.z
        xor r11.w, r11.w, r12.y
        iadd r12.y, r11.z, r12.x
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r26.xyzw, r12.y, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r27.xy, r12.y, l(16), t11.xyxx
        add r26.xyz, r26.xyzx, -v5.xyzx
        mov r27.z, r26.w
        lt r26.xyz, |r26.xyzx|, r27.zxyz
        and r12.y, r26.y, r26.x
        and r12.y, r26.z, r12.y
        if_nz r12.y
          iadd r12.x, r9.w, r12.x
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r12.x, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r12.yz, r12.x, l(96), t15.xxyx
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r12.x, l(116), t15.zwxy
          add r28.xyz, -r26.yzwy, v5.xyzx
          and r14.w, r27.w, l(0x0000ffff)
          ubfe r15.w, l(6), l(25), r27.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r14.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r14.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r14.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r14.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r14.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r14.w, l(80), t16.xyzw
          dp3 r16.z, r29.xyzx, r28.xyzx
          add_sat r16.z, r29.w, r16.z
          dp3 r16.w, r30.xyzx, r28.xyzx
          add_sat r16.w, r30.w, r16.w
          mul r16.z, r16.w, r16.z
          dp3 r16.w, r31.xyzx, r28.xyzx
          add_sat r16.w, r31.w, r16.w
          mul r16.z, r16.w, r16.z
          dp3 r16.w, r32.xyzx, r28.xyzx
          add_sat r16.w, r32.w, r16.w
          mul r16.z, r16.w, r16.z
          dp3 r16.w, r33.xyzx, r28.xyzx
          add_sat r16.w, r33.w, r16.w
          mul r16.z, r16.w, r16.z
          dp3 r16.w, r34.xyzx, r28.xyzx
          add_sat r16.w, r34.w, r16.w
          mul r14.x, r16.w, r16.z
          and r16.z, r12.y, l(1)
          movc r16.zw, r16.zzzz, r14.xxxy, r14.zzzx
          mov r14.x, r12.y
          mov r29.xy, r16.zwzz
          mov r17.w, l(1)
          loop 
            ige r18.w, r17.w, r15.w
            breakc_nz r18.w
            iadd r18.w, r14.w, r17.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r18.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r18.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r18.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r18.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r18.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r18.w, l(80), t16.xyzw
            dp3 r18.w, r30.xyzx, r28.xyzx
            add_sat r18.w, r30.w, r18.w
            mul r18.w, r18.w, r29.x
            dp3 r19.w, r31.xyzx, r28.xyzx
            add_sat r19.w, r31.w, r19.w
            mul r18.w, r18.w, r19.w
            dp3 r19.w, r32.xyzx, r28.xyzx
            add_sat r19.w, r32.w, r19.w
            mul r18.w, r18.w, r19.w
            dp3 r19.w, r33.xyzx, r28.xyzx
            add_sat r19.w, r33.w, r19.w
            mul r18.w, r18.w, r19.w
            dp3 r19.w, r34.xyzx, r28.xyzx
            add_sat r19.w, r34.w, r19.w
            mul r18.w, r18.w, r19.w
            dp3 r19.w, r35.xyzx, r28.xyzx
            add_sat r19.w, r35.w, r19.w
            mul r29.x, r18.w, r19.w
            ushr r26.w, r14.x, l(2)
            ubfe r28.w, l(1), l(2), r14.x
            and r29.z, r26.w, l(2)
            max r29.w, r29.x, r29.y
            mad r18.w, -r18.w, r19.w, l(1.000000)
            mul r18.w, r18.w, r29.y
            movc r16.y, r29.z, r18.w, r29.w
            movc r29.xy, r28.wwww, r29.xyxx, r16.xyxx
            iadd r17.w, r17.w, l(1)
            mov r14.x, r26.w
          endloop 
          mov_sat r29.y, r29.y
          mul r12.y, r12.z, r29.y
          lt r14.x, l(0.000000), r12.y
          if_nz r14.x
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r12.x, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r12.x, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r12.x, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r12.x, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r12.x, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r12.x, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r12.x, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r12.x, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r12.x, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xyzw, r12.x, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r40.xy, r12.x, l(212), t15.xyxx
            mad r25.z, r29.y, r12.z, r25.z
            mul r12.x, r27.z, r12.y
            mov r27.z, r35.z
            dp3 r12.y, r13.xyzx, r27.xyzx
            dp3 r12.z, r28.xyzx, r27.xyzx
            add r12.z, -r35.w, r12.z
            ge r14.x, r12.z, l(0.000000)
            max r12.z, r2.z, |r12.z|
            movc r12.z, r14.x, r12.z, -r12.z
            max r12.y, -r12.y, l(0.00000010)
            div r12.y, r12.z, r12.y
            min r12.y, |r12.y|, l(131072.000000)
            mov r35.z, r36.z
            dp3 r12.z, r13.xyzx, r35.xyzx
            dp3 r14.x, r28.xyzx, r35.xyzx
            add r14.x, -r36.w, r14.x
            ge r14.w, r14.x, l(0.000000)
            max r14.x, r2.z, |r14.x|
            movc r14.x, r14.w, r14.x, -r14.x
            max r12.z, -r12.z, l(0.00000010)
            div r12.z, r14.x, r12.z
            min r12.y, |r12.z|, r12.y
            mov r36.z, r37.z
            dp3 r12.z, r13.xyzx, r36.xyzx
            dp3 r14.x, r28.xyzx, r36.xyzx
            add r14.x, -r37.w, r14.x
            ge r14.w, r14.x, l(0.000000)
            max r14.x, r2.z, |r14.x|
            movc r14.x, r14.w, r14.x, -r14.x
            max r12.z, -r12.z, l(0.00000010)
            div r12.z, r14.x, r12.z
            min r12.y, |r12.z|, r12.y
            mov r37.z, r38.z
            dp3 r12.z, r13.xyzx, r37.xyzx
            dp3 r14.x, r28.xyzx, r37.xyzx
            add r14.x, -r38.w, r14.x
            ge r14.w, r14.x, l(0.000000)
            max r14.x, r2.z, |r14.x|
            movc r14.x, r14.w, r14.x, -r14.x
            max r12.z, -r12.z, l(0.00000010)
            div r12.z, r14.x, r12.z
            min r12.y, |r12.z|, r12.y
            mov r38.z, r39.x
            dp3 r12.z, r13.xyzx, r38.xyzx
            dp3 r14.x, r28.xyzx, r38.xyzx
            add r14.x, -r39.y, r14.x
            ge r14.w, r14.x, l(0.000000)
            max r14.x, r2.z, |r14.x|
            movc r14.x, r14.w, r14.x, -r14.x
            max r12.z, -r12.z, l(0.00000010)
            div r12.z, r14.x, r12.z
            min r12.y, |r12.z|, r12.y
            mov r40.zw, r39.zzzw
            dp3 r12.z, r13.zxyz, r40.xzwx
            dp3 r14.x, r28.zxyz, r40.xzwx
            add r14.x, -r40.y, r14.x
            ge r14.w, r14.x, l(0.000000)
            max r14.x, r2.z, |r14.x|
            movc r14.x, r14.w, r14.x, -r14.x
            max r12.z, -r12.z, l(0.00000010)
            div r12.z, r14.x, r12.z
            min r12.y, |r12.z|, r12.y
            mov r27.x, r32.w
            mov r27.yz, r33.zzwz
            add r16.yzw, r28.xxyz, r27.xxyz
            mad r16.yzw, r13.xxyz, r12.yyyy, r16.yyzw
            dp3 r12.z, r16.yzwy, r16.yzwy
            sqrt r12.z, r12.z
            div r12.y, r12.y, r12.z
            add r12.y, r12.y, r12.y
            sqrt r12.y, r12.y
            mad r12.y, r2.x, l(5.000000), r12.y
            add r12.y, r12.y, l(-0.844800)
            mov r26.y, r30.z
            mov r26.z, r31.x
            dp3 r35.x, r16.yzwy, r26.xyzx
            mov r27.xy, r30.xwxx
            mov r27.z, r31.w
            dp3 r35.y, r16.yzwy, r27.xyzx
            mov r31.x, r30.y
            dp3 r35.z, r16.yzwy, r31.xyzx
            ubfe r12.z, l(9), l(16), r27.w
            utof r35.w, r12.z
            sample_l_indexable(texturecubearray)(float,float,float,float) r16.yzw, r35.xyzw, t8.wxyz, s2, r12.y
            and r29.xzw, r16.yyzw, l(0x7fffffff, 0, 0x7fffffff, 0x7fffffff)
            ieq r29.xzw, r29.xxzw, l(0x7f800000, 0, 0x7f800000, 0x7f800000)
            or r12.y, r29.z, r29.x
            or r12.y, r29.w, r12.y
            movc r16.yzw, r12.yyyy, l(0,1.000000,1.000000,0), r16.yyzw
            dp3 r30.x, r28.xyzx, r26.xyzx
            dp3 r30.y, r28.xyzx, r27.xyzx
            dp3 r30.z, r28.xyzx, r31.xyzx
            mad_sat r28.xyz, r30.xyzx, r32.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
            mov r33.z, r34.x
            mad r28.xyz, r28.xyzx, r33.xyzx, r34.yzwy
            dp3 r35.x, r3.xyzx, r26.xyzx
            dp3 r35.y, r3.xyzx, r27.xyzx
            dp3 r35.z, r3.xyzx, r31.xyzx
            lt r26.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r35.xyzx
            movc r15.z, r26.x, l(0), l(0.500000)
            add r27.xyz, r15.xyzx, r28.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r27.xyz, r27.xyzx, t17.xyzw, s4, l(0.000000)
            mul r29.xzw, r35.xxyz, r35.xxyz
            mul r29.xzw, r12.xxxx, r29.xxzw
            movc r17.z, r26.y, l(0), l(0.500000)
            add r26.xyw, r17.xyxz, r28.xyxz
            sample_l_indexable(texture3d)(float,float,float,float) r26.xyw, r26.xywx, t18.xywz, s4, l(0.000000)
            mul r26.xyw, r29.zzzz, r26.xyxw
            mad r26.xyw, r27.xyxz, r29.xxxx, r26.xyxw
            movc r18.z, r26.z, l(0), l(0.500000)
            add r27.xyz, r18.xyzx, r28.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r27.xyz, r27.xyzx, t19.xyzw, s4, l(0.000000)
            mad r26.xyz, r27.xyzx, r29.wwww, r26.xywx
            sample_l_indexable(texturecubearray)(float,float,float,float) r27.xyz, r35.xyzw, t8.xyzw, s2, l(6.000000)
            and r28.xyz, r27.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
            ieq r28.xyz, r28.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
            or r12.y, r28.y, r28.x
            or r12.y, r28.z, r12.y
            movc r27.xyz, r12.yyyy, l(1.000000,1.000000,0,0), r27.xyzx
            mul r28.xyz, r26.xyzx, r27.xyzx
            dp3 r12.y, r28.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r24.xyz, r26.xyzx, r27.xyzx, r24.xyzx
            mul r12.z, r4.w, r12.y
            mul r16.yzw, r12.xxxx, r16.yyzw
            dp3 r12.x, r16.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r12.x, r4.w, r12.y, r12.x
            div r12.x, r12.z, r12.x
            mov r26.x, r24.w
            mov r26.yz, r25.xxyx
            mad r25.xyw, r16.zwzy, r12.xxxx, r26.yzyx
            mov r24.w, r25.w
          endif 
        endif 
      endif 
    endloop 
    mov r22.xyzw, r24.xyzw
    mov r23.yzw, r25.xxyz
    iadd r9.w, r9.w, l(32)
  endloop 
  lt r7.w, r23.w, l(1.000000)
  if_nz r7.w
    mov r11.xy, l(0,0,0,0)
    mov r12.w, l(0)
    mov r14.yz, l(0,0,1.000000,0)
    mov r15.xy, l(0,0,0,0)
    mov r16.x, l(1.000000)
    mov r17.xy, l(0,0,0,0)
    mov r18.xy, l(0,0,0,0)
    mov r24.x, r22.w
    mov r24.yzw, r23.yyzw
    mov r25.xyz, r22.xyzx
    mov r7.w, r23.w
    mov r8.w, l(0)
    loop 
      uge r9.w, r8.w, r5.w
      breakc_nz r9.w
      ushr r11.z, r8.w, l(5)
      iadd r12.xyz, r11.xyzx, r19.xyzx
      ld_indexable(texture2darray)(uint,uint,uint,uint) r9.w, r12.xyzw, t7.yzwx
      ieq r10.w, r6.w, r8.w
      ubfe r11.z, r7.z, l(0), r9.w
      movc r9.w, r10.w, r11.z, r9.w
      iadd r10.w, r8.w, cb2[0].x
      mov r26.xyzw, r24.xyzw
      mov r12.xyz, r25.xyzx
      mov r11.z, r7.w
      mov r11.w, r9.w
      loop 
        breakc_z r11.w
        firstbit_lo r14.w, r11.w
        ishl r15.w, l(1), r14.w
        and r16.z, r11.w, r15.w
        if_nz r16.z
          xor r11.w, r11.w, r15.w
          iadd r15.w, r10.w, r14.w
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r27.xyzw, r15.w, l(0), t11.xyzw
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r28.xy, r15.w, l(16), t11.xyxx
          add r27.xyz, r27.xyzx, -v5.xyzx
          mov r28.z, r27.w
          lt r27.xyz, |r27.xyzx|, r28.zxyz
          and r15.w, r27.y, r27.x
          and r15.w, r27.z, r15.w
          if_nz r15.w
            iadd r14.w, r8.w, r14.w
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r14.w, l(0), t15.wxyz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r16.zw, r14.w, l(96), t15.xxxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r14.w, l(116), t15.zwxy
            add r29.xyz, -r27.yzwy, v5.xyzx
            and r15.w, r28.w, l(0x0000ffff)
            ubfe r17.w, l(6), l(25), r28.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r15.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r15.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r15.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r15.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r15.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r15.w, l(80), t16.xyzw
            dp3 r18.w, r30.xyzx, r29.xyzx
            add_sat r18.w, r30.w, r18.w
            dp3 r19.w, r31.xyzx, r29.xyzx
            add_sat r19.w, r31.w, r19.w
            mul r18.w, r18.w, r19.w
            dp3 r19.w, r32.xyzx, r29.xyzx
            add_sat r19.w, r32.w, r19.w
            mul r18.w, r18.w, r19.w
            dp3 r19.w, r33.xyzx, r29.xyzx
            add_sat r19.w, r33.w, r19.w
            mul r18.w, r18.w, r19.w
            dp3 r19.w, r34.xyzx, r29.xyzx
            add_sat r19.w, r34.w, r19.w
            mul r18.w, r18.w, r19.w
            dp3 r19.w, r35.xyzx, r29.xyzx
            add_sat r19.w, r35.w, r19.w
            mul r14.x, r18.w, r19.w
            and r18.w, r16.z, l(1)
            movc r30.xy, r18.wwww, r14.xyxx, r14.zxzz
            mov r14.x, r16.z
            mov r31.xy, r30.xyxx
            mov r18.w, l(1)
            loop 
              ige r19.w, r18.w, r17.w
              breakc_nz r19.w
              iadd r19.w, r15.w, r18.w
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r19.w, l(0), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r19.w, l(16), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r19.w, l(32), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r19.w, l(48), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r19.w, l(64), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r19.w, l(80), t16.xyzw
              dp3 r19.w, r32.xyzx, r29.xyzx
              add_sat r19.w, r32.w, r19.w
              mul r19.w, r19.w, r31.x
              dp3 r21.w, r33.xyzx, r29.xyzx
              add_sat r21.w, r33.w, r21.w
              mul r19.w, r19.w, r21.w
              dp3 r21.w, r34.xyzx, r29.xyzx
              add_sat r21.w, r34.w, r21.w
              mul r19.w, r19.w, r21.w
              dp3 r21.w, r35.xyzx, r29.xyzx
              add_sat r21.w, r35.w, r21.w
              mul r19.w, r19.w, r21.w
              dp3 r21.w, r36.xyzx, r29.xyzx
              add_sat r21.w, r36.w, r21.w
              mul r19.w, r19.w, r21.w
              dp3 r21.w, r37.xyzx, r29.xyzx
              add_sat r21.w, r37.w, r21.w
              mul r31.x, r19.w, r21.w
              ushr r25.w, r14.x, l(2)
              ubfe r27.w, l(1), l(2), r14.x
              and r29.w, r25.w, l(2)
              max r30.z, r31.x, r31.y
              mad r19.w, -r19.w, r21.w, l(1.000000)
              mul r19.w, r19.w, r31.y
              movc r16.y, r29.w, r19.w, r30.z
              movc r31.xy, r27.wwww, r31.xyxx, r16.xyxx
              iadd r18.w, r18.w, l(1)
              mov r14.x, r25.w
            endloop 
            add_sat r14.x, -r11.z, r31.y
            mul r15.w, r16.w, r14.x
            lt r16.y, l(0.000000), r15.w
            if_nz r16.y
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r14.w, l(16), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r14.w, l(32), t15.yxwz
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r14.w, l(48), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r14.w, l(64), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r14.w, l(80), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r14.w, l(132), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r14.w, l(148), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r14.w, l(164), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xyzw, r14.w, l(180), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r40.xyzw, r14.w, l(196), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r41.xy, r14.w, l(212), t15.xyxx
              mad r26.w, r14.x, r16.w, r26.w
              mul r14.x, r28.z, r15.w
              mov r28.z, r36.z
              dp3 r14.w, r13.xyzx, r28.xyzx
              dp3 r15.w, r29.xyzx, r28.xyzx
              add r15.w, -r36.w, r15.w
              ge r16.y, r15.w, l(0.000000)
              max r15.w, r2.z, |r15.w|
              movc r15.w, r16.y, r15.w, -r15.w
              max r14.w, -r14.w, l(0.00000010)
              div r14.w, r15.w, r14.w
              min r14.w, |r14.w|, l(131072.000000)
              mov r36.z, r37.z
              dp3 r15.w, r13.xyzx, r36.xyzx
              dp3 r16.y, r29.xyzx, r36.xyzx
              add r16.y, -r37.w, r16.y
              ge r16.z, r16.y, l(0.000000)
              max r16.y, r2.z, |r16.y|
              movc r16.y, r16.z, r16.y, -r16.y
              max r15.w, -r15.w, l(0.00000010)
              div r15.w, r16.y, r15.w
              min r14.w, r14.w, |r15.w|
              mov r37.z, r38.z
              dp3 r15.w, r13.xyzx, r37.xyzx
              dp3 r16.y, r29.xyzx, r37.xyzx
              add r16.y, -r38.w, r16.y
              ge r16.z, r16.y, l(0.000000)
              max r16.y, r2.z, |r16.y|
              movc r16.y, r16.z, r16.y, -r16.y
              max r15.w, -r15.w, l(0.00000010)
              div r15.w, r16.y, r15.w
              min r14.w, r14.w, |r15.w|
              mov r38.z, r39.z
              dp3 r15.w, r13.xyzx, r38.xyzx
              dp3 r16.y, r29.xyzx, r38.xyzx
              add r16.y, -r39.w, r16.y
              ge r16.z, r16.y, l(0.000000)
              max r16.y, r2.z, |r16.y|
              movc r16.y, r16.z, r16.y, -r16.y
              max r15.w, -r15.w, l(0.00000010)
              div r15.w, r16.y, r15.w
              min r14.w, r14.w, |r15.w|
              mov r39.z, r40.x
              dp3 r15.w, r13.xyzx, r39.xyzx
              dp3 r16.y, r29.xyzx, r39.xyzx
              add r16.y, -r40.y, r16.y
              ge r16.z, r16.y, l(0.000000)
              max r16.y, r2.z, |r16.y|
              movc r16.y, r16.z, r16.y, -r16.y
              max r15.w, -r15.w, l(0.00000010)
              div r15.w, r16.y, r15.w
              min r14.w, r14.w, |r15.w|
              mov r41.zw, r40.zzzw
              dp3 r15.w, r13.zxyz, r41.xzwx
              dp3 r16.y, r29.zxyz, r41.xzwx
              add r16.y, -r41.y, r16.y
              ge r16.z, r16.y, l(0.000000)
              max r16.y, r2.z, |r16.y|
              movc r16.y, r16.z, r16.y, -r16.y
              max r15.w, -r15.w, l(0.00000010)
              div r15.w, r16.y, r15.w
              min r14.w, r14.w, |r15.w|
              mov r28.x, r33.w
              mov r28.yz, r34.zzwz
              add r16.yzw, r29.xxyz, r28.xxyz
              mad r16.yzw, r13.xxyz, r14.wwww, r16.yyzw
              dp3 r15.w, r16.yzwy, r16.yzwy
              sqrt r15.w, r15.w
              div r14.w, r14.w, r15.w
              add r14.w, r14.w, r14.w
              sqrt r14.w, r14.w
              mad r14.w, r2.x, l(5.000000), r14.w
              add r14.w, r14.w, l(-0.844800)
              mov r27.y, r30.z
              mov r27.z, r32.x
              dp3 r36.x, r16.yzwy, r27.xyzx
              mov r28.xy, r30.xwxx
              mov r28.z, r32.w
              dp3 r36.y, r16.yzwy, r28.xyzx
              mov r32.x, r30.y
              dp3 r36.z, r16.yzwy, r32.xyzx
              ubfe r15.w, l(9), l(16), r28.w
              utof r36.w, r15.w
              sample_l_indexable(texturecubearray)(float,float,float,float) r16.yzw, r36.xyzw, t8.wxyz, s2, r14.w
              and r30.xyz, r16.yzwy, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
              ieq r30.xyz, r30.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
              or r14.w, r30.y, r30.x
              or r14.w, r30.z, r14.w
              movc r16.yzw, r14.wwww, l(0,1.000000,1.000000,0), r16.yyzw
              dp3 r30.x, r29.xyzx, r27.xyzx
              dp3 r30.y, r29.xyzx, r28.xyzx
              dp3 r30.z, r29.xyzx, r32.xyzx
              mad_sat r29.xyz, r30.xyzx, r33.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
              mov r34.z, r35.x
              mad r29.xyz, r29.xyzx, r34.xyzx, r35.yzwy
              dp3 r36.x, r3.xyzx, r27.xyzx
              dp3 r36.y, r3.xyzx, r28.xyzx
              dp3 r36.z, r3.xyzx, r32.xyzx
              lt r27.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r36.xyzx
              movc r15.z, r27.x, l(0), l(0.500000)
              add r28.xyz, r15.xyzx, r29.xyzx
              sample_l_indexable(texture3d)(float,float,float,float) r28.xyz, r28.xyzx, t17.xyzw, s4, l(0.000000)
              mul r30.xyz, r36.xyzx, r36.xyzx
              mul r30.xyz, r14.xxxx, r30.xyzx
              movc r17.z, r27.y, l(0), l(0.500000)
              add r27.xyw, r17.xyxz, r29.xyxz
              sample_l_indexable(texture3d)(float,float,float,float) r27.xyw, r27.xywx, t18.xywz, s4, l(0.000000)
              mul r27.xyw, r30.yyyy, r27.xyxw
              mad r27.xyw, r28.xyxz, r30.xxxx, r27.xyxw
              movc r18.z, r27.z, l(0), l(0.500000)
              add r28.xyz, r18.xyzx, r29.xyzx
              sample_l_indexable(texture3d)(float,float,float,float) r28.xyz, r28.xyzx, t19.xyzw, s4, l(0.000000)
              mad r27.xyz, r28.xyzx, r30.zzzz, r27.xywx
              sample_l_indexable(texturecubearray)(float,float,float,float) r28.xyz, r36.xyzw, t8.xyzw, s2, l(6.000000)
              and r29.xyz, r28.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
              ieq r29.xyz, r29.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
              or r14.w, r29.y, r29.x
              or r14.w, r29.z, r14.w
              movc r28.xyz, r14.wwww, l(1.000000,1.000000,0,0), r28.xyzx
              mul r29.xyz, r27.xyzx, r28.xyzx
              dp3 r14.w, r29.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
              mad r12.xyz, r27.xyzx, r28.xyzx, r12.xyzx
              mul r15.z, r4.w, r14.w
              mul r16.yzw, r14.xxxx, r16.yyzw
              dp3 r14.x, r16.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
              mad r14.x, r4.w, r14.w, r14.x
              div r14.x, r15.z, r14.x
              mad r26.xyz, r16.yzwy, r14.xxxx, r26.xyzx
            endif 
          endif 
        endif 
      endloop 
      mov r24.xyzw, r26.xyzw
      mov r25.xyz, r12.xyzx
      iadd r8.w, r8.w, l(32)
    endloop 
    mov r23.xyzw, r24.zxyw
    mov r22.xyz, r25.xyzx
    mov r23.xyzw, r23.yzxw
  else 
    mov r23.x, r22.w
  endif 
  max r2.x, r23.w, l(1.000000)
  rcp r2.x, r2.x
  mov_sat r23.w, r23.w
  mul r20.xyz, r2.xxxx, r22.xyzx
  mul r21.xyz, r2.xxxx, r23.xyzx
  lt r2.z, r23.w, l(0.990000)
  if_nz r2.z
    add r2.z, -r23.w, l(1.000000)
    mul r4.w, r2.z, cb2[19].x
    add r11.xyz, v5.xyzx, -cb2[35].xyzx
    mul r12.x, r11.x, cb2[35].w
    mul r12.yz, r11.yyzy, cb2[36].xxyx
    add_sat r11.xyz, r12.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    mul r12.xy, r11.xyxx, cb2[36].zwzz
    mul r12.z, r11.z, cb2[37].x
    add r11.xyz, r12.xyzx, cb2[37].yzwy
    lt r12.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r3.xyzx
    movc r12.xyz, r12.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
    mov r12.w, l(0)
    add r14.xyz, r11.xyzx, r12.wwxw
    sample_l_indexable(texture3d)(float,float,float,float) r14.xyz, r14.xyzx, t17.xyzw, s4, l(0.000000)
    mul r15.xyz, r3.xyzx, r3.xyzx
    mul r15.xyz, r4.wwww, r15.xyzx
    add r16.xyz, r11.xyzx, r12.wwyw
    sample_l_indexable(texture3d)(float,float,float,float) r16.xyz, r16.xyzx, t18.xyzw, s4, l(0.000000)
    mul r16.xyz, r15.yyyy, r16.xyzx
    mad r14.xyz, r14.xyzx, r15.xxxx, r16.xyzx
    add r11.xyz, r11.xyzx, r12.wwzw
    sample_l_indexable(texture3d)(float,float,float,float) r11.xyz, r11.xyzx, t19.xyzw, s4, l(0.000000)
    mad r11.xyz, r11.xyzx, r15.zzzz, r14.xyzx
    mov r3.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r3.xyz, r3.xyzw, t8.xyzw, s2, l(6.000000)
    mul r3.xyz, r3.xyzx, r11.xyzx
    dp3 r3.w, r3.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
    mad r20.xyz, r22.xyzx, r2.xxxx, r3.xyzx
    mov r13.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r3.xyz, r13.xyzw, t8.xyzw, s2, r2.y
    mad r2.x, cb2[19].x, r2.z, -r3.w
    mad r2.x, r7.y, r2.x, r3.w
    mad r21.xyz, r3.xyzx, r2.xxxx, r21.xyzx
  endif 
else 
  mov r21.x, r20.w
endif 
mad r2.xyz, r20.xyzx, r0.wwww, r6.xyzx
mad r3.xyz, r20.xyzx, r0.wwww, r9.xyzx
mad r6.xy, r7.xyxx, l(0.984375, 0.984375, 0.000000, 0.000000), l(0.00781250, 0.00781250, 0.000000, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r6.xy, r6.xyxx, t5.xyzw, s2, l(0.000000)
mul r7.xyz, r0.wwww, r21.xyzx
mad r5.xyz, r7.xyzx, r6.xxxx, r5.xyzx
mad r6.xyz, r7.xyzx, r6.yyyy, r10.xyzx
dp3 r0.w, r4.xyzx, r8.xyzx
add r3.w, -|r0.w|, l(1.000000)
mul r3.w, r3.w, r3.w
mad r3.w, r3.w, l(0.600000), l(0.400000)
min r3.w, r3.w, l(1.000000)
mad_sat r4.xyz, r0.xyzx, l(0.020000, 0.020000, 0.020000, 0.000000), l(0.040000, 0.040000, 0.040000, 0.000000)
mul r7.xyz, r4.xyzx, cb0[11].xyzx
mul r8.xyz, r0.xyzx, r3.wwww
mul r3.xyz, r3.xyzx, r8.xyzx
mad r0.xyz, r2.xyzx, r0.xyzx, r3.xyzx
mad r2.xyz, -r4.xyzx, cb0[11].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r2.xyz, r2.xyzx, r5.xyzx
mad r2.xyz, r6.xyzx, r7.xyzx, r2.xyzx
add r0.xyz, r0.xyzx, r2.xyzx
if_nz cb0[11].w
  eq r2.xyz, cb0[12].yzxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  and r2.x, r2.y, r2.x
  mul r3.xy, cb0[12].yzyy, l(0.01745329, 0.01745329, 0.000000, 0.000000)
  sincos null, r3.xy, r3.xyxx
  mul r3.yz, r3.xxyx, r3.xxyx
  mad r2.y, r3.x, r3.x, -r3.z
  div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r2.y
  mad r4.y, -r3.y, r4.x, l(1.000000)
  movc r2.xy, r2.xxxx, l(0,1.000000,0,0), r4.xyxx
  mul r0.w, |r0.w|, |r0.w|
  mad_sat r0.w, r0.w, r2.x, r2.y
  mul r0.w, r0.w, r1.w
  ftoi r3.xy, v0.xyxx
  mov r3.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r2.x, r3.xyzw, t0.xyzw
  ge r2.y, r2.x, l(0.984375)
  mul r3.x, r2.x, l(1.01587307)
  mad r2.x, r2.x, l(64.000000), l(-63.000000)
  movc r2.x, r2.y, r2.x, r3.x
  max r2.x, r2.x, l(0.00000001)
  rcp r2.x, r2.x
  div r2.y, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[12].x
  movc r2.y, r2.z, l(60000.000000), r2.y
  add r2.x, -r2.w, r2.x
  mul_sat r2.x, r2.y, r2.x
  mul r1.w, r0.w, r2.x
endif 
lt r0.w, l(0.000000), cb2[9].z
if_nz r0.w
  dp3 r0.w, v5.xyzx, v5.xyzx
  rsq r2.x, r0.w
  mul r2.xyz, r2.xxxx, v5.xyzx
  sqrt r0.w, r0.w
  lt r2.w, l(0.000000), cb2[13].w
  if_nz r2.w
    mad r3.xy, r0.wwww, cb2[15].xyxx, cb2[14].zwzz
    mul r3.xy, r3.xyxx, cb2[16].xyxx
    lt r2.w, l(0.010000), |v5.z|
    mul r3.zw, v5.zzzz, cb2[15].zzzw
    mul r4.xy, r3.zwzz, l(-1.442695, -1.442695, 0.000000, 0.000000)
    exp r4.xy, r4.xyxx
    add r4.xy, -r4.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    div r3.zw, r4.xxxy, r3.zzzw
    mul r3.zw, r3.zzzw, r3.xxxy
    movc r3.xy, r2.wwww, r3.zwzz, r3.xyxx
    mul r3.xzw, r3.xxxx, cb2[12].xxyz
    exp r3.xzw, r3.xxzw
    mul r4.xyz, r3.yyyy, cb2[12].xyzx
    exp r4.xyz, r4.xyzx
    add r4.xyz, -r3.xzwx, r4.xyzx
    mad r3.xyz, cb2[13].wwww, r4.xyzx, r3.xzwx
  else 
    mad r2.w, r0.w, cb2[15].x, cb2[14].z
    mul r2.w, r2.w, cb2[16].x
    lt r3.w, l(0.010000), |v5.z|
    mul r4.x, v5.z, cb2[15].z
    mul r4.y, r4.x, l(-1.442695)
    exp r4.y, r4.y
    add r4.y, -r4.y, l(1.000000)
    div r4.x, r4.y, r4.x
    mul r4.x, r2.w, r4.x
    movc r2.w, r3.w, r4.x, r2.w
    mul r4.xyz, r2.wwww, cb2[12].xyzx
    exp r3.xyz, r4.xyzx
  endif 
  mad r3.xyz, r3.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r3.xyz, r3.xyzx, -cb2[9].zzzz
  dp3 r2.x, cb2[7].yzwy, -r2.xyzx
  mad r2.y, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r2.z, cb2[8].w, -r2.x, l(1.000000)
  mul r2.z, r2.z, r2.z
  mul r2.z, r2.z, l(12.566371)
  div r2.y, r2.y, r2.z
  add r0.w, r0.w, -cb2[10].w
  mul_sat r0.w, r0.w, cb2[11].w
  mul r0.w, r0.w, r2.y
  mov_sat r2.x, r2.x
  mad r2.x, r2.x, r2.x, l(1.000000)
  mad r2.x, r2.x, l(0.05968310), l(-1.000000)
  mad r2.x, cb2[8].z, r2.x, l(1.000000)
  mul r2.yzw, r0.wwww, cb2[11].xxyz
  mad r2.xyz, r2.xxxx, cb2[10].xyzx, r2.yzwy
  mul r2.xyz, r2.xyzx, cb2[9].wwww
  add r4.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r2.xyz, r2.xyzx, r4.xyzx
  mad r2.xyz, r0.xyzx, r3.xyzx, r2.xyzx
else 
  mul r0.w, v5.z, cb2[6].x
  mad r2.w, cb2[6].x, v5.z, cb2[5].x
  lt r3.x, |r0.w|, l(0.000100)
  min r3.y, r2.w, l(64.000000)
  mul r3.y, r3.y, l(1.442695)
  exp r3.y, r3.y
  mov_sat r3.z, cb2[6].z
  lt r3.w, r2.w, l(0.000000)
  add r2.w, r2.w, l(1.000000)
  movc r2.w, r3.w, r3.y, r2.w
  add r2.w, r2.w, -cb2[6].z
  movc r0.w, r3.x, l(1.000000), r0.w
  div r0.w, r2.w, r0.w
  movc r0.w, r3.x, r3.z, r0.w
  mul r0.w, r0.w, cb2[5].z
  dp3 r2.w, v5.xyzx, v5.xyzx
  sqrt r3.x, r2.w
  mad r0.w, r0.w, r3.x, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  rsq r2.w, r2.w
  mul r3.xyz, r2.wwww, v5.xyzx
  dp3 r2.w, cb2[7].yzwy, r3.xyzx
  mad_sat r2.w, cb2[8].y, r2.w, cb2[8].x
  add r3.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r3.xyzw, r2.wwww, r3.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r3.w
  add r3.xyz, -r0.xyzx, r3.xyzx
  mad r2.xyz, r0.wwww, r3.xyzx, r0.xyzx
endif 
mul r0.xyz, r2.xyzx, cb1[85].yyyy
ge r2.xyz, r0.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.xyz, r0.xyzx, r2.xyzx
min r0.xyz, r0.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
max r2.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r1.xyz, r1.wwww, r2.xyzx
and r0.w, r1.w, l(0x7f800000)
ieq r0.w, r0.w, l(0x7f800000)
eq r3.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
and r3.xy, r3.zwzz, r3.xyxx
and r2.w, r3.y, r3.x
or r0.w, r0.w, r2.w
if_z r0.w
  ftou r3.xy, v0.xyxx
  imm_atomic_iadd r3.z, u6, r3.xyxx, l(1)
  ult r0.w, r3.z, cb2[58].z
  if_nz r0.w
    max r0.w, r1.z, r1.y
    max r0.w, r0.w, r1.x
    mov r0.w, |r0.w|
    and r0.w, r0.w, l(0x7f800000)
    iadd r0.w, r0.w, l(0x00800000)
    mad r2.xyz, r2.xyzx, r1.wwww, r0.wwww
    ubfe r2.x, l(8), l(15), r2.x
    ushr r2.yz, r2.yyzy, l(0, 15, 15, 0)
    bfi r2.yz, l(0, 8, 8, 0), l(0, 8, 16, 0), r2.yyzy, l(0, 0, 0, 0)
    iadd r2.x, r2.y, r2.x
    iadd r2.x, r2.z, r2.x
    ishl r0.w, r0.w, l(1)
    iadd r2.xzw, r0.wwww, r2.xxxx
    mov_sat r0.w, r1.w
    mul r0.w, r0.w, l(2046.000000)
    ftou r0.w, r0.w
    ishl r3.w, v0.z, l(2)
    and r0.w, r0.w, l(2046)
    bfi r2.y, l(11), l(0), r0.w, r3.w
    store_uav_typed u7.xyzw, r3.xyzz, r2.xyzw
    mov r0.w, l(-1)
  else 
    mov r0.w, l(0)
  endif 
else 
  mov r0.w, l(-1)
endif 
mul r1.xyz, r1.wwww, r0.xyzx
movc o0.xyzw, r0.wwww, l(0,0,0,0), r1.xyzw
ret 
// Approximately 2722 instruction slots used
