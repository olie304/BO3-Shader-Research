//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:41:33 2021
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float3 colorTint;                  // Offset:  160 Size:    12
//   float3 specColorTint;              // Offset:  176 Size:    12 [unused]
//   float baseNormalHeight;            // Offset:  188 Size:     4
//   float2 glossRange;                 // Offset:  192 Size:     8
//   float2 rotateUVs;                  // Offset:  200 Size:     8
//   float2 scrollUVs;                  // Offset:  208 Size:     8
//   float2 scaleUVs;                   // Offset:  216 Size:     8
//   float2 offsetUVs;                  // Offset:  224 Size:     8
//   float2 zoomUVs;                    // Offset:  232 Size:     8
//   float zoomRate;                    // Offset:  240 Size:     4
//   float layerDepth;                  // Offset:  244 Size:     4
//   bool clampU;                       // Offset:  248 Size:     4
//   bool clampV;                       // Offset:  252 Size:     4
//   float hdrScale;                    // Offset:  256 Size:     4
//   float emissiveFalloffPower;        // Offset:  260 Size:     4
//   float3 emissiveTint1;              // Offset:  272 Size:    12
//   float revealDriver;                // Offset:  284 Size:     4 [unused]
//   bool invertFalloff;                // Offset:  288 Size:     4
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16 [unused]
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16
//   float4 debugNormalOverride;        // Offset:  960 Size:    16
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16
//   float4 debugGlossOverride;         // Offset:  992 Size:    16
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4
//   uint numDynamicDecals;             // Offset:  924 Size:     4
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for shaderConstantSetBuffer
// {
//
//   struct GpuShaderConstantSet
//   {
//       
//       float4 scriptVector0;          // Offset:    0
//       float4 scriptVector1;          // Offset:   16
//       float4 scriptVector2;          // Offset:   32
//       float4 scriptVector3;          // Offset:   48
//       float4 scriptVector4;          // Offset:   64
//       float4 scriptVector5;          // Offset:   80
//       float4 scriptVector6;          // Offset:   96
//       float4 scriptVector7;          // Offset:  112
//       float4 weaponParam0;           // Offset:  128
//       float4 weaponParam1;           // Offset:  144
//       float4 weaponParam2;           // Offset:  160
//       float4 weaponParam3;           // Offset:  176
//       float4 weaponParam4;           // Offset:  192
//       float4 weaponParam5;           // Offset:  208
//       float4 weaponParam6;           // Offset:  224
//       float4 weaponParam7;           // Offset:  240
//       float4 characterParam0;        // Offset:  256
//       float4 characterParam1;        // Offset:  272
//       float4 characterParam2;        // Offset:  288
//       float4 characterParam3;        // Offset:  304
//       float4 characterParam4;        // Offset:  320
//       float4 characterParam5;        // Offset:  336
//       float4 characterParam6;        // Offset:  352
//       float4 characterParam7;        // Offset:  368
//
//   } $Element;                        // Offset:    0 Size:   384
//
// }
//
// Resource bind info for modelInstanceBuffer
// {
//
//   struct ModelInstanceData
//   {
//       
//       uint boneArrayIndex;           // Offset:    0
//       uint shaderConstantSet;        // Offset:    4
//       uint flagsAndPrevFrameIndex;   // Offset:    8
//       uint worldMatrix;              // Offset:   12
//       uint siegeAnimStateOffset;     // Offset:   16
//       uint prevFrameSiegeAnimStateOffset;// Offset:   20
//
//   } $Element;                        // Offset:    0 Size:    24
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for forwardDecalConstants
// {
//
//   struct CoreDecalConstantsPack
//   {
//       
//       uint4 data[8];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   128
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// colorSampler                      sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// specColorSampler                  sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// normalSampler                     sampler      NA          NA             s5      1 
// aoSampler                         sampler      NA          NA             s6      1 
// revealSampler                     sampler      NA          NA             s7      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// shaderConstantSetBuffer           texture  struct         r/o             t0      1 
// modelInstanceBuffer               texture  struct         r/o             t4      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// colorMap                          texture  float4          2d            t21      1 
// specColorMap                      texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// normalMap                         texture  float4          2d            t24      1 
// glossMap                          texture  float4          2d            t25      1 
// aoMap                             texture  float4          2d            t26      1 
// emissiveMap                       texture  float4          2d            t29      1 
// revealMap                         texture  float4          2d            t30      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// visibleDecals                     texture    uint     2darray            t35      1 
// forwardDecalConstants             texture  struct         r/o            t36      1 
// materialTexBC7                    texture  float4     2darray            t42      1 
// materialTexBC3                    texture  float4     2darray            t43      1 
// materialTexBC7linear              texture  float4     2darray            t44      1 
// materialTexMask                   texture  float4     2darray            t45      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyz 
// COLOR                    1   x           1     NONE   float   x   
// TEXCOORD                 0    yz         1     NONE   float    yz 
// TEXCOORD                 4   x           2     NONE    uint   x   
// TEXCOORD                 1   xyz         3     NONE   float   xyz 
// TEXCOORD                 2   xyz         4     NONE   float   xyz 
// TEXCOORD                 3   xyz         5     NONE   float   xyz 
// OFFPOSITION              0   xyz         6     NONE   float   xyz 
// SV_IsFrontFace           0   x           7    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[19], immediateIndexed
dcl_constantbuffer CB1[93], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_structured t0, 384
dcl_resource_structured t4, 24
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2d (float,float,float,float) t26
dcl_resource_texture2d (float,float,float,float) t29
dcl_resource_texture2d (float,float,float,float) t30
dcl_resource_texture2darray (float,float,float,float) t31
dcl_resource_texture2darray (uint,uint,uint,uint) t35
dcl_resource_structured t36, 128
dcl_resource_texture2darray (float,float,float,float) t42
dcl_resource_texture2darray (float,float,float,float) t43
dcl_resource_texture2darray (float,float,float,float) t44
dcl_resource_texture2darray (float,float,float,float) t45
dcl_input_ps_siv linear noperspective v0.xyz, position
dcl_input_ps linear v1.x
dcl_input_ps linear v1.yz
dcl_input_ps constant v2.x
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps_sgv constant v7.x, is_front_face
dcl_output o0.xyzw
dcl_temps 47
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.yzyy, t21.xyzw, s1
add r1.xyz, cb0[10].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r1.xyz, r0.wwww, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r0.xyz, r0.xyzx, r1.xyzx
mul r1.x, r0.w, v1.x
sample_indexable(texture2d)(float,float,float,float) r1.yzw, v1.yzyy, t22.wxyz, s3
sample_indexable(texture2d)(float,float,float,float) r2.x, v1.yzyy, t26.xyzw, s6
sample_indexable(texture2d)(float,float,float,float) r2.y, v1.yzyy, t25.yxzw, s3
add r2.z, -cb0[12].x, cb0[12].y
mad r2.y, r2.y, r2.z, cb0[12].x
mul_sat r2.y, r2.y, l(0.05882353)
sample_indexable(texture2d)(float,float,float,float) r3.xyz, v1.yzyy, t24.xyzw, s5
add r3.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.000000, 0.000000)
mad r3.xyz, cb0[11].wwww, r3.xyzx, l(0.500000, 0.500000, 0.000000, 0.000000)
mad r3.xy, r3.xyxx, l(1.99218750, 1.99218750, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r2.w, r3.xyxx, r3.xyxx
add r2.w, -r2.w, l(1.000000)
max r2.w, r2.w, l(0.000000)
sqrt r2.w, r2.w
mul r3.z, r3.z, r3.z
mul r3.z, r3.z, l(0.33333334)
min r3.z, r3.z, l(1.000000)
movc r3.w, v7.x, l(1.000000), l(-1.000000)
dp3 r4.x, v3.xyzx, v3.xyzx
rsq r4.x, r4.x
mul r4.xyz, r4.xxxx, v3.xyzx
mul r4.xyz, r3.wwww, r4.xyzx
dp3 r4.w, v4.xyzx, v4.xyzx
rsq r4.w, r4.w
mul r5.xyz, r4.wwww, v4.xyzx
mul r5.xyz, r3.wwww, r5.xyzx
dp3 r4.w, v5.xyzx, v5.xyzx
rsq r4.w, r4.w
mul r6.xyz, r4.wwww, v5.xyzx
mul r6.xyz, r3.wwww, r6.xyzx
mul r2.y, r2.y, l(-17.000000)
exp r2.y, r2.y
add r2.y, r2.y, r3.z
log r2.y, r2.y
mul r2.y, r2.y, l(-0.05882353)
mul r6.xyz, r3.yyyy, r6.xyzx
mad r5.xyz, r5.xyzx, r3.xxxx, r6.xyzx
mad r5.xyz, r4.xyzx, r2.wwww, r5.xyzx
dp3 r2.w, r5.xyzx, r5.xyzx
rsq r2.w, r2.w
mul r5.xyz, r2.wwww, r5.xyzx
mad r2.z, cb1[62].x, r2.z, cb0[12].x
mul_sat r2.z, r2.z, l(0.05882353)
mul r2.z, r2.z, l(-17.000000)
exp r2.z, r2.z
add r2.z, r2.z, r3.z
log r2.z, r2.z
mul r2.z, r2.z, l(-0.05882353)
max r2.yz, r2.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r2.w, l(0.000000), cb1[64].w
if_nz r2.w
  ftoi r2.w, cb1[64].w
  lod r3.x, v1.yzyy, t21.y, s1
  lod r3.y, v1.yzyy, t21.x, s1
  lt r3.x, r3.x, r3.y
  lt r3.y, l(0.000000), r3.y
  and r6.xyz, r2.wwww, l(1, 2, 4, 0)
  movc r7.xyz, r6.xxxx, l(1.000000,0,1.000000,0), r0.xyzx
  movc r6.xyw, r6.yyyy, l(0,1.000000,0,1.000000), r0.xyxz
  movc r6.xyw, r3.yyyy, r7.xyxz, r6.xyxw
  movc r7.xyz, r6.zzzz, l(0,1.000000,0,0), r0.xyzx
  movc r0.xyz, r3.xxxx, r6.xywx, r7.xyzx
endif 
add r3.xyz, -r0.xyzx, cb1[58].xyzx
mad r0.xyz, cb1[58].wwww, r3.xyzx, r0.xyzx
mad r0.w, -r0.w, v1.x, cb1[59].x
mad r0.w, cb1[59].w, r0.w, r1.x
add r3.xyz, -r1.yzwy, cb1[61].xyzx
mad r1.xyz, cb1[61].wwww, r3.xyzx, r1.yzwy
add r1.w, -r2.y, r2.z
mad r1.w, cb1[62].w, r1.w, r2.y
add r2.y, -r2.x, cb1[63].x
mad r2.x, cb1[63].w, r2.y, r2.x
movc r2.yzw, v7.xxxx, v3.xxyz, -v3.xxyz
dp3 r3.x, r2.yzwy, r2.yzwy
rsq r3.x, r3.x
mad r2.yzw, r2.yyzw, r3.xxxx, -r5.xxyz
mad r2.yzw, cb1[60].wwww, r2.yyzw, r5.xxyz
ge r3.x, v0.z, l(0.984375)
mul r3.y, v0.z, l(1.01587307)
mad r3.z, v0.z, l(64.000000), l(-63.000000)
movc r3.x, r3.x, r3.z, r3.y
max r3.x, r3.x, l(0.00000001)
rcp r3.x, r3.x
ftou r3.yz, v0.xxyx
deriv_rtx_coarse r5.xyz, v6.xyzx
deriv_rty_coarse r6.xyz, v6.xyzx
iadd r4.w, cb2[0].y, cb2[0].x
ld_structured_indexable(structured_buffer, stride=24)(mixed,mixed,mixed,mixed) r7.xy, v2.x, l(4), t4.xyxx
and r7.yz, r7.yyyy, l(0, 0x10000000, 0x20000000, 0)
if_nz r7.y
  add r8.xyz, v6.xyzx, cb1[24].xyzx
  mul r5.w, r3.x, l(0.00781250)
  min r5.w, r5.w, l(15.000000)
  ftou r5.w, r5.w
  ushr r9.xy, r3.yzyy, l(6, 6, 0, 0)
  ishl r9.z, r5.w, l(4)
  and r5.w, cb2[57].z, l(-32)
  iadd r6.w, -r5.w, cb2[57].z
  mov r10.xy, l(0,0,0,0)
  mov r11.w, l(0)
  mov r8.w, l(1.000000)
  mov r12.xyzw, l(0,0,0,0)
  mov r13.xyz, l(0,0,0,0)
  mov r14.yz, l(0,0,0,0)
  mov r15.xy, l(0,0,0,0)
  mov r7.y, l(0)
  loop 
    uge r7.w, r7.y, cb2[57].z
    breakc_nz r7.w
    ushr r10.z, r7.y, l(5)
    iadd r11.xyz, r9.xyzx, r10.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r7.w, r11.xyzw, t35.yzwx
    ieq r9.w, r5.w, r7.y
    ubfe r10.z, r6.w, l(0), r7.w
    movc r7.w, r9.w, r10.z, r7.w
    iadd r9.w, r4.w, r7.y
    mov r16.xyzw, r12.xzwy
    mov r11.xyz, r13.xyzx
    mov r17.yz, r14.yyzy
    mov r18.xy, r15.xyxx
    mov r10.z, r7.w
    loop 
      breakc_z r10.z
      firstbit_lo r10.w, r10.z
      ishl r13.w, l(1), r10.w
      and r14.w, r10.z, r13.w
      if_nz r14.w
        xor r10.z, r10.z, r13.w
        iadd r13.w, r9.w, r10.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r19.xyzw, r13.w, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r20.xy, r13.w, l(16), t11.xyxx
        add r19.xyz, r19.xyzx, -v6.xyzx
        mov r20.z, r19.w
        lt r19.xyz, |r19.xyzx|, r20.zxyz
        and r13.w, r19.y, r19.x
        and r13.w, r19.z, r13.w
        if_nz r13.w
          iadd r10.w, r7.y, r10.w
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r19.xyz, r10.w, l(0), t36.xyzx
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r20.xyz, r10.w, l(16), t36.xyzx
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r21.xyz, r10.w, l(32), t36.xyzx
          mov r22.x, r19.x
          mov r22.y, r20.x
          mov r22.z, r21.x
          dp3 r13.w, r22.xyzx, r22.xyzx
          rsq r13.w, r13.w
          mul r23.xyz, r13.wwww, r22.xyzx
          dp3 r13.w, r23.xyzx, v3.xyzx
          ge r13.w, r13.w, l(0.500000)
          if_nz r13.w
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r24.xyw, r10.w, l(48), t36.xyxz
            mov r22.w, r24.x
            dp4 r22.x, r8.xyzw, r22.xyzw
            mov r25.x, r19.y
            mov r25.y, r20.y
            mov r25.z, r21.y
            mov r25.w, r24.y
            dp4 r22.y, r8.xyzw, r25.xyzw
            mov r24.x, r19.z
            mov r24.y, r20.z
            mov r24.z, r21.z
            dp4 r22.z, r8.xyzw, r24.xyzw
            lt r19.xyz, |r22.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
            and r13.w, r19.y, r19.x
            and r13.w, r19.z, r13.w
            if_nz r13.w
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r19.xyzw, r10.w, l(64), t36.xyzw
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r20.xyzw, r10.w, l(80), t36.xyzw
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r21.xyzw, r10.w, l(96), t36.xyzw
              dp3 r26.x, r5.xyzx, r25.xyzx
              dp3 r26.y, r5.xyzx, r24.xyzx
              dp3 r27.x, r6.xyzx, r25.xyzx
              dp3 r27.y, r6.xyzx, r24.xyzx
              mad r22.xy, r22.yzyy, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
              mul r26.xyz, r26.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
              mul r27.xyz, r27.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
              and r22.zw, r20.yyyz, l(0, 0, 0x0000ffff, 0x0000ffff)
              if_nz r22.z
                ubfe r13.w, l(4), l(24), r20.w
                ishl r13.w, l(1), r13.w
                ushr r14.w, r20.w, l(28)
                ishl r14.w, l(1), r14.w
                ieq r15.w, r22.z, l(4)
                if_nz r15.w
                  and r15.w, r20.w, l(4095)
                  ubfe r17.w, l(12), l(12), r20.w
                  and r18.w, r21.w, l(1023)
                  utof r28.xz, r13.wwww
                  utof r28.y, r14.w
                  mad r29.xy, r22.xyxx, r28.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r29.zw, r28.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r29.xy, r29.zwzz, r29.xyxx
                  utof r30.x, r15.w
                  utof r30.y, r17.w
                  add r29.xy, r29.xyxx, r30.xyxx
                  mul r29.xy, r29.xyxx, cb1[83].xyxx
                  utof r29.z, r18.w
                  mul r30.xyz, r26.zyzz, cb1[83].xyxx
                  mul r30.xyz, r28.xyzx, r30.xyzx
                  mul r31.xyz, r27.zyzz, cb1[83].xyxx
                  mul r28.xyz, r28.xyzx, r31.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r28.xyzw, r29.xyzx, t42.xyzw, s4, r30.xyzx, r28.xyzx
                else 
                  ieq r15.w, r22.z, l(1)
                  if_nz r15.w
                    and r15.w, r20.w, l(4095)
                    ubfe r17.w, l(12), l(12), r20.w
                    and r18.w, r21.w, l(1023)
                    utof r29.xz, r13.wwww
                    utof r29.y, r14.w
                    mad r30.xy, r22.xyxx, r29.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r30.zw, r29.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                    min r30.xy, r30.zwzz, r30.xyxx
                    utof r31.x, r15.w
                    utof r31.y, r17.w
                    add r30.xy, r30.xyxx, r31.xyxx
                    mul r30.xy, r30.xyxx, cb1[83].zwzz
                    utof r30.z, r18.w
                    mul r31.xyz, r26.zyzz, cb1[83].zwzz
                    mul r31.xyz, r29.xyzx, r31.xyzx
                    mul r32.xyz, r27.zyzz, cb1[83].zwzz
                    mul r29.xyz, r29.xyzx, r32.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r28.xyzw, r30.xyzx, t43.xyzw, s4, r31.xyzx, r29.xyzx
                  else 
                    mov r28.xyzw, l(1.000000,1.000000,1.000000,1.000000)
                  endif 
                endif 
                mul r19.xyz, r19.xyzx, r28.xyzx
                mul r13.w, r19.w, r28.w
              else 
                mov r19.xyz, l(0,0,0,0)
                mov r13.w, l(0)
              endif 
              ne r14.w, r20.x, l(1.000000)
              add r15.w, r19.w, r13.w
              mad_sat r15.w, r15.w, r20.x, -r20.x
              movc r13.w, r14.w, r15.w, r13.w
              if_nz r22.w
                ubfe r14.w, l(4), l(24), r21.y
                ishl r14.w, l(1), r14.w
                ushr r15.w, r21.y, l(28)
                ishl r15.w, l(1), r15.w
                ieq r17.w, r22.w, l(2)
                if_nz r17.w
                  and r17.w, r21.y, l(4095)
                  ubfe r20.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r21.yyyw
                  utof r28.xz, r14.wwww
                  utof r28.y, r15.w
                  mad r29.xy, r22.xyxx, r28.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r29.zw, r28.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r29.xy, r29.zwzz, r29.xyxx
                  utof r30.x, r17.w
                  utof r30.y, r20.x
                  add r29.xy, r29.xyxx, r30.xyxx
                  mul r29.xy, r29.xyxx, cb1[84].xyxx
                  utof r29.z, r20.w
                  mul r30.xyz, r26.zyzz, cb1[84].xyxx
                  mul r30.xyz, r28.xyzx, r30.xyzx
                  mul r31.xyz, r27.zyzz, cb1[84].xyxx
                  mul r28.xyz, r28.xyzx, r31.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r17.w, r29.xyzx, t45.yzwx, s4, r30.xyzx, r28.xyzx
                else 
                  ieq r18.w, r22.w, l(4)
                  if_nz r18.w
                    and r18.w, r21.y, l(4095)
                    ubfe r20.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r21.yyyw
                    utof r28.xz, r14.wwww
                    utof r28.y, r15.w
                    mad r22.zw, r22.xxxy, r28.zzzy, l(0.000000, 0.000000, 0.500000, 0.500000)
                    add r29.xy, r28.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                    min r22.zw, r22.zzzw, r29.xxxy
                    utof r29.x, r18.w
                    utof r29.yz, r20.xxwx
                    add r22.zw, r22.zzzw, r29.xxxy
                    mul r29.xy, r22.zwzz, cb1[83].xyxx
                    mul r30.xyz, r26.zyzz, cb1[83].xyxx
                    mul r30.xyz, r28.xyzx, r30.xyzx
                    mul r31.xyz, r27.zyzz, cb1[83].xyxx
                    mul r28.xyz, r28.xyzx, r31.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r17.w, r29.xyzx, t42.yzwx, s4, r30.xyzx, r28.xyzx
                  else 
                    and r18.w, r21.y, l(4095)
                    ubfe r20.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r21.yyyw
                    utof r28.xz, r14.wwww
                    utof r28.y, r15.w
                    mad r22.zw, r22.xxxy, r28.zzzy, l(0.000000, 0.000000, 0.500000, 0.500000)
                    add r29.xy, r28.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                    min r22.zw, r22.zzzw, r29.xxxy
                    utof r29.x, r18.w
                    utof r29.yz, r20.xxwx
                    add r22.zw, r22.zzzw, r29.xxxy
                    mul r29.xy, r22.zwzz, cb1[83].zwzz
                    mul r30.xyz, r26.zyzz, cb1[83].zwzz
                    mul r30.xyz, r28.xyzx, r30.xyzx
                    mul r31.xyz, r27.zyzz, cb1[83].zwzz
                    mul r28.xyz, r28.xyzx, r31.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r17.w, r29.xyzx, t43.yzwx, s4, r30.xyzx, r28.xyzx
                  endif 
                endif 
                mad r28.xyz, r17.wwww, l(0.960000, 0.960000, 0.960000, 0.000000), l(0.040000, 0.040000, 0.040000, 0.000000)
                add_sat r14.w, -r17.w, l(1.000000)
                mul r19.xyz, r14.wwww, r19.xyzx
              else 
                mov r28.xyz, l(0.040000,0.040000,0.040000,0)
              endif 
              ushr r20.xy, r20.zyzz, l(16, 16, 0, 0)
              if_nz r20.x
                ieq r14.w, r20.x, l(2)
                if_nz r14.w
                  ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r10.w, r10.w, l(112), t36.xxxx
                  ubfe r20.zw, l(0, 0, 4, 12), l(0, 0, 24, 12), r21.zzzz
                  ishl r14.w, l(1), r20.z
                  ushr r15.w, r21.z, l(28)
                  ishl r15.w, l(1), r15.w
                  and r17.w, r21.z, l(4095)
                  and r10.w, r10.w, l(1023)
                  utof r29.xz, r14.wwww
                  utof r29.y, r15.w
                  mad r21.yz, r22.xxyx, r29.zzyz, l(0.000000, 0.500000, 0.500000, 0.000000)
                  add r22.zw, r29.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r21.yz, r21.yyzy, r22.zzwz
                  utof r30.x, r17.w
                  utof r30.y, r20.w
                  add r20.zw, r21.yyyz, r30.xxxy
                  mul r30.xy, r20.zwzz, cb1[84].xyxx
                  utof r30.z, r10.w
                  mul r31.xyz, r26.zyzz, cb1[84].xyxx
                  mul r31.xyz, r29.xyzx, r31.xyzx
                  mul r32.xyz, r27.zyzz, cb1[84].xyxx
                  mul r29.xyz, r29.xyzx, r32.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r10.w, r30.xyzx, t45.yzwx, s4, r31.xyzx, r29.xyzx
                else 
                  ieq r14.w, r20.x, l(6)
                  movc r10.w, r14.w, l(0), l(1.000000)
                endif 
              else 
                mov r10.w, l(1.000000)
              endif 
              mul_sat r10.w, r10.w, l(0.76470590)
              if_nz r20.y
                ieq r14.w, r20.y, l(3)
                if_nz r14.w
                  ubfe r20.xyz, l(4, 12, 10, 0), l(24, 12, 10, 0), r21.xxwx
                  ishl r14.w, l(1), r20.x
                  ushr r15.w, r21.x, l(28)
                  ishl r15.w, l(1), r15.w
                  and r17.w, r21.x, l(4095)
                  utof r21.xz, r14.wwww
                  utof r21.y, r15.w
                  mad r20.xw, r22.xxxy, r21.xxxy, l(0.500000, 0.000000, 0.000000, 0.500000)
                  add r22.xy, r21.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r20.xw, r20.xxxw, r22.xxxy
                  utof r22.x, r17.w
                  utof r22.yz, r20.yyzy
                  add r20.xy, r20.xwxx, r22.xyxx
                  mul r22.xy, r20.xyxx, cb1[84].zwzz
                  mul r20.xyz, r26.xyzx, cb1[84].zwzz
                  mul r20.xyz, r21.xyzx, r20.xyzx
                  mul r26.xyz, r27.xyzx, cb1[84].zwzz
                  mul r21.xyz, r21.xyzx, r26.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r20.xyz, r22.xyzx, t44.xyzw, s4, r20.xyzx, r21.xyzx
                else 
                  mov r20.xyz, l(0.500000,0.500000,1.000000,0)
                endif 
                mad r20.xy, r20.xyxx, l(1.99218750, 1.99218750, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
                dp2 r14.w, r20.xyxx, r20.xyxx
                add r14.w, -r14.w, l(1.000000)
                max r14.w, r14.w, l(0.000000)
                sqrt r14.w, r14.w
                mul r15.w, r20.z, r20.z
                mul r15.w, r15.w, l(0.33333334)
                min r15.w, r15.w, l(1.000000)
                dp3 r17.w, r25.xyzx, r25.xyzx
                rsq r17.w, r17.w
                mul r21.xyz, r17.wwww, r25.xyzx
                dp3 r17.w, -r24.xyzx, -r24.xyzx
                rsq r17.w, r17.w
                mul r22.xyz, r17.wwww, -r24.xyzx
                mul r23.xyz, r3.wwww, r23.xyzx
                mul r21.xyz, r3.wwww, r21.xyzx
                mul r22.xyz, r3.wwww, r22.xyzx
                mul r17.w, r10.w, l(-17.000000)
                exp r17.w, r17.w
                add r15.w, r15.w, r17.w
                log r15.w, r15.w
                mul r15.w, r15.w, l(-0.05882353)
                max r10.w, r15.w, l(0.000000)
                mul r20.yzw, r20.yyyy, r22.xxyz
                mad r20.xyz, r21.xyzx, r20.xxxx, r20.yzwy
                mad r20.xyz, r23.xyzx, r14.wwww, r20.xyzx
                dp3 r14.w, r20.xyzx, r20.xyzx
                rsq r14.w, r14.w
                mul r20.xyz, r14.wwww, r20.xyzx
                add r14.w, -r13.w, l(1.000000)
                mov r17.x, r16.x
                mul r21.xyz, r14.wwww, r17.xyzx
                mad r17.xyz, r20.xyzx, r13.wwww, r21.xyzx
                mov r16.x, r17.x
              endif 
              add r14.w, -r13.w, l(1.000000)
              mul r20.xyz, r11.xyzx, r14.wwww
              mad r11.xyz, r19.xyzx, r13.wwww, r20.xyzx
              mov r18.z, r16.y
              mul r19.xyz, r14.wwww, r18.xyzx
              mad r18.xyz, r28.xyzx, r13.wwww, r19.xyzx
              mul r15.w, r14.w, r16.w
              mad r16.z, r16.z, r14.w, r13.w
              mad r16.w, r10.w, r13.w, r15.w
              mov r16.y, r18.z
            endif 
          endif 
        endif 
      endif 
    endloop 
    mov r12.xyzw, r16.xwyz
    mov r13.xyz, r11.xyzx
    mov r14.yz, r17.yyzy
    mov r15.xy, r18.xyxx
    iadd r7.y, r7.y, l(32)
  endloop 
  mov r14.x, r12.x
  mov r15.z, r12.z
  mov r12.xy, r12.wyww
else 
  mov r13.xyz, l(0,0,0,0)
  mov r14.xyz, l(0,0,0,0)
  mov r15.xyz, l(0,0,0,0)
  mov r12.xy, l(0,0,0,0)
endif 
if_nz r7.z
  add r8.xyz, v6.xyzx, cb1[24].xyzx
  iadd r5.w, cb2[57].w, cb2[57].z
  mul r6.w, r3.x, l(0.00781250)
  min r6.w, r6.w, l(15.000000)
  ftou r6.w, r6.w
  ushr r9.xy, r3.yzyy, l(6, 6, 0, 0)
  ishl r9.z, r6.w, l(4)
  and r6.w, cb2[57].z, l(-32)
  iadd r7.y, -r6.w, cb2[57].z
  and r7.z, r5.w, l(-32)
  iadd r7.w, r5.w, -r7.z
  mov r10.xy, l(0,0,0,0)
  mov r11.w, l(0)
  mov r8.w, l(1.000000)
  mov r16.xyz, r13.xyzx
  mov r17.xyz, r14.xyzx
  mov r18.xyz, r15.xyzx
  mov r19.xy, r12.xyxx
  mov r9.w, r6.w
  loop 
    uge r10.w, r9.w, r5.w
    breakc_nz r10.w
    ushr r10.z, r9.w, l(5)
    iadd r11.xyz, r9.xyzx, r10.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r10.z, r11.xyzw, t35.yzxw
    ieq r10.w, r6.w, r9.w
    bfi r11.x, r7.y, l(0), l(0), r10.z
    movc r10.z, r10.w, r11.x, r10.z
    ieq r10.w, r7.z, r9.w
    ubfe r11.x, r7.w, l(0), r10.z
    movc r10.z, r10.w, r11.x, r10.z
    iadd r10.w, r4.w, r9.w
    mov r11.xyz, r16.xyzx
    mov r20.xyz, r17.xyzx
    mov r21.xyz, r18.xyzx
    mov r12.zw, r19.xxxy
    mov r13.w, r10.z
    loop 
      breakc_z r13.w
      firstbit_lo r14.w, r13.w
      ishl r15.w, l(1), r14.w
      and r16.w, r13.w, r15.w
      if_nz r16.w
        xor r13.w, r13.w, r15.w
        iadd r15.w, r10.w, r14.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r22.xyzw, r15.w, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r23.xy, r15.w, l(16), t11.xyxx
        add r22.xyz, r22.xyzx, -v6.xyzx
        mov r23.z, r22.w
        lt r22.xyz, |r22.xyzx|, r23.zxyz
        and r15.w, r22.y, r22.x
        and r15.w, r22.z, r15.w
        if_nz r15.w
          iadd r14.w, r9.w, r14.w
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r22.xyz, r14.w, l(0), t36.xyzx
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r23.xyz, r14.w, l(16), t36.xyzx
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r24.xyz, r14.w, l(32), t36.xyzx
          mov r25.x, r22.x
          mov r25.y, r23.x
          mov r25.z, r24.x
          dp3 r15.w, r25.xyzx, r25.xyzx
          rsq r15.w, r15.w
          mul r26.xyz, r15.wwww, r25.xyzx
          dp3 r15.w, r26.xyzx, v3.xyzx
          ge r15.w, r15.w, l(0.500000)
          if_nz r15.w
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r27.xyw, r14.w, l(48), t36.xyxz
            mov r25.w, r27.x
            dp4 r25.x, r8.xyzw, r25.xyzw
            mov r28.x, r22.y
            mov r28.y, r23.y
            mov r28.z, r24.y
            mov r28.w, r27.y
            dp4 r25.y, r8.xyzw, r28.xyzw
            mov r27.x, r22.z
            mov r27.y, r23.z
            mov r27.z, r24.z
            dp4 r25.z, r8.xyzw, r27.xyzw
            lt r22.xyz, |r25.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
            and r15.w, r22.y, r22.x
            and r15.w, r22.z, r15.w
            if_nz r15.w
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r22.xyzw, r14.w, l(64), t36.xyzw
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r23.xyzw, r14.w, l(80), t36.xyzw
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r24.xyzw, r14.w, l(96), t36.xyzw
              dp3 r29.x, r5.xyzx, r28.xyzx
              dp3 r29.y, r5.xyzx, r27.xyzx
              dp3 r30.x, r6.xyzx, r28.xyzx
              dp3 r30.y, r6.xyzx, r27.xyzx
              mad r19.zw, r25.yyyz, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
              mul r25.xyz, r29.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
              mul r29.xyz, r30.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
              and r30.xy, r23.yzyy, l(0x0000ffff, 0x0000ffff, 0, 0)
              if_nz r30.x
                ubfe r15.w, l(4), l(24), r23.w
                ishl r15.w, l(1), r15.w
                ushr r16.w, r23.w, l(28)
                ishl r16.w, l(1), r16.w
                ieq r17.w, r30.x, l(4)
                if_nz r17.w
                  and r17.w, r23.w, l(4095)
                  ubfe r18.w, l(12), l(12), r23.w
                  and r20.w, r24.w, l(1023)
                  utof r31.xz, r15.wwww
                  utof r31.y, r16.w
                  mad r30.zw, r19.zzzw, r31.zzzy, l(0.000000, 0.000000, 0.500000, 0.500000)
                  add r32.xy, r31.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r30.zw, r30.zzzw, r32.xxxy
                  utof r32.x, r17.w
                  utof r32.y, r18.w
                  add r30.zw, r30.zzzw, r32.xxxy
                  mul r32.xy, r30.zwzz, cb1[83].xyxx
                  utof r32.z, r20.w
                  mul r33.xyz, r25.zyzz, cb1[83].xyxx
                  mul r33.xyz, r31.xyzx, r33.xyzx
                  mul r34.xyz, r29.zyzz, cb1[83].xyxx
                  mul r31.xyz, r31.xyzx, r34.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r31.xyzw, r32.xyzx, t42.xyzw, s4, r33.xyzx, r31.xyzx
                else 
                  ieq r17.w, r30.x, l(1)
                  if_nz r17.w
                    and r17.w, r23.w, l(4095)
                    ubfe r18.w, l(12), l(12), r23.w
                    and r20.w, r24.w, l(1023)
                    utof r32.xz, r15.wwww
                    utof r32.y, r16.w
                    mad r30.xz, r19.zzwz, r32.zzyz, l(0.500000, 0.000000, 0.500000, 0.000000)
                    add r33.xy, r32.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                    min r30.xz, r30.xxzx, r33.xxyx
                    utof r33.x, r17.w
                    utof r33.y, r18.w
                    add r30.xz, r30.xxzx, r33.xxyx
                    mul r33.xy, r30.xzxx, cb1[83].zwzz
                    utof r33.z, r20.w
                    mul r30.xzw, r25.zzyz, cb1[83].zzwz
                    mul r30.xzw, r32.xxyz, r30.xxzw
                    mul r34.xyz, r29.zyzz, cb1[83].zwzz
                    mul r32.xyz, r32.xyzx, r34.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r31.xyzw, r33.xyzx, t43.xyzw, s4, r30.xzwx, r32.xyzx
                  else 
                    mov r31.xyzw, l(1.000000,1.000000,1.000000,1.000000)
                  endif 
                endif 
                mul r22.xyz, r22.xyzx, r31.xyzx
                mul r15.w, r22.w, r31.w
              else 
                mov r22.xyz, l(0,0,0,0)
                mov r15.w, l(0)
              endif 
              ne r16.w, r23.x, l(1.000000)
              add r17.w, r22.w, r15.w
              mad_sat r17.w, r17.w, r23.x, -r23.x
              movc r15.w, r16.w, r17.w, r15.w
              if_nz r30.y
                ubfe r16.w, l(4), l(24), r24.y
                ishl r16.w, l(1), r16.w
                ushr r17.w, r24.y, l(28)
                ishl r17.w, l(1), r17.w
                ieq r18.w, r30.y, l(2)
                if_nz r18.w
                  and r18.w, r24.y, l(4095)
                  ubfe r23.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r24.yyyw
                  utof r31.xz, r16.wwww
                  utof r31.y, r17.w
                  mad r30.xz, r19.zzwz, r31.zzyz, l(0.500000, 0.000000, 0.500000, 0.000000)
                  add r32.xy, r31.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r30.xz, r30.xxzx, r32.xxyx
                  utof r32.x, r18.w
                  utof r32.yz, r23.xxwx
                  add r30.xz, r30.xxzx, r32.xxyx
                  mul r32.xy, r30.xzxx, cb1[84].xyxx
                  mul r30.xzw, r25.zzyz, cb1[84].xxyx
                  mul r30.xzw, r31.xxyz, r30.xxzw
                  mul r33.xyz, r29.zyzz, cb1[84].xyxx
                  mul r31.xyz, r31.xyzx, r33.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r18.w, r32.xyzx, t45.yzwx, s4, r30.xzwx, r31.xyzx
                else 
                  ieq r20.w, r30.y, l(4)
                  if_nz r20.w
                    and r20.w, r24.y, l(4095)
                    ubfe r23.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r24.yyyw
                    utof r30.xz, r16.wwww
                    utof r30.y, r17.w
                    mad r31.xy, r19.zwzz, r30.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r31.zw, r30.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                    min r31.xy, r31.zwzz, r31.xyxx
                    utof r32.x, r20.w
                    utof r32.y, r23.x
                    add r31.xy, r31.xyxx, r32.xyxx
                    mul r31.xy, r31.xyxx, cb1[83].xyxx
                    utof r31.z, r23.w
                    mul r32.xyz, r25.zyzz, cb1[83].xyxx
                    mul r32.xyz, r30.xyzx, r32.xyzx
                    mul r33.xyz, r29.zyzz, cb1[83].xyxx
                    mul r30.xyz, r30.xyzx, r33.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r18.w, r31.xyzx, t42.yzwx, s4, r32.xyzx, r30.xyzx
                  else 
                    and r20.w, r24.y, l(4095)
                    ubfe r23.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r24.yyyw
                    utof r30.xz, r16.wwww
                    utof r30.y, r17.w
                    mad r31.xy, r19.zwzz, r30.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r31.zw, r30.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                    min r31.xy, r31.zwzz, r31.xyxx
                    utof r32.x, r20.w
                    utof r32.y, r23.x
                    add r31.xy, r31.xyxx, r32.xyxx
                    mul r31.xy, r31.xyxx, cb1[83].zwzz
                    utof r31.z, r23.w
                    mul r32.xyz, r25.zyzz, cb1[83].zwzz
                    mul r32.xyz, r30.xyzx, r32.xyzx
                    mul r33.xyz, r29.zyzz, cb1[83].zwzz
                    mul r30.xyz, r30.xyzx, r33.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r18.w, r31.xyzx, t43.yzwx, s4, r32.xyzx, r30.xyzx
                  endif 
                endif 
                mad r30.xyz, r18.wwww, l(0.960000, 0.960000, 0.960000, 0.000000), l(0.040000, 0.040000, 0.040000, 0.000000)
                add_sat r16.w, -r18.w, l(1.000000)
                mul r22.xyz, r16.wwww, r22.xyzx
              else 
                mov r30.xyz, l(0.040000,0.040000,0.040000,0)
              endif 
              ushr r23.xy, r23.zyzz, l(16, 16, 0, 0)
              if_nz r23.x
                ieq r16.w, r23.x, l(2)
                if_nz r16.w
                  ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r14.w, r14.w, l(112), t36.xxxx
                  ubfe r23.zw, l(0, 0, 4, 12), l(0, 0, 24, 12), r24.zzzz
                  ishl r16.w, l(1), r23.z
                  ushr r17.w, r24.z, l(28)
                  ishl r17.w, l(1), r17.w
                  and r18.w, r24.z, l(4095)
                  and r14.w, r14.w, l(1023)
                  utof r31.xz, r16.wwww
                  utof r31.y, r17.w
                  mad r24.yz, r19.zzwz, r31.zzyz, l(0.000000, 0.500000, 0.500000, 0.000000)
                  add r32.xy, r31.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r24.yz, r24.yyzy, r32.xxyx
                  utof r32.x, r18.w
                  utof r32.y, r23.w
                  add r23.zw, r24.yyyz, r32.xxxy
                  mul r32.xy, r23.zwzz, cb1[84].xyxx
                  utof r32.z, r14.w
                  mul r33.xyz, r25.zyzz, cb1[84].xyxx
                  mul r33.xyz, r31.xyzx, r33.xyzx
                  mul r34.xyz, r29.zyzz, cb1[84].xyxx
                  mul r31.xyz, r31.xyzx, r34.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r14.w, r32.xyzx, t45.yzwx, s4, r33.xyzx, r31.xyzx
                else 
                  ieq r16.w, r23.x, l(6)
                  movc r14.w, r16.w, l(0), l(1.000000)
                endif 
              else 
                mov r14.w, l(1.000000)
              endif 
              mul_sat r14.w, r14.w, l(0.76470590)
              if_nz r23.y
                ieq r16.w, r23.y, l(3)
                if_nz r16.w
                  ubfe r23.xyz, l(4, 12, 10, 0), l(24, 12, 10, 0), r24.xxwx
                  ishl r16.w, l(1), r23.x
                  ushr r17.w, r24.x, l(28)
                  ishl r17.w, l(1), r17.w
                  and r18.w, r24.x, l(4095)
                  utof r24.xz, r16.wwww
                  utof r24.y, r17.w
                  mad r19.zw, r19.zzzw, r24.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
                  add r23.xw, r24.zzzy, l(-0.500000, 0.000000, 0.000000, -0.500000)
                  min r19.zw, r19.zzzw, r23.xxxw
                  utof r31.x, r18.w
                  utof r31.yz, r23.yyzy
                  add r19.zw, r19.zzzw, r31.xxxy
                  mul r31.xy, r19.zwzz, cb1[84].zwzz
                  mul r23.xyz, r25.xyzx, cb1[84].zwzz
                  mul r23.xyz, r24.xyzx, r23.xyzx
                  mul r25.xyz, r29.xyzx, cb1[84].zwzz
                  mul r24.xyz, r24.xyzx, r25.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r23.xyz, r31.xyzx, t44.xyzw, s4, r23.xyzx, r24.xyzx
                else 
                  mov r23.xyz, l(0.500000,0.500000,1.000000,0)
                endif 
                mad r19.zw, r23.xxxy, l(0.000000, 0.000000, 1.99218750, 1.99218750), l(0.000000, 0.000000, -1.000000, -1.000000)
                dp2 r16.w, r19.zwzz, r19.zwzz
                add r16.w, -r16.w, l(1.000000)
                max r16.w, r16.w, l(0.000000)
                sqrt r16.w, r16.w
                mul r17.w, r23.z, r23.z
                mul r17.w, r17.w, l(0.33333334)
                min r17.w, r17.w, l(1.000000)
                dp3 r18.w, r28.xyzx, r28.xyzx
                rsq r18.w, r18.w
                mul r23.xyz, r18.wwww, r28.xyzx
                dp3 r18.w, -r27.xyzx, -r27.xyzx
                rsq r18.w, r18.w
                mul r24.xyz, r18.wwww, -r27.xyzx
                mul r25.xyz, r3.wwww, r26.xyzx
                mul r23.xyz, r3.wwww, r23.xyzx
                mul r24.xyz, r3.wwww, r24.xyzx
                mul r18.w, r14.w, l(-17.000000)
                exp r18.w, r18.w
                add r17.w, r17.w, r18.w
                log r17.w, r17.w
                mul r17.w, r17.w, l(-0.05882353)
                max r14.w, r17.w, l(0.000000)
                mul r24.xyz, r19.wwww, r24.xyzx
                mad r23.xyz, r23.xyzx, r19.zzzz, r24.xyzx
                mad r23.xyz, r25.xyzx, r16.wwww, r23.xyzx
                dp3 r16.w, r23.xyzx, r23.xyzx
                rsq r16.w, r16.w
                mul r23.xyz, r16.wwww, r23.xyzx
                add r16.w, -r15.w, l(1.000000)
                mul r24.xyz, r16.wwww, r20.xyzx
                mad r20.xyz, r23.xyzx, r15.wwww, r24.xyzx
              endif 
              add r16.w, -r15.w, l(1.000000)
              mul r23.xyz, r11.xyzx, r16.wwww
              mad r11.xyz, r22.xyzx, r15.wwww, r23.xyzx
              mul r22.xyz, r16.wwww, r21.xyzx
              mad r21.xyz, r30.xyzx, r15.wwww, r22.xyzx
              mul r17.w, r12.w, r16.w
              mad r12.z, r12.z, r16.w, r15.w
              mad r12.w, r14.w, r15.w, r17.w
            endif 
          endif 
        endif 
      endif 
    endloop 
    mov r16.xyz, r11.xyzx
    mov r17.xyz, r20.xyzx
    mov r18.xyz, r21.xyzx
    mov r19.xy, r12.zwzz
    iadd r9.w, r9.w, l(32)
  endloop 
  mov r13.xyz, r16.xyzx
  mov r14.xyz, r17.xyzx
  mov r15.xyz, r18.xyzx
  mov r12.xy, r19.xyxx
endif 
mov_sat r12.x, r12.x
add r3.w, -r12.x, l(1.000000)
mad r0.xyz, r0.xyzx, r3.wwww, r13.xyzx
mad o0.w, r0.w, r3.w, r12.x
mad r2.yzw, r2.yyzw, r3.wwww, r14.xxyz
dp3 r0.w, r2.yzwy, r2.yzwy
rsq r0.w, r0.w
mul r5.xyz, r0.wwww, r2.yzwy
mad r6.y, r1.w, r3.w, r12.y
mad r1.xyz, r1.xyzx, r3.wwww, r15.xyzx
dp3 r0.w, -v6.xyzx, -v6.xyzx
rsq r0.w, r0.w
mul r2.yzw, r0.wwww, -v6.xxyz
dp3 r8.x, r2.yzwy, v4.xyzx
dp3 r8.y, r2.yzwy, v5.xyzx
dp3 r1.w, r2.yzwy, v3.xyzx
lt r3.w, l(0.000000), r1.w
div r6.zw, -r8.xxxy, r1.wwww
and r6.zw, r3.wwww, r6.zzzw
add r7.yz, v1.yyzy, l(0.000000, -0.500000, -0.500000, 0.000000)
add r1.w, cb0[15].y, l(0.000010)
mul r6.zw, r1.wwww, r6.zzzw
mul r6.zw, r6.zzzw, cb0[13].zzzw
mad r6.zw, r7.yyyz, cb0[13].zzzw, r6.zzzw
mad r6.zw, cb0[14].xxxy, cb0[13].zzzw, r6.zzzw
mad r1.w, cb0[12].w, cb1[69].w, l(1.000000)
mul r1.w, r1.w, cb0[12].z
mul r1.w, r1.w, l(0.01745329)
sincos r8.x, r9.x, r1.w
mov r9.y, r9.x
mov r9.z, r8.x
dp2 r10.x, r9.yzyy, r6.zwzz
mov r9.x, -r8.x
dp2 r10.y, r9.xyxx, r6.zwzz
mul r6.zw, cb0[13].xxxy, cb1[69].wwww
mad r6.zw, r6.zzzw, cb0[13].zzzw, r10.xxxy
mul r1.w, cb0[15].x, cb1[69].w
sincos null, r1.w, r1.w
mad r1.w, r1.w, l(0.500000), l(0.500000)
add r1.w, -r1.w, l(1.000000)
add r3.w, -cb0[14].z, cb0[14].w
mad r1.w, r1.w, r3.w, cb0[14].z
div r6.zw, r6.zzzw, r1.wwww
add r6.zw, r6.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
mov_sat r7.yz, r6.zzwz
movc r6.zw, cb0[15].zzzw, r7.yyyz, r6.zzzw
dp3_sat r1.w, r2.yzwy, r4.xyzx
sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r6.zwzz, t29.xyzw, s1
mul r4.xyz, r4.xyzx, cb0[17].xyzx
ld_structured_indexable(structured_buffer, stride=384)(mixed,mixed,mixed,mixed) r3.w, r7.x, l(16), t0.xxxx
sample_indexable(texture2d)(float,float,float,float) r6.z, v1.yzyy, t30.yzxw, s7
mul_sat r3.w, r3.w, l(0.998000)
mad_sat r6.w, -cb0[8].x, l(0.500000), r3.w
add r7.x, r3.w, -r6.w
add r6.w, -r6.w, r6.z
div r7.x, l(1.000000, 1.000000, 1.000000, 1.000000), r7.x
mul_sat r6.w, r6.w, r7.x
mad r7.x, r6.w, l(-2.000000), l(3.000000)
mul r6.w, r6.w, r6.w
mul r6.w, r6.w, r7.x
mad_sat r7.x, cb0[8].x, l(0.500000), r3.w
add r7.x, -r3.w, r7.x
add r3.w, -r3.w, r6.z
div r6.z, l(1.000000, 1.000000, 1.000000, 1.000000), r7.x
mul_sat r3.w, r3.w, r6.z
mad r6.z, r3.w, l(-2.000000), l(3.000000)
mul r3.w, r3.w, r3.w
mad r3.w, -r6.z, r3.w, l(1.000000)
mul r3.w, r3.w, r6.w
log r3.w, r3.w
mul r3.w, r3.w, cb0[8].y
exp r3.w, r3.w
add r6.z, r3.w, l(0.200000)
min r6.z, r6.z, l(1.000000)
mul r4.w, r4.w, r6.z
mul r7.xyz, r4.wwww, cb0[17].xyzx
mad_sat r4.xyz, r4.xyzx, r3.wwww, r7.xyzx
log r3.w, r1.w
mul r3.w, r3.w, cb0[16].y
exp r3.w, r3.w
add r1.w, -r1.w, l(1.000000)
log r1.w, r1.w
mul r1.w, r1.w, cb0[16].y
exp r1.w, r1.w
movc r1.w, cb0[18].x, r1.w, r3.w
eq r3.w, cb0[16].y, l(0.000000)
movc r1.w, r3.w, l(1.000000), r1.w
mul r1.w, r1.w, cb0[16].x
mul r4.xyz, r1.wwww, r4.xyzx
ine r1.w, cb1[92].x, l(0)
utof r6.zw, r3.zzzy
dp2 r3.w, r6.wzww, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r3.w, r3.w
mul r3.xw, r3.xxxw, l(0.00781250, 0.000000, 0.000000, 52.982918)
frc r3.w, r3.w
mad r3.w, r3.w, l(6.28318548), cb1[70].w
sincos r7.x, r8.x, r3.w
dp2 r3.w, r6.zwzz, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r3.w, r3.w
mul r3.w, r3.w, l(52.982918)
frc r3.w, r3.w
mad r3.w, r3.w, l(6.28318548), cb1[70].w
sincos r9.x, r10.x, r3.w
dp3_sat r6.x, r5.xyzx, r2.yzwy
dp3 r3.w, -r2.yzwy, r5.xyzx
add r3.w, r3.w, r3.w
mad r11.xyz, r5.xyzx, -r3.wwww, -r2.yzwy
mul r3.w, r6.y, l(17.000000)
exp r3.w, r3.w
add r3.w, r3.w, l(2.000000)
div r3.w, l(2.000000), r3.w
sqrt r4.w, r3.w
sqrt r6.z, r4.w
mad r6.z, r6.z, l(0.500000), l(0.500000)
mul r6.z, r6.z, r6.z
mul r6.w, r6.z, l(0.500000)
mad r6.z, -r6.z, l(0.500000), l(1.000000)
mad r7.z, r6.x, r6.z, r6.w
mul r6.zw, r6.zzzw, r7.zzzz
dp3 r7.z, r5.xyzx, cb2[17].xyzx
mov_sat r7.w, r7.z
ge r8.w, l(0.000000), r7.w
if_nz r8.w
  mov r9.y, l(0)
endif 
if_z r8.w
  mul r10.yzw, v6.yyyy, cb2[29].xxyz
  mad r10.yzw, v6.xxxx, cb2[28].xxyz, r10.yyzw
  mad r10.yzw, v6.zzzz, cb2[30].xxyz, r10.yyzw
  add r10.yzw, r10.yyzw, cb2[31].xxyz
  add r8.w, r10.w, -cb2[17].w
  mad r8.w, -r8.w, l(0.00006104), l(1.000000)
  mov_sat r9.z, r8.w
  eq r9.z, r8.w, r9.z
  if_nz r9.z
    mov r9.zw, l(0,0,0,0)
    loop 
      ge r12.x, r9.z, l(3.000000)
      breakc_nz r12.x
      ftou r12.x, r9.z
      add r12.yz, r10.yyzy, -cb2[r12.x + 20].xxyx
      max r12.y, |r12.z|, |r12.y|
      mul r9.w, r12.y, cb2[r12.x + 20].z
      lt r12.x, r9.w, l(1.000000)
      if_nz r12.x
        break 
      endif 
      add r9.z, r9.z, l(1.000000)
      mov r9.w, l(0)
    endloop 
  else 
    mov r9.zw, l(0,0,3.000000,0)
  endif 
  ge r12.x, r9.z, l(3.000000)
  if_nz r12.x
    mul r12.yzw, l(0.000000, 128.000000, 0.500000, 0.500000), cb2[27].zzxy
    rcp r13.xz, r12.yyyy
    mov r13.y, -r13.z
    mad r12.yzw, r10.yyzy, r13.xxyz, r12.zzwz
    add r13.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r12.yzw, r12.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r12.yzw, r13.xxyz, r12.yyzw
    mul r13.xy, r12.wzww, cb2[32].xxxx
    round_ni r13.xy, r13.xyxx
    mul r13.y, r13.y, cb2[27].x
    mad r13.x, r13.y, cb2[32].x, r13.x
    ftou r13.x, r13.x
    iadd r13.x, r13.x, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r13.y, r13.x, l(0), t23.xxxx
    and r13.z, r13.y, l(0x40000000)
    ishl r13.w, r13.y, l(2)
    if_z r13.z
      and r13.z, r13.y, l(0x01ffffff)
      iadd r14.x, r13.z, r13.x
      ushr r13.x, r13.y, l(25)
      utof r13.x, r13.x
      mul r12.yzw, r12.yyzw, r13.xxxx
      frc r12.yzw, r12.yyzw
      mul r12.yzw, r12.yyzw, l(0.000000, 128.000000, 128.000000, 128.000000)
      ftou r12.yzw, r12.yyzw
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r14.z, r14.x, l(0), t23.xxxx
      ushr r13.xy, r12.wzww, l(6, 6, 0, 0)
      and r13.z, r14.z, l(0xc0000000)
      iadd r14.w, r14.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r14.w, r14.w, l(0), t23.xxxx
      movc r13.y, r13.y, r14.z, r14.w
      ushr r14.w, r13.y, l(13)
      movc r13.x, r13.x, r14.w, r13.y
      and r13.x, r13.x, l(8191)
      iadd r15.x, r13.x, r14.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.z, r15.x, l(0), t23.xxxx
      mov r14.y, l(0)
      mov r15.y, l(1)
      movc r15.xyz, r13.zzzz, r14.xyzx, r15.xyzx
      movc r16.yz, r13.zzzz, l(0,6,1,0), l(0,5,2,0)
      ushr r13.xy, r12.wzww, r16.yyyy
      and r13.xy, r13.xyxx, l(1, 1, 0, 0)
      and r14.w, r15.z, l(0xc0000000)
      iadd r15.w, r15.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.w, r15.w, l(0), t23.xxxx
      movc r13.y, r13.y, r15.z, r15.w
      ushr r15.w, r13.y, l(13)
      movc r13.x, r13.x, r15.w, r13.y
      and r13.x, r13.x, l(8191)
      iadd r16.x, r13.x, r15.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.w, r16.x, l(0), t23.xxxx
      movc r15.xyz, r14.wwww, r15.xyzx, r16.xzwx
      movc r13.xyz, r13.zzzz, r14.xyzx, r15.xyzx
      and r14.x, r13.z, l(0xc0000000)
      if_z r14.x
        iadd r14.x, -r13.y, l(6)
        ushr r14.xy, r12.wzww, r14.xxxx
        or r14.z, r13.z, l(0x40000000)
        bfi r14.y, l(1), l(1), r14.y, l(0)
        bfi r14.x, l(1), l(0), r14.x, r14.y
        imul null, r14.x, r14.x, l(10)
        ushr r14.x, r14.z, r14.x
        and r14.x, r14.x, l(1023)
        iadd r14.x, r13.x, r14.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r14.w, r14.x, l(0), t23.xxxx
        iadd r14.yz, r13.yyyy, l(0, 1, 2, 0)
        iadd r13.y, -r14.y, l(6)
        ushr r15.xy, r12.wzww, r13.yyyy
        and r13.y, r14.w, l(0xc0000000)
        or r15.z, r14.w, l(0x40000000)
        bfi r15.y, l(1), l(1), r15.y, l(0)
        bfi r15.x, l(1), l(0), r15.x, r15.y
        imul null, r15.x, r15.x, l(10)
        ushr r15.x, r15.z, r15.x
        and r15.x, r15.x, l(1023)
        iadd r15.x, r14.x, r15.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.z, r15.x, l(0), t23.xxxx
        mov r15.y, r14.z
        movc r15.xyz, r13.yyyy, r14.xywx, r15.xyzx
        iadd r14.y, -r15.y, l(6)
        ushr r14.yz, r12.wwzw, r14.yyyy
        and r15.y, r15.z, l(0xc0000000)
        or r15.w, r15.z, l(0x40000000)
        bfi r14.z, l(1), l(1), r14.z, l(0)
        bfi r14.y, l(1), l(0), r14.y, r14.z
        imul null, r14.y, r14.y, l(10)
        ushr r14.y, r15.w, r14.y
        and r14.y, r14.y, l(1023)
        iadd r16.x, r14.y, r15.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.y, r16.x, l(0), t23.xxxx
        movc r14.yz, r15.yyyy, r15.xxzx, r16.xxyx
        movc r13.xz, r13.yyyy, r14.xxwx, r14.yyzy
      endif 
      and r13.y, r13.z, l(0xc0000000)
      if_z r13.y
        ubfe r14.x, l(14), l(15), r13.z
        utof r14.x, r14.x
        and r14.yz, r13.zzzz, l(0, 0x00007fff, 0x20000000, 0)
        utof r14.y, r14.y
        mul r14.xy, r14.xyxx, cb2[27].wwww
        mul r14.xy, r14.xyxx, l(0.00006104, 0.00003052, 0.000000, 0.000000)
        and r14.w, r12.z, l(3)
        iadd r14.w, r13.x, r14.w
        iadd r14.w, r14.w, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r14.w, r14.w, l(0), t23.xxxx
        bfi r15.xyz, l(2, 2, 1, 0), l(3, 1, 4, 0), r12.yzwy, l(0, 0, 0, 0)
        ushr r12.y, r14.w, r15.x
        and r12.y, r12.y, l(255)
        utof r12.y, r12.y
        mul r12.y, r14.y, r12.y
        mad r12.y, r12.y, l(0.00392157), r14.x
        iadd r12.z, r15.y, l(1)
        ubfe r12.w, l(1), l(1), r12.w
        iadd r12.z, r12.w, r12.z
        iadd r12.z, r12.z, r13.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r12.z, r12.z, l(0), t23.xxxx
        ushr r12.z, r12.z, r15.z
        and r12.z, r12.z, l(0x0000ffff)
        utof r12.z, r12.z
        mul r12.z, r14.y, r12.z
        mad r12.z, r12.z, l(0.00001526), r14.x
        movc r13.w, r14.z, r12.y, r12.z
      else 
        and r12.y, r13.z, l(0x80000000)
        iadd r12.z, r13.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r12.z, r12.z, l(0), t23.xxxx
        movc r12.y, r12.y, r12.z, l(0)
        ishl r12.z, r13.z, l(2)
        ushr r12.w, r12.y, l(16)
        and r12.y, r12.y, l(0x0000ffff)
        f16tof32 r12.yw, r12.yyyw
        mad r12.z, r10.y, r12.w, r12.z
        mad r12.y, r10.z, r12.y, r12.z
        movc r13.w, r13.y, r12.y, r13.w
      endif 
    endif 
    mad r10.w, -cb2[27].z, l(2.000000), r10.w
    lt r10.w, r13.w, r10.w
    movc r9.y, r10.w, l(0), l(1.000000)
  endif 
  if_z r12.x
    if_z cb2[58].y
      ftou r10.w, r9.z
      add r12.xy, r10.yzyy, -cb2[r10.w + 20].xyxx
      mul r12.xy, r12.xyxx, cb2[r10.w + 20].zzzz
      mad r12.xy, r12.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r10.w, cb2[26].y
      add r12.z, r9.z, r10.w
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.w, r12.xyzx, t13.xxxx, s13, r8.w
      sample_l_indexable(texture2darray)(float,float,float,float) r12.x, r12.xyzx, t31.xyzw, s0, l(0.000000)
      add r10.w, r10.w, r12.x
      add_sat r10.w, r10.w, l(-1.000000)
      mul r12.x, r10.w, r10.w
      mul r9.y, r10.w, r12.x
    endif 
    if_nz cb2[58].y
      mov r12.x, -r7.x
      ftou r10.w, r9.z
      add r9.z, r9.z, l(1.000000)
      min r9.z, r9.z, l(2.000000)
      add r9.w, -r9.w, l(1.000000)
      mul r9.w, r9.w, l(28.000000)
      ftou r9.zw, r9.zzzw
      add r13.xy, r10.yzyy, -cb2[r10.w + 20].xyxx
      mul r13.xy, r13.xyxx, cb2[r10.w + 20].zzzz
      mad r13.xy, r13.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      add r10.yz, r10.yyzy, -cb2[r9.z + 20].xxyx
      mul r10.yz, r10.yyzy, cb2[r9.z + 20].zzzz
      mad r10.yz, r10.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      mov r12.y, r8.x
      mov r12.z, r7.x
      mov r12.w, l(0)
      mov r13.z, l(0)
      loop 
        uge r13.w, r13.z, l(8)
        breakc_nz r13.w
        ult r13.w, r9.w, r13.z
        movc r14.xy, r13.wwww, r10.yzyy, r13.xyxx
        movc r14.z, r13.w, cb2[r9.z + 20].w, cb2[r10.w + 20].w
        movc r13.w, r13.w, r9.z, r10.w
        dp2 r15.x, icb[r13.z + 0].yxyy, r12.xyxx
        dp2 r15.y, icb[r13.z + 0].yxyy, r12.yzyy
        mad r14.xy, r15.xyxx, r14.zzzz, r14.xyxx
        iadd r13.w, r13.w, cb2[26].y
        utof r14.z, r13.w
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r13.w, r14.xyzx, t13.xxxx, s13, r8.w
        sample_l_indexable(texture2darray)(float,float,float,float) r14.x, r14.xyzx, t31.xyzw, s0, l(0.000000)
        add r13.w, r13.w, r14.x
        add_sat r13.w, r13.w, l(-1.000000)
        mad r12.w, r13.w, l(0.125000), r12.w
        iadd r13.z, r13.z, l(1)
      endloop 
      mul r8.w, r12.w, r12.w
      mul r9.y, r12.w, r8.w
    endif 
  endif 
endif 
lt r8.w, l(0.000000), r7.w
if_nz r8.w
  lt r8.w, l(0.000000), r9.y
  if_nz r8.w
    mul r8.w, r3.w, cb2[18].w
    mul r8.w, r7.w, r8.w
    if_nz cb2[23].x
      add r12.xyz, v6.xyzx, cb1[24].xyzx
      mov r12.w, l(1.000000)
      dp4 r9.z, cb2[24].xyzw, r12.xyzw
      dp4 r9.w, cb2[25].xyzw, r12.xyzw
      frc r12.xy, r9.zwzz
      iadd r9.z, l(-1), cb2[23].x
      utof r12.z, r9.z
      sample_l_indexable(texture2darray)(float,float,float,float) r10.yzw, r12.xyzx, t20.wxyz, s2, l(0.000000)
      add r10.yzw, r10.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
      mad r10.yzw, cb2[23].yyyy, r10.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
      mul r10.yzw, r10.yyzw, cb2[18].xxyz
    else 
      mov r10.yzw, cb2[18].xxyz
    endif 
    ushr r9.z, cb2[53].x, l(16)
    ult r9.w, l(0), r9.z
    and r9.w, r1.w, r9.w
    if_nz r9.w
      iadd r9.z, r9.z, cb2[0].x
      iadd r9.z, r9.z, l(-1)
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r9.w, r9.z, l(52), t12.xxxx
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.xyzw, r9.z, l(68), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.xyzw, r9.z, l(84), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.xyzw, r9.z, l(132), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r9.z, l(148), t12.xyzw
      mad r16.x, |r7.z|, l(-0.200000), l(0.400000)
      mad r16.xyz, r5.xyzx, r16.xxxx, v6.xyzx
      mov r16.w, l(1.000000)
      dp4 r12.x, r12.xyzw, r16.xyzw
      dp4 r12.y, r13.xyzw, r16.xyzw
      mad r12.xy, r12.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      add r12.xy, r15.zwzz, r12.xyxx
      mul r12.xy, r15.xyxx, r12.xyxx
      div r12.zw, r9.wwww, r14.xxxz
      add r13.xy, -r12.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
      ge r13.xy, r12.xyxx, r13.xyxx
      ge r12.zw, r12.zzzw, r12.xxxy
      or r12.zw, r12.zzzw, r13.xxxy
      or r12.z, r12.w, r12.z
      if_z r12.z
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.z, r9.z, l(28), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.xyzw, r9.z, l(100), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xy, r9.z, l(164), t12.xyxx
        dp4 r9.z, r13.xyzw, r16.xyzw
        mov_sat r12.xy, r12.xyxx
        mad r13.xy, r12.xyxx, r14.xzxx, r14.ywyy
        add r9.z, r15.x, r9.z
        div r9.z, r9.z, r15.y
        max r9.z, r9.z, l(0.00006104)
        and r12.x, r12.z, l(0x0000ffff)
        if_nz cb2[58].y
          mov r14.x, -r7.x
          utof r15.z, r12.x
          mov r14.y, r8.x
          mov r14.z, r7.x
          mov r12.yz, l(0,0,0,0)
          loop 
            ige r12.w, r12.z, l(8)
            breakc_nz r12.w
            dp2 r16.x, icb[r12.z + 0].yxyy, r14.xyxx
            dp2 r16.y, icb[r12.z + 0].yxyy, r14.yzyy
            mad r15.xy, r16.xyxx, r9.wwww, r13.xyxx
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.w, r15.xyzx, t9.xxxx, s13, r9.z
            mad r12.y, r12.w, l(0.125000), r12.y
            iadd r12.z, r12.z, l(1)
          endloop 
        else 
          utof r13.z, r12.x
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.y, r13.xyzx, t9.xxxx, s13, r9.z
        endif 
        mul r9.z, r12.y, r12.y
        mul r9.z, r12.y, r9.z
      else 
        mov r9.z, l(1.000000)
      endif 
      mul r9.y, r9.z, r9.y
    else 
      and r9.z, cb2[53].x, l(0x0000ffff)
      ult r9.w, l(0), r9.z
      not r12.x, r1.w
      and r9.w, r9.w, r12.x
      if_nz r9.w
        iadd r9.z, r9.z, cb2[0].x
        iadd r9.z, r9.z, l(-1)
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r9.w, r9.z, l(52), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.xyzw, r9.z, l(68), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.xyzw, r9.z, l(84), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.xyzw, r9.z, l(132), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r9.z, l(148), t12.xyzw
        mad r16.x, |r7.z|, l(-0.200000), l(0.400000)
        mad r16.xyz, r5.xyzx, r16.xxxx, v6.xyzx
        mov r16.w, l(1.000000)
        dp4 r12.x, r12.xyzw, r16.xyzw
        dp4 r12.y, r13.xyzw, r16.xyzw
        mad r12.xy, r12.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
        add r12.xy, r15.zwzz, r12.xyxx
        mul r12.xy, r15.xyxx, r12.xyxx
        div r12.zw, r9.wwww, r14.xxxz
        add r13.xy, -r12.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
        ge r13.xy, r12.xyxx, r13.xyxx
        ge r12.zw, r12.zzzw, r12.xxxy
        or r12.zw, r12.zzzw, r13.xxxy
        or r12.z, r12.w, r12.z
        if_z r12.z
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.z, r9.z, l(28), t12.xxxx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.xyzw, r9.z, l(100), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xy, r9.z, l(164), t12.xyxx
          dp4 r9.z, r13.xyzw, r16.xyzw
          mov_sat r12.xy, r12.xyxx
          mad r13.xy, r12.xyxx, r14.xzxx, r14.ywyy
          add r9.z, r15.x, r9.z
          div r9.z, r9.z, r15.y
          max r9.z, r9.z, l(0.00006104)
          and r12.x, r12.z, l(0x0000ffff)
          if_nz cb2[58].y
            mov r14.x, -r7.x
            utof r15.z, r12.x
            mov r14.y, r8.x
            mov r14.z, r7.x
            mov r12.yz, l(0,0,0,0)
            loop 
              ige r12.w, r12.z, l(8)
              breakc_nz r12.w
              dp2 r16.x, icb[r12.z + 0].yxyy, r14.xyxx
              dp2 r16.y, icb[r12.z + 0].yxyy, r14.yzyy
              mad r15.xy, r16.xyxx, r9.wwww, r13.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.w, r15.xyzx, t9.xxxx, s13, r9.z
              mad r12.y, r12.w, l(0.125000), r12.y
              iadd r12.z, r12.z, l(1)
            endloop 
          else 
            utof r13.z, r12.x
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.y, r13.xyzx, t9.xxxx, s13, r9.z
          endif 
          mul r9.z, r12.y, r12.y
          mul r9.z, r12.y, r9.z
        else 
          mov r9.z, l(1.000000)
        endif 
        mul r9.y, r9.z, r9.y
      endif 
    endif 
    mad r9.z, -r6.x, l(0.500000), l(1.000000)
    mad r9.z, -r7.w, r9.z, l(1.000000)
    mul r9.z, r9.z, r9.z
    mad r9.z, -r9.z, l(0.620000), l(0.620000)
    add r9.z, -r7.w, r9.z
    mad r9.z, r4.w, r9.z, r7.w
    mul r9.z, r9.y, r9.z
    mul r12.xyz, r10.yzwy, r9.zzzz
    lt r7.z, l(0.000000), r7.z
    mad r13.xyz, -v6.xyzx, r0.wwww, cb2[17].xyzx
    dp3 r0.w, r13.xyzx, r13.xyzx
    rsq r0.w, r0.w
    mul r13.xyz, r0.wwww, r13.xyzx
    dp3 r0.w, r13.xyzx, r2.yzwy
    dp3 r9.z, r5.xyzx, r13.xyzx
    mad r9.w, |r9.z|, r3.w, -|r9.z|
    mad r9.z, |r9.z|, r9.w, l(1.000000)
    mad r7.w, r7.w, r6.z, r6.w
    mul r9.z, r9.z, r9.z
    mul r7.w, r7.w, r9.z
    rcp r7.w, r7.w
    mul r7.w, r8.w, r7.w
    mul r7.w, r7.w, r9.y
    mul r7.w, r7.w, l(0.250000)
    mul r9.yzw, r10.yyzw, r7.wwww
    add_sat r0.w, -r0.w, l(1.000000)
    mul r8.w, r0.w, r0.w
    mul r8.w, r8.w, r8.w
    mul r0.w, r0.w, r8.w
    mul r0.w, r0.w, r7.w
    mul r13.xyz, r10.zwyz, r0.wwww
    mov r12.w, r13.z
    and r12.xyzw, r7.zzzz, r12.xyzw
    mov r13.zw, r9.yyyz
    and r13.xyzw, r7.zzzz, r13.xyzw
    and r0.w, r7.z, r9.w
  else 
    mov r12.xyzw, l(0,0,0,0)
    mov r13.xyzw, l(0,0,0,0)
    mov r0.w, l(0)
  endif 
else 
  mov r12.xyzw, l(0,0,0,0)
  mov r13.xyzw, l(0,0,0,0)
  mov r0.w, l(0)
endif 
min r3.x, r3.x, l(15.000000)
ftou r3.x, r3.x
ushr r14.xy, r3.yzyy, l(6, 6, 0, 0)
ishl r14.z, r3.x, l(4)
mov r15.x, -r7.x
not r3.x, r1.w
mad r3.y, -r6.x, l(0.500000), l(1.000000)
mov r16.xy, l(0,0,0,0)
mov r17.w, l(0)
mov r18.xyz, v6.xyzx
mov r18.w, l(1.000000)
mov r19.w, l(1.000000)
mov r15.z, r7.x
mov r20.w, l(1.000000)
mov r21.z, l(1.000000)
mov r22.w, l(1.000000)
mov r15.yw, r8.xxxx
mov r7.y, r15.w
mov r23.w, l(1.000000)
mov r8.y, r15.x
mov r8.z, r7.x
mov r24.w, l(1.000000)
mov r25.x, r8.x
mov r25.y, r15.x
mov r25.z, r7.x
mov r26.x, r8.x
mov r26.y, r15.x
mov r26.z, r7.x
mov r27.x, r8.x
mov r27.y, r15.x
mov r27.z, r7.x
mov r9.yzw, r12.xxyz
mov r28.x, r12.w
mov r28.yz, r13.xxyx
mov r29.xy, r13.zwzz
mov r29.z, r0.w
mov r3.z, cb2[58].y
mov r7.z, l(0)
loop 
  uge r7.w, r7.z, cb2[0].x
  breakc_nz r7.w
  ushr r16.z, r7.z, l(5)
  iadd r17.xyz, r14.xyzx, r16.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r7.w, r17.xyzw, t6.yzwx
  mov r10.yzw, r9.yyzw
  mov r17.xyz, r28.xyzx
  mov r30.xyz, r29.xyzx
  mov r8.w, r3.z
  mov r14.w, r7.w
  loop 
    breakc_z r14.w
    firstbit_lo r16.z, r14.w
    ishl r16.w, l(1), r16.z
    and r21.w, r14.w, r16.w
    if_nz r21.w
      xor r14.w, r14.w, r16.w
      iadd r16.z, r7.z, r16.z
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r31.xyzw, r16.z, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r32.xy, r16.z, l(16), t11.xyxx
      add r31.xyz, r31.xyzx, -v6.xyzx
      mov r32.z, r31.w
      lt r31.xyz, |r31.xyzx|, r32.zxyz
      and r16.w, r31.y, r31.x
      and r16.w, r31.z, r16.w
      if_nz r16.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r16.z, l(0), t12.wxyz
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r16.z, l(16), t12.zxyw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r16.z, l(32), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r16.z, l(48), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r16.z, l(64), t12.yzwx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r16.z, l(80), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r16.z, l(96), t12.yzwx
        ubfe r16.w, l(3), l(24), r32.w
        switch r16.w
          case l(4)
          lt r16.w, l(0.000000), r37.x
          mov r38.xy, r36.zwzz
          mov r38.z, r37.w
          mad r39.xyz, -r38.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r31.yzwy
          add r40.xyz, r39.xyzx, -v6.xyzx
          dp3 r21.w, r38.xyzx, r40.xyzx
          div_sat r25.w, -r21.w, r37.x
          mad r41.xyz, r25.wwww, r38.xyzx, r39.xyzx
          movc r41.xyz, r16.wwww, r41.xyzx, r31.yzwy
          add r41.xyz, r41.xyzx, -v6.xyzx
          dp3 r26.w, r41.xyzx, r41.xyzx
          rsq r27.w, r26.w
          mul r41.xyz, r27.wwww, r41.xyzx
          dp3 r27.w, r5.xyzx, r41.xyzx
          mov_sat r28.w, r27.w
          lt r29.w, l(0.000000), r28.w
          if_nz r29.w
            sqrt r29.w, r26.w
            mul r30.w, r34.x, r34.x
            div r26.w, r30.w, r26.w
            min r26.w, r26.w, l(1.000000)
            mad_sat r41.xy, r29.wwww, r33.xzxx, r33.ywyy
            mul r41.zw, r41.xxxy, r41.xxxy
            mad r41.xy, r41.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
            mul r41.xy, r41.xyxx, r41.zwzz
            mul r26.w, r26.w, r41.x
            mul r26.w, r41.y, r26.w
            lt r29.w, l(0.000000), r26.w
            if_nz r29.w
              ubfe r29.w, l(3), l(27), r32.w
              ine r29.w, r29.w, l(1)
              if_nz r29.w
                mad r29.w, |r27.w|, l(-0.200000), l(0.400000)
                mad r41.xyz, r5.xyzx, r29.wwww, v6.xyzx
                add r41.xyz, -r35.xyzx, r41.xyzx
                max r29.w, |r41.z|, |r41.y|
                max r29.w, r29.w, |r41.x|
                div r29.w, r36.x, r29.w
                add r29.w, r36.y, r29.w
                dp3 r30.w, r41.xyzx, r41.xyzx
                rsq r30.w, r30.w
                max r29.w, r29.w, l(0.00006104)
                and r38.w, r32.w, l(0x0000ffff)
                utof r42.w, r38.w
                mov r38.w, l(0)
                mov r39.w, l(0)
                loop 
                  ige r40.w, r39.w, l(8)
                  breakc_nz r40.w
                  dp2 r43.y, icb[r39.w + 0].yxyy, r15.xyxx
                  dp2 r43.z, icb[r39.w + 0].yxyy, r15.yzyy
                  mul r43.yz, r34.yyyy, r43.yyzy
                  mul r43.x, r10.x, r43.y
                  mul r43.w, r9.x, r43.y
                  mad r42.xyz, r41.xyzx, r30.wwww, r43.xzwx
                  sample_c_lz_indexable(texturecubearray)(float,float,float,float) r40.w, r42.xyzw, t10.xxxx, s13, r29.w
                  mad r38.w, r40.w, l(0.125000), r38.w
                  iadd r39.w, r39.w, l(1)
                endloop 
              else 
                mov r38.w, l(1.000000)
              endif 
              mul r26.w, r26.w, r38.w
              lt r29.w, l(0.000000), r26.w
              if_nz r29.w
                mul r29.w, r3.w, r32.x
                mul r29.w, r29.w, l(0.250000)
                dp3 r30.w, r38.xyzx, r11.xyzx
                dp3 r39.w, r11.xyzx, r40.xyzx
                mad r40.x, -r30.w, r30.w, r37.x
                mad r21.w, r30.w, r39.w, -r21.w
                div_sat r21.w, r21.w, r40.x
                div r30.w, r40.x, r37.x
                mul r30.w, r30.w, l(10.000000)
                min r30.w, r30.w, l(1.000000)
                add r21.w, -r25.w, r21.w
                mad r21.w, r30.w, r21.w, r25.w
                mad r38.xyz, r21.wwww, r38.xyzx, r39.xyzx
                movc r38.xyz, r16.wwww, r38.xyzx, r31.yzwy
                add r38.xyz, r38.xyzx, -v6.xyzx
                dp3 r16.w, r38.xyzx, r38.xyzx
                rsq r16.w, r16.w
                mul r39.xyz, r16.wwww, r38.xyzx
                ubfe r21.w, l(4), l(16), r32.w
                ult r25.w, l(0), r21.w
                and r25.w, r1.w, r25.w
                if_nz r25.w
                  iadd r21.w, r21.w, cb2[0].x
                  iadd r21.w, r21.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r25.w, r21.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r21.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r21.w, l(116), t12.xyzw
                  mad r30.w, |r27.w|, l(-0.200000), l(0.400000)
                  mad r19.xyz, r5.xyzx, r30.wwww, v6.xyzx
                  dp4 r30.w, r40.xyzw, r19.xyzw
                  dp4 r39.w, r41.xyzw, r19.xyzw
                  lt r40.x, r39.w, r30.w
                  if_z r40.x
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r21.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r21.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r21.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r21.w, l(148), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.yz, r21.w, l(164), t12.xxyx
                    dp4 r41.x, r41.xyzw, r19.xyzw
                    dp4 r41.y, r42.xyzw, r19.xyzw
                    div r19.xy, r41.xyxx, r39.wwww
                    mad r19.xy, r19.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r19.xy, r44.zwzz, r19.xyxx
                    mul r19.xy, r44.xyxx, r19.xyxx
                    div r41.xy, r25.wwww, r43.xzxx
                    add r41.zw, -r41.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                    ge r41.zw, r19.xxxy, r41.zzzw
                    ge r41.xy, r41.xyxx, r19.xyxx
                    or r41.xy, r41.xyxx, r41.zwzz
                    or r19.z, r41.y, r41.x
                    mov_sat r19.xy, r19.xyxx
                    mad r41.xy, r19.xyxx, r43.xzxx, r43.ywyy
                    mul r19.x, r39.w, r40.z
                    mad r19.y, r40.y, r39.w, r30.w
                    div r19.x, r19.y, r19.x
                  else 
                    mov r19.z, l(-1)
                  endif 
                  or r19.y, r40.x, r19.z
                  if_z r19.y
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.y, r21.w, l(28), t12.xxxx
                    max r19.x, r19.x, l(0.00006104)
                    and r19.y, r19.y, l(0x0000ffff)
                    if_nz r8.w
                      utof r40.z, r19.y
                      mov r19.z, l(0)
                      mov r21.w, l(0)
                      loop 
                        ige r30.w, r21.w, l(8)
                        breakc_nz r30.w
                        dp2 r42.x, icb[r21.w + 0].yxyy, r15.xwxx
                        dp2 r42.y, icb[r21.w + 0].xyxx, r7.xyxx
                        mad r40.xy, r42.xyxx, r25.wwww, r41.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r30.w, r40.xyzx, t9.xxxx, s13, r19.x
                        mad r19.z, r30.w, l(0.125000), r19.z
                        iadd r21.w, r21.w, l(1)
                      endloop 
                    else 
                      utof r41.z, r19.y
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.z, r41.xyzx, t9.xxxx, s13, r19.x
                    endif 
                    mul r19.x, r19.z, r19.z
                    mul r19.x, r19.z, r19.x
                  else 
                    mov r19.x, l(1.000000)
                  endif 
                  mul r26.w, r19.x, r26.w
                else 
                  ubfe r19.x, l(4), l(20), r32.w
                  ult r19.y, l(0), r19.x
                  and r19.y, r3.x, r19.y
                  if_nz r19.y
                    iadd r19.x, r19.x, cb2[0].x
                    iadd r19.x, r19.x, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.y, r19.x, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r19.x, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r19.x, l(116), t12.xyzw
                    mad r21.w, |r27.w|, l(-0.200000), l(0.400000)
                    mad r20.xyz, r5.xyzx, r21.wwww, v6.xyzx
                    dp4 r21.w, r40.xyzw, r20.xyzw
                    dp4 r25.w, r41.xyzw, r20.xyzw
                    lt r30.w, r25.w, r21.w
                    if_z r30.w
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r19.x, l(68), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r19.x, l(84), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r19.x, l(132), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r19.x, l(148), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xy, r19.x, l(164), t12.xyxx
                      dp4 r40.x, r40.xyzw, r20.xyzw
                      dp4 r40.y, r41.xyzw, r20.xyzw
                      div r20.xy, r40.xyxx, r25.wwww
                      mad r20.xy, r20.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                      add r20.xy, r43.zwzz, r20.xyxx
                      mul r20.xy, r43.xyxx, r20.xyxx
                      div r40.xy, r19.yyyy, r42.xzxx
                      add r40.zw, -r40.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                      ge r40.zw, r20.xxxy, r40.zzzw
                      ge r40.xy, r40.xyxx, r20.xyxx
                      or r40.xy, r40.xyxx, r40.zwzz
                      or r20.z, r40.y, r40.x
                      mov_sat r20.xy, r20.xyxx
                      mad r40.xy, r20.xyxx, r42.xzxx, r42.ywyy
                      mul r20.x, r25.w, r44.y
                      mad r20.y, r44.x, r25.w, r21.w
                      div r20.x, r20.y, r20.x
                    else 
                      mov r20.z, l(-1)
                    endif 
                    or r20.y, r30.w, r20.z
                    if_z r20.y
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.x, r19.x, l(28), t12.xxxx
                      max r20.x, r20.x, l(0.00006104)
                      and r19.x, r19.x, l(0x0000ffff)
                      if_nz r8.w
                        utof r41.z, r19.x
                        mov r20.yz, l(0,0,0,0)
                        loop 
                          ige r21.w, r20.z, l(8)
                          breakc_nz r21.w
                          dp2 r42.x, icb[r20.z + 0].xyxx, r8.xyxx
                          dp2 r42.y, icb[r20.z + 0].yxyy, r8.xzxx
                          mad r41.xy, r42.xyxx, r19.yyyy, r40.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.w, r41.xyzx, t9.xxxx, s13, r20.x
                          mad r20.y, r21.w, l(0.125000), r20.y
                          iadd r20.z, r20.z, l(1)
                        endloop 
                      else 
                        utof r40.z, r19.x
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r20.y, r40.xyzx, t9.xxxx, s13, r20.x
                      endif 
                      mul r19.x, r20.y, r20.y
                      mul r19.x, r20.y, r19.x
                    else 
                      mov r19.x, l(1.000000)
                    endif 
                    mul r26.w, r19.x, r26.w
                  endif 
                endif 
                mad r19.x, -r28.w, r3.y, l(1.000000)
                mul r19.x, r19.x, r19.x
                mad r19.x, -r19.x, l(0.620000), l(0.620000)
                add r19.x, -r28.w, r19.x
                mad r19.x, r4.w, r19.x, r28.w
                mul r19.x, r26.w, r19.x
                mov r32.x, r31.x
                lt r19.y, l(0.000000), r27.w
                mad r40.xyz, r19.xxxx, r32.xyzx, r10.yzwy
                dp3_sat r19.x, r5.xyzx, r39.xyzx
                mad r38.xyz, r38.xyzx, r16.wwww, r2.yzwy
                dp3 r16.w, r38.xyzx, r38.xyzx
                rsq r16.w, r16.w
                mul r38.xyz, r16.wwww, r38.xyzx
                dp3 r16.w, r38.xyzx, r2.yzwy
                dp3 r20.x, r5.xyzx, r38.xyzx
                mad r20.z, |r20.x|, r3.w, -|r20.x|
                mad r20.x, |r20.x|, r20.z, l(1.000000)
                mad r20.z, r19.x, r6.z, r6.w
                mul r20.x, r20.x, r20.x
                mul r20.x, r20.z, r20.x
                rcp r20.x, r20.x
                mul r19.x, r29.w, r19.x
                mul r19.x, r19.x, r20.x
                mul r19.x, r26.w, r19.x
                mad r38.xyz, r19.xxxx, r32.xyzx, r30.xyzx
                add_sat r16.w, -r16.w, l(1.000000)
                mul r20.x, r16.w, r16.w
                mul r20.x, r20.x, r20.x
                mul r16.w, r16.w, r20.x
                mul r16.w, r16.w, r19.x
                mad r39.xyz, r16.wwww, r32.xyzx, r17.xyzx
                movc r10.yzw, r19.yyyy, r40.xxyz, r10.yyzw
                movc r17.xyz, r19.yyyy, r39.xyzx, r17.xyzx
                movc r30.xyz, r19.yyyy, r38.xyzx, r30.xyzx
              endif 
            endif 
          endif 
          break 
          case l(2)
          mov r38.xy, r34.zwzz
          mov r38.z, r35.w
          add r38.xyz, r38.xyzx, -v6.xyzx
          dp3 r16.w, r38.xyzx, r38.xyzx
          rsq r16.w, r16.w
          mul r39.xyz, r16.wwww, r38.xyzx
          dp3 r19.x, r5.xyzx, r39.xyzx
          mov_sat r19.y, r19.x
          lt r20.x, l(0.000000), r19.y
          if_nz r20.x
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r16.z, l(112), t12.yzwx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r16.z, l(128), t12.zxyw
            mov r41.xyz, r39.xyzx
            mov r41.w, r40.y
            dp4 r20.x, r41.xyzw, r18.xyzw
            lt r20.z, r20.x, l(1.000000)
            if_nz r20.z
              mov r42.xyz, l(1.000000,1.000000,1.000000,0)
              mov r20.z, l(0)
            else 
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r16.z, l(172), t12.yzwx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r16.z, l(188), t12.wxyz
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xyzw, r16.z, l(204), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r21.w, r16.z, l(236), t12.xxxx
              add r46.xyz, r31.yzwy, -v6.xyzx
              mul r25.w, r34.x, r34.x
              dp3 r26.w, r46.xyzx, r46.xyzx
              div r25.w, r25.w, r26.w
              min r25.w, r25.w, l(1.000000)
              mad_sat r33.xy, r20.xxxx, r33.xzxx, r33.ywyy
              mul r33.zw, r33.xxxy, r33.xxxy
              mad r33.xy, r33.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
              mul r33.xy, r33.xyxx, r33.zwzz
              mul r25.w, r25.w, r33.x
              mul r25.w, r33.y, r25.w
              mov r35.w, r36.x
              dp4 r33.x, r35.xyzw, r18.xyzw
              mov r46.xyz, r36.yzwy
              mov r46.w, r37.w
              dp4 r33.y, r46.xyzw, r18.xyzw
              div r21.xy, r33.xyxx, r20.xxxx
              lt r20.x, r43.w, l(0.00048828)
              if_nz r20.x
                mov r44.y, r45.x
                mad_sat r33.xy, |r21.xyxx|, r44.zwzz, r44.xyxx
                mul r33.zw, r33.xxxy, r33.xxxy
                mad r33.xy, r33.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
                mul r33.xy, r33.xyxx, r33.zwzz
                mul r20.x, r33.y, r33.x
              else 
                mov r43.w, r44.y
                mul_sat r33.xyzw, |r21.yyxx|, r43.xyzw
                log r33.xyzw, r33.xyzw
                mul r33.xyzw, r33.xyzw, r44.xxxx
                exp r33.xyzw, r33.xyzw
                add r33.xy, r33.zwzz, r33.xyxx
                log r33.xy, r33.xyxx
                mul r33.xy, r33.xyxx, r45.xxxx
                exp r33.xy, r33.xyxx
                mul r26.w, r33.x, r44.z
                mad r27.w, r44.w, r33.y, l(-1.000000)
                mad r26.w, r44.w, r33.y, -r26.w
                div_sat r26.w, r27.w, r26.w
                mul r27.w, r26.w, r26.w
                mad r26.w, r26.w, l(-2.000000), l(3.000000)
                mul r20.x, r26.w, r27.w
              endif 
              mul r20.z, r20.x, r25.w
              and r20.x, r21.w, l(255)
              if_nz r20.x
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyz, r16.z, l(220), t12.xyzx
                dp3 r21.w, r45.yzwy, r21.xyzx
                dp3 r21.x, r33.xyzx, r21.xyzx
                frc r33.xy, r21.wxww
                iadd r20.x, r20.x, l(-1)
                utof r33.z, r20.x
                sample_l_indexable(texture2darray)(float,float,float,float) r42.xyz, r33.xyzx, t20.xyzw, s2, l(0.000000)
              else 
                mov r42.xyz, l(1.000000,1.000000,1.000000,0)
              endif 
            endif 
            mov r31.yz, r32.yyzy
            mul r21.xyw, r42.xyxz, r31.xyxz
            lt r20.x, l(0.000000), r20.z
            if_nz r20.x
              ubfe r20.x, l(3), l(27), r32.w
              ine r20.x, r20.x, l(1)
              if_nz r20.x
                mad r20.x, |r19.x|, l(-0.200000), l(0.400000)
                mad r22.xyz, r5.xyzx, r20.xxxx, v6.xyzx
                mov r39.xyz, r37.xyzx
                dp4 r20.x, r39.xyzw, r22.xyzw
                dp4 r25.w, r41.xyzw, r22.xyzw
                ge r26.w, r25.w, r20.x
                if_nz r26.w
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.y, r16.z, l(144), t12.xxxx
                  mov r35.w, r36.x
                  dp4 r31.x, r35.xyzw, r22.xyzw
                  mov r37.xyz, r36.yzwy
                  dp4 r31.y, r37.xyzw, r22.xyzw
                  div r22.xy, r31.xyxx, r25.wwww
                  mad_sat r22.xy, r22.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  mad r22.xy, r22.xyxx, r40.zwzz, r40.xyxx
                  div r16.z, r20.x, r25.w
                  max r16.z, r16.z, l(0.00006104)
                  and r20.x, r32.w, l(0x0000ffff)
                  if_nz r8.w
                    utof r31.z, r20.x
                    mov r25.w, l(0)
                    mov r26.w, l(0)
                    loop 
                      ige r27.w, r26.w, l(8)
                      breakc_nz r27.w
                      dp2 r33.x, icb[r26.w + 0].xyxx, r25.xyxx
                      dp2 r33.y, icb[r26.w + 0].yxyy, r25.xzxx
                      mad r31.xy, r33.xyxx, r34.yyyy, r22.xyxx
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r27.w, r31.xyzx, t9.xxxx, s13, r16.z
                      mad r25.w, r27.w, l(0.125000), r25.w
                      iadd r26.w, r26.w, l(1)
                    endloop 
                  else 
                    utof r22.z, r20.x
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r25.w, r22.xyzx, t9.xxxx, s13, r16.z
                  endif 
                  mul r16.z, r25.w, r25.w
                  mul r16.z, r25.w, r16.z
                else 
                  mov r16.z, l(1.000000)
                endif 
              else 
                mov r16.z, l(1.000000)
              endif 
              mul r16.z, r16.z, r20.z
              lt r20.x, l(0.000000), r16.z
              if_nz r20.x
                mul r20.x, r3.w, r32.x
                mul r20.x, r19.y, r20.x
                ubfe r20.z, l(4), l(16), r32.w
                ult r22.x, l(0), r20.z
                and r22.x, r1.w, r22.x
                if_nz r22.x
                  iadd r20.z, r20.z, cb2[0].x
                  iadd r20.z, r20.z, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r22.x, r20.z, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r20.z, l(68), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r20.z, l(84), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r20.z, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r20.z, l(116), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r20.z, l(132), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r20.z, l(148), t12.xyzw
                  mad r22.y, |r19.x|, l(-0.200000), l(0.400000)
                  mad r23.xyz, r5.xyzx, r22.yyyy, v6.xyzx
                  dp4 r31.x, r31.xyzw, r23.xyzw
                  dp4 r31.y, r33.xyzw, r23.xyzw
                  dp4 r22.y, r34.xyzw, r23.xyzw
                  dp4 r22.z, r35.xyzw, r23.xyzw
                  lt r23.x, r22.z, r22.y
                  div r23.yz, r31.xxyx, r22.zzzz
                  mad r23.yz, r23.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
                  add r23.yz, r37.zzwz, r23.yyzy
                  mul r23.yz, r37.xxyx, r23.yyzy
                  div r31.xy, r22.xxxx, r36.xzxx
                  add r31.zw, -r31.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                  ge r31.zw, r23.yyyz, r31.zzzw
                  ge r31.xy, r31.xyxx, r23.yzyy
                  or r31.xy, r31.xyxx, r31.zwzz
                  or r26.w, r31.y, r31.x
                  or r23.x, r23.x, r26.w
                  if_z r23.x
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.x, r20.z, l(28), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xy, r20.z, l(164), t12.xyxx
                    mov_sat r23.yz, r23.yyzy
                    mad r32.xy, r23.yzyy, r36.xzxx, r36.ywyy
                    mul r20.z, r22.z, r31.y
                    mad r22.y, r31.x, r22.z, r22.y
                    div r20.z, r22.y, r20.z
                    max r20.z, r20.z, l(0.00006104)
                    and r22.y, r23.x, l(0x0000ffff)
                    if_nz r8.w
                      utof r23.z, r22.y
                      mov r22.z, l(0)
                      mov r26.w, l(0)
                      loop 
                        ige r27.w, r26.w, l(8)
                        breakc_nz r27.w
                        dp2 r31.x, icb[r26.w + 0].xyxx, r26.xyxx
                        dp2 r31.y, icb[r26.w + 0].yxyy, r26.xzxx
                        mad r23.xy, r31.xyxx, r22.xxxx, r32.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.x, r23.xyzx, t9.xxxx, s13, r20.z
                        mad r22.z, r23.x, l(0.125000), r22.z
                        iadd r26.w, r26.w, l(1)
                      endloop 
                    else 
                      utof r32.z, r22.y
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.z, r32.xyzx, t9.xxxx, s13, r20.z
                    endif 
                    mul r20.z, r22.z, r22.z
                    mul r20.z, r22.z, r20.z
                  else 
                    mov r20.z, l(1.000000)
                  endif 
                  mul r16.z, r16.z, r20.z
                else 
                  ubfe r20.z, l(4), l(20), r32.w
                  ult r22.x, l(0), r20.z
                  and r22.x, r3.x, r22.x
                  if_nz r22.x
                    iadd r20.z, r20.z, cb2[0].x
                    iadd r20.z, r20.z, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r22.x, r20.z, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r20.z, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r20.z, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r20.z, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r20.z, l(116), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r20.z, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r20.z, l(148), t12.xyzw
                    mad r22.y, |r19.x|, l(-0.200000), l(0.400000)
                    mad r24.xyz, r5.xyzx, r22.yyyy, v6.xyzx
                    dp4 r23.x, r31.xyzw, r24.xyzw
                    dp4 r23.y, r32.xyzw, r24.xyzw
                    dp4 r22.y, r33.xyzw, r24.xyzw
                    dp4 r23.z, r34.xyzw, r24.xyzw
                    lt r24.x, r23.z, r22.y
                    div r23.xy, r23.xyxx, r23.zzzz
                    mad r23.xy, r23.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r23.xy, r36.zwzz, r23.xyxx
                    mul r23.xy, r36.xyxx, r23.xyxx
                    div r24.yz, r22.xxxx, r35.xxzx
                    add r31.xy, -r24.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
                    ge r31.xy, r23.xyxx, r31.xyxx
                    ge r24.yz, r24.yyzy, r23.xxyx
                    or r24.yz, r24.yyzy, r31.xxyx
                    or r24.y, r24.z, r24.y
                    or r24.x, r24.x, r24.y
                    if_z r24.x
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r24.x, r20.z, l(28), t12.xxxx
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r24.yz, r20.z, l(164), t12.xxyx
                      mov_sat r23.xy, r23.xyxx
                      mad r31.xy, r23.xyxx, r35.xzxx, r35.ywyy
                      mul r20.z, r23.z, r24.z
                      mad r22.y, r24.y, r23.z, r22.y
                      div r20.z, r22.y, r20.z
                      max r20.z, r20.z, l(0.00006104)
                      and r22.y, r24.x, l(0x0000ffff)
                      if_nz r8.w
                        utof r23.z, r22.y
                        mov r24.xy, l(0,0,0,0)
                        loop 
                          ige r24.z, r24.y, l(8)
                          breakc_nz r24.z
                          dp2 r32.x, icb[r24.y + 0].xyxx, r27.xyxx
                          dp2 r32.y, icb[r24.y + 0].yxyy, r27.xzxx
                          mad r23.xy, r32.xyxx, r22.xxxx, r31.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.x, r23.xyzx, t9.xxxx, s13, r20.z
                          mad r24.x, r23.x, l(0.125000), r24.x
                          iadd r24.y, r24.y, l(1)
                        endloop 
                      else 
                        utof r31.z, r22.y
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.x, r31.xyzx, t9.xxxx, s13, r20.z
                      endif 
                      mul r20.z, r24.x, r24.x
                      mul r20.z, r24.x, r20.z
                    else 
                      mov r20.z, l(1.000000)
                    endif 
                    mul r16.z, r16.z, r20.z
                  endif 
                endif 
                mad r20.z, -r19.y, r3.y, l(1.000000)
                mul r20.z, r20.z, r20.z
                mad r20.z, -r20.z, l(0.620000), l(0.620000)
                add r20.z, -r19.y, r20.z
                mad r20.z, r4.w, r20.z, r19.y
                mul r20.z, r16.z, r20.z
                lt r19.x, l(0.000000), r19.x
                mad r23.xyz, r20.zzzz, r21.xywx, r10.yzwy
                mad r31.xyz, r38.xyzx, r16.wwww, r2.yzwy
                dp3 r16.w, r31.xyzx, r31.xyzx
                rsq r16.w, r16.w
                mul r31.xyz, r16.wwww, r31.xyzx
                dp3 r16.w, r31.xyzx, r2.yzwy
                dp3 r20.z, r5.xyzx, r31.xyzx
                mad r22.x, |r20.z|, r3.w, -|r20.z|
                mad r20.z, |r20.z|, r22.x, l(1.000000)
                mad r19.y, r19.y, r6.z, r6.w
                mul r20.z, r20.z, r20.z
                mul r19.y, r19.y, r20.z
                rcp r19.y, r19.y
                mul r19.y, r20.x, r19.y
                mul r16.z, r16.z, r19.y
                mul r16.z, r16.z, l(0.250000)
                mad r31.xyz, r16.zzzz, r21.xywx, r30.xyzx
                add_sat r16.w, -r16.w, l(1.000000)
                mul r19.y, r16.w, r16.w
                mul r19.y, r19.y, r19.y
                mul r16.w, r16.w, r19.y
                mul r16.z, r16.w, r16.z
                mad r21.xyw, r16.zzzz, r21.xyxw, r17.xyxz
                movc r10.yzw, r19.xxxx, r23.xxyz, r10.yyzw
                movc r17.xyz, r19.xxxx, r21.xywx, r17.xyzx
                movc r30.xyz, r19.xxxx, r31.xyzx, r30.xyzx
              endif 
            endif 
          endif 
          break 
          default 
          break 
        endswitch 
      endif 
    endif 
  endloop 
  mov r9.yzw, r10.yyzw
  mov r28.xyz, r17.xyzx
  mov r29.xyz, r30.xyzx
  iadd r7.z, r7.z, l(32)
endloop 
add r0.w, -r6.y, l(1.000000)
mul r1.w, r0.w, l(5.000000)
mad r2.y, r0.w, l(5.000000), l(-2.500000)
mul_sat r2.y, r2.y, l(0.400000)
mul r2.y, r2.y, l(100.000000)
mad r2.zw, -r0.wwww, l(0.000000, 0.000000, 10.000000, 5.000000), l(0.000000, 0.000000, 6.857410, 7.085000)
exp r2.z, r2.z
mul r2.z, r2.z, r6.x
mul r3.x, r0.w, r1.w
mad r2.w, -r3.x, l(2.015905), r2.w
exp r2.w, r2.w
mul r2.w, r2.w, r6.x
mul r2.zw, r2.zzzw, l(0.000000, 0.000000, 9.136810, 9.708090)
max r2.z, r2.w, r2.z
max r2.z, r2.z, l(1.268160)
mov r3.xy, l(0,0,0,0)
mov r7.w, l(0)
mov r8.yz, l(0,0,1.000000,0)
mov r10.xy, l(0,0,0,0)
mov r12.xy, l(0,0,0,0)
mov r13.xy, l(0,0,0,0)
mov r15.x, l(1.000000)
mov r16.xyzw, l(0,0,0,0)
mov r17.yzw, l(0,0,0,0)
mov r2.w, l(0)
mov r3.w, l(0)
loop 
  uge r4.w, r3.w, cb2[0].y
  breakc_nz r4.w
  ushr r3.z, r3.w, l(5)
  iadd r7.xyz, r3.xyzx, r14.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r3.z, r7.xyzw, t7.yzxw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r18.xyzw, r3.w, l(0), t15.wxyz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r19.xyzw, r3.w, l(16), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r20.xyzw, r3.w, l(32), t15.yxwz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r21.xyzw, r3.w, l(48), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r22.xyzw, r3.w, l(64), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r23.xyzw, r3.w, l(80), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r6.zw, r3.w, l(96), t15.xxxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r3.w, l(116), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r3.w, l(132), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r3.w, l(148), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r3.w, l(164), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r3.w, l(180), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r3.w, l(196), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xy, r3.w, l(212), t15.xyxx
  add r7.xyz, -r18.yzwy, v6.xyzx
  dp3 r4.w, r7.xyzx, r7.xyzx
  sqrt r4.w, r4.w
  ge r4.w, cb2[54].y, r4.w
  and r8.w, r24.y, l(0x0000ffff)
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r8.w, l(0), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r8.w, l(16), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r8.w, l(32), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r8.w, l(48), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r8.w, l(64), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r38.xyzw, r8.w, l(80), t16.xyzw
  dp3 r9.x, r33.xyzx, r7.xyzx
  add_sat r9.x, r33.w, r9.x
  dp3 r10.w, r34.xyzx, r7.xyzx
  add_sat r10.w, r34.w, r10.w
  mul r9.x, r9.x, r10.w
  dp3 r10.w, r35.xyzx, r7.xyzx
  add_sat r10.w, r35.w, r10.w
  mul r9.x, r9.x, r10.w
  dp3 r10.w, r36.xyzx, r7.xyzx
  add_sat r10.w, r36.w, r10.w
  mul r9.x, r9.x, r10.w
  dp3 r10.w, r37.xyzx, r7.xyzx
  add_sat r10.w, r37.w, r10.w
  mul r9.x, r9.x, r10.w
  dp3 r10.w, r38.xyzx, r7.xyzx
  add_sat r10.w, r38.w, r10.w
  mul r8.x, r9.x, r10.w
  and r9.x, r6.z, l(1)
  movc r15.zw, r9.xxxx, r8.xxxy, r8.zzzx
  mov r33.xy, r24.zwzz
  mov r33.z, r25.z
  dp3 r8.x, r11.xyzx, r33.xyzx
  dp3 r9.x, r7.xyzx, r33.xyzx
  add r9.x, -r25.w, r9.x
  ge r10.w, r9.x, l(0.000000)
  max r9.x, r2.y, |r9.x|
  movc r9.x, r10.w, r9.x, -r9.x
  max r8.x, -r8.x, l(0.00000010)
  div r8.x, r9.x, r8.x
  min r8.x, |r8.x|, l(131072.000000)
  mov r25.z, r26.z
  dp3 r9.x, r11.xyzx, r25.xyzx
  dp3 r10.w, r7.xyzx, r25.xyzx
  add r10.w, -r26.w, r10.w
  ge r12.w, r10.w, l(0.000000)
  max r10.w, r2.y, |r10.w|
  movc r10.w, r12.w, r10.w, -r10.w
  max r9.x, -r9.x, l(0.00000010)
  div r9.x, r10.w, r9.x
  min r8.x, r8.x, |r9.x|
  mov r26.z, r27.z
  dp3 r9.x, r11.xyzx, r26.xyzx
  dp3 r10.w, r7.xyzx, r26.xyzx
  add r10.w, -r27.w, r10.w
  ge r12.w, r10.w, l(0.000000)
  max r10.w, r2.y, |r10.w|
  movc r10.w, r12.w, r10.w, -r10.w
  max r9.x, -r9.x, l(0.00000010)
  div r9.x, r10.w, r9.x
  min r8.x, r8.x, |r9.x|
  mov r27.z, r30.z
  dp3 r9.x, r11.xyzx, r27.xyzx
  dp3 r10.w, r7.xyzx, r27.xyzx
  add r10.w, -r30.w, r10.w
  ge r12.w, r10.w, l(0.000000)
  max r10.w, r2.y, |r10.w|
  movc r10.w, r12.w, r10.w, -r10.w
  max r9.x, -r9.x, l(0.00000010)
  div r9.x, r10.w, r9.x
  min r8.x, r8.x, |r9.x|
  mov r30.z, r31.x
  dp3 r9.x, r11.xyzx, r30.xyzx
  dp3 r10.w, r7.xyzx, r30.xyzx
  add r10.w, -r31.y, r10.w
  ge r12.w, r10.w, l(0.000000)
  max r10.w, r2.y, |r10.w|
  movc r10.w, r12.w, r10.w, -r10.w
  max r9.x, -r9.x, l(0.00000010)
  div r9.x, r10.w, r9.x
  min r8.x, r8.x, |r9.x|
  mov r32.zw, r31.zzzw
  dp3 r9.x, r11.zxyz, r32.xzwx
  dp3 r10.w, r7.zxyz, r32.xzwx
  add r10.w, -r32.y, r10.w
  ge r12.w, r10.w, l(0.000000)
  max r10.w, r2.y, |r10.w|
  movc r10.w, r12.w, r10.w, -r10.w
  max r9.x, -r9.x, l(0.00000010)
  div r9.x, r10.w, r9.x
  min r8.x, r8.x, |r9.x|
  mov r25.x, r21.w
  mov r25.yz, r22.zzwz
  add r25.xyz, r7.xyzx, r25.xyzx
  mad r25.xyz, r11.xyzx, r8.xxxx, r25.xyzx
  dp3 r9.x, r25.xyzx, r25.xyzx
  sqrt r9.x, r9.x
  div r8.x, r8.x, r9.x
  add r8.x, r8.x, r8.x
  sqrt r8.x, r8.x
  mad r8.x, r0.w, l(5.000000), r8.x
  add r8.x, r8.x, l(-0.844800)
  mov r18.y, r19.z
  mov r18.z, r20.x
  dp3 r26.x, r25.xyzx, r18.xyzx
  mov r27.xy, r19.xwxx
  mov r27.z, r20.w
  dp3 r26.y, r25.xyzx, r27.xyzx
  mov r20.x, r19.y
  dp3 r26.z, r25.xyzx, r20.xyzx
  ubfe r19.xy, l(6, 9, 0, 0), l(25, 16, 0, 0), r24.yyyy
  utof r26.w, r19.y
  sample_l_indexable(texturecubearray)(float,float,float,float) r19.yzw, r26.xyzw, t8.wxyz, s2, r8.x
  and r24.yzw, r19.yyzw, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
  ieq r24.yzw, r24.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
  or r8.x, r24.z, r24.y
  or r8.x, r24.w, r8.x
  movc r19.yzw, r8.xxxx, l(0,1.000000,1.000000,0), r19.yyzw
  dp3 r25.x, r7.xyzx, r18.xyzx
  dp3 r25.y, r7.xyzx, r27.xyzx
  dp3 r25.z, r7.xyzx, r20.xyzx
  mad_sat r21.xyz, r25.xyzx, r21.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mov r22.z, r23.x
  mad r21.xyz, r21.xyzx, r22.xyzx, r23.yzwy
  dp3 r26.x, r5.xyzx, r18.xyzx
  dp3 r26.y, r5.xyzx, r27.xyzx
  dp3 r26.z, r5.xyzx, r20.xyzx
  lt r18.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r26.xyzx
  movc r10.z, r18.x, l(0), l(0.500000)
  add r20.xyz, r10.xyzx, r21.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r20.xyz, r20.xyzx, t17.xyzw, s4, l(0.000000)
  movc r12.z, r18.y, l(0), l(0.500000)
  add r18.xyw, r12.xyxz, r21.xyxz
  sample_l_indexable(texture3d)(float,float,float,float) r18.xyw, r18.xywx, t18.xywz, s4, l(0.000000)
  movc r13.z, r18.z, l(0), l(0.500000)
  add r21.xyz, r13.xyzx, r21.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r21.xyz, r21.xyzx, t19.xyzw, s4, l(0.000000)
  mul r22.xyz, r26.xyzx, r26.xyzx
  sample_l_indexable(texturecubearray)(float,float,float,float) r23.xyz, r26.xyzw, t8.xyzw, s2, l(6.000000)
  and r24.yzw, r23.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
  ieq r24.yzw, r24.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
  or r8.x, r24.z, r24.y
  or r8.x, r24.w, r8.x
  movc r23.xyz, r8.xxxx, l(1.000000,1.000000,0,0), r23.xyzx
  mov r25.xyzw, r16.xyzw
  mov r24.yzw, r17.yyzw
  mov r8.x, r2.w
  mov r9.x, r3.z
  loop 
    breakc_z r9.x
    firstbit_lo r10.z, r9.x
    ishl r10.z, l(1), r10.z
    and r10.w, r9.x, r10.z
    if_nz r10.w
      not r10.z, r10.z
      and r9.x, r9.x, r10.z
      if_nz r4.w
        mov r10.z, r6.z
        mov r26.xy, r15.zwzz
        mov r10.w, l(1)
        loop 
          ige r12.z, r10.w, r19.x
          breakc_nz r12.z
          iadd r12.z, r8.w, r10.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r12.z, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r12.z, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r12.z, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r12.z, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r12.z, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r12.z, l(80), t16.xyzw
          dp3 r12.z, r27.xyzx, r7.xyzx
          add_sat r12.z, r27.w, r12.z
          mul r12.z, r12.z, r26.x
          dp3 r12.w, r30.xyzx, r7.xyzx
          add_sat r12.w, r30.w, r12.w
          mul r12.z, r12.w, r12.z
          dp3 r12.w, r31.xyzx, r7.xyzx
          add_sat r12.w, r31.w, r12.w
          mul r12.z, r12.w, r12.z
          dp3 r12.w, r32.xyzx, r7.xyzx
          add_sat r12.w, r32.w, r12.w
          mul r12.z, r12.w, r12.z
          dp3 r12.w, r33.xyzx, r7.xyzx
          add_sat r12.w, r33.w, r12.w
          mul r12.z, r12.w, r12.z
          dp3 r12.w, r34.xyzx, r7.xyzx
          add_sat r12.w, r34.w, r12.w
          mul r26.x, r12.w, r12.z
          ushr r13.z, r10.z, l(2)
          ubfe r13.w, l(1), l(2), r10.z
          and r14.w, r13.z, l(2)
          max r18.z, r26.x, r26.y
          mad r12.z, -r12.z, r12.w, l(1.000000)
          mul r12.z, r12.z, r26.y
          movc r15.y, r14.w, r12.z, r18.z
          movc r26.xy, r13.wwww, r26.xyxx, r15.xyxx
          iadd r10.w, r10.w, l(1)
          mov r10.z, r13.z
        endloop 
        mov_sat r26.y, r26.y
        mul r10.z, r6.w, r26.y
        lt r10.w, l(0.000000), r10.z
        if_nz r10.w
          mad r27.z, r26.y, r6.w, r24.w
          mul r10.z, r24.x, r10.z
          mul r26.xzw, r10.zzzz, r22.xxyz
          mul r30.xyz, r18.xywx, r26.zzzz
          mad r30.xyz, r20.xyzx, r26.xxxx, r30.xyzx
          mad r26.xzw, r21.xxyz, r26.wwww, r30.xxyz
          mul r30.xyz, r23.xyzx, r26.xzwx
          dp3 r10.w, r30.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r30.xyz, r26.xzwx, r23.xyzx, r25.xyzx
          mul r12.z, r2.z, r10.w
          mul r26.xzw, r10.zzzz, r19.yyzw
          dp3 r10.z, r26.xzwx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r10.z, r2.z, r10.w, r10.z
          div r10.z, r12.z, r10.z
          mov r31.x, r25.w
          mov r31.yz, r24.yyzy
          mad r27.xyw, r26.zwzx, r10.zzzz, r31.yzyx
          mov r30.w, r27.w
        else 
          mov r30.xyzw, r25.xyzw
          mov r27.xyz, r24.yzwy
        endif 
        mov r8.x, l(-1)
        mov r25.xyzw, r30.xyzw
        mov r24.yzw, r27.xxyz
        break 
      endif 
    endif 
  endloop 
  if_nz r8.x
    mov r16.xyzw, r25.xyzw
    mov r17.yzw, r24.yyzw
    mov r2.w, l(-1)
    break 
  endif 
  iadd r3.w, r3.w, l(32)
  mov r16.xyzw, r25.xyzw
  mov r17.yzw, r24.yyzw
  mov r2.w, r8.x
endloop 
if_z r2.w
  iadd r2.w, cb2[0].y, -cb2[58].x
  and r3.x, r2.w, l(-32)
  iadd r3.y, r2.w, -r3.x
  and r3.z, cb2[0].y, l(-32)
  iadd r3.w, -r3.z, cb2[0].y
  mov r7.xy, l(0,0,0,0)
  mov r8.w, l(0)
  mov r10.yz, l(0,0,1.000000,0)
  mov r12.xy, l(0,0,0,0)
  mov r13.x, l(1.000000)
  mov r15.xy, l(0,0,0,0)
  mov r18.xy, l(0,0,0,0)
  mov r19.xyzw, r16.xyzw
  mov r20.yzw, r17.yyzw
  mov r4.w, r3.x
  loop 
    uge r6.z, r4.w, cb2[0].y
    breakc_nz r6.z
    ushr r7.z, r4.w, l(5)
    iadd r8.xyz, r7.xyzx, r14.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r6.z, r8.xyzw, t7.yzxw
    ieq r6.w, r3.x, r4.w
    bfi r7.z, r3.y, l(0), l(0), r6.z
    movc r6.z, r6.w, r7.z, r6.z
    ieq r6.w, r3.z, r4.w
    ubfe r7.z, r3.w, l(0), r6.z
    movc r6.z, r6.w, r7.z, r6.z
    iadd r6.w, r4.w, cb2[0].x
    mov r21.xyzw, r19.xyzw
    mov r22.xyz, r20.yzwy
    mov r7.z, r6.z
    loop 
      breakc_z r7.z
      firstbit_lo r7.w, r7.z
      ishl r8.x, l(1), r7.w
      and r8.y, r7.z, r8.x
      if_nz r8.y
        xor r7.z, r7.z, r8.x
        iadd r8.x, r6.w, r7.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r23.xyzw, r8.x, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r8.xy, r8.x, l(16), t11.xyxx
        add r23.xyz, r23.xyzx, -v6.xyzx
        mov r8.z, r23.w
        lt r8.xyz, |r23.xyzx|, r8.zxyz
        and r8.x, r8.y, r8.x
        and r8.x, r8.z, r8.x
        if_nz r8.x
          iadd r7.w, r4.w, r7.w
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r23.xyzw, r7.w, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r8.xy, r7.w, l(96), t15.xyxx
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r7.w, l(116), t15.zwxy
          add r25.xyz, -r23.yzwy, v6.xyzx
          and r8.z, r24.w, l(0x0000ffff)
          ubfe r9.x, l(6), l(25), r24.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r26.xyzw, r8.z, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r8.z, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r8.z, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r8.z, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r8.z, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r8.z, l(80), t16.xyzw
          dp3 r10.w, r26.xyzx, r25.xyzx
          add_sat r10.w, r26.w, r10.w
          dp3 r12.w, r27.xyzx, r25.xyzx
          add_sat r12.w, r27.w, r12.w
          mul r10.w, r10.w, r12.w
          dp3 r12.w, r30.xyzx, r25.xyzx
          add_sat r12.w, r30.w, r12.w
          mul r10.w, r10.w, r12.w
          dp3 r12.w, r31.xyzx, r25.xyzx
          add_sat r12.w, r31.w, r12.w
          mul r10.w, r10.w, r12.w
          dp3 r12.w, r32.xyzx, r25.xyzx
          add_sat r12.w, r32.w, r12.w
          mul r10.w, r10.w, r12.w
          dp3 r12.w, r33.xyzx, r25.xyzx
          add_sat r12.w, r33.w, r12.w
          mul r10.x, r10.w, r12.w
          and r10.w, r8.x, l(1)
          movc r10.xw, r10.wwww, r10.xxxy, r10.zzzx
          mov r12.w, r8.x
          mov r26.xy, r10.xwxx
          mov r13.z, l(1)
          loop 
            ige r13.w, r13.z, r9.x
            breakc_nz r13.w
            iadd r13.w, r8.z, r13.z
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r13.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r13.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r13.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r13.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r13.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r13.w, l(80), t16.xyzw
            dp3 r13.w, r27.xyzx, r25.xyzx
            add_sat r13.w, r27.w, r13.w
            mul r13.w, r13.w, r26.x
            dp3 r14.w, r30.xyzx, r25.xyzx
            add_sat r14.w, r30.w, r14.w
            mul r13.w, r13.w, r14.w
            dp3 r14.w, r31.xyzx, r25.xyzx
            add_sat r14.w, r31.w, r14.w
            mul r13.w, r13.w, r14.w
            dp3 r14.w, r32.xyzx, r25.xyzx
            add_sat r14.w, r32.w, r14.w
            mul r13.w, r13.w, r14.w
            dp3 r14.w, r33.xyzx, r25.xyzx
            add_sat r14.w, r33.w, r14.w
            mul r13.w, r13.w, r14.w
            dp3 r14.w, r34.xyzx, r25.xyzx
            add_sat r14.w, r34.w, r14.w
            mul r26.x, r13.w, r14.w
            ushr r15.w, r12.w, l(2)
            ubfe r18.w, l(1), l(2), r12.w
            and r23.w, r15.w, l(2)
            max r25.w, r26.x, r26.y
            mad r13.w, -r13.w, r14.w, l(1.000000)
            mul r13.w, r13.w, r26.y
            movc r13.y, r23.w, r13.w, r25.w
            movc r26.xy, r18.wwww, r26.xyxx, r13.xyxx
            iadd r13.z, r13.z, l(1)
            mov r12.w, r15.w
          endloop 
          mov_sat r26.y, r26.y
          mul r8.x, r8.y, r26.y
          lt r8.z, l(0.000000), r8.x
          if_nz r8.z
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r7.w, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r7.w, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r7.w, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r7.w, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r7.w, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r7.w, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r7.w, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r7.w, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r7.w, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r7.w, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xy, r7.w, l(212), t15.xyxx
            mad r22.z, r26.y, r8.y, r22.z
            mul r7.w, r24.z, r8.x
            mov r24.z, r34.z
            dp3 r8.x, r11.xyzx, r24.xyzx
            dp3 r8.y, r25.xyzx, r24.xyzx
            add r8.y, -r34.w, r8.y
            ge r8.z, r8.y, l(0.000000)
            max r8.y, r2.y, |r8.y|
            movc r8.y, r8.z, r8.y, -r8.y
            max r8.x, -r8.x, l(0.00000010)
            div r8.x, r8.y, r8.x
            min r8.x, |r8.x|, l(131072.000000)
            mov r34.z, r35.z
            dp3 r8.y, r11.xyzx, r34.xyzx
            dp3 r8.z, r25.xyzx, r34.xyzx
            add r8.z, -r35.w, r8.z
            ge r9.x, r8.z, l(0.000000)
            max r8.z, r2.y, |r8.z|
            movc r8.z, r9.x, r8.z, -r8.z
            max r8.y, -r8.y, l(0.00000010)
            div r8.y, r8.z, r8.y
            min r8.x, |r8.y|, r8.x
            mov r35.z, r36.z
            dp3 r8.y, r11.xyzx, r35.xyzx
            dp3 r8.z, r25.xyzx, r35.xyzx
            add r8.z, -r36.w, r8.z
            ge r9.x, r8.z, l(0.000000)
            max r8.z, r2.y, |r8.z|
            movc r8.z, r9.x, r8.z, -r8.z
            max r8.y, -r8.y, l(0.00000010)
            div r8.y, r8.z, r8.y
            min r8.x, |r8.y|, r8.x
            mov r36.z, r37.z
            dp3 r8.y, r11.xyzx, r36.xyzx
            dp3 r8.z, r25.xyzx, r36.xyzx
            add r8.z, -r37.w, r8.z
            ge r9.x, r8.z, l(0.000000)
            max r8.z, r2.y, |r8.z|
            movc r8.z, r9.x, r8.z, -r8.z
            max r8.y, -r8.y, l(0.00000010)
            div r8.y, r8.z, r8.y
            min r8.x, |r8.y|, r8.x
            mov r37.z, r38.x
            dp3 r8.y, r11.xyzx, r37.xyzx
            dp3 r8.z, r25.xyzx, r37.xyzx
            add r8.z, -r38.y, r8.z
            ge r9.x, r8.z, l(0.000000)
            max r8.z, r2.y, |r8.z|
            movc r8.z, r9.x, r8.z, -r8.z
            max r8.y, -r8.y, l(0.00000010)
            div r8.y, r8.z, r8.y
            min r8.x, |r8.y|, r8.x
            mov r39.zw, r38.zzzw
            dp3 r8.y, r11.zxyz, r39.xzwx
            dp3 r8.z, r25.zxyz, r39.xzwx
            add r8.z, -r39.y, r8.z
            ge r9.x, r8.z, l(0.000000)
            max r8.z, r2.y, |r8.z|
            movc r8.z, r9.x, r8.z, -r8.z
            max r8.y, -r8.y, l(0.00000010)
            div r8.y, r8.z, r8.y
            min r8.x, |r8.y|, r8.x
            mov r24.x, r31.w
            mov r24.yz, r32.zzwz
            add r13.yzw, r25.xxyz, r24.xxyz
            mad r13.yzw, r11.xxyz, r8.xxxx, r13.yyzw
            dp3 r8.y, r13.yzwy, r13.yzwy
            sqrt r8.y, r8.y
            div r8.x, r8.x, r8.y
            add r8.x, r8.x, r8.x
            sqrt r8.x, r8.x
            mad r8.x, r0.w, l(5.000000), r8.x
            add r8.x, r8.x, l(-0.844800)
            mov r23.y, r27.z
            mov r23.z, r30.x
            dp3 r34.x, r13.yzwy, r23.xyzx
            mov r24.xy, r27.xwxx
            mov r24.z, r30.w
            dp3 r34.y, r13.yzwy, r24.xyzx
            mov r30.x, r27.y
            dp3 r34.z, r13.yzwy, r30.xyzx
            ubfe r8.y, l(9), l(16), r24.w
            utof r34.w, r8.y
            sample_l_indexable(texturecubearray)(float,float,float,float) r8.xyz, r34.xyzw, t8.xyzw, s2, r8.x
            and r13.yzw, r8.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
            ieq r13.yzw, r13.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
            or r9.x, r13.z, r13.y
            or r9.x, r13.w, r9.x
            movc r8.xyz, r9.xxxx, l(1.000000,1.000000,0,0), r8.xyzx
            dp3 r27.x, r25.xyzx, r23.xyzx
            dp3 r27.y, r25.xyzx, r24.xyzx
            dp3 r27.z, r25.xyzx, r30.xyzx
            mad_sat r13.yzw, r27.xxyz, r31.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
            mov r32.z, r33.x
            mad r13.yzw, r13.yyzw, r32.xxyz, r33.yyzw
            dp3 r34.x, r5.xyzx, r23.xyzx
            dp3 r34.y, r5.xyzx, r24.xyzx
            dp3 r34.z, r5.xyzx, r30.xyzx
            lt r23.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r34.xyzx
            movc r12.z, r23.x, l(0), l(0.500000)
            add r24.xyz, r12.xyzx, r13.yzwy
            sample_l_indexable(texture3d)(float,float,float,float) r24.xyz, r24.xyzx, t17.xyzw, s4, l(0.000000)
            mul r25.xyz, r34.xyzx, r34.xyzx
            mul r25.xyz, r7.wwww, r25.xyzx
            movc r15.z, r23.y, l(0), l(0.500000)
            add r23.xyw, r13.yzyw, r15.xyxz
            sample_l_indexable(texture3d)(float,float,float,float) r23.xyw, r23.xywx, t18.xywz, s4, l(0.000000)
            mul r23.xyw, r25.yyyy, r23.xyxw
            mad r23.xyw, r24.xyxz, r25.xxxx, r23.xyxw
            movc r18.z, r23.z, l(0), l(0.500000)
            add r13.yzw, r13.yyzw, r18.xxyz
            sample_l_indexable(texture3d)(float,float,float,float) r13.yzw, r13.yzwy, t19.wxyz, s4, l(0.000000)
            mad r13.yzw, r13.yyzw, r25.zzzz, r23.xxyw
            sample_l_indexable(texturecubearray)(float,float,float,float) r23.xyz, r34.xyzw, t8.xyzw, s2, l(6.000000)
            and r24.xyz, r23.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
            ieq r24.xyz, r24.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
            or r9.x, r24.y, r24.x
            or r9.x, r24.z, r9.x
            movc r23.xyz, r9.xxxx, l(1.000000,1.000000,0,0), r23.xyzx
            mul r24.xyz, r13.yzwy, r23.xyzx
            dp3 r9.x, r24.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r21.xyz, r13.yzwy, r23.xyzx, r21.xyzx
            mul r10.x, r2.z, r9.x
            mul r8.xyz, r7.wwww, r8.xyzx
            dp3 r7.w, r8.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r7.w, r2.z, r9.x, r7.w
            div r7.w, r10.x, r7.w
            mov r23.x, r21.w
            mov r23.yz, r22.xxyx
            mad r22.xyw, r8.yzyx, r7.wwww, r23.yzyx
            mov r21.w, r22.w
          endif 
        endif 
      endif 
    endloop 
    mov r19.xyzw, r21.xyzw
    mov r20.yzw, r22.xxyz
    iadd r4.w, r4.w, l(32)
  endloop 
  lt r3.z, r20.w, l(1.000000)
  if_nz r3.z
    mov r7.xy, l(0,0,0,0)
    mov r8.w, l(0)
    mov r10.yz, l(0,0,1.000000,0)
    mov r12.xy, l(0,0,0,0)
    mov r13.x, l(1.000000)
    mov r15.xy, l(0,0,0,0)
    mov r18.xy, l(0,0,0,0)
    mov r21.x, r19.w
    mov r21.yzw, r20.yyzw
    mov r22.xyz, r19.xyzx
    mov r3.z, r20.w
    mov r3.w, l(0)
    loop 
      uge r4.w, r3.w, r2.w
      breakc_nz r4.w
      ushr r7.z, r3.w, l(5)
      iadd r8.xyz, r7.xyzx, r14.xyzx
      ld_indexable(texture2darray)(uint,uint,uint,uint) r4.w, r8.xyzw, t7.yzwx
      ieq r6.z, r3.x, r3.w
      ubfe r6.w, r3.y, l(0), r4.w
      movc r4.w, r6.z, r6.w, r4.w
      iadd r6.z, r3.w, cb2[0].x
      mov r23.xyzw, r21.xyzw
      mov r8.xyz, r22.xyzx
      mov r6.w, r3.z
      mov r7.z, r4.w
      loop 
        breakc_z r7.z
        firstbit_lo r7.w, r7.z
        ishl r9.x, l(1), r7.w
        and r10.w, r7.z, r9.x
        if_nz r10.w
          xor r7.z, r7.z, r9.x
          iadd r9.x, r6.z, r7.w
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r24.xyzw, r9.x, l(0), t11.xyzw
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r25.xy, r9.x, l(16), t11.xyxx
          add r24.xyz, r24.xyzx, -v6.xyzx
          mov r25.z, r24.w
          lt r24.xyz, |r24.xyzx|, r25.zxyz
          and r9.x, r24.y, r24.x
          and r9.x, r24.z, r9.x
          if_nz r9.x
            iadd r7.w, r3.w, r7.w
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r7.w, l(0), t15.wxyz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r13.zw, r7.w, l(96), t15.xxxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r7.w, l(116), t15.zwxy
            add r26.xyz, -r24.yzwy, v6.xyzx
            and r9.x, r25.w, l(0x0000ffff)
            ubfe r10.w, l(6), l(25), r25.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r9.x, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r9.x, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r9.x, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r9.x, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r9.x, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r9.x, l(80), t16.xyzw
            dp3 r12.w, r27.xyzx, r26.xyzx
            add_sat r12.w, r27.w, r12.w
            dp3 r14.w, r30.xyzx, r26.xyzx
            add_sat r14.w, r30.w, r14.w
            mul r12.w, r12.w, r14.w
            dp3 r14.w, r31.xyzx, r26.xyzx
            add_sat r14.w, r31.w, r14.w
            mul r12.w, r12.w, r14.w
            dp3 r14.w, r32.xyzx, r26.xyzx
            add_sat r14.w, r32.w, r14.w
            mul r12.w, r12.w, r14.w
            dp3 r14.w, r33.xyzx, r26.xyzx
            add_sat r14.w, r33.w, r14.w
            mul r12.w, r12.w, r14.w
            dp3 r14.w, r34.xyzx, r26.xyzx
            add_sat r14.w, r34.w, r14.w
            mul r10.x, r12.w, r14.w
            and r12.w, r13.z, l(1)
            movc r27.xy, r12.wwww, r10.xyxx, r10.zxzz
            mov r10.x, r13.z
            mov r30.xy, r27.xyxx
            mov r12.w, l(1)
            loop 
              ige r14.w, r12.w, r10.w
              breakc_nz r14.w
              iadd r14.w, r9.x, r12.w
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r14.w, l(0), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r14.w, l(16), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r14.w, l(32), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r14.w, l(48), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r14.w, l(64), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r14.w, l(80), t16.xyzw
              dp3 r14.w, r31.xyzx, r26.xyzx
              add_sat r14.w, r31.w, r14.w
              mul r14.w, r14.w, r30.x
              dp3 r15.w, r32.xyzx, r26.xyzx
              add_sat r15.w, r32.w, r15.w
              mul r14.w, r14.w, r15.w
              dp3 r15.w, r33.xyzx, r26.xyzx
              add_sat r15.w, r33.w, r15.w
              mul r14.w, r14.w, r15.w
              dp3 r15.w, r34.xyzx, r26.xyzx
              add_sat r15.w, r34.w, r15.w
              mul r14.w, r14.w, r15.w
              dp3 r15.w, r35.xyzx, r26.xyzx
              add_sat r15.w, r35.w, r15.w
              mul r14.w, r14.w, r15.w
              dp3 r15.w, r36.xyzx, r26.xyzx
              add_sat r15.w, r36.w, r15.w
              mul r30.x, r14.w, r15.w
              ushr r17.w, r10.x, l(2)
              ubfe r18.w, l(1), l(2), r10.x
              and r22.w, r17.w, l(2)
              max r24.w, r30.x, r30.y
              mad r14.w, -r14.w, r15.w, l(1.000000)
              mul r14.w, r14.w, r30.y
              movc r13.y, r22.w, r14.w, r24.w
              movc r30.xy, r18.wwww, r30.xyxx, r13.xyxx
              iadd r12.w, r12.w, l(1)
              mov r10.x, r17.w
            endloop 
            add_sat r9.x, -r6.w, r30.y
            mul r10.x, r13.w, r9.x
            lt r10.w, l(0.000000), r10.x
            if_nz r10.w
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r7.w, l(16), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r7.w, l(32), t15.yxwz
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r7.w, l(48), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r7.w, l(64), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r7.w, l(80), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r7.w, l(132), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r7.w, l(148), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r7.w, l(164), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r7.w, l(180), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xyzw, r7.w, l(196), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r40.xy, r7.w, l(212), t15.xyxx
              mad r23.w, r9.x, r13.w, r23.w
              mul r7.w, r25.z, r10.x
              mov r25.z, r35.z
              dp3 r9.x, r11.xyzx, r25.xyzx
              dp3 r10.x, r26.xyzx, r25.xyzx
              add r10.x, -r35.w, r10.x
              ge r10.w, r10.x, l(0.000000)
              max r10.x, r2.y, |r10.x|
              movc r10.x, r10.w, r10.x, -r10.x
              max r9.x, -r9.x, l(0.00000010)
              div r9.x, r10.x, r9.x
              min r9.x, |r9.x|, l(131072.000000)
              mov r35.z, r36.z
              dp3 r10.x, r11.xyzx, r35.xyzx
              dp3 r10.w, r26.xyzx, r35.xyzx
              add r10.w, -r36.w, r10.w
              ge r12.w, r10.w, l(0.000000)
              max r10.w, r2.y, |r10.w|
              movc r10.w, r12.w, r10.w, -r10.w
              max r10.x, -r10.x, l(0.00000010)
              div r10.x, r10.w, r10.x
              min r9.x, r9.x, |r10.x|
              mov r36.z, r37.z
              dp3 r10.x, r11.xyzx, r36.xyzx
              dp3 r10.w, r26.xyzx, r36.xyzx
              add r10.w, -r37.w, r10.w
              ge r12.w, r10.w, l(0.000000)
              max r10.w, r2.y, |r10.w|
              movc r10.w, r12.w, r10.w, -r10.w
              max r10.x, -r10.x, l(0.00000010)
              div r10.x, r10.w, r10.x
              min r9.x, r9.x, |r10.x|
              mov r37.z, r38.z
              dp3 r10.x, r11.xyzx, r37.xyzx
              dp3 r10.w, r26.xyzx, r37.xyzx
              add r10.w, -r38.w, r10.w
              ge r12.w, r10.w, l(0.000000)
              max r10.w, r2.y, |r10.w|
              movc r10.w, r12.w, r10.w, -r10.w
              max r10.x, -r10.x, l(0.00000010)
              div r10.x, r10.w, r10.x
              min r9.x, r9.x, |r10.x|
              mov r38.z, r39.x
              dp3 r10.x, r11.xyzx, r38.xyzx
              dp3 r10.w, r26.xyzx, r38.xyzx
              add r10.w, -r39.y, r10.w
              ge r12.w, r10.w, l(0.000000)
              max r10.w, r2.y, |r10.w|
              movc r10.w, r12.w, r10.w, -r10.w
              max r10.x, -r10.x, l(0.00000010)
              div r10.x, r10.w, r10.x
              min r9.x, r9.x, |r10.x|
              mov r40.zw, r39.zzzw
              dp3 r10.x, r11.zxyz, r40.xzwx
              dp3 r10.w, r26.zxyz, r40.xzwx
              add r10.w, -r40.y, r10.w
              ge r12.w, r10.w, l(0.000000)
              max r10.w, r2.y, |r10.w|
              movc r10.w, r12.w, r10.w, -r10.w
              max r10.x, -r10.x, l(0.00000010)
              div r10.x, r10.w, r10.x
              min r9.x, r9.x, |r10.x|
              mov r25.x, r32.w
              mov r25.yz, r33.zzwz
              add r13.yzw, r26.xxyz, r25.xxyz
              mad r13.yzw, r11.xxyz, r9.xxxx, r13.yyzw
              dp3 r10.x, r13.yzwy, r13.yzwy
              sqrt r10.x, r10.x
              div r9.x, r9.x, r10.x
              add r9.x, r9.x, r9.x
              sqrt r9.x, r9.x
              mad r9.x, r0.w, l(5.000000), r9.x
              add r9.x, r9.x, l(-0.844800)
              mov r24.y, r27.z
              mov r24.z, r31.x
              dp3 r35.x, r13.yzwy, r24.xyzx
              mov r25.xy, r27.xwxx
              mov r25.z, r31.w
              dp3 r35.y, r13.yzwy, r25.xyzx
              mov r31.x, r27.y
              dp3 r35.z, r13.yzwy, r31.xyzx
              ubfe r10.x, l(9), l(16), r25.w
              utof r35.w, r10.x
              sample_l_indexable(texturecubearray)(float,float,float,float) r13.yzw, r35.xyzw, t8.wxyz, s2, r9.x
              and r27.xyz, r13.yzwy, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
              ieq r27.xyz, r27.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
              or r9.x, r27.y, r27.x
              or r9.x, r27.z, r9.x
              movc r13.yzw, r9.xxxx, l(0,1.000000,1.000000,0), r13.yyzw
              dp3 r27.x, r26.xyzx, r24.xyzx
              dp3 r27.y, r26.xyzx, r25.xyzx
              dp3 r27.z, r26.xyzx, r31.xyzx
              mad_sat r26.xyz, r27.xyzx, r32.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
              mov r33.z, r34.x
              mad r26.xyz, r26.xyzx, r33.xyzx, r34.yzwy
              dp3 r35.x, r5.xyzx, r24.xyzx
              dp3 r35.y, r5.xyzx, r25.xyzx
              dp3 r35.z, r5.xyzx, r31.xyzx
              lt r24.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r35.xyzx
              movc r12.z, r24.x, l(0), l(0.500000)
              add r25.xyz, r12.xyzx, r26.xyzx
              sample_l_indexable(texture3d)(float,float,float,float) r25.xyz, r25.xyzx, t17.xyzw, s4, l(0.000000)
              mul r27.xyz, r35.xyzx, r35.xyzx
              mul r27.xyz, r7.wwww, r27.xyzx
              movc r15.z, r24.y, l(0), l(0.500000)
              add r24.xyw, r15.xyxz, r26.xyxz
              sample_l_indexable(texture3d)(float,float,float,float) r24.xyw, r24.xywx, t18.xywz, s4, l(0.000000)
              mul r24.xyw, r27.yyyy, r24.xyxw
              mad r24.xyw, r25.xyxz, r27.xxxx, r24.xyxw
              movc r18.z, r24.z, l(0), l(0.500000)
              add r25.xyz, r18.xyzx, r26.xyzx
              sample_l_indexable(texture3d)(float,float,float,float) r25.xyz, r25.xyzx, t19.xyzw, s4, l(0.000000)
              mad r24.xyz, r25.xyzx, r27.zzzz, r24.xywx
              sample_l_indexable(texturecubearray)(float,float,float,float) r25.xyz, r35.xyzw, t8.xyzw, s2, l(6.000000)
              and r26.xyz, r25.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
              ieq r26.xyz, r26.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
              or r9.x, r26.y, r26.x
              or r9.x, r26.z, r9.x
              movc r25.xyz, r9.xxxx, l(1.000000,1.000000,0,0), r25.xyzx
              mul r26.xyz, r24.xyzx, r25.xyzx
              dp3 r9.x, r26.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
              mad r8.xyz, r24.xyzx, r25.xyzx, r8.xyzx
              mul r10.x, r2.z, r9.x
              mul r13.yzw, r7.wwww, r13.yyzw
              dp3 r7.w, r13.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
              mad r7.w, r2.z, r9.x, r7.w
              div r7.w, r10.x, r7.w
              mad r23.xyz, r13.yzwy, r7.wwww, r23.xyzx
            endif 
          endif 
        endif 
      endloop 
      mov r21.xyzw, r23.xyzw
      mov r22.xyz, r8.xyzx
      iadd r3.w, r3.w, l(32)
    endloop 
    mov r20.xyzw, r21.zxyw
    mov r19.xyz, r22.xyzx
    mov r20.xyzw, r20.yzxw
  else 
    mov r20.x, r19.w
  endif 
  max r0.w, r20.w, l(1.000000)
  rcp r0.w, r0.w
  mov_sat r20.w, r20.w
  mul r16.xyz, r0.wwww, r19.xyzx
  mul r17.xyz, r0.wwww, r20.xyzx
  lt r2.y, r20.w, l(0.990000)
  if_nz r2.y
    add r2.y, -r20.w, l(1.000000)
    mul r2.z, r2.y, cb2[19].x
    add r3.xyz, v6.xyzx, -cb2[35].xyzx
    mul r7.x, r3.x, cb2[35].w
    mul r7.yz, r3.yyzy, cb2[36].xxyx
    add_sat r3.xyz, r7.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    mul r7.xy, r3.xyxx, cb2[36].zwzz
    mul r7.z, r3.z, cb2[37].x
    add r3.xyz, r7.xyzx, cb2[37].yzwy
    lt r7.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r5.xyzx
    movc r7.xyz, r7.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
    mov r7.w, l(0)
    add r8.xyz, r3.xyzx, r7.wwxw
    sample_l_indexable(texture3d)(float,float,float,float) r8.xyz, r8.xyzx, t17.xyzw, s4, l(0.000000)
    mul r10.xyz, r5.xyzx, r5.xyzx
    mul r10.xyz, r2.zzzz, r10.xyzx
    add r12.xyz, r3.xyzx, r7.wwyw
    sample_l_indexable(texture3d)(float,float,float,float) r12.xyz, r12.xyzx, t18.xyzw, s4, l(0.000000)
    mul r12.xyz, r10.yyyy, r12.xyzx
    mad r8.xyz, r8.xyzx, r10.xxxx, r12.xyzx
    add r3.xyz, r3.xyzx, r7.wwzw
    sample_l_indexable(texture3d)(float,float,float,float) r3.xyz, r3.xyzx, t19.xyzw, s4, l(0.000000)
    mad r3.xyz, r3.xyzx, r10.zzzz, r8.xyzx
    mov r5.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r5.xyz, r5.xyzw, t8.xyzw, s2, l(6.000000)
    mul r3.xyz, r3.xyzx, r5.xyzx
    dp3 r2.z, r3.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
    mad r16.xyz, r19.xyzx, r0.wwww, r3.xyzx
    mov r11.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r3.xyz, r11.xyzw, t8.xyzw, s2, r1.w
    mad r0.w, cb2[19].x, r2.y, -r2.z
    mad r0.w, r6.y, r0.w, r2.z
    mad r17.xyz, r3.xyzx, r0.wwww, r17.xyzx
  endif 
else 
  mov r17.x, r16.w
endif 
mad r2.yzw, r16.xxyz, r2.xxxx, r9.yyzw
mad r3.xy, r6.xyxx, l(0.984375, 0.984375, 0.000000, 0.000000), l(0.00781250, 0.00781250, 0.000000, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r3.xy, r3.xyxx, t5.xyzw, s2, l(0.000000)
mul r5.xyz, r2.xxxx, r17.xyzx
mad r3.xzw, r5.xxyz, r3.xxxx, r28.xxyz
mad r5.xyz, r5.xyzx, r3.yyyy, r29.xyzx
add r6.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r3.xyz, r3.xzwx, r6.xyzx
mad r1.xyz, r5.xyzx, r1.xyzx, r3.xyzx
mad r0.xyz, r2.yzwy, r0.xyzx, r1.xyzx
dp3 r0.w, r0.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
max r0.w, r0.w, l(0.000100)
max r0.w, r0.w, cb1[85].x
mad r0.xyz, r4.xyzx, r0.wwww, r0.xyzx
lt r0.w, l(0.000000), cb2[9].z
if_nz r0.w
  dp3 r0.w, v6.xyzx, v6.xyzx
  rsq r1.x, r0.w
  mul r1.xyz, r1.xxxx, v6.xyzx
  sqrt r0.w, r0.w
  lt r1.w, l(0.000000), cb2[13].w
  if_nz r1.w
    mad r2.xy, r0.wwww, cb2[15].xyxx, cb2[14].zwzz
    mul r2.xy, r2.xyxx, cb2[16].xyxx
    lt r1.w, l(0.010000), |v6.z|
    mul r2.zw, v6.zzzz, cb2[15].zzzw
    mul r3.xy, r2.zwzz, l(-1.442695, -1.442695, 0.000000, 0.000000)
    exp r3.xy, r3.xyxx
    add r3.xy, -r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    div r2.zw, r3.xxxy, r2.zzzw
    mul r2.zw, r2.zzzw, r2.xxxy
    movc r2.xy, r1.wwww, r2.zwzz, r2.xyxx
    mul r2.xzw, r2.xxxx, cb2[12].xxyz
    exp r2.xzw, r2.xxzw
    mul r3.xyz, r2.yyyy, cb2[12].xyzx
    exp r3.xyz, r3.xyzx
    add r3.xyz, -r2.xzwx, r3.xyzx
    mad r2.xyz, cb2[13].wwww, r3.xyzx, r2.xzwx
  else 
    mad r1.w, r0.w, cb2[15].x, cb2[14].z
    mul r1.w, r1.w, cb2[16].x
    lt r2.w, l(0.010000), |v6.z|
    mul r3.x, v6.z, cb2[15].z
    mul r3.y, r3.x, l(-1.442695)
    exp r3.y, r3.y
    add r3.y, -r3.y, l(1.000000)
    div r3.x, r3.y, r3.x
    mul r3.x, r1.w, r3.x
    movc r1.w, r2.w, r3.x, r1.w
    mul r3.xyz, r1.wwww, cb2[12].xyzx
    exp r2.xyz, r3.xyzx
  endif 
  mad r2.xyz, r2.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r2.xyz, r2.xyzx, -cb2[9].zzzz
  dp3 r1.x, cb2[7].yzwy, -r1.xyzx
  mad r1.y, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r1.z, cb2[8].w, -r1.x, l(1.000000)
  mul r1.z, r1.z, r1.z
  mul r1.z, r1.z, l(12.566371)
  div r1.y, r1.y, r1.z
  add r0.w, r0.w, -cb2[10].w
  mul_sat r0.w, r0.w, cb2[11].w
  mul r0.w, r0.w, r1.y
  mov_sat r1.x, r1.x
  mad r1.x, r1.x, r1.x, l(1.000000)
  mad r1.x, r1.x, l(0.05968310), l(-1.000000)
  mad r1.x, cb2[8].z, r1.x, l(1.000000)
  mul r1.yzw, r0.wwww, cb2[11].xxyz
  mad r1.xyz, r1.xxxx, cb2[10].xyzx, r1.yzwy
  mul r1.xyz, r1.xyzx, cb2[9].wwww
  add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r1.xyz, r1.xyzx, r3.xyzx
  mad r1.xyz, r0.xyzx, r2.xyzx, r1.xyzx
else 
  mul r0.w, v6.z, cb2[6].x
  mad r1.w, cb2[6].x, v6.z, cb2[5].x
  lt r2.x, |r0.w|, l(0.000100)
  min r2.y, r1.w, l(64.000000)
  mul r2.y, r2.y, l(1.442695)
  exp r2.y, r2.y
  mov_sat r2.z, cb2[6].z
  lt r2.w, r1.w, l(0.000000)
  add r1.w, r1.w, l(1.000000)
  movc r1.w, r2.w, r2.y, r1.w
  add r1.w, r1.w, -cb2[6].z
  movc r0.w, r2.x, l(1.000000), r0.w
  div r0.w, r1.w, r0.w
  movc r0.w, r2.x, r2.z, r0.w
  mul r0.w, r0.w, cb2[5].z
  dp3 r1.w, v6.xyzx, v6.xyzx
  sqrt r2.x, r1.w
  mad r0.w, r0.w, r2.x, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  rsq r1.w, r1.w
  mul r2.xyz, r1.wwww, v6.xyzx
  dp3 r1.w, cb2[7].yzwy, r2.xyzx
  mad_sat r1.w, cb2[8].y, r1.w, cb2[8].x
  add r2.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r2.xyzw, r1.wwww, r2.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r2.w
  add r2.xyz, -r0.xyzx, r2.xyzx
  mad r1.xyz, r0.wwww, r2.xyzx, r0.xyzx
endif 
mul r0.xyz, r1.xyzx, cb1[85].yyyy
ge r1.xyz, r0.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.xyz, r0.xyzx, r1.xyzx
min o0.xyz, r0.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
ret 
// Approximately 2970 instruction slots used
