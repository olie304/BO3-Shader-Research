//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:42:47 2021
//
//
// Note: shader requires additional functionality:
//       Early depth-stencil
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float3 colorTint;                  // Offset:  160 Size:    12
//   float baseNormalHeight;            // Offset:  172 Size:     4
//   float2 glossRange;                 // Offset:  176 Size:     8
//   float2 rotateUVs;                  // Offset:  184 Size:     8 [unused]
//   float2 scrollUVs;                  // Offset:  192 Size:     8 [unused]
//   float2 scaleUVs;                   // Offset:  200 Size:     8 [unused]
//   float2 offsetUVs;                  // Offset:  208 Size:     8 [unused]
//   float2 zoomUVs;                    // Offset:  216 Size:     8 [unused]
//   float zoomRate;                    // Offset:  224 Size:     4 [unused]
//   float layerDepth;                  // Offset:  228 Size:     4 [unused]
//   bool clampU;                       // Offset:  232 Size:     4 [unused]
//   bool clampV;                       // Offset:  236 Size:     4 [unused]
//   float hdrScale;                    // Offset:  240 Size:     4
//   float emissiveFalloffScale;        // Offset:  244 Size:     4
//   float emissiveFalloffPow;          // Offset:  248 Size:     4
//   float emissiveFalloffDir;          // Offset:  252 Size:     4
//   float shieldOpacity;               // Offset:  256 Size:     4
//   float zFeather;                    // Offset:  260 Size:     4
//   float distortionAmount;            // Offset:  264 Size:     4
//   float3 scriptTint;                 // Offset:  272 Size:    12 [unused]
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16
//   float4 debugNormalOverride;        // Offset:  960 Size:    16
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16
//   float4 debugGlossOverride;         // Offset:  992 Size:    16
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for shaderConstantSetBuffer
// {
//
//   struct GpuShaderConstantSet
//   {
//       
//       float4 scriptVector0;          // Offset:    0
//       float4 scriptVector1;          // Offset:   16
//       float4 scriptVector2;          // Offset:   32
//       float4 scriptVector3;          // Offset:   48
//       float4 scriptVector4;          // Offset:   64
//       float4 scriptVector5;          // Offset:   80
//       float4 scriptVector6;          // Offset:   96
//       float4 scriptVector7;          // Offset:  112
//       float4 weaponParam0;           // Offset:  128
//       float4 weaponParam1;           // Offset:  144
//       float4 weaponParam2;           // Offset:  160
//       float4 weaponParam3;           // Offset:  176
//       float4 weaponParam4;           // Offset:  192
//       float4 weaponParam5;           // Offset:  208
//       float4 weaponParam6;           // Offset:  224
//       float4 weaponParam7;           // Offset:  240
//       float4 characterParam0;        // Offset:  256
//       float4 characterParam1;        // Offset:  272
//       float4 characterParam2;        // Offset:  288
//       float4 characterParam3;        // Offset:  304
//       float4 characterParam4;        // Offset:  320
//       float4 characterParam5;        // Offset:  336
//       float4 characterParam6;        // Offset:  352
//       float4 characterParam7;        // Offset:  368
//
//   } $Element;                        // Offset:    0 Size:   384
//
// }
//
// Resource bind info for modelInstanceBuffer
// {
//
//   struct ModelInstanceData
//   {
//       
//       uint boneArrayIndex;           // Offset:    0
//       uint shaderConstantSet;        // Offset:    4
//       uint flagsAndPrevFrameIndex;   // Offset:    8
//       uint worldMatrix;              // Offset:   12
//       uint siegeAnimStateOffset;     // Offset:   16
//       uint prevFrameSiegeAnimStateOffset;// Offset:   20
//
//   } $Element;                        // Offset:    0 Size:    24
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// colorSampler                      sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// specColorSampler                  sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// normalSampler                     sampler      NA          NA             s5      1 
// aoSampler                         sampler      NA          NA             s6      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// shaderConstantSetBuffer           texture  struct         r/o             t0      1 
// modelInstanceBuffer               texture  struct         r/o             t4      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// floatZSampler                     texture  float4          2d            t21      1 
// colorMap                          texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// tintMask                          texture  float4          2d            t24      1 
// normalMap                         texture  float4          2d            t25      1 
// glossMap                          texture  float4          2d            t26      1 
// aoMap                             texture  float4          2d            t29      1 
// resolvedPostSun                   texture  float4          2d            t30      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// emissiveMap                       texture  float4          2d            t37      1 
// alphaMask                         texture  float4          2d            t38      1 
// edgeColorMap                      texture  float4          2d            t46      1 
// edgeEmissiveMap                   texture  float4          2d            t47      1 
// gOit_Pixels                           UAV    uint          2d             u6      1 
// gOit_Nodes                            UAV   uint2     2darray             u7      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyz 
// COLOR                    1   x           1     NONE   float   x   
// TEXCOORD                 0    yz         1     NONE   float    yz 
// TEXCOORD                 4   x           2     NONE    uint   x   
// TEXCOORD                 1   xyz         3     NONE   float   xyz 
// TEXCOORD                 2   xyz         4     NONE   float   xyz 
// TEXCOORD                 3   xyz         5     NONE   float   xyz 
// OFFPOSITION              0   xyz         6     NONE   float   xyz 
// TEXCOORD                 9   xy          7     NONE   float   xy  
// SV_IsFrontFace           0   x           8    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | forceEarlyDepthStencil
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[17], immediateIndexed
dcl_constantbuffer CB1[93], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_structured t0, 384
dcl_resource_structured t4, 24
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2d (float,float,float,float) t26
dcl_resource_texture2d (float,float,float,float) t29
dcl_resource_texture2d (float,float,float,float) t30
dcl_resource_texture2darray (float,float,float,float) t31
dcl_resource_texture2d (float,float,float,float) t37
dcl_resource_texture2d (float,float,float,float) t38
dcl_resource_texture2d (float,float,float,float) t46
dcl_resource_texture2d (float,float,float,float) t47
dcl_uav_typed_texture2d (uint,uint,uint,uint) u6
dcl_uav_typed_texture2darray (uint,uint,uint,uint) u7
dcl_input_ps_siv linear noperspective v0.xyz, position
dcl_input_ps linear v1.x
dcl_input_ps linear v1.yz
dcl_input_ps constant v2.x
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xy
dcl_input_ps_sgv constant v8.x, is_front_face
dcl_output o0.xyzw
dcl_temps 49
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.yzyy, t22.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r1.x, v1.yzyy, t24.xyzw, s1
add r1.yzw, cb0[10].xxyz, l(0.000000, -1.000000, -1.000000, -1.000000)
mad r1.xyz, r1.xxxx, r1.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r0.xyz, r0.xyzx, r1.xyzx
mul r1.x, r0.w, v1.x
sample_indexable(texture2d)(float,float,float,float) r1.yzw, v1.yzyy, t25.wxyz, s5
add r1.yzw, r1.yyzw, l(0.000000, -0.500000, -0.500000, -0.000000)
mad r1.yzw, cb0[10].wwww, r1.yyzw, l(0.000000, 0.500000, 0.500000, 0.000000)
mad r1.yz, r1.yyzy, l(0.000000, 1.99218750, 1.99218750, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
dp2 r2.x, r1.yzyy, r1.yzyy
add r2.x, -r2.x, l(1.000000)
max r2.x, r2.x, l(0.000000)
sqrt r2.x, r2.x
movc r2.y, v8.x, l(1.000000), l(-1.000000)
dp3 r2.z, v3.xyzx, v3.xyzx
rsq r2.z, r2.z
mul r3.xyz, r2.zzzz, v3.xyzx
mul r3.xyz, r2.yyyy, r3.xyzx
dp3 r2.z, v4.xyzx, v4.xyzx
rsq r2.z, r2.z
mul r4.xyz, r2.zzzz, v4.xyzx
mul r4.xyz, r2.yyyy, r4.xyzx
dp3 r2.z, v5.xyzx, v5.xyzx
rsq r2.z, r2.z
mul r5.xyz, r2.zzzz, v5.xyzx
mul r2.yzw, r2.yyyy, r5.xxyz
mul r2.yzw, r1.zzzz, r2.yyzw
mad r2.yzw, r4.xxyz, r1.yyyy, r2.yyzw
mad r2.xyz, r3.xyzx, r2.xxxx, r2.yzwy
dp3 r1.y, r2.xyzx, r2.xyzx
rsq r1.y, r1.y
mul r2.xyz, r1.yyyy, r2.xyzx
lt r1.y, l(0.000000), cb1[64].w
if_nz r1.y
  ftoi r1.y, cb1[64].w
  lod r1.z, v1.yzyy, t22.y, s1
  lod r2.w, v1.yzyy, t22.x, s1
  lt r1.z, r1.z, r2.w
  lt r2.w, l(0.000000), r2.w
  and r3.xyz, r1.yyyy, l(1, 2, 4, 0)
  movc r4.xyz, r3.xxxx, l(1.000000,0,1.000000,0), r0.xyzx
  movc r3.xyw, r3.yyyy, l(0,1.000000,0,1.000000), r0.xyxz
  movc r3.xyw, r2.wwww, r4.xyxz, r3.xyxw
  movc r4.xyz, r3.zzzz, l(0,1.000000,0,0), r0.xyzx
  movc r0.xyz, r1.zzzz, r3.xywx, r4.xyzx
endif 
mad r0.w, -r0.w, v1.x, cb1[59].x
mad r3.w, cb1[59].w, r0.w, r1.x
movc r1.xyz, v8.xxxx, v3.xyzx, -v3.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mad r1.xyz, r1.xyzx, r0.wwww, -r2.xyzx
mad r2.xyz, cb1[60].wwww, r1.xyzx, r2.xyzx
eq r0.w, r3.w, l(0.000000)
mad r1.xy, r2.xyxx, cb0[16].zzzz, v0.xyxx
mul r1.xy, r1.xyxx, cb1[44].zwzz
sample_indexable(texture2d)(float,float,float,float) r1.xyz, r1.xyxx, t30.xyzw, s1
if_nz r0.w
  mov o0.xyzw, l(0,0,0,0)
  ret 
endif 
sample_indexable(texture2d)(float,float,float,float) r0.w, v1.yzyy, t26.yzwx, s3
sample_indexable(texture2d)(float,float,float,float) r4.x, v1.yzyy, t29.xyzw, s6
add r4.y, -cb0[11].x, cb0[11].y
mad r0.w, r0.w, r4.y, cb0[11].x
mul_sat r0.w, r0.w, l(0.05882353)
mul r1.w, r1.w, r1.w
mul r1.w, r1.w, l(0.33333334)
min r1.w, r1.w, l(1.000000)
mul r0.w, r0.w, l(-17.000000)
exp r0.w, r0.w
add r0.w, r0.w, r1.w
log r0.w, r0.w
mul r0.w, r0.w, l(-0.05882353)
max r0.w, r0.w, l(0.000000)
mad r4.y, cb1[62].x, r4.y, cb0[11].x
mul_sat r4.y, r4.y, l(0.05882353)
mul r4.y, r4.y, l(-17.000000)
exp r4.y, r4.y
add r1.w, r1.w, r4.y
log r1.w, r1.w
mul r1.w, r1.w, l(-0.05882353)
max r1.w, r1.w, l(0.000000)
add r4.yzw, -r0.xxyz, cb1[58].xxyz
mad r0.xyz, cb1[58].wwww, r4.yzwy, r0.xyzx
add r4.yzw, cb1[61].xxyz, l(0.000000, -0.040000, -0.040000, -0.040000)
mad r4.yzw, cb1[61].wwww, r4.yyzw, l(0.000000, 0.040000, 0.040000, 0.040000)
add r1.w, -r0.w, r1.w
mad r5.y, cb1[62].w, r1.w, r0.w
add r0.w, -r4.x, cb1[63].x
mad r0.w, cb1[63].w, r0.w, r4.x
sample_indexable(texture2d)(float,float,float,float) r6.xyzw, v1.yzyy, t37.xyzw, s1
ld_structured_indexable(structured_buffer, stride=24)(mixed,mixed,mixed,mixed) r1.w, v2.x, l(4), t4.xxxx
ld_structured_indexable(structured_buffer, stride=384)(mixed,mixed,mixed,mixed) r7.xyz, r1.w, l(32), t0.xyzx
ge r8.xyz, l(0.040450, 0.040450, 0.040450, 0.000000), r7.xyzx
mul r9.xyz, r7.xyzx, l(0.07739938, 0.07739938, 0.07739938, 0.000000)
add r7.xyz, r7.xyzx, l(0.055000, 0.055000, 0.055000, 0.000000)
mul r7.xyz, r7.xyzx, l(0.94786733, 0.94786733, 0.94786733, 0.000000)
log r7.xyz, r7.xyzx
mul r7.xyz, r7.xyzx, l(2.400000, 2.400000, 2.400000, 0.000000)
exp r7.xyz, r7.xyzx
movc r7.xyz, r8.xyzx, r9.xyzx, r7.xyzx
mul r8.xyz, r6.xyzx, r7.xyzx
mul r0.xyz, r0.xyzx, r7.xyzx
dp3 r1.w, -v6.xyzx, -v6.xyzx
rsq r1.w, r1.w
mul r7.xyz, r1.wwww, -v6.xyzx
dp3_sat r4.x, v3.xyzx, r7.xyzx
lt r5.z, cb0[15].w, l(0.500000)
add r5.w, -r4.x, l(1.000000)
movc r4.x, r5.z, r5.w, r4.x
mul_sat r4.x, r4.x, cb0[15].y
log r4.x, r4.x
mul r4.x, r4.x, cb0[15].z
exp r4.x, r4.x
mul r5.z, r4.x, r6.w
mul r6.xyz, r5.zzzz, r8.xyzx
ge r5.z, v0.z, l(0.984375)
mul r5.w, v0.z, l(1.01587307)
mad r7.w, v0.z, l(64.000000), l(-63.000000)
movc r5.z, r5.z, r7.w, r5.w
max r5.z, r5.z, l(0.00000001)
rcp r5.z, r5.z
ftou r8.xy, v0.xyxx
ine r5.w, cb1[92].x, l(0)
utof r8.zw, r8.yyyx
dp2 r7.w, r8.wzww, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r7.w, r7.w
mul r7.w, r7.w, l(52.982918)
frc r7.w, r7.w
mad r7.w, r7.w, l(6.28318548), cb1[70].w
sincos r9.x, r10.x, r7.w
dp2 r7.w, r8.zwzz, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r7.w, r7.w
mul r7.w, r7.w, l(52.982918)
frc r7.w, r7.w
mad r7.w, r7.w, l(6.28318548), cb1[70].w
sincos r11.x, r12.x, r7.w
dp3_sat r5.x, r2.xyzx, r7.xyzx
dp3 r7.w, -r7.xyzx, r2.xyzx
add r7.w, r7.w, r7.w
mad r13.xyz, r2.xyzx, -r7.wwww, -r7.xyzx
mul r7.w, r5.y, l(17.000000)
exp r7.w, r7.w
add r7.w, r7.w, l(2.000000)
div r7.w, l(2.000000), r7.w
sqrt r8.z, r7.w
sqrt r8.w, r8.z
mad r8.w, r8.w, l(0.500000), l(0.500000)
mul r8.w, r8.w, r8.w
mul r9.z, r8.w, l(0.500000)
mad r8.w, -r8.w, l(0.500000), l(1.000000)
mad r9.w, r5.x, r8.w, r9.z
mul r8.w, r8.w, r9.w
mul r9.z, r9.w, r9.z
dp3 r9.w, r2.xyzx, cb2[17].xyzx
mov_sat r10.w, r9.w
ge r11.y, l(0.000000), r10.w
if_nz r11.y
  mov r11.z, l(0)
endif 
if_z r11.y
  mul r12.yzw, v6.yyyy, cb2[29].xxyz
  mad r12.yzw, v6.xxxx, cb2[28].xxyz, r12.yyzw
  mad r12.yzw, v6.zzzz, cb2[30].xxyz, r12.yyzw
  add r12.yzw, r12.yyzw, cb2[31].xxyz
  add r11.y, r12.w, -cb2[17].w
  mad r11.y, -r11.y, l(0.00006104), l(1.000000)
  mov_sat r11.w, r11.y
  eq r11.w, r11.y, r11.w
  if_nz r11.w
    mov r11.w, l(0)
    mov r14.x, l(0)
    loop 
      ge r14.y, r11.w, l(3.000000)
      breakc_nz r14.y
      ftou r14.y, r11.w
      add r14.zw, r12.yyyz, -cb2[r14.y + 20].xxxy
      max r14.z, |r14.w|, |r14.z|
      mul r14.x, r14.z, cb2[r14.y + 20].z
      lt r14.y, r14.x, l(1.000000)
      if_nz r14.y
        break 
      endif 
      add r11.w, r11.w, l(1.000000)
      mov r14.x, l(0)
    endloop 
  else 
    mov r11.w, l(3.000000)
    mov r14.x, l(0)
  endif 
  ge r14.y, r11.w, l(3.000000)
  if_nz r14.y
    mul r15.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
    rcp r16.xz, r15.xxxx
    mov r16.y, -r16.z
    mad r15.xyz, r12.yzyy, r16.xyzx, r15.yzyy
    add r16.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r15.xyz, r15.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r15.xyz, r16.xyzx, r15.xyzx
    mul r14.zw, r15.zzzy, cb2[32].xxxx
    round_ni r14.zw, r14.zzzw
    mul r14.w, r14.w, cb2[27].x
    mad r14.z, r14.w, cb2[32].x, r14.z
    ftou r14.z, r14.z
    iadd r14.z, r14.z, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r14.w, r14.z, l(0), t23.xxxx
    and r15.w, r14.w, l(0x40000000)
    ishl r16.x, r14.w, l(2)
    if_z r15.w
      and r15.w, r14.w, l(0x01ffffff)
      iadd r17.x, r14.z, r15.w
      ushr r14.z, r14.w, l(25)
      utof r14.z, r14.z
      mul r15.xyz, r14.zzzz, r15.xyzx
      frc r15.xyz, r15.xyzx
      mul r15.xyz, r15.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
      ftou r15.xyz, r15.xyzx
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.z, r17.x, l(0), t23.xxxx
      ushr r14.zw, r15.zzzy, l(0, 0, 6, 6)
      and r15.w, r17.z, l(0xc0000000)
      iadd r16.y, r17.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.y, r16.y, l(0), t23.xxxx
      movc r14.w, r14.w, r17.z, r16.y
      ushr r16.y, r14.w, l(13)
      movc r14.z, r14.z, r16.y, r14.w
      and r14.z, r14.z, l(8191)
      iadd r18.x, r14.z, r17.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.x, l(0), t23.xxxx
      mov r17.y, l(0)
      mov r18.y, l(1)
      movc r16.yzw, r15.wwww, r17.xxyz, r18.xxyz
      movc r18.yz, r15.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r14.zw, r15.zzzy, r18.yyyy
      and r14.zw, r14.zzzw, l(0, 0, 1, 1)
      and r17.w, r16.w, l(0xc0000000)
      iadd r18.y, r16.y, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.y, r18.y, l(0), t23.xxxx
      movc r14.w, r14.w, r16.w, r18.y
      ushr r18.y, r14.w, l(13)
      movc r14.z, r14.z, r18.y, r14.w
      and r14.z, r14.z, l(8191)
      iadd r18.x, r14.z, r16.y
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.w, r18.x, l(0), t23.xxxx
      movc r16.yzw, r17.wwww, r16.yyzw, r18.xxzw
      movc r16.yzw, r15.wwww, r17.xxyz, r16.yyzw
      and r14.z, r16.w, l(0xc0000000)
      if_z r14.z
        iadd r14.z, -r16.z, l(6)
        ushr r14.zw, r15.zzzy, r14.zzzz
        or r15.w, r16.w, l(0x40000000)
        bfi r14.w, l(1), l(1), r14.w, l(0)
        bfi r14.z, l(1), l(0), r14.z, r14.w
        imul null, r14.z, r14.z, l(10)
        ushr r14.z, r15.w, r14.z
        and r14.z, r14.z, l(1023)
        iadd r17.x, r14.z, r16.y
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.w, r17.x, l(0), t23.xxxx
        iadd r17.yz, r16.zzzz, l(0, 1, 2, 0)
        iadd r14.z, -r17.y, l(6)
        ushr r14.zw, r15.zzzy, r14.zzzz
        and r15.w, r17.w, l(0xc0000000)
        or r16.z, r17.w, l(0x40000000)
        bfi r14.w, l(1), l(1), r14.w, l(0)
        bfi r14.z, l(1), l(0), r14.z, r14.w
        imul null, r14.z, r14.z, l(10)
        ushr r14.z, r16.z, r14.z
        and r14.z, r14.z, l(1023)
        iadd r18.x, r14.z, r17.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.x, l(0), t23.xxxx
        mov r18.y, r17.z
        movc r18.xyz, r15.wwww, r17.xywx, r18.xyzx
        iadd r14.z, -r18.y, l(6)
        ushr r14.zw, r15.zzzy, r14.zzzz
        and r16.z, r18.z, l(0xc0000000)
        or r17.y, r18.z, l(0x40000000)
        bfi r14.w, l(1), l(1), r14.w, l(0)
        bfi r14.z, l(1), l(0), r14.z, r14.w
        imul null, r14.z, r14.z, l(10)
        ushr r14.z, r17.y, r14.z
        and r14.z, r14.z, l(1023)
        iadd r19.x, r14.z, r18.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.y, r19.x, l(0), t23.xxxx
        movc r14.zw, r16.zzzz, r18.xxxz, r19.xxxy
        movc r16.yw, r15.wwww, r17.xxxw, r14.zzzw
      endif 
      and r14.z, r16.w, l(0xc0000000)
      if_z r14.z
        ubfe r14.w, l(14), l(15), r16.w
        utof r14.w, r14.w
        mul r14.w, r14.w, cb2[27].w
        mul r14.w, r14.w, l(0.00006104)
        and r17.xy, r16.wwww, l(0x00007fff, 0x20000000, 0, 0)
        utof r15.w, r17.x
        mul r15.w, r15.w, cb2[27].w
        mul r15.w, r15.w, l(0.00003052)
        and r16.z, r15.y, l(3)
        iadd r16.z, r16.z, r16.y
        iadd r16.z, r16.z, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.z, r16.z, l(0), t23.xxxx
        bfi r17.xzw, l(2, 0, 2, 1), l(3, 0, 1, 4), r15.xxyz, l(0, 0, 0, 0)
        ushr r15.x, r16.z, r17.x
        and r15.x, r15.x, l(255)
        utof r15.x, r15.x
        mul r15.x, r15.w, r15.x
        mad r15.x, r15.x, l(0.00392157), r14.w
        iadd r15.y, r17.z, l(1)
        ubfe r15.z, l(1), l(1), r15.z
        iadd r15.y, r15.z, r15.y
        iadd r15.y, r15.y, r16.y
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.y, r15.y, l(0), t23.xxxx
        ushr r15.y, r15.y, r17.w
        and r15.y, r15.y, l(0x0000ffff)
        utof r15.y, r15.y
        mul r15.y, r15.w, r15.y
        mad r14.w, r15.y, l(0.00001526), r14.w
        movc r16.x, r17.y, r15.x, r14.w
      else 
        and r14.w, r16.w, l(0x80000000)
        iadd r15.x, r16.y, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.x, r15.x, l(0), t23.xxxx
        movc r14.w, r14.w, r15.x, l(0)
        ishl r15.x, r16.w, l(2)
        ushr r15.y, r14.w, l(16)
        f16tof32 r15.y, r15.y
        and r14.w, r14.w, l(0x0000ffff)
        f16tof32 r14.w, r14.w
        mad r15.x, r12.y, r15.y, r15.x
        mad r14.w, r12.z, r14.w, r15.x
        movc r16.x, r14.z, r14.w, r16.x
      endif 
    endif 
    mad r12.w, -cb2[27].z, l(2.000000), r12.w
    lt r12.w, r16.x, r12.w
    movc r11.z, r12.w, l(0), l(1.000000)
  endif 
  if_z r14.y
    if_z cb2[58].y
      ftou r12.w, r11.w
      add r14.yz, r12.yyzy, -cb2[r12.w + 20].xxyx
      mul r14.yz, r14.yyzy, cb2[r12.w + 20].zzzz
      mad r15.xy, r14.yzyy, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r12.w, cb2[26].y
      add r15.z, r11.w, r12.w
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.w, r15.xyzx, t13.xxxx, s13, r11.y
      sample_l_indexable(texture2darray)(float,float,float,float) r14.y, r15.xyzx, t31.yxzw, s0, l(0.000000)
      add r12.w, r12.w, r14.y
      add_sat r12.w, r12.w, l(-1.000000)
      mul r14.y, r12.w, r12.w
      mul r11.z, r12.w, r14.y
    endif 
    if_nz cb2[58].y
      mov r15.x, -r9.x
      ftou r12.w, r11.w
      add r11.w, r11.w, l(1.000000)
      min r11.w, r11.w, l(2.000000)
      ftou r11.w, r11.w
      add r14.x, -r14.x, l(1.000000)
      mul r14.x, r14.x, l(28.000000)
      ftou r14.x, r14.x
      add r14.yz, r12.yyzy, -cb2[r12.w + 20].xxyx
      mul r14.yz, r14.yyzy, cb2[r12.w + 20].zzzz
      mad r14.yz, r14.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      add r12.yz, r12.yyzy, -cb2[r11.w + 20].xxyx
      mul r12.yz, r12.yyzy, cb2[r11.w + 20].zzzz
      mad r12.yz, r12.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      mov r15.y, r10.x
      mov r15.z, r9.x
      mov r14.w, l(0)
      mov r15.w, l(0)
      loop 
        uge r16.x, r15.w, l(8)
        breakc_nz r16.x
        ult r16.x, r14.x, r15.w
        movc r16.yz, r16.xxxx, r12.yyzy, r14.yyzy
        movc r16.w, r16.x, cb2[r11.w + 20].w, cb2[r12.w + 20].w
        movc r16.x, r16.x, r11.w, r12.w
        dp2 r17.x, icb[r15.w + 0].yxyy, r15.xyxx
        dp2 r17.y, icb[r15.w + 0].yxyy, r15.yzyy
        mad r17.xy, r17.xyxx, r16.wwww, r16.yzyy
        iadd r16.x, r16.x, cb2[26].y
        utof r17.z, r16.x
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r16.x, r17.xyzx, t13.xxxx, s13, r11.y
        sample_l_indexable(texture2darray)(float,float,float,float) r16.y, r17.xyzx, t31.yxzw, s0, l(0.000000)
        add r16.x, r16.y, r16.x
        add_sat r16.x, r16.x, l(-1.000000)
        mad r14.w, r16.x, l(0.125000), r14.w
        iadd r15.w, r15.w, l(1)
      endloop 
      mul r11.y, r14.w, r14.w
      mul r11.z, r14.w, r11.y
    endif 
  endif 
endif 
lt r11.y, l(0.000000), r10.w
if_nz r11.y
  lt r11.y, l(0.000000), r11.z
  if_nz r11.y
    mul r11.y, r7.w, cb2[18].w
    mul r11.y, r10.w, r11.y
    if_nz cb2[23].x
      add r14.xyz, v6.xyzx, cb1[24].xyzx
      mov r14.w, l(1.000000)
      dp4 r11.w, cb2[24].xyzw, r14.xyzw
      dp4 r12.y, cb2[25].xyzw, r14.xyzw
      frc r14.x, r11.w
      frc r14.y, r12.y
      iadd r11.w, l(-1), cb2[23].x
      utof r14.z, r11.w
      sample_l_indexable(texture2darray)(float,float,float,float) r12.yzw, r14.xyzx, t20.wxyz, s2, l(0.000000)
      add r12.yzw, r12.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
      mad r12.yzw, cb2[23].yyyy, r12.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
      mul r12.yzw, r12.yyzw, cb2[18].xxyz
    else 
      mov r12.yzw, cb2[18].xxyz
    endif 
    ushr r11.w, cb2[53].x, l(16)
    ult r14.x, l(0), r11.w
    and r14.x, r5.w, r14.x
    if_nz r14.x
      iadd r11.w, r11.w, cb2[0].x
      iadd r11.w, r11.w, l(-1)
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.x, r11.w, l(52), t12.xxxx
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r11.w, l(68), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r11.w, l(84), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r11.w, l(132), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r11.w, l(148), t12.xyzw
      mad r14.y, |r9.w|, l(-0.200000), l(0.400000)
      mad r19.xyz, r2.xyzx, r14.yyyy, v6.xyzx
      mov r19.w, l(1.000000)
      dp4 r15.x, r15.xyzw, r19.xyzw
      dp4 r15.y, r16.xyzw, r19.xyzw
      mad r14.yz, r15.xxyx, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      add r14.yz, r18.zzwz, r14.yyzy
      mul r14.yz, r18.xxyx, r14.yyzy
      div r15.xy, r14.xxxx, r17.xzxx
      add r15.zw, -r15.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
      ge r15.zw, r14.yyyz, r15.zzzw
      ge r15.xy, r15.xyxx, r14.yzyy
      or r15.xy, r15.xyxx, r15.zwzz
      or r14.w, r15.y, r15.x
      if_z r14.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.w, r11.w, l(28), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r11.w, l(100), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xy, r11.w, l(164), t12.xyxx
        dp4 r11.w, r15.xyzw, r19.xyzw
        mov_sat r14.yz, r14.yyzy
        mad r15.xy, r14.yzyy, r17.xzxx, r17.ywyy
        add r11.w, r16.x, r11.w
        div r11.w, r11.w, r16.y
        max r11.w, r11.w, l(0.00006104)
        and r14.y, r14.w, l(0x0000ffff)
        if_nz cb2[58].y
          mov r16.x, -r9.x
          utof r17.z, r14.y
          mov r16.y, r10.x
          mov r16.z, r9.x
          mov r14.zw, l(0,0,0,0)
          loop 
            ige r15.w, r14.w, l(8)
            breakc_nz r15.w
            dp2 r18.x, icb[r14.w + 0].yxyy, r16.xyxx
            dp2 r18.y, icb[r14.w + 0].yxyy, r16.yzyy
            mad r17.xy, r18.xyxx, r14.xxxx, r15.xyxx
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r15.w, r17.xyzx, t9.xxxx, s13, r11.w
            mad r14.z, r15.w, l(0.125000), r14.z
            iadd r14.w, r14.w, l(1)
          endloop 
        else 
          utof r15.z, r14.y
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r14.z, r15.xyzx, t9.xxxx, s13, r11.w
        endif 
        mul r11.w, r14.z, r14.z
        mul r11.w, r14.z, r11.w
      else 
        mov r11.w, l(1.000000)
      endif 
      mul r11.z, r11.w, r11.z
    else 
      and r11.w, cb2[53].x, l(0x0000ffff)
      ult r14.x, l(0), r11.w
      not r14.y, r5.w
      and r14.x, r14.y, r14.x
      if_nz r14.x
        iadd r11.w, r11.w, cb2[0].x
        iadd r11.w, r11.w, l(-1)
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.x, r11.w, l(52), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r11.w, l(68), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r11.w, l(84), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r11.w, l(132), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r11.w, l(148), t12.xyzw
        mad r14.y, |r9.w|, l(-0.200000), l(0.400000)
        mad r19.xyz, r2.xyzx, r14.yyyy, v6.xyzx
        mov r19.w, l(1.000000)
        dp4 r15.x, r15.xyzw, r19.xyzw
        dp4 r15.y, r16.xyzw, r19.xyzw
        mad r14.yz, r15.xxyx, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
        add r14.yz, r18.zzwz, r14.yyzy
        mul r14.yz, r18.xxyx, r14.yyzy
        div r15.xy, r14.xxxx, r17.xzxx
        add r15.zw, -r15.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
        ge r15.zw, r14.yyyz, r15.zzzw
        ge r15.xy, r15.xyxx, r14.yzyy
        or r15.xy, r15.xyxx, r15.zwzz
        or r14.w, r15.y, r15.x
        if_z r14.w
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.w, r11.w, l(28), t12.xxxx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r11.w, l(100), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xy, r11.w, l(164), t12.xyxx
          dp4 r11.w, r15.xyzw, r19.xyzw
          mov_sat r14.yz, r14.yyzy
          mad r15.xy, r14.yzyy, r17.xzxx, r17.ywyy
          add r11.w, r16.x, r11.w
          div r11.w, r11.w, r16.y
          max r11.w, r11.w, l(0.00006104)
          and r14.y, r14.w, l(0x0000ffff)
          if_nz cb2[58].y
            mov r16.x, -r9.x
            utof r17.z, r14.y
            mov r16.y, r10.x
            mov r16.z, r9.x
            mov r14.zw, l(0,0,0,0)
            loop 
              ige r15.w, r14.w, l(8)
              breakc_nz r15.w
              dp2 r18.x, icb[r14.w + 0].yxyy, r16.xyxx
              dp2 r18.y, icb[r14.w + 0].yxyy, r16.yzyy
              mad r17.xy, r18.xyxx, r14.xxxx, r15.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r15.w, r17.xyzx, t9.xxxx, s13, r11.w
              mad r14.z, r15.w, l(0.125000), r14.z
              iadd r14.w, r14.w, l(1)
            endloop 
          else 
            utof r15.z, r14.y
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r14.z, r15.xyzx, t9.xxxx, s13, r11.w
          endif 
          mul r11.w, r14.z, r14.z
          mul r11.w, r14.z, r11.w
        else 
          mov r11.w, l(1.000000)
        endif 
        mul r11.z, r11.w, r11.z
      endif 
    endif 
    mad r11.w, -r5.x, l(0.500000), l(1.000000)
    mad r11.w, -r10.w, r11.w, l(1.000000)
    mul r11.w, r11.w, r11.w
    mad r11.w, -r11.w, l(0.620000), l(0.620000)
    add r11.w, -r10.w, r11.w
    mad r11.w, r8.z, r11.w, r10.w
    mul r11.w, r11.z, r11.w
    mul r14.xyz, r12.yzwy, r11.wwww
    lt r9.w, l(0.000000), r9.w
    mad r15.xyz, -v6.xyzx, r1.wwww, cb2[17].xyzx
    dp3 r1.w, r15.xyzx, r15.xyzx
    rsq r1.w, r1.w
    mul r15.xyz, r1.wwww, r15.xyzx
    dp3 r1.w, r15.xyzx, r7.xyzx
    dp3 r11.w, r2.xyzx, r15.xyzx
    mad r15.x, |r11.w|, r7.w, -|r11.w|
    mad r11.w, |r11.w|, r15.x, l(1.000000)
    mad r10.w, r10.w, r8.w, r9.z
    mul r11.w, r11.w, r11.w
    mul r10.w, r10.w, r11.w
    rcp r10.w, r10.w
    mul r10.w, r11.y, r10.w
    mul r10.w, r10.w, r11.z
    mul r10.w, r10.w, l(0.250000)
    mul r11.yzw, r12.yyzw, r10.wwww
    add_sat r1.w, -r1.w, l(1.000000)
    mul r15.x, r1.w, r1.w
    mul r15.x, r15.x, r15.x
    mul r1.w, r1.w, r15.x
    mul r1.w, r1.w, r10.w
    mul r15.xyz, r12.zwyz, r1.wwww
    mov r14.w, r15.z
    and r14.xyzw, r9.wwww, r14.xyzw
    mov r15.zw, r11.yyyz
    and r15.xyzw, r9.wwww, r15.xyzw
    and r1.w, r9.w, r11.w
  else 
    mov r14.xyzw, l(0,0,0,0)
    mov r15.xyzw, l(0,0,0,0)
    mov r1.w, l(0)
  endif 
else 
  mov r14.xyzw, l(0,0,0,0)
  mov r15.xyzw, l(0,0,0,0)
  mov r1.w, l(0)
endif 
mul r9.w, r5.z, l(0.00781250)
min r9.w, r9.w, l(15.000000)
ftou r9.w, r9.w
ushr r16.xy, r8.xyxx, l(6, 6, 0, 0)
ishl r16.z, r9.w, l(4)
mov r17.x, -r9.x
not r8.x, r5.w
mad r8.y, -r5.x, l(0.500000), l(1.000000)
mov r18.xy, l(0,0,0,0)
mov r19.w, l(0)
mov r20.xyz, v6.xyzx
mov r20.w, l(1.000000)
mov r21.w, l(1.000000)
mov r17.z, r9.x
mov r22.w, l(1.000000)
mov r23.z, l(1.000000)
mov r24.w, l(1.000000)
mov r17.yw, r10.xxxx
mov r9.y, r17.w
mov r25.w, l(1.000000)
mov r10.y, r17.x
mov r10.z, r9.x
mov r26.w, l(1.000000)
mov r27.x, r10.x
mov r27.y, r17.x
mov r27.z, r9.x
mov r28.x, r10.x
mov r28.y, r17.x
mov r28.z, r9.x
mov r29.x, r10.x
mov r29.y, r17.x
mov r29.z, r9.x
mov r11.yzw, r14.xxyz
mov r30.x, r14.w
mov r30.yz, r15.xxyx
mov r31.xy, r15.zwzz
mov r31.z, r1.w
mov r9.w, cb2[58].y
mov r10.w, l(0)
loop 
  uge r12.y, r10.w, cb2[0].x
  breakc_nz r12.y
  ushr r18.z, r10.w, l(5)
  iadd r19.xyz, r16.xyzx, r18.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r12.y, r19.xyzw, t6.yxzw
  mov r19.xyz, r11.yzwy
  mov r32.xyz, r30.xyzx
  mov r33.xyz, r31.xyzx
  mov r12.z, r9.w
  mov r12.w, r12.y
  loop 
    breakc_z r12.w
    firstbit_lo r16.w, r12.w
    ishl r18.z, l(1), r16.w
    and r18.w, r12.w, r18.z
    if_nz r18.w
      xor r12.w, r12.w, r18.z
      iadd r16.w, r10.w, r16.w
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r34.xyzw, r16.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r35.xy, r16.w, l(16), t11.xyxx
      add r34.xyz, r34.xyzx, -v6.xyzx
      mov r35.z, r34.w
      lt r34.xyz, |r34.xyzx|, r35.zxyz
      and r18.z, r34.y, r34.x
      and r18.z, r34.z, r18.z
      if_nz r18.z
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r16.w, l(0), t12.wxyz
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r16.w, l(16), t12.zxyw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r16.w, l(32), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r16.w, l(48), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r16.w, l(64), t12.yzwx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r16.w, l(80), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r16.w, l(96), t12.yzwx
        ubfe r18.z, l(3), l(24), r35.w
        switch r18.z
          case l(4)
          lt r18.z, l(0.000000), r40.x
          mov r41.xy, r39.zwzz
          mov r41.z, r40.w
          mad r42.xyz, -r41.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r34.yzwy
          add r43.xyz, r42.xyzx, -v6.xyzx
          dp3 r18.w, r41.xyzx, r43.xyzx
          div_sat r23.w, -r18.w, r40.x
          mad r44.xyz, r23.wwww, r41.xyzx, r42.xyzx
          movc r44.xyz, r18.zzzz, r44.xyzx, r34.yzwy
          add r44.xyz, r44.xyzx, -v6.xyzx
          dp3 r27.w, r44.xyzx, r44.xyzx
          rsq r28.w, r27.w
          mul r44.xyz, r28.wwww, r44.xyzx
          dp3 r28.w, r2.xyzx, r44.xyzx
          mov_sat r29.w, r28.w
          lt r30.w, l(0.000000), r29.w
          if_nz r30.w
            sqrt r30.w, r27.w
            mul r31.w, r37.x, r37.x
            div r27.w, r31.w, r27.w
            min r27.w, r27.w, l(1.000000)
            mad_sat r44.xy, r30.wwww, r36.xzxx, r36.ywyy
            mul r44.zw, r44.xxxy, r44.xxxy
            mad r44.xy, r44.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
            mul r44.xy, r44.xyxx, r44.zwzz
            mul r27.w, r27.w, r44.x
            mul r27.w, r44.y, r27.w
            lt r30.w, l(0.000000), r27.w
            if_nz r30.w
              ubfe r30.w, l(3), l(27), r35.w
              ine r30.w, r30.w, l(1)
              if_nz r30.w
                mad r30.w, |r28.w|, l(-0.200000), l(0.400000)
                mad r44.xyz, r2.xyzx, r30.wwww, v6.xyzx
                add r44.xyz, -r38.xyzx, r44.xyzx
                max r30.w, |r44.z|, |r44.y|
                max r30.w, r30.w, |r44.x|
                div r30.w, r39.x, r30.w
                add r30.w, r39.y, r30.w
                dp3 r31.w, r44.xyzx, r44.xyzx
                rsq r31.w, r31.w
                max r30.w, r30.w, l(0.00006104)
                and r32.w, r35.w, l(0x0000ffff)
                utof r45.w, r32.w
                mov r32.w, l(0)
                mov r33.w, l(0)
                loop 
                  ige r41.w, r33.w, l(8)
                  breakc_nz r41.w
                  dp2 r46.y, icb[r33.w + 0].yxyy, r17.xyxx
                  dp2 r46.z, icb[r33.w + 0].yxyy, r17.yzyy
                  mul r46.yz, r37.yyyy, r46.yyzy
                  mul r46.x, r12.x, r46.y
                  mul r46.w, r11.x, r46.y
                  mad r45.xyz, r44.xyzx, r31.wwww, r46.xzwx
                  sample_c_lz_indexable(texturecubearray)(float,float,float,float) r41.w, r45.xyzw, t10.xxxx, s13, r30.w
                  mad r32.w, r41.w, l(0.125000), r32.w
                  iadd r33.w, r33.w, l(1)
                endloop 
              else 
                mov r32.w, l(1.000000)
              endif 
              mul r27.w, r27.w, r32.w
              lt r30.w, l(0.000000), r27.w
              if_nz r30.w
                mul r30.w, r7.w, r35.x
                mul r30.w, r30.w, l(0.250000)
                dp3 r31.w, r41.xyzx, r13.xyzx
                dp3 r33.w, r13.xyzx, r43.xyzx
                mad r41.w, -r31.w, r31.w, r40.x
                mad r18.w, r31.w, r33.w, -r18.w
                div_sat r18.w, r18.w, r41.w
                div r31.w, r41.w, r40.x
                mul r31.w, r31.w, l(10.000000)
                min r31.w, r31.w, l(1.000000)
                add r18.w, -r23.w, r18.w
                mad r18.w, r31.w, r18.w, r23.w
                mad r41.xyz, r18.wwww, r41.xyzx, r42.xyzx
                movc r41.xyz, r18.zzzz, r41.xyzx, r34.yzwy
                add r41.xyz, r41.xyzx, -v6.xyzx
                dp3 r18.z, r41.xyzx, r41.xyzx
                rsq r18.z, r18.z
                mul r42.xyz, r18.zzzz, r41.xyzx
                ubfe r18.w, l(4), l(16), r35.w
                ult r23.w, l(0), r18.w
                and r23.w, r5.w, r23.w
                if_nz r23.w
                  iadd r18.w, r18.w, cb2[0].x
                  iadd r18.w, r18.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.w, r18.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r18.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r18.w, l(116), t12.xyzw
                  mad r31.w, |r28.w|, l(-0.200000), l(0.400000)
                  mad r21.xyz, r2.xyzx, r31.wwww, v6.xyzx
                  dp4 r31.w, r43.xyzw, r21.xyzw
                  dp4 r33.w, r44.xyzw, r21.xyzw
                  lt r41.w, r33.w, r31.w
                  if_z r41.w
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r18.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r18.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xyzw, r18.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r46.xyzw, r18.w, l(148), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r47.xy, r18.w, l(164), t12.xyxx
                    dp4 r43.x, r43.xyzw, r21.xyzw
                    dp4 r43.y, r44.xyzw, r21.xyzw
                    div r21.xy, r43.xyxx, r33.wwww
                    mad r21.xy, r21.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r21.xy, r46.zwzz, r21.xyxx
                    mul r21.xy, r46.xyxx, r21.xyxx
                    div r43.xy, r23.wwww, r45.xzxx
                    add r43.zw, -r43.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                    ge r43.zw, r21.xxxy, r43.zzzw
                    ge r43.xy, r43.xyxx, r21.xyxx
                    or r43.xy, r43.xyxx, r43.zwzz
                    or r21.z, r43.y, r43.x
                    mov_sat r21.xy, r21.xyxx
                    mad r43.xy, r21.xyxx, r45.xzxx, r45.ywyy
                    mul r21.x, r33.w, r47.y
                    mad r21.y, r47.x, r33.w, r31.w
                    div r21.x, r21.y, r21.x
                  else 
                    mov r21.z, l(-1)
                  endif 
                  or r21.y, r41.w, r21.z
                  if_z r21.y
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.w, r18.w, l(28), t12.xxxx
                    max r21.x, r21.x, l(0.00006104)
                    and r18.w, r18.w, l(0x0000ffff)
                    if_nz r12.z
                      utof r44.z, r18.w
                      mov r21.yz, l(0,0,0,0)
                      loop 
                        ige r31.w, r21.z, l(8)
                        breakc_nz r31.w
                        dp2 r45.x, icb[r21.z + 0].yxyy, r17.xwxx
                        dp2 r45.y, icb[r21.z + 0].xyxx, r9.xyxx
                        mad r44.xy, r45.xyxx, r23.wwww, r43.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r31.w, r44.xyzx, t9.xxxx, s13, r21.x
                        mad r21.y, r31.w, l(0.125000), r21.y
                        iadd r21.z, r21.z, l(1)
                      endloop 
                    else 
                      utof r43.z, r18.w
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.y, r43.xyzx, t9.xxxx, s13, r21.x
                    endif 
                    mul r18.w, r21.y, r21.y
                    mul r18.w, r21.y, r18.w
                  else 
                    mov r18.w, l(1.000000)
                  endif 
                  mul r27.w, r18.w, r27.w
                else 
                  ubfe r18.w, l(4), l(20), r35.w
                  ult r21.x, l(0), r18.w
                  and r21.x, r8.x, r21.x
                  if_nz r21.x
                    iadd r18.w, r18.w, cb2[0].x
                    iadd r18.w, r18.w, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r21.x, r18.w, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r18.w, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r18.w, l(116), t12.xyzw
                    mad r21.z, |r28.w|, l(-0.200000), l(0.400000)
                    mad r22.xyz, r2.xyzx, r21.zzzz, v6.xyzx
                    dp4 r21.z, r43.xyzw, r22.xyzw
                    dp4 r23.w, r44.xyzw, r22.xyzw
                    lt r31.w, r23.w, r21.z
                    if_z r31.w
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r18.w, l(68), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r18.w, l(84), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xyzw, r18.w, l(132), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r46.xyzw, r18.w, l(148), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r47.xy, r18.w, l(164), t12.xyxx
                      dp4 r43.x, r43.xyzw, r22.xyzw
                      dp4 r43.y, r44.xyzw, r22.xyzw
                      div r22.xy, r43.xyxx, r23.wwww
                      mad r22.xy, r22.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                      add r22.xy, r46.zwzz, r22.xyxx
                      mul r22.xy, r46.xyxx, r22.xyxx
                      div r43.xy, r21.xxxx, r45.xzxx
                      add r43.zw, -r43.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                      ge r43.zw, r22.xxxy, r43.zzzw
                      ge r43.xy, r43.xyxx, r22.xyxx
                      or r43.xy, r43.xyxx, r43.zwzz
                      or r22.z, r43.y, r43.x
                      mov_sat r22.xy, r22.xyxx
                      mad r43.xy, r22.xyxx, r45.xzxx, r45.ywyy
                      mul r22.x, r23.w, r47.y
                      mad r21.z, r47.x, r23.w, r21.z
                      div r21.z, r21.z, r22.x
                    else 
                      mov r22.z, l(-1)
                    endif 
                    or r22.x, r31.w, r22.z
                    if_z r22.x
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.w, r18.w, l(28), t12.xxxx
                      max r21.z, r21.z, l(0.00006104)
                      and r18.w, r18.w, l(0x0000ffff)
                      if_nz r12.z
                        utof r22.z, r18.w
                        mov r23.w, l(0)
                        mov r31.w, l(0)
                        loop 
                          ige r33.w, r31.w, l(8)
                          breakc_nz r33.w
                          dp2 r44.x, icb[r31.w + 0].xyxx, r10.xyxx
                          dp2 r44.y, icb[r31.w + 0].yxyy, r10.xzxx
                          mad r22.xy, r44.xyxx, r21.xxxx, r43.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.x, r22.xyzx, t9.xxxx, s13, r21.z
                          mad r23.w, r22.x, l(0.125000), r23.w
                          iadd r31.w, r31.w, l(1)
                        endloop 
                      else 
                        utof r43.z, r18.w
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.w, r43.xyzx, t9.xxxx, s13, r21.z
                      endif 
                      mul r18.w, r23.w, r23.w
                      mul r18.w, r23.w, r18.w
                    else 
                      mov r18.w, l(1.000000)
                    endif 
                    mul r27.w, r18.w, r27.w
                  endif 
                endif 
                mad r18.w, -r29.w, r8.y, l(1.000000)
                mul r18.w, r18.w, r18.w
                mad r18.w, -r18.w, l(0.620000), l(0.620000)
                add r18.w, -r29.w, r18.w
                mad r18.w, r8.z, r18.w, r29.w
                mul r18.w, r27.w, r18.w
                mov r35.x, r34.x
                lt r21.x, l(0.000000), r28.w
                mad r22.xyz, r18.wwww, r35.xyzx, r19.xyzx
                dp3_sat r18.w, r2.xyzx, r42.xyzx
                mad r41.xyz, r41.xyzx, r18.zzzz, r7.xyzx
                dp3 r18.z, r41.xyzx, r41.xyzx
                rsq r18.z, r18.z
                mul r41.xyz, r18.zzzz, r41.xyzx
                dp3 r18.z, r41.xyzx, r7.xyzx
                dp3 r21.z, r2.xyzx, r41.xyzx
                mad r28.w, |r21.z|, r7.w, -|r21.z|
                mad r21.z, |r21.z|, r28.w, l(1.000000)
                mad r28.w, r18.w, r8.w, r9.z
                mul r21.z, r21.z, r21.z
                mul r21.z, r28.w, r21.z
                rcp r21.z, r21.z
                mul r18.w, r30.w, r18.w
                mul r18.w, r18.w, r21.z
                mul r18.w, r27.w, r18.w
                mad r41.xyz, r18.wwww, r35.xyzx, r33.xyzx
                add_sat r18.z, -r18.z, l(1.000000)
                mul r21.z, r18.z, r18.z
                mul r21.z, r21.z, r21.z
                mul r18.z, r18.z, r21.z
                mul r18.z, r18.z, r18.w
                mad r42.xyz, r18.zzzz, r35.xyzx, r32.xyzx
                movc r19.xyz, r21.xxxx, r22.xyzx, r19.xyzx
                movc r32.xyz, r21.xxxx, r42.xyzx, r32.xyzx
                movc r33.xyz, r21.xxxx, r41.xyzx, r33.xyzx
              endif 
            endif 
          endif 
          break 
          case l(2)
          mov r22.xy, r37.zwzz
          mov r22.z, r38.w
          add r22.xyz, r22.xyzx, -v6.xyzx
          dp3 r18.z, r22.xyzx, r22.xyzx
          rsq r18.z, r18.z
          mul r41.xyz, r18.zzzz, r22.xyzx
          dp3 r18.w, r2.xyzx, r41.xyzx
          mov_sat r21.x, r18.w
          lt r21.z, l(0.000000), r21.x
          if_nz r21.z
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r16.w, l(112), t12.yzwx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r16.w, l(128), t12.zxyw
            mov r43.xyz, r41.xyzx
            mov r43.w, r42.y
            dp4 r21.z, r43.xyzw, r20.xyzw
            lt r27.w, r21.z, l(1.000000)
            if_nz r27.w
              mov r44.xyz, l(1.000000,1.000000,1.000000,0)
              mov r27.w, l(0)
            else 
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xyzw, r16.w, l(172), t12.yzwx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r46.xyzw, r16.w, l(188), t12.wxyz
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r47.xyzw, r16.w, l(204), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r28.w, r16.w, l(236), t12.xxxx
              add r48.xyz, r34.yzwy, -v6.xyzx
              mul r29.w, r37.x, r37.x
              dp3 r30.w, r48.xyzx, r48.xyzx
              div r29.w, r29.w, r30.w
              min r29.w, r29.w, l(1.000000)
              mad_sat r36.xy, r21.zzzz, r36.xzxx, r36.ywyy
              mul r36.zw, r36.xxxy, r36.xxxy
              mad r36.xy, r36.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
              mul r36.xy, r36.xyxx, r36.zwzz
              mul r29.w, r29.w, r36.x
              mul r29.w, r36.y, r29.w
              mov r38.w, r39.x
              dp4 r36.x, r38.xyzw, r20.xyzw
              mov r48.xyz, r39.yzwy
              mov r48.w, r40.w
              dp4 r36.y, r48.xyzw, r20.xyzw
              div r23.xy, r36.xyxx, r21.zzzz
              lt r21.z, r45.w, l(0.00048828)
              if_nz r21.z
                mov r46.y, r47.x
                mad_sat r36.xy, |r23.xyxx|, r46.zwzz, r46.xyxx
                mul r36.zw, r36.xxxy, r36.xxxy
                mad r36.xy, r36.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
                mul r36.xy, r36.xyxx, r36.zwzz
                mul r21.z, r36.y, r36.x
              else 
                mov r45.w, r46.y
                mul_sat r36.xyzw, |r23.yyxx|, r45.xyzw
                log r36.xyzw, r36.xyzw
                mul r36.xyzw, r36.xyzw, r46.xxxx
                exp r36.xyzw, r36.xyzw
                add r36.xy, r36.zwzz, r36.xyxx
                log r36.xy, r36.xyxx
                mul r36.xy, r36.xyxx, r47.xxxx
                exp r36.xy, r36.xyxx
                mul r30.w, r36.x, r46.z
                mad r31.w, r46.w, r36.y, l(-1.000000)
                mad r30.w, r46.w, r36.y, -r30.w
                div_sat r30.w, r31.w, r30.w
                mul r31.w, r30.w, r30.w
                mad r30.w, r30.w, l(-2.000000), l(3.000000)
                mul r21.z, r30.w, r31.w
              endif 
              mul r27.w, r21.z, r29.w
              and r21.z, r28.w, l(255)
              if_nz r21.z
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyz, r16.w, l(220), t12.xyzx
                dp3 r28.w, r47.yzwy, r23.xyzx
                dp3 r23.x, r36.xyzx, r23.xyzx
                frc r36.x, r28.w
                frc r36.y, r23.x
                iadd r21.z, r21.z, l(-1)
                utof r36.z, r21.z
                sample_l_indexable(texture2darray)(float,float,float,float) r44.xyz, r36.xyzx, t20.xyzw, s2, l(0.000000)
              else 
                mov r44.xyz, l(1.000000,1.000000,1.000000,0)
              endif 
            endif 
            mov r34.yz, r35.yyzy
            mul r34.xyz, r44.xyzx, r34.xyzx
            lt r21.z, l(0.000000), r27.w
            if_nz r21.z
              ubfe r21.z, l(3), l(27), r35.w
              ine r21.z, r21.z, l(1)
              if_nz r21.z
                mad r21.z, |r18.w|, l(-0.200000), l(0.400000)
                mad r24.xyz, r2.xyzx, r21.zzzz, v6.xyzx
                mov r41.xyz, r40.xyzx
                dp4 r21.z, r41.xyzw, r24.xyzw
                dp4 r23.x, r43.xyzw, r24.xyzw
                ge r23.y, r23.x, r21.z
                if_nz r23.y
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.y, r16.w, l(144), t12.xxxx
                  mov r38.w, r39.x
                  dp4 r36.x, r38.xyzw, r24.xyzw
                  mov r40.xyz, r39.yzwy
                  dp4 r36.y, r40.xyzw, r24.xyzw
                  div r24.xy, r36.xyxx, r23.xxxx
                  mad_sat r24.xy, r24.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  mad r24.xy, r24.xyxx, r42.zwzz, r42.xyxx
                  div r16.w, r21.z, r23.x
                  max r16.w, r16.w, l(0.00006104)
                  and r21.z, r35.w, l(0x0000ffff)
                  if_nz r12.z
                    utof r36.z, r21.z
                    mov r23.xy, l(0,0,0,0)
                    loop 
                      ige r28.w, r23.y, l(8)
                      breakc_nz r28.w
                      dp2 r38.x, icb[r23.y + 0].xyxx, r27.xyxx
                      dp2 r38.y, icb[r23.y + 0].yxyy, r27.xzxx
                      mad r36.xy, r38.xyxx, r37.yyyy, r24.xyxx
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r28.w, r36.xyzx, t9.xxxx, s13, r16.w
                      mad r23.x, r28.w, l(0.125000), r23.x
                      iadd r23.y, r23.y, l(1)
                    endloop 
                  else 
                    utof r24.z, r21.z
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.x, r24.xyzx, t9.xxxx, s13, r16.w
                  endif 
                  mul r16.w, r23.x, r23.x
                  mul r16.w, r23.x, r16.w
                else 
                  mov r16.w, l(1.000000)
                endif 
              else 
                mov r16.w, l(1.000000)
              endif 
              mul r16.w, r16.w, r27.w
              lt r21.z, l(0.000000), r16.w
              if_nz r21.z
                mul r21.z, r7.w, r35.x
                mul r21.z, r21.x, r21.z
                ubfe r23.y, l(4), l(16), r35.w
                ult r24.x, l(0), r23.y
                and r24.x, r5.w, r24.x
                if_nz r24.x
                  iadd r23.y, r23.y, cb2[0].x
                  iadd r23.y, r23.y, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r24.x, r23.y, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r23.y, l(68), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r23.y, l(84), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r23.y, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r23.y, l(116), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r23.y, l(132), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r23.y, l(148), t12.xyzw
                  mad r24.y, |r18.w|, l(-0.200000), l(0.400000)
                  mad r25.xyz, r2.xyzx, r24.yyyy, v6.xyzx
                  dp4 r35.x, r36.xyzw, r25.xyzw
                  dp4 r35.y, r37.xyzw, r25.xyzw
                  dp4 r24.y, r38.xyzw, r25.xyzw
                  dp4 r24.z, r39.xyzw, r25.xyzw
                  lt r25.x, r24.z, r24.y
                  div r25.yz, r35.xxyx, r24.zzzz
                  mad r25.yz, r25.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
                  add r25.yz, r41.zzwz, r25.yyzy
                  mul r25.yz, r41.xxyx, r25.yyzy
                  div r35.xy, r24.xxxx, r40.xzxx
                  add r36.xy, -r35.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                  ge r36.xy, r25.yzyy, r36.xyxx
                  ge r35.xy, r35.xyxx, r25.yzyy
                  or r35.xy, r35.xyxx, r36.xyxx
                  or r27.w, r35.y, r35.x
                  or r25.x, r25.x, r27.w
                  if_z r25.x
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r25.x, r23.y, l(28), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xy, r23.y, l(164), t12.xyxx
                    mov_sat r25.yz, r25.yyzy
                    mad r36.xy, r25.yzyy, r40.xzxx, r40.ywyy
                    mul r23.y, r24.z, r35.y
                    mad r24.y, r35.x, r24.z, r24.y
                    div r23.y, r24.y, r23.y
                    max r23.y, r23.y, l(0.00006104)
                    and r24.y, r25.x, l(0x0000ffff)
                    if_nz r12.z
                      utof r25.z, r24.y
                      mov r24.z, l(0)
                      mov r27.w, l(0)
                      loop 
                        ige r28.w, r27.w, l(8)
                        breakc_nz r28.w
                        dp2 r35.x, icb[r27.w + 0].xyxx, r28.xyxx
                        dp2 r35.y, icb[r27.w + 0].yxyy, r28.xzxx
                        mad r25.xy, r35.xyxx, r24.xxxx, r36.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r25.x, r25.xyzx, t9.xxxx, s13, r23.y
                        mad r24.z, r25.x, l(0.125000), r24.z
                        iadd r27.w, r27.w, l(1)
                      endloop 
                    else 
                      utof r36.z, r24.y
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.z, r36.xyzx, t9.xxxx, s13, r23.y
                    endif 
                    mul r23.y, r24.z, r24.z
                    mul r23.y, r24.z, r23.y
                  else 
                    mov r23.y, l(1.000000)
                  endif 
                  mul r16.w, r16.w, r23.y
                else 
                  ubfe r23.y, l(4), l(20), r35.w
                  ult r24.x, l(0), r23.y
                  and r24.x, r8.x, r24.x
                  if_nz r24.x
                    iadd r23.y, r23.y, cb2[0].x
                    iadd r23.y, r23.y, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r24.x, r23.y, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r23.y, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r23.y, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r23.y, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r23.y, l(116), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r23.y, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r23.y, l(148), t12.xyzw
                    mad r24.y, |r18.w|, l(-0.200000), l(0.400000)
                    mad r26.xyz, r2.xyzx, r24.yyyy, v6.xyzx
                    dp4 r25.x, r35.xyzw, r26.xyzw
                    dp4 r25.y, r36.xyzw, r26.xyzw
                    dp4 r24.y, r37.xyzw, r26.xyzw
                    dp4 r25.z, r38.xyzw, r26.xyzw
                    lt r26.x, r25.z, r24.y
                    div r25.xy, r25.xyxx, r25.zzzz
                    mad r25.xy, r25.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r25.xy, r40.zwzz, r25.xyxx
                    mul r25.xy, r40.xyxx, r25.xyxx
                    div r26.yz, r24.xxxx, r39.xxzx
                    add r35.xy, -r26.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
                    ge r35.xy, r25.xyxx, r35.xyxx
                    ge r26.yz, r26.yyzy, r25.xxyx
                    or r26.yz, r26.yyzy, r35.xxyx
                    or r26.y, r26.z, r26.y
                    or r26.x, r26.x, r26.y
                    if_z r26.x
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r26.x, r23.y, l(28), t12.xxxx
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r26.yz, r23.y, l(164), t12.xxyx
                      mov_sat r25.xy, r25.xyxx
                      mad r35.xy, r25.xyxx, r39.xzxx, r39.ywyy
                      mul r23.y, r25.z, r26.z
                      mad r24.y, r26.y, r25.z, r24.y
                      div r23.y, r24.y, r23.y
                      max r23.y, r23.y, l(0.00006104)
                      and r24.y, r26.x, l(0x0000ffff)
                      if_nz r12.z
                        utof r25.z, r24.y
                        mov r26.xy, l(0,0,0,0)
                        loop 
                          ige r26.z, r26.y, l(8)
                          breakc_nz r26.z
                          dp2 r36.x, icb[r26.y + 0].xyxx, r29.xyxx
                          dp2 r36.y, icb[r26.y + 0].yxyy, r29.xzxx
                          mad r25.xy, r36.xyxx, r24.xxxx, r35.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r25.x, r25.xyzx, t9.xxxx, s13, r23.y
                          mad r26.x, r25.x, l(0.125000), r26.x
                          iadd r26.y, r26.y, l(1)
                        endloop 
                      else 
                        utof r35.z, r24.y
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r26.x, r35.xyzx, t9.xxxx, s13, r23.y
                      endif 
                      mul r23.y, r26.x, r26.x
                      mul r23.y, r26.x, r23.y
                    else 
                      mov r23.y, l(1.000000)
                    endif 
                    mul r16.w, r16.w, r23.y
                  endif 
                endif 
                mad r23.y, -r21.x, r8.y, l(1.000000)
                mul r23.y, r23.y, r23.y
                mad r23.y, -r23.y, l(0.620000), l(0.620000)
                add r23.y, -r21.x, r23.y
                mad r23.y, r8.z, r23.y, r21.x
                mul r23.y, r16.w, r23.y
                lt r18.w, l(0.000000), r18.w
                mad r25.xyz, r23.yyyy, r34.xyzx, r19.xyzx
                mad r22.xyz, r22.xyzx, r18.zzzz, r7.xyzx
                dp3 r18.z, r22.xyzx, r22.xyzx
                rsq r18.z, r18.z
                mul r22.xyz, r18.zzzz, r22.xyzx
                dp3 r18.z, r22.xyzx, r7.xyzx
                dp3 r22.x, r2.xyzx, r22.xyzx
                mad r22.y, |r22.x|, r7.w, -|r22.x|
                mad r22.x, |r22.x|, r22.y, l(1.000000)
                mad r21.x, r21.x, r8.w, r9.z
                mul r22.x, r22.x, r22.x
                mul r21.x, r21.x, r22.x
                rcp r21.x, r21.x
                mul r21.x, r21.z, r21.x
                mul r16.w, r16.w, r21.x
                mul r16.w, r16.w, l(0.250000)
                mad r22.xyz, r16.wwww, r34.xyzx, r33.xyzx
                add_sat r18.z, -r18.z, l(1.000000)
                mul r21.x, r18.z, r18.z
                mul r21.x, r21.x, r21.x
                mul r18.z, r18.z, r21.x
                mul r16.w, r16.w, r18.z
                mad r34.xyz, r16.wwww, r34.xyzx, r32.xyzx
                movc r19.xyz, r18.wwww, r25.xyzx, r19.xyzx
                movc r32.xyz, r18.wwww, r34.xyzx, r32.xyzx
                movc r33.xyz, r18.wwww, r22.xyzx, r33.xyzx
              endif 
            endif 
          endif 
          break 
          default 
          break 
        endswitch 
      endif 
    endif 
  endloop 
  mov r11.yzw, r19.xxyz
  mov r30.xyz, r32.xyzx
  mov r31.xyz, r33.xyzx
  iadd r10.w, r10.w, l(32)
endloop 
add r1.w, -r5.y, l(1.000000)
mul r5.w, r1.w, l(5.000000)
mad r7.x, r1.w, l(5.000000), l(-2.500000)
mul_sat r7.x, r7.x, l(0.400000)
mul r7.x, r7.x, l(100.000000)
mad r7.yz, -r1.wwww, l(0.000000, 10.000000, 5.000000, 0.000000), l(0.000000, 6.857410, 7.085000, 0.000000)
exp r7.y, r7.y
mul r7.y, r5.x, r7.y
mul r7.w, r1.w, r5.w
mad r7.z, -r7.w, l(2.015905), r7.z
exp r7.z, r7.z
mul r7.z, r5.x, r7.z
mul r7.yz, r7.yyzy, l(0.000000, 9.136810, 9.708090, 0.000000)
max r7.y, r7.z, r7.y
max r7.y, r7.y, l(1.268160)
mov r8.xy, l(0,0,0,0)
mov r9.w, l(0)
mov r10.yz, l(0,0,1.000000,0)
mov r12.xy, l(0,0,0,0)
mov r14.xy, l(0,0,0,0)
mov r15.xy, l(0,0,0,0)
mov r17.x, l(1.000000)
mov r18.xyzw, l(0,0,0,0)
mov r19.yzw, l(0,0,0,0)
mov r7.zw, l(0,0,0,0)
loop 
  uge r8.w, r7.w, cb2[0].y
  breakc_nz r8.w
  ushr r8.z, r7.w, l(5)
  iadd r9.xyz, r8.xyzx, r16.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r8.z, r9.xyzw, t7.yzxw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r20.xyzw, r7.w, l(0), t15.wxyz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r21.xyzw, r7.w, l(16), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r22.xyzw, r7.w, l(32), t15.yxwz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r23.xyzw, r7.w, l(48), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r7.w, l(64), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r7.w, l(80), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r9.xy, r7.w, l(96), t15.xyxx
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r7.w, l(116), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r7.w, l(132), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r7.w, l(148), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r7.w, l(164), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r7.w, l(180), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r7.w, l(196), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xy, r7.w, l(212), t15.xyxx
  add r35.xyz, -r20.yzwy, v6.xyzx
  dp3 r8.w, r35.xyzx, r35.xyzx
  sqrt r8.w, r8.w
  ge r8.w, cb2[54].y, r8.w
  and r9.z, r26.y, l(0x0000ffff)
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r9.z, l(0), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r9.z, l(16), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r38.xyzw, r9.z, l(32), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r39.xyzw, r9.z, l(48), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r40.xyzw, r9.z, l(64), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r41.xyzw, r9.z, l(80), t16.xyzw
  dp3 r10.w, r36.xyzx, r35.xyzx
  add_sat r10.w, r36.w, r10.w
  dp3 r11.x, r37.xyzx, r35.xyzx
  add_sat r11.x, r37.w, r11.x
  mul r10.w, r10.w, r11.x
  dp3 r11.x, r38.xyzx, r35.xyzx
  add_sat r11.x, r38.w, r11.x
  mul r10.w, r10.w, r11.x
  dp3 r11.x, r39.xyzx, r35.xyzx
  add_sat r11.x, r39.w, r11.x
  mul r10.w, r10.w, r11.x
  dp3 r11.x, r40.xyzx, r35.xyzx
  add_sat r11.x, r40.w, r11.x
  mul r10.w, r10.w, r11.x
  dp3 r11.x, r41.xyzx, r35.xyzx
  add_sat r11.x, r41.w, r11.x
  mul r10.x, r10.w, r11.x
  and r10.w, r9.x, l(1)
  movc r10.xw, r10.wwww, r10.xxxy, r10.zzzx
  mov r36.xy, r26.zwzz
  mov r36.z, r27.z
  dp3 r11.x, r13.xyzx, r36.xyzx
  dp3 r12.w, r35.xyzx, r36.xyzx
  add r12.w, -r27.w, r12.w
  ge r14.w, r12.w, l(0.000000)
  max r12.w, r7.x, |r12.w|
  movc r12.w, r14.w, r12.w, -r12.w
  max r11.x, -r11.x, l(0.00000010)
  div r11.x, r12.w, r11.x
  min r11.x, |r11.x|, l(131072.000000)
  mov r27.z, r28.z
  dp3 r12.w, r13.xyzx, r27.xyzx
  dp3 r14.w, r35.xyzx, r27.xyzx
  add r14.w, -r28.w, r14.w
  ge r15.w, r14.w, l(0.000000)
  max r14.w, r7.x, |r14.w|
  movc r14.w, r15.w, r14.w, -r14.w
  max r12.w, -r12.w, l(0.00000010)
  div r12.w, r14.w, r12.w
  min r11.x, r11.x, |r12.w|
  mov r28.z, r29.z
  dp3 r12.w, r13.xyzx, r28.xyzx
  dp3 r14.w, r35.xyzx, r28.xyzx
  add r14.w, -r29.w, r14.w
  ge r15.w, r14.w, l(0.000000)
  max r14.w, r7.x, |r14.w|
  movc r14.w, r15.w, r14.w, -r14.w
  max r12.w, -r12.w, l(0.00000010)
  div r12.w, r14.w, r12.w
  min r11.x, r11.x, |r12.w|
  mov r29.z, r32.z
  dp3 r12.w, r13.xyzx, r29.xyzx
  dp3 r14.w, r35.xyzx, r29.xyzx
  add r14.w, -r32.w, r14.w
  ge r15.w, r14.w, l(0.000000)
  max r14.w, r7.x, |r14.w|
  movc r14.w, r15.w, r14.w, -r14.w
  max r12.w, -r12.w, l(0.00000010)
  div r12.w, r14.w, r12.w
  min r11.x, r11.x, |r12.w|
  mov r32.z, r33.x
  dp3 r12.w, r13.xyzx, r32.xyzx
  dp3 r14.w, r35.xyzx, r32.xyzx
  add r14.w, -r33.y, r14.w
  ge r15.w, r14.w, l(0.000000)
  max r14.w, r7.x, |r14.w|
  movc r14.w, r15.w, r14.w, -r14.w
  max r12.w, -r12.w, l(0.00000010)
  div r12.w, r14.w, r12.w
  min r11.x, r11.x, |r12.w|
  mov r34.zw, r33.zzzw
  dp3 r12.w, r13.zxyz, r34.xzwx
  dp3 r14.w, r35.zxyz, r34.xzwx
  add r14.w, -r34.y, r14.w
  ge r15.w, r14.w, l(0.000000)
  max r14.w, r7.x, |r14.w|
  movc r14.w, r15.w, r14.w, -r14.w
  max r12.w, -r12.w, l(0.00000010)
  div r12.w, r14.w, r12.w
  min r11.x, r11.x, |r12.w|
  mov r27.x, r23.w
  mov r27.yz, r24.zzwz
  add r27.xyz, r35.xyzx, r27.xyzx
  mad r27.xyz, r13.xyzx, r11.xxxx, r27.xyzx
  dp3 r12.w, r27.xyzx, r27.xyzx
  sqrt r12.w, r12.w
  div r11.x, r11.x, r12.w
  add r11.x, r11.x, r11.x
  sqrt r11.x, r11.x
  mad r11.x, r1.w, l(5.000000), r11.x
  add r11.x, r11.x, l(-0.844800)
  mov r20.y, r21.z
  mov r20.z, r22.x
  dp3 r28.x, r27.xyzx, r20.xyzx
  mov r29.xy, r21.xwxx
  mov r29.z, r22.w
  dp3 r28.y, r27.xyzx, r29.xyzx
  mov r22.x, r21.y
  dp3 r28.z, r27.xyzx, r22.xyzx
  ubfe r17.zw, l(0, 0, 6, 9), l(0, 0, 25, 16), r26.yyyy
  utof r28.w, r17.w
  sample_l_indexable(texturecubearray)(float,float,float,float) r21.xyz, r28.xyzw, t8.xyzw, s2, r11.x
  and r26.yzw, r21.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
  ieq r26.yzw, r26.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
  or r11.x, r26.z, r26.y
  or r11.x, r26.w, r11.x
  movc r21.xyz, r11.xxxx, l(1.000000,1.000000,0,0), r21.xyzx
  dp3 r27.x, r35.xyzx, r20.xyzx
  dp3 r27.y, r35.xyzx, r29.xyzx
  dp3 r27.z, r35.xyzx, r22.xyzx
  mad_sat r23.xyz, r27.xyzx, r23.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mov r24.z, r25.x
  mad r23.xyz, r23.xyzx, r24.xyzx, r25.yzwy
  dp3 r28.x, r2.xyzx, r20.xyzx
  dp3 r28.y, r2.xyzx, r29.xyzx
  dp3 r28.z, r2.xyzx, r22.xyzx
  lt r20.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r28.xyzx
  movc r12.z, r20.x, l(0), l(0.500000)
  add r22.xyz, r12.xyzx, r23.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r22.xyz, r22.xyzx, t17.xyzw, s4, l(0.000000)
  movc r14.z, r20.y, l(0), l(0.500000)
  add r20.xyw, r14.xyxz, r23.xyxz
  sample_l_indexable(texture3d)(float,float,float,float) r20.xyw, r20.xywx, t18.xywz, s4, l(0.000000)
  movc r15.z, r20.z, l(0), l(0.500000)
  add r23.xyz, r15.xyzx, r23.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r23.xyz, r23.xyzx, t19.xyzw, s4, l(0.000000)
  mul r24.xyz, r28.xyzx, r28.xyzx
  sample_l_indexable(texturecubearray)(float,float,float,float) r25.xyz, r28.xyzw, t8.xyzw, s2, l(6.000000)
  and r26.yzw, r25.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
  ieq r26.yzw, r26.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
  or r11.x, r26.z, r26.y
  or r11.x, r26.w, r11.x
  movc r25.xyz, r11.xxxx, l(1.000000,1.000000,0,0), r25.xyzx
  mov r27.xyzw, r18.xyzw
  mov r26.yzw, r19.yyzw
  mov r11.x, r7.z
  mov r12.z, r8.z
  loop 
    breakc_z r12.z
    firstbit_lo r12.w, r12.z
    ishl r12.w, l(1), r12.w
    and r14.z, r12.w, r12.z
    if_nz r14.z
      not r12.w, r12.w
      and r12.z, r12.w, r12.z
      if_nz r8.w
        mov r12.w, r9.x
        mov r28.xy, r10.xwxx
        mov r14.z, l(1)
        loop 
          ige r14.w, r14.z, r17.z
          breakc_nz r14.w
          iadd r14.w, r9.z, r14.z
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r14.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r14.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r14.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r14.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r14.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r14.w, l(80), t16.xyzw
          dp3 r14.w, r29.xyzx, r35.xyzx
          add_sat r14.w, r29.w, r14.w
          mul r14.w, r14.w, r28.x
          dp3 r15.z, r32.xyzx, r35.xyzx
          add_sat r15.z, r32.w, r15.z
          mul r14.w, r14.w, r15.z
          dp3 r15.z, r33.xyzx, r35.xyzx
          add_sat r15.z, r33.w, r15.z
          mul r14.w, r14.w, r15.z
          dp3 r15.z, r34.xyzx, r35.xyzx
          add_sat r15.z, r34.w, r15.z
          mul r14.w, r14.w, r15.z
          dp3 r15.z, r36.xyzx, r35.xyzx
          add_sat r15.z, r36.w, r15.z
          mul r14.w, r14.w, r15.z
          dp3 r15.z, r37.xyzx, r35.xyzx
          add_sat r15.z, r37.w, r15.z
          mul r28.x, r14.w, r15.z
          ushr r15.w, r12.w, l(2)
          ubfe r16.w, l(1), l(2), r12.w
          and r17.w, r15.w, l(2)
          max r20.z, r28.x, r28.y
          mad r14.w, -r14.w, r15.z, l(1.000000)
          mul r14.w, r14.w, r28.y
          movc r17.y, r17.w, r14.w, r20.z
          movc r28.xy, r16.wwww, r28.xyxx, r17.xyxx
          iadd r14.z, r14.z, l(1)
          mov r12.w, r15.w
        endloop 
        mov_sat r28.y, r28.y
        mul r12.w, r9.y, r28.y
        lt r14.z, l(0.000000), r12.w
        if_nz r14.z
          mad r29.z, r28.y, r9.y, r26.w
          mul r12.w, r26.x, r12.w
          mul r28.xzw, r12.wwww, r24.xxyz
          mul r32.xyz, r20.xywx, r28.zzzz
          mad r32.xyz, r22.xyzx, r28.xxxx, r32.xyzx
          mad r28.xzw, r23.xxyz, r28.wwww, r32.xxyz
          mul r32.xyz, r25.xyzx, r28.xzwx
          dp3 r14.z, r32.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r32.xyz, r28.xzwx, r25.xyzx, r27.xyzx
          mul r14.w, r7.y, r14.z
          mul r28.xzw, r12.wwww, r21.xxyz
          dp3 r12.w, r28.xzwx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r12.w, r7.y, r14.z, r12.w
          div r12.w, r14.w, r12.w
          mov r33.x, r27.w
          mov r33.yz, r26.yyzy
          mad r29.xyw, r28.zwzx, r12.wwww, r33.yzyx
          mov r32.w, r29.w
        else 
          mov r32.xyzw, r27.xyzw
          mov r29.xyz, r26.yzwy
        endif 
        mov r11.x, l(-1)
        mov r27.xyzw, r32.xyzw
        mov r26.yzw, r29.xxyz
        break 
      endif 
    endif 
  endloop 
  if_nz r11.x
    mov r18.xyzw, r27.xyzw
    mov r19.yzw, r26.yyzw
    mov r7.z, l(-1)
    break 
  endif 
  iadd r7.w, r7.w, l(32)
  mov r18.xyzw, r27.xyzw
  mov r19.yzw, r26.yyzw
  mov r7.z, r11.x
endloop 
if_z r7.z
  iadd r7.z, cb2[0].y, -cb2[58].x
  and r7.w, r7.z, l(-32)
  iadd r8.x, -r7.w, r7.z
  and r8.y, cb2[0].y, l(-32)
  iadd r8.z, -r8.y, cb2[0].y
  mov r9.xy, l(0,0,0,0)
  mov r10.w, l(0)
  mov r12.yz, l(0,0,1.000000,0)
  mov r14.xy, l(0,0,0,0)
  mov r15.x, l(1.000000)
  mov r17.xy, l(0,0,0,0)
  mov r20.xy, l(0,0,0,0)
  mov r21.xyzw, r18.xyzw
  mov r22.yzw, r19.yyzw
  mov r8.w, r7.w
  loop 
    uge r9.w, r8.w, cb2[0].y
    breakc_nz r9.w
    ushr r9.z, r8.w, l(5)
    iadd r10.xyz, r9.xyzx, r16.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r9.z, r10.xyzw, t7.yzxw
    ieq r9.w, r7.w, r8.w
    bfi r10.x, r8.x, l(0), l(0), r9.z
    movc r9.z, r9.w, r10.x, r9.z
    ieq r9.w, r8.y, r8.w
    ubfe r10.x, r8.z, l(0), r9.z
    movc r9.z, r9.w, r10.x, r9.z
    iadd r9.w, r8.w, cb2[0].x
    mov r23.xyzw, r21.xyzw
    mov r24.xyz, r22.yzwy
    mov r10.x, r9.z
    loop 
      breakc_z r10.x
      firstbit_lo r10.y, r10.x
      ishl r10.z, l(1), r10.y
      and r11.x, r10.z, r10.x
      if_nz r11.x
        xor r10.x, r10.z, r10.x
        iadd r10.z, r9.w, r10.y
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r25.xyzw, r10.z, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r26.xy, r10.z, l(16), t11.xyxx
        add r25.xyz, r25.xyzx, -v6.xyzx
        mov r26.z, r25.w
        lt r25.xyz, |r25.xyzx|, r26.zxyz
        and r10.z, r25.y, r25.x
        and r10.z, r25.z, r10.z
        if_nz r10.z
          iadd r10.y, r8.w, r10.y
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r10.y, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r15.zw, r10.y, l(96), t15.xxxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r10.y, l(116), t15.zwxy
          add r27.xyz, -r25.yzwy, v6.xyzx
          and r10.z, r26.w, l(0x0000ffff)
          ubfe r11.x, l(6), l(25), r26.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r10.z, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r10.z, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r10.z, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r10.z, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r10.z, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r10.z, l(80), t16.xyzw
          dp3 r12.w, r28.xyzx, r27.xyzx
          add_sat r12.w, r28.w, r12.w
          dp3 r14.w, r29.xyzx, r27.xyzx
          add_sat r14.w, r29.w, r14.w
          mul r12.w, r12.w, r14.w
          dp3 r14.w, r32.xyzx, r27.xyzx
          add_sat r14.w, r32.w, r14.w
          mul r12.w, r12.w, r14.w
          dp3 r14.w, r33.xyzx, r27.xyzx
          add_sat r14.w, r33.w, r14.w
          mul r12.w, r12.w, r14.w
          dp3 r14.w, r34.xyzx, r27.xyzx
          add_sat r14.w, r34.w, r14.w
          mul r12.w, r12.w, r14.w
          dp3 r14.w, r35.xyzx, r27.xyzx
          add_sat r14.w, r35.w, r14.w
          mul r12.x, r12.w, r14.w
          and r12.w, r15.z, l(1)
          movc r12.xw, r12.wwww, r12.xxxy, r12.zzzx
          mov r14.w, r15.z
          mov r28.xy, r12.xwxx
          mov r16.w, l(1)
          loop 
            ige r17.w, r16.w, r11.x
            breakc_nz r17.w
            iadd r17.w, r10.z, r16.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r17.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r17.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r17.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r17.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r17.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r17.w, l(80), t16.xyzw
            dp3 r17.w, r29.xyzx, r27.xyzx
            add_sat r17.w, r29.w, r17.w
            mul r17.w, r17.w, r28.x
            dp3 r20.w, r32.xyzx, r27.xyzx
            add_sat r20.w, r32.w, r20.w
            mul r17.w, r17.w, r20.w
            dp3 r20.w, r33.xyzx, r27.xyzx
            add_sat r20.w, r33.w, r20.w
            mul r17.w, r17.w, r20.w
            dp3 r20.w, r34.xyzx, r27.xyzx
            add_sat r20.w, r34.w, r20.w
            mul r17.w, r17.w, r20.w
            dp3 r20.w, r35.xyzx, r27.xyzx
            add_sat r20.w, r35.w, r20.w
            mul r17.w, r17.w, r20.w
            dp3 r20.w, r36.xyzx, r27.xyzx
            add_sat r20.w, r36.w, r20.w
            mul r28.x, r17.w, r20.w
            ushr r25.w, r14.w, l(2)
            ubfe r27.w, l(1), l(2), r14.w
            and r28.z, r25.w, l(2)
            max r28.w, r28.x, r28.y
            mad r17.w, -r17.w, r20.w, l(1.000000)
            mul r17.w, r17.w, r28.y
            movc r15.y, r28.z, r17.w, r28.w
            movc r28.xy, r27.wwww, r28.xyxx, r15.xyxx
            iadd r16.w, r16.w, l(1)
            mov r14.w, r25.w
          endloop 
          mov_sat r28.y, r28.y
          mul r10.z, r15.w, r28.y
          lt r11.x, l(0.000000), r10.z
          if_nz r11.x
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r10.y, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r10.y, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r10.y, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r10.y, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r10.y, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r10.y, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r10.y, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r10.y, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xyzw, r10.y, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r40.xyzw, r10.y, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r41.xy, r10.y, l(212), t15.xyxx
            mad r24.z, r28.y, r15.w, r24.z
            mul r10.y, r26.z, r10.z
            mov r26.z, r36.z
            dp3 r10.z, r13.xyzx, r26.xyzx
            dp3 r11.x, r27.xyzx, r26.xyzx
            add r11.x, -r36.w, r11.x
            ge r12.x, r11.x, l(0.000000)
            max r11.x, r7.x, |r11.x|
            movc r11.x, r12.x, r11.x, -r11.x
            max r10.z, -r10.z, l(0.00000010)
            div r10.z, r11.x, r10.z
            min r10.z, |r10.z|, l(131072.000000)
            mov r36.z, r37.z
            dp3 r11.x, r13.xyzx, r36.xyzx
            dp3 r12.x, r27.xyzx, r36.xyzx
            add r12.x, -r37.w, r12.x
            ge r12.w, r12.x, l(0.000000)
            max r12.x, r7.x, |r12.x|
            movc r12.x, r12.w, r12.x, -r12.x
            max r11.x, -r11.x, l(0.00000010)
            div r11.x, r12.x, r11.x
            min r10.z, r10.z, |r11.x|
            mov r37.z, r38.z
            dp3 r11.x, r13.xyzx, r37.xyzx
            dp3 r12.x, r27.xyzx, r37.xyzx
            add r12.x, -r38.w, r12.x
            ge r12.w, r12.x, l(0.000000)
            max r12.x, r7.x, |r12.x|
            movc r12.x, r12.w, r12.x, -r12.x
            max r11.x, -r11.x, l(0.00000010)
            div r11.x, r12.x, r11.x
            min r10.z, r10.z, |r11.x|
            mov r38.z, r39.z
            dp3 r11.x, r13.xyzx, r38.xyzx
            dp3 r12.x, r27.xyzx, r38.xyzx
            add r12.x, -r39.w, r12.x
            ge r12.w, r12.x, l(0.000000)
            max r12.x, r7.x, |r12.x|
            movc r12.x, r12.w, r12.x, -r12.x
            max r11.x, -r11.x, l(0.00000010)
            div r11.x, r12.x, r11.x
            min r10.z, r10.z, |r11.x|
            mov r39.z, r40.x
            dp3 r11.x, r13.xyzx, r39.xyzx
            dp3 r12.x, r27.xyzx, r39.xyzx
            add r12.x, -r40.y, r12.x
            ge r12.w, r12.x, l(0.000000)
            max r12.x, r7.x, |r12.x|
            movc r12.x, r12.w, r12.x, -r12.x
            max r11.x, -r11.x, l(0.00000010)
            div r11.x, r12.x, r11.x
            min r10.z, r10.z, |r11.x|
            mov r41.zw, r40.zzzw
            dp3 r11.x, r13.zxyz, r41.xzwx
            dp3 r12.x, r27.zxyz, r41.xzwx
            add r12.x, -r41.y, r12.x
            ge r12.w, r12.x, l(0.000000)
            max r12.x, r7.x, |r12.x|
            movc r12.x, r12.w, r12.x, -r12.x
            max r11.x, -r11.x, l(0.00000010)
            div r11.x, r12.x, r11.x
            min r10.z, r10.z, |r11.x|
            mov r26.x, r33.w
            mov r26.yz, r34.zzwz
            add r15.yzw, r27.xxyz, r26.xxyz
            mad r15.yzw, r13.xxyz, r10.zzzz, r15.yyzw
            dp3 r11.x, r15.yzwy, r15.yzwy
            sqrt r11.x, r11.x
            div r10.z, r10.z, r11.x
            add r10.z, r10.z, r10.z
            sqrt r10.z, r10.z
            mad r10.z, r1.w, l(5.000000), r10.z
            add r10.z, r10.z, l(-0.844800)
            mov r25.y, r29.z
            mov r25.z, r32.x
            dp3 r36.x, r15.yzwy, r25.xyzx
            mov r26.xy, r29.xwxx
            mov r26.z, r32.w
            dp3 r36.y, r15.yzwy, r26.xyzx
            mov r32.x, r29.y
            dp3 r36.z, r15.yzwy, r32.xyzx
            ubfe r11.x, l(9), l(16), r26.w
            utof r36.w, r11.x
            sample_l_indexable(texturecubearray)(float,float,float,float) r15.yzw, r36.xyzw, t8.wxyz, s2, r10.z
            and r28.xzw, r15.yyzw, l(0x7fffffff, 0, 0x7fffffff, 0x7fffffff)
            ieq r28.xzw, r28.xxzw, l(0x7f800000, 0, 0x7f800000, 0x7f800000)
            or r10.z, r28.z, r28.x
            or r10.z, r28.w, r10.z
            movc r15.yzw, r10.zzzz, l(0,1.000000,1.000000,0), r15.yyzw
            dp3 r29.x, r27.xyzx, r25.xyzx
            dp3 r29.y, r27.xyzx, r26.xyzx
            dp3 r29.z, r27.xyzx, r32.xyzx
            mad_sat r27.xyz, r29.xyzx, r33.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
            mov r34.z, r35.x
            mad r27.xyz, r27.xyzx, r34.xyzx, r35.yzwy
            dp3 r36.x, r2.xyzx, r25.xyzx
            dp3 r36.y, r2.xyzx, r26.xyzx
            dp3 r36.z, r2.xyzx, r32.xyzx
            lt r25.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r36.xyzx
            movc r14.z, r25.x, l(0), l(0.500000)
            add r26.xyz, r14.xyzx, r27.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r26.xyz, r26.xyzx, t17.xyzw, s4, l(0.000000)
            mul r28.xzw, r36.xxyz, r36.xxyz
            mul r28.xzw, r10.yyyy, r28.xxzw
            movc r17.z, r25.y, l(0), l(0.500000)
            add r25.xyw, r17.xyxz, r27.xyxz
            sample_l_indexable(texture3d)(float,float,float,float) r25.xyw, r25.xywx, t18.xywz, s4, l(0.000000)
            mul r25.xyw, r28.zzzz, r25.xyxw
            mad r25.xyw, r26.xyxz, r28.xxxx, r25.xyxw
            movc r20.z, r25.z, l(0), l(0.500000)
            add r26.xyz, r20.xyzx, r27.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r26.xyz, r26.xyzx, t19.xyzw, s4, l(0.000000)
            mad r25.xyz, r26.xyzx, r28.wwww, r25.xywx
            sample_l_indexable(texturecubearray)(float,float,float,float) r26.xyz, r36.xyzw, t8.xyzw, s2, l(6.000000)
            and r27.xyz, r26.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
            ieq r27.xyz, r27.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
            or r10.z, r27.y, r27.x
            or r10.z, r27.z, r10.z
            movc r26.xyz, r10.zzzz, l(1.000000,1.000000,0,0), r26.xyzx
            mul r27.xyz, r25.xyzx, r26.xyzx
            dp3 r10.z, r27.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r23.xyz, r25.xyzx, r26.xyzx, r23.xyzx
            mul r11.x, r7.y, r10.z
            mul r15.yzw, r10.yyyy, r15.yyzw
            dp3 r10.y, r15.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r10.y, r7.y, r10.z, r10.y
            div r10.y, r11.x, r10.y
            mov r25.x, r23.w
            mov r25.yz, r24.xxyx
            mad r24.xyw, r15.zwzy, r10.yyyy, r25.yzyx
            mov r23.w, r24.w
          endif 
        endif 
      endif 
    endloop 
    mov r21.xyzw, r23.xyzw
    mov r22.yzw, r24.xxyz
    iadd r8.w, r8.w, l(32)
  endloop 
  lt r8.y, r22.w, l(1.000000)
  if_nz r8.y
    mov r9.xy, l(0,0,0,0)
    mov r10.w, l(0)
    mov r12.yz, l(0,0,1.000000,0)
    mov r14.xy, l(0,0,0,0)
    mov r15.x, l(1.000000)
    mov r17.xy, l(0,0,0,0)
    mov r20.xy, l(0,0,0,0)
    mov r23.x, r21.w
    mov r23.yzw, r22.yyzw
    mov r8.yzw, r21.xxyz
    mov r9.w, r22.w
    mov r11.x, l(0)
    loop 
      uge r12.w, r11.x, r7.z
      breakc_nz r12.w
      ushr r9.z, r11.x, l(5)
      iadd r10.xyz, r9.xyzx, r16.xyzx
      ld_indexable(texture2darray)(uint,uint,uint,uint) r9.z, r10.xyzw, t7.yzxw
      ieq r10.x, r7.w, r11.x
      ubfe r10.y, r8.x, l(0), r9.z
      movc r9.z, r10.x, r10.y, r9.z
      iadd r10.x, r11.x, cb2[0].x
      mov r24.xyzw, r23.xyzw
      mov r25.xyz, r8.yzwy
      mov r10.y, r9.w
      mov r10.z, r9.z
      loop 
        breakc_z r10.z
        firstbit_lo r12.w, r10.z
        ishl r14.w, l(1), r12.w
        and r15.z, r10.z, r14.w
        if_nz r15.z
          xor r10.z, r10.z, r14.w
          iadd r14.w, r10.x, r12.w
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r26.xyzw, r14.w, l(0), t11.xyzw
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r27.xy, r14.w, l(16), t11.xyxx
          add r26.xyz, r26.xyzx, -v6.xyzx
          mov r27.z, r26.w
          lt r26.xyz, |r26.xyzx|, r27.zxyz
          and r14.w, r26.y, r26.x
          and r14.w, r26.z, r14.w
          if_nz r14.w
            iadd r12.w, r11.x, r12.w
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r12.w, l(0), t15.wxyz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r15.zw, r12.w, l(96), t15.xxxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r12.w, l(116), t15.zwxy
            add r28.xyz, -r26.yzwy, v6.xyzx
            and r14.w, r27.w, l(0x0000ffff)
            ubfe r16.w, l(6), l(25), r27.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r14.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r14.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r14.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r14.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r14.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r14.w, l(80), t16.xyzw
            dp3 r17.w, r29.xyzx, r28.xyzx
            add_sat r17.w, r29.w, r17.w
            dp3 r19.w, r32.xyzx, r28.xyzx
            add_sat r19.w, r32.w, r19.w
            mul r17.w, r17.w, r19.w
            dp3 r19.w, r33.xyzx, r28.xyzx
            add_sat r19.w, r33.w, r19.w
            mul r17.w, r17.w, r19.w
            dp3 r19.w, r34.xyzx, r28.xyzx
            add_sat r19.w, r34.w, r19.w
            mul r17.w, r17.w, r19.w
            dp3 r19.w, r35.xyzx, r28.xyzx
            add_sat r19.w, r35.w, r19.w
            mul r17.w, r17.w, r19.w
            dp3 r19.w, r36.xyzx, r28.xyzx
            add_sat r19.w, r36.w, r19.w
            mul r12.x, r17.w, r19.w
            and r17.w, r15.z, l(1)
            movc r29.xy, r17.wwww, r12.xyxx, r12.zxzz
            mov r12.x, r15.z
            mov r32.xy, r29.xyxx
            mov r17.w, l(1)
            loop 
              ige r19.w, r17.w, r16.w
              breakc_nz r19.w
              iadd r19.w, r14.w, r17.w
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r19.w, l(0), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r19.w, l(16), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r19.w, l(32), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r19.w, l(48), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r19.w, l(64), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r38.xyzw, r19.w, l(80), t16.xyzw
              dp3 r19.w, r33.xyzx, r28.xyzx
              add_sat r19.w, r33.w, r19.w
              mul r19.w, r19.w, r32.x
              dp3 r20.w, r34.xyzx, r28.xyzx
              add_sat r20.w, r34.w, r20.w
              mul r19.w, r19.w, r20.w
              dp3 r20.w, r35.xyzx, r28.xyzx
              add_sat r20.w, r35.w, r20.w
              mul r19.w, r19.w, r20.w
              dp3 r20.w, r36.xyzx, r28.xyzx
              add_sat r20.w, r36.w, r20.w
              mul r19.w, r19.w, r20.w
              dp3 r20.w, r37.xyzx, r28.xyzx
              add_sat r20.w, r37.w, r20.w
              mul r19.w, r19.w, r20.w
              dp3 r20.w, r38.xyzx, r28.xyzx
              add_sat r20.w, r38.w, r20.w
              mul r32.x, r19.w, r20.w
              ushr r25.w, r12.x, l(2)
              ubfe r26.w, l(1), l(2), r12.x
              and r28.w, r25.w, l(2)
              max r29.z, r32.x, r32.y
              mad r19.w, -r19.w, r20.w, l(1.000000)
              mul r19.w, r19.w, r32.y
              movc r15.y, r28.w, r19.w, r29.z
              movc r32.xy, r26.wwww, r32.xyxx, r15.xyxx
              iadd r17.w, r17.w, l(1)
              mov r12.x, r25.w
            endloop 
            add_sat r12.x, -r10.y, r32.y
            mul r14.w, r15.w, r12.x
            lt r15.y, l(0.000000), r14.w
            if_nz r15.y
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r12.w, l(16), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r12.w, l(32), t15.yxwz
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r12.w, l(48), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r12.w, l(64), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r12.w, l(80), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r12.w, l(132), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r12.w, l(148), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xyzw, r12.w, l(164), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r40.xyzw, r12.w, l(180), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r41.xyzw, r12.w, l(196), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r42.xy, r12.w, l(212), t15.xyxx
              mad r24.w, r12.x, r15.w, r24.w
              mul r12.x, r27.z, r14.w
              mov r27.z, r37.z
              dp3 r12.w, r13.xyzx, r27.xyzx
              dp3 r14.w, r28.xyzx, r27.xyzx
              add r14.w, -r37.w, r14.w
              ge r15.y, r14.w, l(0.000000)
              max r14.w, r7.x, |r14.w|
              movc r14.w, r15.y, r14.w, -r14.w
              max r12.w, -r12.w, l(0.00000010)
              div r12.w, r14.w, r12.w
              min r12.w, |r12.w|, l(131072.000000)
              mov r37.z, r38.z
              dp3 r14.w, r13.xyzx, r37.xyzx
              dp3 r15.y, r28.xyzx, r37.xyzx
              add r15.y, -r38.w, r15.y
              ge r15.z, r15.y, l(0.000000)
              max r15.y, r7.x, |r15.y|
              movc r15.y, r15.z, r15.y, -r15.y
              max r14.w, -r14.w, l(0.00000010)
              div r14.w, r15.y, r14.w
              min r12.w, r12.w, |r14.w|
              mov r38.z, r39.z
              dp3 r14.w, r13.xyzx, r38.xyzx
              dp3 r15.y, r28.xyzx, r38.xyzx
              add r15.y, -r39.w, r15.y
              ge r15.z, r15.y, l(0.000000)
              max r15.y, r7.x, |r15.y|
              movc r15.y, r15.z, r15.y, -r15.y
              max r14.w, -r14.w, l(0.00000010)
              div r14.w, r15.y, r14.w
              min r12.w, r12.w, |r14.w|
              mov r39.z, r40.z
              dp3 r14.w, r13.xyzx, r39.xyzx
              dp3 r15.y, r28.xyzx, r39.xyzx
              add r15.y, -r40.w, r15.y
              ge r15.z, r15.y, l(0.000000)
              max r15.y, r7.x, |r15.y|
              movc r15.y, r15.z, r15.y, -r15.y
              max r14.w, -r14.w, l(0.00000010)
              div r14.w, r15.y, r14.w
              min r12.w, r12.w, |r14.w|
              mov r40.z, r41.x
              dp3 r14.w, r13.xyzx, r40.xyzx
              dp3 r15.y, r28.xyzx, r40.xyzx
              add r15.y, -r41.y, r15.y
              ge r15.z, r15.y, l(0.000000)
              max r15.y, r7.x, |r15.y|
              movc r15.y, r15.z, r15.y, -r15.y
              max r14.w, -r14.w, l(0.00000010)
              div r14.w, r15.y, r14.w
              min r12.w, r12.w, |r14.w|
              mov r42.zw, r41.zzzw
              dp3 r14.w, r13.zxyz, r42.xzwx
              dp3 r15.y, r28.zxyz, r42.xzwx
              add r15.y, -r42.y, r15.y
              ge r15.z, r15.y, l(0.000000)
              max r15.y, r7.x, |r15.y|
              movc r15.y, r15.z, r15.y, -r15.y
              max r14.w, -r14.w, l(0.00000010)
              div r14.w, r15.y, r14.w
              min r12.w, r12.w, |r14.w|
              mov r27.x, r34.w
              mov r27.yz, r35.zzwz
              add r15.yzw, r28.xxyz, r27.xxyz
              mad r15.yzw, r13.xxyz, r12.wwww, r15.yyzw
              dp3 r14.w, r15.yzwy, r15.yzwy
              sqrt r14.w, r14.w
              div r12.w, r12.w, r14.w
              add r12.w, r12.w, r12.w
              sqrt r12.w, r12.w
              mad r12.w, r1.w, l(5.000000), r12.w
              add r12.w, r12.w, l(-0.844800)
              mov r26.y, r29.z
              mov r26.z, r33.x
              dp3 r37.x, r15.yzwy, r26.xyzx
              mov r27.xy, r29.xwxx
              mov r27.z, r33.w
              dp3 r37.y, r15.yzwy, r27.xyzx
              mov r33.x, r29.y
              dp3 r37.z, r15.yzwy, r33.xyzx
              ubfe r14.w, l(9), l(16), r27.w
              utof r37.w, r14.w
              sample_l_indexable(texturecubearray)(float,float,float,float) r15.yzw, r37.xyzw, t8.wxyz, s2, r12.w
              and r29.xyz, r15.yzwy, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
              ieq r29.xyz, r29.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
              or r12.w, r29.y, r29.x
              or r12.w, r29.z, r12.w
              movc r15.yzw, r12.wwww, l(0,1.000000,1.000000,0), r15.yyzw
              dp3 r29.x, r28.xyzx, r26.xyzx
              dp3 r29.y, r28.xyzx, r27.xyzx
              dp3 r29.z, r28.xyzx, r33.xyzx
              mad_sat r28.xyz, r29.xyzx, r34.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
              mov r35.z, r36.x
              mad r28.xyz, r28.xyzx, r35.xyzx, r36.yzwy
              dp3 r37.x, r2.xyzx, r26.xyzx
              dp3 r37.y, r2.xyzx, r27.xyzx
              dp3 r37.z, r2.xyzx, r33.xyzx
              lt r26.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r37.xyzx
              movc r14.z, r26.x, l(0), l(0.500000)
              add r27.xyz, r14.xyzx, r28.xyzx
              sample_l_indexable(texture3d)(float,float,float,float) r27.xyz, r27.xyzx, t17.xyzw, s4, l(0.000000)
              mul r29.xyz, r37.xyzx, r37.xyzx
              mul r29.xyz, r12.xxxx, r29.xyzx
              movc r17.z, r26.y, l(0), l(0.500000)
              add r26.xyw, r17.xyxz, r28.xyxz
              sample_l_indexable(texture3d)(float,float,float,float) r26.xyw, r26.xywx, t18.xywz, s4, l(0.000000)
              mul r26.xyw, r29.yyyy, r26.xyxw
              mad r26.xyw, r27.xyxz, r29.xxxx, r26.xyxw
              movc r20.z, r26.z, l(0), l(0.500000)
              add r27.xyz, r20.xyzx, r28.xyzx
              sample_l_indexable(texture3d)(float,float,float,float) r27.xyz, r27.xyzx, t19.xyzw, s4, l(0.000000)
              mad r26.xyz, r27.xyzx, r29.zzzz, r26.xywx
              sample_l_indexable(texturecubearray)(float,float,float,float) r27.xyz, r37.xyzw, t8.xyzw, s2, l(6.000000)
              and r28.xyz, r27.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
              ieq r28.xyz, r28.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
              or r12.w, r28.y, r28.x
              or r12.w, r28.z, r12.w
              movc r27.xyz, r12.wwww, l(1.000000,1.000000,0,0), r27.xyzx
              mul r28.xyz, r26.xyzx, r27.xyzx
              dp3 r12.w, r28.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
              mad r25.xyz, r26.xyzx, r27.xyzx, r25.xyzx
              mul r14.z, r7.y, r12.w
              mul r15.yzw, r12.xxxx, r15.yyzw
              dp3 r12.x, r15.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
              mad r12.x, r7.y, r12.w, r12.x
              div r12.x, r14.z, r12.x
              mad r24.xyz, r15.yzwy, r12.xxxx, r24.xyzx
            endif 
          endif 
        endif 
      endloop 
      mov r23.xyzw, r24.xyzw
      mov r8.yzw, r25.xxyz
      iadd r11.x, r11.x, l(32)
    endloop 
    mov r22.xyzw, r23.zxyw
    mov r21.xyz, r8.yzwy
    mov r22.xyzw, r22.yzxw
  else 
    mov r22.x, r21.w
  endif 
  max r1.w, r22.w, l(1.000000)
  rcp r1.w, r1.w
  mov_sat r22.w, r22.w
  mul r18.xyz, r1.wwww, r21.xyzx
  mul r19.xyz, r1.wwww, r22.xyzx
  lt r7.x, r22.w, l(0.990000)
  if_nz r7.x
    add r7.x, -r22.w, l(1.000000)
    mul r7.y, r7.x, cb2[19].x
    add r8.xyz, v6.xyzx, -cb2[35].xyzx
    mul r9.x, r8.x, cb2[35].w
    mul r9.yz, r8.yyzy, cb2[36].xxyx
    add_sat r8.xyz, r9.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    mul r9.xy, r8.xyxx, cb2[36].zwzz
    mul r9.z, r8.z, cb2[37].x
    add r8.xyz, r9.xyzx, cb2[37].yzwy
    lt r9.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r2.xyzx
    movc r9.xyz, r9.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
    mov r9.w, l(0)
    add r10.xyz, r8.xyzx, r9.wwxw
    sample_l_indexable(texture3d)(float,float,float,float) r10.xyz, r10.xyzx, t17.xyzw, s4, l(0.000000)
    mul r12.xyz, r2.xyzx, r2.xyzx
    mul r7.yzw, r7.yyyy, r12.xxyz
    add r12.xyz, r8.xyzx, r9.wwyw
    sample_l_indexable(texture3d)(float,float,float,float) r12.xyz, r12.xyzx, t18.xyzw, s4, l(0.000000)
    mul r12.xyz, r7.zzzz, r12.xyzx
    mad r10.xyz, r10.xyzx, r7.yyyy, r12.xyzx
    add r8.xyz, r8.xyzx, r9.wwzw
    sample_l_indexable(texture3d)(float,float,float,float) r8.xyz, r8.xyzx, t19.xyzw, s4, l(0.000000)
    mad r7.yzw, r8.xxyz, r7.wwww, r10.xxyz
    mov r2.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r2.xyz, r2.xyzw, t8.xyzw, s2, l(6.000000)
    mul r2.xyz, r2.xyzx, r7.yzwy
    dp3 r2.w, r2.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
    mad r18.xyz, r21.xyzx, r1.wwww, r2.xyzx
    mov r13.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r2.xyz, r13.xyzw, t8.xyzw, s2, r5.w
    mad r1.w, cb2[19].x, r7.x, -r2.w
    mad r1.w, r5.y, r1.w, r2.w
    mad r19.xyz, r2.xyzx, r1.wwww, r19.xyzx
  endif 
else 
  mov r19.x, r18.w
endif 
mad r2.xyz, r18.xyzx, r0.wwww, r11.yzwy
mad r5.xy, r5.xyxx, l(0.984375, 0.984375, 0.000000, 0.000000), l(0.00781250, 0.00781250, 0.000000, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r5.xy, r5.xyxx, t5.xyzw, s2, l(0.000000)
mul r7.xyz, r0.wwww, r19.xyzx
mad r8.xyz, r7.xyzx, r5.xxxx, r30.xyzx
mad r5.xyw, r7.xyxz, r5.yyyy, r31.xyxz
add r7.xyz, -r4.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r7.xyz, r7.xyzx, r8.xyzx
mad r4.yzw, r5.xxyw, r4.yyzw, r7.xxyz
mad r0.xyz, r2.xyzx, r0.xyzx, r4.yzwy
ftoi r2.xy, v0.xyxx
mov r2.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.w, r2.xyzw, t21.yzwx
ge r1.w, r0.w, l(0.984375)
mul r2.x, r0.w, l(1.01587307)
mad r0.w, r0.w, l(64.000000), l(-63.000000)
movc r0.w, r1.w, r0.w, r2.x
max r0.w, r0.w, l(0.00000001)
rcp r0.w, r0.w
eq r1.w, cb0[16].y, l(0.000000)
div r2.x, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[16].y
movc r1.w, r1.w, l(60000.000000), r2.x
add r0.w, -r5.z, r0.w
mul_sat r0.w, r1.w, r0.w
lt r1.w, r0.w, l(1.000000)
if_nz r1.w
  sample_indexable(texture2d)(float,float,float,float) r1.w, v1.yzyy, t46.xyzw, s1
  sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v1.yzyy, t47.xyzw, s1
  mul r2.xyz, r2.wwww, r2.xyzx
  add r4.y, -r1.w, r3.w
  mad r1.w, r0.w, r4.y, r1.w
  add r5.xyzw, -r2.xyzw, r6.xyzw
  mad r6.xyzw, r0.wwww, r5.xyzw, r2.xyzw
  add r0.w, r0.w, l(0.200000)
  min r0.w, r0.w, l(1.000000)
  mul r3.w, r0.w, r1.w
endif 
dp3 r0.w, r0.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
max r0.w, r0.w, l(0.000100)
max r0.w, r0.w, cb1[85].x
mul r0.w, r0.w, cb0[15].x
mad r0.xyz, r6.xyzx, r0.wwww, r0.xyzx
div_sat r0.w, r0.w, cb1[85].x
mul r0.w, r6.w, r0.w
sample_indexable(texture2d)(float,float,float,float) r1.w, v7.xyxx, t38.yzwx, s1
mul r2.xyz, r1.xyzx, cb1[85].xxxx
mad_sat r0.w, r0.w, r4.x, r3.w
mul r0.w, r0.w, cb0[16].x
mul r0.w, r1.w, r0.w
mad r0.xyz, -r1.xyzx, cb1[85].xxxx, r0.xyzx
mad r0.xyz, r0.wwww, r0.xyzx, r2.xyzx
lt r0.w, l(0.000000), cb2[9].z
if_nz r0.w
  dp3 r0.w, v6.xyzx, v6.xyzx
  rsq r1.x, r0.w
  mul r1.xyz, r1.xxxx, v6.xyzx
  sqrt r0.w, r0.w
  lt r1.w, l(0.000000), cb2[13].w
  if_nz r1.w
    mad r2.xy, r0.wwww, cb2[15].xyxx, cb2[14].zwzz
    mul r2.xy, r2.xyxx, cb2[16].xyxx
    lt r1.w, l(0.010000), |v6.z|
    mul r2.zw, v6.zzzz, cb2[15].zzzw
    mul r4.xy, r2.zwzz, l(-1.442695, -1.442695, 0.000000, 0.000000)
    exp r4.xy, r4.xyxx
    add r4.xy, -r4.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    div r2.zw, r4.xxxy, r2.zzzw
    mul r2.zw, r2.zzzw, r2.xxxy
    movc r2.xy, r1.wwww, r2.zwzz, r2.xyxx
    mul r2.xzw, r2.xxxx, cb2[12].xxyz
    exp r2.xzw, r2.xxzw
    mul r4.xyz, r2.yyyy, cb2[12].xyzx
    exp r4.xyz, r4.xyzx
    add r4.xyz, -r2.xzwx, r4.xyzx
    mad r2.xyz, cb2[13].wwww, r4.xyzx, r2.xzwx
  else 
    mad r1.w, r0.w, cb2[15].x, cb2[14].z
    mul r1.w, r1.w, cb2[16].x
    lt r2.w, l(0.010000), |v6.z|
    mul r4.x, v6.z, cb2[15].z
    mul r4.y, r4.x, l(-1.442695)
    exp r4.y, r4.y
    add r4.y, -r4.y, l(1.000000)
    div r4.x, r4.y, r4.x
    mul r4.x, r1.w, r4.x
    movc r1.w, r2.w, r4.x, r1.w
    mul r4.xyz, r1.wwww, cb2[12].xyzx
    exp r2.xyz, r4.xyzx
  endif 
  mad r2.xyz, r2.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r2.xyz, r2.xyzx, -cb2[9].zzzz
  dp3 r1.x, cb2[7].yzwy, -r1.xyzx
  mad r1.y, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r1.z, cb2[8].w, -r1.x, l(1.000000)
  mul r1.z, r1.z, r1.z
  mul r1.z, r1.z, l(12.566371)
  div r1.y, r1.y, r1.z
  add r0.w, r0.w, -cb2[10].w
  mul_sat r0.w, r0.w, cb2[11].w
  mul r0.w, r0.w, r1.y
  mov_sat r1.x, r1.x
  mad r1.x, r1.x, r1.x, l(1.000000)
  mad r1.x, r1.x, l(0.05968310), l(-1.000000)
  mad r1.x, cb2[8].z, r1.x, l(1.000000)
  mul r1.yzw, r0.wwww, cb2[11].xxyz
  mad r1.xyz, r1.xxxx, cb2[10].xyzx, r1.yzwy
  mul r1.xyz, r1.xyzx, cb2[9].wwww
  add r4.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r1.xyz, r1.xyzx, r4.xyzx
  mad r1.xyz, r0.xyzx, r2.xyzx, r1.xyzx
else 
  mul r0.w, v6.z, cb2[6].x
  mad r1.w, cb2[6].x, v6.z, cb2[5].x
  lt r2.x, |r0.w|, l(0.000100)
  min r2.y, r1.w, l(64.000000)
  mul r2.y, r2.y, l(1.442695)
  exp r2.y, r2.y
  mov_sat r2.z, cb2[6].z
  lt r2.w, r1.w, l(0.000000)
  add r1.w, r1.w, l(1.000000)
  movc r1.w, r2.w, r2.y, r1.w
  add r1.w, r1.w, -cb2[6].z
  movc r0.w, r2.x, l(1.000000), r0.w
  div r0.w, r1.w, r0.w
  movc r0.w, r2.x, r2.z, r0.w
  mul r0.w, r0.w, cb2[5].z
  dp3 r1.w, v6.xyzx, v6.xyzx
  sqrt r2.x, r1.w
  mad r0.w, r0.w, r2.x, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  rsq r1.w, r1.w
  mul r2.xyz, r1.wwww, v6.xyzx
  dp3 r1.w, cb2[7].yzwy, r2.xyzx
  mad_sat r1.w, cb2[8].y, r1.w, cb2[8].x
  add r2.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r2.xyzw, r1.wwww, r2.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r2.w
  add r2.xyz, -r0.xyzx, r2.xyzx
  mad r1.xyz, r0.wwww, r2.xyzx, r0.xyzx
endif 
mul r0.xyz, r1.xyzx, cb1[85].yyyy
ge r1.xyz, r0.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.xyz, r0.xyzx, r1.xyzx
min r0.xyz, r0.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
max r1.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r3.xyz, r3.wwww, r1.xyzx
and r0.w, r3.w, l(0x7f800000)
ieq r0.w, r0.w, l(0x7f800000)
eq r2.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
and r2.xy, r2.zwzz, r2.xyxx
and r1.w, r2.y, r2.x
or r0.w, r0.w, r1.w
if_z r0.w
  ftou r2.xy, v0.xyxx
  imm_atomic_iadd r2.z, u6, r2.xyxx, l(1)
  ult r0.w, r2.z, cb2[58].z
  if_nz r0.w
    max r0.w, r3.z, r3.y
    max r0.w, r0.w, r3.x
    mov r0.w, |r0.w|
    and r0.w, r0.w, l(0x7f800000)
    iadd r0.w, r0.w, l(0x00800000)
    mad r1.xyz, r1.xyzx, r3.wwww, r0.wwww
    ubfe r1.x, l(8), l(15), r1.x
    ushr r1.yz, r1.yyzy, l(0, 15, 15, 0)
    bfi r1.yz, l(0, 8, 8, 0), l(0, 8, 16, 0), r1.yyzy, l(0, 0, 0, 0)
    iadd r1.x, r1.y, r1.x
    iadd r1.x, r1.z, r1.x
    ishl r0.w, r0.w, l(1)
    iadd r1.xzw, r0.wwww, r1.xxxx
    mov_sat r0.w, r3.w
    mul r0.w, r0.w, l(2046.000000)
    ftou r0.w, r0.w
    ishl r2.w, v0.z, l(2)
    and r0.w, r0.w, l(2046)
    bfi r1.y, l(11), l(0), r0.w, r2.w
    store_uav_typed u7.xyzw, r2.xyzz, r1.xyzw
    mov r0.w, l(-1)
  else 
    mov r0.w, l(0)
  endif 
else 
  mov r0.w, l(-1)
endif 
mul r3.xyz, r3.wwww, r0.xyzx
movc o0.xyzw, r0.wwww, l(0,0,0,0), r3.xyzw
ret 
// Approximately 2319 instruction slots used
