//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:42:04 2021
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float3 colorTint;                  // Offset:  160 Size:    12
//   float baseNormalHeight;            // Offset:  172 Size:     4 [unused]
//   float2 glossRange;                 // Offset:  176 Size:     8
//   float2 rotateUVs;                  // Offset:  184 Size:     8
//   float2 scrollUVs;                  // Offset:  192 Size:     8
//   float2 scaleUVs;                   // Offset:  200 Size:     8
//   float2 offsetUVs;                  // Offset:  208 Size:     8
//   float2 zoomUVs;                    // Offset:  216 Size:     8
//   float zoomRate;                    // Offset:  224 Size:     4
//   float layerDepth;                  // Offset:  228 Size:     4
//   bool clampU;                       // Offset:  232 Size:     4
//   bool clampV;                       // Offset:  236 Size:     4
//   float2 flickerSeed;                // Offset:  240 Size:     8
//   float flickerSpeed;                // Offset:  248 Size:     4
//   float2 flickerRange;               // Offset:  256 Size:     8
//   float flickerPower;                // Offset:  264 Size:     4
//   float2 normalMapScale;             // Offset:  272 Size:     8
//   float4 flowParams;                 // Offset:  288 Size:    16
//   float4 noiseParams;                // Offset:  304 Size:    16
//   bool useOrientedNormalMap;         // Offset:  320 Size:     4
//   uint zFeatherComputeSprites;       // Offset:  324 Size:     4 [unused]
//   float hdrScale;                    // Offset:  328 Size:     4
//   float emissiveFalloffPower;        // Offset:  332 Size:     4
//   float3 emissiveTint1;              // Offset:  336 Size:    12
//   bool relativeHDR;                  // Offset:  348 Size:     4
//   bool invertFalloff;                // Offset:  352 Size:     4
//   float3 normalAdjustAndGloss;       // Offset:  356 Size:    12
//   bool scaleNormalsWithFlow;         // Offset:  368 Size:     4
//   float2 normalsFlowScaleMin;        // Offset:  372 Size:     8
//   float uvMotionToggle1;             // Offset:  380 Size:     4 [unused]
//      = 0x00000000 
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16 [unused]
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4
//   uint numDynamicDecals;             // Offset:  924 Size:     4
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for modelInstanceBuffer
// {
//
//   struct ModelInstanceData
//   {
//       
//       uint boneArrayIndex;           // Offset:    0
//       uint shaderConstantSet;        // Offset:    4
//       uint flagsAndPrevFrameIndex;   // Offset:    8
//       uint worldMatrix;              // Offset:   12
//       uint siegeAnimStateOffset;     // Offset:   16
//       uint prevFrameSiegeAnimStateOffset;// Offset:   20
//
//   } $Element;                        // Offset:    0 Size:    24
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for forwardDecalConstants
// {
//
//   struct CoreDecalConstantsPack
//   {
//       
//       uint4 data[8];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   128
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// colorSampler                      sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// normalSampler                     sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// lookupSampler                     sampler      NA          NA             s5      1 
// flowSampler                       sampler      NA          NA             s6      1 
// noiseSampler                      sampler      NA          NA             s7      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// colorMap                          texture  float4          2d             t0      1 
// modelInstanceBuffer               texture  struct         r/o             t4      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// tintMask                          texture  float4          2d            t21      1 
// normalMap                         texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// flickerLookupMap                  texture  float4          2d            t24      1 
// flowMap                           texture  float4          2d            t25      1 
// noiseMap                          texture  float4          2d            t26      1 
// emissiveMap                       texture  float4          2d            t29      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// visibleDecals                     texture    uint     2darray            t35      1 
// forwardDecalConstants             texture  struct         r/o            t36      1 
// materialTexBC7                    texture  float4     2darray            t42      1 
// materialTexBC3                    texture  float4     2darray            t43      1 
// materialTexBC7linear              texture  float4     2darray            t44      1 
// materialTexMask                   texture  float4     2darray            t45      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyz 
// COLOR                    1   x           1     NONE   float       
// TEXCOORD                 0    yz         1     NONE   float    yz 
// UVOFFSETS                0   xyz         2     NONE   float   xyz 
// TEXCOORD                 4      w        2     NONE    uint      w
// TEXCOORD                 1   xyz         3     NONE   float   xyz 
// TEXCOORD                 2   xyz         4     NONE   float   xyz 
// TEXCOORD                 3   xyz         5     NONE   float   xyz 
// OFFPOSITION              0   xyz         6     NONE   float   xyz 
// SV_IsFrontFace           0   x           7    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[24], immediateIndexed
dcl_constantbuffer CB1[93], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_structured t4, 24
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2d (float,float,float,float) t26
dcl_resource_texture2d (float,float,float,float) t29
dcl_resource_texture2darray (float,float,float,float) t31
dcl_resource_texture2darray (uint,uint,uint,uint) t35
dcl_resource_structured t36, 128
dcl_resource_texture2darray (float,float,float,float) t42
dcl_resource_texture2darray (float,float,float,float) t43
dcl_resource_texture2darray (float,float,float,float) t44
dcl_resource_texture2darray (float,float,float,float) t45
dcl_input_ps_siv linear noperspective v0.xyz, position
dcl_input_ps linear v1.yz
dcl_input_ps constant v2.xyz
dcl_input_ps constant v2.w
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps_sgv constant v7.x, is_front_face
dcl_output o0.xyzw
dcl_temps 46
mul r0.xy, cb0[19].xyxx, cb1[69].wwww
mad r0.xy, v1.yzyy, cb0[19].zzzz, r0.xyxx
sample_indexable(texture2d)(float,float,float,float) r0.xy, r0.xyxx, t26.xyzw, s7
mul r0.xy, r0.xyxx, cb0[19].wwww
mad r0.xy, v1.yzyy, cb0[18].xxxx, r0.xyxx
frc r0.zw, r0.xxxy
mad r1.xy, r0.zwzz, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
mul r0.zw, r0.zzzw, r0.zzzw
mul r1.zw, r0.zzzw, r1.xxxy
round_ni r2.xy, r0.xyxx
div r2.xy, r2.xyxx, cb0[18].xxxx
sample_indexable(texture2d)(float,float,float,float) r2.xy, r2.xyxx, t25.xyzw, s6
add r2.xy, r2.xyxx, r2.xyxx
add r3.xyzw, r0.xyxy, l(1.000000, 0.000000, 0.000000, 1.000000)
round_ni r3.xyzw, r3.xyzw
div r3.xyzw, r3.xyzw, cb0[18].xxxx
sample_indexable(texture2d)(float,float,float,float) r3.xy, r3.xyxx, t25.xyzw, s6
add r4.xy, r3.xyxx, r3.xyxx
sample_indexable(texture2d)(float,float,float,float) r3.xy, r3.zwzz, t25.xyzw, s6
add r3.xy, r3.xyxx, r3.xyxx
add r0.xy, r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
round_ni r0.xy, r0.xyxx
div r0.xy, r0.xyxx, cb0[18].xxxx
sample_indexable(texture2d)(float,float,float,float) r0.xy, r0.xyxx, t25.xyzw, s6
add r5.xy, r0.xyxx, r0.xyxx
resinfo_indexable(texture2d)(float,float,float,float) r0.xy, l(0), t0.xyzw
mul r0.xy, r0.xyxx, v1.yzyy
deriv_rtx_coarse r6.xy, r0.xyxx
deriv_rty_coarse r0.xy, r0.xyxx
dp2 r6.x, r6.xyxx, r6.xyxx
dp2 r0.x, r0.xyxx, r0.xyxx
max r0.x, r0.x, r6.x
log r0.x, r0.x
mul r0.x, r0.x, l(0.500000)
mul r0.y, cb0[18].y, cb1[69].w
mad r2.zw, r2.xxxy, l(0.000000, 0.000000, -1.000000, 1.000000), l(0.000000, 0.000000, 1.000000, -1.000000)
mad r6.xy, r2.zwzz, r0.yyyy, v1.yzyy
sample_l_indexable(texture2d)(float,float,float,float) r7.xyzw, r6.xyxx, t0.xyzw, s1, r0.x
mad r4.zw, r4.xxxy, l(0.000000, 0.000000, -1.000000, 1.000000), l(0.000000, 0.000000, 1.000000, -1.000000)
mad r6.zw, r4.zzzw, r0.yyyy, v1.yyyz
sample_l_indexable(texture2d)(float,float,float,float) r8.xyzw, r6.zwzz, t0.xyzw, s1, r0.x
add r8.xyzw, -r7.xyzw, r8.xyzw
mad r7.xyzw, r1.zzzz, r8.xyzw, r7.xyzw
mad r3.zw, r3.xxxy, l(0.000000, 0.000000, -1.000000, 1.000000), l(0.000000, 0.000000, 1.000000, -1.000000)
mad r8.xy, r3.zwzz, r0.yyyy, v1.yzyy
sample_l_indexable(texture2d)(float,float,float,float) r9.xyzw, r8.xyxx, t0.xyzw, s1, r0.x
mad r5.zw, r5.xxxy, l(0.000000, 0.000000, -1.000000, 1.000000), l(0.000000, 0.000000, 1.000000, -1.000000)
mad r8.zw, r5.zzzw, r0.yyyy, v1.yyyz
sample_l_indexable(texture2d)(float,float,float,float) r10.xyzw, r8.zwzz, t0.xyzw, s1, r0.x
add r10.xyzw, -r9.xyzw, r10.xyzw
mad r9.xyzw, r1.zzzz, r10.xyzw, r9.xyzw
add r9.xyzw, -r7.xyzw, r9.xyzw
mad r7.xyzw, r1.wwww, r9.xyzw, r7.xyzw
resinfo_indexable(texture2d)(float,float,float,float) r9.xy, l(0), t21.xyzw
mul r9.xy, r9.xyxx, v1.yzyy
deriv_rtx_coarse r9.zw, r9.xxxy
deriv_rty_coarse r9.xy, r9.xyxx
dp2 r0.x, r9.zwzz, r9.zwzz
dp2 r2.y, r9.xyxx, r9.xyxx
max r0.x, r0.x, r2.y
log r0.x, r0.x
mul r0.x, r0.x, l(0.500000)
sample_l_indexable(texture2d)(float,float,float,float) r2.y, r6.xyxx, t21.yxzw, s1, r0.x
sample_l_indexable(texture2d)(float,float,float,float) r3.y, r6.zwzz, t21.yxzw, s1, r0.x
add r3.y, -r2.y, r3.y
mad r2.y, r1.z, r3.y, r2.y
sample_l_indexable(texture2d)(float,float,float,float) r3.y, r8.xyxx, t21.yxzw, s1, r0.x
sample_l_indexable(texture2d)(float,float,float,float) r0.x, r8.zwzz, t21.xyzw, s1, r0.x
add r0.x, -r3.y, r0.x
mad r0.x, r1.z, r0.x, r3.y
add r0.x, -r2.y, r0.x
mad r0.x, r1.w, r0.x, r2.y
add r6.xyz, cb0[10].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r6.xyz, r0.xxxx, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r6.xyz, r6.xyzx, r7.xyzx
mul_sat r0.x, cb0[11].y, l(0.05882353)
resinfo_indexable(texture2d)(float,float,float,float) r7.xy, l(0), t22.xyzw
mul r7.xy, r7.xyxx, v1.yzyy
deriv_rtx_coarse r8.xy, r7.xyxx
deriv_rty_coarse r7.xy, r7.xyxx
dp2 r2.y, r8.xyxx, r8.xyxx
dp2 r3.y, r7.xyxx, r7.xyxx
max r2.y, r2.y, r3.y
log r2.y, r2.y
mul r2.y, r2.y, l(0.500000)
if_nz cb0[23].x
  sample_indexable(texture2d)(float,float,float,float) r7.xy, v1.yzyy, t25.xyzw, s6
  add r8.xy, r7.xyxx, r7.xyxx
  mad r8.zw, r8.xxxy, l(0.000000, 0.000000, -1.000000, 1.000000), l(0.000000, 0.000000, 1.000000, -1.000000)
  mad r7.xy, r8.xwxx, l(-1.000000, 1.000000, 0.000000, 0.000000), l(1.000000, 0.000000, 0.000000, 0.000000)
  dp2 r3.y, r8.zwzz, r7.xyxx
  sqrt r3.y, r3.y
  mad r3.y, r3.y, cb0[23].z, cb0[23].y
  mul r7.xy, r3.yyyy, cb0[22].yzyy
else 
  mov r7.xy, cb0[22].yzyy
endif 
mad r0.zw, -r1.xxxy, r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
mul r0.zw, r0.zzzw, r0.zzzw
mad r0.zw, r1.zzzw, r1.zzzw, r0.zzzw
rsq r0.zw, r0.zzzw
if_z cb0[20].x
  mul r1.xy, v1.yzyy, cb0[17].xyxx
  mad r8.xy, r2.zwzz, r0.yyyy, r1.xyxx
  sample_l_indexable(texture2d)(float,float,float,float) r8.xy, r8.xyxx, t22.xyzw, s3, r2.y
  mad r4.yz, r4.zzwz, r0.yyyy, r1.xxyx
  sample_l_indexable(texture2d)(float,float,float,float) r4.yz, r4.yzyy, t22.zxyw, s3, r2.y
  add r4.yz, -r8.xxyx, r4.yyzy
  mad r4.yz, r1.zzzz, r4.yyzy, r8.xxyx
  mad r3.yz, r3.zzwz, r0.yyyy, r1.xxyx
  sample_l_indexable(texture2d)(float,float,float,float) r3.yz, r3.yzyy, t22.zxyw, s3, r2.y
  mad r1.xy, r5.zwzz, r0.yyyy, r1.xyxx
  sample_l_indexable(texture2d)(float,float,float,float) r1.xy, r1.xyxx, t22.xyzw, s3, r2.y
  add r1.xy, -r3.yzyy, r1.xyxx
  mad r1.xy, r1.zzzz, r1.xyxx, r3.yzyy
  add r1.xy, -r4.yzyy, r1.xyxx
  mad r1.xy, r1.wwww, r1.xyxx, r4.yzyy
  mad r1.xy, r1.xyxx, r7.xxxx, r7.yyyy
else 
  mad r2.xz, r2.xxwx, l(-1.000000, 0.000000, 1.000000, 0.000000), l(1.000000, 0.000000, 0.000000, 0.000000)
  dp2 r0.y, r2.xzxx, r2.xzxx
  sqrt r0.y, r0.y
  max r0.y, r0.y, l(0.000010)
  div r8.xy, r2.xzxx, r0.yyyy
  mov r8.z, -r8.x
  dp2 r9.x, v1.yzyy, r8.yzyy
  dp2 r9.y, v1.yzyy, -r8.xyxx
  mul r9.xy, r9.xyxx, cb0[17].xyxx
  mul r0.y, r0.y, cb1[69].w
  mad r9.z, -r0.y, cb0[18].y, r9.y
  sample_l_indexable(texture2d)(float,float,float,float) r2.xz, r9.xzxx, t22.xzyw, s3, r2.y
  mad r2.xz, r2.xxzx, r7.xxxx, r7.yyyy
  dp2 r9.x, r2.xzxx, r8.yzyy
  dp2 r9.y, r2.xzxx, -r8.xyxx
  mad r2.xz, r4.xxwx, l(-1.000000, 0.000000, 1.000000, 0.000000), l(1.000000, 0.000000, 0.000000, 0.000000)
  dp2 r0.y, r2.xzxx, r2.xzxx
  sqrt r0.y, r0.y
  max r0.y, r0.y, l(0.000010)
  div r4.xy, r2.xzxx, r0.yyyy
  mov r4.z, -r4.x
  dp2 r8.x, v1.yzyy, r4.yzyy
  dp2 r8.y, v1.yzyy, -r4.xyxx
  mul r8.xy, r8.xyxx, cb0[17].xyxx
  mul r0.y, r0.y, cb1[69].w
  mad r8.z, -r0.y, cb0[18].y, r8.y
  sample_l_indexable(texture2d)(float,float,float,float) r2.xz, r8.xzxx, t22.xzyw, s3, r2.y
  mad r2.xz, r2.xxzx, r7.xxxx, r7.yyyy
  dp2 r8.x, r2.xzxx, r4.yzyy
  dp2 r8.y, r2.xzxx, -r4.xyxx
  add r2.xz, -r9.xxyx, r8.xxyx
  mad r2.xz, r1.zzzz, r2.xxzx, r9.xxyx
  mad r3.xy, r3.xwxx, l(-1.000000, 1.000000, 0.000000, 0.000000), l(1.000000, 0.000000, 0.000000, 0.000000)
  dp2 r0.y, r3.xyxx, r3.xyxx
  sqrt r0.y, r0.y
  max r0.y, r0.y, l(0.000010)
  div r3.xy, r3.xyxx, r0.yyyy
  mov r3.z, -r3.x
  dp2 r4.x, v1.yzyy, r3.yzyy
  dp2 r4.y, v1.yzyy, -r3.xyxx
  mul r4.xy, r4.xyxx, cb0[17].xyxx
  mul r0.y, r0.y, cb1[69].w
  mad r4.z, -r0.y, cb0[18].y, r4.y
  sample_l_indexable(texture2d)(float,float,float,float) r4.xy, r4.xzxx, t22.xyzw, s3, r2.y
  mad r4.xy, r4.xyxx, r7.xxxx, r7.yyyy
  dp2 r8.x, r4.xyxx, r3.yzyy
  dp2 r8.y, r4.xyxx, -r3.xyxx
  mad r3.xy, r5.xwxx, l(-1.000000, 1.000000, 0.000000, 0.000000), l(1.000000, 0.000000, 0.000000, 0.000000)
  dp2 r0.y, r3.xyxx, r3.xyxx
  sqrt r0.y, r0.y
  max r0.y, r0.y, l(0.000010)
  div r3.xy, r3.xyxx, r0.yyyy
  mov r3.z, -r3.x
  dp2 r4.x, v1.yzyy, r3.yzyy
  dp2 r4.y, v1.yzyy, -r3.xyxx
  mul r4.xy, r4.xyxx, cb0[17].xyxx
  mul r0.y, r0.y, cb1[69].w
  mad r4.z, -r0.y, cb0[18].y, r4.y
  sample_l_indexable(texture2d)(float,float,float,float) r2.yw, r4.xzxx, t22.zxwy, s3, r2.y
  mad r2.yw, r2.yyyw, r7.xxxx, r7.yyyy
  dp2 r4.x, r2.ywyy, r3.yzyy
  dp2 r4.y, r2.ywyy, -r3.xyxx
  add r2.yw, -r8.xxxy, r4.xxxy
  mad r2.yw, r1.zzzz, r2.yyyw, r8.xxxy
  add r2.yw, -r2.xxxz, r2.yyyw
  mad r1.xy, r1.wwww, r2.ywyy, r2.xzxx
endif 
mul r0.y, r0.w, r0.z
add r0.zw, r1.xxxy, l(0.000000, 0.000000, -0.500000, -0.500000)
mad r0.yz, r0.yyyy, r0.zzwz, l(0.000000, 0.500000, 0.500000, 0.000000)
mad r0.yz, r0.yyzy, l(0.000000, 1.99218750, 1.99218750, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
dp2 r0.w, r0.yzyy, r0.yzyy
add r0.w, -r0.w, l(1.000000)
max r0.w, r0.w, l(0.000000)
sqrt r0.w, r0.w
movc r1.x, v7.x, l(1.000000), l(-1.000000)
dp3 r1.y, v3.xyzx, v3.xyzx
rsq r1.y, r1.y
mul r1.yzw, r1.yyyy, v3.xxyz
mul r1.yzw, r1.xxxx, r1.yyzw
dp3 r2.x, v4.xyzx, v4.xyzx
rsq r2.x, r2.x
mul r2.xyz, r2.xxxx, v4.xyzx
mul r2.xyz, r1.xxxx, r2.xyzx
dp3 r2.w, v5.xyzx, v5.xyzx
rsq r2.w, r2.w
mul r3.xyz, r2.wwww, v5.xyzx
mul r3.xyz, r1.xxxx, r3.xyzx
mul r3.xyz, r0.zzzz, r3.xyzx
mad r2.xyz, r2.xyzx, r0.yyyy, r3.xyzx
mad r0.yzw, r1.yyzw, r0.wwww, r2.xxyz
dp3 r2.x, r0.yzwy, r0.yzwy
rsq r2.x, r2.x
mul r0.yzw, r0.yyzw, r2.xxxx
ge r2.x, v0.z, l(0.984375)
mul r2.y, v0.z, l(1.01587307)
mad r2.z, v0.z, l(64.000000), l(-63.000000)
movc r2.x, r2.x, r2.z, r2.y
max r2.x, r2.x, l(0.00000001)
rcp r2.x, r2.x
ftou r2.yz, v0.xxyx
deriv_rtx_coarse r3.xyz, v6.xyzx
deriv_rty_coarse r4.xyz, v6.xyzx
iadd r2.w, cb2[0].y, cb2[0].x
ld_structured_indexable(structured_buffer, stride=24)(mixed,mixed,mixed,mixed) r3.w, v2.w, l(8), t4.xxxx
and r5.xy, r3.wwww, l(0x10000000, 0x20000000, 0, 0)
if_nz r5.x
  add r8.xyz, v6.xyzx, cb1[24].xyzx
  mul r3.w, r2.x, l(0.00781250)
  min r3.w, r3.w, l(15.000000)
  ftou r3.w, r3.w
  ushr r7.xy, r2.yzyy, l(6, 6, 0, 0)
  ishl r7.z, r3.w, l(4)
  and r3.w, cb2[57].z, l(-32)
  iadd r4.w, -r3.w, cb2[57].z
  mov r9.xy, l(0,0,0,0)
  mov r10.w, l(0)
  mov r8.w, l(1.000000)
  mov r11.xyzw, l(0,0,0,0)
  mov r5.xzw, l(0,0,0,0)
  mov r12.yz, l(0,0,0,0)
  mov r13.xy, l(0,0,0,0)
  mov r6.w, l(0)
  loop 
    uge r9.w, r6.w, cb2[57].z
    breakc_nz r9.w
    ushr r9.z, r6.w, l(5)
    iadd r10.xyz, r7.xyzx, r9.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r9.z, r10.xyzw, t35.yzxw
    ieq r9.w, r3.w, r6.w
    ubfe r10.x, r4.w, l(0), r9.z
    movc r9.z, r9.w, r10.x, r9.z
    iadd r9.w, r2.w, r6.w
    mov r14.xyzw, r11.xzwy
    mov r10.xyz, r5.xzwx
    mov r15.yz, r12.yyzy
    mov r16.xy, r13.xyxx
    mov r12.w, r9.z
    loop 
      breakc_z r12.w
      firstbit_lo r13.w, r12.w
      ishl r15.w, l(1), r13.w
      and r16.w, r12.w, r15.w
      if_nz r16.w
        xor r12.w, r12.w, r15.w
        iadd r15.w, r9.w, r13.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r17.xyzw, r15.w, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r18.xy, r15.w, l(16), t11.xyxx
        add r17.xyz, r17.xyzx, -v6.xyzx
        mov r18.z, r17.w
        lt r17.xyz, |r17.xyzx|, r18.zxyz
        and r15.w, r17.y, r17.x
        and r15.w, r17.z, r15.w
        if_nz r15.w
          iadd r13.w, r6.w, r13.w
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r17.xyz, r13.w, l(0), t36.xyzx
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r18.xyz, r13.w, l(16), t36.xyzx
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r19.xyz, r13.w, l(32), t36.xyzx
          mov r20.x, r17.x
          mov r20.y, r18.x
          mov r20.z, r19.x
          dp3 r15.w, r20.xyzx, r20.xyzx
          rsq r15.w, r15.w
          mul r21.xyz, r15.wwww, r20.xyzx
          dp3 r15.w, r21.xyzx, v3.xyzx
          ge r15.w, r15.w, l(0.500000)
          if_nz r15.w
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r22.xyw, r13.w, l(48), t36.xyxz
            mov r20.w, r22.x
            dp4 r20.x, r8.xyzw, r20.xyzw
            mov r23.x, r17.y
            mov r23.y, r18.y
            mov r23.z, r19.y
            mov r23.w, r22.y
            dp4 r20.y, r8.xyzw, r23.xyzw
            mov r22.x, r17.z
            mov r22.y, r18.z
            mov r22.z, r19.z
            dp4 r20.z, r8.xyzw, r22.xyzw
            lt r17.xyz, |r20.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
            and r15.w, r17.y, r17.x
            and r15.w, r17.z, r15.w
            if_nz r15.w
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r17.xyzw, r13.w, l(64), t36.xyzw
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r18.xyzw, r13.w, l(80), t36.xyzw
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r19.xyzw, r13.w, l(96), t36.xyzw
              dp3 r24.x, r3.xyzx, r23.xyzx
              dp3 r24.y, r3.xyzx, r22.xyzx
              dp3 r25.x, r4.xyzx, r23.xyzx
              dp3 r25.y, r4.xyzx, r22.xyzx
              mad r20.xy, r20.yzyy, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
              mul r24.xyz, r24.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
              mul r25.xyz, r25.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
              and r20.zw, r18.yyyz, l(0, 0, 0x0000ffff, 0x0000ffff)
              if_nz r20.z
                ubfe r15.w, l(4), l(24), r18.w
                ishl r15.w, l(1), r15.w
                ushr r16.w, r18.w, l(28)
                ishl r16.w, l(1), r16.w
                ieq r21.w, r20.z, l(4)
                if_nz r21.w
                  and r21.w, r18.w, l(4095)
                  ubfe r22.w, l(12), l(12), r18.w
                  and r23.w, r19.w, l(1023)
                  utof r26.xz, r15.wwww
                  utof r26.y, r16.w
                  mad r27.xy, r20.xyxx, r26.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r27.zw, r26.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r27.xy, r27.zwzz, r27.xyxx
                  utof r28.x, r21.w
                  utof r28.y, r22.w
                  add r27.xy, r27.xyxx, r28.xyxx
                  mul r27.xy, r27.xyxx, cb1[83].xyxx
                  utof r27.z, r23.w
                  mul r28.xyz, r24.zyzz, cb1[83].xyxx
                  mul r28.xyz, r26.xyzx, r28.xyzx
                  mul r29.xyz, r25.zyzz, cb1[83].xyxx
                  mul r26.xyz, r26.xyzx, r29.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r26.xyzw, r27.xyzx, t42.xyzw, s4, r28.xyzx, r26.xyzx
                else 
                  ieq r20.z, r20.z, l(1)
                  if_nz r20.z
                    and r20.z, r18.w, l(4095)
                    ubfe r18.w, l(12), l(12), r18.w
                    and r21.w, r19.w, l(1023)
                    utof r27.xz, r15.wwww
                    utof r27.y, r16.w
                    mad r28.xy, r20.xyxx, r27.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r28.zw, r27.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                    min r28.xy, r28.zwzz, r28.xyxx
                    utof r29.x, r20.z
                    utof r29.y, r18.w
                    add r28.xy, r28.xyxx, r29.xyxx
                    mul r28.xy, r28.xyxx, cb1[83].zwzz
                    utof r28.z, r21.w
                    mul r29.xyz, r24.zyzz, cb1[83].zwzz
                    mul r29.xyz, r27.xyzx, r29.xyzx
                    mul r30.xyz, r25.zyzz, cb1[83].zwzz
                    mul r27.xyz, r27.xyzx, r30.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r26.xyzw, r28.xyzx, t43.xyzw, s4, r29.xyzx, r27.xyzx
                  else 
                    mov r26.xyzw, l(1.000000,1.000000,1.000000,1.000000)
                  endif 
                endif 
                mul r17.xyz, r17.xyzx, r26.xyzx
                mul r15.w, r17.w, r26.w
              else 
                mov r17.xyz, l(0,0,0,0)
                mov r15.w, l(0)
              endif 
              ne r16.w, r18.x, l(1.000000)
              add r17.w, r17.w, r15.w
              mad_sat r17.w, r17.w, r18.x, -r18.x
              movc r15.w, r16.w, r17.w, r15.w
              if_nz r20.w
                ubfe r16.w, l(4), l(24), r19.y
                ishl r16.w, l(1), r16.w
                ushr r17.w, r19.y, l(28)
                ishl r17.w, l(1), r17.w
                ieq r18.x, r20.w, l(2)
                if_nz r18.x
                  and r18.x, r19.y, l(4095)
                  ubfe r26.xy, l(12, 10, 0, 0), l(12, 20, 0, 0), r19.ywyy
                  utof r27.xz, r16.wwww
                  utof r27.y, r17.w
                  mad r26.zw, r20.xxxy, r27.zzzy, l(0.000000, 0.000000, 0.500000, 0.500000)
                  add r28.xy, r27.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r26.zw, r26.zzzw, r28.xxxy
                  utof r28.x, r18.x
                  utof r28.yz, r26.xxyx
                  add r18.xw, r26.zzzw, r28.xxxy
                  mul r28.xy, r18.xwxx, cb1[84].xyxx
                  mul r26.xyz, r24.zyzz, cb1[84].xyxx
                  mul r26.xyz, r27.xyzx, r26.xyzx
                  mul r29.xyz, r25.zyzz, cb1[84].xyxx
                  mul r27.xyz, r27.xyzx, r29.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r18.x, r28.xyzx, t45.xyzw, s4, r26.xyzx, r27.xyzx
                else 
                  ieq r18.w, r20.w, l(4)
                  if_nz r18.w
                    and r18.w, r19.y, l(4095)
                    ubfe r20.zw, l(0, 0, 12, 10), l(0, 0, 12, 20), r19.yyyw
                    utof r26.xz, r16.wwww
                    utof r26.y, r17.w
                    mad r27.xy, r20.xyxx, r26.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r27.zw, r26.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                    min r27.xy, r27.zwzz, r27.xyxx
                    utof r28.x, r18.w
                    utof r28.y, r20.z
                    add r27.xy, r27.xyxx, r28.xyxx
                    mul r27.xy, r27.xyxx, cb1[83].xyxx
                    utof r27.z, r20.w
                    mul r28.xyz, r24.zyzz, cb1[83].xyxx
                    mul r28.xyz, r26.xyzx, r28.xyzx
                    mul r29.xyz, r25.zyzz, cb1[83].xyxx
                    mul r26.xyz, r26.xyzx, r29.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r18.x, r27.xyzx, t42.xyzw, s4, r28.xyzx, r26.xyzx
                  else 
                    and r18.w, r19.y, l(4095)
                    ubfe r20.zw, l(0, 0, 12, 10), l(0, 0, 12, 20), r19.yyyw
                    utof r26.xz, r16.wwww
                    utof r26.y, r17.w
                    mad r27.xy, r20.xyxx, r26.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r27.zw, r26.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                    min r27.xy, r27.zwzz, r27.xyxx
                    utof r28.x, r18.w
                    utof r28.y, r20.z
                    add r27.xy, r27.xyxx, r28.xyxx
                    mul r27.xy, r27.xyxx, cb1[83].zwzz
                    utof r27.z, r20.w
                    mul r28.xyz, r24.zyzz, cb1[83].zwzz
                    mul r28.xyz, r26.xyzx, r28.xyzx
                    mul r29.xyz, r25.zyzz, cb1[83].zwzz
                    mul r26.xyz, r26.xyzx, r29.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r18.x, r27.xyzx, t43.xyzw, s4, r28.xyzx, r26.xyzx
                  endif 
                endif 
                mad r26.xyz, r18.xxxx, l(0.960000, 0.960000, 0.960000, 0.000000), l(0.040000, 0.040000, 0.040000, 0.000000)
                add_sat r16.w, -r18.x, l(1.000000)
                mul r17.xyz, r16.wwww, r17.xyzx
              else 
                mov r26.xyz, l(0.040000,0.040000,0.040000,0)
              endif 
              ushr r18.xy, r18.zyzz, l(16, 16, 0, 0)
              if_nz r18.x
                ieq r16.w, r18.x, l(2)
                if_nz r16.w
                  ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r13.w, r13.w, l(112), t36.xxxx
                  ubfe r18.zw, l(0, 0, 4, 12), l(0, 0, 24, 12), r19.zzzz
                  ishl r16.w, l(1), r18.z
                  ushr r17.w, r19.z, l(28)
                  ishl r17.w, l(1), r17.w
                  and r18.z, r19.z, l(4095)
                  and r13.w, r13.w, l(1023)
                  utof r27.xz, r16.wwww
                  utof r27.y, r17.w
                  mad r19.yz, r20.xxyx, r27.zzyz, l(0.000000, 0.500000, 0.500000, 0.000000)
                  add r20.zw, r27.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r19.yz, r19.yyzy, r20.zzwz
                  utof r28.xy, r18.zwzz
                  add r18.zw, r19.yyyz, r28.xxxy
                  mul r28.xy, r18.zwzz, cb1[84].xyxx
                  utof r28.z, r13.w
                  mul r29.xyz, r24.zyzz, cb1[84].xyxx
                  mul r29.xyz, r27.xyzx, r29.xyzx
                  mul r30.xyz, r25.zyzz, cb1[84].xyxx
                  mul r27.xyz, r27.xyzx, r30.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r13.w, r28.xyzx, t45.yzwx, s4, r29.xyzx, r27.xyzx
                else 
                  ieq r16.w, r18.x, l(6)
                  movc r13.w, r16.w, l(0), l(1.000000)
                endif 
              else 
                mov r13.w, l(1.000000)
              endif 
              mul_sat r13.w, r13.w, l(0.76470590)
              if_nz r18.y
                ieq r16.w, r18.y, l(3)
                if_nz r16.w
                  ubfe r18.xyz, l(4, 12, 10, 0), l(24, 12, 10, 0), r19.xxwx
                  ishl r16.w, l(1), r18.x
                  ushr r17.w, r19.x, l(28)
                  ishl r17.w, l(1), r17.w
                  and r18.x, r19.x, l(4095)
                  utof r19.xz, r16.wwww
                  utof r19.y, r17.w
                  mad r20.xy, r20.xyxx, r19.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r20.zw, r19.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r20.xy, r20.zwzz, r20.xyxx
                  utof r27.xy, r18.xyxx
                  add r18.xy, r20.xyxx, r27.xyxx
                  mul r20.xy, r18.xyxx, cb1[84].zwzz
                  utof r20.z, r18.z
                  mul r18.xyz, r24.xyzx, cb1[84].zwzz
                  mul r18.xyz, r19.xyzx, r18.xyzx
                  mul r24.xyz, r25.xyzx, cb1[84].zwzz
                  mul r19.xyz, r19.xyzx, r24.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r18.xyz, r20.xyzx, t44.xyzw, s4, r18.xyzx, r19.xyzx
                else 
                  mov r18.xyz, l(0.500000,0.500000,1.000000,0)
                endif 
                mad r18.xy, r18.xyxx, l(1.99218750, 1.99218750, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
                dp2 r16.w, r18.xyxx, r18.xyxx
                add r16.w, -r16.w, l(1.000000)
                max r16.w, r16.w, l(0.000000)
                sqrt r16.w, r16.w
                mul r17.w, r18.z, r18.z
                mul r17.w, r17.w, l(0.33333334)
                min r17.w, r17.w, l(1.000000)
                dp3 r18.z, r23.xyzx, r23.xyzx
                rsq r18.z, r18.z
                mul r19.xyz, r18.zzzz, r23.xyzx
                dp3 r18.z, -r22.xyzx, -r22.xyzx
                rsq r18.z, r18.z
                mul r20.xyz, r18.zzzz, -r22.xyzx
                mul r21.xyz, r1.xxxx, r21.xyzx
                mul r19.xyz, r1.xxxx, r19.xyzx
                mul r20.xyz, r1.xxxx, r20.xyzx
                mul r18.z, r13.w, l(-17.000000)
                exp r18.z, r18.z
                add r17.w, r17.w, r18.z
                log r17.w, r17.w
                mul r17.w, r17.w, l(-0.05882353)
                max r13.w, r17.w, l(0.000000)
                mul r18.yzw, r18.yyyy, r20.xxyz
                mad r18.xyz, r19.xyzx, r18.xxxx, r18.yzwy
                mad r18.xyz, r21.xyzx, r16.wwww, r18.xyzx
                dp3 r16.w, r18.xyzx, r18.xyzx
                rsq r16.w, r16.w
                mul r18.xyz, r16.wwww, r18.xyzx
                add r16.w, -r15.w, l(1.000000)
                mov r15.x, r14.x
                mul r19.xyz, r16.wwww, r15.xyzx
                mad r15.xyz, r18.xyzx, r15.wwww, r19.xyzx
                mov r14.x, r15.x
              endif 
              add r15.x, -r15.w, l(1.000000)
              mul r18.xyz, r10.xyzx, r15.xxxx
              mad r10.xyz, r17.xyzx, r15.wwww, r18.xyzx
              mov r16.z, r14.y
              mul r17.xyz, r15.xxxx, r16.xyzx
              mad r16.xyz, r26.xyzx, r15.wwww, r17.xyzx
              mul r16.w, r14.w, r15.x
              mad r14.z, r14.z, r15.x, r15.w
              mad r14.w, r13.w, r15.w, r16.w
              mov r14.y, r16.z
            endif 
          endif 
        endif 
      endif 
    endloop 
    mov r11.xyzw, r14.xwyz
    mov r5.xzw, r10.xxyz
    mov r12.yz, r15.yyzy
    mov r13.xy, r16.xyxx
    iadd r6.w, r6.w, l(32)
  endloop 
  mov r12.x, r11.x
  mov r13.z, r11.z
  mov r11.xy, r11.wyww
else 
  mov r5.xzw, l(0,0,0,0)
  mov r12.xyz, l(0,0,0,0)
  mov r13.xyz, l(0,0,0,0)
  mov r11.xy, l(0,0,0,0)
endif 
if_nz r5.y
  add r8.xyz, v6.xyzx, cb1[24].xyzx
  iadd r3.w, cb2[57].w, cb2[57].z
  mul r4.w, r2.x, l(0.00781250)
  min r4.w, r4.w, l(15.000000)
  ftou r4.w, r4.w
  ushr r7.xy, r2.yzyy, l(6, 6, 0, 0)
  ishl r7.z, r4.w, l(4)
  and r4.w, cb2[57].z, l(-32)
  iadd r5.y, -r4.w, cb2[57].z
  and r6.w, r3.w, l(-32)
  iadd r9.x, r3.w, -r6.w
  mov r10.xy, l(0,0,0,0)
  mov r14.w, l(0)
  mov r8.w, l(1.000000)
  mov r9.yzw, r5.xxzw
  mov r15.xyz, r12.xyzx
  mov r16.xyz, r13.xyzx
  mov r17.xy, r11.xyxx
  mov r10.w, r4.w
  loop 
    uge r11.z, r10.w, r3.w
    breakc_nz r11.z
    ushr r10.z, r10.w, l(5)
    iadd r14.xyz, r7.xyzx, r10.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r10.z, r14.xyzw, t35.yzxw
    ieq r11.z, r4.w, r10.w
    bfi r11.w, r5.y, l(0), l(0), r10.z
    movc r10.z, r11.z, r11.w, r10.z
    ieq r11.z, r6.w, r10.w
    ubfe r11.w, r9.x, l(0), r10.z
    movc r10.z, r11.z, r11.w, r10.z
    iadd r11.z, r2.w, r10.w
    mov r14.xyz, r9.yzwy
    mov r18.xyz, r15.xyzx
    mov r19.xyz, r16.xyzx
    mov r17.zw, r17.xxxy
    mov r11.w, r10.z
    loop 
      breakc_z r11.w
      firstbit_lo r12.w, r11.w
      ishl r13.w, l(1), r12.w
      and r15.w, r11.w, r13.w
      if_nz r15.w
        xor r11.w, r11.w, r13.w
        iadd r13.w, r11.z, r12.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r20.xyzw, r13.w, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r21.xy, r13.w, l(16), t11.xyxx
        add r20.xyz, r20.xyzx, -v6.xyzx
        mov r21.z, r20.w
        lt r20.xyz, |r20.xyzx|, r21.zxyz
        and r13.w, r20.y, r20.x
        and r13.w, r20.z, r13.w
        if_nz r13.w
          iadd r12.w, r10.w, r12.w
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r20.xyz, r12.w, l(0), t36.xyzx
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r21.xyz, r12.w, l(16), t36.xyzx
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r22.xyz, r12.w, l(32), t36.xyzx
          mov r23.x, r20.x
          mov r23.y, r21.x
          mov r23.z, r22.x
          dp3 r13.w, r23.xyzx, r23.xyzx
          rsq r13.w, r13.w
          mul r24.xyz, r13.wwww, r23.xyzx
          dp3 r13.w, r24.xyzx, v3.xyzx
          ge r13.w, r13.w, l(0.500000)
          if_nz r13.w
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r25.xyw, r12.w, l(48), t36.xyxz
            mov r23.w, r25.x
            dp4 r23.x, r8.xyzw, r23.xyzw
            mov r26.x, r20.y
            mov r26.y, r21.y
            mov r26.z, r22.y
            mov r26.w, r25.y
            dp4 r23.y, r8.xyzw, r26.xyzw
            mov r25.x, r20.z
            mov r25.y, r21.z
            mov r25.z, r22.z
            dp4 r23.z, r8.xyzw, r25.xyzw
            lt r20.xyz, |r23.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
            and r13.w, r20.y, r20.x
            and r13.w, r20.z, r13.w
            if_nz r13.w
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r20.xyzw, r12.w, l(64), t36.xyzw
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r21.xyzw, r12.w, l(80), t36.xyzw
              ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r22.xyzw, r12.w, l(96), t36.xyzw
              dp3 r27.x, r3.xyzx, r26.xyzx
              dp3 r27.y, r3.xyzx, r25.xyzx
              dp3 r28.x, r4.xyzx, r26.xyzx
              dp3 r28.y, r4.xyzx, r25.xyzx
              mad r23.xy, r23.yzyy, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
              mul r27.xyz, r27.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
              mul r28.xyz, r28.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
              and r23.zw, r21.yyyz, l(0, 0, 0x0000ffff, 0x0000ffff)
              if_nz r23.z
                ubfe r13.w, l(4), l(24), r21.w
                ishl r13.w, l(1), r13.w
                ushr r15.w, r21.w, l(28)
                ishl r15.w, l(1), r15.w
                ieq r16.w, r23.z, l(4)
                if_nz r16.w
                  and r16.w, r21.w, l(4095)
                  ubfe r18.w, l(12), l(12), r21.w
                  and r19.w, r22.w, l(1023)
                  utof r29.xz, r13.wwww
                  utof r29.y, r15.w
                  mad r30.xy, r23.xyxx, r29.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r30.zw, r29.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r30.xy, r30.zwzz, r30.xyxx
                  utof r31.x, r16.w
                  utof r31.y, r18.w
                  add r30.xy, r30.xyxx, r31.xyxx
                  mul r30.xy, r30.xyxx, cb1[83].xyxx
                  utof r30.z, r19.w
                  mul r31.xyz, r27.zyzz, cb1[83].xyxx
                  mul r31.xyz, r29.xyzx, r31.xyzx
                  mul r32.xyz, r28.zyzz, cb1[83].xyxx
                  mul r29.xyz, r29.xyzx, r32.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r29.xyzw, r30.xyzx, t42.xyzw, s4, r31.xyzx, r29.xyzx
                else 
                  ieq r16.w, r23.z, l(1)
                  if_nz r16.w
                    and r16.w, r21.w, l(4095)
                    ubfe r18.w, l(12), l(12), r21.w
                    and r19.w, r22.w, l(1023)
                    utof r30.xz, r13.wwww
                    utof r30.y, r15.w
                    mad r31.xy, r23.xyxx, r30.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r31.zw, r30.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                    min r31.xy, r31.zwzz, r31.xyxx
                    utof r32.x, r16.w
                    utof r32.y, r18.w
                    add r31.xy, r31.xyxx, r32.xyxx
                    mul r31.xy, r31.xyxx, cb1[83].zwzz
                    utof r31.z, r19.w
                    mul r32.xyz, r27.zyzz, cb1[83].zwzz
                    mul r32.xyz, r30.xyzx, r32.xyzx
                    mul r33.xyz, r28.zyzz, cb1[83].zwzz
                    mul r30.xyz, r30.xyzx, r33.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r29.xyzw, r31.xyzx, t43.xyzw, s4, r32.xyzx, r30.xyzx
                  else 
                    mov r29.xyzw, l(1.000000,1.000000,1.000000,1.000000)
                  endif 
                endif 
                mul r20.xyz, r20.xyzx, r29.xyzx
                mul r13.w, r20.w, r29.w
              else 
                mov r20.xyz, l(0,0,0,0)
                mov r13.w, l(0)
              endif 
              ne r15.w, r21.x, l(1.000000)
              add r16.w, r20.w, r13.w
              mad_sat r16.w, r16.w, r21.x, -r21.x
              movc r13.w, r15.w, r16.w, r13.w
              if_nz r23.w
                ubfe r15.w, l(4), l(24), r22.y
                ishl r15.w, l(1), r15.w
                ushr r16.w, r22.y, l(28)
                ishl r16.w, l(1), r16.w
                ieq r18.w, r23.w, l(2)
                if_nz r18.w
                  and r18.w, r22.y, l(4095)
                  ubfe r21.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r22.yyyw
                  utof r29.xz, r15.wwww
                  utof r29.y, r16.w
                  mad r30.xy, r23.xyxx, r29.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r30.zw, r29.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r30.xy, r30.zwzz, r30.xyxx
                  utof r31.x, r18.w
                  utof r31.y, r21.x
                  add r30.xy, r30.xyxx, r31.xyxx
                  mul r30.xy, r30.xyxx, cb1[84].xyxx
                  utof r30.z, r21.w
                  mul r31.xyz, r27.zyzz, cb1[84].xyxx
                  mul r31.xyz, r29.xyzx, r31.xyzx
                  mul r32.xyz, r28.zyzz, cb1[84].xyxx
                  mul r29.xyz, r29.xyzx, r32.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r18.w, r30.xyzx, t45.yzwx, s4, r31.xyzx, r29.xyzx
                else 
                  ieq r19.w, r23.w, l(4)
                  if_nz r19.w
                    and r19.w, r22.y, l(4095)
                    ubfe r21.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r22.yyyw
                    utof r29.xz, r15.wwww
                    utof r29.y, r16.w
                    mad r23.zw, r23.xxxy, r29.zzzy, l(0.000000, 0.000000, 0.500000, 0.500000)
                    add r30.xy, r29.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                    min r23.zw, r23.zzzw, r30.xxxy
                    utof r30.x, r19.w
                    utof r30.yz, r21.xxwx
                    add r23.zw, r23.zzzw, r30.xxxy
                    mul r30.xy, r23.zwzz, cb1[83].xyxx
                    mul r31.xyz, r27.zyzz, cb1[83].xyxx
                    mul r31.xyz, r29.xyzx, r31.xyzx
                    mul r32.xyz, r28.zyzz, cb1[83].xyxx
                    mul r29.xyz, r29.xyzx, r32.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r18.w, r30.xyzx, t42.yzwx, s4, r31.xyzx, r29.xyzx
                  else 
                    and r19.w, r22.y, l(4095)
                    ubfe r21.xw, l(12, 0, 0, 10), l(12, 0, 0, 20), r22.yyyw
                    utof r29.xz, r15.wwww
                    utof r29.y, r16.w
                    mad r23.zw, r23.xxxy, r29.zzzy, l(0.000000, 0.000000, 0.500000, 0.500000)
                    add r30.xy, r29.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                    min r23.zw, r23.zzzw, r30.xxxy
                    utof r30.x, r19.w
                    utof r30.yz, r21.xxwx
                    add r23.zw, r23.zzzw, r30.xxxy
                    mul r30.xy, r23.zwzz, cb1[83].zwzz
                    mul r31.xyz, r27.zyzz, cb1[83].zwzz
                    mul r31.xyz, r29.xyzx, r31.xyzx
                    mul r32.xyz, r28.zyzz, cb1[83].zwzz
                    mul r29.xyz, r29.xyzx, r32.xyzx
                    sample_d_indexable(texture2darray)(float,float,float,float) r18.w, r30.xyzx, t43.yzwx, s4, r31.xyzx, r29.xyzx
                  endif 
                endif 
                mad r29.xyz, r18.wwww, l(0.960000, 0.960000, 0.960000, 0.000000), l(0.040000, 0.040000, 0.040000, 0.000000)
                add_sat r15.w, -r18.w, l(1.000000)
                mul r20.xyz, r15.wwww, r20.xyzx
              else 
                mov r29.xyz, l(0.040000,0.040000,0.040000,0)
              endif 
              ushr r21.xy, r21.zyzz, l(16, 16, 0, 0)
              if_nz r21.x
                ieq r15.w, r21.x, l(2)
                if_nz r15.w
                  ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r12.w, r12.w, l(112), t36.xxxx
                  ubfe r21.zw, l(0, 0, 4, 12), l(0, 0, 24, 12), r22.zzzz
                  ishl r15.w, l(1), r21.z
                  ushr r16.w, r22.z, l(28)
                  ishl r16.w, l(1), r16.w
                  and r18.w, r22.z, l(4095)
                  and r12.w, r12.w, l(1023)
                  utof r30.xz, r15.wwww
                  utof r30.y, r16.w
                  mad r22.yz, r23.xxyx, r30.zzyz, l(0.000000, 0.500000, 0.500000, 0.000000)
                  add r23.zw, r30.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r22.yz, r22.yyzy, r23.zzwz
                  utof r31.x, r18.w
                  utof r31.y, r21.w
                  add r21.zw, r22.yyyz, r31.xxxy
                  mul r31.xy, r21.zwzz, cb1[84].xyxx
                  utof r31.z, r12.w
                  mul r32.xyz, r27.zyzz, cb1[84].xyxx
                  mul r32.xyz, r30.xyzx, r32.xyzx
                  mul r33.xyz, r28.zyzz, cb1[84].xyxx
                  mul r30.xyz, r30.xyzx, r33.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r12.w, r31.xyzx, t45.yzwx, s4, r32.xyzx, r30.xyzx
                else 
                  ieq r15.w, r21.x, l(6)
                  movc r12.w, r15.w, l(0), l(1.000000)
                endif 
              else 
                mov r12.w, l(1.000000)
              endif 
              mul_sat r12.w, r12.w, l(0.76470590)
              if_nz r21.y
                ieq r15.w, r21.y, l(3)
                if_nz r15.w
                  ubfe r21.xyz, l(4, 12, 10, 0), l(24, 12, 10, 0), r22.xxwx
                  ishl r15.w, l(1), r21.x
                  ushr r16.w, r22.x, l(28)
                  ishl r16.w, l(1), r16.w
                  and r18.w, r22.x, l(4095)
                  utof r22.xz, r15.wwww
                  utof r22.y, r16.w
                  mad r21.xw, r23.xxxy, r22.xxxy, l(0.500000, 0.000000, 0.000000, 0.500000)
                  add r23.xy, r22.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r21.xw, r21.xxxw, r23.xxxy
                  utof r23.x, r18.w
                  utof r23.yz, r21.yyzy
                  add r21.xy, r21.xwxx, r23.xyxx
                  mul r23.xy, r21.xyxx, cb1[84].zwzz
                  mul r21.xyz, r27.xyzx, cb1[84].zwzz
                  mul r21.xyz, r22.xyzx, r21.xyzx
                  mul r27.xyz, r28.xyzx, cb1[84].zwzz
                  mul r22.xyz, r22.xyzx, r27.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r21.xyz, r23.xyzx, t44.xyzw, s4, r21.xyzx, r22.xyzx
                else 
                  mov r21.xyz, l(0.500000,0.500000,1.000000,0)
                endif 
                mad r21.xy, r21.xyxx, l(1.99218750, 1.99218750, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
                dp2 r15.w, r21.xyxx, r21.xyxx
                add r15.w, -r15.w, l(1.000000)
                max r15.w, r15.w, l(0.000000)
                sqrt r15.w, r15.w
                mul r16.w, r21.z, r21.z
                mul r16.w, r16.w, l(0.33333334)
                min r16.w, r16.w, l(1.000000)
                dp3 r18.w, r26.xyzx, r26.xyzx
                rsq r18.w, r18.w
                mul r22.xyz, r18.wwww, r26.xyzx
                dp3 r18.w, -r25.xyzx, -r25.xyzx
                rsq r18.w, r18.w
                mul r23.xyz, r18.wwww, -r25.xyzx
                mul r24.xyz, r1.xxxx, r24.xyzx
                mul r22.xyz, r1.xxxx, r22.xyzx
                mul r23.xyz, r1.xxxx, r23.xyzx
                mul r18.w, r12.w, l(-17.000000)
                exp r18.w, r18.w
                add r16.w, r16.w, r18.w
                log r16.w, r16.w
                mul r16.w, r16.w, l(-0.05882353)
                max r12.w, r16.w, l(0.000000)
                mul r21.yzw, r21.yyyy, r23.xxyz
                mad r21.xyz, r22.xyzx, r21.xxxx, r21.yzwy
                mad r21.xyz, r24.xyzx, r15.wwww, r21.xyzx
                dp3 r15.w, r21.xyzx, r21.xyzx
                rsq r15.w, r15.w
                mul r21.xyz, r15.wwww, r21.xyzx
                add r15.w, -r13.w, l(1.000000)
                mul r22.xyz, r15.wwww, r18.xyzx
                mad r18.xyz, r21.xyzx, r13.wwww, r22.xyzx
              endif 
              add r15.w, -r13.w, l(1.000000)
              mul r21.xyz, r14.xyzx, r15.wwww
              mad r14.xyz, r20.xyzx, r13.wwww, r21.xyzx
              mul r20.xyz, r15.wwww, r19.xyzx
              mad r19.xyz, r29.xyzx, r13.wwww, r20.xyzx
              mul r16.w, r15.w, r17.w
              mad r17.z, r17.z, r15.w, r13.w
              mad r17.w, r12.w, r13.w, r16.w
            endif 
          endif 
        endif 
      endif 
    endloop 
    mov r9.yzw, r14.xxyz
    mov r15.xyz, r18.xyzx
    mov r16.xyz, r19.xyzx
    mov r17.xy, r17.zwzz
    iadd r10.w, r10.w, l(32)
  endloop 
  mov r5.xzw, r9.yyzw
  mov r12.xyz, r15.xyzx
  mov r13.xyz, r16.xyzx
  mov r11.xy, r17.xyxx
endif 
mov_sat r11.x, r11.x
add r1.x, -r11.x, l(1.000000)
mad r3.xyz, r6.xyzx, r1.xxxx, r5.xzwx
mad r2.w, r7.w, r1.x, r11.x
mad r0.yzw, r0.yyzw, r1.xxxx, r12.xxyz
dp3 r3.w, r0.yzwy, r0.yzwy
rsq r3.w, r3.w
mul r4.xyz, r0.yzwy, r3.wwww
mad r0.y, r0.x, r1.x, r11.y
mad r5.xyz, r1.xxxx, l(0.040000, 0.040000, 0.040000, 0.000000), r13.xyzx
dp3 r0.z, -v6.xyzx, -v6.xyzx
rsq r0.z, r0.z
mul r6.xyz, r0.zzzz, -v6.xyzx
dp3 r7.x, r6.xyzx, v4.xyzx
dp3 r7.y, r6.xyzx, v5.xyzx
dp3 r0.w, r6.xyzx, v3.xyzx
lt r3.w, l(0.000000), r0.w
div r7.xy, -r7.xyxx, r0.wwww
and r7.xy, r3.wwww, r7.xyxx
add r7.zw, v1.yyyz, l(0.000000, 0.000000, -0.500000, -0.500000)
add r0.w, cb0[14].y, l(0.000010)
mul r7.xy, r0.wwww, r7.xyxx
mul r7.xy, r7.xyxx, cb0[12].zwzz
mad r7.xy, r7.zwzz, cb0[12].zwzz, r7.xyxx
mad r7.xy, cb0[13].xyxx, cb0[12].zwzz, r7.xyxx
mad r0.w, cb0[11].w, cb1[69].w, l(1.000000)
mul r0.w, r0.w, cb0[11].z
mul r0.w, r0.w, l(0.01745329)
sincos r8.x, r9.x, r0.w
mov r9.y, r9.x
mov r9.z, r8.x
dp2 r10.x, r9.yzyy, r7.xyxx
mov r9.x, -r8.x
dp2 r10.y, r9.xyxx, r7.xyxx
mul r7.xy, cb0[12].xyxx, cb1[69].wwww
mad r7.xy, r7.xyxx, cb0[12].zwzz, r10.xyxx
mul r0.w, cb0[14].x, cb1[69].w
sincos null, r0.w, r0.w
mad r0.w, r0.w, l(0.500000), l(0.500000)
add r0.w, -r0.w, l(1.000000)
add r3.w, -cb0[13].z, cb0[13].w
mad r0.w, r0.w, r3.w, cb0[13].z
div r7.xy, r7.xyxx, r0.wwww
add r7.xy, r7.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
mov_sat r7.zw, r7.xxxy
movc r7.xy, cb0[14].zwzz, r7.zwzz, r7.xyxx
dp3_sat r0.w, r6.xyzx, r1.yzwy
sample_indexable(texture2d)(float,float,float,float) r7.xyzw, r7.xyxx, t29.xyzw, s1
mul r1.yzw, r7.xxyz, cb0[21].xxyz
log r3.w, r0.w
mul r3.w, r3.w, cb0[20].w
exp r3.w, r3.w
add r0.w, -r0.w, l(1.000000)
log r0.w, r0.w
mul r0.w, r0.w, cb0[20].w
exp r0.w, r0.w
movc r0.w, cb0[22].x, r0.w, r3.w
eq r3.w, cb0[20].w, l(0.000000)
movc r0.w, r3.w, l(1.000000), r0.w
mul r3.w, r7.w, cb0[20].z
mul r0.w, r0.w, r3.w
mul r0.w, r1.x, r0.w
mul r1.xyz, r0.wwww, r1.yzwy
add r0.w, v2.y, v2.x
add r0.w, r0.w, v2.z
add r0.w, r0.w, cb0[15].y
frc r0.w, r0.w
mad r7.y, cb1[69].w, cb0[15].z, r0.w
mov r7.x, cb0[15].x
sample_l_indexable(texture2d)(float,float,float,float) r0.w, r7.xyxx, t24.yzwx, s5, l(0.000000)
log r0.w, |r0.w|
mul r0.w, r0.w, cb0[16].z
exp r0.w, r0.w
add r1.w, -cb0[16].x, cb0[16].y
mad r0.w, r0.w, r1.w, cb0[16].x
mul r1.xyz, r0.wwww, r1.xyzx
ine r0.w, cb1[92].x, l(0)
utof r7.xy, r2.zyzz
dp2 r3.w, r7.yxyy, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r3.w, r3.w
mul r3.w, r3.w, l(52.982918)
frc r3.w, r3.w
mad r3.w, r3.w, l(6.28318548), cb1[70].w
sincos r8.x, r9.x, r3.w
dp2 r3.w, r7.xyxx, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r3.w, r3.w
mul r3.w, r3.w, l(52.982918)
frc r3.w, r3.w
mad r3.w, r3.w, l(6.28318548), cb1[70].w
sincos r7.x, r10.x, r3.w
dp3_sat r0.x, r4.xyzx, r6.xyzx
dp3 r3.w, -r6.xyzx, r4.xyzx
add r3.w, r3.w, r3.w
mad r11.xyz, r4.xyzx, -r3.wwww, -r6.xyzx
mul r3.w, r0.y, l(17.000000)
exp r3.w, r3.w
add r3.w, r3.w, l(2.000000)
div r3.w, l(2.000000), r3.w
sqrt r5.w, r3.w
add r6.w, -r0.y, l(1.000000)
mul r7.y, r6.w, l(5.000000)
mad r7.z, r6.w, l(5.000000), l(-2.500000)
mul_sat r7.z, r7.z, l(0.400000)
mul r7.z, r7.z, l(100.000000)
mad r8.zw, -r6.wwww, l(0.000000, 0.000000, 10.000000, 5.000000), l(0.000000, 0.000000, 6.857410, 7.085000)
exp r7.w, r8.z
mul r7.w, r0.x, r7.w
mul r7.w, r7.w, l(9.136810)
mul r8.z, r6.w, r7.y
mad r8.z, -r8.z, l(2.015905), r8.w
exp r8.z, r8.z
mul r8.z, r0.x, r8.z
mul r8.z, r8.z, l(9.708090)
max r7.w, r7.w, r8.z
max r7.w, r7.w, l(1.268160)
mul r2.x, r2.x, l(0.00781250)
min r2.x, r2.x, l(15.000000)
ftou r2.x, r2.x
ushr r12.xy, r2.yzyy, l(6, 6, 0, 0)
ishl r12.z, r2.x, l(4)
mov r2.xy, l(0,0,0,0)
mov r13.w, l(0)
mov r14.yz, l(0,0,1.000000,0)
mov r15.xy, l(0,0,0,0)
mov r16.xy, l(0,0,0,0)
mov r17.xy, l(0,0,0,0)
mov r18.x, l(1.000000)
mov r19.xyzw, l(0,0,0,0)
mov r20.yzw, l(0,0,0,0)
mov r8.zw, l(0,0,0,0)
loop 
  uge r9.w, r8.w, cb2[0].y
  breakc_nz r9.w
  ushr r2.z, r8.w, l(5)
  iadd r13.xyz, r2.xyzx, r12.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r2.z, r13.xyzw, t7.yzxw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r21.xyzw, r8.w, l(0), t15.wxyz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r22.xyzw, r8.w, l(16), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r23.xyzw, r8.w, l(32), t15.yxwz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r8.w, l(48), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r8.w, l(64), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r8.w, l(80), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r10.yz, r8.w, l(96), t15.xxyx
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r8.w, l(116), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r8.w, l(132), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r8.w, l(148), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r8.w, l(164), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r8.w, l(180), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r8.w, l(196), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xy, r8.w, l(212), t15.xyxx
  add r13.xyz, -r21.yzwy, v6.xyzx
  dp3 r9.w, r13.xyzx, r13.xyzx
  sqrt r9.w, r9.w
  ge r9.w, cb2[54].y, r9.w
  and r10.w, r27.y, l(0x0000ffff)
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r10.w, l(0), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r10.w, l(16), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r10.w, l(32), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r10.w, l(48), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r38.xyzw, r10.w, l(64), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r39.xyzw, r10.w, l(80), t16.xyzw
  dp3 r12.w, r34.xyzx, r13.xyzx
  add_sat r12.w, r34.w, r12.w
  dp3 r14.w, r35.xyzx, r13.xyzx
  add_sat r14.w, r35.w, r14.w
  mul r12.w, r12.w, r14.w
  dp3 r14.w, r36.xyzx, r13.xyzx
  add_sat r14.w, r36.w, r14.w
  mul r12.w, r12.w, r14.w
  dp3 r14.w, r37.xyzx, r13.xyzx
  add_sat r14.w, r37.w, r14.w
  mul r12.w, r12.w, r14.w
  dp3 r14.w, r38.xyzx, r13.xyzx
  add_sat r14.w, r38.w, r14.w
  mul r12.w, r12.w, r14.w
  dp3 r14.w, r39.xyzx, r13.xyzx
  add_sat r14.w, r39.w, r14.w
  mul r14.x, r12.w, r14.w
  and r12.w, r10.y, l(1)
  movc r14.xw, r12.wwww, r14.xxxy, r14.zzzx
  mov r34.xy, r27.zwzz
  mov r34.z, r28.z
  dp3 r12.w, r11.xyzx, r34.xyzx
  dp3 r15.w, r13.xyzx, r34.xyzx
  add r15.w, -r28.w, r15.w
  ge r16.w, r15.w, l(0.000000)
  max r15.w, r7.z, |r15.w|
  movc r15.w, r16.w, r15.w, -r15.w
  max r12.w, -r12.w, l(0.00000010)
  div r12.w, r15.w, r12.w
  min r12.w, |r12.w|, l(131072.000000)
  mov r28.z, r29.z
  dp3 r15.w, r11.xyzx, r28.xyzx
  dp3 r16.w, r13.xyzx, r28.xyzx
  add r16.w, -r29.w, r16.w
  ge r17.w, r16.w, l(0.000000)
  max r16.w, r7.z, |r16.w|
  movc r16.w, r17.w, r16.w, -r16.w
  max r15.w, -r15.w, l(0.00000010)
  div r15.w, r16.w, r15.w
  min r12.w, r12.w, |r15.w|
  mov r29.z, r30.z
  dp3 r15.w, r11.xyzx, r29.xyzx
  dp3 r16.w, r13.xyzx, r29.xyzx
  add r16.w, -r30.w, r16.w
  ge r17.w, r16.w, l(0.000000)
  max r16.w, r7.z, |r16.w|
  movc r16.w, r17.w, r16.w, -r16.w
  max r15.w, -r15.w, l(0.00000010)
  div r15.w, r16.w, r15.w
  min r12.w, r12.w, |r15.w|
  mov r30.z, r31.z
  dp3 r15.w, r11.xyzx, r30.xyzx
  dp3 r16.w, r13.xyzx, r30.xyzx
  add r16.w, -r31.w, r16.w
  ge r17.w, r16.w, l(0.000000)
  max r16.w, r7.z, |r16.w|
  movc r16.w, r17.w, r16.w, -r16.w
  max r15.w, -r15.w, l(0.00000010)
  div r15.w, r16.w, r15.w
  min r12.w, r12.w, |r15.w|
  mov r31.z, r32.x
  dp3 r15.w, r11.xyzx, r31.xyzx
  dp3 r16.w, r13.xyzx, r31.xyzx
  add r16.w, -r32.y, r16.w
  ge r17.w, r16.w, l(0.000000)
  max r16.w, r7.z, |r16.w|
  movc r16.w, r17.w, r16.w, -r16.w
  max r15.w, -r15.w, l(0.00000010)
  div r15.w, r16.w, r15.w
  min r12.w, r12.w, |r15.w|
  mov r33.zw, r32.zzzw
  dp3 r15.w, r11.zxyz, r33.xzwx
  dp3 r16.w, r13.zxyz, r33.xzwx
  add r16.w, -r33.y, r16.w
  ge r17.w, r16.w, l(0.000000)
  max r16.w, r7.z, |r16.w|
  movc r16.w, r17.w, r16.w, -r16.w
  max r15.w, -r15.w, l(0.00000010)
  div r15.w, r16.w, r15.w
  min r12.w, r12.w, |r15.w|
  mov r28.x, r24.w
  mov r28.yz, r25.zzwz
  add r28.xyz, r13.xyzx, r28.xyzx
  mad r28.xyz, r11.xyzx, r12.wwww, r28.xyzx
  dp3 r15.w, r28.xyzx, r28.xyzx
  sqrt r15.w, r15.w
  div r12.w, r12.w, r15.w
  add r12.w, r12.w, r12.w
  sqrt r12.w, r12.w
  mad r12.w, r6.w, l(5.000000), r12.w
  add r12.w, r12.w, l(-0.844800)
  mov r21.y, r22.z
  mov r21.z, r23.x
  dp3 r29.x, r28.xyzx, r21.xyzx
  mov r30.xy, r22.xwxx
  mov r30.z, r23.w
  dp3 r29.y, r28.xyzx, r30.xyzx
  mov r23.x, r22.y
  dp3 r29.z, r28.xyzx, r23.xyzx
  ubfe r18.zw, l(0, 0, 6, 9), l(0, 0, 25, 16), r27.yyyy
  utof r29.w, r18.w
  sample_l_indexable(texturecubearray)(float,float,float,float) r22.xyz, r29.xyzw, t8.xyzw, s2, r12.w
  and r27.yzw, r22.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
  ieq r27.yzw, r27.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
  or r12.w, r27.z, r27.y
  or r12.w, r27.w, r12.w
  movc r22.xyz, r12.wwww, l(1.000000,1.000000,0,0), r22.xyzx
  dp3 r28.x, r13.xyzx, r21.xyzx
  dp3 r28.y, r13.xyzx, r30.xyzx
  dp3 r28.z, r13.xyzx, r23.xyzx
  mad_sat r24.xyz, r28.xyzx, r24.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mov r25.z, r26.x
  mad r24.xyz, r24.xyzx, r25.xyzx, r26.yzwy
  dp3 r29.x, r4.xyzx, r21.xyzx
  dp3 r29.y, r4.xyzx, r30.xyzx
  dp3 r29.z, r4.xyzx, r23.xyzx
  lt r21.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r29.xyzx
  movc r15.z, r21.x, l(0), l(0.500000)
  add r23.xyz, r15.xyzx, r24.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r23.xyz, r23.xyzx, t17.xyzw, s4, l(0.000000)
  movc r16.z, r21.y, l(0), l(0.500000)
  add r21.xyw, r16.xyxz, r24.xyxz
  sample_l_indexable(texture3d)(float,float,float,float) r21.xyw, r21.xywx, t18.xywz, s4, l(0.000000)
  movc r17.z, r21.z, l(0), l(0.500000)
  add r24.xyz, r17.xyzx, r24.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r24.xyz, r24.xyzx, t19.xyzw, s4, l(0.000000)
  mul r25.xyz, r29.xyzx, r29.xyzx
  sample_l_indexable(texturecubearray)(float,float,float,float) r26.xyz, r29.xyzw, t8.xyzw, s2, l(6.000000)
  and r27.yzw, r26.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
  ieq r27.yzw, r27.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
  or r12.w, r27.z, r27.y
  or r12.w, r27.w, r12.w
  movc r26.xyz, r12.wwww, l(1.000000,1.000000,0,0), r26.xyzx
  mov r28.xyzw, r19.xyzw
  mov r27.yzw, r20.yyzw
  mov r12.w, r8.z
  mov r15.z, r2.z
  loop 
    breakc_z r15.z
    firstbit_lo r15.w, r15.z
    ishl r15.w, l(1), r15.w
    and r16.z, r15.w, r15.z
    if_nz r16.z
      not r15.w, r15.w
      and r15.z, r15.w, r15.z
      if_nz r9.w
        mov r15.w, r10.y
        mov r29.xy, r14.xwxx
        mov r16.z, l(1)
        loop 
          ige r16.w, r16.z, r18.z
          breakc_nz r16.w
          iadd r16.w, r10.w, r16.z
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r16.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r16.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r16.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r16.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r16.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r16.w, l(80), t16.xyzw
          dp3 r16.w, r30.xyzx, r13.xyzx
          add_sat r16.w, r30.w, r16.w
          mul r16.w, r16.w, r29.x
          dp3 r17.z, r31.xyzx, r13.xyzx
          add_sat r17.z, r31.w, r17.z
          mul r16.w, r16.w, r17.z
          dp3 r17.z, r32.xyzx, r13.xyzx
          add_sat r17.z, r32.w, r17.z
          mul r16.w, r16.w, r17.z
          dp3 r17.z, r33.xyzx, r13.xyzx
          add_sat r17.z, r33.w, r17.z
          mul r16.w, r16.w, r17.z
          dp3 r17.z, r34.xyzx, r13.xyzx
          add_sat r17.z, r34.w, r17.z
          mul r16.w, r16.w, r17.z
          dp3 r17.z, r35.xyzx, r13.xyzx
          add_sat r17.z, r35.w, r17.z
          mul r29.x, r16.w, r17.z
          ushr r17.w, r15.w, l(2)
          ubfe r18.w, l(1), l(2), r15.w
          and r21.z, r17.w, l(2)
          max r22.w, r29.x, r29.y
          mad r16.w, -r16.w, r17.z, l(1.000000)
          mul r16.w, r16.w, r29.y
          movc r18.y, r21.z, r16.w, r22.w
          movc r29.xy, r18.wwww, r29.xyxx, r18.xyxx
          iadd r16.z, r16.z, l(1)
          mov r15.w, r17.w
        endloop 
        mov_sat r29.y, r29.y
        mul r15.w, r10.z, r29.y
        lt r16.z, l(0.000000), r15.w
        if_nz r16.z
          mad r30.z, r29.y, r10.z, r27.w
          mul r15.w, r27.x, r15.w
          mul r29.xzw, r15.wwww, r25.xxyz
          mul r31.xyz, r21.xywx, r29.zzzz
          mad r31.xyz, r23.xyzx, r29.xxxx, r31.xyzx
          mad r29.xzw, r24.xxyz, r29.wwww, r31.xxyz
          mul r31.xyz, r26.xyzx, r29.xzwx
          dp3 r16.z, r31.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r31.xyz, r29.xzwx, r26.xyzx, r28.xyzx
          mul r16.w, r7.w, r16.z
          mul r29.xzw, r15.wwww, r22.xxyz
          dp3 r15.w, r29.xzwx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r15.w, r7.w, r16.z, r15.w
          div r15.w, r16.w, r15.w
          mov r32.x, r28.w
          mov r32.yz, r27.yyzy
          mad r30.xyw, r29.zwzx, r15.wwww, r32.yzyx
          mov r31.w, r30.w
        else 
          mov r31.xyzw, r28.xyzw
          mov r30.xyz, r27.yzwy
        endif 
        mov r12.w, l(-1)
        mov r28.xyzw, r31.xyzw
        mov r27.yzw, r30.xxyz
        break 
      endif 
    endif 
  endloop 
  if_nz r12.w
    mov r19.xyzw, r28.xyzw
    mov r20.yzw, r27.yyzw
    mov r8.z, l(-1)
    break 
  endif 
  iadd r8.w, r8.w, l(32)
  mov r19.xyzw, r28.xyzw
  mov r20.yzw, r27.yyzw
  mov r8.z, r12.w
endloop 
if_z r8.z
  iadd r2.x, cb2[0].y, -cb2[58].x
  and r2.y, r2.x, l(-32)
  iadd r2.z, -r2.y, r2.x
  and r8.z, cb2[0].y, l(-32)
  iadd r8.w, -r8.z, cb2[0].y
  mov r13.xy, l(0,0,0,0)
  mov r14.w, l(0)
  mov r15.yz, l(0,0,1.000000,0)
  mov r16.xy, l(0,0,0,0)
  mov r17.x, l(1.000000)
  mov r18.xy, l(0,0,0,0)
  mov r21.xy, l(0,0,0,0)
  mov r22.xyzw, r19.xyzw
  mov r23.yzw, r20.yyzw
  mov r9.w, r2.y
  loop 
    uge r10.y, r9.w, cb2[0].y
    breakc_nz r10.y
    ushr r13.z, r9.w, l(5)
    iadd r14.xyz, r12.xyzx, r13.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r10.y, r14.xyzw, t7.yxzw
    ieq r10.z, r2.y, r9.w
    bfi r10.w, r2.z, l(0), l(0), r10.y
    movc r10.y, r10.z, r10.w, r10.y
    ieq r10.z, r8.z, r9.w
    ubfe r10.w, r8.w, l(0), r10.y
    movc r10.y, r10.z, r10.w, r10.y
    iadd r10.z, r9.w, cb2[0].x
    mov r24.xyzw, r22.xyzw
    mov r25.xyz, r23.yzwy
    mov r10.w, r10.y
    loop 
      breakc_z r10.w
      firstbit_lo r12.w, r10.w
      ishl r13.z, l(1), r12.w
      and r13.w, r10.w, r13.z
      if_nz r13.w
        xor r10.w, r10.w, r13.z
        iadd r13.z, r10.z, r12.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r26.xyzw, r13.z, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r14.xy, r13.z, l(16), t11.xyxx
        add r26.xyz, r26.xyzx, -v6.xyzx
        mov r14.z, r26.w
        lt r14.xyz, |r26.xyzx|, r14.zxyz
        and r13.z, r14.y, r14.x
        and r13.z, r14.z, r13.z
        if_nz r13.z
          iadd r12.w, r9.w, r12.w
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r12.w, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r13.zw, r12.w, l(96), t15.xxxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r12.w, l(116), t15.zwxy
          add r14.xyz, -r26.yzwy, v6.xyzx
          and r15.w, r27.w, l(0x0000ffff)
          ubfe r16.w, l(6), l(25), r27.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r15.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r15.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r15.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r15.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r15.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r15.w, l(80), t16.xyzw
          dp3 r17.z, r28.xyzx, r14.xyzx
          add_sat r17.z, r28.w, r17.z
          dp3 r17.w, r29.xyzx, r14.xyzx
          add_sat r17.w, r29.w, r17.w
          mul r17.z, r17.w, r17.z
          dp3 r17.w, r30.xyzx, r14.xyzx
          add_sat r17.w, r30.w, r17.w
          mul r17.z, r17.w, r17.z
          dp3 r17.w, r31.xyzx, r14.xyzx
          add_sat r17.w, r31.w, r17.w
          mul r17.z, r17.w, r17.z
          dp3 r17.w, r32.xyzx, r14.xyzx
          add_sat r17.w, r32.w, r17.w
          mul r17.z, r17.w, r17.z
          dp3 r17.w, r33.xyzx, r14.xyzx
          add_sat r17.w, r33.w, r17.w
          mul r15.x, r17.w, r17.z
          and r17.z, r13.z, l(1)
          movc r17.zw, r17.zzzz, r15.xxxy, r15.zzzx
          mov r15.x, r13.z
          mov r28.xy, r17.zwzz
          mov r18.w, l(1)
          loop 
            ige r21.w, r18.w, r16.w
            breakc_nz r21.w
            iadd r21.w, r15.w, r18.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r21.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r21.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r21.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r21.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r21.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r21.w, l(80), t16.xyzw
            dp3 r21.w, r29.xyzx, r14.xyzx
            add_sat r21.w, r29.w, r21.w
            mul r21.w, r21.w, r28.x
            dp3 r26.w, r30.xyzx, r14.xyzx
            add_sat r26.w, r30.w, r26.w
            mul r21.w, r21.w, r26.w
            dp3 r26.w, r31.xyzx, r14.xyzx
            add_sat r26.w, r31.w, r26.w
            mul r21.w, r21.w, r26.w
            dp3 r26.w, r32.xyzx, r14.xyzx
            add_sat r26.w, r32.w, r26.w
            mul r21.w, r21.w, r26.w
            dp3 r26.w, r33.xyzx, r14.xyzx
            add_sat r26.w, r33.w, r26.w
            mul r21.w, r21.w, r26.w
            dp3 r26.w, r34.xyzx, r14.xyzx
            add_sat r26.w, r34.w, r26.w
            mul r28.x, r21.w, r26.w
            ushr r28.z, r15.x, l(2)
            ubfe r28.w, l(1), l(2), r15.x
            and r29.x, r28.z, l(2)
            max r29.y, r28.x, r28.y
            mad r21.w, -r21.w, r26.w, l(1.000000)
            mul r21.w, r21.w, r28.y
            movc r17.y, r29.x, r21.w, r29.y
            movc r28.xy, r28.wwww, r28.xyxx, r17.xyxx
            iadd r18.w, r18.w, l(1)
            mov r15.x, r28.z
          endloop 
          mov_sat r28.y, r28.y
          mul r13.z, r13.w, r28.y
          lt r15.x, l(0.000000), r13.z
          if_nz r15.x
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r12.w, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r12.w, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r12.w, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r12.w, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r12.w, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r12.w, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r12.w, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r12.w, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r12.w, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r12.w, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xy, r12.w, l(212), t15.xyxx
            mad r25.z, r28.y, r13.w, r25.z
            mul r12.w, r27.z, r13.z
            mov r27.z, r34.z
            dp3 r13.z, r11.xyzx, r27.xyzx
            dp3 r13.w, r14.xyzx, r27.xyzx
            add r13.w, -r34.w, r13.w
            ge r15.x, r13.w, l(0.000000)
            max r13.w, r7.z, |r13.w|
            movc r13.w, r15.x, r13.w, -r13.w
            max r13.z, -r13.z, l(0.00000010)
            div r13.z, r13.w, r13.z
            min r13.z, |r13.z|, l(131072.000000)
            mov r34.z, r35.z
            dp3 r13.w, r11.xyzx, r34.xyzx
            dp3 r15.x, r14.xyzx, r34.xyzx
            add r15.x, -r35.w, r15.x
            ge r15.w, r15.x, l(0.000000)
            max r15.x, r7.z, |r15.x|
            movc r15.x, r15.w, r15.x, -r15.x
            max r13.w, -r13.w, l(0.00000010)
            div r13.w, r15.x, r13.w
            min r13.z, |r13.w|, r13.z
            mov r35.z, r36.z
            dp3 r13.w, r11.xyzx, r35.xyzx
            dp3 r15.x, r14.xyzx, r35.xyzx
            add r15.x, -r36.w, r15.x
            ge r15.w, r15.x, l(0.000000)
            max r15.x, r7.z, |r15.x|
            movc r15.x, r15.w, r15.x, -r15.x
            max r13.w, -r13.w, l(0.00000010)
            div r13.w, r15.x, r13.w
            min r13.z, |r13.w|, r13.z
            mov r36.z, r37.z
            dp3 r13.w, r11.xyzx, r36.xyzx
            dp3 r15.x, r14.xyzx, r36.xyzx
            add r15.x, -r37.w, r15.x
            ge r15.w, r15.x, l(0.000000)
            max r15.x, r7.z, |r15.x|
            movc r15.x, r15.w, r15.x, -r15.x
            max r13.w, -r13.w, l(0.00000010)
            div r13.w, r15.x, r13.w
            min r13.z, |r13.w|, r13.z
            mov r37.z, r38.x
            dp3 r13.w, r11.xyzx, r37.xyzx
            dp3 r15.x, r14.xyzx, r37.xyzx
            add r15.x, -r38.y, r15.x
            ge r15.w, r15.x, l(0.000000)
            max r15.x, r7.z, |r15.x|
            movc r15.x, r15.w, r15.x, -r15.x
            max r13.w, -r13.w, l(0.00000010)
            div r13.w, r15.x, r13.w
            min r13.z, |r13.w|, r13.z
            mov r39.zw, r38.zzzw
            dp3 r13.w, r11.zxyz, r39.xzwx
            dp3 r15.x, r14.zxyz, r39.xzwx
            add r15.x, -r39.y, r15.x
            ge r15.w, r15.x, l(0.000000)
            max r15.x, r7.z, |r15.x|
            movc r15.x, r15.w, r15.x, -r15.x
            max r13.w, -r13.w, l(0.00000010)
            div r13.w, r15.x, r13.w
            min r13.z, |r13.w|, r13.z
            mov r27.x, r31.w
            mov r27.yz, r32.zzwz
            add r17.yzw, r14.xxyz, r27.xxyz
            mad r17.yzw, r11.xxyz, r13.zzzz, r17.yyzw
            dp3 r13.w, r17.yzwy, r17.yzwy
            sqrt r13.w, r13.w
            div r13.z, r13.z, r13.w
            add r13.z, r13.z, r13.z
            sqrt r13.z, r13.z
            mad r13.z, r6.w, l(5.000000), r13.z
            add r13.z, r13.z, l(-0.844800)
            mov r26.y, r29.z
            mov r26.z, r30.x
            dp3 r34.x, r17.yzwy, r26.xyzx
            mov r27.xy, r29.xwxx
            mov r27.z, r30.w
            dp3 r34.y, r17.yzwy, r27.xyzx
            mov r30.x, r29.y
            dp3 r34.z, r17.yzwy, r30.xyzx
            ubfe r13.w, l(9), l(16), r27.w
            utof r34.w, r13.w
            sample_l_indexable(texturecubearray)(float,float,float,float) r17.yzw, r34.xyzw, t8.wxyz, s2, r13.z
            and r28.xzw, r17.yyzw, l(0x7fffffff, 0, 0x7fffffff, 0x7fffffff)
            ieq r28.xzw, r28.xxzw, l(0x7f800000, 0, 0x7f800000, 0x7f800000)
            or r13.z, r28.z, r28.x
            or r13.z, r28.w, r13.z
            movc r17.yzw, r13.zzzz, l(0,1.000000,1.000000,0), r17.yyzw
            dp3 r29.x, r14.xyzx, r26.xyzx
            dp3 r29.y, r14.xyzx, r27.xyzx
            dp3 r29.z, r14.xyzx, r30.xyzx
            mad_sat r14.xyz, r29.xyzx, r31.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
            mov r32.z, r33.x
            mad r14.xyz, r14.xyzx, r32.xyzx, r33.yzwy
            dp3 r34.x, r4.xyzx, r26.xyzx
            dp3 r34.y, r4.xyzx, r27.xyzx
            dp3 r34.z, r4.xyzx, r30.xyzx
            lt r26.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r34.xyzx
            movc r16.z, r26.x, l(0), l(0.500000)
            add r27.xyz, r14.xyzx, r16.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r27.xyz, r27.xyzx, t17.xyzw, s4, l(0.000000)
            mul r28.xzw, r34.xxyz, r34.xxyz
            mul r28.xzw, r12.wwww, r28.xxzw
            movc r18.z, r26.y, l(0), l(0.500000)
            add r26.xyw, r14.xyxz, r18.xyxz
            sample_l_indexable(texture3d)(float,float,float,float) r26.xyw, r26.xywx, t18.xywz, s4, l(0.000000)
            mul r26.xyw, r28.zzzz, r26.xyxw
            mad r26.xyw, r27.xyxz, r28.xxxx, r26.xyxw
            movc r21.z, r26.z, l(0), l(0.500000)
            add r14.xyz, r14.xyzx, r21.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r14.xyz, r14.xyzx, t19.xyzw, s4, l(0.000000)
            mad r14.xyz, r14.xyzx, r28.wwww, r26.xywx
            sample_l_indexable(texturecubearray)(float,float,float,float) r26.xyz, r34.xyzw, t8.xyzw, s2, l(6.000000)
            and r27.xyz, r26.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
            ieq r27.xyz, r27.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
            or r13.z, r27.y, r27.x
            or r13.z, r27.z, r13.z
            movc r26.xyz, r13.zzzz, l(1.000000,1.000000,0,0), r26.xyzx
            mul r27.xyz, r14.xyzx, r26.xyzx
            dp3 r13.z, r27.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r24.xyz, r14.xyzx, r26.xyzx, r24.xyzx
            mul r13.w, r7.w, r13.z
            mul r14.xyz, r12.wwww, r17.yzwy
            dp3 r12.w, r14.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r12.w, r7.w, r13.z, r12.w
            div r12.w, r13.w, r12.w
            mov r26.x, r24.w
            mov r26.yz, r25.xxyx
            mad r25.xyw, r14.yzyx, r12.wwww, r26.yzyx
            mov r24.w, r25.w
          endif 
        endif 
      endif 
    endloop 
    mov r22.xyzw, r24.xyzw
    mov r23.yzw, r25.xxyz
    iadd r9.w, r9.w, l(32)
  endloop 
  lt r8.z, r23.w, l(1.000000)
  if_nz r8.z
    mov r13.xy, l(0,0,0,0)
    mov r14.w, l(0)
    mov r15.yz, l(0,0,1.000000,0)
    mov r16.xy, l(0,0,0,0)
    mov r17.x, l(1.000000)
    mov r18.xy, l(0,0,0,0)
    mov r21.xy, l(0,0,0,0)
    mov r24.x, r22.w
    mov r24.yzw, r23.yyzw
    mov r10.yzw, r22.xxyz
    mov r8.z, r23.w
    mov r8.w, l(0)
    loop 
      uge r9.w, r8.w, r2.x
      breakc_nz r9.w
      ushr r13.z, r8.w, l(5)
      iadd r14.xyz, r12.xyzx, r13.xyzx
      ld_indexable(texture2darray)(uint,uint,uint,uint) r9.w, r14.xyzw, t7.yzwx
      ieq r12.w, r2.y, r8.w
      ubfe r13.z, r2.z, l(0), r9.w
      movc r9.w, r12.w, r13.z, r9.w
      iadd r12.w, r8.w, cb2[0].x
      mov r25.xyzw, r24.xyzw
      mov r14.xyz, r10.yzwy
      mov r13.z, r8.z
      mov r13.w, r9.w
      loop 
        breakc_z r13.w
        firstbit_lo r15.w, r13.w
        ishl r16.w, l(1), r15.w
        and r17.z, r13.w, r16.w
        if_nz r17.z
          xor r13.w, r13.w, r16.w
          iadd r16.w, r12.w, r15.w
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r26.xyzw, r16.w, l(0), t11.xyzw
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r27.xy, r16.w, l(16), t11.xyxx
          add r26.xyz, r26.xyzx, -v6.xyzx
          mov r27.z, r26.w
          lt r26.xyz, |r26.xyzx|, r27.zxyz
          and r16.w, r26.y, r26.x
          and r16.w, r26.z, r16.w
          if_nz r16.w
            iadd r15.w, r8.w, r15.w
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r15.w, l(0), t15.wxyz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r17.zw, r15.w, l(96), t15.xxxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r15.w, l(116), t15.zwxy
            add r28.xyz, -r26.yzwy, v6.xyzx
            and r16.w, r27.w, l(0x0000ffff)
            ubfe r18.w, l(6), l(25), r27.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r16.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r16.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r16.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r16.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r16.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r16.w, l(80), t16.xyzw
            dp3 r20.w, r29.xyzx, r28.xyzx
            add_sat r20.w, r29.w, r20.w
            dp3 r21.w, r30.xyzx, r28.xyzx
            add_sat r21.w, r30.w, r21.w
            mul r20.w, r20.w, r21.w
            dp3 r21.w, r31.xyzx, r28.xyzx
            add_sat r21.w, r31.w, r21.w
            mul r20.w, r20.w, r21.w
            dp3 r21.w, r32.xyzx, r28.xyzx
            add_sat r21.w, r32.w, r21.w
            mul r20.w, r20.w, r21.w
            dp3 r21.w, r33.xyzx, r28.xyzx
            add_sat r21.w, r33.w, r21.w
            mul r20.w, r20.w, r21.w
            dp3 r21.w, r34.xyzx, r28.xyzx
            add_sat r21.w, r34.w, r21.w
            mul r15.x, r20.w, r21.w
            and r20.w, r17.z, l(1)
            movc r29.xy, r20.wwww, r15.xyxx, r15.zxzz
            mov r15.x, r17.z
            mov r30.xy, r29.xyxx
            mov r20.w, l(1)
            loop 
              ige r21.w, r20.w, r18.w
              breakc_nz r21.w
              iadd r21.w, r16.w, r20.w
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r21.w, l(0), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r21.w, l(16), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r21.w, l(32), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r21.w, l(48), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r21.w, l(64), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r21.w, l(80), t16.xyzw
              dp3 r21.w, r31.xyzx, r28.xyzx
              add_sat r21.w, r31.w, r21.w
              mul r21.w, r21.w, r30.x
              dp3 r26.w, r32.xyzx, r28.xyzx
              add_sat r26.w, r32.w, r26.w
              mul r21.w, r21.w, r26.w
              dp3 r26.w, r33.xyzx, r28.xyzx
              add_sat r26.w, r33.w, r26.w
              mul r21.w, r21.w, r26.w
              dp3 r26.w, r34.xyzx, r28.xyzx
              add_sat r26.w, r34.w, r26.w
              mul r21.w, r21.w, r26.w
              dp3 r26.w, r35.xyzx, r28.xyzx
              add_sat r26.w, r35.w, r26.w
              mul r21.w, r21.w, r26.w
              dp3 r26.w, r36.xyzx, r28.xyzx
              add_sat r26.w, r36.w, r26.w
              mul r30.x, r21.w, r26.w
              ushr r28.w, r15.x, l(2)
              ubfe r29.z, l(1), l(2), r15.x
              and r29.w, r28.w, l(2)
              max r30.z, r30.x, r30.y
              mad r21.w, -r21.w, r26.w, l(1.000000)
              mul r21.w, r21.w, r30.y
              movc r17.y, r29.w, r21.w, r30.z
              movc r30.xy, r29.zzzz, r30.xyxx, r17.xyxx
              iadd r20.w, r20.w, l(1)
              mov r15.x, r28.w
            endloop 
            add_sat r15.x, -r13.z, r30.y
            mul r16.w, r17.w, r15.x
            lt r17.y, l(0.000000), r16.w
            if_nz r17.y
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r15.w, l(16), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r15.w, l(32), t15.yxwz
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r15.w, l(48), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r15.w, l(64), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r15.w, l(80), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r15.w, l(132), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r15.w, l(148), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r15.w, l(164), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r15.w, l(180), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xyzw, r15.w, l(196), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r40.xy, r15.w, l(212), t15.xyxx
              mad r25.w, r15.x, r17.w, r25.w
              mul r15.x, r27.z, r16.w
              mov r27.z, r35.z
              dp3 r15.w, r11.xyzx, r27.xyzx
              dp3 r16.w, r28.xyzx, r27.xyzx
              add r16.w, -r35.w, r16.w
              ge r17.y, r16.w, l(0.000000)
              max r16.w, r7.z, |r16.w|
              movc r16.w, r17.y, r16.w, -r16.w
              max r15.w, -r15.w, l(0.00000010)
              div r15.w, r16.w, r15.w
              min r15.w, |r15.w|, l(131072.000000)
              mov r35.z, r36.z
              dp3 r16.w, r11.xyzx, r35.xyzx
              dp3 r17.y, r28.xyzx, r35.xyzx
              add r17.y, -r36.w, r17.y
              ge r17.z, r17.y, l(0.000000)
              max r17.y, r7.z, |r17.y|
              movc r17.y, r17.z, r17.y, -r17.y
              max r16.w, -r16.w, l(0.00000010)
              div r16.w, r17.y, r16.w
              min r15.w, r15.w, |r16.w|
              mov r36.z, r37.z
              dp3 r16.w, r11.xyzx, r36.xyzx
              dp3 r17.y, r28.xyzx, r36.xyzx
              add r17.y, -r37.w, r17.y
              ge r17.z, r17.y, l(0.000000)
              max r17.y, r7.z, |r17.y|
              movc r17.y, r17.z, r17.y, -r17.y
              max r16.w, -r16.w, l(0.00000010)
              div r16.w, r17.y, r16.w
              min r15.w, r15.w, |r16.w|
              mov r37.z, r38.z
              dp3 r16.w, r11.xyzx, r37.xyzx
              dp3 r17.y, r28.xyzx, r37.xyzx
              add r17.y, -r38.w, r17.y
              ge r17.z, r17.y, l(0.000000)
              max r17.y, r7.z, |r17.y|
              movc r17.y, r17.z, r17.y, -r17.y
              max r16.w, -r16.w, l(0.00000010)
              div r16.w, r17.y, r16.w
              min r15.w, r15.w, |r16.w|
              mov r38.z, r39.x
              dp3 r16.w, r11.xyzx, r38.xyzx
              dp3 r17.y, r28.xyzx, r38.xyzx
              add r17.y, -r39.y, r17.y
              ge r17.z, r17.y, l(0.000000)
              max r17.y, r7.z, |r17.y|
              movc r17.y, r17.z, r17.y, -r17.y
              max r16.w, -r16.w, l(0.00000010)
              div r16.w, r17.y, r16.w
              min r15.w, r15.w, |r16.w|
              mov r40.zw, r39.zzzw
              dp3 r16.w, r11.zxyz, r40.xzwx
              dp3 r17.y, r28.zxyz, r40.xzwx
              add r17.y, -r40.y, r17.y
              ge r17.z, r17.y, l(0.000000)
              max r17.y, r7.z, |r17.y|
              movc r17.y, r17.z, r17.y, -r17.y
              max r16.w, -r16.w, l(0.00000010)
              div r16.w, r17.y, r16.w
              min r15.w, r15.w, |r16.w|
              mov r27.x, r32.w
              mov r27.yz, r33.zzwz
              add r17.yzw, r28.xxyz, r27.xxyz
              mad r17.yzw, r11.xxyz, r15.wwww, r17.yyzw
              dp3 r16.w, r17.yzwy, r17.yzwy
              sqrt r16.w, r16.w
              div r15.w, r15.w, r16.w
              add r15.w, r15.w, r15.w
              sqrt r15.w, r15.w
              mad r15.w, r6.w, l(5.000000), r15.w
              add r15.w, r15.w, l(-0.844800)
              mov r26.y, r29.z
              mov r26.z, r31.x
              dp3 r35.x, r17.yzwy, r26.xyzx
              mov r27.xy, r29.xwxx
              mov r27.z, r31.w
              dp3 r35.y, r17.yzwy, r27.xyzx
              mov r31.x, r29.y
              dp3 r35.z, r17.yzwy, r31.xyzx
              ubfe r16.w, l(9), l(16), r27.w
              utof r35.w, r16.w
              sample_l_indexable(texturecubearray)(float,float,float,float) r17.yzw, r35.xyzw, t8.wxyz, s2, r15.w
              and r29.xyz, r17.yzwy, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
              ieq r29.xyz, r29.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
              or r15.w, r29.y, r29.x
              or r15.w, r29.z, r15.w
              movc r17.yzw, r15.wwww, l(0,1.000000,1.000000,0), r17.yyzw
              dp3 r29.x, r28.xyzx, r26.xyzx
              dp3 r29.y, r28.xyzx, r27.xyzx
              dp3 r29.z, r28.xyzx, r31.xyzx
              mad_sat r28.xyz, r29.xyzx, r32.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
              mov r33.z, r34.x
              mad r28.xyz, r28.xyzx, r33.xyzx, r34.yzwy
              dp3 r35.x, r4.xyzx, r26.xyzx
              dp3 r35.y, r4.xyzx, r27.xyzx
              dp3 r35.z, r4.xyzx, r31.xyzx
              lt r26.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r35.xyzx
              movc r16.z, r26.x, l(0), l(0.500000)
              add r27.xyz, r16.xyzx, r28.xyzx
              sample_l_indexable(texture3d)(float,float,float,float) r27.xyz, r27.xyzx, t17.xyzw, s4, l(0.000000)
              mul r29.xyz, r35.xyzx, r35.xyzx
              mul r29.xyz, r15.xxxx, r29.xyzx
              movc r18.z, r26.y, l(0), l(0.500000)
              add r26.xyw, r18.xyxz, r28.xyxz
              sample_l_indexable(texture3d)(float,float,float,float) r26.xyw, r26.xywx, t18.xywz, s4, l(0.000000)
              mul r26.xyw, r29.yyyy, r26.xyxw
              mad r26.xyw, r27.xyxz, r29.xxxx, r26.xyxw
              movc r21.z, r26.z, l(0), l(0.500000)
              add r27.xyz, r21.xyzx, r28.xyzx
              sample_l_indexable(texture3d)(float,float,float,float) r27.xyz, r27.xyzx, t19.xyzw, s4, l(0.000000)
              mad r26.xyz, r27.xyzx, r29.zzzz, r26.xywx
              sample_l_indexable(texturecubearray)(float,float,float,float) r27.xyz, r35.xyzw, t8.xyzw, s2, l(6.000000)
              and r28.xyz, r27.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
              ieq r28.xyz, r28.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
              or r15.w, r28.y, r28.x
              or r15.w, r28.z, r15.w
              movc r27.xyz, r15.wwww, l(1.000000,1.000000,0,0), r27.xyzx
              mul r28.xyz, r26.xyzx, r27.xyzx
              dp3 r15.w, r28.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
              mad r14.xyz, r26.xyzx, r27.xyzx, r14.xyzx
              mul r16.z, r7.w, r15.w
              mul r17.yzw, r15.xxxx, r17.yyzw
              dp3 r15.x, r17.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
              mad r15.x, r7.w, r15.w, r15.x
              div r15.x, r16.z, r15.x
              mad r25.xyz, r17.yzwy, r15.xxxx, r25.xyzx
            endif 
          endif 
        endif 
      endloop 
      mov r24.xyzw, r25.xyzw
      mov r10.yzw, r14.xxyz
      iadd r8.w, r8.w, l(32)
    endloop 
    mov r23.xyzw, r24.zxyw
    mov r22.xyz, r10.yzwy
    mov r23.xyzw, r23.yzxw
  else 
    mov r23.x, r22.w
  endif 
  max r2.x, r23.w, l(1.000000)
  rcp r2.x, r2.x
  mov_sat r23.w, r23.w
  mul r19.xyz, r2.xxxx, r22.xyzx
  mul r20.xyz, r2.xxxx, r23.xyzx
  lt r2.y, r23.w, l(0.990000)
  if_nz r2.y
    add r2.y, -r23.w, l(1.000000)
    mul r2.z, r2.y, cb2[19].x
    add r10.yzw, v6.xxyz, -cb2[35].xxyz
    mul r13.x, r10.y, cb2[35].w
    mul r13.yz, r10.zzwz, cb2[36].xxyx
    add_sat r10.yzw, r13.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
    mul r13.xy, r10.yzyy, cb2[36].zwzz
    mul r13.z, r10.w, cb2[37].x
    add r10.yzw, r13.xxyz, cb2[37].yyzw
    lt r13.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r4.xyzx
    movc r13.xyz, r13.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
    mov r13.w, l(0)
    add r14.xyz, r10.yzwy, r13.wwxw
    sample_l_indexable(texture3d)(float,float,float,float) r14.xyz, r14.xyzx, t17.xyzw, s4, l(0.000000)
    mul r15.xyz, r4.xyzx, r4.xyzx
    mul r15.xyz, r2.zzzz, r15.xyzx
    add r16.xyz, r10.yzwy, r13.wwyw
    sample_l_indexable(texture3d)(float,float,float,float) r16.xyz, r16.xyzx, t18.xyzw, s4, l(0.000000)
    mul r16.xyz, r15.yyyy, r16.xyzx
    mad r14.xyz, r14.xyzx, r15.xxxx, r16.xyzx
    add r10.yzw, r10.yyzw, r13.wwwz
    sample_l_indexable(texture3d)(float,float,float,float) r10.yzw, r10.yzwy, t19.wxyz, s4, l(0.000000)
    mad r10.yzw, r10.yyzw, r15.zzzz, r14.xxyz
    mov r4.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r13.xyz, r4.xyzw, t8.xyzw, s2, l(6.000000)
    mul r10.yzw, r10.yyzw, r13.xxyz
    dp3 r2.z, r10.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
    mad r19.xyz, r22.xyzx, r2.xxxx, r10.yzwy
    mov r11.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r7.yzw, r11.xyzw, t8.wxyz, s2, r7.y
    mad r2.x, cb2[19].x, r2.y, -r2.z
    mad r2.x, r0.y, r2.x, r2.z
    mad r20.xyz, r7.yzwy, r2.xxxx, r20.xyzx
  endif 
else 
  mov r20.x, r19.w
endif 
mad r2.xy, r0.xyxx, l(0.984375, 0.984375, 0.000000, 0.000000), l(0.00781250, 0.00781250, 0.000000, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r2.xy, r2.xyxx, t5.xyzw, s2, l(0.000000)
mul r13.xyz, r2.xxxx, r20.yzxy
mul r2.xyz, r2.yyyy, r20.xyzx
sqrt r0.y, r5.w
mad r0.y, r0.y, l(0.500000), l(0.500000)
mul r0.y, r0.y, r0.y
mul r4.w, r0.y, l(0.500000)
mad r0.y, -r0.y, l(0.500000), l(1.000000)
mad r6.w, r0.x, r0.y, r4.w
mul r0.y, r0.y, r6.w
mul r4.w, r4.w, r6.w
dp3 r6.w, r4.xyzx, cb2[17].xyzx
mov_sat r7.y, r6.w
ge r7.z, l(0.000000), r7.y
if_nz r7.z
  mov r7.w, l(0)
endif 
if_z r7.z
  mul r10.yzw, v6.yyyy, cb2[29].xxyz
  mad r10.yzw, v6.xxxx, cb2[28].xxyz, r10.yyzw
  mad r10.yzw, v6.zzzz, cb2[30].xxyz, r10.yyzw
  add r10.yzw, r10.yyzw, cb2[31].xxyz
  add r7.z, r10.w, -cb2[17].w
  mad r7.z, -r7.z, l(0.00006104), l(1.000000)
  mov_sat r8.z, r7.z
  eq r8.z, r7.z, r8.z
  if_nz r8.z
    mov r8.zw, l(0,0,0,0)
    loop 
      ge r9.w, r8.z, l(3.000000)
      breakc_nz r9.w
      ftou r9.w, r8.z
      add r14.xy, r10.yzyy, -cb2[r9.w + 20].xyxx
      max r11.w, |r14.y|, |r14.x|
      mul r8.w, r11.w, cb2[r9.w + 20].z
      lt r9.w, r8.w, l(1.000000)
      if_nz r9.w
        break 
      endif 
      add r8.z, r8.z, l(1.000000)
      mov r8.w, l(0)
    endloop 
  else 
    mov r8.zw, l(0,0,3.000000,0)
  endif 
  ge r9.w, r8.z, l(3.000000)
  if_nz r9.w
    mul r14.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
    rcp r15.xz, r14.xxxx
    mov r15.y, -r15.z
    mad r14.xyz, r10.yzyy, r15.xyzx, r14.yzyy
    add r15.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r14.xyz, r14.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r14.xyz, r15.xyzx, r14.xyzx
    mul r15.xy, r14.zyzz, cb2[32].xxxx
    round_ni r15.xy, r15.xyxx
    mul r11.w, r15.y, cb2[27].x
    mad r11.w, r11.w, cb2[32].x, r15.x
    ftou r11.w, r11.w
    iadd r11.w, r11.w, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r12.w, r11.w, l(0), t23.xxxx
    and r14.w, r12.w, l(0x40000000)
    ishl r15.x, r12.w, l(2)
    if_z r14.w
      and r14.w, r12.w, l(0x01ffffff)
      iadd r16.x, r11.w, r14.w
      ushr r11.w, r12.w, l(25)
      utof r11.w, r11.w
      mul r14.xyz, r11.wwww, r14.xyzx
      frc r14.xyz, r14.xyzx
      mul r14.xyz, r14.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
      ftou r14.xyz, r14.xyzx
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.z, r16.x, l(0), t23.xxxx
      ushr r15.yz, r14.zzyz, l(0, 6, 6, 0)
      and r11.w, r16.z, l(0xc0000000)
      iadd r12.w, r16.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r12.w, r12.w, l(0), t23.xxxx
      movc r12.w, r15.z, r16.z, r12.w
      ushr r14.w, r12.w, l(13)
      movc r12.w, r15.y, r14.w, r12.w
      and r12.w, r12.w, l(8191)
      iadd r17.x, r12.w, r16.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.z, r17.x, l(0), t23.xxxx
      mov r16.y, l(0)
      mov r17.y, l(1)
      movc r15.yzw, r11.wwww, r16.xxyz, r17.xxyz
      movc r17.yz, r11.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r18.xy, r14.zyzz, r17.yyyy
      and r18.xy, r18.xyxx, l(1, 1, 0, 0)
      and r12.w, r15.w, l(0xc0000000)
      iadd r14.w, r15.y, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r14.w, r14.w, l(0), t23.xxxx
      movc r14.w, r18.y, r15.w, r14.w
      ushr r16.w, r14.w, l(13)
      movc r14.w, r18.x, r16.w, r14.w
      and r14.w, r14.w, l(8191)
      iadd r17.x, r14.w, r15.y
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.w, r17.x, l(0), t23.xxxx
      movc r15.yzw, r12.wwww, r15.yyzw, r17.xxzw
      movc r15.yzw, r11.wwww, r16.xxyz, r15.yyzw
      and r11.w, r15.w, l(0xc0000000)
      if_z r11.w
        iadd r11.w, -r15.z, l(6)
        ushr r16.xy, r14.zyzz, r11.wwww
        or r11.w, r15.w, l(0x40000000)
        bfi r12.w, l(1), l(1), r16.y, l(0)
        bfi r12.w, l(1), l(0), r16.x, r12.w
        imul null, r12.w, r12.w, l(10)
        ushr r11.w, r11.w, r12.w
        and r11.w, r11.w, l(1023)
        iadd r16.x, r11.w, r15.y
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.w, r16.x, l(0), t23.xxxx
        iadd r16.yz, r15.zzzz, l(0, 1, 2, 0)
        iadd r11.w, -r16.y, l(6)
        ushr r17.xy, r14.zyzz, r11.wwww
        and r11.w, r16.w, l(0xc0000000)
        or r12.w, r16.w, l(0x40000000)
        bfi r14.w, l(1), l(1), r17.y, l(0)
        bfi r14.w, l(1), l(0), r17.x, r14.w
        imul null, r14.w, r14.w, l(10)
        ushr r12.w, r12.w, r14.w
        and r12.w, r12.w, l(1023)
        iadd r17.x, r12.w, r16.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.z, r17.x, l(0), t23.xxxx
        mov r17.y, r16.z
        movc r17.xyz, r11.wwww, r16.xywx, r17.xyzx
        iadd r12.w, -r17.y, l(6)
        ushr r16.yz, r14.zzyz, r12.wwww
        and r12.w, r17.z, l(0xc0000000)
        or r14.w, r17.z, l(0x40000000)
        bfi r15.z, l(1), l(1), r16.z, l(0)
        bfi r15.z, l(1), l(0), r16.y, r15.z
        imul null, r15.z, r15.z, l(10)
        ushr r14.w, r14.w, r15.z
        and r14.w, r14.w, l(1023)
        iadd r18.x, r14.w, r17.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.y, r18.x, l(0), t23.xxxx
        movc r16.yz, r12.wwww, r17.xxzx, r18.xxyx
        movc r15.yw, r11.wwww, r16.xxxw, r16.yyyz
      endif 
      and r11.w, r15.w, l(0xc0000000)
      if_z r11.w
        ubfe r12.w, l(14), l(15), r15.w
        utof r12.w, r12.w
        mul r12.w, r12.w, cb2[27].w
        mul r12.w, r12.w, l(0.00006104)
        and r16.xy, r15.wwww, l(0x00007fff, 0x20000000, 0, 0)
        utof r14.w, r16.x
        mul r14.w, r14.w, cb2[27].w
        mul r14.w, r14.w, l(0.00003052)
        and r15.z, r14.y, l(3)
        iadd r15.z, r15.z, r15.y
        iadd r15.z, r15.z, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.z, r15.z, l(0), t23.xxxx
        bfi r16.xzw, l(2, 0, 2, 1), l(3, 0, 1, 4), r14.xxyz, l(0, 0, 0, 0)
        ushr r14.x, r15.z, r16.x
        and r14.x, r14.x, l(255)
        utof r14.x, r14.x
        mul r14.x, r14.w, r14.x
        mad r14.x, r14.x, l(0.00392157), r12.w
        iadd r14.y, r16.z, l(1)
        ubfe r14.z, l(1), l(1), r14.z
        iadd r14.y, r14.z, r14.y
        iadd r14.y, r14.y, r15.y
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r14.y, r14.y, l(0), t23.xxxx
        ushr r14.y, r14.y, r16.w
        and r14.y, r14.y, l(0x0000ffff)
        utof r14.y, r14.y
        mul r14.y, r14.w, r14.y
        mad r12.w, r14.y, l(0.00001526), r12.w
        movc r15.x, r16.y, r14.x, r12.w
      else 
        and r12.w, r15.w, l(0x80000000)
        iadd r14.x, r15.y, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r14.x, r14.x, l(0), t23.xxxx
        movc r12.w, r12.w, r14.x, l(0)
        ishl r14.x, r15.w, l(2)
        ushr r14.y, r12.w, l(16)
        f16tof32 r14.y, r14.y
        and r12.w, r12.w, l(0x0000ffff)
        f16tof32 r12.w, r12.w
        mad r14.x, r10.y, r14.y, r14.x
        mad r12.w, r10.z, r12.w, r14.x
        movc r15.x, r11.w, r12.w, r15.x
      endif 
    endif 
    mad r10.w, -cb2[27].z, l(2.000000), r10.w
    lt r10.w, r15.x, r10.w
    movc r7.w, r10.w, l(0), l(1.000000)
  endif 
  if_z r9.w
    if_z cb2[58].y
      ftou r9.w, r8.z
      add r14.xy, r10.yzyy, -cb2[r9.w + 20].xyxx
      mul r14.xy, r14.xyxx, cb2[r9.w + 20].zzzz
      mad r14.xy, r14.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r9.w, cb2[26].y
      add r14.z, r8.z, r9.w
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r9.w, r14.xyzx, t13.xxxx, s13, r7.z
      sample_l_indexable(texture2darray)(float,float,float,float) r10.w, r14.xyzx, t31.yzwx, s0, l(0.000000)
      add r9.w, r9.w, r10.w
      add_sat r9.w, r9.w, l(-1.000000)
      mul r10.w, r9.w, r9.w
      mul r7.w, r9.w, r10.w
    endif 
    if_nz cb2[58].y
      mov r14.x, -r8.x
      ftou r9.w, r8.z
      add r8.z, r8.z, l(1.000000)
      min r8.z, r8.z, l(2.000000)
      add r8.w, -r8.w, l(1.000000)
      mul r8.w, r8.w, l(28.000000)
      ftou r8.zw, r8.zzzw
      add r15.xy, r10.yzyy, -cb2[r9.w + 20].xyxx
      mul r15.xy, r15.xyxx, cb2[r9.w + 20].zzzz
      mad r15.xy, r15.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      add r10.yz, r10.yyzy, -cb2[r8.z + 20].xxyx
      mul r10.yz, r10.yyzy, cb2[r8.z + 20].zzzz
      mad r10.yz, r10.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      mov r14.y, r9.x
      mov r14.z, r8.x
      mov r10.w, l(0)
      mov r11.w, l(0)
      loop 
        uge r12.w, r11.w, l(8)
        breakc_nz r12.w
        ult r12.w, r8.w, r11.w
        movc r15.zw, r12.wwww, r10.yyyz, r15.xxxy
        movc r14.w, r12.w, cb2[r8.z + 20].w, cb2[r9.w + 20].w
        movc r12.w, r12.w, r8.z, r9.w
        dp2 r16.x, icb[r11.w + 0].yxyy, r14.xyxx
        dp2 r16.y, icb[r11.w + 0].yxyy, r14.yzyy
        mad r16.xy, r16.xyxx, r14.wwww, r15.zwzz
        iadd r12.w, r12.w, cb2[26].y
        utof r16.z, r12.w
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.w, r16.xyzx, t13.xxxx, s13, r7.z
        sample_l_indexable(texture2darray)(float,float,float,float) r14.w, r16.xyzx, t31.yzwx, s0, l(0.000000)
        add r12.w, r12.w, r14.w
        add_sat r12.w, r12.w, l(-1.000000)
        mad r10.w, r12.w, l(0.125000), r10.w
        iadd r11.w, r11.w, l(1)
      endloop 
      mul r7.z, r10.w, r10.w
      mul r7.w, r10.w, r7.z
    endif 
  endif 
endif 
lt r7.z, l(0.000000), r7.y
if_nz r7.z
  lt r7.z, l(0.000000), r7.w
  if_nz r7.z
    mul r7.z, r3.w, cb2[18].w
    mul r7.z, r7.y, r7.z
    if_nz cb2[23].x
      add r14.xyz, v6.xyzx, cb1[24].xyzx
      mov r14.w, l(1.000000)
      dp4 r8.z, cb2[24].xyzw, r14.xyzw
      dp4 r8.w, cb2[25].xyzw, r14.xyzw
      frc r14.xy, r8.zwzz
      iadd r8.z, l(-1), cb2[23].x
      utof r14.z, r8.z
      sample_l_indexable(texture2darray)(float,float,float,float) r10.yzw, r14.xyzx, t20.wxyz, s2, l(0.000000)
      add r10.yzw, r10.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
      mad r10.yzw, cb2[23].yyyy, r10.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
      mul r10.yzw, r10.yyzw, cb2[18].xxyz
    else 
      mov r10.yzw, cb2[18].xxyz
    endif 
    ushr r8.z, cb2[53].x, l(16)
    ult r8.w, l(0), r8.z
    and r8.w, r0.w, r8.w
    if_nz r8.w
      iadd r8.z, r8.z, cb2[0].x
      iadd r8.z, r8.z, l(-1)
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r8.w, r8.z, l(52), t12.xxxx
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.xyzw, r8.z, l(68), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r8.z, l(84), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r8.z, l(132), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r8.z, l(148), t12.xyzw
      mad r9.w, |r6.w|, l(-0.200000), l(0.400000)
      mad r18.xyz, r4.xyzx, r9.wwww, v6.xyzx
      mov r18.w, l(1.000000)
      dp4 r14.x, r14.xyzw, r18.xyzw
      dp4 r14.y, r15.xyzw, r18.xyzw
      mad r14.xy, r14.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      add r14.xy, r17.zwzz, r14.xyxx
      mul r14.xy, r17.xyxx, r14.xyxx
      div r14.zw, r8.wwww, r16.xxxz
      add r15.xy, -r14.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
      ge r15.xy, r14.xyxx, r15.xyxx
      ge r14.zw, r14.zzzw, r14.xxxy
      or r14.zw, r14.zzzw, r15.xxxy
      or r9.w, r14.w, r14.z
      if_z r9.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r9.w, r8.z, l(28), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r8.z, l(100), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.zw, r8.z, l(164), t12.xxxy
        dp4 r8.z, r15.xyzw, r18.xyzw
        mov_sat r14.xy, r14.xyxx
        mad r15.xy, r14.xyxx, r16.xzxx, r16.ywyy
        add r8.z, r14.z, r8.z
        div r8.z, r8.z, r14.w
        max r8.z, r8.z, l(0.00006104)
        and r9.w, r9.w, l(0x0000ffff)
        if_nz cb2[58].y
          mov r14.x, -r8.x
          utof r16.z, r9.w
          mov r14.y, r9.x
          mov r14.z, r8.x
          mov r11.w, l(0)
          mov r12.w, l(0)
          loop 
            ige r14.w, r12.w, l(8)
            breakc_nz r14.w
            dp2 r17.x, icb[r12.w + 0].yxyy, r14.xyxx
            dp2 r17.y, icb[r12.w + 0].yxyy, r14.yzyy
            mad r16.xy, r17.xyxx, r8.wwww, r15.xyxx
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r14.w, r16.xyzx, t9.xxxx, s13, r8.z
            mad r11.w, r14.w, l(0.125000), r11.w
            iadd r12.w, r12.w, l(1)
          endloop 
        else 
          utof r15.z, r9.w
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r11.w, r15.xyzx, t9.xxxx, s13, r8.z
        endif 
        mul r8.z, r11.w, r11.w
        mul r8.z, r11.w, r8.z
      else 
        mov r8.z, l(1.000000)
      endif 
      mul r7.w, r7.w, r8.z
    else 
      and r8.z, cb2[53].x, l(0x0000ffff)
      ult r8.w, l(0), r8.z
      not r9.w, r0.w
      and r8.w, r8.w, r9.w
      if_nz r8.w
        iadd r8.z, r8.z, cb2[0].x
        iadd r8.z, r8.z, l(-1)
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r8.w, r8.z, l(52), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.xyzw, r8.z, l(68), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r8.z, l(84), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r8.z, l(132), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r8.z, l(148), t12.xyzw
        mad r9.w, |r6.w|, l(-0.200000), l(0.400000)
        mad r18.xyz, r4.xyzx, r9.wwww, v6.xyzx
        mov r18.w, l(1.000000)
        dp4 r14.x, r14.xyzw, r18.xyzw
        dp4 r14.y, r15.xyzw, r18.xyzw
        mad r14.xy, r14.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
        add r14.xy, r17.zwzz, r14.xyxx
        mul r14.xy, r17.xyxx, r14.xyxx
        div r14.zw, r8.wwww, r16.xxxz
        add r15.xy, -r14.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
        ge r15.xy, r14.xyxx, r15.xyxx
        ge r14.zw, r14.zzzw, r14.xxxy
        or r14.zw, r14.zzzw, r15.xxxy
        or r9.w, r14.w, r14.z
        if_z r9.w
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r9.w, r8.z, l(28), t12.xxxx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r8.z, l(100), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.zw, r8.z, l(164), t12.xxxy
          dp4 r8.z, r15.xyzw, r18.xyzw
          mov_sat r14.xy, r14.xyxx
          mad r15.xy, r14.xyxx, r16.xzxx, r16.ywyy
          add r8.z, r14.z, r8.z
          div r8.z, r8.z, r14.w
          max r8.z, r8.z, l(0.00006104)
          and r9.w, r9.w, l(0x0000ffff)
          if_nz cb2[58].y
            mov r14.x, -r8.x
            utof r16.z, r9.w
            mov r14.y, r9.x
            mov r14.z, r8.x
            mov r11.w, l(0)
            mov r12.w, l(0)
            loop 
              ige r14.w, r12.w, l(8)
              breakc_nz r14.w
              dp2 r17.x, icb[r12.w + 0].yxyy, r14.xyxx
              dp2 r17.y, icb[r12.w + 0].yxyy, r14.yzyy
              mad r16.xy, r17.xyxx, r8.wwww, r15.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r14.w, r16.xyzx, t9.xxxx, s13, r8.z
              mad r11.w, r14.w, l(0.125000), r11.w
              iadd r12.w, r12.w, l(1)
            endloop 
          else 
            utof r15.z, r9.w
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r11.w, r15.xyzx, t9.xxxx, s13, r8.z
          endif 
          mul r8.z, r11.w, r11.w
          mul r8.z, r11.w, r8.z
        else 
          mov r8.z, l(1.000000)
        endif 
        mul r7.w, r7.w, r8.z
      endif 
    endif 
    mad r8.z, -r0.x, l(0.500000), l(1.000000)
    mad r8.z, -r7.y, r8.z, l(1.000000)
    mul r8.z, r8.z, r8.z
    mad r8.z, -r8.z, l(0.620000), l(0.620000)
    add r8.z, -r7.y, r8.z
    mad r8.z, r5.w, r8.z, r7.y
    mul r8.z, r7.w, r8.z
    lt r6.w, l(0.000000), r6.w
    mad r14.xyz, r8.zzzz, r10.yzwy, r19.xyzx
    mad r15.xyz, -v6.xyzx, r0.zzzz, cb2[17].xyzx
    dp3 r0.z, r15.xyzx, r15.xyzx
    rsq r0.z, r0.z
    mul r15.xyz, r0.zzzz, r15.xyzx
    dp3 r0.z, r15.xyzx, r6.xyzx
    dp3 r8.z, r4.xyzx, r15.xyzx
    mad r8.w, |r8.z|, r3.w, -|r8.z|
    mad r8.z, |r8.z|, r8.w, l(1.000000)
    mad r7.y, r7.y, r0.y, r4.w
    mul r8.z, r8.z, r8.z
    mul r7.y, r7.y, r8.z
    rcp r7.y, r7.y
    mul r7.y, r7.z, r7.y
    mul r7.y, r7.y, r7.w
    mul r7.y, r7.y, l(0.250000)
    mad r15.xyz, r7.yyyy, r10.yzwy, r2.xyzx
    add_sat r0.z, -r0.z, l(1.000000)
    mul r7.z, r0.z, r0.z
    mul r7.z, r7.z, r7.z
    mul r0.z, r0.z, r7.z
    mul r0.z, r0.z, r7.y
    mad r16.xyz, r0.zzzz, r10.zwyz, r13.xyzx
    mov r14.w, r16.z
    mov r19.w, r13.z
    movc r19.xyzw, r6.wwww, r14.xyzw, r19.xyzw
    mov r16.zw, r15.xxxy
    mov r13.zw, r2.xxxy
    movc r14.xyzw, r6.wwww, r16.xyzw, r13.xyzw
    movc r2.z, r6.w, r15.z, r2.z
    mov r13.z, r19.w
    mov r13.xy, r14.xyxx
    mov r2.xy, r14.zwzz
  endif 
endif 
mov r14.x, -r8.x
not r0.z, r0.w
mad r0.x, -r0.x, l(0.500000), l(1.000000)
mov r15.xy, l(0,0,0,0)
mov r16.w, l(0)
mov r17.xyz, v6.xyzx
mov r17.w, l(1.000000)
mov r18.w, l(1.000000)
mov r14.z, r8.x
mov r20.w, l(1.000000)
mov r21.z, l(1.000000)
mov r22.w, l(1.000000)
mov r14.yw, r9.xxxx
mov r8.y, r14.w
mov r23.w, l(1.000000)
mov r9.y, r14.x
mov r9.z, r8.x
mov r24.w, l(1.000000)
mov r25.x, r9.x
mov r25.y, r14.x
mov r25.z, r8.x
mov r26.x, r9.x
mov r26.y, r14.x
mov r26.z, r8.x
mov r27.x, r9.x
mov r27.y, r14.x
mov r27.z, r8.x
mov r7.yzw, r19.xxyz
mov r28.xyz, r13.zxyz
mov r29.xyz, r2.xyzx
mov r6.w, cb2[58].y
mov r8.z, l(0)
loop 
  uge r8.w, r8.z, cb2[0].x
  breakc_nz r8.w
  ushr r15.z, r8.z, l(5)
  iadd r16.xyz, r12.xyzx, r15.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r8.w, r16.xyzw, t6.yzwx
  mov r10.yzw, r7.yyzw
  mov r16.xyz, r28.xyzx
  mov r30.xyz, r29.xyzx
  mov r9.w, r6.w
  mov r11.w, r8.w
  loop 
    breakc_z r11.w
    firstbit_lo r12.w, r11.w
    ishl r13.w, l(1), r12.w
    and r15.z, r11.w, r13.w
    if_nz r15.z
      xor r11.w, r11.w, r13.w
      iadd r12.w, r8.z, r12.w
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r31.xyzw, r12.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r32.xy, r12.w, l(16), t11.xyxx
      add r31.xyz, r31.xyzx, -v6.xyzx
      mov r32.z, r31.w
      lt r31.xyz, |r31.xyzx|, r32.zxyz
      and r13.w, r31.y, r31.x
      and r13.w, r31.z, r13.w
      if_nz r13.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r12.w, l(0), t12.wxyz
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r12.w, l(16), t12.zxyw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r12.w, l(32), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r12.w, l(48), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r12.w, l(64), t12.yzwx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r12.w, l(80), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r12.w, l(96), t12.yzwx
        ubfe r13.w, l(3), l(24), r32.w
        switch r13.w
          case l(4)
          lt r13.w, l(0.000000), r37.x
          mov r38.xy, r36.zwzz
          mov r38.z, r37.w
          mad r39.xyz, -r38.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r31.yzwy
          add r40.xyz, r39.xyzx, -v6.xyzx
          dp3 r15.z, r38.xyzx, r40.xyzx
          div_sat r15.w, -r15.z, r37.x
          mad r41.xyz, r15.wwww, r38.xyzx, r39.xyzx
          movc r41.xyz, r13.wwww, r41.xyzx, r31.yzwy
          add r41.xyz, r41.xyzx, -v6.xyzx
          dp3 r19.w, r41.xyzx, r41.xyzx
          rsq r21.w, r19.w
          mul r41.xyz, r21.wwww, r41.xyzx
          dp3 r21.w, r4.xyzx, r41.xyzx
          mov_sat r25.w, r21.w
          lt r26.w, l(0.000000), r25.w
          if_nz r26.w
            sqrt r26.w, r19.w
            mul r27.w, r34.x, r34.x
            div r19.w, r27.w, r19.w
            min r19.w, r19.w, l(1.000000)
            mad_sat r41.xy, r26.wwww, r33.xzxx, r33.ywyy
            mul r41.zw, r41.xxxy, r41.xxxy
            mad r41.xy, r41.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
            mul r41.xy, r41.xyxx, r41.zwzz
            mul r19.w, r19.w, r41.x
            mul r19.w, r41.y, r19.w
            lt r26.w, l(0.000000), r19.w
            if_nz r26.w
              ubfe r26.w, l(3), l(27), r32.w
              ine r26.w, r26.w, l(1)
              if_nz r26.w
                mad r26.w, |r21.w|, l(-0.200000), l(0.400000)
                mad r41.xyz, r4.xyzx, r26.wwww, v6.xyzx
                add r41.xyz, -r35.xyzx, r41.xyzx
                max r26.w, |r41.z|, |r41.y|
                max r26.w, r26.w, |r41.x|
                div r26.w, r36.x, r26.w
                add r26.w, r36.y, r26.w
                dp3 r27.w, r41.xyzx, r41.xyzx
                rsq r27.w, r27.w
                max r26.w, r26.w, l(0.00006104)
                and r28.w, r32.w, l(0x0000ffff)
                utof r42.w, r28.w
                mov r28.w, l(0)
                mov r29.w, l(0)
                loop 
                  ige r30.w, r29.w, l(8)
                  breakc_nz r30.w
                  dp2 r43.y, icb[r29.w + 0].yxyy, r14.xyxx
                  dp2 r43.z, icb[r29.w + 0].yxyy, r14.yzyy
                  mul r43.yz, r34.yyyy, r43.yyzy
                  mul r43.x, r10.x, r43.y
                  mul r43.w, r7.x, r43.y
                  mad r42.xyz, r41.xyzx, r27.wwww, r43.xzwx
                  sample_c_lz_indexable(texturecubearray)(float,float,float,float) r30.w, r42.xyzw, t10.xxxx, s13, r26.w
                  mad r28.w, r30.w, l(0.125000), r28.w
                  iadd r29.w, r29.w, l(1)
                endloop 
              else 
                mov r28.w, l(1.000000)
              endif 
              mul r19.w, r19.w, r28.w
              lt r26.w, l(0.000000), r19.w
              if_nz r26.w
                mul r26.w, r3.w, r32.x
                mul r26.w, r26.w, l(0.250000)
                dp3 r27.w, r38.xyzx, r11.xyzx
                dp3 r29.w, r11.xyzx, r40.xyzx
                mad r30.w, -r27.w, r27.w, r37.x
                mad r15.z, r27.w, r29.w, -r15.z
                div_sat r15.z, r15.z, r30.w
                div r27.w, r30.w, r37.x
                mul r27.w, r27.w, l(10.000000)
                min r27.w, r27.w, l(1.000000)
                add r15.z, -r15.w, r15.z
                mad r15.z, r27.w, r15.z, r15.w
                mad r38.xyz, r15.zzzz, r38.xyzx, r39.xyzx
                movc r38.xyz, r13.wwww, r38.xyzx, r31.yzwy
                add r38.xyz, r38.xyzx, -v6.xyzx
                dp3 r13.w, r38.xyzx, r38.xyzx
                rsq r13.w, r13.w
                mul r39.xyz, r13.wwww, r38.xyzx
                ubfe r15.z, l(4), l(16), r32.w
                ult r15.w, l(0), r15.z
                and r15.w, r0.w, r15.w
                if_nz r15.w
                  iadd r15.z, r15.z, cb2[0].x
                  iadd r15.z, r15.z, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.w, r15.z, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r15.z, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r15.z, l(116), t12.xyzw
                  mad r27.w, |r21.w|, l(-0.200000), l(0.400000)
                  mad r18.xyz, r4.xyzx, r27.wwww, v6.xyzx
                  dp4 r27.w, r40.xyzw, r18.xyzw
                  dp4 r29.w, r41.xyzw, r18.xyzw
                  lt r30.w, r29.w, r27.w
                  if_z r30.w
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r15.z, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r15.z, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r15.z, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r15.z, l(148), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xy, r15.z, l(164), t12.xyxx
                    dp4 r40.x, r40.xyzw, r18.xyzw
                    dp4 r40.y, r41.xyzw, r18.xyzw
                    div r18.xy, r40.xyxx, r29.wwww
                    mad r18.xy, r18.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r18.xy, r43.zwzz, r18.xyxx
                    mul r18.xy, r43.xyxx, r18.xyxx
                    div r40.xy, r15.wwww, r42.xzxx
                    add r40.zw, -r40.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                    ge r40.zw, r18.xxxy, r40.zzzw
                    ge r40.xy, r40.xyxx, r18.xyxx
                    or r40.xy, r40.xyxx, r40.zwzz
                    or r18.z, r40.y, r40.x
                    mov_sat r18.xy, r18.xyxx
                    mad r40.xy, r18.xyxx, r42.xzxx, r42.ywyy
                    mul r18.x, r29.w, r44.y
                    mad r18.y, r44.x, r29.w, r27.w
                    div r18.x, r18.y, r18.x
                  else 
                    mov r18.z, l(-1)
                  endif 
                  or r18.y, r30.w, r18.z
                  if_z r18.y
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.z, r15.z, l(28), t12.xxxx
                    max r18.x, r18.x, l(0.00006104)
                    and r15.z, r15.z, l(0x0000ffff)
                    if_nz r9.w
                      utof r41.z, r15.z
                      mov r18.yz, l(0,0,0,0)
                      loop 
                        ige r27.w, r18.z, l(8)
                        breakc_nz r27.w
                        dp2 r42.x, icb[r18.z + 0].yxyy, r14.xwxx
                        dp2 r42.y, icb[r18.z + 0].xyxx, r8.xyxx
                        mad r41.xy, r42.xyxx, r15.wwww, r40.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r27.w, r41.xyzx, t9.xxxx, s13, r18.x
                        mad r18.y, r27.w, l(0.125000), r18.y
                        iadd r18.z, r18.z, l(1)
                      endloop 
                    else 
                      utof r40.z, r15.z
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r18.y, r40.xyzx, t9.xxxx, s13, r18.x
                    endif 
                    mul r15.z, r18.y, r18.y
                    mul r15.z, r18.y, r15.z
                  else 
                    mov r15.z, l(1.000000)
                  endif 
                  mul r19.w, r15.z, r19.w
                else 
                  ubfe r15.z, l(4), l(20), r32.w
                  ult r15.w, l(0), r15.z
                  and r15.w, r0.z, r15.w
                  if_nz r15.w
                    iadd r15.z, r15.z, cb2[0].x
                    iadd r15.z, r15.z, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.w, r15.z, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r15.z, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r15.z, l(116), t12.xyzw
                    mad r18.x, |r21.w|, l(-0.200000), l(0.400000)
                    mad r20.xyz, r4.xyzx, r18.xxxx, v6.xyzx
                    dp4 r18.x, r40.xyzw, r20.xyzw
                    dp4 r18.z, r41.xyzw, r20.xyzw
                    lt r27.w, r18.z, r18.x
                    if_z r27.w
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r15.z, l(68), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r15.z, l(84), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r15.z, l(132), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r15.z, l(148), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xy, r15.z, l(164), t12.xyxx
                      dp4 r40.x, r40.xyzw, r20.xyzw
                      dp4 r40.y, r41.xyzw, r20.xyzw
                      div r20.xy, r40.xyxx, r18.zzzz
                      mad r20.xy, r20.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                      add r20.xy, r43.zwzz, r20.xyxx
                      mul r20.xy, r43.xyxx, r20.xyxx
                      div r40.xy, r15.wwww, r42.xzxx
                      add r40.zw, -r40.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                      ge r40.zw, r20.xxxy, r40.zzzw
                      ge r40.xy, r40.xyxx, r20.xyxx
                      or r40.xy, r40.xyxx, r40.zwzz
                      or r20.z, r40.y, r40.x
                      mov_sat r20.xy, r20.xyxx
                      mad r40.xy, r20.xyxx, r42.xzxx, r42.ywyy
                      mul r20.x, r18.z, r44.y
                      mad r18.x, r44.x, r18.z, r18.x
                      div r18.x, r18.x, r20.x
                    else 
                      mov r20.z, l(-1)
                    endif 
                    or r18.z, r27.w, r20.z
                    if_z r18.z
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.z, r15.z, l(28), t12.xxxx
                      max r18.x, r18.x, l(0.00006104)
                      and r15.z, r15.z, l(0x0000ffff)
                      if_nz r9.w
                        utof r20.z, r15.z
                        mov r18.z, l(0)
                        mov r27.w, l(0)
                        loop 
                          ige r29.w, r27.w, l(8)
                          breakc_nz r29.w
                          dp2 r41.x, icb[r27.w + 0].xyxx, r9.xyxx
                          dp2 r41.y, icb[r27.w + 0].yxyy, r9.xzxx
                          mad r20.xy, r41.xyxx, r15.wwww, r40.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r20.x, r20.xyzx, t9.xxxx, s13, r18.x
                          mad r18.z, r20.x, l(0.125000), r18.z
                          iadd r27.w, r27.w, l(1)
                        endloop 
                      else 
                        utof r40.z, r15.z
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r18.z, r40.xyzx, t9.xxxx, s13, r18.x
                      endif 
                      mul r15.z, r18.z, r18.z
                      mul r15.z, r18.z, r15.z
                    else 
                      mov r15.z, l(1.000000)
                    endif 
                    mul r19.w, r15.z, r19.w
                  endif 
                endif 
                mad r15.z, -r25.w, r0.x, l(1.000000)
                mul r15.z, r15.z, r15.z
                mad r15.z, -r15.z, l(0.620000), l(0.620000)
                add r15.z, -r25.w, r15.z
                mad r15.z, r5.w, r15.z, r25.w
                mul r15.z, r19.w, r15.z
                mov r32.x, r31.x
                lt r15.w, l(0.000000), r21.w
                mad r20.xyz, r15.zzzz, r32.xyzx, r10.yzwy
                dp3_sat r15.z, r4.xyzx, r39.xyzx
                mad r38.xyz, r38.xyzx, r13.wwww, r6.xyzx
                dp3 r13.w, r38.xyzx, r38.xyzx
                rsq r13.w, r13.w
                mul r38.xyz, r13.wwww, r38.xyzx
                dp3 r13.w, r38.xyzx, r6.xyzx
                dp3 r18.x, r4.xyzx, r38.xyzx
                mad r21.w, |r18.x|, r3.w, -|r18.x|
                mad r18.x, |r18.x|, r21.w, l(1.000000)
                mad r21.w, r15.z, r0.y, r4.w
                mul r18.x, r18.x, r18.x
                mul r18.x, r21.w, r18.x
                rcp r18.x, r18.x
                mul r15.z, r26.w, r15.z
                mul r15.z, r15.z, r18.x
                mul r15.z, r19.w, r15.z
                mad r38.xyz, r15.zzzz, r32.xyzx, r30.xyzx
                add_sat r13.w, -r13.w, l(1.000000)
                mul r18.x, r13.w, r13.w
                mul r18.x, r18.x, r18.x
                mul r13.w, r13.w, r18.x
                mul r13.w, r13.w, r15.z
                mad r39.xyz, r13.wwww, r32.xyzx, r16.xyzx
                movc r10.yzw, r15.wwww, r20.xxyz, r10.yyzw
                movc r16.xyz, r15.wwww, r39.xyzx, r16.xyzx
                movc r30.xyz, r15.wwww, r38.xyzx, r30.xyzx
              endif 
            endif 
          endif 
          break 
          case l(2)
          mov r20.xy, r34.zwzz
          mov r20.z, r35.w
          add r20.xyz, r20.xyzx, -v6.xyzx
          dp3 r13.w, r20.xyzx, r20.xyzx
          rsq r13.w, r13.w
          mul r38.xyz, r13.wwww, r20.xyzx
          dp3 r15.z, r4.xyzx, r38.xyzx
          mov_sat r15.w, r15.z
          lt r18.x, l(0.000000), r15.w
          if_nz r18.x
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r12.w, l(112), t12.yzwx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r12.w, l(128), t12.zxyw
            mov r40.xyz, r38.xyzx
            mov r40.w, r39.y
            dp4 r18.x, r40.xyzw, r17.xyzw
            lt r19.w, r18.x, l(1.000000)
            if_nz r19.w
              mov r41.xyz, l(1.000000,1.000000,1.000000,0)
              mov r19.w, l(0)
            else 
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r12.w, l(172), t12.yzwx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r12.w, l(188), t12.wxyz
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r12.w, l(204), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r21.w, r12.w, l(236), t12.xxxx
              add r45.xyz, r31.yzwy, -v6.xyzx
              mul r25.w, r34.x, r34.x
              dp3 r26.w, r45.xyzx, r45.xyzx
              div r25.w, r25.w, r26.w
              min r25.w, r25.w, l(1.000000)
              mad_sat r33.xy, r18.xxxx, r33.xzxx, r33.ywyy
              mul r33.zw, r33.xxxy, r33.xxxy
              mad r33.xy, r33.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
              mul r33.xy, r33.xyxx, r33.zwzz
              mul r25.w, r25.w, r33.x
              mul r25.w, r33.y, r25.w
              mov r35.w, r36.x
              dp4 r33.x, r35.xyzw, r17.xyzw
              mov r45.xyz, r36.yzwy
              mov r45.w, r37.w
              dp4 r33.y, r45.xyzw, r17.xyzw
              div r21.xy, r33.xyxx, r18.xxxx
              lt r18.x, r42.w, l(0.00048828)
              if_nz r18.x
                mov r43.y, r44.x
                mad_sat r33.xy, |r21.xyxx|, r43.zwzz, r43.xyxx
                mul r33.zw, r33.xxxy, r33.xxxy
                mad r33.xy, r33.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
                mul r33.xy, r33.xyxx, r33.zwzz
                mul r18.x, r33.y, r33.x
              else 
                mov r42.w, r43.y
                mul_sat r33.xyzw, |r21.yyxx|, r42.xyzw
                log r33.xyzw, r33.xyzw
                mul r33.xyzw, r33.xyzw, r43.xxxx
                exp r33.xyzw, r33.xyzw
                add r33.xy, r33.zwzz, r33.xyxx
                log r33.xy, r33.xyxx
                mul r33.xy, r33.xyxx, r44.xxxx
                exp r33.xy, r33.xyxx
                mul r26.w, r33.x, r43.z
                mad r27.w, r43.w, r33.y, l(-1.000000)
                mad r26.w, r43.w, r33.y, -r26.w
                div_sat r26.w, r27.w, r26.w
                mul r27.w, r26.w, r26.w
                mad r26.w, r26.w, l(-2.000000), l(3.000000)
                mul r18.x, r26.w, r27.w
              endif 
              mul r19.w, r18.x, r25.w
              and r18.x, r21.w, l(255)
              if_nz r18.x
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyz, r12.w, l(220), t12.xyzx
                dp3 r21.w, r44.yzwy, r21.xyzx
                dp3 r21.x, r33.xyzx, r21.xyzx
                frc r33.xy, r21.wxww
                iadd r18.x, r18.x, l(-1)
                utof r33.z, r18.x
                sample_l_indexable(texture2darray)(float,float,float,float) r41.xyz, r33.xyzx, t20.xyzw, s2, l(0.000000)
              else 
                mov r41.xyz, l(1.000000,1.000000,1.000000,0)
              endif 
            endif 
            mov r31.yz, r32.yyzy
            mul r21.xyw, r41.xyxz, r31.xyxz
            lt r18.x, l(0.000000), r19.w
            if_nz r18.x
              ubfe r18.x, l(3), l(27), r32.w
              ine r18.x, r18.x, l(1)
              if_nz r18.x
                mad r18.x, |r15.z|, l(-0.200000), l(0.400000)
                mad r22.xyz, r4.xyzx, r18.xxxx, v6.xyzx
                mov r38.xyz, r37.xyzx
                dp4 r18.x, r38.xyzw, r22.xyzw
                dp4 r25.w, r40.xyzw, r22.xyzw
                ge r26.w, r25.w, r18.x
                if_nz r26.w
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.y, r12.w, l(144), t12.xxxx
                  mov r35.w, r36.x
                  dp4 r31.x, r35.xyzw, r22.xyzw
                  mov r37.xyz, r36.yzwy
                  dp4 r31.y, r37.xyzw, r22.xyzw
                  div r22.xy, r31.xyxx, r25.wwww
                  mad_sat r22.xy, r22.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  mad r22.xy, r22.xyxx, r39.zwzz, r39.xyxx
                  div r12.w, r18.x, r25.w
                  max r12.w, r12.w, l(0.00006104)
                  and r18.x, r32.w, l(0x0000ffff)
                  if_nz r9.w
                    utof r31.z, r18.x
                    mov r25.w, l(0)
                    mov r26.w, l(0)
                    loop 
                      ige r27.w, r26.w, l(8)
                      breakc_nz r27.w
                      dp2 r33.x, icb[r26.w + 0].xyxx, r25.xyxx
                      dp2 r33.y, icb[r26.w + 0].yxyy, r25.xzxx
                      mad r31.xy, r33.xyxx, r34.yyyy, r22.xyxx
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r27.w, r31.xyzx, t9.xxxx, s13, r12.w
                      mad r25.w, r27.w, l(0.125000), r25.w
                      iadd r26.w, r26.w, l(1)
                    endloop 
                  else 
                    utof r22.z, r18.x
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r25.w, r22.xyzx, t9.xxxx, s13, r12.w
                  endif 
                  mul r12.w, r25.w, r25.w
                  mul r12.w, r25.w, r12.w
                else 
                  mov r12.w, l(1.000000)
                endif 
              else 
                mov r12.w, l(1.000000)
              endif 
              mul r12.w, r12.w, r19.w
              lt r18.x, l(0.000000), r12.w
              if_nz r18.x
                mul r18.x, r3.w, r32.x
                mul r18.x, r15.w, r18.x
                ubfe r19.w, l(4), l(16), r32.w
                ult r22.x, l(0), r19.w
                and r22.x, r0.w, r22.x
                if_nz r22.x
                  iadd r19.w, r19.w, cb2[0].x
                  iadd r19.w, r19.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r22.x, r19.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r19.w, l(68), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r19.w, l(84), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r19.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r19.w, l(116), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r19.w, l(132), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r19.w, l(148), t12.xyzw
                  mad r22.y, |r15.z|, l(-0.200000), l(0.400000)
                  mad r23.xyz, r4.xyzx, r22.yyyy, v6.xyzx
                  dp4 r31.x, r31.xyzw, r23.xyzw
                  dp4 r31.y, r33.xyzw, r23.xyzw
                  dp4 r22.y, r34.xyzw, r23.xyzw
                  dp4 r22.z, r35.xyzw, r23.xyzw
                  lt r23.x, r22.z, r22.y
                  div r23.yz, r31.xxyx, r22.zzzz
                  mad r23.yz, r23.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
                  add r23.yz, r37.zzwz, r23.yyzy
                  mul r23.yz, r37.xxyx, r23.yyzy
                  div r31.xy, r22.xxxx, r36.xzxx
                  add r31.zw, -r31.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                  ge r31.zw, r23.yyyz, r31.zzzw
                  ge r31.xy, r31.xyxx, r23.yzyy
                  or r31.xy, r31.xyxx, r31.zwzz
                  or r26.w, r31.y, r31.x
                  or r23.x, r23.x, r26.w
                  if_z r23.x
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.x, r19.w, l(28), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xy, r19.w, l(164), t12.xyxx
                    mov_sat r23.yz, r23.yyzy
                    mad r32.xy, r23.yzyy, r36.xzxx, r36.ywyy
                    mul r19.w, r22.z, r31.y
                    mad r22.y, r31.x, r22.z, r22.y
                    div r19.w, r22.y, r19.w
                    max r19.w, r19.w, l(0.00006104)
                    and r22.y, r23.x, l(0x0000ffff)
                    if_nz r9.w
                      utof r23.z, r22.y
                      mov r22.z, l(0)
                      mov r26.w, l(0)
                      loop 
                        ige r27.w, r26.w, l(8)
                        breakc_nz r27.w
                        dp2 r31.x, icb[r26.w + 0].xyxx, r26.xyxx
                        dp2 r31.y, icb[r26.w + 0].yxyy, r26.xzxx
                        mad r23.xy, r31.xyxx, r22.xxxx, r32.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.x, r23.xyzx, t9.xxxx, s13, r19.w
                        mad r22.z, r23.x, l(0.125000), r22.z
                        iadd r26.w, r26.w, l(1)
                      endloop 
                    else 
                      utof r32.z, r22.y
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.z, r32.xyzx, t9.xxxx, s13, r19.w
                    endif 
                    mul r19.w, r22.z, r22.z
                    mul r19.w, r22.z, r19.w
                  else 
                    mov r19.w, l(1.000000)
                  endif 
                  mul r12.w, r12.w, r19.w
                else 
                  ubfe r19.w, l(4), l(20), r32.w
                  ult r22.x, l(0), r19.w
                  and r22.x, r0.z, r22.x
                  if_nz r22.x
                    iadd r19.w, r19.w, cb2[0].x
                    iadd r19.w, r19.w, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r22.x, r19.w, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r19.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r19.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r19.w, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r19.w, l(116), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r19.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r19.w, l(148), t12.xyzw
                    mad r22.y, |r15.z|, l(-0.200000), l(0.400000)
                    mad r24.xyz, r4.xyzx, r22.yyyy, v6.xyzx
                    dp4 r23.x, r31.xyzw, r24.xyzw
                    dp4 r23.y, r32.xyzw, r24.xyzw
                    dp4 r22.y, r33.xyzw, r24.xyzw
                    dp4 r23.z, r34.xyzw, r24.xyzw
                    lt r24.x, r23.z, r22.y
                    div r23.xy, r23.xyxx, r23.zzzz
                    mad r23.xy, r23.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r23.xy, r36.zwzz, r23.xyxx
                    mul r23.xy, r36.xyxx, r23.xyxx
                    div r24.yz, r22.xxxx, r35.xxzx
                    add r31.xy, -r24.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
                    ge r31.xy, r23.xyxx, r31.xyxx
                    ge r24.yz, r24.yyzy, r23.xxyx
                    or r24.yz, r24.yyzy, r31.xxyx
                    or r24.y, r24.z, r24.y
                    or r24.x, r24.x, r24.y
                    if_z r24.x
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r24.x, r19.w, l(28), t12.xxxx
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r24.yz, r19.w, l(164), t12.xxyx
                      mov_sat r23.xy, r23.xyxx
                      mad r31.xy, r23.xyxx, r35.xzxx, r35.ywyy
                      mul r19.w, r23.z, r24.z
                      mad r22.y, r24.y, r23.z, r22.y
                      div r19.w, r22.y, r19.w
                      max r19.w, r19.w, l(0.00006104)
                      and r22.y, r24.x, l(0x0000ffff)
                      if_nz r9.w
                        utof r23.z, r22.y
                        mov r24.xy, l(0,0,0,0)
                        loop 
                          ige r24.z, r24.y, l(8)
                          breakc_nz r24.z
                          dp2 r32.x, icb[r24.y + 0].xyxx, r27.xyxx
                          dp2 r32.y, icb[r24.y + 0].yxyy, r27.xzxx
                          mad r23.xy, r32.xyxx, r22.xxxx, r31.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.x, r23.xyzx, t9.xxxx, s13, r19.w
                          mad r24.x, r23.x, l(0.125000), r24.x
                          iadd r24.y, r24.y, l(1)
                        endloop 
                      else 
                        utof r31.z, r22.y
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.x, r31.xyzx, t9.xxxx, s13, r19.w
                      endif 
                      mul r19.w, r24.x, r24.x
                      mul r19.w, r24.x, r19.w
                    else 
                      mov r19.w, l(1.000000)
                    endif 
                    mul r12.w, r12.w, r19.w
                  endif 
                endif 
                mad r19.w, -r15.w, r0.x, l(1.000000)
                mul r19.w, r19.w, r19.w
                mad r19.w, -r19.w, l(0.620000), l(0.620000)
                add r19.w, -r15.w, r19.w
                mad r19.w, r5.w, r19.w, r15.w
                mul r19.w, r12.w, r19.w
                lt r15.z, l(0.000000), r15.z
                mad r23.xyz, r19.wwww, r21.xywx, r10.yzwy
                mad r20.xyz, r20.xyzx, r13.wwww, r6.xyzx
                dp3 r13.w, r20.xyzx, r20.xyzx
                rsq r13.w, r13.w
                mul r20.xyz, r13.wwww, r20.xyzx
                dp3 r13.w, r20.xyzx, r6.xyzx
                dp3 r19.w, r4.xyzx, r20.xyzx
                mad r20.x, |r19.w|, r3.w, -|r19.w|
                mad r19.w, |r19.w|, r20.x, l(1.000000)
                mad r15.w, r15.w, r0.y, r4.w
                mul r19.w, r19.w, r19.w
                mul r15.w, r15.w, r19.w
                rcp r15.w, r15.w
                mul r15.w, r18.x, r15.w
                mul r12.w, r12.w, r15.w
                mul r12.w, r12.w, l(0.250000)
                mad r20.xyz, r12.wwww, r21.xywx, r30.xyzx
                add_sat r13.w, -r13.w, l(1.000000)
                mul r15.w, r13.w, r13.w
                mul r15.w, r15.w, r15.w
                mul r13.w, r13.w, r15.w
                mul r12.w, r12.w, r13.w
                mad r21.xyw, r12.wwww, r21.xyxw, r16.xyxz
                movc r10.yzw, r15.zzzz, r23.xxyz, r10.yyzw
                movc r16.xyz, r15.zzzz, r21.xywx, r16.xyzx
                movc r30.xyz, r15.zzzz, r20.xyzx, r30.xyzx
              endif 
            endif 
          endif 
          break 
          default 
          break 
        endswitch 
      endif 
    endif 
  endloop 
  mov r7.yzw, r10.yyzw
  mov r28.xyz, r16.xyzx
  mov r29.xyz, r30.xyzx
  iadd r8.z, r8.z, l(32)
endloop 
add r0.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r0.xyz, r0.xyzx, r28.xyzx
mad r0.xyz, r29.xyzx, r5.xyzx, r0.xyzx
mad r0.xyz, r7.yzwy, r3.xyzx, r0.xyzx
dp3 r0.w, r0.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
max r0.w, r0.w, l(0.000100)
max r3.w, r0.w, cb1[85].x
mul r3.xyz, r1.xyzx, r3.wwww
mov r1.w, l(1.000000)
movc r1.xyzw, cb0[21].wwww, r3.xyzw, r1.xyzw
add r0.xyz, r0.xyzx, -r1.xyzx
mad r0.xyz, r2.wwww, r0.xyzx, r1.xyzx
mul r0.w, r1.w, cb0[20].z
max r0.w, r0.w, l(1.000000)
div r1.xyz, r1.xyzx, r0.wwww
dp3_sat r0.w, r1.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
add o0.w, r0.w, r2.w
lt r0.w, l(0.000000), cb2[9].z
if_nz r0.w
  dp3 r0.w, v6.xyzx, v6.xyzx
  rsq r1.x, r0.w
  mul r1.xyz, r1.xxxx, v6.xyzx
  sqrt r0.w, r0.w
  lt r1.w, l(0.000000), cb2[13].w
  if_nz r1.w
    mad r2.xy, r0.wwww, cb2[15].xyxx, cb2[14].zwzz
    mul r2.xy, r2.xyxx, cb2[16].xyxx
    lt r1.w, l(0.010000), |v6.z|
    mul r2.zw, v6.zzzz, cb2[15].zzzw
    mul r3.xy, r2.zwzz, l(-1.442695, -1.442695, 0.000000, 0.000000)
    exp r3.xy, r3.xyxx
    add r3.xy, -r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    div r2.zw, r3.xxxy, r2.zzzw
    mul r2.zw, r2.zzzw, r2.xxxy
    movc r2.xy, r1.wwww, r2.zwzz, r2.xyxx
    mul r2.xzw, r2.xxxx, cb2[12].xxyz
    exp r2.xzw, r2.xxzw
    mul r3.xyz, r2.yyyy, cb2[12].xyzx
    exp r3.xyz, r3.xyzx
    add r3.xyz, -r2.xzwx, r3.xyzx
    mad r2.xyz, cb2[13].wwww, r3.xyzx, r2.xzwx
  else 
    mad r1.w, r0.w, cb2[15].x, cb2[14].z
    mul r1.w, r1.w, cb2[16].x
    lt r2.w, l(0.010000), |v6.z|
    mul r3.x, v6.z, cb2[15].z
    mul r3.y, r3.x, l(-1.442695)
    exp r3.y, r3.y
    add r3.y, -r3.y, l(1.000000)
    div r3.x, r3.y, r3.x
    mul r3.x, r1.w, r3.x
    movc r1.w, r2.w, r3.x, r1.w
    mul r3.xyz, r1.wwww, cb2[12].xyzx
    exp r2.xyz, r3.xyzx
  endif 
  mad r2.xyz, r2.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r2.xyz, r2.xyzx, -cb2[9].zzzz
  dp3 r1.x, cb2[7].yzwy, -r1.xyzx
  mad r1.y, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r1.z, cb2[8].w, -r1.x, l(1.000000)
  mul r1.z, r1.z, r1.z
  mul r1.z, r1.z, l(12.566371)
  div r1.y, r1.y, r1.z
  add r0.w, r0.w, -cb2[10].w
  mul_sat r0.w, r0.w, cb2[11].w
  mul r0.w, r0.w, r1.y
  mov_sat r1.x, r1.x
  mad r1.x, r1.x, r1.x, l(1.000000)
  mad r1.x, r1.x, l(0.05968310), l(-1.000000)
  mad r1.x, cb2[8].z, r1.x, l(1.000000)
  mul r1.yzw, r0.wwww, cb2[11].xxyz
  mad r1.xyz, r1.xxxx, cb2[10].xyzx, r1.yzwy
  mul r1.xyz, r1.xyzx, cb2[9].wwww
  add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r1.xyz, r1.xyzx, r3.xyzx
  mad r1.xyz, r0.xyzx, r2.xyzx, r1.xyzx
else 
  mul r0.w, v6.z, cb2[6].x
  mad r1.w, cb2[6].x, v6.z, cb2[5].x
  lt r2.x, |r0.w|, l(0.000100)
  min r2.y, r1.w, l(64.000000)
  mul r2.y, r2.y, l(1.442695)
  exp r2.y, r2.y
  mov_sat r2.z, cb2[6].z
  lt r2.w, r1.w, l(0.000000)
  add r1.w, r1.w, l(1.000000)
  movc r1.w, r2.w, r2.y, r1.w
  add r1.w, r1.w, -cb2[6].z
  movc r0.w, r2.x, l(1.000000), r0.w
  div r0.w, r1.w, r0.w
  movc r0.w, r2.x, r2.z, r0.w
  mul r0.w, r0.w, cb2[5].z
  dp3 r1.w, v6.xyzx, v6.xyzx
  sqrt r2.x, r1.w
  mad r0.w, r0.w, r2.x, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  rsq r1.w, r1.w
  mul r2.xyz, r1.wwww, v6.xyzx
  dp3 r1.w, cb2[7].yzwy, r2.xyzx
  mad_sat r1.w, cb2[8].y, r1.w, cb2[8].x
  add r2.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r2.xyzw, r1.wwww, r2.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r2.w
  add r2.xyz, -r0.xyzx, r2.xyzx
  mad r1.xyz, r0.wwww, r2.xyzx, r0.xyzx
endif 
mul r0.xyz, r1.xyzx, cb1[85].yyyy
ge r1.xyz, r0.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.xyz, r0.xyzx, r1.xyzx
min o0.xyz, r0.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
ret 
// Approximately 3095 instruction slots used
