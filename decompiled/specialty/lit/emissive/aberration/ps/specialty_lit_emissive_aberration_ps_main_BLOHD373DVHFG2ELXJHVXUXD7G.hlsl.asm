//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:41:23 2021
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float3 colorTint;                  // Offset:  160 Size:    12
//   float3 specColorTint;              // Offset:  176 Size:    12
//   float baseNormalHeight;            // Offset:  188 Size:     4
//   float2 glossRange;                 // Offset:  192 Size:     8
//   float2 rotateUVs;                  // Offset:  200 Size:     8
//   float2 scrollUVs;                  // Offset:  208 Size:     8
//   float2 scaleUVs;                   // Offset:  216 Size:     8
//   float2 offsetUVs;                  // Offset:  224 Size:     8
//   float2 zoomUVs;                    // Offset:  232 Size:     8
//   float zoomRate;                    // Offset:  240 Size:     4
//   float layerDepth;                  // Offset:  244 Size:     4
//   bool clampU;                       // Offset:  248 Size:     4
//   bool clampV;                       // Offset:  252 Size:     4
//   float2 flickerSeed;                // Offset:  256 Size:     8
//   float flickerSpeed;                // Offset:  264 Size:     4
//   float2 flickerRange;               // Offset:  272 Size:     8
//   float flickerPower;                // Offset:  280 Size:     4
//   uint zFeatherComputeSprites;       // Offset:  284 Size:     4 [unused]
//   float hdrScale;                    // Offset:  288 Size:     4
//   float emissiveFalloffPower;        // Offset:  292 Size:     4
//   float outlineHDR;                  // Offset:  296 Size:     4
//   float3 emissiveTint1;              // Offset:  304 Size:    12
//   float3 aberrationFactors;          // Offset:  320 Size:    12
//   bool invertFalloff;                // Offset:  332 Size:     4
//   float2 colorScroll;                // Offset:  336 Size:     8
//   float2 colorScale;                 // Offset:  344 Size:     8
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16 [unused]
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16
//   float4 debugGlossOverride;         // Offset:  992 Size:    16
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// colorSampler                      sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// specColorSampler                  sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// normalSampler                     sampler      NA          NA             s5      1 
// aoSampler                         sampler      NA          NA             s6      1 
// lookupSampler                     sampler      NA          NA             s7      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// colorMap                          texture  float4          2d             t0      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// tintMask                          texture  float4          2d            t21      1 
// specColorMap                      texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// normalMap                         texture  float4          2d            t24      1 
// glossMap                          texture  float4          2d            t25      1 
// aoMap                             texture  float4          2d            t26      1 
// flickerLookupMap                  texture  float4          2d            t29      1 
// emissiveMap1                      texture  float4          2d            t30      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// outlineMap                        texture  float4          2d            t37      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyz 
// COLOR                    1   x           1     NONE   float       
// TEXCOORD                 0    yz         1     NONE   float    yz 
// UVOFFSETS                0   xyz         2     NONE   float   xyz 
// TEXCOORD                 1   xyz         3     NONE   float   xyz 
// TEXCOORD                 2   xyz         4     NONE   float   xyz 
// TEXCOORD                 3   xyz         5     NONE   float   xyz 
// OFFPOSITION              0   xyz         6     NONE   float   xyz 
// SV_IsFrontFace           0   x           7    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[22], immediateIndexed
dcl_constantbuffer CB1[93], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2d (float,float,float,float) t26
dcl_resource_texture2d (float,float,float,float) t29
dcl_resource_texture2d (float,float,float,float) t30
dcl_resource_texture2darray (float,float,float,float) t31
dcl_resource_texture2d (float,float,float,float) t37
dcl_input_ps_siv linear noperspective v0.xyz, position
dcl_input_ps linear v1.yz
dcl_input_ps constant v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps_sgv constant v7.x, is_front_face
dcl_output o0.xyzw
dcl_temps 47
mul r0.xy, cb0[21].xyxx, cb1[69].wwww
mad r0.xy, v1.yzyy, cb0[21].zwzz, r0.xyxx
sample_indexable(texture2d)(float,float,float,float) r1.xyz, r0.xyxx, t0.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t21.xyzw, s1
add r0.yzw, cb0[10].xxyz, l(0.000000, -1.000000, -1.000000, -1.000000)
mad r0.xyz, r0.xxxx, r0.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r0.xyz, r0.xyzx, r1.xyzx
sample_indexable(texture2d)(float,float,float,float) r0.w, v1.yzyy, t22.yzwx, s3
add r1.xyz, cb0[11].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r1.xyz, r0.wwww, r1.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
add_sat r0.w, -r0.w, l(1.000000)
mul r0.xyz, r0.wwww, r0.xyzx
sample_indexable(texture2d)(float,float,float,float) r0.w, v1.yzyy, t26.yzwx, s6
sample_indexable(texture2d)(float,float,float,float) r1.w, v1.yzyy, t25.yzwx, s3
add r2.x, -cb0[12].x, cb0[12].y
mad r1.w, r1.w, r2.x, cb0[12].x
mul_sat r1.w, r1.w, l(0.05882353)
sample_indexable(texture2d)(float,float,float,float) r2.yzw, v1.yzyy, t24.wxyz, s5
add r2.yzw, r2.yyzw, l(0.000000, -0.500000, -0.500000, -0.000000)
mad r2.yzw, cb0[11].wwww, r2.yyzw, l(0.000000, 0.500000, 0.500000, 0.000000)
mad r2.yz, r2.yyzy, l(0.000000, 1.99218750, 1.99218750, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
dp2 r3.x, r2.yzyy, r2.yzyy
add r3.x, -r3.x, l(1.000000)
max r3.x, r3.x, l(0.000000)
sqrt r3.x, r3.x
mul r2.w, r2.w, r2.w
mul r2.w, r2.w, l(0.33333334)
min r2.w, r2.w, l(1.000000)
movc r3.y, v7.x, l(1.000000), l(-1.000000)
dp3 r3.z, v3.xyzx, v3.xyzx
rsq r3.z, r3.z
mul r4.xyz, r3.zzzz, v3.xyzx
mul r5.xyz, r3.yyyy, r4.xyzx
dp3 r3.z, v4.xyzx, v4.xyzx
rsq r3.z, r3.z
mul r6.xyz, r3.zzzz, v4.xyzx
mul r6.xyz, r3.yyyy, r6.xyzx
dp3 r3.z, v5.xyzx, v5.xyzx
rsq r3.z, r3.z
mul r7.xyz, r3.zzzz, v5.xyzx
mul r3.yzw, r3.yyyy, r7.xxyz
mul r1.w, r1.w, l(-17.000000)
exp r1.w, r1.w
add r1.w, r1.w, r2.w
log r1.w, r1.w
mul r1.w, r1.w, l(-0.05882353)
max r1.w, r1.w, l(0.000000)
mul r3.yzw, r2.zzzz, r3.yyzw
mad r3.yzw, r6.xxyz, r2.yyyy, r3.yyzw
mad r3.xyz, r5.xyzx, r3.xxxx, r3.yzwy
dp3 r2.y, r3.xyzx, r3.xyzx
rsq r2.y, r2.y
mul r3.xyz, r2.yyyy, r3.xyzx
mad r2.x, cb1[62].x, r2.x, cb0[12].x
mul_sat r2.x, r2.x, l(0.05882353)
mul r2.x, r2.x, l(-17.000000)
exp r2.x, r2.x
add r2.x, r2.x, r2.w
log r2.x, r2.x
mul r2.x, r2.x, l(-0.05882353)
max r2.x, r2.x, l(0.000000)
lt r2.y, l(0.000000), cb1[64].w
if_nz r2.y
  ftoi r2.y, cb1[64].w
  lod r2.z, v1.yzyy, t0.y, s1
  lod r2.w, v1.yzyy, t0.x, s1
  lt r2.z, r2.z, r2.w
  lt r2.w, l(0.000000), r2.w
  and r5.xyz, r2.yyyy, l(1, 2, 4, 0)
  movc r6.xyz, r5.xxxx, l(1.000000,0,1.000000,0), r0.xyzx
  movc r5.xyw, r5.yyyy, l(0,1.000000,0,1.000000), r0.xyxz
  movc r5.xyw, r2.wwww, r6.xyxz, r5.xyxw
  movc r6.xyz, r5.zzzz, l(0,1.000000,0,0), r0.xyzx
  movc r0.xyz, r2.zzzz, r5.xywx, r6.xyzx
endif 
add r2.yzw, -r0.xxyz, cb1[58].xxyz
mad r0.xyz, cb1[58].wwww, r2.yzwy, r0.xyzx
add r2.yzw, -r1.xxyz, cb1[61].xxyz
mad r1.xyz, cb1[61].wwww, r2.yzwy, r1.xyzx
add r2.x, -r1.w, r2.x
mad r2.y, cb1[62].w, r2.x, r1.w
add r1.w, -r0.w, cb1[63].x
mad r0.w, cb1[63].w, r1.w, r0.w
movc r5.xyz, v7.xxxx, v3.xyzx, -v3.xyzx
dp3 r1.w, r5.xyzx, r5.xyzx
rsq r1.w, r1.w
mad r5.xyz, r5.xyzx, r1.wwww, -r3.xyzx
mad r3.xyz, cb1[60].wwww, r5.xyzx, r3.xyzx
dp3 r1.w, -v6.xyzx, -v6.xyzx
rsq r1.w, r1.w
mul r5.xyz, r1.wwww, -v6.xyzx
dp3 r6.x, r5.xyzx, v4.xyzx
dp3 r6.y, r5.xyzx, v5.xyzx
dp3 r2.z, r5.xyzx, v3.xyzx
lt r2.w, l(0.000000), r2.z
div r6.xy, -r6.xyxx, r2.zzzz
and r2.zw, r2.wwww, r6.xxxy
add r6.xy, v1.yzyy, l(-0.500000, -0.500000, 0.000000, 0.000000)
add r4.w, cb0[15].y, l(0.000010)
mul r2.zw, r2.zzzw, r4.wwww
mul r2.zw, r2.zzzw, cb0[13].zzzw
mad r2.zw, r6.xxxy, cb0[13].zzzw, r2.zzzw
mad r2.zw, cb0[14].xxxy, cb0[13].zzzw, r2.zzzw
mad r4.w, cb0[12].w, cb1[69].w, l(1.000000)
mul r4.w, r4.w, cb0[12].z
mul r4.w, r4.w, l(0.01745329)
sincos r6.x, r7.x, r4.w
mov r7.y, r7.x
mov r7.z, r6.x
dp2 r8.x, r7.yzyy, r2.zwzz
mov r7.x, -r6.x
dp2 r8.y, r7.xyxx, r2.zwzz
mul r2.zw, cb0[13].xxxy, cb1[69].wwww
mad r2.zw, r2.zzzw, cb0[13].zzzw, r8.xxxy
mul r4.w, cb0[15].x, cb1[69].w
sincos null, r4.w, r4.w
mad r4.w, r4.w, l(0.500000), l(0.500000)
add r4.w, -r4.w, l(1.000000)
add r5.w, -cb0[14].z, cb0[14].w
mad r4.w, r4.w, r5.w, cb0[14].z
div r2.zw, r2.zzzw, r4.wwww
add r2.zw, r2.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
mov_sat r6.xy, r2.zwzz
movc r2.zw, cb0[15].zzzw, r6.xxxy, r2.zzzw
dp3_sat r4.x, r5.xyzx, r4.xyzx
sample_indexable(texture2d)(float,float,float,float) r4.y, r2.zwzz, t30.xwyz, s1
mov r6.x, l(0)
mul r6.yz, cb0[20].xxyx, cb1[69].wwww
add r7.xyzw, r2.zwzw, -r6.xyzz
sample_indexable(texture2d)(float,float,float,float) r8.x, r7.xyxx, t30.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r8.y, r7.zwzz, t30.xyzw, s1
mov r7.xz, l(0,0,1.000000,0)
mul r7.y, cb0[20].z, cb1[69].w
add r2.zw, r2.zzzw, -r7.xxxy
sample_indexable(texture2d)(float,float,float,float) r8.z, r2.zwzz, t30.xyzw, s1
log r2.z, r4.x
mul r2.z, r2.z, cb0[18].y
exp r2.z, r2.z
add r2.w, -r4.x, l(1.000000)
log r2.w, r2.w
mul r2.w, r2.w, cb0[18].y
exp r2.w, r2.w
movc r2.z, cb0[20].w, r2.w, r2.z
eq r2.w, cb0[18].y, l(0.000000)
movc r2.z, r2.w, l(1.000000), r2.z
mul r2.w, r4.y, cb0[18].x
mul r2.z, r2.z, r2.w
mul r4.xyz, r2.zzzz, r8.xyzx
add r2.z, v2.y, v2.x
add r2.z, r2.z, v2.z
add r2.z, r2.z, cb0[16].y
frc r2.z, r2.z
mad r8.y, cb1[69].w, cb0[16].z, r2.z
mov r8.x, cb0[16].x
sample_l_indexable(texture2d)(float,float,float,float) r2.z, r8.xyxx, t29.yzxw, s7, l(0.000000)
log r2.z, |r2.z|
mul r2.z, r2.z, cb0[17].z
exp r2.z, r2.z
add r2.w, -cb0[17].x, cb0[17].y
mad r2.z, r2.z, r2.w, cb0[17].x
sample_indexable(texture2d)(float,float,float,float) r2.w, v1.yzyy, t37.xyzw, s1
add r6.xyzw, r6.xyzz, v1.yzyz
sample_indexable(texture2d)(float,float,float,float) r8.x, r6.xyxx, t37.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r8.y, r6.zwzz, t37.xyzw, s1
add r6.xy, r7.xyxx, v1.yzyy
sample_indexable(texture2d)(float,float,float,float) r8.z, r6.xyxx, t37.xyzw, s1
mul r6.xyz, r8.xyzx, cb0[19].xyzx
mul r2.w, r2.w, cb0[18].z
mul r6.xyz, r2.wwww, r6.xyzx
ftou r7.xy, v0.xyxx
ge r2.w, v0.z, l(0.984375)
mul r4.w, v0.z, l(1.01587307)
mad r5.w, v0.z, l(64.000000), l(-63.000000)
movc r2.w, r2.w, r5.w, r4.w
max r2.w, r2.w, l(0.00000001)
rcp r2.w, r2.w
ine r4.w, cb1[92].x, l(0)
utof r8.xy, r7.yxyy
dp2 r5.w, r8.yxyy, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r5.w, r5.w
mul r5.w, r5.w, l(52.982918)
frc r5.w, r5.w
mad r5.w, r5.w, l(6.28318548), cb1[70].w
sincos r9.x, r10.x, r5.w
dp2 r5.w, r8.xyxx, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r5.w, r5.w
mul r5.w, r5.w, l(52.982918)
frc r5.w, r5.w
mad r5.w, r5.w, l(6.28318548), cb1[70].w
sincos r8.x, r11.x, r5.w
dp3_sat r2.x, r3.xyzx, r5.xyzx
dp3 r5.w, -r5.xyzx, r3.xyzx
add r5.w, r5.w, r5.w
mad r12.xyz, r3.xyzx, -r5.wwww, -r5.xyzx
mul r5.w, r2.y, l(17.000000)
exp r5.w, r5.w
add r5.w, r5.w, l(2.000000)
div r5.w, l(2.000000), r5.w
sqrt r6.w, r5.w
add r8.y, -r2.y, l(1.000000)
mul r8.z, r8.y, l(5.000000)
mad r8.w, r8.y, l(5.000000), l(-2.500000)
mul_sat r8.w, r8.w, l(0.400000)
mul r8.w, r8.w, l(100.000000)
mad r9.zw, -r8.yyyy, l(0.000000, 0.000000, 10.000000, 5.000000), l(0.000000, 0.000000, 6.857410, 7.085000)
exp r9.z, r9.z
mul r9.z, r2.x, r9.z
mul r10.w, r8.y, r8.z
mad r9.w, -r10.w, l(2.015905), r9.w
exp r9.w, r9.w
mul r9.w, r2.x, r9.w
mul r9.zw, r9.zzzw, l(0.000000, 0.000000, 9.136810, 9.708090)
max r9.z, r9.w, r9.z
max r9.z, r9.z, l(1.268160)
mul r2.w, r2.w, l(0.00781250)
min r2.w, r2.w, l(15.000000)
ftou r2.w, r2.w
ushr r13.xy, r7.xyxx, l(6, 6, 0, 0)
ishl r13.z, r2.w, l(4)
mov r14.xy, l(0,0,0,0)
mov r15.w, l(0)
mov r16.yz, l(0,0,1.000000,0)
mov r17.xy, l(0,0,0,0)
mov r18.xy, l(0,0,0,0)
mov r19.xy, l(0,0,0,0)
mov r20.xyzw, l(0,0,0,0)
mov r21.yzw, l(0,0,0,0)
mov r2.w, l(0)
mov r7.x, l(0)
loop 
  uge r7.y, r7.x, cb2[0].y
  breakc_nz r7.y
  ushr r14.z, r7.x, l(5)
  iadd r15.xyz, r13.xyzx, r14.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r7.y, r15.xyzw, t7.yxzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r22.xyzw, r7.x, l(0), t15.wxyz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r23.xyzw, r7.x, l(16), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r7.x, l(32), t15.yxwz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r7.x, l(48), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r7.x, l(64), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r7.x, l(80), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r11.yz, r7.x, l(96), t15.xxyx
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r7.x, l(116), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r7.x, l(132), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r7.x, l(148), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r7.x, l(164), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r7.x, l(180), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r7.x, l(196), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xy, r7.x, l(212), t15.xyxx
  add r15.xyz, -r22.yzwy, v6.xyzx
  dp3 r9.w, r15.xyzx, r15.xyzx
  sqrt r9.w, r9.w
  ge r9.w, cb2[54].y, r9.w
  and r10.w, r28.y, l(0x0000ffff)
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r10.w, l(0), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r10.w, l(16), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r10.w, l(32), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r38.xyzw, r10.w, l(48), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r39.xyzw, r10.w, l(64), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r40.xyzw, r10.w, l(80), t16.xyzw
  dp3 r11.w, r35.xyzx, r15.xyzx
  add_sat r11.w, r35.w, r11.w
  dp3 r13.w, r36.xyzx, r15.xyzx
  add_sat r13.w, r36.w, r13.w
  mul r11.w, r11.w, r13.w
  dp3 r13.w, r37.xyzx, r15.xyzx
  add_sat r13.w, r37.w, r13.w
  mul r11.w, r11.w, r13.w
  dp3 r13.w, r38.xyzx, r15.xyzx
  add_sat r13.w, r38.w, r13.w
  mul r11.w, r11.w, r13.w
  dp3 r13.w, r39.xyzx, r15.xyzx
  add_sat r13.w, r39.w, r13.w
  mul r11.w, r11.w, r13.w
  dp3 r13.w, r40.xyzx, r15.xyzx
  add_sat r13.w, r40.w, r13.w
  mul r16.x, r11.w, r13.w
  and r11.w, r11.y, l(1)
  movc r14.zw, r11.wwww, r16.xxxy, r16.zzzx
  mov r35.xy, r28.zwzz
  mov r35.z, r29.z
  dp3 r11.w, r12.xyzx, r35.xyzx
  dp3 r13.w, r15.xyzx, r35.xyzx
  add r13.w, -r29.w, r13.w
  ge r16.x, r13.w, l(0.000000)
  max r13.w, r8.w, |r13.w|
  movc r13.w, r16.x, r13.w, -r13.w
  max r11.w, -r11.w, l(0.00000010)
  div r11.w, r13.w, r11.w
  min r11.w, |r11.w|, l(131072.000000)
  mov r29.z, r30.z
  dp3 r13.w, r12.xyzx, r29.xyzx
  dp3 r16.x, r15.xyzx, r29.xyzx
  add r16.x, -r30.w, r16.x
  ge r16.w, r16.x, l(0.000000)
  max r16.x, r8.w, |r16.x|
  movc r16.x, r16.w, r16.x, -r16.x
  max r13.w, -r13.w, l(0.00000010)
  div r13.w, r16.x, r13.w
  min r11.w, r11.w, |r13.w|
  mov r30.z, r31.z
  dp3 r13.w, r12.xyzx, r30.xyzx
  dp3 r16.x, r15.xyzx, r30.xyzx
  add r16.x, -r31.w, r16.x
  ge r16.w, r16.x, l(0.000000)
  max r16.x, r8.w, |r16.x|
  movc r16.x, r16.w, r16.x, -r16.x
  max r13.w, -r13.w, l(0.00000010)
  div r13.w, r16.x, r13.w
  min r11.w, r11.w, |r13.w|
  mov r31.z, r32.z
  dp3 r13.w, r12.xyzx, r31.xyzx
  dp3 r16.x, r15.xyzx, r31.xyzx
  add r16.x, -r32.w, r16.x
  ge r16.w, r16.x, l(0.000000)
  max r16.x, r8.w, |r16.x|
  movc r16.x, r16.w, r16.x, -r16.x
  max r13.w, -r13.w, l(0.00000010)
  div r13.w, r16.x, r13.w
  min r11.w, r11.w, |r13.w|
  mov r32.z, r33.x
  dp3 r13.w, r12.xyzx, r32.xyzx
  dp3 r16.x, r15.xyzx, r32.xyzx
  add r16.x, -r33.y, r16.x
  ge r16.w, r16.x, l(0.000000)
  max r16.x, r8.w, |r16.x|
  movc r16.x, r16.w, r16.x, -r16.x
  max r13.w, -r13.w, l(0.00000010)
  div r13.w, r16.x, r13.w
  min r11.w, r11.w, |r13.w|
  mov r34.zw, r33.zzzw
  dp3 r13.w, r12.zxyz, r34.xzwx
  dp3 r16.x, r15.zxyz, r34.xzwx
  add r16.x, -r34.y, r16.x
  ge r16.w, r16.x, l(0.000000)
  max r16.x, r8.w, |r16.x|
  movc r16.x, r16.w, r16.x, -r16.x
  max r13.w, -r13.w, l(0.00000010)
  div r13.w, r16.x, r13.w
  min r11.w, r11.w, |r13.w|
  mov r29.x, r25.w
  mov r29.yz, r26.zzwz
  add r29.xyz, r15.xyzx, r29.xyzx
  mad r29.xyz, r12.xyzx, r11.wwww, r29.xyzx
  dp3 r13.w, r29.xyzx, r29.xyzx
  sqrt r13.w, r13.w
  div r11.w, r11.w, r13.w
  add r11.w, r11.w, r11.w
  sqrt r11.w, r11.w
  mad r11.w, r8.y, l(5.000000), r11.w
  add r11.w, r11.w, l(-0.844800)
  mov r22.y, r23.z
  mov r22.z, r24.x
  dp3 r30.x, r29.xyzx, r22.xyzx
  mov r31.xy, r23.xwxx
  mov r31.z, r24.w
  dp3 r30.y, r29.xyzx, r31.xyzx
  mov r24.x, r23.y
  dp3 r30.z, r29.xyzx, r24.xyzx
  ubfe r16.xw, l(6, 0, 0, 9), l(25, 0, 0, 16), r28.yyyy
  utof r30.w, r16.w
  sample_l_indexable(texturecubearray)(float,float,float,float) r23.xyz, r30.xyzw, t8.xyzw, s2, r11.w
  and r28.yzw, r23.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
  ieq r28.yzw, r28.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
  or r11.w, r28.z, r28.y
  or r11.w, r28.w, r11.w
  movc r23.xyz, r11.wwww, l(1.000000,1.000000,0,0), r23.xyzx
  dp3 r29.x, r15.xyzx, r22.xyzx
  dp3 r29.y, r15.xyzx, r31.xyzx
  dp3 r29.z, r15.xyzx, r24.xyzx
  mad_sat r25.xyz, r29.xyzx, r25.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mov r26.z, r27.x
  mad r25.xyz, r25.xyzx, r26.xyzx, r27.yzwy
  dp3 r30.x, r3.xyzx, r22.xyzx
  dp3 r30.y, r3.xyzx, r31.xyzx
  dp3 r30.z, r3.xyzx, r24.xyzx
  lt r22.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r30.xyzx
  movc r17.z, r22.x, l(0), l(0.500000)
  add r24.xyz, r17.xyzx, r25.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r24.xyz, r24.xyzx, t17.xyzw, s4, l(0.000000)
  movc r18.z, r22.y, l(0), l(0.500000)
  add r22.xyw, r18.xyxz, r25.xyxz
  sample_l_indexable(texture3d)(float,float,float,float) r22.xyw, r22.xywx, t18.xywz, s4, l(0.000000)
  movc r19.z, r22.z, l(0), l(0.500000)
  add r25.xyz, r19.xyzx, r25.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r25.xyz, r25.xyzx, t19.xyzw, s4, l(0.000000)
  mul r26.xyz, r30.xyzx, r30.xyzx
  sample_l_indexable(texturecubearray)(float,float,float,float) r27.xyz, r30.xyzw, t8.xyzw, s2, l(6.000000)
  and r28.yzw, r27.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
  ieq r28.yzw, r28.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
  or r11.w, r28.z, r28.y
  or r11.w, r28.w, r11.w
  movc r27.xyz, r11.wwww, l(1.000000,1.000000,0,0), r27.xyzx
  mov r29.xyzw, r20.xyzw
  mov r28.yzw, r21.yyzw
  mov r11.w, r2.w
  mov r13.w, r7.y
  loop 
    breakc_z r13.w
    firstbit_lo r16.w, r13.w
    ishl r16.w, l(1), r16.w
    and r17.z, r13.w, r16.w
    if_nz r17.z
      not r16.w, r16.w
      and r13.w, r13.w, r16.w
      if_nz r9.w
        mov r16.w, r11.y
        mov r30.xy, r14.zwzz
        mov r17.z, l(1)
        loop 
          ige r17.w, r17.z, r16.x
          breakc_nz r17.w
          iadd r17.w, r10.w, r17.z
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r17.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r17.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r17.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r17.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r17.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r17.w, l(80), t16.xyzw
          dp3 r17.w, r31.xyzx, r15.xyzx
          add_sat r17.w, r31.w, r17.w
          mul r17.w, r17.w, r30.x
          dp3 r18.z, r32.xyzx, r15.xyzx
          add_sat r18.z, r32.w, r18.z
          mul r17.w, r17.w, r18.z
          dp3 r18.z, r33.xyzx, r15.xyzx
          add_sat r18.z, r33.w, r18.z
          mul r17.w, r17.w, r18.z
          dp3 r18.z, r34.xyzx, r15.xyzx
          add_sat r18.z, r34.w, r18.z
          mul r17.w, r17.w, r18.z
          dp3 r18.z, r35.xyzx, r15.xyzx
          add_sat r18.z, r35.w, r18.z
          mul r17.w, r17.w, r18.z
          dp3 r18.z, r36.xyzx, r15.xyzx
          add_sat r18.z, r36.w, r18.z
          mul r30.x, r17.w, r18.z
          ushr r18.w, r16.w, l(2)
          ubfe r19.z, l(1), l(2), r16.w
          and r19.w, r18.w, l(2)
          max r22.z, r30.x, r30.y
          mad r17.w, -r17.w, r18.z, l(1.000000)
          mul r17.w, r17.w, r30.y
          movc r7.w, r19.w, r17.w, r22.z
          movc r30.xy, r19.zzzz, r30.xyxx, r7.zwzz
          iadd r17.z, r17.z, l(1)
          mov r16.w, r18.w
        endloop 
        mov_sat r30.y, r30.y
        mul r7.w, r11.z, r30.y
        lt r16.w, l(0.000000), r7.w
        if_nz r16.w
          mad r31.z, r30.y, r11.z, r28.w
          mul r7.w, r28.x, r7.w
          mul r30.xzw, r7.wwww, r26.xxyz
          mul r32.xyz, r22.xywx, r30.zzzz
          mad r32.xyz, r24.xyzx, r30.xxxx, r32.xyzx
          mad r30.xzw, r25.xxyz, r30.wwww, r32.xxyz
          mul r32.xyz, r27.xyzx, r30.xzwx
          dp3 r16.w, r32.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r32.xyz, r30.xzwx, r27.xyzx, r29.xyzx
          mul r17.z, r9.z, r16.w
          mul r30.xzw, r7.wwww, r23.xxyz
          dp3 r7.w, r30.xzwx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r7.w, r9.z, r16.w, r7.w
          div r7.w, r17.z, r7.w
          mov r33.x, r29.w
          mov r33.yz, r28.yyzy
          mad r31.xyw, r30.zwzx, r7.wwww, r33.yzyx
          mov r32.w, r31.w
        else 
          mov r32.xyzw, r29.xyzw
          mov r31.xyz, r28.yzwy
        endif 
        mov r11.w, l(-1)
        mov r29.xyzw, r32.xyzw
        mov r28.yzw, r31.xxyz
        break 
      endif 
    endif 
  endloop 
  if_nz r11.w
    mov r20.xyzw, r29.xyzw
    mov r21.yzw, r28.yyzw
    mov r2.w, l(-1)
    break 
  endif 
  iadd r7.x, r7.x, l(32)
  mov r20.xyzw, r29.xyzw
  mov r21.yzw, r28.yyzw
  mov r2.w, r11.w
endloop 
if_z r2.w
  iadd r2.w, cb2[0].y, -cb2[58].x
  and r7.x, r2.w, l(-32)
  iadd r7.y, r2.w, -r7.x
  and r7.z, cb2[0].y, l(-32)
  iadd r7.w, -r7.z, cb2[0].y
  mov r14.xy, l(0,0,0,0)
  mov r15.w, l(0)
  mov r16.yz, l(0,0,1.000000,0)
  mov r17.xy, l(0,0,0,0)
  mov r18.x, l(1.000000)
  mov r19.xy, l(0,0,0,0)
  mov r22.xy, l(0,0,0,0)
  mov r23.xyzw, r20.xyzw
  mov r24.yzw, r21.yyzw
  mov r9.w, r7.x
  loop 
    uge r10.w, r9.w, cb2[0].y
    breakc_nz r10.w
    ushr r14.z, r9.w, l(5)
    iadd r15.xyz, r13.xyzx, r14.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r10.w, r15.xyzw, t7.yzwx
    ieq r11.y, r7.x, r9.w
    bfi r11.z, r7.y, l(0), l(0), r10.w
    movc r10.w, r11.y, r11.z, r10.w
    ieq r11.y, r7.z, r9.w
    ubfe r11.z, r7.w, l(0), r10.w
    movc r10.w, r11.y, r11.z, r10.w
    iadd r11.y, r9.w, cb2[0].x
    mov r25.xyzw, r23.xyzw
    mov r26.xyz, r24.yzwy
    mov r11.z, r10.w
    loop 
      breakc_z r11.z
      firstbit_lo r11.w, r11.z
      ishl r13.w, l(1), r11.w
      and r14.z, r11.z, r13.w
      if_nz r14.z
        xor r11.z, r11.z, r13.w
        iadd r13.w, r11.w, r11.y
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r27.xyzw, r13.w, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r15.xy, r13.w, l(16), t11.xyxx
        add r27.xyz, r27.xyzx, -v6.xyzx
        mov r15.z, r27.w
        lt r15.xyz, |r27.xyzx|, r15.zxyz
        and r13.w, r15.y, r15.x
        and r13.w, r15.z, r13.w
        if_nz r13.w
          iadd r11.w, r9.w, r11.w
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r11.w, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r14.zw, r11.w, l(96), t15.xxxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r11.w, l(116), t15.zwxy
          add r15.xyz, -r27.yzwy, v6.xyzx
          and r13.w, r28.w, l(0x0000ffff)
          ubfe r16.w, l(6), l(25), r28.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r13.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r13.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r13.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r13.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r13.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r13.w, l(80), t16.xyzw
          dp3 r17.w, r29.xyzx, r15.xyzx
          add_sat r17.w, r29.w, r17.w
          dp3 r18.z, r30.xyzx, r15.xyzx
          add_sat r18.z, r30.w, r18.z
          mul r17.w, r17.w, r18.z
          dp3 r18.z, r31.xyzx, r15.xyzx
          add_sat r18.z, r31.w, r18.z
          mul r17.w, r17.w, r18.z
          dp3 r18.z, r32.xyzx, r15.xyzx
          add_sat r18.z, r32.w, r18.z
          mul r17.w, r17.w, r18.z
          dp3 r18.z, r33.xyzx, r15.xyzx
          add_sat r18.z, r33.w, r18.z
          mul r17.w, r17.w, r18.z
          dp3 r18.z, r34.xyzx, r15.xyzx
          add_sat r18.z, r34.w, r18.z
          mul r16.x, r17.w, r18.z
          and r17.w, r14.z, l(1)
          movc r18.zw, r17.wwww, r16.xxxy, r16.zzzx
          mov r16.x, r14.z
          mov r29.xy, r18.zwzz
          mov r17.w, l(1)
          loop 
            ige r19.w, r17.w, r16.w
            breakc_nz r19.w
            iadd r19.w, r13.w, r17.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r19.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r19.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r19.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r19.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r19.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r19.w, l(80), t16.xyzw
            dp3 r19.w, r30.xyzx, r15.xyzx
            add_sat r19.w, r30.w, r19.w
            mul r19.w, r19.w, r29.x
            dp3 r22.w, r31.xyzx, r15.xyzx
            add_sat r22.w, r31.w, r22.w
            mul r19.w, r19.w, r22.w
            dp3 r22.w, r32.xyzx, r15.xyzx
            add_sat r22.w, r32.w, r22.w
            mul r19.w, r19.w, r22.w
            dp3 r22.w, r33.xyzx, r15.xyzx
            add_sat r22.w, r33.w, r22.w
            mul r19.w, r19.w, r22.w
            dp3 r22.w, r34.xyzx, r15.xyzx
            add_sat r22.w, r34.w, r22.w
            mul r19.w, r19.w, r22.w
            dp3 r22.w, r35.xyzx, r15.xyzx
            add_sat r22.w, r35.w, r22.w
            mul r29.x, r19.w, r22.w
            ushr r27.w, r16.x, l(2)
            ubfe r29.z, l(1), l(2), r16.x
            and r29.w, r27.w, l(2)
            max r30.x, r29.x, r29.y
            mad r19.w, -r19.w, r22.w, l(1.000000)
            mul r19.w, r19.w, r29.y
            movc r18.y, r29.w, r19.w, r30.x
            movc r29.xy, r29.zzzz, r29.xyxx, r18.xyxx
            iadd r17.w, r17.w, l(1)
            mov r16.x, r27.w
          endloop 
          mov_sat r29.y, r29.y
          mul r13.w, r14.w, r29.y
          lt r14.z, l(0.000000), r13.w
          if_nz r14.z
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r11.w, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r11.w, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r11.w, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r11.w, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r11.w, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r11.w, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r11.w, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r11.w, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r11.w, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xyzw, r11.w, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r40.xy, r11.w, l(212), t15.xyxx
            mad r26.z, r29.y, r14.w, r26.z
            mul r11.w, r28.z, r13.w
            mov r28.z, r35.z
            dp3 r13.w, r12.xyzx, r28.xyzx
            dp3 r14.z, r15.xyzx, r28.xyzx
            add r14.z, -r35.w, r14.z
            ge r14.w, r14.z, l(0.000000)
            max r14.z, r8.w, |r14.z|
            movc r14.z, r14.w, r14.z, -r14.z
            max r13.w, -r13.w, l(0.00000010)
            div r13.w, r14.z, r13.w
            min r13.w, |r13.w|, l(131072.000000)
            mov r35.z, r36.z
            dp3 r14.z, r12.xyzx, r35.xyzx
            dp3 r14.w, r15.xyzx, r35.xyzx
            add r14.w, -r36.w, r14.w
            ge r16.x, r14.w, l(0.000000)
            max r14.w, r8.w, |r14.w|
            movc r14.w, r16.x, r14.w, -r14.w
            max r14.z, -r14.z, l(0.00000010)
            div r14.z, r14.w, r14.z
            min r13.w, r13.w, |r14.z|
            mov r36.z, r37.z
            dp3 r14.z, r12.xyzx, r36.xyzx
            dp3 r14.w, r15.xyzx, r36.xyzx
            add r14.w, -r37.w, r14.w
            ge r16.x, r14.w, l(0.000000)
            max r14.w, r8.w, |r14.w|
            movc r14.w, r16.x, r14.w, -r14.w
            max r14.z, -r14.z, l(0.00000010)
            div r14.z, r14.w, r14.z
            min r13.w, r13.w, |r14.z|
            mov r37.z, r38.z
            dp3 r14.z, r12.xyzx, r37.xyzx
            dp3 r14.w, r15.xyzx, r37.xyzx
            add r14.w, -r38.w, r14.w
            ge r16.x, r14.w, l(0.000000)
            max r14.w, r8.w, |r14.w|
            movc r14.w, r16.x, r14.w, -r14.w
            max r14.z, -r14.z, l(0.00000010)
            div r14.z, r14.w, r14.z
            min r13.w, r13.w, |r14.z|
            mov r38.z, r39.x
            dp3 r14.z, r12.xyzx, r38.xyzx
            dp3 r14.w, r15.xyzx, r38.xyzx
            add r14.w, -r39.y, r14.w
            ge r16.x, r14.w, l(0.000000)
            max r14.w, r8.w, |r14.w|
            movc r14.w, r16.x, r14.w, -r14.w
            max r14.z, -r14.z, l(0.00000010)
            div r14.z, r14.w, r14.z
            min r13.w, r13.w, |r14.z|
            mov r40.zw, r39.zzzw
            dp3 r14.z, r12.zxyz, r40.xzwx
            dp3 r14.w, r15.zxyz, r40.xzwx
            add r14.w, -r40.y, r14.w
            ge r16.x, r14.w, l(0.000000)
            max r14.w, r8.w, |r14.w|
            movc r14.w, r16.x, r14.w, -r14.w
            max r14.z, -r14.z, l(0.00000010)
            div r14.z, r14.w, r14.z
            min r13.w, r13.w, |r14.z|
            mov r28.x, r32.w
            mov r28.yz, r33.zzwz
            add r18.yzw, r15.xxyz, r28.xxyz
            mad r18.yzw, r12.xxyz, r13.wwww, r18.yyzw
            dp3 r14.z, r18.yzwy, r18.yzwy
            sqrt r14.z, r14.z
            div r13.w, r13.w, r14.z
            add r13.w, r13.w, r13.w
            sqrt r13.w, r13.w
            mad r13.w, r8.y, l(5.000000), r13.w
            add r13.w, r13.w, l(-0.844800)
            mov r27.y, r30.z
            mov r27.z, r31.x
            dp3 r35.x, r18.yzwy, r27.xyzx
            mov r28.xy, r30.xwxx
            mov r28.z, r31.w
            dp3 r35.y, r18.yzwy, r28.xyzx
            mov r31.x, r30.y
            dp3 r35.z, r18.yzwy, r31.xyzx
            ubfe r14.z, l(9), l(16), r28.w
            utof r35.w, r14.z
            sample_l_indexable(texturecubearray)(float,float,float,float) r18.yzw, r35.xyzw, t8.wxyz, s2, r13.w
            and r29.xzw, r18.yyzw, l(0x7fffffff, 0, 0x7fffffff, 0x7fffffff)
            ieq r29.xzw, r29.xxzw, l(0x7f800000, 0, 0x7f800000, 0x7f800000)
            or r13.w, r29.z, r29.x
            or r13.w, r29.w, r13.w
            movc r18.yzw, r13.wwww, l(0,1.000000,1.000000,0), r18.yyzw
            dp3 r30.x, r15.xyzx, r27.xyzx
            dp3 r30.y, r15.xyzx, r28.xyzx
            dp3 r30.z, r15.xyzx, r31.xyzx
            mad_sat r15.xyz, r30.xyzx, r32.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
            mov r33.z, r34.x
            mad r15.xyz, r15.xyzx, r33.xyzx, r34.yzwy
            dp3 r35.x, r3.xyzx, r27.xyzx
            dp3 r35.y, r3.xyzx, r28.xyzx
            dp3 r35.z, r3.xyzx, r31.xyzx
            lt r27.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r35.xyzx
            movc r17.z, r27.x, l(0), l(0.500000)
            add r28.xyz, r15.xyzx, r17.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r28.xyz, r28.xyzx, t17.xyzw, s4, l(0.000000)
            mul r29.xzw, r35.xxyz, r35.xxyz
            mul r29.xzw, r11.wwww, r29.xxzw
            movc r19.z, r27.y, l(0), l(0.500000)
            add r27.xyw, r15.xyxz, r19.xyxz
            sample_l_indexable(texture3d)(float,float,float,float) r27.xyw, r27.xywx, t18.xywz, s4, l(0.000000)
            mul r27.xyw, r29.zzzz, r27.xyxw
            mad r27.xyw, r28.xyxz, r29.xxxx, r27.xyxw
            movc r22.z, r27.z, l(0), l(0.500000)
            add r15.xyz, r15.xyzx, r22.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r15.xyz, r15.xyzx, t19.xyzw, s4, l(0.000000)
            mad r15.xyz, r15.xyzx, r29.wwww, r27.xywx
            sample_l_indexable(texturecubearray)(float,float,float,float) r27.xyz, r35.xyzw, t8.xyzw, s2, l(6.000000)
            and r28.xyz, r27.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
            ieq r28.xyz, r28.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
            or r13.w, r28.y, r28.x
            or r13.w, r28.z, r13.w
            movc r27.xyz, r13.wwww, l(1.000000,1.000000,0,0), r27.xyzx
            mul r28.xyz, r15.xyzx, r27.xyzx
            dp3 r13.w, r28.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r25.xyz, r15.xyzx, r27.xyzx, r25.xyzx
            mul r14.z, r9.z, r13.w
            mul r15.xyz, r11.wwww, r18.yzwy
            dp3 r11.w, r15.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r11.w, r9.z, r13.w, r11.w
            div r11.w, r14.z, r11.w
            mov r27.x, r25.w
            mov r27.yz, r26.xxyx
            mad r26.xyw, r15.yzyx, r11.wwww, r27.yzyx
            mov r25.w, r26.w
          endif 
        endif 
      endif 
    endloop 
    mov r23.xyzw, r25.xyzw
    mov r24.yzw, r26.xxyz
    iadd r9.w, r9.w, l(32)
  endloop 
  lt r7.z, r24.w, l(1.000000)
  if_nz r7.z
    mov r14.xy, l(0,0,0,0)
    mov r15.w, l(0)
    mov r16.yz, l(0,0,1.000000,0)
    mov r17.xy, l(0,0,0,0)
    mov r18.x, l(1.000000)
    mov r19.xy, l(0,0,0,0)
    mov r22.xy, l(0,0,0,0)
    mov r25.x, r23.w
    mov r25.yzw, r24.yyzw
    mov r11.yzw, r23.xxyz
    mov r7.z, r24.w
    mov r7.w, l(0)
    loop 
      uge r9.w, r7.w, r2.w
      breakc_nz r9.w
      ushr r14.z, r7.w, l(5)
      iadd r15.xyz, r13.xyzx, r14.xyzx
      ld_indexable(texture2darray)(uint,uint,uint,uint) r9.w, r15.xyzw, t7.yzwx
      ieq r10.w, r7.x, r7.w
      ubfe r13.w, r7.y, l(0), r9.w
      movc r9.w, r10.w, r13.w, r9.w
      iadd r10.w, r7.w, cb2[0].x
      mov r26.xyzw, r25.xyzw
      mov r15.xyz, r11.yzwy
      mov r13.w, r7.z
      mov r14.z, r9.w
      loop 
        breakc_z r14.z
        firstbit_lo r14.w, r14.z
        ishl r16.w, l(1), r14.w
        and r17.w, r14.z, r16.w
        if_nz r17.w
          xor r14.z, r14.z, r16.w
          iadd r16.w, r10.w, r14.w
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r27.xyzw, r16.w, l(0), t11.xyzw
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r28.xy, r16.w, l(16), t11.xyxx
          add r27.xyz, r27.xyzx, -v6.xyzx
          mov r28.z, r27.w
          lt r27.xyz, |r27.xyzx|, r28.zxyz
          and r16.w, r27.y, r27.x
          and r16.w, r27.z, r16.w
          if_nz r16.w
            iadd r14.w, r7.w, r14.w
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r14.w, l(0), t15.wxyz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r18.zw, r14.w, l(96), t15.xxxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r14.w, l(116), t15.zwxy
            add r29.xyz, -r27.yzwy, v6.xyzx
            and r16.w, r28.w, l(0x0000ffff)
            ubfe r17.w, l(6), l(25), r28.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r16.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r16.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r16.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r16.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r16.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r16.w, l(80), t16.xyzw
            dp3 r19.w, r30.xyzx, r29.xyzx
            add_sat r19.w, r30.w, r19.w
            dp3 r21.w, r31.xyzx, r29.xyzx
            add_sat r21.w, r31.w, r21.w
            mul r19.w, r19.w, r21.w
            dp3 r21.w, r32.xyzx, r29.xyzx
            add_sat r21.w, r32.w, r21.w
            mul r19.w, r19.w, r21.w
            dp3 r21.w, r33.xyzx, r29.xyzx
            add_sat r21.w, r33.w, r21.w
            mul r19.w, r19.w, r21.w
            dp3 r21.w, r34.xyzx, r29.xyzx
            add_sat r21.w, r34.w, r21.w
            mul r19.w, r19.w, r21.w
            dp3 r21.w, r35.xyzx, r29.xyzx
            add_sat r21.w, r35.w, r21.w
            mul r16.x, r19.w, r21.w
            and r19.w, r18.z, l(1)
            movc r30.xy, r19.wwww, r16.xyxx, r16.zxzz
            mov r16.x, r18.z
            mov r31.xy, r30.xyxx
            mov r19.w, l(1)
            loop 
              ige r21.w, r19.w, r17.w
              breakc_nz r21.w
              iadd r21.w, r16.w, r19.w
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r21.w, l(0), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r21.w, l(16), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r21.w, l(32), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r21.w, l(48), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r21.w, l(64), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r21.w, l(80), t16.xyzw
              dp3 r21.w, r32.xyzx, r29.xyzx
              add_sat r21.w, r32.w, r21.w
              mul r21.w, r21.w, r31.x
              dp3 r22.w, r33.xyzx, r29.xyzx
              add_sat r22.w, r33.w, r22.w
              mul r21.w, r21.w, r22.w
              dp3 r22.w, r34.xyzx, r29.xyzx
              add_sat r22.w, r34.w, r22.w
              mul r21.w, r21.w, r22.w
              dp3 r22.w, r35.xyzx, r29.xyzx
              add_sat r22.w, r35.w, r22.w
              mul r21.w, r21.w, r22.w
              dp3 r22.w, r36.xyzx, r29.xyzx
              add_sat r22.w, r36.w, r22.w
              mul r21.w, r21.w, r22.w
              dp3 r22.w, r37.xyzx, r29.xyzx
              add_sat r22.w, r37.w, r22.w
              mul r31.x, r21.w, r22.w
              ushr r27.w, r16.x, l(2)
              ubfe r29.w, l(1), l(2), r16.x
              and r30.z, r27.w, l(2)
              max r30.w, r31.x, r31.y
              mad r21.w, -r21.w, r22.w, l(1.000000)
              mul r21.w, r21.w, r31.y
              movc r18.y, r30.z, r21.w, r30.w
              movc r31.xy, r29.wwww, r31.xyxx, r18.xyxx
              iadd r19.w, r19.w, l(1)
              mov r16.x, r27.w
            endloop 
            add_sat r16.x, -r13.w, r31.y
            mul r16.w, r18.w, r16.x
            lt r17.w, l(0.000000), r16.w
            if_nz r17.w
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r14.w, l(16), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r14.w, l(32), t15.yxwz
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r14.w, l(48), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r14.w, l(64), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r14.w, l(80), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r14.w, l(132), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r14.w, l(148), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r14.w, l(164), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xyzw, r14.w, l(180), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r40.xyzw, r14.w, l(196), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r41.xy, r14.w, l(212), t15.xyxx
              mad r26.w, r16.x, r18.w, r26.w
              mul r14.w, r28.z, r16.w
              mov r28.z, r36.z
              dp3 r16.x, r12.xyzx, r28.xyzx
              dp3 r16.w, r29.xyzx, r28.xyzx
              add r16.w, -r36.w, r16.w
              ge r17.w, r16.w, l(0.000000)
              max r16.w, r8.w, |r16.w|
              movc r16.w, r17.w, r16.w, -r16.w
              max r16.x, -r16.x, l(0.00000010)
              div r16.x, r16.w, r16.x
              min r16.x, |r16.x|, l(131072.000000)
              mov r36.z, r37.z
              dp3 r16.w, r12.xyzx, r36.xyzx
              dp3 r17.w, r29.xyzx, r36.xyzx
              add r17.w, -r37.w, r17.w
              ge r18.y, r17.w, l(0.000000)
              max r17.w, r8.w, |r17.w|
              movc r17.w, r18.y, r17.w, -r17.w
              max r16.w, -r16.w, l(0.00000010)
              div r16.w, r17.w, r16.w
              min r16.x, |r16.w|, r16.x
              mov r37.z, r38.z
              dp3 r16.w, r12.xyzx, r37.xyzx
              dp3 r17.w, r29.xyzx, r37.xyzx
              add r17.w, -r38.w, r17.w
              ge r18.y, r17.w, l(0.000000)
              max r17.w, r8.w, |r17.w|
              movc r17.w, r18.y, r17.w, -r17.w
              max r16.w, -r16.w, l(0.00000010)
              div r16.w, r17.w, r16.w
              min r16.x, |r16.w|, r16.x
              mov r38.z, r39.z
              dp3 r16.w, r12.xyzx, r38.xyzx
              dp3 r17.w, r29.xyzx, r38.xyzx
              add r17.w, -r39.w, r17.w
              ge r18.y, r17.w, l(0.000000)
              max r17.w, r8.w, |r17.w|
              movc r17.w, r18.y, r17.w, -r17.w
              max r16.w, -r16.w, l(0.00000010)
              div r16.w, r17.w, r16.w
              min r16.x, |r16.w|, r16.x
              mov r39.z, r40.x
              dp3 r16.w, r12.xyzx, r39.xyzx
              dp3 r17.w, r29.xyzx, r39.xyzx
              add r17.w, -r40.y, r17.w
              ge r18.y, r17.w, l(0.000000)
              max r17.w, r8.w, |r17.w|
              movc r17.w, r18.y, r17.w, -r17.w
              max r16.w, -r16.w, l(0.00000010)
              div r16.w, r17.w, r16.w
              min r16.x, |r16.w|, r16.x
              mov r41.zw, r40.zzzw
              dp3 r16.w, r12.zxyz, r41.xzwx
              dp3 r17.w, r29.zxyz, r41.xzwx
              add r17.w, -r41.y, r17.w
              ge r18.y, r17.w, l(0.000000)
              max r17.w, r8.w, |r17.w|
              movc r17.w, r18.y, r17.w, -r17.w
              max r16.w, -r16.w, l(0.00000010)
              div r16.w, r17.w, r16.w
              min r16.x, |r16.w|, r16.x
              mov r28.x, r33.w
              mov r28.yz, r34.zzwz
              add r18.yzw, r29.xxyz, r28.xxyz
              mad r18.yzw, r12.xxyz, r16.xxxx, r18.yyzw
              dp3 r16.w, r18.yzwy, r18.yzwy
              sqrt r16.w, r16.w
              div r16.x, r16.x, r16.w
              add r16.x, r16.x, r16.x
              sqrt r16.x, r16.x
              mad r16.x, r8.y, l(5.000000), r16.x
              add r16.x, r16.x, l(-0.844800)
              mov r27.y, r30.z
              mov r27.z, r32.x
              dp3 r36.x, r18.yzwy, r27.xyzx
              mov r28.xy, r30.xwxx
              mov r28.z, r32.w
              dp3 r36.y, r18.yzwy, r28.xyzx
              mov r32.x, r30.y
              dp3 r36.z, r18.yzwy, r32.xyzx
              ubfe r16.w, l(9), l(16), r28.w
              utof r36.w, r16.w
              sample_l_indexable(texturecubearray)(float,float,float,float) r18.yzw, r36.xyzw, t8.wxyz, s2, r16.x
              and r30.xyz, r18.yzwy, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
              ieq r30.xyz, r30.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
              or r16.x, r30.y, r30.x
              or r16.x, r30.z, r16.x
              movc r18.yzw, r16.xxxx, l(0,1.000000,1.000000,0), r18.yyzw
              dp3 r30.x, r29.xyzx, r27.xyzx
              dp3 r30.y, r29.xyzx, r28.xyzx
              dp3 r30.z, r29.xyzx, r32.xyzx
              mad_sat r29.xyz, r30.xyzx, r33.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
              mov r34.z, r35.x
              mad r29.xyz, r29.xyzx, r34.xyzx, r35.yzwy
              dp3 r36.x, r3.xyzx, r27.xyzx
              dp3 r36.y, r3.xyzx, r28.xyzx
              dp3 r36.z, r3.xyzx, r32.xyzx
              lt r27.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r36.xyzx
              movc r17.z, r27.x, l(0), l(0.500000)
              add r28.xyz, r17.xyzx, r29.xyzx
              sample_l_indexable(texture3d)(float,float,float,float) r28.xyz, r28.xyzx, t17.xyzw, s4, l(0.000000)
              mul r30.xyz, r36.xyzx, r36.xyzx
              mul r30.xyz, r14.wwww, r30.xyzx
              movc r19.z, r27.y, l(0), l(0.500000)
              add r27.xyw, r19.xyxz, r29.xyxz
              sample_l_indexable(texture3d)(float,float,float,float) r27.xyw, r27.xywx, t18.xywz, s4, l(0.000000)
              mul r27.xyw, r30.yyyy, r27.xyxw
              mad r27.xyw, r28.xyxz, r30.xxxx, r27.xyxw
              movc r22.z, r27.z, l(0), l(0.500000)
              add r28.xyz, r22.xyzx, r29.xyzx
              sample_l_indexable(texture3d)(float,float,float,float) r28.xyz, r28.xyzx, t19.xyzw, s4, l(0.000000)
              mad r27.xyz, r28.xyzx, r30.zzzz, r27.xywx
              sample_l_indexable(texturecubearray)(float,float,float,float) r28.xyz, r36.xyzw, t8.xyzw, s2, l(6.000000)
              and r29.xyz, r28.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
              ieq r29.xyz, r29.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
              or r16.x, r29.y, r29.x
              or r16.x, r29.z, r16.x
              movc r28.xyz, r16.xxxx, l(1.000000,1.000000,0,0), r28.xyzx
              mul r29.xyz, r27.xyzx, r28.xyzx
              dp3 r16.x, r29.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
              mad r15.xyz, r27.xyzx, r28.xyzx, r15.xyzx
              mul r16.w, r9.z, r16.x
              mul r18.yzw, r14.wwww, r18.yyzw
              dp3 r14.w, r18.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
              mad r14.w, r9.z, r16.x, r14.w
              div r14.w, r16.w, r14.w
              mad r26.xyz, r18.yzwy, r14.wwww, r26.xyzx
            endif 
          endif 
        endif 
      endloop 
      mov r25.xyzw, r26.xyzw
      mov r11.yzw, r15.xxyz
      iadd r7.w, r7.w, l(32)
    endloop 
    mov r24.xyzw, r25.zxyw
    mov r23.xyz, r11.yzwy
    mov r24.xyzw, r24.yzxw
  else 
    mov r24.x, r23.w
  endif 
  max r2.w, r24.w, l(1.000000)
  rcp r2.w, r2.w
  mov_sat r24.w, r24.w
  mul r20.xyz, r2.wwww, r23.xyzx
  mul r21.xyz, r2.wwww, r24.xyzx
  lt r7.x, r24.w, l(0.990000)
  if_nz r7.x
    add r7.x, -r24.w, l(1.000000)
    mul r7.y, r7.x, cb2[19].x
    add r11.yzw, v6.xxyz, -cb2[35].xxyz
    mul r14.x, r11.y, cb2[35].w
    mul r14.yz, r11.zzwz, cb2[36].xxyx
    add_sat r11.yzw, r14.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
    mul r14.xy, r11.yzyy, cb2[36].zwzz
    mul r14.z, r11.w, cb2[37].x
    add r11.yzw, r14.xxyz, cb2[37].yyzw
    lt r14.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r3.xyzx
    movc r14.xyz, r14.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
    mov r14.w, l(0)
    add r15.xyz, r11.yzwy, r14.wwxw
    sample_l_indexable(texture3d)(float,float,float,float) r15.xyz, r15.xyzx, t17.xyzw, s4, l(0.000000)
    mul r16.xyz, r3.xyzx, r3.xyzx
    mul r7.yzw, r7.yyyy, r16.xxyz
    add r16.xyz, r11.yzwy, r14.wwyw
    sample_l_indexable(texture3d)(float,float,float,float) r16.xyz, r16.xyzx, t18.xyzw, s4, l(0.000000)
    mul r16.xyz, r7.zzzz, r16.xyzx
    mad r15.xyz, r15.xyzx, r7.yyyy, r16.xyzx
    add r11.yzw, r11.yyzw, r14.wwwz
    sample_l_indexable(texture3d)(float,float,float,float) r11.yzw, r11.yzwy, t19.wxyz, s4, l(0.000000)
    mad r7.yzw, r11.yyzw, r7.wwww, r15.xxyz
    mov r3.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r11.yzw, r3.xyzw, t8.wxyz, s2, l(6.000000)
    mul r7.yzw, r7.yyzw, r11.yyzw
    dp3 r3.w, r7.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
    mad r20.xyz, r23.xyzx, r2.wwww, r7.yzwy
    mov r12.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r7.yzw, r12.xyzw, t8.wxyz, s2, r8.z
    mad r2.w, cb2[19].x, r7.x, -r3.w
    mad r2.w, r2.y, r2.w, r3.w
    mad r21.xyz, r7.yzwy, r2.wwww, r21.xyzx
  endif 
else 
  mov r21.x, r20.w
endif 
add r2.w, r0.w, r2.x
log r2.w, |r2.w|
mul r2.w, r2.w, r6.w
exp r2.w, r2.w
add r2.w, r0.w, r2.w
add_sat r2.w, r2.w, l(-1.000000)
mul r7.xyz, r0.wwww, r20.xyzx
mad r8.yz, r2.xxyx, l(0.000000, 0.984375, 0.984375, 0.000000), l(0.000000, 0.00781250, 0.00781250, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r8.yz, r8.yzyy, t5.zxyw, s2, l(0.000000)
mul r11.yzw, r2.wwww, r21.xxyz
mul r14.xyz, r8.yyyy, r11.zwyz
mul r8.yzw, r8.zzzz, r11.yyzw
sqrt r0.w, r6.w
mad r0.w, r0.w, l(0.500000), l(0.500000)
mul r0.w, r0.w, r0.w
mul r2.y, r0.w, l(0.500000)
mad r0.w, -r0.w, l(0.500000), l(1.000000)
mad r2.w, r2.x, r0.w, r2.y
mul r0.w, r0.w, r2.w
mul r2.y, r2.w, r2.y
dp3 r2.w, r3.xyzx, cb2[17].xyzx
mov_sat r3.w, r2.w
ge r9.z, l(0.000000), r3.w
if_nz r9.z
  mov r9.w, l(0)
endif 
if_z r9.z
  mul r11.yzw, v6.yyyy, cb2[29].xxyz
  mad r11.yzw, v6.xxxx, cb2[28].xxyz, r11.yyzw
  mad r11.yzw, v6.zzzz, cb2[30].xxyz, r11.yyzw
  add r11.yzw, r11.yyzw, cb2[31].xxyz
  add r9.z, r11.w, -cb2[17].w
  mad r9.z, -r9.z, l(0.00006104), l(1.000000)
  mov_sat r10.w, r9.z
  eq r10.w, r9.z, r10.w
  if_nz r10.w
    mov r10.w, l(0)
    mov r12.w, l(0)
    loop 
      ge r13.w, r10.w, l(3.000000)
      breakc_nz r13.w
      ftou r13.w, r10.w
      add r15.xy, r11.yzyy, -cb2[r13.w + 20].xyxx
      max r15.x, |r15.y|, |r15.x|
      mul r12.w, r15.x, cb2[r13.w + 20].z
      lt r13.w, r12.w, l(1.000000)
      if_nz r13.w
        break 
      endif 
      add r10.w, r10.w, l(1.000000)
      mov r12.w, l(0)
    endloop 
  else 
    mov r10.w, l(3.000000)
    mov r12.w, l(0)
  endif 
  ge r13.w, r10.w, l(3.000000)
  if_nz r13.w
    mul r15.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
    rcp r16.xz, r15.xxxx
    mov r16.y, -r16.z
    mad r15.xyz, r11.yzyy, r16.xyzx, r15.yzyy
    add r16.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r15.xyz, r15.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r15.xyz, r16.xyzx, r15.xyzx
    mul r16.xy, r15.zyzz, cb2[32].xxxx
    round_ni r16.xy, r16.xyxx
    mul r15.w, r16.y, cb2[27].x
    mad r15.w, r15.w, cb2[32].x, r16.x
    ftou r15.w, r15.w
    iadd r15.w, r15.w, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.x, r15.w, l(0), t23.xxxx
    and r16.y, r16.x, l(0x40000000)
    ishl r16.z, r16.x, l(2)
    if_z r16.y
      and r16.y, r16.x, l(0x01ffffff)
      iadd r17.x, r15.w, r16.y
      ushr r15.w, r16.x, l(25)
      utof r15.w, r15.w
      mul r15.xyz, r15.wwww, r15.xyzx
      frc r15.xyz, r15.xyzx
      mul r15.xyz, r15.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
      ftou r15.xyz, r15.xyzx
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.z, r17.x, l(0), t23.xxxx
      ushr r16.xy, r15.zyzz, l(6, 6, 0, 0)
      and r15.w, r17.z, l(0xc0000000)
      iadd r16.w, r17.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.w, r16.w, l(0), t23.xxxx
      movc r16.y, r16.y, r17.z, r16.w
      ushr r16.w, r16.y, l(13)
      movc r16.x, r16.x, r16.w, r16.y
      and r16.x, r16.x, l(8191)
      iadd r18.x, r16.x, r17.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.x, l(0), t23.xxxx
      mov r17.y, l(0)
      mov r18.y, l(1)
      movc r16.xyw, r15.wwww, r17.xyxz, r18.xyxz
      movc r18.yz, r15.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r19.xy, r15.zyzz, r18.yyyy
      and r19.xy, r19.xyxx, l(1, 1, 0, 0)
      and r17.w, r16.w, l(0xc0000000)
      iadd r18.y, r16.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.y, r18.y, l(0), t23.xxxx
      movc r18.y, r19.y, r16.w, r18.y
      ushr r19.y, r18.y, l(13)
      movc r18.y, r19.x, r19.y, r18.y
      and r18.y, r18.y, l(8191)
      iadd r18.x, r16.x, r18.y
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.w, r18.x, l(0), t23.xxxx
      movc r16.xyw, r17.wwww, r16.xyxw, r18.xzxw
      movc r16.xyw, r15.wwww, r17.xyxz, r16.xyxw
      and r15.w, r16.w, l(0xc0000000)
      if_z r15.w
        iadd r15.w, -r16.y, l(6)
        ushr r17.xy, r15.zyzz, r15.wwww
        or r15.w, r16.w, l(0x40000000)
        bfi r17.y, l(1), l(1), r17.y, l(0)
        bfi r17.x, l(1), l(0), r17.x, r17.y
        imul null, r17.x, r17.x, l(10)
        ushr r15.w, r15.w, r17.x
        and r15.w, r15.w, l(1023)
        iadd r17.x, r15.w, r16.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.w, r17.x, l(0), t23.xxxx
        iadd r17.yz, r16.yyyy, l(0, 1, 2, 0)
        iadd r15.w, -r17.y, l(6)
        ushr r18.xy, r15.zyzz, r15.wwww
        and r15.w, r17.w, l(0xc0000000)
        or r16.y, r17.w, l(0x40000000)
        bfi r18.y, l(1), l(1), r18.y, l(0)
        bfi r18.x, l(1), l(0), r18.x, r18.y
        imul null, r18.x, r18.x, l(10)
        ushr r16.y, r16.y, r18.x
        and r16.y, r16.y, l(1023)
        iadd r18.x, r16.y, r17.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.x, l(0), t23.xxxx
        mov r18.y, r17.z
        movc r18.xyz, r15.wwww, r17.xywx, r18.xyzx
        iadd r16.y, -r18.y, l(6)
        ushr r17.yz, r15.zzyz, r16.yyyy
        and r16.y, r18.z, l(0xc0000000)
        or r18.y, r18.z, l(0x40000000)
        bfi r17.z, l(1), l(1), r17.z, l(0)
        bfi r17.y, l(1), l(0), r17.y, r17.z
        imul null, r17.y, r17.y, l(10)
        ushr r17.y, r18.y, r17.y
        and r17.y, r17.y, l(1023)
        iadd r19.x, r17.y, r18.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.y, r19.x, l(0), t23.xxxx
        movc r17.yz, r16.yyyy, r18.xxzx, r19.xxyx
        movc r16.xw, r15.wwww, r17.xxxw, r17.yyyz
      endif 
      and r15.w, r16.w, l(0xc0000000)
      if_z r15.w
        ubfe r16.y, l(14), l(15), r16.w
        utof r16.y, r16.y
        mul r16.y, r16.y, cb2[27].w
        mul r16.y, r16.y, l(0.00006104)
        and r17.xy, r16.wwww, l(0x00007fff, 0x20000000, 0, 0)
        utof r17.x, r17.x
        mul r17.x, r17.x, cb2[27].w
        mul r17.x, r17.x, l(0.00003052)
        and r17.z, r15.y, l(3)
        iadd r17.z, r16.x, r17.z
        iadd r17.z, r17.z, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.z, r17.z, l(0), t23.xxxx
        bfi r18.xyz, l(2, 2, 1, 0), l(3, 1, 4, 0), r15.xyzx, l(0, 0, 0, 0)
        ushr r15.x, r17.z, r18.x
        and r15.x, r15.x, l(255)
        utof r15.x, r15.x
        mul r15.x, r17.x, r15.x
        mad r15.x, r15.x, l(0.00392157), r16.y
        iadd r15.y, r18.y, l(1)
        ubfe r15.z, l(1), l(1), r15.z
        iadd r15.y, r15.z, r15.y
        iadd r15.y, r15.y, r16.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.y, r15.y, l(0), t23.xxxx
        ushr r15.y, r15.y, r18.z
        and r15.y, r15.y, l(0x0000ffff)
        utof r15.y, r15.y
        mul r15.y, r17.x, r15.y
        mad r15.y, r15.y, l(0.00001526), r16.y
        movc r16.z, r17.y, r15.x, r15.y
      else 
        and r15.x, r16.w, l(0x80000000)
        iadd r15.y, r16.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.y, r15.y, l(0), t23.xxxx
        movc r15.x, r15.x, r15.y, l(0)
        ishl r15.y, r16.w, l(2)
        ushr r15.z, r15.x, l(16)
        and r15.x, r15.x, l(0x0000ffff)
        f16tof32 r15.xz, r15.xxzx
        mad r15.y, r11.y, r15.z, r15.y
        mad r15.x, r11.z, r15.x, r15.y
        movc r16.z, r15.w, r15.x, r16.z
      endif 
    endif 
    mad r11.w, -cb2[27].z, l(2.000000), r11.w
    lt r11.w, r16.z, r11.w
    movc r9.w, r11.w, l(0), l(1.000000)
  endif 
  if_z r13.w
    if_z cb2[58].y
      ftou r11.w, r10.w
      add r15.xy, r11.yzyy, -cb2[r11.w + 20].xyxx
      mul r15.xy, r15.xyxx, cb2[r11.w + 20].zzzz
      mad r15.xy, r15.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r11.w, cb2[26].y
      add r15.z, r10.w, r11.w
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r11.w, r15.xyzx, t13.xxxx, s13, r9.z
      sample_l_indexable(texture2darray)(float,float,float,float) r13.w, r15.xyzx, t31.yzwx, s0, l(0.000000)
      add r11.w, r11.w, r13.w
      add_sat r11.w, r11.w, l(-1.000000)
      mul r13.w, r11.w, r11.w
      mul r9.w, r11.w, r13.w
    endif 
    if_nz cb2[58].y
      mov r15.x, -r9.x
      ftou r11.w, r10.w
      add r10.w, r10.w, l(1.000000)
      min r10.w, r10.w, l(2.000000)
      ftou r10.w, r10.w
      add r12.w, -r12.w, l(1.000000)
      mul r12.w, r12.w, l(28.000000)
      ftou r12.w, r12.w
      add r16.xy, r11.yzyy, -cb2[r11.w + 20].xyxx
      mul r16.xy, r16.xyxx, cb2[r11.w + 20].zzzz
      mad r16.xy, r16.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      add r11.yz, r11.yyzy, -cb2[r10.w + 20].xxyx
      mul r11.yz, r11.yyzy, cb2[r10.w + 20].zzzz
      mad r11.yz, r11.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      mov r15.y, r10.x
      mov r15.z, r9.x
      mov r13.w, l(0)
      mov r15.w, l(0)
      loop 
        uge r16.z, r15.w, l(8)
        breakc_nz r16.z
        ult r16.z, r12.w, r15.w
        movc r17.xy, r16.zzzz, r11.yzyy, r16.xyxx
        movc r16.w, r16.z, cb2[r10.w + 20].w, cb2[r11.w + 20].w
        movc r16.z, r16.z, r10.w, r11.w
        dp2 r18.x, icb[r15.w + 0].yxyy, r15.xyxx
        dp2 r18.y, icb[r15.w + 0].yxyy, r15.yzyy
        mad r17.xy, r18.xyxx, r16.wwww, r17.xyxx
        iadd r16.z, r16.z, cb2[26].y
        utof r17.z, r16.z
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r16.z, r17.xyzx, t13.xxxx, s13, r9.z
        sample_l_indexable(texture2darray)(float,float,float,float) r16.w, r17.xyzx, t31.yzwx, s0, l(0.000000)
        add r16.z, r16.w, r16.z
        add_sat r16.z, r16.z, l(-1.000000)
        mad r13.w, r16.z, l(0.125000), r13.w
        iadd r15.w, r15.w, l(1)
      endloop 
      mul r9.z, r13.w, r13.w
      mul r9.w, r13.w, r9.z
    endif 
  endif 
endif 
lt r9.z, l(0.000000), r3.w
if_nz r9.z
  lt r9.z, l(0.000000), r9.w
  if_nz r9.z
    mul r9.z, r5.w, cb2[18].w
    mul r9.z, r3.w, r9.z
    if_nz cb2[23].x
      add r15.xyz, v6.xyzx, cb1[24].xyzx
      mov r15.w, l(1.000000)
      dp4 r10.w, cb2[24].xyzw, r15.xyzw
      dp4 r11.y, cb2[25].xyzw, r15.xyzw
      frc r15.x, r10.w
      frc r15.y, r11.y
      iadd r10.w, l(-1), cb2[23].x
      utof r15.z, r10.w
      sample_l_indexable(texture2darray)(float,float,float,float) r11.yzw, r15.xyzx, t20.wxyz, s2, l(0.000000)
      add r11.yzw, r11.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
      mad r11.yzw, cb2[23].yyyy, r11.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
      mul r11.yzw, r11.yyzw, cb2[18].xxyz
    else 
      mov r11.yzw, cb2[18].xxyz
    endif 
    ushr r10.w, cb2[53].x, l(16)
    ult r12.w, l(0), r10.w
    and r12.w, r4.w, r12.w
    if_nz r12.w
      iadd r10.w, r10.w, cb2[0].x
      iadd r10.w, r10.w, l(-1)
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.w, r10.w, l(52), t12.xxxx
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r10.w, l(68), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r10.w, l(84), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r10.w, l(132), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r10.w, l(148), t12.xyzw
      mad r13.w, |r2.w|, l(-0.200000), l(0.400000)
      mad r19.xyz, r3.xyzx, r13.wwww, v6.xyzx
      mov r19.w, l(1.000000)
      dp4 r15.x, r15.xyzw, r19.xyzw
      dp4 r15.y, r16.xyzw, r19.xyzw
      mad r15.xy, r15.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      add r15.xy, r18.zwzz, r15.xyxx
      mul r15.xy, r18.xyxx, r15.xyxx
      div r15.zw, r12.wwww, r17.xxxz
      add r16.xy, -r15.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
      ge r16.xy, r15.xyxx, r16.xyxx
      ge r15.zw, r15.zzzw, r15.xxxy
      or r15.zw, r15.zzzw, r16.xxxy
      or r13.w, r15.w, r15.z
      if_z r13.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.w, r10.w, l(28), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r10.w, l(100), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.zw, r10.w, l(164), t12.xxxy
        dp4 r10.w, r16.xyzw, r19.xyzw
        mov_sat r15.xy, r15.xyxx
        mad r16.xy, r15.xyxx, r17.xzxx, r17.ywyy
        add r10.w, r15.z, r10.w
        div r10.w, r10.w, r15.w
        max r10.w, r10.w, l(0.00006104)
        and r13.w, r13.w, l(0x0000ffff)
        if_nz cb2[58].y
          mov r15.x, -r9.x
          utof r17.z, r13.w
          mov r15.y, r10.x
          mov r15.z, r9.x
          mov r15.w, l(0)
          mov r16.w, l(0)
          loop 
            ige r17.w, r16.w, l(8)
            breakc_nz r17.w
            dp2 r18.x, icb[r16.w + 0].yxyy, r15.xyxx
            dp2 r18.y, icb[r16.w + 0].yxyy, r15.yzyy
            mad r17.xy, r18.xyxx, r12.wwww, r16.xyxx
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r17.x, r17.xyzx, t9.xxxx, s13, r10.w
            mad r15.w, r17.x, l(0.125000), r15.w
            iadd r16.w, r16.w, l(1)
          endloop 
        else 
          utof r16.z, r13.w
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r15.w, r16.xyzx, t9.xxxx, s13, r10.w
        endif 
        mul r10.w, r15.w, r15.w
        mul r10.w, r15.w, r10.w
      else 
        mov r10.w, l(1.000000)
      endif 
      mul r9.w, r9.w, r10.w
    else 
      and r10.w, cb2[53].x, l(0x0000ffff)
      ult r12.w, l(0), r10.w
      not r13.w, r4.w
      and r12.w, r12.w, r13.w
      if_nz r12.w
        iadd r10.w, r10.w, cb2[0].x
        iadd r10.w, r10.w, l(-1)
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.w, r10.w, l(52), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r10.w, l(68), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r10.w, l(84), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r10.w, l(132), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r10.w, l(148), t12.xyzw
        mad r13.w, |r2.w|, l(-0.200000), l(0.400000)
        mad r19.xyz, r3.xyzx, r13.wwww, v6.xyzx
        mov r19.w, l(1.000000)
        dp4 r15.x, r15.xyzw, r19.xyzw
        dp4 r15.y, r16.xyzw, r19.xyzw
        mad r15.xy, r15.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
        add r15.xy, r18.zwzz, r15.xyxx
        mul r15.xy, r18.xyxx, r15.xyxx
        div r15.zw, r12.wwww, r17.xxxz
        add r16.xy, -r15.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
        ge r16.xy, r15.xyxx, r16.xyxx
        ge r15.zw, r15.zzzw, r15.xxxy
        or r15.zw, r15.zzzw, r16.xxxy
        or r13.w, r15.w, r15.z
        if_z r13.w
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.w, r10.w, l(28), t12.xxxx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r10.w, l(100), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.zw, r10.w, l(164), t12.xxxy
          dp4 r10.w, r16.xyzw, r19.xyzw
          mov_sat r15.xy, r15.xyxx
          mad r16.xy, r15.xyxx, r17.xzxx, r17.ywyy
          add r10.w, r15.z, r10.w
          div r10.w, r10.w, r15.w
          max r10.w, r10.w, l(0.00006104)
          and r13.w, r13.w, l(0x0000ffff)
          if_nz cb2[58].y
            mov r15.x, -r9.x
            utof r17.z, r13.w
            mov r15.y, r10.x
            mov r15.z, r9.x
            mov r15.w, l(0)
            mov r16.w, l(0)
            loop 
              ige r17.w, r16.w, l(8)
              breakc_nz r17.w
              dp2 r18.x, icb[r16.w + 0].yxyy, r15.xyxx
              dp2 r18.y, icb[r16.w + 0].yxyy, r15.yzyy
              mad r17.xy, r18.xyxx, r12.wwww, r16.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r17.x, r17.xyzx, t9.xxxx, s13, r10.w
              mad r15.w, r17.x, l(0.125000), r15.w
              iadd r16.w, r16.w, l(1)
            endloop 
          else 
            utof r16.z, r13.w
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r15.w, r16.xyzx, t9.xxxx, s13, r10.w
          endif 
          mul r10.w, r15.w, r15.w
          mul r10.w, r15.w, r10.w
        else 
          mov r10.w, l(1.000000)
        endif 
        mul r9.w, r9.w, r10.w
      endif 
    endif 
    mad r10.w, -r2.x, l(0.500000), l(1.000000)
    mad r10.w, -r3.w, r10.w, l(1.000000)
    mul r10.w, r10.w, r10.w
    mad r10.w, -r10.w, l(0.620000), l(0.620000)
    add r10.w, -r3.w, r10.w
    mad r10.w, r6.w, r10.w, r3.w
    mul r10.w, r9.w, r10.w
    lt r2.w, l(0.000000), r2.w
    mad r15.xyz, r10.wwww, r11.yzwy, r7.xyzx
    mad r16.xyz, -v6.xyzx, r1.wwww, cb2[17].xyzx
    dp3 r1.w, r16.xyzx, r16.xyzx
    rsq r1.w, r1.w
    mul r16.xyz, r1.wwww, r16.xyzx
    dp3 r1.w, r16.xyzx, r5.xyzx
    dp3 r10.w, r3.xyzx, r16.xyzx
    mad r12.w, |r10.w|, r5.w, -|r10.w|
    mad r10.w, |r10.w|, r12.w, l(1.000000)
    mad r3.w, r3.w, r0.w, r2.y
    mul r10.w, r10.w, r10.w
    mul r3.w, r3.w, r10.w
    rcp r3.w, r3.w
    mul r3.w, r9.z, r3.w
    mul r3.w, r3.w, r9.w
    mul r3.w, r3.w, l(0.250000)
    mad r16.xyz, r3.wwww, r11.yzwy, r8.yzwy
    add_sat r1.w, -r1.w, l(1.000000)
    mul r9.z, r1.w, r1.w
    mul r9.z, r9.z, r9.z
    mul r1.w, r1.w, r9.z
    mul r1.w, r1.w, r3.w
    mad r17.xyz, r1.wwww, r11.zwyz, r14.xyzx
    mov r15.w, r17.z
    mov r7.w, r14.z
    movc r7.xyzw, r2.wwww, r15.xyzw, r7.xyzw
    mov r17.zw, r16.xxxy
    mov r14.zw, r8.yyyz
    movc r15.xyzw, r2.wwww, r17.xyzw, r14.xyzw
    movc r8.w, r2.w, r16.z, r8.w
    mov r14.z, r7.w
    mov r14.xy, r15.xyxx
    mov r8.yz, r15.zzwz
  endif 
endif 
mov r15.x, -r9.x
not r1.w, r4.w
mad r2.x, -r2.x, l(0.500000), l(1.000000)
mov r16.xy, l(0,0,0,0)
mov r17.w, l(0)
mov r18.xyz, v6.xyzx
mov r18.w, l(1.000000)
mov r19.w, l(1.000000)
mov r15.z, r9.x
mov r20.w, l(1.000000)
mov r21.z, l(1.000000)
mov r22.w, l(1.000000)
mov r15.yw, r10.xxxx
mov r9.y, r15.w
mov r23.w, l(1.000000)
mov r10.y, r15.x
mov r10.z, r9.x
mov r24.w, l(1.000000)
mov r25.x, r10.x
mov r25.y, r15.x
mov r25.z, r9.x
mov r26.x, r10.x
mov r26.y, r15.x
mov r26.z, r9.x
mov r27.x, r10.x
mov r27.y, r15.x
mov r27.z, r9.x
mov r11.yzw, r7.xxyz
mov r28.xyz, r14.zxyz
mov r29.xyz, r8.yzwy
mov r2.w, cb2[58].y
mov r3.w, l(0)
loop 
  uge r7.w, r3.w, cb2[0].x
  breakc_nz r7.w
  ushr r16.z, r3.w, l(5)
  iadd r17.xyz, r13.xyzx, r16.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r7.w, r17.xyzw, t6.yzwx
  mov r17.xyz, r11.yzwy
  mov r30.xyz, r28.xyzx
  mov r31.xyz, r29.xyzx
  mov r9.z, r2.w
  mov r9.w, r7.w
  loop 
    breakc_z r9.w
    firstbit_lo r10.w, r9.w
    ishl r12.w, l(1), r10.w
    and r13.w, r9.w, r12.w
    if_nz r13.w
      xor r9.w, r9.w, r12.w
      iadd r10.w, r3.w, r10.w
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r32.xyzw, r10.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r33.xy, r10.w, l(16), t11.xyxx
      add r32.xyz, r32.xyzx, -v6.xyzx
      mov r33.z, r32.w
      lt r32.xyz, |r32.xyzx|, r33.zxyz
      and r12.w, r32.y, r32.x
      and r12.w, r32.z, r12.w
      if_nz r12.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r10.w, l(0), t12.wxyz
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r10.w, l(16), t12.zxyw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r10.w, l(32), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r10.w, l(48), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r10.w, l(64), t12.yzwx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r10.w, l(80), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r10.w, l(96), t12.yzwx
        ubfe r12.w, l(3), l(24), r33.w
        switch r12.w
          case l(4)
          lt r12.w, l(0.000000), r38.x
          mov r39.xy, r37.zwzz
          mov r39.z, r38.w
          mad r40.xyz, -r39.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r32.yzwy
          add r41.xyz, r40.xyzx, -v6.xyzx
          dp3 r13.w, r39.xyzx, r41.xyzx
          div_sat r14.w, -r13.w, r38.x
          mad r42.xyz, r14.wwww, r39.xyzx, r40.xyzx
          movc r42.xyz, r12.wwww, r42.xyzx, r32.yzwy
          add r42.xyz, r42.xyzx, -v6.xyzx
          dp3 r16.z, r42.xyzx, r42.xyzx
          rsq r16.w, r16.z
          mul r42.xyz, r16.wwww, r42.xyzx
          dp3 r16.w, r3.xyzx, r42.xyzx
          mov_sat r21.w, r16.w
          lt r25.w, l(0.000000), r21.w
          if_nz r25.w
            sqrt r25.w, r16.z
            mul r26.w, r35.x, r35.x
            div r16.z, r26.w, r16.z
            min r16.z, r16.z, l(1.000000)
            mad_sat r42.xy, r25.wwww, r34.xzxx, r34.ywyy
            mul r42.zw, r42.xxxy, r42.xxxy
            mad r42.xy, r42.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
            mul r42.xy, r42.xyxx, r42.zwzz
            mul r16.z, r16.z, r42.x
            mul r16.z, r42.y, r16.z
            lt r25.w, l(0.000000), r16.z
            if_nz r25.w
              ubfe r25.w, l(3), l(27), r33.w
              ine r25.w, r25.w, l(1)
              if_nz r25.w
                mad r25.w, |r16.w|, l(-0.200000), l(0.400000)
                mad r42.xyz, r3.xyzx, r25.wwww, v6.xyzx
                add r42.xyz, -r36.xyzx, r42.xyzx
                max r25.w, |r42.z|, |r42.y|
                max r25.w, r25.w, |r42.x|
                div r25.w, r37.x, r25.w
                add r25.w, r37.y, r25.w
                dp3 r26.w, r42.xyzx, r42.xyzx
                rsq r26.w, r26.w
                max r25.w, r25.w, l(0.00006104)
                and r27.w, r33.w, l(0x0000ffff)
                utof r43.w, r27.w
                mov r27.w, l(0)
                mov r28.w, l(0)
                loop 
                  ige r29.w, r28.w, l(8)
                  breakc_nz r29.w
                  dp2 r44.y, icb[r28.w + 0].yxyy, r15.xyxx
                  dp2 r44.z, icb[r28.w + 0].yxyy, r15.yzyy
                  mul r44.yz, r35.yyyy, r44.yyzy
                  mul r44.x, r11.x, r44.y
                  mul r44.w, r8.x, r44.y
                  mad r43.xyz, r42.xyzx, r26.wwww, r44.xzwx
                  sample_c_lz_indexable(texturecubearray)(float,float,float,float) r29.w, r43.xyzw, t10.xxxx, s13, r25.w
                  mad r27.w, r29.w, l(0.125000), r27.w
                  iadd r28.w, r28.w, l(1)
                endloop 
              else 
                mov r27.w, l(1.000000)
              endif 
              mul r16.z, r16.z, r27.w
              lt r25.w, l(0.000000), r16.z
              if_nz r25.w
                mul r25.w, r5.w, r33.x
                mul r25.w, r25.w, l(0.250000)
                dp3 r26.w, r39.xyzx, r12.xyzx
                dp3 r28.w, r12.xyzx, r41.xyzx
                mad r29.w, -r26.w, r26.w, r38.x
                mad r13.w, r26.w, r28.w, -r13.w
                div_sat r13.w, r13.w, r29.w
                div r26.w, r29.w, r38.x
                mul r26.w, r26.w, l(10.000000)
                min r26.w, r26.w, l(1.000000)
                add r13.w, -r14.w, r13.w
                mad r13.w, r26.w, r13.w, r14.w
                mad r39.xyz, r13.wwww, r39.xyzx, r40.xyzx
                movc r39.xyz, r12.wwww, r39.xyzx, r32.yzwy
                add r39.xyz, r39.xyzx, -v6.xyzx
                dp3 r12.w, r39.xyzx, r39.xyzx
                rsq r12.w, r12.w
                mul r40.xyz, r12.wwww, r39.xyzx
                ubfe r13.w, l(4), l(16), r33.w
                ult r14.w, l(0), r13.w
                and r14.w, r4.w, r14.w
                if_nz r14.w
                  iadd r13.w, r13.w, cb2[0].x
                  iadd r13.w, r13.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.w, r13.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r13.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r13.w, l(116), t12.xyzw
                  mad r26.w, |r16.w|, l(-0.200000), l(0.400000)
                  mad r19.xyz, r3.xyzx, r26.wwww, v6.xyzx
                  dp4 r26.w, r41.xyzw, r19.xyzw
                  dp4 r28.w, r42.xyzw, r19.xyzw
                  lt r29.w, r28.w, r26.w
                  if_z r29.w
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r13.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r13.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r13.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r13.w, l(148), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xy, r13.w, l(164), t12.xyxx
                    dp4 r41.x, r41.xyzw, r19.xyzw
                    dp4 r41.y, r42.xyzw, r19.xyzw
                    div r19.xy, r41.xyxx, r28.wwww
                    mad r19.xy, r19.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r19.xy, r44.zwzz, r19.xyxx
                    mul r19.xy, r44.xyxx, r19.xyxx
                    div r41.xy, r14.wwww, r43.xzxx
                    add r41.zw, -r41.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                    ge r41.zw, r19.xxxy, r41.zzzw
                    ge r41.xy, r41.xyxx, r19.xyxx
                    or r41.xy, r41.xyxx, r41.zwzz
                    or r19.z, r41.y, r41.x
                    mov_sat r19.xy, r19.xyxx
                    mad r41.xy, r19.xyxx, r43.xzxx, r43.ywyy
                    mul r19.x, r28.w, r45.y
                    mad r19.y, r45.x, r28.w, r26.w
                    div r19.x, r19.y, r19.x
                  else 
                    mov r19.z, l(-1)
                  endif 
                  or r19.y, r29.w, r19.z
                  if_z r19.y
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.w, r13.w, l(28), t12.xxxx
                    max r19.x, r19.x, l(0.00006104)
                    and r13.w, r13.w, l(0x0000ffff)
                    if_nz r9.z
                      utof r42.z, r13.w
                      mov r19.yz, l(0,0,0,0)
                      loop 
                        ige r26.w, r19.z, l(8)
                        breakc_nz r26.w
                        dp2 r43.x, icb[r19.z + 0].yxyy, r15.xwxx
                        dp2 r43.y, icb[r19.z + 0].xyxx, r9.xyxx
                        mad r42.xy, r43.xyxx, r14.wwww, r41.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r26.w, r42.xyzx, t9.xxxx, s13, r19.x
                        mad r19.y, r26.w, l(0.125000), r19.y
                        iadd r19.z, r19.z, l(1)
                      endloop 
                    else 
                      utof r41.z, r13.w
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.y, r41.xyzx, t9.xxxx, s13, r19.x
                    endif 
                    mul r13.w, r19.y, r19.y
                    mul r13.w, r19.y, r13.w
                  else 
                    mov r13.w, l(1.000000)
                  endif 
                  mul r16.z, r13.w, r16.z
                else 
                  ubfe r13.w, l(4), l(20), r33.w
                  ult r14.w, l(0), r13.w
                  and r14.w, r1.w, r14.w
                  if_nz r14.w
                    iadd r13.w, r13.w, cb2[0].x
                    iadd r13.w, r13.w, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.w, r13.w, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r13.w, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r13.w, l(116), t12.xyzw
                    mad r19.x, |r16.w|, l(-0.200000), l(0.400000)
                    mad r20.xyz, r3.xyzx, r19.xxxx, v6.xyzx
                    dp4 r19.x, r41.xyzw, r20.xyzw
                    dp4 r19.z, r42.xyzw, r20.xyzw
                    lt r26.w, r19.z, r19.x
                    if_z r26.w
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r13.w, l(68), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r13.w, l(84), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r13.w, l(132), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r13.w, l(148), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xy, r13.w, l(164), t12.xyxx
                      dp4 r41.x, r41.xyzw, r20.xyzw
                      dp4 r41.y, r42.xyzw, r20.xyzw
                      div r20.xy, r41.xyxx, r19.zzzz
                      mad r20.xy, r20.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                      add r20.xy, r44.zwzz, r20.xyxx
                      mul r20.xy, r44.xyxx, r20.xyxx
                      div r41.xy, r14.wwww, r43.xzxx
                      add r41.zw, -r41.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                      ge r41.zw, r20.xxxy, r41.zzzw
                      ge r41.xy, r41.xyxx, r20.xyxx
                      or r41.xy, r41.xyxx, r41.zwzz
                      or r20.z, r41.y, r41.x
                      mov_sat r20.xy, r20.xyxx
                      mad r41.xy, r20.xyxx, r43.xzxx, r43.ywyy
                      mul r20.x, r19.z, r45.y
                      mad r19.x, r45.x, r19.z, r19.x
                      div r19.x, r19.x, r20.x
                    else 
                      mov r20.z, l(-1)
                    endif 
                    or r19.z, r26.w, r20.z
                    if_z r19.z
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.w, r13.w, l(28), t12.xxxx
                      max r19.x, r19.x, l(0.00006104)
                      and r13.w, r13.w, l(0x0000ffff)
                      if_nz r9.z
                        utof r20.z, r13.w
                        mov r19.z, l(0)
                        mov r26.w, l(0)
                        loop 
                          ige r28.w, r26.w, l(8)
                          breakc_nz r28.w
                          dp2 r42.x, icb[r26.w + 0].xyxx, r10.xyxx
                          dp2 r42.y, icb[r26.w + 0].yxyy, r10.xzxx
                          mad r20.xy, r42.xyxx, r14.wwww, r41.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r20.x, r20.xyzx, t9.xxxx, s13, r19.x
                          mad r19.z, r20.x, l(0.125000), r19.z
                          iadd r26.w, r26.w, l(1)
                        endloop 
                      else 
                        utof r41.z, r13.w
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.z, r41.xyzx, t9.xxxx, s13, r19.x
                      endif 
                      mul r13.w, r19.z, r19.z
                      mul r13.w, r19.z, r13.w
                    else 
                      mov r13.w, l(1.000000)
                    endif 
                    mul r16.z, r13.w, r16.z
                  endif 
                endif 
                mad r13.w, -r21.w, r2.x, l(1.000000)
                mul r13.w, r13.w, r13.w
                mad r13.w, -r13.w, l(0.620000), l(0.620000)
                add r13.w, -r21.w, r13.w
                mad r13.w, r6.w, r13.w, r21.w
                mul r13.w, r16.z, r13.w
                mov r33.x, r32.x
                lt r14.w, l(0.000000), r16.w
                mad r20.xyz, r13.wwww, r33.xyzx, r17.xyzx
                dp3_sat r13.w, r3.xyzx, r40.xyzx
                mad r39.xyz, r39.xyzx, r12.wwww, r5.xyzx
                dp3 r12.w, r39.xyzx, r39.xyzx
                rsq r12.w, r12.w
                mul r39.xyz, r12.wwww, r39.xyzx
                dp3 r12.w, r39.xyzx, r5.xyzx
                dp3 r16.w, r3.xyzx, r39.xyzx
                mad r19.x, |r16.w|, r5.w, -|r16.w|
                mad r16.w, |r16.w|, r19.x, l(1.000000)
                mad r19.x, r13.w, r0.w, r2.y
                mul r16.w, r16.w, r16.w
                mul r16.w, r19.x, r16.w
                rcp r16.w, r16.w
                mul r13.w, r25.w, r13.w
                mul r13.w, r13.w, r16.w
                mul r13.w, r16.z, r13.w
                mad r39.xyz, r13.wwww, r33.xyzx, r31.xyzx
                add_sat r12.w, -r12.w, l(1.000000)
                mul r16.z, r12.w, r12.w
                mul r16.z, r16.z, r16.z
                mul r12.w, r12.w, r16.z
                mul r12.w, r12.w, r13.w
                mad r40.xyz, r12.wwww, r33.xyzx, r30.xyzx
                movc r17.xyz, r14.wwww, r20.xyzx, r17.xyzx
                movc r30.xyz, r14.wwww, r40.xyzx, r30.xyzx
                movc r31.xyz, r14.wwww, r39.xyzx, r31.xyzx
              endif 
            endif 
          endif 
          break 
          case l(2)
          mov r20.xy, r35.zwzz
          mov r20.z, r36.w
          add r20.xyz, r20.xyzx, -v6.xyzx
          dp3 r12.w, r20.xyzx, r20.xyzx
          rsq r12.w, r12.w
          mul r39.xyz, r12.wwww, r20.xyzx
          dp3 r13.w, r3.xyzx, r39.xyzx
          mov_sat r14.w, r13.w
          lt r16.z, l(0.000000), r14.w
          if_nz r16.z
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r10.w, l(112), t12.yzwx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r10.w, l(128), t12.zxyw
            mov r41.xyz, r39.xyzx
            mov r41.w, r40.y
            dp4 r16.z, r41.xyzw, r18.xyzw
            lt r16.w, r16.z, l(1.000000)
            if_nz r16.w
              mov r42.xyz, l(1.000000,1.000000,1.000000,0)
              mov r16.w, l(0)
            else 
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r10.w, l(172), t12.yzwx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r10.w, l(188), t12.wxyz
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xyzw, r10.w, l(204), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.x, r10.w, l(236), t12.xxxx
              add r46.xyz, r32.yzwy, -v6.xyzx
              mul r21.w, r35.x, r35.x
              dp3 r25.w, r46.xyzx, r46.xyzx
              div r21.w, r21.w, r25.w
              min r21.w, r21.w, l(1.000000)
              mad_sat r34.xy, r16.zzzz, r34.xzxx, r34.ywyy
              mul r34.zw, r34.xxxy, r34.xxxy
              mad r34.xy, r34.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
              mul r34.xy, r34.xyxx, r34.zwzz
              mul r21.w, r21.w, r34.x
              mul r21.w, r34.y, r21.w
              mov r36.w, r37.x
              dp4 r34.x, r36.xyzw, r18.xyzw
              mov r46.xyz, r37.yzwy
              mov r46.w, r38.w
              dp4 r34.y, r46.xyzw, r18.xyzw
              div r21.xy, r34.xyxx, r16.zzzz
              lt r16.z, r43.w, l(0.00048828)
              if_nz r16.z
                mov r44.y, r45.x
                mad_sat r34.xy, |r21.xyxx|, r44.zwzz, r44.xyxx
                mul r34.zw, r34.xxxy, r34.xxxy
                mad r34.xy, r34.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
                mul r34.xy, r34.xyxx, r34.zwzz
                mul r16.z, r34.y, r34.x
              else 
                mov r43.w, r44.y
                mul_sat r34.xyzw, |r21.yyxx|, r43.xyzw
                log r34.xyzw, r34.xyzw
                mul r34.xyzw, r34.xyzw, r44.xxxx
                exp r34.xyzw, r34.xyzw
                add r34.xy, r34.zwzz, r34.xyxx
                log r34.xy, r34.xyxx
                mul r34.xy, r34.xyxx, r45.xxxx
                exp r34.xy, r34.xyxx
                mul r25.w, r34.x, r44.z
                mad r26.w, r44.w, r34.y, l(-1.000000)
                mad r25.w, r44.w, r34.y, -r25.w
                div_sat r25.w, r26.w, r25.w
                mul r26.w, r25.w, r25.w
                mad r25.w, r25.w, l(-2.000000), l(3.000000)
                mul r16.z, r25.w, r26.w
              endif 
              mul r16.w, r16.z, r21.w
              and r16.z, r19.x, l(255)
              if_nz r16.z
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyz, r10.w, l(220), t12.xyzx
                dp3 r19.x, r45.yzwy, r21.xyzx
                dp3 r21.x, r34.xyzx, r21.xyzx
                frc r34.x, r19.x
                frc r34.y, r21.x
                iadd r16.z, r16.z, l(-1)
                utof r34.z, r16.z
                sample_l_indexable(texture2darray)(float,float,float,float) r42.xyz, r34.xyzx, t20.xyzw, s2, l(0.000000)
              else 
                mov r42.xyz, l(1.000000,1.000000,1.000000,0)
              endif 
            endif 
            mov r32.yz, r33.yyzy
            mul r21.xyw, r42.xyxz, r32.xyxz
            lt r16.z, l(0.000000), r16.w
            if_nz r16.z
              ubfe r16.z, l(3), l(27), r33.w
              ine r16.z, r16.z, l(1)
              if_nz r16.z
                mad r16.z, |r13.w|, l(-0.200000), l(0.400000)
                mad r22.xyz, r3.xyzx, r16.zzzz, v6.xyzx
                mov r39.xyz, r38.xyzx
                dp4 r16.z, r39.xyzw, r22.xyzw
                dp4 r19.x, r41.xyzw, r22.xyzw
                ge r25.w, r19.x, r16.z
                if_nz r25.w
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.y, r10.w, l(144), t12.xxxx
                  mov r36.w, r37.x
                  dp4 r32.x, r36.xyzw, r22.xyzw
                  mov r38.xyz, r37.yzwy
                  dp4 r32.y, r38.xyzw, r22.xyzw
                  div r22.xy, r32.xyxx, r19.xxxx
                  mad_sat r22.xy, r22.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  mad r22.xy, r22.xyxx, r40.zwzz, r40.xyxx
                  div r10.w, r16.z, r19.x
                  max r10.w, r10.w, l(0.00006104)
                  and r16.z, r33.w, l(0x0000ffff)
                  if_nz r9.z
                    utof r32.z, r16.z
                    mov r19.x, l(0)
                    mov r25.w, l(0)
                    loop 
                      ige r26.w, r25.w, l(8)
                      breakc_nz r26.w
                      dp2 r34.x, icb[r25.w + 0].xyxx, r25.xyxx
                      dp2 r34.y, icb[r25.w + 0].yxyy, r25.xzxx
                      mad r32.xy, r34.xyxx, r35.yyyy, r22.xyxx
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r26.w, r32.xyzx, t9.xxxx, s13, r10.w
                      mad r19.x, r26.w, l(0.125000), r19.x
                      iadd r25.w, r25.w, l(1)
                    endloop 
                  else 
                    utof r22.z, r16.z
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.x, r22.xyzx, t9.xxxx, s13, r10.w
                  endif 
                  mul r10.w, r19.x, r19.x
                  mul r10.w, r19.x, r10.w
                else 
                  mov r10.w, l(1.000000)
                endif 
              else 
                mov r10.w, l(1.000000)
              endif 
              mul r10.w, r10.w, r16.w
              lt r16.z, l(0.000000), r10.w
              if_nz r16.z
                mul r16.z, r5.w, r33.x
                mul r16.z, r14.w, r16.z
                ubfe r16.w, l(4), l(16), r33.w
                ult r22.x, l(0), r16.w
                and r22.x, r4.w, r22.x
                if_nz r22.x
                  iadd r16.w, r16.w, cb2[0].x
                  iadd r16.w, r16.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r22.x, r16.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r16.w, l(68), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r16.w, l(84), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r16.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r16.w, l(116), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r16.w, l(132), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r16.w, l(148), t12.xyzw
                  mad r22.y, |r13.w|, l(-0.200000), l(0.400000)
                  mad r23.xyz, r3.xyzx, r22.yyyy, v6.xyzx
                  dp4 r32.x, r32.xyzw, r23.xyzw
                  dp4 r32.y, r34.xyzw, r23.xyzw
                  dp4 r22.y, r35.xyzw, r23.xyzw
                  dp4 r22.z, r36.xyzw, r23.xyzw
                  lt r23.x, r22.z, r22.y
                  div r23.yz, r32.xxyx, r22.zzzz
                  mad r23.yz, r23.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
                  add r23.yz, r38.zzwz, r23.yyzy
                  mul r23.yz, r38.xxyx, r23.yyzy
                  div r32.xy, r22.xxxx, r37.xzxx
                  add r32.zw, -r32.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                  ge r32.zw, r23.yyyz, r32.zzzw
                  ge r32.xy, r32.xyxx, r23.yzyy
                  or r32.xy, r32.xyxx, r32.zwzz
                  or r25.w, r32.y, r32.x
                  or r23.x, r23.x, r25.w
                  if_z r23.x
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.x, r16.w, l(28), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xy, r16.w, l(164), t12.xyxx
                    mov_sat r23.yz, r23.yyzy
                    mad r33.xy, r23.yzyy, r37.xzxx, r37.ywyy
                    mul r16.w, r22.z, r32.y
                    mad r22.y, r32.x, r22.z, r22.y
                    div r16.w, r22.y, r16.w
                    max r16.w, r16.w, l(0.00006104)
                    and r22.y, r23.x, l(0x0000ffff)
                    if_nz r9.z
                      utof r23.z, r22.y
                      mov r22.z, l(0)
                      mov r25.w, l(0)
                      loop 
                        ige r26.w, r25.w, l(8)
                        breakc_nz r26.w
                        dp2 r32.x, icb[r25.w + 0].xyxx, r26.xyxx
                        dp2 r32.y, icb[r25.w + 0].yxyy, r26.xzxx
                        mad r23.xy, r32.xyxx, r22.xxxx, r33.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.x, r23.xyzx, t9.xxxx, s13, r16.w
                        mad r22.z, r23.x, l(0.125000), r22.z
                        iadd r25.w, r25.w, l(1)
                      endloop 
                    else 
                      utof r33.z, r22.y
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.z, r33.xyzx, t9.xxxx, s13, r16.w
                    endif 
                    mul r16.w, r22.z, r22.z
                    mul r16.w, r22.z, r16.w
                  else 
                    mov r16.w, l(1.000000)
                  endif 
                  mul r10.w, r10.w, r16.w
                else 
                  ubfe r16.w, l(4), l(20), r33.w
                  ult r22.x, l(0), r16.w
                  and r22.x, r1.w, r22.x
                  if_nz r22.x
                    iadd r16.w, r16.w, cb2[0].x
                    iadd r16.w, r16.w, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r22.x, r16.w, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r16.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r16.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r16.w, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r16.w, l(116), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r16.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r16.w, l(148), t12.xyzw
                    mad r22.y, |r13.w|, l(-0.200000), l(0.400000)
                    mad r24.xyz, r3.xyzx, r22.yyyy, v6.xyzx
                    dp4 r23.x, r32.xyzw, r24.xyzw
                    dp4 r23.y, r33.xyzw, r24.xyzw
                    dp4 r22.y, r34.xyzw, r24.xyzw
                    dp4 r23.z, r35.xyzw, r24.xyzw
                    lt r24.x, r23.z, r22.y
                    div r23.xy, r23.xyxx, r23.zzzz
                    mad r23.xy, r23.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r23.xy, r37.zwzz, r23.xyxx
                    mul r23.xy, r37.xyxx, r23.xyxx
                    div r24.yz, r22.xxxx, r36.xxzx
                    add r32.xy, -r24.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
                    ge r32.xy, r23.xyxx, r32.xyxx
                    ge r24.yz, r24.yyzy, r23.xxyx
                    or r24.yz, r24.yyzy, r32.xxyx
                    or r24.y, r24.z, r24.y
                    or r24.x, r24.x, r24.y
                    if_z r24.x
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r24.x, r16.w, l(28), t12.xxxx
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r24.yz, r16.w, l(164), t12.xxyx
                      mov_sat r23.xy, r23.xyxx
                      mad r32.xy, r23.xyxx, r36.xzxx, r36.ywyy
                      mul r16.w, r23.z, r24.z
                      mad r22.y, r24.y, r23.z, r22.y
                      div r16.w, r22.y, r16.w
                      max r16.w, r16.w, l(0.00006104)
                      and r22.y, r24.x, l(0x0000ffff)
                      if_nz r9.z
                        utof r23.z, r22.y
                        mov r24.xy, l(0,0,0,0)
                        loop 
                          ige r24.z, r24.y, l(8)
                          breakc_nz r24.z
                          dp2 r33.x, icb[r24.y + 0].xyxx, r27.xyxx
                          dp2 r33.y, icb[r24.y + 0].yxyy, r27.xzxx
                          mad r23.xy, r33.xyxx, r22.xxxx, r32.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.x, r23.xyzx, t9.xxxx, s13, r16.w
                          mad r24.x, r23.x, l(0.125000), r24.x
                          iadd r24.y, r24.y, l(1)
                        endloop 
                      else 
                        utof r32.z, r22.y
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.x, r32.xyzx, t9.xxxx, s13, r16.w
                      endif 
                      mul r16.w, r24.x, r24.x
                      mul r16.w, r24.x, r16.w
                    else 
                      mov r16.w, l(1.000000)
                    endif 
                    mul r10.w, r10.w, r16.w
                  endif 
                endif 
                mad r16.w, -r14.w, r2.x, l(1.000000)
                mul r16.w, r16.w, r16.w
                mad r16.w, -r16.w, l(0.620000), l(0.620000)
                add r16.w, -r14.w, r16.w
                mad r16.w, r6.w, r16.w, r14.w
                mul r16.w, r10.w, r16.w
                lt r13.w, l(0.000000), r13.w
                mad r23.xyz, r16.wwww, r21.xywx, r17.xyzx
                mad r20.xyz, r20.xyzx, r12.wwww, r5.xyzx
                dp3 r12.w, r20.xyzx, r20.xyzx
                rsq r12.w, r12.w
                mul r20.xyz, r12.wwww, r20.xyzx
                dp3 r12.w, r20.xyzx, r5.xyzx
                dp3 r16.w, r3.xyzx, r20.xyzx
                mad r20.x, |r16.w|, r5.w, -|r16.w|
                mad r16.w, |r16.w|, r20.x, l(1.000000)
                mad r14.w, r14.w, r0.w, r2.y
                mul r16.w, r16.w, r16.w
                mul r14.w, r14.w, r16.w
                rcp r14.w, r14.w
                mul r14.w, r16.z, r14.w
                mul r10.w, r10.w, r14.w
                mul r10.w, r10.w, l(0.250000)
                mad r20.xyz, r10.wwww, r21.xywx, r31.xyzx
                add_sat r12.w, -r12.w, l(1.000000)
                mul r14.w, r12.w, r12.w
                mul r14.w, r14.w, r14.w
                mul r12.w, r12.w, r14.w
                mul r10.w, r10.w, r12.w
                mad r21.xyw, r10.wwww, r21.xyxw, r30.xyxz
                movc r17.xyz, r13.wwww, r23.xyzx, r17.xyzx
                movc r30.xyz, r13.wwww, r21.xywx, r30.xyzx
                movc r31.xyz, r13.wwww, r20.xyzx, r31.xyzx
              endif 
            endif 
          endif 
          break 
          default 
          break 
        endswitch 
      endif 
    endif 
  endloop 
  mov r11.yzw, r17.xxyz
  mov r28.xyz, r30.xyzx
  mov r29.xyz, r31.xyzx
  iadd r3.w, r3.w, l(32)
endloop 
add r2.xyw, -r1.xyxz, l(1.000000, 1.000000, 0.000000, 1.000000)
mul r2.xyw, r2.xyxw, r28.xyxz
mad r1.xyz, r29.xyzx, r1.xyzx, r2.xywx
mad r0.xyz, r11.yzwy, r0.xyzx, r1.xyzx
dp3 r0.w, r0.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
max r0.w, r0.w, l(0.000100)
max r0.w, r0.w, cb1[85].x
mul r1.xyz, r0.wwww, r6.xyzx
mad r1.xyz, r4.xyzx, r2.zzzz, r1.xyzx
add r0.xyz, r0.xyzx, r1.xyzx
lt r0.w, l(0.000000), cb2[9].z
if_nz r0.w
  dp3 r0.w, v6.xyzx, v6.xyzx
  rsq r1.x, r0.w
  mul r1.xyz, r1.xxxx, v6.xyzx
  sqrt r0.w, r0.w
  lt r1.w, l(0.000000), cb2[13].w
  if_nz r1.w
    mad r2.xy, r0.wwww, cb2[15].xyxx, cb2[14].zwzz
    mul r2.xy, r2.xyxx, cb2[16].xyxx
    lt r1.w, l(0.010000), |v6.z|
    mul r2.zw, v6.zzzz, cb2[15].zzzw
    mul r3.xy, r2.zwzz, l(-1.442695, -1.442695, 0.000000, 0.000000)
    exp r3.xy, r3.xyxx
    add r3.xy, -r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    div r2.zw, r3.xxxy, r2.zzzw
    mul r2.zw, r2.zzzw, r2.xxxy
    movc r2.xy, r1.wwww, r2.zwzz, r2.xyxx
    mul r2.xzw, r2.xxxx, cb2[12].xxyz
    exp r2.xzw, r2.xxzw
    mul r3.xyz, r2.yyyy, cb2[12].xyzx
    exp r3.xyz, r3.xyzx
    add r3.xyz, -r2.xzwx, r3.xyzx
    mad r2.xyz, cb2[13].wwww, r3.xyzx, r2.xzwx
  else 
    mad r1.w, r0.w, cb2[15].x, cb2[14].z
    mul r1.w, r1.w, cb2[16].x
    lt r2.w, l(0.010000), |v6.z|
    mul r3.x, v6.z, cb2[15].z
    mul r3.y, r3.x, l(-1.442695)
    exp r3.y, r3.y
    add r3.y, -r3.y, l(1.000000)
    div r3.x, r3.y, r3.x
    mul r3.x, r1.w, r3.x
    movc r1.w, r2.w, r3.x, r1.w
    mul r3.xyz, r1.wwww, cb2[12].xyzx
    exp r2.xyz, r3.xyzx
  endif 
  mad r2.xyz, r2.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r2.xyz, r2.xyzx, -cb2[9].zzzz
  dp3 r1.x, cb2[7].yzwy, -r1.xyzx
  mad r1.y, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r1.z, cb2[8].w, -r1.x, l(1.000000)
  mul r1.z, r1.z, r1.z
  mul r1.z, r1.z, l(12.566371)
  div r1.y, r1.y, r1.z
  add r0.w, r0.w, -cb2[10].w
  mul_sat r0.w, r0.w, cb2[11].w
  mul r0.w, r0.w, r1.y
  mov_sat r1.x, r1.x
  mad r1.x, r1.x, r1.x, l(1.000000)
  mad r1.x, r1.x, l(0.05968310), l(-1.000000)
  mad r1.x, cb2[8].z, r1.x, l(1.000000)
  mul r1.yzw, r0.wwww, cb2[11].xxyz
  mad r1.xyz, r1.xxxx, cb2[10].xyzx, r1.yzwy
  mul r1.xyz, r1.xyzx, cb2[9].wwww
  add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r1.xyz, r1.xyzx, r3.xyzx
  mad r1.xyz, r0.xyzx, r2.xyzx, r1.xyzx
else 
  mul r0.w, v6.z, cb2[6].x
  mad r1.w, cb2[6].x, v6.z, cb2[5].x
  lt r2.x, |r0.w|, l(0.000100)
  min r2.y, r1.w, l(64.000000)
  mul r2.y, r2.y, l(1.442695)
  exp r2.y, r2.y
  mov_sat r2.z, cb2[6].z
  lt r2.w, r1.w, l(0.000000)
  add r1.w, r1.w, l(1.000000)
  movc r1.w, r2.w, r2.y, r1.w
  add r1.w, r1.w, -cb2[6].z
  movc r0.w, r2.x, l(1.000000), r0.w
  div r0.w, r1.w, r0.w
  movc r0.w, r2.x, r2.z, r0.w
  mul r0.w, r0.w, cb2[5].z
  dp3 r1.w, v6.xyzx, v6.xyzx
  sqrt r2.x, r1.w
  mad r0.w, r0.w, r2.x, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  rsq r1.w, r1.w
  mul r2.xyz, r1.wwww, v6.xyzx
  dp3 r1.w, cb2[7].yzwy, r2.xyzx
  mad_sat r1.w, cb2[8].y, r1.w, cb2[8].x
  add r2.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r2.xyzw, r1.wwww, r2.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r2.w
  add r2.xyz, -r0.xyzx, r2.xyzx
  mad r1.xyz, r0.wwww, r2.xyzx, r0.xyzx
endif 
mul r0.xyz, r1.xyzx, cb1[85].yyyy
ge r1.xyz, r0.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.xyz, r0.xyzx, r1.xyzx
min o0.xyz, r0.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
mov o0.w, l(1.000000)
ret 
// Approximately 2297 instruction slots used
