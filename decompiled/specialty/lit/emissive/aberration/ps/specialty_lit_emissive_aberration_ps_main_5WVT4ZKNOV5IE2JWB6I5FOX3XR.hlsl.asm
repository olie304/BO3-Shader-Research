//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:41:23 2021
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float3 colorTint;                  // Offset:  160 Size:    12
//   float3 specColorTint;              // Offset:  176 Size:    12
//   float baseNormalHeight;            // Offset:  188 Size:     4
//   float2 glossRange;                 // Offset:  192 Size:     8
//   float2 rotateUVs;                  // Offset:  200 Size:     8
//   float2 scrollUVs;                  // Offset:  208 Size:     8
//   float2 scaleUVs;                   // Offset:  216 Size:     8
//   float2 offsetUVs;                  // Offset:  224 Size:     8
//   float2 zoomUVs;                    // Offset:  232 Size:     8
//   float zoomRate;                    // Offset:  240 Size:     4
//   float layerDepth;                  // Offset:  244 Size:     4
//   bool clampU;                       // Offset:  248 Size:     4
//   bool clampV;                       // Offset:  252 Size:     4
//   float2 flickerSeed;                // Offset:  256 Size:     8
//   float flickerSpeed;                // Offset:  264 Size:     4
//   float2 flickerRange;               // Offset:  272 Size:     8
//   float flickerPower;                // Offset:  280 Size:     4
//   uint zFeatherComputeSprites;       // Offset:  284 Size:     4 [unused]
//   float hdrScale;                    // Offset:  288 Size:     4
//   float emissiveFalloffPower;        // Offset:  292 Size:     4
//   float outlineHDR;                  // Offset:  296 Size:     4
//   float3 emissiveTint1;              // Offset:  304 Size:    12
//   float3 aberrationFactors;          // Offset:  320 Size:    12
//   bool invertFalloff;                // Offset:  332 Size:     4
//   float2 colorScroll;                // Offset:  336 Size:     8
//   float2 colorScale;                 // Offset:  344 Size:     8
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16 [unused]
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4 [unused]
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// colorSampler                      sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// specColorSampler                  sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// normalSampler                     sampler      NA          NA             s5      1 
// aoSampler                         sampler      NA          NA             s6      1 
// lookupSampler                     sampler      NA          NA             s7      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// colorMap                          texture  float4          2d             t0      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// tintMask                          texture  float4          2d            t21      1 
// specColorMap                      texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// normalMap                         texture  float4          2d            t24      1 
// glossMap                          texture  float4          2d            t25      1 
// aoMap                             texture  float4          2d            t26      1 
// flickerLookupMap                  texture  float4          2d            t29      1 
// emissiveMap1                      texture  float4          2d            t30      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// outlineMap                        texture  float4          2d            t37      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyz 
// COLOR                    0   xyz         1     NONE   float   xyz 
// COLOR                    1      w        1     NONE   float       
// TEXCOORD                 0   xy          2     NONE   float   xy  
// UVOFFSETS                0   xyz         3     NONE   float   xyz 
// TEXCOORD                 1   xyz         4     NONE   float   xyz 
// TEXCOORD                 2   xyz         5     NONE   float   xyz 
// TEXCOORD                 3   xyz         6     NONE   float   xyz 
// OFFPOSITION              0   xyz         7     NONE   float   xyz 
// SV_IsFrontFace           0   x           8    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[22], immediateIndexed
dcl_constantbuffer CB1[93], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2d (float,float,float,float) t26
dcl_resource_texture2d (float,float,float,float) t29
dcl_resource_texture2d (float,float,float,float) t30
dcl_resource_texture2darray (float,float,float,float) t31
dcl_resource_texture2d (float,float,float,float) t37
dcl_input_ps_siv linear noperspective v0.xyz, position
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xy
dcl_input_ps constant v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyz
dcl_input_ps_sgv constant v8.x, is_front_face
dcl_output o0.xyzw
dcl_temps 47
mul r0.xy, cb0[21].xyxx, cb1[69].wwww
mad r0.xy, v2.xyxx, cb0[21].zwzz, r0.xyxx
sample_indexable(texture2d)(float,float,float,float) r1.xyz, r0.xyxx, t0.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t21.xyzw, s1
add r0.yzw, cb0[10].xxyz, l(0.000000, -1.000000, -1.000000, -1.000000)
mad r0.xyz, r0.xxxx, r0.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r0.xyz, r0.xyzx, r1.xyzx
mul r0.xyz, r0.xyzx, v1.xyzx
sample_indexable(texture2d)(float,float,float,float) r0.w, v2.xyxx, t22.yzwx, s3
add r1.xyz, cb0[11].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r1.xyz, r0.wwww, r1.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
add_sat r0.w, -r0.w, l(1.000000)
mul r0.xyz, r0.wwww, r0.xyzx
sample_indexable(texture2d)(float,float,float,float) r0.w, v2.xyxx, t26.yzwx, s6
sample_indexable(texture2d)(float,float,float,float) r1.w, v2.xyxx, t25.yzwx, s3
add r2.x, -cb0[12].x, cb0[12].y
mad r1.w, r1.w, r2.x, cb0[12].x
mul_sat r1.w, r1.w, l(0.05882353)
sample_indexable(texture2d)(float,float,float,float) r2.xyz, v2.xyxx, t24.xyzw, s5
add r2.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.000000, 0.000000)
mad r2.xyz, cb0[11].wwww, r2.xyzx, l(0.500000, 0.500000, 0.000000, 0.000000)
mad r2.xy, r2.xyxx, l(1.99218750, 1.99218750, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r2.w, r2.xyxx, r2.xyxx
add r2.w, -r2.w, l(1.000000)
max r2.w, r2.w, l(0.000000)
sqrt r2.w, r2.w
mul r2.z, r2.z, r2.z
mul r2.z, r2.z, l(0.33333334)
min r2.z, r2.z, l(1.000000)
movc r3.x, v8.x, l(1.000000), l(-1.000000)
dp3 r3.y, v4.xyzx, v4.xyzx
rsq r3.y, r3.y
mul r3.yzw, r3.yyyy, v4.xxyz
mul r4.xyz, r3.xxxx, r3.yzwy
dp3 r4.w, v5.xyzx, v5.xyzx
rsq r4.w, r4.w
mul r5.xyz, r4.wwww, v5.xyzx
mul r5.xyz, r3.xxxx, r5.xyzx
dp3 r4.w, v6.xyzx, v6.xyzx
rsq r4.w, r4.w
mul r6.xyz, r4.wwww, v6.xyzx
mul r6.xyz, r3.xxxx, r6.xyzx
mul r1.w, r1.w, l(-17.000000)
exp r1.w, r1.w
add r1.w, r1.w, r2.z
log r1.w, r1.w
mul r1.w, r1.w, l(-0.05882353)
max r7.y, r1.w, l(0.000000)
mul r6.xyz, r2.yyyy, r6.xyzx
mad r2.xyz, r5.xyzx, r2.xxxx, r6.xyzx
mad r2.xyz, r4.xyzx, r2.wwww, r2.xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
dp3 r1.w, -v7.xyzx, -v7.xyzx
rsq r1.w, r1.w
mul r4.xyz, r1.wwww, -v7.xyzx
dp3 r5.x, r4.xyzx, v5.xyzx
dp3 r5.y, r4.xyzx, v6.xyzx
dp3 r3.x, r4.xyzx, v4.xyzx
lt r4.w, l(0.000000), r3.x
div r5.xy, -r5.xyxx, r3.xxxx
and r5.xy, r4.wwww, r5.xyxx
add r5.zw, v2.xxxy, l(0.000000, 0.000000, -0.500000, -0.500000)
add r3.x, cb0[15].y, l(0.000010)
mul r5.xy, r3.xxxx, r5.xyxx
mul r5.xy, r5.xyxx, cb0[13].zwzz
mad r5.xy, r5.zwzz, cb0[13].zwzz, r5.xyxx
mad r5.xy, cb0[14].xyxx, cb0[13].zwzz, r5.xyxx
mad r3.x, cb0[12].w, cb1[69].w, l(1.000000)
mul r3.x, r3.x, cb0[12].z
mul r3.x, r3.x, l(0.01745329)
sincos r3.x, r6.x, r3.x
mov r6.y, r6.x
mov r6.z, r3.x
dp2 r8.x, r6.yzyy, r5.xyxx
mov r6.x, -r3.x
dp2 r8.y, r6.xyxx, r5.xyxx
mul r5.xy, cb0[13].xyxx, cb1[69].wwww
mad r5.xy, r5.xyxx, cb0[13].zwzz, r8.xyxx
mul r3.x, cb0[15].x, cb1[69].w
sincos null, r3.x, r3.x
mad r3.x, r3.x, l(0.500000), l(0.500000)
add r3.x, -r3.x, l(1.000000)
add r4.w, -cb0[14].z, cb0[14].w
mad r3.x, r3.x, r4.w, cb0[14].z
div r5.xy, r5.xyxx, r3.xxxx
add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
mov_sat r5.zw, r5.xxxy
movc r5.xy, cb0[15].zwzz, r5.zwzz, r5.xyxx
dp3_sat r3.x, r4.xyzx, r3.yzwy
sample_indexable(texture2d)(float,float,float,float) r3.y, r5.xyxx, t30.xwyz, s1
mov r6.x, l(0)
mul r6.yz, cb0[20].xxyx, cb1[69].wwww
add r8.xyzw, r5.xyxy, -r6.xyzz
sample_indexable(texture2d)(float,float,float,float) r9.x, r8.xyxx, t30.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r9.y, r8.zwzz, t30.xyzw, s1
mov r8.xz, l(0,0,1.000000,0)
mul r8.y, cb0[20].z, cb1[69].w
add r3.zw, r5.xxxy, -r8.xxxy
sample_indexable(texture2d)(float,float,float,float) r9.z, r3.zwzz, t30.xyzw, s1
log r3.z, r3.x
mul r3.yz, r3.yyzy, cb0[18].xxyx
exp r3.z, r3.z
add r3.x, -r3.x, l(1.000000)
log r3.x, r3.x
mul r3.x, r3.x, cb0[18].y
exp r3.x, r3.x
movc r3.x, cb0[20].w, r3.x, r3.z
eq r3.z, cb0[18].y, l(0.000000)
movc r3.x, r3.z, l(1.000000), r3.x
mul r3.x, r3.x, r3.y
mul r3.xyz, r3.xxxx, r9.xyzx
add r3.w, v3.y, v3.x
add r3.w, r3.w, v3.z
add r3.w, r3.w, cb0[16].y
frc r3.w, r3.w
mad r5.y, cb1[69].w, cb0[16].z, r3.w
mov r5.x, cb0[16].x
sample_l_indexable(texture2d)(float,float,float,float) r3.w, r5.xyxx, t29.yzwx, s7, l(0.000000)
log r3.w, |r3.w|
mul r3.w, r3.w, cb0[17].z
exp r3.w, r3.w
add r4.w, -cb0[17].x, cb0[17].y
mad r3.w, r3.w, r4.w, cb0[17].x
sample_indexable(texture2d)(float,float,float,float) r4.w, v2.xyxx, t37.xyzw, s1
add r5.xyzw, r6.xyzz, v2.xyxy
sample_indexable(texture2d)(float,float,float,float) r6.x, r5.xyxx, t37.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r6.y, r5.zwzz, t37.xyzw, s1
add r5.xy, r8.xyxx, v2.xyxx
sample_indexable(texture2d)(float,float,float,float) r6.z, r5.xyxx, t37.xyzw, s1
mul r5.xyz, r6.xyzx, cb0[19].xyzx
mul r4.w, r4.w, cb0[18].z
mul r5.xyz, r4.wwww, r5.xyzx
ftou r6.xy, v0.xyxx
ge r4.w, v0.z, l(0.984375)
mul r5.w, v0.z, l(1.01587307)
mad r6.z, v0.z, l(64.000000), l(-63.000000)
movc r4.w, r4.w, r6.z, r5.w
max r4.w, r4.w, l(0.00000001)
rcp r4.w, r4.w
ine r5.w, cb1[92].x, l(0)
utof r6.zw, r6.yyyx
dp2 r7.z, r6.wzww, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r7.z, r7.z
mul r7.z, r7.z, l(52.982918)
frc r7.z, r7.z
mad r7.z, r7.z, l(6.28318548), cb1[70].w
sincos r8.x, r9.x, r7.z
dp2 r6.z, r6.zwzz, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r6.z, r6.z
mul r6.z, r6.z, l(52.982918)
frc r6.z, r6.z
mad r6.z, r6.z, l(6.28318548), cb1[70].w
sincos r10.x, r11.x, r6.z
dp3_sat r7.x, r2.xyzx, r4.xyzx
dp3 r6.z, -r4.xyzx, r2.xyzx
add r6.z, r6.z, r6.z
mad r12.xyz, r2.xyzx, -r6.zzzz, -r4.xyzx
mul r6.z, r7.y, l(17.000000)
exp r6.z, r6.z
add r6.z, r6.z, l(2.000000)
div r6.z, l(2.000000), r6.z
sqrt r6.w, r6.z
add r7.z, -r7.y, l(1.000000)
mul r7.w, r7.z, l(5.000000)
mad r9.w, r7.z, l(5.000000), l(-2.500000)
mul r9.w, r9.w, l(0.400000)
max r9.w, r9.w, l(0.000000)
mul r9.w, r9.w, l(100.000000)
mad r10.yz, -r7.zzzz, l(0.000000, 10.000000, 5.000000, 0.000000), l(0.000000, 6.857410, 7.085000, 0.000000)
exp r10.y, r10.y
mul r10.y, r7.x, r10.y
mul r10.w, r7.z, r7.w
mad r10.z, -r10.w, l(2.015905), r10.z
exp r10.z, r10.z
mul r10.z, r7.x, r10.z
mul r10.yz, r10.yyzy, l(0.000000, 9.136810, 9.708090, 0.000000)
max r10.y, r10.z, r10.y
max r10.y, r10.y, l(1.268160)
iadd r10.z, cb2[0].y, -cb2[58].x
mul r4.w, r4.w, l(0.00781250)
min r4.w, r4.w, l(15.000000)
ftou r4.w, r4.w
ushr r13.xy, r6.xyxx, l(6, 6, 0, 0)
ishl r13.z, r4.w, l(4)
and r4.w, r10.z, l(-32)
iadd r6.x, -r4.w, r10.z
and r6.y, cb2[0].y, l(-32)
iadd r10.w, -r6.y, cb2[0].y
mov r14.xy, l(0,0,0,0)
mov r15.w, l(0)
mov r16.yz, l(0,0,1.000000,0)
mov r17.xy, l(0,0,0,0)
mov r18.xy, l(0,0,0,0)
mov r19.xy, l(0,0,0,0)
mov r20.xyzw, l(0,0,0,0)
mov r21.yzw, l(0,0,0,0)
mov r11.y, r4.w
loop 
  uge r11.z, r11.y, cb2[0].y
  breakc_nz r11.z
  ushr r14.z, r11.y, l(5)
  iadd r15.xyz, r13.xyzx, r14.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r11.z, r15.xyzw, t7.yzxw
  ieq r11.w, r4.w, r11.y
  bfi r13.w, r6.x, l(0), l(0), r11.z
  movc r11.z, r11.w, r13.w, r11.z
  ieq r11.w, r6.y, r11.y
  ubfe r13.w, r10.w, l(0), r11.z
  movc r11.z, r11.w, r13.w, r11.z
  iadd r11.w, r11.y, cb2[0].x
  mov r22.xyzw, r20.xyzw
  mov r23.xyz, r21.yzwy
  mov r13.w, r11.z
  loop 
    breakc_z r13.w
    firstbit_lo r14.z, r13.w
    ishl r14.w, l(1), r14.z
    and r15.x, r13.w, r14.w
    if_nz r15.x
      xor r13.w, r13.w, r14.w
      iadd r14.w, r11.w, r14.z
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r24.xyzw, r14.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r15.xy, r14.w, l(16), t11.xyxx
      add r24.xyz, r24.xyzx, -v7.xyzx
      mov r15.z, r24.w
      lt r15.xyz, |r24.xyzx|, r15.zxyz
      and r14.w, r15.y, r15.x
      and r14.w, r15.z, r14.w
      if_nz r14.w
        iadd r14.z, r11.y, r14.z
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r14.z, l(0), t15.wxyz
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r15.xy, r14.z, l(96), t15.xyxx
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r14.z, l(116), t15.zwxy
        add r26.xyz, -r24.yzwy, v7.xyzx
        and r14.w, r25.w, l(0x0000ffff)
        ubfe r15.z, l(6), l(25), r25.w
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r14.w, l(0), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r14.w, l(16), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r14.w, l(32), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r14.w, l(48), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r14.w, l(64), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r14.w, l(80), t16.xyzw
        dp3 r16.w, r27.xyzx, r26.xyzx
        add_sat r16.w, r27.w, r16.w
        dp3 r17.w, r28.xyzx, r26.xyzx
        add_sat r17.w, r28.w, r17.w
        mul r16.w, r16.w, r17.w
        dp3 r17.w, r29.xyzx, r26.xyzx
        add_sat r17.w, r29.w, r17.w
        mul r16.w, r16.w, r17.w
        dp3 r17.w, r30.xyzx, r26.xyzx
        add_sat r17.w, r30.w, r17.w
        mul r16.w, r16.w, r17.w
        dp3 r17.w, r31.xyzx, r26.xyzx
        add_sat r17.w, r31.w, r17.w
        mul r16.w, r16.w, r17.w
        dp3 r17.w, r32.xyzx, r26.xyzx
        add_sat r17.w, r32.w, r17.w
        mul r16.x, r16.w, r17.w
        and r16.w, r15.x, l(1)
        movc r16.xw, r16.wwww, r16.xxxy, r16.zzzx
        mov r17.w, r15.x
        mov r27.xy, r16.xwxx
        mov r18.w, l(1)
        loop 
          ige r19.w, r18.w, r15.z
          breakc_nz r19.w
          iadd r19.w, r14.w, r18.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r19.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r19.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r19.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r19.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r19.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r19.w, l(80), t16.xyzw
          dp3 r19.w, r28.xyzx, r26.xyzx
          add_sat r19.w, r28.w, r19.w
          mul r19.w, r19.w, r27.x
          dp3 r24.w, r29.xyzx, r26.xyzx
          add_sat r24.w, r29.w, r24.w
          mul r19.w, r19.w, r24.w
          dp3 r24.w, r30.xyzx, r26.xyzx
          add_sat r24.w, r30.w, r24.w
          mul r19.w, r19.w, r24.w
          dp3 r24.w, r31.xyzx, r26.xyzx
          add_sat r24.w, r31.w, r24.w
          mul r19.w, r19.w, r24.w
          dp3 r24.w, r32.xyzx, r26.xyzx
          add_sat r24.w, r32.w, r24.w
          mul r19.w, r19.w, r24.w
          dp3 r24.w, r33.xyzx, r26.xyzx
          add_sat r24.w, r33.w, r24.w
          mul r27.x, r19.w, r24.w
          ushr r26.w, r17.w, l(2)
          ubfe r27.z, l(1), l(2), r17.w
          and r27.w, r26.w, l(2)
          max r28.x, r27.x, r27.y
          mad r19.w, -r19.w, r24.w, l(1.000000)
          mul r19.w, r19.w, r27.y
          movc r8.w, r27.w, r19.w, r28.x
          movc r27.xy, r27.zzzz, r27.xyxx, r8.zwzz
          iadd r18.w, r18.w, l(1)
          mov r17.w, r26.w
        endloop 
        mov_sat r27.y, r27.y
        mul r8.w, r15.y, r27.y
        lt r14.w, l(0.000000), r8.w
        if_nz r14.w
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r14.z, l(16), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r14.z, l(32), t15.yxwz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r14.z, l(48), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r14.z, l(64), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r14.z, l(80), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r14.z, l(132), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r14.z, l(148), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r14.z, l(164), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r14.z, l(180), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r14.z, l(196), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xy, r14.z, l(212), t15.xyxx
          mad r23.z, r27.y, r15.y, r23.z
          mul r8.w, r25.z, r8.w
          mov r25.z, r33.z
          dp3 r14.z, r12.xyzx, r25.xyzx
          dp3 r14.w, r26.xyzx, r25.xyzx
          add r14.w, -r33.w, r14.w
          ge r15.x, r14.w, l(0.000000)
          max r14.w, r9.w, |r14.w|
          movc r14.w, r15.x, r14.w, -r14.w
          max r14.z, -r14.z, l(0.00000010)
          div r14.z, r14.w, r14.z
          min r14.z, |r14.z|, l(131072.000000)
          mov r33.z, r34.z
          dp3 r14.w, r12.xyzx, r33.xyzx
          dp3 r15.x, r26.xyzx, r33.xyzx
          add r15.x, -r34.w, r15.x
          ge r15.y, r15.x, l(0.000000)
          max r15.x, r9.w, |r15.x|
          movc r15.x, r15.y, r15.x, -r15.x
          max r14.w, -r14.w, l(0.00000010)
          div r14.w, r15.x, r14.w
          min r14.z, |r14.w|, r14.z
          mov r34.z, r35.z
          dp3 r14.w, r12.xyzx, r34.xyzx
          dp3 r15.x, r26.xyzx, r34.xyzx
          add r15.x, -r35.w, r15.x
          ge r15.y, r15.x, l(0.000000)
          max r15.x, r9.w, |r15.x|
          movc r15.x, r15.y, r15.x, -r15.x
          max r14.w, -r14.w, l(0.00000010)
          div r14.w, r15.x, r14.w
          min r14.z, |r14.w|, r14.z
          mov r35.z, r36.z
          dp3 r14.w, r12.xyzx, r35.xyzx
          dp3 r15.x, r26.xyzx, r35.xyzx
          add r15.x, -r36.w, r15.x
          ge r15.y, r15.x, l(0.000000)
          max r15.x, r9.w, |r15.x|
          movc r15.x, r15.y, r15.x, -r15.x
          max r14.w, -r14.w, l(0.00000010)
          div r14.w, r15.x, r14.w
          min r14.z, |r14.w|, r14.z
          mov r36.z, r37.x
          dp3 r14.w, r12.xyzx, r36.xyzx
          dp3 r15.x, r26.xyzx, r36.xyzx
          add r15.x, -r37.y, r15.x
          ge r15.y, r15.x, l(0.000000)
          max r15.x, r9.w, |r15.x|
          movc r15.x, r15.y, r15.x, -r15.x
          max r14.w, -r14.w, l(0.00000010)
          div r14.w, r15.x, r14.w
          min r14.z, |r14.w|, r14.z
          mov r38.zw, r37.zzzw
          dp3 r14.w, r12.zxyz, r38.xzwx
          dp3 r15.x, r26.zxyz, r38.xzwx
          add r15.x, -r38.y, r15.x
          ge r15.y, r15.x, l(0.000000)
          max r15.x, r9.w, |r15.x|
          movc r15.x, r15.y, r15.x, -r15.x
          max r14.w, -r14.w, l(0.00000010)
          div r14.w, r15.x, r14.w
          min r14.z, |r14.w|, r14.z
          mov r15.x, r30.w
          mov r15.yz, r31.zzwz
          add r15.xyz, r26.xyzx, r15.xyzx
          mad r15.xyz, r12.xyzx, r14.zzzz, r15.xyzx
          dp3 r14.w, r15.xyzx, r15.xyzx
          sqrt r14.w, r14.w
          div r14.z, r14.z, r14.w
          add r14.z, r14.z, r14.z
          sqrt r14.z, r14.z
          mad r14.z, r7.z, l(5.000000), r14.z
          add r14.z, r14.z, l(-0.844800)
          mov r24.y, r28.z
          mov r24.z, r29.x
          dp3 r33.x, r15.xyzx, r24.xyzx
          mov r25.xy, r28.xwxx
          mov r25.z, r29.w
          dp3 r33.y, r15.xyzx, r25.xyzx
          mov r29.x, r28.y
          dp3 r33.z, r15.xyzx, r29.xyzx
          ubfe r14.w, l(9), l(16), r25.w
          utof r33.w, r14.w
          sample_l_indexable(texturecubearray)(float,float,float,float) r15.xyz, r33.xyzw, t8.xyzw, s2, r14.z
          dp3 r28.x, r26.xyzx, r24.xyzx
          dp3 r28.y, r26.xyzx, r25.xyzx
          dp3 r28.z, r26.xyzx, r29.xyzx
          mad_sat r26.xyz, r28.xyzx, r30.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
          mov r31.z, r32.x
          mad r26.xyz, r26.xyzx, r31.xyzx, r32.yzwy
          dp3 r33.x, r2.xyzx, r24.xyzx
          dp3 r33.y, r2.xyzx, r25.xyzx
          dp3 r33.z, r2.xyzx, r29.xyzx
          lt r24.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r33.xyzx
          movc r17.z, r24.x, l(0), l(0.500000)
          add r25.xyz, r17.xyzx, r26.xyzx
          sample_l_indexable(texture3d)(float,float,float,float) r25.xyz, r25.xyzx, t17.xyzw, s4, l(0.000000)
          mul r27.xzw, r33.xxyz, r33.xxyz
          mul r27.xzw, r8.wwww, r27.xxzw
          movc r18.z, r24.y, l(0), l(0.500000)
          add r24.xyw, r18.xyxz, r26.xyxz
          sample_l_indexable(texture3d)(float,float,float,float) r24.xyw, r24.xywx, t18.xywz, s4, l(0.000000)
          mul r24.xyw, r27.zzzz, r24.xyxw
          mad r24.xyw, r25.xyxz, r27.xxxx, r24.xyxw
          movc r19.z, r24.z, l(0), l(0.500000)
          add r25.xyz, r19.xyzx, r26.xyzx
          sample_l_indexable(texture3d)(float,float,float,float) r25.xyz, r25.xyzx, t19.xyzw, s4, l(0.000000)
          mad r24.xyz, r25.xyzx, r27.wwww, r24.xywx
          sample_l_indexable(texturecubearray)(float,float,float,float) r25.xyz, r33.xyzw, t8.xyzw, s2, l(6.000000)
          mul r26.xyz, r24.xyzx, r25.xyzx
          dp3 r14.z, r26.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r22.xyz, r24.xyzx, r25.xyzx, r22.xyzx
          mul r14.w, r10.y, r14.z
          mul r15.xyz, r8.wwww, r15.xyzx
          dp3 r8.w, r15.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r8.w, r10.y, r14.z, r8.w
          div r8.w, r14.w, r8.w
          mov r24.x, r22.w
          mov r24.yz, r23.xxyx
          mad r23.xyw, r15.yzyx, r8.wwww, r24.yzyx
          mov r22.w, r23.w
        endif 
      endif 
    endif 
  endloop 
  mov r20.xyzw, r22.xyzw
  mov r21.yzw, r23.xxyz
  iadd r11.y, r11.y, l(32)
endloop 
lt r6.y, r21.w, l(1.000000)
if_nz r6.y
  mov r14.xy, l(0,0,0,0)
  mov r15.w, l(0)
  mov r16.yz, l(0,0,1.000000,0)
  mov r17.xy, l(0,0,0,0)
  mov r18.x, l(1.000000)
  mov r19.xy, l(0,0,0,0)
  mov r22.xy, l(0,0,0,0)
  mov r23.x, r20.w
  mov r23.yzw, r21.yyzw
  mov r11.yzw, r20.xxyz
  mov r6.y, r21.w
  mov r8.z, l(0)
  loop 
    uge r8.w, r8.z, r10.z
    breakc_nz r8.w
    ushr r14.z, r8.z, l(5)
    iadd r15.xyz, r13.xyzx, r14.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r8.w, r15.xyzw, t7.yzwx
    ieq r10.w, r4.w, r8.z
    ubfe r13.w, r6.x, l(0), r8.w
    movc r8.w, r10.w, r13.w, r8.w
    iadd r10.w, r8.z, cb2[0].x
    mov r24.xyzw, r23.xyzw
    mov r15.xyz, r11.yzwy
    mov r13.w, r6.y
    mov r14.z, r8.w
    loop 
      breakc_z r14.z
      firstbit_lo r14.w, r14.z
      ishl r16.w, l(1), r14.w
      and r17.w, r14.z, r16.w
      if_nz r17.w
        xor r14.z, r14.z, r16.w
        iadd r16.w, r10.w, r14.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r25.xyzw, r16.w, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r26.xy, r16.w, l(16), t11.xyxx
        add r25.xyz, r25.xyzx, -v7.xyzx
        mov r26.z, r25.w
        lt r25.xyz, |r25.xyzx|, r26.zxyz
        and r16.w, r25.y, r25.x
        and r16.w, r25.z, r16.w
        if_nz r16.w
          iadd r14.w, r8.z, r14.w
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r14.w, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r18.zw, r14.w, l(96), t15.xxxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r14.w, l(116), t15.zwxy
          add r27.xyz, -r25.yzwy, v7.xyzx
          and r16.w, r26.w, l(0x0000ffff)
          ubfe r17.w, l(6), l(25), r26.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r16.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r16.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r16.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r16.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r16.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r16.w, l(80), t16.xyzw
          dp3 r19.w, r28.xyzx, r27.xyzx
          add_sat r19.w, r28.w, r19.w
          dp3 r22.w, r29.xyzx, r27.xyzx
          add_sat r22.w, r29.w, r22.w
          mul r19.w, r19.w, r22.w
          dp3 r22.w, r30.xyzx, r27.xyzx
          add_sat r22.w, r30.w, r22.w
          mul r19.w, r19.w, r22.w
          dp3 r22.w, r31.xyzx, r27.xyzx
          add_sat r22.w, r31.w, r22.w
          mul r19.w, r19.w, r22.w
          dp3 r22.w, r32.xyzx, r27.xyzx
          add_sat r22.w, r32.w, r22.w
          mul r19.w, r19.w, r22.w
          dp3 r22.w, r33.xyzx, r27.xyzx
          add_sat r22.w, r33.w, r22.w
          mul r16.x, r19.w, r22.w
          and r19.w, r18.z, l(1)
          movc r28.xy, r19.wwww, r16.xyxx, r16.zxzz
          mov r16.x, r18.z
          mov r29.xy, r28.xyxx
          mov r19.w, l(1)
          loop 
            ige r22.w, r19.w, r17.w
            breakc_nz r22.w
            iadd r22.w, r16.w, r19.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r22.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r22.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r22.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r22.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r22.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r22.w, l(80), t16.xyzw
            dp3 r22.w, r30.xyzx, r27.xyzx
            add_sat r22.w, r30.w, r22.w
            mul r22.w, r22.w, r29.x
            dp3 r25.w, r31.xyzx, r27.xyzx
            add_sat r25.w, r31.w, r25.w
            mul r22.w, r22.w, r25.w
            dp3 r25.w, r32.xyzx, r27.xyzx
            add_sat r25.w, r32.w, r25.w
            mul r22.w, r22.w, r25.w
            dp3 r25.w, r33.xyzx, r27.xyzx
            add_sat r25.w, r33.w, r25.w
            mul r22.w, r22.w, r25.w
            dp3 r25.w, r34.xyzx, r27.xyzx
            add_sat r25.w, r34.w, r25.w
            mul r22.w, r22.w, r25.w
            dp3 r25.w, r35.xyzx, r27.xyzx
            add_sat r25.w, r35.w, r25.w
            mul r29.x, r22.w, r25.w
            ushr r27.w, r16.x, l(2)
            ubfe r28.z, l(1), l(2), r16.x
            and r28.w, r27.w, l(2)
            max r29.z, r29.x, r29.y
            mad r22.w, -r22.w, r25.w, l(1.000000)
            mul r22.w, r22.w, r29.y
            movc r18.y, r28.w, r22.w, r29.z
            movc r29.xy, r28.zzzz, r29.xyxx, r18.xyxx
            iadd r19.w, r19.w, l(1)
            mov r16.x, r27.w
          endloop 
          add_sat r16.x, -r13.w, r29.y
          mul r16.w, r18.w, r16.x
          lt r17.w, l(0.000000), r16.w
          if_nz r17.w
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r14.w, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r14.w, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r14.w, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r14.w, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r14.w, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r14.w, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r14.w, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r14.w, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r14.w, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r14.w, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xy, r14.w, l(212), t15.xyxx
            mad r24.w, r16.x, r18.w, r24.w
            mul r14.w, r26.z, r16.w
            mov r26.z, r34.z
            dp3 r16.x, r12.xyzx, r26.xyzx
            dp3 r16.w, r27.xyzx, r26.xyzx
            add r16.w, -r34.w, r16.w
            ge r17.w, r16.w, l(0.000000)
            max r16.w, r9.w, |r16.w|
            movc r16.w, r17.w, r16.w, -r16.w
            max r16.x, -r16.x, l(0.00000010)
            div r16.x, r16.w, r16.x
            min r16.x, |r16.x|, l(131072.000000)
            mov r34.z, r35.z
            dp3 r16.w, r12.xyzx, r34.xyzx
            dp3 r17.w, r27.xyzx, r34.xyzx
            add r17.w, -r35.w, r17.w
            ge r18.y, r17.w, l(0.000000)
            max r17.w, r9.w, |r17.w|
            movc r17.w, r18.y, r17.w, -r17.w
            max r16.w, -r16.w, l(0.00000010)
            div r16.w, r17.w, r16.w
            min r16.x, |r16.w|, r16.x
            mov r35.z, r36.z
            dp3 r16.w, r12.xyzx, r35.xyzx
            dp3 r17.w, r27.xyzx, r35.xyzx
            add r17.w, -r36.w, r17.w
            ge r18.y, r17.w, l(0.000000)
            max r17.w, r9.w, |r17.w|
            movc r17.w, r18.y, r17.w, -r17.w
            max r16.w, -r16.w, l(0.00000010)
            div r16.w, r17.w, r16.w
            min r16.x, |r16.w|, r16.x
            mov r36.z, r37.z
            dp3 r16.w, r12.xyzx, r36.xyzx
            dp3 r17.w, r27.xyzx, r36.xyzx
            add r17.w, -r37.w, r17.w
            ge r18.y, r17.w, l(0.000000)
            max r17.w, r9.w, |r17.w|
            movc r17.w, r18.y, r17.w, -r17.w
            max r16.w, -r16.w, l(0.00000010)
            div r16.w, r17.w, r16.w
            min r16.x, |r16.w|, r16.x
            mov r37.z, r38.x
            dp3 r16.w, r12.xyzx, r37.xyzx
            dp3 r17.w, r27.xyzx, r37.xyzx
            add r17.w, -r38.y, r17.w
            ge r18.y, r17.w, l(0.000000)
            max r17.w, r9.w, |r17.w|
            movc r17.w, r18.y, r17.w, -r17.w
            max r16.w, -r16.w, l(0.00000010)
            div r16.w, r17.w, r16.w
            min r16.x, |r16.w|, r16.x
            mov r39.zw, r38.zzzw
            dp3 r16.w, r12.zxyz, r39.xzwx
            dp3 r17.w, r27.zxyz, r39.xzwx
            add r17.w, -r39.y, r17.w
            ge r18.y, r17.w, l(0.000000)
            max r17.w, r9.w, |r17.w|
            movc r17.w, r18.y, r17.w, -r17.w
            max r16.w, -r16.w, l(0.00000010)
            div r16.w, r17.w, r16.w
            min r16.x, |r16.w|, r16.x
            mov r26.x, r31.w
            mov r26.yz, r32.zzwz
            add r18.yzw, r27.xxyz, r26.xxyz
            mad r18.yzw, r12.xxyz, r16.xxxx, r18.yyzw
            dp3 r16.w, r18.yzwy, r18.yzwy
            sqrt r16.w, r16.w
            div r16.x, r16.x, r16.w
            add r16.x, r16.x, r16.x
            sqrt r16.x, r16.x
            mad r16.x, r7.z, l(5.000000), r16.x
            add r16.x, r16.x, l(-0.844800)
            mov r25.y, r28.z
            mov r25.z, r30.x
            dp3 r34.x, r18.yzwy, r25.xyzx
            mov r26.xy, r28.xwxx
            mov r26.z, r30.w
            dp3 r34.y, r18.yzwy, r26.xyzx
            mov r30.x, r28.y
            dp3 r34.z, r18.yzwy, r30.xyzx
            ubfe r16.w, l(9), l(16), r26.w
            utof r34.w, r16.w
            sample_l_indexable(texturecubearray)(float,float,float,float) r18.yzw, r34.xyzw, t8.wxyz, s2, r16.x
            dp3 r28.x, r27.xyzx, r25.xyzx
            dp3 r28.y, r27.xyzx, r26.xyzx
            dp3 r28.z, r27.xyzx, r30.xyzx
            mad_sat r27.xyz, r28.xyzx, r31.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
            mov r32.z, r33.x
            mad r27.xyz, r27.xyzx, r32.xyzx, r33.yzwy
            dp3 r34.x, r2.xyzx, r25.xyzx
            dp3 r34.y, r2.xyzx, r26.xyzx
            dp3 r34.z, r2.xyzx, r30.xyzx
            lt r25.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r34.xyzx
            movc r17.z, r25.x, l(0), l(0.500000)
            add r26.xyz, r17.xyzx, r27.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r26.xyz, r26.xyzx, t17.xyzw, s4, l(0.000000)
            mul r28.xyz, r34.xyzx, r34.xyzx
            mul r28.xyz, r14.wwww, r28.xyzx
            movc r19.z, r25.y, l(0), l(0.500000)
            add r25.xyw, r19.xyxz, r27.xyxz
            sample_l_indexable(texture3d)(float,float,float,float) r25.xyw, r25.xywx, t18.xywz, s4, l(0.000000)
            mul r25.xyw, r28.yyyy, r25.xyxw
            mad r25.xyw, r26.xyxz, r28.xxxx, r25.xyxw
            movc r22.z, r25.z, l(0), l(0.500000)
            add r26.xyz, r22.xyzx, r27.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r26.xyz, r26.xyzx, t19.xyzw, s4, l(0.000000)
            mad r25.xyz, r26.xyzx, r28.zzzz, r25.xywx
            sample_l_indexable(texturecubearray)(float,float,float,float) r26.xyz, r34.xyzw, t8.xyzw, s2, l(6.000000)
            mul r27.xyz, r25.xyzx, r26.xyzx
            dp3 r16.x, r27.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r15.xyz, r25.xyzx, r26.xyzx, r15.xyzx
            mul r16.w, r10.y, r16.x
            mul r18.yzw, r14.wwww, r18.yyzw
            dp3 r14.w, r18.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r14.w, r10.y, r16.x, r14.w
            div r14.w, r16.w, r14.w
            mad r24.xyz, r18.yzwy, r14.wwww, r24.xyzx
          endif 
        endif 
      endif 
    endloop 
    mov r23.xyzw, r24.xyzw
    mov r11.yzw, r15.xxyz
    iadd r8.z, r8.z, l(32)
  endloop 
  mov r21.xyzw, r23.zxyw
  mov r20.xyz, r11.yzwy
  mov r21.xyzw, r21.yzxw
else 
  mov r21.x, r20.w
endif 
max r4.w, r21.w, l(1.000000)
rcp r4.w, r4.w
mov_sat r21.w, r21.w
mul r10.yzw, r4.wwww, r20.xxyz
mul r11.yzw, r4.wwww, r21.xxyz
lt r6.x, r21.w, l(0.990000)
if_nz r6.x
  add r6.x, -r21.w, l(1.000000)
  mul r6.y, r6.x, cb2[19].x
  add r14.xyz, v7.xyzx, -cb2[35].xyzx
  mul r15.x, r14.x, cb2[35].w
  mul r15.yz, r14.yyzy, cb2[36].xxyx
  add_sat r14.xyz, r15.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mul r15.xy, r14.xyxx, cb2[36].zwzz
  mul r15.z, r14.z, cb2[37].x
  add r14.xyz, r15.xyzx, cb2[37].yzwy
  lt r15.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r2.xyzx
  movc r15.xyz, r15.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
  mov r15.w, l(0)
  add r16.xyz, r14.xyzx, r15.wwxw
  sample_l_indexable(texture3d)(float,float,float,float) r16.xyz, r16.xyzx, t17.xyzw, s4, l(0.000000)
  mul r17.xyz, r2.xyzx, r2.xyzx
  mul r17.xyz, r6.yyyy, r17.xyzx
  add r18.xyz, r14.xyzx, r15.wwyw
  sample_l_indexable(texture3d)(float,float,float,float) r18.xyz, r18.xyzx, t18.xyzw, s4, l(0.000000)
  mul r18.xyz, r17.yyyy, r18.xyzx
  mad r16.xyz, r16.xyzx, r17.xxxx, r18.xyzx
  add r14.xyz, r14.xyzx, r15.wwzw
  sample_l_indexable(texture3d)(float,float,float,float) r14.xyz, r14.xyzx, t19.xyzw, s4, l(0.000000)
  mad r14.xyz, r14.xyzx, r17.zzzz, r16.xyzx
  mov r2.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r15.xyz, r2.xyzw, t8.xyzw, s2, l(6.000000)
  mul r14.xyz, r14.xyzx, r15.xyzx
  dp3 r2.w, r14.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  mad r10.yzw, r20.xxyz, r4.wwww, r14.xxyz
  mov r12.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r14.xyz, r12.xyzw, t8.xyzw, s2, r7.w
  mad r4.w, cb2[19].x, r6.x, -r2.w
  mad r2.w, r7.y, r4.w, r2.w
  mad r11.yzw, r14.xxyz, r2.wwww, r11.yyzw
endif 
add r2.w, r0.w, r7.x
log r2.w, |r2.w|
mul r2.w, r2.w, r6.w
exp r2.w, r2.w
add r2.w, r0.w, r2.w
add_sat r2.w, r2.w, l(-1.000000)
mul r14.xyz, r0.wwww, r10.yzwy
mad r6.xy, r7.xyxx, l(0.984375, 0.984375, 0.000000, 0.000000), l(0.00781250, 0.00781250, 0.000000, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r6.xy, r6.xyxx, t5.xyzw, s2, l(0.000000)
mul r7.yzw, r2.wwww, r11.yyzw
mul r15.xyz, r6.xxxx, r7.zwyz
mul r7.yzw, r6.yyyy, r7.yyzw
sqrt r0.w, r6.w
mad r0.w, r0.w, l(0.500000), l(0.500000)
mul r0.w, r0.w, r0.w
mul r2.w, r0.w, l(0.500000)
mad r0.w, -r0.w, l(0.500000), l(1.000000)
mad r4.w, r7.x, r0.w, r2.w
mul r0.w, r0.w, r4.w
mul r2.w, r2.w, r4.w
dp3 r4.w, r2.xyzx, cb2[17].xyzx
mov_sat r6.x, r4.w
ge r6.y, l(0.000000), r6.x
if_nz r6.y
  mov r8.z, l(0)
endif 
if_z r6.y
  mul r10.yzw, v7.yyyy, cb2[29].xxyz
  mad r10.yzw, v7.xxxx, cb2[28].xxyz, r10.yyzw
  mad r10.yzw, v7.zzzz, cb2[30].xxyz, r10.yyzw
  add r10.yzw, r10.yyzw, cb2[31].xxyz
  add r6.y, r10.w, -cb2[17].w
  mad r6.y, -r6.y, l(0.00006104), l(1.000000)
  mov_sat r8.w, r6.y
  eq r8.w, r6.y, r8.w
  if_nz r8.w
    mov r8.w, l(0)
    mov r9.w, l(0)
    loop 
      ge r11.y, r8.w, l(3.000000)
      breakc_nz r11.y
      ftou r11.y, r8.w
      add r11.zw, r10.yyyz, -cb2[r11.y + 20].xxxy
      max r11.z, |r11.w|, |r11.z|
      mul r9.w, r11.z, cb2[r11.y + 20].z
      lt r11.y, r9.w, l(1.000000)
      if_nz r11.y
        break 
      endif 
      add r8.w, r8.w, l(1.000000)
      mov r9.w, l(0)
    endloop 
  else 
    mov r8.w, l(3.000000)
    mov r9.w, l(0)
  endif 
  ge r11.y, r8.w, l(3.000000)
  if_nz r11.y
    mul r16.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
    rcp r17.xz, r16.xxxx
    mov r17.y, -r17.z
    mad r16.xyz, r10.yzyy, r17.xyzx, r16.yzyy
    add r17.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r16.xyz, r16.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r16.xyz, r17.xyzx, r16.xyzx
    mul r11.zw, r16.zzzy, cb2[32].xxxx
    round_ni r11.zw, r11.zzzw
    mul r11.w, r11.w, cb2[27].x
    mad r11.z, r11.w, cb2[32].x, r11.z
    ftou r11.z, r11.z
    iadd r11.z, r11.z, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r11.w, r11.z, l(0), t23.xxxx
    and r12.w, r11.w, l(0x40000000)
    ishl r13.w, r11.w, l(2)
    if_z r12.w
      and r12.w, r11.w, l(0x01ffffff)
      iadd r17.x, r11.z, r12.w
      ushr r11.z, r11.w, l(25)
      utof r11.z, r11.z
      mul r16.xyz, r11.zzzz, r16.xyzx
      frc r16.xyz, r16.xyzx
      mul r16.xyz, r16.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
      ftou r16.xyz, r16.xyzx
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.z, r17.x, l(0), t23.xxxx
      ushr r11.zw, r16.zzzy, l(0, 0, 6, 6)
      and r12.w, r17.z, l(0xc0000000)
      iadd r16.w, r17.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.w, r16.w, l(0), t23.xxxx
      movc r11.w, r11.w, r17.z, r16.w
      ushr r16.w, r11.w, l(13)
      movc r11.z, r11.z, r16.w, r11.w
      and r11.z, r11.z, l(8191)
      iadd r18.x, r11.z, r17.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.x, l(0), t23.xxxx
      mov r17.y, l(0)
      mov r18.y, l(1)
      movc r18.xyz, r12.wwww, r17.xyzx, r18.xyzx
      movc r19.yz, r12.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r11.zw, r16.zzzy, r19.yyyy
      and r11.zw, r11.zzzw, l(0, 0, 1, 1)
      and r16.w, r18.z, l(0xc0000000)
      iadd r17.w, r18.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.w, r17.w, l(0), t23.xxxx
      movc r11.w, r11.w, r18.z, r17.w
      ushr r17.w, r11.w, l(13)
      movc r11.z, r11.z, r17.w, r11.w
      and r11.z, r11.z, l(8191)
      iadd r19.x, r11.z, r18.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.w, r19.x, l(0), t23.xxxx
      movc r18.xyz, r16.wwww, r18.xyzx, r19.xzwx
      movc r17.xyz, r12.wwww, r17.xyzx, r18.xyzx
      and r11.z, r17.z, l(0xc0000000)
      if_z r11.z
        iadd r11.z, -r17.y, l(6)
        ushr r11.zw, r16.zzzy, r11.zzzz
        or r12.w, r17.z, l(0x40000000)
        bfi r11.w, l(1), l(1), r11.w, l(0)
        bfi r11.z, l(1), l(0), r11.z, r11.w
        imul null, r11.z, r11.z, l(10)
        ushr r11.z, r12.w, r11.z
        and r11.z, r11.z, l(1023)
        iadd r18.x, r11.z, r17.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.w, r18.x, l(0), t23.xxxx
        iadd r18.yz, r17.yyyy, l(0, 1, 2, 0)
        iadd r11.z, -r18.y, l(6)
        ushr r11.zw, r16.zzzy, r11.zzzz
        and r12.w, r18.w, l(0xc0000000)
        or r16.w, r18.w, l(0x40000000)
        bfi r11.w, l(1), l(1), r11.w, l(0)
        bfi r11.z, l(1), l(0), r11.z, r11.w
        imul null, r11.z, r11.z, l(10)
        ushr r11.z, r16.w, r11.z
        and r11.z, r11.z, l(1023)
        iadd r19.x, r11.z, r18.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.z, r19.x, l(0), t23.xxxx
        mov r19.y, r18.z
        movc r19.xyz, r12.wwww, r18.xywx, r19.xyzx
        iadd r11.z, -r19.y, l(6)
        ushr r11.zw, r16.zzzy, r11.zzzz
        and r16.w, r19.z, l(0xc0000000)
        or r17.y, r19.z, l(0x40000000)
        bfi r11.w, l(1), l(1), r11.w, l(0)
        bfi r11.z, l(1), l(0), r11.z, r11.w
        imul null, r11.z, r11.z, l(10)
        ushr r11.z, r17.y, r11.z
        and r11.z, r11.z, l(1023)
        iadd r20.x, r11.z, r19.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.y, r20.x, l(0), t23.xxxx
        movc r11.zw, r16.wwww, r19.xxxz, r20.xxxy
        movc r17.xz, r12.wwww, r18.xxwx, r11.zzwz
      endif 
      and r11.z, r17.z, l(0xc0000000)
      if_z r11.z
        ubfe r11.w, l(14), l(15), r17.z
        utof r11.w, r11.w
        mul r11.w, r11.w, cb2[27].w
        mul r11.w, r11.w, l(0.00006104)
        and r17.yw, r17.zzzz, l(0, 0x00007fff, 0, 0x20000000)
        utof r12.w, r17.y
        mul r12.w, r12.w, cb2[27].w
        mul r12.w, r12.w, l(0.00003052)
        and r16.w, r16.y, l(3)
        iadd r16.w, r16.w, r17.x
        iadd r16.w, r16.w, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.w, r16.w, l(0), t23.xxxx
        bfi r18.xyz, l(2, 2, 1, 0), l(3, 1, 4, 0), r16.xyzx, l(0, 0, 0, 0)
        ushr r16.x, r16.w, r18.x
        and r16.x, r16.x, l(255)
        utof r16.x, r16.x
        mul r16.x, r12.w, r16.x
        mad r16.x, r16.x, l(0.00392157), r11.w
        iadd r16.y, r18.y, l(1)
        ubfe r16.z, l(1), l(1), r16.z
        iadd r16.y, r16.z, r16.y
        iadd r16.y, r16.y, r17.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.y, r16.y, l(0), t23.xxxx
        ushr r16.y, r16.y, r18.z
        and r16.y, r16.y, l(0x0000ffff)
        utof r16.y, r16.y
        mul r12.w, r12.w, r16.y
        mad r11.w, r12.w, l(0.00001526), r11.w
        movc r13.w, r17.w, r16.x, r11.w
      else 
        and r11.w, r17.z, l(0x80000000)
        iadd r12.w, r17.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r12.w, r12.w, l(0), t23.xxxx
        movc r11.w, r11.w, r12.w, l(0)
        ishl r12.w, r17.z, l(2)
        ushr r16.x, r11.w, l(16)
        f16tof32 r16.x, r16.x
        and r11.w, r11.w, l(0x0000ffff)
        f16tof32 r11.w, r11.w
        mad r12.w, r10.y, r16.x, r12.w
        mad r11.w, r10.z, r11.w, r12.w
        movc r13.w, r11.z, r11.w, r13.w
      endif 
    endif 
    mad r10.w, -cb2[27].z, l(2.000000), r10.w
    lt r10.w, r13.w, r10.w
    movc r8.z, r10.w, l(0), l(1.000000)
  endif 
  if_z r11.y
    if_z cb2[58].y
      ftou r10.w, r8.w
      add r11.yz, r10.yyzy, -cb2[r10.w + 20].xxyx
      mul r11.yz, r11.yyzy, cb2[r10.w + 20].zzzz
      mad r16.xy, r11.yzyy, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r10.w, cb2[26].y
      add r16.z, r8.w, r10.w
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.w, r16.xyzx, t13.xxxx, s13, r6.y
      sample_l_indexable(texture2darray)(float,float,float,float) r11.y, r16.xyzx, t31.yxzw, s0, l(0.000000)
      add r10.w, r10.w, r11.y
      add_sat r10.w, r10.w, l(-1.000000)
      mul r11.y, r10.w, r10.w
      mul r8.z, r10.w, r11.y
    endif 
    if_nz cb2[58].y
      mov r16.x, -r8.x
      ftou r10.w, r8.w
      add r8.w, r8.w, l(1.000000)
      min r8.w, r8.w, l(2.000000)
      ftou r8.w, r8.w
      add r9.w, -r9.w, l(1.000000)
      mul r9.w, r9.w, l(28.000000)
      ftou r9.w, r9.w
      add r11.yz, r10.yyzy, -cb2[r10.w + 20].xxyx
      mul r11.yz, r11.yyzy, cb2[r10.w + 20].zzzz
      mad r11.yz, r11.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      add r10.yz, r10.yyzy, -cb2[r8.w + 20].xxyx
      mul r10.yz, r10.yyzy, cb2[r8.w + 20].zzzz
      mad r10.yz, r10.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      mov r16.y, r9.x
      mov r16.z, r8.x
      mov r11.w, l(0)
      mov r12.w, l(0)
      loop 
        uge r13.w, r12.w, l(8)
        breakc_nz r13.w
        ult r13.w, r9.w, r12.w
        movc r17.xy, r13.wwww, r10.yzyy, r11.yzyy
        movc r16.w, r13.w, cb2[r8.w + 20].w, cb2[r10.w + 20].w
        movc r13.w, r13.w, r8.w, r10.w
        dp2 r18.x, icb[r12.w + 0].yxyy, r16.xyxx
        dp2 r18.y, icb[r12.w + 0].yxyy, r16.yzyy
        mad r17.xy, r18.xyxx, r16.wwww, r17.xyxx
        iadd r13.w, r13.w, cb2[26].y
        utof r17.z, r13.w
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r13.w, r17.xyzx, t13.xxxx, s13, r6.y
        sample_l_indexable(texture2darray)(float,float,float,float) r16.w, r17.xyzx, t31.yzwx, s0, l(0.000000)
        add r13.w, r13.w, r16.w
        add_sat r13.w, r13.w, l(-1.000000)
        mad r11.w, r13.w, l(0.125000), r11.w
        iadd r12.w, r12.w, l(1)
      endloop 
      mul r6.y, r11.w, r11.w
      mul r8.z, r11.w, r6.y
    endif 
  endif 
endif 
lt r6.y, l(0.000000), r6.x
if_nz r6.y
  lt r6.y, l(0.000000), r8.z
  if_nz r6.y
    mul r6.y, r6.z, cb2[18].w
    mul r6.y, r6.x, r6.y
    if_nz cb2[23].x
      add r16.xyz, v7.xyzx, cb1[24].xyzx
      mov r16.w, l(1.000000)
      dp4 r8.w, cb2[24].xyzw, r16.xyzw
      dp4 r9.w, cb2[25].xyzw, r16.xyzw
      frc r16.x, r8.w
      frc r16.y, r9.w
      iadd r8.w, l(-1), cb2[23].x
      utof r16.z, r8.w
      sample_l_indexable(texture2darray)(float,float,float,float) r10.yzw, r16.xyzx, t20.wxyz, s2, l(0.000000)
      add r10.yzw, r10.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
      mad r10.yzw, cb2[23].yyyy, r10.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
      mul r10.yzw, r10.yyzw, cb2[18].xxyz
    else 
      mov r10.yzw, cb2[18].xxyz
    endif 
    ushr r8.w, cb2[53].x, l(16)
    ult r9.w, l(0), r8.w
    and r9.w, r5.w, r9.w
    if_nz r9.w
      iadd r8.w, r8.w, cb2[0].x
      iadd r8.w, r8.w, l(-1)
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r9.w, r8.w, l(52), t12.xxxx
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r8.w, l(68), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r8.w, l(84), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r8.w, l(132), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.xyzw, r8.w, l(148), t12.xyzw
      mad r11.y, |r4.w|, l(-0.200000), l(0.400000)
      mad r20.xyz, r2.xyzx, r11.yyyy, v7.xyzx
      mov r20.w, l(1.000000)
      dp4 r16.x, r16.xyzw, r20.xyzw
      dp4 r16.y, r17.xyzw, r20.xyzw
      mad r11.yz, r16.xxyx, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      add r11.yz, r19.zzwz, r11.yyzy
      mul r11.yz, r19.xxyx, r11.yyzy
      div r16.xy, r9.wwww, r18.xzxx
      add r16.zw, -r16.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
      ge r16.zw, r11.yyyz, r16.zzzw
      ge r16.xy, r16.xyxx, r11.yzyy
      or r16.xy, r16.xyxx, r16.zwzz
      or r11.w, r16.y, r16.x
      if_z r11.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r11.w, r8.w, l(28), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r8.w, l(100), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xy, r8.w, l(164), t12.xyxx
        dp4 r8.w, r16.xyzw, r20.xyzw
        mov_sat r11.yz, r11.yyzy
        mad r16.xy, r11.yzyy, r18.xzxx, r18.ywyy
        add r8.w, r17.x, r8.w
        div r8.w, r8.w, r17.y
        max r8.w, r8.w, l(0.00006104)
        and r11.y, r11.w, l(0x0000ffff)
        if_nz cb2[58].y
          mov r17.x, -r8.x
          utof r18.z, r11.y
          mov r17.y, r9.x
          mov r17.z, r8.x
          mov r11.zw, l(0,0,0,0)
          loop 
            ige r12.w, r11.w, l(8)
            breakc_nz r12.w
            dp2 r19.x, icb[r11.w + 0].yxyy, r17.xyxx
            dp2 r19.y, icb[r11.w + 0].yxyy, r17.yzyy
            mad r18.xy, r19.xyxx, r9.wwww, r16.xyxx
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.w, r18.xyzx, t9.xxxx, s13, r8.w
            mad r11.z, r12.w, l(0.125000), r11.z
            iadd r11.w, r11.w, l(1)
          endloop 
        else 
          utof r16.z, r11.y
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r11.z, r16.xyzx, t9.xxxx, s13, r8.w
        endif 
        mul r8.w, r11.z, r11.z
        mul r8.w, r11.z, r8.w
      else 
        mov r8.w, l(1.000000)
      endif 
      mul r8.z, r8.w, r8.z
    else 
      and r8.w, cb2[53].x, l(0x0000ffff)
      ult r9.w, l(0), r8.w
      not r11.y, r5.w
      and r9.w, r9.w, r11.y
      if_nz r9.w
        iadd r8.w, r8.w, cb2[0].x
        iadd r8.w, r8.w, l(-1)
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r9.w, r8.w, l(52), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r8.w, l(68), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r8.w, l(84), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r8.w, l(132), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.xyzw, r8.w, l(148), t12.xyzw
        mad r11.y, |r4.w|, l(-0.200000), l(0.400000)
        mad r20.xyz, r2.xyzx, r11.yyyy, v7.xyzx
        mov r20.w, l(1.000000)
        dp4 r16.x, r16.xyzw, r20.xyzw
        dp4 r16.y, r17.xyzw, r20.xyzw
        mad r11.yz, r16.xxyx, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
        add r11.yz, r19.zzwz, r11.yyzy
        mul r11.yz, r19.xxyx, r11.yyzy
        div r16.xy, r9.wwww, r18.xzxx
        add r16.zw, -r16.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
        ge r16.zw, r11.yyyz, r16.zzzw
        ge r16.xy, r16.xyxx, r11.yzyy
        or r16.xy, r16.xyxx, r16.zwzz
        or r11.w, r16.y, r16.x
        if_z r11.w
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r11.w, r8.w, l(28), t12.xxxx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r8.w, l(100), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xy, r8.w, l(164), t12.xyxx
          dp4 r8.w, r16.xyzw, r20.xyzw
          mov_sat r11.yz, r11.yyzy
          mad r16.xy, r11.yzyy, r18.xzxx, r18.ywyy
          add r8.w, r17.x, r8.w
          div r8.w, r8.w, r17.y
          max r8.w, r8.w, l(0.00006104)
          and r11.y, r11.w, l(0x0000ffff)
          if_nz cb2[58].y
            mov r17.x, -r8.x
            utof r18.z, r11.y
            mov r17.y, r9.x
            mov r17.z, r8.x
            mov r11.zw, l(0,0,0,0)
            loop 
              ige r12.w, r11.w, l(8)
              breakc_nz r12.w
              dp2 r19.x, icb[r11.w + 0].yxyy, r17.xyxx
              dp2 r19.y, icb[r11.w + 0].yxyy, r17.yzyy
              mad r18.xy, r19.xyxx, r9.wwww, r16.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.w, r18.xyzx, t9.xxxx, s13, r8.w
              mad r11.z, r12.w, l(0.125000), r11.z
              iadd r11.w, r11.w, l(1)
            endloop 
          else 
            utof r16.z, r11.y
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r11.z, r16.xyzx, t9.xxxx, s13, r8.w
          endif 
          mul r8.w, r11.z, r11.z
          mul r8.w, r11.z, r8.w
        else 
          mov r8.w, l(1.000000)
        endif 
        mul r8.z, r8.w, r8.z
      endif 
    endif 
    mad r8.w, -r7.x, l(0.500000), l(1.000000)
    mad r8.w, -r6.x, r8.w, l(1.000000)
    mul r8.w, r8.w, r8.w
    mad r8.w, -r8.w, l(0.620000), l(0.620000)
    add r8.w, -r6.x, r8.w
    mad r8.w, r6.w, r8.w, r6.x
    mul r8.w, r8.z, r8.w
    lt r4.w, l(0.000000), r4.w
    mad r16.xyz, r8.wwww, r10.yzwy, r14.xyzx
    mad r11.yzw, -v7.xxyz, r1.wwww, cb2[17].xxyz
    dp3 r1.w, r11.yzwy, r11.yzwy
    rsq r1.w, r1.w
    mul r11.yzw, r1.wwww, r11.yyzw
    dp3 r1.w, r11.yzwy, r4.xyzx
    dp3 r8.w, r2.xyzx, r11.yzwy
    mad r9.w, |r8.w|, r6.z, -|r8.w|
    mad r8.w, |r8.w|, r9.w, l(1.000000)
    mad r6.x, r6.x, r0.w, r2.w
    mul r8.w, r8.w, r8.w
    mul r6.x, r6.x, r8.w
    rcp r6.x, r6.x
    mul r6.x, r6.y, r6.x
    mul r6.x, r6.x, r8.z
    mul r6.x, r6.x, l(0.250000)
    mad r11.yzw, r6.xxxx, r10.yyzw, r7.yyzw
    add_sat r1.w, -r1.w, l(1.000000)
    mul r6.y, r1.w, r1.w
    mul r6.y, r6.y, r6.y
    mul r1.w, r1.w, r6.y
    mul r1.w, r1.w, r6.x
    mad r17.xyz, r1.wwww, r10.zwyz, r15.xyzx
    mov r16.w, r17.z
    mov r14.w, r15.z
    movc r14.xyzw, r4.wwww, r16.xyzw, r14.xyzw
    mov r17.zw, r11.yyyz
    mov r15.zw, r7.yyyz
    movc r16.xyzw, r4.wwww, r17.xyzw, r15.xyzw
    movc r7.w, r4.w, r11.w, r7.w
    mov r15.z, r14.w
    mov r15.xy, r16.xyxx
    mov r7.yz, r16.zzwz
  endif 
endif 
mov r16.x, -r8.x
not r1.w, r5.w
mad r4.w, -r7.x, l(0.500000), l(1.000000)
mov r17.xy, l(0,0,0,0)
mov r18.w, l(0)
mov r19.xyz, v7.xyzx
mov r19.w, l(1.000000)
mov r20.w, l(1.000000)
mov r16.z, r8.x
mov r21.w, l(1.000000)
mov r22.z, l(1.000000)
mov r23.w, l(1.000000)
mov r16.yw, r9.xxxx
mov r8.y, r16.w
mov r24.w, l(1.000000)
mov r9.y, r16.x
mov r9.z, r8.x
mov r25.w, l(1.000000)
mov r26.x, r9.x
mov r26.y, r16.x
mov r26.z, r8.x
mov r27.x, r9.x
mov r27.y, r16.x
mov r27.z, r8.x
mov r28.x, r9.x
mov r28.y, r16.x
mov r28.z, r8.x
mov r10.yzw, r14.xxyz
mov r29.xyz, r15.zxyz
mov r30.xyz, r7.yzwy
mov r6.x, cb2[58].y
mov r6.y, l(0)
loop 
  uge r7.x, r6.y, cb2[0].x
  breakc_nz r7.x
  ushr r17.z, r6.y, l(5)
  iadd r18.xyz, r13.xyzx, r17.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r7.x, r18.xyzw, t6.xyzw
  mov r11.yzw, r10.yyzw
  mov r18.xyz, r29.xyzx
  mov r31.xyz, r30.xyzx
  mov r8.z, r6.x
  mov r8.w, r7.x
  loop 
    breakc_z r8.w
    firstbit_lo r9.w, r8.w
    ishl r12.w, l(1), r9.w
    and r13.w, r8.w, r12.w
    if_nz r13.w
      xor r8.w, r8.w, r12.w
      iadd r9.w, r6.y, r9.w
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r32.xyzw, r9.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r33.xy, r9.w, l(16), t11.xyxx
      add r32.xyz, r32.xyzx, -v7.xyzx
      mov r33.z, r32.w
      lt r32.xyz, |r32.xyzx|, r33.zxyz
      and r12.w, r32.y, r32.x
      and r12.w, r32.z, r12.w
      if_nz r12.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r9.w, l(0), t12.wxyz
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r9.w, l(16), t12.zxyw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r9.w, l(32), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r9.w, l(48), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r9.w, l(64), t12.yzwx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r9.w, l(80), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r9.w, l(96), t12.yzwx
        ubfe r12.w, l(3), l(24), r33.w
        switch r12.w
          case l(4)
          lt r12.w, l(0.000000), r38.x
          mov r39.xy, r37.zwzz
          mov r39.z, r38.w
          mad r40.xyz, -r39.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r32.yzwy
          add r41.xyz, r40.xyzx, -v7.xyzx
          dp3 r13.w, r39.xyzx, r41.xyzx
          div_sat r14.w, -r13.w, r38.x
          mad r42.xyz, r14.wwww, r39.xyzx, r40.xyzx
          movc r42.xyz, r12.wwww, r42.xyzx, r32.yzwy
          add r42.xyz, r42.xyzx, -v7.xyzx
          dp3 r15.w, r42.xyzx, r42.xyzx
          rsq r17.z, r15.w
          mul r42.xyz, r17.zzzz, r42.xyzx
          dp3 r17.z, r2.xyzx, r42.xyzx
          mov_sat r17.w, r17.z
          lt r22.w, l(0.000000), r17.w
          if_nz r22.w
            sqrt r22.w, r15.w
            mul r26.w, r35.x, r35.x
            div r15.w, r26.w, r15.w
            min r15.w, r15.w, l(1.000000)
            mad_sat r42.xy, r22.wwww, r34.xzxx, r34.ywyy
            mul r42.zw, r42.xxxy, r42.xxxy
            mad r42.xy, r42.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
            mul r42.xy, r42.xyxx, r42.zwzz
            mul r15.w, r15.w, r42.x
            mul r15.w, r42.y, r15.w
            lt r22.w, l(0.000000), r15.w
            if_nz r22.w
              ubfe r22.w, l(3), l(27), r33.w
              ine r22.w, r22.w, l(1)
              if_nz r22.w
                mad r22.w, |r17.z|, l(-0.200000), l(0.400000)
                mad r42.xyz, r2.xyzx, r22.wwww, v7.xyzx
                add r42.xyz, -r36.xyzx, r42.xyzx
                max r22.w, |r42.z|, |r42.y|
                max r22.w, r22.w, |r42.x|
                div r22.w, r37.x, r22.w
                add r22.w, r37.y, r22.w
                dp3 r26.w, r42.xyzx, r42.xyzx
                rsq r26.w, r26.w
                max r22.w, r22.w, l(0.00006104)
                and r27.w, r33.w, l(0x0000ffff)
                utof r43.w, r27.w
                mov r27.w, l(0)
                mov r28.w, l(0)
                loop 
                  ige r29.w, r28.w, l(8)
                  breakc_nz r29.w
                  dp2 r44.y, icb[r28.w + 0].yxyy, r16.xyxx
                  dp2 r44.z, icb[r28.w + 0].yxyy, r16.yzyy
                  mul r44.yz, r35.yyyy, r44.yyzy
                  mul r44.x, r11.x, r44.y
                  mul r44.w, r10.x, r44.y
                  mad r43.xyz, r42.xyzx, r26.wwww, r44.xzwx
                  sample_c_lz_indexable(texturecubearray)(float,float,float,float) r29.w, r43.xyzw, t10.xxxx, s13, r22.w
                  mad r27.w, r29.w, l(0.125000), r27.w
                  iadd r28.w, r28.w, l(1)
                endloop 
              else 
                mov r27.w, l(1.000000)
              endif 
              mul r15.w, r15.w, r27.w
              lt r22.w, l(0.000000), r15.w
              if_nz r22.w
                mul r22.w, r6.z, r33.x
                mul r22.w, r22.w, l(0.250000)
                dp3 r26.w, r39.xyzx, r12.xyzx
                dp3 r28.w, r12.xyzx, r41.xyzx
                mad r29.w, -r26.w, r26.w, r38.x
                mad r13.w, r26.w, r28.w, -r13.w
                div_sat r13.w, r13.w, r29.w
                div r26.w, r29.w, r38.x
                mul r26.w, r26.w, l(10.000000)
                min r26.w, r26.w, l(1.000000)
                add r13.w, -r14.w, r13.w
                mad r13.w, r26.w, r13.w, r14.w
                mad r39.xyz, r13.wwww, r39.xyzx, r40.xyzx
                movc r39.xyz, r12.wwww, r39.xyzx, r32.yzwy
                add r39.xyz, r39.xyzx, -v7.xyzx
                dp3 r12.w, r39.xyzx, r39.xyzx
                rsq r12.w, r12.w
                mul r40.xyz, r12.wwww, r39.xyzx
                ubfe r13.w, l(4), l(16), r33.w
                ult r14.w, l(0), r13.w
                and r14.w, r5.w, r14.w
                if_nz r14.w
                  iadd r13.w, r13.w, cb2[0].x
                  iadd r13.w, r13.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.w, r13.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r13.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r13.w, l(116), t12.xyzw
                  mad r26.w, |r17.z|, l(-0.200000), l(0.400000)
                  mad r20.xyz, r2.xyzx, r26.wwww, v7.xyzx
                  dp4 r26.w, r41.xyzw, r20.xyzw
                  dp4 r28.w, r42.xyzw, r20.xyzw
                  lt r29.w, r28.w, r26.w
                  if_z r29.w
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r13.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r13.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r13.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r13.w, l(148), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xy, r13.w, l(164), t12.xyxx
                    dp4 r41.x, r41.xyzw, r20.xyzw
                    dp4 r41.y, r42.xyzw, r20.xyzw
                    div r20.xy, r41.xyxx, r28.wwww
                    mad r20.xy, r20.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r20.xy, r44.zwzz, r20.xyxx
                    mul r20.xy, r44.xyxx, r20.xyxx
                    div r41.xy, r14.wwww, r43.xzxx
                    add r41.zw, -r41.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                    ge r41.zw, r20.xxxy, r41.zzzw
                    ge r41.xy, r41.xyxx, r20.xyxx
                    or r41.xy, r41.xyxx, r41.zwzz
                    or r20.z, r41.y, r41.x
                    mov_sat r20.xy, r20.xyxx
                    mad r41.xy, r20.xyxx, r43.xzxx, r43.ywyy
                    mul r20.x, r28.w, r45.y
                    mad r20.y, r45.x, r28.w, r26.w
                    div r20.x, r20.y, r20.x
                  else 
                    mov r20.z, l(-1)
                  endif 
                  or r20.y, r29.w, r20.z
                  if_z r20.y
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.w, r13.w, l(28), t12.xxxx
                    max r20.x, r20.x, l(0.00006104)
                    and r13.w, r13.w, l(0x0000ffff)
                    if_nz r8.z
                      utof r42.z, r13.w
                      mov r20.yz, l(0,0,0,0)
                      loop 
                        ige r26.w, r20.z, l(8)
                        breakc_nz r26.w
                        dp2 r43.x, icb[r20.z + 0].yxyy, r16.xwxx
                        dp2 r43.y, icb[r20.z + 0].xyxx, r8.xyxx
                        mad r42.xy, r43.xyxx, r14.wwww, r41.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r26.w, r42.xyzx, t9.xxxx, s13, r20.x
                        mad r20.y, r26.w, l(0.125000), r20.y
                        iadd r20.z, r20.z, l(1)
                      endloop 
                    else 
                      utof r41.z, r13.w
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r20.y, r41.xyzx, t9.xxxx, s13, r20.x
                    endif 
                    mul r13.w, r20.y, r20.y
                    mul r13.w, r20.y, r13.w
                  else 
                    mov r13.w, l(1.000000)
                  endif 
                  mul r15.w, r13.w, r15.w
                else 
                  ubfe r13.w, l(4), l(20), r33.w
                  ult r14.w, l(0), r13.w
                  and r14.w, r1.w, r14.w
                  if_nz r14.w
                    iadd r13.w, r13.w, cb2[0].x
                    iadd r13.w, r13.w, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.w, r13.w, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r13.w, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r13.w, l(116), t12.xyzw
                    mad r20.x, |r17.z|, l(-0.200000), l(0.400000)
                    mad r21.xyz, r2.xyzx, r20.xxxx, v7.xyzx
                    dp4 r20.x, r41.xyzw, r21.xyzw
                    dp4 r20.z, r42.xyzw, r21.xyzw
                    lt r26.w, r20.z, r20.x
                    if_z r26.w
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r13.w, l(68), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r13.w, l(84), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r13.w, l(132), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r13.w, l(148), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xy, r13.w, l(164), t12.xyxx
                      dp4 r41.x, r41.xyzw, r21.xyzw
                      dp4 r41.y, r42.xyzw, r21.xyzw
                      div r21.xy, r41.xyxx, r20.zzzz
                      mad r21.xy, r21.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                      add r21.xy, r44.zwzz, r21.xyxx
                      mul r21.xy, r44.xyxx, r21.xyxx
                      div r41.xy, r14.wwww, r43.xzxx
                      add r41.zw, -r41.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                      ge r41.zw, r21.xxxy, r41.zzzw
                      ge r41.xy, r41.xyxx, r21.xyxx
                      or r41.xy, r41.xyxx, r41.zwzz
                      or r21.z, r41.y, r41.x
                      mov_sat r21.xy, r21.xyxx
                      mad r41.xy, r21.xyxx, r43.xzxx, r43.ywyy
                      mul r21.x, r20.z, r45.y
                      mad r20.x, r45.x, r20.z, r20.x
                      div r20.x, r20.x, r21.x
                    else 
                      mov r21.z, l(-1)
                    endif 
                    or r20.z, r26.w, r21.z
                    if_z r20.z
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.w, r13.w, l(28), t12.xxxx
                      max r20.x, r20.x, l(0.00006104)
                      and r13.w, r13.w, l(0x0000ffff)
                      if_nz r8.z
                        utof r21.z, r13.w
                        mov r20.z, l(0)
                        mov r26.w, l(0)
                        loop 
                          ige r28.w, r26.w, l(8)
                          breakc_nz r28.w
                          dp2 r42.x, icb[r26.w + 0].xyxx, r9.xyxx
                          dp2 r42.y, icb[r26.w + 0].yxyy, r9.xzxx
                          mad r21.xy, r42.xyxx, r14.wwww, r41.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.x, r21.xyzx, t9.xxxx, s13, r20.x
                          mad r20.z, r21.x, l(0.125000), r20.z
                          iadd r26.w, r26.w, l(1)
                        endloop 
                      else 
                        utof r41.z, r13.w
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r20.z, r41.xyzx, t9.xxxx, s13, r20.x
                      endif 
                      mul r13.w, r20.z, r20.z
                      mul r13.w, r20.z, r13.w
                    else 
                      mov r13.w, l(1.000000)
                    endif 
                    mul r15.w, r13.w, r15.w
                  endif 
                endif 
                mad r13.w, -r17.w, r4.w, l(1.000000)
                mul r13.w, r13.w, r13.w
                mad r13.w, -r13.w, l(0.620000), l(0.620000)
                add r13.w, -r17.w, r13.w
                mad r13.w, r6.w, r13.w, r17.w
                mul r13.w, r15.w, r13.w
                mov r33.x, r32.x
                lt r14.w, l(0.000000), r17.z
                mad r21.xyz, r13.wwww, r33.xyzx, r11.yzwy
                dp3_sat r13.w, r2.xyzx, r40.xyzx
                mad r39.xyz, r39.xyzx, r12.wwww, r4.xyzx
                dp3 r12.w, r39.xyzx, r39.xyzx
                rsq r12.w, r12.w
                mul r39.xyz, r12.wwww, r39.xyzx
                dp3 r12.w, r39.xyzx, r4.xyzx
                dp3 r17.z, r2.xyzx, r39.xyzx
                mad r17.w, |r17.z|, r6.z, -|r17.z|
                mad r17.z, |r17.z|, r17.w, l(1.000000)
                mad r17.w, r13.w, r0.w, r2.w
                mul r17.z, r17.z, r17.z
                mul r17.z, r17.w, r17.z
                rcp r17.z, r17.z
                mul r13.w, r22.w, r13.w
                mul r13.w, r13.w, r17.z
                mul r13.w, r15.w, r13.w
                mad r39.xyz, r13.wwww, r33.xyzx, r31.xyzx
                add_sat r12.w, -r12.w, l(1.000000)
                mul r15.w, r12.w, r12.w
                mul r15.w, r15.w, r15.w
                mul r12.w, r12.w, r15.w
                mul r12.w, r12.w, r13.w
                mad r40.xyz, r12.wwww, r33.xyzx, r18.xyzx
                movc r11.yzw, r14.wwww, r21.xxyz, r11.yyzw
                movc r18.xyz, r14.wwww, r40.xyzx, r18.xyzx
                movc r31.xyz, r14.wwww, r39.xyzx, r31.xyzx
              endif 
            endif 
          endif 
          break 
          case l(2)
          mov r21.xy, r35.zwzz
          mov r21.z, r36.w
          add r21.xyz, r21.xyzx, -v7.xyzx
          dp3 r12.w, r21.xyzx, r21.xyzx
          rsq r12.w, r12.w
          mul r39.xyz, r12.wwww, r21.xyzx
          dp3 r13.w, r2.xyzx, r39.xyzx
          mov_sat r14.w, r13.w
          lt r15.w, l(0.000000), r14.w
          if_nz r15.w
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r9.w, l(112), t12.yzwx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r9.w, l(128), t12.zxyw
            mov r41.xyz, r39.xyzx
            mov r41.w, r40.y
            dp4 r15.w, r41.xyzw, r19.xyzw
            lt r17.z, r15.w, l(1.000000)
            if_nz r17.z
              mov r42.xyz, l(1.000000,1.000000,1.000000,0)
              mov r17.z, l(0)
            else 
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r9.w, l(172), t12.yzwx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r9.w, l(188), t12.wxyz
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xyzw, r9.w, l(204), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.w, r9.w, l(236), t12.xxxx
              add r46.xyz, r32.yzwy, -v7.xyzx
              mul r20.x, r35.x, r35.x
              dp3 r22.w, r46.xyzx, r46.xyzx
              div r20.x, r20.x, r22.w
              min r20.x, r20.x, l(1.000000)
              mad_sat r34.xy, r15.wwww, r34.xzxx, r34.ywyy
              mul r34.zw, r34.xxxy, r34.xxxy
              mad r34.xy, r34.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
              mul r34.xy, r34.xyxx, r34.zwzz
              mul r20.x, r20.x, r34.x
              mul r20.x, r34.y, r20.x
              mov r36.w, r37.x
              dp4 r34.x, r36.xyzw, r19.xyzw
              mov r46.xyz, r37.yzwy
              mov r46.w, r38.w
              dp4 r34.y, r46.xyzw, r19.xyzw
              div r22.xy, r34.xyxx, r15.wwww
              lt r15.w, r43.w, l(0.00048828)
              if_nz r15.w
                mov r44.y, r45.x
                mad_sat r34.xy, |r22.xyxx|, r44.zwzz, r44.xyxx
                mul r34.zw, r34.xxxy, r34.xxxy
                mad r34.xy, r34.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
                mul r34.xy, r34.xyxx, r34.zwzz
                mul r15.w, r34.y, r34.x
              else 
                mov r43.w, r44.y
                mul_sat r34.xyzw, |r22.yyxx|, r43.xyzw
                log r34.xyzw, r34.xyzw
                mul r34.xyzw, r34.xyzw, r44.xxxx
                exp r34.xyzw, r34.xyzw
                add r34.xy, r34.zwzz, r34.xyxx
                log r34.xy, r34.xyxx
                mul r34.xy, r34.xyxx, r45.xxxx
                exp r34.xy, r34.xyxx
                mul r22.w, r34.x, r44.z
                mad r26.w, r44.w, r34.y, l(-1.000000)
                mad r22.w, r44.w, r34.y, -r22.w
                div_sat r22.w, r26.w, r22.w
                mul r26.w, r22.w, r22.w
                mad r22.w, r22.w, l(-2.000000), l(3.000000)
                mul r15.w, r22.w, r26.w
              endif 
              mul r17.z, r15.w, r20.x
              and r15.w, r17.w, l(255)
              if_nz r15.w
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyz, r9.w, l(220), t12.xyzx
                dp3 r17.w, r45.yzwy, r22.xyzx
                dp3 r20.x, r34.xyzx, r22.xyzx
                frc r34.x, r17.w
                frc r34.y, r20.x
                iadd r15.w, r15.w, l(-1)
                utof r34.z, r15.w
                sample_l_indexable(texture2darray)(float,float,float,float) r42.xyz, r34.xyzx, t20.xyzw, s2, l(0.000000)
              else 
                mov r42.xyz, l(1.000000,1.000000,1.000000,0)
              endif 
            endif 
            mov r32.yz, r33.yyzy
            mul r22.xyw, r42.xyxz, r32.xyxz
            lt r15.w, l(0.000000), r17.z
            if_nz r15.w
              ubfe r15.w, l(3), l(27), r33.w
              ine r15.w, r15.w, l(1)
              if_nz r15.w
                mad r15.w, |r13.w|, l(-0.200000), l(0.400000)
                mad r23.xyz, r2.xyzx, r15.wwww, v7.xyzx
                mov r39.xyz, r38.xyzx
                dp4 r15.w, r39.xyzw, r23.xyzw
                dp4 r17.w, r41.xyzw, r23.xyzw
                ge r20.x, r17.w, r15.w
                if_nz r20.x
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.y, r9.w, l(144), t12.xxxx
                  mov r36.w, r37.x
                  dp4 r32.x, r36.xyzw, r23.xyzw
                  mov r38.xyz, r37.yzwy
                  dp4 r32.y, r38.xyzw, r23.xyzw
                  div r23.xy, r32.xyxx, r17.wwww
                  mad_sat r23.xy, r23.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  mad r23.xy, r23.xyxx, r40.zwzz, r40.xyxx
                  div r9.w, r15.w, r17.w
                  max r9.w, r9.w, l(0.00006104)
                  and r15.w, r33.w, l(0x0000ffff)
                  if_nz r8.z
                    utof r32.z, r15.w
                    mov r17.w, l(0)
                    mov r20.x, l(0)
                    loop 
                      ige r26.w, r20.x, l(8)
                      breakc_nz r26.w
                      dp2 r34.x, icb[r20.x + 0].xyxx, r26.xyxx
                      dp2 r34.y, icb[r20.x + 0].yxyy, r26.xzxx
                      mad r32.xy, r34.xyxx, r35.yyyy, r23.xyxx
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r26.w, r32.xyzx, t9.xxxx, s13, r9.w
                      mad r17.w, r26.w, l(0.125000), r17.w
                      iadd r20.x, r20.x, l(1)
                    endloop 
                  else 
                    utof r23.z, r15.w
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r17.w, r23.xyzx, t9.xxxx, s13, r9.w
                  endif 
                  mul r9.w, r17.w, r17.w
                  mul r9.w, r17.w, r9.w
                else 
                  mov r9.w, l(1.000000)
                endif 
              else 
                mov r9.w, l(1.000000)
              endif 
              mul r9.w, r9.w, r17.z
              lt r15.w, l(0.000000), r9.w
              if_nz r15.w
                mul r15.w, r6.z, r33.x
                mul r15.w, r14.w, r15.w
                ubfe r17.z, l(4), l(16), r33.w
                ult r20.x, l(0), r17.z
                and r20.x, r5.w, r20.x
                if_nz r20.x
                  iadd r17.z, r17.z, cb2[0].x
                  iadd r17.z, r17.z, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r20.x, r17.z, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r17.z, l(68), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r17.z, l(84), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r17.z, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r17.z, l(116), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r17.z, l(132), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r17.z, l(148), t12.xyzw
                  mad r23.x, |r13.w|, l(-0.200000), l(0.400000)
                  mad r24.xyz, r2.xyzx, r23.xxxx, v7.xyzx
                  dp4 r23.x, r32.xyzw, r24.xyzw
                  dp4 r23.y, r34.xyzw, r24.xyzw
                  dp4 r23.z, r35.xyzw, r24.xyzw
                  dp4 r24.x, r36.xyzw, r24.xyzw
                  lt r24.y, r24.x, r23.z
                  div r23.xy, r23.xyxx, r24.xxxx
                  mad r23.xy, r23.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r23.xy, r38.zwzz, r23.xyxx
                  mul r23.xy, r38.xyxx, r23.xyxx
                  div r32.xy, r20.xxxx, r37.xzxx
                  add r32.zw, -r32.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                  ge r32.zw, r23.xxxy, r32.zzzw
                  ge r32.xy, r32.xyxx, r23.xyxx
                  or r32.xy, r32.xyxx, r32.zwzz
                  or r24.z, r32.y, r32.x
                  or r24.y, r24.y, r24.z
                  if_z r24.y
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r24.y, r17.z, l(28), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xy, r17.z, l(164), t12.xyxx
                    mov_sat r23.xy, r23.xyxx
                    mad r33.xy, r23.xyxx, r37.xzxx, r37.ywyy
                    mul r17.z, r24.x, r32.y
                    mad r23.x, r32.x, r24.x, r23.z
                    div r17.z, r23.x, r17.z
                    max r17.z, r17.z, l(0.00006104)
                    and r23.x, r24.y, l(0x0000ffff)
                    if_nz r8.z
                      utof r24.z, r23.x
                      mov r23.yz, l(0,0,0,0)
                      loop 
                        ige r26.w, r23.z, l(8)
                        breakc_nz r26.w
                        dp2 r32.x, icb[r23.z + 0].xyxx, r27.xyxx
                        dp2 r32.y, icb[r23.z + 0].yxyy, r27.xzxx
                        mad r24.xy, r32.xyxx, r20.xxxx, r33.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.x, r24.xyzx, t9.xxxx, s13, r17.z
                        mad r23.y, r24.x, l(0.125000), r23.y
                        iadd r23.z, r23.z, l(1)
                      endloop 
                    else 
                      utof r33.z, r23.x
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.y, r33.xyzx, t9.xxxx, s13, r17.z
                    endif 
                    mul r17.z, r23.y, r23.y
                    mul r17.z, r23.y, r17.z
                  else 
                    mov r17.z, l(1.000000)
                  endif 
                  mul r9.w, r9.w, r17.z
                else 
                  ubfe r17.z, l(4), l(20), r33.w
                  ult r20.x, l(0), r17.z
                  and r20.x, r1.w, r20.x
                  if_nz r20.x
                    iadd r17.z, r17.z, cb2[0].x
                    iadd r17.z, r17.z, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r20.x, r17.z, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r17.z, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r17.z, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r17.z, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r17.z, l(116), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r17.z, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r17.z, l(148), t12.xyzw
                    mad r23.x, |r13.w|, l(-0.200000), l(0.400000)
                    mad r25.xyz, r2.xyzx, r23.xxxx, v7.xyzx
                    dp4 r24.x, r32.xyzw, r25.xyzw
                    dp4 r24.y, r33.xyzw, r25.xyzw
                    dp4 r23.x, r34.xyzw, r25.xyzw
                    dp4 r23.z, r35.xyzw, r25.xyzw
                    lt r24.z, r23.z, r23.x
                    div r24.xy, r24.xyxx, r23.zzzz
                    mad r24.xy, r24.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r24.xy, r37.zwzz, r24.xyxx
                    mul r24.xy, r37.xyxx, r24.xyxx
                    div r25.xy, r20.xxxx, r36.xzxx
                    add r32.xy, -r25.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                    ge r32.xy, r24.xyxx, r32.xyxx
                    ge r25.xy, r25.xyxx, r24.xyxx
                    or r25.xy, r25.xyxx, r32.xyxx
                    or r25.x, r25.y, r25.x
                    or r24.z, r24.z, r25.x
                    if_z r24.z
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r24.z, r17.z, l(28), t12.xxxx
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r25.xy, r17.z, l(164), t12.xyxx
                      mov_sat r24.xy, r24.xyxx
                      mad r32.xy, r24.xyxx, r36.xzxx, r36.ywyy
                      mul r17.z, r23.z, r25.y
                      mad r23.x, r25.x, r23.z, r23.x
                      div r17.z, r23.x, r17.z
                      max r17.z, r17.z, l(0.00006104)
                      and r23.x, r24.z, l(0x0000ffff)
                      if_nz r8.z
                        utof r24.z, r23.x
                        mov r23.z, l(0)
                        mov r25.x, l(0)
                        loop 
                          ige r25.y, r25.x, l(8)
                          breakc_nz r25.y
                          dp2 r33.x, icb[r25.x + 0].xyxx, r28.xyxx
                          dp2 r33.y, icb[r25.x + 0].yxyy, r28.xzxx
                          mad r24.xy, r33.xyxx, r20.xxxx, r32.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.x, r24.xyzx, t9.xxxx, s13, r17.z
                          mad r23.z, r24.x, l(0.125000), r23.z
                          iadd r25.x, r25.x, l(1)
                        endloop 
                      else 
                        utof r32.z, r23.x
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.z, r32.xyzx, t9.xxxx, s13, r17.z
                      endif 
                      mul r17.z, r23.z, r23.z
                      mul r17.z, r23.z, r17.z
                    else 
                      mov r17.z, l(1.000000)
                    endif 
                    mul r9.w, r9.w, r17.z
                  endif 
                endif 
                mad r17.z, -r14.w, r4.w, l(1.000000)
                mul r17.z, r17.z, r17.z
                mad r17.z, -r17.z, l(0.620000), l(0.620000)
                add r17.z, -r14.w, r17.z
                mad r17.z, r6.w, r17.z, r14.w
                mul r17.z, r9.w, r17.z
                lt r13.w, l(0.000000), r13.w
                mad r24.xyz, r17.zzzz, r22.xywx, r11.yzwy
                mad r21.xyz, r21.xyzx, r12.wwww, r4.xyzx
                dp3 r12.w, r21.xyzx, r21.xyzx
                rsq r12.w, r12.w
                mul r21.xyz, r12.wwww, r21.xyzx
                dp3 r12.w, r21.xyzx, r4.xyzx
                dp3 r17.z, r2.xyzx, r21.xyzx
                mad r20.x, |r17.z|, r6.z, -|r17.z|
                mad r17.z, |r17.z|, r20.x, l(1.000000)
                mad r14.w, r14.w, r0.w, r2.w
                mul r17.z, r17.z, r17.z
                mul r14.w, r14.w, r17.z
                rcp r14.w, r14.w
                mul r14.w, r15.w, r14.w
                mul r9.w, r9.w, r14.w
                mul r9.w, r9.w, l(0.250000)
                mad r21.xyz, r9.wwww, r22.xywx, r31.xyzx
                add_sat r12.w, -r12.w, l(1.000000)
                mul r14.w, r12.w, r12.w
                mul r14.w, r14.w, r14.w
                mul r12.w, r12.w, r14.w
                mul r9.w, r9.w, r12.w
                mad r22.xyw, r9.wwww, r22.xyxw, r18.xyxz
                movc r11.yzw, r13.wwww, r24.xxyz, r11.yyzw
                movc r18.xyz, r13.wwww, r22.xywx, r18.xyzx
                movc r31.xyz, r13.wwww, r21.xyzx, r31.xyzx
              endif 
            endif 
          endif 
          break 
          default 
          break 
        endswitch 
      endif 
    endif 
  endloop 
  mov r10.yzw, r11.yyzw
  mov r29.xyz, r18.xyzx
  mov r30.xyz, r31.xyzx
  iadd r6.y, r6.y, l(32)
endloop 
add r2.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r2.xyz, r2.xyzx, r29.xyzx
mad r1.xyz, r30.xyzx, r1.xyzx, r2.xyzx
mad r0.xyz, r10.yzwy, r0.xyzx, r1.xyzx
dp3 r0.w, r0.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
max r0.w, r0.w, l(0.000100)
max r0.w, r0.w, cb1[85].x
mul r1.xyz, r0.wwww, r5.xyzx
mad r1.xyz, r3.xyzx, r3.wwww, r1.xyzx
add r0.xyz, r0.xyzx, r1.xyzx
lt r0.w, l(0.000000), cb2[9].z
if_nz r0.w
  dp3 r0.w, v7.xyzx, v7.xyzx
  rsq r1.x, r0.w
  mul r1.xyz, r1.xxxx, v7.xyzx
  sqrt r0.w, r0.w
  lt r1.w, l(0.000000), cb2[13].w
  if_nz r1.w
    mad r2.xy, r0.wwww, cb2[15].xyxx, cb2[14].zwzz
    mul r2.xy, r2.xyxx, cb2[16].xyxx
    lt r1.w, l(0.010000), |v7.z|
    mul r2.zw, v7.zzzz, cb2[15].zzzw
    mul r3.xy, r2.zwzz, l(-1.442695, -1.442695, 0.000000, 0.000000)
    exp r3.xy, r3.xyxx
    add r3.xy, -r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    div r2.zw, r3.xxxy, r2.zzzw
    mul r2.zw, r2.zzzw, r2.xxxy
    movc r2.xy, r1.wwww, r2.zwzz, r2.xyxx
    mul r2.xzw, r2.xxxx, cb2[12].xxyz
    exp r2.xzw, r2.xxzw
    mul r3.xyz, r2.yyyy, cb2[12].xyzx
    exp r3.xyz, r3.xyzx
    add r3.xyz, -r2.xzwx, r3.xyzx
    mad r2.xyz, cb2[13].wwww, r3.xyzx, r2.xzwx
  else 
    mad r1.w, r0.w, cb2[15].x, cb2[14].z
    mul r1.w, r1.w, cb2[16].x
    lt r2.w, l(0.010000), |v7.z|
    mul r3.x, v7.z, cb2[15].z
    mul r3.y, r3.x, l(-1.442695)
    exp r3.y, r3.y
    add r3.y, -r3.y, l(1.000000)
    div r3.x, r3.y, r3.x
    mul r3.x, r1.w, r3.x
    movc r1.w, r2.w, r3.x, r1.w
    mul r3.xyz, r1.wwww, cb2[12].xyzx
    exp r2.xyz, r3.xyzx
  endif 
  mad r2.xyz, r2.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r2.xyz, r2.xyzx, -cb2[9].zzzz
  dp3 r1.x, cb2[7].yzwy, -r1.xyzx
  mad r1.y, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r1.z, cb2[8].w, -r1.x, l(1.000000)
  mul r1.z, r1.z, r1.z
  mul r1.z, r1.z, l(12.566371)
  div r1.y, r1.y, r1.z
  add r0.w, r0.w, -cb2[10].w
  mul_sat r0.w, r0.w, cb2[11].w
  mul r0.w, r0.w, r1.y
  mov_sat r1.x, r1.x
  mad r1.x, r1.x, r1.x, l(1.000000)
  mad r1.x, r1.x, l(0.05968310), l(-1.000000)
  mad r1.x, cb2[8].z, r1.x, l(1.000000)
  mul r1.yzw, r0.wwww, cb2[11].xxyz
  mad r1.xyz, r1.xxxx, cb2[10].xyzx, r1.yzwy
  mul r1.xyz, r1.xyzx, cb2[9].wwww
  add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r1.xyz, r1.xyzx, r3.xyzx
  mad r1.xyz, r0.xyzx, r2.xyzx, r1.xyzx
else 
  mul r0.w, v7.z, cb2[6].x
  mad r1.w, cb2[6].x, v7.z, cb2[5].x
  lt r2.x, |r0.w|, l(0.000100)
  min r2.y, r1.w, l(64.000000)
  mul r2.y, r2.y, l(1.442695)
  exp r2.y, r2.y
  mov_sat r2.z, cb2[6].z
  lt r2.w, r1.w, l(0.000000)
  add r1.w, r1.w, l(1.000000)
  movc r1.w, r2.w, r2.y, r1.w
  add r1.w, r1.w, -cb2[6].z
  movc r0.w, r2.x, l(1.000000), r0.w
  div r0.w, r1.w, r0.w
  movc r0.w, r2.x, r2.z, r0.w
  mul r0.w, r0.w, cb2[5].z
  dp3 r1.w, v7.xyzx, v7.xyzx
  sqrt r2.x, r1.w
  mad r0.w, r0.w, r2.x, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  rsq r1.w, r1.w
  mul r2.xyz, r1.wwww, v7.xyzx
  dp3 r1.w, cb2[7].yzwy, r2.xyzx
  mad_sat r1.w, cb2[8].y, r1.w, cb2[8].x
  add r2.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r2.xyzw, r1.wwww, r2.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r2.w
  add r2.xyz, -r0.xyzx, r2.xyzx
  mad r1.xyz, r0.wwww, r2.xyzx, r0.xyzx
endif 
mul r0.xyz, r1.xyzx, cb1[85].yyyy
ge r1.xyz, r0.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.xyz, r0.xyzx, r1.xyzx
min o0.xyz, r0.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
mov o0.w, l(1.000000)
ret 
// Approximately 1964 instruction slots used
