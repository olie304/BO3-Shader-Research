//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:42:14 2021
//
//
// Note: shader requires additional functionality:
//       Early depth-stencil
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float3 colorTint;                  // Offset:  160 Size:    12
//   float baseNormalHeight;            // Offset:  172 Size:     4
//   float2 glossRange;                 // Offset:  176 Size:     8
//   float2 rotateUVs;                  // Offset:  184 Size:     8
//   float2 scrollUVs;                  // Offset:  192 Size:     8
//   float2 scaleUVs;                   // Offset:  200 Size:     8
//   float2 offsetUVs;                  // Offset:  208 Size:     8
//   float2 zoomUVs;                    // Offset:  216 Size:     8
//   float zoomRate;                    // Offset:  224 Size:     4
//   float layerDepth;                  // Offset:  228 Size:     4
//   bool clampU;                       // Offset:  232 Size:     4
//   bool clampV;                       // Offset:  236 Size:     4
//   float2 flickerSeed;                // Offset:  240 Size:     8
//   float flickerSpeed;                // Offset:  248 Size:     4
//   float2 flickerRange;               // Offset:  256 Size:     8
//   float flickerPower;                // Offset:  264 Size:     4
//   bool useAsCamo;                    // Offset:  268 Size:     4
//   bool relativeHDR;                  // Offset:  272 Size:     4
//   bool invertFalloff;                // Offset:  276 Size:     4
//   float3 emissiveTint1;              // Offset:  288 Size:    12
//   float hdrScale;                    // Offset:  300 Size:     4
//   float emissiveFalloffPower;        // Offset:  304 Size:     4
//   float alphaCooling;                // Offset:  308 Size:     4
//   float coolingFactor;               // Offset:  312 Size:     4
//   float2 distortionRotateUVs;        // Offset:  320 Size:     8
//   float2 distortionScrollUVs;        // Offset:  328 Size:     8
//   float2 distortionScaleUVs;         // Offset:  336 Size:     8
//   float2 distortionOffsetUVs;        // Offset:  344 Size:     8
//   float2 distortionZoomUVs;          // Offset:  352 Size:     8
//   float distortionZoomRate;          // Offset:  360 Size:     4
//   float distortionAmount;            // Offset:  364 Size:     4
//   float2 maskRotateUVs;              // Offset:  368 Size:     8
//   float2 maskScrollUVs;              // Offset:  376 Size:     8
//   float2 maskScaleUVs;               // Offset:  384 Size:     8
//   float2 maskOffsetUVs;              // Offset:  392 Size:     8
//   float2 maskZoomUVs;                // Offset:  400 Size:     8
//   float maskZoomRate;                // Offset:  408 Size:     4
//   float2 maskFalloff;                // Offset:  416 Size:     8
//   float2 specularScroll;             // Offset:  424 Size:     8
//   float2 specularScale;              // Offset:  432 Size:     8
//   bool noReceiveShadow;              // Offset:  440 Size:     4
//   float scriptReplacement;           // Offset:  444 Size:     4 [unused]
//   float alphaRevealSoftEdge;         // Offset:  448 Size:     4
//   float alphaRevealRamp;             // Offset:  452 Size:     4
//   float scriptHDRReplacement;        // Offset:  456 Size:     4 [unused]
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16
//   float4 debugNormalOverride;        // Offset:  960 Size:    16
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16
//   float4 debugGlossOverride;         // Offset:  992 Size:    16
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for shaderConstantSetBuffer
// {
//
//   struct GpuShaderConstantSet
//   {
//       
//       float4 scriptVector0;          // Offset:    0
//       float4 scriptVector1;          // Offset:   16
//       float4 scriptVector2;          // Offset:   32
//       float4 scriptVector3;          // Offset:   48
//       float4 scriptVector4;          // Offset:   64
//       float4 scriptVector5;          // Offset:   80
//       float4 scriptVector6;          // Offset:   96
//       float4 scriptVector7;          // Offset:  112
//       float4 weaponParam0;           // Offset:  128
//       float4 weaponParam1;           // Offset:  144
//       float4 weaponParam2;           // Offset:  160
//       float4 weaponParam3;           // Offset:  176
//       float4 weaponParam4;           // Offset:  192
//       float4 weaponParam5;           // Offset:  208
//       float4 weaponParam6;           // Offset:  224
//       float4 weaponParam7;           // Offset:  240
//       float4 characterParam0;        // Offset:  256
//       float4 characterParam1;        // Offset:  272
//       float4 characterParam2;        // Offset:  288
//       float4 characterParam3;        // Offset:  304
//       float4 characterParam4;        // Offset:  320
//       float4 characterParam5;        // Offset:  336
//       float4 characterParam6;        // Offset:  352
//       float4 characterParam7;        // Offset:  368
//
//   } $Element;                        // Offset:    0 Size:   384
//
// }
//
// Resource bind info for modelInstanceBuffer
// {
//
//   struct ModelInstanceData
//   {
//       
//       uint boneArrayIndex;           // Offset:    0
//       uint shaderConstantSet;        // Offset:    4
//       uint flagsAndPrevFrameIndex;   // Offset:    8
//       uint worldMatrix;              // Offset:   12
//       uint siegeAnimStateOffset;     // Offset:   16
//       uint prevFrameSiegeAnimStateOffset;// Offset:   20
//
//   } $Element;                        // Offset:    0 Size:    24
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// colorSampler                      sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// normalSampler                     sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// lookupSampler                     sampler      NA          NA             s5      1 
// revealSampler                     sampler      NA          NA             s6      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// shaderConstantSetBuffer           texture  struct         r/o             t0      1 
// modelInstanceBuffer               texture  struct         r/o             t4      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// colorMap                          texture  float4          2d            t21      1 
// tintMask                          texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// normalMap                         texture  float4          2d            t24      1 
// flickerLookupMap                  texture  float4          2d            t25      1 
// camoMaskMap                       texture  float4          2d            t26      1 
// emissiveMap                       texture  float4          2d            t29      1 
// alphaMask                         texture  float4          2d            t30      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// distortionMap                     texture  float4          2d            t37      1 
// revealMap                         texture  float4          2d            t38      1 
// edgeFadeMap                       texture  float4          2d            t46      1 
// specularMask                      texture  float4          2d            t47      1 
// gOit_Pixels                           UAV    uint          2d             u6      1 
// gOit_Nodes                            UAV   uint2     2darray             u7      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyz 
// COLOR                    1   x           1     NONE   float   x   
// TEXCOORD                 0    yz         1     NONE   float    yz 
// UVOFFSETS                0   xyz         2     NONE   float   xyz 
// TEXCOORD                 4      w        2     NONE    uint      w
// TEXCOORD                 1   xyz         3     NONE   float   xyz 
// TEXCOORD                 2   xyz         4     NONE   float   xyz 
// TEXCOORD                 3   xyz         5     NONE   float   xyz 
// OFFPOSITION              0   xyz         6     NONE   float   xyz 
// SV_IsFrontFace           0   x           7    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | forceEarlyDepthStencil
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[29], immediateIndexed
dcl_constantbuffer CB1[93], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_structured t0, 384
dcl_resource_structured t4, 24
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2d (float,float,float,float) t26
dcl_resource_texture2d (float,float,float,float) t29
dcl_resource_texture2d (float,float,float,float) t30
dcl_resource_texture2darray (float,float,float,float) t31
dcl_resource_texture2d (float,float,float,float) t37
dcl_resource_texture2d (float,float,float,float) t38
dcl_resource_texture2d (float,float,float,float) t46
dcl_resource_texture2d (float,float,float,float) t47
dcl_uav_typed_texture2d (uint,uint,uint,uint) u6
dcl_uav_typed_texture2darray (uint,uint,uint,uint) u7
dcl_input_ps_siv linear noperspective v0.xyz, position
dcl_input_ps linear v1.x
dcl_input_ps linear v1.yz
dcl_input_ps constant v2.xyz
dcl_input_ps constant v2.w
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps_sgv constant v7.x, is_front_face
dcl_output o0.xyzw
dcl_temps 48
if_nz cb0[16].w
  ld_structured_indexable(structured_buffer, stride=24)(mixed,mixed,mixed,mixed) r0.x, v2.w, l(4), t4.xxxx
  ld_structured_indexable(structured_buffer, stride=384)(mixed,mixed,mixed,mixed) r0.yzw, r0.x, l(208), t0.xxyz
  ld_structured_indexable(structured_buffer, stride=384)(mixed,mixed,mixed,mixed) r1.xyz, r0.x, l(224), t0.xyzx
  ld_structured_indexable(structured_buffer, stride=384)(mixed,mixed,mixed,mixed) r2.xyz, r0.x, l(240), t0.xyzx
  sample_indexable(texture2d)(float,float,float,float) r3.xyz, v1.yzyy, t26.xyzw, s1
  dp3_sat r0.x, r3.xyzx, r0.yzwy
  mov r3.xy, v1.yzyy
  mov r3.z, l(1.000000)
  dp3 r1.x, r1.xyzx, r3.xyzx
  dp3 r1.y, r2.xyzx, r3.xyzx
else 
  mov r1.xy, v1.yzyy
  mov r0.x, l(1.000000)
endif 
dp3 r0.y, -v6.xyzx, -v6.xyzx
rsq r0.y, r0.y
mul r2.xyz, r0.yyyy, -v6.xyzx
dp3 r3.x, r2.xyzx, v4.xyzx
dp3 r3.y, r2.xyzx, v5.xyzx
dp3 r0.z, r2.xyzx, v3.xyzx
lt r0.w, l(0.000000), r0.z
div r1.zw, -r3.xxxy, r0.zzzz
and r1.zw, r0.wwww, r1.zzzw
add r3.xy, r1.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r3.zw, r1.zzzw, l(0.000000, 0.000000, 0.000010, 0.000010)
mul r4.xy, r3.zwzz, cb0[21].xyxx
mad r4.xy, r3.xyxx, cb0[21].xyxx, r4.xyxx
mad r4.xy, cb0[21].zwzz, cb0[21].xyxx, r4.xyxx
mul r4.zw, cb0[20].zzzw, cb1[69].wwww
mad r0.w, cb0[20].y, cb1[69].w, l(1.000000)
mul r0.w, r0.w, cb0[20].x
mul r0.w, r0.w, l(0.01745329)
sincos r5.x, r6.x, r0.w
mov r6.y, r6.x
mov r6.z, r5.x
dp2 r7.x, r6.yzyy, r4.xyxx
mov r6.x, -r5.x
dp2 r7.y, r6.xyxx, r4.xyxx
mad r4.xy, r4.zwzz, cb0[21].xyxx, r7.xyxx
mul r0.w, cb0[22].z, cb1[69].w
sincos null, r0.w, r0.w
mad r0.w, r0.w, l(0.500000), l(0.500000)
add r0.w, -r0.w, l(1.000000)
add r2.w, -cb0[22].x, cb0[22].y
mad r0.w, r0.w, r2.w, cb0[22].x
div r4.xy, r4.xyxx, r0.wwww
add r4.xy, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r4.xy, r4.xyxx, t37.xyzw, s3
mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r4.zw, cb0[22].wwww, cb1[44].zzzw
add r5.xy, v1.yzyy, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r5.zw, r3.zzzw, cb0[12].zzzw
mad r5.xy, r5.xyxx, cb0[12].zwzz, r5.zwzz
mad r5.xy, cb0[13].xyxx, cb0[12].zwzz, r5.xyxx
mad r0.w, cb0[11].w, cb1[69].w, l(1.000000)
mul r0.w, r0.w, cb0[11].z
mul r0.w, r0.w, l(0.01745329)
sincos r6.x, r7.x, r0.w
mov r7.y, r7.x
mov r7.z, r6.x
dp2 r8.x, r7.yzyy, r5.xyxx
mov r7.x, -r6.x
dp2 r8.y, r7.xyxx, r5.xyxx
mul r5.xy, cb0[12].xyxx, cb1[69].wwww
mad r5.xy, r5.xyxx, cb0[12].zwzz, r8.xyxx
mul r0.w, cb0[14].x, cb1[69].w
sincos null, r0.w, r0.w
mad r0.w, r0.w, l(0.500000), l(0.500000)
add r0.w, -r0.w, l(1.000000)
add r2.w, -cb0[13].z, cb0[13].w
mad r0.w, r0.w, r2.w, cb0[13].z
div r5.xy, r5.xyxx, r0.wwww
add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
mov_sat r5.zw, r5.xxxy
movc r5.xy, cb0[14].zwzz, r5.zwzz, r5.xyxx
mad r5.xy, r4.xyxx, r4.zwzz, r5.xyxx
sample_indexable(texture2d)(float,float,float,float) r6.xyzw, r5.xyxx, t21.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r0.w, r5.xyxx, t22.yzwx, s1
add r7.xyz, cb0[10].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r7.xyz, r0.wwww, r7.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r6.xyz, r6.xyzx, r7.xyzx
mul r0.w, r6.w, v1.x
add r2.w, -cb0[11].x, cb0[11].y
mul_sat r5.z, cb0[11].y, l(0.05882353)
sample_indexable(texture2d)(float,float,float,float) r7.xyz, r5.xyxx, t24.xyzw, s3
add r7.xyz, r7.xyzx, l(-0.500000, -0.500000, -0.000000, 0.000000)
mad r7.xyz, cb0[10].wwww, r7.xyzx, l(0.500000, 0.500000, 0.000000, 0.000000)
mad r7.xy, r7.xyxx, l(1.99218750, 1.99218750, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r5.w, r7.xyxx, r7.xyxx
add r5.w, -r5.w, l(1.000000)
max r5.w, r5.w, l(0.000000)
sqrt r5.w, r5.w
mul r7.z, r7.z, r7.z
mul r7.z, r7.z, l(0.33333334)
min r7.z, r7.z, l(1.000000)
movc r7.w, v7.x, l(1.000000), l(-1.000000)
dp3 r8.x, v3.xyzx, v3.xyzx
rsq r8.x, r8.x
mul r8.xyz, r8.xxxx, v3.xyzx
mul r8.xyz, r7.wwww, r8.xyzx
dp3 r8.w, v4.xyzx, v4.xyzx
rsq r8.w, r8.w
mul r9.xyz, r8.wwww, v4.xyzx
mul r9.xyz, r7.wwww, r9.xyzx
dp3 r8.w, v5.xyzx, v5.xyzx
rsq r8.w, r8.w
mul r10.xyz, r8.wwww, v5.xyzx
mul r10.xyz, r7.wwww, r10.xyzx
mul r5.z, r5.z, l(-17.000000)
exp r5.z, r5.z
add r5.z, r5.z, r7.z
log r5.z, r5.z
mul r5.z, r5.z, l(-0.05882353)
max r5.z, r5.z, l(0.000000)
mul r10.xyz, r7.yyyy, r10.xyzx
mad r7.xyw, r9.xyxz, r7.xxxx, r10.xyxz
mad r7.xyw, r8.xyxz, r5.wwww, r7.xyxw
dp3 r5.w, r7.xywx, r7.xywx
rsq r5.w, r5.w
mul r7.xyw, r5.wwww, r7.xyxw
mad r2.w, cb1[62].x, r2.w, cb0[11].x
mul_sat r2.w, r2.w, l(0.05882353)
mul r2.w, r2.w, l(-17.000000)
exp r2.w, r2.w
add r2.w, r2.w, r7.z
log r2.w, r2.w
mul r2.w, r2.w, l(-0.05882353)
max r2.w, r2.w, l(0.000000)
lt r5.w, l(0.000000), cb1[64].w
if_nz r5.w
  ftoi r5.w, cb1[64].w
  lod r7.z, r5.xyxx, t21.y, s1
  lod r8.x, r5.xyxx, t21.x, s1
  lt r7.z, r7.z, r8.x
  lt r8.x, l(0.000000), r8.x
  and r8.yzw, r5.wwww, l(0, 1, 2, 4)
  movc r9.xyz, r8.yyyy, l(1.000000,0,1.000000,0), r6.xyzx
  movc r10.xyz, r8.zzzz, l(0,1.000000,1.000000,0), r6.xyzx
  movc r8.xyz, r8.xxxx, r9.xyzx, r10.xyzx
  movc r9.xyz, r8.wwww, l(0,1.000000,0,0), r6.xyzx
  movc r6.xyz, r7.zzzz, r8.xyzx, r9.xyzx
endif 
add r8.xyz, -r6.xyzx, cb1[58].xyzx
mad r6.xyz, cb1[58].wwww, r8.xyzx, r6.xyzx
mad r5.w, -r6.w, v1.x, cb1[59].x
mad r0.w, cb1[59].w, r5.w, r0.w
add r8.xyz, cb1[61].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r8.xyz, cb1[61].wwww, r8.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
add r2.w, -r5.z, r2.w
mad r9.y, cb1[62].w, r2.w, r5.z
add r2.w, cb1[63].x, l(-1.000000)
mad r2.w, cb1[63].w, r2.w, l(1.000000)
movc r10.xyz, v7.xxxx, v3.xyzx, -v3.xyzx
dp3 r5.z, r10.xyzx, r10.xyzx
rsq r5.z, r5.z
mad r10.xyz, r10.xyzx, r5.zzzz, -r7.xywx
mad r7.xyz, cb1[60].wwww, r10.xyzx, r7.xywx
mul r5.zw, cb0[26].zzzw, cb1[69].wwww
mad r5.zw, r1.xxxy, cb0[27].xxxy, r5.zzzw
sample_indexable(texture2d)(float,float,float,float) r5.z, r5.zwzz, t47.yzxw, s6
add r5.w, cb0[14].y, l(0.000010)
mad r1.zw, r1.zzzw, r5.wwww, r3.xxxy
add r1.zw, r1.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
mov_sat r9.zw, r1.zzzw
movc r1.zw, cb0[14].zzzw, r9.zzzw, r1.zzzw
mad r1.zw, r4.xxxy, r4.zzzw, r1.zzzw
sample_indexable(texture2d)(float,float,float,float) r10.xyzw, r1.zwzz, t29.xyzw, s1
mul r10.xyzw, r10.xyzw, cb0[18].xyzw
mov_sat r11.xyz, r10.xyzx
log r11.xyz, r11.xyzx
mul r11.xyz, r11.xyzx, cb0[19].yyyy
exp r11.xyz, r11.xyzx
mov_sat r0.z, r0.z
log r1.z, r0.z
mul r1.w, r1.z, cb0[19].x
exp r1.w, r1.w
add r0.z, -r0.z, l(1.000000)
log r0.z, r0.z
mul r0.z, r0.z, cb0[19].x
exp r0.z, r0.z
movc r0.z, cb0[17].y, r0.z, r1.w
eq r1.w, cb0[19].x, l(0.000000)
movc r0.z, r1.w, l(1.000000), r0.z
ld_structured_indexable(structured_buffer, stride=24)(mixed,mixed,mixed,mixed) r1.w, v2.w, l(4), t4.xxxx
ld_structured_indexable(structured_buffer, stride=384)(mixed,mixed,mixed,mixed) r1.w, r1.w, l(52), t0.xxxx
mov_sat r1.w, r1.w
mul r10.xyz, r1.wwww, r10.xyzx
mul r11.xyz, r1.wwww, r11.xyzx
mul r0.z, r0.z, r10.w
mul r10.xyz, r0.zzzz, r10.xyzx
mul r11.xyz, r0.zzzz, r11.xyzx
add r0.z, v2.y, v2.x
add r0.z, r0.z, v2.z
add r0.z, r0.z, cb0[15].y
frc r0.z, r0.z
mad r12.y, cb1[69].w, cb0[15].z, r0.z
mov r12.x, cb0[15].x
sample_l_indexable(texture2d)(float,float,float,float) r0.z, r12.xyxx, t25.yzxw, s5, l(0.000000)
log r0.z, |r0.z|
mul r0.z, r0.z, cb0[16].z
exp r0.z, r0.z
add r1.w, -cb0[16].x, cb0[16].y
mad r0.z, r0.z, r1.w, cb0[16].x
mul r12.xyz, r0.zzzz, r10.xyzx
div r12.xyz, r12.xyzx, cb0[18].wwww
dp3_sat r1.w, r12.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
add r0.w, r0.w, r1.w
mul r3.zw, r3.zzzw, cb0[24].xxxy
mad r3.xy, r3.xyxx, cb0[24].xyxx, r3.zwzz
mad r3.xy, cb0[24].zwzz, cb0[24].xyxx, r3.xyxx
mul r3.zw, cb0[23].zzzw, cb1[69].wwww
mad r1.w, cb0[23].y, cb1[69].w, l(1.000000)
mul r1.w, r1.w, cb0[23].x
mul r1.w, r1.w, l(0.01745329)
sincos r12.x, r13.x, r1.w
mov r13.y, r13.x
mov r13.z, r12.x
dp2 r14.x, r13.yzyy, r3.xyxx
mov r13.x, -r12.x
dp2 r14.y, r13.xyxx, r3.xyxx
mad r3.xy, r3.zwzz, cb0[24].xyxx, r14.xyxx
mul r1.w, cb0[25].z, cb1[69].w
sincos null, r1.w, r1.w
mad r1.w, r1.w, l(0.500000), l(0.500000)
add r1.w, -r1.w, l(1.000000)
add r3.z, -cb0[25].x, cb0[25].y
mad r1.w, r1.w, r3.z, cb0[25].x
div r3.xy, r3.xyxx, r1.wwww
add r3.xy, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
mov_sat r3.zw, r3.xxxy
movc r3.xy, cb0[14].zwzz, r3.zwzz, r3.xyxx
mad r3.xy, r4.xyxx, r4.zwzz, r3.xyxx
sample_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t30.yzwx, s1
mul r1.z, r1.z, cb0[26].x
exp r1.z, r1.z
mul_sat r1.z, r1.z, cb0[26].y
sample_indexable(texture2d)(float,float,float,float) r1.x, r1.xyxx, t46.xyzw, s1
add r1.y, r1.w, r1.z
add r1.x, -r1.x, r1.y
add_sat r1.x, r1.x, l(1.000000)
mul r0.w, r0.w, r1.x
sample_indexable(texture2d)(float,float,float,float) r1.x, r5.xyxx, t38.xyzw, s6
mad_sat r1.y, v1.x, l(0.998000), l(0.001000)
add r1.z, -r1.y, l(1.000000)
mov_sat r1.w, cb0[28].y
log r1.y, r1.y
mul r1.y, r1.y, r1.w
exp r1.y, r1.y
mov r3.x, -r1.y
log r1.y, r1.z
mul r1.y, r1.y, r1.w
exp r3.y, r1.y
mad_sat r1.yz, cb0[28].xxxx, r3.xxyx, r1.zzzz
add r1.x, -r1.y, r1.x
add r1.y, -r1.y, r1.z
div_sat r1.x, r1.x, r1.y
mul r0.w, r0.w, r1.x
ftou r1.xy, v0.xyxx
ge r1.z, v0.z, l(0.984375)
mul r1.w, v0.z, l(1.01587307)
mad r3.x, v0.z, l(64.000000), l(-63.000000)
movc r1.z, r1.z, r3.x, r1.w
max r1.z, r1.z, l(0.00000001)
rcp r1.z, r1.z
ine r1.w, cb1[92].x, l(0)
utof r3.xy, r1.yxyy
dp2 r3.z, r3.yxyy, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r3.z, r3.z
mul r3.z, r3.z, l(52.982918)
frc r3.z, r3.z
mad r3.z, r3.z, l(6.28318548), cb1[70].w
sincos r4.x, r12.x, r3.z
dp2 r3.x, r3.xyxx, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r3.x, r3.x
mul r3.x, r3.x, l(52.982918)
frc r3.x, r3.x
mad r3.x, r3.x, l(6.28318548), cb1[70].w
sincos r3.x, r5.x, r3.x
dp3_sat r9.x, r7.xyzx, r2.xyzx
dp3 r3.y, -r2.xyzx, r7.xyzx
add r3.y, r3.y, r3.y
mad r13.xyz, r7.xyzx, -r3.yyyy, -r2.xyzx
mul r3.y, r9.y, l(17.000000)
exp r3.y, r3.y
add r3.y, r3.y, l(2.000000)
div r3.y, l(2.000000), r3.y
sqrt r3.z, r3.y
add r3.w, -r9.y, l(1.000000)
mul r4.z, r3.w, l(5.000000)
mad r4.w, r3.w, l(5.000000), l(-2.500000)
mul_sat r4.w, r4.w, l(0.400000)
mul r4.w, r4.w, l(100.000000)
mad r5.yw, -r3.wwww, l(0.000000, 10.000000, 0.000000, 5.000000), l(0.000000, 6.857410, 0.000000, 7.085000)
exp r5.y, r5.y
mul r5.y, r5.y, r9.x
mul r6.w, r3.w, r4.z
mad r5.w, -r6.w, l(2.015905), r5.w
exp r5.w, r5.w
mul r5.w, r5.w, r9.x
mul r5.yw, r5.yyyw, l(0.000000, 9.136810, 0.000000, 9.708090)
max r5.y, r5.w, r5.y
max r5.y, r5.y, l(1.268160)
mul r1.z, r1.z, l(0.00781250)
min r1.z, r1.z, l(15.000000)
ftou r1.z, r1.z
ushr r14.xy, r1.xyxx, l(6, 6, 0, 0)
ishl r14.z, r1.z, l(4)
mov r1.xy, l(0,0,0,0)
mov r15.w, l(0)
mov r16.yz, l(0,0,1.000000,0)
mov r17.xy, l(0,0,0,0)
mov r18.xy, l(0,0,0,0)
mov r19.xy, l(0,0,0,0)
mov r20.x, l(1.000000)
mov r21.xyzw, l(0,0,0,0)
mov r22.yzw, l(0,0,0,0)
mov r5.w, l(0)
mov r6.w, l(0)
loop 
  uge r8.w, r6.w, cb2[0].y
  breakc_nz r8.w
  ushr r1.z, r6.w, l(5)
  iadd r15.xyz, r1.xyzx, r14.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r1.z, r15.xyzw, t7.yzxw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r23.xyzw, r6.w, l(0), t15.wxyz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r6.w, l(16), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r6.w, l(32), t15.yxwz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r6.w, l(48), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r6.w, l(64), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r6.w, l(80), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r9.zw, r6.w, l(96), t15.xxxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r6.w, l(116), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r6.w, l(132), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r6.w, l(148), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r6.w, l(164), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r6.w, l(180), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r6.w, l(196), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xy, r6.w, l(212), t15.xyxx
  add r15.xyz, -r23.yzwy, v6.xyzx
  dp3 r8.w, r15.xyzx, r15.xyzx
  sqrt r8.w, r8.w
  ge r8.w, cb2[54].y, r8.w
  and r10.w, r29.y, l(0x0000ffff)
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r10.w, l(0), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r10.w, l(16), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r38.xyzw, r10.w, l(32), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r39.xyzw, r10.w, l(48), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r40.xyzw, r10.w, l(64), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r41.xyzw, r10.w, l(80), t16.xyzw
  dp3 r11.w, r36.xyzx, r15.xyzx
  add_sat r11.w, r36.w, r11.w
  dp3 r12.w, r37.xyzx, r15.xyzx
  add_sat r12.w, r37.w, r12.w
  mul r11.w, r11.w, r12.w
  dp3 r12.w, r38.xyzx, r15.xyzx
  add_sat r12.w, r38.w, r12.w
  mul r11.w, r11.w, r12.w
  dp3 r12.w, r39.xyzx, r15.xyzx
  add_sat r12.w, r39.w, r12.w
  mul r11.w, r11.w, r12.w
  dp3 r12.w, r40.xyzx, r15.xyzx
  add_sat r12.w, r40.w, r12.w
  mul r11.w, r11.w, r12.w
  dp3 r12.w, r41.xyzx, r15.xyzx
  add_sat r12.w, r41.w, r12.w
  mul r16.x, r11.w, r12.w
  and r11.w, r9.z, l(1)
  movc r16.xw, r11.wwww, r16.xxxy, r16.zzzx
  mov r36.xy, r29.zwzz
  mov r36.z, r30.z
  dp3 r11.w, r13.xyzx, r36.xyzx
  dp3 r12.w, r15.xyzx, r36.xyzx
  add r12.w, -r30.w, r12.w
  ge r14.w, r12.w, l(0.000000)
  max r12.w, r4.w, |r12.w|
  movc r12.w, r14.w, r12.w, -r12.w
  max r11.w, -r11.w, l(0.00000010)
  div r11.w, r12.w, r11.w
  min r11.w, |r11.w|, l(131072.000000)
  mov r30.z, r31.z
  dp3 r12.w, r13.xyzx, r30.xyzx
  dp3 r14.w, r15.xyzx, r30.xyzx
  add r14.w, -r31.w, r14.w
  ge r17.w, r14.w, l(0.000000)
  max r14.w, r4.w, |r14.w|
  movc r14.w, r17.w, r14.w, -r14.w
  max r12.w, -r12.w, l(0.00000010)
  div r12.w, r14.w, r12.w
  min r11.w, r11.w, |r12.w|
  mov r31.z, r32.z
  dp3 r12.w, r13.xyzx, r31.xyzx
  dp3 r14.w, r15.xyzx, r31.xyzx
  add r14.w, -r32.w, r14.w
  ge r17.w, r14.w, l(0.000000)
  max r14.w, r4.w, |r14.w|
  movc r14.w, r17.w, r14.w, -r14.w
  max r12.w, -r12.w, l(0.00000010)
  div r12.w, r14.w, r12.w
  min r11.w, r11.w, |r12.w|
  mov r32.z, r33.z
  dp3 r12.w, r13.xyzx, r32.xyzx
  dp3 r14.w, r15.xyzx, r32.xyzx
  add r14.w, -r33.w, r14.w
  ge r17.w, r14.w, l(0.000000)
  max r14.w, r4.w, |r14.w|
  movc r14.w, r17.w, r14.w, -r14.w
  max r12.w, -r12.w, l(0.00000010)
  div r12.w, r14.w, r12.w
  min r11.w, r11.w, |r12.w|
  mov r33.z, r34.x
  dp3 r12.w, r13.xyzx, r33.xyzx
  dp3 r14.w, r15.xyzx, r33.xyzx
  add r14.w, -r34.y, r14.w
  ge r17.w, r14.w, l(0.000000)
  max r14.w, r4.w, |r14.w|
  movc r14.w, r17.w, r14.w, -r14.w
  max r12.w, -r12.w, l(0.00000010)
  div r12.w, r14.w, r12.w
  min r11.w, r11.w, |r12.w|
  mov r35.zw, r34.zzzw
  dp3 r12.w, r13.zxyz, r35.xzwx
  dp3 r14.w, r15.zxyz, r35.xzwx
  add r14.w, -r35.y, r14.w
  ge r17.w, r14.w, l(0.000000)
  max r14.w, r4.w, |r14.w|
  movc r14.w, r17.w, r14.w, -r14.w
  max r12.w, -r12.w, l(0.00000010)
  div r12.w, r14.w, r12.w
  min r11.w, r11.w, |r12.w|
  mov r30.x, r26.w
  mov r30.yz, r27.zzwz
  add r30.xyz, r15.xyzx, r30.xyzx
  mad r30.xyz, r13.xyzx, r11.wwww, r30.xyzx
  dp3 r12.w, r30.xyzx, r30.xyzx
  sqrt r12.w, r12.w
  div r11.w, r11.w, r12.w
  add r11.w, r11.w, r11.w
  sqrt r11.w, r11.w
  mad r11.w, r3.w, l(5.000000), r11.w
  add r11.w, r11.w, l(-0.844800)
  mov r23.y, r24.z
  mov r23.z, r25.x
  dp3 r31.x, r30.xyzx, r23.xyzx
  mov r32.xy, r24.xwxx
  mov r32.z, r25.w
  dp3 r31.y, r30.xyzx, r32.xyzx
  mov r25.x, r24.y
  dp3 r31.z, r30.xyzx, r25.xyzx
  ubfe r20.zw, l(0, 0, 6, 9), l(0, 0, 25, 16), r29.yyyy
  utof r31.w, r20.w
  sample_l_indexable(texturecubearray)(float,float,float,float) r24.xyz, r31.xyzw, t8.xyzw, s2, r11.w
  and r29.yzw, r24.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
  ieq r29.yzw, r29.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
  or r11.w, r29.z, r29.y
  or r11.w, r29.w, r11.w
  movc r24.xyz, r11.wwww, l(1.000000,1.000000,0,0), r24.xyzx
  dp3 r30.x, r15.xyzx, r23.xyzx
  dp3 r30.y, r15.xyzx, r32.xyzx
  dp3 r30.z, r15.xyzx, r25.xyzx
  mad_sat r26.xyz, r30.xyzx, r26.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mov r27.z, r28.x
  mad r26.xyz, r26.xyzx, r27.xyzx, r28.yzwy
  dp3 r31.x, r7.xyzx, r23.xyzx
  dp3 r31.y, r7.xyzx, r32.xyzx
  dp3 r31.z, r7.xyzx, r25.xyzx
  lt r23.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r31.xyzx
  movc r17.z, r23.x, l(0), l(0.500000)
  add r25.xyz, r17.xyzx, r26.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r25.xyz, r25.xyzx, t17.xyzw, s4, l(0.000000)
  movc r18.z, r23.y, l(0), l(0.500000)
  add r23.xyw, r18.xyxz, r26.xyxz
  sample_l_indexable(texture3d)(float,float,float,float) r23.xyw, r23.xywx, t18.xywz, s4, l(0.000000)
  movc r19.z, r23.z, l(0), l(0.500000)
  add r26.xyz, r19.xyzx, r26.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r26.xyz, r26.xyzx, t19.xyzw, s4, l(0.000000)
  mul r27.xyz, r31.xyzx, r31.xyzx
  sample_l_indexable(texturecubearray)(float,float,float,float) r28.xyz, r31.xyzw, t8.xyzw, s2, l(6.000000)
  and r29.yzw, r28.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
  ieq r29.yzw, r29.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
  or r11.w, r29.z, r29.y
  or r11.w, r29.w, r11.w
  movc r28.xyz, r11.wwww, l(1.000000,1.000000,0,0), r28.xyzx
  mov r30.xyzw, r21.xyzw
  mov r29.yzw, r22.yyzw
  mov r11.w, r5.w
  mov r12.w, r1.z
  loop 
    breakc_z r12.w
    firstbit_lo r14.w, r12.w
    ishl r14.w, l(1), r14.w
    and r17.z, r12.w, r14.w
    if_nz r17.z
      not r14.w, r14.w
      and r12.w, r12.w, r14.w
      if_nz r8.w
        mov r14.w, r9.z
        mov r31.xy, r16.xwxx
        mov r17.z, l(1)
        loop 
          ige r17.w, r17.z, r20.z
          breakc_nz r17.w
          iadd r17.w, r10.w, r17.z
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r17.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r17.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r17.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r17.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r17.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r17.w, l(80), t16.xyzw
          dp3 r17.w, r32.xyzx, r15.xyzx
          add_sat r17.w, r32.w, r17.w
          mul r17.w, r17.w, r31.x
          dp3 r18.z, r33.xyzx, r15.xyzx
          add_sat r18.z, r33.w, r18.z
          mul r17.w, r17.w, r18.z
          dp3 r18.z, r34.xyzx, r15.xyzx
          add_sat r18.z, r34.w, r18.z
          mul r17.w, r17.w, r18.z
          dp3 r18.z, r35.xyzx, r15.xyzx
          add_sat r18.z, r35.w, r18.z
          mul r17.w, r17.w, r18.z
          dp3 r18.z, r36.xyzx, r15.xyzx
          add_sat r18.z, r36.w, r18.z
          mul r17.w, r17.w, r18.z
          dp3 r18.z, r37.xyzx, r15.xyzx
          add_sat r18.z, r37.w, r18.z
          mul r31.x, r17.w, r18.z
          ushr r18.w, r14.w, l(2)
          ubfe r19.z, l(1), l(2), r14.w
          and r19.w, r18.w, l(2)
          max r20.w, r31.x, r31.y
          mad r17.w, -r17.w, r18.z, l(1.000000)
          mul r17.w, r17.w, r31.y
          movc r20.y, r19.w, r17.w, r20.w
          movc r31.xy, r19.zzzz, r31.xyxx, r20.xyxx
          iadd r17.z, r17.z, l(1)
          mov r14.w, r18.w
        endloop 
        mov_sat r31.y, r31.y
        mul r14.w, r9.w, r31.y
        lt r17.z, l(0.000000), r14.w
        if_nz r17.z
          mad r32.z, r31.y, r9.w, r29.w
          mul r14.w, r29.x, r14.w
          mul r31.xzw, r14.wwww, r27.xxyz
          mul r33.xyz, r23.xywx, r31.zzzz
          mad r33.xyz, r25.xyzx, r31.xxxx, r33.xyzx
          mad r31.xzw, r26.xxyz, r31.wwww, r33.xxyz
          mul r33.xyz, r28.xyzx, r31.xzwx
          dp3 r17.z, r33.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r33.xyz, r31.xzwx, r28.xyzx, r30.xyzx
          mul r17.w, r5.y, r17.z
          mul r31.xzw, r14.wwww, r24.xxyz
          dp3 r14.w, r31.xzwx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r14.w, r5.y, r17.z, r14.w
          div r14.w, r17.w, r14.w
          mov r34.x, r30.w
          mov r34.yz, r29.yyzy
          mad r32.xyw, r31.zwzx, r14.wwww, r34.yzyx
          mov r33.w, r32.w
        else 
          mov r33.xyzw, r30.xyzw
          mov r32.xyz, r29.yzwy
        endif 
        mov r11.w, l(-1)
        mov r30.xyzw, r33.xyzw
        mov r29.yzw, r32.xxyz
        break 
      endif 
    endif 
  endloop 
  if_nz r11.w
    mov r21.xyzw, r30.xyzw
    mov r22.yzw, r29.yyzw
    mov r5.w, l(-1)
    break 
  endif 
  iadd r6.w, r6.w, l(32)
  mov r21.xyzw, r30.xyzw
  mov r22.yzw, r29.yyzw
  mov r5.w, r11.w
endloop 
if_z r5.w
  iadd r1.x, cb2[0].y, -cb2[58].x
  and r1.y, r1.x, l(-32)
  iadd r1.z, -r1.y, r1.x
  and r5.w, cb2[0].y, l(-32)
  iadd r6.w, -r5.w, cb2[0].y
  mov r15.xy, l(0,0,0,0)
  mov r16.w, l(0)
  mov r17.yz, l(0,0,1.000000,0)
  mov r18.xy, l(0,0,0,0)
  mov r19.x, l(1.000000)
  mov r20.xy, l(0,0,0,0)
  mov r23.xy, l(0,0,0,0)
  mov r24.xyzw, r21.xyzw
  mov r25.yzw, r22.yyzw
  mov r8.w, r1.y
  loop 
    uge r9.z, r8.w, cb2[0].y
    breakc_nz r9.z
    ushr r15.z, r8.w, l(5)
    iadd r16.xyz, r14.xyzx, r15.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r9.z, r16.xyzw, t7.yzxw
    ieq r9.w, r1.y, r8.w
    bfi r10.w, r1.z, l(0), l(0), r9.z
    movc r9.z, r9.w, r10.w, r9.z
    ieq r9.w, r5.w, r8.w
    ubfe r10.w, r6.w, l(0), r9.z
    movc r9.z, r9.w, r10.w, r9.z
    iadd r9.w, r8.w, cb2[0].x
    mov r26.xyzw, r24.xyzw
    mov r27.xyz, r25.yzwy
    mov r10.w, r9.z
    loop 
      breakc_z r10.w
      firstbit_lo r11.w, r10.w
      ishl r12.w, l(1), r11.w
      and r14.w, r10.w, r12.w
      if_nz r14.w
        xor r10.w, r10.w, r12.w
        iadd r12.w, r9.w, r11.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r28.xyzw, r12.w, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r16.xy, r12.w, l(16), t11.xyxx
        add r28.xyz, r28.xyzx, -v6.xyzx
        mov r16.z, r28.w
        lt r16.xyz, |r28.xyzx|, r16.zxyz
        and r12.w, r16.y, r16.x
        and r12.w, r16.z, r12.w
        if_nz r12.w
          iadd r11.w, r8.w, r11.w
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r11.w, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r15.zw, r11.w, l(96), t15.xxxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r11.w, l(116), t15.zwxy
          add r16.xyz, -r28.yzwy, v6.xyzx
          and r12.w, r29.w, l(0x0000ffff)
          ubfe r14.w, l(6), l(25), r29.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r12.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r12.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r12.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r12.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r12.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r12.w, l(80), t16.xyzw
          dp3 r17.w, r30.xyzx, r16.xyzx
          add_sat r17.w, r30.w, r17.w
          dp3 r18.w, r31.xyzx, r16.xyzx
          add_sat r18.w, r31.w, r18.w
          mul r17.w, r17.w, r18.w
          dp3 r18.w, r32.xyzx, r16.xyzx
          add_sat r18.w, r32.w, r18.w
          mul r17.w, r17.w, r18.w
          dp3 r18.w, r33.xyzx, r16.xyzx
          add_sat r18.w, r33.w, r18.w
          mul r17.w, r17.w, r18.w
          dp3 r18.w, r34.xyzx, r16.xyzx
          add_sat r18.w, r34.w, r18.w
          mul r17.w, r17.w, r18.w
          dp3 r18.w, r35.xyzx, r16.xyzx
          add_sat r18.w, r35.w, r18.w
          mul r17.x, r17.w, r18.w
          and r17.w, r15.z, l(1)
          movc r17.xw, r17.wwww, r17.xxxy, r17.zzzx
          mov r18.w, r15.z
          mov r30.xy, r17.xwxx
          mov r19.z, l(1)
          loop 
            ige r19.w, r19.z, r14.w
            breakc_nz r19.w
            iadd r19.w, r12.w, r19.z
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r19.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r19.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r19.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r19.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r19.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r19.w, l(80), t16.xyzw
            dp3 r19.w, r31.xyzx, r16.xyzx
            add_sat r19.w, r31.w, r19.w
            mul r19.w, r19.w, r30.x
            dp3 r20.w, r32.xyzx, r16.xyzx
            add_sat r20.w, r32.w, r20.w
            mul r19.w, r19.w, r20.w
            dp3 r20.w, r33.xyzx, r16.xyzx
            add_sat r20.w, r33.w, r20.w
            mul r19.w, r19.w, r20.w
            dp3 r20.w, r34.xyzx, r16.xyzx
            add_sat r20.w, r34.w, r20.w
            mul r19.w, r19.w, r20.w
            dp3 r20.w, r35.xyzx, r16.xyzx
            add_sat r20.w, r35.w, r20.w
            mul r19.w, r19.w, r20.w
            dp3 r20.w, r36.xyzx, r16.xyzx
            add_sat r20.w, r36.w, r20.w
            mul r30.x, r19.w, r20.w
            ushr r23.w, r18.w, l(2)
            ubfe r28.w, l(1), l(2), r18.w
            and r30.z, r23.w, l(2)
            max r30.w, r30.x, r30.y
            mad r19.w, -r19.w, r20.w, l(1.000000)
            mul r19.w, r19.w, r30.y
            movc r19.y, r30.z, r19.w, r30.w
            movc r30.xy, r28.wwww, r30.xyxx, r19.xyxx
            iadd r19.z, r19.z, l(1)
            mov r18.w, r23.w
          endloop 
          mov_sat r30.y, r30.y
          mul r12.w, r15.w, r30.y
          lt r14.w, l(0.000000), r12.w
          if_nz r14.w
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r11.w, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r11.w, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r11.w, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r11.w, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r11.w, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r11.w, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r11.w, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r11.w, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xyzw, r11.w, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r40.xyzw, r11.w, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r41.xy, r11.w, l(212), t15.xyxx
            mad r27.z, r30.y, r15.w, r27.z
            mul r11.w, r29.z, r12.w
            mov r29.z, r36.z
            dp3 r12.w, r13.xyzx, r29.xyzx
            dp3 r14.w, r16.xyzx, r29.xyzx
            add r14.w, -r36.w, r14.w
            ge r15.z, r14.w, l(0.000000)
            max r14.w, r4.w, |r14.w|
            movc r14.w, r15.z, r14.w, -r14.w
            max r12.w, -r12.w, l(0.00000010)
            div r12.w, r14.w, r12.w
            min r12.w, |r12.w|, l(131072.000000)
            mov r36.z, r37.z
            dp3 r14.w, r13.xyzx, r36.xyzx
            dp3 r15.z, r16.xyzx, r36.xyzx
            add r15.z, -r37.w, r15.z
            ge r15.w, r15.z, l(0.000000)
            max r15.z, r4.w, |r15.z|
            movc r15.z, r15.w, r15.z, -r15.z
            max r14.w, -r14.w, l(0.00000010)
            div r14.w, r15.z, r14.w
            min r12.w, r12.w, |r14.w|
            mov r37.z, r38.z
            dp3 r14.w, r13.xyzx, r37.xyzx
            dp3 r15.z, r16.xyzx, r37.xyzx
            add r15.z, -r38.w, r15.z
            ge r15.w, r15.z, l(0.000000)
            max r15.z, r4.w, |r15.z|
            movc r15.z, r15.w, r15.z, -r15.z
            max r14.w, -r14.w, l(0.00000010)
            div r14.w, r15.z, r14.w
            min r12.w, r12.w, |r14.w|
            mov r38.z, r39.z
            dp3 r14.w, r13.xyzx, r38.xyzx
            dp3 r15.z, r16.xyzx, r38.xyzx
            add r15.z, -r39.w, r15.z
            ge r15.w, r15.z, l(0.000000)
            max r15.z, r4.w, |r15.z|
            movc r15.z, r15.w, r15.z, -r15.z
            max r14.w, -r14.w, l(0.00000010)
            div r14.w, r15.z, r14.w
            min r12.w, r12.w, |r14.w|
            mov r39.z, r40.x
            dp3 r14.w, r13.xyzx, r39.xyzx
            dp3 r15.z, r16.xyzx, r39.xyzx
            add r15.z, -r40.y, r15.z
            ge r15.w, r15.z, l(0.000000)
            max r15.z, r4.w, |r15.z|
            movc r15.z, r15.w, r15.z, -r15.z
            max r14.w, -r14.w, l(0.00000010)
            div r14.w, r15.z, r14.w
            min r12.w, r12.w, |r14.w|
            mov r41.zw, r40.zzzw
            dp3 r14.w, r13.zxyz, r41.xzwx
            dp3 r15.z, r16.zxyz, r41.xzwx
            add r15.z, -r41.y, r15.z
            ge r15.w, r15.z, l(0.000000)
            max r15.z, r4.w, |r15.z|
            movc r15.z, r15.w, r15.z, -r15.z
            max r14.w, -r14.w, l(0.00000010)
            div r14.w, r15.z, r14.w
            min r12.w, r12.w, |r14.w|
            mov r29.x, r33.w
            mov r29.yz, r34.zzwz
            add r19.yzw, r16.xxyz, r29.xxyz
            mad r19.yzw, r13.xxyz, r12.wwww, r19.yyzw
            dp3 r14.w, r19.yzwy, r19.yzwy
            sqrt r14.w, r14.w
            div r12.w, r12.w, r14.w
            add r12.w, r12.w, r12.w
            sqrt r12.w, r12.w
            mad r12.w, r3.w, l(5.000000), r12.w
            add r12.w, r12.w, l(-0.844800)
            mov r28.y, r31.z
            mov r28.z, r32.x
            dp3 r36.x, r19.yzwy, r28.xyzx
            mov r29.xy, r31.xwxx
            mov r29.z, r32.w
            dp3 r36.y, r19.yzwy, r29.xyzx
            mov r32.x, r31.y
            dp3 r36.z, r19.yzwy, r32.xyzx
            ubfe r14.w, l(9), l(16), r29.w
            utof r36.w, r14.w
            sample_l_indexable(texturecubearray)(float,float,float,float) r19.yzw, r36.xyzw, t8.wxyz, s2, r12.w
            and r30.xzw, r19.yyzw, l(0x7fffffff, 0, 0x7fffffff, 0x7fffffff)
            ieq r30.xzw, r30.xxzw, l(0x7f800000, 0, 0x7f800000, 0x7f800000)
            or r12.w, r30.z, r30.x
            or r12.w, r30.w, r12.w
            movc r19.yzw, r12.wwww, l(0,1.000000,1.000000,0), r19.yyzw
            dp3 r31.x, r16.xyzx, r28.xyzx
            dp3 r31.y, r16.xyzx, r29.xyzx
            dp3 r31.z, r16.xyzx, r32.xyzx
            mad_sat r16.xyz, r31.xyzx, r33.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
            mov r34.z, r35.x
            mad r16.xyz, r16.xyzx, r34.xyzx, r35.yzwy
            dp3 r36.x, r7.xyzx, r28.xyzx
            dp3 r36.y, r7.xyzx, r29.xyzx
            dp3 r36.z, r7.xyzx, r32.xyzx
            lt r28.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r36.xyzx
            movc r18.z, r28.x, l(0), l(0.500000)
            add r29.xyz, r16.xyzx, r18.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r29.xyz, r29.xyzx, t17.xyzw, s4, l(0.000000)
            mul r30.xzw, r36.xxyz, r36.xxyz
            mul r30.xzw, r11.wwww, r30.xxzw
            movc r20.z, r28.y, l(0), l(0.500000)
            add r28.xyw, r16.xyxz, r20.xyxz
            sample_l_indexable(texture3d)(float,float,float,float) r28.xyw, r28.xywx, t18.xywz, s4, l(0.000000)
            mul r28.xyw, r30.zzzz, r28.xyxw
            mad r28.xyw, r29.xyxz, r30.xxxx, r28.xyxw
            movc r23.z, r28.z, l(0), l(0.500000)
            add r16.xyz, r16.xyzx, r23.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r16.xyz, r16.xyzx, t19.xyzw, s4, l(0.000000)
            mad r16.xyz, r16.xyzx, r30.wwww, r28.xywx
            sample_l_indexable(texturecubearray)(float,float,float,float) r28.xyz, r36.xyzw, t8.xyzw, s2, l(6.000000)
            and r29.xyz, r28.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
            ieq r29.xyz, r29.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
            or r12.w, r29.y, r29.x
            or r12.w, r29.z, r12.w
            movc r28.xyz, r12.wwww, l(1.000000,1.000000,0,0), r28.xyzx
            mul r29.xyz, r16.xyzx, r28.xyzx
            dp3 r12.w, r29.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r26.xyz, r16.xyzx, r28.xyzx, r26.xyzx
            mul r14.w, r5.y, r12.w
            mul r16.xyz, r11.wwww, r19.yzwy
            dp3 r11.w, r16.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r11.w, r5.y, r12.w, r11.w
            div r11.w, r14.w, r11.w
            mov r28.x, r26.w
            mov r28.yz, r27.xxyx
            mad r27.xyw, r16.yzyx, r11.wwww, r28.yzyx
            mov r26.w, r27.w
          endif 
        endif 
      endif 
    endloop 
    mov r24.xyzw, r26.xyzw
    mov r25.yzw, r27.xxyz
    iadd r8.w, r8.w, l(32)
  endloop 
  lt r5.w, r25.w, l(1.000000)
  if_nz r5.w
    mov r15.xy, l(0,0,0,0)
    mov r16.w, l(0)
    mov r17.yz, l(0,0,1.000000,0)
    mov r18.xy, l(0,0,0,0)
    mov r19.x, l(1.000000)
    mov r20.xy, l(0,0,0,0)
    mov r23.xy, l(0,0,0,0)
    mov r26.x, r24.w
    mov r26.yzw, r25.yyzw
    mov r27.xyz, r24.xyzx
    mov r5.w, r25.w
    mov r6.w, l(0)
    loop 
      uge r8.w, r6.w, r1.x
      breakc_nz r8.w
      ushr r15.z, r6.w, l(5)
      iadd r16.xyz, r14.xyzx, r15.xyzx
      ld_indexable(texture2darray)(uint,uint,uint,uint) r8.w, r16.xyzw, t7.yzwx
      ieq r9.z, r1.y, r6.w
      ubfe r9.w, r1.z, l(0), r8.w
      movc r8.w, r9.z, r9.w, r8.w
      iadd r9.z, r6.w, cb2[0].x
      mov r28.xyzw, r26.xyzw
      mov r16.xyz, r27.xyzx
      mov r9.w, r5.w
      mov r10.w, r8.w
      loop 
        breakc_z r10.w
        firstbit_lo r11.w, r10.w
        ishl r12.w, l(1), r11.w
        and r14.w, r10.w, r12.w
        if_nz r14.w
          xor r10.w, r10.w, r12.w
          iadd r12.w, r9.z, r11.w
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r29.xyzw, r12.w, l(0), t11.xyzw
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r30.xy, r12.w, l(16), t11.xyxx
          add r29.xyz, r29.xyzx, -v6.xyzx
          mov r30.z, r29.w
          lt r29.xyz, |r29.xyzx|, r30.zxyz
          and r12.w, r29.y, r29.x
          and r12.w, r29.z, r12.w
          if_nz r12.w
            iadd r11.w, r6.w, r11.w
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r11.w, l(0), t15.wxyz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r15.zw, r11.w, l(96), t15.xxxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r11.w, l(116), t15.zwxy
            add r31.xyz, -r29.yzwy, v6.xyzx
            and r12.w, r30.w, l(0x0000ffff)
            ubfe r14.w, l(6), l(25), r30.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r12.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r12.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r12.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r12.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r12.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r12.w, l(80), t16.xyzw
            dp3 r17.w, r32.xyzx, r31.xyzx
            add_sat r17.w, r32.w, r17.w
            dp3 r18.w, r33.xyzx, r31.xyzx
            add_sat r18.w, r33.w, r18.w
            mul r17.w, r17.w, r18.w
            dp3 r18.w, r34.xyzx, r31.xyzx
            add_sat r18.w, r34.w, r18.w
            mul r17.w, r17.w, r18.w
            dp3 r18.w, r35.xyzx, r31.xyzx
            add_sat r18.w, r35.w, r18.w
            mul r17.w, r17.w, r18.w
            dp3 r18.w, r36.xyzx, r31.xyzx
            add_sat r18.w, r36.w, r18.w
            mul r17.w, r17.w, r18.w
            dp3 r18.w, r37.xyzx, r31.xyzx
            add_sat r18.w, r37.w, r18.w
            mul r17.x, r17.w, r18.w
            and r17.w, r15.z, l(1)
            movc r17.xw, r17.wwww, r17.xxxy, r17.zzzx
            mov r18.w, r15.z
            mov r32.xy, r17.xwxx
            mov r19.z, l(1)
            loop 
              ige r19.w, r19.z, r14.w
              breakc_nz r19.w
              iadd r19.w, r12.w, r19.z
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r19.w, l(0), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r19.w, l(16), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r19.w, l(32), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r19.w, l(48), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r19.w, l(64), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r38.xyzw, r19.w, l(80), t16.xyzw
              dp3 r19.w, r33.xyzx, r31.xyzx
              add_sat r19.w, r33.w, r19.w
              mul r19.w, r19.w, r32.x
              dp3 r20.w, r34.xyzx, r31.xyzx
              add_sat r20.w, r34.w, r20.w
              mul r19.w, r19.w, r20.w
              dp3 r20.w, r35.xyzx, r31.xyzx
              add_sat r20.w, r35.w, r20.w
              mul r19.w, r19.w, r20.w
              dp3 r20.w, r36.xyzx, r31.xyzx
              add_sat r20.w, r36.w, r20.w
              mul r19.w, r19.w, r20.w
              dp3 r20.w, r37.xyzx, r31.xyzx
              add_sat r20.w, r37.w, r20.w
              mul r19.w, r19.w, r20.w
              dp3 r20.w, r38.xyzx, r31.xyzx
              add_sat r20.w, r38.w, r20.w
              mul r32.x, r19.w, r20.w
              ushr r22.w, r18.w, l(2)
              ubfe r23.w, l(1), l(2), r18.w
              and r27.w, r22.w, l(2)
              max r29.w, r32.x, r32.y
              mad r19.w, -r19.w, r20.w, l(1.000000)
              mul r19.w, r19.w, r32.y
              movc r19.y, r27.w, r19.w, r29.w
              movc r32.xy, r23.wwww, r32.xyxx, r19.xyxx
              iadd r19.z, r19.z, l(1)
              mov r18.w, r22.w
            endloop 
            add_sat r12.w, -r9.w, r32.y
            mul r14.w, r15.w, r12.w
            lt r15.z, l(0.000000), r14.w
            if_nz r15.z
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r11.w, l(16), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r11.w, l(32), t15.yxwz
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r11.w, l(48), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r11.w, l(64), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r11.w, l(80), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r11.w, l(132), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xyzw, r11.w, l(148), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r40.xyzw, r11.w, l(164), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r41.xyzw, r11.w, l(180), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r42.xyzw, r11.w, l(196), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r43.xy, r11.w, l(212), t15.xyxx
              mad r28.w, r12.w, r15.w, r28.w
              mul r11.w, r30.z, r14.w
              mov r30.z, r38.z
              dp3 r12.w, r13.xyzx, r30.xyzx
              dp3 r14.w, r31.xyzx, r30.xyzx
              add r14.w, -r38.w, r14.w
              ge r15.z, r14.w, l(0.000000)
              max r14.w, r4.w, |r14.w|
              movc r14.w, r15.z, r14.w, -r14.w
              max r12.w, -r12.w, l(0.00000010)
              div r12.w, r14.w, r12.w
              min r12.w, |r12.w|, l(131072.000000)
              mov r38.z, r39.z
              dp3 r14.w, r13.xyzx, r38.xyzx
              dp3 r15.z, r31.xyzx, r38.xyzx
              add r15.z, -r39.w, r15.z
              ge r15.w, r15.z, l(0.000000)
              max r15.z, r4.w, |r15.z|
              movc r15.z, r15.w, r15.z, -r15.z
              max r14.w, -r14.w, l(0.00000010)
              div r14.w, r15.z, r14.w
              min r12.w, r12.w, |r14.w|
              mov r39.z, r40.z
              dp3 r14.w, r13.xyzx, r39.xyzx
              dp3 r15.z, r31.xyzx, r39.xyzx
              add r15.z, -r40.w, r15.z
              ge r15.w, r15.z, l(0.000000)
              max r15.z, r4.w, |r15.z|
              movc r15.z, r15.w, r15.z, -r15.z
              max r14.w, -r14.w, l(0.00000010)
              div r14.w, r15.z, r14.w
              min r12.w, r12.w, |r14.w|
              mov r40.z, r41.z
              dp3 r14.w, r13.xyzx, r40.xyzx
              dp3 r15.z, r31.xyzx, r40.xyzx
              add r15.z, -r41.w, r15.z
              ge r15.w, r15.z, l(0.000000)
              max r15.z, r4.w, |r15.z|
              movc r15.z, r15.w, r15.z, -r15.z
              max r14.w, -r14.w, l(0.00000010)
              div r14.w, r15.z, r14.w
              min r12.w, r12.w, |r14.w|
              mov r41.z, r42.x
              dp3 r14.w, r13.xyzx, r41.xyzx
              dp3 r15.z, r31.xyzx, r41.xyzx
              add r15.z, -r42.y, r15.z
              ge r15.w, r15.z, l(0.000000)
              max r15.z, r4.w, |r15.z|
              movc r15.z, r15.w, r15.z, -r15.z
              max r14.w, -r14.w, l(0.00000010)
              div r14.w, r15.z, r14.w
              min r12.w, r12.w, |r14.w|
              mov r43.zw, r42.zzzw
              dp3 r14.w, r13.zxyz, r43.xzwx
              dp3 r15.z, r31.zxyz, r43.xzwx
              add r15.z, -r43.y, r15.z
              ge r15.w, r15.z, l(0.000000)
              max r15.z, r4.w, |r15.z|
              movc r15.z, r15.w, r15.z, -r15.z
              max r14.w, -r14.w, l(0.00000010)
              div r14.w, r15.z, r14.w
              min r12.w, r12.w, |r14.w|
              mov r30.x, r35.w
              mov r30.yz, r36.zzwz
              add r19.yzw, r31.xxyz, r30.xxyz
              mad r19.yzw, r13.xxyz, r12.wwww, r19.yyzw
              dp3 r14.w, r19.yzwy, r19.yzwy
              sqrt r14.w, r14.w
              div r12.w, r12.w, r14.w
              add r12.w, r12.w, r12.w
              sqrt r12.w, r12.w
              mad r12.w, r3.w, l(5.000000), r12.w
              add r12.w, r12.w, l(-0.844800)
              mov r29.y, r33.z
              mov r29.z, r34.x
              dp3 r38.x, r19.yzwy, r29.xyzx
              mov r30.xy, r33.xwxx
              mov r30.z, r34.w
              dp3 r38.y, r19.yzwy, r30.xyzx
              mov r34.x, r33.y
              dp3 r38.z, r19.yzwy, r34.xyzx
              ubfe r14.w, l(9), l(16), r30.w
              utof r38.w, r14.w
              sample_l_indexable(texturecubearray)(float,float,float,float) r19.yzw, r38.xyzw, t8.wxyz, s2, r12.w
              and r32.xzw, r19.yyzw, l(0x7fffffff, 0, 0x7fffffff, 0x7fffffff)
              ieq r32.xzw, r32.xxzw, l(0x7f800000, 0, 0x7f800000, 0x7f800000)
              or r12.w, r32.z, r32.x
              or r12.w, r32.w, r12.w
              movc r19.yzw, r12.wwww, l(0,1.000000,1.000000,0), r19.yyzw
              dp3 r33.x, r31.xyzx, r29.xyzx
              dp3 r33.y, r31.xyzx, r30.xyzx
              dp3 r33.z, r31.xyzx, r34.xyzx
              mad_sat r31.xyz, r33.xyzx, r35.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
              mov r36.z, r37.x
              mad r31.xyz, r31.xyzx, r36.xyzx, r37.yzwy
              dp3 r38.x, r7.xyzx, r29.xyzx
              dp3 r38.y, r7.xyzx, r30.xyzx
              dp3 r38.z, r7.xyzx, r34.xyzx
              lt r29.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r38.xyzx
              movc r18.z, r29.x, l(0), l(0.500000)
              add r30.xyz, r18.xyzx, r31.xyzx
              sample_l_indexable(texture3d)(float,float,float,float) r30.xyz, r30.xyzx, t17.xyzw, s4, l(0.000000)
              mul r32.xzw, r38.xxyz, r38.xxyz
              mul r32.xzw, r11.wwww, r32.xxzw
              movc r20.z, r29.y, l(0), l(0.500000)
              add r29.xyw, r20.xyxz, r31.xyxz
              sample_l_indexable(texture3d)(float,float,float,float) r29.xyw, r29.xywx, t18.xywz, s4, l(0.000000)
              mul r29.xyw, r32.zzzz, r29.xyxw
              mad r29.xyw, r30.xyxz, r32.xxxx, r29.xyxw
              movc r23.z, r29.z, l(0), l(0.500000)
              add r30.xyz, r23.xyzx, r31.xyzx
              sample_l_indexable(texture3d)(float,float,float,float) r30.xyz, r30.xyzx, t19.xyzw, s4, l(0.000000)
              mad r29.xyz, r30.xyzx, r32.wwww, r29.xywx
              sample_l_indexable(texturecubearray)(float,float,float,float) r30.xyz, r38.xyzw, t8.xyzw, s2, l(6.000000)
              and r31.xyz, r30.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
              ieq r31.xyz, r31.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
              or r12.w, r31.y, r31.x
              or r12.w, r31.z, r12.w
              movc r30.xyz, r12.wwww, l(1.000000,1.000000,0,0), r30.xyzx
              mul r31.xyz, r29.xyzx, r30.xyzx
              dp3 r12.w, r31.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
              mad r16.xyz, r29.xyzx, r30.xyzx, r16.xyzx
              mul r14.w, r5.y, r12.w
              mul r19.yzw, r11.wwww, r19.yyzw
              dp3 r11.w, r19.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
              mad r11.w, r5.y, r12.w, r11.w
              div r11.w, r14.w, r11.w
              mad r28.xyz, r19.yzwy, r11.wwww, r28.xyzx
            endif 
          endif 
        endif 
      endloop 
      mov r26.xyzw, r28.xyzw
      mov r27.xyz, r16.xyzx
      iadd r6.w, r6.w, l(32)
    endloop 
    mov r25.xyzw, r26.zxyw
    mov r24.xyz, r27.xyzx
    mov r25.xyzw, r25.yzxw
  else 
    mov r25.x, r24.w
  endif 
  max r1.x, r25.w, l(1.000000)
  rcp r1.x, r1.x
  mov_sat r25.w, r25.w
  mul r21.xyz, r1.xxxx, r24.xyzx
  mul r22.xyz, r1.xxxx, r25.xyzx
  lt r1.y, r25.w, l(0.990000)
  if_nz r1.y
    add r1.y, -r25.w, l(1.000000)
    mul r1.z, r1.y, cb2[19].x
    add r15.xyz, v6.xyzx, -cb2[35].xyzx
    mul r16.x, r15.x, cb2[35].w
    mul r16.yz, r15.yyzy, cb2[36].xxyx
    add_sat r15.xyz, r16.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    mul r16.xy, r15.xyxx, cb2[36].zwzz
    mul r16.z, r15.z, cb2[37].x
    add r15.xyz, r16.xyzx, cb2[37].yzwy
    lt r16.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r7.xyzx
    movc r16.xyz, r16.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
    mov r16.w, l(0)
    add r17.xyz, r15.xyzx, r16.wwxw
    sample_l_indexable(texture3d)(float,float,float,float) r17.xyz, r17.xyzx, t17.xyzw, s4, l(0.000000)
    mul r18.xyz, r7.xyzx, r7.xyzx
    mul r18.xyz, r1.zzzz, r18.xyzx
    add r19.xyz, r15.xyzx, r16.wwyw
    sample_l_indexable(texture3d)(float,float,float,float) r19.xyz, r19.xyzx, t18.xyzw, s4, l(0.000000)
    mul r19.xyz, r18.yyyy, r19.xyzx
    mad r17.xyz, r17.xyzx, r18.xxxx, r19.xyzx
    add r15.xyz, r15.xyzx, r16.wwzw
    sample_l_indexable(texture3d)(float,float,float,float) r15.xyz, r15.xyzx, t19.xyzw, s4, l(0.000000)
    mad r15.xyz, r15.xyzx, r18.zzzz, r17.xyzx
    mov r7.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r16.xyz, r7.xyzw, t8.xyzw, s2, l(6.000000)
    mul r15.xyz, r15.xyzx, r16.xyzx
    dp3 r1.z, r15.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
    mad r21.xyz, r24.xyzx, r1.xxxx, r15.xyzx
    mov r13.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r15.xyz, r13.xyzw, t8.xyzw, s2, r4.z
    mad r1.x, cb2[19].x, r1.y, -r1.z
    mad r1.x, r9.y, r1.x, r1.z
    mad r22.xyz, r15.xyzx, r1.xxxx, r22.xyzx
  endif 
else 
  mov r22.x, r21.w
endif 
add r1.x, r2.w, r9.x
log r1.x, |r1.x|
mul r1.x, r1.x, r3.z
exp r1.x, r1.x
add r1.x, r2.w, r1.x
add_sat r1.x, r1.x, l(-1.000000)
mul r15.xyz, r2.wwww, r21.xyzx
mad r1.yz, r9.xxyx, l(0.000000, 0.984375, 0.984375, 0.000000), l(0.000000, 0.00781250, 0.00781250, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r1.yz, r1.yzyy, t5.zxyw, s2, l(0.000000)
mul r9.yzw, r1.xxxx, r22.xxyz
mul r16.xyz, r1.yyyy, r9.zwyz
mul r1.xyz, r1.zzzz, r9.yzwy
sqrt r2.w, r3.z
mad r2.w, r2.w, l(0.500000), l(0.500000)
mul r2.w, r2.w, r2.w
mul r3.w, r2.w, l(0.500000)
mad r2.w, -r2.w, l(0.500000), l(1.000000)
mad r4.z, r9.x, r2.w, r3.w
mul r2.w, r2.w, r4.z
mul r3.w, r3.w, r4.z
if_z cb0[27].z
  dp3 r4.z, r7.xyzx, cb2[17].xyzx
  ge r4.z, l(0.000000), |r4.z|
  if_nz r4.z
    mov r4.w, l(0)
  endif 
  if_z r4.z
    mul r9.yzw, v6.yyyy, cb2[29].xxyz
    mad r9.yzw, v6.xxxx, cb2[28].xxyz, r9.yyzw
    mad r9.yzw, v6.zzzz, cb2[30].xxyz, r9.yyzw
    add r9.yzw, r9.yyzw, cb2[31].xxyz
    add r4.z, r9.w, -cb2[17].w
    mad r4.z, -r4.z, l(0.00006104), l(1.000000)
    mov_sat r5.y, r4.z
    eq r5.y, r4.z, r5.y
    if_nz r5.y
      mov r5.yw, l(0,0,0,0)
      loop 
        ge r6.w, r5.y, l(3.000000)
        breakc_nz r6.w
        ftou r6.w, r5.y
        add r17.xy, r9.yzyy, -cb2[r6.w + 20].xyxx
        max r7.w, |r17.y|, |r17.x|
        mul r5.w, r7.w, cb2[r6.w + 20].z
        lt r6.w, r5.w, l(1.000000)
        if_nz r6.w
          break 
        endif 
        add r5.y, r5.y, l(1.000000)
        mov r5.w, l(0)
      endloop 
    else 
      mov r5.yw, l(0,3.000000,0,0)
    endif 
    ge r6.w, r5.y, l(3.000000)
    if_nz r6.w
      mul r17.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
      rcp r18.xz, r17.xxxx
      mov r18.y, -r18.z
      mad r17.xyz, r9.yzyy, r18.xyzx, r17.yzyy
      add r18.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
      max r17.xyz, r17.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
      min r17.xyz, r18.xyzx, r17.xyzx
      mul r18.xy, r17.zyzz, cb2[32].xxxx
      round_ni r18.xy, r18.xyxx
      mul r7.w, r18.y, cb2[27].x
      mad r7.w, r7.w, cb2[32].x, r18.x
      ftou r7.w, r7.w
      iadd r7.w, r7.w, cb2[32].y
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r8.w, r7.w, l(0), t23.xxxx
      and r10.w, r8.w, l(0x40000000)
      ishl r11.w, r8.w, l(2)
      if_z r10.w
        and r10.w, r8.w, l(0x01ffffff)
        iadd r18.x, r7.w, r10.w
        ushr r7.w, r8.w, l(25)
        utof r7.w, r7.w
        mul r17.xyz, r7.wwww, r17.xyzx
        frc r17.xyz, r17.xyzx
        mul r17.xyz, r17.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
        ftou r17.xyz, r17.xyzx
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.x, l(0), t23.xxxx
        ushr r19.xy, r17.zyzz, l(6, 6, 0, 0)
        and r7.w, r18.z, l(0xc0000000)
        iadd r8.w, r18.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r8.w, r8.w, l(0), t23.xxxx
        movc r8.w, r19.y, r18.z, r8.w
        ushr r10.w, r8.w, l(13)
        movc r8.w, r19.x, r10.w, r8.w
        and r8.w, r8.w, l(8191)
        iadd r19.x, r8.w, r18.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.z, r19.x, l(0), t23.xxxx
        mov r18.y, l(0)
        mov r19.y, l(1)
        movc r19.xyz, r7.wwww, r18.xyzx, r19.xyzx
        movc r20.yz, r7.wwww, l(0,6,1,0), l(0,5,2,0)
        ushr r21.xy, r17.zyzz, r20.yyyy
        and r21.xy, r21.xyxx, l(1, 1, 0, 0)
        and r8.w, r19.z, l(0xc0000000)
        iadd r10.w, r19.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r10.w, r10.w, l(0), t23.xxxx
        movc r10.w, r21.y, r19.z, r10.w
        ushr r12.w, r10.w, l(13)
        movc r10.w, r21.x, r12.w, r10.w
        and r10.w, r10.w, l(8191)
        iadd r20.x, r10.w, r19.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.w, r20.x, l(0), t23.xxxx
        movc r19.xyz, r8.wwww, r19.xyzx, r20.xzwx
        movc r18.xyz, r7.wwww, r18.xyzx, r19.xyzx
        and r7.w, r18.z, l(0xc0000000)
        if_z r7.w
          iadd r7.w, -r18.y, l(6)
          ushr r19.xy, r17.zyzz, r7.wwww
          or r7.w, r18.z, l(0x40000000)
          bfi r8.w, l(1), l(1), r19.y, l(0)
          bfi r8.w, l(1), l(0), r19.x, r8.w
          imul null, r8.w, r8.w, l(10)
          ushr r7.w, r7.w, r8.w
          and r7.w, r7.w, l(1023)
          iadd r19.x, r7.w, r18.x
          ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.w, r19.x, l(0), t23.xxxx
          iadd r19.yz, r18.yyyy, l(0, 1, 2, 0)
          iadd r7.w, -r19.y, l(6)
          ushr r18.yw, r17.zzzy, r7.wwww
          and r7.w, r19.w, l(0xc0000000)
          or r8.w, r19.w, l(0x40000000)
          bfi r10.w, l(1), l(1), r18.w, l(0)
          bfi r10.w, l(1), l(0), r18.y, r10.w
          imul null, r10.w, r10.w, l(10)
          ushr r8.w, r8.w, r10.w
          and r8.w, r8.w, l(1023)
          iadd r20.x, r8.w, r19.x
          ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.z, r20.x, l(0), t23.xxxx
          mov r20.y, r19.z
          movc r20.xyz, r7.wwww, r19.xywx, r20.xyzx
          iadd r8.w, -r20.y, l(6)
          ushr r18.yw, r17.zzzy, r8.wwww
          and r8.w, r20.z, l(0xc0000000)
          or r10.w, r20.z, l(0x40000000)
          bfi r12.w, l(1), l(1), r18.w, l(0)
          bfi r12.w, l(1), l(0), r18.y, r12.w
          imul null, r12.w, r12.w, l(10)
          ushr r10.w, r10.w, r12.w
          and r10.w, r10.w, l(1023)
          iadd r21.x, r10.w, r20.x
          ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r21.y, r21.x, l(0), t23.xxxx
          movc r18.yw, r8.wwww, r20.xxxz, r21.xxxy
          movc r18.xz, r7.wwww, r19.xxwx, r18.yywy
        endif 
        and r7.w, r18.z, l(0xc0000000)
        if_z r7.w
          ubfe r8.w, l(14), l(15), r18.z
          utof r8.w, r8.w
          mul r8.w, r8.w, cb2[27].w
          mul r8.w, r8.w, l(0.00006104)
          and r18.yw, r18.zzzz, l(0, 0x00007fff, 0, 0x20000000)
          utof r10.w, r18.y
          mul r10.w, r10.w, cb2[27].w
          mul r10.w, r10.w, l(0.00003052)
          and r12.w, r17.y, l(3)
          iadd r12.w, r12.w, r18.x
          iadd r12.w, r12.w, l(1)
          ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r12.w, r12.w, l(0), t23.xxxx
          bfi r17.xyw, l(2, 2, 0, 1), l(3, 1, 0, 4), r17.xyxz, l(0, 0, 0, 0)
          ushr r12.w, r12.w, r17.x
          and r12.w, r12.w, l(255)
          utof r12.w, r12.w
          mul r12.w, r10.w, r12.w
          mad r12.w, r12.w, l(0.00392157), r8.w
          iadd r13.w, r17.y, l(1)
          ubfe r14.w, l(1), l(1), r17.z
          iadd r13.w, r13.w, r14.w
          iadd r13.w, r13.w, r18.x
          ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r13.w, r13.w, l(0), t23.xxxx
          ushr r13.w, r13.w, r17.w
          and r13.w, r13.w, l(0x0000ffff)
          utof r13.w, r13.w
          mul r10.w, r10.w, r13.w
          mad r8.w, r10.w, l(0.00001526), r8.w
          movc r11.w, r18.w, r12.w, r8.w
        else 
          and r8.w, r18.z, l(0x80000000)
          iadd r10.w, r18.x, l(1)
          ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r10.w, r10.w, l(0), t23.xxxx
          movc r8.w, r8.w, r10.w, l(0)
          ishl r10.w, r18.z, l(2)
          ushr r12.w, r8.w, l(16)
          f16tof32 r12.w, r12.w
          and r8.w, r8.w, l(0x0000ffff)
          f16tof32 r8.w, r8.w
          mad r10.w, r9.y, r12.w, r10.w
          mad r8.w, r9.z, r8.w, r10.w
          movc r11.w, r7.w, r8.w, r11.w
        endif 
      endif 
      mad r7.w, -cb2[27].z, l(2.000000), r9.w
      lt r7.w, r11.w, r7.w
      movc r4.w, r7.w, l(0), l(1.000000)
    endif 
    if_z r6.w
      if_z cb2[58].y
        ftou r6.w, r5.y
        add r17.xy, r9.yzyy, -cb2[r6.w + 20].xyxx
        mul r17.xy, r17.xyxx, cb2[r6.w + 20].zzzz
        mad r17.xy, r17.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
        itof r6.w, cb2[26].y
        add r17.z, r5.y, r6.w
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r6.w, r17.xyzx, t13.xxxx, s13, r4.z
        sample_l_indexable(texture2darray)(float,float,float,float) r7.w, r17.xyzx, t31.yzwx, s0, l(0.000000)
        add r6.w, r6.w, r7.w
        add_sat r6.w, r6.w, l(-1.000000)
        mul r7.w, r6.w, r6.w
        mul r4.w, r6.w, r7.w
      endif 
      if_nz cb2[58].y
        mov r17.x, -r4.x
        ftou r6.w, r5.y
        add r5.y, r5.y, l(1.000000)
        min r5.y, r5.y, l(2.000000)
        add r5.w, -r5.w, l(1.000000)
        mul r5.w, r5.w, l(28.000000)
        ftou r5.yw, r5.yyyw
        add r18.xy, r9.yzyy, -cb2[r6.w + 20].xyxx
        mul r18.xy, r18.xyxx, cb2[r6.w + 20].zzzz
        mad r18.xy, r18.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
        add r9.yz, r9.yyzy, -cb2[r5.y + 20].xxyx
        mul r9.yz, r9.yyzy, cb2[r5.y + 20].zzzz
        mad r9.yz, r9.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
        mov r17.y, r12.x
        mov r17.z, r4.x
        mov r7.w, l(0)
        mov r8.w, l(0)
        loop 
          uge r9.w, r8.w, l(8)
          breakc_nz r9.w
          ult r9.w, r5.w, r8.w
          movc r18.zw, r9.wwww, r9.yyyz, r18.xxxy
          movc r10.w, r9.w, cb2[r5.y + 20].w, cb2[r6.w + 20].w
          movc r9.w, r9.w, r5.y, r6.w
          dp2 r19.x, icb[r8.w + 0].yxyy, r17.xyxx
          dp2 r19.y, icb[r8.w + 0].yxyy, r17.yzyy
          mad r19.xy, r19.xyxx, r10.wwww, r18.zwzz
          iadd r9.w, r9.w, cb2[26].y
          utof r19.z, r9.w
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r9.w, r19.xyzx, t13.xxxx, s13, r4.z
          sample_l_indexable(texture2darray)(float,float,float,float) r10.w, r19.xyzx, t31.yzwx, s0, l(0.000000)
          add r9.w, r9.w, r10.w
          add_sat r9.w, r9.w, l(-1.000000)
          mad r7.w, r9.w, l(0.125000), r7.w
          iadd r8.w, r8.w, l(1)
        endloop 
        mul r4.z, r7.w, r7.w
        mul r4.w, r7.w, r4.z
      endif 
    endif 
  endif 
else 
  mov r4.w, l(1.000000)
endif 
dp3 r4.z, r7.xyzx, cb2[17].xyzx
lt r5.y, l(0.000000), |r4.z|
if_nz r5.y
  lt r5.y, l(0.000000), r4.w
  if_nz r5.y
    mul r5.y, r3.y, cb2[18].w
    mul r5.y, r5.y, l(0.250000)
    if_nz cb2[23].x
      add r17.xyz, v6.xyzx, cb1[24].xyzx
      mov r17.w, l(1.000000)
      dp4 r5.w, cb2[24].xyzw, r17.xyzw
      dp4 r6.w, cb2[25].xyzw, r17.xyzw
      frc r17.x, r5.w
      frc r17.y, r6.w
      iadd r5.w, l(-1), cb2[23].x
      utof r17.z, r5.w
      sample_l_indexable(texture2darray)(float,float,float,float) r9.yzw, r17.xyzx, t20.wxyz, s2, l(0.000000)
      add r9.yzw, r9.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
      mad r9.yzw, cb2[23].yyyy, r9.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
      mul r9.yzw, r9.yyzw, cb2[18].xxyz
    else 
      mov r9.yzw, cb2[18].xxyz
    endif 
    if_z cb0[27].z
      ushr r5.w, cb2[53].x, l(16)
      ult r6.w, l(0), r5.w
      and r6.w, r1.w, r6.w
      if_nz r6.w
        iadd r5.w, r5.w, cb2[0].x
        iadd r5.w, r5.w, l(-1)
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r6.w, r5.w, l(52), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r5.w, l(68), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r5.w, l(84), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.xyzw, r5.w, l(132), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r20.xyzw, r5.w, l(148), t12.xyzw
        mad r7.w, |r4.z|, l(-0.200000), l(0.400000)
        lt r8.w, r4.z, l(0.000000)
        movc r7.w, r8.w, -r7.w, r7.w
        mad r21.xyz, r7.xyzx, r7.wwww, v6.xyzx
        mov r21.w, l(1.000000)
        dp4 r17.x, r17.xyzw, r21.xyzw
        dp4 r17.y, r18.xyzw, r21.xyzw
        mad r17.xy, r17.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
        add r17.xy, r20.zwzz, r17.xyxx
        mul r17.xy, r20.xyxx, r17.xyxx
        div r17.zw, r6.wwww, r19.xxxz
        add r18.xy, -r17.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
        ge r18.xy, r17.xyxx, r18.xyxx
        ge r17.zw, r17.zzzw, r17.xxxy
        or r17.zw, r17.zzzw, r18.xxxy
        or r7.w, r17.w, r17.z
        if_z r7.w
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r7.w, r5.w, l(28), t12.xxxx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r5.w, l(100), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.zw, r5.w, l(164), t12.xxxy
          dp4 r5.w, r18.xyzw, r21.xyzw
          mov_sat r17.xy, r17.xyxx
          mad r18.xy, r17.xyxx, r19.xzxx, r19.ywyy
          add r5.w, r17.z, r5.w
          div r5.w, r5.w, r17.w
          max r5.w, r5.w, l(0.00006104)
          and r7.w, r7.w, l(0x0000ffff)
          if_nz cb2[58].y
            mov r17.x, -r4.x
            utof r19.z, r7.w
            mov r17.y, r12.x
            mov r17.z, r4.x
            mov r8.w, l(0)
            mov r10.w, l(0)
            loop 
              ige r11.w, r10.w, l(8)
              breakc_nz r11.w
              dp2 r20.x, icb[r10.w + 0].yxyy, r17.xyxx
              dp2 r20.y, icb[r10.w + 0].yxyy, r17.yzyy
              mad r19.xy, r20.xyxx, r6.wwww, r18.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r11.w, r19.xyzx, t9.xxxx, s13, r5.w
              mad r8.w, r11.w, l(0.125000), r8.w
              iadd r10.w, r10.w, l(1)
            endloop 
          else 
            utof r18.z, r7.w
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r8.w, r18.xyzx, t9.xxxx, s13, r5.w
          endif 
          mul r5.w, r8.w, r8.w
          mul r5.w, r8.w, r5.w
        else 
          mov r5.w, l(1.000000)
        endif 
        mul r4.w, r4.w, r5.w
      else 
        and r5.w, cb2[53].x, l(0x0000ffff)
        ult r6.w, l(0), r5.w
        not r7.w, r1.w
        and r6.w, r6.w, r7.w
        if_nz r6.w
          iadd r5.w, r5.w, cb2[0].x
          iadd r5.w, r5.w, l(-1)
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r6.w, r5.w, l(52), t12.xxxx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r5.w, l(68), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r5.w, l(84), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.xyzw, r5.w, l(132), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r20.xyzw, r5.w, l(148), t12.xyzw
          mad r7.w, |r4.z|, l(-0.200000), l(0.400000)
          lt r8.w, r4.z, l(0.000000)
          movc r7.w, r8.w, -r7.w, r7.w
          mad r21.xyz, r7.xyzx, r7.wwww, v6.xyzx
          mov r21.w, l(1.000000)
          dp4 r17.x, r17.xyzw, r21.xyzw
          dp4 r17.y, r18.xyzw, r21.xyzw
          mad r17.xy, r17.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
          add r17.xy, r20.zwzz, r17.xyxx
          mul r17.xy, r20.xyxx, r17.xyxx
          div r17.zw, r6.wwww, r19.xxxz
          add r18.xy, -r17.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
          ge r18.xy, r17.xyxx, r18.xyxx
          ge r17.zw, r17.zzzw, r17.xxxy
          or r17.zw, r17.zzzw, r18.xxxy
          or r7.w, r17.w, r17.z
          if_z r7.w
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r7.w, r5.w, l(28), t12.xxxx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r5.w, l(100), t12.xyzw
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.zw, r5.w, l(164), t12.xxxy
            dp4 r5.w, r18.xyzw, r21.xyzw
            mov_sat r17.xy, r17.xyxx
            mad r18.xy, r17.xyxx, r19.xzxx, r19.ywyy
            add r5.w, r17.z, r5.w
            div r5.w, r5.w, r17.w
            max r5.w, r5.w, l(0.00006104)
            and r7.w, r7.w, l(0x0000ffff)
            if_nz cb2[58].y
              mov r17.x, -r4.x
              utof r19.z, r7.w
              mov r17.y, r12.x
              mov r17.z, r4.x
              mov r8.w, l(0)
              mov r10.w, l(0)
              loop 
                ige r11.w, r10.w, l(8)
                breakc_nz r11.w
                dp2 r20.x, icb[r10.w + 0].yxyy, r17.xyxx
                dp2 r20.y, icb[r10.w + 0].yxyy, r17.yzyy
                mad r19.xy, r20.xyxx, r6.wwww, r18.xyxx
                sample_c_lz_indexable(texture2darray)(float,float,float,float) r11.w, r19.xyzx, t9.xxxx, s13, r5.w
                mad r8.w, r11.w, l(0.125000), r8.w
                iadd r10.w, r10.w, l(1)
              endloop 
            else 
              utof r18.z, r7.w
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r8.w, r18.xyzx, t9.xxxx, s13, r5.w
            endif 
            mul r5.w, r8.w, r8.w
            mul r5.w, r8.w, r5.w
          else 
            mov r5.w, l(1.000000)
          endif 
          mul r4.w, r4.w, r5.w
        endif 
      endif 
    endif 
    mad r5.w, -r9.x, l(0.500000), l(1.000000)
    mad r5.w, -|r4.z|, r5.w, l(1.000000)
    mul r5.w, r5.w, r5.w
    mad r5.w, -r5.w, l(0.620000), l(0.620000)
    add r5.w, -|r4.z|, r5.w
    mad r5.w, r3.z, r5.w, |r4.z|
    mul r5.w, r4.w, r5.w
    lt r6.w, l(0.000000), r4.z
    mad r17.xyz, r5.wwww, r9.yzwy, r15.xyzx
    mov_sat r4.z, r4.z
    mad r18.xyz, -v6.xyzx, r0.yyyy, cb2[17].xyzx
    dp3 r0.y, r18.xyzx, r18.xyzx
    rsq r0.y, r0.y
    mul r18.xyz, r0.yyyy, r18.xyzx
    dp3 r0.y, r18.xyzx, r2.xyzx
    dp3 r5.w, r7.xyzx, r18.xyzx
    mad r7.w, |r5.w|, r3.y, -|r5.w|
    mad r5.w, |r5.w|, r7.w, l(1.000000)
    mad r7.w, r4.z, r2.w, r3.w
    mul r5.w, r5.w, r5.w
    mul r5.w, r7.w, r5.w
    rcp r5.w, r5.w
    mul r4.z, r5.y, r4.z
    mul r4.z, r4.z, r5.w
    mul r4.z, r4.w, r4.z
    mad r18.xyz, r4.zzzz, r9.yzwy, r1.xyzx
    add_sat r0.y, -r0.y, l(1.000000)
    mul r4.w, r0.y, r0.y
    mul r4.w, r4.w, r4.w
    mul r0.y, r0.y, r4.w
    mul r0.y, r0.y, r4.z
    mad r19.xyz, r0.yyyy, r9.zwyz, r16.xyzx
    mov r17.w, r19.z
    mov r15.w, r16.z
    movc r15.xyzw, r6.wwww, r17.xyzw, r15.xyzw
    mov r19.zw, r18.xxxy
    mov r16.zw, r1.xxxy
    movc r17.xyzw, r6.wwww, r19.xyzw, r16.xyzw
    movc r1.z, r6.w, r18.z, r1.z
    mov r16.z, r15.w
    mov r16.xy, r17.xyxx
    mov r1.xy, r17.zwzz
  endif 
endif 
mov r17.x, -r4.x
not r0.y, r1.w
mad r4.z, -r9.x, l(0.500000), l(1.000000)
mov r9.xy, l(0,0,0,0)
mov r18.w, l(0)
mov r19.xyz, v6.xyzx
mov r19.w, l(1.000000)
mov r20.w, l(1.000000)
mov r17.z, r4.x
mov r21.w, l(1.000000)
mov r22.z, l(1.000000)
mov r23.w, l(1.000000)
mov r17.yw, r12.xxxx
mov r4.y, r17.w
mov r24.w, l(1.000000)
mov r12.y, r17.x
mov r12.z, r4.x
mov r25.w, l(1.000000)
mov r26.x, r12.x
mov r26.y, r17.x
mov r26.z, r4.x
mov r27.x, r12.x
mov r27.y, r17.x
mov r27.z, r4.x
mov r28.x, r12.x
mov r28.y, r17.x
mov r28.z, r4.x
mov r29.xyz, r15.xyzx
mov r30.xyz, r16.zxyz
mov r31.xyz, r1.xyzx
mov r4.w, cb2[58].y
mov r5.y, l(0)
loop 
  uge r5.w, r5.y, cb2[0].x
  breakc_nz r5.w
  ushr r9.z, r5.y, l(5)
  iadd r18.xyz, r9.xyzx, r14.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r5.w, r18.xyzw, t6.yzwx
  mov r18.xyz, r29.xyzx
  mov r32.xyz, r30.xyzx
  mov r33.xyz, r31.xyzx
  mov r6.w, r4.w
  mov r7.w, r5.w
  loop 
    breakc_z r7.w
    firstbit_lo r8.w, r7.w
    ishl r9.z, l(1), r8.w
    and r9.w, r7.w, r9.z
    if_nz r9.w
      xor r7.w, r7.w, r9.z
      iadd r8.w, r5.y, r8.w
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r34.xyzw, r8.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r35.xy, r8.w, l(16), t11.xyxx
      add r34.xyz, r34.xyzx, -v6.xyzx
      mov r35.z, r34.w
      lt r34.xyz, |r34.xyzx|, r35.zxyz
      and r9.z, r34.y, r34.x
      and r9.z, r34.z, r9.z
      if_nz r9.z
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r8.w, l(0), t12.wxyz
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r8.w, l(16), t12.zxyw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r8.w, l(32), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r8.w, l(48), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r8.w, l(64), t12.yzwx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r8.w, l(80), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r8.w, l(96), t12.yzwx
        ubfe r9.z, l(3), l(24), r35.w
        switch r9.z
          case l(4)
          lt r9.z, l(0.000000), r40.x
          mov r41.xy, r39.zwzz
          mov r41.z, r40.w
          mad r42.xyz, -r41.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r34.yzwy
          add r43.xyz, r42.xyzx, -v6.xyzx
          dp3 r9.w, r41.xyzx, r43.xyzx
          div_sat r10.w, -r9.w, r40.x
          mad r44.xyz, r10.wwww, r41.xyzx, r42.xyzx
          movc r44.xyz, r9.zzzz, r44.xyzx, r34.yzwy
          add r44.xyz, r44.xyzx, -v6.xyzx
          dp3 r11.w, r44.xyzx, r44.xyzx
          rsq r12.w, r11.w
          mul r44.xyz, r12.wwww, r44.xyzx
          dp3 r12.w, r7.xyzx, r44.xyzx
          lt r13.w, l(0.000000), |r12.w|
          if_nz r13.w
            sqrt r13.w, r11.w
            mul r14.w, r37.x, r37.x
            div r11.w, r14.w, r11.w
            min r11.w, r11.w, l(1.000000)
            mad_sat r44.xy, r13.wwww, r36.xzxx, r36.ywyy
            mul r44.zw, r44.xxxy, r44.xxxy
            mad r44.xy, r44.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
            mul r44.xy, r44.xyxx, r44.zwzz
            mul r11.w, r11.w, r44.x
            mul r11.w, r44.y, r11.w
            lt r13.w, l(0.000000), r11.w
            if_nz r13.w
              ubfe r13.w, l(3), l(27), r35.w
              ine r13.w, r13.w, l(1)
              if_nz r13.w
                mad r13.w, |r12.w|, l(-0.200000), l(0.400000)
                lt r14.w, r12.w, l(0.000000)
                movc r13.w, r14.w, -r13.w, r13.w
                mad r44.xyz, r7.xyzx, r13.wwww, v6.xyzx
                add r44.xyz, -r38.xyzx, r44.xyzx
                max r13.w, |r44.z|, |r44.y|
                max r13.w, r13.w, |r44.x|
                div r13.w, r39.x, r13.w
                add r13.w, r39.y, r13.w
                dp3 r14.w, r44.xyzx, r44.xyzx
                rsq r14.w, r14.w
                max r13.w, r13.w, l(0.00006104)
                and r15.w, r35.w, l(0x0000ffff)
                utof r45.w, r15.w
                mov r15.w, l(0)
                mov r16.w, l(0)
                loop 
                  ige r22.w, r16.w, l(8)
                  breakc_nz r22.w
                  dp2 r46.y, icb[r16.w + 0].yxyy, r17.xyxx
                  dp2 r46.z, icb[r16.w + 0].yxyy, r17.yzyy
                  mul r46.yz, r37.yyyy, r46.yyzy
                  mul r46.x, r5.x, r46.y
                  mul r46.w, r3.x, r46.y
                  mad r45.xyz, r44.xyzx, r14.wwww, r46.xzwx
                  sample_c_lz_indexable(texturecubearray)(float,float,float,float) r22.w, r45.xyzw, t10.xxxx, s13, r13.w
                  mad r15.w, r22.w, l(0.125000), r15.w
                  iadd r16.w, r16.w, l(1)
                endloop 
              else 
                mov r15.w, l(1.000000)
              endif 
              mul r11.w, r11.w, r15.w
              lt r13.w, l(0.000000), r11.w
              if_nz r13.w
                mul r13.w, r3.y, r35.x
                mul r13.w, r13.w, l(0.250000)
                dp3 r14.w, r41.xyzx, r13.xyzx
                dp3 r16.w, r13.xyzx, r43.xyzx
                mad r22.w, -r14.w, r14.w, r40.x
                mad r9.w, r14.w, r16.w, -r9.w
                div_sat r9.w, r9.w, r22.w
                div r14.w, r22.w, r40.x
                mul r14.w, r14.w, l(10.000000)
                min r14.w, r14.w, l(1.000000)
                add r9.w, -r10.w, r9.w
                mad r9.w, r14.w, r9.w, r10.w
                mad r41.xyz, r9.wwww, r41.xyzx, r42.xyzx
                movc r41.xyz, r9.zzzz, r41.xyzx, r34.yzwy
                add r41.xyz, r41.xyzx, -v6.xyzx
                dp3 r9.z, r41.xyzx, r41.xyzx
                rsq r9.z, r9.z
                mul r42.xyz, r9.zzzz, r41.xyzx
                ubfe r9.w, l(4), l(16), r35.w
                ult r10.w, l(0), r9.w
                and r10.w, r1.w, r10.w
                if_nz r10.w
                  iadd r9.w, r9.w, cb2[0].x
                  iadd r9.w, r9.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r10.w, r9.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r9.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r9.w, l(116), t12.xyzw
                  mad r14.w, |r12.w|, l(-0.200000), l(0.400000)
                  lt r16.w, r12.w, l(0.000000)
                  movc r14.w, r16.w, -r14.w, r14.w
                  mad r20.xyz, r7.xyzx, r14.wwww, v6.xyzx
                  dp4 r14.w, r43.xyzw, r20.xyzw
                  dp4 r16.w, r44.xyzw, r20.xyzw
                  lt r22.w, r16.w, r14.w
                  if_z r22.w
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r9.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r9.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xyzw, r9.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r46.xyzw, r9.w, l(148), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r47.xy, r9.w, l(164), t12.xyxx
                    dp4 r43.x, r43.xyzw, r20.xyzw
                    dp4 r43.y, r44.xyzw, r20.xyzw
                    div r20.xy, r43.xyxx, r16.wwww
                    mad r20.xy, r20.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r20.xy, r46.zwzz, r20.xyxx
                    mul r20.xy, r46.xyxx, r20.xyxx
                    div r43.xy, r10.wwww, r45.xzxx
                    add r43.zw, -r43.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                    ge r43.zw, r20.xxxy, r43.zzzw
                    ge r43.xy, r43.xyxx, r20.xyxx
                    or r43.xy, r43.xyxx, r43.zwzz
                    or r20.z, r43.y, r43.x
                    mov_sat r20.xy, r20.xyxx
                    mad r43.xy, r20.xyxx, r45.xzxx, r45.ywyy
                    mul r20.x, r16.w, r47.y
                    mad r14.w, r47.x, r16.w, r14.w
                    div r14.w, r14.w, r20.x
                  else 
                    mov r20.z, l(-1)
                  endif 
                  or r16.w, r22.w, r20.z
                  if_z r16.w
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r9.w, r9.w, l(28), t12.xxxx
                    max r14.w, r14.w, l(0.00006104)
                    and r9.w, r9.w, l(0x0000ffff)
                    if_nz r6.w
                      utof r20.z, r9.w
                      mov r16.w, l(0)
                      mov r22.w, l(0)
                      loop 
                        ige r26.w, r22.w, l(8)
                        breakc_nz r26.w
                        dp2 r44.x, icb[r22.w + 0].yxyy, r17.xwxx
                        dp2 r44.y, icb[r22.w + 0].xyxx, r4.xyxx
                        mad r20.xy, r44.xyxx, r10.wwww, r43.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r20.x, r20.xyzx, t9.xxxx, s13, r14.w
                        mad r16.w, r20.x, l(0.125000), r16.w
                        iadd r22.w, r22.w, l(1)
                      endloop 
                    else 
                      utof r43.z, r9.w
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r16.w, r43.xyzx, t9.xxxx, s13, r14.w
                    endif 
                    mul r9.w, r16.w, r16.w
                    mul r9.w, r16.w, r9.w
                  else 
                    mov r9.w, l(1.000000)
                  endif 
                  mul r11.w, r9.w, r11.w
                else 
                  ubfe r9.w, l(4), l(20), r35.w
                  ult r10.w, l(0), r9.w
                  and r10.w, r0.y, r10.w
                  if_nz r10.w
                    iadd r9.w, r9.w, cb2[0].x
                    iadd r9.w, r9.w, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r10.w, r9.w, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r9.w, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r9.w, l(116), t12.xyzw
                    mad r14.w, |r12.w|, l(-0.200000), l(0.400000)
                    lt r20.x, r12.w, l(0.000000)
                    movc r14.w, r20.x, -r14.w, r14.w
                    mad r21.xyz, r7.xyzx, r14.wwww, v6.xyzx
                    dp4 r14.w, r43.xyzw, r21.xyzw
                    dp4 r20.x, r44.xyzw, r21.xyzw
                    lt r20.y, r20.x, r14.w
                    if_z r20.y
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r9.w, l(68), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r9.w, l(84), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xyzw, r9.w, l(132), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r46.xyzw, r9.w, l(148), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r47.xy, r9.w, l(164), t12.xyxx
                      dp4 r43.x, r43.xyzw, r21.xyzw
                      dp4 r43.y, r44.xyzw, r21.xyzw
                      div r21.xy, r43.xyxx, r20.xxxx
                      mad r21.xy, r21.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                      add r21.xy, r46.zwzz, r21.xyxx
                      mul r21.xy, r46.xyxx, r21.xyxx
                      div r43.xy, r10.wwww, r45.xzxx
                      add r43.zw, -r43.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                      ge r43.zw, r21.xxxy, r43.zzzw
                      ge r43.xy, r43.xyxx, r21.xyxx
                      or r43.xy, r43.xyxx, r43.zwzz
                      or r20.z, r43.y, r43.x
                      mov_sat r21.xy, r21.xyxx
                      mad r21.xy, r21.xyxx, r45.xzxx, r45.ywyy
                      mul r22.w, r20.x, r47.y
                      mad r14.w, r47.x, r20.x, r14.w
                      div r14.w, r14.w, r22.w
                    else 
                      mov r20.z, l(-1)
                    endif 
                    or r20.x, r20.y, r20.z
                    if_z r20.x
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r9.w, r9.w, l(28), t12.xxxx
                      max r14.w, r14.w, l(0.00006104)
                      and r9.w, r9.w, l(0x0000ffff)
                      if_nz r6.w
                        utof r20.z, r9.w
                        mov r22.w, l(0)
                        mov r26.w, l(0)
                        loop 
                          ige r27.w, r26.w, l(8)
                          breakc_nz r27.w
                          dp2 r43.x, icb[r26.w + 0].xyxx, r12.xyxx
                          dp2 r43.y, icb[r26.w + 0].yxyy, r12.xzxx
                          mad r20.xy, r43.xyxx, r10.wwww, r21.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r20.x, r20.xyzx, t9.xxxx, s13, r14.w
                          mad r22.w, r20.x, l(0.125000), r22.w
                          iadd r26.w, r26.w, l(1)
                        endloop 
                      else 
                        utof r21.z, r9.w
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.w, r21.xyzx, t9.xxxx, s13, r14.w
                      endif 
                      mul r9.w, r22.w, r22.w
                      mul r9.w, r22.w, r9.w
                    else 
                      mov r9.w, l(1.000000)
                    endif 
                    mul r11.w, r9.w, r11.w
                  endif 
                endif 
                mad r9.w, -|r12.w|, r4.z, l(1.000000)
                mul r9.w, r9.w, r9.w
                mad r9.w, -r9.w, l(0.620000), l(0.620000)
                add r9.w, -|r12.w|, r9.w
                mad r9.w, r3.z, r9.w, |r12.w|
                mul r9.w, r11.w, r9.w
                mov r35.x, r34.x
                lt r10.w, l(0.000000), r12.w
                mad r20.xyz, r9.wwww, r35.xyzx, r18.xyzx
                dp3_sat r9.w, r7.xyzx, r42.xyzx
                mad r21.xyz, r41.xyzx, r9.zzzz, r2.xyzx
                dp3 r9.z, r21.xyzx, r21.xyzx
                rsq r9.z, r9.z
                mul r21.xyz, r9.zzzz, r21.xyzx
                dp3 r9.z, r21.xyzx, r2.xyzx
                dp3 r12.w, r7.xyzx, r21.xyzx
                mad r14.w, |r12.w|, r3.y, -|r12.w|
                mad r12.w, |r12.w|, r14.w, l(1.000000)
                mad r14.w, r9.w, r2.w, r3.w
                mul r12.w, r12.w, r12.w
                mul r12.w, r14.w, r12.w
                rcp r12.w, r12.w
                mul r9.w, r13.w, r9.w
                mul r9.w, r9.w, r12.w
                mul r9.w, r11.w, r9.w
                mad r21.xyz, r9.wwww, r35.xyzx, r33.xyzx
                add_sat r9.z, -r9.z, l(1.000000)
                mul r11.w, r9.z, r9.z
                mul r11.w, r11.w, r11.w
                mul r9.z, r9.z, r11.w
                mul r9.z, r9.z, r9.w
                mad r41.xyz, r9.zzzz, r35.xyzx, r32.xyzx
                movc r18.xyz, r10.wwww, r20.xyzx, r18.xyzx
                movc r32.xyz, r10.wwww, r41.xyzx, r32.xyzx
                movc r33.xyz, r10.wwww, r21.xyzx, r33.xyzx
              endif 
            endif 
          endif 
          break 
          case l(2)
          mov r20.xy, r37.zwzz
          mov r20.z, r38.w
          add r20.xyz, r20.xyzx, -v6.xyzx
          dp3 r9.z, r20.xyzx, r20.xyzx
          rsq r9.z, r9.z
          mul r21.xyz, r9.zzzz, r20.xyzx
          dp3 r9.w, r7.xyzx, r21.xyzx
          lt r10.w, l(0.000000), |r9.w|
          if_nz r10.w
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r8.w, l(112), t12.yzwx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r8.w, l(128), t12.zxyw
            mov r43.xyz, r41.xyzx
            mov r43.w, r42.y
            dp4 r10.w, r43.xyzw, r19.xyzw
            lt r11.w, r10.w, l(1.000000)
            if_nz r11.w
              mov r21.xyz, l(1.000000,1.000000,1.000000,0)
              mov r11.w, l(0)
            else 
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r8.w, l(172), t12.yzwx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xyzw, r8.w, l(188), t12.wxyz
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r46.xyzw, r8.w, l(204), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.w, r8.w, l(236), t12.xxxx
              add r47.xyz, r34.yzwy, -v6.xyzx
              mul r13.w, r37.x, r37.x
              dp3 r14.w, r47.xyzx, r47.xyzx
              div r13.w, r13.w, r14.w
              min r13.w, r13.w, l(1.000000)
              mad_sat r36.xy, r10.wwww, r36.xzxx, r36.ywyy
              mul r36.zw, r36.xxxy, r36.xxxy
              mad r36.xy, r36.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
              mul r36.xy, r36.xyxx, r36.zwzz
              mul r13.w, r13.w, r36.x
              mul r13.w, r36.y, r13.w
              mov r38.w, r39.x
              dp4 r36.x, r38.xyzw, r19.xyzw
              mov r47.xyz, r39.yzwy
              mov r47.w, r40.w
              dp4 r36.y, r47.xyzw, r19.xyzw
              div r22.xy, r36.xyxx, r10.wwww
              lt r10.w, r44.w, l(0.00048828)
              if_nz r10.w
                mov r45.y, r46.x
                mad_sat r36.xy, |r22.xyxx|, r45.zwzz, r45.xyxx
                mul r36.zw, r36.xxxy, r36.xxxy
                mad r36.xy, r36.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
                mul r36.xy, r36.xyxx, r36.zwzz
                mul r10.w, r36.y, r36.x
              else 
                mov r44.w, r45.y
                mul_sat r36.xyzw, |r22.yyxx|, r44.xyzw
                log r36.xyzw, r36.xyzw
                mul r36.xyzw, r36.xyzw, r45.xxxx
                exp r36.xyzw, r36.xyzw
                add r36.xy, r36.zwzz, r36.xyxx
                log r36.xy, r36.xyxx
                mul r36.xy, r36.xyxx, r46.xxxx
                exp r36.xy, r36.xyxx
                mul r14.w, r36.x, r45.z
                mad r26.w, r45.w, r36.y, l(-1.000000)
                mad r14.w, r45.w, r36.y, -r14.w
                div_sat r14.w, r26.w, r14.w
                mul r26.w, r14.w, r14.w
                mad r14.w, r14.w, l(-2.000000), l(3.000000)
                mul r10.w, r14.w, r26.w
              endif 
              mul r11.w, r10.w, r13.w
              and r10.w, r12.w, l(255)
              if_nz r10.w
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyz, r8.w, l(220), t12.xyzx
                dp3 r12.w, r46.yzwy, r22.xyzx
                dp3 r13.w, r36.xyzx, r22.xyzx
                frc r36.x, r12.w
                frc r36.y, r13.w
                iadd r10.w, r10.w, l(-1)
                utof r36.z, r10.w
                sample_l_indexable(texture2darray)(float,float,float,float) r21.xyz, r36.xyzx, t20.xyzw, s2, l(0.000000)
              else 
                mov r21.xyz, l(1.000000,1.000000,1.000000,0)
              endif 
            endif 
            mov r34.yz, r35.yyzy
            mul r21.xyz, r21.xyzx, r34.xyzx
            lt r10.w, l(0.000000), r11.w
            if_nz r10.w
              ubfe r10.w, l(3), l(27), r35.w
              ine r10.w, r10.w, l(1)
              if_nz r10.w
                mad r10.w, |r9.w|, l(-0.200000), l(0.400000)
                lt r12.w, r9.w, l(0.000000)
                movc r10.w, r12.w, -r10.w, r10.w
                mad r23.xyz, r7.xyzx, r10.wwww, v6.xyzx
                mov r41.xyz, r40.xyzx
                dp4 r10.w, r41.xyzw, r23.xyzw
                dp4 r12.w, r43.xyzw, r23.xyzw
                ge r13.w, r12.w, r10.w
                if_nz r13.w
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.y, r8.w, l(144), t12.xxxx
                  mov r38.w, r39.x
                  dp4 r22.x, r38.xyzw, r23.xyzw
                  mov r40.xyz, r39.yzwy
                  dp4 r22.y, r40.xyzw, r23.xyzw
                  div r22.xy, r22.xyxx, r12.wwww
                  mad_sat r22.xy, r22.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  mad r23.xy, r22.xyxx, r42.zwzz, r42.xyxx
                  div r8.w, r10.w, r12.w
                  max r8.w, r8.w, l(0.00006104)
                  and r10.w, r35.w, l(0x0000ffff)
                  if_nz r6.w
                    utof r34.z, r10.w
                    mov r12.w, l(0)
                    mov r13.w, l(0)
                    loop 
                      ige r14.w, r13.w, l(8)
                      breakc_nz r14.w
                      dp2 r22.x, icb[r13.w + 0].xyxx, r26.xyxx
                      dp2 r22.y, icb[r13.w + 0].yxyy, r26.xzxx
                      mad r34.xy, r22.xyxx, r37.yyyy, r23.xyxx
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r14.w, r34.xyzx, t9.xxxx, s13, r8.w
                      mad r12.w, r14.w, l(0.125000), r12.w
                      iadd r13.w, r13.w, l(1)
                    endloop 
                  else 
                    utof r23.z, r10.w
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.w, r23.xyzx, t9.xxxx, s13, r8.w
                  endif 
                  mul r8.w, r12.w, r12.w
                  mul r8.w, r12.w, r8.w
                else 
                  mov r8.w, l(1.000000)
                endif 
              else 
                mov r8.w, l(1.000000)
              endif 
              mul r8.w, r8.w, r11.w
              lt r10.w, l(0.000000), r8.w
              if_nz r10.w
                mul r10.w, r3.y, r35.x
                mul r10.w, r10.w, l(0.250000)
                ubfe r11.w, l(4), l(16), r35.w
                ult r13.w, l(0), r11.w
                and r13.w, r1.w, r13.w
                if_nz r13.w
                  iadd r11.w, r11.w, cb2[0].x
                  iadd r11.w, r11.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.w, r11.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r11.w, l(68), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r11.w, l(84), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r11.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r11.w, l(116), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r11.w, l(132), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r11.w, l(148), t12.xyzw
                  mad r14.w, |r9.w|, l(-0.200000), l(0.400000)
                  lt r22.x, r9.w, l(0.000000)
                  movc r14.w, r22.x, -r14.w, r14.w
                  mad r24.xyz, r7.xyzx, r14.wwww, v6.xyzx
                  dp4 r22.x, r34.xyzw, r24.xyzw
                  dp4 r22.y, r36.xyzw, r24.xyzw
                  dp4 r14.w, r37.xyzw, r24.xyzw
                  dp4 r23.x, r38.xyzw, r24.xyzw
                  lt r23.y, r23.x, r14.w
                  div r22.xy, r22.xyxx, r23.xxxx
                  mad r22.xy, r22.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r22.xy, r40.zwzz, r22.xyxx
                  mul r22.xy, r40.xyxx, r22.xyxx
                  div r24.xy, r13.wwww, r39.xzxx
                  add r34.xy, -r24.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                  ge r34.xy, r22.xyxx, r34.xyxx
                  ge r24.xy, r24.xyxx, r22.xyxx
                  or r24.xy, r24.xyxx, r34.xyxx
                  or r23.z, r24.y, r24.x
                  or r23.y, r23.y, r23.z
                  if_z r23.y
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.y, r11.w, l(28), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r24.xy, r11.w, l(164), t12.xyxx
                    mov_sat r22.xy, r22.xyxx
                    mad r34.xy, r22.xyxx, r39.xzxx, r39.ywyy
                    mul r11.w, r23.x, r24.y
                    mad r14.w, r24.x, r23.x, r14.w
                    div r11.w, r14.w, r11.w
                    max r11.w, r11.w, l(0.00006104)
                    and r14.w, r23.y, l(0x0000ffff)
                    if_nz r6.w
                      utof r23.z, r14.w
                      mov r22.xy, l(0,0,0,0)
                      loop 
                        ige r24.x, r22.y, l(8)
                        breakc_nz r24.x
                        dp2 r24.x, icb[r22.y + 0].xyxx, r27.xyxx
                        dp2 r24.y, icb[r22.y + 0].yxyy, r27.xzxx
                        mad r23.xy, r24.xyxx, r13.wwww, r34.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.x, r23.xyzx, t9.xxxx, s13, r11.w
                        mad r22.x, r23.x, l(0.125000), r22.x
                        iadd r22.y, r22.y, l(1)
                      endloop 
                    else 
                      utof r34.z, r14.w
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.x, r34.xyzx, t9.xxxx, s13, r11.w
                    endif 
                    mul r11.w, r22.x, r22.x
                    mul r11.w, r22.x, r11.w
                  else 
                    mov r11.w, l(1.000000)
                  endif 
                  mul r8.w, r8.w, r11.w
                else 
                  ubfe r11.w, l(4), l(20), r35.w
                  ult r13.w, l(0), r11.w
                  and r13.w, r0.y, r13.w
                  if_nz r13.w
                    iadd r11.w, r11.w, cb2[0].x
                    iadd r11.w, r11.w, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.w, r11.w, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r11.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r11.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r11.w, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r11.w, l(116), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r11.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r11.w, l(148), t12.xyzw
                    mad r14.w, |r9.w|, l(-0.200000), l(0.400000)
                    lt r22.y, r9.w, l(0.000000)
                    movc r14.w, r22.y, -r14.w, r14.w
                    mad r25.xyz, r7.xyzx, r14.wwww, v6.xyzx
                    dp4 r23.x, r34.xyzw, r25.xyzw
                    dp4 r23.y, r35.xyzw, r25.xyzw
                    dp4 r14.w, r36.xyzw, r25.xyzw
                    dp4 r22.y, r37.xyzw, r25.xyzw
                    lt r23.z, r22.y, r14.w
                    div r23.xy, r23.xyxx, r22.yyyy
                    mad r23.xy, r23.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r23.xy, r39.zwzz, r23.xyxx
                    mul r23.xy, r39.xyxx, r23.xyxx
                    div r24.xy, r13.wwww, r38.xzxx
                    add r25.xy, -r24.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                    ge r25.xy, r23.xyxx, r25.xyxx
                    ge r24.xy, r24.xyxx, r23.xyxx
                    or r24.xy, r24.xyxx, r25.xyxx
                    or r24.x, r24.y, r24.x
                    or r23.z, r23.z, r24.x
                    if_z r23.z
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.z, r11.w, l(28), t12.xxxx
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r24.xy, r11.w, l(164), t12.xyxx
                      mov_sat r23.xy, r23.xyxx
                      mad r25.xy, r23.xyxx, r38.xzxx, r38.ywyy
                      mul r11.w, r22.y, r24.y
                      mad r14.w, r24.x, r22.y, r14.w
                      div r11.w, r14.w, r11.w
                      max r11.w, r11.w, l(0.00006104)
                      and r14.w, r23.z, l(0x0000ffff)
                      if_nz r6.w
                        utof r23.z, r14.w
                        mov r22.y, l(0)
                        mov r24.x, l(0)
                        loop 
                          ige r24.y, r24.x, l(8)
                          breakc_nz r24.y
                          dp2 r34.x, icb[r24.x + 0].xyxx, r28.xyxx
                          dp2 r34.y, icb[r24.x + 0].yxyy, r28.xzxx
                          mad r23.xy, r34.xyxx, r13.wwww, r25.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.x, r23.xyzx, t9.xxxx, s13, r11.w
                          mad r22.y, r23.x, l(0.125000), r22.y
                          iadd r24.x, r24.x, l(1)
                        endloop 
                      else 
                        utof r25.z, r14.w
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.y, r25.xyzx, t9.xxxx, s13, r11.w
                      endif 
                      mul r11.w, r22.y, r22.y
                      mul r11.w, r22.y, r11.w
                    else 
                      mov r11.w, l(1.000000)
                    endif 
                    mul r8.w, r8.w, r11.w
                  endif 
                endif 
                mad r11.w, -|r9.w|, r4.z, l(1.000000)
                mul r11.w, r11.w, r11.w
                mad r11.w, -r11.w, l(0.620000), l(0.620000)
                add r11.w, -|r9.w|, r11.w
                mad r11.w, r3.z, r11.w, |r9.w|
                mul r11.w, r8.w, r11.w
                lt r13.w, l(0.000000), r9.w
                mad r23.xyz, r11.wwww, r21.xyzx, r18.xyzx
                mov_sat r9.w, r9.w
                mad r20.xyz, r20.xyzx, r9.zzzz, r2.xyzx
                dp3 r9.z, r20.xyzx, r20.xyzx
                rsq r9.z, r9.z
                mul r20.xyz, r9.zzzz, r20.xyzx
                dp3 r9.z, r20.xyzx, r2.xyzx
                dp3 r11.w, r7.xyzx, r20.xyzx
                mad r14.w, |r11.w|, r3.y, -|r11.w|
                mad r11.w, |r11.w|, r14.w, l(1.000000)
                mad r14.w, r9.w, r2.w, r3.w
                mul r11.w, r11.w, r11.w
                mul r11.w, r14.w, r11.w
                rcp r11.w, r11.w
                mul r9.w, r10.w, r9.w
                mul r9.w, r9.w, r11.w
                mul r8.w, r8.w, r9.w
                mad r20.xyz, r8.wwww, r21.xyzx, r33.xyzx
                add_sat r9.z, -r9.z, l(1.000000)
                mul r9.w, r9.z, r9.z
                mul r9.w, r9.w, r9.w
                mul r9.z, r9.w, r9.z
                mul r8.w, r8.w, r9.z
                mad r21.xyz, r8.wwww, r21.xyzx, r32.xyzx
                movc r18.xyz, r13.wwww, r23.xyzx, r18.xyzx
                movc r32.xyz, r13.wwww, r21.xyzx, r32.xyzx
                movc r33.xyz, r13.wwww, r20.xyzx, r33.xyzx
              endif 
            endif 
          endif 
          break 
          default 
          break 
        endswitch 
      endif 
    endif 
  endloop 
  mov r29.xyz, r18.xyzx
  mov r30.xyz, r32.xyzx
  mov r31.xyz, r33.xyzx
  iadd r5.y, r5.y, l(32)
endloop 
mul r1.xyz, r5.zzzz, r31.xyzx
mul r2.xyz, r5.zzzz, r30.xyzx
add r3.xyz, -r8.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r2.xyz, r2.xyzx, r3.xyzx
mad r1.xyz, r1.xyzx, r8.xyzx, r2.xyzx
mad r1.xyz, r29.xyzx, r6.xyzx, r1.xyzx
add r0.y, -cb0[19].z, l(1.000000)
mul r0.y, r0.y, r0.w
mad r2.xyz, r10.xyzx, r0.zzzz, -r11.xyzx
mad r2.xyz, r0.yyyy, r2.xyzx, r11.xyzx
mul r0.y, r0.w, v1.x
mul r0.w, r0.x, r0.y
dp3 r1.w, r1.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
max r1.w, r1.w, l(0.000100)
max r1.w, r1.w, cb1[85].x
mul r3.xyz, r1.wwww, r2.xyzx
movc r2.xyz, cb0[17].xxxx, r3.xyzx, r2.xyzx
add r1.xyz, r1.xyzx, r2.xyzx
lt r1.w, l(0.000000), cb2[9].z
if_nz r1.w
  dp3 r1.w, v6.xyzx, v6.xyzx
  rsq r2.x, r1.w
  mul r2.xyz, r2.xxxx, v6.xyzx
  sqrt r1.w, r1.w
  lt r2.w, l(0.000000), cb2[13].w
  if_nz r2.w
    mad r3.xy, r1.wwww, cb2[15].xyxx, cb2[14].zwzz
    mul r3.xy, r3.xyxx, cb2[16].xyxx
    lt r2.w, l(0.010000), |v6.z|
    mul r3.zw, v6.zzzz, cb2[15].zzzw
    mul r4.xy, r3.zwzz, l(-1.442695, -1.442695, 0.000000, 0.000000)
    exp r4.xy, r4.xyxx
    add r4.xy, -r4.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    div r3.zw, r4.xxxy, r3.zzzw
    mul r3.zw, r3.zzzw, r3.xxxy
    movc r3.xy, r2.wwww, r3.zwzz, r3.xyxx
    mul r3.xzw, r3.xxxx, cb2[12].xxyz
    exp r3.xzw, r3.xxzw
    mul r4.xyz, r3.yyyy, cb2[12].xyzx
    exp r4.xyz, r4.xyzx
    add r4.xyz, -r3.xzwx, r4.xyzx
    mad r3.xyz, cb2[13].wwww, r4.xyzx, r3.xzwx
  else 
    mad r2.w, r1.w, cb2[15].x, cb2[14].z
    mul r2.w, r2.w, cb2[16].x
    lt r3.w, l(0.010000), |v6.z|
    mul r4.x, v6.z, cb2[15].z
    mul r4.y, r4.x, l(-1.442695)
    exp r4.y, r4.y
    add r4.y, -r4.y, l(1.000000)
    div r4.x, r4.y, r4.x
    mul r4.x, r2.w, r4.x
    movc r2.w, r3.w, r4.x, r2.w
    mul r4.xyz, r2.wwww, cb2[12].xyzx
    exp r3.xyz, r4.xyzx
  endif 
  mad r3.xyz, r3.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r3.xyz, r3.xyzx, -cb2[9].zzzz
  dp3 r2.x, cb2[7].yzwy, -r2.xyzx
  mad r2.y, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r2.z, cb2[8].w, -r2.x, l(1.000000)
  mul r2.z, r2.z, r2.z
  mul r2.z, r2.z, l(12.566371)
  div r2.y, r2.y, r2.z
  add r1.w, r1.w, -cb2[10].w
  mul_sat r1.w, r1.w, cb2[11].w
  mul r1.w, r1.w, r2.y
  mov_sat r2.x, r2.x
  mad r2.x, r2.x, r2.x, l(1.000000)
  mad r2.x, r2.x, l(0.05968310), l(-1.000000)
  mad r2.x, cb2[8].z, r2.x, l(1.000000)
  mul r2.yzw, r1.wwww, cb2[11].xxyz
  mad r2.xyz, r2.xxxx, cb2[10].xyzx, r2.yzwy
  mul r2.xyz, r2.xyzx, cb2[9].wwww
  add r4.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r2.xyz, r2.xyzx, r4.xyzx
  mad r2.xyz, r1.xyzx, r3.xyzx, r2.xyzx
else 
  mul r1.w, v6.z, cb2[6].x
  mad r2.w, cb2[6].x, v6.z, cb2[5].x
  lt r3.x, |r1.w|, l(0.000100)
  min r3.y, r2.w, l(64.000000)
  mul r3.y, r3.y, l(1.442695)
  exp r3.y, r3.y
  mov_sat r3.z, cb2[6].z
  lt r3.w, r2.w, l(0.000000)
  add r2.w, r2.w, l(1.000000)
  movc r2.w, r3.w, r3.y, r2.w
  add r2.w, r2.w, -cb2[6].z
  movc r1.w, r3.x, l(1.000000), r1.w
  div r1.w, r2.w, r1.w
  movc r1.w, r3.x, r3.z, r1.w
  mul r1.w, r1.w, cb2[5].z
  dp3 r2.w, v6.xyzx, v6.xyzx
  sqrt r3.x, r2.w
  mad r1.w, r1.w, r3.x, cb2[5].w
  exp r1.w, r1.w
  min r1.w, r1.w, l(1.000000)
  add r1.w, -r1.w, l(1.000000)
  rsq r2.w, r2.w
  mul r3.xyz, r2.wwww, v6.xyzx
  dp3 r2.w, cb2[7].yzwy, r3.xyzx
  mad_sat r2.w, cb2[8].y, r2.w, cb2[8].x
  add r3.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r3.xyzw, r2.wwww, r3.xyzw, cb2[4].xyzw
  mul r1.w, r1.w, r3.w
  add r3.xyz, -r1.xyzx, r3.xyzx
  mad r2.xyz, r1.wwww, r3.xyzx, r1.xyzx
endif 
mul r1.xyz, r2.xyzx, cb1[85].yyyy
ge r2.xyz, r1.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r1.xyz, r1.xyzx, r2.xyzx
min r1.xyz, r1.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
max r2.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r0.xyz, r0.wwww, r2.xyzx
and r1.w, r0.w, l(0x7f800000)
ieq r1.w, r1.w, l(0x7f800000)
eq r3.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
and r3.xy, r3.zwzz, r3.xyxx
and r2.w, r3.y, r3.x
or r1.w, r1.w, r2.w
if_z r1.w
  ftou r3.xy, v0.xyxx
  imm_atomic_iadd r3.z, u6, r3.xyxx, l(1)
  ult r1.w, r3.z, cb2[58].z
  if_nz r1.w
    max r1.w, r0.z, r0.y
    max r1.w, r0.x, r1.w
    mov r1.w, |r1.w|
    and r1.w, r1.w, l(0x7f800000)
    iadd r1.w, r1.w, l(0x00800000)
    mad r2.xyz, r2.xyzx, r0.wwww, r1.wwww
    ubfe r2.x, l(8), l(15), r2.x
    ushr r2.yz, r2.yyzy, l(0, 15, 15, 0)
    bfi r2.yz, l(0, 8, 8, 0), l(0, 8, 16, 0), r2.yyzy, l(0, 0, 0, 0)
    iadd r2.x, r2.y, r2.x
    iadd r2.x, r2.z, r2.x
    ishl r1.w, r1.w, l(1)
    iadd r2.xzw, r1.wwww, r2.xxxx
    mov_sat r1.w, r0.w
    mul r1.w, r1.w, l(2046.000000)
    ftou r1.w, r1.w
    ishl r3.w, v0.z, l(2)
    and r1.w, r1.w, l(2046)
    bfi r2.y, l(11), l(0), r1.w, r3.w
    store_uav_typed u7.xyzw, r3.xyzz, r2.xyzw
    mov r1.w, l(-1)
  else 
    mov r1.w, l(0)
  endif 
else 
  mov r1.w, l(-1)
endif 
mul r0.xyz, r0.wwww, r1.xyzx
movc o0.xyzw, r1.wwww, l(0,0,0,0), r0.xyzw
ret 
// Approximately 2457 instruction slots used
