//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:41:48 2021
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float3 colorTint;                  // Offset:  160 Size:    12
//   float baseNormalHeight;            // Offset:  172 Size:     4
//   float2 glossRange;                 // Offset:  176 Size:     8
//   float rowCount;                    // Offset:  184 Size:     4
//   float columnCount;                 // Offset:  188 Size:     4
//   float imageTime;                   // Offset:  192 Size:     4
//   float2 rotateUVs;                  // Offset:  196 Size:     8
//   float2 scrollUVs;                  // Offset:  208 Size:     8
//   float2 scaleUVs;                   // Offset:  216 Size:     8
//   float2 offsetUVs;                  // Offset:  224 Size:     8
//   float2 zoomUVs;                    // Offset:  232 Size:     8
//   float zoomRate;                    // Offset:  240 Size:     4
//   float layerDepth;                  // Offset:  244 Size:     4
//   bool clampU;                       // Offset:  248 Size:     4
//   bool clampV;                       // Offset:  252 Size:     4
//   float2 flickerSeed;                // Offset:  256 Size:     8
//   float flickerSpeed;                // Offset:  264 Size:     4
//   float2 flickerRange;               // Offset:  272 Size:     8
//   float flickerPower;                // Offset:  280 Size:     4
//   bool relativeHDR;                  // Offset:  284 Size:     4
//   bool invertFalloff;                // Offset:  288 Size:     4
//   float hdrScale;                    // Offset:  292 Size:     4
//   float emissiveFalloffPower;        // Offset:  296 Size:     4
//   float zFeatherDistance;            // Offset:  300 Size:     4
//   float falloffBegin;                // Offset:  304 Size:     4 [unused]
//   float falloffEnd;                  // Offset:  308 Size:     4 [unused]
//   float alphaCooling;                // Offset:  312 Size:     4
//   float coolingFactor;               // Offset:  316 Size:     4
//   float uvMotionToggle1;             // Offset:  320 Size:     4
//   float2 distortionRotateUVs;        // Offset:  324 Size:     8
//   float2 distortionScrollUVs;        // Offset:  336 Size:     8
//   float2 distortionScaleUVs;         // Offset:  344 Size:     8
//   float2 distortionOffsetUVs;        // Offset:  352 Size:     8
//   float2 distortionZoomUVs;          // Offset:  360 Size:     8
//   float distortionZoomRate;          // Offset:  368 Size:     4
//   float distortionAmount;            // Offset:  372 Size:     4
//   float2 maskRotateUVs;              // Offset:  376 Size:     8
//   float2 maskScrollUVs;              // Offset:  384 Size:     8
//   float2 maskScaleUVs;               // Offset:  392 Size:     8
//   float2 maskOffsetUVs;              // Offset:  400 Size:     8
//   float2 maskZoomUVs;                // Offset:  408 Size:     8
//   float maskZoomRate;                // Offset:  416 Size:     4
//   bool noReceiveShadow;              // Offset:  420 Size:     4
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16 [unused]
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4 [unused]
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// colorSampler                      sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// specColorSampler                  sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// normalSampler                     sampler      NA          NA             s5      1 
// aoSampler                         sampler      NA          NA             s6      1 
// lookupSampler                     sampler      NA          NA             s7      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// floatZSampler                     texture  float4          2d             t0      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// colorMap                          texture  float4          2d            t21      1 
// tintMask                          texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// normalMap                         texture  float4          2d            t24      1 
// glossMap                          texture  float4          2d            t25      1 
// aoMap                             texture  float4          2d            t26      1 
// flickerLookupMap                  texture  float4          2d            t29      1 
// emissiveMap                       texture  float4          2d            t30      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// alphaMask                         texture  float4          2d            t37      1 
// distortionMap                     texture  float4          2d            t38      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyz 
// COLOR                    0   xyz         1     NONE   float   xyz 
// COLOR                    1      w        1     NONE   float      w
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 9     zw        2     NONE   float     zw
// UVOFFSETS                0   xyz         3     NONE   float   xyz 
// TEXCOORD                 1   xyz         4     NONE   float   xyz 
// TEXCOORD                 2   xyz         5     NONE   float   xyz 
// TEXCOORD                 3   xyz         6     NONE   float   xyz 
// OFFPOSITION              0   xyz         7     NONE   float   xyz 
// SV_IsFrontFace           0   x           8    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[27], immediateIndexed
dcl_constantbuffer CB1[93], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2d (float,float,float,float) t26
dcl_resource_texture2d (float,float,float,float) t29
dcl_resource_texture2d (float,float,float,float) t30
dcl_resource_texture2darray (float,float,float,float) t31
dcl_resource_texture2d (float,float,float,float) t37
dcl_resource_texture2d (float,float,float,float) t38
dcl_input_ps_siv linear noperspective v0.xyz, position
dcl_input_ps linear v1.xyz
dcl_input_ps linear v1.w
dcl_input_ps linear v2.xy
dcl_input_ps linear v2.zw
dcl_input_ps constant v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyz
dcl_input_ps_sgv constant v8.x, is_front_face
dcl_output o0.xyzw
dcl_temps 46
dp3 r0.x, -v7.xyzx, -v7.xyzx
rsq r0.x, r0.x
mul r0.yzw, r0.xxxx, -v7.xxyz
dp3 r1.x, r0.yzwy, v5.xyzx
dp3 r1.y, r0.yzwy, v6.xyzx
dp3 r1.z, r0.yzwy, v4.xyzx
lt r1.w, l(0.000000), r1.z
div r1.xy, -r1.xyxx, r1.zzzz
and r1.xy, r1.xyxx, r1.wwww
add r2.xy, v2.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r2.zw, r1.xxxy, l(0.000000, 0.000000, 0.000010, 0.000010)
mul r3.xy, r2.zwzz, cb0[21].zwzz
mad r3.xy, r2.xyxx, cb0[21].zwzz, r3.xyxx
mad r3.xy, cb0[22].xyxx, cb0[21].zwzz, r3.xyxx
mad r1.w, cb0[20].z, cb1[69].w, l(1.000000)
mul r1.w, r1.w, cb0[20].y
mul r1.w, r1.w, l(0.01745329)
sincos r4.x, r5.x, r1.w
mov r5.y, r5.x
mov r5.z, r4.x
dp2 r6.x, r5.yzyy, r3.xyxx
mov r5.x, -r4.x
dp2 r6.y, r5.xyxx, r3.xyxx
mul r3.xy, cb0[21].xyxx, cb1[69].wwww
mad r3.xy, r3.xyxx, cb0[21].zwzz, r6.xyxx
mul r1.w, cb0[23].x, cb1[69].w
sincos null, r1.w, r1.w
mad r1.w, r1.w, l(0.500000), l(0.500000)
add r1.w, -r1.w, l(1.000000)
add r3.z, -cb0[22].z, cb0[22].w
mad r1.w, r1.w, r3.z, cb0[22].z
div r3.xy, r3.xyxx, r1.wwww
add r3.xy, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r3.xy, r3.xyxx, t38.xyzw, s5
mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
lt r1.w, l(0.500000), cb0[20].x
if_nz r1.w
  mul r3.z, cb0[11].w, cb0[11].z
  mul r3.w, r3.z, cb0[12].x
  mul r4.x, r3.w, cb1[69].w
  ge r4.x, r4.x, -r4.x
  movc r4.x, r4.x, r3.w, -r3.w
  div r4.y, l(1.000000, 1.000000, 1.000000, 1.000000), r4.x
  mul r4.y, r4.y, cb1[69].w
  frc r4.y, r4.y
  mul r4.x, r4.y, r4.x
  div r3.w, r4.x, r3.w
  mul r3.z, r3.z, r3.w
  round_ne r3.z, r3.z
  div r3.w, r3.z, cb0[11].w
  mul r4.x, r3.z, cb0[11].w
  ge r4.x, r4.x, -r4.x
  movc r4.x, r4.x, cb0[11].w, -cb0[11].w
  div r4.y, l(1.000000, 1.000000, 1.000000, 1.000000), r4.x
  mul r3.z, r3.z, r4.y
  frc r3.z, r3.z
  mul r3.z, r3.z, r4.x
  round_z r3.z, r3.z
  add r3.z, r3.z, v2.x
  div r4.x, r3.z, cb0[11].w
  round_z r3.z, r3.w
  add r3.z, r3.z, v2.y
  div r4.y, r3.z, cb0[11].z
else 
  mul r3.zw, r2.zzzw, cb0[13].zzzw
  mad r3.zw, r2.xxxy, cb0[13].zzzw, r3.zzzw
  mad r3.zw, cb0[14].xxxy, cb0[13].zzzw, r3.zzzw
  mad r4.z, cb0[12].z, cb1[69].w, l(1.000000)
  mul r4.z, r4.z, cb0[12].y
  mul r4.z, r4.z, l(0.01745329)
  sincos r5.x, r6.x, r4.z
  mov r6.y, r6.x
  mov r6.z, r5.x
  dp2 r7.x, r6.yzyy, r3.zwzz
  mov r6.x, -r5.x
  dp2 r7.y, r6.xyxx, r3.zwzz
  mul r3.zw, cb0[13].xxxy, cb1[69].wwww
  mad r3.zw, r3.zzzw, cb0[13].zzzw, r7.xxxy
  mul r4.z, cb0[15].x, cb1[69].w
  sincos null, r4.z, r4.z
  mad r4.z, r4.z, l(0.500000), l(0.500000)
  add r4.z, -r4.z, l(1.000000)
  add r4.w, -cb0[14].z, cb0[14].w
  mad r4.z, r4.z, r4.w, cb0[14].z
  div r3.zw, r3.zzzw, r4.zzzz
  add r3.zw, r3.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
  mov_sat r4.zw, r3.zzzw
  movc r4.xy, cb0[15].zwzz, r4.zwzz, r3.zwzz
endif 
mad r3.zw, r3.xxxy, cb0[23].yyyy, r4.xxxy
sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r3.zwzz, t21.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r5.x, r3.zwzz, t22.xyzw, s1
add r5.yzw, cb0[10].xxyz, l(0.000000, -1.000000, -1.000000, -1.000000)
mad r5.xyz, r5.xxxx, r5.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r4.xyz, r4.xyzx, r5.xyzx
mul r4.xyz, r4.xyzx, v1.xyzx
sample_indexable(texture2d)(float,float,float,float) r5.x, r3.zwzz, t26.xyzw, s6
sample_indexable(texture2d)(float,float,float,float) r5.y, r3.zwzz, t25.yxzw, s3
add r5.z, -cb0[11].x, cb0[11].y
mad r5.y, r5.y, r5.z, cb0[11].x
mul_sat r5.y, r5.y, l(0.05882353)
sample_indexable(texture2d)(float,float,float,float) r6.xyz, r3.zwzz, t24.xyzw, s5
add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.000000, 0.000000)
mad r6.xyz, cb0[10].wwww, r6.xyzx, l(0.500000, 0.500000, 0.000000, 0.000000)
mad r5.zw, r6.xxxy, l(0.000000, 0.000000, 1.99218750, 1.99218750), l(0.000000, 0.000000, -1.000000, -1.000000)
dp2 r6.x, r5.zwzz, r5.zwzz
add r6.x, -r6.x, l(1.000000)
max r6.x, r6.x, l(0.000000)
sqrt r6.x, r6.x
mul r6.y, r6.z, r6.z
mul r6.y, r6.y, l(0.33333334)
min r6.y, r6.y, l(1.000000)
movc r6.z, v8.x, l(1.000000), l(-1.000000)
dp3 r6.w, v4.xyzx, v4.xyzx
rsq r6.w, r6.w
mul r7.xyz, r6.wwww, v4.xyzx
mul r7.xyz, r6.zzzz, r7.xyzx
dp3 r6.w, v5.xyzx, v5.xyzx
rsq r6.w, r6.w
mul r8.xyz, r6.wwww, v5.xyzx
mul r8.xyz, r6.zzzz, r8.xyzx
dp3 r6.w, v6.xyzx, v6.xyzx
rsq r6.w, r6.w
mul r9.xyz, r6.wwww, v6.xyzx
mul r9.xyz, r6.zzzz, r9.xyzx
mul r5.y, r5.y, l(-17.000000)
exp r5.y, r5.y
add r5.y, r5.y, r6.y
log r5.y, r5.y
mul r5.y, r5.y, l(-0.05882353)
max r10.y, r5.y, l(0.000000)
mul r6.yzw, r5.wwww, r9.xxyz
mad r5.yzw, r8.xxyz, r5.zzzz, r6.yyzw
mad r5.yzw, r7.xxyz, r6.xxxx, r5.yyzw
dp3 r6.x, r5.yzwy, r5.yzwy
rsq r6.x, r6.x
mul r6.xyz, r5.yzwy, r6.xxxx
if_nz r1.w
  mul r1.w, cb0[11].w, cb0[11].z
  mul r5.y, r1.w, cb0[12].x
  mul r5.z, r5.y, cb1[69].w
  ge r5.z, r5.z, -r5.z
  movc r5.z, r5.z, r5.y, -r5.y
  div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r5.z
  mul r5.w, r5.w, cb1[69].w
  frc r5.w, r5.w
  mul r5.z, r5.w, r5.z
  div r5.y, r5.z, r5.y
  mul r1.w, r1.w, r5.y
  round_ne r1.w, r1.w
  div r5.y, r1.w, cb0[11].w
  mul r5.z, r1.w, cb0[11].w
  ge r5.z, r5.z, -r5.z
  movc r5.z, r5.z, cb0[11].w, -cb0[11].w
  div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r5.z
  mul r1.w, r1.w, r5.w
  frc r1.w, r1.w
  mul r1.w, r1.w, r5.z
  round_z r1.w, r1.w
  add r1.w, r1.w, r3.z
  div r7.x, r1.w, cb0[11].w
  round_z r1.w, r5.y
  add r1.w, r1.w, r3.w
  div r7.y, r1.w, cb0[11].z
else 
  add r3.zw, r3.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
  add r1.w, cb0[15].y, l(0.000010)
  mul r1.xy, r1.wwww, r1.xyxx
  mul r1.xy, r1.xyxx, cb0[13].zwzz
  mad r1.xy, r3.zwzz, cb0[13].zwzz, r1.xyxx
  mad r1.xy, cb0[14].xyxx, cb0[13].zwzz, r1.xyxx
  mad r1.w, cb0[12].z, cb1[69].w, l(1.000000)
  mul r1.w, r1.w, cb0[12].y
  mul r1.w, r1.w, l(0.01745329)
  sincos r8.x, r9.x, r1.w
  mov r9.y, r9.x
  mov r9.z, r8.x
  dp2 r11.x, r9.yzyy, r1.xyxx
  mov r9.x, -r8.x
  dp2 r11.y, r9.xyxx, r1.xyxx
  mul r1.xy, cb0[13].xyxx, cb1[69].wwww
  mad r1.xy, r1.xyxx, cb0[13].zwzz, r11.xyxx
  mul r1.w, cb0[15].x, cb1[69].w
  sincos null, r1.w, r1.w
  mad r1.w, r1.w, l(0.500000), l(0.500000)
  add r1.w, -r1.w, l(1.000000)
  add r3.z, -cb0[14].z, cb0[14].w
  mad r1.w, r1.w, r3.z, cb0[14].z
  div r1.xy, r1.xyxx, r1.wwww
  add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  mov_sat r3.zw, r1.xxxy
  movc r7.xy, cb0[15].zwzz, r3.zwzz, r1.xyxx
endif 
mad r1.xy, r3.xyxx, cb0[23].yyyy, r7.xyxx
sample_indexable(texture2d)(float,float,float,float) r7.xyzw, r1.xyxx, t30.xyzw, s1
mul r1.xyw, r7.xyxz, cb0[10].xyxz
mov_sat r5.yzw, r1.xxyw
log r5.yzw, r5.yyzw
mul r5.yzw, r5.yyzw, cb0[19].zzzz
exp r5.yzw, r5.yyzw
mov_sat r3.z, r1.z
log r3.w, r3.z
mul r3.w, r3.w, cb0[18].z
exp r3.w, r3.w
add r3.z, -r3.z, l(1.000000)
log r3.z, r3.z
mul r3.z, r3.z, cb0[18].z
exp r3.z, r3.z
movc r3.z, cb0[18].x, r3.z, r3.w
eq r7.xy, cb0[18].zwzz, l(0.000000, 0.000000, 0.000000, 0.000000)
movc r3.z, r7.x, l(1.000000), r3.z
mul r3.w, r7.w, cb0[18].y
mul r3.z, r3.z, r3.w
mul r1.xyw, r1.xyxw, r3.zzzz
mul r5.yzw, r3.zzzz, r5.yyzw
add r3.z, v3.y, v3.x
add r3.z, r3.z, v3.z
add r3.z, r3.z, cb0[16].y
frc r3.z, r3.z
mad r8.y, cb1[69].w, cb0[16].z, r3.z
mov r8.x, cb0[16].x
sample_l_indexable(texture2d)(float,float,float,float) r3.z, r8.xyxx, t29.yzxw, s7, l(0.000000)
log r3.z, |r3.z|
mul r3.z, r3.z, cb0[17].z
exp r3.z, r3.z
add r3.w, -cb0[17].x, cb0[17].y
mad r3.z, r3.z, r3.w, cb0[17].x
mul r7.xzw, r1.xxyw, r3.zzzz
div r7.xzw, r7.xxzw, cb0[18].yyyy
dp3_sat r3.w, r7.xzwx, l(0.299000, 0.587000, 0.114000, 0.000000)
mad r3.w, r4.w, v1.w, r3.w
mul r2.zw, r2.zzzw, cb0[24].zzzw
mad r2.xy, r2.xyxx, cb0[24].zwzz, r2.zwzz
mad r2.xy, cb0[25].xyxx, cb0[24].zwzz, r2.xyxx
mad r2.z, cb1[69].w, cb0[23].w, l(1.000000)
mul r2.z, r2.z, cb0[23].z
mul r2.z, r2.z, l(0.01745329)
sincos r7.x, r8.x, r2.z
mov r8.y, r8.x
mov r8.z, r7.x
dp2 r9.x, r8.yzyy, r2.xyxx
mov r8.x, -r7.x
dp2 r9.y, r8.xyxx, r2.xyxx
mul r2.xy, cb0[24].xyxx, cb1[69].wwww
mad r2.xy, r2.xyxx, cb0[24].zwzz, r9.xyxx
mul r2.z, cb0[26].x, cb1[69].w
sincos null, r2.z, r2.z
mad r2.z, r2.z, l(0.500000), l(0.500000)
add r2.z, -r2.z, l(1.000000)
add r2.w, -cb0[25].z, cb0[25].w
mad r2.z, r2.z, r2.w, cb0[25].z
div r2.xy, r2.xyxx, r2.zzzz
add r2.xy, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
mov_sat r2.zw, r2.xxxy
movc r2.xy, cb0[15].zwzz, r2.zwzz, r2.xyxx
mad r2.xy, r3.xyxx, cb0[23].yyyy, r2.xyxx
sample_indexable(texture2d)(float,float,float,float) r2.x, r2.xyxx, t37.xyzw, s1
mul r2.x, r2.x, r3.w
mul r1.z, r1.z, r1.z
mad_sat r1.z, r1.z, v2.z, v2.w
mul r1.z, r1.z, r2.x
ftoi r2.xy, v0.xyxx
mov r2.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r2.x, r2.xyzw, t0.xyzw
ge r2.y, r2.x, l(0.984375)
mul r2.z, r2.x, l(1.01587307)
mad r2.x, r2.x, l(64.000000), l(-63.000000)
movc r2.x, r2.y, r2.x, r2.z
max r2.x, r2.x, l(0.00000001)
ge r2.y, v0.z, l(0.984375)
mul r2.z, v0.z, l(1.01587307)
mad r2.w, v0.z, l(64.000000), l(-63.000000)
movc r2.y, r2.y, r2.w, r2.z
max r2.y, r2.y, l(0.00000001)
rcp r2.xy, r2.xyxx
div r2.z, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[18].w
movc r2.z, r7.y, l(60000.000000), r2.z
add r2.x, -r2.y, r2.x
mul_sat r2.x, r2.z, r2.x
mul r1.z, r1.z, r2.x
ftou r2.xz, v0.xxyx
ine r2.w, cb1[92].x, l(0)
utof r3.xy, r2.zxzz
dp2 r3.w, r3.yxyy, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r3.w, r3.w
mul r3.w, r3.w, l(52.982918)
frc r3.w, r3.w
mad r3.w, r3.w, l(6.28318548), cb1[70].w
sincos r7.x, r8.x, r3.w
dp2 r3.x, r3.xyxx, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r3.x, r3.x
mul r3.x, r3.x, l(52.982918)
frc r3.x, r3.x
mad r3.x, r3.x, l(6.28318548), cb1[70].w
sincos r3.x, r9.x, r3.x
dp3_sat r10.x, r6.xyzx, r0.yzwy
dp3 r3.y, -r0.yzwy, r6.xyzx
add r3.y, r3.y, r3.y
mad r11.xyz, r6.xyzx, -r3.yyyy, -r0.yzwy
mul r3.y, r10.y, l(17.000000)
exp r3.y, r3.y
add r3.y, r3.y, l(2.000000)
div r3.y, l(2.000000), r3.y
sqrt r3.w, r3.y
add r4.w, -r10.y, l(1.000000)
mul r7.z, r4.w, l(5.000000)
mad r7.w, r4.w, l(5.000000), l(-2.500000)
mul r7.w, r7.w, l(0.400000)
max r7.w, r7.w, l(0.000000)
mul r7.w, r7.w, l(100.000000)
mad r9.yz, -r4.wwww, l(0.000000, 10.000000, 5.000000, 0.000000), l(0.000000, 6.857410, 7.085000, 0.000000)
exp r8.w, r9.y
mul r8.w, r8.w, r10.x
mul r8.w, r8.w, l(9.136810)
mul r9.y, r4.w, r7.z
mad r9.y, -r9.y, l(2.015905), r9.z
exp r9.y, r9.y
mul r9.y, r9.y, r10.x
mul r9.y, r9.y, l(9.708090)
max r8.w, r8.w, r9.y
max r8.w, r8.w, l(1.268160)
iadd r9.y, cb2[0].y, -cb2[58].x
mul r2.y, r2.y, l(0.00781250)
min r2.y, r2.y, l(15.000000)
ftou r2.y, r2.y
ushr r12.xy, r2.xzxx, l(6, 6, 0, 0)
ishl r12.z, r2.y, l(4)
and r2.x, r9.y, l(-32)
iadd r2.y, -r2.x, r9.y
and r2.z, cb2[0].y, l(-32)
iadd r9.z, -r2.z, cb2[0].y
mov r13.xy, l(0,0,0,0)
mov r14.w, l(0)
mov r15.yz, l(0,0,1.000000,0)
mov r16.xy, l(0,0,0,0)
mov r17.x, l(1.000000)
mov r18.xy, l(0,0,0,0)
mov r19.xy, l(0,0,0,0)
mov r20.xyzw, l(0,0,0,0)
mov r21.yzw, l(0,0,0,0)
mov r9.w, r2.x
loop 
  uge r10.z, r9.w, cb2[0].y
  breakc_nz r10.z
  ushr r13.z, r9.w, l(5)
  iadd r14.xyz, r12.xyzx, r13.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r10.z, r14.xyzw, t7.yzxw
  ieq r10.w, r2.x, r9.w
  bfi r12.w, r2.y, l(0), l(0), r10.z
  movc r10.z, r10.w, r12.w, r10.z
  ieq r10.w, r2.z, r9.w
  ubfe r12.w, r9.z, l(0), r10.z
  movc r10.z, r10.w, r12.w, r10.z
  iadd r10.w, r9.w, cb2[0].x
  mov r22.xyzw, r20.xyzw
  mov r23.xyz, r21.yzwy
  mov r12.w, r10.z
  loop 
    breakc_z r12.w
    firstbit_lo r13.z, r12.w
    ishl r13.w, l(1), r13.z
    and r14.x, r12.w, r13.w
    if_nz r14.x
      xor r12.w, r12.w, r13.w
      iadd r13.w, r10.w, r13.z
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r24.xyzw, r13.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r14.xy, r13.w, l(16), t11.xyxx
      add r24.xyz, r24.xyzx, -v7.xyzx
      mov r14.z, r24.w
      lt r14.xyz, |r24.xyzx|, r14.zxyz
      and r13.w, r14.y, r14.x
      and r13.w, r14.z, r13.w
      if_nz r13.w
        iadd r13.z, r9.w, r13.z
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r13.z, l(0), t15.wxyz
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r14.xy, r13.z, l(96), t15.xyxx
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r13.z, l(116), t15.zwxy
        add r26.xyz, -r24.yzwy, v7.xyzx
        and r13.w, r25.w, l(0x0000ffff)
        ubfe r14.z, l(6), l(25), r25.w
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r13.w, l(0), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r13.w, l(16), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r13.w, l(32), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r13.w, l(48), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r13.w, l(64), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r13.w, l(80), t16.xyzw
        dp3 r15.w, r27.xyzx, r26.xyzx
        add_sat r15.w, r27.w, r15.w
        dp3 r16.w, r28.xyzx, r26.xyzx
        add_sat r16.w, r28.w, r16.w
        mul r15.w, r15.w, r16.w
        dp3 r16.w, r29.xyzx, r26.xyzx
        add_sat r16.w, r29.w, r16.w
        mul r15.w, r15.w, r16.w
        dp3 r16.w, r30.xyzx, r26.xyzx
        add_sat r16.w, r30.w, r16.w
        mul r15.w, r15.w, r16.w
        dp3 r16.w, r31.xyzx, r26.xyzx
        add_sat r16.w, r31.w, r16.w
        mul r15.w, r15.w, r16.w
        dp3 r16.w, r32.xyzx, r26.xyzx
        add_sat r16.w, r32.w, r16.w
        mul r15.x, r15.w, r16.w
        and r15.w, r14.x, l(1)
        movc r15.xw, r15.wwww, r15.xxxy, r15.zzzx
        mov r16.w, r14.x
        mov r27.xy, r15.xwxx
        mov r17.z, l(1)
        loop 
          ige r17.w, r17.z, r14.z
          breakc_nz r17.w
          iadd r17.w, r13.w, r17.z
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r17.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r17.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r17.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r17.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r17.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r17.w, l(80), t16.xyzw
          dp3 r17.w, r28.xyzx, r26.xyzx
          add_sat r17.w, r28.w, r17.w
          mul r17.w, r17.w, r27.x
          dp3 r18.w, r29.xyzx, r26.xyzx
          add_sat r18.w, r29.w, r18.w
          mul r17.w, r17.w, r18.w
          dp3 r18.w, r30.xyzx, r26.xyzx
          add_sat r18.w, r30.w, r18.w
          mul r17.w, r17.w, r18.w
          dp3 r18.w, r31.xyzx, r26.xyzx
          add_sat r18.w, r31.w, r18.w
          mul r17.w, r17.w, r18.w
          dp3 r18.w, r32.xyzx, r26.xyzx
          add_sat r18.w, r32.w, r18.w
          mul r17.w, r17.w, r18.w
          dp3 r18.w, r33.xyzx, r26.xyzx
          add_sat r18.w, r33.w, r18.w
          mul r27.x, r17.w, r18.w
          ushr r19.w, r16.w, l(2)
          ubfe r24.w, l(1), l(2), r16.w
          and r26.w, r19.w, l(2)
          max r27.z, r27.x, r27.y
          mad r17.w, -r17.w, r18.w, l(1.000000)
          mul r17.w, r17.w, r27.y
          movc r17.y, r26.w, r17.w, r27.z
          movc r27.xy, r24.wwww, r27.xyxx, r17.xyxx
          iadd r17.z, r17.z, l(1)
          mov r16.w, r19.w
        endloop 
        mov_sat r27.y, r27.y
        mul r13.w, r14.y, r27.y
        lt r14.x, l(0.000000), r13.w
        if_nz r14.x
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r13.z, l(16), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r13.z, l(32), t15.yxwz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r13.z, l(48), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r13.z, l(64), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r13.z, l(80), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r13.z, l(132), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r13.z, l(148), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r13.z, l(164), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r13.z, l(180), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r13.z, l(196), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xy, r13.z, l(212), t15.xyxx
          mad r23.z, r27.y, r14.y, r23.z
          mul r13.z, r25.z, r13.w
          mov r25.z, r33.z
          dp3 r13.w, r11.xyzx, r25.xyzx
          dp3 r14.x, r26.xyzx, r25.xyzx
          add r14.x, -r33.w, r14.x
          ge r14.y, r14.x, l(0.000000)
          max r14.x, r7.w, |r14.x|
          movc r14.x, r14.y, r14.x, -r14.x
          max r13.w, -r13.w, l(0.00000010)
          div r13.w, r14.x, r13.w
          min r13.w, |r13.w|, l(131072.000000)
          mov r33.z, r34.z
          dp3 r14.x, r11.xyzx, r33.xyzx
          dp3 r14.y, r26.xyzx, r33.xyzx
          add r14.y, -r34.w, r14.y
          ge r14.z, r14.y, l(0.000000)
          max r14.y, r7.w, |r14.y|
          movc r14.y, r14.z, r14.y, -r14.y
          max r14.x, -r14.x, l(0.00000010)
          div r14.x, r14.y, r14.x
          min r13.w, r13.w, |r14.x|
          mov r34.z, r35.z
          dp3 r14.x, r11.xyzx, r34.xyzx
          dp3 r14.y, r26.xyzx, r34.xyzx
          add r14.y, -r35.w, r14.y
          ge r14.z, r14.y, l(0.000000)
          max r14.y, r7.w, |r14.y|
          movc r14.y, r14.z, r14.y, -r14.y
          max r14.x, -r14.x, l(0.00000010)
          div r14.x, r14.y, r14.x
          min r13.w, r13.w, |r14.x|
          mov r35.z, r36.z
          dp3 r14.x, r11.xyzx, r35.xyzx
          dp3 r14.y, r26.xyzx, r35.xyzx
          add r14.y, -r36.w, r14.y
          ge r14.z, r14.y, l(0.000000)
          max r14.y, r7.w, |r14.y|
          movc r14.y, r14.z, r14.y, -r14.y
          max r14.x, -r14.x, l(0.00000010)
          div r14.x, r14.y, r14.x
          min r13.w, r13.w, |r14.x|
          mov r36.z, r37.x
          dp3 r14.x, r11.xyzx, r36.xyzx
          dp3 r14.y, r26.xyzx, r36.xyzx
          add r14.y, -r37.y, r14.y
          ge r14.z, r14.y, l(0.000000)
          max r14.y, r7.w, |r14.y|
          movc r14.y, r14.z, r14.y, -r14.y
          max r14.x, -r14.x, l(0.00000010)
          div r14.x, r14.y, r14.x
          min r13.w, r13.w, |r14.x|
          mov r38.zw, r37.zzzw
          dp3 r14.x, r11.zxyz, r38.xzwx
          dp3 r14.y, r26.zxyz, r38.xzwx
          add r14.y, -r38.y, r14.y
          ge r14.z, r14.y, l(0.000000)
          max r14.y, r7.w, |r14.y|
          movc r14.y, r14.z, r14.y, -r14.y
          max r14.x, -r14.x, l(0.00000010)
          div r14.x, r14.y, r14.x
          min r13.w, r13.w, |r14.x|
          mov r14.x, r30.w
          mov r14.yz, r31.zzwz
          add r14.xyz, r26.xyzx, r14.xyzx
          mad r14.xyz, r11.xyzx, r13.wwww, r14.xyzx
          dp3 r15.x, r14.xyzx, r14.xyzx
          sqrt r15.x, r15.x
          div r13.w, r13.w, r15.x
          add r13.w, r13.w, r13.w
          sqrt r13.w, r13.w
          mad r13.w, r4.w, l(5.000000), r13.w
          add r13.w, r13.w, l(-0.844800)
          mov r24.y, r28.z
          mov r24.z, r29.x
          dp3 r33.x, r14.xyzx, r24.xyzx
          mov r25.xy, r28.xwxx
          mov r25.z, r29.w
          dp3 r33.y, r14.xyzx, r25.xyzx
          mov r29.x, r28.y
          dp3 r33.z, r14.xyzx, r29.xyzx
          ubfe r14.x, l(9), l(16), r25.w
          utof r33.w, r14.x
          sample_l_indexable(texturecubearray)(float,float,float,float) r14.xyz, r33.xyzw, t8.xyzw, s2, r13.w
          dp3 r28.x, r26.xyzx, r24.xyzx
          dp3 r28.y, r26.xyzx, r25.xyzx
          dp3 r28.z, r26.xyzx, r29.xyzx
          mad_sat r17.yzw, r28.xxyz, r30.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
          mov r31.z, r32.x
          mad r17.yzw, r17.yyzw, r31.xxyz, r32.yyzw
          dp3 r33.x, r6.xyzx, r24.xyzx
          dp3 r33.y, r6.xyzx, r25.xyzx
          dp3 r33.z, r6.xyzx, r29.xyzx
          lt r24.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r33.xyzx
          movc r16.z, r24.x, l(0), l(0.500000)
          add r25.xyz, r16.xyzx, r17.yzwy
          sample_l_indexable(texture3d)(float,float,float,float) r25.xyz, r25.xyzx, t17.xyzw, s4, l(0.000000)
          mul r26.xyz, r33.xyzx, r33.xyzx
          mul r26.xyz, r13.zzzz, r26.xyzx
          movc r18.z, r24.y, l(0), l(0.500000)
          add r24.xyw, r17.yzyw, r18.xyxz
          sample_l_indexable(texture3d)(float,float,float,float) r24.xyw, r24.xywx, t18.xywz, s4, l(0.000000)
          mul r24.xyw, r26.yyyy, r24.xyxw
          mad r24.xyw, r25.xyxz, r26.xxxx, r24.xyxw
          movc r19.z, r24.z, l(0), l(0.500000)
          add r17.yzw, r17.yyzw, r19.xxyz
          sample_l_indexable(texture3d)(float,float,float,float) r17.yzw, r17.yzwy, t19.wxyz, s4, l(0.000000)
          mad r17.yzw, r17.yyzw, r26.zzzz, r24.xxyw
          sample_l_indexable(texturecubearray)(float,float,float,float) r24.xyz, r33.xyzw, t8.xyzw, s2, l(6.000000)
          mul r25.xyz, r17.yzwy, r24.xyzx
          dp3 r13.w, r25.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r22.xyz, r17.yzwy, r24.xyzx, r22.xyzx
          mul r15.x, r8.w, r13.w
          mul r14.xyz, r13.zzzz, r14.xyzx
          dp3 r13.z, r14.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r13.z, r8.w, r13.w, r13.z
          div r13.z, r15.x, r13.z
          mov r24.x, r22.w
          mov r24.yz, r23.xxyx
          mad r23.xyw, r14.yzyx, r13.zzzz, r24.yzyx
          mov r22.w, r23.w
        endif 
      endif 
    endif 
  endloop 
  mov r20.xyzw, r22.xyzw
  mov r21.yzw, r23.xxyz
  iadd r9.w, r9.w, l(32)
endloop 
lt r2.z, r21.w, l(1.000000)
if_nz r2.z
  mov r13.xy, l(0,0,0,0)
  mov r14.w, l(0)
  mov r15.yz, l(0,0,1.000000,0)
  mov r16.xy, l(0,0,0,0)
  mov r17.x, l(1.000000)
  mov r18.xy, l(0,0,0,0)
  mov r19.xy, l(0,0,0,0)
  mov r22.x, r20.w
  mov r22.yzw, r21.yyzw
  mov r23.xyz, r20.xyzx
  mov r2.z, r21.w
  mov r9.z, l(0)
  loop 
    uge r9.w, r9.z, r9.y
    breakc_nz r9.w
    ushr r13.z, r9.z, l(5)
    iadd r14.xyz, r12.xyzx, r13.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r9.w, r14.xyzw, t7.yzwx
    ieq r10.z, r2.x, r9.z
    ubfe r10.w, r2.y, l(0), r9.w
    movc r9.w, r10.z, r10.w, r9.w
    iadd r10.z, r9.z, cb2[0].x
    mov r24.xyzw, r22.xyzw
    mov r14.xyz, r23.xyzx
    mov r10.w, r2.z
    mov r12.w, r9.w
    loop 
      breakc_z r12.w
      firstbit_lo r13.z, r12.w
      ishl r13.w, l(1), r13.z
      and r15.w, r12.w, r13.w
      if_nz r15.w
        xor r12.w, r12.w, r13.w
        iadd r13.w, r10.z, r13.z
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r25.xyzw, r13.w, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r26.xy, r13.w, l(16), t11.xyxx
        add r25.xyz, r25.xyzx, -v7.xyzx
        mov r26.z, r25.w
        lt r25.xyz, |r25.xyzx|, r26.zxyz
        and r13.w, r25.y, r25.x
        and r13.w, r25.z, r13.w
        if_nz r13.w
          iadd r13.z, r9.z, r13.z
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r13.z, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r17.zw, r13.z, l(96), t15.xxxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r13.z, l(116), t15.zwxy
          add r27.xyz, -r25.yzwy, v7.xyzx
          and r13.w, r26.w, l(0x0000ffff)
          ubfe r15.w, l(6), l(25), r26.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r13.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r13.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r13.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r13.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r13.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r13.w, l(80), t16.xyzw
          dp3 r16.w, r28.xyzx, r27.xyzx
          add_sat r16.w, r28.w, r16.w
          dp3 r18.w, r29.xyzx, r27.xyzx
          add_sat r18.w, r29.w, r18.w
          mul r16.w, r16.w, r18.w
          dp3 r18.w, r30.xyzx, r27.xyzx
          add_sat r18.w, r30.w, r18.w
          mul r16.w, r16.w, r18.w
          dp3 r18.w, r31.xyzx, r27.xyzx
          add_sat r18.w, r31.w, r18.w
          mul r16.w, r16.w, r18.w
          dp3 r18.w, r32.xyzx, r27.xyzx
          add_sat r18.w, r32.w, r18.w
          mul r16.w, r16.w, r18.w
          dp3 r18.w, r33.xyzx, r27.xyzx
          add_sat r18.w, r33.w, r18.w
          mul r15.x, r16.w, r18.w
          and r16.w, r17.z, l(1)
          movc r28.xy, r16.wwww, r15.xyxx, r15.zxzz
          mov r15.x, r17.z
          mov r29.xy, r28.xyxx
          mov r16.w, l(1)
          loop 
            ige r18.w, r16.w, r15.w
            breakc_nz r18.w
            iadd r18.w, r13.w, r16.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r18.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r18.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r18.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r18.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r18.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r18.w, l(80), t16.xyzw
            dp3 r18.w, r30.xyzx, r27.xyzx
            add_sat r18.w, r30.w, r18.w
            mul r18.w, r18.w, r29.x
            dp3 r19.w, r31.xyzx, r27.xyzx
            add_sat r19.w, r31.w, r19.w
            mul r18.w, r18.w, r19.w
            dp3 r19.w, r32.xyzx, r27.xyzx
            add_sat r19.w, r32.w, r19.w
            mul r18.w, r18.w, r19.w
            dp3 r19.w, r33.xyzx, r27.xyzx
            add_sat r19.w, r33.w, r19.w
            mul r18.w, r18.w, r19.w
            dp3 r19.w, r34.xyzx, r27.xyzx
            add_sat r19.w, r34.w, r19.w
            mul r18.w, r18.w, r19.w
            dp3 r19.w, r35.xyzx, r27.xyzx
            add_sat r19.w, r35.w, r19.w
            mul r29.x, r18.w, r19.w
            ushr r23.w, r15.x, l(2)
            ubfe r25.w, l(1), l(2), r15.x
            and r27.w, r23.w, l(2)
            max r28.z, r29.x, r29.y
            mad r18.w, -r18.w, r19.w, l(1.000000)
            mul r18.w, r18.w, r29.y
            movc r17.y, r27.w, r18.w, r28.z
            movc r29.xy, r25.wwww, r29.xyxx, r17.xyxx
            iadd r16.w, r16.w, l(1)
            mov r15.x, r23.w
          endloop 
          add_sat r13.w, -r10.w, r29.y
          mul r15.x, r17.w, r13.w
          lt r15.w, l(0.000000), r15.x
          if_nz r15.w
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r13.z, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r13.z, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r13.z, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r13.z, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r13.z, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r13.z, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r13.z, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r13.z, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r13.z, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r13.z, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xy, r13.z, l(212), t15.xyxx
            mad r24.w, r13.w, r17.w, r24.w
            mul r13.z, r26.z, r15.x
            mov r26.z, r34.z
            dp3 r13.w, r11.xyzx, r26.xyzx
            dp3 r15.x, r27.xyzx, r26.xyzx
            add r15.x, -r34.w, r15.x
            ge r15.w, r15.x, l(0.000000)
            max r15.x, r7.w, |r15.x|
            movc r15.x, r15.w, r15.x, -r15.x
            max r13.w, -r13.w, l(0.00000010)
            div r13.w, r15.x, r13.w
            min r13.w, |r13.w|, l(131072.000000)
            mov r34.z, r35.z
            dp3 r15.x, r11.xyzx, r34.xyzx
            dp3 r15.w, r27.xyzx, r34.xyzx
            add r15.w, -r35.w, r15.w
            ge r16.w, r15.w, l(0.000000)
            max r15.w, r7.w, |r15.w|
            movc r15.w, r16.w, r15.w, -r15.w
            max r15.x, -r15.x, l(0.00000010)
            div r15.x, r15.w, r15.x
            min r13.w, r13.w, |r15.x|
            mov r35.z, r36.z
            dp3 r15.x, r11.xyzx, r35.xyzx
            dp3 r15.w, r27.xyzx, r35.xyzx
            add r15.w, -r36.w, r15.w
            ge r16.w, r15.w, l(0.000000)
            max r15.w, r7.w, |r15.w|
            movc r15.w, r16.w, r15.w, -r15.w
            max r15.x, -r15.x, l(0.00000010)
            div r15.x, r15.w, r15.x
            min r13.w, r13.w, |r15.x|
            mov r36.z, r37.z
            dp3 r15.x, r11.xyzx, r36.xyzx
            dp3 r15.w, r27.xyzx, r36.xyzx
            add r15.w, -r37.w, r15.w
            ge r16.w, r15.w, l(0.000000)
            max r15.w, r7.w, |r15.w|
            movc r15.w, r16.w, r15.w, -r15.w
            max r15.x, -r15.x, l(0.00000010)
            div r15.x, r15.w, r15.x
            min r13.w, r13.w, |r15.x|
            mov r37.z, r38.x
            dp3 r15.x, r11.xyzx, r37.xyzx
            dp3 r15.w, r27.xyzx, r37.xyzx
            add r15.w, -r38.y, r15.w
            ge r16.w, r15.w, l(0.000000)
            max r15.w, r7.w, |r15.w|
            movc r15.w, r16.w, r15.w, -r15.w
            max r15.x, -r15.x, l(0.00000010)
            div r15.x, r15.w, r15.x
            min r13.w, r13.w, |r15.x|
            mov r39.zw, r38.zzzw
            dp3 r15.x, r11.zxyz, r39.xzwx
            dp3 r15.w, r27.zxyz, r39.xzwx
            add r15.w, -r39.y, r15.w
            ge r16.w, r15.w, l(0.000000)
            max r15.w, r7.w, |r15.w|
            movc r15.w, r16.w, r15.w, -r15.w
            max r15.x, -r15.x, l(0.00000010)
            div r15.x, r15.w, r15.x
            min r13.w, r13.w, |r15.x|
            mov r26.x, r31.w
            mov r26.yz, r32.zzwz
            add r17.yzw, r27.xxyz, r26.xxyz
            mad r17.yzw, r11.xxyz, r13.wwww, r17.yyzw
            dp3 r15.x, r17.yzwy, r17.yzwy
            sqrt r15.x, r15.x
            div r13.w, r13.w, r15.x
            add r13.w, r13.w, r13.w
            sqrt r13.w, r13.w
            mad r13.w, r4.w, l(5.000000), r13.w
            add r13.w, r13.w, l(-0.844800)
            mov r25.y, r28.z
            mov r25.z, r30.x
            dp3 r34.x, r17.yzwy, r25.xyzx
            mov r26.xy, r28.xwxx
            mov r26.z, r30.w
            dp3 r34.y, r17.yzwy, r26.xyzx
            mov r30.x, r28.y
            dp3 r34.z, r17.yzwy, r30.xyzx
            ubfe r15.x, l(9), l(16), r26.w
            utof r34.w, r15.x
            sample_l_indexable(texturecubearray)(float,float,float,float) r17.yzw, r34.xyzw, t8.wxyz, s2, r13.w
            dp3 r28.x, r27.xyzx, r25.xyzx
            dp3 r28.y, r27.xyzx, r26.xyzx
            dp3 r28.z, r27.xyzx, r30.xyzx
            mad_sat r27.xyz, r28.xyzx, r31.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
            mov r32.z, r33.x
            mad r27.xyz, r27.xyzx, r32.xyzx, r33.yzwy
            dp3 r34.x, r6.xyzx, r25.xyzx
            dp3 r34.y, r6.xyzx, r26.xyzx
            dp3 r34.z, r6.xyzx, r30.xyzx
            lt r25.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r34.xyzx
            movc r16.z, r25.x, l(0), l(0.500000)
            add r26.xyz, r16.xyzx, r27.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r26.xyz, r26.xyzx, t17.xyzw, s4, l(0.000000)
            mul r28.xyz, r34.xyzx, r34.xyzx
            mul r28.xyz, r13.zzzz, r28.xyzx
            movc r18.z, r25.y, l(0), l(0.500000)
            add r25.xyw, r18.xyxz, r27.xyxz
            sample_l_indexable(texture3d)(float,float,float,float) r25.xyw, r25.xywx, t18.xywz, s4, l(0.000000)
            mul r25.xyw, r28.yyyy, r25.xyxw
            mad r25.xyw, r26.xyxz, r28.xxxx, r25.xyxw
            movc r19.z, r25.z, l(0), l(0.500000)
            add r26.xyz, r19.xyzx, r27.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r26.xyz, r26.xyzx, t19.xyzw, s4, l(0.000000)
            mad r25.xyz, r26.xyzx, r28.zzzz, r25.xywx
            sample_l_indexable(texturecubearray)(float,float,float,float) r26.xyz, r34.xyzw, t8.xyzw, s2, l(6.000000)
            mul r27.xyz, r25.xyzx, r26.xyzx
            dp3 r13.w, r27.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r14.xyz, r25.xyzx, r26.xyzx, r14.xyzx
            mul r15.x, r8.w, r13.w
            mul r17.yzw, r13.zzzz, r17.yyzw
            dp3 r13.z, r17.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r13.z, r8.w, r13.w, r13.z
            div r13.z, r15.x, r13.z
            mad r24.xyz, r17.yzwy, r13.zzzz, r24.xyzx
          endif 
        endif 
      endif 
    endloop 
    mov r22.xyzw, r24.xyzw
    mov r23.xyz, r14.xyzx
    iadd r9.z, r9.z, l(32)
  endloop 
  mov r21.xyzw, r22.zxyw
  mov r20.xyz, r23.xyzx
  mov r21.xyzw, r21.yzxw
else 
  mov r21.x, r20.w
endif 
max r2.x, r21.w, l(1.000000)
rcp r2.x, r2.x
mov_sat r21.w, r21.w
mul r9.yzw, r2.xxxx, r20.xxyz
mul r13.xyz, r2.xxxx, r21.xyzx
lt r2.y, r21.w, l(0.990000)
if_nz r2.y
  add r2.y, -r21.w, l(1.000000)
  mul r2.z, r2.y, cb2[19].x
  add r14.xyz, v7.xyzx, -cb2[35].xyzx
  mul r15.x, r14.x, cb2[35].w
  mul r15.yz, r14.yyzy, cb2[36].xxyx
  add_sat r14.xyz, r15.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mul r15.xy, r14.xyxx, cb2[36].zwzz
  mul r15.z, r14.z, cb2[37].x
  add r14.xyz, r15.xyzx, cb2[37].yzwy
  lt r15.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
  movc r15.xyz, r15.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
  mov r15.w, l(0)
  add r16.xyz, r14.xyzx, r15.wwxw
  sample_l_indexable(texture3d)(float,float,float,float) r16.xyz, r16.xyzx, t17.xyzw, s4, l(0.000000)
  mul r17.xyz, r6.xyzx, r6.xyzx
  mul r17.xyz, r2.zzzz, r17.xyzx
  add r18.xyz, r14.xyzx, r15.wwyw
  sample_l_indexable(texture3d)(float,float,float,float) r18.xyz, r18.xyzx, t18.xyzw, s4, l(0.000000)
  mul r18.xyz, r17.yyyy, r18.xyzx
  mad r16.xyz, r16.xyzx, r17.xxxx, r18.xyzx
  add r14.xyz, r14.xyzx, r15.wwzw
  sample_l_indexable(texture3d)(float,float,float,float) r14.xyz, r14.xyzx, t19.xyzw, s4, l(0.000000)
  mad r14.xyz, r14.xyzx, r17.zzzz, r16.xyzx
  mov r6.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r15.xyz, r6.xyzw, t8.xyzw, s2, l(6.000000)
  mul r14.xyz, r14.xyzx, r15.xyzx
  dp3 r2.z, r14.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  mad r9.yzw, r20.xxyz, r2.xxxx, r14.xxyz
  mov r11.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r14.xyz, r11.xyzw, t8.xyzw, s2, r7.z
  mad r2.x, cb2[19].x, r2.y, -r2.z
  mad r2.x, r10.y, r2.x, r2.z
  mad r13.xyz, r14.xyzx, r2.xxxx, r13.xyzx
endif 
add r2.x, r5.x, r10.x
log r2.x, |r2.x|
mul r2.x, r2.x, r3.w
exp r2.x, r2.x
add r2.x, r5.x, r2.x
add_sat r2.x, r2.x, l(-1.000000)
mul r14.xyz, r5.xxxx, r9.yzwy
mad r2.yz, r10.xxyx, l(0.000000, 0.984375, 0.984375, 0.000000), l(0.000000, 0.00781250, 0.00781250, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r2.yz, r2.yzyy, t5.zxyw, s2, l(0.000000)
mul r9.yzw, r2.xxxx, r13.xxyz
mul r13.xyz, r2.yyyy, r9.zwyz
mul r2.xyz, r2.zzzz, r9.yzwy
sqrt r4.w, r3.w
mad r4.w, r4.w, l(0.500000), l(0.500000)
mul r4.w, r4.w, r4.w
mul r5.x, r4.w, l(0.500000)
mad r4.w, -r4.w, l(0.500000), l(1.000000)
mad r6.w, r10.x, r4.w, r5.x
mul r4.w, r4.w, r6.w
mul r5.x, r5.x, r6.w
if_z cb0[26].y
  dp3 r6.w, r6.xyzx, cb2[17].xyzx
  ge r6.w, l(0.000000), |r6.w|
  if_nz r6.w
    mov r7.z, l(0)
  endif 
  if_z r6.w
    mul r9.yzw, v7.yyyy, cb2[29].xxyz
    mad r9.yzw, v7.xxxx, cb2[28].xxyz, r9.yyzw
    mad r9.yzw, v7.zzzz, cb2[30].xxyz, r9.yyzw
    add r9.yzw, r9.yyzw, cb2[31].xxyz
    add r6.w, r9.w, -cb2[17].w
    mad r6.w, -r6.w, l(0.00006104), l(1.000000)
    mov_sat r7.w, r6.w
    eq r7.w, r6.w, r7.w
    if_nz r7.w
      mov r7.w, l(0)
      mov r8.w, l(0)
      loop 
        ge r10.y, r7.w, l(3.000000)
        breakc_nz r10.y
        ftou r10.y, r7.w
        add r10.zw, r9.yyyz, -cb2[r10.y + 20].xxxy
        max r10.z, |r10.w|, |r10.z|
        mul r8.w, r10.z, cb2[r10.y + 20].z
        lt r10.y, r8.w, l(1.000000)
        if_nz r10.y
          break 
        endif 
        add r7.w, r7.w, l(1.000000)
        mov r8.w, l(0)
      endloop 
    else 
      mov r7.w, l(3.000000)
      mov r8.w, l(0)
    endif 
    ge r10.y, r7.w, l(3.000000)
    if_nz r10.y
      mul r15.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
      rcp r16.xz, r15.xxxx
      mov r16.y, -r16.z
      mad r15.xyz, r9.yzyy, r16.xyzx, r15.yzyy
      add r16.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
      max r15.xyz, r15.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
      min r15.xyz, r16.xyzx, r15.xyzx
      mul r10.zw, r15.zzzy, cb2[32].xxxx
      round_ni r10.zw, r10.zzzw
      mul r10.w, r10.w, cb2[27].x
      mad r10.z, r10.w, cb2[32].x, r10.z
      ftou r10.z, r10.z
      iadd r10.z, r10.z, cb2[32].y
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r10.w, r10.z, l(0), t23.xxxx
      and r11.w, r10.w, l(0x40000000)
      ishl r12.w, r10.w, l(2)
      if_z r11.w
        and r11.w, r10.w, l(0x01ffffff)
        iadd r16.x, r10.z, r11.w
        ushr r10.z, r10.w, l(25)
        utof r10.z, r10.z
        mul r15.xyz, r10.zzzz, r15.xyzx
        frc r15.xyz, r15.xyzx
        mul r15.xyz, r15.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
        ftou r15.xyz, r15.xyzx
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.z, r16.x, l(0), t23.xxxx
        ushr r10.zw, r15.zzzy, l(0, 0, 6, 6)
        and r11.w, r16.z, l(0xc0000000)
        iadd r15.w, r16.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.w, r15.w, l(0), t23.xxxx
        movc r10.w, r10.w, r16.z, r15.w
        ushr r15.w, r10.w, l(13)
        movc r10.z, r10.z, r15.w, r10.w
        and r10.z, r10.z, l(8191)
        iadd r17.x, r10.z, r16.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.z, r17.x, l(0), t23.xxxx
        mov r16.y, l(0)
        mov r17.y, l(1)
        movc r17.xyz, r11.wwww, r16.xyzx, r17.xyzx
        movc r18.yz, r11.wwww, l(0,6,1,0), l(0,5,2,0)
        ushr r10.zw, r15.zzzy, r18.yyyy
        and r10.zw, r10.zzzw, l(0, 0, 1, 1)
        and r15.w, r17.z, l(0xc0000000)
        iadd r16.w, r17.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.w, r16.w, l(0), t23.xxxx
        movc r10.w, r10.w, r17.z, r16.w
        ushr r16.w, r10.w, l(13)
        movc r10.z, r10.z, r16.w, r10.w
        and r10.z, r10.z, l(8191)
        iadd r18.x, r10.z, r17.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.w, r18.x, l(0), t23.xxxx
        movc r17.xyz, r15.wwww, r17.xyzx, r18.xzwx
        movc r16.xyz, r11.wwww, r16.xyzx, r17.xyzx
        and r10.z, r16.z, l(0xc0000000)
        if_z r10.z
          iadd r10.z, -r16.y, l(6)
          ushr r10.zw, r15.zzzy, r10.zzzz
          or r11.w, r16.z, l(0x40000000)
          bfi r10.w, l(1), l(1), r10.w, l(0)
          bfi r10.z, l(1), l(0), r10.z, r10.w
          imul null, r10.z, r10.z, l(10)
          ushr r10.z, r11.w, r10.z
          and r10.z, r10.z, l(1023)
          iadd r17.x, r10.z, r16.x
          ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.w, r17.x, l(0), t23.xxxx
          iadd r17.yz, r16.yyyy, l(0, 1, 2, 0)
          iadd r10.z, -r17.y, l(6)
          ushr r10.zw, r15.zzzy, r10.zzzz
          and r11.w, r17.w, l(0xc0000000)
          or r15.w, r17.w, l(0x40000000)
          bfi r10.w, l(1), l(1), r10.w, l(0)
          bfi r10.z, l(1), l(0), r10.z, r10.w
          imul null, r10.z, r10.z, l(10)
          ushr r10.z, r15.w, r10.z
          and r10.z, r10.z, l(1023)
          iadd r18.x, r10.z, r17.x
          ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.x, l(0), t23.xxxx
          mov r18.y, r17.z
          movc r18.xyz, r11.wwww, r17.xywx, r18.xyzx
          iadd r10.z, -r18.y, l(6)
          ushr r10.zw, r15.zzzy, r10.zzzz
          and r15.w, r18.z, l(0xc0000000)
          or r16.y, r18.z, l(0x40000000)
          bfi r10.w, l(1), l(1), r10.w, l(0)
          bfi r10.z, l(1), l(0), r10.z, r10.w
          imul null, r10.z, r10.z, l(10)
          ushr r10.z, r16.y, r10.z
          and r10.z, r10.z, l(1023)
          iadd r19.x, r10.z, r18.x
          ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.y, r19.x, l(0), t23.xxxx
          movc r10.zw, r15.wwww, r18.xxxz, r19.xxxy
          movc r16.xz, r11.wwww, r17.xxwx, r10.zzwz
        endif 
        and r10.z, r16.z, l(0xc0000000)
        if_z r10.z
          ubfe r10.w, l(14), l(15), r16.z
          utof r10.w, r10.w
          mul r10.w, r10.w, cb2[27].w
          mul r10.w, r10.w, l(0.00006104)
          and r16.yw, r16.zzzz, l(0, 0x00007fff, 0, 0x20000000)
          utof r11.w, r16.y
          mul r11.w, r11.w, cb2[27].w
          mul r11.w, r11.w, l(0.00003052)
          and r15.w, r15.y, l(3)
          iadd r15.w, r15.w, r16.x
          iadd r15.w, r15.w, l(1)
          ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.w, r15.w, l(0), t23.xxxx
          bfi r17.xyz, l(2, 2, 1, 0), l(3, 1, 4, 0), r15.xyzx, l(0, 0, 0, 0)
          ushr r15.x, r15.w, r17.x
          and r15.x, r15.x, l(255)
          utof r15.x, r15.x
          mul r15.x, r11.w, r15.x
          mad r15.x, r15.x, l(0.00392157), r10.w
          iadd r15.y, r17.y, l(1)
          ubfe r15.z, l(1), l(1), r15.z
          iadd r15.y, r15.z, r15.y
          iadd r15.y, r15.y, r16.x
          ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.y, r15.y, l(0), t23.xxxx
          ushr r15.y, r15.y, r17.z
          and r15.y, r15.y, l(0x0000ffff)
          utof r15.y, r15.y
          mul r11.w, r11.w, r15.y
          mad r10.w, r11.w, l(0.00001526), r10.w
          movc r12.w, r16.w, r15.x, r10.w
        else 
          and r10.w, r16.z, l(0x80000000)
          iadd r11.w, r16.x, l(1)
          ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r11.w, r11.w, l(0), t23.xxxx
          movc r10.w, r10.w, r11.w, l(0)
          ishl r11.w, r16.z, l(2)
          ushr r15.x, r10.w, l(16)
          f16tof32 r15.x, r15.x
          and r10.w, r10.w, l(0x0000ffff)
          f16tof32 r10.w, r10.w
          mad r11.w, r9.y, r15.x, r11.w
          mad r10.w, r9.z, r10.w, r11.w
          movc r12.w, r10.z, r10.w, r12.w
        endif 
      endif 
      mad r9.w, -cb2[27].z, l(2.000000), r9.w
      lt r9.w, r12.w, r9.w
      movc r7.z, r9.w, l(0), l(1.000000)
    endif 
    if_z r10.y
      if_z cb2[58].y
        ftou r9.w, r7.w
        add r10.yz, r9.yyzy, -cb2[r9.w + 20].xxyx
        mul r10.yz, r10.yyzy, cb2[r9.w + 20].zzzz
        mad r15.xy, r10.yzyy, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
        itof r9.w, cb2[26].y
        add r15.z, r7.w, r9.w
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r9.w, r15.xyzx, t13.xxxx, s13, r6.w
        sample_l_indexable(texture2darray)(float,float,float,float) r10.y, r15.xyzx, t31.yxzw, s0, l(0.000000)
        add r9.w, r9.w, r10.y
        add_sat r9.w, r9.w, l(-1.000000)
        mul r10.y, r9.w, r9.w
        mul r7.z, r9.w, r10.y
      endif 
      if_nz cb2[58].y
        mov r15.x, -r7.x
        ftou r9.w, r7.w
        add r7.w, r7.w, l(1.000000)
        min r7.w, r7.w, l(2.000000)
        ftou r7.w, r7.w
        add r8.w, -r8.w, l(1.000000)
        mul r8.w, r8.w, l(28.000000)
        ftou r8.w, r8.w
        add r10.yz, r9.yyzy, -cb2[r9.w + 20].xxyx
        mul r10.yz, r10.yyzy, cb2[r9.w + 20].zzzz
        mad r10.yz, r10.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
        add r9.yz, r9.yyzy, -cb2[r7.w + 20].xxyx
        mul r9.yz, r9.yyzy, cb2[r7.w + 20].zzzz
        mad r9.yz, r9.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
        mov r15.y, r8.x
        mov r15.z, r7.x
        mov r10.w, l(0)
        mov r11.w, l(0)
        loop 
          uge r12.w, r11.w, l(8)
          breakc_nz r12.w
          ult r12.w, r8.w, r11.w
          movc r16.xy, r12.wwww, r9.yzyy, r10.yzyy
          movc r15.w, r12.w, cb2[r7.w + 20].w, cb2[r9.w + 20].w
          movc r12.w, r12.w, r7.w, r9.w
          dp2 r17.x, icb[r11.w + 0].yxyy, r15.xyxx
          dp2 r17.y, icb[r11.w + 0].yxyy, r15.yzyy
          mad r16.xy, r17.xyxx, r15.wwww, r16.xyxx
          iadd r12.w, r12.w, cb2[26].y
          utof r16.z, r12.w
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.w, r16.xyzx, t13.xxxx, s13, r6.w
          sample_l_indexable(texture2darray)(float,float,float,float) r15.w, r16.xyzx, t31.yzwx, s0, l(0.000000)
          add r12.w, r12.w, r15.w
          add_sat r12.w, r12.w, l(-1.000000)
          mad r10.w, r12.w, l(0.125000), r10.w
          iadd r11.w, r11.w, l(1)
        endloop 
        mul r6.w, r10.w, r10.w
        mul r7.z, r10.w, r6.w
      endif 
    endif 
  endif 
else 
  mov r7.z, l(1.000000)
endif 
dp3 r6.w, r6.xyzx, cb2[17].xyzx
lt r7.w, l(0.000000), |r6.w|
if_nz r7.w
  lt r7.w, l(0.000000), r7.z
  if_nz r7.w
    mul r7.w, r3.y, cb2[18].w
    mul r7.w, r7.w, l(0.250000)
    if_nz cb2[23].x
      add r15.xyz, v7.xyzx, cb1[24].xyzx
      mov r15.w, l(1.000000)
      dp4 r8.w, cb2[24].xyzw, r15.xyzw
      dp4 r9.y, cb2[25].xyzw, r15.xyzw
      frc r15.x, r8.w
      frc r15.y, r9.y
      iadd r8.w, l(-1), cb2[23].x
      utof r15.z, r8.w
      sample_l_indexable(texture2darray)(float,float,float,float) r9.yzw, r15.xyzx, t20.wxyz, s2, l(0.000000)
      add r9.yzw, r9.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
      mad r9.yzw, cb2[23].yyyy, r9.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
      mul r9.yzw, r9.yyzw, cb2[18].xxyz
    else 
      mov r9.yzw, cb2[18].xxyz
    endif 
    if_z cb0[26].y
      ushr r8.w, cb2[53].x, l(16)
      ult r10.y, l(0), r8.w
      and r10.y, r2.w, r10.y
      if_nz r10.y
        iadd r8.w, r8.w, cb2[0].x
        iadd r8.w, r8.w, l(-1)
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r10.y, r8.w, l(52), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r8.w, l(68), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r8.w, l(84), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r8.w, l(132), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r8.w, l(148), t12.xyzw
        mad r10.z, |r6.w|, l(-0.200000), l(0.400000)
        lt r10.w, r6.w, l(0.000000)
        movc r10.z, r10.w, -r10.z, r10.z
        mad r19.xyz, r6.xyzx, r10.zzzz, v7.xyzx
        mov r19.w, l(1.000000)
        dp4 r15.x, r15.xyzw, r19.xyzw
        dp4 r15.y, r16.xyzw, r19.xyzw
        mad r10.zw, r15.xxxy, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
        add r10.zw, r18.zzzw, r10.zzzw
        mul r10.zw, r18.xxxy, r10.zzzw
        div r15.xy, r10.yyyy, r17.xzxx
        add r15.zw, -r15.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
        ge r15.zw, r10.zzzw, r15.zzzw
        ge r15.xy, r15.xyxx, r10.zwzz
        or r15.xy, r15.xyxx, r15.zwzz
        or r11.w, r15.y, r15.x
        if_z r11.w
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r11.w, r8.w, l(28), t12.xxxx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r8.w, l(100), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xy, r8.w, l(164), t12.xyxx
          dp4 r8.w, r15.xyzw, r19.xyzw
          mov_sat r10.zw, r10.zzzw
          mad r15.xy, r10.zwzz, r17.xzxx, r17.ywyy
          add r8.w, r16.x, r8.w
          div r8.w, r8.w, r16.y
          max r8.w, r8.w, l(0.00006104)
          and r10.z, r11.w, l(0x0000ffff)
          if_nz cb2[58].y
            mov r16.x, -r7.x
            utof r17.z, r10.z
            mov r16.y, r8.x
            mov r16.z, r7.x
            mov r10.w, l(0)
            mov r11.w, l(0)
            loop 
              ige r12.w, r11.w, l(8)
              breakc_nz r12.w
              dp2 r18.x, icb[r11.w + 0].yxyy, r16.xyxx
              dp2 r18.y, icb[r11.w + 0].yxyy, r16.yzyy
              mad r17.xy, r18.xyxx, r10.yyyy, r15.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.w, r17.xyzx, t9.xxxx, s13, r8.w
              mad r10.w, r12.w, l(0.125000), r10.w
              iadd r11.w, r11.w, l(1)
            endloop 
          else 
            utof r15.z, r10.z
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.w, r15.xyzx, t9.xxxx, s13, r8.w
          endif 
          mul r8.w, r10.w, r10.w
          mul r8.w, r10.w, r8.w
        else 
          mov r8.w, l(1.000000)
        endif 
        mul r7.z, r7.z, r8.w
      else 
        and r8.w, cb2[53].x, l(0x0000ffff)
        ult r10.y, l(0), r8.w
        not r10.z, r2.w
        and r10.y, r10.z, r10.y
        if_nz r10.y
          iadd r8.w, r8.w, cb2[0].x
          iadd r8.w, r8.w, l(-1)
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r10.y, r8.w, l(52), t12.xxxx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r8.w, l(68), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r8.w, l(84), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r8.w, l(132), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r8.w, l(148), t12.xyzw
          mad r10.z, |r6.w|, l(-0.200000), l(0.400000)
          lt r10.w, r6.w, l(0.000000)
          movc r10.z, r10.w, -r10.z, r10.z
          mad r19.xyz, r6.xyzx, r10.zzzz, v7.xyzx
          mov r19.w, l(1.000000)
          dp4 r15.x, r15.xyzw, r19.xyzw
          dp4 r15.y, r16.xyzw, r19.xyzw
          mad r10.zw, r15.xxxy, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
          add r10.zw, r18.zzzw, r10.zzzw
          mul r10.zw, r18.xxxy, r10.zzzw
          div r15.xy, r10.yyyy, r17.xzxx
          add r15.zw, -r15.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
          ge r15.zw, r10.zzzw, r15.zzzw
          ge r15.xy, r15.xyxx, r10.zwzz
          or r15.xy, r15.xyxx, r15.zwzz
          or r11.w, r15.y, r15.x
          if_z r11.w
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r11.w, r8.w, l(28), t12.xxxx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.xyzw, r8.w, l(100), t12.xyzw
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xy, r8.w, l(164), t12.xyxx
            dp4 r8.w, r15.xyzw, r19.xyzw
            mov_sat r10.zw, r10.zzzw
            mad r15.xy, r10.zwzz, r17.xzxx, r17.ywyy
            add r8.w, r16.x, r8.w
            div r8.w, r8.w, r16.y
            max r8.w, r8.w, l(0.00006104)
            and r10.z, r11.w, l(0x0000ffff)
            if_nz cb2[58].y
              mov r16.x, -r7.x
              utof r17.z, r10.z
              mov r16.y, r8.x
              mov r16.z, r7.x
              mov r10.w, l(0)
              mov r11.w, l(0)
              loop 
                ige r12.w, r11.w, l(8)
                breakc_nz r12.w
                dp2 r18.x, icb[r11.w + 0].yxyy, r16.xyxx
                dp2 r18.y, icb[r11.w + 0].yxyy, r16.yzyy
                mad r17.xy, r18.xyxx, r10.yyyy, r15.xyxx
                sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.w, r17.xyzx, t9.xxxx, s13, r8.w
                mad r10.w, r12.w, l(0.125000), r10.w
                iadd r11.w, r11.w, l(1)
              endloop 
            else 
              utof r15.z, r10.z
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.w, r15.xyzx, t9.xxxx, s13, r8.w
            endif 
            mul r8.w, r10.w, r10.w
            mul r8.w, r10.w, r8.w
          else 
            mov r8.w, l(1.000000)
          endif 
          mul r7.z, r7.z, r8.w
        endif 
      endif 
    endif 
    mad r8.w, -r10.x, l(0.500000), l(1.000000)
    mad r8.w, -|r6.w|, r8.w, l(1.000000)
    mul r8.w, r8.w, r8.w
    mad r8.w, -r8.w, l(0.620000), l(0.620000)
    add r8.w, -|r6.w|, r8.w
    mad r8.w, r3.w, r8.w, |r6.w|
    mul r8.w, r7.z, r8.w
    lt r10.y, l(0.000000), r6.w
    mad r15.xyz, r8.wwww, r9.yzwy, r14.xyzx
    mov_sat r6.w, r6.w
    mad r16.xyz, -v7.xyzx, r0.xxxx, cb2[17].xyzx
    dp3 r0.x, r16.xyzx, r16.xyzx
    rsq r0.x, r0.x
    mul r16.xyz, r0.xxxx, r16.xyzx
    dp3 r0.x, r16.xyzx, r0.yzwy
    dp3 r8.w, r6.xyzx, r16.xyzx
    mad r10.z, |r8.w|, r3.y, -|r8.w|
    mad r8.w, |r8.w|, r10.z, l(1.000000)
    mad r10.z, r6.w, r4.w, r5.x
    mul r8.w, r8.w, r8.w
    mul r8.w, r10.z, r8.w
    rcp r8.w, r8.w
    mul r6.w, r7.w, r6.w
    mul r6.w, r6.w, r8.w
    mul r6.w, r7.z, r6.w
    mad r16.xyz, r6.wwww, r9.yzwy, r2.xyzx
    add_sat r0.x, -r0.x, l(1.000000)
    mul r7.z, r0.x, r0.x
    mul r7.z, r7.z, r7.z
    mul r0.x, r0.x, r7.z
    mul r0.x, r0.x, r6.w
    mad r17.xyz, r0.xxxx, r9.zwyz, r13.xyzx
    mov r15.w, r17.z
    mov r14.w, r13.z
    movc r14.xyzw, r10.yyyy, r15.xyzw, r14.xyzw
    mov r17.zw, r16.xxxy
    mov r13.zw, r2.xxxy
    movc r15.xyzw, r10.yyyy, r17.xyzw, r13.xyzw
    movc r2.z, r10.y, r16.z, r2.z
    mov r13.z, r14.w
    mov r13.xy, r15.xyxx
    mov r2.xy, r15.zwzz
  endif 
endif 
mov r15.x, -r7.x
not r0.x, r2.w
mad r6.w, -r10.x, l(0.500000), l(1.000000)
mov r10.xy, l(0,0,0,0)
mov r16.w, l(0)
mov r17.xyz, v7.xyzx
mov r17.w, l(1.000000)
mov r18.w, l(1.000000)
mov r15.z, r7.x
mov r19.w, l(1.000000)
mov r20.z, l(1.000000)
mov r21.w, l(1.000000)
mov r15.yw, r8.xxxx
mov r7.y, r15.w
mov r22.w, l(1.000000)
mov r8.y, r15.x
mov r8.z, r7.x
mov r23.w, l(1.000000)
mov r24.x, r8.x
mov r24.y, r15.x
mov r24.z, r7.x
mov r25.x, r8.x
mov r25.y, r15.x
mov r25.z, r7.x
mov r26.x, r8.x
mov r26.y, r15.x
mov r26.z, r7.x
mov r9.yzw, r14.xxyz
mov r27.xyz, r13.zxyz
mov r28.xyz, r2.xyzx
mov r7.z, cb2[58].y
mov r7.w, l(0)
loop 
  uge r8.w, r7.w, cb2[0].x
  breakc_nz r8.w
  ushr r10.z, r7.w, l(5)
  iadd r16.xyz, r10.xyzx, r12.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r8.w, r16.xyzw, t6.yzwx
  mov r16.xyz, r9.yzwy
  mov r29.xyz, r27.xyzx
  mov r30.xyz, r28.xyzx
  mov r10.z, r7.z
  mov r10.w, r8.w
  loop 
    breakc_z r10.w
    firstbit_lo r11.w, r10.w
    ishl r12.w, l(1), r11.w
    and r13.w, r10.w, r12.w
    if_nz r13.w
      xor r10.w, r10.w, r12.w
      iadd r11.w, r7.w, r11.w
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r31.xyzw, r11.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r32.xy, r11.w, l(16), t11.xyxx
      add r31.xyz, r31.xyzx, -v7.xyzx
      mov r32.z, r31.w
      lt r31.xyz, |r31.xyzx|, r32.zxyz
      and r12.w, r31.y, r31.x
      and r12.w, r31.z, r12.w
      if_nz r12.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r11.w, l(0), t12.wxyz
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r11.w, l(16), t12.zxyw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r11.w, l(32), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r11.w, l(48), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r11.w, l(64), t12.yzwx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r11.w, l(80), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r11.w, l(96), t12.yzwx
        ubfe r12.w, l(3), l(24), r32.w
        switch r12.w
          case l(4)
          lt r12.w, l(0.000000), r37.x
          mov r38.xy, r36.zwzz
          mov r38.z, r37.w
          mad r39.xyz, -r38.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r31.yzwy
          add r40.xyz, r39.xyzx, -v7.xyzx
          dp3 r13.w, r38.xyzx, r40.xyzx
          div_sat r14.w, -r13.w, r37.x
          mad r41.xyz, r14.wwww, r38.xyzx, r39.xyzx
          movc r41.xyz, r12.wwww, r41.xyzx, r31.yzwy
          add r41.xyz, r41.xyzx, -v7.xyzx
          dp3 r20.w, r41.xyzx, r41.xyzx
          rsq r24.w, r20.w
          mul r41.xyz, r24.wwww, r41.xyzx
          dp3 r24.w, r6.xyzx, r41.xyzx
          lt r25.w, l(0.000000), |r24.w|
          if_nz r25.w
            sqrt r25.w, r20.w
            mul r26.w, r34.x, r34.x
            div r20.w, r26.w, r20.w
            min r20.w, r20.w, l(1.000000)
            mad_sat r41.xy, r25.wwww, r33.xzxx, r33.ywyy
            mul r41.zw, r41.xxxy, r41.xxxy
            mad r41.xy, r41.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
            mul r41.xy, r41.xyxx, r41.zwzz
            mul r20.w, r20.w, r41.x
            mul r20.w, r41.y, r20.w
            lt r25.w, l(0.000000), r20.w
            if_nz r25.w
              ubfe r25.w, l(3), l(27), r32.w
              ine r25.w, r25.w, l(1)
              if_nz r25.w
                mad r25.w, |r24.w|, l(-0.200000), l(0.400000)
                lt r26.w, r24.w, l(0.000000)
                movc r25.w, r26.w, -r25.w, r25.w
                mad r41.xyz, r6.xyzx, r25.wwww, v7.xyzx
                add r41.xyz, -r35.xyzx, r41.xyzx
                max r25.w, |r41.z|, |r41.y|
                max r25.w, r25.w, |r41.x|
                div r25.w, r36.x, r25.w
                add r25.w, r36.y, r25.w
                dp3 r26.w, r41.xyzx, r41.xyzx
                rsq r26.w, r26.w
                max r25.w, r25.w, l(0.00006104)
                and r27.w, r32.w, l(0x0000ffff)
                utof r42.w, r27.w
                mov r27.w, l(0)
                mov r28.w, l(0)
                loop 
                  ige r29.w, r28.w, l(8)
                  breakc_nz r29.w
                  dp2 r43.y, icb[r28.w + 0].yxyy, r15.xyxx
                  dp2 r43.z, icb[r28.w + 0].yxyy, r15.yzyy
                  mul r43.yz, r34.yyyy, r43.yyzy
                  mul r43.x, r9.x, r43.y
                  mul r43.w, r3.x, r43.y
                  mad r42.xyz, r41.xyzx, r26.wwww, r43.xzwx
                  sample_c_lz_indexable(texturecubearray)(float,float,float,float) r29.w, r42.xyzw, t10.xxxx, s13, r25.w
                  mad r27.w, r29.w, l(0.125000), r27.w
                  iadd r28.w, r28.w, l(1)
                endloop 
              else 
                mov r27.w, l(1.000000)
              endif 
              mul r20.w, r20.w, r27.w
              lt r25.w, l(0.000000), r20.w
              if_nz r25.w
                mul r25.w, r3.y, r32.x
                mul r25.w, r25.w, l(0.250000)
                dp3 r26.w, r38.xyzx, r11.xyzx
                dp3 r28.w, r11.xyzx, r40.xyzx
                mad r29.w, -r26.w, r26.w, r37.x
                mad r13.w, r26.w, r28.w, -r13.w
                div_sat r13.w, r13.w, r29.w
                div r26.w, r29.w, r37.x
                mul r26.w, r26.w, l(10.000000)
                min r26.w, r26.w, l(1.000000)
                add r13.w, -r14.w, r13.w
                mad r13.w, r26.w, r13.w, r14.w
                mad r38.xyz, r13.wwww, r38.xyzx, r39.xyzx
                movc r38.xyz, r12.wwww, r38.xyzx, r31.yzwy
                add r38.xyz, r38.xyzx, -v7.xyzx
                dp3 r12.w, r38.xyzx, r38.xyzx
                rsq r12.w, r12.w
                mul r39.xyz, r12.wwww, r38.xyzx
                ubfe r13.w, l(4), l(16), r32.w
                ult r14.w, l(0), r13.w
                and r14.w, r2.w, r14.w
                if_nz r14.w
                  iadd r13.w, r13.w, cb2[0].x
                  iadd r13.w, r13.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.w, r13.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r13.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r13.w, l(116), t12.xyzw
                  mad r26.w, |r24.w|, l(-0.200000), l(0.400000)
                  lt r28.w, r24.w, l(0.000000)
                  movc r26.w, r28.w, -r26.w, r26.w
                  mad r18.xyz, r6.xyzx, r26.wwww, v7.xyzx
                  dp4 r26.w, r40.xyzw, r18.xyzw
                  dp4 r28.w, r41.xyzw, r18.xyzw
                  lt r29.w, r28.w, r26.w
                  if_z r29.w
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r13.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r13.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r13.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r13.w, l(148), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xy, r13.w, l(164), t12.xyxx
                    dp4 r40.x, r40.xyzw, r18.xyzw
                    dp4 r40.y, r41.xyzw, r18.xyzw
                    div r18.xy, r40.xyxx, r28.wwww
                    mad r18.xy, r18.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r18.xy, r43.zwzz, r18.xyxx
                    mul r18.xy, r43.xyxx, r18.xyxx
                    div r40.xy, r14.wwww, r42.xzxx
                    add r40.zw, -r40.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                    ge r40.zw, r18.xxxy, r40.zzzw
                    ge r40.xy, r40.xyxx, r18.xyxx
                    or r40.xy, r40.xyxx, r40.zwzz
                    or r18.z, r40.y, r40.x
                    mov_sat r18.xy, r18.xyxx
                    mad r40.xy, r18.xyxx, r42.xzxx, r42.ywyy
                    mul r18.x, r28.w, r44.y
                    mad r18.y, r44.x, r28.w, r26.w
                    div r18.x, r18.y, r18.x
                  else 
                    mov r18.z, l(-1)
                  endif 
                  or r18.y, r29.w, r18.z
                  if_z r18.y
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.w, r13.w, l(28), t12.xxxx
                    max r18.x, r18.x, l(0.00006104)
                    and r13.w, r13.w, l(0x0000ffff)
                    if_nz r10.z
                      utof r41.z, r13.w
                      mov r18.yz, l(0,0,0,0)
                      loop 
                        ige r26.w, r18.z, l(8)
                        breakc_nz r26.w
                        dp2 r42.x, icb[r18.z + 0].yxyy, r15.xwxx
                        dp2 r42.y, icb[r18.z + 0].xyxx, r7.xyxx
                        mad r41.xy, r42.xyxx, r14.wwww, r40.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r26.w, r41.xyzx, t9.xxxx, s13, r18.x
                        mad r18.y, r26.w, l(0.125000), r18.y
                        iadd r18.z, r18.z, l(1)
                      endloop 
                    else 
                      utof r40.z, r13.w
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r18.y, r40.xyzx, t9.xxxx, s13, r18.x
                    endif 
                    mul r13.w, r18.y, r18.y
                    mul r13.w, r18.y, r13.w
                  else 
                    mov r13.w, l(1.000000)
                  endif 
                  mul r20.w, r13.w, r20.w
                else 
                  ubfe r13.w, l(4), l(20), r32.w
                  ult r14.w, l(0), r13.w
                  and r14.w, r0.x, r14.w
                  if_nz r14.w
                    iadd r13.w, r13.w, cb2[0].x
                    iadd r13.w, r13.w, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.w, r13.w, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r13.w, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r13.w, l(116), t12.xyzw
                    mad r18.x, |r24.w|, l(-0.200000), l(0.400000)
                    lt r18.z, r24.w, l(0.000000)
                    movc r18.x, r18.z, -r18.x, r18.x
                    mad r19.xyz, r6.xyzx, r18.xxxx, v7.xyzx
                    dp4 r18.x, r40.xyzw, r19.xyzw
                    dp4 r18.z, r41.xyzw, r19.xyzw
                    lt r26.w, r18.z, r18.x
                    if_z r26.w
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r13.w, l(68), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r13.w, l(84), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r13.w, l(132), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r13.w, l(148), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xy, r13.w, l(164), t12.xyxx
                      dp4 r40.x, r40.xyzw, r19.xyzw
                      dp4 r40.y, r41.xyzw, r19.xyzw
                      div r19.xy, r40.xyxx, r18.zzzz
                      mad r19.xy, r19.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                      add r19.xy, r43.zwzz, r19.xyxx
                      mul r19.xy, r43.xyxx, r19.xyxx
                      div r40.xy, r14.wwww, r42.xzxx
                      add r40.zw, -r40.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                      ge r40.zw, r19.xxxy, r40.zzzw
                      ge r40.xy, r40.xyxx, r19.xyxx
                      or r40.xy, r40.xyxx, r40.zwzz
                      or r19.z, r40.y, r40.x
                      mov_sat r19.xy, r19.xyxx
                      mad r40.xy, r19.xyxx, r42.xzxx, r42.ywyy
                      mul r19.x, r18.z, r44.y
                      mad r18.x, r44.x, r18.z, r18.x
                      div r18.x, r18.x, r19.x
                    else 
                      mov r19.z, l(-1)
                    endif 
                    or r18.z, r26.w, r19.z
                    if_z r18.z
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.w, r13.w, l(28), t12.xxxx
                      max r18.x, r18.x, l(0.00006104)
                      and r13.w, r13.w, l(0x0000ffff)
                      if_nz r10.z
                        utof r19.z, r13.w
                        mov r18.z, l(0)
                        mov r26.w, l(0)
                        loop 
                          ige r28.w, r26.w, l(8)
                          breakc_nz r28.w
                          dp2 r41.x, icb[r26.w + 0].xyxx, r8.xyxx
                          dp2 r41.y, icb[r26.w + 0].yxyy, r8.xzxx
                          mad r19.xy, r41.xyxx, r14.wwww, r40.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.x, r19.xyzx, t9.xxxx, s13, r18.x
                          mad r18.z, r19.x, l(0.125000), r18.z
                          iadd r26.w, r26.w, l(1)
                        endloop 
                      else 
                        utof r40.z, r13.w
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r18.z, r40.xyzx, t9.xxxx, s13, r18.x
                      endif 
                      mul r13.w, r18.z, r18.z
                      mul r13.w, r18.z, r13.w
                    else 
                      mov r13.w, l(1.000000)
                    endif 
                    mul r20.w, r13.w, r20.w
                  endif 
                endif 
                mad r13.w, -|r24.w|, r6.w, l(1.000000)
                mul r13.w, r13.w, r13.w
                mad r13.w, -r13.w, l(0.620000), l(0.620000)
                add r13.w, -|r24.w|, r13.w
                mad r13.w, r3.w, r13.w, |r24.w|
                mul r13.w, r20.w, r13.w
                mov r32.x, r31.x
                lt r14.w, l(0.000000), r24.w
                mad r19.xyz, r13.wwww, r32.xyzx, r16.xyzx
                dp3_sat r13.w, r6.xyzx, r39.xyzx
                mad r38.xyz, r38.xyzx, r12.wwww, r0.yzwy
                dp3 r12.w, r38.xyzx, r38.xyzx
                rsq r12.w, r12.w
                mul r38.xyz, r12.wwww, r38.xyzx
                dp3 r12.w, r38.xyzx, r0.yzwy
                dp3 r18.x, r6.xyzx, r38.xyzx
                mad r24.w, |r18.x|, r3.y, -|r18.x|
                mad r18.x, |r18.x|, r24.w, l(1.000000)
                mad r24.w, r13.w, r4.w, r5.x
                mul r18.x, r18.x, r18.x
                mul r18.x, r24.w, r18.x
                rcp r18.x, r18.x
                mul r13.w, r25.w, r13.w
                mul r13.w, r13.w, r18.x
                mul r13.w, r20.w, r13.w
                mad r38.xyz, r13.wwww, r32.xyzx, r30.xyzx
                add_sat r12.w, -r12.w, l(1.000000)
                mul r18.x, r12.w, r12.w
                mul r18.x, r18.x, r18.x
                mul r12.w, r12.w, r18.x
                mul r12.w, r12.w, r13.w
                mad r39.xyz, r12.wwww, r32.xyzx, r29.xyzx
                movc r16.xyz, r14.wwww, r19.xyzx, r16.xyzx
                movc r29.xyz, r14.wwww, r39.xyzx, r29.xyzx
                movc r30.xyz, r14.wwww, r38.xyzx, r30.xyzx
              endif 
            endif 
          endif 
          break 
          case l(2)
          mov r19.xy, r34.zwzz
          mov r19.z, r35.w
          add r19.xyz, r19.xyzx, -v7.xyzx
          dp3 r12.w, r19.xyzx, r19.xyzx
          rsq r12.w, r12.w
          mul r38.xyz, r12.wwww, r19.xyzx
          dp3 r13.w, r6.xyzx, r38.xyzx
          lt r14.w, l(0.000000), |r13.w|
          if_nz r14.w
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r11.w, l(112), t12.yzwx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r11.w, l(128), t12.zxyw
            mov r40.xyz, r38.xyzx
            mov r40.w, r39.y
            dp4 r14.w, r40.xyzw, r17.xyzw
            lt r18.x, r14.w, l(1.000000)
            if_nz r18.x
              mov r41.xyz, l(1.000000,1.000000,1.000000,0)
              mov r18.x, l(0)
            else 
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r11.w, l(172), t12.yzwx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r11.w, l(188), t12.wxyz
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r11.w, l(204), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r20.w, r11.w, l(236), t12.xxxx
              add r45.xyz, r31.yzwy, -v7.xyzx
              mul r24.w, r34.x, r34.x
              dp3 r25.w, r45.xyzx, r45.xyzx
              div r24.w, r24.w, r25.w
              min r24.w, r24.w, l(1.000000)
              mad_sat r33.xy, r14.wwww, r33.xzxx, r33.ywyy
              mul r33.zw, r33.xxxy, r33.xxxy
              mad r33.xy, r33.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
              mul r33.xy, r33.xyxx, r33.zwzz
              mul r24.w, r24.w, r33.x
              mul r24.w, r33.y, r24.w
              mov r35.w, r36.x
              dp4 r33.x, r35.xyzw, r17.xyzw
              mov r45.xyz, r36.yzwy
              mov r45.w, r37.w
              dp4 r33.y, r45.xyzw, r17.xyzw
              div r20.xy, r33.xyxx, r14.wwww
              lt r14.w, r42.w, l(0.00048828)
              if_nz r14.w
                mov r43.y, r44.x
                mad_sat r33.xy, |r20.xyxx|, r43.zwzz, r43.xyxx
                mul r33.zw, r33.xxxy, r33.xxxy
                mad r33.xy, r33.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
                mul r33.xy, r33.xyxx, r33.zwzz
                mul r14.w, r33.y, r33.x
              else 
                mov r42.w, r43.y
                mul_sat r33.xyzw, |r20.yyxx|, r42.xyzw
                log r33.xyzw, r33.xyzw
                mul r33.xyzw, r33.xyzw, r43.xxxx
                exp r33.xyzw, r33.xyzw
                add r33.xy, r33.zwzz, r33.xyxx
                log r33.xy, r33.xyxx
                mul r33.xy, r33.xyxx, r44.xxxx
                exp r33.xy, r33.xyxx
                mul r25.w, r33.x, r43.z
                mad r26.w, r43.w, r33.y, l(-1.000000)
                mad r25.w, r43.w, r33.y, -r25.w
                div_sat r25.w, r26.w, r25.w
                mul r26.w, r25.w, r25.w
                mad r25.w, r25.w, l(-2.000000), l(3.000000)
                mul r14.w, r25.w, r26.w
              endif 
              mul r18.x, r14.w, r24.w
              and r14.w, r20.w, l(255)
              if_nz r14.w
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyz, r11.w, l(220), t12.xyzx
                dp3 r20.w, r44.yzwy, r20.xyzx
                dp3 r20.x, r33.xyzx, r20.xyzx
                frc r33.xy, r20.wxww
                iadd r14.w, r14.w, l(-1)
                utof r33.z, r14.w
                sample_l_indexable(texture2darray)(float,float,float,float) r41.xyz, r33.xyzx, t20.xyzw, s2, l(0.000000)
              else 
                mov r41.xyz, l(1.000000,1.000000,1.000000,0)
              endif 
            endif 
            mov r31.yz, r32.yyzy
            mul r20.xyw, r41.xyxz, r31.xyxz
            lt r14.w, l(0.000000), r18.x
            if_nz r14.w
              ubfe r14.w, l(3), l(27), r32.w
              ine r14.w, r14.w, l(1)
              if_nz r14.w
                mad r14.w, |r13.w|, l(-0.200000), l(0.400000)
                lt r24.w, r13.w, l(0.000000)
                movc r14.w, r24.w, -r14.w, r14.w
                mad r21.xyz, r6.xyzx, r14.wwww, v7.xyzx
                mov r38.xyz, r37.xyzx
                dp4 r14.w, r38.xyzw, r21.xyzw
                dp4 r24.w, r40.xyzw, r21.xyzw
                ge r25.w, r24.w, r14.w
                if_nz r25.w
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.y, r11.w, l(144), t12.xxxx
                  mov r35.w, r36.x
                  dp4 r31.x, r35.xyzw, r21.xyzw
                  mov r37.xyz, r36.yzwy
                  dp4 r31.y, r37.xyzw, r21.xyzw
                  div r21.xy, r31.xyxx, r24.wwww
                  mad_sat r21.xy, r21.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  mad r21.xy, r21.xyxx, r39.zwzz, r39.xyxx
                  div r11.w, r14.w, r24.w
                  max r11.w, r11.w, l(0.00006104)
                  and r14.w, r32.w, l(0x0000ffff)
                  if_nz r10.z
                    utof r31.z, r14.w
                    mov r24.w, l(0)
                    mov r25.w, l(0)
                    loop 
                      ige r26.w, r25.w, l(8)
                      breakc_nz r26.w
                      dp2 r33.x, icb[r25.w + 0].xyxx, r24.xyxx
                      dp2 r33.y, icb[r25.w + 0].yxyy, r24.xzxx
                      mad r31.xy, r33.xyxx, r34.yyyy, r21.xyxx
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r26.w, r31.xyzx, t9.xxxx, s13, r11.w
                      mad r24.w, r26.w, l(0.125000), r24.w
                      iadd r25.w, r25.w, l(1)
                    endloop 
                  else 
                    utof r21.z, r14.w
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.w, r21.xyzx, t9.xxxx, s13, r11.w
                  endif 
                  mul r11.w, r24.w, r24.w
                  mul r11.w, r24.w, r11.w
                else 
                  mov r11.w, l(1.000000)
                endif 
              else 
                mov r11.w, l(1.000000)
              endif 
              mul r11.w, r11.w, r18.x
              lt r14.w, l(0.000000), r11.w
              if_nz r14.w
                mul r14.w, r3.y, r32.x
                mul r14.w, r14.w, l(0.250000)
                ubfe r18.x, l(4), l(16), r32.w
                ult r21.x, l(0), r18.x
                and r21.x, r2.w, r21.x
                if_nz r21.x
                  iadd r18.x, r18.x, cb2[0].x
                  iadd r18.x, r18.x, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r21.x, r18.x, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r18.x, l(68), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r18.x, l(84), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r18.x, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r18.x, l(116), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r18.x, l(132), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r18.x, l(148), t12.xyzw
                  mad r21.y, |r13.w|, l(-0.200000), l(0.400000)
                  lt r21.z, r13.w, l(0.000000)
                  movc r21.y, r21.z, -r21.y, r21.y
                  mad r22.xyz, r6.xyzx, r21.yyyy, v7.xyzx
                  dp4 r31.x, r31.xyzw, r22.xyzw
                  dp4 r31.y, r33.xyzw, r22.xyzw
                  dp4 r21.y, r34.xyzw, r22.xyzw
                  dp4 r21.z, r35.xyzw, r22.xyzw
                  lt r22.x, r21.z, r21.y
                  div r22.yz, r31.xxyx, r21.zzzz
                  mad r22.yz, r22.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
                  add r22.yz, r37.zzwz, r22.yyzy
                  mul r22.yz, r37.xxyx, r22.yyzy
                  div r31.xy, r21.xxxx, r36.xzxx
                  add r31.zw, -r31.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                  ge r31.zw, r22.yyyz, r31.zzzw
                  ge r31.xy, r31.xyxx, r22.yzyy
                  or r31.xy, r31.xyxx, r31.zwzz
                  or r25.w, r31.y, r31.x
                  or r22.x, r22.x, r25.w
                  if_z r22.x
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r22.x, r18.x, l(28), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xy, r18.x, l(164), t12.xyxx
                    mov_sat r22.yz, r22.yyzy
                    mad r32.xy, r22.yzyy, r36.xzxx, r36.ywyy
                    mul r18.x, r21.z, r31.y
                    mad r21.y, r31.x, r21.z, r21.y
                    div r18.x, r21.y, r18.x
                    max r18.x, r18.x, l(0.00006104)
                    and r21.y, r22.x, l(0x0000ffff)
                    if_nz r10.z
                      utof r22.z, r21.y
                      mov r21.z, l(0)
                      mov r25.w, l(0)
                      loop 
                        ige r26.w, r25.w, l(8)
                        breakc_nz r26.w
                        dp2 r31.x, icb[r25.w + 0].xyxx, r25.xyxx
                        dp2 r31.y, icb[r25.w + 0].yxyy, r25.xzxx
                        mad r22.xy, r31.xyxx, r21.xxxx, r32.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.x, r22.xyzx, t9.xxxx, s13, r18.x
                        mad r21.z, r22.x, l(0.125000), r21.z
                        iadd r25.w, r25.w, l(1)
                      endloop 
                    else 
                      utof r32.z, r21.y
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.z, r32.xyzx, t9.xxxx, s13, r18.x
                    endif 
                    mul r18.x, r21.z, r21.z
                    mul r18.x, r21.z, r18.x
                  else 
                    mov r18.x, l(1.000000)
                  endif 
                  mul r11.w, r11.w, r18.x
                else 
                  ubfe r18.x, l(4), l(20), r32.w
                  ult r21.x, l(0), r18.x
                  and r21.x, r0.x, r21.x
                  if_nz r21.x
                    iadd r18.x, r18.x, cb2[0].x
                    iadd r18.x, r18.x, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r21.x, r18.x, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r18.x, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r18.x, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r18.x, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r18.x, l(116), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r18.x, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r18.x, l(148), t12.xyzw
                    mad r21.y, |r13.w|, l(-0.200000), l(0.400000)
                    lt r22.x, r13.w, l(0.000000)
                    movc r21.y, r22.x, -r21.y, r21.y
                    mad r23.xyz, r6.xyzx, r21.yyyy, v7.xyzx
                    dp4 r22.x, r31.xyzw, r23.xyzw
                    dp4 r22.y, r32.xyzw, r23.xyzw
                    dp4 r21.y, r33.xyzw, r23.xyzw
                    dp4 r22.z, r34.xyzw, r23.xyzw
                    lt r23.x, r22.z, r21.y
                    div r22.xy, r22.xyxx, r22.zzzz
                    mad r22.xy, r22.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r22.xy, r36.zwzz, r22.xyxx
                    mul r22.xy, r36.xyxx, r22.xyxx
                    div r23.yz, r21.xxxx, r35.xxzx
                    add r31.xy, -r23.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
                    ge r31.xy, r22.xyxx, r31.xyxx
                    ge r23.yz, r23.yyzy, r22.xxyx
                    or r23.yz, r23.yyzy, r31.xxyx
                    or r23.y, r23.z, r23.y
                    or r23.x, r23.x, r23.y
                    if_z r23.x
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.x, r18.x, l(28), t12.xxxx
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.yz, r18.x, l(164), t12.xxyx
                      mov_sat r22.xy, r22.xyxx
                      mad r31.xy, r22.xyxx, r35.xzxx, r35.ywyy
                      mul r18.x, r22.z, r23.z
                      mad r21.y, r23.y, r22.z, r21.y
                      div r18.x, r21.y, r18.x
                      max r18.x, r18.x, l(0.00006104)
                      and r21.y, r23.x, l(0x0000ffff)
                      if_nz r10.z
                        utof r22.z, r21.y
                        mov r23.xy, l(0,0,0,0)
                        loop 
                          ige r23.z, r23.y, l(8)
                          breakc_nz r23.z
                          dp2 r32.x, icb[r23.y + 0].xyxx, r26.xyxx
                          dp2 r32.y, icb[r23.y + 0].yxyy, r26.xzxx
                          mad r22.xy, r32.xyxx, r21.xxxx, r31.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.x, r22.xyzx, t9.xxxx, s13, r18.x
                          mad r23.x, r22.x, l(0.125000), r23.x
                          iadd r23.y, r23.y, l(1)
                        endloop 
                      else 
                        utof r31.z, r21.y
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.x, r31.xyzx, t9.xxxx, s13, r18.x
                      endif 
                      mul r18.x, r23.x, r23.x
                      mul r18.x, r23.x, r18.x
                    else 
                      mov r18.x, l(1.000000)
                    endif 
                    mul r11.w, r11.w, r18.x
                  endif 
                endif 
                mad r18.x, -|r13.w|, r6.w, l(1.000000)
                mul r18.x, r18.x, r18.x
                mad r18.x, -r18.x, l(0.620000), l(0.620000)
                add r18.x, -|r13.w|, r18.x
                mad r18.x, r3.w, r18.x, |r13.w|
                mul r18.x, r11.w, r18.x
                lt r21.x, l(0.000000), r13.w
                mad r22.xyz, r18.xxxx, r20.xywx, r16.xyzx
                mov_sat r13.w, r13.w
                mad r19.xyz, r19.xyzx, r12.wwww, r0.yzwy
                dp3 r12.w, r19.xyzx, r19.xyzx
                rsq r12.w, r12.w
                mul r19.xyz, r12.wwww, r19.xyzx
                dp3 r12.w, r19.xyzx, r0.yzwy
                dp3 r18.x, r6.xyzx, r19.xyzx
                mad r19.x, |r18.x|, r3.y, -|r18.x|
                mad r18.x, |r18.x|, r19.x, l(1.000000)
                mad r19.x, r13.w, r4.w, r5.x
                mul r18.x, r18.x, r18.x
                mul r18.x, r19.x, r18.x
                rcp r18.x, r18.x
                mul r13.w, r14.w, r13.w
                mul r13.w, r13.w, r18.x
                mul r11.w, r11.w, r13.w
                mad r19.xyz, r11.wwww, r20.xywx, r30.xyzx
                add_sat r12.w, -r12.w, l(1.000000)
                mul r13.w, r12.w, r12.w
                mul r13.w, r13.w, r13.w
                mul r12.w, r12.w, r13.w
                mul r11.w, r11.w, r12.w
                mad r20.xyw, r11.wwww, r20.xyxw, r29.xyxz
                movc r16.xyz, r21.xxxx, r22.xyzx, r16.xyzx
                movc r29.xyz, r21.xxxx, r20.xywx, r29.xyzx
                movc r30.xyz, r21.xxxx, r19.xyzx, r30.xyzx
              endif 
            endif 
          endif 
          break 
          default 
          break 
        endswitch 
      endif 
    endif 
  endloop 
  mov r9.yzw, r16.xxyz
  mov r27.xyz, r29.xyzx
  mov r28.xyz, r30.xyzx
  iadd r7.w, r7.w, l(32)
endloop 
mul r0.xyz, r27.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
mad r0.xyz, r28.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000), r0.xyzx
mad r0.xyz, r9.yzwy, r4.xyzx, r0.xyzx
add r0.w, -cb0[19].w, l(1.000000)
mul r0.w, r0.w, r1.z
mad r1.xyw, r1.xyxw, r3.zzzz, -r5.yzyw
mad r1.xyw, r0.wwww, r1.xyxw, r5.yzyw
dp3 r0.w, r0.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
max r0.w, r0.w, l(0.000100)
max r0.w, r0.w, cb1[85].x
mul r2.xyz, r0.wwww, r1.xywx
movc r1.xyw, cb0[17].wwww, r2.xyxz, r1.xyxw
add r0.xyz, r0.xyzx, r1.xywx
lt r0.w, l(0.000000), cb2[9].z
if_nz r0.w
  dp3 r0.w, v7.xyzx, v7.xyzx
  rsq r1.x, r0.w
  mul r1.xyw, r1.xxxx, v7.xyxz
  sqrt r0.w, r0.w
  lt r2.x, l(0.000000), cb2[13].w
  if_nz r2.x
    mad r2.xy, r0.wwww, cb2[15].xyxx, cb2[14].zwzz
    mul r2.xy, r2.xyxx, cb2[16].xyxx
    lt r2.z, l(0.010000), |v7.z|
    mul r3.xy, v7.zzzz, cb2[15].zwzz
    mul r3.zw, r3.xxxy, l(0.000000, 0.000000, -1.442695, -1.442695)
    exp r3.zw, r3.zzzw
    add r3.zw, -r3.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    div r3.xy, r3.zwzz, r3.xyxx
    mul r3.xy, r2.xyxx, r3.xyxx
    movc r2.xy, r2.zzzz, r3.xyxx, r2.xyxx
    mul r2.xzw, r2.xxxx, cb2[12].xxyz
    exp r2.xzw, r2.xxzw
    mul r3.xyz, r2.yyyy, cb2[12].xyzx
    exp r3.xyz, r3.xyzx
    add r3.xyz, -r2.xzwx, r3.xyzx
    mad r2.xyz, cb2[13].wwww, r3.xyzx, r2.xzwx
  else 
    mad r2.w, r0.w, cb2[15].x, cb2[14].z
    mul r2.w, r2.w, cb2[16].x
    lt r3.x, l(0.010000), |v7.z|
    mul r3.y, v7.z, cb2[15].z
    mul r3.z, r3.y, l(-1.442695)
    exp r3.z, r3.z
    add r3.z, -r3.z, l(1.000000)
    div r3.y, r3.z, r3.y
    mul r3.y, r2.w, r3.y
    movc r2.w, r3.x, r3.y, r2.w
    mul r3.xyz, r2.wwww, cb2[12].xyzx
    exp r2.xyz, r3.xyzx
  endif 
  mad r2.xyz, r2.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r2.xyz, r2.xyzx, -cb2[9].zzzz
  dp3 r1.x, cb2[7].yzwy, -r1.xywx
  mad r1.y, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r1.w, cb2[8].w, -r1.x, l(1.000000)
  mul r1.w, r1.w, r1.w
  mul r1.w, r1.w, l(12.566371)
  div r1.y, r1.y, r1.w
  add r0.w, r0.w, -cb2[10].w
  mul_sat r0.w, r0.w, cb2[11].w
  mul r0.w, r0.w, r1.y
  mov_sat r1.x, r1.x
  mad r1.x, r1.x, r1.x, l(1.000000)
  mad r1.x, r1.x, l(0.05968310), l(-1.000000)
  mad r1.x, cb2[8].z, r1.x, l(1.000000)
  mul r3.xyz, r0.wwww, cb2[11].xyzx
  mad r1.xyw, r1.xxxx, cb2[10].xyxz, r3.xyxz
  mul r1.xyw, r1.xyxw, cb2[9].wwww
  add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r1.xyw, r1.xyxw, r3.xyxz
  mad r1.xyw, r0.xyxz, r2.xyxz, r1.xyxw
else 
  mul r0.w, v7.z, cb2[6].x
  mad r2.x, cb2[6].x, v7.z, cb2[5].x
  lt r2.y, |r0.w|, l(0.000100)
  min r2.z, r2.x, l(64.000000)
  mul r2.z, r2.z, l(1.442695)
  exp r2.z, r2.z
  mov_sat r2.w, cb2[6].z
  lt r3.x, r2.x, l(0.000000)
  add r2.x, r2.x, l(1.000000)
  movc r2.x, r3.x, r2.z, r2.x
  add r2.x, r2.x, -cb2[6].z
  movc r0.w, r2.y, l(1.000000), r0.w
  div r0.w, r2.x, r0.w
  movc r0.w, r2.y, r2.w, r0.w
  mul r0.w, r0.w, cb2[5].z
  dp3 r2.x, v7.xyzx, v7.xyzx
  sqrt r2.y, r2.x
  mad r0.w, r0.w, r2.y, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  rsq r2.x, r2.x
  mul r2.xyz, r2.xxxx, v7.xyzx
  dp3 r2.x, cb2[7].yzwy, r2.xyzx
  mad_sat r2.x, cb2[8].y, r2.x, cb2[8].x
  add r3.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r2.xyzw, r2.xxxx, r3.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r2.w
  add r2.xyz, -r0.xyzx, r2.xyzx
  mad r1.xyw, r0.wwww, r2.xyxz, r0.xyxz
endif 
mul r0.xyz, r1.xywx, cb1[85].yyyy
ge r1.xyw, r0.xyxz, l(0.00006104, 0.00006104, 0.000000, 0.00006104)
and r0.xyz, r0.xyzx, r1.xywx
min o0.xyz, r0.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
mov o0.w, r1.z
ret 
// Approximately 2132 instruction slots used
