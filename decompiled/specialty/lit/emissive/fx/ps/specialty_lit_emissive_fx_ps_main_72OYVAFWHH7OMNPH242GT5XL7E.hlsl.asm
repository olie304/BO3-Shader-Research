//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:41:37 2021
//
//
// Note: shader requires additional functionality:
//       Early depth-stencil
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float3 colorTint;                  // Offset:  160 Size:    12
//   float baseNormalHeight;            // Offset:  172 Size:     4
//   float2 glossRange;                 // Offset:  176 Size:     8
//   float rowCount;                    // Offset:  184 Size:     4
//   float columnCount;                 // Offset:  188 Size:     4
//   float imageTime;                   // Offset:  192 Size:     4
//   float2 rotateUVs;                  // Offset:  196 Size:     8
//   float2 scrollUVs;                  // Offset:  208 Size:     8
//   float2 scaleUVs;                   // Offset:  216 Size:     8
//   float2 offsetUVs;                  // Offset:  224 Size:     8
//   float2 zoomUVs;                    // Offset:  232 Size:     8
//   float zoomRate;                    // Offset:  240 Size:     4
//   float layerDepth;                  // Offset:  244 Size:     4
//   bool clampU;                       // Offset:  248 Size:     4
//   bool clampV;                       // Offset:  252 Size:     4
//   float2 flickerSeed;                // Offset:  256 Size:     8
//   float flickerSpeed;                // Offset:  264 Size:     4
//   float2 flickerRange;               // Offset:  272 Size:     8
//   float flickerPower;                // Offset:  280 Size:     4
//   bool relativeHDR;                  // Offset:  284 Size:     4
//   bool invertFalloff;                // Offset:  288 Size:     4
//   float hdrScale;                    // Offset:  292 Size:     4
//   float emissiveFalloffPower;        // Offset:  296 Size:     4
//   float zFeatherDistance;            // Offset:  300 Size:     4
//   float falloffBegin;                // Offset:  304 Size:     4 [unused]
//   float falloffEnd;                  // Offset:  308 Size:     4 [unused]
//   float alphaCooling;                // Offset:  312 Size:     4
//   float coolingFactor;               // Offset:  316 Size:     4
//   float uvMotionToggle1;             // Offset:  320 Size:     4
//   float2 distortionRotateUVs;        // Offset:  324 Size:     8
//   float2 distortionScrollUVs;        // Offset:  336 Size:     8
//   float2 distortionScaleUVs;         // Offset:  344 Size:     8
//   float2 distortionOffsetUVs;        // Offset:  352 Size:     8
//   float2 distortionZoomUVs;          // Offset:  360 Size:     8
//   float distortionZoomRate;          // Offset:  368 Size:     4
//   float distortionAmount;            // Offset:  372 Size:     4
//   float2 maskRotateUVs;              // Offset:  376 Size:     8
//   float2 maskScrollUVs;              // Offset:  384 Size:     8
//   float2 maskScaleUVs;               // Offset:  392 Size:     8
//   float2 maskOffsetUVs;              // Offset:  400 Size:     8
//   float2 maskZoomUVs;                // Offset:  408 Size:     8
//   float maskZoomRate;                // Offset:  416 Size:     4
//   bool noReceiveShadow;              // Offset:  420 Size:     4
//   uint zFeatherComputeSprites;       // Offset:  424 Size:     4 [unused]
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16 [unused]
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16
//   float4 debugNormalOverride;        // Offset:  960 Size:    16
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16
//   float4 debugGlossOverride;         // Offset:  992 Size:    16
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// colorSampler                      sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// specColorSampler                  sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// normalSampler                     sampler      NA          NA             s5      1 
// aoSampler                         sampler      NA          NA             s6      1 
// lookupSampler                     sampler      NA          NA             s7      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// floatZSampler                     texture  float4          2d             t0      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// colorMap                          texture  float4          2d            t21      1 
// tintMask                          texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// normalMap                         texture  float4          2d            t24      1 
// glossMap                          texture  float4          2d            t25      1 
// aoMap                             texture  float4          2d            t26      1 
// flickerLookupMap                  texture  float4          2d            t29      1 
// emissiveMap                       texture  float4          2d            t30      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// alphaMask                         texture  float4          2d            t37      1 
// distortionMap                     texture  float4          2d            t38      1 
// gOit_Pixels                           UAV    uint          2d             u6      1 
// gOit_Nodes                            UAV   uint2     2darray             u7      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyz 
// COLOR                    0   xyz         1     NONE   float   xyz 
// COLOR                    1      w        1     NONE   float      w
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 9     zw        2     NONE   float     zw
// UVOFFSETS                0   xyz         3     NONE   float   xyz 
// TEXCOORD                 1   xyz         4     NONE   float   xyz 
// TEXCOORD                 2   xyz         5     NONE   float   xyz 
// TEXCOORD                 3   xyz         6     NONE   float   xyz 
// OFFPOSITION              0   xyz         7     NONE   float   xyz 
// SV_IsFrontFace           0   x           8    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | forceEarlyDepthStencil
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[27], immediateIndexed
dcl_constantbuffer CB1[93], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2d (float,float,float,float) t26
dcl_resource_texture2d (float,float,float,float) t29
dcl_resource_texture2d (float,float,float,float) t30
dcl_resource_texture2darray (float,float,float,float) t31
dcl_resource_texture2d (float,float,float,float) t37
dcl_resource_texture2d (float,float,float,float) t38
dcl_uav_typed_texture2d (uint,uint,uint,uint) u6
dcl_uav_typed_texture2darray (uint,uint,uint,uint) u7
dcl_input_ps_siv linear noperspective v0.xyz, position
dcl_input_ps linear v1.xyz
dcl_input_ps linear v1.w
dcl_input_ps linear v2.xy
dcl_input_ps linear v2.zw
dcl_input_ps constant v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyz
dcl_input_ps_sgv constant v8.x, is_front_face
dcl_output o0.xyzw
dcl_temps 48
dp3 r0.x, -v7.xyzx, -v7.xyzx
rsq r0.x, r0.x
mul r0.yzw, r0.xxxx, -v7.xxyz
dp3 r1.x, r0.yzwy, v5.xyzx
dp3 r1.y, r0.yzwy, v6.xyzx
dp3 r1.z, r0.yzwy, v4.xyzx
lt r1.w, l(0.000000), r1.z
div r1.xy, -r1.xyxx, r1.zzzz
and r1.xy, r1.xyxx, r1.wwww
add r2.xy, v2.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r2.zw, r1.xxxy, l(0.000000, 0.000000, 0.000010, 0.000010)
mul r3.xy, r2.zwzz, cb0[21].zwzz
mad r3.xy, r2.xyxx, cb0[21].zwzz, r3.xyxx
mad r3.xy, cb0[22].xyxx, cb0[21].zwzz, r3.xyxx
mad r1.w, cb0[20].z, cb1[69].w, l(1.000000)
mul r1.w, r1.w, cb0[20].y
mul r1.w, r1.w, l(0.01745329)
sincos r4.x, r5.x, r1.w
mov r5.y, r5.x
mov r5.z, r4.x
dp2 r6.x, r5.yzyy, r3.xyxx
mov r5.x, -r4.x
dp2 r6.y, r5.xyxx, r3.xyxx
mul r3.xy, cb0[21].xyxx, cb1[69].wwww
mad r3.xy, r3.xyxx, cb0[21].zwzz, r6.xyxx
mul r1.w, cb0[23].x, cb1[69].w
sincos null, r1.w, r1.w
mad r1.w, r1.w, l(0.500000), l(0.500000)
add r1.w, -r1.w, l(1.000000)
add r3.z, -cb0[22].z, cb0[22].w
mad r1.w, r1.w, r3.z, cb0[22].z
div r3.xy, r3.xyxx, r1.wwww
add r3.xy, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r3.xy, r3.xyxx, t38.xyzw, s5
mad r3.xy, r3.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
lt r1.w, l(0.500000), cb0[20].x
if_nz r1.w
  mul r3.z, cb0[11].w, cb0[11].z
  mul r3.w, r3.z, cb0[12].x
  mul r4.x, r3.w, cb1[69].w
  ge r4.x, r4.x, -r4.x
  movc r4.x, r4.x, r3.w, -r3.w
  div r4.y, l(1.000000, 1.000000, 1.000000, 1.000000), r4.x
  mul r4.y, r4.y, cb1[69].w
  frc r4.y, r4.y
  mul r4.x, r4.y, r4.x
  div r3.w, r4.x, r3.w
  mul r3.z, r3.z, r3.w
  round_ne r3.z, r3.z
  div r3.w, r3.z, cb0[11].w
  mul r4.x, r3.z, cb0[11].w
  ge r4.x, r4.x, -r4.x
  movc r4.x, r4.x, cb0[11].w, -cb0[11].w
  div r4.y, l(1.000000, 1.000000, 1.000000, 1.000000), r4.x
  mul r3.z, r3.z, r4.y
  frc r3.z, r3.z
  mul r3.z, r3.z, r4.x
  round_z r3.z, r3.z
  add r3.z, r3.z, v2.x
  div r4.x, r3.z, cb0[11].w
  round_z r3.z, r3.w
  add r3.z, r3.z, v2.y
  div r4.y, r3.z, cb0[11].z
else 
  mul r3.zw, r2.zzzw, cb0[13].zzzw
  mad r3.zw, r2.xxxy, cb0[13].zzzw, r3.zzzw
  mad r3.zw, cb0[14].xxxy, cb0[13].zzzw, r3.zzzw
  mad r4.z, cb0[12].z, cb1[69].w, l(1.000000)
  mul r4.z, r4.z, cb0[12].y
  mul r4.z, r4.z, l(0.01745329)
  sincos r5.x, r6.x, r4.z
  mov r6.y, r6.x
  mov r6.z, r5.x
  dp2 r7.x, r6.yzyy, r3.zwzz
  mov r6.x, -r5.x
  dp2 r7.y, r6.xyxx, r3.zwzz
  mul r3.zw, cb0[13].xxxy, cb1[69].wwww
  mad r3.zw, r3.zzzw, cb0[13].zzzw, r7.xxxy
  mul r4.z, cb0[15].x, cb1[69].w
  sincos null, r4.z, r4.z
  mad r4.z, r4.z, l(0.500000), l(0.500000)
  add r4.z, -r4.z, l(1.000000)
  add r4.w, -cb0[14].z, cb0[14].w
  mad r4.z, r4.z, r4.w, cb0[14].z
  div r3.zw, r3.zzzw, r4.zzzz
  add r3.zw, r3.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
  mov_sat r4.zw, r3.zzzw
  movc r4.xy, cb0[15].zwzz, r4.zwzz, r3.zwzz
endif 
mad r3.zw, r3.xxxy, cb0[23].yyyy, r4.xxxy
sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r3.zwzz, t21.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r5.x, r3.zwzz, t22.xyzw, s1
add r5.yzw, cb0[10].xxyz, l(0.000000, -1.000000, -1.000000, -1.000000)
mad r5.xyz, r5.xxxx, r5.yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r4.xyz, r4.xyzx, r5.xyzx
mul r4.xyz, r4.xyzx, v1.xyzx
mul r5.x, r4.w, v1.w
sample_indexable(texture2d)(float,float,float,float) r5.y, r3.zwzz, t26.yxzw, s6
sample_indexable(texture2d)(float,float,float,float) r5.z, r3.zwzz, t25.yzxw, s3
add r5.w, -cb0[11].x, cb0[11].y
mad r5.z, r5.z, r5.w, cb0[11].x
mul_sat r5.z, r5.z, l(0.05882353)
sample_indexable(texture2d)(float,float,float,float) r6.xyz, r3.zwzz, t24.xyzw, s5
add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.000000, 0.000000)
mad r6.xyz, cb0[10].wwww, r6.xyzx, l(0.500000, 0.500000, 0.000000, 0.000000)
mad r6.xy, r6.xyxx, l(1.99218750, 1.99218750, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r6.w, r6.xyxx, r6.xyxx
add r6.w, -r6.w, l(1.000000)
max r6.w, r6.w, l(0.000000)
sqrt r6.w, r6.w
mul r6.z, r6.z, r6.z
mul r6.z, r6.z, l(0.33333334)
min r6.z, r6.z, l(1.000000)
movc r7.x, v8.x, l(1.000000), l(-1.000000)
dp3 r7.y, v4.xyzx, v4.xyzx
rsq r7.y, r7.y
mul r7.yzw, r7.yyyy, v4.xxyz
mul r7.yzw, r7.xxxx, r7.yyzw
dp3 r8.x, v5.xyzx, v5.xyzx
rsq r8.x, r8.x
mul r8.xyz, r8.xxxx, v5.xyzx
mul r8.xyz, r7.xxxx, r8.xyzx
dp3 r8.w, v6.xyzx, v6.xyzx
rsq r8.w, r8.w
mul r9.xyz, r8.wwww, v6.xyzx
mul r9.xyz, r7.xxxx, r9.xyzx
mul r5.z, r5.z, l(-17.000000)
exp r5.z, r5.z
add r5.z, r5.z, r6.z
log r5.z, r5.z
mul r5.z, r5.z, l(-0.05882353)
mul r9.xyz, r6.yyyy, r9.xyzx
mad r8.xyz, r8.xyzx, r6.xxxx, r9.xyzx
mad r6.xyw, r7.yzyw, r6.wwww, r8.xyxz
dp3 r7.x, r6.xywx, r6.xywx
rsq r7.x, r7.x
mul r6.xyw, r6.xyxw, r7.xxxx
mad r5.w, cb1[62].x, r5.w, cb0[11].x
mul_sat r5.w, r5.w, l(0.05882353)
mul r5.w, r5.w, l(-17.000000)
exp r5.w, r5.w
add r5.w, r5.w, r6.z
log r5.w, r5.w
mul r5.w, r5.w, l(-0.05882353)
max r5.zw, r5.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
lt r6.z, l(0.000000), cb1[64].w
if_nz r6.z
  ftoi r6.z, cb1[64].w
  lod r7.x, r3.zwzz, t21.y, s1
  lod r7.y, r3.zwzz, t21.x, s1
  lt r7.x, r7.x, r7.y
  lt r7.y, l(0.000000), r7.y
  and r8.xyz, r6.zzzz, l(1, 2, 4, 0)
  movc r9.xyz, r8.xxxx, l(1.000000,0,1.000000,0), r4.xyzx
  movc r8.xyw, r8.yyyy, l(0,1.000000,0,1.000000), r4.xyxz
  movc r7.yzw, r7.yyyy, r9.xxyz, r8.xxyw
  movc r8.xyz, r8.zzzz, l(0,1.000000,0,0), r4.xyzx
  movc r4.xyz, r7.xxxx, r7.yzwy, r8.xyzx
endif 
add r7.xyz, -r4.xyzx, cb1[58].xyzx
mad r4.xyz, cb1[58].wwww, r7.xyzx, r4.xyzx
mad r4.w, -r4.w, v1.w, cb1[59].x
mad r4.w, cb1[59].w, r4.w, r5.x
add r7.xyz, cb1[61].xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r7.xyz, cb1[61].wwww, r7.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
add r5.x, -r5.z, r5.w
mad r8.y, cb1[62].w, r5.x, r5.z
add r5.x, -r5.y, cb1[63].x
mad r5.x, cb1[63].w, r5.x, r5.y
movc r5.yzw, v8.xxxx, v4.xxyz, -v4.xxyz
dp3 r6.z, r5.yzwy, r5.yzwy
rsq r6.z, r6.z
mad r5.yzw, r5.yyzw, r6.zzzz, -r6.xxyw
mad r6.xyz, cb1[60].wwww, r5.yzwy, r6.xywx
if_nz r1.w
  mul r1.w, cb0[11].w, cb0[11].z
  mul r5.y, r1.w, cb0[12].x
  mul r5.z, r5.y, cb1[69].w
  ge r5.z, r5.z, -r5.z
  movc r5.z, r5.z, r5.y, -r5.y
  div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r5.z
  mul r5.w, r5.w, cb1[69].w
  frc r5.w, r5.w
  mul r5.z, r5.w, r5.z
  div r5.y, r5.z, r5.y
  mul r1.w, r1.w, r5.y
  round_ne r1.w, r1.w
  div r5.y, r1.w, cb0[11].w
  mul r5.z, r1.w, cb0[11].w
  ge r5.z, r5.z, -r5.z
  movc r5.z, r5.z, cb0[11].w, -cb0[11].w
  div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r5.z
  mul r1.w, r1.w, r5.w
  frc r1.w, r1.w
  mul r1.w, r1.w, r5.z
  round_z r1.w, r1.w
  add r1.w, r1.w, r3.z
  div r9.x, r1.w, cb0[11].w
  round_z r1.w, r5.y
  add r1.w, r1.w, r3.w
  div r9.y, r1.w, cb0[11].z
else 
  add r3.zw, r3.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
  add r1.w, cb0[15].y, l(0.000010)
  mul r1.xy, r1.wwww, r1.xyxx
  mul r1.xy, r1.xyxx, cb0[13].zwzz
  mad r1.xy, r3.zwzz, cb0[13].zwzz, r1.xyxx
  mad r1.xy, cb0[14].xyxx, cb0[13].zwzz, r1.xyxx
  mad r1.w, cb0[12].z, cb1[69].w, l(1.000000)
  mul r1.w, r1.w, cb0[12].y
  mul r1.w, r1.w, l(0.01745329)
  sincos r10.x, r11.x, r1.w
  mov r11.y, r11.x
  mov r11.z, r10.x
  dp2 r12.x, r11.yzyy, r1.xyxx
  mov r11.x, -r10.x
  dp2 r12.y, r11.xyxx, r1.xyxx
  mul r1.xy, cb0[13].xyxx, cb1[69].wwww
  mad r1.xy, r1.xyxx, cb0[13].zwzz, r12.xyxx
  mul r1.w, cb0[15].x, cb1[69].w
  sincos null, r1.w, r1.w
  mad r1.w, r1.w, l(0.500000), l(0.500000)
  add r1.w, -r1.w, l(1.000000)
  add r3.z, -cb0[14].z, cb0[14].w
  mad r1.w, r1.w, r3.z, cb0[14].z
  div r1.xy, r1.xyxx, r1.wwww
  add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  mov_sat r3.zw, r1.xxxy
  movc r9.xy, cb0[15].zwzz, r3.zwzz, r1.xyxx
endif 
mad r1.xy, r3.xyxx, cb0[23].yyyy, r9.xyxx
sample_indexable(texture2d)(float,float,float,float) r9.xyzw, r1.xyxx, t30.xyzw, s1
mul r1.xyw, r9.xyxz, cb0[10].xyxz
mov_sat r5.yzw, r1.xxyw
log r5.yzw, r5.yyzw
mul r5.yzw, r5.yyzw, cb0[19].zzzz
exp r5.yzw, r5.yyzw
mov_sat r3.z, r1.z
log r3.w, r3.z
mul r3.w, r3.w, cb0[18].z
exp r3.w, r3.w
add r3.z, -r3.z, l(1.000000)
log r3.z, r3.z
mul r3.z, r3.z, cb0[18].z
exp r3.z, r3.z
movc r3.z, cb0[18].x, r3.z, r3.w
eq r8.zw, cb0[18].zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
movc r3.z, r8.z, l(1.000000), r3.z
mul r3.w, r9.w, cb0[18].y
mul r3.z, r3.z, r3.w
mul r1.xyw, r1.xyxw, r3.zzzz
mul r5.yzw, r3.zzzz, r5.yyzw
add r3.z, v3.y, v3.x
add r3.z, r3.z, v3.z
add r3.z, r3.z, cb0[16].y
frc r3.z, r3.z
mad r9.y, cb1[69].w, cb0[16].z, r3.z
mov r9.x, cb0[16].x
sample_l_indexable(texture2d)(float,float,float,float) r3.z, r9.xyxx, t29.yzxw, s7, l(0.000000)
log r3.z, |r3.z|
mul r3.z, r3.z, cb0[17].z
exp r3.z, r3.z
add r3.w, -cb0[17].x, cb0[17].y
mad r3.z, r3.z, r3.w, cb0[17].x
mul r9.xyz, r1.xywx, r3.zzzz
div r9.xyz, r9.xyzx, cb0[18].yyyy
dp3_sat r3.w, r9.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
add r3.w, r3.w, r4.w
mul r2.zw, r2.zzzw, cb0[24].zzzw
mad r2.xy, r2.xyxx, cb0[24].zwzz, r2.zwzz
mad r2.xy, cb0[25].xyxx, cb0[24].zwzz, r2.xyxx
mad r2.z, cb1[69].w, cb0[23].w, l(1.000000)
mul r2.z, r2.z, cb0[23].z
mul r2.z, r2.z, l(0.01745329)
sincos r9.x, r10.x, r2.z
mov r10.y, r10.x
mov r10.z, r9.x
dp2 r11.x, r10.yzyy, r2.xyxx
mov r10.x, -r9.x
dp2 r11.y, r10.xyxx, r2.xyxx
mul r2.xy, cb0[24].xyxx, cb1[69].wwww
mad r2.xy, r2.xyxx, cb0[24].zwzz, r11.xyxx
mul r2.z, cb0[26].x, cb1[69].w
sincos null, r2.z, r2.z
mad r2.z, r2.z, l(0.500000), l(0.500000)
add r2.z, -r2.z, l(1.000000)
add r2.w, -cb0[25].z, cb0[25].w
mad r2.z, r2.z, r2.w, cb0[25].z
div r2.xy, r2.xyxx, r2.zzzz
add r2.xy, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
mov_sat r2.zw, r2.xxxy
movc r2.xy, cb0[15].zwzz, r2.zwzz, r2.xyxx
mad r2.xy, r3.xyxx, cb0[23].yyyy, r2.xyxx
sample_indexable(texture2d)(float,float,float,float) r2.x, r2.xyxx, t37.xyzw, s1
mul r2.x, r2.x, r3.w
mul r1.z, r1.z, r1.z
mad_sat r1.z, r1.z, v2.z, v2.w
mul r1.z, r1.z, r2.x
ftoi r2.xy, v0.xyxx
mov r2.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r2.x, r2.xyzw, t0.xyzw
ge r2.y, r2.x, l(0.984375)
mul r2.z, r2.x, l(1.01587307)
mad r2.x, r2.x, l(64.000000), l(-63.000000)
movc r2.x, r2.y, r2.x, r2.z
max r2.x, r2.x, l(0.00000001)
ge r2.y, v0.z, l(0.984375)
mul r2.z, v0.z, l(1.01587307)
mad r2.w, v0.z, l(64.000000), l(-63.000000)
movc r2.y, r2.y, r2.w, r2.z
max r2.y, r2.y, l(0.00000001)
rcp r2.xy, r2.xyxx
div r2.z, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[18].w
movc r2.z, r8.w, l(60000.000000), r2.z
add r2.x, -r2.y, r2.x
mul_sat r2.x, r2.z, r2.x
mul r9.w, r1.z, r2.x
ftou r2.xz, v0.xxyx
ine r1.z, cb1[92].x, l(0)
utof r3.xy, r2.zxzz
dp2 r2.w, r3.yxyy, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r2.w, r2.w
mul r2.yw, r2.yyyw, l(0.000000, 0.00781250, 0.000000, 52.982918)
frc r2.w, r2.w
mad r2.w, r2.w, l(6.28318548), cb1[70].w
sincos r10.x, r11.x, r2.w
dp2 r2.w, r3.xyxx, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r2.w, r2.w
mul r2.w, r2.w, l(52.982918)
frc r2.w, r2.w
mad r2.w, r2.w, l(6.28318548), cb1[70].w
sincos r3.x, r12.x, r2.w
dp3_sat r8.x, r6.xyzx, r0.yzwy
dp3 r2.w, -r0.yzwy, r6.xyzx
add r2.w, r2.w, r2.w
mad r13.xyz, r6.xyzx, -r2.wwww, -r0.yzwy
mul r2.w, r8.y, l(17.000000)
exp r2.w, r2.w
add r2.w, r2.w, l(2.000000)
div r2.w, l(2.000000), r2.w
sqrt r3.y, r2.w
add r3.w, -r8.y, l(1.000000)
mul r4.w, r3.w, l(5.000000)
mad r7.w, r3.w, l(5.000000), l(-2.500000)
mul_sat r7.w, r7.w, l(0.400000)
mul r7.w, r7.w, l(100.000000)
mad r8.zw, -r3.wwww, l(0.000000, 0.000000, 10.000000, 5.000000), l(0.000000, 0.000000, 6.857410, 7.085000)
exp r8.z, r8.z
mul r10.z, r3.w, r4.w
mad r8.w, -r10.z, l(2.015905), r8.w
exp r8.w, r8.w
mul r8.zw, r8.zzzw, r8.xxxx
mul r8.zw, r8.zzzw, l(0.000000, 0.000000, 9.136810, 9.708090)
max r8.z, r8.w, r8.z
max r8.z, r8.z, l(1.268160)
min r2.y, r2.y, l(15.000000)
ftou r2.y, r2.y
ushr r14.xy, r2.xzxx, l(6, 6, 0, 0)
ishl r14.z, r2.y, l(4)
mov r2.xy, l(0,0,0,0)
mov r15.w, l(0)
mov r16.yz, l(0,0,1.000000,0)
mov r17.xy, l(0,0,0,0)
mov r18.xy, l(0,0,0,0)
mov r19.xy, l(0,0,0,0)
mov r20.x, l(1.000000)
mov r21.xyzw, l(0,0,0,0)
mov r22.yzw, l(0,0,0,0)
mov r8.w, l(0)
mov r10.z, l(0)
loop 
  uge r10.w, r10.z, cb2[0].y
  breakc_nz r10.w
  ushr r2.z, r10.z, l(5)
  iadd r15.xyz, r2.xyzx, r14.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r2.z, r15.xyzw, t7.yzxw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r23.xyzw, r10.z, l(0), t15.wxyz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r10.z, l(16), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r10.z, l(32), t15.yxwz
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r10.z, l(48), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r10.z, l(64), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r10.z, l(80), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r12.yz, r10.z, l(96), t15.xxyx
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r10.z, l(116), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r10.z, l(132), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r10.z, l(148), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r10.z, l(164), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r10.z, l(180), t15.zwxy
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r10.z, l(196), t15.xyzw
  ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xy, r10.z, l(212), t15.xyxx
  add r15.xyz, -r23.yzwy, v7.xyzx
  dp3 r10.w, r15.xyzx, r15.xyzx
  sqrt r10.w, r10.w
  ge r10.w, cb2[54].y, r10.w
  and r11.w, r29.y, l(0x0000ffff)
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r11.w, l(0), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r11.w, l(16), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r38.xyzw, r11.w, l(32), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r39.xyzw, r11.w, l(48), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r40.xyzw, r11.w, l(64), t16.xyzw
  ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r41.xyzw, r11.w, l(80), t16.xyzw
  dp3 r12.w, r36.xyzx, r15.xyzx
  add_sat r12.w, r36.w, r12.w
  dp3 r14.w, r37.xyzx, r15.xyzx
  add_sat r14.w, r37.w, r14.w
  mul r12.w, r12.w, r14.w
  dp3 r14.w, r38.xyzx, r15.xyzx
  add_sat r14.w, r38.w, r14.w
  mul r12.w, r12.w, r14.w
  dp3 r14.w, r39.xyzx, r15.xyzx
  add_sat r14.w, r39.w, r14.w
  mul r12.w, r12.w, r14.w
  dp3 r14.w, r40.xyzx, r15.xyzx
  add_sat r14.w, r40.w, r14.w
  mul r12.w, r12.w, r14.w
  dp3 r14.w, r41.xyzx, r15.xyzx
  add_sat r14.w, r41.w, r14.w
  mul r16.x, r12.w, r14.w
  and r12.w, r12.y, l(1)
  movc r16.xw, r12.wwww, r16.xxxy, r16.zzzx
  mov r36.xy, r29.zwzz
  mov r36.z, r30.z
  dp3 r12.w, r13.xyzx, r36.xyzx
  dp3 r14.w, r15.xyzx, r36.xyzx
  add r14.w, -r30.w, r14.w
  ge r17.w, r14.w, l(0.000000)
  max r14.w, r7.w, |r14.w|
  movc r14.w, r17.w, r14.w, -r14.w
  max r12.w, -r12.w, l(0.00000010)
  div r12.w, r14.w, r12.w
  min r12.w, |r12.w|, l(131072.000000)
  mov r30.z, r31.z
  dp3 r14.w, r13.xyzx, r30.xyzx
  dp3 r17.w, r15.xyzx, r30.xyzx
  add r17.w, -r31.w, r17.w
  ge r18.w, r17.w, l(0.000000)
  max r17.w, r7.w, |r17.w|
  movc r17.w, r18.w, r17.w, -r17.w
  max r14.w, -r14.w, l(0.00000010)
  div r14.w, r17.w, r14.w
  min r12.w, r12.w, |r14.w|
  mov r31.z, r32.z
  dp3 r14.w, r13.xyzx, r31.xyzx
  dp3 r17.w, r15.xyzx, r31.xyzx
  add r17.w, -r32.w, r17.w
  ge r18.w, r17.w, l(0.000000)
  max r17.w, r7.w, |r17.w|
  movc r17.w, r18.w, r17.w, -r17.w
  max r14.w, -r14.w, l(0.00000010)
  div r14.w, r17.w, r14.w
  min r12.w, r12.w, |r14.w|
  mov r32.z, r33.z
  dp3 r14.w, r13.xyzx, r32.xyzx
  dp3 r17.w, r15.xyzx, r32.xyzx
  add r17.w, -r33.w, r17.w
  ge r18.w, r17.w, l(0.000000)
  max r17.w, r7.w, |r17.w|
  movc r17.w, r18.w, r17.w, -r17.w
  max r14.w, -r14.w, l(0.00000010)
  div r14.w, r17.w, r14.w
  min r12.w, r12.w, |r14.w|
  mov r33.z, r34.x
  dp3 r14.w, r13.xyzx, r33.xyzx
  dp3 r17.w, r15.xyzx, r33.xyzx
  add r17.w, -r34.y, r17.w
  ge r18.w, r17.w, l(0.000000)
  max r17.w, r7.w, |r17.w|
  movc r17.w, r18.w, r17.w, -r17.w
  max r14.w, -r14.w, l(0.00000010)
  div r14.w, r17.w, r14.w
  min r12.w, r12.w, |r14.w|
  mov r35.zw, r34.zzzw
  dp3 r14.w, r13.zxyz, r35.xzwx
  dp3 r17.w, r15.zxyz, r35.xzwx
  add r17.w, -r35.y, r17.w
  ge r18.w, r17.w, l(0.000000)
  max r17.w, r7.w, |r17.w|
  movc r17.w, r18.w, r17.w, -r17.w
  max r14.w, -r14.w, l(0.00000010)
  div r14.w, r17.w, r14.w
  min r12.w, r12.w, |r14.w|
  mov r30.x, r26.w
  mov r30.yz, r27.zzwz
  add r30.xyz, r15.xyzx, r30.xyzx
  mad r30.xyz, r13.xyzx, r12.wwww, r30.xyzx
  dp3 r14.w, r30.xyzx, r30.xyzx
  sqrt r14.w, r14.w
  div r12.w, r12.w, r14.w
  add r12.w, r12.w, r12.w
  sqrt r12.w, r12.w
  mad r12.w, r3.w, l(5.000000), r12.w
  add r12.w, r12.w, l(-0.844800)
  mov r23.y, r24.z
  mov r23.z, r25.x
  dp3 r31.x, r30.xyzx, r23.xyzx
  mov r32.xy, r24.xwxx
  mov r32.z, r25.w
  dp3 r31.y, r30.xyzx, r32.xyzx
  mov r25.x, r24.y
  dp3 r31.z, r30.xyzx, r25.xyzx
  ubfe r20.zw, l(0, 0, 6, 9), l(0, 0, 25, 16), r29.yyyy
  utof r31.w, r20.w
  sample_l_indexable(texturecubearray)(float,float,float,float) r24.xyz, r31.xyzw, t8.xyzw, s2, r12.w
  and r29.yzw, r24.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
  ieq r29.yzw, r29.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
  or r12.w, r29.z, r29.y
  or r12.w, r29.w, r12.w
  movc r24.xyz, r12.wwww, l(1.000000,1.000000,0,0), r24.xyzx
  dp3 r30.x, r15.xyzx, r23.xyzx
  dp3 r30.y, r15.xyzx, r32.xyzx
  dp3 r30.z, r15.xyzx, r25.xyzx
  mad_sat r26.xyz, r30.xyzx, r26.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mov r27.z, r28.x
  mad r26.xyz, r26.xyzx, r27.xyzx, r28.yzwy
  dp3 r31.x, r6.xyzx, r23.xyzx
  dp3 r31.y, r6.xyzx, r32.xyzx
  dp3 r31.z, r6.xyzx, r25.xyzx
  lt r23.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r31.xyzx
  movc r17.z, r23.x, l(0), l(0.500000)
  add r25.xyz, r17.xyzx, r26.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r25.xyz, r25.xyzx, t17.xyzw, s4, l(0.000000)
  movc r18.z, r23.y, l(0), l(0.500000)
  add r23.xyw, r18.xyxz, r26.xyxz
  sample_l_indexable(texture3d)(float,float,float,float) r23.xyw, r23.xywx, t18.xywz, s4, l(0.000000)
  movc r19.z, r23.z, l(0), l(0.500000)
  add r26.xyz, r19.xyzx, r26.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r26.xyz, r26.xyzx, t19.xyzw, s4, l(0.000000)
  mul r27.xyz, r31.xyzx, r31.xyzx
  sample_l_indexable(texturecubearray)(float,float,float,float) r28.xyz, r31.xyzw, t8.xyzw, s2, l(6.000000)
  and r29.yzw, r28.xxyz, l(0, 0x7fffffff, 0x7fffffff, 0x7fffffff)
  ieq r29.yzw, r29.yyzw, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
  or r12.w, r29.z, r29.y
  or r12.w, r29.w, r12.w
  movc r28.xyz, r12.wwww, l(1.000000,1.000000,0,0), r28.xyzx
  mov r30.xyzw, r21.xyzw
  mov r29.yzw, r22.yyzw
  mov r12.w, r8.w
  mov r14.w, r2.z
  loop 
    breakc_z r14.w
    firstbit_lo r17.z, r14.w
    ishl r17.z, l(1), r17.z
    and r17.w, r14.w, r17.z
    if_nz r17.w
      not r17.z, r17.z
      and r14.w, r14.w, r17.z
      if_nz r10.w
        mov r17.z, r12.y
        mov r31.xy, r16.xwxx
        mov r17.w, l(1)
        loop 
          ige r18.z, r17.w, r20.z
          breakc_nz r18.z
          iadd r18.z, r11.w, r17.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r18.z, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r18.z, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r18.z, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r18.z, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r18.z, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r18.z, l(80), t16.xyzw
          dp3 r18.z, r32.xyzx, r15.xyzx
          add_sat r18.z, r32.w, r18.z
          mul r18.z, r18.z, r31.x
          dp3 r18.w, r33.xyzx, r15.xyzx
          add_sat r18.w, r33.w, r18.w
          mul r18.z, r18.w, r18.z
          dp3 r18.w, r34.xyzx, r15.xyzx
          add_sat r18.w, r34.w, r18.w
          mul r18.z, r18.w, r18.z
          dp3 r18.w, r35.xyzx, r15.xyzx
          add_sat r18.w, r35.w, r18.w
          mul r18.z, r18.w, r18.z
          dp3 r18.w, r36.xyzx, r15.xyzx
          add_sat r18.w, r36.w, r18.w
          mul r18.z, r18.w, r18.z
          dp3 r18.w, r37.xyzx, r15.xyzx
          add_sat r18.w, r37.w, r18.w
          mul r31.x, r18.w, r18.z
          ushr r19.z, r17.z, l(2)
          ubfe r19.w, l(1), l(2), r17.z
          and r20.w, r19.z, l(2)
          max r23.z, r31.x, r31.y
          mad r18.z, -r18.z, r18.w, l(1.000000)
          mul r18.z, r18.z, r31.y
          movc r20.y, r20.w, r18.z, r23.z
          movc r31.xy, r19.wwww, r31.xyxx, r20.xyxx
          iadd r17.w, r17.w, l(1)
          mov r17.z, r19.z
        endloop 
        mov_sat r31.y, r31.y
        mul r17.z, r12.z, r31.y
        lt r17.w, l(0.000000), r17.z
        if_nz r17.w
          mad r32.z, r31.y, r12.z, r29.w
          mul r17.z, r29.x, r17.z
          mul r31.xzw, r17.zzzz, r27.xxyz
          mul r33.xyz, r23.xywx, r31.zzzz
          mad r33.xyz, r25.xyzx, r31.xxxx, r33.xyzx
          mad r31.xzw, r26.xxyz, r31.wwww, r33.xxyz
          mul r33.xyz, r28.xyzx, r31.xzwx
          dp3 r17.w, r33.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r33.xyz, r31.xzwx, r28.xyzx, r30.xyzx
          mul r18.z, r8.z, r17.w
          mul r31.xzw, r17.zzzz, r24.xxyz
          dp3 r17.z, r31.xzwx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r17.z, r8.z, r17.w, r17.z
          div r17.z, r18.z, r17.z
          mov r34.x, r30.w
          mov r34.yz, r29.yyzy
          mad r32.xyw, r31.zwzx, r17.zzzz, r34.yzyx
          mov r33.w, r32.w
        else 
          mov r33.xyzw, r30.xyzw
          mov r32.xyz, r29.yzwy
        endif 
        mov r12.w, l(-1)
        mov r30.xyzw, r33.xyzw
        mov r29.yzw, r32.xxyz
        break 
      endif 
    endif 
  endloop 
  if_nz r12.w
    mov r21.xyzw, r30.xyzw
    mov r22.yzw, r29.yyzw
    mov r8.w, l(-1)
    break 
  endif 
  iadd r10.z, r10.z, l(32)
  mov r21.xyzw, r30.xyzw
  mov r22.yzw, r29.yyzw
  mov r8.w, r12.w
endloop 
if_z r8.w
  iadd r2.x, cb2[0].y, -cb2[58].x
  and r2.y, r2.x, l(-32)
  iadd r2.z, -r2.y, r2.x
  and r8.w, cb2[0].y, l(-32)
  iadd r10.z, -r8.w, cb2[0].y
  mov r15.xy, l(0,0,0,0)
  mov r16.w, l(0)
  mov r17.yz, l(0,0,1.000000,0)
  mov r18.xy, l(0,0,0,0)
  mov r19.x, l(1.000000)
  mov r20.xy, l(0,0,0,0)
  mov r23.xy, l(0,0,0,0)
  mov r24.xyzw, r21.xyzw
  mov r25.yzw, r22.yyzw
  mov r10.w, r2.y
  loop 
    uge r11.w, r10.w, cb2[0].y
    breakc_nz r11.w
    ushr r15.z, r10.w, l(5)
    iadd r16.xyz, r14.xyzx, r15.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r11.w, r16.xyzw, t7.yzwx
    ieq r12.y, r2.y, r10.w
    bfi r12.z, r2.z, l(0), l(0), r11.w
    movc r11.w, r12.y, r12.z, r11.w
    ieq r12.y, r8.w, r10.w
    ubfe r12.z, r10.z, l(0), r11.w
    movc r11.w, r12.y, r12.z, r11.w
    iadd r12.y, r10.w, cb2[0].x
    mov r26.xyzw, r24.xyzw
    mov r27.xyz, r25.yzwy
    mov r12.z, r11.w
    loop 
      breakc_z r12.z
      firstbit_lo r12.w, r12.z
      ishl r14.w, l(1), r12.w
      and r15.z, r12.z, r14.w
      if_nz r15.z
        xor r12.z, r12.z, r14.w
        iadd r14.w, r12.w, r12.y
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r28.xyzw, r14.w, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r16.xy, r14.w, l(16), t11.xyxx
        add r28.xyz, r28.xyzx, -v7.xyzx
        mov r16.z, r28.w
        lt r16.xyz, |r28.xyzx|, r16.zxyz
        and r14.w, r16.y, r16.x
        and r14.w, r16.z, r14.w
        if_nz r14.w
          iadd r12.w, r10.w, r12.w
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r12.w, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r15.zw, r12.w, l(96), t15.xxxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r12.w, l(116), t15.zwxy
          add r16.xyz, -r28.yzwy, v7.xyzx
          and r14.w, r29.w, l(0x0000ffff)
          ubfe r17.w, l(6), l(25), r29.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r14.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r14.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r14.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r14.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r14.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r14.w, l(80), t16.xyzw
          dp3 r18.w, r30.xyzx, r16.xyzx
          add_sat r18.w, r30.w, r18.w
          dp3 r19.z, r31.xyzx, r16.xyzx
          add_sat r19.z, r31.w, r19.z
          mul r18.w, r18.w, r19.z
          dp3 r19.z, r32.xyzx, r16.xyzx
          add_sat r19.z, r32.w, r19.z
          mul r18.w, r18.w, r19.z
          dp3 r19.z, r33.xyzx, r16.xyzx
          add_sat r19.z, r33.w, r19.z
          mul r18.w, r18.w, r19.z
          dp3 r19.z, r34.xyzx, r16.xyzx
          add_sat r19.z, r34.w, r19.z
          mul r18.w, r18.w, r19.z
          dp3 r19.z, r35.xyzx, r16.xyzx
          add_sat r19.z, r35.w, r19.z
          mul r17.x, r18.w, r19.z
          and r18.w, r15.z, l(1)
          movc r19.zw, r18.wwww, r17.xxxy, r17.zzzx
          mov r17.x, r15.z
          mov r30.xy, r19.zwzz
          mov r18.w, l(1)
          loop 
            ige r20.w, r18.w, r17.w
            breakc_nz r20.w
            iadd r20.w, r14.w, r18.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r20.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r20.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r20.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r20.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r20.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r20.w, l(80), t16.xyzw
            dp3 r20.w, r31.xyzx, r16.xyzx
            add_sat r20.w, r31.w, r20.w
            mul r20.w, r20.w, r30.x
            dp3 r23.w, r32.xyzx, r16.xyzx
            add_sat r23.w, r32.w, r23.w
            mul r20.w, r20.w, r23.w
            dp3 r23.w, r33.xyzx, r16.xyzx
            add_sat r23.w, r33.w, r23.w
            mul r20.w, r20.w, r23.w
            dp3 r23.w, r34.xyzx, r16.xyzx
            add_sat r23.w, r34.w, r23.w
            mul r20.w, r20.w, r23.w
            dp3 r23.w, r35.xyzx, r16.xyzx
            add_sat r23.w, r35.w, r23.w
            mul r20.w, r20.w, r23.w
            dp3 r23.w, r36.xyzx, r16.xyzx
            add_sat r23.w, r36.w, r23.w
            mul r30.x, r20.w, r23.w
            ushr r28.w, r17.x, l(2)
            ubfe r30.z, l(1), l(2), r17.x
            and r30.w, r28.w, l(2)
            max r31.x, r30.x, r30.y
            mad r20.w, -r20.w, r23.w, l(1.000000)
            mul r20.w, r20.w, r30.y
            movc r19.y, r30.w, r20.w, r31.x
            movc r30.xy, r30.zzzz, r30.xyxx, r19.xyxx
            iadd r18.w, r18.w, l(1)
            mov r17.x, r28.w
          endloop 
          mov_sat r30.y, r30.y
          mul r14.w, r15.w, r30.y
          lt r15.z, l(0.000000), r14.w
          if_nz r15.z
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r12.w, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r12.w, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r12.w, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r12.w, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r12.w, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r12.w, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r12.w, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r12.w, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xyzw, r12.w, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r40.xyzw, r12.w, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r41.xy, r12.w, l(212), t15.xyxx
            mad r27.z, r30.y, r15.w, r27.z
            mul r12.w, r29.z, r14.w
            mov r29.z, r36.z
            dp3 r14.w, r13.xyzx, r29.xyzx
            dp3 r15.z, r16.xyzx, r29.xyzx
            add r15.z, -r36.w, r15.z
            ge r15.w, r15.z, l(0.000000)
            max r15.z, r7.w, |r15.z|
            movc r15.z, r15.w, r15.z, -r15.z
            max r14.w, -r14.w, l(0.00000010)
            div r14.w, r15.z, r14.w
            min r14.w, |r14.w|, l(131072.000000)
            mov r36.z, r37.z
            dp3 r15.z, r13.xyzx, r36.xyzx
            dp3 r15.w, r16.xyzx, r36.xyzx
            add r15.w, -r37.w, r15.w
            ge r17.x, r15.w, l(0.000000)
            max r15.w, r7.w, |r15.w|
            movc r15.w, r17.x, r15.w, -r15.w
            max r15.z, -r15.z, l(0.00000010)
            div r15.z, r15.w, r15.z
            min r14.w, r14.w, |r15.z|
            mov r37.z, r38.z
            dp3 r15.z, r13.xyzx, r37.xyzx
            dp3 r15.w, r16.xyzx, r37.xyzx
            add r15.w, -r38.w, r15.w
            ge r17.x, r15.w, l(0.000000)
            max r15.w, r7.w, |r15.w|
            movc r15.w, r17.x, r15.w, -r15.w
            max r15.z, -r15.z, l(0.00000010)
            div r15.z, r15.w, r15.z
            min r14.w, r14.w, |r15.z|
            mov r38.z, r39.z
            dp3 r15.z, r13.xyzx, r38.xyzx
            dp3 r15.w, r16.xyzx, r38.xyzx
            add r15.w, -r39.w, r15.w
            ge r17.x, r15.w, l(0.000000)
            max r15.w, r7.w, |r15.w|
            movc r15.w, r17.x, r15.w, -r15.w
            max r15.z, -r15.z, l(0.00000010)
            div r15.z, r15.w, r15.z
            min r14.w, r14.w, |r15.z|
            mov r39.z, r40.x
            dp3 r15.z, r13.xyzx, r39.xyzx
            dp3 r15.w, r16.xyzx, r39.xyzx
            add r15.w, -r40.y, r15.w
            ge r17.x, r15.w, l(0.000000)
            max r15.w, r7.w, |r15.w|
            movc r15.w, r17.x, r15.w, -r15.w
            max r15.z, -r15.z, l(0.00000010)
            div r15.z, r15.w, r15.z
            min r14.w, r14.w, |r15.z|
            mov r41.zw, r40.zzzw
            dp3 r15.z, r13.zxyz, r41.xzwx
            dp3 r15.w, r16.zxyz, r41.xzwx
            add r15.w, -r41.y, r15.w
            ge r17.x, r15.w, l(0.000000)
            max r15.w, r7.w, |r15.w|
            movc r15.w, r17.x, r15.w, -r15.w
            max r15.z, -r15.z, l(0.00000010)
            div r15.z, r15.w, r15.z
            min r14.w, r14.w, |r15.z|
            mov r29.x, r33.w
            mov r29.yz, r34.zzwz
            add r19.yzw, r16.xxyz, r29.xxyz
            mad r19.yzw, r13.xxyz, r14.wwww, r19.yyzw
            dp3 r15.z, r19.yzwy, r19.yzwy
            sqrt r15.z, r15.z
            div r14.w, r14.w, r15.z
            add r14.w, r14.w, r14.w
            sqrt r14.w, r14.w
            mad r14.w, r3.w, l(5.000000), r14.w
            add r14.w, r14.w, l(-0.844800)
            mov r28.y, r31.z
            mov r28.z, r32.x
            dp3 r36.x, r19.yzwy, r28.xyzx
            mov r29.xy, r31.xwxx
            mov r29.z, r32.w
            dp3 r36.y, r19.yzwy, r29.xyzx
            mov r32.x, r31.y
            dp3 r36.z, r19.yzwy, r32.xyzx
            ubfe r15.z, l(9), l(16), r29.w
            utof r36.w, r15.z
            sample_l_indexable(texturecubearray)(float,float,float,float) r19.yzw, r36.xyzw, t8.wxyz, s2, r14.w
            and r30.xzw, r19.yyzw, l(0x7fffffff, 0, 0x7fffffff, 0x7fffffff)
            ieq r30.xzw, r30.xxzw, l(0x7f800000, 0, 0x7f800000, 0x7f800000)
            or r14.w, r30.z, r30.x
            or r14.w, r30.w, r14.w
            movc r19.yzw, r14.wwww, l(0,1.000000,1.000000,0), r19.yyzw
            dp3 r31.x, r16.xyzx, r28.xyzx
            dp3 r31.y, r16.xyzx, r29.xyzx
            dp3 r31.z, r16.xyzx, r32.xyzx
            mad_sat r16.xyz, r31.xyzx, r33.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
            mov r34.z, r35.x
            mad r16.xyz, r16.xyzx, r34.xyzx, r35.yzwy
            dp3 r36.x, r6.xyzx, r28.xyzx
            dp3 r36.y, r6.xyzx, r29.xyzx
            dp3 r36.z, r6.xyzx, r32.xyzx
            lt r28.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r36.xyzx
            movc r18.z, r28.x, l(0), l(0.500000)
            add r29.xyz, r16.xyzx, r18.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r29.xyz, r29.xyzx, t17.xyzw, s4, l(0.000000)
            mul r30.xzw, r36.xxyz, r36.xxyz
            mul r30.xzw, r12.wwww, r30.xxzw
            movc r20.z, r28.y, l(0), l(0.500000)
            add r28.xyw, r16.xyxz, r20.xyxz
            sample_l_indexable(texture3d)(float,float,float,float) r28.xyw, r28.xywx, t18.xywz, s4, l(0.000000)
            mul r28.xyw, r30.zzzz, r28.xyxw
            mad r28.xyw, r29.xyxz, r30.xxxx, r28.xyxw
            movc r23.z, r28.z, l(0), l(0.500000)
            add r16.xyz, r16.xyzx, r23.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r16.xyz, r16.xyzx, t19.xyzw, s4, l(0.000000)
            mad r16.xyz, r16.xyzx, r30.wwww, r28.xywx
            sample_l_indexable(texturecubearray)(float,float,float,float) r28.xyz, r36.xyzw, t8.xyzw, s2, l(6.000000)
            and r29.xyz, r28.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
            ieq r29.xyz, r29.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
            or r14.w, r29.y, r29.x
            or r14.w, r29.z, r14.w
            movc r28.xyz, r14.wwww, l(1.000000,1.000000,0,0), r28.xyzx
            mul r29.xyz, r16.xyzx, r28.xyzx
            dp3 r14.w, r29.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r26.xyz, r16.xyzx, r28.xyzx, r26.xyzx
            mul r15.z, r8.z, r14.w
            mul r16.xyz, r12.wwww, r19.yzwy
            dp3 r12.w, r16.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r12.w, r8.z, r14.w, r12.w
            div r12.w, r15.z, r12.w
            mov r28.x, r26.w
            mov r28.yz, r27.xxyx
            mad r27.xyw, r16.yzyx, r12.wwww, r28.yzyx
            mov r26.w, r27.w
          endif 
        endif 
      endif 
    endloop 
    mov r24.xyzw, r26.xyzw
    mov r25.yzw, r27.xxyz
    iadd r10.w, r10.w, l(32)
  endloop 
  lt r8.w, r25.w, l(1.000000)
  if_nz r8.w
    mov r15.xy, l(0,0,0,0)
    mov r16.w, l(0)
    mov r17.yz, l(0,0,1.000000,0)
    mov r18.xy, l(0,0,0,0)
    mov r19.x, l(1.000000)
    mov r20.xy, l(0,0,0,0)
    mov r23.xy, l(0,0,0,0)
    mov r26.x, r24.w
    mov r26.yzw, r25.yyzw
    mov r12.yzw, r24.xxyz
    mov r8.w, r25.w
    mov r10.z, l(0)
    loop 
      uge r10.w, r10.z, r2.x
      breakc_nz r10.w
      ushr r15.z, r10.z, l(5)
      iadd r16.xyz, r14.xyzx, r15.xyzx
      ld_indexable(texture2darray)(uint,uint,uint,uint) r10.w, r16.xyzw, t7.yzwx
      ieq r11.w, r2.y, r10.z
      ubfe r14.w, r2.z, l(0), r10.w
      movc r10.w, r11.w, r14.w, r10.w
      iadd r11.w, r10.z, cb2[0].x
      mov r27.xyzw, r26.xyzw
      mov r16.xyz, r12.yzwy
      mov r14.w, r8.w
      mov r15.z, r10.w
      loop 
        breakc_z r15.z
        firstbit_lo r15.w, r15.z
        ishl r17.w, l(1), r15.w
        and r18.w, r15.z, r17.w
        if_nz r18.w
          xor r15.z, r15.z, r17.w
          iadd r17.w, r11.w, r15.w
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r28.xyzw, r17.w, l(0), t11.xyzw
          ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r29.xy, r17.w, l(16), t11.xyxx
          add r28.xyz, r28.xyzx, -v7.xyzx
          mov r29.z, r28.w
          lt r28.xyz, |r28.xyzx|, r29.zxyz
          and r17.w, r28.y, r28.x
          and r17.w, r28.z, r17.w
          if_nz r17.w
            iadd r15.w, r10.z, r15.w
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r15.w, l(0), t15.wxyz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r19.zw, r15.w, l(96), t15.xxxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r15.w, l(116), t15.zwxy
            add r30.xyz, -r28.yzwy, v7.xyzx
            and r17.w, r29.w, l(0x0000ffff)
            ubfe r18.w, l(6), l(25), r29.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r17.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r17.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r17.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r17.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r17.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r17.w, l(80), t16.xyzw
            dp3 r20.w, r31.xyzx, r30.xyzx
            add_sat r20.w, r31.w, r20.w
            dp3 r22.w, r32.xyzx, r30.xyzx
            add_sat r22.w, r32.w, r22.w
            mul r20.w, r20.w, r22.w
            dp3 r22.w, r33.xyzx, r30.xyzx
            add_sat r22.w, r33.w, r22.w
            mul r20.w, r20.w, r22.w
            dp3 r22.w, r34.xyzx, r30.xyzx
            add_sat r22.w, r34.w, r22.w
            mul r20.w, r20.w, r22.w
            dp3 r22.w, r35.xyzx, r30.xyzx
            add_sat r22.w, r35.w, r22.w
            mul r20.w, r20.w, r22.w
            dp3 r22.w, r36.xyzx, r30.xyzx
            add_sat r22.w, r36.w, r22.w
            mul r17.x, r20.w, r22.w
            and r20.w, r19.z, l(1)
            movc r31.xy, r20.wwww, r17.xyxx, r17.zxzz
            mov r17.x, r19.z
            mov r32.xy, r31.xyxx
            mov r20.w, l(1)
            loop 
              ige r22.w, r20.w, r18.w
              breakc_nz r22.w
              iadd r22.w, r17.w, r20.w
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r22.w, l(0), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r22.w, l(16), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r22.w, l(32), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r36.xyzw, r22.w, l(48), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r37.xyzw, r22.w, l(64), t16.xyzw
              ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r38.xyzw, r22.w, l(80), t16.xyzw
              dp3 r22.w, r33.xyzx, r30.xyzx
              add_sat r22.w, r33.w, r22.w
              mul r22.w, r22.w, r32.x
              dp3 r23.w, r34.xyzx, r30.xyzx
              add_sat r23.w, r34.w, r23.w
              mul r22.w, r22.w, r23.w
              dp3 r23.w, r35.xyzx, r30.xyzx
              add_sat r23.w, r35.w, r23.w
              mul r22.w, r22.w, r23.w
              dp3 r23.w, r36.xyzx, r30.xyzx
              add_sat r23.w, r36.w, r23.w
              mul r22.w, r22.w, r23.w
              dp3 r23.w, r37.xyzx, r30.xyzx
              add_sat r23.w, r37.w, r23.w
              mul r22.w, r22.w, r23.w
              dp3 r23.w, r38.xyzx, r30.xyzx
              add_sat r23.w, r38.w, r23.w
              mul r32.x, r22.w, r23.w
              ushr r28.w, r17.x, l(2)
              ubfe r30.w, l(1), l(2), r17.x
              and r31.z, r28.w, l(2)
              max r31.w, r32.x, r32.y
              mad r22.w, -r22.w, r23.w, l(1.000000)
              mul r22.w, r22.w, r32.y
              movc r19.y, r31.z, r22.w, r31.w
              movc r32.xy, r30.wwww, r32.xyxx, r19.xyxx
              iadd r20.w, r20.w, l(1)
              mov r17.x, r28.w
            endloop 
            add_sat r17.x, -r14.w, r32.y
            mul r17.w, r19.w, r17.x
            lt r18.w, l(0.000000), r17.w
            if_nz r18.w
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r15.w, l(16), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r15.w, l(32), t15.yxwz
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r15.w, l(48), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r15.w, l(64), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r15.w, l(80), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r15.w, l(132), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r15.w, l(148), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xyzw, r15.w, l(164), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r40.xyzw, r15.w, l(180), t15.zwxy
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r41.xyzw, r15.w, l(196), t15.xyzw
              ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r42.xy, r15.w, l(212), t15.xyxx
              mad r27.w, r17.x, r19.w, r27.w
              mul r15.w, r29.z, r17.w
              mov r29.z, r37.z
              dp3 r17.x, r13.xyzx, r29.xyzx
              dp3 r17.w, r30.xyzx, r29.xyzx
              add r17.w, -r37.w, r17.w
              ge r18.w, r17.w, l(0.000000)
              max r17.w, r7.w, |r17.w|
              movc r17.w, r18.w, r17.w, -r17.w
              max r17.x, -r17.x, l(0.00000010)
              div r17.x, r17.w, r17.x
              min r17.x, |r17.x|, l(131072.000000)
              mov r37.z, r38.z
              dp3 r17.w, r13.xyzx, r37.xyzx
              dp3 r18.w, r30.xyzx, r37.xyzx
              add r18.w, -r38.w, r18.w
              ge r19.y, r18.w, l(0.000000)
              max r18.w, r7.w, |r18.w|
              movc r18.w, r19.y, r18.w, -r18.w
              max r17.w, -r17.w, l(0.00000010)
              div r17.w, r18.w, r17.w
              min r17.x, |r17.w|, r17.x
              mov r38.z, r39.z
              dp3 r17.w, r13.xyzx, r38.xyzx
              dp3 r18.w, r30.xyzx, r38.xyzx
              add r18.w, -r39.w, r18.w
              ge r19.y, r18.w, l(0.000000)
              max r18.w, r7.w, |r18.w|
              movc r18.w, r19.y, r18.w, -r18.w
              max r17.w, -r17.w, l(0.00000010)
              div r17.w, r18.w, r17.w
              min r17.x, |r17.w|, r17.x
              mov r39.z, r40.z
              dp3 r17.w, r13.xyzx, r39.xyzx
              dp3 r18.w, r30.xyzx, r39.xyzx
              add r18.w, -r40.w, r18.w
              ge r19.y, r18.w, l(0.000000)
              max r18.w, r7.w, |r18.w|
              movc r18.w, r19.y, r18.w, -r18.w
              max r17.w, -r17.w, l(0.00000010)
              div r17.w, r18.w, r17.w
              min r17.x, |r17.w|, r17.x
              mov r40.z, r41.x
              dp3 r17.w, r13.xyzx, r40.xyzx
              dp3 r18.w, r30.xyzx, r40.xyzx
              add r18.w, -r41.y, r18.w
              ge r19.y, r18.w, l(0.000000)
              max r18.w, r7.w, |r18.w|
              movc r18.w, r19.y, r18.w, -r18.w
              max r17.w, -r17.w, l(0.00000010)
              div r17.w, r18.w, r17.w
              min r17.x, |r17.w|, r17.x
              mov r42.zw, r41.zzzw
              dp3 r17.w, r13.zxyz, r42.xzwx
              dp3 r18.w, r30.zxyz, r42.xzwx
              add r18.w, -r42.y, r18.w
              ge r19.y, r18.w, l(0.000000)
              max r18.w, r7.w, |r18.w|
              movc r18.w, r19.y, r18.w, -r18.w
              max r17.w, -r17.w, l(0.00000010)
              div r17.w, r18.w, r17.w
              min r17.x, |r17.w|, r17.x
              mov r29.x, r34.w
              mov r29.yz, r35.zzwz
              add r19.yzw, r30.xxyz, r29.xxyz
              mad r19.yzw, r13.xxyz, r17.xxxx, r19.yyzw
              dp3 r17.w, r19.yzwy, r19.yzwy
              sqrt r17.w, r17.w
              div r17.x, r17.x, r17.w
              add r17.x, r17.x, r17.x
              sqrt r17.x, r17.x
              mad r17.x, r3.w, l(5.000000), r17.x
              add r17.x, r17.x, l(-0.844800)
              mov r28.y, r31.z
              mov r28.z, r33.x
              dp3 r37.x, r19.yzwy, r28.xyzx
              mov r29.xy, r31.xwxx
              mov r29.z, r33.w
              dp3 r37.y, r19.yzwy, r29.xyzx
              mov r33.x, r31.y
              dp3 r37.z, r19.yzwy, r33.xyzx
              ubfe r17.w, l(9), l(16), r29.w
              utof r37.w, r17.w
              sample_l_indexable(texturecubearray)(float,float,float,float) r19.yzw, r37.xyzw, t8.wxyz, s2, r17.x
              and r31.xyz, r19.yzwy, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
              ieq r31.xyz, r31.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
              or r17.x, r31.y, r31.x
              or r17.x, r31.z, r17.x
              movc r19.yzw, r17.xxxx, l(0,1.000000,1.000000,0), r19.yyzw
              dp3 r31.x, r30.xyzx, r28.xyzx
              dp3 r31.y, r30.xyzx, r29.xyzx
              dp3 r31.z, r30.xyzx, r33.xyzx
              mad_sat r30.xyz, r31.xyzx, r34.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
              mov r35.z, r36.x
              mad r30.xyz, r30.xyzx, r35.xyzx, r36.yzwy
              dp3 r37.x, r6.xyzx, r28.xyzx
              dp3 r37.y, r6.xyzx, r29.xyzx
              dp3 r37.z, r6.xyzx, r33.xyzx
              lt r28.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r37.xyzx
              movc r18.z, r28.x, l(0), l(0.500000)
              add r29.xyz, r18.xyzx, r30.xyzx
              sample_l_indexable(texture3d)(float,float,float,float) r29.xyz, r29.xyzx, t17.xyzw, s4, l(0.000000)
              mul r31.xyz, r37.xyzx, r37.xyzx
              mul r31.xyz, r15.wwww, r31.xyzx
              movc r20.z, r28.y, l(0), l(0.500000)
              add r28.xyw, r20.xyxz, r30.xyxz
              sample_l_indexable(texture3d)(float,float,float,float) r28.xyw, r28.xywx, t18.xywz, s4, l(0.000000)
              mul r28.xyw, r31.yyyy, r28.xyxw
              mad r28.xyw, r29.xyxz, r31.xxxx, r28.xyxw
              movc r23.z, r28.z, l(0), l(0.500000)
              add r29.xyz, r23.xyzx, r30.xyzx
              sample_l_indexable(texture3d)(float,float,float,float) r29.xyz, r29.xyzx, t19.xyzw, s4, l(0.000000)
              mad r28.xyz, r29.xyzx, r31.zzzz, r28.xywx
              sample_l_indexable(texturecubearray)(float,float,float,float) r29.xyz, r37.xyzw, t8.xyzw, s2, l(6.000000)
              and r30.xyz, r29.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
              ieq r30.xyz, r30.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
              or r17.x, r30.y, r30.x
              or r17.x, r30.z, r17.x
              movc r29.xyz, r17.xxxx, l(1.000000,1.000000,0,0), r29.xyzx
              mul r30.xyz, r28.xyzx, r29.xyzx
              dp3 r17.x, r30.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
              mad r16.xyz, r28.xyzx, r29.xyzx, r16.xyzx
              mul r17.w, r8.z, r17.x
              mul r19.yzw, r15.wwww, r19.yyzw
              dp3 r15.w, r19.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
              mad r15.w, r8.z, r17.x, r15.w
              div r15.w, r17.w, r15.w
              mad r27.xyz, r19.yzwy, r15.wwww, r27.xyzx
            endif 
          endif 
        endif 
      endloop 
      mov r26.xyzw, r27.xyzw
      mov r12.yzw, r16.xxyz
      iadd r10.z, r10.z, l(32)
    endloop 
    mov r25.xyzw, r26.zxyw
    mov r24.xyz, r12.yzwy
    mov r25.xyzw, r25.yzxw
  else 
    mov r25.x, r24.w
  endif 
  max r2.x, r25.w, l(1.000000)
  rcp r2.x, r2.x
  mov_sat r25.w, r25.w
  mul r21.xyz, r2.xxxx, r24.xyzx
  mul r22.xyz, r2.xxxx, r25.xyzx
  lt r2.y, r25.w, l(0.990000)
  if_nz r2.y
    add r2.y, -r25.w, l(1.000000)
    mul r2.z, r2.y, cb2[19].x
    add r12.yzw, v7.xxyz, -cb2[35].xxyz
    mul r15.x, r12.y, cb2[35].w
    mul r15.yz, r12.zzwz, cb2[36].xxyx
    add_sat r12.yzw, r15.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
    mul r15.xy, r12.yzyy, cb2[36].zwzz
    mul r15.z, r12.w, cb2[37].x
    add r12.yzw, r15.xxyz, cb2[37].yyzw
    lt r15.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
    movc r15.xyz, r15.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
    mov r15.w, l(0)
    add r16.xyz, r12.yzwy, r15.wwxw
    sample_l_indexable(texture3d)(float,float,float,float) r16.xyz, r16.xyzx, t17.xyzw, s4, l(0.000000)
    mul r17.xyz, r6.xyzx, r6.xyzx
    mul r17.xyz, r2.zzzz, r17.xyzx
    add r18.xyz, r12.yzwy, r15.wwyw
    sample_l_indexable(texture3d)(float,float,float,float) r18.xyz, r18.xyzx, t18.xyzw, s4, l(0.000000)
    mul r18.xyz, r17.yyyy, r18.xyzx
    mad r16.xyz, r16.xyzx, r17.xxxx, r18.xyzx
    add r12.yzw, r12.yyzw, r15.wwwz
    sample_l_indexable(texture3d)(float,float,float,float) r12.yzw, r12.yzwy, t19.wxyz, s4, l(0.000000)
    mad r12.yzw, r12.yyzw, r17.zzzz, r16.xxyz
    mov r6.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r15.xyz, r6.xyzw, t8.xyzw, s2, l(6.000000)
    mul r12.yzw, r12.yyzw, r15.xxyz
    dp3 r2.z, r12.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
    mad r21.xyz, r24.xyzx, r2.xxxx, r12.yzwy
    mov r13.w, l(0)
    sample_l_indexable(texturecubearray)(float,float,float,float) r12.yzw, r13.xyzw, t8.wxyz, s2, r4.w
    mad r2.x, cb2[19].x, r2.y, -r2.z
    mad r2.x, r8.y, r2.x, r2.z
    mad r22.xyz, r12.yzwy, r2.xxxx, r22.xyzx
  endif 
else 
  mov r22.x, r21.w
endif 
add r2.x, r5.x, r8.x
log r2.x, |r2.x|
mul r2.x, r2.x, r3.y
exp r2.x, r2.x
add r2.x, r5.x, r2.x
add_sat r2.x, r2.x, l(-1.000000)
mul r15.xyz, r5.xxxx, r21.xyzx
mad r2.yz, r8.xxyx, l(0.000000, 0.984375, 0.984375, 0.000000), l(0.000000, 0.00781250, 0.00781250, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r2.yz, r2.yzyy, t5.zxyw, s2, l(0.000000)
mul r8.yzw, r2.xxxx, r22.xxyz
mul r16.xyz, r2.yyyy, r8.zwyz
mul r2.xyz, r2.zzzz, r8.yzwy
sqrt r3.w, r3.y
mad r3.w, r3.w, l(0.500000), l(0.500000)
mul r3.w, r3.w, r3.w
mul r4.w, r3.w, l(0.500000)
mad r3.w, -r3.w, l(0.500000), l(1.000000)
mad r5.x, r8.x, r3.w, r4.w
mul r3.w, r3.w, r5.x
mul r4.w, r4.w, r5.x
if_z cb0[26].y
  dp3 r5.x, r6.xyzx, cb2[17].xyzx
  ge r5.x, l(0.000000), |r5.x|
  if_nz r5.x
    mov r6.w, l(0)
  endif 
  if_z r5.x
    mul r8.yzw, v7.yyyy, cb2[29].xxyz
    mad r8.yzw, v7.xxxx, cb2[28].xxyz, r8.yyzw
    mad r8.yzw, v7.zzzz, cb2[30].xxyz, r8.yyzw
    add r8.yzw, r8.yyzw, cb2[31].xxyz
    add r5.x, r8.w, -cb2[17].w
    mad r5.x, -r5.x, l(0.00006104), l(1.000000)
    mov_sat r7.w, r5.x
    eq r7.w, r5.x, r7.w
    if_nz r7.w
      mov r7.w, l(0)
      mov r10.z, l(0)
      loop 
        ge r10.w, r7.w, l(3.000000)
        breakc_nz r10.w
        ftou r10.w, r7.w
        add r12.yz, r8.yyzy, -cb2[r10.w + 20].xxyx
        max r11.w, |r12.z|, |r12.y|
        mul r10.z, r11.w, cb2[r10.w + 20].z
        lt r10.w, r10.z, l(1.000000)
        if_nz r10.w
          break 
        endif 
        add r7.w, r7.w, l(1.000000)
        mov r10.z, l(0)
      endloop 
    else 
      mov r7.w, l(3.000000)
      mov r10.z, l(0)
    endif 
    ge r10.w, r7.w, l(3.000000)
    if_nz r10.w
      mul r12.yzw, l(0.000000, 128.000000, 0.500000, 0.500000), cb2[27].zzxy
      rcp r17.xz, r12.yyyy
      mov r17.y, -r17.z
      mad r12.yzw, r8.yyzy, r17.xxyz, r12.zzwz
      add r17.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
      max r12.yzw, r12.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
      min r12.yzw, r17.xxyz, r12.yyzw
      mul r17.xy, r12.wzww, cb2[32].xxxx
      round_ni r17.xy, r17.xyxx
      mul r11.w, r17.y, cb2[27].x
      mad r11.w, r11.w, cb2[32].x, r17.x
      ftou r11.w, r11.w
      iadd r11.w, r11.w, cb2[32].y
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r13.w, r11.w, l(0), t23.xxxx
      and r14.w, r13.w, l(0x40000000)
      ishl r17.x, r13.w, l(2)
      if_z r14.w
        and r14.w, r13.w, l(0x01ffffff)
        iadd r18.x, r11.w, r14.w
        ushr r11.w, r13.w, l(25)
        utof r11.w, r11.w
        mul r12.yzw, r11.wwww, r12.yyzw
        frc r12.yzw, r12.yyzw
        mul r12.yzw, r12.yyzw, l(0.000000, 128.000000, 128.000000, 128.000000)
        ftou r12.yzw, r12.yyzw
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.x, l(0), t23.xxxx
        ushr r17.yz, r12.wwzw, l(0, 6, 6, 0)
        and r11.w, r18.z, l(0xc0000000)
        iadd r13.w, r18.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r13.w, r13.w, l(0), t23.xxxx
        movc r13.w, r17.z, r18.z, r13.w
        ushr r14.w, r13.w, l(13)
        movc r13.w, r17.y, r14.w, r13.w
        and r13.w, r13.w, l(8191)
        iadd r19.x, r13.w, r18.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.z, r19.x, l(0), t23.xxxx
        mov r18.y, l(0)
        mov r19.y, l(1)
        movc r17.yzw, r11.wwww, r18.xxyz, r19.xxyz
        movc r19.yz, r11.wwww, l(0,6,1,0), l(0,5,2,0)
        ushr r20.xy, r12.wzww, r19.yyyy
        and r20.xy, r20.xyxx, l(1, 1, 0, 0)
        and r13.w, r17.w, l(0xc0000000)
        iadd r14.w, r17.y, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r14.w, r14.w, l(0), t23.xxxx
        movc r14.w, r20.y, r17.w, r14.w
        ushr r18.w, r14.w, l(13)
        movc r14.w, r20.x, r18.w, r14.w
        and r14.w, r14.w, l(8191)
        iadd r19.x, r14.w, r17.y
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.w, r19.x, l(0), t23.xxxx
        movc r17.yzw, r13.wwww, r17.yyzw, r19.xxzw
        movc r17.yzw, r11.wwww, r18.xxyz, r17.yyzw
        and r11.w, r17.w, l(0xc0000000)
        if_z r11.w
          iadd r11.w, -r17.z, l(6)
          ushr r18.xy, r12.wzww, r11.wwww
          or r11.w, r17.w, l(0x40000000)
          bfi r13.w, l(1), l(1), r18.y, l(0)
          bfi r13.w, l(1), l(0), r18.x, r13.w
          imul null, r13.w, r13.w, l(10)
          ushr r11.w, r11.w, r13.w
          and r11.w, r11.w, l(1023)
          iadd r18.x, r11.w, r17.y
          ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.w, r18.x, l(0), t23.xxxx
          iadd r18.yz, r17.zzzz, l(0, 1, 2, 0)
          iadd r11.w, -r18.y, l(6)
          ushr r19.xy, r12.wzww, r11.wwww
          and r11.w, r18.w, l(0xc0000000)
          or r13.w, r18.w, l(0x40000000)
          bfi r14.w, l(1), l(1), r19.y, l(0)
          bfi r14.w, l(1), l(0), r19.x, r14.w
          imul null, r14.w, r14.w, l(10)
          ushr r13.w, r13.w, r14.w
          and r13.w, r13.w, l(1023)
          iadd r19.x, r13.w, r18.x
          ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.z, r19.x, l(0), t23.xxxx
          mov r19.y, r18.z
          movc r19.xyz, r11.wwww, r18.xywx, r19.xyzx
          iadd r13.w, -r19.y, l(6)
          ushr r18.yz, r12.wwzw, r13.wwww
          and r13.w, r19.z, l(0xc0000000)
          or r14.w, r19.z, l(0x40000000)
          bfi r17.z, l(1), l(1), r18.z, l(0)
          bfi r17.z, l(1), l(0), r18.y, r17.z
          imul null, r17.z, r17.z, l(10)
          ushr r14.w, r14.w, r17.z
          and r14.w, r14.w, l(1023)
          iadd r20.x, r14.w, r19.x
          ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.y, r20.x, l(0), t23.xxxx
          movc r18.yz, r13.wwww, r19.xxzx, r20.xxyx
          movc r17.yw, r11.wwww, r18.xxxw, r18.yyyz
        endif 
        and r11.w, r17.w, l(0xc0000000)
        if_z r11.w
          ubfe r13.w, l(14), l(15), r17.w
          utof r13.w, r13.w
          mul r13.w, r13.w, cb2[27].w
          mul r13.w, r13.w, l(0.00006104)
          and r18.xy, r17.wwww, l(0x00007fff, 0x20000000, 0, 0)
          utof r14.w, r18.x
          mul r14.w, r14.w, cb2[27].w
          mul r14.w, r14.w, l(0.00003052)
          and r17.z, r12.z, l(3)
          iadd r17.z, r17.z, r17.y
          iadd r17.z, r17.z, l(1)
          ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.z, r17.z, l(0), t23.xxxx
          bfi r18.xzw, l(2, 0, 2, 1), l(3, 0, 1, 4), r12.yyzw, l(0, 0, 0, 0)
          ushr r12.y, r17.z, r18.x
          and r12.y, r12.y, l(255)
          utof r12.y, r12.y
          mul r12.y, r14.w, r12.y
          mad r12.y, r12.y, l(0.00392157), r13.w
          iadd r12.z, r18.z, l(1)
          ubfe r12.w, l(1), l(1), r12.w
          iadd r12.z, r12.w, r12.z
          iadd r12.z, r12.z, r17.y
          ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r12.z, r12.z, l(0), t23.xxxx
          ushr r12.z, r12.z, r18.w
          and r12.z, r12.z, l(0x0000ffff)
          utof r12.z, r12.z
          mul r12.z, r14.w, r12.z
          mad r12.z, r12.z, l(0.00001526), r13.w
          movc r17.x, r18.y, r12.y, r12.z
        else 
          and r12.y, r17.w, l(0x80000000)
          iadd r12.z, r17.y, l(1)
          ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r12.z, r12.z, l(0), t23.xxxx
          movc r12.y, r12.y, r12.z, l(0)
          ishl r12.z, r17.w, l(2)
          ushr r12.w, r12.y, l(16)
          and r12.y, r12.y, l(0x0000ffff)
          f16tof32 r12.yw, r12.yyyw
          mad r12.z, r8.y, r12.w, r12.z
          mad r12.y, r8.z, r12.y, r12.z
          movc r17.x, r11.w, r12.y, r17.x
        endif 
      endif 
      mad r8.w, -cb2[27].z, l(2.000000), r8.w
      lt r8.w, r17.x, r8.w
      movc r6.w, r8.w, l(0), l(1.000000)
    endif 
    if_z r10.w
      if_z cb2[58].y
        ftou r8.w, r7.w
        add r12.yz, r8.yyzy, -cb2[r8.w + 20].xxyx
        mul r12.yz, r12.yyzy, cb2[r8.w + 20].zzzz
        mad r17.xy, r12.yzyy, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
        itof r8.w, cb2[26].y
        add r17.z, r7.w, r8.w
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r8.w, r17.xyzx, t13.xxxx, s13, r5.x
        sample_l_indexable(texture2darray)(float,float,float,float) r10.w, r17.xyzx, t31.yzwx, s0, l(0.000000)
        add r8.w, r8.w, r10.w
        add_sat r8.w, r8.w, l(-1.000000)
        mul r10.w, r8.w, r8.w
        mul r6.w, r8.w, r10.w
      endif 
      if_nz cb2[58].y
        mov r17.x, -r10.x
        ftou r8.w, r7.w
        add r7.w, r7.w, l(1.000000)
        min r7.w, r7.w, l(2.000000)
        ftou r7.w, r7.w
        add r10.z, -r10.z, l(1.000000)
        mul r10.z, r10.z, l(28.000000)
        ftou r10.z, r10.z
        add r12.yz, r8.yyzy, -cb2[r8.w + 20].xxyx
        mul r12.yz, r12.yyzy, cb2[r8.w + 20].zzzz
        mad r12.yz, r12.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
        add r8.yz, r8.yyzy, -cb2[r7.w + 20].xxyx
        mul r8.yz, r8.yyzy, cb2[r7.w + 20].zzzz
        mad r8.yz, r8.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
        mov r17.y, r11.x
        mov r17.z, r10.x
        mov r10.w, l(0)
        mov r11.w, l(0)
        loop 
          uge r12.w, r11.w, l(8)
          breakc_nz r12.w
          ult r12.w, r10.z, r11.w
          movc r18.xy, r12.wwww, r8.yzyy, r12.yzyy
          movc r13.w, r12.w, cb2[r7.w + 20].w, cb2[r8.w + 20].w
          movc r12.w, r12.w, r7.w, r8.w
          dp2 r19.x, icb[r11.w + 0].yxyy, r17.xyxx
          dp2 r19.y, icb[r11.w + 0].yxyy, r17.yzyy
          mad r18.xy, r19.xyxx, r13.wwww, r18.xyxx
          iadd r12.w, r12.w, cb2[26].y
          utof r18.z, r12.w
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.w, r18.xyzx, t13.xxxx, s13, r5.x
          sample_l_indexable(texture2darray)(float,float,float,float) r13.w, r18.xyzx, t31.yzwx, s0, l(0.000000)
          add r12.w, r12.w, r13.w
          add_sat r12.w, r12.w, l(-1.000000)
          mad r10.w, r12.w, l(0.125000), r10.w
          iadd r11.w, r11.w, l(1)
        endloop 
        mul r5.x, r10.w, r10.w
        mul r6.w, r10.w, r5.x
      endif 
    endif 
  endif 
else 
  mov r6.w, l(1.000000)
endif 
dp3 r5.x, r6.xyzx, cb2[17].xyzx
lt r7.w, l(0.000000), |r5.x|
if_nz r7.w
  lt r7.w, l(0.000000), r6.w
  if_nz r7.w
    mul r7.w, r2.w, cb2[18].w
    mul r7.w, r7.w, l(0.250000)
    if_nz cb2[23].x
      add r17.xyz, v7.xyzx, cb1[24].xyzx
      mov r17.w, l(1.000000)
      dp4 r8.y, cb2[24].xyzw, r17.xyzw
      dp4 r8.z, cb2[25].xyzw, r17.xyzw
      frc r17.xy, r8.yzyy
      iadd r8.y, l(-1), cb2[23].x
      utof r17.z, r8.y
      sample_l_indexable(texture2darray)(float,float,float,float) r8.yzw, r17.xyzx, t20.wxyz, s2, l(0.000000)
      add r8.yzw, r8.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
      mad r8.yzw, cb2[23].yyyy, r8.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
      mul r8.yzw, r8.yyzw, cb2[18].xxyz
    else 
      mov r8.yzw, cb2[18].xxyz
    endif 
    if_z cb0[26].y
      ushr r10.z, cb2[53].x, l(16)
      ult r10.w, l(0), r10.z
      and r10.w, r1.z, r10.w
      if_nz r10.w
        iadd r10.z, r10.z, cb2[0].x
        iadd r10.z, r10.z, l(-1)
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r10.w, r10.z, l(52), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r10.z, l(68), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r10.z, l(84), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.xyzw, r10.z, l(132), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r20.xyzw, r10.z, l(148), t12.xyzw
        mad r11.w, |r5.x|, l(-0.200000), l(0.400000)
        lt r12.y, r5.x, l(0.000000)
        movc r11.w, r12.y, -r11.w, r11.w
        mad r21.xyz, r6.xyzx, r11.wwww, v7.xyzx
        mov r21.w, l(1.000000)
        dp4 r17.x, r17.xyzw, r21.xyzw
        dp4 r17.y, r18.xyzw, r21.xyzw
        mad r12.yz, r17.xxyx, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
        add r12.yz, r20.zzwz, r12.yyzy
        mul r12.yz, r20.xxyx, r12.yyzy
        div r17.xy, r10.wwww, r19.xzxx
        add r17.zw, -r17.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
        ge r17.zw, r12.yyyz, r17.zzzw
        ge r17.xy, r17.xyxx, r12.yzyy
        or r17.xy, r17.xyxx, r17.zwzz
        or r11.w, r17.y, r17.x
        if_z r11.w
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r11.w, r10.z, l(28), t12.xxxx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r10.z, l(100), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xy, r10.z, l(164), t12.xyxx
          dp4 r10.z, r17.xyzw, r21.xyzw
          mov_sat r12.yz, r12.yyzy
          mad r17.xy, r12.yzyy, r19.xzxx, r19.ywyy
          add r10.z, r18.x, r10.z
          div r10.z, r10.z, r18.y
          max r10.z, r10.z, l(0.00006104)
          and r11.w, r11.w, l(0x0000ffff)
          if_nz cb2[58].y
            mov r18.x, -r10.x
            utof r19.z, r11.w
            mov r18.y, r11.x
            mov r18.z, r10.x
            mov r12.yz, l(0,0,0,0)
            loop 
              ige r12.w, r12.z, l(8)
              breakc_nz r12.w
              dp2 r20.x, icb[r12.z + 0].yxyy, r18.xyxx
              dp2 r20.y, icb[r12.z + 0].yxyy, r18.yzyy
              mad r19.xy, r20.xyxx, r10.wwww, r17.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.w, r19.xyzx, t9.xxxx, s13, r10.z
              mad r12.y, r12.w, l(0.125000), r12.y
              iadd r12.z, r12.z, l(1)
            endloop 
          else 
            utof r17.z, r11.w
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.y, r17.xyzx, t9.xxxx, s13, r10.z
          endif 
          mul r10.z, r12.y, r12.y
          mul r10.z, r12.y, r10.z
        else 
          mov r10.z, l(1.000000)
        endif 
        mul r6.w, r6.w, r10.z
      else 
        and r10.z, cb2[53].x, l(0x0000ffff)
        ult r10.w, l(0), r10.z
        not r11.w, r1.z
        and r10.w, r10.w, r11.w
        if_nz r10.w
          iadd r10.z, r10.z, cb2[0].x
          iadd r10.z, r10.z, l(-1)
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r10.w, r10.z, l(52), t12.xxxx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r10.z, l(68), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r10.z, l(84), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.xyzw, r10.z, l(132), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r20.xyzw, r10.z, l(148), t12.xyzw
          mad r11.w, |r5.x|, l(-0.200000), l(0.400000)
          lt r12.y, r5.x, l(0.000000)
          movc r11.w, r12.y, -r11.w, r11.w
          mad r21.xyz, r6.xyzx, r11.wwww, v7.xyzx
          mov r21.w, l(1.000000)
          dp4 r17.x, r17.xyzw, r21.xyzw
          dp4 r17.y, r18.xyzw, r21.xyzw
          mad r12.yz, r17.xxyx, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
          add r12.yz, r20.zzwz, r12.yyzy
          mul r12.yz, r20.xxyx, r12.yyzy
          div r17.xy, r10.wwww, r19.xzxx
          add r17.zw, -r17.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
          ge r17.zw, r12.yyyz, r17.zzzw
          ge r17.xy, r17.xyxx, r12.yzyy
          or r17.xy, r17.xyxx, r17.zwzz
          or r11.w, r17.y, r17.x
          if_z r11.w
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r11.w, r10.z, l(28), t12.xxxx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r10.z, l(100), t12.xyzw
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xy, r10.z, l(164), t12.xyxx
            dp4 r10.z, r17.xyzw, r21.xyzw
            mov_sat r12.yz, r12.yyzy
            mad r17.xy, r12.yzyy, r19.xzxx, r19.ywyy
            add r10.z, r18.x, r10.z
            div r10.z, r10.z, r18.y
            max r10.z, r10.z, l(0.00006104)
            and r11.w, r11.w, l(0x0000ffff)
            if_nz cb2[58].y
              mov r18.x, -r10.x
              utof r19.z, r11.w
              mov r18.y, r11.x
              mov r18.z, r10.x
              mov r12.yz, l(0,0,0,0)
              loop 
                ige r12.w, r12.z, l(8)
                breakc_nz r12.w
                dp2 r20.x, icb[r12.z + 0].yxyy, r18.xyxx
                dp2 r20.y, icb[r12.z + 0].yxyy, r18.yzyy
                mad r19.xy, r20.xyxx, r10.wwww, r17.xyxx
                sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.w, r19.xyzx, t9.xxxx, s13, r10.z
                mad r12.y, r12.w, l(0.125000), r12.y
                iadd r12.z, r12.z, l(1)
              endloop 
            else 
              utof r17.z, r11.w
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.y, r17.xyzx, t9.xxxx, s13, r10.z
            endif 
            mul r10.z, r12.y, r12.y
            mul r10.z, r12.y, r10.z
          else 
            mov r10.z, l(1.000000)
          endif 
          mul r6.w, r6.w, r10.z
        endif 
      endif 
    endif 
    mad r10.z, -r8.x, l(0.500000), l(1.000000)
    mad r10.z, -|r5.x|, r10.z, l(1.000000)
    mul r10.z, r10.z, r10.z
    mad r10.z, -r10.z, l(0.620000), l(0.620000)
    add r10.z, -|r5.x|, r10.z
    mad r10.z, r3.y, r10.z, |r5.x|
    mul r10.z, r6.w, r10.z
    lt r10.w, l(0.000000), r5.x
    mad r17.xyz, r10.zzzz, r8.yzwy, r15.xyzx
    mov_sat r5.x, r5.x
    mad r12.yzw, -v7.xxyz, r0.xxxx, cb2[17].xxyz
    dp3 r0.x, r12.yzwy, r12.yzwy
    rsq r0.x, r0.x
    mul r12.yzw, r0.xxxx, r12.yyzw
    dp3 r0.x, r12.yzwy, r0.yzwy
    dp3 r10.z, r6.xyzx, r12.yzwy
    mad r11.w, |r10.z|, r2.w, -|r10.z|
    mad r10.z, |r10.z|, r11.w, l(1.000000)
    mad r11.w, r5.x, r3.w, r4.w
    mul r10.z, r10.z, r10.z
    mul r10.z, r11.w, r10.z
    rcp r10.z, r10.z
    mul r5.x, r7.w, r5.x
    mul r5.x, r5.x, r10.z
    mul r5.x, r6.w, r5.x
    mad r12.yzw, r5.xxxx, r8.yyzw, r2.xxyz
    add_sat r0.x, -r0.x, l(1.000000)
    mul r6.w, r0.x, r0.x
    mul r6.w, r6.w, r6.w
    mul r0.x, r0.x, r6.w
    mul r0.x, r0.x, r5.x
    mad r18.xyz, r0.xxxx, r8.zwyz, r16.xyzx
    mov r17.w, r18.z
    mov r15.w, r16.z
    movc r15.xyzw, r10.wwww, r17.xyzw, r15.xyzw
    mov r18.zw, r12.yyyz
    mov r16.zw, r2.xxxy
    movc r17.xyzw, r10.wwww, r18.xyzw, r16.xyzw
    movc r2.z, r10.w, r12.w, r2.z
    mov r16.z, r15.w
    mov r16.xy, r17.xyxx
    mov r2.xy, r17.zwzz
  endif 
endif 
not r0.x, r1.z
mov r17.x, -r10.x
mad r5.x, -r8.x, l(0.500000), l(1.000000)
mov r8.xy, l(0,0,0,0)
mov r18.w, l(0)
mov r19.xyz, v7.xyzx
mov r19.w, l(1.000000)
mov r20.w, l(1.000000)
mov r17.z, r10.x
mov r21.w, l(1.000000)
mov r22.z, l(1.000000)
mov r23.w, l(1.000000)
mov r17.yw, r11.xxxx
mov r10.y, r17.w
mov r24.w, l(1.000000)
mov r11.y, r17.x
mov r11.z, r10.x
mov r25.w, l(1.000000)
mov r26.x, r11.x
mov r26.y, r17.x
mov r26.z, r10.x
mov r27.x, r11.x
mov r27.y, r17.x
mov r27.z, r10.x
mov r28.x, r11.x
mov r28.y, r17.x
mov r28.z, r10.x
mov r12.yzw, r15.xxyz
mov r29.xyz, r16.zxyz
mov r30.xyz, r2.xyzx
mov r6.w, cb2[58].y
mov r7.w, l(0)
loop 
  uge r8.w, r7.w, cb2[0].x
  breakc_nz r8.w
  ushr r8.z, r7.w, l(5)
  iadd r18.xyz, r8.xyzx, r14.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r8.z, r18.xyzw, t6.yzxw
  mov r18.xyz, r12.yzwy
  mov r31.xyz, r29.xyzx
  mov r32.xyz, r30.xyzx
  mov r8.w, r6.w
  mov r10.z, r8.z
  loop 
    breakc_z r10.z
    firstbit_lo r10.w, r10.z
    ishl r11.w, l(1), r10.w
    and r13.w, r10.z, r11.w
    if_nz r13.w
      xor r10.z, r10.z, r11.w
      iadd r10.w, r7.w, r10.w
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r33.xyzw, r10.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r34.xy, r10.w, l(16), t11.xyxx
      add r33.xyz, r33.xyzx, -v7.xyzx
      mov r34.z, r33.w
      lt r33.xyz, |r33.xyzx|, r34.zxyz
      and r11.w, r33.y, r33.x
      and r11.w, r33.z, r11.w
      if_nz r11.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r10.w, l(0), t12.wxyz
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r10.w, l(16), t12.zxyw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r10.w, l(32), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r10.w, l(48), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r10.w, l(64), t12.yzwx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r10.w, l(80), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r10.w, l(96), t12.yzwx
        ubfe r11.w, l(3), l(24), r34.w
        switch r11.w
          case l(4)
          lt r11.w, l(0.000000), r39.x
          mov r40.xy, r38.zwzz
          mov r40.z, r39.w
          mad r41.xyz, -r40.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r33.yzwy
          add r42.xyz, r41.xyzx, -v7.xyzx
          dp3 r13.w, r40.xyzx, r42.xyzx
          div_sat r14.w, -r13.w, r39.x
          mad r43.xyz, r14.wwww, r40.xyzx, r41.xyzx
          movc r43.xyz, r11.wwww, r43.xyzx, r33.yzwy
          add r43.xyz, r43.xyzx, -v7.xyzx
          dp3 r15.w, r43.xyzx, r43.xyzx
          rsq r16.w, r15.w
          mul r43.xyz, r16.wwww, r43.xyzx
          dp3 r16.w, r6.xyzx, r43.xyzx
          lt r22.w, l(0.000000), |r16.w|
          if_nz r22.w
            sqrt r22.w, r15.w
            mul r26.w, r36.x, r36.x
            div r15.w, r26.w, r15.w
            min r15.w, r15.w, l(1.000000)
            mad_sat r43.xy, r22.wwww, r35.xzxx, r35.ywyy
            mul r43.zw, r43.xxxy, r43.xxxy
            mad r43.xy, r43.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
            mul r43.xy, r43.xyxx, r43.zwzz
            mul r15.w, r15.w, r43.x
            mul r15.w, r43.y, r15.w
            lt r22.w, l(0.000000), r15.w
            if_nz r22.w
              ubfe r22.w, l(3), l(27), r34.w
              ine r22.w, r22.w, l(1)
              if_nz r22.w
                mad r22.w, |r16.w|, l(-0.200000), l(0.400000)
                lt r26.w, r16.w, l(0.000000)
                movc r22.w, r26.w, -r22.w, r22.w
                mad r43.xyz, r6.xyzx, r22.wwww, v7.xyzx
                add r43.xyz, -r37.xyzx, r43.xyzx
                max r22.w, |r43.z|, |r43.y|
                max r22.w, r22.w, |r43.x|
                div r22.w, r38.x, r22.w
                add r22.w, r38.y, r22.w
                dp3 r26.w, r43.xyzx, r43.xyzx
                rsq r26.w, r26.w
                max r22.w, r22.w, l(0.00006104)
                and r27.w, r34.w, l(0x0000ffff)
                utof r44.w, r27.w
                mov r27.w, l(0)
                mov r28.w, l(0)
                loop 
                  ige r29.w, r28.w, l(8)
                  breakc_nz r29.w
                  dp2 r45.y, icb[r28.w + 0].yxyy, r17.xyxx
                  dp2 r45.z, icb[r28.w + 0].yxyy, r17.yzyy
                  mul r45.yz, r36.yyyy, r45.yyzy
                  mul r45.x, r12.x, r45.y
                  mul r45.w, r3.x, r45.y
                  mad r44.xyz, r43.xyzx, r26.wwww, r45.xzwx
                  sample_c_lz_indexable(texturecubearray)(float,float,float,float) r29.w, r44.xyzw, t10.xxxx, s13, r22.w
                  mad r27.w, r29.w, l(0.125000), r27.w
                  iadd r28.w, r28.w, l(1)
                endloop 
              else 
                mov r27.w, l(1.000000)
              endif 
              mul r15.w, r15.w, r27.w
              lt r22.w, l(0.000000), r15.w
              if_nz r22.w
                mul r22.w, r2.w, r34.x
                mul r22.w, r22.w, l(0.250000)
                dp3 r26.w, r40.xyzx, r13.xyzx
                dp3 r28.w, r13.xyzx, r42.xyzx
                mad r29.w, -r26.w, r26.w, r39.x
                mad r13.w, r26.w, r28.w, -r13.w
                div_sat r13.w, r13.w, r29.w
                div r26.w, r29.w, r39.x
                mul r26.w, r26.w, l(10.000000)
                min r26.w, r26.w, l(1.000000)
                add r13.w, -r14.w, r13.w
                mad r13.w, r26.w, r13.w, r14.w
                mad r40.xyz, r13.wwww, r40.xyzx, r41.xyzx
                movc r40.xyz, r11.wwww, r40.xyzx, r33.yzwy
                add r40.xyz, r40.xyzx, -v7.xyzx
                dp3 r11.w, r40.xyzx, r40.xyzx
                rsq r11.w, r11.w
                mul r41.xyz, r11.wwww, r40.xyzx
                ubfe r13.w, l(4), l(16), r34.w
                ult r14.w, l(0), r13.w
                and r14.w, r1.z, r14.w
                if_nz r14.w
                  iadd r13.w, r13.w, cb2[0].x
                  iadd r13.w, r13.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.w, r13.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r13.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r13.w, l(116), t12.xyzw
                  mad r26.w, |r16.w|, l(-0.200000), l(0.400000)
                  lt r28.w, r16.w, l(0.000000)
                  movc r26.w, r28.w, -r26.w, r26.w
                  mad r20.xyz, r6.xyzx, r26.wwww, v7.xyzx
                  dp4 r26.w, r42.xyzw, r20.xyzw
                  dp4 r28.w, r43.xyzw, r20.xyzw
                  lt r29.w, r28.w, r26.w
                  if_z r29.w
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r13.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r13.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r13.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xyzw, r13.w, l(148), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r46.xy, r13.w, l(164), t12.xyxx
                    dp4 r42.x, r42.xyzw, r20.xyzw
                    dp4 r42.y, r43.xyzw, r20.xyzw
                    div r20.xy, r42.xyxx, r28.wwww
                    mad r20.xy, r20.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r20.xy, r45.zwzz, r20.xyxx
                    mul r20.xy, r45.xyxx, r20.xyxx
                    div r42.xy, r14.wwww, r44.xzxx
                    add r42.zw, -r42.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                    ge r42.zw, r20.xxxy, r42.zzzw
                    ge r42.xy, r42.xyxx, r20.xyxx
                    or r42.xy, r42.xyxx, r42.zwzz
                    or r20.z, r42.y, r42.x
                    mov_sat r20.xy, r20.xyxx
                    mad r42.xy, r20.xyxx, r44.xzxx, r44.ywyy
                    mul r20.x, r28.w, r46.y
                    mad r20.y, r46.x, r28.w, r26.w
                    div r20.x, r20.y, r20.x
                  else 
                    mov r20.z, l(-1)
                  endif 
                  or r20.y, r29.w, r20.z
                  if_z r20.y
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.w, r13.w, l(28), t12.xxxx
                    max r20.x, r20.x, l(0.00006104)
                    and r13.w, r13.w, l(0x0000ffff)
                    if_nz r8.w
                      utof r43.z, r13.w
                      mov r20.yz, l(0,0,0,0)
                      loop 
                        ige r26.w, r20.z, l(8)
                        breakc_nz r26.w
                        dp2 r44.x, icb[r20.z + 0].yxyy, r17.xwxx
                        dp2 r44.y, icb[r20.z + 0].xyxx, r10.xyxx
                        mad r43.xy, r44.xyxx, r14.wwww, r42.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r26.w, r43.xyzx, t9.xxxx, s13, r20.x
                        mad r20.y, r26.w, l(0.125000), r20.y
                        iadd r20.z, r20.z, l(1)
                      endloop 
                    else 
                      utof r42.z, r13.w
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r20.y, r42.xyzx, t9.xxxx, s13, r20.x
                    endif 
                    mul r13.w, r20.y, r20.y
                    mul r13.w, r20.y, r13.w
                  else 
                    mov r13.w, l(1.000000)
                  endif 
                  mul r15.w, r13.w, r15.w
                else 
                  ubfe r13.w, l(4), l(20), r34.w
                  ult r14.w, l(0), r13.w
                  and r14.w, r0.x, r14.w
                  if_nz r14.w
                    iadd r13.w, r13.w, cb2[0].x
                    iadd r13.w, r13.w, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r14.w, r13.w, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r13.w, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r13.w, l(116), t12.xyzw
                    mad r20.x, |r16.w|, l(-0.200000), l(0.400000)
                    lt r20.z, r16.w, l(0.000000)
                    movc r20.x, r20.z, -r20.x, r20.x
                    mad r21.xyz, r6.xyzx, r20.xxxx, v7.xyzx
                    dp4 r20.x, r42.xyzw, r21.xyzw
                    dp4 r20.z, r43.xyzw, r21.xyzw
                    lt r26.w, r20.z, r20.x
                    if_z r26.w
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r13.w, l(68), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r13.w, l(84), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r13.w, l(132), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xyzw, r13.w, l(148), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r46.xy, r13.w, l(164), t12.xyxx
                      dp4 r42.x, r42.xyzw, r21.xyzw
                      dp4 r42.y, r43.xyzw, r21.xyzw
                      div r21.xy, r42.xyxx, r20.zzzz
                      mad r21.xy, r21.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                      add r21.xy, r45.zwzz, r21.xyxx
                      mul r21.xy, r45.xyxx, r21.xyxx
                      div r42.xy, r14.wwww, r44.xzxx
                      add r42.zw, -r42.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                      ge r42.zw, r21.xxxy, r42.zzzw
                      ge r42.xy, r42.xyxx, r21.xyxx
                      or r42.xy, r42.xyxx, r42.zwzz
                      or r21.z, r42.y, r42.x
                      mov_sat r21.xy, r21.xyxx
                      mad r42.xy, r21.xyxx, r44.xzxx, r44.ywyy
                      mul r21.x, r20.z, r46.y
                      mad r20.x, r46.x, r20.z, r20.x
                      div r20.x, r20.x, r21.x
                    else 
                      mov r21.z, l(-1)
                    endif 
                    or r20.z, r26.w, r21.z
                    if_z r20.z
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.w, r13.w, l(28), t12.xxxx
                      max r20.x, r20.x, l(0.00006104)
                      and r13.w, r13.w, l(0x0000ffff)
                      if_nz r8.w
                        utof r21.z, r13.w
                        mov r20.z, l(0)
                        mov r26.w, l(0)
                        loop 
                          ige r28.w, r26.w, l(8)
                          breakc_nz r28.w
                          dp2 r43.x, icb[r26.w + 0].xyxx, r11.xyxx
                          dp2 r43.y, icb[r26.w + 0].yxyy, r11.xzxx
                          mad r21.xy, r43.xyxx, r14.wwww, r42.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.x, r21.xyzx, t9.xxxx, s13, r20.x
                          mad r20.z, r21.x, l(0.125000), r20.z
                          iadd r26.w, r26.w, l(1)
                        endloop 
                      else 
                        utof r42.z, r13.w
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r20.z, r42.xyzx, t9.xxxx, s13, r20.x
                      endif 
                      mul r13.w, r20.z, r20.z
                      mul r13.w, r20.z, r13.w
                    else 
                      mov r13.w, l(1.000000)
                    endif 
                    mul r15.w, r13.w, r15.w
                  endif 
                endif 
                mad r13.w, -|r16.w|, r5.x, l(1.000000)
                mul r13.w, r13.w, r13.w
                mad r13.w, -r13.w, l(0.620000), l(0.620000)
                add r13.w, -|r16.w|, r13.w
                mad r13.w, r3.y, r13.w, |r16.w|
                mul r13.w, r15.w, r13.w
                mov r34.x, r33.x
                lt r14.w, l(0.000000), r16.w
                mad r21.xyz, r13.wwww, r34.xyzx, r18.xyzx
                dp3_sat r13.w, r6.xyzx, r41.xyzx
                mad r40.xyz, r40.xyzx, r11.wwww, r0.yzwy
                dp3 r11.w, r40.xyzx, r40.xyzx
                rsq r11.w, r11.w
                mul r40.xyz, r11.wwww, r40.xyzx
                dp3 r11.w, r40.xyzx, r0.yzwy
                dp3 r16.w, r6.xyzx, r40.xyzx
                mad r20.x, |r16.w|, r2.w, -|r16.w|
                mad r16.w, |r16.w|, r20.x, l(1.000000)
                mad r20.x, r13.w, r3.w, r4.w
                mul r16.w, r16.w, r16.w
                mul r16.w, r20.x, r16.w
                rcp r16.w, r16.w
                mul r13.w, r22.w, r13.w
                mul r13.w, r13.w, r16.w
                mul r13.w, r15.w, r13.w
                mad r40.xyz, r13.wwww, r34.xyzx, r32.xyzx
                add_sat r11.w, -r11.w, l(1.000000)
                mul r15.w, r11.w, r11.w
                mul r15.w, r15.w, r15.w
                mul r11.w, r11.w, r15.w
                mul r11.w, r11.w, r13.w
                mad r41.xyz, r11.wwww, r34.xyzx, r31.xyzx
                movc r18.xyz, r14.wwww, r21.xyzx, r18.xyzx
                movc r31.xyz, r14.wwww, r41.xyzx, r31.xyzx
                movc r32.xyz, r14.wwww, r40.xyzx, r32.xyzx
              endif 
            endif 
          endif 
          break 
          case l(2)
          mov r21.xy, r36.zwzz
          mov r21.z, r37.w
          add r21.xyz, r21.xyzx, -v7.xyzx
          dp3 r11.w, r21.xyzx, r21.xyzx
          rsq r11.w, r11.w
          mul r40.xyz, r11.wwww, r21.xyzx
          dp3 r13.w, r6.xyzx, r40.xyzx
          lt r14.w, l(0.000000), |r13.w|
          if_nz r14.w
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r10.w, l(112), t12.yzwx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r10.w, l(128), t12.zxyw
            mov r42.xyz, r40.xyzx
            mov r42.w, r41.y
            dp4 r14.w, r42.xyzw, r19.xyzw
            lt r15.w, r14.w, l(1.000000)
            if_nz r15.w
              mov r43.xyz, l(1.000000,1.000000,1.000000,0)
              mov r15.w, l(0)
            else 
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r10.w, l(172), t12.yzwx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xyzw, r10.w, l(188), t12.wxyz
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r46.xyzw, r10.w, l(204), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.w, r10.w, l(236), t12.xxxx
              add r47.xyz, r33.yzwy, -v7.xyzx
              mul r20.x, r36.x, r36.x
              dp3 r22.w, r47.xyzx, r47.xyzx
              div r20.x, r20.x, r22.w
              min r20.x, r20.x, l(1.000000)
              mad_sat r35.xy, r14.wwww, r35.xzxx, r35.ywyy
              mul r35.zw, r35.xxxy, r35.xxxy
              mad r35.xy, r35.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
              mul r35.xy, r35.xyxx, r35.zwzz
              mul r20.x, r20.x, r35.x
              mul r20.x, r35.y, r20.x
              mov r37.w, r38.x
              dp4 r35.x, r37.xyzw, r19.xyzw
              mov r47.xyz, r38.yzwy
              mov r47.w, r39.w
              dp4 r35.y, r47.xyzw, r19.xyzw
              div r22.xy, r35.xyxx, r14.wwww
              lt r14.w, r44.w, l(0.00048828)
              if_nz r14.w
                mov r45.y, r46.x
                mad_sat r35.xy, |r22.xyxx|, r45.zwzz, r45.xyxx
                mul r35.zw, r35.xxxy, r35.xxxy
                mad r35.xy, r35.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
                mul r35.xy, r35.xyxx, r35.zwzz
                mul r14.w, r35.y, r35.x
              else 
                mov r44.w, r45.y
                mul_sat r35.xyzw, |r22.yyxx|, r44.xyzw
                log r35.xyzw, r35.xyzw
                mul r35.xyzw, r35.xyzw, r45.xxxx
                exp r35.xyzw, r35.xyzw
                add r35.xy, r35.zwzz, r35.xyxx
                log r35.xy, r35.xyxx
                mul r35.xy, r35.xyxx, r46.xxxx
                exp r35.xy, r35.xyxx
                mul r22.w, r35.x, r45.z
                mad r26.w, r45.w, r35.y, l(-1.000000)
                mad r22.w, r45.w, r35.y, -r22.w
                div_sat r22.w, r26.w, r22.w
                mul r26.w, r22.w, r22.w
                mad r22.w, r22.w, l(-2.000000), l(3.000000)
                mul r14.w, r22.w, r26.w
              endif 
              mul r15.w, r14.w, r20.x
              and r14.w, r16.w, l(255)
              if_nz r14.w
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyz, r10.w, l(220), t12.xyzx
                dp3 r16.w, r46.yzwy, r22.xyzx
                dp3 r20.x, r35.xyzx, r22.xyzx
                frc r35.x, r16.w
                frc r35.y, r20.x
                iadd r14.w, r14.w, l(-1)
                utof r35.z, r14.w
                sample_l_indexable(texture2darray)(float,float,float,float) r43.xyz, r35.xyzx, t20.xyzw, s2, l(0.000000)
              else 
                mov r43.xyz, l(1.000000,1.000000,1.000000,0)
              endif 
            endif 
            mov r33.yz, r34.yyzy
            mul r22.xyw, r43.xyxz, r33.xyxz
            lt r14.w, l(0.000000), r15.w
            if_nz r14.w
              ubfe r14.w, l(3), l(27), r34.w
              ine r14.w, r14.w, l(1)
              if_nz r14.w
                mad r14.w, |r13.w|, l(-0.200000), l(0.400000)
                lt r16.w, r13.w, l(0.000000)
                movc r14.w, r16.w, -r14.w, r14.w
                mad r23.xyz, r6.xyzx, r14.wwww, v7.xyzx
                mov r40.xyz, r39.xyzx
                dp4 r14.w, r40.xyzw, r23.xyzw
                dp4 r16.w, r42.xyzw, r23.xyzw
                ge r20.x, r16.w, r14.w
                if_nz r20.x
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.y, r10.w, l(144), t12.xxxx
                  mov r37.w, r38.x
                  dp4 r33.x, r37.xyzw, r23.xyzw
                  mov r39.xyz, r38.yzwy
                  dp4 r33.y, r39.xyzw, r23.xyzw
                  div r23.xy, r33.xyxx, r16.wwww
                  mad_sat r23.xy, r23.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  mad r23.xy, r23.xyxx, r41.zwzz, r41.xyxx
                  div r10.w, r14.w, r16.w
                  max r10.w, r10.w, l(0.00006104)
                  and r14.w, r34.w, l(0x0000ffff)
                  if_nz r8.w
                    utof r33.z, r14.w
                    mov r16.w, l(0)
                    mov r20.x, l(0)
                    loop 
                      ige r26.w, r20.x, l(8)
                      breakc_nz r26.w
                      dp2 r35.x, icb[r20.x + 0].xyxx, r26.xyxx
                      dp2 r35.y, icb[r20.x + 0].yxyy, r26.xzxx
                      mad r33.xy, r35.xyxx, r36.yyyy, r23.xyxx
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r26.w, r33.xyzx, t9.xxxx, s13, r10.w
                      mad r16.w, r26.w, l(0.125000), r16.w
                      iadd r20.x, r20.x, l(1)
                    endloop 
                  else 
                    utof r23.z, r14.w
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r16.w, r23.xyzx, t9.xxxx, s13, r10.w
                  endif 
                  mul r10.w, r16.w, r16.w
                  mul r10.w, r16.w, r10.w
                else 
                  mov r10.w, l(1.000000)
                endif 
              else 
                mov r10.w, l(1.000000)
              endif 
              mul r10.w, r10.w, r15.w
              lt r14.w, l(0.000000), r10.w
              if_nz r14.w
                mul r14.w, r2.w, r34.x
                mul r14.w, r14.w, l(0.250000)
                ubfe r15.w, l(4), l(16), r34.w
                ult r20.x, l(0), r15.w
                and r20.x, r1.z, r20.x
                if_nz r20.x
                  iadd r15.w, r15.w, cb2[0].x
                  iadd r15.w, r15.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r20.x, r15.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r15.w, l(68), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r15.w, l(84), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r15.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r15.w, l(116), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r15.w, l(132), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r15.w, l(148), t12.xyzw
                  mad r23.x, |r13.w|, l(-0.200000), l(0.400000)
                  lt r23.y, r13.w, l(0.000000)
                  movc r23.x, r23.y, -r23.x, r23.x
                  mad r24.xyz, r6.xyzx, r23.xxxx, v7.xyzx
                  dp4 r23.x, r33.xyzw, r24.xyzw
                  dp4 r23.y, r35.xyzw, r24.xyzw
                  dp4 r23.z, r36.xyzw, r24.xyzw
                  dp4 r24.x, r37.xyzw, r24.xyzw
                  lt r24.y, r24.x, r23.z
                  div r23.xy, r23.xyxx, r24.xxxx
                  mad r23.xy, r23.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r23.xy, r39.zwzz, r23.xyxx
                  mul r23.xy, r39.xyxx, r23.xyxx
                  div r33.xy, r20.xxxx, r38.xzxx
                  add r33.zw, -r33.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                  ge r33.zw, r23.xxxy, r33.zzzw
                  ge r33.xy, r33.xyxx, r23.xyxx
                  or r33.xy, r33.xyxx, r33.zwzz
                  or r24.z, r33.y, r33.x
                  or r24.y, r24.y, r24.z
                  if_z r24.y
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r24.y, r15.w, l(28), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xy, r15.w, l(164), t12.xyxx
                    mov_sat r23.xy, r23.xyxx
                    mad r34.xy, r23.xyxx, r38.xzxx, r38.ywyy
                    mul r15.w, r24.x, r33.y
                    mad r23.x, r33.x, r24.x, r23.z
                    div r15.w, r23.x, r15.w
                    max r15.w, r15.w, l(0.00006104)
                    and r23.x, r24.y, l(0x0000ffff)
                    if_nz r8.w
                      utof r24.z, r23.x
                      mov r23.yz, l(0,0,0,0)
                      loop 
                        ige r26.w, r23.z, l(8)
                        breakc_nz r26.w
                        dp2 r33.x, icb[r23.z + 0].xyxx, r27.xyxx
                        dp2 r33.y, icb[r23.z + 0].yxyy, r27.xzxx
                        mad r24.xy, r33.xyxx, r20.xxxx, r34.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.x, r24.xyzx, t9.xxxx, s13, r15.w
                        mad r23.y, r24.x, l(0.125000), r23.y
                        iadd r23.z, r23.z, l(1)
                      endloop 
                    else 
                      utof r34.z, r23.x
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.y, r34.xyzx, t9.xxxx, s13, r15.w
                    endif 
                    mul r15.w, r23.y, r23.y
                    mul r15.w, r23.y, r15.w
                  else 
                    mov r15.w, l(1.000000)
                  endif 
                  mul r10.w, r10.w, r15.w
                else 
                  ubfe r15.w, l(4), l(20), r34.w
                  ult r20.x, l(0), r15.w
                  and r20.x, r0.x, r20.x
                  if_nz r20.x
                    iadd r15.w, r15.w, cb2[0].x
                    iadd r15.w, r15.w, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r20.x, r15.w, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r15.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r15.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r15.w, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r15.w, l(116), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r15.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r15.w, l(148), t12.xyzw
                    mad r23.x, |r13.w|, l(-0.200000), l(0.400000)
                    lt r23.z, r13.w, l(0.000000)
                    movc r23.x, r23.z, -r23.x, r23.x
                    mad r25.xyz, r6.xyzx, r23.xxxx, v7.xyzx
                    dp4 r24.x, r33.xyzw, r25.xyzw
                    dp4 r24.y, r34.xyzw, r25.xyzw
                    dp4 r23.x, r35.xyzw, r25.xyzw
                    dp4 r23.z, r36.xyzw, r25.xyzw
                    lt r24.z, r23.z, r23.x
                    div r24.xy, r24.xyxx, r23.zzzz
                    mad r24.xy, r24.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r24.xy, r38.zwzz, r24.xyxx
                    mul r24.xy, r38.xyxx, r24.xyxx
                    div r25.xy, r20.xxxx, r37.xzxx
                    add r33.xy, -r25.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                    ge r33.xy, r24.xyxx, r33.xyxx
                    ge r25.xy, r25.xyxx, r24.xyxx
                    or r25.xy, r25.xyxx, r33.xyxx
                    or r25.x, r25.y, r25.x
                    or r24.z, r24.z, r25.x
                    if_z r24.z
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r24.z, r15.w, l(28), t12.xxxx
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r25.xy, r15.w, l(164), t12.xyxx
                      mov_sat r24.xy, r24.xyxx
                      mad r33.xy, r24.xyxx, r37.xzxx, r37.ywyy
                      mul r15.w, r23.z, r25.y
                      mad r23.x, r25.x, r23.z, r23.x
                      div r15.w, r23.x, r15.w
                      max r15.w, r15.w, l(0.00006104)
                      and r23.x, r24.z, l(0x0000ffff)
                      if_nz r8.w
                        utof r24.z, r23.x
                        mov r23.z, l(0)
                        mov r25.x, l(0)
                        loop 
                          ige r25.y, r25.x, l(8)
                          breakc_nz r25.y
                          dp2 r34.x, icb[r25.x + 0].xyxx, r28.xyxx
                          dp2 r34.y, icb[r25.x + 0].yxyy, r28.xzxx
                          mad r24.xy, r34.xyxx, r20.xxxx, r33.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.x, r24.xyzx, t9.xxxx, s13, r15.w
                          mad r23.z, r24.x, l(0.125000), r23.z
                          iadd r25.x, r25.x, l(1)
                        endloop 
                      else 
                        utof r33.z, r23.x
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.z, r33.xyzx, t9.xxxx, s13, r15.w
                      endif 
                      mul r15.w, r23.z, r23.z
                      mul r15.w, r23.z, r15.w
                    else 
                      mov r15.w, l(1.000000)
                    endif 
                    mul r10.w, r10.w, r15.w
                  endif 
                endif 
                mad r15.w, -|r13.w|, r5.x, l(1.000000)
                mul r15.w, r15.w, r15.w
                mad r15.w, -r15.w, l(0.620000), l(0.620000)
                add r15.w, -|r13.w|, r15.w
                mad r15.w, r3.y, r15.w, |r13.w|
                mul r15.w, r10.w, r15.w
                lt r20.x, l(0.000000), r13.w
                mad r24.xyz, r15.wwww, r22.xywx, r18.xyzx
                mov_sat r13.w, r13.w
                mad r21.xyz, r21.xyzx, r11.wwww, r0.yzwy
                dp3 r11.w, r21.xyzx, r21.xyzx
                rsq r11.w, r11.w
                mul r21.xyz, r11.wwww, r21.xyzx
                dp3 r11.w, r21.xyzx, r0.yzwy
                dp3 r15.w, r6.xyzx, r21.xyzx
                mad r21.x, |r15.w|, r2.w, -|r15.w|
                mad r15.w, |r15.w|, r21.x, l(1.000000)
                mad r21.x, r13.w, r3.w, r4.w
                mul r15.w, r15.w, r15.w
                mul r15.w, r21.x, r15.w
                rcp r15.w, r15.w
                mul r13.w, r14.w, r13.w
                mul r13.w, r13.w, r15.w
                mul r10.w, r10.w, r13.w
                mad r21.xyz, r10.wwww, r22.xywx, r32.xyzx
                add_sat r11.w, -r11.w, l(1.000000)
                mul r13.w, r11.w, r11.w
                mul r13.w, r13.w, r13.w
                mul r11.w, r11.w, r13.w
                mul r10.w, r10.w, r11.w
                mad r22.xyw, r10.wwww, r22.xyxw, r31.xyxz
                movc r18.xyz, r20.xxxx, r24.xyzx, r18.xyzx
                movc r31.xyz, r20.xxxx, r22.xywx, r31.xyzx
                movc r32.xyz, r20.xxxx, r21.xyzx, r32.xyzx
              endif 
            endif 
          endif 
          break 
          default 
          break 
        endswitch 
      endif 
    endif 
  endloop 
  mov r12.yzw, r18.xxyz
  mov r29.xyz, r31.xyzx
  mov r30.xyz, r32.xyzx
  iadd r7.w, r7.w, l(32)
endloop 
add r0.xyz, -r7.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r0.xyz, r0.xyzx, r29.xyzx
mad r0.xyz, r30.xyzx, r7.xyzx, r0.xyzx
mad r0.xyz, r12.yzwy, r4.xyzx, r0.xyzx
add r0.w, -cb0[19].w, l(1.000000)
mul r0.w, r0.w, r9.w
mad r1.xyz, r1.xywx, r3.zzzz, -r5.yzwy
mad r1.xyz, r0.wwww, r1.xyzx, r5.yzwy
dp3 r0.w, r0.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
max r0.w, r0.w, l(0.000100)
max r0.w, r0.w, cb1[85].x
mul r2.xyz, r0.wwww, r1.xyzx
movc r1.xyz, cb0[17].wwww, r2.xyzx, r1.xyzx
add r0.xyz, r0.xyzx, r1.xyzx
lt r0.w, l(0.000000), cb2[9].z
if_nz r0.w
  dp3 r0.w, v7.xyzx, v7.xyzx
  rsq r1.x, r0.w
  mul r1.xyz, r1.xxxx, v7.xyzx
  sqrt r0.w, r0.w
  lt r1.w, l(0.000000), cb2[13].w
  if_nz r1.w
    mad r2.xy, r0.wwww, cb2[15].xyxx, cb2[14].zwzz
    mul r2.xy, r2.xyxx, cb2[16].xyxx
    lt r1.w, l(0.010000), |v7.z|
    mul r2.zw, v7.zzzz, cb2[15].zzzw
    mul r3.xy, r2.zwzz, l(-1.442695, -1.442695, 0.000000, 0.000000)
    exp r3.xy, r3.xyxx
    add r3.xy, -r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    div r2.zw, r3.xxxy, r2.zzzw
    mul r2.zw, r2.zzzw, r2.xxxy
    movc r2.xy, r1.wwww, r2.zwzz, r2.xyxx
    mul r2.xzw, r2.xxxx, cb2[12].xxyz
    exp r2.xzw, r2.xxzw
    mul r3.xyz, r2.yyyy, cb2[12].xyzx
    exp r3.xyz, r3.xyzx
    add r3.xyz, -r2.xzwx, r3.xyzx
    mad r2.xyz, cb2[13].wwww, r3.xyzx, r2.xzwx
  else 
    mad r1.w, r0.w, cb2[15].x, cb2[14].z
    mul r1.w, r1.w, cb2[16].x
    lt r2.w, l(0.010000), |v7.z|
    mul r3.x, v7.z, cb2[15].z
    mul r3.y, r3.x, l(-1.442695)
    exp r3.y, r3.y
    add r3.y, -r3.y, l(1.000000)
    div r3.x, r3.y, r3.x
    mul r3.x, r1.w, r3.x
    movc r1.w, r2.w, r3.x, r1.w
    mul r3.xyz, r1.wwww, cb2[12].xyzx
    exp r2.xyz, r3.xyzx
  endif 
  mad r2.xyz, r2.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r2.xyz, r2.xyzx, -cb2[9].zzzz
  dp3 r1.x, cb2[7].yzwy, -r1.xyzx
  mad r1.y, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r1.z, cb2[8].w, -r1.x, l(1.000000)
  mul r1.z, r1.z, r1.z
  mul r1.z, r1.z, l(12.566371)
  div r1.y, r1.y, r1.z
  add r0.w, r0.w, -cb2[10].w
  mul_sat r0.w, r0.w, cb2[11].w
  mul r0.w, r0.w, r1.y
  mov_sat r1.x, r1.x
  mad r1.x, r1.x, r1.x, l(1.000000)
  mad r1.x, r1.x, l(0.05968310), l(-1.000000)
  mad r1.x, cb2[8].z, r1.x, l(1.000000)
  mul r1.yzw, r0.wwww, cb2[11].xxyz
  mad r1.xyz, r1.xxxx, cb2[10].xyzx, r1.yzwy
  mul r1.xyz, r1.xyzx, cb2[9].wwww
  add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r1.xyz, r1.xyzx, r3.xyzx
  mad r1.xyz, r0.xyzx, r2.xyzx, r1.xyzx
else 
  mul r0.w, v7.z, cb2[6].x
  mad r1.w, cb2[6].x, v7.z, cb2[5].x
  lt r2.x, |r0.w|, l(0.000100)
  min r2.y, r1.w, l(64.000000)
  mul r2.y, r2.y, l(1.442695)
  exp r2.y, r2.y
  mov_sat r2.z, cb2[6].z
  lt r2.w, r1.w, l(0.000000)
  add r1.w, r1.w, l(1.000000)
  movc r1.w, r2.w, r2.y, r1.w
  add r1.w, r1.w, -cb2[6].z
  movc r0.w, r2.x, l(1.000000), r0.w
  div r0.w, r1.w, r0.w
  movc r0.w, r2.x, r2.z, r0.w
  mul r0.w, r0.w, cb2[5].z
  dp3 r1.w, v7.xyzx, v7.xyzx
  sqrt r2.x, r1.w
  mad r0.w, r0.w, r2.x, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  rsq r1.w, r1.w
  mul r2.xyz, r1.wwww, v7.xyzx
  dp3 r1.w, cb2[7].yzwy, r2.xyzx
  mad_sat r1.w, cb2[8].y, r1.w, cb2[8].x
  add r2.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r2.xyzw, r1.wwww, r2.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r2.w
  add r2.xyz, -r0.xyzx, r2.xyzx
  mad r1.xyz, r0.wwww, r2.xyzx, r0.xyzx
endif 
mul r0.xyz, r1.xyzx, cb1[85].yyyy
ge r1.xyz, r0.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.xyz, r0.xyzx, r1.xyzx
min r0.xyz, r0.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
max r1.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r9.xyz, r9.wwww, r1.xyzx
and r0.w, r9.w, l(0x7f800000)
ieq r0.w, r0.w, l(0x7f800000)
eq r2.xyzw, r9.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
and r2.xy, r2.zwzz, r2.xyxx
and r1.w, r2.y, r2.x
or r0.w, r0.w, r1.w
if_z r0.w
  ftou r2.xy, v0.xyxx
  imm_atomic_iadd r2.z, u6, r2.xyxx, l(1)
  ult r0.w, r2.z, cb2[58].z
  if_nz r0.w
    max r0.w, r9.z, r9.y
    max r0.w, r0.w, r9.x
    mov r0.w, |r0.w|
    and r0.w, r0.w, l(0x7f800000)
    iadd r0.w, r0.w, l(0x00800000)
    mad r1.xyz, r1.xyzx, r9.wwww, r0.wwww
    ubfe r1.x, l(8), l(15), r1.x
    ushr r1.yz, r1.yyzy, l(0, 15, 15, 0)
    bfi r1.yz, l(0, 8, 8, 0), l(0, 8, 16, 0), r1.yyzy, l(0, 0, 0, 0)
    iadd r1.x, r1.y, r1.x
    iadd r1.x, r1.z, r1.x
    ishl r0.w, r0.w, l(1)
    iadd r1.xzw, r0.wwww, r1.xxxx
    mov_sat r0.w, r9.w
    mul r0.w, r0.w, l(2046.000000)
    ftou r0.w, r0.w
    ishl r2.w, v0.z, l(2)
    and r0.w, r0.w, l(2046)
    bfi r1.y, l(11), l(0), r0.w, r2.w
    store_uav_typed u7.xyzw, r2.xyzz, r1.xyzw
    mov r0.w, l(-1)
  else 
    mov r0.w, l(0)
  endif 
else 
  mov r0.w, l(-1)
endif 
mul r9.xyz, r9.wwww, r0.xyzx
movc o0.xyzw, r0.wwww, l(0,0,0,0), r9.xyzw
ret 
// Approximately 2502 instruction slots used
